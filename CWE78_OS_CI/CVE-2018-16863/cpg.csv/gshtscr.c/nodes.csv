command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5122780	File	data/converged/CVE-2018-16863_ghostpdl/gshtscr.c								
ANR	5122781	DeclStmt									
ANR	5122782	Decl							const bool	const bool	FORCE_STRIP_HALFTONES
ANR	5122783	DeclStmt									
ANR	5122784	Decl							gs_ptr_type_t	gs_ptr_type_t	ret
ANR	5122785	Function	gs_setaccuratescreens	58:0:1834:2057							
ANR	5122786	FunctionDef	"gs_setaccuratescreens (gs_memory_t * mem , bool accurate)"		5122785	0					
ANR	5122787	CompoundStatement		63:0:1948:2057	5122785	0					
ANR	5122788	IdentifierDeclStatement	gs_lib_ctx_t * ctx = gs_lib_ctx_get_interp_instance ( mem ) ;	64:4:1954:2009	5122785	0	True				
ANR	5122789	IdentifierDecl	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122785	0					
ANR	5122790	IdentifierDeclType	gs_lib_ctx_t *		5122785	0					
ANR	5122791	Identifier	ctx		5122785	1					
ANR	5122792	AssignmentExpression	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122785	2		=			
ANR	5122793	Identifier	ctx		5122785	0					
ANR	5122794	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5122785	1					
ANR	5122795	Callee	gs_lib_ctx_get_interp_instance		5122785	0					
ANR	5122796	Identifier	gs_lib_ctx_get_interp_instance		5122785	0					
ANR	5122797	ArgumentList	mem		5122785	1					
ANR	5122798	Argument	mem		5122785	0					
ANR	5122799	Identifier	mem		5122785	0					
ANR	5122800	ExpressionStatement	ctx -> screen_accurate_screens = accurate	66:4:2016:2055	5122785	1	True				
ANR	5122801	AssignmentExpression	ctx -> screen_accurate_screens = accurate		5122785	0		=			
ANR	5122802	PtrMemberAccess	ctx -> screen_accurate_screens		5122785	0					
ANR	5122803	Identifier	ctx		5122785	0					
ANR	5122804	Identifier	screen_accurate_screens		5122785	1					
ANR	5122805	Identifier	accurate		5122785	1					
ANR	5122806	ReturnType	RELOC_PTRS_END void		5122785	1					
ANR	5122807	Identifier	gs_setaccuratescreens		5122785	2					
ANR	5122808	ParameterList	"gs_memory_t * mem , bool accurate"		5122785	3					
ANR	5122809	Parameter	gs_memory_t * mem	62:22:1915:1930	5122785	0	True				
ANR	5122810	ParameterType	gs_memory_t *		5122785	0					
ANR	5122811	Identifier	mem		5122785	1					
ANR	5122812	Parameter	bool accurate	62:40:1933:1945	5122785	1	True				
ANR	5122813	ParameterType	bool		5122785	0					
ANR	5122814	Identifier	accurate		5122785	1					
ANR	5122815	CFGEntryNode	ENTRY		5122785		True				
ANR	5122816	CFGExitNode	EXIT		5122785		True				
ANR	5122817	Symbol	ctx -> screen_accurate_screens		5122785						
ANR	5122818	Symbol	mem		5122785						
ANR	5122819	Symbol	accurate		5122785						
ANR	5122820	Symbol	ctx		5122785						
ANR	5122821	Symbol	gs_lib_ctx_get_interp_instance		5122785						
ANR	5122822	Symbol	* ctx		5122785						
ANR	5122823	Function	gs_currentaccuratescreens	68:0:2059:2213							
ANR	5122824	FunctionDef	gs_currentaccuratescreens (gs_memory_t * mem)		5122823	0					
ANR	5122825	CompoundStatement		70:0:2108:2213	5122823	0					
ANR	5122826	IdentifierDeclStatement	gs_lib_ctx_t * ctx = gs_lib_ctx_get_interp_instance ( mem ) ;	71:4:2114:2169	5122823	0	True				
ANR	5122827	IdentifierDecl	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122823	0					
ANR	5122828	IdentifierDeclType	gs_lib_ctx_t *		5122823	0					
ANR	5122829	Identifier	ctx		5122823	1					
ANR	5122830	AssignmentExpression	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122823	2		=			
ANR	5122831	Identifier	ctx		5122823	0					
ANR	5122832	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5122823	1					
ANR	5122833	Callee	gs_lib_ctx_get_interp_instance		5122823	0					
ANR	5122834	Identifier	gs_lib_ctx_get_interp_instance		5122823	0					
ANR	5122835	ArgumentList	mem		5122823	1					
ANR	5122836	Argument	mem		5122823	0					
ANR	5122837	Identifier	mem		5122823	0					
ANR	5122838	ReturnStatement	return ctx -> screen_accurate_screens ;	73:4:2176:2211	5122823	1	True				
ANR	5122839	PtrMemberAccess	ctx -> screen_accurate_screens		5122823	0					
ANR	5122840	Identifier	ctx		5122823	0					
ANR	5122841	Identifier	screen_accurate_screens		5122823	1					
ANR	5122842	ReturnType	bool		5122823	1					
ANR	5122843	Identifier	gs_currentaccuratescreens		5122823	2					
ANR	5122844	ParameterList	gs_memory_t * mem		5122823	3					
ANR	5122845	Parameter	gs_memory_t * mem	69:26:2090:2105	5122823	0	True				
ANR	5122846	ParameterType	gs_memory_t *		5122823	0					
ANR	5122847	Identifier	mem		5122823	1					
ANR	5122848	CFGEntryNode	ENTRY		5122823		True				
ANR	5122849	CFGExitNode	EXIT		5122823		True				
ANR	5122850	Symbol	ctx -> screen_accurate_screens		5122823						
ANR	5122851	Symbol	mem		5122823						
ANR	5122852	Symbol	ctx		5122823						
ANR	5122853	Symbol	gs_lib_ctx_get_interp_instance		5122823						
ANR	5122854	Symbol	* ctx		5122823						
ANR	5122855	Function	gs_setminscreenlevels	76:0:2216:2382							
ANR	5122856	FunctionDef	"gs_setminscreenlevels (gs_memory_t * mem , uint levels)"		5122855	0					
ANR	5122857	CompoundStatement		78:0:2274:2382	5122855	0					
ANR	5122858	IdentifierDeclStatement	gs_lib_ctx_t * ctx = gs_lib_ctx_get_interp_instance ( mem ) ;	79:4:2280:2335	5122855	0	True				
ANR	5122859	IdentifierDecl	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122855	0					
ANR	5122860	IdentifierDeclType	gs_lib_ctx_t *		5122855	0					
ANR	5122861	Identifier	ctx		5122855	1					
ANR	5122862	AssignmentExpression	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122855	2		=			
ANR	5122863	Identifier	ctx		5122855	0					
ANR	5122864	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5122855	1					
ANR	5122865	Callee	gs_lib_ctx_get_interp_instance		5122855	0					
ANR	5122866	Identifier	gs_lib_ctx_get_interp_instance		5122855	0					
ANR	5122867	ArgumentList	mem		5122855	1					
ANR	5122868	Argument	mem		5122855	0					
ANR	5122869	Identifier	mem		5122855	0					
ANR	5122870	ExpressionStatement	ctx -> screen_min_screen_levels = levels	81:4:2342:2380	5122855	1	True				
ANR	5122871	AssignmentExpression	ctx -> screen_min_screen_levels = levels		5122855	0		=			
ANR	5122872	PtrMemberAccess	ctx -> screen_min_screen_levels		5122855	0					
ANR	5122873	Identifier	ctx		5122855	0					
ANR	5122874	Identifier	screen_min_screen_levels		5122855	1					
ANR	5122875	Identifier	levels		5122855	1					
ANR	5122876	ReturnType	void		5122855	1					
ANR	5122877	Identifier	gs_setminscreenlevels		5122855	2					
ANR	5122878	ParameterList	"gs_memory_t * mem , uint levels"		5122855	3					
ANR	5122879	Parameter	gs_memory_t * mem	77:22:2243:2258	5122855	0	True				
ANR	5122880	ParameterType	gs_memory_t *		5122855	0					
ANR	5122881	Identifier	mem		5122855	1					
ANR	5122882	Parameter	uint levels	77:40:2261:2271	5122855	1	True				
ANR	5122883	ParameterType	uint		5122855	0					
ANR	5122884	Identifier	levels		5122855	1					
ANR	5122885	CFGEntryNode	ENTRY		5122855		True				
ANR	5122886	CFGExitNode	EXIT		5122855		True				
ANR	5122887	Symbol	mem		5122855						
ANR	5122888	Symbol	ctx -> screen_min_screen_levels		5122855						
ANR	5122889	Symbol	ctx		5122855						
ANR	5122890	Symbol	gs_lib_ctx_get_interp_instance		5122855						
ANR	5122891	Symbol	levels		5122855						
ANR	5122892	Symbol	* ctx		5122855						
ANR	5122893	Function	gs_currentminscreenlevels	83:0:2384:2539							
ANR	5122894	FunctionDef	gs_currentminscreenlevels (gs_memory_t * mem)		5122893	0					
ANR	5122895	CompoundStatement		85:0:2433:2539	5122893	0					
ANR	5122896	IdentifierDeclStatement	gs_lib_ctx_t * ctx = gs_lib_ctx_get_interp_instance ( mem ) ;	86:4:2439:2494	5122893	0	True				
ANR	5122897	IdentifierDecl	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122893	0					
ANR	5122898	IdentifierDeclType	gs_lib_ctx_t *		5122893	0					
ANR	5122899	Identifier	ctx		5122893	1					
ANR	5122900	AssignmentExpression	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5122893	2		=			
ANR	5122901	Identifier	ctx		5122893	0					
ANR	5122902	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5122893	1					
ANR	5122903	Callee	gs_lib_ctx_get_interp_instance		5122893	0					
ANR	5122904	Identifier	gs_lib_ctx_get_interp_instance		5122893	0					
ANR	5122905	ArgumentList	mem		5122893	1					
ANR	5122906	Argument	mem		5122893	0					
ANR	5122907	Identifier	mem		5122893	0					
ANR	5122908	ReturnStatement	return ctx -> screen_min_screen_levels ;	88:4:2501:2537	5122893	1	True				
ANR	5122909	PtrMemberAccess	ctx -> screen_min_screen_levels		5122893	0					
ANR	5122910	Identifier	ctx		5122893	0					
ANR	5122911	Identifier	screen_min_screen_levels		5122893	1					
ANR	5122912	ReturnType	uint		5122893	1					
ANR	5122913	Identifier	gs_currentminscreenlevels		5122893	2					
ANR	5122914	ParameterList	gs_memory_t * mem		5122893	3					
ANR	5122915	Parameter	gs_memory_t * mem	84:26:2415:2430	5122893	0	True				
ANR	5122916	ParameterType	gs_memory_t *		5122893	0					
ANR	5122917	Identifier	mem		5122893	1					
ANR	5122918	CFGEntryNode	ENTRY		5122893		True				
ANR	5122919	CFGExitNode	EXIT		5122893		True				
ANR	5122920	Symbol	mem		5122893						
ANR	5122921	Symbol	ctx -> screen_min_screen_levels		5122893						
ANR	5122922	Symbol	ctx		5122893						
ANR	5122923	Symbol	gs_lib_ctx_get_interp_instance		5122893						
ANR	5122924	Symbol	* ctx		5122893						
ANR	5122925	Function	gs_gshtscr_init	93:0:2652:2780							
ANR	5122926	FunctionDef	gs_gshtscr_init (gs_memory_t * mem)		5122925	0					
ANR	5122927	CompoundStatement		95:0:2690:2780	5122925	0					
ANR	5122928	ExpressionStatement	"gs_setaccuratescreens ( mem , false )"	96:4:2696:2729	5122925	0	True				
ANR	5122929	CallExpression	"gs_setaccuratescreens ( mem , false )"		5122925	0					
ANR	5122930	Callee	gs_setaccuratescreens		5122925	0					
ANR	5122931	Identifier	gs_setaccuratescreens		5122925	0					
ANR	5122932	ArgumentList	mem		5122925	1					
ANR	5122933	Argument	mem		5122925	0					
ANR	5122934	Identifier	mem		5122925	0					
ANR	5122935	Argument	false		5122925	1					
ANR	5122936	Identifier	false		5122925	0					
ANR	5122937	ExpressionStatement	"gs_setminscreenlevels ( mem , 1 )"	97:4:2735:2764	5122925	1	True				
ANR	5122938	CallExpression	"gs_setminscreenlevels ( mem , 1 )"		5122925	0					
ANR	5122939	Callee	gs_setminscreenlevels		5122925	0					
ANR	5122940	Identifier	gs_setminscreenlevels		5122925	0					
ANR	5122941	ArgumentList	mem		5122925	1					
ANR	5122942	Argument	mem		5122925	0					
ANR	5122943	Identifier	mem		5122925	0					
ANR	5122944	Argument	1		5122925	1					
ANR	5122945	PrimaryExpression	1		5122925	0					
ANR	5122946	ReturnStatement	return 0 ;	98:4:2770:2778	5122925	2	True				
ANR	5122947	PrimaryExpression	0		5122925	0					
ANR	5122948	ReturnType	int		5122925	1					
ANR	5122949	Identifier	gs_gshtscr_init		5122925	2					
ANR	5122950	ParameterList	gs_memory_t * mem		5122925	3					
ANR	5122951	Parameter	gs_memory_t * mem	94:16:2672:2687	5122925	0	True				
ANR	5122952	ParameterType	gs_memory_t *		5122925	0					
ANR	5122953	Identifier	mem		5122925	1					
ANR	5122954	CFGEntryNode	ENTRY		5122925		True				
ANR	5122955	CFGExitNode	EXIT		5122925		True				
ANR	5122956	Symbol	mem		5122925						
ANR	5122957	Symbol	false		5122925						
ANR	5122958	Function	gx_compute_cell_values	120:0:3643:5152							
ANR	5122959	FunctionDef	gx_compute_cell_values (gx_ht_cell_params_t * phcp)		5122958	0					
ANR	5122960	CompoundStatement		122:0:3699:5152	5122958	0					
ANR	5122961	IdentifierDeclStatement	"const int M = phcp -> M , N = phcp -> N , M1 = phcp -> M1 , N1 = phcp -> N1 ;"	123:4:3705:3769	5122958	0	True				
ANR	5122962	IdentifierDecl	M = phcp -> M		5122958	0					
ANR	5122963	IdentifierDeclType	const int		5122958	0					
ANR	5122964	Identifier	M		5122958	1					
ANR	5122965	AssignmentExpression	M = phcp -> M		5122958	2		=			
ANR	5122966	Identifier	M		5122958	0					
ANR	5122967	PtrMemberAccess	phcp -> M		5122958	1					
ANR	5122968	Identifier	phcp		5122958	0					
ANR	5122969	Identifier	M		5122958	1					
ANR	5122970	IdentifierDecl	N = phcp -> N		5122958	1					
ANR	5122971	IdentifierDeclType	const int		5122958	0					
ANR	5122972	Identifier	N		5122958	1					
ANR	5122973	AssignmentExpression	N = phcp -> N		5122958	2		=			
ANR	5122974	Identifier	N		5122958	0					
ANR	5122975	PtrMemberAccess	phcp -> N		5122958	1					
ANR	5122976	Identifier	phcp		5122958	0					
ANR	5122977	Identifier	N		5122958	1					
ANR	5122978	IdentifierDecl	M1 = phcp -> M1		5122958	2					
ANR	5122979	IdentifierDeclType	const int		5122958	0					
ANR	5122980	Identifier	M1		5122958	1					
ANR	5122981	AssignmentExpression	M1 = phcp -> M1		5122958	2		=			
ANR	5122982	Identifier	M1		5122958	0					
ANR	5122983	PtrMemberAccess	phcp -> M1		5122958	1					
ANR	5122984	Identifier	phcp		5122958	0					
ANR	5122985	Identifier	M1		5122958	1					
ANR	5122986	IdentifierDecl	N1 = phcp -> N1		5122958	3					
ANR	5122987	IdentifierDeclType	const int		5122958	0					
ANR	5122988	Identifier	N1		5122958	1					
ANR	5122989	AssignmentExpression	N1 = phcp -> N1		5122958	2		=			
ANR	5122990	Identifier	N1		5122958	0					
ANR	5122991	PtrMemberAccess	phcp -> N1		5122958	1					
ANR	5122992	Identifier	phcp		5122958	0					
ANR	5122993	Identifier	N1		5122958	1					
ANR	5122994	IdentifierDeclStatement	"const uint m = any_abs ( M ) , n = any_abs ( N ) ;"	124:4:3775:3816	5122958	1	True				
ANR	5122995	IdentifierDecl	m = any_abs ( M )		5122958	0					
ANR	5122996	IdentifierDeclType	const uint		5122958	0					
ANR	5122997	Identifier	m		5122958	1					
ANR	5122998	AssignmentExpression	m = any_abs ( M )		5122958	2		=			
ANR	5122999	Identifier	m		5122958	0					
ANR	5123000	CallExpression	any_abs ( M )		5122958	1					
ANR	5123001	Callee	any_abs		5122958	0					
ANR	5123002	Identifier	any_abs		5122958	0					
ANR	5123003	ArgumentList	M		5122958	1					
ANR	5123004	Argument	M		5122958	0					
ANR	5123005	Identifier	M		5122958	0					
ANR	5123006	IdentifierDecl	n = any_abs ( N )		5122958	1					
ANR	5123007	IdentifierDeclType	const uint		5122958	0					
ANR	5123008	Identifier	n		5122958	1					
ANR	5123009	AssignmentExpression	n = any_abs ( N )		5122958	2		=			
ANR	5123010	Identifier	n		5122958	0					
ANR	5123011	CallExpression	any_abs ( N )		5122958	1					
ANR	5123012	Callee	any_abs		5122958	0					
ANR	5123013	Identifier	any_abs		5122958	0					
ANR	5123014	ArgumentList	N		5122958	1					
ANR	5123015	Argument	N		5122958	0					
ANR	5123016	Identifier	N		5122958	0					
ANR	5123017	IdentifierDeclStatement	"const uint m1 = any_abs ( M1 ) , n1 = any_abs ( N1 ) ;"	125:4:3822:3867	5122958	2	True				
ANR	5123018	IdentifierDecl	m1 = any_abs ( M1 )		5122958	0					
ANR	5123019	IdentifierDeclType	const uint		5122958	0					
ANR	5123020	Identifier	m1		5122958	1					
ANR	5123021	AssignmentExpression	m1 = any_abs ( M1 )		5122958	2		=			
ANR	5123022	Identifier	m1		5122958	0					
ANR	5123023	CallExpression	any_abs ( M1 )		5122958	1					
ANR	5123024	Callee	any_abs		5122958	0					
ANR	5123025	Identifier	any_abs		5122958	0					
ANR	5123026	ArgumentList	M1		5122958	1					
ANR	5123027	Argument	M1		5122958	0					
ANR	5123028	Identifier	M1		5122958	0					
ANR	5123029	IdentifierDecl	n1 = any_abs ( N1 )		5122958	1					
ANR	5123030	IdentifierDeclType	const uint		5122958	0					
ANR	5123031	Identifier	n1		5122958	1					
ANR	5123032	AssignmentExpression	n1 = any_abs ( N1 )		5122958	2		=			
ANR	5123033	Identifier	n1		5122958	0					
ANR	5123034	CallExpression	any_abs ( N1 )		5122958	1					
ANR	5123035	Callee	any_abs		5122958	0					
ANR	5123036	Identifier	any_abs		5122958	0					
ANR	5123037	ArgumentList	N1		5122958	1					
ANR	5123038	Argument	N1		5122958	0					
ANR	5123039	Identifier	N1		5122958	0					
ANR	5123040	IdentifierDeclStatement	const ulong C = phcp -> C = ( ulong ) m * m1 + ( ulong ) n * n1 ;	126:4:3873:3928	5122958	3	True				
ANR	5123041	IdentifierDecl	C = phcp -> C = ( ulong ) m * m1 + ( ulong ) n * n1		5122958	0					
ANR	5123042	IdentifierDeclType	const ulong		5122958	0					
ANR	5123043	Identifier	C		5122958	1					
ANR	5123044	AssignmentExpression	C = phcp -> C = ( ulong ) m * m1 + ( ulong ) n * n1		5122958	2		=			
ANR	5123045	Identifier	C		5122958	0					
ANR	5123046	AssignmentExpression	phcp -> C = ( ulong ) m * m1 + ( ulong ) n * n1		5122958	1		=			
ANR	5123047	PtrMemberAccess	phcp -> C		5122958	0					
ANR	5123048	Identifier	phcp		5122958	0					
ANR	5123049	Identifier	C		5122958	1					
ANR	5123050	AdditiveExpression	( ulong ) m * m1 + ( ulong ) n * n1		5122958	1		+			
ANR	5123051	MultiplicativeExpression	( ulong ) m * m1		5122958	0		*			
ANR	5123052	CastExpression	( ulong ) m		5122958	0					
ANR	5123053	CastTarget	ulong		5122958	0					
ANR	5123054	Identifier	m		5122958	1					
ANR	5123055	Identifier	m1		5122958	1					
ANR	5123056	MultiplicativeExpression	( ulong ) n * n1		5122958	1		*			
ANR	5123057	CastExpression	( ulong ) n		5122958	0					
ANR	5123058	CastTarget	ulong		5122958	0					
ANR	5123059	Identifier	n		5122958	1					
ANR	5123060	Identifier	n1		5122958	1					
ANR	5123061	IdentifierDeclStatement	"const int D = phcp -> D = igcd ( m1 , n ) ;"	127:4:3934:3969	5122958	4	True				
ANR	5123062	IdentifierDecl	"D = phcp -> D = igcd ( m1 , n )"		5122958	0					
ANR	5123063	IdentifierDeclType	const int		5122958	0					
ANR	5123064	Identifier	D		5122958	1					
ANR	5123065	AssignmentExpression	"D = phcp -> D = igcd ( m1 , n )"		5122958	2		=			
ANR	5123066	Identifier	D		5122958	0					
ANR	5123067	AssignmentExpression	"phcp -> D = igcd ( m1 , n )"		5122958	1		=			
ANR	5123068	PtrMemberAccess	phcp -> D		5122958	0					
ANR	5123069	Identifier	phcp		5122958	0					
ANR	5123070	Identifier	D		5122958	1					
ANR	5123071	CallExpression	"igcd ( m1 , n )"		5122958	1					
ANR	5123072	Callee	igcd		5122958	0					
ANR	5123073	Identifier	igcd		5122958	0					
ANR	5123074	ArgumentList	m1		5122958	1					
ANR	5123075	Argument	m1		5122958	0					
ANR	5123076	Identifier	m1		5122958	0					
ANR	5123077	Argument	n		5122958	1					
ANR	5123078	Identifier	n		5122958	0					
ANR	5123079	IdentifierDeclStatement	"const int D1 = phcp -> D1 = igcd ( m , n1 ) ;"	128:4:3975:4012	5122958	5	True				
ANR	5123080	IdentifierDecl	"D1 = phcp -> D1 = igcd ( m , n1 )"		5122958	0					
ANR	5123081	IdentifierDeclType	const int		5122958	0					
ANR	5123082	Identifier	D1		5122958	1					
ANR	5123083	AssignmentExpression	"D1 = phcp -> D1 = igcd ( m , n1 )"		5122958	2		=			
ANR	5123084	Identifier	D1		5122958	0					
ANR	5123085	AssignmentExpression	"phcp -> D1 = igcd ( m , n1 )"		5122958	1		=			
ANR	5123086	PtrMemberAccess	phcp -> D1		5122958	0					
ANR	5123087	Identifier	phcp		5122958	0					
ANR	5123088	Identifier	D1		5122958	1					
ANR	5123089	CallExpression	"igcd ( m , n1 )"		5122958	1					
ANR	5123090	Callee	igcd		5122958	0					
ANR	5123091	Identifier	igcd		5122958	0					
ANR	5123092	ArgumentList	m		5122958	1					
ANR	5123093	Argument	m		5122958	0					
ANR	5123094	Identifier	m		5122958	0					
ANR	5123095	Argument	n1		5122958	1					
ANR	5123096	Identifier	n1		5122958	0					
ANR	5123097	ExpressionStatement	"phcp -> W = C / D , phcp -> W1 = C / D1"	130:4:4019:4053	5122958	6	True				
ANR	5123098	Expression	"phcp -> W = C / D , phcp -> W1 = C / D1"		5122958	0					
ANR	5123099	AssignmentExpression	phcp -> W = C / D		5122958	0		=			
ANR	5123100	PtrMemberAccess	phcp -> W		5122958	0					
ANR	5123101	Identifier	phcp		5122958	0					
ANR	5123102	Identifier	W		5122958	1					
ANR	5123103	MultiplicativeExpression	C / D		5122958	1		/			
ANR	5123104	Identifier	C		5122958	0					
ANR	5123105	Identifier	D		5122958	1					
ANR	5123106	AssignmentExpression	phcp -> W1 = C / D1		5122958	1		=			
ANR	5123107	PtrMemberAccess	phcp -> W1		5122958	0					
ANR	5123108	Identifier	phcp		5122958	0					
ANR	5123109	Identifier	W1		5122958	1					
ANR	5123110	MultiplicativeExpression	C / D1		5122958	1		/			
ANR	5123111	Identifier	C		5122958	0					
ANR	5123112	Identifier	D1		5122958	1					
ANR	5123113	IfStatement	if ( M1 && N )		5122958	7					
ANR	5123114	Condition	M1 && N	133:8:4147:4153	5122958	0	True				
ANR	5123115	AndExpression	M1 && N		5122958	0		&&			
ANR	5123116	Identifier	M1		5122958	0					
ANR	5123117	Identifier	N		5122958	1					
ANR	5123118	CompoundStatement		14:8:500:509	5122958	1					
ANR	5123119	IdentifierDeclStatement	"int h = 0 , k = 0 , dy = 0 ;"	134:8:4166:4190	5122958	0	True				
ANR	5123120	IdentifierDecl	h = 0		5122958	0					
ANR	5123121	IdentifierDeclType	int		5122958	0					
ANR	5123122	Identifier	h		5122958	1					
ANR	5123123	AssignmentExpression	h = 0		5122958	2		=			
ANR	5123124	Identifier	h		5122958	0					
ANR	5123125	PrimaryExpression	0		5122958	1					
ANR	5123126	IdentifierDecl	k = 0		5122958	1					
ANR	5123127	IdentifierDeclType	int		5122958	0					
ANR	5123128	Identifier	k		5122958	1					
ANR	5123129	AssignmentExpression	k = 0		5122958	2		=			
ANR	5123130	Identifier	k		5122958	0					
ANR	5123131	PrimaryExpression	0		5122958	1					
ANR	5123132	IdentifierDecl	dy = 0		5122958	2					
ANR	5123133	IdentifierDeclType	int		5122958	0					
ANR	5123134	Identifier	dy		5122958	1					
ANR	5123135	AssignmentExpression	dy = 0		5122958	2		=			
ANR	5123136	Identifier	dy		5122958	0					
ANR	5123137	PrimaryExpression	0		5122958	1					
ANR	5123138	IdentifierDeclStatement	int shift ;	135:8:4200:4209	5122958	1	True				
ANR	5123139	IdentifierDecl	shift		5122958	0					
ANR	5123140	IdentifierDeclType	int		5122958	0					
ANR	5123141	Identifier	shift		5122958	1					
ANR	5123142	WhileStatement	while ( dy != D )		5122958	2					
ANR	5123143	Condition	dy != D	142:15:4418:4424	5122958	0	True				
ANR	5123144	EqualityExpression	dy != D		5122958	0		!=			
ANR	5123145	Identifier	dy		5122958	0					
ANR	5123146	Identifier	D		5122958	1					
ANR	5123147	IfStatement	if ( dy > D )		5122958	1					
ANR	5123148	Condition	dy > D	143:16:4443:4448	5122958	0	True				
ANR	5123149	RelationalExpression	dy > D		5122958	0		>			
ANR	5123150	Identifier	dy		5122958	0					
ANR	5123151	Identifier	D		5122958	1					
ANR	5123152	CompoundStatement		22:24:751:751	5122958	1					
ANR	5123153	IfStatement	if ( M1 > 0 )		5122958	0					
ANR	5123154	Condition	M1 > 0	144:20:4473:4478	5122958	0	True				
ANR	5123155	RelationalExpression	M1 > 0		5122958	0		>			
ANR	5123156	Identifier	M1		5122958	0					
ANR	5123157	PrimaryExpression	0		5122958	1					
ANR	5123158	ExpressionStatement	++ k	145:20:4501:4504	5122958	1	True				
ANR	5123159	UnaryExpression	++ k		5122958	0					
ANR	5123160	IncDec	++		5122958	0					
ANR	5123161	Identifier	k		5122958	1					
ANR	5123162	ElseStatement	else		5122958	0					
ANR	5123163	ExpressionStatement	-- k	147:20:4547:4550	5122958	0	True				
ANR	5123164	UnaryExpression	-- k		5122958	0					
ANR	5123165	IncDec	--		5122958	0					
ANR	5123166	Identifier	k		5122958	1					
ANR	5123167	ExpressionStatement	dy -= m1	148:16:4568:4576	5122958	1	True				
ANR	5123168	AssignmentExpression	dy -= m1		5122958	0		-=			
ANR	5123169	Identifier	dy		5122958	0					
ANR	5123170	Identifier	m1		5122958	1					
ANR	5123171	ElseStatement	else		5122958	0					
ANR	5123172	CompoundStatement		28:19:897:897	5122958	0					
ANR	5123173	IfStatement	if ( N > 0 )		5122958	0					
ANR	5123174	Condition	N > 0	150:20:4619:4623	5122958	0	True				
ANR	5123175	RelationalExpression	N > 0		5122958	0		>			
ANR	5123176	Identifier	N		5122958	0					
ANR	5123177	PrimaryExpression	0		5122958	1					
ANR	5123178	ExpressionStatement	++ h	151:20:4646:4649	5122958	1	True				
ANR	5123179	UnaryExpression	++ h		5122958	0					
ANR	5123180	IncDec	++		5122958	0					
ANR	5123181	Identifier	h		5122958	1					
ANR	5123182	ElseStatement	else		5122958	0					
ANR	5123183	ExpressionStatement	-- h	153:20:4692:4695	5122958	0	True				
ANR	5123184	UnaryExpression	-- h		5122958	0					
ANR	5123185	IncDec	--		5122958	0					
ANR	5123186	Identifier	h		5122958	1					
ANR	5123187	ExpressionStatement	dy += n	154:16:4713:4720	5122958	1	True				
ANR	5123188	AssignmentExpression	dy += n		5122958	0		+=			
ANR	5123189	Identifier	dy		5122958	0					
ANR	5123190	Identifier	n		5122958	1					
ANR	5123191	ExpressionStatement	shift = h * M + k * N1	156:8:4744:4766	5122958	3	True				
ANR	5123192	AssignmentExpression	shift = h * M + k * N1		5122958	0		=			
ANR	5123193	Identifier	shift		5122958	0					
ANR	5123194	AdditiveExpression	h * M + k * N1		5122958	1		+			
ANR	5123195	MultiplicativeExpression	h * M		5122958	0		*			
ANR	5123196	Identifier	h		5122958	0					
ANR	5123197	Identifier	M		5122958	1					
ANR	5123198	MultiplicativeExpression	k * N1		5122958	1		*			
ANR	5123199	Identifier	k		5122958	0					
ANR	5123200	Identifier	N1		5122958	1					
ANR	5123201	ExpressionStatement	"phcp -> S = imod ( - shift , phcp -> W )"	159:8:4882:4913	5122958	4	True				
ANR	5123202	AssignmentExpression	"phcp -> S = imod ( - shift , phcp -> W )"		5122958	0		=			
ANR	5123203	PtrMemberAccess	phcp -> S		5122958	0					
ANR	5123204	Identifier	phcp		5122958	0					
ANR	5123205	Identifier	S		5122958	1					
ANR	5123206	CallExpression	"imod ( - shift , phcp -> W )"		5122958	1					
ANR	5123207	Callee	imod		5122958	0					
ANR	5123208	Identifier	imod		5122958	0					
ANR	5123209	ArgumentList	- shift		5122958	1					
ANR	5123210	Argument	- shift		5122958	0					
ANR	5123211	UnaryOperationExpression	- shift		5122958	0					
ANR	5123212	UnaryOperator	-		5122958	0					
ANR	5123213	Identifier	shift		5122958	1					
ANR	5123214	Argument	phcp -> W		5122958	1					
ANR	5123215	PtrMemberAccess	phcp -> W		5122958	0					
ANR	5123216	Identifier	phcp		5122958	0					
ANR	5123217	Identifier	W		5122958	1					
ANR	5123218	ElseStatement	else		5122958	0					
ANR	5123219	ExpressionStatement	phcp -> S = 0	161:8:4934:4945	5122958	0	True				
ANR	5123220	AssignmentExpression	phcp -> S = 0		5122958	0		=			
ANR	5123221	PtrMemberAccess	phcp -> S		5122958	0					
ANR	5123222	Identifier	phcp		5122958	0					
ANR	5123223	Identifier	S		5122958	1					
ANR	5123224	PrimaryExpression	0		5122958	1					
ANR	5123225	ExpressionStatement	"if_debug12 ( 'h' , ""[h]MNR=(%d,%d)/%d, M'N'R'=(%d,%d)/%d => C=%lu, D=%d, D'=%d, W=%u, W'=%u, S=%d\\n"" , M , N , phcp -> R , M1 , N1 , phcp -> R1 , C , D , D1 , phcp -> W , phcp -> W1 , phcp -> S )"	162:4:4951:5150	5122958	8	True				
ANR	5123226	CallExpression	"if_debug12 ( 'h' , ""[h]MNR=(%d,%d)/%d, M'N'R'=(%d,%d)/%d => C=%lu, D=%d, D'=%d, W=%u, W'=%u, S=%d\\n"" , M , N , phcp -> R , M1 , N1 , phcp -> R1 , C , D , D1 , phcp -> W , phcp -> W1 , phcp -> S )"		5122958	0					
ANR	5123227	Callee	if_debug12		5122958	0					
ANR	5123228	Identifier	if_debug12		5122958	0					
ANR	5123229	ArgumentList	'h'		5122958	1					
ANR	5123230	Argument	'h'		5122958	0					
ANR	5123231	PrimaryExpression	'h'		5122958	0					
ANR	5123232	Argument	"""[h]MNR=(%d,%d)/%d, M'N'R'=(%d,%d)/%d => C=%lu, D=%d, D'=%d, W=%u, W'=%u, S=%d\\n"""		5122958	1					
ANR	5123233	PrimaryExpression	"""[h]MNR=(%d,%d)/%d, M'N'R'=(%d,%d)/%d => C=%lu, D=%d, D'=%d, W=%u, W'=%u, S=%d\\n"""		5122958	0					
ANR	5123234	Argument	M		5122958	2					
ANR	5123235	Identifier	M		5122958	0					
ANR	5123236	Argument	N		5122958	3					
ANR	5123237	Identifier	N		5122958	0					
ANR	5123238	Argument	phcp -> R		5122958	4					
ANR	5123239	PtrMemberAccess	phcp -> R		5122958	0					
ANR	5123240	Identifier	phcp		5122958	0					
ANR	5123241	Identifier	R		5122958	1					
ANR	5123242	Argument	M1		5122958	5					
ANR	5123243	Identifier	M1		5122958	0					
ANR	5123244	Argument	N1		5122958	6					
ANR	5123245	Identifier	N1		5122958	0					
ANR	5123246	Argument	phcp -> R1		5122958	7					
ANR	5123247	PtrMemberAccess	phcp -> R1		5122958	0					
ANR	5123248	Identifier	phcp		5122958	0					
ANR	5123249	Identifier	R1		5122958	1					
ANR	5123250	Argument	C		5122958	8					
ANR	5123251	Identifier	C		5122958	0					
ANR	5123252	Argument	D		5122958	9					
ANR	5123253	Identifier	D		5122958	0					
ANR	5123254	Argument	D1		5122958	10					
ANR	5123255	Identifier	D1		5122958	0					
ANR	5123256	Argument	phcp -> W		5122958	11					
ANR	5123257	PtrMemberAccess	phcp -> W		5122958	0					
ANR	5123258	Identifier	phcp		5122958	0					
ANR	5123259	Identifier	W		5122958	1					
ANR	5123260	Argument	phcp -> W1		5122958	12					
ANR	5123261	PtrMemberAccess	phcp -> W1		5122958	0					
ANR	5123262	Identifier	phcp		5122958	0					
ANR	5123263	Identifier	W1		5122958	1					
ANR	5123264	Argument	phcp -> S		5122958	13					
ANR	5123265	PtrMemberAccess	phcp -> S		5122958	0					
ANR	5123266	Identifier	phcp		5122958	0					
ANR	5123267	Identifier	S		5122958	1					
ANR	5123268	ReturnType	void		5122958	1					
ANR	5123269	Identifier	gx_compute_cell_values		5122958	2					
ANR	5123270	ParameterList	gx_ht_cell_params_t * phcp		5122958	3					
ANR	5123271	Parameter	gx_ht_cell_params_t * phcp	121:23:3671:3696	5122958	0	True				
ANR	5123272	ParameterType	gx_ht_cell_params_t *		5122958	0					
ANR	5123273	Identifier	phcp		5122958	1					
ANR	5123274	CFGEntryNode	ENTRY		5122958		True				
ANR	5123275	CFGExitNode	EXIT		5122958		True				
ANR	5123276	Symbol	n1		5122958						
ANR	5123277	Symbol	C		5122958						
ANR	5123278	Symbol	M1		5122958						
ANR	5123279	Symbol	D		5122958						
ANR	5123280	Symbol	phcp -> C		5122958						
ANR	5123281	Symbol	shift		5122958						
ANR	5123282	Symbol	imod		5122958						
ANR	5123283	Symbol	M		5122958						
ANR	5123284	Symbol	N		5122958						
ANR	5123285	Symbol	igcd		5122958						
ANR	5123286	Symbol	phcp -> N		5122958						
ANR	5123287	Symbol	phcp		5122958						
ANR	5123288	Symbol	phcp -> M		5122958						
ANR	5123289	Symbol	phcp -> R		5122958						
ANR	5123290	Symbol	dy		5122958						
ANR	5123291	Symbol	phcp -> S		5122958						
ANR	5123292	Symbol	any_abs		5122958						
ANR	5123293	Symbol	phcp -> N1		5122958						
ANR	5123294	Symbol	phcp -> D		5122958						
ANR	5123295	Symbol	phcp -> R1		5122958						
ANR	5123296	Symbol	phcp -> W1		5122958						
ANR	5123297	Symbol	N1		5122958						
ANR	5123298	Symbol	m1		5122958						
ANR	5123299	Symbol	h		5122958						
ANR	5123300	Symbol	phcp -> W		5122958						
ANR	5123301	Symbol	k		5122958						
ANR	5123302	Symbol	m		5122958						
ANR	5123303	Symbol	D1		5122958						
ANR	5123304	Symbol	n		5122958						
ANR	5123305	Symbol	phcp -> D1		5122958						
ANR	5123306	Symbol	phcp -> M1		5122958						
ANR	5123307	Symbol	* phcp		5122958						
ANR	5123308	DeclStmt									
ANR	5123309	Decl							int	"int ( gs_screen_halftone * ph , const gs_matrix * pmat , ulong max_size , uint min_levels , bool accurate , gx_ht_cell_params_t * phcp )"	pick_cell_size
ANR	5123310	Function	gs_screen_enum_alloc	173:0:5401:5557							
ANR	5123311	FunctionDef	"gs_screen_enum_alloc (gs_memory_t * mem , client_name_t cname)"		5123310	0					
ANR	5123312	CompoundStatement		175:0:5479:5557	5123310	0					
ANR	5123313	ReturnStatement	"return gs_alloc_struct ( mem , gs_screen_enum , & st_gs_screen_enum , cname ) ;"	176:4:5485:5555	5123310	0	True				
ANR	5123314	CallExpression	"gs_alloc_struct ( mem , gs_screen_enum , & st_gs_screen_enum , cname )"		5123310	0					
ANR	5123315	Callee	gs_alloc_struct		5123310	0					
ANR	5123316	Identifier	gs_alloc_struct		5123310	0					
ANR	5123317	ArgumentList	mem		5123310	1					
ANR	5123318	Argument	mem		5123310	0					
ANR	5123319	Identifier	mem		5123310	0					
ANR	5123320	Argument	gs_screen_enum		5123310	1					
ANR	5123321	Identifier	gs_screen_enum		5123310	0					
ANR	5123322	Argument	& st_gs_screen_enum		5123310	2					
ANR	5123323	UnaryOperationExpression	& st_gs_screen_enum		5123310	0					
ANR	5123324	UnaryOperator	&		5123310	0					
ANR	5123325	Identifier	st_gs_screen_enum		5123310	1					
ANR	5123326	Argument	cname		5123310	3					
ANR	5123327	Identifier	cname		5123310	0					
ANR	5123328	ReturnType	gs_screen_enum *		5123310	1					
ANR	5123329	Identifier	gs_screen_enum_alloc		5123310	2					
ANR	5123330	ParameterList	"gs_memory_t * mem , client_name_t cname"		5123310	3					
ANR	5123331	Parameter	gs_memory_t * mem	174:21:5439:5455	5123310	0	True				
ANR	5123332	ParameterType	gs_memory_t *		5123310	0					
ANR	5123333	Identifier	mem		5123310	1					
ANR	5123334	Parameter	client_name_t cname	174:40:5458:5476	5123310	1	True				
ANR	5123335	ParameterType	client_name_t		5123310	0					
ANR	5123336	Identifier	cname		5123310	1					
ANR	5123337	CFGEntryNode	ENTRY		5123310		True				
ANR	5123338	CFGExitNode	EXIT		5123310		True				
ANR	5123339	Symbol	& st_gs_screen_enum		5123310						
ANR	5123340	Symbol	mem		5123310						
ANR	5123341	Symbol	gs_alloc_struct		5123310						
ANR	5123342	Symbol	cname		5123310						
ANR	5123343	Symbol	gs_screen_enum		5123310						
ANR	5123344	Function	gs_screen_init	180:0:5596:5889							
ANR	5123345	FunctionDef	"gs_screen_init (gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp)"		5123344	0					
ANR	5123346	CompoundStatement		183:0:5698:5889	5123344	0					
ANR	5123347	IdentifierDeclStatement	gs_lib_ctx_t * ctx = gs_lib_ctx_get_interp_instance ( pgs -> memory ) ;	184:4:5704:5767	5123344	0	True				
ANR	5123348	IdentifierDecl	* ctx = gs_lib_ctx_get_interp_instance ( pgs -> memory )		5123344	0					
ANR	5123349	IdentifierDeclType	gs_lib_ctx_t *		5123344	0					
ANR	5123350	Identifier	ctx		5123344	1					
ANR	5123351	AssignmentExpression	* ctx = gs_lib_ctx_get_interp_instance ( pgs -> memory )		5123344	2		=			
ANR	5123352	Identifier	ctx		5123344	0					
ANR	5123353	CallExpression	gs_lib_ctx_get_interp_instance ( pgs -> memory )		5123344	1					
ANR	5123354	Callee	gs_lib_ctx_get_interp_instance		5123344	0					
ANR	5123355	Identifier	gs_lib_ctx_get_interp_instance		5123344	0					
ANR	5123356	ArgumentList	pgs -> memory		5123344	1					
ANR	5123357	Argument	pgs -> memory		5123344	0					
ANR	5123358	PtrMemberAccess	pgs -> memory		5123344	0					
ANR	5123359	Identifier	pgs		5123344	0					
ANR	5123360	Identifier	memory		5123344	1					
ANR	5123361	ReturnStatement	"return gs_screen_init_accurate ( penum , pgs , phsp , ctx -> screen_accurate_screens ) ;"	186:4:5774:5887	5123344	1	True				
ANR	5123362	CallExpression	"gs_screen_init_accurate ( penum , pgs , phsp , ctx -> screen_accurate_screens )"		5123344	0					
ANR	5123363	Callee	gs_screen_init_accurate		5123344	0					
ANR	5123364	Identifier	gs_screen_init_accurate		5123344	0					
ANR	5123365	ArgumentList	penum		5123344	1					
ANR	5123366	Argument	penum		5123344	0					
ANR	5123367	Identifier	penum		5123344	0					
ANR	5123368	Argument	pgs		5123344	1					
ANR	5123369	Identifier	pgs		5123344	0					
ANR	5123370	Argument	phsp		5123344	2					
ANR	5123371	Identifier	phsp		5123344	0					
ANR	5123372	Argument	ctx -> screen_accurate_screens		5123344	3					
ANR	5123373	PtrMemberAccess	ctx -> screen_accurate_screens		5123344	0					
ANR	5123374	Identifier	ctx		5123344	0					
ANR	5123375	Identifier	screen_accurate_screens		5123344	1					
ANR	5123376	ReturnType	int		5123344	1					
ANR	5123377	Identifier	gs_screen_init		5123344	2					
ANR	5123378	ParameterList	"gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp"		5123344	3					
ANR	5123379	Parameter	gs_screen_enum * penum	181:15:5615:5636	5123344	0	True				
ANR	5123380	ParameterType	gs_screen_enum *		5123344	0					
ANR	5123381	Identifier	penum		5123344	1					
ANR	5123382	Parameter	gs_gstate * pgs	181:39:5639:5653	5123344	1	True				
ANR	5123383	ParameterType	gs_gstate *		5123344	0					
ANR	5123384	Identifier	pgs		5123344	1					
ANR	5123385	Parameter	gs_screen_halftone * phsp	182:15:5671:5695	5123344	2	True				
ANR	5123386	ParameterType	gs_screen_halftone *		5123344	0					
ANR	5123387	Identifier	phsp		5123344	1					
ANR	5123388	CFGEntryNode	ENTRY		5123344		True				
ANR	5123389	CFGExitNode	EXIT		5123344		True				
ANR	5123390	Symbol	ctx -> screen_accurate_screens		5123344						
ANR	5123391	Symbol	phsp		5123344						
ANR	5123392	Symbol	* pgs		5123344						
ANR	5123393	Symbol	ctx		5123344						
ANR	5123394	Symbol	penum		5123344						
ANR	5123395	Symbol	gs_lib_ctx_get_interp_instance		5123344						
ANR	5123396	Symbol	pgs		5123344						
ANR	5123397	Symbol	pgs -> memory		5123344						
ANR	5123398	Symbol	* ctx		5123344						
ANR	5123399	Symbol	gs_screen_init_accurate		5123344						
ANR	5123400	Function	gs_screen_init_memory	189:0:5891:6251							
ANR	5123401	FunctionDef	"gs_screen_init_memory (gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem)"		5123400	0					
ANR	5123402	CompoundStatement		192:0:6035:6251	5123400	0					
ANR	5123403	IdentifierDeclStatement	"int code = gs_screen_order_init_memory ( & penum -> order , pgs , phsp , accurate , mem ) ;"	193:4:6041:6124	5123400	0	True				
ANR	5123404	IdentifierDecl	"code = gs_screen_order_init_memory ( & penum -> order , pgs , phsp , accurate , mem )"		5123400	0					
ANR	5123405	IdentifierDeclType	int		5123400	0					
ANR	5123406	Identifier	code		5123400	1					
ANR	5123407	AssignmentExpression	"code = gs_screen_order_init_memory ( & penum -> order , pgs , phsp , accurate , mem )"		5123400	2		=			
ANR	5123408	Identifier	code		5123400	0					
ANR	5123409	CallExpression	"gs_screen_order_init_memory ( & penum -> order , pgs , phsp , accurate , mem )"		5123400	1					
ANR	5123410	Callee	gs_screen_order_init_memory		5123400	0					
ANR	5123411	Identifier	gs_screen_order_init_memory		5123400	0					
ANR	5123412	ArgumentList	& penum -> order		5123400	1					
ANR	5123413	Argument	& penum -> order		5123400	0					
ANR	5123414	UnaryOperationExpression	& penum -> order		5123400	0					
ANR	5123415	UnaryOperator	&		5123400	0					
ANR	5123416	PtrMemberAccess	penum -> order		5123400	1					
ANR	5123417	Identifier	penum		5123400	0					
ANR	5123418	Identifier	order		5123400	1					
ANR	5123419	Argument	pgs		5123400	1					
ANR	5123420	Identifier	pgs		5123400	0					
ANR	5123421	Argument	phsp		5123400	2					
ANR	5123422	Identifier	phsp		5123400	0					
ANR	5123423	Argument	accurate		5123400	3					
ANR	5123424	Identifier	accurate		5123400	0					
ANR	5123425	Argument	mem		5123400	4					
ANR	5123426	Identifier	mem		5123400	0					
ANR	5123427	IfStatement	if ( code < 0 )		5123400	1					
ANR	5123428	Condition	code < 0	196:8:6135:6142	5123400	0	True				
ANR	5123429	RelationalExpression	code < 0		5123400	0		<			
ANR	5123430	Identifier	code		5123400	0					
ANR	5123431	PrimaryExpression	0		5123400	1					
ANR	5123432	ReturnStatement	return code ;	197:8:6153:6164	5123400	1	True				
ANR	5123433	Identifier	code		5123400	0					
ANR	5123434	ReturnStatement	"return gs_screen_enum_init_memory ( penum , & penum -> order , pgs , phsp , mem ) ;"	198:4:6170:6249	5123400	2	True				
ANR	5123435	CallExpression	"gs_screen_enum_init_memory ( penum , & penum -> order , pgs , phsp , mem )"		5123400	0					
ANR	5123436	Callee	gs_screen_enum_init_memory		5123400	0					
ANR	5123437	Identifier	gs_screen_enum_init_memory		5123400	0					
ANR	5123438	ArgumentList	penum		5123400	1					
ANR	5123439	Argument	penum		5123400	0					
ANR	5123440	Identifier	penum		5123400	0					
ANR	5123441	Argument	& penum -> order		5123400	1					
ANR	5123442	UnaryOperationExpression	& penum -> order		5123400	0					
ANR	5123443	UnaryOperator	&		5123400	0					
ANR	5123444	PtrMemberAccess	penum -> order		5123400	1					
ANR	5123445	Identifier	penum		5123400	0					
ANR	5123446	Identifier	order		5123400	1					
ANR	5123447	Argument	pgs		5123400	2					
ANR	5123448	Identifier	pgs		5123400	0					
ANR	5123449	Argument	phsp		5123400	3					
ANR	5123450	Identifier	phsp		5123400	0					
ANR	5123451	Argument	mem		5123400	4					
ANR	5123452	Identifier	mem		5123400	0					
ANR	5123453	ReturnType	int		5123400	1					
ANR	5123454	Identifier	gs_screen_init_memory		5123400	2					
ANR	5123455	ParameterList	"gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem"		5123400	3					
ANR	5123456	Parameter	gs_screen_enum * penum	190:22:5917:5938	5123400	0	True				
ANR	5123457	ParameterType	gs_screen_enum *		5123400	0					
ANR	5123458	Identifier	penum		5123400	1					
ANR	5123459	Parameter	gs_gstate * pgs	190:46:5941:5955	5123400	1	True				
ANR	5123460	ParameterType	gs_gstate *		5123400	0					
ANR	5123461	Identifier	pgs		5123400	1					
ANR	5123462	Parameter	gs_screen_halftone * phsp	191:16:5974:5998	5123400	2	True				
ANR	5123463	ParameterType	gs_screen_halftone *		5123400	0					
ANR	5123464	Identifier	phsp		5123400	1					
ANR	5123465	Parameter	bool accurate	191:43:6001:6013	5123400	3	True				
ANR	5123466	ParameterType	bool		5123400	0					
ANR	5123467	Identifier	accurate		5123400	1					
ANR	5123468	Parameter	gs_memory_t * mem	191:58:6016:6032	5123400	4	True				
ANR	5123469	ParameterType	gs_memory_t *		5123400	0					
ANR	5123470	Identifier	mem		5123400	1					
ANR	5123471	CFGEntryNode	ENTRY		5123400		True				
ANR	5123472	CFGExitNode	EXIT		5123400		True				
ANR	5123473	Symbol	phsp		5123400						
ANR	5123474	Symbol	code		5123400						
ANR	5123475	Symbol	accurate		5123400						
ANR	5123476	Symbol	mem		5123400						
ANR	5123477	Symbol	& penum -> order		5123400						
ANR	5123478	Symbol	penum		5123400						
ANR	5123479	Symbol	gs_screen_order_init_memory		5123400						
ANR	5123480	Symbol	gs_screen_enum_init_memory		5123400						
ANR	5123481	Symbol	pgs		5123400						
ANR	5123482	Function	gs_screen_order_alloc	204:0:6356:7614							
ANR	5123483	FunctionDef	"gs_screen_order_alloc (gx_ht_order * porder , gs_memory_t * mem)"		5123482	0					
ANR	5123484	CompoundStatement		206:0:6421:7614	5123482	0					
ANR	5123485	IdentifierDeclStatement	uint num_levels = porder -> params . W * porder -> params . D ;	207:4:6427:6480	5123482	0	True				
ANR	5123486	IdentifierDecl	num_levels = porder -> params . W * porder -> params . D		5123482	0					
ANR	5123487	IdentifierDeclType	uint		5123482	0					
ANR	5123488	Identifier	num_levels		5123482	1					
ANR	5123489	AssignmentExpression	num_levels = porder -> params . W * porder -> params . D		5123482	2		=			
ANR	5123490	Identifier	num_levels		5123482	0					
ANR	5123491	MultiplicativeExpression	porder -> params . W * porder -> params . D		5123482	1		*			
ANR	5123492	MemberAccess	porder -> params . W		5123482	0					
ANR	5123493	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123494	Identifier	porder		5123482	0					
ANR	5123495	Identifier	params		5123482	1					
ANR	5123496	Identifier	W		5123482	1					
ANR	5123497	MemberAccess	porder -> params . D		5123482	1					
ANR	5123498	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123499	Identifier	porder		5123482	0					
ANR	5123500	Identifier	params		5123482	1					
ANR	5123501	Identifier	D		5123482	1					
ANR	5123502	IdentifierDeclStatement	int code ;	208:4:6486:6494	5123482	1	True				
ANR	5123503	IdentifierDecl	code		5123482	0					
ANR	5123504	IdentifierDeclType	int		5123482	0					
ANR	5123505	Identifier	code		5123482	1					
ANR	5123506	IfStatement	if ( ! FORCE_STRIP_HALFTONES && ( ( ulong ) porder -> params . W1 * bitmap_raster ( porder -> params . W ) + num_levels * sizeof ( * porder -> levels ) + porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit ) ) <= porder -> screen_params . max_size )		5123482	2					
ANR	5123507	Condition	! FORCE_STRIP_HALFTONES && ( ( ulong ) porder -> params . W1 * bitmap_raster ( porder -> params . W ) + num_levels * sizeof ( * porder -> levels ) + porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit ) ) <= porder -> screen_params . max_size	210:8:6505:6760	5123482	0	True				
ANR	5123508	AndExpression	! FORCE_STRIP_HALFTONES && ( ( ulong ) porder -> params . W1 * bitmap_raster ( porder -> params . W ) + num_levels * sizeof ( * porder -> levels ) + porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit ) ) <= porder -> screen_params . max_size		5123482	0		&&			
ANR	5123509	UnaryOperationExpression	! FORCE_STRIP_HALFTONES		5123482	0					
ANR	5123510	UnaryOperator	!		5123482	0					
ANR	5123511	Identifier	FORCE_STRIP_HALFTONES		5123482	1					
ANR	5123512	RelationalExpression	( ( ulong ) porder -> params . W1 * bitmap_raster ( porder -> params . W ) + num_levels * sizeof ( * porder -> levels ) + porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit ) ) <= porder -> screen_params . max_size		5123482	1		<=			
ANR	5123513	AdditiveExpression	( ulong ) porder -> params . W1 * bitmap_raster ( porder -> params . W ) + num_levels * sizeof ( * porder -> levels ) + porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit )		5123482	0		+			
ANR	5123514	MultiplicativeExpression	( ulong ) porder -> params . W1 * bitmap_raster ( porder -> params . W )		5123482	0		*			
ANR	5123515	CastExpression	( ulong ) porder -> params . W1		5123482	0					
ANR	5123516	CastTarget	ulong		5123482	0					
ANR	5123517	MemberAccess	porder -> params . W1		5123482	1					
ANR	5123518	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123519	Identifier	porder		5123482	0					
ANR	5123520	Identifier	params		5123482	1					
ANR	5123521	Identifier	W1		5123482	1					
ANR	5123522	CallExpression	bitmap_raster ( porder -> params . W )		5123482	1					
ANR	5123523	Callee	bitmap_raster		5123482	0					
ANR	5123524	Identifier	bitmap_raster		5123482	0					
ANR	5123525	ArgumentList	porder -> params . W		5123482	1					
ANR	5123526	Argument	porder -> params . W		5123482	0					
ANR	5123527	MemberAccess	porder -> params . W		5123482	0					
ANR	5123528	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123529	Identifier	porder		5123482	0					
ANR	5123530	Identifier	params		5123482	1					
ANR	5123531	Identifier	W		5123482	1					
ANR	5123532	AdditiveExpression	num_levels * sizeof ( * porder -> levels ) + porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit )		5123482	1		+			
ANR	5123533	MultiplicativeExpression	num_levels * sizeof ( * porder -> levels )		5123482	0		*			
ANR	5123534	Identifier	num_levels		5123482	0					
ANR	5123535	SizeofExpression	sizeof ( * porder -> levels )		5123482	1					
ANR	5123536	Sizeof	sizeof		5123482	0					
ANR	5123537	UnaryOperationExpression	* porder -> levels		5123482	1					
ANR	5123538	UnaryOperator	*		5123482	0					
ANR	5123539	PtrMemberAccess	porder -> levels		5123482	1					
ANR	5123540	Identifier	porder		5123482	0					
ANR	5123541	Identifier	levels		5123482	1					
ANR	5123542	MultiplicativeExpression	porder -> params . W * porder -> params . W1 * sizeof ( gx_ht_bit )		5123482	1		*			
ANR	5123543	MemberAccess	porder -> params . W		5123482	0					
ANR	5123544	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123545	Identifier	porder		5123482	0					
ANR	5123546	Identifier	params		5123482	1					
ANR	5123547	Identifier	W		5123482	1					
ANR	5123548	MultiplicativeExpression	porder -> params . W1 * sizeof ( gx_ht_bit )		5123482	1		*			
ANR	5123549	MemberAccess	porder -> params . W1		5123482	0					
ANR	5123550	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123551	Identifier	porder		5123482	0					
ANR	5123552	Identifier	params		5123482	1					
ANR	5123553	Identifier	W1		5123482	1					
ANR	5123554	SizeofExpression	sizeof ( gx_ht_bit )		5123482	1					
ANR	5123555	Sizeof	sizeof		5123482	0					
ANR	5123556	SizeofOperand	gx_ht_bit		5123482	1					
ANR	5123557	MemberAccess	porder -> screen_params . max_size		5123482	1					
ANR	5123558	PtrMemberAccess	porder -> screen_params		5123482	0					
ANR	5123559	Identifier	porder		5123482	0					
ANR	5123560	Identifier	screen_params		5123482	1					
ANR	5123561	Identifier	max_size		5123482	1					
ANR	5123562	CompoundStatement		9:40:341:341	5123482	1					
ANR	5123563	ExpressionStatement	"code = gx_ht_alloc_order ( porder , porder -> params . W , porder -> params . W1 , 0 , num_levels , mem )"	221:8:7056:7211	5123482	0	True				
ANR	5123564	AssignmentExpression	"code = gx_ht_alloc_order ( porder , porder -> params . W , porder -> params . W1 , 0 , num_levels , mem )"		5123482	0		=			
ANR	5123565	Identifier	code		5123482	0					
ANR	5123566	CallExpression	"gx_ht_alloc_order ( porder , porder -> params . W , porder -> params . W1 , 0 , num_levels , mem )"		5123482	1					
ANR	5123567	Callee	gx_ht_alloc_order		5123482	0					
ANR	5123568	Identifier	gx_ht_alloc_order		5123482	0					
ANR	5123569	ArgumentList	porder		5123482	1					
ANR	5123570	Argument	porder		5123482	0					
ANR	5123571	Identifier	porder		5123482	0					
ANR	5123572	Argument	porder -> params . W		5123482	1					
ANR	5123573	MemberAccess	porder -> params . W		5123482	0					
ANR	5123574	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123575	Identifier	porder		5123482	0					
ANR	5123576	Identifier	params		5123482	1					
ANR	5123577	Identifier	W		5123482	1					
ANR	5123578	Argument	porder -> params . W1		5123482	2					
ANR	5123579	MemberAccess	porder -> params . W1		5123482	0					
ANR	5123580	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123581	Identifier	porder		5123482	0					
ANR	5123582	Identifier	params		5123482	1					
ANR	5123583	Identifier	W1		5123482	1					
ANR	5123584	Argument	0		5123482	3					
ANR	5123585	PrimaryExpression	0		5123482	0					
ANR	5123586	Argument	num_levels		5123482	4					
ANR	5123587	Identifier	num_levels		5123482	0					
ANR	5123588	Argument	mem		5123482	5					
ANR	5123589	Identifier	mem		5123482	0					
ANR	5123590	ExpressionStatement	porder -> height = porder -> orig_height = porder -> params . D	224:8:7221:7276	5123482	1	True				
ANR	5123591	AssignmentExpression	porder -> height = porder -> orig_height = porder -> params . D		5123482	0		=			
ANR	5123592	PtrMemberAccess	porder -> height		5123482	0					
ANR	5123593	Identifier	porder		5123482	0					
ANR	5123594	Identifier	height		5123482	1					
ANR	5123595	AssignmentExpression	porder -> orig_height = porder -> params . D		5123482	1		=			
ANR	5123596	PtrMemberAccess	porder -> orig_height		5123482	0					
ANR	5123597	Identifier	porder		5123482	0					
ANR	5123598	Identifier	orig_height		5123482	1					
ANR	5123599	MemberAccess	porder -> params . D		5123482	1					
ANR	5123600	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123601	Identifier	porder		5123482	0					
ANR	5123602	Identifier	params		5123482	1					
ANR	5123603	Identifier	D		5123482	1					
ANR	5123604	ExpressionStatement	porder -> shift = porder -> orig_shift = porder -> params . S	225:8:7286:7339	5123482	2	True				
ANR	5123605	AssignmentExpression	porder -> shift = porder -> orig_shift = porder -> params . S		5123482	0		=			
ANR	5123606	PtrMemberAccess	porder -> shift		5123482	0					
ANR	5123607	Identifier	porder		5123482	0					
ANR	5123608	Identifier	shift		5123482	1					
ANR	5123609	AssignmentExpression	porder -> orig_shift = porder -> params . S		5123482	1		=			
ANR	5123610	PtrMemberAccess	porder -> orig_shift		5123482	0					
ANR	5123611	Identifier	porder		5123482	0					
ANR	5123612	Identifier	orig_shift		5123482	1					
ANR	5123613	MemberAccess	porder -> params . S		5123482	1					
ANR	5123614	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123615	Identifier	porder		5123482	0					
ANR	5123616	Identifier	params		5123482	1					
ANR	5123617	Identifier	S		5123482	1					
ANR	5123618	ElseStatement	else		5123482	0					
ANR	5123619	CompoundStatement		21:11:930:930	5123482	0					
ANR	5123620	ExpressionStatement	"code = gx_ht_alloc_order ( porder , porder -> params . W , porder -> params . D , porder -> params . S , num_levels , mem )"	228:8:7420:7589	5123482	0	True				
ANR	5123621	AssignmentExpression	"code = gx_ht_alloc_order ( porder , porder -> params . W , porder -> params . D , porder -> params . S , num_levels , mem )"		5123482	0		=			
ANR	5123622	Identifier	code		5123482	0					
ANR	5123623	CallExpression	"gx_ht_alloc_order ( porder , porder -> params . W , porder -> params . D , porder -> params . S , num_levels , mem )"		5123482	1					
ANR	5123624	Callee	gx_ht_alloc_order		5123482	0					
ANR	5123625	Identifier	gx_ht_alloc_order		5123482	0					
ANR	5123626	ArgumentList	porder		5123482	1					
ANR	5123627	Argument	porder		5123482	0					
ANR	5123628	Identifier	porder		5123482	0					
ANR	5123629	Argument	porder -> params . W		5123482	1					
ANR	5123630	MemberAccess	porder -> params . W		5123482	0					
ANR	5123631	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123632	Identifier	porder		5123482	0					
ANR	5123633	Identifier	params		5123482	1					
ANR	5123634	Identifier	W		5123482	1					
ANR	5123635	Argument	porder -> params . D		5123482	2					
ANR	5123636	MemberAccess	porder -> params . D		5123482	0					
ANR	5123637	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123638	Identifier	porder		5123482	0					
ANR	5123639	Identifier	params		5123482	1					
ANR	5123640	Identifier	D		5123482	1					
ANR	5123641	Argument	porder -> params . S		5123482	3					
ANR	5123642	MemberAccess	porder -> params . S		5123482	0					
ANR	5123643	PtrMemberAccess	porder -> params		5123482	0					
ANR	5123644	Identifier	porder		5123482	0					
ANR	5123645	Identifier	params		5123482	1					
ANR	5123646	Identifier	S		5123482	1					
ANR	5123647	Argument	num_levels		5123482	4					
ANR	5123648	Identifier	num_levels		5123482	0					
ANR	5123649	Argument	mem		5123482	5					
ANR	5123650	Identifier	mem		5123482	0					
ANR	5123651	ReturnStatement	return code ;	232:4:7601:7612	5123482	3	True				
ANR	5123652	Identifier	code		5123482	0					
ANR	5123653	ReturnType	int		5123482	1					
ANR	5123654	Identifier	gs_screen_order_alloc		5123482	2					
ANR	5123655	ParameterList	"gx_ht_order * porder , gs_memory_t * mem"		5123482	3					
ANR	5123656	Parameter	gx_ht_order * porder	205:22:6382:6400	5123482	0	True				
ANR	5123657	ParameterType	gx_ht_order *		5123482	0					
ANR	5123658	Identifier	porder		5123482	1					
ANR	5123659	Parameter	gs_memory_t * mem	205:43:6403:6418	5123482	1	True				
ANR	5123660	ParameterType	gs_memory_t *		5123482	0					
ANR	5123661	Identifier	mem		5123482	1					
ANR	5123662	CFGEntryNode	ENTRY		5123482		True				
ANR	5123663	CFGExitNode	EXIT		5123482		True				
ANR	5123664	Symbol	porder -> screen_params		5123482						
ANR	5123665	Symbol	porder -> params . S		5123482						
ANR	5123666	Symbol	code		5123482						
ANR	5123667	Symbol	* porder -> levels		5123482						
ANR	5123668	Symbol	porder -> height		5123482						
ANR	5123669	Symbol	porder -> screen_params . max_size		5123482						
ANR	5123670	Symbol	* * porder		5123482						
ANR	5123671	Symbol	porder -> params . W1		5123482						
ANR	5123672	Symbol	porder -> params . W		5123482						
ANR	5123673	Symbol	porder		5123482						
ANR	5123674	Symbol	bitmap_raster		5123482						
ANR	5123675	Symbol	porder -> orig_height		5123482						
ANR	5123676	Symbol	porder -> shift		5123482						
ANR	5123677	Symbol	porder -> params . D		5123482						
ANR	5123678	Symbol	porder -> levels		5123482						
ANR	5123679	Symbol	mem		5123482						
ANR	5123680	Symbol	porder -> params		5123482						
ANR	5123681	Symbol	gx_ht_alloc_order		5123482						
ANR	5123682	Symbol	FORCE_STRIP_HALFTONES		5123482						
ANR	5123683	Symbol	* porder		5123482						
ANR	5123684	Symbol	porder -> orig_shift		5123482						
ANR	5123685	Symbol	num_levels		5123482						
ANR	5123686	Function	gs_screen_order_init_memory	234:0:7616:8473							
ANR	5123687	FunctionDef	"gs_screen_order_init_memory (gx_ht_order * porder , const gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem)"		5123686	0					
ANR	5123688	CompoundStatement		238:0:7810:8473	5123686	0					
ANR	5123689	IdentifierDeclStatement	gs_matrix imat ;	239:4:7816:7830	5123686	0	True				
ANR	5123690	IdentifierDecl	imat		5123686	0					
ANR	5123691	IdentifierDeclType	gs_matrix		5123686	0					
ANR	5123692	Identifier	imat		5123686	1					
ANR	5123693	IdentifierDeclStatement	ulong max_size = gx_ht_cache_default_bits_size ( ) ;	240:4:7836:7884	5123686	1	True				
ANR	5123694	IdentifierDecl	max_size = gx_ht_cache_default_bits_size ( )		5123686	0					
ANR	5123695	IdentifierDeclType	ulong		5123686	0					
ANR	5123696	Identifier	max_size		5123686	1					
ANR	5123697	AssignmentExpression	max_size = gx_ht_cache_default_bits_size ( )		5123686	2		=			
ANR	5123698	Identifier	max_size		5123686	0					
ANR	5123699	CallExpression	gx_ht_cache_default_bits_size ( )		5123686	1					
ANR	5123700	Callee	gx_ht_cache_default_bits_size		5123686	0					
ANR	5123701	Identifier	gx_ht_cache_default_bits_size		5123686	0					
ANR	5123702	ArgumentList			5123686	1					
ANR	5123703	IdentifierDeclStatement	int code ;	241:4:7890:7898	5123686	2	True				
ANR	5123704	IdentifierDecl	code		5123686	0					
ANR	5123705	IdentifierDeclType	int		5123686	0					
ANR	5123706	Identifier	code		5123686	1					
ANR	5123707	IdentifierDeclStatement	gs_lib_ctx_t * ctx = gs_lib_ctx_get_interp_instance ( mem ) ;	242:4:7904:7959	5123686	3	True				
ANR	5123708	IdentifierDecl	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5123686	0					
ANR	5123709	IdentifierDeclType	gs_lib_ctx_t *		5123686	0					
ANR	5123710	Identifier	ctx		5123686	1					
ANR	5123711	AssignmentExpression	* ctx = gs_lib_ctx_get_interp_instance ( mem )		5123686	2		=			
ANR	5123712	Identifier	ctx		5123686	0					
ANR	5123713	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5123686	1					
ANR	5123714	Callee	gs_lib_ctx_get_interp_instance		5123686	0					
ANR	5123715	Identifier	gs_lib_ctx_get_interp_instance		5123686	0					
ANR	5123716	ArgumentList	mem		5123686	1					
ANR	5123717	Argument	mem		5123686	0					
ANR	5123718	Identifier	mem		5123686	0					
ANR	5123719	IfStatement	if ( phsp -> frequency < 0.1 )		5123686	4					
ANR	5123720	Condition	phsp -> frequency < 0.1	244:8:7970:7990	5123686	0	True				
ANR	5123721	RelationalExpression	phsp -> frequency < 0.1		5123686	0		<			
ANR	5123722	PtrMemberAccess	phsp -> frequency		5123686	0					
ANR	5123723	Identifier	phsp		5123686	0					
ANR	5123724	Identifier	frequency		5123686	1					
ANR	5123725	PrimaryExpression	0.1		5123686	1					
ANR	5123726	ExpressionStatement	return_error ( gs_error_rangecheck )	245:8:8001:8034	5123686	1	True				
ANR	5123727	CallExpression	return_error ( gs_error_rangecheck )		5123686	0					
ANR	5123728	Callee	return_error		5123686	0					
ANR	5123729	Identifier	return_error		5123686	0					
ANR	5123730	ArgumentList	gs_error_rangecheck		5123686	1					
ANR	5123731	Argument	gs_error_rangecheck		5123686	0					
ANR	5123732	Identifier	gs_error_rangecheck		5123686	0					
ANR	5123733	ExpressionStatement	"gs_deviceinitialmatrix ( gs_currentdevice ( pgs ) , & imat )"	246:4:8040:8092	5123686	5	True				
ANR	5123734	CallExpression	"gs_deviceinitialmatrix ( gs_currentdevice ( pgs ) , & imat )"		5123686	0					
ANR	5123735	Callee	gs_deviceinitialmatrix		5123686	0					
ANR	5123736	Identifier	gs_deviceinitialmatrix		5123686	0					
ANR	5123737	ArgumentList	gs_currentdevice ( pgs )		5123686	1					
ANR	5123738	Argument	gs_currentdevice ( pgs )		5123686	0					
ANR	5123739	CallExpression	gs_currentdevice ( pgs )		5123686	0					
ANR	5123740	Callee	gs_currentdevice		5123686	0					
ANR	5123741	Identifier	gs_currentdevice		5123686	0					
ANR	5123742	ArgumentList	pgs		5123686	1					
ANR	5123743	Argument	pgs		5123686	0					
ANR	5123744	Identifier	pgs		5123686	0					
ANR	5123745	Argument	& imat		5123686	1					
ANR	5123746	UnaryOperationExpression	& imat		5123686	0					
ANR	5123747	UnaryOperator	&		5123686	0					
ANR	5123748	Identifier	imat		5123686	1					
ANR	5123749	ExpressionStatement	"code = pick_cell_size ( phsp , & imat , max_size , ctx -> screen_min_screen_levels , accurate , & porder -> params )"	247:4:8098:8252	5123686	6	True				
ANR	5123750	AssignmentExpression	"code = pick_cell_size ( phsp , & imat , max_size , ctx -> screen_min_screen_levels , accurate , & porder -> params )"		5123686	0		=			
ANR	5123751	Identifier	code		5123686	0					
ANR	5123752	CallExpression	"pick_cell_size ( phsp , & imat , max_size , ctx -> screen_min_screen_levels , accurate , & porder -> params )"		5123686	1					
ANR	5123753	Callee	pick_cell_size		5123686	0					
ANR	5123754	Identifier	pick_cell_size		5123686	0					
ANR	5123755	ArgumentList	phsp		5123686	1					
ANR	5123756	Argument	phsp		5123686	0					
ANR	5123757	Identifier	phsp		5123686	0					
ANR	5123758	Argument	& imat		5123686	1					
ANR	5123759	UnaryOperationExpression	& imat		5123686	0					
ANR	5123760	UnaryOperator	&		5123686	0					
ANR	5123761	Identifier	imat		5123686	1					
ANR	5123762	Argument	max_size		5123686	2					
ANR	5123763	Identifier	max_size		5123686	0					
ANR	5123764	Argument	ctx -> screen_min_screen_levels		5123686	3					
ANR	5123765	PtrMemberAccess	ctx -> screen_min_screen_levels		5123686	0					
ANR	5123766	Identifier	ctx		5123686	0					
ANR	5123767	Identifier	screen_min_screen_levels		5123686	1					
ANR	5123768	Argument	accurate		5123686	4					
ANR	5123769	Identifier	accurate		5123686	0					
ANR	5123770	Argument	& porder -> params		5123686	5					
ANR	5123771	UnaryOperationExpression	& porder -> params		5123686	0					
ANR	5123772	UnaryOperator	&		5123686	0					
ANR	5123773	PtrMemberAccess	porder -> params		5123686	1					
ANR	5123774	Identifier	porder		5123686	0					
ANR	5123775	Identifier	params		5123686	1					
ANR	5123776	IfStatement	if ( code < 0 )		5123686	7					
ANR	5123777	Condition	code < 0	250:8:8262:8269	5123686	0	True				
ANR	5123778	RelationalExpression	code < 0		5123686	0		<			
ANR	5123779	Identifier	code		5123686	0					
ANR	5123780	PrimaryExpression	0		5123686	1					
ANR	5123781	ReturnStatement	return code ;	251:8:8280:8291	5123686	1	True				
ANR	5123782	Identifier	code		5123686	0					
ANR	5123783	ExpressionStatement	gx_compute_cell_values ( & porder -> params )	252:4:8297:8336	5123686	8	True				
ANR	5123784	CallExpression	gx_compute_cell_values ( & porder -> params )		5123686	0					
ANR	5123785	Callee	gx_compute_cell_values		5123686	0					
ANR	5123786	Identifier	gx_compute_cell_values		5123686	0					
ANR	5123787	ArgumentList	& porder -> params		5123686	1					
ANR	5123788	Argument	& porder -> params		5123686	0					
ANR	5123789	UnaryOperationExpression	& porder -> params		5123686	0					
ANR	5123790	UnaryOperator	&		5123686	0					
ANR	5123791	PtrMemberAccess	porder -> params		5123686	1					
ANR	5123792	Identifier	porder		5123686	0					
ANR	5123793	Identifier	params		5123686	1					
ANR	5123794	ExpressionStatement	porder -> screen_params . matrix = imat	253:4:8342:8377	5123686	9	True				
ANR	5123795	AssignmentExpression	porder -> screen_params . matrix = imat		5123686	0		=			
ANR	5123796	MemberAccess	porder -> screen_params . matrix		5123686	0					
ANR	5123797	PtrMemberAccess	porder -> screen_params		5123686	0					
ANR	5123798	Identifier	porder		5123686	0					
ANR	5123799	Identifier	screen_params		5123686	1					
ANR	5123800	Identifier	matrix		5123686	1					
ANR	5123801	Identifier	imat		5123686	1					
ANR	5123802	ExpressionStatement	porder -> screen_params . max_size = max_size	254:4:8383:8424	5123686	10	True				
ANR	5123803	AssignmentExpression	porder -> screen_params . max_size = max_size		5123686	0		=			
ANR	5123804	MemberAccess	porder -> screen_params . max_size		5123686	0					
ANR	5123805	PtrMemberAccess	porder -> screen_params		5123686	0					
ANR	5123806	Identifier	porder		5123686	0					
ANR	5123807	Identifier	screen_params		5123686	1					
ANR	5123808	Identifier	max_size		5123686	1					
ANR	5123809	Identifier	max_size		5123686	1					
ANR	5123810	ReturnStatement	"return gs_screen_order_alloc ( porder , mem ) ;"	255:4:8430:8471	5123686	11	True				
ANR	5123811	CallExpression	"gs_screen_order_alloc ( porder , mem )"		5123686	0					
ANR	5123812	Callee	gs_screen_order_alloc		5123686	0					
ANR	5123813	Identifier	gs_screen_order_alloc		5123686	0					
ANR	5123814	ArgumentList	porder		5123686	1					
ANR	5123815	Argument	porder		5123686	0					
ANR	5123816	Identifier	porder		5123686	0					
ANR	5123817	Argument	mem		5123686	1					
ANR	5123818	Identifier	mem		5123686	0					
ANR	5123819	ReturnType	int		5123686	1					
ANR	5123820	Identifier	gs_screen_order_init_memory		5123686	2					
ANR	5123821	ParameterList	"gx_ht_order * porder , const gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem"		5123686	3					
ANR	5123822	Parameter	gx_ht_order * porder	235:28:7648:7667	5123686	0	True				
ANR	5123823	ParameterType	gx_ht_order *		5123686	0					
ANR	5123824	Identifier	porder		5123686	1					
ANR	5123825	Parameter	const gs_gstate * pgs	235:50:7670:7690	5123686	1	True				
ANR	5123826	ParameterType	const gs_gstate *		5123686	0					
ANR	5123827	Identifier	pgs		5123686	1					
ANR	5123828	Parameter	gs_screen_halftone * phsp	236:28:7721:7745	5123686	2	True				
ANR	5123829	ParameterType	gs_screen_halftone *		5123686	0					
ANR	5123830	Identifier	phsp		5123686	1					
ANR	5123831	Parameter	bool accurate	236:55:7748:7760	5123686	3	True				
ANR	5123832	ParameterType	bool		5123686	0					
ANR	5123833	Identifier	accurate		5123686	1					
ANR	5123834	Parameter	gs_memory_t * mem	237:28:7791:7807	5123686	4	True				
ANR	5123835	ParameterType	gs_memory_t *		5123686	0					
ANR	5123836	Identifier	mem		5123686	1					
ANR	5123837	CFGEntryNode	ENTRY		5123686		True				
ANR	5123838	CFGExitNode	EXIT		5123686		True				
ANR	5123839	Symbol	code		5123686						
ANR	5123840	Symbol	accurate		5123686						
ANR	5123841	Symbol	gs_error_rangecheck		5123686						
ANR	5123842	Symbol	gx_ht_cache_default_bits_size		5123686						
ANR	5123843	Symbol	gs_currentdevice		5123686						
ANR	5123844	Symbol	porder -> screen_params . matrix		5123686						
ANR	5123845	Symbol	mem		5123686						
ANR	5123846	Symbol	gs_lib_ctx_get_interp_instance		5123686						
ANR	5123847	Symbol	pick_cell_size		5123686						
ANR	5123848	Symbol	pgs		5123686						
ANR	5123849	Symbol	& imat		5123686						
ANR	5123850	Symbol	porder -> screen_params		5123686						
ANR	5123851	Symbol	phsp		5123686						
ANR	5123852	Symbol	ctx -> screen_min_screen_levels		5123686						
ANR	5123853	Symbol	& porder -> params		5123686						
ANR	5123854	Symbol	imat		5123686						
ANR	5123855	Symbol	ctx		5123686						
ANR	5123856	Symbol	porder -> screen_params . max_size		5123686						
ANR	5123857	Symbol	* phsp		5123686						
ANR	5123858	Symbol	gs_screen_order_alloc		5123686						
ANR	5123859	Symbol	porder		5123686						
ANR	5123860	Symbol	max_size		5123686						
ANR	5123861	Symbol	* ctx		5123686						
ANR	5123862	Symbol	phsp -> frequency		5123686						
ANR	5123863	Symbol	* porder		5123686						
ANR	5123864	Function	pick_cell_size	296:0:10212:16849							
ANR	5123865	FunctionDef	"pick_cell_size (gs_screen_halftone * ph , const gs_matrix * pmat , ulong max_size , uint min_levels , bool accurate , gx_ht_cell_params_t * phcp)"		5123864	0					
ANR	5123866	CompoundStatement		299:0:10378:16849	5123864	0					
ANR	5123867	IdentifierDeclStatement	const bool landscape = ( pmat -> xy != 0.0 || pmat -> yx != 0.0 ) ;	300:4:10384:10443	5123864	0	True				
ANR	5123868	IdentifierDecl	landscape = ( pmat -> xy != 0.0 || pmat -> yx != 0.0 )		5123864	0					
ANR	5123869	IdentifierDeclType	const bool		5123864	0					
ANR	5123870	Identifier	landscape		5123864	1					
ANR	5123871	AssignmentExpression	landscape = ( pmat -> xy != 0.0 || pmat -> yx != 0.0 )		5123864	2		=			
ANR	5123872	Identifier	landscape		5123864	0					
ANR	5123873	OrExpression	pmat -> xy != 0.0 || pmat -> yx != 0.0		5123864	1		||			
ANR	5123874	EqualityExpression	pmat -> xy != 0.0		5123864	0		!=			
ANR	5123875	PtrMemberAccess	pmat -> xy		5123864	0					
ANR	5123876	Identifier	pmat		5123864	0					
ANR	5123877	Identifier	xy		5123864	1					
ANR	5123878	PrimaryExpression	0.0		5123864	1					
ANR	5123879	EqualityExpression	pmat -> yx != 0.0		5123864	1		!=			
ANR	5123880	PtrMemberAccess	pmat -> yx		5123864	0					
ANR	5123881	Identifier	pmat		5123864	0					
ANR	5123882	Identifier	yx		5123864	1					
ANR	5123883	PrimaryExpression	0.0		5123864	1					
ANR	5123884	IdentifierDeclStatement	const bool reflected = pmat -> xy * pmat -> yx > pmat -> xx * pmat -> yy ;	304:4:10556:10620	5123864	1	True				
ANR	5123885	IdentifierDecl	reflected = pmat -> xy * pmat -> yx > pmat -> xx * pmat -> yy		5123864	0					
ANR	5123886	IdentifierDeclType	const bool		5123864	0					
ANR	5123887	Identifier	reflected		5123864	1					
ANR	5123888	AssignmentExpression	reflected = pmat -> xy * pmat -> yx > pmat -> xx * pmat -> yy		5123864	2		=			
ANR	5123889	Identifier	reflected		5123864	0					
ANR	5123890	RelationalExpression	pmat -> xy * pmat -> yx > pmat -> xx * pmat -> yy		5123864	1		>			
ANR	5123891	MultiplicativeExpression	pmat -> xy * pmat -> yx		5123864	0		*			
ANR	5123892	PtrMemberAccess	pmat -> xy		5123864	0					
ANR	5123893	Identifier	pmat		5123864	0					
ANR	5123894	Identifier	xy		5123864	1					
ANR	5123895	PtrMemberAccess	pmat -> yx		5123864	1					
ANR	5123896	Identifier	pmat		5123864	0					
ANR	5123897	Identifier	yx		5123864	1					
ANR	5123898	MultiplicativeExpression	pmat -> xx * pmat -> yy		5123864	1		*			
ANR	5123899	PtrMemberAccess	pmat -> xx		5123864	0					
ANR	5123900	Identifier	pmat		5123864	0					
ANR	5123901	Identifier	xx		5123864	1					
ANR	5123902	PtrMemberAccess	pmat -> yy		5123864	1					
ANR	5123903	Identifier	pmat		5123864	0					
ANR	5123904	Identifier	yy		5123864	1					
ANR	5123905	IdentifierDeclStatement	const int reflection = ( reflected ? - 1 : 1 ) ;	305:4:10626:10669	5123864	2	True				
ANR	5123906	IdentifierDecl	reflection = ( reflected ? - 1 : 1 )		5123864	0					
ANR	5123907	IdentifierDeclType	const int		5123864	0					
ANR	5123908	Identifier	reflection		5123864	1					
ANR	5123909	AssignmentExpression	reflection = ( reflected ? - 1 : 1 )		5123864	2		=			
ANR	5123910	Identifier	reflection		5123864	0					
ANR	5123911	ConditionalExpression	reflected ? - 1 : 1		5123864	1					
ANR	5123912	Condition	reflected		5123864	0					
ANR	5123913	Identifier	reflected		5123864	0					
ANR	5123914	UnaryOperationExpression	- 1		5123864	1					
ANR	5123915	UnaryOperator	-		5123864	0					
ANR	5123916	PrimaryExpression	1		5123864	1					
ANR	5123917	PrimaryExpression	1		5123864	2					
ANR	5123918	IdentifierDeclStatement	const int rotation = ( landscape ? ( pmat -> yx < 0 ? 90 : - 90 ) : pmat -> xx < 0 ? 180 : 0 ) ;	306:4:10675:10764	5123864	3	True				
ANR	5123919	IdentifierDecl	rotation = ( landscape ? ( pmat -> yx < 0 ? 90 : - 90 ) : pmat -> xx < 0 ? 180 : 0 )		5123864	0					
ANR	5123920	IdentifierDeclType	const int		5123864	0					
ANR	5123921	Identifier	rotation		5123864	1					
ANR	5123922	AssignmentExpression	rotation = ( landscape ? ( pmat -> yx < 0 ? 90 : - 90 ) : pmat -> xx < 0 ? 180 : 0 )		5123864	2		=			
ANR	5123923	Identifier	rotation		5123864	0					
ANR	5123924	ConditionalExpression	landscape ? ( pmat -> yx < 0 ? 90 : - 90 ) : pmat -> xx < 0 ? 180 : 0		5123864	1					
ANR	5123925	Condition	landscape		5123864	0					
ANR	5123926	Identifier	landscape		5123864	0					
ANR	5123927	ConditionalExpression	pmat -> yx < 0 ? 90 : - 90		5123864	1					
ANR	5123928	Condition	pmat -> yx < 0		5123864	0					
ANR	5123929	RelationalExpression	pmat -> yx < 0		5123864	0		<			
ANR	5123930	PtrMemberAccess	pmat -> yx		5123864	0					
ANR	5123931	Identifier	pmat		5123864	0					
ANR	5123932	Identifier	yx		5123864	1					
ANR	5123933	PrimaryExpression	0		5123864	1					
ANR	5123934	PrimaryExpression	90		5123864	1					
ANR	5123935	UnaryOperationExpression	- 90		5123864	2					
ANR	5123936	UnaryOperator	-		5123864	0					
ANR	5123937	PrimaryExpression	90		5123864	1					
ANR	5123938	ConditionalExpression	pmat -> xx < 0 ? 180 : 0		5123864	2					
ANR	5123939	Condition	pmat -> xx < 0		5123864	0					
ANR	5123940	RelationalExpression	pmat -> xx < 0		5123864	0		<			
ANR	5123941	PtrMemberAccess	pmat -> xx		5123864	0					
ANR	5123942	Identifier	pmat		5123864	0					
ANR	5123943	Identifier	xx		5123864	1					
ANR	5123944	PrimaryExpression	0		5123864	1					
ANR	5123945	PrimaryExpression	180		5123864	1					
ANR	5123946	PrimaryExpression	0		5123864	2					
ANR	5123947	IdentifierDeclStatement	"const double f0 = ph -> frequency , a0 = ph -> angle ;"	308:4:10770:10817	5123864	4	True				
ANR	5123948	IdentifierDecl	f0 = ph -> frequency		5123864	0					
ANR	5123949	IdentifierDeclType	const double		5123864	0					
ANR	5123950	Identifier	f0		5123864	1					
ANR	5123951	AssignmentExpression	f0 = ph -> frequency		5123864	2		=			
ANR	5123952	Identifier	f0		5123864	0					
ANR	5123953	PtrMemberAccess	ph -> frequency		5123864	1					
ANR	5123954	Identifier	ph		5123864	0					
ANR	5123955	Identifier	frequency		5123864	1					
ANR	5123956	IdentifierDecl	a0 = ph -> angle		5123864	1					
ANR	5123957	IdentifierDeclType	const double		5123864	0					
ANR	5123958	Identifier	a0		5123864	1					
ANR	5123959	AssignmentExpression	a0 = ph -> angle		5123864	2		=			
ANR	5123960	Identifier	a0		5123864	0					
ANR	5123961	PtrMemberAccess	ph -> angle		5123864	1					
ANR	5123962	Identifier	ph		5123864	0					
ANR	5123963	Identifier	angle		5123864	1					
ANR	5123964	IdentifierDeclStatement	const double T = fabs ( ( landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy ) ) ;	309:4:10823:10905	5123864	5	True				
ANR	5123965	IdentifierDecl	T = fabs ( ( landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy ) )		5123864	0					
ANR	5123966	IdentifierDeclType	const double		5123864	0					
ANR	5123967	Identifier	T		5123864	1					
ANR	5123968	AssignmentExpression	T = fabs ( ( landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy ) )		5123864	2		=			
ANR	5123969	Identifier	T		5123864	0					
ANR	5123970	CallExpression	fabs ( ( landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy ) )		5123864	1					
ANR	5123971	Callee	fabs		5123864	0					
ANR	5123972	Identifier	fabs		5123864	0					
ANR	5123973	ArgumentList	landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy		5123864	1					
ANR	5123974	Argument	landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy		5123864	0					
ANR	5123975	ConditionalExpression	landscape ? pmat -> yx / pmat -> xy : pmat -> xx / pmat -> yy		5123864	0					
ANR	5123976	Condition	landscape		5123864	0					
ANR	5123977	Identifier	landscape		5123864	0					
ANR	5123978	MultiplicativeExpression	pmat -> yx / pmat -> xy		5123864	1		/			
ANR	5123979	PtrMemberAccess	pmat -> yx		5123864	0					
ANR	5123980	Identifier	pmat		5123864	0					
ANR	5123981	Identifier	yx		5123864	1					
ANR	5123982	PtrMemberAccess	pmat -> xy		5123864	1					
ANR	5123983	Identifier	pmat		5123864	0					
ANR	5123984	Identifier	xy		5123864	1					
ANR	5123985	MultiplicativeExpression	pmat -> xx / pmat -> yy		5123864	2		/			
ANR	5123986	PtrMemberAccess	pmat -> xx		5123864	0					
ANR	5123987	Identifier	pmat		5123864	0					
ANR	5123988	Identifier	xx		5123864	1					
ANR	5123989	PtrMemberAccess	pmat -> yy		5123864	1					
ANR	5123990	Identifier	pmat		5123864	0					
ANR	5123991	Identifier	yy		5123864	1					
ANR	5123992	IdentifierDeclStatement	gs_point uv0 ;	311:4:10911:10923	5123864	6	True				
ANR	5123993	IdentifierDecl	uv0		5123864	0					
ANR	5123994	IdentifierDeclType	gs_point		5123864	0					
ANR	5123995	Identifier	uv0		5123864	1					
ANR	5123996	Statement	define	313:1:10927:10932	5123864	7	True				
ANR	5123997	Statement	u0	313:8:10934:10935	5123864	8	True				
ANR	5123998	Statement	uv0	313:11:10937:10939	5123864	9	True				
ANR	5123999	Statement	.	313:14:10940:10940	5123864	10	True				
ANR	5124000	Statement	x	313:15:10941:10941	5123864	11	True				
ANR	5124001	Statement	define	314:1:10944:10949	5123864	12	True				
ANR	5124002	Statement	v0	314:8:10951:10952	5123864	13	True				
ANR	5124003	Statement	uv0	314:11:10954:10956	5123864	14	True				
ANR	5124004	Statement	.	314:14:10957:10957	5123864	15	True				
ANR	5124005	IdentifierDeclStatement	y int rt = 1 ;	314:15:10958:10974	5123864	16	True				
ANR	5124006	IdentifierDecl	rt = 1		5123864	0					
ANR	5124007	IdentifierDeclType	y int		5123864	0					
ANR	5124008	Identifier	rt		5123864	1					
ANR	5124009	AssignmentExpression	rt = 1		5123864	2		=			
ANR	5124010	Identifier	rt		5123864	0					
ANR	5124011	PrimaryExpression	1		5123864	1					
ANR	5124012	IdentifierDeclStatement	"double f = 0 , a = 0 ;"	316:4:10980:10999	5123864	17	True				
ANR	5124013	IdentifierDecl	f = 0		5123864	0					
ANR	5124014	IdentifierDeclType	double		5123864	0					
ANR	5124015	Identifier	f		5123864	1					
ANR	5124016	AssignmentExpression	f = 0		5123864	2		=			
ANR	5124017	Identifier	f		5123864	0					
ANR	5124018	PrimaryExpression	0		5123864	1					
ANR	5124019	IdentifierDecl	a = 0		5123864	1					
ANR	5124020	IdentifierDeclType	double		5123864	0					
ANR	5124021	Identifier	a		5123864	1					
ANR	5124022	AssignmentExpression	a = 0		5123864	2		=			
ANR	5124023	Identifier	a		5123864	0					
ANR	5124024	PrimaryExpression	0		5123864	1					
ANR	5124025	IdentifierDeclStatement	double e_best = 1000 ;	317:4:11005:11025	5123864	18	True				
ANR	5124026	IdentifierDecl	e_best = 1000		5123864	0					
ANR	5124027	IdentifierDeclType	double		5123864	0					
ANR	5124028	Identifier	e_best		5123864	1					
ANR	5124029	AssignmentExpression	e_best = 1000		5123864	2		=			
ANR	5124030	Identifier	e_best		5123864	0					
ANR	5124031	PrimaryExpression	1000		5123864	1					
ANR	5124032	IdentifierDeclStatement	bool better ;	318:4:11031:11042	5123864	19	True				
ANR	5124033	IdentifierDecl	better		5123864	0					
ANR	5124034	IdentifierDeclType	bool		5123864	0					
ANR	5124035	Identifier	better		5123864	1					
ANR	5124036	CompoundStatement		34:8:1124:1138	5123864	20					
ANR	5124037	IdentifierDeclStatement	gs_matrix rmat ;	332:8:11503:11517	5123864	0	True				
ANR	5124038	IdentifierDecl	rmat		5123864	0					
ANR	5124039	IdentifierDeclType	gs_matrix		5123864	0					
ANR	5124040	Identifier	rmat		5123864	1					
ANR	5124041	ExpressionStatement	"gs_make_rotation ( a0 * reflection + rotation , & rmat )"	334:8:11528:11579	5123864	1	True				
ANR	5124042	CallExpression	"gs_make_rotation ( a0 * reflection + rotation , & rmat )"		5123864	0					
ANR	5124043	Callee	gs_make_rotation		5123864	0					
ANR	5124044	Identifier	gs_make_rotation		5123864	0					
ANR	5124045	ArgumentList	a0 * reflection + rotation		5123864	1					
ANR	5124046	Argument	a0 * reflection + rotation		5123864	0					
ANR	5124047	AdditiveExpression	a0 * reflection + rotation		5123864	0		+			
ANR	5124048	MultiplicativeExpression	a0 * reflection		5123864	0		*			
ANR	5124049	Identifier	a0		5123864	0					
ANR	5124050	Identifier	reflection		5123864	1					
ANR	5124051	Identifier	rotation		5123864	1					
ANR	5124052	Argument	& rmat		5123864	1					
ANR	5124053	UnaryOperationExpression	& rmat		5123864	0					
ANR	5124054	UnaryOperator	&		5123864	0					
ANR	5124055	Identifier	rmat		5123864	1					
ANR	5124056	ExpressionStatement	"gs_distance_transform ( 72.0 / f0 , 0.0 , & rmat , & uv0 )"	335:8:11589:11639	5123864	2	True				
ANR	5124057	CallExpression	"gs_distance_transform ( 72.0 / f0 , 0.0 , & rmat , & uv0 )"		5123864	0					
ANR	5124058	Callee	gs_distance_transform		5123864	0					
ANR	5124059	Identifier	gs_distance_transform		5123864	0					
ANR	5124060	ArgumentList	72.0 / f0		5123864	1					
ANR	5124061	Argument	72.0 / f0		5123864	0					
ANR	5124062	MultiplicativeExpression	72.0 / f0		5123864	0		/			
ANR	5124063	PrimaryExpression	72.0		5123864	0					
ANR	5124064	Identifier	f0		5123864	1					
ANR	5124065	Argument	0.0		5123864	1					
ANR	5124066	PrimaryExpression	0.0		5123864	0					
ANR	5124067	Argument	& rmat		5123864	2					
ANR	5124068	UnaryOperationExpression	& rmat		5123864	0					
ANR	5124069	UnaryOperator	&		5123864	0					
ANR	5124070	Identifier	rmat		5123864	1					
ANR	5124071	Argument	& uv0		5123864	3					
ANR	5124072	UnaryOperationExpression	& uv0		5123864	0					
ANR	5124073	UnaryOperator	&		5123864	0					
ANR	5124074	Identifier	uv0		5123864	1					
ANR	5124075	ExpressionStatement	"gs_distance_transform ( u0 , v0 , pmat , & uv0 )"	336:8:11649:11690	5123864	3	True				
ANR	5124076	CallExpression	"gs_distance_transform ( u0 , v0 , pmat , & uv0 )"		5123864	0					
ANR	5124077	Callee	gs_distance_transform		5123864	0					
ANR	5124078	Identifier	gs_distance_transform		5123864	0					
ANR	5124079	ArgumentList	u0		5123864	1					
ANR	5124080	Argument	u0		5123864	0					
ANR	5124081	Identifier	u0		5123864	0					
ANR	5124082	Argument	v0		5123864	1					
ANR	5124083	Identifier	v0		5123864	0					
ANR	5124084	Argument	pmat		5123864	2					
ANR	5124085	Identifier	pmat		5123864	0					
ANR	5124086	Argument	& uv0		5123864	3					
ANR	5124087	UnaryOperationExpression	& uv0		5123864	0					
ANR	5124088	UnaryOperator	&		5123864	0					
ANR	5124089	Identifier	uv0		5123864	1					
ANR	5124090	ExpressionStatement	"if_debug10 ( 'h' , ""[h]Requested: f=%g a=%g mat=[%g %g %g %g] max_size=%lu min_levels=%u =>\\n     u=%g v=%g\\n"" , ph -> frequency , ph -> angle , pmat -> xx , pmat -> xy , pmat -> yx , pmat -> yy , max_size , min_levels , u0 , v0 )"	337:8:11700:11961	5123864	4	True				
ANR	5124091	CallExpression	"if_debug10 ( 'h' , ""[h]Requested: f=%g a=%g mat=[%g %g %g %g] max_size=%lu min_levels=%u =>\\n     u=%g v=%g\\n"" , ph -> frequency , ph -> angle , pmat -> xx , pmat -> xy , pmat -> yx , pmat -> yy , max_size , min_levels , u0 , v0 )"		5123864	0					
ANR	5124092	Callee	if_debug10		5123864	0					
ANR	5124093	Identifier	if_debug10		5123864	0					
ANR	5124094	ArgumentList	'h'		5123864	1					
ANR	5124095	Argument	'h'		5123864	0					
ANR	5124096	PrimaryExpression	'h'		5123864	0					
ANR	5124097	Argument	"""[h]Requested: f=%g a=%g mat=[%g %g %g %g] max_size=%lu min_levels=%u =>\\n     u=%g v=%g\\n"""		5123864	1					
ANR	5124098	PrimaryExpression	"""[h]Requested: f=%g a=%g mat=[%g %g %g %g] max_size=%lu min_levels=%u =>\\n     u=%g v=%g\\n"""		5123864	0					
ANR	5124099	Argument	ph -> frequency		5123864	2					
ANR	5124100	PtrMemberAccess	ph -> frequency		5123864	0					
ANR	5124101	Identifier	ph		5123864	0					
ANR	5124102	Identifier	frequency		5123864	1					
ANR	5124103	Argument	ph -> angle		5123864	3					
ANR	5124104	PtrMemberAccess	ph -> angle		5123864	0					
ANR	5124105	Identifier	ph		5123864	0					
ANR	5124106	Identifier	angle		5123864	1					
ANR	5124107	Argument	pmat -> xx		5123864	4					
ANR	5124108	PtrMemberAccess	pmat -> xx		5123864	0					
ANR	5124109	Identifier	pmat		5123864	0					
ANR	5124110	Identifier	xx		5123864	1					
ANR	5124111	Argument	pmat -> xy		5123864	5					
ANR	5124112	PtrMemberAccess	pmat -> xy		5123864	0					
ANR	5124113	Identifier	pmat		5123864	0					
ANR	5124114	Identifier	xy		5123864	1					
ANR	5124115	Argument	pmat -> yx		5123864	6					
ANR	5124116	PtrMemberAccess	pmat -> yx		5123864	0					
ANR	5124117	Identifier	pmat		5123864	0					
ANR	5124118	Identifier	yx		5123864	1					
ANR	5124119	Argument	pmat -> yy		5123864	7					
ANR	5124120	PtrMemberAccess	pmat -> yy		5123864	0					
ANR	5124121	Identifier	pmat		5123864	0					
ANR	5124122	Identifier	yy		5123864	1					
ANR	5124123	Argument	max_size		5123864	8					
ANR	5124124	Identifier	max_size		5123864	0					
ANR	5124125	Argument	min_levels		5123864	9					
ANR	5124126	Identifier	min_levels		5123864	0					
ANR	5124127	Argument	u0		5123864	10					
ANR	5124128	Identifier	u0		5123864	0					
ANR	5124129	Argument	v0		5123864	11					
ANR	5124130	Identifier	v0		5123864	0					
ANR	5124131	IfStatement	if ( u0 == 0 && v0 == 0 )		5123864	21					
ANR	5124132	Condition	u0 == 0 && v0 == 0	345:8:12026:12043	5123864	0	True				
ANR	5124133	AndExpression	u0 == 0 && v0 == 0		5123864	0		&&			
ANR	5124134	EqualityExpression	u0 == 0		5123864	0		==			
ANR	5124135	Identifier	u0		5123864	0					
ANR	5124136	PrimaryExpression	0		5123864	1					
ANR	5124137	EqualityExpression	v0 == 0		5123864	1		==			
ANR	5124138	Identifier	v0		5123864	0					
ANR	5124139	PrimaryExpression	0		5123864	1					
ANR	5124140	ExpressionStatement	return_error ( gs_error_rangecheck )	346:8:12054:12087	5123864	1	True				
ANR	5124141	CallExpression	return_error ( gs_error_rangecheck )		5123864	0					
ANR	5124142	Callee	return_error		5123864	0					
ANR	5124143	Identifier	return_error		5123864	0					
ANR	5124144	ArgumentList	gs_error_rangecheck		5123864	1					
ANR	5124145	Argument	gs_error_rangecheck		5123864	0					
ANR	5124146	Identifier	gs_error_rangecheck		5123864	0					
ANR	5124147	WhileStatement	while ( ( fabs ( u0 ) + fabs ( v0 ) ) * rt < 4 )		5123864	22					
ANR	5124148	Condition	( fabs ( u0 ) + fabs ( v0 ) ) * rt < 4	347:11:12100:12129	5123864	0	True				
ANR	5124149	RelationalExpression	( fabs ( u0 ) + fabs ( v0 ) ) * rt < 4		5123864	0		<			
ANR	5124150	MultiplicativeExpression	( fabs ( u0 ) + fabs ( v0 ) ) * rt		5123864	0		*			
ANR	5124151	AdditiveExpression	fabs ( u0 ) + fabs ( v0 )		5123864	0		+			
ANR	5124152	CallExpression	fabs ( u0 )		5123864	0					
ANR	5124153	Callee	fabs		5123864	0					
ANR	5124154	Identifier	fabs		5123864	0					
ANR	5124155	ArgumentList	u0		5123864	1					
ANR	5124156	Argument	u0		5123864	0					
ANR	5124157	Identifier	u0		5123864	0					
ANR	5124158	CallExpression	fabs ( v0 )		5123864	1					
ANR	5124159	Callee	fabs		5123864	0					
ANR	5124160	Identifier	fabs		5123864	0					
ANR	5124161	ArgumentList	v0		5123864	1					
ANR	5124162	Argument	v0		5123864	0					
ANR	5124163	Identifier	v0		5123864	0					
ANR	5124164	Identifier	rt		5123864	1					
ANR	5124165	PrimaryExpression	4		5123864	1					
ANR	5124166	ExpressionStatement	++ rt	348:8:12140:12144	5123864	1	True				
ANR	5124167	UnaryExpression	++ rt		5123864	0					
ANR	5124168	IncDec	++		5123864	0					
ANR	5124169	Identifier	rt		5123864	1					
ANR	5124170	Label	try_size :	349:2:12148:12156	5123864	23	True				
ANR	5124171	Identifier	try_size		5123864	0					
ANR	5124172	ExpressionStatement	better = false	350:4:12162:12176	5123864	24	True				
ANR	5124173	AssignmentExpression	better = false		5123864	0		=			
ANR	5124174	Identifier	better		5123864	0					
ANR	5124175	Identifier	false		5123864	1					
ANR	5124176	CompoundStatement		58:8:1967:1988	5123864	25					
ANR	5124177	IdentifierDeclStatement	double fm0 = u0 * rt ;	352:8:12192:12212	5123864	0	True				
ANR	5124178	IdentifierDecl	fm0 = u0 * rt		5123864	0					
ANR	5124179	IdentifierDeclType	double		5123864	0					
ANR	5124180	Identifier	fm0		5123864	1					
ANR	5124181	AssignmentExpression	fm0 = u0 * rt		5123864	2		=			
ANR	5124182	Identifier	fm0		5123864	0					
ANR	5124183	MultiplicativeExpression	u0 * rt		5123864	1		*			
ANR	5124184	Identifier	u0		5123864	0					
ANR	5124185	Identifier	rt		5123864	1					
ANR	5124186	IdentifierDeclStatement	double fn0 = v0 * rt ;	353:8:12222:12242	5123864	1	True				
ANR	5124187	IdentifierDecl	fn0 = v0 * rt		5123864	0					
ANR	5124188	IdentifierDeclType	double		5123864	0					
ANR	5124189	Identifier	fn0		5123864	1					
ANR	5124190	AssignmentExpression	fn0 = v0 * rt		5123864	2		=			
ANR	5124191	Identifier	fn0		5123864	0					
ANR	5124192	MultiplicativeExpression	v0 * rt		5123864	1		*			
ANR	5124193	Identifier	v0		5123864	0					
ANR	5124194	Identifier	rt		5123864	1					
ANR	5124195	IdentifierDeclStatement	int m0 = ( int ) floor ( u0 * rt + 0.0001 ) ;	354:8:12252:12289	5123864	2	True				
ANR	5124196	IdentifierDecl	m0 = ( int ) floor ( u0 * rt + 0.0001 )		5123864	0					
ANR	5124197	IdentifierDeclType	int		5123864	0					
ANR	5124198	Identifier	m0		5123864	1					
ANR	5124199	AssignmentExpression	m0 = ( int ) floor ( u0 * rt + 0.0001 )		5123864	2		=			
ANR	5124200	Identifier	m0		5123864	0					
ANR	5124201	CastExpression	( int ) floor ( u0 * rt + 0.0001 )		5123864	1					
ANR	5124202	CastTarget	int		5123864	0					
ANR	5124203	CallExpression	floor ( u0 * rt + 0.0001 )		5123864	1					
ANR	5124204	Callee	floor		5123864	0					
ANR	5124205	Identifier	floor		5123864	0					
ANR	5124206	ArgumentList	u0 * rt + 0.0001		5123864	1					
ANR	5124207	Argument	u0 * rt + 0.0001		5123864	0					
ANR	5124208	AdditiveExpression	u0 * rt + 0.0001		5123864	0		+			
ANR	5124209	MultiplicativeExpression	u0 * rt		5123864	0		*			
ANR	5124210	Identifier	u0		5123864	0					
ANR	5124211	Identifier	rt		5123864	1					
ANR	5124212	PrimaryExpression	0.0001		5123864	1					
ANR	5124213	IdentifierDeclStatement	int n0 = ( int ) floor ( v0 * rt + 0.0001 ) ;	355:8:12299:12336	5123864	3	True				
ANR	5124214	IdentifierDecl	n0 = ( int ) floor ( v0 * rt + 0.0001 )		5123864	0					
ANR	5124215	IdentifierDeclType	int		5123864	0					
ANR	5124216	Identifier	n0		5123864	1					
ANR	5124217	AssignmentExpression	n0 = ( int ) floor ( v0 * rt + 0.0001 )		5123864	2		=			
ANR	5124218	Identifier	n0		5123864	0					
ANR	5124219	CastExpression	( int ) floor ( v0 * rt + 0.0001 )		5123864	1					
ANR	5124220	CastTarget	int		5123864	0					
ANR	5124221	CallExpression	floor ( v0 * rt + 0.0001 )		5123864	1					
ANR	5124222	Callee	floor		5123864	0					
ANR	5124223	Identifier	floor		5123864	0					
ANR	5124224	ArgumentList	v0 * rt + 0.0001		5123864	1					
ANR	5124225	Argument	v0 * rt + 0.0001		5123864	0					
ANR	5124226	AdditiveExpression	v0 * rt + 0.0001		5123864	0		+			
ANR	5124227	MultiplicativeExpression	v0 * rt		5123864	0		*			
ANR	5124228	Identifier	v0		5123864	0					
ANR	5124229	Identifier	rt		5123864	1					
ANR	5124230	PrimaryExpression	0.0001		5123864	1					
ANR	5124231	IdentifierDeclStatement	gx_ht_cell_params_t p ;	356:8:12346:12367	5123864	4	True				
ANR	5124232	IdentifierDecl	p		5123864	0					
ANR	5124233	IdentifierDeclType	gx_ht_cell_params_t		5123864	0					
ANR	5124234	Identifier	p		5123864	1					
ANR	5124235	ExpressionStatement	p . R = p . R1 = rt	358:8:12378:12393	5123864	5	True				
ANR	5124236	AssignmentExpression	p . R = p . R1 = rt		5123864	0		=			
ANR	5124237	MemberAccess	p . R		5123864	0					
ANR	5124238	Identifier	p		5123864	0					
ANR	5124239	Identifier	R		5123864	1					
ANR	5124240	AssignmentExpression	p . R1 = rt		5123864	1		=			
ANR	5124241	MemberAccess	p . R1		5123864	0					
ANR	5124242	Identifier	p		5123864	0					
ANR	5124243	Identifier	R1		5123864	1					
ANR	5124244	Identifier	rt		5123864	1					
ANR	5124245	ForStatement	for ( p . M = m0 + 1 ; p . M >= m0 ; p . M -- )		5123864	6					
ANR	5124246	ForInit	p . M = m0 + 1 ;	359:13:12408:12420	5123864	0	True				
ANR	5124247	AssignmentExpression	p . M = m0 + 1		5123864	0		=			
ANR	5124248	MemberAccess	p . M		5123864	0					
ANR	5124249	Identifier	p		5123864	0					
ANR	5124250	Identifier	M		5123864	1					
ANR	5124251	AdditiveExpression	m0 + 1		5123864	1		+			
ANR	5124252	Identifier	m0		5123864	0					
ANR	5124253	PrimaryExpression	1		5123864	1					
ANR	5124254	Condition	p . M >= m0	359:27:12422:12430	5123864	1	True				
ANR	5124255	RelationalExpression	p . M >= m0		5123864	0		>=			
ANR	5124256	MemberAccess	p . M		5123864	0					
ANR	5124257	Identifier	p		5123864	0					
ANR	5124258	Identifier	M		5123864	1					
ANR	5124259	Identifier	m0		5123864	1					
ANR	5124260	PostIncDecOperationExpression	p . M --	359:38:12433:12437	5123864	2	True				
ANR	5124261	MemberAccess	p . M		5123864	0					
ANR	5124262	Identifier	p		5123864	0					
ANR	5124263	Identifier	M		5123864	1					
ANR	5124264	IncDec	--		5123864	1					
ANR	5124265	ForStatement	for ( p . N = n0 + 1 ; p . N >= n0 ; p . N -- )		5123864	3					
ANR	5124266	ForInit	p . N = n0 + 1 ;	360:17:12457:12469	5123864	0	True				
ANR	5124267	AssignmentExpression	p . N = n0 + 1		5123864	0		=			
ANR	5124268	MemberAccess	p . N		5123864	0					
ANR	5124269	Identifier	p		5123864	0					
ANR	5124270	Identifier	N		5123864	1					
ANR	5124271	AdditiveExpression	n0 + 1		5123864	1		+			
ANR	5124272	Identifier	n0		5123864	0					
ANR	5124273	PrimaryExpression	1		5123864	1					
ANR	5124274	Condition	p . N >= n0	360:31:12471:12479	5123864	1	True				
ANR	5124275	RelationalExpression	p . N >= n0		5123864	0		>=			
ANR	5124276	MemberAccess	p . N		5123864	0					
ANR	5124277	Identifier	p		5123864	0					
ANR	5124278	Identifier	N		5123864	1					
ANR	5124279	Identifier	n0		5123864	1					
ANR	5124280	PostIncDecOperationExpression	p . N --	360:42:12482:12486	5123864	2	True				
ANR	5124281	MemberAccess	p . N		5123864	0					
ANR	5124282	Identifier	p		5123864	0					
ANR	5124283	Identifier	N		5123864	1					
ANR	5124284	IncDec	--		5123864	1					
ANR	5124285	CompoundStatement		67:16:2211:2262	5123864	3					
ANR	5124286	IdentifierDeclStatement	"long raster , wt ;"	361:16:12507:12522	5123864	0	True				
ANR	5124287	IdentifierDecl	raster		5123864	0					
ANR	5124288	IdentifierDeclType	long		5123864	0					
ANR	5124289	Identifier	raster		5123864	1					
ANR	5124290	IdentifierDecl	wt		5123864	1					
ANR	5124291	IdentifierDeclType	long		5123864	0					
ANR	5124292	Identifier	wt		5123864	1					
ANR	5124293	IdentifierDeclStatement	long wt_size ;	363:16:12553:12565	5123864	1	True				
ANR	5124294	IdentifierDecl	wt_size		5123864	0					
ANR	5124295	IdentifierDeclType	long		5123864	0					
ANR	5124296	Identifier	wt_size		5123864	1					
ANR	5124297	IdentifierDeclStatement	"double fr , ar , ft , at , f_diff , a_diff , f_err , a_err ;"	365:16:12590:12641	5123864	2	True				
ANR	5124298	IdentifierDecl	fr		5123864	0					
ANR	5124299	IdentifierDeclType	double		5123864	0					
ANR	5124300	Identifier	fr		5123864	1					
ANR	5124301	IdentifierDecl	ar		5123864	1					
ANR	5124302	IdentifierDeclType	double		5123864	0					
ANR	5124303	Identifier	ar		5123864	1					
ANR	5124304	IdentifierDecl	ft		5123864	2					
ANR	5124305	IdentifierDeclType	double		5123864	0					
ANR	5124306	Identifier	ft		5123864	1					
ANR	5124307	IdentifierDecl	at		5123864	3					
ANR	5124308	IdentifierDeclType	double		5123864	0					
ANR	5124309	Identifier	at		5123864	1					
ANR	5124310	IdentifierDecl	f_diff		5123864	4					
ANR	5124311	IdentifierDeclType	double		5123864	0					
ANR	5124312	Identifier	f_diff		5123864	1					
ANR	5124313	IdentifierDecl	a_diff		5123864	5					
ANR	5124314	IdentifierDeclType	double		5123864	0					
ANR	5124315	Identifier	a_diff		5123864	1					
ANR	5124316	IdentifierDecl	f_err		5123864	6					
ANR	5124317	IdentifierDeclType	double		5123864	0					
ANR	5124318	Identifier	f_err		5123864	1					
ANR	5124319	IdentifierDecl	a_err		5123864	7					
ANR	5124320	IdentifierDeclType	double		5123864	0					
ANR	5124321	Identifier	a_err		5123864	1					
ANR	5124322	ExpressionStatement	p . M1 = ( int ) floor ( p . M / T + 0.5 )	367:16:12660:12692	5123864	3	True				
ANR	5124323	AssignmentExpression	p . M1 = ( int ) floor ( p . M / T + 0.5 )		5123864	0		=			
ANR	5124324	MemberAccess	p . M1		5123864	0					
ANR	5124325	Identifier	p		5123864	0					
ANR	5124326	Identifier	M1		5123864	1					
ANR	5124327	CastExpression	( int ) floor ( p . M / T + 0.5 )		5123864	1					
ANR	5124328	CastTarget	int		5123864	0					
ANR	5124329	CallExpression	floor ( p . M / T + 0.5 )		5123864	1					
ANR	5124330	Callee	floor		5123864	0					
ANR	5124331	Identifier	floor		5123864	0					
ANR	5124332	ArgumentList	p . M / T + 0.5		5123864	1					
ANR	5124333	Argument	p . M / T + 0.5		5123864	0					
ANR	5124334	AdditiveExpression	p . M / T + 0.5		5123864	0		+			
ANR	5124335	MultiplicativeExpression	p . M / T		5123864	0		/			
ANR	5124336	MemberAccess	p . M		5123864	0					
ANR	5124337	Identifier	p		5123864	0					
ANR	5124338	Identifier	M		5123864	1					
ANR	5124339	Identifier	T		5123864	1					
ANR	5124340	PrimaryExpression	0.5		5123864	1					
ANR	5124341	ExpressionStatement	p . N1 = ( int ) floor ( p . N * T + 0.5 )	368:16:12710:12742	5123864	4	True				
ANR	5124342	AssignmentExpression	p . N1 = ( int ) floor ( p . N * T + 0.5 )		5123864	0		=			
ANR	5124343	MemberAccess	p . N1		5123864	0					
ANR	5124344	Identifier	p		5123864	0					
ANR	5124345	Identifier	N1		5123864	1					
ANR	5124346	CastExpression	( int ) floor ( p . N * T + 0.5 )		5123864	1					
ANR	5124347	CastTarget	int		5123864	0					
ANR	5124348	CallExpression	floor ( p . N * T + 0.5 )		5123864	1					
ANR	5124349	Callee	floor		5123864	0					
ANR	5124350	Identifier	floor		5123864	0					
ANR	5124351	ArgumentList	p . N * T + 0.5		5123864	1					
ANR	5124352	Argument	p . N * T + 0.5		5123864	0					
ANR	5124353	AdditiveExpression	p . N * T + 0.5		5123864	0		+			
ANR	5124354	MultiplicativeExpression	p . N * T		5123864	0		*			
ANR	5124355	MemberAccess	p . N		5123864	0					
ANR	5124356	Identifier	p		5123864	0					
ANR	5124357	Identifier	N		5123864	1					
ANR	5124358	Identifier	T		5123864	1					
ANR	5124359	PrimaryExpression	0.5		5123864	1					
ANR	5124360	IfStatement	if ( p . M1 == 0 && p . N1 == 0 )		5123864	5					
ANR	5124361	Condition	p . M1 == 0 && p . N1 == 0	370:20:12765:12786	5123864	0	True				
ANR	5124362	AndExpression	p . M1 == 0 && p . N1 == 0		5123864	0		&&			
ANR	5124363	EqualityExpression	p . M1 == 0		5123864	0		==			
ANR	5124364	MemberAccess	p . M1		5123864	0					
ANR	5124365	Identifier	p		5123864	0					
ANR	5124366	Identifier	M1		5123864	1					
ANR	5124367	PrimaryExpression	0		5123864	1					
ANR	5124368	EqualityExpression	p . N1 == 0		5123864	1		==			
ANR	5124369	MemberAccess	p . N1		5123864	0					
ANR	5124370	Identifier	p		5123864	0					
ANR	5124371	Identifier	N1		5123864	1					
ANR	5124372	PrimaryExpression	0		5123864	1					
ANR	5124373	ExpressionStatement	return_error ( gs_error_rangecheck )	371:20:12809:12842	5123864	1	True				
ANR	5124374	CallExpression	return_error ( gs_error_rangecheck )		5123864	0					
ANR	5124375	Callee	return_error		5123864	0					
ANR	5124376	Identifier	return_error		5123864	0					
ANR	5124377	ArgumentList	gs_error_rangecheck		5123864	1					
ANR	5124378	Argument	gs_error_rangecheck		5123864	0					
ANR	5124379	Identifier	gs_error_rangecheck		5123864	0					
ANR	5124380	ExpressionStatement	gx_compute_cell_values ( & p )	373:16:12861:12887	5123864	6	True				
ANR	5124381	CallExpression	gx_compute_cell_values ( & p )		5123864	0					
ANR	5124382	Callee	gx_compute_cell_values		5123864	0					
ANR	5124383	Identifier	gx_compute_cell_values		5123864	0					
ANR	5124384	ArgumentList	& p		5123864	1					
ANR	5124385	Argument	& p		5123864	0					
ANR	5124386	UnaryOperationExpression	& p		5123864	0					
ANR	5124387	UnaryOperator	&		5123864	0					
ANR	5124388	Identifier	p		5123864	1					
ANR	5124389	ExpressionStatement	"if_debug3 ( 'h' , ""[h]trying m=%d, n=%d, r=%d\\n"" , p . M , p . N , rt )"	374:16:12905:12965	5123864	7	True				
ANR	5124390	CallExpression	"if_debug3 ( 'h' , ""[h]trying m=%d, n=%d, r=%d\\n"" , p . M , p . N , rt )"		5123864	0					
ANR	5124391	Callee	if_debug3		5123864	0					
ANR	5124392	Identifier	if_debug3		5123864	0					
ANR	5124393	ArgumentList	'h'		5123864	1					
ANR	5124394	Argument	'h'		5123864	0					
ANR	5124395	PrimaryExpression	'h'		5123864	0					
ANR	5124396	Argument	"""[h]trying m=%d, n=%d, r=%d\\n"""		5123864	1					
ANR	5124397	PrimaryExpression	"""[h]trying m=%d, n=%d, r=%d\\n"""		5123864	0					
ANR	5124398	Argument	p . M		5123864	2					
ANR	5124399	MemberAccess	p . M		5123864	0					
ANR	5124400	Identifier	p		5123864	0					
ANR	5124401	Identifier	M		5123864	1					
ANR	5124402	Argument	p . N		5123864	3					
ANR	5124403	MemberAccess	p . N		5123864	0					
ANR	5124404	Identifier	p		5123864	0					
ANR	5124405	Identifier	N		5123864	1					
ANR	5124406	Argument	rt		5123864	4					
ANR	5124407	Identifier	rt		5123864	0					
ANR	5124408	ExpressionStatement	wt = p . W	375:16:12983:12991	5123864	8	True				
ANR	5124409	AssignmentExpression	wt = p . W		5123864	0		=			
ANR	5124410	Identifier	wt		5123864	0					
ANR	5124411	MemberAccess	p . W		5123864	1					
ANR	5124412	Identifier	p		5123864	0					
ANR	5124413	Identifier	W		5123864	1					
ANR	5124414	IfStatement	if ( wt >= max_short )		5123864	9					
ANR	5124415	Condition	wt >= max_short	376:20:13013:13027	5123864	0	True				
ANR	5124416	RelationalExpression	wt >= max_short		5123864	0		>=			
ANR	5124417	Identifier	wt		5123864	0					
ANR	5124418	Identifier	max_short		5123864	1					
ANR	5124419	ContinueStatement	continue ;	377:20:13050:13058	5123864	1	True				
ANR	5124420	ExpressionStatement	raster = bitmap_raster ( wt )	380:16:13184:13210	5123864	10	True				
ANR	5124421	AssignmentExpression	raster = bitmap_raster ( wt )		5123864	0		=			
ANR	5124422	Identifier	raster		5123864	0					
ANR	5124423	CallExpression	bitmap_raster ( wt )		5123864	1					
ANR	5124424	Callee	bitmap_raster		5123864	0					
ANR	5124425	Identifier	bitmap_raster		5123864	0					
ANR	5124426	ArgumentList	wt		5123864	1					
ANR	5124427	Argument	wt		5123864	0					
ANR	5124428	Identifier	wt		5123864	0					
ANR	5124429	IfStatement	if ( raster > max_size / p . D || raster > max_long / wt )		5123864	11					
ANR	5124430	Condition	raster > max_size / p . D || raster > max_long / wt	381:20:13232:13280	5123864	0	True				
ANR	5124431	OrExpression	raster > max_size / p . D || raster > max_long / wt		5123864	0		||			
ANR	5124432	RelationalExpression	raster > max_size / p . D		5123864	0		>			
ANR	5124433	Identifier	raster		5123864	0					
ANR	5124434	MultiplicativeExpression	max_size / p . D		5123864	1		/			
ANR	5124435	Identifier	max_size		5123864	0					
ANR	5124436	MemberAccess	p . D		5123864	1					
ANR	5124437	Identifier	p		5123864	0					
ANR	5124438	Identifier	D		5123864	1					
ANR	5124439	RelationalExpression	raster > max_long / wt		5123864	1		>			
ANR	5124440	Identifier	raster		5123864	0					
ANR	5124441	MultiplicativeExpression	max_long / wt		5123864	1		/			
ANR	5124442	Identifier	max_long		5123864	0					
ANR	5124443	Identifier	wt		5123864	1					
ANR	5124444	ContinueStatement	continue ;	382:20:13303:13311	5123864	1	True				
ANR	5124445	ExpressionStatement	wt_size = raster * wt	384:16:13342:13363	5123864	12	True				
ANR	5124446	AssignmentExpression	wt_size = raster * wt		5123864	0		=			
ANR	5124447	Identifier	wt_size		5123864	0					
ANR	5124448	MultiplicativeExpression	raster * wt		5123864	1		*			
ANR	5124449	Identifier	raster		5123864	0					
ANR	5124450	Identifier	wt		5123864	1					
ANR	5124451	IfStatement	if ( landscape )		5123864	13					
ANR	5124452	Condition	landscape	389:20:13461:13469	5123864	0	True				
ANR	5124453	Identifier	landscape		5123864	0					
ANR	5124454	ExpressionStatement	"ar = atan2 ( p . M * pmat -> xy , p . N * pmat -> yx ) , fr = 72.0 * ( p . M == 0 ? pmat -> xy / p . N * cos ( ar ) : pmat -> yx / p . M * sin ( ar ) )"	390:20:13492:13673	5123864	1	True				
ANR	5124455	Expression	"ar = atan2 ( p . M * pmat -> xy , p . N * pmat -> yx ) , fr = 72.0 * ( p . M == 0 ? pmat -> xy / p . N * cos ( ar ) : pmat -> yx / p . M * sin ( ar ) )"		5123864	0					
ANR	5124456	AssignmentExpression	"ar = atan2 ( p . M * pmat -> xy , p . N * pmat -> yx )"		5123864	0		=			
ANR	5124457	Identifier	ar		5123864	0					
ANR	5124458	CallExpression	"atan2 ( p . M * pmat -> xy , p . N * pmat -> yx )"		5123864	1					
ANR	5124459	Callee	atan2		5123864	0					
ANR	5124460	Identifier	atan2		5123864	0					
ANR	5124461	ArgumentList	p . M * pmat -> xy		5123864	1					
ANR	5124462	Argument	p . M * pmat -> xy		5123864	0					
ANR	5124463	MultiplicativeExpression	p . M * pmat -> xy		5123864	0		*			
ANR	5124464	MemberAccess	p . M		5123864	0					
ANR	5124465	Identifier	p		5123864	0					
ANR	5124466	Identifier	M		5123864	1					
ANR	5124467	PtrMemberAccess	pmat -> xy		5123864	1					
ANR	5124468	Identifier	pmat		5123864	0					
ANR	5124469	Identifier	xy		5123864	1					
ANR	5124470	Argument	p . N * pmat -> yx		5123864	1					
ANR	5124471	MultiplicativeExpression	p . N * pmat -> yx		5123864	0		*			
ANR	5124472	MemberAccess	p . N		5123864	0					
ANR	5124473	Identifier	p		5123864	0					
ANR	5124474	Identifier	N		5123864	1					
ANR	5124475	PtrMemberAccess	pmat -> yx		5123864	1					
ANR	5124476	Identifier	pmat		5123864	0					
ANR	5124477	Identifier	yx		5123864	1					
ANR	5124478	AssignmentExpression	fr = 72.0 * ( p . M == 0 ? pmat -> xy / p . N * cos ( ar ) : pmat -> yx / p . M * sin ( ar ) )		5123864	1		=			
ANR	5124479	Identifier	fr		5123864	0					
ANR	5124480	MultiplicativeExpression	72.0 * ( p . M == 0 ? pmat -> xy / p . N * cos ( ar ) : pmat -> yx / p . M * sin ( ar ) )		5123864	1		*			
ANR	5124481	PrimaryExpression	72.0		5123864	0					
ANR	5124482	ConditionalExpression	p . M == 0 ? pmat -> xy / p . N * cos ( ar ) : pmat -> yx / p . M * sin ( ar )		5123864	1					
ANR	5124483	Condition	p . M == 0		5123864	0					
ANR	5124484	EqualityExpression	p . M == 0		5123864	0		==			
ANR	5124485	MemberAccess	p . M		5123864	0					
ANR	5124486	Identifier	p		5123864	0					
ANR	5124487	Identifier	M		5123864	1					
ANR	5124488	PrimaryExpression	0		5123864	1					
ANR	5124489	MultiplicativeExpression	pmat -> xy / p . N * cos ( ar )		5123864	1		/			
ANR	5124490	PtrMemberAccess	pmat -> xy		5123864	0					
ANR	5124491	Identifier	pmat		5123864	0					
ANR	5124492	Identifier	xy		5123864	1					
ANR	5124493	MultiplicativeExpression	p . N * cos ( ar )		5123864	1		*			
ANR	5124494	MemberAccess	p . N		5123864	0					
ANR	5124495	Identifier	p		5123864	0					
ANR	5124496	Identifier	N		5123864	1					
ANR	5124497	CallExpression	cos ( ar )		5123864	1					
ANR	5124498	Callee	cos		5123864	0					
ANR	5124499	Identifier	cos		5123864	0					
ANR	5124500	ArgumentList	ar		5123864	1					
ANR	5124501	Argument	ar		5123864	0					
ANR	5124502	Identifier	ar		5123864	0					
ANR	5124503	MultiplicativeExpression	pmat -> yx / p . M * sin ( ar )		5123864	2		/			
ANR	5124504	PtrMemberAccess	pmat -> yx		5123864	0					
ANR	5124505	Identifier	pmat		5123864	0					
ANR	5124506	Identifier	yx		5123864	1					
ANR	5124507	MultiplicativeExpression	p . M * sin ( ar )		5123864	1		*			
ANR	5124508	MemberAccess	p . M		5123864	0					
ANR	5124509	Identifier	p		5123864	0					
ANR	5124510	Identifier	M		5123864	1					
ANR	5124511	CallExpression	sin ( ar )		5123864	1					
ANR	5124512	Callee	sin		5123864	0					
ANR	5124513	Identifier	sin		5123864	0					
ANR	5124514	ArgumentList	ar		5123864	1					
ANR	5124515	Argument	ar		5123864	0					
ANR	5124516	Identifier	ar		5123864	0					
ANR	5124517	ElseStatement	else		5123864	0					
ANR	5124518	ExpressionStatement	"ar = atan2 ( p . N * pmat -> xx , p . M * pmat -> yy ) , fr = 72.0 * ( p . M == 0 ? pmat -> yy / p . N * sin ( ar ) : pmat -> xx / p . M * cos ( ar ) )"	394:20:13716:13897	5123864	0	True				
ANR	5124519	Expression	"ar = atan2 ( p . N * pmat -> xx , p . M * pmat -> yy ) , fr = 72.0 * ( p . M == 0 ? pmat -> yy / p . N * sin ( ar ) : pmat -> xx / p . M * cos ( ar ) )"		5123864	0					
ANR	5124520	AssignmentExpression	"ar = atan2 ( p . N * pmat -> xx , p . M * pmat -> yy )"		5123864	0		=			
ANR	5124521	Identifier	ar		5123864	0					
ANR	5124522	CallExpression	"atan2 ( p . N * pmat -> xx , p . M * pmat -> yy )"		5123864	1					
ANR	5124523	Callee	atan2		5123864	0					
ANR	5124524	Identifier	atan2		5123864	0					
ANR	5124525	ArgumentList	p . N * pmat -> xx		5123864	1					
ANR	5124526	Argument	p . N * pmat -> xx		5123864	0					
ANR	5124527	MultiplicativeExpression	p . N * pmat -> xx		5123864	0		*			
ANR	5124528	MemberAccess	p . N		5123864	0					
ANR	5124529	Identifier	p		5123864	0					
ANR	5124530	Identifier	N		5123864	1					
ANR	5124531	PtrMemberAccess	pmat -> xx		5123864	1					
ANR	5124532	Identifier	pmat		5123864	0					
ANR	5124533	Identifier	xx		5123864	1					
ANR	5124534	Argument	p . M * pmat -> yy		5123864	1					
ANR	5124535	MultiplicativeExpression	p . M * pmat -> yy		5123864	0		*			
ANR	5124536	MemberAccess	p . M		5123864	0					
ANR	5124537	Identifier	p		5123864	0					
ANR	5124538	Identifier	M		5123864	1					
ANR	5124539	PtrMemberAccess	pmat -> yy		5123864	1					
ANR	5124540	Identifier	pmat		5123864	0					
ANR	5124541	Identifier	yy		5123864	1					
ANR	5124542	AssignmentExpression	fr = 72.0 * ( p . M == 0 ? pmat -> yy / p . N * sin ( ar ) : pmat -> xx / p . M * cos ( ar ) )		5123864	1		=			
ANR	5124543	Identifier	fr		5123864	0					
ANR	5124544	MultiplicativeExpression	72.0 * ( p . M == 0 ? pmat -> yy / p . N * sin ( ar ) : pmat -> xx / p . M * cos ( ar ) )		5123864	1		*			
ANR	5124545	PrimaryExpression	72.0		5123864	0					
ANR	5124546	ConditionalExpression	p . M == 0 ? pmat -> yy / p . N * sin ( ar ) : pmat -> xx / p . M * cos ( ar )		5123864	1					
ANR	5124547	Condition	p . M == 0		5123864	0					
ANR	5124548	EqualityExpression	p . M == 0		5123864	0		==			
ANR	5124549	MemberAccess	p . M		5123864	0					
ANR	5124550	Identifier	p		5123864	0					
ANR	5124551	Identifier	M		5123864	1					
ANR	5124552	PrimaryExpression	0		5123864	1					
ANR	5124553	MultiplicativeExpression	pmat -> yy / p . N * sin ( ar )		5123864	1		/			
ANR	5124554	PtrMemberAccess	pmat -> yy		5123864	0					
ANR	5124555	Identifier	pmat		5123864	0					
ANR	5124556	Identifier	yy		5123864	1					
ANR	5124557	MultiplicativeExpression	p . N * sin ( ar )		5123864	1		*			
ANR	5124558	MemberAccess	p . N		5123864	0					
ANR	5124559	Identifier	p		5123864	0					
ANR	5124560	Identifier	N		5123864	1					
ANR	5124561	CallExpression	sin ( ar )		5123864	1					
ANR	5124562	Callee	sin		5123864	0					
ANR	5124563	Identifier	sin		5123864	0					
ANR	5124564	ArgumentList	ar		5123864	1					
ANR	5124565	Argument	ar		5123864	0					
ANR	5124566	Identifier	ar		5123864	0					
ANR	5124567	MultiplicativeExpression	pmat -> xx / p . M * cos ( ar )		5123864	2		/			
ANR	5124568	PtrMemberAccess	pmat -> xx		5123864	0					
ANR	5124569	Identifier	pmat		5123864	0					
ANR	5124570	Identifier	xx		5123864	1					
ANR	5124571	MultiplicativeExpression	p . M * cos ( ar )		5123864	1		*			
ANR	5124572	MemberAccess	p . M		5123864	0					
ANR	5124573	Identifier	p		5123864	0					
ANR	5124574	Identifier	M		5123864	1					
ANR	5124575	CallExpression	cos ( ar )		5123864	1					
ANR	5124576	Callee	cos		5123864	0					
ANR	5124577	Identifier	cos		5123864	0					
ANR	5124578	ArgumentList	ar		5123864	1					
ANR	5124579	Argument	ar		5123864	0					
ANR	5124580	Identifier	ar		5123864	0					
ANR	5124581	ExpressionStatement	ft = fabs ( fr ) * rt	397:16:13915:13933	5123864	14	True				
ANR	5124582	AssignmentExpression	ft = fabs ( fr ) * rt		5123864	0		=			
ANR	5124583	Identifier	ft		5123864	0					
ANR	5124584	MultiplicativeExpression	fabs ( fr ) * rt		5123864	1		*			
ANR	5124585	CallExpression	fabs ( fr )		5123864	0					
ANR	5124586	Callee	fabs		5123864	0					
ANR	5124587	Identifier	fabs		5123864	0					
ANR	5124588	ArgumentList	fr		5123864	1					
ANR	5124589	Argument	fr		5123864	0					
ANR	5124590	Identifier	fr		5123864	0					
ANR	5124591	Identifier	rt		5123864	1					
ANR	5124592	ExpressionStatement	at = ( ar * radians_to_degrees - rotation ) * reflection	399:16:14020:14074	5123864	15	True				
ANR	5124593	AssignmentExpression	at = ( ar * radians_to_degrees - rotation ) * reflection		5123864	0		=			
ANR	5124594	Identifier	at		5123864	0					
ANR	5124595	MultiplicativeExpression	( ar * radians_to_degrees - rotation ) * reflection		5123864	1		*			
ANR	5124596	AdditiveExpression	ar * radians_to_degrees - rotation		5123864	0		-			
ANR	5124597	MultiplicativeExpression	ar * radians_to_degrees		5123864	0		*			
ANR	5124598	Identifier	ar		5123864	0					
ANR	5124599	Identifier	radians_to_degrees		5123864	1					
ANR	5124600	Identifier	rotation		5123864	1					
ANR	5124601	Identifier	reflection		5123864	1					
ANR	5124602	ExpressionStatement	at -= floor ( at / 180.0 ) * 180.0	400:16:14092:14123	5123864	16	True				
ANR	5124603	AssignmentExpression	at -= floor ( at / 180.0 ) * 180.0		5123864	0		-=			
ANR	5124604	Identifier	at		5123864	0					
ANR	5124605	MultiplicativeExpression	floor ( at / 180.0 ) * 180.0		5123864	1		*			
ANR	5124606	CallExpression	floor ( at / 180.0 )		5123864	0					
ANR	5124607	Callee	floor		5123864	0					
ANR	5124608	Identifier	floor		5123864	0					
ANR	5124609	ArgumentList	at / 180.0		5123864	1					
ANR	5124610	Argument	at / 180.0		5123864	0					
ANR	5124611	MultiplicativeExpression	at / 180.0		5123864	0		/			
ANR	5124612	Identifier	at		5123864	0					
ANR	5124613	PrimaryExpression	180.0		5123864	1					
ANR	5124614	PrimaryExpression	180.0		5123864	1					
ANR	5124615	ExpressionStatement	at += floor ( a0 / 180.0 ) * 180.0	401:16:14141:14172	5123864	17	True				
ANR	5124616	AssignmentExpression	at += floor ( a0 / 180.0 ) * 180.0		5123864	0		+=			
ANR	5124617	Identifier	at		5123864	0					
ANR	5124618	MultiplicativeExpression	floor ( a0 / 180.0 ) * 180.0		5123864	1		*			
ANR	5124619	CallExpression	floor ( a0 / 180.0 )		5123864	0					
ANR	5124620	Callee	floor		5123864	0					
ANR	5124621	Identifier	floor		5123864	0					
ANR	5124622	ArgumentList	a0 / 180.0		5123864	1					
ANR	5124623	Argument	a0 / 180.0		5123864	0					
ANR	5124624	MultiplicativeExpression	a0 / 180.0		5123864	0		/			
ANR	5124625	Identifier	a0		5123864	0					
ANR	5124626	PrimaryExpression	180.0		5123864	1					
ANR	5124627	PrimaryExpression	180.0		5123864	1					
ANR	5124628	ExpressionStatement	f_diff = fabs ( ft - f0 )	402:16:14190:14212	5123864	18	True				
ANR	5124629	AssignmentExpression	f_diff = fabs ( ft - f0 )		5123864	0		=			
ANR	5124630	Identifier	f_diff		5123864	0					
ANR	5124631	CallExpression	fabs ( ft - f0 )		5123864	1					
ANR	5124632	Callee	fabs		5123864	0					
ANR	5124633	Identifier	fabs		5123864	0					
ANR	5124634	ArgumentList	ft - f0		5123864	1					
ANR	5124635	Argument	ft - f0		5123864	0					
ANR	5124636	AdditiveExpression	ft - f0		5123864	0		-			
ANR	5124637	Identifier	ft		5123864	0					
ANR	5124638	Identifier	f0		5123864	1					
ANR	5124639	ExpressionStatement	a_diff = fabs ( at - a0 )	403:16:14230:14252	5123864	19	True				
ANR	5124640	AssignmentExpression	a_diff = fabs ( at - a0 )		5123864	0		=			
ANR	5124641	Identifier	a_diff		5123864	0					
ANR	5124642	CallExpression	fabs ( at - a0 )		5123864	1					
ANR	5124643	Callee	fabs		5123864	0					
ANR	5124644	Identifier	fabs		5123864	0					
ANR	5124645	ArgumentList	at - a0		5123864	1					
ANR	5124646	Argument	at - a0		5123864	0					
ANR	5124647	AdditiveExpression	at - a0		5123864	0		-			
ANR	5124648	Identifier	at		5123864	0					
ANR	5124649	Identifier	a0		5123864	1					
ANR	5124650	ExpressionStatement	f_err = f_diff / fabs ( f0 )	404:16:14270:14295	5123864	20	True				
ANR	5124651	AssignmentExpression	f_err = f_diff / fabs ( f0 )		5123864	0		=			
ANR	5124652	Identifier	f_err		5123864	0					
ANR	5124653	MultiplicativeExpression	f_diff / fabs ( f0 )		5123864	1		/			
ANR	5124654	Identifier	f_diff		5123864	0					
ANR	5124655	CallExpression	fabs ( f0 )		5123864	1					
ANR	5124656	Callee	fabs		5123864	0					
ANR	5124657	Identifier	fabs		5123864	0					
ANR	5124658	ArgumentList	f0		5123864	1					
ANR	5124659	Argument	f0		5123864	0					
ANR	5124660	Identifier	f0		5123864	0					
ANR	5124661	ExpressionStatement	a_err = a_diff	410:16:14562:14576	5123864	21	True				
ANR	5124662	AssignmentExpression	a_err = a_diff		5123864	0		=			
ANR	5124663	Identifier	a_err		5123864	0					
ANR	5124664	Identifier	a_diff		5123864	1					
ANR	5124665	ExpressionStatement	"if_debug5 ( 'h' , "" ==> d=%d, wt=%ld, wt_size=%ld, f=%g, a=%g\\n"" , p . D , wt , bitmap_raster ( wt ) * wt , ft , at )"	412:16:14595:14724	5123864	22	True				
ANR	5124666	CallExpression	"if_debug5 ( 'h' , "" ==> d=%d, wt=%ld, wt_size=%ld, f=%g, a=%g\\n"" , p . D , wt , bitmap_raster ( wt ) * wt , ft , at )"		5123864	0					
ANR	5124667	Callee	if_debug5		5123864	0					
ANR	5124668	Identifier	if_debug5		5123864	0					
ANR	5124669	ArgumentList	'h'		5123864	1					
ANR	5124670	Argument	'h'		5123864	0					
ANR	5124671	PrimaryExpression	'h'		5123864	0					
ANR	5124672	Argument	""" ==> d=%d, wt=%ld, wt_size=%ld, f=%g, a=%g\\n"""		5123864	1					
ANR	5124673	PrimaryExpression	""" ==> d=%d, wt=%ld, wt_size=%ld, f=%g, a=%g\\n"""		5123864	0					
ANR	5124674	Argument	p . D		5123864	2					
ANR	5124675	MemberAccess	p . D		5123864	0					
ANR	5124676	Identifier	p		5123864	0					
ANR	5124677	Identifier	D		5123864	1					
ANR	5124678	Argument	wt		5123864	3					
ANR	5124679	Identifier	wt		5123864	0					
ANR	5124680	Argument	bitmap_raster ( wt ) * wt		5123864	4					
ANR	5124681	MultiplicativeExpression	bitmap_raster ( wt ) * wt		5123864	0		*			
ANR	5124682	CallExpression	bitmap_raster ( wt )		5123864	0					
ANR	5124683	Callee	bitmap_raster		5123864	0					
ANR	5124684	Identifier	bitmap_raster		5123864	0					
ANR	5124685	ArgumentList	wt		5123864	1					
ANR	5124686	Argument	wt		5123864	0					
ANR	5124687	Identifier	wt		5123864	0					
ANR	5124688	Identifier	wt		5123864	1					
ANR	5124689	Argument	ft		5123864	5					
ANR	5124690	Identifier	ft		5123864	0					
ANR	5124691	Argument	at		5123864	6					
ANR	5124692	Identifier	at		5123864	0					
ANR	5124693	CompoundStatement		123:20:4568:4660	5123864	23					
ANR	5124694	IdentifierDeclStatement	double error = ( fn0 - p . N ) * ( fn0 - p . N ) + ( fm0 - p . M ) * ( fm0 - p . M ) ;	421:20:14947:15039	5123864	0	True				
ANR	5124695	IdentifierDecl	error = ( fn0 - p . N ) * ( fn0 - p . N ) + ( fm0 - p . M ) * ( fm0 - p . M )		5123864	0					
ANR	5124696	IdentifierDeclType	double		5123864	0					
ANR	5124697	Identifier	error		5123864	1					
ANR	5124698	AssignmentExpression	error = ( fn0 - p . N ) * ( fn0 - p . N ) + ( fm0 - p . M ) * ( fm0 - p . M )		5123864	2		=			
ANR	5124699	Identifier	error		5123864	0					
ANR	5124700	AdditiveExpression	( fn0 - p . N ) * ( fn0 - p . N ) + ( fm0 - p . M ) * ( fm0 - p . M )		5123864	1		+			
ANR	5124701	MultiplicativeExpression	( fn0 - p . N ) * ( fn0 - p . N )		5123864	0		*			
ANR	5124702	AdditiveExpression	fn0 - p . N		5123864	0		-			
ANR	5124703	Identifier	fn0		5123864	0					
ANR	5124704	MemberAccess	p . N		5123864	1					
ANR	5124705	Identifier	p		5123864	0					
ANR	5124706	Identifier	N		5123864	1					
ANR	5124707	AdditiveExpression	fn0 - p . N		5123864	1		-			
ANR	5124708	Identifier	fn0		5123864	0					
ANR	5124709	MemberAccess	p . N		5123864	1					
ANR	5124710	Identifier	p		5123864	0					
ANR	5124711	Identifier	N		5123864	1					
ANR	5124712	MultiplicativeExpression	( fm0 - p . M ) * ( fm0 - p . M )		5123864	1		*			
ANR	5124713	AdditiveExpression	fm0 - p . M		5123864	0		-			
ANR	5124714	Identifier	fm0		5123864	0					
ANR	5124715	MemberAccess	p . M		5123864	1					
ANR	5124716	Identifier	p		5123864	0					
ANR	5124717	Identifier	M		5123864	1					
ANR	5124718	AdditiveExpression	fm0 - p . M		5123864	1		-			
ANR	5124719	Identifier	fm0		5123864	0					
ANR	5124720	MemberAccess	p . M		5123864	1					
ANR	5124721	Identifier	p		5123864	0					
ANR	5124722	Identifier	M		5123864	1					
ANR	5124723	ExpressionStatement	error /= p . N * p . N + p . M * p . M	427:20:15253:15283	5123864	1	True				
ANR	5124724	AssignmentExpression	error /= p . N * p . N + p . M * p . M		5123864	0		/=			
ANR	5124725	Identifier	error		5123864	0					
ANR	5124726	AdditiveExpression	p . N * p . N + p . M * p . M		5123864	1		+			
ANR	5124727	MultiplicativeExpression	p . N * p . N		5123864	0		*			
ANR	5124728	MemberAccess	p . N		5123864	0					
ANR	5124729	Identifier	p		5123864	0					
ANR	5124730	Identifier	N		5123864	1					
ANR	5124731	MemberAccess	p . N		5123864	1					
ANR	5124732	Identifier	p		5123864	0					
ANR	5124733	Identifier	N		5123864	1					
ANR	5124734	MultiplicativeExpression	p . M * p . M		5123864	1		*			
ANR	5124735	MemberAccess	p . M		5123864	0					
ANR	5124736	Identifier	p		5123864	0					
ANR	5124737	Identifier	M		5123864	1					
ANR	5124738	MemberAccess	p . M		5123864	1					
ANR	5124739	Identifier	p		5123864	0					
ANR	5124740	Identifier	M		5123864	1					
ANR	5124741	ExpressionStatement	error = sqrt ( error )	428:20:15305:15324	5123864	2	True				
ANR	5124742	AssignmentExpression	error = sqrt ( error )		5123864	0		=			
ANR	5124743	Identifier	error		5123864	0					
ANR	5124744	CallExpression	sqrt ( error )		5123864	1					
ANR	5124745	Callee	sqrt		5123864	0					
ANR	5124746	Identifier	sqrt		5123864	0					
ANR	5124747	ArgumentList	error		5123864	1					
ANR	5124748	Argument	error		5123864	0					
ANR	5124749	Identifier	error		5123864	0					
ANR	5124750	IfStatement	if ( error > e_best )		5123864	3					
ANR	5124751	Condition	error > e_best	429:24:15395:15408	5123864	0	True				
ANR	5124752	RelationalExpression	error > e_best		5123864	0		>			
ANR	5124753	Identifier	error		5123864	0					
ANR	5124754	Identifier	e_best		5123864	1					
ANR	5124755	ContinueStatement	continue ;	430:24:15435:15443	5123864	1	True				
ANR	5124756	ExpressionStatement	e_best = error	431:20:15465:15479	5123864	4	True				
ANR	5124757	AssignmentExpression	e_best = error		5123864	0		=			
ANR	5124758	Identifier	e_best		5123864	0					
ANR	5124759	Identifier	error		5123864	1					
ANR	5124760	ExpressionStatement	* phcp = p	433:16:15515:15524	5123864	24	True				
ANR	5124761	AssignmentExpression	* phcp = p		5123864	0		=			
ANR	5124762	UnaryOperationExpression	* phcp		5123864	0					
ANR	5124763	UnaryOperator	*		5123864	0					
ANR	5124764	Identifier	phcp		5123864	1					
ANR	5124765	Identifier	p		5123864	1					
ANR	5124766	ExpressionStatement	"f = ft , a = at"	434:16:15542:15556	5123864	25	True				
ANR	5124767	Expression	"f = ft , a = at"		5123864	0					
ANR	5124768	AssignmentExpression	f = ft		5123864	0		=			
ANR	5124769	Identifier	f		5123864	0					
ANR	5124770	Identifier	ft		5123864	1					
ANR	5124771	AssignmentExpression	a = at		5123864	1		=			
ANR	5124772	Identifier	a		5123864	0					
ANR	5124773	Identifier	at		5123864	1					
ANR	5124774	ExpressionStatement	better = true	435:16:15574:15587	5123864	26	True				
ANR	5124775	AssignmentExpression	better = true		5123864	0		=			
ANR	5124776	Identifier	better		5123864	0					
ANR	5124777	Identifier	true		5123864	1					
ANR	5124778	ExpressionStatement	"if_debug3 ( 'h' , ""*** best wt_size=%ld, f_diff=%g, a_diff=%g\\n"" , wt_size , f_diff , a_diff )"	436:16:15605:15718	5123864	27	True				
ANR	5124779	CallExpression	"if_debug3 ( 'h' , ""*** best wt_size=%ld, f_diff=%g, a_diff=%g\\n"" , wt_size , f_diff , a_diff )"		5123864	0					
ANR	5124780	Callee	if_debug3		5123864	0					
ANR	5124781	Identifier	if_debug3		5123864	0					
ANR	5124782	ArgumentList	'h'		5123864	1					
ANR	5124783	Argument	'h'		5123864	0					
ANR	5124784	PrimaryExpression	'h'		5123864	0					
ANR	5124785	Argument	"""*** best wt_size=%ld, f_diff=%g, a_diff=%g\\n"""		5123864	1					
ANR	5124786	PrimaryExpression	"""*** best wt_size=%ld, f_diff=%g, a_diff=%g\\n"""		5123864	0					
ANR	5124787	Argument	wt_size		5123864	2					
ANR	5124788	Identifier	wt_size		5123864	0					
ANR	5124789	Argument	f_diff		5123864	3					
ANR	5124790	Identifier	f_diff		5123864	0					
ANR	5124791	Argument	a_diff		5123864	4					
ANR	5124792	Identifier	a_diff		5123864	0					
ANR	5124793	IfStatement	if ( f_err <= 0.01 && a_err <= 0.9 )		5123864	28					
ANR	5124794	Condition	f_err <= 0.01 && a_err <= 0.9	442:20:15915:15943	5123864	0	True				
ANR	5124795	AndExpression	f_err <= 0.01 && a_err <= 0.9		5123864	0		&&			
ANR	5124796	RelationalExpression	f_err <= 0.01		5123864	0		<=			
ANR	5124797	Identifier	f_err		5123864	0					
ANR	5124798	PrimaryExpression	0.01		5123864	1					
ANR	5124799	RelationalExpression	a_err <= 0.9		5123864	1		<=			
ANR	5124800	Identifier	a_err		5123864	0					
ANR	5124801	PrimaryExpression	0.9		5123864	1					
ANR	5124802	GotoStatement	goto done ;	443:20:15978:15987	5123864	1	True				
ANR	5124803	Identifier	done		5123864	0					
ANR	5124804	IfStatement	if ( phcp -> C < min_levels )		5123864	26					
ANR	5124805	Condition	phcp -> C < min_levels	446:8:16017:16036	5123864	0	True				
ANR	5124806	RelationalExpression	phcp -> C < min_levels		5123864	0		<			
ANR	5124807	PtrMemberAccess	phcp -> C		5123864	0					
ANR	5124808	Identifier	phcp		5123864	0					
ANR	5124809	Identifier	C		5123864	1					
ANR	5124810	Identifier	min_levels		5123864	1					
ANR	5124811	CompoundStatement		148:30:5660:5660	5123864	1					
ANR	5124812	ExpressionStatement	++ rt	447:8:16101:16105	5123864	0	True				
ANR	5124813	UnaryExpression	++ rt		5123864	0					
ANR	5124814	IncDec	++		5123864	0					
ANR	5124815	Identifier	rt		5123864	1					
ANR	5124816	GotoStatement	goto try_size ;	448:8:16115:16128	5123864	1	True				
ANR	5124817	Identifier	try_size		5123864	0					
ANR	5124818	IfStatement	if ( better )		5123864	27					
ANR	5124819	Condition	better	450:8:16144:16149	5123864	0	True				
ANR	5124820	Identifier	better		5123864	0					
ANR	5124821	CompoundStatement		152:16:5773:5773	5123864	1					
ANR	5124822	IfStatement	if ( accurate )		5123864	0					
ANR	5124823	Condition	accurate	451:12:16238:16245	5123864	0	True				
ANR	5124824	Identifier	accurate		5123864	0					
ANR	5124825	CompoundStatement		153:22:5869:5869	5123864	1					
ANR	5124826	ExpressionStatement	++ rt	452:12:16262:16266	5123864	0	True				
ANR	5124827	UnaryExpression	++ rt		5123864	0					
ANR	5124828	IncDec	++		5123864	0					
ANR	5124829	Identifier	rt		5123864	1					
ANR	5124830	GotoStatement	goto try_size ;	453:12:16280:16293	5123864	1	True				
ANR	5124831	Identifier	try_size		5123864	0					
ANR	5124832	ElseStatement	else		5123864	0					
ANR	5124833	CompoundStatement		157:11:5937:5937	5123864	0					
ANR	5124834	IfStatement	if ( rt == 1 )		5123864	0					
ANR	5124835	Condition	rt == 1	459:12:16549:16555	5123864	0	True				
ANR	5124836	EqualityExpression	rt == 1		5123864	0		==			
ANR	5124837	Identifier	rt		5123864	0					
ANR	5124838	PrimaryExpression	1		5123864	1					
ANR	5124839	ExpressionStatement	return_error ( gs_error_rangecheck )	460:12:16570:16603	5123864	1	True				
ANR	5124840	CallExpression	return_error ( gs_error_rangecheck )		5123864	0					
ANR	5124841	Callee	return_error		5123864	0					
ANR	5124842	Identifier	return_error		5123864	0					
ANR	5124843	ArgumentList	gs_error_rangecheck		5123864	1					
ANR	5124844	Argument	gs_error_rangecheck		5123864	0					
ANR	5124845	Identifier	gs_error_rangecheck		5123864	0					
ANR	5124846	Label	done :	464:2:16645:16649	5123864	28	True				
ANR	5124847	Identifier	done		5123864	0					
ANR	5124848	ExpressionStatement	"if_debug5 ( 'h' , ""[h]Chosen: f=%g a=%g M=%d N=%d R=%d\\n"" , f , a , phcp -> M , phcp -> N , phcp -> R )"	465:4:16655:16757	5123864	29	True				
ANR	5124849	CallExpression	"if_debug5 ( 'h' , ""[h]Chosen: f=%g a=%g M=%d N=%d R=%d\\n"" , f , a , phcp -> M , phcp -> N , phcp -> R )"		5123864	0					
ANR	5124850	Callee	if_debug5		5123864	0					
ANR	5124851	Identifier	if_debug5		5123864	0					
ANR	5124852	ArgumentList	'h'		5123864	1					
ANR	5124853	Argument	'h'		5123864	0					
ANR	5124854	PrimaryExpression	'h'		5123864	0					
ANR	5124855	Argument	"""[h]Chosen: f=%g a=%g M=%d N=%d R=%d\\n"""		5123864	1					
ANR	5124856	PrimaryExpression	"""[h]Chosen: f=%g a=%g M=%d N=%d R=%d\\n"""		5123864	0					
ANR	5124857	Argument	f		5123864	2					
ANR	5124858	Identifier	f		5123864	0					
ANR	5124859	Argument	a		5123864	3					
ANR	5124860	Identifier	a		5123864	0					
ANR	5124861	Argument	phcp -> M		5123864	4					
ANR	5124862	PtrMemberAccess	phcp -> M		5123864	0					
ANR	5124863	Identifier	phcp		5123864	0					
ANR	5124864	Identifier	M		5123864	1					
ANR	5124865	Argument	phcp -> N		5123864	5					
ANR	5124866	PtrMemberAccess	phcp -> N		5123864	0					
ANR	5124867	Identifier	phcp		5123864	0					
ANR	5124868	Identifier	N		5123864	1					
ANR	5124869	Argument	phcp -> R		5123864	6					
ANR	5124870	PtrMemberAccess	phcp -> R		5123864	0					
ANR	5124871	Identifier	phcp		5123864	0					
ANR	5124872	Identifier	R		5123864	1					
ANR	5124873	ExpressionStatement	ph -> actual_frequency = f	467:4:16763:16787	5123864	30	True				
ANR	5124874	AssignmentExpression	ph -> actual_frequency = f		5123864	0		=			
ANR	5124875	PtrMemberAccess	ph -> actual_frequency		5123864	0					
ANR	5124876	Identifier	ph		5123864	0					
ANR	5124877	Identifier	actual_frequency		5123864	1					
ANR	5124878	Identifier	f		5123864	1					
ANR	5124879	ExpressionStatement	ph -> actual_angle = a	468:4:16793:16813	5123864	31	True				
ANR	5124880	AssignmentExpression	ph -> actual_angle = a		5123864	0		=			
ANR	5124881	PtrMemberAccess	ph -> actual_angle		5123864	0					
ANR	5124882	Identifier	ph		5123864	0					
ANR	5124883	Identifier	actual_angle		5123864	1					
ANR	5124884	Identifier	a		5123864	1					
ANR	5124885	ReturnStatement	return 0 ;	469:4:16819:16827	5123864	32	True				
ANR	5124886	PrimaryExpression	0		5123864	0					
ANR	5124887	Statement	undef	470:1:16830:16834	5123864	33	True				
ANR	5124888	Statement	u0	470:7:16836:16837	5123864	34	True				
ANR	5124889	Statement	undef	471:1:16840:16844	5123864	35	True				
ANR	5124890	Statement	v0	471:7:16846:16847	5123864	36	True				
ANR	5124891	ReturnType	static int		5123864	1					
ANR	5124892	Identifier	pick_cell_size		5123864	2					
ANR	5124893	ParameterList	"gs_screen_halftone * ph , const gs_matrix * pmat , ulong max_size , uint min_levels , bool accurate , gx_ht_cell_params_t * phcp"		5123864	3					
ANR	5124894	Parameter	gs_screen_halftone * ph	297:15:10238:10260	5123864	0	True				
ANR	5124895	ParameterType	gs_screen_halftone *		5123864	0					
ANR	5124896	Identifier	ph		5123864	1					
ANR	5124897	Parameter	const gs_matrix * pmat	297:40:10263:10284	5123864	1	True				
ANR	5124898	ParameterType	const gs_matrix *		5123864	0					
ANR	5124899	Identifier	pmat		5123864	1					
ANR	5124900	Parameter	ulong max_size	297:64:10287:10300	5123864	2	True				
ANR	5124901	ParameterType	ulong		5123864	0					
ANR	5124902	Identifier	max_size		5123864	1					
ANR	5124903	Parameter	uint min_levels	298:15:10318:10332	5123864	3	True				
ANR	5124904	ParameterType	uint		5123864	0					
ANR	5124905	Identifier	min_levels		5123864	1					
ANR	5124906	Parameter	bool accurate	298:32:10335:10347	5123864	4	True				
ANR	5124907	ParameterType	bool		5123864	0					
ANR	5124908	Identifier	accurate		5123864	1					
ANR	5124909	Parameter	gx_ht_cell_params_t * phcp	298:47:10350:10375	5123864	5	True				
ANR	5124910	ParameterType	gx_ht_cell_params_t *		5123864	0					
ANR	5124911	Identifier	phcp		5123864	1					
ANR	5124912	CFGEntryNode	ENTRY		5123864		True				
ANR	5124913	CFGExitNode	EXIT		5123864		True				
ANR	5124914	Symbol	n0		5123864						
ANR	5124915	Symbol	accurate		5123864						
ANR	5124916	Symbol	pmat -> xx		5123864						
ANR	5124917	Symbol	gs_error_rangecheck		5123864						
ANR	5124918	Symbol	a_err		5123864						
ANR	5124919	Symbol	* pmat		5123864						
ANR	5124920	Symbol	phcp -> C		5123864						
ANR	5124921	Symbol	cos		5123864						
ANR	5124922	Symbol	reflected		5123864						
ANR	5124923	Symbol	p . R		5123864						
ANR	5124924	Symbol	f0		5123864						
ANR	5124925	Symbol	p . W		5123864						
ANR	5124926	Symbol	phcp -> N		5123864						
ANR	5124927	Symbol	p . M1		5123864						
ANR	5124928	Symbol	ph -> actual_frequency		5123864						
ANR	5124929	Symbol	& uv0		5123864						
ANR	5124930	Symbol	p . M		5123864						
ANR	5124931	Symbol	phcp -> M		5123864						
ANR	5124932	Symbol	phcp -> R		5123864						
ANR	5124933	Symbol	p . N		5123864						
ANR	5124934	Symbol	sqrt		5123864						
ANR	5124935	Symbol	rmat		5123864						
ANR	5124936	Symbol	p . D		5123864						
ANR	5124937	Symbol	atan2		5123864						
ANR	5124938	Symbol	ph -> angle		5123864						
ANR	5124939	Symbol	pmat -> yy		5123864						
ANR	5124940	Symbol	reflection		5123864						
ANR	5124941	Symbol	pmat -> yx		5123864						
ANR	5124942	Symbol	radians_to_degrees		5123864						
ANR	5124943	Symbol	max_size		5123864						
ANR	5124944	Symbol	uv0		5123864						
ANR	5124945	Symbol	ar		5123864						
ANR	5124946	Symbol	at		5123864						
ANR	5124947	Symbol	& rmat		5123864						
ANR	5124948	Symbol	max_long		5123864						
ANR	5124949	Symbol	true		5123864						
ANR	5124950	Symbol	* phcp		5123864						
ANR	5124951	Symbol	pmat -> xy		5123864						
ANR	5124952	Symbol	e_best		5123864						
ANR	5124953	Symbol	* ph		5123864						
ANR	5124954	Symbol	rt		5123864						
ANR	5124955	Symbol	pmat		5123864						
ANR	5124956	Symbol	f_diff		5123864						
ANR	5124957	Symbol	f_err		5123864						
ANR	5124958	Symbol	fm0		5123864						
ANR	5124959	Symbol	wt_size		5123864						
ANR	5124960	Symbol	a_diff		5123864						
ANR	5124961	Symbol	fr		5123864						
ANR	5124962	Symbol	error		5123864						
ANR	5124963	Symbol	ph -> frequency		5123864						
ANR	5124964	Symbol	ft		5123864						
ANR	5124965	Symbol	phcp		5123864						
ANR	5124966	Symbol	T		5123864						
ANR	5124967	Symbol	sin		5123864						
ANR	5124968	Symbol	u0		5123864						
ANR	5124969	Symbol	floor		5123864						
ANR	5124970	Symbol	wt		5123864						
ANR	5124971	Symbol	a		5123864						
ANR	5124972	Symbol	fabs		5123864						
ANR	5124973	Symbol	m0		5123864						
ANR	5124974	Symbol	max_short		5123864						
ANR	5124975	Symbol	min_levels		5123864						
ANR	5124976	Symbol	f		5123864						
ANR	5124977	Symbol	rotation		5123864						
ANR	5124978	Symbol	false		5123864						
ANR	5124979	Symbol	raster		5123864						
ANR	5124980	Symbol	fn0		5123864						
ANR	5124981	Symbol	ph -> actual_angle		5123864						
ANR	5124982	Symbol	a0		5123864						
ANR	5124983	Symbol	bitmap_raster		5123864						
ANR	5124984	Symbol	better		5123864						
ANR	5124985	Symbol	p		5123864						
ANR	5124986	Symbol	p . N1		5123864						
ANR	5124987	Symbol	p . R1		5123864						
ANR	5124988	Symbol	& p		5123864						
ANR	5124989	Symbol	ph		5123864						
ANR	5124990	Symbol	v0		5123864						
ANR	5124991	Symbol	landscape		5123864						
ANR	5124992	Function	gs_screen_enum_init_memory	476:0:16949:19008							
ANR	5124993	FunctionDef	"gs_screen_enum_init_memory (gs_screen_enum * penum , const gx_ht_order * porder , gs_gstate * pgs , const gs_screen_halftone * phsp , gs_memory_t * mem)"		5124992	0					
ANR	5124994	CompoundStatement		480:0:17155:19008	5124992	0					
ANR	5124995	ExpressionStatement	penum -> pgs = pgs	481:4:17161:17177	5124992	0	True				
ANR	5124996	AssignmentExpression	penum -> pgs = pgs		5124992	0		=			
ANR	5124997	PtrMemberAccess	penum -> pgs		5124992	0					
ANR	5124998	Identifier	penum		5124992	0					
ANR	5124999	Identifier	pgs		5124992	1					
ANR	5125000	Identifier	pgs		5124992	1					
ANR	5125001	IfStatement	if ( & penum -> order != porder )		5124992	1					
ANR	5125002	Condition	& penum -> order != porder	482:8:17223:17245	5124992	0	True				
ANR	5125003	EqualityExpression	& penum -> order != porder		5124992	0		!=			
ANR	5125004	UnaryOperationExpression	& penum -> order		5124992	0					
ANR	5125005	UnaryOperator	&		5124992	0					
ANR	5125006	PtrMemberAccess	penum -> order		5124992	1					
ANR	5125007	Identifier	penum		5124992	0					
ANR	5125008	Identifier	order		5124992	1					
ANR	5125009	Identifier	porder		5124992	1					
ANR	5125010	ExpressionStatement	penum -> order = * porder	483:8:17278:17300	5124992	1	True				
ANR	5125011	AssignmentExpression	penum -> order = * porder		5124992	0		=			
ANR	5125012	PtrMemberAccess	penum -> order		5124992	0					
ANR	5125013	Identifier	penum		5124992	0					
ANR	5125014	Identifier	order		5124992	1					
ANR	5125015	UnaryOperationExpression	* porder		5124992	1					
ANR	5125016	UnaryOperator	*		5124992	0					
ANR	5125017	Identifier	porder		5124992	1					
ANR	5125018	ExpressionStatement	penum -> halftone . rc . memory = mem	484:4:17306:17337	5124992	2	True				
ANR	5125019	AssignmentExpression	penum -> halftone . rc . memory = mem		5124992	0		=			
ANR	5125020	MemberAccess	penum -> halftone . rc . memory		5124992	0					
ANR	5125021	MemberAccess	penum -> halftone . rc		5124992	0					
ANR	5125022	PtrMemberAccess	penum -> halftone		5124992	0					
ANR	5125023	Identifier	penum		5124992	0					
ANR	5125024	Identifier	halftone		5124992	1					
ANR	5125025	Identifier	rc		5124992	1					
ANR	5125026	Identifier	memory		5124992	1					
ANR	5125027	Identifier	mem		5124992	1					
ANR	5125028	ExpressionStatement	penum -> halftone . type = ht_type_screen	485:4:17343:17380	5124992	3	True				
ANR	5125029	AssignmentExpression	penum -> halftone . type = ht_type_screen		5124992	0		=			
ANR	5125030	MemberAccess	penum -> halftone . type		5124992	0					
ANR	5125031	PtrMemberAccess	penum -> halftone		5124992	0					
ANR	5125032	Identifier	penum		5124992	0					
ANR	5125033	Identifier	halftone		5124992	1					
ANR	5125034	Identifier	type		5124992	1					
ANR	5125035	Identifier	ht_type_screen		5124992	1					
ANR	5125036	ExpressionStatement	penum -> halftone . params . screen = * phsp	486:4:17386:17423	5124992	4	True				
ANR	5125037	AssignmentExpression	penum -> halftone . params . screen = * phsp		5124992	0		=			
ANR	5125038	MemberAccess	penum -> halftone . params . screen		5124992	0					
ANR	5125039	MemberAccess	penum -> halftone . params		5124992	0					
ANR	5125040	PtrMemberAccess	penum -> halftone		5124992	0					
ANR	5125041	Identifier	penum		5124992	0					
ANR	5125042	Identifier	halftone		5124992	1					
ANR	5125043	Identifier	params		5124992	1					
ANR	5125044	Identifier	screen		5124992	1					
ANR	5125045	UnaryOperationExpression	* phsp		5124992	1					
ANR	5125046	UnaryOperator	*		5124992	0					
ANR	5125047	Identifier	phsp		5124992	1					
ANR	5125048	ExpressionStatement	penum -> x = penum -> y = 0	487:4:17429:17452	5124992	5	True				
ANR	5125049	AssignmentExpression	penum -> x = penum -> y = 0		5124992	0		=			
ANR	5125050	PtrMemberAccess	penum -> x		5124992	0					
ANR	5125051	Identifier	penum		5124992	0					
ANR	5125052	Identifier	x		5124992	1					
ANR	5125053	AssignmentExpression	penum -> y = 0		5124992	1		=			
ANR	5125054	PtrMemberAccess	penum -> y		5124992	0					
ANR	5125055	Identifier	penum		5124992	0					
ANR	5125056	Identifier	y		5124992	1					
ANR	5125057	PrimaryExpression	0		5124992	1					
ANR	5125058	ExpressionStatement	penum -> strip = porder -> num_levels / porder -> width	489:4:17459:17508	5124992	6	True				
ANR	5125059	AssignmentExpression	penum -> strip = porder -> num_levels / porder -> width		5124992	0		=			
ANR	5125060	PtrMemberAccess	penum -> strip		5124992	0					
ANR	5125061	Identifier	penum		5124992	0					
ANR	5125062	Identifier	strip		5124992	1					
ANR	5125063	MultiplicativeExpression	porder -> num_levels / porder -> width		5124992	1		/			
ANR	5125064	PtrMemberAccess	porder -> num_levels		5124992	0					
ANR	5125065	Identifier	porder		5124992	0					
ANR	5125066	Identifier	num_levels		5124992	1					
ANR	5125067	PtrMemberAccess	porder -> width		5124992	1					
ANR	5125068	Identifier	porder		5124992	0					
ANR	5125069	Identifier	width		5124992	1					
ANR	5125070	ExpressionStatement	penum -> shift = porder -> shift	490:4:17514:17542	5124992	7	True				
ANR	5125071	AssignmentExpression	penum -> shift = porder -> shift		5124992	0		=			
ANR	5125072	PtrMemberAccess	penum -> shift		5124992	0					
ANR	5125073	Identifier	penum		5124992	0					
ANR	5125074	Identifier	shift		5124992	1					
ANR	5125075	PtrMemberAccess	porder -> shift		5124992	1					
ANR	5125076	Identifier	porder		5124992	0					
ANR	5125077	Identifier	shift		5124992	1					
ANR	5125078	CompoundStatement		34:8:1302:1348	5124992	8					
ANR	5125079	IdentifierDeclStatement	"const int M = porder -> params . M , N = porder -> params . N , R = porder -> params . R ;"	511:8:18284:18358	5124992	0	True				
ANR	5125080	IdentifierDecl	M = porder -> params . M		5124992	0					
ANR	5125081	IdentifierDeclType	const int		5124992	0					
ANR	5125082	Identifier	M		5124992	1					
ANR	5125083	AssignmentExpression	M = porder -> params . M		5124992	2		=			
ANR	5125084	Identifier	M		5124992	0					
ANR	5125085	MemberAccess	porder -> params . M		5124992	1					
ANR	5125086	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125087	Identifier	porder		5124992	0					
ANR	5125088	Identifier	params		5124992	1					
ANR	5125089	Identifier	M		5124992	1					
ANR	5125090	IdentifierDecl	N = porder -> params . N		5124992	1					
ANR	5125091	IdentifierDeclType	const int		5124992	0					
ANR	5125092	Identifier	N		5124992	1					
ANR	5125093	AssignmentExpression	N = porder -> params . N		5124992	2		=			
ANR	5125094	Identifier	N		5124992	0					
ANR	5125095	MemberAccess	porder -> params . N		5124992	1					
ANR	5125096	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125097	Identifier	porder		5124992	0					
ANR	5125098	Identifier	params		5124992	1					
ANR	5125099	Identifier	N		5124992	1					
ANR	5125100	IdentifierDecl	R = porder -> params . R		5124992	2					
ANR	5125101	IdentifierDeclType	const int		5124992	0					
ANR	5125102	Identifier	R		5124992	1					
ANR	5125103	AssignmentExpression	R = porder -> params . R		5124992	2		=			
ANR	5125104	Identifier	R		5124992	0					
ANR	5125105	MemberAccess	porder -> params . R		5124992	1					
ANR	5125106	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125107	Identifier	porder		5124992	0					
ANR	5125108	Identifier	params		5124992	1					
ANR	5125109	Identifier	R		5124992	1					
ANR	5125110	IdentifierDeclStatement	"const int M1 = porder -> params . M1 , N1 = porder -> params . N1 , R1 = porder -> params . R1 ;"	512:8:18368:18448	5124992	1	True				
ANR	5125111	IdentifierDecl	M1 = porder -> params . M1		5124992	0					
ANR	5125112	IdentifierDeclType	const int		5124992	0					
ANR	5125113	Identifier	M1		5124992	1					
ANR	5125114	AssignmentExpression	M1 = porder -> params . M1		5124992	2		=			
ANR	5125115	Identifier	M1		5124992	0					
ANR	5125116	MemberAccess	porder -> params . M1		5124992	1					
ANR	5125117	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125118	Identifier	porder		5124992	0					
ANR	5125119	Identifier	params		5124992	1					
ANR	5125120	Identifier	M1		5124992	1					
ANR	5125121	IdentifierDecl	N1 = porder -> params . N1		5124992	1					
ANR	5125122	IdentifierDeclType	const int		5124992	0					
ANR	5125123	Identifier	N1		5124992	1					
ANR	5125124	AssignmentExpression	N1 = porder -> params . N1		5124992	2		=			
ANR	5125125	Identifier	N1		5124992	0					
ANR	5125126	MemberAccess	porder -> params . N1		5124992	1					
ANR	5125127	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125128	Identifier	porder		5124992	0					
ANR	5125129	Identifier	params		5124992	1					
ANR	5125130	Identifier	N1		5124992	1					
ANR	5125131	IdentifierDecl	R1 = porder -> params . R1		5124992	2					
ANR	5125132	IdentifierDeclType	const int		5124992	0					
ANR	5125133	Identifier	R1		5124992	1					
ANR	5125134	AssignmentExpression	R1 = porder -> params . R1		5124992	2		=			
ANR	5125135	Identifier	R1		5124992	0					
ANR	5125136	MemberAccess	porder -> params . R1		5124992	1					
ANR	5125137	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125138	Identifier	porder		5124992	0					
ANR	5125139	Identifier	params		5124992	1					
ANR	5125140	Identifier	R1		5124992	1					
ANR	5125141	IdentifierDeclStatement	double Q = 2.0 / ( ( long ) M * M1 + ( long ) N * N1 ) ;	513:8:18458:18504	5124992	2	True				
ANR	5125142	IdentifierDecl	Q = 2.0 / ( ( long ) M * M1 + ( long ) N * N1 )		5124992	0					
ANR	5125143	IdentifierDeclType	double		5124992	0					
ANR	5125144	Identifier	Q		5124992	1					
ANR	5125145	AssignmentExpression	Q = 2.0 / ( ( long ) M * M1 + ( long ) N * N1 )		5124992	2		=			
ANR	5125146	Identifier	Q		5124992	0					
ANR	5125147	MultiplicativeExpression	2.0 / ( ( long ) M * M1 + ( long ) N * N1 )		5124992	1		/			
ANR	5125148	PrimaryExpression	2.0		5124992	0					
ANR	5125149	AdditiveExpression	( long ) M * M1 + ( long ) N * N1		5124992	1		+			
ANR	5125150	MultiplicativeExpression	( long ) M * M1		5124992	0		*			
ANR	5125151	CastExpression	( long ) M		5124992	0					
ANR	5125152	CastTarget	long		5124992	0					
ANR	5125153	Identifier	M		5124992	1					
ANR	5125154	Identifier	M1		5124992	1					
ANR	5125155	MultiplicativeExpression	( long ) N * N1		5124992	1		*			
ANR	5125156	CastExpression	( long ) N		5124992	0					
ANR	5125157	CastTarget	long		5124992	0					
ANR	5125158	Identifier	N		5124992	1					
ANR	5125159	Identifier	N1		5124992	1					
ANR	5125160	ExpressionStatement	penum -> mat . xx = Q * ( R * M1 )	515:8:18515:18543	5124992	3	True				
ANR	5125161	AssignmentExpression	penum -> mat . xx = Q * ( R * M1 )		5124992	0		=			
ANR	5125162	MemberAccess	penum -> mat . xx		5124992	0					
ANR	5125163	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125164	Identifier	penum		5124992	0					
ANR	5125165	Identifier	mat		5124992	1					
ANR	5125166	Identifier	xx		5124992	1					
ANR	5125167	MultiplicativeExpression	Q * ( R * M1 )		5124992	1		*			
ANR	5125168	Identifier	Q		5124992	0					
ANR	5125169	MultiplicativeExpression	R * M1		5124992	1		*			
ANR	5125170	Identifier	R		5124992	0					
ANR	5125171	Identifier	M1		5124992	1					
ANR	5125172	ExpressionStatement	penum -> mat . xy = Q * ( - R1 * N )	516:8:18553:18582	5124992	4	True				
ANR	5125173	AssignmentExpression	penum -> mat . xy = Q * ( - R1 * N )		5124992	0		=			
ANR	5125174	MemberAccess	penum -> mat . xy		5124992	0					
ANR	5125175	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125176	Identifier	penum		5124992	0					
ANR	5125177	Identifier	mat		5124992	1					
ANR	5125178	Identifier	xy		5124992	1					
ANR	5125179	MultiplicativeExpression	Q * ( - R1 * N )		5124992	1		*			
ANR	5125180	Identifier	Q		5124992	0					
ANR	5125181	MultiplicativeExpression	- R1 * N		5124992	1		*			
ANR	5125182	UnaryOperationExpression	- R1		5124992	0					
ANR	5125183	UnaryOperator	-		5124992	0					
ANR	5125184	Identifier	R1		5124992	1					
ANR	5125185	Identifier	N		5124992	1					
ANR	5125186	ExpressionStatement	penum -> mat . yx = Q * ( R * N1 )	517:8:18592:18620	5124992	5	True				
ANR	5125187	AssignmentExpression	penum -> mat . yx = Q * ( R * N1 )		5124992	0		=			
ANR	5125188	MemberAccess	penum -> mat . yx		5124992	0					
ANR	5125189	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125190	Identifier	penum		5124992	0					
ANR	5125191	Identifier	mat		5124992	1					
ANR	5125192	Identifier	yx		5124992	1					
ANR	5125193	MultiplicativeExpression	Q * ( R * N1 )		5124992	1		*			
ANR	5125194	Identifier	Q		5124992	0					
ANR	5125195	MultiplicativeExpression	R * N1		5124992	1		*			
ANR	5125196	Identifier	R		5124992	0					
ANR	5125197	Identifier	N1		5124992	1					
ANR	5125198	ExpressionStatement	penum -> mat . yy = Q * ( R1 * M )	518:8:18630:18658	5124992	6	True				
ANR	5125199	AssignmentExpression	penum -> mat . yy = Q * ( R1 * M )		5124992	0		=			
ANR	5125200	MemberAccess	penum -> mat . yy		5124992	0					
ANR	5125201	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125202	Identifier	penum		5124992	0					
ANR	5125203	Identifier	mat		5124992	1					
ANR	5125204	Identifier	yy		5124992	1					
ANR	5125205	MultiplicativeExpression	Q * ( R1 * M )		5124992	1		*			
ANR	5125206	Identifier	Q		5124992	0					
ANR	5125207	MultiplicativeExpression	R1 * M		5124992	1		*			
ANR	5125208	Identifier	R1		5124992	0					
ANR	5125209	Identifier	M		5124992	1					
ANR	5125210	ExpressionStatement	penum -> mat . tx = - 1.0	519:8:18668:18688	5124992	7	True				
ANR	5125211	AssignmentExpression	penum -> mat . tx = - 1.0		5124992	0		=			
ANR	5125212	MemberAccess	penum -> mat . tx		5124992	0					
ANR	5125213	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125214	Identifier	penum		5124992	0					
ANR	5125215	Identifier	mat		5124992	1					
ANR	5125216	Identifier	tx		5124992	1					
ANR	5125217	UnaryOperationExpression	- 1.0		5124992	1					
ANR	5125218	UnaryOperator	-		5124992	0					
ANR	5125219	PrimaryExpression	1.0		5124992	1					
ANR	5125220	ExpressionStatement	penum -> mat . ty = - 1.0	520:8:18698:18718	5124992	8	True				
ANR	5125221	AssignmentExpression	penum -> mat . ty = - 1.0		5124992	0		=			
ANR	5125222	MemberAccess	penum -> mat . ty		5124992	0					
ANR	5125223	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125224	Identifier	penum		5124992	0					
ANR	5125225	Identifier	mat		5124992	1					
ANR	5125226	Identifier	ty		5124992	1					
ANR	5125227	UnaryOperationExpression	- 1.0		5124992	1					
ANR	5125228	UnaryOperator	-		5124992	0					
ANR	5125229	PrimaryExpression	1.0		5124992	1					
ANR	5125230	ExpressionStatement	"gs_matrix_invert ( & penum -> mat , & penum -> mat_inv )"	521:8:18728:18774	5124992	9	True				
ANR	5125231	CallExpression	"gs_matrix_invert ( & penum -> mat , & penum -> mat_inv )"		5124992	0					
ANR	5125232	Callee	gs_matrix_invert		5124992	0					
ANR	5125233	Identifier	gs_matrix_invert		5124992	0					
ANR	5125234	ArgumentList	& penum -> mat		5124992	1					
ANR	5125235	Argument	& penum -> mat		5124992	0					
ANR	5125236	UnaryOperationExpression	& penum -> mat		5124992	0					
ANR	5125237	UnaryOperator	&		5124992	0					
ANR	5125238	PtrMemberAccess	penum -> mat		5124992	1					
ANR	5125239	Identifier	penum		5124992	0					
ANR	5125240	Identifier	mat		5124992	1					
ANR	5125241	Argument	& penum -> mat_inv		5124992	1					
ANR	5125242	UnaryOperationExpression	& penum -> mat_inv		5124992	0					
ANR	5125243	UnaryOperator	&		5124992	0					
ANR	5125244	PtrMemberAccess	penum -> mat_inv		5124992	1					
ANR	5125245	Identifier	penum		5124992	0					
ANR	5125246	Identifier	mat_inv		5124992	1					
ANR	5125247	ExpressionStatement	"if_debug7 ( 'h' , ""[h]Screen: (%dx%d)/%d [%f %f %f %f]\\n"" , porder -> width , porder -> height , porder -> params . R , penum -> mat . xx , penum -> mat . xy , penum -> mat . yx , penum -> mat . yy )"	523:4:18786:18992	5124992	9	True				
ANR	5125248	CallExpression	"if_debug7 ( 'h' , ""[h]Screen: (%dx%d)/%d [%f %f %f %f]\\n"" , porder -> width , porder -> height , porder -> params . R , penum -> mat . xx , penum -> mat . xy , penum -> mat . yx , penum -> mat . yy )"		5124992	0					
ANR	5125249	Callee	if_debug7		5124992	0					
ANR	5125250	Identifier	if_debug7		5124992	0					
ANR	5125251	ArgumentList	'h'		5124992	1					
ANR	5125252	Argument	'h'		5124992	0					
ANR	5125253	PrimaryExpression	'h'		5124992	0					
ANR	5125254	Argument	"""[h]Screen: (%dx%d)/%d [%f %f %f %f]\\n"""		5124992	1					
ANR	5125255	PrimaryExpression	"""[h]Screen: (%dx%d)/%d [%f %f %f %f]\\n"""		5124992	0					
ANR	5125256	Argument	porder -> width		5124992	2					
ANR	5125257	PtrMemberAccess	porder -> width		5124992	0					
ANR	5125258	Identifier	porder		5124992	0					
ANR	5125259	Identifier	width		5124992	1					
ANR	5125260	Argument	porder -> height		5124992	3					
ANR	5125261	PtrMemberAccess	porder -> height		5124992	0					
ANR	5125262	Identifier	porder		5124992	0					
ANR	5125263	Identifier	height		5124992	1					
ANR	5125264	Argument	porder -> params . R		5124992	4					
ANR	5125265	MemberAccess	porder -> params . R		5124992	0					
ANR	5125266	PtrMemberAccess	porder -> params		5124992	0					
ANR	5125267	Identifier	porder		5124992	0					
ANR	5125268	Identifier	params		5124992	1					
ANR	5125269	Identifier	R		5124992	1					
ANR	5125270	Argument	penum -> mat . xx		5124992	5					
ANR	5125271	MemberAccess	penum -> mat . xx		5124992	0					
ANR	5125272	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125273	Identifier	penum		5124992	0					
ANR	5125274	Identifier	mat		5124992	1					
ANR	5125275	Identifier	xx		5124992	1					
ANR	5125276	Argument	penum -> mat . xy		5124992	6					
ANR	5125277	MemberAccess	penum -> mat . xy		5124992	0					
ANR	5125278	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125279	Identifier	penum		5124992	0					
ANR	5125280	Identifier	mat		5124992	1					
ANR	5125281	Identifier	xy		5124992	1					
ANR	5125282	Argument	penum -> mat . yx		5124992	7					
ANR	5125283	MemberAccess	penum -> mat . yx		5124992	0					
ANR	5125284	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125285	Identifier	penum		5124992	0					
ANR	5125286	Identifier	mat		5124992	1					
ANR	5125287	Identifier	yx		5124992	1					
ANR	5125288	Argument	penum -> mat . yy		5124992	8					
ANR	5125289	MemberAccess	penum -> mat . yy		5124992	0					
ANR	5125290	PtrMemberAccess	penum -> mat		5124992	0					
ANR	5125291	Identifier	penum		5124992	0					
ANR	5125292	Identifier	mat		5124992	1					
ANR	5125293	Identifier	yy		5124992	1					
ANR	5125294	ReturnStatement	return 0 ;	527:4:18998:19006	5124992	10	True				
ANR	5125295	PrimaryExpression	0		5124992	0					
ANR	5125296	ReturnType	int		5124992	1					
ANR	5125297	Identifier	gs_screen_enum_init_memory		5124992	2					
ANR	5125298	ParameterList	"gs_screen_enum * penum , const gx_ht_order * porder , gs_gstate * pgs , const gs_screen_halftone * phsp , gs_memory_t * mem"		5124992	3					
ANR	5125299	Parameter	gs_screen_enum * penum	477:27:16980:17001	5124992	0	True				
ANR	5125300	ParameterType	gs_screen_enum *		5124992	0					
ANR	5125301	Identifier	penum		5124992	1					
ANR	5125302	Parameter	const gx_ht_order * porder	477:51:17004:17029	5124992	1	True				
ANR	5125303	ParameterType	const gx_ht_order *		5124992	0					
ANR	5125304	Identifier	porder		5124992	1					
ANR	5125305	Parameter	gs_gstate * pgs	478:27:17059:17073	5124992	2	True				
ANR	5125306	ParameterType	gs_gstate *		5124992	0					
ANR	5125307	Identifier	pgs		5124992	1					
ANR	5125308	Parameter	const gs_screen_halftone * phsp	478:44:17076:17106	5124992	3	True				
ANR	5125309	ParameterType	const gs_screen_halftone *		5124992	0					
ANR	5125310	Identifier	phsp		5124992	1					
ANR	5125311	Parameter	gs_memory_t * mem	479:27:17136:17152	5124992	4	True				
ANR	5125312	ParameterType	gs_memory_t *		5124992	0					
ANR	5125313	Identifier	mem		5124992	1					
ANR	5125314	CFGEntryNode	ENTRY		5124992		True				
ANR	5125315	CFGExitNode	EXIT		5124992		True				
ANR	5125316	Symbol	penum -> mat . yy		5124992						
ANR	5125317	Symbol	porder -> num_levels		5124992						
ANR	5125318	Symbol	penum -> mat . yx		5124992						
ANR	5125319	Symbol	M1		5124992						
ANR	5125320	Symbol	ht_type_screen		5124992						
ANR	5125321	Symbol	& penum -> mat_inv		5124992						
ANR	5125322	Symbol	porder -> width		5124992						
ANR	5125323	Symbol	porder -> shift		5124992						
ANR	5125324	Symbol	porder -> params		5124992						
ANR	5125325	Symbol	& penum -> order		5124992						
ANR	5125326	Symbol	R1		5124992						
ANR	5125327	Symbol	penum -> mat . xx		5124992						
ANR	5125328	Symbol	penum -> mat . xy		5124992						
ANR	5125329	Symbol	penum -> halftone . params . screen		5124992						
ANR	5125330	Symbol	N1		5124992						
ANR	5125331	Symbol	penum -> mat . tx		5124992						
ANR	5125332	Symbol	penum -> mat . ty		5124992						
ANR	5125333	Symbol	porder -> height		5124992						
ANR	5125334	Symbol	penum		5124992						
ANR	5125335	Symbol	* phsp		5124992						
ANR	5125336	Symbol	porder		5124992						
ANR	5125337	Symbol	porder -> params . R1		5124992						
ANR	5125338	Symbol	porder -> params . M1		5124992						
ANR	5125339	Symbol	penum -> mat		5124992						
ANR	5125340	Symbol	penum -> halftone . rc		5124992						
ANR	5125341	Symbol	penum -> halftone . params		5124992						
ANR	5125342	Symbol	& penum -> mat		5124992						
ANR	5125343	Symbol	* porder		5124992						
ANR	5125344	Symbol	penum -> halftone . rc . memory		5124992						
ANR	5125345	Symbol	* penum		5124992						
ANR	5125346	Symbol	penum -> order		5124992						
ANR	5125347	Symbol	porder -> params . R		5124992						
ANR	5125348	Symbol	M		5124992						
ANR	5125349	Symbol	N		5124992						
ANR	5125350	Symbol	penum -> pgs		5124992						
ANR	5125351	Symbol	Q		5124992						
ANR	5125352	Symbol	R		5124992						
ANR	5125353	Symbol	porder -> params . N1		5124992						
ANR	5125354	Symbol	mem		5124992						
ANR	5125355	Symbol	porder -> params . N		5124992						
ANR	5125356	Symbol	porder -> params . M		5124992						
ANR	5125357	Symbol	penum -> strip		5124992						
ANR	5125358	Symbol	pgs		5124992						
ANR	5125359	Symbol	phsp		5124992						
ANR	5125360	Symbol	penum -> halftone		5124992						
ANR	5125361	Symbol	penum -> x		5124992						
ANR	5125362	Symbol	penum -> y		5124992						
ANR	5125363	Symbol	penum -> halftone . type		5124992						
ANR	5125364	Symbol	penum -> shift		5124992						
ANR	5125365	Function	gs_screen_currentpoint	531:0:19051:20676							
ANR	5125366	FunctionDef	"gs_screen_currentpoint (gs_screen_enum * penum , gs_point * ppt)"		5125365	0					
ANR	5125367	CompoundStatement		533:0:19118:20676	5125365	0					
ANR	5125368	IdentifierDeclStatement	gs_point pt ;	534:4:19124:19135	5125365	0	True				
ANR	5125369	IdentifierDecl	pt		5125365	0					
ANR	5125370	IdentifierDeclType	gs_point		5125365	0					
ANR	5125371	Identifier	pt		5125365	1					
ANR	5125372	IdentifierDeclStatement	int code ;	535:4:19141:19149	5125365	1	True				
ANR	5125373	IdentifierDecl	code		5125365	0					
ANR	5125374	IdentifierDeclType	int		5125365	0					
ANR	5125375	Identifier	code		5125365	1					
ANR	5125376	IdentifierDeclStatement	"double sx , sy ;"	536:4:19155:19168	5125365	2	True				
ANR	5125377	IdentifierDecl	sx		5125365	0					
ANR	5125378	IdentifierDeclType	double		5125365	0					
ANR	5125379	Identifier	sx		5125365	1					
ANR	5125380	IdentifierDecl	sy		5125365	1					
ANR	5125381	IdentifierDeclType	double		5125365	0					
ANR	5125382	Identifier	sy		5125365	1					
ANR	5125383	IdentifierDeclStatement	gs_point spot_center ;	537:4:19218:19238	5125365	3	True				
ANR	5125384	IdentifierDecl	spot_center		5125365	0					
ANR	5125385	IdentifierDeclType	gs_point		5125365	0					
ANR	5125386	Identifier	spot_center		5125365	1					
ANR	5125387	IfStatement	if ( penum -> y >= penum -> strip )		5125365	4					
ANR	5125388	Condition	penum -> y >= penum -> strip	539:8:19269:19292	5125365	0	True				
ANR	5125389	RelationalExpression	penum -> y >= penum -> strip		5125365	0		>=			
ANR	5125390	PtrMemberAccess	penum -> y		5125365	0					
ANR	5125391	Identifier	penum		5125365	0					
ANR	5125392	Identifier	y		5125365	1					
ANR	5125393	PtrMemberAccess	penum -> strip		5125365	1					
ANR	5125394	Identifier	penum		5125365	0					
ANR	5125395	Identifier	strip		5125365	1					
ANR	5125396	CompoundStatement		7:34:176:176	5125365	1					
ANR	5125397	ExpressionStatement	gx_ht_construct_spot_order ( & penum -> order )	540:8:19324:19365	5125365	0	True				
ANR	5125398	CallExpression	gx_ht_construct_spot_order ( & penum -> order )		5125365	0					
ANR	5125399	Callee	gx_ht_construct_spot_order		5125365	0					
ANR	5125400	Identifier	gx_ht_construct_spot_order		5125365	0					
ANR	5125401	ArgumentList	& penum -> order		5125365	1					
ANR	5125402	Argument	& penum -> order		5125365	0					
ANR	5125403	UnaryOperationExpression	& penum -> order		5125365	0					
ANR	5125404	UnaryOperator	&		5125365	0					
ANR	5125405	PtrMemberAccess	penum -> order		5125365	1					
ANR	5125406	Identifier	penum		5125365	0					
ANR	5125407	Identifier	order		5125365	1					
ANR	5125408	ReturnStatement	return 1 ;	541:8:19375:19383	5125365	1	True				
ANR	5125409	PrimaryExpression	1		5125365	0					
ANR	5125410	IfStatement	"if ( ( code = gs_point_transform ( penum -> x + 0.501 , penum -> y + 0.498 , & penum -> mat , & pt ) ) < 0 )"		5125365	5					
ANR	5125411	Condition	"( code = gs_point_transform ( penum -> x + 0.501 , penum -> y + 0.498 , & penum -> mat , & pt ) ) < 0"	546:8:19578:19662	5125365	0	True				
ANR	5125412	RelationalExpression	"( code = gs_point_transform ( penum -> x + 0.501 , penum -> y + 0.498 , & penum -> mat , & pt ) ) < 0"		5125365	0		<			
ANR	5125413	AssignmentExpression	"code = gs_point_transform ( penum -> x + 0.501 , penum -> y + 0.498 , & penum -> mat , & pt )"		5125365	0		=			
ANR	5125414	Identifier	code		5125365	0					
ANR	5125415	CallExpression	"gs_point_transform ( penum -> x + 0.501 , penum -> y + 0.498 , & penum -> mat , & pt )"		5125365	1					
ANR	5125416	Callee	gs_point_transform		5125365	0					
ANR	5125417	Identifier	gs_point_transform		5125365	0					
ANR	5125418	ArgumentList	penum -> x + 0.501		5125365	1					
ANR	5125419	Argument	penum -> x + 0.501		5125365	0					
ANR	5125420	AdditiveExpression	penum -> x + 0.501		5125365	0		+			
ANR	5125421	PtrMemberAccess	penum -> x		5125365	0					
ANR	5125422	Identifier	penum		5125365	0					
ANR	5125423	Identifier	x		5125365	1					
ANR	5125424	PrimaryExpression	0.501		5125365	1					
ANR	5125425	Argument	penum -> y + 0.498		5125365	1					
ANR	5125426	AdditiveExpression	penum -> y + 0.498		5125365	0		+			
ANR	5125427	PtrMemberAccess	penum -> y		5125365	0					
ANR	5125428	Identifier	penum		5125365	0					
ANR	5125429	Identifier	y		5125365	1					
ANR	5125430	PrimaryExpression	0.498		5125365	1					
ANR	5125431	Argument	& penum -> mat		5125365	2					
ANR	5125432	UnaryOperationExpression	& penum -> mat		5125365	0					
ANR	5125433	UnaryOperator	&		5125365	0					
ANR	5125434	PtrMemberAccess	penum -> mat		5125365	1					
ANR	5125435	Identifier	penum		5125365	0					
ANR	5125436	Identifier	mat		5125365	1					
ANR	5125437	Argument	& pt		5125365	3					
ANR	5125438	UnaryOperationExpression	& pt		5125365	0					
ANR	5125439	UnaryOperator	&		5125365	0					
ANR	5125440	Identifier	pt		5125365	1					
ANR	5125441	PrimaryExpression	0		5125365	1					
ANR	5125442	ReturnStatement	return code ;	547:8:19673:19684	5125365	1	True				
ANR	5125443	Identifier	code		5125365	0					
ANR	5125444	ExpressionStatement	sx = ceil ( pt . x / 2 ) * 2	550:4:19741:19766	5125365	6	True				
ANR	5125445	AssignmentExpression	sx = ceil ( pt . x / 2 ) * 2		5125365	0		=			
ANR	5125446	Identifier	sx		5125365	0					
ANR	5125447	MultiplicativeExpression	ceil ( pt . x / 2 ) * 2		5125365	1		*			
ANR	5125448	CallExpression	ceil ( pt . x / 2 )		5125365	0					
ANR	5125449	Callee	ceil		5125365	0					
ANR	5125450	Identifier	ceil		5125365	0					
ANR	5125451	ArgumentList	pt . x / 2		5125365	1					
ANR	5125452	Argument	pt . x / 2		5125365	0					
ANR	5125453	MultiplicativeExpression	pt . x / 2		5125365	0		/			
ANR	5125454	MemberAccess	pt . x		5125365	0					
ANR	5125455	Identifier	pt		5125365	0					
ANR	5125456	Identifier	x		5125365	1					
ANR	5125457	PrimaryExpression	2		5125365	1					
ANR	5125458	PrimaryExpression	2		5125365	1					
ANR	5125459	ExpressionStatement	sy = ceil ( pt . y / 2 ) * 2	551:4:19772:19797	5125365	7	True				
ANR	5125460	AssignmentExpression	sy = ceil ( pt . y / 2 ) * 2		5125365	0		=			
ANR	5125461	Identifier	sy		5125365	0					
ANR	5125462	MultiplicativeExpression	ceil ( pt . y / 2 ) * 2		5125365	1		*			
ANR	5125463	CallExpression	ceil ( pt . y / 2 )		5125365	0					
ANR	5125464	Callee	ceil		5125365	0					
ANR	5125465	Identifier	ceil		5125365	0					
ANR	5125466	ArgumentList	pt . y / 2		5125365	1					
ANR	5125467	Argument	pt . y / 2		5125365	0					
ANR	5125468	MultiplicativeExpression	pt . y / 2		5125365	0		/			
ANR	5125469	MemberAccess	pt . y		5125365	0					
ANR	5125470	Identifier	pt		5125365	0					
ANR	5125471	Identifier	y		5125365	1					
ANR	5125472	PrimaryExpression	2		5125365	1					
ANR	5125473	PrimaryExpression	2		5125365	1					
ANR	5125474	IfStatement	"if ( ( code = gs_point_transform ( sx , sy , & penum -> mat_inv , & spot_center ) ) < 0 )"		5125365	8					
ANR	5125475	Condition	"( code = gs_point_transform ( sx , sy , & penum -> mat_inv , & spot_center ) ) < 0"	552:8:19807:19876	5125365	0	True				
ANR	5125476	RelationalExpression	"( code = gs_point_transform ( sx , sy , & penum -> mat_inv , & spot_center ) ) < 0"		5125365	0		<			
ANR	5125477	AssignmentExpression	"code = gs_point_transform ( sx , sy , & penum -> mat_inv , & spot_center )"		5125365	0		=			
ANR	5125478	Identifier	code		5125365	0					
ANR	5125479	CallExpression	"gs_point_transform ( sx , sy , & penum -> mat_inv , & spot_center )"		5125365	1					
ANR	5125480	Callee	gs_point_transform		5125365	0					
ANR	5125481	Identifier	gs_point_transform		5125365	0					
ANR	5125482	ArgumentList	sx		5125365	1					
ANR	5125483	Argument	sx		5125365	0					
ANR	5125484	Identifier	sx		5125365	0					
ANR	5125485	Argument	sy		5125365	1					
ANR	5125486	Identifier	sy		5125365	0					
ANR	5125487	Argument	& penum -> mat_inv		5125365	2					
ANR	5125488	UnaryOperationExpression	& penum -> mat_inv		5125365	0					
ANR	5125489	UnaryOperator	&		5125365	0					
ANR	5125490	PtrMemberAccess	penum -> mat_inv		5125365	1					
ANR	5125491	Identifier	penum		5125365	0					
ANR	5125492	Identifier	mat_inv		5125365	1					
ANR	5125493	Argument	& spot_center		5125365	3					
ANR	5125494	UnaryOperationExpression	& spot_center		5125365	0					
ANR	5125495	UnaryOperator	&		5125365	0					
ANR	5125496	Identifier	spot_center		5125365	1					
ANR	5125497	PrimaryExpression	0		5125365	1					
ANR	5125498	ReturnStatement	return code ;	553:8:19887:19898	5125365	1	True				
ANR	5125499	Identifier	code		5125365	0					
ANR	5125500	ExpressionStatement	spot_center . x = floor ( spot_center . x ) + 0.5	556:4:19963:20005	5125365	9	True				
ANR	5125501	AssignmentExpression	spot_center . x = floor ( spot_center . x ) + 0.5		5125365	0		=			
ANR	5125502	MemberAccess	spot_center . x		5125365	0					
ANR	5125503	Identifier	spot_center		5125365	0					
ANR	5125504	Identifier	x		5125365	1					
ANR	5125505	AdditiveExpression	floor ( spot_center . x ) + 0.5		5125365	1		+			
ANR	5125506	CallExpression	floor ( spot_center . x )		5125365	0					
ANR	5125507	Callee	floor		5125365	0					
ANR	5125508	Identifier	floor		5125365	0					
ANR	5125509	ArgumentList	spot_center . x		5125365	1					
ANR	5125510	Argument	spot_center . x		5125365	0					
ANR	5125511	MemberAccess	spot_center . x		5125365	0					
ANR	5125512	Identifier	spot_center		5125365	0					
ANR	5125513	Identifier	x		5125365	1					
ANR	5125514	PrimaryExpression	0.5		5125365	1					
ANR	5125515	ExpressionStatement	spot_center . y = floor ( spot_center . y ) + 0.5	557:4:20011:20053	5125365	10	True				
ANR	5125516	AssignmentExpression	spot_center . y = floor ( spot_center . y ) + 0.5		5125365	0		=			
ANR	5125517	MemberAccess	spot_center . y		5125365	0					
ANR	5125518	Identifier	spot_center		5125365	0					
ANR	5125519	Identifier	y		5125365	1					
ANR	5125520	AdditiveExpression	floor ( spot_center . y ) + 0.5		5125365	1		+			
ANR	5125521	CallExpression	floor ( spot_center . y )		5125365	0					
ANR	5125522	Callee	floor		5125365	0					
ANR	5125523	Identifier	floor		5125365	0					
ANR	5125524	ArgumentList	spot_center . y		5125365	1					
ANR	5125525	Argument	spot_center . y		5125365	0					
ANR	5125526	MemberAccess	spot_center . y		5125365	0					
ANR	5125527	Identifier	spot_center		5125365	0					
ANR	5125528	Identifier	y		5125365	1					
ANR	5125529	PrimaryExpression	0.5		5125365	1					
ANR	5125530	IfStatement	"if ( ( code = gs_distance_transform ( penum -> x - spot_center . x + 0.501 , penum -> y - spot_center . y + 0.498 , & penum -> mat , & pt ) ) < 0 )"		5125365	11					
ANR	5125531	Condition	"( code = gs_distance_transform ( penum -> x - spot_center . x + 0.501 , penum -> y - spot_center . y + 0.498 , & penum -> mat , & pt ) ) < 0"	560:8:20133:20328	5125365	0	True				
ANR	5125532	RelationalExpression	"( code = gs_distance_transform ( penum -> x - spot_center . x + 0.501 , penum -> y - spot_center . y + 0.498 , & penum -> mat , & pt ) ) < 0"		5125365	0		<			
ANR	5125533	AssignmentExpression	"code = gs_distance_transform ( penum -> x - spot_center . x + 0.501 , penum -> y - spot_center . y + 0.498 , & penum -> mat , & pt )"		5125365	0		=			
ANR	5125534	Identifier	code		5125365	0					
ANR	5125535	CallExpression	"gs_distance_transform ( penum -> x - spot_center . x + 0.501 , penum -> y - spot_center . y + 0.498 , & penum -> mat , & pt )"		5125365	1					
ANR	5125536	Callee	gs_distance_transform		5125365	0					
ANR	5125537	Identifier	gs_distance_transform		5125365	0					
ANR	5125538	ArgumentList	penum -> x - spot_center . x + 0.501		5125365	1					
ANR	5125539	Argument	penum -> x - spot_center . x + 0.501		5125365	0					
ANR	5125540	AdditiveExpression	penum -> x - spot_center . x + 0.501		5125365	0		-			
ANR	5125541	PtrMemberAccess	penum -> x		5125365	0					
ANR	5125542	Identifier	penum		5125365	0					
ANR	5125543	Identifier	x		5125365	1					
ANR	5125544	AdditiveExpression	spot_center . x + 0.501		5125365	1		+			
ANR	5125545	MemberAccess	spot_center . x		5125365	0					
ANR	5125546	Identifier	spot_center		5125365	0					
ANR	5125547	Identifier	x		5125365	1					
ANR	5125548	PrimaryExpression	0.501		5125365	1					
ANR	5125549	Argument	penum -> y - spot_center . y + 0.498		5125365	1					
ANR	5125550	AdditiveExpression	penum -> y - spot_center . y + 0.498		5125365	0		-			
ANR	5125551	PtrMemberAccess	penum -> y		5125365	0					
ANR	5125552	Identifier	penum		5125365	0					
ANR	5125553	Identifier	y		5125365	1					
ANR	5125554	AdditiveExpression	spot_center . y + 0.498		5125365	1		+			
ANR	5125555	MemberAccess	spot_center . y		5125365	0					
ANR	5125556	Identifier	spot_center		5125365	0					
ANR	5125557	Identifier	y		5125365	1					
ANR	5125558	PrimaryExpression	0.498		5125365	1					
ANR	5125559	Argument	& penum -> mat		5125365	2					
ANR	5125560	UnaryOperationExpression	& penum -> mat		5125365	0					
ANR	5125561	UnaryOperator	&		5125365	0					
ANR	5125562	PtrMemberAccess	penum -> mat		5125365	1					
ANR	5125563	Identifier	penum		5125365	0					
ANR	5125564	Identifier	mat		5125365	1					
ANR	5125565	Argument	& pt		5125365	3					
ANR	5125566	UnaryOperationExpression	& pt		5125365	0					
ANR	5125567	UnaryOperator	&		5125365	0					
ANR	5125568	Identifier	pt		5125365	1					
ANR	5125569	PrimaryExpression	0		5125365	1					
ANR	5125570	ReturnStatement	return code ;	563:8:20339:20350	5125365	1	True				
ANR	5125571	Identifier	code		5125365	0					
ANR	5125572	ExpressionStatement	pt . x += 1	564:4:20356:20365	5125365	12	True				
ANR	5125573	AssignmentExpression	pt . x += 1		5125365	0		+=			
ANR	5125574	MemberAccess	pt . x		5125365	0					
ANR	5125575	Identifier	pt		5125365	0					
ANR	5125576	Identifier	x		5125365	1					
ANR	5125577	PrimaryExpression	1		5125365	1					
ANR	5125578	ExpressionStatement	pt . y += 1	565:4:20371:20380	5125365	13	True				
ANR	5125579	AssignmentExpression	pt . y += 1		5125365	0		+=			
ANR	5125580	MemberAccess	pt . y		5125365	0					
ANR	5125581	Identifier	pt		5125365	0					
ANR	5125582	Identifier	y		5125365	1					
ANR	5125583	PrimaryExpression	1		5125365	1					
ANR	5125584	IfStatement	if ( pt . x < - 1.0 )		5125365	14					
ANR	5125585	Condition	pt . x < - 1.0	567:8:20391:20401	5125365	0	True				
ANR	5125586	RelationalExpression	pt . x < - 1.0		5125365	0		<			
ANR	5125587	MemberAccess	pt . x		5125365	0					
ANR	5125588	Identifier	pt		5125365	0					
ANR	5125589	Identifier	x		5125365	1					
ANR	5125590	UnaryOperationExpression	- 1.0		5125365	1					
ANR	5125591	UnaryOperator	-		5125365	0					
ANR	5125592	PrimaryExpression	1.0		5125365	1					
ANR	5125593	ExpressionStatement	pt . x += ( ( int ) ( - ceil ( pt . x ) ) + 1 ) & ~1	568:8:20412:20449	5125365	1	True				
ANR	5125594	AssignmentExpression	pt . x += ( ( int ) ( - ceil ( pt . x ) ) + 1 ) & ~1		5125365	0		+=			
ANR	5125595	MemberAccess	pt . x		5125365	0					
ANR	5125596	Identifier	pt		5125365	0					
ANR	5125597	Identifier	x		5125365	1					
ANR	5125598	BitAndExpression	( ( int ) ( - ceil ( pt . x ) ) + 1 ) & ~1		5125365	1		&			
ANR	5125599	AdditiveExpression	( int ) ( - ceil ( pt . x ) ) + 1		5125365	0		+			
ANR	5125600	CastExpression	( int ) ( - ceil ( pt . x ) )		5125365	0					
ANR	5125601	CastTarget	int		5125365	0					
ANR	5125602	UnaryOperationExpression	- ceil ( pt . x )		5125365	1					
ANR	5125603	UnaryOperator	-		5125365	0					
ANR	5125604	CallExpression	ceil ( pt . x )		5125365	1					
ANR	5125605	Callee	ceil		5125365	0					
ANR	5125606	Identifier	ceil		5125365	0					
ANR	5125607	ArgumentList	pt . x		5125365	1					
ANR	5125608	Argument	pt . x		5125365	0					
ANR	5125609	MemberAccess	pt . x		5125365	0					
ANR	5125610	Identifier	pt		5125365	0					
ANR	5125611	Identifier	x		5125365	1					
ANR	5125612	PrimaryExpression	1		5125365	1					
ANR	5125613	Identifier	~1		5125365	1					
ANR	5125614	ElseStatement	else		5125365	0					
ANR	5125615	IfStatement	if ( pt . x >= 1.0 )		5125365	0					
ANR	5125616	Condition	pt . x >= 1.0	569:13:20464:20474	5125365	0	True				
ANR	5125617	RelationalExpression	pt . x >= 1.0		5125365	0		>=			
ANR	5125618	MemberAccess	pt . x		5125365	0					
ANR	5125619	Identifier	pt		5125365	0					
ANR	5125620	Identifier	x		5125365	1					
ANR	5125621	PrimaryExpression	1.0		5125365	1					
ANR	5125622	ExpressionStatement	pt . x -= ( ( int ) pt . x + 1 ) & ~1	570:8:20485:20513	5125365	1	True				
ANR	5125623	AssignmentExpression	pt . x -= ( ( int ) pt . x + 1 ) & ~1		5125365	0		-=			
ANR	5125624	MemberAccess	pt . x		5125365	0					
ANR	5125625	Identifier	pt		5125365	0					
ANR	5125626	Identifier	x		5125365	1					
ANR	5125627	BitAndExpression	( ( int ) pt . x + 1 ) & ~1		5125365	1		&			
ANR	5125628	AdditiveExpression	( int ) pt . x + 1		5125365	0		+			
ANR	5125629	CastExpression	( int ) pt . x		5125365	0					
ANR	5125630	CastTarget	int		5125365	0					
ANR	5125631	MemberAccess	pt . x		5125365	1					
ANR	5125632	Identifier	pt		5125365	0					
ANR	5125633	Identifier	x		5125365	1					
ANR	5125634	PrimaryExpression	1		5125365	1					
ANR	5125635	Identifier	~1		5125365	1					
ANR	5125636	IfStatement	if ( pt . y < - 1.0 )		5125365	15					
ANR	5125637	Condition	pt . y < - 1.0	571:8:20523:20533	5125365	0	True				
ANR	5125638	RelationalExpression	pt . y < - 1.0		5125365	0		<			
ANR	5125639	MemberAccess	pt . y		5125365	0					
ANR	5125640	Identifier	pt		5125365	0					
ANR	5125641	Identifier	y		5125365	1					
ANR	5125642	UnaryOperationExpression	- 1.0		5125365	1					
ANR	5125643	UnaryOperator	-		5125365	0					
ANR	5125644	PrimaryExpression	1.0		5125365	1					
ANR	5125645	ExpressionStatement	pt . y += ( ( int ) ( - ceil ( pt . y ) ) + 1 ) & ~1	572:8:20544:20581	5125365	1	True				
ANR	5125646	AssignmentExpression	pt . y += ( ( int ) ( - ceil ( pt . y ) ) + 1 ) & ~1		5125365	0		+=			
ANR	5125647	MemberAccess	pt . y		5125365	0					
ANR	5125648	Identifier	pt		5125365	0					
ANR	5125649	Identifier	y		5125365	1					
ANR	5125650	BitAndExpression	( ( int ) ( - ceil ( pt . y ) ) + 1 ) & ~1		5125365	1		&			
ANR	5125651	AdditiveExpression	( int ) ( - ceil ( pt . y ) ) + 1		5125365	0		+			
ANR	5125652	CastExpression	( int ) ( - ceil ( pt . y ) )		5125365	0					
ANR	5125653	CastTarget	int		5125365	0					
ANR	5125654	UnaryOperationExpression	- ceil ( pt . y )		5125365	1					
ANR	5125655	UnaryOperator	-		5125365	0					
ANR	5125656	CallExpression	ceil ( pt . y )		5125365	1					
ANR	5125657	Callee	ceil		5125365	0					
ANR	5125658	Identifier	ceil		5125365	0					
ANR	5125659	ArgumentList	pt . y		5125365	1					
ANR	5125660	Argument	pt . y		5125365	0					
ANR	5125661	MemberAccess	pt . y		5125365	0					
ANR	5125662	Identifier	pt		5125365	0					
ANR	5125663	Identifier	y		5125365	1					
ANR	5125664	PrimaryExpression	1		5125365	1					
ANR	5125665	Identifier	~1		5125365	1					
ANR	5125666	ElseStatement	else		5125365	0					
ANR	5125667	IfStatement	if ( pt . y >= 1.0 )		5125365	0					
ANR	5125668	Condition	pt . y >= 1.0	573:13:20596:20606	5125365	0	True				
ANR	5125669	RelationalExpression	pt . y >= 1.0		5125365	0		>=			
ANR	5125670	MemberAccess	pt . y		5125365	0					
ANR	5125671	Identifier	pt		5125365	0					
ANR	5125672	Identifier	y		5125365	1					
ANR	5125673	PrimaryExpression	1.0		5125365	1					
ANR	5125674	ExpressionStatement	pt . y -= ( ( int ) pt . y + 1 ) & ~1	574:8:20617:20645	5125365	1	True				
ANR	5125675	AssignmentExpression	pt . y -= ( ( int ) pt . y + 1 ) & ~1		5125365	0		-=			
ANR	5125676	MemberAccess	pt . y		5125365	0					
ANR	5125677	Identifier	pt		5125365	0					
ANR	5125678	Identifier	y		5125365	1					
ANR	5125679	BitAndExpression	( ( int ) pt . y + 1 ) & ~1		5125365	1		&			
ANR	5125680	AdditiveExpression	( int ) pt . y + 1		5125365	0		+			
ANR	5125681	CastExpression	( int ) pt . y		5125365	0					
ANR	5125682	CastTarget	int		5125365	0					
ANR	5125683	MemberAccess	pt . y		5125365	1					
ANR	5125684	Identifier	pt		5125365	0					
ANR	5125685	Identifier	y		5125365	1					
ANR	5125686	PrimaryExpression	1		5125365	1					
ANR	5125687	Identifier	~1		5125365	1					
ANR	5125688	ExpressionStatement	* ppt = pt	575:4:20651:20660	5125365	16	True				
ANR	5125689	AssignmentExpression	* ppt = pt		5125365	0		=			
ANR	5125690	UnaryOperationExpression	* ppt		5125365	0					
ANR	5125691	UnaryOperator	*		5125365	0					
ANR	5125692	Identifier	ppt		5125365	1					
ANR	5125693	Identifier	pt		5125365	1					
ANR	5125694	ReturnStatement	return 0 ;	576:4:20666:20674	5125365	17	True				
ANR	5125695	PrimaryExpression	0		5125365	0					
ANR	5125696	ReturnType	int		5125365	1					
ANR	5125697	Identifier	gs_screen_currentpoint		5125365	2					
ANR	5125698	ParameterList	"gs_screen_enum * penum , gs_point * ppt"		5125365	3					
ANR	5125699	Parameter	gs_screen_enum * penum	532:23:19078:19099	5125365	0	True				
ANR	5125700	ParameterType	gs_screen_enum *		5125365	0					
ANR	5125701	Identifier	penum		5125365	1					
ANR	5125702	Parameter	gs_point * ppt	532:47:19102:19115	5125365	1	True				
ANR	5125703	ParameterType	gs_point *		5125365	0					
ANR	5125704	Identifier	ppt		5125365	1					
ANR	5125705	CFGEntryNode	ENTRY		5125365		True				
ANR	5125706	CFGExitNode	EXIT		5125365		True				
ANR	5125707	Symbol	* penum		5125365						
ANR	5125708	Symbol	code		5125365						
ANR	5125709	Symbol	gs_distance_transform		5125365						
ANR	5125710	Symbol	pt		5125365						
ANR	5125711	Symbol	spot_center		5125365						
ANR	5125712	Symbol	& penum -> mat_inv		5125365						
ANR	5125713	Symbol	gs_point_transform		5125365						
ANR	5125714	Symbol	& penum -> order		5125365						
ANR	5125715	Symbol	penum -> strip		5125365						
ANR	5125716	Symbol	floor		5125365						
ANR	5125717	Symbol	* ppt		5125365						
ANR	5125718	Symbol	& spot_center		5125365						
ANR	5125719	Symbol	sx		5125365						
ANR	5125720	Symbol	sy		5125365						
ANR	5125721	Symbol	penum		5125365						
ANR	5125722	Symbol	ceil		5125365						
ANR	5125723	Symbol	penum -> x		5125365						
ANR	5125724	Symbol	penum -> y		5125365						
ANR	5125725	Symbol	& pt		5125365						
ANR	5125726	Symbol	~1		5125365						
ANR	5125727	Symbol	ppt		5125365						
ANR	5125728	Symbol	spot_center . y		5125365						
ANR	5125729	Symbol	spot_center . x		5125365						
ANR	5125730	Symbol	& penum -> mat		5125365						
ANR	5125731	Symbol	pt . x		5125365						
ANR	5125732	Symbol	pt . y		5125365						
ANR	5125733	Function	gs_screen_next	580:0:20713:21442							
ANR	5125734	FunctionDef	"gs_screen_next (gs_screen_enum * penum , double value)"		5125733	0					
ANR	5125735	CompoundStatement		582:0:20770:21442	5125733	0					
ANR	5125736	IdentifierDeclStatement	ht_sample_t sample ;	583:4:20776:20794	5125733	0	True				
ANR	5125737	IdentifierDecl	sample		5125733	0					
ANR	5125738	IdentifierDeclType	ht_sample_t		5125733	0					
ANR	5125739	Identifier	sample		5125733	1					
ANR	5125740	IdentifierDeclStatement	int width = penum -> order . width ;	584:4:20800:20830	5125733	1	True				
ANR	5125741	IdentifierDecl	width = penum -> order . width		5125733	0					
ANR	5125742	IdentifierDeclType	int		5125733	0					
ANR	5125743	Identifier	width		5125733	1					
ANR	5125744	AssignmentExpression	width = penum -> order . width		5125733	2		=			
ANR	5125745	Identifier	width		5125733	0					
ANR	5125746	MemberAccess	penum -> order . width		5125733	1					
ANR	5125747	PtrMemberAccess	penum -> order		5125733	0					
ANR	5125748	Identifier	penum		5125733	0					
ANR	5125749	Identifier	order		5125733	1					
ANR	5125750	Identifier	width		5125733	1					
ANR	5125751	IdentifierDeclStatement	gx_ht_bit * bits = ( gx_ht_bit * ) penum -> order . bit_data ;	585:4:20836:20888	5125733	2	True				
ANR	5125752	IdentifierDecl	* bits = ( gx_ht_bit * ) penum -> order . bit_data		5125733	0					
ANR	5125753	IdentifierDeclType	gx_ht_bit *		5125733	0					
ANR	5125754	Identifier	bits		5125733	1					
ANR	5125755	AssignmentExpression	* bits = ( gx_ht_bit * ) penum -> order . bit_data		5125733	2		=			
ANR	5125756	Identifier	bits		5125733	0					
ANR	5125757	CastExpression	( gx_ht_bit * ) penum -> order . bit_data		5125733	1					
ANR	5125758	CastTarget	gx_ht_bit *		5125733	0					
ANR	5125759	MemberAccess	penum -> order . bit_data		5125733	1					
ANR	5125760	PtrMemberAccess	penum -> order		5125733	0					
ANR	5125761	Identifier	penum		5125733	0					
ANR	5125762	Identifier	order		5125733	1					
ANR	5125763	Identifier	bit_data		5125733	1					
ANR	5125764	IfStatement	if ( value < - 1.0 || value > 1.0 )		5125733	3					
ANR	5125765	Condition	value < - 1.0 || value > 1.0	587:8:20899:20925	5125733	0	True				
ANR	5125766	OrExpression	value < - 1.0 || value > 1.0		5125733	0		||			
ANR	5125767	RelationalExpression	value < - 1.0		5125733	0		<			
ANR	5125768	Identifier	value		5125733	0					
ANR	5125769	UnaryOperationExpression	- 1.0		5125733	1					
ANR	5125770	UnaryOperator	-		5125733	0					
ANR	5125771	PrimaryExpression	1.0		5125733	1					
ANR	5125772	RelationalExpression	value > 1.0		5125733	1		>			
ANR	5125773	Identifier	value		5125733	0					
ANR	5125774	PrimaryExpression	1.0		5125733	1					
ANR	5125775	ExpressionStatement	return_error ( gs_error_rangecheck )	588:8:20936:20969	5125733	1	True				
ANR	5125776	CallExpression	return_error ( gs_error_rangecheck )		5125733	0					
ANR	5125777	Callee	return_error		5125733	0					
ANR	5125778	Identifier	return_error		5125733	0					
ANR	5125779	ArgumentList	gs_error_rangecheck		5125733	1					
ANR	5125780	Argument	gs_error_rangecheck		5125733	0					
ANR	5125781	Identifier	gs_error_rangecheck		5125733	0					
ANR	5125782	ExpressionStatement	sample = ( ht_sample_t ) ( ( value + 1 ) * max_ht_sample )	589:4:20975:21027	5125733	4	True				
ANR	5125783	AssignmentExpression	sample = ( ht_sample_t ) ( ( value + 1 ) * max_ht_sample )		5125733	0		=			
ANR	5125784	Identifier	sample		5125733	0					
ANR	5125785	CastExpression	( ht_sample_t ) ( ( value + 1 ) * max_ht_sample )		5125733	1					
ANR	5125786	CastTarget	ht_sample_t		5125733	0					
ANR	5125787	MultiplicativeExpression	( value + 1 ) * max_ht_sample		5125733	1		*			
ANR	5125788	AdditiveExpression	value + 1		5125733	0		+			
ANR	5125789	Identifier	value		5125733	0					
ANR	5125790	PrimaryExpression	1		5125733	1					
ANR	5125791	Identifier	max_ht_sample		5125733	1					
ANR	5125792	IfStatement	if ( gs_debug_c ( 'H' ) )		5125733	5					
ANR	5125793	Condition	gs_debug_c ( 'H' )	591:8:21083:21097	5125733	0	True				
ANR	5125794	CallExpression	gs_debug_c ( 'H' )		5125733	0					
ANR	5125795	Callee	gs_debug_c		5125733	0					
ANR	5125796	Identifier	gs_debug_c		5125733	0					
ANR	5125797	ArgumentList	'H'		5125733	1					
ANR	5125798	Argument	'H'		5125733	0					
ANR	5125799	PrimaryExpression	'H'		5125733	0					
ANR	5125800	CompoundStatement		11:8:339:350	5125733	1					
ANR	5125801	IdentifierDeclStatement	gs_point pt ;	592:8:21110:21121	5125733	0	True				
ANR	5125802	IdentifierDecl	pt		5125733	0					
ANR	5125803	IdentifierDeclType	gs_point		5125733	0					
ANR	5125804	Identifier	pt		5125733	1					
ANR	5125805	ExpressionStatement	"gs_screen_currentpoint ( penum , & pt )"	594:8:21132:21166	5125733	1	True				
ANR	5125806	CallExpression	"gs_screen_currentpoint ( penum , & pt )"		5125733	0					
ANR	5125807	Callee	gs_screen_currentpoint		5125733	0					
ANR	5125808	Identifier	gs_screen_currentpoint		5125733	0					
ANR	5125809	ArgumentList	penum		5125733	1					
ANR	5125810	Argument	penum		5125733	0					
ANR	5125811	Identifier	penum		5125733	0					
ANR	5125812	Argument	& pt		5125733	1					
ANR	5125813	UnaryOperationExpression	& pt		5125733	0					
ANR	5125814	UnaryOperator	&		5125733	0					
ANR	5125815	Identifier	pt		5125733	1					
ANR	5125816	ExpressionStatement	"dlprintf6 ( ""[H]sample x=%d y=%d (%f,%f): %f -> %u\\n"" , penum -> x , penum -> y , pt . x , pt . y , value , sample )"	595:8:21176:21293	5125733	2	True				
ANR	5125817	CallExpression	"dlprintf6 ( ""[H]sample x=%d y=%d (%f,%f): %f -> %u\\n"" , penum -> x , penum -> y , pt . x , pt . y , value , sample )"		5125733	0					
ANR	5125818	Callee	dlprintf6		5125733	0					
ANR	5125819	Identifier	dlprintf6		5125733	0					
ANR	5125820	ArgumentList	"""[H]sample x=%d y=%d (%f,%f): %f -> %u\\n"""		5125733	1					
ANR	5125821	Argument	"""[H]sample x=%d y=%d (%f,%f): %f -> %u\\n"""		5125733	0					
ANR	5125822	PrimaryExpression	"""[H]sample x=%d y=%d (%f,%f): %f -> %u\\n"""		5125733	0					
ANR	5125823	Argument	penum -> x		5125733	1					
ANR	5125824	PtrMemberAccess	penum -> x		5125733	0					
ANR	5125825	Identifier	penum		5125733	0					
ANR	5125826	Identifier	x		5125733	1					
ANR	5125827	Argument	penum -> y		5125733	2					
ANR	5125828	PtrMemberAccess	penum -> y		5125733	0					
ANR	5125829	Identifier	penum		5125733	0					
ANR	5125830	Identifier	y		5125733	1					
ANR	5125831	Argument	pt . x		5125733	3					
ANR	5125832	MemberAccess	pt . x		5125733	0					
ANR	5125833	Identifier	pt		5125733	0					
ANR	5125834	Identifier	x		5125733	1					
ANR	5125835	Argument	pt . y		5125733	4					
ANR	5125836	MemberAccess	pt . y		5125733	0					
ANR	5125837	Identifier	pt		5125733	0					
ANR	5125838	Identifier	y		5125733	1					
ANR	5125839	Argument	value		5125733	5					
ANR	5125840	Identifier	value		5125733	0					
ANR	5125841	Argument	sample		5125733	6					
ANR	5125842	Identifier	sample		5125733	0					
ANR	5125843	ExpressionStatement	bits [ penum -> y * width + penum -> x ] . mask = sample	599:4:21312:21359	5125733	6	True				
ANR	5125844	AssignmentExpression	bits [ penum -> y * width + penum -> x ] . mask = sample		5125733	0		=			
ANR	5125845	MemberAccess	bits [ penum -> y * width + penum -> x ] . mask		5125733	0					
ANR	5125846	ArrayIndexing	bits [ penum -> y * width + penum -> x ]		5125733	0					
ANR	5125847	Identifier	bits		5125733	0					
ANR	5125848	AdditiveExpression	penum -> y * width + penum -> x		5125733	1		+			
ANR	5125849	MultiplicativeExpression	penum -> y * width		5125733	0		*			
ANR	5125850	PtrMemberAccess	penum -> y		5125733	0					
ANR	5125851	Identifier	penum		5125733	0					
ANR	5125852	Identifier	y		5125733	1					
ANR	5125853	Identifier	width		5125733	1					
ANR	5125854	PtrMemberAccess	penum -> x		5125733	1					
ANR	5125855	Identifier	penum		5125733	0					
ANR	5125856	Identifier	x		5125733	1					
ANR	5125857	Identifier	mask		5125733	1					
ANR	5125858	Identifier	sample		5125733	1					
ANR	5125859	IfStatement	if ( ++ ( penum -> x ) >= width )		5125733	7					
ANR	5125860	Condition	++ ( penum -> x ) >= width	600:8:21369:21389	5125733	0	True				
ANR	5125861	RelationalExpression	++ ( penum -> x ) >= width		5125733	0		>=			
ANR	5125862	UnaryExpression	++ ( penum -> x )		5125733	0					
ANR	5125863	IncDec	++		5125733	0					
ANR	5125864	PtrMemberAccess	penum -> x		5125733	1					
ANR	5125865	Identifier	penum		5125733	0					
ANR	5125866	Identifier	x		5125733	1					
ANR	5125867	Identifier	width		5125733	1					
ANR	5125868	ExpressionStatement	"penum -> x = 0 , ++ ( penum -> y )"	601:8:21400:21426	5125733	1	True				
ANR	5125869	Expression	"penum -> x = 0 , ++ ( penum -> y )"		5125733	0					
ANR	5125870	AssignmentExpression	penum -> x = 0		5125733	0		=			
ANR	5125871	PtrMemberAccess	penum -> x		5125733	0					
ANR	5125872	Identifier	penum		5125733	0					
ANR	5125873	Identifier	x		5125733	1					
ANR	5125874	PrimaryExpression	0		5125733	1					
ANR	5125875	UnaryExpression	++ ( penum -> y )		5125733	1					
ANR	5125876	IncDec	++		5125733	0					
ANR	5125877	PtrMemberAccess	penum -> y		5125733	1					
ANR	5125878	Identifier	penum		5125733	0					
ANR	5125879	Identifier	y		5125733	1					
ANR	5125880	ReturnStatement	return 0 ;	602:4:21432:21440	5125733	8	True				
ANR	5125881	PrimaryExpression	0		5125733	0					
ANR	5125882	ReturnType	int		5125733	1					
ANR	5125883	Identifier	gs_screen_next		5125733	2					
ANR	5125884	ParameterList	"gs_screen_enum * penum , double value"		5125733	3					
ANR	5125885	Parameter	gs_screen_enum * penum	581:15:20732:20753	5125733	0	True				
ANR	5125886	ParameterType	gs_screen_enum *		5125733	0					
ANR	5125887	Identifier	penum		5125733	1					
ANR	5125888	Parameter	double value	581:39:20756:20767	5125733	1	True				
ANR	5125889	ParameterType	double		5125733	0					
ANR	5125890	Identifier	value		5125733	1					
ANR	5125891	CFGEntryNode	ENTRY		5125733		True				
ANR	5125892	CFGExitNode	EXIT		5125733		True				
ANR	5125893	Symbol	* penum -> y		5125733						
ANR	5125894	Symbol	* bits		5125733						
ANR	5125895	Symbol	* penum		5125733						
ANR	5125896	Symbol	* penum -> x		5125733						
ANR	5125897	Symbol	penum -> order . bit_data		5125733						
ANR	5125898	Symbol	gs_error_rangecheck		5125733						
ANR	5125899	Symbol	pt		5125733						
ANR	5125900	Symbol	penum -> order		5125733						
ANR	5125901	Symbol	penum		5125733						
ANR	5125902	Symbol	bits		5125733						
ANR	5125903	Symbol	penum -> x		5125733						
ANR	5125904	Symbol	sample		5125733						
ANR	5125905	Symbol	penum -> order . width		5125733						
ANR	5125906	Symbol	penum -> y		5125733						
ANR	5125907	Symbol	* width		5125733						
ANR	5125908	Symbol	& pt		5125733						
ANR	5125909	Symbol	bits [ penum -> y * width + penum -> x ] . mask		5125733						
ANR	5125910	Symbol	width		5125733						
ANR	5125911	Symbol	max_ht_sample		5125733						
ANR	5125912	Symbol	gs_debug_c		5125733						
ANR	5125913	Symbol	pt . x		5125733						
ANR	5125914	Symbol	pt . y		5125733						
ANR	5125915	Symbol	value		5125733						
ANR	5125916	Symbol	* * penum		5125733						
ANR	5125917	Function	gs_screen_install	606:0:21501:21860							
ANR	5125918	FunctionDef	gs_screen_install (gs_screen_enum * penum)		5125917	0					
ANR	5125919	CompoundStatement		608:0:21547:21860	5125917	0					
ANR	5125920	IdentifierDeclStatement	gx_device_halftone dev_ht ;	609:4:21553:21578	5125917	0	True				
ANR	5125921	IdentifierDecl	dev_ht		5125917	0					
ANR	5125922	IdentifierDeclType	gx_device_halftone		5125917	0					
ANR	5125923	Identifier	dev_ht		5125917	1					
ANR	5125924	IdentifierDeclStatement	int code ;	610:4:21584:21592	5125917	1	True				
ANR	5125925	IdentifierDecl	code		5125917	0					
ANR	5125926	IdentifierDeclType	int		5125917	0					
ANR	5125927	Identifier	code		5125917	1					
ANR	5125928	ExpressionStatement	dev_ht . rc . memory = penum -> halftone . rc . memory	612:4:21599:21643	5125917	2	True				
ANR	5125929	AssignmentExpression	dev_ht . rc . memory = penum -> halftone . rc . memory		5125917	0		=			
ANR	5125930	MemberAccess	dev_ht . rc . memory		5125917	0					
ANR	5125931	MemberAccess	dev_ht . rc		5125917	0					
ANR	5125932	Identifier	dev_ht		5125917	0					
ANR	5125933	Identifier	rc		5125917	1					
ANR	5125934	Identifier	memory		5125917	1					
ANR	5125935	MemberAccess	penum -> halftone . rc . memory		5125917	1					
ANR	5125936	MemberAccess	penum -> halftone . rc		5125917	0					
ANR	5125937	PtrMemberAccess	penum -> halftone		5125917	0					
ANR	5125938	Identifier	penum		5125917	0					
ANR	5125939	Identifier	halftone		5125917	1					
ANR	5125940	Identifier	rc		5125917	1					
ANR	5125941	Identifier	memory		5125917	1					
ANR	5125942	ExpressionStatement	dev_ht . order = penum -> order	613:4:21649:21676	5125917	3	True				
ANR	5125943	AssignmentExpression	dev_ht . order = penum -> order		5125917	0		=			
ANR	5125944	MemberAccess	dev_ht . order		5125917	0					
ANR	5125945	Identifier	dev_ht		5125917	0					
ANR	5125946	Identifier	order		5125917	1					
ANR	5125947	PtrMemberAccess	penum -> order		5125917	1					
ANR	5125948	Identifier	penum		5125917	0					
ANR	5125949	Identifier	order		5125917	1					
ANR	5125950	ExpressionStatement	dev_ht . components = 0	614:4:21682:21703	5125917	4	True				
ANR	5125951	AssignmentExpression	dev_ht . components = 0		5125917	0		=			
ANR	5125952	MemberAccess	dev_ht . components		5125917	0					
ANR	5125953	Identifier	dev_ht		5125917	0					
ANR	5125954	Identifier	components		5125917	1					
ANR	5125955	PrimaryExpression	0		5125917	1					
ANR	5125956	IfStatement	"if ( ( code = gx_ht_install ( penum -> pgs , & penum -> halftone , & dev_ht ) ) < 0 )"		5125917	5					
ANR	5125957	Condition	"( code = gx_ht_install ( penum -> pgs , & penum -> halftone , & dev_ht ) ) < 0"	615:8:21713:21777	5125917	0	True				
ANR	5125958	RelationalExpression	"( code = gx_ht_install ( penum -> pgs , & penum -> halftone , & dev_ht ) ) < 0"		5125917	0		<			
ANR	5125959	AssignmentExpression	"code = gx_ht_install ( penum -> pgs , & penum -> halftone , & dev_ht )"		5125917	0		=			
ANR	5125960	Identifier	code		5125917	0					
ANR	5125961	CallExpression	"gx_ht_install ( penum -> pgs , & penum -> halftone , & dev_ht )"		5125917	1					
ANR	5125962	Callee	gx_ht_install		5125917	0					
ANR	5125963	Identifier	gx_ht_install		5125917	0					
ANR	5125964	ArgumentList	penum -> pgs		5125917	1					
ANR	5125965	Argument	penum -> pgs		5125917	0					
ANR	5125966	PtrMemberAccess	penum -> pgs		5125917	0					
ANR	5125967	Identifier	penum		5125917	0					
ANR	5125968	Identifier	pgs		5125917	1					
ANR	5125969	Argument	& penum -> halftone		5125917	1					
ANR	5125970	UnaryOperationExpression	& penum -> halftone		5125917	0					
ANR	5125971	UnaryOperator	&		5125917	0					
ANR	5125972	PtrMemberAccess	penum -> halftone		5125917	1					
ANR	5125973	Identifier	penum		5125917	0					
ANR	5125974	Identifier	halftone		5125917	1					
ANR	5125975	Argument	& dev_ht		5125917	2					
ANR	5125976	UnaryOperationExpression	& dev_ht		5125917	0					
ANR	5125977	UnaryOperator	&		5125917	0					
ANR	5125978	Identifier	dev_ht		5125917	1					
ANR	5125979	PrimaryExpression	0		5125917	1					
ANR	5125980	ExpressionStatement	"gx_device_halftone_release ( & dev_ht , dev_ht . rc . memory )"	616:8:21788:21841	5125917	1	True				
ANR	5125981	CallExpression	"gx_device_halftone_release ( & dev_ht , dev_ht . rc . memory )"		5125917	0					
ANR	5125982	Callee	gx_device_halftone_release		5125917	0					
ANR	5125983	Identifier	gx_device_halftone_release		5125917	0					
ANR	5125984	ArgumentList	& dev_ht		5125917	1					
ANR	5125985	Argument	& dev_ht		5125917	0					
ANR	5125986	UnaryOperationExpression	& dev_ht		5125917	0					
ANR	5125987	UnaryOperator	&		5125917	0					
ANR	5125988	Identifier	dev_ht		5125917	1					
ANR	5125989	Argument	dev_ht . rc . memory		5125917	1					
ANR	5125990	MemberAccess	dev_ht . rc . memory		5125917	0					
ANR	5125991	MemberAccess	dev_ht . rc		5125917	0					
ANR	5125992	Identifier	dev_ht		5125917	0					
ANR	5125993	Identifier	rc		5125917	1					
ANR	5125994	Identifier	memory		5125917	1					
ANR	5125995	ReturnStatement	return code ;	617:4:21847:21858	5125917	6	True				
ANR	5125996	Identifier	code		5125917	0					
ANR	5125997	ReturnType	int		5125917	1					
ANR	5125998	Identifier	gs_screen_install		5125917	2					
ANR	5125999	ParameterList	gs_screen_enum * penum		5125917	3					
ANR	5126000	Parameter	gs_screen_enum * penum	607:18:21523:21544	5125917	0	True				
ANR	5126001	ParameterType	gs_screen_enum *		5125917	0					
ANR	5126002	Identifier	penum		5125917	1					
ANR	5126003	CFGEntryNode	ENTRY		5125917		True				
ANR	5126004	CFGExitNode	EXIT		5125917		True				
ANR	5126005	Symbol	* penum		5125917						
ANR	5126006	Symbol	code		5125917						
ANR	5126007	Symbol	& penum -> halftone		5125917						
ANR	5126008	Symbol	penum -> halftone		5125917						
ANR	5126009	Symbol	penum -> order		5125917						
ANR	5126010	Symbol	gx_ht_install		5125917						
ANR	5126011	Symbol	penum		5125917						
ANR	5126012	Symbol	dev_ht . order		5125917						
ANR	5126013	Symbol	dev_ht . rc . memory		5125917						
ANR	5126014	Symbol	penum -> pgs		5125917						
ANR	5126015	Symbol	& dev_ht		5125917						
ANR	5126016	Symbol	dev_ht . rc		5125917						
ANR	5126017	Symbol	dev_ht . components		5125917						
ANR	5126018	Symbol	penum -> halftone . rc		5125917						
ANR	5126019	Symbol	dev_ht		5125917						
ANR	5126020	Symbol	penum -> halftone . rc . memory		5125917						
