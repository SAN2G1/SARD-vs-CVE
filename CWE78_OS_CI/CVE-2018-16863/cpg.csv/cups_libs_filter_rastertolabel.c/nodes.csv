command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2305004	File	data/converged/CVE-2018-16863_ghostpdl/cups_libs_filter_rastertolabel.c								
ANR	2305005	DeclStmt									
ANR	2305006	Decl							unsigned char	unsigned char *	Buffer
ANR	2305007	DeclStmt									
ANR	2305008	Decl							unsigned char	unsigned char *	CompBuffer
ANR	2305009	DeclStmt									
ANR	2305010	Decl							unsigned char	unsigned char *	LastBuffer
ANR	2305011	DeclStmt									
ANR	2305012	Decl							int	int	LastSet
ANR	2305013	DeclStmt									
ANR	2305014	Decl							int	int	ModelNumber
ANR	2305015	Decl							int	int	Page
ANR	2305016	Decl							int	int	Feed
ANR	2305017	Decl							int	int	Canceled
ANR	2305018	DeclStmt									
ANR	2305019	Decl							void	void ( ppd_file_t * ppd )	Setup
ANR	2305020	DeclStmt									
ANR	2305021	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header )"	StartPage
ANR	2305022	DeclStmt									
ANR	2305023	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header )"	EndPage
ANR	2305024	DeclStmt									
ANR	2305025	Decl							void	void ( int sig )	CancelJob
ANR	2305026	DeclStmt									
ANR	2305027	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header , int y )"	OutputLine
ANR	2305028	DeclStmt									
ANR	2305029	Decl							void	"void ( unsigned char * line , int length )"	PCLCompress
ANR	2305030	DeclStmt									
ANR	2305031	Decl							void	"void ( char repeat_char , int repeat_count )"	ZPLCompress
ANR	2305032	Function	Setup	105:0:3280:4002							
ANR	2305033	FunctionDef	Setup (ppd_file_t * ppd)		2305032	0					
ANR	2305034	CompoundStatement		107:0:3329:4002	2305032	0					
ANR	2305035	IdentifierDeclStatement	int i ;	108:2:3333:3339	2305032	0	True				
ANR	2305036	IdentifierDecl	i		2305032	0					
ANR	2305037	IdentifierDeclType	int		2305032	0					
ANR	2305038	Identifier	i		2305032	1					
ANR	2305039	IfStatement	if ( ppd )		2305032	1					
ANR	2305040	Condition	ppd	115:6:3425:3427	2305032	0	True				
ANR	2305041	Identifier	ppd		2305032	0					
ANR	2305042	ExpressionStatement	ModelNumber = ppd -> model_number	116:4:3434:3465	2305032	1	True				
ANR	2305043	AssignmentExpression	ModelNumber = ppd -> model_number		2305032	0		=			
ANR	2305044	Identifier	ModelNumber		2305032	0					
ANR	2305045	PtrMemberAccess	ppd -> model_number		2305032	1					
ANR	2305046	Identifier	ppd		2305032	0					
ANR	2305047	Identifier	model_number		2305032	1					
ANR	2305048	SwitchStatement	switch ( ModelNumber )		2305032	2					
ANR	2305049	Condition	ModelNumber	122:10:3532:3542	2305032	0	True				
ANR	2305050	Identifier	ModelNumber		2305032	0					
ANR	2305051	CompoundStatement		17:2:217:217	2305032	1					
ANR	2305052	Label	case DYMO_3x0 :	124:4:3553:3567	2305032	0	True				
ANR	2305053	Identifier	DYMO_3x0		2305032	0					
ANR	2305054	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		2305032	1					
ANR	2305055	ForInit	i = 0 ;	129:6:3621:3626	2305032	0	True				
ANR	2305056	AssignmentExpression	i = 0		2305032	0		=			
ANR	2305057	Identifier	i		2305032	0					
ANR	2305058	PrimaryExpression	0		2305032	1					
ANR	2305059	Condition	i < 100	129:13:3628:3634	2305032	1	True				
ANR	2305060	RelationalExpression	i < 100		2305032	0		<			
ANR	2305061	Identifier	i		2305032	0					
ANR	2305062	PrimaryExpression	100		2305032	1					
ANR	2305063	PostIncDecOperationExpression	i ++	129:22:3637:3640	2305032	2	True				
ANR	2305064	Identifier	i		2305032	0					
ANR	2305065	IncDec	++		2305032	1					
ANR	2305066	ExpressionStatement	putchar ( 0x1b )	130:3:3646:3659	2305032	3	True				
ANR	2305067	CallExpression	putchar ( 0x1b )		2305032	0					
ANR	2305068	Callee	putchar		2305032	0					
ANR	2305069	Identifier	putchar		2305032	0					
ANR	2305070	ArgumentList	0x1b		2305032	1					
ANR	2305071	Argument	0x1b		2305032	0					
ANR	2305072	PrimaryExpression	0x1b		2305032	0					
ANR	2305073	ExpressionStatement	"fputs ( ""\\033@"" , stdout )"	136:1:3702:3724	2305032	2	True				
ANR	2305074	CallExpression	"fputs ( ""\\033@"" , stdout )"		2305032	0					
ANR	2305075	Callee	fputs		2305032	0					
ANR	2305076	Identifier	fputs		2305032	0					
ANR	2305077	ArgumentList	"""\\033@"""		2305032	1					
ANR	2305078	Argument	"""\\033@"""		2305032	0					
ANR	2305079	PrimaryExpression	"""\\033@"""		2305032	0					
ANR	2305080	Argument	stdout		2305032	1					
ANR	2305081	Identifier	stdout		2305032	0					
ANR	2305082	BreakStatement	break ;	137:1:3727:3732	2305032	3	True				
ANR	2305083	Label	case ZEBRA_EPL_LINE :	139:4:3739:3759	2305032	4	True				
ANR	2305084	Identifier	ZEBRA_EPL_LINE		2305032	0					
ANR	2305085	BreakStatement	break ;	140:1:3762:3767	2305032	5	True				
ANR	2305086	Label	case ZEBRA_EPL_PAGE :	142:4:3774:3794	2305032	6	True				
ANR	2305087	Identifier	ZEBRA_EPL_PAGE		2305032	0					
ANR	2305088	BreakStatement	break ;	143:1:3797:3802	2305032	7	True				
ANR	2305089	Label	case ZEBRA_ZPL :	145:4:3809:3824	2305032	8	True				
ANR	2305090	Identifier	ZEBRA_ZPL		2305032	0					
ANR	2305091	BreakStatement	break ;	146:8:3834:3839	2305032	9	True				
ANR	2305092	Label	case ZEBRA_CPCL :	148:4:3846:3862	2305032	10	True				
ANR	2305093	Identifier	ZEBRA_CPCL		2305032	0					
ANR	2305094	BreakStatement	break ;	149:8:3872:3877	2305032	11	True				
ANR	2305095	Label	case INTELLITECH_PCL :	151:4:3884:3905	2305032	12	True				
ANR	2305096	Identifier	INTELLITECH_PCL		2305032	0					
ANR	2305097	ExpressionStatement	putchar ( 0x1b )	156:1:3953:3966	2305032	13	True				
ANR	2305098	CallExpression	putchar ( 0x1b )		2305032	0					
ANR	2305099	Callee	putchar		2305032	0					
ANR	2305100	Identifier	putchar		2305032	0					
ANR	2305101	ArgumentList	0x1b		2305032	1					
ANR	2305102	Argument	0x1b		2305032	0					
ANR	2305103	PrimaryExpression	0x1b		2305032	0					
ANR	2305104	ExpressionStatement	putchar ( 'E' )	157:1:3969:3981	2305032	14	True				
ANR	2305105	CallExpression	putchar ( 'E' )		2305032	0					
ANR	2305106	Callee	putchar		2305032	0					
ANR	2305107	Identifier	putchar		2305032	0					
ANR	2305108	ArgumentList	'E'		2305032	1					
ANR	2305109	Argument	'E'		2305032	0					
ANR	2305110	PrimaryExpression	'E'		2305032	0					
ANR	2305111	BreakStatement	break ;	158:8:3991:3996	2305032	15	True				
ANR	2305112	ReturnType	void		2305032	1					
ANR	2305113	Identifier	Setup		2305032	2					
ANR	2305114	ParameterList	ppd_file_t * ppd		2305032	3					
ANR	2305115	Parameter	ppd_file_t * ppd	106:6:3291:3305	2305032	0	True				
ANR	2305116	ParameterType	ppd_file_t *		2305032	0					
ANR	2305117	Identifier	ppd		2305032	1					
ANR	2305118	CFGEntryNode	ENTRY		2305032		True				
ANR	2305119	CFGExitNode	EXIT		2305032		True				
ANR	2305120	Symbol	ppd -> model_number		2305032						
ANR	2305121	Symbol	ModelNumber		2305032						
ANR	2305122	Symbol	stdout		2305032						
ANR	2305123	Symbol	ppd		2305032						
ANR	2305124	Symbol	i		2305032						
ANR	2305125	Symbol	* ppd		2305032						
ANR	2305126	Function	StartPage	167:0:4059:12937							
ANR	2305127	FunctionDef	"StartPage (ppd_file_t * ppd , cups_page_header2_t * header)"		2305126	0					
ANR	2305128	CompoundStatement		170:0:4179:12937	2305126	0					
ANR	2305129	IdentifierDeclStatement	ppd_choice_t * choice ;	171:2:4183:4203	2305126	0	True				
ANR	2305130	IdentifierDecl	* choice		2305126	0					
ANR	2305131	IdentifierDeclType	ppd_choice_t *		2305126	0					
ANR	2305132	Identifier	choice		2305126	1					
ANR	2305133	IdentifierDeclStatement	int length ;	172:2:4228:4239	2305126	1	True				
ANR	2305134	IdentifierDecl	length		2305126	0					
ANR	2305135	IdentifierDeclType	int		2305126	0					
ANR	2305136	Identifier	length		2305126	1					
ANR	2305137	ExpressionStatement	"fprintf ( stderr , ""DEBUG: StartPage...\\n"" )"	179:2:4318:4358	2305126	2	True				
ANR	2305138	CallExpression	"fprintf ( stderr , ""DEBUG: StartPage...\\n"" )"		2305126	0					
ANR	2305139	Callee	fprintf		2305126	0					
ANR	2305140	Identifier	fprintf		2305126	0					
ANR	2305141	ArgumentList	stderr		2305126	1					
ANR	2305142	Argument	stderr		2305126	0					
ANR	2305143	Identifier	stderr		2305126	0					
ANR	2305144	Argument	"""DEBUG: StartPage...\\n"""		2305126	1					
ANR	2305145	PrimaryExpression	"""DEBUG: StartPage...\\n"""		2305126	0					
ANR	2305146	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaClass = \\""%s\\""\\n"" , header -> MediaClass )"	180:2:4362:4429	2305126	3	True				
ANR	2305147	CallExpression	"fprintf ( stderr , ""DEBUG: MediaClass = \\""%s\\""\\n"" , header -> MediaClass )"		2305126	0					
ANR	2305148	Callee	fprintf		2305126	0					
ANR	2305149	Identifier	fprintf		2305126	0					
ANR	2305150	ArgumentList	stderr		2305126	1					
ANR	2305151	Argument	stderr		2305126	0					
ANR	2305152	Identifier	stderr		2305126	0					
ANR	2305153	Argument	"""DEBUG: MediaClass = \\""%s\\""\\n"""		2305126	1					
ANR	2305154	PrimaryExpression	"""DEBUG: MediaClass = \\""%s\\""\\n"""		2305126	0					
ANR	2305155	Argument	header -> MediaClass		2305126	2					
ANR	2305156	PtrMemberAccess	header -> MediaClass		2305126	0					
ANR	2305157	Identifier	header		2305126	0					
ANR	2305158	Identifier	MediaClass		2305126	1					
ANR	2305159	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaColor = \\""%s\\""\\n"" , header -> MediaColor )"	181:2:4433:4500	2305126	4	True				
ANR	2305160	CallExpression	"fprintf ( stderr , ""DEBUG: MediaColor = \\""%s\\""\\n"" , header -> MediaColor )"		2305126	0					
ANR	2305161	Callee	fprintf		2305126	0					
ANR	2305162	Identifier	fprintf		2305126	0					
ANR	2305163	ArgumentList	stderr		2305126	1					
ANR	2305164	Argument	stderr		2305126	0					
ANR	2305165	Identifier	stderr		2305126	0					
ANR	2305166	Argument	"""DEBUG: MediaColor = \\""%s\\""\\n"""		2305126	1					
ANR	2305167	PrimaryExpression	"""DEBUG: MediaColor = \\""%s\\""\\n"""		2305126	0					
ANR	2305168	Argument	header -> MediaColor		2305126	2					
ANR	2305169	PtrMemberAccess	header -> MediaColor		2305126	0					
ANR	2305170	Identifier	header		2305126	0					
ANR	2305171	Identifier	MediaColor		2305126	1					
ANR	2305172	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaType = \\""%s\\""\\n"" , header -> MediaType )"	182:2:4504:4569	2305126	5	True				
ANR	2305173	CallExpression	"fprintf ( stderr , ""DEBUG: MediaType = \\""%s\\""\\n"" , header -> MediaType )"		2305126	0					
ANR	2305174	Callee	fprintf		2305126	0					
ANR	2305175	Identifier	fprintf		2305126	0					
ANR	2305176	ArgumentList	stderr		2305126	1					
ANR	2305177	Argument	stderr		2305126	0					
ANR	2305178	Identifier	stderr		2305126	0					
ANR	2305179	Argument	"""DEBUG: MediaType = \\""%s\\""\\n"""		2305126	1					
ANR	2305180	PrimaryExpression	"""DEBUG: MediaType = \\""%s\\""\\n"""		2305126	0					
ANR	2305181	Argument	header -> MediaType		2305126	2					
ANR	2305182	PtrMemberAccess	header -> MediaType		2305126	0					
ANR	2305183	Identifier	header		2305126	0					
ANR	2305184	Identifier	MediaType		2305126	1					
ANR	2305185	ExpressionStatement	"fprintf ( stderr , ""DEBUG: OutputType = \\""%s\\""\\n"" , header -> OutputType )"	183:2:4573:4640	2305126	6	True				
ANR	2305186	CallExpression	"fprintf ( stderr , ""DEBUG: OutputType = \\""%s\\""\\n"" , header -> OutputType )"		2305126	0					
ANR	2305187	Callee	fprintf		2305126	0					
ANR	2305188	Identifier	fprintf		2305126	0					
ANR	2305189	ArgumentList	stderr		2305126	1					
ANR	2305190	Argument	stderr		2305126	0					
ANR	2305191	Identifier	stderr		2305126	0					
ANR	2305192	Argument	"""DEBUG: OutputType = \\""%s\\""\\n"""		2305126	1					
ANR	2305193	PrimaryExpression	"""DEBUG: OutputType = \\""%s\\""\\n"""		2305126	0					
ANR	2305194	Argument	header -> OutputType		2305126	2					
ANR	2305195	PtrMemberAccess	header -> OutputType		2305126	0					
ANR	2305196	Identifier	header		2305126	0					
ANR	2305197	Identifier	OutputType		2305126	1					
ANR	2305198	ExpressionStatement	"fprintf ( stderr , ""DEBUG: AdvanceDistance = %d\\n"" , header -> AdvanceDistance )"	185:2:4645:4718	2305126	7	True				
ANR	2305199	CallExpression	"fprintf ( stderr , ""DEBUG: AdvanceDistance = %d\\n"" , header -> AdvanceDistance )"		2305126	0					
ANR	2305200	Callee	fprintf		2305126	0					
ANR	2305201	Identifier	fprintf		2305126	0					
ANR	2305202	ArgumentList	stderr		2305126	1					
ANR	2305203	Argument	stderr		2305126	0					
ANR	2305204	Identifier	stderr		2305126	0					
ANR	2305205	Argument	"""DEBUG: AdvanceDistance = %d\\n"""		2305126	1					
ANR	2305206	PrimaryExpression	"""DEBUG: AdvanceDistance = %d\\n"""		2305126	0					
ANR	2305207	Argument	header -> AdvanceDistance		2305126	2					
ANR	2305208	PtrMemberAccess	header -> AdvanceDistance		2305126	0					
ANR	2305209	Identifier	header		2305126	0					
ANR	2305210	Identifier	AdvanceDistance		2305126	1					
ANR	2305211	ExpressionStatement	"fprintf ( stderr , ""DEBUG: AdvanceMedia = %d\\n"" , header -> AdvanceMedia )"	186:2:4722:4789	2305126	8	True				
ANR	2305212	CallExpression	"fprintf ( stderr , ""DEBUG: AdvanceMedia = %d\\n"" , header -> AdvanceMedia )"		2305126	0					
ANR	2305213	Callee	fprintf		2305126	0					
ANR	2305214	Identifier	fprintf		2305126	0					
ANR	2305215	ArgumentList	stderr		2305126	1					
ANR	2305216	Argument	stderr		2305126	0					
ANR	2305217	Identifier	stderr		2305126	0					
ANR	2305218	Argument	"""DEBUG: AdvanceMedia = %d\\n"""		2305126	1					
ANR	2305219	PrimaryExpression	"""DEBUG: AdvanceMedia = %d\\n"""		2305126	0					
ANR	2305220	Argument	header -> AdvanceMedia		2305126	2					
ANR	2305221	PtrMemberAccess	header -> AdvanceMedia		2305126	0					
ANR	2305222	Identifier	header		2305126	0					
ANR	2305223	Identifier	AdvanceMedia		2305126	1					
ANR	2305224	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Collate = %d\\n"" , header -> Collate )"	187:2:4793:4850	2305126	9	True				
ANR	2305225	CallExpression	"fprintf ( stderr , ""DEBUG: Collate = %d\\n"" , header -> Collate )"		2305126	0					
ANR	2305226	Callee	fprintf		2305126	0					
ANR	2305227	Identifier	fprintf		2305126	0					
ANR	2305228	ArgumentList	stderr		2305126	1					
ANR	2305229	Argument	stderr		2305126	0					
ANR	2305230	Identifier	stderr		2305126	0					
ANR	2305231	Argument	"""DEBUG: Collate = %d\\n"""		2305126	1					
ANR	2305232	PrimaryExpression	"""DEBUG: Collate = %d\\n"""		2305126	0					
ANR	2305233	Argument	header -> Collate		2305126	2					
ANR	2305234	PtrMemberAccess	header -> Collate		2305126	0					
ANR	2305235	Identifier	header		2305126	0					
ANR	2305236	Identifier	Collate		2305126	1					
ANR	2305237	ExpressionStatement	"fprintf ( stderr , ""DEBUG: CutMedia = %d\\n"" , header -> CutMedia )"	188:2:4854:4913	2305126	10	True				
ANR	2305238	CallExpression	"fprintf ( stderr , ""DEBUG: CutMedia = %d\\n"" , header -> CutMedia )"		2305126	0					
ANR	2305239	Callee	fprintf		2305126	0					
ANR	2305240	Identifier	fprintf		2305126	0					
ANR	2305241	ArgumentList	stderr		2305126	1					
ANR	2305242	Argument	stderr		2305126	0					
ANR	2305243	Identifier	stderr		2305126	0					
ANR	2305244	Argument	"""DEBUG: CutMedia = %d\\n"""		2305126	1					
ANR	2305245	PrimaryExpression	"""DEBUG: CutMedia = %d\\n"""		2305126	0					
ANR	2305246	Argument	header -> CutMedia		2305126	2					
ANR	2305247	PtrMemberAccess	header -> CutMedia		2305126	0					
ANR	2305248	Identifier	header		2305126	0					
ANR	2305249	Identifier	CutMedia		2305126	1					
ANR	2305250	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Duplex = %d\\n"" , header -> Duplex )"	189:2:4917:4972	2305126	11	True				
ANR	2305251	CallExpression	"fprintf ( stderr , ""DEBUG: Duplex = %d\\n"" , header -> Duplex )"		2305126	0					
ANR	2305252	Callee	fprintf		2305126	0					
ANR	2305253	Identifier	fprintf		2305126	0					
ANR	2305254	ArgumentList	stderr		2305126	1					
ANR	2305255	Argument	stderr		2305126	0					
ANR	2305256	Identifier	stderr		2305126	0					
ANR	2305257	Argument	"""DEBUG: Duplex = %d\\n"""		2305126	1					
ANR	2305258	PrimaryExpression	"""DEBUG: Duplex = %d\\n"""		2305126	0					
ANR	2305259	Argument	header -> Duplex		2305126	2					
ANR	2305260	PtrMemberAccess	header -> Duplex		2305126	0					
ANR	2305261	Identifier	header		2305126	0					
ANR	2305262	Identifier	Duplex		2305126	1					
ANR	2305263	ExpressionStatement	"fprintf ( stderr , ""DEBUG: HWResolution = [ %d %d ]\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] )"	190:2:4976:5088	2305126	12	True				
ANR	2305264	CallExpression	"fprintf ( stderr , ""DEBUG: HWResolution = [ %d %d ]\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] )"		2305126	0					
ANR	2305265	Callee	fprintf		2305126	0					
ANR	2305266	Identifier	fprintf		2305126	0					
ANR	2305267	ArgumentList	stderr		2305126	1					
ANR	2305268	Argument	stderr		2305126	0					
ANR	2305269	Identifier	stderr		2305126	0					
ANR	2305270	Argument	"""DEBUG: HWResolution = [ %d %d ]\\n"""		2305126	1					
ANR	2305271	PrimaryExpression	"""DEBUG: HWResolution = [ %d %d ]\\n"""		2305126	0					
ANR	2305272	Argument	header -> HWResolution [ 0 ]		2305126	2					
ANR	2305273	ArrayIndexing	header -> HWResolution [ 0 ]		2305126	0					
ANR	2305274	PtrMemberAccess	header -> HWResolution		2305126	0					
ANR	2305275	Identifier	header		2305126	0					
ANR	2305276	Identifier	HWResolution		2305126	1					
ANR	2305277	PrimaryExpression	0		2305126	1					
ANR	2305278	Argument	header -> HWResolution [ 1 ]		2305126	3					
ANR	2305279	ArrayIndexing	header -> HWResolution [ 1 ]		2305126	0					
ANR	2305280	PtrMemberAccess	header -> HWResolution		2305126	0					
ANR	2305281	Identifier	header		2305126	0					
ANR	2305282	Identifier	HWResolution		2305126	1					
ANR	2305283	PrimaryExpression	1		2305126	1					
ANR	2305284	ExpressionStatement	"fprintf ( stderr , ""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"" , header -> ImagingBoundingBox [ 0 ] , header -> ImagingBoundingBox [ 1 ] , header -> ImagingBoundingBox [ 2 ] , header -> ImagingBoundingBox [ 3 ] )"	192:2:5092:5300	2305126	13	True				
ANR	2305285	CallExpression	"fprintf ( stderr , ""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"" , header -> ImagingBoundingBox [ 0 ] , header -> ImagingBoundingBox [ 1 ] , header -> ImagingBoundingBox [ 2 ] , header -> ImagingBoundingBox [ 3 ] )"		2305126	0					
ANR	2305286	Callee	fprintf		2305126	0					
ANR	2305287	Identifier	fprintf		2305126	0					
ANR	2305288	ArgumentList	stderr		2305126	1					
ANR	2305289	Argument	stderr		2305126	0					
ANR	2305290	Identifier	stderr		2305126	0					
ANR	2305291	Argument	"""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"""		2305126	1					
ANR	2305292	PrimaryExpression	"""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"""		2305126	0					
ANR	2305293	Argument	header -> ImagingBoundingBox [ 0 ]		2305126	2					
ANR	2305294	ArrayIndexing	header -> ImagingBoundingBox [ 0 ]		2305126	0					
ANR	2305295	PtrMemberAccess	header -> ImagingBoundingBox		2305126	0					
ANR	2305296	Identifier	header		2305126	0					
ANR	2305297	Identifier	ImagingBoundingBox		2305126	1					
ANR	2305298	PrimaryExpression	0		2305126	1					
ANR	2305299	Argument	header -> ImagingBoundingBox [ 1 ]		2305126	3					
ANR	2305300	ArrayIndexing	header -> ImagingBoundingBox [ 1 ]		2305126	0					
ANR	2305301	PtrMemberAccess	header -> ImagingBoundingBox		2305126	0					
ANR	2305302	Identifier	header		2305126	0					
ANR	2305303	Identifier	ImagingBoundingBox		2305126	1					
ANR	2305304	PrimaryExpression	1		2305126	1					
ANR	2305305	Argument	header -> ImagingBoundingBox [ 2 ]		2305126	4					
ANR	2305306	ArrayIndexing	header -> ImagingBoundingBox [ 2 ]		2305126	0					
ANR	2305307	PtrMemberAccess	header -> ImagingBoundingBox		2305126	0					
ANR	2305308	Identifier	header		2305126	0					
ANR	2305309	Identifier	ImagingBoundingBox		2305126	1					
ANR	2305310	PrimaryExpression	2		2305126	1					
ANR	2305311	Argument	header -> ImagingBoundingBox [ 3 ]		2305126	5					
ANR	2305312	ArrayIndexing	header -> ImagingBoundingBox [ 3 ]		2305126	0					
ANR	2305313	PtrMemberAccess	header -> ImagingBoundingBox		2305126	0					
ANR	2305314	Identifier	header		2305126	0					
ANR	2305315	Identifier	ImagingBoundingBox		2305126	1					
ANR	2305316	PrimaryExpression	3		2305126	1					
ANR	2305317	ExpressionStatement	"fprintf ( stderr , ""DEBUG: InsertSheet = %d\\n"" , header -> InsertSheet )"	195:2:5304:5369	2305126	14	True				
ANR	2305318	CallExpression	"fprintf ( stderr , ""DEBUG: InsertSheet = %d\\n"" , header -> InsertSheet )"		2305126	0					
ANR	2305319	Callee	fprintf		2305126	0					
ANR	2305320	Identifier	fprintf		2305126	0					
ANR	2305321	ArgumentList	stderr		2305126	1					
ANR	2305322	Argument	stderr		2305126	0					
ANR	2305323	Identifier	stderr		2305126	0					
ANR	2305324	Argument	"""DEBUG: InsertSheet = %d\\n"""		2305126	1					
ANR	2305325	PrimaryExpression	"""DEBUG: InsertSheet = %d\\n"""		2305126	0					
ANR	2305326	Argument	header -> InsertSheet		2305126	2					
ANR	2305327	PtrMemberAccess	header -> InsertSheet		2305126	0					
ANR	2305328	Identifier	header		2305126	0					
ANR	2305329	Identifier	InsertSheet		2305126	1					
ANR	2305330	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Jog = %d\\n"" , header -> Jog )"	196:2:5373:5422	2305126	15	True				
ANR	2305331	CallExpression	"fprintf ( stderr , ""DEBUG: Jog = %d\\n"" , header -> Jog )"		2305126	0					
ANR	2305332	Callee	fprintf		2305126	0					
ANR	2305333	Identifier	fprintf		2305126	0					
ANR	2305334	ArgumentList	stderr		2305126	1					
ANR	2305335	Argument	stderr		2305126	0					
ANR	2305336	Identifier	stderr		2305126	0					
ANR	2305337	Argument	"""DEBUG: Jog = %d\\n"""		2305126	1					
ANR	2305338	PrimaryExpression	"""DEBUG: Jog = %d\\n"""		2305126	0					
ANR	2305339	Argument	header -> Jog		2305126	2					
ANR	2305340	PtrMemberAccess	header -> Jog		2305126	0					
ANR	2305341	Identifier	header		2305126	0					
ANR	2305342	Identifier	Jog		2305126	1					
ANR	2305343	ExpressionStatement	"fprintf ( stderr , ""DEBUG: LeadingEdge = %d\\n"" , header -> LeadingEdge )"	197:2:5426:5491	2305126	16	True				
ANR	2305344	CallExpression	"fprintf ( stderr , ""DEBUG: LeadingEdge = %d\\n"" , header -> LeadingEdge )"		2305126	0					
ANR	2305345	Callee	fprintf		2305126	0					
ANR	2305346	Identifier	fprintf		2305126	0					
ANR	2305347	ArgumentList	stderr		2305126	1					
ANR	2305348	Argument	stderr		2305126	0					
ANR	2305349	Identifier	stderr		2305126	0					
ANR	2305350	Argument	"""DEBUG: LeadingEdge = %d\\n"""		2305126	1					
ANR	2305351	PrimaryExpression	"""DEBUG: LeadingEdge = %d\\n"""		2305126	0					
ANR	2305352	Argument	header -> LeadingEdge		2305126	2					
ANR	2305353	PtrMemberAccess	header -> LeadingEdge		2305126	0					
ANR	2305354	Identifier	header		2305126	0					
ANR	2305355	Identifier	LeadingEdge		2305126	1					
ANR	2305356	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Margins = [ %d %d ]\\n"" , header -> Margins [ 0 ] , header -> Margins [ 1 ] )"	198:2:5495:5592	2305126	17	True				
ANR	2305357	CallExpression	"fprintf ( stderr , ""DEBUG: Margins = [ %d %d ]\\n"" , header -> Margins [ 0 ] , header -> Margins [ 1 ] )"		2305126	0					
ANR	2305358	Callee	fprintf		2305126	0					
ANR	2305359	Identifier	fprintf		2305126	0					
ANR	2305360	ArgumentList	stderr		2305126	1					
ANR	2305361	Argument	stderr		2305126	0					
ANR	2305362	Identifier	stderr		2305126	0					
ANR	2305363	Argument	"""DEBUG: Margins = [ %d %d ]\\n"""		2305126	1					
ANR	2305364	PrimaryExpression	"""DEBUG: Margins = [ %d %d ]\\n"""		2305126	0					
ANR	2305365	Argument	header -> Margins [ 0 ]		2305126	2					
ANR	2305366	ArrayIndexing	header -> Margins [ 0 ]		2305126	0					
ANR	2305367	PtrMemberAccess	header -> Margins		2305126	0					
ANR	2305368	Identifier	header		2305126	0					
ANR	2305369	Identifier	Margins		2305126	1					
ANR	2305370	PrimaryExpression	0		2305126	1					
ANR	2305371	Argument	header -> Margins [ 1 ]		2305126	3					
ANR	2305372	ArrayIndexing	header -> Margins [ 1 ]		2305126	0					
ANR	2305373	PtrMemberAccess	header -> Margins		2305126	0					
ANR	2305374	Identifier	header		2305126	0					
ANR	2305375	Identifier	Margins		2305126	1					
ANR	2305376	PrimaryExpression	1		2305126	1					
ANR	2305377	ExpressionStatement	"fprintf ( stderr , ""DEBUG: ManualFeed = %d\\n"" , header -> ManualFeed )"	200:2:5596:5659	2305126	18	True				
ANR	2305378	CallExpression	"fprintf ( stderr , ""DEBUG: ManualFeed = %d\\n"" , header -> ManualFeed )"		2305126	0					
ANR	2305379	Callee	fprintf		2305126	0					
ANR	2305380	Identifier	fprintf		2305126	0					
ANR	2305381	ArgumentList	stderr		2305126	1					
ANR	2305382	Argument	stderr		2305126	0					
ANR	2305383	Identifier	stderr		2305126	0					
ANR	2305384	Argument	"""DEBUG: ManualFeed = %d\\n"""		2305126	1					
ANR	2305385	PrimaryExpression	"""DEBUG: ManualFeed = %d\\n"""		2305126	0					
ANR	2305386	Argument	header -> ManualFeed		2305126	2					
ANR	2305387	PtrMemberAccess	header -> ManualFeed		2305126	0					
ANR	2305388	Identifier	header		2305126	0					
ANR	2305389	Identifier	ManualFeed		2305126	1					
ANR	2305390	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaPosition = %d\\n"" , header -> MediaPosition )"	201:2:5663:5732	2305126	19	True				
ANR	2305391	CallExpression	"fprintf ( stderr , ""DEBUG: MediaPosition = %d\\n"" , header -> MediaPosition )"		2305126	0					
ANR	2305392	Callee	fprintf		2305126	0					
ANR	2305393	Identifier	fprintf		2305126	0					
ANR	2305394	ArgumentList	stderr		2305126	1					
ANR	2305395	Argument	stderr		2305126	0					
ANR	2305396	Identifier	stderr		2305126	0					
ANR	2305397	Argument	"""DEBUG: MediaPosition = %d\\n"""		2305126	1					
ANR	2305398	PrimaryExpression	"""DEBUG: MediaPosition = %d\\n"""		2305126	0					
ANR	2305399	Argument	header -> MediaPosition		2305126	2					
ANR	2305400	PtrMemberAccess	header -> MediaPosition		2305126	0					
ANR	2305401	Identifier	header		2305126	0					
ANR	2305402	Identifier	MediaPosition		2305126	1					
ANR	2305403	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaWeight = %d\\n"" , header -> MediaWeight )"	202:2:5736:5801	2305126	20	True				
ANR	2305404	CallExpression	"fprintf ( stderr , ""DEBUG: MediaWeight = %d\\n"" , header -> MediaWeight )"		2305126	0					
ANR	2305405	Callee	fprintf		2305126	0					
ANR	2305406	Identifier	fprintf		2305126	0					
ANR	2305407	ArgumentList	stderr		2305126	1					
ANR	2305408	Argument	stderr		2305126	0					
ANR	2305409	Identifier	stderr		2305126	0					
ANR	2305410	Argument	"""DEBUG: MediaWeight = %d\\n"""		2305126	1					
ANR	2305411	PrimaryExpression	"""DEBUG: MediaWeight = %d\\n"""		2305126	0					
ANR	2305412	Argument	header -> MediaWeight		2305126	2					
ANR	2305413	PtrMemberAccess	header -> MediaWeight		2305126	0					
ANR	2305414	Identifier	header		2305126	0					
ANR	2305415	Identifier	MediaWeight		2305126	1					
ANR	2305416	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MirrorPrint = %d\\n"" , header -> MirrorPrint )"	203:2:5805:5870	2305126	21	True				
ANR	2305417	CallExpression	"fprintf ( stderr , ""DEBUG: MirrorPrint = %d\\n"" , header -> MirrorPrint )"		2305126	0					
ANR	2305418	Callee	fprintf		2305126	0					
ANR	2305419	Identifier	fprintf		2305126	0					
ANR	2305420	ArgumentList	stderr		2305126	1					
ANR	2305421	Argument	stderr		2305126	0					
ANR	2305422	Identifier	stderr		2305126	0					
ANR	2305423	Argument	"""DEBUG: MirrorPrint = %d\\n"""		2305126	1					
ANR	2305424	PrimaryExpression	"""DEBUG: MirrorPrint = %d\\n"""		2305126	0					
ANR	2305425	Argument	header -> MirrorPrint		2305126	2					
ANR	2305426	PtrMemberAccess	header -> MirrorPrint		2305126	0					
ANR	2305427	Identifier	header		2305126	0					
ANR	2305428	Identifier	MirrorPrint		2305126	1					
ANR	2305429	ExpressionStatement	"fprintf ( stderr , ""DEBUG: NegativePrint = %d\\n"" , header -> NegativePrint )"	204:2:5874:5943	2305126	22	True				
ANR	2305430	CallExpression	"fprintf ( stderr , ""DEBUG: NegativePrint = %d\\n"" , header -> NegativePrint )"		2305126	0					
ANR	2305431	Callee	fprintf		2305126	0					
ANR	2305432	Identifier	fprintf		2305126	0					
ANR	2305433	ArgumentList	stderr		2305126	1					
ANR	2305434	Argument	stderr		2305126	0					
ANR	2305435	Identifier	stderr		2305126	0					
ANR	2305436	Argument	"""DEBUG: NegativePrint = %d\\n"""		2305126	1					
ANR	2305437	PrimaryExpression	"""DEBUG: NegativePrint = %d\\n"""		2305126	0					
ANR	2305438	Argument	header -> NegativePrint		2305126	2					
ANR	2305439	PtrMemberAccess	header -> NegativePrint		2305126	0					
ANR	2305440	Identifier	header		2305126	0					
ANR	2305441	Identifier	NegativePrint		2305126	1					
ANR	2305442	ExpressionStatement	"fprintf ( stderr , ""DEBUG: NumCopies = %d\\n"" , header -> NumCopies )"	205:2:5947:6008	2305126	23	True				
ANR	2305443	CallExpression	"fprintf ( stderr , ""DEBUG: NumCopies = %d\\n"" , header -> NumCopies )"		2305126	0					
ANR	2305444	Callee	fprintf		2305126	0					
ANR	2305445	Identifier	fprintf		2305126	0					
ANR	2305446	ArgumentList	stderr		2305126	1					
ANR	2305447	Argument	stderr		2305126	0					
ANR	2305448	Identifier	stderr		2305126	0					
ANR	2305449	Argument	"""DEBUG: NumCopies = %d\\n"""		2305126	1					
ANR	2305450	PrimaryExpression	"""DEBUG: NumCopies = %d\\n"""		2305126	0					
ANR	2305451	Argument	header -> NumCopies		2305126	2					
ANR	2305452	PtrMemberAccess	header -> NumCopies		2305126	0					
ANR	2305453	Identifier	header		2305126	0					
ANR	2305454	Identifier	NumCopies		2305126	1					
ANR	2305455	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Orientation = %d\\n"" , header -> Orientation )"	206:2:6012:6077	2305126	24	True				
ANR	2305456	CallExpression	"fprintf ( stderr , ""DEBUG: Orientation = %d\\n"" , header -> Orientation )"		2305126	0					
ANR	2305457	Callee	fprintf		2305126	0					
ANR	2305458	Identifier	fprintf		2305126	0					
ANR	2305459	ArgumentList	stderr		2305126	1					
ANR	2305460	Argument	stderr		2305126	0					
ANR	2305461	Identifier	stderr		2305126	0					
ANR	2305462	Argument	"""DEBUG: Orientation = %d\\n"""		2305126	1					
ANR	2305463	PrimaryExpression	"""DEBUG: Orientation = %d\\n"""		2305126	0					
ANR	2305464	Argument	header -> Orientation		2305126	2					
ANR	2305465	PtrMemberAccess	header -> Orientation		2305126	0					
ANR	2305466	Identifier	header		2305126	0					
ANR	2305467	Identifier	Orientation		2305126	1					
ANR	2305468	ExpressionStatement	"fprintf ( stderr , ""DEBUG: OutputFaceUp = %d\\n"" , header -> OutputFaceUp )"	207:2:6081:6148	2305126	25	True				
ANR	2305469	CallExpression	"fprintf ( stderr , ""DEBUG: OutputFaceUp = %d\\n"" , header -> OutputFaceUp )"		2305126	0					
ANR	2305470	Callee	fprintf		2305126	0					
ANR	2305471	Identifier	fprintf		2305126	0					
ANR	2305472	ArgumentList	stderr		2305126	1					
ANR	2305473	Argument	stderr		2305126	0					
ANR	2305474	Identifier	stderr		2305126	0					
ANR	2305475	Argument	"""DEBUG: OutputFaceUp = %d\\n"""		2305126	1					
ANR	2305476	PrimaryExpression	"""DEBUG: OutputFaceUp = %d\\n"""		2305126	0					
ANR	2305477	Argument	header -> OutputFaceUp		2305126	2					
ANR	2305478	PtrMemberAccess	header -> OutputFaceUp		2305126	0					
ANR	2305479	Identifier	header		2305126	0					
ANR	2305480	Identifier	OutputFaceUp		2305126	1					
ANR	2305481	ExpressionStatement	"fprintf ( stderr , ""DEBUG: PageSize = [ %d %d ]\\n"" , header -> PageSize [ 0 ] , header -> PageSize [ 1 ] )"	208:2:6152:6252	2305126	26	True				
ANR	2305482	CallExpression	"fprintf ( stderr , ""DEBUG: PageSize = [ %d %d ]\\n"" , header -> PageSize [ 0 ] , header -> PageSize [ 1 ] )"		2305126	0					
ANR	2305483	Callee	fprintf		2305126	0					
ANR	2305484	Identifier	fprintf		2305126	0					
ANR	2305485	ArgumentList	stderr		2305126	1					
ANR	2305486	Argument	stderr		2305126	0					
ANR	2305487	Identifier	stderr		2305126	0					
ANR	2305488	Argument	"""DEBUG: PageSize = [ %d %d ]\\n"""		2305126	1					
ANR	2305489	PrimaryExpression	"""DEBUG: PageSize = [ %d %d ]\\n"""		2305126	0					
ANR	2305490	Argument	header -> PageSize [ 0 ]		2305126	2					
ANR	2305491	ArrayIndexing	header -> PageSize [ 0 ]		2305126	0					
ANR	2305492	PtrMemberAccess	header -> PageSize		2305126	0					
ANR	2305493	Identifier	header		2305126	0					
ANR	2305494	Identifier	PageSize		2305126	1					
ANR	2305495	PrimaryExpression	0		2305126	1					
ANR	2305496	Argument	header -> PageSize [ 1 ]		2305126	3					
ANR	2305497	ArrayIndexing	header -> PageSize [ 1 ]		2305126	0					
ANR	2305498	PtrMemberAccess	header -> PageSize		2305126	0					
ANR	2305499	Identifier	header		2305126	0					
ANR	2305500	Identifier	PageSize		2305126	1					
ANR	2305501	PrimaryExpression	1		2305126	1					
ANR	2305502	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Separations = %d\\n"" , header -> Separations )"	210:2:6256:6321	2305126	27	True				
ANR	2305503	CallExpression	"fprintf ( stderr , ""DEBUG: Separations = %d\\n"" , header -> Separations )"		2305126	0					
ANR	2305504	Callee	fprintf		2305126	0					
ANR	2305505	Identifier	fprintf		2305126	0					
ANR	2305506	ArgumentList	stderr		2305126	1					
ANR	2305507	Argument	stderr		2305126	0					
ANR	2305508	Identifier	stderr		2305126	0					
ANR	2305509	Argument	"""DEBUG: Separations = %d\\n"""		2305126	1					
ANR	2305510	PrimaryExpression	"""DEBUG: Separations = %d\\n"""		2305126	0					
ANR	2305511	Argument	header -> Separations		2305126	2					
ANR	2305512	PtrMemberAccess	header -> Separations		2305126	0					
ANR	2305513	Identifier	header		2305126	0					
ANR	2305514	Identifier	Separations		2305126	1					
ANR	2305515	ExpressionStatement	"fprintf ( stderr , ""DEBUG: TraySwitch = %d\\n"" , header -> TraySwitch )"	211:2:6325:6388	2305126	28	True				
ANR	2305516	CallExpression	"fprintf ( stderr , ""DEBUG: TraySwitch = %d\\n"" , header -> TraySwitch )"		2305126	0					
ANR	2305517	Callee	fprintf		2305126	0					
ANR	2305518	Identifier	fprintf		2305126	0					
ANR	2305519	ArgumentList	stderr		2305126	1					
ANR	2305520	Argument	stderr		2305126	0					
ANR	2305521	Identifier	stderr		2305126	0					
ANR	2305522	Argument	"""DEBUG: TraySwitch = %d\\n"""		2305126	1					
ANR	2305523	PrimaryExpression	"""DEBUG: TraySwitch = %d\\n"""		2305126	0					
ANR	2305524	Argument	header -> TraySwitch		2305126	2					
ANR	2305525	PtrMemberAccess	header -> TraySwitch		2305126	0					
ANR	2305526	Identifier	header		2305126	0					
ANR	2305527	Identifier	TraySwitch		2305126	1					
ANR	2305528	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Tumble = %d\\n"" , header -> Tumble )"	212:2:6392:6447	2305126	29	True				
ANR	2305529	CallExpression	"fprintf ( stderr , ""DEBUG: Tumble = %d\\n"" , header -> Tumble )"		2305126	0					
ANR	2305530	Callee	fprintf		2305126	0					
ANR	2305531	Identifier	fprintf		2305126	0					
ANR	2305532	ArgumentList	stderr		2305126	1					
ANR	2305533	Argument	stderr		2305126	0					
ANR	2305534	Identifier	stderr		2305126	0					
ANR	2305535	Argument	"""DEBUG: Tumble = %d\\n"""		2305126	1					
ANR	2305536	PrimaryExpression	"""DEBUG: Tumble = %d\\n"""		2305126	0					
ANR	2305537	Argument	header -> Tumble		2305126	2					
ANR	2305538	PtrMemberAccess	header -> Tumble		2305126	0					
ANR	2305539	Identifier	header		2305126	0					
ANR	2305540	Identifier	Tumble		2305126	1					
ANR	2305541	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsWidth = %d\\n"" , header -> cupsWidth )"	213:2:6451:6512	2305126	30	True				
ANR	2305542	CallExpression	"fprintf ( stderr , ""DEBUG: cupsWidth = %d\\n"" , header -> cupsWidth )"		2305126	0					
ANR	2305543	Callee	fprintf		2305126	0					
ANR	2305544	Identifier	fprintf		2305126	0					
ANR	2305545	ArgumentList	stderr		2305126	1					
ANR	2305546	Argument	stderr		2305126	0					
ANR	2305547	Identifier	stderr		2305126	0					
ANR	2305548	Argument	"""DEBUG: cupsWidth = %d\\n"""		2305126	1					
ANR	2305549	PrimaryExpression	"""DEBUG: cupsWidth = %d\\n"""		2305126	0					
ANR	2305550	Argument	header -> cupsWidth		2305126	2					
ANR	2305551	PtrMemberAccess	header -> cupsWidth		2305126	0					
ANR	2305552	Identifier	header		2305126	0					
ANR	2305553	Identifier	cupsWidth		2305126	1					
ANR	2305554	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsHeight = %d\\n"" , header -> cupsHeight )"	214:2:6516:6579	2305126	31	True				
ANR	2305555	CallExpression	"fprintf ( stderr , ""DEBUG: cupsHeight = %d\\n"" , header -> cupsHeight )"		2305126	0					
ANR	2305556	Callee	fprintf		2305126	0					
ANR	2305557	Identifier	fprintf		2305126	0					
ANR	2305558	ArgumentList	stderr		2305126	1					
ANR	2305559	Argument	stderr		2305126	0					
ANR	2305560	Identifier	stderr		2305126	0					
ANR	2305561	Argument	"""DEBUG: cupsHeight = %d\\n"""		2305126	1					
ANR	2305562	PrimaryExpression	"""DEBUG: cupsHeight = %d\\n"""		2305126	0					
ANR	2305563	Argument	header -> cupsHeight		2305126	2					
ANR	2305564	PtrMemberAccess	header -> cupsHeight		2305126	0					
ANR	2305565	Identifier	header		2305126	0					
ANR	2305566	Identifier	cupsHeight		2305126	1					
ANR	2305567	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsMediaType = %d\\n"" , header -> cupsMediaType )"	215:2:6583:6652	2305126	32	True				
ANR	2305568	CallExpression	"fprintf ( stderr , ""DEBUG: cupsMediaType = %d\\n"" , header -> cupsMediaType )"		2305126	0					
ANR	2305569	Callee	fprintf		2305126	0					
ANR	2305570	Identifier	fprintf		2305126	0					
ANR	2305571	ArgumentList	stderr		2305126	1					
ANR	2305572	Argument	stderr		2305126	0					
ANR	2305573	Identifier	stderr		2305126	0					
ANR	2305574	Argument	"""DEBUG: cupsMediaType = %d\\n"""		2305126	1					
ANR	2305575	PrimaryExpression	"""DEBUG: cupsMediaType = %d\\n"""		2305126	0					
ANR	2305576	Argument	header -> cupsMediaType		2305126	2					
ANR	2305577	PtrMemberAccess	header -> cupsMediaType		2305126	0					
ANR	2305578	Identifier	header		2305126	0					
ANR	2305579	Identifier	cupsMediaType		2305126	1					
ANR	2305580	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBitsPerColor = %d\\n"" , header -> cupsBitsPerColor )"	216:2:6656:6731	2305126	33	True				
ANR	2305581	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBitsPerColor = %d\\n"" , header -> cupsBitsPerColor )"		2305126	0					
ANR	2305582	Callee	fprintf		2305126	0					
ANR	2305583	Identifier	fprintf		2305126	0					
ANR	2305584	ArgumentList	stderr		2305126	1					
ANR	2305585	Argument	stderr		2305126	0					
ANR	2305586	Identifier	stderr		2305126	0					
ANR	2305587	Argument	"""DEBUG: cupsBitsPerColor = %d\\n"""		2305126	1					
ANR	2305588	PrimaryExpression	"""DEBUG: cupsBitsPerColor = %d\\n"""		2305126	0					
ANR	2305589	Argument	header -> cupsBitsPerColor		2305126	2					
ANR	2305590	PtrMemberAccess	header -> cupsBitsPerColor		2305126	0					
ANR	2305591	Identifier	header		2305126	0					
ANR	2305592	Identifier	cupsBitsPerColor		2305126	1					
ANR	2305593	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBitsPerPixel = %d\\n"" , header -> cupsBitsPerPixel )"	217:2:6735:6810	2305126	34	True				
ANR	2305594	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBitsPerPixel = %d\\n"" , header -> cupsBitsPerPixel )"		2305126	0					
ANR	2305595	Callee	fprintf		2305126	0					
ANR	2305596	Identifier	fprintf		2305126	0					
ANR	2305597	ArgumentList	stderr		2305126	1					
ANR	2305598	Argument	stderr		2305126	0					
ANR	2305599	Identifier	stderr		2305126	0					
ANR	2305600	Argument	"""DEBUG: cupsBitsPerPixel = %d\\n"""		2305126	1					
ANR	2305601	PrimaryExpression	"""DEBUG: cupsBitsPerPixel = %d\\n"""		2305126	0					
ANR	2305602	Argument	header -> cupsBitsPerPixel		2305126	2					
ANR	2305603	PtrMemberAccess	header -> cupsBitsPerPixel		2305126	0					
ANR	2305604	Identifier	header		2305126	0					
ANR	2305605	Identifier	cupsBitsPerPixel		2305126	1					
ANR	2305606	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBytesPerLine = %d\\n"" , header -> cupsBytesPerLine )"	218:2:6814:6889	2305126	35	True				
ANR	2305607	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBytesPerLine = %d\\n"" , header -> cupsBytesPerLine )"		2305126	0					
ANR	2305608	Callee	fprintf		2305126	0					
ANR	2305609	Identifier	fprintf		2305126	0					
ANR	2305610	ArgumentList	stderr		2305126	1					
ANR	2305611	Argument	stderr		2305126	0					
ANR	2305612	Identifier	stderr		2305126	0					
ANR	2305613	Argument	"""DEBUG: cupsBytesPerLine = %d\\n"""		2305126	1					
ANR	2305614	PrimaryExpression	"""DEBUG: cupsBytesPerLine = %d\\n"""		2305126	0					
ANR	2305615	Argument	header -> cupsBytesPerLine		2305126	2					
ANR	2305616	PtrMemberAccess	header -> cupsBytesPerLine		2305126	0					
ANR	2305617	Identifier	header		2305126	0					
ANR	2305618	Identifier	cupsBytesPerLine		2305126	1					
ANR	2305619	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsColorOrder = %d\\n"" , header -> cupsColorOrder )"	219:2:6893:6964	2305126	36	True				
ANR	2305620	CallExpression	"fprintf ( stderr , ""DEBUG: cupsColorOrder = %d\\n"" , header -> cupsColorOrder )"		2305126	0					
ANR	2305621	Callee	fprintf		2305126	0					
ANR	2305622	Identifier	fprintf		2305126	0					
ANR	2305623	ArgumentList	stderr		2305126	1					
ANR	2305624	Argument	stderr		2305126	0					
ANR	2305625	Identifier	stderr		2305126	0					
ANR	2305626	Argument	"""DEBUG: cupsColorOrder = %d\\n"""		2305126	1					
ANR	2305627	PrimaryExpression	"""DEBUG: cupsColorOrder = %d\\n"""		2305126	0					
ANR	2305628	Argument	header -> cupsColorOrder		2305126	2					
ANR	2305629	PtrMemberAccess	header -> cupsColorOrder		2305126	0					
ANR	2305630	Identifier	header		2305126	0					
ANR	2305631	Identifier	cupsColorOrder		2305126	1					
ANR	2305632	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsColorSpace = %d\\n"" , header -> cupsColorSpace )"	220:2:6968:7039	2305126	37	True				
ANR	2305633	CallExpression	"fprintf ( stderr , ""DEBUG: cupsColorSpace = %d\\n"" , header -> cupsColorSpace )"		2305126	0					
ANR	2305634	Callee	fprintf		2305126	0					
ANR	2305635	Identifier	fprintf		2305126	0					
ANR	2305636	ArgumentList	stderr		2305126	1					
ANR	2305637	Argument	stderr		2305126	0					
ANR	2305638	Identifier	stderr		2305126	0					
ANR	2305639	Argument	"""DEBUG: cupsColorSpace = %d\\n"""		2305126	1					
ANR	2305640	PrimaryExpression	"""DEBUG: cupsColorSpace = %d\\n"""		2305126	0					
ANR	2305641	Argument	header -> cupsColorSpace		2305126	2					
ANR	2305642	PtrMemberAccess	header -> cupsColorSpace		2305126	0					
ANR	2305643	Identifier	header		2305126	0					
ANR	2305644	Identifier	cupsColorSpace		2305126	1					
ANR	2305645	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsCompression = %d\\n"" , header -> cupsCompression )"	221:2:7043:7116	2305126	38	True				
ANR	2305646	CallExpression	"fprintf ( stderr , ""DEBUG: cupsCompression = %d\\n"" , header -> cupsCompression )"		2305126	0					
ANR	2305647	Callee	fprintf		2305126	0					
ANR	2305648	Identifier	fprintf		2305126	0					
ANR	2305649	ArgumentList	stderr		2305126	1					
ANR	2305650	Argument	stderr		2305126	0					
ANR	2305651	Identifier	stderr		2305126	0					
ANR	2305652	Argument	"""DEBUG: cupsCompression = %d\\n"""		2305126	1					
ANR	2305653	PrimaryExpression	"""DEBUG: cupsCompression = %d\\n"""		2305126	0					
ANR	2305654	Argument	header -> cupsCompression		2305126	2					
ANR	2305655	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305656	Identifier	header		2305126	0					
ANR	2305657	Identifier	cupsCompression		2305126	1					
ANR	2305658	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsRowCount = %d\\n"" , header -> cupsRowCount )"	222:2:7120:7187	2305126	39	True				
ANR	2305659	CallExpression	"fprintf ( stderr , ""DEBUG: cupsRowCount = %d\\n"" , header -> cupsRowCount )"		2305126	0					
ANR	2305660	Callee	fprintf		2305126	0					
ANR	2305661	Identifier	fprintf		2305126	0					
ANR	2305662	ArgumentList	stderr		2305126	1					
ANR	2305663	Argument	stderr		2305126	0					
ANR	2305664	Identifier	stderr		2305126	0					
ANR	2305665	Argument	"""DEBUG: cupsRowCount = %d\\n"""		2305126	1					
ANR	2305666	PrimaryExpression	"""DEBUG: cupsRowCount = %d\\n"""		2305126	0					
ANR	2305667	Argument	header -> cupsRowCount		2305126	2					
ANR	2305668	PtrMemberAccess	header -> cupsRowCount		2305126	0					
ANR	2305669	Identifier	header		2305126	0					
ANR	2305670	Identifier	cupsRowCount		2305126	1					
ANR	2305671	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsRowFeed = %d\\n"" , header -> cupsRowFeed )"	223:2:7191:7256	2305126	40	True				
ANR	2305672	CallExpression	"fprintf ( stderr , ""DEBUG: cupsRowFeed = %d\\n"" , header -> cupsRowFeed )"		2305126	0					
ANR	2305673	Callee	fprintf		2305126	0					
ANR	2305674	Identifier	fprintf		2305126	0					
ANR	2305675	ArgumentList	stderr		2305126	1					
ANR	2305676	Argument	stderr		2305126	0					
ANR	2305677	Identifier	stderr		2305126	0					
ANR	2305678	Argument	"""DEBUG: cupsRowFeed = %d\\n"""		2305126	1					
ANR	2305679	PrimaryExpression	"""DEBUG: cupsRowFeed = %d\\n"""		2305126	0					
ANR	2305680	Argument	header -> cupsRowFeed		2305126	2					
ANR	2305681	PtrMemberAccess	header -> cupsRowFeed		2305126	0					
ANR	2305682	Identifier	header		2305126	0					
ANR	2305683	Identifier	cupsRowFeed		2305126	1					
ANR	2305684	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsRowStep = %d\\n"" , header -> cupsRowStep )"	224:2:7260:7325	2305126	41	True				
ANR	2305685	CallExpression	"fprintf ( stderr , ""DEBUG: cupsRowStep = %d\\n"" , header -> cupsRowStep )"		2305126	0					
ANR	2305686	Callee	fprintf		2305126	0					
ANR	2305687	Identifier	fprintf		2305126	0					
ANR	2305688	ArgumentList	stderr		2305126	1					
ANR	2305689	Argument	stderr		2305126	0					
ANR	2305690	Identifier	stderr		2305126	0					
ANR	2305691	Argument	"""DEBUG: cupsRowStep = %d\\n"""		2305126	1					
ANR	2305692	PrimaryExpression	"""DEBUG: cupsRowStep = %d\\n"""		2305126	0					
ANR	2305693	Argument	header -> cupsRowStep		2305126	2					
ANR	2305694	PtrMemberAccess	header -> cupsRowStep		2305126	0					
ANR	2305695	Identifier	header		2305126	0					
ANR	2305696	Identifier	cupsRowStep		2305126	1					
ANR	2305697	SwitchStatement	switch ( ModelNumber )		2305126	42					
ANR	2305698	Condition	ModelNumber	226:10:7338:7348	2305126	0	True				
ANR	2305699	Identifier	ModelNumber		2305126	0					
ANR	2305700	CompoundStatement		58:2:3173:3173	2305126	1					
ANR	2305701	Label	case DYMO_3x0 :	228:4:7359:7373	2305126	0	True				
ANR	2305702	Identifier	DYMO_3x0		2305126	0					
ANR	2305703	ExpressionStatement	length = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72	233:1:7426:7485	2305126	1	True				
ANR	2305704	AssignmentExpression	length = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72		2305126	0		=			
ANR	2305705	Identifier	length		2305126	0					
ANR	2305706	MultiplicativeExpression	header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72		2305126	1		*			
ANR	2305707	ArrayIndexing	header -> PageSize [ 1 ]		2305126	0					
ANR	2305708	PtrMemberAccess	header -> PageSize		2305126	0					
ANR	2305709	Identifier	header		2305126	0					
ANR	2305710	Identifier	PageSize		2305126	1					
ANR	2305711	PrimaryExpression	1		2305126	1					
ANR	2305712	MultiplicativeExpression	header -> HWResolution [ 1 ] / 72		2305126	1		/			
ANR	2305713	ArrayIndexing	header -> HWResolution [ 1 ]		2305126	0					
ANR	2305714	PtrMemberAccess	header -> HWResolution		2305126	0					
ANR	2305715	Identifier	header		2305126	0					
ANR	2305716	Identifier	HWResolution		2305126	1					
ANR	2305717	PrimaryExpression	1		2305126	1					
ANR	2305718	PrimaryExpression	72		2305126	1					
ANR	2305719	ExpressionStatement	"printf ( ""\\033L%c%c"" , length >> 8 , length )"	235:1:7489:7529	2305126	2	True				
ANR	2305720	CallExpression	"printf ( ""\\033L%c%c"" , length >> 8 , length )"		2305126	0					
ANR	2305721	Callee	printf		2305126	0					
ANR	2305722	Identifier	printf		2305126	0					
ANR	2305723	ArgumentList	"""\\033L%c%c"""		2305126	1					
ANR	2305724	Argument	"""\\033L%c%c"""		2305126	0					
ANR	2305725	PrimaryExpression	"""\\033L%c%c"""		2305126	0					
ANR	2305726	Argument	length >> 8		2305126	1					
ANR	2305727	ShiftExpression	length >> 8		2305126	0		>>			
ANR	2305728	Identifier	length		2305126	0					
ANR	2305729	PrimaryExpression	8		2305126	1					
ANR	2305730	Argument	length		2305126	2					
ANR	2305731	Identifier	length		2305126	0					
ANR	2305732	ExpressionStatement	"printf ( ""\\033D%c"" , header -> cupsBytesPerLine )"	236:1:7532:7575	2305126	3	True				
ANR	2305733	CallExpression	"printf ( ""\\033D%c"" , header -> cupsBytesPerLine )"		2305126	0					
ANR	2305734	Callee	printf		2305126	0					
ANR	2305735	Identifier	printf		2305126	0					
ANR	2305736	ArgumentList	"""\\033D%c"""		2305126	1					
ANR	2305737	Argument	"""\\033D%c"""		2305126	0					
ANR	2305738	PrimaryExpression	"""\\033D%c"""		2305126	0					
ANR	2305739	Argument	header -> cupsBytesPerLine		2305126	1					
ANR	2305740	PtrMemberAccess	header -> cupsBytesPerLine		2305126	0					
ANR	2305741	Identifier	header		2305126	0					
ANR	2305742	Identifier	cupsBytesPerLine		2305126	1					
ANR	2305743	ExpressionStatement	"printf ( ""\\033%c"" , header -> cupsCompression + 'c' )"	238:1:7579:7626	2305126	4	True				
ANR	2305744	CallExpression	"printf ( ""\\033%c"" , header -> cupsCompression + 'c' )"		2305126	0					
ANR	2305745	Callee	printf		2305126	0					
ANR	2305746	Identifier	printf		2305126	0					
ANR	2305747	ArgumentList	"""\\033%c"""		2305126	1					
ANR	2305748	Argument	"""\\033%c"""		2305126	0					
ANR	2305749	PrimaryExpression	"""\\033%c"""		2305126	0					
ANR	2305750	Argument	header -> cupsCompression + 'c'		2305126	1					
ANR	2305751	AdditiveExpression	header -> cupsCompression + 'c'		2305126	0		+			
ANR	2305752	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305753	Identifier	header		2305126	0					
ANR	2305754	Identifier	cupsCompression		2305126	1					
ANR	2305755	PrimaryExpression	'c'		2305126	1					
ANR	2305756	BreakStatement	break ;	239:1:7644:7649	2305126	5	True				
ANR	2305757	Label	case ZEBRA_EPL_LINE :	241:4:7656:7676	2305126	6	True				
ANR	2305758	Identifier	ZEBRA_EPL_LINE		2305126	0					
ANR	2305759	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		2305126	7					
ANR	2305760	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	246:5:7726:7825	2305126	0	True				
ANR	2305761	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		2305126	0		&&			
ANR	2305762	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		2305126	0		!=			
ANR	2305763	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2305126	0		=			
ANR	2305764	Identifier	choice		2305126	0					
ANR	2305765	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2305126	1					
ANR	2305766	Callee	ppdFindMarkedChoice		2305126	0					
ANR	2305767	Identifier	ppdFindMarkedChoice		2305126	0					
ANR	2305768	ArgumentList	ppd		2305126	1					
ANR	2305769	Argument	ppd		2305126	0					
ANR	2305770	Identifier	ppd		2305126	0					
ANR	2305771	Argument	"""zePrintRate"""		2305126	1					
ANR	2305772	PrimaryExpression	"""zePrintRate"""		2305126	0					
ANR	2305773	Identifier	NULL		2305126	1					
ANR	2305774	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		2305126	1					
ANR	2305775	Callee	strcmp		2305126	0					
ANR	2305776	Identifier	strcmp		2305126	0					
ANR	2305777	ArgumentList	choice -> choice		2305126	1					
ANR	2305778	Argument	choice -> choice		2305126	0					
ANR	2305779	PtrMemberAccess	choice -> choice		2305126	0					
ANR	2305780	Identifier	choice		2305126	0					
ANR	2305781	Identifier	choice		2305126	1					
ANR	2305782	Argument	"""Default"""		2305126	1					
ANR	2305783	PrimaryExpression	"""Default"""		2305126	0					
ANR	2305784	ExpressionStatement	"printf ( ""\\033S%.0f"" , atof ( choice -> choice ) * 2.0 - 2.0 )"	248:3:7831:7884	2305126	1	True				
ANR	2305785	CallExpression	"printf ( ""\\033S%.0f"" , atof ( choice -> choice ) * 2.0 - 2.0 )"		2305126	0					
ANR	2305786	Callee	printf		2305126	0					
ANR	2305787	Identifier	printf		2305126	0					
ANR	2305788	ArgumentList	"""\\033S%.0f"""		2305126	1					
ANR	2305789	Argument	"""\\033S%.0f"""		2305126	0					
ANR	2305790	PrimaryExpression	"""\\033S%.0f"""		2305126	0					
ANR	2305791	Argument	atof ( choice -> choice ) * 2.0 - 2.0		2305126	1					
ANR	2305792	AdditiveExpression	atof ( choice -> choice ) * 2.0 - 2.0		2305126	0		-			
ANR	2305793	MultiplicativeExpression	atof ( choice -> choice ) * 2.0		2305126	0		*			
ANR	2305794	CallExpression	atof ( choice -> choice )		2305126	0					
ANR	2305795	Callee	atof		2305126	0					
ANR	2305796	Identifier	atof		2305126	0					
ANR	2305797	ArgumentList	choice -> choice		2305126	1					
ANR	2305798	Argument	choice -> choice		2305126	0					
ANR	2305799	PtrMemberAccess	choice -> choice		2305126	0					
ANR	2305800	Identifier	choice		2305126	0					
ANR	2305801	Identifier	choice		2305126	1					
ANR	2305802	PrimaryExpression	2.0		2305126	1					
ANR	2305803	PrimaryExpression	2.0		2305126	1					
ANR	2305804	IfStatement	if ( header -> cupsCompression > 0 && header -> cupsCompression <= 100 )		2305126	8					
ANR	2305805	Condition	header -> cupsCompression > 0 && header -> cupsCompression <= 100	254:12:7940:8000	2305126	0	True				
ANR	2305806	AndExpression	header -> cupsCompression > 0 && header -> cupsCompression <= 100		2305126	0		&&			
ANR	2305807	RelationalExpression	header -> cupsCompression > 0		2305126	0		>			
ANR	2305808	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305809	Identifier	header		2305126	0					
ANR	2305810	Identifier	cupsCompression		2305126	1					
ANR	2305811	PrimaryExpression	0		2305126	1					
ANR	2305812	RelationalExpression	header -> cupsCompression <= 100		2305126	1		<=			
ANR	2305813	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305814	Identifier	header		2305126	0					
ANR	2305815	Identifier	cupsCompression		2305126	1					
ANR	2305816	PrimaryExpression	100		2305126	1					
ANR	2305817	ExpressionStatement	"printf ( ""\\033D%d"" , 7 * header -> cupsCompression / 100 )"	255:3:8006:8058	2305126	1	True				
ANR	2305818	CallExpression	"printf ( ""\\033D%d"" , 7 * header -> cupsCompression / 100 )"		2305126	0					
ANR	2305819	Callee	printf		2305126	0					
ANR	2305820	Identifier	printf		2305126	0					
ANR	2305821	ArgumentList	"""\\033D%d"""		2305126	1					
ANR	2305822	Argument	"""\\033D%d"""		2305126	0					
ANR	2305823	PrimaryExpression	"""\\033D%d"""		2305126	0					
ANR	2305824	Argument	7 * header -> cupsCompression / 100		2305126	1					
ANR	2305825	MultiplicativeExpression	7 * header -> cupsCompression / 100		2305126	0		*			
ANR	2305826	PrimaryExpression	7		2305126	0					
ANR	2305827	MultiplicativeExpression	header -> cupsCompression / 100		2305126	1		/			
ANR	2305828	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305829	Identifier	header		2305126	0					
ANR	2305830	Identifier	cupsCompression		2305126	1					
ANR	2305831	PrimaryExpression	100		2305126	1					
ANR	2305832	ExpressionStatement	"fputs ( ""\\033M01"" , stdout )"	261:1:8111:8135	2305126	9	True				
ANR	2305833	CallExpression	"fputs ( ""\\033M01"" , stdout )"		2305126	0					
ANR	2305834	Callee	fputs		2305126	0					
ANR	2305835	Identifier	fputs		2305126	0					
ANR	2305836	ArgumentList	"""\\033M01"""		2305126	1					
ANR	2305837	Argument	"""\\033M01"""		2305126	0					
ANR	2305838	PrimaryExpression	"""\\033M01"""		2305126	0					
ANR	2305839	Argument	stdout		2305126	1					
ANR	2305840	Identifier	stdout		2305126	0					
ANR	2305841	ExpressionStatement	"fputs ( ""\\033B"" , stdout )"	267:8:8196:8218	2305126	10	True				
ANR	2305842	CallExpression	"fputs ( ""\\033B"" , stdout )"		2305126	0					
ANR	2305843	Callee	fputs		2305126	0					
ANR	2305844	Identifier	fputs		2305126	0					
ANR	2305845	ArgumentList	"""\\033B"""		2305126	1					
ANR	2305846	Argument	"""\\033B"""		2305126	0					
ANR	2305847	PrimaryExpression	"""\\033B"""		2305126	0					
ANR	2305848	Argument	stdout		2305126	1					
ANR	2305849	Identifier	stdout		2305126	0					
ANR	2305850	BreakStatement	break ;	268:8:8228:8233	2305126	11	True				
ANR	2305851	Label	case ZEBRA_EPL_PAGE :	270:4:8240:8260	2305126	12	True				
ANR	2305852	Identifier	ZEBRA_EPL_PAGE		2305126	0					
ANR	2305853	ExpressionStatement	"puts ( """" )"	275:8:8316:8324	2305126	13	True				
ANR	2305854	CallExpression	"puts ( """" )"		2305126	0					
ANR	2305855	Callee	puts		2305126	0					
ANR	2305856	Identifier	puts		2305126	0					
ANR	2305857	ArgumentList	""""""		2305126	1					
ANR	2305858	Argument	""""""		2305126	0					
ANR	2305859	PrimaryExpression	""""""		2305126	0					
ANR	2305860	ExpressionStatement	"puts ( ""N"" )"	276:1:8327:8336	2305126	14	True				
ANR	2305861	CallExpression	"puts ( ""N"" )"		2305126	0					
ANR	2305862	Callee	puts		2305126	0					
ANR	2305863	Identifier	puts		2305126	0					
ANR	2305864	ArgumentList	"""N"""		2305126	1					
ANR	2305865	Argument	"""N"""		2305126	0					
ANR	2305866	PrimaryExpression	"""N"""		2305126	0					
ANR	2305867	IfStatement	"if ( ! strcmp ( header -> MediaType , ""Direct"" ) )"		2305126	15					
ANR	2305868	Condition	"! strcmp ( header -> MediaType , ""Direct"" )"	282:5:8393:8428	2305126	0	True				
ANR	2305869	UnaryOperationExpression	"! strcmp ( header -> MediaType , ""Direct"" )"		2305126	0					
ANR	2305870	UnaryOperator	!		2305126	0					
ANR	2305871	CallExpression	"strcmp ( header -> MediaType , ""Direct"" )"		2305126	1					
ANR	2305872	Callee	strcmp		2305126	0					
ANR	2305873	Identifier	strcmp		2305126	0					
ANR	2305874	ArgumentList	header -> MediaType		2305126	1					
ANR	2305875	Argument	header -> MediaType		2305126	0					
ANR	2305876	PtrMemberAccess	header -> MediaType		2305126	0					
ANR	2305877	Identifier	header		2305126	0					
ANR	2305878	Identifier	MediaType		2305126	1					
ANR	2305879	Argument	"""Direct"""		2305126	1					
ANR	2305880	PrimaryExpression	"""Direct"""		2305126	0					
ANR	2305881	ExpressionStatement	"puts ( ""OD"" )"	283:3:8434:8444	2305126	1	True				
ANR	2305882	CallExpression	"puts ( ""OD"" )"		2305126	0					
ANR	2305883	Callee	puts		2305126	0					
ANR	2305884	Identifier	puts		2305126	0					
ANR	2305885	ArgumentList	"""OD"""		2305126	1					
ANR	2305886	Argument	"""OD"""		2305126	0					
ANR	2305887	PrimaryExpression	"""OD"""		2305126	0					
ANR	2305888	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		2305126	16					
ANR	2305889	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	289:5:8495:8594	2305126	0	True				
ANR	2305890	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		2305126	0		&&			
ANR	2305891	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		2305126	0		!=			
ANR	2305892	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2305126	0		=			
ANR	2305893	Identifier	choice		2305126	0					
ANR	2305894	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2305126	1					
ANR	2305895	Callee	ppdFindMarkedChoice		2305126	0					
ANR	2305896	Identifier	ppdFindMarkedChoice		2305126	0					
ANR	2305897	ArgumentList	ppd		2305126	1					
ANR	2305898	Argument	ppd		2305126	0					
ANR	2305899	Identifier	ppd		2305126	0					
ANR	2305900	Argument	"""zePrintRate"""		2305126	1					
ANR	2305901	PrimaryExpression	"""zePrintRate"""		2305126	0					
ANR	2305902	Identifier	NULL		2305126	1					
ANR	2305903	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		2305126	1					
ANR	2305904	Callee	strcmp		2305126	0					
ANR	2305905	Identifier	strcmp		2305126	0					
ANR	2305906	ArgumentList	choice -> choice		2305126	1					
ANR	2305907	Argument	choice -> choice		2305126	0					
ANR	2305908	PtrMemberAccess	choice -> choice		2305126	0					
ANR	2305909	Identifier	choice		2305126	0					
ANR	2305910	Identifier	choice		2305126	1					
ANR	2305911	Argument	"""Default"""		2305126	1					
ANR	2305912	PrimaryExpression	"""Default"""		2305126	0					
ANR	2305913	CompoundStatement		123:3:4423:4455	2305126	1					
ANR	2305914	IdentifierDeclStatement	float val = atof ( choice -> choice ) ;	292:3:8603:8635	2305126	0	True				
ANR	2305915	IdentifierDecl	val = atof ( choice -> choice )		2305126	0					
ANR	2305916	IdentifierDeclType	float		2305126	0					
ANR	2305917	Identifier	val		2305126	1					
ANR	2305918	AssignmentExpression	val = atof ( choice -> choice )		2305126	2		=			
ANR	2305919	Identifier	val		2305126	0					
ANR	2305920	CallExpression	atof ( choice -> choice )		2305126	1					
ANR	2305921	Callee	atof		2305126	0					
ANR	2305922	Identifier	atof		2305126	0					
ANR	2305923	ArgumentList	choice -> choice		2305126	1					
ANR	2305924	Argument	choice -> choice		2305126	0					
ANR	2305925	PtrMemberAccess	choice -> choice		2305126	0					
ANR	2305926	Identifier	choice		2305126	0					
ANR	2305927	Identifier	choice		2305126	1					
ANR	2305928	IfStatement	if ( val >= 3.0 )		2305126	1					
ANR	2305929	Condition	val >= 3.0	294:7:8645:8654	2305126	0	True				
ANR	2305930	RelationalExpression	val >= 3.0		2305126	0		>=			
ANR	2305931	Identifier	val		2305126	0					
ANR	2305932	PrimaryExpression	3.0		2305126	1					
ANR	2305933	ExpressionStatement	"printf ( ""S%.0f\\n"" , val )"	295:5:8662:8684	2305126	1	True				
ANR	2305934	CallExpression	"printf ( ""S%.0f\\n"" , val )"		2305126	0					
ANR	2305935	Callee	printf		2305126	0					
ANR	2305936	Identifier	printf		2305126	0					
ANR	2305937	ArgumentList	"""S%.0f\\n"""		2305126	1					
ANR	2305938	Argument	"""S%.0f\\n"""		2305126	0					
ANR	2305939	PrimaryExpression	"""S%.0f\\n"""		2305126	0					
ANR	2305940	Argument	val		2305126	1					
ANR	2305941	Identifier	val		2305126	0					
ANR	2305942	ElseStatement	else		2305126	0					
ANR	2305943	ExpressionStatement	"printf ( ""S%.0f\\n"" , val * 2.0 - 2.0 )"	297:5:8699:8733	2305126	0	True				
ANR	2305944	CallExpression	"printf ( ""S%.0f\\n"" , val * 2.0 - 2.0 )"		2305126	0					
ANR	2305945	Callee	printf		2305126	0					
ANR	2305946	Identifier	printf		2305126	0					
ANR	2305947	ArgumentList	"""S%.0f\\n"""		2305126	1					
ANR	2305948	Argument	"""S%.0f\\n"""		2305126	0					
ANR	2305949	PrimaryExpression	"""S%.0f\\n"""		2305126	0					
ANR	2305950	Argument	val * 2.0 - 2.0		2305126	1					
ANR	2305951	AdditiveExpression	val * 2.0 - 2.0		2305126	0		-			
ANR	2305952	MultiplicativeExpression	val * 2.0		2305126	0		*			
ANR	2305953	Identifier	val		2305126	0					
ANR	2305954	PrimaryExpression	2.0		2305126	1					
ANR	2305955	PrimaryExpression	2.0		2305126	1					
ANR	2305956	IfStatement	if ( header -> cupsCompression > 0 && header -> cupsCompression <= 100 )		2305126	17					
ANR	2305957	Condition	header -> cupsCompression > 0 && header -> cupsCompression <= 100	304:12:8799:8859	2305126	0	True				
ANR	2305958	AndExpression	header -> cupsCompression > 0 && header -> cupsCompression <= 100		2305126	0		&&			
ANR	2305959	RelationalExpression	header -> cupsCompression > 0		2305126	0		>			
ANR	2305960	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305961	Identifier	header		2305126	0					
ANR	2305962	Identifier	cupsCompression		2305126	1					
ANR	2305963	PrimaryExpression	0		2305126	1					
ANR	2305964	RelationalExpression	header -> cupsCompression <= 100		2305126	1		<=			
ANR	2305965	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305966	Identifier	header		2305126	0					
ANR	2305967	Identifier	cupsCompression		2305126	1					
ANR	2305968	PrimaryExpression	100		2305126	1					
ANR	2305969	ExpressionStatement	"printf ( ""D%d\\n"" , 15 * header -> cupsCompression / 100 )"	305:3:8865:8916	2305126	1	True				
ANR	2305970	CallExpression	"printf ( ""D%d\\n"" , 15 * header -> cupsCompression / 100 )"		2305126	0					
ANR	2305971	Callee	printf		2305126	0					
ANR	2305972	Identifier	printf		2305126	0					
ANR	2305973	ArgumentList	"""D%d\\n"""		2305126	1					
ANR	2305974	Argument	"""D%d\\n"""		2305126	0					
ANR	2305975	PrimaryExpression	"""D%d\\n"""		2305126	0					
ANR	2305976	Argument	15 * header -> cupsCompression / 100		2305126	1					
ANR	2305977	MultiplicativeExpression	15 * header -> cupsCompression / 100		2305126	0		*			
ANR	2305978	PrimaryExpression	15		2305126	0					
ANR	2305979	MultiplicativeExpression	header -> cupsCompression / 100		2305126	1		/			
ANR	2305980	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2305981	Identifier	header		2305126	0					
ANR	2305982	Identifier	cupsCompression		2305126	1					
ANR	2305983	PrimaryExpression	100		2305126	1					
ANR	2305984	ExpressionStatement	"printf ( ""q%d\\n"" , ( header -> cupsWidth + 7 ) & ~7 )"	311:8:8970:9015	2305126	18	True				
ANR	2305985	CallExpression	"printf ( ""q%d\\n"" , ( header -> cupsWidth + 7 ) & ~7 )"		2305126	0					
ANR	2305986	Callee	printf		2305126	0					
ANR	2305987	Identifier	printf		2305126	0					
ANR	2305988	ArgumentList	"""q%d\\n"""		2305126	1					
ANR	2305989	Argument	"""q%d\\n"""		2305126	0					
ANR	2305990	PrimaryExpression	"""q%d\\n"""		2305126	0					
ANR	2305991	Argument	( header -> cupsWidth + 7 ) & ~7		2305126	1					
ANR	2305992	BitAndExpression	( header -> cupsWidth + 7 ) & ~7		2305126	0		&			
ANR	2305993	AdditiveExpression	header -> cupsWidth + 7		2305126	0		+			
ANR	2305994	PtrMemberAccess	header -> cupsWidth		2305126	0					
ANR	2305995	Identifier	header		2305126	0					
ANR	2305996	Identifier	cupsWidth		2305126	1					
ANR	2305997	PrimaryExpression	7		2305126	1					
ANR	2305998	Identifier	~7		2305126	1					
ANR	2305999	BreakStatement	break ;	312:8:9025:9030	2305126	19	True				
ANR	2306000	Label	case ZEBRA_ZPL :	314:4:9037:9052	2305126	20	True				
ANR	2306001	Identifier	ZEBRA_ZPL		2305126	0					
ANR	2306002	IfStatement	if ( header -> cupsCompression > 0 && header -> cupsCompression <= 100 )		2305126	21					
ANR	2306003	Condition	header -> cupsCompression > 0 && header -> cupsCompression <= 100	319:12:9107:9167	2305126	0	True				
ANR	2306004	AndExpression	header -> cupsCompression > 0 && header -> cupsCompression <= 100		2305126	0		&&			
ANR	2306005	RelationalExpression	header -> cupsCompression > 0		2305126	0		>			
ANR	2306006	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2306007	Identifier	header		2305126	0					
ANR	2306008	Identifier	cupsCompression		2305126	1					
ANR	2306009	PrimaryExpression	0		2305126	1					
ANR	2306010	RelationalExpression	header -> cupsCompression <= 100		2305126	1		<=			
ANR	2306011	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2306012	Identifier	header		2305126	0					
ANR	2306013	Identifier	cupsCompression		2305126	1					
ANR	2306014	PrimaryExpression	100		2305126	1					
ANR	2306015	ExpressionStatement	"printf ( ""~SD%02d\\n"" , 30 * header -> cupsCompression / 100 )"	320:3:9173:9228	2305126	1	True				
ANR	2306016	CallExpression	"printf ( ""~SD%02d\\n"" , 30 * header -> cupsCompression / 100 )"		2305126	0					
ANR	2306017	Callee	printf		2305126	0					
ANR	2306018	Identifier	printf		2305126	0					
ANR	2306019	ArgumentList	"""~SD%02d\\n"""		2305126	1					
ANR	2306020	Argument	"""~SD%02d\\n"""		2305126	0					
ANR	2306021	PrimaryExpression	"""~SD%02d\\n"""		2305126	0					
ANR	2306022	Argument	30 * header -> cupsCompression / 100		2305126	1					
ANR	2306023	MultiplicativeExpression	30 * header -> cupsCompression / 100		2305126	0		*			
ANR	2306024	PrimaryExpression	30		2305126	0					
ANR	2306025	MultiplicativeExpression	header -> cupsCompression / 100		2305126	1		/			
ANR	2306026	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2306027	Identifier	header		2305126	0					
ANR	2306028	Identifier	cupsCompression		2305126	1					
ANR	2306029	PrimaryExpression	100		2305126	1					
ANR	2306030	ExpressionStatement	"printf ( ""~DGR:CUPS.GRF,%d,%d,\\n"" , header -> cupsHeight * header -> cupsBytesPerLine , header -> cupsBytesPerLine )"	326:8:9289:9410	2305126	22	True				
ANR	2306031	CallExpression	"printf ( ""~DGR:CUPS.GRF,%d,%d,\\n"" , header -> cupsHeight * header -> cupsBytesPerLine , header -> cupsBytesPerLine )"		2305126	0					
ANR	2306032	Callee	printf		2305126	0					
ANR	2306033	Identifier	printf		2305126	0					
ANR	2306034	ArgumentList	"""~DGR:CUPS.GRF,%d,%d,\\n"""		2305126	1					
ANR	2306035	Argument	"""~DGR:CUPS.GRF,%d,%d,\\n"""		2305126	0					
ANR	2306036	PrimaryExpression	"""~DGR:CUPS.GRF,%d,%d,\\n"""		2305126	0					
ANR	2306037	Argument	header -> cupsHeight * header -> cupsBytesPerLine		2305126	1					
ANR	2306038	MultiplicativeExpression	header -> cupsHeight * header -> cupsBytesPerLine		2305126	0		*			
ANR	2306039	PtrMemberAccess	header -> cupsHeight		2305126	0					
ANR	2306040	Identifier	header		2305126	0					
ANR	2306041	Identifier	cupsHeight		2305126	1					
ANR	2306042	PtrMemberAccess	header -> cupsBytesPerLine		2305126	1					
ANR	2306043	Identifier	header		2305126	0					
ANR	2306044	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306045	Argument	header -> cupsBytesPerLine		2305126	2					
ANR	2306046	PtrMemberAccess	header -> cupsBytesPerLine		2305126	0					
ANR	2306047	Identifier	header		2305126	0					
ANR	2306048	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306049	ExpressionStatement	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )	334:1:9471:9524	2305126	23	True				
ANR	2306050	AssignmentExpression	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )		2305126	0		=			
ANR	2306051	Identifier	CompBuffer		2305126	0					
ANR	2306052	CallExpression	malloc ( 2 * header -> cupsBytesPerLine + 1 )		2305126	1					
ANR	2306053	Callee	malloc		2305126	0					
ANR	2306054	Identifier	malloc		2305126	0					
ANR	2306055	ArgumentList	2 * header -> cupsBytesPerLine + 1		2305126	1					
ANR	2306056	Argument	2 * header -> cupsBytesPerLine + 1		2305126	0					
ANR	2306057	AdditiveExpression	2 * header -> cupsBytesPerLine + 1		2305126	0		+			
ANR	2306058	MultiplicativeExpression	2 * header -> cupsBytesPerLine		2305126	0		*			
ANR	2306059	PrimaryExpression	2		2305126	0					
ANR	2306060	PtrMemberAccess	header -> cupsBytesPerLine		2305126	1					
ANR	2306061	Identifier	header		2305126	0					
ANR	2306062	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306063	PrimaryExpression	1		2305126	1					
ANR	2306064	ExpressionStatement	LastBuffer = malloc ( header -> cupsBytesPerLine )	335:1:9527:9572	2305126	24	True				
ANR	2306065	AssignmentExpression	LastBuffer = malloc ( header -> cupsBytesPerLine )		2305126	0		=			
ANR	2306066	Identifier	LastBuffer		2305126	0					
ANR	2306067	CallExpression	malloc ( header -> cupsBytesPerLine )		2305126	1					
ANR	2306068	Callee	malloc		2305126	0					
ANR	2306069	Identifier	malloc		2305126	0					
ANR	2306070	ArgumentList	header -> cupsBytesPerLine		2305126	1					
ANR	2306071	Argument	header -> cupsBytesPerLine		2305126	0					
ANR	2306072	PtrMemberAccess	header -> cupsBytesPerLine		2305126	0					
ANR	2306073	Identifier	header		2305126	0					
ANR	2306074	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306075	ExpressionStatement	LastSet = 0	336:1:9575:9589	2305126	25	True				
ANR	2306076	AssignmentExpression	LastSet = 0		2305126	0		=			
ANR	2306077	Identifier	LastSet		2305126	0					
ANR	2306078	PrimaryExpression	0		2305126	1					
ANR	2306079	BreakStatement	break ;	337:8:9599:9604	2305126	26	True				
ANR	2306080	Label	case ZEBRA_CPCL :	339:4:9611:9627	2305126	27	True				
ANR	2306081	Identifier	ZEBRA_CPCL		2305126	0					
ANR	2306082	ExpressionStatement	"printf ( ""! 0 %u %u %u %u\\r\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] , header -> cupsHeight , header -> NumCopies )"	344:8:9677:9811	2305126	28	True				
ANR	2306083	CallExpression	"printf ( ""! 0 %u %u %u %u\\r\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] , header -> cupsHeight , header -> NumCopies )"		2305126	0					
ANR	2306084	Callee	printf		2305126	0					
ANR	2306085	Identifier	printf		2305126	0					
ANR	2306086	ArgumentList	"""! 0 %u %u %u %u\\r\\n"""		2305126	1					
ANR	2306087	Argument	"""! 0 %u %u %u %u\\r\\n"""		2305126	0					
ANR	2306088	PrimaryExpression	"""! 0 %u %u %u %u\\r\\n"""		2305126	0					
ANR	2306089	Argument	header -> HWResolution [ 0 ]		2305126	1					
ANR	2306090	ArrayIndexing	header -> HWResolution [ 0 ]		2305126	0					
ANR	2306091	PtrMemberAccess	header -> HWResolution		2305126	0					
ANR	2306092	Identifier	header		2305126	0					
ANR	2306093	Identifier	HWResolution		2305126	1					
ANR	2306094	PrimaryExpression	0		2305126	1					
ANR	2306095	Argument	header -> HWResolution [ 1 ]		2305126	2					
ANR	2306096	ArrayIndexing	header -> HWResolution [ 1 ]		2305126	0					
ANR	2306097	PtrMemberAccess	header -> HWResolution		2305126	0					
ANR	2306098	Identifier	header		2305126	0					
ANR	2306099	Identifier	HWResolution		2305126	1					
ANR	2306100	PrimaryExpression	1		2305126	1					
ANR	2306101	Argument	header -> cupsHeight		2305126	3					
ANR	2306102	PtrMemberAccess	header -> cupsHeight		2305126	0					
ANR	2306103	Identifier	header		2305126	0					
ANR	2306104	Identifier	cupsHeight		2305126	1					
ANR	2306105	Argument	header -> NumCopies		2305126	4					
ANR	2306106	PtrMemberAccess	header -> NumCopies		2305126	0					
ANR	2306107	Identifier	header		2305126	0					
ANR	2306108	Identifier	NumCopies		2305126	1					
ANR	2306109	ExpressionStatement	"printf ( ""PAGE-WIDTH %d\\r\\n"" , header -> cupsWidth )"	347:1:9814:9860	2305126	29	True				
ANR	2306110	CallExpression	"printf ( ""PAGE-WIDTH %d\\r\\n"" , header -> cupsWidth )"		2305126	0					
ANR	2306111	Callee	printf		2305126	0					
ANR	2306112	Identifier	printf		2305126	0					
ANR	2306113	ArgumentList	"""PAGE-WIDTH %d\\r\\n"""		2305126	1					
ANR	2306114	Argument	"""PAGE-WIDTH %d\\r\\n"""		2305126	0					
ANR	2306115	PrimaryExpression	"""PAGE-WIDTH %d\\r\\n"""		2305126	0					
ANR	2306116	Argument	header -> cupsWidth		2305126	1					
ANR	2306117	PtrMemberAccess	header -> cupsWidth		2305126	0					
ANR	2306118	Identifier	header		2305126	0					
ANR	2306119	Identifier	cupsWidth		2305126	1					
ANR	2306120	ExpressionStatement	"printf ( ""PAGE-HEIGHT %d\\r\\n"" , header -> cupsWidth )"	348:1:9863:9910	2305126	30	True				
ANR	2306121	CallExpression	"printf ( ""PAGE-HEIGHT %d\\r\\n"" , header -> cupsWidth )"		2305126	0					
ANR	2306122	Callee	printf		2305126	0					
ANR	2306123	Identifier	printf		2305126	0					
ANR	2306124	ArgumentList	"""PAGE-HEIGHT %d\\r\\n"""		2305126	1					
ANR	2306125	Argument	"""PAGE-HEIGHT %d\\r\\n"""		2305126	0					
ANR	2306126	PrimaryExpression	"""PAGE-HEIGHT %d\\r\\n"""		2305126	0					
ANR	2306127	Argument	header -> cupsWidth		2305126	1					
ANR	2306128	PtrMemberAccess	header -> cupsWidth		2305126	0					
ANR	2306129	Identifier	header		2305126	0					
ANR	2306130	Identifier	cupsWidth		2305126	1					
ANR	2306131	BreakStatement	break ;	349:8:9920:9925	2305126	31	True				
ANR	2306132	Label	case INTELLITECH_PCL :	351:4:9932:9953	2305126	32	True				
ANR	2306133	Identifier	INTELLITECH_PCL		2305126	0					
ANR	2306134	ExpressionStatement	"printf ( ""\\033&l6D\\033&k12H"" )"	356:1:10003:10030	2305126	33	True				
ANR	2306135	CallExpression	"printf ( ""\\033&l6D\\033&k12H"" )"		2305126	0					
ANR	2306136	Callee	printf		2305126	0					
ANR	2306137	Identifier	printf		2305126	0					
ANR	2306138	ArgumentList	"""\\033&l6D\\033&k12H"""		2305126	1					
ANR	2306139	Argument	"""\\033&l6D\\033&k12H"""		2305126	0					
ANR	2306140	PrimaryExpression	"""\\033&l6D\\033&k12H"""		2305126	0					
ANR	2306141	ExpressionStatement	"printf ( ""\\033&l0O"" )"	357:1:10057:10075	2305126	34	True				
ANR	2306142	CallExpression	"printf ( ""\\033&l0O"" )"		2305126	0					
ANR	2306143	Callee	printf		2305126	0					
ANR	2306144	Identifier	printf		2305126	0					
ANR	2306145	ArgumentList	"""\\033&l0O"""		2305126	1					
ANR	2306146	Argument	"""\\033&l0O"""		2305126	0					
ANR	2306147	PrimaryExpression	"""\\033&l0O"""		2305126	0					
ANR	2306148	SwitchStatement	switch ( header -> PageSize [ 1 ] )		2305126	35					
ANR	2306149	Condition	header -> PageSize [ 1 ]	359:9:10119:10137	2305126	0	True				
ANR	2306150	ArrayIndexing	header -> PageSize [ 1 ]		2305126	0					
ANR	2306151	PtrMemberAccess	header -> PageSize		2305126	0					
ANR	2306152	Identifier	header		2305126	0					
ANR	2306153	Identifier	PageSize		2305126	1					
ANR	2306154	PrimaryExpression	1		2305126	1					
ANR	2306155	CompoundStatement		191:1:5961:5961	2305126	1					
ANR	2306156	Label	case 540 :	361:3:10146:10155	2305126	0	True				
ANR	2306157	ExpressionStatement	"printf ( ""\\033&l80A"" )"	362:14:10194:10213	2305126	1	True				
ANR	2306158	CallExpression	"printf ( ""\\033&l80A"" )"		2305126	0					
ANR	2306159	Callee	printf		2305126	0					
ANR	2306160	Identifier	printf		2305126	0					
ANR	2306161	ArgumentList	"""\\033&l80A"""		2305126	1					
ANR	2306162	Argument	"""\\033&l80A"""		2305126	0					
ANR	2306163	PrimaryExpression	"""\\033&l80A"""		2305126	0					
ANR	2306164	BreakStatement	break ;	363:7:10242:10247	2305126	2	True				
ANR	2306165	Label	case 624 :	365:3:10253:10262	2305126	3	True				
ANR	2306166	ExpressionStatement	"printf ( ""\\033&l90A"" )"	366:14:10296:10315	2305126	4	True				
ANR	2306167	CallExpression	"printf ( ""\\033&l90A"" )"		2305126	0					
ANR	2306168	Callee	printf		2305126	0					
ANR	2306169	Identifier	printf		2305126	0					
ANR	2306170	ArgumentList	"""\\033&l90A"""		2305126	1					
ANR	2306171	Argument	"""\\033&l90A"""		2305126	0					
ANR	2306172	PrimaryExpression	"""\\033&l90A"""		2305126	0					
ANR	2306173	BreakStatement	break ;	367:7:10344:10349	2305126	5	True				
ANR	2306174	Label	case 649 :	369:3:10355:10364	2305126	6	True				
ANR	2306175	ExpressionStatement	"printf ( ""\\033&l91A"" )"	370:14:10398:10417	2305126	7	True				
ANR	2306176	CallExpression	"printf ( ""\\033&l91A"" )"		2305126	0					
ANR	2306177	Callee	printf		2305126	0					
ANR	2306178	Identifier	printf		2305126	0					
ANR	2306179	ArgumentList	"""\\033&l91A"""		2305126	1					
ANR	2306180	Argument	"""\\033&l91A"""		2305126	0					
ANR	2306181	PrimaryExpression	"""\\033&l91A"""		2305126	0					
ANR	2306182	BreakStatement	break ;	371:7:10446:10451	2305126	8	True				
ANR	2306183	Label	case 684 :	373:3:10457:10466	2305126	9	True				
ANR	2306184	ExpressionStatement	"printf ( ""\\033&l81A"" )"	374:14:10504:10523	2305126	10	True				
ANR	2306185	CallExpression	"printf ( ""\\033&l81A"" )"		2305126	0					
ANR	2306186	Callee	printf		2305126	0					
ANR	2306187	Identifier	printf		2305126	0					
ANR	2306188	ArgumentList	"""\\033&l81A"""		2305126	1					
ANR	2306189	Argument	"""\\033&l81A"""		2305126	0					
ANR	2306190	PrimaryExpression	"""\\033&l81A"""		2305126	0					
ANR	2306191	BreakStatement	break ;	375:7:10552:10557	2305126	11	True				
ANR	2306192	Label	case 756 :	377:3:10563:10572	2305126	12	True				
ANR	2306193	ExpressionStatement	"printf ( ""\\033&l1A"" )"	378:14:10604:10622	2305126	13	True				
ANR	2306194	CallExpression	"printf ( ""\\033&l1A"" )"		2305126	0					
ANR	2306195	Callee	printf		2305126	0					
ANR	2306196	Identifier	printf		2305126	0					
ANR	2306197	ArgumentList	"""\\033&l1A"""		2305126	1					
ANR	2306198	Argument	"""\\033&l1A"""		2305126	0					
ANR	2306199	PrimaryExpression	"""\\033&l1A"""		2305126	0					
ANR	2306200	BreakStatement	break ;	379:7:10651:10656	2305126	14	True				
ANR	2306201	Label	case 792 :	381:3:10662:10671	2305126	15	True				
ANR	2306202	ExpressionStatement	"printf ( ""\\033&l2A"" )"	382:14:10700:10718	2305126	16	True				
ANR	2306203	CallExpression	"printf ( ""\\033&l2A"" )"		2305126	0					
ANR	2306204	Callee	printf		2305126	0					
ANR	2306205	Identifier	printf		2305126	0					
ANR	2306206	ArgumentList	"""\\033&l2A"""		2305126	1					
ANR	2306207	Argument	"""\\033&l2A"""		2305126	0					
ANR	2306208	PrimaryExpression	"""\\033&l2A"""		2305126	0					
ANR	2306209	BreakStatement	break ;	383:7:10747:10752	2305126	17	True				
ANR	2306210	Label	case 842 :	385:3:10758:10767	2305126	18	True				
ANR	2306211	ExpressionStatement	"printf ( ""\\033&l26A"" )"	386:14:10792:10811	2305126	19	True				
ANR	2306212	CallExpression	"printf ( ""\\033&l26A"" )"		2305126	0					
ANR	2306213	Callee	printf		2305126	0					
ANR	2306214	Identifier	printf		2305126	0					
ANR	2306215	ArgumentList	"""\\033&l26A"""		2305126	1					
ANR	2306216	Argument	"""\\033&l26A"""		2305126	0					
ANR	2306217	PrimaryExpression	"""\\033&l26A"""		2305126	0					
ANR	2306218	BreakStatement	break ;	387:7:10840:10845	2305126	20	True				
ANR	2306219	Label	case 1008 :	389:3:10851:10861	2305126	21	True				
ANR	2306220	ExpressionStatement	"printf ( ""\\033&l3A"" )"	390:14:10889:10907	2305126	22	True				
ANR	2306221	CallExpression	"printf ( ""\\033&l3A"" )"		2305126	0					
ANR	2306222	Callee	printf		2305126	0					
ANR	2306223	Identifier	printf		2305126	0					
ANR	2306224	ArgumentList	"""\\033&l3A"""		2305126	1					
ANR	2306225	Argument	"""\\033&l3A"""		2305126	0					
ANR	2306226	PrimaryExpression	"""\\033&l3A"""		2305126	0					
ANR	2306227	BreakStatement	break ;	391:7:10936:10941	2305126	23	True				
ANR	2306228	Label	default :	393:10:10954:10962	2305126	24	True				
ANR	2306229	Identifier	default		2305126	0					
ANR	2306230	ExpressionStatement	"printf ( ""\\033!f%dZ"" , header -> PageSize [ 1 ] * 300 / 72 )"	394:7:10989:11040	2305126	25	True				
ANR	2306231	CallExpression	"printf ( ""\\033!f%dZ"" , header -> PageSize [ 1 ] * 300 / 72 )"		2305126	0					
ANR	2306232	Callee	printf		2305126	0					
ANR	2306233	Identifier	printf		2305126	0					
ANR	2306234	ArgumentList	"""\\033!f%dZ"""		2305126	1					
ANR	2306235	Argument	"""\\033!f%dZ"""		2305126	0					
ANR	2306236	PrimaryExpression	"""\\033!f%dZ"""		2305126	0					
ANR	2306237	Argument	header -> PageSize [ 1 ] * 300 / 72		2305126	1					
ANR	2306238	MultiplicativeExpression	header -> PageSize [ 1 ] * 300 / 72		2305126	0		*			
ANR	2306239	ArrayIndexing	header -> PageSize [ 1 ]		2305126	0					
ANR	2306240	PtrMemberAccess	header -> PageSize		2305126	0					
ANR	2306241	Identifier	header		2305126	0					
ANR	2306242	Identifier	PageSize		2305126	1					
ANR	2306243	PrimaryExpression	1		2305126	1					
ANR	2306244	MultiplicativeExpression	300 / 72		2305126	1		/			
ANR	2306245	PrimaryExpression	300		2305126	0					
ANR	2306246	PrimaryExpression	72		2305126	1					
ANR	2306247	BreakStatement	break ;	395:7:11049:11054	2305126	26	True				
ANR	2306248	ExpressionStatement	"printf ( ""\\033&l%dP"" , header -> PageSize [ 1 ] / 12 )"	398:1:11061:11144	2305126	36	True				
ANR	2306249	CallExpression	"printf ( ""\\033&l%dP"" , header -> PageSize [ 1 ] / 12 )"		2305126	0					
ANR	2306250	Callee	printf		2305126	0					
ANR	2306251	Identifier	printf		2305126	0					
ANR	2306252	ArgumentList	"""\\033&l%dP"""		2305126	1					
ANR	2306253	Argument	"""\\033&l%dP"""		2305126	0					
ANR	2306254	PrimaryExpression	"""\\033&l%dP"""		2305126	0					
ANR	2306255	Argument	header -> PageSize [ 1 ] / 12		2305126	1					
ANR	2306256	MultiplicativeExpression	header -> PageSize [ 1 ] / 12		2305126	0		/			
ANR	2306257	ArrayIndexing	header -> PageSize [ 1 ]		2305126	0					
ANR	2306258	PtrMemberAccess	header -> PageSize		2305126	0					
ANR	2306259	Identifier	header		2305126	0					
ANR	2306260	Identifier	PageSize		2305126	1					
ANR	2306261	PrimaryExpression	1		2305126	1					
ANR	2306262	PrimaryExpression	12		2305126	1					
ANR	2306263	ExpressionStatement	"printf ( ""\\033&l0E"" )"	400:1:11147:11165	2305126	37	True				
ANR	2306264	CallExpression	"printf ( ""\\033&l0E"" )"		2305126	0					
ANR	2306265	Callee	printf		2305126	0					
ANR	2306266	Identifier	printf		2305126	0					
ANR	2306267	ArgumentList	"""\\033&l0E"""		2305126	1					
ANR	2306268	Argument	"""\\033&l0E"""		2305126	0					
ANR	2306269	PrimaryExpression	"""\\033&l0E"""		2305126	0					
ANR	2306270	ExpressionStatement	"printf ( ""\\033&l%dX"" , header -> NumCopies )"	401:8:11202:11240	2305126	38	True				
ANR	2306271	CallExpression	"printf ( ""\\033&l%dX"" , header -> NumCopies )"		2305126	0					
ANR	2306272	Callee	printf		2305126	0					
ANR	2306273	Identifier	printf		2305126	0					
ANR	2306274	ArgumentList	"""\\033&l%dX"""		2305126	1					
ANR	2306275	Argument	"""\\033&l%dX"""		2305126	0					
ANR	2306276	PrimaryExpression	"""\\033&l%dX"""		2305126	0					
ANR	2306277	Argument	header -> NumCopies		2305126	1					
ANR	2306278	PtrMemberAccess	header -> NumCopies		2305126	0					
ANR	2306279	Identifier	header		2305126	0					
ANR	2306280	Identifier	NumCopies		2305126	1					
ANR	2306281	ExpressionStatement	"printf ( ""\\033&l0L"" )"	403:8:11279:11297	2305126	39	True				
ANR	2306282	CallExpression	"printf ( ""\\033&l0L"" )"		2305126	0					
ANR	2306283	Callee	printf		2305126	0					
ANR	2306284	Identifier	printf		2305126	0					
ANR	2306285	ArgumentList	"""\\033&l0L"""		2305126	1					
ANR	2306286	Argument	"""\\033&l0L"""		2305126	0					
ANR	2306287	PrimaryExpression	"""\\033&l0L"""		2305126	0					
ANR	2306288	IfStatement	if ( Page == 1 )		2305126	40					
ANR	2306289	Condition	Page == 1	409:5:11381:11389	2305126	0	True				
ANR	2306290	EqualityExpression	Page == 1		2305126	0		==			
ANR	2306291	Identifier	Page		2305126	0					
ANR	2306292	PrimaryExpression	1		2305126	1					
ANR	2306293	CompoundStatement		241:1:7213:7213	2305126	1					
ANR	2306294	IfStatement	if ( header -> cupsRowFeed )		2305126	0					
ANR	2306295	Condition	header -> cupsRowFeed	411:14:11409:11427	2305126	0	True				
ANR	2306296	PtrMemberAccess	header -> cupsRowFeed		2305126	0					
ANR	2306297	Identifier	header		2305126	0					
ANR	2306298	Identifier	cupsRowFeed		2305126	1					
ANR	2306299	ExpressionStatement	"printf ( ""\\033!p%dS"" , header -> cupsRowFeed )"	412:5:11453:11493	2305126	1	True				
ANR	2306300	CallExpression	"printf ( ""\\033!p%dS"" , header -> cupsRowFeed )"		2305126	0					
ANR	2306301	Callee	printf		2305126	0					
ANR	2306302	Identifier	printf		2305126	0					
ANR	2306303	ArgumentList	"""\\033!p%dS"""		2305126	1					
ANR	2306304	Argument	"""\\033!p%dS"""		2305126	0					
ANR	2306305	PrimaryExpression	"""\\033!p%dS"""		2305126	0					
ANR	2306306	Argument	header -> cupsRowFeed		2305126	1					
ANR	2306307	PtrMemberAccess	header -> cupsRowFeed		2305126	0					
ANR	2306308	Identifier	header		2305126	0					
ANR	2306309	Identifier	cupsRowFeed		2305126	1					
ANR	2306310	IfStatement	if ( header -> cupsCompression != ~0 )		2305126	1					
ANR	2306311	Condition	header -> cupsCompression != ~0	414:14:11510:11538	2305126	0	True				
ANR	2306312	EqualityExpression	header -> cupsCompression != ~0		2305126	0		!=			
ANR	2306313	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2306314	Identifier	header		2305126	0					
ANR	2306315	Identifier	cupsCompression		2305126	1					
ANR	2306316	Identifier	~0		2305126	1					
ANR	2306317	ExpressionStatement	"printf ( ""\\033&d%dA"" , 30 * header -> cupsCompression / 100 - 15 )"	416:5:11574:11634	2305126	1	True				
ANR	2306318	CallExpression	"printf ( ""\\033&d%dA"" , 30 * header -> cupsCompression / 100 - 15 )"		2305126	0					
ANR	2306319	Callee	printf		2305126	0					
ANR	2306320	Identifier	printf		2305126	0					
ANR	2306321	ArgumentList	"""\\033&d%dA"""		2305126	1					
ANR	2306322	Argument	"""\\033&d%dA"""		2305126	0					
ANR	2306323	PrimaryExpression	"""\\033&d%dA"""		2305126	0					
ANR	2306324	Argument	30 * header -> cupsCompression / 100 - 15		2305126	1					
ANR	2306325	AdditiveExpression	30 * header -> cupsCompression / 100 - 15		2305126	0		-			
ANR	2306326	MultiplicativeExpression	30 * header -> cupsCompression / 100		2305126	0		*			
ANR	2306327	PrimaryExpression	30		2305126	0					
ANR	2306328	MultiplicativeExpression	header -> cupsCompression / 100		2305126	1		/			
ANR	2306329	PtrMemberAccess	header -> cupsCompression		2305126	0					
ANR	2306330	Identifier	header		2305126	0					
ANR	2306331	Identifier	cupsCompression		2305126	1					
ANR	2306332	PrimaryExpression	100		2305126	1					
ANR	2306333	PrimaryExpression	15		2305126	1					
ANR	2306334	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" ) ) != NULL )"		2305126	2					
ANR	2306335	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" ) ) != NULL"	418:7:11644:11701	2305126	0	True				
ANR	2306336	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" ) ) != NULL"		2305126	0		!=			
ANR	2306337	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" )"		2305126	0		=			
ANR	2306338	Identifier	choice		2305126	0					
ANR	2306339	CallExpression	"ppdFindMarkedChoice ( ppd , ""inPrintMode"" )"		2305126	1					
ANR	2306340	Callee	ppdFindMarkedChoice		2305126	0					
ANR	2306341	Identifier	ppdFindMarkedChoice		2305126	0					
ANR	2306342	ArgumentList	ppd		2305126	1					
ANR	2306343	Argument	ppd		2305126	0					
ANR	2306344	Identifier	ppd		2305126	0					
ANR	2306345	Argument	"""inPrintMode"""		2305126	1					
ANR	2306346	PrimaryExpression	"""inPrintMode"""		2305126	0					
ANR	2306347	Identifier	NULL		2305126	1					
ANR	2306348	CompoundStatement		250:3:7527:7527	2305126	1					
ANR	2306349	IfStatement	"if ( ! strcmp ( choice -> choice , ""Standard"" ) )"		2305126	0					
ANR	2306350	Condition	"! strcmp ( choice -> choice , ""Standard"" )"	420:9:11718:11752	2305126	0	True				
ANR	2306351	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Standard"" )"		2305126	0					
ANR	2306352	UnaryOperator	!		2305126	0					
ANR	2306353	CallExpression	"strcmp ( choice -> choice , ""Standard"" )"		2305126	1					
ANR	2306354	Callee	strcmp		2305126	0					
ANR	2306355	Identifier	strcmp		2305126	0					
ANR	2306356	ArgumentList	choice -> choice		2305126	1					
ANR	2306357	Argument	choice -> choice		2305126	0					
ANR	2306358	PtrMemberAccess	choice -> choice		2305126	0					
ANR	2306359	Identifier	choice		2305126	0					
ANR	2306360	Identifier	choice		2305126	1					
ANR	2306361	Argument	"""Standard"""		2305126	1					
ANR	2306362	PrimaryExpression	"""Standard"""		2305126	0					
ANR	2306363	ExpressionStatement	"fputs ( ""\\033!p0M"" , stdout )"	421:7:11762:11787	2305126	1	True				
ANR	2306364	CallExpression	"fputs ( ""\\033!p0M"" , stdout )"		2305126	0					
ANR	2306365	Callee	fputs		2305126	0					
ANR	2306366	Identifier	fputs		2305126	0					
ANR	2306367	ArgumentList	"""\\033!p0M"""		2305126	1					
ANR	2306368	Argument	"""\\033!p0M"""		2305126	0					
ANR	2306369	PrimaryExpression	"""\\033!p0M"""		2305126	0					
ANR	2306370	Argument	stdout		2305126	1					
ANR	2306371	Identifier	stdout		2305126	0					
ANR	2306372	ElseStatement	else		2305126	0					
ANR	2306373	IfStatement	"if ( ! strcmp ( choice -> choice , ""Tear"" ) )"		2305126	0					
ANR	2306374	Condition	"! strcmp ( choice -> choice , ""Tear"" )"	422:14:11803:11833	2305126	0	True				
ANR	2306375	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Tear"" )"		2305126	0					
ANR	2306376	UnaryOperator	!		2305126	0					
ANR	2306377	CallExpression	"strcmp ( choice -> choice , ""Tear"" )"		2305126	1					
ANR	2306378	Callee	strcmp		2305126	0					
ANR	2306379	Identifier	strcmp		2305126	0					
ANR	2306380	ArgumentList	choice -> choice		2305126	1					
ANR	2306381	Argument	choice -> choice		2305126	0					
ANR	2306382	PtrMemberAccess	choice -> choice		2305126	0					
ANR	2306383	Identifier	choice		2305126	0					
ANR	2306384	Identifier	choice		2305126	1					
ANR	2306385	Argument	"""Tear"""		2305126	1					
ANR	2306386	PrimaryExpression	"""Tear"""		2305126	0					
ANR	2306387	CompoundStatement		254:5:7661:7661	2305126	1					
ANR	2306388	ExpressionStatement	"fputs ( ""\\033!p1M"" , stdout )"	424:7:11850:11875	2305126	0	True				
ANR	2306389	CallExpression	"fputs ( ""\\033!p1M"" , stdout )"		2305126	0					
ANR	2306390	Callee	fputs		2305126	0					
ANR	2306391	Identifier	fputs		2305126	0					
ANR	2306392	ArgumentList	"""\\033!p1M"""		2305126	1					
ANR	2306393	Argument	"""\\033!p1M"""		2305126	0					
ANR	2306394	PrimaryExpression	"""\\033!p1M"""		2305126	0					
ANR	2306395	Argument	stdout		2305126	1					
ANR	2306396	Identifier	stdout		2305126	0					
ANR	2306397	IfStatement	if ( header -> cupsRowCount )		2305126	1					
ANR	2306398	Condition	header -> cupsRowCount	426:18:11896:11915	2305126	0	True				
ANR	2306399	PtrMemberAccess	header -> cupsRowCount		2305126	0					
ANR	2306400	Identifier	header		2305126	0					
ANR	2306401	Identifier	cupsRowCount		2305126	1					
ANR	2306402	ExpressionStatement	"printf ( ""\\033!n%dT"" , header -> cupsRowCount )"	427:2:11941:11982	2305126	1	True				
ANR	2306403	CallExpression	"printf ( ""\\033!n%dT"" , header -> cupsRowCount )"		2305126	0					
ANR	2306404	Callee	printf		2305126	0					
ANR	2306405	Identifier	printf		2305126	0					
ANR	2306406	ArgumentList	"""\\033!n%dT"""		2305126	1					
ANR	2306407	Argument	"""\\033!n%dT"""		2305126	0					
ANR	2306408	PrimaryExpression	"""\\033!n%dT"""		2305126	0					
ANR	2306409	Argument	header -> cupsRowCount		2305126	1					
ANR	2306410	PtrMemberAccess	header -> cupsRowCount		2305126	0					
ANR	2306411	Identifier	header		2305126	0					
ANR	2306412	Identifier	cupsRowCount		2305126	1					
ANR	2306413	ElseStatement	else		2305126	0					
ANR	2306414	CompoundStatement		261:5:7833:7833	2305126	0					
ANR	2306415	ExpressionStatement	"fputs ( ""\\033!p2M"" , stdout )"	431:7:12022:12047	2305126	0	True				
ANR	2306416	CallExpression	"fputs ( ""\\033!p2M"" , stdout )"		2305126	0					
ANR	2306417	Callee	fputs		2305126	0					
ANR	2306418	Identifier	fputs		2305126	0					
ANR	2306419	ArgumentList	"""\\033!p2M"""		2305126	1					
ANR	2306420	Argument	"""\\033!p2M"""		2305126	0					
ANR	2306421	PrimaryExpression	"""\\033!p2M"""		2305126	0					
ANR	2306422	Argument	stdout		2305126	1					
ANR	2306423	Identifier	stdout		2305126	0					
ANR	2306424	IfStatement	if ( header -> cupsRowStep )		2305126	1					
ANR	2306425	Condition	header -> cupsRowStep	433:18:12068:12086	2305126	0	True				
ANR	2306426	PtrMemberAccess	header -> cupsRowStep		2305126	0					
ANR	2306427	Identifier	header		2305126	0					
ANR	2306428	Identifier	cupsRowStep		2305126	1					
ANR	2306429	ExpressionStatement	"printf ( ""\\033!n%dC"" , header -> cupsRowStep )"	434:2:12111:12151	2305126	1	True				
ANR	2306430	CallExpression	"printf ( ""\\033!n%dC"" , header -> cupsRowStep )"		2305126	0					
ANR	2306431	Callee	printf		2305126	0					
ANR	2306432	Identifier	printf		2305126	0					
ANR	2306433	ArgumentList	"""\\033!n%dC"""		2305126	1					
ANR	2306434	Argument	"""\\033!n%dC"""		2305126	0					
ANR	2306435	PrimaryExpression	"""\\033!n%dC"""		2305126	0					
ANR	2306436	Argument	header -> cupsRowStep		2305126	1					
ANR	2306437	PtrMemberAccess	header -> cupsRowStep		2305126	0					
ANR	2306438	Identifier	header		2305126	0					
ANR	2306439	Identifier	cupsRowStep		2305126	1					
ANR	2306440	ExpressionStatement	"printf ( ""\\033*t%dR"" , header -> HWResolution [ 0 ] )"	443:1:12220:12264	2305126	41	True				
ANR	2306441	CallExpression	"printf ( ""\\033*t%dR"" , header -> HWResolution [ 0 ] )"		2305126	0					
ANR	2306442	Callee	printf		2305126	0					
ANR	2306443	Identifier	printf		2305126	0					
ANR	2306444	ArgumentList	"""\\033*t%dR"""		2305126	1					
ANR	2306445	Argument	"""\\033*t%dR"""		2305126	0					
ANR	2306446	PrimaryExpression	"""\\033*t%dR"""		2305126	0					
ANR	2306447	Argument	header -> HWResolution [ 0 ]		2305126	1					
ANR	2306448	ArrayIndexing	header -> HWResolution [ 0 ]		2305126	0					
ANR	2306449	PtrMemberAccess	header -> HWResolution		2305126	0					
ANR	2306450	Identifier	header		2305126	0					
ANR	2306451	Identifier	HWResolution		2305126	1					
ANR	2306452	PrimaryExpression	0		2305126	1					
ANR	2306453	ExpressionStatement	"printf ( ""\\033*r%dS"" , header -> cupsWidth )"	446:1:12294:12332	2305126	42	True				
ANR	2306454	CallExpression	"printf ( ""\\033*r%dS"" , header -> cupsWidth )"		2305126	0					
ANR	2306455	Callee	printf		2305126	0					
ANR	2306456	Identifier	printf		2305126	0					
ANR	2306457	ArgumentList	"""\\033*r%dS"""		2305126	1					
ANR	2306458	Argument	"""\\033*r%dS"""		2305126	0					
ANR	2306459	PrimaryExpression	"""\\033*r%dS"""		2305126	0					
ANR	2306460	Argument	header -> cupsWidth		2305126	1					
ANR	2306461	PtrMemberAccess	header -> cupsWidth		2305126	0					
ANR	2306462	Identifier	header		2305126	0					
ANR	2306463	Identifier	cupsWidth		2305126	1					
ANR	2306464	ExpressionStatement	"printf ( ""\\033*r%dT"" , header -> cupsHeight )"	448:1:12356:12395	2305126	43	True				
ANR	2306465	CallExpression	"printf ( ""\\033*r%dT"" , header -> cupsHeight )"		2305126	0					
ANR	2306466	Callee	printf		2305126	0					
ANR	2306467	Identifier	printf		2305126	0					
ANR	2306468	ArgumentList	"""\\033*r%dT"""		2305126	1					
ANR	2306469	Argument	"""\\033*r%dT"""		2305126	0					
ANR	2306470	PrimaryExpression	"""\\033*r%dT"""		2305126	0					
ANR	2306471	Argument	header -> cupsHeight		2305126	1					
ANR	2306472	PtrMemberAccess	header -> cupsHeight		2305126	0					
ANR	2306473	Identifier	header		2305126	0					
ANR	2306474	Identifier	cupsHeight		2305126	1					
ANR	2306475	ExpressionStatement	"printf ( ""\\033&a0H"" )"	451:1:12421:12439	2305126	44	True				
ANR	2306476	CallExpression	"printf ( ""\\033&a0H"" )"		2305126	0					
ANR	2306477	Callee	printf		2305126	0					
ANR	2306478	Identifier	printf		2305126	0					
ANR	2306479	ArgumentList	"""\\033&a0H"""		2305126	1					
ANR	2306480	Argument	"""\\033&a0H"""		2305126	0					
ANR	2306481	PrimaryExpression	"""\\033&a0H"""		2305126	0					
ANR	2306482	ExpressionStatement	"printf ( ""\\033&a0V"" )"	452:1:12473:12491	2305126	45	True				
ANR	2306483	CallExpression	"printf ( ""\\033&a0V"" )"		2305126	0					
ANR	2306484	Callee	printf		2305126	0					
ANR	2306485	Identifier	printf		2305126	0					
ANR	2306486	ArgumentList	"""\\033&a0V"""		2305126	1					
ANR	2306487	Argument	"""\\033&a0V"""		2305126	0					
ANR	2306488	PrimaryExpression	"""\\033&a0V"""		2305126	0					
ANR	2306489	ExpressionStatement	"printf ( ""\\033*r1A"" )"	453:8:12530:12548	2305126	46	True				
ANR	2306490	CallExpression	"printf ( ""\\033*r1A"" )"		2305126	0					
ANR	2306491	Callee	printf		2305126	0					
ANR	2306492	Identifier	printf		2305126	0					
ANR	2306493	ArgumentList	"""\\033*r1A"""		2305126	1					
ANR	2306494	Argument	"""\\033*r1A"""		2305126	0					
ANR	2306495	PrimaryExpression	"""\\033*r1A"""		2305126	0					
ANR	2306496	ExpressionStatement	"printf ( ""\\033*b3M"" )"	454:8:12580:12598	2305126	47	True				
ANR	2306497	CallExpression	"printf ( ""\\033*b3M"" )"		2305126	0					
ANR	2306498	Callee	printf		2305126	0					
ANR	2306499	Identifier	printf		2305126	0					
ANR	2306500	ArgumentList	"""\\033*b3M"""		2305126	1					
ANR	2306501	Argument	"""\\033*b3M"""		2305126	0					
ANR	2306502	PrimaryExpression	"""\\033*b3M"""		2305126	0					
ANR	2306503	ExpressionStatement	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )	460:1:12682:12735	2305126	48	True				
ANR	2306504	AssignmentExpression	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )		2305126	0		=			
ANR	2306505	Identifier	CompBuffer		2305126	0					
ANR	2306506	CallExpression	malloc ( 2 * header -> cupsBytesPerLine + 1 )		2305126	1					
ANR	2306507	Callee	malloc		2305126	0					
ANR	2306508	Identifier	malloc		2305126	0					
ANR	2306509	ArgumentList	2 * header -> cupsBytesPerLine + 1		2305126	1					
ANR	2306510	Argument	2 * header -> cupsBytesPerLine + 1		2305126	0					
ANR	2306511	AdditiveExpression	2 * header -> cupsBytesPerLine + 1		2305126	0		+			
ANR	2306512	MultiplicativeExpression	2 * header -> cupsBytesPerLine		2305126	0		*			
ANR	2306513	PrimaryExpression	2		2305126	0					
ANR	2306514	PtrMemberAccess	header -> cupsBytesPerLine		2305126	1					
ANR	2306515	Identifier	header		2305126	0					
ANR	2306516	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306517	PrimaryExpression	1		2305126	1					
ANR	2306518	ExpressionStatement	LastBuffer = malloc ( header -> cupsBytesPerLine )	461:1:12738:12783	2305126	49	True				
ANR	2306519	AssignmentExpression	LastBuffer = malloc ( header -> cupsBytesPerLine )		2305126	0		=			
ANR	2306520	Identifier	LastBuffer		2305126	0					
ANR	2306521	CallExpression	malloc ( header -> cupsBytesPerLine )		2305126	1					
ANR	2306522	Callee	malloc		2305126	0					
ANR	2306523	Identifier	malloc		2305126	0					
ANR	2306524	ArgumentList	header -> cupsBytesPerLine		2305126	1					
ANR	2306525	Argument	header -> cupsBytesPerLine		2305126	0					
ANR	2306526	PtrMemberAccess	header -> cupsBytesPerLine		2305126	0					
ANR	2306527	Identifier	header		2305126	0					
ANR	2306528	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306529	ExpressionStatement	LastSet = 0	462:1:12786:12800	2305126	50	True				
ANR	2306530	AssignmentExpression	LastSet = 0		2305126	0		=			
ANR	2306531	Identifier	LastSet		2305126	0					
ANR	2306532	PrimaryExpression	0		2305126	1					
ANR	2306533	BreakStatement	break ;	463:8:12810:12815	2305126	51	True				
ANR	2306534	ExpressionStatement	Buffer = malloc ( header -> cupsBytesPerLine )	470:2:12880:12921	2305126	43	True				
ANR	2306535	AssignmentExpression	Buffer = malloc ( header -> cupsBytesPerLine )		2305126	0		=			
ANR	2306536	Identifier	Buffer		2305126	0					
ANR	2306537	CallExpression	malloc ( header -> cupsBytesPerLine )		2305126	1					
ANR	2306538	Callee	malloc		2305126	0					
ANR	2306539	Identifier	malloc		2305126	0					
ANR	2306540	ArgumentList	header -> cupsBytesPerLine		2305126	1					
ANR	2306541	Argument	header -> cupsBytesPerLine		2305126	0					
ANR	2306542	PtrMemberAccess	header -> cupsBytesPerLine		2305126	0					
ANR	2306543	Identifier	header		2305126	0					
ANR	2306544	Identifier	cupsBytesPerLine		2305126	1					
ANR	2306545	ExpressionStatement	Feed = 0	471:2:12925:12935	2305126	44	True				
ANR	2306546	AssignmentExpression	Feed = 0		2305126	0		=			
ANR	2306547	Identifier	Feed		2305126	0					
ANR	2306548	PrimaryExpression	0		2305126	1					
ANR	2306549	ReturnType	void		2305126	1					
ANR	2306550	Identifier	StartPage		2305126	2					
ANR	2306551	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header"		2305126	3					
ANR	2306552	Parameter	ppd_file_t * ppd	168:10:4074:4096	2305126	0	True				
ANR	2306553	ParameterType	ppd_file_t *		2305126	0					
ANR	2306554	Identifier	ppd		2305126	1					
ANR	2306555	Parameter	cups_page_header2_t * header	169:10:4128:4154	2305126	1	True				
ANR	2306556	ParameterType	cups_page_header2_t *		2305126	0					
ANR	2306557	Identifier	header		2305126	1					
ANR	2306558	CFGEntryNode	ENTRY		2305126		True				
ANR	2306559	CFGExitNode	EXIT		2305126		True				
ANR	2306560	Symbol	stdout		2305126						
ANR	2306561	Symbol	header -> MediaType		2305126						
ANR	2306562	Symbol	Page		2305126						
ANR	2306563	Symbol	header -> cupsHeight		2305126						
ANR	2306564	Symbol	header -> MediaClass		2305126						
ANR	2306565	Symbol	header -> Separations		2305126						
ANR	2306566	Symbol	header -> NegativePrint		2305126						
ANR	2306567	Symbol	header -> Tumble		2305126						
ANR	2306568	Symbol	Feed		2305126						
ANR	2306569	Symbol	ModelNumber		2305126						
ANR	2306570	Symbol	strcmp		2305126						
ANR	2306571	Symbol	val		2305126						
ANR	2306572	Symbol	Buffer		2305126						
ANR	2306573	Symbol	header -> Collate		2305126						
ANR	2306574	Symbol	NULL		2305126						
ANR	2306575	Symbol	header -> cupsWidth		2305126						
ANR	2306576	Symbol	LastSet		2305126						
ANR	2306577	Symbol	header -> cupsRowFeed		2305126						
ANR	2306578	Symbol	stderr		2305126						
ANR	2306579	Symbol	* header		2305126						
ANR	2306580	Symbol	header -> cupsCompression		2305126						
ANR	2306581	Symbol	* header -> Margins		2305126						
ANR	2306582	Symbol	header		2305126						
ANR	2306583	Symbol	header -> CutMedia		2305126						
ANR	2306584	Symbol	header -> OutputFaceUp		2305126						
ANR	2306585	Symbol	header -> PageSize		2305126						
ANR	2306586	Symbol	header -> cupsBitsPerColor		2305126						
ANR	2306587	Symbol	header -> cupsMediaType		2305126						
ANR	2306588	Symbol	header -> AdvanceDistance		2305126						
ANR	2306589	Symbol	header -> MediaPosition		2305126						
ANR	2306590	Symbol	header -> cupsRowCount		2305126						
ANR	2306591	Symbol	* choice		2305126						
ANR	2306592	Symbol	* header -> ImagingBoundingBox		2305126						
ANR	2306593	Symbol	header -> cupsRowStep		2305126						
ANR	2306594	Symbol	header -> MediaWeight		2305126						
ANR	2306595	Symbol	ppdFindMarkedChoice		2305126						
ANR	2306596	Symbol	header -> LeadingEdge		2305126						
ANR	2306597	Symbol	* header -> PageSize		2305126						
ANR	2306598	Symbol	header -> Orientation		2305126						
ANR	2306599	Symbol	header -> HWResolution		2305126						
ANR	2306600	Symbol	header -> NumCopies		2305126						
ANR	2306601	Symbol	header -> cupsBitsPerPixel		2305126						
ANR	2306602	Symbol	header -> cupsBytesPerLine		2305126						
ANR	2306603	Symbol	header -> Jog		2305126						
ANR	2306604	Symbol	LastBuffer		2305126						
ANR	2306605	Symbol	malloc		2305126						
ANR	2306606	Symbol	ppd		2305126						
ANR	2306607	Symbol	header -> MediaColor		2305126						
ANR	2306608	Symbol	header -> cupsColorSpace		2305126						
ANR	2306609	Symbol	header -> cupsColorOrder		2305126						
ANR	2306610	Symbol	atof		2305126						
ANR	2306611	Symbol	length		2305126						
ANR	2306612	Symbol	header -> TraySwitch		2305126						
ANR	2306613	Symbol	header -> OutputType		2305126						
ANR	2306614	Symbol	header -> MirrorPrint		2305126						
ANR	2306615	Symbol	header -> AdvanceMedia		2305126						
ANR	2306616	Symbol	CompBuffer		2305126						
ANR	2306617	Symbol	header -> Duplex		2305126						
ANR	2306618	Symbol	* header -> HWResolution		2305126						
ANR	2306619	Symbol	* * header		2305126						
ANR	2306620	Symbol	header -> ManualFeed		2305126						
ANR	2306621	Symbol	~0		2305126						
ANR	2306622	Symbol	choice -> choice		2305126						
ANR	2306623	Symbol	~7		2305126						
ANR	2306624	Symbol	header -> ImagingBoundingBox		2305126						
ANR	2306625	Symbol	header -> InsertSheet		2305126						
ANR	2306626	Symbol	choice		2305126						
ANR	2306627	Symbol	header -> Margins		2305126						
ANR	2306628	Function	EndPage	479:0:12993:17449							
ANR	2306629	FunctionDef	"EndPage (ppd_file_t * ppd , cups_page_header2_t * header)"		2306628	0					
ANR	2306630	CompoundStatement		482:0:13102:17449	2306628	0					
ANR	2306631	IdentifierDeclStatement	int val ;	483:2:13106:13114	2306628	0	True				
ANR	2306632	IdentifierDecl	val		2306628	0					
ANR	2306633	IdentifierDeclType	int		2306628	0					
ANR	2306634	Identifier	val		2306628	1					
ANR	2306635	IdentifierDeclStatement	ppd_choice_t * choice ;	484:2:13139:13159	2306628	1	True				
ANR	2306636	IdentifierDecl	* choice		2306628	0					
ANR	2306637	IdentifierDeclType	ppd_choice_t *		2306628	0					
ANR	2306638	Identifier	choice		2306628	1					
ANR	2306639	SwitchStatement	switch ( ModelNumber )		2306628	2					
ANR	2306640	Condition	ModelNumber	487:10:13194:13204	2306628	0	True				
ANR	2306641	Identifier	ModelNumber		2306628	0					
ANR	2306642	CompoundStatement		7:2:106:106	2306628	1					
ANR	2306643	Label	case DYMO_3x0 :	489:4:13215:13229	2306628	0	True				
ANR	2306644	Identifier	DYMO_3x0		2306628	0					
ANR	2306645	ExpressionStatement	"fputs ( ""\\033E"" , stdout )"	494:1:13276:13298	2306628	1	True				
ANR	2306646	CallExpression	"fputs ( ""\\033E"" , stdout )"		2306628	0					
ANR	2306647	Callee	fputs		2306628	0					
ANR	2306648	Identifier	fputs		2306628	0					
ANR	2306649	ArgumentList	"""\\033E"""		2306628	1					
ANR	2306650	Argument	"""\\033E"""		2306628	0					
ANR	2306651	PrimaryExpression	"""\\033E"""		2306628	0					
ANR	2306652	Argument	stdout		2306628	1					
ANR	2306653	Identifier	stdout		2306628	0					
ANR	2306654	BreakStatement	break ;	495:1:13301:13306	2306628	2	True				
ANR	2306655	Label	case ZEBRA_EPL_LINE :	497:4:13313:13333	2306628	3	True				
ANR	2306656	Identifier	ZEBRA_EPL_LINE		2306628	0					
ANR	2306657	ExpressionStatement	"fputs ( ""\\033E\\014"" , stdout )"	502:8:13408:13434	2306628	4	True				
ANR	2306658	CallExpression	"fputs ( ""\\033E\\014"" , stdout )"		2306628	0					
ANR	2306659	Callee	fputs		2306628	0					
ANR	2306660	Identifier	fputs		2306628	0					
ANR	2306661	ArgumentList	"""\\033E\\014"""		2306628	1					
ANR	2306662	Argument	"""\\033E\\014"""		2306628	0					
ANR	2306663	PrimaryExpression	"""\\033E\\014"""		2306628	0					
ANR	2306664	Argument	stdout		2306628	1					
ANR	2306665	Identifier	stdout		2306628	0					
ANR	2306666	BreakStatement	break ;	503:1:13437:13442	2306628	5	True				
ANR	2306667	Label	case ZEBRA_EPL_PAGE :	505:4:13449:13469	2306628	6	True				
ANR	2306668	Identifier	ZEBRA_EPL_PAGE		2306628	0					
ANR	2306669	ExpressionStatement	"puts ( ""P1"" )"	510:8:13523:13533	2306628	7	True				
ANR	2306670	CallExpression	"puts ( ""P1"" )"		2306628	0					
ANR	2306671	Callee	puts		2306628	0					
ANR	2306672	Identifier	puts		2306628	0					
ANR	2306673	ArgumentList	"""P1"""		2306628	1					
ANR	2306674	Argument	"""P1"""		2306628	0					
ANR	2306675	PrimaryExpression	"""P1"""		2306628	0					
ANR	2306676	BreakStatement	break ;	511:1:13536:13541	2306628	8	True				
ANR	2306677	Label	case ZEBRA_ZPL :	513:4:13548:13563	2306628	9	True				
ANR	2306678	Identifier	ZEBRA_ZPL		2306628	0					
ANR	2306679	IfStatement	if ( Canceled )		2306628	10					
ANR	2306680	Condition	Canceled	514:12:13577:13584	2306628	0	True				
ANR	2306681	Identifier	Canceled		2306628	0					
ANR	2306682	CompoundStatement		34:1:485:485	2306628	1					
ANR	2306683	ExpressionStatement	"puts ( ""~DN"" )"	520:3:13636:13647	2306628	0	True				
ANR	2306684	CallExpression	"puts ( ""~DN"" )"		2306628	0					
ANR	2306685	Callee	puts		2306628	0					
ANR	2306686	Identifier	puts		2306628	0					
ANR	2306687	ArgumentList	"""~DN"""		2306628	1					
ANR	2306688	Argument	"""~DN"""		2306628	0					
ANR	2306689	PrimaryExpression	"""~DN"""		2306628	0					
ANR	2306690	BreakStatement	break ;	521:3:13652:13657	2306628	1	True				
ANR	2306691	ExpressionStatement	"puts ( ""^XA"" )"	528:8:13711:13722	2306628	11	True				
ANR	2306692	CallExpression	"puts ( ""^XA"" )"		2306628	0					
ANR	2306693	Callee	puts		2306628	0					
ANR	2306694	Identifier	puts		2306628	0					
ANR	2306695	ArgumentList	"""^XA"""		2306628	1					
ANR	2306696	Argument	"""^XA"""		2306628	0					
ANR	2306697	PrimaryExpression	"""^XA"""		2306628	0					
ANR	2306698	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		2306628	12					
ANR	2306699	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	534:5:13773:13872	2306628	0	True				
ANR	2306700	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		2306628	0		&&			
ANR	2306701	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		2306628	0		!=			
ANR	2306702	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2306628	0		=			
ANR	2306703	Identifier	choice		2306628	0					
ANR	2306704	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2306628	1					
ANR	2306705	Callee	ppdFindMarkedChoice		2306628	0					
ANR	2306706	Identifier	ppdFindMarkedChoice		2306628	0					
ANR	2306707	ArgumentList	ppd		2306628	1					
ANR	2306708	Argument	ppd		2306628	0					
ANR	2306709	Identifier	ppd		2306628	0					
ANR	2306710	Argument	"""zePrintRate"""		2306628	1					
ANR	2306711	PrimaryExpression	"""zePrintRate"""		2306628	0					
ANR	2306712	Identifier	NULL		2306628	1					
ANR	2306713	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		2306628	1					
ANR	2306714	Callee	strcmp		2306628	0					
ANR	2306715	Identifier	strcmp		2306628	0					
ANR	2306716	ArgumentList	choice -> choice		2306628	1					
ANR	2306717	Argument	choice -> choice		2306628	0					
ANR	2306718	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306719	Identifier	choice		2306628	0					
ANR	2306720	Identifier	choice		2306628	1					
ANR	2306721	Argument	"""Default"""		2306628	1					
ANR	2306722	PrimaryExpression	"""Default"""		2306628	0					
ANR	2306723	CompoundStatement		55:1:773:773	2306628	1					
ANR	2306724	ExpressionStatement	val = atoi ( choice -> choice )	537:3:13881:13907	2306628	0	True				
ANR	2306725	AssignmentExpression	val = atoi ( choice -> choice )		2306628	0		=			
ANR	2306726	Identifier	val		2306628	0					
ANR	2306727	CallExpression	atoi ( choice -> choice )		2306628	1					
ANR	2306728	Callee	atoi		2306628	0					
ANR	2306729	Identifier	atoi		2306628	0					
ANR	2306730	ArgumentList	choice -> choice		2306628	1					
ANR	2306731	Argument	choice -> choice		2306628	0					
ANR	2306732	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306733	Identifier	choice		2306628	0					
ANR	2306734	Identifier	choice		2306628	1					
ANR	2306735	ExpressionStatement	"printf ( ""^PR%d,%d,%d\\n"" , val , val , val )"	538:3:13912:13950	2306628	1	True				
ANR	2306736	CallExpression	"printf ( ""^PR%d,%d,%d\\n"" , val , val , val )"		2306628	0					
ANR	2306737	Callee	printf		2306628	0					
ANR	2306738	Identifier	printf		2306628	0					
ANR	2306739	ArgumentList	"""^PR%d,%d,%d\\n"""		2306628	1					
ANR	2306740	Argument	"""^PR%d,%d,%d\\n"""		2306628	0					
ANR	2306741	PrimaryExpression	"""^PR%d,%d,%d\\n"""		2306628	0					
ANR	2306742	Argument	val		2306628	1					
ANR	2306743	Identifier	val		2306628	0					
ANR	2306744	Argument	val		2306628	2					
ANR	2306745	Identifier	val		2306628	0					
ANR	2306746	Argument	val		2306628	3					
ANR	2306747	Identifier	val		2306628	0					
ANR	2306748	ExpressionStatement	"printf ( ""^LH0,0\\n"" )"	545:1:14033:14051	2306628	13	True				
ANR	2306749	CallExpression	"printf ( ""^LH0,0\\n"" )"		2306628	0					
ANR	2306750	Callee	printf		2306628	0					
ANR	2306751	Identifier	printf		2306628	0					
ANR	2306752	ArgumentList	"""^LH0,0\\n"""		2306628	1					
ANR	2306753	Argument	"""^LH0,0\\n"""		2306628	0					
ANR	2306754	PrimaryExpression	"""^LH0,0\\n"""		2306628	0					
ANR	2306755	IfStatement	"if ( ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Continuous"" ) )"		2306628	14					
ANR	2306756	Condition	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Continuous"" )"	551:5:14106:14154	2306628	0	True				
ANR	2306757	CallExpression	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Continuous"" )"		2306628	0					
ANR	2306758	Callee	ppdIsMarked		2306628	0					
ANR	2306759	Identifier	ppdIsMarked		2306628	0					
ANR	2306760	ArgumentList	ppd		2306628	1					
ANR	2306761	Argument	ppd		2306628	0					
ANR	2306762	Identifier	ppd		2306628	0					
ANR	2306763	Argument	"""zeMediaTracking"""		2306628	1					
ANR	2306764	PrimaryExpression	"""zeMediaTracking"""		2306628	0					
ANR	2306765	Argument	"""Continuous"""		2306628	2					
ANR	2306766	PrimaryExpression	"""Continuous"""		2306628	0					
ANR	2306767	CompoundStatement		71:1:1055:1055	2306628	1					
ANR	2306768	ExpressionStatement	"printf ( ""^LL%d\\n"" , header -> cupsHeight )"	557:3:14230:14267	2306628	0	True				
ANR	2306769	CallExpression	"printf ( ""^LL%d\\n"" , header -> cupsHeight )"		2306628	0					
ANR	2306770	Callee	printf		2306628	0					
ANR	2306771	Identifier	printf		2306628	0					
ANR	2306772	ArgumentList	"""^LL%d\\n"""		2306628	1					
ANR	2306773	Argument	"""^LL%d\\n"""		2306628	0					
ANR	2306774	PrimaryExpression	"""^LL%d\\n"""		2306628	0					
ANR	2306775	Argument	header -> cupsHeight		2306628	1					
ANR	2306776	PtrMemberAccess	header -> cupsHeight		2306628	0					
ANR	2306777	Identifier	header		2306628	0					
ANR	2306778	Identifier	cupsHeight		2306628	1					
ANR	2306779	ExpressionStatement	"printf ( ""^MNN\\n"" )"	558:3:14272:14288	2306628	1	True				
ANR	2306780	CallExpression	"printf ( ""^MNN\\n"" )"		2306628	0					
ANR	2306781	Callee	printf		2306628	0					
ANR	2306782	Identifier	printf		2306628	0					
ANR	2306783	ArgumentList	"""^MNN\\n"""		2306628	1					
ANR	2306784	Argument	"""^MNN\\n"""		2306628	0					
ANR	2306785	PrimaryExpression	"""^MNN\\n"""		2306628	0					
ANR	2306786	ElseStatement	else		2306628	0					
ANR	2306787	IfStatement	"if ( ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Web"" ) )"		2306628	0					
ANR	2306788	Condition	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Web"" )"	560:10:14303:14344	2306628	0	True				
ANR	2306789	CallExpression	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Web"" )"		2306628	0					
ANR	2306790	Callee	ppdIsMarked		2306628	0					
ANR	2306791	Identifier	ppdIsMarked		2306628	0					
ANR	2306792	ArgumentList	ppd		2306628	1					
ANR	2306793	Argument	ppd		2306628	0					
ANR	2306794	Identifier	ppd		2306628	0					
ANR	2306795	Argument	"""zeMediaTracking"""		2306628	1					
ANR	2306796	PrimaryExpression	"""zeMediaTracking"""		2306628	0					
ANR	2306797	Argument	"""Web"""		2306628	2					
ANR	2306798	PrimaryExpression	"""Web"""		2306628	0					
ANR	2306799	ExpressionStatement	"printf ( ""^MNY\\n"" )"	561:10:14357:14373	2306628	1	True				
ANR	2306800	CallExpression	"printf ( ""^MNY\\n"" )"		2306628	0					
ANR	2306801	Callee	printf		2306628	0					
ANR	2306802	Identifier	printf		2306628	0					
ANR	2306803	ArgumentList	"""^MNY\\n"""		2306628	1					
ANR	2306804	Argument	"""^MNY\\n"""		2306628	0					
ANR	2306805	PrimaryExpression	"""^MNY\\n"""		2306628	0					
ANR	2306806	ElseStatement	else		2306628	0					
ANR	2306807	IfStatement	"if ( ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Mark"" ) )"		2306628	0					
ANR	2306808	Condition	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Mark"" )"	562:10:14385:14427	2306628	0	True				
ANR	2306809	CallExpression	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Mark"" )"		2306628	0					
ANR	2306810	Callee	ppdIsMarked		2306628	0					
ANR	2306811	Identifier	ppdIsMarked		2306628	0					
ANR	2306812	ArgumentList	ppd		2306628	1					
ANR	2306813	Argument	ppd		2306628	0					
ANR	2306814	Identifier	ppd		2306628	0					
ANR	2306815	Argument	"""zeMediaTracking"""		2306628	1					
ANR	2306816	PrimaryExpression	"""zeMediaTracking"""		2306628	0					
ANR	2306817	Argument	"""Mark"""		2306628	2					
ANR	2306818	PrimaryExpression	"""Mark"""		2306628	0					
ANR	2306819	ExpressionStatement	"printf ( ""^MNM\\n"" )"	563:3:14433:14449	2306628	1	True				
ANR	2306820	CallExpression	"printf ( ""^MNM\\n"" )"		2306628	0					
ANR	2306821	Callee	printf		2306628	0					
ANR	2306822	Identifier	printf		2306628	0					
ANR	2306823	ArgumentList	"""^MNM\\n"""		2306628	1					
ANR	2306824	Argument	"""^MNM\\n"""		2306628	0					
ANR	2306825	PrimaryExpression	"""^MNM\\n"""		2306628	0					
ANR	2306826	IfStatement	if ( header -> cupsRowStep != 200 )		2306628	15					
ANR	2306827	Condition	header -> cupsRowStep != 200	569:5:14496:14521	2306628	0	True				
ANR	2306828	EqualityExpression	header -> cupsRowStep != 200		2306628	0		!=			
ANR	2306829	PtrMemberAccess	header -> cupsRowStep		2306628	0					
ANR	2306830	Identifier	header		2306628	0					
ANR	2306831	Identifier	cupsRowStep		2306628	1					
ANR	2306832	PrimaryExpression	200		2306628	1					
ANR	2306833	ExpressionStatement	"printf ( ""^LT%d\\n"" , header -> cupsRowStep )"	570:3:14527:14565	2306628	1	True				
ANR	2306834	CallExpression	"printf ( ""^LT%d\\n"" , header -> cupsRowStep )"		2306628	0					
ANR	2306835	Callee	printf		2306628	0					
ANR	2306836	Identifier	printf		2306628	0					
ANR	2306837	ArgumentList	"""^LT%d\\n"""		2306628	1					
ANR	2306838	Argument	"""^LT%d\\n"""		2306628	0					
ANR	2306839	PrimaryExpression	"""^LT%d\\n"""		2306628	0					
ANR	2306840	Argument	header -> cupsRowStep		2306628	1					
ANR	2306841	PtrMemberAccess	header -> cupsRowStep		2306628	0					
ANR	2306842	Identifier	header		2306628	0					
ANR	2306843	Identifier	cupsRowStep		2306628	1					
ANR	2306844	IfStatement	"if ( ! strcmp ( header -> MediaType , ""Thermal"" ) )"		2306628	16					
ANR	2306845	Condition	"! strcmp ( header -> MediaType , ""Thermal"" )"	576:5:14616:14652	2306628	0	True				
ANR	2306846	UnaryOperationExpression	"! strcmp ( header -> MediaType , ""Thermal"" )"		2306628	0					
ANR	2306847	UnaryOperator	!		2306628	0					
ANR	2306848	CallExpression	"strcmp ( header -> MediaType , ""Thermal"" )"		2306628	1					
ANR	2306849	Callee	strcmp		2306628	0					
ANR	2306850	Identifier	strcmp		2306628	0					
ANR	2306851	ArgumentList	header -> MediaType		2306628	1					
ANR	2306852	Argument	header -> MediaType		2306628	0					
ANR	2306853	PtrMemberAccess	header -> MediaType		2306628	0					
ANR	2306854	Identifier	header		2306628	0					
ANR	2306855	Identifier	MediaType		2306628	1					
ANR	2306856	Argument	"""Thermal"""		2306628	1					
ANR	2306857	PrimaryExpression	"""Thermal"""		2306628	0					
ANR	2306858	ExpressionStatement	"printf ( ""^MTT\\n"" )"	577:3:14658:14674	2306628	1	True				
ANR	2306859	CallExpression	"printf ( ""^MTT\\n"" )"		2306628	0					
ANR	2306860	Callee	printf		2306628	0					
ANR	2306861	Identifier	printf		2306628	0					
ANR	2306862	ArgumentList	"""^MTT\\n"""		2306628	1					
ANR	2306863	Argument	"""^MTT\\n"""		2306628	0					
ANR	2306864	PrimaryExpression	"""^MTT\\n"""		2306628	0					
ANR	2306865	ElseStatement	else		2306628	0					
ANR	2306866	IfStatement	"if ( ! strcmp ( header -> MediaType , ""Direct"" ) )"		2306628	0					
ANR	2306867	Condition	"! strcmp ( header -> MediaType , ""Direct"" )"	578:10:14686:14721	2306628	0	True				
ANR	2306868	UnaryOperationExpression	"! strcmp ( header -> MediaType , ""Direct"" )"		2306628	0					
ANR	2306869	UnaryOperator	!		2306628	0					
ANR	2306870	CallExpression	"strcmp ( header -> MediaType , ""Direct"" )"		2306628	1					
ANR	2306871	Callee	strcmp		2306628	0					
ANR	2306872	Identifier	strcmp		2306628	0					
ANR	2306873	ArgumentList	header -> MediaType		2306628	1					
ANR	2306874	Argument	header -> MediaType		2306628	0					
ANR	2306875	PtrMemberAccess	header -> MediaType		2306628	0					
ANR	2306876	Identifier	header		2306628	0					
ANR	2306877	Identifier	MediaType		2306628	1					
ANR	2306878	Argument	"""Direct"""		2306628	1					
ANR	2306879	PrimaryExpression	"""Direct"""		2306628	0					
ANR	2306880	ExpressionStatement	"printf ( ""^MTD\\n"" )"	579:3:14727:14743	2306628	1	True				
ANR	2306881	CallExpression	"printf ( ""^MTD\\n"" )"		2306628	0					
ANR	2306882	Callee	printf		2306628	0					
ANR	2306883	Identifier	printf		2306628	0					
ANR	2306884	ArgumentList	"""^MTD\\n"""		2306628	1					
ANR	2306885	Argument	"""^MTD\\n"""		2306628	0					
ANR	2306886	PrimaryExpression	"""^MTD\\n"""		2306628	0					
ANR	2306887	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL && strcmp ( choice -> choice , ""Saved"" ) )"		2306628	17					
ANR	2306888	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL && strcmp ( choice -> choice , ""Saved"" )"	585:5:14794:14891	2306628	0	True				
ANR	2306889	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL && strcmp ( choice -> choice , ""Saved"" )"		2306628	0		&&			
ANR	2306890	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL"		2306628	0		!=			
ANR	2306891	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" )"		2306628	0		=			
ANR	2306892	Identifier	choice		2306628	0					
ANR	2306893	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintMode"" )"		2306628	1					
ANR	2306894	Callee	ppdFindMarkedChoice		2306628	0					
ANR	2306895	Identifier	ppdFindMarkedChoice		2306628	0					
ANR	2306896	ArgumentList	ppd		2306628	1					
ANR	2306897	Argument	ppd		2306628	0					
ANR	2306898	Identifier	ppd		2306628	0					
ANR	2306899	Argument	"""zePrintMode"""		2306628	1					
ANR	2306900	PrimaryExpression	"""zePrintMode"""		2306628	0					
ANR	2306901	Identifier	NULL		2306628	1					
ANR	2306902	CallExpression	"strcmp ( choice -> choice , ""Saved"" )"		2306628	1					
ANR	2306903	Callee	strcmp		2306628	0					
ANR	2306904	Identifier	strcmp		2306628	0					
ANR	2306905	ArgumentList	choice -> choice		2306628	1					
ANR	2306906	Argument	choice -> choice		2306628	0					
ANR	2306907	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306908	Identifier	choice		2306628	0					
ANR	2306909	Identifier	choice		2306628	1					
ANR	2306910	Argument	"""Saved"""		2306628	1					
ANR	2306911	PrimaryExpression	"""Saved"""		2306628	0					
ANR	2306912	CompoundStatement		106:1:1792:1792	2306628	1					
ANR	2306913	ExpressionStatement	"printf ( ""^MM"" )"	588:3:14900:14913	2306628	0	True				
ANR	2306914	CallExpression	"printf ( ""^MM"" )"		2306628	0					
ANR	2306915	Callee	printf		2306628	0					
ANR	2306916	Identifier	printf		2306628	0					
ANR	2306917	ArgumentList	"""^MM"""		2306628	1					
ANR	2306918	Argument	"""^MM"""		2306628	0					
ANR	2306919	PrimaryExpression	"""^MM"""		2306628	0					
ANR	2306920	IfStatement	"if ( ! strcmp ( choice -> choice , ""Tear"" ) )"		2306628	1					
ANR	2306921	Condition	"! strcmp ( choice -> choice , ""Tear"" )"	590:7:14923:14953	2306628	0	True				
ANR	2306922	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Tear"" )"		2306628	0					
ANR	2306923	UnaryOperator	!		2306628	0					
ANR	2306924	CallExpression	"strcmp ( choice -> choice , ""Tear"" )"		2306628	1					
ANR	2306925	Callee	strcmp		2306628	0					
ANR	2306926	Identifier	strcmp		2306628	0					
ANR	2306927	ArgumentList	choice -> choice		2306628	1					
ANR	2306928	Argument	choice -> choice		2306628	0					
ANR	2306929	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306930	Identifier	choice		2306628	0					
ANR	2306931	Identifier	choice		2306628	1					
ANR	2306932	Argument	"""Tear"""		2306628	1					
ANR	2306933	PrimaryExpression	"""Tear"""		2306628	0					
ANR	2306934	ExpressionStatement	"printf ( ""T,Y\\n"" )"	591:5:14961:14976	2306628	1	True				
ANR	2306935	CallExpression	"printf ( ""T,Y\\n"" )"		2306628	0					
ANR	2306936	Callee	printf		2306628	0					
ANR	2306937	Identifier	printf		2306628	0					
ANR	2306938	ArgumentList	"""T,Y\\n"""		2306628	1					
ANR	2306939	Argument	"""T,Y\\n"""		2306628	0					
ANR	2306940	PrimaryExpression	"""T,Y\\n"""		2306628	0					
ANR	2306941	ElseStatement	else		2306628	0					
ANR	2306942	IfStatement	"if ( ! strcmp ( choice -> choice , ""Peel"" ) )"		2306628	0					
ANR	2306943	Condition	"! strcmp ( choice -> choice , ""Peel"" )"	592:12:14990:15020	2306628	0	True				
ANR	2306944	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Peel"" )"		2306628	0					
ANR	2306945	UnaryOperator	!		2306628	0					
ANR	2306946	CallExpression	"strcmp ( choice -> choice , ""Peel"" )"		2306628	1					
ANR	2306947	Callee	strcmp		2306628	0					
ANR	2306948	Identifier	strcmp		2306628	0					
ANR	2306949	ArgumentList	choice -> choice		2306628	1					
ANR	2306950	Argument	choice -> choice		2306628	0					
ANR	2306951	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306952	Identifier	choice		2306628	0					
ANR	2306953	Identifier	choice		2306628	1					
ANR	2306954	Argument	"""Peel"""		2306628	1					
ANR	2306955	PrimaryExpression	"""Peel"""		2306628	0					
ANR	2306956	ExpressionStatement	"printf ( ""P,Y\\n"" )"	593:5:15028:15043	2306628	1	True				
ANR	2306957	CallExpression	"printf ( ""P,Y\\n"" )"		2306628	0					
ANR	2306958	Callee	printf		2306628	0					
ANR	2306959	Identifier	printf		2306628	0					
ANR	2306960	ArgumentList	"""P,Y\\n"""		2306628	1					
ANR	2306961	Argument	"""P,Y\\n"""		2306628	0					
ANR	2306962	PrimaryExpression	"""P,Y\\n"""		2306628	0					
ANR	2306963	ElseStatement	else		2306628	0					
ANR	2306964	IfStatement	"if ( ! strcmp ( choice -> choice , ""Rewind"" ) )"		2306628	0					
ANR	2306965	Condition	"! strcmp ( choice -> choice , ""Rewind"" )"	594:12:15057:15089	2306628	0	True				
ANR	2306966	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Rewind"" )"		2306628	0					
ANR	2306967	UnaryOperator	!		2306628	0					
ANR	2306968	CallExpression	"strcmp ( choice -> choice , ""Rewind"" )"		2306628	1					
ANR	2306969	Callee	strcmp		2306628	0					
ANR	2306970	Identifier	strcmp		2306628	0					
ANR	2306971	ArgumentList	choice -> choice		2306628	1					
ANR	2306972	Argument	choice -> choice		2306628	0					
ANR	2306973	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306974	Identifier	choice		2306628	0					
ANR	2306975	Identifier	choice		2306628	1					
ANR	2306976	Argument	"""Rewind"""		2306628	1					
ANR	2306977	PrimaryExpression	"""Rewind"""		2306628	0					
ANR	2306978	ExpressionStatement	"printf ( ""R,Y\\n"" )"	595:5:15097:15112	2306628	1	True				
ANR	2306979	CallExpression	"printf ( ""R,Y\\n"" )"		2306628	0					
ANR	2306980	Callee	printf		2306628	0					
ANR	2306981	Identifier	printf		2306628	0					
ANR	2306982	ArgumentList	"""R,Y\\n"""		2306628	1					
ANR	2306983	Argument	"""R,Y\\n"""		2306628	0					
ANR	2306984	PrimaryExpression	"""R,Y\\n"""		2306628	0					
ANR	2306985	ElseStatement	else		2306628	0					
ANR	2306986	IfStatement	"if ( ! strcmp ( choice -> choice , ""Applicator"" ) )"		2306628	0					
ANR	2306987	Condition	"! strcmp ( choice -> choice , ""Applicator"" )"	596:12:15126:15162	2306628	0	True				
ANR	2306988	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Applicator"" )"		2306628	0					
ANR	2306989	UnaryOperator	!		2306628	0					
ANR	2306990	CallExpression	"strcmp ( choice -> choice , ""Applicator"" )"		2306628	1					
ANR	2306991	Callee	strcmp		2306628	0					
ANR	2306992	Identifier	strcmp		2306628	0					
ANR	2306993	ArgumentList	choice -> choice		2306628	1					
ANR	2306994	Argument	choice -> choice		2306628	0					
ANR	2306995	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2306996	Identifier	choice		2306628	0					
ANR	2306997	Identifier	choice		2306628	1					
ANR	2306998	Argument	"""Applicator"""		2306628	1					
ANR	2306999	PrimaryExpression	"""Applicator"""		2306628	0					
ANR	2307000	ExpressionStatement	"printf ( ""A,Y\\n"" )"	597:5:15170:15185	2306628	1	True				
ANR	2307001	CallExpression	"printf ( ""A,Y\\n"" )"		2306628	0					
ANR	2307002	Callee	printf		2306628	0					
ANR	2307003	Identifier	printf		2306628	0					
ANR	2307004	ArgumentList	"""A,Y\\n"""		2306628	1					
ANR	2307005	Argument	"""A,Y\\n"""		2306628	0					
ANR	2307006	PrimaryExpression	"""A,Y\\n"""		2306628	0					
ANR	2307007	ElseStatement	else		2306628	0					
ANR	2307008	ExpressionStatement	"printf ( ""C,Y\\n"" )"	599:5:15200:15215	2306628	0	True				
ANR	2307009	CallExpression	"printf ( ""C,Y\\n"" )"		2306628	0					
ANR	2307010	Callee	printf		2306628	0					
ANR	2307011	Identifier	printf		2306628	0					
ANR	2307012	ArgumentList	"""C,Y\\n"""		2306628	1					
ANR	2307013	Argument	"""C,Y\\n"""		2306628	0					
ANR	2307014	PrimaryExpression	"""C,Y\\n"""		2306628	0					
ANR	2307015	IfStatement	if ( header -> AdvanceDistance != 1000 )		2306628	18					
ANR	2307016	Condition	header -> AdvanceDistance != 1000	606:5:15283:15313	2306628	0	True				
ANR	2307017	EqualityExpression	header -> AdvanceDistance != 1000		2306628	0		!=			
ANR	2307018	PtrMemberAccess	header -> AdvanceDistance		2306628	0					
ANR	2307019	Identifier	header		2306628	0					
ANR	2307020	Identifier	AdvanceDistance		2306628	1					
ANR	2307021	PrimaryExpression	1000		2306628	1					
ANR	2307022	CompoundStatement		126:1:2214:2214	2306628	1					
ANR	2307023	IfStatement	if ( ( int ) header -> AdvanceDistance < 0 )		2306628	0					
ANR	2307024	Condition	( int ) header -> AdvanceDistance < 0	608:7:15326:15357	2306628	0	True				
ANR	2307025	RelationalExpression	( int ) header -> AdvanceDistance < 0		2306628	0		<			
ANR	2307026	CastExpression	( int ) header -> AdvanceDistance		2306628	0					
ANR	2307027	CastTarget	int		2306628	0					
ANR	2307028	PtrMemberAccess	header -> AdvanceDistance		2306628	1					
ANR	2307029	Identifier	header		2306628	0					
ANR	2307030	Identifier	AdvanceDistance		2306628	1					
ANR	2307031	PrimaryExpression	0		2306628	1					
ANR	2307032	ExpressionStatement	"printf ( ""~TA%04d\\n"" , ( int ) header -> AdvanceDistance )"	609:5:15365:15414	2306628	1	True				
ANR	2307033	CallExpression	"printf ( ""~TA%04d\\n"" , ( int ) header -> AdvanceDistance )"		2306628	0					
ANR	2307034	Callee	printf		2306628	0					
ANR	2307035	Identifier	printf		2306628	0					
ANR	2307036	ArgumentList	"""~TA%04d\\n"""		2306628	1					
ANR	2307037	Argument	"""~TA%04d\\n"""		2306628	0					
ANR	2307038	PrimaryExpression	"""~TA%04d\\n"""		2306628	0					
ANR	2307039	Argument	( int ) header -> AdvanceDistance		2306628	1					
ANR	2307040	CastExpression	( int ) header -> AdvanceDistance		2306628	0					
ANR	2307041	CastTarget	int		2306628	0					
ANR	2307042	PtrMemberAccess	header -> AdvanceDistance		2306628	1					
ANR	2307043	Identifier	header		2306628	0					
ANR	2307044	Identifier	AdvanceDistance		2306628	1					
ANR	2307045	ElseStatement	else		2306628	0					
ANR	2307046	ExpressionStatement	"printf ( ""~TA%03d\\n"" , ( int ) header -> AdvanceDistance )"	611:5:15429:15478	2306628	0	True				
ANR	2307047	CallExpression	"printf ( ""~TA%03d\\n"" , ( int ) header -> AdvanceDistance )"		2306628	0					
ANR	2307048	Callee	printf		2306628	0					
ANR	2307049	Identifier	printf		2306628	0					
ANR	2307050	ArgumentList	"""~TA%03d\\n"""		2306628	1					
ANR	2307051	Argument	"""~TA%03d\\n"""		2306628	0					
ANR	2307052	PrimaryExpression	"""~TA%03d\\n"""		2306628	0					
ANR	2307053	Argument	( int ) header -> AdvanceDistance		2306628	1					
ANR	2307054	CastExpression	( int ) header -> AdvanceDistance		2306628	0					
ANR	2307055	CastTarget	int		2306628	0					
ANR	2307056	PtrMemberAccess	header -> AdvanceDistance		2306628	1					
ANR	2307057	Identifier	header		2306628	0					
ANR	2307058	Identifier	AdvanceDistance		2306628	1					
ANR	2307059	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" ) )"		2306628	19					
ANR	2307060	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"	618:5:15553:15596	2306628	0	True				
ANR	2307061	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"		2306628	0					
ANR	2307062	Callee	ppdIsMarked		2306628	0					
ANR	2307063	Identifier	ppdIsMarked		2306628	0					
ANR	2307064	ArgumentList	ppd		2306628	1					
ANR	2307065	Argument	ppd		2306628	0					
ANR	2307066	Identifier	ppd		2306628	0					
ANR	2307067	Argument	"""zeErrorReprint"""		2306628	1					
ANR	2307068	PrimaryExpression	"""zeErrorReprint"""		2306628	0					
ANR	2307069	Argument	"""Always"""		2306628	2					
ANR	2307070	PrimaryExpression	"""Always"""		2306628	0					
ANR	2307071	ExpressionStatement	"printf ( ""^JZY\\n"" )"	619:3:15602:15618	2306628	1	True				
ANR	2307072	CallExpression	"printf ( ""^JZY\\n"" )"		2306628	0					
ANR	2307073	Callee	printf		2306628	0					
ANR	2307074	Identifier	printf		2306628	0					
ANR	2307075	ArgumentList	"""^JZY\\n"""		2306628	1					
ANR	2307076	Argument	"""^JZY\\n"""		2306628	0					
ANR	2307077	PrimaryExpression	"""^JZY\\n"""		2306628	0					
ANR	2307078	ElseStatement	else		2306628	0					
ANR	2307079	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" ) )"		2306628	0					
ANR	2307080	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"	620:10:15630:15672	2306628	0	True				
ANR	2307081	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"		2306628	0					
ANR	2307082	Callee	ppdIsMarked		2306628	0					
ANR	2307083	Identifier	ppdIsMarked		2306628	0					
ANR	2307084	ArgumentList	ppd		2306628	1					
ANR	2307085	Argument	ppd		2306628	0					
ANR	2307086	Identifier	ppd		2306628	0					
ANR	2307087	Argument	"""zeErrorReprint"""		2306628	1					
ANR	2307088	PrimaryExpression	"""zeErrorReprint"""		2306628	0					
ANR	2307089	Argument	"""Never"""		2306628	2					
ANR	2307090	PrimaryExpression	"""Never"""		2306628	0					
ANR	2307091	ExpressionStatement	"printf ( ""^JZN\\n"" )"	621:3:15678:15694	2306628	1	True				
ANR	2307092	CallExpression	"printf ( ""^JZN\\n"" )"		2306628	0					
ANR	2307093	Callee	printf		2306628	0					
ANR	2307094	Identifier	printf		2306628	0					
ANR	2307095	ArgumentList	"""^JZN\\n"""		2306628	1					
ANR	2307096	Argument	"""^JZN\\n"""		2306628	0					
ANR	2307097	PrimaryExpression	"""^JZN\\n"""		2306628	0					
ANR	2307098	IfStatement	if ( header -> NumCopies > 1 )		2306628	20					
ANR	2307099	Condition	header -> NumCopies > 1	627:5:15749:15769	2306628	0	True				
ANR	2307100	RelationalExpression	header -> NumCopies > 1		2306628	0		>			
ANR	2307101	PtrMemberAccess	header -> NumCopies		2306628	0					
ANR	2307102	Identifier	header		2306628	0					
ANR	2307103	Identifier	NumCopies		2306628	1					
ANR	2307104	PrimaryExpression	1		2306628	1					
ANR	2307105	ExpressionStatement	"printf ( ""^PQ%d, 0, 0, N\\n"" , header -> NumCopies )"	628:3:15775:15820	2306628	1	True				
ANR	2307106	CallExpression	"printf ( ""^PQ%d, 0, 0, N\\n"" , header -> NumCopies )"		2306628	0					
ANR	2307107	Callee	printf		2306628	0					
ANR	2307108	Identifier	printf		2306628	0					
ANR	2307109	ArgumentList	"""^PQ%d, 0, 0, N\\n"""		2306628	1					
ANR	2307110	Argument	"""^PQ%d, 0, 0, N\\n"""		2306628	0					
ANR	2307111	PrimaryExpression	"""^PQ%d, 0, 0, N\\n"""		2306628	0					
ANR	2307112	Argument	header -> NumCopies		2306628	1					
ANR	2307113	PtrMemberAccess	header -> NumCopies		2306628	0					
ANR	2307114	Identifier	header		2306628	0					
ANR	2307115	Identifier	NumCopies		2306628	1					
ANR	2307116	ExpressionStatement	"puts ( ""^FO0,0^XGR:CUPS.GRF,1,1^FS"" )"	634:1:15876:15910	2306628	21	True				
ANR	2307117	CallExpression	"puts ( ""^FO0,0^XGR:CUPS.GRF,1,1^FS"" )"		2306628	0					
ANR	2307118	Callee	puts		2306628	0					
ANR	2307119	Identifier	puts		2306628	0					
ANR	2307120	ArgumentList	"""^FO0,0^XGR:CUPS.GRF,1,1^FS"""		2306628	1					
ANR	2307121	Argument	"""^FO0,0^XGR:CUPS.GRF,1,1^FS"""		2306628	0					
ANR	2307122	PrimaryExpression	"""^FO0,0^XGR:CUPS.GRF,1,1^FS"""		2306628	0					
ANR	2307123	ExpressionStatement	"puts ( ""^IDR:CUPS.GRF^FS"" )"	640:8:15973:15997	2306628	22	True				
ANR	2307124	CallExpression	"puts ( ""^IDR:CUPS.GRF^FS"" )"		2306628	0					
ANR	2307125	Callee	puts		2306628	0					
ANR	2307126	Identifier	puts		2306628	0					
ANR	2307127	ArgumentList	"""^IDR:CUPS.GRF^FS"""		2306628	1					
ANR	2307128	Argument	"""^IDR:CUPS.GRF^FS"""		2306628	0					
ANR	2307129	PrimaryExpression	"""^IDR:CUPS.GRF^FS"""		2306628	0					
ANR	2307130	ExpressionStatement	"puts ( ""^XZ"" )"	641:1:16000:16011	2306628	23	True				
ANR	2307131	CallExpression	"puts ( ""^XZ"" )"		2306628	0					
ANR	2307132	Callee	puts		2306628	0					
ANR	2307133	Identifier	puts		2306628	0					
ANR	2307134	ArgumentList	"""^XZ"""		2306628	1					
ANR	2307135	Argument	"""^XZ"""		2306628	0					
ANR	2307136	PrimaryExpression	"""^XZ"""		2306628	0					
ANR	2307137	BreakStatement	break ;	642:8:16021:16026	2306628	24	True				
ANR	2307138	Label	case ZEBRA_CPCL :	644:4:16033:16049	2306628	25	True				
ANR	2307139	Identifier	ZEBRA_CPCL		2306628	0					
ANR	2307140	IfStatement	if ( header -> AdvanceDistance != 1000 )		2306628	26					
ANR	2307141	Condition	header -> AdvanceDistance != 1000	649:5:16113:16143	2306628	0	True				
ANR	2307142	EqualityExpression	header -> AdvanceDistance != 1000		2306628	0		!=			
ANR	2307143	PtrMemberAccess	header -> AdvanceDistance		2306628	0					
ANR	2307144	Identifier	header		2306628	0					
ANR	2307145	Identifier	AdvanceDistance		2306628	1					
ANR	2307146	PrimaryExpression	1000		2306628	1					
ANR	2307147	ExpressionStatement	"printf ( ""PRESENT-AT %d 1\\r\\n"" , ( int ) header -> AdvanceDistance )"	650:10:16156:16215	2306628	1	True				
ANR	2307148	CallExpression	"printf ( ""PRESENT-AT %d 1\\r\\n"" , ( int ) header -> AdvanceDistance )"		2306628	0					
ANR	2307149	Callee	printf		2306628	0					
ANR	2307150	Identifier	printf		2306628	0					
ANR	2307151	ArgumentList	"""PRESENT-AT %d 1\\r\\n"""		2306628	1					
ANR	2307152	Argument	"""PRESENT-AT %d 1\\r\\n"""		2306628	0					
ANR	2307153	PrimaryExpression	"""PRESENT-AT %d 1\\r\\n"""		2306628	0					
ANR	2307154	Argument	( int ) header -> AdvanceDistance		2306628	1					
ANR	2307155	CastExpression	( int ) header -> AdvanceDistance		2306628	0					
ANR	2307156	CastTarget	int		2306628	0					
ANR	2307157	PtrMemberAccess	header -> AdvanceDistance		2306628	1					
ANR	2307158	Identifier	header		2306628	0					
ANR	2307159	Identifier	AdvanceDistance		2306628	1					
ANR	2307160	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" ) )"		2306628	27					
ANR	2307161	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"	656:5:16287:16330	2306628	0	True				
ANR	2307162	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"		2306628	0					
ANR	2307163	Callee	ppdIsMarked		2306628	0					
ANR	2307164	Identifier	ppdIsMarked		2306628	0					
ANR	2307165	ArgumentList	ppd		2306628	1					
ANR	2307166	Argument	ppd		2306628	0					
ANR	2307167	Identifier	ppd		2306628	0					
ANR	2307168	Argument	"""zeErrorReprint"""		2306628	1					
ANR	2307169	PrimaryExpression	"""zeErrorReprint"""		2306628	0					
ANR	2307170	Argument	"""Always"""		2306628	2					
ANR	2307171	PrimaryExpression	"""Always"""		2306628	0					
ANR	2307172	ExpressionStatement	"puts ( ""ON-OUT-OF-PAPER WAIT\\r"" )"	657:3:16336:16366	2306628	1	True				
ANR	2307173	CallExpression	"puts ( ""ON-OUT-OF-PAPER WAIT\\r"" )"		2306628	0					
ANR	2307174	Callee	puts		2306628	0					
ANR	2307175	Identifier	puts		2306628	0					
ANR	2307176	ArgumentList	"""ON-OUT-OF-PAPER WAIT\\r"""		2306628	1					
ANR	2307177	Argument	"""ON-OUT-OF-PAPER WAIT\\r"""		2306628	0					
ANR	2307178	PrimaryExpression	"""ON-OUT-OF-PAPER WAIT\\r"""		2306628	0					
ANR	2307179	ElseStatement	else		2306628	0					
ANR	2307180	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" ) )"		2306628	0					
ANR	2307181	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"	658:10:16378:16420	2306628	0	True				
ANR	2307182	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"		2306628	0					
ANR	2307183	Callee	ppdIsMarked		2306628	0					
ANR	2307184	Identifier	ppdIsMarked		2306628	0					
ANR	2307185	ArgumentList	ppd		2306628	1					
ANR	2307186	Argument	ppd		2306628	0					
ANR	2307187	Identifier	ppd		2306628	0					
ANR	2307188	Argument	"""zeErrorReprint"""		2306628	1					
ANR	2307189	PrimaryExpression	"""zeErrorReprint"""		2306628	0					
ANR	2307190	Argument	"""Never"""		2306628	2					
ANR	2307191	PrimaryExpression	"""Never"""		2306628	0					
ANR	2307192	ExpressionStatement	"puts ( ""ON-OUT-OF-PAPER PURGE\\r"" )"	659:3:16426:16457	2306628	1	True				
ANR	2307193	CallExpression	"puts ( ""ON-OUT-OF-PAPER PURGE\\r"" )"		2306628	0					
ANR	2307194	Callee	puts		2306628	0					
ANR	2307195	Identifier	puts		2306628	0					
ANR	2307196	ArgumentList	"""ON-OUT-OF-PAPER PURGE\\r"""		2306628	1					
ANR	2307197	Argument	"""ON-OUT-OF-PAPER PURGE\\r"""		2306628	0					
ANR	2307198	PrimaryExpression	"""ON-OUT-OF-PAPER PURGE\\r"""		2306628	0					
ANR	2307199	IfStatement	if ( header -> CutMedia )		2306628	28					
ANR	2307200	Condition	header -> CutMedia	665:5:16501:16516	2306628	0	True				
ANR	2307201	PtrMemberAccess	header -> CutMedia		2306628	0					
ANR	2307202	Identifier	header		2306628	0					
ANR	2307203	Identifier	CutMedia		2306628	1					
ANR	2307204	ExpressionStatement	"puts ( ""CUT\\r"" )"	666:3:16522:16535	2306628	1	True				
ANR	2307205	CallExpression	"puts ( ""CUT\\r"" )"		2306628	0					
ANR	2307206	Callee	puts		2306628	0					
ANR	2307207	Identifier	puts		2306628	0					
ANR	2307208	ArgumentList	"""CUT\\r"""		2306628	1					
ANR	2307209	Argument	"""CUT\\r"""		2306628	0					
ANR	2307210	PrimaryExpression	"""CUT\\r"""		2306628	0					
ANR	2307211	IfStatement	if ( header -> cupsCompression > 0 )		2306628	29					
ANR	2307212	Condition	header -> cupsCompression > 0	672:5:16584:16610	2306628	0	True				
ANR	2307213	RelationalExpression	header -> cupsCompression > 0		2306628	0		>			
ANR	2307214	PtrMemberAccess	header -> cupsCompression		2306628	0					
ANR	2307215	Identifier	header		2306628	0					
ANR	2307216	Identifier	cupsCompression		2306628	1					
ANR	2307217	PrimaryExpression	0		2306628	1					
ANR	2307218	ExpressionStatement	"printf ( ""TONE %u\\r\\n"" , 2 * header -> cupsCompression )"	673:3:16616:16666	2306628	1	True				
ANR	2307219	CallExpression	"printf ( ""TONE %u\\r\\n"" , 2 * header -> cupsCompression )"		2306628	0					
ANR	2307220	Callee	printf		2306628	0					
ANR	2307221	Identifier	printf		2306628	0					
ANR	2307222	ArgumentList	"""TONE %u\\r\\n"""		2306628	1					
ANR	2307223	Argument	"""TONE %u\\r\\n"""		2306628	0					
ANR	2307224	PrimaryExpression	"""TONE %u\\r\\n"""		2306628	0					
ANR	2307225	Argument	2 * header -> cupsCompression		2306628	1					
ANR	2307226	MultiplicativeExpression	2 * header -> cupsCompression		2306628	0		*			
ANR	2307227	PrimaryExpression	2		2306628	0					
ANR	2307228	PtrMemberAccess	header -> cupsCompression		2306628	1					
ANR	2307229	Identifier	header		2306628	0					
ANR	2307230	Identifier	cupsCompression		2306628	1					
ANR	2307231	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		2306628	30					
ANR	2307232	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	679:5:16717:16816	2306628	0	True				
ANR	2307233	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		2306628	0		&&			
ANR	2307234	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		2306628	0		!=			
ANR	2307235	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2306628	0		=			
ANR	2307236	Identifier	choice		2306628	0					
ANR	2307237	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		2306628	1					
ANR	2307238	Callee	ppdFindMarkedChoice		2306628	0					
ANR	2307239	Identifier	ppdFindMarkedChoice		2306628	0					
ANR	2307240	ArgumentList	ppd		2306628	1					
ANR	2307241	Argument	ppd		2306628	0					
ANR	2307242	Identifier	ppd		2306628	0					
ANR	2307243	Argument	"""zePrintRate"""		2306628	1					
ANR	2307244	PrimaryExpression	"""zePrintRate"""		2306628	0					
ANR	2307245	Identifier	NULL		2306628	1					
ANR	2307246	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		2306628	1					
ANR	2307247	Callee	strcmp		2306628	0					
ANR	2307248	Identifier	strcmp		2306628	0					
ANR	2307249	ArgumentList	choice -> choice		2306628	1					
ANR	2307250	Argument	choice -> choice		2306628	0					
ANR	2307251	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2307252	Identifier	choice		2306628	0					
ANR	2307253	Identifier	choice		2306628	1					
ANR	2307254	Argument	"""Default"""		2306628	1					
ANR	2307255	PrimaryExpression	"""Default"""		2306628	0					
ANR	2307256	CompoundStatement		200:1:3717:3717	2306628	1					
ANR	2307257	ExpressionStatement	val = atoi ( choice -> choice )	682:3:16825:16851	2306628	0	True				
ANR	2307258	AssignmentExpression	val = atoi ( choice -> choice )		2306628	0		=			
ANR	2307259	Identifier	val		2306628	0					
ANR	2307260	CallExpression	atoi ( choice -> choice )		2306628	1					
ANR	2307261	Callee	atoi		2306628	0					
ANR	2307262	Identifier	atoi		2306628	0					
ANR	2307263	ArgumentList	choice -> choice		2306628	1					
ANR	2307264	Argument	choice -> choice		2306628	0					
ANR	2307265	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2307266	Identifier	choice		2306628	0					
ANR	2307267	Identifier	choice		2306628	1					
ANR	2307268	ExpressionStatement	"printf ( ""SPEED %d\\r\\n"" , val )"	683:3:16856:16883	2306628	1	True				
ANR	2307269	CallExpression	"printf ( ""SPEED %d\\r\\n"" , val )"		2306628	0					
ANR	2307270	Callee	printf		2306628	0					
ANR	2307271	Identifier	printf		2306628	0					
ANR	2307272	ArgumentList	"""SPEED %d\\r\\n"""		2306628	1					
ANR	2307273	Argument	"""SPEED %d\\r\\n"""		2306628	0					
ANR	2307274	PrimaryExpression	"""SPEED %d\\r\\n"""		2306628	0					
ANR	2307275	Argument	val		2306628	1					
ANR	2307276	Identifier	val		2306628	0					
ANR	2307277	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL || strcmp ( choice -> choice , ""Continuous"" ) )"		2306628	31					
ANR	2307278	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL || strcmp ( choice -> choice , ""Continuous"" )"	690:5:16938:17044	2306628	0	True				
ANR	2307279	OrExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL || strcmp ( choice -> choice , ""Continuous"" )"		2306628	0		||			
ANR	2307280	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL"		2306628	0		==			
ANR	2307281	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" )"		2306628	0		=			
ANR	2307282	Identifier	choice		2306628	0					
ANR	2307283	CallExpression	"ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" )"		2306628	1					
ANR	2307284	Callee	ppdFindMarkedChoice		2306628	0					
ANR	2307285	Identifier	ppdFindMarkedChoice		2306628	0					
ANR	2307286	ArgumentList	ppd		2306628	1					
ANR	2307287	Argument	ppd		2306628	0					
ANR	2307288	Identifier	ppd		2306628	0					
ANR	2307289	Argument	"""zeMediaTracking"""		2306628	1					
ANR	2307290	PrimaryExpression	"""zeMediaTracking"""		2306628	0					
ANR	2307291	Identifier	NULL		2306628	1					
ANR	2307292	CallExpression	"strcmp ( choice -> choice , ""Continuous"" )"		2306628	1					
ANR	2307293	Callee	strcmp		2306628	0					
ANR	2307294	Identifier	strcmp		2306628	0					
ANR	2307295	ArgumentList	choice -> choice		2306628	1					
ANR	2307296	Argument	choice -> choice		2306628	0					
ANR	2307297	PtrMemberAccess	choice -> choice		2306628	0					
ANR	2307298	Identifier	choice		2306628	0					
ANR	2307299	Identifier	choice		2306628	1					
ANR	2307300	Argument	"""Continuous"""		2306628	1					
ANR	2307301	PrimaryExpression	"""Continuous"""		2306628	0					
ANR	2307302	ExpressionStatement	"puts ( ""FORM\\r"" )"	692:10:17057:17071	2306628	1	True				
ANR	2307303	CallExpression	"puts ( ""FORM\\r"" )"		2306628	0					
ANR	2307304	Callee	puts		2306628	0					
ANR	2307305	Identifier	puts		2306628	0					
ANR	2307306	ArgumentList	"""FORM\\r"""		2306628	1					
ANR	2307307	Argument	"""FORM\\r"""		2306628	0					
ANR	2307308	PrimaryExpression	"""FORM\\r"""		2306628	0					
ANR	2307309	ExpressionStatement	"puts ( ""PRINT\\r"" )"	694:1:17075:17090	2306628	32	True				
ANR	2307310	CallExpression	"puts ( ""PRINT\\r"" )"		2306628	0					
ANR	2307311	Callee	puts		2306628	0					
ANR	2307312	Identifier	puts		2306628	0					
ANR	2307313	ArgumentList	"""PRINT\\r"""		2306628	1					
ANR	2307314	Argument	"""PRINT\\r"""		2306628	0					
ANR	2307315	PrimaryExpression	"""PRINT\\r"""		2306628	0					
ANR	2307316	BreakStatement	break ;	695:1:17093:17098	2306628	33	True				
ANR	2307317	Label	case INTELLITECH_PCL :	697:4:17105:17126	2306628	34	True				
ANR	2307318	Identifier	INTELLITECH_PCL		2306628	0					
ANR	2307319	ExpressionStatement	"printf ( ""\\033*rB"" )"	698:8:17136:17153	2306628	35	True				
ANR	2307320	CallExpression	"printf ( ""\\033*rB"" )"		2306628	0					
ANR	2307321	Callee	printf		2306628	0					
ANR	2307322	Identifier	printf		2306628	0					
ANR	2307323	ArgumentList	"""\\033*rB"""		2306628	1					
ANR	2307324	Argument	"""\\033*rB"""		2306628	0					
ANR	2307325	PrimaryExpression	"""\\033*rB"""		2306628	0					
ANR	2307326	ExpressionStatement	"printf ( ""\\014"" )"	699:8:17178:17192	2306628	36	True				
ANR	2307327	CallExpression	"printf ( ""\\014"" )"		2306628	0					
ANR	2307328	Callee	printf		2306628	0					
ANR	2307329	Identifier	printf		2306628	0					
ANR	2307330	ArgumentList	"""\\014"""		2306628	1					
ANR	2307331	Argument	"""\\014"""		2306628	0					
ANR	2307332	PrimaryExpression	"""\\014"""		2306628	0					
ANR	2307333	BreakStatement	break ;	700:8:17229:17234	2306628	37	True				
ANR	2307334	ExpressionStatement	fflush ( stdout )	703:2:17243:17257	2306628	3	True				
ANR	2307335	CallExpression	fflush ( stdout )		2306628	0					
ANR	2307336	Callee	fflush		2306628	0					
ANR	2307337	Identifier	fflush		2306628	0					
ANR	2307338	ArgumentList	stdout		2306628	1					
ANR	2307339	Argument	stdout		2306628	0					
ANR	2307340	Identifier	stdout		2306628	0					
ANR	2307341	ExpressionStatement	free ( Buffer )	709:2:17291:17303	2306628	4	True				
ANR	2307342	CallExpression	free ( Buffer )		2306628	0					
ANR	2307343	Callee	free		2306628	0					
ANR	2307344	Identifier	free		2306628	0					
ANR	2307345	ArgumentList	Buffer		2306628	1					
ANR	2307346	Argument	Buffer		2306628	0					
ANR	2307347	Identifier	Buffer		2306628	0					
ANR	2307348	IfStatement	if ( CompBuffer )		2306628	5					
ANR	2307349	Condition	CompBuffer	711:6:17312:17321	2306628	0	True				
ANR	2307350	Identifier	CompBuffer		2306628	0					
ANR	2307351	CompoundStatement		231:2:4223:4223	2306628	1					
ANR	2307352	ExpressionStatement	free ( CompBuffer )	713:4:17332:17348	2306628	0	True				
ANR	2307353	CallExpression	free ( CompBuffer )		2306628	0					
ANR	2307354	Callee	free		2306628	0					
ANR	2307355	Identifier	free		2306628	0					
ANR	2307356	ArgumentList	CompBuffer		2306628	1					
ANR	2307357	Argument	CompBuffer		2306628	0					
ANR	2307358	Identifier	CompBuffer		2306628	0					
ANR	2307359	ExpressionStatement	CompBuffer = NULL	714:4:17354:17371	2306628	1	True				
ANR	2307360	AssignmentExpression	CompBuffer = NULL		2306628	0		=			
ANR	2307361	Identifier	CompBuffer		2306628	0					
ANR	2307362	Identifier	NULL		2306628	1					
ANR	2307363	IfStatement	if ( LastBuffer )		2306628	6					
ANR	2307364	Condition	LastBuffer	717:6:17384:17393	2306628	0	True				
ANR	2307365	Identifier	LastBuffer		2306628	0					
ANR	2307366	CompoundStatement		237:2:4295:4295	2306628	1					
ANR	2307367	ExpressionStatement	free ( LastBuffer )	719:4:17404:17420	2306628	0	True				
ANR	2307368	CallExpression	free ( LastBuffer )		2306628	0					
ANR	2307369	Callee	free		2306628	0					
ANR	2307370	Identifier	free		2306628	0					
ANR	2307371	ArgumentList	LastBuffer		2306628	1					
ANR	2307372	Argument	LastBuffer		2306628	0					
ANR	2307373	Identifier	LastBuffer		2306628	0					
ANR	2307374	ExpressionStatement	LastBuffer = NULL	720:4:17426:17443	2306628	1	True				
ANR	2307375	AssignmentExpression	LastBuffer = NULL		2306628	0		=			
ANR	2307376	Identifier	LastBuffer		2306628	0					
ANR	2307377	Identifier	NULL		2306628	1					
ANR	2307378	ReturnType	void		2306628	1					
ANR	2307379	Identifier	EndPage		2306628	2					
ANR	2307380	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header"		2306628	3					
ANR	2307381	Parameter	ppd_file_t * ppd	480:8:13006:13020	2306628	0	True				
ANR	2307382	ParameterType	ppd_file_t *		2306628	0					
ANR	2307383	Identifier	ppd		2306628	1					
ANR	2307384	Parameter	cups_page_header2_t * header	481:8:13051:13077	2306628	1	True				
ANR	2307385	ParameterType	cups_page_header2_t *		2306628	0					
ANR	2307386	Identifier	header		2306628	1					
ANR	2307387	CFGEntryNode	ENTRY		2306628		True				
ANR	2307388	CFGExitNode	EXIT		2306628		True				
ANR	2307389	Symbol	* choice		2306628						
ANR	2307390	Symbol	stdout		2306628						
ANR	2307391	Symbol	ppdIsMarked		2306628						
ANR	2307392	Symbol	header -> cupsRowStep		2306628						
ANR	2307393	Symbol	header -> MediaType		2306628						
ANR	2307394	Symbol	ppdFindMarkedChoice		2306628						
ANR	2307395	Symbol	header -> cupsHeight		2306628						
ANR	2307396	Symbol	header -> NumCopies		2306628						
ANR	2307397	Symbol	val		2306628						
ANR	2307398	Symbol	ModelNumber		2306628						
ANR	2307399	Symbol	strcmp		2306628						
ANR	2307400	Symbol	atoi		2306628						
ANR	2307401	Symbol	Buffer		2306628						
ANR	2307402	Symbol	LastBuffer		2306628						
ANR	2307403	Symbol	NULL		2306628						
ANR	2307404	Symbol	ppd		2306628						
ANR	2307405	Symbol	* header		2306628						
ANR	2307406	Symbol	header -> cupsCompression		2306628						
ANR	2307407	Symbol	CompBuffer		2306628						
ANR	2307408	Symbol	choice -> choice		2306628						
ANR	2307409	Symbol	header		2306628						
ANR	2307410	Symbol	Canceled		2306628						
ANR	2307411	Symbol	choice		2306628						
ANR	2307412	Symbol	header -> CutMedia		2306628						
ANR	2307413	Symbol	header -> AdvanceDistance		2306628						
ANR	2307414	Function	CancelJob	729:0:17506:17625							
ANR	2307415	FunctionDef	CancelJob (int sig)		2307414	0					
ANR	2307416	CompoundStatement		731:0:17549:17625	2307414	0					
ANR	2307417	ExpressionStatement	( void ) sig	736:2:17597:17606	2307414	0	True				
ANR	2307418	CastExpression	( void ) sig		2307414	0					
ANR	2307419	CastTarget	void		2307414	0					
ANR	2307420	Identifier	sig		2307414	1					
ANR	2307421	ExpressionStatement	Canceled = 1	738:2:17611:17623	2307414	1	True				
ANR	2307422	AssignmentExpression	Canceled = 1		2307414	0		=			
ANR	2307423	Identifier	Canceled		2307414	0					
ANR	2307424	PrimaryExpression	1		2307414	1					
ANR	2307425	ReturnType	void		2307414	1					
ANR	2307426	Identifier	CancelJob		2307414	2					
ANR	2307427	ParameterList	int sig		2307414	3					
ANR	2307428	Parameter	int sig	730:10:17521:17527	2307414	0	True				
ANR	2307429	ParameterType	int		2307414	0					
ANR	2307430	Identifier	sig		2307414	1					
ANR	2307431	CFGEntryNode	ENTRY		2307414		True				
ANR	2307432	CFGExitNode	EXIT		2307414		True				
ANR	2307433	Symbol	sig		2307414						
ANR	2307434	Symbol	Canceled		2307414						
ANR	2307435	Function	OutputLine	746:0:17686:21121							
ANR	2307436	FunctionDef	"OutputLine (ppd_file_t * ppd , cups_page_header2_t * header , int y)"		2307435	0					
ANR	2307437	CompoundStatement		750:0:17863:21121	2307435	0					
ANR	2307438	IdentifierDeclStatement	int i ;	751:2:17867:17873	2307435	0	True				
ANR	2307439	IdentifierDecl	i		2307435	0					
ANR	2307440	IdentifierDeclType	int		2307435	0					
ANR	2307441	Identifier	i		2307435	1					
ANR	2307442	IdentifierDeclStatement	unsigned char * ptr ;	752:2:17897:17915	2307435	1	True				
ANR	2307443	IdentifierDecl	* ptr		2307435	0					
ANR	2307444	IdentifierDeclType	unsigned char *		2307435	0					
ANR	2307445	Identifier	ptr		2307435	1					
ANR	2307446	IdentifierDeclStatement	unsigned char * compptr ;	753:2:17947:17969	2307435	2	True				
ANR	2307447	IdentifierDecl	* compptr		2307435	0					
ANR	2307448	IdentifierDeclType	unsigned char *		2307435	0					
ANR	2307449	Identifier	compptr		2307435	1					
ANR	2307450	IdentifierDeclStatement	char repeat_char ;	754:2:18012:18029	2307435	3	True				
ANR	2307451	IdentifierDecl	repeat_char		2307435	0					
ANR	2307452	IdentifierDeclType	char		2307435	0					
ANR	2307453	Identifier	repeat_char		2307435	1					
ANR	2307454	IdentifierDeclStatement	int repeat_count ;	755:2:18059:18076	2307435	4	True				
ANR	2307455	IdentifierDecl	repeat_count		2307435	0					
ANR	2307456	IdentifierDeclType	int		2307435	0					
ANR	2307457	Identifier	repeat_count		2307435	1					
ANR	2307458	Statement	static	756:2:18117:18122	2307435	5	True				
ANR	2307459	IdentifierDeclStatement	"const char * hex = ""0123456789ABCDEF"" ;"	756:9:18124:18160	2307435	6	True				
ANR	2307460	IdentifierDecl	"* hex = ""0123456789ABCDEF"""		2307435	0					
ANR	2307461	IdentifierDeclType	const char *		2307435	0					
ANR	2307462	Identifier	hex		2307435	1					
ANR	2307463	AssignmentExpression	"* hex = ""0123456789ABCDEF"""		2307435	2		=			
ANR	2307464	Identifier	hex		2307435	0					
ANR	2307465	PrimaryExpression	"""0123456789ABCDEF"""		2307435	1					
ANR	2307466	SwitchStatement	switch ( ModelNumber )		2307435	7					
ANR	2307467	Condition	ModelNumber	760:10:18196:18206	2307435	0	True				
ANR	2307468	Identifier	ModelNumber		2307435	0					
ANR	2307469	CompoundStatement		12:2:347:347	2307435	1					
ANR	2307470	Label	case DYMO_3x0 :	762:4:18217:18231	2307435	0	True				
ANR	2307471	Identifier	DYMO_3x0		2307435	0					
ANR	2307472	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 ) )"		2307435	1					
ANR	2307473	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"	767:5:18317:18397	2307435	0	True				
ANR	2307474	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		2307435	0		||			
ANR	2307475	ArrayIndexing	Buffer [ 0 ]		2307435	0					
ANR	2307476	Identifier	Buffer		2307435	0					
ANR	2307477	PrimaryExpression	0		2307435	1					
ANR	2307478	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		2307435	1					
ANR	2307479	Callee	memcmp		2307435	0					
ANR	2307480	Identifier	memcmp		2307435	0					
ANR	2307481	ArgumentList	Buffer		2307435	1					
ANR	2307482	Argument	Buffer		2307435	0					
ANR	2307483	Identifier	Buffer		2307435	0					
ANR	2307484	Argument	Buffer + 1		2307435	1					
ANR	2307485	AdditiveExpression	Buffer + 1		2307435	0		+			
ANR	2307486	Identifier	Buffer		2307435	0					
ANR	2307487	PrimaryExpression	1		2307435	1					
ANR	2307488	Argument	header -> cupsBytesPerLine - 1		2307435	2					
ANR	2307489	AdditiveExpression	header -> cupsBytesPerLine - 1		2307435	0		-			
ANR	2307490	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307491	Identifier	header		2307435	0					
ANR	2307492	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307493	PrimaryExpression	1		2307435	1					
ANR	2307494	CompoundStatement		20:1:537:537	2307435	1					
ANR	2307495	IfStatement	if ( Feed )		2307435	0					
ANR	2307496	Condition	Feed	770:14:18417:18420	2307435	0	True				
ANR	2307497	Identifier	Feed		2307435	0					
ANR	2307498	CompoundStatement		22:3:562:562	2307435	1					
ANR	2307499	WhileStatement	while ( Feed > 255 )		2307435	0					
ANR	2307500	Condition	Feed > 255	772:12:18440:18449	2307435	0	True				
ANR	2307501	RelationalExpression	Feed > 255		2307435	0		>			
ANR	2307502	Identifier	Feed		2307435	0					
ANR	2307503	PrimaryExpression	255		2307435	1					
ANR	2307504	CompoundStatement		24:5:593:593	2307435	1					
ANR	2307505	ExpressionStatement	"printf ( ""\\033f\\001%c"" , 255 )"	774:7:18466:18492	2307435	0	True				
ANR	2307506	CallExpression	"printf ( ""\\033f\\001%c"" , 255 )"		2307435	0					
ANR	2307507	Callee	printf		2307435	0					
ANR	2307508	Identifier	printf		2307435	0					
ANR	2307509	ArgumentList	"""\\033f\\001%c"""		2307435	1					
ANR	2307510	Argument	"""\\033f\\001%c"""		2307435	0					
ANR	2307511	PrimaryExpression	"""\\033f\\001%c"""		2307435	0					
ANR	2307512	Argument	255		2307435	1					
ANR	2307513	PrimaryExpression	255		2307435	0					
ANR	2307514	ExpressionStatement	Feed -= 255	775:7:18501:18512	2307435	1	True				
ANR	2307515	AssignmentExpression	Feed -= 255		2307435	0		-=			
ANR	2307516	Identifier	Feed		2307435	0					
ANR	2307517	PrimaryExpression	255		2307435	1					
ANR	2307518	ExpressionStatement	"printf ( ""\\033f\\001%c"" , Feed )"	778:5:18527:18554	2307435	1	True				
ANR	2307519	CallExpression	"printf ( ""\\033f\\001%c"" , Feed )"		2307435	0					
ANR	2307520	Callee	printf		2307435	0					
ANR	2307521	Identifier	printf		2307435	0					
ANR	2307522	ArgumentList	"""\\033f\\001%c"""		2307435	1					
ANR	2307523	Argument	"""\\033f\\001%c"""		2307435	0					
ANR	2307524	PrimaryExpression	"""\\033f\\001%c"""		2307435	0					
ANR	2307525	Argument	Feed		2307435	1					
ANR	2307526	Identifier	Feed		2307435	0					
ANR	2307527	ExpressionStatement	Feed = 0	779:5:18561:18569	2307435	2	True				
ANR	2307528	AssignmentExpression	Feed = 0		2307435	0		=			
ANR	2307529	Identifier	Feed		2307435	0					
ANR	2307530	PrimaryExpression	0		2307435	1					
ANR	2307531	ExpressionStatement	putchar ( 0x16 )	782:10:18594:18607	2307435	1	True				
ANR	2307532	CallExpression	putchar ( 0x16 )		2307435	0					
ANR	2307533	Callee	putchar		2307435	0					
ANR	2307534	Identifier	putchar		2307435	0					
ANR	2307535	ArgumentList	0x16		2307435	1					
ANR	2307536	Argument	0x16		2307435	0					
ANR	2307537	PrimaryExpression	0x16		2307435	0					
ANR	2307538	ExpressionStatement	"fwrite ( Buffer , header -> cupsBytesPerLine , 1 , stdout )"	783:3:18612:18663	2307435	2	True				
ANR	2307539	CallExpression	"fwrite ( Buffer , header -> cupsBytesPerLine , 1 , stdout )"		2307435	0					
ANR	2307540	Callee	fwrite		2307435	0					
ANR	2307541	Identifier	fwrite		2307435	0					
ANR	2307542	ArgumentList	Buffer		2307435	1					
ANR	2307543	Argument	Buffer		2307435	0					
ANR	2307544	Identifier	Buffer		2307435	0					
ANR	2307545	Argument	header -> cupsBytesPerLine		2307435	1					
ANR	2307546	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307547	Identifier	header		2307435	0					
ANR	2307548	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307549	Argument	1		2307435	2					
ANR	2307550	PrimaryExpression	1		2307435	0					
ANR	2307551	Argument	stdout		2307435	3					
ANR	2307552	Identifier	stdout		2307435	0					
ANR	2307553	ExpressionStatement	fflush ( stdout )	784:3:18668:18682	2307435	3	True				
ANR	2307554	CallExpression	fflush ( stdout )		2307435	0					
ANR	2307555	Callee	fflush		2307435	0					
ANR	2307556	Identifier	fflush		2307435	0					
ANR	2307557	ArgumentList	stdout		2307435	1					
ANR	2307558	Argument	stdout		2307435	0					
ANR	2307559	Identifier	stdout		2307435	0					
ANR	2307560	ElseStatement	else		2307435	0					
ANR	2307561	ExpressionStatement	Feed ++	787:10:18703:18710	2307435	0	True				
ANR	2307562	PostIncDecOperationExpression	Feed ++		2307435	0					
ANR	2307563	Identifier	Feed		2307435	0					
ANR	2307564	IncDec	++		2307435	1					
ANR	2307565	BreakStatement	break ;	788:1:18713:18718	2307435	2	True				
ANR	2307566	Label	case ZEBRA_EPL_LINE :	790:4:18725:18745	2307435	3	True				
ANR	2307567	Identifier	ZEBRA_EPL_LINE		2307435	0					
ANR	2307568	ExpressionStatement	"printf ( ""\\033g%03d"" , header -> cupsBytesPerLine )"	791:8:18755:18800	2307435	4	True				
ANR	2307569	CallExpression	"printf ( ""\\033g%03d"" , header -> cupsBytesPerLine )"		2307435	0					
ANR	2307570	Callee	printf		2307435	0					
ANR	2307571	Identifier	printf		2307435	0					
ANR	2307572	ArgumentList	"""\\033g%03d"""		2307435	1					
ANR	2307573	Argument	"""\\033g%03d"""		2307435	0					
ANR	2307574	PrimaryExpression	"""\\033g%03d"""		2307435	0					
ANR	2307575	Argument	header -> cupsBytesPerLine		2307435	1					
ANR	2307576	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307577	Identifier	header		2307435	0					
ANR	2307578	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307579	ExpressionStatement	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"	792:1:18803:18854	2307435	5	True				
ANR	2307580	CallExpression	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"		2307435	0					
ANR	2307581	Callee	fwrite		2307435	0					
ANR	2307582	Identifier	fwrite		2307435	0					
ANR	2307583	ArgumentList	Buffer		2307435	1					
ANR	2307584	Argument	Buffer		2307435	0					
ANR	2307585	Identifier	Buffer		2307435	0					
ANR	2307586	Argument	1		2307435	1					
ANR	2307587	PrimaryExpression	1		2307435	0					
ANR	2307588	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307589	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307590	Identifier	header		2307435	0					
ANR	2307591	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307592	Argument	stdout		2307435	3					
ANR	2307593	Identifier	stdout		2307435	0					
ANR	2307594	ExpressionStatement	fflush ( stdout )	793:1:18857:18871	2307435	6	True				
ANR	2307595	CallExpression	fflush ( stdout )		2307435	0					
ANR	2307596	Callee	fflush		2307435	0					
ANR	2307597	Identifier	fflush		2307435	0					
ANR	2307598	ArgumentList	stdout		2307435	1					
ANR	2307599	Argument	stdout		2307435	0					
ANR	2307600	Identifier	stdout		2307435	0					
ANR	2307601	BreakStatement	break ;	794:8:18881:18886	2307435	7	True				
ANR	2307602	Label	case ZEBRA_EPL_PAGE :	796:4:18893:18913	2307435	8	True				
ANR	2307603	Identifier	ZEBRA_EPL_PAGE		2307435	0					
ANR	2307604	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine ) )"		2307435	9					
ANR	2307605	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"	797:12:18927:18991	2307435	0	True				
ANR	2307606	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		2307435	0		||			
ANR	2307607	ArrayIndexing	Buffer [ 0 ]		2307435	0					
ANR	2307608	Identifier	Buffer		2307435	0					
ANR	2307609	PrimaryExpression	0		2307435	1					
ANR	2307610	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		2307435	1					
ANR	2307611	Callee	memcmp		2307435	0					
ANR	2307612	Identifier	memcmp		2307435	0					
ANR	2307613	ArgumentList	Buffer		2307435	1					
ANR	2307614	Argument	Buffer		2307435	0					
ANR	2307615	Identifier	Buffer		2307435	0					
ANR	2307616	Argument	Buffer + 1		2307435	1					
ANR	2307617	AdditiveExpression	Buffer + 1		2307435	0		+			
ANR	2307618	Identifier	Buffer		2307435	0					
ANR	2307619	PrimaryExpression	1		2307435	1					
ANR	2307620	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307621	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307622	Identifier	header		2307435	0					
ANR	2307623	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307624	CompoundStatement		49:1:1131:1131	2307435	1					
ANR	2307625	ExpressionStatement	"printf ( ""GW0,%d,%d,1\\n"" , y , header -> cupsBytesPerLine )"	799:10:19007:19059	2307435	0	True				
ANR	2307626	CallExpression	"printf ( ""GW0,%d,%d,1\\n"" , y , header -> cupsBytesPerLine )"		2307435	0					
ANR	2307627	Callee	printf		2307435	0					
ANR	2307628	Identifier	printf		2307435	0					
ANR	2307629	ArgumentList	"""GW0,%d,%d,1\\n"""		2307435	1					
ANR	2307630	Argument	"""GW0,%d,%d,1\\n"""		2307435	0					
ANR	2307631	PrimaryExpression	"""GW0,%d,%d,1\\n"""		2307435	0					
ANR	2307632	Argument	y		2307435	1					
ANR	2307633	Identifier	y		2307435	0					
ANR	2307634	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307635	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307636	Identifier	header		2307435	0					
ANR	2307637	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307638	ForStatement	"for ( i = header -> cupsBytesPerLine , ptr = Buffer ; i > 0 ; i -- , ptr ++ )"		2307435	1					
ANR	2307639	ForInit	"i = header -> cupsBytesPerLine , ptr = Buffer ;"	800:8:19069:19111	2307435	0	True				
ANR	2307640	Expression	"i = header -> cupsBytesPerLine , ptr = Buffer"		2307435	0					
ANR	2307641	AssignmentExpression	i = header -> cupsBytesPerLine		2307435	0		=			
ANR	2307642	Identifier	i		2307435	0					
ANR	2307643	PtrMemberAccess	header -> cupsBytesPerLine		2307435	1					
ANR	2307644	Identifier	header		2307435	0					
ANR	2307645	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307646	AssignmentExpression	ptr = Buffer		2307435	1		=			
ANR	2307647	Identifier	ptr		2307435	0					
ANR	2307648	Identifier	Buffer		2307435	1					
ANR	2307649	Condition	i > 0	800:52:19113:19117	2307435	1	True				
ANR	2307650	RelationalExpression	i > 0		2307435	0		>			
ANR	2307651	Identifier	i		2307435	0					
ANR	2307652	PrimaryExpression	0		2307435	1					
ANR	2307653	Expression	"i -- , ptr ++"	800:59:19120:19131	2307435	2	True				
ANR	2307654	PostIncDecOperationExpression	i --		2307435	0					
ANR	2307655	Identifier	i		2307435	0					
ANR	2307656	IncDec	--		2307435	1					
ANR	2307657	PostIncDecOperationExpression	ptr ++		2307435	1					
ANR	2307658	Identifier	ptr		2307435	0					
ANR	2307659	IncDec	++		2307435	1					
ANR	2307660	ExpressionStatement	putchar ( ~ * ptr )	801:5:19139:19153	2307435	3	True				
ANR	2307661	CallExpression	putchar ( ~ * ptr )		2307435	0					
ANR	2307662	Callee	putchar		2307435	0					
ANR	2307663	Identifier	putchar		2307435	0					
ANR	2307664	ArgumentList	~ * ptr		2307435	1					
ANR	2307665	Argument	~ * ptr		2307435	0					
ANR	2307666	UnaryOperationExpression	~ * ptr		2307435	0					
ANR	2307667	UnaryOperator	~		2307435	0					
ANR	2307668	UnaryOperationExpression	* ptr		2307435	1					
ANR	2307669	UnaryOperator	*		2307435	0					
ANR	2307670	Identifier	ptr		2307435	1					
ANR	2307671	ExpressionStatement	putchar ( '\\n' )	802:3:19158:19171	2307435	2	True				
ANR	2307672	CallExpression	putchar ( '\\n' )		2307435	0					
ANR	2307673	Callee	putchar		2307435	0					
ANR	2307674	Identifier	putchar		2307435	0					
ANR	2307675	ArgumentList	'\\n'		2307435	1					
ANR	2307676	Argument	'\\n'		2307435	0					
ANR	2307677	PrimaryExpression	'\\n'		2307435	0					
ANR	2307678	ExpressionStatement	fflush ( stdout )	803:3:19176:19190	2307435	3	True				
ANR	2307679	CallExpression	fflush ( stdout )		2307435	0					
ANR	2307680	Callee	fflush		2307435	0					
ANR	2307681	Identifier	fflush		2307435	0					
ANR	2307682	ArgumentList	stdout		2307435	1					
ANR	2307683	Argument	stdout		2307435	0					
ANR	2307684	Identifier	stdout		2307435	0					
ANR	2307685	BreakStatement	break ;	805:8:19203:19208	2307435	10	True				
ANR	2307686	Label	case ZEBRA_ZPL :	807:4:19215:19230	2307435	11	True				
ANR	2307687	Identifier	ZEBRA_ZPL		2307435	0					
ANR	2307688	IfStatement	if ( LastSet )		2307435	12					
ANR	2307689	Condition	LastSet	813:12:19369:19375	2307435	0	True				
ANR	2307690	Identifier	LastSet		2307435	0					
ANR	2307691	CompoundStatement		65:1:1515:1515	2307435	1					
ANR	2307692	IfStatement	"if ( ! memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine ) )"		2307435	0					
ANR	2307693	Condition	"! memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine )"	815:7:19388:19440	2307435	0	True				
ANR	2307694	UnaryOperationExpression	"! memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine )"		2307435	0					
ANR	2307695	UnaryOperator	!		2307435	0					
ANR	2307696	CallExpression	"memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine )"		2307435	1					
ANR	2307697	Callee	memcmp		2307435	0					
ANR	2307698	Identifier	memcmp		2307435	0					
ANR	2307699	ArgumentList	Buffer		2307435	1					
ANR	2307700	Argument	Buffer		2307435	0					
ANR	2307701	Identifier	Buffer		2307435	0					
ANR	2307702	Argument	LastBuffer		2307435	1					
ANR	2307703	Identifier	LastBuffer		2307435	0					
ANR	2307704	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307705	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307706	Identifier	header		2307435	0					
ANR	2307707	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307708	CompoundStatement		67:3:1582:1582	2307435	1					
ANR	2307709	ExpressionStatement	putchar ( ':' )	817:5:19453:19465	2307435	0	True				
ANR	2307710	CallExpression	putchar ( ':' )		2307435	0					
ANR	2307711	Callee	putchar		2307435	0					
ANR	2307712	Identifier	putchar		2307435	0					
ANR	2307713	ArgumentList	':'		2307435	1					
ANR	2307714	Argument	':'		2307435	0					
ANR	2307715	PrimaryExpression	':'		2307435	0					
ANR	2307716	ReturnStatement	return ;	818:5:19472:19478	2307435	1	True				
ANR	2307717	ForStatement	"for ( ptr = Buffer , compptr = CompBuffer , i = header -> cupsBytesPerLine ; i > 0 ; i -- , ptr ++ )"		2307435	13					
ANR	2307718	ForInit	"ptr = Buffer , compptr = CompBuffer , i = header -> cupsBytesPerLine ;"	826:6:19554:19618	2307435	0	True				
ANR	2307719	Expression	"ptr = Buffer , compptr = CompBuffer , i = header -> cupsBytesPerLine"		2307435	0					
ANR	2307720	AssignmentExpression	ptr = Buffer		2307435	0		=			
ANR	2307721	Identifier	ptr		2307435	0					
ANR	2307722	Identifier	Buffer		2307435	1					
ANR	2307723	Expression	"compptr = CompBuffer , i = header -> cupsBytesPerLine"		2307435	1					
ANR	2307724	AssignmentExpression	compptr = CompBuffer		2307435	0		=			
ANR	2307725	Identifier	compptr		2307435	0					
ANR	2307726	Identifier	CompBuffer		2307435	1					
ANR	2307727	AssignmentExpression	i = header -> cupsBytesPerLine		2307435	1		=			
ANR	2307728	Identifier	i		2307435	0					
ANR	2307729	PtrMemberAccess	header -> cupsBytesPerLine		2307435	1					
ANR	2307730	Identifier	header		2307435	0					
ANR	2307731	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307732	Condition	i > 0	827:6:19626:19630	2307435	1	True				
ANR	2307733	RelationalExpression	i > 0		2307435	0		>			
ANR	2307734	Identifier	i		2307435	0					
ANR	2307735	PrimaryExpression	0		2307435	1					
ANR	2307736	Expression	"i -- , ptr ++"	828:6:19639:19650	2307435	2	True				
ANR	2307737	PostIncDecOperationExpression	i --		2307435	0					
ANR	2307738	Identifier	i		2307435	0					
ANR	2307739	IncDec	--		2307435	1					
ANR	2307740	PostIncDecOperationExpression	ptr ++		2307435	1					
ANR	2307741	Identifier	ptr		2307435	0					
ANR	2307742	IncDec	++		2307435	1					
ANR	2307743	CompoundStatement		80:8:1797:1797	2307435	3					
ANR	2307744	ExpressionStatement	* compptr ++ = hex [ * ptr >> 4 ]	830:3:19666:19693	2307435	0	True				
ANR	2307745	AssignmentExpression	* compptr ++ = hex [ * ptr >> 4 ]		2307435	0		=			
ANR	2307746	UnaryOperationExpression	* compptr ++		2307435	0					
ANR	2307747	UnaryOperator	*		2307435	0					
ANR	2307748	PostIncDecOperationExpression	compptr ++		2307435	1					
ANR	2307749	Identifier	compptr		2307435	0					
ANR	2307750	IncDec	++		2307435	1					
ANR	2307751	ArrayIndexing	hex [ * ptr >> 4 ]		2307435	1					
ANR	2307752	Identifier	hex		2307435	0					
ANR	2307753	ShiftExpression	* ptr >> 4		2307435	1		>>			
ANR	2307754	UnaryOperationExpression	* ptr		2307435	0					
ANR	2307755	UnaryOperator	*		2307435	0					
ANR	2307756	Identifier	ptr		2307435	1					
ANR	2307757	PrimaryExpression	4		2307435	1					
ANR	2307758	ExpressionStatement	* compptr ++ = hex [ * ptr & 15 ]	831:3:19698:19725	2307435	1	True				
ANR	2307759	AssignmentExpression	* compptr ++ = hex [ * ptr & 15 ]		2307435	0		=			
ANR	2307760	UnaryOperationExpression	* compptr ++		2307435	0					
ANR	2307761	UnaryOperator	*		2307435	0					
ANR	2307762	PostIncDecOperationExpression	compptr ++		2307435	1					
ANR	2307763	Identifier	compptr		2307435	0					
ANR	2307764	IncDec	++		2307435	1					
ANR	2307765	ArrayIndexing	hex [ * ptr & 15 ]		2307435	1					
ANR	2307766	Identifier	hex		2307435	0					
ANR	2307767	BitAndExpression	* ptr & 15		2307435	1		&			
ANR	2307768	UnaryOperationExpression	* ptr		2307435	0					
ANR	2307769	UnaryOperator	*		2307435	0					
ANR	2307770	Identifier	ptr		2307435	1					
ANR	2307771	PrimaryExpression	15		2307435	1					
ANR	2307772	ExpressionStatement	* compptr = '\\0'	834:8:19739:19754	2307435	14	True				
ANR	2307773	AssignmentExpression	* compptr = '\\0'		2307435	0		=			
ANR	2307774	UnaryOperationExpression	* compptr		2307435	0					
ANR	2307775	UnaryOperator	*		2307435	0					
ANR	2307776	Identifier	compptr		2307435	1					
ANR	2307777	PrimaryExpression	'\\0'		2307435	1					
ANR	2307778	ForStatement	"for ( compptr = CompBuffer + 1 , repeat_char = CompBuffer [ 0 ] , repeat_count = 1 ; * compptr ; compptr ++ )"		2307435	15					
ANR	2307779	ForInit	"compptr = CompBuffer + 1 , repeat_char = CompBuffer [ 0 ] , repeat_count = 1 ;"	840:6:19824:19895	2307435	0	True				
ANR	2307780	Expression	"compptr = CompBuffer + 1 , repeat_char = CompBuffer [ 0 ] , repeat_count = 1"		2307435	0					
ANR	2307781	AssignmentExpression	compptr = CompBuffer + 1		2307435	0		=			
ANR	2307782	Identifier	compptr		2307435	0					
ANR	2307783	AdditiveExpression	CompBuffer + 1		2307435	1		+			
ANR	2307784	Identifier	CompBuffer		2307435	0					
ANR	2307785	PrimaryExpression	1		2307435	1					
ANR	2307786	Expression	"repeat_char = CompBuffer [ 0 ] , repeat_count = 1"		2307435	1					
ANR	2307787	AssignmentExpression	repeat_char = CompBuffer [ 0 ]		2307435	0		=			
ANR	2307788	Identifier	repeat_char		2307435	0					
ANR	2307789	ArrayIndexing	CompBuffer [ 0 ]		2307435	1					
ANR	2307790	Identifier	CompBuffer		2307435	0					
ANR	2307791	PrimaryExpression	0		2307435	1					
ANR	2307792	AssignmentExpression	repeat_count = 1		2307435	1		=			
ANR	2307793	Identifier	repeat_count		2307435	0					
ANR	2307794	PrimaryExpression	1		2307435	1					
ANR	2307795	Condition	* compptr	841:6:19903:19910	2307435	1	True				
ANR	2307796	UnaryOperationExpression	* compptr		2307435	0					
ANR	2307797	UnaryOperator	*		2307435	0					
ANR	2307798	Identifier	compptr		2307435	1					
ANR	2307799	PostIncDecOperationExpression	compptr ++	842:6:19919:19928	2307435	2	True				
ANR	2307800	Identifier	compptr		2307435	0					
ANR	2307801	IncDec	++		2307435	1					
ANR	2307802	IfStatement	if ( * compptr == repeat_char )		2307435	3					
ANR	2307803	Condition	* compptr == repeat_char	843:7:19938:19960	2307435	0	True				
ANR	2307804	EqualityExpression	* compptr == repeat_char		2307435	0		==			
ANR	2307805	UnaryOperationExpression	* compptr		2307435	0					
ANR	2307806	UnaryOperator	*		2307435	0					
ANR	2307807	Identifier	compptr		2307435	1					
ANR	2307808	Identifier	repeat_char		2307435	1					
ANR	2307809	ExpressionStatement	repeat_count ++	844:5:19968:19983	2307435	1	True				
ANR	2307810	PostIncDecOperationExpression	repeat_count ++		2307435	0					
ANR	2307811	Identifier	repeat_count		2307435	0					
ANR	2307812	IncDec	++		2307435	1					
ANR	2307813	ElseStatement	else		2307435	0					
ANR	2307814	CompoundStatement		97:3:2132:2132	2307435	0					
ANR	2307815	ExpressionStatement	"ZPLCompress ( repeat_char , repeat_count )"	847:5:20003:20041	2307435	0	True				
ANR	2307816	CallExpression	"ZPLCompress ( repeat_char , repeat_count )"		2307435	0					
ANR	2307817	Callee	ZPLCompress		2307435	0					
ANR	2307818	Identifier	ZPLCompress		2307435	0					
ANR	2307819	ArgumentList	repeat_char		2307435	1					
ANR	2307820	Argument	repeat_char		2307435	0					
ANR	2307821	Identifier	repeat_char		2307435	0					
ANR	2307822	Argument	repeat_count		2307435	1					
ANR	2307823	Identifier	repeat_count		2307435	0					
ANR	2307824	ExpressionStatement	repeat_char = * compptr	848:5:20048:20071	2307435	1	True				
ANR	2307825	AssignmentExpression	repeat_char = * compptr		2307435	0		=			
ANR	2307826	Identifier	repeat_char		2307435	0					
ANR	2307827	UnaryOperationExpression	* compptr		2307435	1					
ANR	2307828	UnaryOperator	*		2307435	0					
ANR	2307829	Identifier	compptr		2307435	1					
ANR	2307830	ExpressionStatement	repeat_count = 1	849:5:20078:20094	2307435	2	True				
ANR	2307831	AssignmentExpression	repeat_count = 1		2307435	0		=			
ANR	2307832	Identifier	repeat_count		2307435	0					
ANR	2307833	PrimaryExpression	1		2307435	1					
ANR	2307834	IfStatement	if ( repeat_char == '0' )		2307435	16					
ANR	2307835	Condition	repeat_char == '0'	852:12:20114:20131	2307435	0	True				
ANR	2307836	EqualityExpression	repeat_char == '0'		2307435	0		==			
ANR	2307837	Identifier	repeat_char		2307435	0					
ANR	2307838	PrimaryExpression	'0'		2307435	1					
ANR	2307839	CompoundStatement		104:1:2271:2271	2307435	1					
ANR	2307840	IfStatement	if ( repeat_count & 1 )		2307435	0					
ANR	2307841	Condition	repeat_count & 1	858:7:20198:20213	2307435	0	True				
ANR	2307842	BitAndExpression	repeat_count & 1		2307435	0		&			
ANR	2307843	Identifier	repeat_count		2307435	0					
ANR	2307844	PrimaryExpression	1		2307435	1					
ANR	2307845	CompoundStatement		110:3:2355:2355	2307435	1					
ANR	2307846	ExpressionStatement	repeat_count --	860:5:20226:20241	2307435	0	True				
ANR	2307847	PostIncDecOperationExpression	repeat_count --		2307435	0					
ANR	2307848	Identifier	repeat_count		2307435	0					
ANR	2307849	IncDec	--		2307435	1					
ANR	2307850	ExpressionStatement	putchar ( '0' )	861:5:20248:20260	2307435	1	True				
ANR	2307851	CallExpression	putchar ( '0' )		2307435	0					
ANR	2307852	Callee	putchar		2307435	0					
ANR	2307853	Identifier	putchar		2307435	0					
ANR	2307854	ArgumentList	'0'		2307435	1					
ANR	2307855	Argument	'0'		2307435	0					
ANR	2307856	PrimaryExpression	'0'		2307435	0					
ANR	2307857	IfStatement	if ( repeat_count > 0 )		2307435	1					
ANR	2307858	Condition	repeat_count > 0	864:14:20282:20297	2307435	0	True				
ANR	2307859	RelationalExpression	repeat_count > 0		2307435	0		>			
ANR	2307860	Identifier	repeat_count		2307435	0					
ANR	2307861	PrimaryExpression	0		2307435	1					
ANR	2307862	ExpressionStatement	"putchar ( ',' )"	865:5:20305:20317	2307435	1	True				
ANR	2307863	CallExpression	"putchar ( ',' )"		2307435	0					
ANR	2307864	Callee	putchar		2307435	0					
ANR	2307865	Identifier	putchar		2307435	0					
ANR	2307866	ArgumentList	"','"		2307435	1					
ANR	2307867	Argument	"','"		2307435	0					
ANR	2307868	PrimaryExpression	"','"		2307435	0					
ANR	2307869	ElseStatement	else		2307435	0					
ANR	2307870	ExpressionStatement	"ZPLCompress ( repeat_char , repeat_count )"	868:3:20331:20369	2307435	0	True				
ANR	2307871	CallExpression	"ZPLCompress ( repeat_char , repeat_count )"		2307435	0					
ANR	2307872	Callee	ZPLCompress		2307435	0					
ANR	2307873	Identifier	ZPLCompress		2307435	0					
ANR	2307874	ArgumentList	repeat_char		2307435	1					
ANR	2307875	Argument	repeat_char		2307435	0					
ANR	2307876	Identifier	repeat_char		2307435	0					
ANR	2307877	Argument	repeat_count		2307435	1					
ANR	2307878	Identifier	repeat_count		2307435	0					
ANR	2307879	ExpressionStatement	fflush ( stdout )	870:1:20373:20387	2307435	17	True				
ANR	2307880	CallExpression	fflush ( stdout )		2307435	0					
ANR	2307881	Callee	fflush		2307435	0					
ANR	2307882	Identifier	fflush		2307435	0					
ANR	2307883	ArgumentList	stdout		2307435	1					
ANR	2307884	Argument	stdout		2307435	0					
ANR	2307885	Identifier	stdout		2307435	0					
ANR	2307886	ExpressionStatement	"memcpy ( LastBuffer , Buffer , header -> cupsBytesPerLine )"	876:1:20453:20505	2307435	18	True				
ANR	2307887	CallExpression	"memcpy ( LastBuffer , Buffer , header -> cupsBytesPerLine )"		2307435	0					
ANR	2307888	Callee	memcpy		2307435	0					
ANR	2307889	Identifier	memcpy		2307435	0					
ANR	2307890	ArgumentList	LastBuffer		2307435	1					
ANR	2307891	Argument	LastBuffer		2307435	0					
ANR	2307892	Identifier	LastBuffer		2307435	0					
ANR	2307893	Argument	Buffer		2307435	1					
ANR	2307894	Identifier	Buffer		2307435	0					
ANR	2307895	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307896	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307897	Identifier	header		2307435	0					
ANR	2307898	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307899	ExpressionStatement	LastSet = 1	877:1:20508:20519	2307435	19	True				
ANR	2307900	AssignmentExpression	LastSet = 1		2307435	0		=			
ANR	2307901	Identifier	LastSet		2307435	0					
ANR	2307902	PrimaryExpression	1		2307435	1					
ANR	2307903	BreakStatement	break ;	878:8:20529:20534	2307435	20	True				
ANR	2307904	Label	case ZEBRA_CPCL :	880:4:20541:20557	2307435	21	True				
ANR	2307905	Identifier	ZEBRA_CPCL		2307435	0					
ANR	2307906	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine ) )"		2307435	22					
ANR	2307907	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"	881:12:20571:20635	2307435	0	True				
ANR	2307908	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		2307435	0		||			
ANR	2307909	ArrayIndexing	Buffer [ 0 ]		2307435	0					
ANR	2307910	Identifier	Buffer		2307435	0					
ANR	2307911	PrimaryExpression	0		2307435	1					
ANR	2307912	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		2307435	1					
ANR	2307913	Callee	memcmp		2307435	0					
ANR	2307914	Identifier	memcmp		2307435	0					
ANR	2307915	ArgumentList	Buffer		2307435	1					
ANR	2307916	Argument	Buffer		2307435	0					
ANR	2307917	Identifier	Buffer		2307435	0					
ANR	2307918	Argument	Buffer + 1		2307435	1					
ANR	2307919	AdditiveExpression	Buffer + 1		2307435	0		+			
ANR	2307920	Identifier	Buffer		2307435	0					
ANR	2307921	PrimaryExpression	1		2307435	1					
ANR	2307922	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307923	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307924	Identifier	header		2307435	0					
ANR	2307925	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307926	CompoundStatement		133:1:2775:2775	2307435	1					
ANR	2307927	ExpressionStatement	"printf ( ""CG %u 1 0 %d "" , header -> cupsBytesPerLine , y )"	883:3:20644:20696	2307435	0	True				
ANR	2307928	CallExpression	"printf ( ""CG %u 1 0 %d "" , header -> cupsBytesPerLine , y )"		2307435	0					
ANR	2307929	Callee	printf		2307435	0					
ANR	2307930	Identifier	printf		2307435	0					
ANR	2307931	ArgumentList	"""CG %u 1 0 %d """		2307435	1					
ANR	2307932	Argument	"""CG %u 1 0 %d """		2307435	0					
ANR	2307933	PrimaryExpression	"""CG %u 1 0 %d """		2307435	0					
ANR	2307934	Argument	header -> cupsBytesPerLine		2307435	1					
ANR	2307935	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307936	Identifier	header		2307435	0					
ANR	2307937	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307938	Argument	y		2307435	2					
ANR	2307939	Identifier	y		2307435	0					
ANR	2307940	ExpressionStatement	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"	884:10:20708:20759	2307435	1	True				
ANR	2307941	CallExpression	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"		2307435	0					
ANR	2307942	Callee	fwrite		2307435	0					
ANR	2307943	Identifier	fwrite		2307435	0					
ANR	2307944	ArgumentList	Buffer		2307435	1					
ANR	2307945	Argument	Buffer		2307435	0					
ANR	2307946	Identifier	Buffer		2307435	0					
ANR	2307947	Argument	1		2307435	1					
ANR	2307948	PrimaryExpression	1		2307435	0					
ANR	2307949	Argument	header -> cupsBytesPerLine		2307435	2					
ANR	2307950	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307951	Identifier	header		2307435	0					
ANR	2307952	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307953	Argument	stdout		2307435	3					
ANR	2307954	Identifier	stdout		2307435	0					
ANR	2307955	ExpressionStatement	"puts ( ""\\r"" )"	885:3:20764:20774	2307435	2	True				
ANR	2307956	CallExpression	"puts ( ""\\r"" )"		2307435	0					
ANR	2307957	Callee	puts		2307435	0					
ANR	2307958	Identifier	puts		2307435	0					
ANR	2307959	ArgumentList	"""\\r"""		2307435	1					
ANR	2307960	Argument	"""\\r"""		2307435	0					
ANR	2307961	PrimaryExpression	"""\\r"""		2307435	0					
ANR	2307962	ExpressionStatement	fflush ( stdout )	886:3:20779:20793	2307435	3	True				
ANR	2307963	CallExpression	fflush ( stdout )		2307435	0					
ANR	2307964	Callee	fflush		2307435	0					
ANR	2307965	Identifier	fflush		2307435	0					
ANR	2307966	ArgumentList	stdout		2307435	1					
ANR	2307967	Argument	stdout		2307435	0					
ANR	2307968	Identifier	stdout		2307435	0					
ANR	2307969	BreakStatement	break ;	888:1:20799:20804	2307435	23	True				
ANR	2307970	Label	case INTELLITECH_PCL :	890:4:20811:20832	2307435	24	True				
ANR	2307971	Identifier	INTELLITECH_PCL		2307435	0					
ANR	2307972	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 ) )"		2307435	25					
ANR	2307973	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"	891:5:20839:20919	2307435	0	True				
ANR	2307974	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		2307435	0		||			
ANR	2307975	ArrayIndexing	Buffer [ 0 ]		2307435	0					
ANR	2307976	Identifier	Buffer		2307435	0					
ANR	2307977	PrimaryExpression	0		2307435	1					
ANR	2307978	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		2307435	1					
ANR	2307979	Callee	memcmp		2307435	0					
ANR	2307980	Identifier	memcmp		2307435	0					
ANR	2307981	ArgumentList	Buffer		2307435	1					
ANR	2307982	Argument	Buffer		2307435	0					
ANR	2307983	Identifier	Buffer		2307435	0					
ANR	2307984	Argument	Buffer + 1		2307435	1					
ANR	2307985	AdditiveExpression	Buffer + 1		2307435	0		+			
ANR	2307986	Identifier	Buffer		2307435	0					
ANR	2307987	PrimaryExpression	1		2307435	1					
ANR	2307988	Argument	header -> cupsBytesPerLine - 1		2307435	2					
ANR	2307989	AdditiveExpression	header -> cupsBytesPerLine - 1		2307435	0		-			
ANR	2307990	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2307991	Identifier	header		2307435	0					
ANR	2307992	Identifier	cupsBytesPerLine		2307435	1					
ANR	2307993	PrimaryExpression	1		2307435	1					
ANR	2307994	CompoundStatement		144:8:3066:3066	2307435	1					
ANR	2307995	IfStatement	if ( Feed )		2307435	0					
ANR	2307996	Condition	Feed	894:7:20939:20942	2307435	0	True				
ANR	2307997	Identifier	Feed		2307435	0					
ANR	2307998	CompoundStatement		146:3:3084:3084	2307435	1					
ANR	2307999	ExpressionStatement	"printf ( ""\\033*b%dY"" , Feed )"	896:5:20955:20980	2307435	0	True				
ANR	2308000	CallExpression	"printf ( ""\\033*b%dY"" , Feed )"		2307435	0					
ANR	2308001	Callee	printf		2307435	0					
ANR	2308002	Identifier	printf		2307435	0					
ANR	2308003	ArgumentList	"""\\033*b%dY"""		2307435	1					
ANR	2308004	Argument	"""\\033*b%dY"""		2307435	0					
ANR	2308005	PrimaryExpression	"""\\033*b%dY"""		2307435	0					
ANR	2308006	Argument	Feed		2307435	1					
ANR	2308007	Identifier	Feed		2307435	0					
ANR	2308008	ExpressionStatement	Feed = 0	897:5:20987:20998	2307435	1	True				
ANR	2308009	AssignmentExpression	Feed = 0		2307435	0		=			
ANR	2308010	Identifier	Feed		2307435	0					
ANR	2308011	PrimaryExpression	0		2307435	1					
ANR	2308012	ExpressionStatement	LastSet = 0	898:5:21005:21016	2307435	2	True				
ANR	2308013	AssignmentExpression	LastSet = 0		2307435	0		=			
ANR	2308014	Identifier	LastSet		2307435	0					
ANR	2308015	PrimaryExpression	0		2307435	1					
ANR	2308016	ExpressionStatement	"PCLCompress ( Buffer , header -> cupsBytesPerLine )"	901:10:21034:21079	2307435	1	True				
ANR	2308017	CallExpression	"PCLCompress ( Buffer , header -> cupsBytesPerLine )"		2307435	0					
ANR	2308018	Callee	PCLCompress		2307435	0					
ANR	2308019	Identifier	PCLCompress		2307435	0					
ANR	2308020	ArgumentList	Buffer		2307435	1					
ANR	2308021	Argument	Buffer		2307435	0					
ANR	2308022	Identifier	Buffer		2307435	0					
ANR	2308023	Argument	header -> cupsBytesPerLine		2307435	1					
ANR	2308024	PtrMemberAccess	header -> cupsBytesPerLine		2307435	0					
ANR	2308025	Identifier	header		2307435	0					
ANR	2308026	Identifier	cupsBytesPerLine		2307435	1					
ANR	2308027	ElseStatement	else		2307435	0					
ANR	2308028	ExpressionStatement	Feed ++	904:3:21093:21100	2307435	0	True				
ANR	2308029	PostIncDecOperationExpression	Feed ++		2307435	0					
ANR	2308030	Identifier	Feed		2307435	0					
ANR	2308031	IncDec	++		2307435	1					
ANR	2308032	BreakStatement	break ;	905:8:21110:21115	2307435	26	True				
ANR	2308033	ReturnType	void		2307435	1					
ANR	2308034	Identifier	OutputLine		2307435	2					
ANR	2308035	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header , int y"		2307435	3					
ANR	2308036	Parameter	ppd_file_t * ppd	747:11:17702:17724	2307435	0	True				
ANR	2308037	ParameterType	ppd_file_t *		2307435	0					
ANR	2308038	Identifier	ppd		2307435	1					
ANR	2308039	Parameter	cups_page_header2_t * header	748:11:17757:17783	2307435	1	True				
ANR	2308040	ParameterType	cups_page_header2_t *		2307435	0					
ANR	2308041	Identifier	header		2307435	1					
ANR	2308042	Parameter	int y	749:11:17819:17838	2307435	2	True				
ANR	2308043	ParameterType	int		2307435	0					
ANR	2308044	Identifier	y		2307435	1					
ANR	2308045	CFGEntryNode	ENTRY		2307435		True				
ANR	2308046	CFGExitNode	EXIT		2307435		True				
ANR	2308047	Symbol	* * ptr		2307435						
ANR	2308048	Symbol	stdout		2307435						
ANR	2308049	Symbol	* compptr ++		2307435						
ANR	2308050	Symbol	repeat_char		2307435						
ANR	2308051	Symbol	repeat_count		2307435						
ANR	2308052	Symbol	* compptr		2307435						
ANR	2308053	Symbol	memcmp		2307435						
ANR	2308054	Symbol	compptr		2307435						
ANR	2308055	Symbol	* ptr		2307435						
ANR	2308056	Symbol	hex		2307435						
ANR	2308057	Symbol	header -> cupsBytesPerLine		2307435						
ANR	2308058	Symbol	Feed		2307435						
ANR	2308059	Symbol	ModelNumber		2307435						
ANR	2308060	Symbol	Buffer		2307435						
ANR	2308061	Symbol	LastBuffer		2307435						
ANR	2308062	Symbol	ppd		2307435						
ANR	2308063	Symbol	LastSet		2307435						
ANR	2308064	Symbol	i		2307435						
ANR	2308065	Symbol	* header		2307435						
ANR	2308066	Symbol	ptr		2307435						
ANR	2308067	Symbol	* Buffer		2307435						
ANR	2308068	Symbol	CompBuffer		2307435						
ANR	2308069	Symbol	header		2307435						
ANR	2308070	Symbol	y		2307435						
ANR	2308071	Symbol	* hex		2307435						
ANR	2308072	Symbol	* CompBuffer		2307435						
ANR	2308073	Function	PCLCompress	914:0:21193:23582							
ANR	2308074	FunctionDef	"PCLCompress (unsigned char * line , int length)"		2308073	0					
ANR	2308075	CompoundStatement		917:0:21317:23582	2308073	0					
ANR	2308076	IdentifierDeclStatement	"unsigned char * line_ptr , * line_end , * comp_ptr , * start , * seed ;"	918:2:21321:21547	2308073	0	True				
ANR	2308077	IdentifierDecl	* line_ptr		2308073	0					
ANR	2308078	IdentifierDeclType	unsigned char *		2308073	0					
ANR	2308079	Identifier	line_ptr		2308073	1					
ANR	2308080	IdentifierDecl	* line_end		2308073	1					
ANR	2308081	IdentifierDeclType	unsigned char *		2308073	0					
ANR	2308082	Identifier	line_end		2308073	1					
ANR	2308083	IdentifierDecl	* comp_ptr		2308073	2					
ANR	2308084	IdentifierDeclType	unsigned char *		2308073	0					
ANR	2308085	Identifier	comp_ptr		2308073	1					
ANR	2308086	IdentifierDecl	* start		2308073	3					
ANR	2308087	IdentifierDeclType	unsigned char *		2308073	0					
ANR	2308088	Identifier	start		2308073	1					
ANR	2308089	IdentifierDecl	* seed		2308073	4					
ANR	2308090	IdentifierDeclType	unsigned char *		2308073	0					
ANR	2308091	Identifier	seed		2308073	1					
ANR	2308092	IdentifierDeclStatement	"int count , offset ;"	923:2:21579:21642	2308073	1	True				
ANR	2308093	IdentifierDecl	count		2308073	0					
ANR	2308094	IdentifierDeclType	int		2308073	0					
ANR	2308095	Identifier	count		2308073	1					
ANR	2308096	IdentifierDecl	offset		2308073	1					
ANR	2308097	IdentifierDeclType	int		2308073	0					
ANR	2308098	Identifier	offset		2308073	1					
ANR	2308099	ExpressionStatement	line_ptr = line	931:2:21725:21740	2308073	2	True				
ANR	2308100	AssignmentExpression	line_ptr = line		2308073	0		=			
ANR	2308101	Identifier	line_ptr		2308073	0					
ANR	2308102	Identifier	line		2308073	1					
ANR	2308103	ExpressionStatement	line_end = line + length	932:2:21744:21768	2308073	3	True				
ANR	2308104	AssignmentExpression	line_end = line + length		2308073	0		=			
ANR	2308105	Identifier	line_end		2308073	0					
ANR	2308106	AdditiveExpression	line + length		2308073	1		+			
ANR	2308107	Identifier	line		2308073	0					
ANR	2308108	Identifier	length		2308073	1					
ANR	2308109	ExpressionStatement	comp_ptr = CompBuffer	934:2:21773:21794	2308073	4	True				
ANR	2308110	AssignmentExpression	comp_ptr = CompBuffer		2308073	0		=			
ANR	2308111	Identifier	comp_ptr		2308073	0					
ANR	2308112	Identifier	CompBuffer		2308073	1					
ANR	2308113	ExpressionStatement	seed = LastBuffer	935:2:21798:21819	2308073	5	True				
ANR	2308114	AssignmentExpression	seed = LastBuffer		2308073	0		=			
ANR	2308115	Identifier	seed		2308073	0					
ANR	2308116	Identifier	LastBuffer		2308073	1					
ANR	2308117	WhileStatement	while ( line_ptr < line_end )		2308073	6					
ANR	2308118	Condition	line_ptr < line_end	937:9:21831:21849	2308073	0	True				
ANR	2308119	RelationalExpression	line_ptr < line_end		2308073	0		<			
ANR	2308120	Identifier	line_ptr		2308073	0					
ANR	2308121	Identifier	line_end		2308073	1					
ANR	2308122	CompoundStatement		22:2:536:536	2308073	1					
ANR	2308123	ExpressionStatement	start = line_ptr	943:4:21919:21935	2308073	0	True				
ANR	2308124	AssignmentExpression	start = line_ptr		2308073	0		=			
ANR	2308125	Identifier	start		2308073	0					
ANR	2308126	Identifier	line_ptr		2308073	1					
ANR	2308127	IfStatement	if ( ! LastSet )		2308073	1					
ANR	2308128	Condition	! LastSet	945:8:21946:21953	2308073	0	True				
ANR	2308129	UnaryOperationExpression	! LastSet		2308073	0					
ANR	2308130	UnaryOperator	!		2308073	0					
ANR	2308131	Identifier	LastSet		2308073	1					
ANR	2308132	CompoundStatement		30:4:642:642	2308073	1					
ANR	2308133	ExpressionStatement	offset = 0	951:6:22053:22063	2308073	0	True				
ANR	2308134	AssignmentExpression	offset = 0		2308073	0		=			
ANR	2308135	Identifier	offset		2308073	0					
ANR	2308136	PrimaryExpression	0		2308073	1					
ANR	2308137	IfStatement	if ( ( count = line_end - line_ptr ) > 8 )		2308073	1					
ANR	2308138	Condition	( count = line_end - line_ptr ) > 8	953:10:22076:22108	2308073	0	True				
ANR	2308139	RelationalExpression	( count = line_end - line_ptr ) > 8		2308073	0		>			
ANR	2308140	AssignmentExpression	count = line_end - line_ptr		2308073	0		=			
ANR	2308141	Identifier	count		2308073	0					
ANR	2308142	AdditiveExpression	line_end - line_ptr		2308073	1		-			
ANR	2308143	Identifier	line_end		2308073	0					
ANR	2308144	Identifier	line_ptr		2308073	1					
ANR	2308145	PrimaryExpression	8		2308073	1					
ANR	2308146	ExpressionStatement	count = 8	954:1:22112:22121	2308073	1	True				
ANR	2308147	AssignmentExpression	count = 8		2308073	0		=			
ANR	2308148	Identifier	count		2308073	0					
ANR	2308149	PrimaryExpression	8		2308073	1					
ANR	2308150	ExpressionStatement	line_ptr += count	956:6:22130:22147	2308073	2	True				
ANR	2308151	AssignmentExpression	line_ptr += count		2308073	0		+=			
ANR	2308152	Identifier	line_ptr		2308073	0					
ANR	2308153	Identifier	count		2308073	1					
ANR	2308154	ElseStatement	else		2308073	0					
ANR	2308155	CompoundStatement		43:4:850:850	2308073	0					
ANR	2308156	WhileStatement	while ( * line_ptr == * seed && line_ptr < line_end )		2308073	0					
ANR	2308157	Condition	* line_ptr == * seed && line_ptr < line_end	964:13:22260:22313	2308073	0	True				
ANR	2308158	AndExpression	* line_ptr == * seed && line_ptr < line_end		2308073	0		&&			
ANR	2308159	EqualityExpression	* line_ptr == * seed		2308073	0		==			
ANR	2308160	UnaryOperationExpression	* line_ptr		2308073	0					
ANR	2308161	UnaryOperator	*		2308073	0					
ANR	2308162	Identifier	line_ptr		2308073	1					
ANR	2308163	UnaryOperationExpression	* seed		2308073	1					
ANR	2308164	UnaryOperator	*		2308073	0					
ANR	2308165	Identifier	seed		2308073	1					
ANR	2308166	RelationalExpression	line_ptr < line_end		2308073	1		<			
ANR	2308167	Identifier	line_ptr		2308073	0					
ANR	2308168	Identifier	line_end		2308073	1					
ANR	2308169	CompoundStatement		50:6:1004:1004	2308073	1					
ANR	2308170	ExpressionStatement	line_ptr ++	967:8:22332:22343	2308073	0	True				
ANR	2308171	PostIncDecOperationExpression	line_ptr ++		2308073	0					
ANR	2308172	Identifier	line_ptr		2308073	0					
ANR	2308173	IncDec	++		2308073	1					
ANR	2308174	ExpressionStatement	seed ++	968:8:22353:22360	2308073	1	True				
ANR	2308175	PostIncDecOperationExpression	seed ++		2308073	0					
ANR	2308176	Identifier	seed		2308073	0					
ANR	2308177	IncDec	++		2308073	1					
ANR	2308178	IfStatement	if ( line_ptr == line_end )		2308073	1					
ANR	2308179	Condition	line_ptr == line_end	971:10:22381:22400	2308073	0	True				
ANR	2308180	EqualityExpression	line_ptr == line_end		2308073	0		==			
ANR	2308181	Identifier	line_ptr		2308073	0					
ANR	2308182	Identifier	line_end		2308073	1					
ANR	2308183	BreakStatement	break ;	972:8:22411:22416	2308073	1	True				
ANR	2308184	ExpressionStatement	offset = line_ptr - start	974:6:22425:22450	2308073	2	True				
ANR	2308185	AssignmentExpression	offset = line_ptr - start		2308073	0		=			
ANR	2308186	Identifier	offset		2308073	0					
ANR	2308187	AdditiveExpression	line_ptr - start		2308073	1		-			
ANR	2308188	Identifier	line_ptr		2308073	0					
ANR	2308189	Identifier	start		2308073	1					
ANR	2308190	ExpressionStatement	start = line_ptr	980:6:22520:22536	2308073	3	True				
ANR	2308191	AssignmentExpression	start = line_ptr		2308073	0		=			
ANR	2308192	Identifier	start		2308073	0					
ANR	2308193	Identifier	line_ptr		2308073	1					
ANR	2308194	ExpressionStatement	count = 0	981:6:22544:22553	2308073	4	True				
ANR	2308195	AssignmentExpression	count = 0		2308073	0		=			
ANR	2308196	Identifier	count		2308073	0					
ANR	2308197	PrimaryExpression	0		2308073	1					
ANR	2308198	WhileStatement	while ( * line_ptr != * seed && line_ptr < line_end && count < 8 )		2308073	5					
ANR	2308199	Condition	* line_ptr != * seed && line_ptr < line_end && count < 8	982:13:22568:22647	2308073	0	True				
ANR	2308200	AndExpression	* line_ptr != * seed && line_ptr < line_end && count < 8		2308073	0		&&			
ANR	2308201	EqualityExpression	* line_ptr != * seed		2308073	0		!=			
ANR	2308202	UnaryOperationExpression	* line_ptr		2308073	0					
ANR	2308203	UnaryOperator	*		2308073	0					
ANR	2308204	Identifier	line_ptr		2308073	1					
ANR	2308205	UnaryOperationExpression	* seed		2308073	1					
ANR	2308206	UnaryOperator	*		2308073	0					
ANR	2308207	Identifier	seed		2308073	1					
ANR	2308208	AndExpression	line_ptr < line_end && count < 8		2308073	1		&&			
ANR	2308209	RelationalExpression	line_ptr < line_end		2308073	0		<			
ANR	2308210	Identifier	line_ptr		2308073	0					
ANR	2308211	Identifier	line_end		2308073	1					
ANR	2308212	RelationalExpression	count < 8		2308073	1		<			
ANR	2308213	Identifier	count		2308073	0					
ANR	2308214	PrimaryExpression	8		2308073	1					
ANR	2308215	CompoundStatement		69:6:1338:1338	2308073	1					
ANR	2308216	ExpressionStatement	line_ptr ++	986:8:22666:22677	2308073	0	True				
ANR	2308217	PostIncDecOperationExpression	line_ptr ++		2308073	0					
ANR	2308218	Identifier	line_ptr		2308073	0					
ANR	2308219	IncDec	++		2308073	1					
ANR	2308220	ExpressionStatement	seed ++	987:8:22687:22694	2308073	1	True				
ANR	2308221	PostIncDecOperationExpression	seed ++		2308073	0					
ANR	2308222	Identifier	seed		2308073	0					
ANR	2308223	IncDec	++		2308073	1					
ANR	2308224	ExpressionStatement	count ++	988:8:22704:22712	2308073	2	True				
ANR	2308225	PostIncDecOperationExpression	count ++		2308073	0					
ANR	2308226	Identifier	count		2308073	0					
ANR	2308227	IncDec	++		2308073	1					
ANR	2308228	IfStatement	if ( offset >= 31 )		2308073	2					
ANR	2308229	Condition	offset >= 31	997:8:22838:22849	2308073	0	True				
ANR	2308230	RelationalExpression	offset >= 31		2308073	0		>=			
ANR	2308231	Identifier	offset		2308073	0					
ANR	2308232	PrimaryExpression	31		2308073	1					
ANR	2308233	CompoundStatement		82:4:1538:1538	2308073	1					
ANR	2308234	ExpressionStatement	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | 31	1003:6:22918:22955	2308073	0	True				
ANR	2308235	AssignmentExpression	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | 31		2308073	0		=			
ANR	2308236	UnaryOperationExpression	* comp_ptr ++		2308073	0					
ANR	2308237	UnaryOperator	*		2308073	0					
ANR	2308238	PostIncDecOperationExpression	comp_ptr ++		2308073	1					
ANR	2308239	Identifier	comp_ptr		2308073	0					
ANR	2308240	IncDec	++		2308073	1					
ANR	2308241	InclusiveOrExpression	( ( count - 1 ) << 5 ) | 31		2308073	1		|			
ANR	2308242	ShiftExpression	( count - 1 ) << 5		2308073	0		<<			
ANR	2308243	AdditiveExpression	count - 1		2308073	0		-			
ANR	2308244	Identifier	count		2308073	0					
ANR	2308245	PrimaryExpression	1		2308073	1					
ANR	2308246	PrimaryExpression	5		2308073	1					
ANR	2308247	PrimaryExpression	31		2308073	1					
ANR	2308248	ExpressionStatement	offset -= 31	1005:6:22964:22976	2308073	1	True				
ANR	2308249	AssignmentExpression	offset -= 31		2308073	0		-=			
ANR	2308250	Identifier	offset		2308073	0					
ANR	2308251	PrimaryExpression	31		2308073	1					
ANR	2308252	WhileStatement	while ( offset >= 255 )		2308073	2					
ANR	2308253	Condition	offset >= 255	1006:13:22991:23003	2308073	0	True				
ANR	2308254	RelationalExpression	offset >= 255		2308073	0		>=			
ANR	2308255	Identifier	offset		2308073	0					
ANR	2308256	PrimaryExpression	255		2308073	1					
ANR	2308257	CompoundStatement		91:6:1694:1694	2308073	1					
ANR	2308258	ExpressionStatement	* comp_ptr ++ = 255	1008:8:23022:23039	2308073	0	True				
ANR	2308259	AssignmentExpression	* comp_ptr ++ = 255		2308073	0		=			
ANR	2308260	UnaryOperationExpression	* comp_ptr ++		2308073	0					
ANR	2308261	UnaryOperator	*		2308073	0					
ANR	2308262	PostIncDecOperationExpression	comp_ptr ++		2308073	1					
ANR	2308263	Identifier	comp_ptr		2308073	0					
ANR	2308264	IncDec	++		2308073	1					
ANR	2308265	PrimaryExpression	255		2308073	1					
ANR	2308266	ExpressionStatement	offset -= 255	1009:8:23049:23065	2308073	1	True				
ANR	2308267	AssignmentExpression	offset -= 255		2308073	0		-=			
ANR	2308268	Identifier	offset		2308073	0					
ANR	2308269	PrimaryExpression	255		2308073	1					
ANR	2308270	ExpressionStatement	* comp_ptr ++ = offset	1012:6:23082:23102	2308073	3	True				
ANR	2308271	AssignmentExpression	* comp_ptr ++ = offset		2308073	0		=			
ANR	2308272	UnaryOperationExpression	* comp_ptr ++		2308073	0					
ANR	2308273	UnaryOperator	*		2308073	0					
ANR	2308274	PostIncDecOperationExpression	comp_ptr ++		2308073	1					
ANR	2308275	Identifier	comp_ptr		2308073	0					
ANR	2308276	IncDec	++		2308073	1					
ANR	2308277	Identifier	offset		2308073	1					
ANR	2308278	ElseStatement	else		2308073	0					
ANR	2308279	CompoundStatement		99:4:1805:1805	2308073	0					
ANR	2308280	ExpressionStatement	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | offset	1020:6:23186:23227	2308073	0	True				
ANR	2308281	AssignmentExpression	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | offset		2308073	0		=			
ANR	2308282	UnaryOperationExpression	* comp_ptr ++		2308073	0					
ANR	2308283	UnaryOperator	*		2308073	0					
ANR	2308284	PostIncDecOperationExpression	comp_ptr ++		2308073	1					
ANR	2308285	Identifier	comp_ptr		2308073	0					
ANR	2308286	IncDec	++		2308073	1					
ANR	2308287	InclusiveOrExpression	( ( count - 1 ) << 5 ) | offset		2308073	1		|			
ANR	2308288	ShiftExpression	( count - 1 ) << 5		2308073	0		<<			
ANR	2308289	AdditiveExpression	count - 1		2308073	0		-			
ANR	2308290	Identifier	count		2308073	0					
ANR	2308291	PrimaryExpression	1		2308073	1					
ANR	2308292	PrimaryExpression	5		2308073	1					
ANR	2308293	Identifier	offset		2308073	1					
ANR	2308294	ExpressionStatement	"memcpy ( comp_ptr , start , count )"	1023:4:23240:23270	2308073	3	True				
ANR	2308295	CallExpression	"memcpy ( comp_ptr , start , count )"		2308073	0					
ANR	2308296	Callee	memcpy		2308073	0					
ANR	2308297	Identifier	memcpy		2308073	0					
ANR	2308298	ArgumentList	comp_ptr		2308073	1					
ANR	2308299	Argument	comp_ptr		2308073	0					
ANR	2308300	Identifier	comp_ptr		2308073	0					
ANR	2308301	Argument	start		2308073	1					
ANR	2308302	Identifier	start		2308073	0					
ANR	2308303	Argument	count		2308073	2					
ANR	2308304	Identifier	count		2308073	0					
ANR	2308305	ExpressionStatement	comp_ptr += count	1024:4:23276:23293	2308073	4	True				
ANR	2308306	AssignmentExpression	comp_ptr += count		2308073	0		+=			
ANR	2308307	Identifier	comp_ptr		2308073	0					
ANR	2308308	Identifier	count		2308073	1					
ANR	2308309	ExpressionStatement	"printf ( ""\\033*b%dW"" , ( int ) ( comp_ptr - CompBuffer ) )"	1031:2:23359:23408	2308073	7	True				
ANR	2308310	CallExpression	"printf ( ""\\033*b%dW"" , ( int ) ( comp_ptr - CompBuffer ) )"		2308073	0					
ANR	2308311	Callee	printf		2308073	0					
ANR	2308312	Identifier	printf		2308073	0					
ANR	2308313	ArgumentList	"""\\033*b%dW"""		2308073	1					
ANR	2308314	Argument	"""\\033*b%dW"""		2308073	0					
ANR	2308315	PrimaryExpression	"""\\033*b%dW"""		2308073	0					
ANR	2308316	Argument	( int ) ( comp_ptr - CompBuffer )		2308073	1					
ANR	2308317	CastExpression	( int ) ( comp_ptr - CompBuffer )		2308073	0					
ANR	2308318	CastTarget	int		2308073	0					
ANR	2308319	AdditiveExpression	comp_ptr - CompBuffer		2308073	1		-			
ANR	2308320	Identifier	comp_ptr		2308073	0					
ANR	2308321	Identifier	CompBuffer		2308073	1					
ANR	2308322	ExpressionStatement	"fwrite ( CompBuffer , comp_ptr - CompBuffer , 1 , stdout )"	1032:2:23412:23464	2308073	8	True				
ANR	2308323	CallExpression	"fwrite ( CompBuffer , comp_ptr - CompBuffer , 1 , stdout )"		2308073	0					
ANR	2308324	Callee	fwrite		2308073	0					
ANR	2308325	Identifier	fwrite		2308073	0					
ANR	2308326	ArgumentList	CompBuffer		2308073	1					
ANR	2308327	Argument	CompBuffer		2308073	0					
ANR	2308328	Identifier	CompBuffer		2308073	0					
ANR	2308329	Argument	comp_ptr - CompBuffer		2308073	1					
ANR	2308330	AdditiveExpression	comp_ptr - CompBuffer		2308073	0		-			
ANR	2308331	Identifier	comp_ptr		2308073	0					
ANR	2308332	Identifier	CompBuffer		2308073	1					
ANR	2308333	Argument	1		2308073	2					
ANR	2308334	PrimaryExpression	1		2308073	0					
ANR	2308335	Argument	stdout		2308073	3					
ANR	2308336	Identifier	stdout		2308073	0					
ANR	2308337	ExpressionStatement	"memcpy ( LastBuffer , line , length )"	1038:2:23533:23565	2308073	9	True				
ANR	2308338	CallExpression	"memcpy ( LastBuffer , line , length )"		2308073	0					
ANR	2308339	Callee	memcpy		2308073	0					
ANR	2308340	Identifier	memcpy		2308073	0					
ANR	2308341	ArgumentList	LastBuffer		2308073	1					
ANR	2308342	Argument	LastBuffer		2308073	0					
ANR	2308343	Identifier	LastBuffer		2308073	0					
ANR	2308344	Argument	line		2308073	1					
ANR	2308345	Identifier	line		2308073	0					
ANR	2308346	Argument	length		2308073	2					
ANR	2308347	Identifier	length		2308073	0					
ANR	2308348	ExpressionStatement	LastSet = 1	1039:2:23569:23580	2308073	10	True				
ANR	2308349	AssignmentExpression	LastSet = 1		2308073	0		=			
ANR	2308350	Identifier	LastSet		2308073	0					
ANR	2308351	PrimaryExpression	1		2308073	1					
ANR	2308352	ReturnType	void		2308073	1					
ANR	2308353	Identifier	PCLCompress		2308073	2					
ANR	2308354	ParameterList	"unsigned char * line , int length"		2308073	3					
ANR	2308355	Parameter	unsigned char * line	915:12:21210:21228	2308073	0	True				
ANR	2308356	ParameterType	unsigned char *		2308073	0					
ANR	2308357	Identifier	line		2308073	1					
ANR	2308358	Parameter	int length	916:12:21270:21289	2308073	1	True				
ANR	2308359	ParameterType	int		2308073	0					
ANR	2308360	Identifier	length		2308073	1					
ANR	2308361	CFGEntryNode	ENTRY		2308073		True				
ANR	2308362	CFGExitNode	EXIT		2308073		True				
ANR	2308363	Symbol	LastBuffer		2308073						
ANR	2308364	Symbol	comp_ptr		2308073						
ANR	2308365	Symbol	* line_ptr		2308073						
ANR	2308366	Symbol	* seed		2308073						
ANR	2308367	Symbol	seed		2308073						
ANR	2308368	Symbol	offset		2308073						
ANR	2308369	Symbol	stdout		2308073						
ANR	2308370	Symbol	* comp_ptr ++		2308073						
ANR	2308371	Symbol	line		2308073						
ANR	2308372	Symbol	LastSet		2308073						
ANR	2308373	Symbol	length		2308073						
ANR	2308374	Symbol	start		2308073						
ANR	2308375	Symbol	count		2308073						
ANR	2308376	Symbol	line_end		2308073						
ANR	2308377	Symbol	CompBuffer		2308073						
ANR	2308378	Symbol	line_ptr		2308073						
ANR	2308379	Function	ZPLCompress	1047:0:23657:24472							
ANR	2308380	FunctionDef	"ZPLCompress (char repeat_char , int repeat_count)"		2308379	0					
ANR	2308381	CompoundStatement		1050:0:23788:24472	2308379	0					
ANR	2308382	IfStatement	if ( repeat_count > 1 )		2308379	0					
ANR	2308383	Condition	repeat_count > 1	1051:6:23796:23811	2308379	0	True				
ANR	2308384	RelationalExpression	repeat_count > 1		2308379	0		>			
ANR	2308385	Identifier	repeat_count		2308379	0					
ANR	2308386	PrimaryExpression	1		2308379	1					
ANR	2308387	CompoundStatement		3:2:27:27	2308379	1					
ANR	2308388	WhileStatement	while ( repeat_count >= 400 )		2308379	0					
ANR	2308389	Condition	repeat_count >= 400	1058:11:23982:24000	2308379	0	True				
ANR	2308390	RelationalExpression	repeat_count >= 400		2308379	0		>=			
ANR	2308391	Identifier	repeat_count		2308379	0					
ANR	2308392	PrimaryExpression	400		2308379	1					
ANR	2308393	CompoundStatement		10:4:218:218	2308379	1					
ANR	2308394	ExpressionStatement	putchar ( 'z' )	1060:6:24015:24027	2308379	0	True				
ANR	2308395	CallExpression	putchar ( 'z' )		2308379	0					
ANR	2308396	Callee	putchar		2308379	0					
ANR	2308397	Identifier	putchar		2308379	0					
ANR	2308398	ArgumentList	'z'		2308379	1					
ANR	2308399	Argument	'z'		2308379	0					
ANR	2308400	PrimaryExpression	'z'		2308379	0					
ANR	2308401	ExpressionStatement	repeat_count -= 400	1061:6:24035:24054	2308379	1	True				
ANR	2308402	AssignmentExpression	repeat_count -= 400		2308379	0		-=			
ANR	2308403	Identifier	repeat_count		2308379	0					
ANR	2308404	PrimaryExpression	400		2308379	1					
ANR	2308405	IfStatement	if ( repeat_count >= 20 )		2308379	1					
ANR	2308406	Condition	repeat_count >= 20	1068:8:24151:24168	2308379	0	True				
ANR	2308407	RelationalExpression	repeat_count >= 20		2308379	0		>=			
ANR	2308408	Identifier	repeat_count		2308379	0					
ANR	2308409	PrimaryExpression	20		2308379	1					
ANR	2308410	CompoundStatement		20:4:386:386	2308379	1					
ANR	2308411	ExpressionStatement	putchar ( 'f' + repeat_count / 20 )	1070:6:24183:24215	2308379	0	True				
ANR	2308412	CallExpression	putchar ( 'f' + repeat_count / 20 )		2308379	0					
ANR	2308413	Callee	putchar		2308379	0					
ANR	2308414	Identifier	putchar		2308379	0					
ANR	2308415	ArgumentList	'f' + repeat_count / 20		2308379	1					
ANR	2308416	Argument	'f' + repeat_count / 20		2308379	0					
ANR	2308417	AdditiveExpression	'f' + repeat_count / 20		2308379	0		+			
ANR	2308418	PrimaryExpression	'f'		2308379	0					
ANR	2308419	MultiplicativeExpression	repeat_count / 20		2308379	1		/			
ANR	2308420	Identifier	repeat_count		2308379	0					
ANR	2308421	PrimaryExpression	20		2308379	1					
ANR	2308422	ExpressionStatement	repeat_count %= 20	1071:6:24223:24241	2308379	1	True				
ANR	2308423	AssignmentExpression	repeat_count %= 20		2308379	0		%=			
ANR	2308424	Identifier	repeat_count		2308379	0					
ANR	2308425	PrimaryExpression	20		2308379	1					
ANR	2308426	IfStatement	if ( repeat_count > 0 )		2308379	2					
ANR	2308427	Condition	repeat_count > 0	1078:8:24339:24354	2308379	0	True				
ANR	2308428	RelationalExpression	repeat_count > 0		2308379	0		>			
ANR	2308429	Identifier	repeat_count		2308379	0					
ANR	2308430	PrimaryExpression	0		2308379	1					
ANR	2308431	ExpressionStatement	putchar ( 'F' + repeat_count )	1079:6:24363:24390	2308379	1	True				
ANR	2308432	CallExpression	putchar ( 'F' + repeat_count )		2308379	0					
ANR	2308433	Callee	putchar		2308379	0					
ANR	2308434	Identifier	putchar		2308379	0					
ANR	2308435	ArgumentList	'F' + repeat_count		2308379	1					
ANR	2308436	Argument	'F' + repeat_count		2308379	0					
ANR	2308437	AdditiveExpression	'F' + repeat_count		2308379	0		+			
ANR	2308438	PrimaryExpression	'F'		2308379	0					
ANR	2308439	Identifier	repeat_count		2308379	1					
ANR	2308440	ExpressionStatement	putchar ( repeat_char )	1086:2:24450:24470	2308379	1	True				
ANR	2308441	CallExpression	putchar ( repeat_char )		2308379	0					
ANR	2308442	Callee	putchar		2308379	0					
ANR	2308443	Identifier	putchar		2308379	0					
ANR	2308444	ArgumentList	repeat_char		2308379	1					
ANR	2308445	Argument	repeat_char		2308379	0					
ANR	2308446	Identifier	repeat_char		2308379	0					
ANR	2308447	ReturnType	void		2308379	1					
ANR	2308448	Identifier	ZPLCompress		2308379	2					
ANR	2308449	ParameterList	"char repeat_char , int repeat_count"		2308379	3					
ANR	2308450	Parameter	char repeat_char	1048:12:23674:23689	2308379	0	True				
ANR	2308451	ParameterType	char		2308379	0					
ANR	2308452	Identifier	repeat_char		2308379	1					
ANR	2308453	Parameter	int repeat_count	1049:5:23728:23744	2308379	1	True				
ANR	2308454	ParameterType	int		2308379	0					
ANR	2308455	Identifier	repeat_count		2308379	1					
ANR	2308456	CFGEntryNode	ENTRY		2308379		True				
ANR	2308457	CFGExitNode	EXIT		2308379		True				
ANR	2308458	Symbol	repeat_char		2308379						
ANR	2308459	Symbol	repeat_count		2308379						
ANR	2308460	Function	main	1094:0:24535:28672							
ANR	2308461	FunctionDef	"main (int argc , char * argv [ ])"		2308460	0					
ANR	2308462	CompoundStatement		1097:0:24681:28672	2308460	0					
ANR	2308463	IdentifierDeclStatement	int fd ;	1098:2:24685:24693	2308460	0	True				
ANR	2308464	IdentifierDecl	fd		2308460	0					
ANR	2308465	IdentifierDeclType	int		2308460	0					
ANR	2308466	Identifier	fd		2308460	1					
ANR	2308467	IdentifierDeclStatement	cups_raster_t * ras ;	1099:2:24720:24739	2308460	1	True				
ANR	2308468	IdentifierDecl	* ras		2308460	0					
ANR	2308469	IdentifierDeclType	cups_raster_t *		2308460	0					
ANR	2308470	Identifier	ras		2308460	1					
ANR	2308471	IdentifierDeclStatement	cups_page_header2_t header ;	1100:2:24777:24803	2308460	2	True				
ANR	2308472	IdentifierDecl	header		2308460	0					
ANR	2308473	IdentifierDeclType	cups_page_header2_t		2308460	0					
ANR	2308474	Identifier	header		2308460	1					
ANR	2308475	IdentifierDeclStatement	int y ;	1101:2:24836:24843	2308460	3	True				
ANR	2308476	IdentifierDecl	y		2308460	0					
ANR	2308477	IdentifierDeclType	int		2308460	0					
ANR	2308478	Identifier	y		2308460	1					
ANR	2308479	IdentifierDeclStatement	ppd_file_t * ppd ;	1102:2:24867:24883	2308460	4	True				
ANR	2308480	IdentifierDecl	* ppd		2308460	0					
ANR	2308481	IdentifierDeclType	ppd_file_t *		2308460	0					
ANR	2308482	Identifier	ppd		2308460	1					
ANR	2308483	IdentifierDeclStatement	int num_options ;	1103:2:24903:24920	2308460	5	True				
ANR	2308484	IdentifierDecl	num_options		2308460	0					
ANR	2308485	IdentifierDeclType	int		2308460	0					
ANR	2308486	Identifier	num_options		2308460	1					
ANR	2308487	IdentifierDeclStatement	cups_option_t * options ;	1104:2:24948:24971	2308460	6	True				
ANR	2308488	IdentifierDecl	* options		2308460	0					
ANR	2308489	IdentifierDeclType	cups_option_t *		2308460	0					
ANR	2308490	Identifier	options		2308460	1					
ANR	2308491	IdentifierDeclStatement	struct sigaction action ;	1106:2:25042:25065	2308460	7	True				
ANR	2308492	IdentifierDecl	action		2308460	0					
ANR	2308493	IdentifierDeclType	struct sigaction		2308460	0					
ANR	2308494	Identifier	action		2308460	1					
ANR	2308495	ExpressionStatement	"setbuf ( stderr , NULL )"	1114:2:25208:25228	2308460	8	True				
ANR	2308496	CallExpression	"setbuf ( stderr , NULL )"		2308460	0					
ANR	2308497	Callee	setbuf		2308460	0					
ANR	2308498	Identifier	setbuf		2308460	0					
ANR	2308499	ArgumentList	stderr		2308460	1					
ANR	2308500	Argument	stderr		2308460	0					
ANR	2308501	Identifier	stderr		2308460	0					
ANR	2308502	Argument	NULL		2308460	1					
ANR	2308503	Identifier	NULL		2308460	0					
ANR	2308504	IfStatement	if ( argc < 6 || argc > 7 )		2308460	9					
ANR	2308505	Condition	argc < 6 || argc > 7	1120:6:25273:25292	2308460	0	True				
ANR	2308506	OrExpression	argc < 6 || argc > 7		2308460	0		||			
ANR	2308507	RelationalExpression	argc < 6		2308460	0		<			
ANR	2308508	Identifier	argc		2308460	0					
ANR	2308509	PrimaryExpression	6		2308460	1					
ANR	2308510	RelationalExpression	argc > 7		2308460	1		>			
ANR	2308511	Identifier	argc		2308460	0					
ANR	2308512	PrimaryExpression	7		2308460	1					
ANR	2308513	CompoundStatement		25:2:615:615	2308460	1					
ANR	2308514	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertolabel"" )"	1127:4:25411:25543	2308460	0	True				
ANR	2308515	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertolabel"" )"		2308460	0					
ANR	2308516	Callee	_cupsLangPrintFilter		2308460	0					
ANR	2308517	Identifier	_cupsLangPrintFilter		2308460	0					
ANR	2308518	ArgumentList	stderr		2308460	1					
ANR	2308519	Argument	stderr		2308460	0					
ANR	2308520	Identifier	stderr		2308460	0					
ANR	2308521	Argument	"""ERROR"""		2308460	1					
ANR	2308522	PrimaryExpression	"""ERROR"""		2308460	0					
ANR	2308523	Argument	"_ ( ""%s job-id user title copies options [file]"" )"		2308460	2					
ANR	2308524	CallExpression	"_ ( ""%s job-id user title copies options [file]"" )"		2308460	0					
ANR	2308525	Callee	_		2308460	0					
ANR	2308526	Identifier	_		2308460	0					
ANR	2308527	ArgumentList	"""%s job-id user title copies options [file]"""		2308460	1					
ANR	2308528	Argument	"""%s job-id user title copies options [file]"""		2308460	0					
ANR	2308529	PrimaryExpression	"""%s job-id user title copies options [file]"""		2308460	0					
ANR	2308530	Argument	"""rastertolabel"""		2308460	3					
ANR	2308531	PrimaryExpression	"""rastertolabel"""		2308460	0					
ANR	2308532	ReturnStatement	return ( 1 ) ;	1130:4:25549:25559	2308460	1	True				
ANR	2308533	PrimaryExpression	1		2308460	0					
ANR	2308534	IfStatement	if ( argc == 7 )		2308460	10					
ANR	2308535	Condition	argc == 7	1137:6:25610:25618	2308460	0	True				
ANR	2308536	EqualityExpression	argc == 7		2308460	0		==			
ANR	2308537	Identifier	argc		2308460	0					
ANR	2308538	PrimaryExpression	7		2308460	1					
ANR	2308539	CompoundStatement		42:2:941:941	2308460	1					
ANR	2308540	IfStatement	"if ( ( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1 )"		2308460	0					
ANR	2308541	Condition	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"	1139:8:25633:25668	2308460	0	True				
ANR	2308542	EqualityExpression	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"		2308460	0		==			
ANR	2308543	AssignmentExpression	"fd = open ( argv [ 6 ] , O_RDONLY )"		2308460	0		=			
ANR	2308544	Identifier	fd		2308460	0					
ANR	2308545	CallExpression	"open ( argv [ 6 ] , O_RDONLY )"		2308460	1					
ANR	2308546	Callee	open		2308460	0					
ANR	2308547	Identifier	open		2308460	0					
ANR	2308548	ArgumentList	argv [ 6 ]		2308460	1					
ANR	2308549	Argument	argv [ 6 ]		2308460	0					
ANR	2308550	ArrayIndexing	argv [ 6 ]		2308460	0					
ANR	2308551	Identifier	argv		2308460	0					
ANR	2308552	PrimaryExpression	6		2308460	1					
ANR	2308553	Argument	O_RDONLY		2308460	1					
ANR	2308554	Identifier	O_RDONLY		2308460	0					
ANR	2308555	UnaryOperationExpression	- 1		2308460	1					
ANR	2308556	UnaryOperator	-		2308460	0					
ANR	2308557	PrimaryExpression	1		2308460	1					
ANR	2308558	CompoundStatement		44:4:993:993	2308460	1					
ANR	2308559	ExpressionStatement	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"	1141:6:25683:25744	2308460	0	True				
ANR	2308560	CallExpression	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"		2308460	0					
ANR	2308561	Callee	_cupsLangPrintError		2308460	0					
ANR	2308562	Identifier	_cupsLangPrintError		2308460	0					
ANR	2308563	ArgumentList	"""ERROR"""		2308460	1					
ANR	2308564	Argument	"""ERROR"""		2308460	0					
ANR	2308565	PrimaryExpression	"""ERROR"""		2308460	0					
ANR	2308566	Argument	"_ ( ""Unable to open raster file"" )"		2308460	1					
ANR	2308567	CallExpression	"_ ( ""Unable to open raster file"" )"		2308460	0					
ANR	2308568	Callee	_		2308460	0					
ANR	2308569	Identifier	_		2308460	0					
ANR	2308570	ArgumentList	"""Unable to open raster file"""		2308460	1					
ANR	2308571	Argument	"""Unable to open raster file"""		2308460	0					
ANR	2308572	PrimaryExpression	"""Unable to open raster file"""		2308460	0					
ANR	2308573	ExpressionStatement	sleep ( 1 )	1142:6:25752:25760	2308460	1	True				
ANR	2308574	CallExpression	sleep ( 1 )		2308460	0					
ANR	2308575	Callee	sleep		2308460	0					
ANR	2308576	Identifier	sleep		2308460	0					
ANR	2308577	ArgumentList	1		2308460	1					
ANR	2308578	Argument	1		2308460	0					
ANR	2308579	PrimaryExpression	1		2308460	0					
ANR	2308580	ReturnStatement	return ( 1 ) ;	1143:6:25768:25778	2308460	2	True				
ANR	2308581	PrimaryExpression	1		2308460	0					
ANR	2308582	ElseStatement	else		2308460	0					
ANR	2308583	ExpressionStatement	fd = 0	1147:4:25801:25807	2308460	0	True				
ANR	2308584	AssignmentExpression	fd = 0		2308460	0		=			
ANR	2308585	Identifier	fd		2308460	0					
ANR	2308586	PrimaryExpression	0		2308460	1					
ANR	2308587	ExpressionStatement	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"	1149:2:25812:25854	2308460	11	True				
ANR	2308588	AssignmentExpression	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"		2308460	0		=			
ANR	2308589	Identifier	ras		2308460	0					
ANR	2308590	CallExpression	"cupsRasterOpen ( fd , CUPS_RASTER_READ )"		2308460	1					
ANR	2308591	Callee	cupsRasterOpen		2308460	0					
ANR	2308592	Identifier	cupsRasterOpen		2308460	0					
ANR	2308593	ArgumentList	fd		2308460	1					
ANR	2308594	Argument	fd		2308460	0					
ANR	2308595	Identifier	fd		2308460	0					
ANR	2308596	Argument	CUPS_RASTER_READ		2308460	1					
ANR	2308597	Identifier	CUPS_RASTER_READ		2308460	0					
ANR	2308598	ExpressionStatement	Canceled = 0	1156:2:25954:25966	2308460	12	True				
ANR	2308599	AssignmentExpression	Canceled = 0		2308460	0		=			
ANR	2308600	Identifier	Canceled		2308460	0					
ANR	2308601	PrimaryExpression	0		2308460	1					
ANR	2308602	ExpressionStatement	"sigset ( SIGTERM , CancelJob )"	1159:2:26042:26068	2308460	13	True				
ANR	2308603	CallExpression	"sigset ( SIGTERM , CancelJob )"		2308460	0					
ANR	2308604	Callee	sigset		2308460	0					
ANR	2308605	Identifier	sigset		2308460	0					
ANR	2308606	ArgumentList	SIGTERM		2308460	1					
ANR	2308607	Argument	SIGTERM		2308460	0					
ANR	2308608	Identifier	SIGTERM		2308460	0					
ANR	2308609	Argument	CancelJob		2308460	1					
ANR	2308610	Identifier	CancelJob		2308460	0					
ANR	2308611	ExpressionStatement	"num_options = cupsParseOptions ( argv [ 5 ] , 0 , & options )"	1174:2:26358:26410	2308460	14	True				
ANR	2308612	AssignmentExpression	"num_options = cupsParseOptions ( argv [ 5 ] , 0 , & options )"		2308460	0		=			
ANR	2308613	Identifier	num_options		2308460	0					
ANR	2308614	CallExpression	"cupsParseOptions ( argv [ 5 ] , 0 , & options )"		2308460	1					
ANR	2308615	Callee	cupsParseOptions		2308460	0					
ANR	2308616	Identifier	cupsParseOptions		2308460	0					
ANR	2308617	ArgumentList	argv [ 5 ]		2308460	1					
ANR	2308618	Argument	argv [ 5 ]		2308460	0					
ANR	2308619	ArrayIndexing	argv [ 5 ]		2308460	0					
ANR	2308620	Identifier	argv		2308460	0					
ANR	2308621	PrimaryExpression	5		2308460	1					
ANR	2308622	Argument	0		2308460	1					
ANR	2308623	PrimaryExpression	0		2308460	0					
ANR	2308624	Argument	& options		2308460	2					
ANR	2308625	UnaryOperationExpression	& options		2308460	0					
ANR	2308626	UnaryOperator	&		2308460	0					
ANR	2308627	Identifier	options		2308460	1					
ANR	2308628	ExpressionStatement	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"	1176:2:26415:26447	2308460	15	True				
ANR	2308629	AssignmentExpression	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"		2308460	0		=			
ANR	2308630	Identifier	ppd		2308460	0					
ANR	2308631	CallExpression	"ppdOpenFile ( getenv ( ""PPD"" ) )"		2308460	1					
ANR	2308632	Callee	ppdOpenFile		2308460	0					
ANR	2308633	Identifier	ppdOpenFile		2308460	0					
ANR	2308634	ArgumentList	"getenv ( ""PPD"" )"		2308460	1					
ANR	2308635	Argument	"getenv ( ""PPD"" )"		2308460	0					
ANR	2308636	CallExpression	"getenv ( ""PPD"" )"		2308460	0					
ANR	2308637	Callee	getenv		2308460	0					
ANR	2308638	Identifier	getenv		2308460	0					
ANR	2308639	ArgumentList	"""PPD"""		2308460	1					
ANR	2308640	Argument	"""PPD"""		2308460	0					
ANR	2308641	PrimaryExpression	"""PPD"""		2308460	0					
ANR	2308642	IfStatement	if ( ! ppd )		2308460	16					
ANR	2308643	Condition	! ppd	1177:6:26455:26458	2308460	0	True				
ANR	2308644	UnaryOperationExpression	! ppd		2308460	0					
ANR	2308645	UnaryOperator	!		2308460	0					
ANR	2308646	Identifier	ppd		2308460	1					
ANR	2308647	CompoundStatement		84:4:1829:1842	2308460	1					
ANR	2308648	IdentifierDeclStatement	ppd_status_t status ;	1179:4:26469:26488	2308460	0	True				
ANR	2308649	IdentifierDecl	status		2308460	0					
ANR	2308650	IdentifierDeclType	ppd_status_t		2308460	0					
ANR	2308651	Identifier	status		2308460	1					
ANR	2308652	IdentifierDeclStatement	int linenum ;	1180:4:26511:26524	2308460	1	True				
ANR	2308653	IdentifierDecl	linenum		2308460	0					
ANR	2308654	IdentifierDeclType	int		2308460	0					
ANR	2308655	Identifier	linenum		2308460	1					
ANR	2308656	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"	1182:4:26549:26651	2308460	2	True				
ANR	2308657	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"		2308460	0					
ANR	2308658	Callee	_cupsLangPrintFilter		2308460	0					
ANR	2308659	Identifier	_cupsLangPrintFilter		2308460	0					
ANR	2308660	ArgumentList	stderr		2308460	1					
ANR	2308661	Argument	stderr		2308460	0					
ANR	2308662	Identifier	stderr		2308460	0					
ANR	2308663	Argument	"""ERROR"""		2308460	1					
ANR	2308664	PrimaryExpression	"""ERROR"""		2308460	0					
ANR	2308665	Argument	"_ ( ""The PPD file could not be opened."" )"		2308460	2					
ANR	2308666	CallExpression	"_ ( ""The PPD file could not be opened."" )"		2308460	0					
ANR	2308667	Callee	_		2308460	0					
ANR	2308668	Identifier	_		2308460	0					
ANR	2308669	ArgumentList	"""The PPD file could not be opened."""		2308460	1					
ANR	2308670	Argument	"""The PPD file could not be opened."""		2308460	0					
ANR	2308671	PrimaryExpression	"""The PPD file could not be opened."""		2308460	0					
ANR	2308672	ExpressionStatement	status = ppdLastError ( & linenum )	1185:4:26658:26689	2308460	3	True				
ANR	2308673	AssignmentExpression	status = ppdLastError ( & linenum )		2308460	0		=			
ANR	2308674	Identifier	status		2308460	0					
ANR	2308675	CallExpression	ppdLastError ( & linenum )		2308460	1					
ANR	2308676	Callee	ppdLastError		2308460	0					
ANR	2308677	Identifier	ppdLastError		2308460	0					
ANR	2308678	ArgumentList	& linenum		2308460	1					
ANR	2308679	Argument	& linenum		2308460	0					
ANR	2308680	UnaryOperationExpression	& linenum		2308460	0					
ANR	2308681	UnaryOperator	&		2308460	0					
ANR	2308682	Identifier	linenum		2308460	1					
ANR	2308683	ExpressionStatement	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"	1187:4:26696:26771	2308460	4	True				
ANR	2308684	CallExpression	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"		2308460	0					
ANR	2308685	Callee	fprintf		2308460	0					
ANR	2308686	Identifier	fprintf		2308460	0					
ANR	2308687	ArgumentList	stderr		2308460	1					
ANR	2308688	Argument	stderr		2308460	0					
ANR	2308689	Identifier	stderr		2308460	0					
ANR	2308690	Argument	"""DEBUG: %s on line %d.\\n"""		2308460	1					
ANR	2308691	PrimaryExpression	"""DEBUG: %s on line %d.\\n"""		2308460	0					
ANR	2308692	Argument	ppdErrorString ( status )		2308460	2					
ANR	2308693	CallExpression	ppdErrorString ( status )		2308460	0					
ANR	2308694	Callee	ppdErrorString		2308460	0					
ANR	2308695	Identifier	ppdErrorString		2308460	0					
ANR	2308696	ArgumentList	status		2308460	1					
ANR	2308697	Argument	status		2308460	0					
ANR	2308698	Identifier	status		2308460	0					
ANR	2308699	Argument	linenum		2308460	3					
ANR	2308700	Identifier	linenum		2308460	0					
ANR	2308701	ReturnStatement	return ( 1 ) ;	1189:4:26778:26788	2308460	5	True				
ANR	2308702	PrimaryExpression	1		2308460	0					
ANR	2308703	ExpressionStatement	ppdMarkDefaults ( ppd )	1192:2:26797:26817	2308460	17	True				
ANR	2308704	CallExpression	ppdMarkDefaults ( ppd )		2308460	0					
ANR	2308705	Callee	ppdMarkDefaults		2308460	0					
ANR	2308706	Identifier	ppdMarkDefaults		2308460	0					
ANR	2308707	ArgumentList	ppd		2308460	1					
ANR	2308708	Argument	ppd		2308460	0					
ANR	2308709	Identifier	ppd		2308460	0					
ANR	2308710	ExpressionStatement	"cupsMarkOptions ( ppd , num_options , options )"	1193:2:26821:26863	2308460	18	True				
ANR	2308711	CallExpression	"cupsMarkOptions ( ppd , num_options , options )"		2308460	0					
ANR	2308712	Callee	cupsMarkOptions		2308460	0					
ANR	2308713	Identifier	cupsMarkOptions		2308460	0					
ANR	2308714	ArgumentList	ppd		2308460	1					
ANR	2308715	Argument	ppd		2308460	0					
ANR	2308716	Identifier	ppd		2308460	0					
ANR	2308717	Argument	num_options		2308460	1					
ANR	2308718	Identifier	num_options		2308460	0					
ANR	2308719	Argument	options		2308460	2					
ANR	2308720	Identifier	options		2308460	0					
ANR	2308721	ExpressionStatement	Setup ( ppd )	1199:2:26913:26923	2308460	19	True				
ANR	2308722	CallExpression	Setup ( ppd )		2308460	0					
ANR	2308723	Callee	Setup		2308460	0					
ANR	2308724	Identifier	Setup		2308460	0					
ANR	2308725	ArgumentList	ppd		2308460	1					
ANR	2308726	Argument	ppd		2308460	0					
ANR	2308727	Identifier	ppd		2308460	0					
ANR	2308728	ExpressionStatement	Page = 0	1205:2:26969:26977	2308460	20	True				
ANR	2308729	AssignmentExpression	Page = 0		2308460	0		=			
ANR	2308730	Identifier	Page		2308460	0					
ANR	2308731	PrimaryExpression	0		2308460	1					
ANR	2308732	WhileStatement	"while ( cupsRasterReadHeader2 ( ras , & header ) )"		2308460	21					
ANR	2308733	Condition	"cupsRasterReadHeader2 ( ras , & header )"	1207:9:26989:27023	2308460	0	True				
ANR	2308734	CallExpression	"cupsRasterReadHeader2 ( ras , & header )"		2308460	0					
ANR	2308735	Callee	cupsRasterReadHeader2		2308460	0					
ANR	2308736	Identifier	cupsRasterReadHeader2		2308460	0					
ANR	2308737	ArgumentList	ras		2308460	1					
ANR	2308738	Argument	ras		2308460	0					
ANR	2308739	Identifier	ras		2308460	0					
ANR	2308740	Argument	& header		2308460	1					
ANR	2308741	UnaryOperationExpression	& header		2308460	0					
ANR	2308742	UnaryOperator	&		2308460	0					
ANR	2308743	Identifier	header		2308460	1					
ANR	2308744	CompoundStatement		112:2:2346:2346	2308460	1					
ANR	2308745	IfStatement	if ( Canceled )		2308460	0					
ANR	2308746	Condition	Canceled	1213:8:27124:27131	2308460	0	True				
ANR	2308747	Identifier	Canceled		2308460	0					
ANR	2308748	BreakStatement	break ;	1214:6:27140:27145	2308460	1	True				
ANR	2308749	ExpressionStatement	Page ++	1216:4:27152:27159	2308460	1	True				
ANR	2308750	PostIncDecOperationExpression	Page ++		2308460	0					
ANR	2308751	Identifier	Page		2308460	0					
ANR	2308752	IncDec	++		2308460	1					
ANR	2308753	ExpressionStatement	"fprintf ( stderr , ""PAGE: %d 1\\n"" , Page )"	1218:4:27166:27203	2308460	2	True				
ANR	2308754	CallExpression	"fprintf ( stderr , ""PAGE: %d 1\\n"" , Page )"		2308460	0					
ANR	2308755	Callee	fprintf		2308460	0					
ANR	2308756	Identifier	fprintf		2308460	0					
ANR	2308757	ArgumentList	stderr		2308460	1					
ANR	2308758	Argument	stderr		2308460	0					
ANR	2308759	Identifier	stderr		2308460	0					
ANR	2308760	Argument	"""PAGE: %d 1\\n"""		2308460	1					
ANR	2308761	PrimaryExpression	"""PAGE: %d 1\\n"""		2308460	0					
ANR	2308762	Argument	Page		2308460	2					
ANR	2308763	Identifier	Page		2308460	0					
ANR	2308764	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , Page )"	1219:4:27209:27275	2308460	3	True				
ANR	2308765	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , Page )"		2308460	0					
ANR	2308766	Callee	_cupsLangPrintFilter		2308460	0					
ANR	2308767	Identifier	_cupsLangPrintFilter		2308460	0					
ANR	2308768	ArgumentList	stderr		2308460	1					
ANR	2308769	Argument	stderr		2308460	0					
ANR	2308770	Identifier	stderr		2308460	0					
ANR	2308771	Argument	"""INFO"""		2308460	1					
ANR	2308772	PrimaryExpression	"""INFO"""		2308460	0					
ANR	2308773	Argument	"_ ( ""Starting page %d."" )"		2308460	2					
ANR	2308774	CallExpression	"_ ( ""Starting page %d."" )"		2308460	0					
ANR	2308775	Callee	_		2308460	0					
ANR	2308776	Identifier	_		2308460	0					
ANR	2308777	ArgumentList	"""Starting page %d."""		2308460	1					
ANR	2308778	Argument	"""Starting page %d."""		2308460	0					
ANR	2308779	PrimaryExpression	"""Starting page %d."""		2308460	0					
ANR	2308780	Argument	Page		2308460	3					
ANR	2308781	Identifier	Page		2308460	0					
ANR	2308782	ExpressionStatement	"StartPage ( ppd , & header )"	1225:4:27320:27343	2308460	4	True				
ANR	2308783	CallExpression	"StartPage ( ppd , & header )"		2308460	0					
ANR	2308784	Callee	StartPage		2308460	0					
ANR	2308785	Identifier	StartPage		2308460	0					
ANR	2308786	ArgumentList	ppd		2308460	1					
ANR	2308787	Argument	ppd		2308460	0					
ANR	2308788	Identifier	ppd		2308460	0					
ANR	2308789	Argument	& header		2308460	1					
ANR	2308790	UnaryOperationExpression	& header		2308460	0					
ANR	2308791	UnaryOperator	&		2308460	0					
ANR	2308792	Identifier	header		2308460	1					
ANR	2308793	ForStatement	for ( y = 0 ; y < header . cupsHeight && ! Canceled ; y ++ )		2308460	5					
ANR	2308794	ForInit	y = 0 ;	1231:9:27409:27414	2308460	0	True				
ANR	2308795	AssignmentExpression	y = 0		2308460	0		=			
ANR	2308796	Identifier	y		2308460	0					
ANR	2308797	PrimaryExpression	0		2308460	1					
ANR	2308798	Condition	y < header . cupsHeight && ! Canceled	1231:16:27416:27449	2308460	1	True				
ANR	2308799	AndExpression	y < header . cupsHeight && ! Canceled		2308460	0		&&			
ANR	2308800	RelationalExpression	y < header . cupsHeight		2308460	0		<			
ANR	2308801	Identifier	y		2308460	0					
ANR	2308802	MemberAccess	header . cupsHeight		2308460	1					
ANR	2308803	Identifier	header		2308460	0					
ANR	2308804	Identifier	cupsHeight		2308460	1					
ANR	2308805	UnaryOperationExpression	! Canceled		2308460	1					
ANR	2308806	UnaryOperator	!		2308460	0					
ANR	2308807	Identifier	Canceled		2308460	1					
ANR	2308808	PostIncDecOperationExpression	y ++	1231:52:27452:27455	2308460	2	True				
ANR	2308809	Identifier	y		2308460	0					
ANR	2308810	IncDec	++		2308460	1					
ANR	2308811	CompoundStatement		136:4:2780:2780	2308460	3					
ANR	2308812	IfStatement	if ( Canceled )		2308460	0					
ANR	2308813	Condition	Canceled	1237:10:27548:27555	2308460	0	True				
ANR	2308814	Identifier	Canceled		2308460	0					
ANR	2308815	BreakStatement	break ;	1238:1:27559:27564	2308460	1	True				
ANR	2308816	IfStatement	if ( ( y & 15 ) == 0 )		2308460	1					
ANR	2308817	Condition	( y & 15 ) == 0	1240:10:27577:27589	2308460	0	True				
ANR	2308818	EqualityExpression	( y & 15 ) == 0		2308460	0		==			
ANR	2308819	BitAndExpression	y & 15		2308460	0		&			
ANR	2308820	Identifier	y		2308460	0					
ANR	2308821	PrimaryExpression	15		2308460	1					
ANR	2308822	PrimaryExpression	0		2308460	1					
ANR	2308823	CompoundStatement		145:6:2916:2916	2308460	1					
ANR	2308824	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , Page , 100 * y / header . cupsHeight )"	1242:8:27608:27748	2308460	0	True				
ANR	2308825	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , Page , 100 * y / header . cupsHeight )"		2308460	0					
ANR	2308826	Callee	_cupsLangPrintFilter		2308460	0					
ANR	2308827	Identifier	_cupsLangPrintFilter		2308460	0					
ANR	2308828	ArgumentList	stderr		2308460	1					
ANR	2308829	Argument	stderr		2308460	0					
ANR	2308830	Identifier	stderr		2308460	0					
ANR	2308831	Argument	"""INFO"""		2308460	1					
ANR	2308832	PrimaryExpression	"""INFO"""		2308460	0					
ANR	2308833	Argument	"_ ( ""Printing page %d, %d%% complete."" )"		2308460	2					
ANR	2308834	CallExpression	"_ ( ""Printing page %d, %d%% complete."" )"		2308460	0					
ANR	2308835	Callee	_		2308460	0					
ANR	2308836	Identifier	_		2308460	0					
ANR	2308837	ArgumentList	"""Printing page %d, %d%% complete."""		2308460	1					
ANR	2308838	Argument	"""Printing page %d, %d%% complete."""		2308460	0					
ANR	2308839	PrimaryExpression	"""Printing page %d, %d%% complete."""		2308460	0					
ANR	2308840	Argument	Page		2308460	3					
ANR	2308841	Identifier	Page		2308460	0					
ANR	2308842	Argument	100 * y / header . cupsHeight		2308460	4					
ANR	2308843	MultiplicativeExpression	100 * y / header . cupsHeight		2308460	0		*			
ANR	2308844	PrimaryExpression	100		2308460	0					
ANR	2308845	MultiplicativeExpression	y / header . cupsHeight		2308460	1		/			
ANR	2308846	Identifier	y		2308460	0					
ANR	2308847	MemberAccess	header . cupsHeight		2308460	1					
ANR	2308848	Identifier	header		2308460	0					
ANR	2308849	Identifier	cupsHeight		2308460	1					
ANR	2308850	ExpressionStatement	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"	1245:8:27758:27837	2308460	1	True				
ANR	2308851	CallExpression	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"		2308460	0					
ANR	2308852	Callee	fprintf		2308460	0					
ANR	2308853	Identifier	fprintf		2308460	0					
ANR	2308854	ArgumentList	stderr		2308460	1					
ANR	2308855	Argument	stderr		2308460	0					
ANR	2308856	Identifier	stderr		2308460	0					
ANR	2308857	Argument	"""ATTR: job-media-progress=%d\\n"""		2308460	1					
ANR	2308858	PrimaryExpression	"""ATTR: job-media-progress=%d\\n"""		2308460	0					
ANR	2308859	Argument	100 * y / header . cupsHeight		2308460	2					
ANR	2308860	MultiplicativeExpression	100 * y / header . cupsHeight		2308460	0		*			
ANR	2308861	PrimaryExpression	100		2308460	0					
ANR	2308862	MultiplicativeExpression	y / header . cupsHeight		2308460	1		/			
ANR	2308863	Identifier	y		2308460	0					
ANR	2308864	MemberAccess	header . cupsHeight		2308460	1					
ANR	2308865	Identifier	header		2308460	0					
ANR	2308866	Identifier	cupsHeight		2308460	1					
ANR	2308867	IfStatement	"if ( cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine ) < 1 )"		2308460	2					
ANR	2308868	Condition	"cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine ) < 1"	1253:10:27911:27972	2308460	0	True				
ANR	2308869	RelationalExpression	"cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine ) < 1"		2308460	0		<			
ANR	2308870	CallExpression	"cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine )"		2308460	0					
ANR	2308871	Callee	cupsRasterReadPixels		2308460	0					
ANR	2308872	Identifier	cupsRasterReadPixels		2308460	0					
ANR	2308873	ArgumentList	ras		2308460	1					
ANR	2308874	Argument	ras		2308460	0					
ANR	2308875	Identifier	ras		2308460	0					
ANR	2308876	Argument	Buffer		2308460	1					
ANR	2308877	Identifier	Buffer		2308460	0					
ANR	2308878	Argument	header . cupsBytesPerLine		2308460	2					
ANR	2308879	MemberAccess	header . cupsBytesPerLine		2308460	0					
ANR	2308880	Identifier	header		2308460	0					
ANR	2308881	Identifier	cupsBytesPerLine		2308460	1					
ANR	2308882	PrimaryExpression	1		2308460	1					
ANR	2308883	BreakStatement	break ;	1254:8:27983:27988	2308460	1	True				
ANR	2308884	ExpressionStatement	"OutputLine ( ppd , & header , y )"	1260:6:28050:28077	2308460	3	True				
ANR	2308885	CallExpression	"OutputLine ( ppd , & header , y )"		2308460	0					
ANR	2308886	Callee	OutputLine		2308460	0					
ANR	2308887	Identifier	OutputLine		2308460	0					
ANR	2308888	ArgumentList	ppd		2308460	1					
ANR	2308889	Argument	ppd		2308460	0					
ANR	2308890	Identifier	ppd		2308460	0					
ANR	2308891	Argument	& header		2308460	1					
ANR	2308892	UnaryOperationExpression	& header		2308460	0					
ANR	2308893	UnaryOperator	&		2308460	0					
ANR	2308894	Identifier	header		2308460	1					
ANR	2308895	Argument	y		2308460	2					
ANR	2308896	Identifier	y		2308460	0					
ANR	2308897	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , Page )"	1267:4:28128:28194	2308460	6	True				
ANR	2308898	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , Page )"		2308460	0					
ANR	2308899	Callee	_cupsLangPrintFilter		2308460	0					
ANR	2308900	Identifier	_cupsLangPrintFilter		2308460	0					
ANR	2308901	ArgumentList	stderr		2308460	1					
ANR	2308902	Argument	stderr		2308460	0					
ANR	2308903	Identifier	stderr		2308460	0					
ANR	2308904	Argument	"""INFO"""		2308460	1					
ANR	2308905	PrimaryExpression	"""INFO"""		2308460	0					
ANR	2308906	Argument	"_ ( ""Finished page %d."" )"		2308460	2					
ANR	2308907	CallExpression	"_ ( ""Finished page %d."" )"		2308460	0					
ANR	2308908	Callee	_		2308460	0					
ANR	2308909	Identifier	_		2308460	0					
ANR	2308910	ArgumentList	"""Finished page %d."""		2308460	1					
ANR	2308911	Argument	"""Finished page %d."""		2308460	0					
ANR	2308912	PrimaryExpression	"""Finished page %d."""		2308460	0					
ANR	2308913	Argument	Page		2308460	3					
ANR	2308914	Identifier	Page		2308460	0					
ANR	2308915	ExpressionStatement	"EndPage ( ppd , & header )"	1269:4:28201:28222	2308460	7	True				
ANR	2308916	CallExpression	"EndPage ( ppd , & header )"		2308460	0					
ANR	2308917	Callee	EndPage		2308460	0					
ANR	2308918	Identifier	EndPage		2308460	0					
ANR	2308919	ArgumentList	ppd		2308460	1					
ANR	2308920	Argument	ppd		2308460	0					
ANR	2308921	Identifier	ppd		2308460	0					
ANR	2308922	Argument	& header		2308460	1					
ANR	2308923	UnaryOperationExpression	& header		2308460	0					
ANR	2308924	UnaryOperator	&		2308460	0					
ANR	2308925	Identifier	header		2308460	1					
ANR	2308926	IfStatement	if ( Canceled )		2308460	8					
ANR	2308927	Condition	Canceled	1271:8:28233:28240	2308460	0	True				
ANR	2308928	Identifier	Canceled		2308460	0					
ANR	2308929	BreakStatement	break ;	1272:6:28249:28254	2308460	1	True				
ANR	2308930	ExpressionStatement	cupsRasterClose ( ras )	1279:2:28304:28324	2308460	22	True				
ANR	2308931	CallExpression	cupsRasterClose ( ras )		2308460	0					
ANR	2308932	Callee	cupsRasterClose		2308460	0					
ANR	2308933	Identifier	cupsRasterClose		2308460	0					
ANR	2308934	ArgumentList	ras		2308460	1					
ANR	2308935	Argument	ras		2308460	0					
ANR	2308936	Identifier	ras		2308460	0					
ANR	2308937	IfStatement	if ( fd != 0 )		2308460	23					
ANR	2308938	Condition	fd != 0	1280:6:28332:28338	2308460	0	True				
ANR	2308939	EqualityExpression	fd != 0		2308460	0		!=			
ANR	2308940	Identifier	fd		2308460	0					
ANR	2308941	PrimaryExpression	0		2308460	1					
ANR	2308942	ExpressionStatement	close ( fd )	1281:4:28345:28354	2308460	1	True				
ANR	2308943	CallExpression	close ( fd )		2308460	0					
ANR	2308944	Callee	close		2308460	0					
ANR	2308945	Identifier	close		2308460	0					
ANR	2308946	ArgumentList	fd		2308460	1					
ANR	2308947	Argument	fd		2308460	0					
ANR	2308948	Identifier	fd		2308460	0					
ANR	2308949	ExpressionStatement	ppdClose ( ppd )	1287:2:28416:28429	2308460	24	True				
ANR	2308950	CallExpression	ppdClose ( ppd )		2308460	0					
ANR	2308951	Callee	ppdClose		2308460	0					
ANR	2308952	Identifier	ppdClose		2308460	0					
ANR	2308953	ArgumentList	ppd		2308460	1					
ANR	2308954	Argument	ppd		2308460	0					
ANR	2308955	Identifier	ppd		2308460	0					
ANR	2308956	ExpressionStatement	"cupsFreeOptions ( num_options , options )"	1288:2:28433:28470	2308460	25	True				
ANR	2308957	CallExpression	"cupsFreeOptions ( num_options , options )"		2308460	0					
ANR	2308958	Callee	cupsFreeOptions		2308460	0					
ANR	2308959	Identifier	cupsFreeOptions		2308460	0					
ANR	2308960	ArgumentList	num_options		2308460	1					
ANR	2308961	Argument	num_options		2308460	0					
ANR	2308962	Identifier	num_options		2308460	0					
ANR	2308963	Argument	options		2308460	1					
ANR	2308964	Identifier	options		2308460	0					
ANR	2308965	IfStatement	if ( Page == 0 )		2308460	26					
ANR	2308966	Condition	Page == 0	1294:6:28544:28552	2308460	0	True				
ANR	2308967	EqualityExpression	Page == 0		2308460	0		==			
ANR	2308968	Identifier	Page		2308460	0					
ANR	2308969	PrimaryExpression	0		2308460	1					
ANR	2308970	CompoundStatement		199:2:3875:3875	2308460	1					
ANR	2308971	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"	1296:4:28563:28627	2308460	0	True				
ANR	2308972	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"		2308460	0					
ANR	2308973	Callee	_cupsLangPrintFilter		2308460	0					
ANR	2308974	Identifier	_cupsLangPrintFilter		2308460	0					
ANR	2308975	ArgumentList	stderr		2308460	1					
ANR	2308976	Argument	stderr		2308460	0					
ANR	2308977	Identifier	stderr		2308460	0					
ANR	2308978	Argument	"""ERROR"""		2308460	1					
ANR	2308979	PrimaryExpression	"""ERROR"""		2308460	0					
ANR	2308980	Argument	"_ ( ""No pages were found."" )"		2308460	2					
ANR	2308981	CallExpression	"_ ( ""No pages were found."" )"		2308460	0					
ANR	2308982	Callee	_		2308460	0					
ANR	2308983	Identifier	_		2308460	0					
ANR	2308984	ArgumentList	"""No pages were found."""		2308460	1					
ANR	2308985	Argument	"""No pages were found."""		2308460	0					
ANR	2308986	PrimaryExpression	"""No pages were found."""		2308460	0					
ANR	2308987	ReturnStatement	return ( 1 ) ;	1297:4:28633:28643	2308460	1	True				
ANR	2308988	PrimaryExpression	1		2308460	0					
ANR	2308989	ElseStatement	else		2308460	0					
ANR	2308990	ReturnStatement	return ( 0 ) ;	1300:4:28660:28670	2308460	0	True				
ANR	2308991	PrimaryExpression	0		2308460	0					
ANR	2308992	ReturnType	int		2308460	1					
ANR	2308993	Identifier	main		2308460	2					
ANR	2308994	ParameterList	"int argc , char * argv [ ]"		2308460	3					
ANR	2308995	Parameter	int argc	1095:5:24570:24578	2308460	0	True				
ANR	2308996	ParameterType	int		2308460	0					
ANR	2308997	Identifier	argc		2308460	1					
ANR	2308998	Parameter	char * argv [ ]	1096:5:24632:24643	2308460	1	True				
ANR	2308999	ParameterType	char * [ ]		2308460	0					
ANR	2309000	Identifier	argv		2308460	1					
ANR	2309001	CFGEntryNode	ENTRY		2308460		True				
ANR	2309002	CFGExitNode	EXIT		2308460		True				
ANR	2309003	Symbol	ppdOpenFile		2308460						
ANR	2309004	Symbol	& linenum		2308460						
ANR	2309005	Symbol	ppdErrorString		2308460						
ANR	2309006	Symbol	cupsParseOptions		2308460						
ANR	2309007	Symbol	* argv		2308460						
ANR	2309008	Symbol	Page		2308460						
ANR	2309009	Symbol	header . cupsBytesPerLine		2308460						
ANR	2309010	Symbol	argv		2308460						
ANR	2309011	Symbol	options		2308460						
ANR	2309012	Symbol	action		2308460						
ANR	2309013	Symbol	linenum		2308460						
ANR	2309014	Symbol	CancelJob		2308460						
ANR	2309015	Symbol	SIGTERM		2308460						
ANR	2309016	Symbol	CUPS_RASTER_READ		2308460						
ANR	2309017	Symbol	_		2308460						
ANR	2309018	Symbol	getenv		2308460						
ANR	2309019	Symbol	argc		2308460						
ANR	2309020	Symbol	Buffer		2308460						
ANR	2309021	Symbol	NULL		2308460						
ANR	2309022	Symbol	ras		2308460						
ANR	2309023	Symbol	ppd		2308460						
ANR	2309024	Symbol	cupsRasterReadHeader2		2308460						
ANR	2309025	Symbol	num_options		2308460						
ANR	2309026	Symbol	stderr		2308460						
ANR	2309027	Symbol	& header		2308460						
ANR	2309028	Symbol	& options		2308460						
ANR	2309029	Symbol	header . cupsHeight		2308460						
ANR	2309030	Symbol	O_RDONLY		2308460						
ANR	2309031	Symbol	cupsRasterOpen		2308460						
ANR	2309032	Symbol	ppdLastError		2308460						
ANR	2309033	Symbol	header		2308460						
ANR	2309034	Symbol	y		2308460						
ANR	2309035	Symbol	Canceled		2308460						
ANR	2309036	Symbol	fd		2308460						
ANR	2309037	Symbol	open		2308460						
ANR	2309038	Symbol	cupsRasterReadPixels		2308460						
ANR	2309039	Symbol	status		2308460						
