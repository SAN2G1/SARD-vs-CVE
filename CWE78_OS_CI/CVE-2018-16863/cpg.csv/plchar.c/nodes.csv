command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8433015	File	data/converged/CVE-2018-16863_ghostpdl/plchar.c								
ANR	8433016	DeclStmt									
ANR	8433017	Decl							define CACHE_TRUETYPE_CHARS	define CACHE_TRUETYPE_CHARS	gs_private_st_ptrs1
ANR	8433018	Function	pl_prepend_xl_dummy_header	67:0:2138:2222							
ANR	8433019	FunctionDef	"pl_prepend_xl_dummy_header (gs_memory_t * mem , byte * * ppheader)"		8433018	0					
ANR	8433020	CompoundStatement		69:0:2206:2222	8433018	0					
ANR	8433021	ReturnStatement	return 0 ;	70:4:2212:2220	8433018	0	True				
ANR	8433022	PrimaryExpression	0		8433018	0					
ANR	8433023	ReturnType	int		8433018	1					
ANR	8433024	Identifier	pl_prepend_xl_dummy_header		8433018	2					
ANR	8433025	ParameterList	"gs_memory_t * mem , byte * * ppheader"		8433018	3					
ANR	8433026	Parameter	gs_memory_t * mem	68:27:2169:2185	8433018	0	True				
ANR	8433027	ParameterType	gs_memory_t *		8433018	0					
ANR	8433028	Identifier	mem		8433018	1					
ANR	8433029	Parameter	byte * * ppheader	68:46:2188:2203	8433018	1	True				
ANR	8433030	ParameterType	byte * *		8433018	0					
ANR	8433031	Identifier	ppheader		8433018	1					
ANR	8433032	CFGEntryNode	ENTRY		8433018		True				
ANR	8433033	CFGExitNode	EXIT		8433018		True				
ANR	8433034	Symbol	mem		8433018						
ANR	8433035	Symbol	ppheader		8433018						
ANR	8433036	Function	pl_swap_header	73:0:2225:2287							
ANR	8433037	FunctionDef	"pl_swap_header (byte * header , uint gifct)"		8433036	0					
ANR	8433038	CompoundStatement		75:0:2271:2287	8433036	0					
ANR	8433039	ReturnStatement	return 0 ;	76:4:2277:2285	8433036	0	True				
ANR	8433040	PrimaryExpression	0		8433036	0					
ANR	8433041	ReturnType	int		8433036	1					
ANR	8433042	Identifier	pl_swap_header		8433036	2					
ANR	8433043	ParameterList	"byte * header , uint gifct"		8433036	3					
ANR	8433044	Parameter	byte * header	74:15:2244:2256	8433036	0	True				
ANR	8433045	ParameterType	byte *		8433036	0					
ANR	8433046	Identifier	header		8433036	1					
ANR	8433047	Parameter	uint gifct	74:30:2259:2268	8433036	1	True				
ANR	8433048	ParameterType	uint		8433036	0					
ANR	8433049	Identifier	gifct		8433036	1					
ANR	8433050	CFGEntryNode	ENTRY		8433036		True				
ANR	8433051	CFGExitNode	EXIT		8433036		True				
ANR	8433052	Symbol	header		8433036						
ANR	8433053	Symbol	gifct		8433036						
ANR	8433054	Function	pl_font_lookup_glyph	83:0:2471:2996							
ANR	8433055	FunctionDef	"pl_font_lookup_glyph (const pl_font_t * plfont , gs_glyph glyph)"		8433054	0					
ANR	8433056	CompoundStatement		85:0:2552:2996	8433054	0					
ANR	8433057	IdentifierDeclStatement	uint size = plfont -> glyphs . size ;	86:4:2558:2589	8433054	0	True				
ANR	8433058	IdentifierDecl	size = plfont -> glyphs . size		8433054	0					
ANR	8433059	IdentifierDeclType	uint		8433054	0					
ANR	8433060	Identifier	size		8433054	1					
ANR	8433061	AssignmentExpression	size = plfont -> glyphs . size		8433054	2		=			
ANR	8433062	Identifier	size		8433054	0					
ANR	8433063	MemberAccess	plfont -> glyphs . size		8433054	1					
ANR	8433064	PtrMemberAccess	plfont -> glyphs		8433054	0					
ANR	8433065	Identifier	plfont		8433054	0					
ANR	8433066	Identifier	glyphs		8433054	1					
ANR	8433067	Identifier	size		8433054	1					
ANR	8433068	IdentifierDeclStatement	uint skip = plfont -> glyphs . skip ;	87:4:2595:2626	8433054	1	True				
ANR	8433069	IdentifierDecl	skip = plfont -> glyphs . skip		8433054	0					
ANR	8433070	IdentifierDeclType	uint		8433054	0					
ANR	8433071	Identifier	skip		8433054	1					
ANR	8433072	AssignmentExpression	skip = plfont -> glyphs . skip		8433054	2		=			
ANR	8433073	Identifier	skip		8433054	0					
ANR	8433074	MemberAccess	plfont -> glyphs . skip		8433054	1					
ANR	8433075	PtrMemberAccess	plfont -> glyphs		8433054	0					
ANR	8433076	Identifier	plfont		8433054	0					
ANR	8433077	Identifier	glyphs		8433054	1					
ANR	8433078	Identifier	skip		8433054	1					
ANR	8433079	IdentifierDeclStatement	uint index = glyph % size ;	88:4:2632:2657	8433054	2	True				
ANR	8433080	IdentifierDecl	index = glyph % size		8433054	0					
ANR	8433081	IdentifierDeclType	uint		8433054	0					
ANR	8433082	Identifier	index		8433054	1					
ANR	8433083	AssignmentExpression	index = glyph % size		8433054	2		=			
ANR	8433084	Identifier	index		8433054	0					
ANR	8433085	MultiplicativeExpression	glyph % size		8433054	1		%			
ANR	8433086	Identifier	glyph		8433054	0					
ANR	8433087	Identifier	size		8433054	1					
ANR	8433088	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	89:4:2663:2683	8433054	3	True				
ANR	8433089	IdentifierDecl	* pfg		8433054	0					
ANR	8433090	IdentifierDeclType	pl_font_glyph_t *		8433054	0					
ANR	8433091	Identifier	pfg		8433054	1					
ANR	8433092	IdentifierDeclStatement	pl_font_glyph_t * result = 0 ;	90:4:2689:2716	8433054	4	True				
ANR	8433093	IdentifierDecl	* result = 0		8433054	0					
ANR	8433094	IdentifierDeclType	pl_font_glyph_t *		8433054	0					
ANR	8433095	Identifier	result		8433054	1					
ANR	8433096	AssignmentExpression	* result = 0		8433054	2		=			
ANR	8433097	Identifier	result		8433054	0					
ANR	8433098	PrimaryExpression	0		8433054	1					
ANR	8433099	WhileStatement	while ( ( pfg = plfont -> glyphs . table + index ) -> data ? pfg -> glyph != glyph : pfg -> glyph != 0 )		8433054	5					
ANR	8433100	Condition	( pfg = plfont -> glyphs . table + index ) -> data ? pfg -> glyph != glyph : pfg -> glyph != 0	92:11:2730:2822	8433054	0	True				
ANR	8433101	ConditionalExpression	( pfg = plfont -> glyphs . table + index ) -> data ? pfg -> glyph != glyph : pfg -> glyph != 0		8433054	0					
ANR	8433102	Condition	( pfg = plfont -> glyphs . table + index ) -> data		8433054	0					
ANR	8433103	PtrMemberAccess	( pfg = plfont -> glyphs . table + index ) -> data		8433054	0					
ANR	8433104	AssignmentExpression	pfg = plfont -> glyphs . table + index		8433054	0		=			
ANR	8433105	Identifier	pfg		8433054	0					
ANR	8433106	AdditiveExpression	plfont -> glyphs . table + index		8433054	1		+			
ANR	8433107	MemberAccess	plfont -> glyphs . table		8433054	0					
ANR	8433108	PtrMemberAccess	plfont -> glyphs		8433054	0					
ANR	8433109	Identifier	plfont		8433054	0					
ANR	8433110	Identifier	glyphs		8433054	1					
ANR	8433111	Identifier	table		8433054	1					
ANR	8433112	Identifier	index		8433054	1					
ANR	8433113	Identifier	data		8433054	1					
ANR	8433114	EqualityExpression	pfg -> glyph != glyph		8433054	1		!=			
ANR	8433115	PtrMemberAccess	pfg -> glyph		8433054	0					
ANR	8433116	Identifier	pfg		8433054	0					
ANR	8433117	Identifier	glyph		8433054	1					
ANR	8433118	Identifier	glyph		8433054	1					
ANR	8433119	EqualityExpression	pfg -> glyph != 0		8433054	2		!=			
ANR	8433120	PtrMemberAccess	pfg -> glyph		8433054	0					
ANR	8433121	Identifier	pfg		8433054	0					
ANR	8433122	Identifier	glyph		8433054	1					
ANR	8433123	PrimaryExpression	0		8433054	1					
ANR	8433124	CompoundStatement		9:50:272:272	8433054	1					
ANR	8433125	IfStatement	if ( ! pfg -> data )		8433054	0					
ANR	8433126	Condition	! pfg -> data	94:12:2839:2848	8433054	0	True				
ANR	8433127	UnaryOperationExpression	! pfg -> data		8433054	0					
ANR	8433128	UnaryOperator	!		8433054	0					
ANR	8433129	PtrMemberAccess	pfg -> data		8433054	1					
ANR	8433130	Identifier	pfg		8433054	0					
ANR	8433131	Identifier	data		8433054	1					
ANR	8433132	ExpressionStatement	result = pfg	95:12:2863:2875	8433054	1	True				
ANR	8433133	AssignmentExpression	result = pfg		8433054	0		=			
ANR	8433134	Identifier	result		8433054	0					
ANR	8433135	Identifier	pfg		8433054	1					
ANR	8433136	ExpressionStatement	index = ( index >= skip ? index : index + size ) - skip	96:8:2885:2938	8433054	1	True				
ANR	8433137	AssignmentExpression	index = ( index >= skip ? index : index + size ) - skip		8433054	0		=			
ANR	8433138	Identifier	index		8433054	0					
ANR	8433139	AdditiveExpression	( index >= skip ? index : index + size ) - skip		8433054	1		-			
ANR	8433140	ConditionalExpression	index >= skip ? index : index + size		8433054	0					
ANR	8433141	Condition	index >= skip		8433054	0					
ANR	8433142	RelationalExpression	index >= skip		8433054	0		>=			
ANR	8433143	Identifier	index		8433054	0					
ANR	8433144	Identifier	skip		8433054	1					
ANR	8433145	Identifier	index		8433054	1					
ANR	8433146	AdditiveExpression	index + size		8433054	2		+			
ANR	8433147	Identifier	index		8433054	0					
ANR	8433148	Identifier	size		8433054	1					
ANR	8433149	Identifier	skip		8433054	1					
ANR	8433150	ReturnStatement	return ( ! pfg -> data && result ) ? result : pfg ;	98:4:2950:2994	8433054	6	True				
ANR	8433151	ConditionalExpression	( ! pfg -> data && result ) ? result : pfg		8433054	0					
ANR	8433152	Condition	! pfg -> data && result		8433054	0					
ANR	8433153	AndExpression	! pfg -> data && result		8433054	0		&&			
ANR	8433154	UnaryOperationExpression	! pfg -> data		8433054	0					
ANR	8433155	UnaryOperator	!		8433054	0					
ANR	8433156	PtrMemberAccess	pfg -> data		8433054	1					
ANR	8433157	Identifier	pfg		8433054	0					
ANR	8433158	Identifier	data		8433054	1					
ANR	8433159	Identifier	result		8433054	1					
ANR	8433160	Identifier	result		8433054	1					
ANR	8433161	Identifier	pfg		8433054	2					
ANR	8433162	ReturnType	pl_font_glyph_t *		8433054	1					
ANR	8433163	Identifier	pl_font_lookup_glyph		8433054	2					
ANR	8433164	ParameterList	"const pl_font_t * plfont , gs_glyph glyph"		8433054	3					
ANR	8433165	Parameter	const pl_font_t * plfont	84:21:2510:2533	8433054	0	True				
ANR	8433166	ParameterType	const pl_font_t *		8433054	0					
ANR	8433167	Identifier	plfont		8433054	1					
ANR	8433168	Parameter	gs_glyph glyph	84:47:2536:2549	8433054	1	True				
ANR	8433169	ParameterType	gs_glyph		8433054	0					
ANR	8433170	Identifier	glyph		8433054	1					
ANR	8433171	CFGEntryNode	ENTRY		8433054		True				
ANR	8433172	CFGExitNode	EXIT		8433054		True				
ANR	8433173	Symbol	plfont -> glyphs . table		8433054						
ANR	8433174	Symbol	index		8433054						
ANR	8433175	Symbol	skip		8433054						
ANR	8433176	Symbol	plfont		8433054						
ANR	8433177	Symbol	plfont -> glyphs . size		8433054						
ANR	8433178	Symbol	pfg -> glyph		8433054						
ANR	8433179	Symbol	plfont -> glyphs . skip		8433054						
ANR	8433180	Symbol	( pfg = plfont -> glyphs . table + index ) -> data		8433054						
ANR	8433181	Symbol	pfg		8433054						
ANR	8433182	Symbol	result		8433054						
ANR	8433183	Symbol	glyph		8433054						
ANR	8433184	Symbol	size		8433054						
ANR	8433185	Symbol	* plfont		8433054						
ANR	8433186	Symbol	plfont -> glyphs		8433054						
ANR	8433187	Symbol	* pfg		8433054						
ANR	8433188	Symbol	pfg -> data		8433054						
ANR	8433189	Function	pl_bitmap_encode_char	105:0:3166:3290							
ANR	8433190	FunctionDef	"pl_bitmap_encode_char (gs_font * pfont , gs_char chr , gs_glyph_space_t not_used)"		8433189	0					
ANR	8433191	CompoundStatement		107:0:3261:3290	8433189	0					
ANR	8433192	ReturnStatement	return ( gs_glyph ) chr ;	108:4:3267:3288	8433189	0	True				
ANR	8433193	CastExpression	( gs_glyph ) chr		8433189	0					
ANR	8433194	CastTarget	gs_glyph		8433189	0					
ANR	8433195	Identifier	chr		8433189	1					
ANR	8433196	ReturnType	static gs_glyph		8433189	1					
ANR	8433197	Identifier	pl_bitmap_encode_char		8433189	2					
ANR	8433198	ParameterList	"gs_font * pfont , gs_char chr , gs_glyph_space_t not_used"		8433189	3					
ANR	8433199	Parameter	gs_font * pfont	106:22:3204:3218	8433189	0	True				
ANR	8433200	ParameterType	gs_font *		8433189	0					
ANR	8433201	Identifier	pfont		8433189	1					
ANR	8433202	Parameter	gs_char chr	106:39:3221:3231	8433189	1	True				
ANR	8433203	ParameterType	gs_char		8433189	0					
ANR	8433204	Identifier	chr		8433189	1					
ANR	8433205	Parameter	gs_glyph_space_t not_used	106:52:3234:3258	8433189	2	True				
ANR	8433206	ParameterType	gs_glyph_space_t		8433189	0					
ANR	8433207	Identifier	not_used		8433189	1					
ANR	8433208	CFGEntryNode	ENTRY		8433189		True				
ANR	8433209	CFGExitNode	EXIT		8433189		True				
ANR	8433210	Symbol	not_used		8433189						
ANR	8433211	Symbol	pfont		8433189						
ANR	8433212	Symbol	chr		8433189						
ANR	8433213	Function	pl_bitmap_char_width	113:0:3399:4195							
ANR	8433214	FunctionDef	"pl_bitmap_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8433213	0					
ANR	8433215	CompoundStatement		116:0:3533:4195	8433213	0					
ANR	8433216	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	117:4:3539:3604	8433213	0	True				
ANR	8433217	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433213	0					
ANR	8433218	IdentifierDeclType	const byte *		8433213	0					
ANR	8433219	Identifier	cdata		8433213	1					
ANR	8433220	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433213	2		=			
ANR	8433221	Identifier	cdata		8433213	0					
ANR	8433222	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433213	1					
ANR	8433223	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8433213	0					
ANR	8433224	Callee	pl_font_lookup_glyph		8433213	0					
ANR	8433225	Identifier	pl_font_lookup_glyph		8433213	0					
ANR	8433226	ArgumentList	plfont		8433213	1					
ANR	8433227	Argument	plfont		8433213	0					
ANR	8433228	Identifier	plfont		8433213	0					
ANR	8433229	Argument	char_code		8433213	1					
ANR	8433230	Identifier	char_code		8433213	0					
ANR	8433231	Identifier	data		8433213	1					
ANR	8433232	ExpressionStatement	pwidth -> x = pwidth -> y = 0	119:4:3611:3636	8433213	1	True				
ANR	8433233	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8433213	0		=			
ANR	8433234	PtrMemberAccess	pwidth -> x		8433213	0					
ANR	8433235	Identifier	pwidth		8433213	0					
ANR	8433236	Identifier	x		8433213	1					
ANR	8433237	AssignmentExpression	pwidth -> y = 0		8433213	1		=			
ANR	8433238	PtrMemberAccess	pwidth -> y		8433213	0					
ANR	8433239	Identifier	pwidth		8433213	0					
ANR	8433240	Identifier	y		8433213	1					
ANR	8433241	PrimaryExpression	0		8433213	1					
ANR	8433242	IfStatement	if ( cdata == 0 )		8433213	2					
ANR	8433243	Condition	cdata == 0	121:8:3647:3656	8433213	0	True				
ANR	8433244	EqualityExpression	cdata == 0		8433213	0		==			
ANR	8433245	Identifier	cdata		8433213	0					
ANR	8433246	PrimaryExpression	0		8433213	1					
ANR	8433247	CompoundStatement		6:20:125:125	8433213	1					
ANR	8433248	ReturnStatement	return 1 ;	122:8:3669:3677	8433213	0	True				
ANR	8433249	PrimaryExpression	1		8433213	0					
ANR	8433250	IfStatement	if ( cdata [ 0 ] == 0 )		8433213	3					
ANR	8433251	Condition	cdata [ 0 ] == 0	124:8:3693:3705	8433213	0	True				
ANR	8433252	EqualityExpression	cdata [ 0 ] == 0		8433213	0		==			
ANR	8433253	ArrayIndexing	cdata [ 0 ]		8433213	0					
ANR	8433254	Identifier	cdata		8433213	0					
ANR	8433255	PrimaryExpression	0		8433213	1					
ANR	8433256	PrimaryExpression	0		8433213	1					
ANR	8433257	CompoundStatement		9:23:174:174	8433213	1					
ANR	8433258	ExpressionStatement	pwidth -> x = pwidth -> y = 0	125:8:3775:3800	8433213	0	True				
ANR	8433259	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8433213	0		=			
ANR	8433260	PtrMemberAccess	pwidth -> x		8433213	0					
ANR	8433261	Identifier	pwidth		8433213	0					
ANR	8433262	Identifier	x		8433213	1					
ANR	8433263	AssignmentExpression	pwidth -> y = 0		8433213	1		=			
ANR	8433264	PtrMemberAccess	pwidth -> y		8433213	0					
ANR	8433265	Identifier	pwidth		8433213	0					
ANR	8433266	Identifier	y		8433213	1					
ANR	8433267	PrimaryExpression	0		8433213	1					
ANR	8433268	ReturnStatement	return 0 ;	126:8:3810:3818	8433213	1	True				
ANR	8433269	PrimaryExpression	0		8433213	0					
ANR	8433270	CompoundStatement		15:8:307:337	8433213	4					
ANR	8433271	IdentifierDeclStatement	const byte * params = cdata + 6 ;	130:8:3841:3871	8433213	0	True				
ANR	8433272	IdentifierDecl	* params = cdata + 6		8433213	0					
ANR	8433273	IdentifierDeclType	const byte *		8433213	0					
ANR	8433274	Identifier	params		8433213	1					
ANR	8433275	AssignmentExpression	* params = cdata + 6		8433213	2		=			
ANR	8433276	Identifier	params		8433213	0					
ANR	8433277	AdditiveExpression	cdata + 6		8433213	1		+			
ANR	8433278	Identifier	cdata		8433213	0					
ANR	8433279	PrimaryExpression	6		8433213	1					
ANR	8433280	ExpressionStatement	pwidth -> x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )	132:8:3882:4173	8433213	1	True				
ANR	8433281	AssignmentExpression	pwidth -> x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )		8433213	0		=			
ANR	8433282	PtrMemberAccess	pwidth -> x		8433213	0					
ANR	8433283	Identifier	pwidth		8433213	0					
ANR	8433284	Identifier	x		8433213	1					
ANR	8433285	ConditionalExpression	plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : pl_get_int16 ( params ) + pl_get_int16 ( params + 4 )		8433213	1					
ANR	8433286	Condition	plfont -> header [ 13 ]		8433213	0					
ANR	8433287	ArrayIndexing	plfont -> header [ 13 ]		8433213	0					
ANR	8433288	PtrMemberAccess	plfont -> header		8433213	0					
ANR	8433289	Identifier	plfont		8433213	0					
ANR	8433290	Identifier	header		8433213	1					
ANR	8433291	PrimaryExpression	13		8433213	1					
ANR	8433292	MultiplicativeExpression	pl_get_int16 ( params + 8 ) * 0.25		8433213	1		*			
ANR	8433293	CallExpression	pl_get_int16 ( params + 8 )		8433213	0					
ANR	8433294	Callee	pl_get_int16		8433213	0					
ANR	8433295	Identifier	pl_get_int16		8433213	0					
ANR	8433296	ArgumentList	params + 8		8433213	1					
ANR	8433297	Argument	params + 8		8433213	0					
ANR	8433298	AdditiveExpression	params + 8		8433213	0		+			
ANR	8433299	Identifier	params		8433213	0					
ANR	8433300	PrimaryExpression	8		8433213	1					
ANR	8433301	PrimaryExpression	0.25		8433213	1					
ANR	8433302	AdditiveExpression	pl_get_int16 ( params ) + pl_get_int16 ( params + 4 )		8433213	2		+			
ANR	8433303	CallExpression	pl_get_int16 ( params )		8433213	0					
ANR	8433304	Callee	pl_get_int16		8433213	0					
ANR	8433305	Identifier	pl_get_int16		8433213	0					
ANR	8433306	ArgumentList	params		8433213	1					
ANR	8433307	Argument	params		8433213	0					
ANR	8433308	Identifier	params		8433213	0					
ANR	8433309	CallExpression	pl_get_int16 ( params + 4 )		8433213	1					
ANR	8433310	Callee	pl_get_int16		8433213	0					
ANR	8433311	Identifier	pl_get_int16		8433213	0					
ANR	8433312	ArgumentList	params + 4		8433213	1					
ANR	8433313	Argument	params + 4		8433213	0					
ANR	8433314	AdditiveExpression	params + 4		8433213	0		+			
ANR	8433315	Identifier	params		8433213	0					
ANR	8433316	PrimaryExpression	4		8433213	1					
ANR	8433317	ReturnStatement	return 0 ;	138:4:4185:4193	8433213	5	True				
ANR	8433318	PrimaryExpression	0		8433213	0					
ANR	8433319	ReturnType	static int		8433213	1					
ANR	8433320	Identifier	pl_bitmap_char_width		8433213	2					
ANR	8433321	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8433213	3					
ANR	8433322	Parameter	const pl_font_t * plfont	114:21:3431:3454	8433213	0	True				
ANR	8433323	ParameterType	const pl_font_t *		8433213	0					
ANR	8433324	Identifier	plfont		8433213	1					
ANR	8433325	Parameter	const void * pgs	114:47:3457:3471	8433213	1	True				
ANR	8433326	ParameterType	const void *		8433213	0					
ANR	8433327	Identifier	pgs		8433213	1					
ANR	8433328	Parameter	gs_char char_code	115:21:3495:3511	8433213	2	True				
ANR	8433329	ParameterType	gs_char		8433213	0					
ANR	8433330	Identifier	char_code		8433213	1					
ANR	8433331	Parameter	gs_point * pwidth	115:40:3514:3530	8433213	3	True				
ANR	8433332	ParameterType	gs_point *		8433213	0					
ANR	8433333	Identifier	pwidth		8433213	1					
ANR	8433334	CFGEntryNode	ENTRY		8433213		True				
ANR	8433335	CFGExitNode	EXIT		8433213		True				
ANR	8433336	Symbol	* * plfont		8433213						
ANR	8433337	Symbol	pl_font_lookup_glyph		8433213						
ANR	8433338	Symbol	plfont -> header		8433213						
ANR	8433339	Symbol	pwidth -> y		8433213						
ANR	8433340	Symbol	char_code		8433213						
ANR	8433341	Symbol	pwidth		8433213						
ANR	8433342	Symbol	plfont		8433213						
ANR	8433343	Symbol	* pl_font_lookup_glyph		8433213						
ANR	8433344	Symbol	params		8433213						
ANR	8433345	Symbol	cdata		8433213						
ANR	8433346	Symbol	pwidth -> x		8433213						
ANR	8433347	Symbol	* cdata		8433213						
ANR	8433348	Symbol	pl_get_int16		8433213						
ANR	8433349	Symbol	* plfont -> header		8433213						
ANR	8433350	Symbol	* plfont		8433213						
ANR	8433351	Symbol	* pwidth		8433213						
ANR	8433352	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433213						
ANR	8433353	Symbol	pgs		8433213						
ANR	8433354	Function	pl_bitmap_char_metrics	141:0:4198:4848							
ANR	8433355	FunctionDef	"pl_bitmap_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8433354	0					
ANR	8433356	CompoundStatement		144:0:4335:4848	8433354	0					
ANR	8433357	IdentifierDeclStatement	gs_point width ;	145:4:4341:4355	8433354	0	True				
ANR	8433358	IdentifierDecl	width		8433354	0					
ANR	8433359	IdentifierDeclType	gs_point		8433354	0					
ANR	8433360	Identifier	width		8433354	1					
ANR	8433361	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	146:4:4361:4426	8433354	1	True				
ANR	8433362	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433354	0					
ANR	8433363	IdentifierDeclType	const byte *		8433354	0					
ANR	8433364	Identifier	cdata		8433354	1					
ANR	8433365	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433354	2		=			
ANR	8433366	Identifier	cdata		8433354	0					
ANR	8433367	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433354	1					
ANR	8433368	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8433354	0					
ANR	8433369	Callee	pl_font_lookup_glyph		8433354	0					
ANR	8433370	Identifier	pl_font_lookup_glyph		8433354	0					
ANR	8433371	ArgumentList	plfont		8433354	1					
ANR	8433372	Argument	plfont		8433354	0					
ANR	8433373	Identifier	plfont		8433354	0					
ANR	8433374	Argument	char_code		8433354	1					
ANR	8433375	Identifier	char_code		8433354	0					
ANR	8433376	Identifier	data		8433354	1					
ANR	8433377	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0	149:4:4471:4524	8433354	2	True				
ANR	8433378	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8433354	0		=			
ANR	8433379	ArrayIndexing	metrics [ 0 ]		8433354	0					
ANR	8433380	Identifier	metrics		8433354	0					
ANR	8433381	PrimaryExpression	0		8433354	1					
ANR	8433382	AssignmentExpression	metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8433354	1		=			
ANR	8433383	ArrayIndexing	metrics [ 1 ]		8433354	0					
ANR	8433384	Identifier	metrics		8433354	0					
ANR	8433385	PrimaryExpression	1		8433354	1					
ANR	8433386	AssignmentExpression	metrics [ 2 ] = metrics [ 3 ] = 0		8433354	1		=			
ANR	8433387	ArrayIndexing	metrics [ 2 ]		8433354	0					
ANR	8433388	Identifier	metrics		8433354	0					
ANR	8433389	PrimaryExpression	2		8433354	1					
ANR	8433390	AssignmentExpression	metrics [ 3 ] = 0		8433354	1		=			
ANR	8433391	ArrayIndexing	metrics [ 3 ]		8433354	0					
ANR	8433392	Identifier	metrics		8433354	0					
ANR	8433393	PrimaryExpression	3		8433354	1					
ANR	8433394	PrimaryExpression	0		8433354	1					
ANR	8433395	IfStatement	if ( cdata == 0 )		8433354	3					
ANR	8433396	Condition	cdata == 0	151:8:4574:4583	8433354	0	True				
ANR	8433397	EqualityExpression	cdata == 0		8433354	0		==			
ANR	8433398	Identifier	cdata		8433354	0					
ANR	8433399	PrimaryExpression	0		8433354	1					
ANR	8433400	ReturnStatement	return 1 ;	152:8:4594:4602	8433354	1	True				
ANR	8433401	PrimaryExpression	1		8433354	0					
ANR	8433402	IfStatement	if ( cdata [ 0 ] == 0 )		8433354	4					
ANR	8433403	Condition	cdata [ 0 ] == 0	154:8:4667:4679	8433354	0	True				
ANR	8433404	EqualityExpression	cdata [ 0 ] == 0		8433354	0		==			
ANR	8433405	ArrayIndexing	cdata [ 0 ]		8433354	0					
ANR	8433406	Identifier	cdata		8433354	0					
ANR	8433407	PrimaryExpression	0		8433354	1					
ANR	8433408	PrimaryExpression	0		8433354	1					
ANR	8433409	ReturnStatement	return 0 ;	155:8:4690:4698	8433354	1	True				
ANR	8433410	PrimaryExpression	0		8433354	0					
ANR	8433411	ExpressionStatement	metrics [ 0 ] = ( float ) pl_get_int16 ( cdata + 6 )	157:4:4705:4748	8433354	5	True				
ANR	8433412	AssignmentExpression	metrics [ 0 ] = ( float ) pl_get_int16 ( cdata + 6 )		8433354	0		=			
ANR	8433413	ArrayIndexing	metrics [ 0 ]		8433354	0					
ANR	8433414	Identifier	metrics		8433354	0					
ANR	8433415	PrimaryExpression	0		8433354	1					
ANR	8433416	CastExpression	( float ) pl_get_int16 ( cdata + 6 )		8433354	1					
ANR	8433417	CastTarget	float		8433354	0					
ANR	8433418	CallExpression	pl_get_int16 ( cdata + 6 )		8433354	1					
ANR	8433419	Callee	pl_get_int16		8433354	0					
ANR	8433420	Identifier	pl_get_int16		8433354	0					
ANR	8433421	ArgumentList	cdata + 6		8433354	1					
ANR	8433422	Argument	cdata + 6		8433354	0					
ANR	8433423	AdditiveExpression	cdata + 6		8433354	0		+			
ANR	8433424	Identifier	cdata		8433354	0					
ANR	8433425	PrimaryExpression	6		8433354	1					
ANR	8433426	ExpressionStatement	"pl_bitmap_char_width ( plfont , pgs , char_code , & width )"	158:4:4754:4806	8433354	6	True				
ANR	8433427	CallExpression	"pl_bitmap_char_width ( plfont , pgs , char_code , & width )"		8433354	0					
ANR	8433428	Callee	pl_bitmap_char_width		8433354	0					
ANR	8433429	Identifier	pl_bitmap_char_width		8433354	0					
ANR	8433430	ArgumentList	plfont		8433354	1					
ANR	8433431	Argument	plfont		8433354	0					
ANR	8433432	Identifier	plfont		8433354	0					
ANR	8433433	Argument	pgs		8433354	1					
ANR	8433434	Identifier	pgs		8433354	0					
ANR	8433435	Argument	char_code		8433354	2					
ANR	8433436	Identifier	char_code		8433354	0					
ANR	8433437	Argument	& width		8433354	3					
ANR	8433438	UnaryOperationExpression	& width		8433354	0					
ANR	8433439	UnaryOperator	&		8433354	0					
ANR	8433440	Identifier	width		8433354	1					
ANR	8433441	ExpressionStatement	metrics [ 2 ] = width . x	159:4:4812:4832	8433354	7	True				
ANR	8433442	AssignmentExpression	metrics [ 2 ] = width . x		8433354	0		=			
ANR	8433443	ArrayIndexing	metrics [ 2 ]		8433354	0					
ANR	8433444	Identifier	metrics		8433354	0					
ANR	8433445	PrimaryExpression	2		8433354	1					
ANR	8433446	MemberAccess	width . x		8433354	1					
ANR	8433447	Identifier	width		8433354	0					
ANR	8433448	Identifier	x		8433354	1					
ANR	8433449	ReturnStatement	return 0 ;	160:4:4838:4846	8433354	8	True				
ANR	8433450	PrimaryExpression	0		8433354	0					
ANR	8433451	ReturnType	static int		8433354	1					
ANR	8433452	Identifier	pl_bitmap_char_metrics		8433354	2					
ANR	8433453	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8433354	3					
ANR	8433454	Parameter	const pl_font_t * plfont	142:23:4232:4255	8433354	0	True				
ANR	8433455	ParameterType	const pl_font_t *		8433354	0					
ANR	8433456	Identifier	plfont		8433354	1					
ANR	8433457	Parameter	const void * pgs	142:49:4258:4272	8433354	1	True				
ANR	8433458	ParameterType	const void *		8433354	0					
ANR	8433459	Identifier	pgs		8433354	1					
ANR	8433460	Parameter	gs_char char_code	143:23:4298:4314	8433354	2	True				
ANR	8433461	ParameterType	gs_char		8433354	0					
ANR	8433462	Identifier	char_code		8433354	1					
ANR	8433463	Parameter	float metrics [ 4 ]	143:42:4317:4332	8433354	3	True				
ANR	8433464	ParameterType	float [ 4 ]		8433354	0					
ANR	8433465	Identifier	metrics		8433354	1					
ANR	8433466	CFGEntryNode	ENTRY		8433354		True				
ANR	8433467	CFGExitNode	EXIT		8433354		True				
ANR	8433468	Symbol	pl_font_lookup_glyph		8433354						
ANR	8433469	Symbol	char_code		8433354						
ANR	8433470	Symbol	& width		8433354						
ANR	8433471	Symbol	plfont		8433354						
ANR	8433472	Symbol	* pl_font_lookup_glyph		8433354						
ANR	8433473	Symbol	cdata		8433354						
ANR	8433474	Symbol	* metrics		8433354						
ANR	8433475	Symbol	* cdata		8433354						
ANR	8433476	Symbol	pl_get_int16		8433354						
ANR	8433477	Symbol	width		8433354						
ANR	8433478	Symbol	width . x		8433354						
ANR	8433479	Symbol	metrics		8433354						
ANR	8433480	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8433354						
ANR	8433481	Symbol	pgs		8433354						
ANR	8433482	Function	alloc_bold_lines	173:0:5359:5568							
ANR	8433483	FunctionDef	"alloc_bold_lines (gs_memory_t * mem , uint width , int bold , client_name_t cname)"		8433482	0					
ANR	8433484	CompoundStatement		175:0:5452:5568	8433482	0					
ANR	8433485	ReturnStatement	"return gs_alloc_byte_array ( mem , 2 + bold , bitmap_raster ( width + bold ) , cname ) ;"	176:4:5458:5566	8433482	0	True				
ANR	8433486	CallExpression	"gs_alloc_byte_array ( mem , 2 + bold , bitmap_raster ( width + bold ) , cname )"		8433482	0					
ANR	8433487	Callee	gs_alloc_byte_array		8433482	0					
ANR	8433488	Identifier	gs_alloc_byte_array		8433482	0					
ANR	8433489	ArgumentList	mem		8433482	1					
ANR	8433490	Argument	mem		8433482	0					
ANR	8433491	Identifier	mem		8433482	0					
ANR	8433492	Argument	2 + bold		8433482	1					
ANR	8433493	AdditiveExpression	2 + bold		8433482	0		+			
ANR	8433494	PrimaryExpression	2		8433482	0					
ANR	8433495	Identifier	bold		8433482	1					
ANR	8433496	Argument	bitmap_raster ( width + bold )		8433482	2					
ANR	8433497	CallExpression	bitmap_raster ( width + bold )		8433482	0					
ANR	8433498	Callee	bitmap_raster		8433482	0					
ANR	8433499	Identifier	bitmap_raster		8433482	0					
ANR	8433500	ArgumentList	width + bold		8433482	1					
ANR	8433501	Argument	width + bold		8433482	0					
ANR	8433502	AdditiveExpression	width + bold		8433482	0		+			
ANR	8433503	Identifier	width		8433482	0					
ANR	8433504	Identifier	bold		8433482	1					
ANR	8433505	Argument	cname		8433482	3					
ANR	8433506	Identifier	cname		8433482	0					
ANR	8433507	ReturnType	static byte *		8433482	1					
ANR	8433508	Identifier	alloc_bold_lines		8433482	2					
ANR	8433509	ParameterList	"gs_memory_t * mem , uint width , int bold , client_name_t cname"		8433482	3					
ANR	8433510	Parameter	gs_memory_t * mem	174:17:5390:5406	8433482	0	True				
ANR	8433511	ParameterType	gs_memory_t *		8433482	0					
ANR	8433512	Identifier	mem		8433482	1					
ANR	8433513	Parameter	uint width	174:36:5409:5418	8433482	1	True				
ANR	8433514	ParameterType	uint		8433482	0					
ANR	8433515	Identifier	width		8433482	1					
ANR	8433516	Parameter	int bold	174:48:5421:5428	8433482	2	True				
ANR	8433517	ParameterType	int		8433482	0					
ANR	8433518	Identifier	bold		8433482	1					
ANR	8433519	Parameter	client_name_t cname	174:58:5431:5449	8433482	3	True				
ANR	8433520	ParameterType	client_name_t		8433482	0					
ANR	8433521	Identifier	cname		8433482	1					
ANR	8433522	CFGEntryNode	ENTRY		8433482		True				
ANR	8433523	CFGExitNode	EXIT		8433482		True				
ANR	8433524	Symbol	mem		8433482						
ANR	8433525	Symbol	width		8433482						
ANR	8433526	Symbol	cname		8433482						
ANR	8433527	Symbol	bold		8433482						
ANR	8433528	Symbol	gs_alloc_byte_array		8433482						
ANR	8433529	Symbol	bitmap_raster		8433482						
ANR	8433530	Function	bits_merge	181:0:5644:6018							
ANR	8433531	FunctionDef	"bits_merge (byte * dest , const byte * src , uint nbytes)"		8433530	0					
ANR	8433532	CompoundStatement		183:0:5711:6018	8433530	0					
ANR	8433533	IdentifierDeclStatement	long * dp = ( long * ) dest ;	184:4:5717:5740	8433530	0	True				
ANR	8433534	IdentifierDecl	* dp = ( long * ) dest		8433530	0					
ANR	8433535	IdentifierDeclType	long *		8433530	0					
ANR	8433536	Identifier	dp		8433530	1					
ANR	8433537	AssignmentExpression	* dp = ( long * ) dest		8433530	2		=			
ANR	8433538	Identifier	dp		8433530	0					
ANR	8433539	CastExpression	( long * ) dest		8433530	1					
ANR	8433540	CastTarget	long *		8433530	0					
ANR	8433541	Identifier	dest		8433530	1					
ANR	8433542	IdentifierDeclStatement	const long * sp = ( const long * ) src ;	185:4:5746:5780	8433530	1	True				
ANR	8433543	IdentifierDecl	* sp = ( const long * ) src		8433530	0					
ANR	8433544	IdentifierDeclType	const long *		8433530	0					
ANR	8433545	Identifier	sp		8433530	1					
ANR	8433546	AssignmentExpression	* sp = ( const long * ) src		8433530	2		=			
ANR	8433547	Identifier	sp		8433530	0					
ANR	8433548	CastExpression	( const long * ) src		8433530	1					
ANR	8433549	CastTarget	const long *		8433530	0					
ANR	8433550	Identifier	src		8433530	1					
ANR	8433551	IdentifierDeclStatement	uint n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG ;	186:4:5786:5847	8433530	2	True				
ANR	8433552	IdentifierDecl	n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		8433530	0					
ANR	8433553	IdentifierDeclType	uint		8433530	0					
ANR	8433554	Identifier	n		8433530	1					
ANR	8433555	AssignmentExpression	n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		8433530	2		=			
ANR	8433556	Identifier	n		8433530	0					
ANR	8433557	ShiftExpression	( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		8433530	1		>>			
ANR	8433558	AdditiveExpression	nbytes + sizeof ( long ) - 1		8433530	0		+			
ANR	8433559	Identifier	nbytes		8433530	0					
ANR	8433560	AdditiveExpression	sizeof ( long ) - 1		8433530	1		-			
ANR	8433561	SizeofExpression	sizeof ( long )		8433530	0					
ANR	8433562	Sizeof	sizeof		8433530	0					
ANR	8433563	SizeofOperand	long		8433530	1					
ANR	8433564	PrimaryExpression	1		8433530	1					
ANR	8433565	Identifier	ARCH_LOG2_SIZEOF_LONG		8433530	1					
ANR	8433566	ForStatement	"for ( ; n >= 4 ; sp += 4 , dp += 4 , n -= 4 )"		8433530	3					
ANR	8433567	Condition	n >= 4	188:11:5861:5866	8433530	0	True				
ANR	8433568	RelationalExpression	n >= 4		8433530	0		>=			
ANR	8433569	Identifier	n		8433530	0					
ANR	8433570	PrimaryExpression	4		8433530	1					
ANR	8433571	Expression	"sp += 4 , dp += 4 , n -= 4"	188:19:5869:5892	8433530	1	True				
ANR	8433572	AssignmentExpression	sp += 4		8433530	0		+=			
ANR	8433573	Identifier	sp		8433530	0					
ANR	8433574	PrimaryExpression	4		8433530	1					
ANR	8433575	Expression	"dp += 4 , n -= 4"		8433530	1					
ANR	8433576	AssignmentExpression	dp += 4		8433530	0		+=			
ANR	8433577	Identifier	dp		8433530	0					
ANR	8433578	PrimaryExpression	4		8433530	1					
ANR	8433579	AssignmentExpression	n -= 4		8433530	1		-=			
ANR	8433580	Identifier	n		8433530	0					
ANR	8433581	PrimaryExpression	4		8433530	1					
ANR	8433582	ExpressionStatement	"dp [ 0 ] |= sp [ 0 ] , dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"	189:8:5903:5965	8433530	2	True				
ANR	8433583	Expression	"dp [ 0 ] |= sp [ 0 ] , dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		8433530	0					
ANR	8433584	AssignmentExpression	dp [ 0 ] |= sp [ 0 ]		8433530	0		|=			
ANR	8433585	ArrayIndexing	dp [ 0 ]		8433530	0					
ANR	8433586	Identifier	dp		8433530	0					
ANR	8433587	PrimaryExpression	0		8433530	1					
ANR	8433588	ArrayIndexing	sp [ 0 ]		8433530	1					
ANR	8433589	Identifier	sp		8433530	0					
ANR	8433590	PrimaryExpression	0		8433530	1					
ANR	8433591	Expression	"dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		8433530	1					
ANR	8433592	AssignmentExpression	dp [ 1 ] |= sp [ 1 ]		8433530	0		|=			
ANR	8433593	ArrayIndexing	dp [ 1 ]		8433530	0					
ANR	8433594	Identifier	dp		8433530	0					
ANR	8433595	PrimaryExpression	1		8433530	1					
ANR	8433596	ArrayIndexing	sp [ 1 ]		8433530	1					
ANR	8433597	Identifier	sp		8433530	0					
ANR	8433598	PrimaryExpression	1		8433530	1					
ANR	8433599	Expression	"dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		8433530	1					
ANR	8433600	AssignmentExpression	dp [ 2 ] |= sp [ 2 ]		8433530	0		|=			
ANR	8433601	ArrayIndexing	dp [ 2 ]		8433530	0					
ANR	8433602	Identifier	dp		8433530	0					
ANR	8433603	PrimaryExpression	2		8433530	1					
ANR	8433604	ArrayIndexing	sp [ 2 ]		8433530	1					
ANR	8433605	Identifier	sp		8433530	0					
ANR	8433606	PrimaryExpression	2		8433530	1					
ANR	8433607	AssignmentExpression	dp [ 3 ] |= sp [ 3 ]		8433530	1		|=			
ANR	8433608	ArrayIndexing	dp [ 3 ]		8433530	0					
ANR	8433609	Identifier	dp		8433530	0					
ANR	8433610	PrimaryExpression	3		8433530	1					
ANR	8433611	ArrayIndexing	sp [ 3 ]		8433530	1					
ANR	8433612	Identifier	sp		8433530	0					
ANR	8433613	PrimaryExpression	3		8433530	1					
ANR	8433614	ForStatement	"for ( ; n ; ++ sp , ++ dp , -- n )"		8433530	4					
ANR	8433615	Condition	n	190:11:5978:5978	8433530	0	True				
ANR	8433616	Identifier	n		8433530	0					
ANR	8433617	Expression	"++ sp , ++ dp , -- n"	190:14:5981:5995	8433530	1	True				
ANR	8433618	UnaryExpression	++ sp		8433530	0					
ANR	8433619	IncDec	++		8433530	0					
ANR	8433620	Identifier	sp		8433530	1					
ANR	8433621	Expression	"++ dp , -- n"		8433530	1					
ANR	8433622	UnaryExpression	++ dp		8433530	0					
ANR	8433623	IncDec	++		8433530	0					
ANR	8433624	Identifier	dp		8433530	1					
ANR	8433625	UnaryExpression	-- n		8433530	1					
ANR	8433626	IncDec	--		8433530	0					
ANR	8433627	Identifier	n		8433530	1					
ANR	8433628	ExpressionStatement	* dp |= * sp	191:8:6006:6016	8433530	2	True				
ANR	8433629	AssignmentExpression	* dp |= * sp		8433530	0		|=			
ANR	8433630	UnaryOperationExpression	* dp		8433530	0					
ANR	8433631	UnaryOperator	*		8433530	0					
ANR	8433632	Identifier	dp		8433530	1					
ANR	8433633	UnaryOperationExpression	* sp		8433530	1					
ANR	8433634	UnaryOperator	*		8433530	0					
ANR	8433635	Identifier	sp		8433530	1					
ANR	8433636	ReturnType	static void		8433530	1					
ANR	8433637	Identifier	bits_merge		8433530	2					
ANR	8433638	ParameterList	"byte * dest , const byte * src , uint nbytes"		8433530	3					
ANR	8433639	Parameter	byte * dest	182:11:5667:5677	8433530	0	True				
ANR	8433640	ParameterType	byte *		8433530	0					
ANR	8433641	Identifier	dest		8433530	1					
ANR	8433642	Parameter	const byte * src	182:24:5680:5695	8433530	1	True				
ANR	8433643	ParameterType	const byte *		8433530	0					
ANR	8433644	Identifier	src		8433530	1					
ANR	8433645	Parameter	uint nbytes	182:42:5698:5708	8433530	2	True				
ANR	8433646	ParameterType	uint		8433530	0					
ANR	8433647	Identifier	nbytes		8433530	1					
ANR	8433648	CFGEntryNode	ENTRY		8433530		True				
ANR	8433649	CFGExitNode	EXIT		8433530		True				
ANR	8433650	Symbol	* sp		8433530						
ANR	8433651	Symbol	* dp		8433530						
ANR	8433652	Symbol	src		8433530						
ANR	8433653	Symbol	dest		8433530						
ANR	8433654	Symbol	dp		8433530						
ANR	8433655	Symbol	sp		8433530						
ANR	8433656	Symbol	n		8433530						
ANR	8433657	Symbol	ARCH_LOG2_SIZEOF_LONG		8433530						
ANR	8433658	Symbol	nbytes		8433530						
ANR	8433659	Function	bits_smear_horizontally	196:0:6151:8778							
ANR	8433660	FunctionDef	"bits_smear_horizontally (byte * dest , const byte * src , uint width , uint smear_width)"		8433659	0					
ANR	8433661	CompoundStatement		199:0:6272:8778	8433659	0					
ANR	8433662	IdentifierDeclStatement	uint bits_on = 0 ;	200:4:6278:6294	8433659	0	True				
ANR	8433663	IdentifierDecl	bits_on = 0		8433659	0					
ANR	8433664	IdentifierDeclType	uint		8433659	0					
ANR	8433665	Identifier	bits_on		8433659	1					
ANR	8433666	AssignmentExpression	bits_on = 0		8433659	2		=			
ANR	8433667	Identifier	bits_on		8433659	0					
ANR	8433668	PrimaryExpression	0		8433659	1					
ANR	8433669	IdentifierDeclStatement	const byte * sp = src ;	201:4:6300:6320	8433659	1	True				
ANR	8433670	IdentifierDecl	* sp = src		8433659	0					
ANR	8433671	IdentifierDeclType	const byte *		8433659	0					
ANR	8433672	Identifier	sp		8433659	1					
ANR	8433673	AssignmentExpression	* sp = src		8433659	2		=			
ANR	8433674	Identifier	src		8433659	0					
ANR	8433675	Identifier	src		8433659	1					
ANR	8433676	IdentifierDeclStatement	uint sbyte = * sp ;	202:4:6326:6342	8433659	2	True				
ANR	8433677	IdentifierDecl	sbyte = * sp		8433659	0					
ANR	8433678	IdentifierDeclType	uint		8433659	0					
ANR	8433679	Identifier	sbyte		8433659	1					
ANR	8433680	AssignmentExpression	sbyte = * sp		8433659	2		=			
ANR	8433681	Identifier	sbyte		8433659	0					
ANR	8433682	UnaryOperationExpression	* sp		8433659	1					
ANR	8433683	UnaryOperator	*		8433659	0					
ANR	8433684	Identifier	sp		8433659	1					
ANR	8433685	IdentifierDeclStatement	byte * dp = dest ;	203:4:6348:6363	8433659	3	True				
ANR	8433686	IdentifierDecl	* dp = dest		8433659	0					
ANR	8433687	IdentifierDeclType	byte *		8433659	0					
ANR	8433688	Identifier	dp		8433659	1					
ANR	8433689	AssignmentExpression	* dp = dest		8433659	2		=			
ANR	8433690	Identifier	dest		8433659	0					
ANR	8433691	Identifier	dest		8433659	1					
ANR	8433692	IdentifierDeclStatement	uint dbyte = sbyte ;	204:4:6369:6387	8433659	4	True				
ANR	8433693	IdentifierDecl	dbyte = sbyte		8433659	0					
ANR	8433694	IdentifierDeclType	uint		8433659	0					
ANR	8433695	Identifier	dbyte		8433659	1					
ANR	8433696	AssignmentExpression	dbyte = sbyte		8433659	2		=			
ANR	8433697	Identifier	sbyte		8433659	0					
ANR	8433698	Identifier	sbyte		8433659	1					
ANR	8433699	IdentifierDeclStatement	uint sdmask = 0x80 ;	205:4:6393:6411	8433659	5	True				
ANR	8433700	IdentifierDecl	sdmask = 0x80		8433659	0					
ANR	8433701	IdentifierDeclType	uint		8433659	0					
ANR	8433702	Identifier	sdmask		8433659	1					
ANR	8433703	AssignmentExpression	sdmask = 0x80		8433659	2		=			
ANR	8433704	Identifier	sdmask		8433659	0					
ANR	8433705	PrimaryExpression	0x80		8433659	1					
ANR	8433706	IdentifierDeclStatement	const byte * zp = src ;	206:4:6417:6437	8433659	6	True				
ANR	8433707	IdentifierDecl	* zp = src		8433659	0					
ANR	8433708	IdentifierDeclType	const byte *		8433659	0					
ANR	8433709	Identifier	zp		8433659	1					
ANR	8433710	AssignmentExpression	* zp = src		8433659	2		=			
ANR	8433711	Identifier	src		8433659	0					
ANR	8433712	Identifier	src		8433659	1					
ANR	8433713	IdentifierDeclStatement	uint zmask = 0x80 ;	207:4:6443:6460	8433659	7	True				
ANR	8433714	IdentifierDecl	zmask = 0x80		8433659	0					
ANR	8433715	IdentifierDeclType	uint		8433659	0					
ANR	8433716	Identifier	zmask		8433659	1					
ANR	8433717	AssignmentExpression	zmask = 0x80		8433659	2		=			
ANR	8433718	Identifier	zmask		8433659	0					
ANR	8433719	PrimaryExpression	0x80		8433659	1					
ANR	8433720	IdentifierDeclStatement	uint i = 0 ;	208:4:6466:6476	8433659	8	True				
ANR	8433721	IdentifierDecl	i = 0		8433659	0					
ANR	8433722	IdentifierDeclType	uint		8433659	0					
ANR	8433723	Identifier	i		8433659	1					
ANR	8433724	AssignmentExpression	i = 0		8433659	2		=			
ANR	8433725	Identifier	i		8433659	0					
ANR	8433726	PrimaryExpression	0		8433659	1					
ANR	8433727	CompoundStatement		14:8:266:301	8433659	9					
ANR	8433728	IdentifierDeclStatement	"uint stop = min ( smear_width , width ) ;"	212:8:6539:6574	8433659	0	True				
ANR	8433729	IdentifierDecl	"stop = min ( smear_width , width )"		8433659	0					
ANR	8433730	IdentifierDeclType	uint		8433659	0					
ANR	8433731	Identifier	stop		8433659	1					
ANR	8433732	AssignmentExpression	"stop = min ( smear_width , width )"		8433659	2		=			
ANR	8433733	Identifier	stop		8433659	0					
ANR	8433734	CallExpression	"min ( smear_width , width )"		8433659	1					
ANR	8433735	Callee	min		8433659	0					
ANR	8433736	Identifier	min		8433659	0					
ANR	8433737	ArgumentList	smear_width		8433659	1					
ANR	8433738	Argument	smear_width		8433659	0					
ANR	8433739	Identifier	smear_width		8433659	0					
ANR	8433740	Argument	width		8433659	1					
ANR	8433741	Identifier	width		8433659	0					
ANR	8433742	ForStatement	for ( ; i < stop ; ++ i )		8433659	1					
ANR	8433743	Condition	i < stop	214:15:6592:6599	8433659	0	True				
ANR	8433744	RelationalExpression	i < stop		8433659	0		<			
ANR	8433745	Identifier	i		8433659	0					
ANR	8433746	Identifier	stop		8433659	1					
ANR	8433747	UnaryExpression	++ i	214:25:6602:6604	8433659	1	True				
ANR	8433748	IncDec	++		8433659	0					
ANR	8433749	Identifier	i		8433659	1					
ANR	8433750	CompoundStatement		16:30:334:334	8433659	2					
ANR	8433751	IfStatement	if ( sbyte & sdmask )		8433659	0					
ANR	8433752	Condition	sbyte & sdmask	215:16:6625:6638	8433659	0	True				
ANR	8433753	BitAndExpression	sbyte & sdmask		8433659	0		&			
ANR	8433754	Identifier	sbyte		8433659	0					
ANR	8433755	Identifier	sdmask		8433659	1					
ANR	8433756	ExpressionStatement	bits_on ++	216:16:6657:6666	8433659	1	True				
ANR	8433757	PostIncDecOperationExpression	bits_on ++		8433659	0					
ANR	8433758	Identifier	bits_on		8433659	0					
ANR	8433759	IncDec	++		8433659	1					
ANR	8433760	ElseStatement	else		8433659	0					
ANR	8433761	IfStatement	if ( bits_on )		8433659	0					
ANR	8433762	Condition	bits_on	217:21:6689:6695	8433659	0	True				
ANR	8433763	Identifier	bits_on		8433659	0					
ANR	8433764	ExpressionStatement	dbyte |= sdmask	218:16:6714:6729	8433659	1	True				
ANR	8433765	AssignmentExpression	dbyte |= sdmask		8433659	0		|=			
ANR	8433766	Identifier	dbyte		8433659	0					
ANR	8433767	Identifier	sdmask		8433659	1					
ANR	8433768	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		8433659	1					
ANR	8433769	Condition	( sdmask >>= 1 ) == 0	219:16:6747:6765	8433659	0	True				
ANR	8433770	EqualityExpression	( sdmask >>= 1 ) == 0		8433659	0		==			
ANR	8433771	AssignmentExpression	sdmask >>= 1		8433659	0		>>=			
ANR	8433772	Identifier	sdmask		8433659	0					
ANR	8433773	PrimaryExpression	1		8433659	1					
ANR	8433774	PrimaryExpression	0		8433659	1					
ANR	8433775	ExpressionStatement	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = sbyte = * ++ sp"	220:16:6784:6835	8433659	1	True				
ANR	8433776	Expression	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = sbyte = * ++ sp"		8433659	0					
ANR	8433777	AssignmentExpression	sdmask = 0x80		8433659	0		=			
ANR	8433778	Identifier	sdmask		8433659	0					
ANR	8433779	PrimaryExpression	0x80		8433659	1					
ANR	8433780	Expression	"* dp ++ = dbyte , dbyte = sbyte = * ++ sp"		8433659	1					
ANR	8433781	AssignmentExpression	* dp ++ = dbyte		8433659	0		=			
ANR	8433782	UnaryOperationExpression	* dp ++		8433659	0					
ANR	8433783	UnaryOperator	*		8433659	0					
ANR	8433784	PostIncDecOperationExpression	dp ++		8433659	1					
ANR	8433785	Identifier	dp		8433659	0					
ANR	8433786	IncDec	++		8433659	1					
ANR	8433787	Identifier	dbyte		8433659	1					
ANR	8433788	AssignmentExpression	dbyte = sbyte = * ++ sp		8433659	1		=			
ANR	8433789	Identifier	dbyte		8433659	0					
ANR	8433790	AssignmentExpression	sbyte = * ++ sp		8433659	1		=			
ANR	8433791	Identifier	sbyte		8433659	0					
ANR	8433792	UnaryOperationExpression	* ++ sp		8433659	1					
ANR	8433793	UnaryOperator	*		8433659	0					
ANR	8433794	UnaryExpression	++ sp		8433659	1					
ANR	8433795	IncDec	++		8433659	0					
ANR	8433796	Identifier	sp		8433659	1					
ANR	8433797	CompoundStatement		27:4:638:638	8433659	10					
ANR	8433798	ForStatement	for ( ; i < width ; ++ i )		8433659	0					
ANR	8433799	Condition	i < width	226:15:6928:6936	8433659	0	True				
ANR	8433800	RelationalExpression	i < width		8433659	0		<			
ANR	8433801	Identifier	i		8433659	0					
ANR	8433802	Identifier	width		8433659	1					
ANR	8433803	UnaryExpression	++ i	226:26:6939:6941	8433659	1	True				
ANR	8433804	IncDec	++		8433659	0					
ANR	8433805	Identifier	i		8433659	1					
ANR	8433806	CompoundStatement		28:31:671:671	8433659	2					
ANR	8433807	IfStatement	if ( sbyte & sdmask )		8433659	0					
ANR	8433808	Condition	sbyte & sdmask	227:16:6962:6975	8433659	0	True				
ANR	8433809	BitAndExpression	sbyte & sdmask		8433659	0		&			
ANR	8433810	Identifier	sbyte		8433659	0					
ANR	8433811	Identifier	sdmask		8433659	1					
ANR	8433812	ExpressionStatement	bits_on ++	228:16:6994:7003	8433659	1	True				
ANR	8433813	PostIncDecOperationExpression	bits_on ++		8433659	0					
ANR	8433814	Identifier	bits_on		8433659	0					
ANR	8433815	IncDec	++		8433659	1					
ANR	8433816	ElseStatement	else		8433659	0					
ANR	8433817	IfStatement	if ( bits_on )		8433659	0					
ANR	8433818	Condition	bits_on	229:21:7026:7032	8433659	0	True				
ANR	8433819	Identifier	bits_on		8433659	0					
ANR	8433820	ExpressionStatement	dbyte |= sdmask	230:16:7051:7066	8433659	1	True				
ANR	8433821	AssignmentExpression	dbyte |= sdmask		8433659	0		|=			
ANR	8433822	Identifier	dbyte		8433659	0					
ANR	8433823	Identifier	sdmask		8433659	1					
ANR	8433824	IfStatement	if ( * zp & zmask )		8433659	1					
ANR	8433825	Condition	* zp & zmask	231:16:7084:7094	8433659	0	True				
ANR	8433826	BitAndExpression	* zp & zmask		8433659	0		&			
ANR	8433827	UnaryOperationExpression	* zp		8433659	0					
ANR	8433828	UnaryOperator	*		8433659	0					
ANR	8433829	Identifier	zp		8433659	1					
ANR	8433830	Identifier	zmask		8433659	1					
ANR	8433831	ExpressionStatement	-- bits_on	232:16:7113:7122	8433659	1	True				
ANR	8433832	UnaryExpression	-- bits_on		8433659	0					
ANR	8433833	IncDec	--		8433659	0					
ANR	8433834	Identifier	bits_on		8433659	1					
ANR	8433835	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		8433659	2					
ANR	8433836	Condition	( sdmask >>= 1 ) == 0	233:16:7140:7158	8433659	0	True				
ANR	8433837	EqualityExpression	( sdmask >>= 1 ) == 0		8433659	0		==			
ANR	8433838	AssignmentExpression	sdmask >>= 1		8433659	0		>>=			
ANR	8433839	Identifier	sdmask		8433659	0					
ANR	8433840	PrimaryExpression	1		8433659	1					
ANR	8433841	PrimaryExpression	0		8433659	1					
ANR	8433842	CompoundStatement		35:37:888:888	8433659	1					
ANR	8433843	ExpressionStatement	sdmask = 0x80	234:16:7179:7192	8433659	0	True				
ANR	8433844	AssignmentExpression	sdmask = 0x80		8433659	0		=			
ANR	8433845	Identifier	sdmask		8433659	0					
ANR	8433846	PrimaryExpression	0x80		8433659	1					
ANR	8433847	ExpressionStatement	* dp ++ = dbyte	235:16:7210:7223	8433659	1	True				
ANR	8433848	AssignmentExpression	* dp ++ = dbyte		8433659	0		=			
ANR	8433849	UnaryOperationExpression	* dp ++		8433659	0					
ANR	8433850	UnaryOperator	*		8433659	0					
ANR	8433851	PostIncDecOperationExpression	dp ++		8433659	1					
ANR	8433852	Identifier	dp		8433659	0					
ANR	8433853	IncDec	++		8433659	1					
ANR	8433854	Identifier	dbyte		8433659	1					
ANR	8433855	Label	on :	236:14:7239:7241	8433659	2	True				
ANR	8433856	Identifier	on		8433659	0					
ANR	8433857	SwitchStatement	switch ( ( dbyte = sbyte = * ++ sp ) )		8433659	3					
ANR	8433858	Condition	dbyte = sbyte = * ++ sp	236:25:7250:7272	8433659	0	True				
ANR	8433859	AssignmentExpression	dbyte = sbyte = * ++ sp		8433659	0		=			
ANR	8433860	Identifier	dbyte		8433659	0					
ANR	8433861	AssignmentExpression	sbyte = * ++ sp		8433659	1		=			
ANR	8433862	Identifier	sbyte		8433659	0					
ANR	8433863	UnaryOperationExpression	* ++ sp		8433659	1					
ANR	8433864	UnaryOperator	*		8433659	0					
ANR	8433865	UnaryExpression	++ sp		8433659	1					
ANR	8433866	IncDec	++		8433659	0					
ANR	8433867	Identifier	sp		8433659	1					
ANR	8433868	CompoundStatement		38:50:1002:1002	8433659	1					
ANR	8433869	Label	case 0xff :	237:20:7297:7306	8433659	0	True				
ANR	8433870	IfStatement	if ( width - i <= 8 )		8433659	1					
ANR	8433871	Condition	width - i <= 8	238:28:7336:7349	8433659	0	True				
ANR	8433872	RelationalExpression	width - i <= 8		8433659	0		<=			
ANR	8433873	AdditiveExpression	width - i		8433659	0		-			
ANR	8433874	Identifier	width		8433659	0					
ANR	8433875	Identifier	i		8433659	1					
ANR	8433876	PrimaryExpression	8		8433659	1					
ANR	8433877	BreakStatement	break ;	239:28:7380:7385	8433659	1	True				
ANR	8433878	ExpressionStatement	* dp ++ = 0xff	240:24:7411:7423	8433659	2	True				
ANR	8433879	AssignmentExpression	* dp ++ = 0xff		8433659	0		=			
ANR	8433880	UnaryOperationExpression	* dp ++		8433659	0					
ANR	8433881	UnaryOperator	*		8433659	0					
ANR	8433882	PostIncDecOperationExpression	dp ++		8433659	1					
ANR	8433883	Identifier	dp		8433659	0					
ANR	8433884	IncDec	++		8433659	1					
ANR	8433885	PrimaryExpression	0xff		8433659	1					
ANR	8433886	ExpressionStatement	bits_on += 8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]	241:24:7449:7596	8433659	3	True				
ANR	8433887	AssignmentExpression	bits_on += 8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		8433659	0		+=			
ANR	8433888	Identifier	bits_on		8433659	0					
ANR	8433889	AdditiveExpression	8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		8433659	1		-			
ANR	8433890	PrimaryExpression	8		8433659	0					
ANR	8433891	ArrayIndexing	byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		8433659	1					
ANR	8433892	Identifier	byte_count_bits		8433659	0					
ANR	8433893	AdditiveExpression	( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask )		8433659	1		+			
ANR	8433894	BitAndExpression	* zp & ( zmask - 1 )		8433659	0		&			
ANR	8433895	UnaryOperationExpression	* zp		8433659	0					
ANR	8433896	UnaryOperator	*		8433659	0					
ANR	8433897	Identifier	zp		8433659	1					
ANR	8433898	AdditiveExpression	zmask - 1		8433659	1		-			
ANR	8433899	Identifier	zmask		8433659	0					
ANR	8433900	PrimaryExpression	1		8433659	1					
ANR	8433901	BitAndExpression	zp [ 1 ] & - ( int ) zmask		8433659	1		&			
ANR	8433902	ArrayIndexing	zp [ 1 ]		8433659	0					
ANR	8433903	Identifier	zp		8433659	0					
ANR	8433904	PrimaryExpression	1		8433659	1					
ANR	8433905	UnaryOperationExpression	- ( int ) zmask		8433659	1					
ANR	8433906	UnaryOperator	-		8433659	0					
ANR	8433907	CastExpression	( int ) zmask		8433659	1					
ANR	8433908	CastTarget	int		8433659	0					
ANR	8433909	Identifier	zmask		8433659	1					
ANR	8433910	ExpressionStatement	++ zp	244:24:7622:7626	8433659	4	True				
ANR	8433911	UnaryExpression	++ zp		8433659	0					
ANR	8433912	IncDec	++		8433659	0					
ANR	8433913	Identifier	zp		8433659	1					
ANR	8433914	ExpressionStatement	i += 8	245:24:7652:7658	8433659	5	True				
ANR	8433915	AssignmentExpression	i += 8		8433659	0		+=			
ANR	8433916	Identifier	i		8433659	0					
ANR	8433917	PrimaryExpression	8		8433659	1					
ANR	8433918	GotoStatement	goto on ;	246:24:7684:7691	8433659	6	True				
ANR	8433919	Identifier	on		8433659	0					
ANR	8433920	Label	case 0 :	247:20:7713:7719	8433659	7	True				
ANR	8433921	IfStatement	if ( bits_on || width - i <= 8 )		8433659	8					
ANR	8433922	Condition	bits_on || width - i <= 8	248:28:7749:7773	8433659	0	True				
ANR	8433923	OrExpression	bits_on || width - i <= 8		8433659	0		||			
ANR	8433924	Identifier	bits_on		8433659	0					
ANR	8433925	RelationalExpression	width - i <= 8		8433659	1		<=			
ANR	8433926	AdditiveExpression	width - i		8433659	0		-			
ANR	8433927	Identifier	width		8433659	0					
ANR	8433928	Identifier	i		8433659	1					
ANR	8433929	PrimaryExpression	8		8433659	1					
ANR	8433930	BreakStatement	break ;	249:28:7804:7809	8433659	1	True				
ANR	8433931	ExpressionStatement	* dp ++ = 0	250:24:7835:7844	8433659	9	True				
ANR	8433932	AssignmentExpression	* dp ++ = 0		8433659	0		=			
ANR	8433933	UnaryOperationExpression	* dp ++		8433659	0					
ANR	8433934	UnaryOperator	*		8433659	0					
ANR	8433935	PostIncDecOperationExpression	dp ++		8433659	1					
ANR	8433936	Identifier	dp		8433659	0					
ANR	8433937	IncDec	++		8433659	1					
ANR	8433938	PrimaryExpression	0		8433659	1					
ANR	8433939	ExpressionStatement	++ zp	253:24:8011:8015	8433659	10	True				
ANR	8433940	UnaryExpression	++ zp		8433659	0					
ANR	8433941	IncDec	++		8433659	0					
ANR	8433942	Identifier	zp		8433659	1					
ANR	8433943	ExpressionStatement	i += 8	254:24:8041:8047	8433659	11	True				
ANR	8433944	AssignmentExpression	i += 8		8433659	0		+=			
ANR	8433945	Identifier	i		8433659	0					
ANR	8433946	PrimaryExpression	8		8433659	1					
ANR	8433947	GotoStatement	goto on ;	255:24:8073:8080	8433659	12	True				
ANR	8433948	Identifier	on		8433659	0					
ANR	8433949	Label	default :	256:20:8102:8109	8433659	13	True				
ANR	8433950	Identifier	default		8433659	0					
ANR	8433951	ExpressionStatement		257:24:8135:8135	8433659	14	True				
ANR	8433952	IfStatement	if ( ( zmask >>= 1 ) == 0 )		8433659	3					
ANR	8433953	Condition	( zmask >>= 1 ) == 0	260:16:8185:8202	8433659	0	True				
ANR	8433954	EqualityExpression	( zmask >>= 1 ) == 0		8433659	0		==			
ANR	8433955	AssignmentExpression	zmask >>= 1		8433659	0		>>=			
ANR	8433956	Identifier	zmask		8433659	0					
ANR	8433957	PrimaryExpression	1		8433659	1					
ANR	8433958	PrimaryExpression	0		8433659	1					
ANR	8433959	ExpressionStatement	"zmask = 0x80 , ++ zp"	261:16:8221:8239	8433659	1	True				
ANR	8433960	Expression	"zmask = 0x80 , ++ zp"		8433659	0					
ANR	8433961	AssignmentExpression	zmask = 0x80		8433659	0		=			
ANR	8433962	Identifier	zmask		8433659	0					
ANR	8433963	PrimaryExpression	0x80		8433659	1					
ANR	8433964	UnaryExpression	++ zp		8433659	1					
ANR	8433965	IncDec	++		8433659	0					
ANR	8433966	Identifier	zp		8433659	1					
ANR	8433967	CompoundStatement		70:8:2097:2128	8433659	11					
ANR	8433968	IdentifierDeclStatement	uint stop = width + smear_width ;	268:8:8370:8401	8433659	0	True				
ANR	8433969	IdentifierDecl	stop = width + smear_width		8433659	0					
ANR	8433970	IdentifierDeclType	uint		8433659	0					
ANR	8433971	Identifier	stop		8433659	1					
ANR	8433972	AssignmentExpression	stop = width + smear_width		8433659	2		=			
ANR	8433973	Identifier	stop		8433659	0					
ANR	8433974	AdditiveExpression	width + smear_width		8433659	1		+			
ANR	8433975	Identifier	width		8433659	0					
ANR	8433976	Identifier	smear_width		8433659	1					
ANR	8433977	ForStatement	for ( ; i < stop ; ++ i )		8433659	1					
ANR	8433978	Condition	i < stop	270:15:8419:8426	8433659	0	True				
ANR	8433979	RelationalExpression	i < stop		8433659	0		<			
ANR	8433980	Identifier	i		8433659	0					
ANR	8433981	Identifier	stop		8433659	1					
ANR	8433982	UnaryExpression	++ i	270:25:8429:8431	8433659	1	True				
ANR	8433983	IncDec	++		8433659	0					
ANR	8433984	Identifier	i		8433659	1					
ANR	8433985	CompoundStatement		72:30:2161:2161	8433659	2					
ANR	8433986	IfStatement	if ( bits_on )		8433659	0					
ANR	8433987	Condition	bits_on	271:16:8452:8458	8433659	0	True				
ANR	8433988	Identifier	bits_on		8433659	0					
ANR	8433989	ExpressionStatement	dbyte |= sdmask	272:16:8477:8492	8433659	1	True				
ANR	8433990	AssignmentExpression	dbyte |= sdmask		8433659	0		|=			
ANR	8433991	Identifier	dbyte		8433659	0					
ANR	8433992	Identifier	sdmask		8433659	1					
ANR	8433993	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		8433659	1					
ANR	8433994	Condition	( sdmask >>= 1 ) == 0	273:16:8510:8528	8433659	0	True				
ANR	8433995	EqualityExpression	( sdmask >>= 1 ) == 0		8433659	0		==			
ANR	8433996	AssignmentExpression	sdmask >>= 1		8433659	0		>>=			
ANR	8433997	Identifier	sdmask		8433659	0					
ANR	8433998	PrimaryExpression	1		8433659	1					
ANR	8433999	PrimaryExpression	0		8433659	1					
ANR	8434000	ExpressionStatement	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = 0"	274:16:8547:8586	8433659	1	True				
ANR	8434001	Expression	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = 0"		8433659	0					
ANR	8434002	AssignmentExpression	sdmask = 0x80		8433659	0		=			
ANR	8434003	Identifier	sdmask		8433659	0					
ANR	8434004	PrimaryExpression	0x80		8433659	1					
ANR	8434005	Expression	"* dp ++ = dbyte , dbyte = 0"		8433659	1					
ANR	8434006	AssignmentExpression	* dp ++ = dbyte		8433659	0		=			
ANR	8434007	UnaryOperationExpression	* dp ++		8433659	0					
ANR	8434008	UnaryOperator	*		8433659	0					
ANR	8434009	PostIncDecOperationExpression	dp ++		8433659	1					
ANR	8434010	Identifier	dp		8433659	0					
ANR	8434011	IncDec	++		8433659	1					
ANR	8434012	Identifier	dbyte		8433659	1					
ANR	8434013	AssignmentExpression	dbyte = 0		8433659	1		=			
ANR	8434014	Identifier	dbyte		8433659	0					
ANR	8434015	PrimaryExpression	0		8433659	1					
ANR	8434016	IfStatement	if ( * zp & zmask )		8433659	2					
ANR	8434017	Condition	* zp & zmask	275:16:8604:8614	8433659	0	True				
ANR	8434018	BitAndExpression	* zp & zmask		8433659	0		&			
ANR	8434019	UnaryOperationExpression	* zp		8433659	0					
ANR	8434020	UnaryOperator	*		8433659	0					
ANR	8434021	Identifier	zp		8433659	1					
ANR	8434022	Identifier	zmask		8433659	1					
ANR	8434023	ExpressionStatement	-- bits_on	276:16:8633:8642	8433659	1	True				
ANR	8434024	UnaryExpression	-- bits_on		8433659	0					
ANR	8434025	IncDec	--		8433659	0					
ANR	8434026	Identifier	bits_on		8433659	1					
ANR	8434027	IfStatement	if ( ( zmask >>= 1 ) == 0 )		8433659	3					
ANR	8434028	Condition	( zmask >>= 1 ) == 0	277:16:8660:8677	8433659	0	True				
ANR	8434029	EqualityExpression	( zmask >>= 1 ) == 0		8433659	0		==			
ANR	8434030	AssignmentExpression	zmask >>= 1		8433659	0		>>=			
ANR	8434031	Identifier	zmask		8433659	0					
ANR	8434032	PrimaryExpression	1		8433659	1					
ANR	8434033	PrimaryExpression	0		8433659	1					
ANR	8434034	ExpressionStatement	"zmask = 0x80 , ++ zp"	278:16:8696:8714	8433659	1	True				
ANR	8434035	Expression	"zmask = 0x80 , ++ zp"		8433659	0					
ANR	8434036	AssignmentExpression	zmask = 0x80		8433659	0		=			
ANR	8434037	Identifier	zmask		8433659	0					
ANR	8434038	PrimaryExpression	0x80		8433659	1					
ANR	8434039	UnaryExpression	++ zp		8433659	1					
ANR	8434040	IncDec	++		8433659	0					
ANR	8434041	Identifier	zp		8433659	1					
ANR	8434042	IfStatement	if ( sdmask != 0x80 )		8433659	12					
ANR	8434043	Condition	sdmask != 0x80	282:8:8741:8754	8433659	0	True				
ANR	8434044	EqualityExpression	sdmask != 0x80		8433659	0		!=			
ANR	8434045	Identifier	sdmask		8433659	0					
ANR	8434046	PrimaryExpression	0x80		8433659	1					
ANR	8434047	ExpressionStatement	* dp = dbyte	283:8:8765:8776	8433659	1	True				
ANR	8434048	AssignmentExpression	* dp = dbyte		8433659	0		=			
ANR	8434049	UnaryOperationExpression	* dp		8433659	0					
ANR	8434050	UnaryOperator	*		8433659	0					
ANR	8434051	Identifier	dp		8433659	1					
ANR	8434052	Identifier	dbyte		8433659	1					
ANR	8434053	ReturnType	static void		8433659	1					
ANR	8434054	Identifier	bits_smear_horizontally		8433659	2					
ANR	8434055	ParameterList	"byte * dest , const byte * src , uint width , uint smear_width"		8433659	3					
ANR	8434056	Parameter	byte * dest	197:24:6187:6197	8433659	0	True				
ANR	8434057	ParameterType	byte *		8433659	0					
ANR	8434058	Identifier	dest		8433659	1					
ANR	8434059	Parameter	const byte * src	197:37:6200:6215	8433659	1	True				
ANR	8434060	ParameterType	const byte *		8433659	0					
ANR	8434061	Identifier	src		8433659	1					
ANR	8434062	Parameter	uint width	197:55:6218:6227	8433659	2	True				
ANR	8434063	ParameterType	uint		8433659	0					
ANR	8434064	Identifier	width		8433659	1					
ANR	8434065	Parameter	uint smear_width	198:24:6254:6269	8433659	3	True				
ANR	8434066	ParameterType	uint		8433659	0					
ANR	8434067	Identifier	smear_width		8433659	1					
ANR	8434068	CFGEntryNode	ENTRY		8433659		True				
ANR	8434069	CFGExitNode	EXIT		8433659		True				
ANR	8434070	Symbol	* sp		8433659						
ANR	8434071	Symbol	* * zp		8433659						
ANR	8434072	Symbol	dbyte		8433659						
ANR	8434073	Symbol	src		8433659						
ANR	8434074	Symbol	byte_count_bits		8433659						
ANR	8434075	Symbol	i		8433659						
ANR	8434076	Symbol	* dp ++		8433659						
ANR	8434077	Symbol	dest		8433659						
ANR	8434078	Symbol	dp		8433659						
ANR	8434079	Symbol	sdmask		8433659						
ANR	8434080	Symbol	zmask		8433659						
ANR	8434081	Symbol	* dp		8433659						
ANR	8434082	Symbol	* byte_count_bits		8433659						
ANR	8434083	Symbol	min		8433659						
ANR	8434084	Symbol	stop		8433659						
ANR	8434085	Symbol	* ++ sp		8433659						
ANR	8434086	Symbol	zp		8433659						
ANR	8434087	Symbol	smear_width		8433659						
ANR	8434088	Symbol	width		8433659						
ANR	8434089	Symbol	sbyte		8433659						
ANR	8434090	Symbol	* zmask		8433659						
ANR	8434091	Symbol	sp		8433659						
ANR	8434092	Symbol	bits_on		8433659						
ANR	8434093	Symbol	* zp		8433659						
ANR	8434094	Function	pl_image_bitmap_char	287:0:8838:12311							
ANR	8434095	FunctionDef	"pl_image_bitmap_char (gs_image_enum * ienum , const gs_image_t * pim , const byte * bitmap_data , uint sraster , int bold , byte * bold_lines , gs_gstate * pgs)"		8434094	0					
ANR	8434096	CompoundStatement		291:0:9038:12311	8434094	0					
ANR	8434097	IdentifierDeclStatement	uint dest_bytes = ( pim -> Width + 7 ) >> 3 ;	292:4:9044:9083	8434094	0	True				
ANR	8434098	IdentifierDecl	dest_bytes = ( pim -> Width + 7 ) >> 3		8434094	0					
ANR	8434099	IdentifierDeclType	uint		8434094	0					
ANR	8434100	Identifier	dest_bytes		8434094	1					
ANR	8434101	AssignmentExpression	dest_bytes = ( pim -> Width + 7 ) >> 3		8434094	2		=			
ANR	8434102	Identifier	dest_bytes		8434094	0					
ANR	8434103	ShiftExpression	( pim -> Width + 7 ) >> 3		8434094	1		>>			
ANR	8434104	AdditiveExpression	pim -> Width + 7		8434094	0		+			
ANR	8434105	PtrMemberAccess	pim -> Width		8434094	0					
ANR	8434106	Identifier	pim		8434094	0					
ANR	8434107	Identifier	Width		8434094	1					
ANR	8434108	PrimaryExpression	7		8434094	1					
ANR	8434109	PrimaryExpression	3		8434094	1					
ANR	8434110	IdentifierDeclStatement	gx_device * dev = pgs -> device ;	293:4:9089:9117	8434094	1	True				
ANR	8434111	IdentifierDecl	* dev = pgs -> device		8434094	0					
ANR	8434112	IdentifierDeclType	gx_device *		8434094	0					
ANR	8434113	Identifier	dev		8434094	1					
ANR	8434114	AssignmentExpression	* dev = pgs -> device		8434094	2		=			
ANR	8434115	Identifier	dev		8434094	0					
ANR	8434116	PtrMemberAccess	pgs -> device		8434094	1					
ANR	8434117	Identifier	pgs		8434094	0					
ANR	8434118	Identifier	device		8434094	1					
ANR	8434119	IdentifierDeclStatement	void * iinfo ;	294:4:9123:9134	8434094	2	True				
ANR	8434120	IdentifierDecl	* iinfo		8434094	0					
ANR	8434121	IdentifierDeclType	void *		8434094	0					
ANR	8434122	Identifier	iinfo		8434094	1					
ANR	8434123	IdentifierDeclStatement	const byte * planes [ 1 ] ;	295:4:9140:9161	8434094	3	True				
ANR	8434124	IdentifierDecl	* planes [ 1 ]		8434094	0					
ANR	8434125	IdentifierDeclType	const byte * [ 1 ]		8434094	0					
ANR	8434126	Identifier	planes		8434094	1					
ANR	8434127	PrimaryExpression	1		8434094	2					
ANR	8434128	IdentifierDeclStatement	int code ;	296:4:9167:9175	8434094	4	True				
ANR	8434129	IdentifierDecl	code		8434094	0					
ANR	8434130	IdentifierDeclType	int		8434094	0					
ANR	8434131	Identifier	code		8434094	1					
ANR	8434132	ExpressionStatement	code = gx_set_dev_color ( pgs )	298:4:9182:9210	8434094	5	True				
ANR	8434133	AssignmentExpression	code = gx_set_dev_color ( pgs )		8434094	0		=			
ANR	8434134	Identifier	code		8434094	0					
ANR	8434135	CallExpression	gx_set_dev_color ( pgs )		8434094	1					
ANR	8434136	Callee	gx_set_dev_color		8434094	0					
ANR	8434137	Identifier	gx_set_dev_color		8434094	0					
ANR	8434138	ArgumentList	pgs		8434094	1					
ANR	8434139	Argument	pgs		8434094	0					
ANR	8434140	Identifier	pgs		8434094	0					
ANR	8434141	IfStatement	if ( code == gs_error_Remap_Color )		8434094	6					
ANR	8434142	Condition	code == gs_error_Remap_Color	299:8:9220:9247	8434094	0	True				
ANR	8434143	EqualityExpression	code == gs_error_Remap_Color		8434094	0		==			
ANR	8434144	Identifier	code		8434094	0					
ANR	8434145	Identifier	gs_error_Remap_Color		8434094	1					
ANR	8434146	ExpressionStatement	code = pixmap_high_level_pattern ( pgs )	300:8:9258:9295	8434094	1	True				
ANR	8434147	AssignmentExpression	code = pixmap_high_level_pattern ( pgs )		8434094	0		=			
ANR	8434148	Identifier	code		8434094	0					
ANR	8434149	CallExpression	pixmap_high_level_pattern ( pgs )		8434094	1					
ANR	8434150	Callee	pixmap_high_level_pattern		8434094	0					
ANR	8434151	Identifier	pixmap_high_level_pattern		8434094	0					
ANR	8434152	ArgumentList	pgs		8434094	1					
ANR	8434153	Argument	pgs		8434094	0					
ANR	8434154	Identifier	pgs		8434094	0					
ANR	8434155	IfStatement	if ( code != 0 )		8434094	7					
ANR	8434156	Condition	code != 0	301:8:9305:9313	8434094	0	True				
ANR	8434157	EqualityExpression	code != 0		8434094	0		!=			
ANR	8434158	Identifier	code		8434094	0					
ANR	8434159	PrimaryExpression	0		8434094	1					
ANR	8434160	ReturnStatement	return code ;	302:8:9324:9335	8434094	1	True				
ANR	8434161	Identifier	code		8434094	0					
ANR	8434162	ExpressionStatement	"code = ( * dev_proc ( dev , begin_image ) ) ( dev , ( const gs_gstate * ) pgs , pim , gs_image_format_chunky , NULL , gs_currentdevicecolor_inline ( pgs ) , pgs -> clip_path , pgs -> memory , ( gx_image_enum_common_t * * ) & iinfo )"	303:4:9341:9569	8434094	8	True				
ANR	8434163	AssignmentExpression	"code = ( * dev_proc ( dev , begin_image ) ) ( dev , ( const gs_gstate * ) pgs , pim , gs_image_format_chunky , NULL , gs_currentdevicecolor_inline ( pgs ) , pgs -> clip_path , pgs -> memory , ( gx_image_enum_common_t * * ) & iinfo )"		8434094	0		=			
ANR	8434164	Identifier	code		8434094	0					
ANR	8434165	CallExpression	"( * dev_proc ( dev , begin_image ) ) ( dev , ( const gs_gstate * ) pgs , pim , gs_image_format_chunky , NULL , gs_currentdevicecolor_inline ( pgs ) , pgs -> clip_path , pgs -> memory , ( gx_image_enum_common_t * * ) & iinfo )"		8434094	1					
ANR	8434166	Callee	"* dev_proc ( dev , begin_image )"		8434094	0					
ANR	8434167	UnaryOperationExpression	"* dev_proc ( dev , begin_image )"		8434094	0					
ANR	8434168	UnaryOperator	*		8434094	0					
ANR	8434169	CallExpression	"dev_proc ( dev , begin_image )"		8434094	1					
ANR	8434170	Callee	dev_proc		8434094	0					
ANR	8434171	Identifier	dev_proc		8434094	0					
ANR	8434172	ArgumentList	dev		8434094	1					
ANR	8434173	Argument	dev		8434094	0					
ANR	8434174	Identifier	dev		8434094	0					
ANR	8434175	Argument	begin_image		8434094	1					
ANR	8434176	Identifier	begin_image		8434094	0					
ANR	8434177	ArgumentList	dev		8434094	1					
ANR	8434178	Argument	dev		8434094	0					
ANR	8434179	Identifier	dev		8434094	0					
ANR	8434180	Argument	( const gs_gstate * ) pgs		8434094	1					
ANR	8434181	CastExpression	( const gs_gstate * ) pgs		8434094	0					
ANR	8434182	CastTarget	const gs_gstate *		8434094	0					
ANR	8434183	Identifier	pgs		8434094	1					
ANR	8434184	Argument	pim		8434094	2					
ANR	8434185	Identifier	pim		8434094	0					
ANR	8434186	Argument	gs_image_format_chunky		8434094	3					
ANR	8434187	Identifier	gs_image_format_chunky		8434094	0					
ANR	8434188	Argument	NULL		8434094	4					
ANR	8434189	Identifier	NULL		8434094	0					
ANR	8434190	Argument	gs_currentdevicecolor_inline ( pgs )		8434094	5					
ANR	8434191	CallExpression	gs_currentdevicecolor_inline ( pgs )		8434094	0					
ANR	8434192	Callee	gs_currentdevicecolor_inline		8434094	0					
ANR	8434193	Identifier	gs_currentdevicecolor_inline		8434094	0					
ANR	8434194	ArgumentList	pgs		8434094	1					
ANR	8434195	Argument	pgs		8434094	0					
ANR	8434196	Identifier	pgs		8434094	0					
ANR	8434197	Argument	pgs -> clip_path		8434094	6					
ANR	8434198	PtrMemberAccess	pgs -> clip_path		8434094	0					
ANR	8434199	Identifier	pgs		8434094	0					
ANR	8434200	Identifier	clip_path		8434094	1					
ANR	8434201	Argument	pgs -> memory		8434094	7					
ANR	8434202	PtrMemberAccess	pgs -> memory		8434094	0					
ANR	8434203	Identifier	pgs		8434094	0					
ANR	8434204	Identifier	memory		8434094	1					
ANR	8434205	Argument	( gx_image_enum_common_t * * ) & iinfo		8434094	8					
ANR	8434206	CastExpression	( gx_image_enum_common_t * * ) & iinfo		8434094	0					
ANR	8434207	CastTarget	gx_image_enum_common_t * *		8434094	0					
ANR	8434208	UnaryOperationExpression	& iinfo		8434094	1					
ANR	8434209	UnaryOperator	&		8434094	0					
ANR	8434210	Identifier	iinfo		8434094	1					
ANR	8434211	IfStatement	if ( code < 0 )		8434094	9					
ANR	8434212	Condition	code < 0	307:8:9579:9586	8434094	0	True				
ANR	8434213	RelationalExpression	code < 0		8434094	0		<			
ANR	8434214	Identifier	code		8434094	0					
ANR	8434215	PrimaryExpression	0		8434094	1					
ANR	8434216	ReturnStatement	return code ;	308:8:9597:9608	8434094	1	True				
ANR	8434217	Identifier	code		8434094	0					
ANR	8434218	IfStatement	if ( bold )		8434094	10					
ANR	8434219	Condition	bold	309:8:9618:9621	8434094	0	True				
ANR	8434220	Identifier	bold		8434094	0					
ANR	8434221	CompoundStatement		26:8:887:892	8434094	1					
ANR	8434222	IdentifierDeclStatement	uint src_width = pim -> Width - bold ;	310:8:9687:9721	8434094	0	True				
ANR	8434223	IdentifierDecl	src_width = pim -> Width - bold		8434094	0					
ANR	8434224	IdentifierDeclType	uint		8434094	0					
ANR	8434225	Identifier	src_width		8434094	1					
ANR	8434226	AssignmentExpression	src_width = pim -> Width - bold		8434094	2		=			
ANR	8434227	Identifier	src_width		8434094	0					
ANR	8434228	AdditiveExpression	pim -> Width - bold		8434094	1		-			
ANR	8434229	PtrMemberAccess	pim -> Width		8434094	0					
ANR	8434230	Identifier	pim		8434094	0					
ANR	8434231	Identifier	Width		8434094	1					
ANR	8434232	Identifier	bold		8434094	1					
ANR	8434233	IdentifierDeclStatement	uint src_height = pim -> Height - bold ;	311:8:9731:9767	8434094	1	True				
ANR	8434234	IdentifierDecl	src_height = pim -> Height - bold		8434094	0					
ANR	8434235	IdentifierDeclType	uint		8434094	0					
ANR	8434236	Identifier	src_height		8434094	1					
ANR	8434237	AssignmentExpression	src_height = pim -> Height - bold		8434094	2		=			
ANR	8434238	Identifier	src_height		8434094	0					
ANR	8434239	AdditiveExpression	pim -> Height - bold		8434094	1		-			
ANR	8434240	PtrMemberAccess	pim -> Height		8434094	0					
ANR	8434241	Identifier	pim		8434094	0					
ANR	8434242	Identifier	Height		8434094	1					
ANR	8434243	Identifier	bold		8434094	1					
ANR	8434244	IdentifierDeclStatement	uint dest_raster = bitmap_raster ( pim -> Width ) ;	312:8:9777:9821	8434094	2	True				
ANR	8434245	IdentifierDecl	dest_raster = bitmap_raster ( pim -> Width )		8434094	0					
ANR	8434246	IdentifierDeclType	uint		8434094	0					
ANR	8434247	Identifier	dest_raster		8434094	1					
ANR	8434248	AssignmentExpression	dest_raster = bitmap_raster ( pim -> Width )		8434094	2		=			
ANR	8434249	Identifier	dest_raster		8434094	0					
ANR	8434250	CallExpression	bitmap_raster ( pim -> Width )		8434094	1					
ANR	8434251	Callee	bitmap_raster		8434094	0					
ANR	8434252	Identifier	bitmap_raster		8434094	0					
ANR	8434253	ArgumentList	pim -> Width		8434094	1					
ANR	8434254	Argument	pim -> Width		8434094	0					
ANR	8434255	PtrMemberAccess	pim -> Width		8434094	0					
ANR	8434256	Identifier	pim		8434094	0					
ANR	8434257	Identifier	Width		8434094	1					
ANR	8434258	IdentifierDeclStatement	int n1 = bold + 1 ;	313:8:9831:9848	8434094	3	True				
ANR	8434259	IdentifierDecl	n1 = bold + 1		8434094	0					
ANR	8434260	IdentifierDeclType	int		8434094	0					
ANR	8434261	Identifier	n1		8434094	1					
ANR	8434262	AssignmentExpression	n1 = bold + 1		8434094	2		=			
ANR	8434263	Identifier	n1		8434094	0					
ANR	8434264	AdditiveExpression	bold + 1		8434094	1		+			
ANR	8434265	Identifier	bold		8434094	0					
ANR	8434266	PrimaryExpression	1		8434094	1					
ANR	8434267	Statement	define	315:1:9852:9857	8434094	4	True				
ANR	8434268	Statement	merged_line	315:8:9859:9869	8434094	5	True				
ANR	8434269	Statement	(	315:19:9870:9870	8434094	6	True				
ANR	8434270	Statement	i	315:20:9871:9871	8434094	7	True				
ANR	8434271	Statement	)	315:21:9872:9872	8434094	8	True				
ANR	8434272	Statement	(	315:23:9874:9874	8434094	9	True				
ANR	8434273	Statement	bold_lines	315:24:9875:9884	8434094	10	True				
ANR	8434274	Statement	+	315:35:9886:9886	8434094	11	True				
ANR	8434275	Statement	(	315:37:9888:9888	8434094	12	True				
ANR	8434276	Statement	(	315:38:9889:9889	8434094	13	True				
ANR	8434277	Statement	i	315:39:9890:9890	8434094	14	True				
ANR	8434278	Statement	)	315:40:9891:9891	8434094	15	True				
ANR	8434279	Statement	%	315:42:9893:9893	8434094	16	True				
ANR	8434280	Statement	n1	315:44:9895:9896	8434094	17	True				
ANR	8434281	Statement	+	315:47:9898:9898	8434094	18	True				
ANR	8434282	Statement	1	315:49:9900:9900	8434094	19	True				
ANR	8434283	Statement	)	315:50:9901:9901	8434094	20	True				
ANR	8434284	Statement	*	315:52:9903:9903	8434094	21	True				
ANR	8434285	Statement	dest_raster	315:54:9905:9915	8434094	22	True				
ANR	8434286	Statement	)	315:65:9916:9916	8434094	23	True				
ANR	8434287	IdentifierDeclStatement	int y ;	316:8:9926:9931	8434094	24	True				
ANR	8434288	IdentifierDecl	y		8434094	0					
ANR	8434289	IdentifierDeclType	int		8434094	0					
ANR	8434290	Identifier	y		8434094	1					
ANR	8434291	ExpressionStatement	planes [ 0 ] = bold_lines	318:8:9942:9964	8434094	25	True				
ANR	8434292	AssignmentExpression	planes [ 0 ] = bold_lines		8434094	0		=			
ANR	8434293	ArrayIndexing	planes [ 0 ]		8434094	0					
ANR	8434294	Identifier	planes		8434094	0					
ANR	8434295	PrimaryExpression	0		8434094	1					
ANR	8434296	Identifier	bold_lines		8434094	1					
ANR	8434297	ForStatement	for ( y = 0 ; y < pim -> Height ; ++ y )		8434094	26					
ANR	8434298	ForInit	y = 0 ;	319:13:9979:9984	8434094	0	True				
ANR	8434299	AssignmentExpression	y = 0		8434094	0		=			
ANR	8434300	Identifier	y		8434094	0					
ANR	8434301	PrimaryExpression	0		8434094	1					
ANR	8434302	Condition	y < pim -> Height	319:20:9986:10000	8434094	1	True				
ANR	8434303	RelationalExpression	y < pim -> Height		8434094	0		<			
ANR	8434304	Identifier	y		8434094	0					
ANR	8434305	PtrMemberAccess	pim -> Height		8434094	1					
ANR	8434306	Identifier	pim		8434094	0					
ANR	8434307	Identifier	Height		8434094	1					
ANR	8434308	UnaryExpression	++ y	319:37:10003:10005	8434094	2	True				
ANR	8434309	IncDec	++		8434094	0					
ANR	8434310	Identifier	y		8434094	1					
ANR	8434311	CompoundStatement		31:12:1031:1062	8434094	3					
ANR	8434312	IdentifierDeclStatement	int y0 = ( y < bold ? 0 : y - bold ) ;	320:12:10022:10056	8434094	0	True				
ANR	8434313	IdentifierDecl	y0 = ( y < bold ? 0 : y - bold )		8434094	0					
ANR	8434314	IdentifierDeclType	int		8434094	0					
ANR	8434315	Identifier	y0		8434094	1					
ANR	8434316	AssignmentExpression	y0 = ( y < bold ? 0 : y - bold )		8434094	2		=			
ANR	8434317	Identifier	y0		8434094	0					
ANR	8434318	ConditionalExpression	y < bold ? 0 : y - bold		8434094	1					
ANR	8434319	Condition	y < bold		8434094	0					
ANR	8434320	RelationalExpression	y < bold		8434094	0		<			
ANR	8434321	Identifier	y		8434094	0					
ANR	8434322	Identifier	bold		8434094	1					
ANR	8434323	PrimaryExpression	0		8434094	1					
ANR	8434324	AdditiveExpression	y - bold		8434094	2		-			
ANR	8434325	Identifier	y		8434094	0					
ANR	8434326	Identifier	bold		8434094	1					
ANR	8434327	IdentifierDeclStatement	"int y1 = min ( y + 1 , src_height ) ;"	321:12:10070:10101	8434094	1	True				
ANR	8434328	IdentifierDecl	"y1 = min ( y + 1 , src_height )"		8434094	0					
ANR	8434329	IdentifierDeclType	int		8434094	0					
ANR	8434330	Identifier	y1		8434094	1					
ANR	8434331	AssignmentExpression	"y1 = min ( y + 1 , src_height )"		8434094	2		=			
ANR	8434332	Identifier	y1		8434094	0					
ANR	8434333	CallExpression	"min ( y + 1 , src_height )"		8434094	1					
ANR	8434334	Callee	min		8434094	0					
ANR	8434335	Identifier	min		8434094	0					
ANR	8434336	ArgumentList	y + 1		8434094	1					
ANR	8434337	Argument	y + 1		8434094	0					
ANR	8434338	AdditiveExpression	y + 1		8434094	0		+			
ANR	8434339	Identifier	y		8434094	0					
ANR	8434340	PrimaryExpression	1		8434094	1					
ANR	8434341	Argument	src_height		8434094	1					
ANR	8434342	Identifier	src_height		8434094	0					
ANR	8434343	IfStatement	if ( y < src_height )		8434094	2					
ANR	8434344	Condition	y < src_height	323:16:10120:10133	8434094	0	True				
ANR	8434345	RelationalExpression	y < src_height		8434094	0		<			
ANR	8434346	Identifier	y		8434094	0					
ANR	8434347	Identifier	src_height		8434094	1					
ANR	8434348	CompoundStatement		33:32:1097:1097	8434094	1					
ANR	8434349	ExpressionStatement	"bits_smear_horizontally ( merged_line ( y ) , bitmap_data + y * sraster , src_width , bold )"	324:16:10154:10317	8434094	0	True				
ANR	8434350	CallExpression	"bits_smear_horizontally ( merged_line ( y ) , bitmap_data + y * sraster , src_width , bold )"		8434094	0					
ANR	8434351	Callee	bits_smear_horizontally		8434094	0					
ANR	8434352	Identifier	bits_smear_horizontally		8434094	0					
ANR	8434353	ArgumentList	merged_line ( y )		8434094	1					
ANR	8434354	Argument	merged_line ( y )		8434094	0					
ANR	8434355	CallExpression	merged_line ( y )		8434094	0					
ANR	8434356	Callee	merged_line		8434094	0					
ANR	8434357	Identifier	merged_line		8434094	0					
ANR	8434358	ArgumentList	y		8434094	1					
ANR	8434359	Argument	y		8434094	0					
ANR	8434360	Identifier	y		8434094	0					
ANR	8434361	Argument	bitmap_data + y * sraster		8434094	1					
ANR	8434362	AdditiveExpression	bitmap_data + y * sraster		8434094	0		+			
ANR	8434363	Identifier	bitmap_data		8434094	0					
ANR	8434364	MultiplicativeExpression	y * sraster		8434094	1		*			
ANR	8434365	Identifier	y		8434094	0					
ANR	8434366	Identifier	sraster		8434094	1					
ANR	8434367	Argument	src_width		8434094	2					
ANR	8434368	Identifier	src_width		8434094	0					
ANR	8434369	Argument	bold		8434094	3					
ANR	8434370	Identifier	bold		8434094	0					
ANR	8434371	CompoundStatement		38:20:1383:1396	8434094	1					
ANR	8434372	IdentifierDeclStatement	int kmask = 1 ;	328:20:10422:10435	8434094	0	True				
ANR	8434373	IdentifierDecl	kmask = 1		8434094	0					
ANR	8434374	IdentifierDeclType	int		8434094	0					
ANR	8434375	Identifier	kmask		8434094	1					
ANR	8434376	AssignmentExpression	kmask = 1		8434094	2		=			
ANR	8434377	Identifier	kmask		8434094	0					
ANR	8434378	PrimaryExpression	1		8434094	1					
ANR	8434379	ForStatement	for ( ; ( y & kmask ) == kmask && y - kmask >= y0 ; kmask = ( kmask << 1 ) + 1 )		8434094	1					
ANR	8434380	Condition	( y & kmask ) == kmask && y - kmask >= y0	330:27:10465:10503	8434094	0	True				
ANR	8434381	AndExpression	( y & kmask ) == kmask && y - kmask >= y0		8434094	0		&&			
ANR	8434382	EqualityExpression	( y & kmask ) == kmask		8434094	0		==			
ANR	8434383	BitAndExpression	y & kmask		8434094	0		&			
ANR	8434384	Identifier	y		8434094	0					
ANR	8434385	Identifier	kmask		8434094	1					
ANR	8434386	Identifier	kmask		8434094	1					
ANR	8434387	RelationalExpression	y - kmask >= y0		8434094	1		>=			
ANR	8434388	AdditiveExpression	y - kmask		8434094	0		-			
ANR	8434389	Identifier	y		8434094	0					
ANR	8434390	Identifier	kmask		8434094	1					
ANR	8434391	Identifier	y0		8434094	1					
ANR	8434392	AssignmentExpression	kmask = ( kmask << 1 ) + 1	331:25:10531:10554	8434094	1	True	=			
ANR	8434393	Identifier	kmask		8434094	0					
ANR	8434394	AdditiveExpression	( kmask << 1 ) + 1		8434094	1		+			
ANR	8434395	ShiftExpression	kmask << 1		8434094	0		<<			
ANR	8434396	Identifier	kmask		8434094	0					
ANR	8434397	PrimaryExpression	1		8434094	1					
ANR	8434398	PrimaryExpression	1		8434094	1					
ANR	8434399	ExpressionStatement	"bits_merge ( merged_line ( y - kmask ) , merged_line ( y - ( kmask >> 1 ) ) , dest_bytes )"	332:24:10581:10693	8434094	2	True				
ANR	8434400	CallExpression	"bits_merge ( merged_line ( y - kmask ) , merged_line ( y - ( kmask >> 1 ) ) , dest_bytes )"		8434094	0					
ANR	8434401	Callee	bits_merge		8434094	0					
ANR	8434402	Identifier	bits_merge		8434094	0					
ANR	8434403	ArgumentList	merged_line ( y - kmask )		8434094	1					
ANR	8434404	Argument	merged_line ( y - kmask )		8434094	0					
ANR	8434405	CallExpression	merged_line ( y - kmask )		8434094	0					
ANR	8434406	Callee	merged_line		8434094	0					
ANR	8434407	Identifier	merged_line		8434094	0					
ANR	8434408	ArgumentList	y - kmask		8434094	1					
ANR	8434409	Argument	y - kmask		8434094	0					
ANR	8434410	AdditiveExpression	y - kmask		8434094	0		-			
ANR	8434411	Identifier	y		8434094	0					
ANR	8434412	Identifier	kmask		8434094	1					
ANR	8434413	Argument	merged_line ( y - ( kmask >> 1 ) )		8434094	1					
ANR	8434414	CallExpression	merged_line ( y - ( kmask >> 1 ) )		8434094	0					
ANR	8434415	Callee	merged_line		8434094	0					
ANR	8434416	Identifier	merged_line		8434094	0					
ANR	8434417	ArgumentList	y - ( kmask >> 1 )		8434094	1					
ANR	8434418	Argument	y - ( kmask >> 1 )		8434094	0					
ANR	8434419	AdditiveExpression	y - ( kmask >> 1 )		8434094	0		-			
ANR	8434420	Identifier	y		8434094	0					
ANR	8434421	ShiftExpression	kmask >> 1		8434094	1		>>			
ANR	8434422	Identifier	kmask		8434094	0					
ANR	8434423	PrimaryExpression	1		8434094	1					
ANR	8434424	Argument	dest_bytes		8434094	2					
ANR	8434425	Identifier	dest_bytes		8434094	0					
ANR	8434426	CompoundStatement		59:16:2302:2308	8434094	3					
ANR	8434427	IdentifierDeclStatement	bool first = true ;	348:16:11306:11323	8434094	0	True				
ANR	8434428	IdentifierDecl	first = true		8434094	0					
ANR	8434429	IdentifierDeclType	bool		8434094	0					
ANR	8434430	Identifier	first		8434094	1					
ANR	8434431	AssignmentExpression	first = true		8434094	2		=			
ANR	8434432	Identifier	true		8434094	0					
ANR	8434433	Identifier	true		8434094	1					
ANR	8434434	IdentifierDeclStatement	int iy ;	349:16:11341:11347	8434094	1	True				
ANR	8434435	IdentifierDecl	iy		8434094	0					
ANR	8434436	IdentifierDeclType	int		8434094	0					
ANR	8434437	Identifier	iy		8434094	1					
ANR	8434438	ForStatement	for ( iy = y1 - 1 ; iy >= y0 ; -- iy )		8434094	2					
ANR	8434439	ForInit	iy = y1 - 1 ;	351:21:11371:11382	8434094	0	True				
ANR	8434440	AssignmentExpression	iy = y1 - 1		8434094	0		=			
ANR	8434441	Identifier	iy		8434094	0					
ANR	8434442	AdditiveExpression	y1 - 1		8434094	1		-			
ANR	8434443	Identifier	y1		8434094	0					
ANR	8434444	PrimaryExpression	1		8434094	1					
ANR	8434445	Condition	iy >= y0	351:34:11384:11391	8434094	1	True				
ANR	8434446	RelationalExpression	iy >= y0		8434094	0		>=			
ANR	8434447	Identifier	iy		8434094	0					
ANR	8434448	Identifier	y0		8434094	1					
ANR	8434449	UnaryExpression	-- iy	351:44:11394:11397	8434094	2	True				
ANR	8434450	IncDec	--		8434094	0					
ANR	8434451	Identifier	iy		8434094	1					
ANR	8434452	CompoundStatement		62:20:2383:2396	8434094	3					
ANR	8434453	IdentifierDeclStatement	int kmask = 1 ;	352:20:11422:11435	8434094	0	True				
ANR	8434454	IdentifierDecl	kmask = 1		8434094	0					
ANR	8434455	IdentifierDeclType	int		8434094	0					
ANR	8434456	Identifier	kmask		8434094	1					
ANR	8434457	AssignmentExpression	kmask = 1		8434094	2		=			
ANR	8434458	Identifier	kmask		8434094	0					
ANR	8434459	PrimaryExpression	1		8434094	1					
ANR	8434460	WhileStatement	while ( ( iy & kmask ) == kmask && iy - kmask >= y0 )		8434094	1					
ANR	8434461	Condition	( iy & kmask ) == kmask && iy - kmask >= y0	354:27:11465:11505	8434094	0	True				
ANR	8434462	AndExpression	( iy & kmask ) == kmask && iy - kmask >= y0		8434094	0		&&			
ANR	8434463	EqualityExpression	( iy & kmask ) == kmask		8434094	0		==			
ANR	8434464	BitAndExpression	iy & kmask		8434094	0		&			
ANR	8434465	Identifier	iy		8434094	0					
ANR	8434466	Identifier	kmask		8434094	1					
ANR	8434467	Identifier	kmask		8434094	1					
ANR	8434468	RelationalExpression	iy - kmask >= y0		8434094	1		>=			
ANR	8434469	AdditiveExpression	iy - kmask		8434094	0		-			
ANR	8434470	Identifier	iy		8434094	0					
ANR	8434471	Identifier	kmask		8434094	1					
ANR	8434472	Identifier	y0		8434094	1					
ANR	8434473	ExpressionStatement	"iy -= kmask , kmask <<= 1"	355:24:11532:11556	8434094	1	True				
ANR	8434474	Expression	"iy -= kmask , kmask <<= 1"		8434094	0					
ANR	8434475	AssignmentExpression	iy -= kmask		8434094	0		-=			
ANR	8434476	Identifier	iy		8434094	0					
ANR	8434477	Identifier	kmask		8434094	1					
ANR	8434478	AssignmentExpression	kmask <<= 1		8434094	1		<<=			
ANR	8434479	Identifier	kmask		8434094	0					
ANR	8434480	PrimaryExpression	1		8434094	1					
ANR	8434481	IfStatement	if ( first )		8434094	2					
ANR	8434482	Condition	first	356:24:11582:11586	8434094	0	True				
ANR	8434483	Identifier	first		8434094	0					
ANR	8434484	CompoundStatement		66:31:2550:2550	8434094	1					
ANR	8434485	ExpressionStatement	"memcpy ( bold_lines , merged_line ( iy ) , dest_bytes )"	357:24:11615:11662	8434094	0	True				
ANR	8434486	CallExpression	"memcpy ( bold_lines , merged_line ( iy ) , dest_bytes )"		8434094	0					
ANR	8434487	Callee	memcpy		8434094	0					
ANR	8434488	Identifier	memcpy		8434094	0					
ANR	8434489	ArgumentList	bold_lines		8434094	1					
ANR	8434490	Argument	bold_lines		8434094	0					
ANR	8434491	Identifier	bold_lines		8434094	0					
ANR	8434492	Argument	merged_line ( iy )		8434094	1					
ANR	8434493	CallExpression	merged_line ( iy )		8434094	0					
ANR	8434494	Callee	merged_line		8434094	0					
ANR	8434495	Identifier	merged_line		8434094	0					
ANR	8434496	ArgumentList	iy		8434094	1					
ANR	8434497	Argument	iy		8434094	0					
ANR	8434498	Identifier	iy		8434094	0					
ANR	8434499	Argument	dest_bytes		8434094	2					
ANR	8434500	Identifier	dest_bytes		8434094	0					
ANR	8434501	ExpressionStatement	first = false	358:24:11688:11701	8434094	1	True				
ANR	8434502	AssignmentExpression	first = false		8434094	0		=			
ANR	8434503	Identifier	first		8434094	0					
ANR	8434504	Identifier	false		8434094	1					
ANR	8434505	ElseStatement	else		8434094	0					
ANR	8434506	ExpressionStatement	"bits_merge ( bold_lines , merged_line ( iy ) , dest_bytes )"	360:24:11754:11805	8434094	0	True				
ANR	8434507	CallExpression	"bits_merge ( bold_lines , merged_line ( iy ) , dest_bytes )"		8434094	0					
ANR	8434508	Callee	bits_merge		8434094	0					
ANR	8434509	Identifier	bits_merge		8434094	0					
ANR	8434510	ArgumentList	bold_lines		8434094	1					
ANR	8434511	Argument	bold_lines		8434094	0					
ANR	8434512	Identifier	bold_lines		8434094	0					
ANR	8434513	Argument	merged_line ( iy )		8434094	1					
ANR	8434514	CallExpression	merged_line ( iy )		8434094	0					
ANR	8434515	Callee	merged_line		8434094	0					
ANR	8434516	Identifier	merged_line		8434094	0					
ANR	8434517	ArgumentList	iy		8434094	1					
ANR	8434518	Argument	iy		8434094	0					
ANR	8434519	Identifier	iy		8434094	0					
ANR	8434520	Argument	dest_bytes		8434094	2					
ANR	8434521	Identifier	dest_bytes		8434094	0					
ANR	8434522	ExpressionStatement	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , 1 )"	364:12:11852:11942	8434094	4	True				
ANR	8434523	AssignmentExpression	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , 1 )"		8434094	0		=			
ANR	8434524	Identifier	code		8434094	0					
ANR	8434525	CallExpression	"( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , 1 )"		8434094	1					
ANR	8434526	Callee	"* dev_proc ( dev , image_data )"		8434094	0					
ANR	8434527	UnaryOperationExpression	"* dev_proc ( dev , image_data )"		8434094	0					
ANR	8434528	UnaryOperator	*		8434094	0					
ANR	8434529	CallExpression	"dev_proc ( dev , image_data )"		8434094	1					
ANR	8434530	Callee	dev_proc		8434094	0					
ANR	8434531	Identifier	dev_proc		8434094	0					
ANR	8434532	ArgumentList	dev		8434094	1					
ANR	8434533	Argument	dev		8434094	0					
ANR	8434534	Identifier	dev		8434094	0					
ANR	8434535	Argument	image_data		8434094	1					
ANR	8434536	Identifier	image_data		8434094	0					
ANR	8434537	ArgumentList	dev		8434094	1					
ANR	8434538	Argument	dev		8434094	0					
ANR	8434539	Identifier	dev		8434094	0					
ANR	8434540	Argument	iinfo		8434094	1					
ANR	8434541	Identifier	iinfo		8434094	0					
ANR	8434542	Argument	planes		8434094	2					
ANR	8434543	Identifier	planes		8434094	0					
ANR	8434544	Argument	0		8434094	3					
ANR	8434545	PrimaryExpression	0		8434094	0					
ANR	8434546	Argument	dest_bytes		8434094	4					
ANR	8434547	Identifier	dest_bytes		8434094	0					
ANR	8434548	Argument	1		8434094	5					
ANR	8434549	PrimaryExpression	1		8434094	0					
ANR	8434550	IfStatement	if ( code != 0 )		8434094	5					
ANR	8434551	Condition	code != 0	366:16:11960:11968	8434094	0	True				
ANR	8434552	EqualityExpression	code != 0		8434094	0		!=			
ANR	8434553	Identifier	code		8434094	0					
ANR	8434554	PrimaryExpression	0		8434094	1					
ANR	8434555	BreakStatement	break ;	367:16:11987:11992	8434094	1	True				
ANR	8434556	Statement	undef	369:1:12005:12009	8434094	27	True				
ANR	8434557	Statement	merged_line	369:7:12011:12021	8434094	28	True				
ANR	8434558	ElseStatement	else		8434094	0					
ANR	8434559	CompoundStatement		80:11:2995:2995	8434094	0					
ANR	8434560	ExpressionStatement	planes [ 0 ] = bitmap_data	371:8:12100:12123	8434094	0	True				
ANR	8434561	AssignmentExpression	planes [ 0 ] = bitmap_data		8434094	0		=			
ANR	8434562	ArrayIndexing	planes [ 0 ]		8434094	0					
ANR	8434563	Identifier	planes		8434094	0					
ANR	8434564	PrimaryExpression	0		8434094	1					
ANR	8434565	Identifier	bitmap_data		8434094	1					
ANR	8434566	ExpressionStatement	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , pim -> Height )"	372:8:12133:12229	8434094	1	True				
ANR	8434567	AssignmentExpression	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , pim -> Height )"		8434094	0		=			
ANR	8434568	Identifier	code		8434094	0					
ANR	8434569	CallExpression	"( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , pim -> Height )"		8434094	1					
ANR	8434570	Callee	"* dev_proc ( dev , image_data )"		8434094	0					
ANR	8434571	UnaryOperationExpression	"* dev_proc ( dev , image_data )"		8434094	0					
ANR	8434572	UnaryOperator	*		8434094	0					
ANR	8434573	CallExpression	"dev_proc ( dev , image_data )"		8434094	1					
ANR	8434574	Callee	dev_proc		8434094	0					
ANR	8434575	Identifier	dev_proc		8434094	0					
ANR	8434576	ArgumentList	dev		8434094	1					
ANR	8434577	Argument	dev		8434094	0					
ANR	8434578	Identifier	dev		8434094	0					
ANR	8434579	Argument	image_data		8434094	1					
ANR	8434580	Identifier	image_data		8434094	0					
ANR	8434581	ArgumentList	dev		8434094	1					
ANR	8434582	Argument	dev		8434094	0					
ANR	8434583	Identifier	dev		8434094	0					
ANR	8434584	Argument	iinfo		8434094	1					
ANR	8434585	Identifier	iinfo		8434094	0					
ANR	8434586	Argument	planes		8434094	2					
ANR	8434587	Identifier	planes		8434094	0					
ANR	8434588	Argument	0		8434094	3					
ANR	8434589	PrimaryExpression	0		8434094	0					
ANR	8434590	Argument	dest_bytes		8434094	4					
ANR	8434591	Identifier	dest_bytes		8434094	0					
ANR	8434592	Argument	pim -> Height		8434094	5					
ANR	8434593	PtrMemberAccess	pim -> Height		8434094	0					
ANR	8434594	Identifier	pim		8434094	0					
ANR	8434595	Identifier	Height		8434094	1					
ANR	8434596	ExpressionStatement	"( * dev_proc ( dev , end_image ) ) ( dev , iinfo , code >= 0 )"	375:4:12241:12292	8434094	11	True				
ANR	8434597	CallExpression	"( * dev_proc ( dev , end_image ) ) ( dev , iinfo , code >= 0 )"		8434094	0					
ANR	8434598	Callee	"* dev_proc ( dev , end_image )"		8434094	0					
ANR	8434599	UnaryOperationExpression	"* dev_proc ( dev , end_image )"		8434094	0					
ANR	8434600	UnaryOperator	*		8434094	0					
ANR	8434601	CallExpression	"dev_proc ( dev , end_image )"		8434094	1					
ANR	8434602	Callee	dev_proc		8434094	0					
ANR	8434603	Identifier	dev_proc		8434094	0					
ANR	8434604	ArgumentList	dev		8434094	1					
ANR	8434605	Argument	dev		8434094	0					
ANR	8434606	Identifier	dev		8434094	0					
ANR	8434607	Argument	end_image		8434094	1					
ANR	8434608	Identifier	end_image		8434094	0					
ANR	8434609	ArgumentList	dev		8434094	1					
ANR	8434610	Argument	dev		8434094	0					
ANR	8434611	Identifier	dev		8434094	0					
ANR	8434612	Argument	iinfo		8434094	1					
ANR	8434613	Identifier	iinfo		8434094	0					
ANR	8434614	Argument	code >= 0		8434094	2					
ANR	8434615	RelationalExpression	code >= 0		8434094	0		>=			
ANR	8434616	Identifier	code		8434094	0					
ANR	8434617	PrimaryExpression	0		8434094	1					
ANR	8434618	ReturnStatement	return code ;	376:4:12298:12309	8434094	12	True				
ANR	8434619	Identifier	code		8434094	0					
ANR	8434620	ReturnType	int		8434094	1					
ANR	8434621	Identifier	pl_image_bitmap_char		8434094	2					
ANR	8434622	ParameterList	"gs_image_enum * ienum , const gs_image_t * pim , const byte * bitmap_data , uint sraster , int bold , byte * bold_lines , gs_gstate * pgs"		8434094	3					
ANR	8434623	Parameter	gs_image_enum * ienum	288:21:8863:8883	8434094	0	True				
ANR	8434624	ParameterType	gs_image_enum *		8434094	0					
ANR	8434625	Identifier	ienum		8434094	1					
ANR	8434626	Parameter	const gs_image_t * pim	288:44:8886:8907	8434094	1	True				
ANR	8434627	ParameterType	const gs_image_t *		8434094	0					
ANR	8434628	Identifier	pim		8434094	1					
ANR	8434629	Parameter	const byte * bitmap_data	289:21:8931:8954	8434094	2	True				
ANR	8434630	ParameterType	const byte *		8434094	0					
ANR	8434631	Identifier	bitmap_data		8434094	1					
ANR	8434632	Parameter	uint sraster	289:47:8957:8968	8434094	3	True				
ANR	8434633	ParameterType	uint		8434094	0					
ANR	8434634	Identifier	sraster		8434094	1					
ANR	8434635	Parameter	int bold	289:61:8971:8978	8434094	4	True				
ANR	8434636	ParameterType	int		8434094	0					
ANR	8434637	Identifier	bold		8434094	1					
ANR	8434638	Parameter	byte * bold_lines	290:21:9002:9018	8434094	5	True				
ANR	8434639	ParameterType	byte *		8434094	0					
ANR	8434640	Identifier	bold_lines		8434094	1					
ANR	8434641	Parameter	gs_gstate * pgs	290:40:9021:9035	8434094	6	True				
ANR	8434642	ParameterType	gs_gstate *		8434094	0					
ANR	8434643	Identifier	pgs		8434094	1					
ANR	8434644	CFGEntryNode	ENTRY		8434094		True				
ANR	8434645	CFGExitNode	EXIT		8434094		True				
ANR	8434646	Symbol	n1		8434094						
ANR	8434647	Symbol	* pgs		8434094						
ANR	8434648	Symbol	pgs -> clip_path		8434094						
ANR	8434649	Symbol	dev		8434094						
ANR	8434650	Symbol	pim		8434094						
ANR	8434651	Symbol	pixmap_high_level_pattern		8434094						
ANR	8434652	Symbol	pgs -> device		8434094						
ANR	8434653	Symbol	ienum		8434094						
ANR	8434654	Symbol	gs_image_format_chunky		8434094						
ANR	8434655	Symbol	dest_raster		8434094						
ANR	8434656	Symbol	NULL		8434094						
ANR	8434657	Symbol	planes		8434094						
ANR	8434658	Symbol	bold		8434094						
ANR	8434659	Symbol	begin_image		8434094						
ANR	8434660	Symbol	"* dev_proc ( dev , image_data )"		8434094						
ANR	8434661	Symbol	gs_error_Remap_Color		8434094						
ANR	8434662	Symbol	iy		8434094						
ANR	8434663	Symbol	end_image		8434094						
ANR	8434664	Symbol	sraster		8434094						
ANR	8434665	Symbol	bold_lines		8434094						
ANR	8434666	Symbol	true		8434094						
ANR	8434667	Symbol	pim -> Height		8434094						
ANR	8434668	Symbol	* planes		8434094						
ANR	8434669	Symbol	kmask		8434094						
ANR	8434670	Symbol	code		8434094						
ANR	8434671	Symbol	pim -> Width		8434094						
ANR	8434672	Symbol	* dev_proc		8434094						
ANR	8434673	Symbol	src_width		8434094						
ANR	8434674	Symbol	gs_currentdevicecolor_inline		8434094						
ANR	8434675	Symbol	min		8434094						
ANR	8434676	Symbol	dev_proc		8434094						
ANR	8434677	Symbol	src_height		8434094						
ANR	8434678	Symbol	y0		8434094						
ANR	8434679	Symbol	y1		8434094						
ANR	8434680	Symbol	pgs		8434094						
ANR	8434681	Symbol	pgs -> memory		8434094						
ANR	8434682	Symbol	& iinfo		8434094						
ANR	8434683	Symbol	false		8434094						
ANR	8434684	Symbol	bitmap_data		8434094						
ANR	8434685	Symbol	dest_bytes		8434094						
ANR	8434686	Symbol	iinfo		8434094						
ANR	8434687	Symbol	gx_set_dev_color		8434094						
ANR	8434688	Symbol	bitmap_raster		8434094						
ANR	8434689	Symbol	merged_line		8434094						
ANR	8434690	Symbol	image_data		8434094						
ANR	8434691	Symbol	y		8434094						
ANR	8434692	Symbol	"* dev_proc ( dev , begin_image )"		8434094						
ANR	8434693	Symbol	* pim		8434094						
ANR	8434694	Symbol	first		8434094						
ANR	8434695	Function	pl_bitmap_build_char	381:0:12428:16679							
ANR	8434696	FunctionDef	"pl_bitmap_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph)"		8434695	0					
ANR	8434697	CompoundStatement		384:0:12566:16679	8434695	0					
ANR	8434698	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	385:4:12572:12624	8434695	0	True				
ANR	8434699	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8434695	0					
ANR	8434700	IdentifierDeclType	pl_font_t *		8434695	0					
ANR	8434701	Identifier	plfont		8434695	1					
ANR	8434702	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8434695	2		=			
ANR	8434703	Identifier	plfont		8434695	0					
ANR	8434704	CastExpression	( pl_font_t * ) pfont -> client_data		8434695	1					
ANR	8434705	CastTarget	pl_font_t *		8434695	0					
ANR	8434706	PtrMemberAccess	pfont -> client_data		8434695	1					
ANR	8434707	Identifier	pfont		8434695	0					
ANR	8434708	Identifier	client_data		8434695	1					
ANR	8434709	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data ;"	386:4:12630:12691	8434695	1	True				
ANR	8434710	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8434695	0					
ANR	8434711	IdentifierDeclType	const byte *		8434695	0					
ANR	8434712	Identifier	cdata		8434695	1					
ANR	8434713	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8434695	2		=			
ANR	8434714	Identifier	cdata		8434695	0					
ANR	8434715	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8434695	1					
ANR	8434716	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8434695	0					
ANR	8434717	Callee	pl_font_lookup_glyph		8434695	0					
ANR	8434718	Identifier	pl_font_lookup_glyph		8434695	0					
ANR	8434719	ArgumentList	plfont		8434695	1					
ANR	8434720	Argument	plfont		8434695	0					
ANR	8434721	Identifier	plfont		8434695	0					
ANR	8434722	Argument	glyph		8434695	1					
ANR	8434723	Identifier	glyph		8434695	0					
ANR	8434724	Identifier	data		8434695	1					
ANR	8434725	IdentifierDeclStatement	bool orient = plfont -> orient ;	387:4:12697:12725	8434695	2	True				
ANR	8434726	IdentifierDecl	orient = plfont -> orient		8434695	0					
ANR	8434727	IdentifierDeclType	bool		8434695	0					
ANR	8434728	Identifier	orient		8434695	1					
ANR	8434729	AssignmentExpression	orient = plfont -> orient		8434695	2		=			
ANR	8434730	Identifier	orient		8434695	0					
ANR	8434731	PtrMemberAccess	plfont -> orient		8434695	1					
ANR	8434732	Identifier	plfont		8434695	0					
ANR	8434733	Identifier	orient		8434695	1					
ANR	8434734	IfStatement	if ( cdata == 0 )		8434695	3					
ANR	8434735	Condition	cdata == 0	389:8:12736:12745	8434695	0	True				
ANR	8434736	EqualityExpression	cdata == 0		8434695	0		==			
ANR	8434737	Identifier	cdata		8434695	0					
ANR	8434738	PrimaryExpression	0		8434695	1					
ANR	8434739	CompoundStatement		6:20:181:181	8434695	1					
ANR	8434740	ReturnStatement	"return gs_setcharwidth ( penum , pgs , 0 , 0 ) ;"	390:8:12758:12798	8434695	0	True				
ANR	8434741	CallExpression	"gs_setcharwidth ( penum , pgs , 0 , 0 )"		8434695	0					
ANR	8434742	Callee	gs_setcharwidth		8434695	0					
ANR	8434743	Identifier	gs_setcharwidth		8434695	0					
ANR	8434744	ArgumentList	penum		8434695	1					
ANR	8434745	Argument	penum		8434695	0					
ANR	8434746	Identifier	penum		8434695	0					
ANR	8434747	Argument	pgs		8434695	1					
ANR	8434748	Identifier	pgs		8434695	0					
ANR	8434749	Argument	0		8434695	2					
ANR	8434750	PrimaryExpression	0		8434695	0					
ANR	8434751	Argument	0		8434695	3					
ANR	8434752	PrimaryExpression	0		8434695	0					
ANR	8434753	ElseStatement	else		8434695	0					
ANR	8434754	CompoundStatement		17:8:456:476	8434695	0					
ANR	8434755	IdentifierDeclStatement	const byte * params ;	392:8:12821:12839	8434695	0	True				
ANR	8434756	IdentifierDecl	* params		8434695	0					
ANR	8434757	IdentifierDeclType	const byte *		8434695	0					
ANR	8434758	Identifier	params		8434695	1					
ANR	8434759	IdentifierDeclStatement	const byte * bitmap_data ;	393:8:12849:12872	8434695	1	True				
ANR	8434760	IdentifierDecl	* bitmap_data		8434695	0					
ANR	8434761	IdentifierDeclType	const byte *		8434695	0					
ANR	8434762	Identifier	bitmap_data		8434695	1					
ANR	8434763	IdentifierDeclStatement	"int lsb , ascent ;"	394:8:12882:12897	8434695	2	True				
ANR	8434764	IdentifierDecl	lsb		8434695	0					
ANR	8434765	IdentifierDeclType	int		8434695	0					
ANR	8434766	Identifier	lsb		8434695	1					
ANR	8434767	IdentifierDecl	ascent		8434695	1					
ANR	8434768	IdentifierDeclType	int		8434695	0					
ANR	8434769	Identifier	ascent		8434695	1					
ANR	8434770	IdentifierDeclStatement	float delta_x ;	395:8:12907:12920	8434695	3	True				
ANR	8434771	IdentifierDecl	delta_x		8434695	0					
ANR	8434772	IdentifierDeclType	float		8434695	0					
ANR	8434773	Identifier	delta_x		8434695	1					
ANR	8434774	IdentifierDeclStatement	gs_image_t image ;	396:8:12930:12946	8434695	4	True				
ANR	8434775	IdentifierDecl	image		8434695	0					
ANR	8434776	IdentifierDeclType	gs_image_t		8434695	0					
ANR	8434777	Identifier	image		8434695	1					
ANR	8434778	IdentifierDeclStatement	gs_image_enum * ienum ;	397:8:12956:12976	8434695	5	True				
ANR	8434779	IdentifierDecl	* ienum		8434695	0					
ANR	8434780	IdentifierDeclType	gs_image_enum *		8434695	0					
ANR	8434781	Identifier	ienum		8434695	1					
ANR	8434782	IdentifierDeclStatement	int code ;	398:8:12986:12994	8434695	6	True				
ANR	8434783	IdentifierDecl	code		8434695	0					
ANR	8434784	IdentifierDeclType	int		8434695	0					
ANR	8434785	Identifier	code		8434695	1					
ANR	8434786	IdentifierDeclStatement	uint bold ;	399:8:13004:13013	8434695	7	True				
ANR	8434787	IdentifierDecl	bold		8434695	0					
ANR	8434788	IdentifierDeclType	uint		8434695	0					
ANR	8434789	Identifier	bold		8434695	1					
ANR	8434790	IdentifierDeclStatement	byte * bold_lines = 0 ;	400:8:13023:13043	8434695	8	True				
ANR	8434791	IdentifierDecl	* bold_lines = 0		8434695	0					
ANR	8434792	IdentifierDeclType	byte *		8434695	0					
ANR	8434793	Identifier	bold_lines		8434695	1					
ANR	8434794	AssignmentExpression	* bold_lines = 0		8434695	2		=			
ANR	8434795	Identifier	bold_lines		8434695	0					
ANR	8434796	PrimaryExpression	0		8434695	1					
ANR	8434797	IfStatement	if ( cdata [ 0 ] == 0 )		8434695	9					
ANR	8434798	Condition	cdata [ 0 ] == 0	402:12:13058:13070	8434695	0	True				
ANR	8434799	EqualityExpression	cdata [ 0 ] == 0		8434695	0		==			
ANR	8434800	ArrayIndexing	cdata [ 0 ]		8434695	0					
ANR	8434801	Identifier	cdata		8434695	0					
ANR	8434802	PrimaryExpression	0		8434695	1					
ANR	8434803	PrimaryExpression	0		8434695	1					
ANR	8434804	CompoundStatement		19:27:506:506	8434695	1					
ANR	8434805	ExpressionStatement	params = cdata + 2	403:12:13110:13128	8434695	0	True				
ANR	8434806	AssignmentExpression	params = cdata + 2		8434695	0		=			
ANR	8434807	Identifier	params		8434695	0					
ANR	8434808	AdditiveExpression	cdata + 2		8434695	1		+			
ANR	8434809	Identifier	cdata		8434695	0					
ANR	8434810	PrimaryExpression	2		8434695	1					
ANR	8434811	ExpressionStatement	"bitmap_data = cdata + round_up ( 10 , ARCH_ALIGN_PTR_MOD )"	404:12:13142:13196	8434695	1	True				
ANR	8434812	AssignmentExpression	"bitmap_data = cdata + round_up ( 10 , ARCH_ALIGN_PTR_MOD )"		8434695	0		=			
ANR	8434813	Identifier	bitmap_data		8434695	0					
ANR	8434814	AdditiveExpression	"cdata + round_up ( 10 , ARCH_ALIGN_PTR_MOD )"		8434695	1		+			
ANR	8434815	Identifier	cdata		8434695	0					
ANR	8434816	CallExpression	"round_up ( 10 , ARCH_ALIGN_PTR_MOD )"		8434695	1					
ANR	8434817	Callee	round_up		8434695	0					
ANR	8434818	Identifier	round_up		8434695	0					
ANR	8434819	ArgumentList	10		8434695	1					
ANR	8434820	Argument	10		8434695	0					
ANR	8434821	PrimaryExpression	10		8434695	0					
ANR	8434822	Argument	ARCH_ALIGN_PTR_MOD		8434695	1					
ANR	8434823	Identifier	ARCH_ALIGN_PTR_MOD		8434695	0					
ANR	8434824	ExpressionStatement	delta_x = 0	405:12:13210:13221	8434695	2	True				
ANR	8434825	AssignmentExpression	delta_x = 0		8434695	0		=			
ANR	8434826	Identifier	delta_x		8434695	0					
ANR	8434827	PrimaryExpression	0		8434695	1					
ANR	8434828	ExpressionStatement	lsb = pl_get_int16 ( params )	406:12:13259:13285	8434695	3	True				
ANR	8434829	AssignmentExpression	lsb = pl_get_int16 ( params )		8434695	0		=			
ANR	8434830	Identifier	lsb		8434695	0					
ANR	8434831	CallExpression	pl_get_int16 ( params )		8434695	1					
ANR	8434832	Callee	pl_get_int16		8434695	0					
ANR	8434833	Identifier	pl_get_int16		8434695	0					
ANR	8434834	ArgumentList	params		8434695	1					
ANR	8434835	Argument	params		8434695	0					
ANR	8434836	Identifier	params		8434695	0					
ANR	8434837	ExpressionStatement	ascent = pl_get_int16 ( params + 2 )	407:12:13299:13332	8434695	4	True				
ANR	8434838	AssignmentExpression	ascent = pl_get_int16 ( params + 2 )		8434695	0		=			
ANR	8434839	Identifier	ascent		8434695	0					
ANR	8434840	CallExpression	pl_get_int16 ( params + 2 )		8434695	1					
ANR	8434841	Callee	pl_get_int16		8434695	0					
ANR	8434842	Identifier	pl_get_int16		8434695	0					
ANR	8434843	ArgumentList	params + 2		8434695	1					
ANR	8434844	Argument	params + 2		8434695	0					
ANR	8434845	AdditiveExpression	params + 2		8434695	0		+			
ANR	8434846	Identifier	params		8434695	0					
ANR	8434847	PrimaryExpression	2		8434695	1					
ANR	8434848	ElseStatement	else		8434695	0					
ANR	8434849	CompoundStatement		25:15:782:782	8434695	0					
ANR	8434850	ExpressionStatement	params = cdata + 6	409:12:13396:13414	8434695	0	True				
ANR	8434851	AssignmentExpression	params = cdata + 6		8434695	0		=			
ANR	8434852	Identifier	params		8434695	0					
ANR	8434853	AdditiveExpression	cdata + 6		8434695	1		+			
ANR	8434854	Identifier	cdata		8434695	0					
ANR	8434855	PrimaryExpression	6		8434695	1					
ANR	8434856	ExpressionStatement	bitmap_data = cdata + 16	410:12:13428:13452	8434695	1	True				
ANR	8434857	AssignmentExpression	bitmap_data = cdata + 16		8434695	0		=			
ANR	8434858	Identifier	bitmap_data		8434695	0					
ANR	8434859	AdditiveExpression	cdata + 16		8434695	1		+			
ANR	8434860	Identifier	cdata		8434695	0					
ANR	8434861	PrimaryExpression	16		8434695	1					
ANR	8434862	ExpressionStatement	delta_x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : ( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) ) )	411:12:13466:13711	8434695	2	True				
ANR	8434863	AssignmentExpression	delta_x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : ( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) ) )		8434695	0		=			
ANR	8434864	Identifier	delta_x		8434695	0					
ANR	8434865	ConditionalExpression	plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : ( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )		8434695	1					
ANR	8434866	Condition	plfont -> header [ 13 ]		8434695	0					
ANR	8434867	ArrayIndexing	plfont -> header [ 13 ]		8434695	0					
ANR	8434868	PtrMemberAccess	plfont -> header		8434695	0					
ANR	8434869	Identifier	plfont		8434695	0					
ANR	8434870	Identifier	header		8434695	1					
ANR	8434871	PrimaryExpression	13		8434695	1					
ANR	8434872	MultiplicativeExpression	pl_get_int16 ( params + 8 ) * 0.25		8434695	1		*			
ANR	8434873	CallExpression	pl_get_int16 ( params + 8 )		8434695	0					
ANR	8434874	Callee	pl_get_int16		8434695	0					
ANR	8434875	Identifier	pl_get_int16		8434695	0					
ANR	8434876	ArgumentList	params + 8		8434695	1					
ANR	8434877	Argument	params + 8		8434695	0					
ANR	8434878	AdditiveExpression	params + 8		8434695	0		+			
ANR	8434879	Identifier	params		8434695	0					
ANR	8434880	PrimaryExpression	8		8434695	1					
ANR	8434881	PrimaryExpression	0.25		8434695	1					
ANR	8434882	CastExpression	( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )		8434695	2					
ANR	8434883	CastTarget	short		8434695	0					
ANR	8434884	AdditiveExpression	pl_get_int16 ( params ) + pl_get_int16 ( params + 4 )		8434695	1		+			
ANR	8434885	CallExpression	pl_get_int16 ( params )		8434695	0					
ANR	8434886	Callee	pl_get_int16		8434695	0					
ANR	8434887	Identifier	pl_get_int16		8434695	0					
ANR	8434888	ArgumentList	params		8434695	1					
ANR	8434889	Argument	params		8434695	0					
ANR	8434890	Identifier	params		8434695	0					
ANR	8434891	CallExpression	pl_get_int16 ( params + 4 )		8434695	1					
ANR	8434892	Callee	pl_get_int16		8434695	0					
ANR	8434893	Identifier	pl_get_int16		8434695	0					
ANR	8434894	ArgumentList	params + 4		8434695	1					
ANR	8434895	Argument	params + 4		8434695	0					
ANR	8434896	AdditiveExpression	params + 4		8434695	0		+			
ANR	8434897	Identifier	params		8434695	0					
ANR	8434898	PrimaryExpression	4		8434695	1					
ANR	8434899	ExpressionStatement	lsb = pl_get_int16 ( params )	415:12:13725:13751	8434695	3	True				
ANR	8434900	AssignmentExpression	lsb = pl_get_int16 ( params )		8434695	0		=			
ANR	8434901	Identifier	lsb		8434695	0					
ANR	8434902	CallExpression	pl_get_int16 ( params )		8434695	1					
ANR	8434903	Callee	pl_get_int16		8434695	0					
ANR	8434904	Identifier	pl_get_int16		8434695	0					
ANR	8434905	ArgumentList	params		8434695	1					
ANR	8434906	Argument	params		8434695	0					
ANR	8434907	Identifier	params		8434695	0					
ANR	8434908	ExpressionStatement	ascent = pl_get_int16 ( params + 2 )	416:12:13765:13798	8434695	4	True				
ANR	8434909	AssignmentExpression	ascent = pl_get_int16 ( params + 2 )		8434695	0		=			
ANR	8434910	Identifier	ascent		8434695	0					
ANR	8434911	CallExpression	pl_get_int16 ( params + 2 )		8434695	1					
ANR	8434912	Callee	pl_get_int16		8434695	0					
ANR	8434913	Identifier	pl_get_int16		8434695	0					
ANR	8434914	ArgumentList	params + 2		8434695	1					
ANR	8434915	Argument	params + 2		8434695	0					
ANR	8434916	AdditiveExpression	params + 2		8434695	0		+			
ANR	8434917	Identifier	params		8434695	0					
ANR	8434918	PrimaryExpression	2		8434695	1					
ANR	8434919	ExpressionStatement	"ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_bitmap_build_char"" )"	418:8:13818:13882	8434695	10	True				
ANR	8434920	AssignmentExpression	"ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_bitmap_build_char"" )"		8434695	0		=			
ANR	8434921	Identifier	ienum		8434695	0					
ANR	8434922	CallExpression	"gs_image_enum_alloc ( pgs -> memory , ""pl_bitmap_build_char"" )"		8434695	1					
ANR	8434923	Callee	gs_image_enum_alloc		8434695	0					
ANR	8434924	Identifier	gs_image_enum_alloc		8434695	0					
ANR	8434925	ArgumentList	pgs -> memory		8434695	1					
ANR	8434926	Argument	pgs -> memory		8434695	0					
ANR	8434927	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8434928	Identifier	pgs		8434695	0					
ANR	8434929	Identifier	memory		8434695	1					
ANR	8434930	Argument	"""pl_bitmap_build_char"""		8434695	1					
ANR	8434931	PrimaryExpression	"""pl_bitmap_build_char"""		8434695	0					
ANR	8434932	IfStatement	if ( ienum == 0 )		8434695	11					
ANR	8434933	Condition	ienum == 0	419:12:13896:13905	8434695	0	True				
ANR	8434934	EqualityExpression	ienum == 0		8434695	0		==			
ANR	8434935	Identifier	ienum		8434695	0					
ANR	8434936	PrimaryExpression	0		8434695	1					
ANR	8434937	ExpressionStatement	return_error ( gs_error_VMerror )	420:12:13920:13950	8434695	1	True				
ANR	8434938	CallExpression	return_error ( gs_error_VMerror )		8434695	0					
ANR	8434939	Callee	return_error		8434695	0					
ANR	8434940	Identifier	return_error		8434695	0					
ANR	8434941	ArgumentList	gs_error_VMerror		8434695	1					
ANR	8434942	Argument	gs_error_VMerror		8434695	0					
ANR	8434943	Identifier	gs_error_VMerror		8434695	0					
ANR	8434944	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	421:8:13960:13994	8434695	12	True				
ANR	8434945	CallExpression	"gs_image_t_init_mask ( & image , true )"		8434695	0					
ANR	8434946	Callee	gs_image_t_init_mask		8434695	0					
ANR	8434947	Identifier	gs_image_t_init_mask		8434695	0					
ANR	8434948	ArgumentList	& image		8434695	1					
ANR	8434949	Argument	& image		8434695	0					
ANR	8434950	UnaryOperationExpression	& image		8434695	0					
ANR	8434951	UnaryOperator	&		8434695	0					
ANR	8434952	Identifier	image		8434695	1					
ANR	8434953	Argument	true		8434695	1					
ANR	8434954	Identifier	true		8434695	0					
ANR	8434955	ExpressionStatement	image . Width = pl_get_uint16 ( params + 4 )	422:8:14004:14043	8434695	13	True				
ANR	8434956	AssignmentExpression	image . Width = pl_get_uint16 ( params + 4 )		8434695	0		=			
ANR	8434957	MemberAccess	image . Width		8434695	0					
ANR	8434958	Identifier	image		8434695	0					
ANR	8434959	Identifier	Width		8434695	1					
ANR	8434960	CallExpression	pl_get_uint16 ( params + 4 )		8434695	1					
ANR	8434961	Callee	pl_get_uint16		8434695	0					
ANR	8434962	Identifier	pl_get_uint16		8434695	0					
ANR	8434963	ArgumentList	params + 4		8434695	1					
ANR	8434964	Argument	params + 4		8434695	0					
ANR	8434965	AdditiveExpression	params + 4		8434695	0		+			
ANR	8434966	Identifier	params		8434695	0					
ANR	8434967	PrimaryExpression	4		8434695	1					
ANR	8434968	ExpressionStatement	image . Height = pl_get_uint16 ( params + 6 )	423:8:14053:14093	8434695	14	True				
ANR	8434969	AssignmentExpression	image . Height = pl_get_uint16 ( params + 6 )		8434695	0		=			
ANR	8434970	MemberAccess	image . Height		8434695	0					
ANR	8434971	Identifier	image		8434695	0					
ANR	8434972	Identifier	Height		8434695	1					
ANR	8434973	CallExpression	pl_get_uint16 ( params + 6 )		8434695	1					
ANR	8434974	Callee	pl_get_uint16		8434695	0					
ANR	8434975	Identifier	pl_get_uint16		8434695	0					
ANR	8434976	ArgumentList	params + 6		8434695	1					
ANR	8434977	Argument	params + 6		8434695	0					
ANR	8434978	AdditiveExpression	params + 6		8434695	0		+			
ANR	8434979	Identifier	params		8434695	0					
ANR	8434980	PrimaryExpression	6		8434695	1					
ANR	8434981	IfStatement	if ( plfont -> bold_fraction != 0 )		8434695	15					
ANR	8434982	Condition	plfont -> bold_fraction != 0	425:12:14161:14186	8434695	0	True				
ANR	8434983	EqualityExpression	plfont -> bold_fraction != 0		8434695	0		!=			
ANR	8434984	PtrMemberAccess	plfont -> bold_fraction		8434695	0					
ANR	8434985	Identifier	plfont		8434695	0					
ANR	8434986	Identifier	bold_fraction		8434695	1					
ANR	8434987	PrimaryExpression	0		8434695	1					
ANR	8434988	CompoundStatement		42:40:1622:1622	8434695	1					
ANR	8434989	ExpressionStatement	bold = ( uint ) ( 2 * image . Height * plfont -> bold_fraction + 0.5 )	426:12:14203:14265	8434695	0	True				
ANR	8434990	AssignmentExpression	bold = ( uint ) ( 2 * image . Height * plfont -> bold_fraction + 0.5 )		8434695	0		=			
ANR	8434991	Identifier	bold		8434695	0					
ANR	8434992	CastExpression	( uint ) ( 2 * image . Height * plfont -> bold_fraction + 0.5 )		8434695	1					
ANR	8434993	CastTarget	uint		8434695	0					
ANR	8434994	AdditiveExpression	2 * image . Height * plfont -> bold_fraction + 0.5		8434695	1		+			
ANR	8434995	MultiplicativeExpression	2 * image . Height * plfont -> bold_fraction		8434695	0		*			
ANR	8434996	PrimaryExpression	2		8434695	0					
ANR	8434997	MultiplicativeExpression	image . Height * plfont -> bold_fraction		8434695	1		*			
ANR	8434998	MemberAccess	image . Height		8434695	0					
ANR	8434999	Identifier	image		8434695	0					
ANR	8435000	Identifier	Height		8434695	1					
ANR	8435001	PtrMemberAccess	plfont -> bold_fraction		8434695	1					
ANR	8435002	Identifier	plfont		8434695	0					
ANR	8435003	Identifier	bold_fraction		8434695	1					
ANR	8435004	PrimaryExpression	0.5		8434695	1					
ANR	8435005	ExpressionStatement	"bold_lines = alloc_bold_lines ( pgs -> memory , image . Width , bold , ""pl_bitmap_build_char(bold_line)"" )"	427:12:14279:14417	8434695	1	True				
ANR	8435006	AssignmentExpression	"bold_lines = alloc_bold_lines ( pgs -> memory , image . Width , bold , ""pl_bitmap_build_char(bold_line)"" )"		8434695	0		=			
ANR	8435007	Identifier	bold_lines		8434695	0					
ANR	8435008	CallExpression	"alloc_bold_lines ( pgs -> memory , image . Width , bold , ""pl_bitmap_build_char(bold_line)"" )"		8434695	1					
ANR	8435009	Callee	alloc_bold_lines		8434695	0					
ANR	8435010	Identifier	alloc_bold_lines		8434695	0					
ANR	8435011	ArgumentList	pgs -> memory		8434695	1					
ANR	8435012	Argument	pgs -> memory		8434695	0					
ANR	8435013	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435014	Identifier	pgs		8434695	0					
ANR	8435015	Identifier	memory		8434695	1					
ANR	8435016	Argument	image . Width		8434695	1					
ANR	8435017	MemberAccess	image . Width		8434695	0					
ANR	8435018	Identifier	image		8434695	0					
ANR	8435019	Identifier	Width		8434695	1					
ANR	8435020	Argument	bold		8434695	2					
ANR	8435021	Identifier	bold		8434695	0					
ANR	8435022	Argument	"""pl_bitmap_build_char(bold_line)"""		8434695	3					
ANR	8435023	PrimaryExpression	"""pl_bitmap_build_char(bold_line)"""		8434695	0					
ANR	8435024	IfStatement	if ( bold_lines == 0 )		8434695	2					
ANR	8435025	Condition	bold_lines == 0	429:16:14435:14449	8434695	0	True				
ANR	8435026	EqualityExpression	bold_lines == 0		8434695	0		==			
ANR	8435027	Identifier	bold_lines		8434695	0					
ANR	8435028	PrimaryExpression	0		8434695	1					
ANR	8435029	CompoundStatement		46:33:1885:1885	8434695	1					
ANR	8435030	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	430:16:14470:14508	8434695	0	True				
ANR	8435031	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		8434695	0		=			
ANR	8435032	Identifier	code		8434695	0					
ANR	8435033	CallExpression	gs_note_error ( gs_error_VMerror )		8434695	1					
ANR	8435034	Callee	gs_note_error		8434695	0					
ANR	8435035	Identifier	gs_note_error		8434695	0					
ANR	8435036	ArgumentList	gs_error_VMerror		8434695	1					
ANR	8435037	Argument	gs_error_VMerror		8434695	0					
ANR	8435038	Identifier	gs_error_VMerror		8434695	0					
ANR	8435039	GotoStatement	goto out ;	431:16:14526:14534	8434695	1	True				
ANR	8435040	Identifier	out		8434695	0					
ANR	8435041	ExpressionStatement	image . Width += bold	433:12:14562:14581	8434695	3	True				
ANR	8435042	AssignmentExpression	image . Width += bold		8434695	0		+=			
ANR	8435043	MemberAccess	image . Width		8434695	0					
ANR	8435044	Identifier	image		8434695	0					
ANR	8435045	Identifier	Width		8434695	1					
ANR	8435046	Identifier	bold		8434695	1					
ANR	8435047	ExpressionStatement	image . Height += bold	434:12:14595:14615	8434695	4	True				
ANR	8435048	AssignmentExpression	image . Height += bold		8434695	0		+=			
ANR	8435049	MemberAccess	image . Height		8434695	0					
ANR	8435050	Identifier	image		8434695	0					
ANR	8435051	Identifier	Height		8434695	1					
ANR	8435052	Identifier	bold		8434695	1					
ANR	8435053	ExpressionStatement	ascent += bold	435:12:14629:14643	8434695	5	True				
ANR	8435054	AssignmentExpression	ascent += bold		8434695	0		+=			
ANR	8435055	Identifier	ascent		8434695	0					
ANR	8435056	Identifier	bold		8434695	1					
ANR	8435057	ElseStatement	else		8434695	0					
ANR	8435058	ExpressionStatement	bold = 0	437:12:14672:14680	8434695	0	True				
ANR	8435059	AssignmentExpression	bold = 0		8434695	0		=			
ANR	8435060	Identifier	bold		8434695	0					
ANR	8435061	PrimaryExpression	0		8434695	1					
ANR	8435062	ExpressionStatement	gs_make_identity ( & image . ImageMatrix )	439:8:14691:14727	8434695	16	True				
ANR	8435063	CallExpression	gs_make_identity ( & image . ImageMatrix )		8434695	0					
ANR	8435064	Callee	gs_make_identity		8434695	0					
ANR	8435065	Identifier	gs_make_identity		8434695	0					
ANR	8435066	ArgumentList	& image . ImageMatrix		8434695	1					
ANR	8435067	Argument	& image . ImageMatrix		8434695	0					
ANR	8435068	UnaryOperationExpression	& image . ImageMatrix		8434695	0					
ANR	8435069	UnaryOperator	&		8434695	0					
ANR	8435070	MemberAccess	image . ImageMatrix		8434695	1					
ANR	8435071	Identifier	image		8434695	0					
ANR	8435072	Identifier	ImageMatrix		8434695	1					
ANR	8435073	ExpressionStatement	"gs_matrix_rotate ( & image . ImageMatrix , orient * - 90 , & image . ImageMatrix )"	440:8:14737:14832	8434695	17	True				
ANR	8435074	CallExpression	"gs_matrix_rotate ( & image . ImageMatrix , orient * - 90 , & image . ImageMatrix )"		8434695	0					
ANR	8435075	Callee	gs_matrix_rotate		8434695	0					
ANR	8435076	Identifier	gs_matrix_rotate		8434695	0					
ANR	8435077	ArgumentList	& image . ImageMatrix		8434695	1					
ANR	8435078	Argument	& image . ImageMatrix		8434695	0					
ANR	8435079	UnaryOperationExpression	& image . ImageMatrix		8434695	0					
ANR	8435080	UnaryOperator	&		8434695	0					
ANR	8435081	MemberAccess	image . ImageMatrix		8434695	1					
ANR	8435082	Identifier	image		8434695	0					
ANR	8435083	Identifier	ImageMatrix		8434695	1					
ANR	8435084	Argument	orient * - 90		8434695	1					
ANR	8435085	MultiplicativeExpression	orient * - 90		8434695	0		*			
ANR	8435086	Identifier	orient		8434695	0					
ANR	8435087	UnaryOperationExpression	- 90		8434695	1					
ANR	8435088	UnaryOperator	-		8434695	0					
ANR	8435089	PrimaryExpression	90		8434695	1					
ANR	8435090	Argument	& image . ImageMatrix		8434695	2					
ANR	8435091	UnaryOperationExpression	& image . ImageMatrix		8434695	0					
ANR	8435092	UnaryOperator	&		8434695	0					
ANR	8435093	MemberAccess	image . ImageMatrix		8434695	1					
ANR	8435094	Identifier	image		8434695	0					
ANR	8435095	Identifier	ImageMatrix		8434695	1					
ANR	8435096	ExpressionStatement	image . ImageMatrix . tx -= lsb	442:8:14842:14869	8434695	18	True				
ANR	8435097	AssignmentExpression	image . ImageMatrix . tx -= lsb		8434695	0		-=			
ANR	8435098	MemberAccess	image . ImageMatrix . tx		8434695	0					
ANR	8435099	MemberAccess	image . ImageMatrix		8434695	0					
ANR	8435100	Identifier	image		8434695	0					
ANR	8435101	Identifier	ImageMatrix		8434695	1					
ANR	8435102	Identifier	tx		8434695	1					
ANR	8435103	Identifier	lsb		8434695	1					
ANR	8435104	ExpressionStatement	image . ImageMatrix . ty += ascent	443:8:14879:14909	8434695	19	True				
ANR	8435105	AssignmentExpression	image . ImageMatrix . ty += ascent		8434695	0		+=			
ANR	8435106	MemberAccess	image . ImageMatrix . ty		8434695	0					
ANR	8435107	MemberAccess	image . ImageMatrix		8434695	0					
ANR	8435108	Identifier	image		8434695	0					
ANR	8435109	Identifier	ImageMatrix		8434695	1					
ANR	8435110	Identifier	ty		8434695	1					
ANR	8435111	Identifier	ascent		8434695	1					
ANR	8435112	ExpressionStatement	image . adjust = true	444:8:14919:14938	8434695	20	True				
ANR	8435113	AssignmentExpression	image . adjust = true		8434695	0		=			
ANR	8435114	MemberAccess	image . adjust		8434695	0					
ANR	8435115	Identifier	image		8434695	0					
ANR	8435116	Identifier	adjust		8434695	1					
ANR	8435117	Identifier	true		8434695	1					
ANR	8435118	IfStatement	if ( bold || orient != 0 )		8434695	21					
ANR	8435119	Condition	bold || orient != 0	445:12:14952:14970	8434695	0	True				
ANR	8435120	OrExpression	bold || orient != 0		8434695	0		||			
ANR	8435121	Identifier	bold		8434695	0					
ANR	8435122	EqualityExpression	orient != 0		8434695	1		!=			
ANR	8435123	Identifier	orient		8434695	0					
ANR	8435124	PrimaryExpression	0		8434695	1					
ANR	8435125	ExpressionStatement	"code = gs_setcharwidth ( penum , pgs , delta_x , 0 )"	446:12:14985:15031	8434695	1	True				
ANR	8435126	AssignmentExpression	"code = gs_setcharwidth ( penum , pgs , delta_x , 0 )"		8434695	0		=			
ANR	8435127	Identifier	code		8434695	0					
ANR	8435128	CallExpression	"gs_setcharwidth ( penum , pgs , delta_x , 0 )"		8434695	1					
ANR	8435129	Callee	gs_setcharwidth		8434695	0					
ANR	8435130	Identifier	gs_setcharwidth		8434695	0					
ANR	8435131	ArgumentList	penum		8434695	1					
ANR	8435132	Argument	penum		8434695	0					
ANR	8435133	Identifier	penum		8434695	0					
ANR	8435134	Argument	pgs		8434695	1					
ANR	8435135	Identifier	pgs		8434695	0					
ANR	8435136	Argument	delta_x		8434695	2					
ANR	8435137	Identifier	delta_x		8434695	0					
ANR	8435138	Argument	0		8434695	3					
ANR	8435139	PrimaryExpression	0		8434695	0					
ANR	8435140	ElseStatement	else		8434695	0					
ANR	8435141	CompoundStatement		67:12:2604:2614	8434695	0					
ANR	8435142	IdentifierDeclStatement	float m [ 6 ] ;	450:12:15171:15181	8434695	0	True				
ANR	8435143	IdentifierDecl	m [ 6 ]		8434695	0					
ANR	8435144	IdentifierDeclType	float [ 6 ]		8434695	0					
ANR	8435145	Identifier	m		8434695	1					
ANR	8435146	PrimaryExpression	6		8434695	2					
ANR	8435147	ExpressionStatement	m [ 0 ] = delta_x	452:12:15196:15210	8434695	1	True				
ANR	8435148	AssignmentExpression	m [ 0 ] = delta_x		8434695	0		=			
ANR	8435149	ArrayIndexing	m [ 0 ]		8434695	0					
ANR	8435150	Identifier	m		8434695	0					
ANR	8435151	PrimaryExpression	0		8434695	1					
ANR	8435152	Identifier	delta_x		8434695	1					
ANR	8435153	ExpressionStatement	m [ 1 ] = 0	453:12:15224:15232	8434695	2	True				
ANR	8435154	AssignmentExpression	m [ 1 ] = 0		8434695	0		=			
ANR	8435155	ArrayIndexing	m [ 1 ]		8434695	0					
ANR	8435156	Identifier	m		8434695	0					
ANR	8435157	PrimaryExpression	1		8434695	1					
ANR	8435158	PrimaryExpression	0		8434695	1					
ANR	8435159	ExpressionStatement	m [ 2 ] = ( float ) lsb	454:12:15246:15263	8434695	3	True				
ANR	8435160	AssignmentExpression	m [ 2 ] = ( float ) lsb		8434695	0		=			
ANR	8435161	ArrayIndexing	m [ 2 ]		8434695	0					
ANR	8435162	Identifier	m		8434695	0					
ANR	8435163	PrimaryExpression	2		8434695	1					
ANR	8435164	CastExpression	( float ) lsb		8434695	1					
ANR	8435165	CastTarget	float		8434695	0					
ANR	8435166	Identifier	lsb		8434695	1					
ANR	8435167	ExpressionStatement	m [ 3 ] = ( float ) ( image . Height - ascent )	455:12:15277:15314	8434695	4	True				
ANR	8435168	AssignmentExpression	m [ 3 ] = ( float ) ( image . Height - ascent )		8434695	0		=			
ANR	8435169	ArrayIndexing	m [ 3 ]		8434695	0					
ANR	8435170	Identifier	m		8434695	0					
ANR	8435171	PrimaryExpression	3		8434695	1					
ANR	8435172	CastExpression	( float ) ( image . Height - ascent )		8434695	1					
ANR	8435173	CastTarget	float		8434695	0					
ANR	8435174	AdditiveExpression	image . Height - ascent		8434695	1		-			
ANR	8435175	MemberAccess	image . Height		8434695	0					
ANR	8435176	Identifier	image		8434695	0					
ANR	8435177	Identifier	Height		8434695	1					
ANR	8435178	Identifier	ascent		8434695	1					
ANR	8435179	ExpressionStatement	m [ 4 ] = image . Width + m [ 2 ]	456:12:15328:15353	8434695	5	True				
ANR	8435180	AssignmentExpression	m [ 4 ] = image . Width + m [ 2 ]		8434695	0		=			
ANR	8435181	ArrayIndexing	m [ 4 ]		8434695	0					
ANR	8435182	Identifier	m		8434695	0					
ANR	8435183	PrimaryExpression	4		8434695	1					
ANR	8435184	AdditiveExpression	image . Width + m [ 2 ]		8434695	1		+			
ANR	8435185	MemberAccess	image . Width		8434695	0					
ANR	8435186	Identifier	image		8434695	0					
ANR	8435187	Identifier	Width		8434695	1					
ANR	8435188	ArrayIndexing	m [ 2 ]		8434695	1					
ANR	8435189	Identifier	m		8434695	0					
ANR	8435190	PrimaryExpression	2		8434695	1					
ANR	8435191	ExpressionStatement	m [ 5 ] = ( float ) ( - ascent )	457:12:15367:15390	8434695	6	True				
ANR	8435192	AssignmentExpression	m [ 5 ] = ( float ) ( - ascent )		8434695	0		=			
ANR	8435193	ArrayIndexing	m [ 5 ]		8434695	0					
ANR	8435194	Identifier	m		8434695	0					
ANR	8435195	PrimaryExpression	5		8434695	1					
ANR	8435196	CastExpression	( float ) ( - ascent )		8434695	1					
ANR	8435197	CastTarget	float		8434695	0					
ANR	8435198	UnaryOperationExpression	- ascent		8434695	1					
ANR	8435199	UnaryOperator	-		8434695	0					
ANR	8435200	Identifier	ascent		8434695	1					
ANR	8435201	ExpressionStatement	"code = gs_setcachedevice ( penum , pgs , m )"	458:12:15404:15443	8434695	7	True				
ANR	8435202	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , m )"		8434695	0		=			
ANR	8435203	Identifier	code		8434695	0					
ANR	8435204	CallExpression	"gs_setcachedevice ( penum , pgs , m )"		8434695	1					
ANR	8435205	Callee	gs_setcachedevice		8434695	0					
ANR	8435206	Identifier	gs_setcachedevice		8434695	0					
ANR	8435207	ArgumentList	penum		8434695	1					
ANR	8435208	Argument	penum		8434695	0					
ANR	8435209	Identifier	penum		8434695	0					
ANR	8435210	Argument	pgs		8434695	1					
ANR	8435211	Identifier	pgs		8434695	0					
ANR	8435212	Argument	m		8434695	2					
ANR	8435213	Identifier	m		8434695	0					
ANR	8435214	IfStatement	if ( code < 0 )		8434695	22					
ANR	8435215	Condition	code < 0	460:12:15467:15474	8434695	0	True				
ANR	8435216	RelationalExpression	code < 0		8434695	0		<			
ANR	8435217	Identifier	code		8434695	0					
ANR	8435218	PrimaryExpression	0		8434695	1					
ANR	8435219	ReturnStatement	return code ;	461:12:15489:15500	8434695	1	True				
ANR	8435220	Identifier	code		8434695	0					
ANR	8435221	IfStatement	if ( gs_debug_c ( 'B' ) )		8434695	23					
ANR	8435222	Condition	gs_debug_c ( 'B' )	463:12:15527:15541	8434695	0	True				
ANR	8435223	CallExpression	gs_debug_c ( 'B' )		8434695	0					
ANR	8435224	Callee	gs_debug_c		8434695	0					
ANR	8435225	Identifier	gs_debug_c		8434695	0					
ANR	8435226	ArgumentList	'B'		8434695	1					
ANR	8435227	Argument	'B'		8434695	0					
ANR	8435228	PrimaryExpression	'B'		8434695	0					
ANR	8435229	CompoundStatement		82:12:3010:3062	8434695	1					
ANR	8435230	IdentifierDeclStatement	int i ;	464:12:15558:15563	8434695	0	True				
ANR	8435231	IdentifierDecl	i		8434695	0					
ANR	8435232	IdentifierDeclType	int		8434695	0					
ANR	8435233	Identifier	i		8434695	1					
ANR	8435234	IdentifierDeclStatement	"int pixels = round_up ( image . Width , 8 ) * image . Height ;"	465:12:15577:15629	8434695	1	True				
ANR	8435235	IdentifierDecl	"pixels = round_up ( image . Width , 8 ) * image . Height"		8434695	0					
ANR	8435236	IdentifierDeclType	int		8434695	0					
ANR	8435237	Identifier	pixels		8434695	1					
ANR	8435238	AssignmentExpression	"pixels = round_up ( image . Width , 8 ) * image . Height"		8434695	2		=			
ANR	8435239	Identifier	pixels		8434695	0					
ANR	8435240	MultiplicativeExpression	"round_up ( image . Width , 8 ) * image . Height"		8434695	1		*			
ANR	8435241	CallExpression	"round_up ( image . Width , 8 )"		8434695	0					
ANR	8435242	Callee	round_up		8434695	0					
ANR	8435243	Identifier	round_up		8434695	0					
ANR	8435244	ArgumentList	image . Width		8434695	1					
ANR	8435245	Argument	image . Width		8434695	0					
ANR	8435246	MemberAccess	image . Width		8434695	0					
ANR	8435247	Identifier	image		8434695	0					
ANR	8435248	Identifier	Width		8434695	1					
ANR	8435249	Argument	8		8434695	1					
ANR	8435250	PrimaryExpression	8		8434695	0					
ANR	8435251	MemberAccess	image . Height		8434695	1					
ANR	8435252	Identifier	image		8434695	0					
ANR	8435253	Identifier	Height		8434695	1					
ANR	8435254	ExpressionStatement	"dmprintf7 ( pgs -> memory , ""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"" , chr , image . Width , image . Height , lsb , ascent , pl_get_int16 ( params + 2 ) , pl_get_int16 ( params ) )"	467:12:15644:15925	8434695	2	True				
ANR	8435255	CallExpression	"dmprintf7 ( pgs -> memory , ""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"" , chr , image . Width , image . Height , lsb , ascent , pl_get_int16 ( params + 2 ) , pl_get_int16 ( params ) )"		8434695	0					
ANR	8435256	Callee	dmprintf7		8434695	0					
ANR	8435257	Identifier	dmprintf7		8434695	0					
ANR	8435258	ArgumentList	pgs -> memory		8434695	1					
ANR	8435259	Argument	pgs -> memory		8434695	0					
ANR	8435260	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435261	Identifier	pgs		8434695	0					
ANR	8435262	Identifier	memory		8434695	1					
ANR	8435263	Argument	"""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"""		8434695	1					
ANR	8435264	PrimaryExpression	"""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"""		8434695	0					
ANR	8435265	Argument	chr		8434695	2					
ANR	8435266	Identifier	chr		8434695	0					
ANR	8435267	Argument	image . Width		8434695	3					
ANR	8435268	MemberAccess	image . Width		8434695	0					
ANR	8435269	Identifier	image		8434695	0					
ANR	8435270	Identifier	Width		8434695	1					
ANR	8435271	Argument	image . Height		8434695	4					
ANR	8435272	MemberAccess	image . Height		8434695	0					
ANR	8435273	Identifier	image		8434695	0					
ANR	8435274	Identifier	Height		8434695	1					
ANR	8435275	Argument	lsb		8434695	5					
ANR	8435276	Identifier	lsb		8434695	0					
ANR	8435277	Argument	ascent		8434695	6					
ANR	8435278	Identifier	ascent		8434695	0					
ANR	8435279	Argument	pl_get_int16 ( params + 2 )		8434695	7					
ANR	8435280	CallExpression	pl_get_int16 ( params + 2 )		8434695	0					
ANR	8435281	Callee	pl_get_int16		8434695	0					
ANR	8435282	Identifier	pl_get_int16		8434695	0					
ANR	8435283	ArgumentList	params + 2		8434695	1					
ANR	8435284	Argument	params + 2		8434695	0					
ANR	8435285	AdditiveExpression	params + 2		8434695	0		+			
ANR	8435286	Identifier	params		8434695	0					
ANR	8435287	PrimaryExpression	2		8434695	1					
ANR	8435288	Argument	pl_get_int16 ( params )		8434695	8					
ANR	8435289	CallExpression	pl_get_int16 ( params )		8434695	0					
ANR	8435290	Callee	pl_get_int16		8434695	0					
ANR	8435291	Identifier	pl_get_int16		8434695	0					
ANR	8435292	ArgumentList	params		8434695	1					
ANR	8435293	Argument	params		8434695	0					
ANR	8435294	Identifier	params		8434695	0					
ANR	8435295	ForStatement	for ( i = 0 ; i < pixels ; i ++ )		8434695	3					
ANR	8435296	ForInit	i = 0 ;	471:17:15944:15949	8434695	0	True				
ANR	8435297	AssignmentExpression	i = 0		8434695	0		=			
ANR	8435298	Identifier	i		8434695	0					
ANR	8435299	PrimaryExpression	0		8434695	1					
ANR	8435300	Condition	i < pixels	471:24:15951:15960	8434695	1	True				
ANR	8435301	RelationalExpression	i < pixels		8434695	0		<			
ANR	8435302	Identifier	i		8434695	0					
ANR	8435303	Identifier	pixels		8434695	1					
ANR	8435304	PostIncDecOperationExpression	i ++	471:36:15963:15965	8434695	2	True				
ANR	8435305	Identifier	i		8434695	0					
ANR	8435306	IncDec	++		8434695	1					
ANR	8435307	CompoundStatement		88:41:3401:3401	8434695	3					
ANR	8435308	IfStatement	"if ( i % round_up ( image . Width , 8 ) == 0 )"		8434695	0					
ANR	8435309	Condition	"i % round_up ( image . Width , 8 ) == 0"	472:20:15990:16022	8434695	0	True				
ANR	8435310	EqualityExpression	"i % round_up ( image . Width , 8 ) == 0"		8434695	0		==			
ANR	8435311	MultiplicativeExpression	"i % round_up ( image . Width , 8 )"		8434695	0		%			
ANR	8435312	Identifier	i		8434695	0					
ANR	8435313	CallExpression	"round_up ( image . Width , 8 )"		8434695	1					
ANR	8435314	Callee	round_up		8434695	0					
ANR	8435315	Identifier	round_up		8434695	0					
ANR	8435316	ArgumentList	image . Width		8434695	1					
ANR	8435317	Argument	image . Width		8434695	0					
ANR	8435318	MemberAccess	image . Width		8434695	0					
ANR	8435319	Identifier	image		8434695	0					
ANR	8435320	Identifier	Width		8434695	1					
ANR	8435321	Argument	8		8434695	1					
ANR	8435322	PrimaryExpression	8		8434695	0					
ANR	8435323	PrimaryExpression	0		8434695	1					
ANR	8435324	ExpressionStatement	"dmprintf ( pgs -> memory , ""\\n"" )"	473:20:16045:16072	8434695	1	True				
ANR	8435325	CallExpression	"dmprintf ( pgs -> memory , ""\\n"" )"		8434695	0					
ANR	8435326	Callee	dmprintf		8434695	0					
ANR	8435327	Identifier	dmprintf		8434695	0					
ANR	8435328	ArgumentList	pgs -> memory		8434695	1					
ANR	8435329	Argument	pgs -> memory		8434695	0					
ANR	8435330	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435331	Identifier	pgs		8434695	0					
ANR	8435332	Identifier	memory		8434695	1					
ANR	8435333	Argument	"""\\n"""		8434695	1					
ANR	8435334	PrimaryExpression	"""\\n"""		8434695	0					
ANR	8435335	ExpressionStatement	"dmprintf1 ( pgs -> memory , ""%d"" , bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0 )"	474:16:16090:16192	8434695	1	True				
ANR	8435336	CallExpression	"dmprintf1 ( pgs -> memory , ""%d"" , bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0 )"		8434695	0					
ANR	8435337	Callee	dmprintf1		8434695	0					
ANR	8435338	Identifier	dmprintf1		8434695	0					
ANR	8435339	ArgumentList	pgs -> memory		8434695	1					
ANR	8435340	Argument	pgs -> memory		8434695	0					
ANR	8435341	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435342	Identifier	pgs		8434695	0					
ANR	8435343	Identifier	memory		8434695	1					
ANR	8435344	Argument	"""%d"""		8434695	1					
ANR	8435345	PrimaryExpression	"""%d"""		8434695	0					
ANR	8435346	Argument	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0		8434695	2					
ANR	8435347	ConditionalExpression	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0		8434695	0					
ANR	8435348	Condition	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) )		8434695	0					
ANR	8435349	BitAndExpression	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) )		8434695	0		&			
ANR	8435350	ArrayIndexing	bitmap_data [ i >> 3 ]		8434695	0					
ANR	8435351	Identifier	bitmap_data		8434695	0					
ANR	8435352	ShiftExpression	i >> 3		8434695	1		>>			
ANR	8435353	Identifier	i		8434695	0					
ANR	8435354	PrimaryExpression	3		8434695	1					
ANR	8435355	ShiftExpression	128 >> ( i & 7 )		8434695	1		>>			
ANR	8435356	PrimaryExpression	128		8434695	0					
ANR	8435357	BitAndExpression	i & 7		8434695	1		&			
ANR	8435358	Identifier	i		8434695	0					
ANR	8435359	PrimaryExpression	7		8434695	1					
ANR	8435360	PrimaryExpression	1		8434695	1					
ANR	8435361	PrimaryExpression	0		8434695	2					
ANR	8435362	ExpressionStatement	"dmprintf ( pgs -> memory , ""\\n"" )"	477:12:16220:16247	8434695	4	True				
ANR	8435363	CallExpression	"dmprintf ( pgs -> memory , ""\\n"" )"		8434695	0					
ANR	8435364	Callee	dmprintf		8434695	0					
ANR	8435365	Identifier	dmprintf		8434695	0					
ANR	8435366	ArgumentList	pgs -> memory		8434695	1					
ANR	8435367	Argument	pgs -> memory		8434695	0					
ANR	8435368	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435369	Identifier	pgs		8434695	0					
ANR	8435370	Identifier	memory		8434695	1					
ANR	8435371	Argument	"""\\n"""		8434695	1					
ANR	8435372	PrimaryExpression	"""\\n"""		8434695	0					
ANR	8435373	ExpressionStatement	"code = pl_image_bitmap_char ( ienum , & image , bitmap_data , ( image . Width - bold + 7 ) >> 3 , bold , bold_lines , pgs )"	480:8:16274:16455	8434695	24	True				
ANR	8435374	AssignmentExpression	"code = pl_image_bitmap_char ( ienum , & image , bitmap_data , ( image . Width - bold + 7 ) >> 3 , bold , bold_lines , pgs )"		8434695	0		=			
ANR	8435375	Identifier	code		8434695	0					
ANR	8435376	CallExpression	"pl_image_bitmap_char ( ienum , & image , bitmap_data , ( image . Width - bold + 7 ) >> 3 , bold , bold_lines , pgs )"		8434695	1					
ANR	8435377	Callee	pl_image_bitmap_char		8434695	0					
ANR	8435378	Identifier	pl_image_bitmap_char		8434695	0					
ANR	8435379	ArgumentList	ienum		8434695	1					
ANR	8435380	Argument	ienum		8434695	0					
ANR	8435381	Identifier	ienum		8434695	0					
ANR	8435382	Argument	& image		8434695	1					
ANR	8435383	UnaryOperationExpression	& image		8434695	0					
ANR	8435384	UnaryOperator	&		8434695	0					
ANR	8435385	Identifier	image		8434695	1					
ANR	8435386	Argument	bitmap_data		8434695	2					
ANR	8435387	Identifier	bitmap_data		8434695	0					
ANR	8435388	Argument	( image . Width - bold + 7 ) >> 3		8434695	3					
ANR	8435389	ShiftExpression	( image . Width - bold + 7 ) >> 3		8434695	0		>>			
ANR	8435390	AdditiveExpression	image . Width - bold + 7		8434695	0		-			
ANR	8435391	MemberAccess	image . Width		8434695	0					
ANR	8435392	Identifier	image		8434695	0					
ANR	8435393	Identifier	Width		8434695	1					
ANR	8435394	AdditiveExpression	bold + 7		8434695	1		+			
ANR	8435395	Identifier	bold		8434695	0					
ANR	8435396	PrimaryExpression	7		8434695	1					
ANR	8435397	PrimaryExpression	3		8434695	1					
ANR	8435398	Argument	bold		8434695	4					
ANR	8435399	Identifier	bold		8434695	0					
ANR	8435400	Argument	bold_lines		8434695	5					
ANR	8435401	Identifier	bold_lines		8434695	0					
ANR	8435402	Argument	pgs		8434695	6					
ANR	8435403	Identifier	pgs		8434695	0					
ANR	8435404	Label	out :	483:6:16463:16466	8434695	25	True				
ANR	8435405	Identifier	out		8434695	0					
ANR	8435406	ExpressionStatement	"gs_free_object ( pgs -> memory , bold_lines , ""pl_bitmap_build_char(bold_lines)"" )"	483:10:16467:16565	8434695	26	True				
ANR	8435407	CallExpression	"gs_free_object ( pgs -> memory , bold_lines , ""pl_bitmap_build_char(bold_lines)"" )"		8434695	0					
ANR	8435408	Callee	gs_free_object		8434695	0					
ANR	8435409	Identifier	gs_free_object		8434695	0					
ANR	8435410	ArgumentList	pgs -> memory		8434695	1					
ANR	8435411	Argument	pgs -> memory		8434695	0					
ANR	8435412	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435413	Identifier	pgs		8434695	0					
ANR	8435414	Identifier	memory		8434695	1					
ANR	8435415	Argument	bold_lines		8434695	1					
ANR	8435416	Identifier	bold_lines		8434695	0					
ANR	8435417	Argument	"""pl_bitmap_build_char(bold_lines)"""		8434695	2					
ANR	8435418	PrimaryExpression	"""pl_bitmap_build_char(bold_lines)"""		8434695	0					
ANR	8435419	ExpressionStatement	"gs_free_object ( pgs -> memory , ienum , ""pl_bitmap_build_char"" )"	485:8:16575:16633	8434695	27	True				
ANR	8435420	CallExpression	"gs_free_object ( pgs -> memory , ienum , ""pl_bitmap_build_char"" )"		8434695	0					
ANR	8435421	Callee	gs_free_object		8434695	0					
ANR	8435422	Identifier	gs_free_object		8434695	0					
ANR	8435423	ArgumentList	pgs -> memory		8434695	1					
ANR	8435424	Argument	pgs -> memory		8434695	0					
ANR	8435425	PtrMemberAccess	pgs -> memory		8434695	0					
ANR	8435426	Identifier	pgs		8434695	0					
ANR	8435427	Identifier	memory		8434695	1					
ANR	8435428	Argument	ienum		8434695	1					
ANR	8435429	Identifier	ienum		8434695	0					
ANR	8435430	Argument	"""pl_bitmap_build_char"""		8434695	2					
ANR	8435431	PrimaryExpression	"""pl_bitmap_build_char"""		8434695	0					
ANR	8435432	ReturnStatement	return ( code < 0 ? code : 0 ) ;	486:8:16643:16671	8434695	28	True				
ANR	8435433	ConditionalExpression	code < 0 ? code : 0		8434695	0					
ANR	8435434	Condition	code < 0		8434695	0					
ANR	8435435	RelationalExpression	code < 0		8434695	0		<			
ANR	8435436	Identifier	code		8434695	0					
ANR	8435437	PrimaryExpression	0		8434695	1					
ANR	8435438	Identifier	code		8434695	1					
ANR	8435439	PrimaryExpression	0		8434695	2					
ANR	8435440	ReturnType	static int		8434695	1					
ANR	8435441	Identifier	pl_bitmap_build_char		8434695	2					
ANR	8435442	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph"		8434695	3					
ANR	8435443	Parameter	gs_show_enum * penum	382:21:12460:12479	8434695	0	True				
ANR	8435444	ParameterType	gs_show_enum *		8434695	0					
ANR	8435445	Identifier	penum		8434695	1					
ANR	8435446	Parameter	gs_gstate * pgs	382:43:12482:12496	8434695	1	True				
ANR	8435447	ParameterType	gs_gstate *		8434695	0					
ANR	8435448	Identifier	pgs		8434695	1					
ANR	8435449	Parameter	gs_font * pfont	382:60:12499:12513	8434695	2	True				
ANR	8435450	ParameterType	gs_font *		8434695	0					
ANR	8435451	Identifier	pfont		8434695	1					
ANR	8435452	Parameter	gs_char chr	383:21:12537:12547	8434695	3	True				
ANR	8435453	ParameterType	gs_char		8434695	0					
ANR	8435454	Identifier	chr		8434695	1					
ANR	8435455	Parameter	gs_glyph glyph	383:34:12550:12563	8434695	4	True				
ANR	8435456	ParameterType	gs_glyph		8434695	0					
ANR	8435457	Identifier	glyph		8434695	1					
ANR	8435458	CFGEntryNode	ENTRY		8434695		True				
ANR	8435459	CFGExitNode	EXIT		8434695		True				
ANR	8435460	Symbol	image . ImageMatrix		8434695						
ANR	8435461	Symbol	* pgs		8434695						
ANR	8435462	Symbol	plfont -> header		8434695						
ANR	8435463	Symbol	plfont		8434695						
ANR	8435464	Symbol	round_up		8434695						
ANR	8435465	Symbol	plfont -> orient		8434695						
ANR	8435466	Symbol	* cdata		8434695						
ANR	8435467	Symbol	pl_get_int16		8434695						
ANR	8435468	Symbol	* plfont -> header		8434695						
ANR	8435469	Symbol	pl_image_bitmap_char		8434695						
ANR	8435470	Symbol	gs_debug_c		8434695						
ANR	8435471	Symbol	ienum		8434695						
ANR	8435472	Symbol	image		8434695						
ANR	8435473	Symbol	& image		8434695						
ANR	8435474	Symbol	orient		8434695						
ANR	8435475	Symbol	* * plfont		8434695						
ANR	8435476	Symbol	penum		8434695						
ANR	8435477	Symbol	* pl_font_lookup_glyph		8434695						
ANR	8435478	Symbol	bold		8434695						
ANR	8435479	Symbol	chr		8434695						
ANR	8435480	Symbol	params		8434695						
ANR	8435481	Symbol	cdata		8434695						
ANR	8435482	Symbol	pfont -> client_data		8434695						
ANR	8435483	Symbol	alloc_bold_lines		8434695						
ANR	8435484	Symbol	bold_lines		8434695						
ANR	8435485	Symbol	pixels		8434695						
ANR	8435486	Symbol	true		8434695						
ANR	8435487	Symbol	lsb		8434695						
ANR	8435488	Symbol	& image . ImageMatrix		8434695						
ANR	8435489	Symbol	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8434695						
ANR	8435490	Symbol	image . Width		8434695						
ANR	8435491	Symbol	delta_x		8434695						
ANR	8435492	Symbol	* bitmap_data		8434695						
ANR	8435493	Symbol	code		8434695						
ANR	8435494	Symbol	gs_image_enum_alloc		8434695						
ANR	8435495	Symbol	pl_font_lookup_glyph		8434695						
ANR	8435496	Symbol	image . ImageMatrix . ty		8434695						
ANR	8435497	Symbol	gs_setcharwidth		8434695						
ANR	8435498	Symbol	image . ImageMatrix . tx		8434695						
ANR	8435499	Symbol	ascent		8434695						
ANR	8435500	Symbol	pgs		8434695						
ANR	8435501	Symbol	pgs -> memory		8434695						
ANR	8435502	Symbol	pl_get_uint16		8434695						
ANR	8435503	Symbol	pfont		8434695						
ANR	8435504	Symbol	bitmap_data		8434695						
ANR	8435505	Symbol	image . Height		8434695						
ANR	8435506	Symbol	i		8434695						
ANR	8435507	Symbol	m		8434695						
ANR	8435508	Symbol	ARCH_ALIGN_PTR_MOD		8434695						
ANR	8435509	Symbol	gs_error_VMerror		8434695						
ANR	8435510	Symbol	glyph		8434695						
ANR	8435511	Symbol	* pfont		8434695						
ANR	8435512	Symbol	gs_note_error		8434695						
ANR	8435513	Symbol	* i		8434695						
ANR	8435514	Symbol	plfont -> bold_fraction		8434695						
ANR	8435515	Symbol	image . adjust		8434695						
ANR	8435516	Symbol	* m		8434695						
ANR	8435517	Symbol	* plfont		8434695						
ANR	8435518	Symbol	gs_setcachedevice		8434695						
ANR	8435519	Function	pl_tt_lookup_char	495:0:16932:17489							
ANR	8435520	FunctionDef	"pl_tt_lookup_char (const pl_font_t * plfont , gs_glyph glyph)"		8435519	0					
ANR	8435521	CompoundStatement		497:0:17013:17489	8435519	0					
ANR	8435522	IdentifierDeclStatement	uint size = plfont -> char_glyphs . size ;	498:4:17019:17055	8435519	0	True				
ANR	8435523	IdentifierDecl	size = plfont -> char_glyphs . size		8435519	0					
ANR	8435524	IdentifierDeclType	uint		8435519	0					
ANR	8435525	Identifier	size		8435519	1					
ANR	8435526	AssignmentExpression	size = plfont -> char_glyphs . size		8435519	2		=			
ANR	8435527	Identifier	size		8435519	0					
ANR	8435528	MemberAccess	plfont -> char_glyphs . size		8435519	1					
ANR	8435529	PtrMemberAccess	plfont -> char_glyphs		8435519	0					
ANR	8435530	Identifier	plfont		8435519	0					
ANR	8435531	Identifier	char_glyphs		8435519	1					
ANR	8435532	Identifier	size		8435519	1					
ANR	8435533	IdentifierDeclStatement	uint skip = plfont -> char_glyphs . skip ;	499:4:17061:17097	8435519	1	True				
ANR	8435534	IdentifierDecl	skip = plfont -> char_glyphs . skip		8435519	0					
ANR	8435535	IdentifierDeclType	uint		8435519	0					
ANR	8435536	Identifier	skip		8435519	1					
ANR	8435537	AssignmentExpression	skip = plfont -> char_glyphs . skip		8435519	2		=			
ANR	8435538	Identifier	skip		8435519	0					
ANR	8435539	MemberAccess	plfont -> char_glyphs . skip		8435519	1					
ANR	8435540	PtrMemberAccess	plfont -> char_glyphs		8435519	0					
ANR	8435541	Identifier	plfont		8435519	0					
ANR	8435542	Identifier	char_glyphs		8435519	1					
ANR	8435543	Identifier	skip		8435519	1					
ANR	8435544	IdentifierDeclStatement	uint index = glyph % size ;	500:4:17103:17128	8435519	2	True				
ANR	8435545	IdentifierDecl	index = glyph % size		8435519	0					
ANR	8435546	IdentifierDeclType	uint		8435519	0					
ANR	8435547	Identifier	index		8435519	1					
ANR	8435548	AssignmentExpression	index = glyph % size		8435519	2		=			
ANR	8435549	Identifier	index		8435519	0					
ANR	8435550	MultiplicativeExpression	glyph % size		8435519	1		%			
ANR	8435551	Identifier	glyph		8435519	0					
ANR	8435552	Identifier	size		8435519	1					
ANR	8435553	IdentifierDeclStatement	pl_tt_char_glyph_t * ptcg ;	501:4:17134:17158	8435519	3	True				
ANR	8435554	IdentifierDecl	* ptcg		8435519	0					
ANR	8435555	IdentifierDeclType	pl_tt_char_glyph_t *		8435519	0					
ANR	8435556	Identifier	ptcg		8435519	1					
ANR	8435557	IdentifierDeclStatement	pl_tt_char_glyph_t * result = 0 ;	502:4:17164:17194	8435519	4	True				
ANR	8435558	IdentifierDecl	* result = 0		8435519	0					
ANR	8435559	IdentifierDeclType	pl_tt_char_glyph_t *		8435519	0					
ANR	8435560	Identifier	result		8435519	1					
ANR	8435561	AssignmentExpression	* result = 0		8435519	2		=			
ANR	8435562	Identifier	result		8435519	0					
ANR	8435563	PrimaryExpression	0		8435519	1					
ANR	8435564	WhileStatement	while ( ( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char ? ptcg -> chr != glyph : ptcg -> glyph )		8435519	5					
ANR	8435565	Condition	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char ? ptcg -> chr != glyph : ptcg -> glyph	504:11:17208:17314	8435519	0	True				
ANR	8435566	ConditionalExpression	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char ? ptcg -> chr != glyph : ptcg -> glyph		8435519	0					
ANR	8435567	Condition	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char		8435519	0					
ANR	8435568	EqualityExpression	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char		8435519	0		!=			
ANR	8435569	PtrMemberAccess	( ptcg = plfont -> char_glyphs . table + index ) -> chr		8435519	0					
ANR	8435570	AssignmentExpression	ptcg = plfont -> char_glyphs . table + index		8435519	0		=			
ANR	8435571	Identifier	ptcg		8435519	0					
ANR	8435572	AdditiveExpression	plfont -> char_glyphs . table + index		8435519	1		+			
ANR	8435573	MemberAccess	plfont -> char_glyphs . table		8435519	0					
ANR	8435574	PtrMemberAccess	plfont -> char_glyphs		8435519	0					
ANR	8435575	Identifier	plfont		8435519	0					
ANR	8435576	Identifier	char_glyphs		8435519	1					
ANR	8435577	Identifier	table		8435519	1					
ANR	8435578	Identifier	index		8435519	1					
ANR	8435579	Identifier	chr		8435519	1					
ANR	8435580	Identifier	gs_no_char		8435519	1					
ANR	8435581	EqualityExpression	ptcg -> chr != glyph		8435519	1		!=			
ANR	8435582	PtrMemberAccess	ptcg -> chr		8435519	0					
ANR	8435583	Identifier	ptcg		8435519	0					
ANR	8435584	Identifier	chr		8435519	1					
ANR	8435585	Identifier	glyph		8435519	1					
ANR	8435586	PtrMemberAccess	ptcg -> glyph		8435519	2					
ANR	8435587	Identifier	ptcg		8435519	0					
ANR	8435588	Identifier	glyph		8435519	1					
ANR	8435589	CompoundStatement		9:45:303:303	8435519	1					
ANR	8435590	IfStatement	if ( ptcg -> chr == gs_no_char )		8435519	0					
ANR	8435591	Condition	ptcg -> chr == gs_no_char	506:12:17331:17353	8435519	0	True				
ANR	8435592	EqualityExpression	ptcg -> chr == gs_no_char		8435519	0		==			
ANR	8435593	PtrMemberAccess	ptcg -> chr		8435519	0					
ANR	8435594	Identifier	ptcg		8435519	0					
ANR	8435595	Identifier	chr		8435519	1					
ANR	8435596	Identifier	gs_no_char		8435519	1					
ANR	8435597	ExpressionStatement	result = ptcg	507:12:17368:17381	8435519	1	True				
ANR	8435598	AssignmentExpression	result = ptcg		8435519	0		=			
ANR	8435599	Identifier	result		8435519	0					
ANR	8435600	Identifier	ptcg		8435519	1					
ANR	8435601	ExpressionStatement	index = ( index >= skip ? index : index + size ) - skip	508:8:17391:17444	8435519	1	True				
ANR	8435602	AssignmentExpression	index = ( index >= skip ? index : index + size ) - skip		8435519	0		=			
ANR	8435603	Identifier	index		8435519	0					
ANR	8435604	AdditiveExpression	( index >= skip ? index : index + size ) - skip		8435519	1		-			
ANR	8435605	ConditionalExpression	index >= skip ? index : index + size		8435519	0					
ANR	8435606	Condition	index >= skip		8435519	0					
ANR	8435607	RelationalExpression	index >= skip		8435519	0		>=			
ANR	8435608	Identifier	index		8435519	0					
ANR	8435609	Identifier	skip		8435519	1					
ANR	8435610	Identifier	index		8435519	1					
ANR	8435611	AdditiveExpression	index + size		8435519	2		+			
ANR	8435612	Identifier	index		8435519	0					
ANR	8435613	Identifier	size		8435519	1					
ANR	8435614	Identifier	skip		8435519	1					
ANR	8435615	ReturnStatement	return ( result ? result : ptcg ) ;	510:4:17456:17487	8435519	6	True				
ANR	8435616	ConditionalExpression	result ? result : ptcg		8435519	0					
ANR	8435617	Condition	result		8435519	0					
ANR	8435618	Identifier	result		8435519	0					
ANR	8435619	Identifier	result		8435519	1					
ANR	8435620	Identifier	ptcg		8435519	2					
ANR	8435621	ReturnType	pl_tt_char_glyph_t *		8435519	1					
ANR	8435622	Identifier	pl_tt_lookup_char		8435519	2					
ANR	8435623	ParameterList	"const pl_font_t * plfont , gs_glyph glyph"		8435519	3					
ANR	8435624	Parameter	const pl_font_t * plfont	496:18:16971:16994	8435519	0	True				
ANR	8435625	ParameterType	const pl_font_t *		8435519	0					
ANR	8435626	Identifier	plfont		8435519	1					
ANR	8435627	Parameter	gs_glyph glyph	496:44:16997:17010	8435519	1	True				
ANR	8435628	ParameterType	gs_glyph		8435519	0					
ANR	8435629	Identifier	glyph		8435519	1					
ANR	8435630	CFGEntryNode	ENTRY		8435519		True				
ANR	8435631	CFGExitNode	EXIT		8435519		True				
ANR	8435632	Symbol	( ptcg = plfont -> char_glyphs . table + index ) -> chr		8435519						
ANR	8435633	Symbol	ptcg -> chr		8435519						
ANR	8435634	Symbol	plfont -> char_glyphs		8435519						
ANR	8435635	Symbol	index		8435519						
ANR	8435636	Symbol	plfont -> char_glyphs . size		8435519						
ANR	8435637	Symbol	skip		8435519						
ANR	8435638	Symbol	plfont		8435519						
ANR	8435639	Symbol	plfont -> char_glyphs . skip		8435519						
ANR	8435640	Symbol	result		8435519						
ANR	8435641	Symbol	glyph		8435519						
ANR	8435642	Symbol	size		8435519						
ANR	8435643	Symbol	* plfont		8435519						
ANR	8435644	Symbol	ptcg -> glyph		8435519						
ANR	8435645	Symbol	gs_no_char		8435519						
ANR	8435646	Symbol	ptcg		8435519						
ANR	8435647	Symbol	* ptcg		8435519						
ANR	8435648	Symbol	plfont -> char_glyphs . table		8435519						
ANR	8435649	Function	pl_tt_string_proc	514:0:17533:17913							
ANR	8435650	FunctionDef	"pl_tt_string_proc (gs_font_type42 * pfont , ulong offset , uint length , const byte * * pdata)"		8435649	0					
ANR	8435651	CompoundStatement		517:0:17652:17913	8435649	0					
ANR	8435652	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	518:4:17658:17696	8435649	0	True				
ANR	8435653	IdentifierDecl	* plfont = pfont -> client_data		8435649	0					
ANR	8435654	IdentifierDeclType	pl_font_t *		8435649	0					
ANR	8435655	Identifier	plfont		8435649	1					
ANR	8435656	AssignmentExpression	* plfont = pfont -> client_data		8435649	2		=			
ANR	8435657	Identifier	plfont		8435649	0					
ANR	8435658	PtrMemberAccess	pfont -> client_data		8435649	1					
ANR	8435659	Identifier	pfont		8435649	0					
ANR	8435660	Identifier	client_data		8435649	1					
ANR	8435661	ExpressionStatement	* pdata = plfont -> header + plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset	520:4:17703:17796	8435649	1	True				
ANR	8435662	AssignmentExpression	* pdata = plfont -> header + plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset		8435649	0		=			
ANR	8435663	UnaryOperationExpression	* pdata		8435649	0					
ANR	8435664	UnaryOperator	*		8435649	0					
ANR	8435665	Identifier	pdata		8435649	1					
ANR	8435666	AdditiveExpression	plfont -> header + plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset		8435649	1		+			
ANR	8435667	PtrMemberAccess	plfont -> header		8435649	0					
ANR	8435668	Identifier	plfont		8435649	0					
ANR	8435669	Identifier	header		8435649	1					
ANR	8435670	AdditiveExpression	plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset		8435649	1		+			
ANR	8435671	MemberAccess	plfont -> offsets . GT		8435649	0					
ANR	8435672	PtrMemberAccess	plfont -> offsets		8435649	0					
ANR	8435673	Identifier	plfont		8435649	0					
ANR	8435674	Identifier	offsets		8435649	1					
ANR	8435675	Identifier	GT		8435649	1					
ANR	8435676	AdditiveExpression	( plfont -> large_sizes ? 6 : 4 ) + offset		8435649	1		+			
ANR	8435677	ConditionalExpression	plfont -> large_sizes ? 6 : 4		8435649	0					
ANR	8435678	Condition	plfont -> large_sizes		8435649	0					
ANR	8435679	PtrMemberAccess	plfont -> large_sizes		8435649	0					
ANR	8435680	Identifier	plfont		8435649	0					
ANR	8435681	Identifier	large_sizes		8435649	1					
ANR	8435682	PrimaryExpression	6		8435649	1					
ANR	8435683	PrimaryExpression	4		8435649	2					
ANR	8435684	Identifier	offset		8435649	1					
ANR	8435685	IfStatement	if ( * pdata > plfont -> header + plfont -> header_size )		8435649	2					
ANR	8435686	Condition	* pdata > plfont -> header + plfont -> header_size	523:8:17807:17851	8435649	0	True				
ANR	8435687	RelationalExpression	* pdata > plfont -> header + plfont -> header_size		8435649	0		>			
ANR	8435688	UnaryOperationExpression	* pdata		8435649	0					
ANR	8435689	UnaryOperator	*		8435649	0					
ANR	8435690	Identifier	pdata		8435649	1					
ANR	8435691	AdditiveExpression	plfont -> header + plfont -> header_size		8435649	1		+			
ANR	8435692	PtrMemberAccess	plfont -> header		8435649	0					
ANR	8435693	Identifier	plfont		8435649	0					
ANR	8435694	Identifier	header		8435649	1					
ANR	8435695	PtrMemberAccess	plfont -> header_size		8435649	1					
ANR	8435696	Identifier	plfont		8435649	0					
ANR	8435697	Identifier	header_size		8435649	1					
ANR	8435698	ExpressionStatement	return_error ( gs_error_invalidfont )	524:8:17862:17896	8435649	1	True				
ANR	8435699	CallExpression	return_error ( gs_error_invalidfont )		8435649	0					
ANR	8435700	Callee	return_error		8435649	0					
ANR	8435701	Identifier	return_error		8435649	0					
ANR	8435702	ArgumentList	gs_error_invalidfont		8435649	1					
ANR	8435703	Argument	gs_error_invalidfont		8435649	0					
ANR	8435704	Identifier	gs_error_invalidfont		8435649	0					
ANR	8435705	ReturnStatement	return 0 ;	526:4:17903:17911	8435649	3	True				
ANR	8435706	PrimaryExpression	0		8435649	0					
ANR	8435707	ReturnType	static int		8435649	1					
ANR	8435708	Identifier	pl_tt_string_proc		8435649	2					
ANR	8435709	ParameterList	"gs_font_type42 * pfont , ulong offset , uint length , const byte * * pdata"		8435649	3					
ANR	8435710	Parameter	gs_font_type42 * pfont	515:18:17562:17583	8435649	0	True				
ANR	8435711	ParameterType	gs_font_type42 *		8435649	0					
ANR	8435712	Identifier	pfont		8435649	1					
ANR	8435713	Parameter	ulong offset	515:42:17586:17597	8435649	1	True				
ANR	8435714	ParameterType	ulong		8435649	0					
ANR	8435715	Identifier	offset		8435649	1					
ANR	8435716	Parameter	uint length	515:56:17600:17610	8435649	2	True				
ANR	8435717	ParameterType	uint		8435649	0					
ANR	8435718	Identifier	length		8435649	1					
ANR	8435719	Parameter	const byte * * pdata	516:18:17631:17649	8435649	3	True				
ANR	8435720	ParameterType	const byte * *		8435649	0					
ANR	8435721	Identifier	pdata		8435649	1					
ANR	8435722	CFGEntryNode	ENTRY		8435649		True				
ANR	8435723	CFGExitNode	EXIT		8435649		True				
ANR	8435724	Symbol	pdata		8435649						
ANR	8435725	Symbol	plfont -> header_size		8435649						
ANR	8435726	Symbol	offset		8435649						
ANR	8435727	Symbol	pfont		8435649						
ANR	8435728	Symbol	plfont -> header		8435649						
ANR	8435729	Symbol	length		8435649						
ANR	8435730	Symbol	plfont		8435649						
ANR	8435731	Symbol	plfont -> large_sizes		8435649						
ANR	8435732	Symbol	plfont -> offsets		8435649						
ANR	8435733	Symbol	plfont -> offsets . GT		8435649						
ANR	8435734	Symbol	pfont -> client_data		8435649						
ANR	8435735	Symbol	* pfont		8435649						
ANR	8435736	Symbol	* plfont		8435649						
ANR	8435737	Symbol	gs_error_invalidfont		8435649						
ANR	8435738	Symbol	* pdata		8435649						
ANR	8435739	Function	pl_font_vertical_glyph	531:0:18017:18539							
ANR	8435740	FunctionDef	"pl_font_vertical_glyph (gs_glyph glyph , const pl_font_t * plfont)"		8435739	0					
ANR	8435741	CompoundStatement		533:0:18091:18539	8435739	0					
ANR	8435742	IdentifierDeclStatement	long VT = plfont -> offsets . VT ;	534:4:18097:18125	8435739	0	True				
ANR	8435743	IdentifierDecl	VT = plfont -> offsets . VT		8435739	0					
ANR	8435744	IdentifierDeclType	long		8435739	0					
ANR	8435745	Identifier	VT		8435739	1					
ANR	8435746	AssignmentExpression	VT = plfont -> offsets . VT		8435739	2		=			
ANR	8435747	Identifier	VT		8435739	0					
ANR	8435748	MemberAccess	plfont -> offsets . VT		8435739	1					
ANR	8435749	PtrMemberAccess	plfont -> offsets		8435739	0					
ANR	8435750	Identifier	plfont		8435739	0					
ANR	8435751	Identifier	offsets		8435739	1					
ANR	8435752	Identifier	VT		8435739	1					
ANR	8435753	IdentifierDeclStatement	const byte * vtseg ;	535:4:18131:18148	8435739	1	True				
ANR	8435754	IdentifierDecl	* vtseg		8435739	0					
ANR	8435755	IdentifierDeclType	const byte *		8435739	0					
ANR	8435756	Identifier	vtseg		8435739	1					
ANR	8435757	IdentifierDeclStatement	"uint i , len ;"	536:4:18154:18165	8435739	2	True				
ANR	8435758	IdentifierDecl	i		8435739	0					
ANR	8435759	IdentifierDeclType	uint		8435739	0					
ANR	8435760	Identifier	i		8435739	1					
ANR	8435761	IdentifierDecl	len		8435739	1					
ANR	8435762	IdentifierDeclType	uint		8435739	0					
ANR	8435763	Identifier	len		8435739	1					
ANR	8435764	IfStatement	if ( VT < 0 )		8435739	3					
ANR	8435765	Condition	VT < 0	538:8:18176:18181	8435739	0	True				
ANR	8435766	RelationalExpression	VT < 0		8435739	0		<			
ANR	8435767	Identifier	VT		8435739	0					
ANR	8435768	PrimaryExpression	0		8435739	1					
ANR	8435769	ReturnStatement	return GS_NO_GLYPH ;	539:8:18192:18210	8435739	1	True				
ANR	8435770	Identifier	GS_NO_GLYPH		8435739	0					
ANR	8435771	ExpressionStatement	vtseg = plfont -> header + VT	540:4:18216:18243	8435739	4	True				
ANR	8435772	AssignmentExpression	vtseg = plfont -> header + VT		8435739	0		=			
ANR	8435773	Identifier	vtseg		8435739	0					
ANR	8435774	AdditiveExpression	plfont -> header + VT		8435739	1		+			
ANR	8435775	PtrMemberAccess	plfont -> header		8435739	0					
ANR	8435776	Identifier	plfont		8435739	0					
ANR	8435777	Identifier	header		8435739	1					
ANR	8435778	Identifier	VT		8435739	1					
ANR	8435779	IfStatement	if ( plfont -> large_sizes )		8435739	5					
ANR	8435780	Condition	plfont -> large_sizes	541:8:18253:18271	8435739	0	True				
ANR	8435781	PtrMemberAccess	plfont -> large_sizes		8435739	0					
ANR	8435782	Identifier	plfont		8435739	0					
ANR	8435783	Identifier	large_sizes		8435739	1					
ANR	8435784	ExpressionStatement	"len = pl_get_uint32 ( vtseg + 2 ) , i = 6"	542:8:18282:18319	8435739	1	True				
ANR	8435785	Expression	"len = pl_get_uint32 ( vtseg + 2 ) , i = 6"		8435739	0					
ANR	8435786	AssignmentExpression	len = pl_get_uint32 ( vtseg + 2 )		8435739	0		=			
ANR	8435787	Identifier	len		8435739	0					
ANR	8435788	CallExpression	pl_get_uint32 ( vtseg + 2 )		8435739	1					
ANR	8435789	Callee	pl_get_uint32		8435739	0					
ANR	8435790	Identifier	pl_get_uint32		8435739	0					
ANR	8435791	ArgumentList	vtseg + 2		8435739	1					
ANR	8435792	Argument	vtseg + 2		8435739	0					
ANR	8435793	AdditiveExpression	vtseg + 2		8435739	0		+			
ANR	8435794	Identifier	vtseg		8435739	0					
ANR	8435795	PrimaryExpression	2		8435739	1					
ANR	8435796	AssignmentExpression	i = 6		8435739	1		=			
ANR	8435797	Identifier	i		8435739	0					
ANR	8435798	PrimaryExpression	6		8435739	1					
ANR	8435799	ElseStatement	else		8435739	0					
ANR	8435800	ExpressionStatement	"len = pl_get_uint16 ( vtseg + 2 ) , i = 4"	544:8:18338:18375	8435739	0	True				
ANR	8435801	Expression	"len = pl_get_uint16 ( vtseg + 2 ) , i = 4"		8435739	0					
ANR	8435802	AssignmentExpression	len = pl_get_uint16 ( vtseg + 2 )		8435739	0		=			
ANR	8435803	Identifier	len		8435739	0					
ANR	8435804	CallExpression	pl_get_uint16 ( vtseg + 2 )		8435739	1					
ANR	8435805	Callee	pl_get_uint16		8435739	0					
ANR	8435806	Identifier	pl_get_uint16		8435739	0					
ANR	8435807	ArgumentList	vtseg + 2		8435739	1					
ANR	8435808	Argument	vtseg + 2		8435739	0					
ANR	8435809	AdditiveExpression	vtseg + 2		8435739	0		+			
ANR	8435810	Identifier	vtseg		8435739	0					
ANR	8435811	PrimaryExpression	2		8435739	1					
ANR	8435812	AssignmentExpression	i = 4		8435739	1		=			
ANR	8435813	Identifier	i		8435739	0					
ANR	8435814	PrimaryExpression	4		8435739	1					
ANR	8435815	ExpressionStatement	len += i	545:4:18381:18389	8435739	6	True				
ANR	8435816	AssignmentExpression	len += i		8435739	0		+=			
ANR	8435817	Identifier	len		8435739	0					
ANR	8435818	Identifier	i		8435739	1					
ANR	8435819	ForStatement	for ( ; i < len ; i += 4 )		8435739	7					
ANR	8435820	Condition	i < len	546:11:18402:18408	8435739	0	True				
ANR	8435821	RelationalExpression	i < len		8435739	0		<			
ANR	8435822	Identifier	i		8435739	0					
ANR	8435823	Identifier	len		8435739	1					
ANR	8435824	AssignmentExpression	i += 4	546:20:18411:18416	8435739	1	True	+=			
ANR	8435825	Identifier	i		8435739	0					
ANR	8435826	PrimaryExpression	4		8435739	1					
ANR	8435827	IfStatement	if ( glyph == pl_get_uint16 ( vtseg + i ) )		8435739	2					
ANR	8435828	Condition	glyph == pl_get_uint16 ( vtseg + i )	547:12:18431:18463	8435739	0	True				
ANR	8435829	EqualityExpression	glyph == pl_get_uint16 ( vtseg + i )		8435739	0		==			
ANR	8435830	Identifier	glyph		8435739	0					
ANR	8435831	CallExpression	pl_get_uint16 ( vtseg + i )		8435739	1					
ANR	8435832	Callee	pl_get_uint16		8435739	0					
ANR	8435833	Identifier	pl_get_uint16		8435739	0					
ANR	8435834	ArgumentList	vtseg + i		8435739	1					
ANR	8435835	Argument	vtseg + i		8435739	0					
ANR	8435836	AdditiveExpression	vtseg + i		8435739	0		+			
ANR	8435837	Identifier	vtseg		8435739	0					
ANR	8435838	Identifier	i		8435739	1					
ANR	8435839	ReturnStatement	return pl_get_uint16 ( vtseg + i + 2 ) ;	548:12:18478:18513	8435739	1	True				
ANR	8435840	CallExpression	pl_get_uint16 ( vtseg + i + 2 )		8435739	0					
ANR	8435841	Callee	pl_get_uint16		8435739	0					
ANR	8435842	Identifier	pl_get_uint16		8435739	0					
ANR	8435843	ArgumentList	vtseg + i + 2		8435739	1					
ANR	8435844	Argument	vtseg + i + 2		8435739	0					
ANR	8435845	AdditiveExpression	vtseg + i + 2		8435739	0		+			
ANR	8435846	Identifier	vtseg		8435739	0					
ANR	8435847	AdditiveExpression	i + 2		8435739	1		+			
ANR	8435848	Identifier	i		8435739	0					
ANR	8435849	PrimaryExpression	2		8435739	1					
ANR	8435850	ReturnStatement	return GS_NO_GLYPH ;	549:4:18519:18537	8435739	8	True				
ANR	8435851	Identifier	GS_NO_GLYPH		8435739	0					
ANR	8435852	ReturnType	gs_glyph		8435739	1					
ANR	8435853	Identifier	pl_font_vertical_glyph		8435739	2					
ANR	8435854	ParameterList	"gs_glyph glyph , const pl_font_t * plfont"		8435739	3					
ANR	8435855	Parameter	gs_glyph glyph	532:23:18049:18062	8435739	0	True				
ANR	8435856	ParameterType	gs_glyph		8435739	0					
ANR	8435857	Identifier	glyph		8435739	1					
ANR	8435858	Parameter	const pl_font_t * plfont	532:39:18065:18088	8435739	1	True				
ANR	8435859	ParameterType	const pl_font_t *		8435739	0					
ANR	8435860	Identifier	plfont		8435739	1					
ANR	8435861	CFGEntryNode	ENTRY		8435739		True				
ANR	8435862	CFGExitNode	EXIT		8435739		True				
ANR	8435863	Symbol	vtseg		8435739						
ANR	8435864	Symbol	pl_get_uint16		8435739						
ANR	8435865	Symbol	plfont -> header		8435739						
ANR	8435866	Symbol	i		8435739						
ANR	8435867	Symbol	plfont		8435739						
ANR	8435868	Symbol	plfont -> large_sizes		8435739						
ANR	8435869	Symbol	plfont -> offsets		8435739						
ANR	8435870	Symbol	pl_get_uint32		8435739						
ANR	8435871	Symbol	glyph		8435739						
ANR	8435872	Symbol	GS_NO_GLYPH		8435739						
ANR	8435873	Symbol	len		8435739						
ANR	8435874	Symbol	* plfont		8435739						
ANR	8435875	Symbol	plfont -> offsets . VT		8435739						
ANR	8435876	Symbol	VT		8435739						
ANR	8435877	Function	pl_tt_f1c2_get_metrics	553:0:18607:20061							
ANR	8435878	FunctionDef	"pl_tt_f1c2_get_metrics (gs_font_type42 * pfont , uint glyph_index , int wmode , float * sbw)"		8435877	0					
ANR	8435879	CompoundStatement		556:0:18717:20061	8435877	0					
ANR	8435880	IdentifierDeclStatement	int code = gs_error_undefined ;	557:4:18723:18752	8435877	0	True				
ANR	8435881	IdentifierDecl	code = gs_error_undefined		8435877	0					
ANR	8435882	IdentifierDeclType	int		8435877	0					
ANR	8435883	Identifier	code		8435877	1					
ANR	8435884	AssignmentExpression	code = gs_error_undefined		8435877	2		=			
ANR	8435885	Identifier	gs_error_undefined		8435877	0					
ANR	8435886	Identifier	gs_error_undefined		8435877	1					
ANR	8435887	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	558:4:18758:18796	8435877	1	True				
ANR	8435888	IdentifierDecl	* plfont = pfont -> client_data		8435877	0					
ANR	8435889	IdentifierDeclType	pl_font_t *		8435877	0					
ANR	8435890	Identifier	plfont		8435877	1					
ANR	8435891	AssignmentExpression	* plfont = pfont -> client_data		8435877	2		=			
ANR	8435892	Identifier	plfont		8435877	0					
ANR	8435893	PtrMemberAccess	pfont -> client_data		8435877	1					
ANR	8435894	Identifier	pfont		8435877	0					
ANR	8435895	Identifier	client_data		8435877	1					
ANR	8435896	IdentifierDeclStatement	const pl_font_glyph_t * pfg = 0 ;	559:4:18802:18832	8435877	2	True				
ANR	8435897	IdentifierDecl	* pfg = 0		8435877	0					
ANR	8435898	IdentifierDeclType	const pl_font_glyph_t *		8435877	0					
ANR	8435899	Identifier	pfg		8435877	1					
ANR	8435900	AssignmentExpression	* pfg = 0		8435877	2		=			
ANR	8435901	Identifier	pfg		8435877	0					
ANR	8435902	PrimaryExpression	0		8435877	1					
ANR	8435903	IdentifierDeclStatement	const byte * cdata = 0 ;	560:4:18838:18859	8435877	3	True				
ANR	8435904	IdentifierDecl	* cdata = 0		8435877	0					
ANR	8435905	IdentifierDeclType	const byte *		8435877	0					
ANR	8435906	Identifier	cdata		8435877	1					
ANR	8435907	AssignmentExpression	* cdata = 0		8435877	2		=			
ANR	8435908	Identifier	cdata		8435877	0					
ANR	8435909	PrimaryExpression	0		8435877	1					
ANR	8435910	IfStatement	if ( plfont -> glyphs . table != 0 )		8435877	4					
ANR	8435911	Condition	plfont -> glyphs . table != 0	562:8:18870:18894	8435877	0	True				
ANR	8435912	EqualityExpression	plfont -> glyphs . table != 0		8435877	0		!=			
ANR	8435913	MemberAccess	plfont -> glyphs . table		8435877	0					
ANR	8435914	PtrMemberAccess	plfont -> glyphs		8435877	0					
ANR	8435915	Identifier	plfont		8435877	0					
ANR	8435916	Identifier	glyphs		8435877	1					
ANR	8435917	Identifier	table		8435877	1					
ANR	8435918	PrimaryExpression	0		8435877	1					
ANR	8435919	CompoundStatement		7:35:179:179	8435877	1					
ANR	8435920	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , glyph_index )"	566:8:19065:19112	8435877	0	True				
ANR	8435921	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , glyph_index )"		8435877	0		=			
ANR	8435922	Identifier	pfg		8435877	0					
ANR	8435923	CallExpression	"pl_font_lookup_glyph ( plfont , glyph_index )"		8435877	1					
ANR	8435924	Callee	pl_font_lookup_glyph		8435877	0					
ANR	8435925	Identifier	pl_font_lookup_glyph		8435877	0					
ANR	8435926	ArgumentList	plfont		8435877	1					
ANR	8435927	Argument	plfont		8435877	0					
ANR	8435928	Identifier	plfont		8435877	0					
ANR	8435929	Argument	glyph_index		8435877	1					
ANR	8435930	Identifier	glyph_index		8435877	0					
ANR	8435931	ExpressionStatement	cdata = pfg -> data	567:8:19122:19139	8435877	1	True				
ANR	8435932	AssignmentExpression	cdata = pfg -> data		8435877	0		=			
ANR	8435933	Identifier	cdata		8435877	0					
ANR	8435934	PtrMemberAccess	pfg -> data		8435877	1					
ANR	8435935	Identifier	pfg		8435877	0					
ANR	8435936	Identifier	data		8435877	1					
ANR	8435937	IfStatement	if ( cdata && ( cdata [ 1 ] == 1 || cdata [ 1 ] == 2 ) )		8435877	2					
ANR	8435938	Condition	cdata && ( cdata [ 1 ] == 1 || cdata [ 1 ] == 2 )	569:12:19154:19194	8435877	0	True				
ANR	8435939	AndExpression	cdata && ( cdata [ 1 ] == 1 || cdata [ 1 ] == 2 )		8435877	0		&&			
ANR	8435940	Identifier	cdata		8435877	0					
ANR	8435941	OrExpression	cdata [ 1 ] == 1 || cdata [ 1 ] == 2		8435877	1		||			
ANR	8435942	EqualityExpression	cdata [ 1 ] == 1		8435877	0		==			
ANR	8435943	ArrayIndexing	cdata [ 1 ]		8435877	0					
ANR	8435944	Identifier	cdata		8435877	0					
ANR	8435945	PrimaryExpression	1		8435877	1					
ANR	8435946	PrimaryExpression	1		8435877	1					
ANR	8435947	EqualityExpression	cdata [ 1 ] == 2		8435877	1		==			
ANR	8435948	ArrayIndexing	cdata [ 1 ]		8435877	0					
ANR	8435949	Identifier	cdata		8435877	0					
ANR	8435950	PrimaryExpression	1		8435877	1					
ANR	8435951	PrimaryExpression	2		8435877	1					
ANR	8435952	CompoundStatement		17:12:575:582	8435877	1					
ANR	8435953	IdentifierDeclStatement	double factor = 1.0 / pfont -> data . unitsPerEm ;	570:12:19211:19255	8435877	0	True				
ANR	8435954	IdentifierDecl	factor = 1.0 / pfont -> data . unitsPerEm		8435877	0					
ANR	8435955	IdentifierDeclType	double		8435877	0					
ANR	8435956	Identifier	factor		8435877	1					
ANR	8435957	AssignmentExpression	factor = 1.0 / pfont -> data . unitsPerEm		8435877	2		=			
ANR	8435958	Identifier	factor		8435877	0					
ANR	8435959	MultiplicativeExpression	1.0 / pfont -> data . unitsPerEm		8435877	1		/			
ANR	8435960	PrimaryExpression	1.0		8435877	0					
ANR	8435961	MemberAccess	pfont -> data . unitsPerEm		8435877	1					
ANR	8435962	PtrMemberAccess	pfont -> data		8435877	0					
ANR	8435963	Identifier	pfont		8435877	0					
ANR	8435964	Identifier	data		8435877	1					
ANR	8435965	Identifier	unitsPerEm		8435877	1					
ANR	8435966	IdentifierDeclStatement	uint width ;	571:12:19269:19279	8435877	1	True				
ANR	8435967	IdentifierDecl	width		8435877	0					
ANR	8435968	IdentifierDeclType	uint		8435877	0					
ANR	8435969	Identifier	width		8435877	1					
ANR	8435970	IdentifierDeclStatement	int lsb ;	572:12:19293:19300	8435877	2	True				
ANR	8435971	IdentifierDecl	lsb		8435877	0					
ANR	8435972	IdentifierDeclType	int		8435877	0					
ANR	8435973	Identifier	lsb		8435877	1					
ANR	8435974	ExpressionStatement	lsb = pl_get_int16 ( cdata + 4 )	574:12:19315:19344	8435877	3	True				
ANR	8435975	AssignmentExpression	lsb = pl_get_int16 ( cdata + 4 )		8435877	0		=			
ANR	8435976	Identifier	lsb		8435877	0					
ANR	8435977	CallExpression	pl_get_int16 ( cdata + 4 )		8435877	1					
ANR	8435978	Callee	pl_get_int16		8435877	0					
ANR	8435979	Identifier	pl_get_int16		8435877	0					
ANR	8435980	ArgumentList	cdata + 4		8435877	1					
ANR	8435981	Argument	cdata + 4		8435877	0					
ANR	8435982	AdditiveExpression	cdata + 4		8435877	0		+			
ANR	8435983	Identifier	cdata		8435877	0					
ANR	8435984	PrimaryExpression	4		8435877	1					
ANR	8435985	ExpressionStatement	width = pl_get_int16 ( cdata + 6 )	575:12:19358:19389	8435877	4	True				
ANR	8435986	AssignmentExpression	width = pl_get_int16 ( cdata + 6 )		8435877	0		=			
ANR	8435987	Identifier	width		8435877	0					
ANR	8435988	CallExpression	pl_get_int16 ( cdata + 6 )		8435877	1					
ANR	8435989	Callee	pl_get_int16		8435877	0					
ANR	8435990	Identifier	pl_get_int16		8435877	0					
ANR	8435991	ArgumentList	cdata + 6		8435877	1					
ANR	8435992	Argument	cdata + 6		8435877	0					
ANR	8435993	AdditiveExpression	cdata + 6		8435877	0		+			
ANR	8435994	Identifier	cdata		8435877	0					
ANR	8435995	PrimaryExpression	6		8435877	1					
ANR	8435996	IfStatement	if ( wmode )		8435877	5					
ANR	8435997	Condition	wmode	579:16:19479:19483	8435877	0	True				
ANR	8435998	Identifier	wmode		8435877	0					
ANR	8435999	CompoundStatement		24:23:768:768	8435877	1					
ANR	8436000	ExpressionStatement	factor = - factor	583:16:19673:19689	8435877	0	True				
ANR	8436001	AssignmentExpression	factor = - factor		8435877	0		=			
ANR	8436002	Identifier	factor		8435877	0					
ANR	8436003	UnaryOperationExpression	- factor		8435877	1					
ANR	8436004	UnaryOperator	-		8435877	0					
ANR	8436005	Identifier	factor		8435877	1					
ANR	8436006	ExpressionStatement	"sbw [ 0 ] = 0 , sbw [ 1 ] = lsb * factor"	584:16:19750:19783	8435877	1	True				
ANR	8436007	Expression	"sbw [ 0 ] = 0 , sbw [ 1 ] = lsb * factor"		8435877	0					
ANR	8436008	AssignmentExpression	sbw [ 0 ] = 0		8435877	0		=			
ANR	8436009	ArrayIndexing	sbw [ 0 ]		8435877	0					
ANR	8436010	Identifier	sbw		8435877	0					
ANR	8436011	PrimaryExpression	0		8435877	1					
ANR	8436012	PrimaryExpression	0		8435877	1					
ANR	8436013	AssignmentExpression	sbw [ 1 ] = lsb * factor		8435877	1		=			
ANR	8436014	ArrayIndexing	sbw [ 1 ]		8435877	0					
ANR	8436015	Identifier	sbw		8435877	0					
ANR	8436016	PrimaryExpression	1		8435877	1					
ANR	8436017	MultiplicativeExpression	lsb * factor		8435877	1		*			
ANR	8436018	Identifier	lsb		8435877	0					
ANR	8436019	Identifier	factor		8435877	1					
ANR	8436020	ExpressionStatement	"sbw [ 2 ] = 0 , sbw [ 3 ] = width * factor"	585:16:19801:19836	8435877	2	True				
ANR	8436021	Expression	"sbw [ 2 ] = 0 , sbw [ 3 ] = width * factor"		8435877	0					
ANR	8436022	AssignmentExpression	sbw [ 2 ] = 0		8435877	0		=			
ANR	8436023	ArrayIndexing	sbw [ 2 ]		8435877	0					
ANR	8436024	Identifier	sbw		8435877	0					
ANR	8436025	PrimaryExpression	2		8435877	1					
ANR	8436026	PrimaryExpression	0		8435877	1					
ANR	8436027	AssignmentExpression	sbw [ 3 ] = width * factor		8435877	1		=			
ANR	8436028	ArrayIndexing	sbw [ 3 ]		8435877	0					
ANR	8436029	Identifier	sbw		8435877	0					
ANR	8436030	PrimaryExpression	3		8435877	1					
ANR	8436031	MultiplicativeExpression	width * factor		8435877	1		*			
ANR	8436032	Identifier	width		8435877	0					
ANR	8436033	Identifier	factor		8435877	1					
ANR	8436034	ElseStatement	else		8435877	0					
ANR	8436035	CompoundStatement		31:19:1139:1139	8435877	0					
ANR	8436036	ExpressionStatement	"sbw [ 0 ] = lsb * factor , sbw [ 1 ] = 0"	587:16:19875:19908	8435877	0	True				
ANR	8436037	Expression	"sbw [ 0 ] = lsb * factor , sbw [ 1 ] = 0"		8435877	0					
ANR	8436038	AssignmentExpression	sbw [ 0 ] = lsb * factor		8435877	0		=			
ANR	8436039	ArrayIndexing	sbw [ 0 ]		8435877	0					
ANR	8436040	Identifier	sbw		8435877	0					
ANR	8436041	PrimaryExpression	0		8435877	1					
ANR	8436042	MultiplicativeExpression	lsb * factor		8435877	1		*			
ANR	8436043	Identifier	lsb		8435877	0					
ANR	8436044	Identifier	factor		8435877	1					
ANR	8436045	AssignmentExpression	sbw [ 1 ] = 0		8435877	1		=			
ANR	8436046	ArrayIndexing	sbw [ 1 ]		8435877	0					
ANR	8436047	Identifier	sbw		8435877	0					
ANR	8436048	PrimaryExpression	1		8435877	1					
ANR	8436049	PrimaryExpression	0		8435877	1					
ANR	8436050	ExpressionStatement	"sbw [ 2 ] = width * factor , sbw [ 3 ] = 0"	588:16:19926:19961	8435877	1	True				
ANR	8436051	Expression	"sbw [ 2 ] = width * factor , sbw [ 3 ] = 0"		8435877	0					
ANR	8436052	AssignmentExpression	sbw [ 2 ] = width * factor		8435877	0		=			
ANR	8436053	ArrayIndexing	sbw [ 2 ]		8435877	0					
ANR	8436054	Identifier	sbw		8435877	0					
ANR	8436055	PrimaryExpression	2		8435877	1					
ANR	8436056	MultiplicativeExpression	width * factor		8435877	1		*			
ANR	8436057	Identifier	width		8435877	0					
ANR	8436058	Identifier	factor		8435877	1					
ANR	8436059	AssignmentExpression	sbw [ 3 ] = 0		8435877	1		=			
ANR	8436060	ArrayIndexing	sbw [ 3 ]		8435877	0					
ANR	8436061	Identifier	sbw		8435877	0					
ANR	8436062	PrimaryExpression	3		8435877	1					
ANR	8436063	PrimaryExpression	0		8435877	1					
ANR	8436064	ExpressionStatement	code = 0	590:12:19989:19997	8435877	6	True				
ANR	8436065	AssignmentExpression	code = 0		8435877	0		=			
ANR	8436066	Identifier	code		8435877	0					
ANR	8436067	PrimaryExpression	0		8435877	1					
ANR	8436068	ReturnStatement	return code ;	593:4:20048:20059	8435877	5	True				
ANR	8436069	Identifier	code		8435877	0					
ANR	8436070	ReturnType	int		8435877	1					
ANR	8436071	Identifier	pl_tt_f1c2_get_metrics		8435877	2					
ANR	8436072	ParameterList	"gs_font_type42 * pfont , uint glyph_index , int wmode , float * sbw"		8435877	3					
ANR	8436073	Parameter	gs_font_type42 * pfont	554:23:18634:18655	8435877	0	True				
ANR	8436074	ParameterType	gs_font_type42 *		8435877	0					
ANR	8436075	Identifier	pfont		8435877	1					
ANR	8436076	Parameter	uint glyph_index	554:47:18658:18673	8435877	1	True				
ANR	8436077	ParameterType	uint		8435877	0					
ANR	8436078	Identifier	glyph_index		8435877	1					
ANR	8436079	Parameter	int wmode	555:18:18694:18702	8435877	2	True				
ANR	8436080	ParameterType	int		8435877	0					
ANR	8436081	Identifier	wmode		8435877	1					
ANR	8436082	Parameter	float * sbw	555:29:18705:18714	8435877	3	True				
ANR	8436083	ParameterType	float *		8435877	0					
ANR	8436084	Identifier	sbw		8435877	1					
ANR	8436085	CFGEntryNode	ENTRY		8435877		True				
ANR	8436086	CFGExitNode	EXIT		8435877		True				
ANR	8436087	Symbol	code		8435877						
ANR	8436088	Symbol	glyph_index		8435877						
ANR	8436089	Symbol	pl_font_lookup_glyph		8435877						
ANR	8436090	Symbol	gs_error_undefined		8435877						
ANR	8436091	Symbol	sbw		8435877						
ANR	8436092	Symbol	plfont		8435877						
ANR	8436093	Symbol	* cdata		8435877						
ANR	8436094	Symbol	pl_get_int16		8435877						
ANR	8436095	Symbol	wmode		8435877						
ANR	8436096	Symbol	* pfg		8435877						
ANR	8436097	Symbol	factor		8435877						
ANR	8436098	Symbol	pfont -> data . unitsPerEm		8435877						
ANR	8436099	Symbol	plfont -> glyphs . table		8435877						
ANR	8436100	Symbol	pfont		8435877						
ANR	8436101	Symbol	pfont -> data		8435877						
ANR	8436102	Symbol	cdata		8435877						
ANR	8436103	Symbol	pfont -> client_data		8435877						
ANR	8436104	Symbol	pfg		8435877						
ANR	8436105	Symbol	* pfont		8435877						
ANR	8436106	Symbol	* sbw		8435877						
ANR	8436107	Symbol	plfont -> glyphs		8435877						
ANR	8436108	Symbol	* plfont		8435877						
ANR	8436109	Symbol	width		8435877						
ANR	8436110	Symbol	lsb		8435877						
ANR	8436111	Symbol	pfg -> data		8435877						
ANR	8436112	Function	pl_tt_get_metrics	599:0:20165:21612							
ANR	8436113	FunctionDef	"pl_tt_get_metrics (gs_font_type42 * pfont , uint glyph_index , gs_type42_metrics_options_t options , float * sbw)"		8436112	0					
ANR	8436114	CompoundStatement		602:0:20303:21612	8436112	0					
ANR	8436115	IdentifierDeclStatement	int wmode = gs_type42_metrics_options_wmode ( options ) ;	603:4:20309:20361	8436112	0	True				
ANR	8436116	IdentifierDecl	wmode = gs_type42_metrics_options_wmode ( options )		8436112	0					
ANR	8436117	IdentifierDeclType	int		8436112	0					
ANR	8436118	Identifier	wmode		8436112	1					
ANR	8436119	AssignmentExpression	wmode = gs_type42_metrics_options_wmode ( options )		8436112	2		=			
ANR	8436120	Identifier	wmode		8436112	0					
ANR	8436121	CallExpression	gs_type42_metrics_options_wmode ( options )		8436112	1					
ANR	8436122	Callee	gs_type42_metrics_options_wmode		8436112	0					
ANR	8436123	Identifier	gs_type42_metrics_options_wmode		8436112	0					
ANR	8436124	ArgumentList	options		8436112	1					
ANR	8436125	Argument	options		8436112	0					
ANR	8436126	Identifier	options		8436112	0					
ANR	8436127	IdentifierDeclStatement	int code ;	604:4:20367:20375	8436112	1	True				
ANR	8436128	IdentifierDecl	code		8436112	0					
ANR	8436129	IdentifierDeclType	int		8436112	0					
ANR	8436130	Identifier	code		8436112	1					
ANR	8436131	IfStatement	"if ( ( code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw ) ) != gs_error_undefined )"		8436112	2					
ANR	8436132	Condition	"( code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw ) ) != gs_error_undefined"	606:8:20386:20471	8436112	0	True				
ANR	8436133	EqualityExpression	"( code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw ) ) != gs_error_undefined"		8436112	0		!=			
ANR	8436134	AssignmentExpression	"code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw )"		8436112	0		=			
ANR	8436135	Identifier	code		8436112	0					
ANR	8436136	CallExpression	"pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw )"		8436112	1					
ANR	8436137	Callee	pl_tt_f1c2_get_metrics		8436112	0					
ANR	8436138	Identifier	pl_tt_f1c2_get_metrics		8436112	0					
ANR	8436139	ArgumentList	pfont		8436112	1					
ANR	8436140	Argument	pfont		8436112	0					
ANR	8436141	Identifier	pfont		8436112	0					
ANR	8436142	Argument	glyph_index		8436112	1					
ANR	8436143	Identifier	glyph_index		8436112	0					
ANR	8436144	Argument	wmode		8436112	2					
ANR	8436145	Identifier	wmode		8436112	0					
ANR	8436146	Argument	sbw		8436112	3					
ANR	8436147	Identifier	sbw		8436112	0					
ANR	8436148	Identifier	gs_error_undefined		8436112	1					
ANR	8436149	CompoundStatement		5:96:170:170	8436112	1					
ANR	8436150	ReturnStatement	return code ;	607:8:20484:20495	8436112	0	True				
ANR	8436151	Identifier	code		8436112	0					
ANR	8436152	CompoundStatement		14:8:507:545	8436112	3					
ANR	8436153	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	615:8:20811:20849	8436112	0	True				
ANR	8436154	IdentifierDecl	* plfont = pfont -> client_data		8436112	0					
ANR	8436155	IdentifierDeclType	pl_font_t *		8436112	0					
ANR	8436156	Identifier	plfont		8436112	1					
ANR	8436157	AssignmentExpression	* plfont = pfont -> client_data		8436112	2		=			
ANR	8436158	Identifier	plfont		8436112	0					
ANR	8436159	PtrMemberAccess	pfont -> client_data		8436112	1					
ANR	8436160	Identifier	pfont		8436112	0					
ANR	8436161	Identifier	client_data		8436112	1					
ANR	8436162	IfStatement	if ( plfont -> allow_vertical_substitutes )		8436112	1					
ANR	8436163	Condition	plfont -> allow_vertical_substitutes	617:12:20864:20897	8436112	0	True				
ANR	8436164	PtrMemberAccess	plfont -> allow_vertical_substitutes		8436112	0					
ANR	8436165	Identifier	plfont		8436112	0					
ANR	8436166	Identifier	allow_vertical_substitutes		8436112	1					
ANR	8436167	CompoundStatement		17:12:610:673	8436112	1					
ANR	8436168	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph_index , plfont ) ;"	618:12:20914:20977	8436112	0	True				
ANR	8436169	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph_index , plfont )"		8436112	0					
ANR	8436170	IdentifierDeclType	gs_glyph		8436112	0					
ANR	8436171	Identifier	vertical		8436112	1					
ANR	8436172	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph_index , plfont )"		8436112	2		=			
ANR	8436173	Identifier	vertical		8436112	0					
ANR	8436174	CallExpression	"pl_font_vertical_glyph ( glyph_index , plfont )"		8436112	1					
ANR	8436175	Callee	pl_font_vertical_glyph		8436112	0					
ANR	8436176	Identifier	pl_font_vertical_glyph		8436112	0					
ANR	8436177	ArgumentList	glyph_index		8436112	1					
ANR	8436178	Argument	glyph_index		8436112	0					
ANR	8436179	Identifier	glyph_index		8436112	0					
ANR	8436180	Argument	plfont		8436112	1					
ANR	8436181	Identifier	plfont		8436112	0					
ANR	8436182	IfStatement	if ( vertical != GS_NO_GLYPH )		8436112	1					
ANR	8436183	Condition	vertical != GS_NO_GLYPH	620:16:20996:21018	8436112	0	True				
ANR	8436184	EqualityExpression	vertical != GS_NO_GLYPH		8436112	0		!=			
ANR	8436185	Identifier	vertical		8436112	0					
ANR	8436186	Identifier	GS_NO_GLYPH		8436112	1					
ANR	8436187	ExpressionStatement	glyph_index = vertical	621:16:21037:21059	8436112	1	True				
ANR	8436188	AssignmentExpression	glyph_index = vertical		8436112	0		=			
ANR	8436189	Identifier	glyph_index		8436112	0					
ANR	8436190	Identifier	vertical		8436112	1					
ANR	8436191	IfStatement	if ( wmode == 1 )		8436112	4					
ANR	8436192	Condition	wmode == 1	629:8:21249:21258	8436112	0	True				
ANR	8436193	EqualityExpression	wmode == 1		8436112	0		==			
ANR	8436194	Identifier	wmode		8436112	0					
ANR	8436195	PrimaryExpression	1		8436112	1					
ANR	8436196	CompoundStatement		29:8:967:1024	8436112	1					
ANR	8436197	IdentifierDeclStatement	const gs_type42_mtx_t * pmtx = & pfont -> data . metrics [ wmode ] ;	630:8:21271:21328	8436112	0	True				
ANR	8436198	IdentifierDecl	* pmtx = & pfont -> data . metrics [ wmode ]		8436112	0					
ANR	8436199	IdentifierDeclType	const gs_type42_mtx_t *		8436112	0					
ANR	8436200	Identifier	pmtx		8436112	1					
ANR	8436201	AssignmentExpression	* pmtx = & pfont -> data . metrics [ wmode ]		8436112	2		=			
ANR	8436202	Identifier	pmtx		8436112	0					
ANR	8436203	UnaryOperationExpression	& pfont -> data . metrics [ wmode ]		8436112	1					
ANR	8436204	UnaryOperator	&		8436112	0					
ANR	8436205	ArrayIndexing	pfont -> data . metrics [ wmode ]		8436112	1					
ANR	8436206	MemberAccess	pfont -> data . metrics		8436112	0					
ANR	8436207	PtrMemberAccess	pfont -> data		8436112	0					
ANR	8436208	Identifier	pfont		8436112	0					
ANR	8436209	Identifier	data		8436112	1					
ANR	8436210	Identifier	metrics		8436112	1					
ANR	8436211	Identifier	wmode		8436112	1					
ANR	8436212	IfStatement	if ( pmtx -> length == 0 )		8436112	1					
ANR	8436213	Condition	pmtx -> length == 0	632:12:21343:21359	8436112	0	True				
ANR	8436214	EqualityExpression	pmtx -> length == 0		8436112	0		==			
ANR	8436215	PtrMemberAccess	pmtx -> length		8436112	0					
ANR	8436216	Identifier	pmtx		8436112	0					
ANR	8436217	Identifier	length		8436112	1					
ANR	8436218	PrimaryExpression	0		8436112	1					
ANR	8436219	CompoundStatement		31:31:1058:1058	8436112	1					
ANR	8436220	ExpressionStatement	wmode = 0	633:12:21376:21385	8436112	0	True				
ANR	8436221	AssignmentExpression	wmode = 0		8436112	0		=			
ANR	8436222	Identifier	wmode		8436112	0					
ANR	8436223	PrimaryExpression	0		8436112	1					
ANR	8436224	ElseStatement	else		8436112	0					
ANR	8436225	CompoundStatement		33:15:1098:1098	8436112	0					
ANR	8436226	IfStatement	if ( gs_debug_c ( '=' ) )		8436112	0					
ANR	8436227	Condition	gs_debug_c ( '=' )	635:16:21420:21434	8436112	0	True				
ANR	8436228	CallExpression	gs_debug_c ( '=' )		8436112	0					
ANR	8436229	Callee	gs_debug_c		8436112	0					
ANR	8436230	Identifier	gs_debug_c		8436112	0					
ANR	8436231	ArgumentList	'='		8436112	1					
ANR	8436232	Argument	'='		8436112	0					
ANR	8436233	PrimaryExpression	'='		8436112	0					
ANR	8436234	CompoundStatement		34:33:1133:1133	8436112	1					
ANR	8436235	ExpressionStatement	"dmprintf ( pfont -> memory , ""Found vertical metrics\\n"" )"	636:16:21455:21506	8436112	0	True				
ANR	8436236	CallExpression	"dmprintf ( pfont -> memory , ""Found vertical metrics\\n"" )"		8436112	0					
ANR	8436237	Callee	dmprintf		8436112	0					
ANR	8436238	Identifier	dmprintf		8436112	0					
ANR	8436239	ArgumentList	pfont -> memory		8436112	1					
ANR	8436240	Argument	pfont -> memory		8436112	0					
ANR	8436241	PtrMemberAccess	pfont -> memory		8436112	0					
ANR	8436242	Identifier	pfont		8436112	0					
ANR	8436243	Identifier	memory		8436112	1					
ANR	8436244	Argument	"""Found vertical metrics\\n"""		8436112	1					
ANR	8436245	PrimaryExpression	"""Found vertical metrics\\n"""		8436112	0					
ANR	8436246	ReturnStatement	"return gs_type42_default_get_metrics ( pfont , glyph_index , wmode , sbw ) ;"	640:4:21542:21610	8436112	5	True				
ANR	8436247	CallExpression	"gs_type42_default_get_metrics ( pfont , glyph_index , wmode , sbw )"		8436112	0					
ANR	8436248	Callee	gs_type42_default_get_metrics		8436112	0					
ANR	8436249	Identifier	gs_type42_default_get_metrics		8436112	0					
ANR	8436250	ArgumentList	pfont		8436112	1					
ANR	8436251	Argument	pfont		8436112	0					
ANR	8436252	Identifier	pfont		8436112	0					
ANR	8436253	Argument	glyph_index		8436112	1					
ANR	8436254	Identifier	glyph_index		8436112	0					
ANR	8436255	Argument	wmode		8436112	2					
ANR	8436256	Identifier	wmode		8436112	0					
ANR	8436257	Argument	sbw		8436112	3					
ANR	8436258	Identifier	sbw		8436112	0					
ANR	8436259	ReturnType	static int		8436112	1					
ANR	8436260	Identifier	pl_tt_get_metrics		8436112	2					
ANR	8436261	ParameterList	"gs_font_type42 * pfont , uint glyph_index , gs_type42_metrics_options_t options , float * sbw"		8436112	3					
ANR	8436262	Parameter	gs_font_type42 * pfont	600:18:20194:20215	8436112	0	True				
ANR	8436263	ParameterType	gs_font_type42 *		8436112	0					
ANR	8436264	Identifier	pfont		8436112	1					
ANR	8436265	Parameter	uint glyph_index	600:42:20218:20233	8436112	1	True				
ANR	8436266	ParameterType	uint		8436112	0					
ANR	8436267	Identifier	glyph_index		8436112	1					
ANR	8436268	Parameter	gs_type42_metrics_options_t options	601:18:20254:20288	8436112	2	True				
ANR	8436269	ParameterType	gs_type42_metrics_options_t		8436112	0					
ANR	8436270	Identifier	options		8436112	1					
ANR	8436271	Parameter	float * sbw	601:55:20291:20300	8436112	3	True				
ANR	8436272	ParameterType	float *		8436112	0					
ANR	8436273	Identifier	sbw		8436112	1					
ANR	8436274	CFGEntryNode	ENTRY		8436112		True				
ANR	8436275	CFGExitNode	EXIT		8436112		True				
ANR	8436276	Symbol	code		8436112						
ANR	8436277	Symbol	glyph_index		8436112						
ANR	8436278	Symbol	pfont -> memory		8436112						
ANR	8436279	Symbol	gs_error_undefined		8436112						
ANR	8436280	Symbol	sbw		8436112						
ANR	8436281	Symbol	vertical		8436112						
ANR	8436282	Symbol	plfont		8436112						
ANR	8436283	Symbol	gs_type42_default_get_metrics		8436112						
ANR	8436284	Symbol	pmtx -> length		8436112						
ANR	8436285	Symbol	* pmtx		8436112						
ANR	8436286	Symbol	options		8436112						
ANR	8436287	Symbol	wmode		8436112						
ANR	8436288	Symbol	gs_debug_c		8436112						
ANR	8436289	Symbol	plfont -> allow_vertical_substitutes		8436112						
ANR	8436290	Symbol	pfont		8436112						
ANR	8436291	Symbol	pfont -> data . metrics		8436112						
ANR	8436292	Symbol	pfont -> data		8436112						
ANR	8436293	Symbol	gs_type42_metrics_options_wmode		8436112						
ANR	8436294	Symbol	pl_tt_f1c2_get_metrics		8436112						
ANR	8436295	Symbol	pfont -> client_data		8436112						
ANR	8436296	Symbol	* pfont		8436112						
ANR	8436297	Symbol	GS_NO_GLYPH		8436112						
ANR	8436298	Symbol	pmtx		8436112						
ANR	8436299	Symbol	* plfont		8436112						
ANR	8436300	Symbol	pl_font_vertical_glyph		8436112						
ANR	8436301	Function	pl_tt_get_outline	644:0:21685:22822							
ANR	8436302	FunctionDef	"pl_tt_get_outline (gs_font_type42 * pfont , uint index , gs_glyph_data_t * pdata)"		8436301	0					
ANR	8436303	CompoundStatement		646:0:21768:22822	8436301	0					
ANR	8436304	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	647:4:21774:21812	8436301	0	True				
ANR	8436305	IdentifierDecl	* plfont = pfont -> client_data		8436301	0					
ANR	8436306	IdentifierDeclType	pl_font_t *		8436301	0					
ANR	8436307	Identifier	plfont		8436301	1					
ANR	8436308	AssignmentExpression	* plfont = pfont -> client_data		8436301	2		=			
ANR	8436309	Identifier	plfont		8436301	0					
ANR	8436310	PtrMemberAccess	pfont -> client_data		8436301	1					
ANR	8436311	Identifier	pfont		8436301	0					
ANR	8436312	Identifier	client_data		8436301	1					
ANR	8436313	IdentifierDeclStatement	"const pl_font_glyph_t * pfg = pl_font_lookup_glyph ( plfont , index ) ;"	648:4:21818:21882	8436301	1	True				
ANR	8436314	IdentifierDecl	"* pfg = pl_font_lookup_glyph ( plfont , index )"		8436301	0					
ANR	8436315	IdentifierDeclType	const pl_font_glyph_t *		8436301	0					
ANR	8436316	Identifier	pfg		8436301	1					
ANR	8436317	AssignmentExpression	"* pfg = pl_font_lookup_glyph ( plfont , index )"		8436301	2		=			
ANR	8436318	Identifier	pfg		8436301	0					
ANR	8436319	CallExpression	"pl_font_lookup_glyph ( plfont , index )"		8436301	1					
ANR	8436320	Callee	pl_font_lookup_glyph		8436301	0					
ANR	8436321	Identifier	pl_font_lookup_glyph		8436301	0					
ANR	8436322	ArgumentList	plfont		8436301	1					
ANR	8436323	Argument	plfont		8436301	0					
ANR	8436324	Identifier	plfont		8436301	0					
ANR	8436325	Argument	index		8436301	1					
ANR	8436326	Identifier	index		8436301	0					
ANR	8436327	IdentifierDeclStatement	const byte * cdata = pfg -> data ;	649:4:21888:21917	8436301	2	True				
ANR	8436328	IdentifierDecl	* cdata = pfg -> data		8436301	0					
ANR	8436329	IdentifierDeclType	const byte *		8436301	0					
ANR	8436330	Identifier	cdata		8436301	1					
ANR	8436331	AssignmentExpression	* cdata = pfg -> data		8436301	2		=			
ANR	8436332	Identifier	cdata		8436301	0					
ANR	8436333	PtrMemberAccess	pfg -> data		8436301	1					
ANR	8436334	Identifier	pfg		8436301	0					
ANR	8436335	Identifier	data		8436301	1					
ANR	8436336	IfStatement	if ( cdata == 0 )		8436301	3					
ANR	8436337	Condition	cdata == 0	651:8:21928:21937	8436301	0	True				
ANR	8436338	EqualityExpression	cdata == 0		8436301	0		==			
ANR	8436339	Identifier	cdata		8436301	0					
ANR	8436340	PrimaryExpression	0		8436301	1					
ANR	8436341	CompoundStatement		6:20:171:171	8436301	1					
ANR	8436342	ExpressionStatement	gs_glyph_data_from_null ( pdata )	653:8:21980:22010	8436301	0	True				
ANR	8436343	CallExpression	gs_glyph_data_from_null ( pdata )		8436301	0					
ANR	8436344	Callee	gs_glyph_data_from_null		8436301	0					
ANR	8436345	Identifier	gs_glyph_data_from_null		8436301	0					
ANR	8436346	ArgumentList	pdata		8436301	1					
ANR	8436347	Argument	pdata		8436301	0					
ANR	8436348	Identifier	pdata		8436301	0					
ANR	8436349	ElseStatement	else		8436301	0					
ANR	8436350	CompoundStatement		12:8:357:410	8436301	0					
ANR	8436351	IdentifierDeclStatement	uint desc_size = ( * cdata == 15 ? cdata [ 2 ] : 0 ) ;	655:8:22033:22116	8436301	0	True				
ANR	8436352	IdentifierDecl	desc_size = ( * cdata == 15 ? cdata [ 2 ] : 0 )		8436301	0					
ANR	8436353	IdentifierDeclType	uint		8436301	0					
ANR	8436354	Identifier	desc_size		8436301	1					
ANR	8436355	AssignmentExpression	desc_size = ( * cdata == 15 ? cdata [ 2 ] : 0 )		8436301	2		=			
ANR	8436356	Identifier	desc_size		8436301	0					
ANR	8436357	ConditionalExpression	* cdata == 15 ? cdata [ 2 ] : 0		8436301	1					
ANR	8436358	Condition	* cdata == 15		8436301	0					
ANR	8436359	EqualityExpression	* cdata == 15		8436301	0		==			
ANR	8436360	UnaryOperationExpression	* cdata		8436301	0					
ANR	8436361	UnaryOperator	*		8436301	0					
ANR	8436362	Identifier	cdata		8436301	1					
ANR	8436363	PrimaryExpression	15		8436301	1					
ANR	8436364	ArrayIndexing	cdata [ 2 ]		8436301	1					
ANR	8436365	Identifier	cdata		8436301	0					
ANR	8436366	PrimaryExpression	2		8436301	1					
ANR	8436367	PrimaryExpression	0		8436301	2					
ANR	8436368	IdentifierDeclStatement	uint data_size = pl_get_uint16 ( cdata + 2 + desc_size ) ;	657:8:22126:22179	8436301	1	True				
ANR	8436369	IdentifierDecl	data_size = pl_get_uint16 ( cdata + 2 + desc_size )		8436301	0					
ANR	8436370	IdentifierDeclType	uint		8436301	0					
ANR	8436371	Identifier	data_size		8436301	1					
ANR	8436372	AssignmentExpression	data_size = pl_get_uint16 ( cdata + 2 + desc_size )		8436301	2		=			
ANR	8436373	Identifier	data_size		8436301	0					
ANR	8436374	CallExpression	pl_get_uint16 ( cdata + 2 + desc_size )		8436301	1					
ANR	8436375	Callee	pl_get_uint16		8436301	0					
ANR	8436376	Identifier	pl_get_uint16		8436301	0					
ANR	8436377	ArgumentList	cdata + 2 + desc_size		8436301	1					
ANR	8436378	Argument	cdata + 2 + desc_size		8436301	0					
ANR	8436379	AdditiveExpression	cdata + 2 + desc_size		8436301	0		+			
ANR	8436380	Identifier	cdata		8436301	0					
ANR	8436381	AdditiveExpression	2 + desc_size		8436301	1		+			
ANR	8436382	PrimaryExpression	2		8436301	0					
ANR	8436383	Identifier	desc_size		8436301	1					
ANR	8436384	IfStatement	if ( data_size > pfg -> data_len )		8436301	2					
ANR	8436385	Condition	data_size > pfg -> data_len	659:12:22194:22218	8436301	0	True				
ANR	8436386	RelationalExpression	data_size > pfg -> data_len		8436301	0		>			
ANR	8436387	Identifier	data_size		8436301	0					
ANR	8436388	PtrMemberAccess	pfg -> data_len		8436301	1					
ANR	8436389	Identifier	pfg		8436301	0					
ANR	8436390	Identifier	data_len		8436301	1					
ANR	8436391	ExpressionStatement	data_size = pfg -> data_len	660:12:22233:22258	8436301	1	True				
ANR	8436392	AssignmentExpression	data_size = pfg -> data_len		8436301	0		=			
ANR	8436393	Identifier	data_size		8436301	0					
ANR	8436394	PtrMemberAccess	pfg -> data_len		8436301	1					
ANR	8436395	Identifier	pfg		8436301	0					
ANR	8436396	Identifier	data_len		8436301	1					
ANR	8436397	IfStatement	if ( data_size <= 4 )		8436301	3					
ANR	8436398	Condition	data_size <= 4	662:12:22273:22286	8436301	0	True				
ANR	8436399	RelationalExpression	data_size <= 4		8436301	0		<=			
ANR	8436400	Identifier	data_size		8436301	0					
ANR	8436401	PrimaryExpression	4		8436301	1					
ANR	8436402	CompoundStatement		17:28:520:520	8436301	1					
ANR	8436403	ExpressionStatement	gs_glyph_data_from_null ( pdata )	664:12:22335:22365	8436301	0	True				
ANR	8436404	CallExpression	gs_glyph_data_from_null ( pdata )		8436301	0					
ANR	8436405	Callee	gs_glyph_data_from_null		8436301	0					
ANR	8436406	Identifier	gs_glyph_data_from_null		8436301	0					
ANR	8436407	ArgumentList	pdata		8436301	1					
ANR	8436408	Argument	pdata		8436301	0					
ANR	8436409	Identifier	pdata		8436301	0					
ANR	8436410	ElseStatement	else		8436301	0					
ANR	8436411	IfStatement	if ( cdata [ 1 ] == 0 )		8436301	0					
ANR	8436412	Condition	cdata [ 1 ] == 0	665:19:22386:22398	8436301	0	True				
ANR	8436413	EqualityExpression	cdata [ 1 ] == 0		8436301	0		==			
ANR	8436414	ArrayIndexing	cdata [ 1 ]		8436301	0					
ANR	8436415	Identifier	cdata		8436301	0					
ANR	8436416	PrimaryExpression	1		8436301	1					
ANR	8436417	PrimaryExpression	0		8436301	1					
ANR	8436418	CompoundStatement		20:34:632:632	8436301	1					
ANR	8436419	ExpressionStatement	"gs_glyph_data_from_bytes ( pdata , cdata , 6 + desc_size , data_size - 4 , NULL )"	666:12:22415:22563	8436301	0	True				
ANR	8436420	CallExpression	"gs_glyph_data_from_bytes ( pdata , cdata , 6 + desc_size , data_size - 4 , NULL )"		8436301	0					
ANR	8436421	Callee	gs_glyph_data_from_bytes		8436301	0					
ANR	8436422	Identifier	gs_glyph_data_from_bytes		8436301	0					
ANR	8436423	ArgumentList	pdata		8436301	1					
ANR	8436424	Argument	pdata		8436301	0					
ANR	8436425	Identifier	pdata		8436301	0					
ANR	8436426	Argument	cdata		8436301	1					
ANR	8436427	Identifier	cdata		8436301	0					
ANR	8436428	Argument	6 + desc_size		8436301	2					
ANR	8436429	AdditiveExpression	6 + desc_size		8436301	0		+			
ANR	8436430	PrimaryExpression	6		8436301	0					
ANR	8436431	Identifier	desc_size		8436301	1					
ANR	8436432	Argument	data_size - 4		8436301	3					
ANR	8436433	AdditiveExpression	data_size - 4		8436301	0		-			
ANR	8436434	Identifier	data_size		8436301	0					
ANR	8436435	PrimaryExpression	4		8436301	1					
ANR	8436436	Argument	NULL		8436301	4					
ANR	8436437	Identifier	NULL		8436301	0					
ANR	8436438	ElseStatement	else		8436301	0					
ANR	8436439	IfStatement	if ( cdata [ 1 ] == 1 )		8436301	0					
ANR	8436440	Condition	cdata [ 1 ] == 1	669:19:22584:22596	8436301	0	True				
ANR	8436441	EqualityExpression	cdata [ 1 ] == 1		8436301	0		==			
ANR	8436442	ArrayIndexing	cdata [ 1 ]		8436301	0					
ANR	8436443	Identifier	cdata		8436301	0					
ANR	8436444	PrimaryExpression	1		8436301	1					
ANR	8436445	PrimaryExpression	1		8436301	1					
ANR	8436446	CompoundStatement		24:34:830:830	8436301	1					
ANR	8436447	ExpressionStatement	"gs_glyph_data_from_bytes ( pdata , cdata , 10 , data_size - 8 , NULL )"	670:12:22613:22676	8436301	0	True				
ANR	8436448	CallExpression	"gs_glyph_data_from_bytes ( pdata , cdata , 10 , data_size - 8 , NULL )"		8436301	0					
ANR	8436449	Callee	gs_glyph_data_from_bytes		8436301	0					
ANR	8436450	Identifier	gs_glyph_data_from_bytes		8436301	0					
ANR	8436451	ArgumentList	pdata		8436301	1					
ANR	8436452	Argument	pdata		8436301	0					
ANR	8436453	Identifier	pdata		8436301	0					
ANR	8436454	Argument	cdata		8436301	1					
ANR	8436455	Identifier	cdata		8436301	0					
ANR	8436456	Argument	10		8436301	2					
ANR	8436457	PrimaryExpression	10		8436301	0					
ANR	8436458	Argument	data_size - 8		8436301	3					
ANR	8436459	AdditiveExpression	data_size - 8		8436301	0		-			
ANR	8436460	Identifier	data_size		8436301	0					
ANR	8436461	PrimaryExpression	8		8436301	1					
ANR	8436462	Argument	NULL		8436301	4					
ANR	8436463	Identifier	NULL		8436301	0					
ANR	8436464	ElseStatement	else		8436301	0					
ANR	8436465	IfStatement	if ( cdata [ 1 ] == 2 )		8436301	0					
ANR	8436466	Condition	cdata [ 1 ] == 2	671:19:22697:22709	8436301	0	True				
ANR	8436467	EqualityExpression	cdata [ 1 ] == 2		8436301	0		==			
ANR	8436468	ArrayIndexing	cdata [ 1 ]		8436301	0					
ANR	8436469	Identifier	cdata		8436301	0					
ANR	8436470	PrimaryExpression	1		8436301	1					
ANR	8436471	PrimaryExpression	2		8436301	1					
ANR	8436472	CompoundStatement		26:34:943:943	8436301	1					
ANR	8436473	ExpressionStatement	"gs_glyph_data_from_bytes ( pdata , cdata , 12 , data_size - 10 , NULL )"	672:12:22726:22790	8436301	0	True				
ANR	8436474	CallExpression	"gs_glyph_data_from_bytes ( pdata , cdata , 12 , data_size - 10 , NULL )"		8436301	0					
ANR	8436475	Callee	gs_glyph_data_from_bytes		8436301	0					
ANR	8436476	Identifier	gs_glyph_data_from_bytes		8436301	0					
ANR	8436477	ArgumentList	pdata		8436301	1					
ANR	8436478	Argument	pdata		8436301	0					
ANR	8436479	Identifier	pdata		8436301	0					
ANR	8436480	Argument	cdata		8436301	1					
ANR	8436481	Identifier	cdata		8436301	0					
ANR	8436482	Argument	12		8436301	2					
ANR	8436483	PrimaryExpression	12		8436301	0					
ANR	8436484	Argument	data_size - 10		8436301	3					
ANR	8436485	AdditiveExpression	data_size - 10		8436301	0		-			
ANR	8436486	Identifier	data_size		8436301	0					
ANR	8436487	PrimaryExpression	10		8436301	1					
ANR	8436488	Argument	NULL		8436301	4					
ANR	8436489	Identifier	NULL		8436301	0					
ANR	8436490	ReturnStatement	return 0 ;	675:4:22812:22820	8436301	4	True				
ANR	8436491	PrimaryExpression	0		8436301	0					
ANR	8436492	ReturnType	int		8436301	1					
ANR	8436493	Identifier	pl_tt_get_outline		8436301	2					
ANR	8436494	ParameterList	"gs_font_type42 * pfont , uint index , gs_glyph_data_t * pdata"		8436301	3					
ANR	8436495	Parameter	gs_font_type42 * pfont	645:18:21707:21728	8436301	0	True				
ANR	8436496	ParameterType	gs_font_type42 *		8436301	0					
ANR	8436497	Identifier	pfont		8436301	1					
ANR	8436498	Parameter	uint index	645:42:21731:21740	8436301	1	True				
ANR	8436499	ParameterType	uint		8436301	0					
ANR	8436500	Identifier	index		8436301	1					
ANR	8436501	Parameter	gs_glyph_data_t * pdata	645:54:21743:21765	8436301	2	True				
ANR	8436502	ParameterType	gs_glyph_data_t *		8436301	0					
ANR	8436503	Identifier	pdata		8436301	1					
ANR	8436504	CFGEntryNode	ENTRY		8436301		True				
ANR	8436505	CFGExitNode	EXIT		8436301		True				
ANR	8436506	Symbol	data_size		8436301						
ANR	8436507	Symbol	pl_get_uint16		8436301						
ANR	8436508	Symbol	pdata		8436301						
ANR	8436509	Symbol	NULL		8436301						
ANR	8436510	Symbol	pfont		8436301						
ANR	8436511	Symbol	pl_font_lookup_glyph		8436301						
ANR	8436512	Symbol	index		8436301						
ANR	8436513	Symbol	plfont		8436301						
ANR	8436514	Symbol	cdata		8436301						
ANR	8436515	Symbol	pfont -> client_data		8436301						
ANR	8436516	Symbol	pfg		8436301						
ANR	8436517	Symbol	desc_size		8436301						
ANR	8436518	Symbol	* pfont		8436301						
ANR	8436519	Symbol	* cdata		8436301						
ANR	8436520	Symbol	* pfg		8436301						
ANR	8436521	Symbol	pfg -> data_len		8436301						
ANR	8436522	Symbol	pfg -> data		8436301						
ANR	8436523	Function	tt_find_table	684:0:23078:23748							
ANR	8436524	FunctionDef	"tt_find_table (gs_font_type42 * pfont , const char * tname , uint * plen)"		8436523	0					
ANR	8436525	CompoundStatement		686:0:23154:23748	8436523	0					
ANR	8436526	IdentifierDeclStatement	const byte * OffsetTable ;	687:4:23160:23183	8436523	0	True				
ANR	8436527	IdentifierDecl	* OffsetTable		8436523	0					
ANR	8436528	IdentifierDeclType	const byte *		8436523	0					
ANR	8436529	Identifier	OffsetTable		8436523	1					
ANR	8436530	IdentifierDeclStatement	uint numTables ;	688:4:23189:23203	8436523	1	True				
ANR	8436531	IdentifierDecl	numTables		8436523	0					
ANR	8436532	IdentifierDeclType	uint		8436523	0					
ANR	8436533	Identifier	numTables		8436523	1					
ANR	8436534	IdentifierDeclStatement	const byte * TableDirectory ;	689:4:23209:23235	8436523	2	True				
ANR	8436535	IdentifierDecl	* TableDirectory		8436523	0					
ANR	8436536	IdentifierDeclType	const byte *		8436523	0					
ANR	8436537	Identifier	TableDirectory		8436523	1					
ANR	8436538	IdentifierDeclStatement	uint i ;	690:4:23241:23247	8436523	3	True				
ANR	8436539	IdentifierDecl	i		8436523	0					
ANR	8436540	IdentifierDeclType	uint		8436523	0					
ANR	8436541	Identifier	i		8436523	1					
ANR	8436542	IdentifierDeclStatement	ulong table_dir_offset = 0 ;	691:4:23253:23279	8436523	4	True				
ANR	8436543	IdentifierDecl	table_dir_offset = 0		8436523	0					
ANR	8436544	IdentifierDeclType	ulong		8436523	0					
ANR	8436545	Identifier	table_dir_offset		8436523	1					
ANR	8436546	AssignmentExpression	table_dir_offset = 0		8436523	2		=			
ANR	8436547	Identifier	table_dir_offset		8436523	0					
ANR	8436548	PrimaryExpression	0		8436523	1					
ANR	8436549	ExpressionStatement	"access ( 0 , 12 , OffsetTable )"	693:4:23286:23312	8436523	5	True				
ANR	8436550	CallExpression	"access ( 0 , 12 , OffsetTable )"		8436523	0					
ANR	8436551	Callee	access		8436523	0					
ANR	8436552	Identifier	access		8436523	0					
ANR	8436553	ArgumentList	0		8436523	1					
ANR	8436554	Argument	0		8436523	0					
ANR	8436555	PrimaryExpression	0		8436523	0					
ANR	8436556	Argument	12		8436523	1					
ANR	8436557	PrimaryExpression	12		8436523	0					
ANR	8436558	Argument	OffsetTable		8436523	2					
ANR	8436559	Identifier	OffsetTable		8436523	0					
ANR	8436560	ExpressionStatement	"access ( table_dir_offset , 12 , OffsetTable )"	694:4:23318:23359	8436523	6	True				
ANR	8436561	CallExpression	"access ( table_dir_offset , 12 , OffsetTable )"		8436523	0					
ANR	8436562	Callee	access		8436523	0					
ANR	8436563	Identifier	access		8436523	0					
ANR	8436564	ArgumentList	table_dir_offset		8436523	1					
ANR	8436565	Argument	table_dir_offset		8436523	0					
ANR	8436566	Identifier	table_dir_offset		8436523	0					
ANR	8436567	Argument	12		8436523	1					
ANR	8436568	PrimaryExpression	12		8436523	0					
ANR	8436569	Argument	OffsetTable		8436523	2					
ANR	8436570	Identifier	OffsetTable		8436523	0					
ANR	8436571	ExpressionStatement	numTables = pl_get_uint16 ( OffsetTable + 4 )	695:4:23365:23407	8436523	7	True				
ANR	8436572	AssignmentExpression	numTables = pl_get_uint16 ( OffsetTable + 4 )		8436523	0		=			
ANR	8436573	Identifier	numTables		8436523	0					
ANR	8436574	CallExpression	pl_get_uint16 ( OffsetTable + 4 )		8436523	1					
ANR	8436575	Callee	pl_get_uint16		8436523	0					
ANR	8436576	Identifier	pl_get_uint16		8436523	0					
ANR	8436577	ArgumentList	OffsetTable + 4		8436523	1					
ANR	8436578	Argument	OffsetTable + 4		8436523	0					
ANR	8436579	AdditiveExpression	OffsetTable + 4		8436523	0		+			
ANR	8436580	Identifier	OffsetTable		8436523	0					
ANR	8436581	PrimaryExpression	4		8436523	1					
ANR	8436582	ExpressionStatement	"access ( table_dir_offset + 12 , numTables * 16 , TableDirectory )"	696:4:23413:23474	8436523	8	True				
ANR	8436583	CallExpression	"access ( table_dir_offset + 12 , numTables * 16 , TableDirectory )"		8436523	0					
ANR	8436584	Callee	access		8436523	0					
ANR	8436585	Identifier	access		8436523	0					
ANR	8436586	ArgumentList	table_dir_offset + 12		8436523	1					
ANR	8436587	Argument	table_dir_offset + 12		8436523	0					
ANR	8436588	AdditiveExpression	table_dir_offset + 12		8436523	0		+			
ANR	8436589	Identifier	table_dir_offset		8436523	0					
ANR	8436590	PrimaryExpression	12		8436523	1					
ANR	8436591	Argument	numTables * 16		8436523	1					
ANR	8436592	MultiplicativeExpression	numTables * 16		8436523	0		*			
ANR	8436593	Identifier	numTables		8436523	0					
ANR	8436594	PrimaryExpression	16		8436523	1					
ANR	8436595	Argument	TableDirectory		8436523	2					
ANR	8436596	Identifier	TableDirectory		8436523	0					
ANR	8436597	ForStatement	for ( i = 0 ; i < numTables ; ++ i )		8436523	9					
ANR	8436598	ForInit	i = 0 ;	697:9:23485:23490	8436523	0	True				
ANR	8436599	AssignmentExpression	i = 0		8436523	0		=			
ANR	8436600	Identifier	i		8436523	0					
ANR	8436601	PrimaryExpression	0		8436523	1					
ANR	8436602	Condition	i < numTables	697:16:23492:23504	8436523	1	True				
ANR	8436603	RelationalExpression	i < numTables		8436523	0		<			
ANR	8436604	Identifier	i		8436523	0					
ANR	8436605	Identifier	numTables		8436523	1					
ANR	8436606	UnaryExpression	++ i	697:31:23507:23509	8436523	2	True				
ANR	8436607	IncDec	++		8436523	0					
ANR	8436608	Identifier	i		8436523	1					
ANR	8436609	CompoundStatement		13:8:367:408	8436523	3					
ANR	8436610	IdentifierDeclStatement	const byte * tab = TableDirectory + i * 16 ;	698:8:23522:23563	8436523	0	True				
ANR	8436611	IdentifierDecl	* tab = TableDirectory + i * 16		8436523	0					
ANR	8436612	IdentifierDeclType	const byte *		8436523	0					
ANR	8436613	Identifier	tab		8436523	1					
ANR	8436614	AssignmentExpression	* tab = TableDirectory + i * 16		8436523	2		=			
ANR	8436615	Identifier	tab		8436523	0					
ANR	8436616	AdditiveExpression	TableDirectory + i * 16		8436523	1		+			
ANR	8436617	Identifier	TableDirectory		8436523	0					
ANR	8436618	MultiplicativeExpression	i * 16		8436523	1		*			
ANR	8436619	Identifier	i		8436523	0					
ANR	8436620	PrimaryExpression	16		8436523	1					
ANR	8436621	IfStatement	"if ( ! memcmp ( tab , tname , 4 ) )"		8436523	1					
ANR	8436622	Condition	"! memcmp ( tab , tname , 4 )"	700:12:23578:23599	8436523	0	True				
ANR	8436623	UnaryOperationExpression	"! memcmp ( tab , tname , 4 )"		8436523	0					
ANR	8436624	UnaryOperator	!		8436523	0					
ANR	8436625	CallExpression	"memcmp ( tab , tname , 4 )"		8436523	1					
ANR	8436626	Callee	memcmp		8436523	0					
ANR	8436627	Identifier	memcmp		8436523	0					
ANR	8436628	ArgumentList	tab		8436523	1					
ANR	8436629	Argument	tab		8436523	0					
ANR	8436630	Identifier	tab		8436523	0					
ANR	8436631	Argument	tname		8436523	1					
ANR	8436632	Identifier	tname		8436523	0					
ANR	8436633	Argument	4		8436523	2					
ANR	8436634	PrimaryExpression	4		8436523	0					
ANR	8436635	CompoundStatement		15:36:447:447	8436523	1					
ANR	8436636	IfStatement	if ( plen )		8436523	0					
ANR	8436637	Condition	plen	701:16:23620:23623	8436523	0	True				
ANR	8436638	Identifier	plen		8436523	0					
ANR	8436639	ExpressionStatement	* plen = pl_get_uint32 ( tab + 12 )	702:16:23642:23673	8436523	1	True				
ANR	8436640	AssignmentExpression	* plen = pl_get_uint32 ( tab + 12 )		8436523	0		=			
ANR	8436641	UnaryOperationExpression	* plen		8436523	0					
ANR	8436642	UnaryOperator	*		8436523	0					
ANR	8436643	Identifier	plen		8436523	1					
ANR	8436644	CallExpression	pl_get_uint32 ( tab + 12 )		8436523	1					
ANR	8436645	Callee	pl_get_uint32		8436523	0					
ANR	8436646	Identifier	pl_get_uint32		8436523	0					
ANR	8436647	ArgumentList	tab + 12		8436523	1					
ANR	8436648	Argument	tab + 12		8436523	0					
ANR	8436649	AdditiveExpression	tab + 12		8436523	0		+			
ANR	8436650	Identifier	tab		8436523	0					
ANR	8436651	PrimaryExpression	12		8436523	1					
ANR	8436652	ReturnStatement	return pl_get_uint32 ( tab + 8 ) ;	703:12:23687:23716	8436523	1	True				
ANR	8436653	CallExpression	pl_get_uint32 ( tab + 8 )		8436523	0					
ANR	8436654	Callee	pl_get_uint32		8436523	0					
ANR	8436655	Identifier	pl_get_uint32		8436523	0					
ANR	8436656	ArgumentList	tab + 8		8436523	1					
ANR	8436657	Argument	tab + 8		8436523	0					
ANR	8436658	AdditiveExpression	tab + 8		8436523	0		+			
ANR	8436659	Identifier	tab		8436523	0					
ANR	8436660	PrimaryExpression	8		8436523	1					
ANR	8436661	ReturnStatement	return 0 ;	706:4:23738:23746	8436523	10	True				
ANR	8436662	PrimaryExpression	0		8436523	0					
ANR	8436663	ReturnType	ulong		8436523	1					
ANR	8436664	Identifier	tt_find_table		8436523	2					
ANR	8436665	ParameterList	"gs_font_type42 * pfont , const char * tname , uint * plen"		8436523	3					
ANR	8436666	Parameter	gs_font_type42 * pfont	685:14:23098:23119	8436523	0	True				
ANR	8436667	ParameterType	gs_font_type42 *		8436523	0					
ANR	8436668	Identifier	pfont		8436523	1					
ANR	8436669	Parameter	const char * tname	685:38:23122:23138	8436523	1	True				
ANR	8436670	ParameterType	const char *		8436523	0					
ANR	8436671	Identifier	tname		8436523	1					
ANR	8436672	Parameter	uint * plen	685:57:23141:23151	8436523	2	True				
ANR	8436673	ParameterType	uint *		8436523	0					
ANR	8436674	Identifier	plen		8436523	1					
ANR	8436675	CFGEntryNode	ENTRY		8436523		True				
ANR	8436676	CFGExitNode	EXIT		8436523		True				
ANR	8436677	Symbol	pl_get_uint16		8436523						
ANR	8436678	Symbol	pfont		8436523						
ANR	8436679	Symbol	tname		8436523						
ANR	8436680	Symbol	i		8436523						
ANR	8436681	Symbol	TableDirectory		8436523						
ANR	8436682	Symbol	pl_get_uint32		8436523						
ANR	8436683	Symbol	OffsetTable		8436523						
ANR	8436684	Symbol	plen		8436523						
ANR	8436685	Symbol	memcmp		8436523						
ANR	8436686	Symbol	tab		8436523						
ANR	8436687	Symbol	* plen		8436523						
ANR	8436688	Symbol	table_dir_offset		8436523						
ANR	8436689	Symbol	numTables		8436523						
ANR	8436690	DeclStmt									
ANR	8436691	Decl							struct gs_gstate_s	struct gs_gstate_s	gs_gstate
ANR	8436692	DeclStmt									
ANR	8436693	Decl							struct gx_path_s	struct gx_path_s	gx_path
ANR	8436694	Function	pl_cmap_lookup	726:0:24227:27637							
ANR	8436695	FunctionDef	"pl_cmap_lookup (const uint key , const byte * table , uint * pvalue)"		8436694	0					
ANR	8436696	CompoundStatement		728:0:24304:27637	8436694	0					
ANR	8436697	SwitchStatement	switch ( pl_get_uint16 ( table ) )		8436694	0					
ANR	8436698	Condition	pl_get_uint16 ( table )	729:12:24392:24411	8436694	0	True				
ANR	8436699	CallExpression	pl_get_uint16 ( table )		8436694	0					
ANR	8436700	Callee	pl_get_uint16		8436694	0					
ANR	8436701	Identifier	pl_get_uint16		8436694	0					
ANR	8436702	ArgumentList	table		8436694	1					
ANR	8436703	Argument	table		8436694	0					
ANR	8436704	Identifier	table		8436694	0					
ANR	8436705	CompoundStatement		2:34:109:109	8436694	1					
ANR	8436706	Label	case 0 :	730:8:24424:24430	8436694	0	True				
ANR	8436707	CompoundStatement		4:12:139:139	8436694	1					
ANR	8436708	ExpressionStatement	* pvalue = table [ key + 6 ]	732:16:24517:24541	8436694	0	True				
ANR	8436709	AssignmentExpression	* pvalue = table [ key + 6 ]		8436694	0		=			
ANR	8436710	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8436711	UnaryOperator	*		8436694	0					
ANR	8436712	Identifier	pvalue		8436694	1					
ANR	8436713	ArrayIndexing	table [ key + 6 ]		8436694	1					
ANR	8436714	Identifier	table		8436694	0					
ANR	8436715	AdditiveExpression	key + 6		8436694	1		+			
ANR	8436716	Identifier	key		8436694	0					
ANR	8436717	PrimaryExpression	6		8436694	1					
ANR	8436718	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	733:16:24559:24604	8436694	1	True				
ANR	8436719	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8436694	0					
ANR	8436720	Callee	if_debug2		8436694	0					
ANR	8436721	Identifier	if_debug2		8436694	0					
ANR	8436722	ArgumentList	'J'		8436694	1					
ANR	8436723	Argument	'J'		8436694	0					
ANR	8436724	PrimaryExpression	'J'		8436694	0					
ANR	8436725	Argument	"""[J]%u => %u\\n"""		8436694	1					
ANR	8436726	PrimaryExpression	"""[J]%u => %u\\n"""		8436694	0					
ANR	8436727	Argument	key		8436694	2					
ANR	8436728	Identifier	key		8436694	0					
ANR	8436729	Argument	* pvalue		8436694	3					
ANR	8436730	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8436731	UnaryOperator	*		8436694	0					
ANR	8436732	Identifier	pvalue		8436694	1					
ANR	8436733	BreakStatement	break ;	734:16:24622:24627	8436694	2	True				
ANR	8436734	Label	case 4 :	736:8:24651:24657	8436694	2	True				
ANR	8436735	CompoundStatement		17:16:836:843	8436694	3					
ANR	8436736	IdentifierDeclStatement	uint segCount2 = pl_get_uint16 ( table + 6 ) ;	738:16:24762:24803	8436694	0	True				
ANR	8436737	IdentifierDecl	segCount2 = pl_get_uint16 ( table + 6 )		8436694	0					
ANR	8436738	IdentifierDeclType	uint		8436694	0					
ANR	8436739	Identifier	segCount2		8436694	1					
ANR	8436740	AssignmentExpression	segCount2 = pl_get_uint16 ( table + 6 )		8436694	2		=			
ANR	8436741	Identifier	segCount2		8436694	0					
ANR	8436742	CallExpression	pl_get_uint16 ( table + 6 )		8436694	1					
ANR	8436743	Callee	pl_get_uint16		8436694	0					
ANR	8436744	Identifier	pl_get_uint16		8436694	0					
ANR	8436745	ArgumentList	table + 6		8436694	1					
ANR	8436746	Argument	table + 6		8436694	0					
ANR	8436747	AdditiveExpression	table + 6		8436694	0		+			
ANR	8436748	Identifier	table		8436694	0					
ANR	8436749	PrimaryExpression	6		8436694	1					
ANR	8436750	IdentifierDeclStatement	const byte * endCount = table + 14 ;	739:16:24821:24854	8436694	1	True				
ANR	8436751	IdentifierDecl	* endCount = table + 14		8436694	0					
ANR	8436752	IdentifierDeclType	const byte *		8436694	0					
ANR	8436753	Identifier	endCount		8436694	1					
ANR	8436754	AssignmentExpression	* endCount = table + 14		8436694	2		=			
ANR	8436755	Identifier	endCount		8436694	0					
ANR	8436756	AdditiveExpression	table + 14		8436694	1		+			
ANR	8436757	Identifier	table		8436694	0					
ANR	8436758	PrimaryExpression	14		8436694	1					
ANR	8436759	IdentifierDeclStatement	const byte * startCount = endCount + segCount2 + 2 ;	740:16:24872:24921	8436694	2	True				
ANR	8436760	IdentifierDecl	* startCount = endCount + segCount2 + 2		8436694	0					
ANR	8436761	IdentifierDeclType	const byte *		8436694	0					
ANR	8436762	Identifier	startCount		8436694	1					
ANR	8436763	AssignmentExpression	* startCount = endCount + segCount2 + 2		8436694	2		=			
ANR	8436764	Identifier	startCount		8436694	0					
ANR	8436765	AdditiveExpression	endCount + segCount2 + 2		8436694	1		+			
ANR	8436766	Identifier	endCount		8436694	0					
ANR	8436767	AdditiveExpression	segCount2 + 2		8436694	1		+			
ANR	8436768	Identifier	segCount2		8436694	0					
ANR	8436769	PrimaryExpression	2		8436694	1					
ANR	8436770	IdentifierDeclStatement	const byte * idDelta = startCount + segCount2 ;	741:16:24939:24983	8436694	3	True				
ANR	8436771	IdentifierDecl	* idDelta = startCount + segCount2		8436694	0					
ANR	8436772	IdentifierDeclType	const byte *		8436694	0					
ANR	8436773	Identifier	idDelta		8436694	1					
ANR	8436774	AssignmentExpression	* idDelta = startCount + segCount2		8436694	2		=			
ANR	8436775	Identifier	idDelta		8436694	0					
ANR	8436776	AdditiveExpression	startCount + segCount2		8436694	1		+			
ANR	8436777	Identifier	startCount		8436694	0					
ANR	8436778	Identifier	segCount2		8436694	1					
ANR	8436779	IdentifierDeclStatement	const byte * idRangeOffset = idDelta + segCount2 ;	742:16:25001:25048	8436694	4	True				
ANR	8436780	IdentifierDecl	* idRangeOffset = idDelta + segCount2		8436694	0					
ANR	8436781	IdentifierDeclType	const byte *		8436694	0					
ANR	8436782	Identifier	idRangeOffset		8436694	1					
ANR	8436783	AssignmentExpression	* idRangeOffset = idDelta + segCount2		8436694	2		=			
ANR	8436784	Identifier	idRangeOffset		8436694	0					
ANR	8436785	AdditiveExpression	idDelta + segCount2		8436694	1		+			
ANR	8436786	Identifier	idDelta		8436694	0					
ANR	8436787	Identifier	segCount2		8436694	1					
ANR	8436788	IdentifierDeclStatement	uint i2 ;	744:16:25141:25148	8436694	5	True				
ANR	8436789	IdentifierDecl	i2		8436694	0					
ANR	8436790	IdentifierDeclType	uint		8436694	0					
ANR	8436791	Identifier	i2		8436694	1					
ANR	8436792	ForStatement	for ( i2 = 0 ; i2 < segCount2 - 3 ; i2 += 2 )		8436694	6					
ANR	8436793	ForInit	i2 = 0 ;	746:21:25172:25178	8436694	0	True				
ANR	8436794	AssignmentExpression	i2 = 0		8436694	0		=			
ANR	8436795	Identifier	i2		8436694	0					
ANR	8436796	PrimaryExpression	0		8436694	1					
ANR	8436797	Condition	i2 < segCount2 - 3	746:29:25180:25197	8436694	1	True				
ANR	8436798	RelationalExpression	i2 < segCount2 - 3		8436694	0		<			
ANR	8436799	Identifier	i2		8436694	0					
ANR	8436800	AdditiveExpression	segCount2 - 3		8436694	1		-			
ANR	8436801	Identifier	segCount2		8436694	0					
ANR	8436802	PrimaryExpression	3		8436694	1					
ANR	8436803	AssignmentExpression	i2 += 2	746:49:25200:25206	8436694	2	True	+=			
ANR	8436804	Identifier	i2		8436694	0					
ANR	8436805	PrimaryExpression	2		8436694	1					
ANR	8436806	CompoundStatement		22:20:1028:1038	8436694	3					
ANR	8436807	IdentifierDeclStatement	"int delta , roff ;"	747:20:25231:25246	8436694	0	True				
ANR	8436808	IdentifierDecl	delta		8436694	0					
ANR	8436809	IdentifierDeclType	int		8436694	0					
ANR	8436810	Identifier	delta		8436694	1					
ANR	8436811	IdentifierDecl	roff		8436694	1					
ANR	8436812	IdentifierDeclType	int		8436694	0					
ANR	8436813	Identifier	roff		8436694	1					
ANR	8436814	IdentifierDeclStatement	uint start = pl_get_uint16 ( startCount + i2 ) ;	748:20:25268:25311	8436694	1	True				
ANR	8436815	IdentifierDecl	start = pl_get_uint16 ( startCount + i2 )		8436694	0					
ANR	8436816	IdentifierDeclType	uint		8436694	0					
ANR	8436817	Identifier	start		8436694	1					
ANR	8436818	AssignmentExpression	start = pl_get_uint16 ( startCount + i2 )		8436694	2		=			
ANR	8436819	Identifier	start		8436694	0					
ANR	8436820	CallExpression	pl_get_uint16 ( startCount + i2 )		8436694	1					
ANR	8436821	Callee	pl_get_uint16		8436694	0					
ANR	8436822	Identifier	pl_get_uint16		8436694	0					
ANR	8436823	ArgumentList	startCount + i2		8436694	1					
ANR	8436824	Argument	startCount + i2		8436694	0					
ANR	8436825	AdditiveExpression	startCount + i2		8436694	0		+			
ANR	8436826	Identifier	startCount		8436694	0					
ANR	8436827	Identifier	i2		8436694	1					
ANR	8436828	IdentifierDeclStatement	uint glyph ;	749:20:25333:25343	8436694	2	True				
ANR	8436829	IdentifierDecl	glyph		8436694	0					
ANR	8436830	IdentifierDeclType	uint		8436694	0					
ANR	8436831	Identifier	glyph		8436694	1					
ANR	8436832	ExpressionStatement	"if_debug4 ( 'J' , ""[J]start=%u end=%u delta=%d roff=%d\\n"" , start , pl_get_uint16 ( endCount + i2 ) , pl_get_int16 ( idDelta + i2 ) , pl_get_int16 ( idRangeOffset + i2 ) )"	751:20:25366:25610	8436694	3	True				
ANR	8436833	CallExpression	"if_debug4 ( 'J' , ""[J]start=%u end=%u delta=%d roff=%d\\n"" , start , pl_get_uint16 ( endCount + i2 ) , pl_get_int16 ( idDelta + i2 ) , pl_get_int16 ( idRangeOffset + i2 ) )"		8436694	0					
ANR	8436834	Callee	if_debug4		8436694	0					
ANR	8436835	Identifier	if_debug4		8436694	0					
ANR	8436836	ArgumentList	'J'		8436694	1					
ANR	8436837	Argument	'J'		8436694	0					
ANR	8436838	PrimaryExpression	'J'		8436694	0					
ANR	8436839	Argument	"""[J]start=%u end=%u delta=%d roff=%d\\n"""		8436694	1					
ANR	8436840	PrimaryExpression	"""[J]start=%u end=%u delta=%d roff=%d\\n"""		8436694	0					
ANR	8436841	Argument	start		8436694	2					
ANR	8436842	Identifier	start		8436694	0					
ANR	8436843	Argument	pl_get_uint16 ( endCount + i2 )		8436694	3					
ANR	8436844	CallExpression	pl_get_uint16 ( endCount + i2 )		8436694	0					
ANR	8436845	Callee	pl_get_uint16		8436694	0					
ANR	8436846	Identifier	pl_get_uint16		8436694	0					
ANR	8436847	ArgumentList	endCount + i2		8436694	1					
ANR	8436848	Argument	endCount + i2		8436694	0					
ANR	8436849	AdditiveExpression	endCount + i2		8436694	0		+			
ANR	8436850	Identifier	endCount		8436694	0					
ANR	8436851	Identifier	i2		8436694	1					
ANR	8436852	Argument	pl_get_int16 ( idDelta + i2 )		8436694	4					
ANR	8436853	CallExpression	pl_get_int16 ( idDelta + i2 )		8436694	0					
ANR	8436854	Callee	pl_get_int16		8436694	0					
ANR	8436855	Identifier	pl_get_int16		8436694	0					
ANR	8436856	ArgumentList	idDelta + i2		8436694	1					
ANR	8436857	Argument	idDelta + i2		8436694	0					
ANR	8436858	AdditiveExpression	idDelta + i2		8436694	0		+			
ANR	8436859	Identifier	idDelta		8436694	0					
ANR	8436860	Identifier	i2		8436694	1					
ANR	8436861	Argument	pl_get_int16 ( idRangeOffset + i2 )		8436694	5					
ANR	8436862	CallExpression	pl_get_int16 ( idRangeOffset + i2 )		8436694	0					
ANR	8436863	Callee	pl_get_int16		8436694	0					
ANR	8436864	Identifier	pl_get_int16		8436694	0					
ANR	8436865	ArgumentList	idRangeOffset + i2		8436694	1					
ANR	8436866	Argument	idRangeOffset + i2		8436694	0					
ANR	8436867	AdditiveExpression	idRangeOffset + i2		8436694	0		+			
ANR	8436868	Identifier	idRangeOffset		8436694	0					
ANR	8436869	Identifier	i2		8436694	1					
ANR	8436870	IfStatement	if ( key < start )		8436694	4					
ANR	8436871	Condition	key < start	755:24:25636:25646	8436694	0	True				
ANR	8436872	RelationalExpression	key < start		8436694	0		<			
ANR	8436873	Identifier	key		8436694	0					
ANR	8436874	Identifier	start		8436694	1					
ANR	8436875	CompoundStatement		28:37:1344:1344	8436694	1					
ANR	8436876	ExpressionStatement	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"	756:24:25675:25718	8436694	0	True				
ANR	8436877	CallExpression	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"		8436694	0					
ANR	8436878	Callee	if_debug1		8436694	0					
ANR	8436879	Identifier	if_debug1		8436694	0					
ANR	8436880	ArgumentList	'J'		8436694	1					
ANR	8436881	Argument	'J'		8436694	0					
ANR	8436882	PrimaryExpression	'J'		8436694	0					
ANR	8436883	Argument	"""[J]%u out of range\\n"""		8436694	1					
ANR	8436884	PrimaryExpression	"""[J]%u out of range\\n"""		8436694	0					
ANR	8436885	Argument	key		8436694	2					
ANR	8436886	Identifier	key		8436694	0					
ANR	8436887	ExpressionStatement	return_error ( gs_error_undefined )	757:24:25744:25776	8436694	1	True				
ANR	8436888	CallExpression	return_error ( gs_error_undefined )		8436694	0					
ANR	8436889	Callee	return_error		8436694	0					
ANR	8436890	Identifier	return_error		8436694	0					
ANR	8436891	ArgumentList	gs_error_undefined		8436694	1					
ANR	8436892	Argument	gs_error_undefined		8436694	0					
ANR	8436893	Identifier	gs_error_undefined		8436694	0					
ANR	8436894	IfStatement	if ( key > pl_get_uint16 ( endCount + i2 ) )		8436694	5					
ANR	8436895	Condition	key > pl_get_uint16 ( endCount + i2 )	759:24:25824:25857	8436694	0	True				
ANR	8436896	RelationalExpression	key > pl_get_uint16 ( endCount + i2 )		8436694	0		>			
ANR	8436897	Identifier	key		8436694	0					
ANR	8436898	CallExpression	pl_get_uint16 ( endCount + i2 )		8436694	1					
ANR	8436899	Callee	pl_get_uint16		8436694	0					
ANR	8436900	Identifier	pl_get_uint16		8436694	0					
ANR	8436901	ArgumentList	endCount + i2		8436694	1					
ANR	8436902	Argument	endCount + i2		8436694	0					
ANR	8436903	AdditiveExpression	endCount + i2		8436694	0		+			
ANR	8436904	Identifier	endCount		8436694	0					
ANR	8436905	Identifier	i2		8436694	1					
ANR	8436906	ContinueStatement	continue ;	760:24:25884:25892	8436694	1	True				
ANR	8436907	ExpressionStatement	delta = pl_get_int16 ( idDelta + i2 )	761:20:25914:25948	8436694	6	True				
ANR	8436908	AssignmentExpression	delta = pl_get_int16 ( idDelta + i2 )		8436694	0		=			
ANR	8436909	Identifier	delta		8436694	0					
ANR	8436910	CallExpression	pl_get_int16 ( idDelta + i2 )		8436694	1					
ANR	8436911	Callee	pl_get_int16		8436694	0					
ANR	8436912	Identifier	pl_get_int16		8436694	0					
ANR	8436913	ArgumentList	idDelta + i2		8436694	1					
ANR	8436914	Argument	idDelta + i2		8436694	0					
ANR	8436915	AdditiveExpression	idDelta + i2		8436694	0		+			
ANR	8436916	Identifier	idDelta		8436694	0					
ANR	8436917	Identifier	i2		8436694	1					
ANR	8436918	ExpressionStatement	roff = pl_get_int16 ( idRangeOffset + i2 )	762:20:25970:26009	8436694	7	True				
ANR	8436919	AssignmentExpression	roff = pl_get_int16 ( idRangeOffset + i2 )		8436694	0		=			
ANR	8436920	Identifier	roff		8436694	0					
ANR	8436921	CallExpression	pl_get_int16 ( idRangeOffset + i2 )		8436694	1					
ANR	8436922	Callee	pl_get_int16		8436694	0					
ANR	8436923	Identifier	pl_get_int16		8436694	0					
ANR	8436924	ArgumentList	idRangeOffset + i2		8436694	1					
ANR	8436925	Argument	idRangeOffset + i2		8436694	0					
ANR	8436926	AdditiveExpression	idRangeOffset + i2		8436694	0		+			
ANR	8436927	Identifier	idRangeOffset		8436694	0					
ANR	8436928	Identifier	i2		8436694	1					
ANR	8436929	IfStatement	if ( roff == 0 )		8436694	8					
ANR	8436930	Condition	roff == 0	763:24:26035:26043	8436694	0	True				
ANR	8436931	EqualityExpression	roff == 0		8436694	0		==			
ANR	8436932	Identifier	roff		8436694	0					
ANR	8436933	PrimaryExpression	0		8436694	1					
ANR	8436934	CompoundStatement		36:35:1741:1741	8436694	1					
ANR	8436935	ExpressionStatement	* pvalue = ( key + delta ) & 0xffff	764:24:26072:26104	8436694	0	True				
ANR	8436936	AssignmentExpression	* pvalue = ( key + delta ) & 0xffff		8436694	0		=			
ANR	8436937	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8436938	UnaryOperator	*		8436694	0					
ANR	8436939	Identifier	pvalue		8436694	1					
ANR	8436940	BitAndExpression	( key + delta ) & 0xffff		8436694	1		&			
ANR	8436941	AdditiveExpression	key + delta		8436694	0		+			
ANR	8436942	Identifier	key		8436694	0					
ANR	8436943	Identifier	delta		8436694	1					
ANR	8436944	PrimaryExpression	0xffff		8436694	1					
ANR	8436945	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	765:24:26152:26197	8436694	1	True				
ANR	8436946	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8436694	0					
ANR	8436947	Callee	if_debug2		8436694	0					
ANR	8436948	Identifier	if_debug2		8436694	0					
ANR	8436949	ArgumentList	'J'		8436694	1					
ANR	8436950	Argument	'J'		8436694	0					
ANR	8436951	PrimaryExpression	'J'		8436694	0					
ANR	8436952	Argument	"""[J]%u => %u\\n"""		8436694	1					
ANR	8436953	PrimaryExpression	"""[J]%u => %u\\n"""		8436694	0					
ANR	8436954	Argument	key		8436694	2					
ANR	8436955	Identifier	key		8436694	0					
ANR	8436956	Argument	* pvalue		8436694	3					
ANR	8436957	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8436958	UnaryOperator	*		8436694	0					
ANR	8436959	Identifier	pvalue		8436694	1					
ANR	8436960	ReturnStatement	return 0 ;	766:24:26223:26231	8436694	2	True				
ANR	8436961	PrimaryExpression	0		8436694	0					
ANR	8436962	ExpressionStatement	glyph = pl_get_uint16 ( idRangeOffset + i2 + roff + ( ( key - start ) << 1 ) )	768:20:26275:26388	8436694	9	True				
ANR	8436963	AssignmentExpression	glyph = pl_get_uint16 ( idRangeOffset + i2 + roff + ( ( key - start ) << 1 ) )		8436694	0		=			
ANR	8436964	Identifier	glyph		8436694	0					
ANR	8436965	CallExpression	pl_get_uint16 ( idRangeOffset + i2 + roff + ( ( key - start ) << 1 ) )		8436694	1					
ANR	8436966	Callee	pl_get_uint16		8436694	0					
ANR	8436967	Identifier	pl_get_uint16		8436694	0					
ANR	8436968	ArgumentList	idRangeOffset + i2 + roff + ( ( key - start ) << 1 )		8436694	1					
ANR	8436969	Argument	idRangeOffset + i2 + roff + ( ( key - start ) << 1 )		8436694	0					
ANR	8436970	AdditiveExpression	idRangeOffset + i2 + roff + ( ( key - start ) << 1 )		8436694	0		+			
ANR	8436971	Identifier	idRangeOffset		8436694	0					
ANR	8436972	AdditiveExpression	i2 + roff + ( ( key - start ) << 1 )		8436694	1		+			
ANR	8436973	Identifier	i2		8436694	0					
ANR	8436974	AdditiveExpression	roff + ( ( key - start ) << 1 )		8436694	1		+			
ANR	8436975	Identifier	roff		8436694	0					
ANR	8436976	ShiftExpression	( key - start ) << 1		8436694	1		<<			
ANR	8436977	AdditiveExpression	key - start		8436694	0		-			
ANR	8436978	Identifier	key		8436694	0					
ANR	8436979	Identifier	start		8436694	1					
ANR	8436980	PrimaryExpression	1		8436694	1					
ANR	8436981	ExpressionStatement	* pvalue = ( glyph == 0 ? 0 : glyph + delta )	770:20:26410:26452	8436694	10	True				
ANR	8436982	AssignmentExpression	* pvalue = ( glyph == 0 ? 0 : glyph + delta )		8436694	0		=			
ANR	8436983	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8436984	UnaryOperator	*		8436694	0					
ANR	8436985	Identifier	pvalue		8436694	1					
ANR	8436986	ConditionalExpression	glyph == 0 ? 0 : glyph + delta		8436694	1					
ANR	8436987	Condition	glyph == 0		8436694	0					
ANR	8436988	EqualityExpression	glyph == 0		8436694	0		==			
ANR	8436989	Identifier	glyph		8436694	0					
ANR	8436990	PrimaryExpression	0		8436694	1					
ANR	8436991	PrimaryExpression	0		8436694	1					
ANR	8436992	AdditiveExpression	glyph + delta		8436694	2		+			
ANR	8436993	Identifier	glyph		8436694	0					
ANR	8436994	Identifier	delta		8436694	1					
ANR	8436995	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	771:20:26474:26519	8436694	11	True				
ANR	8436996	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8436694	0					
ANR	8436997	Callee	if_debug2		8436694	0					
ANR	8436998	Identifier	if_debug2		8436694	0					
ANR	8436999	ArgumentList	'J'		8436694	1					
ANR	8437000	Argument	'J'		8436694	0					
ANR	8437001	PrimaryExpression	'J'		8436694	0					
ANR	8437002	Argument	"""[J]%u => %u\\n"""		8436694	1					
ANR	8437003	PrimaryExpression	"""[J]%u => %u\\n"""		8436694	0					
ANR	8437004	Argument	key		8436694	2					
ANR	8437005	Identifier	key		8436694	0					
ANR	8437006	Argument	* pvalue		8436694	3					
ANR	8437007	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8437008	UnaryOperator	*		8436694	0					
ANR	8437009	Identifier	pvalue		8436694	1					
ANR	8437010	ReturnStatement	return 0 ;	772:20:26541:26549	8436694	12	True				
ANR	8437011	PrimaryExpression	0		8436694	0					
ANR	8437012	ExpressionStatement	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"	779:16:26836:26879	8436694	7	True				
ANR	8437013	CallExpression	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"		8436694	0					
ANR	8437014	Callee	if_debug1		8436694	0					
ANR	8437015	Identifier	if_debug1		8436694	0					
ANR	8437016	ArgumentList	'J'		8436694	1					
ANR	8437017	Argument	'J'		8436694	0					
ANR	8437018	PrimaryExpression	'J'		8436694	0					
ANR	8437019	Argument	"""[J]%u out of range\\n"""		8436694	1					
ANR	8437020	PrimaryExpression	"""[J]%u out of range\\n"""		8436694	0					
ANR	8437021	Argument	key		8436694	2					
ANR	8437022	Identifier	key		8436694	0					
ANR	8437023	ExpressionStatement	return_error ( gs_error_undefined )	780:16:26897:26929	8436694	8	True				
ANR	8437024	CallExpression	return_error ( gs_error_undefined )		8436694	0					
ANR	8437025	Callee	return_error		8436694	0					
ANR	8437026	Identifier	return_error		8436694	0					
ANR	8437027	ArgumentList	gs_error_undefined		8436694	1					
ANR	8437028	Argument	gs_error_undefined		8436694	0					
ANR	8437029	Identifier	gs_error_undefined		8436694	0					
ANR	8437030	Label	case 6 :	782:8:26953:26959	8436694	4	True				
ANR	8437031	CompoundStatement		58:16:2793:2835	8436694	5					
ANR	8437032	IdentifierDeclStatement	uint firstCode = pl_get_uint16 ( table + 6 ) ;	784:16:27039:27080	8436694	0	True				
ANR	8437033	IdentifierDecl	firstCode = pl_get_uint16 ( table + 6 )		8436694	0					
ANR	8437034	IdentifierDeclType	uint		8436694	0					
ANR	8437035	Identifier	firstCode		8436694	1					
ANR	8437036	AssignmentExpression	firstCode = pl_get_uint16 ( table + 6 )		8436694	2		=			
ANR	8437037	Identifier	firstCode		8436694	0					
ANR	8437038	CallExpression	pl_get_uint16 ( table + 6 )		8436694	1					
ANR	8437039	Callee	pl_get_uint16		8436694	0					
ANR	8437040	Identifier	pl_get_uint16		8436694	0					
ANR	8437041	ArgumentList	table + 6		8436694	1					
ANR	8437042	Argument	table + 6		8436694	0					
ANR	8437043	AdditiveExpression	table + 6		8436694	0		+			
ANR	8437044	Identifier	table		8436694	0					
ANR	8437045	PrimaryExpression	6		8436694	1					
ANR	8437046	IdentifierDeclStatement	uint entryCount = pl_get_uint16 ( table + 8 ) ;	785:16:27098:27140	8436694	1	True				
ANR	8437047	IdentifierDecl	entryCount = pl_get_uint16 ( table + 8 )		8436694	0					
ANR	8437048	IdentifierDeclType	uint		8436694	0					
ANR	8437049	Identifier	entryCount		8436694	1					
ANR	8437050	AssignmentExpression	entryCount = pl_get_uint16 ( table + 8 )		8436694	2		=			
ANR	8437051	Identifier	entryCount		8436694	0					
ANR	8437052	CallExpression	pl_get_uint16 ( table + 8 )		8436694	1					
ANR	8437053	Callee	pl_get_uint16		8436694	0					
ANR	8437054	Identifier	pl_get_uint16		8436694	0					
ANR	8437055	ArgumentList	table + 8		8436694	1					
ANR	8437056	Argument	table + 8		8436694	0					
ANR	8437057	AdditiveExpression	table + 8		8436694	0		+			
ANR	8437058	Identifier	table		8436694	0					
ANR	8437059	PrimaryExpression	8		8436694	1					
ANR	8437060	IfStatement	if ( key < firstCode || key >= firstCode + entryCount )		8436694	2					
ANR	8437061	Condition	key < firstCode || key >= firstCode + entryCount	787:20:27163:27210	8436694	0	True				
ANR	8437062	OrExpression	key < firstCode || key >= firstCode + entryCount		8436694	0		||			
ANR	8437063	RelationalExpression	key < firstCode		8436694	0		<			
ANR	8437064	Identifier	key		8436694	0					
ANR	8437065	Identifier	firstCode		8436694	1					
ANR	8437066	RelationalExpression	key >= firstCode + entryCount		8436694	1		>=			
ANR	8437067	Identifier	key		8436694	0					
ANR	8437068	AdditiveExpression	firstCode + entryCount		8436694	1		+			
ANR	8437069	Identifier	firstCode		8436694	0					
ANR	8437070	Identifier	entryCount		8436694	1					
ANR	8437071	CompoundStatement		60:70:2908:2908	8436694	1					
ANR	8437072	ExpressionStatement	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"	788:20:27235:27278	8436694	0	True				
ANR	8437073	CallExpression	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"		8436694	0					
ANR	8437074	Callee	if_debug1		8436694	0					
ANR	8437075	Identifier	if_debug1		8436694	0					
ANR	8437076	ArgumentList	'J'		8436694	1					
ANR	8437077	Argument	'J'		8436694	0					
ANR	8437078	PrimaryExpression	'J'		8436694	0					
ANR	8437079	Argument	"""[J]%u out of range\\n"""		8436694	1					
ANR	8437080	PrimaryExpression	"""[J]%u out of range\\n"""		8436694	0					
ANR	8437081	Argument	key		8436694	2					
ANR	8437082	Identifier	key		8436694	0					
ANR	8437083	ExpressionStatement	return_error ( gs_error_undefined )	789:20:27300:27332	8436694	1	True				
ANR	8437084	CallExpression	return_error ( gs_error_undefined )		8436694	0					
ANR	8437085	Callee	return_error		8436694	0					
ANR	8437086	Identifier	return_error		8436694	0					
ANR	8437087	ArgumentList	gs_error_undefined		8436694	1					
ANR	8437088	Argument	gs_error_undefined		8436694	0					
ANR	8437089	Identifier	gs_error_undefined		8436694	0					
ANR	8437090	ExpressionStatement	* pvalue = pl_get_uint16 ( table + 10 + ( ( key - firstCode ) << 1 ) )	791:16:27368:27450	8436694	3	True				
ANR	8437091	AssignmentExpression	* pvalue = pl_get_uint16 ( table + 10 + ( ( key - firstCode ) << 1 ) )		8436694	0		=			
ANR	8437092	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8437093	UnaryOperator	*		8436694	0					
ANR	8437094	Identifier	pvalue		8436694	1					
ANR	8437095	CallExpression	pl_get_uint16 ( table + 10 + ( ( key - firstCode ) << 1 ) )		8436694	1					
ANR	8437096	Callee	pl_get_uint16		8436694	0					
ANR	8437097	Identifier	pl_get_uint16		8436694	0					
ANR	8437098	ArgumentList	table + 10 + ( ( key - firstCode ) << 1 )		8436694	1					
ANR	8437099	Argument	table + 10 + ( ( key - firstCode ) << 1 )		8436694	0					
ANR	8437100	AdditiveExpression	table + 10 + ( ( key - firstCode ) << 1 )		8436694	0		+			
ANR	8437101	Identifier	table		8436694	0					
ANR	8437102	AdditiveExpression	10 + ( ( key - firstCode ) << 1 )		8436694	1		+			
ANR	8437103	PrimaryExpression	10		8436694	0					
ANR	8437104	ShiftExpression	( key - firstCode ) << 1		8436694	1		<<			
ANR	8437105	AdditiveExpression	key - firstCode		8436694	0		-			
ANR	8437106	Identifier	key		8436694	0					
ANR	8437107	Identifier	firstCode		8436694	1					
ANR	8437108	PrimaryExpression	1		8436694	1					
ANR	8437109	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	793:16:27468:27513	8436694	4	True				
ANR	8437110	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8436694	0					
ANR	8437111	Callee	if_debug2		8436694	0					
ANR	8437112	Identifier	if_debug2		8436694	0					
ANR	8437113	ArgumentList	'J'		8436694	1					
ANR	8437114	Argument	'J'		8436694	0					
ANR	8437115	PrimaryExpression	'J'		8436694	0					
ANR	8437116	Argument	"""[J]%u => %u\\n"""		8436694	1					
ANR	8437117	PrimaryExpression	"""[J]%u => %u\\n"""		8436694	0					
ANR	8437118	Argument	key		8436694	2					
ANR	8437119	Identifier	key		8436694	0					
ANR	8437120	Argument	* pvalue		8436694	3					
ANR	8437121	UnaryOperationExpression	* pvalue		8436694	0					
ANR	8437122	UnaryOperator	*		8436694	0					
ANR	8437123	Identifier	pvalue		8436694	1					
ANR	8437124	BreakStatement	break ;	794:16:27531:27536	8436694	5	True				
ANR	8437125	Label	default :	796:8:27560:27567	8436694	6	True				
ANR	8437126	Identifier	default		8436694	0					
ANR	8437127	ExpressionStatement	return_error ( gs_error_invalidfont )	797:12:27581:27615	8436694	7	True				
ANR	8437128	CallExpression	return_error ( gs_error_invalidfont )		8436694	0					
ANR	8437129	Callee	return_error		8436694	0					
ANR	8437130	Identifier	return_error		8436694	0					
ANR	8437131	ArgumentList	gs_error_invalidfont		8436694	1					
ANR	8437132	Argument	gs_error_invalidfont		8436694	0					
ANR	8437133	Identifier	gs_error_invalidfont		8436694	0					
ANR	8437134	ReturnStatement	return 0 ;	799:4:27627:27635	8436694	1	True				
ANR	8437135	PrimaryExpression	0		8436694	0					
ANR	8437136	ReturnType	static int		8436694	1					
ANR	8437137	Identifier	pl_cmap_lookup		8436694	2					
ANR	8437138	ParameterList	"const uint key , const byte * table , uint * pvalue"		8436694	3					
ANR	8437139	Parameter	const uint key	727:15:24253:24266	8436694	0	True				
ANR	8437140	ParameterType	const uint		8436694	0					
ANR	8437141	Identifier	key		8436694	1					
ANR	8437142	Parameter	const byte * table	727:31:24269:24286	8436694	1	True				
ANR	8437143	ParameterType	const byte *		8436694	0					
ANR	8437144	Identifier	table		8436694	1					
ANR	8437145	Parameter	uint * pvalue	727:51:24289:24301	8436694	2	True				
ANR	8437146	ParameterType	uint *		8436694	0					
ANR	8437147	Identifier	pvalue		8436694	1					
ANR	8437148	CFGEntryNode	ENTRY		8436694		True				
ANR	8437149	CFGExitNode	EXIT		8436694		True				
ANR	8437150	Symbol	pl_get_uint16		8436694						
ANR	8437151	Symbol	startCount		8436694						
ANR	8437152	Symbol	segCount2		8436694						
ANR	8437153	Symbol	delta		8436694						
ANR	8437154	Symbol	roff		8436694						
ANR	8437155	Symbol	start		8436694						
ANR	8437156	Symbol	gs_error_undefined		8436694						
ANR	8437157	Symbol	* key		8436694						
ANR	8437158	Symbol	* table		8436694						
ANR	8437159	Symbol	i2		8436694						
ANR	8437160	Symbol	pvalue		8436694						
ANR	8437161	Symbol	glyph		8436694						
ANR	8437162	Symbol	* pvalue		8436694						
ANR	8437163	Symbol	entryCount		8436694						
ANR	8437164	Symbol	pl_get_int16		8436694						
ANR	8437165	Symbol	endCount		8436694						
ANR	8437166	Symbol	firstCode		8436694						
ANR	8437167	Symbol	idRangeOffset		8436694						
ANR	8437168	Symbol	gs_error_invalidfont		8436694						
ANR	8437169	Symbol	idDelta		8436694						
ANR	8437170	Symbol	key		8436694						
ANR	8437171	Symbol	table		8436694						
ANR	8437172	Function	pl_tt_cmap_encode_char	804:0:27755:28924							
ANR	8437173	FunctionDef	"pl_tt_cmap_encode_char (gs_font_type42 * pfont , ulong cmap_offset , uint cmap_len , gs_char chr)"		8437172	0					
ANR	8437174	CompoundStatement		807:0:27888:28924	8437172	0					
ANR	8437175	IdentifierDeclStatement	const byte * cmap ;	808:4:27894:27910	8437172	0	True				
ANR	8437176	IdentifierDecl	* cmap		8437172	0					
ANR	8437177	IdentifierDeclType	const byte *		8437172	0					
ANR	8437178	Identifier	cmap		8437172	1					
ANR	8437179	IdentifierDeclStatement	const byte * cmap_sub ;	809:4:27916:27936	8437172	1	True				
ANR	8437180	IdentifierDecl	* cmap_sub		8437172	0					
ANR	8437181	IdentifierDeclType	const byte *		8437172	0					
ANR	8437182	Identifier	cmap_sub		8437172	1					
ANR	8437183	IdentifierDeclStatement	const byte * table ;	810:4:27942:27959	8437172	2	True				
ANR	8437184	IdentifierDecl	* table		8437172	0					
ANR	8437185	IdentifierDeclType	const byte *		8437172	0					
ANR	8437186	Identifier	table		8437172	1					
ANR	8437187	IdentifierDeclStatement	uint value ;	811:4:27965:27975	8437172	3	True				
ANR	8437188	IdentifierDecl	value		8437172	0					
ANR	8437189	IdentifierDeclType	uint		8437172	0					
ANR	8437190	Identifier	value		8437172	1					
ANR	8437191	IdentifierDeclStatement	int code ;	812:4:27981:27989	8437172	4	True				
ANR	8437192	IdentifierDecl	code		8437172	0					
ANR	8437193	IdentifierDeclType	int		8437172	0					
ANR	8437194	Identifier	code		8437172	1					
ANR	8437195	ExpressionStatement	"access ( cmap_offset , cmap_len , cmap )"	814:4:27996:28031	8437172	5	True				
ANR	8437196	CallExpression	"access ( cmap_offset , cmap_len , cmap )"		8437172	0					
ANR	8437197	Callee	access		8437172	0					
ANR	8437198	Identifier	access		8437172	0					
ANR	8437199	ArgumentList	cmap_offset		8437172	1					
ANR	8437200	Argument	cmap_offset		8437172	0					
ANR	8437201	Identifier	cmap_offset		8437172	0					
ANR	8437202	Argument	cmap_len		8437172	1					
ANR	8437203	Identifier	cmap_len		8437172	0					
ANR	8437204	Argument	cmap		8437172	2					
ANR	8437205	Identifier	cmap		8437172	0					
ANR	8437206	ExpressionStatement	cmap_sub = cmap + 4	818:4:28212:28231	8437172	6	True				
ANR	8437207	AssignmentExpression	cmap_sub = cmap + 4		8437172	0		=			
ANR	8437208	Identifier	cmap_sub		8437172	0					
ANR	8437209	AdditiveExpression	cmap + 4		8437172	1		+			
ANR	8437210	Identifier	cmap		8437172	0					
ANR	8437211	PrimaryExpression	4		8437172	1					
ANR	8437212	CompoundStatement		14:8:358:364	8437172	7					
ANR	8437213	IdentifierDeclStatement	uint i ;	820:8:28247:28253	8437172	0	True				
ANR	8437214	IdentifierDecl	i		8437172	0					
ANR	8437215	IdentifierDeclType	uint		8437172	0					
ANR	8437216	Identifier	i		8437172	1					
ANR	8437217	ForStatement	for ( i = 0 ; i < pl_get_uint16 ( cmap + 2 ) ; ++ i )		8437172	1					
ANR	8437218	ForInit	i = 0 ;	822:13:28269:28274	8437172	0	True				
ANR	8437219	AssignmentExpression	i = 0		8437172	0		=			
ANR	8437220	Identifier	i		8437172	0					
ANR	8437221	PrimaryExpression	0		8437172	1					
ANR	8437222	Condition	i < pl_get_uint16 ( cmap + 2 )	822:20:28276:28302	8437172	1	True				
ANR	8437223	RelationalExpression	i < pl_get_uint16 ( cmap + 2 )		8437172	0		<			
ANR	8437224	Identifier	i		8437172	0					
ANR	8437225	CallExpression	pl_get_uint16 ( cmap + 2 )		8437172	1					
ANR	8437226	Callee	pl_get_uint16		8437172	0					
ANR	8437227	Identifier	pl_get_uint16		8437172	0					
ANR	8437228	ArgumentList	cmap + 2		8437172	1					
ANR	8437229	Argument	cmap + 2		8437172	0					
ANR	8437230	AdditiveExpression	cmap + 2		8437172	0		+			
ANR	8437231	Identifier	cmap		8437172	0					
ANR	8437232	PrimaryExpression	2		8437172	1					
ANR	8437233	UnaryExpression	++ i	822:49:28305:28307	8437172	2	True				
ANR	8437234	IncDec	++		8437172	0					
ANR	8437235	Identifier	i		8437172	1					
ANR	8437236	CompoundStatement		16:54:421:421	8437172	3					
ANR	8437237	ExpressionStatement	"if_debug3m ( 'j' , pfont -> memory , ""[j]cmap %d: platform %u encoding %u\\n"" , i , pl_get_uint16 ( cmap_sub + i * 8 ) , pl_get_uint16 ( cmap_sub + i * 8 + 2 ) )"	823:12:28324:28537	8437172	0	True				
ANR	8437238	CallExpression	"if_debug3m ( 'j' , pfont -> memory , ""[j]cmap %d: platform %u encoding %u\\n"" , i , pl_get_uint16 ( cmap_sub + i * 8 ) , pl_get_uint16 ( cmap_sub + i * 8 + 2 ) )"		8437172	0					
ANR	8437239	Callee	if_debug3m		8437172	0					
ANR	8437240	Identifier	if_debug3m		8437172	0					
ANR	8437241	ArgumentList	'j'		8437172	1					
ANR	8437242	Argument	'j'		8437172	0					
ANR	8437243	PrimaryExpression	'j'		8437172	0					
ANR	8437244	Argument	pfont -> memory		8437172	1					
ANR	8437245	PtrMemberAccess	pfont -> memory		8437172	0					
ANR	8437246	Identifier	pfont		8437172	0					
ANR	8437247	Identifier	memory		8437172	1					
ANR	8437248	Argument	"""[j]cmap %d: platform %u encoding %u\\n"""		8437172	2					
ANR	8437249	PrimaryExpression	"""[j]cmap %d: platform %u encoding %u\\n"""		8437172	0					
ANR	8437250	Argument	i		8437172	3					
ANR	8437251	Identifier	i		8437172	0					
ANR	8437252	Argument	pl_get_uint16 ( cmap_sub + i * 8 )		8437172	4					
ANR	8437253	CallExpression	pl_get_uint16 ( cmap_sub + i * 8 )		8437172	0					
ANR	8437254	Callee	pl_get_uint16		8437172	0					
ANR	8437255	Identifier	pl_get_uint16		8437172	0					
ANR	8437256	ArgumentList	cmap_sub + i * 8		8437172	1					
ANR	8437257	Argument	cmap_sub + i * 8		8437172	0					
ANR	8437258	AdditiveExpression	cmap_sub + i * 8		8437172	0		+			
ANR	8437259	Identifier	cmap_sub		8437172	0					
ANR	8437260	MultiplicativeExpression	i * 8		8437172	1		*			
ANR	8437261	Identifier	i		8437172	0					
ANR	8437262	PrimaryExpression	8		8437172	1					
ANR	8437263	Argument	pl_get_uint16 ( cmap_sub + i * 8 + 2 )		8437172	5					
ANR	8437264	CallExpression	pl_get_uint16 ( cmap_sub + i * 8 + 2 )		8437172	0					
ANR	8437265	Callee	pl_get_uint16		8437172	0					
ANR	8437266	Identifier	pl_get_uint16		8437172	0					
ANR	8437267	ArgumentList	cmap_sub + i * 8 + 2		8437172	1					
ANR	8437268	Argument	cmap_sub + i * 8 + 2		8437172	0					
ANR	8437269	AdditiveExpression	cmap_sub + i * 8 + 2		8437172	0		+			
ANR	8437270	Identifier	cmap_sub		8437172	0					
ANR	8437271	AdditiveExpression	i * 8 + 2		8437172	1		+			
ANR	8437272	MultiplicativeExpression	i * 8		8437172	0		*			
ANR	8437273	Identifier	i		8437172	0					
ANR	8437274	PrimaryExpression	8		8437172	1					
ANR	8437275	PrimaryExpression	2		8437172	1					
ANR	8437276	IfStatement	if ( pl_get_uint16 ( cmap_sub + i * 8 ) == 3 )		8437172	1					
ANR	8437277	Condition	pl_get_uint16 ( cmap_sub + i * 8 ) == 3	827:16:28555:28590	8437172	0	True				
ANR	8437278	EqualityExpression	pl_get_uint16 ( cmap_sub + i * 8 ) == 3		8437172	0		==			
ANR	8437279	CallExpression	pl_get_uint16 ( cmap_sub + i * 8 )		8437172	0					
ANR	8437280	Callee	pl_get_uint16		8437172	0					
ANR	8437281	Identifier	pl_get_uint16		8437172	0					
ANR	8437282	ArgumentList	cmap_sub + i * 8		8437172	1					
ANR	8437283	Argument	cmap_sub + i * 8		8437172	0					
ANR	8437284	AdditiveExpression	cmap_sub + i * 8		8437172	0		+			
ANR	8437285	Identifier	cmap_sub		8437172	0					
ANR	8437286	MultiplicativeExpression	i * 8		8437172	1		*			
ANR	8437287	Identifier	i		8437172	0					
ANR	8437288	PrimaryExpression	8		8437172	1					
ANR	8437289	PrimaryExpression	3		8437172	1					
ANR	8437290	CompoundStatement		21:54:704:704	8437172	1					
ANR	8437291	ExpressionStatement	cmap_sub += i * 8	828:16:28611:28628	8437172	0	True				
ANR	8437292	AssignmentExpression	cmap_sub += i * 8		8437172	0		+=			
ANR	8437293	Identifier	cmap_sub		8437172	0					
ANR	8437294	MultiplicativeExpression	i * 8		8437172	1		*			
ANR	8437295	Identifier	i		8437172	0					
ANR	8437296	PrimaryExpression	8		8437172	1					
ANR	8437297	BreakStatement	break ;	829:16:28646:28651	8437172	1	True				
ANR	8437298	CompoundStatement		28:8:808:863	8437172	8					
ANR	8437299	IdentifierDeclStatement	uint offset = cmap_offset + pl_get_uint32 ( cmap_sub + 4 ) ;	834:8:28697:28752	8437172	0	True				
ANR	8437300	IdentifierDecl	offset = cmap_offset + pl_get_uint32 ( cmap_sub + 4 )		8437172	0					
ANR	8437301	IdentifierDeclType	uint		8437172	0					
ANR	8437302	Identifier	offset		8437172	1					
ANR	8437303	AssignmentExpression	offset = cmap_offset + pl_get_uint32 ( cmap_sub + 4 )		8437172	2		=			
ANR	8437304	Identifier	offset		8437172	0					
ANR	8437305	AdditiveExpression	cmap_offset + pl_get_uint32 ( cmap_sub + 4 )		8437172	1		+			
ANR	8437306	Identifier	cmap_offset		8437172	0					
ANR	8437307	CallExpression	pl_get_uint32 ( cmap_sub + 4 )		8437172	1					
ANR	8437308	Callee	pl_get_uint32		8437172	0					
ANR	8437309	Identifier	pl_get_uint32		8437172	0					
ANR	8437310	ArgumentList	cmap_sub + 4		8437172	1					
ANR	8437311	Argument	cmap_sub + 4		8437172	0					
ANR	8437312	AdditiveExpression	cmap_sub + 4		8437172	0		+			
ANR	8437313	Identifier	cmap_sub		8437172	0					
ANR	8437314	PrimaryExpression	4		8437172	1					
ANR	8437315	ExpressionStatement	"access ( offset , cmap_offset + cmap_len - offset , table )"	836:8:28763:28817	8437172	1	True				
ANR	8437316	CallExpression	"access ( offset , cmap_offset + cmap_len - offset , table )"		8437172	0					
ANR	8437317	Callee	access		8437172	0					
ANR	8437318	Identifier	access		8437172	0					
ANR	8437319	ArgumentList	offset		8437172	1					
ANR	8437320	Argument	offset		8437172	0					
ANR	8437321	Identifier	offset		8437172	0					
ANR	8437322	Argument	cmap_offset + cmap_len - offset		8437172	1					
ANR	8437323	AdditiveExpression	cmap_offset + cmap_len - offset		8437172	0		+			
ANR	8437324	Identifier	cmap_offset		8437172	0					
ANR	8437325	AdditiveExpression	cmap_len - offset		8437172	1		-			
ANR	8437326	Identifier	cmap_len		8437172	0					
ANR	8437327	Identifier	offset		8437172	1					
ANR	8437328	Argument	table		8437172	2					
ANR	8437329	Identifier	table		8437172	0					
ANR	8437330	ExpressionStatement	"code = pl_cmap_lookup ( ( uint ) chr , table , & value )"	838:4:28829:28877	8437172	9	True				
ANR	8437331	AssignmentExpression	"code = pl_cmap_lookup ( ( uint ) chr , table , & value )"		8437172	0		=			
ANR	8437332	Identifier	code		8437172	0					
ANR	8437333	CallExpression	"pl_cmap_lookup ( ( uint ) chr , table , & value )"		8437172	1					
ANR	8437334	Callee	pl_cmap_lookup		8437172	0					
ANR	8437335	Identifier	pl_cmap_lookup		8437172	0					
ANR	8437336	ArgumentList	( uint ) chr		8437172	1					
ANR	8437337	Argument	( uint ) chr		8437172	0					
ANR	8437338	CastExpression	( uint ) chr		8437172	0					
ANR	8437339	CastTarget	uint		8437172	0					
ANR	8437340	Identifier	chr		8437172	1					
ANR	8437341	Argument	table		8437172	1					
ANR	8437342	Identifier	table		8437172	0					
ANR	8437343	Argument	& value		8437172	2					
ANR	8437344	UnaryOperationExpression	& value		8437172	0					
ANR	8437345	UnaryOperator	&		8437172	0					
ANR	8437346	Identifier	value		8437172	1					
ANR	8437347	ReturnStatement	return ( code < 0 ? GS_NO_GLYPH : value ) ;	839:4:28883:28922	8437172	10	True				
ANR	8437348	ConditionalExpression	code < 0 ? GS_NO_GLYPH : value		8437172	0					
ANR	8437349	Condition	code < 0		8437172	0					
ANR	8437350	RelationalExpression	code < 0		8437172	0		<			
ANR	8437351	Identifier	code		8437172	0					
ANR	8437352	PrimaryExpression	0		8437172	1					
ANR	8437353	Identifier	GS_NO_GLYPH		8437172	1					
ANR	8437354	Identifier	value		8437172	2					
ANR	8437355	ReturnType	static gs_glyph		8437172	1					
ANR	8437356	Identifier	pl_tt_cmap_encode_char		8437172	2					
ANR	8437357	ParameterList	"gs_font_type42 * pfont , ulong cmap_offset , uint cmap_len , gs_char chr"		8437172	3					
ANR	8437358	Parameter	gs_font_type42 * pfont	805:23:27794:27815	8437172	0	True				
ANR	8437359	ParameterType	gs_font_type42 *		8437172	0					
ANR	8437360	Identifier	pfont		8437172	1					
ANR	8437361	Parameter	ulong cmap_offset	805:47:27818:27834	8437172	1	True				
ANR	8437362	ParameterType	ulong		8437172	0					
ANR	8437363	Identifier	cmap_offset		8437172	1					
ANR	8437364	Parameter	uint cmap_len	806:23:27860:27872	8437172	2	True				
ANR	8437365	ParameterType	uint		8437172	0					
ANR	8437366	Identifier	cmap_len		8437172	1					
ANR	8437367	Parameter	gs_char chr	806:38:27875:27885	8437172	3	True				
ANR	8437368	ParameterType	gs_char		8437172	0					
ANR	8437369	Identifier	chr		8437172	1					
ANR	8437370	CFGEntryNode	ENTRY		8437172		True				
ANR	8437371	CFGExitNode	EXIT		8437172		True				
ANR	8437372	Symbol	cmap_sub		8437172						
ANR	8437373	Symbol	pl_get_uint16		8437172						
ANR	8437374	Symbol	code		8437172						
ANR	8437375	Symbol	& value		8437172						
ANR	8437376	Symbol	pfont -> memory		8437172						
ANR	8437377	Symbol	offset		8437172						
ANR	8437378	Symbol	pfont		8437172						
ANR	8437379	Symbol	i		8437172						
ANR	8437380	Symbol	chr		8437172						
ANR	8437381	Symbol	pl_get_uint32		8437172						
ANR	8437382	Symbol	* pfont		8437172						
ANR	8437383	Symbol	GS_NO_GLYPH		8437172						
ANR	8437384	Symbol	pl_cmap_lookup		8437172						
ANR	8437385	Symbol	cmap_offset		8437172						
ANR	8437386	Symbol	cmap_len		8437172						
ANR	8437387	Symbol	cmap		8437172						
ANR	8437388	Symbol	value		8437172						
ANR	8437389	Symbol	table		8437172						
ANR	8437390	Function	pl_tt_dynamic_encode_char	843:0:29003:29270							
ANR	8437391	FunctionDef	"pl_tt_dynamic_encode_char (const gs_font_type42 * pfont , gs_char chr)"		8437390	0					
ANR	8437392	CompoundStatement		845:0:29088:29270	8437390	0					
ANR	8437393	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	846:4:29094:29132	8437390	0	True				
ANR	8437394	IdentifierDecl	* plfont = pfont -> client_data		8437390	0					
ANR	8437395	IdentifierDeclType	pl_font_t *		8437390	0					
ANR	8437396	Identifier	plfont		8437390	1					
ANR	8437397	AssignmentExpression	* plfont = pfont -> client_data		8437390	2		=			
ANR	8437398	Identifier	plfont		8437390	0					
ANR	8437399	PtrMemberAccess	pfont -> client_data		8437390	1					
ANR	8437400	Identifier	pfont		8437390	0					
ANR	8437401	Identifier	client_data		8437390	1					
ANR	8437402	IdentifierDeclStatement	"const pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , chr ) ;"	847:4:29138:29201	8437390	1	True				
ANR	8437403	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , chr )"		8437390	0					
ANR	8437404	IdentifierDeclType	const pl_tt_char_glyph_t *		8437390	0					
ANR	8437405	Identifier	ptcg		8437390	1					
ANR	8437406	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , chr )"		8437390	2		=			
ANR	8437407	Identifier	ptcg		8437390	0					
ANR	8437408	CallExpression	"pl_tt_lookup_char ( plfont , chr )"		8437390	1					
ANR	8437409	Callee	pl_tt_lookup_char		8437390	0					
ANR	8437410	Identifier	pl_tt_lookup_char		8437390	0					
ANR	8437411	ArgumentList	plfont		8437390	1					
ANR	8437412	Argument	plfont		8437390	0					
ANR	8437413	Identifier	plfont		8437390	0					
ANR	8437414	Argument	chr		8437390	1					
ANR	8437415	Identifier	chr		8437390	0					
ANR	8437416	ReturnStatement	return ( ptcg -> chr == gs_no_char ? GS_NO_GLYPH : ptcg -> glyph ) ;	849:4:29208:29268	8437390	2	True				
ANR	8437417	ConditionalExpression	ptcg -> chr == gs_no_char ? GS_NO_GLYPH : ptcg -> glyph		8437390	0					
ANR	8437418	Condition	ptcg -> chr == gs_no_char		8437390	0					
ANR	8437419	EqualityExpression	ptcg -> chr == gs_no_char		8437390	0		==			
ANR	8437420	PtrMemberAccess	ptcg -> chr		8437390	0					
ANR	8437421	Identifier	ptcg		8437390	0					
ANR	8437422	Identifier	chr		8437390	1					
ANR	8437423	Identifier	gs_no_char		8437390	1					
ANR	8437424	Identifier	GS_NO_GLYPH		8437390	1					
ANR	8437425	PtrMemberAccess	ptcg -> glyph		8437390	2					
ANR	8437426	Identifier	ptcg		8437390	0					
ANR	8437427	Identifier	glyph		8437390	1					
ANR	8437428	ReturnType	static gs_glyph		8437390	1					
ANR	8437429	Identifier	pl_tt_dynamic_encode_char		8437390	2					
ANR	8437430	ParameterList	"const gs_font_type42 * pfont , gs_char chr"		8437390	3					
ANR	8437431	Parameter	const gs_font_type42 * pfont	844:26:29045:29072	8437390	0	True				
ANR	8437432	ParameterType	const gs_font_type42 *		8437390	0					
ANR	8437433	Identifier	pfont		8437390	1					
ANR	8437434	Parameter	gs_char chr	844:56:29075:29085	8437390	1	True				
ANR	8437435	ParameterType	gs_char		8437390	0					
ANR	8437436	Identifier	chr		8437390	1					
ANR	8437437	CFGEntryNode	ENTRY		8437390		True				
ANR	8437438	CFGExitNode	EXIT		8437390		True				
ANR	8437439	Symbol	pfont -> client_data		8437390						
ANR	8437440	Symbol	* pfont		8437390						
ANR	8437441	Symbol	GS_NO_GLYPH		8437390						
ANR	8437442	Symbol	pfont		8437390						
ANR	8437443	Symbol	ptcg -> chr		8437390						
ANR	8437444	Symbol	ptcg -> glyph		8437390						
ANR	8437445	Symbol	plfont		8437390						
ANR	8437446	Symbol	gs_no_char		8437390						
ANR	8437447	Symbol	chr		8437390						
ANR	8437448	Symbol	ptcg		8437390						
ANR	8437449	Symbol	* ptcg		8437390						
ANR	8437450	Symbol	pl_tt_lookup_char		8437390						
ANR	8437451	Function	pl_font_galley_character	856:0:29471:30334							
ANR	8437452	FunctionDef	"pl_font_galley_character (gs_char chr , const pl_font_t * plfont)"		8437451	0					
ANR	8437453	CompoundStatement		858:0:29550:30334	8437451	0					
ANR	8437454	IdentifierDeclStatement	long GC = plfont -> offsets . GC ;	859:4:29556:29584	8437451	0	True				
ANR	8437455	IdentifierDecl	GC = plfont -> offsets . GC		8437451	0					
ANR	8437456	IdentifierDeclType	long		8437451	0					
ANR	8437457	Identifier	GC		8437451	1					
ANR	8437458	AssignmentExpression	GC = plfont -> offsets . GC		8437451	2		=			
ANR	8437459	Identifier	GC		8437451	0					
ANR	8437460	MemberAccess	plfont -> offsets . GC		8437451	1					
ANR	8437461	PtrMemberAccess	plfont -> offsets		8437451	0					
ANR	8437462	Identifier	plfont		8437451	0					
ANR	8437463	Identifier	offsets		8437451	1					
ANR	8437464	Identifier	GC		8437451	1					
ANR	8437465	IdentifierDeclStatement	const byte * gcseg ;	860:4:29590:29607	8437451	1	True				
ANR	8437466	IdentifierDecl	* gcseg		8437451	0					
ANR	8437467	IdentifierDeclType	const byte *		8437451	0					
ANR	8437468	Identifier	gcseg		8437451	1					
ANR	8437469	IdentifierDeclStatement	"uint b0 , b1 ;"	861:4:29613:29624	8437451	2	True				
ANR	8437470	IdentifierDecl	b0		8437451	0					
ANR	8437471	IdentifierDeclType	uint		8437451	0					
ANR	8437472	Identifier	b0		8437451	1					
ANR	8437473	IdentifierDecl	b1		8437451	1					
ANR	8437474	IdentifierDeclType	uint		8437451	0					
ANR	8437475	Identifier	b1		8437451	1					
ANR	8437476	IdentifierDeclStatement	"uint i , len ;"	862:4:29630:29641	8437451	3	True				
ANR	8437477	IdentifierDecl	i		8437451	0					
ANR	8437478	IdentifierDeclType	uint		8437451	0					
ANR	8437479	Identifier	i		8437451	1					
ANR	8437480	IdentifierDecl	len		8437451	1					
ANR	8437481	IdentifierDeclType	uint		8437451	0					
ANR	8437482	Identifier	len		8437451	1					
ANR	8437483	IdentifierDeclStatement	uint default_char ;	863:4:29647:29664	8437451	4	True				
ANR	8437484	IdentifierDecl	default_char		8437451	0					
ANR	8437485	IdentifierDeclType	uint		8437451	0					
ANR	8437486	Identifier	default_char		8437451	1					
ANR	8437487	IfStatement	if ( GC < 0 )		8437451	5					
ANR	8437488	Condition	GC < 0	865:8:29675:29680	8437451	0	True				
ANR	8437489	RelationalExpression	GC < 0		8437451	0		<			
ANR	8437490	Identifier	GC		8437451	0					
ANR	8437491	PrimaryExpression	0		8437451	1					
ANR	8437492	ReturnStatement	return gs_no_char ;	866:8:29691:29708	8437451	1	True				
ANR	8437493	Identifier	gs_no_char		8437451	0					
ANR	8437494	ExpressionStatement	gcseg = plfont -> header + GC	867:4:29714:29741	8437451	6	True				
ANR	8437495	AssignmentExpression	gcseg = plfont -> header + GC		8437451	0		=			
ANR	8437496	Identifier	gcseg		8437451	0					
ANR	8437497	AdditiveExpression	plfont -> header + GC		8437451	1		+			
ANR	8437498	PtrMemberAccess	plfont -> header		8437451	0					
ANR	8437499	Identifier	plfont		8437451	0					
ANR	8437500	Identifier	header		8437451	1					
ANR	8437501	Identifier	GC		8437451	1					
ANR	8437502	IfStatement	if ( plfont -> large_sizes )		8437451	7					
ANR	8437503	Condition	plfont -> large_sizes	868:8:29751:29769	8437451	0	True				
ANR	8437504	PtrMemberAccess	plfont -> large_sizes		8437451	0					
ANR	8437505	Identifier	plfont		8437451	0					
ANR	8437506	Identifier	large_sizes		8437451	1					
ANR	8437507	ExpressionStatement	"len = pl_get_uint32 ( gcseg + 2 ) , i = 12"	869:8:29780:29818	8437451	1	True				
ANR	8437508	Expression	"len = pl_get_uint32 ( gcseg + 2 ) , i = 12"		8437451	0					
ANR	8437509	AssignmentExpression	len = pl_get_uint32 ( gcseg + 2 )		8437451	0		=			
ANR	8437510	Identifier	len		8437451	0					
ANR	8437511	CallExpression	pl_get_uint32 ( gcseg + 2 )		8437451	1					
ANR	8437512	Callee	pl_get_uint32		8437451	0					
ANR	8437513	Identifier	pl_get_uint32		8437451	0					
ANR	8437514	ArgumentList	gcseg + 2		8437451	1					
ANR	8437515	Argument	gcseg + 2		8437451	0					
ANR	8437516	AdditiveExpression	gcseg + 2		8437451	0		+			
ANR	8437517	Identifier	gcseg		8437451	0					
ANR	8437518	PrimaryExpression	2		8437451	1					
ANR	8437519	AssignmentExpression	i = 12		8437451	1		=			
ANR	8437520	Identifier	i		8437451	0					
ANR	8437521	PrimaryExpression	12		8437451	1					
ANR	8437522	ElseStatement	else		8437451	0					
ANR	8437523	ExpressionStatement	"len = pl_get_uint16 ( gcseg + 2 ) , i = 10"	871:8:29837:29875	8437451	0	True				
ANR	8437524	Expression	"len = pl_get_uint16 ( gcseg + 2 ) , i = 10"		8437451	0					
ANR	8437525	AssignmentExpression	len = pl_get_uint16 ( gcseg + 2 )		8437451	0		=			
ANR	8437526	Identifier	len		8437451	0					
ANR	8437527	CallExpression	pl_get_uint16 ( gcseg + 2 )		8437451	1					
ANR	8437528	Callee	pl_get_uint16		8437451	0					
ANR	8437529	Identifier	pl_get_uint16		8437451	0					
ANR	8437530	ArgumentList	gcseg + 2		8437451	1					
ANR	8437531	Argument	gcseg + 2		8437451	0					
ANR	8437532	AdditiveExpression	gcseg + 2		8437451	0		+			
ANR	8437533	Identifier	gcseg		8437451	0					
ANR	8437534	PrimaryExpression	2		8437451	1					
ANR	8437535	AssignmentExpression	i = 10		8437451	1		=			
ANR	8437536	Identifier	i		8437451	0					
ANR	8437537	PrimaryExpression	10		8437451	1					
ANR	8437538	IfStatement	if ( len != pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6 )		8437451	8					
ANR	8437539	Condition	len != pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6	872:8:29885:29927	8437451	0	True				
ANR	8437540	EqualityExpression	len != pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6		8437451	0		!=			
ANR	8437541	Identifier	len		8437451	0					
ANR	8437542	AdditiveExpression	pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6		8437451	1		+			
ANR	8437543	MultiplicativeExpression	pl_get_uint16 ( gcseg + i - 2 ) * 6		8437451	0		*			
ANR	8437544	CallExpression	pl_get_uint16 ( gcseg + i - 2 )		8437451	0					
ANR	8437545	Callee	pl_get_uint16		8437451	0					
ANR	8437546	Identifier	pl_get_uint16		8437451	0					
ANR	8437547	ArgumentList	gcseg + i - 2		8437451	1					
ANR	8437548	Argument	gcseg + i - 2		8437451	0					
ANR	8437549	AdditiveExpression	gcseg + i - 2		8437451	0		+			
ANR	8437550	Identifier	gcseg		8437451	0					
ANR	8437551	AdditiveExpression	i - 2		8437451	1		-			
ANR	8437552	Identifier	i		8437451	0					
ANR	8437553	PrimaryExpression	2		8437451	1					
ANR	8437554	PrimaryExpression	6		8437451	1					
ANR	8437555	PrimaryExpression	6		8437451	1					
ANR	8437556	ReturnStatement	return gs_no_char ;	873:8:29956:29973	8437451	1	True				
ANR	8437557	Identifier	gs_no_char		8437451	0					
ANR	8437558	ExpressionStatement	default_char = pl_get_uint16 ( gcseg + i - 4 )	874:4:29979:30022	8437451	9	True				
ANR	8437559	AssignmentExpression	default_char = pl_get_uint16 ( gcseg + i - 4 )		8437451	0		=			
ANR	8437560	Identifier	default_char		8437451	0					
ANR	8437561	CallExpression	pl_get_uint16 ( gcseg + i - 4 )		8437451	1					
ANR	8437562	Callee	pl_get_uint16		8437451	0					
ANR	8437563	Identifier	pl_get_uint16		8437451	0					
ANR	8437564	ArgumentList	gcseg + i - 4		8437451	1					
ANR	8437565	Argument	gcseg + i - 4		8437451	0					
ANR	8437566	AdditiveExpression	gcseg + i - 4		8437451	0		+			
ANR	8437567	Identifier	gcseg		8437451	0					
ANR	8437568	AdditiveExpression	i - 4		8437451	1		-			
ANR	8437569	Identifier	i		8437451	0					
ANR	8437570	PrimaryExpression	4		8437451	1					
ANR	8437571	ExpressionStatement	len += i - 6	875:4:30059:30071	8437451	10	True				
ANR	8437572	AssignmentExpression	len += i - 6		8437451	0		+=			
ANR	8437573	Identifier	len		8437451	0					
ANR	8437574	AdditiveExpression	i - 6		8437451	1		-			
ANR	8437575	Identifier	i		8437451	0					
ANR	8437576	PrimaryExpression	6		8437451	1					
ANR	8437577	ExpressionStatement	b0 = chr >> 8	876:4:30077:30090	8437451	11	True				
ANR	8437578	AssignmentExpression	b0 = chr >> 8		8437451	0		=			
ANR	8437579	Identifier	b0		8437451	0					
ANR	8437580	ShiftExpression	chr >> 8		8437451	1		>>			
ANR	8437581	Identifier	chr		8437451	0					
ANR	8437582	PrimaryExpression	8		8437451	1					
ANR	8437583	ExpressionStatement	b1 = chr & 0xff	877:4:30096:30111	8437451	12	True				
ANR	8437584	AssignmentExpression	b1 = chr & 0xff		8437451	0		=			
ANR	8437585	Identifier	b1		8437451	0					
ANR	8437586	BitAndExpression	chr & 0xff		8437451	1		&			
ANR	8437587	Identifier	chr		8437451	0					
ANR	8437588	PrimaryExpression	0xff		8437451	1					
ANR	8437589	ForStatement	for ( ; i < len ; i += 6 )		8437451	13					
ANR	8437590	Condition	i < len	878:11:30124:30130	8437451	0	True				
ANR	8437591	RelationalExpression	i < len		8437451	0		<			
ANR	8437592	Identifier	i		8437451	0					
ANR	8437593	Identifier	len		8437451	1					
ANR	8437594	AssignmentExpression	i += 6	878:20:30133:30138	8437451	1	True	+=			
ANR	8437595	Identifier	i		8437451	0					
ANR	8437596	PrimaryExpression	6		8437451	1					
ANR	8437597	IfStatement	if ( b0 >= gcseg [ i ] && b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ] )		8437451	2					
ANR	8437598	Condition	b0 >= gcseg [ i ] && b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]	879:12:30153:30244	8437451	0	True				
ANR	8437599	AndExpression	b0 >= gcseg [ i ] && b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]		8437451	0		&&			
ANR	8437600	RelationalExpression	b0 >= gcseg [ i ]		8437451	0		>=			
ANR	8437601	Identifier	b0		8437451	0					
ANR	8437602	ArrayIndexing	gcseg [ i ]		8437451	1					
ANR	8437603	Identifier	gcseg		8437451	0					
ANR	8437604	Identifier	i		8437451	1					
ANR	8437605	AndExpression	b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]		8437451	1		&&			
ANR	8437606	RelationalExpression	b0 <= gcseg [ i + 1 ]		8437451	0		<=			
ANR	8437607	Identifier	b0		8437451	0					
ANR	8437608	ArrayIndexing	gcseg [ i + 1 ]		8437451	1					
ANR	8437609	Identifier	gcseg		8437451	0					
ANR	8437610	AdditiveExpression	i + 1		8437451	1		+			
ANR	8437611	Identifier	i		8437451	0					
ANR	8437612	PrimaryExpression	1		8437451	1					
ANR	8437613	AndExpression	b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]		8437451	1		&&			
ANR	8437614	RelationalExpression	b1 >= gcseg [ i + 2 ]		8437451	0		>=			
ANR	8437615	Identifier	b1		8437451	0					
ANR	8437616	ArrayIndexing	gcseg [ i + 2 ]		8437451	1					
ANR	8437617	Identifier	gcseg		8437451	0					
ANR	8437618	AdditiveExpression	i + 2		8437451	1		+			
ANR	8437619	Identifier	i		8437451	0					
ANR	8437620	PrimaryExpression	2		8437451	1					
ANR	8437621	RelationalExpression	b1 <= gcseg [ i + 3 ]		8437451	1		<=			
ANR	8437622	Identifier	b1		8437451	0					
ANR	8437623	ArrayIndexing	gcseg [ i + 3 ]		8437451	1					
ANR	8437624	Identifier	gcseg		8437451	0					
ANR	8437625	AdditiveExpression	i + 3		8437451	1		+			
ANR	8437626	Identifier	i		8437451	0					
ANR	8437627	PrimaryExpression	3		8437451	1					
ANR	8437628	ReturnStatement	return pl_get_uint16 ( gcseg + i + 4 ) ;	882:12:30272:30307	8437451	1	True				
ANR	8437629	CallExpression	pl_get_uint16 ( gcseg + i + 4 )		8437451	0					
ANR	8437630	Callee	pl_get_uint16		8437451	0					
ANR	8437631	Identifier	pl_get_uint16		8437451	0					
ANR	8437632	ArgumentList	gcseg + i + 4		8437451	1					
ANR	8437633	Argument	gcseg + i + 4		8437451	0					
ANR	8437634	AdditiveExpression	gcseg + i + 4		8437451	0		+			
ANR	8437635	Identifier	gcseg		8437451	0					
ANR	8437636	AdditiveExpression	i + 4		8437451	1		+			
ANR	8437637	Identifier	i		8437451	0					
ANR	8437638	PrimaryExpression	4		8437451	1					
ANR	8437639	ReturnStatement	return default_char ;	883:4:30313:30332	8437451	14	True				
ANR	8437640	Identifier	default_char		8437451	0					
ANR	8437641	ReturnType	static gs_char		8437451	1					
ANR	8437642	Identifier	pl_font_galley_character		8437451	2					
ANR	8437643	ParameterList	"gs_char chr , const pl_font_t * plfont"		8437451	3					
ANR	8437644	Parameter	gs_char chr	857:25:29511:29521	8437451	0	True				
ANR	8437645	ParameterType	gs_char		8437451	0					
ANR	8437646	Identifier	chr		8437451	1					
ANR	8437647	Parameter	const pl_font_t * plfont	857:38:29524:29547	8437451	1	True				
ANR	8437648	ParameterType	const pl_font_t *		8437451	0					
ANR	8437649	Identifier	plfont		8437451	1					
ANR	8437650	CFGEntryNode	ENTRY		8437451		True				
ANR	8437651	CFGExitNode	EXIT		8437451		True				
ANR	8437652	Symbol	default_char		8437451						
ANR	8437653	Symbol	pl_get_uint16		8437451						
ANR	8437654	Symbol	gcseg		8437451						
ANR	8437655	Symbol	plfont -> header		8437451						
ANR	8437656	Symbol	i		8437451						
ANR	8437657	Symbol	plfont		8437451						
ANR	8437658	Symbol	plfont -> large_sizes		8437451						
ANR	8437659	Symbol	chr		8437451						
ANR	8437660	Symbol	plfont -> offsets		8437451						
ANR	8437661	Symbol	pl_get_uint32		8437451						
ANR	8437662	Symbol	b0		8437451						
ANR	8437663	Symbol	b1		8437451						
ANR	8437664	Symbol	* i		8437451						
ANR	8437665	Symbol	len		8437451						
ANR	8437666	Symbol	* plfont		8437451						
ANR	8437667	Symbol	* gcseg		8437451						
ANR	8437668	Symbol	gs_no_char		8437451						
ANR	8437669	Symbol	GC		8437451						
ANR	8437670	Symbol	plfont -> offsets . GC		8437451						
ANR	8437671	Function	pl_tt_encode_char	889:0:30519:31924							
ANR	8437672	FunctionDef	"pl_tt_encode_char (gs_font * pfont_generic , gs_char chr , gs_glyph_space_t not_used)"		8437671	0					
ANR	8437673	CompoundStatement		892:0:30629:31924	8437671	0					
ANR	8437674	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) pfont_generic ;	893:4:30635:30691	8437671	0	True				
ANR	8437675	IdentifierDecl	* pfont = ( gs_font_type42 * ) pfont_generic		8437671	0					
ANR	8437676	IdentifierDeclType	gs_font_type42 *		8437671	0					
ANR	8437677	Identifier	pfont		8437671	1					
ANR	8437678	AssignmentExpression	* pfont = ( gs_font_type42 * ) pfont_generic		8437671	2		=			
ANR	8437679	Identifier	pfont		8437671	0					
ANR	8437680	CastExpression	( gs_font_type42 * ) pfont_generic		8437671	1					
ANR	8437681	CastTarget	gs_font_type42 *		8437671	0					
ANR	8437682	Identifier	pfont_generic		8437671	1					
ANR	8437683	IdentifierDeclStatement	uint cmap_len ;	894:4:30697:30710	8437671	1	True				
ANR	8437684	IdentifierDecl	cmap_len		8437671	0					
ANR	8437685	IdentifierDeclType	uint		8437671	0					
ANR	8437686	Identifier	cmap_len		8437671	1					
ANR	8437687	IdentifierDeclStatement	"ulong cmap_offset = tt_find_table ( pfont , ""cmap"" , & cmap_len ) ;"	895:4:30716:30775	8437671	2	True				
ANR	8437688	IdentifierDecl	"cmap_offset = tt_find_table ( pfont , ""cmap"" , & cmap_len )"		8437671	0					
ANR	8437689	IdentifierDeclType	ulong		8437671	0					
ANR	8437690	Identifier	cmap_offset		8437671	1					
ANR	8437691	AssignmentExpression	"cmap_offset = tt_find_table ( pfont , ""cmap"" , & cmap_len )"		8437671	2		=			
ANR	8437692	Identifier	cmap_offset		8437671	0					
ANR	8437693	CallExpression	"tt_find_table ( pfont , ""cmap"" , & cmap_len )"		8437671	1					
ANR	8437694	Callee	tt_find_table		8437671	0					
ANR	8437695	Identifier	tt_find_table		8437671	0					
ANR	8437696	ArgumentList	pfont		8437671	1					
ANR	8437697	Argument	pfont		8437671	0					
ANR	8437698	Identifier	pfont		8437671	0					
ANR	8437699	Argument	"""cmap"""		8437671	1					
ANR	8437700	PrimaryExpression	"""cmap"""		8437671	0					
ANR	8437701	Argument	& cmap_len		8437671	2					
ANR	8437702	UnaryOperationExpression	& cmap_len		8437671	0					
ANR	8437703	UnaryOperator	&		8437671	0					
ANR	8437704	Identifier	cmap_len		8437671	1					
ANR	8437705	IdentifierDeclStatement	"gs_glyph glyph = ( cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr ) ) ;"	896:4:30781:31073	8437671	3	True				
ANR	8437706	IdentifierDecl	"glyph = ( cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr ) )"		8437671	0					
ANR	8437707	IdentifierDeclType	gs_glyph		8437671	0					
ANR	8437708	Identifier	glyph		8437671	1					
ANR	8437709	AssignmentExpression	"glyph = ( cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr ) )"		8437671	2		=			
ANR	8437710	Identifier	glyph		8437671	0					
ANR	8437711	ConditionalExpression	"cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr )"		8437671	1					
ANR	8437712	Condition	cmap_offset == 0		8437671	0					
ANR	8437713	EqualityExpression	cmap_offset == 0		8437671	0		==			
ANR	8437714	Identifier	cmap_offset		8437671	0					
ANR	8437715	PrimaryExpression	0		8437671	1					
ANR	8437716	CallExpression	"pl_tt_dynamic_encode_char ( pfont , chr )"		8437671	1					
ANR	8437717	Callee	pl_tt_dynamic_encode_char		8437671	0					
ANR	8437718	Identifier	pl_tt_dynamic_encode_char		8437671	0					
ANR	8437719	ArgumentList	pfont		8437671	1					
ANR	8437720	Argument	pfont		8437671	0					
ANR	8437721	Identifier	pfont		8437671	0					
ANR	8437722	Argument	chr		8437671	1					
ANR	8437723	Identifier	chr		8437671	0					
ANR	8437724	CallExpression	"pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr )"		8437671	2					
ANR	8437725	Callee	pl_tt_cmap_encode_char		8437671	0					
ANR	8437726	Identifier	pl_tt_cmap_encode_char		8437671	0					
ANR	8437727	ArgumentList	pfont		8437671	1					
ANR	8437728	Argument	pfont		8437671	0					
ANR	8437729	Identifier	pfont		8437671	0					
ANR	8437730	Argument	cmap_offset		8437671	1					
ANR	8437731	Identifier	cmap_offset		8437671	0					
ANR	8437732	Argument	cmap_len		8437671	2					
ANR	8437733	Identifier	cmap_len		8437671	0					
ANR	8437734	Argument	chr		8437671	3					
ANR	8437735	Identifier	chr		8437671	0					
ANR	8437736	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	901:4:31079:31117	8437671	4	True				
ANR	8437737	IdentifierDecl	* plfont = pfont -> client_data		8437671	0					
ANR	8437738	IdentifierDeclType	pl_font_t *		8437671	0					
ANR	8437739	Identifier	plfont		8437671	1					
ANR	8437740	AssignmentExpression	* plfont = pfont -> client_data		8437671	2		=			
ANR	8437741	Identifier	plfont		8437671	0					
ANR	8437742	PtrMemberAccess	pfont -> client_data		8437671	1					
ANR	8437743	Identifier	pfont		8437671	0					
ANR	8437744	Identifier	client_data		8437671	1					
ANR	8437745	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	902:4:31123:31143	8437671	5	True				
ANR	8437746	IdentifierDecl	* pfg		8437671	0					
ANR	8437747	IdentifierDeclType	pl_font_glyph_t *		8437671	0					
ANR	8437748	Identifier	pfg		8437671	1					
ANR	8437749	ExpressionStatement	plfont -> last_char = chr	905:4:31204:31227	8437671	6	True				
ANR	8437750	AssignmentExpression	plfont -> last_char = chr		8437671	0		=			
ANR	8437751	PtrMemberAccess	plfont -> last_char		8437671	0					
ANR	8437752	Identifier	plfont		8437671	0					
ANR	8437753	Identifier	last_char		8437671	1					
ANR	8437754	Identifier	chr		8437671	1					
ANR	8437755	IfStatement	if ( plfont -> offsets . GC < 0 )		8437671	7					
ANR	8437756	Condition	plfont -> offsets . GC < 0	907:8:31238:31259	8437671	0	True				
ANR	8437757	RelationalExpression	plfont -> offsets . GC < 0		8437671	0		<			
ANR	8437758	MemberAccess	plfont -> offsets . GC		8437671	0					
ANR	8437759	PtrMemberAccess	plfont -> offsets		8437671	0					
ANR	8437760	Identifier	plfont		8437671	0					
ANR	8437761	Identifier	offsets		8437671	1					
ANR	8437762	Identifier	GC		8437671	1					
ANR	8437763	PrimaryExpression	0		8437671	1					
ANR	8437764	ReturnStatement	return glyph ;	908:8:31270:31282	8437671	1	True				
ANR	8437765	Identifier	glyph		8437671	0					
ANR	8437766	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , glyph )"	909:4:31318:31359	8437671	8	True				
ANR	8437767	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , glyph )"		8437671	0		=			
ANR	8437768	Identifier	pfg		8437671	0					
ANR	8437769	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8437671	1					
ANR	8437770	Callee	pl_font_lookup_glyph		8437671	0					
ANR	8437771	Identifier	pl_font_lookup_glyph		8437671	0					
ANR	8437772	ArgumentList	plfont		8437671	1					
ANR	8437773	Argument	plfont		8437671	0					
ANR	8437774	Identifier	plfont		8437671	0					
ANR	8437775	Argument	glyph		8437671	1					
ANR	8437776	Identifier	glyph		8437671	0					
ANR	8437777	IfStatement	if ( ! pfg -> data )		8437671	9					
ANR	8437778	Condition	! pfg -> data	911:8:31442:31451	8437671	0	True				
ANR	8437779	UnaryOperationExpression	! pfg -> data		8437671	0					
ANR	8437780	UnaryOperator	!		8437671	0					
ANR	8437781	PtrMemberAccess	pfg -> data		8437671	1					
ANR	8437782	Identifier	pfg		8437671	0					
ANR	8437783	Identifier	data		8437671	1					
ANR	8437784	CompoundStatement		21:8:834:893	8437671	1					
ANR	8437785	IdentifierDeclStatement	"gs_char galley_char = pl_font_galley_character ( chr , plfont ) ;"	912:8:31464:31523	8437671	0	True				
ANR	8437786	IdentifierDecl	"galley_char = pl_font_galley_character ( chr , plfont )"		8437671	0					
ANR	8437787	IdentifierDeclType	gs_char		8437671	0					
ANR	8437788	Identifier	galley_char		8437671	1					
ANR	8437789	AssignmentExpression	"galley_char = pl_font_galley_character ( chr , plfont )"		8437671	2		=			
ANR	8437790	Identifier	galley_char		8437671	0					
ANR	8437791	CallExpression	"pl_font_galley_character ( chr , plfont )"		8437671	1					
ANR	8437792	Callee	pl_font_galley_character		8437671	0					
ANR	8437793	Identifier	pl_font_galley_character		8437671	0					
ANR	8437794	ArgumentList	chr		8437671	1					
ANR	8437795	Argument	chr		8437671	0					
ANR	8437796	Identifier	chr		8437671	0					
ANR	8437797	Argument	plfont		8437671	1					
ANR	8437798	Identifier	plfont		8437671	0					
ANR	8437799	IfStatement	if ( galley_char != gs_no_char )		8437671	1					
ANR	8437800	Condition	galley_char != gs_no_char	913:12:31537:31561	8437671	0	True				
ANR	8437801	EqualityExpression	galley_char != gs_no_char		8437671	0		!=			
ANR	8437802	Identifier	galley_char		8437671	0					
ANR	8437803	Identifier	gs_no_char		8437671	1					
ANR	8437804	CompoundStatement		22:39:934:934	8437671	1					
ANR	8437805	ReturnStatement	"return ( galley_char == 0xffff ? 0 : cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , galley_char ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char ) ) ;"	914:12:31578:31854	8437671	0	True				
ANR	8437806	ConditionalExpression	"galley_char == 0xffff ? 0 : cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , galley_char ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char )"		8437671	0					
ANR	8437807	Condition	galley_char == 0xffff		8437671	0					
ANR	8437808	EqualityExpression	galley_char == 0xffff		8437671	0		==			
ANR	8437809	Identifier	galley_char		8437671	0					
ANR	8437810	PrimaryExpression	0xffff		8437671	1					
ANR	8437811	PrimaryExpression	0		8437671	1					
ANR	8437812	ConditionalExpression	"cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , galley_char ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char )"		8437671	2					
ANR	8437813	Condition	cmap_offset == 0		8437671	0					
ANR	8437814	EqualityExpression	cmap_offset == 0		8437671	0		==			
ANR	8437815	Identifier	cmap_offset		8437671	0					
ANR	8437816	PrimaryExpression	0		8437671	1					
ANR	8437817	CallExpression	"pl_tt_dynamic_encode_char ( pfont , galley_char )"		8437671	1					
ANR	8437818	Callee	pl_tt_dynamic_encode_char		8437671	0					
ANR	8437819	Identifier	pl_tt_dynamic_encode_char		8437671	0					
ANR	8437820	ArgumentList	pfont		8437671	1					
ANR	8437821	Argument	pfont		8437671	0					
ANR	8437822	Identifier	pfont		8437671	0					
ANR	8437823	Argument	galley_char		8437671	1					
ANR	8437824	Identifier	galley_char		8437671	0					
ANR	8437825	CallExpression	"pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char )"		8437671	2					
ANR	8437826	Callee	pl_tt_cmap_encode_char		8437671	0					
ANR	8437827	Identifier	pl_tt_cmap_encode_char		8437671	0					
ANR	8437828	ArgumentList	pfont		8437671	1					
ANR	8437829	Argument	pfont		8437671	0					
ANR	8437830	Identifier	pfont		8437671	0					
ANR	8437831	Argument	cmap_offset		8437671	1					
ANR	8437832	Identifier	cmap_offset		8437671	0					
ANR	8437833	Argument	cmap_len		8437671	2					
ANR	8437834	Identifier	cmap_len		8437671	0					
ANR	8437835	Argument	galley_char		8437671	3					
ANR	8437836	Identifier	galley_char		8437671	0					
ANR	8437837	ReturnStatement	return glyph ;	922:4:31876:31888	8437671	10	True				
ANR	8437838	Identifier	glyph		8437671	0					
ANR	8437839	ReturnType	gs_glyph		8437671	1					
ANR	8437840	Identifier	pl_tt_encode_char		8437671	2					
ANR	8437841	ParameterList	"gs_font * pfont_generic , gs_char chr , gs_glyph_space_t not_used"		8437671	3					
ANR	8437842	Parameter	gs_font * pfont_generic	890:18:30546:30568	8437671	0	True				
ANR	8437843	ParameterType	gs_font *		8437671	0					
ANR	8437844	Identifier	pfont_generic		8437671	1					
ANR	8437845	Parameter	gs_char chr	890:43:30571:30581	8437671	1	True				
ANR	8437846	ParameterType	gs_char		8437671	0					
ANR	8437847	Identifier	chr		8437671	1					
ANR	8437848	Parameter	gs_glyph_space_t not_used	891:18:30602:30626	8437671	2	True				
ANR	8437849	ParameterType	gs_glyph_space_t		8437671	0					
ANR	8437850	Identifier	not_used		8437671	1					
ANR	8437851	CFGEntryNode	ENTRY		8437671		True				
ANR	8437852	CFGExitNode	EXIT		8437671		True				
ANR	8437853	Symbol	& cmap_len		8437671						
ANR	8437854	Symbol	pl_font_lookup_glyph		8437671						
ANR	8437855	Symbol	galley_char		8437671						
ANR	8437856	Symbol	pfont_generic		8437671						
ANR	8437857	Symbol	tt_find_table		8437671						
ANR	8437858	Symbol	plfont		8437671						
ANR	8437859	Symbol	not_used		8437671						
ANR	8437860	Symbol	plfont -> last_char		8437671						
ANR	8437861	Symbol	cmap_len		8437671						
ANR	8437862	Symbol	* pfg		8437671						
ANR	8437863	Symbol	gs_no_char		8437671						
ANR	8437864	Symbol	pfont		8437671						
ANR	8437865	Symbol	chr		8437671						
ANR	8437866	Symbol	plfont -> offsets		8437671						
ANR	8437867	Symbol	pl_font_galley_character		8437671						
ANR	8437868	Symbol	pfont -> client_data		8437671						
ANR	8437869	Symbol	pfg		8437671						
ANR	8437870	Symbol	glyph		8437671						
ANR	8437871	Symbol	* pfont		8437671						
ANR	8437872	Symbol	pl_tt_cmap_encode_char		8437671						
ANR	8437873	Symbol	cmap_offset		8437671						
ANR	8437874	Symbol	* plfont		8437671						
ANR	8437875	Symbol	pfg -> data		8437671						
ANR	8437876	Symbol	pl_tt_dynamic_encode_char		8437671						
ANR	8437877	Symbol	plfont -> offsets . GC		8437671						
ANR	8437878	Function	pl_tt_char_metrics	926:0:31945:32378							
ANR	8437879	FunctionDef	"pl_tt_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8437878	0					
ANR	8437880	CompoundStatement		929:0:32074:32378	8437878	0					
ANR	8437881	IdentifierDeclStatement	gs_glyph unused_glyph = GS_NO_GLYPH ;	930:4:32080:32115	8437878	0	True				
ANR	8437882	IdentifierDecl	unused_glyph = GS_NO_GLYPH		8437878	0					
ANR	8437883	IdentifierDeclType	gs_glyph		8437878	0					
ANR	8437884	Identifier	unused_glyph		8437878	1					
ANR	8437885	AssignmentExpression	unused_glyph = GS_NO_GLYPH		8437878	2		=			
ANR	8437886	Identifier	GS_NO_GLYPH		8437878	0					
ANR	8437887	Identifier	GS_NO_GLYPH		8437878	1					
ANR	8437888	IdentifierDeclStatement	"gs_glyph glyph = pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph ) ;"	931:4:32121:32203	8437878	1	True				
ANR	8437889	IdentifierDecl	"glyph = pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph )"		8437878	0					
ANR	8437890	IdentifierDeclType	gs_glyph		8437878	0					
ANR	8437891	Identifier	glyph		8437878	1					
ANR	8437892	AssignmentExpression	"glyph = pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph )"		8437878	2		=			
ANR	8437893	Identifier	glyph		8437878	0					
ANR	8437894	CallExpression	"pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph )"		8437878	1					
ANR	8437895	Callee	pl_tt_encode_char		8437878	0					
ANR	8437896	Identifier	pl_tt_encode_char		8437878	0					
ANR	8437897	ArgumentList	plfont -> pfont		8437878	1					
ANR	8437898	Argument	plfont -> pfont		8437878	0					
ANR	8437899	PtrMemberAccess	plfont -> pfont		8437878	0					
ANR	8437900	Identifier	plfont		8437878	0					
ANR	8437901	Identifier	pfont		8437878	1					
ANR	8437902	Argument	char_code		8437878	1					
ANR	8437903	Identifier	char_code		8437878	0					
ANR	8437904	Argument	unused_glyph		8437878	2					
ANR	8437905	Identifier	unused_glyph		8437878	0					
ANR	8437906	IfStatement	if ( glyph == GS_NO_GLYPH )		8437878	2					
ANR	8437907	Condition	glyph == GS_NO_GLYPH	933:8:32213:32232	8437878	0	True				
ANR	8437908	EqualityExpression	glyph == GS_NO_GLYPH		8437878	0		==			
ANR	8437909	Identifier	glyph		8437878	0					
ANR	8437910	Identifier	GS_NO_GLYPH		8437878	1					
ANR	8437911	CompoundStatement		5:30:160:160	8437878	1					
ANR	8437912	ReturnStatement	return 1 ;	934:8:32245:32253	8437878	0	True				
ANR	8437913	PrimaryExpression	1		8437878	0					
ANR	8437914	ReturnStatement	"return gs_type42_get_metrics ( ( gs_font_type42 * ) plfont -> pfont , glyph , metrics ) ;"	936:4:32265:32376	8437878	3	True				
ANR	8437915	CallExpression	"gs_type42_get_metrics ( ( gs_font_type42 * ) plfont -> pfont , glyph , metrics )"		8437878	0					
ANR	8437916	Callee	gs_type42_get_metrics		8437878	0					
ANR	8437917	Identifier	gs_type42_get_metrics		8437878	0					
ANR	8437918	ArgumentList	( gs_font_type42 * ) plfont -> pfont		8437878	1					
ANR	8437919	Argument	( gs_font_type42 * ) plfont -> pfont		8437878	0					
ANR	8437920	CastExpression	( gs_font_type42 * ) plfont -> pfont		8437878	0					
ANR	8437921	CastTarget	gs_font_type42 *		8437878	0					
ANR	8437922	PtrMemberAccess	plfont -> pfont		8437878	1					
ANR	8437923	Identifier	plfont		8437878	0					
ANR	8437924	Identifier	pfont		8437878	1					
ANR	8437925	Argument	glyph		8437878	1					
ANR	8437926	Identifier	glyph		8437878	0					
ANR	8437927	Argument	metrics		8437878	2					
ANR	8437928	Identifier	metrics		8437878	0					
ANR	8437929	ReturnType	static int		8437878	1					
ANR	8437930	Identifier	pl_tt_char_metrics		8437878	2					
ANR	8437931	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8437878	3					
ANR	8437932	Parameter	const pl_font_t * plfont	927:19:31975:31998	8437878	0	True				
ANR	8437933	ParameterType	const pl_font_t *		8437878	0					
ANR	8437934	Identifier	plfont		8437878	1					
ANR	8437935	Parameter	const void * pgs	927:45:32001:32015	8437878	1	True				
ANR	8437936	ParameterType	const void *		8437878	0					
ANR	8437937	Identifier	pgs		8437878	1					
ANR	8437938	Parameter	gs_char char_code	928:19:32037:32053	8437878	2	True				
ANR	8437939	ParameterType	gs_char		8437878	0					
ANR	8437940	Identifier	char_code		8437878	1					
ANR	8437941	Parameter	float metrics [ 4 ]	928:38:32056:32071	8437878	3	True				
ANR	8437942	ParameterType	float [ 4 ]		8437878	0					
ANR	8437943	Identifier	metrics		8437878	1					
ANR	8437944	CFGEntryNode	ENTRY		8437878		True				
ANR	8437945	CFGExitNode	EXIT		8437878		True				
ANR	8437946	Symbol	gs_type42_get_metrics		8437878						
ANR	8437947	Symbol	GS_NO_GLYPH		8437878						
ANR	8437948	Symbol	glyph		8437878						
ANR	8437949	Symbol	plfont -> pfont		8437878						
ANR	8437950	Symbol	pl_tt_encode_char		8437878						
ANR	8437951	Symbol	unused_glyph		8437878						
ANR	8437952	Symbol	* plfont		8437878						
ANR	8437953	Symbol	char_code		8437878						
ANR	8437954	Symbol	plfont		8437878						
ANR	8437955	Symbol	metrics		8437878						
ANR	8437956	Symbol	pgs		8437878						
ANR	8437957	Function	pl_tt_char_width	941:0:32447:33299							
ANR	8437958	FunctionDef	"pl_tt_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8437957	0					
ANR	8437959	CompoundStatement		944:0:32573:33299	8437957	0					
ANR	8437960	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	945:4:32579:32609	8437957	0	True				
ANR	8437961	IdentifierDecl	* pfont = plfont -> pfont		8437957	0					
ANR	8437962	IdentifierDeclType	gs_font *		8437957	0					
ANR	8437963	Identifier	pfont		8437957	1					
ANR	8437964	AssignmentExpression	* pfont = plfont -> pfont		8437957	2		=			
ANR	8437965	Identifier	pfont		8437957	0					
ANR	8437966	PtrMemberAccess	plfont -> pfont		8437957	1					
ANR	8437967	Identifier	plfont		8437957	0					
ANR	8437968	Identifier	pfont		8437957	1					
ANR	8437969	IdentifierDeclStatement	gs_char chr = char_code ;	946:4:32615:32638	8437957	1	True				
ANR	8437970	IdentifierDecl	chr = char_code		8437957	0					
ANR	8437971	IdentifierDeclType	gs_char		8437957	0					
ANR	8437972	Identifier	chr		8437957	1					
ANR	8437973	AssignmentExpression	chr = char_code		8437957	2		=			
ANR	8437974	Identifier	char_code		8437957	0					
ANR	8437975	Identifier	char_code		8437957	1					
ANR	8437976	IdentifierDeclStatement	gs_glyph unused_glyph = GS_NO_GLYPH ;	947:4:32644:32679	8437957	2	True				
ANR	8437977	IdentifierDecl	unused_glyph = GS_NO_GLYPH		8437957	0					
ANR	8437978	IdentifierDeclType	gs_glyph		8437957	0					
ANR	8437979	Identifier	unused_glyph		8437957	1					
ANR	8437980	AssignmentExpression	unused_glyph = GS_NO_GLYPH		8437957	2		=			
ANR	8437981	Identifier	GS_NO_GLYPH		8437957	0					
ANR	8437982	Identifier	GS_NO_GLYPH		8437957	1					
ANR	8437983	IdentifierDeclStatement	"gs_glyph glyph = pl_tt_encode_char ( pfont , chr , unused_glyph ) ;"	948:4:32685:32745	8437957	3	True				
ANR	8437984	IdentifierDecl	"glyph = pl_tt_encode_char ( pfont , chr , unused_glyph )"		8437957	0					
ANR	8437985	IdentifierDeclType	gs_glyph		8437957	0					
ANR	8437986	Identifier	glyph		8437957	1					
ANR	8437987	AssignmentExpression	"glyph = pl_tt_encode_char ( pfont , chr , unused_glyph )"		8437957	2		=			
ANR	8437988	Identifier	glyph		8437957	0					
ANR	8437989	CallExpression	"pl_tt_encode_char ( pfont , chr , unused_glyph )"		8437957	1					
ANR	8437990	Callee	pl_tt_encode_char		8437957	0					
ANR	8437991	Identifier	pl_tt_encode_char		8437957	0					
ANR	8437992	ArgumentList	pfont		8437957	1					
ANR	8437993	Argument	pfont		8437957	0					
ANR	8437994	Identifier	pfont		8437957	0					
ANR	8437995	Argument	chr		8437957	1					
ANR	8437996	Identifier	chr		8437957	0					
ANR	8437997	Argument	unused_glyph		8437957	2					
ANR	8437998	Identifier	unused_glyph		8437957	0					
ANR	8437999	IdentifierDeclStatement	int code ;	949:4:32751:32759	8437957	4	True				
ANR	8438000	IdentifierDecl	code		8437957	0					
ANR	8438001	IdentifierDeclType	int		8437957	0					
ANR	8438002	Identifier	code		8437957	1					
ANR	8438003	IdentifierDeclStatement	float sbw [ 4 ] ;	950:4:32765:32777	8437957	5	True				
ANR	8438004	IdentifierDecl	sbw [ 4 ]		8437957	0					
ANR	8438005	IdentifierDeclType	float [ 4 ]		8437957	0					
ANR	8438006	Identifier	sbw		8437957	1					
ANR	8438007	PrimaryExpression	4		8437957	2					
ANR	8438008	ExpressionStatement	pwidth -> x = pwidth -> y = 0	952:4:32784:32809	8437957	6	True				
ANR	8438009	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8437957	0		=			
ANR	8438010	PtrMemberAccess	pwidth -> x		8437957	0					
ANR	8438011	Identifier	pwidth		8437957	0					
ANR	8438012	Identifier	x		8437957	1					
ANR	8438013	AssignmentExpression	pwidth -> y = 0		8437957	1		=			
ANR	8438014	PtrMemberAccess	pwidth -> y		8437957	0					
ANR	8438015	Identifier	pwidth		8437957	0					
ANR	8438016	Identifier	y		8437957	1					
ANR	8438017	PrimaryExpression	0		8437957	1					
ANR	8438018	IfStatement	if ( pfont -> WMode & 1 )		8437957	7					
ANR	8438019	Condition	pfont -> WMode & 1	955:8:32863:32878	8437957	0	True				
ANR	8438020	BitAndExpression	pfont -> WMode & 1		8437957	0		&			
ANR	8438021	PtrMemberAccess	pfont -> WMode		8437957	0					
ANR	8438022	Identifier	pfont		8437957	0					
ANR	8438023	Identifier	WMode		8437957	1					
ANR	8438024	PrimaryExpression	1		8437957	1					
ANR	8438025	CompoundStatement		13:8:317:374	8437957	1					
ANR	8438026	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph , plfont ) ;"	956:8:32891:32948	8437957	0	True				
ANR	8438027	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8437957	0					
ANR	8438028	IdentifierDeclType	gs_glyph		8437957	0					
ANR	8438029	Identifier	vertical		8437957	1					
ANR	8438030	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8437957	2		=			
ANR	8438031	Identifier	vertical		8437957	0					
ANR	8438032	CallExpression	"pl_font_vertical_glyph ( glyph , plfont )"		8437957	1					
ANR	8438033	Callee	pl_font_vertical_glyph		8437957	0					
ANR	8438034	Identifier	pl_font_vertical_glyph		8437957	0					
ANR	8438035	ArgumentList	glyph		8437957	1					
ANR	8438036	Argument	glyph		8437957	0					
ANR	8438037	Identifier	glyph		8437957	0					
ANR	8438038	Argument	plfont		8437957	1					
ANR	8438039	Identifier	plfont		8437957	0					
ANR	8438040	IfStatement	if ( vertical != GS_NO_GLYPH )		8437957	1					
ANR	8438041	Condition	vertical != GS_NO_GLYPH	958:12:32963:32985	8437957	0	True				
ANR	8438042	EqualityExpression	vertical != GS_NO_GLYPH		8437957	0		!=			
ANR	8438043	Identifier	vertical		8437957	0					
ANR	8438044	Identifier	GS_NO_GLYPH		8437957	1					
ANR	8438045	ExpressionStatement	glyph = vertical	959:12:33000:33016	8437957	1	True				
ANR	8438046	AssignmentExpression	glyph = vertical		8437957	0		=			
ANR	8438047	Identifier	glyph		8437957	0					
ANR	8438048	Identifier	vertical		8437957	1					
ANR	8438049	IfStatement	if ( glyph == 0xffff || glyph == GS_NO_GLYPH )		8437957	8					
ANR	8438050	Condition	glyph == 0xffff || glyph == GS_NO_GLYPH	963:8:33063:33101	8437957	0	True				
ANR	8438051	OrExpression	glyph == 0xffff || glyph == GS_NO_GLYPH		8437957	0		||			
ANR	8438052	EqualityExpression	glyph == 0xffff		8437957	0		==			
ANR	8438053	Identifier	glyph		8437957	0					
ANR	8438054	PrimaryExpression	0xffff		8437957	1					
ANR	8438055	EqualityExpression	glyph == GS_NO_GLYPH		8437957	1		==			
ANR	8438056	Identifier	glyph		8437957	0					
ANR	8438057	Identifier	GS_NO_GLYPH		8437957	1					
ANR	8438058	ReturnStatement	return 1 ;	964:8:33112:33120	8437957	1	True				
ANR	8438059	PrimaryExpression	1		8437957	0					
ANR	8438060	ExpressionStatement	"code = gs_type42_get_metrics ( ( gs_font_type42 * ) pfont , glyph , sbw )"	966:4:33127:33193	8437957	9	True				
ANR	8438061	AssignmentExpression	"code = gs_type42_get_metrics ( ( gs_font_type42 * ) pfont , glyph , sbw )"		8437957	0		=			
ANR	8438062	Identifier	code		8437957	0					
ANR	8438063	CallExpression	"gs_type42_get_metrics ( ( gs_font_type42 * ) pfont , glyph , sbw )"		8437957	1					
ANR	8438064	Callee	gs_type42_get_metrics		8437957	0					
ANR	8438065	Identifier	gs_type42_get_metrics		8437957	0					
ANR	8438066	ArgumentList	( gs_font_type42 * ) pfont		8437957	1					
ANR	8438067	Argument	( gs_font_type42 * ) pfont		8437957	0					
ANR	8438068	CastExpression	( gs_font_type42 * ) pfont		8437957	0					
ANR	8438069	CastTarget	gs_font_type42 *		8437957	0					
ANR	8438070	Identifier	pfont		8437957	1					
ANR	8438071	Argument	glyph		8437957	1					
ANR	8438072	Identifier	glyph		8437957	0					
ANR	8438073	Argument	sbw		8437957	2					
ANR	8438074	Identifier	sbw		8437957	0					
ANR	8438075	IfStatement	if ( code < 0 )		8437957	10					
ANR	8438076	Condition	code < 0	967:8:33203:33210	8437957	0	True				
ANR	8438077	RelationalExpression	code < 0		8437957	0		<			
ANR	8438078	Identifier	code		8437957	0					
ANR	8438079	PrimaryExpression	0		8437957	1					
ANR	8438080	ReturnStatement	return code ;	968:8:33221:33232	8437957	1	True				
ANR	8438081	Identifier	code		8437957	0					
ANR	8438082	ExpressionStatement	pwidth -> x = sbw [ 2 ]	970:4:33265:33283	8437957	11	True				
ANR	8438083	AssignmentExpression	pwidth -> x = sbw [ 2 ]		8437957	0		=			
ANR	8438084	PtrMemberAccess	pwidth -> x		8437957	0					
ANR	8438085	Identifier	pwidth		8437957	0					
ANR	8438086	Identifier	x		8437957	1					
ANR	8438087	ArrayIndexing	sbw [ 2 ]		8437957	1					
ANR	8438088	Identifier	sbw		8437957	0					
ANR	8438089	PrimaryExpression	2		8437957	1					
ANR	8438090	ReturnStatement	return 0 ;	971:4:33289:33297	8437957	12	True				
ANR	8438091	PrimaryExpression	0		8437957	0					
ANR	8438092	ReturnType	static int		8437957	1					
ANR	8438093	Identifier	pl_tt_char_width		8437957	2					
ANR	8438094	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8437957	3					
ANR	8438095	Parameter	const pl_font_t * plfont	942:17:32475:32498	8437957	0	True				
ANR	8438096	ParameterType	const pl_font_t *		8437957	0					
ANR	8438097	Identifier	plfont		8437957	1					
ANR	8438098	Parameter	const void * pgs	942:43:32501:32515	8437957	1	True				
ANR	8438099	ParameterType	const void *		8437957	0					
ANR	8438100	Identifier	pgs		8437957	1					
ANR	8438101	Parameter	gs_char char_code	942:60:32518:32534	8437957	2	True				
ANR	8438102	ParameterType	gs_char		8437957	0					
ANR	8438103	Identifier	char_code		8437957	1					
ANR	8438104	Parameter	gs_point * pwidth	943:17:32554:32570	8437957	3	True				
ANR	8438105	ParameterType	gs_point *		8437957	0					
ANR	8438106	Identifier	pwidth		8437957	1					
ANR	8438107	CFGEntryNode	ENTRY		8437957		True				
ANR	8438108	CFGExitNode	EXIT		8437957		True				
ANR	8438109	Symbol	code		8437957						
ANR	8438110	Symbol	pfont		8437957						
ANR	8438111	Symbol	pl_tt_encode_char		8437957						
ANR	8438112	Symbol	unused_glyph		8437957						
ANR	8438113	Symbol	pwidth -> y		8437957						
ANR	8438114	Symbol	char_code		8437957						
ANR	8438115	Symbol	sbw		8437957						
ANR	8438116	Symbol	pwidth		8437957						
ANR	8438117	Symbol	vertical		8437957						
ANR	8438118	Symbol	plfont		8437957						
ANR	8438119	Symbol	chr		8437957						
ANR	8438120	Symbol	pwidth -> x		8437957						
ANR	8438121	Symbol	gs_type42_get_metrics		8437957						
ANR	8438122	Symbol	GS_NO_GLYPH		8437957						
ANR	8438123	Symbol	glyph		8437957						
ANR	8438124	Symbol	pfont -> WMode		8437957						
ANR	8438125	Symbol	* pfont		8437957						
ANR	8438126	Symbol	* sbw		8437957						
ANR	8438127	Symbol	plfont -> pfont		8437957						
ANR	8438128	Symbol	* plfont		8437957						
ANR	8438129	Symbol	* pwidth		8437957						
ANR	8438130	Symbol	pl_font_vertical_glyph		8437957						
ANR	8438131	Symbol	pgs		8437957						
ANR	8438132	Function	pl_tt_build_char	975:0:33337:41414							
ANR	8438133	FunctionDef	"pl_tt_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph orig_glyph)"		8438132	0					
ANR	8438134	CompoundStatement		978:0:33472:41414	8438132	0					
ANR	8438135	IdentifierDeclStatement	gs_glyph glyph = orig_glyph ;	979:4:33478:33505	8438132	0	True				
ANR	8438136	IdentifierDecl	glyph = orig_glyph		8438132	0					
ANR	8438137	IdentifierDeclType	gs_glyph		8438132	0					
ANR	8438138	Identifier	glyph		8438132	1					
ANR	8438139	AssignmentExpression	glyph = orig_glyph		8438132	2		=			
ANR	8438140	Identifier	orig_glyph		8438132	0					
ANR	8438141	Identifier	orig_glyph		8438132	1					
ANR	8438142	Statement	define	981:1:33509:33514	8438132	1	True				
ANR	8438143	Statement	pbfont	981:8:33516:33521	8438132	2	True				
ANR	8438144	Statement	(	981:15:33523:33523	8438132	3	True				
ANR	8438145	Statement	(	981:16:33524:33524	8438132	4	True				
ANR	8438146	Statement	gs_font_base	981:17:33525:33536	8438132	5	True				
ANR	8438147	Statement	*	981:30:33538:33538	8438132	6	True				
ANR	8438148	Statement	)	981:31:33539:33539	8438132	7	True				
ANR	8438149	Statement	pfont	981:32:33540:33544	8438132	8	True				
ANR	8438150	Statement	)	981:37:33545:33545	8438132	9	True				
ANR	8438151	Statement	define	982:1:33548:33553	8438132	10	True				
ANR	8438152	Statement	pfont42	982:8:33555:33561	8438132	11	True				
ANR	8438153	Statement	(	982:16:33563:33563	8438132	12	True				
ANR	8438154	Statement	(	982:17:33564:33564	8438132	13	True				
ANR	8438155	Statement	gs_font_type42	982:18:33565:33578	8438132	14	True				
ANR	8438156	Statement	*	982:33:33580:33580	8438132	15	True				
ANR	8438157	Statement	)	982:34:33581:33581	8438132	16	True				
ANR	8438158	Statement	pfont	982:35:33582:33586	8438132	17	True				
ANR	8438159	Statement	)	982:40:33587:33587	8438132	18	True				
ANR	8438160	IdentifierDeclStatement	int code ;	983:4:33593:33601	8438132	19	True				
ANR	8438161	IdentifierDecl	code		8438132	0					
ANR	8438162	IdentifierDeclType	int		8438132	0					
ANR	8438163	Identifier	code		8438132	1					
ANR	8438164	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	984:4:33607:33659	8438132	20	True				
ANR	8438165	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8438132	0					
ANR	8438166	IdentifierDeclType	pl_font_t *		8438132	0					
ANR	8438167	Identifier	plfont		8438132	1					
ANR	8438168	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8438132	2		=			
ANR	8438169	Identifier	plfont		8438132	0					
ANR	8438170	CastExpression	( pl_font_t * ) pfont -> client_data		8438132	1					
ANR	8438171	CastTarget	pl_font_t *		8438132	0					
ANR	8438172	PtrMemberAccess	pfont -> client_data		8438132	1					
ANR	8438173	Identifier	pfont		8438132	0					
ANR	8438174	Identifier	client_data		8438132	1					
ANR	8438175	IdentifierDeclStatement	float bold_fraction = gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction ;	985:4:33665:33763	8438132	21	True				
ANR	8438176	IdentifierDecl	bold_fraction = gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction		8438132	0					
ANR	8438177	IdentifierDeclType	float		8438132	0					
ANR	8438178	Identifier	bold_fraction		8438132	1					
ANR	8438179	AssignmentExpression	bold_fraction = gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction		8438132	2		=			
ANR	8438180	Identifier	bold_fraction		8438132	0					
ANR	8438181	ConditionalExpression	gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction		8438132	1					
ANR	8438182	Condition	gs_show_in_charpath ( penum ) != cpm_show		8438132	0					
ANR	8438183	EqualityExpression	gs_show_in_charpath ( penum ) != cpm_show		8438132	0		!=			
ANR	8438184	CallExpression	gs_show_in_charpath ( penum )		8438132	0					
ANR	8438185	Callee	gs_show_in_charpath		8438132	0					
ANR	8438186	Identifier	gs_show_in_charpath		8438132	0					
ANR	8438187	ArgumentList	penum		8438132	1					
ANR	8438188	Argument	penum		8438132	0					
ANR	8438189	Identifier	penum		8438132	0					
ANR	8438190	Identifier	cpm_show		8438132	1					
ANR	8438191	PrimaryExpression	0.0		8438132	1					
ANR	8438192	PtrMemberAccess	plfont -> bold_fraction		8438132	2					
ANR	8438193	Identifier	plfont		8438132	0					
ANR	8438194	Identifier	bold_fraction		8438132	1					
ANR	8438195	IdentifierDeclStatement	uint bold_added ;	987:4:33769:33784	8438132	22	True				
ANR	8438196	IdentifierDecl	bold_added		8438132	0					
ANR	8438197	IdentifierDeclType	uint		8438132	0					
ANR	8438198	Identifier	bold_added		8438132	1					
ANR	8438199	IdentifierDeclStatement	double scale = 1.0 ;	988:4:33790:33808	8438132	23	True				
ANR	8438200	IdentifierDecl	scale = 1.0		8438132	0					
ANR	8438201	IdentifierDeclType	double		8438132	0					
ANR	8438202	Identifier	scale		8438132	1					
ANR	8438203	AssignmentExpression	scale = 1.0		8438132	2		=			
ANR	8438204	Identifier	scale		8438132	0					
ANR	8438205	PrimaryExpression	1.0		8438132	1					
ANR	8438206	IdentifierDeclStatement	"float sbw [ 4 ] , w2 [ 6 ] ;"	989:4:33814:33833	8438132	24	True				
ANR	8438207	IdentifierDecl	sbw [ 4 ]		8438132	0					
ANR	8438208	IdentifierDeclType	float [ 4 ]		8438132	0					
ANR	8438209	Identifier	sbw		8438132	1					
ANR	8438210	PrimaryExpression	4		8438132	2					
ANR	8438211	IdentifierDecl	w2 [ 6 ]		8438132	1					
ANR	8438212	IdentifierDeclType	float [ 6 ]		8438132	0					
ANR	8438213	Identifier	w2		8438132	1					
ANR	8438214	PrimaryExpression	6		8438132	2					
ANR	8438215	IdentifierDeclStatement	int ipx = 0 ;	990:4:33839:33850	8438132	25	True				
ANR	8438216	IdentifierDecl	ipx = 0		8438132	0					
ANR	8438217	IdentifierDeclType	int		8438132	0					
ANR	8438218	Identifier	ipx		8438132	1					
ANR	8438219	AssignmentExpression	ipx = 0		8438132	2		=			
ANR	8438220	Identifier	ipx		8438132	0					
ANR	8438221	PrimaryExpression	0		8438132	1					
ANR	8438222	IdentifierDeclStatement	int ipy = 0 ;	991:4:33856:33867	8438132	26	True				
ANR	8438223	IdentifierDecl	ipy = 0		8438132	0					
ANR	8438224	IdentifierDeclType	int		8438132	0					
ANR	8438225	Identifier	ipy		8438132	1					
ANR	8438226	AssignmentExpression	ipy = 0		8438132	2		=			
ANR	8438227	Identifier	ipy		8438132	0					
ANR	8438228	PrimaryExpression	0		8438132	1					
ANR	8438229	IdentifierDeclStatement	"int iqx , iqy ;"	992:4:33873:33885	8438132	27	True				
ANR	8438230	IdentifierDecl	iqx		8438132	0					
ANR	8438231	IdentifierDeclType	int		8438132	0					
ANR	8438232	Identifier	iqx		8438132	1					
ANR	8438233	IdentifierDecl	iqy		8438132	1					
ANR	8438234	IdentifierDeclType	int		8438132	0					
ANR	8438235	Identifier	iqy		8438132	1					
ANR	8438236	IdentifierDeclStatement	gx_device_memory * pmdev ;	993:4:33891:33914	8438132	28	True				
ANR	8438237	IdentifierDecl	* pmdev		8438132	0					
ANR	8438238	IdentifierDeclType	gx_device_memory *		8438132	0					
ANR	8438239	Identifier	pmdev		8438132	1					
ANR	8438240	IdentifierDeclStatement	bool ctm_modified = false ;	994:4:33920:33945	8438132	29	True				
ANR	8438241	IdentifierDecl	ctm_modified = false		8438132	0					
ANR	8438242	IdentifierDeclType	bool		8438132	0					
ANR	8438243	Identifier	ctm_modified		8438132	1					
ANR	8438244	AssignmentExpression	ctm_modified = false		8438132	2		=			
ANR	8438245	Identifier	false		8438132	0					
ANR	8438246	Identifier	false		8438132	1					
ANR	8438247	IdentifierDeclStatement	bool bold_device_created = false ;	995:4:33951:33983	8438132	30	True				
ANR	8438248	IdentifierDecl	bold_device_created = false		8438132	0					
ANR	8438249	IdentifierDeclType	bool		8438132	0					
ANR	8438250	Identifier	bold_device_created		8438132	1					
ANR	8438251	AssignmentExpression	bold_device_created = false		8438132	2		=			
ANR	8438252	Identifier	false		8438132	0					
ANR	8438253	Identifier	false		8438132	1					
ANR	8438254	IdentifierDeclStatement	gs_matrix save_ctm ;	996:4:33989:34007	8438132	31	True				
ANR	8438255	IdentifierDecl	save_ctm		8438132	0					
ANR	8438256	IdentifierDeclType	gs_matrix		8438132	0					
ANR	8438257	Identifier	save_ctm		8438132	1					
ANR	8438258	Statement	define	998:1:34011:34016	8438132	32	True				
ANR	8438259	Statement	isDownloaded	998:8:34018:34029	8438132	33	True				
ANR	8438260	Statement	(	998:20:34030:34030	8438132	34	True				
ANR	8438261	Statement	p42	998:21:34031:34033	8438132	35	True				
ANR	8438262	Statement	)	998:24:34034:34034	8438132	36	True				
ANR	8438263	Statement	(	998:26:34036:34036	8438132	37	True				
ANR	8438264	Statement	(	998:27:34037:34037	8438132	38	True				
ANR	8438265	Statement	p42	998:28:34038:34040	8438132	39	True				
ANR	8438266	Statement	)	998:31:34041:34041	8438132	40	True				
ANR	8438267	Statement	->	998:32:34042:34043	8438132	41	True				
ANR	8438268	Statement	data	998:34:34044:34047	8438132	42	True				
ANR	8438269	Statement	.	998:38:34048:34048	8438132	43	True				
ANR	8438270	Statement	proc_data	998:39:34049:34057	8438132	44	True				
ANR	8438271	Statement	==	998:49:34059:34060	8438132	45	True				
ANR	8438272	Statement	0	998:52:34062:34062	8438132	46	True				
ANR	8438273	Statement	)	998:53:34063:34063	8438132	47	True				
ANR	8438274	Statement	define	1000:3:34096:34101	8438132	48	True				
ANR	8438275	Statement	tt_set_cache	1000:10:34103:34114	8438132	49	True				
ANR	8438276	Statement	(	1000:22:34115:34115	8438132	50	True				
ANR	8438277	Statement	penum	1000:23:34116:34120	8438132	51	True				
ANR	8438278	Statement	","	1000:28:34121:34121	8438132	52	True				
ANR	8438279	Statement	pgs	1000:30:34123:34125	8438132	53	True				
ANR	8438280	Statement	","	1000:33:34126:34126	8438132	54	True				
ANR	8438281	Statement	w2	1000:35:34128:34129	8438132	55	True				
ANR	8438282	Statement	)	1000:37:34130:34130	8438132	56	True				
ANR	8438283	Statement	gs_setcachedevice	1001:5:34138:34154	8438132	57	True				
ANR	8438284	Statement	(	1001:22:34155:34155	8438132	58	True				
ANR	8438285	Statement	penum	1001:23:34156:34160	8438132	59	True				
ANR	8438286	Statement	","	1001:28:34161:34161	8438132	60	True				
ANR	8438287	Statement	pgs	1001:30:34163:34165	8438132	61	True				
ANR	8438288	Statement	","	1001:33:34166:34166	8438132	62	True				
ANR	8438289	Statement	w2	1001:35:34168:34169	8438132	63	True				
ANR	8438290	Statement	)	1001:37:34170:34170	8438132	64	True				
ANR	8438291	IfStatement	if ( glyph == GS_NO_GLYPH )		8438132	65					
ANR	8438292	Condition	glyph == GS_NO_GLYPH	1007:8:34301:34320	8438132	0	True				
ANR	8438293	EqualityExpression	glyph == GS_NO_GLYPH		8438132	0		==			
ANR	8438294	Identifier	glyph		8438132	0					
ANR	8438295	Identifier	GS_NO_GLYPH		8438132	1					
ANR	8438296	ReturnStatement	return 0 ;	1008:8:34331:34339	8438132	1	True				
ANR	8438297	PrimaryExpression	0		8438132	0					
ANR	8438298	ExpressionStatement	"code = gs_type42_get_metrics ( pfont42 , glyph , sbw )"	1010:4:34397:34446	8438132	66	True				
ANR	8438299	AssignmentExpression	"code = gs_type42_get_metrics ( pfont42 , glyph , sbw )"		8438132	0		=			
ANR	8438300	Identifier	code		8438132	0					
ANR	8438301	CallExpression	"gs_type42_get_metrics ( pfont42 , glyph , sbw )"		8438132	1					
ANR	8438302	Callee	gs_type42_get_metrics		8438132	0					
ANR	8438303	Identifier	gs_type42_get_metrics		8438132	0					
ANR	8438304	ArgumentList	pfont42		8438132	1					
ANR	8438305	Argument	pfont42		8438132	0					
ANR	8438306	Identifier	pfont42		8438132	0					
ANR	8438307	Argument	glyph		8438132	1					
ANR	8438308	Identifier	glyph		8438132	0					
ANR	8438309	Argument	sbw		8438132	2					
ANR	8438310	Identifier	sbw		8438132	0					
ANR	8438311	IfStatement	if ( code < 0 )		8438132	67					
ANR	8438312	Condition	code < 0	1011:8:34456:34463	8438132	0	True				
ANR	8438313	RelationalExpression	code < 0		8438132	0		<			
ANR	8438314	Identifier	code		8438132	0					
ANR	8438315	PrimaryExpression	0		8438132	1					
ANR	8438316	ReturnStatement	return code ;	1012:8:34474:34485	8438132	1	True				
ANR	8438317	Identifier	code		8438132	0					
ANR	8438318	ExpressionStatement	"w2 [ 0 ] = sbw [ 2 ] , w2 [ 1 ] = sbw [ 3 ]"	1013:4:34491:34521	8438132	68	True				
ANR	8438319	Expression	"w2 [ 0 ] = sbw [ 2 ] , w2 [ 1 ] = sbw [ 3 ]"		8438132	0					
ANR	8438320	AssignmentExpression	w2 [ 0 ] = sbw [ 2 ]		8438132	0		=			
ANR	8438321	ArrayIndexing	w2 [ 0 ]		8438132	0					
ANR	8438322	Identifier	w2		8438132	0					
ANR	8438323	PrimaryExpression	0		8438132	1					
ANR	8438324	ArrayIndexing	sbw [ 2 ]		8438132	1					
ANR	8438325	Identifier	sbw		8438132	0					
ANR	8438326	PrimaryExpression	2		8438132	1					
ANR	8438327	AssignmentExpression	w2 [ 1 ] = sbw [ 3 ]		8438132	1		=			
ANR	8438328	ArrayIndexing	w2 [ 1 ]		8438132	0					
ANR	8438329	Identifier	w2		8438132	0					
ANR	8438330	PrimaryExpression	1		8438132	1					
ANR	8438331	ArrayIndexing	sbw [ 3 ]		8438132	1					
ANR	8438332	Identifier	sbw		8438132	0					
ANR	8438333	PrimaryExpression	3		8438132	1					
ANR	8438334	CompoundStatement		41:8:1124:1164	8438132	69					
ANR	8438335	IdentifierDeclStatement	const gs_rect * pbbox = & pbfont -> FontBBox ;	1018:8:34597:34637	8438132	0	True				
ANR	8438336	IdentifierDecl	* pbbox = & pbfont -> FontBBox		8438132	0					
ANR	8438337	IdentifierDeclType	const gs_rect *		8438132	0					
ANR	8438338	Identifier	pbbox		8438132	1					
ANR	8438339	AssignmentExpression	* pbbox = & pbfont -> FontBBox		8438132	2		=			
ANR	8438340	Identifier	pbbox		8438132	0					
ANR	8438341	UnaryOperationExpression	& pbfont -> FontBBox		8438132	1					
ANR	8438342	UnaryOperator	&		8438132	0					
ANR	8438343	PtrMemberAccess	pbfont -> FontBBox		8438132	1					
ANR	8438344	Identifier	pbfont		8438132	0					
ANR	8438345	Identifier	FontBBox		8438132	1					
ANR	8438346	ExpressionStatement	"w2 [ 2 ] = pbbox -> p . x , w2 [ 3 ] = pbbox -> p . y"	1020:8:34648:34686	8438132	1	True				
ANR	8438347	Expression	"w2 [ 2 ] = pbbox -> p . x , w2 [ 3 ] = pbbox -> p . y"		8438132	0					
ANR	8438348	AssignmentExpression	w2 [ 2 ] = pbbox -> p . x		8438132	0		=			
ANR	8438349	ArrayIndexing	w2 [ 2 ]		8438132	0					
ANR	8438350	Identifier	w2		8438132	0					
ANR	8438351	PrimaryExpression	2		8438132	1					
ANR	8438352	MemberAccess	pbbox -> p . x		8438132	1					
ANR	8438353	PtrMemberAccess	pbbox -> p		8438132	0					
ANR	8438354	Identifier	pbbox		8438132	0					
ANR	8438355	Identifier	p		8438132	1					
ANR	8438356	Identifier	x		8438132	1					
ANR	8438357	AssignmentExpression	w2 [ 3 ] = pbbox -> p . y		8438132	1		=			
ANR	8438358	ArrayIndexing	w2 [ 3 ]		8438132	0					
ANR	8438359	Identifier	w2		8438132	0					
ANR	8438360	PrimaryExpression	3		8438132	1					
ANR	8438361	MemberAccess	pbbox -> p . y		8438132	1					
ANR	8438362	PtrMemberAccess	pbbox -> p		8438132	0					
ANR	8438363	Identifier	pbbox		8438132	0					
ANR	8438364	Identifier	p		8438132	1					
ANR	8438365	Identifier	y		8438132	1					
ANR	8438366	ExpressionStatement	"w2 [ 4 ] = pbbox -> q . x , w2 [ 5 ] = pbbox -> q . y"	1021:8:34696:34734	8438132	2	True				
ANR	8438367	Expression	"w2 [ 4 ] = pbbox -> q . x , w2 [ 5 ] = pbbox -> q . y"		8438132	0					
ANR	8438368	AssignmentExpression	w2 [ 4 ] = pbbox -> q . x		8438132	0		=			
ANR	8438369	ArrayIndexing	w2 [ 4 ]		8438132	0					
ANR	8438370	Identifier	w2		8438132	0					
ANR	8438371	PrimaryExpression	4		8438132	1					
ANR	8438372	MemberAccess	pbbox -> q . x		8438132	1					
ANR	8438373	PtrMemberAccess	pbbox -> q		8438132	0					
ANR	8438374	Identifier	pbbox		8438132	0					
ANR	8438375	Identifier	q		8438132	1					
ANR	8438376	Identifier	x		8438132	1					
ANR	8438377	AssignmentExpression	w2 [ 5 ] = pbbox -> q . y		8438132	1		=			
ANR	8438378	ArrayIndexing	w2 [ 5 ]		8438132	0					
ANR	8438379	Identifier	w2		8438132	0					
ANR	8438380	PrimaryExpression	5		8438132	1					
ANR	8438381	MemberAccess	pbbox -> q . y		8438132	1					
ANR	8438382	PtrMemberAccess	pbbox -> q		8438132	0					
ANR	8438383	Identifier	pbbox		8438132	0					
ANR	8438384	Identifier	q		8438132	1					
ANR	8438385	Identifier	y		8438132	1					
ANR	8438386	IfStatement	if ( pfont -> PaintType )		8438132	3					
ANR	8438387	Condition	pfont -> PaintType	1022:12:34748:34763	8438132	0	True				
ANR	8438388	PtrMemberAccess	pfont -> PaintType		8438132	0					
ANR	8438389	Identifier	pfont		8438132	0					
ANR	8438390	Identifier	PaintType		8438132	1					
ANR	8438391	CompoundStatement		46:12:1307:1407	8438132	1					
ANR	8438392	IdentifierDeclStatement	"double expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2 ;"	1023:12:34780:34880	8438132	0	True				
ANR	8438393	IdentifierDecl	"expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8438132	0					
ANR	8438394	IdentifierDeclType	double		8438132	0					
ANR	8438395	Identifier	expand		8438132	1					
ANR	8438396	AssignmentExpression	"expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8438132	2		=			
ANR	8438397	Identifier	expand		8438132	0					
ANR	8438398	MultiplicativeExpression	"max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8438132	1		*			
ANR	8438399	CallExpression	"max ( 1.415 , gs_currentmiterlimit ( pgs ) )"		8438132	0					
ANR	8438400	Callee	max		8438132	0					
ANR	8438401	Identifier	max		8438132	0					
ANR	8438402	ArgumentList	1.415		8438132	1					
ANR	8438403	Argument	1.415		8438132	0					
ANR	8438404	PrimaryExpression	1.415		8438132	0					
ANR	8438405	Argument	gs_currentmiterlimit ( pgs )		8438132	1					
ANR	8438406	CallExpression	gs_currentmiterlimit ( pgs )		8438132	0					
ANR	8438407	Callee	gs_currentmiterlimit		8438132	0					
ANR	8438408	Identifier	gs_currentmiterlimit		8438132	0					
ANR	8438409	ArgumentList	pgs		8438132	1					
ANR	8438410	Argument	pgs		8438132	0					
ANR	8438411	Identifier	pgs		8438132	0					
ANR	8438412	MultiplicativeExpression	gs_currentlinewidth ( pgs ) / 2		8438132	1		/			
ANR	8438413	CallExpression	gs_currentlinewidth ( pgs )		8438132	0					
ANR	8438414	Callee	gs_currentlinewidth		8438132	0					
ANR	8438415	Identifier	gs_currentlinewidth		8438132	0					
ANR	8438416	ArgumentList	pgs		8438132	1					
ANR	8438417	Argument	pgs		8438132	0					
ANR	8438418	Identifier	pgs		8438132	0					
ANR	8438419	PrimaryExpression	2		8438132	1					
ANR	8438420	ExpressionStatement	"w2 [ 2 ] -= expand , w2 [ 3 ] -= expand"	1026:12:34895:34927	8438132	1	True				
ANR	8438421	Expression	"w2 [ 2 ] -= expand , w2 [ 3 ] -= expand"		8438132	0					
ANR	8438422	AssignmentExpression	w2 [ 2 ] -= expand		8438132	0		-=			
ANR	8438423	ArrayIndexing	w2 [ 2 ]		8438132	0					
ANR	8438424	Identifier	w2		8438132	0					
ANR	8438425	PrimaryExpression	2		8438132	1					
ANR	8438426	Identifier	expand		8438132	1					
ANR	8438427	AssignmentExpression	w2 [ 3 ] -= expand		8438132	1		-=			
ANR	8438428	ArrayIndexing	w2 [ 3 ]		8438132	0					
ANR	8438429	Identifier	w2		8438132	0					
ANR	8438430	PrimaryExpression	3		8438132	1					
ANR	8438431	Identifier	expand		8438132	1					
ANR	8438432	ExpressionStatement	"w2 [ 4 ] += expand , w2 [ 5 ] += expand"	1027:12:34941:34973	8438132	2	True				
ANR	8438433	Expression	"w2 [ 4 ] += expand , w2 [ 5 ] += expand"		8438132	0					
ANR	8438434	AssignmentExpression	w2 [ 4 ] += expand		8438132	0		+=			
ANR	8438435	ArrayIndexing	w2 [ 4 ]		8438132	0					
ANR	8438436	Identifier	w2		8438132	0					
ANR	8438437	PrimaryExpression	4		8438132	1					
ANR	8438438	Identifier	expand		8438132	1					
ANR	8438439	AssignmentExpression	w2 [ 5 ] += expand		8438132	1		+=			
ANR	8438440	ArrayIndexing	w2 [ 5 ]		8438132	0					
ANR	8438441	Identifier	w2		8438132	0					
ANR	8438442	PrimaryExpression	5		8438132	1					
ANR	8438443	Identifier	expand		8438132	1					
ANR	8438444	IfStatement	"if ( ( code = gs_moveto ( pgs , 0.0 , 0.0 ) ) < 0 )"		8438132	70					
ANR	8438445	Condition	"( code = gs_moveto ( pgs , 0.0 , 0.0 ) ) < 0"	1032:8:35037:35073	8438132	0	True				
ANR	8438446	RelationalExpression	"( code = gs_moveto ( pgs , 0.0 , 0.0 ) ) < 0"		8438132	0		<			
ANR	8438447	AssignmentExpression	"code = gs_moveto ( pgs , 0.0 , 0.0 )"		8438132	0		=			
ANR	8438448	Identifier	code		8438132	0					
ANR	8438449	CallExpression	"gs_moveto ( pgs , 0.0 , 0.0 )"		8438132	1					
ANR	8438450	Callee	gs_moveto		8438132	0					
ANR	8438451	Identifier	gs_moveto		8438132	0					
ANR	8438452	ArgumentList	pgs		8438132	1					
ANR	8438453	Argument	pgs		8438132	0					
ANR	8438454	Identifier	pgs		8438132	0					
ANR	8438455	Argument	0.0		8438132	1					
ANR	8438456	PrimaryExpression	0.0		8438132	0					
ANR	8438457	Argument	0.0		8438132	2					
ANR	8438458	PrimaryExpression	0.0		8438132	0					
ANR	8438459	PrimaryExpression	0		8438132	1					
ANR	8438460	ReturnStatement	return code ;	1033:8:35084:35095	8438132	1	True				
ANR	8438461	Identifier	code		8438132	0					
ANR	8438462	CompoundStatement		58:4:1629:1629	8438132	71					
ANR	8438463	IfStatement	if ( plfont -> allow_vertical_substitutes )		8438132	0					
ANR	8438464	Condition	plfont -> allow_vertical_substitutes	1037:12:35163:35196	8438132	0	True				
ANR	8438465	PtrMemberAccess	plfont -> allow_vertical_substitutes		8438132	0					
ANR	8438466	Identifier	plfont		8438132	0					
ANR	8438467	Identifier	allow_vertical_substitutes		8438132	1					
ANR	8438468	CompoundStatement		62:12:1792:1849	8438132	1					
ANR	8438469	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	1038:12:35213:35251	8438132	0	True				
ANR	8438470	IdentifierDecl	* plfont = pfont -> client_data		8438132	0					
ANR	8438471	IdentifierDeclType	pl_font_t *		8438132	0					
ANR	8438472	Identifier	plfont		8438132	1					
ANR	8438473	AssignmentExpression	* plfont = pfont -> client_data		8438132	2		=			
ANR	8438474	Identifier	plfont		8438132	0					
ANR	8438475	PtrMemberAccess	pfont -> client_data		8438132	1					
ANR	8438476	Identifier	pfont		8438132	0					
ANR	8438477	Identifier	client_data		8438132	1					
ANR	8438478	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph , plfont ) ;"	1039:12:35265:35322	8438132	1	True				
ANR	8438479	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8438132	0					
ANR	8438480	IdentifierDeclType	gs_glyph		8438132	0					
ANR	8438481	Identifier	vertical		8438132	1					
ANR	8438482	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8438132	2		=			
ANR	8438483	Identifier	vertical		8438132	0					
ANR	8438484	CallExpression	"pl_font_vertical_glyph ( glyph , plfont )"		8438132	1					
ANR	8438485	Callee	pl_font_vertical_glyph		8438132	0					
ANR	8438486	Identifier	pl_font_vertical_glyph		8438132	0					
ANR	8438487	ArgumentList	glyph		8438132	1					
ANR	8438488	Argument	glyph		8438132	0					
ANR	8438489	Identifier	glyph		8438132	0					
ANR	8438490	Argument	plfont		8438132	1					
ANR	8438491	Identifier	plfont		8438132	0					
ANR	8438492	IfStatement	if ( vertical != GS_NO_GLYPH )		8438132	2					
ANR	8438493	Condition	vertical != GS_NO_GLYPH	1041:16:35341:35363	8438132	0	True				
ANR	8438494	EqualityExpression	vertical != GS_NO_GLYPH		8438132	0		!=			
ANR	8438495	Identifier	vertical		8438132	0					
ANR	8438496	Identifier	GS_NO_GLYPH		8438132	1					
ANR	8438497	CompoundStatement		64:41:1893:1893	8438132	1					
ANR	8438498	ExpressionStatement	glyph = vertical	1042:16:35384:35400	8438132	0	True				
ANR	8438499	AssignmentExpression	glyph = vertical		8438132	0		=			
ANR	8438500	Identifier	glyph		8438132	0					
ANR	8438501	Identifier	vertical		8438132	1					
ANR	8438502	IfStatement	if ( ( pfont -> WMode & 1 ) && sbw [ 2 ] == 1.0 )		8438132	1					
ANR	8438503	Condition	( pfont -> WMode & 1 ) && sbw [ 2 ] == 1.0	1049:12:35647:35681	8438132	0	True				
ANR	8438504	AndExpression	( pfont -> WMode & 1 ) && sbw [ 2 ] == 1.0		8438132	0		&&			
ANR	8438505	BitAndExpression	pfont -> WMode & 1		8438132	0		&			
ANR	8438506	PtrMemberAccess	pfont -> WMode		8438132	0					
ANR	8438507	Identifier	pfont		8438132	0					
ANR	8438508	Identifier	WMode		8438132	1					
ANR	8438509	PrimaryExpression	1		8438132	1					
ANR	8438510	EqualityExpression	sbw [ 2 ] == 1.0		8438132	1		==			
ANR	8438511	ArrayIndexing	sbw [ 2 ]		8438132	0					
ANR	8438512	Identifier	sbw		8438132	0					
ANR	8438513	PrimaryExpression	2		8438132	1					
ANR	8438514	PrimaryExpression	1.0		8438132	1					
ANR	8438515	CompoundStatement		72:49:2211:2211	8438132	1					
ANR	8438516	ExpressionStatement	"gs_currentmatrix ( pgs , & save_ctm )"	1051:12:35729:35761	8438132	0	True				
ANR	8438517	CallExpression	"gs_currentmatrix ( pgs , & save_ctm )"		8438132	0					
ANR	8438518	Callee	gs_currentmatrix		8438132	0					
ANR	8438519	Identifier	gs_currentmatrix		8438132	0					
ANR	8438520	ArgumentList	pgs		8438132	1					
ANR	8438521	Argument	pgs		8438132	0					
ANR	8438522	Identifier	pgs		8438132	0					
ANR	8438523	Argument	& save_ctm		8438132	1					
ANR	8438524	UnaryOperationExpression	& save_ctm		8438132	0					
ANR	8438525	UnaryOperator	&		8438132	0					
ANR	8438526	Identifier	save_ctm		8438132	1					
ANR	8438527	ExpressionStatement	ctm_modified = true	1052:12:35775:35794	8438132	1	True				
ANR	8438528	AssignmentExpression	ctm_modified = true		8438132	0		=			
ANR	8438529	Identifier	ctm_modified		8438132	0					
ANR	8438530	Identifier	true		8438132	1					
ANR	8438531	ExpressionStatement	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"	1056:12:35973:36023	8438132	2	True				
ANR	8438532	CallExpression	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"		8438132	0					
ANR	8438533	Callee	gs_translate		8438132	0					
ANR	8438534	Identifier	gs_translate		8438132	0					
ANR	8438535	ArgumentList	pgs		8438132	1					
ANR	8438536	Argument	pgs		8438132	0					
ANR	8438537	Identifier	pgs		8438132	0					
ANR	8438538	Argument	1.0 / 1.15		8438132	1					
ANR	8438539	MultiplicativeExpression	1.0 / 1.15		8438132	0		/			
ANR	8438540	PrimaryExpression	1.0		8438132	0					
ANR	8438541	PrimaryExpression	1.15		8438132	1					
ANR	8438542	Argument	- ( 1.0 - 1.0 / 1.15 )		8438132	2					
ANR	8438543	UnaryOperationExpression	- ( 1.0 - 1.0 / 1.15 )		8438132	0					
ANR	8438544	UnaryOperator	-		8438132	0					
ANR	8438545	AdditiveExpression	1.0 - 1.0 / 1.15		8438132	1		-			
ANR	8438546	PrimaryExpression	1.0		8438132	0					
ANR	8438547	MultiplicativeExpression	1.0 / 1.15		8438132	1		/			
ANR	8438548	PrimaryExpression	1.0		8438132	0					
ANR	8438549	PrimaryExpression	1.15		8438132	1					
ANR	8438550	ExpressionStatement	"gs_rotate ( pgs , 90 )"	1057:12:36037:36055	8438132	3	True				
ANR	8438551	CallExpression	"gs_rotate ( pgs , 90 )"		8438132	0					
ANR	8438552	Callee	gs_rotate		8438132	0					
ANR	8438553	Identifier	gs_rotate		8438132	0					
ANR	8438554	ArgumentList	pgs		8438132	1					
ANR	8438555	Argument	pgs		8438132	0					
ANR	8438556	Identifier	pgs		8438132	0					
ANR	8438557	Argument	90		8438132	1					
ANR	8438558	PrimaryExpression	90		8438132	0					
ANR	8438559	IfStatement	if ( bold_fraction == 0 )		8438132	72					
ANR	8438560	Condition	bold_fraction == 0	1066:8:36267:36284	8438132	0	True				
ANR	8438561	EqualityExpression	bold_fraction == 0		8438132	0		==			
ANR	8438562	Identifier	bold_fraction		8438132	0					
ANR	8438563	PrimaryExpression	0		8438132	1					
ANR	8438564	CompoundStatement		89:28:2814:2814	8438132	1					
ANR	8438565	ExpressionStatement	"code = tt_set_cache ( penum , pgs , w2 )"	1067:8:36297:36332	8438132	0	True				
ANR	8438566	AssignmentExpression	"code = tt_set_cache ( penum , pgs , w2 )"		8438132	0		=			
ANR	8438567	Identifier	code		8438132	0					
ANR	8438568	CallExpression	"tt_set_cache ( penum , pgs , w2 )"		8438132	1					
ANR	8438569	Callee	tt_set_cache		8438132	0					
ANR	8438570	Identifier	tt_set_cache		8438132	0					
ANR	8438571	ArgumentList	penum		8438132	1					
ANR	8438572	Argument	penum		8438132	0					
ANR	8438573	Identifier	penum		8438132	0					
ANR	8438574	Argument	pgs		8438132	1					
ANR	8438575	Identifier	pgs		8438132	0					
ANR	8438576	Argument	w2		8438132	2					
ANR	8438577	Identifier	w2		8438132	0					
ANR	8438578	IfStatement	if ( code < 0 )		8438132	1					
ANR	8438579	Condition	code < 0	1068:12:36346:36353	8438132	0	True				
ANR	8438580	RelationalExpression	code < 0		8438132	0		<			
ANR	8438581	Identifier	code		8438132	0					
ANR	8438582	PrimaryExpression	0		8438132	1					
ANR	8438583	ReturnStatement	return code ;	1069:12:36368:36379	8438132	1	True				
ANR	8438584	Identifier	code		8438132	0					
ANR	8438585	ExpressionStatement	bold_added = 0	1070:8:36389:36403	8438132	2	True				
ANR	8438586	AssignmentExpression	bold_added = 0		8438132	0		=			
ANR	8438587	Identifier	bold_added		8438132	0					
ANR	8438588	PrimaryExpression	0		8438132	1					
ANR	8438589	ElseStatement	else		8438132	0					
ANR	8438590	CompoundStatement		96:8:2982:2994	8438132	0					
ANR	8438591	IdentifierDeclStatement	"gs_matrix mat , smat ;"	1072:8:36426:36445	8438132	0	True				
ANR	8438592	IdentifierDecl	mat		8438132	0					
ANR	8438593	IdentifierDeclType	gs_matrix		8438132	0					
ANR	8438594	Identifier	mat		8438132	1					
ANR	8438595	IdentifierDecl	smat		8438132	1					
ANR	8438596	IdentifierDeclType	gs_matrix		8438132	0					
ANR	8438597	Identifier	smat		8438132	1					
ANR	8438598	IdentifierDeclStatement	gs_rect sbox ;	1073:8:36455:36467	8438132	1	True				
ANR	8438599	IdentifierDecl	sbox		8438132	0					
ANR	8438600	IdentifierDeclType	gs_rect		8438132	0					
ANR	8438601	Identifier	sbox		8438132	1					
ANR	8438602	ExpressionStatement	code = gs_gsave ( pgs )	1075:8:36478:36498	8438132	2	True				
ANR	8438603	AssignmentExpression	code = gs_gsave ( pgs )		8438132	0		=			
ANR	8438604	Identifier	code		8438132	0					
ANR	8438605	CallExpression	gs_gsave ( pgs )		8438132	1					
ANR	8438606	Callee	gs_gsave		8438132	0					
ANR	8438607	Identifier	gs_gsave		8438132	0					
ANR	8438608	ArgumentList	pgs		8438132	1					
ANR	8438609	Argument	pgs		8438132	0					
ANR	8438610	Identifier	pgs		8438132	0					
ANR	8438611	IfStatement	if ( code < 0 )		8438132	3					
ANR	8438612	Condition	code < 0	1076:12:36512:36519	8438132	0	True				
ANR	8438613	RelationalExpression	code < 0		8438132	0		<			
ANR	8438614	Identifier	code		8438132	0					
ANR	8438615	PrimaryExpression	0		8438132	1					
ANR	8438616	ReturnStatement	return code ;	1077:12:36534:36545	8438132	1	True				
ANR	8438617	Identifier	code		8438132	0					
ANR	8438618	ExpressionStatement	"gs_currentmatrix ( pgs , & mat )"	1078:8:36555:36582	8438132	4	True				
ANR	8438619	CallExpression	"gs_currentmatrix ( pgs , & mat )"		8438132	0					
ANR	8438620	Callee	gs_currentmatrix		8438132	0					
ANR	8438621	Identifier	gs_currentmatrix		8438132	0					
ANR	8438622	ArgumentList	pgs		8438132	1					
ANR	8438623	Argument	pgs		8438132	0					
ANR	8438624	Identifier	pgs		8438132	0					
ANR	8438625	Argument	& mat		8438132	1					
ANR	8438626	UnaryOperationExpression	& mat		8438132	0					
ANR	8438627	UnaryOperator	&		8438132	0					
ANR	8438628	Identifier	mat		8438132	1					
ANR	8438629	ExpressionStatement	"scale = max ( fabs ( mat . xx ) + fabs ( mat . yx ) , fabs ( mat . xy ) + fabs ( mat . yy ) )"	1080:8:36653:36722	8438132	5	True				
ANR	8438630	AssignmentExpression	"scale = max ( fabs ( mat . xx ) + fabs ( mat . yx ) , fabs ( mat . xy ) + fabs ( mat . yy ) )"		8438132	0		=			
ANR	8438631	Identifier	scale		8438132	0					
ANR	8438632	CallExpression	"max ( fabs ( mat . xx ) + fabs ( mat . yx ) , fabs ( mat . xy ) + fabs ( mat . yy ) )"		8438132	1					
ANR	8438633	Callee	max		8438132	0					
ANR	8438634	Identifier	max		8438132	0					
ANR	8438635	ArgumentList	fabs ( mat . xx ) + fabs ( mat . yx )		8438132	1					
ANR	8438636	Argument	fabs ( mat . xx ) + fabs ( mat . yx )		8438132	0					
ANR	8438637	AdditiveExpression	fabs ( mat . xx ) + fabs ( mat . yx )		8438132	0		+			
ANR	8438638	CallExpression	fabs ( mat . xx )		8438132	0					
ANR	8438639	Callee	fabs		8438132	0					
ANR	8438640	Identifier	fabs		8438132	0					
ANR	8438641	ArgumentList	mat . xx		8438132	1					
ANR	8438642	Argument	mat . xx		8438132	0					
ANR	8438643	MemberAccess	mat . xx		8438132	0					
ANR	8438644	Identifier	mat		8438132	0					
ANR	8438645	Identifier	xx		8438132	1					
ANR	8438646	CallExpression	fabs ( mat . yx )		8438132	1					
ANR	8438647	Callee	fabs		8438132	0					
ANR	8438648	Identifier	fabs		8438132	0					
ANR	8438649	ArgumentList	mat . yx		8438132	1					
ANR	8438650	Argument	mat . yx		8438132	0					
ANR	8438651	MemberAccess	mat . yx		8438132	0					
ANR	8438652	Identifier	mat		8438132	0					
ANR	8438653	Identifier	yx		8438132	1					
ANR	8438654	Argument	fabs ( mat . xy ) + fabs ( mat . yy )		8438132	1					
ANR	8438655	AdditiveExpression	fabs ( mat . xy ) + fabs ( mat . yy )		8438132	0		+			
ANR	8438656	CallExpression	fabs ( mat . xy )		8438132	0					
ANR	8438657	Callee	fabs		8438132	0					
ANR	8438658	Identifier	fabs		8438132	0					
ANR	8438659	ArgumentList	mat . xy		8438132	1					
ANR	8438660	Argument	mat . xy		8438132	0					
ANR	8438661	MemberAccess	mat . xy		8438132	0					
ANR	8438662	Identifier	mat		8438132	0					
ANR	8438663	Identifier	xy		8438132	1					
ANR	8438664	CallExpression	fabs ( mat . yy )		8438132	1					
ANR	8438665	Callee	fabs		8438132	0					
ANR	8438666	Identifier	fabs		8438132	0					
ANR	8438667	ArgumentList	mat . yy		8438132	1					
ANR	8438668	Argument	mat . yy		8438132	0					
ANR	8438669	MemberAccess	mat . yy		8438132	0					
ANR	8438670	Identifier	mat		8438132	0					
ANR	8438671	Identifier	yy		8438132	1					
ANR	8438672	ExpressionStatement	"gs_make_scaling ( scale , scale , & smat )"	1081:8:36732:36768	8438132	6	True				
ANR	8438673	CallExpression	"gs_make_scaling ( scale , scale , & smat )"		8438132	0					
ANR	8438674	Callee	gs_make_scaling		8438132	0					
ANR	8438675	Identifier	gs_make_scaling		8438132	0					
ANR	8438676	ArgumentList	scale		8438132	1					
ANR	8438677	Argument	scale		8438132	0					
ANR	8438678	Identifier	scale		8438132	0					
ANR	8438679	Argument	scale		8438132	1					
ANR	8438680	Identifier	scale		8438132	0					
ANR	8438681	Argument	& smat		8438132	2					
ANR	8438682	UnaryOperationExpression	& smat		8438132	0					
ANR	8438683	UnaryOperator	&		8438132	0					
ANR	8438684	Identifier	smat		8438132	1					
ANR	8438685	ExpressionStatement	"sbox . p . x = w2 [ 2 ] , sbox . p . y = w2 [ 3 ]"	1082:8:36778:36812	8438132	7	True				
ANR	8438686	Expression	"sbox . p . x = w2 [ 2 ] , sbox . p . y = w2 [ 3 ]"		8438132	0					
ANR	8438687	AssignmentExpression	sbox . p . x = w2 [ 2 ]		8438132	0		=			
ANR	8438688	MemberAccess	sbox . p . x		8438132	0					
ANR	8438689	MemberAccess	sbox . p		8438132	0					
ANR	8438690	Identifier	sbox		8438132	0					
ANR	8438691	Identifier	p		8438132	1					
ANR	8438692	Identifier	x		8438132	1					
ANR	8438693	ArrayIndexing	w2 [ 2 ]		8438132	1					
ANR	8438694	Identifier	w2		8438132	0					
ANR	8438695	PrimaryExpression	2		8438132	1					
ANR	8438696	AssignmentExpression	sbox . p . y = w2 [ 3 ]		8438132	1		=			
ANR	8438697	MemberAccess	sbox . p . y		8438132	0					
ANR	8438698	MemberAccess	sbox . p		8438132	0					
ANR	8438699	Identifier	sbox		8438132	0					
ANR	8438700	Identifier	p		8438132	1					
ANR	8438701	Identifier	y		8438132	1					
ANR	8438702	ArrayIndexing	w2 [ 3 ]		8438132	1					
ANR	8438703	Identifier	w2		8438132	0					
ANR	8438704	PrimaryExpression	3		8438132	1					
ANR	8438705	ExpressionStatement	"sbox . q . x = w2 [ 4 ] , sbox . q . y = w2 [ 5 ]"	1083:8:36822:36856	8438132	8	True				
ANR	8438706	Expression	"sbox . q . x = w2 [ 4 ] , sbox . q . y = w2 [ 5 ]"		8438132	0					
ANR	8438707	AssignmentExpression	sbox . q . x = w2 [ 4 ]		8438132	0		=			
ANR	8438708	MemberAccess	sbox . q . x		8438132	0					
ANR	8438709	MemberAccess	sbox . q		8438132	0					
ANR	8438710	Identifier	sbox		8438132	0					
ANR	8438711	Identifier	q		8438132	1					
ANR	8438712	Identifier	x		8438132	1					
ANR	8438713	ArrayIndexing	w2 [ 4 ]		8438132	1					
ANR	8438714	Identifier	w2		8438132	0					
ANR	8438715	PrimaryExpression	4		8438132	1					
ANR	8438716	AssignmentExpression	sbox . q . y = w2 [ 5 ]		8438132	1		=			
ANR	8438717	MemberAccess	sbox . q . y		8438132	0					
ANR	8438718	MemberAccess	sbox . q		8438132	0					
ANR	8438719	Identifier	sbox		8438132	0					
ANR	8438720	Identifier	q		8438132	1					
ANR	8438721	Identifier	y		8438132	1					
ANR	8438722	ArrayIndexing	w2 [ 5 ]		8438132	1					
ANR	8438723	Identifier	w2		8438132	0					
ANR	8438724	PrimaryExpression	5		8438132	1					
ANR	8438725	ExpressionStatement	"gs_bbox_transform ( & sbox , & smat , & sbox )"	1084:8:36866:36904	8438132	9	True				
ANR	8438726	CallExpression	"gs_bbox_transform ( & sbox , & smat , & sbox )"		8438132	0					
ANR	8438727	Callee	gs_bbox_transform		8438132	0					
ANR	8438728	Identifier	gs_bbox_transform		8438132	0					
ANR	8438729	ArgumentList	& sbox		8438132	1					
ANR	8438730	Argument	& sbox		8438132	0					
ANR	8438731	UnaryOperationExpression	& sbox		8438132	0					
ANR	8438732	UnaryOperator	&		8438132	0					
ANR	8438733	Identifier	sbox		8438132	1					
ANR	8438734	Argument	& smat		8438132	1					
ANR	8438735	UnaryOperationExpression	& smat		8438132	0					
ANR	8438736	UnaryOperator	&		8438132	0					
ANR	8438737	Identifier	smat		8438132	1					
ANR	8438738	Argument	& sbox		8438132	2					
ANR	8438739	UnaryOperationExpression	& sbox		8438132	0					
ANR	8438740	UnaryOperator	&		8438132	0					
ANR	8438741	Identifier	sbox		8438132	1					
ANR	8438742	ExpressionStatement	"ipx = ( int ) sbox . p . x , ipy = ( int ) sbox . p . y"	1085:8:36914:36954	8438132	10	True				
ANR	8438743	Expression	"ipx = ( int ) sbox . p . x , ipy = ( int ) sbox . p . y"		8438132	0					
ANR	8438744	AssignmentExpression	ipx = ( int ) sbox . p . x		8438132	0		=			
ANR	8438745	Identifier	ipx		8438132	0					
ANR	8438746	CastExpression	( int ) sbox . p . x		8438132	1					
ANR	8438747	CastTarget	int		8438132	0					
ANR	8438748	MemberAccess	sbox . p . x		8438132	1					
ANR	8438749	MemberAccess	sbox . p		8438132	0					
ANR	8438750	Identifier	sbox		8438132	0					
ANR	8438751	Identifier	p		8438132	1					
ANR	8438752	Identifier	x		8438132	1					
ANR	8438753	AssignmentExpression	ipy = ( int ) sbox . p . y		8438132	1		=			
ANR	8438754	Identifier	ipy		8438132	0					
ANR	8438755	CastExpression	( int ) sbox . p . y		8438132	1					
ANR	8438756	CastTarget	int		8438132	0					
ANR	8438757	MemberAccess	sbox . p . y		8438132	1					
ANR	8438758	MemberAccess	sbox . p		8438132	0					
ANR	8438759	Identifier	sbox		8438132	0					
ANR	8438760	Identifier	p		8438132	1					
ANR	8438761	Identifier	y		8438132	1					
ANR	8438762	ExpressionStatement	"iqx = ( int ) ceil ( sbox . q . x ) , iqy = ( int ) ceil ( sbox . q . y )"	1086:8:36964:37016	8438132	11	True				
ANR	8438763	Expression	"iqx = ( int ) ceil ( sbox . q . x ) , iqy = ( int ) ceil ( sbox . q . y )"		8438132	0					
ANR	8438764	AssignmentExpression	iqx = ( int ) ceil ( sbox . q . x )		8438132	0		=			
ANR	8438765	Identifier	iqx		8438132	0					
ANR	8438766	CastExpression	( int ) ceil ( sbox . q . x )		8438132	1					
ANR	8438767	CastTarget	int		8438132	0					
ANR	8438768	CallExpression	ceil ( sbox . q . x )		8438132	1					
ANR	8438769	Callee	ceil		8438132	0					
ANR	8438770	Identifier	ceil		8438132	0					
ANR	8438771	ArgumentList	sbox . q . x		8438132	1					
ANR	8438772	Argument	sbox . q . x		8438132	0					
ANR	8438773	MemberAccess	sbox . q . x		8438132	0					
ANR	8438774	MemberAccess	sbox . q		8438132	0					
ANR	8438775	Identifier	sbox		8438132	0					
ANR	8438776	Identifier	q		8438132	1					
ANR	8438777	Identifier	x		8438132	1					
ANR	8438778	AssignmentExpression	iqy = ( int ) ceil ( sbox . q . y )		8438132	1		=			
ANR	8438779	Identifier	iqy		8438132	0					
ANR	8438780	CastExpression	( int ) ceil ( sbox . q . y )		8438132	1					
ANR	8438781	CastTarget	int		8438132	0					
ANR	8438782	CallExpression	ceil ( sbox . q . y )		8438132	1					
ANR	8438783	Callee	ceil		8438132	0					
ANR	8438784	Identifier	ceil		8438132	0					
ANR	8438785	ArgumentList	sbox . q . y		8438132	1					
ANR	8438786	Argument	sbox . q . y		8438132	0					
ANR	8438787	MemberAccess	sbox . q . y		8438132	0					
ANR	8438788	MemberAccess	sbox . q		8438132	0					
ANR	8438789	Identifier	sbox		8438132	0					
ANR	8438790	Identifier	q		8438132	1					
ANR	8438791	Identifier	y		8438132	1					
ANR	8438792	ExpressionStatement	"code = gs_make_mem_mono_device_with_copydevice ( & pmdev , pgs -> memory , pgs -> device )"	1088:8:37104:37184	8438132	12	True				
ANR	8438793	AssignmentExpression	"code = gs_make_mem_mono_device_with_copydevice ( & pmdev , pgs -> memory , pgs -> device )"		8438132	0		=			
ANR	8438794	Identifier	code		8438132	0					
ANR	8438795	CallExpression	"gs_make_mem_mono_device_with_copydevice ( & pmdev , pgs -> memory , pgs -> device )"		8438132	1					
ANR	8438796	Callee	gs_make_mem_mono_device_with_copydevice		8438132	0					
ANR	8438797	Identifier	gs_make_mem_mono_device_with_copydevice		8438132	0					
ANR	8438798	ArgumentList	& pmdev		8438132	1					
ANR	8438799	Argument	& pmdev		8438132	0					
ANR	8438800	UnaryOperationExpression	& pmdev		8438132	0					
ANR	8438801	UnaryOperator	&		8438132	0					
ANR	8438802	Identifier	pmdev		8438132	1					
ANR	8438803	Argument	pgs -> memory		8438132	1					
ANR	8438804	PtrMemberAccess	pgs -> memory		8438132	0					
ANR	8438805	Identifier	pgs		8438132	0					
ANR	8438806	Identifier	memory		8438132	1					
ANR	8438807	Argument	pgs -> device		8438132	2					
ANR	8438808	PtrMemberAccess	pgs -> device		8438132	0					
ANR	8438809	Identifier	pgs		8438132	0					
ANR	8438810	Identifier	device		8438132	1					
ANR	8438811	IfStatement	if ( code < 0 )		8438132	13					
ANR	8438812	Condition	code < 0	1089:12:37198:37205	8438132	0	True				
ANR	8438813	RelationalExpression	code < 0		8438132	0		<			
ANR	8438814	Identifier	code		8438132	0					
ANR	8438815	PrimaryExpression	0		8438132	1					
ANR	8438816	ReturnStatement	return code ;	1090:12:37220:37231	8438132	1	True				
ANR	8438817	Identifier	code		8438132	0					
ANR	8438818	ExpressionStatement	bold_device_created = true	1092:8:37242:37268	8438132	14	True				
ANR	8438819	AssignmentExpression	bold_device_created = true		8438132	0		=			
ANR	8438820	Identifier	bold_device_created		8438132	0					
ANR	8438821	Identifier	true		8438132	1					
ANR	8438822	ExpressionStatement	"bold_added = max ( ( int ) ( scale * bold_fraction * 2 + 0.5 ) , 1 )"	1099:8:37640:37699	8438132	15	True				
ANR	8438823	AssignmentExpression	"bold_added = max ( ( int ) ( scale * bold_fraction * 2 + 0.5 ) , 1 )"		8438132	0		=			
ANR	8438824	Identifier	bold_added		8438132	0					
ANR	8438825	CallExpression	"max ( ( int ) ( scale * bold_fraction * 2 + 0.5 ) , 1 )"		8438132	1					
ANR	8438826	Callee	max		8438132	0					
ANR	8438827	Identifier	max		8438132	0					
ANR	8438828	ArgumentList	( int ) ( scale * bold_fraction * 2 + 0.5 )		8438132	1					
ANR	8438829	Argument	( int ) ( scale * bold_fraction * 2 + 0.5 )		8438132	0					
ANR	8438830	CastExpression	( int ) ( scale * bold_fraction * 2 + 0.5 )		8438132	0					
ANR	8438831	CastTarget	int		8438132	0					
ANR	8438832	AdditiveExpression	scale * bold_fraction * 2 + 0.5		8438132	1		+			
ANR	8438833	MultiplicativeExpression	scale * bold_fraction * 2		8438132	0		*			
ANR	8438834	Identifier	scale		8438132	0					
ANR	8438835	MultiplicativeExpression	bold_fraction * 2		8438132	1		*			
ANR	8438836	Identifier	bold_fraction		8438132	0					
ANR	8438837	PrimaryExpression	2		8438132	1					
ANR	8438838	PrimaryExpression	0.5		8438132	1					
ANR	8438839	Argument	1		8438132	1					
ANR	8438840	PrimaryExpression	1		8438132	0					
ANR	8438841	ExpressionStatement	pmdev -> width = iqx - ipx + bold_added	1100:8:37709:37746	8438132	16	True				
ANR	8438842	AssignmentExpression	pmdev -> width = iqx - ipx + bold_added		8438132	0		=			
ANR	8438843	PtrMemberAccess	pmdev -> width		8438132	0					
ANR	8438844	Identifier	pmdev		8438132	0					
ANR	8438845	Identifier	width		8438132	1					
ANR	8438846	AdditiveExpression	iqx - ipx + bold_added		8438132	1		-			
ANR	8438847	Identifier	iqx		8438132	0					
ANR	8438848	AdditiveExpression	ipx + bold_added		8438132	1		+			
ANR	8438849	Identifier	ipx		8438132	0					
ANR	8438850	Identifier	bold_added		8438132	1					
ANR	8438851	ExpressionStatement	pmdev -> height = iqy - ipy	1101:8:37756:37781	8438132	17	True				
ANR	8438852	AssignmentExpression	pmdev -> height = iqy - ipy		8438132	0		=			
ANR	8438853	PtrMemberAccess	pmdev -> height		8438132	0					
ANR	8438854	Identifier	pmdev		8438132	0					
ANR	8438855	Identifier	height		8438132	1					
ANR	8438856	AdditiveExpression	iqy - ipy		8438132	1		-			
ANR	8438857	Identifier	iqy		8438132	0					
ANR	8438858	Identifier	ipy		8438132	1					
ANR	8438859	ExpressionStatement	pmdev -> bitmap_memory = pgs -> memory	1102:8:37791:37825	8438132	18	True				
ANR	8438860	AssignmentExpression	pmdev -> bitmap_memory = pgs -> memory		8438132	0		=			
ANR	8438861	PtrMemberAccess	pmdev -> bitmap_memory		8438132	0					
ANR	8438862	Identifier	pmdev		8438132	0					
ANR	8438863	Identifier	bitmap_memory		8438132	1					
ANR	8438864	PtrMemberAccess	pgs -> memory		8438132	1					
ANR	8438865	Identifier	pgs		8438132	0					
ANR	8438866	Identifier	memory		8438132	1					
ANR	8438867	ExpressionStatement	"code = ( * dev_proc ( pmdev , open_device ) ) ( ( gx_device * ) pmdev )"	1103:8:37835:37895	8438132	19	True				
ANR	8438868	AssignmentExpression	"code = ( * dev_proc ( pmdev , open_device ) ) ( ( gx_device * ) pmdev )"		8438132	0		=			
ANR	8438869	Identifier	code		8438132	0					
ANR	8438870	CallExpression	"( * dev_proc ( pmdev , open_device ) ) ( ( gx_device * ) pmdev )"		8438132	1					
ANR	8438871	Callee	"* dev_proc ( pmdev , open_device )"		8438132	0					
ANR	8438872	UnaryOperationExpression	"* dev_proc ( pmdev , open_device )"		8438132	0					
ANR	8438873	UnaryOperator	*		8438132	0					
ANR	8438874	CallExpression	"dev_proc ( pmdev , open_device )"		8438132	1					
ANR	8438875	Callee	dev_proc		8438132	0					
ANR	8438876	Identifier	dev_proc		8438132	0					
ANR	8438877	ArgumentList	pmdev		8438132	1					
ANR	8438878	Argument	pmdev		8438132	0					
ANR	8438879	Identifier	pmdev		8438132	0					
ANR	8438880	Argument	open_device		8438132	1					
ANR	8438881	Identifier	open_device		8438132	0					
ANR	8438882	ArgumentList	( gx_device * ) pmdev		8438132	1					
ANR	8438883	Argument	( gx_device * ) pmdev		8438132	0					
ANR	8438884	CastExpression	( gx_device * ) pmdev		8438132	0					
ANR	8438885	CastTarget	gx_device *		8438132	0					
ANR	8438886	Identifier	pmdev		8438132	1					
ANR	8438887	IfStatement	if ( code < 0 )		8438132	20					
ANR	8438888	Condition	code < 0	1104:12:37909:37916	8438132	0	True				
ANR	8438889	RelationalExpression	code < 0		8438132	0		<			
ANR	8438890	Identifier	code		8438132	0					
ANR	8438891	PrimaryExpression	0		8438132	1					
ANR	8438892	CompoundStatement		127:22:4446:4446	8438132	1					
ANR	8438893	ExpressionStatement	gs_grestore ( pgs )	1105:12:37933:37949	8438132	0	True				
ANR	8438894	CallExpression	gs_grestore ( pgs )		8438132	0					
ANR	8438895	Callee	gs_grestore		8438132	0					
ANR	8438896	Identifier	gs_grestore		8438132	0					
ANR	8438897	ArgumentList	pgs		8438132	1					
ANR	8438898	Argument	pgs		8438132	0					
ANR	8438899	Identifier	pgs		8438132	0					
ANR	8438900	ReturnStatement	return code ;	1106:12:37963:37974	8438132	1	True				
ANR	8438901	Identifier	code		8438132	0					
ANR	8438902	ExpressionStatement	pmdev -> is_open = true	1113:8:38274:38295	8438132	21	True				
ANR	8438903	AssignmentExpression	pmdev -> is_open = true		8438132	0		=			
ANR	8438904	PtrMemberAccess	pmdev -> is_open		8438132	0					
ANR	8438905	Identifier	pmdev		8438132	0					
ANR	8438906	Identifier	is_open		8438132	1					
ANR	8438907	Identifier	true		8438132	1					
ANR	8438908	ExpressionStatement	"gx_set_device_only ( pgs , ( gx_device * ) pmdev )"	1115:8:38361:38405	8438132	22	True				
ANR	8438909	CallExpression	"gx_set_device_only ( pgs , ( gx_device * ) pmdev )"		8438132	0					
ANR	8438910	Callee	gx_set_device_only		8438132	0					
ANR	8438911	Identifier	gx_set_device_only		8438132	0					
ANR	8438912	ArgumentList	pgs		8438132	1					
ANR	8438913	Argument	pgs		8438132	0					
ANR	8438914	Identifier	pgs		8438132	0					
ANR	8438915	Argument	( gx_device * ) pmdev		8438132	1					
ANR	8438916	CastExpression	( gx_device * ) pmdev		8438132	0					
ANR	8438917	CastTarget	gx_device *		8438132	0					
ANR	8438918	Identifier	pmdev		8438132	1					
ANR	8438919	CompoundStatement		141:12:4957:4975	8438132	23					
ANR	8438920	IdentifierDeclStatement	gs_fixed_rect cbox ;	1118:12:38430:38448	8438132	0	True				
ANR	8438921	IdentifierDecl	cbox		8438132	0					
ANR	8438922	IdentifierDeclType	gs_fixed_rect		8438132	0					
ANR	8438923	Identifier	cbox		8438132	1					
ANR	8438924	ExpressionStatement	cbox . p . x = cbox . p . y = fixed_0	1120:12:38463:38492	8438132	1	True				
ANR	8438925	AssignmentExpression	cbox . p . x = cbox . p . y = fixed_0		8438132	0		=			
ANR	8438926	MemberAccess	cbox . p . x		8438132	0					
ANR	8438927	MemberAccess	cbox . p		8438132	0					
ANR	8438928	Identifier	cbox		8438132	0					
ANR	8438929	Identifier	p		8438132	1					
ANR	8438930	Identifier	x		8438132	1					
ANR	8438931	AssignmentExpression	cbox . p . y = fixed_0		8438132	1		=			
ANR	8438932	MemberAccess	cbox . p . y		8438132	0					
ANR	8438933	MemberAccess	cbox . p		8438132	0					
ANR	8438934	Identifier	cbox		8438132	0					
ANR	8438935	Identifier	p		8438132	1					
ANR	8438936	Identifier	y		8438132	1					
ANR	8438937	Identifier	fixed_0		8438132	1					
ANR	8438938	ExpressionStatement	cbox . q . x = int2fixed ( pmdev -> width )	1121:12:38506:38540	8438132	2	True				
ANR	8438939	AssignmentExpression	cbox . q . x = int2fixed ( pmdev -> width )		8438132	0		=			
ANR	8438940	MemberAccess	cbox . q . x		8438132	0					
ANR	8438941	MemberAccess	cbox . q		8438132	0					
ANR	8438942	Identifier	cbox		8438132	0					
ANR	8438943	Identifier	q		8438132	1					
ANR	8438944	Identifier	x		8438132	1					
ANR	8438945	CallExpression	int2fixed ( pmdev -> width )		8438132	1					
ANR	8438946	Callee	int2fixed		8438132	0					
ANR	8438947	Identifier	int2fixed		8438132	0					
ANR	8438948	ArgumentList	pmdev -> width		8438132	1					
ANR	8438949	Argument	pmdev -> width		8438132	0					
ANR	8438950	PtrMemberAccess	pmdev -> width		8438132	0					
ANR	8438951	Identifier	pmdev		8438132	0					
ANR	8438952	Identifier	width		8438132	1					
ANR	8438953	ExpressionStatement	cbox . q . y = int2fixed ( pmdev -> height )	1122:12:38554:38589	8438132	3	True				
ANR	8438954	AssignmentExpression	cbox . q . y = int2fixed ( pmdev -> height )		8438132	0		=			
ANR	8438955	MemberAccess	cbox . q . y		8438132	0					
ANR	8438956	MemberAccess	cbox . q		8438132	0					
ANR	8438957	Identifier	cbox		8438132	0					
ANR	8438958	Identifier	q		8438132	1					
ANR	8438959	Identifier	y		8438132	1					
ANR	8438960	CallExpression	int2fixed ( pmdev -> height )		8438132	1					
ANR	8438961	Callee	int2fixed		8438132	0					
ANR	8438962	Identifier	int2fixed		8438132	0					
ANR	8438963	ArgumentList	pmdev -> height		8438132	1					
ANR	8438964	Argument	pmdev -> height		8438132	0					
ANR	8438965	PtrMemberAccess	pmdev -> height		8438132	0					
ANR	8438966	Identifier	pmdev		8438132	0					
ANR	8438967	Identifier	height		8438132	1					
ANR	8438968	ExpressionStatement	"code = gx_clip_to_rectangle ( pgs , & cbox )"	1123:12:38603:38642	8438132	4	True				
ANR	8438969	AssignmentExpression	"code = gx_clip_to_rectangle ( pgs , & cbox )"		8438132	0		=			
ANR	8438970	Identifier	code		8438132	0					
ANR	8438971	CallExpression	"gx_clip_to_rectangle ( pgs , & cbox )"		8438132	1					
ANR	8438972	Callee	gx_clip_to_rectangle		8438132	0					
ANR	8438973	Identifier	gx_clip_to_rectangle		8438132	0					
ANR	8438974	ArgumentList	pgs		8438132	1					
ANR	8438975	Argument	pgs		8438132	0					
ANR	8438976	Identifier	pgs		8438132	0					
ANR	8438977	Argument	& cbox		8438132	1					
ANR	8438978	UnaryOperationExpression	& cbox		8438132	0					
ANR	8438979	UnaryOperator	&		8438132	0					
ANR	8438980	Identifier	cbox		8438132	1					
ANR	8438981	IfStatement	if ( code < 0 )		8438132	5					
ANR	8438982	Condition	code < 0	1124:16:38660:38667	8438132	0	True				
ANR	8438983	RelationalExpression	code < 0		8438132	0		<			
ANR	8438984	Identifier	code		8438132	0					
ANR	8438985	PrimaryExpression	0		8438132	1					
ANR	8438986	ReturnStatement	return code ;	1125:16:38686:38697	8438132	1	True				
ANR	8438987	Identifier	code		8438132	0					
ANR	8438988	ExpressionStatement	"memset ( pmdev -> base , 0 , bitmap_raster ( pmdev -> width ) * pmdev -> height )"	1128:8:38769:38836	8438132	24	True				
ANR	8438989	CallExpression	"memset ( pmdev -> base , 0 , bitmap_raster ( pmdev -> width ) * pmdev -> height )"		8438132	0					
ANR	8438990	Callee	memset		8438132	0					
ANR	8438991	Identifier	memset		8438132	0					
ANR	8438992	ArgumentList	pmdev -> base		8438132	1					
ANR	8438993	Argument	pmdev -> base		8438132	0					
ANR	8438994	PtrMemberAccess	pmdev -> base		8438132	0					
ANR	8438995	Identifier	pmdev		8438132	0					
ANR	8438996	Identifier	base		8438132	1					
ANR	8438997	Argument	0		8438132	1					
ANR	8438998	PrimaryExpression	0		8438132	0					
ANR	8438999	Argument	bitmap_raster ( pmdev -> width ) * pmdev -> height		8438132	2					
ANR	8439000	MultiplicativeExpression	bitmap_raster ( pmdev -> width ) * pmdev -> height		8438132	0		*			
ANR	8439001	CallExpression	bitmap_raster ( pmdev -> width )		8438132	0					
ANR	8439002	Callee	bitmap_raster		8438132	0					
ANR	8439003	Identifier	bitmap_raster		8438132	0					
ANR	8439004	ArgumentList	pmdev -> width		8438132	1					
ANR	8439005	Argument	pmdev -> width		8438132	0					
ANR	8439006	PtrMemberAccess	pmdev -> width		8438132	0					
ANR	8439007	Identifier	pmdev		8438132	0					
ANR	8439008	Identifier	width		8438132	1					
ANR	8439009	PtrMemberAccess	pmdev -> height		8438132	1					
ANR	8439010	Identifier	pmdev		8438132	0					
ANR	8439011	Identifier	height		8438132	1					
ANR	8439012	ExpressionStatement	code = gx_set_device_color_1 ( pgs )	1129:8:38846:38879	8438132	25	True				
ANR	8439013	AssignmentExpression	code = gx_set_device_color_1 ( pgs )		8438132	0		=			
ANR	8439014	Identifier	code		8438132	0					
ANR	8439015	CallExpression	gx_set_device_color_1 ( pgs )		8438132	1					
ANR	8439016	Callee	gx_set_device_color_1		8438132	0					
ANR	8439017	Identifier	gx_set_device_color_1		8438132	0					
ANR	8439018	ArgumentList	pgs		8438132	1					
ANR	8439019	Argument	pgs		8438132	0					
ANR	8439020	Identifier	pgs		8438132	0					
ANR	8439021	IfStatement	if ( code < 0 )		8438132	26					
ANR	8439022	Condition	code < 0	1130:12:38913:38920	8438132	0	True				
ANR	8439023	RelationalExpression	code < 0		8438132	0		<			
ANR	8439024	Identifier	code		8438132	0					
ANR	8439025	PrimaryExpression	0		8438132	1					
ANR	8439026	ReturnStatement	return code ;	1131:12:38935:38946	8438132	1	True				
ANR	8439027	Identifier	code		8438132	0					
ANR	8439028	ExpressionStatement	smat . tx = ( float ) ( - ipx )	1132:8:38956:38979	8438132	27	True				
ANR	8439029	AssignmentExpression	smat . tx = ( float ) ( - ipx )		8438132	0		=			
ANR	8439030	MemberAccess	smat . tx		8438132	0					
ANR	8439031	Identifier	smat		8438132	0					
ANR	8439032	Identifier	tx		8438132	1					
ANR	8439033	CastExpression	( float ) ( - ipx )		8438132	1					
ANR	8439034	CastTarget	float		8438132	0					
ANR	8439035	UnaryOperationExpression	- ipx		8438132	1					
ANR	8439036	UnaryOperator	-		8438132	0					
ANR	8439037	Identifier	ipx		8438132	1					
ANR	8439038	ExpressionStatement	smat . ty = ( float ) ( - ipy )	1133:8:38989:39012	8438132	28	True				
ANR	8439039	AssignmentExpression	smat . ty = ( float ) ( - ipy )		8438132	0		=			
ANR	8439040	MemberAccess	smat . ty		8438132	0					
ANR	8439041	Identifier	smat		8438132	0					
ANR	8439042	Identifier	ty		8438132	1					
ANR	8439043	CastExpression	( float ) ( - ipy )		8438132	1					
ANR	8439044	CastTarget	float		8438132	0					
ANR	8439045	UnaryOperationExpression	- ipy		8438132	1					
ANR	8439046	UnaryOperator	-		8438132	0					
ANR	8439047	Identifier	ipy		8438132	1					
ANR	8439048	ExpressionStatement	"gs_setmatrix ( pgs , & smat )"	1134:8:39022:39046	8438132	29	True				
ANR	8439049	CallExpression	"gs_setmatrix ( pgs , & smat )"		8438132	0					
ANR	8439050	Callee	gs_setmatrix		8438132	0					
ANR	8439051	Identifier	gs_setmatrix		8438132	0					
ANR	8439052	ArgumentList	pgs		8438132	1					
ANR	8439053	Argument	pgs		8438132	0					
ANR	8439054	Identifier	pgs		8438132	0					
ANR	8439055	Argument	& smat		8438132	1					
ANR	8439056	UnaryOperationExpression	& smat		8438132	0					
ANR	8439057	UnaryOperator	&		8438132	0					
ANR	8439058	Identifier	smat		8438132	1					
ANR	8439059	ExpressionStatement	"code = gs_type42_append ( glyph , pgs , pgs -> path , ( gs_text_enum_t * ) penum , pfont , gs_show_in_charpath ( penum ) != cpm_show )"	1136:4:39058:39233	8438132	73	True				
ANR	8439060	AssignmentExpression	"code = gs_type42_append ( glyph , pgs , pgs -> path , ( gs_text_enum_t * ) penum , pfont , gs_show_in_charpath ( penum ) != cpm_show )"		8438132	0		=			
ANR	8439061	Identifier	code		8438132	0					
ANR	8439062	CallExpression	"gs_type42_append ( glyph , pgs , pgs -> path , ( gs_text_enum_t * ) penum , pfont , gs_show_in_charpath ( penum ) != cpm_show )"		8438132	1					
ANR	8439063	Callee	gs_type42_append		8438132	0					
ANR	8439064	Identifier	gs_type42_append		8438132	0					
ANR	8439065	ArgumentList	glyph		8438132	1					
ANR	8439066	Argument	glyph		8438132	0					
ANR	8439067	Identifier	glyph		8438132	0					
ANR	8439068	Argument	pgs		8438132	1					
ANR	8439069	Identifier	pgs		8438132	0					
ANR	8439070	Argument	pgs -> path		8438132	2					
ANR	8439071	PtrMemberAccess	pgs -> path		8438132	0					
ANR	8439072	Identifier	pgs		8438132	0					
ANR	8439073	Identifier	path		8438132	1					
ANR	8439074	Argument	( gs_text_enum_t * ) penum		8438132	3					
ANR	8439075	CastExpression	( gs_text_enum_t * ) penum		8438132	0					
ANR	8439076	CastTarget	gs_text_enum_t *		8438132	0					
ANR	8439077	Identifier	penum		8438132	1					
ANR	8439078	Argument	pfont		8438132	4					
ANR	8439079	Identifier	pfont		8438132	0					
ANR	8439080	Argument	gs_show_in_charpath ( penum ) != cpm_show		8438132	5					
ANR	8439081	EqualityExpression	gs_show_in_charpath ( penum ) != cpm_show		8438132	0		!=			
ANR	8439082	CallExpression	gs_show_in_charpath ( penum )		8438132	0					
ANR	8439083	Callee	gs_show_in_charpath		8438132	0					
ANR	8439084	Identifier	gs_show_in_charpath		8438132	0					
ANR	8439085	ArgumentList	penum		8438132	1					
ANR	8439086	Argument	penum		8438132	0					
ANR	8439087	Identifier	penum		8438132	0					
ANR	8439088	Identifier	cpm_show		8438132	1					
ANR	8439089	IfStatement	if ( code >= 0 )		8438132	74					
ANR	8439090	Condition	code >= 0	1139:8:39243:39251	8438132	0	True				
ANR	8439091	RelationalExpression	code >= 0		8438132	0		>=			
ANR	8439092	Identifier	code		8438132	0					
ANR	8439093	PrimaryExpression	0		8438132	1					
ANR	8439094	CompoundStatement		168:8:6071:6107	8438132	1					
ANR	8439095	IdentifierDeclStatement	gs_fixed_point fa = pgs -> fill_adjust ;	1145:8:39544:39580	8438132	0	True				
ANR	8439096	IdentifierDecl	fa = pgs -> fill_adjust		8438132	0					
ANR	8439097	IdentifierDeclType	gs_fixed_point		8438132	0					
ANR	8439098	Identifier	fa		8438132	1					
ANR	8439099	AssignmentExpression	fa = pgs -> fill_adjust		8438132	2		=			
ANR	8439100	Identifier	fa		8438132	0					
ANR	8439101	PtrMemberAccess	pgs -> fill_adjust		8438132	1					
ANR	8439102	Identifier	pgs		8438132	0					
ANR	8439103	Identifier	fill_adjust		8438132	1					
ANR	8439104	ExpressionStatement	pgs -> fill_adjust . x = pgs -> fill_adjust . y = - 1	1147:8:39591:39635	8438132	1	True				
ANR	8439105	AssignmentExpression	pgs -> fill_adjust . x = pgs -> fill_adjust . y = - 1		8438132	0		=			
ANR	8439106	MemberAccess	pgs -> fill_adjust . x		8438132	0					
ANR	8439107	PtrMemberAccess	pgs -> fill_adjust		8438132	0					
ANR	8439108	Identifier	pgs		8438132	0					
ANR	8439109	Identifier	fill_adjust		8438132	1					
ANR	8439110	Identifier	x		8438132	1					
ANR	8439111	AssignmentExpression	pgs -> fill_adjust . y = - 1		8438132	1		=			
ANR	8439112	MemberAccess	pgs -> fill_adjust . y		8438132	0					
ANR	8439113	PtrMemberAccess	pgs -> fill_adjust		8438132	0					
ANR	8439114	Identifier	pgs		8438132	0					
ANR	8439115	Identifier	fill_adjust		8438132	1					
ANR	8439116	Identifier	y		8438132	1					
ANR	8439117	UnaryOperationExpression	- 1		8438132	1					
ANR	8439118	UnaryOperator	-		8438132	0					
ANR	8439119	PrimaryExpression	1		8438132	1					
ANR	8439120	ExpressionStatement	code = ( pfont -> PaintType ? gs_stroke ( pgs ) : gs_fill ( pgs ) )	1148:8:39645:39702	8438132	2	True				
ANR	8439121	AssignmentExpression	code = ( pfont -> PaintType ? gs_stroke ( pgs ) : gs_fill ( pgs ) )		8438132	0		=			
ANR	8439122	Identifier	code		8438132	0					
ANR	8439123	ConditionalExpression	pfont -> PaintType ? gs_stroke ( pgs ) : gs_fill ( pgs )		8438132	1					
ANR	8439124	Condition	pfont -> PaintType		8438132	0					
ANR	8439125	PtrMemberAccess	pfont -> PaintType		8438132	0					
ANR	8439126	Identifier	pfont		8438132	0					
ANR	8439127	Identifier	PaintType		8438132	1					
ANR	8439128	CallExpression	gs_stroke ( pgs )		8438132	1					
ANR	8439129	Callee	gs_stroke		8438132	0					
ANR	8439130	Identifier	gs_stroke		8438132	0					
ANR	8439131	ArgumentList	pgs		8438132	1					
ANR	8439132	Argument	pgs		8438132	0					
ANR	8439133	Identifier	pgs		8438132	0					
ANR	8439134	CallExpression	gs_fill ( pgs )		8438132	2					
ANR	8439135	Callee	gs_fill		8438132	0					
ANR	8439136	Identifier	gs_fill		8438132	0					
ANR	8439137	ArgumentList	pgs		8438132	1					
ANR	8439138	Argument	pgs		8438132	0					
ANR	8439139	Identifier	pgs		8438132	0					
ANR	8439140	ExpressionStatement	pgs -> fill_adjust = fa	1149:8:39712:39733	8438132	3	True				
ANR	8439141	AssignmentExpression	pgs -> fill_adjust = fa		8438132	0		=			
ANR	8439142	PtrMemberAccess	pgs -> fill_adjust		8438132	0					
ANR	8439143	Identifier	pgs		8438132	0					
ANR	8439144	Identifier	fill_adjust		8438132	1					
ANR	8439145	Identifier	fa		8438132	1					
ANR	8439146	IfStatement	if ( ctm_modified )		8438132	75					
ANR	8439147	Condition	ctm_modified	1151:8:39749:39760	8438132	0	True				
ANR	8439148	Identifier	ctm_modified		8438132	0					
ANR	8439149	ExpressionStatement	"gs_setmatrix ( pgs , & save_ctm )"	1152:8:39771:39799	8438132	1	True				
ANR	8439150	CallExpression	"gs_setmatrix ( pgs , & save_ctm )"		8438132	0					
ANR	8439151	Callee	gs_setmatrix		8438132	0					
ANR	8439152	Identifier	gs_setmatrix		8438132	0					
ANR	8439153	ArgumentList	pgs		8438132	1					
ANR	8439154	Argument	pgs		8438132	0					
ANR	8439155	Identifier	pgs		8438132	0					
ANR	8439156	Argument	& save_ctm		8438132	1					
ANR	8439157	UnaryOperationExpression	& save_ctm		8438132	0					
ANR	8439158	UnaryOperator	&		8438132	0					
ANR	8439159	Identifier	save_ctm		8438132	1					
ANR	8439160	IfStatement	if ( bold_added && ( code >= 0 ) )		8438132	76					
ANR	8439161	Condition	bold_added && ( code >= 0 )	1153:8:39809:39833	8438132	0	True				
ANR	8439162	AndExpression	bold_added && ( code >= 0 )		8438132	0		&&			
ANR	8439163	Identifier	bold_added		8438132	0					
ANR	8439164	RelationalExpression	code >= 0		8438132	1		>=			
ANR	8439165	Identifier	code		8438132	0					
ANR	8439166	PrimaryExpression	0		8438132	1					
ANR	8439167	ExpressionStatement	code = gs_grestore ( pgs )	1154:8:39844:39867	8438132	1	True				
ANR	8439168	AssignmentExpression	code = gs_grestore ( pgs )		8438132	0		=			
ANR	8439169	Identifier	code		8438132	0					
ANR	8439170	CallExpression	gs_grestore ( pgs )		8438132	1					
ANR	8439171	Callee	gs_grestore		8438132	0					
ANR	8439172	Identifier	gs_grestore		8438132	0					
ANR	8439173	ArgumentList	pgs		8438132	1					
ANR	8439174	Argument	pgs		8438132	0					
ANR	8439175	Identifier	pgs		8438132	0					
ANR	8439176	IfStatement	if ( code < 0 || ! bold_added )		8438132	77					
ANR	8439177	Condition	code < 0 || ! bold_added	1156:8:39878:39900	8438132	0	True				
ANR	8439178	OrExpression	code < 0 || ! bold_added		8438132	0		||			
ANR	8439179	RelationalExpression	code < 0		8438132	0		<			
ANR	8439180	Identifier	code		8438132	0					
ANR	8439181	PrimaryExpression	0		8438132	1					
ANR	8439182	UnaryOperationExpression	! bold_added		8438132	1					
ANR	8439183	UnaryOperator	!		8438132	0					
ANR	8439184	Identifier	bold_added		8438132	1					
ANR	8439185	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1157:8:39911:39939	8438132	1	True				
ANR	8439186	ConditionalExpression	code < 0 ? code : 0		8438132	0					
ANR	8439187	Condition	code < 0		8438132	0					
ANR	8439188	RelationalExpression	code < 0		8438132	0		<			
ANR	8439189	Identifier	code		8438132	0					
ANR	8439190	PrimaryExpression	0		8438132	1					
ANR	8439191	Identifier	code		8438132	1					
ANR	8439192	PrimaryExpression	0		8438132	2					
ANR	8439193	CompoundStatement		188:8:6670:6859	8438132	78					
ANR	8439194	IdentifierDeclStatement	gs_image_t image ;	1162:8:40020:40036	8438132	0	True				
ANR	8439195	IdentifierDecl	image		8438132	0					
ANR	8439196	IdentifierDeclType	gs_image_t		8438132	0					
ANR	8439197	Identifier	image		8438132	1					
ANR	8439198	IdentifierDeclStatement	"gs_image_enum * ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" ) ;"	1163:8:40046:40133	8438132	1	True				
ANR	8439199	IdentifierDecl	"* ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" )"		8438132	0					
ANR	8439200	IdentifierDeclType	gs_image_enum *		8438132	0					
ANR	8439201	Identifier	ienum		8438132	1					
ANR	8439202	AssignmentExpression	"* ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" )"		8438132	2		=			
ANR	8439203	Identifier	ienum		8438132	0					
ANR	8439204	CallExpression	"gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" )"		8438132	1					
ANR	8439205	Callee	gs_image_enum_alloc		8438132	0					
ANR	8439206	Identifier	gs_image_enum_alloc		8438132	0					
ANR	8439207	ArgumentList	pgs -> memory		8438132	1					
ANR	8439208	Argument	pgs -> memory		8438132	0					
ANR	8439209	PtrMemberAccess	pgs -> memory		8438132	0					
ANR	8439210	Identifier	pgs		8438132	0					
ANR	8439211	Identifier	memory		8438132	1					
ANR	8439212	Argument	"""pl_tt_build_char"""		8438132	1					
ANR	8439213	PrimaryExpression	"""pl_tt_build_char"""		8438132	0					
ANR	8439214	IdentifierDeclStatement	"byte * bold_lines = alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" ) ;"	1165:8:40143:40332	8438132	2	True				
ANR	8439215	IdentifierDecl	"* bold_lines = alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" )"		8438132	0					
ANR	8439216	IdentifierDeclType	byte *		8438132	0					
ANR	8439217	Identifier	bold_lines		8438132	1					
ANR	8439218	AssignmentExpression	"* bold_lines = alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" )"		8438132	2		=			
ANR	8439219	Identifier	bold_lines		8438132	0					
ANR	8439220	CallExpression	"alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" )"		8438132	1					
ANR	8439221	Callee	alloc_bold_lines		8438132	0					
ANR	8439222	Identifier	alloc_bold_lines		8438132	0					
ANR	8439223	ArgumentList	pgs -> memory		8438132	1					
ANR	8439224	Argument	pgs -> memory		8438132	0					
ANR	8439225	PtrMemberAccess	pgs -> memory		8438132	0					
ANR	8439226	Identifier	pgs		8438132	0					
ANR	8439227	Identifier	memory		8438132	1					
ANR	8439228	Argument	pmdev -> width - bold_added		8438132	1					
ANR	8439229	AdditiveExpression	pmdev -> width - bold_added		8438132	0		-			
ANR	8439230	PtrMemberAccess	pmdev -> width		8438132	0					
ANR	8439231	Identifier	pmdev		8438132	0					
ANR	8439232	Identifier	width		8438132	1					
ANR	8439233	Identifier	bold_added		8438132	1					
ANR	8439234	Argument	bold_added		8438132	2					
ANR	8439235	Identifier	bold_added		8438132	0					
ANR	8439236	Argument	"""pl_tt_build_char(bold_lines)"""		8438132	3					
ANR	8439237	PrimaryExpression	"""pl_tt_build_char(bold_lines)"""		8438132	0					
ANR	8439238	IfStatement	if ( ienum == 0 || bold_lines == 0 )		8438132	3					
ANR	8439239	Condition	ienum == 0 || bold_lines == 0	1170:12:40347:40375	8438132	0	True				
ANR	8439240	OrExpression	ienum == 0 || bold_lines == 0		8438132	0		||			
ANR	8439241	EqualityExpression	ienum == 0		8438132	0		==			
ANR	8439242	Identifier	ienum		8438132	0					
ANR	8439243	PrimaryExpression	0		8438132	1					
ANR	8439244	EqualityExpression	bold_lines == 0		8438132	1		==			
ANR	8439245	Identifier	bold_lines		8438132	0					
ANR	8439246	PrimaryExpression	0		8438132	1					
ANR	8439247	CompoundStatement		193:43:6905:6905	8438132	1					
ANR	8439248	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1171:12:40392:40430	8438132	0	True				
ANR	8439249	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		8438132	0		=			
ANR	8439250	Identifier	code		8438132	0					
ANR	8439251	CallExpression	gs_note_error ( gs_error_VMerror )		8438132	1					
ANR	8439252	Callee	gs_note_error		8438132	0					
ANR	8439253	Identifier	gs_note_error		8438132	0					
ANR	8439254	ArgumentList	gs_error_VMerror		8438132	1					
ANR	8439255	Argument	gs_error_VMerror		8438132	0					
ANR	8439256	Identifier	gs_error_VMerror		8438132	0					
ANR	8439257	GotoStatement	goto out ;	1172:12:40444:40452	8438132	1	True				
ANR	8439258	Identifier	out		8438132	0					
ANR	8439259	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	1174:8:40472:40506	8438132	4	True				
ANR	8439260	CallExpression	"gs_image_t_init_mask ( & image , true )"		8438132	0					
ANR	8439261	Callee	gs_image_t_init_mask		8438132	0					
ANR	8439262	Identifier	gs_image_t_init_mask		8438132	0					
ANR	8439263	ArgumentList	& image		8438132	1					
ANR	8439264	Argument	& image		8438132	0					
ANR	8439265	UnaryOperationExpression	& image		8438132	0					
ANR	8439266	UnaryOperator	&		8438132	0					
ANR	8439267	Identifier	image		8438132	1					
ANR	8439268	Argument	true		8438132	1					
ANR	8439269	Identifier	true		8438132	0					
ANR	8439270	ExpressionStatement	image . Width = pmdev -> width	1175:8:40516:40542	8438132	5	True				
ANR	8439271	AssignmentExpression	image . Width = pmdev -> width		8438132	0		=			
ANR	8439272	MemberAccess	image . Width		8438132	0					
ANR	8439273	Identifier	image		8438132	0					
ANR	8439274	Identifier	Width		8438132	1					
ANR	8439275	PtrMemberAccess	pmdev -> width		8438132	1					
ANR	8439276	Identifier	pmdev		8438132	0					
ANR	8439277	Identifier	width		8438132	1					
ANR	8439278	ExpressionStatement	image . Height = pmdev -> height + bold_added	1176:8:40552:40593	8438132	6	True				
ANR	8439279	AssignmentExpression	image . Height = pmdev -> height + bold_added		8438132	0		=			
ANR	8439280	MemberAccess	image . Height		8438132	0					
ANR	8439281	Identifier	image		8438132	0					
ANR	8439282	Identifier	Height		8438132	1					
ANR	8439283	AdditiveExpression	pmdev -> height + bold_added		8438132	1		+			
ANR	8439284	PtrMemberAccess	pmdev -> height		8438132	0					
ANR	8439285	Identifier	pmdev		8438132	0					
ANR	8439286	Identifier	height		8438132	1					
ANR	8439287	Identifier	bold_added		8438132	1					
ANR	8439288	ExpressionStatement	"gs_make_scaling ( scale , scale , & image . ImageMatrix )"	1177:8:40603:40652	8438132	7	True				
ANR	8439289	CallExpression	"gs_make_scaling ( scale , scale , & image . ImageMatrix )"		8438132	0					
ANR	8439290	Callee	gs_make_scaling		8438132	0					
ANR	8439291	Identifier	gs_make_scaling		8438132	0					
ANR	8439292	ArgumentList	scale		8438132	1					
ANR	8439293	Argument	scale		8438132	0					
ANR	8439294	Identifier	scale		8438132	0					
ANR	8439295	Argument	scale		8438132	1					
ANR	8439296	Identifier	scale		8438132	0					
ANR	8439297	Argument	& image . ImageMatrix		8438132	2					
ANR	8439298	UnaryOperationExpression	& image . ImageMatrix		8438132	0					
ANR	8439299	UnaryOperator	&		8438132	0					
ANR	8439300	MemberAccess	image . ImageMatrix		8438132	1					
ANR	8439301	Identifier	image		8438132	0					
ANR	8439302	Identifier	ImageMatrix		8438132	1					
ANR	8439303	ExpressionStatement	image . ImageMatrix . tx = ( float ) ( - ipx )	1178:8:40662:40698	8438132	8	True				
ANR	8439304	AssignmentExpression	image . ImageMatrix . tx = ( float ) ( - ipx )		8438132	0		=			
ANR	8439305	MemberAccess	image . ImageMatrix . tx		8438132	0					
ANR	8439306	MemberAccess	image . ImageMatrix		8438132	0					
ANR	8439307	Identifier	image		8438132	0					
ANR	8439308	Identifier	ImageMatrix		8438132	1					
ANR	8439309	Identifier	tx		8438132	1					
ANR	8439310	CastExpression	( float ) ( - ipx )		8438132	1					
ANR	8439311	CastTarget	float		8438132	0					
ANR	8439312	UnaryOperationExpression	- ipx		8438132	1					
ANR	8439313	UnaryOperator	-		8438132	0					
ANR	8439314	Identifier	ipx		8438132	1					
ANR	8439315	ExpressionStatement	image . ImageMatrix . ty = ( float ) ( - ipy )	1179:8:40708:40744	8438132	9	True				
ANR	8439316	AssignmentExpression	image . ImageMatrix . ty = ( float ) ( - ipy )		8438132	0		=			
ANR	8439317	MemberAccess	image . ImageMatrix . ty		8438132	0					
ANR	8439318	MemberAccess	image . ImageMatrix		8438132	0					
ANR	8439319	Identifier	image		8438132	0					
ANR	8439320	Identifier	ImageMatrix		8438132	1					
ANR	8439321	Identifier	ty		8438132	1					
ANR	8439322	CastExpression	( float ) ( - ipy )		8438132	1					
ANR	8439323	CastTarget	float		8438132	0					
ANR	8439324	UnaryOperationExpression	- ipy		8438132	1					
ANR	8439325	UnaryOperator	-		8438132	0					
ANR	8439326	Identifier	ipy		8438132	1					
ANR	8439327	ExpressionStatement	image . adjust = true	1180:8:40754:40773	8438132	10	True				
ANR	8439328	AssignmentExpression	image . adjust = true		8438132	0		=			
ANR	8439329	MemberAccess	image . adjust		8438132	0					
ANR	8439330	Identifier	image		8438132	0					
ANR	8439331	Identifier	adjust		8438132	1					
ANR	8439332	Identifier	true		8438132	1					
ANR	8439333	ExpressionStatement	"code = gs_setcharwidth ( penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"	1181:8:40783:40831	8438132	11	True				
ANR	8439334	AssignmentExpression	"code = gs_setcharwidth ( penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"		8438132	0		=			
ANR	8439335	Identifier	code		8438132	0					
ANR	8439336	CallExpression	"gs_setcharwidth ( penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"		8438132	1					
ANR	8439337	Callee	gs_setcharwidth		8438132	0					
ANR	8439338	Identifier	gs_setcharwidth		8438132	0					
ANR	8439339	ArgumentList	penum		8438132	1					
ANR	8439340	Argument	penum		8438132	0					
ANR	8439341	Identifier	penum		8438132	0					
ANR	8439342	Argument	pgs		8438132	1					
ANR	8439343	Identifier	pgs		8438132	0					
ANR	8439344	Argument	w2 [ 0 ]		8438132	2					
ANR	8439345	ArrayIndexing	w2 [ 0 ]		8438132	0					
ANR	8439346	Identifier	w2		8438132	0					
ANR	8439347	PrimaryExpression	0		8438132	1					
ANR	8439348	Argument	w2 [ 1 ]		8438132	3					
ANR	8439349	ArrayIndexing	w2 [ 1 ]		8438132	0					
ANR	8439350	Identifier	w2		8438132	0					
ANR	8439351	PrimaryExpression	1		8438132	1					
ANR	8439352	IfStatement	if ( code < 0 )		8438132	12					
ANR	8439353	Condition	code < 0	1182:12:40845:40852	8438132	0	True				
ANR	8439354	RelationalExpression	code < 0		8438132	0		<			
ANR	8439355	Identifier	code		8438132	0					
ANR	8439356	PrimaryExpression	0		8438132	1					
ANR	8439357	GotoStatement	goto out ;	1183:12:40867:40875	8438132	1	True				
ANR	8439358	Identifier	out		8438132	0					
ANR	8439359	ExpressionStatement	"code = pl_image_bitmap_char ( ienum , & image , pmdev -> base , bitmap_raster ( pmdev -> width ) , bold_added , bold_lines , pgs )"	1184:8:40885:41070	8438132	13	True				
ANR	8439360	AssignmentExpression	"code = pl_image_bitmap_char ( ienum , & image , pmdev -> base , bitmap_raster ( pmdev -> width ) , bold_added , bold_lines , pgs )"		8438132	0		=			
ANR	8439361	Identifier	code		8438132	0					
ANR	8439362	CallExpression	"pl_image_bitmap_char ( ienum , & image , pmdev -> base , bitmap_raster ( pmdev -> width ) , bold_added , bold_lines , pgs )"		8438132	1					
ANR	8439363	Callee	pl_image_bitmap_char		8438132	0					
ANR	8439364	Identifier	pl_image_bitmap_char		8438132	0					
ANR	8439365	ArgumentList	ienum		8438132	1					
ANR	8439366	Argument	ienum		8438132	0					
ANR	8439367	Identifier	ienum		8438132	0					
ANR	8439368	Argument	& image		8438132	1					
ANR	8439369	UnaryOperationExpression	& image		8438132	0					
ANR	8439370	UnaryOperator	&		8438132	0					
ANR	8439371	Identifier	image		8438132	1					
ANR	8439372	Argument	pmdev -> base		8438132	2					
ANR	8439373	PtrMemberAccess	pmdev -> base		8438132	0					
ANR	8439374	Identifier	pmdev		8438132	0					
ANR	8439375	Identifier	base		8438132	1					
ANR	8439376	Argument	bitmap_raster ( pmdev -> width )		8438132	3					
ANR	8439377	CallExpression	bitmap_raster ( pmdev -> width )		8438132	0					
ANR	8439378	Callee	bitmap_raster		8438132	0					
ANR	8439379	Identifier	bitmap_raster		8438132	0					
ANR	8439380	ArgumentList	pmdev -> width		8438132	1					
ANR	8439381	Argument	pmdev -> width		8438132	0					
ANR	8439382	PtrMemberAccess	pmdev -> width		8438132	0					
ANR	8439383	Identifier	pmdev		8438132	0					
ANR	8439384	Identifier	width		8438132	1					
ANR	8439385	Argument	bold_added		8438132	4					
ANR	8439386	Identifier	bold_added		8438132	0					
ANR	8439387	Argument	bold_lines		8438132	5					
ANR	8439388	Identifier	bold_lines		8438132	0					
ANR	8439389	Argument	pgs		8438132	6					
ANR	8439390	Identifier	pgs		8438132	0					
ANR	8439391	Label	out :	1187:6:41078:41081	8438132	14	True				
ANR	8439392	Identifier	out		8438132	0					
ANR	8439393	IfStatement	if ( bold_device_created )		8438132	15					
ANR	8439394	Condition	bold_device_created	1187:14:41086:41104	8438132	0	True				
ANR	8439395	Identifier	bold_device_created		8438132	0					
ANR	8439396	ExpressionStatement	"gx_device_retain ( ( gx_device * ) pmdev , false )"	1188:12:41119:41163	8438132	1	True				
ANR	8439397	CallExpression	"gx_device_retain ( ( gx_device * ) pmdev , false )"		8438132	0					
ANR	8439398	Callee	gx_device_retain		8438132	0					
ANR	8439399	Identifier	gx_device_retain		8438132	0					
ANR	8439400	ArgumentList	( gx_device * ) pmdev		8438132	1					
ANR	8439401	Argument	( gx_device * ) pmdev		8438132	0					
ANR	8439402	CastExpression	( gx_device * ) pmdev		8438132	0					
ANR	8439403	CastTarget	gx_device *		8438132	0					
ANR	8439404	Identifier	pmdev		8438132	1					
ANR	8439405	Argument	false		8438132	1					
ANR	8439406	Identifier	false		8438132	0					
ANR	8439407	ExpressionStatement	"gs_free_object ( pgs -> memory , bold_lines , ""pl_tt_build_char(bold_lines)"" )"	1189:8:41173:41267	8438132	16	True				
ANR	8439408	CallExpression	"gs_free_object ( pgs -> memory , bold_lines , ""pl_tt_build_char(bold_lines)"" )"		8438132	0					
ANR	8439409	Callee	gs_free_object		8438132	0					
ANR	8439410	Identifier	gs_free_object		8438132	0					
ANR	8439411	ArgumentList	pgs -> memory		8438132	1					
ANR	8439412	Argument	pgs -> memory		8438132	0					
ANR	8439413	PtrMemberAccess	pgs -> memory		8438132	0					
ANR	8439414	Identifier	pgs		8438132	0					
ANR	8439415	Identifier	memory		8438132	1					
ANR	8439416	Argument	bold_lines		8438132	1					
ANR	8439417	Identifier	bold_lines		8438132	0					
ANR	8439418	Argument	"""pl_tt_build_char(bold_lines)"""		8438132	2					
ANR	8439419	PrimaryExpression	"""pl_tt_build_char(bold_lines)"""		8438132	0					
ANR	8439420	ExpressionStatement	"gs_free_object ( pgs -> memory , ienum , ""pl_tt_build_char(image enum)"" )"	1191:8:41277:41343	8438132	17	True				
ANR	8439421	CallExpression	"gs_free_object ( pgs -> memory , ienum , ""pl_tt_build_char(image enum)"" )"		8438132	0					
ANR	8439422	Callee	gs_free_object		8438132	0					
ANR	8439423	Identifier	gs_free_object		8438132	0					
ANR	8439424	ArgumentList	pgs -> memory		8438132	1					
ANR	8439425	Argument	pgs -> memory		8438132	0					
ANR	8439426	PtrMemberAccess	pgs -> memory		8438132	0					
ANR	8439427	Identifier	pgs		8438132	0					
ANR	8439428	Identifier	memory		8438132	1					
ANR	8439429	Argument	ienum		8438132	1					
ANR	8439430	Identifier	ienum		8438132	0					
ANR	8439431	Argument	"""pl_tt_build_char(image enum)"""		8438132	2					
ANR	8439432	PrimaryExpression	"""pl_tt_build_char(image enum)"""		8438132	0					
ANR	8439433	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1193:4:41355:41383	8438132	79	True				
ANR	8439434	ConditionalExpression	code < 0 ? code : 0		8438132	0					
ANR	8439435	Condition	code < 0		8438132	0					
ANR	8439436	RelationalExpression	code < 0		8438132	0		<			
ANR	8439437	Identifier	code		8438132	0					
ANR	8439438	PrimaryExpression	0		8438132	1					
ANR	8439439	Identifier	code		8438132	1					
ANR	8439440	PrimaryExpression	0		8438132	2					
ANR	8439441	Statement	undef	1194:1:41386:41390	8438132	80	True				
ANR	8439442	Statement	pfont42	1194:7:41392:41398	8438132	81	True				
ANR	8439443	Statement	undef	1195:1:41401:41405	8438132	82	True				
ANR	8439444	Statement	pbfont	1195:7:41407:41412	8438132	83	True				
ANR	8439445	ReturnType	static int		8438132	1					
ANR	8439446	Identifier	pl_tt_build_char		8438132	2					
ANR	8439447	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph orig_glyph"		8438132	3					
ANR	8439448	Parameter	gs_show_enum * penum	976:17:33365:33384	8438132	0	True				
ANR	8439449	ParameterType	gs_show_enum *		8438132	0					
ANR	8439450	Identifier	penum		8438132	1					
ANR	8439451	Parameter	gs_gstate * pgs	976:39:33387:33401	8438132	1	True				
ANR	8439452	ParameterType	gs_gstate *		8438132	0					
ANR	8439453	Identifier	pgs		8438132	1					
ANR	8439454	Parameter	gs_font * pfont	976:56:33404:33418	8438132	2	True				
ANR	8439455	ParameterType	gs_font *		8438132	0					
ANR	8439456	Identifier	pfont		8438132	1					
ANR	8439457	Parameter	gs_char chr	977:17:33438:33448	8438132	3	True				
ANR	8439458	ParameterType	gs_char		8438132	0					
ANR	8439459	Identifier	chr		8438132	1					
ANR	8439460	Parameter	gs_glyph orig_glyph	977:30:33451:33469	8438132	4	True				
ANR	8439461	ParameterType	gs_glyph		8438132	0					
ANR	8439462	Identifier	orig_glyph		8438132	1					
ANR	8439463	CFGEntryNode	ENTRY		8438132		True				
ANR	8439464	CFGExitNode	EXIT		8438132		True				
ANR	8439465	Symbol	cpm_show		8438132						
ANR	8439466	Symbol	image . ImageMatrix		8438132						
ANR	8439467	Symbol	* pgs		8438132						
ANR	8439468	Symbol	sbox . p		8438132						
ANR	8439469	Symbol	sbw		8438132						
ANR	8439470	Symbol	sbox . q		8438132						
ANR	8439471	Symbol	plfont		8438132						
ANR	8439472	Symbol	open_device		8438132						
ANR	8439473	Symbol	pbbox -> p		8438132						
ANR	8439474	Symbol	pbbox -> q		8438132						
ANR	8439475	Symbol	sbox . q . x		8438132						
ANR	8439476	Symbol	sbox . q . y		8438132						
ANR	8439477	Symbol	mat . xy		8438132						
ANR	8439478	Symbol	mat . xx		8438132						
ANR	8439479	Symbol	& smat		8438132						
ANR	8439480	Symbol	pl_image_bitmap_char		8438132						
ANR	8439481	Symbol	ienum		8438132						
ANR	8439482	Symbol	gs_stroke		8438132						
ANR	8439483	Symbol	gs_show_in_charpath		8438132						
ANR	8439484	Symbol	save_ctm		8438132						
ANR	8439485	Symbol	gs_currentlinewidth		8438132						
ANR	8439486	Symbol	& image		8438132						
ANR	8439487	Symbol	penum		8438132						
ANR	8439488	Symbol	bold_device_created		8438132						
ANR	8439489	Symbol	ceil		8438132						
ANR	8439490	Symbol	cbox . q		8438132						
ANR	8439491	Symbol	cbox . p		8438132						
ANR	8439492	Symbol	pfont -> client_data		8438132						
ANR	8439493	Symbol	ipx		8438132						
ANR	8439494	Symbol	bold_lines		8438132						
ANR	8439495	Symbol	ipy		8438132						
ANR	8439496	Symbol	pmdev -> width		8438132						
ANR	8439497	Symbol	smat		8438132						
ANR	8439498	Symbol	pgs -> fill_adjust . y		8438132						
ANR	8439499	Symbol	pgs -> fill_adjust . x		8438132						
ANR	8439500	Symbol	& image . ImageMatrix		8438132						
ANR	8439501	Symbol	pl_font_vertical_glyph		8438132						
ANR	8439502	Symbol	* pmdev		8438132						
ANR	8439503	Symbol	pmdev -> is_open		8438132						
ANR	8439504	Symbol	& mat		8438132						
ANR	8439505	Symbol	* w2		8438132						
ANR	8439506	Symbol	* dev_proc		8438132						
ANR	8439507	Symbol	pbbox -> p . x		8438132						
ANR	8439508	Symbol	image . ImageMatrix . ty		8438132						
ANR	8439509	Symbol	pbbox -> p . y		8438132						
ANR	8439510	Symbol	sbox		8438132						
ANR	8439511	Symbol	smat . tx		8438132						
ANR	8439512	Symbol	smat . ty		8438132						
ANR	8439513	Symbol	image . ImageMatrix . tx		8438132						
ANR	8439514	Symbol	iqy		8438132						
ANR	8439515	Symbol	gs_grestore		8438132						
ANR	8439516	Symbol	bold_fraction		8438132						
ANR	8439517	Symbol	iqx		8438132						
ANR	8439518	Symbol	gs_gsave		8438132						
ANR	8439519	Symbol	gs_currentmiterlimit		8438132						
ANR	8439520	Symbol	& pmdev		8438132						
ANR	8439521	Symbol	cbox . q . y		8438132						
ANR	8439522	Symbol	pgs		8438132						
ANR	8439523	Symbol	pgs -> memory		8438132						
ANR	8439524	Symbol	cbox . q . x		8438132						
ANR	8439525	Symbol	mat		8438132						
ANR	8439526	Symbol	tt_set_cache		8438132						
ANR	8439527	Symbol	fabs		8438132						
ANR	8439528	Symbol	pfont42		8438132						
ANR	8439529	Symbol	max		8438132						
ANR	8439530	Symbol	bitmap_raster		8438132						
ANR	8439531	Symbol	GS_NO_GLYPH		8438132						
ANR	8439532	Symbol	* sbw		8438132						
ANR	8439533	Symbol	int2fixed		8438132						
ANR	8439534	Symbol	"* dev_proc ( pmdev , open_device )"		8438132						
ANR	8439535	Symbol	& cbox		8438132						
ANR	8439536	Symbol	pfont -> WMode		8438132						
ANR	8439537	Symbol	pmdev -> base		8438132						
ANR	8439538	Symbol	gs_make_mem_mono_device_with_copydevice		8438132						
ANR	8439539	Symbol	pmdev -> height		8438132						
ANR	8439540	Symbol	pmdev -> bitmap_memory		8438132						
ANR	8439541	Symbol	fixed_0		8438132						
ANR	8439542	Symbol	pgs -> device		8438132						
ANR	8439543	Symbol	* pbbox		8438132						
ANR	8439544	Symbol	w2		8438132						
ANR	8439545	Symbol	bold_added		8438132						
ANR	8439546	Symbol	image		8438132						
ANR	8439547	Symbol	sbox . p . x		8438132						
ANR	8439548	Symbol	sbox . p . y		8438132						
ANR	8439549	Symbol	pmdev		8438132						
ANR	8439550	Symbol	cbox		8438132						
ANR	8439551	Symbol	chr		8438132						
ANR	8439552	Symbol	alloc_bold_lines		8438132						
ANR	8439553	Symbol	gx_set_device_color_1		8438132						
ANR	8439554	Symbol	expand		8438132						
ANR	8439555	Symbol	true		8438132						
ANR	8439556	Symbol	fa		8438132						
ANR	8439557	Symbol	pfont -> PaintType		8438132						
ANR	8439558	Symbol	gs_fill		8438132						
ANR	8439559	Symbol	pbbox -> q . y		8438132						
ANR	8439560	Symbol	image . Width		8438132						
ANR	8439561	Symbol	pbbox		8438132						
ANR	8439562	Symbol	ctm_modified		8438132						
ANR	8439563	Symbol	code		8438132						
ANR	8439564	Symbol	gs_image_enum_alloc		8438132						
ANR	8439565	Symbol	cbox . p . x		8438132						
ANR	8439566	Symbol	scale		8438132						
ANR	8439567	Symbol	cbox . p . y		8438132						
ANR	8439568	Symbol	vertical		8438132						
ANR	8439569	Symbol	pgs -> path		8438132						
ANR	8439570	Symbol	gs_moveto		8438132						
ANR	8439571	Symbol	gs_type42_append		8438132						
ANR	8439572	Symbol	gs_setcharwidth		8438132						
ANR	8439573	Symbol	gs_type42_get_metrics		8438132						
ANR	8439574	Symbol	gx_clip_to_rectangle		8438132						
ANR	8439575	Symbol	dev_proc		8438132						
ANR	8439576	Symbol	pbbox -> q . x		8438132						
ANR	8439577	Symbol	plfont -> allow_vertical_substitutes		8438132						
ANR	8439578	Symbol	& sbox		8438132						
ANR	8439579	Symbol	& save_ctm		8438132						
ANR	8439580	Symbol	pfont		8438132						
ANR	8439581	Symbol	orig_glyph		8438132						
ANR	8439582	Symbol	false		8438132						
ANR	8439583	Symbol	image . Height		8438132						
ANR	8439584	Symbol	pgs -> fill_adjust		8438132						
ANR	8439585	Symbol	gs_error_VMerror		8438132						
ANR	8439586	Symbol	glyph		8438132						
ANR	8439587	Symbol	* pfont		8438132						
ANR	8439588	Symbol	pbfont		8438132						
ANR	8439589	Symbol	gs_note_error		8438132						
ANR	8439590	Symbol	plfont -> bold_fraction		8438132						
ANR	8439591	Symbol	mat . yy		8438132						
ANR	8439592	Symbol	image . adjust		8438132						
ANR	8439593	Symbol	mat . yx		8438132						
ANR	8439594	Symbol	& pbfont -> FontBBox		8438132						
ANR	8439595	Symbol	* plfont		8438132						
ANR	8439596	Function	pl_intelli_encode_char	1200:0:41559:41709							
ANR	8439597	FunctionDef	"pl_intelli_encode_char (gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used)"		8439596	0					
ANR	8439598	CompoundStatement		1203:0:41679:41709	8439596	0					
ANR	8439599	ReturnStatement	return ( gs_glyph ) pchr ;	1204:4:41685:41707	8439596	0	True				
ANR	8439600	CastExpression	( gs_glyph ) pchr		8439596	0					
ANR	8439601	CastTarget	gs_glyph		8439596	0					
ANR	8439602	Identifier	pchr		8439596	1					
ANR	8439603	ReturnType	static gs_glyph		8439596	1					
ANR	8439604	Identifier	pl_intelli_encode_char		8439596	2					
ANR	8439605	ParameterList	"gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used"		8439596	3					
ANR	8439606	Parameter	gs_font * pfont	1201:23:41598:41612	8439596	0	True				
ANR	8439607	ParameterType	gs_font *		8439596	0					
ANR	8439608	Identifier	pfont		8439596	1					
ANR	8439609	Parameter	gs_char pchr	1201:40:41615:41626	8439596	1	True				
ANR	8439610	ParameterType	gs_char		8439596	0					
ANR	8439611	Identifier	pchr		8439596	1					
ANR	8439612	Parameter	gs_glyph_space_t not_used	1202:23:41652:41676	8439596	2	True				
ANR	8439613	ParameterType	gs_glyph_space_t		8439596	0					
ANR	8439614	Identifier	not_used		8439596	1					
ANR	8439615	CFGEntryNode	ENTRY		8439596		True				
ANR	8439616	CFGExitNode	EXIT		8439596		True				
ANR	8439617	Symbol	not_used		8439596						
ANR	8439618	Symbol	pfont		8439596						
ANR	8439619	Symbol	pchr		8439596						
ANR	8439620	ClassDef	intelli_metrics_s	1208:8:41775:41931							
ANR	8439621	DeclStmt									
ANR	8439622	Decl							byte	byte [ 2 ]	halfLine
ANR	8439623	DeclStmt									
ANR	8439624	Decl							byte	byte [ 2 ]	centerline
ANR	8439625	DeclStmt									
ANR	8439626	Decl							intelli_metrics_s	intelli_metrics_s	intelli_metrics_t
ANR	8439627	Function	pl_intelli_merge_box	1218:0:42074:43503							
ANR	8439628	FunctionDef	"pl_intelli_merge_box (float wbox [ 6 ] , const pl_font_t * plfont , gs_glyph glyph)"		8439627	0					
ANR	8439629	CompoundStatement		1220:0:42164:43503	8439627	0					
ANR	8439630	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data ;"	1221:4:42170:42231	8439627	0	True				
ANR	8439631	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8439627	0					
ANR	8439632	IdentifierDeclType	const byte *		8439627	0					
ANR	8439633	Identifier	cdata		8439627	1					
ANR	8439634	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8439627	2		=			
ANR	8439635	Identifier	cdata		8439627	0					
ANR	8439636	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8439627	1					
ANR	8439637	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8439627	0					
ANR	8439638	Callee	pl_font_lookup_glyph		8439627	0					
ANR	8439639	Identifier	pl_font_lookup_glyph		8439627	0					
ANR	8439640	ArgumentList	plfont		8439627	1					
ANR	8439641	Argument	plfont		8439627	0					
ANR	8439642	Identifier	plfont		8439627	0					
ANR	8439643	Argument	glyph		8439627	1					
ANR	8439644	Identifier	glyph		8439627	0					
ANR	8439645	Identifier	data		8439627	1					
ANR	8439646	IfStatement	if ( cdata == 0 )		8439627	1					
ANR	8439647	Condition	cdata == 0	1223:8:42242:42251	8439627	0	True				
ANR	8439648	EqualityExpression	cdata == 0		8439627	0		==			
ANR	8439649	Identifier	cdata		8439627	0					
ANR	8439650	PrimaryExpression	0		8439627	1					
ANR	8439651	ReturnStatement	return false ;	1224:8:42262:42274	8439627	1	True				
ANR	8439652	Identifier	false		8439627	0					
ANR	8439653	ExpressionStatement	wbox [ 1 ] = 0	1225:4:42280:42291	8439627	2	True				
ANR	8439654	AssignmentExpression	wbox [ 1 ] = 0		8439627	0		=			
ANR	8439655	ArrayIndexing	wbox [ 1 ]		8439627	0					
ANR	8439656	Identifier	wbox		8439627	0					
ANR	8439657	PrimaryExpression	1		8439627	1					
ANR	8439658	PrimaryExpression	0		8439627	1					
ANR	8439659	IfStatement	if ( cdata [ 3 ] == 4 )		8439627	3					
ANR	8439660	Condition	cdata [ 3 ] == 4	1226:8:42301:42313	8439627	0	True				
ANR	8439661	EqualityExpression	cdata [ 3 ] == 4		8439627	0		==			
ANR	8439662	ArrayIndexing	cdata [ 3 ]		8439627	0					
ANR	8439663	Identifier	cdata		8439627	0					
ANR	8439664	PrimaryExpression	3		8439627	1					
ANR	8439665	PrimaryExpression	4		8439627	1					
ANR	8439666	CompoundStatement		10:8:305:311	8439627	1					
ANR	8439667	IdentifierDeclStatement	bool found = false ;	1228:8:42442:42460	8439627	0	True				
ANR	8439668	IdentifierDecl	found = false		8439627	0					
ANR	8439669	IdentifierDeclType	bool		8439627	0					
ANR	8439670	Identifier	found		8439627	1					
ANR	8439671	AssignmentExpression	found = false		8439627	2		=			
ANR	8439672	Identifier	false		8439627	0					
ANR	8439673	Identifier	false		8439627	1					
ANR	8439674	IdentifierDeclStatement	uint i ;	1229:8:42470:42476	8439627	1	True				
ANR	8439675	IdentifierDecl	i		8439627	0					
ANR	8439676	IdentifierDeclType	uint		8439627	0					
ANR	8439677	Identifier	i		8439627	1					
ANR	8439678	ForStatement	for ( i = 0 ; i < cdata [ 6 ] ; ++ i )		8439627	2					
ANR	8439679	ForInit	i = 0 ;	1231:13:42492:42497	8439627	0	True				
ANR	8439680	AssignmentExpression	i = 0		8439627	0		=			
ANR	8439681	Identifier	i		8439627	0					
ANR	8439682	PrimaryExpression	0		8439627	1					
ANR	8439683	Condition	i < cdata [ 6 ]	1231:20:42499:42510	8439627	1	True				
ANR	8439684	RelationalExpression	i < cdata [ 6 ]		8439627	0		<			
ANR	8439685	Identifier	i		8439627	0					
ANR	8439686	ArrayIndexing	cdata [ 6 ]		8439627	1					
ANR	8439687	Identifier	cdata		8439627	0					
ANR	8439688	PrimaryExpression	6		8439627	1					
ANR	8439689	UnaryExpression	++ i	1231:34:42513:42515	8439627	2	True				
ANR	8439690	IncDec	++		8439627	0					
ANR	8439691	Identifier	i		8439627	1					
ANR	8439692	ExpressionStatement	"found |= pl_intelli_merge_box ( wbox , plfont , pl_get_uint16 ( cdata + 8 + i * 6 ) )"	1232:12:42530:42649	8439627	3	True				
ANR	8439693	AssignmentExpression	"found |= pl_intelli_merge_box ( wbox , plfont , pl_get_uint16 ( cdata + 8 + i * 6 ) )"		8439627	0		|=			
ANR	8439694	Identifier	found		8439627	0					
ANR	8439695	CallExpression	"pl_intelli_merge_box ( wbox , plfont , pl_get_uint16 ( cdata + 8 + i * 6 ) )"		8439627	1					
ANR	8439696	Callee	pl_intelli_merge_box		8439627	0					
ANR	8439697	Identifier	pl_intelli_merge_box		8439627	0					
ANR	8439698	ArgumentList	wbox		8439627	1					
ANR	8439699	Argument	wbox		8439627	0					
ANR	8439700	Identifier	wbox		8439627	0					
ANR	8439701	Argument	plfont		8439627	1					
ANR	8439702	Identifier	plfont		8439627	0					
ANR	8439703	Argument	pl_get_uint16 ( cdata + 8 + i * 6 )		8439627	2					
ANR	8439704	CallExpression	pl_get_uint16 ( cdata + 8 + i * 6 )		8439627	0					
ANR	8439705	Callee	pl_get_uint16		8439627	0					
ANR	8439706	Identifier	pl_get_uint16		8439627	0					
ANR	8439707	ArgumentList	cdata + 8 + i * 6		8439627	1					
ANR	8439708	Argument	cdata + 8 + i * 6		8439627	0					
ANR	8439709	AdditiveExpression	cdata + 8 + i * 6		8439627	0		+			
ANR	8439710	Identifier	cdata		8439627	0					
ANR	8439711	AdditiveExpression	8 + i * 6		8439627	1		+			
ANR	8439712	PrimaryExpression	8		8439627	0					
ANR	8439713	MultiplicativeExpression	i * 6		8439627	1		*			
ANR	8439714	Identifier	i		8439627	0					
ANR	8439715	PrimaryExpression	6		8439627	1					
ANR	8439716	ExpressionStatement	wbox [ 0 ] = ( float ) pl_get_int16 ( cdata + 4 )	1234:8:42659:42699	8439627	3	True				
ANR	8439717	AssignmentExpression	wbox [ 0 ] = ( float ) pl_get_int16 ( cdata + 4 )		8439627	0		=			
ANR	8439718	ArrayIndexing	wbox [ 0 ]		8439627	0					
ANR	8439719	Identifier	wbox		8439627	0					
ANR	8439720	PrimaryExpression	0		8439627	1					
ANR	8439721	CastExpression	( float ) pl_get_int16 ( cdata + 4 )		8439627	1					
ANR	8439722	CastTarget	float		8439627	0					
ANR	8439723	CallExpression	pl_get_int16 ( cdata + 4 )		8439627	1					
ANR	8439724	Callee	pl_get_int16		8439627	0					
ANR	8439725	Identifier	pl_get_int16		8439627	0					
ANR	8439726	ArgumentList	cdata + 4		8439627	1					
ANR	8439727	Argument	cdata + 4		8439627	0					
ANR	8439728	AdditiveExpression	cdata + 4		8439627	0		+			
ANR	8439729	Identifier	cdata		8439627	0					
ANR	8439730	PrimaryExpression	4		8439627	1					
ANR	8439731	ReturnStatement	return found ;	1235:8:42709:42721	8439627	4	True				
ANR	8439732	Identifier	found		8439627	0					
ANR	8439733	ExpressionStatement	cdata += 4	1238:4:42767:42777	8439627	4	True				
ANR	8439734	AssignmentExpression	cdata += 4		8439627	0		+=			
ANR	8439735	Identifier	cdata		8439627	0					
ANR	8439736	PrimaryExpression	4		8439627	1					
ANR	8439737	CompoundStatement		26:8:971:1020	8439627	5					
ANR	8439738	IdentifierDeclStatement	const intelli_metrics_t * metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) ) ;	1240:8:42841:42949	8439627	0	True				
ANR	8439739	IdentifierDecl	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8439627	0					
ANR	8439740	IdentifierDeclType	const intelli_metrics_t *		8439627	0					
ANR	8439741	Identifier	metrics		8439627	1					
ANR	8439742	AssignmentExpression	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8439627	2		=			
ANR	8439743	Identifier	metrics		8439627	0					
ANR	8439744	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8439627	1					
ANR	8439745	CastTarget	const intelli_metrics_t *		8439627	0					
ANR	8439746	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8439627	1		+			
ANR	8439747	Identifier	cdata		8439627	0					
ANR	8439748	CallExpression	pl_get_uint16 ( cdata + 2 )		8439627	1					
ANR	8439749	Callee	pl_get_uint16		8439627	0					
ANR	8439750	Identifier	pl_get_uint16		8439627	0					
ANR	8439751	ArgumentList	cdata + 2		8439627	1					
ANR	8439752	Argument	cdata + 2		8439627	0					
ANR	8439753	AdditiveExpression	cdata + 2		8439627	0		+			
ANR	8439754	Identifier	cdata		8439627	0					
ANR	8439755	PrimaryExpression	2		8439627	1					
ANR	8439756	IdentifierDeclStatement	int llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] ) ;	1242:8:42959:43008	8439627	1	True				
ANR	8439757	IdentifierDecl	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8439627	0					
ANR	8439758	IdentifierDeclType	int		8439627	0					
ANR	8439759	Identifier	llx		8439627	1					
ANR	8439760	AssignmentExpression	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8439627	2		=			
ANR	8439761	Identifier	llx		8439627	0					
ANR	8439762	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8439627	1					
ANR	8439763	Callee	pl_get_int16		8439627	0					
ANR	8439764	Identifier	pl_get_int16		8439627	0					
ANR	8439765	ArgumentList	metrics -> charSymbolBox [ 0 ]		8439627	1					
ANR	8439766	Argument	metrics -> charSymbolBox [ 0 ]		8439627	0					
ANR	8439767	ArrayIndexing	metrics -> charSymbolBox [ 0 ]		8439627	0					
ANR	8439768	PtrMemberAccess	metrics -> charSymbolBox		8439627	0					
ANR	8439769	Identifier	metrics		8439627	0					
ANR	8439770	Identifier	charSymbolBox		8439627	1					
ANR	8439771	PrimaryExpression	0		8439627	1					
ANR	8439772	IdentifierDeclStatement	int lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] ) ;	1243:8:43018:43067	8439627	2	True				
ANR	8439773	IdentifierDecl	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8439627	0					
ANR	8439774	IdentifierDeclType	int		8439627	0					
ANR	8439775	Identifier	lly		8439627	1					
ANR	8439776	AssignmentExpression	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8439627	2		=			
ANR	8439777	Identifier	lly		8439627	0					
ANR	8439778	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8439627	1					
ANR	8439779	Callee	pl_get_int16		8439627	0					
ANR	8439780	Identifier	pl_get_int16		8439627	0					
ANR	8439781	ArgumentList	metrics -> charSymbolBox [ 1 ]		8439627	1					
ANR	8439782	Argument	metrics -> charSymbolBox [ 1 ]		8439627	0					
ANR	8439783	ArrayIndexing	metrics -> charSymbolBox [ 1 ]		8439627	0					
ANR	8439784	PtrMemberAccess	metrics -> charSymbolBox		8439627	0					
ANR	8439785	Identifier	metrics		8439627	0					
ANR	8439786	Identifier	charSymbolBox		8439627	1					
ANR	8439787	PrimaryExpression	1		8439627	1					
ANR	8439788	IdentifierDeclStatement	int urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] ) ;	1244:8:43077:43126	8439627	3	True				
ANR	8439789	IdentifierDecl	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8439627	0					
ANR	8439790	IdentifierDeclType	int		8439627	0					
ANR	8439791	Identifier	urx		8439627	1					
ANR	8439792	AssignmentExpression	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8439627	2		=			
ANR	8439793	Identifier	urx		8439627	0					
ANR	8439794	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8439627	1					
ANR	8439795	Callee	pl_get_int16		8439627	0					
ANR	8439796	Identifier	pl_get_int16		8439627	0					
ANR	8439797	ArgumentList	metrics -> charSymbolBox [ 2 ]		8439627	1					
ANR	8439798	Argument	metrics -> charSymbolBox [ 2 ]		8439627	0					
ANR	8439799	ArrayIndexing	metrics -> charSymbolBox [ 2 ]		8439627	0					
ANR	8439800	PtrMemberAccess	metrics -> charSymbolBox		8439627	0					
ANR	8439801	Identifier	metrics		8439627	0					
ANR	8439802	Identifier	charSymbolBox		8439627	1					
ANR	8439803	PrimaryExpression	2		8439627	1					
ANR	8439804	IdentifierDeclStatement	int ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] ) ;	1245:8:43136:43185	8439627	4	True				
ANR	8439805	IdentifierDecl	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8439627	0					
ANR	8439806	IdentifierDeclType	int		8439627	0					
ANR	8439807	Identifier	ury		8439627	1					
ANR	8439808	AssignmentExpression	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8439627	2		=			
ANR	8439809	Identifier	ury		8439627	0					
ANR	8439810	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8439627	1					
ANR	8439811	Callee	pl_get_int16		8439627	0					
ANR	8439812	Identifier	pl_get_int16		8439627	0					
ANR	8439813	ArgumentList	metrics -> charSymbolBox [ 3 ]		8439627	1					
ANR	8439814	Argument	metrics -> charSymbolBox [ 3 ]		8439627	0					
ANR	8439815	ArrayIndexing	metrics -> charSymbolBox [ 3 ]		8439627	0					
ANR	8439816	PtrMemberAccess	metrics -> charSymbolBox		8439627	0					
ANR	8439817	Identifier	metrics		8439627	0					
ANR	8439818	Identifier	charSymbolBox		8439627	1					
ANR	8439819	PrimaryExpression	3		8439627	1					
ANR	8439820	ExpressionStatement	wbox [ 0 ] = ( float ) ( pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] ) )	1247:8:43196:43330	8439627	5	True				
ANR	8439821	AssignmentExpression	wbox [ 0 ] = ( float ) ( pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] ) )		8439627	0		=			
ANR	8439822	ArrayIndexing	wbox [ 0 ]		8439627	0					
ANR	8439823	Identifier	wbox		8439627	0					
ANR	8439824	PrimaryExpression	0		8439627	1					
ANR	8439825	CastExpression	( float ) ( pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] ) )		8439627	1					
ANR	8439826	CastTarget	float		8439627	0					
ANR	8439827	AdditiveExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8439627	1		-			
ANR	8439828	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] )		8439627	0					
ANR	8439829	Callee	pl_get_int16		8439627	0					
ANR	8439830	Identifier	pl_get_int16		8439627	0					
ANR	8439831	ArgumentList	metrics -> charEscapementBox [ 2 ]		8439627	1					
ANR	8439832	Argument	metrics -> charEscapementBox [ 2 ]		8439627	0					
ANR	8439833	ArrayIndexing	metrics -> charEscapementBox [ 2 ]		8439627	0					
ANR	8439834	PtrMemberAccess	metrics -> charEscapementBox		8439627	0					
ANR	8439835	Identifier	metrics		8439627	0					
ANR	8439836	Identifier	charEscapementBox		8439627	1					
ANR	8439837	PrimaryExpression	2		8439627	1					
ANR	8439838	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8439627	1					
ANR	8439839	Callee	pl_get_int16		8439627	0					
ANR	8439840	Identifier	pl_get_int16		8439627	0					
ANR	8439841	ArgumentList	metrics -> charEscapementBox [ 0 ]		8439627	1					
ANR	8439842	Argument	metrics -> charEscapementBox [ 0 ]		8439627	0					
ANR	8439843	ArrayIndexing	metrics -> charEscapementBox [ 0 ]		8439627	0					
ANR	8439844	PtrMemberAccess	metrics -> charEscapementBox		8439627	0					
ANR	8439845	Identifier	metrics		8439627	0					
ANR	8439846	Identifier	charEscapementBox		8439627	1					
ANR	8439847	PrimaryExpression	0		8439627	1					
ANR	8439848	ExpressionStatement	"wbox [ 2 ] = min ( wbox [ 2 ] , llx )"	1249:8:43340:43367	8439627	6	True				
ANR	8439849	AssignmentExpression	"wbox [ 2 ] = min ( wbox [ 2 ] , llx )"		8439627	0		=			
ANR	8439850	ArrayIndexing	wbox [ 2 ]		8439627	0					
ANR	8439851	Identifier	wbox		8439627	0					
ANR	8439852	PrimaryExpression	2		8439627	1					
ANR	8439853	CallExpression	"min ( wbox [ 2 ] , llx )"		8439627	1					
ANR	8439854	Callee	min		8439627	0					
ANR	8439855	Identifier	min		8439627	0					
ANR	8439856	ArgumentList	wbox [ 2 ]		8439627	1					
ANR	8439857	Argument	wbox [ 2 ]		8439627	0					
ANR	8439858	ArrayIndexing	wbox [ 2 ]		8439627	0					
ANR	8439859	Identifier	wbox		8439627	0					
ANR	8439860	PrimaryExpression	2		8439627	1					
ANR	8439861	Argument	llx		8439627	1					
ANR	8439862	Identifier	llx		8439627	0					
ANR	8439863	ExpressionStatement	"wbox [ 3 ] = min ( wbox [ 3 ] , lly )"	1250:8:43377:43404	8439627	7	True				
ANR	8439864	AssignmentExpression	"wbox [ 3 ] = min ( wbox [ 3 ] , lly )"		8439627	0		=			
ANR	8439865	ArrayIndexing	wbox [ 3 ]		8439627	0					
ANR	8439866	Identifier	wbox		8439627	0					
ANR	8439867	PrimaryExpression	3		8439627	1					
ANR	8439868	CallExpression	"min ( wbox [ 3 ] , lly )"		8439627	1					
ANR	8439869	Callee	min		8439627	0					
ANR	8439870	Identifier	min		8439627	0					
ANR	8439871	ArgumentList	wbox [ 3 ]		8439627	1					
ANR	8439872	Argument	wbox [ 3 ]		8439627	0					
ANR	8439873	ArrayIndexing	wbox [ 3 ]		8439627	0					
ANR	8439874	Identifier	wbox		8439627	0					
ANR	8439875	PrimaryExpression	3		8439627	1					
ANR	8439876	Argument	lly		8439627	1					
ANR	8439877	Identifier	lly		8439627	0					
ANR	8439878	ExpressionStatement	"wbox [ 4 ] = max ( wbox [ 4 ] , urx )"	1251:8:43414:43441	8439627	8	True				
ANR	8439879	AssignmentExpression	"wbox [ 4 ] = max ( wbox [ 4 ] , urx )"		8439627	0		=			
ANR	8439880	ArrayIndexing	wbox [ 4 ]		8439627	0					
ANR	8439881	Identifier	wbox		8439627	0					
ANR	8439882	PrimaryExpression	4		8439627	1					
ANR	8439883	CallExpression	"max ( wbox [ 4 ] , urx )"		8439627	1					
ANR	8439884	Callee	max		8439627	0					
ANR	8439885	Identifier	max		8439627	0					
ANR	8439886	ArgumentList	wbox [ 4 ]		8439627	1					
ANR	8439887	Argument	wbox [ 4 ]		8439627	0					
ANR	8439888	ArrayIndexing	wbox [ 4 ]		8439627	0					
ANR	8439889	Identifier	wbox		8439627	0					
ANR	8439890	PrimaryExpression	4		8439627	1					
ANR	8439891	Argument	urx		8439627	1					
ANR	8439892	Identifier	urx		8439627	0					
ANR	8439893	ExpressionStatement	"wbox [ 5 ] = max ( wbox [ 5 ] , ury )"	1252:8:43451:43478	8439627	9	True				
ANR	8439894	AssignmentExpression	"wbox [ 5 ] = max ( wbox [ 5 ] , ury )"		8439627	0		=			
ANR	8439895	ArrayIndexing	wbox [ 5 ]		8439627	0					
ANR	8439896	Identifier	wbox		8439627	0					
ANR	8439897	PrimaryExpression	5		8439627	1					
ANR	8439898	CallExpression	"max ( wbox [ 5 ] , ury )"		8439627	1					
ANR	8439899	Callee	max		8439627	0					
ANR	8439900	Identifier	max		8439627	0					
ANR	8439901	ArgumentList	wbox [ 5 ]		8439627	1					
ANR	8439902	Argument	wbox [ 5 ]		8439627	0					
ANR	8439903	ArrayIndexing	wbox [ 5 ]		8439627	0					
ANR	8439904	Identifier	wbox		8439627	0					
ANR	8439905	PrimaryExpression	5		8439627	1					
ANR	8439906	Argument	ury		8439627	1					
ANR	8439907	Identifier	ury		8439627	0					
ANR	8439908	ReturnStatement	return true ;	1254:4:43490:43501	8439627	6	True				
ANR	8439909	Identifier	true		8439627	0					
ANR	8439910	ReturnType	static bool		8439627	1					
ANR	8439911	Identifier	pl_intelli_merge_box		8439627	2					
ANR	8439912	ParameterList	"float wbox [ 6 ] , const pl_font_t * plfont , gs_glyph glyph"		8439627	3					
ANR	8439913	Parameter	float wbox [ 6 ]	1219:21:42107:42119	8439627	0	True				
ANR	8439914	ParameterType	float [ 6 ]		8439627	0					
ANR	8439915	Identifier	wbox		8439627	1					
ANR	8439916	Parameter	const pl_font_t * plfont	1219:36:42122:42145	8439627	1	True				
ANR	8439917	ParameterType	const pl_font_t *		8439627	0					
ANR	8439918	Identifier	plfont		8439627	1					
ANR	8439919	Parameter	gs_glyph glyph	1219:62:42148:42161	8439627	2	True				
ANR	8439920	ParameterType	gs_glyph		8439627	0					
ANR	8439921	Identifier	glyph		8439627	1					
ANR	8439922	CFGEntryNode	ENTRY		8439627		True				
ANR	8439923	CFGExitNode	EXIT		8439627		True				
ANR	8439924	Symbol	wbox		8439627						
ANR	8439925	Symbol	pl_font_lookup_glyph		8439627						
ANR	8439926	Symbol	plfont		8439627						
ANR	8439927	Symbol	pl_intelli_merge_box		8439627						
ANR	8439928	Symbol	* wbox		8439627						
ANR	8439929	Symbol	metrics -> charEscapementBox		8439627						
ANR	8439930	Symbol	found		8439627						
ANR	8439931	Symbol	min		8439627						
ANR	8439932	Symbol	* cdata		8439627						
ANR	8439933	Symbol	* metrics		8439627						
ANR	8439934	Symbol	pl_get_int16		8439627						
ANR	8439935	Symbol	* * metrics		8439627						
ANR	8439936	Symbol	* metrics -> charEscapementBox		8439627						
ANR	8439937	Symbol	pl_get_uint16		8439627						
ANR	8439938	Symbol	max		8439627						
ANR	8439939	Symbol	false		8439627						
ANR	8439940	Symbol	i		8439627						
ANR	8439941	Symbol	* pl_font_lookup_glyph		8439627						
ANR	8439942	Symbol	* metrics -> charSymbolBox		8439627						
ANR	8439943	Symbol	cdata		8439627						
ANR	8439944	Symbol	glyph		8439627						
ANR	8439945	Symbol	metrics -> charSymbolBox		8439627						
ANR	8439946	Symbol	lly		8439627						
ANR	8439947	Symbol	true		8439627						
ANR	8439948	Symbol	llx		8439627						
ANR	8439949	Symbol	urx		8439627						
ANR	8439950	Symbol	metrics		8439627						
ANR	8439951	Symbol	ury		8439627						
ANR	8439952	Symbol	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8439627						
ANR	8439953	Function	pl_intelli_show_char	1259:0:43610:52464							
ANR	8439954	FunctionDef	"pl_intelli_show_char (gs_gstate * pgs , const pl_font_t * plfont , gs_glyph glyph)"		8439953	0					
ANR	8439955	CompoundStatement		1261:0:43701:52464	8439953	0					
ANR	8439956	IdentifierDeclStatement	int code ;	1262:4:43707:43715	8439953	0	True				
ANR	8439957	IdentifierDecl	code		8439953	0					
ANR	8439958	IdentifierDeclType	int		8439953	0					
ANR	8439959	Identifier	code		8439953	1					
ANR	8439960	IdentifierDeclStatement	"const byte * cdata , * cdata_end ;"	1263:4:43721:43750	8439953	1	True				
ANR	8439961	IdentifierDecl	* cdata		8439953	0					
ANR	8439962	IdentifierDeclType	const byte *		8439953	0					
ANR	8439963	Identifier	cdata		8439953	1					
ANR	8439964	IdentifierDecl	* cdata_end		8439953	1					
ANR	8439965	IdentifierDeclType	const byte *		8439953	0					
ANR	8439966	Identifier	cdata_end		8439953	1					
ANR	8439967	IdentifierDeclStatement	pl_font_glyph_t * font_glyph ;	1264:4:43756:43783	8439953	2	True				
ANR	8439968	IdentifierDecl	* font_glyph		8439953	0					
ANR	8439969	IdentifierDeclType	pl_font_glyph_t *		8439953	0					
ANR	8439970	Identifier	font_glyph		8439953	1					
ANR	8439971	IdentifierDeclStatement	const intelli_metrics_t * metrics ;	1265:4:43789:43821	8439953	3	True				
ANR	8439972	IdentifierDecl	* metrics		8439953	0					
ANR	8439973	IdentifierDeclType	const intelli_metrics_t *		8439953	0					
ANR	8439974	Identifier	metrics		8439953	1					
ANR	8439975	IdentifierDeclStatement	"int * xBuffer = NULL , * yBuffer = NULL ;"	1266:4:43827:43863	8439953	4	True				
ANR	8439976	IdentifierDecl	* xBuffer = NULL		8439953	0					
ANR	8439977	IdentifierDeclType	int *		8439953	0					
ANR	8439978	Identifier	xBuffer		8439953	1					
ANR	8439979	AssignmentExpression	* xBuffer = NULL		8439953	2		=			
ANR	8439980	Identifier	NULL		8439953	0					
ANR	8439981	Identifier	NULL		8439953	1					
ANR	8439982	IdentifierDecl	* yBuffer = NULL		8439953	1					
ANR	8439983	IdentifierDeclType	int *		8439953	0					
ANR	8439984	Identifier	yBuffer		8439953	1					
ANR	8439985	AssignmentExpression	* yBuffer = NULL		8439953	2		=			
ANR	8439986	Identifier	NULL		8439953	0					
ANR	8439987	Identifier	NULL		8439953	1					
ANR	8439988	IdentifierDeclStatement	"client_name_t cname = ( client_name_t ) ""pl_intelli_show_char"" ;"	1267:4:43869:43929	8439953	5	True				
ANR	8439989	IdentifierDecl	"cname = ( client_name_t ) ""pl_intelli_show_char"""		8439953	0					
ANR	8439990	IdentifierDeclType	client_name_t		8439953	0					
ANR	8439991	Identifier	cname		8439953	1					
ANR	8439992	AssignmentExpression	"cname = ( client_name_t ) ""pl_intelli_show_char"""		8439953	2		=			
ANR	8439993	Identifier	cname		8439953	0					
ANR	8439994	CastExpression	"( client_name_t ) ""pl_intelli_show_char"""		8439953	1					
ANR	8439995	CastTarget	client_name_t		8439953	0					
ANR	8439996	PrimaryExpression	"""pl_intelli_show_char"""		8439953	1					
ANR	8439997	ExpressionStatement	"font_glyph = pl_font_lookup_glyph ( plfont , glyph )"	1269:4:43936:43984	8439953	6	True				
ANR	8439998	AssignmentExpression	"font_glyph = pl_font_lookup_glyph ( plfont , glyph )"		8439953	0		=			
ANR	8439999	Identifier	font_glyph		8439953	0					
ANR	8440000	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8439953	1					
ANR	8440001	Callee	pl_font_lookup_glyph		8439953	0					
ANR	8440002	Identifier	pl_font_lookup_glyph		8439953	0					
ANR	8440003	ArgumentList	plfont		8439953	1					
ANR	8440004	Argument	plfont		8439953	0					
ANR	8440005	Identifier	plfont		8439953	0					
ANR	8440006	Argument	glyph		8439953	1					
ANR	8440007	Identifier	glyph		8439953	0					
ANR	8440008	ExpressionStatement	cdata = font_glyph -> data	1270:4:43990:44014	8439953	7	True				
ANR	8440009	AssignmentExpression	cdata = font_glyph -> data		8439953	0		=			
ANR	8440010	Identifier	cdata		8439953	0					
ANR	8440011	PtrMemberAccess	font_glyph -> data		8439953	1					
ANR	8440012	Identifier	font_glyph		8439953	0					
ANR	8440013	Identifier	data		8439953	1					
ANR	8440014	ExpressionStatement	cdata_end = cdata + font_glyph -> data_len	1271:4:44020:44060	8439953	8	True				
ANR	8440015	AssignmentExpression	cdata_end = cdata + font_glyph -> data_len		8439953	0		=			
ANR	8440016	Identifier	cdata_end		8439953	0					
ANR	8440017	AdditiveExpression	cdata + font_glyph -> data_len		8439953	1		+			
ANR	8440018	Identifier	cdata		8439953	0					
ANR	8440019	PtrMemberAccess	font_glyph -> data_len		8439953	1					
ANR	8440020	Identifier	font_glyph		8439953	0					
ANR	8440021	Identifier	data_len		8439953	1					
ANR	8440022	IfStatement	if ( cdata == 0 )		8439953	9					
ANR	8440023	Condition	cdata == 0	1273:8:44071:44080	8439953	0	True				
ANR	8440024	EqualityExpression	cdata == 0		8439953	0		==			
ANR	8440025	Identifier	cdata		8439953	0					
ANR	8440026	PrimaryExpression	0		8439953	1					
ANR	8440027	CompoundStatement		13:20:381:381	8439953	1					
ANR	8440028	ExpressionStatement	"if_debug1m ( '1' , pgs -> memory , ""[1] no character data for glyph %ld\\n"" , glyph )"	1274:8:44093:44188	8439953	0	True				
ANR	8440029	CallExpression	"if_debug1m ( '1' , pgs -> memory , ""[1] no character data for glyph %ld\\n"" , glyph )"		8439953	0					
ANR	8440030	Callee	if_debug1m		8439953	0					
ANR	8440031	Identifier	if_debug1m		8439953	0					
ANR	8440032	ArgumentList	'1'		8439953	1					
ANR	8440033	Argument	'1'		8439953	0					
ANR	8440034	PrimaryExpression	'1'		8439953	0					
ANR	8440035	Argument	pgs -> memory		8439953	1					
ANR	8440036	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440037	Identifier	pgs		8439953	0					
ANR	8440038	Identifier	memory		8439953	1					
ANR	8440039	Argument	"""[1] no character data for glyph %ld\\n"""		8439953	2					
ANR	8440040	PrimaryExpression	"""[1] no character data for glyph %ld\\n"""		8439953	0					
ANR	8440041	Argument	glyph		8439953	3					
ANR	8440042	Identifier	glyph		8439953	0					
ANR	8440043	ReturnStatement	return 0 ;	1276:8:44198:44206	8439953	1	True				
ANR	8440044	PrimaryExpression	0		8439953	0					
ANR	8440045	IfStatement	if ( cdata [ 3 ] == 4 )		8439953	10					
ANR	8440046	Condition	cdata [ 3 ] == 4	1278:8:44222:44234	8439953	0	True				
ANR	8440047	EqualityExpression	cdata [ 3 ] == 4		8439953	0		==			
ANR	8440048	ArrayIndexing	cdata [ 3 ]		8439953	0					
ANR	8440049	Identifier	cdata		8439953	0					
ANR	8440050	PrimaryExpression	3		8439953	1					
ANR	8440051	PrimaryExpression	4		8439953	1					
ANR	8440052	CompoundStatement		20:8:605:610	8439953	1					
ANR	8440053	IdentifierDeclStatement	gs_matrix save_ctm ;	1279:8:44279:44297	8439953	0	True				
ANR	8440054	IdentifierDecl	save_ctm		8439953	0					
ANR	8440055	IdentifierDeclType	gs_matrix		8439953	0					
ANR	8440056	Identifier	save_ctm		8439953	1					
ANR	8440057	IdentifierDeclStatement	int i ;	1280:8:44307:44312	8439953	1	True				
ANR	8440058	IdentifierDecl	i		8439953	0					
ANR	8440059	IdentifierDeclType	int		8439953	0					
ANR	8440060	Identifier	i		8439953	1					
ANR	8440061	ExpressionStatement	"gs_currentmatrix ( pgs , & save_ctm )"	1282:8:44323:44355	8439953	2	True				
ANR	8440062	CallExpression	"gs_currentmatrix ( pgs , & save_ctm )"		8439953	0					
ANR	8440063	Callee	gs_currentmatrix		8439953	0					
ANR	8440064	Identifier	gs_currentmatrix		8439953	0					
ANR	8440065	ArgumentList	pgs		8439953	1					
ANR	8440066	Argument	pgs		8439953	0					
ANR	8440067	Identifier	pgs		8439953	0					
ANR	8440068	Argument	& save_ctm		8439953	1					
ANR	8440069	UnaryOperationExpression	& save_ctm		8439953	0					
ANR	8440070	UnaryOperator	&		8439953	0					
ANR	8440071	Identifier	save_ctm		8439953	1					
ANR	8440072	ForStatement	for ( i = 0 ; i < cdata [ 6 ] ; ++ i )		8439953	3					
ANR	8440073	ForInit	i = 0 ;	1283:13:44370:44375	8439953	0	True				
ANR	8440074	AssignmentExpression	i = 0		8439953	0		=			
ANR	8440075	Identifier	i		8439953	0					
ANR	8440076	PrimaryExpression	0		8439953	1					
ANR	8440077	Condition	i < cdata [ 6 ]	1283:20:44377:44388	8439953	1	True				
ANR	8440078	RelationalExpression	i < cdata [ 6 ]		8439953	0		<			
ANR	8440079	Identifier	i		8439953	0					
ANR	8440080	ArrayIndexing	cdata [ 6 ]		8439953	1					
ANR	8440081	Identifier	cdata		8439953	0					
ANR	8440082	PrimaryExpression	6		8439953	1					
ANR	8440083	UnaryExpression	++ i	1283:34:44391:44393	8439953	2	True				
ANR	8440084	IncDec	++		8439953	0					
ANR	8440085	Identifier	i		8439953	1					
ANR	8440086	CompoundStatement		26:12:814:855	8439953	3					
ANR	8440087	IdentifierDeclStatement	const byte * edata = cdata + 8 + i * 6 ;	1284:12:44410:44447	8439953	0	True				
ANR	8440088	IdentifierDecl	* edata = cdata + 8 + i * 6		8439953	0					
ANR	8440089	IdentifierDeclType	const byte *		8439953	0					
ANR	8440090	Identifier	edata		8439953	1					
ANR	8440091	AssignmentExpression	* edata = cdata + 8 + i * 6		8439953	2		=			
ANR	8440092	Identifier	edata		8439953	0					
ANR	8440093	AdditiveExpression	cdata + 8 + i * 6		8439953	1		+			
ANR	8440094	Identifier	cdata		8439953	0					
ANR	8440095	AdditiveExpression	8 + i * 6		8439953	1		+			
ANR	8440096	PrimaryExpression	8		8439953	0					
ANR	8440097	MultiplicativeExpression	i * 6		8439953	1		*			
ANR	8440098	Identifier	i		8439953	0					
ANR	8440099	PrimaryExpression	6		8439953	1					
ANR	8440100	IdentifierDeclStatement	double x_offset = pl_get_int16 ( edata + 2 ) ;	1285:12:44461:44502	8439953	1	True				
ANR	8440101	IdentifierDecl	x_offset = pl_get_int16 ( edata + 2 )		8439953	0					
ANR	8440102	IdentifierDeclType	double		8439953	0					
ANR	8440103	Identifier	x_offset		8439953	1					
ANR	8440104	AssignmentExpression	x_offset = pl_get_int16 ( edata + 2 )		8439953	2		=			
ANR	8440105	Identifier	x_offset		8439953	0					
ANR	8440106	CallExpression	pl_get_int16 ( edata + 2 )		8439953	1					
ANR	8440107	Callee	pl_get_int16		8439953	0					
ANR	8440108	Identifier	pl_get_int16		8439953	0					
ANR	8440109	ArgumentList	edata + 2		8439953	1					
ANR	8440110	Argument	edata + 2		8439953	0					
ANR	8440111	AdditiveExpression	edata + 2		8439953	0		+			
ANR	8440112	Identifier	edata		8439953	0					
ANR	8440113	PrimaryExpression	2		8439953	1					
ANR	8440114	IdentifierDeclStatement	double y_offset = pl_get_int16 ( edata + 4 ) ;	1286:12:44516:44557	8439953	2	True				
ANR	8440115	IdentifierDecl	y_offset = pl_get_int16 ( edata + 4 )		8439953	0					
ANR	8440116	IdentifierDeclType	double		8439953	0					
ANR	8440117	Identifier	y_offset		8439953	1					
ANR	8440118	AssignmentExpression	y_offset = pl_get_int16 ( edata + 4 )		8439953	2		=			
ANR	8440119	Identifier	y_offset		8439953	0					
ANR	8440120	CallExpression	pl_get_int16 ( edata + 4 )		8439953	1					
ANR	8440121	Callee	pl_get_int16		8439953	0					
ANR	8440122	Identifier	pl_get_int16		8439953	0					
ANR	8440123	ArgumentList	edata + 4		8439953	1					
ANR	8440124	Argument	edata + 4		8439953	0					
ANR	8440125	AdditiveExpression	edata + 4		8439953	0		+			
ANR	8440126	Identifier	edata		8439953	0					
ANR	8440127	PrimaryExpression	4		8439953	1					
ANR	8440128	ExpressionStatement	"gs_translate ( pgs , x_offset , y_offset )"	1288:12:44572:44609	8439953	3	True				
ANR	8440129	CallExpression	"gs_translate ( pgs , x_offset , y_offset )"		8439953	0					
ANR	8440130	Callee	gs_translate		8439953	0					
ANR	8440131	Identifier	gs_translate		8439953	0					
ANR	8440132	ArgumentList	pgs		8439953	1					
ANR	8440133	Argument	pgs		8439953	0					
ANR	8440134	Identifier	pgs		8439953	0					
ANR	8440135	Argument	x_offset		8439953	1					
ANR	8440136	Identifier	x_offset		8439953	0					
ANR	8440137	Argument	y_offset		8439953	2					
ANR	8440138	Identifier	y_offset		8439953	0					
ANR	8440139	ExpressionStatement	"code = pl_intelli_show_char ( pgs , plfont , pl_get_uint16 ( edata ) )"	1289:12:44623:44685	8439953	4	True				
ANR	8440140	AssignmentExpression	"code = pl_intelli_show_char ( pgs , plfont , pl_get_uint16 ( edata ) )"		8439953	0		=			
ANR	8440141	Identifier	code		8439953	0					
ANR	8440142	CallExpression	"pl_intelli_show_char ( pgs , plfont , pl_get_uint16 ( edata ) )"		8439953	1					
ANR	8440143	Callee	pl_intelli_show_char		8439953	0					
ANR	8440144	Identifier	pl_intelli_show_char		8439953	0					
ANR	8440145	ArgumentList	pgs		8439953	1					
ANR	8440146	Argument	pgs		8439953	0					
ANR	8440147	Identifier	pgs		8439953	0					
ANR	8440148	Argument	plfont		8439953	1					
ANR	8440149	Identifier	plfont		8439953	0					
ANR	8440150	Argument	pl_get_uint16 ( edata )		8439953	2					
ANR	8440151	CallExpression	pl_get_uint16 ( edata )		8439953	0					
ANR	8440152	Callee	pl_get_uint16		8439953	0					
ANR	8440153	Identifier	pl_get_uint16		8439953	0					
ANR	8440154	ArgumentList	edata		8439953	1					
ANR	8440155	Argument	edata		8439953	0					
ANR	8440156	Identifier	edata		8439953	0					
ANR	8440157	ExpressionStatement	"gs_setmatrix ( pgs , & save_ctm )"	1290:12:44699:44727	8439953	5	True				
ANR	8440158	CallExpression	"gs_setmatrix ( pgs , & save_ctm )"		8439953	0					
ANR	8440159	Callee	gs_setmatrix		8439953	0					
ANR	8440160	Identifier	gs_setmatrix		8439953	0					
ANR	8440161	ArgumentList	pgs		8439953	1					
ANR	8440162	Argument	pgs		8439953	0					
ANR	8440163	Identifier	pgs		8439953	0					
ANR	8440164	Argument	& save_ctm		8439953	1					
ANR	8440165	UnaryOperationExpression	& save_ctm		8439953	0					
ANR	8440166	UnaryOperator	&		8439953	0					
ANR	8440167	Identifier	save_ctm		8439953	1					
ANR	8440168	IfStatement	if ( code < 0 )		8439953	6					
ANR	8440169	Condition	code < 0	1291:16:44745:44752	8439953	0	True				
ANR	8440170	RelationalExpression	code < 0		8439953	0		<			
ANR	8440171	Identifier	code		8439953	0					
ANR	8440172	PrimaryExpression	0		8439953	1					
ANR	8440173	ReturnStatement	return code ;	1292:16:44771:44782	8439953	1	True				
ANR	8440174	Identifier	code		8439953	0					
ANR	8440175	ReturnStatement	return 0 ;	1294:8:44802:44810	8439953	4	True				
ANR	8440176	PrimaryExpression	0		8439953	0					
ANR	8440177	CompoundStatement		42:8:1247:1253	8439953	11					
ANR	8440178	IdentifierDeclStatement	const byte * outlines ;	1300:8:44895:44915	8439953	0	True				
ANR	8440179	IdentifierDecl	* outlines		8439953	0					
ANR	8440180	IdentifierDeclType	const byte *		8439953	0					
ANR	8440181	Identifier	outlines		8439953	1					
ANR	8440182	IdentifierDeclStatement	uint num_loops ;	1301:8:44925:44939	8439953	1	True				
ANR	8440183	IdentifierDecl	num_loops		8439953	0					
ANR	8440184	IdentifierDeclType	uint		8439953	0					
ANR	8440185	Identifier	num_loops		8439953	1					
ANR	8440186	IdentifierDeclStatement	uint i ;	1302:8:44949:44955	8439953	2	True				
ANR	8440187	IdentifierDecl	i		8439953	0					
ANR	8440188	IdentifierDeclType	uint		8439953	0					
ANR	8440189	Identifier	i		8439953	1					
ANR	8440190	ExpressionStatement	cdata += 4	1304:8:44966:44976	8439953	3	True				
ANR	8440191	AssignmentExpression	cdata += 4		8439953	0		+=			
ANR	8440192	Identifier	cdata		8439953	0					
ANR	8440193	PrimaryExpression	4		8439953	1					
ANR	8440194	ExpressionStatement	outlines = cdata + pl_get_uint16 ( cdata + 6 )	1305:8:45030:45073	8439953	4	True				
ANR	8440195	AssignmentExpression	outlines = cdata + pl_get_uint16 ( cdata + 6 )		8439953	0		=			
ANR	8440196	Identifier	outlines		8439953	0					
ANR	8440197	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 6 )		8439953	1		+			
ANR	8440198	Identifier	cdata		8439953	0					
ANR	8440199	CallExpression	pl_get_uint16 ( cdata + 6 )		8439953	1					
ANR	8440200	Callee	pl_get_uint16		8439953	0					
ANR	8440201	Identifier	pl_get_uint16		8439953	0					
ANR	8440202	ArgumentList	cdata + 6		8439953	1					
ANR	8440203	Argument	cdata + 6		8439953	0					
ANR	8440204	AdditiveExpression	cdata + 6		8439953	0		+			
ANR	8440205	Identifier	cdata		8439953	0					
ANR	8440206	PrimaryExpression	6		8439953	1					
ANR	8440207	IfStatement	if ( outlines >= cdata_end )		8439953	5					
ANR	8440208	Condition	outlines >= cdata_end	1306:12:45087:45107	8439953	0	True				
ANR	8440209	RelationalExpression	outlines >= cdata_end		8439953	0		>=			
ANR	8440210	Identifier	outlines		8439953	0					
ANR	8440211	Identifier	cdata_end		8439953	1					
ANR	8440212	ReturnStatement	return 0 ;	1307:12:45122:45130	8439953	1	True				
ANR	8440213	PrimaryExpression	0		8439953	0					
ANR	8440214	ExpressionStatement	num_loops = pl_get_uint16 ( outlines )	1309:8:45141:45176	8439953	6	True				
ANR	8440215	AssignmentExpression	num_loops = pl_get_uint16 ( outlines )		8439953	0		=			
ANR	8440216	Identifier	num_loops		8439953	0					
ANR	8440217	CallExpression	pl_get_uint16 ( outlines )		8439953	1					
ANR	8440218	Callee	pl_get_uint16		8439953	0					
ANR	8440219	Identifier	pl_get_uint16		8439953	0					
ANR	8440220	ArgumentList	outlines		8439953	1					
ANR	8440221	Argument	outlines		8439953	0					
ANR	8440222	Identifier	outlines		8439953	0					
ANR	8440223	ExpressionStatement	"if_debug2m ( '1' , pgs -> memory , ""[1]ifont glyph %lu: loops=%u\\n"" , ( ulong ) glyph , num_loops )"	1311:8:45187:45294	8439953	7	True				
ANR	8440224	CallExpression	"if_debug2m ( '1' , pgs -> memory , ""[1]ifont glyph %lu: loops=%u\\n"" , ( ulong ) glyph , num_loops )"		8439953	0					
ANR	8440225	Callee	if_debug2m		8439953	0					
ANR	8440226	Identifier	if_debug2m		8439953	0					
ANR	8440227	ArgumentList	'1'		8439953	1					
ANR	8440228	Argument	'1'		8439953	0					
ANR	8440229	PrimaryExpression	'1'		8439953	0					
ANR	8440230	Argument	pgs -> memory		8439953	1					
ANR	8440231	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440232	Identifier	pgs		8439953	0					
ANR	8440233	Identifier	memory		8439953	1					
ANR	8440234	Argument	"""[1]ifont glyph %lu: loops=%u\\n"""		8439953	2					
ANR	8440235	PrimaryExpression	"""[1]ifont glyph %lu: loops=%u\\n"""		8439953	0					
ANR	8440236	Argument	( ulong ) glyph		8439953	3					
ANR	8440237	CastExpression	( ulong ) glyph		8439953	0					
ANR	8440238	CastTarget	ulong		8439953	0					
ANR	8440239	Identifier	glyph		8439953	1					
ANR	8440240	Argument	num_loops		8439953	4					
ANR	8440241	Identifier	num_loops		8439953	0					
ANR	8440242	IfStatement	if ( num_loops == 0 )		8439953	8					
ANR	8440243	Condition	num_loops == 0	1314:12:45309:45322	8439953	0	True				
ANR	8440244	EqualityExpression	num_loops == 0		8439953	0		==			
ANR	8440245	Identifier	num_loops		8439953	0					
ANR	8440246	PrimaryExpression	0		8439953	1					
ANR	8440247	ReturnStatement	return - 1 ;	1315:12:45337:45346	8439953	1	True				
ANR	8440248	UnaryOperationExpression	- 1		8439953	0					
ANR	8440249	UnaryOperator	-		8439953	0					
ANR	8440250	PrimaryExpression	1		8439953	1					
ANR	8440251	ForStatement	for ( i = 0 ; i < num_loops ; ++ i )		8439953	9					
ANR	8440252	ForInit	i = 0 ;	1317:13:45362:45367	8439953	0	True				
ANR	8440253	AssignmentExpression	i = 0		8439953	0		=			
ANR	8440254	Identifier	i		8439953	0					
ANR	8440255	PrimaryExpression	0		8439953	1					
ANR	8440256	Condition	i < num_loops	1317:20:45369:45381	8439953	1	True				
ANR	8440257	RelationalExpression	i < num_loops		8439953	0		<			
ANR	8440258	Identifier	i		8439953	0					
ANR	8440259	Identifier	num_loops		8439953	1					
ANR	8440260	UnaryExpression	++ i	1317:35:45384:45386	8439953	2	True				
ANR	8440261	IncDec	++		8439953	0					
ANR	8440262	Identifier	i		8439953	1					
ANR	8440263	CompoundStatement		68:12:2164:2171	8439953	3					
ANR	8440264	IdentifierDeclStatement	const byte * xyc = cdata + pl_get_uint16 ( outlines + 4 + i * 8 ) ;	1318:12:45403:45464	8439953	0	True				
ANR	8440265	IdentifierDecl	* xyc = cdata + pl_get_uint16 ( outlines + 4 + i * 8 )		8439953	0					
ANR	8440266	IdentifierDeclType	const byte *		8439953	0					
ANR	8440267	Identifier	xyc		8439953	1					
ANR	8440268	AssignmentExpression	* xyc = cdata + pl_get_uint16 ( outlines + 4 + i * 8 )		8439953	2		=			
ANR	8440269	Identifier	xyc		8439953	0					
ANR	8440270	AdditiveExpression	cdata + pl_get_uint16 ( outlines + 4 + i * 8 )		8439953	1		+			
ANR	8440271	Identifier	cdata		8439953	0					
ANR	8440272	CallExpression	pl_get_uint16 ( outlines + 4 + i * 8 )		8439953	1					
ANR	8440273	Callee	pl_get_uint16		8439953	0					
ANR	8440274	Identifier	pl_get_uint16		8439953	0					
ANR	8440275	ArgumentList	outlines + 4 + i * 8		8439953	1					
ANR	8440276	Argument	outlines + 4 + i * 8		8439953	0					
ANR	8440277	AdditiveExpression	outlines + 4 + i * 8		8439953	0		+			
ANR	8440278	Identifier	outlines		8439953	0					
ANR	8440279	AdditiveExpression	4 + i * 8		8439953	1		+			
ANR	8440280	PrimaryExpression	4		8439953	0					
ANR	8440281	MultiplicativeExpression	i * 8		8439953	1		*			
ANR	8440282	Identifier	i		8439953	0					
ANR	8440283	PrimaryExpression	8		8439953	1					
ANR	8440284	IdentifierDeclStatement	uint num_points ;	1319:12:45478:45493	8439953	1	True				
ANR	8440285	IdentifierDecl	num_points		8439953	0					
ANR	8440286	IdentifierDeclType	uint		8439953	0					
ANR	8440287	Identifier	num_points		8439953	1					
ANR	8440288	IdentifierDeclStatement	uint num_aux_points ;	1320:12:45507:45526	8439953	2	True				
ANR	8440289	IdentifierDecl	num_aux_points		8439953	0					
ANR	8440290	IdentifierDeclType	uint		8439953	0					
ANR	8440291	Identifier	num_aux_points		8439953	1					
ANR	8440292	IdentifierDeclStatement	"const byte * x_coords , * y_coords , * x_coords_last ;"	1321:12:45540:45587	8439953	3	True				
ANR	8440293	IdentifierDecl	* x_coords		8439953	0					
ANR	8440294	IdentifierDeclType	const byte *		8439953	0					
ANR	8440295	Identifier	x_coords		8439953	1					
ANR	8440296	IdentifierDecl	* y_coords		8439953	1					
ANR	8440297	IdentifierDeclType	const byte *		8439953	0					
ANR	8440298	Identifier	y_coords		8439953	1					
ANR	8440299	IdentifierDecl	* x_coords_last		8439953	2					
ANR	8440300	IdentifierDeclType	const byte *		8439953	0					
ANR	8440301	Identifier	x_coords_last		8439953	1					
ANR	8440302	IdentifierDeclStatement	"const byte * x_aux_coords , * y_aux_coords , * x_aux_coords_last ;"	1322:12:45601:45660	8439953	4	True				
ANR	8440303	IdentifierDecl	* x_aux_coords		8439953	0					
ANR	8440304	IdentifierDeclType	const byte *		8439953	0					
ANR	8440305	Identifier	x_aux_coords		8439953	1					
ANR	8440306	IdentifierDecl	* y_aux_coords		8439953	1					
ANR	8440307	IdentifierDeclType	const byte *		8439953	0					
ANR	8440308	Identifier	y_aux_coords		8439953	1					
ANR	8440309	IdentifierDecl	* x_aux_coords_last		8439953	2					
ANR	8440310	IdentifierDeclType	const byte *		8439953	0					
ANR	8440311	Identifier	x_aux_coords_last		8439953	1					
ANR	8440312	IdentifierDeclStatement	"int llx , lly , urx , ury ;"	1323:12:45674:45696	8439953	5	True				
ANR	8440313	IdentifierDecl	llx		8439953	0					
ANR	8440314	IdentifierDeclType	int		8439953	0					
ANR	8440315	Identifier	llx		8439953	1					
ANR	8440316	IdentifierDecl	lly		8439953	1					
ANR	8440317	IdentifierDeclType	int		8439953	0					
ANR	8440318	Identifier	lly		8439953	1					
ANR	8440319	IdentifierDecl	urx		8439953	2					
ANR	8440320	IdentifierDeclType	int		8439953	0					
ANR	8440321	Identifier	urx		8439953	1					
ANR	8440322	IdentifierDecl	ury		8439953	3					
ANR	8440323	IdentifierDeclType	int		8439953	0					
ANR	8440324	Identifier	ury		8439953	1					
ANR	8440325	IdentifierDeclStatement	"int x , y ;"	1324:12:45743:45751	8439953	6	True				
ANR	8440326	IdentifierDecl	x		8439953	0					
ANR	8440327	IdentifierDeclType	int		8439953	0					
ANR	8440328	Identifier	x		8439953	1					
ANR	8440329	IdentifierDecl	y		8439953	1					
ANR	8440330	IdentifierDeclType	int		8439953	0					
ANR	8440331	Identifier	y		8439953	1					
ANR	8440332	IdentifierDeclStatement	"int xAux , yAux ;"	1325:12:45765:45779	8439953	7	True				
ANR	8440333	IdentifierDecl	xAux		8439953	0					
ANR	8440334	IdentifierDeclType	int		8439953	0					
ANR	8440335	Identifier	xAux		8439953	1					
ANR	8440336	IdentifierDecl	yAux		8439953	1					
ANR	8440337	IdentifierDeclType	int		8439953	0					
ANR	8440338	Identifier	yAux		8439953	1					
ANR	8440339	IdentifierDeclStatement	"int * xScan , * yScan , * xLast ;"	1326:12:45793:45819	8439953	8	True				
ANR	8440340	IdentifierDecl	* xScan		8439953	0					
ANR	8440341	IdentifierDeclType	int *		8439953	0					
ANR	8440342	Identifier	xScan		8439953	1					
ANR	8440343	IdentifierDecl	* yScan		8439953	1					
ANR	8440344	IdentifierDeclType	int *		8439953	0					
ANR	8440345	Identifier	yScan		8439953	1					
ANR	8440346	IdentifierDecl	* xLast		8439953	2					
ANR	8440347	IdentifierDeclType	int *		8439953	0					
ANR	8440348	Identifier	xLast		8439953	1					
ANR	8440349	IdentifierDeclStatement	int pointBufferSize ;	1327:12:45833:45852	8439953	9	True				
ANR	8440350	IdentifierDecl	pointBufferSize		8439953	0					
ANR	8440351	IdentifierDeclType	int		8439953	0					
ANR	8440352	Identifier	pointBufferSize		8439953	1					
ANR	8440353	IdentifierDeclStatement	uint sz ;	1328:12:45866:45873	8439953	10	True				
ANR	8440354	IdentifierDecl	sz		8439953	0					
ANR	8440355	IdentifierDeclType	uint		8439953	0					
ANR	8440356	Identifier	sz		8439953	1					
ANR	8440357	IfStatement	if ( ( outlines + 4 + i * 8 ) >= cdata_end )		8439953	11					
ANR	8440358	Condition	( outlines + 4 + i * 8 ) >= cdata_end	1330:16:45892:45926	8439953	0	True				
ANR	8440359	RelationalExpression	( outlines + 4 + i * 8 ) >= cdata_end		8439953	0		>=			
ANR	8440360	AdditiveExpression	outlines + 4 + i * 8		8439953	0		+			
ANR	8440361	Identifier	outlines		8439953	0					
ANR	8440362	AdditiveExpression	4 + i * 8		8439953	1		+			
ANR	8440363	PrimaryExpression	4		8439953	0					
ANR	8440364	MultiplicativeExpression	i * 8		8439953	1		*			
ANR	8440365	Identifier	i		8439953	0					
ANR	8440366	PrimaryExpression	8		8439953	1					
ANR	8440367	Identifier	cdata_end		8439953	1					
ANR	8440368	CompoundStatement		70:53:2227:2227	8439953	1					
ANR	8440369	ExpressionStatement	code = gs_note_error ( gs_error_invalidfont )	1331:16:45947:45989	8439953	0	True				
ANR	8440370	AssignmentExpression	code = gs_note_error ( gs_error_invalidfont )		8439953	0		=			
ANR	8440371	Identifier	code		8439953	0					
ANR	8440372	CallExpression	gs_note_error ( gs_error_invalidfont )		8439953	1					
ANR	8440373	Callee	gs_note_error		8439953	0					
ANR	8440374	Identifier	gs_note_error		8439953	0					
ANR	8440375	ArgumentList	gs_error_invalidfont		8439953	1					
ANR	8440376	Argument	gs_error_invalidfont		8439953	0					
ANR	8440377	Identifier	gs_error_invalidfont		8439953	0					
ANR	8440378	BreakStatement	break ;	1332:16:46007:46012	8439953	1	True				
ANR	8440379	ExpressionStatement	num_points = pl_get_uint16 ( xyc )	1334:12:46040:46071	8439953	12	True				
ANR	8440380	AssignmentExpression	num_points = pl_get_uint16 ( xyc )		8439953	0		=			
ANR	8440381	Identifier	num_points		8439953	0					
ANR	8440382	CallExpression	pl_get_uint16 ( xyc )		8439953	1					
ANR	8440383	Callee	pl_get_uint16		8439953	0					
ANR	8440384	Identifier	pl_get_uint16		8439953	0					
ANR	8440385	ArgumentList	xyc		8439953	1					
ANR	8440386	Argument	xyc		8439953	0					
ANR	8440387	Identifier	xyc		8439953	0					
ANR	8440388	ExpressionStatement	num_aux_points = pl_get_uint16 ( xyc + 2 )	1335:12:46085:46124	8439953	13	True				
ANR	8440389	AssignmentExpression	num_aux_points = pl_get_uint16 ( xyc + 2 )		8439953	0		=			
ANR	8440390	Identifier	num_aux_points		8439953	0					
ANR	8440391	CallExpression	pl_get_uint16 ( xyc + 2 )		8439953	1					
ANR	8440392	Callee	pl_get_uint16		8439953	0					
ANR	8440393	Identifier	pl_get_uint16		8439953	0					
ANR	8440394	ArgumentList	xyc + 2		8439953	1					
ANR	8440395	Argument	xyc + 2		8439953	0					
ANR	8440396	AdditiveExpression	xyc + 2		8439953	0		+			
ANR	8440397	Identifier	xyc		8439953	0					
ANR	8440398	PrimaryExpression	2		8439953	1					
ANR	8440399	ExpressionStatement	x_coords = xyc + 4	1337:12:46139:46157	8439953	14	True				
ANR	8440400	AssignmentExpression	x_coords = xyc + 4		8439953	0		=			
ANR	8440401	Identifier	x_coords		8439953	0					
ANR	8440402	AdditiveExpression	xyc + 4		8439953	1		+			
ANR	8440403	Identifier	xyc		8439953	0					
ANR	8440404	PrimaryExpression	4		8439953	1					
ANR	8440405	ExpressionStatement	y_coords = x_coords + num_points * 2	1338:12:46171:46207	8439953	15	True				
ANR	8440406	AssignmentExpression	y_coords = x_coords + num_points * 2		8439953	0		=			
ANR	8440407	Identifier	y_coords		8439953	0					
ANR	8440408	AdditiveExpression	x_coords + num_points * 2		8439953	1		+			
ANR	8440409	Identifier	x_coords		8439953	0					
ANR	8440410	MultiplicativeExpression	num_points * 2		8439953	1		*			
ANR	8440411	Identifier	num_points		8439953	0					
ANR	8440412	PrimaryExpression	2		8439953	1					
ANR	8440413	ExpressionStatement	x_coords_last = y_coords	1339:12:46221:46245	8439953	16	True				
ANR	8440414	AssignmentExpression	x_coords_last = y_coords		8439953	0		=			
ANR	8440415	Identifier	x_coords_last		8439953	0					
ANR	8440416	Identifier	y_coords		8439953	1					
ANR	8440417	IfStatement	if ( x_coords_last >= cdata_end || ( y_coords + num_points * 2 ) >= cdata_end )		8439953	17					
ANR	8440418	Condition	x_coords_last >= cdata_end || ( y_coords + num_points * 2 ) >= cdata_end	1341:16:46264:46349	8439953	0	True				
ANR	8440419	OrExpression	x_coords_last >= cdata_end || ( y_coords + num_points * 2 ) >= cdata_end		8439953	0		||			
ANR	8440420	RelationalExpression	x_coords_last >= cdata_end		8439953	0		>=			
ANR	8440421	Identifier	x_coords_last		8439953	0					
ANR	8440422	Identifier	cdata_end		8439953	1					
ANR	8440423	RelationalExpression	( y_coords + num_points * 2 ) >= cdata_end		8439953	1		>=			
ANR	8440424	AdditiveExpression	y_coords + num_points * 2		8439953	0		+			
ANR	8440425	Identifier	y_coords		8439953	0					
ANR	8440426	MultiplicativeExpression	num_points * 2		8439953	1		*			
ANR	8440427	Identifier	num_points		8439953	0					
ANR	8440428	PrimaryExpression	2		8439953	1					
ANR	8440429	Identifier	cdata_end		8439953	1					
ANR	8440430	CompoundStatement		82:61:2650:2650	8439953	1					
ANR	8440431	ExpressionStatement	code = 0	1343:16:46370:46378	8439953	0	True				
ANR	8440432	AssignmentExpression	code = 0		8439953	0		=			
ANR	8440433	Identifier	code		8439953	0					
ANR	8440434	PrimaryExpression	0		8439953	1					
ANR	8440435	BreakStatement	break ;	1344:16:46396:46401	8439953	1	True				
ANR	8440436	ExpressionStatement	metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )	1347:12:46430:46517	8439953	18	True				
ANR	8440437	AssignmentExpression	metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8439953	0		=			
ANR	8440438	Identifier	metrics		8439953	0					
ANR	8440439	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8439953	1					
ANR	8440440	CastTarget	const intelli_metrics_t *		8439953	0					
ANR	8440441	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8439953	1		+			
ANR	8440442	Identifier	cdata		8439953	0					
ANR	8440443	CallExpression	pl_get_uint16 ( cdata + 2 )		8439953	1					
ANR	8440444	Callee	pl_get_uint16		8439953	0					
ANR	8440445	Identifier	pl_get_uint16		8439953	0					
ANR	8440446	ArgumentList	cdata + 2		8439953	1					
ANR	8440447	Argument	cdata + 2		8439953	0					
ANR	8440448	AdditiveExpression	cdata + 2		8439953	0		+			
ANR	8440449	Identifier	cdata		8439953	0					
ANR	8440450	PrimaryExpression	2		8439953	1					
ANR	8440451	ExpressionStatement	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )	1349:12:46531:46576	8439953	19	True				
ANR	8440452	AssignmentExpression	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8439953	0		=			
ANR	8440453	Identifier	llx		8439953	0					
ANR	8440454	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8439953	1					
ANR	8440455	Callee	pl_get_int16		8439953	0					
ANR	8440456	Identifier	pl_get_int16		8439953	0					
ANR	8440457	ArgumentList	metrics -> charSymbolBox [ 0 ]		8439953	1					
ANR	8440458	Argument	metrics -> charSymbolBox [ 0 ]		8439953	0					
ANR	8440459	ArrayIndexing	metrics -> charSymbolBox [ 0 ]		8439953	0					
ANR	8440460	PtrMemberAccess	metrics -> charSymbolBox		8439953	0					
ANR	8440461	Identifier	metrics		8439953	0					
ANR	8440462	Identifier	charSymbolBox		8439953	1					
ANR	8440463	PrimaryExpression	0		8439953	1					
ANR	8440464	ExpressionStatement	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )	1350:12:46590:46635	8439953	20	True				
ANR	8440465	AssignmentExpression	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8439953	0		=			
ANR	8440466	Identifier	lly		8439953	0					
ANR	8440467	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8439953	1					
ANR	8440468	Callee	pl_get_int16		8439953	0					
ANR	8440469	Identifier	pl_get_int16		8439953	0					
ANR	8440470	ArgumentList	metrics -> charSymbolBox [ 1 ]		8439953	1					
ANR	8440471	Argument	metrics -> charSymbolBox [ 1 ]		8439953	0					
ANR	8440472	ArrayIndexing	metrics -> charSymbolBox [ 1 ]		8439953	0					
ANR	8440473	PtrMemberAccess	metrics -> charSymbolBox		8439953	0					
ANR	8440474	Identifier	metrics		8439953	0					
ANR	8440475	Identifier	charSymbolBox		8439953	1					
ANR	8440476	PrimaryExpression	1		8439953	1					
ANR	8440477	ExpressionStatement	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )	1351:12:46649:46694	8439953	21	True				
ANR	8440478	AssignmentExpression	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8439953	0		=			
ANR	8440479	Identifier	urx		8439953	0					
ANR	8440480	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8439953	1					
ANR	8440481	Callee	pl_get_int16		8439953	0					
ANR	8440482	Identifier	pl_get_int16		8439953	0					
ANR	8440483	ArgumentList	metrics -> charSymbolBox [ 2 ]		8439953	1					
ANR	8440484	Argument	metrics -> charSymbolBox [ 2 ]		8439953	0					
ANR	8440485	ArrayIndexing	metrics -> charSymbolBox [ 2 ]		8439953	0					
ANR	8440486	PtrMemberAccess	metrics -> charSymbolBox		8439953	0					
ANR	8440487	Identifier	metrics		8439953	0					
ANR	8440488	Identifier	charSymbolBox		8439953	1					
ANR	8440489	PrimaryExpression	2		8439953	1					
ANR	8440490	ExpressionStatement	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )	1352:12:46708:46753	8439953	22	True				
ANR	8440491	AssignmentExpression	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8439953	0		=			
ANR	8440492	Identifier	ury		8439953	0					
ANR	8440493	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8439953	1					
ANR	8440494	Callee	pl_get_int16		8439953	0					
ANR	8440495	Identifier	pl_get_int16		8439953	0					
ANR	8440496	ArgumentList	metrics -> charSymbolBox [ 3 ]		8439953	1					
ANR	8440497	Argument	metrics -> charSymbolBox [ 3 ]		8439953	0					
ANR	8440498	ArrayIndexing	metrics -> charSymbolBox [ 3 ]		8439953	0					
ANR	8440499	PtrMemberAccess	metrics -> charSymbolBox		8439953	0					
ANR	8440500	Identifier	metrics		8439953	0					
ANR	8440501	Identifier	charSymbolBox		8439953	1					
ANR	8440502	PrimaryExpression	3		8439953	1					
ANR	8440503	ExpressionStatement	pointBufferSize = num_points	1354:12:46768:46796	8439953	23	True				
ANR	8440504	AssignmentExpression	pointBufferSize = num_points		8439953	0		=			
ANR	8440505	Identifier	pointBufferSize		8439953	0					
ANR	8440506	Identifier	num_points		8439953	1					
ANR	8440507	IfStatement	if ( num_aux_points != 0xffff )		8439953	24					
ANR	8440508	Condition	num_aux_points != 0xffff	1355:16:46861:46884	8439953	0	True				
ANR	8440509	EqualityExpression	num_aux_points != 0xffff		8439953	0		!=			
ANR	8440510	Identifier	num_aux_points		8439953	0					
ANR	8440511	PrimaryExpression	0xffff		8439953	1					
ANR	8440512	CompoundStatement		95:42:3185:3185	8439953	1					
ANR	8440513	ExpressionStatement	pointBufferSize += num_aux_points	1356:16:46905:46938	8439953	0	True				
ANR	8440514	AssignmentExpression	pointBufferSize += num_aux_points		8439953	0		+=			
ANR	8440515	Identifier	pointBufferSize		8439953	0					
ANR	8440516	Identifier	num_aux_points		8439953	1					
ANR	8440517	ExpressionStatement	x_aux_coords = y_coords + num_points * 2	1357:16:46956:46996	8439953	1	True				
ANR	8440518	AssignmentExpression	x_aux_coords = y_coords + num_points * 2		8439953	0		=			
ANR	8440519	Identifier	x_aux_coords		8439953	0					
ANR	8440520	AdditiveExpression	y_coords + num_points * 2		8439953	1		+			
ANR	8440521	Identifier	y_coords		8439953	0					
ANR	8440522	MultiplicativeExpression	num_points * 2		8439953	1		*			
ANR	8440523	Identifier	num_points		8439953	0					
ANR	8440524	PrimaryExpression	2		8439953	1					
ANR	8440525	ExpressionStatement	y_aux_coords = x_aux_coords + num_aux_points	1358:16:47014:47058	8439953	2	True				
ANR	8440526	AssignmentExpression	y_aux_coords = x_aux_coords + num_aux_points		8439953	0		=			
ANR	8440527	Identifier	y_aux_coords		8439953	0					
ANR	8440528	AdditiveExpression	x_aux_coords + num_aux_points		8439953	1		+			
ANR	8440529	Identifier	x_aux_coords		8439953	0					
ANR	8440530	Identifier	num_aux_points		8439953	1					
ANR	8440531	ExpressionStatement	x_aux_coords_last = y_coords	1359:16:47076:47104	8439953	3	True				
ANR	8440532	AssignmentExpression	x_aux_coords_last = y_coords		8439953	0		=			
ANR	8440533	Identifier	x_aux_coords_last		8439953	0					
ANR	8440534	Identifier	y_coords		8439953	1					
ANR	8440535	IfStatement	if ( ( y_aux_coords + num_aux_points * 2 ) >= cdata_end )		8439953	4					
ANR	8440536	Condition	( y_aux_coords + num_aux_points * 2 ) >= cdata_end	1360:20:47126:47173	8439953	0	True				
ANR	8440537	RelationalExpression	( y_aux_coords + num_aux_points * 2 ) >= cdata_end		8439953	0		>=			
ANR	8440538	AdditiveExpression	y_aux_coords + num_aux_points * 2		8439953	0		+			
ANR	8440539	Identifier	y_aux_coords		8439953	0					
ANR	8440540	MultiplicativeExpression	num_aux_points * 2		8439953	1		*			
ANR	8440541	Identifier	num_aux_points		8439953	0					
ANR	8440542	PrimaryExpression	2		8439953	1					
ANR	8440543	Identifier	cdata_end		8439953	1					
ANR	8440544	CompoundStatement		100:70:3474:3474	8439953	1					
ANR	8440545	IfStatement	if ( x_aux_coords_last >= cdata_end )		8439953	0					
ANR	8440546	Condition	x_aux_coords_last >= cdata_end	1361:24:47202:47231	8439953	0	True				
ANR	8440547	RelationalExpression	x_aux_coords_last >= cdata_end		8439953	0		>=			
ANR	8440548	Identifier	x_aux_coords_last		8439953	0					
ANR	8440549	Identifier	cdata_end		8439953	1					
ANR	8440550	CompoundStatement		101:56:3532:3532	8439953	1					
ANR	8440551	ExpressionStatement	pointBufferSize -= num_aux_points	1362:24:47260:47293	8439953	0	True				
ANR	8440552	AssignmentExpression	pointBufferSize -= num_aux_points		8439953	0		-=			
ANR	8440553	Identifier	pointBufferSize		8439953	0					
ANR	8440554	Identifier	num_aux_points		8439953	1					
ANR	8440555	ExpressionStatement	num_aux_points = 0xffff	1363:24:47319:47342	8439953	1	True				
ANR	8440556	AssignmentExpression	num_aux_points = 0xffff		8439953	0		=			
ANR	8440557	Identifier	num_aux_points		8439953	0					
ANR	8440558	PrimaryExpression	0xffff		8439953	1					
ANR	8440559	ExpressionStatement	x_aux_coords = NULL	1364:24:47368:47387	8439953	2	True				
ANR	8440560	AssignmentExpression	x_aux_coords = NULL		8439953	0		=			
ANR	8440561	Identifier	x_aux_coords		8439953	0					
ANR	8440562	Identifier	NULL		8439953	1					
ANR	8440563	ExpressionStatement	y_aux_coords = NULL	1365:24:47413:47432	8439953	3	True				
ANR	8440564	AssignmentExpression	y_aux_coords = NULL		8439953	0		=			
ANR	8440565	Identifier	y_aux_coords		8439953	0					
ANR	8440566	Identifier	NULL		8439953	1					
ANR	8440567	ExpressionStatement	x_aux_coords_last = NULL	1366:24:47458:47482	8439953	4	True				
ANR	8440568	AssignmentExpression	x_aux_coords_last = NULL		8439953	0		=			
ANR	8440569	Identifier	x_aux_coords_last		8439953	0					
ANR	8440570	Identifier	NULL		8439953	1					
ANR	8440571	ElseStatement	else		8439953	0					
ANR	8440572	CompoundStatement		108:25:3829:3829	8439953	0					
ANR	8440573	ExpressionStatement	pointBufferSize -= num_aux_points	1372:24:47720:47753	8439953	0	True				
ANR	8440574	AssignmentExpression	pointBufferSize -= num_aux_points		8439953	0		-=			
ANR	8440575	Identifier	pointBufferSize		8439953	0					
ANR	8440576	Identifier	num_aux_points		8439953	1					
ANR	8440577	ExpressionStatement	num_aux_points = ( cdata_end - y_aux_coords ) / 2	1373:24:47779:47826	8439953	1	True				
ANR	8440578	AssignmentExpression	num_aux_points = ( cdata_end - y_aux_coords ) / 2		8439953	0		=			
ANR	8440579	Identifier	num_aux_points		8439953	0					
ANR	8440580	MultiplicativeExpression	( cdata_end - y_aux_coords ) / 2		8439953	1		/			
ANR	8440581	AdditiveExpression	cdata_end - y_aux_coords		8439953	0		-			
ANR	8440582	Identifier	cdata_end		8439953	0					
ANR	8440583	Identifier	y_aux_coords		8439953	1					
ANR	8440584	PrimaryExpression	2		8439953	1					
ANR	8440585	ExpressionStatement	pointBufferSize += num_aux_points	1374:24:47852:47885	8439953	2	True				
ANR	8440586	AssignmentExpression	pointBufferSize += num_aux_points		8439953	0		+=			
ANR	8440587	Identifier	pointBufferSize		8439953	0					
ANR	8440588	Identifier	num_aux_points		8439953	1					
ANR	8440589	ExpressionStatement	x_aux_coords_last = x_aux_coords + num_aux_points	1375:24:47911:47960	8439953	3	True				
ANR	8440590	AssignmentExpression	x_aux_coords_last = x_aux_coords + num_aux_points		8439953	0		=			
ANR	8440591	Identifier	x_aux_coords_last		8439953	0					
ANR	8440592	AdditiveExpression	x_aux_coords + num_aux_points		8439953	1		+			
ANR	8440593	Identifier	x_aux_coords		8439953	0					
ANR	8440594	Identifier	num_aux_points		8439953	1					
ANR	8440595	ElseStatement	else		8439953	0					
ANR	8440596	CompoundStatement		118:19:4319:4319	8439953	0					
ANR	8440597	ExpressionStatement	x_aux_coords = NULL	1379:16:48039:48058	8439953	0	True				
ANR	8440598	AssignmentExpression	x_aux_coords = NULL		8439953	0		=			
ANR	8440599	Identifier	x_aux_coords		8439953	0					
ANR	8440600	Identifier	NULL		8439953	1					
ANR	8440601	ExpressionStatement	y_aux_coords = NULL	1380:16:48076:48095	8439953	1	True				
ANR	8440602	AssignmentExpression	y_aux_coords = NULL		8439953	0		=			
ANR	8440603	Identifier	y_aux_coords		8439953	0					
ANR	8440604	Identifier	NULL		8439953	1					
ANR	8440605	ExpressionStatement	x_aux_coords_last = NULL	1381:16:48113:48137	8439953	2	True				
ANR	8440606	AssignmentExpression	x_aux_coords_last = NULL		8439953	0		=			
ANR	8440607	Identifier	x_aux_coords_last		8439953	0					
ANR	8440608	Identifier	NULL		8439953	1					
ANR	8440609	ExpressionStatement	sz = pointBufferSize * sizeof ( int )	1384:12:48166:48200	8439953	25	True				
ANR	8440610	AssignmentExpression	sz = pointBufferSize * sizeof ( int )		8439953	0		=			
ANR	8440611	Identifier	sz		8439953	0					
ANR	8440612	MultiplicativeExpression	pointBufferSize * sizeof ( int )		8439953	1		*			
ANR	8440613	Identifier	pointBufferSize		8439953	0					
ANR	8440614	SizeofExpression	sizeof ( int )		8439953	1					
ANR	8440615	Sizeof	sizeof		8439953	0					
ANR	8440616	SizeofOperand	int		8439953	1					
ANR	8440617	IfStatement	if ( i == 0 )		8439953	26					
ANR	8440618	Condition	i == 0	1386:16:48219:48224	8439953	0	True				
ANR	8440619	EqualityExpression	i == 0		8439953	0		==			
ANR	8440620	Identifier	i		8439953	0					
ANR	8440621	PrimaryExpression	0		8439953	1					
ANR	8440622	CompoundStatement		126:24:4525:4525	8439953	1					
ANR	8440623	ExpressionStatement	"xBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"	1387:16:48245:48300	8439953	0	True				
ANR	8440624	AssignmentExpression	"xBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8439953	0		=			
ANR	8440625	Identifier	xBuffer		8439953	0					
ANR	8440626	CastExpression	"( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8439953	1					
ANR	8440627	CastTarget	int *		8439953	0					
ANR	8440628	CallExpression	"gs_alloc_bytes ( pgs -> memory , sz , cname )"		8439953	1					
ANR	8440629	Callee	gs_alloc_bytes		8439953	0					
ANR	8440630	Identifier	gs_alloc_bytes		8439953	0					
ANR	8440631	ArgumentList	pgs -> memory		8439953	1					
ANR	8440632	Argument	pgs -> memory		8439953	0					
ANR	8440633	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440634	Identifier	pgs		8439953	0					
ANR	8440635	Identifier	memory		8439953	1					
ANR	8440636	Argument	sz		8439953	1					
ANR	8440637	Identifier	sz		8439953	0					
ANR	8440638	Argument	cname		8439953	2					
ANR	8440639	Identifier	cname		8439953	0					
ANR	8440640	ExpressionStatement	"yBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"	1388:16:48318:48373	8439953	1	True				
ANR	8440641	AssignmentExpression	"yBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8439953	0		=			
ANR	8440642	Identifier	yBuffer		8439953	0					
ANR	8440643	CastExpression	"( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8439953	1					
ANR	8440644	CastTarget	int *		8439953	0					
ANR	8440645	CallExpression	"gs_alloc_bytes ( pgs -> memory , sz , cname )"		8439953	1					
ANR	8440646	Callee	gs_alloc_bytes		8439953	0					
ANR	8440647	Identifier	gs_alloc_bytes		8439953	0					
ANR	8440648	ArgumentList	pgs -> memory		8439953	1					
ANR	8440649	Argument	pgs -> memory		8439953	0					
ANR	8440650	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440651	Identifier	pgs		8439953	0					
ANR	8440652	Identifier	memory		8439953	1					
ANR	8440653	Argument	sz		8439953	1					
ANR	8440654	Identifier	sz		8439953	0					
ANR	8440655	Argument	cname		8439953	2					
ANR	8440656	Identifier	cname		8439953	0					
ANR	8440657	ElseStatement	else		8439953	0					
ANR	8440658	CompoundStatement		129:19:4692:4692	8439953	0					
ANR	8440659	ExpressionStatement	"xBuffer = ( int * ) gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"	1391:16:48478:48564	8439953	0	True				
ANR	8440660	AssignmentExpression	"xBuffer = ( int * ) gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"		8439953	0		=			
ANR	8440661	Identifier	xBuffer		8439953	0					
ANR	8440662	CastExpression	"( int * ) gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"		8439953	1					
ANR	8440663	CastTarget	int *		8439953	0					
ANR	8440664	CallExpression	"gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"		8439953	1					
ANR	8440665	Callee	gs_resize_object		8439953	0					
ANR	8440666	Identifier	gs_resize_object		8439953	0					
ANR	8440667	ArgumentList	pgs -> memory		8439953	1					
ANR	8440668	Argument	pgs -> memory		8439953	0					
ANR	8440669	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440670	Identifier	pgs		8439953	0					
ANR	8440671	Identifier	memory		8439953	1					
ANR	8440672	Argument	xBuffer		8439953	1					
ANR	8440673	Identifier	xBuffer		8439953	0					
ANR	8440674	Argument	sz		8439953	2					
ANR	8440675	Identifier	sz		8439953	0					
ANR	8440676	Argument	cname		8439953	3					
ANR	8440677	Identifier	cname		8439953	0					
ANR	8440678	ExpressionStatement	"yBuffer = ( int * ) gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"	1393:16:48582:48668	8439953	1	True				
ANR	8440679	AssignmentExpression	"yBuffer = ( int * ) gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"		8439953	0		=			
ANR	8440680	Identifier	yBuffer		8439953	0					
ANR	8440681	CastExpression	"( int * ) gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"		8439953	1					
ANR	8440682	CastTarget	int *		8439953	0					
ANR	8440683	CallExpression	"gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"		8439953	1					
ANR	8440684	Callee	gs_resize_object		8439953	0					
ANR	8440685	Identifier	gs_resize_object		8439953	0					
ANR	8440686	ArgumentList	pgs -> memory		8439953	1					
ANR	8440687	Argument	pgs -> memory		8439953	0					
ANR	8440688	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440689	Identifier	pgs		8439953	0					
ANR	8440690	Identifier	memory		8439953	1					
ANR	8440691	Argument	yBuffer		8439953	1					
ANR	8440692	Identifier	yBuffer		8439953	0					
ANR	8440693	Argument	sz		8439953	2					
ANR	8440694	Identifier	sz		8439953	0					
ANR	8440695	Argument	cname		8439953	3					
ANR	8440696	Identifier	cname		8439953	0					
ANR	8440697	IfStatement	if ( xBuffer == NULL || yBuffer == NULL )		8439953	27					
ANR	8440698	Condition	xBuffer == NULL || yBuffer == NULL	1397:16:48701:48734	8439953	0	True				
ANR	8440699	OrExpression	xBuffer == NULL || yBuffer == NULL		8439953	0		||			
ANR	8440700	EqualityExpression	xBuffer == NULL		8439953	0		==			
ANR	8440701	Identifier	xBuffer		8439953	0					
ANR	8440702	Identifier	NULL		8439953	1					
ANR	8440703	EqualityExpression	yBuffer == NULL		8439953	1		==			
ANR	8440704	Identifier	yBuffer		8439953	0					
ANR	8440705	Identifier	NULL		8439953	1					
ANR	8440706	CompoundStatement		137:52:5035:5035	8439953	1					
ANR	8440707	IfStatement	if ( xBuffer != NULL )		8439953	0					
ANR	8440708	Condition	xBuffer != NULL	1398:20:48759:48773	8439953	0	True				
ANR	8440709	EqualityExpression	xBuffer != NULL		8439953	0		!=			
ANR	8440710	Identifier	xBuffer		8439953	0					
ANR	8440711	Identifier	NULL		8439953	1					
ANR	8440712	ExpressionStatement	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"	1399:20:48796:48850	8439953	1	True				
ANR	8440713	CallExpression	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"		8439953	0					
ANR	8440714	Callee	gs_free_object		8439953	0					
ANR	8440715	Identifier	gs_free_object		8439953	0					
ANR	8440716	ArgumentList	pgs -> memory		8439953	1					
ANR	8440717	Argument	pgs -> memory		8439953	0					
ANR	8440718	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440719	Identifier	pgs		8439953	0					
ANR	8440720	Identifier	memory		8439953	1					
ANR	8440721	Argument	xBuffer		8439953	1					
ANR	8440722	Identifier	xBuffer		8439953	0					
ANR	8440723	Argument	"""x point buffer"""		8439953	2					
ANR	8440724	PrimaryExpression	"""x point buffer"""		8439953	0					
ANR	8440725	IfStatement	if ( yBuffer != NULL )		8439953	1					
ANR	8440726	Condition	yBuffer != NULL	1400:20:48872:48886	8439953	0	True				
ANR	8440727	EqualityExpression	yBuffer != NULL		8439953	0		!=			
ANR	8440728	Identifier	yBuffer		8439953	0					
ANR	8440729	Identifier	NULL		8439953	1					
ANR	8440730	ExpressionStatement	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"	1401:20:48909:48963	8439953	1	True				
ANR	8440731	CallExpression	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"		8439953	0					
ANR	8440732	Callee	gs_free_object		8439953	0					
ANR	8440733	Identifier	gs_free_object		8439953	0					
ANR	8440734	ArgumentList	pgs -> memory		8439953	1					
ANR	8440735	Argument	pgs -> memory		8439953	0					
ANR	8440736	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440737	Identifier	pgs		8439953	0					
ANR	8440738	Identifier	memory		8439953	1					
ANR	8440739	Argument	yBuffer		8439953	1					
ANR	8440740	Identifier	yBuffer		8439953	0					
ANR	8440741	Argument	"""y point buffer"""		8439953	2					
ANR	8440742	PrimaryExpression	"""y point buffer"""		8439953	0					
ANR	8440743	ExpressionStatement	return_error ( gs_error_VMerror )	1402:16:48981:49011	8439953	2	True				
ANR	8440744	CallExpression	return_error ( gs_error_VMerror )		8439953	0					
ANR	8440745	Callee	return_error		8439953	0					
ANR	8440746	Identifier	return_error		8439953	0					
ANR	8440747	ArgumentList	gs_error_VMerror		8439953	1					
ANR	8440748	Argument	gs_error_VMerror		8439953	0					
ANR	8440749	Identifier	gs_error_VMerror		8439953	0					
ANR	8440750	ExpressionStatement	xLast = NULL	1405:12:49040:49052	8439953	28	True				
ANR	8440751	AssignmentExpression	xLast = NULL		8439953	0		=			
ANR	8440752	Identifier	xLast		8439953	0					
ANR	8440753	Identifier	NULL		8439953	1					
ANR	8440754	ExpressionStatement	"if_debug2m ( '1' , pgs -> memory , ""[1]num_points=%u num_aux_points=%u\\n"" , num_points , num_aux_points )"	1407:12:49067:49209	8439953	29	True				
ANR	8440755	CallExpression	"if_debug2m ( '1' , pgs -> memory , ""[1]num_points=%u num_aux_points=%u\\n"" , num_points , num_aux_points )"		8439953	0					
ANR	8440756	Callee	if_debug2m		8439953	0					
ANR	8440757	Identifier	if_debug2m		8439953	0					
ANR	8440758	ArgumentList	'1'		8439953	1					
ANR	8440759	Argument	'1'		8439953	0					
ANR	8440760	PrimaryExpression	'1'		8439953	0					
ANR	8440761	Argument	pgs -> memory		8439953	1					
ANR	8440762	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440763	Identifier	pgs		8439953	0					
ANR	8440764	Identifier	memory		8439953	1					
ANR	8440765	Argument	"""[1]num_points=%u num_aux_points=%u\\n"""		8439953	2					
ANR	8440766	PrimaryExpression	"""[1]num_points=%u num_aux_points=%u\\n"""		8439953	0					
ANR	8440767	Argument	num_points		8439953	3					
ANR	8440768	Identifier	num_points		8439953	0					
ANR	8440769	Argument	num_aux_points		8439953	4					
ANR	8440770	Identifier	num_aux_points		8439953	0					
ANR	8440771	ForStatement	"for ( xScan = xBuffer , yScan = yBuffer ; x_coords < x_coords_last ; x_coords += 2 , y_coords += 2 )"		8439953	30					
ANR	8440772	ForInit	"xScan = xBuffer , yScan = yBuffer ;"	1415:17:49573:49605	8439953	0	True				
ANR	8440773	Expression	"xScan = xBuffer , yScan = yBuffer"		8439953	0					
ANR	8440774	AssignmentExpression	xScan = xBuffer		8439953	0		=			
ANR	8440775	Identifier	xScan		8439953	0					
ANR	8440776	Identifier	xBuffer		8439953	1					
ANR	8440777	AssignmentExpression	yScan = yBuffer		8439953	1		=			
ANR	8440778	Identifier	yScan		8439953	0					
ANR	8440779	Identifier	yBuffer		8439953	1					
ANR	8440780	Condition	x_coords < x_coords_last	1415:51:49607:49630	8439953	1	True				
ANR	8440781	RelationalExpression	x_coords < x_coords_last		8439953	0		<			
ANR	8440782	Identifier	x_coords		8439953	0					
ANR	8440783	Identifier	x_coords_last		8439953	1					
ANR	8440784	Expression	"x_coords += 2 , y_coords += 2"	1416:17:49650:49677	8439953	2	True				
ANR	8440785	AssignmentExpression	x_coords += 2		8439953	0		+=			
ANR	8440786	Identifier	x_coords		8439953	0					
ANR	8440787	PrimaryExpression	2		8439953	1					
ANR	8440788	AssignmentExpression	y_coords += 2		8439953	1		+=			
ANR	8440789	Identifier	y_coords		8439953	0					
ANR	8440790	PrimaryExpression	2		8439953	1					
ANR	8440791	CompoundStatement		156:47:5978:5978	8439953	3					
ANR	8440792	ExpressionStatement	x = pl_get_uint16 ( x_coords ) & 0x3fff	1417:16:49698:49734	8439953	0	True				
ANR	8440793	AssignmentExpression	x = pl_get_uint16 ( x_coords ) & 0x3fff		8439953	0		=			
ANR	8440794	Identifier	x		8439953	0					
ANR	8440795	BitAndExpression	pl_get_uint16 ( x_coords ) & 0x3fff		8439953	1		&			
ANR	8440796	CallExpression	pl_get_uint16 ( x_coords )		8439953	0					
ANR	8440797	Callee	pl_get_uint16		8439953	0					
ANR	8440798	Identifier	pl_get_uint16		8439953	0					
ANR	8440799	ArgumentList	x_coords		8439953	1					
ANR	8440800	Argument	x_coords		8439953	0					
ANR	8440801	Identifier	x_coords		8439953	0					
ANR	8440802	PrimaryExpression	0x3fff		8439953	1					
ANR	8440803	ExpressionStatement	y = pl_get_uint16 ( y_coords ) & 0x3fff	1418:16:49752:49788	8439953	1	True				
ANR	8440804	AssignmentExpression	y = pl_get_uint16 ( y_coords ) & 0x3fff		8439953	0		=			
ANR	8440805	Identifier	y		8439953	0					
ANR	8440806	BitAndExpression	pl_get_uint16 ( y_coords ) & 0x3fff		8439953	1		&			
ANR	8440807	CallExpression	pl_get_uint16 ( y_coords )		8439953	0					
ANR	8440808	Callee	pl_get_uint16		8439953	0					
ANR	8440809	Identifier	pl_get_uint16		8439953	0					
ANR	8440810	ArgumentList	y_coords		8439953	1					
ANR	8440811	Argument	y_coords		8439953	0					
ANR	8440812	Identifier	y_coords		8439953	0					
ANR	8440813	PrimaryExpression	0x3fff		8439953	1					
ANR	8440814	ExpressionStatement	"if_debug4m ( '1' , pgs -> memory , ""[1]%s (%d,%d) %s\\n"" , ( * x_coords & 0x80 ? "" line"" : ""curve"" ) , x , y , ( * y_coords & 0x80 ? "" line"" : ""curve"" ) )"	1420:16:49807:49997	8439953	2	True				
ANR	8440815	CallExpression	"if_debug4m ( '1' , pgs -> memory , ""[1]%s (%d,%d) %s\\n"" , ( * x_coords & 0x80 ? "" line"" : ""curve"" ) , x , y , ( * y_coords & 0x80 ? "" line"" : ""curve"" ) )"		8439953	0					
ANR	8440816	Callee	if_debug4m		8439953	0					
ANR	8440817	Identifier	if_debug4m		8439953	0					
ANR	8440818	ArgumentList	'1'		8439953	1					
ANR	8440819	Argument	'1'		8439953	0					
ANR	8440820	PrimaryExpression	'1'		8439953	0					
ANR	8440821	Argument	pgs -> memory		8439953	1					
ANR	8440822	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440823	Identifier	pgs		8439953	0					
ANR	8440824	Identifier	memory		8439953	1					
ANR	8440825	Argument	"""[1]%s (%d,%d) %s\\n"""		8439953	2					
ANR	8440826	PrimaryExpression	"""[1]%s (%d,%d) %s\\n"""		8439953	0					
ANR	8440827	Argument	"* x_coords & 0x80 ? "" line"" : ""curve"""		8439953	3					
ANR	8440828	ConditionalExpression	"* x_coords & 0x80 ? "" line"" : ""curve"""		8439953	0					
ANR	8440829	Condition	* x_coords & 0x80		8439953	0					
ANR	8440830	BitAndExpression	* x_coords & 0x80		8439953	0		&			
ANR	8440831	UnaryOperationExpression	* x_coords		8439953	0					
ANR	8440832	UnaryOperator	*		8439953	0					
ANR	8440833	Identifier	x_coords		8439953	1					
ANR	8440834	PrimaryExpression	0x80		8439953	1					
ANR	8440835	PrimaryExpression	""" line"""		8439953	1					
ANR	8440836	PrimaryExpression	"""curve"""		8439953	2					
ANR	8440837	Argument	x		8439953	4					
ANR	8440838	Identifier	x		8439953	0					
ANR	8440839	Argument	y		8439953	5					
ANR	8440840	Identifier	y		8439953	0					
ANR	8440841	Argument	"* y_coords & 0x80 ? "" line"" : ""curve"""		8439953	6					
ANR	8440842	ConditionalExpression	"* y_coords & 0x80 ? "" line"" : ""curve"""		8439953	0					
ANR	8440843	Condition	* y_coords & 0x80		8439953	0					
ANR	8440844	BitAndExpression	* y_coords & 0x80		8439953	0		&			
ANR	8440845	UnaryOperationExpression	* y_coords		8439953	0					
ANR	8440846	UnaryOperator	*		8439953	0					
ANR	8440847	Identifier	y_coords		8439953	1					
ANR	8440848	PrimaryExpression	0x80		8439953	1					
ANR	8440849	PrimaryExpression	""" line"""		8439953	1					
ANR	8440850	PrimaryExpression	"""curve"""		8439953	2					
ANR	8440851	IfStatement	if ( xScan > xBuffer )		8439953	3					
ANR	8440852	Condition	xScan > xBuffer	1424:20:50020:50034	8439953	0	True				
ANR	8440853	RelationalExpression	xScan > xBuffer		8439953	0		>			
ANR	8440854	Identifier	xScan		8439953	0					
ANR	8440855	Identifier	xBuffer		8439953	1					
ANR	8440856	CompoundStatement		164:37:6335:6335	8439953	1					
ANR	8440857	IfStatement	if ( x_aux_coords < x_aux_coords_last && ! ( * x_coords & 0x80 ) )		8439953	0					
ANR	8440858	Condition	x_aux_coords < x_aux_coords_last && ! ( * x_coords & 0x80 )	1425:24:50113:50167	8439953	0	True				
ANR	8440859	AndExpression	x_aux_coords < x_aux_coords_last && ! ( * x_coords & 0x80 )		8439953	0		&&			
ANR	8440860	RelationalExpression	x_aux_coords < x_aux_coords_last		8439953	0		<			
ANR	8440861	Identifier	x_aux_coords		8439953	0					
ANR	8440862	Identifier	x_aux_coords_last		8439953	1					
ANR	8440863	UnaryOperationExpression	! ( * x_coords & 0x80 )		8439953	1					
ANR	8440864	UnaryOperator	!		8439953	0					
ANR	8440865	BitAndExpression	* x_coords & 0x80		8439953	1		&			
ANR	8440866	UnaryOperationExpression	* x_coords		8439953	0					
ANR	8440867	UnaryOperator	*		8439953	0					
ANR	8440868	Identifier	x_coords		8439953	1					
ANR	8440869	PrimaryExpression	0x80		8439953	1					
ANR	8440870	CompoundStatement		168:24:6661:6701	8439953	1					
ANR	8440871	IdentifierDeclStatement	int dx = ( * x_aux_coords ++ ^ 0x80 ) - 0x80 ;	1427:24:50297:50337	8439953	0	True				
ANR	8440872	IdentifierDecl	dx = ( * x_aux_coords ++ ^ 0x80 ) - 0x80		8439953	0					
ANR	8440873	IdentifierDeclType	int		8439953	0					
ANR	8440874	Identifier	dx		8439953	1					
ANR	8440875	AssignmentExpression	dx = ( * x_aux_coords ++ ^ 0x80 ) - 0x80		8439953	2		=			
ANR	8440876	Identifier	dx		8439953	0					
ANR	8440877	AdditiveExpression	( * x_aux_coords ++ ^ 0x80 ) - 0x80		8439953	1		-			
ANR	8440878	ExclusiveOrExpression	* x_aux_coords ++ ^ 0x80		8439953	0		^			
ANR	8440879	UnaryOperationExpression	* x_aux_coords ++		8439953	0					
ANR	8440880	UnaryOperator	*		8439953	0					
ANR	8440881	PostIncDecOperationExpression	x_aux_coords ++		8439953	1					
ANR	8440882	Identifier	x_aux_coords		8439953	0					
ANR	8440883	IncDec	++		8439953	1					
ANR	8440884	PrimaryExpression	0x80		8439953	1					
ANR	8440885	PrimaryExpression	0x80		8439953	1					
ANR	8440886	IdentifierDeclStatement	int dy = ( * y_aux_coords ++ ^ 0x80 ) - 0x80 ;	1428:24:50363:50403	8439953	1	True				
ANR	8440887	IdentifierDecl	dy = ( * y_aux_coords ++ ^ 0x80 ) - 0x80		8439953	0					
ANR	8440888	IdentifierDeclType	int		8439953	0					
ANR	8440889	Identifier	dy		8439953	1					
ANR	8440890	AssignmentExpression	dy = ( * y_aux_coords ++ ^ 0x80 ) - 0x80		8439953	2		=			
ANR	8440891	Identifier	dy		8439953	0					
ANR	8440892	AdditiveExpression	( * y_aux_coords ++ ^ 0x80 ) - 0x80		8439953	1		-			
ANR	8440893	ExclusiveOrExpression	* y_aux_coords ++ ^ 0x80		8439953	0		^			
ANR	8440894	UnaryOperationExpression	* y_aux_coords ++		8439953	0					
ANR	8440895	UnaryOperator	*		8439953	0					
ANR	8440896	PostIncDecOperationExpression	y_aux_coords ++		8439953	1					
ANR	8440897	Identifier	y_aux_coords		8439953	0					
ANR	8440898	IncDec	++		8439953	1					
ANR	8440899	PrimaryExpression	0x80		8439953	1					
ANR	8440900	PrimaryExpression	0x80		8439953	1					
ANR	8440901	ExpressionStatement	"if_debug2m ( '1' , pgs -> memory , ""[1]... aux (%d,%d)\\n"" , dx , dy )"	1430:24:50430:50525	8439953	2	True				
ANR	8440902	CallExpression	"if_debug2m ( '1' , pgs -> memory , ""[1]... aux (%d,%d)\\n"" , dx , dy )"		8439953	0					
ANR	8440903	Callee	if_debug2m		8439953	0					
ANR	8440904	Identifier	if_debug2m		8439953	0					
ANR	8440905	ArgumentList	'1'		8439953	1					
ANR	8440906	Argument	'1'		8439953	0					
ANR	8440907	PrimaryExpression	'1'		8439953	0					
ANR	8440908	Argument	pgs -> memory		8439953	1					
ANR	8440909	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8440910	Identifier	pgs		8439953	0					
ANR	8440911	Identifier	memory		8439953	1					
ANR	8440912	Argument	"""[1]... aux (%d,%d)\\n"""		8439953	2					
ANR	8440913	PrimaryExpression	"""[1]... aux (%d,%d)\\n"""		8439953	0					
ANR	8440914	Argument	dx		8439953	3					
ANR	8440915	Identifier	dx		8439953	0					
ANR	8440916	Argument	dy		8439953	4					
ANR	8440917	Identifier	dy		8439953	0					
ANR	8440918	ExpressionStatement	xAux = ( x + * ( xScan - 1 ) ) / 2 + dx	1433:24:50552:50586	8439953	3	True				
ANR	8440919	AssignmentExpression	xAux = ( x + * ( xScan - 1 ) ) / 2 + dx		8439953	0		=			
ANR	8440920	Identifier	xAux		8439953	0					
ANR	8440921	AdditiveExpression	( x + * ( xScan - 1 ) ) / 2 + dx		8439953	1		+			
ANR	8440922	MultiplicativeExpression	( x + * ( xScan - 1 ) ) / 2		8439953	0		/			
ANR	8440923	AdditiveExpression	x + * ( xScan - 1 )		8439953	0		+			
ANR	8440924	Identifier	x		8439953	0					
ANR	8440925	UnaryOperationExpression	* ( xScan - 1 )		8439953	1					
ANR	8440926	UnaryOperator	*		8439953	0					
ANR	8440927	AdditiveExpression	xScan - 1		8439953	1		-			
ANR	8440928	Identifier	xScan		8439953	0					
ANR	8440929	PrimaryExpression	1		8439953	1					
ANR	8440930	PrimaryExpression	2		8439953	1					
ANR	8440931	Identifier	dx		8439953	1					
ANR	8440932	ExpressionStatement	yAux = ( y + * ( yScan - 1 ) ) / 2 + dy	1434:24:50612:50646	8439953	4	True				
ANR	8440933	AssignmentExpression	yAux = ( y + * ( yScan - 1 ) ) / 2 + dy		8439953	0		=			
ANR	8440934	Identifier	yAux		8439953	0					
ANR	8440935	AdditiveExpression	( y + * ( yScan - 1 ) ) / 2 + dy		8439953	1		+			
ANR	8440936	MultiplicativeExpression	( y + * ( yScan - 1 ) ) / 2		8439953	0		/			
ANR	8440937	AdditiveExpression	y + * ( yScan - 1 )		8439953	0		+			
ANR	8440938	Identifier	y		8439953	0					
ANR	8440939	UnaryOperationExpression	* ( yScan - 1 )		8439953	1					
ANR	8440940	UnaryOperator	*		8439953	0					
ANR	8440941	AdditiveExpression	yScan - 1		8439953	1		-			
ANR	8440942	Identifier	yScan		8439953	0					
ANR	8440943	PrimaryExpression	1		8439953	1					
ANR	8440944	PrimaryExpression	2		8439953	1					
ANR	8440945	Identifier	dy		8439953	1					
ANR	8440946	IfStatement	if ( ( xAux >= llx && xAux <= urx ) && ( yAux >= lly && yAux <= ury ) )		8439953	5					
ANR	8440947	Condition	( xAux >= llx && xAux <= urx ) && ( yAux >= lly && yAux <= ury )	1435:28:50676:50735	8439953	0	True				
ANR	8440948	AndExpression	( xAux >= llx && xAux <= urx ) && ( yAux >= lly && yAux <= ury )		8439953	0		&&			
ANR	8440949	AndExpression	xAux >= llx && xAux <= urx		8439953	0		&&			
ANR	8440950	RelationalExpression	xAux >= llx		8439953	0		>=			
ANR	8440951	Identifier	xAux		8439953	0					
ANR	8440952	Identifier	llx		8439953	1					
ANR	8440953	RelationalExpression	xAux <= urx		8439953	1		<=			
ANR	8440954	Identifier	xAux		8439953	0					
ANR	8440955	Identifier	urx		8439953	1					
ANR	8440956	AndExpression	yAux >= lly && yAux <= ury		8439953	1		&&			
ANR	8440957	RelationalExpression	yAux >= lly		8439953	0		>=			
ANR	8440958	Identifier	yAux		8439953	0					
ANR	8440959	Identifier	lly		8439953	1					
ANR	8440960	RelationalExpression	yAux <= ury		8439953	1		<=			
ANR	8440961	Identifier	yAux		8439953	0					
ANR	8440962	Identifier	ury		8439953	1					
ANR	8440963	CompoundStatement		175:90:7036:7036	8439953	1					
ANR	8440964	ExpressionStatement	* xScan ++ = xAux	1436:28:50811:50826	8439953	0	True				
ANR	8440965	AssignmentExpression	* xScan ++ = xAux		8439953	0		=			
ANR	8440966	UnaryOperationExpression	* xScan ++		8439953	0					
ANR	8440967	UnaryOperator	*		8439953	0					
ANR	8440968	PostIncDecOperationExpression	xScan ++		8439953	1					
ANR	8440969	Identifier	xScan		8439953	0					
ANR	8440970	IncDec	++		8439953	1					
ANR	8440971	Identifier	xAux		8439953	1					
ANR	8440972	ExpressionStatement	* yScan ++ = yAux	1437:28:50856:50871	8439953	1	True				
ANR	8440973	AssignmentExpression	* yScan ++ = yAux		8439953	0		=			
ANR	8440974	UnaryOperationExpression	* yScan ++		8439953	0					
ANR	8440975	UnaryOperator	*		8439953	0					
ANR	8440976	PostIncDecOperationExpression	yScan ++		8439953	1					
ANR	8440977	Identifier	yScan		8439953	0					
ANR	8440978	IncDec	++		8439953	1					
ANR	8440979	Identifier	yAux		8439953	1					
ANR	8440980	IfStatement	if ( ( x >= llx && x <= urx ) && ( y >= lly && y <= ury ) )		8439953	4					
ANR	8440981	Condition	( x >= llx && x <= urx ) && ( y >= lly && y <= ury )	1444:20:51166:51213	8439953	0	True				
ANR	8440982	AndExpression	( x >= llx && x <= urx ) && ( y >= lly && y <= ury )		8439953	0		&&			
ANR	8440983	AndExpression	x >= llx && x <= urx		8439953	0		&&			
ANR	8440984	RelationalExpression	x >= llx		8439953	0		>=			
ANR	8440985	Identifier	x		8439953	0					
ANR	8440986	Identifier	llx		8439953	1					
ANR	8440987	RelationalExpression	x <= urx		8439953	1		<=			
ANR	8440988	Identifier	x		8439953	0					
ANR	8440989	Identifier	urx		8439953	1					
ANR	8440990	AndExpression	y >= lly && y <= ury		8439953	1		&&			
ANR	8440991	RelationalExpression	y >= lly		8439953	0		>=			
ANR	8440992	Identifier	y		8439953	0					
ANR	8440993	Identifier	lly		8439953	1					
ANR	8440994	RelationalExpression	y <= ury		8439953	1		<=			
ANR	8440995	Identifier	y		8439953	0					
ANR	8440996	Identifier	ury		8439953	1					
ANR	8440997	CompoundStatement		184:70:7514:7514	8439953	1					
ANR	8440998	ExpressionStatement	* xScan ++ = x	1445:20:51270:51282	8439953	0	True				
ANR	8440999	AssignmentExpression	* xScan ++ = x		8439953	0		=			
ANR	8441000	UnaryOperationExpression	* xScan ++		8439953	0					
ANR	8441001	UnaryOperator	*		8439953	0					
ANR	8441002	PostIncDecOperationExpression	xScan ++		8439953	1					
ANR	8441003	Identifier	xScan		8439953	0					
ANR	8441004	IncDec	++		8439953	1					
ANR	8441005	Identifier	x		8439953	1					
ANR	8441006	ExpressionStatement	* yScan ++ = y	1446:20:51304:51316	8439953	1	True				
ANR	8441007	AssignmentExpression	* yScan ++ = y		8439953	0		=			
ANR	8441008	UnaryOperationExpression	* yScan ++		8439953	0					
ANR	8441009	UnaryOperator	*		8439953	0					
ANR	8441010	PostIncDecOperationExpression	yScan ++		8439953	1					
ANR	8441011	Identifier	yScan		8439953	0					
ANR	8441012	IncDec	++		8439953	1					
ANR	8441013	Identifier	y		8439953	1					
ANR	8441014	IfStatement	if ( num_aux_points != 0xffff )		8439953	31					
ANR	8441015	Condition	num_aux_points != 0xffff	1450:16:51473:51496	8439953	0	True				
ANR	8441016	EqualityExpression	num_aux_points != 0xffff		8439953	0		!=			
ANR	8441017	Identifier	num_aux_points		8439953	0					
ANR	8441018	PrimaryExpression	0xffff		8439953	1					
ANR	8441019	ExpressionStatement	xLast = xScan	1451:16:51515:51528	8439953	1	True				
ANR	8441020	AssignmentExpression	xLast = xScan		8439953	0		=			
ANR	8441021	Identifier	xLast		8439953	0					
ANR	8441022	Identifier	xScan		8439953	1					
ANR	8441023	ElseStatement	else		8439953	0					
ANR	8441024	ExpressionStatement	xLast = xScan - 1	1453:16:51563:51580	8439953	0	True				
ANR	8441025	AssignmentExpression	xLast = xScan - 1		8439953	0		=			
ANR	8441026	Identifier	xLast		8439953	0					
ANR	8441027	AdditiveExpression	xScan - 1		8439953	1		-			
ANR	8441028	Identifier	xScan		8439953	0					
ANR	8441029	PrimaryExpression	1		8439953	1					
ANR	8441030	ExpressionStatement	xScan = xBuffer	1455:12:51629:51644	8439953	32	True				
ANR	8441031	AssignmentExpression	xScan = xBuffer		8439953	0		=			
ANR	8441032	Identifier	xScan		8439953	0					
ANR	8441033	Identifier	xBuffer		8439953	1					
ANR	8441034	ExpressionStatement	yScan = yBuffer	1456:12:51658:51673	8439953	33	True				
ANR	8441035	AssignmentExpression	yScan = yBuffer		8439953	0		=			
ANR	8441036	Identifier	yScan		8439953	0					
ANR	8441037	Identifier	yBuffer		8439953	1					
ANR	8441038	IfStatement	if ( xLast > xBuffer )		8439953	34					
ANR	8441039	Condition	xLast > xBuffer	1457:16:51691:51705	8439953	0	True				
ANR	8441040	RelationalExpression	xLast > xBuffer		8439953	0		>			
ANR	8441041	Identifier	xLast		8439953	0					
ANR	8441042	Identifier	xBuffer		8439953	1					
ANR	8441043	CompoundStatement		197:33:8006:8006	8439953	1					
ANR	8441044	ExpressionStatement	"code = gs_moveto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"	1458:16:51726:51787	8439953	0	True				
ANR	8441045	AssignmentExpression	"code = gs_moveto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8439953	0		=			
ANR	8441046	Identifier	code		8439953	0					
ANR	8441047	CallExpression	"gs_moveto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8439953	1					
ANR	8441048	Callee	gs_moveto		8439953	0					
ANR	8441049	Identifier	gs_moveto		8439953	0					
ANR	8441050	ArgumentList	pgs		8439953	1					
ANR	8441051	Argument	pgs		8439953	0					
ANR	8441052	Identifier	pgs		8439953	0					
ANR	8441053	Argument	( double ) * xScan ++		8439953	1					
ANR	8441054	CastExpression	( double ) * xScan ++		8439953	0					
ANR	8441055	CastTarget	double		8439953	0					
ANR	8441056	UnaryOperationExpression	* xScan ++		8439953	1					
ANR	8441057	UnaryOperator	*		8439953	0					
ANR	8441058	PostIncDecOperationExpression	xScan ++		8439953	1					
ANR	8441059	Identifier	xScan		8439953	0					
ANR	8441060	IncDec	++		8439953	1					
ANR	8441061	Argument	( double ) * yScan ++		8439953	2					
ANR	8441062	CastExpression	( double ) * yScan ++		8439953	0					
ANR	8441063	CastTarget	double		8439953	0					
ANR	8441064	UnaryOperationExpression	* yScan ++		8439953	1					
ANR	8441065	UnaryOperator	*		8439953	0					
ANR	8441066	PostIncDecOperationExpression	yScan ++		8439953	1					
ANR	8441067	Identifier	yScan		8439953	0					
ANR	8441068	IncDec	++		8439953	1					
ANR	8441069	IfStatement	if ( code < 0 )		8439953	1					
ANR	8441070	Condition	code < 0	1459:20:51809:51816	8439953	0	True				
ANR	8441071	RelationalExpression	code < 0		8439953	0		<			
ANR	8441072	Identifier	code		8439953	0					
ANR	8441073	PrimaryExpression	0		8439953	1					
ANR	8441074	GotoStatement	goto cleanup ;	1460:20:51839:51851	8439953	1	True				
ANR	8441075	Identifier	cleanup		8439953	0					
ANR	8441076	ForStatement	for ( ; xScan < xLast ; )		8439953	35					
ANR	8441077	Condition	xScan < xLast	1463:19:51887:51899	8439953	0	True				
ANR	8441078	RelationalExpression	xScan < xLast		8439953	0		<			
ANR	8441079	Identifier	xScan		8439953	0					
ANR	8441080	Identifier	xLast		8439953	1					
ANR	8441081	CompoundStatement		203:35:8201:8201	8439953	1					
ANR	8441082	ExpressionStatement	"code = gs_lineto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"	1464:16:51921:51982	8439953	0	True				
ANR	8441083	AssignmentExpression	"code = gs_lineto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8439953	0		=			
ANR	8441084	Identifier	code		8439953	0					
ANR	8441085	CallExpression	"gs_lineto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8439953	1					
ANR	8441086	Callee	gs_lineto		8439953	0					
ANR	8441087	Identifier	gs_lineto		8439953	0					
ANR	8441088	ArgumentList	pgs		8439953	1					
ANR	8441089	Argument	pgs		8439953	0					
ANR	8441090	Identifier	pgs		8439953	0					
ANR	8441091	Argument	( double ) * xScan ++		8439953	1					
ANR	8441092	CastExpression	( double ) * xScan ++		8439953	0					
ANR	8441093	CastTarget	double		8439953	0					
ANR	8441094	UnaryOperationExpression	* xScan ++		8439953	1					
ANR	8441095	UnaryOperator	*		8439953	0					
ANR	8441096	PostIncDecOperationExpression	xScan ++		8439953	1					
ANR	8441097	Identifier	xScan		8439953	0					
ANR	8441098	IncDec	++		8439953	1					
ANR	8441099	Argument	( double ) * yScan ++		8439953	2					
ANR	8441100	CastExpression	( double ) * yScan ++		8439953	0					
ANR	8441101	CastTarget	double		8439953	0					
ANR	8441102	UnaryOperationExpression	* yScan ++		8439953	1					
ANR	8441103	UnaryOperator	*		8439953	0					
ANR	8441104	PostIncDecOperationExpression	yScan ++		8439953	1					
ANR	8441105	Identifier	yScan		8439953	0					
ANR	8441106	IncDec	++		8439953	1					
ANR	8441107	IfStatement	if ( code < 0 )		8439953	1					
ANR	8441108	Condition	code < 0	1465:20:52004:52011	8439953	0	True				
ANR	8441109	RelationalExpression	code < 0		8439953	0		<			
ANR	8441110	Identifier	code		8439953	0					
ANR	8441111	PrimaryExpression	0		8439953	1					
ANR	8441112	GotoStatement	goto cleanup ;	1466:20:52034:52046	8439953	1	True				
ANR	8441113	Identifier	cleanup		8439953	0					
ANR	8441114	ExpressionStatement	code = gs_closepath ( pgs )	1469:12:52120:52144	8439953	36	True				
ANR	8441115	AssignmentExpression	code = gs_closepath ( pgs )		8439953	0		=			
ANR	8441116	Identifier	code		8439953	0					
ANR	8441117	CallExpression	gs_closepath ( pgs )		8439953	1					
ANR	8441118	Callee	gs_closepath		8439953	0					
ANR	8441119	Identifier	gs_closepath		8439953	0					
ANR	8441120	ArgumentList	pgs		8439953	1					
ANR	8441121	Argument	pgs		8439953	0					
ANR	8441122	Identifier	pgs		8439953	0					
ANR	8441123	IfStatement	if ( code < 0 )		8439953	37					
ANR	8441124	Condition	code < 0	1470:16:52162:52169	8439953	0	True				
ANR	8441125	RelationalExpression	code < 0		8439953	0		<			
ANR	8441126	Identifier	code		8439953	0					
ANR	8441127	PrimaryExpression	0		8439953	1					
ANR	8441128	BreakStatement	break ;	1471:16:52188:52193	8439953	1	True				
ANR	8441129	Label	cleanup :	1475:6:52255:52262	8439953	10	True				
ANR	8441130	Identifier	cleanup		8439953	0					
ANR	8441131	ExpressionStatement	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"	1476:8:52272:52326	8439953	11	True				
ANR	8441132	CallExpression	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"		8439953	0					
ANR	8441133	Callee	gs_free_object		8439953	0					
ANR	8441134	Identifier	gs_free_object		8439953	0					
ANR	8441135	ArgumentList	pgs -> memory		8439953	1					
ANR	8441136	Argument	pgs -> memory		8439953	0					
ANR	8441137	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8441138	Identifier	pgs		8439953	0					
ANR	8441139	Identifier	memory		8439953	1					
ANR	8441140	Argument	xBuffer		8439953	1					
ANR	8441141	Identifier	xBuffer		8439953	0					
ANR	8441142	Argument	"""x point buffer"""		8439953	2					
ANR	8441143	PrimaryExpression	"""x point buffer"""		8439953	0					
ANR	8441144	ExpressionStatement	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"	1477:8:52336:52390	8439953	12	True				
ANR	8441145	CallExpression	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"		8439953	0					
ANR	8441146	Callee	gs_free_object		8439953	0					
ANR	8441147	Identifier	gs_free_object		8439953	0					
ANR	8441148	ArgumentList	pgs -> memory		8439953	1					
ANR	8441149	Argument	pgs -> memory		8439953	0					
ANR	8441150	PtrMemberAccess	pgs -> memory		8439953	0					
ANR	8441151	Identifier	pgs		8439953	0					
ANR	8441152	Identifier	memory		8439953	1					
ANR	8441153	Argument	yBuffer		8439953	1					
ANR	8441154	Identifier	yBuffer		8439953	0					
ANR	8441155	Argument	"""y point buffer"""		8439953	2					
ANR	8441156	PrimaryExpression	"""y point buffer"""		8439953	0					
ANR	8441157	ReturnStatement	return code ;	1479:4:52451:52462	8439953	12	True				
ANR	8441158	Identifier	code		8439953	0					
ANR	8441159	ReturnType	static int		8439953	1					
ANR	8441160	Identifier	pl_intelli_show_char		8439953	2					
ANR	8441161	ParameterList	"gs_gstate * pgs , const pl_font_t * plfont , gs_glyph glyph"		8439953	3					
ANR	8441162	Parameter	gs_gstate * pgs	1260:21:43642:43656	8439953	0	True				
ANR	8441163	ParameterType	gs_gstate *		8439953	0					
ANR	8441164	Identifier	pgs		8439953	1					
ANR	8441165	Parameter	const pl_font_t * plfont	1260:38:43659:43682	8439953	1	True				
ANR	8441166	ParameterType	const pl_font_t *		8439953	0					
ANR	8441167	Identifier	plfont		8439953	1					
ANR	8441168	Parameter	gs_glyph glyph	1260:64:43685:43698	8439953	2	True				
ANR	8441169	ParameterType	gs_glyph		8439953	0					
ANR	8441170	Identifier	glyph		8439953	1					
ANR	8441171	CFGEntryNode	ENTRY		8439953		True				
ANR	8441172	CFGExitNode	EXIT		8439953		True				
ANR	8441173	Symbol	outlines		8439953						
ANR	8441174	Symbol	xyc		8439953						
ANR	8441175	Symbol	* pgs		8439953						
ANR	8441176	Symbol	* ( xScan - 1 )		8439953						
ANR	8441177	Symbol	plfont		8439953						
ANR	8441178	Symbol	yBuffer		8439953						
ANR	8441179	Symbol	y_offset		8439953						
ANR	8441180	Symbol	pl_intelli_show_char		8439953						
ANR	8441181	Symbol	x_offset		8439953						
ANR	8441182	Symbol	xLast		8439953						
ANR	8441183	Symbol	* yScan		8439953						
ANR	8441184	Symbol	dx		8439953						
ANR	8441185	Symbol	* cdata		8439953						
ANR	8441186	Symbol	* metrics		8439953						
ANR	8441187	Symbol	dy		8439953						
ANR	8441188	Symbol	font_glyph -> data_len		8439953						
ANR	8441189	Symbol	pl_get_int16		8439953						
ANR	8441190	Symbol	xAux		8439953						
ANR	8441191	Symbol	save_ctm		8439953						
ANR	8441192	Symbol	NULL		8439953						
ANR	8441193	Symbol	num_aux_points		8439953						
ANR	8441194	Symbol	* ( yScan - 1 )		8439953						
ANR	8441195	Symbol	gs_resize_object		8439953						
ANR	8441196	Symbol	* metrics -> charSymbolBox		8439953						
ANR	8441197	Symbol	* x_coords		8439953						
ANR	8441198	Symbol	num_points		8439953						
ANR	8441199	Symbol	cdata		8439953						
ANR	8441200	Symbol	edata		8439953						
ANR	8441201	Symbol	yAux		8439953						
ANR	8441202	Symbol	cdata_end		8439953						
ANR	8441203	Symbol	metrics -> charSymbolBox		8439953						
ANR	8441204	Symbol	* y_aux_coords ++		8439953						
ANR	8441205	Symbol	y_coords		8439953						
ANR	8441206	Symbol	metrics		8439953						
ANR	8441207	Symbol	x_aux_coords_last		8439953						
ANR	8441208	Symbol	* xScan		8439953						
ANR	8441209	Symbol	font_glyph		8439953						
ANR	8441210	Symbol	code		8439953						
ANR	8441211	Symbol	* xScan ++		8439953						
ANR	8441212	Symbol	gs_lineto		8439953						
ANR	8441213	Symbol	pl_font_lookup_glyph		8439953						
ANR	8441214	Symbol	yScan		8439953						
ANR	8441215	Symbol	* yScan ++		8439953						
ANR	8441216	Symbol	cname		8439953						
ANR	8441217	Symbol	* font_glyph		8439953						
ANR	8441218	Symbol	gs_closepath		8439953						
ANR	8441219	Symbol	num_loops		8439953						
ANR	8441220	Symbol	gs_moveto		8439953						
ANR	8441221	Symbol	y_aux_coords		8439953						
ANR	8441222	Symbol	* x_aux_coords ++		8439953						
ANR	8441223	Symbol	xScan		8439953						
ANR	8441224	Symbol	x_aux_coords		8439953						
ANR	8441225	Symbol	* * metrics		8439953						
ANR	8441226	Symbol	pointBufferSize		8439953						
ANR	8441227	Symbol	gs_error_invalidfont		8439953						
ANR	8441228	Symbol	pgs		8439953						
ANR	8441229	Symbol	pgs -> memory		8439953						
ANR	8441230	Symbol	pl_get_uint16		8439953						
ANR	8441231	Symbol	gs_alloc_bytes		8439953						
ANR	8441232	Symbol	* y_coords		8439953						
ANR	8441233	Symbol	& save_ctm		8439953						
ANR	8441234	Symbol	sz		8439953						
ANR	8441235	Symbol	i		8439953						
ANR	8441236	Symbol	font_glyph -> data		8439953						
ANR	8441237	Symbol	gs_error_VMerror		8439953						
ANR	8441238	Symbol	glyph		8439953						
ANR	8441239	Symbol	gs_note_error		8439953						
ANR	8441240	Symbol	xBuffer		8439953						
ANR	8441241	Symbol	x_coords		8439953						
ANR	8441242	Symbol	lly		8439953						
ANR	8441243	Symbol	x		8439953						
ANR	8441244	Symbol	llx		8439953						
ANR	8441245	Symbol	y		8439953						
ANR	8441246	Symbol	urx		8439953						
ANR	8441247	Symbol	x_coords_last		8439953						
ANR	8441248	Symbol	ury		8439953						
ANR	8441249	Function	pl_intelli_char_width	1483:0:52532:53688							
ANR	8441250	FunctionDef	"pl_intelli_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8441249	0					
ANR	8441251	CompoundStatement		1486:0:52668:53688	8441249	0					
ANR	8441252	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	1487:4:52674:52739	8441249	0	True				
ANR	8441253	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441249	0					
ANR	8441254	IdentifierDeclType	const byte *		8441249	0					
ANR	8441255	Identifier	cdata		8441249	1					
ANR	8441256	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441249	2		=			
ANR	8441257	Identifier	cdata		8441249	0					
ANR	8441258	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441249	1					
ANR	8441259	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8441249	0					
ANR	8441260	Callee	pl_font_lookup_glyph		8441249	0					
ANR	8441261	Identifier	pl_font_lookup_glyph		8441249	0					
ANR	8441262	ArgumentList	plfont		8441249	1					
ANR	8441263	Argument	plfont		8441249	0					
ANR	8441264	Identifier	plfont		8441249	0					
ANR	8441265	Argument	char_code		8441249	1					
ANR	8441266	Identifier	char_code		8441249	0					
ANR	8441267	Identifier	data		8441249	1					
ANR	8441268	IdentifierDeclStatement	int wx ;	1488:4:52745:52751	8441249	1	True				
ANR	8441269	IdentifierDecl	wx		8441249	0					
ANR	8441270	IdentifierDeclType	int		8441249	0					
ANR	8441271	Identifier	wx		8441249	1					
ANR	8441272	IfStatement	if ( ! pwidth )		8441249	2					
ANR	8441273	Condition	! pwidth	1490:8:52762:52768	8441249	0	True				
ANR	8441274	UnaryOperationExpression	! pwidth		8441249	0					
ANR	8441275	UnaryOperator	!		8441249	0					
ANR	8441276	Identifier	pwidth		8441249	1					
ANR	8441277	ReturnStatement	return ( cdata == 0 ? 1 : 0 ) ;	1491:8:52779:52806	8441249	1	True				
ANR	8441278	ConditionalExpression	cdata == 0 ? 1 : 0		8441249	0					
ANR	8441279	Condition	cdata == 0		8441249	0					
ANR	8441280	EqualityExpression	cdata == 0		8441249	0		==			
ANR	8441281	Identifier	cdata		8441249	0					
ANR	8441282	PrimaryExpression	0		8441249	1					
ANR	8441283	PrimaryExpression	1		8441249	1					
ANR	8441284	PrimaryExpression	0		8441249	2					
ANR	8441285	IfStatement	if ( cdata == 0 )		8441249	3					
ANR	8441286	Condition	cdata == 0	1492:8:52816:52825	8441249	0	True				
ANR	8441287	EqualityExpression	cdata == 0		8441249	0		==			
ANR	8441288	Identifier	cdata		8441249	0					
ANR	8441289	PrimaryExpression	0		8441249	1					
ANR	8441290	CompoundStatement		7:20:159:159	8441249	1					
ANR	8441291	ExpressionStatement	pwidth -> x = pwidth -> y = 0	1493:8:52838:52863	8441249	0	True				
ANR	8441292	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8441249	0		=			
ANR	8441293	PtrMemberAccess	pwidth -> x		8441249	0					
ANR	8441294	Identifier	pwidth		8441249	0					
ANR	8441295	Identifier	x		8441249	1					
ANR	8441296	AssignmentExpression	pwidth -> y = 0		8441249	1		=			
ANR	8441297	PtrMemberAccess	pwidth -> y		8441249	0					
ANR	8441298	Identifier	pwidth		8441249	0					
ANR	8441299	Identifier	y		8441249	1					
ANR	8441300	PrimaryExpression	0		8441249	1					
ANR	8441301	ReturnStatement	return 1 ;	1494:8:52873:52881	8441249	1	True				
ANR	8441302	PrimaryExpression	1		8441249	0					
ANR	8441303	SwitchStatement	switch ( cdata [ 3 ] )		8441249	4					
ANR	8441304	Condition	cdata [ 3 ]	1496:12:52901:52908	8441249	0	True				
ANR	8441305	ArrayIndexing	cdata [ 3 ]		8441249	0					
ANR	8441306	Identifier	cdata		8441249	0					
ANR	8441307	PrimaryExpression	3		8441249	1					
ANR	8441308	CompoundStatement		11:22:242:242	8441249	1					
ANR	8441309	Label	case 3 :	1497:8:52921:52927	8441249	0	True				
ANR	8441310	ExpressionStatement	cdata += 4	1498:12:52985:52995	8441249	1	True				
ANR	8441311	AssignmentExpression	cdata += 4		8441249	0		+=			
ANR	8441312	Identifier	cdata		8441249	0					
ANR	8441313	PrimaryExpression	4		8441249	1					
ANR	8441314	CompoundStatement		15:16:398:562	8441249	2					
ANR	8441315	IdentifierDeclStatement	const intelli_metrics_t * metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) ) ;	1500:16:53067:53231	8441249	0	True				
ANR	8441316	IdentifierDecl	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8441249	0					
ANR	8441317	IdentifierDeclType	const intelli_metrics_t *		8441249	0					
ANR	8441318	Identifier	metrics		8441249	1					
ANR	8441319	AssignmentExpression	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8441249	2		=			
ANR	8441320	Identifier	metrics		8441249	0					
ANR	8441321	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8441249	1					
ANR	8441322	CastTarget	const intelli_metrics_t *		8441249	0					
ANR	8441323	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8441249	1		+			
ANR	8441324	Identifier	cdata		8441249	0					
ANR	8441325	CallExpression	pl_get_uint16 ( cdata + 2 )		8441249	1					
ANR	8441326	Callee	pl_get_uint16		8441249	0					
ANR	8441327	Identifier	pl_get_uint16		8441249	0					
ANR	8441328	ArgumentList	cdata + 2		8441249	1					
ANR	8441329	Argument	cdata + 2		8441249	0					
ANR	8441330	AdditiveExpression	cdata + 2		8441249	0		+			
ANR	8441331	Identifier	cdata		8441249	0					
ANR	8441332	PrimaryExpression	2		8441249	1					
ANR	8441333	ExpressionStatement	wx = pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )	1503:16:53249:53363	8441249	1	True				
ANR	8441334	AssignmentExpression	wx = pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8441249	0		=			
ANR	8441335	Identifier	wx		8441249	0					
ANR	8441336	AdditiveExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8441249	1		-			
ANR	8441337	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] )		8441249	0					
ANR	8441338	Callee	pl_get_int16		8441249	0					
ANR	8441339	Identifier	pl_get_int16		8441249	0					
ANR	8441340	ArgumentList	metrics -> charEscapementBox [ 2 ]		8441249	1					
ANR	8441341	Argument	metrics -> charEscapementBox [ 2 ]		8441249	0					
ANR	8441342	ArrayIndexing	metrics -> charEscapementBox [ 2 ]		8441249	0					
ANR	8441343	PtrMemberAccess	metrics -> charEscapementBox		8441249	0					
ANR	8441344	Identifier	metrics		8441249	0					
ANR	8441345	Identifier	charEscapementBox		8441249	1					
ANR	8441346	PrimaryExpression	2		8441249	1					
ANR	8441347	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8441249	1					
ANR	8441348	Callee	pl_get_int16		8441249	0					
ANR	8441349	Identifier	pl_get_int16		8441249	0					
ANR	8441350	ArgumentList	metrics -> charEscapementBox [ 0 ]		8441249	1					
ANR	8441351	Argument	metrics -> charEscapementBox [ 0 ]		8441249	0					
ANR	8441352	ArrayIndexing	metrics -> charEscapementBox [ 0 ]		8441249	0					
ANR	8441353	PtrMemberAccess	metrics -> charEscapementBox		8441249	0					
ANR	8441354	Identifier	metrics		8441249	0					
ANR	8441355	Identifier	charEscapementBox		8441249	1					
ANR	8441356	PrimaryExpression	0		8441249	1					
ANR	8441357	BreakStatement	break ;	1506:12:53391:53396	8441249	3	True				
ANR	8441358	Label	case 4 :	1507:8:53406:53412	8441249	4	True				
ANR	8441359	ExpressionStatement	wx = pl_get_int16 ( cdata + 4 )	1508:12:53466:53494	8441249	5	True				
ANR	8441360	AssignmentExpression	wx = pl_get_int16 ( cdata + 4 )		8441249	0		=			
ANR	8441361	Identifier	wx		8441249	0					
ANR	8441362	CallExpression	pl_get_int16 ( cdata + 4 )		8441249	1					
ANR	8441363	Callee	pl_get_int16		8441249	0					
ANR	8441364	Identifier	pl_get_int16		8441249	0					
ANR	8441365	ArgumentList	cdata + 4		8441249	1					
ANR	8441366	Argument	cdata + 4		8441249	0					
ANR	8441367	AdditiveExpression	cdata + 4		8441249	0		+			
ANR	8441368	Identifier	cdata		8441249	0					
ANR	8441369	PrimaryExpression	4		8441249	1					
ANR	8441370	BreakStatement	break ;	1509:12:53508:53513	8441249	6	True				
ANR	8441371	Label	default :	1510:8:53523:53530	8441249	7	True				
ANR	8441372	Identifier	default		8441249	0					
ANR	8441373	ExpressionStatement	pwidth -> x = pwidth -> y = 0	1511:12:53581:53606	8441249	8	True				
ANR	8441374	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8441249	0		=			
ANR	8441375	PtrMemberAccess	pwidth -> x		8441249	0					
ANR	8441376	Identifier	pwidth		8441249	0					
ANR	8441377	Identifier	x		8441249	1					
ANR	8441378	AssignmentExpression	pwidth -> y = 0		8441249	1		=			
ANR	8441379	PtrMemberAccess	pwidth -> y		8441249	0					
ANR	8441380	Identifier	pwidth		8441249	0					
ANR	8441381	Identifier	y		8441249	1					
ANR	8441382	PrimaryExpression	0		8441249	1					
ANR	8441383	ReturnStatement	return 0 ;	1512:12:53620:53628	8441249	9	True				
ANR	8441384	PrimaryExpression	0		8441249	0					
ANR	8441385	ExpressionStatement	pwidth -> x = ( double ) wx / 8782.0	1514:4:53640:53672	8441249	5	True				
ANR	8441386	AssignmentExpression	pwidth -> x = ( double ) wx / 8782.0		8441249	0		=			
ANR	8441387	PtrMemberAccess	pwidth -> x		8441249	0					
ANR	8441388	Identifier	pwidth		8441249	0					
ANR	8441389	Identifier	x		8441249	1					
ANR	8441390	MultiplicativeExpression	( double ) wx / 8782.0		8441249	1		/			
ANR	8441391	CastExpression	( double ) wx		8441249	0					
ANR	8441392	CastTarget	double		8441249	0					
ANR	8441393	Identifier	wx		8441249	1					
ANR	8441394	PrimaryExpression	8782.0		8441249	1					
ANR	8441395	ReturnStatement	return 0 ;	1515:4:53678:53686	8441249	6	True				
ANR	8441396	PrimaryExpression	0		8441249	0					
ANR	8441397	ReturnType	static int		8441249	1					
ANR	8441398	Identifier	pl_intelli_char_width		8441249	2					
ANR	8441399	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8441249	3					
ANR	8441400	Parameter	const pl_font_t * plfont	1484:22:52565:52588	8441249	0	True				
ANR	8441401	ParameterType	const pl_font_t *		8441249	0					
ANR	8441402	Identifier	plfont		8441249	1					
ANR	8441403	Parameter	const void * pgs	1484:48:52591:52605	8441249	1	True				
ANR	8441404	ParameterType	const void *		8441249	0					
ANR	8441405	Identifier	pgs		8441249	1					
ANR	8441406	Parameter	gs_char char_code	1485:22:52630:52646	8441249	2	True				
ANR	8441407	ParameterType	gs_char		8441249	0					
ANR	8441408	Identifier	char_code		8441249	1					
ANR	8441409	Parameter	gs_point * pwidth	1485:41:52649:52665	8441249	3	True				
ANR	8441410	ParameterType	gs_point *		8441249	0					
ANR	8441411	Identifier	pwidth		8441249	1					
ANR	8441412	CFGEntryNode	ENTRY		8441249		True				
ANR	8441413	CFGExitNode	EXIT		8441249		True				
ANR	8441414	Symbol	wx		8441249						
ANR	8441415	Symbol	pl_get_uint16		8441249						
ANR	8441416	Symbol	pl_font_lookup_glyph		8441249						
ANR	8441417	Symbol	pwidth -> y		8441249						
ANR	8441418	Symbol	char_code		8441249						
ANR	8441419	Symbol	pwidth		8441249						
ANR	8441420	Symbol	plfont		8441249						
ANR	8441421	Symbol	* pl_font_lookup_glyph		8441249						
ANR	8441422	Symbol	cdata		8441249						
ANR	8441423	Symbol	pwidth -> x		8441249						
ANR	8441424	Symbol	metrics -> charEscapementBox		8441249						
ANR	8441425	Symbol	* cdata		8441249						
ANR	8441426	Symbol	* metrics		8441249						
ANR	8441427	Symbol	pl_get_int16		8441249						
ANR	8441428	Symbol	* pwidth		8441249						
ANR	8441429	Symbol	metrics		8441249						
ANR	8441430	Symbol	* * metrics		8441249						
ANR	8441431	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441249						
ANR	8441432	Symbol	pgs		8441249						
ANR	8441433	Symbol	* metrics -> charEscapementBox		8441249						
ANR	8441434	Function	pl_intelli_char_metrics	1518:0:53691:54704							
ANR	8441435	FunctionDef	"pl_intelli_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8441434	0					
ANR	8441436	CompoundStatement		1521:0:53830:54704	8441434	0					
ANR	8441437	IdentifierDeclStatement	gs_point width ;	1522:4:53836:53850	8441434	0	True				
ANR	8441438	IdentifierDecl	width		8441434	0					
ANR	8441439	IdentifierDeclType	gs_point		8441434	0					
ANR	8441440	Identifier	width		8441434	1					
ANR	8441441	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	1523:4:53856:53921	8441434	1	True				
ANR	8441442	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441434	0					
ANR	8441443	IdentifierDeclType	const byte *		8441434	0					
ANR	8441444	Identifier	cdata		8441434	1					
ANR	8441445	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441434	2		=			
ANR	8441446	Identifier	cdata		8441434	0					
ANR	8441447	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441434	1					
ANR	8441448	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8441434	0					
ANR	8441449	Callee	pl_font_lookup_glyph		8441434	0					
ANR	8441450	Identifier	pl_font_lookup_glyph		8441434	0					
ANR	8441451	ArgumentList	plfont		8441434	1					
ANR	8441452	Argument	plfont		8441434	0					
ANR	8441453	Identifier	plfont		8441434	0					
ANR	8441454	Argument	char_code		8441434	1					
ANR	8441455	Identifier	char_code		8441434	0					
ANR	8441456	Identifier	data		8441434	1					
ANR	8441457	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0	1525:4:53928:53981	8441434	2	True				
ANR	8441458	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8441434	0		=			
ANR	8441459	ArrayIndexing	metrics [ 0 ]		8441434	0					
ANR	8441460	Identifier	metrics		8441434	0					
ANR	8441461	PrimaryExpression	0		8441434	1					
ANR	8441462	AssignmentExpression	metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8441434	1		=			
ANR	8441463	ArrayIndexing	metrics [ 1 ]		8441434	0					
ANR	8441464	Identifier	metrics		8441434	0					
ANR	8441465	PrimaryExpression	1		8441434	1					
ANR	8441466	AssignmentExpression	metrics [ 2 ] = metrics [ 3 ] = 0		8441434	1		=			
ANR	8441467	ArrayIndexing	metrics [ 2 ]		8441434	0					
ANR	8441468	Identifier	metrics		8441434	0					
ANR	8441469	PrimaryExpression	2		8441434	1					
ANR	8441470	AssignmentExpression	metrics [ 3 ] = 0		8441434	1		=			
ANR	8441471	ArrayIndexing	metrics [ 3 ]		8441434	0					
ANR	8441472	Identifier	metrics		8441434	0					
ANR	8441473	PrimaryExpression	3		8441434	1					
ANR	8441474	PrimaryExpression	0		8441434	1					
ANR	8441475	IfStatement	if ( cdata == 0 )		8441434	3					
ANR	8441476	Condition	cdata == 0	1527:8:53992:54001	8441434	0	True				
ANR	8441477	EqualityExpression	cdata == 0		8441434	0		==			
ANR	8441478	Identifier	cdata		8441434	0					
ANR	8441479	PrimaryExpression	0		8441434	1					
ANR	8441480	CompoundStatement		7:20:173:173	8441434	1					
ANR	8441481	ReturnStatement	return 1 ;	1528:8:54014:54022	8441434	0	True				
ANR	8441482	PrimaryExpression	1		8441434	0					
ANR	8441483	IfStatement	if ( cdata [ 3 ] == 4 )		8441434	4					
ANR	8441484	Condition	cdata [ 3 ] == 4	1532:8:54058:54070	8441434	0	True				
ANR	8441485	EqualityExpression	cdata [ 3 ] == 4		8441434	0		==			
ANR	8441486	ArrayIndexing	cdata [ 3 ]		8441434	0					
ANR	8441487	Identifier	cdata		8441434	0					
ANR	8441488	PrimaryExpression	3		8441434	1					
ANR	8441489	PrimaryExpression	4		8441434	1					
ANR	8441490	CompoundStatement		12:23:242:242	8441434	1					
ANR	8441491	ExpressionStatement	"dmprintf ( plfont -> pfont -> memory , ""warning compound intellifont metrics not supported"" )"	1533:8:54083:54185	8441434	0	True				
ANR	8441492	CallExpression	"dmprintf ( plfont -> pfont -> memory , ""warning compound intellifont metrics not supported"" )"		8441434	0					
ANR	8441493	Callee	dmprintf		8441434	0					
ANR	8441494	Identifier	dmprintf		8441434	0					
ANR	8441495	ArgumentList	plfont -> pfont -> memory		8441434	1					
ANR	8441496	Argument	plfont -> pfont -> memory		8441434	0					
ANR	8441497	PtrMemberAccess	plfont -> pfont -> memory		8441434	0					
ANR	8441498	PtrMemberAccess	plfont -> pfont		8441434	0					
ANR	8441499	Identifier	plfont		8441434	0					
ANR	8441500	Identifier	pfont		8441434	1					
ANR	8441501	Identifier	memory		8441434	1					
ANR	8441502	Argument	"""warning compound intellifont metrics not supported"""		8441434	1					
ANR	8441503	PrimaryExpression	"""warning compound intellifont metrics not supported"""		8441434	0					
ANR	8441504	ReturnStatement	return 0 ;	1535:8:54195:54203	8441434	1	True				
ANR	8441505	PrimaryExpression	0		8441434	0					
ANR	8441506	ExpressionStatement	cdata += 4	1538:4:54216:54226	8441434	5	True				
ANR	8441507	AssignmentExpression	cdata += 4		8441434	0		+=			
ANR	8441508	Identifier	cdata		8441434	0					
ANR	8441509	PrimaryExpression	4		8441434	1					
ANR	8441510	CompoundStatement		21:8:412:528	8441434	6					
ANR	8441511	IdentifierDeclStatement	const intelli_metrics_t * intelli_metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) ) ;	1541:8:54243:54359	8441434	0	True				
ANR	8441512	IdentifierDecl	* intelli_metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8441434	0					
ANR	8441513	IdentifierDeclType	const intelli_metrics_t *		8441434	0					
ANR	8441514	Identifier	intelli_metrics		8441434	1					
ANR	8441515	AssignmentExpression	* intelli_metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8441434	2		=			
ANR	8441516	Identifier	intelli_metrics		8441434	0					
ANR	8441517	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8441434	1					
ANR	8441518	CastTarget	const intelli_metrics_t *		8441434	0					
ANR	8441519	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8441434	1		+			
ANR	8441520	Identifier	cdata		8441434	0					
ANR	8441521	CallExpression	pl_get_uint16 ( cdata + 2 )		8441434	1					
ANR	8441522	Callee	pl_get_uint16		8441434	0					
ANR	8441523	Identifier	pl_get_uint16		8441434	0					
ANR	8441524	ArgumentList	cdata + 2		8441434	1					
ANR	8441525	Argument	cdata + 2		8441434	0					
ANR	8441526	AdditiveExpression	cdata + 2		8441434	0		+			
ANR	8441527	Identifier	cdata		8441434	0					
ANR	8441528	PrimaryExpression	2		8441434	1					
ANR	8441529	ExpressionStatement	metrics [ 0 ] = ( float ) pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )	1546:8:54488:54555	8441434	1	True				
ANR	8441530	AssignmentExpression	metrics [ 0 ] = ( float ) pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )		8441434	0		=			
ANR	8441531	ArrayIndexing	metrics [ 0 ]		8441434	0					
ANR	8441532	Identifier	metrics		8441434	0					
ANR	8441533	PrimaryExpression	0		8441434	1					
ANR	8441534	CastExpression	( float ) pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )		8441434	1					
ANR	8441535	CastTarget	float		8441434	0					
ANR	8441536	CallExpression	pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )		8441434	1					
ANR	8441537	Callee	pl_get_int16		8441434	0					
ANR	8441538	Identifier	pl_get_int16		8441434	0					
ANR	8441539	ArgumentList	intelli_metrics -> charSymbolBox [ 0 ]		8441434	1					
ANR	8441540	Argument	intelli_metrics -> charSymbolBox [ 0 ]		8441434	0					
ANR	8441541	ArrayIndexing	intelli_metrics -> charSymbolBox [ 0 ]		8441434	0					
ANR	8441542	PtrMemberAccess	intelli_metrics -> charSymbolBox		8441434	0					
ANR	8441543	Identifier	intelli_metrics		8441434	0					
ANR	8441544	Identifier	charSymbolBox		8441434	1					
ANR	8441545	PrimaryExpression	0		8441434	1					
ANR	8441546	ExpressionStatement	metrics [ 0 ] /= 8782.0	1547:8:54565:54585	8441434	2	True				
ANR	8441547	AssignmentExpression	metrics [ 0 ] /= 8782.0		8441434	0		/=			
ANR	8441548	ArrayIndexing	metrics [ 0 ]		8441434	0					
ANR	8441549	Identifier	metrics		8441434	0					
ANR	8441550	PrimaryExpression	0		8441434	1					
ANR	8441551	PrimaryExpression	8782.0		8441434	1					
ANR	8441552	ExpressionStatement	"pl_intelli_char_width ( plfont , pgs , char_code , & width )"	1548:8:54595:54648	8441434	3	True				
ANR	8441553	CallExpression	"pl_intelli_char_width ( plfont , pgs , char_code , & width )"		8441434	0					
ANR	8441554	Callee	pl_intelli_char_width		8441434	0					
ANR	8441555	Identifier	pl_intelli_char_width		8441434	0					
ANR	8441556	ArgumentList	plfont		8441434	1					
ANR	8441557	Argument	plfont		8441434	0					
ANR	8441558	Identifier	plfont		8441434	0					
ANR	8441559	Argument	pgs		8441434	1					
ANR	8441560	Identifier	pgs		8441434	0					
ANR	8441561	Argument	char_code		8441434	2					
ANR	8441562	Identifier	char_code		8441434	0					
ANR	8441563	Argument	& width		8441434	3					
ANR	8441564	UnaryOperationExpression	& width		8441434	0					
ANR	8441565	UnaryOperator	&		8441434	0					
ANR	8441566	Identifier	width		8441434	1					
ANR	8441567	ExpressionStatement	metrics [ 2 ] = width . x	1549:8:54658:54678	8441434	4	True				
ANR	8441568	AssignmentExpression	metrics [ 2 ] = width . x		8441434	0		=			
ANR	8441569	ArrayIndexing	metrics [ 2 ]		8441434	0					
ANR	8441570	Identifier	metrics		8441434	0					
ANR	8441571	PrimaryExpression	2		8441434	1					
ANR	8441572	MemberAccess	width . x		8441434	1					
ANR	8441573	Identifier	width		8441434	0					
ANR	8441574	Identifier	x		8441434	1					
ANR	8441575	ReturnStatement	return 0 ;	1550:8:54688:54696	8441434	5	True				
ANR	8441576	PrimaryExpression	0		8441434	0					
ANR	8441577	ReturnType	static int		8441434	1					
ANR	8441578	Identifier	pl_intelli_char_metrics		8441434	2					
ANR	8441579	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8441434	3					
ANR	8441580	Parameter	const pl_font_t * plfont	1519:24:53726:53749	8441434	0	True				
ANR	8441581	ParameterType	const pl_font_t *		8441434	0					
ANR	8441582	Identifier	plfont		8441434	1					
ANR	8441583	Parameter	const void * pgs	1519:50:53752:53766	8441434	1	True				
ANR	8441584	ParameterType	const void *		8441434	0					
ANR	8441585	Identifier	pgs		8441434	1					
ANR	8441586	Parameter	gs_char char_code	1520:24:53793:53809	8441434	2	True				
ANR	8441587	ParameterType	gs_char		8441434	0					
ANR	8441588	Identifier	char_code		8441434	1					
ANR	8441589	Parameter	float metrics [ 4 ]	1520:43:53812:53827	8441434	3	True				
ANR	8441590	ParameterType	float [ 4 ]		8441434	0					
ANR	8441591	Identifier	metrics		8441434	1					
ANR	8441592	CFGEntryNode	ENTRY		8441434		True				
ANR	8441593	CFGExitNode	EXIT		8441434		True				
ANR	8441594	Symbol	* intelli_metrics -> charSymbolBox		8441434						
ANR	8441595	Symbol	* plfont -> pfont		8441434						
ANR	8441596	Symbol	pl_font_lookup_glyph		8441434						
ANR	8441597	Symbol	intelli_metrics		8441434						
ANR	8441598	Symbol	* intelli_metrics		8441434						
ANR	8441599	Symbol	& width		8441434						
ANR	8441600	Symbol	plfont		8441434						
ANR	8441601	Symbol	* metrics		8441434						
ANR	8441602	Symbol	* cdata		8441434						
ANR	8441603	Symbol	pl_get_int16		8441434						
ANR	8441604	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8441434						
ANR	8441605	Symbol	pgs		8441434						
ANR	8441606	Symbol	pl_get_uint16		8441434						
ANR	8441607	Symbol	* * plfont		8441434						
ANR	8441608	Symbol	plfont -> pfont -> memory		8441434						
ANR	8441609	Symbol	char_code		8441434						
ANR	8441610	Symbol	* pl_font_lookup_glyph		8441434						
ANR	8441611	Symbol	cdata		8441434						
ANR	8441612	Symbol	* * intelli_metrics		8441434						
ANR	8441613	Symbol	plfont -> pfont		8441434						
ANR	8441614	Symbol	intelli_metrics -> charSymbolBox		8441434						
ANR	8441615	Symbol	width		8441434						
ANR	8441616	Symbol	* plfont		8441434						
ANR	8441617	Symbol	width . x		8441434						
ANR	8441618	Symbol	metrics		8441434						
ANR	8441619	Function	pl_intelli_build_char	1555:0:54752:55650							
ANR	8441620	FunctionDef	"pl_intelli_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph)"		8441619	0					
ANR	8441621	CompoundStatement		1558:0:54892:55650	8441619	0					
ANR	8441622	IdentifierDeclStatement	const pl_font_t * plfont = ( const pl_font_t * ) pfont -> client_data ;	1559:4:54898:54961	8441619	0	True				
ANR	8441623	IdentifierDecl	* plfont = ( const pl_font_t * ) pfont -> client_data		8441619	0					
ANR	8441624	IdentifierDeclType	const pl_font_t *		8441619	0					
ANR	8441625	Identifier	plfont		8441619	1					
ANR	8441626	AssignmentExpression	* plfont = ( const pl_font_t * ) pfont -> client_data		8441619	2		=			
ANR	8441627	Identifier	plfont		8441619	0					
ANR	8441628	CastExpression	( const pl_font_t * ) pfont -> client_data		8441619	1					
ANR	8441629	CastTarget	const pl_font_t *		8441619	0					
ANR	8441630	PtrMemberAccess	pfont -> client_data		8441619	1					
ANR	8441631	Identifier	pfont		8441619	0					
ANR	8441632	Identifier	client_data		8441619	1					
ANR	8441633	IdentifierDeclStatement	float wbox [ 6 ] ;	1560:4:54967:54980	8441619	1	True				
ANR	8441634	IdentifierDecl	wbox [ 6 ]		8441619	0					
ANR	8441635	IdentifierDeclType	float [ 6 ]		8441619	0					
ANR	8441636	Identifier	wbox		8441619	1					
ANR	8441637	PrimaryExpression	6		8441619	2					
ANR	8441638	IdentifierDeclStatement	int code ;	1561:4:54986:54994	8441619	2	True				
ANR	8441639	IdentifierDecl	code		8441619	0					
ANR	8441640	IdentifierDeclType	int		8441619	0					
ANR	8441641	Identifier	code		8441619	1					
ANR	8441642	ExpressionStatement	wbox [ 0 ] = wbox [ 1 ] = 0	1563:4:55001:55022	8441619	3	True				
ANR	8441643	AssignmentExpression	wbox [ 0 ] = wbox [ 1 ] = 0		8441619	0		=			
ANR	8441644	ArrayIndexing	wbox [ 0 ]		8441619	0					
ANR	8441645	Identifier	wbox		8441619	0					
ANR	8441646	PrimaryExpression	0		8441619	1					
ANR	8441647	AssignmentExpression	wbox [ 1 ] = 0		8441619	1		=			
ANR	8441648	ArrayIndexing	wbox [ 1 ]		8441619	0					
ANR	8441649	Identifier	wbox		8441619	0					
ANR	8441650	PrimaryExpression	1		8441619	1					
ANR	8441651	PrimaryExpression	0		8441619	1					
ANR	8441652	ExpressionStatement	wbox [ 2 ] = wbox [ 3 ] = 65536.0	1564:4:55028:55055	8441619	4	True				
ANR	8441653	AssignmentExpression	wbox [ 2 ] = wbox [ 3 ] = 65536.0		8441619	0		=			
ANR	8441654	ArrayIndexing	wbox [ 2 ]		8441619	0					
ANR	8441655	Identifier	wbox		8441619	0					
ANR	8441656	PrimaryExpression	2		8441619	1					
ANR	8441657	AssignmentExpression	wbox [ 3 ] = 65536.0		8441619	1		=			
ANR	8441658	ArrayIndexing	wbox [ 3 ]		8441619	0					
ANR	8441659	Identifier	wbox		8441619	0					
ANR	8441660	PrimaryExpression	3		8441619	1					
ANR	8441661	PrimaryExpression	65536.0		8441619	1					
ANR	8441662	ExpressionStatement	wbox [ 4 ] = wbox [ 5 ] = - 65536.0	1565:4:55061:55089	8441619	5	True				
ANR	8441663	AssignmentExpression	wbox [ 4 ] = wbox [ 5 ] = - 65536.0		8441619	0		=			
ANR	8441664	ArrayIndexing	wbox [ 4 ]		8441619	0					
ANR	8441665	Identifier	wbox		8441619	0					
ANR	8441666	PrimaryExpression	4		8441619	1					
ANR	8441667	AssignmentExpression	wbox [ 5 ] = - 65536.0		8441619	1		=			
ANR	8441668	ArrayIndexing	wbox [ 5 ]		8441619	0					
ANR	8441669	Identifier	wbox		8441619	0					
ANR	8441670	PrimaryExpression	5		8441619	1					
ANR	8441671	UnaryOperationExpression	- 65536.0		8441619	1					
ANR	8441672	UnaryOperator	-		8441619	0					
ANR	8441673	PrimaryExpression	65536.0		8441619	1					
ANR	8441674	IfStatement	"if ( ! pl_intelli_merge_box ( wbox , plfont , glyph ) )"		8441619	6					
ANR	8441675	Condition	"! pl_intelli_merge_box ( wbox , plfont , glyph )"	1566:8:55099:55140	8441619	0	True				
ANR	8441676	UnaryOperationExpression	"! pl_intelli_merge_box ( wbox , plfont , glyph )"		8441619	0					
ANR	8441677	UnaryOperator	!		8441619	0					
ANR	8441678	CallExpression	"pl_intelli_merge_box ( wbox , plfont , glyph )"		8441619	1					
ANR	8441679	Callee	pl_intelli_merge_box		8441619	0					
ANR	8441680	Identifier	pl_intelli_merge_box		8441619	0					
ANR	8441681	ArgumentList	wbox		8441619	1					
ANR	8441682	Argument	wbox		8441619	0					
ANR	8441683	Identifier	wbox		8441619	0					
ANR	8441684	Argument	plfont		8441619	1					
ANR	8441685	Identifier	plfont		8441619	0					
ANR	8441686	Argument	glyph		8441619	2					
ANR	8441687	Identifier	glyph		8441619	0					
ANR	8441688	CompoundStatement		9:52:250:250	8441619	1					
ANR	8441689	ExpressionStatement	wbox [ 2 ] = wbox [ 3 ] = wbox [ 4 ] = wbox [ 5 ] = 0	1567:8:55153:55194	8441619	0	True				
ANR	8441690	AssignmentExpression	wbox [ 2 ] = wbox [ 3 ] = wbox [ 4 ] = wbox [ 5 ] = 0		8441619	0		=			
ANR	8441691	ArrayIndexing	wbox [ 2 ]		8441619	0					
ANR	8441692	Identifier	wbox		8441619	0					
ANR	8441693	PrimaryExpression	2		8441619	1					
ANR	8441694	AssignmentExpression	wbox [ 3 ] = wbox [ 4 ] = wbox [ 5 ] = 0		8441619	1		=			
ANR	8441695	ArrayIndexing	wbox [ 3 ]		8441619	0					
ANR	8441696	Identifier	wbox		8441619	0					
ANR	8441697	PrimaryExpression	3		8441619	1					
ANR	8441698	AssignmentExpression	wbox [ 4 ] = wbox [ 5 ] = 0		8441619	1		=			
ANR	8441699	ArrayIndexing	wbox [ 4 ]		8441619	0					
ANR	8441700	Identifier	wbox		8441619	0					
ANR	8441701	PrimaryExpression	4		8441619	1					
ANR	8441702	AssignmentExpression	wbox [ 5 ] = 0		8441619	1		=			
ANR	8441703	ArrayIndexing	wbox [ 5 ]		8441619	0					
ANR	8441704	Identifier	wbox		8441619	0					
ANR	8441705	PrimaryExpression	5		8441619	1					
ANR	8441706	PrimaryExpression	0		8441619	1					
ANR	8441707	ExpressionStatement	"code = gs_setcachedevice ( penum , pgs , wbox )"	1568:8:55204:55246	8441619	1	True				
ANR	8441708	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , wbox )"		8441619	0		=			
ANR	8441709	Identifier	code		8441619	0					
ANR	8441710	CallExpression	"gs_setcachedevice ( penum , pgs , wbox )"		8441619	1					
ANR	8441711	Callee	gs_setcachedevice		8441619	0					
ANR	8441712	Identifier	gs_setcachedevice		8441619	0					
ANR	8441713	ArgumentList	penum		8441619	1					
ANR	8441714	Argument	penum		8441619	0					
ANR	8441715	Identifier	penum		8441619	0					
ANR	8441716	Argument	pgs		8441619	1					
ANR	8441717	Identifier	pgs		8441619	0					
ANR	8441718	Argument	wbox		8441619	2					
ANR	8441719	Identifier	wbox		8441619	0					
ANR	8441720	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1569:8:55256:55284	8441619	2	True				
ANR	8441721	ConditionalExpression	code < 0 ? code : 0		8441619	0					
ANR	8441722	Condition	code < 0		8441619	0					
ANR	8441723	RelationalExpression	code < 0		8441619	0		<			
ANR	8441724	Identifier	code		8441619	0					
ANR	8441725	PrimaryExpression	0		8441619	1					
ANR	8441726	Identifier	code		8441619	1					
ANR	8441727	PrimaryExpression	0		8441619	2					
ANR	8441728	ExpressionStatement	"code = gs_setcachedevice ( penum , pgs , wbox )"	1571:4:55296:55338	8441619	7	True				
ANR	8441729	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , wbox )"		8441619	0		=			
ANR	8441730	Identifier	code		8441619	0					
ANR	8441731	CallExpression	"gs_setcachedevice ( penum , pgs , wbox )"		8441619	1					
ANR	8441732	Callee	gs_setcachedevice		8441619	0					
ANR	8441733	Identifier	gs_setcachedevice		8441619	0					
ANR	8441734	ArgumentList	penum		8441619	1					
ANR	8441735	Argument	penum		8441619	0					
ANR	8441736	Identifier	penum		8441619	0					
ANR	8441737	Argument	pgs		8441619	1					
ANR	8441738	Identifier	pgs		8441619	0					
ANR	8441739	Argument	wbox		8441619	2					
ANR	8441740	Identifier	wbox		8441619	0					
ANR	8441741	IfStatement	if ( code < 0 )		8441619	8					
ANR	8441742	Condition	code < 0	1572:8:55348:55355	8441619	0	True				
ANR	8441743	RelationalExpression	code < 0		8441619	0		<			
ANR	8441744	Identifier	code		8441619	0					
ANR	8441745	PrimaryExpression	0		8441619	1					
ANR	8441746	ReturnStatement	return code ;	1573:8:55366:55377	8441619	1	True				
ANR	8441747	Identifier	code		8441619	0					
ANR	8441748	ExpressionStatement	"code = pl_intelli_show_char ( pgs , plfont , glyph )"	1574:4:55383:55430	8441619	9	True				
ANR	8441749	AssignmentExpression	"code = pl_intelli_show_char ( pgs , plfont , glyph )"		8441619	0		=			
ANR	8441750	Identifier	code		8441619	0					
ANR	8441751	CallExpression	"pl_intelli_show_char ( pgs , plfont , glyph )"		8441619	1					
ANR	8441752	Callee	pl_intelli_show_char		8441619	0					
ANR	8441753	Identifier	pl_intelli_show_char		8441619	0					
ANR	8441754	ArgumentList	pgs		8441619	1					
ANR	8441755	Argument	pgs		8441619	0					
ANR	8441756	Identifier	pgs		8441619	0					
ANR	8441757	Argument	plfont		8441619	1					
ANR	8441758	Identifier	plfont		8441619	0					
ANR	8441759	Argument	glyph		8441619	2					
ANR	8441760	Identifier	glyph		8441619	0					
ANR	8441761	IfStatement	if ( code < 0 )		8441619	10					
ANR	8441762	Condition	code < 0	1575:8:55440:55447	8441619	0	True				
ANR	8441763	RelationalExpression	code < 0		8441619	0		<			
ANR	8441764	Identifier	code		8441619	0					
ANR	8441765	PrimaryExpression	0		8441619	1					
ANR	8441766	ReturnStatement	return code ;	1576:8:55458:55469	8441619	1	True				
ANR	8441767	Identifier	code		8441619	0					
ANR	8441768	ExpressionStatement	code = gs_eofill ( pgs )	1579:4:55593:55614	8441619	11	True				
ANR	8441769	AssignmentExpression	code = gs_eofill ( pgs )		8441619	0		=			
ANR	8441770	Identifier	code		8441619	0					
ANR	8441771	CallExpression	gs_eofill ( pgs )		8441619	1					
ANR	8441772	Callee	gs_eofill		8441619	0					
ANR	8441773	Identifier	gs_eofill		8441619	0					
ANR	8441774	ArgumentList	pgs		8441619	1					
ANR	8441775	Argument	pgs		8441619	0					
ANR	8441776	Identifier	pgs		8441619	0					
ANR	8441777	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1580:4:55620:55648	8441619	12	True				
ANR	8441778	ConditionalExpression	code < 0 ? code : 0		8441619	0					
ANR	8441779	Condition	code < 0		8441619	0					
ANR	8441780	RelationalExpression	code < 0		8441619	0		<			
ANR	8441781	Identifier	code		8441619	0					
ANR	8441782	PrimaryExpression	0		8441619	1					
ANR	8441783	Identifier	code		8441619	1					
ANR	8441784	PrimaryExpression	0		8441619	2					
ANR	8441785	ReturnType	static int		8441619	1					
ANR	8441786	Identifier	pl_intelli_build_char		8441619	2					
ANR	8441787	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph"		8441619	3					
ANR	8441788	Parameter	gs_show_enum * penum	1556:22:54785:54804	8441619	0	True				
ANR	8441789	ParameterType	gs_show_enum *		8441619	0					
ANR	8441790	Identifier	penum		8441619	1					
ANR	8441791	Parameter	gs_gstate * pgs	1556:44:54807:54821	8441619	1	True				
ANR	8441792	ParameterType	gs_gstate *		8441619	0					
ANR	8441793	Identifier	pgs		8441619	1					
ANR	8441794	Parameter	gs_font * pfont	1556:61:54824:54838	8441619	2	True				
ANR	8441795	ParameterType	gs_font *		8441619	0					
ANR	8441796	Identifier	pfont		8441619	1					
ANR	8441797	Parameter	gs_char chr	1557:22:54863:54873	8441619	3	True				
ANR	8441798	ParameterType	gs_char		8441619	0					
ANR	8441799	Identifier	chr		8441619	1					
ANR	8441800	Parameter	gs_glyph glyph	1557:35:54876:54889	8441619	4	True				
ANR	8441801	ParameterType	gs_glyph		8441619	0					
ANR	8441802	Identifier	glyph		8441619	1					
ANR	8441803	CFGEntryNode	ENTRY		8441619		True				
ANR	8441804	CFGExitNode	EXIT		8441619		True				
ANR	8441805	Symbol	wbox		8441619						
ANR	8441806	Symbol	code		8441619						
ANR	8441807	Symbol	pfont		8441619						
ANR	8441808	Symbol	gs_eofill		8441619						
ANR	8441809	Symbol	penum		8441619						
ANR	8441810	Symbol	plfont		8441619						
ANR	8441811	Symbol	pl_intelli_merge_box		8441619						
ANR	8441812	Symbol	chr		8441619						
ANR	8441813	Symbol	* wbox		8441619						
ANR	8441814	Symbol	pl_intelli_show_char		8441619						
ANR	8441815	Symbol	pfont -> client_data		8441619						
ANR	8441816	Symbol	glyph		8441619						
ANR	8441817	Symbol	* pfont		8441619						
ANR	8441818	Symbol	pgs		8441619						
ANR	8441819	Symbol	gs_setcachedevice		8441619						
ANR	8441820	Function	pl_bitmap_init_procs	1586:0:55769:56086							
ANR	8441821	FunctionDef	pl_bitmap_init_procs (gs_font_base * pfont)		8441820	0					
ANR	8441822	CompoundStatement		1588:0:55817:56086	8441820	0					
ANR	8441823	ExpressionStatement	pfont -> procs . encode_char = pl_bitmap_encode_char	1589:4:55823:55871	8441820	0	True				
ANR	8441824	AssignmentExpression	pfont -> procs . encode_char = pl_bitmap_encode_char		8441820	0		=			
ANR	8441825	MemberAccess	pfont -> procs . encode_char		8441820	0					
ANR	8441826	PtrMemberAccess	pfont -> procs		8441820	0					
ANR	8441827	Identifier	pfont		8441820	0					
ANR	8441828	Identifier	procs		8441820	1					
ANR	8441829	Identifier	encode_char		8441820	1					
ANR	8441830	Identifier	pl_bitmap_encode_char		8441820	1					
ANR	8441831	ExpressionStatement	pfont -> procs . build_char = pl_bitmap_build_char	1590:4:55877:55923	8441820	1	True				
ANR	8441832	AssignmentExpression	pfont -> procs . build_char = pl_bitmap_build_char		8441820	0		=			
ANR	8441833	MemberAccess	pfont -> procs . build_char		8441820	0					
ANR	8441834	PtrMemberAccess	pfont -> procs		8441820	0					
ANR	8441835	Identifier	pfont		8441820	0					
ANR	8441836	Identifier	procs		8441820	1					
ANR	8441837	Identifier	build_char		8441820	1					
ANR	8441838	Identifier	pl_bitmap_build_char		8441820	1					
ANR	8441839	Statement	define	1591:1:55926:55931	8441820	2	True				
ANR	8441840	Statement	plfont	1591:8:55933:55938	8441820	3	True				
ANR	8441841	Statement	(	1591:15:55940:55940	8441820	4	True				
ANR	8441842	Statement	(	1591:16:55941:55941	8441820	5	True				
ANR	8441843	Statement	pl_font_t	1591:17:55942:55950	8441820	6	True				
ANR	8441844	Statement	*	1591:27:55952:55952	8441820	7	True				
ANR	8441845	Statement	)	1591:28:55953:55953	8441820	8	True				
ANR	8441846	Statement	pfont	1591:29:55954:55958	8441820	9	True				
ANR	8441847	Statement	->	1591:34:55959:55960	8441820	10	True				
ANR	8441848	Statement	client_data	1591:36:55961:55971	8441820	11	True				
ANR	8441849	Statement	)	1591:47:55972:55972	8441820	12	True				
ANR	8441850	ExpressionStatement	plfont -> char_width = pl_bitmap_char_width	1592:4:55978:56019	8441820	13	True				
ANR	8441851	AssignmentExpression	plfont -> char_width = pl_bitmap_char_width		8441820	0		=			
ANR	8441852	PtrMemberAccess	plfont -> char_width		8441820	0					
ANR	8441853	Identifier	plfont		8441820	0					
ANR	8441854	Identifier	char_width		8441820	1					
ANR	8441855	Identifier	pl_bitmap_char_width		8441820	1					
ANR	8441856	ExpressionStatement	plfont -> char_metrics = pl_bitmap_char_metrics	1593:4:56025:56070	8441820	14	True				
ANR	8441857	AssignmentExpression	plfont -> char_metrics = pl_bitmap_char_metrics		8441820	0		=			
ANR	8441858	PtrMemberAccess	plfont -> char_metrics		8441820	0					
ANR	8441859	Identifier	plfont		8441820	0					
ANR	8441860	Identifier	char_metrics		8441820	1					
ANR	8441861	Identifier	pl_bitmap_char_metrics		8441820	1					
ANR	8441862	Statement	undef	1594:1:56073:56077	8441820	15	True				
ANR	8441863	Statement	plfont	1594:7:56079:56084	8441820	16	True				
ANR	8441864	ReturnType	void		8441820	1					
ANR	8441865	Identifier	pl_bitmap_init_procs		8441820	2					
ANR	8441866	ParameterList	gs_font_base * pfont		8441820	3					
ANR	8441867	Parameter	gs_font_base * pfont	1587:21:55795:55814	8441820	0	True				
ANR	8441868	ParameterType	gs_font_base *		8441820	0					
ANR	8441869	Identifier	pfont		8441820	1					
ANR	8441870	CFGEntryNode	ENTRY		8441820		True				
ANR	8441871	CFGExitNode	EXIT		8441820		True				
ANR	8441872	Symbol	pfont -> procs		8441820						
ANR	8441873	Symbol	pl_bitmap_encode_char		8441820						
ANR	8441874	Symbol	pl_bitmap_char_width		8441820						
ANR	8441875	Symbol	plfont -> char_width		8441820						
ANR	8441876	Symbol	pfont		8441820						
ANR	8441877	Symbol	pl_bitmap_build_char		8441820						
ANR	8441878	Symbol	pfont -> procs . encode_char		8441820						
ANR	8441879	Symbol	pfont -> procs . build_char		8441820						
ANR	8441880	Symbol	plfont		8441820						
ANR	8441881	Symbol	pl_bitmap_char_metrics		8441820						
ANR	8441882	Symbol	* pfont		8441820						
ANR	8441883	Symbol	plfont -> char_metrics		8441820						
ANR	8441884	Symbol	* plfont		8441820						
ANR	8441885	Function	pl_tt_init_procs	1598:0:56142:56490							
ANR	8441886	FunctionDef	pl_tt_init_procs (gs_font_type42 * pfont)		8441885	0					
ANR	8441887	CompoundStatement		1600:0:56188:56490	8441885	0					
ANR	8441888	ExpressionStatement	pfont -> procs . encode_char = pl_tt_encode_char	1601:4:56194:56238	8441885	0	True				
ANR	8441889	AssignmentExpression	pfont -> procs . encode_char = pl_tt_encode_char		8441885	0		=			
ANR	8441890	MemberAccess	pfont -> procs . encode_char		8441885	0					
ANR	8441891	PtrMemberAccess	pfont -> procs		8441885	0					
ANR	8441892	Identifier	pfont		8441885	0					
ANR	8441893	Identifier	procs		8441885	1					
ANR	8441894	Identifier	encode_char		8441885	1					
ANR	8441895	Identifier	pl_tt_encode_char		8441885	1					
ANR	8441896	ExpressionStatement	pfont -> procs . build_char = pl_tt_build_char	1602:4:56244:56286	8441885	1	True				
ANR	8441897	AssignmentExpression	pfont -> procs . build_char = pl_tt_build_char		8441885	0		=			
ANR	8441898	MemberAccess	pfont -> procs . build_char		8441885	0					
ANR	8441899	PtrMemberAccess	pfont -> procs		8441885	0					
ANR	8441900	Identifier	pfont		8441885	0					
ANR	8441901	Identifier	procs		8441885	1					
ANR	8441902	Identifier	build_char		8441885	1					
ANR	8441903	Identifier	pl_tt_build_char		8441885	1					
ANR	8441904	ExpressionStatement	pfont -> data . string_proc = pl_tt_string_proc	1603:4:56292:56335	8441885	2	True				
ANR	8441905	AssignmentExpression	pfont -> data . string_proc = pl_tt_string_proc		8441885	0		=			
ANR	8441906	MemberAccess	pfont -> data . string_proc		8441885	0					
ANR	8441907	PtrMemberAccess	pfont -> data		8441885	0					
ANR	8441908	Identifier	pfont		8441885	0					
ANR	8441909	Identifier	data		8441885	1					
ANR	8441910	Identifier	string_proc		8441885	1					
ANR	8441911	Identifier	pl_tt_string_proc		8441885	1					
ANR	8441912	Statement	define	1604:1:56338:56343	8441885	3	True				
ANR	8441913	Statement	plfont	1604:8:56345:56350	8441885	4	True				
ANR	8441914	Statement	(	1604:15:56352:56352	8441885	5	True				
ANR	8441915	Statement	(	1604:16:56353:56353	8441885	6	True				
ANR	8441916	Statement	pl_font_t	1604:17:56354:56362	8441885	7	True				
ANR	8441917	Statement	*	1604:27:56364:56364	8441885	8	True				
ANR	8441918	Statement	)	1604:28:56365:56365	8441885	9	True				
ANR	8441919	Statement	pfont	1604:29:56366:56370	8441885	10	True				
ANR	8441920	Statement	->	1604:34:56371:56372	8441885	11	True				
ANR	8441921	Statement	client_data	1604:36:56373:56383	8441885	12	True				
ANR	8441922	Statement	)	1604:47:56384:56384	8441885	13	True				
ANR	8441923	ExpressionStatement	plfont -> char_width = pl_tt_char_width	1605:4:56390:56427	8441885	14	True				
ANR	8441924	AssignmentExpression	plfont -> char_width = pl_tt_char_width		8441885	0		=			
ANR	8441925	PtrMemberAccess	plfont -> char_width		8441885	0					
ANR	8441926	Identifier	plfont		8441885	0					
ANR	8441927	Identifier	char_width		8441885	1					
ANR	8441928	Identifier	pl_tt_char_width		8441885	1					
ANR	8441929	ExpressionStatement	plfont -> char_metrics = pl_tt_char_metrics	1606:4:56433:56474	8441885	15	True				
ANR	8441930	AssignmentExpression	plfont -> char_metrics = pl_tt_char_metrics		8441885	0		=			
ANR	8441931	PtrMemberAccess	plfont -> char_metrics		8441885	0					
ANR	8441932	Identifier	plfont		8441885	0					
ANR	8441933	Identifier	char_metrics		8441885	1					
ANR	8441934	Identifier	pl_tt_char_metrics		8441885	1					
ANR	8441935	Statement	undef	1607:1:56477:56481	8441885	16	True				
ANR	8441936	Statement	plfont	1607:7:56483:56488	8441885	17	True				
ANR	8441937	ReturnType	void		8441885	1					
ANR	8441938	Identifier	pl_tt_init_procs		8441885	2					
ANR	8441939	ParameterList	gs_font_type42 * pfont		8441885	3					
ANR	8441940	Parameter	gs_font_type42 * pfont	1599:17:56164:56185	8441885	0	True				
ANR	8441941	ParameterType	gs_font_type42 *		8441885	0					
ANR	8441942	Identifier	pfont		8441885	1					
ANR	8441943	CFGEntryNode	ENTRY		8441885		True				
ANR	8441944	CFGExitNode	EXIT		8441885		True				
ANR	8441945	Symbol	pfont -> procs		8441885						
ANR	8441946	Symbol	pl_tt_string_proc		8441885						
ANR	8441947	Symbol	plfont -> char_width		8441885						
ANR	8441948	Symbol	pfont		8441885						
ANR	8441949	Symbol	pl_tt_encode_char		8441885						
ANR	8441950	Symbol	pfont -> procs . encode_char		8441885						
ANR	8441951	Symbol	pfont -> data		8441885						
ANR	8441952	Symbol	pfont -> data . string_proc		8441885						
ANR	8441953	Symbol	pfont -> procs . build_char		8441885						
ANR	8441954	Symbol	plfont		8441885						
ANR	8441955	Symbol	pl_tt_char_width		8441885						
ANR	8441956	Symbol	pl_tt_char_metrics		8441885						
ANR	8441957	Symbol	* pfont		8441885						
ANR	8441958	Symbol	plfont -> char_metrics		8441885						
ANR	8441959	Symbol	* plfont		8441885						
ANR	8441960	Symbol	pl_tt_build_char		8441885						
ANR	8441961	Function	pl_tt_get_glyph_index	1610:0:56493:56608							
ANR	8441962	FunctionDef	"pl_tt_get_glyph_index (gs_font_type42 * pfont42 , gs_glyph glyph)"		8441961	0					
ANR	8441963	CompoundStatement		1612:0:56569:56608	8441961	0					
ANR	8441964	ReturnStatement	return glyph ;	1614:4:56594:56606	8441961	0	True				
ANR	8441965	Identifier	glyph		8441961	0					
ANR	8441966	ReturnType	static uint		8441961	1					
ANR	8441967	Identifier	pl_tt_get_glyph_index		8441961	2					
ANR	8441968	ParameterList	"gs_font_type42 * pfont42 , gs_glyph glyph"		8441961	3					
ANR	8441969	Parameter	gs_font_type42 * pfont42	1611:22:56527:56550	8441961	0	True				
ANR	8441970	ParameterType	gs_font_type42 *		8441961	0					
ANR	8441971	Identifier	pfont42		8441961	1					
ANR	8441972	Parameter	gs_glyph glyph	1611:48:56553:56566	8441961	1	True				
ANR	8441973	ParameterType	gs_glyph		8441961	0					
ANR	8441974	Identifier	glyph		8441961	1					
ANR	8441975	CFGEntryNode	ENTRY		8441961		True				
ANR	8441976	CFGExitNode	EXIT		8441961		True				
ANR	8441977	Symbol	glyph		8441961						
ANR	8441978	Symbol	pfont42		8441961						
ANR	8441979	Function	pl_tt_finish_init	1618:0:56654:58030							
ANR	8441980	FunctionDef	"pl_tt_finish_init (gs_font_type42 * pfont , bool downloaded)"		8441979	0					
ANR	8441981	CompoundStatement		1620:0:56718:58030	8441979	0					
ANR	8441982	IdentifierDeclStatement	float upem = ( float ) pfont -> data . unitsPerEm ;	1621:4:56724:56766	8441979	0	True				
ANR	8441983	IdentifierDecl	upem = ( float ) pfont -> data . unitsPerEm		8441979	0					
ANR	8441984	IdentifierDeclType	float		8441979	0					
ANR	8441985	Identifier	upem		8441979	1					
ANR	8441986	AssignmentExpression	upem = ( float ) pfont -> data . unitsPerEm		8441979	2		=			
ANR	8441987	Identifier	upem		8441979	0					
ANR	8441988	CastExpression	( float ) pfont -> data . unitsPerEm		8441979	1					
ANR	8441989	CastTarget	float		8441979	0					
ANR	8441990	MemberAccess	pfont -> data . unitsPerEm		8441979	1					
ANR	8441991	PtrMemberAccess	pfont -> data		8441979	0					
ANR	8441992	Identifier	pfont		8441979	0					
ANR	8441993	Identifier	data		8441979	1					
ANR	8441994	Identifier	unitsPerEm		8441979	1					
ANR	8441995	IdentifierDeclStatement	"ulong head = tt_find_table ( pfont , ""head"" , NULL ) ;"	1622:4:56772:56819	8441979	1	True				
ANR	8441996	IdentifierDecl	"head = tt_find_table ( pfont , ""head"" , NULL )"		8441979	0					
ANR	8441997	IdentifierDeclType	ulong		8441979	0					
ANR	8441998	Identifier	head		8441979	1					
ANR	8441999	AssignmentExpression	"head = tt_find_table ( pfont , ""head"" , NULL )"		8441979	2		=			
ANR	8442000	Identifier	head		8441979	0					
ANR	8442001	CallExpression	"tt_find_table ( pfont , ""head"" , NULL )"		8441979	1					
ANR	8442002	Callee	tt_find_table		8441979	0					
ANR	8442003	Identifier	tt_find_table		8441979	0					
ANR	8442004	ArgumentList	pfont		8441979	1					
ANR	8442005	Argument	pfont		8441979	0					
ANR	8442006	Identifier	pfont		8441979	0					
ANR	8442007	Argument	"""head"""		8441979	1					
ANR	8442008	PrimaryExpression	"""head"""		8441979	0					
ANR	8442009	Argument	NULL		8441979	2					
ANR	8442010	Identifier	NULL		8441979	0					
ANR	8442011	IdentifierDeclStatement	const byte * hdata ;	1623:4:56825:56842	8441979	2	True				
ANR	8442012	IdentifierDecl	* hdata		8441979	0					
ANR	8442013	IdentifierDeclType	const byte *		8441979	0					
ANR	8442014	Identifier	hdata		8441979	1					
ANR	8442015	ExpressionStatement	pfont -> data . get_glyph_index = pl_tt_get_glyph_index	1625:4:56849:56900	8441979	3	True				
ANR	8442016	AssignmentExpression	pfont -> data . get_glyph_index = pl_tt_get_glyph_index		8441979	0		=			
ANR	8442017	MemberAccess	pfont -> data . get_glyph_index		8441979	0					
ANR	8442018	PtrMemberAccess	pfont -> data		8441979	0					
ANR	8442019	Identifier	pfont		8441979	0					
ANR	8442020	Identifier	data		8441979	1					
ANR	8442021	Identifier	get_glyph_index		8441979	1					
ANR	8442022	Identifier	pl_tt_get_glyph_index		8441979	1					
ANR	8442023	IfStatement	if ( downloaded )		8441979	4					
ANR	8442024	Condition	downloaded	1626:8:56910:56919	8441979	0	True				
ANR	8442025	Identifier	downloaded		8441979	0					
ANR	8442026	ExpressionStatement	pfont -> data . get_outline = pl_tt_get_outline	1627:8:56930:56973	8441979	1	True				
ANR	8442027	AssignmentExpression	pfont -> data . get_outline = pl_tt_get_outline		8441979	0		=			
ANR	8442028	MemberAccess	pfont -> data . get_outline		8441979	0					
ANR	8442029	PtrMemberAccess	pfont -> data		8441979	0					
ANR	8442030	Identifier	pfont		8441979	0					
ANR	8442031	Identifier	data		8441979	1					
ANR	8442032	Identifier	get_outline		8441979	1					
ANR	8442033	Identifier	pl_tt_get_outline		8441979	1					
ANR	8442034	ExpressionStatement	"access ( head , 44 , hdata )"	1629:4:57007:57030	8441979	5	True				
ANR	8442035	CallExpression	"access ( head , 44 , hdata )"		8441979	0					
ANR	8442036	Callee	access		8441979	0					
ANR	8442037	Identifier	access		8441979	0					
ANR	8442038	ArgumentList	head		8441979	1					
ANR	8442039	Argument	head		8441979	0					
ANR	8442040	Identifier	head		8441979	0					
ANR	8442041	Argument	44		8441979	1					
ANR	8442042	PrimaryExpression	44		8441979	0					
ANR	8442043	Argument	hdata		8441979	2					
ANR	8442044	Identifier	hdata		8441979	0					
ANR	8442045	ExpressionStatement	pfont -> FontBBox . p . x = pl_get_int16 ( hdata + 36 ) / upem	1630:4:57036:57089	8441979	6	True				
ANR	8442046	AssignmentExpression	pfont -> FontBBox . p . x = pl_get_int16 ( hdata + 36 ) / upem		8441979	0		=			
ANR	8442047	MemberAccess	pfont -> FontBBox . p . x		8441979	0					
ANR	8442048	MemberAccess	pfont -> FontBBox . p		8441979	0					
ANR	8442049	PtrMemberAccess	pfont -> FontBBox		8441979	0					
ANR	8442050	Identifier	pfont		8441979	0					
ANR	8442051	Identifier	FontBBox		8441979	1					
ANR	8442052	Identifier	p		8441979	1					
ANR	8442053	Identifier	x		8441979	1					
ANR	8442054	MultiplicativeExpression	pl_get_int16 ( hdata + 36 ) / upem		8441979	1		/			
ANR	8442055	CallExpression	pl_get_int16 ( hdata + 36 )		8441979	0					
ANR	8442056	Callee	pl_get_int16		8441979	0					
ANR	8442057	Identifier	pl_get_int16		8441979	0					
ANR	8442058	ArgumentList	hdata + 36		8441979	1					
ANR	8442059	Argument	hdata + 36		8441979	0					
ANR	8442060	AdditiveExpression	hdata + 36		8441979	0		+			
ANR	8442061	Identifier	hdata		8441979	0					
ANR	8442062	PrimaryExpression	36		8441979	1					
ANR	8442063	Identifier	upem		8441979	1					
ANR	8442064	ExpressionStatement	pfont -> FontBBox . p . y = pl_get_int16 ( hdata + 38 ) / upem	1631:4:57095:57148	8441979	7	True				
ANR	8442065	AssignmentExpression	pfont -> FontBBox . p . y = pl_get_int16 ( hdata + 38 ) / upem		8441979	0		=			
ANR	8442066	MemberAccess	pfont -> FontBBox . p . y		8441979	0					
ANR	8442067	MemberAccess	pfont -> FontBBox . p		8441979	0					
ANR	8442068	PtrMemberAccess	pfont -> FontBBox		8441979	0					
ANR	8442069	Identifier	pfont		8441979	0					
ANR	8442070	Identifier	FontBBox		8441979	1					
ANR	8442071	Identifier	p		8441979	1					
ANR	8442072	Identifier	y		8441979	1					
ANR	8442073	MultiplicativeExpression	pl_get_int16 ( hdata + 38 ) / upem		8441979	1		/			
ANR	8442074	CallExpression	pl_get_int16 ( hdata + 38 )		8441979	0					
ANR	8442075	Callee	pl_get_int16		8441979	0					
ANR	8442076	Identifier	pl_get_int16		8441979	0					
ANR	8442077	ArgumentList	hdata + 38		8441979	1					
ANR	8442078	Argument	hdata + 38		8441979	0					
ANR	8442079	AdditiveExpression	hdata + 38		8441979	0		+			
ANR	8442080	Identifier	hdata		8441979	0					
ANR	8442081	PrimaryExpression	38		8441979	1					
ANR	8442082	Identifier	upem		8441979	1					
ANR	8442083	ExpressionStatement	pfont -> FontBBox . q . x = pl_get_int16 ( hdata + 40 ) / upem	1632:4:57154:57207	8441979	8	True				
ANR	8442084	AssignmentExpression	pfont -> FontBBox . q . x = pl_get_int16 ( hdata + 40 ) / upem		8441979	0		=			
ANR	8442085	MemberAccess	pfont -> FontBBox . q . x		8441979	0					
ANR	8442086	MemberAccess	pfont -> FontBBox . q		8441979	0					
ANR	8442087	PtrMemberAccess	pfont -> FontBBox		8441979	0					
ANR	8442088	Identifier	pfont		8441979	0					
ANR	8442089	Identifier	FontBBox		8441979	1					
ANR	8442090	Identifier	q		8441979	1					
ANR	8442091	Identifier	x		8441979	1					
ANR	8442092	MultiplicativeExpression	pl_get_int16 ( hdata + 40 ) / upem		8441979	1		/			
ANR	8442093	CallExpression	pl_get_int16 ( hdata + 40 )		8441979	0					
ANR	8442094	Callee	pl_get_int16		8441979	0					
ANR	8442095	Identifier	pl_get_int16		8441979	0					
ANR	8442096	ArgumentList	hdata + 40		8441979	1					
ANR	8442097	Argument	hdata + 40		8441979	0					
ANR	8442098	AdditiveExpression	hdata + 40		8441979	0		+			
ANR	8442099	Identifier	hdata		8441979	0					
ANR	8442100	PrimaryExpression	40		8441979	1					
ANR	8442101	Identifier	upem		8441979	1					
ANR	8442102	ExpressionStatement	pfont -> FontBBox . q . y = pl_get_int16 ( hdata + 42 ) / upem	1633:4:57213:57266	8441979	9	True				
ANR	8442103	AssignmentExpression	pfont -> FontBBox . q . y = pl_get_int16 ( hdata + 42 ) / upem		8441979	0		=			
ANR	8442104	MemberAccess	pfont -> FontBBox . q . y		8441979	0					
ANR	8442105	MemberAccess	pfont -> FontBBox . q		8441979	0					
ANR	8442106	PtrMemberAccess	pfont -> FontBBox		8441979	0					
ANR	8442107	Identifier	pfont		8441979	0					
ANR	8442108	Identifier	FontBBox		8441979	1					
ANR	8442109	Identifier	q		8441979	1					
ANR	8442110	Identifier	y		8441979	1					
ANR	8442111	MultiplicativeExpression	pl_get_int16 ( hdata + 42 ) / upem		8441979	1		/			
ANR	8442112	CallExpression	pl_get_int16 ( hdata + 42 )		8441979	0					
ANR	8442113	Callee	pl_get_int16		8441979	0					
ANR	8442114	Identifier	pl_get_int16		8441979	0					
ANR	8442115	ArgumentList	hdata + 42		8441979	1					
ANR	8442116	Argument	hdata + 42		8441979	0					
ANR	8442117	AdditiveExpression	hdata + 42		8441979	0		+			
ANR	8442118	Identifier	hdata		8441979	0					
ANR	8442119	PrimaryExpression	42		8441979	1					
ANR	8442120	Identifier	upem		8441979	1					
ANR	8442121	IfStatement	if ( gs_debug_c ( 'm' ) )		8441979	10					
ANR	8442122	Condition	gs_debug_c ( 'm' )	1635:8:57289:57303	8441979	0	True				
ANR	8442123	CallExpression	gs_debug_c ( 'm' )		8441979	0					
ANR	8442124	Callee	gs_debug_c		8441979	0					
ANR	8442125	Identifier	gs_debug_c		8441979	0					
ANR	8442126	ArgumentList	'm'		8441979	1					
ANR	8442127	Argument	'm'		8441979	0					
ANR	8442128	PrimaryExpression	'm'		8441979	0					
ANR	8442129	CompoundStatement		20:8:690:696	8441979	1					
ANR	8442130	IdentifierDeclStatement	const byte * OffsetTable ;	1636:8:57316:57339	8441979	0	True				
ANR	8442131	IdentifierDecl	* OffsetTable		8441979	0					
ANR	8442132	IdentifierDeclType	const byte *		8441979	0					
ANR	8442133	Identifier	OffsetTable		8441979	1					
ANR	8442134	IdentifierDeclStatement	uint numTables ;	1637:8:57349:57363	8441979	1	True				
ANR	8442135	IdentifierDecl	numTables		8441979	0					
ANR	8442136	IdentifierDeclType	uint		8441979	0					
ANR	8442137	Identifier	numTables		8441979	1					
ANR	8442138	IdentifierDeclStatement	const byte * TableDirectory ;	1638:8:57373:57399	8441979	2	True				
ANR	8442139	IdentifierDecl	* TableDirectory		8441979	0					
ANR	8442140	IdentifierDeclType	const byte *		8441979	0					
ANR	8442141	Identifier	TableDirectory		8441979	1					
ANR	8442142	IdentifierDeclStatement	uint i ;	1639:8:57409:57415	8441979	3	True				
ANR	8442143	IdentifierDecl	i		8441979	0					
ANR	8442144	IdentifierDeclType	uint		8441979	0					
ANR	8442145	Identifier	i		8441979	1					
ANR	8442146	ExpressionStatement	"access ( 0 , 12 , OffsetTable )"	1641:8:57426:57452	8441979	4	True				
ANR	8442147	CallExpression	"access ( 0 , 12 , OffsetTable )"		8441979	0					
ANR	8442148	Callee	access		8441979	0					
ANR	8442149	Identifier	access		8441979	0					
ANR	8442150	ArgumentList	0		8441979	1					
ANR	8442151	Argument	0		8441979	0					
ANR	8442152	PrimaryExpression	0		8441979	0					
ANR	8442153	Argument	12		8441979	1					
ANR	8442154	PrimaryExpression	12		8441979	0					
ANR	8442155	Argument	OffsetTable		8441979	2					
ANR	8442156	Identifier	OffsetTable		8441979	0					
ANR	8442157	ExpressionStatement	numTables = pl_get_uint16 ( OffsetTable + 4 )	1642:8:57462:57504	8441979	5	True				
ANR	8442158	AssignmentExpression	numTables = pl_get_uint16 ( OffsetTable + 4 )		8441979	0		=			
ANR	8442159	Identifier	numTables		8441979	0					
ANR	8442160	CallExpression	pl_get_uint16 ( OffsetTable + 4 )		8441979	1					
ANR	8442161	Callee	pl_get_uint16		8441979	0					
ANR	8442162	Identifier	pl_get_uint16		8441979	0					
ANR	8442163	ArgumentList	OffsetTable + 4		8441979	1					
ANR	8442164	Argument	OffsetTable + 4		8441979	0					
ANR	8442165	AdditiveExpression	OffsetTable + 4		8441979	0		+			
ANR	8442166	Identifier	OffsetTable		8441979	0					
ANR	8442167	PrimaryExpression	4		8441979	1					
ANR	8442168	ExpressionStatement	"access ( 12 , numTables * 16 , TableDirectory )"	1643:8:57514:57556	8441979	6	True				
ANR	8442169	CallExpression	"access ( 12 , numTables * 16 , TableDirectory )"		8441979	0					
ANR	8442170	Callee	access		8441979	0					
ANR	8442171	Identifier	access		8441979	0					
ANR	8442172	ArgumentList	12		8441979	1					
ANR	8442173	Argument	12		8441979	0					
ANR	8442174	PrimaryExpression	12		8441979	0					
ANR	8442175	Argument	numTables * 16		8441979	1					
ANR	8442176	MultiplicativeExpression	numTables * 16		8441979	0		*			
ANR	8442177	Identifier	numTables		8441979	0					
ANR	8442178	PrimaryExpression	16		8441979	1					
ANR	8442179	Argument	TableDirectory		8441979	2					
ANR	8442180	Identifier	TableDirectory		8441979	0					
ANR	8442181	ForStatement	for ( i = 0 ; i < numTables ; ++ i )		8441979	7					
ANR	8442182	ForInit	i = 0 ;	1644:13:57571:57576	8441979	0	True				
ANR	8442183	AssignmentExpression	i = 0		8441979	0		=			
ANR	8442184	Identifier	i		8441979	0					
ANR	8442185	PrimaryExpression	0		8441979	1					
ANR	8442186	Condition	i < numTables	1644:20:57578:57590	8441979	1	True				
ANR	8442187	RelationalExpression	i < numTables		8441979	0		<			
ANR	8442188	Identifier	i		8441979	0					
ANR	8442189	Identifier	numTables		8441979	1					
ANR	8442190	UnaryExpression	++ i	1644:35:57593:57595	8441979	2	True				
ANR	8442191	IncDec	++		8441979	0					
ANR	8442192	Identifier	i		8441979	1					
ANR	8442193	CompoundStatement		26:12:893:934	8441979	3					
ANR	8442194	IdentifierDeclStatement	const byte * tab = TableDirectory + i * 16 ;	1645:12:57612:57653	8441979	0	True				
ANR	8442195	IdentifierDecl	* tab = TableDirectory + i * 16		8441979	0					
ANR	8442196	IdentifierDeclType	const byte *		8441979	0					
ANR	8442197	Identifier	tab		8441979	1					
ANR	8442198	AssignmentExpression	* tab = TableDirectory + i * 16		8441979	2		=			
ANR	8442199	Identifier	tab		8441979	0					
ANR	8442200	AdditiveExpression	TableDirectory + i * 16		8441979	1		+			
ANR	8442201	Identifier	TableDirectory		8441979	0					
ANR	8442202	MultiplicativeExpression	i * 16		8441979	1		*			
ANR	8442203	Identifier	i		8441979	0					
ANR	8442204	PrimaryExpression	16		8441979	1					
ANR	8442205	ExpressionStatement	"dmprintf6 ( pfont -> memory , ""%c%c%c%c offset = %lu length = %lu\\n"" , tab [ 0 ] , tab [ 1 ] , tab [ 2 ] , tab [ 3 ] , ( ulong ) pl_get_uint32 ( tab + 8 ) , ( ulong ) pl_get_uint32 ( tab + 12 ) )"	1647:12:57668:57917	8441979	1	True				
ANR	8442206	CallExpression	"dmprintf6 ( pfont -> memory , ""%c%c%c%c offset = %lu length = %lu\\n"" , tab [ 0 ] , tab [ 1 ] , tab [ 2 ] , tab [ 3 ] , ( ulong ) pl_get_uint32 ( tab + 8 ) , ( ulong ) pl_get_uint32 ( tab + 12 ) )"		8441979	0					
ANR	8442207	Callee	dmprintf6		8441979	0					
ANR	8442208	Identifier	dmprintf6		8441979	0					
ANR	8442209	ArgumentList	pfont -> memory		8441979	1					
ANR	8442210	Argument	pfont -> memory		8441979	0					
ANR	8442211	PtrMemberAccess	pfont -> memory		8441979	0					
ANR	8442212	Identifier	pfont		8441979	0					
ANR	8442213	Identifier	memory		8441979	1					
ANR	8442214	Argument	"""%c%c%c%c offset = %lu length = %lu\\n"""		8441979	1					
ANR	8442215	PrimaryExpression	"""%c%c%c%c offset = %lu length = %lu\\n"""		8441979	0					
ANR	8442216	Argument	tab [ 0 ]		8441979	2					
ANR	8442217	ArrayIndexing	tab [ 0 ]		8441979	0					
ANR	8442218	Identifier	tab		8441979	0					
ANR	8442219	PrimaryExpression	0		8441979	1					
ANR	8442220	Argument	tab [ 1 ]		8441979	3					
ANR	8442221	ArrayIndexing	tab [ 1 ]		8441979	0					
ANR	8442222	Identifier	tab		8441979	0					
ANR	8442223	PrimaryExpression	1		8441979	1					
ANR	8442224	Argument	tab [ 2 ]		8441979	4					
ANR	8442225	ArrayIndexing	tab [ 2 ]		8441979	0					
ANR	8442226	Identifier	tab		8441979	0					
ANR	8442227	PrimaryExpression	2		8441979	1					
ANR	8442228	Argument	tab [ 3 ]		8441979	5					
ANR	8442229	ArrayIndexing	tab [ 3 ]		8441979	0					
ANR	8442230	Identifier	tab		8441979	0					
ANR	8442231	PrimaryExpression	3		8441979	1					
ANR	8442232	Argument	( ulong ) pl_get_uint32 ( tab + 8 )		8441979	6					
ANR	8442233	CastExpression	( ulong ) pl_get_uint32 ( tab + 8 )		8441979	0					
ANR	8442234	CastTarget	ulong		8441979	0					
ANR	8442235	CallExpression	pl_get_uint32 ( tab + 8 )		8441979	1					
ANR	8442236	Callee	pl_get_uint32		8441979	0					
ANR	8442237	Identifier	pl_get_uint32		8441979	0					
ANR	8442238	ArgumentList	tab + 8		8441979	1					
ANR	8442239	Argument	tab + 8		8441979	0					
ANR	8442240	AdditiveExpression	tab + 8		8441979	0		+			
ANR	8442241	Identifier	tab		8441979	0					
ANR	8442242	PrimaryExpression	8		8441979	1					
ANR	8442243	Argument	( ulong ) pl_get_uint32 ( tab + 12 )		8441979	7					
ANR	8442244	CastExpression	( ulong ) pl_get_uint32 ( tab + 12 )		8441979	0					
ANR	8442245	CastTarget	ulong		8441979	0					
ANR	8442246	CallExpression	pl_get_uint32 ( tab + 12 )		8441979	1					
ANR	8442247	Callee	pl_get_uint32		8441979	0					
ANR	8442248	Identifier	pl_get_uint32		8441979	0					
ANR	8442249	ArgumentList	tab + 12		8441979	1					
ANR	8442250	Argument	tab + 12		8441979	0					
ANR	8442251	AdditiveExpression	tab + 12		8441979	0		+			
ANR	8442252	Identifier	tab		8441979	0					
ANR	8442253	PrimaryExpression	12		8441979	1					
ANR	8442254	ExpressionStatement	pfont -> data . get_metrics = pl_tt_get_metrics	1656:4:57985:58028	8441979	11	True				
ANR	8442255	AssignmentExpression	pfont -> data . get_metrics = pl_tt_get_metrics		8441979	0		=			
ANR	8442256	MemberAccess	pfont -> data . get_metrics		8441979	0					
ANR	8442257	PtrMemberAccess	pfont -> data		8441979	0					
ANR	8442258	Identifier	pfont		8441979	0					
ANR	8442259	Identifier	data		8441979	1					
ANR	8442260	Identifier	get_metrics		8441979	1					
ANR	8442261	Identifier	pl_tt_get_metrics		8441979	1					
ANR	8442262	ReturnType	void		8441979	1					
ANR	8442263	Identifier	pl_tt_finish_init		8441979	2					
ANR	8442264	ParameterList	"gs_font_type42 * pfont , bool downloaded"		8441979	3					
ANR	8442265	Parameter	gs_font_type42 * pfont	1619:18:56677:56698	8441979	0	True				
ANR	8442266	ParameterType	gs_font_type42 *		8441979	0					
ANR	8442267	Identifier	pfont		8441979	1					
ANR	8442268	Parameter	bool downloaded	1619:42:56701:56715	8441979	1	True				
ANR	8442269	ParameterType	bool		8441979	0					
ANR	8442270	Identifier	downloaded		8441979	1					
ANR	8442271	CFGEntryNode	ENTRY		8441979		True				
ANR	8442272	CFGExitNode	EXIT		8441979		True				
ANR	8442273	Symbol	pfont -> FontBBox . q . y		8441979						
ANR	8442274	Symbol	pfont -> memory		8441979						
ANR	8442275	Symbol	pfont -> FontBBox . q . x		8441979						
ANR	8442276	Symbol	tt_find_table		8441979						
ANR	8442277	Symbol	pl_tt_get_outline		8441979						
ANR	8442278	Symbol	OffsetTable		8441979						
ANR	8442279	Symbol	head		8441979						
ANR	8442280	Symbol	tab		8441979						
ANR	8442281	Symbol	pl_tt_get_glyph_index		8441979						
ANR	8442282	Symbol	pl_get_int16		8441979						
ANR	8442283	Symbol	gs_debug_c		8441979						
ANR	8442284	Symbol	pfont -> data . unitsPerEm		8441979						
ANR	8442285	Symbol	pfont -> FontBBox		8441979						
ANR	8442286	Symbol	pl_get_uint16		8441979						
ANR	8442287	Symbol	NULL		8441979						
ANR	8442288	Symbol	pl_tt_get_metrics		8441979						
ANR	8442289	Symbol	pfont		8441979						
ANR	8442290	Symbol	pfont -> data		8441979						
ANR	8442291	Symbol	i		8441979						
ANR	8442292	Symbol	TableDirectory		8441979						
ANR	8442293	Symbol	pl_get_uint32		8441979						
ANR	8442294	Symbol	downloaded		8441979						
ANR	8442295	Symbol	pfont -> data . get_glyph_index		8441979						
ANR	8442296	Symbol	* pfont		8441979						
ANR	8442297	Symbol	pfont -> data . get_metrics		8441979						
ANR	8442298	Symbol	pfont -> data . get_outline		8441979						
ANR	8442299	Symbol	pfont -> FontBBox . p . x		8441979						
ANR	8442300	Symbol	upem		8441979						
ANR	8442301	Symbol	pfont -> FontBBox . p . y		8441979						
ANR	8442302	Symbol	hdata		8441979						
ANR	8442303	Symbol	pfont -> FontBBox . p		8441979						
ANR	8442304	Symbol	pfont -> FontBBox . q		8441979						
ANR	8442305	Symbol	numTables		8441979						
ANR	8442306	Symbol	* tab		8441979						
ANR	8442307	Function	pl_intelli_init_procs	1659:0:58033:58355							
ANR	8442308	FunctionDef	pl_intelli_init_procs (gs_font_base * pfont)		8442307	0					
ANR	8442309	CompoundStatement		1661:0:58082:58355	8442307	0					
ANR	8442310	ExpressionStatement	pfont -> procs . encode_char = pl_intelli_encode_char	1662:4:58088:58137	8442307	0	True				
ANR	8442311	AssignmentExpression	pfont -> procs . encode_char = pl_intelli_encode_char		8442307	0		=			
ANR	8442312	MemberAccess	pfont -> procs . encode_char		8442307	0					
ANR	8442313	PtrMemberAccess	pfont -> procs		8442307	0					
ANR	8442314	Identifier	pfont		8442307	0					
ANR	8442315	Identifier	procs		8442307	1					
ANR	8442316	Identifier	encode_char		8442307	1					
ANR	8442317	Identifier	pl_intelli_encode_char		8442307	1					
ANR	8442318	ExpressionStatement	pfont -> procs . build_char = pl_intelli_build_char	1663:4:58143:58190	8442307	1	True				
ANR	8442319	AssignmentExpression	pfont -> procs . build_char = pl_intelli_build_char		8442307	0		=			
ANR	8442320	MemberAccess	pfont -> procs . build_char		8442307	0					
ANR	8442321	PtrMemberAccess	pfont -> procs		8442307	0					
ANR	8442322	Identifier	pfont		8442307	0					
ANR	8442323	Identifier	procs		8442307	1					
ANR	8442324	Identifier	build_char		8442307	1					
ANR	8442325	Identifier	pl_intelli_build_char		8442307	1					
ANR	8442326	Statement	define	1664:1:58193:58198	8442307	2	True				
ANR	8442327	Statement	plfont	1664:8:58200:58205	8442307	3	True				
ANR	8442328	Statement	(	1664:15:58207:58207	8442307	4	True				
ANR	8442329	Statement	(	1664:16:58208:58208	8442307	5	True				
ANR	8442330	Statement	pl_font_t	1664:17:58209:58217	8442307	6	True				
ANR	8442331	Statement	*	1664:27:58219:58219	8442307	7	True				
ANR	8442332	Statement	)	1664:28:58220:58220	8442307	8	True				
ANR	8442333	Statement	pfont	1664:29:58221:58225	8442307	9	True				
ANR	8442334	Statement	->	1664:34:58226:58227	8442307	10	True				
ANR	8442335	Statement	client_data	1664:36:58228:58238	8442307	11	True				
ANR	8442336	Statement	)	1664:47:58239:58239	8442307	12	True				
ANR	8442337	ExpressionStatement	plfont -> char_width = pl_intelli_char_width	1665:4:58245:58287	8442307	13	True				
ANR	8442338	AssignmentExpression	plfont -> char_width = pl_intelli_char_width		8442307	0		=			
ANR	8442339	PtrMemberAccess	plfont -> char_width		8442307	0					
ANR	8442340	Identifier	plfont		8442307	0					
ANR	8442341	Identifier	char_width		8442307	1					
ANR	8442342	Identifier	pl_intelli_char_width		8442307	1					
ANR	8442343	ExpressionStatement	plfont -> char_metrics = pl_intelli_char_metrics	1666:4:58293:58339	8442307	14	True				
ANR	8442344	AssignmentExpression	plfont -> char_metrics = pl_intelli_char_metrics		8442307	0		=			
ANR	8442345	PtrMemberAccess	plfont -> char_metrics		8442307	0					
ANR	8442346	Identifier	plfont		8442307	0					
ANR	8442347	Identifier	char_metrics		8442307	1					
ANR	8442348	Identifier	pl_intelli_char_metrics		8442307	1					
ANR	8442349	Statement	undef	1667:1:58342:58346	8442307	15	True				
ANR	8442350	Statement	plfont	1667:7:58348:58353	8442307	16	True				
ANR	8442351	ReturnType	void		8442307	1					
ANR	8442352	Identifier	pl_intelli_init_procs		8442307	2					
ANR	8442353	ParameterList	gs_font_base * pfont		8442307	3					
ANR	8442354	Parameter	gs_font_base * pfont	1660:22:58060:58079	8442307	0	True				
ANR	8442355	ParameterType	gs_font_base *		8442307	0					
ANR	8442356	Identifier	pfont		8442307	1					
ANR	8442357	CFGEntryNode	ENTRY		8442307		True				
ANR	8442358	CFGExitNode	EXIT		8442307		True				
ANR	8442359	Symbol	pfont -> procs		8442307						
ANR	8442360	Symbol	plfont -> char_width		8442307						
ANR	8442361	Symbol	pfont		8442307						
ANR	8442362	Symbol	pfont -> procs . encode_char		8442307						
ANR	8442363	Symbol	pfont -> procs . build_char		8442307						
ANR	8442364	Symbol	plfont		8442307						
ANR	8442365	Symbol	pl_intelli_char_width		8442307						
ANR	8442366	Symbol	pl_intelli_char_metrics		8442307						
ANR	8442367	Symbol	* pfont		8442307						
ANR	8442368	Symbol	plfont -> char_metrics		8442307						
ANR	8442369	Symbol	* plfont		8442307						
ANR	8442370	Symbol	pl_intelli_build_char		8442307						
ANR	8442371	Symbol	pl_intelli_encode_char		8442307						
ANR	8442372	Function	pl_font_alloc_glyph_table	1672:0:58448:59235							
ANR	8442373	FunctionDef	"pl_font_alloc_glyph_table (pl_font_t * plfont , uint num_glyphs , gs_memory_t * mem , client_name_t cname)"		8442372	0					
ANR	8442374	CompoundStatement		1675:0:58581:59235	8442372	0					
ANR	8442375	IdentifierDeclStatement	uint size = num_glyphs + ( num_glyphs >> 2 ) + 5 ;	1676:4:58587:58633	8442372	0	True				
ANR	8442376	IdentifierDecl	size = num_glyphs + ( num_glyphs >> 2 ) + 5		8442372	0					
ANR	8442377	IdentifierDeclType	uint		8442372	0					
ANR	8442378	Identifier	size		8442372	1					
ANR	8442379	AssignmentExpression	size = num_glyphs + ( num_glyphs >> 2 ) + 5		8442372	2		=			
ANR	8442380	Identifier	size		8442372	0					
ANR	8442381	AdditiveExpression	num_glyphs + ( num_glyphs >> 2 ) + 5		8442372	1		+			
ANR	8442382	Identifier	num_glyphs		8442372	0					
ANR	8442383	AdditiveExpression	( num_glyphs >> 2 ) + 5		8442372	1		+			
ANR	8442384	ShiftExpression	num_glyphs >> 2		8442372	0		>>			
ANR	8442385	Identifier	num_glyphs		8442372	0					
ANR	8442386	PrimaryExpression	2		8442372	1					
ANR	8442387	PrimaryExpression	5		8442372	1					
ANR	8442388	IdentifierDeclStatement	"pl_font_glyph_t * glyphs = gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname ) ;"	1677:4:58639:58786	8442372	1	True				
ANR	8442389	IdentifierDecl	"* glyphs = gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname )"		8442372	0					
ANR	8442390	IdentifierDeclType	pl_font_glyph_t *		8442372	0					
ANR	8442391	Identifier	glyphs		8442372	1					
ANR	8442392	AssignmentExpression	"* glyphs = gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname )"		8442372	2		=			
ANR	8442393	Identifier	glyphs		8442372	0					
ANR	8442394	CallExpression	"gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname )"		8442372	1					
ANR	8442395	Callee	gs_alloc_struct_array		8442372	0					
ANR	8442396	Identifier	gs_alloc_struct_array		8442372	0					
ANR	8442397	ArgumentList	mem		8442372	1					
ANR	8442398	Argument	mem		8442372	0					
ANR	8442399	Identifier	mem		8442372	0					
ANR	8442400	Argument	size		8442372	1					
ANR	8442401	Identifier	size		8442372	0					
ANR	8442402	Argument	pl_font_glyph_t		8442372	2					
ANR	8442403	Identifier	pl_font_glyph_t		8442372	0					
ANR	8442404	Argument	& st_pl_font_glyph_element		8442372	3					
ANR	8442405	UnaryOperationExpression	& st_pl_font_glyph_element		8442372	0					
ANR	8442406	UnaryOperator	&		8442372	0					
ANR	8442407	Identifier	st_pl_font_glyph_element		8442372	1					
ANR	8442408	Argument	cname		8442372	4					
ANR	8442409	Identifier	cname		8442372	0					
ANR	8442410	IfStatement	if ( glyphs == 0 )		8442372	2					
ANR	8442411	Condition	glyphs == 0	1681:8:58797:58807	8442372	0	True				
ANR	8442412	EqualityExpression	glyphs == 0		8442372	0		==			
ANR	8442413	Identifier	glyphs		8442372	0					
ANR	8442414	PrimaryExpression	0		8442372	1					
ANR	8442415	ExpressionStatement	return_error ( gs_error_VMerror )	1682:8:58818:58848	8442372	1	True				
ANR	8442416	CallExpression	return_error ( gs_error_VMerror )		8442372	0					
ANR	8442417	Callee	return_error		8442372	0					
ANR	8442418	Identifier	return_error		8442372	0					
ANR	8442419	ArgumentList	gs_error_VMerror		8442372	1					
ANR	8442420	Argument	gs_error_VMerror		8442372	0					
ANR	8442421	Identifier	gs_error_VMerror		8442372	0					
ANR	8442422	CompoundStatement		10:8:282:288	8442372	3					
ANR	8442423	IdentifierDeclStatement	uint i ;	1684:8:58864:58870	8442372	0	True				
ANR	8442424	IdentifierDecl	i		8442372	0					
ANR	8442425	IdentifierDeclType	uint		8442372	0					
ANR	8442426	Identifier	i		8442372	1					
ANR	8442427	ForStatement	for ( i = 0 ; i < size ; ++ i )		8442372	1					
ANR	8442428	ForInit	i = 0 ;	1686:13:58886:58891	8442372	0	True				
ANR	8442429	AssignmentExpression	i = 0		8442372	0		=			
ANR	8442430	Identifier	i		8442372	0					
ANR	8442431	PrimaryExpression	0		8442372	1					
ANR	8442432	Condition	i < size	1686:20:58893:58900	8442372	1	True				
ANR	8442433	RelationalExpression	i < size		8442372	0		<			
ANR	8442434	Identifier	i		8442372	0					
ANR	8442435	Identifier	size		8442372	1					
ANR	8442436	UnaryExpression	++ i	1686:30:58903:58905	8442372	2	True				
ANR	8442437	IncDec	++		8442372	0					
ANR	8442438	Identifier	i		8442372	1					
ANR	8442439	ExpressionStatement	"glyphs [ i ] . glyph = 0 , glyphs [ i ] . data = 0"	1687:12:58920:58959	8442372	3	True				
ANR	8442440	Expression	"glyphs [ i ] . glyph = 0 , glyphs [ i ] . data = 0"		8442372	0					
ANR	8442441	AssignmentExpression	glyphs [ i ] . glyph = 0		8442372	0		=			
ANR	8442442	MemberAccess	glyphs [ i ] . glyph		8442372	0					
ANR	8442443	ArrayIndexing	glyphs [ i ]		8442372	0					
ANR	8442444	Identifier	glyphs		8442372	0					
ANR	8442445	Identifier	i		8442372	1					
ANR	8442446	Identifier	glyph		8442372	1					
ANR	8442447	PrimaryExpression	0		8442372	1					
ANR	8442448	AssignmentExpression	glyphs [ i ] . data = 0		8442372	1		=			
ANR	8442449	MemberAccess	glyphs [ i ] . data		8442372	0					
ANR	8442450	ArrayIndexing	glyphs [ i ]		8442372	0					
ANR	8442451	Identifier	glyphs		8442372	0					
ANR	8442452	Identifier	i		8442372	1					
ANR	8442453	Identifier	data		8442372	1					
ANR	8442454	PrimaryExpression	0		8442372	1					
ANR	8442455	ExpressionStatement	plfont -> glyphs . table = glyphs	1689:4:58971:59000	8442372	4	True				
ANR	8442456	AssignmentExpression	plfont -> glyphs . table = glyphs		8442372	0		=			
ANR	8442457	MemberAccess	plfont -> glyphs . table		8442372	0					
ANR	8442458	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442459	Identifier	plfont		8442372	0					
ANR	8442460	Identifier	glyphs		8442372	1					
ANR	8442461	Identifier	table		8442372	1					
ANR	8442462	Identifier	glyphs		8442372	1					
ANR	8442463	ExpressionStatement	plfont -> glyphs . used = 0	1690:4:59006:59029	8442372	5	True				
ANR	8442464	AssignmentExpression	plfont -> glyphs . used = 0		8442372	0		=			
ANR	8442465	MemberAccess	plfont -> glyphs . used		8442372	0					
ANR	8442466	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442467	Identifier	plfont		8442372	0					
ANR	8442468	Identifier	glyphs		8442372	1					
ANR	8442469	Identifier	used		8442372	1					
ANR	8442470	PrimaryExpression	0		8442372	1					
ANR	8442471	ExpressionStatement	plfont -> glyphs . limit = num_glyphs	1691:4:59035:59068	8442372	6	True				
ANR	8442472	AssignmentExpression	plfont -> glyphs . limit = num_glyphs		8442372	0		=			
ANR	8442473	MemberAccess	plfont -> glyphs . limit		8442372	0					
ANR	8442474	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442475	Identifier	plfont		8442372	0					
ANR	8442476	Identifier	glyphs		8442372	1					
ANR	8442477	Identifier	limit		8442372	1					
ANR	8442478	Identifier	num_glyphs		8442372	1					
ANR	8442479	ExpressionStatement	plfont -> glyphs . size = size	1692:4:59074:59100	8442372	7	True				
ANR	8442480	AssignmentExpression	plfont -> glyphs . size = size		8442372	0		=			
ANR	8442481	MemberAccess	plfont -> glyphs . size		8442372	0					
ANR	8442482	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442483	Identifier	plfont		8442372	0					
ANR	8442484	Identifier	glyphs		8442372	1					
ANR	8442485	Identifier	size		8442372	1					
ANR	8442486	Identifier	size		8442372	1					
ANR	8442487	ExpressionStatement	plfont -> glyphs . skip = size * 2 / 3	1693:4:59106:59140	8442372	8	True				
ANR	8442488	AssignmentExpression	plfont -> glyphs . skip = size * 2 / 3		8442372	0		=			
ANR	8442489	MemberAccess	plfont -> glyphs . skip		8442372	0					
ANR	8442490	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442491	Identifier	plfont		8442372	0					
ANR	8442492	Identifier	glyphs		8442372	1					
ANR	8442493	Identifier	skip		8442372	1					
ANR	8442494	MultiplicativeExpression	size * 2 / 3		8442372	1		*			
ANR	8442495	Identifier	size		8442372	0					
ANR	8442496	MultiplicativeExpression	2 / 3		8442372	1		/			
ANR	8442497	PrimaryExpression	2		8442372	0					
ANR	8442498	PrimaryExpression	3		8442372	1					
ANR	8442499	WhileStatement	"while ( igcd ( plfont -> glyphs . skip , size ) > 1 )"		8442372	9					
ANR	8442500	Condition	"igcd ( plfont -> glyphs . skip , size ) > 1"	1694:11:59153:59187	8442372	0	True				
ANR	8442501	RelationalExpression	"igcd ( plfont -> glyphs . skip , size ) > 1"		8442372	0		>			
ANR	8442502	CallExpression	"igcd ( plfont -> glyphs . skip , size )"		8442372	0					
ANR	8442503	Callee	igcd		8442372	0					
ANR	8442504	Identifier	igcd		8442372	0					
ANR	8442505	ArgumentList	plfont -> glyphs . skip		8442372	1					
ANR	8442506	Argument	plfont -> glyphs . skip		8442372	0					
ANR	8442507	MemberAccess	plfont -> glyphs . skip		8442372	0					
ANR	8442508	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442509	Identifier	plfont		8442372	0					
ANR	8442510	Identifier	glyphs		8442372	1					
ANR	8442511	Identifier	skip		8442372	1					
ANR	8442512	Argument	size		8442372	1					
ANR	8442513	Identifier	size		8442372	0					
ANR	8442514	PrimaryExpression	1		8442372	1					
ANR	8442515	ExpressionStatement	plfont -> glyphs . skip ++	1695:8:59198:59219	8442372	1	True				
ANR	8442516	PostIncDecOperationExpression	plfont -> glyphs . skip ++		8442372	0					
ANR	8442517	MemberAccess	plfont -> glyphs . skip		8442372	0					
ANR	8442518	PtrMemberAccess	plfont -> glyphs		8442372	0					
ANR	8442519	Identifier	plfont		8442372	0					
ANR	8442520	Identifier	glyphs		8442372	1					
ANR	8442521	Identifier	skip		8442372	1					
ANR	8442522	IncDec	++		8442372	1					
ANR	8442523	ReturnStatement	return 0 ;	1696:4:59225:59233	8442372	10	True				
ANR	8442524	PrimaryExpression	0		8442372	0					
ANR	8442525	ReturnType	int		8442372	1					
ANR	8442526	Identifier	pl_font_alloc_glyph_table		8442372	2					
ANR	8442527	ParameterList	"pl_font_t * plfont , uint num_glyphs , gs_memory_t * mem , client_name_t cname"		8442372	3					
ANR	8442528	Parameter	pl_font_t * plfont	1673:26:58478:58495	8442372	0	True				
ANR	8442529	ParameterType	pl_font_t *		8442372	0					
ANR	8442530	Identifier	plfont		8442372	1					
ANR	8442531	Parameter	uint num_glyphs	1673:46:58498:58512	8442372	1	True				
ANR	8442532	ParameterType	uint		8442372	0					
ANR	8442533	Identifier	num_glyphs		8442372	1					
ANR	8442534	Parameter	gs_memory_t * mem	1674:26:58541:58557	8442372	2	True				
ANR	8442535	ParameterType	gs_memory_t *		8442372	0					
ANR	8442536	Identifier	mem		8442372	1					
ANR	8442537	Parameter	client_name_t cname	1674:45:58560:58578	8442372	3	True				
ANR	8442538	ParameterType	client_name_t		8442372	0					
ANR	8442539	Identifier	cname		8442372	1					
ANR	8442540	CFGEntryNode	ENTRY		8442372		True				
ANR	8442541	CFGExitNode	EXIT		8442372		True				
ANR	8442542	Symbol	plfont -> glyphs . table		8442372						
ANR	8442543	Symbol	plfont -> glyphs . limit		8442372						
ANR	8442544	Symbol	cname		8442372						
ANR	8442545	Symbol	i		8442372						
ANR	8442546	Symbol	glyphs		8442372						
ANR	8442547	Symbol	plfont		8442372						
ANR	8442548	Symbol	plfont -> glyphs . size		8442372						
ANR	8442549	Symbol	& st_pl_font_glyph_element		8442372						
ANR	8442550	Symbol	plfont -> glyphs . used		8442372						
ANR	8442551	Symbol	igcd		8442372						
ANR	8442552	Symbol	glyphs [ i ] . glyph		8442372						
ANR	8442553	Symbol	plfont -> glyphs . skip		8442372						
ANR	8442554	Symbol	gs_error_VMerror		8442372						
ANR	8442555	Symbol	num_glyphs		8442372						
ANR	8442556	Symbol	* i		8442372						
ANR	8442557	Symbol	mem		8442372						
ANR	8442558	Symbol	size		8442372						
ANR	8442559	Symbol	plfont -> glyphs		8442372						
ANR	8442560	Symbol	* plfont		8442372						
ANR	8442561	Symbol	* glyphs		8442372						
ANR	8442562	Symbol	glyphs [ i ] . data		8442372						
ANR	8442563	Symbol	gs_alloc_struct_array		8442372						
ANR	8442564	Symbol	pl_font_glyph_t		8442372						
ANR	8442565	Function	expand_glyph_table	1700:0:59268:59921							
ANR	8442566	FunctionDef	"expand_glyph_table (pl_font_t * plfont , gs_memory_t * mem)"		8442565	0					
ANR	8442567	CompoundStatement		1702:0:59337:59921	8442565	0					
ANR	8442568	IdentifierDeclStatement	pl_glyph_table_t old_table ;	1703:4:59343:59369	8442565	0	True				
ANR	8442569	IdentifierDecl	old_table		8442565	0					
ANR	8442570	IdentifierDeclType	pl_glyph_table_t		8442565	0					
ANR	8442571	Identifier	old_table		8442565	1					
ANR	8442572	IdentifierDeclStatement	int code ;	1704:4:59375:59383	8442565	1	True				
ANR	8442573	IdentifierDecl	code		8442565	0					
ANR	8442574	IdentifierDeclType	int		8442565	0					
ANR	8442575	Identifier	code		8442565	1					
ANR	8442576	IdentifierDeclStatement	uint i ;	1705:4:59389:59395	8442565	2	True				
ANR	8442577	IdentifierDecl	i		8442565	0					
ANR	8442578	IdentifierDeclType	uint		8442565	0					
ANR	8442579	Identifier	i		8442565	1					
ANR	8442580	ExpressionStatement	old_table = plfont -> glyphs	1707:4:59402:59428	8442565	3	True				
ANR	8442581	AssignmentExpression	old_table = plfont -> glyphs		8442565	0		=			
ANR	8442582	Identifier	old_table		8442565	0					
ANR	8442583	PtrMemberAccess	plfont -> glyphs		8442565	1					
ANR	8442584	Identifier	plfont		8442565	0					
ANR	8442585	Identifier	glyphs		8442565	1					
ANR	8442586	ExpressionStatement	"code = pl_font_alloc_glyph_table ( plfont , old_table . size , mem , ""expand_glyph_table(new table)"" )"	1708:4:59434:59565	8442565	4	True				
ANR	8442587	AssignmentExpression	"code = pl_font_alloc_glyph_table ( plfont , old_table . size , mem , ""expand_glyph_table(new table)"" )"		8442565	0		=			
ANR	8442588	Identifier	code		8442565	0					
ANR	8442589	CallExpression	"pl_font_alloc_glyph_table ( plfont , old_table . size , mem , ""expand_glyph_table(new table)"" )"		8442565	1					
ANR	8442590	Callee	pl_font_alloc_glyph_table		8442565	0					
ANR	8442591	Identifier	pl_font_alloc_glyph_table		8442565	0					
ANR	8442592	ArgumentList	plfont		8442565	1					
ANR	8442593	Argument	plfont		8442565	0					
ANR	8442594	Identifier	plfont		8442565	0					
ANR	8442595	Argument	old_table . size		8442565	1					
ANR	8442596	MemberAccess	old_table . size		8442565	0					
ANR	8442597	Identifier	old_table		8442565	0					
ANR	8442598	Identifier	size		8442565	1					
ANR	8442599	Argument	mem		8442565	2					
ANR	8442600	Identifier	mem		8442565	0					
ANR	8442601	Argument	"""expand_glyph_table(new table)"""		8442565	3					
ANR	8442602	PrimaryExpression	"""expand_glyph_table(new table)"""		8442565	0					
ANR	8442603	IfStatement	if ( code < 0 )		8442565	5					
ANR	8442604	Condition	code < 0	1710:8:59575:59582	8442565	0	True				
ANR	8442605	RelationalExpression	code < 0		8442565	0		<			
ANR	8442606	Identifier	code		8442565	0					
ANR	8442607	PrimaryExpression	0		8442565	1					
ANR	8442608	ReturnStatement	return code ;	1711:8:59593:59604	8442565	1	True				
ANR	8442609	Identifier	code		8442565	0					
ANR	8442610	ForStatement	for ( i = 0 ; i < old_table . size ; ++ i )		8442565	6					
ANR	8442611	ForInit	i = 0 ;	1712:9:59615:59620	8442565	0	True				
ANR	8442612	AssignmentExpression	i = 0		8442565	0		=			
ANR	8442613	Identifier	i		8442565	0					
ANR	8442614	PrimaryExpression	0		8442565	1					
ANR	8442615	Condition	i < old_table . size	1712:16:59622:59639	8442565	1	True				
ANR	8442616	RelationalExpression	i < old_table . size		8442565	0		<			
ANR	8442617	Identifier	i		8442565	0					
ANR	8442618	MemberAccess	old_table . size		8442565	1					
ANR	8442619	Identifier	old_table		8442565	0					
ANR	8442620	Identifier	size		8442565	1					
ANR	8442621	UnaryExpression	++ i	1712:36:59642:59644	8442565	2	True				
ANR	8442622	IncDec	++		8442565	0					
ANR	8442623	Identifier	i		8442565	1					
ANR	8442624	IfStatement	if ( old_table . table [ i ] . data )		8442565	3					
ANR	8442625	Condition	old_table . table [ i ] . data	1713:12:59659:59681	8442565	0	True				
ANR	8442626	MemberAccess	old_table . table [ i ] . data		8442565	0					
ANR	8442627	ArrayIndexing	old_table . table [ i ]		8442565	0					
ANR	8442628	MemberAccess	old_table . table		8442565	0					
ANR	8442629	Identifier	old_table		8442565	0					
ANR	8442630	Identifier	table		8442565	1					
ANR	8442631	Identifier	i		8442565	1					
ANR	8442632	Identifier	data		8442565	1					
ANR	8442633	ExpressionStatement	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph ) = old_table . table [ i ]"	1714:12:59696:59788	8442565	1	True				
ANR	8442634	AssignmentExpression	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph ) = old_table . table [ i ]"		8442565	0		=			
ANR	8442635	UnaryOperationExpression	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph )"		8442565	0					
ANR	8442636	UnaryOperator	*		8442565	0					
ANR	8442637	CallExpression	"pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph )"		8442565	1					
ANR	8442638	Callee	pl_font_lookup_glyph		8442565	0					
ANR	8442639	Identifier	pl_font_lookup_glyph		8442565	0					
ANR	8442640	ArgumentList	plfont		8442565	1					
ANR	8442641	Argument	plfont		8442565	0					
ANR	8442642	Identifier	plfont		8442565	0					
ANR	8442643	Argument	old_table . table [ i ] . glyph		8442565	1					
ANR	8442644	MemberAccess	old_table . table [ i ] . glyph		8442565	0					
ANR	8442645	ArrayIndexing	old_table . table [ i ]		8442565	0					
ANR	8442646	MemberAccess	old_table . table		8442565	0					
ANR	8442647	Identifier	old_table		8442565	0					
ANR	8442648	Identifier	table		8442565	1					
ANR	8442649	Identifier	i		8442565	1					
ANR	8442650	Identifier	glyph		8442565	1					
ANR	8442651	ArrayIndexing	old_table . table [ i ]		8442565	1					
ANR	8442652	MemberAccess	old_table . table		8442565	0					
ANR	8442653	Identifier	old_table		8442565	0					
ANR	8442654	Identifier	table		8442565	1					
ANR	8442655	Identifier	i		8442565	1					
ANR	8442656	ExpressionStatement	"gs_free_object ( mem , old_table . table , ""expand_glyph_table(old table)"" )"	1716:4:59794:59863	8442565	7	True				
ANR	8442657	CallExpression	"gs_free_object ( mem , old_table . table , ""expand_glyph_table(old table)"" )"		8442565	0					
ANR	8442658	Callee	gs_free_object		8442565	0					
ANR	8442659	Identifier	gs_free_object		8442565	0					
ANR	8442660	ArgumentList	mem		8442565	1					
ANR	8442661	Argument	mem		8442565	0					
ANR	8442662	Identifier	mem		8442565	0					
ANR	8442663	Argument	old_table . table		8442565	1					
ANR	8442664	MemberAccess	old_table . table		8442565	0					
ANR	8442665	Identifier	old_table		8442565	0					
ANR	8442666	Identifier	table		8442565	1					
ANR	8442667	Argument	"""expand_glyph_table(old table)"""		8442565	2					
ANR	8442668	PrimaryExpression	"""expand_glyph_table(old table)"""		8442565	0					
ANR	8442669	ExpressionStatement	plfont -> glyphs . used = old_table . used	1717:4:59869:59905	8442565	8	True				
ANR	8442670	AssignmentExpression	plfont -> glyphs . used = old_table . used		8442565	0		=			
ANR	8442671	MemberAccess	plfont -> glyphs . used		8442565	0					
ANR	8442672	PtrMemberAccess	plfont -> glyphs		8442565	0					
ANR	8442673	Identifier	plfont		8442565	0					
ANR	8442674	Identifier	glyphs		8442565	1					
ANR	8442675	Identifier	used		8442565	1					
ANR	8442676	MemberAccess	old_table . used		8442565	1					
ANR	8442677	Identifier	old_table		8442565	0					
ANR	8442678	Identifier	used		8442565	1					
ANR	8442679	ReturnStatement	return 0 ;	1718:4:59911:59919	8442565	9	True				
ANR	8442680	PrimaryExpression	0		8442565	0					
ANR	8442681	ReturnType	static int		8442565	1					
ANR	8442682	Identifier	expand_glyph_table		8442565	2					
ANR	8442683	ParameterList	"pl_font_t * plfont , gs_memory_t * mem"		8442565	3					
ANR	8442684	Parameter	pl_font_t * plfont	1701:19:59298:59315	8442565	0	True				
ANR	8442685	ParameterType	pl_font_t *		8442565	0					
ANR	8442686	Identifier	plfont		8442565	1					
ANR	8442687	Parameter	gs_memory_t * mem	1701:39:59318:59334	8442565	1	True				
ANR	8442688	ParameterType	gs_memory_t *		8442565	0					
ANR	8442689	Identifier	mem		8442565	1					
ANR	8442690	CFGEntryNode	ENTRY		8442565		True				
ANR	8442691	CFGExitNode	EXIT		8442565		True				
ANR	8442692	Symbol	code		8442565						
ANR	8442693	Symbol	old_table . table [ i ] . data		8442565						
ANR	8442694	Symbol	pl_font_lookup_glyph		8442565						
ANR	8442695	Symbol	old_table . table		8442565						
ANR	8442696	Symbol	i		8442565						
ANR	8442697	Symbol	plfont		8442565						
ANR	8442698	Symbol	* pl_font_lookup_glyph		8442565						
ANR	8442699	Symbol	plfont -> glyphs . used		8442565						
ANR	8442700	Symbol	old_table		8442565						
ANR	8442701	Symbol	old_table . used		8442565						
ANR	8442702	Symbol	* i		8442565						
ANR	8442703	Symbol	mem		8442565						
ANR	8442704	Symbol	* old_table . table		8442565						
ANR	8442705	Symbol	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph )"		8442565						
ANR	8442706	Symbol	old_table . size		8442565						
ANR	8442707	Symbol	old_table . table [ i ] . glyph		8442565						
ANR	8442708	Symbol	plfont -> glyphs		8442565						
ANR	8442709	Symbol	* plfont		8442565						
ANR	8442710	Symbol	* old_table		8442565						
ANR	8442711	Symbol	pl_font_alloc_glyph_table		8442565						
ANR	8442712	Function	pl_tt_alloc_char_glyphs	1722:0:59982:60807							
ANR	8442713	FunctionDef	"pl_tt_alloc_char_glyphs (pl_font_t * plfont , uint num_chars , gs_memory_t * mem , client_name_t cname)"		8442712	0					
ANR	8442714	CompoundStatement		1725:0:60110:60807	8442712	0					
ANR	8442715	IdentifierDeclStatement	uint size = num_chars + ( num_chars >> 2 ) + 5 ;	1726:4:60116:60160	8442712	0	True				
ANR	8442716	IdentifierDecl	size = num_chars + ( num_chars >> 2 ) + 5		8442712	0					
ANR	8442717	IdentifierDeclType	uint		8442712	0					
ANR	8442718	Identifier	size		8442712	1					
ANR	8442719	AssignmentExpression	size = num_chars + ( num_chars >> 2 ) + 5		8442712	2		=			
ANR	8442720	Identifier	size		8442712	0					
ANR	8442721	AdditiveExpression	num_chars + ( num_chars >> 2 ) + 5		8442712	1		+			
ANR	8442722	Identifier	num_chars		8442712	0					
ANR	8442723	AdditiveExpression	( num_chars >> 2 ) + 5		8442712	1		+			
ANR	8442724	ShiftExpression	num_chars >> 2		8442712	0		>>			
ANR	8442725	Identifier	num_chars		8442712	0					
ANR	8442726	PrimaryExpression	2		8442712	1					
ANR	8442727	PrimaryExpression	5		8442712	1					
ANR	8442728	IdentifierDeclStatement	"pl_tt_char_glyph_t * char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname ) ;"	1727:4:60166:60296	8442712	1	True				
ANR	8442729	IdentifierDecl	"* char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8442712	0					
ANR	8442730	IdentifierDeclType	pl_tt_char_glyph_t *		8442712	0					
ANR	8442731	Identifier	char_glyphs		8442712	1					
ANR	8442732	AssignmentExpression	"* char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8442712	2		=			
ANR	8442733	Identifier	char_glyphs		8442712	0					
ANR	8442734	CastExpression	"( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8442712	1					
ANR	8442735	CastTarget	pl_tt_char_glyph_t *		8442712	0					
ANR	8442736	CallExpression	"gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8442712	1					
ANR	8442737	Callee	gs_alloc_byte_array		8442712	0					
ANR	8442738	Identifier	gs_alloc_byte_array		8442712	0					
ANR	8442739	ArgumentList	mem		8442712	1					
ANR	8442740	Argument	mem		8442712	0					
ANR	8442741	Identifier	mem		8442712	0					
ANR	8442742	Argument	size		8442712	1					
ANR	8442743	Identifier	size		8442712	0					
ANR	8442744	Argument	sizeof ( pl_tt_char_glyph_t )		8442712	2					
ANR	8442745	SizeofExpression	sizeof ( pl_tt_char_glyph_t )		8442712	0					
ANR	8442746	Sizeof	sizeof		8442712	0					
ANR	8442747	SizeofOperand	pl_tt_char_glyph_t		8442712	1					
ANR	8442748	Argument	cname		8442712	3					
ANR	8442749	Identifier	cname		8442712	0					
ANR	8442750	IfStatement	if ( char_glyphs == 0 )		8442712	2					
ANR	8442751	Condition	char_glyphs == 0	1730:8:60307:60322	8442712	0	True				
ANR	8442752	EqualityExpression	char_glyphs == 0		8442712	0		==			
ANR	8442753	Identifier	char_glyphs		8442712	0					
ANR	8442754	PrimaryExpression	0		8442712	1					
ANR	8442755	ExpressionStatement	return_error ( gs_error_VMerror )	1731:8:60333:60363	8442712	1	True				
ANR	8442756	CallExpression	return_error ( gs_error_VMerror )		8442712	0					
ANR	8442757	Callee	return_error		8442712	0					
ANR	8442758	Identifier	return_error		8442712	0					
ANR	8442759	ArgumentList	gs_error_VMerror		8442712	1					
ANR	8442760	Argument	gs_error_VMerror		8442712	0					
ANR	8442761	Identifier	gs_error_VMerror		8442712	0					
ANR	8442762	CompoundStatement		9:8:268:274	8442712	3					
ANR	8442763	IdentifierDeclStatement	uint i ;	1733:8:60379:60385	8442712	0	True				
ANR	8442764	IdentifierDecl	i		8442712	0					
ANR	8442765	IdentifierDeclType	uint		8442712	0					
ANR	8442766	Identifier	i		8442712	1					
ANR	8442767	ForStatement	for ( i = 0 ; i < size ; ++ i )		8442712	1					
ANR	8442768	ForInit	i = 0 ;	1735:13:60401:60406	8442712	0	True				
ANR	8442769	AssignmentExpression	i = 0		8442712	0		=			
ANR	8442770	Identifier	i		8442712	0					
ANR	8442771	PrimaryExpression	0		8442712	1					
ANR	8442772	Condition	i < size	1735:20:60408:60415	8442712	1	True				
ANR	8442773	RelationalExpression	i < size		8442712	0		<			
ANR	8442774	Identifier	i		8442712	0					
ANR	8442775	Identifier	size		8442712	1					
ANR	8442776	UnaryExpression	++ i	1735:30:60418:60420	8442712	2	True				
ANR	8442777	IncDec	++		8442712	0					
ANR	8442778	Identifier	i		8442712	1					
ANR	8442779	ExpressionStatement	"char_glyphs [ i ] . chr = gs_no_char , char_glyphs [ i ] . glyph = 0"	1736:12:60435:60492	8442712	3	True				
ANR	8442780	Expression	"char_glyphs [ i ] . chr = gs_no_char , char_glyphs [ i ] . glyph = 0"		8442712	0					
ANR	8442781	AssignmentExpression	char_glyphs [ i ] . chr = gs_no_char		8442712	0		=			
ANR	8442782	MemberAccess	char_glyphs [ i ] . chr		8442712	0					
ANR	8442783	ArrayIndexing	char_glyphs [ i ]		8442712	0					
ANR	8442784	Identifier	char_glyphs		8442712	0					
ANR	8442785	Identifier	i		8442712	1					
ANR	8442786	Identifier	chr		8442712	1					
ANR	8442787	Identifier	gs_no_char		8442712	1					
ANR	8442788	AssignmentExpression	char_glyphs [ i ] . glyph = 0		8442712	1		=			
ANR	8442789	MemberAccess	char_glyphs [ i ] . glyph		8442712	0					
ANR	8442790	ArrayIndexing	char_glyphs [ i ]		8442712	0					
ANR	8442791	Identifier	char_glyphs		8442712	0					
ANR	8442792	Identifier	i		8442712	1					
ANR	8442793	Identifier	glyph		8442712	1					
ANR	8442794	PrimaryExpression	0		8442712	1					
ANR	8442795	ExpressionStatement	plfont -> char_glyphs . table = char_glyphs	1738:4:60504:60543	8442712	4	True				
ANR	8442796	AssignmentExpression	plfont -> char_glyphs . table = char_glyphs		8442712	0		=			
ANR	8442797	MemberAccess	plfont -> char_glyphs . table		8442712	0					
ANR	8442798	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442799	Identifier	plfont		8442712	0					
ANR	8442800	Identifier	char_glyphs		8442712	1					
ANR	8442801	Identifier	table		8442712	1					
ANR	8442802	Identifier	char_glyphs		8442712	1					
ANR	8442803	ExpressionStatement	plfont -> char_glyphs . used = 0	1739:4:60549:60577	8442712	5	True				
ANR	8442804	AssignmentExpression	plfont -> char_glyphs . used = 0		8442712	0		=			
ANR	8442805	MemberAccess	plfont -> char_glyphs . used		8442712	0					
ANR	8442806	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442807	Identifier	plfont		8442712	0					
ANR	8442808	Identifier	char_glyphs		8442712	1					
ANR	8442809	Identifier	used		8442712	1					
ANR	8442810	PrimaryExpression	0		8442712	1					
ANR	8442811	ExpressionStatement	plfont -> char_glyphs . limit = num_chars	1740:4:60583:60620	8442712	6	True				
ANR	8442812	AssignmentExpression	plfont -> char_glyphs . limit = num_chars		8442712	0		=			
ANR	8442813	MemberAccess	plfont -> char_glyphs . limit		8442712	0					
ANR	8442814	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442815	Identifier	plfont		8442712	0					
ANR	8442816	Identifier	char_glyphs		8442712	1					
ANR	8442817	Identifier	limit		8442712	1					
ANR	8442818	Identifier	num_chars		8442712	1					
ANR	8442819	ExpressionStatement	plfont -> char_glyphs . size = size	1741:4:60626:60657	8442712	7	True				
ANR	8442820	AssignmentExpression	plfont -> char_glyphs . size = size		8442712	0		=			
ANR	8442821	MemberAccess	plfont -> char_glyphs . size		8442712	0					
ANR	8442822	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442823	Identifier	plfont		8442712	0					
ANR	8442824	Identifier	char_glyphs		8442712	1					
ANR	8442825	Identifier	size		8442712	1					
ANR	8442826	Identifier	size		8442712	1					
ANR	8442827	ExpressionStatement	plfont -> char_glyphs . skip = size * 2 / 3	1742:4:60663:60702	8442712	8	True				
ANR	8442828	AssignmentExpression	plfont -> char_glyphs . skip = size * 2 / 3		8442712	0		=			
ANR	8442829	MemberAccess	plfont -> char_glyphs . skip		8442712	0					
ANR	8442830	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442831	Identifier	plfont		8442712	0					
ANR	8442832	Identifier	char_glyphs		8442712	1					
ANR	8442833	Identifier	skip		8442712	1					
ANR	8442834	MultiplicativeExpression	size * 2 / 3		8442712	1		*			
ANR	8442835	Identifier	size		8442712	0					
ANR	8442836	MultiplicativeExpression	2 / 3		8442712	1		/			
ANR	8442837	PrimaryExpression	2		8442712	0					
ANR	8442838	PrimaryExpression	3		8442712	1					
ANR	8442839	WhileStatement	"while ( igcd ( plfont -> char_glyphs . skip , size ) > 1 )"		8442712	9					
ANR	8442840	Condition	"igcd ( plfont -> char_glyphs . skip , size ) > 1"	1743:11:60715:60754	8442712	0	True				
ANR	8442841	RelationalExpression	"igcd ( plfont -> char_glyphs . skip , size ) > 1"		8442712	0		>			
ANR	8442842	CallExpression	"igcd ( plfont -> char_glyphs . skip , size )"		8442712	0					
ANR	8442843	Callee	igcd		8442712	0					
ANR	8442844	Identifier	igcd		8442712	0					
ANR	8442845	ArgumentList	plfont -> char_glyphs . skip		8442712	1					
ANR	8442846	Argument	plfont -> char_glyphs . skip		8442712	0					
ANR	8442847	MemberAccess	plfont -> char_glyphs . skip		8442712	0					
ANR	8442848	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442849	Identifier	plfont		8442712	0					
ANR	8442850	Identifier	char_glyphs		8442712	1					
ANR	8442851	Identifier	skip		8442712	1					
ANR	8442852	Argument	size		8442712	1					
ANR	8442853	Identifier	size		8442712	0					
ANR	8442854	PrimaryExpression	1		8442712	1					
ANR	8442855	ExpressionStatement	plfont -> char_glyphs . skip ++	1744:8:60765:60791	8442712	1	True				
ANR	8442856	PostIncDecOperationExpression	plfont -> char_glyphs . skip ++		8442712	0					
ANR	8442857	MemberAccess	plfont -> char_glyphs . skip		8442712	0					
ANR	8442858	PtrMemberAccess	plfont -> char_glyphs		8442712	0					
ANR	8442859	Identifier	plfont		8442712	0					
ANR	8442860	Identifier	char_glyphs		8442712	1					
ANR	8442861	Identifier	skip		8442712	1					
ANR	8442862	IncDec	++		8442712	1					
ANR	8442863	ReturnStatement	return 0 ;	1745:4:60797:60805	8442712	10	True				
ANR	8442864	PrimaryExpression	0		8442712	0					
ANR	8442865	ReturnType	int		8442712	1					
ANR	8442866	Identifier	pl_tt_alloc_char_glyphs		8442712	2					
ANR	8442867	ParameterList	"pl_font_t * plfont , uint num_chars , gs_memory_t * mem , client_name_t cname"		8442712	3					
ANR	8442868	Parameter	pl_font_t * plfont	1723:24:60010:60027	8442712	0	True				
ANR	8442869	ParameterType	pl_font_t *		8442712	0					
ANR	8442870	Identifier	plfont		8442712	1					
ANR	8442871	Parameter	uint num_chars	1723:44:60030:60043	8442712	1	True				
ANR	8442872	ParameterType	uint		8442712	0					
ANR	8442873	Identifier	num_chars		8442712	1					
ANR	8442874	Parameter	gs_memory_t * mem	1723:60:60046:60062	8442712	2	True				
ANR	8442875	ParameterType	gs_memory_t *		8442712	0					
ANR	8442876	Identifier	mem		8442712	1					
ANR	8442877	Parameter	client_name_t cname	1724:24:60089:60107	8442712	3	True				
ANR	8442878	ParameterType	client_name_t		8442712	0					
ANR	8442879	Identifier	cname		8442712	1					
ANR	8442880	CFGEntryNode	ENTRY		8442712		True				
ANR	8442881	CFGExitNode	EXIT		8442712		True				
ANR	8442882	Symbol	plfont -> char_glyphs . used		8442712						
ANR	8442883	Symbol	cname		8442712						
ANR	8442884	Symbol	char_glyphs		8442712						
ANR	8442885	Symbol	plfont -> char_glyphs		8442712						
ANR	8442886	Symbol	i		8442712						
ANR	8442887	Symbol	plfont -> char_glyphs . size		8442712						
ANR	8442888	Symbol	plfont		8442712						
ANR	8442889	Symbol	plfont -> char_glyphs . skip		8442712						
ANR	8442890	Symbol	char_glyphs [ i ] . chr		8442712						
ANR	8442891	Symbol	igcd		8442712						
ANR	8442892	Symbol	gs_error_VMerror		8442712						
ANR	8442893	Symbol	* i		8442712						
ANR	8442894	Symbol	char_glyphs [ i ] . glyph		8442712						
ANR	8442895	Symbol	mem		8442712						
ANR	8442896	Symbol	size		8442712						
ANR	8442897	Symbol	* char_glyphs		8442712						
ANR	8442898	Symbol	* plfont		8442712						
ANR	8442899	Symbol	gs_no_char		8442712						
ANR	8442900	Symbol	num_chars		8442712						
ANR	8442901	Symbol	gs_alloc_byte_array		8442712						
ANR	8442902	Symbol	plfont -> char_glyphs . table		8442712						
ANR	8442903	Symbol	plfont -> char_glyphs . limit		8442712						
ANR	8442904	Function	expand_char_glyph_table	1749:0:60857:61537							
ANR	8442905	FunctionDef	"expand_char_glyph_table (pl_font_t * plfont , gs_memory_t * mem)"		8442904	0					
ANR	8442906	CompoundStatement		1751:0:60931:61537	8442904	0					
ANR	8442907	IdentifierDeclStatement	pl_tt_char_glyph_table_t old_table ;	1752:4:60937:60971	8442904	0	True				
ANR	8442908	IdentifierDecl	old_table		8442904	0					
ANR	8442909	IdentifierDeclType	pl_tt_char_glyph_table_t		8442904	0					
ANR	8442910	Identifier	old_table		8442904	1					
ANR	8442911	IdentifierDeclStatement	int code ;	1753:4:60977:60985	8442904	1	True				
ANR	8442912	IdentifierDecl	code		8442904	0					
ANR	8442913	IdentifierDeclType	int		8442904	0					
ANR	8442914	Identifier	code		8442904	1					
ANR	8442915	IdentifierDeclStatement	uint i ;	1754:4:60991:60997	8442904	2	True				
ANR	8442916	IdentifierDecl	i		8442904	0					
ANR	8442917	IdentifierDeclType	uint		8442904	0					
ANR	8442918	Identifier	i		8442904	1					
ANR	8442919	ExpressionStatement	old_table = plfont -> char_glyphs	1756:4:61004:61035	8442904	3	True				
ANR	8442920	AssignmentExpression	old_table = plfont -> char_glyphs		8442904	0		=			
ANR	8442921	Identifier	old_table		8442904	0					
ANR	8442922	PtrMemberAccess	plfont -> char_glyphs		8442904	1					
ANR	8442923	Identifier	plfont		8442904	0					
ANR	8442924	Identifier	char_glyphs		8442904	1					
ANR	8442925	ExpressionStatement	"code = pl_tt_alloc_char_glyphs ( plfont , old_table . size , mem , ""expand_char_glyphs(new table)"" )"	1757:4:61041:61168	8442904	4	True				
ANR	8442926	AssignmentExpression	"code = pl_tt_alloc_char_glyphs ( plfont , old_table . size , mem , ""expand_char_glyphs(new table)"" )"		8442904	0		=			
ANR	8442927	Identifier	code		8442904	0					
ANR	8442928	CallExpression	"pl_tt_alloc_char_glyphs ( plfont , old_table . size , mem , ""expand_char_glyphs(new table)"" )"		8442904	1					
ANR	8442929	Callee	pl_tt_alloc_char_glyphs		8442904	0					
ANR	8442930	Identifier	pl_tt_alloc_char_glyphs		8442904	0					
ANR	8442931	ArgumentList	plfont		8442904	1					
ANR	8442932	Argument	plfont		8442904	0					
ANR	8442933	Identifier	plfont		8442904	0					
ANR	8442934	Argument	old_table . size		8442904	1					
ANR	8442935	MemberAccess	old_table . size		8442904	0					
ANR	8442936	Identifier	old_table		8442904	0					
ANR	8442937	Identifier	size		8442904	1					
ANR	8442938	Argument	mem		8442904	2					
ANR	8442939	Identifier	mem		8442904	0					
ANR	8442940	Argument	"""expand_char_glyphs(new table)"""		8442904	3					
ANR	8442941	PrimaryExpression	"""expand_char_glyphs(new table)"""		8442904	0					
ANR	8442942	IfStatement	if ( code < 0 )		8442904	5					
ANR	8442943	Condition	code < 0	1759:8:61178:61185	8442904	0	True				
ANR	8442944	RelationalExpression	code < 0		8442904	0		<			
ANR	8442945	Identifier	code		8442904	0					
ANR	8442946	PrimaryExpression	0		8442904	1					
ANR	8442947	ReturnStatement	return code ;	1760:8:61196:61207	8442904	1	True				
ANR	8442948	Identifier	code		8442904	0					
ANR	8442949	ForStatement	for ( i = 0 ; i < old_table . size ; ++ i )		8442904	6					
ANR	8442950	ForInit	i = 0 ;	1761:9:61218:61223	8442904	0	True				
ANR	8442951	AssignmentExpression	i = 0		8442904	0		=			
ANR	8442952	Identifier	i		8442904	0					
ANR	8442953	PrimaryExpression	0		8442904	1					
ANR	8442954	Condition	i < old_table . size	1761:16:61225:61242	8442904	1	True				
ANR	8442955	RelationalExpression	i < old_table . size		8442904	0		<			
ANR	8442956	Identifier	i		8442904	0					
ANR	8442957	MemberAccess	old_table . size		8442904	1					
ANR	8442958	Identifier	old_table		8442904	0					
ANR	8442959	Identifier	size		8442904	1					
ANR	8442960	UnaryExpression	++ i	1761:36:61245:61247	8442904	2	True				
ANR	8442961	IncDec	++		8442904	0					
ANR	8442962	Identifier	i		8442904	1					
ANR	8442963	IfStatement	if ( old_table . table [ i ] . chr != gs_no_char )		8442904	3					
ANR	8442964	Condition	old_table . table [ i ] . chr != gs_no_char	1762:12:61262:61297	8442904	0	True				
ANR	8442965	EqualityExpression	old_table . table [ i ] . chr != gs_no_char		8442904	0		!=			
ANR	8442966	MemberAccess	old_table . table [ i ] . chr		8442904	0					
ANR	8442967	ArrayIndexing	old_table . table [ i ]		8442904	0					
ANR	8442968	MemberAccess	old_table . table		8442904	0					
ANR	8442969	Identifier	old_table		8442904	0					
ANR	8442970	Identifier	table		8442904	1					
ANR	8442971	Identifier	i		8442904	1					
ANR	8442972	Identifier	chr		8442904	1					
ANR	8442973	Identifier	gs_no_char		8442904	1					
ANR	8442974	ExpressionStatement	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr ) = old_table . table [ i ]"	1763:12:61312:61399	8442904	1	True				
ANR	8442975	AssignmentExpression	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr ) = old_table . table [ i ]"		8442904	0		=			
ANR	8442976	UnaryOperationExpression	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr )"		8442904	0					
ANR	8442977	UnaryOperator	*		8442904	0					
ANR	8442978	CallExpression	"pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr )"		8442904	1					
ANR	8442979	Callee	pl_tt_lookup_char		8442904	0					
ANR	8442980	Identifier	pl_tt_lookup_char		8442904	0					
ANR	8442981	ArgumentList	plfont		8442904	1					
ANR	8442982	Argument	plfont		8442904	0					
ANR	8442983	Identifier	plfont		8442904	0					
ANR	8442984	Argument	old_table . table [ i ] . chr		8442904	1					
ANR	8442985	MemberAccess	old_table . table [ i ] . chr		8442904	0					
ANR	8442986	ArrayIndexing	old_table . table [ i ]		8442904	0					
ANR	8442987	MemberAccess	old_table . table		8442904	0					
ANR	8442988	Identifier	old_table		8442904	0					
ANR	8442989	Identifier	table		8442904	1					
ANR	8442990	Identifier	i		8442904	1					
ANR	8442991	Identifier	chr		8442904	1					
ANR	8442992	ArrayIndexing	old_table . table [ i ]		8442904	1					
ANR	8442993	MemberAccess	old_table . table		8442904	0					
ANR	8442994	Identifier	old_table		8442904	0					
ANR	8442995	Identifier	table		8442904	1					
ANR	8442996	Identifier	i		8442904	1					
ANR	8442997	ExpressionStatement	"gs_free_object ( mem , old_table . table , ""expand_char_glyphs(old table)"" )"	1765:4:61405:61474	8442904	7	True				
ANR	8442998	CallExpression	"gs_free_object ( mem , old_table . table , ""expand_char_glyphs(old table)"" )"		8442904	0					
ANR	8442999	Callee	gs_free_object		8442904	0					
ANR	8443000	Identifier	gs_free_object		8442904	0					
ANR	8443001	ArgumentList	mem		8442904	1					
ANR	8443002	Argument	mem		8442904	0					
ANR	8443003	Identifier	mem		8442904	0					
ANR	8443004	Argument	old_table . table		8442904	1					
ANR	8443005	MemberAccess	old_table . table		8442904	0					
ANR	8443006	Identifier	old_table		8442904	0					
ANR	8443007	Identifier	table		8442904	1					
ANR	8443008	Argument	"""expand_char_glyphs(old table)"""		8442904	2					
ANR	8443009	PrimaryExpression	"""expand_char_glyphs(old table)"""		8442904	0					
ANR	8443010	ExpressionStatement	plfont -> char_glyphs . used = old_table . used	1766:4:61480:61521	8442904	8	True				
ANR	8443011	AssignmentExpression	plfont -> char_glyphs . used = old_table . used		8442904	0		=			
ANR	8443012	MemberAccess	plfont -> char_glyphs . used		8442904	0					
ANR	8443013	PtrMemberAccess	plfont -> char_glyphs		8442904	0					
ANR	8443014	Identifier	plfont		8442904	0					
ANR	8443015	Identifier	char_glyphs		8442904	1					
ANR	8443016	Identifier	used		8442904	1					
ANR	8443017	MemberAccess	old_table . used		8442904	1					
ANR	8443018	Identifier	old_table		8442904	0					
ANR	8443019	Identifier	used		8442904	1					
ANR	8443020	ReturnStatement	return 0 ;	1767:4:61527:61535	8442904	9	True				
ANR	8443021	PrimaryExpression	0		8442904	0					
ANR	8443022	ReturnType	static int		8442904	1					
ANR	8443023	Identifier	expand_char_glyph_table		8442904	2					
ANR	8443024	ParameterList	"pl_font_t * plfont , gs_memory_t * mem"		8442904	3					
ANR	8443025	Parameter	pl_font_t * plfont	1750:24:60892:60909	8442904	0	True				
ANR	8443026	ParameterType	pl_font_t *		8442904	0					
ANR	8443027	Identifier	plfont		8442904	1					
ANR	8443028	Parameter	gs_memory_t * mem	1750:44:60912:60928	8442904	1	True				
ANR	8443029	ParameterType	gs_memory_t *		8442904	0					
ANR	8443030	Identifier	mem		8442904	1					
ANR	8443031	CFGEntryNode	ENTRY		8442904		True				
ANR	8443032	CFGExitNode	EXIT		8442904		True				
ANR	8443033	Symbol	plfont -> char_glyphs . used		8442904						
ANR	8443034	Symbol	code		8442904						
ANR	8443035	Symbol	old_table . table [ i ] . chr		8442904						
ANR	8443036	Symbol	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr )"		8442904						
ANR	8443037	Symbol	plfont -> char_glyphs		8442904						
ANR	8443038	Symbol	old_table . table		8442904						
ANR	8443039	Symbol	i		8442904						
ANR	8443040	Symbol	* pl_tt_lookup_char		8442904						
ANR	8443041	Symbol	plfont		8442904						
ANR	8443042	Symbol	pl_tt_lookup_char		8442904						
ANR	8443043	Symbol	old_table		8442904						
ANR	8443044	Symbol	old_table . used		8442904						
ANR	8443045	Symbol	* i		8442904						
ANR	8443046	Symbol	mem		8442904						
ANR	8443047	Symbol	pl_tt_alloc_char_glyphs		8442904						
ANR	8443048	Symbol	* old_table . table		8442904						
ANR	8443049	Symbol	old_table . size		8442904						
ANR	8443050	Symbol	* plfont		8442904						
ANR	8443051	Symbol	* old_table		8442904						
ANR	8443052	Symbol	gs_no_char		8442904						
ANR	8443053	ClassDef	font_glyph_s	1771:8:61610:61685							
ANR	8443054	DeclStmt									
ANR	8443055	Decl							gs_font	gs_font *	font
ANR	8443056	DeclStmt									
ANR	8443057	Decl							gs_glyph	gs_glyph	glyph
ANR	8443058	DeclStmt									
ANR	8443059	Decl							font_glyph_s	font_glyph_s	font_glyph_t
ANR	8443060	Function	match_font_glyph	1777:0:61688:61879							
ANR	8443061	FunctionDef	"match_font_glyph (const gs_memory_t * mem , cached_char * cc , void * vpfg)"		8443060	0					
ANR	8443062	CompoundStatement		1779:0:61772:61879	8443060	0					
ANR	8443063	IdentifierDeclStatement	const font_glyph_t * pfg = vpfg ;	1780:4:61778:61808	8443060	0	True				
ANR	8443064	IdentifierDecl	* pfg = vpfg		8443060	0					
ANR	8443065	IdentifierDeclType	const font_glyph_t *		8443060	0					
ANR	8443066	Identifier	pfg		8443060	1					
ANR	8443067	AssignmentExpression	* pfg = vpfg		8443060	2		=			
ANR	8443068	Identifier	vpfg		8443060	0					
ANR	8443069	Identifier	vpfg		8443060	1					
ANR	8443070	ReturnStatement	return ( cc -> pair -> font == pfg -> font && cc -> code == pfg -> glyph ) ;	1782:4:61815:61877	8443060	1	True				
ANR	8443071	AndExpression	cc -> pair -> font == pfg -> font && cc -> code == pfg -> glyph		8443060	0		&&			
ANR	8443072	EqualityExpression	cc -> pair -> font == pfg -> font		8443060	0		==			
ANR	8443073	PtrMemberAccess	cc -> pair -> font		8443060	0					
ANR	8443074	PtrMemberAccess	cc -> pair		8443060	0					
ANR	8443075	Identifier	cc		8443060	0					
ANR	8443076	Identifier	pair		8443060	1					
ANR	8443077	Identifier	font		8443060	1					
ANR	8443078	PtrMemberAccess	pfg -> font		8443060	1					
ANR	8443079	Identifier	pfg		8443060	0					
ANR	8443080	Identifier	font		8443060	1					
ANR	8443081	EqualityExpression	cc -> code == pfg -> glyph		8443060	1		==			
ANR	8443082	PtrMemberAccess	cc -> code		8443060	0					
ANR	8443083	Identifier	cc		8443060	0					
ANR	8443084	Identifier	code		8443060	1					
ANR	8443085	PtrMemberAccess	pfg -> glyph		8443060	1					
ANR	8443086	Identifier	pfg		8443060	0					
ANR	8443087	Identifier	glyph		8443060	1					
ANR	8443088	ReturnType	static bool		8443060	1					
ANR	8443089	Identifier	match_font_glyph		8443060	2					
ANR	8443090	ParameterList	"const gs_memory_t * mem , cached_char * cc , void * vpfg"		8443060	3					
ANR	8443091	Parameter	const gs_memory_t * mem	1778:17:61717:61739	8443060	0	True				
ANR	8443092	ParameterType	const gs_memory_t *		8443060	0					
ANR	8443093	Identifier	mem		8443060	1					
ANR	8443094	Parameter	cached_char * cc	1778:42:61742:61757	8443060	1	True				
ANR	8443095	ParameterType	cached_char *		8443060	0					
ANR	8443096	Identifier	cc		8443060	1					
ANR	8443097	Parameter	void * vpfg	1778:60:61760:61769	8443060	2	True				
ANR	8443098	ParameterType	void *		8443060	0					
ANR	8443099	Identifier	vpfg		8443060	1					
ANR	8443100	CFGEntryNode	ENTRY		8443060		True				
ANR	8443101	CFGExitNode	EXIT		8443060		True				
ANR	8443102	Symbol	cc		8443060						
ANR	8443103	Symbol	* cc		8443060						
ANR	8443104	Symbol	* cc -> pair		8443060						
ANR	8443105	Symbol	cc -> code		8443060						
ANR	8443106	Symbol	vpfg		8443060						
ANR	8443107	Symbol	* * cc		8443060						
ANR	8443108	Symbol	pfg -> glyph		8443060						
ANR	8443109	Symbol	pfg		8443060						
ANR	8443110	Symbol	cc -> pair -> font		8443060						
ANR	8443111	Symbol	mem		8443060						
ANR	8443112	Symbol	cc -> pair		8443060						
ANR	8443113	Symbol	pfg -> font		8443060						
ANR	8443114	Symbol	* pfg		8443060						
ANR	8443115	Function	pl_font_add_glyph	1784:0:61881:64408							
ANR	8443116	FunctionDef	"pl_font_add_glyph (pl_font_t * plfont , gs_glyph glyph , const byte * cdata , const int cdata_len)"		8443115	0					
ANR	8443117	CompoundStatement		1786:0:61980:64408	8443115	0					
ANR	8443118	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	1787:4:61986:62016	8443115	0	True				
ANR	8443119	IdentifierDecl	* pfont = plfont -> pfont		8443115	0					
ANR	8443120	IdentifierDeclType	gs_font *		8443115	0					
ANR	8443121	Identifier	pfont		8443115	1					
ANR	8443122	AssignmentExpression	* pfont = plfont -> pfont		8443115	2		=			
ANR	8443123	Identifier	pfont		8443115	0					
ANR	8443124	PtrMemberAccess	plfont -> pfont		8443115	1					
ANR	8443125	Identifier	plfont		8443115	0					
ANR	8443126	Identifier	pfont		8443115	1					
ANR	8443127	IdentifierDeclStatement	gs_glyph key = glyph ;	1788:4:62022:62042	8443115	1	True				
ANR	8443128	IdentifierDecl	key = glyph		8443115	0					
ANR	8443129	IdentifierDeclType	gs_glyph		8443115	0					
ANR	8443130	Identifier	key		8443115	1					
ANR	8443131	AssignmentExpression	key = glyph		8443115	2		=			
ANR	8443132	Identifier	glyph		8443115	0					
ANR	8443133	Identifier	glyph		8443115	1					
ANR	8443134	IdentifierDeclStatement	pl_tt_char_glyph_t * ptcg = 0 ;	1789:4:62048:62076	8443115	2	True				
ANR	8443135	IdentifierDecl	* ptcg = 0		8443115	0					
ANR	8443136	IdentifierDeclType	pl_tt_char_glyph_t *		8443115	0					
ANR	8443137	Identifier	ptcg		8443115	1					
ANR	8443138	AssignmentExpression	* ptcg = 0		8443115	2		=			
ANR	8443139	Identifier	ptcg		8443115	0					
ANR	8443140	PrimaryExpression	0		8443115	1					
ANR	8443141	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	1790:4:62082:62102	8443115	3	True				
ANR	8443142	IdentifierDecl	* pfg		8443115	0					
ANR	8443143	IdentifierDeclType	pl_font_glyph_t *		8443115	0					
ANR	8443144	Identifier	pfg		8443115	1					
ANR	8443145	Label	tcg :	1798:2:62404:62407	8443115	4	True				
ANR	8443146	Identifier	tcg		8443115	0					
ANR	8443147	IfStatement	if ( plfont -> char_glyphs . table )		8443115	5					
ANR	8443148	Condition	plfont -> char_glyphs . table	1798:10:62412:62436	8443115	0	True				
ANR	8443149	MemberAccess	plfont -> char_glyphs . table		8443115	0					
ANR	8443150	PtrMemberAccess	plfont -> char_glyphs		8443115	0					
ANR	8443151	Identifier	plfont		8443115	0					
ANR	8443152	Identifier	char_glyphs		8443115	1					
ANR	8443153	Identifier	table		8443115	1					
ANR	8443154	CompoundStatement		13:37:458:458	8443115	1					
ANR	8443155	ExpressionStatement	"ptcg = pl_tt_lookup_char ( plfont , key )"	1799:8:62449:62486	8443115	0	True				
ANR	8443156	AssignmentExpression	"ptcg = pl_tt_lookup_char ( plfont , key )"		8443115	0		=			
ANR	8443157	Identifier	ptcg		8443115	0					
ANR	8443158	CallExpression	"pl_tt_lookup_char ( plfont , key )"		8443115	1					
ANR	8443159	Callee	pl_tt_lookup_char		8443115	0					
ANR	8443160	Identifier	pl_tt_lookup_char		8443115	0					
ANR	8443161	ArgumentList	plfont		8443115	1					
ANR	8443162	Argument	plfont		8443115	0					
ANR	8443163	Identifier	plfont		8443115	0					
ANR	8443164	Argument	key		8443115	1					
ANR	8443165	Identifier	key		8443115	0					
ANR	8443166	IfStatement	if ( ptcg -> chr == gs_no_char && plfont -> char_glyphs . used >= plfont -> char_glyphs . limit )		8443115	1					
ANR	8443167	Condition	ptcg -> chr == gs_no_char && plfont -> char_glyphs . used >= plfont -> char_glyphs . limit	1800:12:62500:62579	8443115	0	True				
ANR	8443168	AndExpression	ptcg -> chr == gs_no_char && plfont -> char_glyphs . used >= plfont -> char_glyphs . limit		8443115	0		&&			
ANR	8443169	EqualityExpression	ptcg -> chr == gs_no_char		8443115	0		==			
ANR	8443170	PtrMemberAccess	ptcg -> chr		8443115	0					
ANR	8443171	Identifier	ptcg		8443115	0					
ANR	8443172	Identifier	chr		8443115	1					
ANR	8443173	Identifier	gs_no_char		8443115	1					
ANR	8443174	RelationalExpression	plfont -> char_glyphs . used >= plfont -> char_glyphs . limit		8443115	1		>=			
ANR	8443175	MemberAccess	plfont -> char_glyphs . used		8443115	0					
ANR	8443176	PtrMemberAccess	plfont -> char_glyphs		8443115	0					
ANR	8443177	Identifier	plfont		8443115	0					
ANR	8443178	Identifier	char_glyphs		8443115	1					
ANR	8443179	Identifier	used		8443115	1					
ANR	8443180	MemberAccess	plfont -> char_glyphs . limit		8443115	1					
ANR	8443181	PtrMemberAccess	plfont -> char_glyphs		8443115	0					
ANR	8443182	Identifier	plfont		8443115	0					
ANR	8443183	Identifier	char_glyphs		8443115	1					
ANR	8443184	Identifier	limit		8443115	1					
ANR	8443185	CompoundStatement		16:12:654:711	8443115	1					
ANR	8443186	IdentifierDeclStatement	"int code = expand_char_glyph_table ( plfont , pfont -> memory ) ;"	1801:12:62635:62692	8443115	0	True				
ANR	8443187	IdentifierDecl	"code = expand_char_glyph_table ( plfont , pfont -> memory )"		8443115	0					
ANR	8443188	IdentifierDeclType	int		8443115	0					
ANR	8443189	Identifier	code		8443115	1					
ANR	8443190	AssignmentExpression	"code = expand_char_glyph_table ( plfont , pfont -> memory )"		8443115	2		=			
ANR	8443191	Identifier	code		8443115	0					
ANR	8443192	CallExpression	"expand_char_glyph_table ( plfont , pfont -> memory )"		8443115	1					
ANR	8443193	Callee	expand_char_glyph_table		8443115	0					
ANR	8443194	Identifier	expand_char_glyph_table		8443115	0					
ANR	8443195	ArgumentList	plfont		8443115	1					
ANR	8443196	Argument	plfont		8443115	0					
ANR	8443197	Identifier	plfont		8443115	0					
ANR	8443198	Argument	pfont -> memory		8443115	1					
ANR	8443199	PtrMemberAccess	pfont -> memory		8443115	0					
ANR	8443200	Identifier	pfont		8443115	0					
ANR	8443201	Identifier	memory		8443115	1					
ANR	8443202	IfStatement	if ( code < 0 )		8443115	1					
ANR	8443203	Condition	code < 0	1803:16:62711:62718	8443115	0	True				
ANR	8443204	RelationalExpression	code < 0		8443115	0		<			
ANR	8443205	Identifier	code		8443115	0					
ANR	8443206	PrimaryExpression	0		8443115	1					
ANR	8443207	ReturnStatement	return code ;	1804:16:62737:62748	8443115	1	True				
ANR	8443208	Identifier	code		8443115	0					
ANR	8443209	GotoStatement	goto tcg ;	1805:12:62762:62770	8443115	2	True				
ANR	8443210	Identifier	tcg		8443115	0					
ANR	8443211	IfStatement	if ( cdata [ 0 ] == 1 )		8443115	2					
ANR	8443212	Condition	cdata [ 0 ] == 1	1808:12:62845:62857	8443115	0	True				
ANR	8443213	EqualityExpression	cdata [ 0 ] == 1		8443115	0		==			
ANR	8443214	ArrayIndexing	cdata [ 0 ]		8443115	0					
ANR	8443215	Identifier	cdata		8443115	0					
ANR	8443216	PrimaryExpression	0		8443115	1					
ANR	8443217	PrimaryExpression	1		8443115	1					
ANR	8443218	ExpressionStatement	key = pl_get_uint16 ( cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) ) )	1811:12:62987:63144	8443115	1	True				
ANR	8443219	AssignmentExpression	key = pl_get_uint16 ( cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) ) )		8443115	0		=			
ANR	8443220	Identifier	key		8443115	0					
ANR	8443221	CallExpression	pl_get_uint16 ( cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) ) )		8443115	1					
ANR	8443222	Callee	pl_get_uint16		8443115	0					
ANR	8443223	Identifier	pl_get_uint16		8443115	0					
ANR	8443224	ArgumentList	cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) )		8443115	1					
ANR	8443225	Argument	cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) )		8443115	0					
ANR	8443226	AdditiveExpression	cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) )		8443115	0		+			
ANR	8443227	Identifier	cdata		8443115	0					
ANR	8443228	ConditionalExpression	( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 )		8443115	1					
ANR	8443229	Condition	cdata [ 1 ] == 0		8443115	0					
ANR	8443230	EqualityExpression	cdata [ 1 ] == 0		8443115	0		==			
ANR	8443231	ArrayIndexing	cdata [ 1 ]		8443115	0					
ANR	8443232	Identifier	cdata		8443115	0					
ANR	8443233	PrimaryExpression	1		8443115	1					
ANR	8443234	PrimaryExpression	0		8443115	1					
ANR	8443235	PrimaryExpression	4		8443115	1					
ANR	8443236	ConditionalExpression	( cdata [ 1 ] == 1 ) ? 8 : 10		8443115	2					
ANR	8443237	Condition	cdata [ 1 ] == 1		8443115	0					
ANR	8443238	EqualityExpression	cdata [ 1 ] == 1		8443115	0		==			
ANR	8443239	ArrayIndexing	cdata [ 1 ]		8443115	0					
ANR	8443240	Identifier	cdata		8443115	0					
ANR	8443241	PrimaryExpression	1		8443115	1					
ANR	8443242	PrimaryExpression	1		8443115	1					
ANR	8443243	PrimaryExpression	8		8443115	1					
ANR	8443244	PrimaryExpression	10		8443115	2					
ANR	8443245	ElseStatement	else		8443115	0					
ANR	8443246	ExpressionStatement	key = pl_get_uint16 ( cdata + cdata [ 2 ] + 4 )	1817:12:63212:63253	8443115	0	True				
ANR	8443247	AssignmentExpression	key = pl_get_uint16 ( cdata + cdata [ 2 ] + 4 )		8443115	0		=			
ANR	8443248	Identifier	key		8443115	0					
ANR	8443249	CallExpression	pl_get_uint16 ( cdata + cdata [ 2 ] + 4 )		8443115	1					
ANR	8443250	Callee	pl_get_uint16		8443115	0					
ANR	8443251	Identifier	pl_get_uint16		8443115	0					
ANR	8443252	ArgumentList	cdata + cdata [ 2 ] + 4		8443115	1					
ANR	8443253	Argument	cdata + cdata [ 2 ] + 4		8443115	0					
ANR	8443254	AdditiveExpression	cdata + cdata [ 2 ] + 4		8443115	0		+			
ANR	8443255	Identifier	cdata		8443115	0					
ANR	8443256	AdditiveExpression	cdata [ 2 ] + 4		8443115	1		+			
ANR	8443257	ArrayIndexing	cdata [ 2 ]		8443115	0					
ANR	8443258	Identifier	cdata		8443115	0					
ANR	8443259	PrimaryExpression	2		8443115	1					
ANR	8443260	PrimaryExpression	4		8443115	1					
ANR	8443261	Label	fg :	1819:2:63263:63265	8443115	6	True				
ANR	8443262	Identifier	fg		8443115	0					
ANR	8443263	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , key )"	1819:5:63266:63305	8443115	7	True				
ANR	8443264	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , key )"		8443115	0		=			
ANR	8443265	Identifier	pfg		8443115	0					
ANR	8443266	CallExpression	"pl_font_lookup_glyph ( plfont , key )"		8443115	1					
ANR	8443267	Callee	pl_font_lookup_glyph		8443115	0					
ANR	8443268	Identifier	pl_font_lookup_glyph		8443115	0					
ANR	8443269	ArgumentList	plfont		8443115	1					
ANR	8443270	Argument	plfont		8443115	0					
ANR	8443271	Identifier	plfont		8443115	0					
ANR	8443272	Argument	key		8443115	1					
ANR	8443273	Identifier	key		8443115	0					
ANR	8443274	IfStatement	if ( pfg -> data != 0 )		8443115	8					
ANR	8443275	Condition	pfg -> data != 0	1820:8:63315:63328	8443115	0	True				
ANR	8443276	EqualityExpression	pfg -> data != 0		8443115	0		!=			
ANR	8443277	PtrMemberAccess	pfg -> data		8443115	0					
ANR	8443278	Identifier	pfg		8443115	0					
ANR	8443279	Identifier	data		8443115	1					
ANR	8443280	PrimaryExpression	0		8443115	1					
ANR	8443281	CompoundStatement		36:8:1427:1448	8443115	1					
ANR	8443282	IdentifierDeclStatement	font_glyph_t match_fg ;	1821:8:63408:63429	8443115	0	True				
ANR	8443283	IdentifierDecl	match_fg		8443115	0					
ANR	8443284	IdentifierDeclType	font_glyph_t		8443115	0					
ANR	8443285	Identifier	match_fg		8443115	1					
ANR	8443286	ExpressionStatement	match_fg . font = pfont	1823:8:63440:63461	8443115	1	True				
ANR	8443287	AssignmentExpression	match_fg . font = pfont		8443115	0		=			
ANR	8443288	MemberAccess	match_fg . font		8443115	0					
ANR	8443289	Identifier	match_fg		8443115	0					
ANR	8443290	Identifier	font		8443115	1					
ANR	8443291	Identifier	pfont		8443115	1					
ANR	8443292	ExpressionStatement	match_fg . glyph = key	1824:8:63471:63491	8443115	2	True				
ANR	8443293	AssignmentExpression	match_fg . glyph = key		8443115	0		=			
ANR	8443294	MemberAccess	match_fg . glyph		8443115	0					
ANR	8443295	Identifier	match_fg		8443115	0					
ANR	8443296	Identifier	glyph		8443115	1					
ANR	8443297	Identifier	key		8443115	1					
ANR	8443298	ExpressionStatement	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"	1825:8:63501:63611	8443115	3	True				
ANR	8443299	CallExpression	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"		8443115	0					
ANR	8443300	Callee	gx_purge_selected_cached_chars		8443115	0					
ANR	8443301	Identifier	gx_purge_selected_cached_chars		8443115	0					
ANR	8443302	ArgumentList	pfont -> dir		8443115	1					
ANR	8443303	Argument	pfont -> dir		8443115	0					
ANR	8443304	PtrMemberAccess	pfont -> dir		8443115	0					
ANR	8443305	Identifier	pfont		8443115	0					
ANR	8443306	Identifier	dir		8443115	1					
ANR	8443307	Argument	match_font_glyph		8443115	1					
ANR	8443308	Identifier	match_font_glyph		8443115	0					
ANR	8443309	Argument	& match_fg		8443115	2					
ANR	8443310	UnaryOperationExpression	& match_fg		8443115	0					
ANR	8443311	UnaryOperator	&		8443115	0					
ANR	8443312	Identifier	match_fg		8443115	1					
ANR	8443313	IfStatement	if ( plfont -> data_are_permanent )		8443115	4					
ANR	8443314	Condition	plfont -> data_are_permanent	1828:12:63697:63722	8443115	0	True				
ANR	8443315	PtrMemberAccess	plfont -> data_are_permanent		8443115	0					
ANR	8443316	Identifier	plfont		8443115	0					
ANR	8443317	Identifier	data_are_permanent		8443115	1					
ANR	8443318	ReturnStatement	return 0 ;	1829:12:63737:63745	8443115	1	True				
ANR	8443319	PrimaryExpression	0		8443115	0					
ANR	8443320	ExpressionStatement	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_add_glyph(old data)"" )"	1830:8:63755:63857	8443115	5	True				
ANR	8443321	CallExpression	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_add_glyph(old data)"" )"		8443115	0					
ANR	8443322	Callee	gs_free_object		8443115	0					
ANR	8443323	Identifier	gs_free_object		8443115	0					
ANR	8443324	ArgumentList	pfont -> memory		8443115	1					
ANR	8443325	Argument	pfont -> memory		8443115	0					
ANR	8443326	PtrMemberAccess	pfont -> memory		8443115	0					
ANR	8443327	Identifier	pfont		8443115	0					
ANR	8443328	Identifier	memory		8443115	1					
ANR	8443329	Argument	( void * ) pfg -> data		8443115	1					
ANR	8443330	CastExpression	( void * ) pfg -> data		8443115	0					
ANR	8443331	CastTarget	void *		8443115	0					
ANR	8443332	PtrMemberAccess	pfg -> data		8443115	1					
ANR	8443333	Identifier	pfg		8443115	0					
ANR	8443334	Identifier	data		8443115	1					
ANR	8443335	Argument	"""pl_font_add_glyph(old data)"""		8443115	2					
ANR	8443336	PrimaryExpression	"""pl_font_add_glyph(old data)"""		8443115	0					
ANR	8443337	ElseStatement	else		8443115	0					
ANR	8443338	CompoundStatement		47:11:1889:1889	8443115	0					
ANR	8443339	IfStatement	if ( plfont -> glyphs . used >= plfont -> glyphs . limit )		8443115	0					
ANR	8443340	Condition	plfont -> glyphs . used >= plfont -> glyphs . limit	1833:12:63884:63926	8443115	0	True				
ANR	8443341	RelationalExpression	plfont -> glyphs . used >= plfont -> glyphs . limit		8443115	0		>=			
ANR	8443342	MemberAccess	plfont -> glyphs . used		8443115	0					
ANR	8443343	PtrMemberAccess	plfont -> glyphs		8443115	0					
ANR	8443344	Identifier	plfont		8443115	0					
ANR	8443345	Identifier	glyphs		8443115	1					
ANR	8443346	Identifier	used		8443115	1					
ANR	8443347	MemberAccess	plfont -> glyphs . limit		8443115	1					
ANR	8443348	PtrMemberAccess	plfont -> glyphs		8443115	0					
ANR	8443349	Identifier	plfont		8443115	0					
ANR	8443350	Identifier	glyphs		8443115	1					
ANR	8443351	Identifier	limit		8443115	1					
ANR	8443352	CompoundStatement		49:12:2006:2058	8443115	1					
ANR	8443353	IdentifierDeclStatement	"int code = expand_glyph_table ( plfont , pfont -> memory ) ;"	1834:12:63987:64039	8443115	0	True				
ANR	8443354	IdentifierDecl	"code = expand_glyph_table ( plfont , pfont -> memory )"		8443115	0					
ANR	8443355	IdentifierDeclType	int		8443115	0					
ANR	8443356	Identifier	code		8443115	1					
ANR	8443357	AssignmentExpression	"code = expand_glyph_table ( plfont , pfont -> memory )"		8443115	2		=			
ANR	8443358	Identifier	code		8443115	0					
ANR	8443359	CallExpression	"expand_glyph_table ( plfont , pfont -> memory )"		8443115	1					
ANR	8443360	Callee	expand_glyph_table		8443115	0					
ANR	8443361	Identifier	expand_glyph_table		8443115	0					
ANR	8443362	ArgumentList	plfont		8443115	1					
ANR	8443363	Argument	plfont		8443115	0					
ANR	8443364	Identifier	plfont		8443115	0					
ANR	8443365	Argument	pfont -> memory		8443115	1					
ANR	8443366	PtrMemberAccess	pfont -> memory		8443115	0					
ANR	8443367	Identifier	pfont		8443115	0					
ANR	8443368	Identifier	memory		8443115	1					
ANR	8443369	IfStatement	if ( code < 0 )		8443115	1					
ANR	8443370	Condition	code < 0	1836:16:64058:64065	8443115	0	True				
ANR	8443371	RelationalExpression	code < 0		8443115	0		<			
ANR	8443372	Identifier	code		8443115	0					
ANR	8443373	PrimaryExpression	0		8443115	1					
ANR	8443374	ReturnStatement	return code ;	1837:16:64084:64095	8443115	1	True				
ANR	8443375	Identifier	code		8443115	0					
ANR	8443376	GotoStatement	goto fg ;	1838:12:64109:64116	8443115	2	True				
ANR	8443377	Identifier	fg		8443115	0					
ANR	8443378	ExpressionStatement	plfont -> glyphs . used ++	1840:8:64136:64157	8443115	1	True				
ANR	8443379	PostIncDecOperationExpression	plfont -> glyphs . used ++		8443115	0					
ANR	8443380	MemberAccess	plfont -> glyphs . used		8443115	0					
ANR	8443381	PtrMemberAccess	plfont -> glyphs		8443115	0					
ANR	8443382	Identifier	plfont		8443115	0					
ANR	8443383	Identifier	glyphs		8443115	1					
ANR	8443384	Identifier	used		8443115	1					
ANR	8443385	IncDec	++		8443115	1					
ANR	8443386	IfStatement	if ( ptcg )		8443115	9					
ANR	8443387	Condition	ptcg	1842:8:64173:64176	8443115	0	True				
ANR	8443388	Identifier	ptcg		8443115	0					
ANR	8443389	CompoundStatement		57:14:2198:2198	8443115	1					
ANR	8443390	IfStatement	if ( ptcg -> chr == gs_no_char )		8443115	0					
ANR	8443391	Condition	ptcg -> chr == gs_no_char	1843:12:64193:64215	8443115	0	True				
ANR	8443392	EqualityExpression	ptcg -> chr == gs_no_char		8443115	0		==			
ANR	8443393	PtrMemberAccess	ptcg -> chr		8443115	0					
ANR	8443394	Identifier	ptcg		8443115	0					
ANR	8443395	Identifier	chr		8443115	1					
ANR	8443396	Identifier	gs_no_char		8443115	1					
ANR	8443397	ExpressionStatement	plfont -> char_glyphs . used ++	1844:12:64230:64256	8443115	1	True				
ANR	8443398	PostIncDecOperationExpression	plfont -> char_glyphs . used ++		8443115	0					
ANR	8443399	MemberAccess	plfont -> char_glyphs . used		8443115	0					
ANR	8443400	PtrMemberAccess	plfont -> char_glyphs		8443115	0					
ANR	8443401	Identifier	plfont		8443115	0					
ANR	8443402	Identifier	char_glyphs		8443115	1					
ANR	8443403	Identifier	used		8443115	1					
ANR	8443404	IncDec	++		8443115	1					
ANR	8443405	ExpressionStatement	ptcg -> chr = glyph	1845:8:64266:64283	8443115	1	True				
ANR	8443406	AssignmentExpression	ptcg -> chr = glyph		8443115	0		=			
ANR	8443407	PtrMemberAccess	ptcg -> chr		8443115	0					
ANR	8443408	Identifier	ptcg		8443115	0					
ANR	8443409	Identifier	chr		8443115	1					
ANR	8443410	Identifier	glyph		8443115	1					
ANR	8443411	ExpressionStatement	ptcg -> glyph = key	1846:8:64293:64310	8443115	2	True				
ANR	8443412	AssignmentExpression	ptcg -> glyph = key		8443115	0		=			
ANR	8443413	PtrMemberAccess	ptcg -> glyph		8443115	0					
ANR	8443414	Identifier	ptcg		8443115	0					
ANR	8443415	Identifier	glyph		8443115	1					
ANR	8443416	Identifier	key		8443115	1					
ANR	8443417	ExpressionStatement	pfg -> glyph = key	1848:4:64322:64338	8443115	10	True				
ANR	8443418	AssignmentExpression	pfg -> glyph = key		8443115	0		=			
ANR	8443419	PtrMemberAccess	pfg -> glyph		8443115	0					
ANR	8443420	Identifier	pfg		8443115	0					
ANR	8443421	Identifier	glyph		8443115	1					
ANR	8443422	Identifier	key		8443115	1					
ANR	8443423	ExpressionStatement	pfg -> data = cdata	1849:4:64344:64361	8443115	11	True				
ANR	8443424	AssignmentExpression	pfg -> data = cdata		8443115	0		=			
ANR	8443425	PtrMemberAccess	pfg -> data		8443115	0					
ANR	8443426	Identifier	pfg		8443115	0					
ANR	8443427	Identifier	data		8443115	1					
ANR	8443428	Identifier	cdata		8443115	1					
ANR	8443429	ExpressionStatement	pfg -> data_len = cdata_len	1850:4:64367:64392	8443115	12	True				
ANR	8443430	AssignmentExpression	pfg -> data_len = cdata_len		8443115	0		=			
ANR	8443431	PtrMemberAccess	pfg -> data_len		8443115	0					
ANR	8443432	Identifier	pfg		8443115	0					
ANR	8443433	Identifier	data_len		8443115	1					
ANR	8443434	Identifier	cdata_len		8443115	1					
ANR	8443435	ReturnStatement	return 0 ;	1851:4:64398:64406	8443115	13	True				
ANR	8443436	PrimaryExpression	0		8443115	0					
ANR	8443437	ReturnType	int		8443115	1					
ANR	8443438	Identifier	pl_font_add_glyph		8443115	2					
ANR	8443439	ParameterList	"pl_font_t * plfont , gs_glyph glyph , const byte * cdata , const int cdata_len"		8443115	3					
ANR	8443440	Parameter	pl_font_t * plfont	1785:18:61903:61920	8443115	0	True				
ANR	8443441	ParameterType	pl_font_t *		8443115	0					
ANR	8443442	Identifier	plfont		8443115	1					
ANR	8443443	Parameter	gs_glyph glyph	1785:38:61923:61936	8443115	1	True				
ANR	8443444	ParameterType	gs_glyph		8443115	0					
ANR	8443445	Identifier	glyph		8443115	1					
ANR	8443446	Parameter	const byte * cdata	1785:54:61939:61956	8443115	2	True				
ANR	8443447	ParameterType	const byte *		8443115	0					
ANR	8443448	Identifier	cdata		8443115	1					
ANR	8443449	Parameter	const int cdata_len	1785:74:61959:61977	8443115	3	True				
ANR	8443450	ParameterType	const int		8443115	0					
ANR	8443451	Identifier	cdata_len		8443115	1					
ANR	8443452	CFGEntryNode	ENTRY		8443115		True				
ANR	8443453	CFGExitNode	EXIT		8443115		True				
ANR	8443454	Symbol	plfont -> char_glyphs . used		8443115						
ANR	8443455	Symbol	match_fg . font		8443115						
ANR	8443456	Symbol	code		8443115						
ANR	8443457	Symbol	pfont -> memory		8443115						
ANR	8443458	Symbol	pl_font_lookup_glyph		8443115						
ANR	8443459	Symbol	ptcg -> chr		8443115						
ANR	8443460	Symbol	plfont -> glyphs . limit		8443115						
ANR	8443461	Symbol	match_font_glyph		8443115						
ANR	8443462	Symbol	plfont -> char_glyphs		8443115						
ANR	8443463	Symbol	match_fg		8443115						
ANR	8443464	Symbol	plfont		8443115						
ANR	8443465	Symbol	plfont -> data_are_permanent		8443115						
ANR	8443466	Symbol	expand_glyph_table		8443115						
ANR	8443467	Symbol	plfont -> glyphs . used		8443115						
ANR	8443468	Symbol	pfg -> glyph		8443115						
ANR	8443469	Symbol	& match_fg		8443115						
ANR	8443470	Symbol	* cdata		8443115						
ANR	8443471	Symbol	ptcg -> glyph		8443115						
ANR	8443472	Symbol	gs_no_char		8443115						
ANR	8443473	Symbol	* pfg		8443115						
ANR	8443474	Symbol	pfg -> data_len		8443115						
ANR	8443475	Symbol	ptcg		8443115						
ANR	8443476	Symbol	key		8443115						
ANR	8443477	Symbol	plfont -> char_glyphs . table		8443115						
ANR	8443478	Symbol	plfont -> char_glyphs . limit		8443115						
ANR	8443479	Symbol	pl_get_uint16		8443115						
ANR	8443480	Symbol	pfont		8443115						
ANR	8443481	Symbol	match_fg . glyph		8443115						
ANR	8443482	Symbol	cdata		8443115						
ANR	8443483	Symbol	pl_tt_lookup_char		8443115						
ANR	8443484	Symbol	pfg		8443115						
ANR	8443485	Symbol	glyph		8443115						
ANR	8443486	Symbol	expand_char_glyph_table		8443115						
ANR	8443487	Symbol	* pfont		8443115						
ANR	8443488	Symbol	plfont -> pfont		8443115						
ANR	8443489	Symbol	pfont -> dir		8443115						
ANR	8443490	Symbol	* plfont		8443115						
ANR	8443491	Symbol	plfont -> glyphs		8443115						
ANR	8443492	Symbol	pfg -> data		8443115						
ANR	8443493	Symbol	cdata_len		8443115						
ANR	8443494	Symbol	* ptcg		8443115						
ANR	8443495	Function	is_composite	1854:0:64411:64500							
ANR	8443496	FunctionDef	is_composite (const byte * pgdata)		8443495	0					
ANR	8443497	CompoundStatement		1856:0:64457:64500	8443495	0					
ANR	8443498	ReturnStatement	return ( pl_get_int16 ( pgdata ) == - 1 ) ;	1857:4:64463:64498	8443495	0	True				
ANR	8443499	EqualityExpression	pl_get_int16 ( pgdata ) == - 1		8443495	0		==			
ANR	8443500	CallExpression	pl_get_int16 ( pgdata )		8443495	0					
ANR	8443501	Callee	pl_get_int16		8443495	0					
ANR	8443502	Identifier	pl_get_int16		8443495	0					
ANR	8443503	ArgumentList	pgdata		8443495	1					
ANR	8443504	Argument	pgdata		8443495	0					
ANR	8443505	Identifier	pgdata		8443495	0					
ANR	8443506	UnaryOperationExpression	- 1		8443495	1					
ANR	8443507	UnaryOperator	-		8443495	0					
ANR	8443508	PrimaryExpression	1		8443495	1					
ANR	8443509	ReturnType	static bool		8443495	1					
ANR	8443510	Identifier	is_composite		8443495	2					
ANR	8443511	ParameterList	const byte * pgdata		8443495	3					
ANR	8443512	Parameter	const byte * pgdata	1855:13:64436:64454	8443495	0	True				
ANR	8443513	ParameterType	const byte *		8443495	0					
ANR	8443514	Identifier	pgdata		8443495	1					
ANR	8443515	CFGEntryNode	ENTRY		8443495		True				
ANR	8443516	CFGExitNode	EXIT		8443495		True				
ANR	8443517	Symbol	pl_get_int16		8443495						
ANR	8443518	Symbol	pgdata		8443495						
ANR	8443519	Function	pl_font_disable_composite_metrics	1860:0:64503:66812							
ANR	8443520	FunctionDef	"pl_font_disable_composite_metrics (pl_font_t * plfont , gs_glyph glyph)"		8443519	0					
ANR	8443521	CompoundStatement		1862:0:64577:66812	8443519	0					
ANR	8443522	IdentifierDeclStatement	gs_glyph key = glyph ;	1863:4:64583:64603	8443519	0	True				
ANR	8443523	IdentifierDecl	key = glyph		8443519	0					
ANR	8443524	IdentifierDeclType	gs_glyph		8443519	0					
ANR	8443525	Identifier	key		8443519	1					
ANR	8443526	AssignmentExpression	key = glyph		8443519	2		=			
ANR	8443527	Identifier	glyph		8443519	0					
ANR	8443528	Identifier	glyph		8443519	1					
ANR	8443529	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) plfont -> pfont ;	1864:4:64609:64665	8443519	1	True				
ANR	8443530	IdentifierDecl	* pfont = ( gs_font_type42 * ) plfont -> pfont		8443519	0					
ANR	8443531	IdentifierDeclType	gs_font_type42 *		8443519	0					
ANR	8443532	Identifier	pfont		8443519	1					
ANR	8443533	AssignmentExpression	* pfont = ( gs_font_type42 * ) plfont -> pfont		8443519	2		=			
ANR	8443534	Identifier	pfont		8443519	0					
ANR	8443535	CastExpression	( gs_font_type42 * ) plfont -> pfont		8443519	1					
ANR	8443536	CastTarget	gs_font_type42 *		8443519	0					
ANR	8443537	PtrMemberAccess	plfont -> pfont		8443519	1					
ANR	8443538	Identifier	plfont		8443519	0					
ANR	8443539	Identifier	pfont		8443519	1					
ANR	8443540	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	1865:4:64671:64697	8443519	2	True				
ANR	8443541	IdentifierDecl	glyph_data		8443519	0					
ANR	8443542	IdentifierDeclType	gs_glyph_data_t		8443519	0					
ANR	8443543	Identifier	glyph_data		8443519	1					
ANR	8443544	IdentifierDeclStatement	int code ;	1866:4:64703:64711	8443519	3	True				
ANR	8443545	IdentifierDecl	code		8443519	0					
ANR	8443546	IdentifierDeclType	int		8443519	0					
ANR	8443547	Identifier	code		8443519	1					
ANR	8443548	IfStatement	if ( plfont -> char_glyphs . table )		8443519	4					
ANR	8443549	Condition	plfont -> char_glyphs . table	1872:8:64993:65017	8443519	0	True				
ANR	8443550	MemberAccess	plfont -> char_glyphs . table		8443519	0					
ANR	8443551	PtrMemberAccess	plfont -> char_glyphs		8443519	0					
ANR	8443552	Identifier	plfont		8443519	0					
ANR	8443553	Identifier	char_glyphs		8443519	1					
ANR	8443554	Identifier	table		8443519	1					
ANR	8443555	CompoundStatement		12:8:452:509	8443519	1					
ANR	8443556	IdentifierDeclStatement	"pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , key ) ;"	1873:8:65030:65087	8443519	0	True				
ANR	8443557	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8443519	0					
ANR	8443558	IdentifierDeclType	pl_tt_char_glyph_t *		8443519	0					
ANR	8443559	Identifier	ptcg		8443519	1					
ANR	8443560	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8443519	2		=			
ANR	8443561	Identifier	ptcg		8443519	0					
ANR	8443562	CallExpression	"pl_tt_lookup_char ( plfont , key )"		8443519	1					
ANR	8443563	Callee	pl_tt_lookup_char		8443519	0					
ANR	8443564	Identifier	pl_tt_lookup_char		8443519	0					
ANR	8443565	ArgumentList	plfont		8443519	1					
ANR	8443566	Argument	plfont		8443519	0					
ANR	8443567	Identifier	plfont		8443519	0					
ANR	8443568	Argument	key		8443519	1					
ANR	8443569	Identifier	key		8443519	0					
ANR	8443570	IfStatement	if ( ptcg -> chr == gs_no_char )		8443519	1					
ANR	8443571	Condition	ptcg -> chr == gs_no_char	1875:12:65102:65124	8443519	0	True				
ANR	8443572	EqualityExpression	ptcg -> chr == gs_no_char		8443519	0		==			
ANR	8443573	PtrMemberAccess	ptcg -> chr		8443519	0					
ANR	8443574	Identifier	ptcg		8443519	0					
ANR	8443575	Identifier	chr		8443519	1					
ANR	8443576	Identifier	gs_no_char		8443519	1					
ANR	8443577	ReturnStatement	return 0 ;	1876:12:65139:65147	8443519	1	True				
ANR	8443578	PrimaryExpression	0		8443519	0					
ANR	8443579	ExpressionStatement	key = ptcg -> glyph	1877:8:65157:65174	8443519	2	True				
ANR	8443580	AssignmentExpression	key = ptcg -> glyph		8443519	0		=			
ANR	8443581	Identifier	key		8443519	0					
ANR	8443582	PtrMemberAccess	ptcg -> glyph		8443519	1					
ANR	8443583	Identifier	ptcg		8443519	0					
ANR	8443584	Identifier	glyph		8443519	1					
ANR	8443585	ElseStatement	else		8443519	0					
ANR	8443586	CompoundStatement		17:11:609:609	8443519	0					
ANR	8443587	ReturnStatement	return - 1 ;	1879:8:65197:65206	8443519	0	True				
ANR	8443588	UnaryOperationExpression	- 1		8443519	0					
ANR	8443589	UnaryOperator	-		8443519	0					
ANR	8443590	PrimaryExpression	1		8443519	1					
ANR	8443591	ExpressionStatement	"code = pfont -> data . get_outline ( pfont , key , & glyph_data )"	1884:4:65330:65385	8443519	5	True				
ANR	8443592	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , key , & glyph_data )"		8443519	0		=			
ANR	8443593	Identifier	code		8443519	0					
ANR	8443594	CallExpression	"pfont -> data . get_outline ( pfont , key , & glyph_data )"		8443519	1					
ANR	8443595	Callee	pfont -> data . get_outline		8443519	0					
ANR	8443596	MemberAccess	pfont -> data . get_outline		8443519	0					
ANR	8443597	PtrMemberAccess	pfont -> data		8443519	0					
ANR	8443598	Identifier	pfont		8443519	0					
ANR	8443599	Identifier	data		8443519	1					
ANR	8443600	Identifier	get_outline		8443519	1					
ANR	8443601	ArgumentList	pfont		8443519	1					
ANR	8443602	Argument	pfont		8443519	0					
ANR	8443603	Identifier	pfont		8443519	0					
ANR	8443604	Argument	key		8443519	1					
ANR	8443605	Identifier	key		8443519	0					
ANR	8443606	Argument	& glyph_data		8443519	2					
ANR	8443607	UnaryOperationExpression	& glyph_data		8443519	0					
ANR	8443608	UnaryOperator	&		8443519	0					
ANR	8443609	Identifier	glyph_data		8443519	1					
ANR	8443610	IfStatement	if ( code < 0 )		8443519	6					
ANR	8443611	Condition	code < 0	1885:8:65395:65402	8443519	0	True				
ANR	8443612	RelationalExpression	code < 0		8443519	0		<			
ANR	8443613	Identifier	code		8443519	0					
ANR	8443614	PrimaryExpression	0		8443519	1					
ANR	8443615	ReturnStatement	return code ;	1886:8:65413:65424	8443519	1	True				
ANR	8443616	Identifier	code		8443519	0					
ANR	8443617	IfStatement	if ( glyph_data . bits . data == 0 )		8443519	7					
ANR	8443618	Condition	glyph_data . bits . data == 0	1889:8:65456:65480	8443519	0	True				
ANR	8443619	EqualityExpression	glyph_data . bits . data == 0		8443519	0		==			
ANR	8443620	MemberAccess	glyph_data . bits . data		8443519	0					
ANR	8443621	MemberAccess	glyph_data . bits		8443519	0					
ANR	8443622	Identifier	glyph_data		8443519	0					
ANR	8443623	Identifier	bits		8443519	1					
ANR	8443624	Identifier	data		8443519	1					
ANR	8443625	PrimaryExpression	0		8443519	1					
ANR	8443626	ReturnStatement	return 0 ;	1890:8:65491:65499	8443519	1	True				
ANR	8443627	PrimaryExpression	0		8443519	0					
ANR	8443628	IfStatement	if ( ! is_composite ( glyph_data . bits . data ) )		8443519	8					
ANR	8443629	Condition	! is_composite ( glyph_data . bits . data )	1896:8:65794:65828	8443519	0	True				
ANR	8443630	UnaryOperationExpression	! is_composite ( glyph_data . bits . data )		8443519	0					
ANR	8443631	UnaryOperator	!		8443519	0					
ANR	8443632	CallExpression	is_composite ( glyph_data . bits . data )		8443519	1					
ANR	8443633	Callee	is_composite		8443519	0					
ANR	8443634	Identifier	is_composite		8443519	0					
ANR	8443635	ArgumentList	glyph_data . bits . data		8443519	1					
ANR	8443636	Argument	glyph_data . bits . data		8443519	0					
ANR	8443637	MemberAccess	glyph_data . bits . data		8443519	0					
ANR	8443638	MemberAccess	glyph_data . bits		8443519	0					
ANR	8443639	Identifier	glyph_data		8443519	0					
ANR	8443640	Identifier	bits		8443519	1					
ANR	8443641	Identifier	data		8443519	1					
ANR	8443642	ReturnStatement	return 0 ;	1897:8:65839:65847	8443519	1	True				
ANR	8443643	PrimaryExpression	0		8443519	0					
ANR	8443644	CompoundStatement		43:8:1469:1526	8443519	9					
ANR	8443645	IdentifierDeclStatement	uint flags ;	1903:8:66027:66037	8443519	0	True				
ANR	8443646	IdentifierDecl	flags		8443519	0					
ANR	8443647	IdentifierDeclType	uint		8443519	0					
ANR	8443648	Identifier	flags		8443519	1					
ANR	8443649	IdentifierDeclStatement	byte * next_component = ( byte * ) glyph_data . bits . data + 10 ;	1904:8:66047:66104	8443519	1	True				
ANR	8443650	IdentifierDecl	* next_component = ( byte * ) glyph_data . bits . data + 10		8443519	0					
ANR	8443651	IdentifierDeclType	byte *		8443519	0					
ANR	8443652	Identifier	next_component		8443519	1					
ANR	8443653	AssignmentExpression	* next_component = ( byte * ) glyph_data . bits . data + 10		8443519	2		=			
ANR	8443654	Identifier	next_component		8443519	0					
ANR	8443655	AdditiveExpression	( byte * ) glyph_data . bits . data + 10		8443519	1		+			
ANR	8443656	CastExpression	( byte * ) glyph_data . bits . data		8443519	0					
ANR	8443657	CastTarget	byte *		8443519	0					
ANR	8443658	MemberAccess	glyph_data . bits . data		8443519	1					
ANR	8443659	MemberAccess	glyph_data . bits		8443519	0					
ANR	8443660	Identifier	glyph_data		8443519	0					
ANR	8443661	Identifier	bits		8443519	1					
ANR	8443662	Identifier	data		8443519	1					
ANR	8443663	PrimaryExpression	10		8443519	1					
ANR	8443664	DoStatement	do		8443519	2					
ANR	8443665	CompoundStatement		47:12:1587:1624	8443519	0					
ANR	8443666	IdentifierDeclStatement	gs_matrix_fixed mat ;	1907:12:66132:66151	8443519	0	True				
ANR	8443667	IdentifierDecl	mat		8443519	0					
ANR	8443668	IdentifierDeclType	gs_matrix_fixed		8443519	0					
ANR	8443669	Identifier	mat		8443519	1					
ANR	8443670	IdentifierDeclStatement	byte * last_component = next_component ;	1908:12:66165:66202	8443519	1	True				
ANR	8443671	IdentifierDecl	* last_component = next_component		8443519	0					
ANR	8443672	IdentifierDeclType	byte *		8443519	0					
ANR	8443673	Identifier	last_component		8443519	1					
ANR	8443674	AssignmentExpression	* last_component = next_component		8443519	2		=			
ANR	8443675	Identifier	next_component		8443519	0					
ANR	8443676	Identifier	next_component		8443519	1					
ANR	8443677	ExpressionStatement	"memset ( & mat , 0 , sizeof ( mat ) )"	1910:12:66217:66245	8443519	2	True				
ANR	8443678	CallExpression	"memset ( & mat , 0 , sizeof ( mat ) )"		8443519	0					
ANR	8443679	Callee	memset		8443519	0					
ANR	8443680	Identifier	memset		8443519	0					
ANR	8443681	ArgumentList	& mat		8443519	1					
ANR	8443682	Argument	& mat		8443519	0					
ANR	8443683	UnaryOperationExpression	& mat		8443519	0					
ANR	8443684	UnaryOperator	&		8443519	0					
ANR	8443685	Identifier	mat		8443519	1					
ANR	8443686	Argument	0		8443519	1					
ANR	8443687	PrimaryExpression	0		8443519	0					
ANR	8443688	Argument	sizeof ( mat )		8443519	2					
ANR	8443689	SizeofExpression	sizeof ( mat )		8443519	0					
ANR	8443690	Sizeof	sizeof		8443519	0					
ANR	8443691	SizeofOperand	mat		8443519	1					
ANR	8443692	ExpressionStatement	"gs_type42_parse_component ( ( const byte * * ) & next_component , & flags , & mat , NULL , ( const gs_font_type42 * ) plfont -> pfont , & mat )"	1911:12:66281:66517	8443519	3	True				
ANR	8443693	CallExpression	"gs_type42_parse_component ( ( const byte * * ) & next_component , & flags , & mat , NULL , ( const gs_font_type42 * ) plfont -> pfont , & mat )"		8443519	0					
ANR	8443694	Callee	gs_type42_parse_component		8443519	0					
ANR	8443695	Identifier	gs_type42_parse_component		8443519	0					
ANR	8443696	ArgumentList	( const byte * * ) & next_component		8443519	1					
ANR	8443697	Argument	( const byte * * ) & next_component		8443519	0					
ANR	8443698	CastExpression	( const byte * * ) & next_component		8443519	0					
ANR	8443699	CastTarget	const byte * *		8443519	0					
ANR	8443700	UnaryOperationExpression	& next_component		8443519	1					
ANR	8443701	UnaryOperator	&		8443519	0					
ANR	8443702	Identifier	next_component		8443519	1					
ANR	8443703	Argument	& flags		8443519	1					
ANR	8443704	UnaryOperationExpression	& flags		8443519	0					
ANR	8443705	UnaryOperator	&		8443519	0					
ANR	8443706	Identifier	flags		8443519	1					
ANR	8443707	Argument	& mat		8443519	2					
ANR	8443708	UnaryOperationExpression	& mat		8443519	0					
ANR	8443709	UnaryOperator	&		8443519	0					
ANR	8443710	Identifier	mat		8443519	1					
ANR	8443711	Argument	NULL		8443519	3					
ANR	8443712	Identifier	NULL		8443519	0					
ANR	8443713	Argument	( const gs_font_type42 * ) plfont -> pfont		8443519	4					
ANR	8443714	CastExpression	( const gs_font_type42 * ) plfont -> pfont		8443519	0					
ANR	8443715	CastTarget	const gs_font_type42 *		8443519	0					
ANR	8443716	PtrMemberAccess	plfont -> pfont		8443519	1					
ANR	8443717	Identifier	plfont		8443519	0					
ANR	8443718	Identifier	pfont		8443519	1					
ANR	8443719	Argument	& mat		8443519	5					
ANR	8443720	UnaryOperationExpression	& mat		8443519	0					
ANR	8443721	UnaryOperator	&		8443519	0					
ANR	8443722	Identifier	mat		8443519	1					
ANR	8443723	IfStatement	if ( flags & TT_CG_USE_MY_METRICS )		8443519	4					
ANR	8443724	Condition	flags & TT_CG_USE_MY_METRICS	1915:16:66535:66562	8443519	0	True				
ANR	8443725	BitAndExpression	flags & TT_CG_USE_MY_METRICS		8443519	0		&			
ANR	8443726	Identifier	flags		8443519	0					
ANR	8443727	Identifier	TT_CG_USE_MY_METRICS		8443519	1					
ANR	8443728	ExpressionStatement	last_component [ 0 ] &= ~ ( 1 << 1 )	1918:16:66711:66741	8443519	1	True				
ANR	8443729	AssignmentExpression	last_component [ 0 ] &= ~ ( 1 << 1 )		8443519	0		&=			
ANR	8443730	ArrayIndexing	last_component [ 0 ]		8443519	0					
ANR	8443731	Identifier	last_component		8443519	0					
ANR	8443732	PrimaryExpression	0		8443519	1					
ANR	8443733	UnaryOperationExpression	~ ( 1 << 1 )		8443519	1					
ANR	8443734	UnaryOperator	~		8443519	0					
ANR	8443735	ShiftExpression	1 << 1		8443519	1		<<			
ANR	8443736	PrimaryExpression	1		8443519	0					
ANR	8443737	PrimaryExpression	1		8443519	1					
ANR	8443738	Condition	flags & TT_CG_MORE_COMPONENTS	1919:17:66760:66788	8443519	1	True				
ANR	8443739	BitAndExpression	flags & TT_CG_MORE_COMPONENTS		8443519	0		&			
ANR	8443740	Identifier	flags		8443519	0					
ANR	8443741	Identifier	TT_CG_MORE_COMPONENTS		8443519	1					
ANR	8443742	ReturnStatement	return 0 ;	1921:4:66802:66810	8443519	10	True				
ANR	8443743	PrimaryExpression	0		8443519	0					
ANR	8443744	ReturnType	int		8443519	1					
ANR	8443745	Identifier	pl_font_disable_composite_metrics		8443519	2					
ANR	8443746	ParameterList	"pl_font_t * plfont , gs_glyph glyph"		8443519	3					
ANR	8443747	Parameter	pl_font_t * plfont	1861:34:64541:64558	8443519	0	True				
ANR	8443748	ParameterType	pl_font_t *		8443519	0					
ANR	8443749	Identifier	plfont		8443519	1					
ANR	8443750	Parameter	gs_glyph glyph	1861:54:64561:64574	8443519	1	True				
ANR	8443751	ParameterType	gs_glyph		8443519	0					
ANR	8443752	Identifier	glyph		8443519	1					
ANR	8443753	CFGEntryNode	ENTRY		8443519		True				
ANR	8443754	CFGExitNode	EXIT		8443519		True				
ANR	8443755	Symbol	& mat		8443519						
ANR	8443756	Symbol	code		8443519						
ANR	8443757	Symbol	glyph_data . bits . data		8443519						
ANR	8443758	Symbol	next_component		8443519						
ANR	8443759	Symbol	ptcg -> chr		8443519						
ANR	8443760	Symbol	plfont -> char_glyphs		8443519						
ANR	8443761	Symbol	flags		8443519						
ANR	8443762	Symbol	plfont		8443519						
ANR	8443763	Symbol	TT_CG_MORE_COMPONENTS		8443519						
ANR	8443764	Symbol	ptcg -> glyph		8443519						
ANR	8443765	Symbol	is_composite		8443519						
ANR	8443766	Symbol	& flags		8443519						
ANR	8443767	Symbol	* last_component		8443519						
ANR	8443768	Symbol	gs_no_char		8443519						
ANR	8443769	Symbol	ptcg		8443519						
ANR	8443770	Symbol	key		8443519						
ANR	8443771	Symbol	plfont -> char_glyphs . table		8443519						
ANR	8443772	Symbol	glyph_data . bits		8443519						
ANR	8443773	Symbol	last_component		8443519						
ANR	8443774	Symbol	mat		8443519						
ANR	8443775	Symbol	& next_component		8443519						
ANR	8443776	Symbol	NULL		8443519						
ANR	8443777	Symbol	pfont		8443519						
ANR	8443778	Symbol	glyph_data		8443519						
ANR	8443779	Symbol	pfont -> data		8443519						
ANR	8443780	Symbol	TT_CG_USE_MY_METRICS		8443519						
ANR	8443781	Symbol	pl_tt_lookup_char		8443519						
ANR	8443782	Symbol	glyph		8443519						
ANR	8443783	Symbol	* pfont		8443519						
ANR	8443784	Symbol	plfont -> pfont		8443519						
ANR	8443785	Symbol	pfont -> data . get_outline		8443519						
ANR	8443786	Symbol	* plfont		8443519						
ANR	8443787	Symbol	* ptcg		8443519						
ANR	8443788	Symbol	& glyph_data		8443519						
ANR	8443789	Function	pl_font_remove_glyph	1924:0:66884:68399							
ANR	8443790	FunctionDef	"pl_font_remove_glyph (pl_font_t * plfont , gs_glyph glyph)"		8443789	0					
ANR	8443791	CompoundStatement		1926:0:66945:68399	8443789	0					
ANR	8443792	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	1927:4:66951:66981	8443789	0	True				
ANR	8443793	IdentifierDecl	* pfont = plfont -> pfont		8443789	0					
ANR	8443794	IdentifierDeclType	gs_font *		8443789	0					
ANR	8443795	Identifier	pfont		8443789	1					
ANR	8443796	AssignmentExpression	* pfont = plfont -> pfont		8443789	2		=			
ANR	8443797	Identifier	pfont		8443789	0					
ANR	8443798	PtrMemberAccess	plfont -> pfont		8443789	1					
ANR	8443799	Identifier	plfont		8443789	0					
ANR	8443800	Identifier	pfont		8443789	1					
ANR	8443801	IdentifierDeclStatement	gs_glyph key = glyph ;	1928:4:66987:67007	8443789	1	True				
ANR	8443802	IdentifierDecl	key = glyph		8443789	0					
ANR	8443803	IdentifierDeclType	gs_glyph		8443789	0					
ANR	8443804	Identifier	key		8443789	1					
ANR	8443805	AssignmentExpression	key = glyph		8443789	2		=			
ANR	8443806	Identifier	glyph		8443789	0					
ANR	8443807	Identifier	glyph		8443789	1					
ANR	8443808	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	1929:4:67013:67033	8443789	2	True				
ANR	8443809	IdentifierDecl	* pfg		8443789	0					
ANR	8443810	IdentifierDeclType	pl_font_glyph_t *		8443789	0					
ANR	8443811	Identifier	pfg		8443789	1					
ANR	8443812	IfStatement	if ( plfont -> char_glyphs . table )		8443789	3					
ANR	8443813	Condition	plfont -> char_glyphs . table	1932:8:67101:67125	8443789	0	True				
ANR	8443814	MemberAccess	plfont -> char_glyphs . table		8443789	0					
ANR	8443815	PtrMemberAccess	plfont -> char_glyphs		8443789	0					
ANR	8443816	Identifier	plfont		8443789	0					
ANR	8443817	Identifier	char_glyphs		8443789	1					
ANR	8443818	Identifier	table		8443789	1					
ANR	8443819	CompoundStatement		8:8:192:249	8443789	1					
ANR	8443820	IdentifierDeclStatement	"pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , key ) ;"	1933:8:67138:67195	8443789	0	True				
ANR	8443821	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8443789	0					
ANR	8443822	IdentifierDeclType	pl_tt_char_glyph_t *		8443789	0					
ANR	8443823	Identifier	ptcg		8443789	1					
ANR	8443824	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8443789	2		=			
ANR	8443825	Identifier	ptcg		8443789	0					
ANR	8443826	CallExpression	"pl_tt_lookup_char ( plfont , key )"		8443789	1					
ANR	8443827	Callee	pl_tt_lookup_char		8443789	0					
ANR	8443828	Identifier	pl_tt_lookup_char		8443789	0					
ANR	8443829	ArgumentList	plfont		8443789	1					
ANR	8443830	Argument	plfont		8443789	0					
ANR	8443831	Identifier	plfont		8443789	0					
ANR	8443832	Argument	key		8443789	1					
ANR	8443833	Identifier	key		8443789	0					
ANR	8443834	IfStatement	if ( ptcg -> chr == gs_no_char )		8443789	1					
ANR	8443835	Condition	ptcg -> chr == gs_no_char	1935:12:67210:67232	8443789	0	True				
ANR	8443836	EqualityExpression	ptcg -> chr == gs_no_char		8443789	0		==			
ANR	8443837	PtrMemberAccess	ptcg -> chr		8443789	0					
ANR	8443838	Identifier	ptcg		8443789	0					
ANR	8443839	Identifier	chr		8443789	1					
ANR	8443840	Identifier	gs_no_char		8443789	1					
ANR	8443841	ReturnStatement	return 0 ;	1936:12:67247:67255	8443789	1	True				
ANR	8443842	PrimaryExpression	0		8443789	0					
ANR	8443843	ExpressionStatement	key = ptcg -> glyph	1937:8:67265:67282	8443789	2	True				
ANR	8443844	AssignmentExpression	key = ptcg -> glyph		8443789	0		=			
ANR	8443845	Identifier	key		8443789	0					
ANR	8443846	PtrMemberAccess	ptcg -> glyph		8443789	1					
ANR	8443847	Identifier	ptcg		8443789	0					
ANR	8443848	Identifier	glyph		8443789	1					
ANR	8443849	ExpressionStatement	ptcg -> chr = gs_no_char	1938:8:67292:67314	8443789	3	True				
ANR	8443850	AssignmentExpression	ptcg -> chr = gs_no_char		8443789	0		=			
ANR	8443851	PtrMemberAccess	ptcg -> chr		8443789	0					
ANR	8443852	Identifier	ptcg		8443789	0					
ANR	8443853	Identifier	chr		8443789	1					
ANR	8443854	Identifier	gs_no_char		8443789	1					
ANR	8443855	ExpressionStatement	ptcg -> glyph = 1	1939:8:67324:67339	8443789	4	True				
ANR	8443856	AssignmentExpression	ptcg -> glyph = 1		8443789	0		=			
ANR	8443857	PtrMemberAccess	ptcg -> glyph		8443789	0					
ANR	8443858	Identifier	ptcg		8443789	0					
ANR	8443859	Identifier	glyph		8443789	1					
ANR	8443860	PrimaryExpression	1		8443789	1					
ANR	8443861	ExpressionStatement	plfont -> char_glyphs . used --	1940:8:67378:67404	8443789	5	True				
ANR	8443862	PostIncDecOperationExpression	plfont -> char_glyphs . used --		8443789	0					
ANR	8443863	MemberAccess	plfont -> char_glyphs . used		8443789	0					
ANR	8443864	PtrMemberAccess	plfont -> char_glyphs		8443789	0					
ANR	8443865	Identifier	plfont		8443789	0					
ANR	8443866	Identifier	char_glyphs		8443789	1					
ANR	8443867	Identifier	used		8443789	1					
ANR	8443868	IncDec	--		8443789	1					
ANR	8443869	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	1942:8:67470:67516	8443789	6	True				
ANR	8443870	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8443789	0					
ANR	8443871	Callee	pl_font_glyph_width_cache_remove_nodes		8443789	0					
ANR	8443872	Identifier	pl_font_glyph_width_cache_remove_nodes		8443789	0					
ANR	8443873	ArgumentList	plfont		8443789	1					
ANR	8443874	Argument	plfont		8443789	0					
ANR	8443875	Identifier	plfont		8443789	0					
ANR	8443876	IfStatement	if ( plfont -> glyphs . table == 0 )		8443789	4					
ANR	8443877	Condition	plfont -> glyphs . table == 0	1945:8:67596:67620	8443789	0	True				
ANR	8443878	EqualityExpression	plfont -> glyphs . table == 0		8443789	0		==			
ANR	8443879	MemberAccess	plfont -> glyphs . table		8443789	0					
ANR	8443880	PtrMemberAccess	plfont -> glyphs		8443789	0					
ANR	8443881	Identifier	plfont		8443789	0					
ANR	8443882	Identifier	glyphs		8443789	1					
ANR	8443883	Identifier	table		8443789	1					
ANR	8443884	PrimaryExpression	0		8443789	1					
ANR	8443885	ReturnStatement	return 0 ;	1946:8:67631:67639	8443789	1	True				
ANR	8443886	PrimaryExpression	0		8443789	0					
ANR	8443887	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , key )"	1947:4:67645:67684	8443789	5	True				
ANR	8443888	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , key )"		8443789	0		=			
ANR	8443889	Identifier	pfg		8443789	0					
ANR	8443890	CallExpression	"pl_font_lookup_glyph ( plfont , key )"		8443789	1					
ANR	8443891	Callee	pl_font_lookup_glyph		8443789	0					
ANR	8443892	Identifier	pl_font_lookup_glyph		8443789	0					
ANR	8443893	ArgumentList	plfont		8443789	1					
ANR	8443894	Argument	plfont		8443789	0					
ANR	8443895	Identifier	plfont		8443789	0					
ANR	8443896	Argument	key		8443789	1					
ANR	8443897	Identifier	key		8443789	0					
ANR	8443898	IfStatement	if ( pfg -> data == 0 )		8443789	6					
ANR	8443899	Condition	pfg -> data == 0	1948:8:67694:67707	8443789	0	True				
ANR	8443900	EqualityExpression	pfg -> data == 0		8443789	0		==			
ANR	8443901	PtrMemberAccess	pfg -> data		8443789	0					
ANR	8443902	Identifier	pfg		8443789	0					
ANR	8443903	Identifier	data		8443789	1					
ANR	8443904	PrimaryExpression	0		8443789	1					
ANR	8443905	ReturnStatement	return 0 ;	1949:8:67718:67726	8443789	1	True				
ANR	8443906	PrimaryExpression	0		8443789	0					
ANR	8443907	CompoundStatement		26:8:913:934	8443789	7					
ANR	8443908	IdentifierDeclStatement	font_glyph_t match_fg ;	1951:8:67859:67880	8443789	0	True				
ANR	8443909	IdentifierDecl	match_fg		8443789	0					
ANR	8443910	IdentifierDeclType	font_glyph_t		8443789	0					
ANR	8443911	Identifier	match_fg		8443789	1					
ANR	8443912	ExpressionStatement	match_fg . font = pfont	1953:8:67891:67912	8443789	1	True				
ANR	8443913	AssignmentExpression	match_fg . font = pfont		8443789	0		=			
ANR	8443914	MemberAccess	match_fg . font		8443789	0					
ANR	8443915	Identifier	match_fg		8443789	0					
ANR	8443916	Identifier	font		8443789	1					
ANR	8443917	Identifier	pfont		8443789	1					
ANR	8443918	ExpressionStatement	match_fg . glyph = key	1954:8:67922:67942	8443789	2	True				
ANR	8443919	AssignmentExpression	match_fg . glyph = key		8443789	0		=			
ANR	8443920	MemberAccess	match_fg . glyph		8443789	0					
ANR	8443921	Identifier	match_fg		8443789	0					
ANR	8443922	Identifier	glyph		8443789	1					
ANR	8443923	Identifier	key		8443789	1					
ANR	8443924	ExpressionStatement	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"	1955:8:67952:68062	8443789	3	True				
ANR	8443925	CallExpression	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"		8443789	0					
ANR	8443926	Callee	gx_purge_selected_cached_chars		8443789	0					
ANR	8443927	Identifier	gx_purge_selected_cached_chars		8443789	0					
ANR	8443928	ArgumentList	pfont -> dir		8443789	1					
ANR	8443929	Argument	pfont -> dir		8443789	0					
ANR	8443930	PtrMemberAccess	pfont -> dir		8443789	0					
ANR	8443931	Identifier	pfont		8443789	0					
ANR	8443932	Identifier	dir		8443789	1					
ANR	8443933	Argument	match_font_glyph		8443789	1					
ANR	8443934	Identifier	match_font_glyph		8443789	0					
ANR	8443935	Argument	& match_fg		8443789	2					
ANR	8443936	UnaryOperationExpression	& match_fg		8443789	0					
ANR	8443937	UnaryOperator	&		8443789	0					
ANR	8443938	Identifier	match_fg		8443789	1					
ANR	8443939	ExpressionStatement	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_remove_glyph(data)"" )"	1957:8:68072:68173	8443789	4	True				
ANR	8443940	CallExpression	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_remove_glyph(data)"" )"		8443789	0					
ANR	8443941	Callee	gs_free_object		8443789	0					
ANR	8443942	Identifier	gs_free_object		8443789	0					
ANR	8443943	ArgumentList	pfont -> memory		8443789	1					
ANR	8443944	Argument	pfont -> memory		8443789	0					
ANR	8443945	PtrMemberAccess	pfont -> memory		8443789	0					
ANR	8443946	Identifier	pfont		8443789	0					
ANR	8443947	Identifier	memory		8443789	1					
ANR	8443948	Argument	( void * ) pfg -> data		8443789	1					
ANR	8443949	CastExpression	( void * ) pfg -> data		8443789	0					
ANR	8443950	CastTarget	void *		8443789	0					
ANR	8443951	PtrMemberAccess	pfg -> data		8443789	1					
ANR	8443952	Identifier	pfg		8443789	0					
ANR	8443953	Identifier	data		8443789	1					
ANR	8443954	Argument	"""pl_font_remove_glyph(data)"""		8443789	2					
ANR	8443955	PrimaryExpression	"""pl_font_remove_glyph(data)"""		8443789	0					
ANR	8443956	ExpressionStatement	pfg -> data = 0	1960:4:68185:68198	8443789	8	True				
ANR	8443957	AssignmentExpression	pfg -> data = 0		8443789	0		=			
ANR	8443958	PtrMemberAccess	pfg -> data		8443789	0					
ANR	8443959	Identifier	pfg		8443789	0					
ANR	8443960	Identifier	data		8443789	1					
ANR	8443961	PrimaryExpression	0		8443789	1					
ANR	8443962	ExpressionStatement	pfg -> glyph = 1	1961:4:68204:68218	8443789	9	True				
ANR	8443963	AssignmentExpression	pfg -> glyph = 1		8443789	0		=			
ANR	8443964	PtrMemberAccess	pfg -> glyph		8443789	0					
ANR	8443965	Identifier	pfg		8443789	0					
ANR	8443966	Identifier	glyph		8443789	1					
ANR	8443967	PrimaryExpression	1		8443789	1					
ANR	8443968	ExpressionStatement	plfont -> glyphs . used --	1962:4:68258:68279	8443789	10	True				
ANR	8443969	PostIncDecOperationExpression	plfont -> glyphs . used --		8443789	0					
ANR	8443970	MemberAccess	plfont -> glyphs . used		8443789	0					
ANR	8443971	PtrMemberAccess	plfont -> glyphs		8443789	0					
ANR	8443972	Identifier	plfont		8443789	0					
ANR	8443973	Identifier	glyphs		8443789	1					
ANR	8443974	Identifier	used		8443789	1					
ANR	8443975	IncDec	--		8443789	1					
ANR	8443976	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	1964:4:68337:68383	8443789	11	True				
ANR	8443977	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8443789	0					
ANR	8443978	Callee	pl_font_glyph_width_cache_remove_nodes		8443789	0					
ANR	8443979	Identifier	pl_font_glyph_width_cache_remove_nodes		8443789	0					
ANR	8443980	ArgumentList	plfont		8443789	1					
ANR	8443981	Argument	plfont		8443789	0					
ANR	8443982	Identifier	plfont		8443789	0					
ANR	8443983	ReturnStatement	return 1 ;	1965:4:68389:68397	8443789	12	True				
ANR	8443984	PrimaryExpression	1		8443789	0					
ANR	8443985	ReturnType	int		8443789	1					
ANR	8443986	Identifier	pl_font_remove_glyph		8443789	2					
ANR	8443987	ParameterList	"pl_font_t * plfont , gs_glyph glyph"		8443789	3					
ANR	8443988	Parameter	pl_font_t * plfont	1925:21:66909:66926	8443789	0	True				
ANR	8443989	ParameterType	pl_font_t *		8443789	0					
ANR	8443990	Identifier	plfont		8443789	1					
ANR	8443991	Parameter	gs_glyph glyph	1925:41:66929:66942	8443789	1	True				
ANR	8443992	ParameterType	gs_glyph		8443789	0					
ANR	8443993	Identifier	glyph		8443789	1					
ANR	8443994	CFGEntryNode	ENTRY		8443789		True				
ANR	8443995	CFGExitNode	EXIT		8443789		True				
ANR	8443996	Symbol	plfont -> char_glyphs . used		8443789						
ANR	8443997	Symbol	match_fg . font		8443789						
ANR	8443998	Symbol	pfont -> memory		8443789						
ANR	8443999	Symbol	pl_font_lookup_glyph		8443789						
ANR	8444000	Symbol	ptcg -> chr		8443789						
ANR	8444001	Symbol	match_font_glyph		8443789						
ANR	8444002	Symbol	plfont -> char_glyphs		8443789						
ANR	8444003	Symbol	match_fg		8443789						
ANR	8444004	Symbol	plfont		8443789						
ANR	8444005	Symbol	pfg -> glyph		8443789						
ANR	8444006	Symbol	plfont -> glyphs . used		8443789						
ANR	8444007	Symbol	& match_fg		8443789						
ANR	8444008	Symbol	ptcg -> glyph		8443789						
ANR	8444009	Symbol	gs_no_char		8443789						
ANR	8444010	Symbol	* pfg		8443789						
ANR	8444011	Symbol	ptcg		8443789						
ANR	8444012	Symbol	key		8443789						
ANR	8444013	Symbol	plfont -> char_glyphs . table		8443789						
ANR	8444014	Symbol	plfont -> glyphs . table		8443789						
ANR	8444015	Symbol	pfont		8443789						
ANR	8444016	Symbol	match_fg . glyph		8443789						
ANR	8444017	Symbol	pl_tt_lookup_char		8443789						
ANR	8444018	Symbol	pfg		8443789						
ANR	8444019	Symbol	glyph		8443789						
ANR	8444020	Symbol	* pfont		8443789						
ANR	8444021	Symbol	plfont -> pfont		8443789						
ANR	8444022	Symbol	pfont -> dir		8443789						
ANR	8444023	Symbol	* plfont		8443789						
ANR	8444024	Symbol	plfont -> glyphs		8443789						
ANR	8444025	Symbol	pfg -> data		8443789						
ANR	8444026	Symbol	* ptcg		8443789						
