command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8180091	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_plchar.c								
ANR	8180092	DeclStmt									
ANR	8180093	Decl							define CACHE_TRUETYPE_CHARS	define CACHE_TRUETYPE_CHARS	gs_private_st_ptrs1
ANR	8180094	Function	pl_prepend_xl_dummy_header	67:0:2138:2222							
ANR	8180095	FunctionDef	"pl_prepend_xl_dummy_header (gs_memory_t * mem , byte * * ppheader)"		8180094	0					
ANR	8180096	CompoundStatement		69:0:2206:2222	8180094	0					
ANR	8180097	ReturnStatement	return 0 ;	70:4:2212:2220	8180094	0	True				
ANR	8180098	PrimaryExpression	0		8180094	0					
ANR	8180099	ReturnType	int		8180094	1					
ANR	8180100	Identifier	pl_prepend_xl_dummy_header		8180094	2					
ANR	8180101	ParameterList	"gs_memory_t * mem , byte * * ppheader"		8180094	3					
ANR	8180102	Parameter	gs_memory_t * mem	68:27:2169:2185	8180094	0	True				
ANR	8180103	ParameterType	gs_memory_t *		8180094	0					
ANR	8180104	Identifier	mem		8180094	1					
ANR	8180105	Parameter	byte * * ppheader	68:46:2188:2203	8180094	1	True				
ANR	8180106	ParameterType	byte * *		8180094	0					
ANR	8180107	Identifier	ppheader		8180094	1					
ANR	8180108	CFGEntryNode	ENTRY		8180094		True				
ANR	8180109	CFGExitNode	EXIT		8180094		True				
ANR	8180110	Symbol	mem		8180094						
ANR	8180111	Symbol	ppheader		8180094						
ANR	8180112	Function	pl_swap_header	73:0:2225:2287							
ANR	8180113	FunctionDef	"pl_swap_header (byte * header , uint gifct)"		8180112	0					
ANR	8180114	CompoundStatement		75:0:2271:2287	8180112	0					
ANR	8180115	ReturnStatement	return 0 ;	76:4:2277:2285	8180112	0	True				
ANR	8180116	PrimaryExpression	0		8180112	0					
ANR	8180117	ReturnType	int		8180112	1					
ANR	8180118	Identifier	pl_swap_header		8180112	2					
ANR	8180119	ParameterList	"byte * header , uint gifct"		8180112	3					
ANR	8180120	Parameter	byte * header	74:15:2244:2256	8180112	0	True				
ANR	8180121	ParameterType	byte *		8180112	0					
ANR	8180122	Identifier	header		8180112	1					
ANR	8180123	Parameter	uint gifct	74:30:2259:2268	8180112	1	True				
ANR	8180124	ParameterType	uint		8180112	0					
ANR	8180125	Identifier	gifct		8180112	1					
ANR	8180126	CFGEntryNode	ENTRY		8180112		True				
ANR	8180127	CFGExitNode	EXIT		8180112		True				
ANR	8180128	Symbol	header		8180112						
ANR	8180129	Symbol	gifct		8180112						
ANR	8180130	Function	pl_font_lookup_glyph	83:0:2471:2996							
ANR	8180131	FunctionDef	"pl_font_lookup_glyph (const pl_font_t * plfont , gs_glyph glyph)"		8180130	0					
ANR	8180132	CompoundStatement		85:0:2552:2996	8180130	0					
ANR	8180133	IdentifierDeclStatement	uint size = plfont -> glyphs . size ;	86:4:2558:2589	8180130	0	True				
ANR	8180134	IdentifierDecl	size = plfont -> glyphs . size		8180130	0					
ANR	8180135	IdentifierDeclType	uint		8180130	0					
ANR	8180136	Identifier	size		8180130	1					
ANR	8180137	AssignmentExpression	size = plfont -> glyphs . size		8180130	2		=			
ANR	8180138	Identifier	size		8180130	0					
ANR	8180139	MemberAccess	plfont -> glyphs . size		8180130	1					
ANR	8180140	PtrMemberAccess	plfont -> glyphs		8180130	0					
ANR	8180141	Identifier	plfont		8180130	0					
ANR	8180142	Identifier	glyphs		8180130	1					
ANR	8180143	Identifier	size		8180130	1					
ANR	8180144	IdentifierDeclStatement	uint skip = plfont -> glyphs . skip ;	87:4:2595:2626	8180130	1	True				
ANR	8180145	IdentifierDecl	skip = plfont -> glyphs . skip		8180130	0					
ANR	8180146	IdentifierDeclType	uint		8180130	0					
ANR	8180147	Identifier	skip		8180130	1					
ANR	8180148	AssignmentExpression	skip = plfont -> glyphs . skip		8180130	2		=			
ANR	8180149	Identifier	skip		8180130	0					
ANR	8180150	MemberAccess	plfont -> glyphs . skip		8180130	1					
ANR	8180151	PtrMemberAccess	plfont -> glyphs		8180130	0					
ANR	8180152	Identifier	plfont		8180130	0					
ANR	8180153	Identifier	glyphs		8180130	1					
ANR	8180154	Identifier	skip		8180130	1					
ANR	8180155	IdentifierDeclStatement	uint index = glyph % size ;	88:4:2632:2657	8180130	2	True				
ANR	8180156	IdentifierDecl	index = glyph % size		8180130	0					
ANR	8180157	IdentifierDeclType	uint		8180130	0					
ANR	8180158	Identifier	index		8180130	1					
ANR	8180159	AssignmentExpression	index = glyph % size		8180130	2		=			
ANR	8180160	Identifier	index		8180130	0					
ANR	8180161	MultiplicativeExpression	glyph % size		8180130	1		%			
ANR	8180162	Identifier	glyph		8180130	0					
ANR	8180163	Identifier	size		8180130	1					
ANR	8180164	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	89:4:2663:2683	8180130	3	True				
ANR	8180165	IdentifierDecl	* pfg		8180130	0					
ANR	8180166	IdentifierDeclType	pl_font_glyph_t *		8180130	0					
ANR	8180167	Identifier	pfg		8180130	1					
ANR	8180168	IdentifierDeclStatement	pl_font_glyph_t * result = 0 ;	90:4:2689:2716	8180130	4	True				
ANR	8180169	IdentifierDecl	* result = 0		8180130	0					
ANR	8180170	IdentifierDeclType	pl_font_glyph_t *		8180130	0					
ANR	8180171	Identifier	result		8180130	1					
ANR	8180172	AssignmentExpression	* result = 0		8180130	2		=			
ANR	8180173	Identifier	result		8180130	0					
ANR	8180174	PrimaryExpression	0		8180130	1					
ANR	8180175	WhileStatement	while ( ( pfg = plfont -> glyphs . table + index ) -> data ? pfg -> glyph != glyph : pfg -> glyph != 0 )		8180130	5					
ANR	8180176	Condition	( pfg = plfont -> glyphs . table + index ) -> data ? pfg -> glyph != glyph : pfg -> glyph != 0	92:11:2730:2822	8180130	0	True				
ANR	8180177	ConditionalExpression	( pfg = plfont -> glyphs . table + index ) -> data ? pfg -> glyph != glyph : pfg -> glyph != 0		8180130	0					
ANR	8180178	Condition	( pfg = plfont -> glyphs . table + index ) -> data		8180130	0					
ANR	8180179	PtrMemberAccess	( pfg = plfont -> glyphs . table + index ) -> data		8180130	0					
ANR	8180180	AssignmentExpression	pfg = plfont -> glyphs . table + index		8180130	0		=			
ANR	8180181	Identifier	pfg		8180130	0					
ANR	8180182	AdditiveExpression	plfont -> glyphs . table + index		8180130	1		+			
ANR	8180183	MemberAccess	plfont -> glyphs . table		8180130	0					
ANR	8180184	PtrMemberAccess	plfont -> glyphs		8180130	0					
ANR	8180185	Identifier	plfont		8180130	0					
ANR	8180186	Identifier	glyphs		8180130	1					
ANR	8180187	Identifier	table		8180130	1					
ANR	8180188	Identifier	index		8180130	1					
ANR	8180189	Identifier	data		8180130	1					
ANR	8180190	EqualityExpression	pfg -> glyph != glyph		8180130	1		!=			
ANR	8180191	PtrMemberAccess	pfg -> glyph		8180130	0					
ANR	8180192	Identifier	pfg		8180130	0					
ANR	8180193	Identifier	glyph		8180130	1					
ANR	8180194	Identifier	glyph		8180130	1					
ANR	8180195	EqualityExpression	pfg -> glyph != 0		8180130	2		!=			
ANR	8180196	PtrMemberAccess	pfg -> glyph		8180130	0					
ANR	8180197	Identifier	pfg		8180130	0					
ANR	8180198	Identifier	glyph		8180130	1					
ANR	8180199	PrimaryExpression	0		8180130	1					
ANR	8180200	CompoundStatement		9:50:272:272	8180130	1					
ANR	8180201	IfStatement	if ( ! pfg -> data )		8180130	0					
ANR	8180202	Condition	! pfg -> data	94:12:2839:2848	8180130	0	True				
ANR	8180203	UnaryOperationExpression	! pfg -> data		8180130	0					
ANR	8180204	UnaryOperator	!		8180130	0					
ANR	8180205	PtrMemberAccess	pfg -> data		8180130	1					
ANR	8180206	Identifier	pfg		8180130	0					
ANR	8180207	Identifier	data		8180130	1					
ANR	8180208	ExpressionStatement	result = pfg	95:12:2863:2875	8180130	1	True				
ANR	8180209	AssignmentExpression	result = pfg		8180130	0		=			
ANR	8180210	Identifier	result		8180130	0					
ANR	8180211	Identifier	pfg		8180130	1					
ANR	8180212	ExpressionStatement	index = ( index >= skip ? index : index + size ) - skip	96:8:2885:2938	8180130	1	True				
ANR	8180213	AssignmentExpression	index = ( index >= skip ? index : index + size ) - skip		8180130	0		=			
ANR	8180214	Identifier	index		8180130	0					
ANR	8180215	AdditiveExpression	( index >= skip ? index : index + size ) - skip		8180130	1		-			
ANR	8180216	ConditionalExpression	index >= skip ? index : index + size		8180130	0					
ANR	8180217	Condition	index >= skip		8180130	0					
ANR	8180218	RelationalExpression	index >= skip		8180130	0		>=			
ANR	8180219	Identifier	index		8180130	0					
ANR	8180220	Identifier	skip		8180130	1					
ANR	8180221	Identifier	index		8180130	1					
ANR	8180222	AdditiveExpression	index + size		8180130	2		+			
ANR	8180223	Identifier	index		8180130	0					
ANR	8180224	Identifier	size		8180130	1					
ANR	8180225	Identifier	skip		8180130	1					
ANR	8180226	ReturnStatement	return ( ! pfg -> data && result ) ? result : pfg ;	98:4:2950:2994	8180130	6	True				
ANR	8180227	ConditionalExpression	( ! pfg -> data && result ) ? result : pfg		8180130	0					
ANR	8180228	Condition	! pfg -> data && result		8180130	0					
ANR	8180229	AndExpression	! pfg -> data && result		8180130	0		&&			
ANR	8180230	UnaryOperationExpression	! pfg -> data		8180130	0					
ANR	8180231	UnaryOperator	!		8180130	0					
ANR	8180232	PtrMemberAccess	pfg -> data		8180130	1					
ANR	8180233	Identifier	pfg		8180130	0					
ANR	8180234	Identifier	data		8180130	1					
ANR	8180235	Identifier	result		8180130	1					
ANR	8180236	Identifier	result		8180130	1					
ANR	8180237	Identifier	pfg		8180130	2					
ANR	8180238	ReturnType	pl_font_glyph_t *		8180130	1					
ANR	8180239	Identifier	pl_font_lookup_glyph		8180130	2					
ANR	8180240	ParameterList	"const pl_font_t * plfont , gs_glyph glyph"		8180130	3					
ANR	8180241	Parameter	const pl_font_t * plfont	84:21:2510:2533	8180130	0	True				
ANR	8180242	ParameterType	const pl_font_t *		8180130	0					
ANR	8180243	Identifier	plfont		8180130	1					
ANR	8180244	Parameter	gs_glyph glyph	84:47:2536:2549	8180130	1	True				
ANR	8180245	ParameterType	gs_glyph		8180130	0					
ANR	8180246	Identifier	glyph		8180130	1					
ANR	8180247	CFGEntryNode	ENTRY		8180130		True				
ANR	8180248	CFGExitNode	EXIT		8180130		True				
ANR	8180249	Symbol	plfont -> glyphs . table		8180130						
ANR	8180250	Symbol	index		8180130						
ANR	8180251	Symbol	skip		8180130						
ANR	8180252	Symbol	plfont		8180130						
ANR	8180253	Symbol	plfont -> glyphs . size		8180130						
ANR	8180254	Symbol	pfg -> glyph		8180130						
ANR	8180255	Symbol	plfont -> glyphs . skip		8180130						
ANR	8180256	Symbol	( pfg = plfont -> glyphs . table + index ) -> data		8180130						
ANR	8180257	Symbol	pfg		8180130						
ANR	8180258	Symbol	result		8180130						
ANR	8180259	Symbol	glyph		8180130						
ANR	8180260	Symbol	size		8180130						
ANR	8180261	Symbol	plfont -> glyphs		8180130						
ANR	8180262	Symbol	* plfont		8180130						
ANR	8180263	Symbol	* pfg		8180130						
ANR	8180264	Symbol	pfg -> data		8180130						
ANR	8180265	Function	pl_bitmap_encode_char	105:0:3166:3290							
ANR	8180266	FunctionDef	"pl_bitmap_encode_char (gs_font * pfont , gs_char chr , gs_glyph_space_t not_used)"		8180265	0					
ANR	8180267	CompoundStatement		107:0:3261:3290	8180265	0					
ANR	8180268	ReturnStatement	return ( gs_glyph ) chr ;	108:4:3267:3288	8180265	0	True				
ANR	8180269	CastExpression	( gs_glyph ) chr		8180265	0					
ANR	8180270	CastTarget	gs_glyph		8180265	0					
ANR	8180271	Identifier	chr		8180265	1					
ANR	8180272	ReturnType	static gs_glyph		8180265	1					
ANR	8180273	Identifier	pl_bitmap_encode_char		8180265	2					
ANR	8180274	ParameterList	"gs_font * pfont , gs_char chr , gs_glyph_space_t not_used"		8180265	3					
ANR	8180275	Parameter	gs_font * pfont	106:22:3204:3218	8180265	0	True				
ANR	8180276	ParameterType	gs_font *		8180265	0					
ANR	8180277	Identifier	pfont		8180265	1					
ANR	8180278	Parameter	gs_char chr	106:39:3221:3231	8180265	1	True				
ANR	8180279	ParameterType	gs_char		8180265	0					
ANR	8180280	Identifier	chr		8180265	1					
ANR	8180281	Parameter	gs_glyph_space_t not_used	106:52:3234:3258	8180265	2	True				
ANR	8180282	ParameterType	gs_glyph_space_t		8180265	0					
ANR	8180283	Identifier	not_used		8180265	1					
ANR	8180284	CFGEntryNode	ENTRY		8180265		True				
ANR	8180285	CFGExitNode	EXIT		8180265		True				
ANR	8180286	Symbol	not_used		8180265						
ANR	8180287	Symbol	pfont		8180265						
ANR	8180288	Symbol	chr		8180265						
ANR	8180289	Function	pl_bitmap_char_width	113:0:3399:4195							
ANR	8180290	FunctionDef	"pl_bitmap_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8180289	0					
ANR	8180291	CompoundStatement		116:0:3533:4195	8180289	0					
ANR	8180292	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	117:4:3539:3604	8180289	0	True				
ANR	8180293	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180289	0					
ANR	8180294	IdentifierDeclType	const byte *		8180289	0					
ANR	8180295	Identifier	cdata		8180289	1					
ANR	8180296	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180289	2		=			
ANR	8180297	Identifier	cdata		8180289	0					
ANR	8180298	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180289	1					
ANR	8180299	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8180289	0					
ANR	8180300	Callee	pl_font_lookup_glyph		8180289	0					
ANR	8180301	Identifier	pl_font_lookup_glyph		8180289	0					
ANR	8180302	ArgumentList	plfont		8180289	1					
ANR	8180303	Argument	plfont		8180289	0					
ANR	8180304	Identifier	plfont		8180289	0					
ANR	8180305	Argument	char_code		8180289	1					
ANR	8180306	Identifier	char_code		8180289	0					
ANR	8180307	Identifier	data		8180289	1					
ANR	8180308	ExpressionStatement	pwidth -> x = pwidth -> y = 0	119:4:3611:3636	8180289	1	True				
ANR	8180309	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8180289	0		=			
ANR	8180310	PtrMemberAccess	pwidth -> x		8180289	0					
ANR	8180311	Identifier	pwidth		8180289	0					
ANR	8180312	Identifier	x		8180289	1					
ANR	8180313	AssignmentExpression	pwidth -> y = 0		8180289	1		=			
ANR	8180314	PtrMemberAccess	pwidth -> y		8180289	0					
ANR	8180315	Identifier	pwidth		8180289	0					
ANR	8180316	Identifier	y		8180289	1					
ANR	8180317	PrimaryExpression	0		8180289	1					
ANR	8180318	IfStatement	if ( cdata == 0 )		8180289	2					
ANR	8180319	Condition	cdata == 0	121:8:3647:3656	8180289	0	True				
ANR	8180320	EqualityExpression	cdata == 0		8180289	0		==			
ANR	8180321	Identifier	cdata		8180289	0					
ANR	8180322	PrimaryExpression	0		8180289	1					
ANR	8180323	CompoundStatement		6:20:125:125	8180289	1					
ANR	8180324	ReturnStatement	return 1 ;	122:8:3669:3677	8180289	0	True				
ANR	8180325	PrimaryExpression	1		8180289	0					
ANR	8180326	IfStatement	if ( cdata [ 0 ] == 0 )		8180289	3					
ANR	8180327	Condition	cdata [ 0 ] == 0	124:8:3693:3705	8180289	0	True				
ANR	8180328	EqualityExpression	cdata [ 0 ] == 0		8180289	0		==			
ANR	8180329	ArrayIndexing	cdata [ 0 ]		8180289	0					
ANR	8180330	Identifier	cdata		8180289	0					
ANR	8180331	PrimaryExpression	0		8180289	1					
ANR	8180332	PrimaryExpression	0		8180289	1					
ANR	8180333	CompoundStatement		9:23:174:174	8180289	1					
ANR	8180334	ExpressionStatement	pwidth -> x = pwidth -> y = 0	125:8:3775:3800	8180289	0	True				
ANR	8180335	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8180289	0		=			
ANR	8180336	PtrMemberAccess	pwidth -> x		8180289	0					
ANR	8180337	Identifier	pwidth		8180289	0					
ANR	8180338	Identifier	x		8180289	1					
ANR	8180339	AssignmentExpression	pwidth -> y = 0		8180289	1		=			
ANR	8180340	PtrMemberAccess	pwidth -> y		8180289	0					
ANR	8180341	Identifier	pwidth		8180289	0					
ANR	8180342	Identifier	y		8180289	1					
ANR	8180343	PrimaryExpression	0		8180289	1					
ANR	8180344	ReturnStatement	return 0 ;	126:8:3810:3818	8180289	1	True				
ANR	8180345	PrimaryExpression	0		8180289	0					
ANR	8180346	CompoundStatement		15:8:307:337	8180289	4					
ANR	8180347	IdentifierDeclStatement	const byte * params = cdata + 6 ;	130:8:3841:3871	8180289	0	True				
ANR	8180348	IdentifierDecl	* params = cdata + 6		8180289	0					
ANR	8180349	IdentifierDeclType	const byte *		8180289	0					
ANR	8180350	Identifier	params		8180289	1					
ANR	8180351	AssignmentExpression	* params = cdata + 6		8180289	2		=			
ANR	8180352	Identifier	params		8180289	0					
ANR	8180353	AdditiveExpression	cdata + 6		8180289	1		+			
ANR	8180354	Identifier	cdata		8180289	0					
ANR	8180355	PrimaryExpression	6		8180289	1					
ANR	8180356	ExpressionStatement	pwidth -> x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )	132:8:3882:4173	8180289	1	True				
ANR	8180357	AssignmentExpression	pwidth -> x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )		8180289	0		=			
ANR	8180358	PtrMemberAccess	pwidth -> x		8180289	0					
ANR	8180359	Identifier	pwidth		8180289	0					
ANR	8180360	Identifier	x		8180289	1					
ANR	8180361	ConditionalExpression	plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : pl_get_int16 ( params ) + pl_get_int16 ( params + 4 )		8180289	1					
ANR	8180362	Condition	plfont -> header [ 13 ]		8180289	0					
ANR	8180363	ArrayIndexing	plfont -> header [ 13 ]		8180289	0					
ANR	8180364	PtrMemberAccess	plfont -> header		8180289	0					
ANR	8180365	Identifier	plfont		8180289	0					
ANR	8180366	Identifier	header		8180289	1					
ANR	8180367	PrimaryExpression	13		8180289	1					
ANR	8180368	MultiplicativeExpression	pl_get_int16 ( params + 8 ) * 0.25		8180289	1		*			
ANR	8180369	CallExpression	pl_get_int16 ( params + 8 )		8180289	0					
ANR	8180370	Callee	pl_get_int16		8180289	0					
ANR	8180371	Identifier	pl_get_int16		8180289	0					
ANR	8180372	ArgumentList	params + 8		8180289	1					
ANR	8180373	Argument	params + 8		8180289	0					
ANR	8180374	AdditiveExpression	params + 8		8180289	0		+			
ANR	8180375	Identifier	params		8180289	0					
ANR	8180376	PrimaryExpression	8		8180289	1					
ANR	8180377	PrimaryExpression	0.25		8180289	1					
ANR	8180378	AdditiveExpression	pl_get_int16 ( params ) + pl_get_int16 ( params + 4 )		8180289	2		+			
ANR	8180379	CallExpression	pl_get_int16 ( params )		8180289	0					
ANR	8180380	Callee	pl_get_int16		8180289	0					
ANR	8180381	Identifier	pl_get_int16		8180289	0					
ANR	8180382	ArgumentList	params		8180289	1					
ANR	8180383	Argument	params		8180289	0					
ANR	8180384	Identifier	params		8180289	0					
ANR	8180385	CallExpression	pl_get_int16 ( params + 4 )		8180289	1					
ANR	8180386	Callee	pl_get_int16		8180289	0					
ANR	8180387	Identifier	pl_get_int16		8180289	0					
ANR	8180388	ArgumentList	params + 4		8180289	1					
ANR	8180389	Argument	params + 4		8180289	0					
ANR	8180390	AdditiveExpression	params + 4		8180289	0		+			
ANR	8180391	Identifier	params		8180289	0					
ANR	8180392	PrimaryExpression	4		8180289	1					
ANR	8180393	ReturnStatement	return 0 ;	138:4:4185:4193	8180289	5	True				
ANR	8180394	PrimaryExpression	0		8180289	0					
ANR	8180395	ReturnType	static int		8180289	1					
ANR	8180396	Identifier	pl_bitmap_char_width		8180289	2					
ANR	8180397	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8180289	3					
ANR	8180398	Parameter	const pl_font_t * plfont	114:21:3431:3454	8180289	0	True				
ANR	8180399	ParameterType	const pl_font_t *		8180289	0					
ANR	8180400	Identifier	plfont		8180289	1					
ANR	8180401	Parameter	const void * pgs	114:47:3457:3471	8180289	1	True				
ANR	8180402	ParameterType	const void *		8180289	0					
ANR	8180403	Identifier	pgs		8180289	1					
ANR	8180404	Parameter	gs_char char_code	115:21:3495:3511	8180289	2	True				
ANR	8180405	ParameterType	gs_char		8180289	0					
ANR	8180406	Identifier	char_code		8180289	1					
ANR	8180407	Parameter	gs_point * pwidth	115:40:3514:3530	8180289	3	True				
ANR	8180408	ParameterType	gs_point *		8180289	0					
ANR	8180409	Identifier	pwidth		8180289	1					
ANR	8180410	CFGEntryNode	ENTRY		8180289		True				
ANR	8180411	CFGExitNode	EXIT		8180289		True				
ANR	8180412	Symbol	* * plfont		8180289						
ANR	8180413	Symbol	pl_font_lookup_glyph		8180289						
ANR	8180414	Symbol	plfont -> header		8180289						
ANR	8180415	Symbol	pwidth -> y		8180289						
ANR	8180416	Symbol	char_code		8180289						
ANR	8180417	Symbol	pwidth		8180289						
ANR	8180418	Symbol	plfont		8180289						
ANR	8180419	Symbol	* pl_font_lookup_glyph		8180289						
ANR	8180420	Symbol	params		8180289						
ANR	8180421	Symbol	cdata		8180289						
ANR	8180422	Symbol	pwidth -> x		8180289						
ANR	8180423	Symbol	* cdata		8180289						
ANR	8180424	Symbol	* plfont -> header		8180289						
ANR	8180425	Symbol	pl_get_int16		8180289						
ANR	8180426	Symbol	* plfont		8180289						
ANR	8180427	Symbol	* pwidth		8180289						
ANR	8180428	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180289						
ANR	8180429	Symbol	pgs		8180289						
ANR	8180430	Function	pl_bitmap_char_metrics	141:0:4198:4848							
ANR	8180431	FunctionDef	"pl_bitmap_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8180430	0					
ANR	8180432	CompoundStatement		144:0:4335:4848	8180430	0					
ANR	8180433	IdentifierDeclStatement	gs_point width ;	145:4:4341:4355	8180430	0	True				
ANR	8180434	IdentifierDecl	width		8180430	0					
ANR	8180435	IdentifierDeclType	gs_point		8180430	0					
ANR	8180436	Identifier	width		8180430	1					
ANR	8180437	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	146:4:4361:4426	8180430	1	True				
ANR	8180438	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180430	0					
ANR	8180439	IdentifierDeclType	const byte *		8180430	0					
ANR	8180440	Identifier	cdata		8180430	1					
ANR	8180441	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180430	2		=			
ANR	8180442	Identifier	cdata		8180430	0					
ANR	8180443	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180430	1					
ANR	8180444	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8180430	0					
ANR	8180445	Callee	pl_font_lookup_glyph		8180430	0					
ANR	8180446	Identifier	pl_font_lookup_glyph		8180430	0					
ANR	8180447	ArgumentList	plfont		8180430	1					
ANR	8180448	Argument	plfont		8180430	0					
ANR	8180449	Identifier	plfont		8180430	0					
ANR	8180450	Argument	char_code		8180430	1					
ANR	8180451	Identifier	char_code		8180430	0					
ANR	8180452	Identifier	data		8180430	1					
ANR	8180453	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0	149:4:4471:4524	8180430	2	True				
ANR	8180454	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8180430	0		=			
ANR	8180455	ArrayIndexing	metrics [ 0 ]		8180430	0					
ANR	8180456	Identifier	metrics		8180430	0					
ANR	8180457	PrimaryExpression	0		8180430	1					
ANR	8180458	AssignmentExpression	metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8180430	1		=			
ANR	8180459	ArrayIndexing	metrics [ 1 ]		8180430	0					
ANR	8180460	Identifier	metrics		8180430	0					
ANR	8180461	PrimaryExpression	1		8180430	1					
ANR	8180462	AssignmentExpression	metrics [ 2 ] = metrics [ 3 ] = 0		8180430	1		=			
ANR	8180463	ArrayIndexing	metrics [ 2 ]		8180430	0					
ANR	8180464	Identifier	metrics		8180430	0					
ANR	8180465	PrimaryExpression	2		8180430	1					
ANR	8180466	AssignmentExpression	metrics [ 3 ] = 0		8180430	1		=			
ANR	8180467	ArrayIndexing	metrics [ 3 ]		8180430	0					
ANR	8180468	Identifier	metrics		8180430	0					
ANR	8180469	PrimaryExpression	3		8180430	1					
ANR	8180470	PrimaryExpression	0		8180430	1					
ANR	8180471	IfStatement	if ( cdata == 0 )		8180430	3					
ANR	8180472	Condition	cdata == 0	151:8:4574:4583	8180430	0	True				
ANR	8180473	EqualityExpression	cdata == 0		8180430	0		==			
ANR	8180474	Identifier	cdata		8180430	0					
ANR	8180475	PrimaryExpression	0		8180430	1					
ANR	8180476	ReturnStatement	return 1 ;	152:8:4594:4602	8180430	1	True				
ANR	8180477	PrimaryExpression	1		8180430	0					
ANR	8180478	IfStatement	if ( cdata [ 0 ] == 0 )		8180430	4					
ANR	8180479	Condition	cdata [ 0 ] == 0	154:8:4667:4679	8180430	0	True				
ANR	8180480	EqualityExpression	cdata [ 0 ] == 0		8180430	0		==			
ANR	8180481	ArrayIndexing	cdata [ 0 ]		8180430	0					
ANR	8180482	Identifier	cdata		8180430	0					
ANR	8180483	PrimaryExpression	0		8180430	1					
ANR	8180484	PrimaryExpression	0		8180430	1					
ANR	8180485	ReturnStatement	return 0 ;	155:8:4690:4698	8180430	1	True				
ANR	8180486	PrimaryExpression	0		8180430	0					
ANR	8180487	ExpressionStatement	metrics [ 0 ] = ( float ) pl_get_int16 ( cdata + 6 )	157:4:4705:4748	8180430	5	True				
ANR	8180488	AssignmentExpression	metrics [ 0 ] = ( float ) pl_get_int16 ( cdata + 6 )		8180430	0		=			
ANR	8180489	ArrayIndexing	metrics [ 0 ]		8180430	0					
ANR	8180490	Identifier	metrics		8180430	0					
ANR	8180491	PrimaryExpression	0		8180430	1					
ANR	8180492	CastExpression	( float ) pl_get_int16 ( cdata + 6 )		8180430	1					
ANR	8180493	CastTarget	float		8180430	0					
ANR	8180494	CallExpression	pl_get_int16 ( cdata + 6 )		8180430	1					
ANR	8180495	Callee	pl_get_int16		8180430	0					
ANR	8180496	Identifier	pl_get_int16		8180430	0					
ANR	8180497	ArgumentList	cdata + 6		8180430	1					
ANR	8180498	Argument	cdata + 6		8180430	0					
ANR	8180499	AdditiveExpression	cdata + 6		8180430	0		+			
ANR	8180500	Identifier	cdata		8180430	0					
ANR	8180501	PrimaryExpression	6		8180430	1					
ANR	8180502	ExpressionStatement	"pl_bitmap_char_width ( plfont , pgs , char_code , & width )"	158:4:4754:4806	8180430	6	True				
ANR	8180503	CallExpression	"pl_bitmap_char_width ( plfont , pgs , char_code , & width )"		8180430	0					
ANR	8180504	Callee	pl_bitmap_char_width		8180430	0					
ANR	8180505	Identifier	pl_bitmap_char_width		8180430	0					
ANR	8180506	ArgumentList	plfont		8180430	1					
ANR	8180507	Argument	plfont		8180430	0					
ANR	8180508	Identifier	plfont		8180430	0					
ANR	8180509	Argument	pgs		8180430	1					
ANR	8180510	Identifier	pgs		8180430	0					
ANR	8180511	Argument	char_code		8180430	2					
ANR	8180512	Identifier	char_code		8180430	0					
ANR	8180513	Argument	& width		8180430	3					
ANR	8180514	UnaryOperationExpression	& width		8180430	0					
ANR	8180515	UnaryOperator	&		8180430	0					
ANR	8180516	Identifier	width		8180430	1					
ANR	8180517	ExpressionStatement	metrics [ 2 ] = width . x	159:4:4812:4832	8180430	7	True				
ANR	8180518	AssignmentExpression	metrics [ 2 ] = width . x		8180430	0		=			
ANR	8180519	ArrayIndexing	metrics [ 2 ]		8180430	0					
ANR	8180520	Identifier	metrics		8180430	0					
ANR	8180521	PrimaryExpression	2		8180430	1					
ANR	8180522	MemberAccess	width . x		8180430	1					
ANR	8180523	Identifier	width		8180430	0					
ANR	8180524	Identifier	x		8180430	1					
ANR	8180525	ReturnStatement	return 0 ;	160:4:4838:4846	8180430	8	True				
ANR	8180526	PrimaryExpression	0		8180430	0					
ANR	8180527	ReturnType	static int		8180430	1					
ANR	8180528	Identifier	pl_bitmap_char_metrics		8180430	2					
ANR	8180529	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8180430	3					
ANR	8180530	Parameter	const pl_font_t * plfont	142:23:4232:4255	8180430	0	True				
ANR	8180531	ParameterType	const pl_font_t *		8180430	0					
ANR	8180532	Identifier	plfont		8180430	1					
ANR	8180533	Parameter	const void * pgs	142:49:4258:4272	8180430	1	True				
ANR	8180534	ParameterType	const void *		8180430	0					
ANR	8180535	Identifier	pgs		8180430	1					
ANR	8180536	Parameter	gs_char char_code	143:23:4298:4314	8180430	2	True				
ANR	8180537	ParameterType	gs_char		8180430	0					
ANR	8180538	Identifier	char_code		8180430	1					
ANR	8180539	Parameter	float metrics [ 4 ]	143:42:4317:4332	8180430	3	True				
ANR	8180540	ParameterType	float [ 4 ]		8180430	0					
ANR	8180541	Identifier	metrics		8180430	1					
ANR	8180542	CFGEntryNode	ENTRY		8180430		True				
ANR	8180543	CFGExitNode	EXIT		8180430		True				
ANR	8180544	Symbol	pl_font_lookup_glyph		8180430						
ANR	8180545	Symbol	char_code		8180430						
ANR	8180546	Symbol	& width		8180430						
ANR	8180547	Symbol	plfont		8180430						
ANR	8180548	Symbol	* pl_font_lookup_glyph		8180430						
ANR	8180549	Symbol	cdata		8180430						
ANR	8180550	Symbol	* metrics		8180430						
ANR	8180551	Symbol	* cdata		8180430						
ANR	8180552	Symbol	pl_get_int16		8180430						
ANR	8180553	Symbol	width		8180430						
ANR	8180554	Symbol	width . x		8180430						
ANR	8180555	Symbol	metrics		8180430						
ANR	8180556	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8180430						
ANR	8180557	Symbol	pgs		8180430						
ANR	8180558	Function	alloc_bold_lines	173:0:5359:5568							
ANR	8180559	FunctionDef	"alloc_bold_lines (gs_memory_t * mem , uint width , int bold , client_name_t cname)"		8180558	0					
ANR	8180560	CompoundStatement		175:0:5452:5568	8180558	0					
ANR	8180561	ReturnStatement	"return gs_alloc_byte_array ( mem , 2 + bold , bitmap_raster ( width + bold ) , cname ) ;"	176:4:5458:5566	8180558	0	True				
ANR	8180562	CallExpression	"gs_alloc_byte_array ( mem , 2 + bold , bitmap_raster ( width + bold ) , cname )"		8180558	0					
ANR	8180563	Callee	gs_alloc_byte_array		8180558	0					
ANR	8180564	Identifier	gs_alloc_byte_array		8180558	0					
ANR	8180565	ArgumentList	mem		8180558	1					
ANR	8180566	Argument	mem		8180558	0					
ANR	8180567	Identifier	mem		8180558	0					
ANR	8180568	Argument	2 + bold		8180558	1					
ANR	8180569	AdditiveExpression	2 + bold		8180558	0		+			
ANR	8180570	PrimaryExpression	2		8180558	0					
ANR	8180571	Identifier	bold		8180558	1					
ANR	8180572	Argument	bitmap_raster ( width + bold )		8180558	2					
ANR	8180573	CallExpression	bitmap_raster ( width + bold )		8180558	0					
ANR	8180574	Callee	bitmap_raster		8180558	0					
ANR	8180575	Identifier	bitmap_raster		8180558	0					
ANR	8180576	ArgumentList	width + bold		8180558	1					
ANR	8180577	Argument	width + bold		8180558	0					
ANR	8180578	AdditiveExpression	width + bold		8180558	0		+			
ANR	8180579	Identifier	width		8180558	0					
ANR	8180580	Identifier	bold		8180558	1					
ANR	8180581	Argument	cname		8180558	3					
ANR	8180582	Identifier	cname		8180558	0					
ANR	8180583	ReturnType	static byte *		8180558	1					
ANR	8180584	Identifier	alloc_bold_lines		8180558	2					
ANR	8180585	ParameterList	"gs_memory_t * mem , uint width , int bold , client_name_t cname"		8180558	3					
ANR	8180586	Parameter	gs_memory_t * mem	174:17:5390:5406	8180558	0	True				
ANR	8180587	ParameterType	gs_memory_t *		8180558	0					
ANR	8180588	Identifier	mem		8180558	1					
ANR	8180589	Parameter	uint width	174:36:5409:5418	8180558	1	True				
ANR	8180590	ParameterType	uint		8180558	0					
ANR	8180591	Identifier	width		8180558	1					
ANR	8180592	Parameter	int bold	174:48:5421:5428	8180558	2	True				
ANR	8180593	ParameterType	int		8180558	0					
ANR	8180594	Identifier	bold		8180558	1					
ANR	8180595	Parameter	client_name_t cname	174:58:5431:5449	8180558	3	True				
ANR	8180596	ParameterType	client_name_t		8180558	0					
ANR	8180597	Identifier	cname		8180558	1					
ANR	8180598	CFGEntryNode	ENTRY		8180558		True				
ANR	8180599	CFGExitNode	EXIT		8180558		True				
ANR	8180600	Symbol	mem		8180558						
ANR	8180601	Symbol	width		8180558						
ANR	8180602	Symbol	cname		8180558						
ANR	8180603	Symbol	bold		8180558						
ANR	8180604	Symbol	gs_alloc_byte_array		8180558						
ANR	8180605	Symbol	bitmap_raster		8180558						
ANR	8180606	Function	bits_merge	181:0:5644:6018							
ANR	8180607	FunctionDef	"bits_merge (byte * dest , const byte * src , uint nbytes)"		8180606	0					
ANR	8180608	CompoundStatement		183:0:5711:6018	8180606	0					
ANR	8180609	IdentifierDeclStatement	long * dp = ( long * ) dest ;	184:4:5717:5740	8180606	0	True				
ANR	8180610	IdentifierDecl	* dp = ( long * ) dest		8180606	0					
ANR	8180611	IdentifierDeclType	long *		8180606	0					
ANR	8180612	Identifier	dp		8180606	1					
ANR	8180613	AssignmentExpression	* dp = ( long * ) dest		8180606	2		=			
ANR	8180614	Identifier	dp		8180606	0					
ANR	8180615	CastExpression	( long * ) dest		8180606	1					
ANR	8180616	CastTarget	long *		8180606	0					
ANR	8180617	Identifier	dest		8180606	1					
ANR	8180618	IdentifierDeclStatement	const long * sp = ( const long * ) src ;	185:4:5746:5780	8180606	1	True				
ANR	8180619	IdentifierDecl	* sp = ( const long * ) src		8180606	0					
ANR	8180620	IdentifierDeclType	const long *		8180606	0					
ANR	8180621	Identifier	sp		8180606	1					
ANR	8180622	AssignmentExpression	* sp = ( const long * ) src		8180606	2		=			
ANR	8180623	Identifier	sp		8180606	0					
ANR	8180624	CastExpression	( const long * ) src		8180606	1					
ANR	8180625	CastTarget	const long *		8180606	0					
ANR	8180626	Identifier	src		8180606	1					
ANR	8180627	IdentifierDeclStatement	uint n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG ;	186:4:5786:5847	8180606	2	True				
ANR	8180628	IdentifierDecl	n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		8180606	0					
ANR	8180629	IdentifierDeclType	uint		8180606	0					
ANR	8180630	Identifier	n		8180606	1					
ANR	8180631	AssignmentExpression	n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		8180606	2		=			
ANR	8180632	Identifier	n		8180606	0					
ANR	8180633	ShiftExpression	( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		8180606	1		>>			
ANR	8180634	AdditiveExpression	nbytes + sizeof ( long ) - 1		8180606	0		+			
ANR	8180635	Identifier	nbytes		8180606	0					
ANR	8180636	AdditiveExpression	sizeof ( long ) - 1		8180606	1		-			
ANR	8180637	SizeofExpression	sizeof ( long )		8180606	0					
ANR	8180638	Sizeof	sizeof		8180606	0					
ANR	8180639	SizeofOperand	long		8180606	1					
ANR	8180640	PrimaryExpression	1		8180606	1					
ANR	8180641	Identifier	ARCH_LOG2_SIZEOF_LONG		8180606	1					
ANR	8180642	ForStatement	"for ( ; n >= 4 ; sp += 4 , dp += 4 , n -= 4 )"		8180606	3					
ANR	8180643	Condition	n >= 4	188:11:5861:5866	8180606	0	True				
ANR	8180644	RelationalExpression	n >= 4		8180606	0		>=			
ANR	8180645	Identifier	n		8180606	0					
ANR	8180646	PrimaryExpression	4		8180606	1					
ANR	8180647	Expression	"sp += 4 , dp += 4 , n -= 4"	188:19:5869:5892	8180606	1	True				
ANR	8180648	AssignmentExpression	sp += 4		8180606	0		+=			
ANR	8180649	Identifier	sp		8180606	0					
ANR	8180650	PrimaryExpression	4		8180606	1					
ANR	8180651	Expression	"dp += 4 , n -= 4"		8180606	1					
ANR	8180652	AssignmentExpression	dp += 4		8180606	0		+=			
ANR	8180653	Identifier	dp		8180606	0					
ANR	8180654	PrimaryExpression	4		8180606	1					
ANR	8180655	AssignmentExpression	n -= 4		8180606	1		-=			
ANR	8180656	Identifier	n		8180606	0					
ANR	8180657	PrimaryExpression	4		8180606	1					
ANR	8180658	ExpressionStatement	"dp [ 0 ] |= sp [ 0 ] , dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"	189:8:5903:5965	8180606	2	True				
ANR	8180659	Expression	"dp [ 0 ] |= sp [ 0 ] , dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		8180606	0					
ANR	8180660	AssignmentExpression	dp [ 0 ] |= sp [ 0 ]		8180606	0		|=			
ANR	8180661	ArrayIndexing	dp [ 0 ]		8180606	0					
ANR	8180662	Identifier	dp		8180606	0					
ANR	8180663	PrimaryExpression	0		8180606	1					
ANR	8180664	ArrayIndexing	sp [ 0 ]		8180606	1					
ANR	8180665	Identifier	sp		8180606	0					
ANR	8180666	PrimaryExpression	0		8180606	1					
ANR	8180667	Expression	"dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		8180606	1					
ANR	8180668	AssignmentExpression	dp [ 1 ] |= sp [ 1 ]		8180606	0		|=			
ANR	8180669	ArrayIndexing	dp [ 1 ]		8180606	0					
ANR	8180670	Identifier	dp		8180606	0					
ANR	8180671	PrimaryExpression	1		8180606	1					
ANR	8180672	ArrayIndexing	sp [ 1 ]		8180606	1					
ANR	8180673	Identifier	sp		8180606	0					
ANR	8180674	PrimaryExpression	1		8180606	1					
ANR	8180675	Expression	"dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		8180606	1					
ANR	8180676	AssignmentExpression	dp [ 2 ] |= sp [ 2 ]		8180606	0		|=			
ANR	8180677	ArrayIndexing	dp [ 2 ]		8180606	0					
ANR	8180678	Identifier	dp		8180606	0					
ANR	8180679	PrimaryExpression	2		8180606	1					
ANR	8180680	ArrayIndexing	sp [ 2 ]		8180606	1					
ANR	8180681	Identifier	sp		8180606	0					
ANR	8180682	PrimaryExpression	2		8180606	1					
ANR	8180683	AssignmentExpression	dp [ 3 ] |= sp [ 3 ]		8180606	1		|=			
ANR	8180684	ArrayIndexing	dp [ 3 ]		8180606	0					
ANR	8180685	Identifier	dp		8180606	0					
ANR	8180686	PrimaryExpression	3		8180606	1					
ANR	8180687	ArrayIndexing	sp [ 3 ]		8180606	1					
ANR	8180688	Identifier	sp		8180606	0					
ANR	8180689	PrimaryExpression	3		8180606	1					
ANR	8180690	ForStatement	"for ( ; n ; ++ sp , ++ dp , -- n )"		8180606	4					
ANR	8180691	Condition	n	190:11:5978:5978	8180606	0	True				
ANR	8180692	Identifier	n		8180606	0					
ANR	8180693	Expression	"++ sp , ++ dp , -- n"	190:14:5981:5995	8180606	1	True				
ANR	8180694	UnaryExpression	++ sp		8180606	0					
ANR	8180695	IncDec	++		8180606	0					
ANR	8180696	Identifier	sp		8180606	1					
ANR	8180697	Expression	"++ dp , -- n"		8180606	1					
ANR	8180698	UnaryExpression	++ dp		8180606	0					
ANR	8180699	IncDec	++		8180606	0					
ANR	8180700	Identifier	dp		8180606	1					
ANR	8180701	UnaryExpression	-- n		8180606	1					
ANR	8180702	IncDec	--		8180606	0					
ANR	8180703	Identifier	n		8180606	1					
ANR	8180704	ExpressionStatement	* dp |= * sp	191:8:6006:6016	8180606	2	True				
ANR	8180705	AssignmentExpression	* dp |= * sp		8180606	0		|=			
ANR	8180706	UnaryOperationExpression	* dp		8180606	0					
ANR	8180707	UnaryOperator	*		8180606	0					
ANR	8180708	Identifier	dp		8180606	1					
ANR	8180709	UnaryOperationExpression	* sp		8180606	1					
ANR	8180710	UnaryOperator	*		8180606	0					
ANR	8180711	Identifier	sp		8180606	1					
ANR	8180712	ReturnType	static void		8180606	1					
ANR	8180713	Identifier	bits_merge		8180606	2					
ANR	8180714	ParameterList	"byte * dest , const byte * src , uint nbytes"		8180606	3					
ANR	8180715	Parameter	byte * dest	182:11:5667:5677	8180606	0	True				
ANR	8180716	ParameterType	byte *		8180606	0					
ANR	8180717	Identifier	dest		8180606	1					
ANR	8180718	Parameter	const byte * src	182:24:5680:5695	8180606	1	True				
ANR	8180719	ParameterType	const byte *		8180606	0					
ANR	8180720	Identifier	src		8180606	1					
ANR	8180721	Parameter	uint nbytes	182:42:5698:5708	8180606	2	True				
ANR	8180722	ParameterType	uint		8180606	0					
ANR	8180723	Identifier	nbytes		8180606	1					
ANR	8180724	CFGEntryNode	ENTRY		8180606		True				
ANR	8180725	CFGExitNode	EXIT		8180606		True				
ANR	8180726	Symbol	* sp		8180606						
ANR	8180727	Symbol	* dp		8180606						
ANR	8180728	Symbol	src		8180606						
ANR	8180729	Symbol	dest		8180606						
ANR	8180730	Symbol	dp		8180606						
ANR	8180731	Symbol	sp		8180606						
ANR	8180732	Symbol	ARCH_LOG2_SIZEOF_LONG		8180606						
ANR	8180733	Symbol	n		8180606						
ANR	8180734	Symbol	nbytes		8180606						
ANR	8180735	Function	bits_smear_horizontally	196:0:6151:8778							
ANR	8180736	FunctionDef	"bits_smear_horizontally (byte * dest , const byte * src , uint width , uint smear_width)"		8180735	0					
ANR	8180737	CompoundStatement		199:0:6272:8778	8180735	0					
ANR	8180738	IdentifierDeclStatement	uint bits_on = 0 ;	200:4:6278:6294	8180735	0	True				
ANR	8180739	IdentifierDecl	bits_on = 0		8180735	0					
ANR	8180740	IdentifierDeclType	uint		8180735	0					
ANR	8180741	Identifier	bits_on		8180735	1					
ANR	8180742	AssignmentExpression	bits_on = 0		8180735	2		=			
ANR	8180743	Identifier	bits_on		8180735	0					
ANR	8180744	PrimaryExpression	0		8180735	1					
ANR	8180745	IdentifierDeclStatement	const byte * sp = src ;	201:4:6300:6320	8180735	1	True				
ANR	8180746	IdentifierDecl	* sp = src		8180735	0					
ANR	8180747	IdentifierDeclType	const byte *		8180735	0					
ANR	8180748	Identifier	sp		8180735	1					
ANR	8180749	AssignmentExpression	* sp = src		8180735	2		=			
ANR	8180750	Identifier	src		8180735	0					
ANR	8180751	Identifier	src		8180735	1					
ANR	8180752	IdentifierDeclStatement	uint sbyte = * sp ;	202:4:6326:6342	8180735	2	True				
ANR	8180753	IdentifierDecl	sbyte = * sp		8180735	0					
ANR	8180754	IdentifierDeclType	uint		8180735	0					
ANR	8180755	Identifier	sbyte		8180735	1					
ANR	8180756	AssignmentExpression	sbyte = * sp		8180735	2		=			
ANR	8180757	Identifier	sbyte		8180735	0					
ANR	8180758	UnaryOperationExpression	* sp		8180735	1					
ANR	8180759	UnaryOperator	*		8180735	0					
ANR	8180760	Identifier	sp		8180735	1					
ANR	8180761	IdentifierDeclStatement	byte * dp = dest ;	203:4:6348:6363	8180735	3	True				
ANR	8180762	IdentifierDecl	* dp = dest		8180735	0					
ANR	8180763	IdentifierDeclType	byte *		8180735	0					
ANR	8180764	Identifier	dp		8180735	1					
ANR	8180765	AssignmentExpression	* dp = dest		8180735	2		=			
ANR	8180766	Identifier	dest		8180735	0					
ANR	8180767	Identifier	dest		8180735	1					
ANR	8180768	IdentifierDeclStatement	uint dbyte = sbyte ;	204:4:6369:6387	8180735	4	True				
ANR	8180769	IdentifierDecl	dbyte = sbyte		8180735	0					
ANR	8180770	IdentifierDeclType	uint		8180735	0					
ANR	8180771	Identifier	dbyte		8180735	1					
ANR	8180772	AssignmentExpression	dbyte = sbyte		8180735	2		=			
ANR	8180773	Identifier	sbyte		8180735	0					
ANR	8180774	Identifier	sbyte		8180735	1					
ANR	8180775	IdentifierDeclStatement	uint sdmask = 0x80 ;	205:4:6393:6411	8180735	5	True				
ANR	8180776	IdentifierDecl	sdmask = 0x80		8180735	0					
ANR	8180777	IdentifierDeclType	uint		8180735	0					
ANR	8180778	Identifier	sdmask		8180735	1					
ANR	8180779	AssignmentExpression	sdmask = 0x80		8180735	2		=			
ANR	8180780	Identifier	sdmask		8180735	0					
ANR	8180781	PrimaryExpression	0x80		8180735	1					
ANR	8180782	IdentifierDeclStatement	const byte * zp = src ;	206:4:6417:6437	8180735	6	True				
ANR	8180783	IdentifierDecl	* zp = src		8180735	0					
ANR	8180784	IdentifierDeclType	const byte *		8180735	0					
ANR	8180785	Identifier	zp		8180735	1					
ANR	8180786	AssignmentExpression	* zp = src		8180735	2		=			
ANR	8180787	Identifier	src		8180735	0					
ANR	8180788	Identifier	src		8180735	1					
ANR	8180789	IdentifierDeclStatement	uint zmask = 0x80 ;	207:4:6443:6460	8180735	7	True				
ANR	8180790	IdentifierDecl	zmask = 0x80		8180735	0					
ANR	8180791	IdentifierDeclType	uint		8180735	0					
ANR	8180792	Identifier	zmask		8180735	1					
ANR	8180793	AssignmentExpression	zmask = 0x80		8180735	2		=			
ANR	8180794	Identifier	zmask		8180735	0					
ANR	8180795	PrimaryExpression	0x80		8180735	1					
ANR	8180796	IdentifierDeclStatement	uint i = 0 ;	208:4:6466:6476	8180735	8	True				
ANR	8180797	IdentifierDecl	i = 0		8180735	0					
ANR	8180798	IdentifierDeclType	uint		8180735	0					
ANR	8180799	Identifier	i		8180735	1					
ANR	8180800	AssignmentExpression	i = 0		8180735	2		=			
ANR	8180801	Identifier	i		8180735	0					
ANR	8180802	PrimaryExpression	0		8180735	1					
ANR	8180803	CompoundStatement		14:8:266:301	8180735	9					
ANR	8180804	IdentifierDeclStatement	"uint stop = min ( smear_width , width ) ;"	212:8:6539:6574	8180735	0	True				
ANR	8180805	IdentifierDecl	"stop = min ( smear_width , width )"		8180735	0					
ANR	8180806	IdentifierDeclType	uint		8180735	0					
ANR	8180807	Identifier	stop		8180735	1					
ANR	8180808	AssignmentExpression	"stop = min ( smear_width , width )"		8180735	2		=			
ANR	8180809	Identifier	stop		8180735	0					
ANR	8180810	CallExpression	"min ( smear_width , width )"		8180735	1					
ANR	8180811	Callee	min		8180735	0					
ANR	8180812	Identifier	min		8180735	0					
ANR	8180813	ArgumentList	smear_width		8180735	1					
ANR	8180814	Argument	smear_width		8180735	0					
ANR	8180815	Identifier	smear_width		8180735	0					
ANR	8180816	Argument	width		8180735	1					
ANR	8180817	Identifier	width		8180735	0					
ANR	8180818	ForStatement	for ( ; i < stop ; ++ i )		8180735	1					
ANR	8180819	Condition	i < stop	214:15:6592:6599	8180735	0	True				
ANR	8180820	RelationalExpression	i < stop		8180735	0		<			
ANR	8180821	Identifier	i		8180735	0					
ANR	8180822	Identifier	stop		8180735	1					
ANR	8180823	UnaryExpression	++ i	214:25:6602:6604	8180735	1	True				
ANR	8180824	IncDec	++		8180735	0					
ANR	8180825	Identifier	i		8180735	1					
ANR	8180826	CompoundStatement		16:30:334:334	8180735	2					
ANR	8180827	IfStatement	if ( sbyte & sdmask )		8180735	0					
ANR	8180828	Condition	sbyte & sdmask	215:16:6625:6638	8180735	0	True				
ANR	8180829	BitAndExpression	sbyte & sdmask		8180735	0		&			
ANR	8180830	Identifier	sbyte		8180735	0					
ANR	8180831	Identifier	sdmask		8180735	1					
ANR	8180832	ExpressionStatement	bits_on ++	216:16:6657:6666	8180735	1	True				
ANR	8180833	PostIncDecOperationExpression	bits_on ++		8180735	0					
ANR	8180834	Identifier	bits_on		8180735	0					
ANR	8180835	IncDec	++		8180735	1					
ANR	8180836	ElseStatement	else		8180735	0					
ANR	8180837	IfStatement	if ( bits_on )		8180735	0					
ANR	8180838	Condition	bits_on	217:21:6689:6695	8180735	0	True				
ANR	8180839	Identifier	bits_on		8180735	0					
ANR	8180840	ExpressionStatement	dbyte |= sdmask	218:16:6714:6729	8180735	1	True				
ANR	8180841	AssignmentExpression	dbyte |= sdmask		8180735	0		|=			
ANR	8180842	Identifier	dbyte		8180735	0					
ANR	8180843	Identifier	sdmask		8180735	1					
ANR	8180844	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		8180735	1					
ANR	8180845	Condition	( sdmask >>= 1 ) == 0	219:16:6747:6765	8180735	0	True				
ANR	8180846	EqualityExpression	( sdmask >>= 1 ) == 0		8180735	0		==			
ANR	8180847	AssignmentExpression	sdmask >>= 1		8180735	0		>>=			
ANR	8180848	Identifier	sdmask		8180735	0					
ANR	8180849	PrimaryExpression	1		8180735	1					
ANR	8180850	PrimaryExpression	0		8180735	1					
ANR	8180851	ExpressionStatement	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = sbyte = * ++ sp"	220:16:6784:6835	8180735	1	True				
ANR	8180852	Expression	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = sbyte = * ++ sp"		8180735	0					
ANR	8180853	AssignmentExpression	sdmask = 0x80		8180735	0		=			
ANR	8180854	Identifier	sdmask		8180735	0					
ANR	8180855	PrimaryExpression	0x80		8180735	1					
ANR	8180856	Expression	"* dp ++ = dbyte , dbyte = sbyte = * ++ sp"		8180735	1					
ANR	8180857	AssignmentExpression	* dp ++ = dbyte		8180735	0		=			
ANR	8180858	UnaryOperationExpression	* dp ++		8180735	0					
ANR	8180859	UnaryOperator	*		8180735	0					
ANR	8180860	PostIncDecOperationExpression	dp ++		8180735	1					
ANR	8180861	Identifier	dp		8180735	0					
ANR	8180862	IncDec	++		8180735	1					
ANR	8180863	Identifier	dbyte		8180735	1					
ANR	8180864	AssignmentExpression	dbyte = sbyte = * ++ sp		8180735	1		=			
ANR	8180865	Identifier	dbyte		8180735	0					
ANR	8180866	AssignmentExpression	sbyte = * ++ sp		8180735	1		=			
ANR	8180867	Identifier	sbyte		8180735	0					
ANR	8180868	UnaryOperationExpression	* ++ sp		8180735	1					
ANR	8180869	UnaryOperator	*		8180735	0					
ANR	8180870	UnaryExpression	++ sp		8180735	1					
ANR	8180871	IncDec	++		8180735	0					
ANR	8180872	Identifier	sp		8180735	1					
ANR	8180873	CompoundStatement		27:4:638:638	8180735	10					
ANR	8180874	ForStatement	for ( ; i < width ; ++ i )		8180735	0					
ANR	8180875	Condition	i < width	226:15:6928:6936	8180735	0	True				
ANR	8180876	RelationalExpression	i < width		8180735	0		<			
ANR	8180877	Identifier	i		8180735	0					
ANR	8180878	Identifier	width		8180735	1					
ANR	8180879	UnaryExpression	++ i	226:26:6939:6941	8180735	1	True				
ANR	8180880	IncDec	++		8180735	0					
ANR	8180881	Identifier	i		8180735	1					
ANR	8180882	CompoundStatement		28:31:671:671	8180735	2					
ANR	8180883	IfStatement	if ( sbyte & sdmask )		8180735	0					
ANR	8180884	Condition	sbyte & sdmask	227:16:6962:6975	8180735	0	True				
ANR	8180885	BitAndExpression	sbyte & sdmask		8180735	0		&			
ANR	8180886	Identifier	sbyte		8180735	0					
ANR	8180887	Identifier	sdmask		8180735	1					
ANR	8180888	ExpressionStatement	bits_on ++	228:16:6994:7003	8180735	1	True				
ANR	8180889	PostIncDecOperationExpression	bits_on ++		8180735	0					
ANR	8180890	Identifier	bits_on		8180735	0					
ANR	8180891	IncDec	++		8180735	1					
ANR	8180892	ElseStatement	else		8180735	0					
ANR	8180893	IfStatement	if ( bits_on )		8180735	0					
ANR	8180894	Condition	bits_on	229:21:7026:7032	8180735	0	True				
ANR	8180895	Identifier	bits_on		8180735	0					
ANR	8180896	ExpressionStatement	dbyte |= sdmask	230:16:7051:7066	8180735	1	True				
ANR	8180897	AssignmentExpression	dbyte |= sdmask		8180735	0		|=			
ANR	8180898	Identifier	dbyte		8180735	0					
ANR	8180899	Identifier	sdmask		8180735	1					
ANR	8180900	IfStatement	if ( * zp & zmask )		8180735	1					
ANR	8180901	Condition	* zp & zmask	231:16:7084:7094	8180735	0	True				
ANR	8180902	BitAndExpression	* zp & zmask		8180735	0		&			
ANR	8180903	UnaryOperationExpression	* zp		8180735	0					
ANR	8180904	UnaryOperator	*		8180735	0					
ANR	8180905	Identifier	zp		8180735	1					
ANR	8180906	Identifier	zmask		8180735	1					
ANR	8180907	ExpressionStatement	-- bits_on	232:16:7113:7122	8180735	1	True				
ANR	8180908	UnaryExpression	-- bits_on		8180735	0					
ANR	8180909	IncDec	--		8180735	0					
ANR	8180910	Identifier	bits_on		8180735	1					
ANR	8180911	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		8180735	2					
ANR	8180912	Condition	( sdmask >>= 1 ) == 0	233:16:7140:7158	8180735	0	True				
ANR	8180913	EqualityExpression	( sdmask >>= 1 ) == 0		8180735	0		==			
ANR	8180914	AssignmentExpression	sdmask >>= 1		8180735	0		>>=			
ANR	8180915	Identifier	sdmask		8180735	0					
ANR	8180916	PrimaryExpression	1		8180735	1					
ANR	8180917	PrimaryExpression	0		8180735	1					
ANR	8180918	CompoundStatement		35:37:888:888	8180735	1					
ANR	8180919	ExpressionStatement	sdmask = 0x80	234:16:7179:7192	8180735	0	True				
ANR	8180920	AssignmentExpression	sdmask = 0x80		8180735	0		=			
ANR	8180921	Identifier	sdmask		8180735	0					
ANR	8180922	PrimaryExpression	0x80		8180735	1					
ANR	8180923	ExpressionStatement	* dp ++ = dbyte	235:16:7210:7223	8180735	1	True				
ANR	8180924	AssignmentExpression	* dp ++ = dbyte		8180735	0		=			
ANR	8180925	UnaryOperationExpression	* dp ++		8180735	0					
ANR	8180926	UnaryOperator	*		8180735	0					
ANR	8180927	PostIncDecOperationExpression	dp ++		8180735	1					
ANR	8180928	Identifier	dp		8180735	0					
ANR	8180929	IncDec	++		8180735	1					
ANR	8180930	Identifier	dbyte		8180735	1					
ANR	8180931	Label	on :	236:14:7239:7241	8180735	2	True				
ANR	8180932	Identifier	on		8180735	0					
ANR	8180933	SwitchStatement	switch ( ( dbyte = sbyte = * ++ sp ) )		8180735	3					
ANR	8180934	Condition	dbyte = sbyte = * ++ sp	236:25:7250:7272	8180735	0	True				
ANR	8180935	AssignmentExpression	dbyte = sbyte = * ++ sp		8180735	0		=			
ANR	8180936	Identifier	dbyte		8180735	0					
ANR	8180937	AssignmentExpression	sbyte = * ++ sp		8180735	1		=			
ANR	8180938	Identifier	sbyte		8180735	0					
ANR	8180939	UnaryOperationExpression	* ++ sp		8180735	1					
ANR	8180940	UnaryOperator	*		8180735	0					
ANR	8180941	UnaryExpression	++ sp		8180735	1					
ANR	8180942	IncDec	++		8180735	0					
ANR	8180943	Identifier	sp		8180735	1					
ANR	8180944	CompoundStatement		38:50:1002:1002	8180735	1					
ANR	8180945	Label	case 0xff :	237:20:7297:7306	8180735	0	True				
ANR	8180946	IfStatement	if ( width - i <= 8 )		8180735	1					
ANR	8180947	Condition	width - i <= 8	238:28:7336:7349	8180735	0	True				
ANR	8180948	RelationalExpression	width - i <= 8		8180735	0		<=			
ANR	8180949	AdditiveExpression	width - i		8180735	0		-			
ANR	8180950	Identifier	width		8180735	0					
ANR	8180951	Identifier	i		8180735	1					
ANR	8180952	PrimaryExpression	8		8180735	1					
ANR	8180953	BreakStatement	break ;	239:28:7380:7385	8180735	1	True				
ANR	8180954	ExpressionStatement	* dp ++ = 0xff	240:24:7411:7423	8180735	2	True				
ANR	8180955	AssignmentExpression	* dp ++ = 0xff		8180735	0		=			
ANR	8180956	UnaryOperationExpression	* dp ++		8180735	0					
ANR	8180957	UnaryOperator	*		8180735	0					
ANR	8180958	PostIncDecOperationExpression	dp ++		8180735	1					
ANR	8180959	Identifier	dp		8180735	0					
ANR	8180960	IncDec	++		8180735	1					
ANR	8180961	PrimaryExpression	0xff		8180735	1					
ANR	8180962	ExpressionStatement	bits_on += 8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]	241:24:7449:7596	8180735	3	True				
ANR	8180963	AssignmentExpression	bits_on += 8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		8180735	0		+=			
ANR	8180964	Identifier	bits_on		8180735	0					
ANR	8180965	AdditiveExpression	8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		8180735	1		-			
ANR	8180966	PrimaryExpression	8		8180735	0					
ANR	8180967	ArrayIndexing	byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		8180735	1					
ANR	8180968	Identifier	byte_count_bits		8180735	0					
ANR	8180969	AdditiveExpression	( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask )		8180735	1		+			
ANR	8180970	BitAndExpression	* zp & ( zmask - 1 )		8180735	0		&			
ANR	8180971	UnaryOperationExpression	* zp		8180735	0					
ANR	8180972	UnaryOperator	*		8180735	0					
ANR	8180973	Identifier	zp		8180735	1					
ANR	8180974	AdditiveExpression	zmask - 1		8180735	1		-			
ANR	8180975	Identifier	zmask		8180735	0					
ANR	8180976	PrimaryExpression	1		8180735	1					
ANR	8180977	BitAndExpression	zp [ 1 ] & - ( int ) zmask		8180735	1		&			
ANR	8180978	ArrayIndexing	zp [ 1 ]		8180735	0					
ANR	8180979	Identifier	zp		8180735	0					
ANR	8180980	PrimaryExpression	1		8180735	1					
ANR	8180981	UnaryOperationExpression	- ( int ) zmask		8180735	1					
ANR	8180982	UnaryOperator	-		8180735	0					
ANR	8180983	CastExpression	( int ) zmask		8180735	1					
ANR	8180984	CastTarget	int		8180735	0					
ANR	8180985	Identifier	zmask		8180735	1					
ANR	8180986	ExpressionStatement	++ zp	244:24:7622:7626	8180735	4	True				
ANR	8180987	UnaryExpression	++ zp		8180735	0					
ANR	8180988	IncDec	++		8180735	0					
ANR	8180989	Identifier	zp		8180735	1					
ANR	8180990	ExpressionStatement	i += 8	245:24:7652:7658	8180735	5	True				
ANR	8180991	AssignmentExpression	i += 8		8180735	0		+=			
ANR	8180992	Identifier	i		8180735	0					
ANR	8180993	PrimaryExpression	8		8180735	1					
ANR	8180994	GotoStatement	goto on ;	246:24:7684:7691	8180735	6	True				
ANR	8180995	Identifier	on		8180735	0					
ANR	8180996	Label	case 0 :	247:20:7713:7719	8180735	7	True				
ANR	8180997	IfStatement	if ( bits_on || width - i <= 8 )		8180735	8					
ANR	8180998	Condition	bits_on || width - i <= 8	248:28:7749:7773	8180735	0	True				
ANR	8180999	OrExpression	bits_on || width - i <= 8		8180735	0		||			
ANR	8181000	Identifier	bits_on		8180735	0					
ANR	8181001	RelationalExpression	width - i <= 8		8180735	1		<=			
ANR	8181002	AdditiveExpression	width - i		8180735	0		-			
ANR	8181003	Identifier	width		8180735	0					
ANR	8181004	Identifier	i		8180735	1					
ANR	8181005	PrimaryExpression	8		8180735	1					
ANR	8181006	BreakStatement	break ;	249:28:7804:7809	8180735	1	True				
ANR	8181007	ExpressionStatement	* dp ++ = 0	250:24:7835:7844	8180735	9	True				
ANR	8181008	AssignmentExpression	* dp ++ = 0		8180735	0		=			
ANR	8181009	UnaryOperationExpression	* dp ++		8180735	0					
ANR	8181010	UnaryOperator	*		8180735	0					
ANR	8181011	PostIncDecOperationExpression	dp ++		8180735	1					
ANR	8181012	Identifier	dp		8180735	0					
ANR	8181013	IncDec	++		8180735	1					
ANR	8181014	PrimaryExpression	0		8180735	1					
ANR	8181015	ExpressionStatement	++ zp	253:24:8011:8015	8180735	10	True				
ANR	8181016	UnaryExpression	++ zp		8180735	0					
ANR	8181017	IncDec	++		8180735	0					
ANR	8181018	Identifier	zp		8180735	1					
ANR	8181019	ExpressionStatement	i += 8	254:24:8041:8047	8180735	11	True				
ANR	8181020	AssignmentExpression	i += 8		8180735	0		+=			
ANR	8181021	Identifier	i		8180735	0					
ANR	8181022	PrimaryExpression	8		8180735	1					
ANR	8181023	GotoStatement	goto on ;	255:24:8073:8080	8180735	12	True				
ANR	8181024	Identifier	on		8180735	0					
ANR	8181025	Label	default :	256:20:8102:8109	8180735	13	True				
ANR	8181026	Identifier	default		8180735	0					
ANR	8181027	ExpressionStatement		257:24:8135:8135	8180735	14	True				
ANR	8181028	IfStatement	if ( ( zmask >>= 1 ) == 0 )		8180735	3					
ANR	8181029	Condition	( zmask >>= 1 ) == 0	260:16:8185:8202	8180735	0	True				
ANR	8181030	EqualityExpression	( zmask >>= 1 ) == 0		8180735	0		==			
ANR	8181031	AssignmentExpression	zmask >>= 1		8180735	0		>>=			
ANR	8181032	Identifier	zmask		8180735	0					
ANR	8181033	PrimaryExpression	1		8180735	1					
ANR	8181034	PrimaryExpression	0		8180735	1					
ANR	8181035	ExpressionStatement	"zmask = 0x80 , ++ zp"	261:16:8221:8239	8180735	1	True				
ANR	8181036	Expression	"zmask = 0x80 , ++ zp"		8180735	0					
ANR	8181037	AssignmentExpression	zmask = 0x80		8180735	0		=			
ANR	8181038	Identifier	zmask		8180735	0					
ANR	8181039	PrimaryExpression	0x80		8180735	1					
ANR	8181040	UnaryExpression	++ zp		8180735	1					
ANR	8181041	IncDec	++		8180735	0					
ANR	8181042	Identifier	zp		8180735	1					
ANR	8181043	CompoundStatement		70:8:2097:2128	8180735	11					
ANR	8181044	IdentifierDeclStatement	uint stop = width + smear_width ;	268:8:8370:8401	8180735	0	True				
ANR	8181045	IdentifierDecl	stop = width + smear_width		8180735	0					
ANR	8181046	IdentifierDeclType	uint		8180735	0					
ANR	8181047	Identifier	stop		8180735	1					
ANR	8181048	AssignmentExpression	stop = width + smear_width		8180735	2		=			
ANR	8181049	Identifier	stop		8180735	0					
ANR	8181050	AdditiveExpression	width + smear_width		8180735	1		+			
ANR	8181051	Identifier	width		8180735	0					
ANR	8181052	Identifier	smear_width		8180735	1					
ANR	8181053	ForStatement	for ( ; i < stop ; ++ i )		8180735	1					
ANR	8181054	Condition	i < stop	270:15:8419:8426	8180735	0	True				
ANR	8181055	RelationalExpression	i < stop		8180735	0		<			
ANR	8181056	Identifier	i		8180735	0					
ANR	8181057	Identifier	stop		8180735	1					
ANR	8181058	UnaryExpression	++ i	270:25:8429:8431	8180735	1	True				
ANR	8181059	IncDec	++		8180735	0					
ANR	8181060	Identifier	i		8180735	1					
ANR	8181061	CompoundStatement		72:30:2161:2161	8180735	2					
ANR	8181062	IfStatement	if ( bits_on )		8180735	0					
ANR	8181063	Condition	bits_on	271:16:8452:8458	8180735	0	True				
ANR	8181064	Identifier	bits_on		8180735	0					
ANR	8181065	ExpressionStatement	dbyte |= sdmask	272:16:8477:8492	8180735	1	True				
ANR	8181066	AssignmentExpression	dbyte |= sdmask		8180735	0		|=			
ANR	8181067	Identifier	dbyte		8180735	0					
ANR	8181068	Identifier	sdmask		8180735	1					
ANR	8181069	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		8180735	1					
ANR	8181070	Condition	( sdmask >>= 1 ) == 0	273:16:8510:8528	8180735	0	True				
ANR	8181071	EqualityExpression	( sdmask >>= 1 ) == 0		8180735	0		==			
ANR	8181072	AssignmentExpression	sdmask >>= 1		8180735	0		>>=			
ANR	8181073	Identifier	sdmask		8180735	0					
ANR	8181074	PrimaryExpression	1		8180735	1					
ANR	8181075	PrimaryExpression	0		8180735	1					
ANR	8181076	ExpressionStatement	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = 0"	274:16:8547:8586	8180735	1	True				
ANR	8181077	Expression	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = 0"		8180735	0					
ANR	8181078	AssignmentExpression	sdmask = 0x80		8180735	0		=			
ANR	8181079	Identifier	sdmask		8180735	0					
ANR	8181080	PrimaryExpression	0x80		8180735	1					
ANR	8181081	Expression	"* dp ++ = dbyte , dbyte = 0"		8180735	1					
ANR	8181082	AssignmentExpression	* dp ++ = dbyte		8180735	0		=			
ANR	8181083	UnaryOperationExpression	* dp ++		8180735	0					
ANR	8181084	UnaryOperator	*		8180735	0					
ANR	8181085	PostIncDecOperationExpression	dp ++		8180735	1					
ANR	8181086	Identifier	dp		8180735	0					
ANR	8181087	IncDec	++		8180735	1					
ANR	8181088	Identifier	dbyte		8180735	1					
ANR	8181089	AssignmentExpression	dbyte = 0		8180735	1		=			
ANR	8181090	Identifier	dbyte		8180735	0					
ANR	8181091	PrimaryExpression	0		8180735	1					
ANR	8181092	IfStatement	if ( * zp & zmask )		8180735	2					
ANR	8181093	Condition	* zp & zmask	275:16:8604:8614	8180735	0	True				
ANR	8181094	BitAndExpression	* zp & zmask		8180735	0		&			
ANR	8181095	UnaryOperationExpression	* zp		8180735	0					
ANR	8181096	UnaryOperator	*		8180735	0					
ANR	8181097	Identifier	zp		8180735	1					
ANR	8181098	Identifier	zmask		8180735	1					
ANR	8181099	ExpressionStatement	-- bits_on	276:16:8633:8642	8180735	1	True				
ANR	8181100	UnaryExpression	-- bits_on		8180735	0					
ANR	8181101	IncDec	--		8180735	0					
ANR	8181102	Identifier	bits_on		8180735	1					
ANR	8181103	IfStatement	if ( ( zmask >>= 1 ) == 0 )		8180735	3					
ANR	8181104	Condition	( zmask >>= 1 ) == 0	277:16:8660:8677	8180735	0	True				
ANR	8181105	EqualityExpression	( zmask >>= 1 ) == 0		8180735	0		==			
ANR	8181106	AssignmentExpression	zmask >>= 1		8180735	0		>>=			
ANR	8181107	Identifier	zmask		8180735	0					
ANR	8181108	PrimaryExpression	1		8180735	1					
ANR	8181109	PrimaryExpression	0		8180735	1					
ANR	8181110	ExpressionStatement	"zmask = 0x80 , ++ zp"	278:16:8696:8714	8180735	1	True				
ANR	8181111	Expression	"zmask = 0x80 , ++ zp"		8180735	0					
ANR	8181112	AssignmentExpression	zmask = 0x80		8180735	0		=			
ANR	8181113	Identifier	zmask		8180735	0					
ANR	8181114	PrimaryExpression	0x80		8180735	1					
ANR	8181115	UnaryExpression	++ zp		8180735	1					
ANR	8181116	IncDec	++		8180735	0					
ANR	8181117	Identifier	zp		8180735	1					
ANR	8181118	IfStatement	if ( sdmask != 0x80 )		8180735	12					
ANR	8181119	Condition	sdmask != 0x80	282:8:8741:8754	8180735	0	True				
ANR	8181120	EqualityExpression	sdmask != 0x80		8180735	0		!=			
ANR	8181121	Identifier	sdmask		8180735	0					
ANR	8181122	PrimaryExpression	0x80		8180735	1					
ANR	8181123	ExpressionStatement	* dp = dbyte	283:8:8765:8776	8180735	1	True				
ANR	8181124	AssignmentExpression	* dp = dbyte		8180735	0		=			
ANR	8181125	UnaryOperationExpression	* dp		8180735	0					
ANR	8181126	UnaryOperator	*		8180735	0					
ANR	8181127	Identifier	dp		8180735	1					
ANR	8181128	Identifier	dbyte		8180735	1					
ANR	8181129	ReturnType	static void		8180735	1					
ANR	8181130	Identifier	bits_smear_horizontally		8180735	2					
ANR	8181131	ParameterList	"byte * dest , const byte * src , uint width , uint smear_width"		8180735	3					
ANR	8181132	Parameter	byte * dest	197:24:6187:6197	8180735	0	True				
ANR	8181133	ParameterType	byte *		8180735	0					
ANR	8181134	Identifier	dest		8180735	1					
ANR	8181135	Parameter	const byte * src	197:37:6200:6215	8180735	1	True				
ANR	8181136	ParameterType	const byte *		8180735	0					
ANR	8181137	Identifier	src		8180735	1					
ANR	8181138	Parameter	uint width	197:55:6218:6227	8180735	2	True				
ANR	8181139	ParameterType	uint		8180735	0					
ANR	8181140	Identifier	width		8180735	1					
ANR	8181141	Parameter	uint smear_width	198:24:6254:6269	8180735	3	True				
ANR	8181142	ParameterType	uint		8180735	0					
ANR	8181143	Identifier	smear_width		8180735	1					
ANR	8181144	CFGEntryNode	ENTRY		8180735		True				
ANR	8181145	CFGExitNode	EXIT		8180735		True				
ANR	8181146	Symbol	* sp		8180735						
ANR	8181147	Symbol	* * zp		8180735						
ANR	8181148	Symbol	dbyte		8180735						
ANR	8181149	Symbol	src		8180735						
ANR	8181150	Symbol	byte_count_bits		8180735						
ANR	8181151	Symbol	i		8180735						
ANR	8181152	Symbol	* dp ++		8180735						
ANR	8181153	Symbol	dest		8180735						
ANR	8181154	Symbol	dp		8180735						
ANR	8181155	Symbol	sdmask		8180735						
ANR	8181156	Symbol	zmask		8180735						
ANR	8181157	Symbol	* dp		8180735						
ANR	8181158	Symbol	* byte_count_bits		8180735						
ANR	8181159	Symbol	min		8180735						
ANR	8181160	Symbol	stop		8180735						
ANR	8181161	Symbol	* ++ sp		8180735						
ANR	8181162	Symbol	zp		8180735						
ANR	8181163	Symbol	smear_width		8180735						
ANR	8181164	Symbol	width		8180735						
ANR	8181165	Symbol	sbyte		8180735						
ANR	8181166	Symbol	* zmask		8180735						
ANR	8181167	Symbol	sp		8180735						
ANR	8181168	Symbol	bits_on		8180735						
ANR	8181169	Symbol	* zp		8180735						
ANR	8181170	Function	pl_image_bitmap_char	287:0:8838:12311							
ANR	8181171	FunctionDef	"pl_image_bitmap_char (gs_image_enum * ienum , const gs_image_t * pim , const byte * bitmap_data , uint sraster , int bold , byte * bold_lines , gs_gstate * pgs)"		8181170	0					
ANR	8181172	CompoundStatement		291:0:9038:12311	8181170	0					
ANR	8181173	IdentifierDeclStatement	uint dest_bytes = ( pim -> Width + 7 ) >> 3 ;	292:4:9044:9083	8181170	0	True				
ANR	8181174	IdentifierDecl	dest_bytes = ( pim -> Width + 7 ) >> 3		8181170	0					
ANR	8181175	IdentifierDeclType	uint		8181170	0					
ANR	8181176	Identifier	dest_bytes		8181170	1					
ANR	8181177	AssignmentExpression	dest_bytes = ( pim -> Width + 7 ) >> 3		8181170	2		=			
ANR	8181178	Identifier	dest_bytes		8181170	0					
ANR	8181179	ShiftExpression	( pim -> Width + 7 ) >> 3		8181170	1		>>			
ANR	8181180	AdditiveExpression	pim -> Width + 7		8181170	0		+			
ANR	8181181	PtrMemberAccess	pim -> Width		8181170	0					
ANR	8181182	Identifier	pim		8181170	0					
ANR	8181183	Identifier	Width		8181170	1					
ANR	8181184	PrimaryExpression	7		8181170	1					
ANR	8181185	PrimaryExpression	3		8181170	1					
ANR	8181186	IdentifierDeclStatement	gx_device * dev = pgs -> device ;	293:4:9089:9117	8181170	1	True				
ANR	8181187	IdentifierDecl	* dev = pgs -> device		8181170	0					
ANR	8181188	IdentifierDeclType	gx_device *		8181170	0					
ANR	8181189	Identifier	dev		8181170	1					
ANR	8181190	AssignmentExpression	* dev = pgs -> device		8181170	2		=			
ANR	8181191	Identifier	dev		8181170	0					
ANR	8181192	PtrMemberAccess	pgs -> device		8181170	1					
ANR	8181193	Identifier	pgs		8181170	0					
ANR	8181194	Identifier	device		8181170	1					
ANR	8181195	IdentifierDeclStatement	void * iinfo ;	294:4:9123:9134	8181170	2	True				
ANR	8181196	IdentifierDecl	* iinfo		8181170	0					
ANR	8181197	IdentifierDeclType	void *		8181170	0					
ANR	8181198	Identifier	iinfo		8181170	1					
ANR	8181199	IdentifierDeclStatement	const byte * planes [ 1 ] ;	295:4:9140:9161	8181170	3	True				
ANR	8181200	IdentifierDecl	* planes [ 1 ]		8181170	0					
ANR	8181201	IdentifierDeclType	const byte * [ 1 ]		8181170	0					
ANR	8181202	Identifier	planes		8181170	1					
ANR	8181203	PrimaryExpression	1		8181170	2					
ANR	8181204	IdentifierDeclStatement	int code ;	296:4:9167:9175	8181170	4	True				
ANR	8181205	IdentifierDecl	code		8181170	0					
ANR	8181206	IdentifierDeclType	int		8181170	0					
ANR	8181207	Identifier	code		8181170	1					
ANR	8181208	ExpressionStatement	code = gx_set_dev_color ( pgs )	298:4:9182:9210	8181170	5	True				
ANR	8181209	AssignmentExpression	code = gx_set_dev_color ( pgs )		8181170	0		=			
ANR	8181210	Identifier	code		8181170	0					
ANR	8181211	CallExpression	gx_set_dev_color ( pgs )		8181170	1					
ANR	8181212	Callee	gx_set_dev_color		8181170	0					
ANR	8181213	Identifier	gx_set_dev_color		8181170	0					
ANR	8181214	ArgumentList	pgs		8181170	1					
ANR	8181215	Argument	pgs		8181170	0					
ANR	8181216	Identifier	pgs		8181170	0					
ANR	8181217	IfStatement	if ( code == gs_error_Remap_Color )		8181170	6					
ANR	8181218	Condition	code == gs_error_Remap_Color	299:8:9220:9247	8181170	0	True				
ANR	8181219	EqualityExpression	code == gs_error_Remap_Color		8181170	0		==			
ANR	8181220	Identifier	code		8181170	0					
ANR	8181221	Identifier	gs_error_Remap_Color		8181170	1					
ANR	8181222	ExpressionStatement	code = pixmap_high_level_pattern ( pgs )	300:8:9258:9295	8181170	1	True				
ANR	8181223	AssignmentExpression	code = pixmap_high_level_pattern ( pgs )		8181170	0		=			
ANR	8181224	Identifier	code		8181170	0					
ANR	8181225	CallExpression	pixmap_high_level_pattern ( pgs )		8181170	1					
ANR	8181226	Callee	pixmap_high_level_pattern		8181170	0					
ANR	8181227	Identifier	pixmap_high_level_pattern		8181170	0					
ANR	8181228	ArgumentList	pgs		8181170	1					
ANR	8181229	Argument	pgs		8181170	0					
ANR	8181230	Identifier	pgs		8181170	0					
ANR	8181231	IfStatement	if ( code != 0 )		8181170	7					
ANR	8181232	Condition	code != 0	301:8:9305:9313	8181170	0	True				
ANR	8181233	EqualityExpression	code != 0		8181170	0		!=			
ANR	8181234	Identifier	code		8181170	0					
ANR	8181235	PrimaryExpression	0		8181170	1					
ANR	8181236	ReturnStatement	return code ;	302:8:9324:9335	8181170	1	True				
ANR	8181237	Identifier	code		8181170	0					
ANR	8181238	ExpressionStatement	"code = ( * dev_proc ( dev , begin_image ) ) ( dev , ( const gs_gstate * ) pgs , pim , gs_image_format_chunky , NULL , gs_currentdevicecolor_inline ( pgs ) , pgs -> clip_path , pgs -> memory , ( gx_image_enum_common_t * * ) & iinfo )"	303:4:9341:9569	8181170	8	True				
ANR	8181239	AssignmentExpression	"code = ( * dev_proc ( dev , begin_image ) ) ( dev , ( const gs_gstate * ) pgs , pim , gs_image_format_chunky , NULL , gs_currentdevicecolor_inline ( pgs ) , pgs -> clip_path , pgs -> memory , ( gx_image_enum_common_t * * ) & iinfo )"		8181170	0		=			
ANR	8181240	Identifier	code		8181170	0					
ANR	8181241	CallExpression	"( * dev_proc ( dev , begin_image ) ) ( dev , ( const gs_gstate * ) pgs , pim , gs_image_format_chunky , NULL , gs_currentdevicecolor_inline ( pgs ) , pgs -> clip_path , pgs -> memory , ( gx_image_enum_common_t * * ) & iinfo )"		8181170	1					
ANR	8181242	Callee	"* dev_proc ( dev , begin_image )"		8181170	0					
ANR	8181243	UnaryOperationExpression	"* dev_proc ( dev , begin_image )"		8181170	0					
ANR	8181244	UnaryOperator	*		8181170	0					
ANR	8181245	CallExpression	"dev_proc ( dev , begin_image )"		8181170	1					
ANR	8181246	Callee	dev_proc		8181170	0					
ANR	8181247	Identifier	dev_proc		8181170	0					
ANR	8181248	ArgumentList	dev		8181170	1					
ANR	8181249	Argument	dev		8181170	0					
ANR	8181250	Identifier	dev		8181170	0					
ANR	8181251	Argument	begin_image		8181170	1					
ANR	8181252	Identifier	begin_image		8181170	0					
ANR	8181253	ArgumentList	dev		8181170	1					
ANR	8181254	Argument	dev		8181170	0					
ANR	8181255	Identifier	dev		8181170	0					
ANR	8181256	Argument	( const gs_gstate * ) pgs		8181170	1					
ANR	8181257	CastExpression	( const gs_gstate * ) pgs		8181170	0					
ANR	8181258	CastTarget	const gs_gstate *		8181170	0					
ANR	8181259	Identifier	pgs		8181170	1					
ANR	8181260	Argument	pim		8181170	2					
ANR	8181261	Identifier	pim		8181170	0					
ANR	8181262	Argument	gs_image_format_chunky		8181170	3					
ANR	8181263	Identifier	gs_image_format_chunky		8181170	0					
ANR	8181264	Argument	NULL		8181170	4					
ANR	8181265	Identifier	NULL		8181170	0					
ANR	8181266	Argument	gs_currentdevicecolor_inline ( pgs )		8181170	5					
ANR	8181267	CallExpression	gs_currentdevicecolor_inline ( pgs )		8181170	0					
ANR	8181268	Callee	gs_currentdevicecolor_inline		8181170	0					
ANR	8181269	Identifier	gs_currentdevicecolor_inline		8181170	0					
ANR	8181270	ArgumentList	pgs		8181170	1					
ANR	8181271	Argument	pgs		8181170	0					
ANR	8181272	Identifier	pgs		8181170	0					
ANR	8181273	Argument	pgs -> clip_path		8181170	6					
ANR	8181274	PtrMemberAccess	pgs -> clip_path		8181170	0					
ANR	8181275	Identifier	pgs		8181170	0					
ANR	8181276	Identifier	clip_path		8181170	1					
ANR	8181277	Argument	pgs -> memory		8181170	7					
ANR	8181278	PtrMemberAccess	pgs -> memory		8181170	0					
ANR	8181279	Identifier	pgs		8181170	0					
ANR	8181280	Identifier	memory		8181170	1					
ANR	8181281	Argument	( gx_image_enum_common_t * * ) & iinfo		8181170	8					
ANR	8181282	CastExpression	( gx_image_enum_common_t * * ) & iinfo		8181170	0					
ANR	8181283	CastTarget	gx_image_enum_common_t * *		8181170	0					
ANR	8181284	UnaryOperationExpression	& iinfo		8181170	1					
ANR	8181285	UnaryOperator	&		8181170	0					
ANR	8181286	Identifier	iinfo		8181170	1					
ANR	8181287	IfStatement	if ( code < 0 )		8181170	9					
ANR	8181288	Condition	code < 0	307:8:9579:9586	8181170	0	True				
ANR	8181289	RelationalExpression	code < 0		8181170	0		<			
ANR	8181290	Identifier	code		8181170	0					
ANR	8181291	PrimaryExpression	0		8181170	1					
ANR	8181292	ReturnStatement	return code ;	308:8:9597:9608	8181170	1	True				
ANR	8181293	Identifier	code		8181170	0					
ANR	8181294	IfStatement	if ( bold )		8181170	10					
ANR	8181295	Condition	bold	309:8:9618:9621	8181170	0	True				
ANR	8181296	Identifier	bold		8181170	0					
ANR	8181297	CompoundStatement		26:8:887:892	8181170	1					
ANR	8181298	IdentifierDeclStatement	uint src_width = pim -> Width - bold ;	310:8:9687:9721	8181170	0	True				
ANR	8181299	IdentifierDecl	src_width = pim -> Width - bold		8181170	0					
ANR	8181300	IdentifierDeclType	uint		8181170	0					
ANR	8181301	Identifier	src_width		8181170	1					
ANR	8181302	AssignmentExpression	src_width = pim -> Width - bold		8181170	2		=			
ANR	8181303	Identifier	src_width		8181170	0					
ANR	8181304	AdditiveExpression	pim -> Width - bold		8181170	1		-			
ANR	8181305	PtrMemberAccess	pim -> Width		8181170	0					
ANR	8181306	Identifier	pim		8181170	0					
ANR	8181307	Identifier	Width		8181170	1					
ANR	8181308	Identifier	bold		8181170	1					
ANR	8181309	IdentifierDeclStatement	uint src_height = pim -> Height - bold ;	311:8:9731:9767	8181170	1	True				
ANR	8181310	IdentifierDecl	src_height = pim -> Height - bold		8181170	0					
ANR	8181311	IdentifierDeclType	uint		8181170	0					
ANR	8181312	Identifier	src_height		8181170	1					
ANR	8181313	AssignmentExpression	src_height = pim -> Height - bold		8181170	2		=			
ANR	8181314	Identifier	src_height		8181170	0					
ANR	8181315	AdditiveExpression	pim -> Height - bold		8181170	1		-			
ANR	8181316	PtrMemberAccess	pim -> Height		8181170	0					
ANR	8181317	Identifier	pim		8181170	0					
ANR	8181318	Identifier	Height		8181170	1					
ANR	8181319	Identifier	bold		8181170	1					
ANR	8181320	IdentifierDeclStatement	uint dest_raster = bitmap_raster ( pim -> Width ) ;	312:8:9777:9821	8181170	2	True				
ANR	8181321	IdentifierDecl	dest_raster = bitmap_raster ( pim -> Width )		8181170	0					
ANR	8181322	IdentifierDeclType	uint		8181170	0					
ANR	8181323	Identifier	dest_raster		8181170	1					
ANR	8181324	AssignmentExpression	dest_raster = bitmap_raster ( pim -> Width )		8181170	2		=			
ANR	8181325	Identifier	dest_raster		8181170	0					
ANR	8181326	CallExpression	bitmap_raster ( pim -> Width )		8181170	1					
ANR	8181327	Callee	bitmap_raster		8181170	0					
ANR	8181328	Identifier	bitmap_raster		8181170	0					
ANR	8181329	ArgumentList	pim -> Width		8181170	1					
ANR	8181330	Argument	pim -> Width		8181170	0					
ANR	8181331	PtrMemberAccess	pim -> Width		8181170	0					
ANR	8181332	Identifier	pim		8181170	0					
ANR	8181333	Identifier	Width		8181170	1					
ANR	8181334	IdentifierDeclStatement	int n1 = bold + 1 ;	313:8:9831:9848	8181170	3	True				
ANR	8181335	IdentifierDecl	n1 = bold + 1		8181170	0					
ANR	8181336	IdentifierDeclType	int		8181170	0					
ANR	8181337	Identifier	n1		8181170	1					
ANR	8181338	AssignmentExpression	n1 = bold + 1		8181170	2		=			
ANR	8181339	Identifier	n1		8181170	0					
ANR	8181340	AdditiveExpression	bold + 1		8181170	1		+			
ANR	8181341	Identifier	bold		8181170	0					
ANR	8181342	PrimaryExpression	1		8181170	1					
ANR	8181343	Statement	define	315:1:9852:9857	8181170	4	True				
ANR	8181344	Statement	merged_line	315:8:9859:9869	8181170	5	True				
ANR	8181345	Statement	(	315:19:9870:9870	8181170	6	True				
ANR	8181346	Statement	i	315:20:9871:9871	8181170	7	True				
ANR	8181347	Statement	)	315:21:9872:9872	8181170	8	True				
ANR	8181348	Statement	(	315:23:9874:9874	8181170	9	True				
ANR	8181349	Statement	bold_lines	315:24:9875:9884	8181170	10	True				
ANR	8181350	Statement	+	315:35:9886:9886	8181170	11	True				
ANR	8181351	Statement	(	315:37:9888:9888	8181170	12	True				
ANR	8181352	Statement	(	315:38:9889:9889	8181170	13	True				
ANR	8181353	Statement	i	315:39:9890:9890	8181170	14	True				
ANR	8181354	Statement	)	315:40:9891:9891	8181170	15	True				
ANR	8181355	Statement	%	315:42:9893:9893	8181170	16	True				
ANR	8181356	Statement	n1	315:44:9895:9896	8181170	17	True				
ANR	8181357	Statement	+	315:47:9898:9898	8181170	18	True				
ANR	8181358	Statement	1	315:49:9900:9900	8181170	19	True				
ANR	8181359	Statement	)	315:50:9901:9901	8181170	20	True				
ANR	8181360	Statement	*	315:52:9903:9903	8181170	21	True				
ANR	8181361	Statement	dest_raster	315:54:9905:9915	8181170	22	True				
ANR	8181362	Statement	)	315:65:9916:9916	8181170	23	True				
ANR	8181363	IdentifierDeclStatement	int y ;	316:8:9926:9931	8181170	24	True				
ANR	8181364	IdentifierDecl	y		8181170	0					
ANR	8181365	IdentifierDeclType	int		8181170	0					
ANR	8181366	Identifier	y		8181170	1					
ANR	8181367	ExpressionStatement	planes [ 0 ] = bold_lines	318:8:9942:9964	8181170	25	True				
ANR	8181368	AssignmentExpression	planes [ 0 ] = bold_lines		8181170	0		=			
ANR	8181369	ArrayIndexing	planes [ 0 ]		8181170	0					
ANR	8181370	Identifier	planes		8181170	0					
ANR	8181371	PrimaryExpression	0		8181170	1					
ANR	8181372	Identifier	bold_lines		8181170	1					
ANR	8181373	ForStatement	for ( y = 0 ; y < pim -> Height ; ++ y )		8181170	26					
ANR	8181374	ForInit	y = 0 ;	319:13:9979:9984	8181170	0	True				
ANR	8181375	AssignmentExpression	y = 0		8181170	0		=			
ANR	8181376	Identifier	y		8181170	0					
ANR	8181377	PrimaryExpression	0		8181170	1					
ANR	8181378	Condition	y < pim -> Height	319:20:9986:10000	8181170	1	True				
ANR	8181379	RelationalExpression	y < pim -> Height		8181170	0		<			
ANR	8181380	Identifier	y		8181170	0					
ANR	8181381	PtrMemberAccess	pim -> Height		8181170	1					
ANR	8181382	Identifier	pim		8181170	0					
ANR	8181383	Identifier	Height		8181170	1					
ANR	8181384	UnaryExpression	++ y	319:37:10003:10005	8181170	2	True				
ANR	8181385	IncDec	++		8181170	0					
ANR	8181386	Identifier	y		8181170	1					
ANR	8181387	CompoundStatement		31:12:1031:1062	8181170	3					
ANR	8181388	IdentifierDeclStatement	int y0 = ( y < bold ? 0 : y - bold ) ;	320:12:10022:10056	8181170	0	True				
ANR	8181389	IdentifierDecl	y0 = ( y < bold ? 0 : y - bold )		8181170	0					
ANR	8181390	IdentifierDeclType	int		8181170	0					
ANR	8181391	Identifier	y0		8181170	1					
ANR	8181392	AssignmentExpression	y0 = ( y < bold ? 0 : y - bold )		8181170	2		=			
ANR	8181393	Identifier	y0		8181170	0					
ANR	8181394	ConditionalExpression	y < bold ? 0 : y - bold		8181170	1					
ANR	8181395	Condition	y < bold		8181170	0					
ANR	8181396	RelationalExpression	y < bold		8181170	0		<			
ANR	8181397	Identifier	y		8181170	0					
ANR	8181398	Identifier	bold		8181170	1					
ANR	8181399	PrimaryExpression	0		8181170	1					
ANR	8181400	AdditiveExpression	y - bold		8181170	2		-			
ANR	8181401	Identifier	y		8181170	0					
ANR	8181402	Identifier	bold		8181170	1					
ANR	8181403	IdentifierDeclStatement	"int y1 = min ( y + 1 , src_height ) ;"	321:12:10070:10101	8181170	1	True				
ANR	8181404	IdentifierDecl	"y1 = min ( y + 1 , src_height )"		8181170	0					
ANR	8181405	IdentifierDeclType	int		8181170	0					
ANR	8181406	Identifier	y1		8181170	1					
ANR	8181407	AssignmentExpression	"y1 = min ( y + 1 , src_height )"		8181170	2		=			
ANR	8181408	Identifier	y1		8181170	0					
ANR	8181409	CallExpression	"min ( y + 1 , src_height )"		8181170	1					
ANR	8181410	Callee	min		8181170	0					
ANR	8181411	Identifier	min		8181170	0					
ANR	8181412	ArgumentList	y + 1		8181170	1					
ANR	8181413	Argument	y + 1		8181170	0					
ANR	8181414	AdditiveExpression	y + 1		8181170	0		+			
ANR	8181415	Identifier	y		8181170	0					
ANR	8181416	PrimaryExpression	1		8181170	1					
ANR	8181417	Argument	src_height		8181170	1					
ANR	8181418	Identifier	src_height		8181170	0					
ANR	8181419	IfStatement	if ( y < src_height )		8181170	2					
ANR	8181420	Condition	y < src_height	323:16:10120:10133	8181170	0	True				
ANR	8181421	RelationalExpression	y < src_height		8181170	0		<			
ANR	8181422	Identifier	y		8181170	0					
ANR	8181423	Identifier	src_height		8181170	1					
ANR	8181424	CompoundStatement		33:32:1097:1097	8181170	1					
ANR	8181425	ExpressionStatement	"bits_smear_horizontally ( merged_line ( y ) , bitmap_data + y * sraster , src_width , bold )"	324:16:10154:10317	8181170	0	True				
ANR	8181426	CallExpression	"bits_smear_horizontally ( merged_line ( y ) , bitmap_data + y * sraster , src_width , bold )"		8181170	0					
ANR	8181427	Callee	bits_smear_horizontally		8181170	0					
ANR	8181428	Identifier	bits_smear_horizontally		8181170	0					
ANR	8181429	ArgumentList	merged_line ( y )		8181170	1					
ANR	8181430	Argument	merged_line ( y )		8181170	0					
ANR	8181431	CallExpression	merged_line ( y )		8181170	0					
ANR	8181432	Callee	merged_line		8181170	0					
ANR	8181433	Identifier	merged_line		8181170	0					
ANR	8181434	ArgumentList	y		8181170	1					
ANR	8181435	Argument	y		8181170	0					
ANR	8181436	Identifier	y		8181170	0					
ANR	8181437	Argument	bitmap_data + y * sraster		8181170	1					
ANR	8181438	AdditiveExpression	bitmap_data + y * sraster		8181170	0		+			
ANR	8181439	Identifier	bitmap_data		8181170	0					
ANR	8181440	MultiplicativeExpression	y * sraster		8181170	1		*			
ANR	8181441	Identifier	y		8181170	0					
ANR	8181442	Identifier	sraster		8181170	1					
ANR	8181443	Argument	src_width		8181170	2					
ANR	8181444	Identifier	src_width		8181170	0					
ANR	8181445	Argument	bold		8181170	3					
ANR	8181446	Identifier	bold		8181170	0					
ANR	8181447	CompoundStatement		38:20:1383:1396	8181170	1					
ANR	8181448	IdentifierDeclStatement	int kmask = 1 ;	328:20:10422:10435	8181170	0	True				
ANR	8181449	IdentifierDecl	kmask = 1		8181170	0					
ANR	8181450	IdentifierDeclType	int		8181170	0					
ANR	8181451	Identifier	kmask		8181170	1					
ANR	8181452	AssignmentExpression	kmask = 1		8181170	2		=			
ANR	8181453	Identifier	kmask		8181170	0					
ANR	8181454	PrimaryExpression	1		8181170	1					
ANR	8181455	ForStatement	for ( ; ( y & kmask ) == kmask && y - kmask >= y0 ; kmask = ( kmask << 1 ) + 1 )		8181170	1					
ANR	8181456	Condition	( y & kmask ) == kmask && y - kmask >= y0	330:27:10465:10503	8181170	0	True				
ANR	8181457	AndExpression	( y & kmask ) == kmask && y - kmask >= y0		8181170	0		&&			
ANR	8181458	EqualityExpression	( y & kmask ) == kmask		8181170	0		==			
ANR	8181459	BitAndExpression	y & kmask		8181170	0		&			
ANR	8181460	Identifier	y		8181170	0					
ANR	8181461	Identifier	kmask		8181170	1					
ANR	8181462	Identifier	kmask		8181170	1					
ANR	8181463	RelationalExpression	y - kmask >= y0		8181170	1		>=			
ANR	8181464	AdditiveExpression	y - kmask		8181170	0		-			
ANR	8181465	Identifier	y		8181170	0					
ANR	8181466	Identifier	kmask		8181170	1					
ANR	8181467	Identifier	y0		8181170	1					
ANR	8181468	AssignmentExpression	kmask = ( kmask << 1 ) + 1	331:25:10531:10554	8181170	1	True	=			
ANR	8181469	Identifier	kmask		8181170	0					
ANR	8181470	AdditiveExpression	( kmask << 1 ) + 1		8181170	1		+			
ANR	8181471	ShiftExpression	kmask << 1		8181170	0		<<			
ANR	8181472	Identifier	kmask		8181170	0					
ANR	8181473	PrimaryExpression	1		8181170	1					
ANR	8181474	PrimaryExpression	1		8181170	1					
ANR	8181475	ExpressionStatement	"bits_merge ( merged_line ( y - kmask ) , merged_line ( y - ( kmask >> 1 ) ) , dest_bytes )"	332:24:10581:10693	8181170	2	True				
ANR	8181476	CallExpression	"bits_merge ( merged_line ( y - kmask ) , merged_line ( y - ( kmask >> 1 ) ) , dest_bytes )"		8181170	0					
ANR	8181477	Callee	bits_merge		8181170	0					
ANR	8181478	Identifier	bits_merge		8181170	0					
ANR	8181479	ArgumentList	merged_line ( y - kmask )		8181170	1					
ANR	8181480	Argument	merged_line ( y - kmask )		8181170	0					
ANR	8181481	CallExpression	merged_line ( y - kmask )		8181170	0					
ANR	8181482	Callee	merged_line		8181170	0					
ANR	8181483	Identifier	merged_line		8181170	0					
ANR	8181484	ArgumentList	y - kmask		8181170	1					
ANR	8181485	Argument	y - kmask		8181170	0					
ANR	8181486	AdditiveExpression	y - kmask		8181170	0		-			
ANR	8181487	Identifier	y		8181170	0					
ANR	8181488	Identifier	kmask		8181170	1					
ANR	8181489	Argument	merged_line ( y - ( kmask >> 1 ) )		8181170	1					
ANR	8181490	CallExpression	merged_line ( y - ( kmask >> 1 ) )		8181170	0					
ANR	8181491	Callee	merged_line		8181170	0					
ANR	8181492	Identifier	merged_line		8181170	0					
ANR	8181493	ArgumentList	y - ( kmask >> 1 )		8181170	1					
ANR	8181494	Argument	y - ( kmask >> 1 )		8181170	0					
ANR	8181495	AdditiveExpression	y - ( kmask >> 1 )		8181170	0		-			
ANR	8181496	Identifier	y		8181170	0					
ANR	8181497	ShiftExpression	kmask >> 1		8181170	1		>>			
ANR	8181498	Identifier	kmask		8181170	0					
ANR	8181499	PrimaryExpression	1		8181170	1					
ANR	8181500	Argument	dest_bytes		8181170	2					
ANR	8181501	Identifier	dest_bytes		8181170	0					
ANR	8181502	CompoundStatement		59:16:2302:2308	8181170	3					
ANR	8181503	IdentifierDeclStatement	bool first = true ;	348:16:11306:11323	8181170	0	True				
ANR	8181504	IdentifierDecl	first = true		8181170	0					
ANR	8181505	IdentifierDeclType	bool		8181170	0					
ANR	8181506	Identifier	first		8181170	1					
ANR	8181507	AssignmentExpression	first = true		8181170	2		=			
ANR	8181508	Identifier	true		8181170	0					
ANR	8181509	Identifier	true		8181170	1					
ANR	8181510	IdentifierDeclStatement	int iy ;	349:16:11341:11347	8181170	1	True				
ANR	8181511	IdentifierDecl	iy		8181170	0					
ANR	8181512	IdentifierDeclType	int		8181170	0					
ANR	8181513	Identifier	iy		8181170	1					
ANR	8181514	ForStatement	for ( iy = y1 - 1 ; iy >= y0 ; -- iy )		8181170	2					
ANR	8181515	ForInit	iy = y1 - 1 ;	351:21:11371:11382	8181170	0	True				
ANR	8181516	AssignmentExpression	iy = y1 - 1		8181170	0		=			
ANR	8181517	Identifier	iy		8181170	0					
ANR	8181518	AdditiveExpression	y1 - 1		8181170	1		-			
ANR	8181519	Identifier	y1		8181170	0					
ANR	8181520	PrimaryExpression	1		8181170	1					
ANR	8181521	Condition	iy >= y0	351:34:11384:11391	8181170	1	True				
ANR	8181522	RelationalExpression	iy >= y0		8181170	0		>=			
ANR	8181523	Identifier	iy		8181170	0					
ANR	8181524	Identifier	y0		8181170	1					
ANR	8181525	UnaryExpression	-- iy	351:44:11394:11397	8181170	2	True				
ANR	8181526	IncDec	--		8181170	0					
ANR	8181527	Identifier	iy		8181170	1					
ANR	8181528	CompoundStatement		62:20:2383:2396	8181170	3					
ANR	8181529	IdentifierDeclStatement	int kmask = 1 ;	352:20:11422:11435	8181170	0	True				
ANR	8181530	IdentifierDecl	kmask = 1		8181170	0					
ANR	8181531	IdentifierDeclType	int		8181170	0					
ANR	8181532	Identifier	kmask		8181170	1					
ANR	8181533	AssignmentExpression	kmask = 1		8181170	2		=			
ANR	8181534	Identifier	kmask		8181170	0					
ANR	8181535	PrimaryExpression	1		8181170	1					
ANR	8181536	WhileStatement	while ( ( iy & kmask ) == kmask && iy - kmask >= y0 )		8181170	1					
ANR	8181537	Condition	( iy & kmask ) == kmask && iy - kmask >= y0	354:27:11465:11505	8181170	0	True				
ANR	8181538	AndExpression	( iy & kmask ) == kmask && iy - kmask >= y0		8181170	0		&&			
ANR	8181539	EqualityExpression	( iy & kmask ) == kmask		8181170	0		==			
ANR	8181540	BitAndExpression	iy & kmask		8181170	0		&			
ANR	8181541	Identifier	iy		8181170	0					
ANR	8181542	Identifier	kmask		8181170	1					
ANR	8181543	Identifier	kmask		8181170	1					
ANR	8181544	RelationalExpression	iy - kmask >= y0		8181170	1		>=			
ANR	8181545	AdditiveExpression	iy - kmask		8181170	0		-			
ANR	8181546	Identifier	iy		8181170	0					
ANR	8181547	Identifier	kmask		8181170	1					
ANR	8181548	Identifier	y0		8181170	1					
ANR	8181549	ExpressionStatement	"iy -= kmask , kmask <<= 1"	355:24:11532:11556	8181170	1	True				
ANR	8181550	Expression	"iy -= kmask , kmask <<= 1"		8181170	0					
ANR	8181551	AssignmentExpression	iy -= kmask		8181170	0		-=			
ANR	8181552	Identifier	iy		8181170	0					
ANR	8181553	Identifier	kmask		8181170	1					
ANR	8181554	AssignmentExpression	kmask <<= 1		8181170	1		<<=			
ANR	8181555	Identifier	kmask		8181170	0					
ANR	8181556	PrimaryExpression	1		8181170	1					
ANR	8181557	IfStatement	if ( first )		8181170	2					
ANR	8181558	Condition	first	356:24:11582:11586	8181170	0	True				
ANR	8181559	Identifier	first		8181170	0					
ANR	8181560	CompoundStatement		66:31:2550:2550	8181170	1					
ANR	8181561	ExpressionStatement	"memcpy ( bold_lines , merged_line ( iy ) , dest_bytes )"	357:24:11615:11662	8181170	0	True				
ANR	8181562	CallExpression	"memcpy ( bold_lines , merged_line ( iy ) , dest_bytes )"		8181170	0					
ANR	8181563	Callee	memcpy		8181170	0					
ANR	8181564	Identifier	memcpy		8181170	0					
ANR	8181565	ArgumentList	bold_lines		8181170	1					
ANR	8181566	Argument	bold_lines		8181170	0					
ANR	8181567	Identifier	bold_lines		8181170	0					
ANR	8181568	Argument	merged_line ( iy )		8181170	1					
ANR	8181569	CallExpression	merged_line ( iy )		8181170	0					
ANR	8181570	Callee	merged_line		8181170	0					
ANR	8181571	Identifier	merged_line		8181170	0					
ANR	8181572	ArgumentList	iy		8181170	1					
ANR	8181573	Argument	iy		8181170	0					
ANR	8181574	Identifier	iy		8181170	0					
ANR	8181575	Argument	dest_bytes		8181170	2					
ANR	8181576	Identifier	dest_bytes		8181170	0					
ANR	8181577	ExpressionStatement	first = false	358:24:11688:11701	8181170	1	True				
ANR	8181578	AssignmentExpression	first = false		8181170	0		=			
ANR	8181579	Identifier	first		8181170	0					
ANR	8181580	Identifier	false		8181170	1					
ANR	8181581	ElseStatement	else		8181170	0					
ANR	8181582	ExpressionStatement	"bits_merge ( bold_lines , merged_line ( iy ) , dest_bytes )"	360:24:11754:11805	8181170	0	True				
ANR	8181583	CallExpression	"bits_merge ( bold_lines , merged_line ( iy ) , dest_bytes )"		8181170	0					
ANR	8181584	Callee	bits_merge		8181170	0					
ANR	8181585	Identifier	bits_merge		8181170	0					
ANR	8181586	ArgumentList	bold_lines		8181170	1					
ANR	8181587	Argument	bold_lines		8181170	0					
ANR	8181588	Identifier	bold_lines		8181170	0					
ANR	8181589	Argument	merged_line ( iy )		8181170	1					
ANR	8181590	CallExpression	merged_line ( iy )		8181170	0					
ANR	8181591	Callee	merged_line		8181170	0					
ANR	8181592	Identifier	merged_line		8181170	0					
ANR	8181593	ArgumentList	iy		8181170	1					
ANR	8181594	Argument	iy		8181170	0					
ANR	8181595	Identifier	iy		8181170	0					
ANR	8181596	Argument	dest_bytes		8181170	2					
ANR	8181597	Identifier	dest_bytes		8181170	0					
ANR	8181598	ExpressionStatement	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , 1 )"	364:12:11852:11942	8181170	4	True				
ANR	8181599	AssignmentExpression	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , 1 )"		8181170	0		=			
ANR	8181600	Identifier	code		8181170	0					
ANR	8181601	CallExpression	"( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , 1 )"		8181170	1					
ANR	8181602	Callee	"* dev_proc ( dev , image_data )"		8181170	0					
ANR	8181603	UnaryOperationExpression	"* dev_proc ( dev , image_data )"		8181170	0					
ANR	8181604	UnaryOperator	*		8181170	0					
ANR	8181605	CallExpression	"dev_proc ( dev , image_data )"		8181170	1					
ANR	8181606	Callee	dev_proc		8181170	0					
ANR	8181607	Identifier	dev_proc		8181170	0					
ANR	8181608	ArgumentList	dev		8181170	1					
ANR	8181609	Argument	dev		8181170	0					
ANR	8181610	Identifier	dev		8181170	0					
ANR	8181611	Argument	image_data		8181170	1					
ANR	8181612	Identifier	image_data		8181170	0					
ANR	8181613	ArgumentList	dev		8181170	1					
ANR	8181614	Argument	dev		8181170	0					
ANR	8181615	Identifier	dev		8181170	0					
ANR	8181616	Argument	iinfo		8181170	1					
ANR	8181617	Identifier	iinfo		8181170	0					
ANR	8181618	Argument	planes		8181170	2					
ANR	8181619	Identifier	planes		8181170	0					
ANR	8181620	Argument	0		8181170	3					
ANR	8181621	PrimaryExpression	0		8181170	0					
ANR	8181622	Argument	dest_bytes		8181170	4					
ANR	8181623	Identifier	dest_bytes		8181170	0					
ANR	8181624	Argument	1		8181170	5					
ANR	8181625	PrimaryExpression	1		8181170	0					
ANR	8181626	IfStatement	if ( code != 0 )		8181170	5					
ANR	8181627	Condition	code != 0	366:16:11960:11968	8181170	0	True				
ANR	8181628	EqualityExpression	code != 0		8181170	0		!=			
ANR	8181629	Identifier	code		8181170	0					
ANR	8181630	PrimaryExpression	0		8181170	1					
ANR	8181631	BreakStatement	break ;	367:16:11987:11992	8181170	1	True				
ANR	8181632	Statement	undef	369:1:12005:12009	8181170	27	True				
ANR	8181633	Statement	merged_line	369:7:12011:12021	8181170	28	True				
ANR	8181634	ElseStatement	else		8181170	0					
ANR	8181635	CompoundStatement		80:11:2995:2995	8181170	0					
ANR	8181636	ExpressionStatement	planes [ 0 ] = bitmap_data	371:8:12100:12123	8181170	0	True				
ANR	8181637	AssignmentExpression	planes [ 0 ] = bitmap_data		8181170	0		=			
ANR	8181638	ArrayIndexing	planes [ 0 ]		8181170	0					
ANR	8181639	Identifier	planes		8181170	0					
ANR	8181640	PrimaryExpression	0		8181170	1					
ANR	8181641	Identifier	bitmap_data		8181170	1					
ANR	8181642	ExpressionStatement	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , pim -> Height )"	372:8:12133:12229	8181170	1	True				
ANR	8181643	AssignmentExpression	"code = ( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , pim -> Height )"		8181170	0		=			
ANR	8181644	Identifier	code		8181170	0					
ANR	8181645	CallExpression	"( * dev_proc ( dev , image_data ) ) ( dev , iinfo , planes , 0 , dest_bytes , pim -> Height )"		8181170	1					
ANR	8181646	Callee	"* dev_proc ( dev , image_data )"		8181170	0					
ANR	8181647	UnaryOperationExpression	"* dev_proc ( dev , image_data )"		8181170	0					
ANR	8181648	UnaryOperator	*		8181170	0					
ANR	8181649	CallExpression	"dev_proc ( dev , image_data )"		8181170	1					
ANR	8181650	Callee	dev_proc		8181170	0					
ANR	8181651	Identifier	dev_proc		8181170	0					
ANR	8181652	ArgumentList	dev		8181170	1					
ANR	8181653	Argument	dev		8181170	0					
ANR	8181654	Identifier	dev		8181170	0					
ANR	8181655	Argument	image_data		8181170	1					
ANR	8181656	Identifier	image_data		8181170	0					
ANR	8181657	ArgumentList	dev		8181170	1					
ANR	8181658	Argument	dev		8181170	0					
ANR	8181659	Identifier	dev		8181170	0					
ANR	8181660	Argument	iinfo		8181170	1					
ANR	8181661	Identifier	iinfo		8181170	0					
ANR	8181662	Argument	planes		8181170	2					
ANR	8181663	Identifier	planes		8181170	0					
ANR	8181664	Argument	0		8181170	3					
ANR	8181665	PrimaryExpression	0		8181170	0					
ANR	8181666	Argument	dest_bytes		8181170	4					
ANR	8181667	Identifier	dest_bytes		8181170	0					
ANR	8181668	Argument	pim -> Height		8181170	5					
ANR	8181669	PtrMemberAccess	pim -> Height		8181170	0					
ANR	8181670	Identifier	pim		8181170	0					
ANR	8181671	Identifier	Height		8181170	1					
ANR	8181672	ExpressionStatement	"( * dev_proc ( dev , end_image ) ) ( dev , iinfo , code >= 0 )"	375:4:12241:12292	8181170	11	True				
ANR	8181673	CallExpression	"( * dev_proc ( dev , end_image ) ) ( dev , iinfo , code >= 0 )"		8181170	0					
ANR	8181674	Callee	"* dev_proc ( dev , end_image )"		8181170	0					
ANR	8181675	UnaryOperationExpression	"* dev_proc ( dev , end_image )"		8181170	0					
ANR	8181676	UnaryOperator	*		8181170	0					
ANR	8181677	CallExpression	"dev_proc ( dev , end_image )"		8181170	1					
ANR	8181678	Callee	dev_proc		8181170	0					
ANR	8181679	Identifier	dev_proc		8181170	0					
ANR	8181680	ArgumentList	dev		8181170	1					
ANR	8181681	Argument	dev		8181170	0					
ANR	8181682	Identifier	dev		8181170	0					
ANR	8181683	Argument	end_image		8181170	1					
ANR	8181684	Identifier	end_image		8181170	0					
ANR	8181685	ArgumentList	dev		8181170	1					
ANR	8181686	Argument	dev		8181170	0					
ANR	8181687	Identifier	dev		8181170	0					
ANR	8181688	Argument	iinfo		8181170	1					
ANR	8181689	Identifier	iinfo		8181170	0					
ANR	8181690	Argument	code >= 0		8181170	2					
ANR	8181691	RelationalExpression	code >= 0		8181170	0		>=			
ANR	8181692	Identifier	code		8181170	0					
ANR	8181693	PrimaryExpression	0		8181170	1					
ANR	8181694	ReturnStatement	return code ;	376:4:12298:12309	8181170	12	True				
ANR	8181695	Identifier	code		8181170	0					
ANR	8181696	ReturnType	int		8181170	1					
ANR	8181697	Identifier	pl_image_bitmap_char		8181170	2					
ANR	8181698	ParameterList	"gs_image_enum * ienum , const gs_image_t * pim , const byte * bitmap_data , uint sraster , int bold , byte * bold_lines , gs_gstate * pgs"		8181170	3					
ANR	8181699	Parameter	gs_image_enum * ienum	288:21:8863:8883	8181170	0	True				
ANR	8181700	ParameterType	gs_image_enum *		8181170	0					
ANR	8181701	Identifier	ienum		8181170	1					
ANR	8181702	Parameter	const gs_image_t * pim	288:44:8886:8907	8181170	1	True				
ANR	8181703	ParameterType	const gs_image_t *		8181170	0					
ANR	8181704	Identifier	pim		8181170	1					
ANR	8181705	Parameter	const byte * bitmap_data	289:21:8931:8954	8181170	2	True				
ANR	8181706	ParameterType	const byte *		8181170	0					
ANR	8181707	Identifier	bitmap_data		8181170	1					
ANR	8181708	Parameter	uint sraster	289:47:8957:8968	8181170	3	True				
ANR	8181709	ParameterType	uint		8181170	0					
ANR	8181710	Identifier	sraster		8181170	1					
ANR	8181711	Parameter	int bold	289:61:8971:8978	8181170	4	True				
ANR	8181712	ParameterType	int		8181170	0					
ANR	8181713	Identifier	bold		8181170	1					
ANR	8181714	Parameter	byte * bold_lines	290:21:9002:9018	8181170	5	True				
ANR	8181715	ParameterType	byte *		8181170	0					
ANR	8181716	Identifier	bold_lines		8181170	1					
ANR	8181717	Parameter	gs_gstate * pgs	290:40:9021:9035	8181170	6	True				
ANR	8181718	ParameterType	gs_gstate *		8181170	0					
ANR	8181719	Identifier	pgs		8181170	1					
ANR	8181720	CFGEntryNode	ENTRY		8181170		True				
ANR	8181721	CFGExitNode	EXIT		8181170		True				
ANR	8181722	Symbol	n1		8181170						
ANR	8181723	Symbol	* pgs		8181170						
ANR	8181724	Symbol	pgs -> clip_path		8181170						
ANR	8181725	Symbol	dev		8181170						
ANR	8181726	Symbol	pim		8181170						
ANR	8181727	Symbol	pixmap_high_level_pattern		8181170						
ANR	8181728	Symbol	pgs -> device		8181170						
ANR	8181729	Symbol	ienum		8181170						
ANR	8181730	Symbol	gs_image_format_chunky		8181170						
ANR	8181731	Symbol	dest_raster		8181170						
ANR	8181732	Symbol	NULL		8181170						
ANR	8181733	Symbol	planes		8181170						
ANR	8181734	Symbol	bold		8181170						
ANR	8181735	Symbol	begin_image		8181170						
ANR	8181736	Symbol	"* dev_proc ( dev , image_data )"		8181170						
ANR	8181737	Symbol	gs_error_Remap_Color		8181170						
ANR	8181738	Symbol	iy		8181170						
ANR	8181739	Symbol	end_image		8181170						
ANR	8181740	Symbol	sraster		8181170						
ANR	8181741	Symbol	bold_lines		8181170						
ANR	8181742	Symbol	true		8181170						
ANR	8181743	Symbol	pim -> Height		8181170						
ANR	8181744	Symbol	* planes		8181170						
ANR	8181745	Symbol	kmask		8181170						
ANR	8181746	Symbol	code		8181170						
ANR	8181747	Symbol	pim -> Width		8181170						
ANR	8181748	Symbol	* dev_proc		8181170						
ANR	8181749	Symbol	src_width		8181170						
ANR	8181750	Symbol	gs_currentdevicecolor_inline		8181170						
ANR	8181751	Symbol	min		8181170						
ANR	8181752	Symbol	dev_proc		8181170						
ANR	8181753	Symbol	src_height		8181170						
ANR	8181754	Symbol	y0		8181170						
ANR	8181755	Symbol	y1		8181170						
ANR	8181756	Symbol	pgs		8181170						
ANR	8181757	Symbol	& iinfo		8181170						
ANR	8181758	Symbol	pgs -> memory		8181170						
ANR	8181759	Symbol	false		8181170						
ANR	8181760	Symbol	bitmap_data		8181170						
ANR	8181761	Symbol	dest_bytes		8181170						
ANR	8181762	Symbol	iinfo		8181170						
ANR	8181763	Symbol	gx_set_dev_color		8181170						
ANR	8181764	Symbol	bitmap_raster		8181170						
ANR	8181765	Symbol	merged_line		8181170						
ANR	8181766	Symbol	image_data		8181170						
ANR	8181767	Symbol	y		8181170						
ANR	8181768	Symbol	"* dev_proc ( dev , begin_image )"		8181170						
ANR	8181769	Symbol	* pim		8181170						
ANR	8181770	Symbol	first		8181170						
ANR	8181771	Function	pl_bitmap_build_char	381:0:12428:16679							
ANR	8181772	FunctionDef	"pl_bitmap_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph)"		8181771	0					
ANR	8181773	CompoundStatement		384:0:12566:16679	8181771	0					
ANR	8181774	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	385:4:12572:12624	8181771	0	True				
ANR	8181775	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8181771	0					
ANR	8181776	IdentifierDeclType	pl_font_t *		8181771	0					
ANR	8181777	Identifier	plfont		8181771	1					
ANR	8181778	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8181771	2		=			
ANR	8181779	Identifier	plfont		8181771	0					
ANR	8181780	CastExpression	( pl_font_t * ) pfont -> client_data		8181771	1					
ANR	8181781	CastTarget	pl_font_t *		8181771	0					
ANR	8181782	PtrMemberAccess	pfont -> client_data		8181771	1					
ANR	8181783	Identifier	pfont		8181771	0					
ANR	8181784	Identifier	client_data		8181771	1					
ANR	8181785	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data ;"	386:4:12630:12691	8181771	1	True				
ANR	8181786	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8181771	0					
ANR	8181787	IdentifierDeclType	const byte *		8181771	0					
ANR	8181788	Identifier	cdata		8181771	1					
ANR	8181789	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8181771	2		=			
ANR	8181790	Identifier	cdata		8181771	0					
ANR	8181791	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8181771	1					
ANR	8181792	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8181771	0					
ANR	8181793	Callee	pl_font_lookup_glyph		8181771	0					
ANR	8181794	Identifier	pl_font_lookup_glyph		8181771	0					
ANR	8181795	ArgumentList	plfont		8181771	1					
ANR	8181796	Argument	plfont		8181771	0					
ANR	8181797	Identifier	plfont		8181771	0					
ANR	8181798	Argument	glyph		8181771	1					
ANR	8181799	Identifier	glyph		8181771	0					
ANR	8181800	Identifier	data		8181771	1					
ANR	8181801	IdentifierDeclStatement	bool orient = plfont -> orient ;	387:4:12697:12725	8181771	2	True				
ANR	8181802	IdentifierDecl	orient = plfont -> orient		8181771	0					
ANR	8181803	IdentifierDeclType	bool		8181771	0					
ANR	8181804	Identifier	orient		8181771	1					
ANR	8181805	AssignmentExpression	orient = plfont -> orient		8181771	2		=			
ANR	8181806	Identifier	orient		8181771	0					
ANR	8181807	PtrMemberAccess	plfont -> orient		8181771	1					
ANR	8181808	Identifier	plfont		8181771	0					
ANR	8181809	Identifier	orient		8181771	1					
ANR	8181810	IfStatement	if ( cdata == 0 )		8181771	3					
ANR	8181811	Condition	cdata == 0	389:8:12736:12745	8181771	0	True				
ANR	8181812	EqualityExpression	cdata == 0		8181771	0		==			
ANR	8181813	Identifier	cdata		8181771	0					
ANR	8181814	PrimaryExpression	0		8181771	1					
ANR	8181815	CompoundStatement		6:20:181:181	8181771	1					
ANR	8181816	ReturnStatement	"return gs_setcharwidth ( penum , pgs , 0 , 0 ) ;"	390:8:12758:12798	8181771	0	True				
ANR	8181817	CallExpression	"gs_setcharwidth ( penum , pgs , 0 , 0 )"		8181771	0					
ANR	8181818	Callee	gs_setcharwidth		8181771	0					
ANR	8181819	Identifier	gs_setcharwidth		8181771	0					
ANR	8181820	ArgumentList	penum		8181771	1					
ANR	8181821	Argument	penum		8181771	0					
ANR	8181822	Identifier	penum		8181771	0					
ANR	8181823	Argument	pgs		8181771	1					
ANR	8181824	Identifier	pgs		8181771	0					
ANR	8181825	Argument	0		8181771	2					
ANR	8181826	PrimaryExpression	0		8181771	0					
ANR	8181827	Argument	0		8181771	3					
ANR	8181828	PrimaryExpression	0		8181771	0					
ANR	8181829	ElseStatement	else		8181771	0					
ANR	8181830	CompoundStatement		17:8:456:476	8181771	0					
ANR	8181831	IdentifierDeclStatement	const byte * params ;	392:8:12821:12839	8181771	0	True				
ANR	8181832	IdentifierDecl	* params		8181771	0					
ANR	8181833	IdentifierDeclType	const byte *		8181771	0					
ANR	8181834	Identifier	params		8181771	1					
ANR	8181835	IdentifierDeclStatement	const byte * bitmap_data ;	393:8:12849:12872	8181771	1	True				
ANR	8181836	IdentifierDecl	* bitmap_data		8181771	0					
ANR	8181837	IdentifierDeclType	const byte *		8181771	0					
ANR	8181838	Identifier	bitmap_data		8181771	1					
ANR	8181839	IdentifierDeclStatement	"int lsb , ascent ;"	394:8:12882:12897	8181771	2	True				
ANR	8181840	IdentifierDecl	lsb		8181771	0					
ANR	8181841	IdentifierDeclType	int		8181771	0					
ANR	8181842	Identifier	lsb		8181771	1					
ANR	8181843	IdentifierDecl	ascent		8181771	1					
ANR	8181844	IdentifierDeclType	int		8181771	0					
ANR	8181845	Identifier	ascent		8181771	1					
ANR	8181846	IdentifierDeclStatement	float delta_x ;	395:8:12907:12920	8181771	3	True				
ANR	8181847	IdentifierDecl	delta_x		8181771	0					
ANR	8181848	IdentifierDeclType	float		8181771	0					
ANR	8181849	Identifier	delta_x		8181771	1					
ANR	8181850	IdentifierDeclStatement	gs_image_t image ;	396:8:12930:12946	8181771	4	True				
ANR	8181851	IdentifierDecl	image		8181771	0					
ANR	8181852	IdentifierDeclType	gs_image_t		8181771	0					
ANR	8181853	Identifier	image		8181771	1					
ANR	8181854	IdentifierDeclStatement	gs_image_enum * ienum ;	397:8:12956:12976	8181771	5	True				
ANR	8181855	IdentifierDecl	* ienum		8181771	0					
ANR	8181856	IdentifierDeclType	gs_image_enum *		8181771	0					
ANR	8181857	Identifier	ienum		8181771	1					
ANR	8181858	IdentifierDeclStatement	int code ;	398:8:12986:12994	8181771	6	True				
ANR	8181859	IdentifierDecl	code		8181771	0					
ANR	8181860	IdentifierDeclType	int		8181771	0					
ANR	8181861	Identifier	code		8181771	1					
ANR	8181862	IdentifierDeclStatement	uint bold ;	399:8:13004:13013	8181771	7	True				
ANR	8181863	IdentifierDecl	bold		8181771	0					
ANR	8181864	IdentifierDeclType	uint		8181771	0					
ANR	8181865	Identifier	bold		8181771	1					
ANR	8181866	IdentifierDeclStatement	byte * bold_lines = 0 ;	400:8:13023:13043	8181771	8	True				
ANR	8181867	IdentifierDecl	* bold_lines = 0		8181771	0					
ANR	8181868	IdentifierDeclType	byte *		8181771	0					
ANR	8181869	Identifier	bold_lines		8181771	1					
ANR	8181870	AssignmentExpression	* bold_lines = 0		8181771	2		=			
ANR	8181871	Identifier	bold_lines		8181771	0					
ANR	8181872	PrimaryExpression	0		8181771	1					
ANR	8181873	IfStatement	if ( cdata [ 0 ] == 0 )		8181771	9					
ANR	8181874	Condition	cdata [ 0 ] == 0	402:12:13058:13070	8181771	0	True				
ANR	8181875	EqualityExpression	cdata [ 0 ] == 0		8181771	0		==			
ANR	8181876	ArrayIndexing	cdata [ 0 ]		8181771	0					
ANR	8181877	Identifier	cdata		8181771	0					
ANR	8181878	PrimaryExpression	0		8181771	1					
ANR	8181879	PrimaryExpression	0		8181771	1					
ANR	8181880	CompoundStatement		19:27:506:506	8181771	1					
ANR	8181881	ExpressionStatement	params = cdata + 2	403:12:13110:13128	8181771	0	True				
ANR	8181882	AssignmentExpression	params = cdata + 2		8181771	0		=			
ANR	8181883	Identifier	params		8181771	0					
ANR	8181884	AdditiveExpression	cdata + 2		8181771	1		+			
ANR	8181885	Identifier	cdata		8181771	0					
ANR	8181886	PrimaryExpression	2		8181771	1					
ANR	8181887	ExpressionStatement	"bitmap_data = cdata + round_up ( 10 , ARCH_ALIGN_PTR_MOD )"	404:12:13142:13196	8181771	1	True				
ANR	8181888	AssignmentExpression	"bitmap_data = cdata + round_up ( 10 , ARCH_ALIGN_PTR_MOD )"		8181771	0		=			
ANR	8181889	Identifier	bitmap_data		8181771	0					
ANR	8181890	AdditiveExpression	"cdata + round_up ( 10 , ARCH_ALIGN_PTR_MOD )"		8181771	1		+			
ANR	8181891	Identifier	cdata		8181771	0					
ANR	8181892	CallExpression	"round_up ( 10 , ARCH_ALIGN_PTR_MOD )"		8181771	1					
ANR	8181893	Callee	round_up		8181771	0					
ANR	8181894	Identifier	round_up		8181771	0					
ANR	8181895	ArgumentList	10		8181771	1					
ANR	8181896	Argument	10		8181771	0					
ANR	8181897	PrimaryExpression	10		8181771	0					
ANR	8181898	Argument	ARCH_ALIGN_PTR_MOD		8181771	1					
ANR	8181899	Identifier	ARCH_ALIGN_PTR_MOD		8181771	0					
ANR	8181900	ExpressionStatement	delta_x = 0	405:12:13210:13221	8181771	2	True				
ANR	8181901	AssignmentExpression	delta_x = 0		8181771	0		=			
ANR	8181902	Identifier	delta_x		8181771	0					
ANR	8181903	PrimaryExpression	0		8181771	1					
ANR	8181904	ExpressionStatement	lsb = pl_get_int16 ( params )	406:12:13259:13285	8181771	3	True				
ANR	8181905	AssignmentExpression	lsb = pl_get_int16 ( params )		8181771	0		=			
ANR	8181906	Identifier	lsb		8181771	0					
ANR	8181907	CallExpression	pl_get_int16 ( params )		8181771	1					
ANR	8181908	Callee	pl_get_int16		8181771	0					
ANR	8181909	Identifier	pl_get_int16		8181771	0					
ANR	8181910	ArgumentList	params		8181771	1					
ANR	8181911	Argument	params		8181771	0					
ANR	8181912	Identifier	params		8181771	0					
ANR	8181913	ExpressionStatement	ascent = pl_get_int16 ( params + 2 )	407:12:13299:13332	8181771	4	True				
ANR	8181914	AssignmentExpression	ascent = pl_get_int16 ( params + 2 )		8181771	0		=			
ANR	8181915	Identifier	ascent		8181771	0					
ANR	8181916	CallExpression	pl_get_int16 ( params + 2 )		8181771	1					
ANR	8181917	Callee	pl_get_int16		8181771	0					
ANR	8181918	Identifier	pl_get_int16		8181771	0					
ANR	8181919	ArgumentList	params + 2		8181771	1					
ANR	8181920	Argument	params + 2		8181771	0					
ANR	8181921	AdditiveExpression	params + 2		8181771	0		+			
ANR	8181922	Identifier	params		8181771	0					
ANR	8181923	PrimaryExpression	2		8181771	1					
ANR	8181924	ElseStatement	else		8181771	0					
ANR	8181925	CompoundStatement		25:15:782:782	8181771	0					
ANR	8181926	ExpressionStatement	params = cdata + 6	409:12:13396:13414	8181771	0	True				
ANR	8181927	AssignmentExpression	params = cdata + 6		8181771	0		=			
ANR	8181928	Identifier	params		8181771	0					
ANR	8181929	AdditiveExpression	cdata + 6		8181771	1		+			
ANR	8181930	Identifier	cdata		8181771	0					
ANR	8181931	PrimaryExpression	6		8181771	1					
ANR	8181932	ExpressionStatement	bitmap_data = cdata + 16	410:12:13428:13452	8181771	1	True				
ANR	8181933	AssignmentExpression	bitmap_data = cdata + 16		8181771	0		=			
ANR	8181934	Identifier	bitmap_data		8181771	0					
ANR	8181935	AdditiveExpression	cdata + 16		8181771	1		+			
ANR	8181936	Identifier	cdata		8181771	0					
ANR	8181937	PrimaryExpression	16		8181771	1					
ANR	8181938	ExpressionStatement	delta_x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : ( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) ) )	411:12:13466:13711	8181771	2	True				
ANR	8181939	AssignmentExpression	delta_x = ( plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : ( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) ) )		8181771	0		=			
ANR	8181940	Identifier	delta_x		8181771	0					
ANR	8181941	ConditionalExpression	plfont -> header [ 13 ] ? pl_get_int16 ( params + 8 ) * 0.25 : ( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )		8181771	1					
ANR	8181942	Condition	plfont -> header [ 13 ]		8181771	0					
ANR	8181943	ArrayIndexing	plfont -> header [ 13 ]		8181771	0					
ANR	8181944	PtrMemberAccess	plfont -> header		8181771	0					
ANR	8181945	Identifier	plfont		8181771	0					
ANR	8181946	Identifier	header		8181771	1					
ANR	8181947	PrimaryExpression	13		8181771	1					
ANR	8181948	MultiplicativeExpression	pl_get_int16 ( params + 8 ) * 0.25		8181771	1		*			
ANR	8181949	CallExpression	pl_get_int16 ( params + 8 )		8181771	0					
ANR	8181950	Callee	pl_get_int16		8181771	0					
ANR	8181951	Identifier	pl_get_int16		8181771	0					
ANR	8181952	ArgumentList	params + 8		8181771	1					
ANR	8181953	Argument	params + 8		8181771	0					
ANR	8181954	AdditiveExpression	params + 8		8181771	0		+			
ANR	8181955	Identifier	params		8181771	0					
ANR	8181956	PrimaryExpression	8		8181771	1					
ANR	8181957	PrimaryExpression	0.25		8181771	1					
ANR	8181958	CastExpression	( short ) ( pl_get_int16 ( params ) + pl_get_int16 ( params + 4 ) )		8181771	2					
ANR	8181959	CastTarget	short		8181771	0					
ANR	8181960	AdditiveExpression	pl_get_int16 ( params ) + pl_get_int16 ( params + 4 )		8181771	1		+			
ANR	8181961	CallExpression	pl_get_int16 ( params )		8181771	0					
ANR	8181962	Callee	pl_get_int16		8181771	0					
ANR	8181963	Identifier	pl_get_int16		8181771	0					
ANR	8181964	ArgumentList	params		8181771	1					
ANR	8181965	Argument	params		8181771	0					
ANR	8181966	Identifier	params		8181771	0					
ANR	8181967	CallExpression	pl_get_int16 ( params + 4 )		8181771	1					
ANR	8181968	Callee	pl_get_int16		8181771	0					
ANR	8181969	Identifier	pl_get_int16		8181771	0					
ANR	8181970	ArgumentList	params + 4		8181771	1					
ANR	8181971	Argument	params + 4		8181771	0					
ANR	8181972	AdditiveExpression	params + 4		8181771	0		+			
ANR	8181973	Identifier	params		8181771	0					
ANR	8181974	PrimaryExpression	4		8181771	1					
ANR	8181975	ExpressionStatement	lsb = pl_get_int16 ( params )	415:12:13725:13751	8181771	3	True				
ANR	8181976	AssignmentExpression	lsb = pl_get_int16 ( params )		8181771	0		=			
ANR	8181977	Identifier	lsb		8181771	0					
ANR	8181978	CallExpression	pl_get_int16 ( params )		8181771	1					
ANR	8181979	Callee	pl_get_int16		8181771	0					
ANR	8181980	Identifier	pl_get_int16		8181771	0					
ANR	8181981	ArgumentList	params		8181771	1					
ANR	8181982	Argument	params		8181771	0					
ANR	8181983	Identifier	params		8181771	0					
ANR	8181984	ExpressionStatement	ascent = pl_get_int16 ( params + 2 )	416:12:13765:13798	8181771	4	True				
ANR	8181985	AssignmentExpression	ascent = pl_get_int16 ( params + 2 )		8181771	0		=			
ANR	8181986	Identifier	ascent		8181771	0					
ANR	8181987	CallExpression	pl_get_int16 ( params + 2 )		8181771	1					
ANR	8181988	Callee	pl_get_int16		8181771	0					
ANR	8181989	Identifier	pl_get_int16		8181771	0					
ANR	8181990	ArgumentList	params + 2		8181771	1					
ANR	8181991	Argument	params + 2		8181771	0					
ANR	8181992	AdditiveExpression	params + 2		8181771	0		+			
ANR	8181993	Identifier	params		8181771	0					
ANR	8181994	PrimaryExpression	2		8181771	1					
ANR	8181995	ExpressionStatement	"ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_bitmap_build_char"" )"	418:8:13818:13882	8181771	10	True				
ANR	8181996	AssignmentExpression	"ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_bitmap_build_char"" )"		8181771	0		=			
ANR	8181997	Identifier	ienum		8181771	0					
ANR	8181998	CallExpression	"gs_image_enum_alloc ( pgs -> memory , ""pl_bitmap_build_char"" )"		8181771	1					
ANR	8181999	Callee	gs_image_enum_alloc		8181771	0					
ANR	8182000	Identifier	gs_image_enum_alloc		8181771	0					
ANR	8182001	ArgumentList	pgs -> memory		8181771	1					
ANR	8182002	Argument	pgs -> memory		8181771	0					
ANR	8182003	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182004	Identifier	pgs		8181771	0					
ANR	8182005	Identifier	memory		8181771	1					
ANR	8182006	Argument	"""pl_bitmap_build_char"""		8181771	1					
ANR	8182007	PrimaryExpression	"""pl_bitmap_build_char"""		8181771	0					
ANR	8182008	IfStatement	if ( ienum == 0 )		8181771	11					
ANR	8182009	Condition	ienum == 0	419:12:13896:13905	8181771	0	True				
ANR	8182010	EqualityExpression	ienum == 0		8181771	0		==			
ANR	8182011	Identifier	ienum		8181771	0					
ANR	8182012	PrimaryExpression	0		8181771	1					
ANR	8182013	ExpressionStatement	return_error ( gs_error_VMerror )	420:12:13920:13950	8181771	1	True				
ANR	8182014	CallExpression	return_error ( gs_error_VMerror )		8181771	0					
ANR	8182015	Callee	return_error		8181771	0					
ANR	8182016	Identifier	return_error		8181771	0					
ANR	8182017	ArgumentList	gs_error_VMerror		8181771	1					
ANR	8182018	Argument	gs_error_VMerror		8181771	0					
ANR	8182019	Identifier	gs_error_VMerror		8181771	0					
ANR	8182020	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	421:8:13960:13994	8181771	12	True				
ANR	8182021	CallExpression	"gs_image_t_init_mask ( & image , true )"		8181771	0					
ANR	8182022	Callee	gs_image_t_init_mask		8181771	0					
ANR	8182023	Identifier	gs_image_t_init_mask		8181771	0					
ANR	8182024	ArgumentList	& image		8181771	1					
ANR	8182025	Argument	& image		8181771	0					
ANR	8182026	UnaryOperationExpression	& image		8181771	0					
ANR	8182027	UnaryOperator	&		8181771	0					
ANR	8182028	Identifier	image		8181771	1					
ANR	8182029	Argument	true		8181771	1					
ANR	8182030	Identifier	true		8181771	0					
ANR	8182031	ExpressionStatement	image . Width = pl_get_uint16 ( params + 4 )	422:8:14004:14043	8181771	13	True				
ANR	8182032	AssignmentExpression	image . Width = pl_get_uint16 ( params + 4 )		8181771	0		=			
ANR	8182033	MemberAccess	image . Width		8181771	0					
ANR	8182034	Identifier	image		8181771	0					
ANR	8182035	Identifier	Width		8181771	1					
ANR	8182036	CallExpression	pl_get_uint16 ( params + 4 )		8181771	1					
ANR	8182037	Callee	pl_get_uint16		8181771	0					
ANR	8182038	Identifier	pl_get_uint16		8181771	0					
ANR	8182039	ArgumentList	params + 4		8181771	1					
ANR	8182040	Argument	params + 4		8181771	0					
ANR	8182041	AdditiveExpression	params + 4		8181771	0		+			
ANR	8182042	Identifier	params		8181771	0					
ANR	8182043	PrimaryExpression	4		8181771	1					
ANR	8182044	ExpressionStatement	image . Height = pl_get_uint16 ( params + 6 )	423:8:14053:14093	8181771	14	True				
ANR	8182045	AssignmentExpression	image . Height = pl_get_uint16 ( params + 6 )		8181771	0		=			
ANR	8182046	MemberAccess	image . Height		8181771	0					
ANR	8182047	Identifier	image		8181771	0					
ANR	8182048	Identifier	Height		8181771	1					
ANR	8182049	CallExpression	pl_get_uint16 ( params + 6 )		8181771	1					
ANR	8182050	Callee	pl_get_uint16		8181771	0					
ANR	8182051	Identifier	pl_get_uint16		8181771	0					
ANR	8182052	ArgumentList	params + 6		8181771	1					
ANR	8182053	Argument	params + 6		8181771	0					
ANR	8182054	AdditiveExpression	params + 6		8181771	0		+			
ANR	8182055	Identifier	params		8181771	0					
ANR	8182056	PrimaryExpression	6		8181771	1					
ANR	8182057	IfStatement	if ( plfont -> bold_fraction != 0 )		8181771	15					
ANR	8182058	Condition	plfont -> bold_fraction != 0	425:12:14161:14186	8181771	0	True				
ANR	8182059	EqualityExpression	plfont -> bold_fraction != 0		8181771	0		!=			
ANR	8182060	PtrMemberAccess	plfont -> bold_fraction		8181771	0					
ANR	8182061	Identifier	plfont		8181771	0					
ANR	8182062	Identifier	bold_fraction		8181771	1					
ANR	8182063	PrimaryExpression	0		8181771	1					
ANR	8182064	CompoundStatement		42:40:1622:1622	8181771	1					
ANR	8182065	ExpressionStatement	bold = ( uint ) ( 2 * image . Height * plfont -> bold_fraction + 0.5 )	426:12:14203:14265	8181771	0	True				
ANR	8182066	AssignmentExpression	bold = ( uint ) ( 2 * image . Height * plfont -> bold_fraction + 0.5 )		8181771	0		=			
ANR	8182067	Identifier	bold		8181771	0					
ANR	8182068	CastExpression	( uint ) ( 2 * image . Height * plfont -> bold_fraction + 0.5 )		8181771	1					
ANR	8182069	CastTarget	uint		8181771	0					
ANR	8182070	AdditiveExpression	2 * image . Height * plfont -> bold_fraction + 0.5		8181771	1		+			
ANR	8182071	MultiplicativeExpression	2 * image . Height * plfont -> bold_fraction		8181771	0		*			
ANR	8182072	PrimaryExpression	2		8181771	0					
ANR	8182073	MultiplicativeExpression	image . Height * plfont -> bold_fraction		8181771	1		*			
ANR	8182074	MemberAccess	image . Height		8181771	0					
ANR	8182075	Identifier	image		8181771	0					
ANR	8182076	Identifier	Height		8181771	1					
ANR	8182077	PtrMemberAccess	plfont -> bold_fraction		8181771	1					
ANR	8182078	Identifier	plfont		8181771	0					
ANR	8182079	Identifier	bold_fraction		8181771	1					
ANR	8182080	PrimaryExpression	0.5		8181771	1					
ANR	8182081	ExpressionStatement	"bold_lines = alloc_bold_lines ( pgs -> memory , image . Width , bold , ""pl_bitmap_build_char(bold_line)"" )"	427:12:14279:14417	8181771	1	True				
ANR	8182082	AssignmentExpression	"bold_lines = alloc_bold_lines ( pgs -> memory , image . Width , bold , ""pl_bitmap_build_char(bold_line)"" )"		8181771	0		=			
ANR	8182083	Identifier	bold_lines		8181771	0					
ANR	8182084	CallExpression	"alloc_bold_lines ( pgs -> memory , image . Width , bold , ""pl_bitmap_build_char(bold_line)"" )"		8181771	1					
ANR	8182085	Callee	alloc_bold_lines		8181771	0					
ANR	8182086	Identifier	alloc_bold_lines		8181771	0					
ANR	8182087	ArgumentList	pgs -> memory		8181771	1					
ANR	8182088	Argument	pgs -> memory		8181771	0					
ANR	8182089	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182090	Identifier	pgs		8181771	0					
ANR	8182091	Identifier	memory		8181771	1					
ANR	8182092	Argument	image . Width		8181771	1					
ANR	8182093	MemberAccess	image . Width		8181771	0					
ANR	8182094	Identifier	image		8181771	0					
ANR	8182095	Identifier	Width		8181771	1					
ANR	8182096	Argument	bold		8181771	2					
ANR	8182097	Identifier	bold		8181771	0					
ANR	8182098	Argument	"""pl_bitmap_build_char(bold_line)"""		8181771	3					
ANR	8182099	PrimaryExpression	"""pl_bitmap_build_char(bold_line)"""		8181771	0					
ANR	8182100	IfStatement	if ( bold_lines == 0 )		8181771	2					
ANR	8182101	Condition	bold_lines == 0	429:16:14435:14449	8181771	0	True				
ANR	8182102	EqualityExpression	bold_lines == 0		8181771	0		==			
ANR	8182103	Identifier	bold_lines		8181771	0					
ANR	8182104	PrimaryExpression	0		8181771	1					
ANR	8182105	CompoundStatement		46:33:1885:1885	8181771	1					
ANR	8182106	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	430:16:14470:14508	8181771	0	True				
ANR	8182107	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		8181771	0		=			
ANR	8182108	Identifier	code		8181771	0					
ANR	8182109	CallExpression	gs_note_error ( gs_error_VMerror )		8181771	1					
ANR	8182110	Callee	gs_note_error		8181771	0					
ANR	8182111	Identifier	gs_note_error		8181771	0					
ANR	8182112	ArgumentList	gs_error_VMerror		8181771	1					
ANR	8182113	Argument	gs_error_VMerror		8181771	0					
ANR	8182114	Identifier	gs_error_VMerror		8181771	0					
ANR	8182115	GotoStatement	goto out ;	431:16:14526:14534	8181771	1	True				
ANR	8182116	Identifier	out		8181771	0					
ANR	8182117	ExpressionStatement	image . Width += bold	433:12:14562:14581	8181771	3	True				
ANR	8182118	AssignmentExpression	image . Width += bold		8181771	0		+=			
ANR	8182119	MemberAccess	image . Width		8181771	0					
ANR	8182120	Identifier	image		8181771	0					
ANR	8182121	Identifier	Width		8181771	1					
ANR	8182122	Identifier	bold		8181771	1					
ANR	8182123	ExpressionStatement	image . Height += bold	434:12:14595:14615	8181771	4	True				
ANR	8182124	AssignmentExpression	image . Height += bold		8181771	0		+=			
ANR	8182125	MemberAccess	image . Height		8181771	0					
ANR	8182126	Identifier	image		8181771	0					
ANR	8182127	Identifier	Height		8181771	1					
ANR	8182128	Identifier	bold		8181771	1					
ANR	8182129	ExpressionStatement	ascent += bold	435:12:14629:14643	8181771	5	True				
ANR	8182130	AssignmentExpression	ascent += bold		8181771	0		+=			
ANR	8182131	Identifier	ascent		8181771	0					
ANR	8182132	Identifier	bold		8181771	1					
ANR	8182133	ElseStatement	else		8181771	0					
ANR	8182134	ExpressionStatement	bold = 0	437:12:14672:14680	8181771	0	True				
ANR	8182135	AssignmentExpression	bold = 0		8181771	0		=			
ANR	8182136	Identifier	bold		8181771	0					
ANR	8182137	PrimaryExpression	0		8181771	1					
ANR	8182138	ExpressionStatement	gs_make_identity ( & image . ImageMatrix )	439:8:14691:14727	8181771	16	True				
ANR	8182139	CallExpression	gs_make_identity ( & image . ImageMatrix )		8181771	0					
ANR	8182140	Callee	gs_make_identity		8181771	0					
ANR	8182141	Identifier	gs_make_identity		8181771	0					
ANR	8182142	ArgumentList	& image . ImageMatrix		8181771	1					
ANR	8182143	Argument	& image . ImageMatrix		8181771	0					
ANR	8182144	UnaryOperationExpression	& image . ImageMatrix		8181771	0					
ANR	8182145	UnaryOperator	&		8181771	0					
ANR	8182146	MemberAccess	image . ImageMatrix		8181771	1					
ANR	8182147	Identifier	image		8181771	0					
ANR	8182148	Identifier	ImageMatrix		8181771	1					
ANR	8182149	ExpressionStatement	"gs_matrix_rotate ( & image . ImageMatrix , orient * - 90 , & image . ImageMatrix )"	440:8:14737:14832	8181771	17	True				
ANR	8182150	CallExpression	"gs_matrix_rotate ( & image . ImageMatrix , orient * - 90 , & image . ImageMatrix )"		8181771	0					
ANR	8182151	Callee	gs_matrix_rotate		8181771	0					
ANR	8182152	Identifier	gs_matrix_rotate		8181771	0					
ANR	8182153	ArgumentList	& image . ImageMatrix		8181771	1					
ANR	8182154	Argument	& image . ImageMatrix		8181771	0					
ANR	8182155	UnaryOperationExpression	& image . ImageMatrix		8181771	0					
ANR	8182156	UnaryOperator	&		8181771	0					
ANR	8182157	MemberAccess	image . ImageMatrix		8181771	1					
ANR	8182158	Identifier	image		8181771	0					
ANR	8182159	Identifier	ImageMatrix		8181771	1					
ANR	8182160	Argument	orient * - 90		8181771	1					
ANR	8182161	MultiplicativeExpression	orient * - 90		8181771	0		*			
ANR	8182162	Identifier	orient		8181771	0					
ANR	8182163	UnaryOperationExpression	- 90		8181771	1					
ANR	8182164	UnaryOperator	-		8181771	0					
ANR	8182165	PrimaryExpression	90		8181771	1					
ANR	8182166	Argument	& image . ImageMatrix		8181771	2					
ANR	8182167	UnaryOperationExpression	& image . ImageMatrix		8181771	0					
ANR	8182168	UnaryOperator	&		8181771	0					
ANR	8182169	MemberAccess	image . ImageMatrix		8181771	1					
ANR	8182170	Identifier	image		8181771	0					
ANR	8182171	Identifier	ImageMatrix		8181771	1					
ANR	8182172	ExpressionStatement	image . ImageMatrix . tx -= lsb	442:8:14842:14869	8181771	18	True				
ANR	8182173	AssignmentExpression	image . ImageMatrix . tx -= lsb		8181771	0		-=			
ANR	8182174	MemberAccess	image . ImageMatrix . tx		8181771	0					
ANR	8182175	MemberAccess	image . ImageMatrix		8181771	0					
ANR	8182176	Identifier	image		8181771	0					
ANR	8182177	Identifier	ImageMatrix		8181771	1					
ANR	8182178	Identifier	tx		8181771	1					
ANR	8182179	Identifier	lsb		8181771	1					
ANR	8182180	ExpressionStatement	image . ImageMatrix . ty += ascent	443:8:14879:14909	8181771	19	True				
ANR	8182181	AssignmentExpression	image . ImageMatrix . ty += ascent		8181771	0		+=			
ANR	8182182	MemberAccess	image . ImageMatrix . ty		8181771	0					
ANR	8182183	MemberAccess	image . ImageMatrix		8181771	0					
ANR	8182184	Identifier	image		8181771	0					
ANR	8182185	Identifier	ImageMatrix		8181771	1					
ANR	8182186	Identifier	ty		8181771	1					
ANR	8182187	Identifier	ascent		8181771	1					
ANR	8182188	ExpressionStatement	image . adjust = true	444:8:14919:14938	8181771	20	True				
ANR	8182189	AssignmentExpression	image . adjust = true		8181771	0		=			
ANR	8182190	MemberAccess	image . adjust		8181771	0					
ANR	8182191	Identifier	image		8181771	0					
ANR	8182192	Identifier	adjust		8181771	1					
ANR	8182193	Identifier	true		8181771	1					
ANR	8182194	IfStatement	if ( bold || orient != 0 )		8181771	21					
ANR	8182195	Condition	bold || orient != 0	445:12:14952:14970	8181771	0	True				
ANR	8182196	OrExpression	bold || orient != 0		8181771	0		||			
ANR	8182197	Identifier	bold		8181771	0					
ANR	8182198	EqualityExpression	orient != 0		8181771	1		!=			
ANR	8182199	Identifier	orient		8181771	0					
ANR	8182200	PrimaryExpression	0		8181771	1					
ANR	8182201	ExpressionStatement	"code = gs_setcharwidth ( penum , pgs , delta_x , 0 )"	446:12:14985:15031	8181771	1	True				
ANR	8182202	AssignmentExpression	"code = gs_setcharwidth ( penum , pgs , delta_x , 0 )"		8181771	0		=			
ANR	8182203	Identifier	code		8181771	0					
ANR	8182204	CallExpression	"gs_setcharwidth ( penum , pgs , delta_x , 0 )"		8181771	1					
ANR	8182205	Callee	gs_setcharwidth		8181771	0					
ANR	8182206	Identifier	gs_setcharwidth		8181771	0					
ANR	8182207	ArgumentList	penum		8181771	1					
ANR	8182208	Argument	penum		8181771	0					
ANR	8182209	Identifier	penum		8181771	0					
ANR	8182210	Argument	pgs		8181771	1					
ANR	8182211	Identifier	pgs		8181771	0					
ANR	8182212	Argument	delta_x		8181771	2					
ANR	8182213	Identifier	delta_x		8181771	0					
ANR	8182214	Argument	0		8181771	3					
ANR	8182215	PrimaryExpression	0		8181771	0					
ANR	8182216	ElseStatement	else		8181771	0					
ANR	8182217	CompoundStatement		67:12:2604:2614	8181771	0					
ANR	8182218	IdentifierDeclStatement	float m [ 6 ] ;	450:12:15171:15181	8181771	0	True				
ANR	8182219	IdentifierDecl	m [ 6 ]		8181771	0					
ANR	8182220	IdentifierDeclType	float [ 6 ]		8181771	0					
ANR	8182221	Identifier	m		8181771	1					
ANR	8182222	PrimaryExpression	6		8181771	2					
ANR	8182223	ExpressionStatement	m [ 0 ] = delta_x	452:12:15196:15210	8181771	1	True				
ANR	8182224	AssignmentExpression	m [ 0 ] = delta_x		8181771	0		=			
ANR	8182225	ArrayIndexing	m [ 0 ]		8181771	0					
ANR	8182226	Identifier	m		8181771	0					
ANR	8182227	PrimaryExpression	0		8181771	1					
ANR	8182228	Identifier	delta_x		8181771	1					
ANR	8182229	ExpressionStatement	m [ 1 ] = 0	453:12:15224:15232	8181771	2	True				
ANR	8182230	AssignmentExpression	m [ 1 ] = 0		8181771	0		=			
ANR	8182231	ArrayIndexing	m [ 1 ]		8181771	0					
ANR	8182232	Identifier	m		8181771	0					
ANR	8182233	PrimaryExpression	1		8181771	1					
ANR	8182234	PrimaryExpression	0		8181771	1					
ANR	8182235	ExpressionStatement	m [ 2 ] = ( float ) lsb	454:12:15246:15263	8181771	3	True				
ANR	8182236	AssignmentExpression	m [ 2 ] = ( float ) lsb		8181771	0		=			
ANR	8182237	ArrayIndexing	m [ 2 ]		8181771	0					
ANR	8182238	Identifier	m		8181771	0					
ANR	8182239	PrimaryExpression	2		8181771	1					
ANR	8182240	CastExpression	( float ) lsb		8181771	1					
ANR	8182241	CastTarget	float		8181771	0					
ANR	8182242	Identifier	lsb		8181771	1					
ANR	8182243	ExpressionStatement	m [ 3 ] = ( float ) ( image . Height - ascent )	455:12:15277:15314	8181771	4	True				
ANR	8182244	AssignmentExpression	m [ 3 ] = ( float ) ( image . Height - ascent )		8181771	0		=			
ANR	8182245	ArrayIndexing	m [ 3 ]		8181771	0					
ANR	8182246	Identifier	m		8181771	0					
ANR	8182247	PrimaryExpression	3		8181771	1					
ANR	8182248	CastExpression	( float ) ( image . Height - ascent )		8181771	1					
ANR	8182249	CastTarget	float		8181771	0					
ANR	8182250	AdditiveExpression	image . Height - ascent		8181771	1		-			
ANR	8182251	MemberAccess	image . Height		8181771	0					
ANR	8182252	Identifier	image		8181771	0					
ANR	8182253	Identifier	Height		8181771	1					
ANR	8182254	Identifier	ascent		8181771	1					
ANR	8182255	ExpressionStatement	m [ 4 ] = image . Width + m [ 2 ]	456:12:15328:15353	8181771	5	True				
ANR	8182256	AssignmentExpression	m [ 4 ] = image . Width + m [ 2 ]		8181771	0		=			
ANR	8182257	ArrayIndexing	m [ 4 ]		8181771	0					
ANR	8182258	Identifier	m		8181771	0					
ANR	8182259	PrimaryExpression	4		8181771	1					
ANR	8182260	AdditiveExpression	image . Width + m [ 2 ]		8181771	1		+			
ANR	8182261	MemberAccess	image . Width		8181771	0					
ANR	8182262	Identifier	image		8181771	0					
ANR	8182263	Identifier	Width		8181771	1					
ANR	8182264	ArrayIndexing	m [ 2 ]		8181771	1					
ANR	8182265	Identifier	m		8181771	0					
ANR	8182266	PrimaryExpression	2		8181771	1					
ANR	8182267	ExpressionStatement	m [ 5 ] = ( float ) ( - ascent )	457:12:15367:15390	8181771	6	True				
ANR	8182268	AssignmentExpression	m [ 5 ] = ( float ) ( - ascent )		8181771	0		=			
ANR	8182269	ArrayIndexing	m [ 5 ]		8181771	0					
ANR	8182270	Identifier	m		8181771	0					
ANR	8182271	PrimaryExpression	5		8181771	1					
ANR	8182272	CastExpression	( float ) ( - ascent )		8181771	1					
ANR	8182273	CastTarget	float		8181771	0					
ANR	8182274	UnaryOperationExpression	- ascent		8181771	1					
ANR	8182275	UnaryOperator	-		8181771	0					
ANR	8182276	Identifier	ascent		8181771	1					
ANR	8182277	ExpressionStatement	"code = gs_setcachedevice ( penum , pgs , m )"	458:12:15404:15443	8181771	7	True				
ANR	8182278	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , m )"		8181771	0		=			
ANR	8182279	Identifier	code		8181771	0					
ANR	8182280	CallExpression	"gs_setcachedevice ( penum , pgs , m )"		8181771	1					
ANR	8182281	Callee	gs_setcachedevice		8181771	0					
ANR	8182282	Identifier	gs_setcachedevice		8181771	0					
ANR	8182283	ArgumentList	penum		8181771	1					
ANR	8182284	Argument	penum		8181771	0					
ANR	8182285	Identifier	penum		8181771	0					
ANR	8182286	Argument	pgs		8181771	1					
ANR	8182287	Identifier	pgs		8181771	0					
ANR	8182288	Argument	m		8181771	2					
ANR	8182289	Identifier	m		8181771	0					
ANR	8182290	IfStatement	if ( code < 0 )		8181771	22					
ANR	8182291	Condition	code < 0	460:12:15467:15474	8181771	0	True				
ANR	8182292	RelationalExpression	code < 0		8181771	0		<			
ANR	8182293	Identifier	code		8181771	0					
ANR	8182294	PrimaryExpression	0		8181771	1					
ANR	8182295	ReturnStatement	return code ;	461:12:15489:15500	8181771	1	True				
ANR	8182296	Identifier	code		8181771	0					
ANR	8182297	IfStatement	if ( gs_debug_c ( 'B' ) )		8181771	23					
ANR	8182298	Condition	gs_debug_c ( 'B' )	463:12:15527:15541	8181771	0	True				
ANR	8182299	CallExpression	gs_debug_c ( 'B' )		8181771	0					
ANR	8182300	Callee	gs_debug_c		8181771	0					
ANR	8182301	Identifier	gs_debug_c		8181771	0					
ANR	8182302	ArgumentList	'B'		8181771	1					
ANR	8182303	Argument	'B'		8181771	0					
ANR	8182304	PrimaryExpression	'B'		8181771	0					
ANR	8182305	CompoundStatement		82:12:3010:3062	8181771	1					
ANR	8182306	IdentifierDeclStatement	int i ;	464:12:15558:15563	8181771	0	True				
ANR	8182307	IdentifierDecl	i		8181771	0					
ANR	8182308	IdentifierDeclType	int		8181771	0					
ANR	8182309	Identifier	i		8181771	1					
ANR	8182310	IdentifierDeclStatement	"int pixels = round_up ( image . Width , 8 ) * image . Height ;"	465:12:15577:15629	8181771	1	True				
ANR	8182311	IdentifierDecl	"pixels = round_up ( image . Width , 8 ) * image . Height"		8181771	0					
ANR	8182312	IdentifierDeclType	int		8181771	0					
ANR	8182313	Identifier	pixels		8181771	1					
ANR	8182314	AssignmentExpression	"pixels = round_up ( image . Width , 8 ) * image . Height"		8181771	2		=			
ANR	8182315	Identifier	pixels		8181771	0					
ANR	8182316	MultiplicativeExpression	"round_up ( image . Width , 8 ) * image . Height"		8181771	1		*			
ANR	8182317	CallExpression	"round_up ( image . Width , 8 )"		8181771	0					
ANR	8182318	Callee	round_up		8181771	0					
ANR	8182319	Identifier	round_up		8181771	0					
ANR	8182320	ArgumentList	image . Width		8181771	1					
ANR	8182321	Argument	image . Width		8181771	0					
ANR	8182322	MemberAccess	image . Width		8181771	0					
ANR	8182323	Identifier	image		8181771	0					
ANR	8182324	Identifier	Width		8181771	1					
ANR	8182325	Argument	8		8181771	1					
ANR	8182326	PrimaryExpression	8		8181771	0					
ANR	8182327	MemberAccess	image . Height		8181771	1					
ANR	8182328	Identifier	image		8181771	0					
ANR	8182329	Identifier	Height		8181771	1					
ANR	8182330	ExpressionStatement	"dmprintf7 ( pgs -> memory , ""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"" , chr , image . Width , image . Height , lsb , ascent , pl_get_int16 ( params + 2 ) , pl_get_int16 ( params ) )"	467:12:15644:15925	8181771	2	True				
ANR	8182331	CallExpression	"dmprintf7 ( pgs -> memory , ""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"" , chr , image . Width , image . Height , lsb , ascent , pl_get_int16 ( params + 2 ) , pl_get_int16 ( params ) )"		8181771	0					
ANR	8182332	Callee	dmprintf7		8181771	0					
ANR	8182333	Identifier	dmprintf7		8181771	0					
ANR	8182334	ArgumentList	pgs -> memory		8181771	1					
ANR	8182335	Argument	pgs -> memory		8181771	0					
ANR	8182336	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182337	Identifier	pgs		8181771	0					
ANR	8182338	Identifier	memory		8181771	1					
ANR	8182339	Argument	"""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"""		8181771	1					
ANR	8182340	PrimaryExpression	"""bitmap font data chr=%ld, width=%d, height=%d, lsb=%d, ascent=%d, top offset=%d left offset=%d\\n"""		8181771	0					
ANR	8182341	Argument	chr		8181771	2					
ANR	8182342	Identifier	chr		8181771	0					
ANR	8182343	Argument	image . Width		8181771	3					
ANR	8182344	MemberAccess	image . Width		8181771	0					
ANR	8182345	Identifier	image		8181771	0					
ANR	8182346	Identifier	Width		8181771	1					
ANR	8182347	Argument	image . Height		8181771	4					
ANR	8182348	MemberAccess	image . Height		8181771	0					
ANR	8182349	Identifier	image		8181771	0					
ANR	8182350	Identifier	Height		8181771	1					
ANR	8182351	Argument	lsb		8181771	5					
ANR	8182352	Identifier	lsb		8181771	0					
ANR	8182353	Argument	ascent		8181771	6					
ANR	8182354	Identifier	ascent		8181771	0					
ANR	8182355	Argument	pl_get_int16 ( params + 2 )		8181771	7					
ANR	8182356	CallExpression	pl_get_int16 ( params + 2 )		8181771	0					
ANR	8182357	Callee	pl_get_int16		8181771	0					
ANR	8182358	Identifier	pl_get_int16		8181771	0					
ANR	8182359	ArgumentList	params + 2		8181771	1					
ANR	8182360	Argument	params + 2		8181771	0					
ANR	8182361	AdditiveExpression	params + 2		8181771	0		+			
ANR	8182362	Identifier	params		8181771	0					
ANR	8182363	PrimaryExpression	2		8181771	1					
ANR	8182364	Argument	pl_get_int16 ( params )		8181771	8					
ANR	8182365	CallExpression	pl_get_int16 ( params )		8181771	0					
ANR	8182366	Callee	pl_get_int16		8181771	0					
ANR	8182367	Identifier	pl_get_int16		8181771	0					
ANR	8182368	ArgumentList	params		8181771	1					
ANR	8182369	Argument	params		8181771	0					
ANR	8182370	Identifier	params		8181771	0					
ANR	8182371	ForStatement	for ( i = 0 ; i < pixels ; i ++ )		8181771	3					
ANR	8182372	ForInit	i = 0 ;	471:17:15944:15949	8181771	0	True				
ANR	8182373	AssignmentExpression	i = 0		8181771	0		=			
ANR	8182374	Identifier	i		8181771	0					
ANR	8182375	PrimaryExpression	0		8181771	1					
ANR	8182376	Condition	i < pixels	471:24:15951:15960	8181771	1	True				
ANR	8182377	RelationalExpression	i < pixels		8181771	0		<			
ANR	8182378	Identifier	i		8181771	0					
ANR	8182379	Identifier	pixels		8181771	1					
ANR	8182380	PostIncDecOperationExpression	i ++	471:36:15963:15965	8181771	2	True				
ANR	8182381	Identifier	i		8181771	0					
ANR	8182382	IncDec	++		8181771	1					
ANR	8182383	CompoundStatement		88:41:3401:3401	8181771	3					
ANR	8182384	IfStatement	"if ( i % round_up ( image . Width , 8 ) == 0 )"		8181771	0					
ANR	8182385	Condition	"i % round_up ( image . Width , 8 ) == 0"	472:20:15990:16022	8181771	0	True				
ANR	8182386	EqualityExpression	"i % round_up ( image . Width , 8 ) == 0"		8181771	0		==			
ANR	8182387	MultiplicativeExpression	"i % round_up ( image . Width , 8 )"		8181771	0		%			
ANR	8182388	Identifier	i		8181771	0					
ANR	8182389	CallExpression	"round_up ( image . Width , 8 )"		8181771	1					
ANR	8182390	Callee	round_up		8181771	0					
ANR	8182391	Identifier	round_up		8181771	0					
ANR	8182392	ArgumentList	image . Width		8181771	1					
ANR	8182393	Argument	image . Width		8181771	0					
ANR	8182394	MemberAccess	image . Width		8181771	0					
ANR	8182395	Identifier	image		8181771	0					
ANR	8182396	Identifier	Width		8181771	1					
ANR	8182397	Argument	8		8181771	1					
ANR	8182398	PrimaryExpression	8		8181771	0					
ANR	8182399	PrimaryExpression	0		8181771	1					
ANR	8182400	ExpressionStatement	"dmprintf ( pgs -> memory , ""\\n"" )"	473:20:16045:16072	8181771	1	True				
ANR	8182401	CallExpression	"dmprintf ( pgs -> memory , ""\\n"" )"		8181771	0					
ANR	8182402	Callee	dmprintf		8181771	0					
ANR	8182403	Identifier	dmprintf		8181771	0					
ANR	8182404	ArgumentList	pgs -> memory		8181771	1					
ANR	8182405	Argument	pgs -> memory		8181771	0					
ANR	8182406	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182407	Identifier	pgs		8181771	0					
ANR	8182408	Identifier	memory		8181771	1					
ANR	8182409	Argument	"""\\n"""		8181771	1					
ANR	8182410	PrimaryExpression	"""\\n"""		8181771	0					
ANR	8182411	ExpressionStatement	"dmprintf1 ( pgs -> memory , ""%d"" , bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0 )"	474:16:16090:16192	8181771	1	True				
ANR	8182412	CallExpression	"dmprintf1 ( pgs -> memory , ""%d"" , bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0 )"		8181771	0					
ANR	8182413	Callee	dmprintf1		8181771	0					
ANR	8182414	Identifier	dmprintf1		8181771	0					
ANR	8182415	ArgumentList	pgs -> memory		8181771	1					
ANR	8182416	Argument	pgs -> memory		8181771	0					
ANR	8182417	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182418	Identifier	pgs		8181771	0					
ANR	8182419	Identifier	memory		8181771	1					
ANR	8182420	Argument	"""%d"""		8181771	1					
ANR	8182421	PrimaryExpression	"""%d"""		8181771	0					
ANR	8182422	Argument	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0		8181771	2					
ANR	8182423	ConditionalExpression	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) ) ? 1 : 0		8181771	0					
ANR	8182424	Condition	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) )		8181771	0					
ANR	8182425	BitAndExpression	bitmap_data [ i >> 3 ] & ( 128 >> ( i & 7 ) )		8181771	0		&			
ANR	8182426	ArrayIndexing	bitmap_data [ i >> 3 ]		8181771	0					
ANR	8182427	Identifier	bitmap_data		8181771	0					
ANR	8182428	ShiftExpression	i >> 3		8181771	1		>>			
ANR	8182429	Identifier	i		8181771	0					
ANR	8182430	PrimaryExpression	3		8181771	1					
ANR	8182431	ShiftExpression	128 >> ( i & 7 )		8181771	1		>>			
ANR	8182432	PrimaryExpression	128		8181771	0					
ANR	8182433	BitAndExpression	i & 7		8181771	1		&			
ANR	8182434	Identifier	i		8181771	0					
ANR	8182435	PrimaryExpression	7		8181771	1					
ANR	8182436	PrimaryExpression	1		8181771	1					
ANR	8182437	PrimaryExpression	0		8181771	2					
ANR	8182438	ExpressionStatement	"dmprintf ( pgs -> memory , ""\\n"" )"	477:12:16220:16247	8181771	4	True				
ANR	8182439	CallExpression	"dmprintf ( pgs -> memory , ""\\n"" )"		8181771	0					
ANR	8182440	Callee	dmprintf		8181771	0					
ANR	8182441	Identifier	dmprintf		8181771	0					
ANR	8182442	ArgumentList	pgs -> memory		8181771	1					
ANR	8182443	Argument	pgs -> memory		8181771	0					
ANR	8182444	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182445	Identifier	pgs		8181771	0					
ANR	8182446	Identifier	memory		8181771	1					
ANR	8182447	Argument	"""\\n"""		8181771	1					
ANR	8182448	PrimaryExpression	"""\\n"""		8181771	0					
ANR	8182449	ExpressionStatement	"code = pl_image_bitmap_char ( ienum , & image , bitmap_data , ( image . Width - bold + 7 ) >> 3 , bold , bold_lines , pgs )"	480:8:16274:16455	8181771	24	True				
ANR	8182450	AssignmentExpression	"code = pl_image_bitmap_char ( ienum , & image , bitmap_data , ( image . Width - bold + 7 ) >> 3 , bold , bold_lines , pgs )"		8181771	0		=			
ANR	8182451	Identifier	code		8181771	0					
ANR	8182452	CallExpression	"pl_image_bitmap_char ( ienum , & image , bitmap_data , ( image . Width - bold + 7 ) >> 3 , bold , bold_lines , pgs )"		8181771	1					
ANR	8182453	Callee	pl_image_bitmap_char		8181771	0					
ANR	8182454	Identifier	pl_image_bitmap_char		8181771	0					
ANR	8182455	ArgumentList	ienum		8181771	1					
ANR	8182456	Argument	ienum		8181771	0					
ANR	8182457	Identifier	ienum		8181771	0					
ANR	8182458	Argument	& image		8181771	1					
ANR	8182459	UnaryOperationExpression	& image		8181771	0					
ANR	8182460	UnaryOperator	&		8181771	0					
ANR	8182461	Identifier	image		8181771	1					
ANR	8182462	Argument	bitmap_data		8181771	2					
ANR	8182463	Identifier	bitmap_data		8181771	0					
ANR	8182464	Argument	( image . Width - bold + 7 ) >> 3		8181771	3					
ANR	8182465	ShiftExpression	( image . Width - bold + 7 ) >> 3		8181771	0		>>			
ANR	8182466	AdditiveExpression	image . Width - bold + 7		8181771	0		-			
ANR	8182467	MemberAccess	image . Width		8181771	0					
ANR	8182468	Identifier	image		8181771	0					
ANR	8182469	Identifier	Width		8181771	1					
ANR	8182470	AdditiveExpression	bold + 7		8181771	1		+			
ANR	8182471	Identifier	bold		8181771	0					
ANR	8182472	PrimaryExpression	7		8181771	1					
ANR	8182473	PrimaryExpression	3		8181771	1					
ANR	8182474	Argument	bold		8181771	4					
ANR	8182475	Identifier	bold		8181771	0					
ANR	8182476	Argument	bold_lines		8181771	5					
ANR	8182477	Identifier	bold_lines		8181771	0					
ANR	8182478	Argument	pgs		8181771	6					
ANR	8182479	Identifier	pgs		8181771	0					
ANR	8182480	Label	out :	483:6:16463:16466	8181771	25	True				
ANR	8182481	Identifier	out		8181771	0					
ANR	8182482	ExpressionStatement	"gs_free_object ( pgs -> memory , bold_lines , ""pl_bitmap_build_char(bold_lines)"" )"	483:10:16467:16565	8181771	26	True				
ANR	8182483	CallExpression	"gs_free_object ( pgs -> memory , bold_lines , ""pl_bitmap_build_char(bold_lines)"" )"		8181771	0					
ANR	8182484	Callee	gs_free_object		8181771	0					
ANR	8182485	Identifier	gs_free_object		8181771	0					
ANR	8182486	ArgumentList	pgs -> memory		8181771	1					
ANR	8182487	Argument	pgs -> memory		8181771	0					
ANR	8182488	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182489	Identifier	pgs		8181771	0					
ANR	8182490	Identifier	memory		8181771	1					
ANR	8182491	Argument	bold_lines		8181771	1					
ANR	8182492	Identifier	bold_lines		8181771	0					
ANR	8182493	Argument	"""pl_bitmap_build_char(bold_lines)"""		8181771	2					
ANR	8182494	PrimaryExpression	"""pl_bitmap_build_char(bold_lines)"""		8181771	0					
ANR	8182495	ExpressionStatement	"gs_free_object ( pgs -> memory , ienum , ""pl_bitmap_build_char"" )"	485:8:16575:16633	8181771	27	True				
ANR	8182496	CallExpression	"gs_free_object ( pgs -> memory , ienum , ""pl_bitmap_build_char"" )"		8181771	0					
ANR	8182497	Callee	gs_free_object		8181771	0					
ANR	8182498	Identifier	gs_free_object		8181771	0					
ANR	8182499	ArgumentList	pgs -> memory		8181771	1					
ANR	8182500	Argument	pgs -> memory		8181771	0					
ANR	8182501	PtrMemberAccess	pgs -> memory		8181771	0					
ANR	8182502	Identifier	pgs		8181771	0					
ANR	8182503	Identifier	memory		8181771	1					
ANR	8182504	Argument	ienum		8181771	1					
ANR	8182505	Identifier	ienum		8181771	0					
ANR	8182506	Argument	"""pl_bitmap_build_char"""		8181771	2					
ANR	8182507	PrimaryExpression	"""pl_bitmap_build_char"""		8181771	0					
ANR	8182508	ReturnStatement	return ( code < 0 ? code : 0 ) ;	486:8:16643:16671	8181771	28	True				
ANR	8182509	ConditionalExpression	code < 0 ? code : 0		8181771	0					
ANR	8182510	Condition	code < 0		8181771	0					
ANR	8182511	RelationalExpression	code < 0		8181771	0		<			
ANR	8182512	Identifier	code		8181771	0					
ANR	8182513	PrimaryExpression	0		8181771	1					
ANR	8182514	Identifier	code		8181771	1					
ANR	8182515	PrimaryExpression	0		8181771	2					
ANR	8182516	ReturnType	static int		8181771	1					
ANR	8182517	Identifier	pl_bitmap_build_char		8181771	2					
ANR	8182518	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph"		8181771	3					
ANR	8182519	Parameter	gs_show_enum * penum	382:21:12460:12479	8181771	0	True				
ANR	8182520	ParameterType	gs_show_enum *		8181771	0					
ANR	8182521	Identifier	penum		8181771	1					
ANR	8182522	Parameter	gs_gstate * pgs	382:43:12482:12496	8181771	1	True				
ANR	8182523	ParameterType	gs_gstate *		8181771	0					
ANR	8182524	Identifier	pgs		8181771	1					
ANR	8182525	Parameter	gs_font * pfont	382:60:12499:12513	8181771	2	True				
ANR	8182526	ParameterType	gs_font *		8181771	0					
ANR	8182527	Identifier	pfont		8181771	1					
ANR	8182528	Parameter	gs_char chr	383:21:12537:12547	8181771	3	True				
ANR	8182529	ParameterType	gs_char		8181771	0					
ANR	8182530	Identifier	chr		8181771	1					
ANR	8182531	Parameter	gs_glyph glyph	383:34:12550:12563	8181771	4	True				
ANR	8182532	ParameterType	gs_glyph		8181771	0					
ANR	8182533	Identifier	glyph		8181771	1					
ANR	8182534	CFGEntryNode	ENTRY		8181771		True				
ANR	8182535	CFGExitNode	EXIT		8181771		True				
ANR	8182536	Symbol	image . ImageMatrix		8181771						
ANR	8182537	Symbol	* pgs		8181771						
ANR	8182538	Symbol	plfont -> header		8181771						
ANR	8182539	Symbol	plfont		8181771						
ANR	8182540	Symbol	round_up		8181771						
ANR	8182541	Symbol	plfont -> orient		8181771						
ANR	8182542	Symbol	* cdata		8181771						
ANR	8182543	Symbol	pl_get_int16		8181771						
ANR	8182544	Symbol	* plfont -> header		8181771						
ANR	8182545	Symbol	pl_image_bitmap_char		8181771						
ANR	8182546	Symbol	gs_debug_c		8181771						
ANR	8182547	Symbol	ienum		8181771						
ANR	8182548	Symbol	image		8181771						
ANR	8182549	Symbol	& image		8181771						
ANR	8182550	Symbol	orient		8181771						
ANR	8182551	Symbol	* * plfont		8181771						
ANR	8182552	Symbol	penum		8181771						
ANR	8182553	Symbol	* pl_font_lookup_glyph		8181771						
ANR	8182554	Symbol	bold		8181771						
ANR	8182555	Symbol	chr		8181771						
ANR	8182556	Symbol	params		8181771						
ANR	8182557	Symbol	cdata		8181771						
ANR	8182558	Symbol	pfont -> client_data		8181771						
ANR	8182559	Symbol	alloc_bold_lines		8181771						
ANR	8182560	Symbol	bold_lines		8181771						
ANR	8182561	Symbol	pixels		8181771						
ANR	8182562	Symbol	true		8181771						
ANR	8182563	Symbol	lsb		8181771						
ANR	8182564	Symbol	& image . ImageMatrix		8181771						
ANR	8182565	Symbol	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8181771						
ANR	8182566	Symbol	image . Width		8181771						
ANR	8182567	Symbol	delta_x		8181771						
ANR	8182568	Symbol	* bitmap_data		8181771						
ANR	8182569	Symbol	code		8181771						
ANR	8182570	Symbol	gs_image_enum_alloc		8181771						
ANR	8182571	Symbol	pl_font_lookup_glyph		8181771						
ANR	8182572	Symbol	image . ImageMatrix . ty		8181771						
ANR	8182573	Symbol	gs_setcharwidth		8181771						
ANR	8182574	Symbol	image . ImageMatrix . tx		8181771						
ANR	8182575	Symbol	ascent		8181771						
ANR	8182576	Symbol	pgs		8181771						
ANR	8182577	Symbol	pgs -> memory		8181771						
ANR	8182578	Symbol	pl_get_uint16		8181771						
ANR	8182579	Symbol	pfont		8181771						
ANR	8182580	Symbol	bitmap_data		8181771						
ANR	8182581	Symbol	image . Height		8181771						
ANR	8182582	Symbol	i		8181771						
ANR	8182583	Symbol	m		8181771						
ANR	8182584	Symbol	ARCH_ALIGN_PTR_MOD		8181771						
ANR	8182585	Symbol	gs_error_VMerror		8181771						
ANR	8182586	Symbol	glyph		8181771						
ANR	8182587	Symbol	* pfont		8181771						
ANR	8182588	Symbol	gs_note_error		8181771						
ANR	8182589	Symbol	* i		8181771						
ANR	8182590	Symbol	plfont -> bold_fraction		8181771						
ANR	8182591	Symbol	image . adjust		8181771						
ANR	8182592	Symbol	* m		8181771						
ANR	8182593	Symbol	* plfont		8181771						
ANR	8182594	Symbol	gs_setcachedevice		8181771						
ANR	8182595	Function	pl_tt_lookup_char	495:0:16932:17489							
ANR	8182596	FunctionDef	"pl_tt_lookup_char (const pl_font_t * plfont , gs_glyph glyph)"		8182595	0					
ANR	8182597	CompoundStatement		497:0:17013:17489	8182595	0					
ANR	8182598	IdentifierDeclStatement	uint size = plfont -> char_glyphs . size ;	498:4:17019:17055	8182595	0	True				
ANR	8182599	IdentifierDecl	size = plfont -> char_glyphs . size		8182595	0					
ANR	8182600	IdentifierDeclType	uint		8182595	0					
ANR	8182601	Identifier	size		8182595	1					
ANR	8182602	AssignmentExpression	size = plfont -> char_glyphs . size		8182595	2		=			
ANR	8182603	Identifier	size		8182595	0					
ANR	8182604	MemberAccess	plfont -> char_glyphs . size		8182595	1					
ANR	8182605	PtrMemberAccess	plfont -> char_glyphs		8182595	0					
ANR	8182606	Identifier	plfont		8182595	0					
ANR	8182607	Identifier	char_glyphs		8182595	1					
ANR	8182608	Identifier	size		8182595	1					
ANR	8182609	IdentifierDeclStatement	uint skip = plfont -> char_glyphs . skip ;	499:4:17061:17097	8182595	1	True				
ANR	8182610	IdentifierDecl	skip = plfont -> char_glyphs . skip		8182595	0					
ANR	8182611	IdentifierDeclType	uint		8182595	0					
ANR	8182612	Identifier	skip		8182595	1					
ANR	8182613	AssignmentExpression	skip = plfont -> char_glyphs . skip		8182595	2		=			
ANR	8182614	Identifier	skip		8182595	0					
ANR	8182615	MemberAccess	plfont -> char_glyphs . skip		8182595	1					
ANR	8182616	PtrMemberAccess	plfont -> char_glyphs		8182595	0					
ANR	8182617	Identifier	plfont		8182595	0					
ANR	8182618	Identifier	char_glyphs		8182595	1					
ANR	8182619	Identifier	skip		8182595	1					
ANR	8182620	IdentifierDeclStatement	uint index = glyph % size ;	500:4:17103:17128	8182595	2	True				
ANR	8182621	IdentifierDecl	index = glyph % size		8182595	0					
ANR	8182622	IdentifierDeclType	uint		8182595	0					
ANR	8182623	Identifier	index		8182595	1					
ANR	8182624	AssignmentExpression	index = glyph % size		8182595	2		=			
ANR	8182625	Identifier	index		8182595	0					
ANR	8182626	MultiplicativeExpression	glyph % size		8182595	1		%			
ANR	8182627	Identifier	glyph		8182595	0					
ANR	8182628	Identifier	size		8182595	1					
ANR	8182629	IdentifierDeclStatement	pl_tt_char_glyph_t * ptcg ;	501:4:17134:17158	8182595	3	True				
ANR	8182630	IdentifierDecl	* ptcg		8182595	0					
ANR	8182631	IdentifierDeclType	pl_tt_char_glyph_t *		8182595	0					
ANR	8182632	Identifier	ptcg		8182595	1					
ANR	8182633	IdentifierDeclStatement	pl_tt_char_glyph_t * result = 0 ;	502:4:17164:17194	8182595	4	True				
ANR	8182634	IdentifierDecl	* result = 0		8182595	0					
ANR	8182635	IdentifierDeclType	pl_tt_char_glyph_t *		8182595	0					
ANR	8182636	Identifier	result		8182595	1					
ANR	8182637	AssignmentExpression	* result = 0		8182595	2		=			
ANR	8182638	Identifier	result		8182595	0					
ANR	8182639	PrimaryExpression	0		8182595	1					
ANR	8182640	WhileStatement	while ( ( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char ? ptcg -> chr != glyph : ptcg -> glyph )		8182595	5					
ANR	8182641	Condition	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char ? ptcg -> chr != glyph : ptcg -> glyph	504:11:17208:17314	8182595	0	True				
ANR	8182642	ConditionalExpression	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char ? ptcg -> chr != glyph : ptcg -> glyph		8182595	0					
ANR	8182643	Condition	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char		8182595	0					
ANR	8182644	EqualityExpression	( ptcg = plfont -> char_glyphs . table + index ) -> chr != gs_no_char		8182595	0		!=			
ANR	8182645	PtrMemberAccess	( ptcg = plfont -> char_glyphs . table + index ) -> chr		8182595	0					
ANR	8182646	AssignmentExpression	ptcg = plfont -> char_glyphs . table + index		8182595	0		=			
ANR	8182647	Identifier	ptcg		8182595	0					
ANR	8182648	AdditiveExpression	plfont -> char_glyphs . table + index		8182595	1		+			
ANR	8182649	MemberAccess	plfont -> char_glyphs . table		8182595	0					
ANR	8182650	PtrMemberAccess	plfont -> char_glyphs		8182595	0					
ANR	8182651	Identifier	plfont		8182595	0					
ANR	8182652	Identifier	char_glyphs		8182595	1					
ANR	8182653	Identifier	table		8182595	1					
ANR	8182654	Identifier	index		8182595	1					
ANR	8182655	Identifier	chr		8182595	1					
ANR	8182656	Identifier	gs_no_char		8182595	1					
ANR	8182657	EqualityExpression	ptcg -> chr != glyph		8182595	1		!=			
ANR	8182658	PtrMemberAccess	ptcg -> chr		8182595	0					
ANR	8182659	Identifier	ptcg		8182595	0					
ANR	8182660	Identifier	chr		8182595	1					
ANR	8182661	Identifier	glyph		8182595	1					
ANR	8182662	PtrMemberAccess	ptcg -> glyph		8182595	2					
ANR	8182663	Identifier	ptcg		8182595	0					
ANR	8182664	Identifier	glyph		8182595	1					
ANR	8182665	CompoundStatement		9:45:303:303	8182595	1					
ANR	8182666	IfStatement	if ( ptcg -> chr == gs_no_char )		8182595	0					
ANR	8182667	Condition	ptcg -> chr == gs_no_char	506:12:17331:17353	8182595	0	True				
ANR	8182668	EqualityExpression	ptcg -> chr == gs_no_char		8182595	0		==			
ANR	8182669	PtrMemberAccess	ptcg -> chr		8182595	0					
ANR	8182670	Identifier	ptcg		8182595	0					
ANR	8182671	Identifier	chr		8182595	1					
ANR	8182672	Identifier	gs_no_char		8182595	1					
ANR	8182673	ExpressionStatement	result = ptcg	507:12:17368:17381	8182595	1	True				
ANR	8182674	AssignmentExpression	result = ptcg		8182595	0		=			
ANR	8182675	Identifier	result		8182595	0					
ANR	8182676	Identifier	ptcg		8182595	1					
ANR	8182677	ExpressionStatement	index = ( index >= skip ? index : index + size ) - skip	508:8:17391:17444	8182595	1	True				
ANR	8182678	AssignmentExpression	index = ( index >= skip ? index : index + size ) - skip		8182595	0		=			
ANR	8182679	Identifier	index		8182595	0					
ANR	8182680	AdditiveExpression	( index >= skip ? index : index + size ) - skip		8182595	1		-			
ANR	8182681	ConditionalExpression	index >= skip ? index : index + size		8182595	0					
ANR	8182682	Condition	index >= skip		8182595	0					
ANR	8182683	RelationalExpression	index >= skip		8182595	0		>=			
ANR	8182684	Identifier	index		8182595	0					
ANR	8182685	Identifier	skip		8182595	1					
ANR	8182686	Identifier	index		8182595	1					
ANR	8182687	AdditiveExpression	index + size		8182595	2		+			
ANR	8182688	Identifier	index		8182595	0					
ANR	8182689	Identifier	size		8182595	1					
ANR	8182690	Identifier	skip		8182595	1					
ANR	8182691	ReturnStatement	return ( result ? result : ptcg ) ;	510:4:17456:17487	8182595	6	True				
ANR	8182692	ConditionalExpression	result ? result : ptcg		8182595	0					
ANR	8182693	Condition	result		8182595	0					
ANR	8182694	Identifier	result		8182595	0					
ANR	8182695	Identifier	result		8182595	1					
ANR	8182696	Identifier	ptcg		8182595	2					
ANR	8182697	ReturnType	pl_tt_char_glyph_t *		8182595	1					
ANR	8182698	Identifier	pl_tt_lookup_char		8182595	2					
ANR	8182699	ParameterList	"const pl_font_t * plfont , gs_glyph glyph"		8182595	3					
ANR	8182700	Parameter	const pl_font_t * plfont	496:18:16971:16994	8182595	0	True				
ANR	8182701	ParameterType	const pl_font_t *		8182595	0					
ANR	8182702	Identifier	plfont		8182595	1					
ANR	8182703	Parameter	gs_glyph glyph	496:44:16997:17010	8182595	1	True				
ANR	8182704	ParameterType	gs_glyph		8182595	0					
ANR	8182705	Identifier	glyph		8182595	1					
ANR	8182706	CFGEntryNode	ENTRY		8182595		True				
ANR	8182707	CFGExitNode	EXIT		8182595		True				
ANR	8182708	Symbol	( ptcg = plfont -> char_glyphs . table + index ) -> chr		8182595						
ANR	8182709	Symbol	ptcg -> chr		8182595						
ANR	8182710	Symbol	plfont -> char_glyphs		8182595						
ANR	8182711	Symbol	index		8182595						
ANR	8182712	Symbol	plfont -> char_glyphs . size		8182595						
ANR	8182713	Symbol	skip		8182595						
ANR	8182714	Symbol	plfont		8182595						
ANR	8182715	Symbol	plfont -> char_glyphs . skip		8182595						
ANR	8182716	Symbol	result		8182595						
ANR	8182717	Symbol	glyph		8182595						
ANR	8182718	Symbol	size		8182595						
ANR	8182719	Symbol	* plfont		8182595						
ANR	8182720	Symbol	ptcg -> glyph		8182595						
ANR	8182721	Symbol	gs_no_char		8182595						
ANR	8182722	Symbol	ptcg		8182595						
ANR	8182723	Symbol	* ptcg		8182595						
ANR	8182724	Symbol	plfont -> char_glyphs . table		8182595						
ANR	8182725	Function	pl_tt_string_proc	514:0:17533:17913							
ANR	8182726	FunctionDef	"pl_tt_string_proc (gs_font_type42 * pfont , ulong offset , uint length , const byte * * pdata)"		8182725	0					
ANR	8182727	CompoundStatement		517:0:17652:17913	8182725	0					
ANR	8182728	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	518:4:17658:17696	8182725	0	True				
ANR	8182729	IdentifierDecl	* plfont = pfont -> client_data		8182725	0					
ANR	8182730	IdentifierDeclType	pl_font_t *		8182725	0					
ANR	8182731	Identifier	plfont		8182725	1					
ANR	8182732	AssignmentExpression	* plfont = pfont -> client_data		8182725	2		=			
ANR	8182733	Identifier	plfont		8182725	0					
ANR	8182734	PtrMemberAccess	pfont -> client_data		8182725	1					
ANR	8182735	Identifier	pfont		8182725	0					
ANR	8182736	Identifier	client_data		8182725	1					
ANR	8182737	ExpressionStatement	* pdata = plfont -> header + plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset	520:4:17703:17796	8182725	1	True				
ANR	8182738	AssignmentExpression	* pdata = plfont -> header + plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset		8182725	0		=			
ANR	8182739	UnaryOperationExpression	* pdata		8182725	0					
ANR	8182740	UnaryOperator	*		8182725	0					
ANR	8182741	Identifier	pdata		8182725	1					
ANR	8182742	AdditiveExpression	plfont -> header + plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset		8182725	1		+			
ANR	8182743	PtrMemberAccess	plfont -> header		8182725	0					
ANR	8182744	Identifier	plfont		8182725	0					
ANR	8182745	Identifier	header		8182725	1					
ANR	8182746	AdditiveExpression	plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) + offset		8182725	1		+			
ANR	8182747	MemberAccess	plfont -> offsets . GT		8182725	0					
ANR	8182748	PtrMemberAccess	plfont -> offsets		8182725	0					
ANR	8182749	Identifier	plfont		8182725	0					
ANR	8182750	Identifier	offsets		8182725	1					
ANR	8182751	Identifier	GT		8182725	1					
ANR	8182752	AdditiveExpression	( plfont -> large_sizes ? 6 : 4 ) + offset		8182725	1		+			
ANR	8182753	ConditionalExpression	plfont -> large_sizes ? 6 : 4		8182725	0					
ANR	8182754	Condition	plfont -> large_sizes		8182725	0					
ANR	8182755	PtrMemberAccess	plfont -> large_sizes		8182725	0					
ANR	8182756	Identifier	plfont		8182725	0					
ANR	8182757	Identifier	large_sizes		8182725	1					
ANR	8182758	PrimaryExpression	6		8182725	1					
ANR	8182759	PrimaryExpression	4		8182725	2					
ANR	8182760	Identifier	offset		8182725	1					
ANR	8182761	IfStatement	if ( * pdata > plfont -> header + plfont -> header_size )		8182725	2					
ANR	8182762	Condition	* pdata > plfont -> header + plfont -> header_size	523:8:17807:17851	8182725	0	True				
ANR	8182763	RelationalExpression	* pdata > plfont -> header + plfont -> header_size		8182725	0		>			
ANR	8182764	UnaryOperationExpression	* pdata		8182725	0					
ANR	8182765	UnaryOperator	*		8182725	0					
ANR	8182766	Identifier	pdata		8182725	1					
ANR	8182767	AdditiveExpression	plfont -> header + plfont -> header_size		8182725	1		+			
ANR	8182768	PtrMemberAccess	plfont -> header		8182725	0					
ANR	8182769	Identifier	plfont		8182725	0					
ANR	8182770	Identifier	header		8182725	1					
ANR	8182771	PtrMemberAccess	plfont -> header_size		8182725	1					
ANR	8182772	Identifier	plfont		8182725	0					
ANR	8182773	Identifier	header_size		8182725	1					
ANR	8182774	ExpressionStatement	return_error ( gs_error_invalidfont )	524:8:17862:17896	8182725	1	True				
ANR	8182775	CallExpression	return_error ( gs_error_invalidfont )		8182725	0					
ANR	8182776	Callee	return_error		8182725	0					
ANR	8182777	Identifier	return_error		8182725	0					
ANR	8182778	ArgumentList	gs_error_invalidfont		8182725	1					
ANR	8182779	Argument	gs_error_invalidfont		8182725	0					
ANR	8182780	Identifier	gs_error_invalidfont		8182725	0					
ANR	8182781	ReturnStatement	return 0 ;	526:4:17903:17911	8182725	3	True				
ANR	8182782	PrimaryExpression	0		8182725	0					
ANR	8182783	ReturnType	static int		8182725	1					
ANR	8182784	Identifier	pl_tt_string_proc		8182725	2					
ANR	8182785	ParameterList	"gs_font_type42 * pfont , ulong offset , uint length , const byte * * pdata"		8182725	3					
ANR	8182786	Parameter	gs_font_type42 * pfont	515:18:17562:17583	8182725	0	True				
ANR	8182787	ParameterType	gs_font_type42 *		8182725	0					
ANR	8182788	Identifier	pfont		8182725	1					
ANR	8182789	Parameter	ulong offset	515:42:17586:17597	8182725	1	True				
ANR	8182790	ParameterType	ulong		8182725	0					
ANR	8182791	Identifier	offset		8182725	1					
ANR	8182792	Parameter	uint length	515:56:17600:17610	8182725	2	True				
ANR	8182793	ParameterType	uint		8182725	0					
ANR	8182794	Identifier	length		8182725	1					
ANR	8182795	Parameter	const byte * * pdata	516:18:17631:17649	8182725	3	True				
ANR	8182796	ParameterType	const byte * *		8182725	0					
ANR	8182797	Identifier	pdata		8182725	1					
ANR	8182798	CFGEntryNode	ENTRY		8182725		True				
ANR	8182799	CFGExitNode	EXIT		8182725		True				
ANR	8182800	Symbol	pdata		8182725						
ANR	8182801	Symbol	plfont -> header_size		8182725						
ANR	8182802	Symbol	offset		8182725						
ANR	8182803	Symbol	pfont		8182725						
ANR	8182804	Symbol	plfont -> header		8182725						
ANR	8182805	Symbol	length		8182725						
ANR	8182806	Symbol	plfont		8182725						
ANR	8182807	Symbol	plfont -> large_sizes		8182725						
ANR	8182808	Symbol	plfont -> offsets		8182725						
ANR	8182809	Symbol	plfont -> offsets . GT		8182725						
ANR	8182810	Symbol	pfont -> client_data		8182725						
ANR	8182811	Symbol	* pfont		8182725						
ANR	8182812	Symbol	* plfont		8182725						
ANR	8182813	Symbol	gs_error_invalidfont		8182725						
ANR	8182814	Symbol	* pdata		8182725						
ANR	8182815	Function	pl_font_vertical_glyph	531:0:18017:18539							
ANR	8182816	FunctionDef	"pl_font_vertical_glyph (gs_glyph glyph , const pl_font_t * plfont)"		8182815	0					
ANR	8182817	CompoundStatement		533:0:18091:18539	8182815	0					
ANR	8182818	IdentifierDeclStatement	long VT = plfont -> offsets . VT ;	534:4:18097:18125	8182815	0	True				
ANR	8182819	IdentifierDecl	VT = plfont -> offsets . VT		8182815	0					
ANR	8182820	IdentifierDeclType	long		8182815	0					
ANR	8182821	Identifier	VT		8182815	1					
ANR	8182822	AssignmentExpression	VT = plfont -> offsets . VT		8182815	2		=			
ANR	8182823	Identifier	VT		8182815	0					
ANR	8182824	MemberAccess	plfont -> offsets . VT		8182815	1					
ANR	8182825	PtrMemberAccess	plfont -> offsets		8182815	0					
ANR	8182826	Identifier	plfont		8182815	0					
ANR	8182827	Identifier	offsets		8182815	1					
ANR	8182828	Identifier	VT		8182815	1					
ANR	8182829	IdentifierDeclStatement	const byte * vtseg ;	535:4:18131:18148	8182815	1	True				
ANR	8182830	IdentifierDecl	* vtseg		8182815	0					
ANR	8182831	IdentifierDeclType	const byte *		8182815	0					
ANR	8182832	Identifier	vtseg		8182815	1					
ANR	8182833	IdentifierDeclStatement	"uint i , len ;"	536:4:18154:18165	8182815	2	True				
ANR	8182834	IdentifierDecl	i		8182815	0					
ANR	8182835	IdentifierDeclType	uint		8182815	0					
ANR	8182836	Identifier	i		8182815	1					
ANR	8182837	IdentifierDecl	len		8182815	1					
ANR	8182838	IdentifierDeclType	uint		8182815	0					
ANR	8182839	Identifier	len		8182815	1					
ANR	8182840	IfStatement	if ( VT < 0 )		8182815	3					
ANR	8182841	Condition	VT < 0	538:8:18176:18181	8182815	0	True				
ANR	8182842	RelationalExpression	VT < 0		8182815	0		<			
ANR	8182843	Identifier	VT		8182815	0					
ANR	8182844	PrimaryExpression	0		8182815	1					
ANR	8182845	ReturnStatement	return GS_NO_GLYPH ;	539:8:18192:18210	8182815	1	True				
ANR	8182846	Identifier	GS_NO_GLYPH		8182815	0					
ANR	8182847	ExpressionStatement	vtseg = plfont -> header + VT	540:4:18216:18243	8182815	4	True				
ANR	8182848	AssignmentExpression	vtseg = plfont -> header + VT		8182815	0		=			
ANR	8182849	Identifier	vtseg		8182815	0					
ANR	8182850	AdditiveExpression	plfont -> header + VT		8182815	1		+			
ANR	8182851	PtrMemberAccess	plfont -> header		8182815	0					
ANR	8182852	Identifier	plfont		8182815	0					
ANR	8182853	Identifier	header		8182815	1					
ANR	8182854	Identifier	VT		8182815	1					
ANR	8182855	IfStatement	if ( plfont -> large_sizes )		8182815	5					
ANR	8182856	Condition	plfont -> large_sizes	541:8:18253:18271	8182815	0	True				
ANR	8182857	PtrMemberAccess	plfont -> large_sizes		8182815	0					
ANR	8182858	Identifier	plfont		8182815	0					
ANR	8182859	Identifier	large_sizes		8182815	1					
ANR	8182860	ExpressionStatement	"len = pl_get_uint32 ( vtseg + 2 ) , i = 6"	542:8:18282:18319	8182815	1	True				
ANR	8182861	Expression	"len = pl_get_uint32 ( vtseg + 2 ) , i = 6"		8182815	0					
ANR	8182862	AssignmentExpression	len = pl_get_uint32 ( vtseg + 2 )		8182815	0		=			
ANR	8182863	Identifier	len		8182815	0					
ANR	8182864	CallExpression	pl_get_uint32 ( vtseg + 2 )		8182815	1					
ANR	8182865	Callee	pl_get_uint32		8182815	0					
ANR	8182866	Identifier	pl_get_uint32		8182815	0					
ANR	8182867	ArgumentList	vtseg + 2		8182815	1					
ANR	8182868	Argument	vtseg + 2		8182815	0					
ANR	8182869	AdditiveExpression	vtseg + 2		8182815	0		+			
ANR	8182870	Identifier	vtseg		8182815	0					
ANR	8182871	PrimaryExpression	2		8182815	1					
ANR	8182872	AssignmentExpression	i = 6		8182815	1		=			
ANR	8182873	Identifier	i		8182815	0					
ANR	8182874	PrimaryExpression	6		8182815	1					
ANR	8182875	ElseStatement	else		8182815	0					
ANR	8182876	ExpressionStatement	"len = pl_get_uint16 ( vtseg + 2 ) , i = 4"	544:8:18338:18375	8182815	0	True				
ANR	8182877	Expression	"len = pl_get_uint16 ( vtseg + 2 ) , i = 4"		8182815	0					
ANR	8182878	AssignmentExpression	len = pl_get_uint16 ( vtseg + 2 )		8182815	0		=			
ANR	8182879	Identifier	len		8182815	0					
ANR	8182880	CallExpression	pl_get_uint16 ( vtseg + 2 )		8182815	1					
ANR	8182881	Callee	pl_get_uint16		8182815	0					
ANR	8182882	Identifier	pl_get_uint16		8182815	0					
ANR	8182883	ArgumentList	vtseg + 2		8182815	1					
ANR	8182884	Argument	vtseg + 2		8182815	0					
ANR	8182885	AdditiveExpression	vtseg + 2		8182815	0		+			
ANR	8182886	Identifier	vtseg		8182815	0					
ANR	8182887	PrimaryExpression	2		8182815	1					
ANR	8182888	AssignmentExpression	i = 4		8182815	1		=			
ANR	8182889	Identifier	i		8182815	0					
ANR	8182890	PrimaryExpression	4		8182815	1					
ANR	8182891	ExpressionStatement	len += i	545:4:18381:18389	8182815	6	True				
ANR	8182892	AssignmentExpression	len += i		8182815	0		+=			
ANR	8182893	Identifier	len		8182815	0					
ANR	8182894	Identifier	i		8182815	1					
ANR	8182895	ForStatement	for ( ; i < len ; i += 4 )		8182815	7					
ANR	8182896	Condition	i < len	546:11:18402:18408	8182815	0	True				
ANR	8182897	RelationalExpression	i < len		8182815	0		<			
ANR	8182898	Identifier	i		8182815	0					
ANR	8182899	Identifier	len		8182815	1					
ANR	8182900	AssignmentExpression	i += 4	546:20:18411:18416	8182815	1	True	+=			
ANR	8182901	Identifier	i		8182815	0					
ANR	8182902	PrimaryExpression	4		8182815	1					
ANR	8182903	IfStatement	if ( glyph == pl_get_uint16 ( vtseg + i ) )		8182815	2					
ANR	8182904	Condition	glyph == pl_get_uint16 ( vtseg + i )	547:12:18431:18463	8182815	0	True				
ANR	8182905	EqualityExpression	glyph == pl_get_uint16 ( vtseg + i )		8182815	0		==			
ANR	8182906	Identifier	glyph		8182815	0					
ANR	8182907	CallExpression	pl_get_uint16 ( vtseg + i )		8182815	1					
ANR	8182908	Callee	pl_get_uint16		8182815	0					
ANR	8182909	Identifier	pl_get_uint16		8182815	0					
ANR	8182910	ArgumentList	vtseg + i		8182815	1					
ANR	8182911	Argument	vtseg + i		8182815	0					
ANR	8182912	AdditiveExpression	vtseg + i		8182815	0		+			
ANR	8182913	Identifier	vtseg		8182815	0					
ANR	8182914	Identifier	i		8182815	1					
ANR	8182915	ReturnStatement	return pl_get_uint16 ( vtseg + i + 2 ) ;	548:12:18478:18513	8182815	1	True				
ANR	8182916	CallExpression	pl_get_uint16 ( vtseg + i + 2 )		8182815	0					
ANR	8182917	Callee	pl_get_uint16		8182815	0					
ANR	8182918	Identifier	pl_get_uint16		8182815	0					
ANR	8182919	ArgumentList	vtseg + i + 2		8182815	1					
ANR	8182920	Argument	vtseg + i + 2		8182815	0					
ANR	8182921	AdditiveExpression	vtseg + i + 2		8182815	0		+			
ANR	8182922	Identifier	vtseg		8182815	0					
ANR	8182923	AdditiveExpression	i + 2		8182815	1		+			
ANR	8182924	Identifier	i		8182815	0					
ANR	8182925	PrimaryExpression	2		8182815	1					
ANR	8182926	ReturnStatement	return GS_NO_GLYPH ;	549:4:18519:18537	8182815	8	True				
ANR	8182927	Identifier	GS_NO_GLYPH		8182815	0					
ANR	8182928	ReturnType	gs_glyph		8182815	1					
ANR	8182929	Identifier	pl_font_vertical_glyph		8182815	2					
ANR	8182930	ParameterList	"gs_glyph glyph , const pl_font_t * plfont"		8182815	3					
ANR	8182931	Parameter	gs_glyph glyph	532:23:18049:18062	8182815	0	True				
ANR	8182932	ParameterType	gs_glyph		8182815	0					
ANR	8182933	Identifier	glyph		8182815	1					
ANR	8182934	Parameter	const pl_font_t * plfont	532:39:18065:18088	8182815	1	True				
ANR	8182935	ParameterType	const pl_font_t *		8182815	0					
ANR	8182936	Identifier	plfont		8182815	1					
ANR	8182937	CFGEntryNode	ENTRY		8182815		True				
ANR	8182938	CFGExitNode	EXIT		8182815		True				
ANR	8182939	Symbol	vtseg		8182815						
ANR	8182940	Symbol	pl_get_uint16		8182815						
ANR	8182941	Symbol	plfont -> header		8182815						
ANR	8182942	Symbol	i		8182815						
ANR	8182943	Symbol	plfont		8182815						
ANR	8182944	Symbol	plfont -> large_sizes		8182815						
ANR	8182945	Symbol	plfont -> offsets		8182815						
ANR	8182946	Symbol	pl_get_uint32		8182815						
ANR	8182947	Symbol	glyph		8182815						
ANR	8182948	Symbol	GS_NO_GLYPH		8182815						
ANR	8182949	Symbol	len		8182815						
ANR	8182950	Symbol	* plfont		8182815						
ANR	8182951	Symbol	plfont -> offsets . VT		8182815						
ANR	8182952	Symbol	VT		8182815						
ANR	8182953	Function	pl_tt_f1c2_get_metrics	553:0:18607:20061							
ANR	8182954	FunctionDef	"pl_tt_f1c2_get_metrics (gs_font_type42 * pfont , uint glyph_index , int wmode , float * sbw)"		8182953	0					
ANR	8182955	CompoundStatement		556:0:18717:20061	8182953	0					
ANR	8182956	IdentifierDeclStatement	int code = gs_error_undefined ;	557:4:18723:18752	8182953	0	True				
ANR	8182957	IdentifierDecl	code = gs_error_undefined		8182953	0					
ANR	8182958	IdentifierDeclType	int		8182953	0					
ANR	8182959	Identifier	code		8182953	1					
ANR	8182960	AssignmentExpression	code = gs_error_undefined		8182953	2		=			
ANR	8182961	Identifier	gs_error_undefined		8182953	0					
ANR	8182962	Identifier	gs_error_undefined		8182953	1					
ANR	8182963	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	558:4:18758:18796	8182953	1	True				
ANR	8182964	IdentifierDecl	* plfont = pfont -> client_data		8182953	0					
ANR	8182965	IdentifierDeclType	pl_font_t *		8182953	0					
ANR	8182966	Identifier	plfont		8182953	1					
ANR	8182967	AssignmentExpression	* plfont = pfont -> client_data		8182953	2		=			
ANR	8182968	Identifier	plfont		8182953	0					
ANR	8182969	PtrMemberAccess	pfont -> client_data		8182953	1					
ANR	8182970	Identifier	pfont		8182953	0					
ANR	8182971	Identifier	client_data		8182953	1					
ANR	8182972	IdentifierDeclStatement	const pl_font_glyph_t * pfg = 0 ;	559:4:18802:18832	8182953	2	True				
ANR	8182973	IdentifierDecl	* pfg = 0		8182953	0					
ANR	8182974	IdentifierDeclType	const pl_font_glyph_t *		8182953	0					
ANR	8182975	Identifier	pfg		8182953	1					
ANR	8182976	AssignmentExpression	* pfg = 0		8182953	2		=			
ANR	8182977	Identifier	pfg		8182953	0					
ANR	8182978	PrimaryExpression	0		8182953	1					
ANR	8182979	IdentifierDeclStatement	const byte * cdata = 0 ;	560:4:18838:18859	8182953	3	True				
ANR	8182980	IdentifierDecl	* cdata = 0		8182953	0					
ANR	8182981	IdentifierDeclType	const byte *		8182953	0					
ANR	8182982	Identifier	cdata		8182953	1					
ANR	8182983	AssignmentExpression	* cdata = 0		8182953	2		=			
ANR	8182984	Identifier	cdata		8182953	0					
ANR	8182985	PrimaryExpression	0		8182953	1					
ANR	8182986	IfStatement	if ( plfont -> glyphs . table != 0 )		8182953	4					
ANR	8182987	Condition	plfont -> glyphs . table != 0	562:8:18870:18894	8182953	0	True				
ANR	8182988	EqualityExpression	plfont -> glyphs . table != 0		8182953	0		!=			
ANR	8182989	MemberAccess	plfont -> glyphs . table		8182953	0					
ANR	8182990	PtrMemberAccess	plfont -> glyphs		8182953	0					
ANR	8182991	Identifier	plfont		8182953	0					
ANR	8182992	Identifier	glyphs		8182953	1					
ANR	8182993	Identifier	table		8182953	1					
ANR	8182994	PrimaryExpression	0		8182953	1					
ANR	8182995	CompoundStatement		7:35:179:179	8182953	1					
ANR	8182996	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , glyph_index )"	566:8:19065:19112	8182953	0	True				
ANR	8182997	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , glyph_index )"		8182953	0		=			
ANR	8182998	Identifier	pfg		8182953	0					
ANR	8182999	CallExpression	"pl_font_lookup_glyph ( plfont , glyph_index )"		8182953	1					
ANR	8183000	Callee	pl_font_lookup_glyph		8182953	0					
ANR	8183001	Identifier	pl_font_lookup_glyph		8182953	0					
ANR	8183002	ArgumentList	plfont		8182953	1					
ANR	8183003	Argument	plfont		8182953	0					
ANR	8183004	Identifier	plfont		8182953	0					
ANR	8183005	Argument	glyph_index		8182953	1					
ANR	8183006	Identifier	glyph_index		8182953	0					
ANR	8183007	ExpressionStatement	cdata = pfg -> data	567:8:19122:19139	8182953	1	True				
ANR	8183008	AssignmentExpression	cdata = pfg -> data		8182953	0		=			
ANR	8183009	Identifier	cdata		8182953	0					
ANR	8183010	PtrMemberAccess	pfg -> data		8182953	1					
ANR	8183011	Identifier	pfg		8182953	0					
ANR	8183012	Identifier	data		8182953	1					
ANR	8183013	IfStatement	if ( cdata && ( cdata [ 1 ] == 1 || cdata [ 1 ] == 2 ) )		8182953	2					
ANR	8183014	Condition	cdata && ( cdata [ 1 ] == 1 || cdata [ 1 ] == 2 )	569:12:19154:19194	8182953	0	True				
ANR	8183015	AndExpression	cdata && ( cdata [ 1 ] == 1 || cdata [ 1 ] == 2 )		8182953	0		&&			
ANR	8183016	Identifier	cdata		8182953	0					
ANR	8183017	OrExpression	cdata [ 1 ] == 1 || cdata [ 1 ] == 2		8182953	1		||			
ANR	8183018	EqualityExpression	cdata [ 1 ] == 1		8182953	0		==			
ANR	8183019	ArrayIndexing	cdata [ 1 ]		8182953	0					
ANR	8183020	Identifier	cdata		8182953	0					
ANR	8183021	PrimaryExpression	1		8182953	1					
ANR	8183022	PrimaryExpression	1		8182953	1					
ANR	8183023	EqualityExpression	cdata [ 1 ] == 2		8182953	1		==			
ANR	8183024	ArrayIndexing	cdata [ 1 ]		8182953	0					
ANR	8183025	Identifier	cdata		8182953	0					
ANR	8183026	PrimaryExpression	1		8182953	1					
ANR	8183027	PrimaryExpression	2		8182953	1					
ANR	8183028	CompoundStatement		17:12:575:582	8182953	1					
ANR	8183029	IdentifierDeclStatement	double factor = 1.0 / pfont -> data . unitsPerEm ;	570:12:19211:19255	8182953	0	True				
ANR	8183030	IdentifierDecl	factor = 1.0 / pfont -> data . unitsPerEm		8182953	0					
ANR	8183031	IdentifierDeclType	double		8182953	0					
ANR	8183032	Identifier	factor		8182953	1					
ANR	8183033	AssignmentExpression	factor = 1.0 / pfont -> data . unitsPerEm		8182953	2		=			
ANR	8183034	Identifier	factor		8182953	0					
ANR	8183035	MultiplicativeExpression	1.0 / pfont -> data . unitsPerEm		8182953	1		/			
ANR	8183036	PrimaryExpression	1.0		8182953	0					
ANR	8183037	MemberAccess	pfont -> data . unitsPerEm		8182953	1					
ANR	8183038	PtrMemberAccess	pfont -> data		8182953	0					
ANR	8183039	Identifier	pfont		8182953	0					
ANR	8183040	Identifier	data		8182953	1					
ANR	8183041	Identifier	unitsPerEm		8182953	1					
ANR	8183042	IdentifierDeclStatement	uint width ;	571:12:19269:19279	8182953	1	True				
ANR	8183043	IdentifierDecl	width		8182953	0					
ANR	8183044	IdentifierDeclType	uint		8182953	0					
ANR	8183045	Identifier	width		8182953	1					
ANR	8183046	IdentifierDeclStatement	int lsb ;	572:12:19293:19300	8182953	2	True				
ANR	8183047	IdentifierDecl	lsb		8182953	0					
ANR	8183048	IdentifierDeclType	int		8182953	0					
ANR	8183049	Identifier	lsb		8182953	1					
ANR	8183050	ExpressionStatement	lsb = pl_get_int16 ( cdata + 4 )	574:12:19315:19344	8182953	3	True				
ANR	8183051	AssignmentExpression	lsb = pl_get_int16 ( cdata + 4 )		8182953	0		=			
ANR	8183052	Identifier	lsb		8182953	0					
ANR	8183053	CallExpression	pl_get_int16 ( cdata + 4 )		8182953	1					
ANR	8183054	Callee	pl_get_int16		8182953	0					
ANR	8183055	Identifier	pl_get_int16		8182953	0					
ANR	8183056	ArgumentList	cdata + 4		8182953	1					
ANR	8183057	Argument	cdata + 4		8182953	0					
ANR	8183058	AdditiveExpression	cdata + 4		8182953	0		+			
ANR	8183059	Identifier	cdata		8182953	0					
ANR	8183060	PrimaryExpression	4		8182953	1					
ANR	8183061	ExpressionStatement	width = pl_get_int16 ( cdata + 6 )	575:12:19358:19389	8182953	4	True				
ANR	8183062	AssignmentExpression	width = pl_get_int16 ( cdata + 6 )		8182953	0		=			
ANR	8183063	Identifier	width		8182953	0					
ANR	8183064	CallExpression	pl_get_int16 ( cdata + 6 )		8182953	1					
ANR	8183065	Callee	pl_get_int16		8182953	0					
ANR	8183066	Identifier	pl_get_int16		8182953	0					
ANR	8183067	ArgumentList	cdata + 6		8182953	1					
ANR	8183068	Argument	cdata + 6		8182953	0					
ANR	8183069	AdditiveExpression	cdata + 6		8182953	0		+			
ANR	8183070	Identifier	cdata		8182953	0					
ANR	8183071	PrimaryExpression	6		8182953	1					
ANR	8183072	IfStatement	if ( wmode )		8182953	5					
ANR	8183073	Condition	wmode	579:16:19479:19483	8182953	0	True				
ANR	8183074	Identifier	wmode		8182953	0					
ANR	8183075	CompoundStatement		24:23:768:768	8182953	1					
ANR	8183076	ExpressionStatement	factor = - factor	583:16:19673:19689	8182953	0	True				
ANR	8183077	AssignmentExpression	factor = - factor		8182953	0		=			
ANR	8183078	Identifier	factor		8182953	0					
ANR	8183079	UnaryOperationExpression	- factor		8182953	1					
ANR	8183080	UnaryOperator	-		8182953	0					
ANR	8183081	Identifier	factor		8182953	1					
ANR	8183082	ExpressionStatement	"sbw [ 0 ] = 0 , sbw [ 1 ] = lsb * factor"	584:16:19750:19783	8182953	1	True				
ANR	8183083	Expression	"sbw [ 0 ] = 0 , sbw [ 1 ] = lsb * factor"		8182953	0					
ANR	8183084	AssignmentExpression	sbw [ 0 ] = 0		8182953	0		=			
ANR	8183085	ArrayIndexing	sbw [ 0 ]		8182953	0					
ANR	8183086	Identifier	sbw		8182953	0					
ANR	8183087	PrimaryExpression	0		8182953	1					
ANR	8183088	PrimaryExpression	0		8182953	1					
ANR	8183089	AssignmentExpression	sbw [ 1 ] = lsb * factor		8182953	1		=			
ANR	8183090	ArrayIndexing	sbw [ 1 ]		8182953	0					
ANR	8183091	Identifier	sbw		8182953	0					
ANR	8183092	PrimaryExpression	1		8182953	1					
ANR	8183093	MultiplicativeExpression	lsb * factor		8182953	1		*			
ANR	8183094	Identifier	lsb		8182953	0					
ANR	8183095	Identifier	factor		8182953	1					
ANR	8183096	ExpressionStatement	"sbw [ 2 ] = 0 , sbw [ 3 ] = width * factor"	585:16:19801:19836	8182953	2	True				
ANR	8183097	Expression	"sbw [ 2 ] = 0 , sbw [ 3 ] = width * factor"		8182953	0					
ANR	8183098	AssignmentExpression	sbw [ 2 ] = 0		8182953	0		=			
ANR	8183099	ArrayIndexing	sbw [ 2 ]		8182953	0					
ANR	8183100	Identifier	sbw		8182953	0					
ANR	8183101	PrimaryExpression	2		8182953	1					
ANR	8183102	PrimaryExpression	0		8182953	1					
ANR	8183103	AssignmentExpression	sbw [ 3 ] = width * factor		8182953	1		=			
ANR	8183104	ArrayIndexing	sbw [ 3 ]		8182953	0					
ANR	8183105	Identifier	sbw		8182953	0					
ANR	8183106	PrimaryExpression	3		8182953	1					
ANR	8183107	MultiplicativeExpression	width * factor		8182953	1		*			
ANR	8183108	Identifier	width		8182953	0					
ANR	8183109	Identifier	factor		8182953	1					
ANR	8183110	ElseStatement	else		8182953	0					
ANR	8183111	CompoundStatement		31:19:1139:1139	8182953	0					
ANR	8183112	ExpressionStatement	"sbw [ 0 ] = lsb * factor , sbw [ 1 ] = 0"	587:16:19875:19908	8182953	0	True				
ANR	8183113	Expression	"sbw [ 0 ] = lsb * factor , sbw [ 1 ] = 0"		8182953	0					
ANR	8183114	AssignmentExpression	sbw [ 0 ] = lsb * factor		8182953	0		=			
ANR	8183115	ArrayIndexing	sbw [ 0 ]		8182953	0					
ANR	8183116	Identifier	sbw		8182953	0					
ANR	8183117	PrimaryExpression	0		8182953	1					
ANR	8183118	MultiplicativeExpression	lsb * factor		8182953	1		*			
ANR	8183119	Identifier	lsb		8182953	0					
ANR	8183120	Identifier	factor		8182953	1					
ANR	8183121	AssignmentExpression	sbw [ 1 ] = 0		8182953	1		=			
ANR	8183122	ArrayIndexing	sbw [ 1 ]		8182953	0					
ANR	8183123	Identifier	sbw		8182953	0					
ANR	8183124	PrimaryExpression	1		8182953	1					
ANR	8183125	PrimaryExpression	0		8182953	1					
ANR	8183126	ExpressionStatement	"sbw [ 2 ] = width * factor , sbw [ 3 ] = 0"	588:16:19926:19961	8182953	1	True				
ANR	8183127	Expression	"sbw [ 2 ] = width * factor , sbw [ 3 ] = 0"		8182953	0					
ANR	8183128	AssignmentExpression	sbw [ 2 ] = width * factor		8182953	0		=			
ANR	8183129	ArrayIndexing	sbw [ 2 ]		8182953	0					
ANR	8183130	Identifier	sbw		8182953	0					
ANR	8183131	PrimaryExpression	2		8182953	1					
ANR	8183132	MultiplicativeExpression	width * factor		8182953	1		*			
ANR	8183133	Identifier	width		8182953	0					
ANR	8183134	Identifier	factor		8182953	1					
ANR	8183135	AssignmentExpression	sbw [ 3 ] = 0		8182953	1		=			
ANR	8183136	ArrayIndexing	sbw [ 3 ]		8182953	0					
ANR	8183137	Identifier	sbw		8182953	0					
ANR	8183138	PrimaryExpression	3		8182953	1					
ANR	8183139	PrimaryExpression	0		8182953	1					
ANR	8183140	ExpressionStatement	code = 0	590:12:19989:19997	8182953	6	True				
ANR	8183141	AssignmentExpression	code = 0		8182953	0		=			
ANR	8183142	Identifier	code		8182953	0					
ANR	8183143	PrimaryExpression	0		8182953	1					
ANR	8183144	ReturnStatement	return code ;	593:4:20048:20059	8182953	5	True				
ANR	8183145	Identifier	code		8182953	0					
ANR	8183146	ReturnType	int		8182953	1					
ANR	8183147	Identifier	pl_tt_f1c2_get_metrics		8182953	2					
ANR	8183148	ParameterList	"gs_font_type42 * pfont , uint glyph_index , int wmode , float * sbw"		8182953	3					
ANR	8183149	Parameter	gs_font_type42 * pfont	554:23:18634:18655	8182953	0	True				
ANR	8183150	ParameterType	gs_font_type42 *		8182953	0					
ANR	8183151	Identifier	pfont		8182953	1					
ANR	8183152	Parameter	uint glyph_index	554:47:18658:18673	8182953	1	True				
ANR	8183153	ParameterType	uint		8182953	0					
ANR	8183154	Identifier	glyph_index		8182953	1					
ANR	8183155	Parameter	int wmode	555:18:18694:18702	8182953	2	True				
ANR	8183156	ParameterType	int		8182953	0					
ANR	8183157	Identifier	wmode		8182953	1					
ANR	8183158	Parameter	float * sbw	555:29:18705:18714	8182953	3	True				
ANR	8183159	ParameterType	float *		8182953	0					
ANR	8183160	Identifier	sbw		8182953	1					
ANR	8183161	CFGEntryNode	ENTRY		8182953		True				
ANR	8183162	CFGExitNode	EXIT		8182953		True				
ANR	8183163	Symbol	code		8182953						
ANR	8183164	Symbol	glyph_index		8182953						
ANR	8183165	Symbol	pl_font_lookup_glyph		8182953						
ANR	8183166	Symbol	gs_error_undefined		8182953						
ANR	8183167	Symbol	sbw		8182953						
ANR	8183168	Symbol	plfont		8182953						
ANR	8183169	Symbol	* cdata		8182953						
ANR	8183170	Symbol	pl_get_int16		8182953						
ANR	8183171	Symbol	wmode		8182953						
ANR	8183172	Symbol	* pfg		8182953						
ANR	8183173	Symbol	factor		8182953						
ANR	8183174	Symbol	pfont -> data . unitsPerEm		8182953						
ANR	8183175	Symbol	plfont -> glyphs . table		8182953						
ANR	8183176	Symbol	pfont		8182953						
ANR	8183177	Symbol	pfont -> data		8182953						
ANR	8183178	Symbol	cdata		8182953						
ANR	8183179	Symbol	pfont -> client_data		8182953						
ANR	8183180	Symbol	pfg		8182953						
ANR	8183181	Symbol	* pfont		8182953						
ANR	8183182	Symbol	* sbw		8182953						
ANR	8183183	Symbol	plfont -> glyphs		8182953						
ANR	8183184	Symbol	* plfont		8182953						
ANR	8183185	Symbol	width		8182953						
ANR	8183186	Symbol	lsb		8182953						
ANR	8183187	Symbol	pfg -> data		8182953						
ANR	8183188	Function	pl_tt_get_metrics	599:0:20165:21612							
ANR	8183189	FunctionDef	"pl_tt_get_metrics (gs_font_type42 * pfont , uint glyph_index , gs_type42_metrics_options_t options , float * sbw)"		8183188	0					
ANR	8183190	CompoundStatement		602:0:20303:21612	8183188	0					
ANR	8183191	IdentifierDeclStatement	int wmode = gs_type42_metrics_options_wmode ( options ) ;	603:4:20309:20361	8183188	0	True				
ANR	8183192	IdentifierDecl	wmode = gs_type42_metrics_options_wmode ( options )		8183188	0					
ANR	8183193	IdentifierDeclType	int		8183188	0					
ANR	8183194	Identifier	wmode		8183188	1					
ANR	8183195	AssignmentExpression	wmode = gs_type42_metrics_options_wmode ( options )		8183188	2		=			
ANR	8183196	Identifier	wmode		8183188	0					
ANR	8183197	CallExpression	gs_type42_metrics_options_wmode ( options )		8183188	1					
ANR	8183198	Callee	gs_type42_metrics_options_wmode		8183188	0					
ANR	8183199	Identifier	gs_type42_metrics_options_wmode		8183188	0					
ANR	8183200	ArgumentList	options		8183188	1					
ANR	8183201	Argument	options		8183188	0					
ANR	8183202	Identifier	options		8183188	0					
ANR	8183203	IdentifierDeclStatement	int code ;	604:4:20367:20375	8183188	1	True				
ANR	8183204	IdentifierDecl	code		8183188	0					
ANR	8183205	IdentifierDeclType	int		8183188	0					
ANR	8183206	Identifier	code		8183188	1					
ANR	8183207	IfStatement	"if ( ( code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw ) ) != gs_error_undefined )"		8183188	2					
ANR	8183208	Condition	"( code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw ) ) != gs_error_undefined"	606:8:20386:20471	8183188	0	True				
ANR	8183209	EqualityExpression	"( code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw ) ) != gs_error_undefined"		8183188	0		!=			
ANR	8183210	AssignmentExpression	"code = pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw )"		8183188	0		=			
ANR	8183211	Identifier	code		8183188	0					
ANR	8183212	CallExpression	"pl_tt_f1c2_get_metrics ( pfont , glyph_index , wmode , sbw )"		8183188	1					
ANR	8183213	Callee	pl_tt_f1c2_get_metrics		8183188	0					
ANR	8183214	Identifier	pl_tt_f1c2_get_metrics		8183188	0					
ANR	8183215	ArgumentList	pfont		8183188	1					
ANR	8183216	Argument	pfont		8183188	0					
ANR	8183217	Identifier	pfont		8183188	0					
ANR	8183218	Argument	glyph_index		8183188	1					
ANR	8183219	Identifier	glyph_index		8183188	0					
ANR	8183220	Argument	wmode		8183188	2					
ANR	8183221	Identifier	wmode		8183188	0					
ANR	8183222	Argument	sbw		8183188	3					
ANR	8183223	Identifier	sbw		8183188	0					
ANR	8183224	Identifier	gs_error_undefined		8183188	1					
ANR	8183225	CompoundStatement		5:96:170:170	8183188	1					
ANR	8183226	ReturnStatement	return code ;	607:8:20484:20495	8183188	0	True				
ANR	8183227	Identifier	code		8183188	0					
ANR	8183228	CompoundStatement		14:8:507:545	8183188	3					
ANR	8183229	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	615:8:20811:20849	8183188	0	True				
ANR	8183230	IdentifierDecl	* plfont = pfont -> client_data		8183188	0					
ANR	8183231	IdentifierDeclType	pl_font_t *		8183188	0					
ANR	8183232	Identifier	plfont		8183188	1					
ANR	8183233	AssignmentExpression	* plfont = pfont -> client_data		8183188	2		=			
ANR	8183234	Identifier	plfont		8183188	0					
ANR	8183235	PtrMemberAccess	pfont -> client_data		8183188	1					
ANR	8183236	Identifier	pfont		8183188	0					
ANR	8183237	Identifier	client_data		8183188	1					
ANR	8183238	IfStatement	if ( plfont -> allow_vertical_substitutes )		8183188	1					
ANR	8183239	Condition	plfont -> allow_vertical_substitutes	617:12:20864:20897	8183188	0	True				
ANR	8183240	PtrMemberAccess	plfont -> allow_vertical_substitutes		8183188	0					
ANR	8183241	Identifier	plfont		8183188	0					
ANR	8183242	Identifier	allow_vertical_substitutes		8183188	1					
ANR	8183243	CompoundStatement		17:12:610:673	8183188	1					
ANR	8183244	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph_index , plfont ) ;"	618:12:20914:20977	8183188	0	True				
ANR	8183245	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph_index , plfont )"		8183188	0					
ANR	8183246	IdentifierDeclType	gs_glyph		8183188	0					
ANR	8183247	Identifier	vertical		8183188	1					
ANR	8183248	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph_index , plfont )"		8183188	2		=			
ANR	8183249	Identifier	vertical		8183188	0					
ANR	8183250	CallExpression	"pl_font_vertical_glyph ( glyph_index , plfont )"		8183188	1					
ANR	8183251	Callee	pl_font_vertical_glyph		8183188	0					
ANR	8183252	Identifier	pl_font_vertical_glyph		8183188	0					
ANR	8183253	ArgumentList	glyph_index		8183188	1					
ANR	8183254	Argument	glyph_index		8183188	0					
ANR	8183255	Identifier	glyph_index		8183188	0					
ANR	8183256	Argument	plfont		8183188	1					
ANR	8183257	Identifier	plfont		8183188	0					
ANR	8183258	IfStatement	if ( vertical != GS_NO_GLYPH )		8183188	1					
ANR	8183259	Condition	vertical != GS_NO_GLYPH	620:16:20996:21018	8183188	0	True				
ANR	8183260	EqualityExpression	vertical != GS_NO_GLYPH		8183188	0		!=			
ANR	8183261	Identifier	vertical		8183188	0					
ANR	8183262	Identifier	GS_NO_GLYPH		8183188	1					
ANR	8183263	ExpressionStatement	glyph_index = vertical	621:16:21037:21059	8183188	1	True				
ANR	8183264	AssignmentExpression	glyph_index = vertical		8183188	0		=			
ANR	8183265	Identifier	glyph_index		8183188	0					
ANR	8183266	Identifier	vertical		8183188	1					
ANR	8183267	IfStatement	if ( wmode == 1 )		8183188	4					
ANR	8183268	Condition	wmode == 1	629:8:21249:21258	8183188	0	True				
ANR	8183269	EqualityExpression	wmode == 1		8183188	0		==			
ANR	8183270	Identifier	wmode		8183188	0					
ANR	8183271	PrimaryExpression	1		8183188	1					
ANR	8183272	CompoundStatement		29:8:967:1024	8183188	1					
ANR	8183273	IdentifierDeclStatement	const gs_type42_mtx_t * pmtx = & pfont -> data . metrics [ wmode ] ;	630:8:21271:21328	8183188	0	True				
ANR	8183274	IdentifierDecl	* pmtx = & pfont -> data . metrics [ wmode ]		8183188	0					
ANR	8183275	IdentifierDeclType	const gs_type42_mtx_t *		8183188	0					
ANR	8183276	Identifier	pmtx		8183188	1					
ANR	8183277	AssignmentExpression	* pmtx = & pfont -> data . metrics [ wmode ]		8183188	2		=			
ANR	8183278	Identifier	pmtx		8183188	0					
ANR	8183279	UnaryOperationExpression	& pfont -> data . metrics [ wmode ]		8183188	1					
ANR	8183280	UnaryOperator	&		8183188	0					
ANR	8183281	ArrayIndexing	pfont -> data . metrics [ wmode ]		8183188	1					
ANR	8183282	MemberAccess	pfont -> data . metrics		8183188	0					
ANR	8183283	PtrMemberAccess	pfont -> data		8183188	0					
ANR	8183284	Identifier	pfont		8183188	0					
ANR	8183285	Identifier	data		8183188	1					
ANR	8183286	Identifier	metrics		8183188	1					
ANR	8183287	Identifier	wmode		8183188	1					
ANR	8183288	IfStatement	if ( pmtx -> length == 0 )		8183188	1					
ANR	8183289	Condition	pmtx -> length == 0	632:12:21343:21359	8183188	0	True				
ANR	8183290	EqualityExpression	pmtx -> length == 0		8183188	0		==			
ANR	8183291	PtrMemberAccess	pmtx -> length		8183188	0					
ANR	8183292	Identifier	pmtx		8183188	0					
ANR	8183293	Identifier	length		8183188	1					
ANR	8183294	PrimaryExpression	0		8183188	1					
ANR	8183295	CompoundStatement		31:31:1058:1058	8183188	1					
ANR	8183296	ExpressionStatement	wmode = 0	633:12:21376:21385	8183188	0	True				
ANR	8183297	AssignmentExpression	wmode = 0		8183188	0		=			
ANR	8183298	Identifier	wmode		8183188	0					
ANR	8183299	PrimaryExpression	0		8183188	1					
ANR	8183300	ElseStatement	else		8183188	0					
ANR	8183301	CompoundStatement		33:15:1098:1098	8183188	0					
ANR	8183302	IfStatement	if ( gs_debug_c ( '=' ) )		8183188	0					
ANR	8183303	Condition	gs_debug_c ( '=' )	635:16:21420:21434	8183188	0	True				
ANR	8183304	CallExpression	gs_debug_c ( '=' )		8183188	0					
ANR	8183305	Callee	gs_debug_c		8183188	0					
ANR	8183306	Identifier	gs_debug_c		8183188	0					
ANR	8183307	ArgumentList	'='		8183188	1					
ANR	8183308	Argument	'='		8183188	0					
ANR	8183309	PrimaryExpression	'='		8183188	0					
ANR	8183310	CompoundStatement		34:33:1133:1133	8183188	1					
ANR	8183311	ExpressionStatement	"dmprintf ( pfont -> memory , ""Found vertical metrics\\n"" )"	636:16:21455:21506	8183188	0	True				
ANR	8183312	CallExpression	"dmprintf ( pfont -> memory , ""Found vertical metrics\\n"" )"		8183188	0					
ANR	8183313	Callee	dmprintf		8183188	0					
ANR	8183314	Identifier	dmprintf		8183188	0					
ANR	8183315	ArgumentList	pfont -> memory		8183188	1					
ANR	8183316	Argument	pfont -> memory		8183188	0					
ANR	8183317	PtrMemberAccess	pfont -> memory		8183188	0					
ANR	8183318	Identifier	pfont		8183188	0					
ANR	8183319	Identifier	memory		8183188	1					
ANR	8183320	Argument	"""Found vertical metrics\\n"""		8183188	1					
ANR	8183321	PrimaryExpression	"""Found vertical metrics\\n"""		8183188	0					
ANR	8183322	ReturnStatement	"return gs_type42_default_get_metrics ( pfont , glyph_index , wmode , sbw ) ;"	640:4:21542:21610	8183188	5	True				
ANR	8183323	CallExpression	"gs_type42_default_get_metrics ( pfont , glyph_index , wmode , sbw )"		8183188	0					
ANR	8183324	Callee	gs_type42_default_get_metrics		8183188	0					
ANR	8183325	Identifier	gs_type42_default_get_metrics		8183188	0					
ANR	8183326	ArgumentList	pfont		8183188	1					
ANR	8183327	Argument	pfont		8183188	0					
ANR	8183328	Identifier	pfont		8183188	0					
ANR	8183329	Argument	glyph_index		8183188	1					
ANR	8183330	Identifier	glyph_index		8183188	0					
ANR	8183331	Argument	wmode		8183188	2					
ANR	8183332	Identifier	wmode		8183188	0					
ANR	8183333	Argument	sbw		8183188	3					
ANR	8183334	Identifier	sbw		8183188	0					
ANR	8183335	ReturnType	static int		8183188	1					
ANR	8183336	Identifier	pl_tt_get_metrics		8183188	2					
ANR	8183337	ParameterList	"gs_font_type42 * pfont , uint glyph_index , gs_type42_metrics_options_t options , float * sbw"		8183188	3					
ANR	8183338	Parameter	gs_font_type42 * pfont	600:18:20194:20215	8183188	0	True				
ANR	8183339	ParameterType	gs_font_type42 *		8183188	0					
ANR	8183340	Identifier	pfont		8183188	1					
ANR	8183341	Parameter	uint glyph_index	600:42:20218:20233	8183188	1	True				
ANR	8183342	ParameterType	uint		8183188	0					
ANR	8183343	Identifier	glyph_index		8183188	1					
ANR	8183344	Parameter	gs_type42_metrics_options_t options	601:18:20254:20288	8183188	2	True				
ANR	8183345	ParameterType	gs_type42_metrics_options_t		8183188	0					
ANR	8183346	Identifier	options		8183188	1					
ANR	8183347	Parameter	float * sbw	601:55:20291:20300	8183188	3	True				
ANR	8183348	ParameterType	float *		8183188	0					
ANR	8183349	Identifier	sbw		8183188	1					
ANR	8183350	CFGEntryNode	ENTRY		8183188		True				
ANR	8183351	CFGExitNode	EXIT		8183188		True				
ANR	8183352	Symbol	code		8183188						
ANR	8183353	Symbol	glyph_index		8183188						
ANR	8183354	Symbol	pfont -> memory		8183188						
ANR	8183355	Symbol	gs_error_undefined		8183188						
ANR	8183356	Symbol	sbw		8183188						
ANR	8183357	Symbol	vertical		8183188						
ANR	8183358	Symbol	plfont		8183188						
ANR	8183359	Symbol	gs_type42_default_get_metrics		8183188						
ANR	8183360	Symbol	pmtx -> length		8183188						
ANR	8183361	Symbol	* pmtx		8183188						
ANR	8183362	Symbol	options		8183188						
ANR	8183363	Symbol	wmode		8183188						
ANR	8183364	Symbol	gs_debug_c		8183188						
ANR	8183365	Symbol	plfont -> allow_vertical_substitutes		8183188						
ANR	8183366	Symbol	pfont		8183188						
ANR	8183367	Symbol	pfont -> data . metrics		8183188						
ANR	8183368	Symbol	pfont -> data		8183188						
ANR	8183369	Symbol	gs_type42_metrics_options_wmode		8183188						
ANR	8183370	Symbol	pl_tt_f1c2_get_metrics		8183188						
ANR	8183371	Symbol	pfont -> client_data		8183188						
ANR	8183372	Symbol	* pfont		8183188						
ANR	8183373	Symbol	GS_NO_GLYPH		8183188						
ANR	8183374	Symbol	pmtx		8183188						
ANR	8183375	Symbol	* plfont		8183188						
ANR	8183376	Symbol	pl_font_vertical_glyph		8183188						
ANR	8183377	Function	pl_tt_get_outline	644:0:21685:22822							
ANR	8183378	FunctionDef	"pl_tt_get_outline (gs_font_type42 * pfont , uint index , gs_glyph_data_t * pdata)"		8183377	0					
ANR	8183379	CompoundStatement		646:0:21768:22822	8183377	0					
ANR	8183380	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	647:4:21774:21812	8183377	0	True				
ANR	8183381	IdentifierDecl	* plfont = pfont -> client_data		8183377	0					
ANR	8183382	IdentifierDeclType	pl_font_t *		8183377	0					
ANR	8183383	Identifier	plfont		8183377	1					
ANR	8183384	AssignmentExpression	* plfont = pfont -> client_data		8183377	2		=			
ANR	8183385	Identifier	plfont		8183377	0					
ANR	8183386	PtrMemberAccess	pfont -> client_data		8183377	1					
ANR	8183387	Identifier	pfont		8183377	0					
ANR	8183388	Identifier	client_data		8183377	1					
ANR	8183389	IdentifierDeclStatement	"const pl_font_glyph_t * pfg = pl_font_lookup_glyph ( plfont , index ) ;"	648:4:21818:21882	8183377	1	True				
ANR	8183390	IdentifierDecl	"* pfg = pl_font_lookup_glyph ( plfont , index )"		8183377	0					
ANR	8183391	IdentifierDeclType	const pl_font_glyph_t *		8183377	0					
ANR	8183392	Identifier	pfg		8183377	1					
ANR	8183393	AssignmentExpression	"* pfg = pl_font_lookup_glyph ( plfont , index )"		8183377	2		=			
ANR	8183394	Identifier	pfg		8183377	0					
ANR	8183395	CallExpression	"pl_font_lookup_glyph ( plfont , index )"		8183377	1					
ANR	8183396	Callee	pl_font_lookup_glyph		8183377	0					
ANR	8183397	Identifier	pl_font_lookup_glyph		8183377	0					
ANR	8183398	ArgumentList	plfont		8183377	1					
ANR	8183399	Argument	plfont		8183377	0					
ANR	8183400	Identifier	plfont		8183377	0					
ANR	8183401	Argument	index		8183377	1					
ANR	8183402	Identifier	index		8183377	0					
ANR	8183403	IdentifierDeclStatement	const byte * cdata = pfg -> data ;	649:4:21888:21917	8183377	2	True				
ANR	8183404	IdentifierDecl	* cdata = pfg -> data		8183377	0					
ANR	8183405	IdentifierDeclType	const byte *		8183377	0					
ANR	8183406	Identifier	cdata		8183377	1					
ANR	8183407	AssignmentExpression	* cdata = pfg -> data		8183377	2		=			
ANR	8183408	Identifier	cdata		8183377	0					
ANR	8183409	PtrMemberAccess	pfg -> data		8183377	1					
ANR	8183410	Identifier	pfg		8183377	0					
ANR	8183411	Identifier	data		8183377	1					
ANR	8183412	IfStatement	if ( cdata == 0 )		8183377	3					
ANR	8183413	Condition	cdata == 0	651:8:21928:21937	8183377	0	True				
ANR	8183414	EqualityExpression	cdata == 0		8183377	0		==			
ANR	8183415	Identifier	cdata		8183377	0					
ANR	8183416	PrimaryExpression	0		8183377	1					
ANR	8183417	CompoundStatement		6:20:171:171	8183377	1					
ANR	8183418	ExpressionStatement	gs_glyph_data_from_null ( pdata )	653:8:21980:22010	8183377	0	True				
ANR	8183419	CallExpression	gs_glyph_data_from_null ( pdata )		8183377	0					
ANR	8183420	Callee	gs_glyph_data_from_null		8183377	0					
ANR	8183421	Identifier	gs_glyph_data_from_null		8183377	0					
ANR	8183422	ArgumentList	pdata		8183377	1					
ANR	8183423	Argument	pdata		8183377	0					
ANR	8183424	Identifier	pdata		8183377	0					
ANR	8183425	ElseStatement	else		8183377	0					
ANR	8183426	CompoundStatement		12:8:357:410	8183377	0					
ANR	8183427	IdentifierDeclStatement	uint desc_size = ( * cdata == 15 ? cdata [ 2 ] : 0 ) ;	655:8:22033:22116	8183377	0	True				
ANR	8183428	IdentifierDecl	desc_size = ( * cdata == 15 ? cdata [ 2 ] : 0 )		8183377	0					
ANR	8183429	IdentifierDeclType	uint		8183377	0					
ANR	8183430	Identifier	desc_size		8183377	1					
ANR	8183431	AssignmentExpression	desc_size = ( * cdata == 15 ? cdata [ 2 ] : 0 )		8183377	2		=			
ANR	8183432	Identifier	desc_size		8183377	0					
ANR	8183433	ConditionalExpression	* cdata == 15 ? cdata [ 2 ] : 0		8183377	1					
ANR	8183434	Condition	* cdata == 15		8183377	0					
ANR	8183435	EqualityExpression	* cdata == 15		8183377	0		==			
ANR	8183436	UnaryOperationExpression	* cdata		8183377	0					
ANR	8183437	UnaryOperator	*		8183377	0					
ANR	8183438	Identifier	cdata		8183377	1					
ANR	8183439	PrimaryExpression	15		8183377	1					
ANR	8183440	ArrayIndexing	cdata [ 2 ]		8183377	1					
ANR	8183441	Identifier	cdata		8183377	0					
ANR	8183442	PrimaryExpression	2		8183377	1					
ANR	8183443	PrimaryExpression	0		8183377	2					
ANR	8183444	IdentifierDeclStatement	uint data_size = pl_get_uint16 ( cdata + 2 + desc_size ) ;	657:8:22126:22179	8183377	1	True				
ANR	8183445	IdentifierDecl	data_size = pl_get_uint16 ( cdata + 2 + desc_size )		8183377	0					
ANR	8183446	IdentifierDeclType	uint		8183377	0					
ANR	8183447	Identifier	data_size		8183377	1					
ANR	8183448	AssignmentExpression	data_size = pl_get_uint16 ( cdata + 2 + desc_size )		8183377	2		=			
ANR	8183449	Identifier	data_size		8183377	0					
ANR	8183450	CallExpression	pl_get_uint16 ( cdata + 2 + desc_size )		8183377	1					
ANR	8183451	Callee	pl_get_uint16		8183377	0					
ANR	8183452	Identifier	pl_get_uint16		8183377	0					
ANR	8183453	ArgumentList	cdata + 2 + desc_size		8183377	1					
ANR	8183454	Argument	cdata + 2 + desc_size		8183377	0					
ANR	8183455	AdditiveExpression	cdata + 2 + desc_size		8183377	0		+			
ANR	8183456	Identifier	cdata		8183377	0					
ANR	8183457	AdditiveExpression	2 + desc_size		8183377	1		+			
ANR	8183458	PrimaryExpression	2		8183377	0					
ANR	8183459	Identifier	desc_size		8183377	1					
ANR	8183460	IfStatement	if ( data_size > pfg -> data_len )		8183377	2					
ANR	8183461	Condition	data_size > pfg -> data_len	659:12:22194:22218	8183377	0	True				
ANR	8183462	RelationalExpression	data_size > pfg -> data_len		8183377	0		>			
ANR	8183463	Identifier	data_size		8183377	0					
ANR	8183464	PtrMemberAccess	pfg -> data_len		8183377	1					
ANR	8183465	Identifier	pfg		8183377	0					
ANR	8183466	Identifier	data_len		8183377	1					
ANR	8183467	ExpressionStatement	data_size = pfg -> data_len	660:12:22233:22258	8183377	1	True				
ANR	8183468	AssignmentExpression	data_size = pfg -> data_len		8183377	0		=			
ANR	8183469	Identifier	data_size		8183377	0					
ANR	8183470	PtrMemberAccess	pfg -> data_len		8183377	1					
ANR	8183471	Identifier	pfg		8183377	0					
ANR	8183472	Identifier	data_len		8183377	1					
ANR	8183473	IfStatement	if ( data_size <= 4 )		8183377	3					
ANR	8183474	Condition	data_size <= 4	662:12:22273:22286	8183377	0	True				
ANR	8183475	RelationalExpression	data_size <= 4		8183377	0		<=			
ANR	8183476	Identifier	data_size		8183377	0					
ANR	8183477	PrimaryExpression	4		8183377	1					
ANR	8183478	CompoundStatement		17:28:520:520	8183377	1					
ANR	8183479	ExpressionStatement	gs_glyph_data_from_null ( pdata )	664:12:22335:22365	8183377	0	True				
ANR	8183480	CallExpression	gs_glyph_data_from_null ( pdata )		8183377	0					
ANR	8183481	Callee	gs_glyph_data_from_null		8183377	0					
ANR	8183482	Identifier	gs_glyph_data_from_null		8183377	0					
ANR	8183483	ArgumentList	pdata		8183377	1					
ANR	8183484	Argument	pdata		8183377	0					
ANR	8183485	Identifier	pdata		8183377	0					
ANR	8183486	ElseStatement	else		8183377	0					
ANR	8183487	IfStatement	if ( cdata [ 1 ] == 0 )		8183377	0					
ANR	8183488	Condition	cdata [ 1 ] == 0	665:19:22386:22398	8183377	0	True				
ANR	8183489	EqualityExpression	cdata [ 1 ] == 0		8183377	0		==			
ANR	8183490	ArrayIndexing	cdata [ 1 ]		8183377	0					
ANR	8183491	Identifier	cdata		8183377	0					
ANR	8183492	PrimaryExpression	1		8183377	1					
ANR	8183493	PrimaryExpression	0		8183377	1					
ANR	8183494	CompoundStatement		20:34:632:632	8183377	1					
ANR	8183495	ExpressionStatement	"gs_glyph_data_from_bytes ( pdata , cdata , 6 + desc_size , data_size - 4 , NULL )"	666:12:22415:22563	8183377	0	True				
ANR	8183496	CallExpression	"gs_glyph_data_from_bytes ( pdata , cdata , 6 + desc_size , data_size - 4 , NULL )"		8183377	0					
ANR	8183497	Callee	gs_glyph_data_from_bytes		8183377	0					
ANR	8183498	Identifier	gs_glyph_data_from_bytes		8183377	0					
ANR	8183499	ArgumentList	pdata		8183377	1					
ANR	8183500	Argument	pdata		8183377	0					
ANR	8183501	Identifier	pdata		8183377	0					
ANR	8183502	Argument	cdata		8183377	1					
ANR	8183503	Identifier	cdata		8183377	0					
ANR	8183504	Argument	6 + desc_size		8183377	2					
ANR	8183505	AdditiveExpression	6 + desc_size		8183377	0		+			
ANR	8183506	PrimaryExpression	6		8183377	0					
ANR	8183507	Identifier	desc_size		8183377	1					
ANR	8183508	Argument	data_size - 4		8183377	3					
ANR	8183509	AdditiveExpression	data_size - 4		8183377	0		-			
ANR	8183510	Identifier	data_size		8183377	0					
ANR	8183511	PrimaryExpression	4		8183377	1					
ANR	8183512	Argument	NULL		8183377	4					
ANR	8183513	Identifier	NULL		8183377	0					
ANR	8183514	ElseStatement	else		8183377	0					
ANR	8183515	IfStatement	if ( cdata [ 1 ] == 1 )		8183377	0					
ANR	8183516	Condition	cdata [ 1 ] == 1	669:19:22584:22596	8183377	0	True				
ANR	8183517	EqualityExpression	cdata [ 1 ] == 1		8183377	0		==			
ANR	8183518	ArrayIndexing	cdata [ 1 ]		8183377	0					
ANR	8183519	Identifier	cdata		8183377	0					
ANR	8183520	PrimaryExpression	1		8183377	1					
ANR	8183521	PrimaryExpression	1		8183377	1					
ANR	8183522	CompoundStatement		24:34:830:830	8183377	1					
ANR	8183523	ExpressionStatement	"gs_glyph_data_from_bytes ( pdata , cdata , 10 , data_size - 8 , NULL )"	670:12:22613:22676	8183377	0	True				
ANR	8183524	CallExpression	"gs_glyph_data_from_bytes ( pdata , cdata , 10 , data_size - 8 , NULL )"		8183377	0					
ANR	8183525	Callee	gs_glyph_data_from_bytes		8183377	0					
ANR	8183526	Identifier	gs_glyph_data_from_bytes		8183377	0					
ANR	8183527	ArgumentList	pdata		8183377	1					
ANR	8183528	Argument	pdata		8183377	0					
ANR	8183529	Identifier	pdata		8183377	0					
ANR	8183530	Argument	cdata		8183377	1					
ANR	8183531	Identifier	cdata		8183377	0					
ANR	8183532	Argument	10		8183377	2					
ANR	8183533	PrimaryExpression	10		8183377	0					
ANR	8183534	Argument	data_size - 8		8183377	3					
ANR	8183535	AdditiveExpression	data_size - 8		8183377	0		-			
ANR	8183536	Identifier	data_size		8183377	0					
ANR	8183537	PrimaryExpression	8		8183377	1					
ANR	8183538	Argument	NULL		8183377	4					
ANR	8183539	Identifier	NULL		8183377	0					
ANR	8183540	ElseStatement	else		8183377	0					
ANR	8183541	IfStatement	if ( cdata [ 1 ] == 2 )		8183377	0					
ANR	8183542	Condition	cdata [ 1 ] == 2	671:19:22697:22709	8183377	0	True				
ANR	8183543	EqualityExpression	cdata [ 1 ] == 2		8183377	0		==			
ANR	8183544	ArrayIndexing	cdata [ 1 ]		8183377	0					
ANR	8183545	Identifier	cdata		8183377	0					
ANR	8183546	PrimaryExpression	1		8183377	1					
ANR	8183547	PrimaryExpression	2		8183377	1					
ANR	8183548	CompoundStatement		26:34:943:943	8183377	1					
ANR	8183549	ExpressionStatement	"gs_glyph_data_from_bytes ( pdata , cdata , 12 , data_size - 10 , NULL )"	672:12:22726:22790	8183377	0	True				
ANR	8183550	CallExpression	"gs_glyph_data_from_bytes ( pdata , cdata , 12 , data_size - 10 , NULL )"		8183377	0					
ANR	8183551	Callee	gs_glyph_data_from_bytes		8183377	0					
ANR	8183552	Identifier	gs_glyph_data_from_bytes		8183377	0					
ANR	8183553	ArgumentList	pdata		8183377	1					
ANR	8183554	Argument	pdata		8183377	0					
ANR	8183555	Identifier	pdata		8183377	0					
ANR	8183556	Argument	cdata		8183377	1					
ANR	8183557	Identifier	cdata		8183377	0					
ANR	8183558	Argument	12		8183377	2					
ANR	8183559	PrimaryExpression	12		8183377	0					
ANR	8183560	Argument	data_size - 10		8183377	3					
ANR	8183561	AdditiveExpression	data_size - 10		8183377	0		-			
ANR	8183562	Identifier	data_size		8183377	0					
ANR	8183563	PrimaryExpression	10		8183377	1					
ANR	8183564	Argument	NULL		8183377	4					
ANR	8183565	Identifier	NULL		8183377	0					
ANR	8183566	ReturnStatement	return 0 ;	675:4:22812:22820	8183377	4	True				
ANR	8183567	PrimaryExpression	0		8183377	0					
ANR	8183568	ReturnType	int		8183377	1					
ANR	8183569	Identifier	pl_tt_get_outline		8183377	2					
ANR	8183570	ParameterList	"gs_font_type42 * pfont , uint index , gs_glyph_data_t * pdata"		8183377	3					
ANR	8183571	Parameter	gs_font_type42 * pfont	645:18:21707:21728	8183377	0	True				
ANR	8183572	ParameterType	gs_font_type42 *		8183377	0					
ANR	8183573	Identifier	pfont		8183377	1					
ANR	8183574	Parameter	uint index	645:42:21731:21740	8183377	1	True				
ANR	8183575	ParameterType	uint		8183377	0					
ANR	8183576	Identifier	index		8183377	1					
ANR	8183577	Parameter	gs_glyph_data_t * pdata	645:54:21743:21765	8183377	2	True				
ANR	8183578	ParameterType	gs_glyph_data_t *		8183377	0					
ANR	8183579	Identifier	pdata		8183377	1					
ANR	8183580	CFGEntryNode	ENTRY		8183377		True				
ANR	8183581	CFGExitNode	EXIT		8183377		True				
ANR	8183582	Symbol	data_size		8183377						
ANR	8183583	Symbol	pl_get_uint16		8183377						
ANR	8183584	Symbol	pdata		8183377						
ANR	8183585	Symbol	NULL		8183377						
ANR	8183586	Symbol	pfont		8183377						
ANR	8183587	Symbol	pl_font_lookup_glyph		8183377						
ANR	8183588	Symbol	index		8183377						
ANR	8183589	Symbol	plfont		8183377						
ANR	8183590	Symbol	cdata		8183377						
ANR	8183591	Symbol	pfont -> client_data		8183377						
ANR	8183592	Symbol	pfg		8183377						
ANR	8183593	Symbol	desc_size		8183377						
ANR	8183594	Symbol	* pfont		8183377						
ANR	8183595	Symbol	* cdata		8183377						
ANR	8183596	Symbol	* pfg		8183377						
ANR	8183597	Symbol	pfg -> data_len		8183377						
ANR	8183598	Symbol	pfg -> data		8183377						
ANR	8183599	Function	tt_find_table	684:0:23078:23748							
ANR	8183600	FunctionDef	"tt_find_table (gs_font_type42 * pfont , const char * tname , uint * plen)"		8183599	0					
ANR	8183601	CompoundStatement		686:0:23154:23748	8183599	0					
ANR	8183602	IdentifierDeclStatement	const byte * OffsetTable ;	687:4:23160:23183	8183599	0	True				
ANR	8183603	IdentifierDecl	* OffsetTable		8183599	0					
ANR	8183604	IdentifierDeclType	const byte *		8183599	0					
ANR	8183605	Identifier	OffsetTable		8183599	1					
ANR	8183606	IdentifierDeclStatement	uint numTables ;	688:4:23189:23203	8183599	1	True				
ANR	8183607	IdentifierDecl	numTables		8183599	0					
ANR	8183608	IdentifierDeclType	uint		8183599	0					
ANR	8183609	Identifier	numTables		8183599	1					
ANR	8183610	IdentifierDeclStatement	const byte * TableDirectory ;	689:4:23209:23235	8183599	2	True				
ANR	8183611	IdentifierDecl	* TableDirectory		8183599	0					
ANR	8183612	IdentifierDeclType	const byte *		8183599	0					
ANR	8183613	Identifier	TableDirectory		8183599	1					
ANR	8183614	IdentifierDeclStatement	uint i ;	690:4:23241:23247	8183599	3	True				
ANR	8183615	IdentifierDecl	i		8183599	0					
ANR	8183616	IdentifierDeclType	uint		8183599	0					
ANR	8183617	Identifier	i		8183599	1					
ANR	8183618	IdentifierDeclStatement	ulong table_dir_offset = 0 ;	691:4:23253:23279	8183599	4	True				
ANR	8183619	IdentifierDecl	table_dir_offset = 0		8183599	0					
ANR	8183620	IdentifierDeclType	ulong		8183599	0					
ANR	8183621	Identifier	table_dir_offset		8183599	1					
ANR	8183622	AssignmentExpression	table_dir_offset = 0		8183599	2		=			
ANR	8183623	Identifier	table_dir_offset		8183599	0					
ANR	8183624	PrimaryExpression	0		8183599	1					
ANR	8183625	ExpressionStatement	"access ( 0 , 12 , OffsetTable )"	693:4:23286:23312	8183599	5	True				
ANR	8183626	CallExpression	"access ( 0 , 12 , OffsetTable )"		8183599	0					
ANR	8183627	Callee	access		8183599	0					
ANR	8183628	Identifier	access		8183599	0					
ANR	8183629	ArgumentList	0		8183599	1					
ANR	8183630	Argument	0		8183599	0					
ANR	8183631	PrimaryExpression	0		8183599	0					
ANR	8183632	Argument	12		8183599	1					
ANR	8183633	PrimaryExpression	12		8183599	0					
ANR	8183634	Argument	OffsetTable		8183599	2					
ANR	8183635	Identifier	OffsetTable		8183599	0					
ANR	8183636	ExpressionStatement	"access ( table_dir_offset , 12 , OffsetTable )"	694:4:23318:23359	8183599	6	True				
ANR	8183637	CallExpression	"access ( table_dir_offset , 12 , OffsetTable )"		8183599	0					
ANR	8183638	Callee	access		8183599	0					
ANR	8183639	Identifier	access		8183599	0					
ANR	8183640	ArgumentList	table_dir_offset		8183599	1					
ANR	8183641	Argument	table_dir_offset		8183599	0					
ANR	8183642	Identifier	table_dir_offset		8183599	0					
ANR	8183643	Argument	12		8183599	1					
ANR	8183644	PrimaryExpression	12		8183599	0					
ANR	8183645	Argument	OffsetTable		8183599	2					
ANR	8183646	Identifier	OffsetTable		8183599	0					
ANR	8183647	ExpressionStatement	numTables = pl_get_uint16 ( OffsetTable + 4 )	695:4:23365:23407	8183599	7	True				
ANR	8183648	AssignmentExpression	numTables = pl_get_uint16 ( OffsetTable + 4 )		8183599	0		=			
ANR	8183649	Identifier	numTables		8183599	0					
ANR	8183650	CallExpression	pl_get_uint16 ( OffsetTable + 4 )		8183599	1					
ANR	8183651	Callee	pl_get_uint16		8183599	0					
ANR	8183652	Identifier	pl_get_uint16		8183599	0					
ANR	8183653	ArgumentList	OffsetTable + 4		8183599	1					
ANR	8183654	Argument	OffsetTable + 4		8183599	0					
ANR	8183655	AdditiveExpression	OffsetTable + 4		8183599	0		+			
ANR	8183656	Identifier	OffsetTable		8183599	0					
ANR	8183657	PrimaryExpression	4		8183599	1					
ANR	8183658	ExpressionStatement	"access ( table_dir_offset + 12 , numTables * 16 , TableDirectory )"	696:4:23413:23474	8183599	8	True				
ANR	8183659	CallExpression	"access ( table_dir_offset + 12 , numTables * 16 , TableDirectory )"		8183599	0					
ANR	8183660	Callee	access		8183599	0					
ANR	8183661	Identifier	access		8183599	0					
ANR	8183662	ArgumentList	table_dir_offset + 12		8183599	1					
ANR	8183663	Argument	table_dir_offset + 12		8183599	0					
ANR	8183664	AdditiveExpression	table_dir_offset + 12		8183599	0		+			
ANR	8183665	Identifier	table_dir_offset		8183599	0					
ANR	8183666	PrimaryExpression	12		8183599	1					
ANR	8183667	Argument	numTables * 16		8183599	1					
ANR	8183668	MultiplicativeExpression	numTables * 16		8183599	0		*			
ANR	8183669	Identifier	numTables		8183599	0					
ANR	8183670	PrimaryExpression	16		8183599	1					
ANR	8183671	Argument	TableDirectory		8183599	2					
ANR	8183672	Identifier	TableDirectory		8183599	0					
ANR	8183673	ForStatement	for ( i = 0 ; i < numTables ; ++ i )		8183599	9					
ANR	8183674	ForInit	i = 0 ;	697:9:23485:23490	8183599	0	True				
ANR	8183675	AssignmentExpression	i = 0		8183599	0		=			
ANR	8183676	Identifier	i		8183599	0					
ANR	8183677	PrimaryExpression	0		8183599	1					
ANR	8183678	Condition	i < numTables	697:16:23492:23504	8183599	1	True				
ANR	8183679	RelationalExpression	i < numTables		8183599	0		<			
ANR	8183680	Identifier	i		8183599	0					
ANR	8183681	Identifier	numTables		8183599	1					
ANR	8183682	UnaryExpression	++ i	697:31:23507:23509	8183599	2	True				
ANR	8183683	IncDec	++		8183599	0					
ANR	8183684	Identifier	i		8183599	1					
ANR	8183685	CompoundStatement		13:8:367:408	8183599	3					
ANR	8183686	IdentifierDeclStatement	const byte * tab = TableDirectory + i * 16 ;	698:8:23522:23563	8183599	0	True				
ANR	8183687	IdentifierDecl	* tab = TableDirectory + i * 16		8183599	0					
ANR	8183688	IdentifierDeclType	const byte *		8183599	0					
ANR	8183689	Identifier	tab		8183599	1					
ANR	8183690	AssignmentExpression	* tab = TableDirectory + i * 16		8183599	2		=			
ANR	8183691	Identifier	tab		8183599	0					
ANR	8183692	AdditiveExpression	TableDirectory + i * 16		8183599	1		+			
ANR	8183693	Identifier	TableDirectory		8183599	0					
ANR	8183694	MultiplicativeExpression	i * 16		8183599	1		*			
ANR	8183695	Identifier	i		8183599	0					
ANR	8183696	PrimaryExpression	16		8183599	1					
ANR	8183697	IfStatement	"if ( ! memcmp ( tab , tname , 4 ) )"		8183599	1					
ANR	8183698	Condition	"! memcmp ( tab , tname , 4 )"	700:12:23578:23599	8183599	0	True				
ANR	8183699	UnaryOperationExpression	"! memcmp ( tab , tname , 4 )"		8183599	0					
ANR	8183700	UnaryOperator	!		8183599	0					
ANR	8183701	CallExpression	"memcmp ( tab , tname , 4 )"		8183599	1					
ANR	8183702	Callee	memcmp		8183599	0					
ANR	8183703	Identifier	memcmp		8183599	0					
ANR	8183704	ArgumentList	tab		8183599	1					
ANR	8183705	Argument	tab		8183599	0					
ANR	8183706	Identifier	tab		8183599	0					
ANR	8183707	Argument	tname		8183599	1					
ANR	8183708	Identifier	tname		8183599	0					
ANR	8183709	Argument	4		8183599	2					
ANR	8183710	PrimaryExpression	4		8183599	0					
ANR	8183711	CompoundStatement		15:36:447:447	8183599	1					
ANR	8183712	IfStatement	if ( plen )		8183599	0					
ANR	8183713	Condition	plen	701:16:23620:23623	8183599	0	True				
ANR	8183714	Identifier	plen		8183599	0					
ANR	8183715	ExpressionStatement	* plen = pl_get_uint32 ( tab + 12 )	702:16:23642:23673	8183599	1	True				
ANR	8183716	AssignmentExpression	* plen = pl_get_uint32 ( tab + 12 )		8183599	0		=			
ANR	8183717	UnaryOperationExpression	* plen		8183599	0					
ANR	8183718	UnaryOperator	*		8183599	0					
ANR	8183719	Identifier	plen		8183599	1					
ANR	8183720	CallExpression	pl_get_uint32 ( tab + 12 )		8183599	1					
ANR	8183721	Callee	pl_get_uint32		8183599	0					
ANR	8183722	Identifier	pl_get_uint32		8183599	0					
ANR	8183723	ArgumentList	tab + 12		8183599	1					
ANR	8183724	Argument	tab + 12		8183599	0					
ANR	8183725	AdditiveExpression	tab + 12		8183599	0		+			
ANR	8183726	Identifier	tab		8183599	0					
ANR	8183727	PrimaryExpression	12		8183599	1					
ANR	8183728	ReturnStatement	return pl_get_uint32 ( tab + 8 ) ;	703:12:23687:23716	8183599	1	True				
ANR	8183729	CallExpression	pl_get_uint32 ( tab + 8 )		8183599	0					
ANR	8183730	Callee	pl_get_uint32		8183599	0					
ANR	8183731	Identifier	pl_get_uint32		8183599	0					
ANR	8183732	ArgumentList	tab + 8		8183599	1					
ANR	8183733	Argument	tab + 8		8183599	0					
ANR	8183734	AdditiveExpression	tab + 8		8183599	0		+			
ANR	8183735	Identifier	tab		8183599	0					
ANR	8183736	PrimaryExpression	8		8183599	1					
ANR	8183737	ReturnStatement	return 0 ;	706:4:23738:23746	8183599	10	True				
ANR	8183738	PrimaryExpression	0		8183599	0					
ANR	8183739	ReturnType	ulong		8183599	1					
ANR	8183740	Identifier	tt_find_table		8183599	2					
ANR	8183741	ParameterList	"gs_font_type42 * pfont , const char * tname , uint * plen"		8183599	3					
ANR	8183742	Parameter	gs_font_type42 * pfont	685:14:23098:23119	8183599	0	True				
ANR	8183743	ParameterType	gs_font_type42 *		8183599	0					
ANR	8183744	Identifier	pfont		8183599	1					
ANR	8183745	Parameter	const char * tname	685:38:23122:23138	8183599	1	True				
ANR	8183746	ParameterType	const char *		8183599	0					
ANR	8183747	Identifier	tname		8183599	1					
ANR	8183748	Parameter	uint * plen	685:57:23141:23151	8183599	2	True				
ANR	8183749	ParameterType	uint *		8183599	0					
ANR	8183750	Identifier	plen		8183599	1					
ANR	8183751	CFGEntryNode	ENTRY		8183599		True				
ANR	8183752	CFGExitNode	EXIT		8183599		True				
ANR	8183753	Symbol	pl_get_uint16		8183599						
ANR	8183754	Symbol	pfont		8183599						
ANR	8183755	Symbol	tname		8183599						
ANR	8183756	Symbol	i		8183599						
ANR	8183757	Symbol	TableDirectory		8183599						
ANR	8183758	Symbol	pl_get_uint32		8183599						
ANR	8183759	Symbol	OffsetTable		8183599						
ANR	8183760	Symbol	plen		8183599						
ANR	8183761	Symbol	memcmp		8183599						
ANR	8183762	Symbol	tab		8183599						
ANR	8183763	Symbol	* plen		8183599						
ANR	8183764	Symbol	table_dir_offset		8183599						
ANR	8183765	Symbol	numTables		8183599						
ANR	8183766	DeclStmt									
ANR	8183767	Decl							struct gs_gstate_s	struct gs_gstate_s	gs_gstate
ANR	8183768	DeclStmt									
ANR	8183769	Decl							struct gx_path_s	struct gx_path_s	gx_path
ANR	8183770	Function	pl_cmap_lookup	726:0:24227:27637							
ANR	8183771	FunctionDef	"pl_cmap_lookup (const uint key , const byte * table , uint * pvalue)"		8183770	0					
ANR	8183772	CompoundStatement		728:0:24304:27637	8183770	0					
ANR	8183773	SwitchStatement	switch ( pl_get_uint16 ( table ) )		8183770	0					
ANR	8183774	Condition	pl_get_uint16 ( table )	729:12:24392:24411	8183770	0	True				
ANR	8183775	CallExpression	pl_get_uint16 ( table )		8183770	0					
ANR	8183776	Callee	pl_get_uint16		8183770	0					
ANR	8183777	Identifier	pl_get_uint16		8183770	0					
ANR	8183778	ArgumentList	table		8183770	1					
ANR	8183779	Argument	table		8183770	0					
ANR	8183780	Identifier	table		8183770	0					
ANR	8183781	CompoundStatement		2:34:109:109	8183770	1					
ANR	8183782	Label	case 0 :	730:8:24424:24430	8183770	0	True				
ANR	8183783	CompoundStatement		4:12:139:139	8183770	1					
ANR	8183784	ExpressionStatement	* pvalue = table [ key + 6 ]	732:16:24517:24541	8183770	0	True				
ANR	8183785	AssignmentExpression	* pvalue = table [ key + 6 ]		8183770	0		=			
ANR	8183786	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8183787	UnaryOperator	*		8183770	0					
ANR	8183788	Identifier	pvalue		8183770	1					
ANR	8183789	ArrayIndexing	table [ key + 6 ]		8183770	1					
ANR	8183790	Identifier	table		8183770	0					
ANR	8183791	AdditiveExpression	key + 6		8183770	1		+			
ANR	8183792	Identifier	key		8183770	0					
ANR	8183793	PrimaryExpression	6		8183770	1					
ANR	8183794	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	733:16:24559:24604	8183770	1	True				
ANR	8183795	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8183770	0					
ANR	8183796	Callee	if_debug2		8183770	0					
ANR	8183797	Identifier	if_debug2		8183770	0					
ANR	8183798	ArgumentList	'J'		8183770	1					
ANR	8183799	Argument	'J'		8183770	0					
ANR	8183800	PrimaryExpression	'J'		8183770	0					
ANR	8183801	Argument	"""[J]%u => %u\\n"""		8183770	1					
ANR	8183802	PrimaryExpression	"""[J]%u => %u\\n"""		8183770	0					
ANR	8183803	Argument	key		8183770	2					
ANR	8183804	Identifier	key		8183770	0					
ANR	8183805	Argument	* pvalue		8183770	3					
ANR	8183806	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8183807	UnaryOperator	*		8183770	0					
ANR	8183808	Identifier	pvalue		8183770	1					
ANR	8183809	BreakStatement	break ;	734:16:24622:24627	8183770	2	True				
ANR	8183810	Label	case 4 :	736:8:24651:24657	8183770	2	True				
ANR	8183811	CompoundStatement		17:16:836:843	8183770	3					
ANR	8183812	IdentifierDeclStatement	uint segCount2 = pl_get_uint16 ( table + 6 ) ;	738:16:24762:24803	8183770	0	True				
ANR	8183813	IdentifierDecl	segCount2 = pl_get_uint16 ( table + 6 )		8183770	0					
ANR	8183814	IdentifierDeclType	uint		8183770	0					
ANR	8183815	Identifier	segCount2		8183770	1					
ANR	8183816	AssignmentExpression	segCount2 = pl_get_uint16 ( table + 6 )		8183770	2		=			
ANR	8183817	Identifier	segCount2		8183770	0					
ANR	8183818	CallExpression	pl_get_uint16 ( table + 6 )		8183770	1					
ANR	8183819	Callee	pl_get_uint16		8183770	0					
ANR	8183820	Identifier	pl_get_uint16		8183770	0					
ANR	8183821	ArgumentList	table + 6		8183770	1					
ANR	8183822	Argument	table + 6		8183770	0					
ANR	8183823	AdditiveExpression	table + 6		8183770	0		+			
ANR	8183824	Identifier	table		8183770	0					
ANR	8183825	PrimaryExpression	6		8183770	1					
ANR	8183826	IdentifierDeclStatement	const byte * endCount = table + 14 ;	739:16:24821:24854	8183770	1	True				
ANR	8183827	IdentifierDecl	* endCount = table + 14		8183770	0					
ANR	8183828	IdentifierDeclType	const byte *		8183770	0					
ANR	8183829	Identifier	endCount		8183770	1					
ANR	8183830	AssignmentExpression	* endCount = table + 14		8183770	2		=			
ANR	8183831	Identifier	endCount		8183770	0					
ANR	8183832	AdditiveExpression	table + 14		8183770	1		+			
ANR	8183833	Identifier	table		8183770	0					
ANR	8183834	PrimaryExpression	14		8183770	1					
ANR	8183835	IdentifierDeclStatement	const byte * startCount = endCount + segCount2 + 2 ;	740:16:24872:24921	8183770	2	True				
ANR	8183836	IdentifierDecl	* startCount = endCount + segCount2 + 2		8183770	0					
ANR	8183837	IdentifierDeclType	const byte *		8183770	0					
ANR	8183838	Identifier	startCount		8183770	1					
ANR	8183839	AssignmentExpression	* startCount = endCount + segCount2 + 2		8183770	2		=			
ANR	8183840	Identifier	startCount		8183770	0					
ANR	8183841	AdditiveExpression	endCount + segCount2 + 2		8183770	1		+			
ANR	8183842	Identifier	endCount		8183770	0					
ANR	8183843	AdditiveExpression	segCount2 + 2		8183770	1		+			
ANR	8183844	Identifier	segCount2		8183770	0					
ANR	8183845	PrimaryExpression	2		8183770	1					
ANR	8183846	IdentifierDeclStatement	const byte * idDelta = startCount + segCount2 ;	741:16:24939:24983	8183770	3	True				
ANR	8183847	IdentifierDecl	* idDelta = startCount + segCount2		8183770	0					
ANR	8183848	IdentifierDeclType	const byte *		8183770	0					
ANR	8183849	Identifier	idDelta		8183770	1					
ANR	8183850	AssignmentExpression	* idDelta = startCount + segCount2		8183770	2		=			
ANR	8183851	Identifier	idDelta		8183770	0					
ANR	8183852	AdditiveExpression	startCount + segCount2		8183770	1		+			
ANR	8183853	Identifier	startCount		8183770	0					
ANR	8183854	Identifier	segCount2		8183770	1					
ANR	8183855	IdentifierDeclStatement	const byte * idRangeOffset = idDelta + segCount2 ;	742:16:25001:25048	8183770	4	True				
ANR	8183856	IdentifierDecl	* idRangeOffset = idDelta + segCount2		8183770	0					
ANR	8183857	IdentifierDeclType	const byte *		8183770	0					
ANR	8183858	Identifier	idRangeOffset		8183770	1					
ANR	8183859	AssignmentExpression	* idRangeOffset = idDelta + segCount2		8183770	2		=			
ANR	8183860	Identifier	idRangeOffset		8183770	0					
ANR	8183861	AdditiveExpression	idDelta + segCount2		8183770	1		+			
ANR	8183862	Identifier	idDelta		8183770	0					
ANR	8183863	Identifier	segCount2		8183770	1					
ANR	8183864	IdentifierDeclStatement	uint i2 ;	744:16:25141:25148	8183770	5	True				
ANR	8183865	IdentifierDecl	i2		8183770	0					
ANR	8183866	IdentifierDeclType	uint		8183770	0					
ANR	8183867	Identifier	i2		8183770	1					
ANR	8183868	ForStatement	for ( i2 = 0 ; i2 < segCount2 - 3 ; i2 += 2 )		8183770	6					
ANR	8183869	ForInit	i2 = 0 ;	746:21:25172:25178	8183770	0	True				
ANR	8183870	AssignmentExpression	i2 = 0		8183770	0		=			
ANR	8183871	Identifier	i2		8183770	0					
ANR	8183872	PrimaryExpression	0		8183770	1					
ANR	8183873	Condition	i2 < segCount2 - 3	746:29:25180:25197	8183770	1	True				
ANR	8183874	RelationalExpression	i2 < segCount2 - 3		8183770	0		<			
ANR	8183875	Identifier	i2		8183770	0					
ANR	8183876	AdditiveExpression	segCount2 - 3		8183770	1		-			
ANR	8183877	Identifier	segCount2		8183770	0					
ANR	8183878	PrimaryExpression	3		8183770	1					
ANR	8183879	AssignmentExpression	i2 += 2	746:49:25200:25206	8183770	2	True	+=			
ANR	8183880	Identifier	i2		8183770	0					
ANR	8183881	PrimaryExpression	2		8183770	1					
ANR	8183882	CompoundStatement		22:20:1028:1038	8183770	3					
ANR	8183883	IdentifierDeclStatement	"int delta , roff ;"	747:20:25231:25246	8183770	0	True				
ANR	8183884	IdentifierDecl	delta		8183770	0					
ANR	8183885	IdentifierDeclType	int		8183770	0					
ANR	8183886	Identifier	delta		8183770	1					
ANR	8183887	IdentifierDecl	roff		8183770	1					
ANR	8183888	IdentifierDeclType	int		8183770	0					
ANR	8183889	Identifier	roff		8183770	1					
ANR	8183890	IdentifierDeclStatement	uint start = pl_get_uint16 ( startCount + i2 ) ;	748:20:25268:25311	8183770	1	True				
ANR	8183891	IdentifierDecl	start = pl_get_uint16 ( startCount + i2 )		8183770	0					
ANR	8183892	IdentifierDeclType	uint		8183770	0					
ANR	8183893	Identifier	start		8183770	1					
ANR	8183894	AssignmentExpression	start = pl_get_uint16 ( startCount + i2 )		8183770	2		=			
ANR	8183895	Identifier	start		8183770	0					
ANR	8183896	CallExpression	pl_get_uint16 ( startCount + i2 )		8183770	1					
ANR	8183897	Callee	pl_get_uint16		8183770	0					
ANR	8183898	Identifier	pl_get_uint16		8183770	0					
ANR	8183899	ArgumentList	startCount + i2		8183770	1					
ANR	8183900	Argument	startCount + i2		8183770	0					
ANR	8183901	AdditiveExpression	startCount + i2		8183770	0		+			
ANR	8183902	Identifier	startCount		8183770	0					
ANR	8183903	Identifier	i2		8183770	1					
ANR	8183904	IdentifierDeclStatement	uint glyph ;	749:20:25333:25343	8183770	2	True				
ANR	8183905	IdentifierDecl	glyph		8183770	0					
ANR	8183906	IdentifierDeclType	uint		8183770	0					
ANR	8183907	Identifier	glyph		8183770	1					
ANR	8183908	ExpressionStatement	"if_debug4 ( 'J' , ""[J]start=%u end=%u delta=%d roff=%d\\n"" , start , pl_get_uint16 ( endCount + i2 ) , pl_get_int16 ( idDelta + i2 ) , pl_get_int16 ( idRangeOffset + i2 ) )"	751:20:25366:25610	8183770	3	True				
ANR	8183909	CallExpression	"if_debug4 ( 'J' , ""[J]start=%u end=%u delta=%d roff=%d\\n"" , start , pl_get_uint16 ( endCount + i2 ) , pl_get_int16 ( idDelta + i2 ) , pl_get_int16 ( idRangeOffset + i2 ) )"		8183770	0					
ANR	8183910	Callee	if_debug4		8183770	0					
ANR	8183911	Identifier	if_debug4		8183770	0					
ANR	8183912	ArgumentList	'J'		8183770	1					
ANR	8183913	Argument	'J'		8183770	0					
ANR	8183914	PrimaryExpression	'J'		8183770	0					
ANR	8183915	Argument	"""[J]start=%u end=%u delta=%d roff=%d\\n"""		8183770	1					
ANR	8183916	PrimaryExpression	"""[J]start=%u end=%u delta=%d roff=%d\\n"""		8183770	0					
ANR	8183917	Argument	start		8183770	2					
ANR	8183918	Identifier	start		8183770	0					
ANR	8183919	Argument	pl_get_uint16 ( endCount + i2 )		8183770	3					
ANR	8183920	CallExpression	pl_get_uint16 ( endCount + i2 )		8183770	0					
ANR	8183921	Callee	pl_get_uint16		8183770	0					
ANR	8183922	Identifier	pl_get_uint16		8183770	0					
ANR	8183923	ArgumentList	endCount + i2		8183770	1					
ANR	8183924	Argument	endCount + i2		8183770	0					
ANR	8183925	AdditiveExpression	endCount + i2		8183770	0		+			
ANR	8183926	Identifier	endCount		8183770	0					
ANR	8183927	Identifier	i2		8183770	1					
ANR	8183928	Argument	pl_get_int16 ( idDelta + i2 )		8183770	4					
ANR	8183929	CallExpression	pl_get_int16 ( idDelta + i2 )		8183770	0					
ANR	8183930	Callee	pl_get_int16		8183770	0					
ANR	8183931	Identifier	pl_get_int16		8183770	0					
ANR	8183932	ArgumentList	idDelta + i2		8183770	1					
ANR	8183933	Argument	idDelta + i2		8183770	0					
ANR	8183934	AdditiveExpression	idDelta + i2		8183770	0		+			
ANR	8183935	Identifier	idDelta		8183770	0					
ANR	8183936	Identifier	i2		8183770	1					
ANR	8183937	Argument	pl_get_int16 ( idRangeOffset + i2 )		8183770	5					
ANR	8183938	CallExpression	pl_get_int16 ( idRangeOffset + i2 )		8183770	0					
ANR	8183939	Callee	pl_get_int16		8183770	0					
ANR	8183940	Identifier	pl_get_int16		8183770	0					
ANR	8183941	ArgumentList	idRangeOffset + i2		8183770	1					
ANR	8183942	Argument	idRangeOffset + i2		8183770	0					
ANR	8183943	AdditiveExpression	idRangeOffset + i2		8183770	0		+			
ANR	8183944	Identifier	idRangeOffset		8183770	0					
ANR	8183945	Identifier	i2		8183770	1					
ANR	8183946	IfStatement	if ( key < start )		8183770	4					
ANR	8183947	Condition	key < start	755:24:25636:25646	8183770	0	True				
ANR	8183948	RelationalExpression	key < start		8183770	0		<			
ANR	8183949	Identifier	key		8183770	0					
ANR	8183950	Identifier	start		8183770	1					
ANR	8183951	CompoundStatement		28:37:1344:1344	8183770	1					
ANR	8183952	ExpressionStatement	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"	756:24:25675:25718	8183770	0	True				
ANR	8183953	CallExpression	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"		8183770	0					
ANR	8183954	Callee	if_debug1		8183770	0					
ANR	8183955	Identifier	if_debug1		8183770	0					
ANR	8183956	ArgumentList	'J'		8183770	1					
ANR	8183957	Argument	'J'		8183770	0					
ANR	8183958	PrimaryExpression	'J'		8183770	0					
ANR	8183959	Argument	"""[J]%u out of range\\n"""		8183770	1					
ANR	8183960	PrimaryExpression	"""[J]%u out of range\\n"""		8183770	0					
ANR	8183961	Argument	key		8183770	2					
ANR	8183962	Identifier	key		8183770	0					
ANR	8183963	ExpressionStatement	return_error ( gs_error_undefined )	757:24:25744:25776	8183770	1	True				
ANR	8183964	CallExpression	return_error ( gs_error_undefined )		8183770	0					
ANR	8183965	Callee	return_error		8183770	0					
ANR	8183966	Identifier	return_error		8183770	0					
ANR	8183967	ArgumentList	gs_error_undefined		8183770	1					
ANR	8183968	Argument	gs_error_undefined		8183770	0					
ANR	8183969	Identifier	gs_error_undefined		8183770	0					
ANR	8183970	IfStatement	if ( key > pl_get_uint16 ( endCount + i2 ) )		8183770	5					
ANR	8183971	Condition	key > pl_get_uint16 ( endCount + i2 )	759:24:25824:25857	8183770	0	True				
ANR	8183972	RelationalExpression	key > pl_get_uint16 ( endCount + i2 )		8183770	0		>			
ANR	8183973	Identifier	key		8183770	0					
ANR	8183974	CallExpression	pl_get_uint16 ( endCount + i2 )		8183770	1					
ANR	8183975	Callee	pl_get_uint16		8183770	0					
ANR	8183976	Identifier	pl_get_uint16		8183770	0					
ANR	8183977	ArgumentList	endCount + i2		8183770	1					
ANR	8183978	Argument	endCount + i2		8183770	0					
ANR	8183979	AdditiveExpression	endCount + i2		8183770	0		+			
ANR	8183980	Identifier	endCount		8183770	0					
ANR	8183981	Identifier	i2		8183770	1					
ANR	8183982	ContinueStatement	continue ;	760:24:25884:25892	8183770	1	True				
ANR	8183983	ExpressionStatement	delta = pl_get_int16 ( idDelta + i2 )	761:20:25914:25948	8183770	6	True				
ANR	8183984	AssignmentExpression	delta = pl_get_int16 ( idDelta + i2 )		8183770	0		=			
ANR	8183985	Identifier	delta		8183770	0					
ANR	8183986	CallExpression	pl_get_int16 ( idDelta + i2 )		8183770	1					
ANR	8183987	Callee	pl_get_int16		8183770	0					
ANR	8183988	Identifier	pl_get_int16		8183770	0					
ANR	8183989	ArgumentList	idDelta + i2		8183770	1					
ANR	8183990	Argument	idDelta + i2		8183770	0					
ANR	8183991	AdditiveExpression	idDelta + i2		8183770	0		+			
ANR	8183992	Identifier	idDelta		8183770	0					
ANR	8183993	Identifier	i2		8183770	1					
ANR	8183994	ExpressionStatement	roff = pl_get_int16 ( idRangeOffset + i2 )	762:20:25970:26009	8183770	7	True				
ANR	8183995	AssignmentExpression	roff = pl_get_int16 ( idRangeOffset + i2 )		8183770	0		=			
ANR	8183996	Identifier	roff		8183770	0					
ANR	8183997	CallExpression	pl_get_int16 ( idRangeOffset + i2 )		8183770	1					
ANR	8183998	Callee	pl_get_int16		8183770	0					
ANR	8183999	Identifier	pl_get_int16		8183770	0					
ANR	8184000	ArgumentList	idRangeOffset + i2		8183770	1					
ANR	8184001	Argument	idRangeOffset + i2		8183770	0					
ANR	8184002	AdditiveExpression	idRangeOffset + i2		8183770	0		+			
ANR	8184003	Identifier	idRangeOffset		8183770	0					
ANR	8184004	Identifier	i2		8183770	1					
ANR	8184005	IfStatement	if ( roff == 0 )		8183770	8					
ANR	8184006	Condition	roff == 0	763:24:26035:26043	8183770	0	True				
ANR	8184007	EqualityExpression	roff == 0		8183770	0		==			
ANR	8184008	Identifier	roff		8183770	0					
ANR	8184009	PrimaryExpression	0		8183770	1					
ANR	8184010	CompoundStatement		36:35:1741:1741	8183770	1					
ANR	8184011	ExpressionStatement	* pvalue = ( key + delta ) & 0xffff	764:24:26072:26104	8183770	0	True				
ANR	8184012	AssignmentExpression	* pvalue = ( key + delta ) & 0xffff		8183770	0		=			
ANR	8184013	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8184014	UnaryOperator	*		8183770	0					
ANR	8184015	Identifier	pvalue		8183770	1					
ANR	8184016	BitAndExpression	( key + delta ) & 0xffff		8183770	1		&			
ANR	8184017	AdditiveExpression	key + delta		8183770	0		+			
ANR	8184018	Identifier	key		8183770	0					
ANR	8184019	Identifier	delta		8183770	1					
ANR	8184020	PrimaryExpression	0xffff		8183770	1					
ANR	8184021	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	765:24:26152:26197	8183770	1	True				
ANR	8184022	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8183770	0					
ANR	8184023	Callee	if_debug2		8183770	0					
ANR	8184024	Identifier	if_debug2		8183770	0					
ANR	8184025	ArgumentList	'J'		8183770	1					
ANR	8184026	Argument	'J'		8183770	0					
ANR	8184027	PrimaryExpression	'J'		8183770	0					
ANR	8184028	Argument	"""[J]%u => %u\\n"""		8183770	1					
ANR	8184029	PrimaryExpression	"""[J]%u => %u\\n"""		8183770	0					
ANR	8184030	Argument	key		8183770	2					
ANR	8184031	Identifier	key		8183770	0					
ANR	8184032	Argument	* pvalue		8183770	3					
ANR	8184033	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8184034	UnaryOperator	*		8183770	0					
ANR	8184035	Identifier	pvalue		8183770	1					
ANR	8184036	ReturnStatement	return 0 ;	766:24:26223:26231	8183770	2	True				
ANR	8184037	PrimaryExpression	0		8183770	0					
ANR	8184038	ExpressionStatement	glyph = pl_get_uint16 ( idRangeOffset + i2 + roff + ( ( key - start ) << 1 ) )	768:20:26275:26388	8183770	9	True				
ANR	8184039	AssignmentExpression	glyph = pl_get_uint16 ( idRangeOffset + i2 + roff + ( ( key - start ) << 1 ) )		8183770	0		=			
ANR	8184040	Identifier	glyph		8183770	0					
ANR	8184041	CallExpression	pl_get_uint16 ( idRangeOffset + i2 + roff + ( ( key - start ) << 1 ) )		8183770	1					
ANR	8184042	Callee	pl_get_uint16		8183770	0					
ANR	8184043	Identifier	pl_get_uint16		8183770	0					
ANR	8184044	ArgumentList	idRangeOffset + i2 + roff + ( ( key - start ) << 1 )		8183770	1					
ANR	8184045	Argument	idRangeOffset + i2 + roff + ( ( key - start ) << 1 )		8183770	0					
ANR	8184046	AdditiveExpression	idRangeOffset + i2 + roff + ( ( key - start ) << 1 )		8183770	0		+			
ANR	8184047	Identifier	idRangeOffset		8183770	0					
ANR	8184048	AdditiveExpression	i2 + roff + ( ( key - start ) << 1 )		8183770	1		+			
ANR	8184049	Identifier	i2		8183770	0					
ANR	8184050	AdditiveExpression	roff + ( ( key - start ) << 1 )		8183770	1		+			
ANR	8184051	Identifier	roff		8183770	0					
ANR	8184052	ShiftExpression	( key - start ) << 1		8183770	1		<<			
ANR	8184053	AdditiveExpression	key - start		8183770	0		-			
ANR	8184054	Identifier	key		8183770	0					
ANR	8184055	Identifier	start		8183770	1					
ANR	8184056	PrimaryExpression	1		8183770	1					
ANR	8184057	ExpressionStatement	* pvalue = ( glyph == 0 ? 0 : glyph + delta )	770:20:26410:26452	8183770	10	True				
ANR	8184058	AssignmentExpression	* pvalue = ( glyph == 0 ? 0 : glyph + delta )		8183770	0		=			
ANR	8184059	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8184060	UnaryOperator	*		8183770	0					
ANR	8184061	Identifier	pvalue		8183770	1					
ANR	8184062	ConditionalExpression	glyph == 0 ? 0 : glyph + delta		8183770	1					
ANR	8184063	Condition	glyph == 0		8183770	0					
ANR	8184064	EqualityExpression	glyph == 0		8183770	0		==			
ANR	8184065	Identifier	glyph		8183770	0					
ANR	8184066	PrimaryExpression	0		8183770	1					
ANR	8184067	PrimaryExpression	0		8183770	1					
ANR	8184068	AdditiveExpression	glyph + delta		8183770	2		+			
ANR	8184069	Identifier	glyph		8183770	0					
ANR	8184070	Identifier	delta		8183770	1					
ANR	8184071	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	771:20:26474:26519	8183770	11	True				
ANR	8184072	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8183770	0					
ANR	8184073	Callee	if_debug2		8183770	0					
ANR	8184074	Identifier	if_debug2		8183770	0					
ANR	8184075	ArgumentList	'J'		8183770	1					
ANR	8184076	Argument	'J'		8183770	0					
ANR	8184077	PrimaryExpression	'J'		8183770	0					
ANR	8184078	Argument	"""[J]%u => %u\\n"""		8183770	1					
ANR	8184079	PrimaryExpression	"""[J]%u => %u\\n"""		8183770	0					
ANR	8184080	Argument	key		8183770	2					
ANR	8184081	Identifier	key		8183770	0					
ANR	8184082	Argument	* pvalue		8183770	3					
ANR	8184083	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8184084	UnaryOperator	*		8183770	0					
ANR	8184085	Identifier	pvalue		8183770	1					
ANR	8184086	ReturnStatement	return 0 ;	772:20:26541:26549	8183770	12	True				
ANR	8184087	PrimaryExpression	0		8183770	0					
ANR	8184088	ExpressionStatement	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"	779:16:26836:26879	8183770	7	True				
ANR	8184089	CallExpression	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"		8183770	0					
ANR	8184090	Callee	if_debug1		8183770	0					
ANR	8184091	Identifier	if_debug1		8183770	0					
ANR	8184092	ArgumentList	'J'		8183770	1					
ANR	8184093	Argument	'J'		8183770	0					
ANR	8184094	PrimaryExpression	'J'		8183770	0					
ANR	8184095	Argument	"""[J]%u out of range\\n"""		8183770	1					
ANR	8184096	PrimaryExpression	"""[J]%u out of range\\n"""		8183770	0					
ANR	8184097	Argument	key		8183770	2					
ANR	8184098	Identifier	key		8183770	0					
ANR	8184099	ExpressionStatement	return_error ( gs_error_undefined )	780:16:26897:26929	8183770	8	True				
ANR	8184100	CallExpression	return_error ( gs_error_undefined )		8183770	0					
ANR	8184101	Callee	return_error		8183770	0					
ANR	8184102	Identifier	return_error		8183770	0					
ANR	8184103	ArgumentList	gs_error_undefined		8183770	1					
ANR	8184104	Argument	gs_error_undefined		8183770	0					
ANR	8184105	Identifier	gs_error_undefined		8183770	0					
ANR	8184106	Label	case 6 :	782:8:26953:26959	8183770	4	True				
ANR	8184107	CompoundStatement		58:16:2793:2835	8183770	5					
ANR	8184108	IdentifierDeclStatement	uint firstCode = pl_get_uint16 ( table + 6 ) ;	784:16:27039:27080	8183770	0	True				
ANR	8184109	IdentifierDecl	firstCode = pl_get_uint16 ( table + 6 )		8183770	0					
ANR	8184110	IdentifierDeclType	uint		8183770	0					
ANR	8184111	Identifier	firstCode		8183770	1					
ANR	8184112	AssignmentExpression	firstCode = pl_get_uint16 ( table + 6 )		8183770	2		=			
ANR	8184113	Identifier	firstCode		8183770	0					
ANR	8184114	CallExpression	pl_get_uint16 ( table + 6 )		8183770	1					
ANR	8184115	Callee	pl_get_uint16		8183770	0					
ANR	8184116	Identifier	pl_get_uint16		8183770	0					
ANR	8184117	ArgumentList	table + 6		8183770	1					
ANR	8184118	Argument	table + 6		8183770	0					
ANR	8184119	AdditiveExpression	table + 6		8183770	0		+			
ANR	8184120	Identifier	table		8183770	0					
ANR	8184121	PrimaryExpression	6		8183770	1					
ANR	8184122	IdentifierDeclStatement	uint entryCount = pl_get_uint16 ( table + 8 ) ;	785:16:27098:27140	8183770	1	True				
ANR	8184123	IdentifierDecl	entryCount = pl_get_uint16 ( table + 8 )		8183770	0					
ANR	8184124	IdentifierDeclType	uint		8183770	0					
ANR	8184125	Identifier	entryCount		8183770	1					
ANR	8184126	AssignmentExpression	entryCount = pl_get_uint16 ( table + 8 )		8183770	2		=			
ANR	8184127	Identifier	entryCount		8183770	0					
ANR	8184128	CallExpression	pl_get_uint16 ( table + 8 )		8183770	1					
ANR	8184129	Callee	pl_get_uint16		8183770	0					
ANR	8184130	Identifier	pl_get_uint16		8183770	0					
ANR	8184131	ArgumentList	table + 8		8183770	1					
ANR	8184132	Argument	table + 8		8183770	0					
ANR	8184133	AdditiveExpression	table + 8		8183770	0		+			
ANR	8184134	Identifier	table		8183770	0					
ANR	8184135	PrimaryExpression	8		8183770	1					
ANR	8184136	IfStatement	if ( key < firstCode || key >= firstCode + entryCount )		8183770	2					
ANR	8184137	Condition	key < firstCode || key >= firstCode + entryCount	787:20:27163:27210	8183770	0	True				
ANR	8184138	OrExpression	key < firstCode || key >= firstCode + entryCount		8183770	0		||			
ANR	8184139	RelationalExpression	key < firstCode		8183770	0		<			
ANR	8184140	Identifier	key		8183770	0					
ANR	8184141	Identifier	firstCode		8183770	1					
ANR	8184142	RelationalExpression	key >= firstCode + entryCount		8183770	1		>=			
ANR	8184143	Identifier	key		8183770	0					
ANR	8184144	AdditiveExpression	firstCode + entryCount		8183770	1		+			
ANR	8184145	Identifier	firstCode		8183770	0					
ANR	8184146	Identifier	entryCount		8183770	1					
ANR	8184147	CompoundStatement		60:70:2908:2908	8183770	1					
ANR	8184148	ExpressionStatement	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"	788:20:27235:27278	8183770	0	True				
ANR	8184149	CallExpression	"if_debug1 ( 'J' , ""[J]%u out of range\\n"" , key )"		8183770	0					
ANR	8184150	Callee	if_debug1		8183770	0					
ANR	8184151	Identifier	if_debug1		8183770	0					
ANR	8184152	ArgumentList	'J'		8183770	1					
ANR	8184153	Argument	'J'		8183770	0					
ANR	8184154	PrimaryExpression	'J'		8183770	0					
ANR	8184155	Argument	"""[J]%u out of range\\n"""		8183770	1					
ANR	8184156	PrimaryExpression	"""[J]%u out of range\\n"""		8183770	0					
ANR	8184157	Argument	key		8183770	2					
ANR	8184158	Identifier	key		8183770	0					
ANR	8184159	ExpressionStatement	return_error ( gs_error_undefined )	789:20:27300:27332	8183770	1	True				
ANR	8184160	CallExpression	return_error ( gs_error_undefined )		8183770	0					
ANR	8184161	Callee	return_error		8183770	0					
ANR	8184162	Identifier	return_error		8183770	0					
ANR	8184163	ArgumentList	gs_error_undefined		8183770	1					
ANR	8184164	Argument	gs_error_undefined		8183770	0					
ANR	8184165	Identifier	gs_error_undefined		8183770	0					
ANR	8184166	ExpressionStatement	* pvalue = pl_get_uint16 ( table + 10 + ( ( key - firstCode ) << 1 ) )	791:16:27368:27450	8183770	3	True				
ANR	8184167	AssignmentExpression	* pvalue = pl_get_uint16 ( table + 10 + ( ( key - firstCode ) << 1 ) )		8183770	0		=			
ANR	8184168	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8184169	UnaryOperator	*		8183770	0					
ANR	8184170	Identifier	pvalue		8183770	1					
ANR	8184171	CallExpression	pl_get_uint16 ( table + 10 + ( ( key - firstCode ) << 1 ) )		8183770	1					
ANR	8184172	Callee	pl_get_uint16		8183770	0					
ANR	8184173	Identifier	pl_get_uint16		8183770	0					
ANR	8184174	ArgumentList	table + 10 + ( ( key - firstCode ) << 1 )		8183770	1					
ANR	8184175	Argument	table + 10 + ( ( key - firstCode ) << 1 )		8183770	0					
ANR	8184176	AdditiveExpression	table + 10 + ( ( key - firstCode ) << 1 )		8183770	0		+			
ANR	8184177	Identifier	table		8183770	0					
ANR	8184178	AdditiveExpression	10 + ( ( key - firstCode ) << 1 )		8183770	1		+			
ANR	8184179	PrimaryExpression	10		8183770	0					
ANR	8184180	ShiftExpression	( key - firstCode ) << 1		8183770	1		<<			
ANR	8184181	AdditiveExpression	key - firstCode		8183770	0		-			
ANR	8184182	Identifier	key		8183770	0					
ANR	8184183	Identifier	firstCode		8183770	1					
ANR	8184184	PrimaryExpression	1		8183770	1					
ANR	8184185	ExpressionStatement	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"	793:16:27468:27513	8183770	4	True				
ANR	8184186	CallExpression	"if_debug2 ( 'J' , ""[J]%u => %u\\n"" , key , * pvalue )"		8183770	0					
ANR	8184187	Callee	if_debug2		8183770	0					
ANR	8184188	Identifier	if_debug2		8183770	0					
ANR	8184189	ArgumentList	'J'		8183770	1					
ANR	8184190	Argument	'J'		8183770	0					
ANR	8184191	PrimaryExpression	'J'		8183770	0					
ANR	8184192	Argument	"""[J]%u => %u\\n"""		8183770	1					
ANR	8184193	PrimaryExpression	"""[J]%u => %u\\n"""		8183770	0					
ANR	8184194	Argument	key		8183770	2					
ANR	8184195	Identifier	key		8183770	0					
ANR	8184196	Argument	* pvalue		8183770	3					
ANR	8184197	UnaryOperationExpression	* pvalue		8183770	0					
ANR	8184198	UnaryOperator	*		8183770	0					
ANR	8184199	Identifier	pvalue		8183770	1					
ANR	8184200	BreakStatement	break ;	794:16:27531:27536	8183770	5	True				
ANR	8184201	Label	default :	796:8:27560:27567	8183770	6	True				
ANR	8184202	Identifier	default		8183770	0					
ANR	8184203	ExpressionStatement	return_error ( gs_error_invalidfont )	797:12:27581:27615	8183770	7	True				
ANR	8184204	CallExpression	return_error ( gs_error_invalidfont )		8183770	0					
ANR	8184205	Callee	return_error		8183770	0					
ANR	8184206	Identifier	return_error		8183770	0					
ANR	8184207	ArgumentList	gs_error_invalidfont		8183770	1					
ANR	8184208	Argument	gs_error_invalidfont		8183770	0					
ANR	8184209	Identifier	gs_error_invalidfont		8183770	0					
ANR	8184210	ReturnStatement	return 0 ;	799:4:27627:27635	8183770	1	True				
ANR	8184211	PrimaryExpression	0		8183770	0					
ANR	8184212	ReturnType	static int		8183770	1					
ANR	8184213	Identifier	pl_cmap_lookup		8183770	2					
ANR	8184214	ParameterList	"const uint key , const byte * table , uint * pvalue"		8183770	3					
ANR	8184215	Parameter	const uint key	727:15:24253:24266	8183770	0	True				
ANR	8184216	ParameterType	const uint		8183770	0					
ANR	8184217	Identifier	key		8183770	1					
ANR	8184218	Parameter	const byte * table	727:31:24269:24286	8183770	1	True				
ANR	8184219	ParameterType	const byte *		8183770	0					
ANR	8184220	Identifier	table		8183770	1					
ANR	8184221	Parameter	uint * pvalue	727:51:24289:24301	8183770	2	True				
ANR	8184222	ParameterType	uint *		8183770	0					
ANR	8184223	Identifier	pvalue		8183770	1					
ANR	8184224	CFGEntryNode	ENTRY		8183770		True				
ANR	8184225	CFGExitNode	EXIT		8183770		True				
ANR	8184226	Symbol	pl_get_uint16		8183770						
ANR	8184227	Symbol	startCount		8183770						
ANR	8184228	Symbol	segCount2		8183770						
ANR	8184229	Symbol	delta		8183770						
ANR	8184230	Symbol	roff		8183770						
ANR	8184231	Symbol	start		8183770						
ANR	8184232	Symbol	gs_error_undefined		8183770						
ANR	8184233	Symbol	* key		8183770						
ANR	8184234	Symbol	* table		8183770						
ANR	8184235	Symbol	i2		8183770						
ANR	8184236	Symbol	pvalue		8183770						
ANR	8184237	Symbol	glyph		8183770						
ANR	8184238	Symbol	* pvalue		8183770						
ANR	8184239	Symbol	entryCount		8183770						
ANR	8184240	Symbol	pl_get_int16		8183770						
ANR	8184241	Symbol	endCount		8183770						
ANR	8184242	Symbol	firstCode		8183770						
ANR	8184243	Symbol	idRangeOffset		8183770						
ANR	8184244	Symbol	gs_error_invalidfont		8183770						
ANR	8184245	Symbol	idDelta		8183770						
ANR	8184246	Symbol	key		8183770						
ANR	8184247	Symbol	table		8183770						
ANR	8184248	Function	pl_tt_cmap_encode_char	804:0:27755:28924							
ANR	8184249	FunctionDef	"pl_tt_cmap_encode_char (gs_font_type42 * pfont , ulong cmap_offset , uint cmap_len , gs_char chr)"		8184248	0					
ANR	8184250	CompoundStatement		807:0:27888:28924	8184248	0					
ANR	8184251	IdentifierDeclStatement	const byte * cmap ;	808:4:27894:27910	8184248	0	True				
ANR	8184252	IdentifierDecl	* cmap		8184248	0					
ANR	8184253	IdentifierDeclType	const byte *		8184248	0					
ANR	8184254	Identifier	cmap		8184248	1					
ANR	8184255	IdentifierDeclStatement	const byte * cmap_sub ;	809:4:27916:27936	8184248	1	True				
ANR	8184256	IdentifierDecl	* cmap_sub		8184248	0					
ANR	8184257	IdentifierDeclType	const byte *		8184248	0					
ANR	8184258	Identifier	cmap_sub		8184248	1					
ANR	8184259	IdentifierDeclStatement	const byte * table ;	810:4:27942:27959	8184248	2	True				
ANR	8184260	IdentifierDecl	* table		8184248	0					
ANR	8184261	IdentifierDeclType	const byte *		8184248	0					
ANR	8184262	Identifier	table		8184248	1					
ANR	8184263	IdentifierDeclStatement	uint value ;	811:4:27965:27975	8184248	3	True				
ANR	8184264	IdentifierDecl	value		8184248	0					
ANR	8184265	IdentifierDeclType	uint		8184248	0					
ANR	8184266	Identifier	value		8184248	1					
ANR	8184267	IdentifierDeclStatement	int code ;	812:4:27981:27989	8184248	4	True				
ANR	8184268	IdentifierDecl	code		8184248	0					
ANR	8184269	IdentifierDeclType	int		8184248	0					
ANR	8184270	Identifier	code		8184248	1					
ANR	8184271	ExpressionStatement	"access ( cmap_offset , cmap_len , cmap )"	814:4:27996:28031	8184248	5	True				
ANR	8184272	CallExpression	"access ( cmap_offset , cmap_len , cmap )"		8184248	0					
ANR	8184273	Callee	access		8184248	0					
ANR	8184274	Identifier	access		8184248	0					
ANR	8184275	ArgumentList	cmap_offset		8184248	1					
ANR	8184276	Argument	cmap_offset		8184248	0					
ANR	8184277	Identifier	cmap_offset		8184248	0					
ANR	8184278	Argument	cmap_len		8184248	1					
ANR	8184279	Identifier	cmap_len		8184248	0					
ANR	8184280	Argument	cmap		8184248	2					
ANR	8184281	Identifier	cmap		8184248	0					
ANR	8184282	ExpressionStatement	cmap_sub = cmap + 4	818:4:28212:28231	8184248	6	True				
ANR	8184283	AssignmentExpression	cmap_sub = cmap + 4		8184248	0		=			
ANR	8184284	Identifier	cmap_sub		8184248	0					
ANR	8184285	AdditiveExpression	cmap + 4		8184248	1		+			
ANR	8184286	Identifier	cmap		8184248	0					
ANR	8184287	PrimaryExpression	4		8184248	1					
ANR	8184288	CompoundStatement		14:8:358:364	8184248	7					
ANR	8184289	IdentifierDeclStatement	uint i ;	820:8:28247:28253	8184248	0	True				
ANR	8184290	IdentifierDecl	i		8184248	0					
ANR	8184291	IdentifierDeclType	uint		8184248	0					
ANR	8184292	Identifier	i		8184248	1					
ANR	8184293	ForStatement	for ( i = 0 ; i < pl_get_uint16 ( cmap + 2 ) ; ++ i )		8184248	1					
ANR	8184294	ForInit	i = 0 ;	822:13:28269:28274	8184248	0	True				
ANR	8184295	AssignmentExpression	i = 0		8184248	0		=			
ANR	8184296	Identifier	i		8184248	0					
ANR	8184297	PrimaryExpression	0		8184248	1					
ANR	8184298	Condition	i < pl_get_uint16 ( cmap + 2 )	822:20:28276:28302	8184248	1	True				
ANR	8184299	RelationalExpression	i < pl_get_uint16 ( cmap + 2 )		8184248	0		<			
ANR	8184300	Identifier	i		8184248	0					
ANR	8184301	CallExpression	pl_get_uint16 ( cmap + 2 )		8184248	1					
ANR	8184302	Callee	pl_get_uint16		8184248	0					
ANR	8184303	Identifier	pl_get_uint16		8184248	0					
ANR	8184304	ArgumentList	cmap + 2		8184248	1					
ANR	8184305	Argument	cmap + 2		8184248	0					
ANR	8184306	AdditiveExpression	cmap + 2		8184248	0		+			
ANR	8184307	Identifier	cmap		8184248	0					
ANR	8184308	PrimaryExpression	2		8184248	1					
ANR	8184309	UnaryExpression	++ i	822:49:28305:28307	8184248	2	True				
ANR	8184310	IncDec	++		8184248	0					
ANR	8184311	Identifier	i		8184248	1					
ANR	8184312	CompoundStatement		16:54:421:421	8184248	3					
ANR	8184313	ExpressionStatement	"if_debug3m ( 'j' , pfont -> memory , ""[j]cmap %d: platform %u encoding %u\\n"" , i , pl_get_uint16 ( cmap_sub + i * 8 ) , pl_get_uint16 ( cmap_sub + i * 8 + 2 ) )"	823:12:28324:28537	8184248	0	True				
ANR	8184314	CallExpression	"if_debug3m ( 'j' , pfont -> memory , ""[j]cmap %d: platform %u encoding %u\\n"" , i , pl_get_uint16 ( cmap_sub + i * 8 ) , pl_get_uint16 ( cmap_sub + i * 8 + 2 ) )"		8184248	0					
ANR	8184315	Callee	if_debug3m		8184248	0					
ANR	8184316	Identifier	if_debug3m		8184248	0					
ANR	8184317	ArgumentList	'j'		8184248	1					
ANR	8184318	Argument	'j'		8184248	0					
ANR	8184319	PrimaryExpression	'j'		8184248	0					
ANR	8184320	Argument	pfont -> memory		8184248	1					
ANR	8184321	PtrMemberAccess	pfont -> memory		8184248	0					
ANR	8184322	Identifier	pfont		8184248	0					
ANR	8184323	Identifier	memory		8184248	1					
ANR	8184324	Argument	"""[j]cmap %d: platform %u encoding %u\\n"""		8184248	2					
ANR	8184325	PrimaryExpression	"""[j]cmap %d: platform %u encoding %u\\n"""		8184248	0					
ANR	8184326	Argument	i		8184248	3					
ANR	8184327	Identifier	i		8184248	0					
ANR	8184328	Argument	pl_get_uint16 ( cmap_sub + i * 8 )		8184248	4					
ANR	8184329	CallExpression	pl_get_uint16 ( cmap_sub + i * 8 )		8184248	0					
ANR	8184330	Callee	pl_get_uint16		8184248	0					
ANR	8184331	Identifier	pl_get_uint16		8184248	0					
ANR	8184332	ArgumentList	cmap_sub + i * 8		8184248	1					
ANR	8184333	Argument	cmap_sub + i * 8		8184248	0					
ANR	8184334	AdditiveExpression	cmap_sub + i * 8		8184248	0		+			
ANR	8184335	Identifier	cmap_sub		8184248	0					
ANR	8184336	MultiplicativeExpression	i * 8		8184248	1		*			
ANR	8184337	Identifier	i		8184248	0					
ANR	8184338	PrimaryExpression	8		8184248	1					
ANR	8184339	Argument	pl_get_uint16 ( cmap_sub + i * 8 + 2 )		8184248	5					
ANR	8184340	CallExpression	pl_get_uint16 ( cmap_sub + i * 8 + 2 )		8184248	0					
ANR	8184341	Callee	pl_get_uint16		8184248	0					
ANR	8184342	Identifier	pl_get_uint16		8184248	0					
ANR	8184343	ArgumentList	cmap_sub + i * 8 + 2		8184248	1					
ANR	8184344	Argument	cmap_sub + i * 8 + 2		8184248	0					
ANR	8184345	AdditiveExpression	cmap_sub + i * 8 + 2		8184248	0		+			
ANR	8184346	Identifier	cmap_sub		8184248	0					
ANR	8184347	AdditiveExpression	i * 8 + 2		8184248	1		+			
ANR	8184348	MultiplicativeExpression	i * 8		8184248	0		*			
ANR	8184349	Identifier	i		8184248	0					
ANR	8184350	PrimaryExpression	8		8184248	1					
ANR	8184351	PrimaryExpression	2		8184248	1					
ANR	8184352	IfStatement	if ( pl_get_uint16 ( cmap_sub + i * 8 ) == 3 )		8184248	1					
ANR	8184353	Condition	pl_get_uint16 ( cmap_sub + i * 8 ) == 3	827:16:28555:28590	8184248	0	True				
ANR	8184354	EqualityExpression	pl_get_uint16 ( cmap_sub + i * 8 ) == 3		8184248	0		==			
ANR	8184355	CallExpression	pl_get_uint16 ( cmap_sub + i * 8 )		8184248	0					
ANR	8184356	Callee	pl_get_uint16		8184248	0					
ANR	8184357	Identifier	pl_get_uint16		8184248	0					
ANR	8184358	ArgumentList	cmap_sub + i * 8		8184248	1					
ANR	8184359	Argument	cmap_sub + i * 8		8184248	0					
ANR	8184360	AdditiveExpression	cmap_sub + i * 8		8184248	0		+			
ANR	8184361	Identifier	cmap_sub		8184248	0					
ANR	8184362	MultiplicativeExpression	i * 8		8184248	1		*			
ANR	8184363	Identifier	i		8184248	0					
ANR	8184364	PrimaryExpression	8		8184248	1					
ANR	8184365	PrimaryExpression	3		8184248	1					
ANR	8184366	CompoundStatement		21:54:704:704	8184248	1					
ANR	8184367	ExpressionStatement	cmap_sub += i * 8	828:16:28611:28628	8184248	0	True				
ANR	8184368	AssignmentExpression	cmap_sub += i * 8		8184248	0		+=			
ANR	8184369	Identifier	cmap_sub		8184248	0					
ANR	8184370	MultiplicativeExpression	i * 8		8184248	1		*			
ANR	8184371	Identifier	i		8184248	0					
ANR	8184372	PrimaryExpression	8		8184248	1					
ANR	8184373	BreakStatement	break ;	829:16:28646:28651	8184248	1	True				
ANR	8184374	CompoundStatement		28:8:808:863	8184248	8					
ANR	8184375	IdentifierDeclStatement	uint offset = cmap_offset + pl_get_uint32 ( cmap_sub + 4 ) ;	834:8:28697:28752	8184248	0	True				
ANR	8184376	IdentifierDecl	offset = cmap_offset + pl_get_uint32 ( cmap_sub + 4 )		8184248	0					
ANR	8184377	IdentifierDeclType	uint		8184248	0					
ANR	8184378	Identifier	offset		8184248	1					
ANR	8184379	AssignmentExpression	offset = cmap_offset + pl_get_uint32 ( cmap_sub + 4 )		8184248	2		=			
ANR	8184380	Identifier	offset		8184248	0					
ANR	8184381	AdditiveExpression	cmap_offset + pl_get_uint32 ( cmap_sub + 4 )		8184248	1		+			
ANR	8184382	Identifier	cmap_offset		8184248	0					
ANR	8184383	CallExpression	pl_get_uint32 ( cmap_sub + 4 )		8184248	1					
ANR	8184384	Callee	pl_get_uint32		8184248	0					
ANR	8184385	Identifier	pl_get_uint32		8184248	0					
ANR	8184386	ArgumentList	cmap_sub + 4		8184248	1					
ANR	8184387	Argument	cmap_sub + 4		8184248	0					
ANR	8184388	AdditiveExpression	cmap_sub + 4		8184248	0		+			
ANR	8184389	Identifier	cmap_sub		8184248	0					
ANR	8184390	PrimaryExpression	4		8184248	1					
ANR	8184391	ExpressionStatement	"access ( offset , cmap_offset + cmap_len - offset , table )"	836:8:28763:28817	8184248	1	True				
ANR	8184392	CallExpression	"access ( offset , cmap_offset + cmap_len - offset , table )"		8184248	0					
ANR	8184393	Callee	access		8184248	0					
ANR	8184394	Identifier	access		8184248	0					
ANR	8184395	ArgumentList	offset		8184248	1					
ANR	8184396	Argument	offset		8184248	0					
ANR	8184397	Identifier	offset		8184248	0					
ANR	8184398	Argument	cmap_offset + cmap_len - offset		8184248	1					
ANR	8184399	AdditiveExpression	cmap_offset + cmap_len - offset		8184248	0		+			
ANR	8184400	Identifier	cmap_offset		8184248	0					
ANR	8184401	AdditiveExpression	cmap_len - offset		8184248	1		-			
ANR	8184402	Identifier	cmap_len		8184248	0					
ANR	8184403	Identifier	offset		8184248	1					
ANR	8184404	Argument	table		8184248	2					
ANR	8184405	Identifier	table		8184248	0					
ANR	8184406	ExpressionStatement	"code = pl_cmap_lookup ( ( uint ) chr , table , & value )"	838:4:28829:28877	8184248	9	True				
ANR	8184407	AssignmentExpression	"code = pl_cmap_lookup ( ( uint ) chr , table , & value )"		8184248	0		=			
ANR	8184408	Identifier	code		8184248	0					
ANR	8184409	CallExpression	"pl_cmap_lookup ( ( uint ) chr , table , & value )"		8184248	1					
ANR	8184410	Callee	pl_cmap_lookup		8184248	0					
ANR	8184411	Identifier	pl_cmap_lookup		8184248	0					
ANR	8184412	ArgumentList	( uint ) chr		8184248	1					
ANR	8184413	Argument	( uint ) chr		8184248	0					
ANR	8184414	CastExpression	( uint ) chr		8184248	0					
ANR	8184415	CastTarget	uint		8184248	0					
ANR	8184416	Identifier	chr		8184248	1					
ANR	8184417	Argument	table		8184248	1					
ANR	8184418	Identifier	table		8184248	0					
ANR	8184419	Argument	& value		8184248	2					
ANR	8184420	UnaryOperationExpression	& value		8184248	0					
ANR	8184421	UnaryOperator	&		8184248	0					
ANR	8184422	Identifier	value		8184248	1					
ANR	8184423	ReturnStatement	return ( code < 0 ? GS_NO_GLYPH : value ) ;	839:4:28883:28922	8184248	10	True				
ANR	8184424	ConditionalExpression	code < 0 ? GS_NO_GLYPH : value		8184248	0					
ANR	8184425	Condition	code < 0		8184248	0					
ANR	8184426	RelationalExpression	code < 0		8184248	0		<			
ANR	8184427	Identifier	code		8184248	0					
ANR	8184428	PrimaryExpression	0		8184248	1					
ANR	8184429	Identifier	GS_NO_GLYPH		8184248	1					
ANR	8184430	Identifier	value		8184248	2					
ANR	8184431	ReturnType	static gs_glyph		8184248	1					
ANR	8184432	Identifier	pl_tt_cmap_encode_char		8184248	2					
ANR	8184433	ParameterList	"gs_font_type42 * pfont , ulong cmap_offset , uint cmap_len , gs_char chr"		8184248	3					
ANR	8184434	Parameter	gs_font_type42 * pfont	805:23:27794:27815	8184248	0	True				
ANR	8184435	ParameterType	gs_font_type42 *		8184248	0					
ANR	8184436	Identifier	pfont		8184248	1					
ANR	8184437	Parameter	ulong cmap_offset	805:47:27818:27834	8184248	1	True				
ANR	8184438	ParameterType	ulong		8184248	0					
ANR	8184439	Identifier	cmap_offset		8184248	1					
ANR	8184440	Parameter	uint cmap_len	806:23:27860:27872	8184248	2	True				
ANR	8184441	ParameterType	uint		8184248	0					
ANR	8184442	Identifier	cmap_len		8184248	1					
ANR	8184443	Parameter	gs_char chr	806:38:27875:27885	8184248	3	True				
ANR	8184444	ParameterType	gs_char		8184248	0					
ANR	8184445	Identifier	chr		8184248	1					
ANR	8184446	CFGEntryNode	ENTRY		8184248		True				
ANR	8184447	CFGExitNode	EXIT		8184248		True				
ANR	8184448	Symbol	cmap_sub		8184248						
ANR	8184449	Symbol	pl_get_uint16		8184248						
ANR	8184450	Symbol	code		8184248						
ANR	8184451	Symbol	& value		8184248						
ANR	8184452	Symbol	pfont -> memory		8184248						
ANR	8184453	Symbol	offset		8184248						
ANR	8184454	Symbol	pfont		8184248						
ANR	8184455	Symbol	i		8184248						
ANR	8184456	Symbol	chr		8184248						
ANR	8184457	Symbol	pl_get_uint32		8184248						
ANR	8184458	Symbol	* pfont		8184248						
ANR	8184459	Symbol	GS_NO_GLYPH		8184248						
ANR	8184460	Symbol	pl_cmap_lookup		8184248						
ANR	8184461	Symbol	cmap_offset		8184248						
ANR	8184462	Symbol	cmap_len		8184248						
ANR	8184463	Symbol	cmap		8184248						
ANR	8184464	Symbol	value		8184248						
ANR	8184465	Symbol	table		8184248						
ANR	8184466	Function	pl_tt_dynamic_encode_char	843:0:29003:29270							
ANR	8184467	FunctionDef	"pl_tt_dynamic_encode_char (const gs_font_type42 * pfont , gs_char chr)"		8184466	0					
ANR	8184468	CompoundStatement		845:0:29088:29270	8184466	0					
ANR	8184469	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	846:4:29094:29132	8184466	0	True				
ANR	8184470	IdentifierDecl	* plfont = pfont -> client_data		8184466	0					
ANR	8184471	IdentifierDeclType	pl_font_t *		8184466	0					
ANR	8184472	Identifier	plfont		8184466	1					
ANR	8184473	AssignmentExpression	* plfont = pfont -> client_data		8184466	2		=			
ANR	8184474	Identifier	plfont		8184466	0					
ANR	8184475	PtrMemberAccess	pfont -> client_data		8184466	1					
ANR	8184476	Identifier	pfont		8184466	0					
ANR	8184477	Identifier	client_data		8184466	1					
ANR	8184478	IdentifierDeclStatement	"const pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , chr ) ;"	847:4:29138:29201	8184466	1	True				
ANR	8184479	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , chr )"		8184466	0					
ANR	8184480	IdentifierDeclType	const pl_tt_char_glyph_t *		8184466	0					
ANR	8184481	Identifier	ptcg		8184466	1					
ANR	8184482	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , chr )"		8184466	2		=			
ANR	8184483	Identifier	ptcg		8184466	0					
ANR	8184484	CallExpression	"pl_tt_lookup_char ( plfont , chr )"		8184466	1					
ANR	8184485	Callee	pl_tt_lookup_char		8184466	0					
ANR	8184486	Identifier	pl_tt_lookup_char		8184466	0					
ANR	8184487	ArgumentList	plfont		8184466	1					
ANR	8184488	Argument	plfont		8184466	0					
ANR	8184489	Identifier	plfont		8184466	0					
ANR	8184490	Argument	chr		8184466	1					
ANR	8184491	Identifier	chr		8184466	0					
ANR	8184492	ReturnStatement	return ( ptcg -> chr == gs_no_char ? GS_NO_GLYPH : ptcg -> glyph ) ;	849:4:29208:29268	8184466	2	True				
ANR	8184493	ConditionalExpression	ptcg -> chr == gs_no_char ? GS_NO_GLYPH : ptcg -> glyph		8184466	0					
ANR	8184494	Condition	ptcg -> chr == gs_no_char		8184466	0					
ANR	8184495	EqualityExpression	ptcg -> chr == gs_no_char		8184466	0		==			
ANR	8184496	PtrMemberAccess	ptcg -> chr		8184466	0					
ANR	8184497	Identifier	ptcg		8184466	0					
ANR	8184498	Identifier	chr		8184466	1					
ANR	8184499	Identifier	gs_no_char		8184466	1					
ANR	8184500	Identifier	GS_NO_GLYPH		8184466	1					
ANR	8184501	PtrMemberAccess	ptcg -> glyph		8184466	2					
ANR	8184502	Identifier	ptcg		8184466	0					
ANR	8184503	Identifier	glyph		8184466	1					
ANR	8184504	ReturnType	static gs_glyph		8184466	1					
ANR	8184505	Identifier	pl_tt_dynamic_encode_char		8184466	2					
ANR	8184506	ParameterList	"const gs_font_type42 * pfont , gs_char chr"		8184466	3					
ANR	8184507	Parameter	const gs_font_type42 * pfont	844:26:29045:29072	8184466	0	True				
ANR	8184508	ParameterType	const gs_font_type42 *		8184466	0					
ANR	8184509	Identifier	pfont		8184466	1					
ANR	8184510	Parameter	gs_char chr	844:56:29075:29085	8184466	1	True				
ANR	8184511	ParameterType	gs_char		8184466	0					
ANR	8184512	Identifier	chr		8184466	1					
ANR	8184513	CFGEntryNode	ENTRY		8184466		True				
ANR	8184514	CFGExitNode	EXIT		8184466		True				
ANR	8184515	Symbol	pfont -> client_data		8184466						
ANR	8184516	Symbol	* pfont		8184466						
ANR	8184517	Symbol	GS_NO_GLYPH		8184466						
ANR	8184518	Symbol	pfont		8184466						
ANR	8184519	Symbol	ptcg -> chr		8184466						
ANR	8184520	Symbol	ptcg -> glyph		8184466						
ANR	8184521	Symbol	plfont		8184466						
ANR	8184522	Symbol	gs_no_char		8184466						
ANR	8184523	Symbol	chr		8184466						
ANR	8184524	Symbol	ptcg		8184466						
ANR	8184525	Symbol	* ptcg		8184466						
ANR	8184526	Symbol	pl_tt_lookup_char		8184466						
ANR	8184527	Function	pl_font_galley_character	856:0:29471:30334							
ANR	8184528	FunctionDef	"pl_font_galley_character (gs_char chr , const pl_font_t * plfont)"		8184527	0					
ANR	8184529	CompoundStatement		858:0:29550:30334	8184527	0					
ANR	8184530	IdentifierDeclStatement	long GC = plfont -> offsets . GC ;	859:4:29556:29584	8184527	0	True				
ANR	8184531	IdentifierDecl	GC = plfont -> offsets . GC		8184527	0					
ANR	8184532	IdentifierDeclType	long		8184527	0					
ANR	8184533	Identifier	GC		8184527	1					
ANR	8184534	AssignmentExpression	GC = plfont -> offsets . GC		8184527	2		=			
ANR	8184535	Identifier	GC		8184527	0					
ANR	8184536	MemberAccess	plfont -> offsets . GC		8184527	1					
ANR	8184537	PtrMemberAccess	plfont -> offsets		8184527	0					
ANR	8184538	Identifier	plfont		8184527	0					
ANR	8184539	Identifier	offsets		8184527	1					
ANR	8184540	Identifier	GC		8184527	1					
ANR	8184541	IdentifierDeclStatement	const byte * gcseg ;	860:4:29590:29607	8184527	1	True				
ANR	8184542	IdentifierDecl	* gcseg		8184527	0					
ANR	8184543	IdentifierDeclType	const byte *		8184527	0					
ANR	8184544	Identifier	gcseg		8184527	1					
ANR	8184545	IdentifierDeclStatement	"uint b0 , b1 ;"	861:4:29613:29624	8184527	2	True				
ANR	8184546	IdentifierDecl	b0		8184527	0					
ANR	8184547	IdentifierDeclType	uint		8184527	0					
ANR	8184548	Identifier	b0		8184527	1					
ANR	8184549	IdentifierDecl	b1		8184527	1					
ANR	8184550	IdentifierDeclType	uint		8184527	0					
ANR	8184551	Identifier	b1		8184527	1					
ANR	8184552	IdentifierDeclStatement	"uint i , len ;"	862:4:29630:29641	8184527	3	True				
ANR	8184553	IdentifierDecl	i		8184527	0					
ANR	8184554	IdentifierDeclType	uint		8184527	0					
ANR	8184555	Identifier	i		8184527	1					
ANR	8184556	IdentifierDecl	len		8184527	1					
ANR	8184557	IdentifierDeclType	uint		8184527	0					
ANR	8184558	Identifier	len		8184527	1					
ANR	8184559	IdentifierDeclStatement	uint default_char ;	863:4:29647:29664	8184527	4	True				
ANR	8184560	IdentifierDecl	default_char		8184527	0					
ANR	8184561	IdentifierDeclType	uint		8184527	0					
ANR	8184562	Identifier	default_char		8184527	1					
ANR	8184563	IfStatement	if ( GC < 0 )		8184527	5					
ANR	8184564	Condition	GC < 0	865:8:29675:29680	8184527	0	True				
ANR	8184565	RelationalExpression	GC < 0		8184527	0		<			
ANR	8184566	Identifier	GC		8184527	0					
ANR	8184567	PrimaryExpression	0		8184527	1					
ANR	8184568	ReturnStatement	return gs_no_char ;	866:8:29691:29708	8184527	1	True				
ANR	8184569	Identifier	gs_no_char		8184527	0					
ANR	8184570	ExpressionStatement	gcseg = plfont -> header + GC	867:4:29714:29741	8184527	6	True				
ANR	8184571	AssignmentExpression	gcseg = plfont -> header + GC		8184527	0		=			
ANR	8184572	Identifier	gcseg		8184527	0					
ANR	8184573	AdditiveExpression	plfont -> header + GC		8184527	1		+			
ANR	8184574	PtrMemberAccess	plfont -> header		8184527	0					
ANR	8184575	Identifier	plfont		8184527	0					
ANR	8184576	Identifier	header		8184527	1					
ANR	8184577	Identifier	GC		8184527	1					
ANR	8184578	IfStatement	if ( plfont -> large_sizes )		8184527	7					
ANR	8184579	Condition	plfont -> large_sizes	868:8:29751:29769	8184527	0	True				
ANR	8184580	PtrMemberAccess	plfont -> large_sizes		8184527	0					
ANR	8184581	Identifier	plfont		8184527	0					
ANR	8184582	Identifier	large_sizes		8184527	1					
ANR	8184583	ExpressionStatement	"len = pl_get_uint32 ( gcseg + 2 ) , i = 12"	869:8:29780:29818	8184527	1	True				
ANR	8184584	Expression	"len = pl_get_uint32 ( gcseg + 2 ) , i = 12"		8184527	0					
ANR	8184585	AssignmentExpression	len = pl_get_uint32 ( gcseg + 2 )		8184527	0		=			
ANR	8184586	Identifier	len		8184527	0					
ANR	8184587	CallExpression	pl_get_uint32 ( gcseg + 2 )		8184527	1					
ANR	8184588	Callee	pl_get_uint32		8184527	0					
ANR	8184589	Identifier	pl_get_uint32		8184527	0					
ANR	8184590	ArgumentList	gcseg + 2		8184527	1					
ANR	8184591	Argument	gcseg + 2		8184527	0					
ANR	8184592	AdditiveExpression	gcseg + 2		8184527	0		+			
ANR	8184593	Identifier	gcseg		8184527	0					
ANR	8184594	PrimaryExpression	2		8184527	1					
ANR	8184595	AssignmentExpression	i = 12		8184527	1		=			
ANR	8184596	Identifier	i		8184527	0					
ANR	8184597	PrimaryExpression	12		8184527	1					
ANR	8184598	ElseStatement	else		8184527	0					
ANR	8184599	ExpressionStatement	"len = pl_get_uint16 ( gcseg + 2 ) , i = 10"	871:8:29837:29875	8184527	0	True				
ANR	8184600	Expression	"len = pl_get_uint16 ( gcseg + 2 ) , i = 10"		8184527	0					
ANR	8184601	AssignmentExpression	len = pl_get_uint16 ( gcseg + 2 )		8184527	0		=			
ANR	8184602	Identifier	len		8184527	0					
ANR	8184603	CallExpression	pl_get_uint16 ( gcseg + 2 )		8184527	1					
ANR	8184604	Callee	pl_get_uint16		8184527	0					
ANR	8184605	Identifier	pl_get_uint16		8184527	0					
ANR	8184606	ArgumentList	gcseg + 2		8184527	1					
ANR	8184607	Argument	gcseg + 2		8184527	0					
ANR	8184608	AdditiveExpression	gcseg + 2		8184527	0		+			
ANR	8184609	Identifier	gcseg		8184527	0					
ANR	8184610	PrimaryExpression	2		8184527	1					
ANR	8184611	AssignmentExpression	i = 10		8184527	1		=			
ANR	8184612	Identifier	i		8184527	0					
ANR	8184613	PrimaryExpression	10		8184527	1					
ANR	8184614	IfStatement	if ( len != pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6 )		8184527	8					
ANR	8184615	Condition	len != pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6	872:8:29885:29927	8184527	0	True				
ANR	8184616	EqualityExpression	len != pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6		8184527	0		!=			
ANR	8184617	Identifier	len		8184527	0					
ANR	8184618	AdditiveExpression	pl_get_uint16 ( gcseg + i - 2 ) * 6 + 6		8184527	1		+			
ANR	8184619	MultiplicativeExpression	pl_get_uint16 ( gcseg + i - 2 ) * 6		8184527	0		*			
ANR	8184620	CallExpression	pl_get_uint16 ( gcseg + i - 2 )		8184527	0					
ANR	8184621	Callee	pl_get_uint16		8184527	0					
ANR	8184622	Identifier	pl_get_uint16		8184527	0					
ANR	8184623	ArgumentList	gcseg + i - 2		8184527	1					
ANR	8184624	Argument	gcseg + i - 2		8184527	0					
ANR	8184625	AdditiveExpression	gcseg + i - 2		8184527	0		+			
ANR	8184626	Identifier	gcseg		8184527	0					
ANR	8184627	AdditiveExpression	i - 2		8184527	1		-			
ANR	8184628	Identifier	i		8184527	0					
ANR	8184629	PrimaryExpression	2		8184527	1					
ANR	8184630	PrimaryExpression	6		8184527	1					
ANR	8184631	PrimaryExpression	6		8184527	1					
ANR	8184632	ReturnStatement	return gs_no_char ;	873:8:29956:29973	8184527	1	True				
ANR	8184633	Identifier	gs_no_char		8184527	0					
ANR	8184634	ExpressionStatement	default_char = pl_get_uint16 ( gcseg + i - 4 )	874:4:29979:30022	8184527	9	True				
ANR	8184635	AssignmentExpression	default_char = pl_get_uint16 ( gcseg + i - 4 )		8184527	0		=			
ANR	8184636	Identifier	default_char		8184527	0					
ANR	8184637	CallExpression	pl_get_uint16 ( gcseg + i - 4 )		8184527	1					
ANR	8184638	Callee	pl_get_uint16		8184527	0					
ANR	8184639	Identifier	pl_get_uint16		8184527	0					
ANR	8184640	ArgumentList	gcseg + i - 4		8184527	1					
ANR	8184641	Argument	gcseg + i - 4		8184527	0					
ANR	8184642	AdditiveExpression	gcseg + i - 4		8184527	0		+			
ANR	8184643	Identifier	gcseg		8184527	0					
ANR	8184644	AdditiveExpression	i - 4		8184527	1		-			
ANR	8184645	Identifier	i		8184527	0					
ANR	8184646	PrimaryExpression	4		8184527	1					
ANR	8184647	ExpressionStatement	len += i - 6	875:4:30059:30071	8184527	10	True				
ANR	8184648	AssignmentExpression	len += i - 6		8184527	0		+=			
ANR	8184649	Identifier	len		8184527	0					
ANR	8184650	AdditiveExpression	i - 6		8184527	1		-			
ANR	8184651	Identifier	i		8184527	0					
ANR	8184652	PrimaryExpression	6		8184527	1					
ANR	8184653	ExpressionStatement	b0 = chr >> 8	876:4:30077:30090	8184527	11	True				
ANR	8184654	AssignmentExpression	b0 = chr >> 8		8184527	0		=			
ANR	8184655	Identifier	b0		8184527	0					
ANR	8184656	ShiftExpression	chr >> 8		8184527	1		>>			
ANR	8184657	Identifier	chr		8184527	0					
ANR	8184658	PrimaryExpression	8		8184527	1					
ANR	8184659	ExpressionStatement	b1 = chr & 0xff	877:4:30096:30111	8184527	12	True				
ANR	8184660	AssignmentExpression	b1 = chr & 0xff		8184527	0		=			
ANR	8184661	Identifier	b1		8184527	0					
ANR	8184662	BitAndExpression	chr & 0xff		8184527	1		&			
ANR	8184663	Identifier	chr		8184527	0					
ANR	8184664	PrimaryExpression	0xff		8184527	1					
ANR	8184665	ForStatement	for ( ; i < len ; i += 6 )		8184527	13					
ANR	8184666	Condition	i < len	878:11:30124:30130	8184527	0	True				
ANR	8184667	RelationalExpression	i < len		8184527	0		<			
ANR	8184668	Identifier	i		8184527	0					
ANR	8184669	Identifier	len		8184527	1					
ANR	8184670	AssignmentExpression	i += 6	878:20:30133:30138	8184527	1	True	+=			
ANR	8184671	Identifier	i		8184527	0					
ANR	8184672	PrimaryExpression	6		8184527	1					
ANR	8184673	IfStatement	if ( b0 >= gcseg [ i ] && b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ] )		8184527	2					
ANR	8184674	Condition	b0 >= gcseg [ i ] && b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]	879:12:30153:30244	8184527	0	True				
ANR	8184675	AndExpression	b0 >= gcseg [ i ] && b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]		8184527	0		&&			
ANR	8184676	RelationalExpression	b0 >= gcseg [ i ]		8184527	0		>=			
ANR	8184677	Identifier	b0		8184527	0					
ANR	8184678	ArrayIndexing	gcseg [ i ]		8184527	1					
ANR	8184679	Identifier	gcseg		8184527	0					
ANR	8184680	Identifier	i		8184527	1					
ANR	8184681	AndExpression	b0 <= gcseg [ i + 1 ] && b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]		8184527	1		&&			
ANR	8184682	RelationalExpression	b0 <= gcseg [ i + 1 ]		8184527	0		<=			
ANR	8184683	Identifier	b0		8184527	0					
ANR	8184684	ArrayIndexing	gcseg [ i + 1 ]		8184527	1					
ANR	8184685	Identifier	gcseg		8184527	0					
ANR	8184686	AdditiveExpression	i + 1		8184527	1		+			
ANR	8184687	Identifier	i		8184527	0					
ANR	8184688	PrimaryExpression	1		8184527	1					
ANR	8184689	AndExpression	b1 >= gcseg [ i + 2 ] && b1 <= gcseg [ i + 3 ]		8184527	1		&&			
ANR	8184690	RelationalExpression	b1 >= gcseg [ i + 2 ]		8184527	0		>=			
ANR	8184691	Identifier	b1		8184527	0					
ANR	8184692	ArrayIndexing	gcseg [ i + 2 ]		8184527	1					
ANR	8184693	Identifier	gcseg		8184527	0					
ANR	8184694	AdditiveExpression	i + 2		8184527	1		+			
ANR	8184695	Identifier	i		8184527	0					
ANR	8184696	PrimaryExpression	2		8184527	1					
ANR	8184697	RelationalExpression	b1 <= gcseg [ i + 3 ]		8184527	1		<=			
ANR	8184698	Identifier	b1		8184527	0					
ANR	8184699	ArrayIndexing	gcseg [ i + 3 ]		8184527	1					
ANR	8184700	Identifier	gcseg		8184527	0					
ANR	8184701	AdditiveExpression	i + 3		8184527	1		+			
ANR	8184702	Identifier	i		8184527	0					
ANR	8184703	PrimaryExpression	3		8184527	1					
ANR	8184704	ReturnStatement	return pl_get_uint16 ( gcseg + i + 4 ) ;	882:12:30272:30307	8184527	1	True				
ANR	8184705	CallExpression	pl_get_uint16 ( gcseg + i + 4 )		8184527	0					
ANR	8184706	Callee	pl_get_uint16		8184527	0					
ANR	8184707	Identifier	pl_get_uint16		8184527	0					
ANR	8184708	ArgumentList	gcseg + i + 4		8184527	1					
ANR	8184709	Argument	gcseg + i + 4		8184527	0					
ANR	8184710	AdditiveExpression	gcseg + i + 4		8184527	0		+			
ANR	8184711	Identifier	gcseg		8184527	0					
ANR	8184712	AdditiveExpression	i + 4		8184527	1		+			
ANR	8184713	Identifier	i		8184527	0					
ANR	8184714	PrimaryExpression	4		8184527	1					
ANR	8184715	ReturnStatement	return default_char ;	883:4:30313:30332	8184527	14	True				
ANR	8184716	Identifier	default_char		8184527	0					
ANR	8184717	ReturnType	static gs_char		8184527	1					
ANR	8184718	Identifier	pl_font_galley_character		8184527	2					
ANR	8184719	ParameterList	"gs_char chr , const pl_font_t * plfont"		8184527	3					
ANR	8184720	Parameter	gs_char chr	857:25:29511:29521	8184527	0	True				
ANR	8184721	ParameterType	gs_char		8184527	0					
ANR	8184722	Identifier	chr		8184527	1					
ANR	8184723	Parameter	const pl_font_t * plfont	857:38:29524:29547	8184527	1	True				
ANR	8184724	ParameterType	const pl_font_t *		8184527	0					
ANR	8184725	Identifier	plfont		8184527	1					
ANR	8184726	CFGEntryNode	ENTRY		8184527		True				
ANR	8184727	CFGExitNode	EXIT		8184527		True				
ANR	8184728	Symbol	default_char		8184527						
ANR	8184729	Symbol	pl_get_uint16		8184527						
ANR	8184730	Symbol	gcseg		8184527						
ANR	8184731	Symbol	plfont -> header		8184527						
ANR	8184732	Symbol	i		8184527						
ANR	8184733	Symbol	plfont		8184527						
ANR	8184734	Symbol	plfont -> large_sizes		8184527						
ANR	8184735	Symbol	chr		8184527						
ANR	8184736	Symbol	plfont -> offsets		8184527						
ANR	8184737	Symbol	pl_get_uint32		8184527						
ANR	8184738	Symbol	b0		8184527						
ANR	8184739	Symbol	b1		8184527						
ANR	8184740	Symbol	* i		8184527						
ANR	8184741	Symbol	len		8184527						
ANR	8184742	Symbol	* plfont		8184527						
ANR	8184743	Symbol	* gcseg		8184527						
ANR	8184744	Symbol	gs_no_char		8184527						
ANR	8184745	Symbol	GC		8184527						
ANR	8184746	Symbol	plfont -> offsets . GC		8184527						
ANR	8184747	Function	pl_tt_encode_char	889:0:30519:31924							
ANR	8184748	FunctionDef	"pl_tt_encode_char (gs_font * pfont_generic , gs_char chr , gs_glyph_space_t not_used)"		8184747	0					
ANR	8184749	CompoundStatement		892:0:30629:31924	8184747	0					
ANR	8184750	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) pfont_generic ;	893:4:30635:30691	8184747	0	True				
ANR	8184751	IdentifierDecl	* pfont = ( gs_font_type42 * ) pfont_generic		8184747	0					
ANR	8184752	IdentifierDeclType	gs_font_type42 *		8184747	0					
ANR	8184753	Identifier	pfont		8184747	1					
ANR	8184754	AssignmentExpression	* pfont = ( gs_font_type42 * ) pfont_generic		8184747	2		=			
ANR	8184755	Identifier	pfont		8184747	0					
ANR	8184756	CastExpression	( gs_font_type42 * ) pfont_generic		8184747	1					
ANR	8184757	CastTarget	gs_font_type42 *		8184747	0					
ANR	8184758	Identifier	pfont_generic		8184747	1					
ANR	8184759	IdentifierDeclStatement	uint cmap_len ;	894:4:30697:30710	8184747	1	True				
ANR	8184760	IdentifierDecl	cmap_len		8184747	0					
ANR	8184761	IdentifierDeclType	uint		8184747	0					
ANR	8184762	Identifier	cmap_len		8184747	1					
ANR	8184763	IdentifierDeclStatement	"ulong cmap_offset = tt_find_table ( pfont , ""cmap"" , & cmap_len ) ;"	895:4:30716:30775	8184747	2	True				
ANR	8184764	IdentifierDecl	"cmap_offset = tt_find_table ( pfont , ""cmap"" , & cmap_len )"		8184747	0					
ANR	8184765	IdentifierDeclType	ulong		8184747	0					
ANR	8184766	Identifier	cmap_offset		8184747	1					
ANR	8184767	AssignmentExpression	"cmap_offset = tt_find_table ( pfont , ""cmap"" , & cmap_len )"		8184747	2		=			
ANR	8184768	Identifier	cmap_offset		8184747	0					
ANR	8184769	CallExpression	"tt_find_table ( pfont , ""cmap"" , & cmap_len )"		8184747	1					
ANR	8184770	Callee	tt_find_table		8184747	0					
ANR	8184771	Identifier	tt_find_table		8184747	0					
ANR	8184772	ArgumentList	pfont		8184747	1					
ANR	8184773	Argument	pfont		8184747	0					
ANR	8184774	Identifier	pfont		8184747	0					
ANR	8184775	Argument	"""cmap"""		8184747	1					
ANR	8184776	PrimaryExpression	"""cmap"""		8184747	0					
ANR	8184777	Argument	& cmap_len		8184747	2					
ANR	8184778	UnaryOperationExpression	& cmap_len		8184747	0					
ANR	8184779	UnaryOperator	&		8184747	0					
ANR	8184780	Identifier	cmap_len		8184747	1					
ANR	8184781	IdentifierDeclStatement	"gs_glyph glyph = ( cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr ) ) ;"	896:4:30781:31073	8184747	3	True				
ANR	8184782	IdentifierDecl	"glyph = ( cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr ) )"		8184747	0					
ANR	8184783	IdentifierDeclType	gs_glyph		8184747	0					
ANR	8184784	Identifier	glyph		8184747	1					
ANR	8184785	AssignmentExpression	"glyph = ( cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr ) )"		8184747	2		=			
ANR	8184786	Identifier	glyph		8184747	0					
ANR	8184787	ConditionalExpression	"cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , chr ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr )"		8184747	1					
ANR	8184788	Condition	cmap_offset == 0		8184747	0					
ANR	8184789	EqualityExpression	cmap_offset == 0		8184747	0		==			
ANR	8184790	Identifier	cmap_offset		8184747	0					
ANR	8184791	PrimaryExpression	0		8184747	1					
ANR	8184792	CallExpression	"pl_tt_dynamic_encode_char ( pfont , chr )"		8184747	1					
ANR	8184793	Callee	pl_tt_dynamic_encode_char		8184747	0					
ANR	8184794	Identifier	pl_tt_dynamic_encode_char		8184747	0					
ANR	8184795	ArgumentList	pfont		8184747	1					
ANR	8184796	Argument	pfont		8184747	0					
ANR	8184797	Identifier	pfont		8184747	0					
ANR	8184798	Argument	chr		8184747	1					
ANR	8184799	Identifier	chr		8184747	0					
ANR	8184800	CallExpression	"pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , chr )"		8184747	2					
ANR	8184801	Callee	pl_tt_cmap_encode_char		8184747	0					
ANR	8184802	Identifier	pl_tt_cmap_encode_char		8184747	0					
ANR	8184803	ArgumentList	pfont		8184747	1					
ANR	8184804	Argument	pfont		8184747	0					
ANR	8184805	Identifier	pfont		8184747	0					
ANR	8184806	Argument	cmap_offset		8184747	1					
ANR	8184807	Identifier	cmap_offset		8184747	0					
ANR	8184808	Argument	cmap_len		8184747	2					
ANR	8184809	Identifier	cmap_len		8184747	0					
ANR	8184810	Argument	chr		8184747	3					
ANR	8184811	Identifier	chr		8184747	0					
ANR	8184812	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	901:4:31079:31117	8184747	4	True				
ANR	8184813	IdentifierDecl	* plfont = pfont -> client_data		8184747	0					
ANR	8184814	IdentifierDeclType	pl_font_t *		8184747	0					
ANR	8184815	Identifier	plfont		8184747	1					
ANR	8184816	AssignmentExpression	* plfont = pfont -> client_data		8184747	2		=			
ANR	8184817	Identifier	plfont		8184747	0					
ANR	8184818	PtrMemberAccess	pfont -> client_data		8184747	1					
ANR	8184819	Identifier	pfont		8184747	0					
ANR	8184820	Identifier	client_data		8184747	1					
ANR	8184821	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	902:4:31123:31143	8184747	5	True				
ANR	8184822	IdentifierDecl	* pfg		8184747	0					
ANR	8184823	IdentifierDeclType	pl_font_glyph_t *		8184747	0					
ANR	8184824	Identifier	pfg		8184747	1					
ANR	8184825	ExpressionStatement	plfont -> last_char = chr	905:4:31204:31227	8184747	6	True				
ANR	8184826	AssignmentExpression	plfont -> last_char = chr		8184747	0		=			
ANR	8184827	PtrMemberAccess	plfont -> last_char		8184747	0					
ANR	8184828	Identifier	plfont		8184747	0					
ANR	8184829	Identifier	last_char		8184747	1					
ANR	8184830	Identifier	chr		8184747	1					
ANR	8184831	IfStatement	if ( plfont -> offsets . GC < 0 )		8184747	7					
ANR	8184832	Condition	plfont -> offsets . GC < 0	907:8:31238:31259	8184747	0	True				
ANR	8184833	RelationalExpression	plfont -> offsets . GC < 0		8184747	0		<			
ANR	8184834	MemberAccess	plfont -> offsets . GC		8184747	0					
ANR	8184835	PtrMemberAccess	plfont -> offsets		8184747	0					
ANR	8184836	Identifier	plfont		8184747	0					
ANR	8184837	Identifier	offsets		8184747	1					
ANR	8184838	Identifier	GC		8184747	1					
ANR	8184839	PrimaryExpression	0		8184747	1					
ANR	8184840	ReturnStatement	return glyph ;	908:8:31270:31282	8184747	1	True				
ANR	8184841	Identifier	glyph		8184747	0					
ANR	8184842	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , glyph )"	909:4:31318:31359	8184747	8	True				
ANR	8184843	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , glyph )"		8184747	0		=			
ANR	8184844	Identifier	pfg		8184747	0					
ANR	8184845	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8184747	1					
ANR	8184846	Callee	pl_font_lookup_glyph		8184747	0					
ANR	8184847	Identifier	pl_font_lookup_glyph		8184747	0					
ANR	8184848	ArgumentList	plfont		8184747	1					
ANR	8184849	Argument	plfont		8184747	0					
ANR	8184850	Identifier	plfont		8184747	0					
ANR	8184851	Argument	glyph		8184747	1					
ANR	8184852	Identifier	glyph		8184747	0					
ANR	8184853	IfStatement	if ( ! pfg -> data )		8184747	9					
ANR	8184854	Condition	! pfg -> data	911:8:31442:31451	8184747	0	True				
ANR	8184855	UnaryOperationExpression	! pfg -> data		8184747	0					
ANR	8184856	UnaryOperator	!		8184747	0					
ANR	8184857	PtrMemberAccess	pfg -> data		8184747	1					
ANR	8184858	Identifier	pfg		8184747	0					
ANR	8184859	Identifier	data		8184747	1					
ANR	8184860	CompoundStatement		21:8:834:893	8184747	1					
ANR	8184861	IdentifierDeclStatement	"gs_char galley_char = pl_font_galley_character ( chr , plfont ) ;"	912:8:31464:31523	8184747	0	True				
ANR	8184862	IdentifierDecl	"galley_char = pl_font_galley_character ( chr , plfont )"		8184747	0					
ANR	8184863	IdentifierDeclType	gs_char		8184747	0					
ANR	8184864	Identifier	galley_char		8184747	1					
ANR	8184865	AssignmentExpression	"galley_char = pl_font_galley_character ( chr , plfont )"		8184747	2		=			
ANR	8184866	Identifier	galley_char		8184747	0					
ANR	8184867	CallExpression	"pl_font_galley_character ( chr , plfont )"		8184747	1					
ANR	8184868	Callee	pl_font_galley_character		8184747	0					
ANR	8184869	Identifier	pl_font_galley_character		8184747	0					
ANR	8184870	ArgumentList	chr		8184747	1					
ANR	8184871	Argument	chr		8184747	0					
ANR	8184872	Identifier	chr		8184747	0					
ANR	8184873	Argument	plfont		8184747	1					
ANR	8184874	Identifier	plfont		8184747	0					
ANR	8184875	IfStatement	if ( galley_char != gs_no_char )		8184747	1					
ANR	8184876	Condition	galley_char != gs_no_char	913:12:31537:31561	8184747	0	True				
ANR	8184877	EqualityExpression	galley_char != gs_no_char		8184747	0		!=			
ANR	8184878	Identifier	galley_char		8184747	0					
ANR	8184879	Identifier	gs_no_char		8184747	1					
ANR	8184880	CompoundStatement		22:39:934:934	8184747	1					
ANR	8184881	ReturnStatement	"return ( galley_char == 0xffff ? 0 : cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , galley_char ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char ) ) ;"	914:12:31578:31854	8184747	0	True				
ANR	8184882	ConditionalExpression	"galley_char == 0xffff ? 0 : cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , galley_char ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char )"		8184747	0					
ANR	8184883	Condition	galley_char == 0xffff		8184747	0					
ANR	8184884	EqualityExpression	galley_char == 0xffff		8184747	0		==			
ANR	8184885	Identifier	galley_char		8184747	0					
ANR	8184886	PrimaryExpression	0xffff		8184747	1					
ANR	8184887	PrimaryExpression	0		8184747	1					
ANR	8184888	ConditionalExpression	"cmap_offset == 0 ? pl_tt_dynamic_encode_char ( pfont , galley_char ) : pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char )"		8184747	2					
ANR	8184889	Condition	cmap_offset == 0		8184747	0					
ANR	8184890	EqualityExpression	cmap_offset == 0		8184747	0		==			
ANR	8184891	Identifier	cmap_offset		8184747	0					
ANR	8184892	PrimaryExpression	0		8184747	1					
ANR	8184893	CallExpression	"pl_tt_dynamic_encode_char ( pfont , galley_char )"		8184747	1					
ANR	8184894	Callee	pl_tt_dynamic_encode_char		8184747	0					
ANR	8184895	Identifier	pl_tt_dynamic_encode_char		8184747	0					
ANR	8184896	ArgumentList	pfont		8184747	1					
ANR	8184897	Argument	pfont		8184747	0					
ANR	8184898	Identifier	pfont		8184747	0					
ANR	8184899	Argument	galley_char		8184747	1					
ANR	8184900	Identifier	galley_char		8184747	0					
ANR	8184901	CallExpression	"pl_tt_cmap_encode_char ( pfont , cmap_offset , cmap_len , galley_char )"		8184747	2					
ANR	8184902	Callee	pl_tt_cmap_encode_char		8184747	0					
ANR	8184903	Identifier	pl_tt_cmap_encode_char		8184747	0					
ANR	8184904	ArgumentList	pfont		8184747	1					
ANR	8184905	Argument	pfont		8184747	0					
ANR	8184906	Identifier	pfont		8184747	0					
ANR	8184907	Argument	cmap_offset		8184747	1					
ANR	8184908	Identifier	cmap_offset		8184747	0					
ANR	8184909	Argument	cmap_len		8184747	2					
ANR	8184910	Identifier	cmap_len		8184747	0					
ANR	8184911	Argument	galley_char		8184747	3					
ANR	8184912	Identifier	galley_char		8184747	0					
ANR	8184913	ReturnStatement	return glyph ;	922:4:31876:31888	8184747	10	True				
ANR	8184914	Identifier	glyph		8184747	0					
ANR	8184915	ReturnType	gs_glyph		8184747	1					
ANR	8184916	Identifier	pl_tt_encode_char		8184747	2					
ANR	8184917	ParameterList	"gs_font * pfont_generic , gs_char chr , gs_glyph_space_t not_used"		8184747	3					
ANR	8184918	Parameter	gs_font * pfont_generic	890:18:30546:30568	8184747	0	True				
ANR	8184919	ParameterType	gs_font *		8184747	0					
ANR	8184920	Identifier	pfont_generic		8184747	1					
ANR	8184921	Parameter	gs_char chr	890:43:30571:30581	8184747	1	True				
ANR	8184922	ParameterType	gs_char		8184747	0					
ANR	8184923	Identifier	chr		8184747	1					
ANR	8184924	Parameter	gs_glyph_space_t not_used	891:18:30602:30626	8184747	2	True				
ANR	8184925	ParameterType	gs_glyph_space_t		8184747	0					
ANR	8184926	Identifier	not_used		8184747	1					
ANR	8184927	CFGEntryNode	ENTRY		8184747		True				
ANR	8184928	CFGExitNode	EXIT		8184747		True				
ANR	8184929	Symbol	& cmap_len		8184747						
ANR	8184930	Symbol	pl_font_lookup_glyph		8184747						
ANR	8184931	Symbol	galley_char		8184747						
ANR	8184932	Symbol	pfont_generic		8184747						
ANR	8184933	Symbol	tt_find_table		8184747						
ANR	8184934	Symbol	plfont		8184747						
ANR	8184935	Symbol	not_used		8184747						
ANR	8184936	Symbol	plfont -> last_char		8184747						
ANR	8184937	Symbol	cmap_len		8184747						
ANR	8184938	Symbol	* pfg		8184747						
ANR	8184939	Symbol	gs_no_char		8184747						
ANR	8184940	Symbol	pfont		8184747						
ANR	8184941	Symbol	chr		8184747						
ANR	8184942	Symbol	plfont -> offsets		8184747						
ANR	8184943	Symbol	pl_font_galley_character		8184747						
ANR	8184944	Symbol	pfont -> client_data		8184747						
ANR	8184945	Symbol	pfg		8184747						
ANR	8184946	Symbol	glyph		8184747						
ANR	8184947	Symbol	* pfont		8184747						
ANR	8184948	Symbol	pl_tt_cmap_encode_char		8184747						
ANR	8184949	Symbol	cmap_offset		8184747						
ANR	8184950	Symbol	* plfont		8184747						
ANR	8184951	Symbol	pfg -> data		8184747						
ANR	8184952	Symbol	pl_tt_dynamic_encode_char		8184747						
ANR	8184953	Symbol	plfont -> offsets . GC		8184747						
ANR	8184954	Function	pl_tt_char_metrics	926:0:31945:32378							
ANR	8184955	FunctionDef	"pl_tt_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8184954	0					
ANR	8184956	CompoundStatement		929:0:32074:32378	8184954	0					
ANR	8184957	IdentifierDeclStatement	gs_glyph unused_glyph = GS_NO_GLYPH ;	930:4:32080:32115	8184954	0	True				
ANR	8184958	IdentifierDecl	unused_glyph = GS_NO_GLYPH		8184954	0					
ANR	8184959	IdentifierDeclType	gs_glyph		8184954	0					
ANR	8184960	Identifier	unused_glyph		8184954	1					
ANR	8184961	AssignmentExpression	unused_glyph = GS_NO_GLYPH		8184954	2		=			
ANR	8184962	Identifier	GS_NO_GLYPH		8184954	0					
ANR	8184963	Identifier	GS_NO_GLYPH		8184954	1					
ANR	8184964	IdentifierDeclStatement	"gs_glyph glyph = pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph ) ;"	931:4:32121:32203	8184954	1	True				
ANR	8184965	IdentifierDecl	"glyph = pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph )"		8184954	0					
ANR	8184966	IdentifierDeclType	gs_glyph		8184954	0					
ANR	8184967	Identifier	glyph		8184954	1					
ANR	8184968	AssignmentExpression	"glyph = pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph )"		8184954	2		=			
ANR	8184969	Identifier	glyph		8184954	0					
ANR	8184970	CallExpression	"pl_tt_encode_char ( plfont -> pfont , char_code , unused_glyph )"		8184954	1					
ANR	8184971	Callee	pl_tt_encode_char		8184954	0					
ANR	8184972	Identifier	pl_tt_encode_char		8184954	0					
ANR	8184973	ArgumentList	plfont -> pfont		8184954	1					
ANR	8184974	Argument	plfont -> pfont		8184954	0					
ANR	8184975	PtrMemberAccess	plfont -> pfont		8184954	0					
ANR	8184976	Identifier	plfont		8184954	0					
ANR	8184977	Identifier	pfont		8184954	1					
ANR	8184978	Argument	char_code		8184954	1					
ANR	8184979	Identifier	char_code		8184954	0					
ANR	8184980	Argument	unused_glyph		8184954	2					
ANR	8184981	Identifier	unused_glyph		8184954	0					
ANR	8184982	IfStatement	if ( glyph == GS_NO_GLYPH )		8184954	2					
ANR	8184983	Condition	glyph == GS_NO_GLYPH	933:8:32213:32232	8184954	0	True				
ANR	8184984	EqualityExpression	glyph == GS_NO_GLYPH		8184954	0		==			
ANR	8184985	Identifier	glyph		8184954	0					
ANR	8184986	Identifier	GS_NO_GLYPH		8184954	1					
ANR	8184987	CompoundStatement		5:30:160:160	8184954	1					
ANR	8184988	ReturnStatement	return 1 ;	934:8:32245:32253	8184954	0	True				
ANR	8184989	PrimaryExpression	1		8184954	0					
ANR	8184990	ReturnStatement	"return gs_type42_get_metrics ( ( gs_font_type42 * ) plfont -> pfont , glyph , metrics ) ;"	936:4:32265:32376	8184954	3	True				
ANR	8184991	CallExpression	"gs_type42_get_metrics ( ( gs_font_type42 * ) plfont -> pfont , glyph , metrics )"		8184954	0					
ANR	8184992	Callee	gs_type42_get_metrics		8184954	0					
ANR	8184993	Identifier	gs_type42_get_metrics		8184954	0					
ANR	8184994	ArgumentList	( gs_font_type42 * ) plfont -> pfont		8184954	1					
ANR	8184995	Argument	( gs_font_type42 * ) plfont -> pfont		8184954	0					
ANR	8184996	CastExpression	( gs_font_type42 * ) plfont -> pfont		8184954	0					
ANR	8184997	CastTarget	gs_font_type42 *		8184954	0					
ANR	8184998	PtrMemberAccess	plfont -> pfont		8184954	1					
ANR	8184999	Identifier	plfont		8184954	0					
ANR	8185000	Identifier	pfont		8184954	1					
ANR	8185001	Argument	glyph		8184954	1					
ANR	8185002	Identifier	glyph		8184954	0					
ANR	8185003	Argument	metrics		8184954	2					
ANR	8185004	Identifier	metrics		8184954	0					
ANR	8185005	ReturnType	static int		8184954	1					
ANR	8185006	Identifier	pl_tt_char_metrics		8184954	2					
ANR	8185007	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8184954	3					
ANR	8185008	Parameter	const pl_font_t * plfont	927:19:31975:31998	8184954	0	True				
ANR	8185009	ParameterType	const pl_font_t *		8184954	0					
ANR	8185010	Identifier	plfont		8184954	1					
ANR	8185011	Parameter	const void * pgs	927:45:32001:32015	8184954	1	True				
ANR	8185012	ParameterType	const void *		8184954	0					
ANR	8185013	Identifier	pgs		8184954	1					
ANR	8185014	Parameter	gs_char char_code	928:19:32037:32053	8184954	2	True				
ANR	8185015	ParameterType	gs_char		8184954	0					
ANR	8185016	Identifier	char_code		8184954	1					
ANR	8185017	Parameter	float metrics [ 4 ]	928:38:32056:32071	8184954	3	True				
ANR	8185018	ParameterType	float [ 4 ]		8184954	0					
ANR	8185019	Identifier	metrics		8184954	1					
ANR	8185020	CFGEntryNode	ENTRY		8184954		True				
ANR	8185021	CFGExitNode	EXIT		8184954		True				
ANR	8185022	Symbol	gs_type42_get_metrics		8184954						
ANR	8185023	Symbol	GS_NO_GLYPH		8184954						
ANR	8185024	Symbol	glyph		8184954						
ANR	8185025	Symbol	plfont -> pfont		8184954						
ANR	8185026	Symbol	pl_tt_encode_char		8184954						
ANR	8185027	Symbol	unused_glyph		8184954						
ANR	8185028	Symbol	* plfont		8184954						
ANR	8185029	Symbol	char_code		8184954						
ANR	8185030	Symbol	plfont		8184954						
ANR	8185031	Symbol	metrics		8184954						
ANR	8185032	Symbol	pgs		8184954						
ANR	8185033	Function	pl_tt_char_width	941:0:32447:33299							
ANR	8185034	FunctionDef	"pl_tt_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8185033	0					
ANR	8185035	CompoundStatement		944:0:32573:33299	8185033	0					
ANR	8185036	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	945:4:32579:32609	8185033	0	True				
ANR	8185037	IdentifierDecl	* pfont = plfont -> pfont		8185033	0					
ANR	8185038	IdentifierDeclType	gs_font *		8185033	0					
ANR	8185039	Identifier	pfont		8185033	1					
ANR	8185040	AssignmentExpression	* pfont = plfont -> pfont		8185033	2		=			
ANR	8185041	Identifier	pfont		8185033	0					
ANR	8185042	PtrMemberAccess	plfont -> pfont		8185033	1					
ANR	8185043	Identifier	plfont		8185033	0					
ANR	8185044	Identifier	pfont		8185033	1					
ANR	8185045	IdentifierDeclStatement	gs_char chr = char_code ;	946:4:32615:32638	8185033	1	True				
ANR	8185046	IdentifierDecl	chr = char_code		8185033	0					
ANR	8185047	IdentifierDeclType	gs_char		8185033	0					
ANR	8185048	Identifier	chr		8185033	1					
ANR	8185049	AssignmentExpression	chr = char_code		8185033	2		=			
ANR	8185050	Identifier	char_code		8185033	0					
ANR	8185051	Identifier	char_code		8185033	1					
ANR	8185052	IdentifierDeclStatement	gs_glyph unused_glyph = GS_NO_GLYPH ;	947:4:32644:32679	8185033	2	True				
ANR	8185053	IdentifierDecl	unused_glyph = GS_NO_GLYPH		8185033	0					
ANR	8185054	IdentifierDeclType	gs_glyph		8185033	0					
ANR	8185055	Identifier	unused_glyph		8185033	1					
ANR	8185056	AssignmentExpression	unused_glyph = GS_NO_GLYPH		8185033	2		=			
ANR	8185057	Identifier	GS_NO_GLYPH		8185033	0					
ANR	8185058	Identifier	GS_NO_GLYPH		8185033	1					
ANR	8185059	IdentifierDeclStatement	"gs_glyph glyph = pl_tt_encode_char ( pfont , chr , unused_glyph ) ;"	948:4:32685:32745	8185033	3	True				
ANR	8185060	IdentifierDecl	"glyph = pl_tt_encode_char ( pfont , chr , unused_glyph )"		8185033	0					
ANR	8185061	IdentifierDeclType	gs_glyph		8185033	0					
ANR	8185062	Identifier	glyph		8185033	1					
ANR	8185063	AssignmentExpression	"glyph = pl_tt_encode_char ( pfont , chr , unused_glyph )"		8185033	2		=			
ANR	8185064	Identifier	glyph		8185033	0					
ANR	8185065	CallExpression	"pl_tt_encode_char ( pfont , chr , unused_glyph )"		8185033	1					
ANR	8185066	Callee	pl_tt_encode_char		8185033	0					
ANR	8185067	Identifier	pl_tt_encode_char		8185033	0					
ANR	8185068	ArgumentList	pfont		8185033	1					
ANR	8185069	Argument	pfont		8185033	0					
ANR	8185070	Identifier	pfont		8185033	0					
ANR	8185071	Argument	chr		8185033	1					
ANR	8185072	Identifier	chr		8185033	0					
ANR	8185073	Argument	unused_glyph		8185033	2					
ANR	8185074	Identifier	unused_glyph		8185033	0					
ANR	8185075	IdentifierDeclStatement	int code ;	949:4:32751:32759	8185033	4	True				
ANR	8185076	IdentifierDecl	code		8185033	0					
ANR	8185077	IdentifierDeclType	int		8185033	0					
ANR	8185078	Identifier	code		8185033	1					
ANR	8185079	IdentifierDeclStatement	float sbw [ 4 ] ;	950:4:32765:32777	8185033	5	True				
ANR	8185080	IdentifierDecl	sbw [ 4 ]		8185033	0					
ANR	8185081	IdentifierDeclType	float [ 4 ]		8185033	0					
ANR	8185082	Identifier	sbw		8185033	1					
ANR	8185083	PrimaryExpression	4		8185033	2					
ANR	8185084	ExpressionStatement	pwidth -> x = pwidth -> y = 0	952:4:32784:32809	8185033	6	True				
ANR	8185085	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8185033	0		=			
ANR	8185086	PtrMemberAccess	pwidth -> x		8185033	0					
ANR	8185087	Identifier	pwidth		8185033	0					
ANR	8185088	Identifier	x		8185033	1					
ANR	8185089	AssignmentExpression	pwidth -> y = 0		8185033	1		=			
ANR	8185090	PtrMemberAccess	pwidth -> y		8185033	0					
ANR	8185091	Identifier	pwidth		8185033	0					
ANR	8185092	Identifier	y		8185033	1					
ANR	8185093	PrimaryExpression	0		8185033	1					
ANR	8185094	IfStatement	if ( pfont -> WMode & 1 )		8185033	7					
ANR	8185095	Condition	pfont -> WMode & 1	955:8:32863:32878	8185033	0	True				
ANR	8185096	BitAndExpression	pfont -> WMode & 1		8185033	0		&			
ANR	8185097	PtrMemberAccess	pfont -> WMode		8185033	0					
ANR	8185098	Identifier	pfont		8185033	0					
ANR	8185099	Identifier	WMode		8185033	1					
ANR	8185100	PrimaryExpression	1		8185033	1					
ANR	8185101	CompoundStatement		13:8:317:374	8185033	1					
ANR	8185102	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph , plfont ) ;"	956:8:32891:32948	8185033	0	True				
ANR	8185103	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8185033	0					
ANR	8185104	IdentifierDeclType	gs_glyph		8185033	0					
ANR	8185105	Identifier	vertical		8185033	1					
ANR	8185106	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8185033	2		=			
ANR	8185107	Identifier	vertical		8185033	0					
ANR	8185108	CallExpression	"pl_font_vertical_glyph ( glyph , plfont )"		8185033	1					
ANR	8185109	Callee	pl_font_vertical_glyph		8185033	0					
ANR	8185110	Identifier	pl_font_vertical_glyph		8185033	0					
ANR	8185111	ArgumentList	glyph		8185033	1					
ANR	8185112	Argument	glyph		8185033	0					
ANR	8185113	Identifier	glyph		8185033	0					
ANR	8185114	Argument	plfont		8185033	1					
ANR	8185115	Identifier	plfont		8185033	0					
ANR	8185116	IfStatement	if ( vertical != GS_NO_GLYPH )		8185033	1					
ANR	8185117	Condition	vertical != GS_NO_GLYPH	958:12:32963:32985	8185033	0	True				
ANR	8185118	EqualityExpression	vertical != GS_NO_GLYPH		8185033	0		!=			
ANR	8185119	Identifier	vertical		8185033	0					
ANR	8185120	Identifier	GS_NO_GLYPH		8185033	1					
ANR	8185121	ExpressionStatement	glyph = vertical	959:12:33000:33016	8185033	1	True				
ANR	8185122	AssignmentExpression	glyph = vertical		8185033	0		=			
ANR	8185123	Identifier	glyph		8185033	0					
ANR	8185124	Identifier	vertical		8185033	1					
ANR	8185125	IfStatement	if ( glyph == 0xffff || glyph == GS_NO_GLYPH )		8185033	8					
ANR	8185126	Condition	glyph == 0xffff || glyph == GS_NO_GLYPH	963:8:33063:33101	8185033	0	True				
ANR	8185127	OrExpression	glyph == 0xffff || glyph == GS_NO_GLYPH		8185033	0		||			
ANR	8185128	EqualityExpression	glyph == 0xffff		8185033	0		==			
ANR	8185129	Identifier	glyph		8185033	0					
ANR	8185130	PrimaryExpression	0xffff		8185033	1					
ANR	8185131	EqualityExpression	glyph == GS_NO_GLYPH		8185033	1		==			
ANR	8185132	Identifier	glyph		8185033	0					
ANR	8185133	Identifier	GS_NO_GLYPH		8185033	1					
ANR	8185134	ReturnStatement	return 1 ;	964:8:33112:33120	8185033	1	True				
ANR	8185135	PrimaryExpression	1		8185033	0					
ANR	8185136	ExpressionStatement	"code = gs_type42_get_metrics ( ( gs_font_type42 * ) pfont , glyph , sbw )"	966:4:33127:33193	8185033	9	True				
ANR	8185137	AssignmentExpression	"code = gs_type42_get_metrics ( ( gs_font_type42 * ) pfont , glyph , sbw )"		8185033	0		=			
ANR	8185138	Identifier	code		8185033	0					
ANR	8185139	CallExpression	"gs_type42_get_metrics ( ( gs_font_type42 * ) pfont , glyph , sbw )"		8185033	1					
ANR	8185140	Callee	gs_type42_get_metrics		8185033	0					
ANR	8185141	Identifier	gs_type42_get_metrics		8185033	0					
ANR	8185142	ArgumentList	( gs_font_type42 * ) pfont		8185033	1					
ANR	8185143	Argument	( gs_font_type42 * ) pfont		8185033	0					
ANR	8185144	CastExpression	( gs_font_type42 * ) pfont		8185033	0					
ANR	8185145	CastTarget	gs_font_type42 *		8185033	0					
ANR	8185146	Identifier	pfont		8185033	1					
ANR	8185147	Argument	glyph		8185033	1					
ANR	8185148	Identifier	glyph		8185033	0					
ANR	8185149	Argument	sbw		8185033	2					
ANR	8185150	Identifier	sbw		8185033	0					
ANR	8185151	IfStatement	if ( code < 0 )		8185033	10					
ANR	8185152	Condition	code < 0	967:8:33203:33210	8185033	0	True				
ANR	8185153	RelationalExpression	code < 0		8185033	0		<			
ANR	8185154	Identifier	code		8185033	0					
ANR	8185155	PrimaryExpression	0		8185033	1					
ANR	8185156	ReturnStatement	return code ;	968:8:33221:33232	8185033	1	True				
ANR	8185157	Identifier	code		8185033	0					
ANR	8185158	ExpressionStatement	pwidth -> x = sbw [ 2 ]	970:4:33265:33283	8185033	11	True				
ANR	8185159	AssignmentExpression	pwidth -> x = sbw [ 2 ]		8185033	0		=			
ANR	8185160	PtrMemberAccess	pwidth -> x		8185033	0					
ANR	8185161	Identifier	pwidth		8185033	0					
ANR	8185162	Identifier	x		8185033	1					
ANR	8185163	ArrayIndexing	sbw [ 2 ]		8185033	1					
ANR	8185164	Identifier	sbw		8185033	0					
ANR	8185165	PrimaryExpression	2		8185033	1					
ANR	8185166	ReturnStatement	return 0 ;	971:4:33289:33297	8185033	12	True				
ANR	8185167	PrimaryExpression	0		8185033	0					
ANR	8185168	ReturnType	static int		8185033	1					
ANR	8185169	Identifier	pl_tt_char_width		8185033	2					
ANR	8185170	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8185033	3					
ANR	8185171	Parameter	const pl_font_t * plfont	942:17:32475:32498	8185033	0	True				
ANR	8185172	ParameterType	const pl_font_t *		8185033	0					
ANR	8185173	Identifier	plfont		8185033	1					
ANR	8185174	Parameter	const void * pgs	942:43:32501:32515	8185033	1	True				
ANR	8185175	ParameterType	const void *		8185033	0					
ANR	8185176	Identifier	pgs		8185033	1					
ANR	8185177	Parameter	gs_char char_code	942:60:32518:32534	8185033	2	True				
ANR	8185178	ParameterType	gs_char		8185033	0					
ANR	8185179	Identifier	char_code		8185033	1					
ANR	8185180	Parameter	gs_point * pwidth	943:17:32554:32570	8185033	3	True				
ANR	8185181	ParameterType	gs_point *		8185033	0					
ANR	8185182	Identifier	pwidth		8185033	1					
ANR	8185183	CFGEntryNode	ENTRY		8185033		True				
ANR	8185184	CFGExitNode	EXIT		8185033		True				
ANR	8185185	Symbol	code		8185033						
ANR	8185186	Symbol	pfont		8185033						
ANR	8185187	Symbol	pl_tt_encode_char		8185033						
ANR	8185188	Symbol	unused_glyph		8185033						
ANR	8185189	Symbol	pwidth -> y		8185033						
ANR	8185190	Symbol	char_code		8185033						
ANR	8185191	Symbol	sbw		8185033						
ANR	8185192	Symbol	pwidth		8185033						
ANR	8185193	Symbol	vertical		8185033						
ANR	8185194	Symbol	plfont		8185033						
ANR	8185195	Symbol	chr		8185033						
ANR	8185196	Symbol	pwidth -> x		8185033						
ANR	8185197	Symbol	gs_type42_get_metrics		8185033						
ANR	8185198	Symbol	GS_NO_GLYPH		8185033						
ANR	8185199	Symbol	glyph		8185033						
ANR	8185200	Symbol	* pfont		8185033						
ANR	8185201	Symbol	pfont -> WMode		8185033						
ANR	8185202	Symbol	* sbw		8185033						
ANR	8185203	Symbol	plfont -> pfont		8185033						
ANR	8185204	Symbol	* plfont		8185033						
ANR	8185205	Symbol	* pwidth		8185033						
ANR	8185206	Symbol	pl_font_vertical_glyph		8185033						
ANR	8185207	Symbol	pgs		8185033						
ANR	8185208	Function	pl_tt_build_char	975:0:33337:41414							
ANR	8185209	FunctionDef	"pl_tt_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph orig_glyph)"		8185208	0					
ANR	8185210	CompoundStatement		978:0:33472:41414	8185208	0					
ANR	8185211	IdentifierDeclStatement	gs_glyph glyph = orig_glyph ;	979:4:33478:33505	8185208	0	True				
ANR	8185212	IdentifierDecl	glyph = orig_glyph		8185208	0					
ANR	8185213	IdentifierDeclType	gs_glyph		8185208	0					
ANR	8185214	Identifier	glyph		8185208	1					
ANR	8185215	AssignmentExpression	glyph = orig_glyph		8185208	2		=			
ANR	8185216	Identifier	orig_glyph		8185208	0					
ANR	8185217	Identifier	orig_glyph		8185208	1					
ANR	8185218	Statement	define	981:1:33509:33514	8185208	1	True				
ANR	8185219	Statement	pbfont	981:8:33516:33521	8185208	2	True				
ANR	8185220	Statement	(	981:15:33523:33523	8185208	3	True				
ANR	8185221	Statement	(	981:16:33524:33524	8185208	4	True				
ANR	8185222	Statement	gs_font_base	981:17:33525:33536	8185208	5	True				
ANR	8185223	Statement	*	981:30:33538:33538	8185208	6	True				
ANR	8185224	Statement	)	981:31:33539:33539	8185208	7	True				
ANR	8185225	Statement	pfont	981:32:33540:33544	8185208	8	True				
ANR	8185226	Statement	)	981:37:33545:33545	8185208	9	True				
ANR	8185227	Statement	define	982:1:33548:33553	8185208	10	True				
ANR	8185228	Statement	pfont42	982:8:33555:33561	8185208	11	True				
ANR	8185229	Statement	(	982:16:33563:33563	8185208	12	True				
ANR	8185230	Statement	(	982:17:33564:33564	8185208	13	True				
ANR	8185231	Statement	gs_font_type42	982:18:33565:33578	8185208	14	True				
ANR	8185232	Statement	*	982:33:33580:33580	8185208	15	True				
ANR	8185233	Statement	)	982:34:33581:33581	8185208	16	True				
ANR	8185234	Statement	pfont	982:35:33582:33586	8185208	17	True				
ANR	8185235	Statement	)	982:40:33587:33587	8185208	18	True				
ANR	8185236	IdentifierDeclStatement	int code ;	983:4:33593:33601	8185208	19	True				
ANR	8185237	IdentifierDecl	code		8185208	0					
ANR	8185238	IdentifierDeclType	int		8185208	0					
ANR	8185239	Identifier	code		8185208	1					
ANR	8185240	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	984:4:33607:33659	8185208	20	True				
ANR	8185241	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8185208	0					
ANR	8185242	IdentifierDeclType	pl_font_t *		8185208	0					
ANR	8185243	Identifier	plfont		8185208	1					
ANR	8185244	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8185208	2		=			
ANR	8185245	Identifier	plfont		8185208	0					
ANR	8185246	CastExpression	( pl_font_t * ) pfont -> client_data		8185208	1					
ANR	8185247	CastTarget	pl_font_t *		8185208	0					
ANR	8185248	PtrMemberAccess	pfont -> client_data		8185208	1					
ANR	8185249	Identifier	pfont		8185208	0					
ANR	8185250	Identifier	client_data		8185208	1					
ANR	8185251	IdentifierDeclStatement	float bold_fraction = gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction ;	985:4:33665:33763	8185208	21	True				
ANR	8185252	IdentifierDecl	bold_fraction = gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction		8185208	0					
ANR	8185253	IdentifierDeclType	float		8185208	0					
ANR	8185254	Identifier	bold_fraction		8185208	1					
ANR	8185255	AssignmentExpression	bold_fraction = gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction		8185208	2		=			
ANR	8185256	Identifier	bold_fraction		8185208	0					
ANR	8185257	ConditionalExpression	gs_show_in_charpath ( penum ) != cpm_show ? 0.0 : plfont -> bold_fraction		8185208	1					
ANR	8185258	Condition	gs_show_in_charpath ( penum ) != cpm_show		8185208	0					
ANR	8185259	EqualityExpression	gs_show_in_charpath ( penum ) != cpm_show		8185208	0		!=			
ANR	8185260	CallExpression	gs_show_in_charpath ( penum )		8185208	0					
ANR	8185261	Callee	gs_show_in_charpath		8185208	0					
ANR	8185262	Identifier	gs_show_in_charpath		8185208	0					
ANR	8185263	ArgumentList	penum		8185208	1					
ANR	8185264	Argument	penum		8185208	0					
ANR	8185265	Identifier	penum		8185208	0					
ANR	8185266	Identifier	cpm_show		8185208	1					
ANR	8185267	PrimaryExpression	0.0		8185208	1					
ANR	8185268	PtrMemberAccess	plfont -> bold_fraction		8185208	2					
ANR	8185269	Identifier	plfont		8185208	0					
ANR	8185270	Identifier	bold_fraction		8185208	1					
ANR	8185271	IdentifierDeclStatement	uint bold_added ;	987:4:33769:33784	8185208	22	True				
ANR	8185272	IdentifierDecl	bold_added		8185208	0					
ANR	8185273	IdentifierDeclType	uint		8185208	0					
ANR	8185274	Identifier	bold_added		8185208	1					
ANR	8185275	IdentifierDeclStatement	double scale = 1.0 ;	988:4:33790:33808	8185208	23	True				
ANR	8185276	IdentifierDecl	scale = 1.0		8185208	0					
ANR	8185277	IdentifierDeclType	double		8185208	0					
ANR	8185278	Identifier	scale		8185208	1					
ANR	8185279	AssignmentExpression	scale = 1.0		8185208	2		=			
ANR	8185280	Identifier	scale		8185208	0					
ANR	8185281	PrimaryExpression	1.0		8185208	1					
ANR	8185282	IdentifierDeclStatement	"float sbw [ 4 ] , w2 [ 6 ] ;"	989:4:33814:33833	8185208	24	True				
ANR	8185283	IdentifierDecl	sbw [ 4 ]		8185208	0					
ANR	8185284	IdentifierDeclType	float [ 4 ]		8185208	0					
ANR	8185285	Identifier	sbw		8185208	1					
ANR	8185286	PrimaryExpression	4		8185208	2					
ANR	8185287	IdentifierDecl	w2 [ 6 ]		8185208	1					
ANR	8185288	IdentifierDeclType	float [ 6 ]		8185208	0					
ANR	8185289	Identifier	w2		8185208	1					
ANR	8185290	PrimaryExpression	6		8185208	2					
ANR	8185291	IdentifierDeclStatement	int ipx = 0 ;	990:4:33839:33850	8185208	25	True				
ANR	8185292	IdentifierDecl	ipx = 0		8185208	0					
ANR	8185293	IdentifierDeclType	int		8185208	0					
ANR	8185294	Identifier	ipx		8185208	1					
ANR	8185295	AssignmentExpression	ipx = 0		8185208	2		=			
ANR	8185296	Identifier	ipx		8185208	0					
ANR	8185297	PrimaryExpression	0		8185208	1					
ANR	8185298	IdentifierDeclStatement	int ipy = 0 ;	991:4:33856:33867	8185208	26	True				
ANR	8185299	IdentifierDecl	ipy = 0		8185208	0					
ANR	8185300	IdentifierDeclType	int		8185208	0					
ANR	8185301	Identifier	ipy		8185208	1					
ANR	8185302	AssignmentExpression	ipy = 0		8185208	2		=			
ANR	8185303	Identifier	ipy		8185208	0					
ANR	8185304	PrimaryExpression	0		8185208	1					
ANR	8185305	IdentifierDeclStatement	"int iqx , iqy ;"	992:4:33873:33885	8185208	27	True				
ANR	8185306	IdentifierDecl	iqx		8185208	0					
ANR	8185307	IdentifierDeclType	int		8185208	0					
ANR	8185308	Identifier	iqx		8185208	1					
ANR	8185309	IdentifierDecl	iqy		8185208	1					
ANR	8185310	IdentifierDeclType	int		8185208	0					
ANR	8185311	Identifier	iqy		8185208	1					
ANR	8185312	IdentifierDeclStatement	gx_device_memory * pmdev ;	993:4:33891:33914	8185208	28	True				
ANR	8185313	IdentifierDecl	* pmdev		8185208	0					
ANR	8185314	IdentifierDeclType	gx_device_memory *		8185208	0					
ANR	8185315	Identifier	pmdev		8185208	1					
ANR	8185316	IdentifierDeclStatement	bool ctm_modified = false ;	994:4:33920:33945	8185208	29	True				
ANR	8185317	IdentifierDecl	ctm_modified = false		8185208	0					
ANR	8185318	IdentifierDeclType	bool		8185208	0					
ANR	8185319	Identifier	ctm_modified		8185208	1					
ANR	8185320	AssignmentExpression	ctm_modified = false		8185208	2		=			
ANR	8185321	Identifier	false		8185208	0					
ANR	8185322	Identifier	false		8185208	1					
ANR	8185323	IdentifierDeclStatement	bool bold_device_created = false ;	995:4:33951:33983	8185208	30	True				
ANR	8185324	IdentifierDecl	bold_device_created = false		8185208	0					
ANR	8185325	IdentifierDeclType	bool		8185208	0					
ANR	8185326	Identifier	bold_device_created		8185208	1					
ANR	8185327	AssignmentExpression	bold_device_created = false		8185208	2		=			
ANR	8185328	Identifier	false		8185208	0					
ANR	8185329	Identifier	false		8185208	1					
ANR	8185330	IdentifierDeclStatement	gs_matrix save_ctm ;	996:4:33989:34007	8185208	31	True				
ANR	8185331	IdentifierDecl	save_ctm		8185208	0					
ANR	8185332	IdentifierDeclType	gs_matrix		8185208	0					
ANR	8185333	Identifier	save_ctm		8185208	1					
ANR	8185334	Statement	define	998:1:34011:34016	8185208	32	True				
ANR	8185335	Statement	isDownloaded	998:8:34018:34029	8185208	33	True				
ANR	8185336	Statement	(	998:20:34030:34030	8185208	34	True				
ANR	8185337	Statement	p42	998:21:34031:34033	8185208	35	True				
ANR	8185338	Statement	)	998:24:34034:34034	8185208	36	True				
ANR	8185339	Statement	(	998:26:34036:34036	8185208	37	True				
ANR	8185340	Statement	(	998:27:34037:34037	8185208	38	True				
ANR	8185341	Statement	p42	998:28:34038:34040	8185208	39	True				
ANR	8185342	Statement	)	998:31:34041:34041	8185208	40	True				
ANR	8185343	Statement	->	998:32:34042:34043	8185208	41	True				
ANR	8185344	Statement	data	998:34:34044:34047	8185208	42	True				
ANR	8185345	Statement	.	998:38:34048:34048	8185208	43	True				
ANR	8185346	Statement	proc_data	998:39:34049:34057	8185208	44	True				
ANR	8185347	Statement	==	998:49:34059:34060	8185208	45	True				
ANR	8185348	Statement	0	998:52:34062:34062	8185208	46	True				
ANR	8185349	Statement	)	998:53:34063:34063	8185208	47	True				
ANR	8185350	Statement	define	1000:3:34096:34101	8185208	48	True				
ANR	8185351	Statement	tt_set_cache	1000:10:34103:34114	8185208	49	True				
ANR	8185352	Statement	(	1000:22:34115:34115	8185208	50	True				
ANR	8185353	Statement	penum	1000:23:34116:34120	8185208	51	True				
ANR	8185354	Statement	","	1000:28:34121:34121	8185208	52	True				
ANR	8185355	Statement	pgs	1000:30:34123:34125	8185208	53	True				
ANR	8185356	Statement	","	1000:33:34126:34126	8185208	54	True				
ANR	8185357	Statement	w2	1000:35:34128:34129	8185208	55	True				
ANR	8185358	Statement	)	1000:37:34130:34130	8185208	56	True				
ANR	8185359	Statement	gs_setcachedevice	1001:5:34138:34154	8185208	57	True				
ANR	8185360	Statement	(	1001:22:34155:34155	8185208	58	True				
ANR	8185361	Statement	penum	1001:23:34156:34160	8185208	59	True				
ANR	8185362	Statement	","	1001:28:34161:34161	8185208	60	True				
ANR	8185363	Statement	pgs	1001:30:34163:34165	8185208	61	True				
ANR	8185364	Statement	","	1001:33:34166:34166	8185208	62	True				
ANR	8185365	Statement	w2	1001:35:34168:34169	8185208	63	True				
ANR	8185366	Statement	)	1001:37:34170:34170	8185208	64	True				
ANR	8185367	IfStatement	if ( glyph == GS_NO_GLYPH )		8185208	65					
ANR	8185368	Condition	glyph == GS_NO_GLYPH	1007:8:34301:34320	8185208	0	True				
ANR	8185369	EqualityExpression	glyph == GS_NO_GLYPH		8185208	0		==			
ANR	8185370	Identifier	glyph		8185208	0					
ANR	8185371	Identifier	GS_NO_GLYPH		8185208	1					
ANR	8185372	ReturnStatement	return 0 ;	1008:8:34331:34339	8185208	1	True				
ANR	8185373	PrimaryExpression	0		8185208	0					
ANR	8185374	ExpressionStatement	"code = gs_type42_get_metrics ( pfont42 , glyph , sbw )"	1010:4:34397:34446	8185208	66	True				
ANR	8185375	AssignmentExpression	"code = gs_type42_get_metrics ( pfont42 , glyph , sbw )"		8185208	0		=			
ANR	8185376	Identifier	code		8185208	0					
ANR	8185377	CallExpression	"gs_type42_get_metrics ( pfont42 , glyph , sbw )"		8185208	1					
ANR	8185378	Callee	gs_type42_get_metrics		8185208	0					
ANR	8185379	Identifier	gs_type42_get_metrics		8185208	0					
ANR	8185380	ArgumentList	pfont42		8185208	1					
ANR	8185381	Argument	pfont42		8185208	0					
ANR	8185382	Identifier	pfont42		8185208	0					
ANR	8185383	Argument	glyph		8185208	1					
ANR	8185384	Identifier	glyph		8185208	0					
ANR	8185385	Argument	sbw		8185208	2					
ANR	8185386	Identifier	sbw		8185208	0					
ANR	8185387	IfStatement	if ( code < 0 )		8185208	67					
ANR	8185388	Condition	code < 0	1011:8:34456:34463	8185208	0	True				
ANR	8185389	RelationalExpression	code < 0		8185208	0		<			
ANR	8185390	Identifier	code		8185208	0					
ANR	8185391	PrimaryExpression	0		8185208	1					
ANR	8185392	ReturnStatement	return code ;	1012:8:34474:34485	8185208	1	True				
ANR	8185393	Identifier	code		8185208	0					
ANR	8185394	ExpressionStatement	"w2 [ 0 ] = sbw [ 2 ] , w2 [ 1 ] = sbw [ 3 ]"	1013:4:34491:34521	8185208	68	True				
ANR	8185395	Expression	"w2 [ 0 ] = sbw [ 2 ] , w2 [ 1 ] = sbw [ 3 ]"		8185208	0					
ANR	8185396	AssignmentExpression	w2 [ 0 ] = sbw [ 2 ]		8185208	0		=			
ANR	8185397	ArrayIndexing	w2 [ 0 ]		8185208	0					
ANR	8185398	Identifier	w2		8185208	0					
ANR	8185399	PrimaryExpression	0		8185208	1					
ANR	8185400	ArrayIndexing	sbw [ 2 ]		8185208	1					
ANR	8185401	Identifier	sbw		8185208	0					
ANR	8185402	PrimaryExpression	2		8185208	1					
ANR	8185403	AssignmentExpression	w2 [ 1 ] = sbw [ 3 ]		8185208	1		=			
ANR	8185404	ArrayIndexing	w2 [ 1 ]		8185208	0					
ANR	8185405	Identifier	w2		8185208	0					
ANR	8185406	PrimaryExpression	1		8185208	1					
ANR	8185407	ArrayIndexing	sbw [ 3 ]		8185208	1					
ANR	8185408	Identifier	sbw		8185208	0					
ANR	8185409	PrimaryExpression	3		8185208	1					
ANR	8185410	CompoundStatement		41:8:1124:1164	8185208	69					
ANR	8185411	IdentifierDeclStatement	const gs_rect * pbbox = & pbfont -> FontBBox ;	1018:8:34597:34637	8185208	0	True				
ANR	8185412	IdentifierDecl	* pbbox = & pbfont -> FontBBox		8185208	0					
ANR	8185413	IdentifierDeclType	const gs_rect *		8185208	0					
ANR	8185414	Identifier	pbbox		8185208	1					
ANR	8185415	AssignmentExpression	* pbbox = & pbfont -> FontBBox		8185208	2		=			
ANR	8185416	Identifier	pbbox		8185208	0					
ANR	8185417	UnaryOperationExpression	& pbfont -> FontBBox		8185208	1					
ANR	8185418	UnaryOperator	&		8185208	0					
ANR	8185419	PtrMemberAccess	pbfont -> FontBBox		8185208	1					
ANR	8185420	Identifier	pbfont		8185208	0					
ANR	8185421	Identifier	FontBBox		8185208	1					
ANR	8185422	ExpressionStatement	"w2 [ 2 ] = pbbox -> p . x , w2 [ 3 ] = pbbox -> p . y"	1020:8:34648:34686	8185208	1	True				
ANR	8185423	Expression	"w2 [ 2 ] = pbbox -> p . x , w2 [ 3 ] = pbbox -> p . y"		8185208	0					
ANR	8185424	AssignmentExpression	w2 [ 2 ] = pbbox -> p . x		8185208	0		=			
ANR	8185425	ArrayIndexing	w2 [ 2 ]		8185208	0					
ANR	8185426	Identifier	w2		8185208	0					
ANR	8185427	PrimaryExpression	2		8185208	1					
ANR	8185428	MemberAccess	pbbox -> p . x		8185208	1					
ANR	8185429	PtrMemberAccess	pbbox -> p		8185208	0					
ANR	8185430	Identifier	pbbox		8185208	0					
ANR	8185431	Identifier	p		8185208	1					
ANR	8185432	Identifier	x		8185208	1					
ANR	8185433	AssignmentExpression	w2 [ 3 ] = pbbox -> p . y		8185208	1		=			
ANR	8185434	ArrayIndexing	w2 [ 3 ]		8185208	0					
ANR	8185435	Identifier	w2		8185208	0					
ANR	8185436	PrimaryExpression	3		8185208	1					
ANR	8185437	MemberAccess	pbbox -> p . y		8185208	1					
ANR	8185438	PtrMemberAccess	pbbox -> p		8185208	0					
ANR	8185439	Identifier	pbbox		8185208	0					
ANR	8185440	Identifier	p		8185208	1					
ANR	8185441	Identifier	y		8185208	1					
ANR	8185442	ExpressionStatement	"w2 [ 4 ] = pbbox -> q . x , w2 [ 5 ] = pbbox -> q . y"	1021:8:34696:34734	8185208	2	True				
ANR	8185443	Expression	"w2 [ 4 ] = pbbox -> q . x , w2 [ 5 ] = pbbox -> q . y"		8185208	0					
ANR	8185444	AssignmentExpression	w2 [ 4 ] = pbbox -> q . x		8185208	0		=			
ANR	8185445	ArrayIndexing	w2 [ 4 ]		8185208	0					
ANR	8185446	Identifier	w2		8185208	0					
ANR	8185447	PrimaryExpression	4		8185208	1					
ANR	8185448	MemberAccess	pbbox -> q . x		8185208	1					
ANR	8185449	PtrMemberAccess	pbbox -> q		8185208	0					
ANR	8185450	Identifier	pbbox		8185208	0					
ANR	8185451	Identifier	q		8185208	1					
ANR	8185452	Identifier	x		8185208	1					
ANR	8185453	AssignmentExpression	w2 [ 5 ] = pbbox -> q . y		8185208	1		=			
ANR	8185454	ArrayIndexing	w2 [ 5 ]		8185208	0					
ANR	8185455	Identifier	w2		8185208	0					
ANR	8185456	PrimaryExpression	5		8185208	1					
ANR	8185457	MemberAccess	pbbox -> q . y		8185208	1					
ANR	8185458	PtrMemberAccess	pbbox -> q		8185208	0					
ANR	8185459	Identifier	pbbox		8185208	0					
ANR	8185460	Identifier	q		8185208	1					
ANR	8185461	Identifier	y		8185208	1					
ANR	8185462	IfStatement	if ( pfont -> PaintType )		8185208	3					
ANR	8185463	Condition	pfont -> PaintType	1022:12:34748:34763	8185208	0	True				
ANR	8185464	PtrMemberAccess	pfont -> PaintType		8185208	0					
ANR	8185465	Identifier	pfont		8185208	0					
ANR	8185466	Identifier	PaintType		8185208	1					
ANR	8185467	CompoundStatement		46:12:1307:1407	8185208	1					
ANR	8185468	IdentifierDeclStatement	"double expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2 ;"	1023:12:34780:34880	8185208	0	True				
ANR	8185469	IdentifierDecl	"expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8185208	0					
ANR	8185470	IdentifierDeclType	double		8185208	0					
ANR	8185471	Identifier	expand		8185208	1					
ANR	8185472	AssignmentExpression	"expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8185208	2		=			
ANR	8185473	Identifier	expand		8185208	0					
ANR	8185474	MultiplicativeExpression	"max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8185208	1		*			
ANR	8185475	CallExpression	"max ( 1.415 , gs_currentmiterlimit ( pgs ) )"		8185208	0					
ANR	8185476	Callee	max		8185208	0					
ANR	8185477	Identifier	max		8185208	0					
ANR	8185478	ArgumentList	1.415		8185208	1					
ANR	8185479	Argument	1.415		8185208	0					
ANR	8185480	PrimaryExpression	1.415		8185208	0					
ANR	8185481	Argument	gs_currentmiterlimit ( pgs )		8185208	1					
ANR	8185482	CallExpression	gs_currentmiterlimit ( pgs )		8185208	0					
ANR	8185483	Callee	gs_currentmiterlimit		8185208	0					
ANR	8185484	Identifier	gs_currentmiterlimit		8185208	0					
ANR	8185485	ArgumentList	pgs		8185208	1					
ANR	8185486	Argument	pgs		8185208	0					
ANR	8185487	Identifier	pgs		8185208	0					
ANR	8185488	MultiplicativeExpression	gs_currentlinewidth ( pgs ) / 2		8185208	1		/			
ANR	8185489	CallExpression	gs_currentlinewidth ( pgs )		8185208	0					
ANR	8185490	Callee	gs_currentlinewidth		8185208	0					
ANR	8185491	Identifier	gs_currentlinewidth		8185208	0					
ANR	8185492	ArgumentList	pgs		8185208	1					
ANR	8185493	Argument	pgs		8185208	0					
ANR	8185494	Identifier	pgs		8185208	0					
ANR	8185495	PrimaryExpression	2		8185208	1					
ANR	8185496	ExpressionStatement	"w2 [ 2 ] -= expand , w2 [ 3 ] -= expand"	1026:12:34895:34927	8185208	1	True				
ANR	8185497	Expression	"w2 [ 2 ] -= expand , w2 [ 3 ] -= expand"		8185208	0					
ANR	8185498	AssignmentExpression	w2 [ 2 ] -= expand		8185208	0		-=			
ANR	8185499	ArrayIndexing	w2 [ 2 ]		8185208	0					
ANR	8185500	Identifier	w2		8185208	0					
ANR	8185501	PrimaryExpression	2		8185208	1					
ANR	8185502	Identifier	expand		8185208	1					
ANR	8185503	AssignmentExpression	w2 [ 3 ] -= expand		8185208	1		-=			
ANR	8185504	ArrayIndexing	w2 [ 3 ]		8185208	0					
ANR	8185505	Identifier	w2		8185208	0					
ANR	8185506	PrimaryExpression	3		8185208	1					
ANR	8185507	Identifier	expand		8185208	1					
ANR	8185508	ExpressionStatement	"w2 [ 4 ] += expand , w2 [ 5 ] += expand"	1027:12:34941:34973	8185208	2	True				
ANR	8185509	Expression	"w2 [ 4 ] += expand , w2 [ 5 ] += expand"		8185208	0					
ANR	8185510	AssignmentExpression	w2 [ 4 ] += expand		8185208	0		+=			
ANR	8185511	ArrayIndexing	w2 [ 4 ]		8185208	0					
ANR	8185512	Identifier	w2		8185208	0					
ANR	8185513	PrimaryExpression	4		8185208	1					
ANR	8185514	Identifier	expand		8185208	1					
ANR	8185515	AssignmentExpression	w2 [ 5 ] += expand		8185208	1		+=			
ANR	8185516	ArrayIndexing	w2 [ 5 ]		8185208	0					
ANR	8185517	Identifier	w2		8185208	0					
ANR	8185518	PrimaryExpression	5		8185208	1					
ANR	8185519	Identifier	expand		8185208	1					
ANR	8185520	IfStatement	"if ( ( code = gs_moveto ( pgs , 0.0 , 0.0 ) ) < 0 )"		8185208	70					
ANR	8185521	Condition	"( code = gs_moveto ( pgs , 0.0 , 0.0 ) ) < 0"	1032:8:35037:35073	8185208	0	True				
ANR	8185522	RelationalExpression	"( code = gs_moveto ( pgs , 0.0 , 0.0 ) ) < 0"		8185208	0		<			
ANR	8185523	AssignmentExpression	"code = gs_moveto ( pgs , 0.0 , 0.0 )"		8185208	0		=			
ANR	8185524	Identifier	code		8185208	0					
ANR	8185525	CallExpression	"gs_moveto ( pgs , 0.0 , 0.0 )"		8185208	1					
ANR	8185526	Callee	gs_moveto		8185208	0					
ANR	8185527	Identifier	gs_moveto		8185208	0					
ANR	8185528	ArgumentList	pgs		8185208	1					
ANR	8185529	Argument	pgs		8185208	0					
ANR	8185530	Identifier	pgs		8185208	0					
ANR	8185531	Argument	0.0		8185208	1					
ANR	8185532	PrimaryExpression	0.0		8185208	0					
ANR	8185533	Argument	0.0		8185208	2					
ANR	8185534	PrimaryExpression	0.0		8185208	0					
ANR	8185535	PrimaryExpression	0		8185208	1					
ANR	8185536	ReturnStatement	return code ;	1033:8:35084:35095	8185208	1	True				
ANR	8185537	Identifier	code		8185208	0					
ANR	8185538	CompoundStatement		58:4:1629:1629	8185208	71					
ANR	8185539	IfStatement	if ( plfont -> allow_vertical_substitutes )		8185208	0					
ANR	8185540	Condition	plfont -> allow_vertical_substitutes	1037:12:35163:35196	8185208	0	True				
ANR	8185541	PtrMemberAccess	plfont -> allow_vertical_substitutes		8185208	0					
ANR	8185542	Identifier	plfont		8185208	0					
ANR	8185543	Identifier	allow_vertical_substitutes		8185208	1					
ANR	8185544	CompoundStatement		62:12:1792:1849	8185208	1					
ANR	8185545	IdentifierDeclStatement	pl_font_t * plfont = pfont -> client_data ;	1038:12:35213:35251	8185208	0	True				
ANR	8185546	IdentifierDecl	* plfont = pfont -> client_data		8185208	0					
ANR	8185547	IdentifierDeclType	pl_font_t *		8185208	0					
ANR	8185548	Identifier	plfont		8185208	1					
ANR	8185549	AssignmentExpression	* plfont = pfont -> client_data		8185208	2		=			
ANR	8185550	Identifier	plfont		8185208	0					
ANR	8185551	PtrMemberAccess	pfont -> client_data		8185208	1					
ANR	8185552	Identifier	pfont		8185208	0					
ANR	8185553	Identifier	client_data		8185208	1					
ANR	8185554	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph , plfont ) ;"	1039:12:35265:35322	8185208	1	True				
ANR	8185555	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8185208	0					
ANR	8185556	IdentifierDeclType	gs_glyph		8185208	0					
ANR	8185557	Identifier	vertical		8185208	1					
ANR	8185558	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8185208	2		=			
ANR	8185559	Identifier	vertical		8185208	0					
ANR	8185560	CallExpression	"pl_font_vertical_glyph ( glyph , plfont )"		8185208	1					
ANR	8185561	Callee	pl_font_vertical_glyph		8185208	0					
ANR	8185562	Identifier	pl_font_vertical_glyph		8185208	0					
ANR	8185563	ArgumentList	glyph		8185208	1					
ANR	8185564	Argument	glyph		8185208	0					
ANR	8185565	Identifier	glyph		8185208	0					
ANR	8185566	Argument	plfont		8185208	1					
ANR	8185567	Identifier	plfont		8185208	0					
ANR	8185568	IfStatement	if ( vertical != GS_NO_GLYPH )		8185208	2					
ANR	8185569	Condition	vertical != GS_NO_GLYPH	1041:16:35341:35363	8185208	0	True				
ANR	8185570	EqualityExpression	vertical != GS_NO_GLYPH		8185208	0		!=			
ANR	8185571	Identifier	vertical		8185208	0					
ANR	8185572	Identifier	GS_NO_GLYPH		8185208	1					
ANR	8185573	CompoundStatement		64:41:1893:1893	8185208	1					
ANR	8185574	ExpressionStatement	glyph = vertical	1042:16:35384:35400	8185208	0	True				
ANR	8185575	AssignmentExpression	glyph = vertical		8185208	0		=			
ANR	8185576	Identifier	glyph		8185208	0					
ANR	8185577	Identifier	vertical		8185208	1					
ANR	8185578	IfStatement	if ( ( pfont -> WMode & 1 ) && sbw [ 2 ] == 1.0 )		8185208	1					
ANR	8185579	Condition	( pfont -> WMode & 1 ) && sbw [ 2 ] == 1.0	1049:12:35647:35681	8185208	0	True				
ANR	8185580	AndExpression	( pfont -> WMode & 1 ) && sbw [ 2 ] == 1.0		8185208	0		&&			
ANR	8185581	BitAndExpression	pfont -> WMode & 1		8185208	0		&			
ANR	8185582	PtrMemberAccess	pfont -> WMode		8185208	0					
ANR	8185583	Identifier	pfont		8185208	0					
ANR	8185584	Identifier	WMode		8185208	1					
ANR	8185585	PrimaryExpression	1		8185208	1					
ANR	8185586	EqualityExpression	sbw [ 2 ] == 1.0		8185208	1		==			
ANR	8185587	ArrayIndexing	sbw [ 2 ]		8185208	0					
ANR	8185588	Identifier	sbw		8185208	0					
ANR	8185589	PrimaryExpression	2		8185208	1					
ANR	8185590	PrimaryExpression	1.0		8185208	1					
ANR	8185591	CompoundStatement		72:49:2211:2211	8185208	1					
ANR	8185592	ExpressionStatement	"gs_currentmatrix ( pgs , & save_ctm )"	1051:12:35729:35761	8185208	0	True				
ANR	8185593	CallExpression	"gs_currentmatrix ( pgs , & save_ctm )"		8185208	0					
ANR	8185594	Callee	gs_currentmatrix		8185208	0					
ANR	8185595	Identifier	gs_currentmatrix		8185208	0					
ANR	8185596	ArgumentList	pgs		8185208	1					
ANR	8185597	Argument	pgs		8185208	0					
ANR	8185598	Identifier	pgs		8185208	0					
ANR	8185599	Argument	& save_ctm		8185208	1					
ANR	8185600	UnaryOperationExpression	& save_ctm		8185208	0					
ANR	8185601	UnaryOperator	&		8185208	0					
ANR	8185602	Identifier	save_ctm		8185208	1					
ANR	8185603	ExpressionStatement	ctm_modified = true	1052:12:35775:35794	8185208	1	True				
ANR	8185604	AssignmentExpression	ctm_modified = true		8185208	0		=			
ANR	8185605	Identifier	ctm_modified		8185208	0					
ANR	8185606	Identifier	true		8185208	1					
ANR	8185607	ExpressionStatement	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"	1056:12:35973:36023	8185208	2	True				
ANR	8185608	CallExpression	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"		8185208	0					
ANR	8185609	Callee	gs_translate		8185208	0					
ANR	8185610	Identifier	gs_translate		8185208	0					
ANR	8185611	ArgumentList	pgs		8185208	1					
ANR	8185612	Argument	pgs		8185208	0					
ANR	8185613	Identifier	pgs		8185208	0					
ANR	8185614	Argument	1.0 / 1.15		8185208	1					
ANR	8185615	MultiplicativeExpression	1.0 / 1.15		8185208	0		/			
ANR	8185616	PrimaryExpression	1.0		8185208	0					
ANR	8185617	PrimaryExpression	1.15		8185208	1					
ANR	8185618	Argument	- ( 1.0 - 1.0 / 1.15 )		8185208	2					
ANR	8185619	UnaryOperationExpression	- ( 1.0 - 1.0 / 1.15 )		8185208	0					
ANR	8185620	UnaryOperator	-		8185208	0					
ANR	8185621	AdditiveExpression	1.0 - 1.0 / 1.15		8185208	1		-			
ANR	8185622	PrimaryExpression	1.0		8185208	0					
ANR	8185623	MultiplicativeExpression	1.0 / 1.15		8185208	1		/			
ANR	8185624	PrimaryExpression	1.0		8185208	0					
ANR	8185625	PrimaryExpression	1.15		8185208	1					
ANR	8185626	ExpressionStatement	"gs_rotate ( pgs , 90 )"	1057:12:36037:36055	8185208	3	True				
ANR	8185627	CallExpression	"gs_rotate ( pgs , 90 )"		8185208	0					
ANR	8185628	Callee	gs_rotate		8185208	0					
ANR	8185629	Identifier	gs_rotate		8185208	0					
ANR	8185630	ArgumentList	pgs		8185208	1					
ANR	8185631	Argument	pgs		8185208	0					
ANR	8185632	Identifier	pgs		8185208	0					
ANR	8185633	Argument	90		8185208	1					
ANR	8185634	PrimaryExpression	90		8185208	0					
ANR	8185635	IfStatement	if ( bold_fraction == 0 )		8185208	72					
ANR	8185636	Condition	bold_fraction == 0	1066:8:36267:36284	8185208	0	True				
ANR	8185637	EqualityExpression	bold_fraction == 0		8185208	0		==			
ANR	8185638	Identifier	bold_fraction		8185208	0					
ANR	8185639	PrimaryExpression	0		8185208	1					
ANR	8185640	CompoundStatement		89:28:2814:2814	8185208	1					
ANR	8185641	ExpressionStatement	"code = tt_set_cache ( penum , pgs , w2 )"	1067:8:36297:36332	8185208	0	True				
ANR	8185642	AssignmentExpression	"code = tt_set_cache ( penum , pgs , w2 )"		8185208	0		=			
ANR	8185643	Identifier	code		8185208	0					
ANR	8185644	CallExpression	"tt_set_cache ( penum , pgs , w2 )"		8185208	1					
ANR	8185645	Callee	tt_set_cache		8185208	0					
ANR	8185646	Identifier	tt_set_cache		8185208	0					
ANR	8185647	ArgumentList	penum		8185208	1					
ANR	8185648	Argument	penum		8185208	0					
ANR	8185649	Identifier	penum		8185208	0					
ANR	8185650	Argument	pgs		8185208	1					
ANR	8185651	Identifier	pgs		8185208	0					
ANR	8185652	Argument	w2		8185208	2					
ANR	8185653	Identifier	w2		8185208	0					
ANR	8185654	IfStatement	if ( code < 0 )		8185208	1					
ANR	8185655	Condition	code < 0	1068:12:36346:36353	8185208	0	True				
ANR	8185656	RelationalExpression	code < 0		8185208	0		<			
ANR	8185657	Identifier	code		8185208	0					
ANR	8185658	PrimaryExpression	0		8185208	1					
ANR	8185659	ReturnStatement	return code ;	1069:12:36368:36379	8185208	1	True				
ANR	8185660	Identifier	code		8185208	0					
ANR	8185661	ExpressionStatement	bold_added = 0	1070:8:36389:36403	8185208	2	True				
ANR	8185662	AssignmentExpression	bold_added = 0		8185208	0		=			
ANR	8185663	Identifier	bold_added		8185208	0					
ANR	8185664	PrimaryExpression	0		8185208	1					
ANR	8185665	ElseStatement	else		8185208	0					
ANR	8185666	CompoundStatement		96:8:2982:2994	8185208	0					
ANR	8185667	IdentifierDeclStatement	"gs_matrix mat , smat ;"	1072:8:36426:36445	8185208	0	True				
ANR	8185668	IdentifierDecl	mat		8185208	0					
ANR	8185669	IdentifierDeclType	gs_matrix		8185208	0					
ANR	8185670	Identifier	mat		8185208	1					
ANR	8185671	IdentifierDecl	smat		8185208	1					
ANR	8185672	IdentifierDeclType	gs_matrix		8185208	0					
ANR	8185673	Identifier	smat		8185208	1					
ANR	8185674	IdentifierDeclStatement	gs_rect sbox ;	1073:8:36455:36467	8185208	1	True				
ANR	8185675	IdentifierDecl	sbox		8185208	0					
ANR	8185676	IdentifierDeclType	gs_rect		8185208	0					
ANR	8185677	Identifier	sbox		8185208	1					
ANR	8185678	ExpressionStatement	code = gs_gsave ( pgs )	1075:8:36478:36498	8185208	2	True				
ANR	8185679	AssignmentExpression	code = gs_gsave ( pgs )		8185208	0		=			
ANR	8185680	Identifier	code		8185208	0					
ANR	8185681	CallExpression	gs_gsave ( pgs )		8185208	1					
ANR	8185682	Callee	gs_gsave		8185208	0					
ANR	8185683	Identifier	gs_gsave		8185208	0					
ANR	8185684	ArgumentList	pgs		8185208	1					
ANR	8185685	Argument	pgs		8185208	0					
ANR	8185686	Identifier	pgs		8185208	0					
ANR	8185687	IfStatement	if ( code < 0 )		8185208	3					
ANR	8185688	Condition	code < 0	1076:12:36512:36519	8185208	0	True				
ANR	8185689	RelationalExpression	code < 0		8185208	0		<			
ANR	8185690	Identifier	code		8185208	0					
ANR	8185691	PrimaryExpression	0		8185208	1					
ANR	8185692	ReturnStatement	return code ;	1077:12:36534:36545	8185208	1	True				
ANR	8185693	Identifier	code		8185208	0					
ANR	8185694	ExpressionStatement	"gs_currentmatrix ( pgs , & mat )"	1078:8:36555:36582	8185208	4	True				
ANR	8185695	CallExpression	"gs_currentmatrix ( pgs , & mat )"		8185208	0					
ANR	8185696	Callee	gs_currentmatrix		8185208	0					
ANR	8185697	Identifier	gs_currentmatrix		8185208	0					
ANR	8185698	ArgumentList	pgs		8185208	1					
ANR	8185699	Argument	pgs		8185208	0					
ANR	8185700	Identifier	pgs		8185208	0					
ANR	8185701	Argument	& mat		8185208	1					
ANR	8185702	UnaryOperationExpression	& mat		8185208	0					
ANR	8185703	UnaryOperator	&		8185208	0					
ANR	8185704	Identifier	mat		8185208	1					
ANR	8185705	ExpressionStatement	"scale = max ( fabs ( mat . xx ) + fabs ( mat . yx ) , fabs ( mat . xy ) + fabs ( mat . yy ) )"	1080:8:36653:36722	8185208	5	True				
ANR	8185706	AssignmentExpression	"scale = max ( fabs ( mat . xx ) + fabs ( mat . yx ) , fabs ( mat . xy ) + fabs ( mat . yy ) )"		8185208	0		=			
ANR	8185707	Identifier	scale		8185208	0					
ANR	8185708	CallExpression	"max ( fabs ( mat . xx ) + fabs ( mat . yx ) , fabs ( mat . xy ) + fabs ( mat . yy ) )"		8185208	1					
ANR	8185709	Callee	max		8185208	0					
ANR	8185710	Identifier	max		8185208	0					
ANR	8185711	ArgumentList	fabs ( mat . xx ) + fabs ( mat . yx )		8185208	1					
ANR	8185712	Argument	fabs ( mat . xx ) + fabs ( mat . yx )		8185208	0					
ANR	8185713	AdditiveExpression	fabs ( mat . xx ) + fabs ( mat . yx )		8185208	0		+			
ANR	8185714	CallExpression	fabs ( mat . xx )		8185208	0					
ANR	8185715	Callee	fabs		8185208	0					
ANR	8185716	Identifier	fabs		8185208	0					
ANR	8185717	ArgumentList	mat . xx		8185208	1					
ANR	8185718	Argument	mat . xx		8185208	0					
ANR	8185719	MemberAccess	mat . xx		8185208	0					
ANR	8185720	Identifier	mat		8185208	0					
ANR	8185721	Identifier	xx		8185208	1					
ANR	8185722	CallExpression	fabs ( mat . yx )		8185208	1					
ANR	8185723	Callee	fabs		8185208	0					
ANR	8185724	Identifier	fabs		8185208	0					
ANR	8185725	ArgumentList	mat . yx		8185208	1					
ANR	8185726	Argument	mat . yx		8185208	0					
ANR	8185727	MemberAccess	mat . yx		8185208	0					
ANR	8185728	Identifier	mat		8185208	0					
ANR	8185729	Identifier	yx		8185208	1					
ANR	8185730	Argument	fabs ( mat . xy ) + fabs ( mat . yy )		8185208	1					
ANR	8185731	AdditiveExpression	fabs ( mat . xy ) + fabs ( mat . yy )		8185208	0		+			
ANR	8185732	CallExpression	fabs ( mat . xy )		8185208	0					
ANR	8185733	Callee	fabs		8185208	0					
ANR	8185734	Identifier	fabs		8185208	0					
ANR	8185735	ArgumentList	mat . xy		8185208	1					
ANR	8185736	Argument	mat . xy		8185208	0					
ANR	8185737	MemberAccess	mat . xy		8185208	0					
ANR	8185738	Identifier	mat		8185208	0					
ANR	8185739	Identifier	xy		8185208	1					
ANR	8185740	CallExpression	fabs ( mat . yy )		8185208	1					
ANR	8185741	Callee	fabs		8185208	0					
ANR	8185742	Identifier	fabs		8185208	0					
ANR	8185743	ArgumentList	mat . yy		8185208	1					
ANR	8185744	Argument	mat . yy		8185208	0					
ANR	8185745	MemberAccess	mat . yy		8185208	0					
ANR	8185746	Identifier	mat		8185208	0					
ANR	8185747	Identifier	yy		8185208	1					
ANR	8185748	ExpressionStatement	"gs_make_scaling ( scale , scale , & smat )"	1081:8:36732:36768	8185208	6	True				
ANR	8185749	CallExpression	"gs_make_scaling ( scale , scale , & smat )"		8185208	0					
ANR	8185750	Callee	gs_make_scaling		8185208	0					
ANR	8185751	Identifier	gs_make_scaling		8185208	0					
ANR	8185752	ArgumentList	scale		8185208	1					
ANR	8185753	Argument	scale		8185208	0					
ANR	8185754	Identifier	scale		8185208	0					
ANR	8185755	Argument	scale		8185208	1					
ANR	8185756	Identifier	scale		8185208	0					
ANR	8185757	Argument	& smat		8185208	2					
ANR	8185758	UnaryOperationExpression	& smat		8185208	0					
ANR	8185759	UnaryOperator	&		8185208	0					
ANR	8185760	Identifier	smat		8185208	1					
ANR	8185761	ExpressionStatement	"sbox . p . x = w2 [ 2 ] , sbox . p . y = w2 [ 3 ]"	1082:8:36778:36812	8185208	7	True				
ANR	8185762	Expression	"sbox . p . x = w2 [ 2 ] , sbox . p . y = w2 [ 3 ]"		8185208	0					
ANR	8185763	AssignmentExpression	sbox . p . x = w2 [ 2 ]		8185208	0		=			
ANR	8185764	MemberAccess	sbox . p . x		8185208	0					
ANR	8185765	MemberAccess	sbox . p		8185208	0					
ANR	8185766	Identifier	sbox		8185208	0					
ANR	8185767	Identifier	p		8185208	1					
ANR	8185768	Identifier	x		8185208	1					
ANR	8185769	ArrayIndexing	w2 [ 2 ]		8185208	1					
ANR	8185770	Identifier	w2		8185208	0					
ANR	8185771	PrimaryExpression	2		8185208	1					
ANR	8185772	AssignmentExpression	sbox . p . y = w2 [ 3 ]		8185208	1		=			
ANR	8185773	MemberAccess	sbox . p . y		8185208	0					
ANR	8185774	MemberAccess	sbox . p		8185208	0					
ANR	8185775	Identifier	sbox		8185208	0					
ANR	8185776	Identifier	p		8185208	1					
ANR	8185777	Identifier	y		8185208	1					
ANR	8185778	ArrayIndexing	w2 [ 3 ]		8185208	1					
ANR	8185779	Identifier	w2		8185208	0					
ANR	8185780	PrimaryExpression	3		8185208	1					
ANR	8185781	ExpressionStatement	"sbox . q . x = w2 [ 4 ] , sbox . q . y = w2 [ 5 ]"	1083:8:36822:36856	8185208	8	True				
ANR	8185782	Expression	"sbox . q . x = w2 [ 4 ] , sbox . q . y = w2 [ 5 ]"		8185208	0					
ANR	8185783	AssignmentExpression	sbox . q . x = w2 [ 4 ]		8185208	0		=			
ANR	8185784	MemberAccess	sbox . q . x		8185208	0					
ANR	8185785	MemberAccess	sbox . q		8185208	0					
ANR	8185786	Identifier	sbox		8185208	0					
ANR	8185787	Identifier	q		8185208	1					
ANR	8185788	Identifier	x		8185208	1					
ANR	8185789	ArrayIndexing	w2 [ 4 ]		8185208	1					
ANR	8185790	Identifier	w2		8185208	0					
ANR	8185791	PrimaryExpression	4		8185208	1					
ANR	8185792	AssignmentExpression	sbox . q . y = w2 [ 5 ]		8185208	1		=			
ANR	8185793	MemberAccess	sbox . q . y		8185208	0					
ANR	8185794	MemberAccess	sbox . q		8185208	0					
ANR	8185795	Identifier	sbox		8185208	0					
ANR	8185796	Identifier	q		8185208	1					
ANR	8185797	Identifier	y		8185208	1					
ANR	8185798	ArrayIndexing	w2 [ 5 ]		8185208	1					
ANR	8185799	Identifier	w2		8185208	0					
ANR	8185800	PrimaryExpression	5		8185208	1					
ANR	8185801	ExpressionStatement	"gs_bbox_transform ( & sbox , & smat , & sbox )"	1084:8:36866:36904	8185208	9	True				
ANR	8185802	CallExpression	"gs_bbox_transform ( & sbox , & smat , & sbox )"		8185208	0					
ANR	8185803	Callee	gs_bbox_transform		8185208	0					
ANR	8185804	Identifier	gs_bbox_transform		8185208	0					
ANR	8185805	ArgumentList	& sbox		8185208	1					
ANR	8185806	Argument	& sbox		8185208	0					
ANR	8185807	UnaryOperationExpression	& sbox		8185208	0					
ANR	8185808	UnaryOperator	&		8185208	0					
ANR	8185809	Identifier	sbox		8185208	1					
ANR	8185810	Argument	& smat		8185208	1					
ANR	8185811	UnaryOperationExpression	& smat		8185208	0					
ANR	8185812	UnaryOperator	&		8185208	0					
ANR	8185813	Identifier	smat		8185208	1					
ANR	8185814	Argument	& sbox		8185208	2					
ANR	8185815	UnaryOperationExpression	& sbox		8185208	0					
ANR	8185816	UnaryOperator	&		8185208	0					
ANR	8185817	Identifier	sbox		8185208	1					
ANR	8185818	ExpressionStatement	"ipx = ( int ) sbox . p . x , ipy = ( int ) sbox . p . y"	1085:8:36914:36954	8185208	10	True				
ANR	8185819	Expression	"ipx = ( int ) sbox . p . x , ipy = ( int ) sbox . p . y"		8185208	0					
ANR	8185820	AssignmentExpression	ipx = ( int ) sbox . p . x		8185208	0		=			
ANR	8185821	Identifier	ipx		8185208	0					
ANR	8185822	CastExpression	( int ) sbox . p . x		8185208	1					
ANR	8185823	CastTarget	int		8185208	0					
ANR	8185824	MemberAccess	sbox . p . x		8185208	1					
ANR	8185825	MemberAccess	sbox . p		8185208	0					
ANR	8185826	Identifier	sbox		8185208	0					
ANR	8185827	Identifier	p		8185208	1					
ANR	8185828	Identifier	x		8185208	1					
ANR	8185829	AssignmentExpression	ipy = ( int ) sbox . p . y		8185208	1		=			
ANR	8185830	Identifier	ipy		8185208	0					
ANR	8185831	CastExpression	( int ) sbox . p . y		8185208	1					
ANR	8185832	CastTarget	int		8185208	0					
ANR	8185833	MemberAccess	sbox . p . y		8185208	1					
ANR	8185834	MemberAccess	sbox . p		8185208	0					
ANR	8185835	Identifier	sbox		8185208	0					
ANR	8185836	Identifier	p		8185208	1					
ANR	8185837	Identifier	y		8185208	1					
ANR	8185838	ExpressionStatement	"iqx = ( int ) ceil ( sbox . q . x ) , iqy = ( int ) ceil ( sbox . q . y )"	1086:8:36964:37016	8185208	11	True				
ANR	8185839	Expression	"iqx = ( int ) ceil ( sbox . q . x ) , iqy = ( int ) ceil ( sbox . q . y )"		8185208	0					
ANR	8185840	AssignmentExpression	iqx = ( int ) ceil ( sbox . q . x )		8185208	0		=			
ANR	8185841	Identifier	iqx		8185208	0					
ANR	8185842	CastExpression	( int ) ceil ( sbox . q . x )		8185208	1					
ANR	8185843	CastTarget	int		8185208	0					
ANR	8185844	CallExpression	ceil ( sbox . q . x )		8185208	1					
ANR	8185845	Callee	ceil		8185208	0					
ANR	8185846	Identifier	ceil		8185208	0					
ANR	8185847	ArgumentList	sbox . q . x		8185208	1					
ANR	8185848	Argument	sbox . q . x		8185208	0					
ANR	8185849	MemberAccess	sbox . q . x		8185208	0					
ANR	8185850	MemberAccess	sbox . q		8185208	0					
ANR	8185851	Identifier	sbox		8185208	0					
ANR	8185852	Identifier	q		8185208	1					
ANR	8185853	Identifier	x		8185208	1					
ANR	8185854	AssignmentExpression	iqy = ( int ) ceil ( sbox . q . y )		8185208	1		=			
ANR	8185855	Identifier	iqy		8185208	0					
ANR	8185856	CastExpression	( int ) ceil ( sbox . q . y )		8185208	1					
ANR	8185857	CastTarget	int		8185208	0					
ANR	8185858	CallExpression	ceil ( sbox . q . y )		8185208	1					
ANR	8185859	Callee	ceil		8185208	0					
ANR	8185860	Identifier	ceil		8185208	0					
ANR	8185861	ArgumentList	sbox . q . y		8185208	1					
ANR	8185862	Argument	sbox . q . y		8185208	0					
ANR	8185863	MemberAccess	sbox . q . y		8185208	0					
ANR	8185864	MemberAccess	sbox . q		8185208	0					
ANR	8185865	Identifier	sbox		8185208	0					
ANR	8185866	Identifier	q		8185208	1					
ANR	8185867	Identifier	y		8185208	1					
ANR	8185868	ExpressionStatement	"code = gs_make_mem_mono_device_with_copydevice ( & pmdev , pgs -> memory , pgs -> device )"	1088:8:37104:37184	8185208	12	True				
ANR	8185869	AssignmentExpression	"code = gs_make_mem_mono_device_with_copydevice ( & pmdev , pgs -> memory , pgs -> device )"		8185208	0		=			
ANR	8185870	Identifier	code		8185208	0					
ANR	8185871	CallExpression	"gs_make_mem_mono_device_with_copydevice ( & pmdev , pgs -> memory , pgs -> device )"		8185208	1					
ANR	8185872	Callee	gs_make_mem_mono_device_with_copydevice		8185208	0					
ANR	8185873	Identifier	gs_make_mem_mono_device_with_copydevice		8185208	0					
ANR	8185874	ArgumentList	& pmdev		8185208	1					
ANR	8185875	Argument	& pmdev		8185208	0					
ANR	8185876	UnaryOperationExpression	& pmdev		8185208	0					
ANR	8185877	UnaryOperator	&		8185208	0					
ANR	8185878	Identifier	pmdev		8185208	1					
ANR	8185879	Argument	pgs -> memory		8185208	1					
ANR	8185880	PtrMemberAccess	pgs -> memory		8185208	0					
ANR	8185881	Identifier	pgs		8185208	0					
ANR	8185882	Identifier	memory		8185208	1					
ANR	8185883	Argument	pgs -> device		8185208	2					
ANR	8185884	PtrMemberAccess	pgs -> device		8185208	0					
ANR	8185885	Identifier	pgs		8185208	0					
ANR	8185886	Identifier	device		8185208	1					
ANR	8185887	IfStatement	if ( code < 0 )		8185208	13					
ANR	8185888	Condition	code < 0	1089:12:37198:37205	8185208	0	True				
ANR	8185889	RelationalExpression	code < 0		8185208	0		<			
ANR	8185890	Identifier	code		8185208	0					
ANR	8185891	PrimaryExpression	0		8185208	1					
ANR	8185892	ReturnStatement	return code ;	1090:12:37220:37231	8185208	1	True				
ANR	8185893	Identifier	code		8185208	0					
ANR	8185894	ExpressionStatement	bold_device_created = true	1092:8:37242:37268	8185208	14	True				
ANR	8185895	AssignmentExpression	bold_device_created = true		8185208	0		=			
ANR	8185896	Identifier	bold_device_created		8185208	0					
ANR	8185897	Identifier	true		8185208	1					
ANR	8185898	ExpressionStatement	"bold_added = max ( ( int ) ( scale * bold_fraction * 2 + 0.5 ) , 1 )"	1099:8:37640:37699	8185208	15	True				
ANR	8185899	AssignmentExpression	"bold_added = max ( ( int ) ( scale * bold_fraction * 2 + 0.5 ) , 1 )"		8185208	0		=			
ANR	8185900	Identifier	bold_added		8185208	0					
ANR	8185901	CallExpression	"max ( ( int ) ( scale * bold_fraction * 2 + 0.5 ) , 1 )"		8185208	1					
ANR	8185902	Callee	max		8185208	0					
ANR	8185903	Identifier	max		8185208	0					
ANR	8185904	ArgumentList	( int ) ( scale * bold_fraction * 2 + 0.5 )		8185208	1					
ANR	8185905	Argument	( int ) ( scale * bold_fraction * 2 + 0.5 )		8185208	0					
ANR	8185906	CastExpression	( int ) ( scale * bold_fraction * 2 + 0.5 )		8185208	0					
ANR	8185907	CastTarget	int		8185208	0					
ANR	8185908	AdditiveExpression	scale * bold_fraction * 2 + 0.5		8185208	1		+			
ANR	8185909	MultiplicativeExpression	scale * bold_fraction * 2		8185208	0		*			
ANR	8185910	Identifier	scale		8185208	0					
ANR	8185911	MultiplicativeExpression	bold_fraction * 2		8185208	1		*			
ANR	8185912	Identifier	bold_fraction		8185208	0					
ANR	8185913	PrimaryExpression	2		8185208	1					
ANR	8185914	PrimaryExpression	0.5		8185208	1					
ANR	8185915	Argument	1		8185208	1					
ANR	8185916	PrimaryExpression	1		8185208	0					
ANR	8185917	ExpressionStatement	pmdev -> width = iqx - ipx + bold_added	1100:8:37709:37746	8185208	16	True				
ANR	8185918	AssignmentExpression	pmdev -> width = iqx - ipx + bold_added		8185208	0		=			
ANR	8185919	PtrMemberAccess	pmdev -> width		8185208	0					
ANR	8185920	Identifier	pmdev		8185208	0					
ANR	8185921	Identifier	width		8185208	1					
ANR	8185922	AdditiveExpression	iqx - ipx + bold_added		8185208	1		-			
ANR	8185923	Identifier	iqx		8185208	0					
ANR	8185924	AdditiveExpression	ipx + bold_added		8185208	1		+			
ANR	8185925	Identifier	ipx		8185208	0					
ANR	8185926	Identifier	bold_added		8185208	1					
ANR	8185927	ExpressionStatement	pmdev -> height = iqy - ipy	1101:8:37756:37781	8185208	17	True				
ANR	8185928	AssignmentExpression	pmdev -> height = iqy - ipy		8185208	0		=			
ANR	8185929	PtrMemberAccess	pmdev -> height		8185208	0					
ANR	8185930	Identifier	pmdev		8185208	0					
ANR	8185931	Identifier	height		8185208	1					
ANR	8185932	AdditiveExpression	iqy - ipy		8185208	1		-			
ANR	8185933	Identifier	iqy		8185208	0					
ANR	8185934	Identifier	ipy		8185208	1					
ANR	8185935	ExpressionStatement	pmdev -> bitmap_memory = pgs -> memory	1102:8:37791:37825	8185208	18	True				
ANR	8185936	AssignmentExpression	pmdev -> bitmap_memory = pgs -> memory		8185208	0		=			
ANR	8185937	PtrMemberAccess	pmdev -> bitmap_memory		8185208	0					
ANR	8185938	Identifier	pmdev		8185208	0					
ANR	8185939	Identifier	bitmap_memory		8185208	1					
ANR	8185940	PtrMemberAccess	pgs -> memory		8185208	1					
ANR	8185941	Identifier	pgs		8185208	0					
ANR	8185942	Identifier	memory		8185208	1					
ANR	8185943	ExpressionStatement	"code = ( * dev_proc ( pmdev , open_device ) ) ( ( gx_device * ) pmdev )"	1103:8:37835:37895	8185208	19	True				
ANR	8185944	AssignmentExpression	"code = ( * dev_proc ( pmdev , open_device ) ) ( ( gx_device * ) pmdev )"		8185208	0		=			
ANR	8185945	Identifier	code		8185208	0					
ANR	8185946	CallExpression	"( * dev_proc ( pmdev , open_device ) ) ( ( gx_device * ) pmdev )"		8185208	1					
ANR	8185947	Callee	"* dev_proc ( pmdev , open_device )"		8185208	0					
ANR	8185948	UnaryOperationExpression	"* dev_proc ( pmdev , open_device )"		8185208	0					
ANR	8185949	UnaryOperator	*		8185208	0					
ANR	8185950	CallExpression	"dev_proc ( pmdev , open_device )"		8185208	1					
ANR	8185951	Callee	dev_proc		8185208	0					
ANR	8185952	Identifier	dev_proc		8185208	0					
ANR	8185953	ArgumentList	pmdev		8185208	1					
ANR	8185954	Argument	pmdev		8185208	0					
ANR	8185955	Identifier	pmdev		8185208	0					
ANR	8185956	Argument	open_device		8185208	1					
ANR	8185957	Identifier	open_device		8185208	0					
ANR	8185958	ArgumentList	( gx_device * ) pmdev		8185208	1					
ANR	8185959	Argument	( gx_device * ) pmdev		8185208	0					
ANR	8185960	CastExpression	( gx_device * ) pmdev		8185208	0					
ANR	8185961	CastTarget	gx_device *		8185208	0					
ANR	8185962	Identifier	pmdev		8185208	1					
ANR	8185963	IfStatement	if ( code < 0 )		8185208	20					
ANR	8185964	Condition	code < 0	1104:12:37909:37916	8185208	0	True				
ANR	8185965	RelationalExpression	code < 0		8185208	0		<			
ANR	8185966	Identifier	code		8185208	0					
ANR	8185967	PrimaryExpression	0		8185208	1					
ANR	8185968	CompoundStatement		127:22:4446:4446	8185208	1					
ANR	8185969	ExpressionStatement	gs_grestore ( pgs )	1105:12:37933:37949	8185208	0	True				
ANR	8185970	CallExpression	gs_grestore ( pgs )		8185208	0					
ANR	8185971	Callee	gs_grestore		8185208	0					
ANR	8185972	Identifier	gs_grestore		8185208	0					
ANR	8185973	ArgumentList	pgs		8185208	1					
ANR	8185974	Argument	pgs		8185208	0					
ANR	8185975	Identifier	pgs		8185208	0					
ANR	8185976	ReturnStatement	return code ;	1106:12:37963:37974	8185208	1	True				
ANR	8185977	Identifier	code		8185208	0					
ANR	8185978	ExpressionStatement	pmdev -> is_open = true	1113:8:38274:38295	8185208	21	True				
ANR	8185979	AssignmentExpression	pmdev -> is_open = true		8185208	0		=			
ANR	8185980	PtrMemberAccess	pmdev -> is_open		8185208	0					
ANR	8185981	Identifier	pmdev		8185208	0					
ANR	8185982	Identifier	is_open		8185208	1					
ANR	8185983	Identifier	true		8185208	1					
ANR	8185984	ExpressionStatement	"gx_set_device_only ( pgs , ( gx_device * ) pmdev )"	1115:8:38361:38405	8185208	22	True				
ANR	8185985	CallExpression	"gx_set_device_only ( pgs , ( gx_device * ) pmdev )"		8185208	0					
ANR	8185986	Callee	gx_set_device_only		8185208	0					
ANR	8185987	Identifier	gx_set_device_only		8185208	0					
ANR	8185988	ArgumentList	pgs		8185208	1					
ANR	8185989	Argument	pgs		8185208	0					
ANR	8185990	Identifier	pgs		8185208	0					
ANR	8185991	Argument	( gx_device * ) pmdev		8185208	1					
ANR	8185992	CastExpression	( gx_device * ) pmdev		8185208	0					
ANR	8185993	CastTarget	gx_device *		8185208	0					
ANR	8185994	Identifier	pmdev		8185208	1					
ANR	8185995	CompoundStatement		141:12:4957:4975	8185208	23					
ANR	8185996	IdentifierDeclStatement	gs_fixed_rect cbox ;	1118:12:38430:38448	8185208	0	True				
ANR	8185997	IdentifierDecl	cbox		8185208	0					
ANR	8185998	IdentifierDeclType	gs_fixed_rect		8185208	0					
ANR	8185999	Identifier	cbox		8185208	1					
ANR	8186000	ExpressionStatement	cbox . p . x = cbox . p . y = fixed_0	1120:12:38463:38492	8185208	1	True				
ANR	8186001	AssignmentExpression	cbox . p . x = cbox . p . y = fixed_0		8185208	0		=			
ANR	8186002	MemberAccess	cbox . p . x		8185208	0					
ANR	8186003	MemberAccess	cbox . p		8185208	0					
ANR	8186004	Identifier	cbox		8185208	0					
ANR	8186005	Identifier	p		8185208	1					
ANR	8186006	Identifier	x		8185208	1					
ANR	8186007	AssignmentExpression	cbox . p . y = fixed_0		8185208	1		=			
ANR	8186008	MemberAccess	cbox . p . y		8185208	0					
ANR	8186009	MemberAccess	cbox . p		8185208	0					
ANR	8186010	Identifier	cbox		8185208	0					
ANR	8186011	Identifier	p		8185208	1					
ANR	8186012	Identifier	y		8185208	1					
ANR	8186013	Identifier	fixed_0		8185208	1					
ANR	8186014	ExpressionStatement	cbox . q . x = int2fixed ( pmdev -> width )	1121:12:38506:38540	8185208	2	True				
ANR	8186015	AssignmentExpression	cbox . q . x = int2fixed ( pmdev -> width )		8185208	0		=			
ANR	8186016	MemberAccess	cbox . q . x		8185208	0					
ANR	8186017	MemberAccess	cbox . q		8185208	0					
ANR	8186018	Identifier	cbox		8185208	0					
ANR	8186019	Identifier	q		8185208	1					
ANR	8186020	Identifier	x		8185208	1					
ANR	8186021	CallExpression	int2fixed ( pmdev -> width )		8185208	1					
ANR	8186022	Callee	int2fixed		8185208	0					
ANR	8186023	Identifier	int2fixed		8185208	0					
ANR	8186024	ArgumentList	pmdev -> width		8185208	1					
ANR	8186025	Argument	pmdev -> width		8185208	0					
ANR	8186026	PtrMemberAccess	pmdev -> width		8185208	0					
ANR	8186027	Identifier	pmdev		8185208	0					
ANR	8186028	Identifier	width		8185208	1					
ANR	8186029	ExpressionStatement	cbox . q . y = int2fixed ( pmdev -> height )	1122:12:38554:38589	8185208	3	True				
ANR	8186030	AssignmentExpression	cbox . q . y = int2fixed ( pmdev -> height )		8185208	0		=			
ANR	8186031	MemberAccess	cbox . q . y		8185208	0					
ANR	8186032	MemberAccess	cbox . q		8185208	0					
ANR	8186033	Identifier	cbox		8185208	0					
ANR	8186034	Identifier	q		8185208	1					
ANR	8186035	Identifier	y		8185208	1					
ANR	8186036	CallExpression	int2fixed ( pmdev -> height )		8185208	1					
ANR	8186037	Callee	int2fixed		8185208	0					
ANR	8186038	Identifier	int2fixed		8185208	0					
ANR	8186039	ArgumentList	pmdev -> height		8185208	1					
ANR	8186040	Argument	pmdev -> height		8185208	0					
ANR	8186041	PtrMemberAccess	pmdev -> height		8185208	0					
ANR	8186042	Identifier	pmdev		8185208	0					
ANR	8186043	Identifier	height		8185208	1					
ANR	8186044	ExpressionStatement	"code = gx_clip_to_rectangle ( pgs , & cbox )"	1123:12:38603:38642	8185208	4	True				
ANR	8186045	AssignmentExpression	"code = gx_clip_to_rectangle ( pgs , & cbox )"		8185208	0		=			
ANR	8186046	Identifier	code		8185208	0					
ANR	8186047	CallExpression	"gx_clip_to_rectangle ( pgs , & cbox )"		8185208	1					
ANR	8186048	Callee	gx_clip_to_rectangle		8185208	0					
ANR	8186049	Identifier	gx_clip_to_rectangle		8185208	0					
ANR	8186050	ArgumentList	pgs		8185208	1					
ANR	8186051	Argument	pgs		8185208	0					
ANR	8186052	Identifier	pgs		8185208	0					
ANR	8186053	Argument	& cbox		8185208	1					
ANR	8186054	UnaryOperationExpression	& cbox		8185208	0					
ANR	8186055	UnaryOperator	&		8185208	0					
ANR	8186056	Identifier	cbox		8185208	1					
ANR	8186057	IfStatement	if ( code < 0 )		8185208	5					
ANR	8186058	Condition	code < 0	1124:16:38660:38667	8185208	0	True				
ANR	8186059	RelationalExpression	code < 0		8185208	0		<			
ANR	8186060	Identifier	code		8185208	0					
ANR	8186061	PrimaryExpression	0		8185208	1					
ANR	8186062	ReturnStatement	return code ;	1125:16:38686:38697	8185208	1	True				
ANR	8186063	Identifier	code		8185208	0					
ANR	8186064	ExpressionStatement	"memset ( pmdev -> base , 0 , bitmap_raster ( pmdev -> width ) * pmdev -> height )"	1128:8:38769:38836	8185208	24	True				
ANR	8186065	CallExpression	"memset ( pmdev -> base , 0 , bitmap_raster ( pmdev -> width ) * pmdev -> height )"		8185208	0					
ANR	8186066	Callee	memset		8185208	0					
ANR	8186067	Identifier	memset		8185208	0					
ANR	8186068	ArgumentList	pmdev -> base		8185208	1					
ANR	8186069	Argument	pmdev -> base		8185208	0					
ANR	8186070	PtrMemberAccess	pmdev -> base		8185208	0					
ANR	8186071	Identifier	pmdev		8185208	0					
ANR	8186072	Identifier	base		8185208	1					
ANR	8186073	Argument	0		8185208	1					
ANR	8186074	PrimaryExpression	0		8185208	0					
ANR	8186075	Argument	bitmap_raster ( pmdev -> width ) * pmdev -> height		8185208	2					
ANR	8186076	MultiplicativeExpression	bitmap_raster ( pmdev -> width ) * pmdev -> height		8185208	0		*			
ANR	8186077	CallExpression	bitmap_raster ( pmdev -> width )		8185208	0					
ANR	8186078	Callee	bitmap_raster		8185208	0					
ANR	8186079	Identifier	bitmap_raster		8185208	0					
ANR	8186080	ArgumentList	pmdev -> width		8185208	1					
ANR	8186081	Argument	pmdev -> width		8185208	0					
ANR	8186082	PtrMemberAccess	pmdev -> width		8185208	0					
ANR	8186083	Identifier	pmdev		8185208	0					
ANR	8186084	Identifier	width		8185208	1					
ANR	8186085	PtrMemberAccess	pmdev -> height		8185208	1					
ANR	8186086	Identifier	pmdev		8185208	0					
ANR	8186087	Identifier	height		8185208	1					
ANR	8186088	ExpressionStatement	code = gx_set_device_color_1 ( pgs )	1129:8:38846:38879	8185208	25	True				
ANR	8186089	AssignmentExpression	code = gx_set_device_color_1 ( pgs )		8185208	0		=			
ANR	8186090	Identifier	code		8185208	0					
ANR	8186091	CallExpression	gx_set_device_color_1 ( pgs )		8185208	1					
ANR	8186092	Callee	gx_set_device_color_1		8185208	0					
ANR	8186093	Identifier	gx_set_device_color_1		8185208	0					
ANR	8186094	ArgumentList	pgs		8185208	1					
ANR	8186095	Argument	pgs		8185208	0					
ANR	8186096	Identifier	pgs		8185208	0					
ANR	8186097	IfStatement	if ( code < 0 )		8185208	26					
ANR	8186098	Condition	code < 0	1130:12:38913:38920	8185208	0	True				
ANR	8186099	RelationalExpression	code < 0		8185208	0		<			
ANR	8186100	Identifier	code		8185208	0					
ANR	8186101	PrimaryExpression	0		8185208	1					
ANR	8186102	ReturnStatement	return code ;	1131:12:38935:38946	8185208	1	True				
ANR	8186103	Identifier	code		8185208	0					
ANR	8186104	ExpressionStatement	smat . tx = ( float ) ( - ipx )	1132:8:38956:38979	8185208	27	True				
ANR	8186105	AssignmentExpression	smat . tx = ( float ) ( - ipx )		8185208	0		=			
ANR	8186106	MemberAccess	smat . tx		8185208	0					
ANR	8186107	Identifier	smat		8185208	0					
ANR	8186108	Identifier	tx		8185208	1					
ANR	8186109	CastExpression	( float ) ( - ipx )		8185208	1					
ANR	8186110	CastTarget	float		8185208	0					
ANR	8186111	UnaryOperationExpression	- ipx		8185208	1					
ANR	8186112	UnaryOperator	-		8185208	0					
ANR	8186113	Identifier	ipx		8185208	1					
ANR	8186114	ExpressionStatement	smat . ty = ( float ) ( - ipy )	1133:8:38989:39012	8185208	28	True				
ANR	8186115	AssignmentExpression	smat . ty = ( float ) ( - ipy )		8185208	0		=			
ANR	8186116	MemberAccess	smat . ty		8185208	0					
ANR	8186117	Identifier	smat		8185208	0					
ANR	8186118	Identifier	ty		8185208	1					
ANR	8186119	CastExpression	( float ) ( - ipy )		8185208	1					
ANR	8186120	CastTarget	float		8185208	0					
ANR	8186121	UnaryOperationExpression	- ipy		8185208	1					
ANR	8186122	UnaryOperator	-		8185208	0					
ANR	8186123	Identifier	ipy		8185208	1					
ANR	8186124	ExpressionStatement	"gs_setmatrix ( pgs , & smat )"	1134:8:39022:39046	8185208	29	True				
ANR	8186125	CallExpression	"gs_setmatrix ( pgs , & smat )"		8185208	0					
ANR	8186126	Callee	gs_setmatrix		8185208	0					
ANR	8186127	Identifier	gs_setmatrix		8185208	0					
ANR	8186128	ArgumentList	pgs		8185208	1					
ANR	8186129	Argument	pgs		8185208	0					
ANR	8186130	Identifier	pgs		8185208	0					
ANR	8186131	Argument	& smat		8185208	1					
ANR	8186132	UnaryOperationExpression	& smat		8185208	0					
ANR	8186133	UnaryOperator	&		8185208	0					
ANR	8186134	Identifier	smat		8185208	1					
ANR	8186135	ExpressionStatement	"code = gs_type42_append ( glyph , pgs , pgs -> path , ( gs_text_enum_t * ) penum , pfont , gs_show_in_charpath ( penum ) != cpm_show )"	1136:4:39058:39233	8185208	73	True				
ANR	8186136	AssignmentExpression	"code = gs_type42_append ( glyph , pgs , pgs -> path , ( gs_text_enum_t * ) penum , pfont , gs_show_in_charpath ( penum ) != cpm_show )"		8185208	0		=			
ANR	8186137	Identifier	code		8185208	0					
ANR	8186138	CallExpression	"gs_type42_append ( glyph , pgs , pgs -> path , ( gs_text_enum_t * ) penum , pfont , gs_show_in_charpath ( penum ) != cpm_show )"		8185208	1					
ANR	8186139	Callee	gs_type42_append		8185208	0					
ANR	8186140	Identifier	gs_type42_append		8185208	0					
ANR	8186141	ArgumentList	glyph		8185208	1					
ANR	8186142	Argument	glyph		8185208	0					
ANR	8186143	Identifier	glyph		8185208	0					
ANR	8186144	Argument	pgs		8185208	1					
ANR	8186145	Identifier	pgs		8185208	0					
ANR	8186146	Argument	pgs -> path		8185208	2					
ANR	8186147	PtrMemberAccess	pgs -> path		8185208	0					
ANR	8186148	Identifier	pgs		8185208	0					
ANR	8186149	Identifier	path		8185208	1					
ANR	8186150	Argument	( gs_text_enum_t * ) penum		8185208	3					
ANR	8186151	CastExpression	( gs_text_enum_t * ) penum		8185208	0					
ANR	8186152	CastTarget	gs_text_enum_t *		8185208	0					
ANR	8186153	Identifier	penum		8185208	1					
ANR	8186154	Argument	pfont		8185208	4					
ANR	8186155	Identifier	pfont		8185208	0					
ANR	8186156	Argument	gs_show_in_charpath ( penum ) != cpm_show		8185208	5					
ANR	8186157	EqualityExpression	gs_show_in_charpath ( penum ) != cpm_show		8185208	0		!=			
ANR	8186158	CallExpression	gs_show_in_charpath ( penum )		8185208	0					
ANR	8186159	Callee	gs_show_in_charpath		8185208	0					
ANR	8186160	Identifier	gs_show_in_charpath		8185208	0					
ANR	8186161	ArgumentList	penum		8185208	1					
ANR	8186162	Argument	penum		8185208	0					
ANR	8186163	Identifier	penum		8185208	0					
ANR	8186164	Identifier	cpm_show		8185208	1					
ANR	8186165	IfStatement	if ( code >= 0 )		8185208	74					
ANR	8186166	Condition	code >= 0	1139:8:39243:39251	8185208	0	True				
ANR	8186167	RelationalExpression	code >= 0		8185208	0		>=			
ANR	8186168	Identifier	code		8185208	0					
ANR	8186169	PrimaryExpression	0		8185208	1					
ANR	8186170	CompoundStatement		168:8:6071:6107	8185208	1					
ANR	8186171	IdentifierDeclStatement	gs_fixed_point fa = pgs -> fill_adjust ;	1145:8:39544:39580	8185208	0	True				
ANR	8186172	IdentifierDecl	fa = pgs -> fill_adjust		8185208	0					
ANR	8186173	IdentifierDeclType	gs_fixed_point		8185208	0					
ANR	8186174	Identifier	fa		8185208	1					
ANR	8186175	AssignmentExpression	fa = pgs -> fill_adjust		8185208	2		=			
ANR	8186176	Identifier	fa		8185208	0					
ANR	8186177	PtrMemberAccess	pgs -> fill_adjust		8185208	1					
ANR	8186178	Identifier	pgs		8185208	0					
ANR	8186179	Identifier	fill_adjust		8185208	1					
ANR	8186180	ExpressionStatement	pgs -> fill_adjust . x = pgs -> fill_adjust . y = - 1	1147:8:39591:39635	8185208	1	True				
ANR	8186181	AssignmentExpression	pgs -> fill_adjust . x = pgs -> fill_adjust . y = - 1		8185208	0		=			
ANR	8186182	MemberAccess	pgs -> fill_adjust . x		8185208	0					
ANR	8186183	PtrMemberAccess	pgs -> fill_adjust		8185208	0					
ANR	8186184	Identifier	pgs		8185208	0					
ANR	8186185	Identifier	fill_adjust		8185208	1					
ANR	8186186	Identifier	x		8185208	1					
ANR	8186187	AssignmentExpression	pgs -> fill_adjust . y = - 1		8185208	1		=			
ANR	8186188	MemberAccess	pgs -> fill_adjust . y		8185208	0					
ANR	8186189	PtrMemberAccess	pgs -> fill_adjust		8185208	0					
ANR	8186190	Identifier	pgs		8185208	0					
ANR	8186191	Identifier	fill_adjust		8185208	1					
ANR	8186192	Identifier	y		8185208	1					
ANR	8186193	UnaryOperationExpression	- 1		8185208	1					
ANR	8186194	UnaryOperator	-		8185208	0					
ANR	8186195	PrimaryExpression	1		8185208	1					
ANR	8186196	ExpressionStatement	code = ( pfont -> PaintType ? gs_stroke ( pgs ) : gs_fill ( pgs ) )	1148:8:39645:39702	8185208	2	True				
ANR	8186197	AssignmentExpression	code = ( pfont -> PaintType ? gs_stroke ( pgs ) : gs_fill ( pgs ) )		8185208	0		=			
ANR	8186198	Identifier	code		8185208	0					
ANR	8186199	ConditionalExpression	pfont -> PaintType ? gs_stroke ( pgs ) : gs_fill ( pgs )		8185208	1					
ANR	8186200	Condition	pfont -> PaintType		8185208	0					
ANR	8186201	PtrMemberAccess	pfont -> PaintType		8185208	0					
ANR	8186202	Identifier	pfont		8185208	0					
ANR	8186203	Identifier	PaintType		8185208	1					
ANR	8186204	CallExpression	gs_stroke ( pgs )		8185208	1					
ANR	8186205	Callee	gs_stroke		8185208	0					
ANR	8186206	Identifier	gs_stroke		8185208	0					
ANR	8186207	ArgumentList	pgs		8185208	1					
ANR	8186208	Argument	pgs		8185208	0					
ANR	8186209	Identifier	pgs		8185208	0					
ANR	8186210	CallExpression	gs_fill ( pgs )		8185208	2					
ANR	8186211	Callee	gs_fill		8185208	0					
ANR	8186212	Identifier	gs_fill		8185208	0					
ANR	8186213	ArgumentList	pgs		8185208	1					
ANR	8186214	Argument	pgs		8185208	0					
ANR	8186215	Identifier	pgs		8185208	0					
ANR	8186216	ExpressionStatement	pgs -> fill_adjust = fa	1149:8:39712:39733	8185208	3	True				
ANR	8186217	AssignmentExpression	pgs -> fill_adjust = fa		8185208	0		=			
ANR	8186218	PtrMemberAccess	pgs -> fill_adjust		8185208	0					
ANR	8186219	Identifier	pgs		8185208	0					
ANR	8186220	Identifier	fill_adjust		8185208	1					
ANR	8186221	Identifier	fa		8185208	1					
ANR	8186222	IfStatement	if ( ctm_modified )		8185208	75					
ANR	8186223	Condition	ctm_modified	1151:8:39749:39760	8185208	0	True				
ANR	8186224	Identifier	ctm_modified		8185208	0					
ANR	8186225	ExpressionStatement	"gs_setmatrix ( pgs , & save_ctm )"	1152:8:39771:39799	8185208	1	True				
ANR	8186226	CallExpression	"gs_setmatrix ( pgs , & save_ctm )"		8185208	0					
ANR	8186227	Callee	gs_setmatrix		8185208	0					
ANR	8186228	Identifier	gs_setmatrix		8185208	0					
ANR	8186229	ArgumentList	pgs		8185208	1					
ANR	8186230	Argument	pgs		8185208	0					
ANR	8186231	Identifier	pgs		8185208	0					
ANR	8186232	Argument	& save_ctm		8185208	1					
ANR	8186233	UnaryOperationExpression	& save_ctm		8185208	0					
ANR	8186234	UnaryOperator	&		8185208	0					
ANR	8186235	Identifier	save_ctm		8185208	1					
ANR	8186236	IfStatement	if ( bold_added && ( code >= 0 ) )		8185208	76					
ANR	8186237	Condition	bold_added && ( code >= 0 )	1153:8:39809:39833	8185208	0	True				
ANR	8186238	AndExpression	bold_added && ( code >= 0 )		8185208	0		&&			
ANR	8186239	Identifier	bold_added		8185208	0					
ANR	8186240	RelationalExpression	code >= 0		8185208	1		>=			
ANR	8186241	Identifier	code		8185208	0					
ANR	8186242	PrimaryExpression	0		8185208	1					
ANR	8186243	ExpressionStatement	code = gs_grestore ( pgs )	1154:8:39844:39867	8185208	1	True				
ANR	8186244	AssignmentExpression	code = gs_grestore ( pgs )		8185208	0		=			
ANR	8186245	Identifier	code		8185208	0					
ANR	8186246	CallExpression	gs_grestore ( pgs )		8185208	1					
ANR	8186247	Callee	gs_grestore		8185208	0					
ANR	8186248	Identifier	gs_grestore		8185208	0					
ANR	8186249	ArgumentList	pgs		8185208	1					
ANR	8186250	Argument	pgs		8185208	0					
ANR	8186251	Identifier	pgs		8185208	0					
ANR	8186252	IfStatement	if ( code < 0 || ! bold_added )		8185208	77					
ANR	8186253	Condition	code < 0 || ! bold_added	1156:8:39878:39900	8185208	0	True				
ANR	8186254	OrExpression	code < 0 || ! bold_added		8185208	0		||			
ANR	8186255	RelationalExpression	code < 0		8185208	0		<			
ANR	8186256	Identifier	code		8185208	0					
ANR	8186257	PrimaryExpression	0		8185208	1					
ANR	8186258	UnaryOperationExpression	! bold_added		8185208	1					
ANR	8186259	UnaryOperator	!		8185208	0					
ANR	8186260	Identifier	bold_added		8185208	1					
ANR	8186261	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1157:8:39911:39939	8185208	1	True				
ANR	8186262	ConditionalExpression	code < 0 ? code : 0		8185208	0					
ANR	8186263	Condition	code < 0		8185208	0					
ANR	8186264	RelationalExpression	code < 0		8185208	0		<			
ANR	8186265	Identifier	code		8185208	0					
ANR	8186266	PrimaryExpression	0		8185208	1					
ANR	8186267	Identifier	code		8185208	1					
ANR	8186268	PrimaryExpression	0		8185208	2					
ANR	8186269	CompoundStatement		188:8:6670:6859	8185208	78					
ANR	8186270	IdentifierDeclStatement	gs_image_t image ;	1162:8:40020:40036	8185208	0	True				
ANR	8186271	IdentifierDecl	image		8185208	0					
ANR	8186272	IdentifierDeclType	gs_image_t		8185208	0					
ANR	8186273	Identifier	image		8185208	1					
ANR	8186274	IdentifierDeclStatement	"gs_image_enum * ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" ) ;"	1163:8:40046:40133	8185208	1	True				
ANR	8186275	IdentifierDecl	"* ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" )"		8185208	0					
ANR	8186276	IdentifierDeclType	gs_image_enum *		8185208	0					
ANR	8186277	Identifier	ienum		8185208	1					
ANR	8186278	AssignmentExpression	"* ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" )"		8185208	2		=			
ANR	8186279	Identifier	ienum		8185208	0					
ANR	8186280	CallExpression	"gs_image_enum_alloc ( pgs -> memory , ""pl_tt_build_char"" )"		8185208	1					
ANR	8186281	Callee	gs_image_enum_alloc		8185208	0					
ANR	8186282	Identifier	gs_image_enum_alloc		8185208	0					
ANR	8186283	ArgumentList	pgs -> memory		8185208	1					
ANR	8186284	Argument	pgs -> memory		8185208	0					
ANR	8186285	PtrMemberAccess	pgs -> memory		8185208	0					
ANR	8186286	Identifier	pgs		8185208	0					
ANR	8186287	Identifier	memory		8185208	1					
ANR	8186288	Argument	"""pl_tt_build_char"""		8185208	1					
ANR	8186289	PrimaryExpression	"""pl_tt_build_char"""		8185208	0					
ANR	8186290	IdentifierDeclStatement	"byte * bold_lines = alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" ) ;"	1165:8:40143:40332	8185208	2	True				
ANR	8186291	IdentifierDecl	"* bold_lines = alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" )"		8185208	0					
ANR	8186292	IdentifierDeclType	byte *		8185208	0					
ANR	8186293	Identifier	bold_lines		8185208	1					
ANR	8186294	AssignmentExpression	"* bold_lines = alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" )"		8185208	2		=			
ANR	8186295	Identifier	bold_lines		8185208	0					
ANR	8186296	CallExpression	"alloc_bold_lines ( pgs -> memory , pmdev -> width - bold_added , bold_added , ""pl_tt_build_char(bold_lines)"" )"		8185208	1					
ANR	8186297	Callee	alloc_bold_lines		8185208	0					
ANR	8186298	Identifier	alloc_bold_lines		8185208	0					
ANR	8186299	ArgumentList	pgs -> memory		8185208	1					
ANR	8186300	Argument	pgs -> memory		8185208	0					
ANR	8186301	PtrMemberAccess	pgs -> memory		8185208	0					
ANR	8186302	Identifier	pgs		8185208	0					
ANR	8186303	Identifier	memory		8185208	1					
ANR	8186304	Argument	pmdev -> width - bold_added		8185208	1					
ANR	8186305	AdditiveExpression	pmdev -> width - bold_added		8185208	0		-			
ANR	8186306	PtrMemberAccess	pmdev -> width		8185208	0					
ANR	8186307	Identifier	pmdev		8185208	0					
ANR	8186308	Identifier	width		8185208	1					
ANR	8186309	Identifier	bold_added		8185208	1					
ANR	8186310	Argument	bold_added		8185208	2					
ANR	8186311	Identifier	bold_added		8185208	0					
ANR	8186312	Argument	"""pl_tt_build_char(bold_lines)"""		8185208	3					
ANR	8186313	PrimaryExpression	"""pl_tt_build_char(bold_lines)"""		8185208	0					
ANR	8186314	IfStatement	if ( ienum == 0 || bold_lines == 0 )		8185208	3					
ANR	8186315	Condition	ienum == 0 || bold_lines == 0	1170:12:40347:40375	8185208	0	True				
ANR	8186316	OrExpression	ienum == 0 || bold_lines == 0		8185208	0		||			
ANR	8186317	EqualityExpression	ienum == 0		8185208	0		==			
ANR	8186318	Identifier	ienum		8185208	0					
ANR	8186319	PrimaryExpression	0		8185208	1					
ANR	8186320	EqualityExpression	bold_lines == 0		8185208	1		==			
ANR	8186321	Identifier	bold_lines		8185208	0					
ANR	8186322	PrimaryExpression	0		8185208	1					
ANR	8186323	CompoundStatement		193:43:6905:6905	8185208	1					
ANR	8186324	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1171:12:40392:40430	8185208	0	True				
ANR	8186325	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		8185208	0		=			
ANR	8186326	Identifier	code		8185208	0					
ANR	8186327	CallExpression	gs_note_error ( gs_error_VMerror )		8185208	1					
ANR	8186328	Callee	gs_note_error		8185208	0					
ANR	8186329	Identifier	gs_note_error		8185208	0					
ANR	8186330	ArgumentList	gs_error_VMerror		8185208	1					
ANR	8186331	Argument	gs_error_VMerror		8185208	0					
ANR	8186332	Identifier	gs_error_VMerror		8185208	0					
ANR	8186333	GotoStatement	goto out ;	1172:12:40444:40452	8185208	1	True				
ANR	8186334	Identifier	out		8185208	0					
ANR	8186335	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	1174:8:40472:40506	8185208	4	True				
ANR	8186336	CallExpression	"gs_image_t_init_mask ( & image , true )"		8185208	0					
ANR	8186337	Callee	gs_image_t_init_mask		8185208	0					
ANR	8186338	Identifier	gs_image_t_init_mask		8185208	0					
ANR	8186339	ArgumentList	& image		8185208	1					
ANR	8186340	Argument	& image		8185208	0					
ANR	8186341	UnaryOperationExpression	& image		8185208	0					
ANR	8186342	UnaryOperator	&		8185208	0					
ANR	8186343	Identifier	image		8185208	1					
ANR	8186344	Argument	true		8185208	1					
ANR	8186345	Identifier	true		8185208	0					
ANR	8186346	ExpressionStatement	image . Width = pmdev -> width	1175:8:40516:40542	8185208	5	True				
ANR	8186347	AssignmentExpression	image . Width = pmdev -> width		8185208	0		=			
ANR	8186348	MemberAccess	image . Width		8185208	0					
ANR	8186349	Identifier	image		8185208	0					
ANR	8186350	Identifier	Width		8185208	1					
ANR	8186351	PtrMemberAccess	pmdev -> width		8185208	1					
ANR	8186352	Identifier	pmdev		8185208	0					
ANR	8186353	Identifier	width		8185208	1					
ANR	8186354	ExpressionStatement	image . Height = pmdev -> height + bold_added	1176:8:40552:40593	8185208	6	True				
ANR	8186355	AssignmentExpression	image . Height = pmdev -> height + bold_added		8185208	0		=			
ANR	8186356	MemberAccess	image . Height		8185208	0					
ANR	8186357	Identifier	image		8185208	0					
ANR	8186358	Identifier	Height		8185208	1					
ANR	8186359	AdditiveExpression	pmdev -> height + bold_added		8185208	1		+			
ANR	8186360	PtrMemberAccess	pmdev -> height		8185208	0					
ANR	8186361	Identifier	pmdev		8185208	0					
ANR	8186362	Identifier	height		8185208	1					
ANR	8186363	Identifier	bold_added		8185208	1					
ANR	8186364	ExpressionStatement	"gs_make_scaling ( scale , scale , & image . ImageMatrix )"	1177:8:40603:40652	8185208	7	True				
ANR	8186365	CallExpression	"gs_make_scaling ( scale , scale , & image . ImageMatrix )"		8185208	0					
ANR	8186366	Callee	gs_make_scaling		8185208	0					
ANR	8186367	Identifier	gs_make_scaling		8185208	0					
ANR	8186368	ArgumentList	scale		8185208	1					
ANR	8186369	Argument	scale		8185208	0					
ANR	8186370	Identifier	scale		8185208	0					
ANR	8186371	Argument	scale		8185208	1					
ANR	8186372	Identifier	scale		8185208	0					
ANR	8186373	Argument	& image . ImageMatrix		8185208	2					
ANR	8186374	UnaryOperationExpression	& image . ImageMatrix		8185208	0					
ANR	8186375	UnaryOperator	&		8185208	0					
ANR	8186376	MemberAccess	image . ImageMatrix		8185208	1					
ANR	8186377	Identifier	image		8185208	0					
ANR	8186378	Identifier	ImageMatrix		8185208	1					
ANR	8186379	ExpressionStatement	image . ImageMatrix . tx = ( float ) ( - ipx )	1178:8:40662:40698	8185208	8	True				
ANR	8186380	AssignmentExpression	image . ImageMatrix . tx = ( float ) ( - ipx )		8185208	0		=			
ANR	8186381	MemberAccess	image . ImageMatrix . tx		8185208	0					
ANR	8186382	MemberAccess	image . ImageMatrix		8185208	0					
ANR	8186383	Identifier	image		8185208	0					
ANR	8186384	Identifier	ImageMatrix		8185208	1					
ANR	8186385	Identifier	tx		8185208	1					
ANR	8186386	CastExpression	( float ) ( - ipx )		8185208	1					
ANR	8186387	CastTarget	float		8185208	0					
ANR	8186388	UnaryOperationExpression	- ipx		8185208	1					
ANR	8186389	UnaryOperator	-		8185208	0					
ANR	8186390	Identifier	ipx		8185208	1					
ANR	8186391	ExpressionStatement	image . ImageMatrix . ty = ( float ) ( - ipy )	1179:8:40708:40744	8185208	9	True				
ANR	8186392	AssignmentExpression	image . ImageMatrix . ty = ( float ) ( - ipy )		8185208	0		=			
ANR	8186393	MemberAccess	image . ImageMatrix . ty		8185208	0					
ANR	8186394	MemberAccess	image . ImageMatrix		8185208	0					
ANR	8186395	Identifier	image		8185208	0					
ANR	8186396	Identifier	ImageMatrix		8185208	1					
ANR	8186397	Identifier	ty		8185208	1					
ANR	8186398	CastExpression	( float ) ( - ipy )		8185208	1					
ANR	8186399	CastTarget	float		8185208	0					
ANR	8186400	UnaryOperationExpression	- ipy		8185208	1					
ANR	8186401	UnaryOperator	-		8185208	0					
ANR	8186402	Identifier	ipy		8185208	1					
ANR	8186403	ExpressionStatement	image . adjust = true	1180:8:40754:40773	8185208	10	True				
ANR	8186404	AssignmentExpression	image . adjust = true		8185208	0		=			
ANR	8186405	MemberAccess	image . adjust		8185208	0					
ANR	8186406	Identifier	image		8185208	0					
ANR	8186407	Identifier	adjust		8185208	1					
ANR	8186408	Identifier	true		8185208	1					
ANR	8186409	ExpressionStatement	"code = gs_setcharwidth ( penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"	1181:8:40783:40831	8185208	11	True				
ANR	8186410	AssignmentExpression	"code = gs_setcharwidth ( penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"		8185208	0		=			
ANR	8186411	Identifier	code		8185208	0					
ANR	8186412	CallExpression	"gs_setcharwidth ( penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"		8185208	1					
ANR	8186413	Callee	gs_setcharwidth		8185208	0					
ANR	8186414	Identifier	gs_setcharwidth		8185208	0					
ANR	8186415	ArgumentList	penum		8185208	1					
ANR	8186416	Argument	penum		8185208	0					
ANR	8186417	Identifier	penum		8185208	0					
ANR	8186418	Argument	pgs		8185208	1					
ANR	8186419	Identifier	pgs		8185208	0					
ANR	8186420	Argument	w2 [ 0 ]		8185208	2					
ANR	8186421	ArrayIndexing	w2 [ 0 ]		8185208	0					
ANR	8186422	Identifier	w2		8185208	0					
ANR	8186423	PrimaryExpression	0		8185208	1					
ANR	8186424	Argument	w2 [ 1 ]		8185208	3					
ANR	8186425	ArrayIndexing	w2 [ 1 ]		8185208	0					
ANR	8186426	Identifier	w2		8185208	0					
ANR	8186427	PrimaryExpression	1		8185208	1					
ANR	8186428	IfStatement	if ( code < 0 )		8185208	12					
ANR	8186429	Condition	code < 0	1182:12:40845:40852	8185208	0	True				
ANR	8186430	RelationalExpression	code < 0		8185208	0		<			
ANR	8186431	Identifier	code		8185208	0					
ANR	8186432	PrimaryExpression	0		8185208	1					
ANR	8186433	GotoStatement	goto out ;	1183:12:40867:40875	8185208	1	True				
ANR	8186434	Identifier	out		8185208	0					
ANR	8186435	ExpressionStatement	"code = pl_image_bitmap_char ( ienum , & image , pmdev -> base , bitmap_raster ( pmdev -> width ) , bold_added , bold_lines , pgs )"	1184:8:40885:41070	8185208	13	True				
ANR	8186436	AssignmentExpression	"code = pl_image_bitmap_char ( ienum , & image , pmdev -> base , bitmap_raster ( pmdev -> width ) , bold_added , bold_lines , pgs )"		8185208	0		=			
ANR	8186437	Identifier	code		8185208	0					
ANR	8186438	CallExpression	"pl_image_bitmap_char ( ienum , & image , pmdev -> base , bitmap_raster ( pmdev -> width ) , bold_added , bold_lines , pgs )"		8185208	1					
ANR	8186439	Callee	pl_image_bitmap_char		8185208	0					
ANR	8186440	Identifier	pl_image_bitmap_char		8185208	0					
ANR	8186441	ArgumentList	ienum		8185208	1					
ANR	8186442	Argument	ienum		8185208	0					
ANR	8186443	Identifier	ienum		8185208	0					
ANR	8186444	Argument	& image		8185208	1					
ANR	8186445	UnaryOperationExpression	& image		8185208	0					
ANR	8186446	UnaryOperator	&		8185208	0					
ANR	8186447	Identifier	image		8185208	1					
ANR	8186448	Argument	pmdev -> base		8185208	2					
ANR	8186449	PtrMemberAccess	pmdev -> base		8185208	0					
ANR	8186450	Identifier	pmdev		8185208	0					
ANR	8186451	Identifier	base		8185208	1					
ANR	8186452	Argument	bitmap_raster ( pmdev -> width )		8185208	3					
ANR	8186453	CallExpression	bitmap_raster ( pmdev -> width )		8185208	0					
ANR	8186454	Callee	bitmap_raster		8185208	0					
ANR	8186455	Identifier	bitmap_raster		8185208	0					
ANR	8186456	ArgumentList	pmdev -> width		8185208	1					
ANR	8186457	Argument	pmdev -> width		8185208	0					
ANR	8186458	PtrMemberAccess	pmdev -> width		8185208	0					
ANR	8186459	Identifier	pmdev		8185208	0					
ANR	8186460	Identifier	width		8185208	1					
ANR	8186461	Argument	bold_added		8185208	4					
ANR	8186462	Identifier	bold_added		8185208	0					
ANR	8186463	Argument	bold_lines		8185208	5					
ANR	8186464	Identifier	bold_lines		8185208	0					
ANR	8186465	Argument	pgs		8185208	6					
ANR	8186466	Identifier	pgs		8185208	0					
ANR	8186467	Label	out :	1187:6:41078:41081	8185208	14	True				
ANR	8186468	Identifier	out		8185208	0					
ANR	8186469	IfStatement	if ( bold_device_created )		8185208	15					
ANR	8186470	Condition	bold_device_created	1187:14:41086:41104	8185208	0	True				
ANR	8186471	Identifier	bold_device_created		8185208	0					
ANR	8186472	ExpressionStatement	"gx_device_retain ( ( gx_device * ) pmdev , false )"	1188:12:41119:41163	8185208	1	True				
ANR	8186473	CallExpression	"gx_device_retain ( ( gx_device * ) pmdev , false )"		8185208	0					
ANR	8186474	Callee	gx_device_retain		8185208	0					
ANR	8186475	Identifier	gx_device_retain		8185208	0					
ANR	8186476	ArgumentList	( gx_device * ) pmdev		8185208	1					
ANR	8186477	Argument	( gx_device * ) pmdev		8185208	0					
ANR	8186478	CastExpression	( gx_device * ) pmdev		8185208	0					
ANR	8186479	CastTarget	gx_device *		8185208	0					
ANR	8186480	Identifier	pmdev		8185208	1					
ANR	8186481	Argument	false		8185208	1					
ANR	8186482	Identifier	false		8185208	0					
ANR	8186483	ExpressionStatement	"gs_free_object ( pgs -> memory , bold_lines , ""pl_tt_build_char(bold_lines)"" )"	1189:8:41173:41267	8185208	16	True				
ANR	8186484	CallExpression	"gs_free_object ( pgs -> memory , bold_lines , ""pl_tt_build_char(bold_lines)"" )"		8185208	0					
ANR	8186485	Callee	gs_free_object		8185208	0					
ANR	8186486	Identifier	gs_free_object		8185208	0					
ANR	8186487	ArgumentList	pgs -> memory		8185208	1					
ANR	8186488	Argument	pgs -> memory		8185208	0					
ANR	8186489	PtrMemberAccess	pgs -> memory		8185208	0					
ANR	8186490	Identifier	pgs		8185208	0					
ANR	8186491	Identifier	memory		8185208	1					
ANR	8186492	Argument	bold_lines		8185208	1					
ANR	8186493	Identifier	bold_lines		8185208	0					
ANR	8186494	Argument	"""pl_tt_build_char(bold_lines)"""		8185208	2					
ANR	8186495	PrimaryExpression	"""pl_tt_build_char(bold_lines)"""		8185208	0					
ANR	8186496	ExpressionStatement	"gs_free_object ( pgs -> memory , ienum , ""pl_tt_build_char(image enum)"" )"	1191:8:41277:41343	8185208	17	True				
ANR	8186497	CallExpression	"gs_free_object ( pgs -> memory , ienum , ""pl_tt_build_char(image enum)"" )"		8185208	0					
ANR	8186498	Callee	gs_free_object		8185208	0					
ANR	8186499	Identifier	gs_free_object		8185208	0					
ANR	8186500	ArgumentList	pgs -> memory		8185208	1					
ANR	8186501	Argument	pgs -> memory		8185208	0					
ANR	8186502	PtrMemberAccess	pgs -> memory		8185208	0					
ANR	8186503	Identifier	pgs		8185208	0					
ANR	8186504	Identifier	memory		8185208	1					
ANR	8186505	Argument	ienum		8185208	1					
ANR	8186506	Identifier	ienum		8185208	0					
ANR	8186507	Argument	"""pl_tt_build_char(image enum)"""		8185208	2					
ANR	8186508	PrimaryExpression	"""pl_tt_build_char(image enum)"""		8185208	0					
ANR	8186509	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1193:4:41355:41383	8185208	79	True				
ANR	8186510	ConditionalExpression	code < 0 ? code : 0		8185208	0					
ANR	8186511	Condition	code < 0		8185208	0					
ANR	8186512	RelationalExpression	code < 0		8185208	0		<			
ANR	8186513	Identifier	code		8185208	0					
ANR	8186514	PrimaryExpression	0		8185208	1					
ANR	8186515	Identifier	code		8185208	1					
ANR	8186516	PrimaryExpression	0		8185208	2					
ANR	8186517	Statement	undef	1194:1:41386:41390	8185208	80	True				
ANR	8186518	Statement	pfont42	1194:7:41392:41398	8185208	81	True				
ANR	8186519	Statement	undef	1195:1:41401:41405	8185208	82	True				
ANR	8186520	Statement	pbfont	1195:7:41407:41412	8185208	83	True				
ANR	8186521	ReturnType	static int		8185208	1					
ANR	8186522	Identifier	pl_tt_build_char		8185208	2					
ANR	8186523	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph orig_glyph"		8185208	3					
ANR	8186524	Parameter	gs_show_enum * penum	976:17:33365:33384	8185208	0	True				
ANR	8186525	ParameterType	gs_show_enum *		8185208	0					
ANR	8186526	Identifier	penum		8185208	1					
ANR	8186527	Parameter	gs_gstate * pgs	976:39:33387:33401	8185208	1	True				
ANR	8186528	ParameterType	gs_gstate *		8185208	0					
ANR	8186529	Identifier	pgs		8185208	1					
ANR	8186530	Parameter	gs_font * pfont	976:56:33404:33418	8185208	2	True				
ANR	8186531	ParameterType	gs_font *		8185208	0					
ANR	8186532	Identifier	pfont		8185208	1					
ANR	8186533	Parameter	gs_char chr	977:17:33438:33448	8185208	3	True				
ANR	8186534	ParameterType	gs_char		8185208	0					
ANR	8186535	Identifier	chr		8185208	1					
ANR	8186536	Parameter	gs_glyph orig_glyph	977:30:33451:33469	8185208	4	True				
ANR	8186537	ParameterType	gs_glyph		8185208	0					
ANR	8186538	Identifier	orig_glyph		8185208	1					
ANR	8186539	CFGEntryNode	ENTRY		8185208		True				
ANR	8186540	CFGExitNode	EXIT		8185208		True				
ANR	8186541	Symbol	cpm_show		8185208						
ANR	8186542	Symbol	image . ImageMatrix		8185208						
ANR	8186543	Symbol	* pgs		8185208						
ANR	8186544	Symbol	sbox . p		8185208						
ANR	8186545	Symbol	sbw		8185208						
ANR	8186546	Symbol	sbox . q		8185208						
ANR	8186547	Symbol	plfont		8185208						
ANR	8186548	Symbol	open_device		8185208						
ANR	8186549	Symbol	pbbox -> p		8185208						
ANR	8186550	Symbol	pbbox -> q		8185208						
ANR	8186551	Symbol	sbox . q . x		8185208						
ANR	8186552	Symbol	sbox . q . y		8185208						
ANR	8186553	Symbol	mat . xy		8185208						
ANR	8186554	Symbol	mat . xx		8185208						
ANR	8186555	Symbol	& smat		8185208						
ANR	8186556	Symbol	pl_image_bitmap_char		8185208						
ANR	8186557	Symbol	ienum		8185208						
ANR	8186558	Symbol	gs_stroke		8185208						
ANR	8186559	Symbol	gs_show_in_charpath		8185208						
ANR	8186560	Symbol	save_ctm		8185208						
ANR	8186561	Symbol	gs_currentlinewidth		8185208						
ANR	8186562	Symbol	& image		8185208						
ANR	8186563	Symbol	penum		8185208						
ANR	8186564	Symbol	bold_device_created		8185208						
ANR	8186565	Symbol	ceil		8185208						
ANR	8186566	Symbol	cbox . q		8185208						
ANR	8186567	Symbol	cbox . p		8185208						
ANR	8186568	Symbol	pfont -> client_data		8185208						
ANR	8186569	Symbol	ipx		8185208						
ANR	8186570	Symbol	bold_lines		8185208						
ANR	8186571	Symbol	ipy		8185208						
ANR	8186572	Symbol	pmdev -> width		8185208						
ANR	8186573	Symbol	smat		8185208						
ANR	8186574	Symbol	pgs -> fill_adjust . y		8185208						
ANR	8186575	Symbol	pgs -> fill_adjust . x		8185208						
ANR	8186576	Symbol	& image . ImageMatrix		8185208						
ANR	8186577	Symbol	pl_font_vertical_glyph		8185208						
ANR	8186578	Symbol	* pmdev		8185208						
ANR	8186579	Symbol	pmdev -> is_open		8185208						
ANR	8186580	Symbol	& mat		8185208						
ANR	8186581	Symbol	* w2		8185208						
ANR	8186582	Symbol	* dev_proc		8185208						
ANR	8186583	Symbol	pbbox -> p . x		8185208						
ANR	8186584	Symbol	image . ImageMatrix . ty		8185208						
ANR	8186585	Symbol	pbbox -> p . y		8185208						
ANR	8186586	Symbol	sbox		8185208						
ANR	8186587	Symbol	smat . tx		8185208						
ANR	8186588	Symbol	smat . ty		8185208						
ANR	8186589	Symbol	image . ImageMatrix . tx		8185208						
ANR	8186590	Symbol	iqy		8185208						
ANR	8186591	Symbol	gs_grestore		8185208						
ANR	8186592	Symbol	bold_fraction		8185208						
ANR	8186593	Symbol	iqx		8185208						
ANR	8186594	Symbol	gs_gsave		8185208						
ANR	8186595	Symbol	gs_currentmiterlimit		8185208						
ANR	8186596	Symbol	& pmdev		8185208						
ANR	8186597	Symbol	cbox . q . y		8185208						
ANR	8186598	Symbol	pgs		8185208						
ANR	8186599	Symbol	pgs -> memory		8185208						
ANR	8186600	Symbol	cbox . q . x		8185208						
ANR	8186601	Symbol	mat		8185208						
ANR	8186602	Symbol	tt_set_cache		8185208						
ANR	8186603	Symbol	fabs		8185208						
ANR	8186604	Symbol	pfont42		8185208						
ANR	8186605	Symbol	max		8185208						
ANR	8186606	Symbol	bitmap_raster		8185208						
ANR	8186607	Symbol	GS_NO_GLYPH		8185208						
ANR	8186608	Symbol	* sbw		8185208						
ANR	8186609	Symbol	int2fixed		8185208						
ANR	8186610	Symbol	"* dev_proc ( pmdev , open_device )"		8185208						
ANR	8186611	Symbol	& cbox		8185208						
ANR	8186612	Symbol	pfont -> WMode		8185208						
ANR	8186613	Symbol	pmdev -> base		8185208						
ANR	8186614	Symbol	gs_make_mem_mono_device_with_copydevice		8185208						
ANR	8186615	Symbol	pmdev -> height		8185208						
ANR	8186616	Symbol	pmdev -> bitmap_memory		8185208						
ANR	8186617	Symbol	fixed_0		8185208						
ANR	8186618	Symbol	pgs -> device		8185208						
ANR	8186619	Symbol	* pbbox		8185208						
ANR	8186620	Symbol	w2		8185208						
ANR	8186621	Symbol	bold_added		8185208						
ANR	8186622	Symbol	image		8185208						
ANR	8186623	Symbol	sbox . p . x		8185208						
ANR	8186624	Symbol	sbox . p . y		8185208						
ANR	8186625	Symbol	pmdev		8185208						
ANR	8186626	Symbol	cbox		8185208						
ANR	8186627	Symbol	chr		8185208						
ANR	8186628	Symbol	alloc_bold_lines		8185208						
ANR	8186629	Symbol	gx_set_device_color_1		8185208						
ANR	8186630	Symbol	expand		8185208						
ANR	8186631	Symbol	true		8185208						
ANR	8186632	Symbol	fa		8185208						
ANR	8186633	Symbol	pfont -> PaintType		8185208						
ANR	8186634	Symbol	gs_fill		8185208						
ANR	8186635	Symbol	pbbox -> q . y		8185208						
ANR	8186636	Symbol	image . Width		8185208						
ANR	8186637	Symbol	pbbox		8185208						
ANR	8186638	Symbol	ctm_modified		8185208						
ANR	8186639	Symbol	code		8185208						
ANR	8186640	Symbol	gs_image_enum_alloc		8185208						
ANR	8186641	Symbol	cbox . p . x		8185208						
ANR	8186642	Symbol	scale		8185208						
ANR	8186643	Symbol	cbox . p . y		8185208						
ANR	8186644	Symbol	vertical		8185208						
ANR	8186645	Symbol	pgs -> path		8185208						
ANR	8186646	Symbol	gs_moveto		8185208						
ANR	8186647	Symbol	gs_type42_append		8185208						
ANR	8186648	Symbol	gs_setcharwidth		8185208						
ANR	8186649	Symbol	gs_type42_get_metrics		8185208						
ANR	8186650	Symbol	gx_clip_to_rectangle		8185208						
ANR	8186651	Symbol	dev_proc		8185208						
ANR	8186652	Symbol	pbbox -> q . x		8185208						
ANR	8186653	Symbol	plfont -> allow_vertical_substitutes		8185208						
ANR	8186654	Symbol	& sbox		8185208						
ANR	8186655	Symbol	& save_ctm		8185208						
ANR	8186656	Symbol	pfont		8185208						
ANR	8186657	Symbol	orig_glyph		8185208						
ANR	8186658	Symbol	false		8185208						
ANR	8186659	Symbol	image . Height		8185208						
ANR	8186660	Symbol	pgs -> fill_adjust		8185208						
ANR	8186661	Symbol	gs_error_VMerror		8185208						
ANR	8186662	Symbol	glyph		8185208						
ANR	8186663	Symbol	* pfont		8185208						
ANR	8186664	Symbol	pbfont		8185208						
ANR	8186665	Symbol	gs_note_error		8185208						
ANR	8186666	Symbol	plfont -> bold_fraction		8185208						
ANR	8186667	Symbol	mat . yy		8185208						
ANR	8186668	Symbol	image . adjust		8185208						
ANR	8186669	Symbol	mat . yx		8185208						
ANR	8186670	Symbol	& pbfont -> FontBBox		8185208						
ANR	8186671	Symbol	* plfont		8185208						
ANR	8186672	Function	pl_intelli_encode_char	1200:0:41559:41709							
ANR	8186673	FunctionDef	"pl_intelli_encode_char (gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used)"		8186672	0					
ANR	8186674	CompoundStatement		1203:0:41679:41709	8186672	0					
ANR	8186675	ReturnStatement	return ( gs_glyph ) pchr ;	1204:4:41685:41707	8186672	0	True				
ANR	8186676	CastExpression	( gs_glyph ) pchr		8186672	0					
ANR	8186677	CastTarget	gs_glyph		8186672	0					
ANR	8186678	Identifier	pchr		8186672	1					
ANR	8186679	ReturnType	static gs_glyph		8186672	1					
ANR	8186680	Identifier	pl_intelli_encode_char		8186672	2					
ANR	8186681	ParameterList	"gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used"		8186672	3					
ANR	8186682	Parameter	gs_font * pfont	1201:23:41598:41612	8186672	0	True				
ANR	8186683	ParameterType	gs_font *		8186672	0					
ANR	8186684	Identifier	pfont		8186672	1					
ANR	8186685	Parameter	gs_char pchr	1201:40:41615:41626	8186672	1	True				
ANR	8186686	ParameterType	gs_char		8186672	0					
ANR	8186687	Identifier	pchr		8186672	1					
ANR	8186688	Parameter	gs_glyph_space_t not_used	1202:23:41652:41676	8186672	2	True				
ANR	8186689	ParameterType	gs_glyph_space_t		8186672	0					
ANR	8186690	Identifier	not_used		8186672	1					
ANR	8186691	CFGEntryNode	ENTRY		8186672		True				
ANR	8186692	CFGExitNode	EXIT		8186672		True				
ANR	8186693	Symbol	not_used		8186672						
ANR	8186694	Symbol	pfont		8186672						
ANR	8186695	Symbol	pchr		8186672						
ANR	8186696	ClassDef	intelli_metrics_s	1208:8:41775:41931							
ANR	8186697	DeclStmt									
ANR	8186698	Decl							byte	byte [ 2 ]	halfLine
ANR	8186699	DeclStmt									
ANR	8186700	Decl							byte	byte [ 2 ]	centerline
ANR	8186701	DeclStmt									
ANR	8186702	Decl							intelli_metrics_s	intelli_metrics_s	intelli_metrics_t
ANR	8186703	Function	pl_intelli_merge_box	1218:0:42074:43503							
ANR	8186704	FunctionDef	"pl_intelli_merge_box (float wbox [ 6 ] , const pl_font_t * plfont , gs_glyph glyph)"		8186703	0					
ANR	8186705	CompoundStatement		1220:0:42164:43503	8186703	0					
ANR	8186706	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data ;"	1221:4:42170:42231	8186703	0	True				
ANR	8186707	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8186703	0					
ANR	8186708	IdentifierDeclType	const byte *		8186703	0					
ANR	8186709	Identifier	cdata		8186703	1					
ANR	8186710	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8186703	2		=			
ANR	8186711	Identifier	cdata		8186703	0					
ANR	8186712	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8186703	1					
ANR	8186713	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8186703	0					
ANR	8186714	Callee	pl_font_lookup_glyph		8186703	0					
ANR	8186715	Identifier	pl_font_lookup_glyph		8186703	0					
ANR	8186716	ArgumentList	plfont		8186703	1					
ANR	8186717	Argument	plfont		8186703	0					
ANR	8186718	Identifier	plfont		8186703	0					
ANR	8186719	Argument	glyph		8186703	1					
ANR	8186720	Identifier	glyph		8186703	0					
ANR	8186721	Identifier	data		8186703	1					
ANR	8186722	IfStatement	if ( cdata == 0 )		8186703	1					
ANR	8186723	Condition	cdata == 0	1223:8:42242:42251	8186703	0	True				
ANR	8186724	EqualityExpression	cdata == 0		8186703	0		==			
ANR	8186725	Identifier	cdata		8186703	0					
ANR	8186726	PrimaryExpression	0		8186703	1					
ANR	8186727	ReturnStatement	return false ;	1224:8:42262:42274	8186703	1	True				
ANR	8186728	Identifier	false		8186703	0					
ANR	8186729	ExpressionStatement	wbox [ 1 ] = 0	1225:4:42280:42291	8186703	2	True				
ANR	8186730	AssignmentExpression	wbox [ 1 ] = 0		8186703	0		=			
ANR	8186731	ArrayIndexing	wbox [ 1 ]		8186703	0					
ANR	8186732	Identifier	wbox		8186703	0					
ANR	8186733	PrimaryExpression	1		8186703	1					
ANR	8186734	PrimaryExpression	0		8186703	1					
ANR	8186735	IfStatement	if ( cdata [ 3 ] == 4 )		8186703	3					
ANR	8186736	Condition	cdata [ 3 ] == 4	1226:8:42301:42313	8186703	0	True				
ANR	8186737	EqualityExpression	cdata [ 3 ] == 4		8186703	0		==			
ANR	8186738	ArrayIndexing	cdata [ 3 ]		8186703	0					
ANR	8186739	Identifier	cdata		8186703	0					
ANR	8186740	PrimaryExpression	3		8186703	1					
ANR	8186741	PrimaryExpression	4		8186703	1					
ANR	8186742	CompoundStatement		10:8:305:311	8186703	1					
ANR	8186743	IdentifierDeclStatement	bool found = false ;	1228:8:42442:42460	8186703	0	True				
ANR	8186744	IdentifierDecl	found = false		8186703	0					
ANR	8186745	IdentifierDeclType	bool		8186703	0					
ANR	8186746	Identifier	found		8186703	1					
ANR	8186747	AssignmentExpression	found = false		8186703	2		=			
ANR	8186748	Identifier	false		8186703	0					
ANR	8186749	Identifier	false		8186703	1					
ANR	8186750	IdentifierDeclStatement	uint i ;	1229:8:42470:42476	8186703	1	True				
ANR	8186751	IdentifierDecl	i		8186703	0					
ANR	8186752	IdentifierDeclType	uint		8186703	0					
ANR	8186753	Identifier	i		8186703	1					
ANR	8186754	ForStatement	for ( i = 0 ; i < cdata [ 6 ] ; ++ i )		8186703	2					
ANR	8186755	ForInit	i = 0 ;	1231:13:42492:42497	8186703	0	True				
ANR	8186756	AssignmentExpression	i = 0		8186703	0		=			
ANR	8186757	Identifier	i		8186703	0					
ANR	8186758	PrimaryExpression	0		8186703	1					
ANR	8186759	Condition	i < cdata [ 6 ]	1231:20:42499:42510	8186703	1	True				
ANR	8186760	RelationalExpression	i < cdata [ 6 ]		8186703	0		<			
ANR	8186761	Identifier	i		8186703	0					
ANR	8186762	ArrayIndexing	cdata [ 6 ]		8186703	1					
ANR	8186763	Identifier	cdata		8186703	0					
ANR	8186764	PrimaryExpression	6		8186703	1					
ANR	8186765	UnaryExpression	++ i	1231:34:42513:42515	8186703	2	True				
ANR	8186766	IncDec	++		8186703	0					
ANR	8186767	Identifier	i		8186703	1					
ANR	8186768	ExpressionStatement	"found |= pl_intelli_merge_box ( wbox , plfont , pl_get_uint16 ( cdata + 8 + i * 6 ) )"	1232:12:42530:42649	8186703	3	True				
ANR	8186769	AssignmentExpression	"found |= pl_intelli_merge_box ( wbox , plfont , pl_get_uint16 ( cdata + 8 + i * 6 ) )"		8186703	0		|=			
ANR	8186770	Identifier	found		8186703	0					
ANR	8186771	CallExpression	"pl_intelli_merge_box ( wbox , plfont , pl_get_uint16 ( cdata + 8 + i * 6 ) )"		8186703	1					
ANR	8186772	Callee	pl_intelli_merge_box		8186703	0					
ANR	8186773	Identifier	pl_intelli_merge_box		8186703	0					
ANR	8186774	ArgumentList	wbox		8186703	1					
ANR	8186775	Argument	wbox		8186703	0					
ANR	8186776	Identifier	wbox		8186703	0					
ANR	8186777	Argument	plfont		8186703	1					
ANR	8186778	Identifier	plfont		8186703	0					
ANR	8186779	Argument	pl_get_uint16 ( cdata + 8 + i * 6 )		8186703	2					
ANR	8186780	CallExpression	pl_get_uint16 ( cdata + 8 + i * 6 )		8186703	0					
ANR	8186781	Callee	pl_get_uint16		8186703	0					
ANR	8186782	Identifier	pl_get_uint16		8186703	0					
ANR	8186783	ArgumentList	cdata + 8 + i * 6		8186703	1					
ANR	8186784	Argument	cdata + 8 + i * 6		8186703	0					
ANR	8186785	AdditiveExpression	cdata + 8 + i * 6		8186703	0		+			
ANR	8186786	Identifier	cdata		8186703	0					
ANR	8186787	AdditiveExpression	8 + i * 6		8186703	1		+			
ANR	8186788	PrimaryExpression	8		8186703	0					
ANR	8186789	MultiplicativeExpression	i * 6		8186703	1		*			
ANR	8186790	Identifier	i		8186703	0					
ANR	8186791	PrimaryExpression	6		8186703	1					
ANR	8186792	ExpressionStatement	wbox [ 0 ] = ( float ) pl_get_int16 ( cdata + 4 )	1234:8:42659:42699	8186703	3	True				
ANR	8186793	AssignmentExpression	wbox [ 0 ] = ( float ) pl_get_int16 ( cdata + 4 )		8186703	0		=			
ANR	8186794	ArrayIndexing	wbox [ 0 ]		8186703	0					
ANR	8186795	Identifier	wbox		8186703	0					
ANR	8186796	PrimaryExpression	0		8186703	1					
ANR	8186797	CastExpression	( float ) pl_get_int16 ( cdata + 4 )		8186703	1					
ANR	8186798	CastTarget	float		8186703	0					
ANR	8186799	CallExpression	pl_get_int16 ( cdata + 4 )		8186703	1					
ANR	8186800	Callee	pl_get_int16		8186703	0					
ANR	8186801	Identifier	pl_get_int16		8186703	0					
ANR	8186802	ArgumentList	cdata + 4		8186703	1					
ANR	8186803	Argument	cdata + 4		8186703	0					
ANR	8186804	AdditiveExpression	cdata + 4		8186703	0		+			
ANR	8186805	Identifier	cdata		8186703	0					
ANR	8186806	PrimaryExpression	4		8186703	1					
ANR	8186807	ReturnStatement	return found ;	1235:8:42709:42721	8186703	4	True				
ANR	8186808	Identifier	found		8186703	0					
ANR	8186809	ExpressionStatement	cdata += 4	1238:4:42767:42777	8186703	4	True				
ANR	8186810	AssignmentExpression	cdata += 4		8186703	0		+=			
ANR	8186811	Identifier	cdata		8186703	0					
ANR	8186812	PrimaryExpression	4		8186703	1					
ANR	8186813	CompoundStatement		26:8:971:1020	8186703	5					
ANR	8186814	IdentifierDeclStatement	const intelli_metrics_t * metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) ) ;	1240:8:42841:42949	8186703	0	True				
ANR	8186815	IdentifierDecl	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8186703	0					
ANR	8186816	IdentifierDeclType	const intelli_metrics_t *		8186703	0					
ANR	8186817	Identifier	metrics		8186703	1					
ANR	8186818	AssignmentExpression	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8186703	2		=			
ANR	8186819	Identifier	metrics		8186703	0					
ANR	8186820	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8186703	1					
ANR	8186821	CastTarget	const intelli_metrics_t *		8186703	0					
ANR	8186822	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8186703	1		+			
ANR	8186823	Identifier	cdata		8186703	0					
ANR	8186824	CallExpression	pl_get_uint16 ( cdata + 2 )		8186703	1					
ANR	8186825	Callee	pl_get_uint16		8186703	0					
ANR	8186826	Identifier	pl_get_uint16		8186703	0					
ANR	8186827	ArgumentList	cdata + 2		8186703	1					
ANR	8186828	Argument	cdata + 2		8186703	0					
ANR	8186829	AdditiveExpression	cdata + 2		8186703	0		+			
ANR	8186830	Identifier	cdata		8186703	0					
ANR	8186831	PrimaryExpression	2		8186703	1					
ANR	8186832	IdentifierDeclStatement	int llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] ) ;	1242:8:42959:43008	8186703	1	True				
ANR	8186833	IdentifierDecl	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8186703	0					
ANR	8186834	IdentifierDeclType	int		8186703	0					
ANR	8186835	Identifier	llx		8186703	1					
ANR	8186836	AssignmentExpression	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8186703	2		=			
ANR	8186837	Identifier	llx		8186703	0					
ANR	8186838	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8186703	1					
ANR	8186839	Callee	pl_get_int16		8186703	0					
ANR	8186840	Identifier	pl_get_int16		8186703	0					
ANR	8186841	ArgumentList	metrics -> charSymbolBox [ 0 ]		8186703	1					
ANR	8186842	Argument	metrics -> charSymbolBox [ 0 ]		8186703	0					
ANR	8186843	ArrayIndexing	metrics -> charSymbolBox [ 0 ]		8186703	0					
ANR	8186844	PtrMemberAccess	metrics -> charSymbolBox		8186703	0					
ANR	8186845	Identifier	metrics		8186703	0					
ANR	8186846	Identifier	charSymbolBox		8186703	1					
ANR	8186847	PrimaryExpression	0		8186703	1					
ANR	8186848	IdentifierDeclStatement	int lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] ) ;	1243:8:43018:43067	8186703	2	True				
ANR	8186849	IdentifierDecl	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8186703	0					
ANR	8186850	IdentifierDeclType	int		8186703	0					
ANR	8186851	Identifier	lly		8186703	1					
ANR	8186852	AssignmentExpression	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8186703	2		=			
ANR	8186853	Identifier	lly		8186703	0					
ANR	8186854	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8186703	1					
ANR	8186855	Callee	pl_get_int16		8186703	0					
ANR	8186856	Identifier	pl_get_int16		8186703	0					
ANR	8186857	ArgumentList	metrics -> charSymbolBox [ 1 ]		8186703	1					
ANR	8186858	Argument	metrics -> charSymbolBox [ 1 ]		8186703	0					
ANR	8186859	ArrayIndexing	metrics -> charSymbolBox [ 1 ]		8186703	0					
ANR	8186860	PtrMemberAccess	metrics -> charSymbolBox		8186703	0					
ANR	8186861	Identifier	metrics		8186703	0					
ANR	8186862	Identifier	charSymbolBox		8186703	1					
ANR	8186863	PrimaryExpression	1		8186703	1					
ANR	8186864	IdentifierDeclStatement	int urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] ) ;	1244:8:43077:43126	8186703	3	True				
ANR	8186865	IdentifierDecl	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8186703	0					
ANR	8186866	IdentifierDeclType	int		8186703	0					
ANR	8186867	Identifier	urx		8186703	1					
ANR	8186868	AssignmentExpression	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8186703	2		=			
ANR	8186869	Identifier	urx		8186703	0					
ANR	8186870	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8186703	1					
ANR	8186871	Callee	pl_get_int16		8186703	0					
ANR	8186872	Identifier	pl_get_int16		8186703	0					
ANR	8186873	ArgumentList	metrics -> charSymbolBox [ 2 ]		8186703	1					
ANR	8186874	Argument	metrics -> charSymbolBox [ 2 ]		8186703	0					
ANR	8186875	ArrayIndexing	metrics -> charSymbolBox [ 2 ]		8186703	0					
ANR	8186876	PtrMemberAccess	metrics -> charSymbolBox		8186703	0					
ANR	8186877	Identifier	metrics		8186703	0					
ANR	8186878	Identifier	charSymbolBox		8186703	1					
ANR	8186879	PrimaryExpression	2		8186703	1					
ANR	8186880	IdentifierDeclStatement	int ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] ) ;	1245:8:43136:43185	8186703	4	True				
ANR	8186881	IdentifierDecl	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8186703	0					
ANR	8186882	IdentifierDeclType	int		8186703	0					
ANR	8186883	Identifier	ury		8186703	1					
ANR	8186884	AssignmentExpression	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8186703	2		=			
ANR	8186885	Identifier	ury		8186703	0					
ANR	8186886	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8186703	1					
ANR	8186887	Callee	pl_get_int16		8186703	0					
ANR	8186888	Identifier	pl_get_int16		8186703	0					
ANR	8186889	ArgumentList	metrics -> charSymbolBox [ 3 ]		8186703	1					
ANR	8186890	Argument	metrics -> charSymbolBox [ 3 ]		8186703	0					
ANR	8186891	ArrayIndexing	metrics -> charSymbolBox [ 3 ]		8186703	0					
ANR	8186892	PtrMemberAccess	metrics -> charSymbolBox		8186703	0					
ANR	8186893	Identifier	metrics		8186703	0					
ANR	8186894	Identifier	charSymbolBox		8186703	1					
ANR	8186895	PrimaryExpression	3		8186703	1					
ANR	8186896	ExpressionStatement	wbox [ 0 ] = ( float ) ( pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] ) )	1247:8:43196:43330	8186703	5	True				
ANR	8186897	AssignmentExpression	wbox [ 0 ] = ( float ) ( pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] ) )		8186703	0		=			
ANR	8186898	ArrayIndexing	wbox [ 0 ]		8186703	0					
ANR	8186899	Identifier	wbox		8186703	0					
ANR	8186900	PrimaryExpression	0		8186703	1					
ANR	8186901	CastExpression	( float ) ( pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] ) )		8186703	1					
ANR	8186902	CastTarget	float		8186703	0					
ANR	8186903	AdditiveExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8186703	1		-			
ANR	8186904	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] )		8186703	0					
ANR	8186905	Callee	pl_get_int16		8186703	0					
ANR	8186906	Identifier	pl_get_int16		8186703	0					
ANR	8186907	ArgumentList	metrics -> charEscapementBox [ 2 ]		8186703	1					
ANR	8186908	Argument	metrics -> charEscapementBox [ 2 ]		8186703	0					
ANR	8186909	ArrayIndexing	metrics -> charEscapementBox [ 2 ]		8186703	0					
ANR	8186910	PtrMemberAccess	metrics -> charEscapementBox		8186703	0					
ANR	8186911	Identifier	metrics		8186703	0					
ANR	8186912	Identifier	charEscapementBox		8186703	1					
ANR	8186913	PrimaryExpression	2		8186703	1					
ANR	8186914	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8186703	1					
ANR	8186915	Callee	pl_get_int16		8186703	0					
ANR	8186916	Identifier	pl_get_int16		8186703	0					
ANR	8186917	ArgumentList	metrics -> charEscapementBox [ 0 ]		8186703	1					
ANR	8186918	Argument	metrics -> charEscapementBox [ 0 ]		8186703	0					
ANR	8186919	ArrayIndexing	metrics -> charEscapementBox [ 0 ]		8186703	0					
ANR	8186920	PtrMemberAccess	metrics -> charEscapementBox		8186703	0					
ANR	8186921	Identifier	metrics		8186703	0					
ANR	8186922	Identifier	charEscapementBox		8186703	1					
ANR	8186923	PrimaryExpression	0		8186703	1					
ANR	8186924	ExpressionStatement	"wbox [ 2 ] = min ( wbox [ 2 ] , llx )"	1249:8:43340:43367	8186703	6	True				
ANR	8186925	AssignmentExpression	"wbox [ 2 ] = min ( wbox [ 2 ] , llx )"		8186703	0		=			
ANR	8186926	ArrayIndexing	wbox [ 2 ]		8186703	0					
ANR	8186927	Identifier	wbox		8186703	0					
ANR	8186928	PrimaryExpression	2		8186703	1					
ANR	8186929	CallExpression	"min ( wbox [ 2 ] , llx )"		8186703	1					
ANR	8186930	Callee	min		8186703	0					
ANR	8186931	Identifier	min		8186703	0					
ANR	8186932	ArgumentList	wbox [ 2 ]		8186703	1					
ANR	8186933	Argument	wbox [ 2 ]		8186703	0					
ANR	8186934	ArrayIndexing	wbox [ 2 ]		8186703	0					
ANR	8186935	Identifier	wbox		8186703	0					
ANR	8186936	PrimaryExpression	2		8186703	1					
ANR	8186937	Argument	llx		8186703	1					
ANR	8186938	Identifier	llx		8186703	0					
ANR	8186939	ExpressionStatement	"wbox [ 3 ] = min ( wbox [ 3 ] , lly )"	1250:8:43377:43404	8186703	7	True				
ANR	8186940	AssignmentExpression	"wbox [ 3 ] = min ( wbox [ 3 ] , lly )"		8186703	0		=			
ANR	8186941	ArrayIndexing	wbox [ 3 ]		8186703	0					
ANR	8186942	Identifier	wbox		8186703	0					
ANR	8186943	PrimaryExpression	3		8186703	1					
ANR	8186944	CallExpression	"min ( wbox [ 3 ] , lly )"		8186703	1					
ANR	8186945	Callee	min		8186703	0					
ANR	8186946	Identifier	min		8186703	0					
ANR	8186947	ArgumentList	wbox [ 3 ]		8186703	1					
ANR	8186948	Argument	wbox [ 3 ]		8186703	0					
ANR	8186949	ArrayIndexing	wbox [ 3 ]		8186703	0					
ANR	8186950	Identifier	wbox		8186703	0					
ANR	8186951	PrimaryExpression	3		8186703	1					
ANR	8186952	Argument	lly		8186703	1					
ANR	8186953	Identifier	lly		8186703	0					
ANR	8186954	ExpressionStatement	"wbox [ 4 ] = max ( wbox [ 4 ] , urx )"	1251:8:43414:43441	8186703	8	True				
ANR	8186955	AssignmentExpression	"wbox [ 4 ] = max ( wbox [ 4 ] , urx )"		8186703	0		=			
ANR	8186956	ArrayIndexing	wbox [ 4 ]		8186703	0					
ANR	8186957	Identifier	wbox		8186703	0					
ANR	8186958	PrimaryExpression	4		8186703	1					
ANR	8186959	CallExpression	"max ( wbox [ 4 ] , urx )"		8186703	1					
ANR	8186960	Callee	max		8186703	0					
ANR	8186961	Identifier	max		8186703	0					
ANR	8186962	ArgumentList	wbox [ 4 ]		8186703	1					
ANR	8186963	Argument	wbox [ 4 ]		8186703	0					
ANR	8186964	ArrayIndexing	wbox [ 4 ]		8186703	0					
ANR	8186965	Identifier	wbox		8186703	0					
ANR	8186966	PrimaryExpression	4		8186703	1					
ANR	8186967	Argument	urx		8186703	1					
ANR	8186968	Identifier	urx		8186703	0					
ANR	8186969	ExpressionStatement	"wbox [ 5 ] = max ( wbox [ 5 ] , ury )"	1252:8:43451:43478	8186703	9	True				
ANR	8186970	AssignmentExpression	"wbox [ 5 ] = max ( wbox [ 5 ] , ury )"		8186703	0		=			
ANR	8186971	ArrayIndexing	wbox [ 5 ]		8186703	0					
ANR	8186972	Identifier	wbox		8186703	0					
ANR	8186973	PrimaryExpression	5		8186703	1					
ANR	8186974	CallExpression	"max ( wbox [ 5 ] , ury )"		8186703	1					
ANR	8186975	Callee	max		8186703	0					
ANR	8186976	Identifier	max		8186703	0					
ANR	8186977	ArgumentList	wbox [ 5 ]		8186703	1					
ANR	8186978	Argument	wbox [ 5 ]		8186703	0					
ANR	8186979	ArrayIndexing	wbox [ 5 ]		8186703	0					
ANR	8186980	Identifier	wbox		8186703	0					
ANR	8186981	PrimaryExpression	5		8186703	1					
ANR	8186982	Argument	ury		8186703	1					
ANR	8186983	Identifier	ury		8186703	0					
ANR	8186984	ReturnStatement	return true ;	1254:4:43490:43501	8186703	6	True				
ANR	8186985	Identifier	true		8186703	0					
ANR	8186986	ReturnType	static bool		8186703	1					
ANR	8186987	Identifier	pl_intelli_merge_box		8186703	2					
ANR	8186988	ParameterList	"float wbox [ 6 ] , const pl_font_t * plfont , gs_glyph glyph"		8186703	3					
ANR	8186989	Parameter	float wbox [ 6 ]	1219:21:42107:42119	8186703	0	True				
ANR	8186990	ParameterType	float [ 6 ]		8186703	0					
ANR	8186991	Identifier	wbox		8186703	1					
ANR	8186992	Parameter	const pl_font_t * plfont	1219:36:42122:42145	8186703	1	True				
ANR	8186993	ParameterType	const pl_font_t *		8186703	0					
ANR	8186994	Identifier	plfont		8186703	1					
ANR	8186995	Parameter	gs_glyph glyph	1219:62:42148:42161	8186703	2	True				
ANR	8186996	ParameterType	gs_glyph		8186703	0					
ANR	8186997	Identifier	glyph		8186703	1					
ANR	8186998	CFGEntryNode	ENTRY		8186703		True				
ANR	8186999	CFGExitNode	EXIT		8186703		True				
ANR	8187000	Symbol	wbox		8186703						
ANR	8187001	Symbol	pl_font_lookup_glyph		8186703						
ANR	8187002	Symbol	plfont		8186703						
ANR	8187003	Symbol	pl_intelli_merge_box		8186703						
ANR	8187004	Symbol	* wbox		8186703						
ANR	8187005	Symbol	metrics -> charEscapementBox		8186703						
ANR	8187006	Symbol	found		8186703						
ANR	8187007	Symbol	min		8186703						
ANR	8187008	Symbol	* cdata		8186703						
ANR	8187009	Symbol	* metrics		8186703						
ANR	8187010	Symbol	pl_get_int16		8186703						
ANR	8187011	Symbol	* * metrics		8186703						
ANR	8187012	Symbol	* metrics -> charEscapementBox		8186703						
ANR	8187013	Symbol	pl_get_uint16		8186703						
ANR	8187014	Symbol	max		8186703						
ANR	8187015	Symbol	false		8186703						
ANR	8187016	Symbol	i		8186703						
ANR	8187017	Symbol	* pl_font_lookup_glyph		8186703						
ANR	8187018	Symbol	* metrics -> charSymbolBox		8186703						
ANR	8187019	Symbol	cdata		8186703						
ANR	8187020	Symbol	glyph		8186703						
ANR	8187021	Symbol	metrics -> charSymbolBox		8186703						
ANR	8187022	Symbol	lly		8186703						
ANR	8187023	Symbol	true		8186703						
ANR	8187024	Symbol	llx		8186703						
ANR	8187025	Symbol	urx		8186703						
ANR	8187026	Symbol	metrics		8186703						
ANR	8187027	Symbol	ury		8186703						
ANR	8187028	Symbol	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8186703						
ANR	8187029	Function	pl_intelli_show_char	1259:0:43610:52464							
ANR	8187030	FunctionDef	"pl_intelli_show_char (gs_gstate * pgs , const pl_font_t * plfont , gs_glyph glyph)"		8187029	0					
ANR	8187031	CompoundStatement		1261:0:43701:52464	8187029	0					
ANR	8187032	IdentifierDeclStatement	int code ;	1262:4:43707:43715	8187029	0	True				
ANR	8187033	IdentifierDecl	code		8187029	0					
ANR	8187034	IdentifierDeclType	int		8187029	0					
ANR	8187035	Identifier	code		8187029	1					
ANR	8187036	IdentifierDeclStatement	"const byte * cdata , * cdata_end ;"	1263:4:43721:43750	8187029	1	True				
ANR	8187037	IdentifierDecl	* cdata		8187029	0					
ANR	8187038	IdentifierDeclType	const byte *		8187029	0					
ANR	8187039	Identifier	cdata		8187029	1					
ANR	8187040	IdentifierDecl	* cdata_end		8187029	1					
ANR	8187041	IdentifierDeclType	const byte *		8187029	0					
ANR	8187042	Identifier	cdata_end		8187029	1					
ANR	8187043	IdentifierDeclStatement	pl_font_glyph_t * font_glyph ;	1264:4:43756:43783	8187029	2	True				
ANR	8187044	IdentifierDecl	* font_glyph		8187029	0					
ANR	8187045	IdentifierDeclType	pl_font_glyph_t *		8187029	0					
ANR	8187046	Identifier	font_glyph		8187029	1					
ANR	8187047	IdentifierDeclStatement	const intelli_metrics_t * metrics ;	1265:4:43789:43821	8187029	3	True				
ANR	8187048	IdentifierDecl	* metrics		8187029	0					
ANR	8187049	IdentifierDeclType	const intelli_metrics_t *		8187029	0					
ANR	8187050	Identifier	metrics		8187029	1					
ANR	8187051	IdentifierDeclStatement	"int * xBuffer = NULL , * yBuffer = NULL ;"	1266:4:43827:43863	8187029	4	True				
ANR	8187052	IdentifierDecl	* xBuffer = NULL		8187029	0					
ANR	8187053	IdentifierDeclType	int *		8187029	0					
ANR	8187054	Identifier	xBuffer		8187029	1					
ANR	8187055	AssignmentExpression	* xBuffer = NULL		8187029	2		=			
ANR	8187056	Identifier	NULL		8187029	0					
ANR	8187057	Identifier	NULL		8187029	1					
ANR	8187058	IdentifierDecl	* yBuffer = NULL		8187029	1					
ANR	8187059	IdentifierDeclType	int *		8187029	0					
ANR	8187060	Identifier	yBuffer		8187029	1					
ANR	8187061	AssignmentExpression	* yBuffer = NULL		8187029	2		=			
ANR	8187062	Identifier	NULL		8187029	0					
ANR	8187063	Identifier	NULL		8187029	1					
ANR	8187064	IdentifierDeclStatement	"client_name_t cname = ( client_name_t ) ""pl_intelli_show_char"" ;"	1267:4:43869:43929	8187029	5	True				
ANR	8187065	IdentifierDecl	"cname = ( client_name_t ) ""pl_intelli_show_char"""		8187029	0					
ANR	8187066	IdentifierDeclType	client_name_t		8187029	0					
ANR	8187067	Identifier	cname		8187029	1					
ANR	8187068	AssignmentExpression	"cname = ( client_name_t ) ""pl_intelli_show_char"""		8187029	2		=			
ANR	8187069	Identifier	cname		8187029	0					
ANR	8187070	CastExpression	"( client_name_t ) ""pl_intelli_show_char"""		8187029	1					
ANR	8187071	CastTarget	client_name_t		8187029	0					
ANR	8187072	PrimaryExpression	"""pl_intelli_show_char"""		8187029	1					
ANR	8187073	ExpressionStatement	"font_glyph = pl_font_lookup_glyph ( plfont , glyph )"	1269:4:43936:43984	8187029	6	True				
ANR	8187074	AssignmentExpression	"font_glyph = pl_font_lookup_glyph ( plfont , glyph )"		8187029	0		=			
ANR	8187075	Identifier	font_glyph		8187029	0					
ANR	8187076	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8187029	1					
ANR	8187077	Callee	pl_font_lookup_glyph		8187029	0					
ANR	8187078	Identifier	pl_font_lookup_glyph		8187029	0					
ANR	8187079	ArgumentList	plfont		8187029	1					
ANR	8187080	Argument	plfont		8187029	0					
ANR	8187081	Identifier	plfont		8187029	0					
ANR	8187082	Argument	glyph		8187029	1					
ANR	8187083	Identifier	glyph		8187029	0					
ANR	8187084	ExpressionStatement	cdata = font_glyph -> data	1270:4:43990:44014	8187029	7	True				
ANR	8187085	AssignmentExpression	cdata = font_glyph -> data		8187029	0		=			
ANR	8187086	Identifier	cdata		8187029	0					
ANR	8187087	PtrMemberAccess	font_glyph -> data		8187029	1					
ANR	8187088	Identifier	font_glyph		8187029	0					
ANR	8187089	Identifier	data		8187029	1					
ANR	8187090	ExpressionStatement	cdata_end = cdata + font_glyph -> data_len	1271:4:44020:44060	8187029	8	True				
ANR	8187091	AssignmentExpression	cdata_end = cdata + font_glyph -> data_len		8187029	0		=			
ANR	8187092	Identifier	cdata_end		8187029	0					
ANR	8187093	AdditiveExpression	cdata + font_glyph -> data_len		8187029	1		+			
ANR	8187094	Identifier	cdata		8187029	0					
ANR	8187095	PtrMemberAccess	font_glyph -> data_len		8187029	1					
ANR	8187096	Identifier	font_glyph		8187029	0					
ANR	8187097	Identifier	data_len		8187029	1					
ANR	8187098	IfStatement	if ( cdata == 0 )		8187029	9					
ANR	8187099	Condition	cdata == 0	1273:8:44071:44080	8187029	0	True				
ANR	8187100	EqualityExpression	cdata == 0		8187029	0		==			
ANR	8187101	Identifier	cdata		8187029	0					
ANR	8187102	PrimaryExpression	0		8187029	1					
ANR	8187103	CompoundStatement		13:20:381:381	8187029	1					
ANR	8187104	ExpressionStatement	"if_debug1m ( '1' , pgs -> memory , ""[1] no character data for glyph %ld\\n"" , glyph )"	1274:8:44093:44188	8187029	0	True				
ANR	8187105	CallExpression	"if_debug1m ( '1' , pgs -> memory , ""[1] no character data for glyph %ld\\n"" , glyph )"		8187029	0					
ANR	8187106	Callee	if_debug1m		8187029	0					
ANR	8187107	Identifier	if_debug1m		8187029	0					
ANR	8187108	ArgumentList	'1'		8187029	1					
ANR	8187109	Argument	'1'		8187029	0					
ANR	8187110	PrimaryExpression	'1'		8187029	0					
ANR	8187111	Argument	pgs -> memory		8187029	1					
ANR	8187112	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187113	Identifier	pgs		8187029	0					
ANR	8187114	Identifier	memory		8187029	1					
ANR	8187115	Argument	"""[1] no character data for glyph %ld\\n"""		8187029	2					
ANR	8187116	PrimaryExpression	"""[1] no character data for glyph %ld\\n"""		8187029	0					
ANR	8187117	Argument	glyph		8187029	3					
ANR	8187118	Identifier	glyph		8187029	0					
ANR	8187119	ReturnStatement	return 0 ;	1276:8:44198:44206	8187029	1	True				
ANR	8187120	PrimaryExpression	0		8187029	0					
ANR	8187121	IfStatement	if ( cdata [ 3 ] == 4 )		8187029	10					
ANR	8187122	Condition	cdata [ 3 ] == 4	1278:8:44222:44234	8187029	0	True				
ANR	8187123	EqualityExpression	cdata [ 3 ] == 4		8187029	0		==			
ANR	8187124	ArrayIndexing	cdata [ 3 ]		8187029	0					
ANR	8187125	Identifier	cdata		8187029	0					
ANR	8187126	PrimaryExpression	3		8187029	1					
ANR	8187127	PrimaryExpression	4		8187029	1					
ANR	8187128	CompoundStatement		20:8:605:610	8187029	1					
ANR	8187129	IdentifierDeclStatement	gs_matrix save_ctm ;	1279:8:44279:44297	8187029	0	True				
ANR	8187130	IdentifierDecl	save_ctm		8187029	0					
ANR	8187131	IdentifierDeclType	gs_matrix		8187029	0					
ANR	8187132	Identifier	save_ctm		8187029	1					
ANR	8187133	IdentifierDeclStatement	int i ;	1280:8:44307:44312	8187029	1	True				
ANR	8187134	IdentifierDecl	i		8187029	0					
ANR	8187135	IdentifierDeclType	int		8187029	0					
ANR	8187136	Identifier	i		8187029	1					
ANR	8187137	ExpressionStatement	"gs_currentmatrix ( pgs , & save_ctm )"	1282:8:44323:44355	8187029	2	True				
ANR	8187138	CallExpression	"gs_currentmatrix ( pgs , & save_ctm )"		8187029	0					
ANR	8187139	Callee	gs_currentmatrix		8187029	0					
ANR	8187140	Identifier	gs_currentmatrix		8187029	0					
ANR	8187141	ArgumentList	pgs		8187029	1					
ANR	8187142	Argument	pgs		8187029	0					
ANR	8187143	Identifier	pgs		8187029	0					
ANR	8187144	Argument	& save_ctm		8187029	1					
ANR	8187145	UnaryOperationExpression	& save_ctm		8187029	0					
ANR	8187146	UnaryOperator	&		8187029	0					
ANR	8187147	Identifier	save_ctm		8187029	1					
ANR	8187148	ForStatement	for ( i = 0 ; i < cdata [ 6 ] ; ++ i )		8187029	3					
ANR	8187149	ForInit	i = 0 ;	1283:13:44370:44375	8187029	0	True				
ANR	8187150	AssignmentExpression	i = 0		8187029	0		=			
ANR	8187151	Identifier	i		8187029	0					
ANR	8187152	PrimaryExpression	0		8187029	1					
ANR	8187153	Condition	i < cdata [ 6 ]	1283:20:44377:44388	8187029	1	True				
ANR	8187154	RelationalExpression	i < cdata [ 6 ]		8187029	0		<			
ANR	8187155	Identifier	i		8187029	0					
ANR	8187156	ArrayIndexing	cdata [ 6 ]		8187029	1					
ANR	8187157	Identifier	cdata		8187029	0					
ANR	8187158	PrimaryExpression	6		8187029	1					
ANR	8187159	UnaryExpression	++ i	1283:34:44391:44393	8187029	2	True				
ANR	8187160	IncDec	++		8187029	0					
ANR	8187161	Identifier	i		8187029	1					
ANR	8187162	CompoundStatement		26:12:814:855	8187029	3					
ANR	8187163	IdentifierDeclStatement	const byte * edata = cdata + 8 + i * 6 ;	1284:12:44410:44447	8187029	0	True				
ANR	8187164	IdentifierDecl	* edata = cdata + 8 + i * 6		8187029	0					
ANR	8187165	IdentifierDeclType	const byte *		8187029	0					
ANR	8187166	Identifier	edata		8187029	1					
ANR	8187167	AssignmentExpression	* edata = cdata + 8 + i * 6		8187029	2		=			
ANR	8187168	Identifier	edata		8187029	0					
ANR	8187169	AdditiveExpression	cdata + 8 + i * 6		8187029	1		+			
ANR	8187170	Identifier	cdata		8187029	0					
ANR	8187171	AdditiveExpression	8 + i * 6		8187029	1		+			
ANR	8187172	PrimaryExpression	8		8187029	0					
ANR	8187173	MultiplicativeExpression	i * 6		8187029	1		*			
ANR	8187174	Identifier	i		8187029	0					
ANR	8187175	PrimaryExpression	6		8187029	1					
ANR	8187176	IdentifierDeclStatement	double x_offset = pl_get_int16 ( edata + 2 ) ;	1285:12:44461:44502	8187029	1	True				
ANR	8187177	IdentifierDecl	x_offset = pl_get_int16 ( edata + 2 )		8187029	0					
ANR	8187178	IdentifierDeclType	double		8187029	0					
ANR	8187179	Identifier	x_offset		8187029	1					
ANR	8187180	AssignmentExpression	x_offset = pl_get_int16 ( edata + 2 )		8187029	2		=			
ANR	8187181	Identifier	x_offset		8187029	0					
ANR	8187182	CallExpression	pl_get_int16 ( edata + 2 )		8187029	1					
ANR	8187183	Callee	pl_get_int16		8187029	0					
ANR	8187184	Identifier	pl_get_int16		8187029	0					
ANR	8187185	ArgumentList	edata + 2		8187029	1					
ANR	8187186	Argument	edata + 2		8187029	0					
ANR	8187187	AdditiveExpression	edata + 2		8187029	0		+			
ANR	8187188	Identifier	edata		8187029	0					
ANR	8187189	PrimaryExpression	2		8187029	1					
ANR	8187190	IdentifierDeclStatement	double y_offset = pl_get_int16 ( edata + 4 ) ;	1286:12:44516:44557	8187029	2	True				
ANR	8187191	IdentifierDecl	y_offset = pl_get_int16 ( edata + 4 )		8187029	0					
ANR	8187192	IdentifierDeclType	double		8187029	0					
ANR	8187193	Identifier	y_offset		8187029	1					
ANR	8187194	AssignmentExpression	y_offset = pl_get_int16 ( edata + 4 )		8187029	2		=			
ANR	8187195	Identifier	y_offset		8187029	0					
ANR	8187196	CallExpression	pl_get_int16 ( edata + 4 )		8187029	1					
ANR	8187197	Callee	pl_get_int16		8187029	0					
ANR	8187198	Identifier	pl_get_int16		8187029	0					
ANR	8187199	ArgumentList	edata + 4		8187029	1					
ANR	8187200	Argument	edata + 4		8187029	0					
ANR	8187201	AdditiveExpression	edata + 4		8187029	0		+			
ANR	8187202	Identifier	edata		8187029	0					
ANR	8187203	PrimaryExpression	4		8187029	1					
ANR	8187204	ExpressionStatement	"gs_translate ( pgs , x_offset , y_offset )"	1288:12:44572:44609	8187029	3	True				
ANR	8187205	CallExpression	"gs_translate ( pgs , x_offset , y_offset )"		8187029	0					
ANR	8187206	Callee	gs_translate		8187029	0					
ANR	8187207	Identifier	gs_translate		8187029	0					
ANR	8187208	ArgumentList	pgs		8187029	1					
ANR	8187209	Argument	pgs		8187029	0					
ANR	8187210	Identifier	pgs		8187029	0					
ANR	8187211	Argument	x_offset		8187029	1					
ANR	8187212	Identifier	x_offset		8187029	0					
ANR	8187213	Argument	y_offset		8187029	2					
ANR	8187214	Identifier	y_offset		8187029	0					
ANR	8187215	ExpressionStatement	"code = pl_intelli_show_char ( pgs , plfont , pl_get_uint16 ( edata ) )"	1289:12:44623:44685	8187029	4	True				
ANR	8187216	AssignmentExpression	"code = pl_intelli_show_char ( pgs , plfont , pl_get_uint16 ( edata ) )"		8187029	0		=			
ANR	8187217	Identifier	code		8187029	0					
ANR	8187218	CallExpression	"pl_intelli_show_char ( pgs , plfont , pl_get_uint16 ( edata ) )"		8187029	1					
ANR	8187219	Callee	pl_intelli_show_char		8187029	0					
ANR	8187220	Identifier	pl_intelli_show_char		8187029	0					
ANR	8187221	ArgumentList	pgs		8187029	1					
ANR	8187222	Argument	pgs		8187029	0					
ANR	8187223	Identifier	pgs		8187029	0					
ANR	8187224	Argument	plfont		8187029	1					
ANR	8187225	Identifier	plfont		8187029	0					
ANR	8187226	Argument	pl_get_uint16 ( edata )		8187029	2					
ANR	8187227	CallExpression	pl_get_uint16 ( edata )		8187029	0					
ANR	8187228	Callee	pl_get_uint16		8187029	0					
ANR	8187229	Identifier	pl_get_uint16		8187029	0					
ANR	8187230	ArgumentList	edata		8187029	1					
ANR	8187231	Argument	edata		8187029	0					
ANR	8187232	Identifier	edata		8187029	0					
ANR	8187233	ExpressionStatement	"gs_setmatrix ( pgs , & save_ctm )"	1290:12:44699:44727	8187029	5	True				
ANR	8187234	CallExpression	"gs_setmatrix ( pgs , & save_ctm )"		8187029	0					
ANR	8187235	Callee	gs_setmatrix		8187029	0					
ANR	8187236	Identifier	gs_setmatrix		8187029	0					
ANR	8187237	ArgumentList	pgs		8187029	1					
ANR	8187238	Argument	pgs		8187029	0					
ANR	8187239	Identifier	pgs		8187029	0					
ANR	8187240	Argument	& save_ctm		8187029	1					
ANR	8187241	UnaryOperationExpression	& save_ctm		8187029	0					
ANR	8187242	UnaryOperator	&		8187029	0					
ANR	8187243	Identifier	save_ctm		8187029	1					
ANR	8187244	IfStatement	if ( code < 0 )		8187029	6					
ANR	8187245	Condition	code < 0	1291:16:44745:44752	8187029	0	True				
ANR	8187246	RelationalExpression	code < 0		8187029	0		<			
ANR	8187247	Identifier	code		8187029	0					
ANR	8187248	PrimaryExpression	0		8187029	1					
ANR	8187249	ReturnStatement	return code ;	1292:16:44771:44782	8187029	1	True				
ANR	8187250	Identifier	code		8187029	0					
ANR	8187251	ReturnStatement	return 0 ;	1294:8:44802:44810	8187029	4	True				
ANR	8187252	PrimaryExpression	0		8187029	0					
ANR	8187253	CompoundStatement		42:8:1247:1253	8187029	11					
ANR	8187254	IdentifierDeclStatement	const byte * outlines ;	1300:8:44895:44915	8187029	0	True				
ANR	8187255	IdentifierDecl	* outlines		8187029	0					
ANR	8187256	IdentifierDeclType	const byte *		8187029	0					
ANR	8187257	Identifier	outlines		8187029	1					
ANR	8187258	IdentifierDeclStatement	uint num_loops ;	1301:8:44925:44939	8187029	1	True				
ANR	8187259	IdentifierDecl	num_loops		8187029	0					
ANR	8187260	IdentifierDeclType	uint		8187029	0					
ANR	8187261	Identifier	num_loops		8187029	1					
ANR	8187262	IdentifierDeclStatement	uint i ;	1302:8:44949:44955	8187029	2	True				
ANR	8187263	IdentifierDecl	i		8187029	0					
ANR	8187264	IdentifierDeclType	uint		8187029	0					
ANR	8187265	Identifier	i		8187029	1					
ANR	8187266	ExpressionStatement	cdata += 4	1304:8:44966:44976	8187029	3	True				
ANR	8187267	AssignmentExpression	cdata += 4		8187029	0		+=			
ANR	8187268	Identifier	cdata		8187029	0					
ANR	8187269	PrimaryExpression	4		8187029	1					
ANR	8187270	ExpressionStatement	outlines = cdata + pl_get_uint16 ( cdata + 6 )	1305:8:45030:45073	8187029	4	True				
ANR	8187271	AssignmentExpression	outlines = cdata + pl_get_uint16 ( cdata + 6 )		8187029	0		=			
ANR	8187272	Identifier	outlines		8187029	0					
ANR	8187273	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 6 )		8187029	1		+			
ANR	8187274	Identifier	cdata		8187029	0					
ANR	8187275	CallExpression	pl_get_uint16 ( cdata + 6 )		8187029	1					
ANR	8187276	Callee	pl_get_uint16		8187029	0					
ANR	8187277	Identifier	pl_get_uint16		8187029	0					
ANR	8187278	ArgumentList	cdata + 6		8187029	1					
ANR	8187279	Argument	cdata + 6		8187029	0					
ANR	8187280	AdditiveExpression	cdata + 6		8187029	0		+			
ANR	8187281	Identifier	cdata		8187029	0					
ANR	8187282	PrimaryExpression	6		8187029	1					
ANR	8187283	IfStatement	if ( outlines >= cdata_end )		8187029	5					
ANR	8187284	Condition	outlines >= cdata_end	1306:12:45087:45107	8187029	0	True				
ANR	8187285	RelationalExpression	outlines >= cdata_end		8187029	0		>=			
ANR	8187286	Identifier	outlines		8187029	0					
ANR	8187287	Identifier	cdata_end		8187029	1					
ANR	8187288	ReturnStatement	return 0 ;	1307:12:45122:45130	8187029	1	True				
ANR	8187289	PrimaryExpression	0		8187029	0					
ANR	8187290	ExpressionStatement	num_loops = pl_get_uint16 ( outlines )	1309:8:45141:45176	8187029	6	True				
ANR	8187291	AssignmentExpression	num_loops = pl_get_uint16 ( outlines )		8187029	0		=			
ANR	8187292	Identifier	num_loops		8187029	0					
ANR	8187293	CallExpression	pl_get_uint16 ( outlines )		8187029	1					
ANR	8187294	Callee	pl_get_uint16		8187029	0					
ANR	8187295	Identifier	pl_get_uint16		8187029	0					
ANR	8187296	ArgumentList	outlines		8187029	1					
ANR	8187297	Argument	outlines		8187029	0					
ANR	8187298	Identifier	outlines		8187029	0					
ANR	8187299	ExpressionStatement	"if_debug2m ( '1' , pgs -> memory , ""[1]ifont glyph %lu: loops=%u\\n"" , ( ulong ) glyph , num_loops )"	1311:8:45187:45294	8187029	7	True				
ANR	8187300	CallExpression	"if_debug2m ( '1' , pgs -> memory , ""[1]ifont glyph %lu: loops=%u\\n"" , ( ulong ) glyph , num_loops )"		8187029	0					
ANR	8187301	Callee	if_debug2m		8187029	0					
ANR	8187302	Identifier	if_debug2m		8187029	0					
ANR	8187303	ArgumentList	'1'		8187029	1					
ANR	8187304	Argument	'1'		8187029	0					
ANR	8187305	PrimaryExpression	'1'		8187029	0					
ANR	8187306	Argument	pgs -> memory		8187029	1					
ANR	8187307	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187308	Identifier	pgs		8187029	0					
ANR	8187309	Identifier	memory		8187029	1					
ANR	8187310	Argument	"""[1]ifont glyph %lu: loops=%u\\n"""		8187029	2					
ANR	8187311	PrimaryExpression	"""[1]ifont glyph %lu: loops=%u\\n"""		8187029	0					
ANR	8187312	Argument	( ulong ) glyph		8187029	3					
ANR	8187313	CastExpression	( ulong ) glyph		8187029	0					
ANR	8187314	CastTarget	ulong		8187029	0					
ANR	8187315	Identifier	glyph		8187029	1					
ANR	8187316	Argument	num_loops		8187029	4					
ANR	8187317	Identifier	num_loops		8187029	0					
ANR	8187318	IfStatement	if ( num_loops == 0 )		8187029	8					
ANR	8187319	Condition	num_loops == 0	1314:12:45309:45322	8187029	0	True				
ANR	8187320	EqualityExpression	num_loops == 0		8187029	0		==			
ANR	8187321	Identifier	num_loops		8187029	0					
ANR	8187322	PrimaryExpression	0		8187029	1					
ANR	8187323	ReturnStatement	return - 1 ;	1315:12:45337:45346	8187029	1	True				
ANR	8187324	UnaryOperationExpression	- 1		8187029	0					
ANR	8187325	UnaryOperator	-		8187029	0					
ANR	8187326	PrimaryExpression	1		8187029	1					
ANR	8187327	ForStatement	for ( i = 0 ; i < num_loops ; ++ i )		8187029	9					
ANR	8187328	ForInit	i = 0 ;	1317:13:45362:45367	8187029	0	True				
ANR	8187329	AssignmentExpression	i = 0		8187029	0		=			
ANR	8187330	Identifier	i		8187029	0					
ANR	8187331	PrimaryExpression	0		8187029	1					
ANR	8187332	Condition	i < num_loops	1317:20:45369:45381	8187029	1	True				
ANR	8187333	RelationalExpression	i < num_loops		8187029	0		<			
ANR	8187334	Identifier	i		8187029	0					
ANR	8187335	Identifier	num_loops		8187029	1					
ANR	8187336	UnaryExpression	++ i	1317:35:45384:45386	8187029	2	True				
ANR	8187337	IncDec	++		8187029	0					
ANR	8187338	Identifier	i		8187029	1					
ANR	8187339	CompoundStatement		68:12:2164:2171	8187029	3					
ANR	8187340	IdentifierDeclStatement	const byte * xyc = cdata + pl_get_uint16 ( outlines + 4 + i * 8 ) ;	1318:12:45403:45464	8187029	0	True				
ANR	8187341	IdentifierDecl	* xyc = cdata + pl_get_uint16 ( outlines + 4 + i * 8 )		8187029	0					
ANR	8187342	IdentifierDeclType	const byte *		8187029	0					
ANR	8187343	Identifier	xyc		8187029	1					
ANR	8187344	AssignmentExpression	* xyc = cdata + pl_get_uint16 ( outlines + 4 + i * 8 )		8187029	2		=			
ANR	8187345	Identifier	xyc		8187029	0					
ANR	8187346	AdditiveExpression	cdata + pl_get_uint16 ( outlines + 4 + i * 8 )		8187029	1		+			
ANR	8187347	Identifier	cdata		8187029	0					
ANR	8187348	CallExpression	pl_get_uint16 ( outlines + 4 + i * 8 )		8187029	1					
ANR	8187349	Callee	pl_get_uint16		8187029	0					
ANR	8187350	Identifier	pl_get_uint16		8187029	0					
ANR	8187351	ArgumentList	outlines + 4 + i * 8		8187029	1					
ANR	8187352	Argument	outlines + 4 + i * 8		8187029	0					
ANR	8187353	AdditiveExpression	outlines + 4 + i * 8		8187029	0		+			
ANR	8187354	Identifier	outlines		8187029	0					
ANR	8187355	AdditiveExpression	4 + i * 8		8187029	1		+			
ANR	8187356	PrimaryExpression	4		8187029	0					
ANR	8187357	MultiplicativeExpression	i * 8		8187029	1		*			
ANR	8187358	Identifier	i		8187029	0					
ANR	8187359	PrimaryExpression	8		8187029	1					
ANR	8187360	IdentifierDeclStatement	uint num_points ;	1319:12:45478:45493	8187029	1	True				
ANR	8187361	IdentifierDecl	num_points		8187029	0					
ANR	8187362	IdentifierDeclType	uint		8187029	0					
ANR	8187363	Identifier	num_points		8187029	1					
ANR	8187364	IdentifierDeclStatement	uint num_aux_points ;	1320:12:45507:45526	8187029	2	True				
ANR	8187365	IdentifierDecl	num_aux_points		8187029	0					
ANR	8187366	IdentifierDeclType	uint		8187029	0					
ANR	8187367	Identifier	num_aux_points		8187029	1					
ANR	8187368	IdentifierDeclStatement	"const byte * x_coords , * y_coords , * x_coords_last ;"	1321:12:45540:45587	8187029	3	True				
ANR	8187369	IdentifierDecl	* x_coords		8187029	0					
ANR	8187370	IdentifierDeclType	const byte *		8187029	0					
ANR	8187371	Identifier	x_coords		8187029	1					
ANR	8187372	IdentifierDecl	* y_coords		8187029	1					
ANR	8187373	IdentifierDeclType	const byte *		8187029	0					
ANR	8187374	Identifier	y_coords		8187029	1					
ANR	8187375	IdentifierDecl	* x_coords_last		8187029	2					
ANR	8187376	IdentifierDeclType	const byte *		8187029	0					
ANR	8187377	Identifier	x_coords_last		8187029	1					
ANR	8187378	IdentifierDeclStatement	"const byte * x_aux_coords , * y_aux_coords , * x_aux_coords_last ;"	1322:12:45601:45660	8187029	4	True				
ANR	8187379	IdentifierDecl	* x_aux_coords		8187029	0					
ANR	8187380	IdentifierDeclType	const byte *		8187029	0					
ANR	8187381	Identifier	x_aux_coords		8187029	1					
ANR	8187382	IdentifierDecl	* y_aux_coords		8187029	1					
ANR	8187383	IdentifierDeclType	const byte *		8187029	0					
ANR	8187384	Identifier	y_aux_coords		8187029	1					
ANR	8187385	IdentifierDecl	* x_aux_coords_last		8187029	2					
ANR	8187386	IdentifierDeclType	const byte *		8187029	0					
ANR	8187387	Identifier	x_aux_coords_last		8187029	1					
ANR	8187388	IdentifierDeclStatement	"int llx , lly , urx , ury ;"	1323:12:45674:45696	8187029	5	True				
ANR	8187389	IdentifierDecl	llx		8187029	0					
ANR	8187390	IdentifierDeclType	int		8187029	0					
ANR	8187391	Identifier	llx		8187029	1					
ANR	8187392	IdentifierDecl	lly		8187029	1					
ANR	8187393	IdentifierDeclType	int		8187029	0					
ANR	8187394	Identifier	lly		8187029	1					
ANR	8187395	IdentifierDecl	urx		8187029	2					
ANR	8187396	IdentifierDeclType	int		8187029	0					
ANR	8187397	Identifier	urx		8187029	1					
ANR	8187398	IdentifierDecl	ury		8187029	3					
ANR	8187399	IdentifierDeclType	int		8187029	0					
ANR	8187400	Identifier	ury		8187029	1					
ANR	8187401	IdentifierDeclStatement	"int x , y ;"	1324:12:45743:45751	8187029	6	True				
ANR	8187402	IdentifierDecl	x		8187029	0					
ANR	8187403	IdentifierDeclType	int		8187029	0					
ANR	8187404	Identifier	x		8187029	1					
ANR	8187405	IdentifierDecl	y		8187029	1					
ANR	8187406	IdentifierDeclType	int		8187029	0					
ANR	8187407	Identifier	y		8187029	1					
ANR	8187408	IdentifierDeclStatement	"int xAux , yAux ;"	1325:12:45765:45779	8187029	7	True				
ANR	8187409	IdentifierDecl	xAux		8187029	0					
ANR	8187410	IdentifierDeclType	int		8187029	0					
ANR	8187411	Identifier	xAux		8187029	1					
ANR	8187412	IdentifierDecl	yAux		8187029	1					
ANR	8187413	IdentifierDeclType	int		8187029	0					
ANR	8187414	Identifier	yAux		8187029	1					
ANR	8187415	IdentifierDeclStatement	"int * xScan , * yScan , * xLast ;"	1326:12:45793:45819	8187029	8	True				
ANR	8187416	IdentifierDecl	* xScan		8187029	0					
ANR	8187417	IdentifierDeclType	int *		8187029	0					
ANR	8187418	Identifier	xScan		8187029	1					
ANR	8187419	IdentifierDecl	* yScan		8187029	1					
ANR	8187420	IdentifierDeclType	int *		8187029	0					
ANR	8187421	Identifier	yScan		8187029	1					
ANR	8187422	IdentifierDecl	* xLast		8187029	2					
ANR	8187423	IdentifierDeclType	int *		8187029	0					
ANR	8187424	Identifier	xLast		8187029	1					
ANR	8187425	IdentifierDeclStatement	int pointBufferSize ;	1327:12:45833:45852	8187029	9	True				
ANR	8187426	IdentifierDecl	pointBufferSize		8187029	0					
ANR	8187427	IdentifierDeclType	int		8187029	0					
ANR	8187428	Identifier	pointBufferSize		8187029	1					
ANR	8187429	IdentifierDeclStatement	uint sz ;	1328:12:45866:45873	8187029	10	True				
ANR	8187430	IdentifierDecl	sz		8187029	0					
ANR	8187431	IdentifierDeclType	uint		8187029	0					
ANR	8187432	Identifier	sz		8187029	1					
ANR	8187433	IfStatement	if ( ( outlines + 4 + i * 8 ) >= cdata_end )		8187029	11					
ANR	8187434	Condition	( outlines + 4 + i * 8 ) >= cdata_end	1330:16:45892:45926	8187029	0	True				
ANR	8187435	RelationalExpression	( outlines + 4 + i * 8 ) >= cdata_end		8187029	0		>=			
ANR	8187436	AdditiveExpression	outlines + 4 + i * 8		8187029	0		+			
ANR	8187437	Identifier	outlines		8187029	0					
ANR	8187438	AdditiveExpression	4 + i * 8		8187029	1		+			
ANR	8187439	PrimaryExpression	4		8187029	0					
ANR	8187440	MultiplicativeExpression	i * 8		8187029	1		*			
ANR	8187441	Identifier	i		8187029	0					
ANR	8187442	PrimaryExpression	8		8187029	1					
ANR	8187443	Identifier	cdata_end		8187029	1					
ANR	8187444	CompoundStatement		70:53:2227:2227	8187029	1					
ANR	8187445	ExpressionStatement	code = gs_note_error ( gs_error_invalidfont )	1331:16:45947:45989	8187029	0	True				
ANR	8187446	AssignmentExpression	code = gs_note_error ( gs_error_invalidfont )		8187029	0		=			
ANR	8187447	Identifier	code		8187029	0					
ANR	8187448	CallExpression	gs_note_error ( gs_error_invalidfont )		8187029	1					
ANR	8187449	Callee	gs_note_error		8187029	0					
ANR	8187450	Identifier	gs_note_error		8187029	0					
ANR	8187451	ArgumentList	gs_error_invalidfont		8187029	1					
ANR	8187452	Argument	gs_error_invalidfont		8187029	0					
ANR	8187453	Identifier	gs_error_invalidfont		8187029	0					
ANR	8187454	BreakStatement	break ;	1332:16:46007:46012	8187029	1	True				
ANR	8187455	ExpressionStatement	num_points = pl_get_uint16 ( xyc )	1334:12:46040:46071	8187029	12	True				
ANR	8187456	AssignmentExpression	num_points = pl_get_uint16 ( xyc )		8187029	0		=			
ANR	8187457	Identifier	num_points		8187029	0					
ANR	8187458	CallExpression	pl_get_uint16 ( xyc )		8187029	1					
ANR	8187459	Callee	pl_get_uint16		8187029	0					
ANR	8187460	Identifier	pl_get_uint16		8187029	0					
ANR	8187461	ArgumentList	xyc		8187029	1					
ANR	8187462	Argument	xyc		8187029	0					
ANR	8187463	Identifier	xyc		8187029	0					
ANR	8187464	ExpressionStatement	num_aux_points = pl_get_uint16 ( xyc + 2 )	1335:12:46085:46124	8187029	13	True				
ANR	8187465	AssignmentExpression	num_aux_points = pl_get_uint16 ( xyc + 2 )		8187029	0		=			
ANR	8187466	Identifier	num_aux_points		8187029	0					
ANR	8187467	CallExpression	pl_get_uint16 ( xyc + 2 )		8187029	1					
ANR	8187468	Callee	pl_get_uint16		8187029	0					
ANR	8187469	Identifier	pl_get_uint16		8187029	0					
ANR	8187470	ArgumentList	xyc + 2		8187029	1					
ANR	8187471	Argument	xyc + 2		8187029	0					
ANR	8187472	AdditiveExpression	xyc + 2		8187029	0		+			
ANR	8187473	Identifier	xyc		8187029	0					
ANR	8187474	PrimaryExpression	2		8187029	1					
ANR	8187475	ExpressionStatement	x_coords = xyc + 4	1337:12:46139:46157	8187029	14	True				
ANR	8187476	AssignmentExpression	x_coords = xyc + 4		8187029	0		=			
ANR	8187477	Identifier	x_coords		8187029	0					
ANR	8187478	AdditiveExpression	xyc + 4		8187029	1		+			
ANR	8187479	Identifier	xyc		8187029	0					
ANR	8187480	PrimaryExpression	4		8187029	1					
ANR	8187481	ExpressionStatement	y_coords = x_coords + num_points * 2	1338:12:46171:46207	8187029	15	True				
ANR	8187482	AssignmentExpression	y_coords = x_coords + num_points * 2		8187029	0		=			
ANR	8187483	Identifier	y_coords		8187029	0					
ANR	8187484	AdditiveExpression	x_coords + num_points * 2		8187029	1		+			
ANR	8187485	Identifier	x_coords		8187029	0					
ANR	8187486	MultiplicativeExpression	num_points * 2		8187029	1		*			
ANR	8187487	Identifier	num_points		8187029	0					
ANR	8187488	PrimaryExpression	2		8187029	1					
ANR	8187489	ExpressionStatement	x_coords_last = y_coords	1339:12:46221:46245	8187029	16	True				
ANR	8187490	AssignmentExpression	x_coords_last = y_coords		8187029	0		=			
ANR	8187491	Identifier	x_coords_last		8187029	0					
ANR	8187492	Identifier	y_coords		8187029	1					
ANR	8187493	IfStatement	if ( x_coords_last >= cdata_end || ( y_coords + num_points * 2 ) >= cdata_end )		8187029	17					
ANR	8187494	Condition	x_coords_last >= cdata_end || ( y_coords + num_points * 2 ) >= cdata_end	1341:16:46264:46349	8187029	0	True				
ANR	8187495	OrExpression	x_coords_last >= cdata_end || ( y_coords + num_points * 2 ) >= cdata_end		8187029	0		||			
ANR	8187496	RelationalExpression	x_coords_last >= cdata_end		8187029	0		>=			
ANR	8187497	Identifier	x_coords_last		8187029	0					
ANR	8187498	Identifier	cdata_end		8187029	1					
ANR	8187499	RelationalExpression	( y_coords + num_points * 2 ) >= cdata_end		8187029	1		>=			
ANR	8187500	AdditiveExpression	y_coords + num_points * 2		8187029	0		+			
ANR	8187501	Identifier	y_coords		8187029	0					
ANR	8187502	MultiplicativeExpression	num_points * 2		8187029	1		*			
ANR	8187503	Identifier	num_points		8187029	0					
ANR	8187504	PrimaryExpression	2		8187029	1					
ANR	8187505	Identifier	cdata_end		8187029	1					
ANR	8187506	CompoundStatement		82:61:2650:2650	8187029	1					
ANR	8187507	ExpressionStatement	code = 0	1343:16:46370:46378	8187029	0	True				
ANR	8187508	AssignmentExpression	code = 0		8187029	0		=			
ANR	8187509	Identifier	code		8187029	0					
ANR	8187510	PrimaryExpression	0		8187029	1					
ANR	8187511	BreakStatement	break ;	1344:16:46396:46401	8187029	1	True				
ANR	8187512	ExpressionStatement	metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )	1347:12:46430:46517	8187029	18	True				
ANR	8187513	AssignmentExpression	metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8187029	0		=			
ANR	8187514	Identifier	metrics		8187029	0					
ANR	8187515	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8187029	1					
ANR	8187516	CastTarget	const intelli_metrics_t *		8187029	0					
ANR	8187517	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8187029	1		+			
ANR	8187518	Identifier	cdata		8187029	0					
ANR	8187519	CallExpression	pl_get_uint16 ( cdata + 2 )		8187029	1					
ANR	8187520	Callee	pl_get_uint16		8187029	0					
ANR	8187521	Identifier	pl_get_uint16		8187029	0					
ANR	8187522	ArgumentList	cdata + 2		8187029	1					
ANR	8187523	Argument	cdata + 2		8187029	0					
ANR	8187524	AdditiveExpression	cdata + 2		8187029	0		+			
ANR	8187525	Identifier	cdata		8187029	0					
ANR	8187526	PrimaryExpression	2		8187029	1					
ANR	8187527	ExpressionStatement	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )	1349:12:46531:46576	8187029	19	True				
ANR	8187528	AssignmentExpression	llx = pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8187029	0		=			
ANR	8187529	Identifier	llx		8187029	0					
ANR	8187530	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 0 ] )		8187029	1					
ANR	8187531	Callee	pl_get_int16		8187029	0					
ANR	8187532	Identifier	pl_get_int16		8187029	0					
ANR	8187533	ArgumentList	metrics -> charSymbolBox [ 0 ]		8187029	1					
ANR	8187534	Argument	metrics -> charSymbolBox [ 0 ]		8187029	0					
ANR	8187535	ArrayIndexing	metrics -> charSymbolBox [ 0 ]		8187029	0					
ANR	8187536	PtrMemberAccess	metrics -> charSymbolBox		8187029	0					
ANR	8187537	Identifier	metrics		8187029	0					
ANR	8187538	Identifier	charSymbolBox		8187029	1					
ANR	8187539	PrimaryExpression	0		8187029	1					
ANR	8187540	ExpressionStatement	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )	1350:12:46590:46635	8187029	20	True				
ANR	8187541	AssignmentExpression	lly = pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8187029	0		=			
ANR	8187542	Identifier	lly		8187029	0					
ANR	8187543	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 1 ] )		8187029	1					
ANR	8187544	Callee	pl_get_int16		8187029	0					
ANR	8187545	Identifier	pl_get_int16		8187029	0					
ANR	8187546	ArgumentList	metrics -> charSymbolBox [ 1 ]		8187029	1					
ANR	8187547	Argument	metrics -> charSymbolBox [ 1 ]		8187029	0					
ANR	8187548	ArrayIndexing	metrics -> charSymbolBox [ 1 ]		8187029	0					
ANR	8187549	PtrMemberAccess	metrics -> charSymbolBox		8187029	0					
ANR	8187550	Identifier	metrics		8187029	0					
ANR	8187551	Identifier	charSymbolBox		8187029	1					
ANR	8187552	PrimaryExpression	1		8187029	1					
ANR	8187553	ExpressionStatement	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )	1351:12:46649:46694	8187029	21	True				
ANR	8187554	AssignmentExpression	urx = pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8187029	0		=			
ANR	8187555	Identifier	urx		8187029	0					
ANR	8187556	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 2 ] )		8187029	1					
ANR	8187557	Callee	pl_get_int16		8187029	0					
ANR	8187558	Identifier	pl_get_int16		8187029	0					
ANR	8187559	ArgumentList	metrics -> charSymbolBox [ 2 ]		8187029	1					
ANR	8187560	Argument	metrics -> charSymbolBox [ 2 ]		8187029	0					
ANR	8187561	ArrayIndexing	metrics -> charSymbolBox [ 2 ]		8187029	0					
ANR	8187562	PtrMemberAccess	metrics -> charSymbolBox		8187029	0					
ANR	8187563	Identifier	metrics		8187029	0					
ANR	8187564	Identifier	charSymbolBox		8187029	1					
ANR	8187565	PrimaryExpression	2		8187029	1					
ANR	8187566	ExpressionStatement	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )	1352:12:46708:46753	8187029	22	True				
ANR	8187567	AssignmentExpression	ury = pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8187029	0		=			
ANR	8187568	Identifier	ury		8187029	0					
ANR	8187569	CallExpression	pl_get_int16 ( metrics -> charSymbolBox [ 3 ] )		8187029	1					
ANR	8187570	Callee	pl_get_int16		8187029	0					
ANR	8187571	Identifier	pl_get_int16		8187029	0					
ANR	8187572	ArgumentList	metrics -> charSymbolBox [ 3 ]		8187029	1					
ANR	8187573	Argument	metrics -> charSymbolBox [ 3 ]		8187029	0					
ANR	8187574	ArrayIndexing	metrics -> charSymbolBox [ 3 ]		8187029	0					
ANR	8187575	PtrMemberAccess	metrics -> charSymbolBox		8187029	0					
ANR	8187576	Identifier	metrics		8187029	0					
ANR	8187577	Identifier	charSymbolBox		8187029	1					
ANR	8187578	PrimaryExpression	3		8187029	1					
ANR	8187579	ExpressionStatement	pointBufferSize = num_points	1354:12:46768:46796	8187029	23	True				
ANR	8187580	AssignmentExpression	pointBufferSize = num_points		8187029	0		=			
ANR	8187581	Identifier	pointBufferSize		8187029	0					
ANR	8187582	Identifier	num_points		8187029	1					
ANR	8187583	IfStatement	if ( num_aux_points != 0xffff )		8187029	24					
ANR	8187584	Condition	num_aux_points != 0xffff	1355:16:46861:46884	8187029	0	True				
ANR	8187585	EqualityExpression	num_aux_points != 0xffff		8187029	0		!=			
ANR	8187586	Identifier	num_aux_points		8187029	0					
ANR	8187587	PrimaryExpression	0xffff		8187029	1					
ANR	8187588	CompoundStatement		95:42:3185:3185	8187029	1					
ANR	8187589	ExpressionStatement	pointBufferSize += num_aux_points	1356:16:46905:46938	8187029	0	True				
ANR	8187590	AssignmentExpression	pointBufferSize += num_aux_points		8187029	0		+=			
ANR	8187591	Identifier	pointBufferSize		8187029	0					
ANR	8187592	Identifier	num_aux_points		8187029	1					
ANR	8187593	ExpressionStatement	x_aux_coords = y_coords + num_points * 2	1357:16:46956:46996	8187029	1	True				
ANR	8187594	AssignmentExpression	x_aux_coords = y_coords + num_points * 2		8187029	0		=			
ANR	8187595	Identifier	x_aux_coords		8187029	0					
ANR	8187596	AdditiveExpression	y_coords + num_points * 2		8187029	1		+			
ANR	8187597	Identifier	y_coords		8187029	0					
ANR	8187598	MultiplicativeExpression	num_points * 2		8187029	1		*			
ANR	8187599	Identifier	num_points		8187029	0					
ANR	8187600	PrimaryExpression	2		8187029	1					
ANR	8187601	ExpressionStatement	y_aux_coords = x_aux_coords + num_aux_points	1358:16:47014:47058	8187029	2	True				
ANR	8187602	AssignmentExpression	y_aux_coords = x_aux_coords + num_aux_points		8187029	0		=			
ANR	8187603	Identifier	y_aux_coords		8187029	0					
ANR	8187604	AdditiveExpression	x_aux_coords + num_aux_points		8187029	1		+			
ANR	8187605	Identifier	x_aux_coords		8187029	0					
ANR	8187606	Identifier	num_aux_points		8187029	1					
ANR	8187607	ExpressionStatement	x_aux_coords_last = y_coords	1359:16:47076:47104	8187029	3	True				
ANR	8187608	AssignmentExpression	x_aux_coords_last = y_coords		8187029	0		=			
ANR	8187609	Identifier	x_aux_coords_last		8187029	0					
ANR	8187610	Identifier	y_coords		8187029	1					
ANR	8187611	IfStatement	if ( ( y_aux_coords + num_aux_points * 2 ) >= cdata_end )		8187029	4					
ANR	8187612	Condition	( y_aux_coords + num_aux_points * 2 ) >= cdata_end	1360:20:47126:47173	8187029	0	True				
ANR	8187613	RelationalExpression	( y_aux_coords + num_aux_points * 2 ) >= cdata_end		8187029	0		>=			
ANR	8187614	AdditiveExpression	y_aux_coords + num_aux_points * 2		8187029	0		+			
ANR	8187615	Identifier	y_aux_coords		8187029	0					
ANR	8187616	MultiplicativeExpression	num_aux_points * 2		8187029	1		*			
ANR	8187617	Identifier	num_aux_points		8187029	0					
ANR	8187618	PrimaryExpression	2		8187029	1					
ANR	8187619	Identifier	cdata_end		8187029	1					
ANR	8187620	CompoundStatement		100:70:3474:3474	8187029	1					
ANR	8187621	IfStatement	if ( x_aux_coords_last >= cdata_end )		8187029	0					
ANR	8187622	Condition	x_aux_coords_last >= cdata_end	1361:24:47202:47231	8187029	0	True				
ANR	8187623	RelationalExpression	x_aux_coords_last >= cdata_end		8187029	0		>=			
ANR	8187624	Identifier	x_aux_coords_last		8187029	0					
ANR	8187625	Identifier	cdata_end		8187029	1					
ANR	8187626	CompoundStatement		101:56:3532:3532	8187029	1					
ANR	8187627	ExpressionStatement	pointBufferSize -= num_aux_points	1362:24:47260:47293	8187029	0	True				
ANR	8187628	AssignmentExpression	pointBufferSize -= num_aux_points		8187029	0		-=			
ANR	8187629	Identifier	pointBufferSize		8187029	0					
ANR	8187630	Identifier	num_aux_points		8187029	1					
ANR	8187631	ExpressionStatement	num_aux_points = 0xffff	1363:24:47319:47342	8187029	1	True				
ANR	8187632	AssignmentExpression	num_aux_points = 0xffff		8187029	0		=			
ANR	8187633	Identifier	num_aux_points		8187029	0					
ANR	8187634	PrimaryExpression	0xffff		8187029	1					
ANR	8187635	ExpressionStatement	x_aux_coords = NULL	1364:24:47368:47387	8187029	2	True				
ANR	8187636	AssignmentExpression	x_aux_coords = NULL		8187029	0		=			
ANR	8187637	Identifier	x_aux_coords		8187029	0					
ANR	8187638	Identifier	NULL		8187029	1					
ANR	8187639	ExpressionStatement	y_aux_coords = NULL	1365:24:47413:47432	8187029	3	True				
ANR	8187640	AssignmentExpression	y_aux_coords = NULL		8187029	0		=			
ANR	8187641	Identifier	y_aux_coords		8187029	0					
ANR	8187642	Identifier	NULL		8187029	1					
ANR	8187643	ExpressionStatement	x_aux_coords_last = NULL	1366:24:47458:47482	8187029	4	True				
ANR	8187644	AssignmentExpression	x_aux_coords_last = NULL		8187029	0		=			
ANR	8187645	Identifier	x_aux_coords_last		8187029	0					
ANR	8187646	Identifier	NULL		8187029	1					
ANR	8187647	ElseStatement	else		8187029	0					
ANR	8187648	CompoundStatement		108:25:3829:3829	8187029	0					
ANR	8187649	ExpressionStatement	pointBufferSize -= num_aux_points	1372:24:47720:47753	8187029	0	True				
ANR	8187650	AssignmentExpression	pointBufferSize -= num_aux_points		8187029	0		-=			
ANR	8187651	Identifier	pointBufferSize		8187029	0					
ANR	8187652	Identifier	num_aux_points		8187029	1					
ANR	8187653	ExpressionStatement	num_aux_points = ( cdata_end - y_aux_coords ) / 2	1373:24:47779:47826	8187029	1	True				
ANR	8187654	AssignmentExpression	num_aux_points = ( cdata_end - y_aux_coords ) / 2		8187029	0		=			
ANR	8187655	Identifier	num_aux_points		8187029	0					
ANR	8187656	MultiplicativeExpression	( cdata_end - y_aux_coords ) / 2		8187029	1		/			
ANR	8187657	AdditiveExpression	cdata_end - y_aux_coords		8187029	0		-			
ANR	8187658	Identifier	cdata_end		8187029	0					
ANR	8187659	Identifier	y_aux_coords		8187029	1					
ANR	8187660	PrimaryExpression	2		8187029	1					
ANR	8187661	ExpressionStatement	pointBufferSize += num_aux_points	1374:24:47852:47885	8187029	2	True				
ANR	8187662	AssignmentExpression	pointBufferSize += num_aux_points		8187029	0		+=			
ANR	8187663	Identifier	pointBufferSize		8187029	0					
ANR	8187664	Identifier	num_aux_points		8187029	1					
ANR	8187665	ExpressionStatement	x_aux_coords_last = x_aux_coords + num_aux_points	1375:24:47911:47960	8187029	3	True				
ANR	8187666	AssignmentExpression	x_aux_coords_last = x_aux_coords + num_aux_points		8187029	0		=			
ANR	8187667	Identifier	x_aux_coords_last		8187029	0					
ANR	8187668	AdditiveExpression	x_aux_coords + num_aux_points		8187029	1		+			
ANR	8187669	Identifier	x_aux_coords		8187029	0					
ANR	8187670	Identifier	num_aux_points		8187029	1					
ANR	8187671	ElseStatement	else		8187029	0					
ANR	8187672	CompoundStatement		118:19:4319:4319	8187029	0					
ANR	8187673	ExpressionStatement	x_aux_coords = NULL	1379:16:48039:48058	8187029	0	True				
ANR	8187674	AssignmentExpression	x_aux_coords = NULL		8187029	0		=			
ANR	8187675	Identifier	x_aux_coords		8187029	0					
ANR	8187676	Identifier	NULL		8187029	1					
ANR	8187677	ExpressionStatement	y_aux_coords = NULL	1380:16:48076:48095	8187029	1	True				
ANR	8187678	AssignmentExpression	y_aux_coords = NULL		8187029	0		=			
ANR	8187679	Identifier	y_aux_coords		8187029	0					
ANR	8187680	Identifier	NULL		8187029	1					
ANR	8187681	ExpressionStatement	x_aux_coords_last = NULL	1381:16:48113:48137	8187029	2	True				
ANR	8187682	AssignmentExpression	x_aux_coords_last = NULL		8187029	0		=			
ANR	8187683	Identifier	x_aux_coords_last		8187029	0					
ANR	8187684	Identifier	NULL		8187029	1					
ANR	8187685	ExpressionStatement	sz = pointBufferSize * sizeof ( int )	1384:12:48166:48200	8187029	25	True				
ANR	8187686	AssignmentExpression	sz = pointBufferSize * sizeof ( int )		8187029	0		=			
ANR	8187687	Identifier	sz		8187029	0					
ANR	8187688	MultiplicativeExpression	pointBufferSize * sizeof ( int )		8187029	1		*			
ANR	8187689	Identifier	pointBufferSize		8187029	0					
ANR	8187690	SizeofExpression	sizeof ( int )		8187029	1					
ANR	8187691	Sizeof	sizeof		8187029	0					
ANR	8187692	SizeofOperand	int		8187029	1					
ANR	8187693	IfStatement	if ( i == 0 )		8187029	26					
ANR	8187694	Condition	i == 0	1386:16:48219:48224	8187029	0	True				
ANR	8187695	EqualityExpression	i == 0		8187029	0		==			
ANR	8187696	Identifier	i		8187029	0					
ANR	8187697	PrimaryExpression	0		8187029	1					
ANR	8187698	CompoundStatement		126:24:4525:4525	8187029	1					
ANR	8187699	ExpressionStatement	"xBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"	1387:16:48245:48300	8187029	0	True				
ANR	8187700	AssignmentExpression	"xBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8187029	0		=			
ANR	8187701	Identifier	xBuffer		8187029	0					
ANR	8187702	CastExpression	"( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8187029	1					
ANR	8187703	CastTarget	int *		8187029	0					
ANR	8187704	CallExpression	"gs_alloc_bytes ( pgs -> memory , sz , cname )"		8187029	1					
ANR	8187705	Callee	gs_alloc_bytes		8187029	0					
ANR	8187706	Identifier	gs_alloc_bytes		8187029	0					
ANR	8187707	ArgumentList	pgs -> memory		8187029	1					
ANR	8187708	Argument	pgs -> memory		8187029	0					
ANR	8187709	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187710	Identifier	pgs		8187029	0					
ANR	8187711	Identifier	memory		8187029	1					
ANR	8187712	Argument	sz		8187029	1					
ANR	8187713	Identifier	sz		8187029	0					
ANR	8187714	Argument	cname		8187029	2					
ANR	8187715	Identifier	cname		8187029	0					
ANR	8187716	ExpressionStatement	"yBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"	1388:16:48318:48373	8187029	1	True				
ANR	8187717	AssignmentExpression	"yBuffer = ( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8187029	0		=			
ANR	8187718	Identifier	yBuffer		8187029	0					
ANR	8187719	CastExpression	"( int * ) gs_alloc_bytes ( pgs -> memory , sz , cname )"		8187029	1					
ANR	8187720	CastTarget	int *		8187029	0					
ANR	8187721	CallExpression	"gs_alloc_bytes ( pgs -> memory , sz , cname )"		8187029	1					
ANR	8187722	Callee	gs_alloc_bytes		8187029	0					
ANR	8187723	Identifier	gs_alloc_bytes		8187029	0					
ANR	8187724	ArgumentList	pgs -> memory		8187029	1					
ANR	8187725	Argument	pgs -> memory		8187029	0					
ANR	8187726	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187727	Identifier	pgs		8187029	0					
ANR	8187728	Identifier	memory		8187029	1					
ANR	8187729	Argument	sz		8187029	1					
ANR	8187730	Identifier	sz		8187029	0					
ANR	8187731	Argument	cname		8187029	2					
ANR	8187732	Identifier	cname		8187029	0					
ANR	8187733	ElseStatement	else		8187029	0					
ANR	8187734	CompoundStatement		129:19:4692:4692	8187029	0					
ANR	8187735	ExpressionStatement	"xBuffer = ( int * ) gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"	1391:16:48478:48564	8187029	0	True				
ANR	8187736	AssignmentExpression	"xBuffer = ( int * ) gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"		8187029	0		=			
ANR	8187737	Identifier	xBuffer		8187029	0					
ANR	8187738	CastExpression	"( int * ) gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"		8187029	1					
ANR	8187739	CastTarget	int *		8187029	0					
ANR	8187740	CallExpression	"gs_resize_object ( pgs -> memory , xBuffer , sz , cname )"		8187029	1					
ANR	8187741	Callee	gs_resize_object		8187029	0					
ANR	8187742	Identifier	gs_resize_object		8187029	0					
ANR	8187743	ArgumentList	pgs -> memory		8187029	1					
ANR	8187744	Argument	pgs -> memory		8187029	0					
ANR	8187745	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187746	Identifier	pgs		8187029	0					
ANR	8187747	Identifier	memory		8187029	1					
ANR	8187748	Argument	xBuffer		8187029	1					
ANR	8187749	Identifier	xBuffer		8187029	0					
ANR	8187750	Argument	sz		8187029	2					
ANR	8187751	Identifier	sz		8187029	0					
ANR	8187752	Argument	cname		8187029	3					
ANR	8187753	Identifier	cname		8187029	0					
ANR	8187754	ExpressionStatement	"yBuffer = ( int * ) gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"	1393:16:48582:48668	8187029	1	True				
ANR	8187755	AssignmentExpression	"yBuffer = ( int * ) gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"		8187029	0		=			
ANR	8187756	Identifier	yBuffer		8187029	0					
ANR	8187757	CastExpression	"( int * ) gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"		8187029	1					
ANR	8187758	CastTarget	int *		8187029	0					
ANR	8187759	CallExpression	"gs_resize_object ( pgs -> memory , yBuffer , sz , cname )"		8187029	1					
ANR	8187760	Callee	gs_resize_object		8187029	0					
ANR	8187761	Identifier	gs_resize_object		8187029	0					
ANR	8187762	ArgumentList	pgs -> memory		8187029	1					
ANR	8187763	Argument	pgs -> memory		8187029	0					
ANR	8187764	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187765	Identifier	pgs		8187029	0					
ANR	8187766	Identifier	memory		8187029	1					
ANR	8187767	Argument	yBuffer		8187029	1					
ANR	8187768	Identifier	yBuffer		8187029	0					
ANR	8187769	Argument	sz		8187029	2					
ANR	8187770	Identifier	sz		8187029	0					
ANR	8187771	Argument	cname		8187029	3					
ANR	8187772	Identifier	cname		8187029	0					
ANR	8187773	IfStatement	if ( xBuffer == NULL || yBuffer == NULL )		8187029	27					
ANR	8187774	Condition	xBuffer == NULL || yBuffer == NULL	1397:16:48701:48734	8187029	0	True				
ANR	8187775	OrExpression	xBuffer == NULL || yBuffer == NULL		8187029	0		||			
ANR	8187776	EqualityExpression	xBuffer == NULL		8187029	0		==			
ANR	8187777	Identifier	xBuffer		8187029	0					
ANR	8187778	Identifier	NULL		8187029	1					
ANR	8187779	EqualityExpression	yBuffer == NULL		8187029	1		==			
ANR	8187780	Identifier	yBuffer		8187029	0					
ANR	8187781	Identifier	NULL		8187029	1					
ANR	8187782	CompoundStatement		137:52:5035:5035	8187029	1					
ANR	8187783	IfStatement	if ( xBuffer != NULL )		8187029	0					
ANR	8187784	Condition	xBuffer != NULL	1398:20:48759:48773	8187029	0	True				
ANR	8187785	EqualityExpression	xBuffer != NULL		8187029	0		!=			
ANR	8187786	Identifier	xBuffer		8187029	0					
ANR	8187787	Identifier	NULL		8187029	1					
ANR	8187788	ExpressionStatement	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"	1399:20:48796:48850	8187029	1	True				
ANR	8187789	CallExpression	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"		8187029	0					
ANR	8187790	Callee	gs_free_object		8187029	0					
ANR	8187791	Identifier	gs_free_object		8187029	0					
ANR	8187792	ArgumentList	pgs -> memory		8187029	1					
ANR	8187793	Argument	pgs -> memory		8187029	0					
ANR	8187794	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187795	Identifier	pgs		8187029	0					
ANR	8187796	Identifier	memory		8187029	1					
ANR	8187797	Argument	xBuffer		8187029	1					
ANR	8187798	Identifier	xBuffer		8187029	0					
ANR	8187799	Argument	"""x point buffer"""		8187029	2					
ANR	8187800	PrimaryExpression	"""x point buffer"""		8187029	0					
ANR	8187801	IfStatement	if ( yBuffer != NULL )		8187029	1					
ANR	8187802	Condition	yBuffer != NULL	1400:20:48872:48886	8187029	0	True				
ANR	8187803	EqualityExpression	yBuffer != NULL		8187029	0		!=			
ANR	8187804	Identifier	yBuffer		8187029	0					
ANR	8187805	Identifier	NULL		8187029	1					
ANR	8187806	ExpressionStatement	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"	1401:20:48909:48963	8187029	1	True				
ANR	8187807	CallExpression	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"		8187029	0					
ANR	8187808	Callee	gs_free_object		8187029	0					
ANR	8187809	Identifier	gs_free_object		8187029	0					
ANR	8187810	ArgumentList	pgs -> memory		8187029	1					
ANR	8187811	Argument	pgs -> memory		8187029	0					
ANR	8187812	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187813	Identifier	pgs		8187029	0					
ANR	8187814	Identifier	memory		8187029	1					
ANR	8187815	Argument	yBuffer		8187029	1					
ANR	8187816	Identifier	yBuffer		8187029	0					
ANR	8187817	Argument	"""y point buffer"""		8187029	2					
ANR	8187818	PrimaryExpression	"""y point buffer"""		8187029	0					
ANR	8187819	ExpressionStatement	return_error ( gs_error_VMerror )	1402:16:48981:49011	8187029	2	True				
ANR	8187820	CallExpression	return_error ( gs_error_VMerror )		8187029	0					
ANR	8187821	Callee	return_error		8187029	0					
ANR	8187822	Identifier	return_error		8187029	0					
ANR	8187823	ArgumentList	gs_error_VMerror		8187029	1					
ANR	8187824	Argument	gs_error_VMerror		8187029	0					
ANR	8187825	Identifier	gs_error_VMerror		8187029	0					
ANR	8187826	ExpressionStatement	xLast = NULL	1405:12:49040:49052	8187029	28	True				
ANR	8187827	AssignmentExpression	xLast = NULL		8187029	0		=			
ANR	8187828	Identifier	xLast		8187029	0					
ANR	8187829	Identifier	NULL		8187029	1					
ANR	8187830	ExpressionStatement	"if_debug2m ( '1' , pgs -> memory , ""[1]num_points=%u num_aux_points=%u\\n"" , num_points , num_aux_points )"	1407:12:49067:49209	8187029	29	True				
ANR	8187831	CallExpression	"if_debug2m ( '1' , pgs -> memory , ""[1]num_points=%u num_aux_points=%u\\n"" , num_points , num_aux_points )"		8187029	0					
ANR	8187832	Callee	if_debug2m		8187029	0					
ANR	8187833	Identifier	if_debug2m		8187029	0					
ANR	8187834	ArgumentList	'1'		8187029	1					
ANR	8187835	Argument	'1'		8187029	0					
ANR	8187836	PrimaryExpression	'1'		8187029	0					
ANR	8187837	Argument	pgs -> memory		8187029	1					
ANR	8187838	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187839	Identifier	pgs		8187029	0					
ANR	8187840	Identifier	memory		8187029	1					
ANR	8187841	Argument	"""[1]num_points=%u num_aux_points=%u\\n"""		8187029	2					
ANR	8187842	PrimaryExpression	"""[1]num_points=%u num_aux_points=%u\\n"""		8187029	0					
ANR	8187843	Argument	num_points		8187029	3					
ANR	8187844	Identifier	num_points		8187029	0					
ANR	8187845	Argument	num_aux_points		8187029	4					
ANR	8187846	Identifier	num_aux_points		8187029	0					
ANR	8187847	ForStatement	"for ( xScan = xBuffer , yScan = yBuffer ; x_coords < x_coords_last ; x_coords += 2 , y_coords += 2 )"		8187029	30					
ANR	8187848	ForInit	"xScan = xBuffer , yScan = yBuffer ;"	1415:17:49573:49605	8187029	0	True				
ANR	8187849	Expression	"xScan = xBuffer , yScan = yBuffer"		8187029	0					
ANR	8187850	AssignmentExpression	xScan = xBuffer		8187029	0		=			
ANR	8187851	Identifier	xScan		8187029	0					
ANR	8187852	Identifier	xBuffer		8187029	1					
ANR	8187853	AssignmentExpression	yScan = yBuffer		8187029	1		=			
ANR	8187854	Identifier	yScan		8187029	0					
ANR	8187855	Identifier	yBuffer		8187029	1					
ANR	8187856	Condition	x_coords < x_coords_last	1415:51:49607:49630	8187029	1	True				
ANR	8187857	RelationalExpression	x_coords < x_coords_last		8187029	0		<			
ANR	8187858	Identifier	x_coords		8187029	0					
ANR	8187859	Identifier	x_coords_last		8187029	1					
ANR	8187860	Expression	"x_coords += 2 , y_coords += 2"	1416:17:49650:49677	8187029	2	True				
ANR	8187861	AssignmentExpression	x_coords += 2		8187029	0		+=			
ANR	8187862	Identifier	x_coords		8187029	0					
ANR	8187863	PrimaryExpression	2		8187029	1					
ANR	8187864	AssignmentExpression	y_coords += 2		8187029	1		+=			
ANR	8187865	Identifier	y_coords		8187029	0					
ANR	8187866	PrimaryExpression	2		8187029	1					
ANR	8187867	CompoundStatement		156:47:5978:5978	8187029	3					
ANR	8187868	ExpressionStatement	x = pl_get_uint16 ( x_coords ) & 0x3fff	1417:16:49698:49734	8187029	0	True				
ANR	8187869	AssignmentExpression	x = pl_get_uint16 ( x_coords ) & 0x3fff		8187029	0		=			
ANR	8187870	Identifier	x		8187029	0					
ANR	8187871	BitAndExpression	pl_get_uint16 ( x_coords ) & 0x3fff		8187029	1		&			
ANR	8187872	CallExpression	pl_get_uint16 ( x_coords )		8187029	0					
ANR	8187873	Callee	pl_get_uint16		8187029	0					
ANR	8187874	Identifier	pl_get_uint16		8187029	0					
ANR	8187875	ArgumentList	x_coords		8187029	1					
ANR	8187876	Argument	x_coords		8187029	0					
ANR	8187877	Identifier	x_coords		8187029	0					
ANR	8187878	PrimaryExpression	0x3fff		8187029	1					
ANR	8187879	ExpressionStatement	y = pl_get_uint16 ( y_coords ) & 0x3fff	1418:16:49752:49788	8187029	1	True				
ANR	8187880	AssignmentExpression	y = pl_get_uint16 ( y_coords ) & 0x3fff		8187029	0		=			
ANR	8187881	Identifier	y		8187029	0					
ANR	8187882	BitAndExpression	pl_get_uint16 ( y_coords ) & 0x3fff		8187029	1		&			
ANR	8187883	CallExpression	pl_get_uint16 ( y_coords )		8187029	0					
ANR	8187884	Callee	pl_get_uint16		8187029	0					
ANR	8187885	Identifier	pl_get_uint16		8187029	0					
ANR	8187886	ArgumentList	y_coords		8187029	1					
ANR	8187887	Argument	y_coords		8187029	0					
ANR	8187888	Identifier	y_coords		8187029	0					
ANR	8187889	PrimaryExpression	0x3fff		8187029	1					
ANR	8187890	ExpressionStatement	"if_debug4m ( '1' , pgs -> memory , ""[1]%s (%d,%d) %s\\n"" , ( * x_coords & 0x80 ? "" line"" : ""curve"" ) , x , y , ( * y_coords & 0x80 ? "" line"" : ""curve"" ) )"	1420:16:49807:49997	8187029	2	True				
ANR	8187891	CallExpression	"if_debug4m ( '1' , pgs -> memory , ""[1]%s (%d,%d) %s\\n"" , ( * x_coords & 0x80 ? "" line"" : ""curve"" ) , x , y , ( * y_coords & 0x80 ? "" line"" : ""curve"" ) )"		8187029	0					
ANR	8187892	Callee	if_debug4m		8187029	0					
ANR	8187893	Identifier	if_debug4m		8187029	0					
ANR	8187894	ArgumentList	'1'		8187029	1					
ANR	8187895	Argument	'1'		8187029	0					
ANR	8187896	PrimaryExpression	'1'		8187029	0					
ANR	8187897	Argument	pgs -> memory		8187029	1					
ANR	8187898	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187899	Identifier	pgs		8187029	0					
ANR	8187900	Identifier	memory		8187029	1					
ANR	8187901	Argument	"""[1]%s (%d,%d) %s\\n"""		8187029	2					
ANR	8187902	PrimaryExpression	"""[1]%s (%d,%d) %s\\n"""		8187029	0					
ANR	8187903	Argument	"* x_coords & 0x80 ? "" line"" : ""curve"""		8187029	3					
ANR	8187904	ConditionalExpression	"* x_coords & 0x80 ? "" line"" : ""curve"""		8187029	0					
ANR	8187905	Condition	* x_coords & 0x80		8187029	0					
ANR	8187906	BitAndExpression	* x_coords & 0x80		8187029	0		&			
ANR	8187907	UnaryOperationExpression	* x_coords		8187029	0					
ANR	8187908	UnaryOperator	*		8187029	0					
ANR	8187909	Identifier	x_coords		8187029	1					
ANR	8187910	PrimaryExpression	0x80		8187029	1					
ANR	8187911	PrimaryExpression	""" line"""		8187029	1					
ANR	8187912	PrimaryExpression	"""curve"""		8187029	2					
ANR	8187913	Argument	x		8187029	4					
ANR	8187914	Identifier	x		8187029	0					
ANR	8187915	Argument	y		8187029	5					
ANR	8187916	Identifier	y		8187029	0					
ANR	8187917	Argument	"* y_coords & 0x80 ? "" line"" : ""curve"""		8187029	6					
ANR	8187918	ConditionalExpression	"* y_coords & 0x80 ? "" line"" : ""curve"""		8187029	0					
ANR	8187919	Condition	* y_coords & 0x80		8187029	0					
ANR	8187920	BitAndExpression	* y_coords & 0x80		8187029	0		&			
ANR	8187921	UnaryOperationExpression	* y_coords		8187029	0					
ANR	8187922	UnaryOperator	*		8187029	0					
ANR	8187923	Identifier	y_coords		8187029	1					
ANR	8187924	PrimaryExpression	0x80		8187029	1					
ANR	8187925	PrimaryExpression	""" line"""		8187029	1					
ANR	8187926	PrimaryExpression	"""curve"""		8187029	2					
ANR	8187927	IfStatement	if ( xScan > xBuffer )		8187029	3					
ANR	8187928	Condition	xScan > xBuffer	1424:20:50020:50034	8187029	0	True				
ANR	8187929	RelationalExpression	xScan > xBuffer		8187029	0		>			
ANR	8187930	Identifier	xScan		8187029	0					
ANR	8187931	Identifier	xBuffer		8187029	1					
ANR	8187932	CompoundStatement		164:37:6335:6335	8187029	1					
ANR	8187933	IfStatement	if ( x_aux_coords < x_aux_coords_last && ! ( * x_coords & 0x80 ) )		8187029	0					
ANR	8187934	Condition	x_aux_coords < x_aux_coords_last && ! ( * x_coords & 0x80 )	1425:24:50113:50167	8187029	0	True				
ANR	8187935	AndExpression	x_aux_coords < x_aux_coords_last && ! ( * x_coords & 0x80 )		8187029	0		&&			
ANR	8187936	RelationalExpression	x_aux_coords < x_aux_coords_last		8187029	0		<			
ANR	8187937	Identifier	x_aux_coords		8187029	0					
ANR	8187938	Identifier	x_aux_coords_last		8187029	1					
ANR	8187939	UnaryOperationExpression	! ( * x_coords & 0x80 )		8187029	1					
ANR	8187940	UnaryOperator	!		8187029	0					
ANR	8187941	BitAndExpression	* x_coords & 0x80		8187029	1		&			
ANR	8187942	UnaryOperationExpression	* x_coords		8187029	0					
ANR	8187943	UnaryOperator	*		8187029	0					
ANR	8187944	Identifier	x_coords		8187029	1					
ANR	8187945	PrimaryExpression	0x80		8187029	1					
ANR	8187946	CompoundStatement		168:24:6661:6701	8187029	1					
ANR	8187947	IdentifierDeclStatement	int dx = ( * x_aux_coords ++ ^ 0x80 ) - 0x80 ;	1427:24:50297:50337	8187029	0	True				
ANR	8187948	IdentifierDecl	dx = ( * x_aux_coords ++ ^ 0x80 ) - 0x80		8187029	0					
ANR	8187949	IdentifierDeclType	int		8187029	0					
ANR	8187950	Identifier	dx		8187029	1					
ANR	8187951	AssignmentExpression	dx = ( * x_aux_coords ++ ^ 0x80 ) - 0x80		8187029	2		=			
ANR	8187952	Identifier	dx		8187029	0					
ANR	8187953	AdditiveExpression	( * x_aux_coords ++ ^ 0x80 ) - 0x80		8187029	1		-			
ANR	8187954	ExclusiveOrExpression	* x_aux_coords ++ ^ 0x80		8187029	0		^			
ANR	8187955	UnaryOperationExpression	* x_aux_coords ++		8187029	0					
ANR	8187956	UnaryOperator	*		8187029	0					
ANR	8187957	PostIncDecOperationExpression	x_aux_coords ++		8187029	1					
ANR	8187958	Identifier	x_aux_coords		8187029	0					
ANR	8187959	IncDec	++		8187029	1					
ANR	8187960	PrimaryExpression	0x80		8187029	1					
ANR	8187961	PrimaryExpression	0x80		8187029	1					
ANR	8187962	IdentifierDeclStatement	int dy = ( * y_aux_coords ++ ^ 0x80 ) - 0x80 ;	1428:24:50363:50403	8187029	1	True				
ANR	8187963	IdentifierDecl	dy = ( * y_aux_coords ++ ^ 0x80 ) - 0x80		8187029	0					
ANR	8187964	IdentifierDeclType	int		8187029	0					
ANR	8187965	Identifier	dy		8187029	1					
ANR	8187966	AssignmentExpression	dy = ( * y_aux_coords ++ ^ 0x80 ) - 0x80		8187029	2		=			
ANR	8187967	Identifier	dy		8187029	0					
ANR	8187968	AdditiveExpression	( * y_aux_coords ++ ^ 0x80 ) - 0x80		8187029	1		-			
ANR	8187969	ExclusiveOrExpression	* y_aux_coords ++ ^ 0x80		8187029	0		^			
ANR	8187970	UnaryOperationExpression	* y_aux_coords ++		8187029	0					
ANR	8187971	UnaryOperator	*		8187029	0					
ANR	8187972	PostIncDecOperationExpression	y_aux_coords ++		8187029	1					
ANR	8187973	Identifier	y_aux_coords		8187029	0					
ANR	8187974	IncDec	++		8187029	1					
ANR	8187975	PrimaryExpression	0x80		8187029	1					
ANR	8187976	PrimaryExpression	0x80		8187029	1					
ANR	8187977	ExpressionStatement	"if_debug2m ( '1' , pgs -> memory , ""[1]... aux (%d,%d)\\n"" , dx , dy )"	1430:24:50430:50525	8187029	2	True				
ANR	8187978	CallExpression	"if_debug2m ( '1' , pgs -> memory , ""[1]... aux (%d,%d)\\n"" , dx , dy )"		8187029	0					
ANR	8187979	Callee	if_debug2m		8187029	0					
ANR	8187980	Identifier	if_debug2m		8187029	0					
ANR	8187981	ArgumentList	'1'		8187029	1					
ANR	8187982	Argument	'1'		8187029	0					
ANR	8187983	PrimaryExpression	'1'		8187029	0					
ANR	8187984	Argument	pgs -> memory		8187029	1					
ANR	8187985	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8187986	Identifier	pgs		8187029	0					
ANR	8187987	Identifier	memory		8187029	1					
ANR	8187988	Argument	"""[1]... aux (%d,%d)\\n"""		8187029	2					
ANR	8187989	PrimaryExpression	"""[1]... aux (%d,%d)\\n"""		8187029	0					
ANR	8187990	Argument	dx		8187029	3					
ANR	8187991	Identifier	dx		8187029	0					
ANR	8187992	Argument	dy		8187029	4					
ANR	8187993	Identifier	dy		8187029	0					
ANR	8187994	ExpressionStatement	xAux = ( x + * ( xScan - 1 ) ) / 2 + dx	1433:24:50552:50586	8187029	3	True				
ANR	8187995	AssignmentExpression	xAux = ( x + * ( xScan - 1 ) ) / 2 + dx		8187029	0		=			
ANR	8187996	Identifier	xAux		8187029	0					
ANR	8187997	AdditiveExpression	( x + * ( xScan - 1 ) ) / 2 + dx		8187029	1		+			
ANR	8187998	MultiplicativeExpression	( x + * ( xScan - 1 ) ) / 2		8187029	0		/			
ANR	8187999	AdditiveExpression	x + * ( xScan - 1 )		8187029	0		+			
ANR	8188000	Identifier	x		8187029	0					
ANR	8188001	UnaryOperationExpression	* ( xScan - 1 )		8187029	1					
ANR	8188002	UnaryOperator	*		8187029	0					
ANR	8188003	AdditiveExpression	xScan - 1		8187029	1		-			
ANR	8188004	Identifier	xScan		8187029	0					
ANR	8188005	PrimaryExpression	1		8187029	1					
ANR	8188006	PrimaryExpression	2		8187029	1					
ANR	8188007	Identifier	dx		8187029	1					
ANR	8188008	ExpressionStatement	yAux = ( y + * ( yScan - 1 ) ) / 2 + dy	1434:24:50612:50646	8187029	4	True				
ANR	8188009	AssignmentExpression	yAux = ( y + * ( yScan - 1 ) ) / 2 + dy		8187029	0		=			
ANR	8188010	Identifier	yAux		8187029	0					
ANR	8188011	AdditiveExpression	( y + * ( yScan - 1 ) ) / 2 + dy		8187029	1		+			
ANR	8188012	MultiplicativeExpression	( y + * ( yScan - 1 ) ) / 2		8187029	0		/			
ANR	8188013	AdditiveExpression	y + * ( yScan - 1 )		8187029	0		+			
ANR	8188014	Identifier	y		8187029	0					
ANR	8188015	UnaryOperationExpression	* ( yScan - 1 )		8187029	1					
ANR	8188016	UnaryOperator	*		8187029	0					
ANR	8188017	AdditiveExpression	yScan - 1		8187029	1		-			
ANR	8188018	Identifier	yScan		8187029	0					
ANR	8188019	PrimaryExpression	1		8187029	1					
ANR	8188020	PrimaryExpression	2		8187029	1					
ANR	8188021	Identifier	dy		8187029	1					
ANR	8188022	IfStatement	if ( ( xAux >= llx && xAux <= urx ) && ( yAux >= lly && yAux <= ury ) )		8187029	5					
ANR	8188023	Condition	( xAux >= llx && xAux <= urx ) && ( yAux >= lly && yAux <= ury )	1435:28:50676:50735	8187029	0	True				
ANR	8188024	AndExpression	( xAux >= llx && xAux <= urx ) && ( yAux >= lly && yAux <= ury )		8187029	0		&&			
ANR	8188025	AndExpression	xAux >= llx && xAux <= urx		8187029	0		&&			
ANR	8188026	RelationalExpression	xAux >= llx		8187029	0		>=			
ANR	8188027	Identifier	xAux		8187029	0					
ANR	8188028	Identifier	llx		8187029	1					
ANR	8188029	RelationalExpression	xAux <= urx		8187029	1		<=			
ANR	8188030	Identifier	xAux		8187029	0					
ANR	8188031	Identifier	urx		8187029	1					
ANR	8188032	AndExpression	yAux >= lly && yAux <= ury		8187029	1		&&			
ANR	8188033	RelationalExpression	yAux >= lly		8187029	0		>=			
ANR	8188034	Identifier	yAux		8187029	0					
ANR	8188035	Identifier	lly		8187029	1					
ANR	8188036	RelationalExpression	yAux <= ury		8187029	1		<=			
ANR	8188037	Identifier	yAux		8187029	0					
ANR	8188038	Identifier	ury		8187029	1					
ANR	8188039	CompoundStatement		175:90:7036:7036	8187029	1					
ANR	8188040	ExpressionStatement	* xScan ++ = xAux	1436:28:50811:50826	8187029	0	True				
ANR	8188041	AssignmentExpression	* xScan ++ = xAux		8187029	0		=			
ANR	8188042	UnaryOperationExpression	* xScan ++		8187029	0					
ANR	8188043	UnaryOperator	*		8187029	0					
ANR	8188044	PostIncDecOperationExpression	xScan ++		8187029	1					
ANR	8188045	Identifier	xScan		8187029	0					
ANR	8188046	IncDec	++		8187029	1					
ANR	8188047	Identifier	xAux		8187029	1					
ANR	8188048	ExpressionStatement	* yScan ++ = yAux	1437:28:50856:50871	8187029	1	True				
ANR	8188049	AssignmentExpression	* yScan ++ = yAux		8187029	0		=			
ANR	8188050	UnaryOperationExpression	* yScan ++		8187029	0					
ANR	8188051	UnaryOperator	*		8187029	0					
ANR	8188052	PostIncDecOperationExpression	yScan ++		8187029	1					
ANR	8188053	Identifier	yScan		8187029	0					
ANR	8188054	IncDec	++		8187029	1					
ANR	8188055	Identifier	yAux		8187029	1					
ANR	8188056	IfStatement	if ( ( x >= llx && x <= urx ) && ( y >= lly && y <= ury ) )		8187029	4					
ANR	8188057	Condition	( x >= llx && x <= urx ) && ( y >= lly && y <= ury )	1444:20:51166:51213	8187029	0	True				
ANR	8188058	AndExpression	( x >= llx && x <= urx ) && ( y >= lly && y <= ury )		8187029	0		&&			
ANR	8188059	AndExpression	x >= llx && x <= urx		8187029	0		&&			
ANR	8188060	RelationalExpression	x >= llx		8187029	0		>=			
ANR	8188061	Identifier	x		8187029	0					
ANR	8188062	Identifier	llx		8187029	1					
ANR	8188063	RelationalExpression	x <= urx		8187029	1		<=			
ANR	8188064	Identifier	x		8187029	0					
ANR	8188065	Identifier	urx		8187029	1					
ANR	8188066	AndExpression	y >= lly && y <= ury		8187029	1		&&			
ANR	8188067	RelationalExpression	y >= lly		8187029	0		>=			
ANR	8188068	Identifier	y		8187029	0					
ANR	8188069	Identifier	lly		8187029	1					
ANR	8188070	RelationalExpression	y <= ury		8187029	1		<=			
ANR	8188071	Identifier	y		8187029	0					
ANR	8188072	Identifier	ury		8187029	1					
ANR	8188073	CompoundStatement		184:70:7514:7514	8187029	1					
ANR	8188074	ExpressionStatement	* xScan ++ = x	1445:20:51270:51282	8187029	0	True				
ANR	8188075	AssignmentExpression	* xScan ++ = x		8187029	0		=			
ANR	8188076	UnaryOperationExpression	* xScan ++		8187029	0					
ANR	8188077	UnaryOperator	*		8187029	0					
ANR	8188078	PostIncDecOperationExpression	xScan ++		8187029	1					
ANR	8188079	Identifier	xScan		8187029	0					
ANR	8188080	IncDec	++		8187029	1					
ANR	8188081	Identifier	x		8187029	1					
ANR	8188082	ExpressionStatement	* yScan ++ = y	1446:20:51304:51316	8187029	1	True				
ANR	8188083	AssignmentExpression	* yScan ++ = y		8187029	0		=			
ANR	8188084	UnaryOperationExpression	* yScan ++		8187029	0					
ANR	8188085	UnaryOperator	*		8187029	0					
ANR	8188086	PostIncDecOperationExpression	yScan ++		8187029	1					
ANR	8188087	Identifier	yScan		8187029	0					
ANR	8188088	IncDec	++		8187029	1					
ANR	8188089	Identifier	y		8187029	1					
ANR	8188090	IfStatement	if ( num_aux_points != 0xffff )		8187029	31					
ANR	8188091	Condition	num_aux_points != 0xffff	1450:16:51473:51496	8187029	0	True				
ANR	8188092	EqualityExpression	num_aux_points != 0xffff		8187029	0		!=			
ANR	8188093	Identifier	num_aux_points		8187029	0					
ANR	8188094	PrimaryExpression	0xffff		8187029	1					
ANR	8188095	ExpressionStatement	xLast = xScan	1451:16:51515:51528	8187029	1	True				
ANR	8188096	AssignmentExpression	xLast = xScan		8187029	0		=			
ANR	8188097	Identifier	xLast		8187029	0					
ANR	8188098	Identifier	xScan		8187029	1					
ANR	8188099	ElseStatement	else		8187029	0					
ANR	8188100	ExpressionStatement	xLast = xScan - 1	1453:16:51563:51580	8187029	0	True				
ANR	8188101	AssignmentExpression	xLast = xScan - 1		8187029	0		=			
ANR	8188102	Identifier	xLast		8187029	0					
ANR	8188103	AdditiveExpression	xScan - 1		8187029	1		-			
ANR	8188104	Identifier	xScan		8187029	0					
ANR	8188105	PrimaryExpression	1		8187029	1					
ANR	8188106	ExpressionStatement	xScan = xBuffer	1455:12:51629:51644	8187029	32	True				
ANR	8188107	AssignmentExpression	xScan = xBuffer		8187029	0		=			
ANR	8188108	Identifier	xScan		8187029	0					
ANR	8188109	Identifier	xBuffer		8187029	1					
ANR	8188110	ExpressionStatement	yScan = yBuffer	1456:12:51658:51673	8187029	33	True				
ANR	8188111	AssignmentExpression	yScan = yBuffer		8187029	0		=			
ANR	8188112	Identifier	yScan		8187029	0					
ANR	8188113	Identifier	yBuffer		8187029	1					
ANR	8188114	IfStatement	if ( xLast > xBuffer )		8187029	34					
ANR	8188115	Condition	xLast > xBuffer	1457:16:51691:51705	8187029	0	True				
ANR	8188116	RelationalExpression	xLast > xBuffer		8187029	0		>			
ANR	8188117	Identifier	xLast		8187029	0					
ANR	8188118	Identifier	xBuffer		8187029	1					
ANR	8188119	CompoundStatement		197:33:8006:8006	8187029	1					
ANR	8188120	ExpressionStatement	"code = gs_moveto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"	1458:16:51726:51787	8187029	0	True				
ANR	8188121	AssignmentExpression	"code = gs_moveto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8187029	0		=			
ANR	8188122	Identifier	code		8187029	0					
ANR	8188123	CallExpression	"gs_moveto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8187029	1					
ANR	8188124	Callee	gs_moveto		8187029	0					
ANR	8188125	Identifier	gs_moveto		8187029	0					
ANR	8188126	ArgumentList	pgs		8187029	1					
ANR	8188127	Argument	pgs		8187029	0					
ANR	8188128	Identifier	pgs		8187029	0					
ANR	8188129	Argument	( double ) * xScan ++		8187029	1					
ANR	8188130	CastExpression	( double ) * xScan ++		8187029	0					
ANR	8188131	CastTarget	double		8187029	0					
ANR	8188132	UnaryOperationExpression	* xScan ++		8187029	1					
ANR	8188133	UnaryOperator	*		8187029	0					
ANR	8188134	PostIncDecOperationExpression	xScan ++		8187029	1					
ANR	8188135	Identifier	xScan		8187029	0					
ANR	8188136	IncDec	++		8187029	1					
ANR	8188137	Argument	( double ) * yScan ++		8187029	2					
ANR	8188138	CastExpression	( double ) * yScan ++		8187029	0					
ANR	8188139	CastTarget	double		8187029	0					
ANR	8188140	UnaryOperationExpression	* yScan ++		8187029	1					
ANR	8188141	UnaryOperator	*		8187029	0					
ANR	8188142	PostIncDecOperationExpression	yScan ++		8187029	1					
ANR	8188143	Identifier	yScan		8187029	0					
ANR	8188144	IncDec	++		8187029	1					
ANR	8188145	IfStatement	if ( code < 0 )		8187029	1					
ANR	8188146	Condition	code < 0	1459:20:51809:51816	8187029	0	True				
ANR	8188147	RelationalExpression	code < 0		8187029	0		<			
ANR	8188148	Identifier	code		8187029	0					
ANR	8188149	PrimaryExpression	0		8187029	1					
ANR	8188150	GotoStatement	goto cleanup ;	1460:20:51839:51851	8187029	1	True				
ANR	8188151	Identifier	cleanup		8187029	0					
ANR	8188152	ForStatement	for ( ; xScan < xLast ; )		8187029	35					
ANR	8188153	Condition	xScan < xLast	1463:19:51887:51899	8187029	0	True				
ANR	8188154	RelationalExpression	xScan < xLast		8187029	0		<			
ANR	8188155	Identifier	xScan		8187029	0					
ANR	8188156	Identifier	xLast		8187029	1					
ANR	8188157	CompoundStatement		203:35:8201:8201	8187029	1					
ANR	8188158	ExpressionStatement	"code = gs_lineto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"	1464:16:51921:51982	8187029	0	True				
ANR	8188159	AssignmentExpression	"code = gs_lineto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8187029	0		=			
ANR	8188160	Identifier	code		8187029	0					
ANR	8188161	CallExpression	"gs_lineto ( pgs , ( double ) * xScan ++ , ( double ) * yScan ++ )"		8187029	1					
ANR	8188162	Callee	gs_lineto		8187029	0					
ANR	8188163	Identifier	gs_lineto		8187029	0					
ANR	8188164	ArgumentList	pgs		8187029	1					
ANR	8188165	Argument	pgs		8187029	0					
ANR	8188166	Identifier	pgs		8187029	0					
ANR	8188167	Argument	( double ) * xScan ++		8187029	1					
ANR	8188168	CastExpression	( double ) * xScan ++		8187029	0					
ANR	8188169	CastTarget	double		8187029	0					
ANR	8188170	UnaryOperationExpression	* xScan ++		8187029	1					
ANR	8188171	UnaryOperator	*		8187029	0					
ANR	8188172	PostIncDecOperationExpression	xScan ++		8187029	1					
ANR	8188173	Identifier	xScan		8187029	0					
ANR	8188174	IncDec	++		8187029	1					
ANR	8188175	Argument	( double ) * yScan ++		8187029	2					
ANR	8188176	CastExpression	( double ) * yScan ++		8187029	0					
ANR	8188177	CastTarget	double		8187029	0					
ANR	8188178	UnaryOperationExpression	* yScan ++		8187029	1					
ANR	8188179	UnaryOperator	*		8187029	0					
ANR	8188180	PostIncDecOperationExpression	yScan ++		8187029	1					
ANR	8188181	Identifier	yScan		8187029	0					
ANR	8188182	IncDec	++		8187029	1					
ANR	8188183	IfStatement	if ( code < 0 )		8187029	1					
ANR	8188184	Condition	code < 0	1465:20:52004:52011	8187029	0	True				
ANR	8188185	RelationalExpression	code < 0		8187029	0		<			
ANR	8188186	Identifier	code		8187029	0					
ANR	8188187	PrimaryExpression	0		8187029	1					
ANR	8188188	GotoStatement	goto cleanup ;	1466:20:52034:52046	8187029	1	True				
ANR	8188189	Identifier	cleanup		8187029	0					
ANR	8188190	ExpressionStatement	code = gs_closepath ( pgs )	1469:12:52120:52144	8187029	36	True				
ANR	8188191	AssignmentExpression	code = gs_closepath ( pgs )		8187029	0		=			
ANR	8188192	Identifier	code		8187029	0					
ANR	8188193	CallExpression	gs_closepath ( pgs )		8187029	1					
ANR	8188194	Callee	gs_closepath		8187029	0					
ANR	8188195	Identifier	gs_closepath		8187029	0					
ANR	8188196	ArgumentList	pgs		8187029	1					
ANR	8188197	Argument	pgs		8187029	0					
ANR	8188198	Identifier	pgs		8187029	0					
ANR	8188199	IfStatement	if ( code < 0 )		8187029	37					
ANR	8188200	Condition	code < 0	1470:16:52162:52169	8187029	0	True				
ANR	8188201	RelationalExpression	code < 0		8187029	0		<			
ANR	8188202	Identifier	code		8187029	0					
ANR	8188203	PrimaryExpression	0		8187029	1					
ANR	8188204	BreakStatement	break ;	1471:16:52188:52193	8187029	1	True				
ANR	8188205	Label	cleanup :	1475:6:52255:52262	8187029	10	True				
ANR	8188206	Identifier	cleanup		8187029	0					
ANR	8188207	ExpressionStatement	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"	1476:8:52272:52326	8187029	11	True				
ANR	8188208	CallExpression	"gs_free_object ( pgs -> memory , xBuffer , ""x point buffer"" )"		8187029	0					
ANR	8188209	Callee	gs_free_object		8187029	0					
ANR	8188210	Identifier	gs_free_object		8187029	0					
ANR	8188211	ArgumentList	pgs -> memory		8187029	1					
ANR	8188212	Argument	pgs -> memory		8187029	0					
ANR	8188213	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8188214	Identifier	pgs		8187029	0					
ANR	8188215	Identifier	memory		8187029	1					
ANR	8188216	Argument	xBuffer		8187029	1					
ANR	8188217	Identifier	xBuffer		8187029	0					
ANR	8188218	Argument	"""x point buffer"""		8187029	2					
ANR	8188219	PrimaryExpression	"""x point buffer"""		8187029	0					
ANR	8188220	ExpressionStatement	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"	1477:8:52336:52390	8187029	12	True				
ANR	8188221	CallExpression	"gs_free_object ( pgs -> memory , yBuffer , ""y point buffer"" )"		8187029	0					
ANR	8188222	Callee	gs_free_object		8187029	0					
ANR	8188223	Identifier	gs_free_object		8187029	0					
ANR	8188224	ArgumentList	pgs -> memory		8187029	1					
ANR	8188225	Argument	pgs -> memory		8187029	0					
ANR	8188226	PtrMemberAccess	pgs -> memory		8187029	0					
ANR	8188227	Identifier	pgs		8187029	0					
ANR	8188228	Identifier	memory		8187029	1					
ANR	8188229	Argument	yBuffer		8187029	1					
ANR	8188230	Identifier	yBuffer		8187029	0					
ANR	8188231	Argument	"""y point buffer"""		8187029	2					
ANR	8188232	PrimaryExpression	"""y point buffer"""		8187029	0					
ANR	8188233	ReturnStatement	return code ;	1479:4:52451:52462	8187029	12	True				
ANR	8188234	Identifier	code		8187029	0					
ANR	8188235	ReturnType	static int		8187029	1					
ANR	8188236	Identifier	pl_intelli_show_char		8187029	2					
ANR	8188237	ParameterList	"gs_gstate * pgs , const pl_font_t * plfont , gs_glyph glyph"		8187029	3					
ANR	8188238	Parameter	gs_gstate * pgs	1260:21:43642:43656	8187029	0	True				
ANR	8188239	ParameterType	gs_gstate *		8187029	0					
ANR	8188240	Identifier	pgs		8187029	1					
ANR	8188241	Parameter	const pl_font_t * plfont	1260:38:43659:43682	8187029	1	True				
ANR	8188242	ParameterType	const pl_font_t *		8187029	0					
ANR	8188243	Identifier	plfont		8187029	1					
ANR	8188244	Parameter	gs_glyph glyph	1260:64:43685:43698	8187029	2	True				
ANR	8188245	ParameterType	gs_glyph		8187029	0					
ANR	8188246	Identifier	glyph		8187029	1					
ANR	8188247	CFGEntryNode	ENTRY		8187029		True				
ANR	8188248	CFGExitNode	EXIT		8187029		True				
ANR	8188249	Symbol	outlines		8187029						
ANR	8188250	Symbol	xyc		8187029						
ANR	8188251	Symbol	* pgs		8187029						
ANR	8188252	Symbol	* ( xScan - 1 )		8187029						
ANR	8188253	Symbol	plfont		8187029						
ANR	8188254	Symbol	yBuffer		8187029						
ANR	8188255	Symbol	y_offset		8187029						
ANR	8188256	Symbol	pl_intelli_show_char		8187029						
ANR	8188257	Symbol	x_offset		8187029						
ANR	8188258	Symbol	xLast		8187029						
ANR	8188259	Symbol	* yScan		8187029						
ANR	8188260	Symbol	dx		8187029						
ANR	8188261	Symbol	* cdata		8187029						
ANR	8188262	Symbol	* metrics		8187029						
ANR	8188263	Symbol	dy		8187029						
ANR	8188264	Symbol	font_glyph -> data_len		8187029						
ANR	8188265	Symbol	pl_get_int16		8187029						
ANR	8188266	Symbol	xAux		8187029						
ANR	8188267	Symbol	save_ctm		8187029						
ANR	8188268	Symbol	NULL		8187029						
ANR	8188269	Symbol	num_aux_points		8187029						
ANR	8188270	Symbol	* ( yScan - 1 )		8187029						
ANR	8188271	Symbol	gs_resize_object		8187029						
ANR	8188272	Symbol	* metrics -> charSymbolBox		8187029						
ANR	8188273	Symbol	* x_coords		8187029						
ANR	8188274	Symbol	num_points		8187029						
ANR	8188275	Symbol	cdata		8187029						
ANR	8188276	Symbol	edata		8187029						
ANR	8188277	Symbol	yAux		8187029						
ANR	8188278	Symbol	cdata_end		8187029						
ANR	8188279	Symbol	metrics -> charSymbolBox		8187029						
ANR	8188280	Symbol	* y_aux_coords ++		8187029						
ANR	8188281	Symbol	y_coords		8187029						
ANR	8188282	Symbol	metrics		8187029						
ANR	8188283	Symbol	x_aux_coords_last		8187029						
ANR	8188284	Symbol	* xScan		8187029						
ANR	8188285	Symbol	font_glyph		8187029						
ANR	8188286	Symbol	code		8187029						
ANR	8188287	Symbol	* xScan ++		8187029						
ANR	8188288	Symbol	gs_lineto		8187029						
ANR	8188289	Symbol	pl_font_lookup_glyph		8187029						
ANR	8188290	Symbol	yScan		8187029						
ANR	8188291	Symbol	* yScan ++		8187029						
ANR	8188292	Symbol	cname		8187029						
ANR	8188293	Symbol	* font_glyph		8187029						
ANR	8188294	Symbol	gs_closepath		8187029						
ANR	8188295	Symbol	num_loops		8187029						
ANR	8188296	Symbol	gs_moveto		8187029						
ANR	8188297	Symbol	y_aux_coords		8187029						
ANR	8188298	Symbol	* x_aux_coords ++		8187029						
ANR	8188299	Symbol	xScan		8187029						
ANR	8188300	Symbol	x_aux_coords		8187029						
ANR	8188301	Symbol	* * metrics		8187029						
ANR	8188302	Symbol	pointBufferSize		8187029						
ANR	8188303	Symbol	gs_error_invalidfont		8187029						
ANR	8188304	Symbol	pgs		8187029						
ANR	8188305	Symbol	pgs -> memory		8187029						
ANR	8188306	Symbol	pl_get_uint16		8187029						
ANR	8188307	Symbol	gs_alloc_bytes		8187029						
ANR	8188308	Symbol	* y_coords		8187029						
ANR	8188309	Symbol	& save_ctm		8187029						
ANR	8188310	Symbol	sz		8187029						
ANR	8188311	Symbol	i		8187029						
ANR	8188312	Symbol	font_glyph -> data		8187029						
ANR	8188313	Symbol	gs_error_VMerror		8187029						
ANR	8188314	Symbol	glyph		8187029						
ANR	8188315	Symbol	gs_note_error		8187029						
ANR	8188316	Symbol	xBuffer		8187029						
ANR	8188317	Symbol	x_coords		8187029						
ANR	8188318	Symbol	lly		8187029						
ANR	8188319	Symbol	x		8187029						
ANR	8188320	Symbol	llx		8187029						
ANR	8188321	Symbol	y		8187029						
ANR	8188322	Symbol	urx		8187029						
ANR	8188323	Symbol	x_coords_last		8187029						
ANR	8188324	Symbol	ury		8187029						
ANR	8188325	Function	pl_intelli_char_width	1483:0:52532:53688							
ANR	8188326	FunctionDef	"pl_intelli_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8188325	0					
ANR	8188327	CompoundStatement		1486:0:52668:53688	8188325	0					
ANR	8188328	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	1487:4:52674:52739	8188325	0	True				
ANR	8188329	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188325	0					
ANR	8188330	IdentifierDeclType	const byte *		8188325	0					
ANR	8188331	Identifier	cdata		8188325	1					
ANR	8188332	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188325	2		=			
ANR	8188333	Identifier	cdata		8188325	0					
ANR	8188334	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188325	1					
ANR	8188335	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8188325	0					
ANR	8188336	Callee	pl_font_lookup_glyph		8188325	0					
ANR	8188337	Identifier	pl_font_lookup_glyph		8188325	0					
ANR	8188338	ArgumentList	plfont		8188325	1					
ANR	8188339	Argument	plfont		8188325	0					
ANR	8188340	Identifier	plfont		8188325	0					
ANR	8188341	Argument	char_code		8188325	1					
ANR	8188342	Identifier	char_code		8188325	0					
ANR	8188343	Identifier	data		8188325	1					
ANR	8188344	IdentifierDeclStatement	int wx ;	1488:4:52745:52751	8188325	1	True				
ANR	8188345	IdentifierDecl	wx		8188325	0					
ANR	8188346	IdentifierDeclType	int		8188325	0					
ANR	8188347	Identifier	wx		8188325	1					
ANR	8188348	IfStatement	if ( ! pwidth )		8188325	2					
ANR	8188349	Condition	! pwidth	1490:8:52762:52768	8188325	0	True				
ANR	8188350	UnaryOperationExpression	! pwidth		8188325	0					
ANR	8188351	UnaryOperator	!		8188325	0					
ANR	8188352	Identifier	pwidth		8188325	1					
ANR	8188353	ReturnStatement	return ( cdata == 0 ? 1 : 0 ) ;	1491:8:52779:52806	8188325	1	True				
ANR	8188354	ConditionalExpression	cdata == 0 ? 1 : 0		8188325	0					
ANR	8188355	Condition	cdata == 0		8188325	0					
ANR	8188356	EqualityExpression	cdata == 0		8188325	0		==			
ANR	8188357	Identifier	cdata		8188325	0					
ANR	8188358	PrimaryExpression	0		8188325	1					
ANR	8188359	PrimaryExpression	1		8188325	1					
ANR	8188360	PrimaryExpression	0		8188325	2					
ANR	8188361	IfStatement	if ( cdata == 0 )		8188325	3					
ANR	8188362	Condition	cdata == 0	1492:8:52816:52825	8188325	0	True				
ANR	8188363	EqualityExpression	cdata == 0		8188325	0		==			
ANR	8188364	Identifier	cdata		8188325	0					
ANR	8188365	PrimaryExpression	0		8188325	1					
ANR	8188366	CompoundStatement		7:20:159:159	8188325	1					
ANR	8188367	ExpressionStatement	pwidth -> x = pwidth -> y = 0	1493:8:52838:52863	8188325	0	True				
ANR	8188368	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8188325	0		=			
ANR	8188369	PtrMemberAccess	pwidth -> x		8188325	0					
ANR	8188370	Identifier	pwidth		8188325	0					
ANR	8188371	Identifier	x		8188325	1					
ANR	8188372	AssignmentExpression	pwidth -> y = 0		8188325	1		=			
ANR	8188373	PtrMemberAccess	pwidth -> y		8188325	0					
ANR	8188374	Identifier	pwidth		8188325	0					
ANR	8188375	Identifier	y		8188325	1					
ANR	8188376	PrimaryExpression	0		8188325	1					
ANR	8188377	ReturnStatement	return 1 ;	1494:8:52873:52881	8188325	1	True				
ANR	8188378	PrimaryExpression	1		8188325	0					
ANR	8188379	SwitchStatement	switch ( cdata [ 3 ] )		8188325	4					
ANR	8188380	Condition	cdata [ 3 ]	1496:12:52901:52908	8188325	0	True				
ANR	8188381	ArrayIndexing	cdata [ 3 ]		8188325	0					
ANR	8188382	Identifier	cdata		8188325	0					
ANR	8188383	PrimaryExpression	3		8188325	1					
ANR	8188384	CompoundStatement		11:22:242:242	8188325	1					
ANR	8188385	Label	case 3 :	1497:8:52921:52927	8188325	0	True				
ANR	8188386	ExpressionStatement	cdata += 4	1498:12:52985:52995	8188325	1	True				
ANR	8188387	AssignmentExpression	cdata += 4		8188325	0		+=			
ANR	8188388	Identifier	cdata		8188325	0					
ANR	8188389	PrimaryExpression	4		8188325	1					
ANR	8188390	CompoundStatement		15:16:398:562	8188325	2					
ANR	8188391	IdentifierDeclStatement	const intelli_metrics_t * metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) ) ;	1500:16:53067:53231	8188325	0	True				
ANR	8188392	IdentifierDecl	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8188325	0					
ANR	8188393	IdentifierDeclType	const intelli_metrics_t *		8188325	0					
ANR	8188394	Identifier	metrics		8188325	1					
ANR	8188395	AssignmentExpression	* metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8188325	2		=			
ANR	8188396	Identifier	metrics		8188325	0					
ANR	8188397	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8188325	1					
ANR	8188398	CastTarget	const intelli_metrics_t *		8188325	0					
ANR	8188399	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8188325	1		+			
ANR	8188400	Identifier	cdata		8188325	0					
ANR	8188401	CallExpression	pl_get_uint16 ( cdata + 2 )		8188325	1					
ANR	8188402	Callee	pl_get_uint16		8188325	0					
ANR	8188403	Identifier	pl_get_uint16		8188325	0					
ANR	8188404	ArgumentList	cdata + 2		8188325	1					
ANR	8188405	Argument	cdata + 2		8188325	0					
ANR	8188406	AdditiveExpression	cdata + 2		8188325	0		+			
ANR	8188407	Identifier	cdata		8188325	0					
ANR	8188408	PrimaryExpression	2		8188325	1					
ANR	8188409	ExpressionStatement	wx = pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )	1503:16:53249:53363	8188325	1	True				
ANR	8188410	AssignmentExpression	wx = pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8188325	0		=			
ANR	8188411	Identifier	wx		8188325	0					
ANR	8188412	AdditiveExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] ) - pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8188325	1		-			
ANR	8188413	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 2 ] )		8188325	0					
ANR	8188414	Callee	pl_get_int16		8188325	0					
ANR	8188415	Identifier	pl_get_int16		8188325	0					
ANR	8188416	ArgumentList	metrics -> charEscapementBox [ 2 ]		8188325	1					
ANR	8188417	Argument	metrics -> charEscapementBox [ 2 ]		8188325	0					
ANR	8188418	ArrayIndexing	metrics -> charEscapementBox [ 2 ]		8188325	0					
ANR	8188419	PtrMemberAccess	metrics -> charEscapementBox		8188325	0					
ANR	8188420	Identifier	metrics		8188325	0					
ANR	8188421	Identifier	charEscapementBox		8188325	1					
ANR	8188422	PrimaryExpression	2		8188325	1					
ANR	8188423	CallExpression	pl_get_int16 ( metrics -> charEscapementBox [ 0 ] )		8188325	1					
ANR	8188424	Callee	pl_get_int16		8188325	0					
ANR	8188425	Identifier	pl_get_int16		8188325	0					
ANR	8188426	ArgumentList	metrics -> charEscapementBox [ 0 ]		8188325	1					
ANR	8188427	Argument	metrics -> charEscapementBox [ 0 ]		8188325	0					
ANR	8188428	ArrayIndexing	metrics -> charEscapementBox [ 0 ]		8188325	0					
ANR	8188429	PtrMemberAccess	metrics -> charEscapementBox		8188325	0					
ANR	8188430	Identifier	metrics		8188325	0					
ANR	8188431	Identifier	charEscapementBox		8188325	1					
ANR	8188432	PrimaryExpression	0		8188325	1					
ANR	8188433	BreakStatement	break ;	1506:12:53391:53396	8188325	3	True				
ANR	8188434	Label	case 4 :	1507:8:53406:53412	8188325	4	True				
ANR	8188435	ExpressionStatement	wx = pl_get_int16 ( cdata + 4 )	1508:12:53466:53494	8188325	5	True				
ANR	8188436	AssignmentExpression	wx = pl_get_int16 ( cdata + 4 )		8188325	0		=			
ANR	8188437	Identifier	wx		8188325	0					
ANR	8188438	CallExpression	pl_get_int16 ( cdata + 4 )		8188325	1					
ANR	8188439	Callee	pl_get_int16		8188325	0					
ANR	8188440	Identifier	pl_get_int16		8188325	0					
ANR	8188441	ArgumentList	cdata + 4		8188325	1					
ANR	8188442	Argument	cdata + 4		8188325	0					
ANR	8188443	AdditiveExpression	cdata + 4		8188325	0		+			
ANR	8188444	Identifier	cdata		8188325	0					
ANR	8188445	PrimaryExpression	4		8188325	1					
ANR	8188446	BreakStatement	break ;	1509:12:53508:53513	8188325	6	True				
ANR	8188447	Label	default :	1510:8:53523:53530	8188325	7	True				
ANR	8188448	Identifier	default		8188325	0					
ANR	8188449	ExpressionStatement	pwidth -> x = pwidth -> y = 0	1511:12:53581:53606	8188325	8	True				
ANR	8188450	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8188325	0		=			
ANR	8188451	PtrMemberAccess	pwidth -> x		8188325	0					
ANR	8188452	Identifier	pwidth		8188325	0					
ANR	8188453	Identifier	x		8188325	1					
ANR	8188454	AssignmentExpression	pwidth -> y = 0		8188325	1		=			
ANR	8188455	PtrMemberAccess	pwidth -> y		8188325	0					
ANR	8188456	Identifier	pwidth		8188325	0					
ANR	8188457	Identifier	y		8188325	1					
ANR	8188458	PrimaryExpression	0		8188325	1					
ANR	8188459	ReturnStatement	return 0 ;	1512:12:53620:53628	8188325	9	True				
ANR	8188460	PrimaryExpression	0		8188325	0					
ANR	8188461	ExpressionStatement	pwidth -> x = ( double ) wx / 8782.0	1514:4:53640:53672	8188325	5	True				
ANR	8188462	AssignmentExpression	pwidth -> x = ( double ) wx / 8782.0		8188325	0		=			
ANR	8188463	PtrMemberAccess	pwidth -> x		8188325	0					
ANR	8188464	Identifier	pwidth		8188325	0					
ANR	8188465	Identifier	x		8188325	1					
ANR	8188466	MultiplicativeExpression	( double ) wx / 8782.0		8188325	1		/			
ANR	8188467	CastExpression	( double ) wx		8188325	0					
ANR	8188468	CastTarget	double		8188325	0					
ANR	8188469	Identifier	wx		8188325	1					
ANR	8188470	PrimaryExpression	8782.0		8188325	1					
ANR	8188471	ReturnStatement	return 0 ;	1515:4:53678:53686	8188325	6	True				
ANR	8188472	PrimaryExpression	0		8188325	0					
ANR	8188473	ReturnType	static int		8188325	1					
ANR	8188474	Identifier	pl_intelli_char_width		8188325	2					
ANR	8188475	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8188325	3					
ANR	8188476	Parameter	const pl_font_t * plfont	1484:22:52565:52588	8188325	0	True				
ANR	8188477	ParameterType	const pl_font_t *		8188325	0					
ANR	8188478	Identifier	plfont		8188325	1					
ANR	8188479	Parameter	const void * pgs	1484:48:52591:52605	8188325	1	True				
ANR	8188480	ParameterType	const void *		8188325	0					
ANR	8188481	Identifier	pgs		8188325	1					
ANR	8188482	Parameter	gs_char char_code	1485:22:52630:52646	8188325	2	True				
ANR	8188483	ParameterType	gs_char		8188325	0					
ANR	8188484	Identifier	char_code		8188325	1					
ANR	8188485	Parameter	gs_point * pwidth	1485:41:52649:52665	8188325	3	True				
ANR	8188486	ParameterType	gs_point *		8188325	0					
ANR	8188487	Identifier	pwidth		8188325	1					
ANR	8188488	CFGEntryNode	ENTRY		8188325		True				
ANR	8188489	CFGExitNode	EXIT		8188325		True				
ANR	8188490	Symbol	wx		8188325						
ANR	8188491	Symbol	pl_get_uint16		8188325						
ANR	8188492	Symbol	pl_font_lookup_glyph		8188325						
ANR	8188493	Symbol	pwidth -> y		8188325						
ANR	8188494	Symbol	char_code		8188325						
ANR	8188495	Symbol	pwidth		8188325						
ANR	8188496	Symbol	plfont		8188325						
ANR	8188497	Symbol	* pl_font_lookup_glyph		8188325						
ANR	8188498	Symbol	cdata		8188325						
ANR	8188499	Symbol	pwidth -> x		8188325						
ANR	8188500	Symbol	metrics -> charEscapementBox		8188325						
ANR	8188501	Symbol	* cdata		8188325						
ANR	8188502	Symbol	* metrics		8188325						
ANR	8188503	Symbol	pl_get_int16		8188325						
ANR	8188504	Symbol	* pwidth		8188325						
ANR	8188505	Symbol	metrics		8188325						
ANR	8188506	Symbol	* * metrics		8188325						
ANR	8188507	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188325						
ANR	8188508	Symbol	pgs		8188325						
ANR	8188509	Symbol	* metrics -> charEscapementBox		8188325						
ANR	8188510	Function	pl_intelli_char_metrics	1518:0:53691:54704							
ANR	8188511	FunctionDef	"pl_intelli_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8188510	0					
ANR	8188512	CompoundStatement		1521:0:53830:54704	8188510	0					
ANR	8188513	IdentifierDeclStatement	gs_point width ;	1522:4:53836:53850	8188510	0	True				
ANR	8188514	IdentifierDecl	width		8188510	0					
ANR	8188515	IdentifierDeclType	gs_point		8188510	0					
ANR	8188516	Identifier	width		8188510	1					
ANR	8188517	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data ;"	1523:4:53856:53921	8188510	1	True				
ANR	8188518	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188510	0					
ANR	8188519	IdentifierDeclType	const byte *		8188510	0					
ANR	8188520	Identifier	cdata		8188510	1					
ANR	8188521	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188510	2		=			
ANR	8188522	Identifier	cdata		8188510	0					
ANR	8188523	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188510	1					
ANR	8188524	CallExpression	"pl_font_lookup_glyph ( plfont , char_code )"		8188510	0					
ANR	8188525	Callee	pl_font_lookup_glyph		8188510	0					
ANR	8188526	Identifier	pl_font_lookup_glyph		8188510	0					
ANR	8188527	ArgumentList	plfont		8188510	1					
ANR	8188528	Argument	plfont		8188510	0					
ANR	8188529	Identifier	plfont		8188510	0					
ANR	8188530	Argument	char_code		8188510	1					
ANR	8188531	Identifier	char_code		8188510	0					
ANR	8188532	Identifier	data		8188510	1					
ANR	8188533	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0	1525:4:53928:53981	8188510	2	True				
ANR	8188534	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8188510	0		=			
ANR	8188535	ArrayIndexing	metrics [ 0 ]		8188510	0					
ANR	8188536	Identifier	metrics		8188510	0					
ANR	8188537	PrimaryExpression	0		8188510	1					
ANR	8188538	AssignmentExpression	metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8188510	1		=			
ANR	8188539	ArrayIndexing	metrics [ 1 ]		8188510	0					
ANR	8188540	Identifier	metrics		8188510	0					
ANR	8188541	PrimaryExpression	1		8188510	1					
ANR	8188542	AssignmentExpression	metrics [ 2 ] = metrics [ 3 ] = 0		8188510	1		=			
ANR	8188543	ArrayIndexing	metrics [ 2 ]		8188510	0					
ANR	8188544	Identifier	metrics		8188510	0					
ANR	8188545	PrimaryExpression	2		8188510	1					
ANR	8188546	AssignmentExpression	metrics [ 3 ] = 0		8188510	1		=			
ANR	8188547	ArrayIndexing	metrics [ 3 ]		8188510	0					
ANR	8188548	Identifier	metrics		8188510	0					
ANR	8188549	PrimaryExpression	3		8188510	1					
ANR	8188550	PrimaryExpression	0		8188510	1					
ANR	8188551	IfStatement	if ( cdata == 0 )		8188510	3					
ANR	8188552	Condition	cdata == 0	1527:8:53992:54001	8188510	0	True				
ANR	8188553	EqualityExpression	cdata == 0		8188510	0		==			
ANR	8188554	Identifier	cdata		8188510	0					
ANR	8188555	PrimaryExpression	0		8188510	1					
ANR	8188556	CompoundStatement		7:20:173:173	8188510	1					
ANR	8188557	ReturnStatement	return 1 ;	1528:8:54014:54022	8188510	0	True				
ANR	8188558	PrimaryExpression	1		8188510	0					
ANR	8188559	IfStatement	if ( cdata [ 3 ] == 4 )		8188510	4					
ANR	8188560	Condition	cdata [ 3 ] == 4	1532:8:54058:54070	8188510	0	True				
ANR	8188561	EqualityExpression	cdata [ 3 ] == 4		8188510	0		==			
ANR	8188562	ArrayIndexing	cdata [ 3 ]		8188510	0					
ANR	8188563	Identifier	cdata		8188510	0					
ANR	8188564	PrimaryExpression	3		8188510	1					
ANR	8188565	PrimaryExpression	4		8188510	1					
ANR	8188566	CompoundStatement		12:23:242:242	8188510	1					
ANR	8188567	ExpressionStatement	"dmprintf ( plfont -> pfont -> memory , ""warning compound intellifont metrics not supported"" )"	1533:8:54083:54185	8188510	0	True				
ANR	8188568	CallExpression	"dmprintf ( plfont -> pfont -> memory , ""warning compound intellifont metrics not supported"" )"		8188510	0					
ANR	8188569	Callee	dmprintf		8188510	0					
ANR	8188570	Identifier	dmprintf		8188510	0					
ANR	8188571	ArgumentList	plfont -> pfont -> memory		8188510	1					
ANR	8188572	Argument	plfont -> pfont -> memory		8188510	0					
ANR	8188573	PtrMemberAccess	plfont -> pfont -> memory		8188510	0					
ANR	8188574	PtrMemberAccess	plfont -> pfont		8188510	0					
ANR	8188575	Identifier	plfont		8188510	0					
ANR	8188576	Identifier	pfont		8188510	1					
ANR	8188577	Identifier	memory		8188510	1					
ANR	8188578	Argument	"""warning compound intellifont metrics not supported"""		8188510	1					
ANR	8188579	PrimaryExpression	"""warning compound intellifont metrics not supported"""		8188510	0					
ANR	8188580	ReturnStatement	return 0 ;	1535:8:54195:54203	8188510	1	True				
ANR	8188581	PrimaryExpression	0		8188510	0					
ANR	8188582	ExpressionStatement	cdata += 4	1538:4:54216:54226	8188510	5	True				
ANR	8188583	AssignmentExpression	cdata += 4		8188510	0		+=			
ANR	8188584	Identifier	cdata		8188510	0					
ANR	8188585	PrimaryExpression	4		8188510	1					
ANR	8188586	CompoundStatement		21:8:412:528	8188510	6					
ANR	8188587	IdentifierDeclStatement	const intelli_metrics_t * intelli_metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) ) ;	1541:8:54243:54359	8188510	0	True				
ANR	8188588	IdentifierDecl	* intelli_metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8188510	0					
ANR	8188589	IdentifierDeclType	const intelli_metrics_t *		8188510	0					
ANR	8188590	Identifier	intelli_metrics		8188510	1					
ANR	8188591	AssignmentExpression	* intelli_metrics = ( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8188510	2		=			
ANR	8188592	Identifier	intelli_metrics		8188510	0					
ANR	8188593	CastExpression	( const intelli_metrics_t * ) ( cdata + pl_get_uint16 ( cdata + 2 ) )		8188510	1					
ANR	8188594	CastTarget	const intelli_metrics_t *		8188510	0					
ANR	8188595	AdditiveExpression	cdata + pl_get_uint16 ( cdata + 2 )		8188510	1		+			
ANR	8188596	Identifier	cdata		8188510	0					
ANR	8188597	CallExpression	pl_get_uint16 ( cdata + 2 )		8188510	1					
ANR	8188598	Callee	pl_get_uint16		8188510	0					
ANR	8188599	Identifier	pl_get_uint16		8188510	0					
ANR	8188600	ArgumentList	cdata + 2		8188510	1					
ANR	8188601	Argument	cdata + 2		8188510	0					
ANR	8188602	AdditiveExpression	cdata + 2		8188510	0		+			
ANR	8188603	Identifier	cdata		8188510	0					
ANR	8188604	PrimaryExpression	2		8188510	1					
ANR	8188605	ExpressionStatement	metrics [ 0 ] = ( float ) pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )	1546:8:54488:54555	8188510	1	True				
ANR	8188606	AssignmentExpression	metrics [ 0 ] = ( float ) pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )		8188510	0		=			
ANR	8188607	ArrayIndexing	metrics [ 0 ]		8188510	0					
ANR	8188608	Identifier	metrics		8188510	0					
ANR	8188609	PrimaryExpression	0		8188510	1					
ANR	8188610	CastExpression	( float ) pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )		8188510	1					
ANR	8188611	CastTarget	float		8188510	0					
ANR	8188612	CallExpression	pl_get_int16 ( intelli_metrics -> charSymbolBox [ 0 ] )		8188510	1					
ANR	8188613	Callee	pl_get_int16		8188510	0					
ANR	8188614	Identifier	pl_get_int16		8188510	0					
ANR	8188615	ArgumentList	intelli_metrics -> charSymbolBox [ 0 ]		8188510	1					
ANR	8188616	Argument	intelli_metrics -> charSymbolBox [ 0 ]		8188510	0					
ANR	8188617	ArrayIndexing	intelli_metrics -> charSymbolBox [ 0 ]		8188510	0					
ANR	8188618	PtrMemberAccess	intelli_metrics -> charSymbolBox		8188510	0					
ANR	8188619	Identifier	intelli_metrics		8188510	0					
ANR	8188620	Identifier	charSymbolBox		8188510	1					
ANR	8188621	PrimaryExpression	0		8188510	1					
ANR	8188622	ExpressionStatement	metrics [ 0 ] /= 8782.0	1547:8:54565:54585	8188510	2	True				
ANR	8188623	AssignmentExpression	metrics [ 0 ] /= 8782.0		8188510	0		/=			
ANR	8188624	ArrayIndexing	metrics [ 0 ]		8188510	0					
ANR	8188625	Identifier	metrics		8188510	0					
ANR	8188626	PrimaryExpression	0		8188510	1					
ANR	8188627	PrimaryExpression	8782.0		8188510	1					
ANR	8188628	ExpressionStatement	"pl_intelli_char_width ( plfont , pgs , char_code , & width )"	1548:8:54595:54648	8188510	3	True				
ANR	8188629	CallExpression	"pl_intelli_char_width ( plfont , pgs , char_code , & width )"		8188510	0					
ANR	8188630	Callee	pl_intelli_char_width		8188510	0					
ANR	8188631	Identifier	pl_intelli_char_width		8188510	0					
ANR	8188632	ArgumentList	plfont		8188510	1					
ANR	8188633	Argument	plfont		8188510	0					
ANR	8188634	Identifier	plfont		8188510	0					
ANR	8188635	Argument	pgs		8188510	1					
ANR	8188636	Identifier	pgs		8188510	0					
ANR	8188637	Argument	char_code		8188510	2					
ANR	8188638	Identifier	char_code		8188510	0					
ANR	8188639	Argument	& width		8188510	3					
ANR	8188640	UnaryOperationExpression	& width		8188510	0					
ANR	8188641	UnaryOperator	&		8188510	0					
ANR	8188642	Identifier	width		8188510	1					
ANR	8188643	ExpressionStatement	metrics [ 2 ] = width . x	1549:8:54658:54678	8188510	4	True				
ANR	8188644	AssignmentExpression	metrics [ 2 ] = width . x		8188510	0		=			
ANR	8188645	ArrayIndexing	metrics [ 2 ]		8188510	0					
ANR	8188646	Identifier	metrics		8188510	0					
ANR	8188647	PrimaryExpression	2		8188510	1					
ANR	8188648	MemberAccess	width . x		8188510	1					
ANR	8188649	Identifier	width		8188510	0					
ANR	8188650	Identifier	x		8188510	1					
ANR	8188651	ReturnStatement	return 0 ;	1550:8:54688:54696	8188510	5	True				
ANR	8188652	PrimaryExpression	0		8188510	0					
ANR	8188653	ReturnType	static int		8188510	1					
ANR	8188654	Identifier	pl_intelli_char_metrics		8188510	2					
ANR	8188655	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8188510	3					
ANR	8188656	Parameter	const pl_font_t * plfont	1519:24:53726:53749	8188510	0	True				
ANR	8188657	ParameterType	const pl_font_t *		8188510	0					
ANR	8188658	Identifier	plfont		8188510	1					
ANR	8188659	Parameter	const void * pgs	1519:50:53752:53766	8188510	1	True				
ANR	8188660	ParameterType	const void *		8188510	0					
ANR	8188661	Identifier	pgs		8188510	1					
ANR	8188662	Parameter	gs_char char_code	1520:24:53793:53809	8188510	2	True				
ANR	8188663	ParameterType	gs_char		8188510	0					
ANR	8188664	Identifier	char_code		8188510	1					
ANR	8188665	Parameter	float metrics [ 4 ]	1520:43:53812:53827	8188510	3	True				
ANR	8188666	ParameterType	float [ 4 ]		8188510	0					
ANR	8188667	Identifier	metrics		8188510	1					
ANR	8188668	CFGEntryNode	ENTRY		8188510		True				
ANR	8188669	CFGExitNode	EXIT		8188510		True				
ANR	8188670	Symbol	* intelli_metrics -> charSymbolBox		8188510						
ANR	8188671	Symbol	* plfont -> pfont		8188510						
ANR	8188672	Symbol	pl_font_lookup_glyph		8188510						
ANR	8188673	Symbol	intelli_metrics		8188510						
ANR	8188674	Symbol	* intelli_metrics		8188510						
ANR	8188675	Symbol	& width		8188510						
ANR	8188676	Symbol	plfont		8188510						
ANR	8188677	Symbol	* metrics		8188510						
ANR	8188678	Symbol	* cdata		8188510						
ANR	8188679	Symbol	pl_get_int16		8188510						
ANR	8188680	Symbol	"pl_font_lookup_glyph ( plfont , char_code ) -> data"		8188510						
ANR	8188681	Symbol	pgs		8188510						
ANR	8188682	Symbol	pl_get_uint16		8188510						
ANR	8188683	Symbol	* * plfont		8188510						
ANR	8188684	Symbol	plfont -> pfont -> memory		8188510						
ANR	8188685	Symbol	char_code		8188510						
ANR	8188686	Symbol	* pl_font_lookup_glyph		8188510						
ANR	8188687	Symbol	cdata		8188510						
ANR	8188688	Symbol	* * intelli_metrics		8188510						
ANR	8188689	Symbol	plfont -> pfont		8188510						
ANR	8188690	Symbol	intelli_metrics -> charSymbolBox		8188510						
ANR	8188691	Symbol	width		8188510						
ANR	8188692	Symbol	* plfont		8188510						
ANR	8188693	Symbol	width . x		8188510						
ANR	8188694	Symbol	metrics		8188510						
ANR	8188695	Function	pl_intelli_build_char	1555:0:54752:55650							
ANR	8188696	FunctionDef	"pl_intelli_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph)"		8188695	0					
ANR	8188697	CompoundStatement		1558:0:54892:55650	8188695	0					
ANR	8188698	IdentifierDeclStatement	const pl_font_t * plfont = ( const pl_font_t * ) pfont -> client_data ;	1559:4:54898:54961	8188695	0	True				
ANR	8188699	IdentifierDecl	* plfont = ( const pl_font_t * ) pfont -> client_data		8188695	0					
ANR	8188700	IdentifierDeclType	const pl_font_t *		8188695	0					
ANR	8188701	Identifier	plfont		8188695	1					
ANR	8188702	AssignmentExpression	* plfont = ( const pl_font_t * ) pfont -> client_data		8188695	2		=			
ANR	8188703	Identifier	plfont		8188695	0					
ANR	8188704	CastExpression	( const pl_font_t * ) pfont -> client_data		8188695	1					
ANR	8188705	CastTarget	const pl_font_t *		8188695	0					
ANR	8188706	PtrMemberAccess	pfont -> client_data		8188695	1					
ANR	8188707	Identifier	pfont		8188695	0					
ANR	8188708	Identifier	client_data		8188695	1					
ANR	8188709	IdentifierDeclStatement	float wbox [ 6 ] ;	1560:4:54967:54980	8188695	1	True				
ANR	8188710	IdentifierDecl	wbox [ 6 ]		8188695	0					
ANR	8188711	IdentifierDeclType	float [ 6 ]		8188695	0					
ANR	8188712	Identifier	wbox		8188695	1					
ANR	8188713	PrimaryExpression	6		8188695	2					
ANR	8188714	IdentifierDeclStatement	int code ;	1561:4:54986:54994	8188695	2	True				
ANR	8188715	IdentifierDecl	code		8188695	0					
ANR	8188716	IdentifierDeclType	int		8188695	0					
ANR	8188717	Identifier	code		8188695	1					
ANR	8188718	ExpressionStatement	wbox [ 0 ] = wbox [ 1 ] = 0	1563:4:55001:55022	8188695	3	True				
ANR	8188719	AssignmentExpression	wbox [ 0 ] = wbox [ 1 ] = 0		8188695	0		=			
ANR	8188720	ArrayIndexing	wbox [ 0 ]		8188695	0					
ANR	8188721	Identifier	wbox		8188695	0					
ANR	8188722	PrimaryExpression	0		8188695	1					
ANR	8188723	AssignmentExpression	wbox [ 1 ] = 0		8188695	1		=			
ANR	8188724	ArrayIndexing	wbox [ 1 ]		8188695	0					
ANR	8188725	Identifier	wbox		8188695	0					
ANR	8188726	PrimaryExpression	1		8188695	1					
ANR	8188727	PrimaryExpression	0		8188695	1					
ANR	8188728	ExpressionStatement	wbox [ 2 ] = wbox [ 3 ] = 65536.0	1564:4:55028:55055	8188695	4	True				
ANR	8188729	AssignmentExpression	wbox [ 2 ] = wbox [ 3 ] = 65536.0		8188695	0		=			
ANR	8188730	ArrayIndexing	wbox [ 2 ]		8188695	0					
ANR	8188731	Identifier	wbox		8188695	0					
ANR	8188732	PrimaryExpression	2		8188695	1					
ANR	8188733	AssignmentExpression	wbox [ 3 ] = 65536.0		8188695	1		=			
ANR	8188734	ArrayIndexing	wbox [ 3 ]		8188695	0					
ANR	8188735	Identifier	wbox		8188695	0					
ANR	8188736	PrimaryExpression	3		8188695	1					
ANR	8188737	PrimaryExpression	65536.0		8188695	1					
ANR	8188738	ExpressionStatement	wbox [ 4 ] = wbox [ 5 ] = - 65536.0	1565:4:55061:55089	8188695	5	True				
ANR	8188739	AssignmentExpression	wbox [ 4 ] = wbox [ 5 ] = - 65536.0		8188695	0		=			
ANR	8188740	ArrayIndexing	wbox [ 4 ]		8188695	0					
ANR	8188741	Identifier	wbox		8188695	0					
ANR	8188742	PrimaryExpression	4		8188695	1					
ANR	8188743	AssignmentExpression	wbox [ 5 ] = - 65536.0		8188695	1		=			
ANR	8188744	ArrayIndexing	wbox [ 5 ]		8188695	0					
ANR	8188745	Identifier	wbox		8188695	0					
ANR	8188746	PrimaryExpression	5		8188695	1					
ANR	8188747	UnaryOperationExpression	- 65536.0		8188695	1					
ANR	8188748	UnaryOperator	-		8188695	0					
ANR	8188749	PrimaryExpression	65536.0		8188695	1					
ANR	8188750	IfStatement	"if ( ! pl_intelli_merge_box ( wbox , plfont , glyph ) )"		8188695	6					
ANR	8188751	Condition	"! pl_intelli_merge_box ( wbox , plfont , glyph )"	1566:8:55099:55140	8188695	0	True				
ANR	8188752	UnaryOperationExpression	"! pl_intelli_merge_box ( wbox , plfont , glyph )"		8188695	0					
ANR	8188753	UnaryOperator	!		8188695	0					
ANR	8188754	CallExpression	"pl_intelli_merge_box ( wbox , plfont , glyph )"		8188695	1					
ANR	8188755	Callee	pl_intelli_merge_box		8188695	0					
ANR	8188756	Identifier	pl_intelli_merge_box		8188695	0					
ANR	8188757	ArgumentList	wbox		8188695	1					
ANR	8188758	Argument	wbox		8188695	0					
ANR	8188759	Identifier	wbox		8188695	0					
ANR	8188760	Argument	plfont		8188695	1					
ANR	8188761	Identifier	plfont		8188695	0					
ANR	8188762	Argument	glyph		8188695	2					
ANR	8188763	Identifier	glyph		8188695	0					
ANR	8188764	CompoundStatement		9:52:250:250	8188695	1					
ANR	8188765	ExpressionStatement	wbox [ 2 ] = wbox [ 3 ] = wbox [ 4 ] = wbox [ 5 ] = 0	1567:8:55153:55194	8188695	0	True				
ANR	8188766	AssignmentExpression	wbox [ 2 ] = wbox [ 3 ] = wbox [ 4 ] = wbox [ 5 ] = 0		8188695	0		=			
ANR	8188767	ArrayIndexing	wbox [ 2 ]		8188695	0					
ANR	8188768	Identifier	wbox		8188695	0					
ANR	8188769	PrimaryExpression	2		8188695	1					
ANR	8188770	AssignmentExpression	wbox [ 3 ] = wbox [ 4 ] = wbox [ 5 ] = 0		8188695	1		=			
ANR	8188771	ArrayIndexing	wbox [ 3 ]		8188695	0					
ANR	8188772	Identifier	wbox		8188695	0					
ANR	8188773	PrimaryExpression	3		8188695	1					
ANR	8188774	AssignmentExpression	wbox [ 4 ] = wbox [ 5 ] = 0		8188695	1		=			
ANR	8188775	ArrayIndexing	wbox [ 4 ]		8188695	0					
ANR	8188776	Identifier	wbox		8188695	0					
ANR	8188777	PrimaryExpression	4		8188695	1					
ANR	8188778	AssignmentExpression	wbox [ 5 ] = 0		8188695	1		=			
ANR	8188779	ArrayIndexing	wbox [ 5 ]		8188695	0					
ANR	8188780	Identifier	wbox		8188695	0					
ANR	8188781	PrimaryExpression	5		8188695	1					
ANR	8188782	PrimaryExpression	0		8188695	1					
ANR	8188783	ExpressionStatement	"code = gs_setcachedevice ( penum , pgs , wbox )"	1568:8:55204:55246	8188695	1	True				
ANR	8188784	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , wbox )"		8188695	0		=			
ANR	8188785	Identifier	code		8188695	0					
ANR	8188786	CallExpression	"gs_setcachedevice ( penum , pgs , wbox )"		8188695	1					
ANR	8188787	Callee	gs_setcachedevice		8188695	0					
ANR	8188788	Identifier	gs_setcachedevice		8188695	0					
ANR	8188789	ArgumentList	penum		8188695	1					
ANR	8188790	Argument	penum		8188695	0					
ANR	8188791	Identifier	penum		8188695	0					
ANR	8188792	Argument	pgs		8188695	1					
ANR	8188793	Identifier	pgs		8188695	0					
ANR	8188794	Argument	wbox		8188695	2					
ANR	8188795	Identifier	wbox		8188695	0					
ANR	8188796	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1569:8:55256:55284	8188695	2	True				
ANR	8188797	ConditionalExpression	code < 0 ? code : 0		8188695	0					
ANR	8188798	Condition	code < 0		8188695	0					
ANR	8188799	RelationalExpression	code < 0		8188695	0		<			
ANR	8188800	Identifier	code		8188695	0					
ANR	8188801	PrimaryExpression	0		8188695	1					
ANR	8188802	Identifier	code		8188695	1					
ANR	8188803	PrimaryExpression	0		8188695	2					
ANR	8188804	ExpressionStatement	"code = gs_setcachedevice ( penum , pgs , wbox )"	1571:4:55296:55338	8188695	7	True				
ANR	8188805	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , wbox )"		8188695	0		=			
ANR	8188806	Identifier	code		8188695	0					
ANR	8188807	CallExpression	"gs_setcachedevice ( penum , pgs , wbox )"		8188695	1					
ANR	8188808	Callee	gs_setcachedevice		8188695	0					
ANR	8188809	Identifier	gs_setcachedevice		8188695	0					
ANR	8188810	ArgumentList	penum		8188695	1					
ANR	8188811	Argument	penum		8188695	0					
ANR	8188812	Identifier	penum		8188695	0					
ANR	8188813	Argument	pgs		8188695	1					
ANR	8188814	Identifier	pgs		8188695	0					
ANR	8188815	Argument	wbox		8188695	2					
ANR	8188816	Identifier	wbox		8188695	0					
ANR	8188817	IfStatement	if ( code < 0 )		8188695	8					
ANR	8188818	Condition	code < 0	1572:8:55348:55355	8188695	0	True				
ANR	8188819	RelationalExpression	code < 0		8188695	0		<			
ANR	8188820	Identifier	code		8188695	0					
ANR	8188821	PrimaryExpression	0		8188695	1					
ANR	8188822	ReturnStatement	return code ;	1573:8:55366:55377	8188695	1	True				
ANR	8188823	Identifier	code		8188695	0					
ANR	8188824	ExpressionStatement	"code = pl_intelli_show_char ( pgs , plfont , glyph )"	1574:4:55383:55430	8188695	9	True				
ANR	8188825	AssignmentExpression	"code = pl_intelli_show_char ( pgs , plfont , glyph )"		8188695	0		=			
ANR	8188826	Identifier	code		8188695	0					
ANR	8188827	CallExpression	"pl_intelli_show_char ( pgs , plfont , glyph )"		8188695	1					
ANR	8188828	Callee	pl_intelli_show_char		8188695	0					
ANR	8188829	Identifier	pl_intelli_show_char		8188695	0					
ANR	8188830	ArgumentList	pgs		8188695	1					
ANR	8188831	Argument	pgs		8188695	0					
ANR	8188832	Identifier	pgs		8188695	0					
ANR	8188833	Argument	plfont		8188695	1					
ANR	8188834	Identifier	plfont		8188695	0					
ANR	8188835	Argument	glyph		8188695	2					
ANR	8188836	Identifier	glyph		8188695	0					
ANR	8188837	IfStatement	if ( code < 0 )		8188695	10					
ANR	8188838	Condition	code < 0	1575:8:55440:55447	8188695	0	True				
ANR	8188839	RelationalExpression	code < 0		8188695	0		<			
ANR	8188840	Identifier	code		8188695	0					
ANR	8188841	PrimaryExpression	0		8188695	1					
ANR	8188842	ReturnStatement	return code ;	1576:8:55458:55469	8188695	1	True				
ANR	8188843	Identifier	code		8188695	0					
ANR	8188844	ExpressionStatement	code = gs_eofill ( pgs )	1579:4:55593:55614	8188695	11	True				
ANR	8188845	AssignmentExpression	code = gs_eofill ( pgs )		8188695	0		=			
ANR	8188846	Identifier	code		8188695	0					
ANR	8188847	CallExpression	gs_eofill ( pgs )		8188695	1					
ANR	8188848	Callee	gs_eofill		8188695	0					
ANR	8188849	Identifier	gs_eofill		8188695	0					
ANR	8188850	ArgumentList	pgs		8188695	1					
ANR	8188851	Argument	pgs		8188695	0					
ANR	8188852	Identifier	pgs		8188695	0					
ANR	8188853	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1580:4:55620:55648	8188695	12	True				
ANR	8188854	ConditionalExpression	code < 0 ? code : 0		8188695	0					
ANR	8188855	Condition	code < 0		8188695	0					
ANR	8188856	RelationalExpression	code < 0		8188695	0		<			
ANR	8188857	Identifier	code		8188695	0					
ANR	8188858	PrimaryExpression	0		8188695	1					
ANR	8188859	Identifier	code		8188695	1					
ANR	8188860	PrimaryExpression	0		8188695	2					
ANR	8188861	ReturnType	static int		8188695	1					
ANR	8188862	Identifier	pl_intelli_build_char		8188695	2					
ANR	8188863	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph"		8188695	3					
ANR	8188864	Parameter	gs_show_enum * penum	1556:22:54785:54804	8188695	0	True				
ANR	8188865	ParameterType	gs_show_enum *		8188695	0					
ANR	8188866	Identifier	penum		8188695	1					
ANR	8188867	Parameter	gs_gstate * pgs	1556:44:54807:54821	8188695	1	True				
ANR	8188868	ParameterType	gs_gstate *		8188695	0					
ANR	8188869	Identifier	pgs		8188695	1					
ANR	8188870	Parameter	gs_font * pfont	1556:61:54824:54838	8188695	2	True				
ANR	8188871	ParameterType	gs_font *		8188695	0					
ANR	8188872	Identifier	pfont		8188695	1					
ANR	8188873	Parameter	gs_char chr	1557:22:54863:54873	8188695	3	True				
ANR	8188874	ParameterType	gs_char		8188695	0					
ANR	8188875	Identifier	chr		8188695	1					
ANR	8188876	Parameter	gs_glyph glyph	1557:35:54876:54889	8188695	4	True				
ANR	8188877	ParameterType	gs_glyph		8188695	0					
ANR	8188878	Identifier	glyph		8188695	1					
ANR	8188879	CFGEntryNode	ENTRY		8188695		True				
ANR	8188880	CFGExitNode	EXIT		8188695		True				
ANR	8188881	Symbol	wbox		8188695						
ANR	8188882	Symbol	code		8188695						
ANR	8188883	Symbol	pfont		8188695						
ANR	8188884	Symbol	gs_eofill		8188695						
ANR	8188885	Symbol	penum		8188695						
ANR	8188886	Symbol	plfont		8188695						
ANR	8188887	Symbol	pl_intelli_merge_box		8188695						
ANR	8188888	Symbol	chr		8188695						
ANR	8188889	Symbol	* wbox		8188695						
ANR	8188890	Symbol	pl_intelli_show_char		8188695						
ANR	8188891	Symbol	pfont -> client_data		8188695						
ANR	8188892	Symbol	glyph		8188695						
ANR	8188893	Symbol	* pfont		8188695						
ANR	8188894	Symbol	pgs		8188695						
ANR	8188895	Symbol	gs_setcachedevice		8188695						
ANR	8188896	Function	pl_bitmap_init_procs	1586:0:55769:56086							
ANR	8188897	FunctionDef	pl_bitmap_init_procs (gs_font_base * pfont)		8188896	0					
ANR	8188898	CompoundStatement		1588:0:55817:56086	8188896	0					
ANR	8188899	ExpressionStatement	pfont -> procs . encode_char = pl_bitmap_encode_char	1589:4:55823:55871	8188896	0	True				
ANR	8188900	AssignmentExpression	pfont -> procs . encode_char = pl_bitmap_encode_char		8188896	0		=			
ANR	8188901	MemberAccess	pfont -> procs . encode_char		8188896	0					
ANR	8188902	PtrMemberAccess	pfont -> procs		8188896	0					
ANR	8188903	Identifier	pfont		8188896	0					
ANR	8188904	Identifier	procs		8188896	1					
ANR	8188905	Identifier	encode_char		8188896	1					
ANR	8188906	Identifier	pl_bitmap_encode_char		8188896	1					
ANR	8188907	ExpressionStatement	pfont -> procs . build_char = pl_bitmap_build_char	1590:4:55877:55923	8188896	1	True				
ANR	8188908	AssignmentExpression	pfont -> procs . build_char = pl_bitmap_build_char		8188896	0		=			
ANR	8188909	MemberAccess	pfont -> procs . build_char		8188896	0					
ANR	8188910	PtrMemberAccess	pfont -> procs		8188896	0					
ANR	8188911	Identifier	pfont		8188896	0					
ANR	8188912	Identifier	procs		8188896	1					
ANR	8188913	Identifier	build_char		8188896	1					
ANR	8188914	Identifier	pl_bitmap_build_char		8188896	1					
ANR	8188915	Statement	define	1591:1:55926:55931	8188896	2	True				
ANR	8188916	Statement	plfont	1591:8:55933:55938	8188896	3	True				
ANR	8188917	Statement	(	1591:15:55940:55940	8188896	4	True				
ANR	8188918	Statement	(	1591:16:55941:55941	8188896	5	True				
ANR	8188919	Statement	pl_font_t	1591:17:55942:55950	8188896	6	True				
ANR	8188920	Statement	*	1591:27:55952:55952	8188896	7	True				
ANR	8188921	Statement	)	1591:28:55953:55953	8188896	8	True				
ANR	8188922	Statement	pfont	1591:29:55954:55958	8188896	9	True				
ANR	8188923	Statement	->	1591:34:55959:55960	8188896	10	True				
ANR	8188924	Statement	client_data	1591:36:55961:55971	8188896	11	True				
ANR	8188925	Statement	)	1591:47:55972:55972	8188896	12	True				
ANR	8188926	ExpressionStatement	plfont -> char_width = pl_bitmap_char_width	1592:4:55978:56019	8188896	13	True				
ANR	8188927	AssignmentExpression	plfont -> char_width = pl_bitmap_char_width		8188896	0		=			
ANR	8188928	PtrMemberAccess	plfont -> char_width		8188896	0					
ANR	8188929	Identifier	plfont		8188896	0					
ANR	8188930	Identifier	char_width		8188896	1					
ANR	8188931	Identifier	pl_bitmap_char_width		8188896	1					
ANR	8188932	ExpressionStatement	plfont -> char_metrics = pl_bitmap_char_metrics	1593:4:56025:56070	8188896	14	True				
ANR	8188933	AssignmentExpression	plfont -> char_metrics = pl_bitmap_char_metrics		8188896	0		=			
ANR	8188934	PtrMemberAccess	plfont -> char_metrics		8188896	0					
ANR	8188935	Identifier	plfont		8188896	0					
ANR	8188936	Identifier	char_metrics		8188896	1					
ANR	8188937	Identifier	pl_bitmap_char_metrics		8188896	1					
ANR	8188938	Statement	undef	1594:1:56073:56077	8188896	15	True				
ANR	8188939	Statement	plfont	1594:7:56079:56084	8188896	16	True				
ANR	8188940	ReturnType	void		8188896	1					
ANR	8188941	Identifier	pl_bitmap_init_procs		8188896	2					
ANR	8188942	ParameterList	gs_font_base * pfont		8188896	3					
ANR	8188943	Parameter	gs_font_base * pfont	1587:21:55795:55814	8188896	0	True				
ANR	8188944	ParameterType	gs_font_base *		8188896	0					
ANR	8188945	Identifier	pfont		8188896	1					
ANR	8188946	CFGEntryNode	ENTRY		8188896		True				
ANR	8188947	CFGExitNode	EXIT		8188896		True				
ANR	8188948	Symbol	pl_bitmap_encode_char		8188896						
ANR	8188949	Symbol	pfont -> procs		8188896						
ANR	8188950	Symbol	pl_bitmap_char_width		8188896						
ANR	8188951	Symbol	plfont -> char_width		8188896						
ANR	8188952	Symbol	pfont		8188896						
ANR	8188953	Symbol	pl_bitmap_build_char		8188896						
ANR	8188954	Symbol	pfont -> procs . encode_char		8188896						
ANR	8188955	Symbol	pfont -> procs . build_char		8188896						
ANR	8188956	Symbol	plfont		8188896						
ANR	8188957	Symbol	pl_bitmap_char_metrics		8188896						
ANR	8188958	Symbol	* pfont		8188896						
ANR	8188959	Symbol	plfont -> char_metrics		8188896						
ANR	8188960	Symbol	* plfont		8188896						
ANR	8188961	Function	pl_tt_init_procs	1598:0:56142:56490							
ANR	8188962	FunctionDef	pl_tt_init_procs (gs_font_type42 * pfont)		8188961	0					
ANR	8188963	CompoundStatement		1600:0:56188:56490	8188961	0					
ANR	8188964	ExpressionStatement	pfont -> procs . encode_char = pl_tt_encode_char	1601:4:56194:56238	8188961	0	True				
ANR	8188965	AssignmentExpression	pfont -> procs . encode_char = pl_tt_encode_char		8188961	0		=			
ANR	8188966	MemberAccess	pfont -> procs . encode_char		8188961	0					
ANR	8188967	PtrMemberAccess	pfont -> procs		8188961	0					
ANR	8188968	Identifier	pfont		8188961	0					
ANR	8188969	Identifier	procs		8188961	1					
ANR	8188970	Identifier	encode_char		8188961	1					
ANR	8188971	Identifier	pl_tt_encode_char		8188961	1					
ANR	8188972	ExpressionStatement	pfont -> procs . build_char = pl_tt_build_char	1602:4:56244:56286	8188961	1	True				
ANR	8188973	AssignmentExpression	pfont -> procs . build_char = pl_tt_build_char		8188961	0		=			
ANR	8188974	MemberAccess	pfont -> procs . build_char		8188961	0					
ANR	8188975	PtrMemberAccess	pfont -> procs		8188961	0					
ANR	8188976	Identifier	pfont		8188961	0					
ANR	8188977	Identifier	procs		8188961	1					
ANR	8188978	Identifier	build_char		8188961	1					
ANR	8188979	Identifier	pl_tt_build_char		8188961	1					
ANR	8188980	ExpressionStatement	pfont -> data . string_proc = pl_tt_string_proc	1603:4:56292:56335	8188961	2	True				
ANR	8188981	AssignmentExpression	pfont -> data . string_proc = pl_tt_string_proc		8188961	0		=			
ANR	8188982	MemberAccess	pfont -> data . string_proc		8188961	0					
ANR	8188983	PtrMemberAccess	pfont -> data		8188961	0					
ANR	8188984	Identifier	pfont		8188961	0					
ANR	8188985	Identifier	data		8188961	1					
ANR	8188986	Identifier	string_proc		8188961	1					
ANR	8188987	Identifier	pl_tt_string_proc		8188961	1					
ANR	8188988	Statement	define	1604:1:56338:56343	8188961	3	True				
ANR	8188989	Statement	plfont	1604:8:56345:56350	8188961	4	True				
ANR	8188990	Statement	(	1604:15:56352:56352	8188961	5	True				
ANR	8188991	Statement	(	1604:16:56353:56353	8188961	6	True				
ANR	8188992	Statement	pl_font_t	1604:17:56354:56362	8188961	7	True				
ANR	8188993	Statement	*	1604:27:56364:56364	8188961	8	True				
ANR	8188994	Statement	)	1604:28:56365:56365	8188961	9	True				
ANR	8188995	Statement	pfont	1604:29:56366:56370	8188961	10	True				
ANR	8188996	Statement	->	1604:34:56371:56372	8188961	11	True				
ANR	8188997	Statement	client_data	1604:36:56373:56383	8188961	12	True				
ANR	8188998	Statement	)	1604:47:56384:56384	8188961	13	True				
ANR	8188999	ExpressionStatement	plfont -> char_width = pl_tt_char_width	1605:4:56390:56427	8188961	14	True				
ANR	8189000	AssignmentExpression	plfont -> char_width = pl_tt_char_width		8188961	0		=			
ANR	8189001	PtrMemberAccess	plfont -> char_width		8188961	0					
ANR	8189002	Identifier	plfont		8188961	0					
ANR	8189003	Identifier	char_width		8188961	1					
ANR	8189004	Identifier	pl_tt_char_width		8188961	1					
ANR	8189005	ExpressionStatement	plfont -> char_metrics = pl_tt_char_metrics	1606:4:56433:56474	8188961	15	True				
ANR	8189006	AssignmentExpression	plfont -> char_metrics = pl_tt_char_metrics		8188961	0		=			
ANR	8189007	PtrMemberAccess	plfont -> char_metrics		8188961	0					
ANR	8189008	Identifier	plfont		8188961	0					
ANR	8189009	Identifier	char_metrics		8188961	1					
ANR	8189010	Identifier	pl_tt_char_metrics		8188961	1					
ANR	8189011	Statement	undef	1607:1:56477:56481	8188961	16	True				
ANR	8189012	Statement	plfont	1607:7:56483:56488	8188961	17	True				
ANR	8189013	ReturnType	void		8188961	1					
ANR	8189014	Identifier	pl_tt_init_procs		8188961	2					
ANR	8189015	ParameterList	gs_font_type42 * pfont		8188961	3					
ANR	8189016	Parameter	gs_font_type42 * pfont	1599:17:56164:56185	8188961	0	True				
ANR	8189017	ParameterType	gs_font_type42 *		8188961	0					
ANR	8189018	Identifier	pfont		8188961	1					
ANR	8189019	CFGEntryNode	ENTRY		8188961		True				
ANR	8189020	CFGExitNode	EXIT		8188961		True				
ANR	8189021	Symbol	pfont -> procs		8188961						
ANR	8189022	Symbol	pl_tt_string_proc		8188961						
ANR	8189023	Symbol	plfont -> char_width		8188961						
ANR	8189024	Symbol	pfont		8188961						
ANR	8189025	Symbol	pl_tt_encode_char		8188961						
ANR	8189026	Symbol	pfont -> procs . encode_char		8188961						
ANR	8189027	Symbol	pfont -> data . string_proc		8188961						
ANR	8189028	Symbol	pfont -> data		8188961						
ANR	8189029	Symbol	pfont -> procs . build_char		8188961						
ANR	8189030	Symbol	pl_tt_char_width		8188961						
ANR	8189031	Symbol	plfont		8188961						
ANR	8189032	Symbol	pl_tt_char_metrics		8188961						
ANR	8189033	Symbol	* pfont		8188961						
ANR	8189034	Symbol	plfont -> char_metrics		8188961						
ANR	8189035	Symbol	* plfont		8188961						
ANR	8189036	Symbol	pl_tt_build_char		8188961						
ANR	8189037	Function	pl_tt_get_glyph_index	1610:0:56493:56608							
ANR	8189038	FunctionDef	"pl_tt_get_glyph_index (gs_font_type42 * pfont42 , gs_glyph glyph)"		8189037	0					
ANR	8189039	CompoundStatement		1612:0:56569:56608	8189037	0					
ANR	8189040	ReturnStatement	return glyph ;	1614:4:56594:56606	8189037	0	True				
ANR	8189041	Identifier	glyph		8189037	0					
ANR	8189042	ReturnType	static uint		8189037	1					
ANR	8189043	Identifier	pl_tt_get_glyph_index		8189037	2					
ANR	8189044	ParameterList	"gs_font_type42 * pfont42 , gs_glyph glyph"		8189037	3					
ANR	8189045	Parameter	gs_font_type42 * pfont42	1611:22:56527:56550	8189037	0	True				
ANR	8189046	ParameterType	gs_font_type42 *		8189037	0					
ANR	8189047	Identifier	pfont42		8189037	1					
ANR	8189048	Parameter	gs_glyph glyph	1611:48:56553:56566	8189037	1	True				
ANR	8189049	ParameterType	gs_glyph		8189037	0					
ANR	8189050	Identifier	glyph		8189037	1					
ANR	8189051	CFGEntryNode	ENTRY		8189037		True				
ANR	8189052	CFGExitNode	EXIT		8189037		True				
ANR	8189053	Symbol	glyph		8189037						
ANR	8189054	Symbol	pfont42		8189037						
ANR	8189055	Function	pl_tt_finish_init	1618:0:56654:58030							
ANR	8189056	FunctionDef	"pl_tt_finish_init (gs_font_type42 * pfont , bool downloaded)"		8189055	0					
ANR	8189057	CompoundStatement		1620:0:56718:58030	8189055	0					
ANR	8189058	IdentifierDeclStatement	float upem = ( float ) pfont -> data . unitsPerEm ;	1621:4:56724:56766	8189055	0	True				
ANR	8189059	IdentifierDecl	upem = ( float ) pfont -> data . unitsPerEm		8189055	0					
ANR	8189060	IdentifierDeclType	float		8189055	0					
ANR	8189061	Identifier	upem		8189055	1					
ANR	8189062	AssignmentExpression	upem = ( float ) pfont -> data . unitsPerEm		8189055	2		=			
ANR	8189063	Identifier	upem		8189055	0					
ANR	8189064	CastExpression	( float ) pfont -> data . unitsPerEm		8189055	1					
ANR	8189065	CastTarget	float		8189055	0					
ANR	8189066	MemberAccess	pfont -> data . unitsPerEm		8189055	1					
ANR	8189067	PtrMemberAccess	pfont -> data		8189055	0					
ANR	8189068	Identifier	pfont		8189055	0					
ANR	8189069	Identifier	data		8189055	1					
ANR	8189070	Identifier	unitsPerEm		8189055	1					
ANR	8189071	IdentifierDeclStatement	"ulong head = tt_find_table ( pfont , ""head"" , NULL ) ;"	1622:4:56772:56819	8189055	1	True				
ANR	8189072	IdentifierDecl	"head = tt_find_table ( pfont , ""head"" , NULL )"		8189055	0					
ANR	8189073	IdentifierDeclType	ulong		8189055	0					
ANR	8189074	Identifier	head		8189055	1					
ANR	8189075	AssignmentExpression	"head = tt_find_table ( pfont , ""head"" , NULL )"		8189055	2		=			
ANR	8189076	Identifier	head		8189055	0					
ANR	8189077	CallExpression	"tt_find_table ( pfont , ""head"" , NULL )"		8189055	1					
ANR	8189078	Callee	tt_find_table		8189055	0					
ANR	8189079	Identifier	tt_find_table		8189055	0					
ANR	8189080	ArgumentList	pfont		8189055	1					
ANR	8189081	Argument	pfont		8189055	0					
ANR	8189082	Identifier	pfont		8189055	0					
ANR	8189083	Argument	"""head"""		8189055	1					
ANR	8189084	PrimaryExpression	"""head"""		8189055	0					
ANR	8189085	Argument	NULL		8189055	2					
ANR	8189086	Identifier	NULL		8189055	0					
ANR	8189087	IdentifierDeclStatement	const byte * hdata ;	1623:4:56825:56842	8189055	2	True				
ANR	8189088	IdentifierDecl	* hdata		8189055	0					
ANR	8189089	IdentifierDeclType	const byte *		8189055	0					
ANR	8189090	Identifier	hdata		8189055	1					
ANR	8189091	ExpressionStatement	pfont -> data . get_glyph_index = pl_tt_get_glyph_index	1625:4:56849:56900	8189055	3	True				
ANR	8189092	AssignmentExpression	pfont -> data . get_glyph_index = pl_tt_get_glyph_index		8189055	0		=			
ANR	8189093	MemberAccess	pfont -> data . get_glyph_index		8189055	0					
ANR	8189094	PtrMemberAccess	pfont -> data		8189055	0					
ANR	8189095	Identifier	pfont		8189055	0					
ANR	8189096	Identifier	data		8189055	1					
ANR	8189097	Identifier	get_glyph_index		8189055	1					
ANR	8189098	Identifier	pl_tt_get_glyph_index		8189055	1					
ANR	8189099	IfStatement	if ( downloaded )		8189055	4					
ANR	8189100	Condition	downloaded	1626:8:56910:56919	8189055	0	True				
ANR	8189101	Identifier	downloaded		8189055	0					
ANR	8189102	ExpressionStatement	pfont -> data . get_outline = pl_tt_get_outline	1627:8:56930:56973	8189055	1	True				
ANR	8189103	AssignmentExpression	pfont -> data . get_outline = pl_tt_get_outline		8189055	0		=			
ANR	8189104	MemberAccess	pfont -> data . get_outline		8189055	0					
ANR	8189105	PtrMemberAccess	pfont -> data		8189055	0					
ANR	8189106	Identifier	pfont		8189055	0					
ANR	8189107	Identifier	data		8189055	1					
ANR	8189108	Identifier	get_outline		8189055	1					
ANR	8189109	Identifier	pl_tt_get_outline		8189055	1					
ANR	8189110	ExpressionStatement	"access ( head , 44 , hdata )"	1629:4:57007:57030	8189055	5	True				
ANR	8189111	CallExpression	"access ( head , 44 , hdata )"		8189055	0					
ANR	8189112	Callee	access		8189055	0					
ANR	8189113	Identifier	access		8189055	0					
ANR	8189114	ArgumentList	head		8189055	1					
ANR	8189115	Argument	head		8189055	0					
ANR	8189116	Identifier	head		8189055	0					
ANR	8189117	Argument	44		8189055	1					
ANR	8189118	PrimaryExpression	44		8189055	0					
ANR	8189119	Argument	hdata		8189055	2					
ANR	8189120	Identifier	hdata		8189055	0					
ANR	8189121	ExpressionStatement	pfont -> FontBBox . p . x = pl_get_int16 ( hdata + 36 ) / upem	1630:4:57036:57089	8189055	6	True				
ANR	8189122	AssignmentExpression	pfont -> FontBBox . p . x = pl_get_int16 ( hdata + 36 ) / upem		8189055	0		=			
ANR	8189123	MemberAccess	pfont -> FontBBox . p . x		8189055	0					
ANR	8189124	MemberAccess	pfont -> FontBBox . p		8189055	0					
ANR	8189125	PtrMemberAccess	pfont -> FontBBox		8189055	0					
ANR	8189126	Identifier	pfont		8189055	0					
ANR	8189127	Identifier	FontBBox		8189055	1					
ANR	8189128	Identifier	p		8189055	1					
ANR	8189129	Identifier	x		8189055	1					
ANR	8189130	MultiplicativeExpression	pl_get_int16 ( hdata + 36 ) / upem		8189055	1		/			
ANR	8189131	CallExpression	pl_get_int16 ( hdata + 36 )		8189055	0					
ANR	8189132	Callee	pl_get_int16		8189055	0					
ANR	8189133	Identifier	pl_get_int16		8189055	0					
ANR	8189134	ArgumentList	hdata + 36		8189055	1					
ANR	8189135	Argument	hdata + 36		8189055	0					
ANR	8189136	AdditiveExpression	hdata + 36		8189055	0		+			
ANR	8189137	Identifier	hdata		8189055	0					
ANR	8189138	PrimaryExpression	36		8189055	1					
ANR	8189139	Identifier	upem		8189055	1					
ANR	8189140	ExpressionStatement	pfont -> FontBBox . p . y = pl_get_int16 ( hdata + 38 ) / upem	1631:4:57095:57148	8189055	7	True				
ANR	8189141	AssignmentExpression	pfont -> FontBBox . p . y = pl_get_int16 ( hdata + 38 ) / upem		8189055	0		=			
ANR	8189142	MemberAccess	pfont -> FontBBox . p . y		8189055	0					
ANR	8189143	MemberAccess	pfont -> FontBBox . p		8189055	0					
ANR	8189144	PtrMemberAccess	pfont -> FontBBox		8189055	0					
ANR	8189145	Identifier	pfont		8189055	0					
ANR	8189146	Identifier	FontBBox		8189055	1					
ANR	8189147	Identifier	p		8189055	1					
ANR	8189148	Identifier	y		8189055	1					
ANR	8189149	MultiplicativeExpression	pl_get_int16 ( hdata + 38 ) / upem		8189055	1		/			
ANR	8189150	CallExpression	pl_get_int16 ( hdata + 38 )		8189055	0					
ANR	8189151	Callee	pl_get_int16		8189055	0					
ANR	8189152	Identifier	pl_get_int16		8189055	0					
ANR	8189153	ArgumentList	hdata + 38		8189055	1					
ANR	8189154	Argument	hdata + 38		8189055	0					
ANR	8189155	AdditiveExpression	hdata + 38		8189055	0		+			
ANR	8189156	Identifier	hdata		8189055	0					
ANR	8189157	PrimaryExpression	38		8189055	1					
ANR	8189158	Identifier	upem		8189055	1					
ANR	8189159	ExpressionStatement	pfont -> FontBBox . q . x = pl_get_int16 ( hdata + 40 ) / upem	1632:4:57154:57207	8189055	8	True				
ANR	8189160	AssignmentExpression	pfont -> FontBBox . q . x = pl_get_int16 ( hdata + 40 ) / upem		8189055	0		=			
ANR	8189161	MemberAccess	pfont -> FontBBox . q . x		8189055	0					
ANR	8189162	MemberAccess	pfont -> FontBBox . q		8189055	0					
ANR	8189163	PtrMemberAccess	pfont -> FontBBox		8189055	0					
ANR	8189164	Identifier	pfont		8189055	0					
ANR	8189165	Identifier	FontBBox		8189055	1					
ANR	8189166	Identifier	q		8189055	1					
ANR	8189167	Identifier	x		8189055	1					
ANR	8189168	MultiplicativeExpression	pl_get_int16 ( hdata + 40 ) / upem		8189055	1		/			
ANR	8189169	CallExpression	pl_get_int16 ( hdata + 40 )		8189055	0					
ANR	8189170	Callee	pl_get_int16		8189055	0					
ANR	8189171	Identifier	pl_get_int16		8189055	0					
ANR	8189172	ArgumentList	hdata + 40		8189055	1					
ANR	8189173	Argument	hdata + 40		8189055	0					
ANR	8189174	AdditiveExpression	hdata + 40		8189055	0		+			
ANR	8189175	Identifier	hdata		8189055	0					
ANR	8189176	PrimaryExpression	40		8189055	1					
ANR	8189177	Identifier	upem		8189055	1					
ANR	8189178	ExpressionStatement	pfont -> FontBBox . q . y = pl_get_int16 ( hdata + 42 ) / upem	1633:4:57213:57266	8189055	9	True				
ANR	8189179	AssignmentExpression	pfont -> FontBBox . q . y = pl_get_int16 ( hdata + 42 ) / upem		8189055	0		=			
ANR	8189180	MemberAccess	pfont -> FontBBox . q . y		8189055	0					
ANR	8189181	MemberAccess	pfont -> FontBBox . q		8189055	0					
ANR	8189182	PtrMemberAccess	pfont -> FontBBox		8189055	0					
ANR	8189183	Identifier	pfont		8189055	0					
ANR	8189184	Identifier	FontBBox		8189055	1					
ANR	8189185	Identifier	q		8189055	1					
ANR	8189186	Identifier	y		8189055	1					
ANR	8189187	MultiplicativeExpression	pl_get_int16 ( hdata + 42 ) / upem		8189055	1		/			
ANR	8189188	CallExpression	pl_get_int16 ( hdata + 42 )		8189055	0					
ANR	8189189	Callee	pl_get_int16		8189055	0					
ANR	8189190	Identifier	pl_get_int16		8189055	0					
ANR	8189191	ArgumentList	hdata + 42		8189055	1					
ANR	8189192	Argument	hdata + 42		8189055	0					
ANR	8189193	AdditiveExpression	hdata + 42		8189055	0		+			
ANR	8189194	Identifier	hdata		8189055	0					
ANR	8189195	PrimaryExpression	42		8189055	1					
ANR	8189196	Identifier	upem		8189055	1					
ANR	8189197	IfStatement	if ( gs_debug_c ( 'm' ) )		8189055	10					
ANR	8189198	Condition	gs_debug_c ( 'm' )	1635:8:57289:57303	8189055	0	True				
ANR	8189199	CallExpression	gs_debug_c ( 'm' )		8189055	0					
ANR	8189200	Callee	gs_debug_c		8189055	0					
ANR	8189201	Identifier	gs_debug_c		8189055	0					
ANR	8189202	ArgumentList	'm'		8189055	1					
ANR	8189203	Argument	'm'		8189055	0					
ANR	8189204	PrimaryExpression	'm'		8189055	0					
ANR	8189205	CompoundStatement		20:8:690:696	8189055	1					
ANR	8189206	IdentifierDeclStatement	const byte * OffsetTable ;	1636:8:57316:57339	8189055	0	True				
ANR	8189207	IdentifierDecl	* OffsetTable		8189055	0					
ANR	8189208	IdentifierDeclType	const byte *		8189055	0					
ANR	8189209	Identifier	OffsetTable		8189055	1					
ANR	8189210	IdentifierDeclStatement	uint numTables ;	1637:8:57349:57363	8189055	1	True				
ANR	8189211	IdentifierDecl	numTables		8189055	0					
ANR	8189212	IdentifierDeclType	uint		8189055	0					
ANR	8189213	Identifier	numTables		8189055	1					
ANR	8189214	IdentifierDeclStatement	const byte * TableDirectory ;	1638:8:57373:57399	8189055	2	True				
ANR	8189215	IdentifierDecl	* TableDirectory		8189055	0					
ANR	8189216	IdentifierDeclType	const byte *		8189055	0					
ANR	8189217	Identifier	TableDirectory		8189055	1					
ANR	8189218	IdentifierDeclStatement	uint i ;	1639:8:57409:57415	8189055	3	True				
ANR	8189219	IdentifierDecl	i		8189055	0					
ANR	8189220	IdentifierDeclType	uint		8189055	0					
ANR	8189221	Identifier	i		8189055	1					
ANR	8189222	ExpressionStatement	"access ( 0 , 12 , OffsetTable )"	1641:8:57426:57452	8189055	4	True				
ANR	8189223	CallExpression	"access ( 0 , 12 , OffsetTable )"		8189055	0					
ANR	8189224	Callee	access		8189055	0					
ANR	8189225	Identifier	access		8189055	0					
ANR	8189226	ArgumentList	0		8189055	1					
ANR	8189227	Argument	0		8189055	0					
ANR	8189228	PrimaryExpression	0		8189055	0					
ANR	8189229	Argument	12		8189055	1					
ANR	8189230	PrimaryExpression	12		8189055	0					
ANR	8189231	Argument	OffsetTable		8189055	2					
ANR	8189232	Identifier	OffsetTable		8189055	0					
ANR	8189233	ExpressionStatement	numTables = pl_get_uint16 ( OffsetTable + 4 )	1642:8:57462:57504	8189055	5	True				
ANR	8189234	AssignmentExpression	numTables = pl_get_uint16 ( OffsetTable + 4 )		8189055	0		=			
ANR	8189235	Identifier	numTables		8189055	0					
ANR	8189236	CallExpression	pl_get_uint16 ( OffsetTable + 4 )		8189055	1					
ANR	8189237	Callee	pl_get_uint16		8189055	0					
ANR	8189238	Identifier	pl_get_uint16		8189055	0					
ANR	8189239	ArgumentList	OffsetTable + 4		8189055	1					
ANR	8189240	Argument	OffsetTable + 4		8189055	0					
ANR	8189241	AdditiveExpression	OffsetTable + 4		8189055	0		+			
ANR	8189242	Identifier	OffsetTable		8189055	0					
ANR	8189243	PrimaryExpression	4		8189055	1					
ANR	8189244	ExpressionStatement	"access ( 12 , numTables * 16 , TableDirectory )"	1643:8:57514:57556	8189055	6	True				
ANR	8189245	CallExpression	"access ( 12 , numTables * 16 , TableDirectory )"		8189055	0					
ANR	8189246	Callee	access		8189055	0					
ANR	8189247	Identifier	access		8189055	0					
ANR	8189248	ArgumentList	12		8189055	1					
ANR	8189249	Argument	12		8189055	0					
ANR	8189250	PrimaryExpression	12		8189055	0					
ANR	8189251	Argument	numTables * 16		8189055	1					
ANR	8189252	MultiplicativeExpression	numTables * 16		8189055	0		*			
ANR	8189253	Identifier	numTables		8189055	0					
ANR	8189254	PrimaryExpression	16		8189055	1					
ANR	8189255	Argument	TableDirectory		8189055	2					
ANR	8189256	Identifier	TableDirectory		8189055	0					
ANR	8189257	ForStatement	for ( i = 0 ; i < numTables ; ++ i )		8189055	7					
ANR	8189258	ForInit	i = 0 ;	1644:13:57571:57576	8189055	0	True				
ANR	8189259	AssignmentExpression	i = 0		8189055	0		=			
ANR	8189260	Identifier	i		8189055	0					
ANR	8189261	PrimaryExpression	0		8189055	1					
ANR	8189262	Condition	i < numTables	1644:20:57578:57590	8189055	1	True				
ANR	8189263	RelationalExpression	i < numTables		8189055	0		<			
ANR	8189264	Identifier	i		8189055	0					
ANR	8189265	Identifier	numTables		8189055	1					
ANR	8189266	UnaryExpression	++ i	1644:35:57593:57595	8189055	2	True				
ANR	8189267	IncDec	++		8189055	0					
ANR	8189268	Identifier	i		8189055	1					
ANR	8189269	CompoundStatement		26:12:893:934	8189055	3					
ANR	8189270	IdentifierDeclStatement	const byte * tab = TableDirectory + i * 16 ;	1645:12:57612:57653	8189055	0	True				
ANR	8189271	IdentifierDecl	* tab = TableDirectory + i * 16		8189055	0					
ANR	8189272	IdentifierDeclType	const byte *		8189055	0					
ANR	8189273	Identifier	tab		8189055	1					
ANR	8189274	AssignmentExpression	* tab = TableDirectory + i * 16		8189055	2		=			
ANR	8189275	Identifier	tab		8189055	0					
ANR	8189276	AdditiveExpression	TableDirectory + i * 16		8189055	1		+			
ANR	8189277	Identifier	TableDirectory		8189055	0					
ANR	8189278	MultiplicativeExpression	i * 16		8189055	1		*			
ANR	8189279	Identifier	i		8189055	0					
ANR	8189280	PrimaryExpression	16		8189055	1					
ANR	8189281	ExpressionStatement	"dmprintf6 ( pfont -> memory , ""%c%c%c%c offset = %lu length = %lu\\n"" , tab [ 0 ] , tab [ 1 ] , tab [ 2 ] , tab [ 3 ] , ( ulong ) pl_get_uint32 ( tab + 8 ) , ( ulong ) pl_get_uint32 ( tab + 12 ) )"	1647:12:57668:57917	8189055	1	True				
ANR	8189282	CallExpression	"dmprintf6 ( pfont -> memory , ""%c%c%c%c offset = %lu length = %lu\\n"" , tab [ 0 ] , tab [ 1 ] , tab [ 2 ] , tab [ 3 ] , ( ulong ) pl_get_uint32 ( tab + 8 ) , ( ulong ) pl_get_uint32 ( tab + 12 ) )"		8189055	0					
ANR	8189283	Callee	dmprintf6		8189055	0					
ANR	8189284	Identifier	dmprintf6		8189055	0					
ANR	8189285	ArgumentList	pfont -> memory		8189055	1					
ANR	8189286	Argument	pfont -> memory		8189055	0					
ANR	8189287	PtrMemberAccess	pfont -> memory		8189055	0					
ANR	8189288	Identifier	pfont		8189055	0					
ANR	8189289	Identifier	memory		8189055	1					
ANR	8189290	Argument	"""%c%c%c%c offset = %lu length = %lu\\n"""		8189055	1					
ANR	8189291	PrimaryExpression	"""%c%c%c%c offset = %lu length = %lu\\n"""		8189055	0					
ANR	8189292	Argument	tab [ 0 ]		8189055	2					
ANR	8189293	ArrayIndexing	tab [ 0 ]		8189055	0					
ANR	8189294	Identifier	tab		8189055	0					
ANR	8189295	PrimaryExpression	0		8189055	1					
ANR	8189296	Argument	tab [ 1 ]		8189055	3					
ANR	8189297	ArrayIndexing	tab [ 1 ]		8189055	0					
ANR	8189298	Identifier	tab		8189055	0					
ANR	8189299	PrimaryExpression	1		8189055	1					
ANR	8189300	Argument	tab [ 2 ]		8189055	4					
ANR	8189301	ArrayIndexing	tab [ 2 ]		8189055	0					
ANR	8189302	Identifier	tab		8189055	0					
ANR	8189303	PrimaryExpression	2		8189055	1					
ANR	8189304	Argument	tab [ 3 ]		8189055	5					
ANR	8189305	ArrayIndexing	tab [ 3 ]		8189055	0					
ANR	8189306	Identifier	tab		8189055	0					
ANR	8189307	PrimaryExpression	3		8189055	1					
ANR	8189308	Argument	( ulong ) pl_get_uint32 ( tab + 8 )		8189055	6					
ANR	8189309	CastExpression	( ulong ) pl_get_uint32 ( tab + 8 )		8189055	0					
ANR	8189310	CastTarget	ulong		8189055	0					
ANR	8189311	CallExpression	pl_get_uint32 ( tab + 8 )		8189055	1					
ANR	8189312	Callee	pl_get_uint32		8189055	0					
ANR	8189313	Identifier	pl_get_uint32		8189055	0					
ANR	8189314	ArgumentList	tab + 8		8189055	1					
ANR	8189315	Argument	tab + 8		8189055	0					
ANR	8189316	AdditiveExpression	tab + 8		8189055	0		+			
ANR	8189317	Identifier	tab		8189055	0					
ANR	8189318	PrimaryExpression	8		8189055	1					
ANR	8189319	Argument	( ulong ) pl_get_uint32 ( tab + 12 )		8189055	7					
ANR	8189320	CastExpression	( ulong ) pl_get_uint32 ( tab + 12 )		8189055	0					
ANR	8189321	CastTarget	ulong		8189055	0					
ANR	8189322	CallExpression	pl_get_uint32 ( tab + 12 )		8189055	1					
ANR	8189323	Callee	pl_get_uint32		8189055	0					
ANR	8189324	Identifier	pl_get_uint32		8189055	0					
ANR	8189325	ArgumentList	tab + 12		8189055	1					
ANR	8189326	Argument	tab + 12		8189055	0					
ANR	8189327	AdditiveExpression	tab + 12		8189055	0		+			
ANR	8189328	Identifier	tab		8189055	0					
ANR	8189329	PrimaryExpression	12		8189055	1					
ANR	8189330	ExpressionStatement	pfont -> data . get_metrics = pl_tt_get_metrics	1656:4:57985:58028	8189055	11	True				
ANR	8189331	AssignmentExpression	pfont -> data . get_metrics = pl_tt_get_metrics		8189055	0		=			
ANR	8189332	MemberAccess	pfont -> data . get_metrics		8189055	0					
ANR	8189333	PtrMemberAccess	pfont -> data		8189055	0					
ANR	8189334	Identifier	pfont		8189055	0					
ANR	8189335	Identifier	data		8189055	1					
ANR	8189336	Identifier	get_metrics		8189055	1					
ANR	8189337	Identifier	pl_tt_get_metrics		8189055	1					
ANR	8189338	ReturnType	void		8189055	1					
ANR	8189339	Identifier	pl_tt_finish_init		8189055	2					
ANR	8189340	ParameterList	"gs_font_type42 * pfont , bool downloaded"		8189055	3					
ANR	8189341	Parameter	gs_font_type42 * pfont	1619:18:56677:56698	8189055	0	True				
ANR	8189342	ParameterType	gs_font_type42 *		8189055	0					
ANR	8189343	Identifier	pfont		8189055	1					
ANR	8189344	Parameter	bool downloaded	1619:42:56701:56715	8189055	1	True				
ANR	8189345	ParameterType	bool		8189055	0					
ANR	8189346	Identifier	downloaded		8189055	1					
ANR	8189347	CFGEntryNode	ENTRY		8189055		True				
ANR	8189348	CFGExitNode	EXIT		8189055		True				
ANR	8189349	Symbol	pfont -> FontBBox . q . y		8189055						
ANR	8189350	Symbol	pfont -> memory		8189055						
ANR	8189351	Symbol	pfont -> FontBBox . q . x		8189055						
ANR	8189352	Symbol	tt_find_table		8189055						
ANR	8189353	Symbol	pl_tt_get_outline		8189055						
ANR	8189354	Symbol	OffsetTable		8189055						
ANR	8189355	Symbol	head		8189055						
ANR	8189356	Symbol	tab		8189055						
ANR	8189357	Symbol	pl_tt_get_glyph_index		8189055						
ANR	8189358	Symbol	pl_get_int16		8189055						
ANR	8189359	Symbol	gs_debug_c		8189055						
ANR	8189360	Symbol	pfont -> data . unitsPerEm		8189055						
ANR	8189361	Symbol	pfont -> FontBBox		8189055						
ANR	8189362	Symbol	pl_get_uint16		8189055						
ANR	8189363	Symbol	NULL		8189055						
ANR	8189364	Symbol	pl_tt_get_metrics		8189055						
ANR	8189365	Symbol	pfont		8189055						
ANR	8189366	Symbol	pfont -> data		8189055						
ANR	8189367	Symbol	i		8189055						
ANR	8189368	Symbol	TableDirectory		8189055						
ANR	8189369	Symbol	pl_get_uint32		8189055						
ANR	8189370	Symbol	downloaded		8189055						
ANR	8189371	Symbol	pfont -> data . get_glyph_index		8189055						
ANR	8189372	Symbol	* pfont		8189055						
ANR	8189373	Symbol	pfont -> data . get_metrics		8189055						
ANR	8189374	Symbol	pfont -> data . get_outline		8189055						
ANR	8189375	Symbol	pfont -> FontBBox . p . x		8189055						
ANR	8189376	Symbol	upem		8189055						
ANR	8189377	Symbol	pfont -> FontBBox . p . y		8189055						
ANR	8189378	Symbol	hdata		8189055						
ANR	8189379	Symbol	pfont -> FontBBox . p		8189055						
ANR	8189380	Symbol	pfont -> FontBBox . q		8189055						
ANR	8189381	Symbol	numTables		8189055						
ANR	8189382	Symbol	* tab		8189055						
ANR	8189383	Function	pl_intelli_init_procs	1659:0:58033:58355							
ANR	8189384	FunctionDef	pl_intelli_init_procs (gs_font_base * pfont)		8189383	0					
ANR	8189385	CompoundStatement		1661:0:58082:58355	8189383	0					
ANR	8189386	ExpressionStatement	pfont -> procs . encode_char = pl_intelli_encode_char	1662:4:58088:58137	8189383	0	True				
ANR	8189387	AssignmentExpression	pfont -> procs . encode_char = pl_intelli_encode_char		8189383	0		=			
ANR	8189388	MemberAccess	pfont -> procs . encode_char		8189383	0					
ANR	8189389	PtrMemberAccess	pfont -> procs		8189383	0					
ANR	8189390	Identifier	pfont		8189383	0					
ANR	8189391	Identifier	procs		8189383	1					
ANR	8189392	Identifier	encode_char		8189383	1					
ANR	8189393	Identifier	pl_intelli_encode_char		8189383	1					
ANR	8189394	ExpressionStatement	pfont -> procs . build_char = pl_intelli_build_char	1663:4:58143:58190	8189383	1	True				
ANR	8189395	AssignmentExpression	pfont -> procs . build_char = pl_intelli_build_char		8189383	0		=			
ANR	8189396	MemberAccess	pfont -> procs . build_char		8189383	0					
ANR	8189397	PtrMemberAccess	pfont -> procs		8189383	0					
ANR	8189398	Identifier	pfont		8189383	0					
ANR	8189399	Identifier	procs		8189383	1					
ANR	8189400	Identifier	build_char		8189383	1					
ANR	8189401	Identifier	pl_intelli_build_char		8189383	1					
ANR	8189402	Statement	define	1664:1:58193:58198	8189383	2	True				
ANR	8189403	Statement	plfont	1664:8:58200:58205	8189383	3	True				
ANR	8189404	Statement	(	1664:15:58207:58207	8189383	4	True				
ANR	8189405	Statement	(	1664:16:58208:58208	8189383	5	True				
ANR	8189406	Statement	pl_font_t	1664:17:58209:58217	8189383	6	True				
ANR	8189407	Statement	*	1664:27:58219:58219	8189383	7	True				
ANR	8189408	Statement	)	1664:28:58220:58220	8189383	8	True				
ANR	8189409	Statement	pfont	1664:29:58221:58225	8189383	9	True				
ANR	8189410	Statement	->	1664:34:58226:58227	8189383	10	True				
ANR	8189411	Statement	client_data	1664:36:58228:58238	8189383	11	True				
ANR	8189412	Statement	)	1664:47:58239:58239	8189383	12	True				
ANR	8189413	ExpressionStatement	plfont -> char_width = pl_intelli_char_width	1665:4:58245:58287	8189383	13	True				
ANR	8189414	AssignmentExpression	plfont -> char_width = pl_intelli_char_width		8189383	0		=			
ANR	8189415	PtrMemberAccess	plfont -> char_width		8189383	0					
ANR	8189416	Identifier	plfont		8189383	0					
ANR	8189417	Identifier	char_width		8189383	1					
ANR	8189418	Identifier	pl_intelli_char_width		8189383	1					
ANR	8189419	ExpressionStatement	plfont -> char_metrics = pl_intelli_char_metrics	1666:4:58293:58339	8189383	14	True				
ANR	8189420	AssignmentExpression	plfont -> char_metrics = pl_intelli_char_metrics		8189383	0		=			
ANR	8189421	PtrMemberAccess	plfont -> char_metrics		8189383	0					
ANR	8189422	Identifier	plfont		8189383	0					
ANR	8189423	Identifier	char_metrics		8189383	1					
ANR	8189424	Identifier	pl_intelli_char_metrics		8189383	1					
ANR	8189425	Statement	undef	1667:1:58342:58346	8189383	15	True				
ANR	8189426	Statement	plfont	1667:7:58348:58353	8189383	16	True				
ANR	8189427	ReturnType	void		8189383	1					
ANR	8189428	Identifier	pl_intelli_init_procs		8189383	2					
ANR	8189429	ParameterList	gs_font_base * pfont		8189383	3					
ANR	8189430	Parameter	gs_font_base * pfont	1660:22:58060:58079	8189383	0	True				
ANR	8189431	ParameterType	gs_font_base *		8189383	0					
ANR	8189432	Identifier	pfont		8189383	1					
ANR	8189433	CFGEntryNode	ENTRY		8189383		True				
ANR	8189434	CFGExitNode	EXIT		8189383		True				
ANR	8189435	Symbol	pfont -> procs		8189383						
ANR	8189436	Symbol	plfont -> char_width		8189383						
ANR	8189437	Symbol	pfont		8189383						
ANR	8189438	Symbol	pfont -> procs . encode_char		8189383						
ANR	8189439	Symbol	pfont -> procs . build_char		8189383						
ANR	8189440	Symbol	plfont		8189383						
ANR	8189441	Symbol	pl_intelli_char_width		8189383						
ANR	8189442	Symbol	pl_intelli_char_metrics		8189383						
ANR	8189443	Symbol	* pfont		8189383						
ANR	8189444	Symbol	plfont -> char_metrics		8189383						
ANR	8189445	Symbol	* plfont		8189383						
ANR	8189446	Symbol	pl_intelli_build_char		8189383						
ANR	8189447	Symbol	pl_intelli_encode_char		8189383						
ANR	8189448	Function	pl_font_alloc_glyph_table	1672:0:58448:59235							
ANR	8189449	FunctionDef	"pl_font_alloc_glyph_table (pl_font_t * plfont , uint num_glyphs , gs_memory_t * mem , client_name_t cname)"		8189448	0					
ANR	8189450	CompoundStatement		1675:0:58581:59235	8189448	0					
ANR	8189451	IdentifierDeclStatement	uint size = num_glyphs + ( num_glyphs >> 2 ) + 5 ;	1676:4:58587:58633	8189448	0	True				
ANR	8189452	IdentifierDecl	size = num_glyphs + ( num_glyphs >> 2 ) + 5		8189448	0					
ANR	8189453	IdentifierDeclType	uint		8189448	0					
ANR	8189454	Identifier	size		8189448	1					
ANR	8189455	AssignmentExpression	size = num_glyphs + ( num_glyphs >> 2 ) + 5		8189448	2		=			
ANR	8189456	Identifier	size		8189448	0					
ANR	8189457	AdditiveExpression	num_glyphs + ( num_glyphs >> 2 ) + 5		8189448	1		+			
ANR	8189458	Identifier	num_glyphs		8189448	0					
ANR	8189459	AdditiveExpression	( num_glyphs >> 2 ) + 5		8189448	1		+			
ANR	8189460	ShiftExpression	num_glyphs >> 2		8189448	0		>>			
ANR	8189461	Identifier	num_glyphs		8189448	0					
ANR	8189462	PrimaryExpression	2		8189448	1					
ANR	8189463	PrimaryExpression	5		8189448	1					
ANR	8189464	IdentifierDeclStatement	"pl_font_glyph_t * glyphs = gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname ) ;"	1677:4:58639:58786	8189448	1	True				
ANR	8189465	IdentifierDecl	"* glyphs = gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname )"		8189448	0					
ANR	8189466	IdentifierDeclType	pl_font_glyph_t *		8189448	0					
ANR	8189467	Identifier	glyphs		8189448	1					
ANR	8189468	AssignmentExpression	"* glyphs = gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname )"		8189448	2		=			
ANR	8189469	Identifier	glyphs		8189448	0					
ANR	8189470	CallExpression	"gs_alloc_struct_array ( mem , size , pl_font_glyph_t , & st_pl_font_glyph_element , cname )"		8189448	1					
ANR	8189471	Callee	gs_alloc_struct_array		8189448	0					
ANR	8189472	Identifier	gs_alloc_struct_array		8189448	0					
ANR	8189473	ArgumentList	mem		8189448	1					
ANR	8189474	Argument	mem		8189448	0					
ANR	8189475	Identifier	mem		8189448	0					
ANR	8189476	Argument	size		8189448	1					
ANR	8189477	Identifier	size		8189448	0					
ANR	8189478	Argument	pl_font_glyph_t		8189448	2					
ANR	8189479	Identifier	pl_font_glyph_t		8189448	0					
ANR	8189480	Argument	& st_pl_font_glyph_element		8189448	3					
ANR	8189481	UnaryOperationExpression	& st_pl_font_glyph_element		8189448	0					
ANR	8189482	UnaryOperator	&		8189448	0					
ANR	8189483	Identifier	st_pl_font_glyph_element		8189448	1					
ANR	8189484	Argument	cname		8189448	4					
ANR	8189485	Identifier	cname		8189448	0					
ANR	8189486	IfStatement	if ( glyphs == 0 )		8189448	2					
ANR	8189487	Condition	glyphs == 0	1681:8:58797:58807	8189448	0	True				
ANR	8189488	EqualityExpression	glyphs == 0		8189448	0		==			
ANR	8189489	Identifier	glyphs		8189448	0					
ANR	8189490	PrimaryExpression	0		8189448	1					
ANR	8189491	ExpressionStatement	return_error ( gs_error_VMerror )	1682:8:58818:58848	8189448	1	True				
ANR	8189492	CallExpression	return_error ( gs_error_VMerror )		8189448	0					
ANR	8189493	Callee	return_error		8189448	0					
ANR	8189494	Identifier	return_error		8189448	0					
ANR	8189495	ArgumentList	gs_error_VMerror		8189448	1					
ANR	8189496	Argument	gs_error_VMerror		8189448	0					
ANR	8189497	Identifier	gs_error_VMerror		8189448	0					
ANR	8189498	CompoundStatement		10:8:282:288	8189448	3					
ANR	8189499	IdentifierDeclStatement	uint i ;	1684:8:58864:58870	8189448	0	True				
ANR	8189500	IdentifierDecl	i		8189448	0					
ANR	8189501	IdentifierDeclType	uint		8189448	0					
ANR	8189502	Identifier	i		8189448	1					
ANR	8189503	ForStatement	for ( i = 0 ; i < size ; ++ i )		8189448	1					
ANR	8189504	ForInit	i = 0 ;	1686:13:58886:58891	8189448	0	True				
ANR	8189505	AssignmentExpression	i = 0		8189448	0		=			
ANR	8189506	Identifier	i		8189448	0					
ANR	8189507	PrimaryExpression	0		8189448	1					
ANR	8189508	Condition	i < size	1686:20:58893:58900	8189448	1	True				
ANR	8189509	RelationalExpression	i < size		8189448	0		<			
ANR	8189510	Identifier	i		8189448	0					
ANR	8189511	Identifier	size		8189448	1					
ANR	8189512	UnaryExpression	++ i	1686:30:58903:58905	8189448	2	True				
ANR	8189513	IncDec	++		8189448	0					
ANR	8189514	Identifier	i		8189448	1					
ANR	8189515	ExpressionStatement	"glyphs [ i ] . glyph = 0 , glyphs [ i ] . data = 0"	1687:12:58920:58959	8189448	3	True				
ANR	8189516	Expression	"glyphs [ i ] . glyph = 0 , glyphs [ i ] . data = 0"		8189448	0					
ANR	8189517	AssignmentExpression	glyphs [ i ] . glyph = 0		8189448	0		=			
ANR	8189518	MemberAccess	glyphs [ i ] . glyph		8189448	0					
ANR	8189519	ArrayIndexing	glyphs [ i ]		8189448	0					
ANR	8189520	Identifier	glyphs		8189448	0					
ANR	8189521	Identifier	i		8189448	1					
ANR	8189522	Identifier	glyph		8189448	1					
ANR	8189523	PrimaryExpression	0		8189448	1					
ANR	8189524	AssignmentExpression	glyphs [ i ] . data = 0		8189448	1		=			
ANR	8189525	MemberAccess	glyphs [ i ] . data		8189448	0					
ANR	8189526	ArrayIndexing	glyphs [ i ]		8189448	0					
ANR	8189527	Identifier	glyphs		8189448	0					
ANR	8189528	Identifier	i		8189448	1					
ANR	8189529	Identifier	data		8189448	1					
ANR	8189530	PrimaryExpression	0		8189448	1					
ANR	8189531	ExpressionStatement	plfont -> glyphs . table = glyphs	1689:4:58971:59000	8189448	4	True				
ANR	8189532	AssignmentExpression	plfont -> glyphs . table = glyphs		8189448	0		=			
ANR	8189533	MemberAccess	plfont -> glyphs . table		8189448	0					
ANR	8189534	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189535	Identifier	plfont		8189448	0					
ANR	8189536	Identifier	glyphs		8189448	1					
ANR	8189537	Identifier	table		8189448	1					
ANR	8189538	Identifier	glyphs		8189448	1					
ANR	8189539	ExpressionStatement	plfont -> glyphs . used = 0	1690:4:59006:59029	8189448	5	True				
ANR	8189540	AssignmentExpression	plfont -> glyphs . used = 0		8189448	0		=			
ANR	8189541	MemberAccess	plfont -> glyphs . used		8189448	0					
ANR	8189542	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189543	Identifier	plfont		8189448	0					
ANR	8189544	Identifier	glyphs		8189448	1					
ANR	8189545	Identifier	used		8189448	1					
ANR	8189546	PrimaryExpression	0		8189448	1					
ANR	8189547	ExpressionStatement	plfont -> glyphs . limit = num_glyphs	1691:4:59035:59068	8189448	6	True				
ANR	8189548	AssignmentExpression	plfont -> glyphs . limit = num_glyphs		8189448	0		=			
ANR	8189549	MemberAccess	plfont -> glyphs . limit		8189448	0					
ANR	8189550	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189551	Identifier	plfont		8189448	0					
ANR	8189552	Identifier	glyphs		8189448	1					
ANR	8189553	Identifier	limit		8189448	1					
ANR	8189554	Identifier	num_glyphs		8189448	1					
ANR	8189555	ExpressionStatement	plfont -> glyphs . size = size	1692:4:59074:59100	8189448	7	True				
ANR	8189556	AssignmentExpression	plfont -> glyphs . size = size		8189448	0		=			
ANR	8189557	MemberAccess	plfont -> glyphs . size		8189448	0					
ANR	8189558	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189559	Identifier	plfont		8189448	0					
ANR	8189560	Identifier	glyphs		8189448	1					
ANR	8189561	Identifier	size		8189448	1					
ANR	8189562	Identifier	size		8189448	1					
ANR	8189563	ExpressionStatement	plfont -> glyphs . skip = size * 2 / 3	1693:4:59106:59140	8189448	8	True				
ANR	8189564	AssignmentExpression	plfont -> glyphs . skip = size * 2 / 3		8189448	0		=			
ANR	8189565	MemberAccess	plfont -> glyphs . skip		8189448	0					
ANR	8189566	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189567	Identifier	plfont		8189448	0					
ANR	8189568	Identifier	glyphs		8189448	1					
ANR	8189569	Identifier	skip		8189448	1					
ANR	8189570	MultiplicativeExpression	size * 2 / 3		8189448	1		*			
ANR	8189571	Identifier	size		8189448	0					
ANR	8189572	MultiplicativeExpression	2 / 3		8189448	1		/			
ANR	8189573	PrimaryExpression	2		8189448	0					
ANR	8189574	PrimaryExpression	3		8189448	1					
ANR	8189575	WhileStatement	"while ( igcd ( plfont -> glyphs . skip , size ) > 1 )"		8189448	9					
ANR	8189576	Condition	"igcd ( plfont -> glyphs . skip , size ) > 1"	1694:11:59153:59187	8189448	0	True				
ANR	8189577	RelationalExpression	"igcd ( plfont -> glyphs . skip , size ) > 1"		8189448	0		>			
ANR	8189578	CallExpression	"igcd ( plfont -> glyphs . skip , size )"		8189448	0					
ANR	8189579	Callee	igcd		8189448	0					
ANR	8189580	Identifier	igcd		8189448	0					
ANR	8189581	ArgumentList	plfont -> glyphs . skip		8189448	1					
ANR	8189582	Argument	plfont -> glyphs . skip		8189448	0					
ANR	8189583	MemberAccess	plfont -> glyphs . skip		8189448	0					
ANR	8189584	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189585	Identifier	plfont		8189448	0					
ANR	8189586	Identifier	glyphs		8189448	1					
ANR	8189587	Identifier	skip		8189448	1					
ANR	8189588	Argument	size		8189448	1					
ANR	8189589	Identifier	size		8189448	0					
ANR	8189590	PrimaryExpression	1		8189448	1					
ANR	8189591	ExpressionStatement	plfont -> glyphs . skip ++	1695:8:59198:59219	8189448	1	True				
ANR	8189592	PostIncDecOperationExpression	plfont -> glyphs . skip ++		8189448	0					
ANR	8189593	MemberAccess	plfont -> glyphs . skip		8189448	0					
ANR	8189594	PtrMemberAccess	plfont -> glyphs		8189448	0					
ANR	8189595	Identifier	plfont		8189448	0					
ANR	8189596	Identifier	glyphs		8189448	1					
ANR	8189597	Identifier	skip		8189448	1					
ANR	8189598	IncDec	++		8189448	1					
ANR	8189599	ReturnStatement	return 0 ;	1696:4:59225:59233	8189448	10	True				
ANR	8189600	PrimaryExpression	0		8189448	0					
ANR	8189601	ReturnType	int		8189448	1					
ANR	8189602	Identifier	pl_font_alloc_glyph_table		8189448	2					
ANR	8189603	ParameterList	"pl_font_t * plfont , uint num_glyphs , gs_memory_t * mem , client_name_t cname"		8189448	3					
ANR	8189604	Parameter	pl_font_t * plfont	1673:26:58478:58495	8189448	0	True				
ANR	8189605	ParameterType	pl_font_t *		8189448	0					
ANR	8189606	Identifier	plfont		8189448	1					
ANR	8189607	Parameter	uint num_glyphs	1673:46:58498:58512	8189448	1	True				
ANR	8189608	ParameterType	uint		8189448	0					
ANR	8189609	Identifier	num_glyphs		8189448	1					
ANR	8189610	Parameter	gs_memory_t * mem	1674:26:58541:58557	8189448	2	True				
ANR	8189611	ParameterType	gs_memory_t *		8189448	0					
ANR	8189612	Identifier	mem		8189448	1					
ANR	8189613	Parameter	client_name_t cname	1674:45:58560:58578	8189448	3	True				
ANR	8189614	ParameterType	client_name_t		8189448	0					
ANR	8189615	Identifier	cname		8189448	1					
ANR	8189616	CFGEntryNode	ENTRY		8189448		True				
ANR	8189617	CFGExitNode	EXIT		8189448		True				
ANR	8189618	Symbol	plfont -> glyphs . table		8189448						
ANR	8189619	Symbol	plfont -> glyphs . limit		8189448						
ANR	8189620	Symbol	cname		8189448						
ANR	8189621	Symbol	i		8189448						
ANR	8189622	Symbol	glyphs		8189448						
ANR	8189623	Symbol	plfont		8189448						
ANR	8189624	Symbol	plfont -> glyphs . size		8189448						
ANR	8189625	Symbol	& st_pl_font_glyph_element		8189448						
ANR	8189626	Symbol	plfont -> glyphs . used		8189448						
ANR	8189627	Symbol	igcd		8189448						
ANR	8189628	Symbol	glyphs [ i ] . glyph		8189448						
ANR	8189629	Symbol	plfont -> glyphs . skip		8189448						
ANR	8189630	Symbol	gs_error_VMerror		8189448						
ANR	8189631	Symbol	num_glyphs		8189448						
ANR	8189632	Symbol	* i		8189448						
ANR	8189633	Symbol	mem		8189448						
ANR	8189634	Symbol	size		8189448						
ANR	8189635	Symbol	* plfont		8189448						
ANR	8189636	Symbol	plfont -> glyphs		8189448						
ANR	8189637	Symbol	* glyphs		8189448						
ANR	8189638	Symbol	glyphs [ i ] . data		8189448						
ANR	8189639	Symbol	pl_font_glyph_t		8189448						
ANR	8189640	Symbol	gs_alloc_struct_array		8189448						
ANR	8189641	Function	expand_glyph_table	1700:0:59268:59921							
ANR	8189642	FunctionDef	"expand_glyph_table (pl_font_t * plfont , gs_memory_t * mem)"		8189641	0					
ANR	8189643	CompoundStatement		1702:0:59337:59921	8189641	0					
ANR	8189644	IdentifierDeclStatement	pl_glyph_table_t old_table ;	1703:4:59343:59369	8189641	0	True				
ANR	8189645	IdentifierDecl	old_table		8189641	0					
ANR	8189646	IdentifierDeclType	pl_glyph_table_t		8189641	0					
ANR	8189647	Identifier	old_table		8189641	1					
ANR	8189648	IdentifierDeclStatement	int code ;	1704:4:59375:59383	8189641	1	True				
ANR	8189649	IdentifierDecl	code		8189641	0					
ANR	8189650	IdentifierDeclType	int		8189641	0					
ANR	8189651	Identifier	code		8189641	1					
ANR	8189652	IdentifierDeclStatement	uint i ;	1705:4:59389:59395	8189641	2	True				
ANR	8189653	IdentifierDecl	i		8189641	0					
ANR	8189654	IdentifierDeclType	uint		8189641	0					
ANR	8189655	Identifier	i		8189641	1					
ANR	8189656	ExpressionStatement	old_table = plfont -> glyphs	1707:4:59402:59428	8189641	3	True				
ANR	8189657	AssignmentExpression	old_table = plfont -> glyphs		8189641	0		=			
ANR	8189658	Identifier	old_table		8189641	0					
ANR	8189659	PtrMemberAccess	plfont -> glyphs		8189641	1					
ANR	8189660	Identifier	plfont		8189641	0					
ANR	8189661	Identifier	glyphs		8189641	1					
ANR	8189662	ExpressionStatement	"code = pl_font_alloc_glyph_table ( plfont , old_table . size , mem , ""expand_glyph_table(new table)"" )"	1708:4:59434:59565	8189641	4	True				
ANR	8189663	AssignmentExpression	"code = pl_font_alloc_glyph_table ( plfont , old_table . size , mem , ""expand_glyph_table(new table)"" )"		8189641	0		=			
ANR	8189664	Identifier	code		8189641	0					
ANR	8189665	CallExpression	"pl_font_alloc_glyph_table ( plfont , old_table . size , mem , ""expand_glyph_table(new table)"" )"		8189641	1					
ANR	8189666	Callee	pl_font_alloc_glyph_table		8189641	0					
ANR	8189667	Identifier	pl_font_alloc_glyph_table		8189641	0					
ANR	8189668	ArgumentList	plfont		8189641	1					
ANR	8189669	Argument	plfont		8189641	0					
ANR	8189670	Identifier	plfont		8189641	0					
ANR	8189671	Argument	old_table . size		8189641	1					
ANR	8189672	MemberAccess	old_table . size		8189641	0					
ANR	8189673	Identifier	old_table		8189641	0					
ANR	8189674	Identifier	size		8189641	1					
ANR	8189675	Argument	mem		8189641	2					
ANR	8189676	Identifier	mem		8189641	0					
ANR	8189677	Argument	"""expand_glyph_table(new table)"""		8189641	3					
ANR	8189678	PrimaryExpression	"""expand_glyph_table(new table)"""		8189641	0					
ANR	8189679	IfStatement	if ( code < 0 )		8189641	5					
ANR	8189680	Condition	code < 0	1710:8:59575:59582	8189641	0	True				
ANR	8189681	RelationalExpression	code < 0		8189641	0		<			
ANR	8189682	Identifier	code		8189641	0					
ANR	8189683	PrimaryExpression	0		8189641	1					
ANR	8189684	ReturnStatement	return code ;	1711:8:59593:59604	8189641	1	True				
ANR	8189685	Identifier	code		8189641	0					
ANR	8189686	ForStatement	for ( i = 0 ; i < old_table . size ; ++ i )		8189641	6					
ANR	8189687	ForInit	i = 0 ;	1712:9:59615:59620	8189641	0	True				
ANR	8189688	AssignmentExpression	i = 0		8189641	0		=			
ANR	8189689	Identifier	i		8189641	0					
ANR	8189690	PrimaryExpression	0		8189641	1					
ANR	8189691	Condition	i < old_table . size	1712:16:59622:59639	8189641	1	True				
ANR	8189692	RelationalExpression	i < old_table . size		8189641	0		<			
ANR	8189693	Identifier	i		8189641	0					
ANR	8189694	MemberAccess	old_table . size		8189641	1					
ANR	8189695	Identifier	old_table		8189641	0					
ANR	8189696	Identifier	size		8189641	1					
ANR	8189697	UnaryExpression	++ i	1712:36:59642:59644	8189641	2	True				
ANR	8189698	IncDec	++		8189641	0					
ANR	8189699	Identifier	i		8189641	1					
ANR	8189700	IfStatement	if ( old_table . table [ i ] . data )		8189641	3					
ANR	8189701	Condition	old_table . table [ i ] . data	1713:12:59659:59681	8189641	0	True				
ANR	8189702	MemberAccess	old_table . table [ i ] . data		8189641	0					
ANR	8189703	ArrayIndexing	old_table . table [ i ]		8189641	0					
ANR	8189704	MemberAccess	old_table . table		8189641	0					
ANR	8189705	Identifier	old_table		8189641	0					
ANR	8189706	Identifier	table		8189641	1					
ANR	8189707	Identifier	i		8189641	1					
ANR	8189708	Identifier	data		8189641	1					
ANR	8189709	ExpressionStatement	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph ) = old_table . table [ i ]"	1714:12:59696:59788	8189641	1	True				
ANR	8189710	AssignmentExpression	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph ) = old_table . table [ i ]"		8189641	0		=			
ANR	8189711	UnaryOperationExpression	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph )"		8189641	0					
ANR	8189712	UnaryOperator	*		8189641	0					
ANR	8189713	CallExpression	"pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph )"		8189641	1					
ANR	8189714	Callee	pl_font_lookup_glyph		8189641	0					
ANR	8189715	Identifier	pl_font_lookup_glyph		8189641	0					
ANR	8189716	ArgumentList	plfont		8189641	1					
ANR	8189717	Argument	plfont		8189641	0					
ANR	8189718	Identifier	plfont		8189641	0					
ANR	8189719	Argument	old_table . table [ i ] . glyph		8189641	1					
ANR	8189720	MemberAccess	old_table . table [ i ] . glyph		8189641	0					
ANR	8189721	ArrayIndexing	old_table . table [ i ]		8189641	0					
ANR	8189722	MemberAccess	old_table . table		8189641	0					
ANR	8189723	Identifier	old_table		8189641	0					
ANR	8189724	Identifier	table		8189641	1					
ANR	8189725	Identifier	i		8189641	1					
ANR	8189726	Identifier	glyph		8189641	1					
ANR	8189727	ArrayIndexing	old_table . table [ i ]		8189641	1					
ANR	8189728	MemberAccess	old_table . table		8189641	0					
ANR	8189729	Identifier	old_table		8189641	0					
ANR	8189730	Identifier	table		8189641	1					
ANR	8189731	Identifier	i		8189641	1					
ANR	8189732	ExpressionStatement	"gs_free_object ( mem , old_table . table , ""expand_glyph_table(old table)"" )"	1716:4:59794:59863	8189641	7	True				
ANR	8189733	CallExpression	"gs_free_object ( mem , old_table . table , ""expand_glyph_table(old table)"" )"		8189641	0					
ANR	8189734	Callee	gs_free_object		8189641	0					
ANR	8189735	Identifier	gs_free_object		8189641	0					
ANR	8189736	ArgumentList	mem		8189641	1					
ANR	8189737	Argument	mem		8189641	0					
ANR	8189738	Identifier	mem		8189641	0					
ANR	8189739	Argument	old_table . table		8189641	1					
ANR	8189740	MemberAccess	old_table . table		8189641	0					
ANR	8189741	Identifier	old_table		8189641	0					
ANR	8189742	Identifier	table		8189641	1					
ANR	8189743	Argument	"""expand_glyph_table(old table)"""		8189641	2					
ANR	8189744	PrimaryExpression	"""expand_glyph_table(old table)"""		8189641	0					
ANR	8189745	ExpressionStatement	plfont -> glyphs . used = old_table . used	1717:4:59869:59905	8189641	8	True				
ANR	8189746	AssignmentExpression	plfont -> glyphs . used = old_table . used		8189641	0		=			
ANR	8189747	MemberAccess	plfont -> glyphs . used		8189641	0					
ANR	8189748	PtrMemberAccess	plfont -> glyphs		8189641	0					
ANR	8189749	Identifier	plfont		8189641	0					
ANR	8189750	Identifier	glyphs		8189641	1					
ANR	8189751	Identifier	used		8189641	1					
ANR	8189752	MemberAccess	old_table . used		8189641	1					
ANR	8189753	Identifier	old_table		8189641	0					
ANR	8189754	Identifier	used		8189641	1					
ANR	8189755	ReturnStatement	return 0 ;	1718:4:59911:59919	8189641	9	True				
ANR	8189756	PrimaryExpression	0		8189641	0					
ANR	8189757	ReturnType	static int		8189641	1					
ANR	8189758	Identifier	expand_glyph_table		8189641	2					
ANR	8189759	ParameterList	"pl_font_t * plfont , gs_memory_t * mem"		8189641	3					
ANR	8189760	Parameter	pl_font_t * plfont	1701:19:59298:59315	8189641	0	True				
ANR	8189761	ParameterType	pl_font_t *		8189641	0					
ANR	8189762	Identifier	plfont		8189641	1					
ANR	8189763	Parameter	gs_memory_t * mem	1701:39:59318:59334	8189641	1	True				
ANR	8189764	ParameterType	gs_memory_t *		8189641	0					
ANR	8189765	Identifier	mem		8189641	1					
ANR	8189766	CFGEntryNode	ENTRY		8189641		True				
ANR	8189767	CFGExitNode	EXIT		8189641		True				
ANR	8189768	Symbol	code		8189641						
ANR	8189769	Symbol	old_table . table [ i ] . data		8189641						
ANR	8189770	Symbol	pl_font_lookup_glyph		8189641						
ANR	8189771	Symbol	old_table . table		8189641						
ANR	8189772	Symbol	i		8189641						
ANR	8189773	Symbol	plfont		8189641						
ANR	8189774	Symbol	* pl_font_lookup_glyph		8189641						
ANR	8189775	Symbol	plfont -> glyphs . used		8189641						
ANR	8189776	Symbol	old_table		8189641						
ANR	8189777	Symbol	old_table . used		8189641						
ANR	8189778	Symbol	* i		8189641						
ANR	8189779	Symbol	mem		8189641						
ANR	8189780	Symbol	* old_table . table		8189641						
ANR	8189781	Symbol	"* pl_font_lookup_glyph ( plfont , old_table . table [ i ] . glyph )"		8189641						
ANR	8189782	Symbol	old_table . size		8189641						
ANR	8189783	Symbol	old_table . table [ i ] . glyph		8189641						
ANR	8189784	Symbol	* plfont		8189641						
ANR	8189785	Symbol	plfont -> glyphs		8189641						
ANR	8189786	Symbol	* old_table		8189641						
ANR	8189787	Symbol	pl_font_alloc_glyph_table		8189641						
ANR	8189788	Function	pl_tt_alloc_char_glyphs	1722:0:59982:60807							
ANR	8189789	FunctionDef	"pl_tt_alloc_char_glyphs (pl_font_t * plfont , uint num_chars , gs_memory_t * mem , client_name_t cname)"		8189788	0					
ANR	8189790	CompoundStatement		1725:0:60110:60807	8189788	0					
ANR	8189791	IdentifierDeclStatement	uint size = num_chars + ( num_chars >> 2 ) + 5 ;	1726:4:60116:60160	8189788	0	True				
ANR	8189792	IdentifierDecl	size = num_chars + ( num_chars >> 2 ) + 5		8189788	0					
ANR	8189793	IdentifierDeclType	uint		8189788	0					
ANR	8189794	Identifier	size		8189788	1					
ANR	8189795	AssignmentExpression	size = num_chars + ( num_chars >> 2 ) + 5		8189788	2		=			
ANR	8189796	Identifier	size		8189788	0					
ANR	8189797	AdditiveExpression	num_chars + ( num_chars >> 2 ) + 5		8189788	1		+			
ANR	8189798	Identifier	num_chars		8189788	0					
ANR	8189799	AdditiveExpression	( num_chars >> 2 ) + 5		8189788	1		+			
ANR	8189800	ShiftExpression	num_chars >> 2		8189788	0		>>			
ANR	8189801	Identifier	num_chars		8189788	0					
ANR	8189802	PrimaryExpression	2		8189788	1					
ANR	8189803	PrimaryExpression	5		8189788	1					
ANR	8189804	IdentifierDeclStatement	"pl_tt_char_glyph_t * char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname ) ;"	1727:4:60166:60296	8189788	1	True				
ANR	8189805	IdentifierDecl	"* char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8189788	0					
ANR	8189806	IdentifierDeclType	pl_tt_char_glyph_t *		8189788	0					
ANR	8189807	Identifier	char_glyphs		8189788	1					
ANR	8189808	AssignmentExpression	"* char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8189788	2		=			
ANR	8189809	Identifier	char_glyphs		8189788	0					
ANR	8189810	CastExpression	"( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8189788	1					
ANR	8189811	CastTarget	pl_tt_char_glyph_t *		8189788	0					
ANR	8189812	CallExpression	"gs_alloc_byte_array ( mem , size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8189788	1					
ANR	8189813	Callee	gs_alloc_byte_array		8189788	0					
ANR	8189814	Identifier	gs_alloc_byte_array		8189788	0					
ANR	8189815	ArgumentList	mem		8189788	1					
ANR	8189816	Argument	mem		8189788	0					
ANR	8189817	Identifier	mem		8189788	0					
ANR	8189818	Argument	size		8189788	1					
ANR	8189819	Identifier	size		8189788	0					
ANR	8189820	Argument	sizeof ( pl_tt_char_glyph_t )		8189788	2					
ANR	8189821	SizeofExpression	sizeof ( pl_tt_char_glyph_t )		8189788	0					
ANR	8189822	Sizeof	sizeof		8189788	0					
ANR	8189823	SizeofOperand	pl_tt_char_glyph_t		8189788	1					
ANR	8189824	Argument	cname		8189788	3					
ANR	8189825	Identifier	cname		8189788	0					
ANR	8189826	IfStatement	if ( char_glyphs == 0 )		8189788	2					
ANR	8189827	Condition	char_glyphs == 0	1730:8:60307:60322	8189788	0	True				
ANR	8189828	EqualityExpression	char_glyphs == 0		8189788	0		==			
ANR	8189829	Identifier	char_glyphs		8189788	0					
ANR	8189830	PrimaryExpression	0		8189788	1					
ANR	8189831	ExpressionStatement	return_error ( gs_error_VMerror )	1731:8:60333:60363	8189788	1	True				
ANR	8189832	CallExpression	return_error ( gs_error_VMerror )		8189788	0					
ANR	8189833	Callee	return_error		8189788	0					
ANR	8189834	Identifier	return_error		8189788	0					
ANR	8189835	ArgumentList	gs_error_VMerror		8189788	1					
ANR	8189836	Argument	gs_error_VMerror		8189788	0					
ANR	8189837	Identifier	gs_error_VMerror		8189788	0					
ANR	8189838	CompoundStatement		9:8:268:274	8189788	3					
ANR	8189839	IdentifierDeclStatement	uint i ;	1733:8:60379:60385	8189788	0	True				
ANR	8189840	IdentifierDecl	i		8189788	0					
ANR	8189841	IdentifierDeclType	uint		8189788	0					
ANR	8189842	Identifier	i		8189788	1					
ANR	8189843	ForStatement	for ( i = 0 ; i < size ; ++ i )		8189788	1					
ANR	8189844	ForInit	i = 0 ;	1735:13:60401:60406	8189788	0	True				
ANR	8189845	AssignmentExpression	i = 0		8189788	0		=			
ANR	8189846	Identifier	i		8189788	0					
ANR	8189847	PrimaryExpression	0		8189788	1					
ANR	8189848	Condition	i < size	1735:20:60408:60415	8189788	1	True				
ANR	8189849	RelationalExpression	i < size		8189788	0		<			
ANR	8189850	Identifier	i		8189788	0					
ANR	8189851	Identifier	size		8189788	1					
ANR	8189852	UnaryExpression	++ i	1735:30:60418:60420	8189788	2	True				
ANR	8189853	IncDec	++		8189788	0					
ANR	8189854	Identifier	i		8189788	1					
ANR	8189855	ExpressionStatement	"char_glyphs [ i ] . chr = gs_no_char , char_glyphs [ i ] . glyph = 0"	1736:12:60435:60492	8189788	3	True				
ANR	8189856	Expression	"char_glyphs [ i ] . chr = gs_no_char , char_glyphs [ i ] . glyph = 0"		8189788	0					
ANR	8189857	AssignmentExpression	char_glyphs [ i ] . chr = gs_no_char		8189788	0		=			
ANR	8189858	MemberAccess	char_glyphs [ i ] . chr		8189788	0					
ANR	8189859	ArrayIndexing	char_glyphs [ i ]		8189788	0					
ANR	8189860	Identifier	char_glyphs		8189788	0					
ANR	8189861	Identifier	i		8189788	1					
ANR	8189862	Identifier	chr		8189788	1					
ANR	8189863	Identifier	gs_no_char		8189788	1					
ANR	8189864	AssignmentExpression	char_glyphs [ i ] . glyph = 0		8189788	1		=			
ANR	8189865	MemberAccess	char_glyphs [ i ] . glyph		8189788	0					
ANR	8189866	ArrayIndexing	char_glyphs [ i ]		8189788	0					
ANR	8189867	Identifier	char_glyphs		8189788	0					
ANR	8189868	Identifier	i		8189788	1					
ANR	8189869	Identifier	glyph		8189788	1					
ANR	8189870	PrimaryExpression	0		8189788	1					
ANR	8189871	ExpressionStatement	plfont -> char_glyphs . table = char_glyphs	1738:4:60504:60543	8189788	4	True				
ANR	8189872	AssignmentExpression	plfont -> char_glyphs . table = char_glyphs		8189788	0		=			
ANR	8189873	MemberAccess	plfont -> char_glyphs . table		8189788	0					
ANR	8189874	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189875	Identifier	plfont		8189788	0					
ANR	8189876	Identifier	char_glyphs		8189788	1					
ANR	8189877	Identifier	table		8189788	1					
ANR	8189878	Identifier	char_glyphs		8189788	1					
ANR	8189879	ExpressionStatement	plfont -> char_glyphs . used = 0	1739:4:60549:60577	8189788	5	True				
ANR	8189880	AssignmentExpression	plfont -> char_glyphs . used = 0		8189788	0		=			
ANR	8189881	MemberAccess	plfont -> char_glyphs . used		8189788	0					
ANR	8189882	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189883	Identifier	plfont		8189788	0					
ANR	8189884	Identifier	char_glyphs		8189788	1					
ANR	8189885	Identifier	used		8189788	1					
ANR	8189886	PrimaryExpression	0		8189788	1					
ANR	8189887	ExpressionStatement	plfont -> char_glyphs . limit = num_chars	1740:4:60583:60620	8189788	6	True				
ANR	8189888	AssignmentExpression	plfont -> char_glyphs . limit = num_chars		8189788	0		=			
ANR	8189889	MemberAccess	plfont -> char_glyphs . limit		8189788	0					
ANR	8189890	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189891	Identifier	plfont		8189788	0					
ANR	8189892	Identifier	char_glyphs		8189788	1					
ANR	8189893	Identifier	limit		8189788	1					
ANR	8189894	Identifier	num_chars		8189788	1					
ANR	8189895	ExpressionStatement	plfont -> char_glyphs . size = size	1741:4:60626:60657	8189788	7	True				
ANR	8189896	AssignmentExpression	plfont -> char_glyphs . size = size		8189788	0		=			
ANR	8189897	MemberAccess	plfont -> char_glyphs . size		8189788	0					
ANR	8189898	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189899	Identifier	plfont		8189788	0					
ANR	8189900	Identifier	char_glyphs		8189788	1					
ANR	8189901	Identifier	size		8189788	1					
ANR	8189902	Identifier	size		8189788	1					
ANR	8189903	ExpressionStatement	plfont -> char_glyphs . skip = size * 2 / 3	1742:4:60663:60702	8189788	8	True				
ANR	8189904	AssignmentExpression	plfont -> char_glyphs . skip = size * 2 / 3		8189788	0		=			
ANR	8189905	MemberAccess	plfont -> char_glyphs . skip		8189788	0					
ANR	8189906	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189907	Identifier	plfont		8189788	0					
ANR	8189908	Identifier	char_glyphs		8189788	1					
ANR	8189909	Identifier	skip		8189788	1					
ANR	8189910	MultiplicativeExpression	size * 2 / 3		8189788	1		*			
ANR	8189911	Identifier	size		8189788	0					
ANR	8189912	MultiplicativeExpression	2 / 3		8189788	1		/			
ANR	8189913	PrimaryExpression	2		8189788	0					
ANR	8189914	PrimaryExpression	3		8189788	1					
ANR	8189915	WhileStatement	"while ( igcd ( plfont -> char_glyphs . skip , size ) > 1 )"		8189788	9					
ANR	8189916	Condition	"igcd ( plfont -> char_glyphs . skip , size ) > 1"	1743:11:60715:60754	8189788	0	True				
ANR	8189917	RelationalExpression	"igcd ( plfont -> char_glyphs . skip , size ) > 1"		8189788	0		>			
ANR	8189918	CallExpression	"igcd ( plfont -> char_glyphs . skip , size )"		8189788	0					
ANR	8189919	Callee	igcd		8189788	0					
ANR	8189920	Identifier	igcd		8189788	0					
ANR	8189921	ArgumentList	plfont -> char_glyphs . skip		8189788	1					
ANR	8189922	Argument	plfont -> char_glyphs . skip		8189788	0					
ANR	8189923	MemberAccess	plfont -> char_glyphs . skip		8189788	0					
ANR	8189924	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189925	Identifier	plfont		8189788	0					
ANR	8189926	Identifier	char_glyphs		8189788	1					
ANR	8189927	Identifier	skip		8189788	1					
ANR	8189928	Argument	size		8189788	1					
ANR	8189929	Identifier	size		8189788	0					
ANR	8189930	PrimaryExpression	1		8189788	1					
ANR	8189931	ExpressionStatement	plfont -> char_glyphs . skip ++	1744:8:60765:60791	8189788	1	True				
ANR	8189932	PostIncDecOperationExpression	plfont -> char_glyphs . skip ++		8189788	0					
ANR	8189933	MemberAccess	plfont -> char_glyphs . skip		8189788	0					
ANR	8189934	PtrMemberAccess	plfont -> char_glyphs		8189788	0					
ANR	8189935	Identifier	plfont		8189788	0					
ANR	8189936	Identifier	char_glyphs		8189788	1					
ANR	8189937	Identifier	skip		8189788	1					
ANR	8189938	IncDec	++		8189788	1					
ANR	8189939	ReturnStatement	return 0 ;	1745:4:60797:60805	8189788	10	True				
ANR	8189940	PrimaryExpression	0		8189788	0					
ANR	8189941	ReturnType	int		8189788	1					
ANR	8189942	Identifier	pl_tt_alloc_char_glyphs		8189788	2					
ANR	8189943	ParameterList	"pl_font_t * plfont , uint num_chars , gs_memory_t * mem , client_name_t cname"		8189788	3					
ANR	8189944	Parameter	pl_font_t * plfont	1723:24:60010:60027	8189788	0	True				
ANR	8189945	ParameterType	pl_font_t *		8189788	0					
ANR	8189946	Identifier	plfont		8189788	1					
ANR	8189947	Parameter	uint num_chars	1723:44:60030:60043	8189788	1	True				
ANR	8189948	ParameterType	uint		8189788	0					
ANR	8189949	Identifier	num_chars		8189788	1					
ANR	8189950	Parameter	gs_memory_t * mem	1723:60:60046:60062	8189788	2	True				
ANR	8189951	ParameterType	gs_memory_t *		8189788	0					
ANR	8189952	Identifier	mem		8189788	1					
ANR	8189953	Parameter	client_name_t cname	1724:24:60089:60107	8189788	3	True				
ANR	8189954	ParameterType	client_name_t		8189788	0					
ANR	8189955	Identifier	cname		8189788	1					
ANR	8189956	CFGEntryNode	ENTRY		8189788		True				
ANR	8189957	CFGExitNode	EXIT		8189788		True				
ANR	8189958	Symbol	plfont -> char_glyphs . used		8189788						
ANR	8189959	Symbol	cname		8189788						
ANR	8189960	Symbol	char_glyphs		8189788						
ANR	8189961	Symbol	plfont -> char_glyphs		8189788						
ANR	8189962	Symbol	i		8189788						
ANR	8189963	Symbol	plfont -> char_glyphs . size		8189788						
ANR	8189964	Symbol	plfont		8189788						
ANR	8189965	Symbol	plfont -> char_glyphs . skip		8189788						
ANR	8189966	Symbol	char_glyphs [ i ] . chr		8189788						
ANR	8189967	Symbol	igcd		8189788						
ANR	8189968	Symbol	gs_error_VMerror		8189788						
ANR	8189969	Symbol	char_glyphs [ i ] . glyph		8189788						
ANR	8189970	Symbol	* i		8189788						
ANR	8189971	Symbol	mem		8189788						
ANR	8189972	Symbol	size		8189788						
ANR	8189973	Symbol	* char_glyphs		8189788						
ANR	8189974	Symbol	* plfont		8189788						
ANR	8189975	Symbol	gs_no_char		8189788						
ANR	8189976	Symbol	num_chars		8189788						
ANR	8189977	Symbol	gs_alloc_byte_array		8189788						
ANR	8189978	Symbol	plfont -> char_glyphs . table		8189788						
ANR	8189979	Symbol	plfont -> char_glyphs . limit		8189788						
ANR	8189980	Function	expand_char_glyph_table	1749:0:60857:61537							
ANR	8189981	FunctionDef	"expand_char_glyph_table (pl_font_t * plfont , gs_memory_t * mem)"		8189980	0					
ANR	8189982	CompoundStatement		1751:0:60931:61537	8189980	0					
ANR	8189983	IdentifierDeclStatement	pl_tt_char_glyph_table_t old_table ;	1752:4:60937:60971	8189980	0	True				
ANR	8189984	IdentifierDecl	old_table		8189980	0					
ANR	8189985	IdentifierDeclType	pl_tt_char_glyph_table_t		8189980	0					
ANR	8189986	Identifier	old_table		8189980	1					
ANR	8189987	IdentifierDeclStatement	int code ;	1753:4:60977:60985	8189980	1	True				
ANR	8189988	IdentifierDecl	code		8189980	0					
ANR	8189989	IdentifierDeclType	int		8189980	0					
ANR	8189990	Identifier	code		8189980	1					
ANR	8189991	IdentifierDeclStatement	uint i ;	1754:4:60991:60997	8189980	2	True				
ANR	8189992	IdentifierDecl	i		8189980	0					
ANR	8189993	IdentifierDeclType	uint		8189980	0					
ANR	8189994	Identifier	i		8189980	1					
ANR	8189995	ExpressionStatement	old_table = plfont -> char_glyphs	1756:4:61004:61035	8189980	3	True				
ANR	8189996	AssignmentExpression	old_table = plfont -> char_glyphs		8189980	0		=			
ANR	8189997	Identifier	old_table		8189980	0					
ANR	8189998	PtrMemberAccess	plfont -> char_glyphs		8189980	1					
ANR	8189999	Identifier	plfont		8189980	0					
ANR	8190000	Identifier	char_glyphs		8189980	1					
ANR	8190001	ExpressionStatement	"code = pl_tt_alloc_char_glyphs ( plfont , old_table . size , mem , ""expand_char_glyphs(new table)"" )"	1757:4:61041:61168	8189980	4	True				
ANR	8190002	AssignmentExpression	"code = pl_tt_alloc_char_glyphs ( plfont , old_table . size , mem , ""expand_char_glyphs(new table)"" )"		8189980	0		=			
ANR	8190003	Identifier	code		8189980	0					
ANR	8190004	CallExpression	"pl_tt_alloc_char_glyphs ( plfont , old_table . size , mem , ""expand_char_glyphs(new table)"" )"		8189980	1					
ANR	8190005	Callee	pl_tt_alloc_char_glyphs		8189980	0					
ANR	8190006	Identifier	pl_tt_alloc_char_glyphs		8189980	0					
ANR	8190007	ArgumentList	plfont		8189980	1					
ANR	8190008	Argument	plfont		8189980	0					
ANR	8190009	Identifier	plfont		8189980	0					
ANR	8190010	Argument	old_table . size		8189980	1					
ANR	8190011	MemberAccess	old_table . size		8189980	0					
ANR	8190012	Identifier	old_table		8189980	0					
ANR	8190013	Identifier	size		8189980	1					
ANR	8190014	Argument	mem		8189980	2					
ANR	8190015	Identifier	mem		8189980	0					
ANR	8190016	Argument	"""expand_char_glyphs(new table)"""		8189980	3					
ANR	8190017	PrimaryExpression	"""expand_char_glyphs(new table)"""		8189980	0					
ANR	8190018	IfStatement	if ( code < 0 )		8189980	5					
ANR	8190019	Condition	code < 0	1759:8:61178:61185	8189980	0	True				
ANR	8190020	RelationalExpression	code < 0		8189980	0		<			
ANR	8190021	Identifier	code		8189980	0					
ANR	8190022	PrimaryExpression	0		8189980	1					
ANR	8190023	ReturnStatement	return code ;	1760:8:61196:61207	8189980	1	True				
ANR	8190024	Identifier	code		8189980	0					
ANR	8190025	ForStatement	for ( i = 0 ; i < old_table . size ; ++ i )		8189980	6					
ANR	8190026	ForInit	i = 0 ;	1761:9:61218:61223	8189980	0	True				
ANR	8190027	AssignmentExpression	i = 0		8189980	0		=			
ANR	8190028	Identifier	i		8189980	0					
ANR	8190029	PrimaryExpression	0		8189980	1					
ANR	8190030	Condition	i < old_table . size	1761:16:61225:61242	8189980	1	True				
ANR	8190031	RelationalExpression	i < old_table . size		8189980	0		<			
ANR	8190032	Identifier	i		8189980	0					
ANR	8190033	MemberAccess	old_table . size		8189980	1					
ANR	8190034	Identifier	old_table		8189980	0					
ANR	8190035	Identifier	size		8189980	1					
ANR	8190036	UnaryExpression	++ i	1761:36:61245:61247	8189980	2	True				
ANR	8190037	IncDec	++		8189980	0					
ANR	8190038	Identifier	i		8189980	1					
ANR	8190039	IfStatement	if ( old_table . table [ i ] . chr != gs_no_char )		8189980	3					
ANR	8190040	Condition	old_table . table [ i ] . chr != gs_no_char	1762:12:61262:61297	8189980	0	True				
ANR	8190041	EqualityExpression	old_table . table [ i ] . chr != gs_no_char		8189980	0		!=			
ANR	8190042	MemberAccess	old_table . table [ i ] . chr		8189980	0					
ANR	8190043	ArrayIndexing	old_table . table [ i ]		8189980	0					
ANR	8190044	MemberAccess	old_table . table		8189980	0					
ANR	8190045	Identifier	old_table		8189980	0					
ANR	8190046	Identifier	table		8189980	1					
ANR	8190047	Identifier	i		8189980	1					
ANR	8190048	Identifier	chr		8189980	1					
ANR	8190049	Identifier	gs_no_char		8189980	1					
ANR	8190050	ExpressionStatement	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr ) = old_table . table [ i ]"	1763:12:61312:61399	8189980	1	True				
ANR	8190051	AssignmentExpression	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr ) = old_table . table [ i ]"		8189980	0		=			
ANR	8190052	UnaryOperationExpression	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr )"		8189980	0					
ANR	8190053	UnaryOperator	*		8189980	0					
ANR	8190054	CallExpression	"pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr )"		8189980	1					
ANR	8190055	Callee	pl_tt_lookup_char		8189980	0					
ANR	8190056	Identifier	pl_tt_lookup_char		8189980	0					
ANR	8190057	ArgumentList	plfont		8189980	1					
ANR	8190058	Argument	plfont		8189980	0					
ANR	8190059	Identifier	plfont		8189980	0					
ANR	8190060	Argument	old_table . table [ i ] . chr		8189980	1					
ANR	8190061	MemberAccess	old_table . table [ i ] . chr		8189980	0					
ANR	8190062	ArrayIndexing	old_table . table [ i ]		8189980	0					
ANR	8190063	MemberAccess	old_table . table		8189980	0					
ANR	8190064	Identifier	old_table		8189980	0					
ANR	8190065	Identifier	table		8189980	1					
ANR	8190066	Identifier	i		8189980	1					
ANR	8190067	Identifier	chr		8189980	1					
ANR	8190068	ArrayIndexing	old_table . table [ i ]		8189980	1					
ANR	8190069	MemberAccess	old_table . table		8189980	0					
ANR	8190070	Identifier	old_table		8189980	0					
ANR	8190071	Identifier	table		8189980	1					
ANR	8190072	Identifier	i		8189980	1					
ANR	8190073	ExpressionStatement	"gs_free_object ( mem , old_table . table , ""expand_char_glyphs(old table)"" )"	1765:4:61405:61474	8189980	7	True				
ANR	8190074	CallExpression	"gs_free_object ( mem , old_table . table , ""expand_char_glyphs(old table)"" )"		8189980	0					
ANR	8190075	Callee	gs_free_object		8189980	0					
ANR	8190076	Identifier	gs_free_object		8189980	0					
ANR	8190077	ArgumentList	mem		8189980	1					
ANR	8190078	Argument	mem		8189980	0					
ANR	8190079	Identifier	mem		8189980	0					
ANR	8190080	Argument	old_table . table		8189980	1					
ANR	8190081	MemberAccess	old_table . table		8189980	0					
ANR	8190082	Identifier	old_table		8189980	0					
ANR	8190083	Identifier	table		8189980	1					
ANR	8190084	Argument	"""expand_char_glyphs(old table)"""		8189980	2					
ANR	8190085	PrimaryExpression	"""expand_char_glyphs(old table)"""		8189980	0					
ANR	8190086	ExpressionStatement	plfont -> char_glyphs . used = old_table . used	1766:4:61480:61521	8189980	8	True				
ANR	8190087	AssignmentExpression	plfont -> char_glyphs . used = old_table . used		8189980	0		=			
ANR	8190088	MemberAccess	plfont -> char_glyphs . used		8189980	0					
ANR	8190089	PtrMemberAccess	plfont -> char_glyphs		8189980	0					
ANR	8190090	Identifier	plfont		8189980	0					
ANR	8190091	Identifier	char_glyphs		8189980	1					
ANR	8190092	Identifier	used		8189980	1					
ANR	8190093	MemberAccess	old_table . used		8189980	1					
ANR	8190094	Identifier	old_table		8189980	0					
ANR	8190095	Identifier	used		8189980	1					
ANR	8190096	ReturnStatement	return 0 ;	1767:4:61527:61535	8189980	9	True				
ANR	8190097	PrimaryExpression	0		8189980	0					
ANR	8190098	ReturnType	static int		8189980	1					
ANR	8190099	Identifier	expand_char_glyph_table		8189980	2					
ANR	8190100	ParameterList	"pl_font_t * plfont , gs_memory_t * mem"		8189980	3					
ANR	8190101	Parameter	pl_font_t * plfont	1750:24:60892:60909	8189980	0	True				
ANR	8190102	ParameterType	pl_font_t *		8189980	0					
ANR	8190103	Identifier	plfont		8189980	1					
ANR	8190104	Parameter	gs_memory_t * mem	1750:44:60912:60928	8189980	1	True				
ANR	8190105	ParameterType	gs_memory_t *		8189980	0					
ANR	8190106	Identifier	mem		8189980	1					
ANR	8190107	CFGEntryNode	ENTRY		8189980		True				
ANR	8190108	CFGExitNode	EXIT		8189980		True				
ANR	8190109	Symbol	plfont -> char_glyphs . used		8189980						
ANR	8190110	Symbol	code		8189980						
ANR	8190111	Symbol	old_table . table [ i ] . chr		8189980						
ANR	8190112	Symbol	"* pl_tt_lookup_char ( plfont , old_table . table [ i ] . chr )"		8189980						
ANR	8190113	Symbol	plfont -> char_glyphs		8189980						
ANR	8190114	Symbol	old_table . table		8189980						
ANR	8190115	Symbol	i		8189980						
ANR	8190116	Symbol	* pl_tt_lookup_char		8189980						
ANR	8190117	Symbol	plfont		8189980						
ANR	8190118	Symbol	pl_tt_lookup_char		8189980						
ANR	8190119	Symbol	old_table		8189980						
ANR	8190120	Symbol	old_table . used		8189980						
ANR	8190121	Symbol	* i		8189980						
ANR	8190122	Symbol	mem		8189980						
ANR	8190123	Symbol	pl_tt_alloc_char_glyphs		8189980						
ANR	8190124	Symbol	* old_table . table		8189980						
ANR	8190125	Symbol	old_table . size		8189980						
ANR	8190126	Symbol	* plfont		8189980						
ANR	8190127	Symbol	* old_table		8189980						
ANR	8190128	Symbol	gs_no_char		8189980						
ANR	8190129	ClassDef	font_glyph_s	1771:8:61610:61685							
ANR	8190130	DeclStmt									
ANR	8190131	Decl							gs_font	gs_font *	font
ANR	8190132	DeclStmt									
ANR	8190133	Decl							gs_glyph	gs_glyph	glyph
ANR	8190134	DeclStmt									
ANR	8190135	Decl							font_glyph_s	font_glyph_s	font_glyph_t
ANR	8190136	Function	match_font_glyph	1777:0:61688:61879							
ANR	8190137	FunctionDef	"match_font_glyph (const gs_memory_t * mem , cached_char * cc , void * vpfg)"		8190136	0					
ANR	8190138	CompoundStatement		1779:0:61772:61879	8190136	0					
ANR	8190139	IdentifierDeclStatement	const font_glyph_t * pfg = vpfg ;	1780:4:61778:61808	8190136	0	True				
ANR	8190140	IdentifierDecl	* pfg = vpfg		8190136	0					
ANR	8190141	IdentifierDeclType	const font_glyph_t *		8190136	0					
ANR	8190142	Identifier	pfg		8190136	1					
ANR	8190143	AssignmentExpression	* pfg = vpfg		8190136	2		=			
ANR	8190144	Identifier	vpfg		8190136	0					
ANR	8190145	Identifier	vpfg		8190136	1					
ANR	8190146	ReturnStatement	return ( cc -> pair -> font == pfg -> font && cc -> code == pfg -> glyph ) ;	1782:4:61815:61877	8190136	1	True				
ANR	8190147	AndExpression	cc -> pair -> font == pfg -> font && cc -> code == pfg -> glyph		8190136	0		&&			
ANR	8190148	EqualityExpression	cc -> pair -> font == pfg -> font		8190136	0		==			
ANR	8190149	PtrMemberAccess	cc -> pair -> font		8190136	0					
ANR	8190150	PtrMemberAccess	cc -> pair		8190136	0					
ANR	8190151	Identifier	cc		8190136	0					
ANR	8190152	Identifier	pair		8190136	1					
ANR	8190153	Identifier	font		8190136	1					
ANR	8190154	PtrMemberAccess	pfg -> font		8190136	1					
ANR	8190155	Identifier	pfg		8190136	0					
ANR	8190156	Identifier	font		8190136	1					
ANR	8190157	EqualityExpression	cc -> code == pfg -> glyph		8190136	1		==			
ANR	8190158	PtrMemberAccess	cc -> code		8190136	0					
ANR	8190159	Identifier	cc		8190136	0					
ANR	8190160	Identifier	code		8190136	1					
ANR	8190161	PtrMemberAccess	pfg -> glyph		8190136	1					
ANR	8190162	Identifier	pfg		8190136	0					
ANR	8190163	Identifier	glyph		8190136	1					
ANR	8190164	ReturnType	static bool		8190136	1					
ANR	8190165	Identifier	match_font_glyph		8190136	2					
ANR	8190166	ParameterList	"const gs_memory_t * mem , cached_char * cc , void * vpfg"		8190136	3					
ANR	8190167	Parameter	const gs_memory_t * mem	1778:17:61717:61739	8190136	0	True				
ANR	8190168	ParameterType	const gs_memory_t *		8190136	0					
ANR	8190169	Identifier	mem		8190136	1					
ANR	8190170	Parameter	cached_char * cc	1778:42:61742:61757	8190136	1	True				
ANR	8190171	ParameterType	cached_char *		8190136	0					
ANR	8190172	Identifier	cc		8190136	1					
ANR	8190173	Parameter	void * vpfg	1778:60:61760:61769	8190136	2	True				
ANR	8190174	ParameterType	void *		8190136	0					
ANR	8190175	Identifier	vpfg		8190136	1					
ANR	8190176	CFGEntryNode	ENTRY		8190136		True				
ANR	8190177	CFGExitNode	EXIT		8190136		True				
ANR	8190178	Symbol	cc		8190136						
ANR	8190179	Symbol	* cc		8190136						
ANR	8190180	Symbol	* cc -> pair		8190136						
ANR	8190181	Symbol	cc -> code		8190136						
ANR	8190182	Symbol	vpfg		8190136						
ANR	8190183	Symbol	pfg -> glyph		8190136						
ANR	8190184	Symbol	* * cc		8190136						
ANR	8190185	Symbol	pfg		8190136						
ANR	8190186	Symbol	cc -> pair -> font		8190136						
ANR	8190187	Symbol	mem		8190136						
ANR	8190188	Symbol	cc -> pair		8190136						
ANR	8190189	Symbol	pfg -> font		8190136						
ANR	8190190	Symbol	* pfg		8190136						
ANR	8190191	Function	pl_font_add_glyph	1784:0:61881:64408							
ANR	8190192	FunctionDef	"pl_font_add_glyph (pl_font_t * plfont , gs_glyph glyph , const byte * cdata , const int cdata_len)"		8190191	0					
ANR	8190193	CompoundStatement		1786:0:61980:64408	8190191	0					
ANR	8190194	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	1787:4:61986:62016	8190191	0	True				
ANR	8190195	IdentifierDecl	* pfont = plfont -> pfont		8190191	0					
ANR	8190196	IdentifierDeclType	gs_font *		8190191	0					
ANR	8190197	Identifier	pfont		8190191	1					
ANR	8190198	AssignmentExpression	* pfont = plfont -> pfont		8190191	2		=			
ANR	8190199	Identifier	pfont		8190191	0					
ANR	8190200	PtrMemberAccess	plfont -> pfont		8190191	1					
ANR	8190201	Identifier	plfont		8190191	0					
ANR	8190202	Identifier	pfont		8190191	1					
ANR	8190203	IdentifierDeclStatement	gs_glyph key = glyph ;	1788:4:62022:62042	8190191	1	True				
ANR	8190204	IdentifierDecl	key = glyph		8190191	0					
ANR	8190205	IdentifierDeclType	gs_glyph		8190191	0					
ANR	8190206	Identifier	key		8190191	1					
ANR	8190207	AssignmentExpression	key = glyph		8190191	2		=			
ANR	8190208	Identifier	glyph		8190191	0					
ANR	8190209	Identifier	glyph		8190191	1					
ANR	8190210	IdentifierDeclStatement	pl_tt_char_glyph_t * ptcg = 0 ;	1789:4:62048:62076	8190191	2	True				
ANR	8190211	IdentifierDecl	* ptcg = 0		8190191	0					
ANR	8190212	IdentifierDeclType	pl_tt_char_glyph_t *		8190191	0					
ANR	8190213	Identifier	ptcg		8190191	1					
ANR	8190214	AssignmentExpression	* ptcg = 0		8190191	2		=			
ANR	8190215	Identifier	ptcg		8190191	0					
ANR	8190216	PrimaryExpression	0		8190191	1					
ANR	8190217	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	1790:4:62082:62102	8190191	3	True				
ANR	8190218	IdentifierDecl	* pfg		8190191	0					
ANR	8190219	IdentifierDeclType	pl_font_glyph_t *		8190191	0					
ANR	8190220	Identifier	pfg		8190191	1					
ANR	8190221	Label	tcg :	1798:2:62404:62407	8190191	4	True				
ANR	8190222	Identifier	tcg		8190191	0					
ANR	8190223	IfStatement	if ( plfont -> char_glyphs . table )		8190191	5					
ANR	8190224	Condition	plfont -> char_glyphs . table	1798:10:62412:62436	8190191	0	True				
ANR	8190225	MemberAccess	plfont -> char_glyphs . table		8190191	0					
ANR	8190226	PtrMemberAccess	plfont -> char_glyphs		8190191	0					
ANR	8190227	Identifier	plfont		8190191	0					
ANR	8190228	Identifier	char_glyphs		8190191	1					
ANR	8190229	Identifier	table		8190191	1					
ANR	8190230	CompoundStatement		13:37:458:458	8190191	1					
ANR	8190231	ExpressionStatement	"ptcg = pl_tt_lookup_char ( plfont , key )"	1799:8:62449:62486	8190191	0	True				
ANR	8190232	AssignmentExpression	"ptcg = pl_tt_lookup_char ( plfont , key )"		8190191	0		=			
ANR	8190233	Identifier	ptcg		8190191	0					
ANR	8190234	CallExpression	"pl_tt_lookup_char ( plfont , key )"		8190191	1					
ANR	8190235	Callee	pl_tt_lookup_char		8190191	0					
ANR	8190236	Identifier	pl_tt_lookup_char		8190191	0					
ANR	8190237	ArgumentList	plfont		8190191	1					
ANR	8190238	Argument	plfont		8190191	0					
ANR	8190239	Identifier	plfont		8190191	0					
ANR	8190240	Argument	key		8190191	1					
ANR	8190241	Identifier	key		8190191	0					
ANR	8190242	IfStatement	if ( ptcg -> chr == gs_no_char && plfont -> char_glyphs . used >= plfont -> char_glyphs . limit )		8190191	1					
ANR	8190243	Condition	ptcg -> chr == gs_no_char && plfont -> char_glyphs . used >= plfont -> char_glyphs . limit	1800:12:62500:62579	8190191	0	True				
ANR	8190244	AndExpression	ptcg -> chr == gs_no_char && plfont -> char_glyphs . used >= plfont -> char_glyphs . limit		8190191	0		&&			
ANR	8190245	EqualityExpression	ptcg -> chr == gs_no_char		8190191	0		==			
ANR	8190246	PtrMemberAccess	ptcg -> chr		8190191	0					
ANR	8190247	Identifier	ptcg		8190191	0					
ANR	8190248	Identifier	chr		8190191	1					
ANR	8190249	Identifier	gs_no_char		8190191	1					
ANR	8190250	RelationalExpression	plfont -> char_glyphs . used >= plfont -> char_glyphs . limit		8190191	1		>=			
ANR	8190251	MemberAccess	plfont -> char_glyphs . used		8190191	0					
ANR	8190252	PtrMemberAccess	plfont -> char_glyphs		8190191	0					
ANR	8190253	Identifier	plfont		8190191	0					
ANR	8190254	Identifier	char_glyphs		8190191	1					
ANR	8190255	Identifier	used		8190191	1					
ANR	8190256	MemberAccess	plfont -> char_glyphs . limit		8190191	1					
ANR	8190257	PtrMemberAccess	plfont -> char_glyphs		8190191	0					
ANR	8190258	Identifier	plfont		8190191	0					
ANR	8190259	Identifier	char_glyphs		8190191	1					
ANR	8190260	Identifier	limit		8190191	1					
ANR	8190261	CompoundStatement		16:12:654:711	8190191	1					
ANR	8190262	IdentifierDeclStatement	"int code = expand_char_glyph_table ( plfont , pfont -> memory ) ;"	1801:12:62635:62692	8190191	0	True				
ANR	8190263	IdentifierDecl	"code = expand_char_glyph_table ( plfont , pfont -> memory )"		8190191	0					
ANR	8190264	IdentifierDeclType	int		8190191	0					
ANR	8190265	Identifier	code		8190191	1					
ANR	8190266	AssignmentExpression	"code = expand_char_glyph_table ( plfont , pfont -> memory )"		8190191	2		=			
ANR	8190267	Identifier	code		8190191	0					
ANR	8190268	CallExpression	"expand_char_glyph_table ( plfont , pfont -> memory )"		8190191	1					
ANR	8190269	Callee	expand_char_glyph_table		8190191	0					
ANR	8190270	Identifier	expand_char_glyph_table		8190191	0					
ANR	8190271	ArgumentList	plfont		8190191	1					
ANR	8190272	Argument	plfont		8190191	0					
ANR	8190273	Identifier	plfont		8190191	0					
ANR	8190274	Argument	pfont -> memory		8190191	1					
ANR	8190275	PtrMemberAccess	pfont -> memory		8190191	0					
ANR	8190276	Identifier	pfont		8190191	0					
ANR	8190277	Identifier	memory		8190191	1					
ANR	8190278	IfStatement	if ( code < 0 )		8190191	1					
ANR	8190279	Condition	code < 0	1803:16:62711:62718	8190191	0	True				
ANR	8190280	RelationalExpression	code < 0		8190191	0		<			
ANR	8190281	Identifier	code		8190191	0					
ANR	8190282	PrimaryExpression	0		8190191	1					
ANR	8190283	ReturnStatement	return code ;	1804:16:62737:62748	8190191	1	True				
ANR	8190284	Identifier	code		8190191	0					
ANR	8190285	GotoStatement	goto tcg ;	1805:12:62762:62770	8190191	2	True				
ANR	8190286	Identifier	tcg		8190191	0					
ANR	8190287	IfStatement	if ( cdata [ 0 ] == 1 )		8190191	2					
ANR	8190288	Condition	cdata [ 0 ] == 1	1808:12:62845:62857	8190191	0	True				
ANR	8190289	EqualityExpression	cdata [ 0 ] == 1		8190191	0		==			
ANR	8190290	ArrayIndexing	cdata [ 0 ]		8190191	0					
ANR	8190291	Identifier	cdata		8190191	0					
ANR	8190292	PrimaryExpression	0		8190191	1					
ANR	8190293	PrimaryExpression	1		8190191	1					
ANR	8190294	ExpressionStatement	key = pl_get_uint16 ( cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) ) )	1811:12:62987:63144	8190191	1	True				
ANR	8190295	AssignmentExpression	key = pl_get_uint16 ( cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) ) )		8190191	0		=			
ANR	8190296	Identifier	key		8190191	0					
ANR	8190297	CallExpression	pl_get_uint16 ( cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) ) )		8190191	1					
ANR	8190298	Callee	pl_get_uint16		8190191	0					
ANR	8190299	Identifier	pl_get_uint16		8190191	0					
ANR	8190300	ArgumentList	cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) )		8190191	1					
ANR	8190301	Argument	cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) )		8190191	0					
ANR	8190302	AdditiveExpression	cdata + ( ( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 ) )		8190191	0		+			
ANR	8190303	Identifier	cdata		8190191	0					
ANR	8190304	ConditionalExpression	( cdata [ 1 ] == 0 ) ? 4 : ( ( cdata [ 1 ] == 1 ) ? 8 : 10 )		8190191	1					
ANR	8190305	Condition	cdata [ 1 ] == 0		8190191	0					
ANR	8190306	EqualityExpression	cdata [ 1 ] == 0		8190191	0		==			
ANR	8190307	ArrayIndexing	cdata [ 1 ]		8190191	0					
ANR	8190308	Identifier	cdata		8190191	0					
ANR	8190309	PrimaryExpression	1		8190191	1					
ANR	8190310	PrimaryExpression	0		8190191	1					
ANR	8190311	PrimaryExpression	4		8190191	1					
ANR	8190312	ConditionalExpression	( cdata [ 1 ] == 1 ) ? 8 : 10		8190191	2					
ANR	8190313	Condition	cdata [ 1 ] == 1		8190191	0					
ANR	8190314	EqualityExpression	cdata [ 1 ] == 1		8190191	0		==			
ANR	8190315	ArrayIndexing	cdata [ 1 ]		8190191	0					
ANR	8190316	Identifier	cdata		8190191	0					
ANR	8190317	PrimaryExpression	1		8190191	1					
ANR	8190318	PrimaryExpression	1		8190191	1					
ANR	8190319	PrimaryExpression	8		8190191	1					
ANR	8190320	PrimaryExpression	10		8190191	2					
ANR	8190321	ElseStatement	else		8190191	0					
ANR	8190322	ExpressionStatement	key = pl_get_uint16 ( cdata + cdata [ 2 ] + 4 )	1817:12:63212:63253	8190191	0	True				
ANR	8190323	AssignmentExpression	key = pl_get_uint16 ( cdata + cdata [ 2 ] + 4 )		8190191	0		=			
ANR	8190324	Identifier	key		8190191	0					
ANR	8190325	CallExpression	pl_get_uint16 ( cdata + cdata [ 2 ] + 4 )		8190191	1					
ANR	8190326	Callee	pl_get_uint16		8190191	0					
ANR	8190327	Identifier	pl_get_uint16		8190191	0					
ANR	8190328	ArgumentList	cdata + cdata [ 2 ] + 4		8190191	1					
ANR	8190329	Argument	cdata + cdata [ 2 ] + 4		8190191	0					
ANR	8190330	AdditiveExpression	cdata + cdata [ 2 ] + 4		8190191	0		+			
ANR	8190331	Identifier	cdata		8190191	0					
ANR	8190332	AdditiveExpression	cdata [ 2 ] + 4		8190191	1		+			
ANR	8190333	ArrayIndexing	cdata [ 2 ]		8190191	0					
ANR	8190334	Identifier	cdata		8190191	0					
ANR	8190335	PrimaryExpression	2		8190191	1					
ANR	8190336	PrimaryExpression	4		8190191	1					
ANR	8190337	Label	fg :	1819:2:63263:63265	8190191	6	True				
ANR	8190338	Identifier	fg		8190191	0					
ANR	8190339	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , key )"	1819:5:63266:63305	8190191	7	True				
ANR	8190340	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , key )"		8190191	0		=			
ANR	8190341	Identifier	pfg		8190191	0					
ANR	8190342	CallExpression	"pl_font_lookup_glyph ( plfont , key )"		8190191	1					
ANR	8190343	Callee	pl_font_lookup_glyph		8190191	0					
ANR	8190344	Identifier	pl_font_lookup_glyph		8190191	0					
ANR	8190345	ArgumentList	plfont		8190191	1					
ANR	8190346	Argument	plfont		8190191	0					
ANR	8190347	Identifier	plfont		8190191	0					
ANR	8190348	Argument	key		8190191	1					
ANR	8190349	Identifier	key		8190191	0					
ANR	8190350	IfStatement	if ( pfg -> data != 0 )		8190191	8					
ANR	8190351	Condition	pfg -> data != 0	1820:8:63315:63328	8190191	0	True				
ANR	8190352	EqualityExpression	pfg -> data != 0		8190191	0		!=			
ANR	8190353	PtrMemberAccess	pfg -> data		8190191	0					
ANR	8190354	Identifier	pfg		8190191	0					
ANR	8190355	Identifier	data		8190191	1					
ANR	8190356	PrimaryExpression	0		8190191	1					
ANR	8190357	CompoundStatement		36:8:1427:1448	8190191	1					
ANR	8190358	IdentifierDeclStatement	font_glyph_t match_fg ;	1821:8:63408:63429	8190191	0	True				
ANR	8190359	IdentifierDecl	match_fg		8190191	0					
ANR	8190360	IdentifierDeclType	font_glyph_t		8190191	0					
ANR	8190361	Identifier	match_fg		8190191	1					
ANR	8190362	ExpressionStatement	match_fg . font = pfont	1823:8:63440:63461	8190191	1	True				
ANR	8190363	AssignmentExpression	match_fg . font = pfont		8190191	0		=			
ANR	8190364	MemberAccess	match_fg . font		8190191	0					
ANR	8190365	Identifier	match_fg		8190191	0					
ANR	8190366	Identifier	font		8190191	1					
ANR	8190367	Identifier	pfont		8190191	1					
ANR	8190368	ExpressionStatement	match_fg . glyph = key	1824:8:63471:63491	8190191	2	True				
ANR	8190369	AssignmentExpression	match_fg . glyph = key		8190191	0		=			
ANR	8190370	MemberAccess	match_fg . glyph		8190191	0					
ANR	8190371	Identifier	match_fg		8190191	0					
ANR	8190372	Identifier	glyph		8190191	1					
ANR	8190373	Identifier	key		8190191	1					
ANR	8190374	ExpressionStatement	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"	1825:8:63501:63611	8190191	3	True				
ANR	8190375	CallExpression	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"		8190191	0					
ANR	8190376	Callee	gx_purge_selected_cached_chars		8190191	0					
ANR	8190377	Identifier	gx_purge_selected_cached_chars		8190191	0					
ANR	8190378	ArgumentList	pfont -> dir		8190191	1					
ANR	8190379	Argument	pfont -> dir		8190191	0					
ANR	8190380	PtrMemberAccess	pfont -> dir		8190191	0					
ANR	8190381	Identifier	pfont		8190191	0					
ANR	8190382	Identifier	dir		8190191	1					
ANR	8190383	Argument	match_font_glyph		8190191	1					
ANR	8190384	Identifier	match_font_glyph		8190191	0					
ANR	8190385	Argument	& match_fg		8190191	2					
ANR	8190386	UnaryOperationExpression	& match_fg		8190191	0					
ANR	8190387	UnaryOperator	&		8190191	0					
ANR	8190388	Identifier	match_fg		8190191	1					
ANR	8190389	IfStatement	if ( plfont -> data_are_permanent )		8190191	4					
ANR	8190390	Condition	plfont -> data_are_permanent	1828:12:63697:63722	8190191	0	True				
ANR	8190391	PtrMemberAccess	plfont -> data_are_permanent		8190191	0					
ANR	8190392	Identifier	plfont		8190191	0					
ANR	8190393	Identifier	data_are_permanent		8190191	1					
ANR	8190394	ReturnStatement	return 0 ;	1829:12:63737:63745	8190191	1	True				
ANR	8190395	PrimaryExpression	0		8190191	0					
ANR	8190396	ExpressionStatement	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_add_glyph(old data)"" )"	1830:8:63755:63857	8190191	5	True				
ANR	8190397	CallExpression	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_add_glyph(old data)"" )"		8190191	0					
ANR	8190398	Callee	gs_free_object		8190191	0					
ANR	8190399	Identifier	gs_free_object		8190191	0					
ANR	8190400	ArgumentList	pfont -> memory		8190191	1					
ANR	8190401	Argument	pfont -> memory		8190191	0					
ANR	8190402	PtrMemberAccess	pfont -> memory		8190191	0					
ANR	8190403	Identifier	pfont		8190191	0					
ANR	8190404	Identifier	memory		8190191	1					
ANR	8190405	Argument	( void * ) pfg -> data		8190191	1					
ANR	8190406	CastExpression	( void * ) pfg -> data		8190191	0					
ANR	8190407	CastTarget	void *		8190191	0					
ANR	8190408	PtrMemberAccess	pfg -> data		8190191	1					
ANR	8190409	Identifier	pfg		8190191	0					
ANR	8190410	Identifier	data		8190191	1					
ANR	8190411	Argument	"""pl_font_add_glyph(old data)"""		8190191	2					
ANR	8190412	PrimaryExpression	"""pl_font_add_glyph(old data)"""		8190191	0					
ANR	8190413	ElseStatement	else		8190191	0					
ANR	8190414	CompoundStatement		47:11:1889:1889	8190191	0					
ANR	8190415	IfStatement	if ( plfont -> glyphs . used >= plfont -> glyphs . limit )		8190191	0					
ANR	8190416	Condition	plfont -> glyphs . used >= plfont -> glyphs . limit	1833:12:63884:63926	8190191	0	True				
ANR	8190417	RelationalExpression	plfont -> glyphs . used >= plfont -> glyphs . limit		8190191	0		>=			
ANR	8190418	MemberAccess	plfont -> glyphs . used		8190191	0					
ANR	8190419	PtrMemberAccess	plfont -> glyphs		8190191	0					
ANR	8190420	Identifier	plfont		8190191	0					
ANR	8190421	Identifier	glyphs		8190191	1					
ANR	8190422	Identifier	used		8190191	1					
ANR	8190423	MemberAccess	plfont -> glyphs . limit		8190191	1					
ANR	8190424	PtrMemberAccess	plfont -> glyphs		8190191	0					
ANR	8190425	Identifier	plfont		8190191	0					
ANR	8190426	Identifier	glyphs		8190191	1					
ANR	8190427	Identifier	limit		8190191	1					
ANR	8190428	CompoundStatement		49:12:2006:2058	8190191	1					
ANR	8190429	IdentifierDeclStatement	"int code = expand_glyph_table ( plfont , pfont -> memory ) ;"	1834:12:63987:64039	8190191	0	True				
ANR	8190430	IdentifierDecl	"code = expand_glyph_table ( plfont , pfont -> memory )"		8190191	0					
ANR	8190431	IdentifierDeclType	int		8190191	0					
ANR	8190432	Identifier	code		8190191	1					
ANR	8190433	AssignmentExpression	"code = expand_glyph_table ( plfont , pfont -> memory )"		8190191	2		=			
ANR	8190434	Identifier	code		8190191	0					
ANR	8190435	CallExpression	"expand_glyph_table ( plfont , pfont -> memory )"		8190191	1					
ANR	8190436	Callee	expand_glyph_table		8190191	0					
ANR	8190437	Identifier	expand_glyph_table		8190191	0					
ANR	8190438	ArgumentList	plfont		8190191	1					
ANR	8190439	Argument	plfont		8190191	0					
ANR	8190440	Identifier	plfont		8190191	0					
ANR	8190441	Argument	pfont -> memory		8190191	1					
ANR	8190442	PtrMemberAccess	pfont -> memory		8190191	0					
ANR	8190443	Identifier	pfont		8190191	0					
ANR	8190444	Identifier	memory		8190191	1					
ANR	8190445	IfStatement	if ( code < 0 )		8190191	1					
ANR	8190446	Condition	code < 0	1836:16:64058:64065	8190191	0	True				
ANR	8190447	RelationalExpression	code < 0		8190191	0		<			
ANR	8190448	Identifier	code		8190191	0					
ANR	8190449	PrimaryExpression	0		8190191	1					
ANR	8190450	ReturnStatement	return code ;	1837:16:64084:64095	8190191	1	True				
ANR	8190451	Identifier	code		8190191	0					
ANR	8190452	GotoStatement	goto fg ;	1838:12:64109:64116	8190191	2	True				
ANR	8190453	Identifier	fg		8190191	0					
ANR	8190454	ExpressionStatement	plfont -> glyphs . used ++	1840:8:64136:64157	8190191	1	True				
ANR	8190455	PostIncDecOperationExpression	plfont -> glyphs . used ++		8190191	0					
ANR	8190456	MemberAccess	plfont -> glyphs . used		8190191	0					
ANR	8190457	PtrMemberAccess	plfont -> glyphs		8190191	0					
ANR	8190458	Identifier	plfont		8190191	0					
ANR	8190459	Identifier	glyphs		8190191	1					
ANR	8190460	Identifier	used		8190191	1					
ANR	8190461	IncDec	++		8190191	1					
ANR	8190462	IfStatement	if ( ptcg )		8190191	9					
ANR	8190463	Condition	ptcg	1842:8:64173:64176	8190191	0	True				
ANR	8190464	Identifier	ptcg		8190191	0					
ANR	8190465	CompoundStatement		57:14:2198:2198	8190191	1					
ANR	8190466	IfStatement	if ( ptcg -> chr == gs_no_char )		8190191	0					
ANR	8190467	Condition	ptcg -> chr == gs_no_char	1843:12:64193:64215	8190191	0	True				
ANR	8190468	EqualityExpression	ptcg -> chr == gs_no_char		8190191	0		==			
ANR	8190469	PtrMemberAccess	ptcg -> chr		8190191	0					
ANR	8190470	Identifier	ptcg		8190191	0					
ANR	8190471	Identifier	chr		8190191	1					
ANR	8190472	Identifier	gs_no_char		8190191	1					
ANR	8190473	ExpressionStatement	plfont -> char_glyphs . used ++	1844:12:64230:64256	8190191	1	True				
ANR	8190474	PostIncDecOperationExpression	plfont -> char_glyphs . used ++		8190191	0					
ANR	8190475	MemberAccess	plfont -> char_glyphs . used		8190191	0					
ANR	8190476	PtrMemberAccess	plfont -> char_glyphs		8190191	0					
ANR	8190477	Identifier	plfont		8190191	0					
ANR	8190478	Identifier	char_glyphs		8190191	1					
ANR	8190479	Identifier	used		8190191	1					
ANR	8190480	IncDec	++		8190191	1					
ANR	8190481	ExpressionStatement	ptcg -> chr = glyph	1845:8:64266:64283	8190191	1	True				
ANR	8190482	AssignmentExpression	ptcg -> chr = glyph		8190191	0		=			
ANR	8190483	PtrMemberAccess	ptcg -> chr		8190191	0					
ANR	8190484	Identifier	ptcg		8190191	0					
ANR	8190485	Identifier	chr		8190191	1					
ANR	8190486	Identifier	glyph		8190191	1					
ANR	8190487	ExpressionStatement	ptcg -> glyph = key	1846:8:64293:64310	8190191	2	True				
ANR	8190488	AssignmentExpression	ptcg -> glyph = key		8190191	0		=			
ANR	8190489	PtrMemberAccess	ptcg -> glyph		8190191	0					
ANR	8190490	Identifier	ptcg		8190191	0					
ANR	8190491	Identifier	glyph		8190191	1					
ANR	8190492	Identifier	key		8190191	1					
ANR	8190493	ExpressionStatement	pfg -> glyph = key	1848:4:64322:64338	8190191	10	True				
ANR	8190494	AssignmentExpression	pfg -> glyph = key		8190191	0		=			
ANR	8190495	PtrMemberAccess	pfg -> glyph		8190191	0					
ANR	8190496	Identifier	pfg		8190191	0					
ANR	8190497	Identifier	glyph		8190191	1					
ANR	8190498	Identifier	key		8190191	1					
ANR	8190499	ExpressionStatement	pfg -> data = cdata	1849:4:64344:64361	8190191	11	True				
ANR	8190500	AssignmentExpression	pfg -> data = cdata		8190191	0		=			
ANR	8190501	PtrMemberAccess	pfg -> data		8190191	0					
ANR	8190502	Identifier	pfg		8190191	0					
ANR	8190503	Identifier	data		8190191	1					
ANR	8190504	Identifier	cdata		8190191	1					
ANR	8190505	ExpressionStatement	pfg -> data_len = cdata_len	1850:4:64367:64392	8190191	12	True				
ANR	8190506	AssignmentExpression	pfg -> data_len = cdata_len		8190191	0		=			
ANR	8190507	PtrMemberAccess	pfg -> data_len		8190191	0					
ANR	8190508	Identifier	pfg		8190191	0					
ANR	8190509	Identifier	data_len		8190191	1					
ANR	8190510	Identifier	cdata_len		8190191	1					
ANR	8190511	ReturnStatement	return 0 ;	1851:4:64398:64406	8190191	13	True				
ANR	8190512	PrimaryExpression	0		8190191	0					
ANR	8190513	ReturnType	int		8190191	1					
ANR	8190514	Identifier	pl_font_add_glyph		8190191	2					
ANR	8190515	ParameterList	"pl_font_t * plfont , gs_glyph glyph , const byte * cdata , const int cdata_len"		8190191	3					
ANR	8190516	Parameter	pl_font_t * plfont	1785:18:61903:61920	8190191	0	True				
ANR	8190517	ParameterType	pl_font_t *		8190191	0					
ANR	8190518	Identifier	plfont		8190191	1					
ANR	8190519	Parameter	gs_glyph glyph	1785:38:61923:61936	8190191	1	True				
ANR	8190520	ParameterType	gs_glyph		8190191	0					
ANR	8190521	Identifier	glyph		8190191	1					
ANR	8190522	Parameter	const byte * cdata	1785:54:61939:61956	8190191	2	True				
ANR	8190523	ParameterType	const byte *		8190191	0					
ANR	8190524	Identifier	cdata		8190191	1					
ANR	8190525	Parameter	const int cdata_len	1785:74:61959:61977	8190191	3	True				
ANR	8190526	ParameterType	const int		8190191	0					
ANR	8190527	Identifier	cdata_len		8190191	1					
ANR	8190528	CFGEntryNode	ENTRY		8190191		True				
ANR	8190529	CFGExitNode	EXIT		8190191		True				
ANR	8190530	Symbol	plfont -> char_glyphs . used		8190191						
ANR	8190531	Symbol	match_fg . font		8190191						
ANR	8190532	Symbol	code		8190191						
ANR	8190533	Symbol	pfont -> memory		8190191						
ANR	8190534	Symbol	pl_font_lookup_glyph		8190191						
ANR	8190535	Symbol	ptcg -> chr		8190191						
ANR	8190536	Symbol	plfont -> glyphs . limit		8190191						
ANR	8190537	Symbol	match_font_glyph		8190191						
ANR	8190538	Symbol	plfont -> char_glyphs		8190191						
ANR	8190539	Symbol	match_fg		8190191						
ANR	8190540	Symbol	plfont		8190191						
ANR	8190541	Symbol	plfont -> data_are_permanent		8190191						
ANR	8190542	Symbol	expand_glyph_table		8190191						
ANR	8190543	Symbol	plfont -> glyphs . used		8190191						
ANR	8190544	Symbol	pfg -> glyph		8190191						
ANR	8190545	Symbol	& match_fg		8190191						
ANR	8190546	Symbol	* cdata		8190191						
ANR	8190547	Symbol	ptcg -> glyph		8190191						
ANR	8190548	Symbol	gs_no_char		8190191						
ANR	8190549	Symbol	* pfg		8190191						
ANR	8190550	Symbol	pfg -> data_len		8190191						
ANR	8190551	Symbol	ptcg		8190191						
ANR	8190552	Symbol	key		8190191						
ANR	8190553	Symbol	plfont -> char_glyphs . table		8190191						
ANR	8190554	Symbol	plfont -> char_glyphs . limit		8190191						
ANR	8190555	Symbol	pl_get_uint16		8190191						
ANR	8190556	Symbol	pfont		8190191						
ANR	8190557	Symbol	match_fg . glyph		8190191						
ANR	8190558	Symbol	cdata		8190191						
ANR	8190559	Symbol	pl_tt_lookup_char		8190191						
ANR	8190560	Symbol	pfg		8190191						
ANR	8190561	Symbol	glyph		8190191						
ANR	8190562	Symbol	* pfont		8190191						
ANR	8190563	Symbol	expand_char_glyph_table		8190191						
ANR	8190564	Symbol	plfont -> pfont		8190191						
ANR	8190565	Symbol	pfont -> dir		8190191						
ANR	8190566	Symbol	* plfont		8190191						
ANR	8190567	Symbol	plfont -> glyphs		8190191						
ANR	8190568	Symbol	pfg -> data		8190191						
ANR	8190569	Symbol	cdata_len		8190191						
ANR	8190570	Symbol	* ptcg		8190191						
ANR	8190571	Function	is_composite	1854:0:64411:64500							
ANR	8190572	FunctionDef	is_composite (const byte * pgdata)		8190571	0					
ANR	8190573	CompoundStatement		1856:0:64457:64500	8190571	0					
ANR	8190574	ReturnStatement	return ( pl_get_int16 ( pgdata ) == - 1 ) ;	1857:4:64463:64498	8190571	0	True				
ANR	8190575	EqualityExpression	pl_get_int16 ( pgdata ) == - 1		8190571	0		==			
ANR	8190576	CallExpression	pl_get_int16 ( pgdata )		8190571	0					
ANR	8190577	Callee	pl_get_int16		8190571	0					
ANR	8190578	Identifier	pl_get_int16		8190571	0					
ANR	8190579	ArgumentList	pgdata		8190571	1					
ANR	8190580	Argument	pgdata		8190571	0					
ANR	8190581	Identifier	pgdata		8190571	0					
ANR	8190582	UnaryOperationExpression	- 1		8190571	1					
ANR	8190583	UnaryOperator	-		8190571	0					
ANR	8190584	PrimaryExpression	1		8190571	1					
ANR	8190585	ReturnType	static bool		8190571	1					
ANR	8190586	Identifier	is_composite		8190571	2					
ANR	8190587	ParameterList	const byte * pgdata		8190571	3					
ANR	8190588	Parameter	const byte * pgdata	1855:13:64436:64454	8190571	0	True				
ANR	8190589	ParameterType	const byte *		8190571	0					
ANR	8190590	Identifier	pgdata		8190571	1					
ANR	8190591	CFGEntryNode	ENTRY		8190571		True				
ANR	8190592	CFGExitNode	EXIT		8190571		True				
ANR	8190593	Symbol	pl_get_int16		8190571						
ANR	8190594	Symbol	pgdata		8190571						
ANR	8190595	Function	pl_font_disable_composite_metrics	1860:0:64503:66812							
ANR	8190596	FunctionDef	"pl_font_disable_composite_metrics (pl_font_t * plfont , gs_glyph glyph)"		8190595	0					
ANR	8190597	CompoundStatement		1862:0:64577:66812	8190595	0					
ANR	8190598	IdentifierDeclStatement	gs_glyph key = glyph ;	1863:4:64583:64603	8190595	0	True				
ANR	8190599	IdentifierDecl	key = glyph		8190595	0					
ANR	8190600	IdentifierDeclType	gs_glyph		8190595	0					
ANR	8190601	Identifier	key		8190595	1					
ANR	8190602	AssignmentExpression	key = glyph		8190595	2		=			
ANR	8190603	Identifier	glyph		8190595	0					
ANR	8190604	Identifier	glyph		8190595	1					
ANR	8190605	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) plfont -> pfont ;	1864:4:64609:64665	8190595	1	True				
ANR	8190606	IdentifierDecl	* pfont = ( gs_font_type42 * ) plfont -> pfont		8190595	0					
ANR	8190607	IdentifierDeclType	gs_font_type42 *		8190595	0					
ANR	8190608	Identifier	pfont		8190595	1					
ANR	8190609	AssignmentExpression	* pfont = ( gs_font_type42 * ) plfont -> pfont		8190595	2		=			
ANR	8190610	Identifier	pfont		8190595	0					
ANR	8190611	CastExpression	( gs_font_type42 * ) plfont -> pfont		8190595	1					
ANR	8190612	CastTarget	gs_font_type42 *		8190595	0					
ANR	8190613	PtrMemberAccess	plfont -> pfont		8190595	1					
ANR	8190614	Identifier	plfont		8190595	0					
ANR	8190615	Identifier	pfont		8190595	1					
ANR	8190616	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	1865:4:64671:64697	8190595	2	True				
ANR	8190617	IdentifierDecl	glyph_data		8190595	0					
ANR	8190618	IdentifierDeclType	gs_glyph_data_t		8190595	0					
ANR	8190619	Identifier	glyph_data		8190595	1					
ANR	8190620	IdentifierDeclStatement	int code ;	1866:4:64703:64711	8190595	3	True				
ANR	8190621	IdentifierDecl	code		8190595	0					
ANR	8190622	IdentifierDeclType	int		8190595	0					
ANR	8190623	Identifier	code		8190595	1					
ANR	8190624	IfStatement	if ( plfont -> char_glyphs . table )		8190595	4					
ANR	8190625	Condition	plfont -> char_glyphs . table	1872:8:64993:65017	8190595	0	True				
ANR	8190626	MemberAccess	plfont -> char_glyphs . table		8190595	0					
ANR	8190627	PtrMemberAccess	plfont -> char_glyphs		8190595	0					
ANR	8190628	Identifier	plfont		8190595	0					
ANR	8190629	Identifier	char_glyphs		8190595	1					
ANR	8190630	Identifier	table		8190595	1					
ANR	8190631	CompoundStatement		12:8:452:509	8190595	1					
ANR	8190632	IdentifierDeclStatement	"pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , key ) ;"	1873:8:65030:65087	8190595	0	True				
ANR	8190633	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8190595	0					
ANR	8190634	IdentifierDeclType	pl_tt_char_glyph_t *		8190595	0					
ANR	8190635	Identifier	ptcg		8190595	1					
ANR	8190636	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8190595	2		=			
ANR	8190637	Identifier	ptcg		8190595	0					
ANR	8190638	CallExpression	"pl_tt_lookup_char ( plfont , key )"		8190595	1					
ANR	8190639	Callee	pl_tt_lookup_char		8190595	0					
ANR	8190640	Identifier	pl_tt_lookup_char		8190595	0					
ANR	8190641	ArgumentList	plfont		8190595	1					
ANR	8190642	Argument	plfont		8190595	0					
ANR	8190643	Identifier	plfont		8190595	0					
ANR	8190644	Argument	key		8190595	1					
ANR	8190645	Identifier	key		8190595	0					
ANR	8190646	IfStatement	if ( ptcg -> chr == gs_no_char )		8190595	1					
ANR	8190647	Condition	ptcg -> chr == gs_no_char	1875:12:65102:65124	8190595	0	True				
ANR	8190648	EqualityExpression	ptcg -> chr == gs_no_char		8190595	0		==			
ANR	8190649	PtrMemberAccess	ptcg -> chr		8190595	0					
ANR	8190650	Identifier	ptcg		8190595	0					
ANR	8190651	Identifier	chr		8190595	1					
ANR	8190652	Identifier	gs_no_char		8190595	1					
ANR	8190653	ReturnStatement	return 0 ;	1876:12:65139:65147	8190595	1	True				
ANR	8190654	PrimaryExpression	0		8190595	0					
ANR	8190655	ExpressionStatement	key = ptcg -> glyph	1877:8:65157:65174	8190595	2	True				
ANR	8190656	AssignmentExpression	key = ptcg -> glyph		8190595	0		=			
ANR	8190657	Identifier	key		8190595	0					
ANR	8190658	PtrMemberAccess	ptcg -> glyph		8190595	1					
ANR	8190659	Identifier	ptcg		8190595	0					
ANR	8190660	Identifier	glyph		8190595	1					
ANR	8190661	ElseStatement	else		8190595	0					
ANR	8190662	CompoundStatement		17:11:609:609	8190595	0					
ANR	8190663	ReturnStatement	return - 1 ;	1879:8:65197:65206	8190595	0	True				
ANR	8190664	UnaryOperationExpression	- 1		8190595	0					
ANR	8190665	UnaryOperator	-		8190595	0					
ANR	8190666	PrimaryExpression	1		8190595	1					
ANR	8190667	ExpressionStatement	"code = pfont -> data . get_outline ( pfont , key , & glyph_data )"	1884:4:65330:65385	8190595	5	True				
ANR	8190668	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , key , & glyph_data )"		8190595	0		=			
ANR	8190669	Identifier	code		8190595	0					
ANR	8190670	CallExpression	"pfont -> data . get_outline ( pfont , key , & glyph_data )"		8190595	1					
ANR	8190671	Callee	pfont -> data . get_outline		8190595	0					
ANR	8190672	MemberAccess	pfont -> data . get_outline		8190595	0					
ANR	8190673	PtrMemberAccess	pfont -> data		8190595	0					
ANR	8190674	Identifier	pfont		8190595	0					
ANR	8190675	Identifier	data		8190595	1					
ANR	8190676	Identifier	get_outline		8190595	1					
ANR	8190677	ArgumentList	pfont		8190595	1					
ANR	8190678	Argument	pfont		8190595	0					
ANR	8190679	Identifier	pfont		8190595	0					
ANR	8190680	Argument	key		8190595	1					
ANR	8190681	Identifier	key		8190595	0					
ANR	8190682	Argument	& glyph_data		8190595	2					
ANR	8190683	UnaryOperationExpression	& glyph_data		8190595	0					
ANR	8190684	UnaryOperator	&		8190595	0					
ANR	8190685	Identifier	glyph_data		8190595	1					
ANR	8190686	IfStatement	if ( code < 0 )		8190595	6					
ANR	8190687	Condition	code < 0	1885:8:65395:65402	8190595	0	True				
ANR	8190688	RelationalExpression	code < 0		8190595	0		<			
ANR	8190689	Identifier	code		8190595	0					
ANR	8190690	PrimaryExpression	0		8190595	1					
ANR	8190691	ReturnStatement	return code ;	1886:8:65413:65424	8190595	1	True				
ANR	8190692	Identifier	code		8190595	0					
ANR	8190693	IfStatement	if ( glyph_data . bits . data == 0 )		8190595	7					
ANR	8190694	Condition	glyph_data . bits . data == 0	1889:8:65456:65480	8190595	0	True				
ANR	8190695	EqualityExpression	glyph_data . bits . data == 0		8190595	0		==			
ANR	8190696	MemberAccess	glyph_data . bits . data		8190595	0					
ANR	8190697	MemberAccess	glyph_data . bits		8190595	0					
ANR	8190698	Identifier	glyph_data		8190595	0					
ANR	8190699	Identifier	bits		8190595	1					
ANR	8190700	Identifier	data		8190595	1					
ANR	8190701	PrimaryExpression	0		8190595	1					
ANR	8190702	ReturnStatement	return 0 ;	1890:8:65491:65499	8190595	1	True				
ANR	8190703	PrimaryExpression	0		8190595	0					
ANR	8190704	IfStatement	if ( ! is_composite ( glyph_data . bits . data ) )		8190595	8					
ANR	8190705	Condition	! is_composite ( glyph_data . bits . data )	1896:8:65794:65828	8190595	0	True				
ANR	8190706	UnaryOperationExpression	! is_composite ( glyph_data . bits . data )		8190595	0					
ANR	8190707	UnaryOperator	!		8190595	0					
ANR	8190708	CallExpression	is_composite ( glyph_data . bits . data )		8190595	1					
ANR	8190709	Callee	is_composite		8190595	0					
ANR	8190710	Identifier	is_composite		8190595	0					
ANR	8190711	ArgumentList	glyph_data . bits . data		8190595	1					
ANR	8190712	Argument	glyph_data . bits . data		8190595	0					
ANR	8190713	MemberAccess	glyph_data . bits . data		8190595	0					
ANR	8190714	MemberAccess	glyph_data . bits		8190595	0					
ANR	8190715	Identifier	glyph_data		8190595	0					
ANR	8190716	Identifier	bits		8190595	1					
ANR	8190717	Identifier	data		8190595	1					
ANR	8190718	ReturnStatement	return 0 ;	1897:8:65839:65847	8190595	1	True				
ANR	8190719	PrimaryExpression	0		8190595	0					
ANR	8190720	CompoundStatement		43:8:1469:1526	8190595	9					
ANR	8190721	IdentifierDeclStatement	uint flags ;	1903:8:66027:66037	8190595	0	True				
ANR	8190722	IdentifierDecl	flags		8190595	0					
ANR	8190723	IdentifierDeclType	uint		8190595	0					
ANR	8190724	Identifier	flags		8190595	1					
ANR	8190725	IdentifierDeclStatement	byte * next_component = ( byte * ) glyph_data . bits . data + 10 ;	1904:8:66047:66104	8190595	1	True				
ANR	8190726	IdentifierDecl	* next_component = ( byte * ) glyph_data . bits . data + 10		8190595	0					
ANR	8190727	IdentifierDeclType	byte *		8190595	0					
ANR	8190728	Identifier	next_component		8190595	1					
ANR	8190729	AssignmentExpression	* next_component = ( byte * ) glyph_data . bits . data + 10		8190595	2		=			
ANR	8190730	Identifier	next_component		8190595	0					
ANR	8190731	AdditiveExpression	( byte * ) glyph_data . bits . data + 10		8190595	1		+			
ANR	8190732	CastExpression	( byte * ) glyph_data . bits . data		8190595	0					
ANR	8190733	CastTarget	byte *		8190595	0					
ANR	8190734	MemberAccess	glyph_data . bits . data		8190595	1					
ANR	8190735	MemberAccess	glyph_data . bits		8190595	0					
ANR	8190736	Identifier	glyph_data		8190595	0					
ANR	8190737	Identifier	bits		8190595	1					
ANR	8190738	Identifier	data		8190595	1					
ANR	8190739	PrimaryExpression	10		8190595	1					
ANR	8190740	DoStatement	do		8190595	2					
ANR	8190741	CompoundStatement		47:12:1587:1624	8190595	0					
ANR	8190742	IdentifierDeclStatement	gs_matrix_fixed mat ;	1907:12:66132:66151	8190595	0	True				
ANR	8190743	IdentifierDecl	mat		8190595	0					
ANR	8190744	IdentifierDeclType	gs_matrix_fixed		8190595	0					
ANR	8190745	Identifier	mat		8190595	1					
ANR	8190746	IdentifierDeclStatement	byte * last_component = next_component ;	1908:12:66165:66202	8190595	1	True				
ANR	8190747	IdentifierDecl	* last_component = next_component		8190595	0					
ANR	8190748	IdentifierDeclType	byte *		8190595	0					
ANR	8190749	Identifier	last_component		8190595	1					
ANR	8190750	AssignmentExpression	* last_component = next_component		8190595	2		=			
ANR	8190751	Identifier	next_component		8190595	0					
ANR	8190752	Identifier	next_component		8190595	1					
ANR	8190753	ExpressionStatement	"memset ( & mat , 0 , sizeof ( mat ) )"	1910:12:66217:66245	8190595	2	True				
ANR	8190754	CallExpression	"memset ( & mat , 0 , sizeof ( mat ) )"		8190595	0					
ANR	8190755	Callee	memset		8190595	0					
ANR	8190756	Identifier	memset		8190595	0					
ANR	8190757	ArgumentList	& mat		8190595	1					
ANR	8190758	Argument	& mat		8190595	0					
ANR	8190759	UnaryOperationExpression	& mat		8190595	0					
ANR	8190760	UnaryOperator	&		8190595	0					
ANR	8190761	Identifier	mat		8190595	1					
ANR	8190762	Argument	0		8190595	1					
ANR	8190763	PrimaryExpression	0		8190595	0					
ANR	8190764	Argument	sizeof ( mat )		8190595	2					
ANR	8190765	SizeofExpression	sizeof ( mat )		8190595	0					
ANR	8190766	Sizeof	sizeof		8190595	0					
ANR	8190767	SizeofOperand	mat		8190595	1					
ANR	8190768	ExpressionStatement	"gs_type42_parse_component ( ( const byte * * ) & next_component , & flags , & mat , NULL , ( const gs_font_type42 * ) plfont -> pfont , & mat )"	1911:12:66281:66517	8190595	3	True				
ANR	8190769	CallExpression	"gs_type42_parse_component ( ( const byte * * ) & next_component , & flags , & mat , NULL , ( const gs_font_type42 * ) plfont -> pfont , & mat )"		8190595	0					
ANR	8190770	Callee	gs_type42_parse_component		8190595	0					
ANR	8190771	Identifier	gs_type42_parse_component		8190595	0					
ANR	8190772	ArgumentList	( const byte * * ) & next_component		8190595	1					
ANR	8190773	Argument	( const byte * * ) & next_component		8190595	0					
ANR	8190774	CastExpression	( const byte * * ) & next_component		8190595	0					
ANR	8190775	CastTarget	const byte * *		8190595	0					
ANR	8190776	UnaryOperationExpression	& next_component		8190595	1					
ANR	8190777	UnaryOperator	&		8190595	0					
ANR	8190778	Identifier	next_component		8190595	1					
ANR	8190779	Argument	& flags		8190595	1					
ANR	8190780	UnaryOperationExpression	& flags		8190595	0					
ANR	8190781	UnaryOperator	&		8190595	0					
ANR	8190782	Identifier	flags		8190595	1					
ANR	8190783	Argument	& mat		8190595	2					
ANR	8190784	UnaryOperationExpression	& mat		8190595	0					
ANR	8190785	UnaryOperator	&		8190595	0					
ANR	8190786	Identifier	mat		8190595	1					
ANR	8190787	Argument	NULL		8190595	3					
ANR	8190788	Identifier	NULL		8190595	0					
ANR	8190789	Argument	( const gs_font_type42 * ) plfont -> pfont		8190595	4					
ANR	8190790	CastExpression	( const gs_font_type42 * ) plfont -> pfont		8190595	0					
ANR	8190791	CastTarget	const gs_font_type42 *		8190595	0					
ANR	8190792	PtrMemberAccess	plfont -> pfont		8190595	1					
ANR	8190793	Identifier	plfont		8190595	0					
ANR	8190794	Identifier	pfont		8190595	1					
ANR	8190795	Argument	& mat		8190595	5					
ANR	8190796	UnaryOperationExpression	& mat		8190595	0					
ANR	8190797	UnaryOperator	&		8190595	0					
ANR	8190798	Identifier	mat		8190595	1					
ANR	8190799	IfStatement	if ( flags & TT_CG_USE_MY_METRICS )		8190595	4					
ANR	8190800	Condition	flags & TT_CG_USE_MY_METRICS	1915:16:66535:66562	8190595	0	True				
ANR	8190801	BitAndExpression	flags & TT_CG_USE_MY_METRICS		8190595	0		&			
ANR	8190802	Identifier	flags		8190595	0					
ANR	8190803	Identifier	TT_CG_USE_MY_METRICS		8190595	1					
ANR	8190804	ExpressionStatement	last_component [ 0 ] &= ~ ( 1 << 1 )	1918:16:66711:66741	8190595	1	True				
ANR	8190805	AssignmentExpression	last_component [ 0 ] &= ~ ( 1 << 1 )		8190595	0		&=			
ANR	8190806	ArrayIndexing	last_component [ 0 ]		8190595	0					
ANR	8190807	Identifier	last_component		8190595	0					
ANR	8190808	PrimaryExpression	0		8190595	1					
ANR	8190809	UnaryOperationExpression	~ ( 1 << 1 )		8190595	1					
ANR	8190810	UnaryOperator	~		8190595	0					
ANR	8190811	ShiftExpression	1 << 1		8190595	1		<<			
ANR	8190812	PrimaryExpression	1		8190595	0					
ANR	8190813	PrimaryExpression	1		8190595	1					
ANR	8190814	Condition	flags & TT_CG_MORE_COMPONENTS	1919:17:66760:66788	8190595	1	True				
ANR	8190815	BitAndExpression	flags & TT_CG_MORE_COMPONENTS		8190595	0		&			
ANR	8190816	Identifier	flags		8190595	0					
ANR	8190817	Identifier	TT_CG_MORE_COMPONENTS		8190595	1					
ANR	8190818	ReturnStatement	return 0 ;	1921:4:66802:66810	8190595	10	True				
ANR	8190819	PrimaryExpression	0		8190595	0					
ANR	8190820	ReturnType	int		8190595	1					
ANR	8190821	Identifier	pl_font_disable_composite_metrics		8190595	2					
ANR	8190822	ParameterList	"pl_font_t * plfont , gs_glyph glyph"		8190595	3					
ANR	8190823	Parameter	pl_font_t * plfont	1861:34:64541:64558	8190595	0	True				
ANR	8190824	ParameterType	pl_font_t *		8190595	0					
ANR	8190825	Identifier	plfont		8190595	1					
ANR	8190826	Parameter	gs_glyph glyph	1861:54:64561:64574	8190595	1	True				
ANR	8190827	ParameterType	gs_glyph		8190595	0					
ANR	8190828	Identifier	glyph		8190595	1					
ANR	8190829	CFGEntryNode	ENTRY		8190595		True				
ANR	8190830	CFGExitNode	EXIT		8190595		True				
ANR	8190831	Symbol	& mat		8190595						
ANR	8190832	Symbol	code		8190595						
ANR	8190833	Symbol	glyph_data . bits . data		8190595						
ANR	8190834	Symbol	next_component		8190595						
ANR	8190835	Symbol	ptcg -> chr		8190595						
ANR	8190836	Symbol	plfont -> char_glyphs		8190595						
ANR	8190837	Symbol	flags		8190595						
ANR	8190838	Symbol	plfont		8190595						
ANR	8190839	Symbol	TT_CG_MORE_COMPONENTS		8190595						
ANR	8190840	Symbol	ptcg -> glyph		8190595						
ANR	8190841	Symbol	is_composite		8190595						
ANR	8190842	Symbol	& flags		8190595						
ANR	8190843	Symbol	* last_component		8190595						
ANR	8190844	Symbol	gs_no_char		8190595						
ANR	8190845	Symbol	ptcg		8190595						
ANR	8190846	Symbol	key		8190595						
ANR	8190847	Symbol	plfont -> char_glyphs . table		8190595						
ANR	8190848	Symbol	glyph_data . bits		8190595						
ANR	8190849	Symbol	last_component		8190595						
ANR	8190850	Symbol	mat		8190595						
ANR	8190851	Symbol	& next_component		8190595						
ANR	8190852	Symbol	NULL		8190595						
ANR	8190853	Symbol	pfont		8190595						
ANR	8190854	Symbol	glyph_data		8190595						
ANR	8190855	Symbol	pfont -> data		8190595						
ANR	8190856	Symbol	TT_CG_USE_MY_METRICS		8190595						
ANR	8190857	Symbol	pl_tt_lookup_char		8190595						
ANR	8190858	Symbol	glyph		8190595						
ANR	8190859	Symbol	* pfont		8190595						
ANR	8190860	Symbol	plfont -> pfont		8190595						
ANR	8190861	Symbol	pfont -> data . get_outline		8190595						
ANR	8190862	Symbol	* plfont		8190595						
ANR	8190863	Symbol	* ptcg		8190595						
ANR	8190864	Symbol	& glyph_data		8190595						
ANR	8190865	Function	pl_font_remove_glyph	1924:0:66884:68399							
ANR	8190866	FunctionDef	"pl_font_remove_glyph (pl_font_t * plfont , gs_glyph glyph)"		8190865	0					
ANR	8190867	CompoundStatement		1926:0:66945:68399	8190865	0					
ANR	8190868	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	1927:4:66951:66981	8190865	0	True				
ANR	8190869	IdentifierDecl	* pfont = plfont -> pfont		8190865	0					
ANR	8190870	IdentifierDeclType	gs_font *		8190865	0					
ANR	8190871	Identifier	pfont		8190865	1					
ANR	8190872	AssignmentExpression	* pfont = plfont -> pfont		8190865	2		=			
ANR	8190873	Identifier	pfont		8190865	0					
ANR	8190874	PtrMemberAccess	plfont -> pfont		8190865	1					
ANR	8190875	Identifier	plfont		8190865	0					
ANR	8190876	Identifier	pfont		8190865	1					
ANR	8190877	IdentifierDeclStatement	gs_glyph key = glyph ;	1928:4:66987:67007	8190865	1	True				
ANR	8190878	IdentifierDecl	key = glyph		8190865	0					
ANR	8190879	IdentifierDeclType	gs_glyph		8190865	0					
ANR	8190880	Identifier	key		8190865	1					
ANR	8190881	AssignmentExpression	key = glyph		8190865	2		=			
ANR	8190882	Identifier	glyph		8190865	0					
ANR	8190883	Identifier	glyph		8190865	1					
ANR	8190884	IdentifierDeclStatement	pl_font_glyph_t * pfg ;	1929:4:67013:67033	8190865	2	True				
ANR	8190885	IdentifierDecl	* pfg		8190865	0					
ANR	8190886	IdentifierDeclType	pl_font_glyph_t *		8190865	0					
ANR	8190887	Identifier	pfg		8190865	1					
ANR	8190888	IfStatement	if ( plfont -> char_glyphs . table )		8190865	3					
ANR	8190889	Condition	plfont -> char_glyphs . table	1932:8:67101:67125	8190865	0	True				
ANR	8190890	MemberAccess	plfont -> char_glyphs . table		8190865	0					
ANR	8190891	PtrMemberAccess	plfont -> char_glyphs		8190865	0					
ANR	8190892	Identifier	plfont		8190865	0					
ANR	8190893	Identifier	char_glyphs		8190865	1					
ANR	8190894	Identifier	table		8190865	1					
ANR	8190895	CompoundStatement		8:8:192:249	8190865	1					
ANR	8190896	IdentifierDeclStatement	"pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , key ) ;"	1933:8:67138:67195	8190865	0	True				
ANR	8190897	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8190865	0					
ANR	8190898	IdentifierDeclType	pl_tt_char_glyph_t *		8190865	0					
ANR	8190899	Identifier	ptcg		8190865	1					
ANR	8190900	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , key )"		8190865	2		=			
ANR	8190901	Identifier	ptcg		8190865	0					
ANR	8190902	CallExpression	"pl_tt_lookup_char ( plfont , key )"		8190865	1					
ANR	8190903	Callee	pl_tt_lookup_char		8190865	0					
ANR	8190904	Identifier	pl_tt_lookup_char		8190865	0					
ANR	8190905	ArgumentList	plfont		8190865	1					
ANR	8190906	Argument	plfont		8190865	0					
ANR	8190907	Identifier	plfont		8190865	0					
ANR	8190908	Argument	key		8190865	1					
ANR	8190909	Identifier	key		8190865	0					
ANR	8190910	IfStatement	if ( ptcg -> chr == gs_no_char )		8190865	1					
ANR	8190911	Condition	ptcg -> chr == gs_no_char	1935:12:67210:67232	8190865	0	True				
ANR	8190912	EqualityExpression	ptcg -> chr == gs_no_char		8190865	0		==			
ANR	8190913	PtrMemberAccess	ptcg -> chr		8190865	0					
ANR	8190914	Identifier	ptcg		8190865	0					
ANR	8190915	Identifier	chr		8190865	1					
ANR	8190916	Identifier	gs_no_char		8190865	1					
ANR	8190917	ReturnStatement	return 0 ;	1936:12:67247:67255	8190865	1	True				
ANR	8190918	PrimaryExpression	0		8190865	0					
ANR	8190919	ExpressionStatement	key = ptcg -> glyph	1937:8:67265:67282	8190865	2	True				
ANR	8190920	AssignmentExpression	key = ptcg -> glyph		8190865	0		=			
ANR	8190921	Identifier	key		8190865	0					
ANR	8190922	PtrMemberAccess	ptcg -> glyph		8190865	1					
ANR	8190923	Identifier	ptcg		8190865	0					
ANR	8190924	Identifier	glyph		8190865	1					
ANR	8190925	ExpressionStatement	ptcg -> chr = gs_no_char	1938:8:67292:67314	8190865	3	True				
ANR	8190926	AssignmentExpression	ptcg -> chr = gs_no_char		8190865	0		=			
ANR	8190927	PtrMemberAccess	ptcg -> chr		8190865	0					
ANR	8190928	Identifier	ptcg		8190865	0					
ANR	8190929	Identifier	chr		8190865	1					
ANR	8190930	Identifier	gs_no_char		8190865	1					
ANR	8190931	ExpressionStatement	ptcg -> glyph = 1	1939:8:67324:67339	8190865	4	True				
ANR	8190932	AssignmentExpression	ptcg -> glyph = 1		8190865	0		=			
ANR	8190933	PtrMemberAccess	ptcg -> glyph		8190865	0					
ANR	8190934	Identifier	ptcg		8190865	0					
ANR	8190935	Identifier	glyph		8190865	1					
ANR	8190936	PrimaryExpression	1		8190865	1					
ANR	8190937	ExpressionStatement	plfont -> char_glyphs . used --	1940:8:67378:67404	8190865	5	True				
ANR	8190938	PostIncDecOperationExpression	plfont -> char_glyphs . used --		8190865	0					
ANR	8190939	MemberAccess	plfont -> char_glyphs . used		8190865	0					
ANR	8190940	PtrMemberAccess	plfont -> char_glyphs		8190865	0					
ANR	8190941	Identifier	plfont		8190865	0					
ANR	8190942	Identifier	char_glyphs		8190865	1					
ANR	8190943	Identifier	used		8190865	1					
ANR	8190944	IncDec	--		8190865	1					
ANR	8190945	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	1942:8:67470:67516	8190865	6	True				
ANR	8190946	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8190865	0					
ANR	8190947	Callee	pl_font_glyph_width_cache_remove_nodes		8190865	0					
ANR	8190948	Identifier	pl_font_glyph_width_cache_remove_nodes		8190865	0					
ANR	8190949	ArgumentList	plfont		8190865	1					
ANR	8190950	Argument	plfont		8190865	0					
ANR	8190951	Identifier	plfont		8190865	0					
ANR	8190952	IfStatement	if ( plfont -> glyphs . table == 0 )		8190865	4					
ANR	8190953	Condition	plfont -> glyphs . table == 0	1945:8:67596:67620	8190865	0	True				
ANR	8190954	EqualityExpression	plfont -> glyphs . table == 0		8190865	0		==			
ANR	8190955	MemberAccess	plfont -> glyphs . table		8190865	0					
ANR	8190956	PtrMemberAccess	plfont -> glyphs		8190865	0					
ANR	8190957	Identifier	plfont		8190865	0					
ANR	8190958	Identifier	glyphs		8190865	1					
ANR	8190959	Identifier	table		8190865	1					
ANR	8190960	PrimaryExpression	0		8190865	1					
ANR	8190961	ReturnStatement	return 0 ;	1946:8:67631:67639	8190865	1	True				
ANR	8190962	PrimaryExpression	0		8190865	0					
ANR	8190963	ExpressionStatement	"pfg = pl_font_lookup_glyph ( plfont , key )"	1947:4:67645:67684	8190865	5	True				
ANR	8190964	AssignmentExpression	"pfg = pl_font_lookup_glyph ( plfont , key )"		8190865	0		=			
ANR	8190965	Identifier	pfg		8190865	0					
ANR	8190966	CallExpression	"pl_font_lookup_glyph ( plfont , key )"		8190865	1					
ANR	8190967	Callee	pl_font_lookup_glyph		8190865	0					
ANR	8190968	Identifier	pl_font_lookup_glyph		8190865	0					
ANR	8190969	ArgumentList	plfont		8190865	1					
ANR	8190970	Argument	plfont		8190865	0					
ANR	8190971	Identifier	plfont		8190865	0					
ANR	8190972	Argument	key		8190865	1					
ANR	8190973	Identifier	key		8190865	0					
ANR	8190974	IfStatement	if ( pfg -> data == 0 )		8190865	6					
ANR	8190975	Condition	pfg -> data == 0	1948:8:67694:67707	8190865	0	True				
ANR	8190976	EqualityExpression	pfg -> data == 0		8190865	0		==			
ANR	8190977	PtrMemberAccess	pfg -> data		8190865	0					
ANR	8190978	Identifier	pfg		8190865	0					
ANR	8190979	Identifier	data		8190865	1					
ANR	8190980	PrimaryExpression	0		8190865	1					
ANR	8190981	ReturnStatement	return 0 ;	1949:8:67718:67726	8190865	1	True				
ANR	8190982	PrimaryExpression	0		8190865	0					
ANR	8190983	CompoundStatement		26:8:913:934	8190865	7					
ANR	8190984	IdentifierDeclStatement	font_glyph_t match_fg ;	1951:8:67859:67880	8190865	0	True				
ANR	8190985	IdentifierDecl	match_fg		8190865	0					
ANR	8190986	IdentifierDeclType	font_glyph_t		8190865	0					
ANR	8190987	Identifier	match_fg		8190865	1					
ANR	8190988	ExpressionStatement	match_fg . font = pfont	1953:8:67891:67912	8190865	1	True				
ANR	8190989	AssignmentExpression	match_fg . font = pfont		8190865	0		=			
ANR	8190990	MemberAccess	match_fg . font		8190865	0					
ANR	8190991	Identifier	match_fg		8190865	0					
ANR	8190992	Identifier	font		8190865	1					
ANR	8190993	Identifier	pfont		8190865	1					
ANR	8190994	ExpressionStatement	match_fg . glyph = key	1954:8:67922:67942	8190865	2	True				
ANR	8190995	AssignmentExpression	match_fg . glyph = key		8190865	0		=			
ANR	8190996	MemberAccess	match_fg . glyph		8190865	0					
ANR	8190997	Identifier	match_fg		8190865	0					
ANR	8190998	Identifier	glyph		8190865	1					
ANR	8190999	Identifier	key		8190865	1					
ANR	8191000	ExpressionStatement	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"	1955:8:67952:68062	8190865	3	True				
ANR	8191001	CallExpression	"gx_purge_selected_cached_chars ( pfont -> dir , match_font_glyph , & match_fg )"		8190865	0					
ANR	8191002	Callee	gx_purge_selected_cached_chars		8190865	0					
ANR	8191003	Identifier	gx_purge_selected_cached_chars		8190865	0					
ANR	8191004	ArgumentList	pfont -> dir		8190865	1					
ANR	8191005	Argument	pfont -> dir		8190865	0					
ANR	8191006	PtrMemberAccess	pfont -> dir		8190865	0					
ANR	8191007	Identifier	pfont		8190865	0					
ANR	8191008	Identifier	dir		8190865	1					
ANR	8191009	Argument	match_font_glyph		8190865	1					
ANR	8191010	Identifier	match_font_glyph		8190865	0					
ANR	8191011	Argument	& match_fg		8190865	2					
ANR	8191012	UnaryOperationExpression	& match_fg		8190865	0					
ANR	8191013	UnaryOperator	&		8190865	0					
ANR	8191014	Identifier	match_fg		8190865	1					
ANR	8191015	ExpressionStatement	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_remove_glyph(data)"" )"	1957:8:68072:68173	8190865	4	True				
ANR	8191016	CallExpression	"gs_free_object ( pfont -> memory , ( void * ) pfg -> data , ""pl_font_remove_glyph(data)"" )"		8190865	0					
ANR	8191017	Callee	gs_free_object		8190865	0					
ANR	8191018	Identifier	gs_free_object		8190865	0					
ANR	8191019	ArgumentList	pfont -> memory		8190865	1					
ANR	8191020	Argument	pfont -> memory		8190865	0					
ANR	8191021	PtrMemberAccess	pfont -> memory		8190865	0					
ANR	8191022	Identifier	pfont		8190865	0					
ANR	8191023	Identifier	memory		8190865	1					
ANR	8191024	Argument	( void * ) pfg -> data		8190865	1					
ANR	8191025	CastExpression	( void * ) pfg -> data		8190865	0					
ANR	8191026	CastTarget	void *		8190865	0					
ANR	8191027	PtrMemberAccess	pfg -> data		8190865	1					
ANR	8191028	Identifier	pfg		8190865	0					
ANR	8191029	Identifier	data		8190865	1					
ANR	8191030	Argument	"""pl_font_remove_glyph(data)"""		8190865	2					
ANR	8191031	PrimaryExpression	"""pl_font_remove_glyph(data)"""		8190865	0					
ANR	8191032	ExpressionStatement	pfg -> data = 0	1960:4:68185:68198	8190865	8	True				
ANR	8191033	AssignmentExpression	pfg -> data = 0		8190865	0		=			
ANR	8191034	PtrMemberAccess	pfg -> data		8190865	0					
ANR	8191035	Identifier	pfg		8190865	0					
ANR	8191036	Identifier	data		8190865	1					
ANR	8191037	PrimaryExpression	0		8190865	1					
ANR	8191038	ExpressionStatement	pfg -> glyph = 1	1961:4:68204:68218	8190865	9	True				
ANR	8191039	AssignmentExpression	pfg -> glyph = 1		8190865	0		=			
ANR	8191040	PtrMemberAccess	pfg -> glyph		8190865	0					
ANR	8191041	Identifier	pfg		8190865	0					
ANR	8191042	Identifier	glyph		8190865	1					
ANR	8191043	PrimaryExpression	1		8190865	1					
ANR	8191044	ExpressionStatement	plfont -> glyphs . used --	1962:4:68258:68279	8190865	10	True				
ANR	8191045	PostIncDecOperationExpression	plfont -> glyphs . used --		8190865	0					
ANR	8191046	MemberAccess	plfont -> glyphs . used		8190865	0					
ANR	8191047	PtrMemberAccess	plfont -> glyphs		8190865	0					
ANR	8191048	Identifier	plfont		8190865	0					
ANR	8191049	Identifier	glyphs		8190865	1					
ANR	8191050	Identifier	used		8190865	1					
ANR	8191051	IncDec	--		8190865	1					
ANR	8191052	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	1964:4:68337:68383	8190865	11	True				
ANR	8191053	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8190865	0					
ANR	8191054	Callee	pl_font_glyph_width_cache_remove_nodes		8190865	0					
ANR	8191055	Identifier	pl_font_glyph_width_cache_remove_nodes		8190865	0					
ANR	8191056	ArgumentList	plfont		8190865	1					
ANR	8191057	Argument	plfont		8190865	0					
ANR	8191058	Identifier	plfont		8190865	0					
ANR	8191059	ReturnStatement	return 1 ;	1965:4:68389:68397	8190865	12	True				
ANR	8191060	PrimaryExpression	1		8190865	0					
ANR	8191061	ReturnType	int		8190865	1					
ANR	8191062	Identifier	pl_font_remove_glyph		8190865	2					
ANR	8191063	ParameterList	"pl_font_t * plfont , gs_glyph glyph"		8190865	3					
ANR	8191064	Parameter	pl_font_t * plfont	1925:21:66909:66926	8190865	0	True				
ANR	8191065	ParameterType	pl_font_t *		8190865	0					
ANR	8191066	Identifier	plfont		8190865	1					
ANR	8191067	Parameter	gs_glyph glyph	1925:41:66929:66942	8190865	1	True				
ANR	8191068	ParameterType	gs_glyph		8190865	0					
ANR	8191069	Identifier	glyph		8190865	1					
ANR	8191070	CFGEntryNode	ENTRY		8190865		True				
ANR	8191071	CFGExitNode	EXIT		8190865		True				
ANR	8191072	Symbol	plfont -> char_glyphs . used		8190865						
ANR	8191073	Symbol	match_fg . font		8190865						
ANR	8191074	Symbol	pfont -> memory		8190865						
ANR	8191075	Symbol	pl_font_lookup_glyph		8190865						
ANR	8191076	Symbol	ptcg -> chr		8190865						
ANR	8191077	Symbol	match_font_glyph		8190865						
ANR	8191078	Symbol	plfont -> char_glyphs		8190865						
ANR	8191079	Symbol	match_fg		8190865						
ANR	8191080	Symbol	plfont		8190865						
ANR	8191081	Symbol	pfg -> glyph		8190865						
ANR	8191082	Symbol	plfont -> glyphs . used		8190865						
ANR	8191083	Symbol	& match_fg		8190865						
ANR	8191084	Symbol	ptcg -> glyph		8190865						
ANR	8191085	Symbol	gs_no_char		8190865						
ANR	8191086	Symbol	* pfg		8190865						
ANR	8191087	Symbol	ptcg		8190865						
ANR	8191088	Symbol	key		8190865						
ANR	8191089	Symbol	plfont -> char_glyphs . table		8190865						
ANR	8191090	Symbol	plfont -> glyphs . table		8190865						
ANR	8191091	Symbol	pfont		8190865						
ANR	8191092	Symbol	match_fg . glyph		8190865						
ANR	8191093	Symbol	pl_tt_lookup_char		8190865						
ANR	8191094	Symbol	pfg		8190865						
ANR	8191095	Symbol	glyph		8190865						
ANR	8191096	Symbol	* pfont		8190865						
ANR	8191097	Symbol	plfont -> pfont		8190865						
ANR	8191098	Symbol	pfont -> dir		8190865						
ANR	8191099	Symbol	* plfont		8190865						
ANR	8191100	Symbol	plfont -> glyphs		8190865						
ANR	8191101	Symbol	pfg -> data		8190865						
ANR	8191102	Symbol	* ptcg		8190865						
