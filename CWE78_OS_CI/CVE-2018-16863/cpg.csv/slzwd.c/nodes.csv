command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9531400	File	data/converged/CVE-2018-16863_ghostpdl/slzwd.c								
ANR	9531401	ClassDef	lzw_decode_s	37:0:1264:1385							
ANR	9531402	DeclStmt									
ANR	9531403	Decl							byte	byte	datum
ANR	9531404	DeclStmt									
ANR	9531405	Decl							byte	byte	len
ANR	9531406	DeclStmt									
ANR	9531407	Decl							ushort	ushort	prefix
ANR	9531408	Function	s_LZWD_reset	51:0:1762:2330							
ANR	9531409	FunctionDef	s_LZWD_reset (stream_state * st)		9531408	0					
ANR	9531410	CompoundStatement		53:0:1805:2330	9531408	0					
ANR	9531411	Statement	stream_LZW_state	54:4:1811:1826	9531408	0	True				
ANR	9531412	Statement	*	54:21:1828:1828	9531408	1	True				
ANR	9531413	Statement	const	54:22:1829:1833	9531408	2	True				
ANR	9531414	ExpressionStatement	ss = ( stream_LZW_state * ) st	54:28:1835:1863	9531408	3	True				
ANR	9531415	AssignmentExpression	ss = ( stream_LZW_state * ) st		9531408	0		=			
ANR	9531416	Identifier	ss		9531408	0					
ANR	9531417	CastExpression	( stream_LZW_state * ) st		9531408	1					
ANR	9531418	CastTarget	stream_LZW_state *		9531408	0					
ANR	9531419	Identifier	st		9531408	1					
ANR	9531420	Statement	register	55:4:1869:1876	9531408	4	True				
ANR	9531421	IdentifierDeclStatement	lzw_decode * dc = ss -> table . decode ;	55:13:1878:1911	9531408	5	True				
ANR	9531422	IdentifierDecl	* dc = ss -> table . decode		9531408	0					
ANR	9531423	IdentifierDeclType	lzw_decode *		9531408	0					
ANR	9531424	Identifier	dc		9531408	1					
ANR	9531425	AssignmentExpression	* dc = ss -> table . decode		9531408	2		=			
ANR	9531426	Identifier	dc		9531408	0					
ANR	9531427	MemberAccess	ss -> table . decode		9531408	1					
ANR	9531428	PtrMemberAccess	ss -> table		9531408	0					
ANR	9531429	Identifier	ss		9531408	0					
ANR	9531430	Identifier	table		9531408	1					
ANR	9531431	Identifier	decode		9531408	1					
ANR	9531432	Statement	register	56:4:1917:1924	9531408	6	True				
ANR	9531433	IdentifierDeclStatement	int i ;	56:13:1926:1931	9531408	7	True				
ANR	9531434	IdentifierDecl	i		9531408	0					
ANR	9531435	IdentifierDeclType	int		9531408	0					
ANR	9531436	Identifier	i		9531408	1					
ANR	9531437	IdentifierDeclStatement	uint code_escape = 1 << ss -> InitialCodeLength ;	57:4:1937:1982	9531408	8	True				
ANR	9531438	IdentifierDecl	code_escape = 1 << ss -> InitialCodeLength		9531408	0					
ANR	9531439	IdentifierDeclType	uint		9531408	0					
ANR	9531440	Identifier	code_escape		9531408	1					
ANR	9531441	AssignmentExpression	code_escape = 1 << ss -> InitialCodeLength		9531408	2		=			
ANR	9531442	Identifier	code_escape		9531408	0					
ANR	9531443	ShiftExpression	1 << ss -> InitialCodeLength		9531408	1		<<			
ANR	9531444	PrimaryExpression	1		9531408	0					
ANR	9531445	PtrMemberAccess	ss -> InitialCodeLength		9531408	1					
ANR	9531446	Identifier	ss		9531408	0					
ANR	9531447	Identifier	InitialCodeLength		9531408	1					
ANR	9531448	ExpressionStatement	ss -> bits_left = 0	59:4:1989:2006	9531408	9	True				
ANR	9531449	AssignmentExpression	ss -> bits_left = 0		9531408	0		=			
ANR	9531450	PtrMemberAccess	ss -> bits_left		9531408	0					
ANR	9531451	Identifier	ss		9531408	0					
ANR	9531452	Identifier	bits_left		9531408	1					
ANR	9531453	PrimaryExpression	0		9531408	1					
ANR	9531454	ExpressionStatement	ss -> bytes_left = 0	60:4:2012:2030	9531408	10	True				
ANR	9531455	AssignmentExpression	ss -> bytes_left = 0		9531408	0		=			
ANR	9531456	PtrMemberAccess	ss -> bytes_left		9531408	0					
ANR	9531457	Identifier	ss		9531408	0					
ANR	9531458	Identifier	bytes_left		9531408	1					
ANR	9531459	PrimaryExpression	0		9531408	1					
ANR	9531460	ExpressionStatement	ss -> next_code = code_0	61:4:2036:2058	9531408	11	True				
ANR	9531461	AssignmentExpression	ss -> next_code = code_0		9531408	0		=			
ANR	9531462	PtrMemberAccess	ss -> next_code		9531408	0					
ANR	9531463	Identifier	ss		9531408	0					
ANR	9531464	Identifier	next_code		9531408	1					
ANR	9531465	Identifier	code_0		9531408	1					
ANR	9531466	ExpressionStatement	ss -> code_size = ss -> InitialCodeLength + 1	62:4:2064:2105	9531408	12	True				
ANR	9531467	AssignmentExpression	ss -> code_size = ss -> InitialCodeLength + 1		9531408	0		=			
ANR	9531468	PtrMemberAccess	ss -> code_size		9531408	0					
ANR	9531469	Identifier	ss		9531408	0					
ANR	9531470	Identifier	code_size		9531408	1					
ANR	9531471	AdditiveExpression	ss -> InitialCodeLength + 1		9531408	1		+			
ANR	9531472	PtrMemberAccess	ss -> InitialCodeLength		9531408	0					
ANR	9531473	Identifier	ss		9531408	0					
ANR	9531474	Identifier	InitialCodeLength		9531408	1					
ANR	9531475	PrimaryExpression	1		9531408	1					
ANR	9531476	ExpressionStatement	ss -> prev_code = - 1	63:4:2111:2129	9531408	13	True				
ANR	9531477	AssignmentExpression	ss -> prev_code = - 1		9531408	0		=			
ANR	9531478	PtrMemberAccess	ss -> prev_code		9531408	0					
ANR	9531479	Identifier	ss		9531408	0					
ANR	9531480	Identifier	prev_code		9531408	1					
ANR	9531481	UnaryOperationExpression	- 1		9531408	1					
ANR	9531482	UnaryOperator	-		9531408	0					
ANR	9531483	PrimaryExpression	1		9531408	1					
ANR	9531484	ExpressionStatement	ss -> copy_code = - 1	64:4:2135:2153	9531408	14	True				
ANR	9531485	AssignmentExpression	ss -> copy_code = - 1		9531408	0		=			
ANR	9531486	PtrMemberAccess	ss -> copy_code		9531408	0					
ANR	9531487	Identifier	ss		9531408	0					
ANR	9531488	Identifier	copy_code		9531408	1					
ANR	9531489	UnaryOperationExpression	- 1		9531408	1					
ANR	9531490	UnaryOperator	-		9531408	0					
ANR	9531491	PrimaryExpression	1		9531408	1					
ANR	9531492	ExpressionStatement	dc [ code_reset ] . len = 255	65:4:2159:2183	9531408	15	True				
ANR	9531493	AssignmentExpression	dc [ code_reset ] . len = 255		9531408	0		=			
ANR	9531494	MemberAccess	dc [ code_reset ] . len		9531408	0					
ANR	9531495	ArrayIndexing	dc [ code_reset ]		9531408	0					
ANR	9531496	Identifier	dc		9531408	0					
ANR	9531497	Identifier	code_reset		9531408	1					
ANR	9531498	Identifier	len		9531408	1					
ANR	9531499	PrimaryExpression	255		9531408	1					
ANR	9531500	ExpressionStatement	dc [ code_eod ] . len = 255	66:4:2189:2211	9531408	16	True				
ANR	9531501	AssignmentExpression	dc [ code_eod ] . len = 255		9531408	0		=			
ANR	9531502	MemberAccess	dc [ code_eod ] . len		9531408	0					
ANR	9531503	ArrayIndexing	dc [ code_eod ]		9531408	0					
ANR	9531504	Identifier	dc		9531408	0					
ANR	9531505	Identifier	code_eod		9531408	1					
ANR	9531506	Identifier	len		9531408	1					
ANR	9531507	PrimaryExpression	255		9531408	1					
ANR	9531508	ForStatement	"for ( i = 0 ; i < code_escape ; i ++ , dc ++ )"		9531408	17					
ANR	9531509	ForInit	i = 0 ;	67:9:2222:2227	9531408	0	True				
ANR	9531510	AssignmentExpression	i = 0		9531408	0		=			
ANR	9531511	Identifier	i		9531408	0					
ANR	9531512	PrimaryExpression	0		9531408	1					
ANR	9531513	Condition	i < code_escape	67:16:2229:2243	9531408	1	True				
ANR	9531514	RelationalExpression	i < code_escape		9531408	0		<			
ANR	9531515	Identifier	i		9531408	0					
ANR	9531516	Identifier	code_escape		9531408	1					
ANR	9531517	Expression	"i ++ , dc ++"	67:33:2246:2254	9531408	2	True				
ANR	9531518	PostIncDecOperationExpression	i ++		9531408	0					
ANR	9531519	Identifier	i		9531408	0					
ANR	9531520	IncDec	++		9531408	1					
ANR	9531521	PostIncDecOperationExpression	dc ++		9531408	1					
ANR	9531522	Identifier	dc		9531408	0					
ANR	9531523	IncDec	++		9531408	1					
ANR	9531524	ExpressionStatement	"dc -> datum = i , dc -> len = 1 , dc -> prefix = code_eod"	68:8:2265:2314	9531408	3	True				
ANR	9531525	Expression	"dc -> datum = i , dc -> len = 1 , dc -> prefix = code_eod"		9531408	0					
ANR	9531526	AssignmentExpression	dc -> datum = i		9531408	0		=			
ANR	9531527	PtrMemberAccess	dc -> datum		9531408	0					
ANR	9531528	Identifier	dc		9531408	0					
ANR	9531529	Identifier	datum		9531408	1					
ANR	9531530	Identifier	i		9531408	1					
ANR	9531531	Expression	"dc -> len = 1 , dc -> prefix = code_eod"		9531408	1					
ANR	9531532	AssignmentExpression	dc -> len = 1		9531408	0		=			
ANR	9531533	PtrMemberAccess	dc -> len		9531408	0					
ANR	9531534	Identifier	dc		9531408	0					
ANR	9531535	Identifier	len		9531408	1					
ANR	9531536	PrimaryExpression	1		9531408	1					
ANR	9531537	AssignmentExpression	dc -> prefix = code_eod		9531408	1		=			
ANR	9531538	PtrMemberAccess	dc -> prefix		9531408	0					
ANR	9531539	Identifier	dc		9531408	0					
ANR	9531540	Identifier	prefix		9531408	1					
ANR	9531541	Identifier	code_eod		9531408	1					
ANR	9531542	ReturnStatement	return 0 ;	69:4:2320:2328	9531408	18	True				
ANR	9531543	PrimaryExpression	0		9531408	0					
ANR	9531544	ReturnType	static int		9531408	1					
ANR	9531545	Identifier	s_LZWD_reset		9531408	2					
ANR	9531546	ParameterList	stream_state * st		9531408	3					
ANR	9531547	Parameter	stream_state * st	52:13:1786:1802	9531408	0	True				
ANR	9531548	ParameterType	stream_state *		9531408	0					
ANR	9531549	Identifier	st		9531408	1					
ANR	9531550	CFGEntryNode	ENTRY		9531408		True				
ANR	9531551	CFGExitNode	EXIT		9531408		True				
ANR	9531552	Symbol	* ss		9531408						
ANR	9531553	Symbol	code_reset		9531408						
ANR	9531554	Symbol	ss -> table		9531408						
ANR	9531555	Symbol	ss -> code_size		9531408						
ANR	9531556	Symbol	* code_reset		9531408						
ANR	9531557	Symbol	ss -> bytes_left		9531408						
ANR	9531558	Symbol	ss -> bits_left		9531408						
ANR	9531559	Symbol	ss -> copy_code		9531408						
ANR	9531560	Symbol	ss -> table . decode		9531408						
ANR	9531561	Symbol	dc [ code_eod ] . len		9531408						
ANR	9531562	Symbol	ss		9531408						
ANR	9531563	Symbol	code_eod		9531408						
ANR	9531564	Symbol	st		9531408						
ANR	9531565	Symbol	code_0		9531408						
ANR	9531566	Symbol	ss -> prev_code		9531408						
ANR	9531567	Symbol	* dc		9531408						
ANR	9531568	Symbol	i		9531408						
ANR	9531569	Symbol	dc -> datum		9531408						
ANR	9531570	Symbol	ss -> next_code		9531408						
ANR	9531571	Symbol	dc -> prefix		9531408						
ANR	9531572	Symbol	code_escape		9531408						
ANR	9531573	Symbol	ss -> InitialCodeLength		9531408						
ANR	9531574	Symbol	dc [ code_reset ] . len		9531408						
ANR	9531575	Symbol	dc -> len		9531408						
ANR	9531576	Symbol	* code_eod		9531408						
ANR	9531577	Symbol	dc		9531408						
ANR	9531578	Function	s_LZWD_init	71:0:2332:2760							
ANR	9531579	FunctionDef	s_LZWD_init (stream_state * st)		9531578	0					
ANR	9531580	CompoundStatement		73:0:2374:2760	9531578	0					
ANR	9531581	Statement	stream_LZW_state	74:4:2380:2395	9531578	0	True				
ANR	9531582	Statement	*	74:21:2397:2397	9531578	1	True				
ANR	9531583	Statement	const	74:22:2398:2402	9531578	2	True				
ANR	9531584	ExpressionStatement	ss = ( stream_LZW_state * ) st	74:28:2404:2432	9531578	3	True				
ANR	9531585	AssignmentExpression	ss = ( stream_LZW_state * ) st		9531578	0		=			
ANR	9531586	Identifier	ss		9531578	0					
ANR	9531587	CastExpression	( stream_LZW_state * ) st		9531578	1					
ANR	9531588	CastTarget	stream_LZW_state *		9531578	0					
ANR	9531589	Identifier	st		9531578	1					
ANR	9531590	IdentifierDeclStatement	"lzw_decode * dc = gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" ) ;"	75:4:2438:2619	9531578	4	True				
ANR	9531591	IdentifierDecl	"* dc = gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" )"		9531578	0					
ANR	9531592	IdentifierDeclType	lzw_decode *		9531578	0					
ANR	9531593	Identifier	dc		9531578	1					
ANR	9531594	AssignmentExpression	"* dc = gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" )"		9531578	2		=			
ANR	9531595	Identifier	dc		9531578	0					
ANR	9531596	CallExpression	"gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" )"		9531578	1					
ANR	9531597	Callee	gs_alloc_struct_array		9531578	0					
ANR	9531598	Identifier	gs_alloc_struct_array		9531578	0					
ANR	9531599	ArgumentList	st -> memory		9531578	1					
ANR	9531600	Argument	st -> memory		9531578	0					
ANR	9531601	PtrMemberAccess	st -> memory		9531578	0					
ANR	9531602	Identifier	st		9531578	0					
ANR	9531603	Identifier	memory		9531578	1					
ANR	9531604	Argument	lzw_decode_max + 1		9531578	1					
ANR	9531605	AdditiveExpression	lzw_decode_max + 1		9531578	0		+			
ANR	9531606	Identifier	lzw_decode_max		9531578	0					
ANR	9531607	PrimaryExpression	1		9531578	1					
ANR	9531608	Argument	lzw_decode		9531578	2					
ANR	9531609	Identifier	lzw_decode		9531578	0					
ANR	9531610	Argument	& st_lzw_decode_element		9531578	3					
ANR	9531611	UnaryOperationExpression	& st_lzw_decode_element		9531578	0					
ANR	9531612	UnaryOperator	&		9531578	0					
ANR	9531613	Identifier	st_lzw_decode_element		9531578	1					
ANR	9531614	Argument	"""LZWDecode(init)"""		9531578	4					
ANR	9531615	PrimaryExpression	"""LZWDecode(init)"""		9531578	0					
ANR	9531616	IfStatement	if ( dc == 0 )		9531578	5					
ANR	9531617	Condition	dc == 0	80:8:2630:2636	9531578	0	True				
ANR	9531618	EqualityExpression	dc == 0		9531578	0		==			
ANR	9531619	Identifier	dc		9531578	0					
ANR	9531620	PrimaryExpression	0		9531578	1					
ANR	9531621	ReturnStatement	return ERRC ;	81:8:2647:2658	9531578	1	True				
ANR	9531622	Identifier	ERRC		9531578	0					
ANR	9531623	ExpressionStatement	ss -> table . decode = dc	83:4:2686:2707	9531578	6	True				
ANR	9531624	AssignmentExpression	ss -> table . decode = dc		9531578	0		=			
ANR	9531625	MemberAccess	ss -> table . decode		9531578	0					
ANR	9531626	PtrMemberAccess	ss -> table		9531578	0					
ANR	9531627	Identifier	ss		9531578	0					
ANR	9531628	Identifier	table		9531578	1					
ANR	9531629	Identifier	decode		9531578	1					
ANR	9531630	Identifier	dc		9531578	1					
ANR	9531631	ExpressionStatement	ss -> min_left = 1	84:4:2713:2729	9531578	7	True				
ANR	9531632	AssignmentExpression	ss -> min_left = 1		9531578	0		=			
ANR	9531633	PtrMemberAccess	ss -> min_left		9531578	0					
ANR	9531634	Identifier	ss		9531578	0					
ANR	9531635	Identifier	min_left		9531578	1					
ANR	9531636	PrimaryExpression	1		9531578	1					
ANR	9531637	ReturnStatement	return s_LZWD_reset ( st ) ;	85:4:2735:2758	9531578	8	True				
ANR	9531638	CallExpression	s_LZWD_reset ( st )		9531578	0					
ANR	9531639	Callee	s_LZWD_reset		9531578	0					
ANR	9531640	Identifier	s_LZWD_reset		9531578	0					
ANR	9531641	ArgumentList	st		9531578	1					
ANR	9531642	Argument	st		9531578	0					
ANR	9531643	Identifier	st		9531578	0					
ANR	9531644	ReturnType	static int		9531578	1					
ANR	9531645	Identifier	s_LZWD_init		9531578	2					
ANR	9531646	ParameterList	stream_state * st		9531578	3					
ANR	9531647	Parameter	stream_state * st	72:12:2355:2371	9531578	0	True				
ANR	9531648	ParameterType	stream_state *		9531578	0					
ANR	9531649	Identifier	st		9531578	1					
ANR	9531650	CFGEntryNode	ENTRY		9531578		True				
ANR	9531651	CFGExitNode	EXIT		9531578		True				
ANR	9531652	Symbol	ss		9531578						
ANR	9531653	Symbol	st		9531578						
ANR	9531654	Symbol	& st_lzw_decode_element		9531578						
ANR	9531655	Symbol	* st		9531578						
ANR	9531656	Symbol	lzw_decode_max		9531578						
ANR	9531657	Symbol	* ss		9531578						
ANR	9531658	Symbol	st -> memory		9531578						
ANR	9531659	Symbol	ss -> min_left		9531578						
ANR	9531660	Symbol	lzw_decode		9531578						
ANR	9531661	Symbol	ss -> table		9531578						
ANR	9531662	Symbol	ERRC		9531578						
ANR	9531663	Symbol	ss -> table . decode		9531578						
ANR	9531664	Symbol	gs_alloc_struct_array		9531578						
ANR	9531665	Symbol	dc		9531578						
ANR	9531666	Symbol	s_LZWD_reset		9531578						
ANR	9531667	Function	s_LZWD_process	89:0:2786:13676							
ANR	9531668	FunctionDef	"s_LZWD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9531667	0					
ANR	9531669	CompoundStatement		92:0:2908:13676	9531667	0					
ANR	9531670	Statement	stream_LZW_state	93:4:2914:2929	9531667	0	True				
ANR	9531671	Statement	*	93:21:2931:2931	9531667	1	True				
ANR	9531672	Statement	const	93:22:2932:2936	9531667	2	True				
ANR	9531673	ExpressionStatement	ss = ( stream_LZW_state * ) st	93:28:2938:2966	9531667	3	True				
ANR	9531674	AssignmentExpression	ss = ( stream_LZW_state * ) st		9531667	0		=			
ANR	9531675	Identifier	ss		9531667	0					
ANR	9531676	CastExpression	( stream_LZW_state * ) st		9531667	1					
ANR	9531677	CastTarget	stream_LZW_state *		9531667	0					
ANR	9531678	Identifier	st		9531667	1					
ANR	9531679	Statement	register	94:4:2972:2979	9531667	4	True				
ANR	9531680	IdentifierDeclStatement	const byte * p = pr -> ptr ;	94:13:2981:3004	9531667	5	True				
ANR	9531681	IdentifierDecl	* p = pr -> ptr		9531667	0					
ANR	9531682	IdentifierDeclType	const byte *		9531667	0					
ANR	9531683	Identifier	p		9531667	1					
ANR	9531684	AssignmentExpression	* p = pr -> ptr		9531667	2		=			
ANR	9531685	Identifier	p		9531667	0					
ANR	9531686	PtrMemberAccess	pr -> ptr		9531667	1					
ANR	9531687	Identifier	pr		9531667	0					
ANR	9531688	Identifier	ptr		9531667	1					
ANR	9531689	Statement	register	95:4:3010:3017	9531667	6	True				
ANR	9531690	IdentifierDeclStatement	byte * q = pw -> ptr ;	95:13:3019:3036	9531667	7	True				
ANR	9531691	IdentifierDecl	* q = pw -> ptr		9531667	0					
ANR	9531692	IdentifierDeclType	byte *		9531667	0					
ANR	9531693	Identifier	q		9531667	1					
ANR	9531694	AssignmentExpression	* q = pw -> ptr		9531667	2		=			
ANR	9531695	Identifier	q		9531667	0					
ANR	9531696	PtrMemberAccess	pw -> ptr		9531667	1					
ANR	9531697	Identifier	pw		9531667	0					
ANR	9531698	Identifier	ptr		9531667	1					
ANR	9531699	IdentifierDeclStatement	byte * q0 = q ;	98:4:3056:3068	9531667	8	True				
ANR	9531700	IdentifierDecl	* q0 = q		9531667	0					
ANR	9531701	IdentifierDeclType	byte *		9531667	0					
ANR	9531702	Identifier	q0		9531667	1					
ANR	9531703	AssignmentExpression	* q0 = q		9531667	2		=			
ANR	9531704	Identifier	q		9531667	0					
ANR	9531705	Identifier	q		9531667	1					
ANR	9531706	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	101:4:3082:3112	9531667	9	True				
ANR	9531707	IdentifierDecl	* rlimit = pr -> limit		9531667	0					
ANR	9531708	IdentifierDeclType	const byte *		9531667	0					
ANR	9531709	Identifier	rlimit		9531667	1					
ANR	9531710	AssignmentExpression	* rlimit = pr -> limit		9531667	2		=			
ANR	9531711	Identifier	rlimit		9531667	0					
ANR	9531712	PtrMemberAccess	pr -> limit		9531667	1					
ANR	9531713	Identifier	pr		9531667	0					
ANR	9531714	Identifier	limit		9531667	1					
ANR	9531715	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	102:4:3141:3165	9531667	10	True				
ANR	9531716	IdentifierDecl	* wlimit = pw -> limit		9531667	0					
ANR	9531717	IdentifierDeclType	byte *		9531667	0					
ANR	9531718	Identifier	wlimit		9531667	1					
ANR	9531719	AssignmentExpression	* wlimit = pw -> limit		9531667	2		=			
ANR	9531720	Identifier	wlimit		9531667	0					
ANR	9531721	PtrMemberAccess	pw -> limit		9531667	1					
ANR	9531722	Identifier	pw		9531667	0					
ANR	9531723	Identifier	limit		9531667	1					
ANR	9531724	IdentifierDeclStatement	int status = 0 ;	103:4:3194:3208	9531667	11	True				
ANR	9531725	IdentifierDecl	status = 0		9531667	0					
ANR	9531726	IdentifierDeclType	int		9531667	0					
ANR	9531727	Identifier	status		9531667	1					
ANR	9531728	AssignmentExpression	status = 0		9531667	2		=			
ANR	9531729	Identifier	status		9531667	0					
ANR	9531730	PrimaryExpression	0		9531667	1					
ANR	9531731	IdentifierDeclStatement	int code = ss -> copy_code ;	104:4:3214:3238	9531667	12	True				
ANR	9531732	IdentifierDecl	code = ss -> copy_code		9531667	0					
ANR	9531733	IdentifierDeclType	int		9531667	0					
ANR	9531734	Identifier	code		9531667	1					
ANR	9531735	AssignmentExpression	code = ss -> copy_code		9531667	2		=			
ANR	9531736	Identifier	code		9531667	0					
ANR	9531737	PtrMemberAccess	ss -> copy_code		9531667	1					
ANR	9531738	Identifier	ss		9531667	0					
ANR	9531739	Identifier	copy_code		9531667	1					
ANR	9531740	IdentifierDeclStatement	int prev_code = ss -> prev_code ;	105:4:3244:3273	9531667	13	True				
ANR	9531741	IdentifierDecl	prev_code = ss -> prev_code		9531667	0					
ANR	9531742	IdentifierDeclType	int		9531667	0					
ANR	9531743	Identifier	prev_code		9531667	1					
ANR	9531744	AssignmentExpression	prev_code = ss -> prev_code		9531667	2		=			
ANR	9531745	Identifier	prev_code		9531667	0					
ANR	9531746	PtrMemberAccess	ss -> prev_code		9531667	1					
ANR	9531747	Identifier	ss		9531667	0					
ANR	9531748	Identifier	prev_code		9531667	1					
ANR	9531749	IdentifierDeclStatement	uint prev_len = ss -> prev_len ;	106:4:3279:3307	9531667	14	True				
ANR	9531750	IdentifierDecl	prev_len = ss -> prev_len		9531667	0					
ANR	9531751	IdentifierDeclType	uint		9531667	0					
ANR	9531752	Identifier	prev_len		9531667	1					
ANR	9531753	AssignmentExpression	prev_len = ss -> prev_len		9531667	2		=			
ANR	9531754	Identifier	prev_len		9531667	0					
ANR	9531755	PtrMemberAccess	ss -> prev_len		9531667	1					
ANR	9531756	Identifier	ss		9531667	0					
ANR	9531757	Identifier	prev_len		9531667	1					
ANR	9531758	IdentifierDeclStatement	byte bits = ss -> bits ;	107:4:3313:3333	9531667	15	True				
ANR	9531759	IdentifierDecl	bits = ss -> bits		9531667	0					
ANR	9531760	IdentifierDeclType	byte		9531667	0					
ANR	9531761	Identifier	bits		9531667	1					
ANR	9531762	AssignmentExpression	bits = ss -> bits		9531667	2		=			
ANR	9531763	Identifier	bits		9531667	0					
ANR	9531764	PtrMemberAccess	ss -> bits		9531667	1					
ANR	9531765	Identifier	ss		9531667	0					
ANR	9531766	Identifier	bits		9531667	1					
ANR	9531767	IdentifierDeclStatement	int bits_left = ss -> bits_left ;	108:4:3339:3368	9531667	16	True				
ANR	9531768	IdentifierDecl	bits_left = ss -> bits_left		9531667	0					
ANR	9531769	IdentifierDeclType	int		9531667	0					
ANR	9531770	Identifier	bits_left		9531667	1					
ANR	9531771	AssignmentExpression	bits_left = ss -> bits_left		9531667	2		=			
ANR	9531772	Identifier	bits_left		9531667	0					
ANR	9531773	PtrMemberAccess	ss -> bits_left		9531667	1					
ANR	9531774	Identifier	ss		9531667	0					
ANR	9531775	Identifier	bits_left		9531667	1					
ANR	9531776	IdentifierDeclStatement	int bytes_left = ss -> bytes_left ;	109:4:3374:3405	9531667	17	True				
ANR	9531777	IdentifierDecl	bytes_left = ss -> bytes_left		9531667	0					
ANR	9531778	IdentifierDeclType	int		9531667	0					
ANR	9531779	Identifier	bytes_left		9531667	1					
ANR	9531780	AssignmentExpression	bytes_left = ss -> bytes_left		9531667	2		=			
ANR	9531781	Identifier	bytes_left		9531667	0					
ANR	9531782	PtrMemberAccess	ss -> bytes_left		9531667	1					
ANR	9531783	Identifier	ss		9531667	0					
ANR	9531784	Identifier	bytes_left		9531667	1					
ANR	9531785	IdentifierDeclStatement	int code_size = ss -> code_size ;	110:4:3411:3440	9531667	18	True				
ANR	9531786	IdentifierDecl	code_size = ss -> code_size		9531667	0					
ANR	9531787	IdentifierDeclType	int		9531667	0					
ANR	9531788	Identifier	code_size		9531667	1					
ANR	9531789	AssignmentExpression	code_size = ss -> code_size		9531667	2		=			
ANR	9531790	Identifier	code_size		9531667	0					
ANR	9531791	PtrMemberAccess	ss -> code_size		9531667	1					
ANR	9531792	Identifier	ss		9531667	0					
ANR	9531793	Identifier	code_size		9531667	1					
ANR	9531794	IdentifierDeclStatement	int code_mask ;	111:4:3446:3459	9531667	19	True				
ANR	9531795	IdentifierDecl	code_mask		9531667	0					
ANR	9531796	IdentifierDeclType	int		9531667	0					
ANR	9531797	Identifier	code_mask		9531667	1					
ANR	9531798	IdentifierDeclStatement	int switch_code ;	112:4:3465:3480	9531667	20	True				
ANR	9531799	IdentifierDecl	switch_code		9531667	0					
ANR	9531800	IdentifierDeclType	int		9531667	0					
ANR	9531801	Identifier	switch_code		9531667	1					
ANR	9531802	IdentifierDeclStatement	int next_code = ss -> next_code ;	113:4:3486:3515	9531667	21	True				
ANR	9531803	IdentifierDecl	next_code = ss -> next_code		9531667	0					
ANR	9531804	IdentifierDeclType	int		9531667	0					
ANR	9531805	Identifier	next_code		9531667	1					
ANR	9531806	AssignmentExpression	next_code = ss -> next_code		9531667	2		=			
ANR	9531807	Identifier	next_code		9531667	0					
ANR	9531808	PtrMemberAccess	ss -> next_code		9531667	1					
ANR	9531809	Identifier	ss		9531667	0					
ANR	9531810	Identifier	next_code		9531667	1					
ANR	9531811	IdentifierDeclStatement	lzw_decode * table = ss -> table . decode ;	114:4:3521:3557	9531667	22	True				
ANR	9531812	IdentifierDecl	* table = ss -> table . decode		9531667	0					
ANR	9531813	IdentifierDeclType	lzw_decode *		9531667	0					
ANR	9531814	Identifier	table		9531667	1					
ANR	9531815	AssignmentExpression	* table = ss -> table . decode		9531667	2		=			
ANR	9531816	Identifier	table		9531667	0					
ANR	9531817	MemberAccess	ss -> table . decode		9531667	1					
ANR	9531818	PtrMemberAccess	ss -> table		9531667	0					
ANR	9531819	Identifier	ss		9531667	0					
ANR	9531820	Identifier	table		9531667	1					
ANR	9531821	Identifier	decode		9531667	1					
ANR	9531822	IdentifierDeclStatement	lzw_decode * dc_next = table + next_code ;	115:4:3586:3625	9531667	23	True				
ANR	9531823	IdentifierDecl	* dc_next = table + next_code		9531667	0					
ANR	9531824	IdentifierDeclType	lzw_decode *		9531667	0					
ANR	9531825	Identifier	dc_next		9531667	1					
ANR	9531826	AssignmentExpression	* dc_next = table + next_code		9531667	2		=			
ANR	9531827	Identifier	dc_next		9531667	0					
ANR	9531828	AdditiveExpression	table + next_code		9531667	1		+			
ANR	9531829	Identifier	table		9531667	0					
ANR	9531830	Identifier	next_code		9531667	1					
ANR	9531831	IdentifierDeclStatement	lzw_decode * dc ;	116:4:3647:3661	9531667	24	True				
ANR	9531832	IdentifierDecl	* dc		9531667	0					
ANR	9531833	IdentifierDeclType	lzw_decode *		9531667	0					
ANR	9531834	Identifier	dc		9531667	1					
ANR	9531835	IdentifierDeclStatement	int code_escape = 1 << ss -> InitialCodeLength ;	117:4:3667:3711	9531667	25	True				
ANR	9531836	IdentifierDecl	code_escape = 1 << ss -> InitialCodeLength		9531667	0					
ANR	9531837	IdentifierDeclType	int		9531667	0					
ANR	9531838	Identifier	code_escape		9531667	1					
ANR	9531839	AssignmentExpression	code_escape = 1 << ss -> InitialCodeLength		9531667	2		=			
ANR	9531840	Identifier	code_escape		9531667	0					
ANR	9531841	ShiftExpression	1 << ss -> InitialCodeLength		9531667	1		<<			
ANR	9531842	PrimaryExpression	1		9531667	0					
ANR	9531843	PtrMemberAccess	ss -> InitialCodeLength		9531667	1					
ANR	9531844	Identifier	ss		9531667	0					
ANR	9531845	Identifier	InitialCodeLength		9531667	1					
ANR	9531846	IdentifierDeclStatement	int eod = code_eod ;	118:4:3717:3735	9531667	26	True				
ANR	9531847	IdentifierDecl	eod = code_eod		9531667	0					
ANR	9531848	IdentifierDeclType	int		9531667	0					
ANR	9531849	Identifier	eod		9531667	1					
ANR	9531850	AssignmentExpression	eod = code_eod		9531667	2		=			
ANR	9531851	Identifier	code_eod		9531667	0					
ANR	9531852	Identifier	code_eod		9531667	1					
ANR	9531853	IdentifierDeclStatement	bool low_order = ss -> FirstBitLowOrder ;	119:4:3741:3778	9531667	27	True				
ANR	9531854	IdentifierDecl	low_order = ss -> FirstBitLowOrder		9531667	0					
ANR	9531855	IdentifierDeclType	bool		9531667	0					
ANR	9531856	Identifier	low_order		9531667	1					
ANR	9531857	AssignmentExpression	low_order = ss -> FirstBitLowOrder		9531667	2		=			
ANR	9531858	Identifier	low_order		9531667	0					
ANR	9531859	PtrMemberAccess	ss -> FirstBitLowOrder		9531667	1					
ANR	9531860	Identifier	ss		9531667	0					
ANR	9531861	Identifier	FirstBitLowOrder		9531667	1					
ANR	9531862	IdentifierDeclStatement	bool old_tiff = ss -> OldTiff ;	120:4:3784:3811	9531667	28	True				
ANR	9531863	IdentifierDecl	old_tiff = ss -> OldTiff		9531667	0					
ANR	9531864	IdentifierDeclType	bool		9531667	0					
ANR	9531865	Identifier	old_tiff		9531667	1					
ANR	9531866	AssignmentExpression	old_tiff = ss -> OldTiff		9531667	2		=			
ANR	9531867	Identifier	old_tiff		9531667	0					
ANR	9531868	PtrMemberAccess	ss -> OldTiff		9531667	1					
ANR	9531869	Identifier	ss		9531667	0					
ANR	9531870	Identifier	OldTiff		9531667	1					
ANR	9531871	IdentifierDeclStatement	uint len ;	121:4:3817:3825	9531667	29	True				
ANR	9531872	IdentifierDecl	len		9531667	0					
ANR	9531873	IdentifierDeclType	uint		9531667	0					
ANR	9531874	Identifier	len		9531667	1					
ANR	9531875	IdentifierDeclStatement	int c ;	122:4:3831:3836	9531667	30	True				
ANR	9531876	IdentifierDecl	c		9531667	0					
ANR	9531877	IdentifierDeclType	int		9531667	0					
ANR	9531878	Identifier	c		9531667	1					
ANR	9531879	IdentifierDeclStatement	byte b ;	123:4:3842:3848	9531667	31	True				
ANR	9531880	IdentifierDecl	b		9531667	0					
ANR	9531881	IdentifierDeclType	byte		9531667	0					
ANR	9531882	Identifier	b		9531667	1					
ANR	9531883	IdentifierDeclStatement	byte * q1 ;	124:4:3854:3862	9531667	32	True				
ANR	9531884	IdentifierDecl	* q1		9531667	0					
ANR	9531885	IdentifierDeclType	byte *		9531667	0					
ANR	9531886	Identifier	q1		9531667	1					
ANR	9531887	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]process decode: code_size=%d next_code=%d\\n"" , code_size , next_code )"	126:4:3869:3983	9531667	33	True				
ANR	9531888	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]process decode: code_size=%d next_code=%d\\n"" , code_size , next_code )"		9531667	0					
ANR	9531889	Callee	if_debug2m		9531667	0					
ANR	9531890	Identifier	if_debug2m		9531667	0					
ANR	9531891	ArgumentList	'w'		9531667	1					
ANR	9531892	Argument	'w'		9531667	0					
ANR	9531893	PrimaryExpression	'w'		9531667	0					
ANR	9531894	Argument	ss -> memory		9531667	1					
ANR	9531895	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9531896	Identifier	ss		9531667	0					
ANR	9531897	Identifier	memory		9531667	1					
ANR	9531898	Argument	"""[w]process decode: code_size=%d next_code=%d\\n"""		9531667	2					
ANR	9531899	PrimaryExpression	"""[w]process decode: code_size=%d next_code=%d\\n"""		9531667	0					
ANR	9531900	Argument	code_size		9531667	3					
ANR	9531901	Identifier	code_size		9531667	0					
ANR	9531902	Argument	next_code		9531667	4					
ANR	9531903	Identifier	next_code		9531667	0					
ANR	9531904	Statement	define	128:1:3986:3991	9531667	34	True				
ANR	9531905	Statement	set_code_size	128:8:3993:4005	9531667	35	True				
ANR	9531906	Statement	(	128:21:4006:4006	9531667	36	True				
ANR	9531907	Statement	)	128:22:4007:4007	9531667	37	True				
ANR	9531908	Statement	code_mask	129:2:4012:4020	9531667	38	True				
ANR	9531909	Statement	=	129:12:4022:4022	9531667	39	True				
ANR	9531910	Statement	(	129:14:4024:4024	9531667	40	True				
ANR	9531911	Statement	1	129:15:4025:4025	9531667	41	True				
ANR	9531912	Statement	<<	129:17:4027:4028	9531667	42	True				
ANR	9531913	Statement	code_size	129:20:4030:4038	9531667	43	True				
ANR	9531914	Statement	)	129:29:4039:4039	9531667	44	True				
ANR	9531915	Statement	-	129:31:4041:4041	9531667	45	True				
ANR	9531916	Statement	1	129:33:4043:4043	9531667	46	True				
ANR	9531917	Statement	","	129:34:4044:4044	9531667	47	True				
ANR	9531918	Statement	switch_code	130:2:4049:4059	9531667	48	True				
ANR	9531919	Statement	=	130:14:4061:4061	9531667	49	True				
ANR	9531920	Statement	code_mask	130:16:4063:4071	9531667	50	True				
ANR	9531921	Statement	+	130:26:4073:4073	9531667	51	True				
ANR	9531922	Statement	1	130:28:4075:4075	9531667	52	True				
ANR	9531923	Statement	-	130:30:4077:4077	9531667	53	True				
ANR	9531924	Statement	ss	130:32:4079:4080	9531667	54	True				
ANR	9531925	Statement	->	130:34:4081:4082	9531667	55	True				
ANR	9531926	IdentifierDeclStatement	EarlyChange set_code_size ( ) ;	130:36:4083:4114	9531667	56	True				
ANR	9531927	IdentifierDecl	set_code_size ( )		9531667	0					
ANR	9531928	IdentifierDeclType	EarlyChange		9531667	0					
ANR	9531929	Identifier	set_code_size		9531667	1					
ANR	9531930	IfStatement	if ( ! ss -> BlockData )		9531667	57					
ANR	9531931	Condition	! ss -> BlockData	132:8:4124:4137	9531667	0	True				
ANR	9531932	UnaryOperationExpression	! ss -> BlockData		9531667	0					
ANR	9531933	UnaryOperator	!		9531667	0					
ANR	9531934	PtrMemberAccess	ss -> BlockData		9531667	1					
ANR	9531935	Identifier	ss		9531667	0					
ANR	9531936	Identifier	BlockData		9531667	1					
ANR	9531937	ExpressionStatement	bytes_left = rlimit - p + 2	133:8:4148:4175	9531667	1	True				
ANR	9531938	AssignmentExpression	bytes_left = rlimit - p + 2		9531667	0		=			
ANR	9531939	Identifier	bytes_left		9531667	0					
ANR	9531940	AdditiveExpression	rlimit - p + 2		9531667	1		-			
ANR	9531941	Identifier	rlimit		9531667	0					
ANR	9531942	AdditiveExpression	p + 2		9531667	1		+			
ANR	9531943	Identifier	p		9531667	0					
ANR	9531944	PrimaryExpression	2		9531667	1					
ANR	9531945	IfStatement	if ( code >= 0 )		9531667	58					
ANR	9531946	Condition	code >= 0	136:8:4300:4308	9531667	0	True				
ANR	9531947	RelationalExpression	code >= 0		9531667	0		>=			
ANR	9531948	Identifier	code		9531667	0					
ANR	9531949	PrimaryExpression	0		9531667	1					
ANR	9531950	CompoundStatement		48:8:1477:1506	9531667	1					
ANR	9531951	IdentifierDeclStatement	int rlen = ss -> copy_left ;	137:8:4321:4345	9531667	0	True				
ANR	9531952	IdentifierDecl	rlen = ss -> copy_left		9531667	0					
ANR	9531953	IdentifierDeclType	int		9531667	0					
ANR	9531954	Identifier	rlen		9531667	1					
ANR	9531955	AssignmentExpression	rlen = ss -> copy_left		9531667	2		=			
ANR	9531956	Identifier	rlen		9531667	0					
ANR	9531957	PtrMemberAccess	ss -> copy_left		9531667	1					
ANR	9531958	Identifier	ss		9531667	0					
ANR	9531959	Identifier	copy_left		9531667	1					
ANR	9531960	IdentifierDeclStatement	int wlen = wlimit - q ;	138:8:4355:4376	9531667	1	True				
ANR	9531961	IdentifierDecl	wlen = wlimit - q		9531667	0					
ANR	9531962	IdentifierDeclType	int		9531667	0					
ANR	9531963	Identifier	wlen		9531667	1					
ANR	9531964	AssignmentExpression	wlen = wlimit - q		9531667	2		=			
ANR	9531965	Identifier	wlen		9531667	0					
ANR	9531966	AdditiveExpression	wlimit - q		9531667	1		-			
ANR	9531967	Identifier	wlimit		9531667	0					
ANR	9531968	Identifier	q		9531667	1					
ANR	9531969	IdentifierDeclStatement	"int n = len = min ( rlen , wlen ) ;"	139:8:4386:4415	9531667	2	True				
ANR	9531970	IdentifierDecl	"n = len = min ( rlen , wlen )"		9531667	0					
ANR	9531971	IdentifierDeclType	int		9531667	0					
ANR	9531972	Identifier	n		9531667	1					
ANR	9531973	AssignmentExpression	"n = len = min ( rlen , wlen )"		9531667	2		=			
ANR	9531974	Identifier	n		9531667	0					
ANR	9531975	AssignmentExpression	"len = min ( rlen , wlen )"		9531667	1		=			
ANR	9531976	Identifier	len		9531667	0					
ANR	9531977	CallExpression	"min ( rlen , wlen )"		9531667	1					
ANR	9531978	Callee	min		9531667	0					
ANR	9531979	Identifier	min		9531667	0					
ANR	9531980	ArgumentList	rlen		9531667	1					
ANR	9531981	Argument	rlen		9531667	0					
ANR	9531982	Identifier	rlen		9531667	0					
ANR	9531983	Argument	wlen		9531667	1					
ANR	9531984	Identifier	wlen		9531667	0					
ANR	9531985	ExpressionStatement	c = code	141:8:4426:4434	9531667	3	True				
ANR	9531986	AssignmentExpression	c = code		9531667	0		=			
ANR	9531987	Identifier	c		9531667	0					
ANR	9531988	Identifier	code		9531667	1					
ANR	9531989	ExpressionStatement	ss -> copy_left = rlen -= len	142:8:4444:4471	9531667	4	True				
ANR	9531990	AssignmentExpression	ss -> copy_left = rlen -= len		9531667	0		=			
ANR	9531991	PtrMemberAccess	ss -> copy_left		9531667	0					
ANR	9531992	Identifier	ss		9531667	0					
ANR	9531993	Identifier	copy_left		9531667	1					
ANR	9531994	AssignmentExpression	rlen -= len		9531667	1		-=			
ANR	9531995	Identifier	rlen		9531667	0					
ANR	9531996	Identifier	len		9531667	1					
ANR	9531997	ExpressionStatement	"if_debug3m ( 'W' , ss -> memory , ""[W]copying 0x%x, %d byte(s) out of %d left\\n"" , code , len , rlen + len )"	143:8:4481:4598	9531667	5	True				
ANR	9531998	CallExpression	"if_debug3m ( 'W' , ss -> memory , ""[W]copying 0x%x, %d byte(s) out of %d left\\n"" , code , len , rlen + len )"		9531667	0					
ANR	9531999	Callee	if_debug3m		9531667	0					
ANR	9532000	Identifier	if_debug3m		9531667	0					
ANR	9532001	ArgumentList	'W'		9531667	1					
ANR	9532002	Argument	'W'		9531667	0					
ANR	9532003	PrimaryExpression	'W'		9531667	0					
ANR	9532004	Argument	ss -> memory		9531667	1					
ANR	9532005	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532006	Identifier	ss		9531667	0					
ANR	9532007	Identifier	memory		9531667	1					
ANR	9532008	Argument	"""[W]copying 0x%x, %d byte(s) out of %d left\\n"""		9531667	2					
ANR	9532009	PrimaryExpression	"""[W]copying 0x%x, %d byte(s) out of %d left\\n"""		9531667	0					
ANR	9532010	Argument	code		9531667	3					
ANR	9532011	Identifier	code		9531667	0					
ANR	9532012	Argument	len		9531667	4					
ANR	9532013	Identifier	len		9531667	0					
ANR	9532014	Argument	rlen + len		9531667	5					
ANR	9532015	AdditiveExpression	rlen + len		9531667	0		+			
ANR	9532016	Identifier	rlen		9531667	0					
ANR	9532017	Identifier	len		9531667	1					
ANR	9532018	WhileStatement	while ( rlen )		9531667	6					
ANR	9532019	Condition	rlen	145:15:4615:4618	9531667	0	True				
ANR	9532020	Identifier	rlen		9531667	0					
ANR	9532021	ExpressionStatement	"c = table [ c ] . prefix , rlen --"	146:12:4633:4676	9531667	1	True				
ANR	9532022	Expression	"c = table [ c ] . prefix , rlen --"		9531667	0					
ANR	9532023	AssignmentExpression	c = table [ c ] . prefix		9531667	0		=			
ANR	9532024	Identifier	c		9531667	0					
ANR	9532025	MemberAccess	table [ c ] . prefix		9531667	1					
ANR	9532026	ArrayIndexing	table [ c ]		9531667	0					
ANR	9532027	Identifier	table		9531667	0					
ANR	9532028	Identifier	c		9531667	1					
ANR	9532029	Identifier	prefix		9531667	1					
ANR	9532030	PostIncDecOperationExpression	rlen --		9531667	1					
ANR	9532031	Identifier	rlen		9531667	0					
ANR	9532032	IncDec	--		9531667	1					
ANR	9532033	ExpressionStatement	q1 = q += len	148:8:4686:4699	9531667	7	True				
ANR	9532034	AssignmentExpression	q1 = q += len		9531667	0		=			
ANR	9532035	Identifier	q1		9531667	0					
ANR	9532036	AssignmentExpression	q += len		9531667	1		+=			
ANR	9532037	Identifier	q		9531667	0					
ANR	9532038	Identifier	len		9531667	1					
ANR	9532039	ExpressionStatement	n = len	149:8:4709:4716	9531667	8	True				
ANR	9532040	AssignmentExpression	n = len		9531667	0		=			
ANR	9532041	Identifier	n		9531667	0					
ANR	9532042	Identifier	len		9531667	1					
ANR	9532043	WhileStatement	while ( -- n >= 0 )		9531667	9					
ANR	9532044	Condition	-- n >= 0	150:15:4733:4740	9531667	0	True				
ANR	9532045	RelationalExpression	-- n >= 0		9531667	0		>=			
ANR	9532046	UnaryExpression	-- n		9531667	0					
ANR	9532047	IncDec	--		9531667	0					
ANR	9532048	Identifier	n		9531667	1					
ANR	9532049	PrimaryExpression	0		9531667	1					
ANR	9532050	CompoundStatement		59:25:1834:1834	9531667	1					
ANR	9532051	ExpressionStatement	* q1 -- = ( dc = & table [ c ] ) -> datum	151:12:4757:4788	9531667	0	True				
ANR	9532052	AssignmentExpression	* q1 -- = ( dc = & table [ c ] ) -> datum		9531667	0		=			
ANR	9532053	UnaryOperationExpression	* q1 --		9531667	0					
ANR	9532054	UnaryOperator	*		9531667	0					
ANR	9532055	PostIncDecOperationExpression	q1 --		9531667	1					
ANR	9532056	Identifier	q1		9531667	0					
ANR	9532057	IncDec	--		9531667	1					
ANR	9532058	PtrMemberAccess	( dc = & table [ c ] ) -> datum		9531667	1					
ANR	9532059	AssignmentExpression	dc = & table [ c ]		9531667	0		=			
ANR	9532060	Identifier	dc		9531667	0					
ANR	9532061	UnaryOperationExpression	& table [ c ]		9531667	1					
ANR	9532062	UnaryOperator	&		9531667	0					
ANR	9532063	ArrayIndexing	table [ c ]		9531667	1					
ANR	9532064	Identifier	table		9531667	0					
ANR	9532065	Identifier	c		9531667	1					
ANR	9532066	Identifier	datum		9531667	1					
ANR	9532067	ExpressionStatement	c = dc -> prefix	152:12:4802:4816	9531667	1	True				
ANR	9532068	AssignmentExpression	c = dc -> prefix		9531667	0		=			
ANR	9532069	Identifier	c		9531667	0					
ANR	9532070	PtrMemberAccess	dc -> prefix		9531667	1					
ANR	9532071	Identifier	dc		9531667	0					
ANR	9532072	Identifier	prefix		9531667	1					
ANR	9532073	IfStatement	if ( ss -> copy_left )		9531667	10					
ANR	9532074	Condition	ss -> copy_left	154:12:4840:4852	9531667	0	True				
ANR	9532075	PtrMemberAccess	ss -> copy_left		9531667	0					
ANR	9532076	Identifier	ss		9531667	0					
ANR	9532077	Identifier	copy_left		9531667	1					
ANR	9532078	CompoundStatement		63:27:1946:1946	9531667	1					
ANR	9532079	ExpressionStatement	pw -> ptr = q	155:12:4886:4897	9531667	0	True				
ANR	9532080	AssignmentExpression	pw -> ptr = q		9531667	0		=			
ANR	9532081	PtrMemberAccess	pw -> ptr		9531667	0					
ANR	9532082	Identifier	pw		9531667	0					
ANR	9532083	Identifier	ptr		9531667	1					
ANR	9532084	Identifier	q		9531667	1					
ANR	9532085	ReturnStatement	return 1 ;	156:12:4911:4919	9531667	1	True				
ANR	9532086	PrimaryExpression	1		9531667	0					
ANR	9532087	ExpressionStatement	ss -> copy_code = - 1	158:8:4939:4957	9531667	11	True				
ANR	9532088	AssignmentExpression	ss -> copy_code = - 1		9531667	0		=			
ANR	9532089	PtrMemberAccess	ss -> copy_code		9531667	0					
ANR	9532090	Identifier	ss		9531667	0					
ANR	9532091	Identifier	copy_code		9531667	1					
ANR	9532092	UnaryOperationExpression	- 1		9531667	1					
ANR	9532093	UnaryOperator	-		9531667	0					
ANR	9532094	PrimaryExpression	1		9531667	1					
ANR	9532095	ExpressionStatement	len = ss -> copy_len	159:8:4967:4985	9531667	12	True				
ANR	9532096	AssignmentExpression	len = ss -> copy_len		9531667	0		=			
ANR	9532097	Identifier	len		9531667	0					
ANR	9532098	PtrMemberAccess	ss -> copy_len		9531667	1					
ANR	9532099	Identifier	ss		9531667	0					
ANR	9532100	Identifier	copy_len		9531667	1					
ANR	9532101	IfStatement	if ( c == eod )		9531667	13					
ANR	9532102	Condition	c == eod	161:12:5062:5069	9531667	0	True				
ANR	9532103	EqualityExpression	c == eod		9531667	0		==			
ANR	9532104	Identifier	c		9531667	0					
ANR	9532105	Identifier	eod		9531667	1					
ANR	9532106	CompoundStatement		70:22:2163:2163	9531667	1					
ANR	9532107	ExpressionStatement	b = q1 [ 1 ]	163:12:5189:5198	9531667	0	True				
ANR	9532108	AssignmentExpression	b = q1 [ 1 ]		9531667	0		=			
ANR	9532109	Identifier	b		9531667	0					
ANR	9532110	ArrayIndexing	q1 [ 1 ]		9531667	1					
ANR	9532111	Identifier	q1		9531667	0					
ANR	9532112	PrimaryExpression	1		9531667	1					
ANR	9532113	ElseStatement	else		9531667	0					
ANR	9532114	CompoundStatement		73:15:2306:2306	9531667	0					
ANR	9532115	ForStatement	for ( ; c != eod ; c = table [ c ] . prefix )		9531667	0					
ANR	9532116	Condition	c != eod	165:19:5289:5296	9531667	0	True				
ANR	9532117	EqualityExpression	c != eod		9531667	0		!=			
ANR	9532118	Identifier	c		9531667	0					
ANR	9532119	Identifier	eod		9531667	1					
ANR	9532120	AssignmentExpression	c = table [ c ] . prefix	165:29:5299:5317	9531667	1	True	=			
ANR	9532121	Identifier	c		9531667	0					
ANR	9532122	MemberAccess	table [ c ] . prefix		9531667	1					
ANR	9532123	ArrayIndexing	table [ c ]		9531667	0					
ANR	9532124	Identifier	table		9531667	0					
ANR	9532125	Identifier	c		9531667	1					
ANR	9532126	Identifier	prefix		9531667	1					
ANR	9532127	ExpressionStatement	b = ( byte ) c	166:16:5336:5348	9531667	2	True				
ANR	9532128	AssignmentExpression	b = ( byte ) c		9531667	0		=			
ANR	9532129	Identifier	b		9531667	0					
ANR	9532130	CastExpression	( byte ) c		9531667	1					
ANR	9532131	CastTarget	byte		9531667	0					
ANR	9532132	Identifier	c		9531667	1					
ANR	9532133	GotoStatement	goto add ;	168:8:5368:5376	9531667	14	True				
ANR	9532134	Identifier	add		9531667	0					
ANR	9532135	Label	top :	170:2:5386:5389	9531667	59	True				
ANR	9532136	Identifier	top		9531667	0					
ANR	9532137	IfStatement	if ( code_size > bits_left )		9531667	60					
ANR	9532138	Condition	code_size > bits_left	170:10:5394:5414	9531667	0	True				
ANR	9532139	RelationalExpression	code_size > bits_left		9531667	0		>			
ANR	9532140	Identifier	code_size		9531667	0					
ANR	9532141	Identifier	bits_left		9531667	1					
ANR	9532142	CompoundStatement		79:33:2508:2508	9531667	1					
ANR	9532143	IfStatement	if ( bytes_left == 0 )		9531667	0					
ANR	9532144	Condition	bytes_left == 0	171:12:5431:5445	9531667	0	True				
ANR	9532145	EqualityExpression	bytes_left == 0		9531667	0		==			
ANR	9532146	Identifier	bytes_left		9531667	0					
ANR	9532147	PrimaryExpression	0		9531667	1					
ANR	9532148	CompoundStatement		80:29:2539:2539	9531667	1					
ANR	9532149	IfStatement	if ( p == rlimit )		9531667	0					
ANR	9532150	Condition	p == rlimit	172:16:5466:5476	9531667	0	True				
ANR	9532151	EqualityExpression	p == rlimit		9531667	0		==			
ANR	9532152	Identifier	p		9531667	0					
ANR	9532153	Identifier	rlimit		9531667	1					
ANR	9532154	GotoStatement	goto out ;	173:16:5495:5503	9531667	1	True				
ANR	9532155	Identifier	out		9531667	0					
ANR	9532156	ExpressionStatement	bytes_left = * ++ p	174:12:5517:5534	9531667	1	True				
ANR	9532157	AssignmentExpression	bytes_left = * ++ p		9531667	0		=			
ANR	9532158	Identifier	bytes_left		9531667	0					
ANR	9532159	UnaryOperationExpression	* ++ p		9531667	1					
ANR	9532160	UnaryOperator	*		9531667	0					
ANR	9532161	UnaryExpression	++ p		9531667	1					
ANR	9532162	IncDec	++		9531667	0					
ANR	9532163	Identifier	p		9531667	1					
ANR	9532164	ExpressionStatement	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"	175:12:5548:5610	9531667	2	True				
ANR	9532165	CallExpression	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"		9531667	0					
ANR	9532166	Callee	if_debug1m		9531667	0					
ANR	9532167	Identifier	if_debug1m		9531667	0					
ANR	9532168	ArgumentList	'W'		9531667	1					
ANR	9532169	Argument	'W'		9531667	0					
ANR	9532170	PrimaryExpression	'W'		9531667	0					
ANR	9532171	Argument	ss -> memory		9531667	1					
ANR	9532172	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532173	Identifier	ss		9531667	0					
ANR	9532174	Identifier	memory		9531667	1					
ANR	9532175	Argument	"""[W]block count %d\\n"""		9531667	2					
ANR	9532176	PrimaryExpression	"""[W]block count %d\\n"""		9531667	0					
ANR	9532177	Argument	bytes_left		9531667	3					
ANR	9532178	Identifier	bytes_left		9531667	0					
ANR	9532179	IfStatement	if ( bytes_left == 0 )		9531667	3					
ANR	9532180	Condition	bytes_left == 0	176:16:5628:5642	9531667	0	True				
ANR	9532181	EqualityExpression	bytes_left == 0		9531667	0		==			
ANR	9532182	Identifier	bytes_left		9531667	0					
ANR	9532183	PrimaryExpression	0		9531667	1					
ANR	9532184	CompoundStatement		85:33:2736:2736	9531667	1					
ANR	9532185	ExpressionStatement	status = EOFC	177:16:5663:5676	9531667	0	True				
ANR	9532186	AssignmentExpression	status = EOFC		9531667	0		=			
ANR	9532187	Identifier	status		9531667	0					
ANR	9532188	Identifier	EOFC		9531667	1					
ANR	9532189	GotoStatement	goto out ;	178:16:5694:5702	9531667	1	True				
ANR	9532190	Identifier	out		9531667	0					
ANR	9532191	GotoStatement	goto top ;	180:12:5730:5738	9531667	4	True				
ANR	9532192	Identifier	top		9531667	0					
ANR	9532193	IfStatement	if ( low_order )		9531667	1					
ANR	9532194	Condition	low_order	182:12:5762:5770	9531667	0	True				
ANR	9532195	Identifier	low_order		9531667	0					
ANR	9532196	ExpressionStatement	code = bits >> ( 8 - bits_left )	183:12:5785:5815	9531667	1	True				
ANR	9532197	AssignmentExpression	code = bits >> ( 8 - bits_left )		9531667	0		=			
ANR	9532198	Identifier	code		9531667	0					
ANR	9532199	ShiftExpression	bits >> ( 8 - bits_left )		9531667	1		>>			
ANR	9532200	Identifier	bits		9531667	0					
ANR	9532201	AdditiveExpression	8 - bits_left		9531667	1		-			
ANR	9532202	PrimaryExpression	8		9531667	0					
ANR	9532203	Identifier	bits_left		9531667	1					
ANR	9532204	ElseStatement	else		9531667	0					
ANR	9532205	ExpressionStatement	code = ( uint ) bits << ( code_size - bits_left )	185:12:5842:5887	9531667	0	True				
ANR	9532206	AssignmentExpression	code = ( uint ) bits << ( code_size - bits_left )		9531667	0		=			
ANR	9532207	Identifier	code		9531667	0					
ANR	9532208	ShiftExpression	( uint ) bits << ( code_size - bits_left )		9531667	1		<<			
ANR	9532209	CastExpression	( uint ) bits		9531667	0					
ANR	9532210	CastTarget	uint		9531667	0					
ANR	9532211	Identifier	bits		9531667	1					
ANR	9532212	AdditiveExpression	code_size - bits_left		9531667	1		-			
ANR	9532213	Identifier	code_size		9531667	0					
ANR	9532214	Identifier	bits_left		9531667	1					
ANR	9532215	IfStatement	if ( bits_left + 8 < code_size )		9531667	2					
ANR	9532216	Condition	bits_left + 8 < code_size	186:12:5901:5925	9531667	0	True				
ANR	9532217	RelationalExpression	bits_left + 8 < code_size		9531667	0		<			
ANR	9532218	AdditiveExpression	bits_left + 8		9531667	0		+			
ANR	9532219	Identifier	bits_left		9531667	0					
ANR	9532220	PrimaryExpression	8		9531667	1					
ANR	9532221	Identifier	code_size		9531667	1					
ANR	9532222	CompoundStatement		95:39:3019:3019	9531667	1					
ANR	9532223	IfStatement	if ( bytes_left == 1 )		9531667	0					
ANR	9532224	Condition	bytes_left == 1	187:16:5975:5989	9531667	0	True				
ANR	9532225	EqualityExpression	bytes_left == 1		9531667	0		==			
ANR	9532226	Identifier	bytes_left		9531667	0					
ANR	9532227	PrimaryExpression	1		9531667	1					
ANR	9532228	CompoundStatement		96:33:3083:3083	9531667	1					
ANR	9532229	IfStatement	if ( rlimit - p < 3 )		9531667	0					
ANR	9532230	Condition	rlimit - p < 3	188:20:6014:6027	9531667	0	True				
ANR	9532231	RelationalExpression	rlimit - p < 3		9531667	0		<			
ANR	9532232	AdditiveExpression	rlimit - p		9531667	0		-			
ANR	9532233	Identifier	rlimit		9531667	0					
ANR	9532234	Identifier	p		9531667	1					
ANR	9532235	PrimaryExpression	3		9531667	1					
ANR	9532236	GotoStatement	goto out ;	189:20:6050:6058	9531667	1	True				
ANR	9532237	Identifier	out		9531667	0					
ANR	9532238	ExpressionStatement	bytes_left = p [ 2 ]	190:16:6076:6093	9531667	1	True				
ANR	9532239	AssignmentExpression	bytes_left = p [ 2 ]		9531667	0		=			
ANR	9532240	Identifier	bytes_left		9531667	0					
ANR	9532241	ArrayIndexing	p [ 2 ]		9531667	1					
ANR	9532242	Identifier	p		9531667	0					
ANR	9532243	PrimaryExpression	2		9531667	1					
ANR	9532244	ExpressionStatement	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"	191:16:6111:6200	9531667	2	True				
ANR	9532245	CallExpression	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"		9531667	0					
ANR	9532246	Callee	if_debug1m		9531667	0					
ANR	9532247	Identifier	if_debug1m		9531667	0					
ANR	9532248	ArgumentList	'W'		9531667	1					
ANR	9532249	Argument	'W'		9531667	0					
ANR	9532250	PrimaryExpression	'W'		9531667	0					
ANR	9532251	Argument	ss -> memory		9531667	1					
ANR	9532252	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532253	Identifier	ss		9531667	0					
ANR	9532254	Identifier	memory		9531667	1					
ANR	9532255	Argument	"""[W]block count %d\\n"""		9531667	2					
ANR	9532256	PrimaryExpression	"""[W]block count %d\\n"""		9531667	0					
ANR	9532257	Argument	bytes_left		9531667	3					
ANR	9532258	Identifier	bytes_left		9531667	0					
ANR	9532259	IfStatement	if ( bytes_left == 0 )		9531667	3					
ANR	9532260	Condition	bytes_left == 0	193:20:6222:6236	9531667	0	True				
ANR	9532261	EqualityExpression	bytes_left == 0		9531667	0		==			
ANR	9532262	Identifier	bytes_left		9531667	0					
ANR	9532263	PrimaryExpression	0		9531667	1					
ANR	9532264	CompoundStatement		102:37:3330:3330	9531667	1					
ANR	9532265	ExpressionStatement	status = EOFC	194:20:6261:6274	9531667	0	True				
ANR	9532266	AssignmentExpression	status = EOFC		9531667	0		=			
ANR	9532267	Identifier	status		9531667	0					
ANR	9532268	Identifier	EOFC		9531667	1					
ANR	9532269	GotoStatement	goto out ;	195:20:6296:6304	9531667	1	True				
ANR	9532270	Identifier	out		9531667	0					
ANR	9532271	ExpressionStatement	bytes_left ++	197:16:6340:6352	9531667	4	True				
ANR	9532272	PostIncDecOperationExpression	bytes_left ++		9531667	0					
ANR	9532273	Identifier	bytes_left		9531667	0					
ANR	9532274	IncDec	++		9531667	1					
ANR	9532275	ExpressionStatement	bits = p [ 1 ]	198:16:6370:6381	9531667	5	True				
ANR	9532276	AssignmentExpression	bits = p [ 1 ]		9531667	0		=			
ANR	9532277	Identifier	bits		9531667	0					
ANR	9532278	ArrayIndexing	p [ 1 ]		9531667	1					
ANR	9532279	Identifier	p		9531667	0					
ANR	9532280	PrimaryExpression	1		9531667	1					
ANR	9532281	ExpressionStatement	p ++	199:16:6399:6402	9531667	6	True				
ANR	9532282	PostIncDecOperationExpression	p ++		9531667	0					
ANR	9532283	Identifier	p		9531667	0					
ANR	9532284	IncDec	++		9531667	1					
ANR	9532285	ElseStatement	else		9531667	0					
ANR	9532286	CompoundStatement		109:19:3514:3514	9531667	0					
ANR	9532287	IfStatement	if ( rlimit - p < 2 )		9531667	0					
ANR	9532288	Condition	rlimit - p < 2	201:20:6445:6458	9531667	0	True				
ANR	9532289	RelationalExpression	rlimit - p < 2		9531667	0		<			
ANR	9532290	AdditiveExpression	rlimit - p		9531667	0		-			
ANR	9532291	Identifier	rlimit		9531667	0					
ANR	9532292	Identifier	p		9531667	1					
ANR	9532293	PrimaryExpression	2		9531667	1					
ANR	9532294	GotoStatement	goto out ;	202:20:6481:6489	9531667	1	True				
ANR	9532295	Identifier	out		9531667	0					
ANR	9532296	ExpressionStatement	bits = p [ 1 ]	203:16:6507:6518	9531667	1	True				
ANR	9532297	AssignmentExpression	bits = p [ 1 ]		9531667	0		=			
ANR	9532298	Identifier	bits		9531667	0					
ANR	9532299	ArrayIndexing	p [ 1 ]		9531667	1					
ANR	9532300	Identifier	p		9531667	0					
ANR	9532301	PrimaryExpression	1		9531667	1					
ANR	9532302	IfStatement	if ( low_order )		9531667	1					
ANR	9532303	Condition	low_order	205:16:6550:6558	9531667	0	True				
ANR	9532304	Identifier	low_order		9531667	0					
ANR	9532305	ExpressionStatement	code += ( uint ) bits << bits_left	206:16:6577:6609	9531667	1	True				
ANR	9532306	AssignmentExpression	code += ( uint ) bits << bits_left		9531667	0		+=			
ANR	9532307	Identifier	code		9531667	0					
ANR	9532308	ShiftExpression	( uint ) bits << bits_left		9531667	1		<<			
ANR	9532309	CastExpression	( uint ) bits		9531667	0					
ANR	9532310	CastTarget	uint		9531667	0					
ANR	9532311	Identifier	bits		9531667	1					
ANR	9532312	Identifier	bits_left		9531667	1					
ANR	9532313	ElseStatement	else		9531667	0					
ANR	9532314	ExpressionStatement	code += ( uint ) bits << ( code_size - 8 - bits_left )	208:16:6644:6694	9531667	0	True				
ANR	9532315	AssignmentExpression	code += ( uint ) bits << ( code_size - 8 - bits_left )		9531667	0		+=			
ANR	9532316	Identifier	code		9531667	0					
ANR	9532317	ShiftExpression	( uint ) bits << ( code_size - 8 - bits_left )		9531667	1		<<			
ANR	9532318	CastExpression	( uint ) bits		9531667	0					
ANR	9532319	CastTarget	uint		9531667	0					
ANR	9532320	Identifier	bits		9531667	1					
ANR	9532321	AdditiveExpression	code_size - 8 - bits_left		9531667	1		-			
ANR	9532322	Identifier	code_size		9531667	0					
ANR	9532323	AdditiveExpression	8 - bits_left		9531667	1		-			
ANR	9532324	PrimaryExpression	8		9531667	0					
ANR	9532325	Identifier	bits_left		9531667	1					
ANR	9532326	ExpressionStatement	bits_left += 8	209:12:6708:6722	9531667	2	True				
ANR	9532327	AssignmentExpression	bits_left += 8		9531667	0		+=			
ANR	9532328	Identifier	bits_left		9531667	0					
ANR	9532329	PrimaryExpression	8		9531667	1					
ANR	9532330	ExpressionStatement	bits = p [ 2 ]	210:12:6736:6747	9531667	3	True				
ANR	9532331	AssignmentExpression	bits = p [ 2 ]		9531667	0		=			
ANR	9532332	Identifier	bits		9531667	0					
ANR	9532333	ArrayIndexing	p [ 2 ]		9531667	1					
ANR	9532334	Identifier	p		9531667	0					
ANR	9532335	PrimaryExpression	2		9531667	1					
ANR	9532336	ExpressionStatement	p += 2	211:12:6761:6767	9531667	4	True				
ANR	9532337	AssignmentExpression	p += 2		9531667	0		+=			
ANR	9532338	Identifier	p		9531667	0					
ANR	9532339	PrimaryExpression	2		9531667	1					
ANR	9532340	ExpressionStatement	bytes_left -= 2	212:12:6781:6796	9531667	5	True				
ANR	9532341	AssignmentExpression	bytes_left -= 2		9531667	0		-=			
ANR	9532342	Identifier	bytes_left		9531667	0					
ANR	9532343	PrimaryExpression	2		9531667	1					
ANR	9532344	ElseStatement	else		9531667	0					
ANR	9532345	CompoundStatement		122:15:3904:3904	9531667	0					
ANR	9532346	IfStatement	if ( p == rlimit )		9531667	0					
ANR	9532347	Condition	p == rlimit	214:16:6831:6841	9531667	0	True				
ANR	9532348	EqualityExpression	p == rlimit		9531667	0		==			
ANR	9532349	Identifier	p		9531667	0					
ANR	9532350	Identifier	rlimit		9531667	1					
ANR	9532351	GotoStatement	goto out ;	215:16:6860:6868	9531667	1	True				
ANR	9532352	Identifier	out		9531667	0					
ANR	9532353	ExpressionStatement	bits = * ++ p	216:12:6882:6893	9531667	1	True				
ANR	9532354	AssignmentExpression	bits = * ++ p		9531667	0		=			
ANR	9532355	Identifier	bits		9531667	0					
ANR	9532356	UnaryOperationExpression	* ++ p		9531667	1					
ANR	9532357	UnaryOperator	*		9531667	0					
ANR	9532358	UnaryExpression	++ p		9531667	1					
ANR	9532359	IncDec	++		9531667	0					
ANR	9532360	Identifier	p		9531667	1					
ANR	9532361	ExpressionStatement	bytes_left --	217:12:6907:6919	9531667	2	True				
ANR	9532362	PostIncDecOperationExpression	bytes_left --		9531667	0					
ANR	9532363	Identifier	bytes_left		9531667	0					
ANR	9532364	IncDec	--		9531667	1					
ANR	9532365	IfStatement	if ( low_order )		9531667	3					
ANR	9532366	Condition	low_order	219:12:6943:6951	9531667	0	True				
ANR	9532367	Identifier	low_order		9531667	0					
ANR	9532368	ExpressionStatement	"code += ( uint ) bits << bits_left , bits_left += 8 - code_size"	220:12:6966:7042	9531667	1	True				
ANR	9532369	Expression	"code += ( uint ) bits << bits_left , bits_left += 8 - code_size"		9531667	0					
ANR	9532370	AssignmentExpression	code += ( uint ) bits << bits_left		9531667	0		+=			
ANR	9532371	Identifier	code		9531667	0					
ANR	9532372	ShiftExpression	( uint ) bits << bits_left		9531667	1		<<			
ANR	9532373	CastExpression	( uint ) bits		9531667	0					
ANR	9532374	CastTarget	uint		9531667	0					
ANR	9532375	Identifier	bits		9531667	1					
ANR	9532376	Identifier	bits_left		9531667	1					
ANR	9532377	AssignmentExpression	bits_left += 8 - code_size		9531667	1		+=			
ANR	9532378	Identifier	bits_left		9531667	0					
ANR	9532379	AdditiveExpression	8 - code_size		9531667	1		-			
ANR	9532380	PrimaryExpression	8		9531667	0					
ANR	9532381	Identifier	code_size		9531667	1					
ANR	9532382	ElseStatement	else		9531667	0					
ANR	9532383	ExpressionStatement	"bits_left += 8 - code_size , code += bits >> bits_left"	223:12:7069:7138	9531667	0	True				
ANR	9532384	Expression	"bits_left += 8 - code_size , code += bits >> bits_left"		9531667	0					
ANR	9532385	AssignmentExpression	bits_left += 8 - code_size		9531667	0		+=			
ANR	9532386	Identifier	bits_left		9531667	0					
ANR	9532387	AdditiveExpression	8 - code_size		9531667	1		-			
ANR	9532388	PrimaryExpression	8		9531667	0					
ANR	9532389	Identifier	code_size		9531667	1					
ANR	9532390	AssignmentExpression	code += bits >> bits_left		9531667	1		+=			
ANR	9532391	Identifier	code		9531667	0					
ANR	9532392	ShiftExpression	bits >> bits_left		9531667	1		>>			
ANR	9532393	Identifier	bits		9531667	0					
ANR	9532394	Identifier	bits_left		9531667	1					
ANR	9532395	ElseStatement	else		9531667	0					
ANR	9532396	CompoundStatement		134:11:4242:4242	9531667	0					
ANR	9532397	IfStatement	if ( low_order )		9531667	0					
ANR	9532398	Condition	low_order	226:12:7165:7173	9531667	0	True				
ANR	9532399	Identifier	low_order		9531667	0					
ANR	9532400	ExpressionStatement	"code = bits >> ( 8 - bits_left ) , bits_left -= code_size"	227:12:7188:7258	9531667	1	True				
ANR	9532401	Expression	"code = bits >> ( 8 - bits_left ) , bits_left -= code_size"		9531667	0					
ANR	9532402	AssignmentExpression	code = bits >> ( 8 - bits_left )		9531667	0		=			
ANR	9532403	Identifier	code		9531667	0					
ANR	9532404	ShiftExpression	bits >> ( 8 - bits_left )		9531667	1		>>			
ANR	9532405	Identifier	bits		9531667	0					
ANR	9532406	AdditiveExpression	8 - bits_left		9531667	1		-			
ANR	9532407	PrimaryExpression	8		9531667	0					
ANR	9532408	Identifier	bits_left		9531667	1					
ANR	9532409	AssignmentExpression	bits_left -= code_size		9531667	1		-=			
ANR	9532410	Identifier	bits_left		9531667	0					
ANR	9532411	Identifier	code_size		9531667	1					
ANR	9532412	ElseStatement	else		9531667	0					
ANR	9532413	ExpressionStatement	"bits_left -= code_size , code = bits >> bits_left"	230:12:7285:7349	9531667	0	True				
ANR	9532414	Expression	"bits_left -= code_size , code = bits >> bits_left"		9531667	0					
ANR	9532415	AssignmentExpression	bits_left -= code_size		9531667	0		-=			
ANR	9532416	Identifier	bits_left		9531667	0					
ANR	9532417	Identifier	code_size		9531667	1					
ANR	9532418	AssignmentExpression	code = bits >> bits_left		9531667	1		=			
ANR	9532419	Identifier	code		9531667	0					
ANR	9532420	ShiftExpression	bits >> bits_left		9531667	1		>>			
ANR	9532421	Identifier	bits		9531667	0					
ANR	9532422	Identifier	bits_left		9531667	1					
ANR	9532423	ExpressionStatement	code &= code_mask	233:4:7361:7378	9531667	61	True				
ANR	9532424	AssignmentExpression	code &= code_mask		9531667	0		&=			
ANR	9532425	Identifier	code		9531667	0					
ANR	9532426	Identifier	code_mask		9531667	1					
ANR	9532427	ExpressionStatement	"if_debug2m ( 'W' , ss -> memory , ""[W]reading 0x%x,%d\\n"" , code , code_size )"	234:4:7384:7452	9531667	62	True				
ANR	9532428	CallExpression	"if_debug2m ( 'W' , ss -> memory , ""[W]reading 0x%x,%d\\n"" , code , code_size )"		9531667	0					
ANR	9532429	Callee	if_debug2m		9531667	0					
ANR	9532430	Identifier	if_debug2m		9531667	0					
ANR	9532431	ArgumentList	'W'		9531667	1					
ANR	9532432	Argument	'W'		9531667	0					
ANR	9532433	PrimaryExpression	'W'		9531667	0					
ANR	9532434	Argument	ss -> memory		9531667	1					
ANR	9532435	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532436	Identifier	ss		9531667	0					
ANR	9532437	Identifier	memory		9531667	1					
ANR	9532438	Argument	"""[W]reading 0x%x,%d\\n"""		9531667	2					
ANR	9532439	PrimaryExpression	"""[W]reading 0x%x,%d\\n"""		9531667	0					
ANR	9532440	Argument	code		9531667	3					
ANR	9532441	Identifier	code		9531667	0					
ANR	9532442	Argument	code_size		9531667	4					
ANR	9532443	Identifier	code_size		9531667	0					
ANR	9532444	IfStatement	if ( code >= next_code )		9531667	63					
ANR	9532445	Condition	code >= next_code	244:8:7868:7884	9531667	0	True				
ANR	9532446	RelationalExpression	code >= next_code		9531667	0		>=			
ANR	9532447	Identifier	code		9531667	0					
ANR	9532448	Identifier	next_code		9531667	1					
ANR	9532449	CompoundStatement		153:27:4978:4978	9531667	1					
ANR	9532450	IfStatement	if ( ( code > next_code ) || ( prev_code < 0 ) )		9531667	0					
ANR	9532451	Condition	( code > next_code ) || ( prev_code < 0 )	245:12:7901:7937	9531667	0	True				
ANR	9532452	OrExpression	( code > next_code ) || ( prev_code < 0 )		9531667	0		||			
ANR	9532453	RelationalExpression	code > next_code		9531667	0		>			
ANR	9532454	Identifier	code		9531667	0					
ANR	9532455	Identifier	next_code		9531667	1					
ANR	9532456	RelationalExpression	prev_code < 0		9531667	1		<			
ANR	9532457	Identifier	prev_code		9531667	0					
ANR	9532458	PrimaryExpression	0		9531667	1					
ANR	9532459	CompoundStatement		154:51:5031:5031	9531667	1					
ANR	9532460	ExpressionStatement	"mlprintf3 ( ss -> memory , ""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"" , code , next_code , prev_code )"	247:12:7967:8095	9531667	0	True				
ANR	9532461	CallExpression	"mlprintf3 ( ss -> memory , ""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"" , code , next_code , prev_code )"		9531667	0					
ANR	9532462	Callee	mlprintf3		9531667	0					
ANR	9532463	Identifier	mlprintf3		9531667	0					
ANR	9532464	ArgumentList	ss -> memory		9531667	1					
ANR	9532465	Argument	ss -> memory		9531667	0					
ANR	9532466	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532467	Identifier	ss		9531667	0					
ANR	9532468	Identifier	memory		9531667	1					
ANR	9532469	Argument	"""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"""		9531667	1					
ANR	9532470	PrimaryExpression	"""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"""		9531667	0					
ANR	9532471	Argument	code		9531667	2					
ANR	9532472	Identifier	code		9531667	0					
ANR	9532473	Argument	next_code		9531667	3					
ANR	9532474	Identifier	next_code		9531667	0					
ANR	9532475	Argument	prev_code		9531667	4					
ANR	9532476	Identifier	prev_code		9531667	0					
ANR	9532477	ExpressionStatement	status = ERRC	250:12:8116:8129	9531667	1	True				
ANR	9532478	AssignmentExpression	status = ERRC		9531667	0		=			
ANR	9532479	Identifier	status		9531667	0					
ANR	9532480	Identifier	ERRC		9531667	1					
ANR	9532481	GotoStatement	goto out ;	251:12:8143:8151	9531667	2	True				
ANR	9532482	Identifier	out		9531667	0					
ANR	9532483	ForStatement	for ( c = prev_code ; c != eod ; c = table [ c ] . prefix )		9531667	1					
ANR	9532484	ForInit	c = prev_code ;	255:13:8286:8299	9531667	0	True				
ANR	9532485	AssignmentExpression	c = prev_code		9531667	0		=			
ANR	9532486	Identifier	c		9531667	0					
ANR	9532487	Identifier	prev_code		9531667	1					
ANR	9532488	Condition	c != eod	255:28:8301:8308	9531667	1	True				
ANR	9532489	EqualityExpression	c != eod		9531667	0		!=			
ANR	9532490	Identifier	c		9531667	0					
ANR	9532491	Identifier	eod		9531667	1					
ANR	9532492	AssignmentExpression	c = table [ c ] . prefix	255:38:8311:8329	9531667	2	True	=			
ANR	9532493	Identifier	c		9531667	0					
ANR	9532494	MemberAccess	table [ c ] . prefix		9531667	1					
ANR	9532495	ArrayIndexing	table [ c ]		9531667	0					
ANR	9532496	Identifier	table		9531667	0					
ANR	9532497	Identifier	c		9531667	1					
ANR	9532498	Identifier	prefix		9531667	1					
ANR	9532499	ExpressionStatement	dc_next -> datum = c	256:12:8344:8362	9531667	3	True				
ANR	9532500	AssignmentExpression	dc_next -> datum = c		9531667	0		=			
ANR	9532501	PtrMemberAccess	dc_next -> datum		9531667	0					
ANR	9532502	Identifier	dc_next		9531667	0					
ANR	9532503	Identifier	datum		9531667	1					
ANR	9532504	Identifier	c		9531667	1					
ANR	9532505	ExpressionStatement	len = prev_len + 1	257:8:8372:8390	9531667	2	True				
ANR	9532506	AssignmentExpression	len = prev_len + 1		9531667	0		=			
ANR	9532507	Identifier	len		9531667	0					
ANR	9532508	AdditiveExpression	prev_len + 1		9531667	1		+			
ANR	9532509	Identifier	prev_len		9531667	0					
ANR	9532510	PrimaryExpression	1		9531667	1					
ANR	9532511	ExpressionStatement	"dc_next -> len = min ( len , 255 )"	258:8:8400:8428	9531667	3	True				
ANR	9532512	AssignmentExpression	"dc_next -> len = min ( len , 255 )"		9531667	0		=			
ANR	9532513	PtrMemberAccess	dc_next -> len		9531667	0					
ANR	9532514	Identifier	dc_next		9531667	0					
ANR	9532515	Identifier	len		9531667	1					
ANR	9532516	CallExpression	"min ( len , 255 )"		9531667	1					
ANR	9532517	Callee	min		9531667	0					
ANR	9532518	Identifier	min		9531667	0					
ANR	9532519	ArgumentList	len		9531667	1					
ANR	9532520	Argument	len		9531667	0					
ANR	9532521	Identifier	len		9531667	0					
ANR	9532522	Argument	255		9531667	1					
ANR	9532523	PrimaryExpression	255		9531667	0					
ANR	9532524	ExpressionStatement	dc_next -> prefix = prev_code	259:8:8438:8465	9531667	4	True				
ANR	9532525	AssignmentExpression	dc_next -> prefix = prev_code		9531667	0		=			
ANR	9532526	PtrMemberAccess	dc_next -> prefix		9531667	0					
ANR	9532527	Identifier	dc_next		9531667	0					
ANR	9532528	Identifier	prefix		9531667	1					
ANR	9532529	Identifier	prev_code		9531667	1					
ANR	9532530	ExpressionStatement	"if_debug3m ( 'w' , ss -> memory , ""[w]decoding anomalous 0x%x=0x%x+%c\\n"" , next_code , prev_code , dc_next -> datum )"	260:8:8475:8599	9531667	5	True				
ANR	9532531	CallExpression	"if_debug3m ( 'w' , ss -> memory , ""[w]decoding anomalous 0x%x=0x%x+%c\\n"" , next_code , prev_code , dc_next -> datum )"		9531667	0					
ANR	9532532	Callee	if_debug3m		9531667	0					
ANR	9532533	Identifier	if_debug3m		9531667	0					
ANR	9532534	ArgumentList	'w'		9531667	1					
ANR	9532535	Argument	'w'		9531667	0					
ANR	9532536	PrimaryExpression	'w'		9531667	0					
ANR	9532537	Argument	ss -> memory		9531667	1					
ANR	9532538	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532539	Identifier	ss		9531667	0					
ANR	9532540	Identifier	memory		9531667	1					
ANR	9532541	Argument	"""[w]decoding anomalous 0x%x=0x%x+%c\\n"""		9531667	2					
ANR	9532542	PrimaryExpression	"""[w]decoding anomalous 0x%x=0x%x+%c\\n"""		9531667	0					
ANR	9532543	Argument	next_code		9531667	3					
ANR	9532544	Identifier	next_code		9531667	0					
ANR	9532545	Argument	prev_code		9531667	4					
ANR	9532546	Identifier	prev_code		9531667	0					
ANR	9532547	Argument	dc_next -> datum		9531667	5					
ANR	9532548	PtrMemberAccess	dc_next -> datum		9531667	0					
ANR	9532549	Identifier	dc_next		9531667	0					
ANR	9532550	Identifier	datum		9531667	1					
ANR	9532551	Label	reset :	264:0:8659:8664	9531667	64	True				
ANR	9532552	Identifier	reset		9531667	0					
ANR	9532553	ExpressionStatement	len = table [ code ] . len	265:4:8670:8691	9531667	65	True				
ANR	9532554	AssignmentExpression	len = table [ code ] . len		9531667	0		=			
ANR	9532555	Identifier	len		9531667	0					
ANR	9532556	MemberAccess	table [ code ] . len		9531667	1					
ANR	9532557	ArrayIndexing	table [ code ]		9531667	0					
ANR	9532558	Identifier	table		9531667	0					
ANR	9532559	Identifier	code		9531667	1					
ANR	9532560	Identifier	len		9531667	1					
ANR	9532561	IfStatement	if ( len == 255 )		9531667	66					
ANR	9532562	Condition	len == 255	266:8:8701:8710	9531667	0	True				
ANR	9532563	EqualityExpression	len == 255		9531667	0		==			
ANR	9532564	Identifier	len		9531667	0					
ANR	9532565	PrimaryExpression	255		9531667	1					
ANR	9532566	CompoundStatement		175:20:5804:5804	9531667	1					
ANR	9532567	IfStatement	if ( code == code_reset )		9531667	0					
ANR	9532568	Condition	code == code_reset	269:12:8879:8896	9531667	0	True				
ANR	9532569	EqualityExpression	code == code_reset		9531667	0		==			
ANR	9532570	Identifier	code		9531667	0					
ANR	9532571	Identifier	code_reset		9531667	1					
ANR	9532572	CompoundStatement		178:32:5990:5990	9531667	1					
ANR	9532573	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w]reset: next_code was %d\\n"" , next_code )"	270:12:8913:9006	9531667	0	True				
ANR	9532574	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w]reset: next_code was %d\\n"" , next_code )"		9531667	0					
ANR	9532575	Callee	if_debug1m		9531667	0					
ANR	9532576	Identifier	if_debug1m		9531667	0					
ANR	9532577	ArgumentList	'w'		9531667	1					
ANR	9532578	Argument	'w'		9531667	0					
ANR	9532579	PrimaryExpression	'w'		9531667	0					
ANR	9532580	Argument	ss -> memory		9531667	1					
ANR	9532581	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532582	Identifier	ss		9531667	0					
ANR	9532583	Identifier	memory		9531667	1					
ANR	9532584	Argument	"""[w]reset: next_code was %d\\n"""		9531667	2					
ANR	9532585	PrimaryExpression	"""[w]reset: next_code was %d\\n"""		9531667	0					
ANR	9532586	Argument	next_code		9531667	3					
ANR	9532587	Identifier	next_code		9531667	0					
ANR	9532588	ExpressionStatement	next_code = code_0	272:12:9020:9038	9531667	1	True				
ANR	9532589	AssignmentExpression	next_code = code_0		9531667	0		=			
ANR	9532590	Identifier	next_code		9531667	0					
ANR	9532591	Identifier	code_0		9531667	1					
ANR	9532592	ExpressionStatement	dc_next = table + code_0	273:12:9052:9076	9531667	2	True				
ANR	9532593	AssignmentExpression	dc_next = table + code_0		9531667	0		=			
ANR	9532594	Identifier	dc_next		9531667	0					
ANR	9532595	AdditiveExpression	table + code_0		9531667	1		+			
ANR	9532596	Identifier	table		9531667	0					
ANR	9532597	Identifier	code_0		9531667	1					
ANR	9532598	ExpressionStatement	code_size = ss -> InitialCodeLength + 1	274:12:9090:9127	9531667	3	True				
ANR	9532599	AssignmentExpression	code_size = ss -> InitialCodeLength + 1		9531667	0		=			
ANR	9532600	Identifier	code_size		9531667	0					
ANR	9532601	AdditiveExpression	ss -> InitialCodeLength + 1		9531667	1		+			
ANR	9532602	PtrMemberAccess	ss -> InitialCodeLength		9531667	0					
ANR	9532603	Identifier	ss		9531667	0					
ANR	9532604	Identifier	InitialCodeLength		9531667	1					
ANR	9532605	PrimaryExpression	1		9531667	1					
ANR	9532606	ExpressionStatement	set_code_size ( )	275:12:9141:9156	9531667	4	True				
ANR	9532607	CallExpression	set_code_size ( )		9531667	0					
ANR	9532608	Callee	set_code_size		9531667	0					
ANR	9532609	Identifier	set_code_size		9531667	0					
ANR	9532610	ArgumentList			9531667	1					
ANR	9532611	ExpressionStatement	prev_code = - 1	276:12:9170:9184	9531667	5	True				
ANR	9532612	AssignmentExpression	prev_code = - 1		9531667	0		=			
ANR	9532613	Identifier	prev_code		9531667	0					
ANR	9532614	UnaryOperationExpression	- 1		9531667	1					
ANR	9532615	UnaryOperator	-		9531667	0					
ANR	9532616	PrimaryExpression	1		9531667	1					
ANR	9532617	GotoStatement	goto top ;	277:12:9198:9206	9531667	6	True				
ANR	9532618	Identifier	top		9531667	0					
ANR	9532619	ElseStatement	else		9531667	0					
ANR	9532620	IfStatement	if ( code == eod )		9531667	0					
ANR	9532621	Condition	code == eod	278:19:9227:9237	9531667	0	True				
ANR	9532622	EqualityExpression	code == eod		9531667	0		==			
ANR	9532623	Identifier	code		9531667	0					
ANR	9532624	Identifier	eod		9531667	1					
ANR	9532625	CompoundStatement		187:32:6331:6331	9531667	1					
ANR	9532626	ExpressionStatement	status = EOFC	279:12:9254:9267	9531667	0	True				
ANR	9532627	AssignmentExpression	status = EOFC		9531667	0		=			
ANR	9532628	Identifier	status		9531667	0					
ANR	9532629	Identifier	EOFC		9531667	1					
ANR	9532630	GotoStatement	goto out ;	280:12:9281:9289	9531667	1	True				
ANR	9532631	Identifier	out		9531667	0					
ANR	9532632	ForStatement	"for ( c = code , len = 0 ; c != eod ; len ++ )"		9531667	1					
ANR	9532633	ForInit	"c = code , len = 0 ;"	284:13:9404:9421	9531667	0	True				
ANR	9532634	Expression	"c = code , len = 0"		9531667	0					
ANR	9532635	AssignmentExpression	c = code		9531667	0		=			
ANR	9532636	Identifier	c		9531667	0					
ANR	9532637	Identifier	code		9531667	1					
ANR	9532638	AssignmentExpression	len = 0		9531667	1		=			
ANR	9532639	Identifier	len		9531667	0					
ANR	9532640	PrimaryExpression	0		9531667	1					
ANR	9532641	Condition	c != eod	284:32:9423:9430	9531667	1	True				
ANR	9532642	EqualityExpression	c != eod		9531667	0		!=			
ANR	9532643	Identifier	c		9531667	0					
ANR	9532644	Identifier	eod		9531667	1					
ANR	9532645	PostIncDecOperationExpression	len ++	284:42:9433:9437	9531667	2	True				
ANR	9532646	Identifier	len		9531667	0					
ANR	9532647	IncDec	++		9531667	1					
ANR	9532648	ExpressionStatement	c = table [ c ] . prefix	285:12:9452:9471	9531667	3	True				
ANR	9532649	AssignmentExpression	c = table [ c ] . prefix		9531667	0		=			
ANR	9532650	Identifier	c		9531667	0					
ANR	9532651	MemberAccess	table [ c ] . prefix		9531667	1					
ANR	9532652	ArrayIndexing	table [ c ]		9531667	0					
ANR	9532653	Identifier	table		9531667	0					
ANR	9532654	Identifier	c		9531667	1					
ANR	9532655	Identifier	prefix		9531667	1					
ANR	9532656	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]long code %d, length=%d\\n"" , code , len )"	286:8:9481:9551	9531667	2	True				
ANR	9532657	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]long code %d, length=%d\\n"" , code , len )"		9531667	0					
ANR	9532658	Callee	if_debug2m		9531667	0					
ANR	9532659	Identifier	if_debug2m		9531667	0					
ANR	9532660	ArgumentList	'w'		9531667	1					
ANR	9532661	Argument	'w'		9531667	0					
ANR	9532662	PrimaryExpression	'w'		9531667	0					
ANR	9532663	Argument	ss -> memory		9531667	1					
ANR	9532664	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9532665	Identifier	ss		9531667	0					
ANR	9532666	Identifier	memory		9531667	1					
ANR	9532667	Argument	"""[w]long code %d, length=%d\\n"""		9531667	2					
ANR	9532668	PrimaryExpression	"""[w]long code %d, length=%d\\n"""		9531667	0					
ANR	9532669	Argument	code		9531667	3					
ANR	9532670	Identifier	code		9531667	0					
ANR	9532671	Argument	len		9531667	4					
ANR	9532672	Identifier	len		9531667	0					
ANR	9532673	IfStatement	if ( wlimit - q < len )		9531667	67					
ANR	9532674	Condition	wlimit - q < len	288:8:9567:9582	9531667	0	True				
ANR	9532675	RelationalExpression	wlimit - q < len		9531667	0		<			
ANR	9532676	AdditiveExpression	wlimit - q		9531667	0		-			
ANR	9532677	Identifier	wlimit		9531667	0					
ANR	9532678	Identifier	q		9531667	1					
ANR	9532679	Identifier	len		9531667	1					
ANR	9532680	CompoundStatement		197:26:6676:6676	9531667	1					
ANR	9532681	ExpressionStatement	ss -> copy_code = code	289:8:9595:9615	9531667	0	True				
ANR	9532682	AssignmentExpression	ss -> copy_code = code		9531667	0		=			
ANR	9532683	PtrMemberAccess	ss -> copy_code		9531667	0					
ANR	9532684	Identifier	ss		9531667	0					
ANR	9532685	Identifier	copy_code		9531667	1					
ANR	9532686	Identifier	code		9531667	1					
ANR	9532687	ExpressionStatement	ss -> copy_left = ss -> copy_len = len	290:8:9625:9659	9531667	1	True				
ANR	9532688	AssignmentExpression	ss -> copy_left = ss -> copy_len = len		9531667	0		=			
ANR	9532689	PtrMemberAccess	ss -> copy_left		9531667	0					
ANR	9532690	Identifier	ss		9531667	0					
ANR	9532691	Identifier	copy_left		9531667	1					
ANR	9532692	AssignmentExpression	ss -> copy_len = len		9531667	1		=			
ANR	9532693	PtrMemberAccess	ss -> copy_len		9531667	0					
ANR	9532694	Identifier	ss		9531667	0					
ANR	9532695	Identifier	copy_len		9531667	1					
ANR	9532696	Identifier	len		9531667	1					
ANR	9532697	ExpressionStatement	status = 1	291:8:9669:9679	9531667	2	True				
ANR	9532698	AssignmentExpression	status = 1		9531667	0		=			
ANR	9532699	Identifier	status		9531667	0					
ANR	9532700	PrimaryExpression	1		9531667	1					
ANR	9532701	GotoStatement	goto out ;	292:8:9689:9697	9531667	3	True				
ANR	9532702	Identifier	out		9531667	0					
ANR	9532703	ExpressionStatement	dc = & table [ code ]	296:4:9831:9848	9531667	68	True				
ANR	9532704	AssignmentExpression	dc = & table [ code ]		9531667	0		=			
ANR	9532705	Identifier	dc		9531667	0					
ANR	9532706	UnaryOperationExpression	& table [ code ]		9531667	1					
ANR	9532707	UnaryOperator	&		9531667	0					
ANR	9532708	ArrayIndexing	table [ code ]		9531667	1					
ANR	9532709	Identifier	table		9531667	0					
ANR	9532710	Identifier	code		9531667	1					
ANR	9532711	SwitchStatement	switch ( len )		9531667	69					
ANR	9532712	Condition	len	297:12:9862:9864	9531667	0	True				
ANR	9532713	Identifier	len		9531667	0					
ANR	9532714	CompoundStatement		206:17:6958:6958	9531667	1					
ANR	9532715	Label	default :	298:8:9877:9884	9531667	0	True				
ANR	9532716	Identifier	default		9531667	0					
ANR	9532717	CompoundStatement		209:16:7007:7026	9531667	1					
ANR	9532718	IdentifierDeclStatement	byte * q1 = q += len ;	300:16:9916:9935	9531667	0	True				
ANR	9532719	IdentifierDecl	* q1 = q += len		9531667	0					
ANR	9532720	IdentifierDeclType	byte *		9531667	0					
ANR	9532721	Identifier	q1		9531667	1					
ANR	9532722	AssignmentExpression	* q1 = q += len		9531667	2		=			
ANR	9532723	Identifier	q1		9531667	0					
ANR	9532724	AssignmentExpression	q += len		9531667	1		+=			
ANR	9532725	Identifier	q		9531667	0					
ANR	9532726	Identifier	len		9531667	1					
ANR	9532727	ExpressionStatement	c = code	302:16:9954:9962	9531667	1	True				
ANR	9532728	AssignmentExpression	c = code		9531667	0		=			
ANR	9532729	Identifier	c		9531667	0					
ANR	9532730	Identifier	code		9531667	1					
ANR	9532731	DoStatement	do		9531667	2					
ANR	9532732	CompoundStatement		212:19:7074:7074	9531667	0					
ANR	9532733	ExpressionStatement	* q1 -- = ( dc = & table [ c ] ) -> datum	304:20:10005:10036	9531667	0	True				
ANR	9532734	AssignmentExpression	* q1 -- = ( dc = & table [ c ] ) -> datum		9531667	0		=			
ANR	9532735	UnaryOperationExpression	* q1 --		9531667	0					
ANR	9532736	UnaryOperator	*		9531667	0					
ANR	9532737	PostIncDecOperationExpression	q1 --		9531667	1					
ANR	9532738	Identifier	q1		9531667	0					
ANR	9532739	IncDec	--		9531667	1					
ANR	9532740	PtrMemberAccess	( dc = & table [ c ] ) -> datum		9531667	1					
ANR	9532741	AssignmentExpression	dc = & table [ c ]		9531667	0		=			
ANR	9532742	Identifier	dc		9531667	0					
ANR	9532743	UnaryOperationExpression	& table [ c ]		9531667	1					
ANR	9532744	UnaryOperator	&		9531667	0					
ANR	9532745	ArrayIndexing	table [ c ]		9531667	1					
ANR	9532746	Identifier	table		9531667	0					
ANR	9532747	Identifier	c		9531667	1					
ANR	9532748	Identifier	datum		9531667	1					
ANR	9532749	Condition	( c = dc -> prefix ) != eod	306:23:10079:10101	9531667	1	True				
ANR	9532750	EqualityExpression	( c = dc -> prefix ) != eod		9531667	0		!=			
ANR	9532751	AssignmentExpression	c = dc -> prefix		9531667	0		=			
ANR	9532752	Identifier	c		9531667	0					
ANR	9532753	PtrMemberAccess	dc -> prefix		9531667	1					
ANR	9532754	Identifier	dc		9531667	0					
ANR	9532755	Identifier	prefix		9531667	1					
ANR	9532756	Identifier	eod		9531667	1					
ANR	9532757	ExpressionStatement	b = q1 [ 1 ]	307:16:10121:10130	9531667	3	True				
ANR	9532758	AssignmentExpression	b = q1 [ 1 ]		9531667	0		=			
ANR	9532759	Identifier	b		9531667	0					
ANR	9532760	ArrayIndexing	q1 [ 1 ]		9531667	1					
ANR	9532761	Identifier	q1		9531667	0					
ANR	9532762	PrimaryExpression	1		9531667	1					
ANR	9532763	BreakStatement	break ;	309:12:10158:10163	9531667	2	True				
ANR	9532764	Label	case 3 :	310:8:10173:10179	9531667	3	True				
ANR	9532765	ExpressionStatement	q [ 3 ] = dc -> datum	311:12:10193:10209	9531667	4	True				
ANR	9532766	AssignmentExpression	q [ 3 ] = dc -> datum		9531667	0		=			
ANR	9532767	ArrayIndexing	q [ 3 ]		9531667	0					
ANR	9532768	Identifier	q		9531667	0					
ANR	9532769	PrimaryExpression	3		9531667	1					
ANR	9532770	PtrMemberAccess	dc -> datum		9531667	1					
ANR	9532771	Identifier	dc		9531667	0					
ANR	9532772	Identifier	datum		9531667	1					
ANR	9532773	ExpressionStatement	dc = & table [ dc -> prefix ]	312:12:10223:10246	9531667	5	True				
ANR	9532774	AssignmentExpression	dc = & table [ dc -> prefix ]		9531667	0		=			
ANR	9532775	Identifier	dc		9531667	0					
ANR	9532776	UnaryOperationExpression	& table [ dc -> prefix ]		9531667	1					
ANR	9532777	UnaryOperator	&		9531667	0					
ANR	9532778	ArrayIndexing	table [ dc -> prefix ]		9531667	1					
ANR	9532779	Identifier	table		9531667	0					
ANR	9532780	PtrMemberAccess	dc -> prefix		9531667	1					
ANR	9532781	Identifier	dc		9531667	0					
ANR	9532782	Identifier	prefix		9531667	1					
ANR	9532783	Label	case 2 :	313:8:10256:10262	9531667	6	True				
ANR	9532784	ExpressionStatement	q [ 2 ] = dc -> datum	314:12:10276:10292	9531667	7	True				
ANR	9532785	AssignmentExpression	q [ 2 ] = dc -> datum		9531667	0		=			
ANR	9532786	ArrayIndexing	q [ 2 ]		9531667	0					
ANR	9532787	Identifier	q		9531667	0					
ANR	9532788	PrimaryExpression	2		9531667	1					
ANR	9532789	PtrMemberAccess	dc -> datum		9531667	1					
ANR	9532790	Identifier	dc		9531667	0					
ANR	9532791	Identifier	datum		9531667	1					
ANR	9532792	ExpressionStatement	dc = & table [ dc -> prefix ]	315:12:10306:10329	9531667	8	True				
ANR	9532793	AssignmentExpression	dc = & table [ dc -> prefix ]		9531667	0		=			
ANR	9532794	Identifier	dc		9531667	0					
ANR	9532795	UnaryOperationExpression	& table [ dc -> prefix ]		9531667	1					
ANR	9532796	UnaryOperator	&		9531667	0					
ANR	9532797	ArrayIndexing	table [ dc -> prefix ]		9531667	1					
ANR	9532798	Identifier	table		9531667	0					
ANR	9532799	PtrMemberAccess	dc -> prefix		9531667	1					
ANR	9532800	Identifier	dc		9531667	0					
ANR	9532801	Identifier	prefix		9531667	1					
ANR	9532802	Label	case 1 :	316:8:10339:10345	9531667	9	True				
ANR	9532803	ExpressionStatement	q [ 1 ] = b = dc -> datum	317:12:10359:10379	9531667	10	True				
ANR	9532804	AssignmentExpression	q [ 1 ] = b = dc -> datum		9531667	0		=			
ANR	9532805	ArrayIndexing	q [ 1 ]		9531667	0					
ANR	9532806	Identifier	q		9531667	0					
ANR	9532807	PrimaryExpression	1		9531667	1					
ANR	9532808	AssignmentExpression	b = dc -> datum		9531667	1		=			
ANR	9532809	Identifier	b		9531667	0					
ANR	9532810	PtrMemberAccess	dc -> datum		9531667	1					
ANR	9532811	Identifier	dc		9531667	0					
ANR	9532812	Identifier	datum		9531667	1					
ANR	9532813	ExpressionStatement	q += len	318:12:10393:10401	9531667	11	True				
ANR	9532814	AssignmentExpression	q += len		9531667	0		+=			
ANR	9532815	Identifier	q		9531667	0					
ANR	9532816	Identifier	len		9531667	1					
ANR	9532817	Label	add :	320:2:10411:10414	9531667	70	True				
ANR	9532818	Identifier	add		9531667	0					
ANR	9532819	IfStatement	if ( prev_code >= 0 )		9531667	71					
ANR	9532820	Condition	prev_code >= 0	321:8:10462:10475	9531667	0	True				
ANR	9532821	RelationalExpression	prev_code >= 0		9531667	0		>=			
ANR	9532822	Identifier	prev_code		9531667	0					
ANR	9532823	PrimaryExpression	0		9531667	1					
ANR	9532824	CompoundStatement		230:24:7569:7569	9531667	1					
ANR	9532825	IfStatement	if ( ! old_tiff && next_code == lzw_decode_max )		9531667	0					
ANR	9532826	Condition	! old_tiff && next_code == lzw_decode_max	327:12:10691:10730	9531667	0	True				
ANR	9532827	AndExpression	! old_tiff && next_code == lzw_decode_max		9531667	0		&&			
ANR	9532828	UnaryOperationExpression	! old_tiff		9531667	0					
ANR	9532829	UnaryOperator	!		9531667	0					
ANR	9532830	Identifier	old_tiff		9531667	1					
ANR	9532831	EqualityExpression	next_code == lzw_decode_max		9531667	1		==			
ANR	9532832	Identifier	next_code		9531667	0					
ANR	9532833	Identifier	lzw_decode_max		9531667	1					
ANR	9532834	CompoundStatement		236:54:7824:7824	9531667	1					
ANR	9532835	IfStatement	if ( ! ss -> BlockData )		9531667	0					
ANR	9532836	Condition	! ss -> BlockData	334:16:11028:11041	9531667	0	True				
ANR	9532837	UnaryOperationExpression	! ss -> BlockData		9531667	0					
ANR	9532838	UnaryOperator	!		9531667	0					
ANR	9532839	PtrMemberAccess	ss -> BlockData		9531667	1					
ANR	9532840	Identifier	ss		9531667	0					
ANR	9532841	Identifier	BlockData		9531667	1					
ANR	9532842	CompoundStatement		243:32:8135:8135	9531667	1					
ANR	9532843	IfStatement	if ( bits_left < 8 && p >= rlimit && last )		9531667	0					
ANR	9532844	Condition	bits_left < 8 && p >= rlimit && last	335:20:11094:11129	9531667	0	True				
ANR	9532845	AndExpression	bits_left < 8 && p >= rlimit && last		9531667	0		&&			
ANR	9532846	RelationalExpression	bits_left < 8		9531667	0		<			
ANR	9532847	Identifier	bits_left		9531667	0					
ANR	9532848	PrimaryExpression	8		9531667	1					
ANR	9532849	AndExpression	p >= rlimit && last		9531667	1		&&			
ANR	9532850	RelationalExpression	p >= rlimit		9531667	0		>=			
ANR	9532851	Identifier	p		9531667	0					
ANR	9532852	Identifier	rlimit		9531667	1					
ANR	9532853	Identifier	last		9531667	1					
ANR	9532854	CompoundStatement		244:58:8223:8223	9531667	1					
ANR	9532855	GotoStatement	goto out ;	337:20:11194:11202	9531667	0	True				
ANR	9532856	Identifier	out		9531667	0					
ANR	9532857	IfStatement	if ( bits_left + ( ( rlimit - p ) << 3 ) < code_size )		9531667	1					
ANR	9532858	Condition	bits_left + ( ( rlimit - p ) << 3 ) < code_size	339:20:11242:11284	9531667	0	True				
ANR	9532859	RelationalExpression	bits_left + ( ( rlimit - p ) << 3 ) < code_size		9531667	0		<			
ANR	9532860	AdditiveExpression	bits_left + ( ( rlimit - p ) << 3 )		9531667	0		+			
ANR	9532861	Identifier	bits_left		9531667	0					
ANR	9532862	ShiftExpression	( rlimit - p ) << 3		9531667	1		<<			
ANR	9532863	AdditiveExpression	rlimit - p		9531667	0		-			
ANR	9532864	Identifier	rlimit		9531667	0					
ANR	9532865	Identifier	p		9531667	1					
ANR	9532866	PrimaryExpression	3		9531667	1					
ANR	9532867	Identifier	code_size		9531667	1					
ANR	9532868	CompoundStatement		248:65:8378:8378	9531667	1					
ANR	9532869	IfStatement	if ( last )		9531667	0					
ANR	9532870	Condition	last	344:24:11498:11501	9531667	0	True				
ANR	9532871	Identifier	last		9531667	0					
ANR	9532872	ExpressionStatement	status = ERRC	345:24:11528:11541	9531667	1	True				
ANR	9532873	AssignmentExpression	status = ERRC		9531667	0		=			
ANR	9532874	Identifier	status		9531667	0					
ANR	9532875	Identifier	ERRC		9531667	1					
ANR	9532876	GotoStatement	goto out ;	346:20:11563:11571	9531667	1	True				
ANR	9532877	Identifier	out		9531667	0					
ANR	9532878	IfStatement	if ( low_order )		9531667	2					
ANR	9532879	Condition	low_order	348:20:11611:11619	9531667	0	True				
ANR	9532880	Identifier	low_order		9531667	0					
ANR	9532881	CompoundStatement		257:31:8713:8713	9531667	1					
ANR	9532882	ExpressionStatement	code = bits >> ( 8 - bits_left )	349:20:11644:11674	9531667	0	True				
ANR	9532883	AssignmentExpression	code = bits >> ( 8 - bits_left )		9531667	0		=			
ANR	9532884	Identifier	code		9531667	0					
ANR	9532885	ShiftExpression	bits >> ( 8 - bits_left )		9531667	1		>>			
ANR	9532886	Identifier	bits		9531667	0					
ANR	9532887	AdditiveExpression	8 - bits_left		9531667	1		-			
ANR	9532888	PrimaryExpression	8		9531667	0					
ANR	9532889	Identifier	bits_left		9531667	1					
ANR	9532890	ExpressionStatement	code += ( bits = * ++ p ) << bits_left	350:20:11696:11730	9531667	1	True				
ANR	9532891	AssignmentExpression	code += ( bits = * ++ p ) << bits_left		9531667	0		+=			
ANR	9532892	Identifier	code		9531667	0					
ANR	9532893	ShiftExpression	( bits = * ++ p ) << bits_left		9531667	1		<<			
ANR	9532894	AssignmentExpression	bits = * ++ p		9531667	0		=			
ANR	9532895	Identifier	bits		9531667	0					
ANR	9532896	UnaryOperationExpression	* ++ p		9531667	1					
ANR	9532897	UnaryOperator	*		9531667	0					
ANR	9532898	UnaryExpression	++ p		9531667	1					
ANR	9532899	IncDec	++		9531667	0					
ANR	9532900	Identifier	p		9531667	1					
ANR	9532901	Identifier	bits_left		9531667	1					
ANR	9532902	IfStatement	if ( bits_left + 8 < code_size )		9531667	2					
ANR	9532903	Condition	bits_left + 8 < code_size	351:24:11756:11780	9531667	0	True				
ANR	9532904	RelationalExpression	bits_left + 8 < code_size		9531667	0		<			
ANR	9532905	AdditiveExpression	bits_left + 8		9531667	0		+			
ANR	9532906	Identifier	bits_left		9531667	0					
ANR	9532907	PrimaryExpression	8		9531667	1					
ANR	9532908	Identifier	code_size		9531667	1					
ANR	9532909	ExpressionStatement	code += ( bits = * ++ p ) << ( bits_left + 8 )	352:24:11807:11847	9531667	1	True				
ANR	9532910	AssignmentExpression	code += ( bits = * ++ p ) << ( bits_left + 8 )		9531667	0		+=			
ANR	9532911	Identifier	code		9531667	0					
ANR	9532912	ShiftExpression	( bits = * ++ p ) << ( bits_left + 8 )		9531667	1		<<			
ANR	9532913	AssignmentExpression	bits = * ++ p		9531667	0		=			
ANR	9532914	Identifier	bits		9531667	0					
ANR	9532915	UnaryOperationExpression	* ++ p		9531667	1					
ANR	9532916	UnaryOperator	*		9531667	0					
ANR	9532917	UnaryExpression	++ p		9531667	1					
ANR	9532918	IncDec	++		9531667	0					
ANR	9532919	Identifier	p		9531667	1					
ANR	9532920	AdditiveExpression	bits_left + 8		9531667	1		+			
ANR	9532921	Identifier	bits_left		9531667	0					
ANR	9532922	PrimaryExpression	8		9531667	1					
ANR	9532923	ElseStatement	else		9531667	0					
ANR	9532924	CompoundStatement		262:23:8963:8963	9531667	0					
ANR	9532925	ExpressionStatement	code = bits & ( ( 1 << bits_left ) - 1 )	354:20:11894:11930	9531667	0	True				
ANR	9532926	AssignmentExpression	code = bits & ( ( 1 << bits_left ) - 1 )		9531667	0		=			
ANR	9532927	Identifier	code		9531667	0					
ANR	9532928	BitAndExpression	bits & ( ( 1 << bits_left ) - 1 )		9531667	1		&			
ANR	9532929	Identifier	bits		9531667	0					
ANR	9532930	AdditiveExpression	( 1 << bits_left ) - 1		9531667	1		-			
ANR	9532931	ShiftExpression	1 << bits_left		9531667	0		<<			
ANR	9532932	PrimaryExpression	1		9531667	0					
ANR	9532933	Identifier	bits_left		9531667	1					
ANR	9532934	PrimaryExpression	1		9531667	1					
ANR	9532935	ExpressionStatement	code = ( code << 8 ) + ( bits = * ++ p )	355:20:11952:11986	9531667	1	True				
ANR	9532936	AssignmentExpression	code = ( code << 8 ) + ( bits = * ++ p )		9531667	0		=			
ANR	9532937	Identifier	code		9531667	0					
ANR	9532938	AdditiveExpression	( code << 8 ) + ( bits = * ++ p )		9531667	1		+			
ANR	9532939	ShiftExpression	code << 8		9531667	0		<<			
ANR	9532940	Identifier	code		9531667	0					
ANR	9532941	PrimaryExpression	8		9531667	1					
ANR	9532942	AssignmentExpression	bits = * ++ p		9531667	1		=			
ANR	9532943	Identifier	bits		9531667	0					
ANR	9532944	UnaryOperationExpression	* ++ p		9531667	1					
ANR	9532945	UnaryOperator	*		9531667	0					
ANR	9532946	UnaryExpression	++ p		9531667	1					
ANR	9532947	IncDec	++		9531667	0					
ANR	9532948	Identifier	p		9531667	1					
ANR	9532949	IfStatement	if ( bits_left + 8 < code_size )		9531667	2					
ANR	9532950	Condition	bits_left + 8 < code_size	356:24:12012:12036	9531667	0	True				
ANR	9532951	RelationalExpression	bits_left + 8 < code_size		9531667	0		<			
ANR	9532952	AdditiveExpression	bits_left + 8		9531667	0		+			
ANR	9532953	Identifier	bits_left		9531667	0					
ANR	9532954	PrimaryExpression	8		9531667	1					
ANR	9532955	Identifier	code_size		9531667	1					
ANR	9532956	ExpressionStatement	code = ( code << 8 ) + ( bits = * ++ p )	357:24:12063:12097	9531667	1	True				
ANR	9532957	AssignmentExpression	code = ( code << 8 ) + ( bits = * ++ p )		9531667	0		=			
ANR	9532958	Identifier	code		9531667	0					
ANR	9532959	AdditiveExpression	( code << 8 ) + ( bits = * ++ p )		9531667	1		+			
ANR	9532960	ShiftExpression	code << 8		9531667	0		<<			
ANR	9532961	Identifier	code		9531667	0					
ANR	9532962	PrimaryExpression	8		9531667	1					
ANR	9532963	AssignmentExpression	bits = * ++ p		9531667	1		=			
ANR	9532964	Identifier	bits		9531667	0					
ANR	9532965	UnaryOperationExpression	* ++ p		9531667	1					
ANR	9532966	UnaryOperator	*		9531667	0					
ANR	9532967	UnaryExpression	++ p		9531667	1					
ANR	9532968	IncDec	++		9531667	0					
ANR	9532969	Identifier	p		9531667	1					
ANR	9532970	ExpressionStatement	code >>= ( bits_left - code_size ) & 7	358:20:12119:12155	9531667	3	True				
ANR	9532971	AssignmentExpression	code >>= ( bits_left - code_size ) & 7		9531667	0		>>=			
ANR	9532972	Identifier	code		9531667	0					
ANR	9532973	BitAndExpression	( bits_left - code_size ) & 7		9531667	1		&			
ANR	9532974	AdditiveExpression	bits_left - code_size		9531667	0		-			
ANR	9532975	Identifier	bits_left		9531667	0					
ANR	9532976	Identifier	code_size		9531667	1					
ANR	9532977	PrimaryExpression	7		9531667	1					
ANR	9532978	ExpressionStatement	bits_left = ( bits_left - code_size ) & 7	360:16:12191:12230	9531667	3	True				
ANR	9532979	AssignmentExpression	bits_left = ( bits_left - code_size ) & 7		9531667	0		=			
ANR	9532980	Identifier	bits_left		9531667	0					
ANR	9532981	BitAndExpression	( bits_left - code_size ) & 7		9531667	1		&			
ANR	9532982	AdditiveExpression	bits_left - code_size		9531667	0		-			
ANR	9532983	Identifier	bits_left		9531667	0					
ANR	9532984	Identifier	code_size		9531667	1					
ANR	9532985	PrimaryExpression	7		9531667	1					
ANR	9532986	IfStatement	if ( code == code_reset )		9531667	4					
ANR	9532987	Condition	code == code_reset	361:20:12252:12269	9531667	0	True				
ANR	9532988	EqualityExpression	code == code_reset		9531667	0		==			
ANR	9532989	Identifier	code		9531667	0					
ANR	9532990	Identifier	code_reset		9531667	1					
ANR	9532991	GotoStatement	goto reset ;	362:20:12292:12302	9531667	1	True				
ANR	9532992	Identifier	reset		9531667	0					
ANR	9532993	ExpressionStatement	status = ERRC	364:12:12330:12343	9531667	1	True				
ANR	9532994	AssignmentExpression	status = ERRC		9531667	0		=			
ANR	9532995	Identifier	status		9531667	0					
ANR	9532996	Identifier	ERRC		9531667	1					
ANR	9532997	GotoStatement	goto out ;	365:12:12357:12365	9531667	2	True				
ANR	9532998	Identifier	out		9531667	0					
ANR	9532999	IfStatement	if ( next_code < lzw_decode_max )		9531667	1					
ANR	9533000	Condition	next_code < lzw_decode_max	367:12:12389:12414	9531667	0	True				
ANR	9533001	RelationalExpression	next_code < lzw_decode_max		9531667	0		<			
ANR	9533002	Identifier	next_code		9531667	0					
ANR	9533003	Identifier	lzw_decode_max		9531667	1					
ANR	9533004	CompoundStatement		276:40:9508:9508	9531667	1					
ANR	9533005	ExpressionStatement	dc_next -> datum = b	368:12:12431:12449	9531667	0	True				
ANR	9533006	AssignmentExpression	dc_next -> datum = b		9531667	0		=			
ANR	9533007	PtrMemberAccess	dc_next -> datum		9531667	0					
ANR	9533008	Identifier	dc_next		9531667	0					
ANR	9533009	Identifier	datum		9531667	1					
ANR	9533010	Identifier	b		9531667	1					
ANR	9533011	ExpressionStatement	"dc_next -> len = min ( prev_len , 254 ) + 1"	369:12:12490:12527	9531667	1	True				
ANR	9533012	AssignmentExpression	"dc_next -> len = min ( prev_len , 254 ) + 1"		9531667	0		=			
ANR	9533013	PtrMemberAccess	dc_next -> len		9531667	0					
ANR	9533014	Identifier	dc_next		9531667	0					
ANR	9533015	Identifier	len		9531667	1					
ANR	9533016	AdditiveExpression	"min ( prev_len , 254 ) + 1"		9531667	1		+			
ANR	9533017	CallExpression	"min ( prev_len , 254 )"		9531667	0					
ANR	9533018	Callee	min		9531667	0					
ANR	9533019	Identifier	min		9531667	0					
ANR	9533020	ArgumentList	prev_len		9531667	1					
ANR	9533021	Argument	prev_len		9531667	0					
ANR	9533022	Identifier	prev_len		9531667	0					
ANR	9533023	Argument	254		9531667	1					
ANR	9533024	PrimaryExpression	254		9531667	0					
ANR	9533025	PrimaryExpression	1		9531667	1					
ANR	9533026	ExpressionStatement	dc_next -> prefix = prev_code	370:12:12541:12568	9531667	2	True				
ANR	9533027	AssignmentExpression	dc_next -> prefix = prev_code		9531667	0		=			
ANR	9533028	PtrMemberAccess	dc_next -> prefix		9531667	0					
ANR	9533029	Identifier	dc_next		9531667	0					
ANR	9533030	Identifier	prefix		9531667	1					
ANR	9533031	Identifier	prev_code		9531667	1					
ANR	9533032	ExpressionStatement	dc_next ++	371:12:12582:12591	9531667	3	True				
ANR	9533033	PostIncDecOperationExpression	dc_next ++		9531667	0					
ANR	9533034	Identifier	dc_next		9531667	0					
ANR	9533035	IncDec	++		9531667	1					
ANR	9533036	ExpressionStatement	"if_debug4m ( 'W' , ss -> memory , ""[W]adding 0x%x=0x%x+%c(%d)\\n"" , next_code , prev_code , b , min ( len , 255 ) )"	372:12:12605:12727	9531667	4	True				
ANR	9533037	CallExpression	"if_debug4m ( 'W' , ss -> memory , ""[W]adding 0x%x=0x%x+%c(%d)\\n"" , next_code , prev_code , b , min ( len , 255 ) )"		9531667	0					
ANR	9533038	Callee	if_debug4m		9531667	0					
ANR	9533039	Identifier	if_debug4m		9531667	0					
ANR	9533040	ArgumentList	'W'		9531667	1					
ANR	9533041	Argument	'W'		9531667	0					
ANR	9533042	PrimaryExpression	'W'		9531667	0					
ANR	9533043	Argument	ss -> memory		9531667	1					
ANR	9533044	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9533045	Identifier	ss		9531667	0					
ANR	9533046	Identifier	memory		9531667	1					
ANR	9533047	Argument	"""[W]adding 0x%x=0x%x+%c(%d)\\n"""		9531667	2					
ANR	9533048	PrimaryExpression	"""[W]adding 0x%x=0x%x+%c(%d)\\n"""		9531667	0					
ANR	9533049	Argument	next_code		9531667	3					
ANR	9533050	Identifier	next_code		9531667	0					
ANR	9533051	Argument	prev_code		9531667	4					
ANR	9533052	Identifier	prev_code		9531667	0					
ANR	9533053	Argument	b		9531667	5					
ANR	9533054	Identifier	b		9531667	0					
ANR	9533055	Argument	"min ( len , 255 )"		9531667	6					
ANR	9533056	CallExpression	"min ( len , 255 )"		9531667	0					
ANR	9533057	Callee	min		9531667	0					
ANR	9533058	Identifier	min		9531667	0					
ANR	9533059	ArgumentList	len		9531667	1					
ANR	9533060	Argument	len		9531667	0					
ANR	9533061	Identifier	len		9531667	0					
ANR	9533062	Argument	255		9531667	1					
ANR	9533063	PrimaryExpression	255		9531667	0					
ANR	9533064	IfStatement	if ( ++ next_code == switch_code )		9531667	2					
ANR	9533065	Condition	++ next_code == switch_code	375:12:12751:12776	9531667	0	True				
ANR	9533066	EqualityExpression	++ next_code == switch_code		9531667	0		==			
ANR	9533067	UnaryExpression	++ next_code		9531667	0					
ANR	9533068	IncDec	++		9531667	0					
ANR	9533069	Identifier	next_code		9531667	1					
ANR	9533070	Identifier	switch_code		9531667	1					
ANR	9533071	CompoundStatement		284:40:9870:9870	9531667	1					
ANR	9533072	IfStatement	if ( next_code < lzw_decode_max - 1 )		9531667	0					
ANR	9533073	Condition	next_code < lzw_decode_max - 1	378:16:12941:12970	9531667	0	True				
ANR	9533074	RelationalExpression	next_code < lzw_decode_max - 1		9531667	0		<			
ANR	9533075	Identifier	next_code		9531667	0					
ANR	9533076	AdditiveExpression	lzw_decode_max - 1		9531667	1		-			
ANR	9533077	Identifier	lzw_decode_max		9531667	0					
ANR	9533078	PrimaryExpression	1		9531667	1					
ANR	9533079	CompoundStatement		287:48:10064:10064	9531667	1					
ANR	9533080	ExpressionStatement	code_size ++	379:16:12991:13002	9531667	0	True				
ANR	9533081	PostIncDecOperationExpression	code_size ++		9531667	0					
ANR	9533082	Identifier	code_size		9531667	0					
ANR	9533083	IncDec	++		9531667	1					
ANR	9533084	ExpressionStatement	set_code_size ( )	380:16:13020:13035	9531667	1	True				
ANR	9533085	CallExpression	set_code_size ( )		9531667	0					
ANR	9533086	Callee	set_code_size		9531667	0					
ANR	9533087	Identifier	set_code_size		9531667	0					
ANR	9533088	ArgumentList			9531667	1					
ANR	9533089	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"" , code_size , next_code )"	381:16:13053:13188	9531667	2	True				
ANR	9533090	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"" , code_size , next_code )"		9531667	0					
ANR	9533091	Callee	if_debug2m		9531667	0					
ANR	9533092	Identifier	if_debug2m		9531667	0					
ANR	9533093	ArgumentList	'w'		9531667	1					
ANR	9533094	Argument	'w'		9531667	0					
ANR	9533095	PrimaryExpression	'w'		9531667	0					
ANR	9533096	Argument	ss -> memory		9531667	1					
ANR	9533097	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9533098	Identifier	ss		9531667	0					
ANR	9533099	Identifier	memory		9531667	1					
ANR	9533100	Argument	"""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"""		9531667	2					
ANR	9533101	PrimaryExpression	"""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"""		9531667	0					
ANR	9533102	Argument	code_size		9531667	3					
ANR	9533103	Identifier	code_size		9531667	0					
ANR	9533104	Argument	next_code		9531667	4					
ANR	9533105	Identifier	next_code		9531667	0					
ANR	9533106	ExpressionStatement	prev_code = code	386:4:13224:13240	9531667	72	True				
ANR	9533107	AssignmentExpression	prev_code = code		9531667	0		=			
ANR	9533108	Identifier	prev_code		9531667	0					
ANR	9533109	Identifier	code		9531667	1					
ANR	9533110	ExpressionStatement	prev_len = len	387:4:13246:13260	9531667	73	True				
ANR	9533111	AssignmentExpression	prev_len = len		9531667	0		=			
ANR	9533112	Identifier	prev_len		9531667	0					
ANR	9533113	Identifier	len		9531667	1					
ANR	9533114	GotoStatement	goto top ;	388:4:13266:13274	9531667	74	True				
ANR	9533115	Identifier	top		9531667	0					
ANR	9533116	Label	out :	389:2:13278:13281	9531667	75	True				
ANR	9533117	Identifier	out		9531667	0					
ANR	9533118	ExpressionStatement	pr -> ptr = p	389:6:13282:13293	9531667	76	True				
ANR	9533119	AssignmentExpression	pr -> ptr = p		9531667	0		=			
ANR	9533120	PtrMemberAccess	pr -> ptr		9531667	0					
ANR	9533121	Identifier	pr		9531667	0					
ANR	9533122	Identifier	ptr		9531667	1					
ANR	9533123	Identifier	p		9531667	1					
ANR	9533124	ExpressionStatement	pw -> ptr = q	390:4:13299:13310	9531667	77	True				
ANR	9533125	AssignmentExpression	pw -> ptr = q		9531667	0		=			
ANR	9533126	PtrMemberAccess	pw -> ptr		9531667	0					
ANR	9533127	Identifier	pw		9531667	0					
ANR	9533128	Identifier	ptr		9531667	1					
ANR	9533129	Identifier	q		9531667	1					
ANR	9533130	ExpressionStatement	ss -> code_size = code_size	391:4:13316:13341	9531667	78	True				
ANR	9533131	AssignmentExpression	ss -> code_size = code_size		9531667	0		=			
ANR	9533132	PtrMemberAccess	ss -> code_size		9531667	0					
ANR	9533133	Identifier	ss		9531667	0					
ANR	9533134	Identifier	code_size		9531667	1					
ANR	9533135	Identifier	code_size		9531667	1					
ANR	9533136	ExpressionStatement	ss -> prev_code = prev_code	392:4:13347:13372	9531667	79	True				
ANR	9533137	AssignmentExpression	ss -> prev_code = prev_code		9531667	0		=			
ANR	9533138	PtrMemberAccess	ss -> prev_code		9531667	0					
ANR	9533139	Identifier	ss		9531667	0					
ANR	9533140	Identifier	prev_code		9531667	1					
ANR	9533141	Identifier	prev_code		9531667	1					
ANR	9533142	ExpressionStatement	ss -> prev_len = prev_len	393:4:13378:13401	9531667	80	True				
ANR	9533143	AssignmentExpression	ss -> prev_len = prev_len		9531667	0		=			
ANR	9533144	PtrMemberAccess	ss -> prev_len		9531667	0					
ANR	9533145	Identifier	ss		9531667	0					
ANR	9533146	Identifier	prev_len		9531667	1					
ANR	9533147	Identifier	prev_len		9531667	1					
ANR	9533148	ExpressionStatement	ss -> bits = bits	394:4:13407:13422	9531667	81	True				
ANR	9533149	AssignmentExpression	ss -> bits = bits		9531667	0		=			
ANR	9533150	PtrMemberAccess	ss -> bits		9531667	0					
ANR	9533151	Identifier	ss		9531667	0					
ANR	9533152	Identifier	bits		9531667	1					
ANR	9533153	Identifier	bits		9531667	1					
ANR	9533154	ExpressionStatement	ss -> bits_left = bits_left	395:4:13428:13453	9531667	82	True				
ANR	9533155	AssignmentExpression	ss -> bits_left = bits_left		9531667	0		=			
ANR	9533156	PtrMemberAccess	ss -> bits_left		9531667	0					
ANR	9533157	Identifier	ss		9531667	0					
ANR	9533158	Identifier	bits_left		9531667	1					
ANR	9533159	Identifier	bits_left		9531667	1					
ANR	9533160	ExpressionStatement	ss -> bytes_left = bytes_left	396:4:13459:13486	9531667	83	True				
ANR	9533161	AssignmentExpression	ss -> bytes_left = bytes_left		9531667	0		=			
ANR	9533162	PtrMemberAccess	ss -> bytes_left		9531667	0					
ANR	9533163	Identifier	ss		9531667	0					
ANR	9533164	Identifier	bytes_left		9531667	1					
ANR	9533165	Identifier	bytes_left		9531667	1					
ANR	9533166	ExpressionStatement	ss -> next_code = next_code	397:4:13492:13517	9531667	84	True				
ANR	9533167	AssignmentExpression	ss -> next_code = next_code		9531667	0		=			
ANR	9533168	PtrMemberAccess	ss -> next_code		9531667	0					
ANR	9533169	Identifier	ss		9531667	0					
ANR	9533170	Identifier	next_code		9531667	1					
ANR	9533171	Identifier	next_code		9531667	1					
ANR	9533172	ExpressionStatement	"if_debug3m ( 'w' , ss -> memory , ""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"" , ( int ) ( q - q0 ) , prev_code , next_code )"	398:4:13523:13655	9531667	85	True				
ANR	9533173	CallExpression	"if_debug3m ( 'w' , ss -> memory , ""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"" , ( int ) ( q - q0 ) , prev_code , next_code )"		9531667	0					
ANR	9533174	Callee	if_debug3m		9531667	0					
ANR	9533175	Identifier	if_debug3m		9531667	0					
ANR	9533176	ArgumentList	'w'		9531667	1					
ANR	9533177	Argument	'w'		9531667	0					
ANR	9533178	PrimaryExpression	'w'		9531667	0					
ANR	9533179	Argument	ss -> memory		9531667	1					
ANR	9533180	PtrMemberAccess	ss -> memory		9531667	0					
ANR	9533181	Identifier	ss		9531667	0					
ANR	9533182	Identifier	memory		9531667	1					
ANR	9533183	Argument	"""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"""		9531667	2					
ANR	9533184	PrimaryExpression	"""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"""		9531667	0					
ANR	9533185	Argument	( int ) ( q - q0 )		9531667	3					
ANR	9533186	CastExpression	( int ) ( q - q0 )		9531667	0					
ANR	9533187	CastTarget	int		9531667	0					
ANR	9533188	AdditiveExpression	q - q0		9531667	1		-			
ANR	9533189	Identifier	q		9531667	0					
ANR	9533190	Identifier	q0		9531667	1					
ANR	9533191	Argument	prev_code		9531667	4					
ANR	9533192	Identifier	prev_code		9531667	0					
ANR	9533193	Argument	next_code		9531667	5					
ANR	9533194	Identifier	next_code		9531667	0					
ANR	9533195	ReturnStatement	return status ;	400:4:13661:13674	9531667	86	True				
ANR	9533196	Identifier	status		9531667	0					
ANR	9533197	ReturnType	static int		9531667	1					
ANR	9533198	Identifier	s_LZWD_process		9531667	2					
ANR	9533199	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9531667	3					
ANR	9533200	Parameter	stream_state * st	90:15:2812:2828	9531667	0	True				
ANR	9533201	ParameterType	stream_state *		9531667	0					
ANR	9533202	Identifier	st		9531667	1					
ANR	9533203	Parameter	stream_cursor_read * pr	90:34:2831:2853	9531667	1	True				
ANR	9533204	ParameterType	stream_cursor_read *		9531667	0					
ANR	9533205	Identifier	pr		9531667	1					
ANR	9533206	Parameter	stream_cursor_write * pw	91:15:2871:2894	9531667	2	True				
ANR	9533207	ParameterType	stream_cursor_write *		9531667	0					
ANR	9533208	Identifier	pw		9531667	1					
ANR	9533209	Parameter	bool last	91:41:2897:2905	9531667	3	True				
ANR	9533210	ParameterType	bool		9531667	0					
ANR	9533211	Identifier	last		9531667	1					
ANR	9533212	CFGEntryNode	ENTRY		9531667		True				
ANR	9533213	CFGExitNode	EXIT		9531667		True				
ANR	9533214	Symbol	ss -> BlockData		9531667						
ANR	9533215	Symbol	pr		9531667						
ANR	9533216	Symbol	ss -> copy_len		9531667						
ANR	9533217	Symbol	table [ code ] . len		9531667						
ANR	9533218	Symbol	lzw_decode_max		9531667						
ANR	9533219	Symbol	* ss		9531667						
ANR	9533220	Symbol	* q1		9531667						
ANR	9533221	Symbol	prev_len		9531667						
ANR	9533222	Symbol	pw		9531667						
ANR	9533223	Symbol	wlen		9531667						
ANR	9533224	Symbol	pr -> limit		9531667						
ANR	9533225	Symbol	ss -> OldTiff		9531667						
ANR	9533226	Symbol	code_reset		9531667						
ANR	9533227	Symbol	* dc_next		9531667						
ANR	9533228	Symbol	ss -> prev_len		9531667						
ANR	9533229	Symbol	dc_next -> len		9531667						
ANR	9533230	Symbol	len		9531667						
ANR	9533231	Symbol	ss -> code_size		9531667						
ANR	9533232	Symbol	ss -> table		9531667						
ANR	9533233	Symbol	wlimit		9531667						
ANR	9533234	Symbol	ss -> bytes_left		9531667						
ANR	9533235	Symbol	( dc = & table [ c ] ) -> datum		9531667						
ANR	9533236	Symbol	dc_next -> prefix		9531667						
ANR	9533237	Symbol	pr -> ptr		9531667						
ANR	9533238	Symbol	ss -> copy_code		9531667						
ANR	9533239	Symbol	ss -> table . decode		9531667						
ANR	9533240	Symbol	pw -> ptr		9531667						
ANR	9533241	Symbol	rlimit		9531667						
ANR	9533242	Symbol	dc_next -> datum		9531667						
ANR	9533243	Symbol	last		9531667						
ANR	9533244	Symbol	ss -> prev_code		9531667						
ANR	9533245	Symbol	bytes_left		9531667						
ANR	9533246	Symbol	* dc		9531667						
ANR	9533247	Symbol	prev_code		9531667						
ANR	9533248	Symbol	bits		9531667						
ANR	9533249	Symbol	* table		9531667						
ANR	9533250	Symbol	dc -> datum		9531667						
ANR	9533251	Symbol	* pr		9531667						
ANR	9533252	Symbol	bits_left		9531667						
ANR	9533253	Symbol	* pw		9531667						
ANR	9533254	Symbol	ss -> next_code		9531667						
ANR	9533255	Symbol	code_mask		9531667						
ANR	9533256	Symbol	code_escape		9531667						
ANR	9533257	Symbol	ss -> InitialCodeLength		9531667						
ANR	9533258	Symbol	ss -> copy_left		9531667						
ANR	9533259	Symbol	next_code		9531667						
ANR	9533260	Symbol	ERRC		9531667						
ANR	9533261	Symbol	* code		9531667						
ANR	9533262	Symbol	status		9531667						
ANR	9533263	Symbol	code_size		9531667						
ANR	9533264	Symbol	ss -> bits		9531667						
ANR	9533265	Symbol	ss -> memory		9531667						
ANR	9533266	Symbol	code		9531667						
ANR	9533267	Symbol	* q1 --		9531667						
ANR	9533268	Symbol	EOFC		9531667						
ANR	9533269	Symbol	ss -> FirstBitLowOrder		9531667						
ANR	9533270	Symbol	pw -> limit		9531667						
ANR	9533271	Symbol	set_code_size		9531667						
ANR	9533272	Symbol	min		9531667						
ANR	9533273	Symbol	old_tiff		9531667						
ANR	9533274	Symbol	table [ c ] . prefix		9531667						
ANR	9533275	Symbol	rlen		9531667						
ANR	9533276	Symbol	low_order		9531667						
ANR	9533277	Symbol	ss -> bits_left		9531667						
ANR	9533278	Symbol	table		9531667						
ANR	9533279	Symbol	q0		9531667						
ANR	9533280	Symbol	ss		9531667						
ANR	9533281	Symbol	code_eod		9531667						
ANR	9533282	Symbol	q1		9531667						
ANR	9533283	Symbol	st		9531667						
ANR	9533284	Symbol	b		9531667						
ANR	9533285	Symbol	c		9531667						
ANR	9533286	Symbol	* ++ p		9531667						
ANR	9533287	Symbol	code_0		9531667						
ANR	9533288	Symbol	* c		9531667						
ANR	9533289	Symbol	n		9531667						
ANR	9533290	Symbol	p		9531667						
ANR	9533291	Symbol	dc -> prefix		9531667						
ANR	9533292	Symbol	q		9531667						
ANR	9533293	Symbol	* p		9531667						
ANR	9533294	Symbol	eod		9531667						
ANR	9533295	Symbol	* q		9531667						
ANR	9533296	Symbol	switch_code		9531667						
ANR	9533297	Symbol	dc_next		9531667						
ANR	9533298	Symbol	dc		9531667						
ANR	9533299	DeclStmt									
ANR	9533300	Decl							const stream_template	const stream_template	s_LZWD_template
