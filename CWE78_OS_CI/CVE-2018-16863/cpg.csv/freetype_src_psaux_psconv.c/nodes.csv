command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3551984	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_psaux_psconv.c								
ANR	3551985	DeclStmt									
ANR	3551986	Decl							const FT_Char	const FT_Char [ 128 ]	ft_char_table
ANR	3551987	DeclStmt									
ANR	3551988	Decl							const FT_Char	const FT_Char [ 128 ]	ft_char_table
ANR	3551989	Function	PS_Conv_Strtol	84:2:3575:4909							
ANR	3551990	FunctionDef	"PS_Conv_Strtol (FT_Byte * * cursor , FT_Byte * limit , FT_Long base)"		3551989	0					
ANR	3551991	CompoundStatement		87:2:3684:4909	3551989	0					
ANR	3551992	IdentifierDeclStatement	FT_Byte * p = * cursor ;	88:4:3690:3711	3551989	0	True				
ANR	3551993	IdentifierDecl	* p = * cursor		3551989	0					
ANR	3551994	IdentifierDeclType	FT_Byte *		3551989	0					
ANR	3551995	Identifier	p		3551989	1					
ANR	3551996	AssignmentExpression	* p = * cursor		3551989	2		=			
ANR	3551997	Identifier	p		3551989	0					
ANR	3551998	UnaryOperationExpression	* cursor		3551989	1					
ANR	3551999	UnaryOperator	*		3551989	0					
ANR	3552000	Identifier	cursor		3551989	1					
ANR	3552001	IdentifierDeclStatement	FT_Long num = 0 ;	90:4:3718:3745	3551989	1	True				
ANR	3552002	IdentifierDecl	num = 0		3551989	0					
ANR	3552003	IdentifierDeclType	FT_Long		3551989	0					
ANR	3552004	Identifier	num		3551989	1					
ANR	3552005	AssignmentExpression	num = 0		3551989	2		=			
ANR	3552006	Identifier	num		3551989	0					
ANR	3552007	PrimaryExpression	0		3551989	1					
ANR	3552008	IdentifierDeclStatement	FT_Bool sign = 0 ;	91:4:3751:3778	3551989	2	True				
ANR	3552009	IdentifierDecl	sign = 0		3551989	0					
ANR	3552010	IdentifierDeclType	FT_Bool		3551989	0					
ANR	3552011	Identifier	sign		3551989	1					
ANR	3552012	AssignmentExpression	sign = 0		3551989	2		=			
ANR	3552013	Identifier	sign		3551989	0					
ANR	3552014	PrimaryExpression	0		3551989	1					
ANR	3552015	IdentifierDeclStatement	FT_Bool have_overflow = 0 ;	92:4:3784:3811	3551989	3	True				
ANR	3552016	IdentifierDecl	have_overflow = 0		3551989	0					
ANR	3552017	IdentifierDeclType	FT_Bool		3551989	0					
ANR	3552018	Identifier	have_overflow		3551989	1					
ANR	3552019	AssignmentExpression	have_overflow = 0		3551989	2		=			
ANR	3552020	Identifier	have_overflow		3551989	0					
ANR	3552021	PrimaryExpression	0		3551989	1					
ANR	3552022	IdentifierDeclStatement	FT_Long num_limit ;	94:4:3818:3837	3551989	4	True				
ANR	3552023	IdentifierDecl	num_limit		3551989	0					
ANR	3552024	IdentifierDeclType	FT_Long		3551989	0					
ANR	3552025	Identifier	num_limit		3551989	1					
ANR	3552026	IdentifierDeclStatement	FT_Char c_limit ;	95:4:3843:3860	3551989	5	True				
ANR	3552027	IdentifierDecl	c_limit		3551989	0					
ANR	3552028	IdentifierDeclType	FT_Char		3551989	0					
ANR	3552029	Identifier	c_limit		3551989	1					
ANR	3552030	IfStatement	if ( p >= limit )		3551989	6					
ANR	3552031	Condition	p >= limit	98:9:3873:3882	3551989	0	True				
ANR	3552032	RelationalExpression	p >= limit		3551989	0		>=			
ANR	3552033	Identifier	p		3551989	0					
ANR	3552034	Identifier	limit		3551989	1					
ANR	3552035	GotoStatement	goto Bad ;	99:6:3892:3900	3551989	1	True				
ANR	3552036	Identifier	Bad		3551989	0					
ANR	3552037	IfStatement	if ( base < 2 || base > 36 )		3551989	7					
ANR	3552038	Condition	base < 2 || base > 36	101:9:3912:3932	3551989	0	True				
ANR	3552039	OrExpression	base < 2 || base > 36		3551989	0		||			
ANR	3552040	RelationalExpression	base < 2		3551989	0		<			
ANR	3552041	Identifier	base		3551989	0					
ANR	3552042	PrimaryExpression	2		3551989	1					
ANR	3552043	RelationalExpression	base > 36		3551989	1		>			
ANR	3552044	Identifier	base		3551989	0					
ANR	3552045	PrimaryExpression	36		3551989	1					
ANR	3552046	CompoundStatement		16:4:255:255	3551989	1					
ANR	3552047	ExpressionStatement	"FT_TRACE4 ( ( ""!!!INVALID BASE:!!!"" ) )"	103:6:3948:3984	3551989	0	True				
ANR	3552048	CallExpression	"FT_TRACE4 ( ( ""!!!INVALID BASE:!!!"" ) )"		3551989	0					
ANR	3552049	Callee	FT_TRACE4		3551989	0					
ANR	3552050	Identifier	FT_TRACE4		3551989	0					
ANR	3552051	ArgumentList	"""!!!INVALID BASE:!!!"""		3551989	1					
ANR	3552052	Argument	"""!!!INVALID BASE:!!!"""		3551989	0					
ANR	3552053	PrimaryExpression	"""!!!INVALID BASE:!!!"""		3551989	0					
ANR	3552054	ReturnStatement	return 0 ;	104:6:3992:4000	3551989	1	True				
ANR	3552055	PrimaryExpression	0		3551989	0					
ANR	3552056	IfStatement	if ( * p == '-' || * p == '+' )		3551989	8					
ANR	3552057	Condition	* p == '-' || * p == '+'	107:9:4018:4039	3551989	0	True				
ANR	3552058	OrExpression	* p == '-' || * p == '+'		3551989	0		||			
ANR	3552059	EqualityExpression	* p == '-'		3551989	0		==			
ANR	3552060	UnaryOperationExpression	* p		3551989	0					
ANR	3552061	UnaryOperator	*		3551989	0					
ANR	3552062	Identifier	p		3551989	1					
ANR	3552063	PrimaryExpression	'-'		3551989	1					
ANR	3552064	EqualityExpression	* p == '+'		3551989	1		==			
ANR	3552065	UnaryOperationExpression	* p		3551989	0					
ANR	3552066	UnaryOperator	*		3551989	0					
ANR	3552067	Identifier	p		3551989	1					
ANR	3552068	PrimaryExpression	'+'		3551989	1					
ANR	3552069	CompoundStatement		22:4:362:362	3551989	1					
ANR	3552070	ExpressionStatement	sign = FT_BOOL ( * p == '-' )	109:6:4055:4082	3551989	0	True				
ANR	3552071	AssignmentExpression	sign = FT_BOOL ( * p == '-' )		3551989	0		=			
ANR	3552072	Identifier	sign		3551989	0					
ANR	3552073	CallExpression	FT_BOOL ( * p == '-' )		3551989	1					
ANR	3552074	Callee	FT_BOOL		3551989	0					
ANR	3552075	Identifier	FT_BOOL		3551989	0					
ANR	3552076	ArgumentList	* p == '-'		3551989	1					
ANR	3552077	Argument	* p == '-'		3551989	0					
ANR	3552078	EqualityExpression	* p == '-'		3551989	0		==			
ANR	3552079	UnaryOperationExpression	* p		3551989	0					
ANR	3552080	UnaryOperator	*		3551989	0					
ANR	3552081	Identifier	p		3551989	1					
ANR	3552082	PrimaryExpression	'-'		3551989	1					
ANR	3552083	ExpressionStatement	p ++	111:6:4091:4094	3551989	1	True				
ANR	3552084	PostIncDecOperationExpression	p ++		3551989	0					
ANR	3552085	Identifier	p		3551989	0					
ANR	3552086	IncDec	++		3551989	1					
ANR	3552087	IfStatement	if ( p == limit )		3551989	2					
ANR	3552088	Condition	p == limit	112:11:4107:4116	3551989	0	True				
ANR	3552089	EqualityExpression	p == limit		3551989	0		==			
ANR	3552090	Identifier	p		3551989	0					
ANR	3552091	Identifier	limit		3551989	1					
ANR	3552092	GotoStatement	goto Bad ;	113:8:4128:4136	3551989	1	True				
ANR	3552093	Identifier	Bad		3551989	0					
ANR	3552094	IfStatement	if ( * p == '-' || * p == '+' )		3551989	3					
ANR	3552095	Condition	* p == '-' || * p == '+'	116:11:4192:4213	3551989	0	True				
ANR	3552096	OrExpression	* p == '-' || * p == '+'		3551989	0		||			
ANR	3552097	EqualityExpression	* p == '-'		3551989	0		==			
ANR	3552098	UnaryOperationExpression	* p		3551989	0					
ANR	3552099	UnaryOperator	*		3551989	0					
ANR	3552100	Identifier	p		3551989	1					
ANR	3552101	PrimaryExpression	'-'		3551989	1					
ANR	3552102	EqualityExpression	* p == '+'		3551989	1		==			
ANR	3552103	UnaryOperationExpression	* p		3551989	0					
ANR	3552104	UnaryOperator	*		3551989	0					
ANR	3552105	Identifier	p		3551989	1					
ANR	3552106	PrimaryExpression	'+'		3551989	1					
ANR	3552107	ReturnStatement	return 0 ;	117:8:4225:4233	3551989	1	True				
ANR	3552108	PrimaryExpression	0		3551989	0					
ANR	3552109	ExpressionStatement	num_limit = 0x7FFFFFFFL / base	120:4:4246:4276	3551989	9	True				
ANR	3552110	AssignmentExpression	num_limit = 0x7FFFFFFFL / base		3551989	0		=			
ANR	3552111	Identifier	num_limit		3551989	0					
ANR	3552112	MultiplicativeExpression	0x7FFFFFFFL / base		3551989	1		/			
ANR	3552113	PrimaryExpression	0x7FFFFFFFL		3551989	0					
ANR	3552114	Identifier	base		3551989	1					
ANR	3552115	ExpressionStatement	c_limit = ( FT_Char ) ( 0x7FFFFFFFL % base )	121:4:4282:4325	3551989	10	True				
ANR	3552116	AssignmentExpression	c_limit = ( FT_Char ) ( 0x7FFFFFFFL % base )		3551989	0		=			
ANR	3552117	Identifier	c_limit		3551989	0					
ANR	3552118	CastExpression	( FT_Char ) ( 0x7FFFFFFFL % base )		3551989	1					
ANR	3552119	CastTarget	FT_Char		3551989	0					
ANR	3552120	MultiplicativeExpression	0x7FFFFFFFL % base		3551989	1		%			
ANR	3552121	PrimaryExpression	0x7FFFFFFFL		3551989	0					
ANR	3552122	Identifier	base		3551989	1					
ANR	3552123	ForStatement	for ( ; p < limit ; p ++ )		3551989	11					
ANR	3552124	Condition	p < limit	123:12:4340:4348	3551989	0	True				
ANR	3552125	RelationalExpression	p < limit		3551989	0		<			
ANR	3552126	Identifier	p		3551989	0					
ANR	3552127	Identifier	limit		3551989	1					
ANR	3552128	PostIncDecOperationExpression	p ++	123:23:4351:4353	3551989	1	True				
ANR	3552129	Identifier	p		3551989	0					
ANR	3552130	IncDec	++		3551989	1					
ANR	3552131	CompoundStatement		39:6:684:694	3551989	2					
ANR	3552132	IdentifierDeclStatement	FT_Char c ;	125:6:4369:4379	3551989	0	True				
ANR	3552133	IdentifierDecl	c		3551989	0					
ANR	3552134	IdentifierDeclType	FT_Char		3551989	0					
ANR	3552135	Identifier	c		3551989	1					
ANR	3552136	Statement	if	128:6:4389:4390	3551989	1	True				
ANR	3552137	Statement	(	128:9:4392:4392	3551989	2	True				
ANR	3552138	Statement	IS_PS_SPACE	128:11:4394:4404	3551989	3	True				
ANR	3552139	Statement	(	128:22:4405:4405	3551989	4	True				
ANR	3552140	Statement	*	128:24:4407:4407	3551989	5	True				
ANR	3552141	Statement	p	128:25:4408:4408	3551989	6	True				
ANR	3552142	Statement	)	128:27:4410:4410	3551989	7	True				
ANR	3552143	Statement	||	128:29:4412:4413	3551989	8	True				
ANR	3552144	Statement	*	128:32:4415:4415	3551989	9	True				
ANR	3552145	Statement	p	128:33:4416:4416	3551989	10	True				
ANR	3552146	Statement	OP	128:35:4418:4419	3551989	11	True				
ANR	3552147	Statement	0x80	128:38:4421:4424	3551989	12	True				
ANR	3552148	Statement	)	128:43:4426:4426	3551989	13	True				
ANR	3552149	BreakStatement	break ;	129:8:4436:4441	3551989	14	True				
ANR	3552150	ExpressionStatement	c = ft_char_table [ * p & 0x7F ]	131:6:4450:4478	3551989	15	True				
ANR	3552151	AssignmentExpression	c = ft_char_table [ * p & 0x7F ]		3551989	0		=			
ANR	3552152	Identifier	c		3551989	0					
ANR	3552153	ArrayIndexing	ft_char_table [ * p & 0x7F ]		3551989	1					
ANR	3552154	Identifier	ft_char_table		3551989	0					
ANR	3552155	BitAndExpression	* p & 0x7F		3551989	1		&			
ANR	3552156	UnaryOperationExpression	* p		3551989	0					
ANR	3552157	UnaryOperator	*		3551989	0					
ANR	3552158	Identifier	p		3551989	1					
ANR	3552159	PrimaryExpression	0x7F		3551989	1					
ANR	3552160	IfStatement	if ( c < 0 || c >= base )		3551989	16					
ANR	3552161	Condition	c < 0 || c >= base	133:11:4492:4509	3551989	0	True				
ANR	3552162	OrExpression	c < 0 || c >= base		3551989	0		||			
ANR	3552163	RelationalExpression	c < 0		3551989	0		<			
ANR	3552164	Identifier	c		3551989	0					
ANR	3552165	PrimaryExpression	0		3551989	1					
ANR	3552166	RelationalExpression	c >= base		3551989	1		>=			
ANR	3552167	Identifier	c		3551989	0					
ANR	3552168	Identifier	base		3551989	1					
ANR	3552169	BreakStatement	break ;	134:8:4521:4526	3551989	1	True				
ANR	3552170	IfStatement	if ( num > num_limit || ( num == num_limit && c > c_limit ) )		3551989	17					
ANR	3552171	Condition	num > num_limit || ( num == num_limit && c > c_limit )	136:11:4540:4593	3551989	0	True				
ANR	3552172	OrExpression	num > num_limit || ( num == num_limit && c > c_limit )		3551989	0		||			
ANR	3552173	RelationalExpression	num > num_limit		3551989	0		>			
ANR	3552174	Identifier	num		3551989	0					
ANR	3552175	Identifier	num_limit		3551989	1					
ANR	3552176	AndExpression	num == num_limit && c > c_limit		3551989	1		&&			
ANR	3552177	EqualityExpression	num == num_limit		3551989	0		==			
ANR	3552178	Identifier	num		3551989	0					
ANR	3552179	Identifier	num_limit		3551989	1					
ANR	3552180	RelationalExpression	c > c_limit		3551989	1		>			
ANR	3552181	Identifier	c		3551989	0					
ANR	3552182	Identifier	c_limit		3551989	1					
ANR	3552183	ExpressionStatement	have_overflow = 1	137:8:4605:4622	3551989	1	True				
ANR	3552184	AssignmentExpression	have_overflow = 1		3551989	0		=			
ANR	3552185	Identifier	have_overflow		3551989	0					
ANR	3552186	PrimaryExpression	1		3551989	1					
ANR	3552187	ElseStatement	else		3551989	0					
ANR	3552188	ExpressionStatement	num = num * base + c	139:8:4643:4663	3551989	0	True				
ANR	3552189	AssignmentExpression	num = num * base + c		3551989	0		=			
ANR	3552190	Identifier	num		3551989	0					
ANR	3552191	AdditiveExpression	num * base + c		3551989	1		+			
ANR	3552192	MultiplicativeExpression	num * base		3551989	0		*			
ANR	3552193	Identifier	num		3551989	0					
ANR	3552194	Identifier	base		3551989	1					
ANR	3552195	Identifier	c		3551989	1					
ANR	3552196	ExpressionStatement	* cursor = p	142:4:4676:4687	3551989	12	True				
ANR	3552197	AssignmentExpression	* cursor = p		3551989	0		=			
ANR	3552198	UnaryOperationExpression	* cursor		3551989	0					
ANR	3552199	UnaryOperator	*		3551989	0					
ANR	3552200	Identifier	cursor		3551989	1					
ANR	3552201	Identifier	p		3551989	1					
ANR	3552202	IfStatement	if ( have_overflow )		3551989	13					
ANR	3552203	Condition	have_overflow	144:9:4699:4711	3551989	0	True				
ANR	3552204	Identifier	have_overflow		3551989	0					
ANR	3552205	CompoundStatement		59:4:1034:1034	3551989	1					
ANR	3552206	ExpressionStatement	num = 0x7FFFFFFFL	146:6:4727:4744	3551989	0	True				
ANR	3552207	AssignmentExpression	num = 0x7FFFFFFFL		3551989	0		=			
ANR	3552208	Identifier	num		3551989	0					
ANR	3552209	PrimaryExpression	0x7FFFFFFFL		3551989	1					
ANR	3552210	ExpressionStatement	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"	147:6:4752:4784	3551989	1	True				
ANR	3552211	CallExpression	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"		3551989	0					
ANR	3552212	Callee	FT_TRACE4		3551989	0					
ANR	3552213	Identifier	FT_TRACE4		3551989	0					
ANR	3552214	ArgumentList	"""!!!OVERFLOW:!!!"""		3551989	1					
ANR	3552215	Argument	"""!!!OVERFLOW:!!!"""		3551989	0					
ANR	3552216	PrimaryExpression	"""!!!OVERFLOW:!!!"""		3551989	0					
ANR	3552217	IfStatement	if ( sign )		3551989	14					
ANR	3552218	Condition	sign	150:9:4802:4805	3551989	0	True				
ANR	3552219	Identifier	sign		3551989	0					
ANR	3552220	ExpressionStatement	num = - num	151:6:4815:4825	3551989	1	True				
ANR	3552221	AssignmentExpression	num = - num		3551989	0		=			
ANR	3552222	Identifier	num		3551989	0					
ANR	3552223	UnaryOperationExpression	- num		3551989	1					
ANR	3552224	UnaryOperator	-		3551989	0					
ANR	3552225	Identifier	num		3551989	1					
ANR	3552226	ReturnStatement	return num ;	153:4:4832:4842	3551989	15	True				
ANR	3552227	Identifier	num		3551989	0					
ANR	3552228	Label	Bad :	155:2:4847:4850	3551989	16	True				
ANR	3552229	Identifier	Bad		3551989	0					
ANR	3552230	ExpressionStatement	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"	156:4:4856:4891	3551989	17	True				
ANR	3552231	CallExpression	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"		3551989	0					
ANR	3552232	Callee	FT_TRACE4		3551989	0					
ANR	3552233	Identifier	FT_TRACE4		3551989	0					
ANR	3552234	ArgumentList	"""!!!END OF DATA:!!!"""		3551989	1					
ANR	3552235	Argument	"""!!!END OF DATA:!!!"""		3551989	0					
ANR	3552236	PrimaryExpression	"""!!!END OF DATA:!!!"""		3551989	0					
ANR	3552237	ReturnStatement	return 0 ;	157:4:4897:4905	3551989	18	True				
ANR	3552238	PrimaryExpression	0		3551989	0					
ANR	3552239	Identifier	PS_Conv_Strtol		3551989	1					
ANR	3552240	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Long base"		3551989	2					
ANR	3552241	Parameter	FT_Byte * * cursor	84:18:3591:3607	3551989	0	True				
ANR	3552242	ParameterType	FT_Byte * *		3551989	0					
ANR	3552243	Identifier	cursor		3551989	1					
ANR	3552244	Parameter	FT_Byte * limit	85:18:3628:3643	3551989	1	True				
ANR	3552245	ParameterType	FT_Byte *		3551989	0					
ANR	3552246	Identifier	limit		3551989	1					
ANR	3552247	Parameter	FT_Long base	86:18:3664:3678	3551989	2	True				
ANR	3552248	ParameterType	FT_Long		3551989	0					
ANR	3552249	Identifier	base		3551989	1					
ANR	3552250	CFGEntryNode	ENTRY		3551989		True				
ANR	3552251	CFGExitNode	EXIT		3551989		True				
ANR	3552252	Symbol	cursor		3551989						
ANR	3552253	Symbol	* cursor		3551989						
ANR	3552254	Symbol	c		3551989						
ANR	3552255	Symbol	* ft_char_table		3551989						
ANR	3552256	Symbol	num		3551989						
ANR	3552257	Symbol	sign		3551989						
ANR	3552258	Symbol	p		3551989						
ANR	3552259	Symbol	c_limit		3551989						
ANR	3552260	Symbol	limit		3551989						
ANR	3552261	Symbol	num_limit		3551989						
ANR	3552262	Symbol	* p		3551989						
ANR	3552263	Symbol	* * p		3551989						
ANR	3552264	Symbol	have_overflow		3551989						
ANR	3552265	Symbol	ft_char_table		3551989						
ANR	3552266	Symbol	FT_BOOL		3551989						
ANR	3552267	Symbol	base		3551989						
ANR	3552268	Function	PS_Conv_ToInt	162:2:4941:5382							
ANR	3552269	FunctionDef	"PS_Conv_ToInt (FT_Byte * * cursor , FT_Byte * limit)"		3552268	0					
ANR	3552270	CompoundStatement		165:2:5014:5382	3552268	0					
ANR	3552271	IdentifierDeclStatement	FT_Byte * p = * cursor ;	166:4:5020:5041	3552268	0	True				
ANR	3552272	IdentifierDecl	* p = * cursor		3552268	0					
ANR	3552273	IdentifierDeclType	FT_Byte *		3552268	0					
ANR	3552274	Identifier	p		3552268	1					
ANR	3552275	AssignmentExpression	* p = * cursor		3552268	2		=			
ANR	3552276	Identifier	p		3552268	0					
ANR	3552277	UnaryOperationExpression	* cursor		3552268	1					
ANR	3552278	UnaryOperator	*		3552268	0					
ANR	3552279	Identifier	cursor		3552268	1					
ANR	3552280	IdentifierDeclStatement	FT_Byte * curp ;	167:4:5047:5061	3552268	1	True				
ANR	3552281	IdentifierDecl	* curp		3552268	0					
ANR	3552282	IdentifierDeclType	FT_Byte *		3552268	0					
ANR	3552283	Identifier	curp		3552268	1					
ANR	3552284	IdentifierDeclStatement	FT_Long num ;	169:4:5068:5081	3552268	2	True				
ANR	3552285	IdentifierDecl	num		3552268	0					
ANR	3552286	IdentifierDeclType	FT_Long		3552268	0					
ANR	3552287	Identifier	num		3552268	1					
ANR	3552288	ExpressionStatement	curp = p	172:4:5089:5097	3552268	3	True				
ANR	3552289	AssignmentExpression	curp = p		3552268	0		=			
ANR	3552290	Identifier	curp		3552268	0					
ANR	3552291	Identifier	p		3552268	1					
ANR	3552292	ExpressionStatement	"num = PS_Conv_Strtol ( & p , limit , 10 )"	173:4:5103:5141	3552268	4	True				
ANR	3552293	AssignmentExpression	"num = PS_Conv_Strtol ( & p , limit , 10 )"		3552268	0		=			
ANR	3552294	Identifier	num		3552268	0					
ANR	3552295	CallExpression	"PS_Conv_Strtol ( & p , limit , 10 )"		3552268	1					
ANR	3552296	Callee	PS_Conv_Strtol		3552268	0					
ANR	3552297	Identifier	PS_Conv_Strtol		3552268	0					
ANR	3552298	ArgumentList	& p		3552268	1					
ANR	3552299	Argument	& p		3552268	0					
ANR	3552300	UnaryOperationExpression	& p		3552268	0					
ANR	3552301	UnaryOperator	&		3552268	0					
ANR	3552302	Identifier	p		3552268	1					
ANR	3552303	Argument	limit		3552268	1					
ANR	3552304	Identifier	limit		3552268	0					
ANR	3552305	Argument	10		3552268	2					
ANR	3552306	PrimaryExpression	10		3552268	0					
ANR	3552307	IfStatement	if ( p == curp )		3552268	5					
ANR	3552308	Condition	p == curp	175:9:5153:5161	3552268	0	True				
ANR	3552309	EqualityExpression	p == curp		3552268	0		==			
ANR	3552310	Identifier	p		3552268	0					
ANR	3552311	Identifier	curp		3552268	1					
ANR	3552312	ReturnStatement	return 0 ;	176:6:5171:5179	3552268	1	True				
ANR	3552313	PrimaryExpression	0		3552268	0					
ANR	3552314	IfStatement	if ( p < limit && * p == '#' )		3552268	6					
ANR	3552315	Condition	p < limit && * p == '#'	178:9:5191:5212	3552268	0	True				
ANR	3552316	AndExpression	p < limit && * p == '#'		3552268	0		&&			
ANR	3552317	RelationalExpression	p < limit		3552268	0		<			
ANR	3552318	Identifier	p		3552268	0					
ANR	3552319	Identifier	limit		3552268	1					
ANR	3552320	EqualityExpression	* p == '#'		3552268	1		==			
ANR	3552321	UnaryOperationExpression	* p		3552268	0					
ANR	3552322	UnaryOperator	*		3552268	0					
ANR	3552323	Identifier	p		3552268	1					
ANR	3552324	PrimaryExpression	'#'		3552268	1					
ANR	3552325	CompoundStatement		15:4:205:205	3552268	1					
ANR	3552326	ExpressionStatement	p ++	180:6:5228:5231	3552268	0	True				
ANR	3552327	PostIncDecOperationExpression	p ++		3552268	0					
ANR	3552328	Identifier	p		3552268	0					
ANR	3552329	IncDec	++		3552268	1					
ANR	3552330	ExpressionStatement	curp = p	182:6:5240:5248	3552268	1	True				
ANR	3552331	AssignmentExpression	curp = p		3552268	0		=			
ANR	3552332	Identifier	curp		3552268	0					
ANR	3552333	Identifier	p		3552268	1					
ANR	3552334	ExpressionStatement	"num = PS_Conv_Strtol ( & p , limit , num )"	183:6:5256:5295	3552268	2	True				
ANR	3552335	AssignmentExpression	"num = PS_Conv_Strtol ( & p , limit , num )"		3552268	0		=			
ANR	3552336	Identifier	num		3552268	0					
ANR	3552337	CallExpression	"PS_Conv_Strtol ( & p , limit , num )"		3552268	1					
ANR	3552338	Callee	PS_Conv_Strtol		3552268	0					
ANR	3552339	Identifier	PS_Conv_Strtol		3552268	0					
ANR	3552340	ArgumentList	& p		3552268	1					
ANR	3552341	Argument	& p		3552268	0					
ANR	3552342	UnaryOperationExpression	& p		3552268	0					
ANR	3552343	UnaryOperator	&		3552268	0					
ANR	3552344	Identifier	p		3552268	1					
ANR	3552345	Argument	limit		3552268	1					
ANR	3552346	Identifier	limit		3552268	0					
ANR	3552347	Argument	num		3552268	2					
ANR	3552348	Identifier	num		3552268	0					
ANR	3552349	IfStatement	if ( p == curp )		3552268	3					
ANR	3552350	Condition	p == curp	185:11:5309:5317	3552268	0	True				
ANR	3552351	EqualityExpression	p == curp		3552268	0		==			
ANR	3552352	Identifier	p		3552268	0					
ANR	3552353	Identifier	curp		3552268	1					
ANR	3552354	ReturnStatement	return 0 ;	186:8:5329:5337	3552268	1	True				
ANR	3552355	PrimaryExpression	0		3552268	0					
ANR	3552356	ExpressionStatement	* cursor = p	189:4:5350:5361	3552268	7	True				
ANR	3552357	AssignmentExpression	* cursor = p		3552268	0		=			
ANR	3552358	UnaryOperationExpression	* cursor		3552268	0					
ANR	3552359	UnaryOperator	*		3552268	0					
ANR	3552360	Identifier	cursor		3552268	1					
ANR	3552361	Identifier	p		3552268	1					
ANR	3552362	ReturnStatement	return num ;	191:4:5368:5378	3552268	8	True				
ANR	3552363	Identifier	num		3552268	0					
ANR	3552364	Identifier	PS_Conv_ToInt		3552268	1					
ANR	3552365	ParameterList	"FT_Byte * * cursor , FT_Byte * limit"		3552268	2					
ANR	3552366	Parameter	FT_Byte * * cursor	162:17:4956:4972	3552268	0	True				
ANR	3552367	ParameterType	FT_Byte * *		3552268	0					
ANR	3552368	Identifier	cursor		3552268	1					
ANR	3552369	Parameter	FT_Byte * limit	163:17:4992:5007	3552268	1	True				
ANR	3552370	ParameterType	FT_Byte *		3552268	0					
ANR	3552371	Identifier	limit		3552268	1					
ANR	3552372	CFGEntryNode	ENTRY		3552268		True				
ANR	3552373	CFGExitNode	EXIT		3552268		True				
ANR	3552374	Symbol	cursor		3552268						
ANR	3552375	Symbol	p		3552268						
ANR	3552376	Symbol	* cursor		3552268						
ANR	3552377	Symbol	& p		3552268						
ANR	3552378	Symbol	num		3552268						
ANR	3552379	Symbol	limit		3552268						
ANR	3552380	Symbol	PS_Conv_Strtol		3552268						
ANR	3552381	Symbol	* p		3552268						
ANR	3552382	Symbol	curp		3552268						
ANR	3552383	Function	PS_Conv_ToFixed	196:2:5415:8628							
ANR	3552384	FunctionDef	"PS_Conv_ToFixed (FT_Byte * * cursor , FT_Byte * limit , FT_Long power_ten)"		3552383	0					
ANR	3552385	CompoundStatement		199:2:5532:8628	3552383	0					
ANR	3552386	IdentifierDeclStatement	FT_Byte * p = * cursor ;	200:4:5538:5559	3552383	0	True				
ANR	3552387	IdentifierDecl	* p = * cursor		3552383	0					
ANR	3552388	IdentifierDeclType	FT_Byte *		3552383	0					
ANR	3552389	Identifier	p		3552383	1					
ANR	3552390	AssignmentExpression	* p = * cursor		3552383	2		=			
ANR	3552391	Identifier	p		3552383	0					
ANR	3552392	UnaryOperationExpression	* cursor		3552383	1					
ANR	3552393	UnaryOperator	*		3552383	0					
ANR	3552394	Identifier	cursor		3552383	1					
ANR	3552395	IdentifierDeclStatement	FT_Byte * curp ;	201:4:5565:5579	3552383	1	True				
ANR	3552396	IdentifierDecl	* curp		3552383	0					
ANR	3552397	IdentifierDeclType	FT_Byte *		3552383	0					
ANR	3552398	Identifier	curp		3552383	1					
ANR	3552399	IdentifierDeclStatement	FT_Fixed integral = 0 ;	203:4:5586:5608	3552383	2	True				
ANR	3552400	IdentifierDecl	integral = 0		3552383	0					
ANR	3552401	IdentifierDeclType	FT_Fixed		3552383	0					
ANR	3552402	Identifier	integral		3552383	1					
ANR	3552403	AssignmentExpression	integral = 0		3552383	2		=			
ANR	3552404	Identifier	integral		3552383	0					
ANR	3552405	PrimaryExpression	0		3552383	1					
ANR	3552406	IdentifierDeclStatement	FT_Long decimal = 0 ;	204:4:5614:5636	3552383	3	True				
ANR	3552407	IdentifierDecl	decimal = 0		3552383	0					
ANR	3552408	IdentifierDeclType	FT_Long		3552383	0					
ANR	3552409	Identifier	decimal		3552383	1					
ANR	3552410	AssignmentExpression	decimal = 0		3552383	2		=			
ANR	3552411	Identifier	decimal		3552383	0					
ANR	3552412	PrimaryExpression	0		3552383	1					
ANR	3552413	IdentifierDeclStatement	FT_Long divider = 1 ;	205:4:5642:5664	3552383	4	True				
ANR	3552414	IdentifierDecl	divider = 1		3552383	0					
ANR	3552415	IdentifierDeclType	FT_Long		3552383	0					
ANR	3552416	Identifier	divider		3552383	1					
ANR	3552417	AssignmentExpression	divider = 1		3552383	2		=			
ANR	3552418	Identifier	divider		3552383	0					
ANR	3552419	PrimaryExpression	1		3552383	1					
ANR	3552420	IdentifierDeclStatement	FT_Bool sign = 0 ;	207:4:5671:5699	3552383	5	True				
ANR	3552421	IdentifierDecl	sign = 0		3552383	0					
ANR	3552422	IdentifierDeclType	FT_Bool		3552383	0					
ANR	3552423	Identifier	sign		3552383	1					
ANR	3552424	AssignmentExpression	sign = 0		3552383	2		=			
ANR	3552425	Identifier	sign		3552383	0					
ANR	3552426	PrimaryExpression	0		3552383	1					
ANR	3552427	IdentifierDeclStatement	FT_Bool have_overflow = 0 ;	208:4:5705:5733	3552383	6	True				
ANR	3552428	IdentifierDecl	have_overflow = 0		3552383	0					
ANR	3552429	IdentifierDeclType	FT_Bool		3552383	0					
ANR	3552430	Identifier	have_overflow		3552383	1					
ANR	3552431	AssignmentExpression	have_overflow = 0		3552383	2		=			
ANR	3552432	Identifier	have_overflow		3552383	0					
ANR	3552433	PrimaryExpression	0		3552383	1					
ANR	3552434	IdentifierDeclStatement	FT_Bool have_underflow = 0 ;	209:4:5739:5767	3552383	7	True				
ANR	3552435	IdentifierDecl	have_underflow = 0		3552383	0					
ANR	3552436	IdentifierDeclType	FT_Bool		3552383	0					
ANR	3552437	Identifier	have_underflow		3552383	1					
ANR	3552438	AssignmentExpression	have_underflow = 0		3552383	2		=			
ANR	3552439	Identifier	have_underflow		3552383	0					
ANR	3552440	PrimaryExpression	0		3552383	1					
ANR	3552441	IfStatement	if ( p >= limit )		3552383	8					
ANR	3552442	Condition	p >= limit	212:9:5780:5789	3552383	0	True				
ANR	3552443	RelationalExpression	p >= limit		3552383	0		>=			
ANR	3552444	Identifier	p		3552383	0					
ANR	3552445	Identifier	limit		3552383	1					
ANR	3552446	GotoStatement	goto Bad ;	213:6:5799:5807	3552383	1	True				
ANR	3552447	Identifier	Bad		3552383	0					
ANR	3552448	IfStatement	if ( * p == '-' || * p == '+' )		3552383	9					
ANR	3552449	Condition	* p == '-' || * p == '+'	215:9:5819:5840	3552383	0	True				
ANR	3552450	OrExpression	* p == '-' || * p == '+'		3552383	0		||			
ANR	3552451	EqualityExpression	* p == '-'		3552383	0		==			
ANR	3552452	UnaryOperationExpression	* p		3552383	0					
ANR	3552453	UnaryOperator	*		3552383	0					
ANR	3552454	Identifier	p		3552383	1					
ANR	3552455	PrimaryExpression	'-'		3552383	1					
ANR	3552456	EqualityExpression	* p == '+'		3552383	1		==			
ANR	3552457	UnaryOperationExpression	* p		3552383	0					
ANR	3552458	UnaryOperator	*		3552383	0					
ANR	3552459	Identifier	p		3552383	1					
ANR	3552460	PrimaryExpression	'+'		3552383	1					
ANR	3552461	CompoundStatement		18:4:315:315	3552383	1					
ANR	3552462	ExpressionStatement	sign = FT_BOOL ( * p == '-' )	217:6:5856:5883	3552383	0	True				
ANR	3552463	AssignmentExpression	sign = FT_BOOL ( * p == '-' )		3552383	0		=			
ANR	3552464	Identifier	sign		3552383	0					
ANR	3552465	CallExpression	FT_BOOL ( * p == '-' )		3552383	1					
ANR	3552466	Callee	FT_BOOL		3552383	0					
ANR	3552467	Identifier	FT_BOOL		3552383	0					
ANR	3552468	ArgumentList	* p == '-'		3552383	1					
ANR	3552469	Argument	* p == '-'		3552383	0					
ANR	3552470	EqualityExpression	* p == '-'		3552383	0		==			
ANR	3552471	UnaryOperationExpression	* p		3552383	0					
ANR	3552472	UnaryOperator	*		3552383	0					
ANR	3552473	Identifier	p		3552383	1					
ANR	3552474	PrimaryExpression	'-'		3552383	1					
ANR	3552475	ExpressionStatement	p ++	219:6:5892:5895	3552383	1	True				
ANR	3552476	PostIncDecOperationExpression	p ++		3552383	0					
ANR	3552477	Identifier	p		3552383	0					
ANR	3552478	IncDec	++		3552383	1					
ANR	3552479	IfStatement	if ( p == limit )		3552383	2					
ANR	3552480	Condition	p == limit	220:11:5908:5917	3552383	0	True				
ANR	3552481	EqualityExpression	p == limit		3552383	0		==			
ANR	3552482	Identifier	p		3552383	0					
ANR	3552483	Identifier	limit		3552383	1					
ANR	3552484	GotoStatement	goto Bad ;	221:8:5929:5937	3552383	1	True				
ANR	3552485	Identifier	Bad		3552383	0					
ANR	3552486	IfStatement	if ( * p == '-' || * p == '+' )		3552383	3					
ANR	3552487	Condition	* p == '-' || * p == '+'	224:11:5993:6014	3552383	0	True				
ANR	3552488	OrExpression	* p == '-' || * p == '+'		3552383	0		||			
ANR	3552489	EqualityExpression	* p == '-'		3552383	0		==			
ANR	3552490	UnaryOperationExpression	* p		3552383	0					
ANR	3552491	UnaryOperator	*		3552383	0					
ANR	3552492	Identifier	p		3552383	1					
ANR	3552493	PrimaryExpression	'-'		3552383	1					
ANR	3552494	EqualityExpression	* p == '+'		3552383	1		==			
ANR	3552495	UnaryOperationExpression	* p		3552383	0					
ANR	3552496	UnaryOperator	*		3552383	0					
ANR	3552497	Identifier	p		3552383	1					
ANR	3552498	PrimaryExpression	'+'		3552383	1					
ANR	3552499	ReturnStatement	return 0 ;	225:8:6026:6034	3552383	1	True				
ANR	3552500	PrimaryExpression	0		3552383	0					
ANR	3552501	IfStatement	if ( * p != '.' )		3552383	10					
ANR	3552502	Condition	* p != '.'	229:9:6084:6092	3552383	0	True				
ANR	3552503	EqualityExpression	* p != '.'		3552383	0		!=			
ANR	3552504	UnaryOperationExpression	* p		3552383	0					
ANR	3552505	UnaryOperator	*		3552383	0					
ANR	3552506	Identifier	p		3552383	1					
ANR	3552507	PrimaryExpression	'.'		3552383	1					
ANR	3552508	CompoundStatement		32:4:567:567	3552383	1					
ANR	3552509	ExpressionStatement	curp = p	231:6:6108:6120	3552383	0	True				
ANR	3552510	AssignmentExpression	curp = p		3552383	0		=			
ANR	3552511	Identifier	curp		3552383	0					
ANR	3552512	Identifier	p		3552383	1					
ANR	3552513	ExpressionStatement	"integral = PS_Conv_ToInt ( & p , limit )"	232:6:6128:6165	3552383	1	True				
ANR	3552514	AssignmentExpression	"integral = PS_Conv_ToInt ( & p , limit )"		3552383	0		=			
ANR	3552515	Identifier	integral		3552383	0					
ANR	3552516	CallExpression	"PS_Conv_ToInt ( & p , limit )"		3552383	1					
ANR	3552517	Callee	PS_Conv_ToInt		3552383	0					
ANR	3552518	Identifier	PS_Conv_ToInt		3552383	0					
ANR	3552519	ArgumentList	& p		3552383	1					
ANR	3552520	Argument	& p		3552383	0					
ANR	3552521	UnaryOperationExpression	& p		3552383	0					
ANR	3552522	UnaryOperator	&		3552383	0					
ANR	3552523	Identifier	p		3552383	1					
ANR	3552524	Argument	limit		3552383	1					
ANR	3552525	Identifier	limit		3552383	0					
ANR	3552526	IfStatement	if ( p == curp )		3552383	2					
ANR	3552527	Condition	p == curp	234:11:6179:6187	3552383	0	True				
ANR	3552528	EqualityExpression	p == curp		3552383	0		==			
ANR	3552529	Identifier	p		3552383	0					
ANR	3552530	Identifier	curp		3552383	1					
ANR	3552531	ReturnStatement	return 0 ;	235:8:6199:6207	3552383	1	True				
ANR	3552532	PrimaryExpression	0		3552383	0					
ANR	3552533	IfStatement	if ( integral > 0x7FFF )		3552383	3					
ANR	3552534	Condition	integral > 0x7FFF	237:11:6221:6237	3552383	0	True				
ANR	3552535	RelationalExpression	integral > 0x7FFF		3552383	0		>			
ANR	3552536	Identifier	integral		3552383	0					
ANR	3552537	PrimaryExpression	0x7FFF		3552383	1					
ANR	3552538	ExpressionStatement	have_overflow = 1	238:8:6249:6266	3552383	1	True				
ANR	3552539	AssignmentExpression	have_overflow = 1		3552383	0		=			
ANR	3552540	Identifier	have_overflow		3552383	0					
ANR	3552541	PrimaryExpression	1		3552383	1					
ANR	3552542	ElseStatement	else		3552383	0					
ANR	3552543	ExpressionStatement	integral = ( FT_Fixed ) ( ( FT_UInt32 ) integral << 16 )	240:8:6287:6337	3552383	0	True				
ANR	3552544	AssignmentExpression	integral = ( FT_Fixed ) ( ( FT_UInt32 ) integral << 16 )		3552383	0		=			
ANR	3552545	Identifier	integral		3552383	0					
ANR	3552546	CastExpression	( FT_Fixed ) ( ( FT_UInt32 ) integral << 16 )		3552383	1					
ANR	3552547	CastTarget	FT_Fixed		3552383	0					
ANR	3552548	ShiftExpression	( FT_UInt32 ) integral << 16		3552383	1		<<			
ANR	3552549	CastExpression	( FT_UInt32 ) integral		3552383	0					
ANR	3552550	CastTarget	FT_UInt32		3552383	0					
ANR	3552551	Identifier	integral		3552383	1					
ANR	3552552	PrimaryExpression	16		3552383	1					
ANR	3552553	IfStatement	if ( p < limit && * p == '.' )		3552383	11					
ANR	3552554	Condition	p < limit && * p == '.'	244:9:6387:6408	3552383	0	True				
ANR	3552555	AndExpression	p < limit && * p == '.'		3552383	0		&&			
ANR	3552556	RelationalExpression	p < limit		3552383	0		<			
ANR	3552557	Identifier	p		3552383	0					
ANR	3552558	Identifier	limit		3552383	1					
ANR	3552559	EqualityExpression	* p == '.'		3552383	1		==			
ANR	3552560	UnaryOperationExpression	* p		3552383	0					
ANR	3552561	UnaryOperator	*		3552383	0					
ANR	3552562	Identifier	p		3552383	1					
ANR	3552563	PrimaryExpression	'.'		3552383	1					
ANR	3552564	CompoundStatement		47:4:883:883	3552383	1					
ANR	3552565	ExpressionStatement	p ++	246:6:6424:6427	3552383	0	True				
ANR	3552566	PostIncDecOperationExpression	p ++		3552383	0					
ANR	3552567	Identifier	p		3552383	0					
ANR	3552568	IncDec	++		3552383	1					
ANR	3552569	ForStatement	for ( ; p < limit ; p ++ )		3552383	1					
ANR	3552570	Condition	p < limit	248:14:6444:6452	3552383	0	True				
ANR	3552571	RelationalExpression	p < limit		3552383	0		<			
ANR	3552572	Identifier	p		3552383	0					
ANR	3552573	Identifier	limit		3552383	1					
ANR	3552574	PostIncDecOperationExpression	p ++	248:25:6455:6457	3552383	1	True				
ANR	3552575	Identifier	p		3552383	0					
ANR	3552576	IncDec	++		3552383	1					
ANR	3552577	CompoundStatement		52:8:944:954	3552383	2					
ANR	3552578	IdentifierDeclStatement	FT_Char c ;	250:8:6477:6487	3552383	0	True				
ANR	3552579	IdentifierDecl	c		3552383	0					
ANR	3552580	IdentifierDeclType	FT_Char		3552383	0					
ANR	3552581	Identifier	c		3552383	1					
ANR	3552582	Statement	if	253:8:6499:6500	3552383	1	True				
ANR	3552583	Statement	(	253:11:6502:6502	3552383	2	True				
ANR	3552584	Statement	IS_PS_SPACE	253:13:6504:6514	3552383	3	True				
ANR	3552585	Statement	(	253:24:6515:6515	3552383	4	True				
ANR	3552586	Statement	*	253:26:6517:6517	3552383	5	True				
ANR	3552587	Statement	p	253:27:6518:6518	3552383	6	True				
ANR	3552588	Statement	)	253:29:6520:6520	3552383	7	True				
ANR	3552589	Statement	||	253:31:6522:6523	3552383	8	True				
ANR	3552590	Statement	*	253:34:6525:6525	3552383	9	True				
ANR	3552591	Statement	p	253:35:6526:6526	3552383	10	True				
ANR	3552592	Statement	OP	253:37:6528:6529	3552383	11	True				
ANR	3552593	Statement	0x80	253:40:6531:6534	3552383	12	True				
ANR	3552594	Statement	)	253:45:6536:6536	3552383	13	True				
ANR	3552595	BreakStatement	break ;	254:10:6548:6553	3552383	14	True				
ANR	3552596	ExpressionStatement	c = ft_char_table [ * p & 0x7F ]	256:8:6564:6592	3552383	15	True				
ANR	3552597	AssignmentExpression	c = ft_char_table [ * p & 0x7F ]		3552383	0		=			
ANR	3552598	Identifier	c		3552383	0					
ANR	3552599	ArrayIndexing	ft_char_table [ * p & 0x7F ]		3552383	1					
ANR	3552600	Identifier	ft_char_table		3552383	0					
ANR	3552601	BitAndExpression	* p & 0x7F		3552383	1		&			
ANR	3552602	UnaryOperationExpression	* p		3552383	0					
ANR	3552603	UnaryOperator	*		3552383	0					
ANR	3552604	Identifier	p		3552383	1					
ANR	3552605	PrimaryExpression	0x7F		3552383	1					
ANR	3552606	IfStatement	if ( c < 0 || c >= 10 )		3552383	16					
ANR	3552607	Condition	c < 0 || c >= 10	258:13:6608:6623	3552383	0	True				
ANR	3552608	OrExpression	c < 0 || c >= 10		3552383	0		||			
ANR	3552609	RelationalExpression	c < 0		3552383	0		<			
ANR	3552610	Identifier	c		3552383	0					
ANR	3552611	PrimaryExpression	0		3552383	1					
ANR	3552612	RelationalExpression	c >= 10		3552383	1		>=			
ANR	3552613	Identifier	c		3552383	0					
ANR	3552614	PrimaryExpression	10		3552383	1					
ANR	3552615	BreakStatement	break ;	259:10:6637:6642	3552383	1	True				
ANR	3552616	IfStatement	if ( divider < 0xCCCCCCCL && decimal < 0xCCCCCCCL )		3552383	17					
ANR	3552617	Condition	divider < 0xCCCCCCCL && decimal < 0xCCCCCCCL	262:13:6708:6751	3552383	0	True				
ANR	3552618	AndExpression	divider < 0xCCCCCCCL && decimal < 0xCCCCCCCL		3552383	0		&&			
ANR	3552619	RelationalExpression	divider < 0xCCCCCCCL		3552383	0		<			
ANR	3552620	Identifier	divider		3552383	0					
ANR	3552621	PrimaryExpression	0xCCCCCCCL		3552383	1					
ANR	3552622	RelationalExpression	decimal < 0xCCCCCCCL		3552383	1		<			
ANR	3552623	Identifier	decimal		3552383	0					
ANR	3552624	PrimaryExpression	0xCCCCCCCL		3552383	1					
ANR	3552625	CompoundStatement		65:8:1230:1230	3552383	1					
ANR	3552626	ExpressionStatement	decimal = decimal * 10 + c	264:10:6775:6801	3552383	0	True				
ANR	3552627	AssignmentExpression	decimal = decimal * 10 + c		3552383	0		=			
ANR	3552628	Identifier	decimal		3552383	0					
ANR	3552629	AdditiveExpression	decimal * 10 + c		3552383	1		+			
ANR	3552630	MultiplicativeExpression	decimal * 10		3552383	0		*			
ANR	3552631	Identifier	decimal		3552383	0					
ANR	3552632	PrimaryExpression	10		3552383	1					
ANR	3552633	Identifier	c		3552383	1					
ANR	3552634	IfStatement	if ( ! integral && power_ten > 0 )		3552383	1					
ANR	3552635	Condition	! integral && power_ten > 0	266:15:6819:6844	3552383	0	True				
ANR	3552636	AndExpression	! integral && power_ten > 0		3552383	0		&&			
ANR	3552637	UnaryOperationExpression	! integral		3552383	0					
ANR	3552638	UnaryOperator	!		3552383	0					
ANR	3552639	Identifier	integral		3552383	1					
ANR	3552640	RelationalExpression	power_ten > 0		3552383	1		>			
ANR	3552641	Identifier	power_ten		3552383	0					
ANR	3552642	PrimaryExpression	0		3552383	1					
ANR	3552643	ExpressionStatement	power_ten --	267:12:6860:6871	3552383	1	True				
ANR	3552644	PostIncDecOperationExpression	power_ten --		3552383	0					
ANR	3552645	Identifier	power_ten		3552383	0					
ANR	3552646	IncDec	--		3552383	1					
ANR	3552647	ElseStatement	else		3552383	0					
ANR	3552648	ExpressionStatement	divider *= 10	269:12:6900:6913	3552383	0	True				
ANR	3552649	AssignmentExpression	divider *= 10		3552383	0		*=			
ANR	3552650	Identifier	divider		3552383	0					
ANR	3552651	PrimaryExpression	10		3552383	1					
ANR	3552652	IfStatement	if ( p + 1 < limit && ( * p == 'e' || * p == 'E' ) )		3552383	12					
ANR	3552653	Condition	p + 1 < limit && ( * p == 'e' || * p == 'E' )	275:9:6981:7023	3552383	0	True				
ANR	3552654	AndExpression	p + 1 < limit && ( * p == 'e' || * p == 'E' )		3552383	0		&&			
ANR	3552655	RelationalExpression	p + 1 < limit		3552383	0		<			
ANR	3552656	AdditiveExpression	p + 1		3552383	0		+			
ANR	3552657	Identifier	p		3552383	0					
ANR	3552658	PrimaryExpression	1		3552383	1					
ANR	3552659	Identifier	limit		3552383	1					
ANR	3552660	OrExpression	* p == 'e' || * p == 'E'		3552383	1		||			
ANR	3552661	EqualityExpression	* p == 'e'		3552383	0		==			
ANR	3552662	UnaryOperationExpression	* p		3552383	0					
ANR	3552663	UnaryOperator	*		3552383	0					
ANR	3552664	Identifier	p		3552383	1					
ANR	3552665	PrimaryExpression	'e'		3552383	1					
ANR	3552666	EqualityExpression	* p == 'E'		3552383	1		==			
ANR	3552667	UnaryOperationExpression	* p		3552383	0					
ANR	3552668	UnaryOperator	*		3552383	0					
ANR	3552669	Identifier	p		3552383	1					
ANR	3552670	PrimaryExpression	'E'		3552383	1					
ANR	3552671	CompoundStatement		79:6:1506:1523	3552383	1					
ANR	3552672	IdentifierDeclStatement	FT_Long exponent ;	277:6:7039:7056	3552383	0	True				
ANR	3552673	IdentifierDecl	exponent		3552383	0					
ANR	3552674	IdentifierDeclType	FT_Long		3552383	0					
ANR	3552675	Identifier	exponent		3552383	1					
ANR	3552676	ExpressionStatement	p ++	280:6:7066:7069	3552383	1	True				
ANR	3552677	PostIncDecOperationExpression	p ++		3552383	0					
ANR	3552678	Identifier	p		3552383	0					
ANR	3552679	IncDec	++		3552383	1					
ANR	3552680	ExpressionStatement	curp = p	282:6:7078:7090	3552383	2	True				
ANR	3552681	AssignmentExpression	curp = p		3552383	0		=			
ANR	3552682	Identifier	curp		3552383	0					
ANR	3552683	Identifier	p		3552383	1					
ANR	3552684	ExpressionStatement	"exponent = PS_Conv_ToInt ( & p , limit )"	283:6:7098:7135	3552383	3	True				
ANR	3552685	AssignmentExpression	"exponent = PS_Conv_ToInt ( & p , limit )"		3552383	0		=			
ANR	3552686	Identifier	exponent		3552383	0					
ANR	3552687	CallExpression	"PS_Conv_ToInt ( & p , limit )"		3552383	1					
ANR	3552688	Callee	PS_Conv_ToInt		3552383	0					
ANR	3552689	Identifier	PS_Conv_ToInt		3552383	0					
ANR	3552690	ArgumentList	& p		3552383	1					
ANR	3552691	Argument	& p		3552383	0					
ANR	3552692	UnaryOperationExpression	& p		3552383	0					
ANR	3552693	UnaryOperator	&		3552383	0					
ANR	3552694	Identifier	p		3552383	1					
ANR	3552695	Argument	limit		3552383	1					
ANR	3552696	Identifier	limit		3552383	0					
ANR	3552697	IfStatement	if ( curp == p )		3552383	4					
ANR	3552698	Condition	curp == p	285:11:7149:7157	3552383	0	True				
ANR	3552699	EqualityExpression	curp == p		3552383	0		==			
ANR	3552700	Identifier	curp		3552383	0					
ANR	3552701	Identifier	p		3552383	1					
ANR	3552702	ReturnStatement	return 0 ;	286:8:7169:7177	3552383	1	True				
ANR	3552703	PrimaryExpression	0		3552383	0					
ANR	3552704	IfStatement	if ( exponent > 1000 )		3552383	5					
ANR	3552705	Condition	exponent > 1000	289:11:7230:7244	3552383	0	True				
ANR	3552706	RelationalExpression	exponent > 1000		3552383	0		>			
ANR	3552707	Identifier	exponent		3552383	0					
ANR	3552708	PrimaryExpression	1000		3552383	1					
ANR	3552709	ExpressionStatement	have_overflow = 1	290:8:7256:7273	3552383	1	True				
ANR	3552710	AssignmentExpression	have_overflow = 1		3552383	0		=			
ANR	3552711	Identifier	have_overflow		3552383	0					
ANR	3552712	PrimaryExpression	1		3552383	1					
ANR	3552713	ElseStatement	else		3552383	0					
ANR	3552714	IfStatement	if ( exponent < - 1000 )		3552383	0					
ANR	3552715	Condition	exponent < - 1000	291:16:7291:7306	3552383	0	True				
ANR	3552716	RelationalExpression	exponent < - 1000		3552383	0		<			
ANR	3552717	Identifier	exponent		3552383	0					
ANR	3552718	UnaryOperationExpression	- 1000		3552383	1					
ANR	3552719	UnaryOperator	-		3552383	0					
ANR	3552720	PrimaryExpression	1000		3552383	1					
ANR	3552721	ExpressionStatement	have_underflow = 1	292:8:7318:7336	3552383	1	True				
ANR	3552722	AssignmentExpression	have_underflow = 1		3552383	0		=			
ANR	3552723	Identifier	have_underflow		3552383	0					
ANR	3552724	PrimaryExpression	1		3552383	1					
ANR	3552725	ElseStatement	else		3552383	0					
ANR	3552726	ExpressionStatement	power_ten += exponent	294:8:7357:7378	3552383	0	True				
ANR	3552727	AssignmentExpression	power_ten += exponent		3552383	0		+=			
ANR	3552728	Identifier	power_ten		3552383	0					
ANR	3552729	Identifier	exponent		3552383	1					
ANR	3552730	ExpressionStatement	* cursor = p	297:4:7391:7402	3552383	13	True				
ANR	3552731	AssignmentExpression	* cursor = p		3552383	0		=			
ANR	3552732	UnaryOperationExpression	* cursor		3552383	0					
ANR	3552733	UnaryOperator	*		3552383	0					
ANR	3552734	Identifier	cursor		3552383	1					
ANR	3552735	Identifier	p		3552383	1					
ANR	3552736	IfStatement	if ( ! integral && ! decimal )		3552383	14					
ANR	3552737	Condition	! integral && ! decimal	299:9:7414:7434	3552383	0	True				
ANR	3552738	AndExpression	! integral && ! decimal		3552383	0		&&			
ANR	3552739	UnaryOperationExpression	! integral		3552383	0					
ANR	3552740	UnaryOperator	!		3552383	0					
ANR	3552741	Identifier	integral		3552383	1					
ANR	3552742	UnaryOperationExpression	! decimal		3552383	1					
ANR	3552743	UnaryOperator	!		3552383	0					
ANR	3552744	Identifier	decimal		3552383	1					
ANR	3552745	ReturnStatement	return 0 ;	300:6:7444:7452	3552383	1	True				
ANR	3552746	PrimaryExpression	0		3552383	0					
ANR	3552747	IfStatement	if ( have_overflow )		3552383	15					
ANR	3552748	Condition	have_overflow	302:9:7464:7476	3552383	0	True				
ANR	3552749	Identifier	have_overflow		3552383	0					
ANR	3552750	GotoStatement	goto Overflow ;	303:6:7486:7499	3552383	1	True				
ANR	3552751	Identifier	Overflow		3552383	0					
ANR	3552752	IfStatement	if ( have_underflow )		3552383	16					
ANR	3552753	Condition	have_underflow	304:9:7510:7523	3552383	0	True				
ANR	3552754	Identifier	have_underflow		3552383	0					
ANR	3552755	GotoStatement	goto Underflow ;	305:6:7533:7547	3552383	1	True				
ANR	3552756	Identifier	Underflow		3552383	0					
ANR	3552757	WhileStatement	while ( power_ten > 0 )		3552383	17					
ANR	3552758	Condition	power_ten > 0	307:12:7562:7574	3552383	0	True				
ANR	3552759	RelationalExpression	power_ten > 0		3552383	0		>			
ANR	3552760	Identifier	power_ten		3552383	0					
ANR	3552761	PrimaryExpression	0		3552383	1					
ANR	3552762	CompoundStatement		110:4:2049:2049	3552383	1					
ANR	3552763	IfStatement	if ( integral >= 0xCCCCCCCL )		3552383	0					
ANR	3552764	Condition	integral >= 0xCCCCCCCL	309:11:7595:7616	3552383	0	True				
ANR	3552765	RelationalExpression	integral >= 0xCCCCCCCL		3552383	0		>=			
ANR	3552766	Identifier	integral		3552383	0					
ANR	3552767	PrimaryExpression	0xCCCCCCCL		3552383	1					
ANR	3552768	GotoStatement	goto Overflow ;	310:8:7628:7641	3552383	1	True				
ANR	3552769	Identifier	Overflow		3552383	0					
ANR	3552770	ExpressionStatement	integral *= 10	311:6:7649:7663	3552383	1	True				
ANR	3552771	AssignmentExpression	integral *= 10		3552383	0		*=			
ANR	3552772	Identifier	integral		3552383	0					
ANR	3552773	PrimaryExpression	10		3552383	1					
ANR	3552774	IfStatement	if ( decimal >= 0xCCCCCCCL )		3552383	2					
ANR	3552775	Condition	decimal >= 0xCCCCCCCL	313:11:7677:7697	3552383	0	True				
ANR	3552776	RelationalExpression	decimal >= 0xCCCCCCCL		3552383	0		>=			
ANR	3552777	Identifier	decimal		3552383	0					
ANR	3552778	PrimaryExpression	0xCCCCCCCL		3552383	1					
ANR	3552779	CompoundStatement		116:6:2174:2174	3552383	1					
ANR	3552780	IfStatement	if ( divider == 1 )		3552383	0					
ANR	3552781	Condition	divider == 1	315:13:7722:7733	3552383	0	True				
ANR	3552782	EqualityExpression	divider == 1		3552383	0		==			
ANR	3552783	Identifier	divider		3552383	0					
ANR	3552784	PrimaryExpression	1		3552383	1					
ANR	3552785	GotoStatement	goto Overflow ;	316:10:7747:7760	3552383	1	True				
ANR	3552786	Identifier	Overflow		3552383	0					
ANR	3552787	ExpressionStatement	divider /= 10	317:8:7770:7783	3552383	1	True				
ANR	3552788	AssignmentExpression	divider /= 10		3552383	0		/=			
ANR	3552789	Identifier	divider		3552383	0					
ANR	3552790	PrimaryExpression	10		3552383	1					
ANR	3552791	ElseStatement	else		3552383	0					
ANR	3552792	ExpressionStatement	decimal *= 10	320:8:7812:7825	3552383	0	True				
ANR	3552793	AssignmentExpression	decimal *= 10		3552383	0		*=			
ANR	3552794	Identifier	decimal		3552383	0					
ANR	3552795	PrimaryExpression	10		3552383	1					
ANR	3552796	ExpressionStatement	power_ten --	322:6:7834:7845	3552383	3	True				
ANR	3552797	PostIncDecOperationExpression	power_ten --		3552383	0					
ANR	3552798	Identifier	power_ten		3552383	0					
ANR	3552799	IncDec	--		3552383	1					
ANR	3552800	WhileStatement	while ( power_ten < 0 )		3552383	18					
ANR	3552801	Condition	power_ten < 0	325:12:7866:7878	3552383	0	True				
ANR	3552802	RelationalExpression	power_ten < 0		3552383	0		<			
ANR	3552803	Identifier	power_ten		3552383	0					
ANR	3552804	PrimaryExpression	0		3552383	1					
ANR	3552805	CompoundStatement		128:4:2353:2353	3552383	1					
ANR	3552806	ExpressionStatement	integral /= 10	327:6:7894:7908	3552383	0	True				
ANR	3552807	AssignmentExpression	integral /= 10		3552383	0		/=			
ANR	3552808	Identifier	integral		3552383	0					
ANR	3552809	PrimaryExpression	10		3552383	1					
ANR	3552810	IfStatement	if ( divider < 0xCCCCCCCL )		3552383	1					
ANR	3552811	Condition	divider < 0xCCCCCCCL	328:11:7921:7940	3552383	0	True				
ANR	3552812	RelationalExpression	divider < 0xCCCCCCCL		3552383	0		<			
ANR	3552813	Identifier	divider		3552383	0					
ANR	3552814	PrimaryExpression	0xCCCCCCCL		3552383	1					
ANR	3552815	ExpressionStatement	divider *= 10	329:8:7952:7965	3552383	1	True				
ANR	3552816	AssignmentExpression	divider *= 10		3552383	0		*=			
ANR	3552817	Identifier	divider		3552383	0					
ANR	3552818	PrimaryExpression	10		3552383	1					
ANR	3552819	ElseStatement	else		3552383	0					
ANR	3552820	ExpressionStatement	decimal /= 10	331:8:7986:7999	3552383	0	True				
ANR	3552821	AssignmentExpression	decimal /= 10		3552383	0		/=			
ANR	3552822	Identifier	decimal		3552383	0					
ANR	3552823	PrimaryExpression	10		3552383	1					
ANR	3552824	IfStatement	if ( ! integral && ! decimal )		3552383	2					
ANR	3552825	Condition	! integral && ! decimal	333:11:8013:8033	3552383	0	True				
ANR	3552826	AndExpression	! integral && ! decimal		3552383	0		&&			
ANR	3552827	UnaryOperationExpression	! integral		3552383	0					
ANR	3552828	UnaryOperator	!		3552383	0					
ANR	3552829	Identifier	integral		3552383	1					
ANR	3552830	UnaryOperationExpression	! decimal		3552383	1					
ANR	3552831	UnaryOperator	!		3552383	0					
ANR	3552832	Identifier	decimal		3552383	1					
ANR	3552833	GotoStatement	goto Underflow ;	334:8:8045:8059	3552383	1	True				
ANR	3552834	Identifier	Underflow		3552383	0					
ANR	3552835	ExpressionStatement	power_ten ++	336:6:8068:8079	3552383	3	True				
ANR	3552836	PostIncDecOperationExpression	power_ten ++		3552383	0					
ANR	3552837	Identifier	power_ten		3552383	0					
ANR	3552838	IncDec	++		3552383	1					
ANR	3552839	IfStatement	if ( decimal )		3552383	19					
ANR	3552840	Condition	decimal	339:9:8097:8103	3552383	0	True				
ANR	3552841	Identifier	decimal		3552383	0					
ANR	3552842	CompoundStatement		142:4:2578:2578	3552383	1					
ANR	3552843	ExpressionStatement	"decimal = FT_DivFix ( decimal , divider )"	341:6:8119:8158	3552383	0	True				
ANR	3552844	AssignmentExpression	"decimal = FT_DivFix ( decimal , divider )"		3552383	0		=			
ANR	3552845	Identifier	decimal		3552383	0					
ANR	3552846	CallExpression	"FT_DivFix ( decimal , divider )"		3552383	1					
ANR	3552847	Callee	FT_DivFix		3552383	0					
ANR	3552848	Identifier	FT_DivFix		3552383	0					
ANR	3552849	ArgumentList	decimal		3552383	1					
ANR	3552850	Argument	decimal		3552383	0					
ANR	3552851	Identifier	decimal		3552383	0					
ANR	3552852	Argument	divider		3552383	1					
ANR	3552853	Identifier	divider		3552383	0					
ANR	3552854	ExpressionStatement	integral += decimal	344:6:8300:8319	3552383	1	True				
ANR	3552855	AssignmentExpression	integral += decimal		3552383	0		+=			
ANR	3552856	Identifier	integral		3552383	0					
ANR	3552857	Identifier	decimal		3552383	1					
ANR	3552858	Label	Exit :	347:2:8330:8334	3552383	20	True				
ANR	3552859	Identifier	Exit		3552383	0					
ANR	3552860	IfStatement	if ( sign )		3552383	21					
ANR	3552861	Condition	sign	348:9:8345:8348	3552383	0	True				
ANR	3552862	Identifier	sign		3552383	0					
ANR	3552863	ExpressionStatement	integral = - integral	349:6:8358:8378	3552383	1	True				
ANR	3552864	AssignmentExpression	integral = - integral		3552383	0		=			
ANR	3552865	Identifier	integral		3552383	0					
ANR	3552866	UnaryOperationExpression	- integral		3552383	1					
ANR	3552867	UnaryOperator	-		3552383	0					
ANR	3552868	Identifier	integral		3552383	1					
ANR	3552869	ReturnStatement	return integral ;	351:4:8385:8400	3552383	22	True				
ANR	3552870	Identifier	integral		3552383	0					
ANR	3552871	Label	Bad :	353:2:8405:8408	3552383	23	True				
ANR	3552872	Identifier	Bad		3552383	0					
ANR	3552873	ExpressionStatement	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"	354:4:8414:8449	3552383	24	True				
ANR	3552874	CallExpression	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"		3552383	0					
ANR	3552875	Callee	FT_TRACE4		3552383	0					
ANR	3552876	Identifier	FT_TRACE4		3552383	0					
ANR	3552877	ArgumentList	"""!!!END OF DATA:!!!"""		3552383	1					
ANR	3552878	Argument	"""!!!END OF DATA:!!!"""		3552383	0					
ANR	3552879	PrimaryExpression	"""!!!END OF DATA:!!!"""		3552383	0					
ANR	3552880	ReturnStatement	return 0 ;	355:4:8455:8463	3552383	25	True				
ANR	3552881	PrimaryExpression	0		3552383	0					
ANR	3552882	Label	Overflow :	357:2:8468:8476	3552383	26	True				
ANR	3552883	Identifier	Overflow		3552383	0					
ANR	3552884	ExpressionStatement	integral = 0x7FFFFFFFL	358:4:8482:8504	3552383	27	True				
ANR	3552885	AssignmentExpression	integral = 0x7FFFFFFFL		3552383	0		=			
ANR	3552886	Identifier	integral		3552383	0					
ANR	3552887	PrimaryExpression	0x7FFFFFFFL		3552383	1					
ANR	3552888	ExpressionStatement	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"	359:4:8510:8542	3552383	28	True				
ANR	3552889	CallExpression	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"		3552383	0					
ANR	3552890	Callee	FT_TRACE4		3552383	0					
ANR	3552891	Identifier	FT_TRACE4		3552383	0					
ANR	3552892	ArgumentList	"""!!!OVERFLOW:!!!"""		3552383	1					
ANR	3552893	Argument	"""!!!OVERFLOW:!!!"""		3552383	0					
ANR	3552894	PrimaryExpression	"""!!!OVERFLOW:!!!"""		3552383	0					
ANR	3552895	GotoStatement	goto Exit ;	360:4:8548:8557	3552383	29	True				
ANR	3552896	Identifier	Exit		3552383	0					
ANR	3552897	Label	Underflow :	362:2:8562:8571	3552383	30	True				
ANR	3552898	Identifier	Underflow		3552383	0					
ANR	3552899	ExpressionStatement	"FT_TRACE4 ( ( ""!!!UNDERFLOW:!!!"" ) )"	363:4:8577:8610	3552383	31	True				
ANR	3552900	CallExpression	"FT_TRACE4 ( ( ""!!!UNDERFLOW:!!!"" ) )"		3552383	0					
ANR	3552901	Callee	FT_TRACE4		3552383	0					
ANR	3552902	Identifier	FT_TRACE4		3552383	0					
ANR	3552903	ArgumentList	"""!!!UNDERFLOW:!!!"""		3552383	1					
ANR	3552904	Argument	"""!!!UNDERFLOW:!!!"""		3552383	0					
ANR	3552905	PrimaryExpression	"""!!!UNDERFLOW:!!!"""		3552383	0					
ANR	3552906	ReturnStatement	return 0 ;	364:4:8616:8624	3552383	32	True				
ANR	3552907	PrimaryExpression	0		3552383	0					
ANR	3552908	Identifier	PS_Conv_ToFixed		3552383	1					
ANR	3552909	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Long power_ten"		3552383	2					
ANR	3552910	Parameter	FT_Byte * * cursor	196:19:5432:5448	3552383	0	True				
ANR	3552911	ParameterType	FT_Byte * *		3552383	0					
ANR	3552912	Identifier	cursor		3552383	1					
ANR	3552913	Parameter	FT_Byte * limit	197:19:5470:5485	3552383	1	True				
ANR	3552914	ParameterType	FT_Byte *		3552383	0					
ANR	3552915	Identifier	limit		3552383	1					
ANR	3552916	Parameter	FT_Long power_ten	198:19:5507:5526	3552383	2	True				
ANR	3552917	ParameterType	FT_Long		3552383	0					
ANR	3552918	Identifier	power_ten		3552383	1					
ANR	3552919	CFGEntryNode	ENTRY		3552383		True				
ANR	3552920	CFGExitNode	EXIT		3552383		True				
ANR	3552921	Symbol	cursor		3552383						
ANR	3552922	Symbol	* cursor		3552383						
ANR	3552923	Symbol	c		3552383						
ANR	3552924	Symbol	* ft_char_table		3552383						
ANR	3552925	Symbol	FT_DivFix		3552383						
ANR	3552926	Symbol	power_ten		3552383						
ANR	3552927	Symbol	sign		3552383						
ANR	3552928	Symbol	have_underflow		3552383						
ANR	3552929	Symbol	p		3552383						
ANR	3552930	Symbol	divider		3552383						
ANR	3552931	Symbol	integral		3552383						
ANR	3552932	Symbol	& p		3552383						
ANR	3552933	Symbol	limit		3552383						
ANR	3552934	Symbol	PS_Conv_ToInt		3552383						
ANR	3552935	Symbol	* p		3552383						
ANR	3552936	Symbol	* * p		3552383						
ANR	3552937	Symbol	decimal		3552383						
ANR	3552938	Symbol	have_overflow		3552383						
ANR	3552939	Symbol	ft_char_table		3552383						
ANR	3552940	Symbol	curp		3552383						
ANR	3552941	Symbol	FT_BOOL		3552383						
ANR	3552942	Symbol	exponent		3552383						
ANR	3552943	Function	PS_Conv_StringDecode	370:2:8666:10105							
ANR	3552944	FunctionDef	"PS_Conv_StringDecode (FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n)"		3552943	0					
ANR	3552945	CompoundStatement		374:2:8833:10105	3552943	0					
ANR	3552946	IdentifierDeclStatement	FT_Byte * p ;	375:4:8839:8850	3552943	0	True				
ANR	3552947	IdentifierDecl	* p		3552943	0					
ANR	3552948	IdentifierDeclType	FT_Byte *		3552943	0					
ANR	3552949	Identifier	p		3552943	1					
ANR	3552950	IdentifierDeclStatement	FT_UInt r = 0 ;	376:4:8856:8871	3552943	1	True				
ANR	3552951	IdentifierDecl	r = 0		3552943	0					
ANR	3552952	IdentifierDeclType	FT_UInt		3552943	0					
ANR	3552953	Identifier	r		3552943	1					
ANR	3552954	AssignmentExpression	r = 0		3552943	2		=			
ANR	3552955	Identifier	r		3552943	0					
ANR	3552956	PrimaryExpression	0		3552943	1					
ANR	3552957	ForStatement	for ( p = * cursor ; r < n && p < limit ; p ++ )		3552943	2					
ANR	3552958	ForInit	p = * cursor ;	379:10:8885:8896	3552943	0	True				
ANR	3552959	AssignmentExpression	p = * cursor		3552943	0		=			
ANR	3552960	Identifier	p		3552943	0					
ANR	3552961	UnaryOperationExpression	* cursor		3552943	1					
ANR	3552962	UnaryOperator	*		3552943	0					
ANR	3552963	Identifier	cursor		3552943	1					
ANR	3552964	Condition	r < n && p < limit	379:23:8898:8915	3552943	1	True				
ANR	3552965	AndExpression	r < n && p < limit		3552943	0		&&			
ANR	3552966	RelationalExpression	r < n		3552943	0		<			
ANR	3552967	Identifier	r		3552943	0					
ANR	3552968	Identifier	n		3552943	1					
ANR	3552969	RelationalExpression	p < limit		3552943	1		<			
ANR	3552970	Identifier	p		3552943	0					
ANR	3552971	Identifier	limit		3552943	1					
ANR	3552972	PostIncDecOperationExpression	p ++	379:43:8918:8920	3552943	2	True				
ANR	3552973	Identifier	p		3552943	0					
ANR	3552974	IncDec	++		3552943	1					
ANR	3552975	CompoundStatement		8:6:102:112	3552943	3					
ANR	3552976	IdentifierDeclStatement	FT_Byte b ;	381:6:8936:8946	3552943	0	True				
ANR	3552977	IdentifierDecl	b		3552943	0					
ANR	3552978	IdentifierDeclType	FT_Byte		3552943	0					
ANR	3552979	Identifier	b		3552943	1					
ANR	3552980	IfStatement	if ( * p != '\\\\' )		3552943	1					
ANR	3552981	Condition	* p != '\\\\'	384:11:8961:8970	3552943	0	True				
ANR	3552982	EqualityExpression	* p != '\\\\'		3552943	0		!=			
ANR	3552983	UnaryOperationExpression	* p		3552943	0					
ANR	3552984	UnaryOperator	*		3552943	0					
ANR	3552985	Identifier	p		3552943	1					
ANR	3552986	PrimaryExpression	'\\\\'		3552943	1					
ANR	3552987	CompoundStatement		12:6:146:146	3552943	1					
ANR	3552988	ExpressionStatement	buffer [ r ++ ] = * p	386:8:8990:9006	3552943	0	True				
ANR	3552989	AssignmentExpression	buffer [ r ++ ] = * p		3552943	0		=			
ANR	3552990	ArrayIndexing	buffer [ r ++ ]		3552943	0					
ANR	3552991	Identifier	buffer		3552943	0					
ANR	3552992	PostIncDecOperationExpression	r ++		3552943	1					
ANR	3552993	Identifier	r		3552943	0					
ANR	3552994	IncDec	++		3552943	1					
ANR	3552995	UnaryOperationExpression	* p		3552943	1					
ANR	3552996	UnaryOperator	*		3552943	0					
ANR	3552997	Identifier	p		3552943	1					
ANR	3552998	ContinueStatement	continue ;	388:8:9017:9025	3552943	1	True				
ANR	3552999	ExpressionStatement	p ++	391:6:9042:9045	3552943	2	True				
ANR	3553000	PostIncDecOperationExpression	p ++		3552943	0					
ANR	3553001	Identifier	p		3552943	0					
ANR	3553002	IncDec	++		3552943	1					
ANR	3553003	SwitchStatement	switch ( * p )		3552943	3					
ANR	3553004	Condition	* p	393:15:9063:9064	3552943	0	True				
ANR	3553005	UnaryOperationExpression	* p		3552943	0					
ANR	3553006	UnaryOperator	*		3552943	0					
ANR	3553007	Identifier	p		3552943	1					
ANR	3553008	CompoundStatement		21:6:240:240	3552943	1					
ANR	3553009	Label	case 'n' :	395:6:9082:9090	3552943	0	True				
ANR	3553010	ExpressionStatement	b = '\\n'	396:8:9100:9108	3552943	1	True				
ANR	3553011	AssignmentExpression	b = '\\n'		3552943	0		=			
ANR	3553012	Identifier	b		3552943	0					
ANR	3553013	PrimaryExpression	'\\n'		3552943	1					
ANR	3553014	BreakStatement	break ;	397:8:9118:9123	3552943	2	True				
ANR	3553015	Label	case 'r' :	398:6:9131:9139	3552943	3	True				
ANR	3553016	ExpressionStatement	b = '\\r'	399:8:9149:9157	3552943	4	True				
ANR	3553017	AssignmentExpression	b = '\\r'		3552943	0		=			
ANR	3553018	Identifier	b		3552943	0					
ANR	3553019	PrimaryExpression	'\\r'		3552943	1					
ANR	3553020	BreakStatement	break ;	400:8:9167:9172	3552943	5	True				
ANR	3553021	Label	case 't' :	401:6:9180:9188	3552943	6	True				
ANR	3553022	ExpressionStatement	b = '\\t'	402:8:9198:9206	3552943	7	True				
ANR	3553023	AssignmentExpression	b = '\\t'		3552943	0		=			
ANR	3553024	Identifier	b		3552943	0					
ANR	3553025	PrimaryExpression	'\\t'		3552943	1					
ANR	3553026	BreakStatement	break ;	403:8:9216:9221	3552943	8	True				
ANR	3553027	Label	case 'b' :	404:6:9229:9237	3552943	9	True				
ANR	3553028	ExpressionStatement	b = '\\b'	405:8:9247:9255	3552943	10	True				
ANR	3553029	AssignmentExpression	b = '\\b'		3552943	0		=			
ANR	3553030	Identifier	b		3552943	0					
ANR	3553031	PrimaryExpression	'\\b'		3552943	1					
ANR	3553032	BreakStatement	break ;	406:8:9265:9270	3552943	11	True				
ANR	3553033	Label	case 'f' :	407:6:9278:9286	3552943	12	True				
ANR	3553034	ExpressionStatement	b = '\\f'	408:8:9296:9304	3552943	13	True				
ANR	3553035	AssignmentExpression	b = '\\f'		3552943	0		=			
ANR	3553036	Identifier	b		3552943	0					
ANR	3553037	PrimaryExpression	'\\f'		3552943	1					
ANR	3553038	BreakStatement	break ;	409:8:9314:9319	3552943	14	True				
ANR	3553039	Label	case '\\r' :	410:6:9327:9336	3552943	15	True				
ANR	3553040	ExpressionStatement	p ++	411:8:9346:9349	3552943	16	True				
ANR	3553041	PostIncDecOperationExpression	p ++		3552943	0					
ANR	3553042	Identifier	p		3552943	0					
ANR	3553043	IncDec	++		3552943	1					
ANR	3553044	IfStatement	if ( * p != '\\n' )		3552943	17					
ANR	3553045	Condition	* p != '\\n'	412:13:9364:9373	3552943	0	True				
ANR	3553046	EqualityExpression	* p != '\\n'		3552943	0		!=			
ANR	3553047	UnaryOperationExpression	* p		3552943	0					
ANR	3553048	UnaryOperator	*		3552943	0					
ANR	3553049	Identifier	p		3552943	1					
ANR	3553050	PrimaryExpression	'\\n'		3552943	1					
ANR	3553051	CompoundStatement		40:8:551:551	3552943	1					
ANR	3553052	ExpressionStatement	b = * p	414:10:9397:9403	3552943	0	True				
ANR	3553053	AssignmentExpression	b = * p		3552943	0		=			
ANR	3553054	Identifier	b		3552943	0					
ANR	3553055	UnaryOperationExpression	* p		3552943	1					
ANR	3553056	UnaryOperator	*		3552943	0					
ANR	3553057	Identifier	p		3552943	1					
ANR	3553058	BreakStatement	break ;	416:10:9416:9421	3552943	1	True				
ANR	3553059	Label	case '\\n' :	419:6:9462:9471	3552943	18	True				
ANR	3553060	ContinueStatement	continue ;	420:8:9481:9489	3552943	19	True				
ANR	3553061	BreakStatement	break ;	421:8:9499:9504	3552943	20	True				
ANR	3553062	Label	default :	422:6:9512:9519	3552943	21	True				
ANR	3553063	Identifier	default		3552943	0					
ANR	3553064	IfStatement	if ( IS_PS_DIGIT ( * p ) )		3552943	22					
ANR	3553065	Condition	IS_PS_DIGIT ( * p )	423:13:9534:9550	3552943	0	True				
ANR	3553066	CallExpression	IS_PS_DIGIT ( * p )		3552943	0					
ANR	3553067	Callee	IS_PS_DIGIT		3552943	0					
ANR	3553068	Identifier	IS_PS_DIGIT		3552943	0					
ANR	3553069	ArgumentList	* p		3552943	1					
ANR	3553070	Argument	* p		3552943	0					
ANR	3553071	UnaryOperationExpression	* p		3552943	0					
ANR	3553072	UnaryOperator	*		3552943	0					
ANR	3553073	Identifier	p		3552943	1					
ANR	3553074	CompoundStatement		51:8:728:728	3552943	1					
ANR	3553075	ExpressionStatement	b = * p - '0'	425:10:9574:9586	3552943	0	True				
ANR	3553076	AssignmentExpression	b = * p - '0'		3552943	0		=			
ANR	3553077	Identifier	b		3552943	0					
ANR	3553078	AdditiveExpression	* p - '0'		3552943	1		-			
ANR	3553079	UnaryOperationExpression	* p		3552943	0					
ANR	3553080	UnaryOperator	*		3552943	0					
ANR	3553081	Identifier	p		3552943	1					
ANR	3553082	PrimaryExpression	'0'		3552943	1					
ANR	3553083	ExpressionStatement	p ++	427:10:9599:9602	3552943	1	True				
ANR	3553084	PostIncDecOperationExpression	p ++		3552943	0					
ANR	3553085	Identifier	p		3552943	0					
ANR	3553086	IncDec	++		3552943	1					
ANR	3553087	IfStatement	if ( IS_PS_DIGIT ( * p ) )		3552943	2					
ANR	3553088	Condition	IS_PS_DIGIT ( * p )	429:15:9620:9636	3552943	0	True				
ANR	3553089	CallExpression	IS_PS_DIGIT ( * p )		3552943	0					
ANR	3553090	Callee	IS_PS_DIGIT		3552943	0					
ANR	3553091	Identifier	IS_PS_DIGIT		3552943	0					
ANR	3553092	ArgumentList	* p		3552943	1					
ANR	3553093	Argument	* p		3552943	0					
ANR	3553094	UnaryOperationExpression	* p		3552943	0					
ANR	3553095	UnaryOperator	*		3552943	0					
ANR	3553096	Identifier	p		3552943	1					
ANR	3553097	CompoundStatement		57:10:816:816	3552943	1					
ANR	3553098	ExpressionStatement	b = b * 8 + * p - '0'	431:12:9664:9684	3552943	0	True				
ANR	3553099	AssignmentExpression	b = b * 8 + * p - '0'		3552943	0		=			
ANR	3553100	Identifier	b		3552943	0					
ANR	3553101	AdditiveExpression	b * 8 + * p - '0'		3552943	1		+			
ANR	3553102	MultiplicativeExpression	b * 8		3552943	0		*			
ANR	3553103	Identifier	b		3552943	0					
ANR	3553104	PrimaryExpression	8		3552943	1					
ANR	3553105	AdditiveExpression	* p - '0'		3552943	1		-			
ANR	3553106	UnaryOperationExpression	* p		3552943	0					
ANR	3553107	UnaryOperator	*		3552943	0					
ANR	3553108	Identifier	p		3552943	1					
ANR	3553109	PrimaryExpression	'0'		3552943	1					
ANR	3553110	ExpressionStatement	p ++	433:12:9699:9702	3552943	1	True				
ANR	3553111	PostIncDecOperationExpression	p ++		3552943	0					
ANR	3553112	Identifier	p		3552943	0					
ANR	3553113	IncDec	++		3552943	1					
ANR	3553114	IfStatement	if ( IS_PS_DIGIT ( * p ) )		3552943	2					
ANR	3553115	Condition	IS_PS_DIGIT ( * p )	435:17:9722:9738	3552943	0	True				
ANR	3553116	CallExpression	IS_PS_DIGIT ( * p )		3552943	0					
ANR	3553117	Callee	IS_PS_DIGIT		3552943	0					
ANR	3553118	Identifier	IS_PS_DIGIT		3552943	0					
ANR	3553119	ArgumentList	* p		3552943	1					
ANR	3553120	Argument	* p		3552943	0					
ANR	3553121	UnaryOperationExpression	* p		3552943	0					
ANR	3553122	UnaryOperator	*		3552943	0					
ANR	3553123	Identifier	p		3552943	1					
ANR	3553124	ExpressionStatement	b = b * 8 + * p - '0'	436:14:9756:9776	3552943	1	True				
ANR	3553125	AssignmentExpression	b = b * 8 + * p - '0'		3552943	0		=			
ANR	3553126	Identifier	b		3552943	0					
ANR	3553127	AdditiveExpression	b * 8 + * p - '0'		3552943	1		+			
ANR	3553128	MultiplicativeExpression	b * 8		3552943	0		*			
ANR	3553129	Identifier	b		3552943	0					
ANR	3553130	PrimaryExpression	8		3552943	1					
ANR	3553131	AdditiveExpression	* p - '0'		3552943	1		-			
ANR	3553132	UnaryOperationExpression	* p		3552943	0					
ANR	3553133	UnaryOperator	*		3552943	0					
ANR	3553134	Identifier	p		3552943	1					
ANR	3553135	PrimaryExpression	'0'		3552943	1					
ANR	3553136	ElseStatement	else		3552943	0					
ANR	3553137	CompoundStatement		65:12:973:973	3552943	0					
ANR	3553138	ExpressionStatement	buffer [ r ++ ] = b	439:14:9823:9838	3552943	0	True				
ANR	3553139	AssignmentExpression	buffer [ r ++ ] = b		3552943	0		=			
ANR	3553140	ArrayIndexing	buffer [ r ++ ]		3552943	0					
ANR	3553141	Identifier	buffer		3552943	0					
ANR	3553142	PostIncDecOperationExpression	r ++		3552943	1					
ANR	3553143	Identifier	r		3552943	0					
ANR	3553144	IncDec	++		3552943	1					
ANR	3553145	Identifier	b		3552943	1					
ANR	3553146	ExpressionStatement	b = * p	440:14:9854:9860	3552943	1	True				
ANR	3553147	AssignmentExpression	b = * p		3552943	0		=			
ANR	3553148	Identifier	b		3552943	0					
ANR	3553149	UnaryOperationExpression	* p		3552943	1					
ANR	3553150	UnaryOperator	*		3552943	0					
ANR	3553151	Identifier	p		3552943	1					
ANR	3553152	ElseStatement	else		3552943	0					
ANR	3553153	CompoundStatement		71:10:1079:1079	3552943	0					
ANR	3553154	ExpressionStatement	buffer [ r ++ ] = b	445:12:9927:9942	3552943	0	True				
ANR	3553155	AssignmentExpression	buffer [ r ++ ] = b		3552943	0		=			
ANR	3553156	ArrayIndexing	buffer [ r ++ ]		3552943	0					
ANR	3553157	Identifier	buffer		3552943	0					
ANR	3553158	PostIncDecOperationExpression	r ++		3552943	1					
ANR	3553159	Identifier	r		3552943	0					
ANR	3553160	IncDec	++		3552943	1					
ANR	3553161	Identifier	b		3552943	1					
ANR	3553162	ExpressionStatement	b = * p	446:12:9956:9962	3552943	1	True				
ANR	3553163	AssignmentExpression	b = * p		3552943	0		=			
ANR	3553164	Identifier	b		3552943	0					
ANR	3553165	UnaryOperationExpression	* p		3552943	1					
ANR	3553166	UnaryOperator	*		3552943	0					
ANR	3553167	Identifier	p		3552943	1					
ANR	3553168	ElseStatement	else		3552943	0					
ANR	3553169	ExpressionStatement	b = * p	450:10:10009:10015	3552943	0	True				
ANR	3553170	AssignmentExpression	b = * p		3552943	0		=			
ANR	3553171	Identifier	b		3552943	0					
ANR	3553172	UnaryOperationExpression	* p		3552943	1					
ANR	3553173	UnaryOperator	*		3552943	0					
ANR	3553174	Identifier	p		3552943	1					
ANR	3553175	BreakStatement	break ;	451:8:10025:10030	3552943	23	True				
ANR	3553176	ExpressionStatement	buffer [ r ++ ] = b	454:6:10047:10062	3552943	4	True				
ANR	3553177	AssignmentExpression	buffer [ r ++ ] = b		3552943	0		=			
ANR	3553178	ArrayIndexing	buffer [ r ++ ]		3552943	0					
ANR	3553179	Identifier	buffer		3552943	0					
ANR	3553180	PostIncDecOperationExpression	r ++		3552943	1					
ANR	3553181	Identifier	r		3552943	0					
ANR	3553182	IncDec	++		3552943	1					
ANR	3553183	Identifier	b		3552943	1					
ANR	3553184	ExpressionStatement	* cursor = p	457:4:10075:10086	3552943	3	True				
ANR	3553185	AssignmentExpression	* cursor = p		3552943	0		=			
ANR	3553186	UnaryOperationExpression	* cursor		3552943	0					
ANR	3553187	UnaryOperator	*		3552943	0					
ANR	3553188	Identifier	cursor		3552943	1					
ANR	3553189	Identifier	p		3552943	1					
ANR	3553190	ReturnStatement	return r ;	459:4:10093:10101	3552943	4	True				
ANR	3553191	Identifier	r		3552943	0					
ANR	3553192	Identifier	PS_Conv_StringDecode		3552943	1					
ANR	3553193	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n"		3552943	2					
ANR	3553194	Parameter	FT_Byte * * cursor	370:24:8688:8704	3552943	0	True				
ANR	3553195	ParameterType	FT_Byte * *		3552943	0					
ANR	3553196	Identifier	cursor		3552943	1					
ANR	3553197	Parameter	FT_Byte * limit	371:24:8731:8746	3552943	1	True				
ANR	3553198	ParameterType	FT_Byte *		3552943	0					
ANR	3553199	Identifier	limit		3552943	1					
ANR	3553200	Parameter	FT_Byte * buffer	372:24:8773:8789	3552943	2	True				
ANR	3553201	ParameterType	FT_Byte *		3552943	0					
ANR	3553202	Identifier	buffer		3552943	1					
ANR	3553203	Parameter	FT_Offset n	373:24:8816:8827	3552943	3	True				
ANR	3553204	ParameterType	FT_Offset		3552943	0					
ANR	3553205	Identifier	n		3552943	1					
ANR	3553206	CFGEntryNode	ENTRY		3552943		True				
ANR	3553207	CFGExitNode	EXIT		3552943		True				
ANR	3553208	Symbol	cursor		3552943						
ANR	3553209	Symbol	p		3552943						
ANR	3553210	Symbol	r		3552943						
ANR	3553211	Symbol	* cursor		3552943						
ANR	3553212	Symbol	b		3552943						
ANR	3553213	Symbol	* buffer		3552943						
ANR	3553214	Symbol	limit		3552943						
ANR	3553215	Symbol	* p		3552943						
ANR	3553216	Symbol	buffer		3552943						
ANR	3553217	Symbol	IS_PS_DIGIT		3552943						
ANR	3553218	Symbol	n		3552943						
ANR	3553219	Function	PS_Conv_ASCIIHexDecode	465:2:10152:11589							
ANR	3553220	FunctionDef	"PS_Conv_ASCIIHexDecode (FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n)"		3553219	0					
ANR	3553221	CompoundStatement		469:2:10327:11589	3553219	0					
ANR	3553222	IdentifierDeclStatement	FT_Byte * p ;	470:4:10333:10344	3553219	0	True				
ANR	3553223	IdentifierDecl	* p		3553219	0					
ANR	3553224	IdentifierDeclType	FT_Byte *		3553219	0					
ANR	3553225	Identifier	p		3553219	1					
ANR	3553226	IdentifierDeclStatement	FT_UInt r = 0 ;	471:4:10350:10367	3553219	1	True				
ANR	3553227	IdentifierDecl	r = 0		3553219	0					
ANR	3553228	IdentifierDeclType	FT_UInt		3553219	0					
ANR	3553229	Identifier	r		3553219	1					
ANR	3553230	AssignmentExpression	r = 0		3553219	2		=			
ANR	3553231	Identifier	r		3553219	0					
ANR	3553232	PrimaryExpression	0		3553219	1					
ANR	3553233	IdentifierDeclStatement	FT_UInt w = 0 ;	472:4:10373:10390	3553219	2	True				
ANR	3553234	IdentifierDecl	w = 0		3553219	0					
ANR	3553235	IdentifierDeclType	FT_UInt		3553219	0					
ANR	3553236	Identifier	w		3553219	1					
ANR	3553237	AssignmentExpression	w = 0		3553219	2		=			
ANR	3553238	Identifier	w		3553219	0					
ANR	3553239	PrimaryExpression	0		3553219	1					
ANR	3553240	IdentifierDeclStatement	FT_UInt pad = 0x01 ;	473:4:10396:10416	3553219	3	True				
ANR	3553241	IdentifierDecl	pad = 0x01		3553219	0					
ANR	3553242	IdentifierDeclType	FT_UInt		3553219	0					
ANR	3553243	Identifier	pad		3553219	1					
ANR	3553244	AssignmentExpression	pad = 0x01		3553219	2		=			
ANR	3553245	Identifier	pad		3553219	0					
ANR	3553246	PrimaryExpression	0x01		3553219	1					
ANR	3553247	ExpressionStatement	n *= 2	476:4:10424:10430	3553219	4	True				
ANR	3553248	AssignmentExpression	n *= 2		3553219	0		*=			
ANR	3553249	Identifier	n		3553219	0					
ANR	3553250	PrimaryExpression	2		3553219	1					
ANR	3553251	ExpressionStatement	p = * cursor	480:4:10444:10455	3553219	5	True				
ANR	3553252	AssignmentExpression	p = * cursor		3553219	0		=			
ANR	3553253	Identifier	p		3553219	0					
ANR	3553254	UnaryOperationExpression	* cursor		3553219	1					
ANR	3553255	UnaryOperator	*		3553219	0					
ANR	3553256	Identifier	cursor		3553219	1					
ANR	3553257	IfStatement	if ( p >= limit )		3553219	6					
ANR	3553258	Condition	p >= limit	482:9:10467:10476	3553219	0	True				
ANR	3553259	RelationalExpression	p >= limit		3553219	0		>=			
ANR	3553260	Identifier	p		3553219	0					
ANR	3553261	Identifier	limit		3553219	1					
ANR	3553262	ReturnStatement	return 0 ;	483:6:10486:10494	3553219	1	True				
ANR	3553263	PrimaryExpression	0		3553219	0					
ANR	3553264	IfStatement	if ( n > ( FT_UInt ) ( limit - p ) )		3553219	7					
ANR	3553265	Condition	n > ( FT_UInt ) ( limit - p )	485:9:10506:10531	3553219	0	True				
ANR	3553266	RelationalExpression	n > ( FT_UInt ) ( limit - p )		3553219	0		>			
ANR	3553267	Identifier	n		3553219	0					
ANR	3553268	CastExpression	( FT_UInt ) ( limit - p )		3553219	1					
ANR	3553269	CastTarget	FT_UInt		3553219	0					
ANR	3553270	AdditiveExpression	limit - p		3553219	1		-			
ANR	3553271	Identifier	limit		3553219	0					
ANR	3553272	Identifier	p		3553219	1					
ANR	3553273	ExpressionStatement	n = ( FT_UInt ) ( limit - p )	486:6:10541:10567	3553219	1	True				
ANR	3553274	AssignmentExpression	n = ( FT_UInt ) ( limit - p )		3553219	0		=			
ANR	3553275	Identifier	n		3553219	0					
ANR	3553276	CastExpression	( FT_UInt ) ( limit - p )		3553219	1					
ANR	3553277	CastTarget	FT_UInt		3553219	0					
ANR	3553278	AdditiveExpression	limit - p		3553219	1		-			
ANR	3553279	Identifier	limit		3553219	0					
ANR	3553280	Identifier	p		3553219	1					
ANR	3553281	ForStatement	for ( ; r < n ; r ++ )		3553219	8					
ANR	3553282	Condition	r < n	489:12:10658:10662	3553219	0	True				
ANR	3553283	RelationalExpression	r < n		3553219	0		<			
ANR	3553284	Identifier	r		3553219	0					
ANR	3553285	Identifier	n		3553219	1					
ANR	3553286	PostIncDecOperationExpression	r ++	489:19:10665:10667	3553219	1	True				
ANR	3553287	Identifier	r		3553219	0					
ANR	3553288	IncDec	++		3553219	1					
ANR	3553289	CompoundStatement		23:6:355:372	3553219	2					
ANR	3553290	IdentifierDeclStatement	FT_UInt c = p [ r ] ;	491:6:10683:10700	3553219	0	True				
ANR	3553291	IdentifierDecl	c = p [ r ]		3553219	0					
ANR	3553292	IdentifierDeclType	FT_UInt		3553219	0					
ANR	3553293	Identifier	c		3553219	1					
ANR	3553294	AssignmentExpression	c = p [ r ]		3553219	2		=			
ANR	3553295	Identifier	c		3553219	0					
ANR	3553296	ArrayIndexing	p [ r ]		3553219	1					
ANR	3553297	Identifier	p		3553219	0					
ANR	3553298	Identifier	r		3553219	1					
ANR	3553299	IfStatement	if ( IS_PS_SPACE ( c ) )		3553219	1					
ANR	3553300	Condition	IS_PS_SPACE ( c )	494:11:10715:10730	3553219	0	True				
ANR	3553301	CallExpression	IS_PS_SPACE ( c )		3553219	0					
ANR	3553302	Callee	IS_PS_SPACE		3553219	0					
ANR	3553303	Identifier	IS_PS_SPACE		3553219	0					
ANR	3553304	ArgumentList	c		3553219	1					
ANR	3553305	Argument	c		3553219	0					
ANR	3553306	Identifier	c		3553219	0					
ANR	3553307	ContinueStatement	continue ;	495:8:10742:10750	3553219	1	True				
ANR	3553308	Statement	if	497:6:10759:10760	3553219	2	True				
ANR	3553309	Statement	(	497:9:10762:10762	3553219	3	True				
ANR	3553310	Statement	c	497:11:10764:10764	3553219	4	True				
ANR	3553311	Statement	OP	497:13:10766:10767	3553219	5	True				
ANR	3553312	Statement	0x80	497:16:10769:10772	3553219	6	True				
ANR	3553313	Statement	)	497:21:10774:10774	3553219	7	True				
ANR	3553314	BreakStatement	break ;	498:8:10784:10789	3553219	8	True				
ANR	3553315	ExpressionStatement	c = ( FT_UInt ) ft_char_table [ c & 0x7F ]	500:6:10798:10834	3553219	9	True				
ANR	3553316	AssignmentExpression	c = ( FT_UInt ) ft_char_table [ c & 0x7F ]		3553219	0		=			
ANR	3553317	Identifier	c		3553219	0					
ANR	3553318	CastExpression	( FT_UInt ) ft_char_table [ c & 0x7F ]		3553219	1					
ANR	3553319	CastTarget	FT_UInt		3553219	0					
ANR	3553320	ArrayIndexing	ft_char_table [ c & 0x7F ]		3553219	1					
ANR	3553321	Identifier	ft_char_table		3553219	0					
ANR	3553322	BitAndExpression	c & 0x7F		3553219	1		&			
ANR	3553323	Identifier	c		3553219	0					
ANR	3553324	PrimaryExpression	0x7F		3553219	1					
ANR	3553325	IfStatement	if ( c >= 16 )		3553219	10					
ANR	3553326	Condition	c >= 16	501:11:10847:10853	3553219	0	True				
ANR	3553327	RelationalExpression	c >= 16		3553219	0		>=			
ANR	3553328	Identifier	c		3553219	0					
ANR	3553329	PrimaryExpression	16		3553219	1					
ANR	3553330	BreakStatement	break ;	502:8:10865:10870	3553219	1	True				
ANR	3553331	ExpressionStatement	pad = ( pad << 4 ) | c	504:6:10879:10901	3553219	11	True				
ANR	3553332	AssignmentExpression	pad = ( pad << 4 ) | c		3553219	0		=			
ANR	3553333	Identifier	pad		3553219	0					
ANR	3553334	InclusiveOrExpression	( pad << 4 ) | c		3553219	1		|			
ANR	3553335	ShiftExpression	pad << 4		3553219	0		<<			
ANR	3553336	Identifier	pad		3553219	0					
ANR	3553337	PrimaryExpression	4		3553219	1					
ANR	3553338	Identifier	c		3553219	1					
ANR	3553339	IfStatement	if ( pad & 0x100 )		3553219	12					
ANR	3553340	Condition	pad & 0x100	505:11:10914:10924	3553219	0	True				
ANR	3553341	BitAndExpression	pad & 0x100		3553219	0		&			
ANR	3553342	Identifier	pad		3553219	0					
ANR	3553343	PrimaryExpression	0x100		3553219	1					
ANR	3553344	CompoundStatement		38:6:606:606	3553219	1					
ANR	3553345	ExpressionStatement	buffer [ w ++ ] = ( FT_Byte ) pad	507:8:10944:10970	3553219	0	True				
ANR	3553346	AssignmentExpression	buffer [ w ++ ] = ( FT_Byte ) pad		3553219	0		=			
ANR	3553347	ArrayIndexing	buffer [ w ++ ]		3553219	0					
ANR	3553348	Identifier	buffer		3553219	0					
ANR	3553349	PostIncDecOperationExpression	w ++		3553219	1					
ANR	3553350	Identifier	w		3553219	0					
ANR	3553351	IncDec	++		3553219	1					
ANR	3553352	CastExpression	( FT_Byte ) pad		3553219	1					
ANR	3553353	CastTarget	FT_Byte		3553219	0					
ANR	3553354	Identifier	pad		3553219	1					
ANR	3553355	ExpressionStatement	pad = 0x01	508:8:10980:10998	3553219	1	True				
ANR	3553356	AssignmentExpression	pad = 0x01		3553219	0		=			
ANR	3553357	Identifier	pad		3553219	0					
ANR	3553358	PrimaryExpression	0x01		3553219	1					
ANR	3553359	IfStatement	if ( pad != 0x01 )		3553219	9					
ANR	3553360	Condition	pad != 0x01	512:9:11024:11034	3553219	0	True				
ANR	3553361	EqualityExpression	pad != 0x01		3553219	0		!=			
ANR	3553362	Identifier	pad		3553219	0					
ANR	3553363	PrimaryExpression	0x01		3553219	1					
ANR	3553364	ExpressionStatement	buffer [ w ++ ] = ( FT_Byte ) ( pad << 4 )	513:6:11044:11079	3553219	1	True				
ANR	3553365	AssignmentExpression	buffer [ w ++ ] = ( FT_Byte ) ( pad << 4 )		3553219	0		=			
ANR	3553366	ArrayIndexing	buffer [ w ++ ]		3553219	0					
ANR	3553367	Identifier	buffer		3553219	0					
ANR	3553368	PostIncDecOperationExpression	w ++		3553219	1					
ANR	3553369	Identifier	w		3553219	0					
ANR	3553370	IncDec	++		3553219	1					
ANR	3553371	CastExpression	( FT_Byte ) ( pad << 4 )		3553219	1					
ANR	3553372	CastTarget	FT_Byte		3553219	0					
ANR	3553373	ShiftExpression	pad << 4		3553219	1		<<			
ANR	3553374	Identifier	pad		3553219	0					
ANR	3553375	PrimaryExpression	4		3553219	1					
ANR	3553376	ExpressionStatement	* cursor = p + r	515:4:11086:11101	3553219	10	True				
ANR	3553377	AssignmentExpression	* cursor = p + r		3553219	0		=			
ANR	3553378	UnaryOperationExpression	* cursor		3553219	0					
ANR	3553379	UnaryOperator	*		3553219	0					
ANR	3553380	Identifier	cursor		3553219	1					
ANR	3553381	AdditiveExpression	p + r		3553219	1		+			
ANR	3553382	Identifier	p		3553219	0					
ANR	3553383	Identifier	r		3553219	1					
ANR	3553384	ReturnStatement	return w ;	517:4:11108:11116	3553219	11	True				
ANR	3553385	Identifier	w		3553219	0					
ANR	3553386	Identifier	PS_Conv_ASCIIHexDecode		3553219	1					
ANR	3553387	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n"		3553219	2					
ANR	3553388	Parameter	FT_Byte * * cursor	465:26:10176:10192	3553219	0	True				
ANR	3553389	ParameterType	FT_Byte * *		3553219	0					
ANR	3553390	Identifier	cursor		3553219	1					
ANR	3553391	Parameter	FT_Byte * limit	466:26:10221:10236	3553219	1	True				
ANR	3553392	ParameterType	FT_Byte *		3553219	0					
ANR	3553393	Identifier	limit		3553219	1					
ANR	3553394	Parameter	FT_Byte * buffer	467:26:10265:10281	3553219	2	True				
ANR	3553395	ParameterType	FT_Byte *		3553219	0					
ANR	3553396	Identifier	buffer		3553219	1					
ANR	3553397	Parameter	FT_Offset n	468:26:10310:10321	3553219	3	True				
ANR	3553398	ParameterType	FT_Offset		3553219	0					
ANR	3553399	Identifier	n		3553219	1					
ANR	3553400	CFGEntryNode	ENTRY		3553219		True				
ANR	3553401	CFGExitNode	EXIT		3553219		True				
ANR	3553402	Symbol	cursor		3553219						
ANR	3553403	Symbol	* cursor		3553219						
ANR	3553404	Symbol	* buffer		3553219						
ANR	3553405	Symbol	c		3553219						
ANR	3553406	Symbol	* ft_char_table		3553219						
ANR	3553407	Symbol	* c		3553219						
ANR	3553408	Symbol	n		3553219						
ANR	3553409	Symbol	p		3553219						
ANR	3553410	Symbol	r		3553219						
ANR	3553411	Symbol	pad		3553219						
ANR	3553412	Symbol	w		3553219						
ANR	3553413	Symbol	limit		3553219						
ANR	3553414	Symbol	* p		3553219						
ANR	3553415	Symbol	buffer		3553219						
ANR	3553416	Symbol	* r		3553219						
ANR	3553417	Symbol	ft_char_table		3553219						
ANR	3553418	Symbol	IS_PS_SPACE		3553219						
ANR	3553419	Function	PS_Conv_EexecDecode	558:2:11621:12560							
ANR	3553420	FunctionDef	"PS_Conv_EexecDecode (FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n , FT_UShort * seed)"		3553419	0					
ANR	3553421	CompoundStatement		563:2:11829:12560	3553419	0					
ANR	3553422	IdentifierDeclStatement	FT_Byte * p ;	564:4:11835:11846	3553419	0	True				
ANR	3553423	IdentifierDecl	* p		3553419	0					
ANR	3553424	IdentifierDeclType	FT_Byte *		3553419	0					
ANR	3553425	Identifier	p		3553419	1					
ANR	3553426	IdentifierDeclStatement	FT_UInt r ;	565:4:11852:11863	3553419	1	True				
ANR	3553427	IdentifierDecl	r		3553419	0					
ANR	3553428	IdentifierDeclType	FT_UInt		3553419	0					
ANR	3553429	Identifier	r		3553419	1					
ANR	3553430	IdentifierDeclStatement	FT_UInt s = * seed ;	566:4:11869:11888	3553419	2	True				
ANR	3553431	IdentifierDecl	s = * seed		3553419	0					
ANR	3553432	IdentifierDeclType	FT_UInt		3553419	0					
ANR	3553433	Identifier	s		3553419	1					
ANR	3553434	AssignmentExpression	s = * seed		3553419	2		=			
ANR	3553435	Identifier	s		3553419	0					
ANR	3553436	UnaryOperationExpression	* seed		3553419	1					
ANR	3553437	UnaryOperator	*		3553419	0					
ANR	3553438	Identifier	seed		3553419	1					
ANR	3553439	ExpressionStatement	p = * cursor	571:4:11903:11914	3553419	3	True				
ANR	3553440	AssignmentExpression	p = * cursor		3553419	0		=			
ANR	3553441	Identifier	p		3553419	0					
ANR	3553442	UnaryOperationExpression	* cursor		3553419	1					
ANR	3553443	UnaryOperator	*		3553419	0					
ANR	3553444	Identifier	cursor		3553419	1					
ANR	3553445	IfStatement	if ( p >= limit )		3553419	4					
ANR	3553446	Condition	p >= limit	573:9:11926:11935	3553419	0	True				
ANR	3553447	RelationalExpression	p >= limit		3553419	0		>=			
ANR	3553448	Identifier	p		3553419	0					
ANR	3553449	Identifier	limit		3553419	1					
ANR	3553450	ReturnStatement	return 0 ;	574:6:11945:11953	3553419	1	True				
ANR	3553451	PrimaryExpression	0		3553419	0					
ANR	3553452	IfStatement	if ( n > ( FT_UInt ) ( limit - p ) )		3553419	5					
ANR	3553453	Condition	n > ( FT_UInt ) ( limit - p )	576:9:11965:11988	3553419	0	True				
ANR	3553454	RelationalExpression	n > ( FT_UInt ) ( limit - p )		3553419	0		>			
ANR	3553455	Identifier	n		3553419	0					
ANR	3553456	CastExpression	( FT_UInt ) ( limit - p )		3553419	1					
ANR	3553457	CastTarget	FT_UInt		3553419	0					
ANR	3553458	AdditiveExpression	limit - p		3553419	1		-			
ANR	3553459	Identifier	limit		3553419	0					
ANR	3553460	Identifier	p		3553419	1					
ANR	3553461	ExpressionStatement	n = ( FT_UInt ) ( limit - p )	577:6:11998:12022	3553419	1	True				
ANR	3553462	AssignmentExpression	n = ( FT_UInt ) ( limit - p )		3553419	0		=			
ANR	3553463	Identifier	n		3553419	0					
ANR	3553464	CastExpression	( FT_UInt ) ( limit - p )		3553419	1					
ANR	3553465	CastTarget	FT_UInt		3553419	0					
ANR	3553466	AdditiveExpression	limit - p		3553419	1		-			
ANR	3553467	Identifier	limit		3553419	0					
ANR	3553468	Identifier	p		3553419	1					
ANR	3553469	ForStatement	for ( r = 0 ; r < n ; r ++ )		3553419	6					
ANR	3553470	ForInit	r = 0 ;	579:10:12035:12040	3553419	0	True				
ANR	3553471	AssignmentExpression	r = 0		3553419	0		=			
ANR	3553472	Identifier	r		3553419	0					
ANR	3553473	PrimaryExpression	0		3553419	1					
ANR	3553474	Condition	r < n	579:17:12042:12046	3553419	1	True				
ANR	3553475	RelationalExpression	r < n		3553419	0		<			
ANR	3553476	Identifier	r		3553419	0					
ANR	3553477	Identifier	n		3553419	1					
ANR	3553478	PostIncDecOperationExpression	r ++	579:24:12049:12051	3553419	2	True				
ANR	3553479	Identifier	r		3553419	0					
ANR	3553480	IncDec	++		3553419	1					
ANR	3553481	CompoundStatement		20:6:264:299	3553419	3					
ANR	3553482	IdentifierDeclStatement	FT_UInt val = p [ r ] ;	581:6:12067:12086	3553419	0	True				
ANR	3553483	IdentifierDecl	val = p [ r ]		3553419	0					
ANR	3553484	IdentifierDeclType	FT_UInt		3553419	0					
ANR	3553485	Identifier	val		3553419	1					
ANR	3553486	AssignmentExpression	val = p [ r ]		3553419	2		=			
ANR	3553487	Identifier	val		3553419	0					
ANR	3553488	ArrayIndexing	p [ r ]		3553419	1					
ANR	3553489	Identifier	p		3553419	0					
ANR	3553490	Identifier	r		3553419	1					
ANR	3553491	IdentifierDeclStatement	FT_UInt b = ( val ^ ( s >> 8 ) ) ;	582:6:12094:12129	3553419	1	True				
ANR	3553492	IdentifierDecl	b = ( val ^ ( s >> 8 ) )		3553419	0					
ANR	3553493	IdentifierDeclType	FT_UInt		3553419	0					
ANR	3553494	Identifier	b		3553419	1					
ANR	3553495	AssignmentExpression	b = ( val ^ ( s >> 8 ) )		3553419	2		=			
ANR	3553496	Identifier	b		3553419	0					
ANR	3553497	ExclusiveOrExpression	val ^ ( s >> 8 )		3553419	1		^			
ANR	3553498	Identifier	val		3553419	0					
ANR	3553499	ShiftExpression	s >> 8		3553419	1		>>			
ANR	3553500	Identifier	s		3553419	0					
ANR	3553501	PrimaryExpression	8		3553419	1					
ANR	3553502	ExpressionStatement	s = ( ( val + s ) * 52845U + 22719 ) & 0xFFFFU	585:6:12139:12189	3553419	2	True				
ANR	3553503	AssignmentExpression	s = ( ( val + s ) * 52845U + 22719 ) & 0xFFFFU		3553419	0		=			
ANR	3553504	Identifier	s		3553419	0					
ANR	3553505	BitAndExpression	( ( val + s ) * 52845U + 22719 ) & 0xFFFFU		3553419	1		&			
ANR	3553506	AdditiveExpression	( val + s ) * 52845U + 22719		3553419	0		+			
ANR	3553507	MultiplicativeExpression	( val + s ) * 52845U		3553419	0		*			
ANR	3553508	AdditiveExpression	val + s		3553419	0		+			
ANR	3553509	Identifier	val		3553419	0					
ANR	3553510	Identifier	s		3553419	1					
ANR	3553511	PrimaryExpression	52845U		3553419	1					
ANR	3553512	PrimaryExpression	22719		3553419	1					
ANR	3553513	PrimaryExpression	0xFFFFU		3553419	1					
ANR	3553514	ExpressionStatement	buffer [ r ] = ( FT_Byte ) b	586:6:12197:12220	3553419	3	True				
ANR	3553515	AssignmentExpression	buffer [ r ] = ( FT_Byte ) b		3553419	0		=			
ANR	3553516	ArrayIndexing	buffer [ r ]		3553419	0					
ANR	3553517	Identifier	buffer		3553419	0					
ANR	3553518	Identifier	r		3553419	1					
ANR	3553519	CastExpression	( FT_Byte ) b		3553419	1					
ANR	3553520	CastTarget	FT_Byte		3553419	0					
ANR	3553521	Identifier	b		3553419	1					
ANR	3553522	ExpressionStatement	* cursor = p + n	589:4:12233:12248	3553419	7	True				
ANR	3553523	AssignmentExpression	* cursor = p + n		3553419	0		=			
ANR	3553524	UnaryOperationExpression	* cursor		3553419	0					
ANR	3553525	UnaryOperator	*		3553419	0					
ANR	3553526	Identifier	cursor		3553419	1					
ANR	3553527	AdditiveExpression	p + n		3553419	1		+			
ANR	3553528	Identifier	p		3553419	0					
ANR	3553529	Identifier	n		3553419	1					
ANR	3553530	ExpressionStatement	* seed = ( FT_UShort ) s	590:4:12254:12276	3553419	8	True				
ANR	3553531	AssignmentExpression	* seed = ( FT_UShort ) s		3553419	0		=			
ANR	3553532	UnaryOperationExpression	* seed		3553419	0					
ANR	3553533	UnaryOperator	*		3553419	0					
ANR	3553534	Identifier	seed		3553419	1					
ANR	3553535	CastExpression	( FT_UShort ) s		3553419	1					
ANR	3553536	CastTarget	FT_UShort		3553419	0					
ANR	3553537	Identifier	s		3553419	1					
ANR	3553538	ReturnStatement	return r ;	607:4:12548:12556	3553419	9	True				
ANR	3553539	Identifier	r		3553419	0					
ANR	3553540	Identifier	PS_Conv_EexecDecode		3553419	1					
ANR	3553541	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n , FT_UShort * seed"		3553419	2					
ANR	3553542	Parameter	FT_Byte * * cursor	558:23:11642:11659	3553419	0	True				
ANR	3553543	ParameterType	FT_Byte * *		3553419	0					
ANR	3553544	Identifier	cursor		3553419	1					
ANR	3553545	Parameter	FT_Byte * limit	559:23:11685:11701	3553419	1	True				
ANR	3553546	ParameterType	FT_Byte *		3553419	0					
ANR	3553547	Identifier	limit		3553419	1					
ANR	3553548	Parameter	FT_Byte * buffer	560:23:11727:11744	3553419	2	True				
ANR	3553549	ParameterType	FT_Byte *		3553419	0					
ANR	3553550	Identifier	buffer		3553419	1					
ANR	3553551	Parameter	FT_Offset n	561:23:11770:11782	3553419	3	True				
ANR	3553552	ParameterType	FT_Offset		3553419	0					
ANR	3553553	Identifier	n		3553419	1					
ANR	3553554	Parameter	FT_UShort * seed	562:23:11808:11823	3553419	4	True				
ANR	3553555	ParameterType	FT_UShort *		3553419	0					
ANR	3553556	Identifier	seed		3553419	1					
ANR	3553557	CFGEntryNode	ENTRY		3553419		True				
ANR	3553558	CFGExitNode	EXIT		3553419		True				
ANR	3553559	Symbol	cursor		3553419						
ANR	3553560	Symbol	val		3553419						
ANR	3553561	Symbol	* cursor		3553419						
ANR	3553562	Symbol	b		3553419						
ANR	3553563	Symbol	* buffer		3553419						
ANR	3553564	Symbol	* seed		3553419						
ANR	3553565	Symbol	seed		3553419						
ANR	3553566	Symbol	n		3553419						
ANR	3553567	Symbol	p		3553419						
ANR	3553568	Symbol	r		3553419						
ANR	3553569	Symbol	s		3553419						
ANR	3553570	Symbol	limit		3553419						
ANR	3553571	Symbol	* p		3553419						
ANR	3553572	Symbol	buffer		3553419						
ANR	3553573	Symbol	* r		3553419						
