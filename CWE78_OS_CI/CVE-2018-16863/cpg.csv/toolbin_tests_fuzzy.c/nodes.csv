command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10501222	File	data/converged/CVE-2018-16863_ghostpdl/toolbin_tests_fuzzy.c								
ANR	10501223	DeclStmt									
ANR	10501224	Decl							unsigned char	unsigned char	uchar
ANR	10501225	DeclStmt									
ANR	10501226	Decl							int	int	bool
ANR	10501227	DeclStmt									
ANR	10501228	Decl							struct _Image	struct _Image	Image
ANR	10501229	ClassDef	_Image	27:0:555:870							
ANR	10501230	DeclStmt									
ANR	10501231	Decl							int ( * ) ( Image * self )	int ( * ) ( Image * self )	close
ANR	10501232	DeclStmt									
ANR	10501233	Decl							"int ( * ) ( Image * self , uchar * buf )"	"int ( * ) ( Image * self , uchar * buf )"	get_scan_line
ANR	10501234	DeclStmt									
ANR	10501235	Decl							"int ( * ) ( Image * self , int y )"	"int ( * ) ( Image * self , int y )"	seek
ANR	10501236	DeclStmt									
ANR	10501237	Decl							"int ( * ) ( Image * self , uchar * buf , int size )"	"int ( * ) ( Image * self , uchar * buf , int size )"	write
ANR	10501238	DeclStmt									
ANR	10501239	Decl							int ( * ) ( Image * self )	int ( * ) ( Image * self )	feof_
ANR	10501240	DeclStmt									
ANR	10501241	Decl							int	int	width
ANR	10501242	DeclStmt									
ANR	10501243	Decl							int	int	height
ANR	10501244	DeclStmt									
ANR	10501245	Decl							int	int	maxval
ANR	10501246	DeclStmt									
ANR	10501247	Decl							int	int	n_chan
ANR	10501248	DeclStmt									
ANR	10501249	Decl							int	int	raster
ANR	10501250	DeclStmt									
ANR	10501251	Decl							int	int	bpp
ANR	10501252	DeclStmt									
ANR	10501253	Decl							struct _FuzzyParams	struct _FuzzyParams	FuzzyParams
ANR	10501254	ClassDef	_FuzzyParams	43:0:916:1026							
ANR	10501255	DeclStmt									
ANR	10501256	Decl							int	int	tolerance
ANR	10501257	DeclStmt									
ANR	10501258	Decl							int	int	window_size
ANR	10501259	DeclStmt									
ANR	10501260	Decl							bool	bool	report_coordinates
ANR	10501261	DeclStmt									
ANR	10501262	Decl							struct _FuzzyReport	struct _FuzzyReport	FuzzyReport
ANR	10501263	ClassDef	_FuzzyReport	51:0:1072:1207							
ANR	10501264	DeclStmt									
ANR	10501265	Decl							int	int	n_diff
ANR	10501266	DeclStmt									
ANR	10501267	Decl							int	int	n_outof_tolerance
ANR	10501268	DeclStmt									
ANR	10501269	Decl							int	int	n_outof_window
ANR	10501270	DeclStmt									
ANR	10501271	Decl							double	double	max_color_error
ANR	10501272	DeclStmt									
ANR	10501273	Decl							double	double	avg_color_error
ANR	10501274	Function	packBits	59:0:1211:4809							
ANR	10501275	FunctionDef	"packBits (unsigned char * buffer , unsigned char * outBuffer , int length , int stride)"		10501274	0					
ANR	10501276	CompoundStatement		59:86:1297:4809	10501274	0					
ANR	10501277	IdentifierDeclStatement	unsigned char * nextToWrite ;	60:4:1303:1329	10501274	0	True				
ANR	10501278	IdentifierDecl	* nextToWrite		10501274	0					
ANR	10501279	IdentifierDeclType	unsigned char *		10501274	0					
ANR	10501280	Identifier	nextToWrite		10501274	1					
ANR	10501281	IdentifierDeclStatement	"int repCount , diffCount , totalBytes , i ;"	61:4:1335:1373	10501274	1	True				
ANR	10501282	IdentifierDecl	repCount		10501274	0					
ANR	10501283	IdentifierDeclType	int		10501274	0					
ANR	10501284	Identifier	repCount		10501274	1					
ANR	10501285	IdentifierDecl	diffCount		10501274	1					
ANR	10501286	IdentifierDeclType	int		10501274	0					
ANR	10501287	Identifier	diffCount		10501274	1					
ANR	10501288	IdentifierDecl	totalBytes		10501274	2					
ANR	10501289	IdentifierDeclType	int		10501274	0					
ANR	10501290	Identifier	totalBytes		10501274	1					
ANR	10501291	IdentifierDecl	i		10501274	3					
ANR	10501292	IdentifierDeclType	int		10501274	0					
ANR	10501293	Identifier	i		10501274	1					
ANR	10501294	IdentifierDeclStatement	unsigned char pixData ;	62:4:1379:1400	10501274	2	True				
ANR	10501295	IdentifierDecl	pixData		10501274	0					
ANR	10501296	IdentifierDeclType	unsigned char		10501274	0					
ANR	10501297	Identifier	pixData		10501274	1					
ANR	10501298	ExpressionStatement	pixData = ( unsigned char ) 0	64:4:1407:1432	10501274	3	True				
ANR	10501299	AssignmentExpression	pixData = ( unsigned char ) 0		10501274	0		=			
ANR	10501300	Identifier	pixData		10501274	0					
ANR	10501301	CastExpression	( unsigned char ) 0		10501274	1					
ANR	10501302	CastTarget	unsigned char		10501274	0					
ANR	10501303	PrimaryExpression	0		10501274	1					
ANR	10501304	ExpressionStatement	nextToWrite = buffer	65:4:1438:1458	10501274	4	True				
ANR	10501305	AssignmentExpression	nextToWrite = buffer		10501274	0		=			
ANR	10501306	Identifier	nextToWrite		10501274	0					
ANR	10501307	Identifier	buffer		10501274	1					
ANR	10501308	ExpressionStatement	repCount = 1	66:4:1464:1476	10501274	5	True				
ANR	10501309	AssignmentExpression	repCount = 1		10501274	0		=			
ANR	10501310	Identifier	repCount		10501274	0					
ANR	10501311	PrimaryExpression	1		10501274	1					
ANR	10501312	ExpressionStatement	diffCount = 0	67:4:1482:1495	10501274	6	True				
ANR	10501313	AssignmentExpression	diffCount = 0		10501274	0		=			
ANR	10501314	Identifier	diffCount		10501274	0					
ANR	10501315	PrimaryExpression	0		10501274	1					
ANR	10501316	ExpressionStatement	totalBytes = 0	68:4:1501:1515	10501274	7	True				
ANR	10501317	AssignmentExpression	totalBytes = 0		10501274	0		=			
ANR	10501318	Identifier	totalBytes		10501274	0					
ANR	10501319	PrimaryExpression	0		10501274	1					
ANR	10501320	WhileStatement	while ( -- length )		10501274	8					
ANR	10501321	Condition	-- length	69:10:1527:1534	10501274	0	True				
ANR	10501322	UnaryExpression	-- length		10501274	0					
ANR	10501323	IncDec	--		10501274	0					
ANR	10501324	Identifier	length		10501274	1					
ANR	10501325	CompoundStatement		11:20:239:239	10501274	1					
ANR	10501326	ExpressionStatement	pixData = * buffer	70:8:1547:1564	10501274	0	True				
ANR	10501327	AssignmentExpression	pixData = * buffer		10501274	0		=			
ANR	10501328	Identifier	pixData		10501274	0					
ANR	10501329	UnaryOperationExpression	* buffer		10501274	1					
ANR	10501330	UnaryOperator	*		10501274	0					
ANR	10501331	Identifier	buffer		10501274	1					
ANR	10501332	ExpressionStatement	buffer += stride	71:8:1574:1588	10501274	1	True				
ANR	10501333	AssignmentExpression	buffer += stride		10501274	0		+=			
ANR	10501334	Identifier	buffer		10501274	0					
ANR	10501335	Identifier	stride		10501274	1					
ANR	10501336	IfStatement	if ( pixData == * buffer )		10501274	2					
ANR	10501337	Condition	pixData == * buffer	72:12:1602:1619	10501274	0	True				
ANR	10501338	EqualityExpression	pixData == * buffer		10501274	0		==			
ANR	10501339	Identifier	pixData		10501274	0					
ANR	10501340	UnaryOperationExpression	* buffer		10501274	1					
ANR	10501341	UnaryOperator	*		10501274	0					
ANR	10501342	Identifier	buffer		10501274	1					
ANR	10501343	CompoundStatement		14:32:324:324	10501274	1					
ANR	10501344	ExpressionStatement	repCount ++	73:12:1636:1646	10501274	0	True				
ANR	10501345	PostIncDecOperationExpression	repCount ++		10501274	0					
ANR	10501346	Identifier	repCount		10501274	0					
ANR	10501347	IncDec	++		10501274	1					
ANR	10501348	ElseStatement	else		10501274	0					
ANR	10501349	CompoundStatement		16:15:365:365	10501274	0					
ANR	10501350	IfStatement	if ( repCount > 2 || ( repCount > 1 && diffCount == 0 ) )		10501274	0					
ANR	10501351	Condition	repCount > 2 || ( repCount > 1 && diffCount == 0 )	75:16:1681:1724	10501274	0	True				
ANR	10501352	OrExpression	repCount > 2 || ( repCount > 1 && diffCount == 0 )		10501274	0		||			
ANR	10501353	RelationalExpression	repCount > 2		10501274	0		>			
ANR	10501354	Identifier	repCount		10501274	0					
ANR	10501355	PrimaryExpression	2		10501274	1					
ANR	10501356	AndExpression	repCount > 1 && diffCount == 0		10501274	1		&&			
ANR	10501357	RelationalExpression	repCount > 1		10501274	0		>			
ANR	10501358	Identifier	repCount		10501274	0					
ANR	10501359	PrimaryExpression	1		10501274	1					
ANR	10501360	EqualityExpression	diffCount == 0		10501274	1		==			
ANR	10501361	Identifier	diffCount		10501274	0					
ANR	10501362	PrimaryExpression	0		10501274	1					
ANR	10501363	CompoundStatement		17:62:429:429	10501274	1					
ANR	10501364	WhileStatement	while ( diffCount )		10501274	0					
ANR	10501365	Condition	diffCount	76:23:1752:1760	10501274	0	True				
ANR	10501366	Identifier	diffCount		10501274	0					
ANR	10501367	IfStatement	if ( diffCount > 128 )		10501274	1					
ANR	10501368	Condition	diffCount > 128	77:24:1787:1801	10501274	0	True				
ANR	10501369	RelationalExpression	diffCount > 128		10501274	0		>			
ANR	10501370	Identifier	diffCount		10501274	0					
ANR	10501371	PrimaryExpression	128		10501274	1					
ANR	10501372	CompoundStatement		19:41:506:506	10501274	1					
ANR	10501373	ExpressionStatement	totalBytes += 129	78:24:1830:1845	10501274	0	True				
ANR	10501374	AssignmentExpression	totalBytes += 129		10501274	0		+=			
ANR	10501375	Identifier	totalBytes		10501274	0					
ANR	10501376	PrimaryExpression	129		10501274	1					
ANR	10501377	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) 0x7f	79:24:1871:1906	10501274	1	True				
ANR	10501378	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) 0x7f		10501274	0		=			
ANR	10501379	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501380	UnaryOperator	*		10501274	0					
ANR	10501381	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501382	Identifier	outBuffer		10501274	0					
ANR	10501383	IncDec	++		10501274	1					
ANR	10501384	CastExpression	( unsigned char ) 0x7f		10501274	1					
ANR	10501385	CastTarget	unsigned char		10501274	0					
ANR	10501386	PrimaryExpression	0x7f		10501274	1					
ANR	10501387	ForStatement	for ( i = 0 ; i < 128 ; i ++ )		10501274	2					
ANR	10501388	ForInit	i = 0 ;	80:29:1937:1940	10501274	0	True				
ANR	10501389	AssignmentExpression	i = 0		10501274	0		=			
ANR	10501390	Identifier	i		10501274	0					
ANR	10501391	PrimaryExpression	0		10501274	1					
ANR	10501392	Condition	i < 128	80:34:1942:1946	10501274	1	True				
ANR	10501393	RelationalExpression	i < 128		10501274	0		<			
ANR	10501394	Identifier	i		10501274	0					
ANR	10501395	PrimaryExpression	128		10501274	1					
ANR	10501396	PostIncDecOperationExpression	i ++	80:41:1949:1951	10501274	2	True				
ANR	10501397	Identifier	i		10501274	0					
ANR	10501398	IncDec	++		10501274	1					
ANR	10501399	CompoundStatement		22:46:656:656	10501274	3					
ANR	10501400	ExpressionStatement	* ( outBuffer ++ ) = * nextToWrite	81:28:1984:2011	10501274	0	True				
ANR	10501401	AssignmentExpression	* ( outBuffer ++ ) = * nextToWrite		10501274	0		=			
ANR	10501402	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501403	UnaryOperator	*		10501274	0					
ANR	10501404	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501405	Identifier	outBuffer		10501274	0					
ANR	10501406	IncDec	++		10501274	1					
ANR	10501407	UnaryOperationExpression	* nextToWrite		10501274	1					
ANR	10501408	UnaryOperator	*		10501274	0					
ANR	10501409	Identifier	nextToWrite		10501274	1					
ANR	10501410	ExpressionStatement	nextToWrite += stride	82:28:2041:2060	10501274	1	True				
ANR	10501411	AssignmentExpression	nextToWrite += stride		10501274	0		+=			
ANR	10501412	Identifier	nextToWrite		10501274	0					
ANR	10501413	Identifier	stride		10501274	1					
ANR	10501414	ExpressionStatement	diffCount -= 128	84:24:2112:2126	10501274	3	True				
ANR	10501415	AssignmentExpression	diffCount -= 128		10501274	0		-=			
ANR	10501416	Identifier	diffCount		10501274	0					
ANR	10501417	PrimaryExpression	128		10501274	1					
ANR	10501418	ElseStatement	else		10501274	0					
ANR	10501419	CompoundStatement		27:27:857:857	10501274	0					
ANR	10501420	ExpressionStatement	totalBytes += diffCount + 1	86:24:2181:2204	10501274	0	True				
ANR	10501421	AssignmentExpression	totalBytes += diffCount + 1		10501274	0		+=			
ANR	10501422	Identifier	totalBytes		10501274	0					
ANR	10501423	AdditiveExpression	diffCount + 1		10501274	1		+			
ANR	10501424	Identifier	diffCount		10501274	0					
ANR	10501425	PrimaryExpression	1		10501274	1					
ANR	10501426	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) ( diffCount - 1 )	87:24:2230:2274	10501274	1	True				
ANR	10501427	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) ( diffCount - 1 )		10501274	0		=			
ANR	10501428	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501429	UnaryOperator	*		10501274	0					
ANR	10501430	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501431	Identifier	outBuffer		10501274	0					
ANR	10501432	IncDec	++		10501274	1					
ANR	10501433	CastExpression	( unsigned char ) ( diffCount - 1 )		10501274	1					
ANR	10501434	CastTarget	unsigned char		10501274	0					
ANR	10501435	AdditiveExpression	diffCount - 1		10501274	1		-			
ANR	10501436	Identifier	diffCount		10501274	0					
ANR	10501437	PrimaryExpression	1		10501274	1					
ANR	10501438	ForStatement	for ( i = 0 ; i < diffCount ; i ++ )		10501274	2					
ANR	10501439	ForInit	i = 0 ;	88:29:2305:2308	10501274	0	True				
ANR	10501440	AssignmentExpression	i = 0		10501274	0		=			
ANR	10501441	Identifier	i		10501274	0					
ANR	10501442	PrimaryExpression	0		10501274	1					
ANR	10501443	Condition	i < diffCount	88:34:2310:2320	10501274	1	True				
ANR	10501444	RelationalExpression	i < diffCount		10501274	0		<			
ANR	10501445	Identifier	i		10501274	0					
ANR	10501446	Identifier	diffCount		10501274	1					
ANR	10501447	PostIncDecOperationExpression	i ++	88:47:2323:2325	10501274	2	True				
ANR	10501448	Identifier	i		10501274	0					
ANR	10501449	IncDec	++		10501274	1					
ANR	10501450	CompoundStatement		30:52:1030:1030	10501274	3					
ANR	10501451	ExpressionStatement	* ( outBuffer ++ ) = * nextToWrite	89:28:2358:2385	10501274	0	True				
ANR	10501452	AssignmentExpression	* ( outBuffer ++ ) = * nextToWrite		10501274	0		=			
ANR	10501453	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501454	UnaryOperator	*		10501274	0					
ANR	10501455	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501456	Identifier	outBuffer		10501274	0					
ANR	10501457	IncDec	++		10501274	1					
ANR	10501458	UnaryOperationExpression	* nextToWrite		10501274	1					
ANR	10501459	UnaryOperator	*		10501274	0					
ANR	10501460	Identifier	nextToWrite		10501274	1					
ANR	10501461	ExpressionStatement	nextToWrite += stride	90:28:2415:2434	10501274	1	True				
ANR	10501462	AssignmentExpression	nextToWrite += stride		10501274	0		+=			
ANR	10501463	Identifier	nextToWrite		10501274	0					
ANR	10501464	Identifier	stride		10501274	1					
ANR	10501465	ExpressionStatement	diffCount = 0	92:24:2486:2497	10501274	3	True				
ANR	10501466	AssignmentExpression	diffCount = 0		10501274	0		=			
ANR	10501467	Identifier	diffCount		10501274	0					
ANR	10501468	PrimaryExpression	0		10501274	1					
ANR	10501469	ExpressionStatement	nextToWrite += repCount * stride	94:16:2537:2565	10501274	1	True				
ANR	10501470	AssignmentExpression	nextToWrite += repCount * stride		10501274	0		+=			
ANR	10501471	Identifier	nextToWrite		10501274	0					
ANR	10501472	MultiplicativeExpression	repCount * stride		10501274	1		*			
ANR	10501473	Identifier	repCount		10501274	0					
ANR	10501474	Identifier	stride		10501274	1					
ANR	10501475	WhileStatement	while ( repCount )		10501274	2					
ANR	10501476	Condition	repCount	95:23:2590:2597	10501274	0	True				
ANR	10501477	Identifier	repCount		10501274	0					
ANR	10501478	CompoundStatement		37:33:1302:1302	10501274	1					
ANR	10501479	ExpressionStatement	totalBytes += 2	96:20:2622:2635	10501274	0	True				
ANR	10501480	AssignmentExpression	totalBytes += 2		10501274	0		+=			
ANR	10501481	Identifier	totalBytes		10501274	0					
ANR	10501482	PrimaryExpression	2		10501274	1					
ANR	10501483	IfStatement	if ( repCount > 128 )		10501274	1					
ANR	10501484	Condition	repCount > 128	97:24:2661:2674	10501274	0	True				
ANR	10501485	RelationalExpression	repCount > 128		10501274	0		>			
ANR	10501486	Identifier	repCount		10501274	0					
ANR	10501487	PrimaryExpression	128		10501274	1					
ANR	10501488	IfStatement	if ( repCount == 129 )		10501274	1					
ANR	10501489	Condition	repCount == 129	98:28:2705:2717	10501274	0	True				
ANR	10501490	EqualityExpression	repCount == 129		10501274	0		==			
ANR	10501491	Identifier	repCount		10501274	0					
ANR	10501492	PrimaryExpression	129		10501274	1					
ANR	10501493	CompoundStatement		40:43:1422:1422	10501274	1					
ANR	10501494	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) 0x81	99:28:2750:2785	10501274	0	True				
ANR	10501495	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) 0x81		10501274	0		=			
ANR	10501496	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501497	UnaryOperator	*		10501274	0					
ANR	10501498	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501499	Identifier	outBuffer		10501274	0					
ANR	10501500	IncDec	++		10501274	1					
ANR	10501501	CastExpression	( unsigned char ) 0x81		10501274	1					
ANR	10501502	CastTarget	unsigned char		10501274	0					
ANR	10501503	PrimaryExpression	0x81		10501274	1					
ANR	10501504	ExpressionStatement	* ( outBuffer ++ ) = pixData	100:28:2815:2837	10501274	1	True				
ANR	10501505	AssignmentExpression	* ( outBuffer ++ ) = pixData		10501274	0		=			
ANR	10501506	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501507	UnaryOperator	*		10501274	0					
ANR	10501508	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501509	Identifier	outBuffer		10501274	0					
ANR	10501510	IncDec	++		10501274	1					
ANR	10501511	Identifier	pixData		10501274	1					
ANR	10501512	ExpressionStatement	repCount = 0	101:28:2867:2877	10501274	2	True				
ANR	10501513	AssignmentExpression	repCount = 0		10501274	0		=			
ANR	10501514	Identifier	repCount		10501274	0					
ANR	10501515	PrimaryExpression	0		10501274	1					
ANR	10501516	ExpressionStatement	diffCount ++	102:28:2907:2918	10501274	3	True				
ANR	10501517	PostIncDecOperationExpression	diffCount ++		10501274	0					
ANR	10501518	Identifier	diffCount		10501274	0					
ANR	10501519	IncDec	++		10501274	1					
ANR	10501520	ExpressionStatement	nextToWrite -= stride	103:28:2948:2967	10501274	4	True				
ANR	10501521	AssignmentExpression	nextToWrite -= stride		10501274	0		-=			
ANR	10501522	Identifier	nextToWrite		10501274	0					
ANR	10501523	Identifier	stride		10501274	1					
ANR	10501524	ElseStatement	else		10501274	0					
ANR	10501525	CompoundStatement		46:31:1702:1702	10501274	0					
ANR	10501526	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) 0x81	105:28:3030:3065	10501274	0	True				
ANR	10501527	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) 0x81		10501274	0		=			
ANR	10501528	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501529	UnaryOperator	*		10501274	0					
ANR	10501530	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501531	Identifier	outBuffer		10501274	0					
ANR	10501532	IncDec	++		10501274	1					
ANR	10501533	CastExpression	( unsigned char ) 0x81		10501274	1					
ANR	10501534	CastTarget	unsigned char		10501274	0					
ANR	10501535	PrimaryExpression	0x81		10501274	1					
ANR	10501536	ExpressionStatement	* ( outBuffer ++ ) = pixData	106:28:3095:3117	10501274	1	True				
ANR	10501537	AssignmentExpression	* ( outBuffer ++ ) = pixData		10501274	0		=			
ANR	10501538	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501539	UnaryOperator	*		10501274	0					
ANR	10501540	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501541	Identifier	outBuffer		10501274	0					
ANR	10501542	IncDec	++		10501274	1					
ANR	10501543	Identifier	pixData		10501274	1					
ANR	10501544	ExpressionStatement	repCount -= 128	107:28:3147:3160	10501274	2	True				
ANR	10501545	AssignmentExpression	repCount -= 128		10501274	0		-=			
ANR	10501546	Identifier	repCount		10501274	0					
ANR	10501547	PrimaryExpression	128		10501274	1					
ANR	10501548	ElseStatement	else		10501274	0					
ANR	10501549	CompoundStatement		51:25:1915:1915	10501274	0					
ANR	10501550	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) ( - ( repCount - 1 ) )	110:24:3239:3285	10501274	0	True				
ANR	10501551	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) ( - ( repCount - 1 ) )		10501274	0		=			
ANR	10501552	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501553	UnaryOperator	*		10501274	0					
ANR	10501554	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501555	Identifier	outBuffer		10501274	0					
ANR	10501556	IncDec	++		10501274	1					
ANR	10501557	CastExpression	( unsigned char ) ( - ( repCount - 1 ) )		10501274	1					
ANR	10501558	CastTarget	unsigned char		10501274	0					
ANR	10501559	UnaryOperationExpression	- ( repCount - 1 )		10501274	1					
ANR	10501560	UnaryOperator	-		10501274	0					
ANR	10501561	AdditiveExpression	repCount - 1		10501274	1		-			
ANR	10501562	Identifier	repCount		10501274	0					
ANR	10501563	PrimaryExpression	1		10501274	1					
ANR	10501564	ExpressionStatement	* ( outBuffer ++ ) = pixData	111:24:3311:3333	10501274	1	True				
ANR	10501565	AssignmentExpression	* ( outBuffer ++ ) = pixData		10501274	0		=			
ANR	10501566	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501567	UnaryOperator	*		10501274	0					
ANR	10501568	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501569	Identifier	outBuffer		10501274	0					
ANR	10501570	IncDec	++		10501274	1					
ANR	10501571	Identifier	pixData		10501274	1					
ANR	10501572	ExpressionStatement	repCount = 0	112:24:3359:3369	10501274	2	True				
ANR	10501573	AssignmentExpression	repCount = 0		10501274	0		=			
ANR	10501574	Identifier	repCount		10501274	0					
ANR	10501575	PrimaryExpression	0		10501274	1					
ANR	10501576	ExpressionStatement	repCount = 1	115:16:3427:3437	10501274	3	True				
ANR	10501577	AssignmentExpression	repCount = 1		10501274	0		=			
ANR	10501578	Identifier	repCount		10501274	0					
ANR	10501579	PrimaryExpression	1		10501274	1					
ANR	10501580	ElseStatement	else		10501274	0					
ANR	10501581	CompoundStatement		58:19:2160:2160	10501274	0					
ANR	10501582	ExpressionStatement	diffCount += repCount	117:16:3476:3495	10501274	0	True				
ANR	10501583	AssignmentExpression	diffCount += repCount		10501274	0		+=			
ANR	10501584	Identifier	diffCount		10501274	0					
ANR	10501585	Identifier	repCount		10501274	1					
ANR	10501586	ExpressionStatement	repCount = 1	118:16:3513:3523	10501274	1	True				
ANR	10501587	AssignmentExpression	repCount = 1		10501274	0		=			
ANR	10501588	Identifier	repCount		10501274	0					
ANR	10501589	PrimaryExpression	1		10501274	1					
ANR	10501590	IfStatement	if ( repCount < 3 && ( repCount < 2 || diffCount > 0 ) )		10501274	9					
ANR	10501591	Condition	repCount < 3 && ( repCount < 2 || diffCount > 0 )	122:8:3563:3605	10501274	0	True				
ANR	10501592	AndExpression	repCount < 3 && ( repCount < 2 || diffCount > 0 )		10501274	0		&&			
ANR	10501593	RelationalExpression	repCount < 3		10501274	0		<			
ANR	10501594	Identifier	repCount		10501274	0					
ANR	10501595	PrimaryExpression	3		10501274	1					
ANR	10501596	OrExpression	repCount < 2 || diffCount > 0		10501274	1		||			
ANR	10501597	RelationalExpression	repCount < 2		10501274	0		<			
ANR	10501598	Identifier	repCount		10501274	0					
ANR	10501599	PrimaryExpression	2		10501274	1					
ANR	10501600	RelationalExpression	diffCount > 0		10501274	1		>			
ANR	10501601	Identifier	diffCount		10501274	0					
ANR	10501602	PrimaryExpression	0		10501274	1					
ANR	10501603	CompoundStatement		64:53:2310:2310	10501274	1					
ANR	10501604	ExpressionStatement	diffCount += repCount	123:8:3618:3637	10501274	0	True				
ANR	10501605	AssignmentExpression	diffCount += repCount		10501274	0		+=			
ANR	10501606	Identifier	diffCount		10501274	0					
ANR	10501607	Identifier	repCount		10501274	1					
ANR	10501608	ExpressionStatement	repCount = 0	124:8:3647:3657	10501274	1	True				
ANR	10501609	AssignmentExpression	repCount = 0		10501274	0		=			
ANR	10501610	Identifier	repCount		10501274	0					
ANR	10501611	PrimaryExpression	0		10501274	1					
ANR	10501612	WhileStatement	while ( diffCount )		10501274	10					
ANR	10501613	Condition	diffCount	126:11:3676:3684	10501274	0	True				
ANR	10501614	Identifier	diffCount		10501274	0					
ANR	10501615	IfStatement	if ( diffCount > 128 )		10501274	1					
ANR	10501616	Condition	diffCount > 128	127:12:3699:3713	10501274	0	True				
ANR	10501617	RelationalExpression	diffCount > 128		10501274	0		>			
ANR	10501618	Identifier	diffCount		10501274	0					
ANR	10501619	PrimaryExpression	128		10501274	1					
ANR	10501620	CompoundStatement		69:29:2418:2418	10501274	1					
ANR	10501621	ExpressionStatement	totalBytes += 129	128:12:3730:3745	10501274	0	True				
ANR	10501622	AssignmentExpression	totalBytes += 129		10501274	0		+=			
ANR	10501623	Identifier	totalBytes		10501274	0					
ANR	10501624	PrimaryExpression	129		10501274	1					
ANR	10501625	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) 0x7f	129:12:3759:3794	10501274	1	True				
ANR	10501626	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) 0x7f		10501274	0		=			
ANR	10501627	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501628	UnaryOperator	*		10501274	0					
ANR	10501629	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501630	Identifier	outBuffer		10501274	0					
ANR	10501631	IncDec	++		10501274	1					
ANR	10501632	CastExpression	( unsigned char ) 0x7f		10501274	1					
ANR	10501633	CastTarget	unsigned char		10501274	0					
ANR	10501634	PrimaryExpression	0x7f		10501274	1					
ANR	10501635	ForStatement	for ( i = 0 ; i < 128 ; i ++ )		10501274	2					
ANR	10501636	ForInit	i = 0 ;	130:17:3813:3816	10501274	0	True				
ANR	10501637	AssignmentExpression	i = 0		10501274	0		=			
ANR	10501638	Identifier	i		10501274	0					
ANR	10501639	PrimaryExpression	0		10501274	1					
ANR	10501640	Condition	i < 128	130:22:3818:3822	10501274	1	True				
ANR	10501641	RelationalExpression	i < 128		10501274	0		<			
ANR	10501642	Identifier	i		10501274	0					
ANR	10501643	PrimaryExpression	128		10501274	1					
ANR	10501644	PostIncDecOperationExpression	i ++	130:29:3825:3827	10501274	2	True				
ANR	10501645	Identifier	i		10501274	0					
ANR	10501646	IncDec	++		10501274	1					
ANR	10501647	CompoundStatement		72:34:2532:2532	10501274	3					
ANR	10501648	ExpressionStatement	* ( outBuffer ++ ) = * nextToWrite	131:16:3848:3875	10501274	0	True				
ANR	10501649	AssignmentExpression	* ( outBuffer ++ ) = * nextToWrite		10501274	0		=			
ANR	10501650	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501651	UnaryOperator	*		10501274	0					
ANR	10501652	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501653	Identifier	outBuffer		10501274	0					
ANR	10501654	IncDec	++		10501274	1					
ANR	10501655	UnaryOperationExpression	* nextToWrite		10501274	1					
ANR	10501656	UnaryOperator	*		10501274	0					
ANR	10501657	Identifier	nextToWrite		10501274	1					
ANR	10501658	ExpressionStatement	nextToWrite += stride	132:16:3893:3912	10501274	1	True				
ANR	10501659	AssignmentExpression	nextToWrite += stride		10501274	0		+=			
ANR	10501660	Identifier	nextToWrite		10501274	0					
ANR	10501661	Identifier	stride		10501274	1					
ANR	10501662	ExpressionStatement	diffCount -= 128	134:12:3940:3954	10501274	3	True				
ANR	10501663	AssignmentExpression	diffCount -= 128		10501274	0		-=			
ANR	10501664	Identifier	diffCount		10501274	0					
ANR	10501665	PrimaryExpression	128		10501274	1					
ANR	10501666	ElseStatement	else		10501274	0					
ANR	10501667	CompoundStatement		77:15:2673:2673	10501274	0					
ANR	10501668	ExpressionStatement	totalBytes += diffCount + 1	136:12:3985:4008	10501274	0	True				
ANR	10501669	AssignmentExpression	totalBytes += diffCount + 1		10501274	0		+=			
ANR	10501670	Identifier	totalBytes		10501274	0					
ANR	10501671	AdditiveExpression	diffCount + 1		10501274	1		+			
ANR	10501672	Identifier	diffCount		10501274	0					
ANR	10501673	PrimaryExpression	1		10501274	1					
ANR	10501674	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) ( diffCount - 1 )	137:12:4022:4066	10501274	1	True				
ANR	10501675	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) ( diffCount - 1 )		10501274	0		=			
ANR	10501676	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501677	UnaryOperator	*		10501274	0					
ANR	10501678	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501679	Identifier	outBuffer		10501274	0					
ANR	10501680	IncDec	++		10501274	1					
ANR	10501681	CastExpression	( unsigned char ) ( diffCount - 1 )		10501274	1					
ANR	10501682	CastTarget	unsigned char		10501274	0					
ANR	10501683	AdditiveExpression	diffCount - 1		10501274	1		-			
ANR	10501684	Identifier	diffCount		10501274	0					
ANR	10501685	PrimaryExpression	1		10501274	1					
ANR	10501686	ForStatement	for ( i = 0 ; i < diffCount ; i ++ )		10501274	2					
ANR	10501687	ForInit	i = 0 ;	138:17:4085:4088	10501274	0	True				
ANR	10501688	AssignmentExpression	i = 0		10501274	0		=			
ANR	10501689	Identifier	i		10501274	0					
ANR	10501690	PrimaryExpression	0		10501274	1					
ANR	10501691	Condition	i < diffCount	138:22:4090:4100	10501274	1	True				
ANR	10501692	RelationalExpression	i < diffCount		10501274	0		<			
ANR	10501693	Identifier	i		10501274	0					
ANR	10501694	Identifier	diffCount		10501274	1					
ANR	10501695	PostIncDecOperationExpression	i ++	138:35:4103:4105	10501274	2	True				
ANR	10501696	Identifier	i		10501274	0					
ANR	10501697	IncDec	++		10501274	1					
ANR	10501698	CompoundStatement		80:40:2810:2810	10501274	3					
ANR	10501699	ExpressionStatement	* ( outBuffer ++ ) = * nextToWrite	139:16:4126:4153	10501274	0	True				
ANR	10501700	AssignmentExpression	* ( outBuffer ++ ) = * nextToWrite		10501274	0		=			
ANR	10501701	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501702	UnaryOperator	*		10501274	0					
ANR	10501703	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501704	Identifier	outBuffer		10501274	0					
ANR	10501705	IncDec	++		10501274	1					
ANR	10501706	UnaryOperationExpression	* nextToWrite		10501274	1					
ANR	10501707	UnaryOperator	*		10501274	0					
ANR	10501708	Identifier	nextToWrite		10501274	1					
ANR	10501709	ExpressionStatement	nextToWrite += stride	140:16:4171:4190	10501274	1	True				
ANR	10501710	AssignmentExpression	nextToWrite += stride		10501274	0		+=			
ANR	10501711	Identifier	nextToWrite		10501274	0					
ANR	10501712	Identifier	stride		10501274	1					
ANR	10501713	ExpressionStatement	diffCount = 0	142:12:4218:4229	10501274	3	True				
ANR	10501714	AssignmentExpression	diffCount = 0		10501274	0		=			
ANR	10501715	Identifier	diffCount		10501274	0					
ANR	10501716	PrimaryExpression	0		10501274	1					
ANR	10501717	WhileStatement	while ( repCount )		10501274	11					
ANR	10501718	Condition	repCount	144:11:4252:4259	10501274	0	True				
ANR	10501719	Identifier	repCount		10501274	0					
ANR	10501720	CompoundStatement		86:21:2964:2964	10501274	1					
ANR	10501721	ExpressionStatement	totalBytes += 2	145:8:4272:4285	10501274	0	True				
ANR	10501722	AssignmentExpression	totalBytes += 2		10501274	0		+=			
ANR	10501723	Identifier	totalBytes		10501274	0					
ANR	10501724	PrimaryExpression	2		10501274	1					
ANR	10501725	IfStatement	if ( repCount > 128 )		10501274	1					
ANR	10501726	Condition	repCount > 128	146:12:4299:4312	10501274	0	True				
ANR	10501727	RelationalExpression	repCount > 128		10501274	0		>			
ANR	10501728	Identifier	repCount		10501274	0					
ANR	10501729	PrimaryExpression	128		10501274	1					
ANR	10501730	CompoundStatement		88:28:3017:3017	10501274	1					
ANR	10501731	IfStatement	if ( repCount == 129 )		10501274	0					
ANR	10501732	Condition	repCount == 129	147:16:4333:4345	10501274	0	True				
ANR	10501733	EqualityExpression	repCount == 129		10501274	0		==			
ANR	10501734	Identifier	repCount		10501274	0					
ANR	10501735	PrimaryExpression	129		10501274	1					
ANR	10501736	CompoundStatement		89:31:3050:3050	10501274	1					
ANR	10501737	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) 0x82	148:16:4366:4401	10501274	0	True				
ANR	10501738	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) 0x82		10501274	0		=			
ANR	10501739	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501740	UnaryOperator	*		10501274	0					
ANR	10501741	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501742	Identifier	outBuffer		10501274	0					
ANR	10501743	IncDec	++		10501274	1					
ANR	10501744	CastExpression	( unsigned char ) 0x82		10501274	1					
ANR	10501745	CastTarget	unsigned char		10501274	0					
ANR	10501746	PrimaryExpression	0x82		10501274	1					
ANR	10501747	ExpressionStatement	* ( outBuffer ++ ) = pixData	149:16:4419:4441	10501274	1	True				
ANR	10501748	AssignmentExpression	* ( outBuffer ++ ) = pixData		10501274	0		=			
ANR	10501749	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501750	UnaryOperator	*		10501274	0					
ANR	10501751	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501752	Identifier	outBuffer		10501274	0					
ANR	10501753	IncDec	++		10501274	1					
ANR	10501754	Identifier	pixData		10501274	1					
ANR	10501755	ExpressionStatement	repCount -= 127	150:16:4459:4472	10501274	2	True				
ANR	10501756	AssignmentExpression	repCount -= 127		10501274	0		-=			
ANR	10501757	Identifier	repCount		10501274	0					
ANR	10501758	PrimaryExpression	127		10501274	1					
ANR	10501759	ElseStatement	else		10501274	0					
ANR	10501760	CompoundStatement		93:19:3195:3195	10501274	0					
ANR	10501761	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) 0x81	152:16:4511:4546	10501274	0	True				
ANR	10501762	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) 0x81		10501274	0		=			
ANR	10501763	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501764	UnaryOperator	*		10501274	0					
ANR	10501765	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501766	Identifier	outBuffer		10501274	0					
ANR	10501767	IncDec	++		10501274	1					
ANR	10501768	CastExpression	( unsigned char ) 0x81		10501274	1					
ANR	10501769	CastTarget	unsigned char		10501274	0					
ANR	10501770	PrimaryExpression	0x81		10501274	1					
ANR	10501771	ExpressionStatement	* ( outBuffer ++ ) = pixData	153:16:4564:4586	10501274	1	True				
ANR	10501772	AssignmentExpression	* ( outBuffer ++ ) = pixData		10501274	0		=			
ANR	10501773	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501774	UnaryOperator	*		10501274	0					
ANR	10501775	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501776	Identifier	outBuffer		10501274	0					
ANR	10501777	IncDec	++		10501274	1					
ANR	10501778	Identifier	pixData		10501274	1					
ANR	10501779	ExpressionStatement	repCount -= 128	154:16:4604:4617	10501274	2	True				
ANR	10501780	AssignmentExpression	repCount -= 128		10501274	0		-=			
ANR	10501781	Identifier	repCount		10501274	0					
ANR	10501782	PrimaryExpression	128		10501274	1					
ANR	10501783	ElseStatement	else		10501274	0					
ANR	10501784	CompoundStatement		98:15:3350:3350	10501274	0					
ANR	10501785	ExpressionStatement	* ( outBuffer ++ ) = ( unsigned char ) ( - ( repCount - 1 ) )	157:12:4662:4708	10501274	0	True				
ANR	10501786	AssignmentExpression	* ( outBuffer ++ ) = ( unsigned char ) ( - ( repCount - 1 ) )		10501274	0		=			
ANR	10501787	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501788	UnaryOperator	*		10501274	0					
ANR	10501789	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501790	Identifier	outBuffer		10501274	0					
ANR	10501791	IncDec	++		10501274	1					
ANR	10501792	CastExpression	( unsigned char ) ( - ( repCount - 1 ) )		10501274	1					
ANR	10501793	CastTarget	unsigned char		10501274	0					
ANR	10501794	UnaryOperationExpression	- ( repCount - 1 )		10501274	1					
ANR	10501795	UnaryOperator	-		10501274	0					
ANR	10501796	AdditiveExpression	repCount - 1		10501274	1		-			
ANR	10501797	Identifier	repCount		10501274	0					
ANR	10501798	PrimaryExpression	1		10501274	1					
ANR	10501799	ExpressionStatement	* ( outBuffer ++ ) = pixData	158:12:4722:4744	10501274	1	True				
ANR	10501800	AssignmentExpression	* ( outBuffer ++ ) = pixData		10501274	0		=			
ANR	10501801	UnaryOperationExpression	* ( outBuffer ++ )		10501274	0					
ANR	10501802	UnaryOperator	*		10501274	0					
ANR	10501803	PostIncDecOperationExpression	outBuffer ++		10501274	1					
ANR	10501804	Identifier	outBuffer		10501274	0					
ANR	10501805	IncDec	++		10501274	1					
ANR	10501806	Identifier	pixData		10501274	1					
ANR	10501807	ExpressionStatement	repCount = 0	159:12:4758:4768	10501274	2	True				
ANR	10501808	AssignmentExpression	repCount = 0		10501274	0		=			
ANR	10501809	Identifier	repCount		10501274	0					
ANR	10501810	PrimaryExpression	0		10501274	1					
ANR	10501811	ReturnStatement	return totalBytes ;	162:4:4790:4807	10501274	12	True				
ANR	10501812	Identifier	totalBytes		10501274	0					
ANR	10501813	ReturnType	int		10501274	1					
ANR	10501814	Identifier	packBits		10501274	2					
ANR	10501815	ParameterList	"unsigned char * buffer , unsigned char * outBuffer , int length , int stride"		10501274	3					
ANR	10501816	Parameter	unsigned char * buffer	59:13:1224:1244	10501274	0	True				
ANR	10501817	ParameterType	unsigned char *		10501274	0					
ANR	10501818	Identifier	buffer		10501274	1					
ANR	10501819	Parameter	unsigned char * outBuffer	59:36:1247:1270	10501274	1	True				
ANR	10501820	ParameterType	unsigned char *		10501274	0					
ANR	10501821	Identifier	outBuffer		10501274	1					
ANR	10501822	Parameter	int length	59:62:1273:1282	10501274	2	True				
ANR	10501823	ParameterType	int		10501274	0					
ANR	10501824	Identifier	length		10501274	1					
ANR	10501825	Parameter	int stride	59:74:1285:1294	10501274	3	True				
ANR	10501826	ParameterType	int		10501274	0					
ANR	10501827	Identifier	stride		10501274	1					
ANR	10501828	CFGEntryNode	ENTRY		10501274		True				
ANR	10501829	CFGExitNode	EXIT		10501274		True				
ANR	10501830	Symbol	* buffer		10501274						
ANR	10501831	Symbol	outBuffer		10501274						
ANR	10501832	Symbol	length		10501274						
ANR	10501833	Symbol	i		10501274						
ANR	10501834	Symbol	pixData		10501274						
ANR	10501835	Symbol	stride		10501274						
ANR	10501836	Symbol	repCount		10501274						
ANR	10501837	Symbol	* ( outBuffer ++ )		10501274						
ANR	10501838	Symbol	diffCount		10501274						
ANR	10501839	Symbol	* nextToWrite		10501274						
ANR	10501840	Symbol	totalBytes		10501274						
ANR	10501841	Symbol	buffer		10501274						
ANR	10501842	Symbol	nextToWrite		10501274						
ANR	10501843	Function	file_length	165:0:4812:4909							
ANR	10501844	FunctionDef	file_length (int file)		10501843	0					
ANR	10501845	CompoundStatement		167:0:4847:4909	10501843	0					
ANR	10501846	IdentifierDeclStatement	struct stat st ;	168:2:4851:4865	10501843	0	True				
ANR	10501847	IdentifierDecl	st		10501843	0					
ANR	10501848	IdentifierDeclType	struct stat		10501843	0					
ANR	10501849	Identifier	st		10501843	1					
ANR	10501850	ExpressionStatement	"fstat ( file , & st )"	170:2:4870:4886	10501843	1	True				
ANR	10501851	CallExpression	"fstat ( file , & st )"		10501843	0					
ANR	10501852	Callee	fstat		10501843	0					
ANR	10501853	Identifier	fstat		10501843	0					
ANR	10501854	ArgumentList	file		10501843	1					
ANR	10501855	Argument	file		10501843	0					
ANR	10501856	Identifier	file		10501843	0					
ANR	10501857	Argument	& st		10501843	1					
ANR	10501858	UnaryOperationExpression	& st		10501843	0					
ANR	10501859	UnaryOperator	&		10501843	0					
ANR	10501860	Identifier	st		10501843	1					
ANR	10501861	ReturnStatement	return st . st_size ;	171:2:4890:4907	10501843	2	True				
ANR	10501862	MemberAccess	st . st_size		10501843	0					
ANR	10501863	Identifier	st		10501843	0					
ANR	10501864	Identifier	st_size		10501843	1					
ANR	10501865	ReturnType	static off_t		10501843	1					
ANR	10501866	Identifier	file_length		10501843	2					
ANR	10501867	ParameterList	int file		10501843	3					
ANR	10501868	Parameter	int file	166:12:4837:4844	10501843	0	True				
ANR	10501869	ParameterType	int		10501843	0					
ANR	10501870	Identifier	file		10501843	1					
ANR	10501871	CFGEntryNode	ENTRY		10501843		True				
ANR	10501872	CFGExitNode	EXIT		10501843		True				
ANR	10501873	Symbol	st		10501843						
ANR	10501874	Symbol	file		10501843						
ANR	10501875	Symbol	st . st_size		10501843						
ANR	10501876	Symbol	& st		10501843						
ANR	10501877	Function	image_get_rgb_scan_line	174:0:4912:5821							
ANR	10501878	FunctionDef	"image_get_rgb_scan_line (Image * image , uchar * buf)"		10501877	0					
ANR	10501879	CompoundStatement		176:0:4967:5821	10501877	0					
ANR	10501880	IdentifierDeclStatement	uchar * image_buf ;	177:2:4971:4987	10501877	0	True				
ANR	10501881	IdentifierDecl	* image_buf		10501877	0					
ANR	10501882	IdentifierDeclType	uchar *		10501877	0					
ANR	10501883	Identifier	image_buf		10501877	1					
ANR	10501884	IdentifierDeclStatement	int width = image -> width ;	178:2:4991:5015	10501877	1	True				
ANR	10501885	IdentifierDecl	width = image -> width		10501877	0					
ANR	10501886	IdentifierDeclType	int		10501877	0					
ANR	10501887	Identifier	width		10501877	1					
ANR	10501888	AssignmentExpression	width = image -> width		10501877	2		=			
ANR	10501889	Identifier	width		10501877	0					
ANR	10501890	PtrMemberAccess	image -> width		10501877	1					
ANR	10501891	Identifier	image		10501877	0					
ANR	10501892	Identifier	width		10501877	1					
ANR	10501893	IdentifierDeclStatement	int code ;	179:2:5019:5027	10501877	2	True				
ANR	10501894	IdentifierDecl	code		10501877	0					
ANR	10501895	IdentifierDeclType	int		10501877	0					
ANR	10501896	Identifier	code		10501877	1					
ANR	10501897	IdentifierDeclStatement	int x ;	180:2:5031:5036	10501877	3	True				
ANR	10501898	IdentifierDecl	x		10501877	0					
ANR	10501899	IdentifierDeclType	int		10501877	0					
ANR	10501900	Identifier	x		10501877	1					
ANR	10501901	IfStatement	if ( image -> n_chan == 3 && image -> bpp == 8 )		10501877	4					
ANR	10501902	Condition	image -> n_chan == 3 && image -> bpp == 8	182:6:5045:5081	10501877	0	True				
ANR	10501903	AndExpression	image -> n_chan == 3 && image -> bpp == 8		10501877	0		&&			
ANR	10501904	EqualityExpression	image -> n_chan == 3		10501877	0		==			
ANR	10501905	PtrMemberAccess	image -> n_chan		10501877	0					
ANR	10501906	Identifier	image		10501877	0					
ANR	10501907	Identifier	n_chan		10501877	1					
ANR	10501908	PrimaryExpression	3		10501877	1					
ANR	10501909	EqualityExpression	image -> bpp == 8		10501877	1		==			
ANR	10501910	PtrMemberAccess	image -> bpp		10501877	0					
ANR	10501911	Identifier	image		10501877	0					
ANR	10501912	Identifier	bpp		10501877	1					
ANR	10501913	PrimaryExpression	8		10501877	1					
ANR	10501914	ReturnStatement	"return image -> get_scan_line ( image , buf ) ;"	183:4:5088:5128	10501877	1	True				
ANR	10501915	CallExpression	"image -> get_scan_line ( image , buf )"		10501877	0					
ANR	10501916	Callee	image -> get_scan_line		10501877	0					
ANR	10501917	PtrMemberAccess	image -> get_scan_line		10501877	0					
ANR	10501918	Identifier	image		10501877	0					
ANR	10501919	Identifier	get_scan_line		10501877	1					
ANR	10501920	ArgumentList	image		10501877	1					
ANR	10501921	Argument	image		10501877	0					
ANR	10501922	Identifier	image		10501877	0					
ANR	10501923	Argument	buf		10501877	1					
ANR	10501924	Identifier	buf		10501877	0					
ANR	10501925	ExpressionStatement	image_buf = malloc ( image -> raster )	185:2:5133:5167	10501877	5	True				
ANR	10501926	AssignmentExpression	image_buf = malloc ( image -> raster )		10501877	0		=			
ANR	10501927	Identifier	image_buf		10501877	0					
ANR	10501928	CallExpression	malloc ( image -> raster )		10501877	1					
ANR	10501929	Callee	malloc		10501877	0					
ANR	10501930	Identifier	malloc		10501877	0					
ANR	10501931	ArgumentList	image -> raster		10501877	1					
ANR	10501932	Argument	image -> raster		10501877	0					
ANR	10501933	PtrMemberAccess	image -> raster		10501877	0					
ANR	10501934	Identifier	image		10501877	0					
ANR	10501935	Identifier	raster		10501877	1					
ANR	10501936	ExpressionStatement	"code = image -> get_scan_line ( image , image_buf )"	186:2:5171:5217	10501877	6	True				
ANR	10501937	AssignmentExpression	"code = image -> get_scan_line ( image , image_buf )"		10501877	0		=			
ANR	10501938	Identifier	code		10501877	0					
ANR	10501939	CallExpression	"image -> get_scan_line ( image , image_buf )"		10501877	1					
ANR	10501940	Callee	image -> get_scan_line		10501877	0					
ANR	10501941	PtrMemberAccess	image -> get_scan_line		10501877	0					
ANR	10501942	Identifier	image		10501877	0					
ANR	10501943	Identifier	get_scan_line		10501877	1					
ANR	10501944	ArgumentList	image		10501877	1					
ANR	10501945	Argument	image		10501877	0					
ANR	10501946	Identifier	image		10501877	0					
ANR	10501947	Argument	image_buf		10501877	1					
ANR	10501948	Identifier	image_buf		10501877	0					
ANR	10501949	IfStatement	if ( code < 0 )		10501877	7					
ANR	10501950	Condition	code < 0	187:6:5225:5232	10501877	0	True				
ANR	10501951	RelationalExpression	code < 0		10501877	0		<			
ANR	10501952	Identifier	code		10501877	0					
ANR	10501953	PrimaryExpression	0		10501877	1					
ANR	10501954	CompoundStatement		13:4:271:271	10501877	1					
ANR	10501955	ElseStatement	else		10501877	0					
ANR	10501956	IfStatement	if ( image -> n_chan == 1 && image -> bpp == 8 )		10501877	0					
ANR	10501957	Condition	image -> n_chan == 1 && image -> bpp == 8	191:11:5275:5311	10501877	0	True				
ANR	10501958	AndExpression	image -> n_chan == 1 && image -> bpp == 8		10501877	0		&&			
ANR	10501959	EqualityExpression	image -> n_chan == 1		10501877	0		==			
ANR	10501960	PtrMemberAccess	image -> n_chan		10501877	0					
ANR	10501961	Identifier	image		10501877	0					
ANR	10501962	Identifier	n_chan		10501877	1					
ANR	10501963	PrimaryExpression	1		10501877	1					
ANR	10501964	EqualityExpression	image -> bpp == 8		10501877	1		==			
ANR	10501965	PtrMemberAccess	image -> bpp		10501877	0					
ANR	10501966	Identifier	image		10501877	0					
ANR	10501967	Identifier	bpp		10501877	1					
ANR	10501968	PrimaryExpression	8		10501877	1					
ANR	10501969	CompoundStatement		17:4:350:350	10501877	1					
ANR	10501970	ForStatement	for ( x = 0 ; x < width ; x ++ )		10501877	0					
ANR	10501971	ForInit	x = 0 ;	193:11:5331:5336	10501877	0	True				
ANR	10501972	AssignmentExpression	x = 0		10501877	0		=			
ANR	10501973	Identifier	x		10501877	0					
ANR	10501974	PrimaryExpression	0		10501877	1					
ANR	10501975	Condition	x < width	193:18:5338:5346	10501877	1	True				
ANR	10501976	RelationalExpression	x < width		10501877	0		<			
ANR	10501977	Identifier	x		10501877	0					
ANR	10501978	Identifier	width		10501877	1					
ANR	10501979	PostIncDecOperationExpression	x ++	193:29:5349:5351	10501877	2	True				
ANR	10501980	Identifier	x		10501877	0					
ANR	10501981	IncDec	++		10501877	1					
ANR	10501982	CompoundStatement		20:10:406:428	10501877	3					
ANR	10501983	IdentifierDeclStatement	uchar g = image_buf [ x ] ;	195:10:5374:5396	10501877	0	True				
ANR	10501984	IdentifierDecl	g = image_buf [ x ]		10501877	0					
ANR	10501985	IdentifierDeclType	uchar		10501877	0					
ANR	10501986	Identifier	g		10501877	1					
ANR	10501987	AssignmentExpression	g = image_buf [ x ]		10501877	2		=			
ANR	10501988	Identifier	g		10501877	0					
ANR	10501989	ArrayIndexing	image_buf [ x ]		10501877	1					
ANR	10501990	Identifier	image_buf		10501877	0					
ANR	10501991	Identifier	x		10501877	1					
ANR	10501992	ExpressionStatement	buf [ x * 3 ] = g	196:10:5408:5422	10501877	1	True				
ANR	10501993	AssignmentExpression	buf [ x * 3 ] = g		10501877	0		=			
ANR	10501994	ArrayIndexing	buf [ x * 3 ]		10501877	0					
ANR	10501995	Identifier	buf		10501877	0					
ANR	10501996	MultiplicativeExpression	x * 3		10501877	1		*			
ANR	10501997	Identifier	x		10501877	0					
ANR	10501998	PrimaryExpression	3		10501877	1					
ANR	10501999	Identifier	g		10501877	1					
ANR	10502000	ExpressionStatement	buf [ x * 3 + 1 ] = g	197:10:5434:5452	10501877	2	True				
ANR	10502001	AssignmentExpression	buf [ x * 3 + 1 ] = g		10501877	0		=			
ANR	10502002	ArrayIndexing	buf [ x * 3 + 1 ]		10501877	0					
ANR	10502003	Identifier	buf		10501877	0					
ANR	10502004	AdditiveExpression	x * 3 + 1		10501877	1		+			
ANR	10502005	MultiplicativeExpression	x * 3		10501877	0		*			
ANR	10502006	Identifier	x		10501877	0					
ANR	10502007	PrimaryExpression	3		10501877	1					
ANR	10502008	PrimaryExpression	1		10501877	1					
ANR	10502009	Identifier	g		10501877	1					
ANR	10502010	ExpressionStatement	buf [ x * 3 + 2 ] = g	198:10:5464:5482	10501877	3	True				
ANR	10502011	AssignmentExpression	buf [ x * 3 + 2 ] = g		10501877	0		=			
ANR	10502012	ArrayIndexing	buf [ x * 3 + 2 ]		10501877	0					
ANR	10502013	Identifier	buf		10501877	0					
ANR	10502014	AdditiveExpression	x * 3 + 2		10501877	1		+			
ANR	10502015	MultiplicativeExpression	x * 3		10501877	0		*			
ANR	10502016	Identifier	x		10501877	0					
ANR	10502017	PrimaryExpression	3		10501877	1					
ANR	10502018	PrimaryExpression	2		10501877	1					
ANR	10502019	Identifier	g		10501877	1					
ANR	10502020	ElseStatement	else		10501877	0					
ANR	10502021	IfStatement	if ( image -> n_chan == 1 && image -> bpp == 1 )		10501877	0					
ANR	10502022	Condition	image -> n_chan == 1 && image -> bpp == 1	201:11:5511:5547	10501877	0	True				
ANR	10502023	AndExpression	image -> n_chan == 1 && image -> bpp == 1		10501877	0		&&			
ANR	10502024	EqualityExpression	image -> n_chan == 1		10501877	0		==			
ANR	10502025	PtrMemberAccess	image -> n_chan		10501877	0					
ANR	10502026	Identifier	image		10501877	0					
ANR	10502027	Identifier	n_chan		10501877	1					
ANR	10502028	PrimaryExpression	1		10501877	1					
ANR	10502029	EqualityExpression	image -> bpp == 1		10501877	1		==			
ANR	10502030	PtrMemberAccess	image -> bpp		10501877	0					
ANR	10502031	Identifier	image		10501877	0					
ANR	10502032	Identifier	bpp		10501877	1					
ANR	10502033	PrimaryExpression	1		10501877	1					
ANR	10502034	CompoundStatement		27:4:586:586	10501877	1					
ANR	10502035	ForStatement	for ( x = 0 ; x < width ; x ++ )		10501877	0					
ANR	10502036	ForInit	x = 0 ;	203:11:5567:5572	10501877	0	True				
ANR	10502037	AssignmentExpression	x = 0		10501877	0		=			
ANR	10502038	Identifier	x		10501877	0					
ANR	10502039	PrimaryExpression	0		10501877	1					
ANR	10502040	Condition	x < width	203:18:5574:5582	10501877	1	True				
ANR	10502041	RelationalExpression	x < width		10501877	0		<			
ANR	10502042	Identifier	x		10501877	0					
ANR	10502043	Identifier	width		10501877	1					
ANR	10502044	PostIncDecOperationExpression	x ++	203:29:5585:5587	10501877	2	True				
ANR	10502045	Identifier	x		10501877	0					
ANR	10502046	IncDec	++		10501877	1					
ANR	10502047	CompoundStatement		30:10:642:692	10501877	3					
ANR	10502048	IdentifierDeclStatement	uchar g = - ! ( image_buf [ x >> 3 ] & ( 128 >> ( x & 7 ) ) ) ;	205:10:5610:5660	10501877	0	True				
ANR	10502049	IdentifierDecl	g = - ! ( image_buf [ x >> 3 ] & ( 128 >> ( x & 7 ) ) )		10501877	0					
ANR	10502050	IdentifierDeclType	uchar		10501877	0					
ANR	10502051	Identifier	g		10501877	1					
ANR	10502052	AssignmentExpression	g = - ! ( image_buf [ x >> 3 ] & ( 128 >> ( x & 7 ) ) )		10501877	2		=			
ANR	10502053	Identifier	g		10501877	0					
ANR	10502054	UnaryOperationExpression	- ! ( image_buf [ x >> 3 ] & ( 128 >> ( x & 7 ) ) )		10501877	1					
ANR	10502055	UnaryOperator	-		10501877	0					
ANR	10502056	UnaryOperationExpression	! ( image_buf [ x >> 3 ] & ( 128 >> ( x & 7 ) ) )		10501877	1					
ANR	10502057	UnaryOperator	!		10501877	0					
ANR	10502058	BitAndExpression	image_buf [ x >> 3 ] & ( 128 >> ( x & 7 ) )		10501877	1		&			
ANR	10502059	ArrayIndexing	image_buf [ x >> 3 ]		10501877	0					
ANR	10502060	Identifier	image_buf		10501877	0					
ANR	10502061	ShiftExpression	x >> 3		10501877	1		>>			
ANR	10502062	Identifier	x		10501877	0					
ANR	10502063	PrimaryExpression	3		10501877	1					
ANR	10502064	ShiftExpression	128 >> ( x & 7 )		10501877	1		>>			
ANR	10502065	PrimaryExpression	128		10501877	0					
ANR	10502066	BitAndExpression	x & 7		10501877	1		&			
ANR	10502067	Identifier	x		10501877	0					
ANR	10502068	PrimaryExpression	7		10501877	1					
ANR	10502069	ExpressionStatement	buf [ x * 3 ] = g	206:10:5672:5686	10501877	1	True				
ANR	10502070	AssignmentExpression	buf [ x * 3 ] = g		10501877	0		=			
ANR	10502071	ArrayIndexing	buf [ x * 3 ]		10501877	0					
ANR	10502072	Identifier	buf		10501877	0					
ANR	10502073	MultiplicativeExpression	x * 3		10501877	1		*			
ANR	10502074	Identifier	x		10501877	0					
ANR	10502075	PrimaryExpression	3		10501877	1					
ANR	10502076	Identifier	g		10501877	1					
ANR	10502077	ExpressionStatement	buf [ x * 3 + 1 ] = g	207:10:5698:5716	10501877	2	True				
ANR	10502078	AssignmentExpression	buf [ x * 3 + 1 ] = g		10501877	0		=			
ANR	10502079	ArrayIndexing	buf [ x * 3 + 1 ]		10501877	0					
ANR	10502080	Identifier	buf		10501877	0					
ANR	10502081	AdditiveExpression	x * 3 + 1		10501877	1		+			
ANR	10502082	MultiplicativeExpression	x * 3		10501877	0		*			
ANR	10502083	Identifier	x		10501877	0					
ANR	10502084	PrimaryExpression	3		10501877	1					
ANR	10502085	PrimaryExpression	1		10501877	1					
ANR	10502086	Identifier	g		10501877	1					
ANR	10502087	ExpressionStatement	buf [ x * 3 + 2 ] = g	208:10:5728:5746	10501877	3	True				
ANR	10502088	AssignmentExpression	buf [ x * 3 + 2 ] = g		10501877	0		=			
ANR	10502089	ArrayIndexing	buf [ x * 3 + 2 ]		10501877	0					
ANR	10502090	Identifier	buf		10501877	0					
ANR	10502091	AdditiveExpression	x * 3 + 2		10501877	1		+			
ANR	10502092	MultiplicativeExpression	x * 3		10501877	0		*			
ANR	10502093	Identifier	x		10501877	0					
ANR	10502094	PrimaryExpression	3		10501877	1					
ANR	10502095	PrimaryExpression	2		10501877	1					
ANR	10502096	Identifier	g		10501877	1					
ANR	10502097	ElseStatement	else		10501877	0					
ANR	10502098	ExpressionStatement	code = - 1	212:4:5775:5784	10501877	0	True				
ANR	10502099	AssignmentExpression	code = - 1		10501877	0		=			
ANR	10502100	Identifier	code		10501877	0					
ANR	10502101	UnaryOperationExpression	- 1		10501877	1					
ANR	10502102	UnaryOperator	-		10501877	0					
ANR	10502103	PrimaryExpression	1		10501877	1					
ANR	10502104	ExpressionStatement	free ( image_buf )	213:2:5788:5804	10501877	8	True				
ANR	10502105	CallExpression	free ( image_buf )		10501877	0					
ANR	10502106	Callee	free		10501877	0					
ANR	10502107	Identifier	free		10501877	0					
ANR	10502108	ArgumentList	image_buf		10501877	1					
ANR	10502109	Argument	image_buf		10501877	0					
ANR	10502110	Identifier	image_buf		10501877	0					
ANR	10502111	ReturnStatement	return code ;	214:2:5808:5819	10501877	9	True				
ANR	10502112	Identifier	code		10501877	0					
ANR	10502113	ReturnType	int		10501877	1					
ANR	10502114	Identifier	image_get_rgb_scan_line		10501877	2					
ANR	10502115	ParameterList	"Image * image , uchar * buf"		10501877	3					
ANR	10502116	Parameter	Image * image	175:25:4941:4952	10501877	0	True				
ANR	10502117	ParameterType	Image *		10501877	0					
ANR	10502118	Identifier	image		10501877	1					
ANR	10502119	Parameter	uchar * buf	175:39:4955:4964	10501877	1	True				
ANR	10502120	ParameterType	uchar *		10501877	0					
ANR	10502121	Identifier	buf		10501877	1					
ANR	10502122	CFGEntryNode	ENTRY		10501877		True				
ANR	10502123	CFGExitNode	EXIT		10501877		True				
ANR	10502124	Symbol	image		10501877						
ANR	10502125	Symbol	malloc		10501877						
ANR	10502126	Symbol	image_buf		10501877						
ANR	10502127	Symbol	* x		10501877						
ANR	10502128	Symbol	* buf		10501877						
ANR	10502129	Symbol	code		10501877						
ANR	10502130	Symbol	image -> bpp		10501877						
ANR	10502131	Symbol	image -> raster		10501877						
ANR	10502132	Symbol	image -> n_chan		10501877						
ANR	10502133	Symbol	image -> get_scan_line		10501877						
ANR	10502134	Symbol	g		10501877						
ANR	10502135	Symbol	image -> width		10501877						
ANR	10502136	Symbol	buf		10501877						
ANR	10502137	Symbol	width		10501877						
ANR	10502138	Symbol	x		10501877						
ANR	10502139	Symbol	* image_buf		10501877						
ANR	10502140	Symbol	* image		10501877						
ANR	10502141	Function	image_get_rgb_scan_line_with_error	216:0:5823:6133							
ANR	10502142	FunctionDef	"image_get_rgb_scan_line_with_error (Image * image , uchar * buf , int image_index , int row_index , int * rcode)"		10502141	0					
ANR	10502143	CompoundStatement		218:0:5933:6133	10502141	0					
ANR	10502144	IdentifierDeclStatement	"int code = image_get_rgb_scan_line ( image , buf ) ;"	219:4:5939:5986	10502141	0	True				
ANR	10502145	IdentifierDecl	"code = image_get_rgb_scan_line ( image , buf )"		10502141	0					
ANR	10502146	IdentifierDeclType	int		10502141	0					
ANR	10502147	Identifier	code		10502141	1					
ANR	10502148	AssignmentExpression	"code = image_get_rgb_scan_line ( image , buf )"		10502141	2		=			
ANR	10502149	Identifier	code		10502141	0					
ANR	10502150	CallExpression	"image_get_rgb_scan_line ( image , buf )"		10502141	1					
ANR	10502151	Callee	image_get_rgb_scan_line		10502141	0					
ANR	10502152	Identifier	image_get_rgb_scan_line		10502141	0					
ANR	10502153	ArgumentList	image		10502141	1					
ANR	10502154	Argument	image		10502141	0					
ANR	10502155	Identifier	image		10502141	0					
ANR	10502156	Argument	buf		10502141	1					
ANR	10502157	Identifier	buf		10502141	0					
ANR	10502158	IfStatement	if ( code == 1 )		10502141	1					
ANR	10502159	Condition	code == 1	221:8:5997:6005	10502141	0	True				
ANR	10502160	EqualityExpression	code == 1		10502141	0		==			
ANR	10502161	Identifier	code		10502141	0					
ANR	10502162	PrimaryExpression	1		10502141	1					
ANR	10502163	CompoundStatement		4:19:74:74	10502141	1					
ANR	10502164	ExpressionStatement	* rcode = 1	222:8:6018:6028	10502141	0	True				
ANR	10502165	AssignmentExpression	* rcode = 1		10502141	0		=			
ANR	10502166	UnaryOperationExpression	* rcode		10502141	0					
ANR	10502167	UnaryOperator	*		10502141	0					
ANR	10502168	Identifier	rcode		10502141	1					
ANR	10502169	PrimaryExpression	1		10502141	1					
ANR	10502170	ExpressionStatement	"printf ( ""*** I/O error in file %d at y = %d\\n"" , image_index , row_index )"	223:8:6038:6108	10502141	1	True				
ANR	10502171	CallExpression	"printf ( ""*** I/O error in file %d at y = %d\\n"" , image_index , row_index )"		10502141	0					
ANR	10502172	Callee	printf		10502141	0					
ANR	10502173	Identifier	printf		10502141	0					
ANR	10502174	ArgumentList	"""*** I/O error in file %d at y = %d\\n"""		10502141	1					
ANR	10502175	Argument	"""*** I/O error in file %d at y = %d\\n"""		10502141	0					
ANR	10502176	PrimaryExpression	"""*** I/O error in file %d at y = %d\\n"""		10502141	0					
ANR	10502177	Argument	image_index		10502141	1					
ANR	10502178	Identifier	image_index		10502141	0					
ANR	10502179	Argument	row_index		10502141	2					
ANR	10502180	Identifier	row_index		10502141	0					
ANR	10502181	ReturnStatement	return code ;	225:4:6120:6131	10502141	2	True				
ANR	10502182	Identifier	code		10502141	0					
ANR	10502183	ReturnType	int		10502141	1					
ANR	10502184	Identifier	image_get_rgb_scan_line_with_error		10502141	2					
ANR	10502185	ParameterList	"Image * image , uchar * buf , int image_index , int row_index , int * rcode"		10502141	3					
ANR	10502186	Parameter	Image * image	217:36:5863:5874	10502141	0	True				
ANR	10502187	ParameterType	Image *		10502141	0					
ANR	10502188	Identifier	image		10502141	1					
ANR	10502189	Parameter	uchar * buf	217:50:5877:5886	10502141	1	True				
ANR	10502190	ParameterType	uchar *		10502141	0					
ANR	10502191	Identifier	buf		10502141	1					
ANR	10502192	Parameter	int image_index	217:62:5889:5903	10502141	2	True				
ANR	10502193	ParameterType	int		10502141	0					
ANR	10502194	Identifier	image_index		10502141	1					
ANR	10502195	Parameter	int row_index	217:79:5906:5918	10502141	3	True				
ANR	10502196	ParameterType	int		10502141	0					
ANR	10502197	Identifier	row_index		10502141	1					
ANR	10502198	Parameter	int * rcode	217:94:5921:5930	10502141	4	True				
ANR	10502199	ParameterType	int *		10502141	0					
ANR	10502200	Identifier	rcode		10502141	1					
ANR	10502201	CFGEntryNode	ENTRY		10502141		True				
ANR	10502202	CFGExitNode	EXIT		10502141		True				
ANR	10502203	Symbol	image		10502141						
ANR	10502204	Symbol	buf		10502141						
ANR	10502205	Symbol	image_get_rgb_scan_line		10502141						
ANR	10502206	Symbol	code		10502141						
ANR	10502207	Symbol	row_index		10502141						
ANR	10502208	Symbol	image_index		10502141						
ANR	10502209	Symbol	rcode		10502141						
ANR	10502210	Symbol	* rcode		10502141						
ANR	10502211	DeclStmt									
ANR	10502212	Decl							struct _ImagePnm	struct _ImagePnm	ImagePnm
ANR	10502213	ClassDef	_ImagePnm	230:0:6172:6237							
ANR	10502214	DeclStmt									
ANR	10502215	Decl							Image	Image	super
ANR	10502216	DeclStmt									
ANR	10502217	Decl							FILE	FILE *	f
ANR	10502218	DeclStmt									
ANR	10502219	Decl							long	long	file_length
ANR	10502220	Function	image_close	236:0:6241:6305							
ANR	10502221	FunctionDef	image_close (Image * image)		10502220	0					
ANR	10502222	CompoundStatement		238:0:6272:6305	10502220	0					
ANR	10502223	ReturnStatement	return image -> close ( image ) ;	239:2:6276:6303	10502220	0	True				
ANR	10502224	CallExpression	image -> close ( image )		10502220	0					
ANR	10502225	Callee	image -> close		10502220	0					
ANR	10502226	PtrMemberAccess	image -> close		10502220	0					
ANR	10502227	Identifier	image		10502220	0					
ANR	10502228	Identifier	close		10502220	1					
ANR	10502229	ArgumentList	image		10502220	1					
ANR	10502230	Argument	image		10502220	0					
ANR	10502231	Identifier	image		10502220	0					
ANR	10502232	ReturnType	int		10502220	1					
ANR	10502233	Identifier	image_close		10502220	2					
ANR	10502234	ParameterList	Image * image		10502220	3					
ANR	10502235	Parameter	Image * image	237:13:6258:6269	10502220	0	True				
ANR	10502236	ParameterType	Image *		10502220	0					
ANR	10502237	Identifier	image		10502220	1					
ANR	10502238	CFGEntryNode	ENTRY		10502220		True				
ANR	10502239	CFGExitNode	EXIT		10502220		True				
ANR	10502240	Symbol	image		10502220						
ANR	10502241	Symbol	image -> close		10502220						
ANR	10502242	Symbol	* image		10502220						
ANR	10502243	Function	no_seek	242:0:6308:6361							
ANR	10502244	FunctionDef	"no_seek (Image * self , int y)"		10502243	0					
ANR	10502245	CompoundStatement		244:0:6347:6361	10502243	0					
ANR	10502246	ReturnStatement	return 0 ;	245:2:6351:6359	10502243	0	True				
ANR	10502247	PrimaryExpression	0		10502243	0					
ANR	10502248	ReturnType	static int		10502243	1					
ANR	10502249	Identifier	no_seek		10502243	2					
ANR	10502250	ParameterList	"Image * self , int y"		10502243	3					
ANR	10502251	Parameter	Image * self	243:8:6327:6337	10502243	0	True				
ANR	10502252	ParameterType	Image *		10502243	0					
ANR	10502253	Identifier	self		10502243	1					
ANR	10502254	Parameter	int y	243:21:6340:6344	10502243	1	True				
ANR	10502255	ParameterType	int		10502243	0					
ANR	10502256	Identifier	y		10502243	1					
ANR	10502257	CFGEntryNode	ENTRY		10502243		True				
ANR	10502258	CFGExitNode	EXIT		10502243		True				
ANR	10502259	Symbol	self		10502243						
ANR	10502260	Symbol	y		10502243						
ANR	10502261	Function	write	248:0:6364:6543							
ANR	10502262	FunctionDef	"write (Image * self , uchar * out_buf , int out_buffer_size)"		10502261	0					
ANR	10502263	CompoundStatement		249:56:6431:6543	10502261	0					
ANR	10502264	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	250:2:6435:6467	10502261	0	True				
ANR	10502265	IdentifierDecl	* pnm = ( ImagePnm * ) self		10502261	0					
ANR	10502266	IdentifierDeclType	ImagePnm *		10502261	0					
ANR	10502267	Identifier	pnm		10502261	1					
ANR	10502268	AssignmentExpression	* pnm = ( ImagePnm * ) self		10502261	2		=			
ANR	10502269	Identifier	pnm		10502261	0					
ANR	10502270	CastExpression	( ImagePnm * ) self		10502261	1					
ANR	10502271	CastTarget	ImagePnm *		10502261	0					
ANR	10502272	Identifier	self		10502261	1					
ANR	10502273	ReturnStatement	"return ( fwrite ( out_buf , 1 , out_buffer_size , pnm -> f ) != out_buffer_size ) ;"	251:2:6471:6541	10502261	1	True				
ANR	10502274	EqualityExpression	"fwrite ( out_buf , 1 , out_buffer_size , pnm -> f ) != out_buffer_size"		10502261	0		!=			
ANR	10502275	CallExpression	"fwrite ( out_buf , 1 , out_buffer_size , pnm -> f )"		10502261	0					
ANR	10502276	Callee	fwrite		10502261	0					
ANR	10502277	Identifier	fwrite		10502261	0					
ANR	10502278	ArgumentList	out_buf		10502261	1					
ANR	10502279	Argument	out_buf		10502261	0					
ANR	10502280	Identifier	out_buf		10502261	0					
ANR	10502281	Argument	1		10502261	1					
ANR	10502282	PrimaryExpression	1		10502261	0					
ANR	10502283	Argument	out_buffer_size		10502261	2					
ANR	10502284	Identifier	out_buffer_size		10502261	0					
ANR	10502285	Argument	pnm -> f		10502261	3					
ANR	10502286	PtrMemberAccess	pnm -> f		10502261	0					
ANR	10502287	Identifier	pnm		10502261	0					
ANR	10502288	Identifier	f		10502261	1					
ANR	10502289	Identifier	out_buffer_size		10502261	1					
ANR	10502290	ReturnType	static int		10502261	1					
ANR	10502291	Identifier	write		10502261	2					
ANR	10502292	ParameterList	"Image * self , uchar * out_buf , int out_buffer_size"		10502261	3					
ANR	10502293	Parameter	Image * self	249:6:6381:6391	10502261	0	True				
ANR	10502294	ParameterType	Image *		10502261	0					
ANR	10502295	Identifier	self		10502261	1					
ANR	10502296	Parameter	uchar * out_buf	249:19:6394:6407	10502261	1	True				
ANR	10502297	ParameterType	uchar *		10502261	0					
ANR	10502298	Identifier	out_buf		10502261	1					
ANR	10502299	Parameter	int out_buffer_size	249:35:6410:6428	10502261	2	True				
ANR	10502300	ParameterType	int		10502261	0					
ANR	10502301	Identifier	out_buffer_size		10502261	1					
ANR	10502302	CFGEntryNode	ENTRY		10502261		True				
ANR	10502303	CFGExitNode	EXIT		10502261		True				
ANR	10502304	Symbol	pnm -> f		10502261						
ANR	10502305	Symbol	out_buf		10502261						
ANR	10502306	Symbol	self		10502261						
ANR	10502307	Symbol	* pnm		10502261						
ANR	10502308	Symbol	fwrite		10502261						
ANR	10502309	Symbol	out_buffer_size		10502261						
ANR	10502310	Symbol	pnm		10502261						
ANR	10502311	Function	image_pnm_close	254:0:6546:6694							
ANR	10502312	FunctionDef	image_pnm_close (Image * self)		10502311	0					
ANR	10502313	CompoundStatement		256:0:6587:6694	10502311	0					
ANR	10502314	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	257:2:6591:6623	10502311	0	True				
ANR	10502315	IdentifierDecl	* pnm = ( ImagePnm * ) self		10502311	0					
ANR	10502316	IdentifierDeclType	ImagePnm *		10502311	0					
ANR	10502317	Identifier	pnm		10502311	1					
ANR	10502318	AssignmentExpression	* pnm = ( ImagePnm * ) self		10502311	2		=			
ANR	10502319	Identifier	pnm		10502311	0					
ANR	10502320	CastExpression	( ImagePnm * ) self		10502311	1					
ANR	10502321	CastTarget	ImagePnm *		10502311	0					
ANR	10502322	Identifier	self		10502311	1					
ANR	10502323	IdentifierDeclStatement	int code ;	258:2:6627:6635	10502311	1	True				
ANR	10502324	IdentifierDecl	code		10502311	0					
ANR	10502325	IdentifierDeclType	int		10502311	0					
ANR	10502326	Identifier	code		10502311	1					
ANR	10502327	ExpressionStatement	code = fclose ( pnm -> f )	260:2:6640:6662	10502311	2	True				
ANR	10502328	AssignmentExpression	code = fclose ( pnm -> f )		10502311	0		=			
ANR	10502329	Identifier	code		10502311	0					
ANR	10502330	CallExpression	fclose ( pnm -> f )		10502311	1					
ANR	10502331	Callee	fclose		10502311	0					
ANR	10502332	Identifier	fclose		10502311	0					
ANR	10502333	ArgumentList	pnm -> f		10502311	1					
ANR	10502334	Argument	pnm -> f		10502311	0					
ANR	10502335	PtrMemberAccess	pnm -> f		10502311	0					
ANR	10502336	Identifier	pnm		10502311	0					
ANR	10502337	Identifier	f		10502311	1					
ANR	10502338	ExpressionStatement	free ( self )	261:2:6666:6677	10502311	3	True				
ANR	10502339	CallExpression	free ( self )		10502311	0					
ANR	10502340	Callee	free		10502311	0					
ANR	10502341	Identifier	free		10502311	0					
ANR	10502342	ArgumentList	self		10502311	1					
ANR	10502343	Argument	self		10502311	0					
ANR	10502344	Identifier	self		10502311	0					
ANR	10502345	ReturnStatement	return code ;	262:2:6681:6692	10502311	4	True				
ANR	10502346	Identifier	code		10502311	0					
ANR	10502347	ReturnType	static int		10502311	1					
ANR	10502348	Identifier	image_pnm_close		10502311	2					
ANR	10502349	ParameterList	Image * self		10502311	3					
ANR	10502350	Parameter	Image * self	255:17:6574:6584	10502311	0	True				
ANR	10502351	ParameterType	Image *		10502311	0					
ANR	10502352	Identifier	self		10502311	1					
ANR	10502353	CFGEntryNode	ENTRY		10502311		True				
ANR	10502354	CFGExitNode	EXIT		10502311		True				
ANR	10502355	Symbol	pnm -> f		10502311						
ANR	10502356	Symbol	code		10502311						
ANR	10502357	Symbol	fclose		10502311						
ANR	10502358	Symbol	self		10502311						
ANR	10502359	Symbol	* pnm		10502311						
ANR	10502360	Symbol	pnm		10502311						
ANR	10502361	Function	create_pnm_image_struct	265:0:6697:7256							
ANR	10502362	FunctionDef	"create_pnm_image_struct (Image * templ , const char * path)"		10502361	0					
ANR	10502363	CompoundStatement		267:0:6771:7256	10502361	0					
ANR	10502364	IdentifierDeclStatement	"FILE * f = fopen ( path , ""w+b"" ) ;"	268:2:6775:6802	10502361	0	True				
ANR	10502365	IdentifierDecl	"* f = fopen ( path , ""w+b"" )"		10502361	0					
ANR	10502366	IdentifierDeclType	FILE *		10502361	0					
ANR	10502367	Identifier	f		10502361	1					
ANR	10502368	AssignmentExpression	"* f = fopen ( path , ""w+b"" )"		10502361	2		=			
ANR	10502369	Identifier	f		10502361	0					
ANR	10502370	CallExpression	"fopen ( path , ""w+b"" )"		10502361	1					
ANR	10502371	Callee	fopen		10502361	0					
ANR	10502372	Identifier	fopen		10502361	0					
ANR	10502373	ArgumentList	path		10502361	1					
ANR	10502374	Argument	path		10502361	0					
ANR	10502375	Identifier	path		10502361	0					
ANR	10502376	Argument	"""w+b"""		10502361	1					
ANR	10502377	PrimaryExpression	"""w+b"""		10502361	0					
ANR	10502378	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) ) ;	269:2:6806:6858	10502361	1	True				
ANR	10502379	IdentifierDecl	* pnm = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10502361	0					
ANR	10502380	IdentifierDeclType	ImagePnm *		10502361	0					
ANR	10502381	Identifier	pnm		10502361	1					
ANR	10502382	AssignmentExpression	* pnm = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10502361	2		=			
ANR	10502383	Identifier	pnm		10502361	0					
ANR	10502384	CastExpression	( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10502361	1					
ANR	10502385	CastTarget	ImagePnm *		10502361	0					
ANR	10502386	CallExpression	malloc ( sizeof ( ImagePnm ) )		10502361	1					
ANR	10502387	Callee	malloc		10502361	0					
ANR	10502388	Identifier	malloc		10502361	0					
ANR	10502389	ArgumentList	sizeof ( ImagePnm )		10502361	1					
ANR	10502390	Argument	sizeof ( ImagePnm )		10502361	0					
ANR	10502391	SizeofExpression	sizeof ( ImagePnm )		10502361	0					
ANR	10502392	Sizeof	sizeof		10502361	0					
ANR	10502393	SizeofOperand	ImagePnm		10502361	1					
ANR	10502394	IfStatement	if ( pnm == NULL )		10502361	2					
ANR	10502395	Condition	pnm == NULL	271:6:6867:6877	10502361	0	True				
ANR	10502396	EqualityExpression	pnm == NULL		10502361	0		==			
ANR	10502397	Identifier	pnm		10502361	0					
ANR	10502398	Identifier	NULL		10502361	1					
ANR	10502399	CompoundStatement		5:19:108:108	10502361	1					
ANR	10502400	ExpressionStatement	"printf ( ""Insufficient RAM.\\n"" )"	272:4:6886:6916	10502361	0	True				
ANR	10502401	CallExpression	"printf ( ""Insufficient RAM.\\n"" )"		10502361	0					
ANR	10502402	Callee	printf		10502361	0					
ANR	10502403	Identifier	printf		10502361	0					
ANR	10502404	ArgumentList	"""Insufficient RAM.\\n"""		10502361	1					
ANR	10502405	Argument	"""Insufficient RAM.\\n"""		10502361	0					
ANR	10502406	PrimaryExpression	"""Insufficient RAM.\\n"""		10502361	0					
ANR	10502407	ReturnStatement	return NULL ;	273:4:6922:6933	10502361	1	True				
ANR	10502408	Identifier	NULL		10502361	0					
ANR	10502409	IfStatement	if ( f == NULL )		10502361	3					
ANR	10502410	Condition	f == NULL	275:6:6945:6953	10502361	0	True				
ANR	10502411	EqualityExpression	f == NULL		10502361	0		==			
ANR	10502412	Identifier	f		10502361	0					
ANR	10502413	Identifier	NULL		10502361	1					
ANR	10502414	CompoundStatement		9:17:184:184	10502361	1					
ANR	10502415	ExpressionStatement	"printf ( ""Can't create the file %s\\n"" , path )"	276:4:6962:7005	10502361	0	True				
ANR	10502416	CallExpression	"printf ( ""Can't create the file %s\\n"" , path )"		10502361	0					
ANR	10502417	Callee	printf		10502361	0					
ANR	10502418	Identifier	printf		10502361	0					
ANR	10502419	ArgumentList	"""Can't create the file %s\\n"""		10502361	1					
ANR	10502420	Argument	"""Can't create the file %s\\n"""		10502361	0					
ANR	10502421	PrimaryExpression	"""Can't create the file %s\\n"""		10502361	0					
ANR	10502422	Argument	path		10502361	1					
ANR	10502423	Identifier	path		10502361	0					
ANR	10502424	ReturnStatement	return NULL ;	277:4:7011:7022	10502361	1	True				
ANR	10502425	Identifier	NULL		10502361	0					
ANR	10502426	ExpressionStatement	pnm -> f = f	279:2:7030:7040	10502361	4	True				
ANR	10502427	AssignmentExpression	pnm -> f = f		10502361	0		=			
ANR	10502428	PtrMemberAccess	pnm -> f		10502361	0					
ANR	10502429	Identifier	pnm		10502361	0					
ANR	10502430	Identifier	f		10502361	1					
ANR	10502431	Identifier	f		10502361	1					
ANR	10502432	ExpressionStatement	pnm -> super = * templ	280:2:7044:7063	10502361	5	True				
ANR	10502433	AssignmentExpression	pnm -> super = * templ		10502361	0		=			
ANR	10502434	PtrMemberAccess	pnm -> super		10502361	0					
ANR	10502435	Identifier	pnm		10502361	0					
ANR	10502436	Identifier	super		10502361	1					
ANR	10502437	UnaryOperationExpression	* templ		10502361	1					
ANR	10502438	UnaryOperator	*		10502361	0					
ANR	10502439	Identifier	templ		10502361	1					
ANR	10502440	ExpressionStatement	pnm -> super . seek = no_seek	281:2:7067:7092	10502361	6	True				
ANR	10502441	AssignmentExpression	pnm -> super . seek = no_seek		10502361	0		=			
ANR	10502442	MemberAccess	pnm -> super . seek		10502361	0					
ANR	10502443	PtrMemberAccess	pnm -> super		10502361	0					
ANR	10502444	Identifier	pnm		10502361	0					
ANR	10502445	Identifier	super		10502361	1					
ANR	10502446	Identifier	seek		10502361	1					
ANR	10502447	Identifier	no_seek		10502361	1					
ANR	10502448	ExpressionStatement	pnm -> super . write = write	282:2:7096:7120	10502361	7	True				
ANR	10502449	AssignmentExpression	pnm -> super . write = write		10502361	0		=			
ANR	10502450	MemberAccess	pnm -> super . write		10502361	0					
ANR	10502451	PtrMemberAccess	pnm -> super		10502361	0					
ANR	10502452	Identifier	pnm		10502361	0					
ANR	10502453	Identifier	super		10502361	1					
ANR	10502454	Identifier	write		10502361	1					
ANR	10502455	Identifier	write		10502361	1					
ANR	10502456	ExpressionStatement	pnm -> super . bpp = 8	283:2:7124:7142	10502361	8	True				
ANR	10502457	AssignmentExpression	pnm -> super . bpp = 8		10502361	0		=			
ANR	10502458	MemberAccess	pnm -> super . bpp		10502361	0					
ANR	10502459	PtrMemberAccess	pnm -> super		10502361	0					
ANR	10502460	Identifier	pnm		10502361	0					
ANR	10502461	Identifier	super		10502361	1					
ANR	10502462	Identifier	bpp		10502361	1					
ANR	10502463	PrimaryExpression	8		10502361	1					
ANR	10502464	ExpressionStatement	pnm -> super . n_chan = 3	284:2:7184:7205	10502361	9	True				
ANR	10502465	AssignmentExpression	pnm -> super . n_chan = 3		10502361	0		=			
ANR	10502466	MemberAccess	pnm -> super . n_chan		10502361	0					
ANR	10502467	PtrMemberAccess	pnm -> super		10502361	0					
ANR	10502468	Identifier	pnm		10502361	0					
ANR	10502469	Identifier	super		10502361	1					
ANR	10502470	Identifier	n_chan		10502361	1					
ANR	10502471	PrimaryExpression	3		10502361	1					
ANR	10502472	ReturnStatement	return pnm ;	285:2:7244:7254	10502361	10	True				
ANR	10502473	Identifier	pnm		10502361	0					
ANR	10502474	ReturnType	static ImagePnm *		10502361	1					
ANR	10502475	Identifier	create_pnm_image_struct		10502361	2					
ANR	10502476	ParameterList	"Image * templ , const char * path"		10502361	3					
ANR	10502477	Parameter	Image * templ	266:24:6739:6750	10502361	0	True				
ANR	10502478	ParameterType	Image *		10502361	0					
ANR	10502479	Identifier	templ		10502361	1					
ANR	10502480	Parameter	const char * path	266:38:6753:6768	10502361	1	True				
ANR	10502481	ParameterType	const char *		10502361	0					
ANR	10502482	Identifier	path		10502361	1					
ANR	10502483	CFGEntryNode	ENTRY		10502361		True				
ANR	10502484	CFGExitNode	EXIT		10502361		True				
ANR	10502485	Symbol	fopen		10502361						
ANR	10502486	Symbol	malloc		10502361						
ANR	10502487	Symbol	pnm -> f		10502361						
ANR	10502488	Symbol	NULL		10502361						
ANR	10502489	Symbol	f		10502361						
ANR	10502490	Symbol	pnm -> super . seek		10502361						
ANR	10502491	Symbol	pnm -> super . write		10502361						
ANR	10502492	Symbol	templ		10502361						
ANR	10502493	Symbol	pnm		10502361						
ANR	10502494	Symbol	pnm -> super		10502361						
ANR	10502495	Symbol	path		10502361						
ANR	10502496	Symbol	* templ		10502361						
ANR	10502497	Symbol	no_seek		10502361						
ANR	10502498	Symbol	pnm -> super . n_chan		10502361						
ANR	10502499	Symbol	* pnm		10502361						
ANR	10502500	Symbol	write		10502361						
ANR	10502501	Symbol	pnm -> super . bpp		10502361						
ANR	10502502	Function	create_pnm_image	288:0:7259:7611							
ANR	10502503	FunctionDef	"create_pnm_image (Image * templ , const char * path)"		10502502	0					
ANR	10502504	CompoundStatement		290:0:7326:7611	10502502	0					
ANR	10502505	IdentifierDeclStatement	"ImagePnm * pnm = create_pnm_image_struct ( templ , path ) ;"	291:2:7330:7382	10502502	0	True				
ANR	10502506	IdentifierDecl	"* pnm = create_pnm_image_struct ( templ , path )"		10502502	0					
ANR	10502507	IdentifierDeclType	ImagePnm *		10502502	0					
ANR	10502508	Identifier	pnm		10502502	1					
ANR	10502509	AssignmentExpression	"* pnm = create_pnm_image_struct ( templ , path )"		10502502	2		=			
ANR	10502510	Identifier	pnm		10502502	0					
ANR	10502511	CallExpression	"create_pnm_image_struct ( templ , path )"		10502502	1					
ANR	10502512	Callee	create_pnm_image_struct		10502502	0					
ANR	10502513	Identifier	create_pnm_image_struct		10502502	0					
ANR	10502514	ArgumentList	templ		10502502	1					
ANR	10502515	Argument	templ		10502502	0					
ANR	10502516	Identifier	templ		10502502	0					
ANR	10502517	Argument	path		10502502	1					
ANR	10502518	Identifier	path		10502502	0					
ANR	10502519	IfStatement	if ( pnm == NULL )		10502502	1					
ANR	10502520	Condition	pnm == NULL	293:6:7391:7401	10502502	0	True				
ANR	10502521	EqualityExpression	pnm == NULL		10502502	0		==			
ANR	10502522	Identifier	pnm		10502502	0					
ANR	10502523	Identifier	NULL		10502502	1					
ANR	10502524	ReturnStatement	return NULL ;	294:4:7408:7419	10502502	1	True				
ANR	10502525	Identifier	NULL		10502502	0					
ANR	10502526	ExpressionStatement	"fprintf ( pnm -> f , ""P6\\n"" )"	296:2:7424:7446	10502502	2	True				
ANR	10502527	CallExpression	"fprintf ( pnm -> f , ""P6\\n"" )"		10502502	0					
ANR	10502528	Callee	fprintf		10502502	0					
ANR	10502529	Identifier	fprintf		10502502	0					
ANR	10502530	ArgumentList	pnm -> f		10502502	1					
ANR	10502531	Argument	pnm -> f		10502502	0					
ANR	10502532	PtrMemberAccess	pnm -> f		10502502	0					
ANR	10502533	Identifier	pnm		10502502	0					
ANR	10502534	Identifier	f		10502502	1					
ANR	10502535	Argument	"""P6\\n"""		10502502	1					
ANR	10502536	PrimaryExpression	"""P6\\n"""		10502502	0					
ANR	10502537	ExpressionStatement	"fprintf ( pnm -> f , ""# Generated by Ghostscript's fuzzy.c\\n"" )"	297:2:7450:7506	10502502	3	True				
ANR	10502538	CallExpression	"fprintf ( pnm -> f , ""# Generated by Ghostscript's fuzzy.c\\n"" )"		10502502	0					
ANR	10502539	Callee	fprintf		10502502	0					
ANR	10502540	Identifier	fprintf		10502502	0					
ANR	10502541	ArgumentList	pnm -> f		10502502	1					
ANR	10502542	Argument	pnm -> f		10502502	0					
ANR	10502543	PtrMemberAccess	pnm -> f		10502502	0					
ANR	10502544	Identifier	pnm		10502502	0					
ANR	10502545	Identifier	f		10502502	1					
ANR	10502546	Argument	"""# Generated by Ghostscript's fuzzy.c\\n"""		10502502	1					
ANR	10502547	PrimaryExpression	"""# Generated by Ghostscript's fuzzy.c\\n"""		10502502	0					
ANR	10502548	ExpressionStatement	"fprintf ( pnm -> f , ""%d %d\\n"" , templ -> width , pnm -> super . height )"	298:2:7510:7568	10502502	4	True				
ANR	10502549	CallExpression	"fprintf ( pnm -> f , ""%d %d\\n"" , templ -> width , pnm -> super . height )"		10502502	0					
ANR	10502550	Callee	fprintf		10502502	0					
ANR	10502551	Identifier	fprintf		10502502	0					
ANR	10502552	ArgumentList	pnm -> f		10502502	1					
ANR	10502553	Argument	pnm -> f		10502502	0					
ANR	10502554	PtrMemberAccess	pnm -> f		10502502	0					
ANR	10502555	Identifier	pnm		10502502	0					
ANR	10502556	Identifier	f		10502502	1					
ANR	10502557	Argument	"""%d %d\\n"""		10502502	1					
ANR	10502558	PrimaryExpression	"""%d %d\\n"""		10502502	0					
ANR	10502559	Argument	templ -> width		10502502	2					
ANR	10502560	PtrMemberAccess	templ -> width		10502502	0					
ANR	10502561	Identifier	templ		10502502	0					
ANR	10502562	Identifier	width		10502502	1					
ANR	10502563	Argument	pnm -> super . height		10502502	3					
ANR	10502564	MemberAccess	pnm -> super . height		10502502	0					
ANR	10502565	PtrMemberAccess	pnm -> super		10502502	0					
ANR	10502566	Identifier	pnm		10502502	0					
ANR	10502567	Identifier	super		10502502	1					
ANR	10502568	Identifier	height		10502502	1					
ANR	10502569	ExpressionStatement	"fprintf ( pnm -> f , ""255\\n"" )"	299:2:7572:7595	10502502	5	True				
ANR	10502570	CallExpression	"fprintf ( pnm -> f , ""255\\n"" )"		10502502	0					
ANR	10502571	Callee	fprintf		10502502	0					
ANR	10502572	Identifier	fprintf		10502502	0					
ANR	10502573	ArgumentList	pnm -> f		10502502	1					
ANR	10502574	Argument	pnm -> f		10502502	0					
ANR	10502575	PtrMemberAccess	pnm -> f		10502502	0					
ANR	10502576	Identifier	pnm		10502502	0					
ANR	10502577	Identifier	f		10502502	1					
ANR	10502578	Argument	"""255\\n"""		10502502	1					
ANR	10502579	PrimaryExpression	"""255\\n"""		10502502	0					
ANR	10502580	ReturnStatement	return pnm ;	300:2:7599:7609	10502502	6	True				
ANR	10502581	Identifier	pnm		10502502	0					
ANR	10502582	ReturnType	static ImagePnm *		10502502	1					
ANR	10502583	Identifier	create_pnm_image		10502502	2					
ANR	10502584	ParameterList	"Image * templ , const char * path"		10502502	3					
ANR	10502585	Parameter	Image * templ	289:17:7294:7305	10502502	0	True				
ANR	10502586	ParameterType	Image *		10502502	0					
ANR	10502587	Identifier	templ		10502502	1					
ANR	10502588	Parameter	const char * path	289:31:7308:7323	10502502	1	True				
ANR	10502589	ParameterType	const char *		10502502	0					
ANR	10502590	Identifier	path		10502502	1					
ANR	10502591	CFGEntryNode	ENTRY		10502502		True				
ANR	10502592	CFGExitNode	EXIT		10502502		True				
ANR	10502593	Symbol	pnm -> super		10502502						
ANR	10502594	Symbol	path		10502502						
ANR	10502595	Symbol	pnm -> f		10502502						
ANR	10502596	Symbol	* templ		10502502						
ANR	10502597	Symbol	create_pnm_image_struct		10502502						
ANR	10502598	Symbol	NULL		10502502						
ANR	10502599	Symbol	templ -> width		10502502						
ANR	10502600	Symbol	pnm -> super . height		10502502						
ANR	10502601	Symbol	* pnm		10502502						
ANR	10502602	Symbol	templ		10502502						
ANR	10502603	Symbol	pnm		10502502						
ANR	10502604	Function	image_pnm_feof	303:0:7614:7754							
ANR	10502605	FunctionDef	image_pnm_feof (Image * self)		10502604	0					
ANR	10502606	CompoundStatement		305:0:7654:7754	10502604	0					
ANR	10502607	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	306:2:7658:7690	10502604	0	True				
ANR	10502608	IdentifierDecl	* pnm = ( ImagePnm * ) self		10502604	0					
ANR	10502609	IdentifierDeclType	ImagePnm *		10502604	0					
ANR	10502610	Identifier	pnm		10502604	1					
ANR	10502611	AssignmentExpression	* pnm = ( ImagePnm * ) self		10502604	2		=			
ANR	10502612	Identifier	pnm		10502604	0					
ANR	10502613	CastExpression	( ImagePnm * ) self		10502604	1					
ANR	10502614	CastTarget	ImagePnm *		10502604	0					
ANR	10502615	Identifier	self		10502604	1					
ANR	10502616	ReturnStatement	return feof ( pnm -> f ) || ftell ( pnm -> f ) == pnm -> file_length ;	308:2:7695:7752	10502604	1	True				
ANR	10502617	OrExpression	feof ( pnm -> f ) || ftell ( pnm -> f ) == pnm -> file_length		10502604	0		||			
ANR	10502618	CallExpression	feof ( pnm -> f )		10502604	0					
ANR	10502619	Callee	feof		10502604	0					
ANR	10502620	Identifier	feof		10502604	0					
ANR	10502621	ArgumentList	pnm -> f		10502604	1					
ANR	10502622	Argument	pnm -> f		10502604	0					
ANR	10502623	PtrMemberAccess	pnm -> f		10502604	0					
ANR	10502624	Identifier	pnm		10502604	0					
ANR	10502625	Identifier	f		10502604	1					
ANR	10502626	EqualityExpression	ftell ( pnm -> f ) == pnm -> file_length		10502604	1		==			
ANR	10502627	CallExpression	ftell ( pnm -> f )		10502604	0					
ANR	10502628	Callee	ftell		10502604	0					
ANR	10502629	Identifier	ftell		10502604	0					
ANR	10502630	ArgumentList	pnm -> f		10502604	1					
ANR	10502631	Argument	pnm -> f		10502604	0					
ANR	10502632	PtrMemberAccess	pnm -> f		10502604	0					
ANR	10502633	Identifier	pnm		10502604	0					
ANR	10502634	Identifier	f		10502604	1					
ANR	10502635	PtrMemberAccess	pnm -> file_length		10502604	1					
ANR	10502636	Identifier	pnm		10502604	0					
ANR	10502637	Identifier	file_length		10502604	1					
ANR	10502638	ReturnType	static int		10502604	1					
ANR	10502639	Identifier	image_pnm_feof		10502604	2					
ANR	10502640	ParameterList	Image * self		10502604	3					
ANR	10502641	Parameter	Image * self	304:16:7641:7651	10502604	0	True				
ANR	10502642	ParameterType	Image *		10502604	0					
ANR	10502643	Identifier	self		10502604	1					
ANR	10502644	CFGEntryNode	ENTRY		10502604		True				
ANR	10502645	CFGExitNode	EXIT		10502604		True				
ANR	10502646	Symbol	pnm -> f		10502604						
ANR	10502647	Symbol	pnm -> file_length		10502604						
ANR	10502648	Symbol	ftell		10502604						
ANR	10502649	Symbol	self		10502604						
ANR	10502650	Symbol	* pnm		10502604						
ANR	10502651	Symbol	feof		10502604						
ANR	10502652	Symbol	pnm		10502604						
ANR	10502653	Function	write_int16	311:0:7757:7908							
ANR	10502654	FunctionDef	"write_int16 (short v , FILE * f)"		10502653	0					
ANR	10502655	CompoundStatement		313:0:7799:7908	10502653	0					
ANR	10502656	IdentifierDeclStatement	uchar val [ 2 ] ;	314:2:7803:7815	10502653	0	True				
ANR	10502657	IdentifierDecl	val [ 2 ]		10502653	0					
ANR	10502658	IdentifierDeclType	uchar [ 2 ]		10502653	0					
ANR	10502659	Identifier	val		10502653	1					
ANR	10502660	PrimaryExpression	2		10502653	2					
ANR	10502661	ExpressionStatement	val [ 0 ] = ( uchar ) ( v & 0xff )	315:2:7819:7845	10502653	1	True				
ANR	10502662	AssignmentExpression	val [ 0 ] = ( uchar ) ( v & 0xff )		10502653	0		=			
ANR	10502663	ArrayIndexing	val [ 0 ]		10502653	0					
ANR	10502664	Identifier	val		10502653	0					
ANR	10502665	PrimaryExpression	0		10502653	1					
ANR	10502666	CastExpression	( uchar ) ( v & 0xff )		10502653	1					
ANR	10502667	CastTarget	uchar		10502653	0					
ANR	10502668	BitAndExpression	v & 0xff		10502653	1		&			
ANR	10502669	Identifier	v		10502653	0					
ANR	10502670	PrimaryExpression	0xff		10502653	1					
ANR	10502671	ExpressionStatement	val [ 1 ] = ( uchar ) ( ( v >> 8 ) & 0xff )	316:2:7849:7882	10502653	2	True				
ANR	10502672	AssignmentExpression	val [ 1 ] = ( uchar ) ( ( v >> 8 ) & 0xff )		10502653	0		=			
ANR	10502673	ArrayIndexing	val [ 1 ]		10502653	0					
ANR	10502674	Identifier	val		10502653	0					
ANR	10502675	PrimaryExpression	1		10502653	1					
ANR	10502676	CastExpression	( uchar ) ( ( v >> 8 ) & 0xff )		10502653	1					
ANR	10502677	CastTarget	uchar		10502653	0					
ANR	10502678	BitAndExpression	( v >> 8 ) & 0xff		10502653	1		&			
ANR	10502679	ShiftExpression	v >> 8		10502653	0		>>			
ANR	10502680	Identifier	v		10502653	0					
ANR	10502681	PrimaryExpression	8		10502653	1					
ANR	10502682	PrimaryExpression	0xff		10502653	1					
ANR	10502683	ExpressionStatement	"fwrite ( val , 2 , 1 , f )"	317:2:7886:7906	10502653	3	True				
ANR	10502684	CallExpression	"fwrite ( val , 2 , 1 , f )"		10502653	0					
ANR	10502685	Callee	fwrite		10502653	0					
ANR	10502686	Identifier	fwrite		10502653	0					
ANR	10502687	ArgumentList	val		10502653	1					
ANR	10502688	Argument	val		10502653	0					
ANR	10502689	Identifier	val		10502653	0					
ANR	10502690	Argument	2		10502653	1					
ANR	10502691	PrimaryExpression	2		10502653	0					
ANR	10502692	Argument	1		10502653	2					
ANR	10502693	PrimaryExpression	1		10502653	0					
ANR	10502694	Argument	f		10502653	3					
ANR	10502695	Identifier	f		10502653	0					
ANR	10502696	ReturnType	static void		10502653	1					
ANR	10502697	Identifier	write_int16		10502653	2					
ANR	10502698	ParameterList	"short v , FILE * f"		10502653	3					
ANR	10502699	Parameter	short v	312:12:7781:7787	10502653	0	True				
ANR	10502700	ParameterType	short		10502653	0					
ANR	10502701	Identifier	v		10502653	1					
ANR	10502702	Parameter	FILE * f	312:21:7790:7796	10502653	1	True				
ANR	10502703	ParameterType	FILE *		10502653	0					
ANR	10502704	Identifier	f		10502653	1					
ANR	10502705	CFGEntryNode	ENTRY		10502653		True				
ANR	10502706	CFGExitNode	EXIT		10502653		True				
ANR	10502707	Symbol	val		10502653						
ANR	10502708	Symbol	v		10502653						
ANR	10502709	Symbol	f		10502653						
ANR	10502710	Symbol	* val		10502653						
ANR	10502711	Function	write_int32	320:0:7911:8136							
ANR	10502712	FunctionDef	"write_int32 (int v , FILE * f)"		10502711	0					
ANR	10502713	CompoundStatement		322:0:7951:8136	10502711	0					
ANR	10502714	IdentifierDeclStatement	uchar val [ 4 ] ;	323:2:7955:7967	10502711	0	True				
ANR	10502715	IdentifierDecl	val [ 4 ]		10502711	0					
ANR	10502716	IdentifierDeclType	uchar [ 4 ]		10502711	0					
ANR	10502717	Identifier	val		10502711	1					
ANR	10502718	PrimaryExpression	4		10502711	2					
ANR	10502719	ExpressionStatement	val [ 0 ] = ( uchar ) ( v & 0xff )	324:2:7971:7997	10502711	1	True				
ANR	10502720	AssignmentExpression	val [ 0 ] = ( uchar ) ( v & 0xff )		10502711	0		=			
ANR	10502721	ArrayIndexing	val [ 0 ]		10502711	0					
ANR	10502722	Identifier	val		10502711	0					
ANR	10502723	PrimaryExpression	0		10502711	1					
ANR	10502724	CastExpression	( uchar ) ( v & 0xff )		10502711	1					
ANR	10502725	CastTarget	uchar		10502711	0					
ANR	10502726	BitAndExpression	v & 0xff		10502711	1		&			
ANR	10502727	Identifier	v		10502711	0					
ANR	10502728	PrimaryExpression	0xff		10502711	1					
ANR	10502729	ExpressionStatement	val [ 1 ] = ( uchar ) ( ( v >> 8 ) & 0xff )	325:2:8001:8034	10502711	2	True				
ANR	10502730	AssignmentExpression	val [ 1 ] = ( uchar ) ( ( v >> 8 ) & 0xff )		10502711	0		=			
ANR	10502731	ArrayIndexing	val [ 1 ]		10502711	0					
ANR	10502732	Identifier	val		10502711	0					
ANR	10502733	PrimaryExpression	1		10502711	1					
ANR	10502734	CastExpression	( uchar ) ( ( v >> 8 ) & 0xff )		10502711	1					
ANR	10502735	CastTarget	uchar		10502711	0					
ANR	10502736	BitAndExpression	( v >> 8 ) & 0xff		10502711	1		&			
ANR	10502737	ShiftExpression	v >> 8		10502711	0		>>			
ANR	10502738	Identifier	v		10502711	0					
ANR	10502739	PrimaryExpression	8		10502711	1					
ANR	10502740	PrimaryExpression	0xff		10502711	1					
ANR	10502741	ExpressionStatement	val [ 2 ] = ( uchar ) ( ( v >> 16 ) & 0xff )	326:2:8038:8072	10502711	3	True				
ANR	10502742	AssignmentExpression	val [ 2 ] = ( uchar ) ( ( v >> 16 ) & 0xff )		10502711	0		=			
ANR	10502743	ArrayIndexing	val [ 2 ]		10502711	0					
ANR	10502744	Identifier	val		10502711	0					
ANR	10502745	PrimaryExpression	2		10502711	1					
ANR	10502746	CastExpression	( uchar ) ( ( v >> 16 ) & 0xff )		10502711	1					
ANR	10502747	CastTarget	uchar		10502711	0					
ANR	10502748	BitAndExpression	( v >> 16 ) & 0xff		10502711	1		&			
ANR	10502749	ShiftExpression	v >> 16		10502711	0		>>			
ANR	10502750	Identifier	v		10502711	0					
ANR	10502751	PrimaryExpression	16		10502711	1					
ANR	10502752	PrimaryExpression	0xff		10502711	1					
ANR	10502753	ExpressionStatement	val [ 3 ] = ( uchar ) ( ( v >> 24 ) & 0xff )	327:2:8076:8110	10502711	4	True				
ANR	10502754	AssignmentExpression	val [ 3 ] = ( uchar ) ( ( v >> 24 ) & 0xff )		10502711	0		=			
ANR	10502755	ArrayIndexing	val [ 3 ]		10502711	0					
ANR	10502756	Identifier	val		10502711	0					
ANR	10502757	PrimaryExpression	3		10502711	1					
ANR	10502758	CastExpression	( uchar ) ( ( v >> 24 ) & 0xff )		10502711	1					
ANR	10502759	CastTarget	uchar		10502711	0					
ANR	10502760	BitAndExpression	( v >> 24 ) & 0xff		10502711	1		&			
ANR	10502761	ShiftExpression	v >> 24		10502711	0		>>			
ANR	10502762	Identifier	v		10502711	0					
ANR	10502763	PrimaryExpression	24		10502711	1					
ANR	10502764	PrimaryExpression	0xff		10502711	1					
ANR	10502765	ExpressionStatement	"fwrite ( val , 4 , 1 , f )"	328:2:8114:8134	10502711	5	True				
ANR	10502766	CallExpression	"fwrite ( val , 4 , 1 , f )"		10502711	0					
ANR	10502767	Callee	fwrite		10502711	0					
ANR	10502768	Identifier	fwrite		10502711	0					
ANR	10502769	ArgumentList	val		10502711	1					
ANR	10502770	Argument	val		10502711	0					
ANR	10502771	Identifier	val		10502711	0					
ANR	10502772	Argument	4		10502711	1					
ANR	10502773	PrimaryExpression	4		10502711	0					
ANR	10502774	Argument	1		10502711	2					
ANR	10502775	PrimaryExpression	1		10502711	0					
ANR	10502776	Argument	f		10502711	3					
ANR	10502777	Identifier	f		10502711	0					
ANR	10502778	ReturnType	static void		10502711	1					
ANR	10502779	Identifier	write_int32		10502711	2					
ANR	10502780	ParameterList	"int v , FILE * f"		10502711	3					
ANR	10502781	Parameter	int v	321:12:7935:7939	10502711	0	True				
ANR	10502782	ParameterType	int		10502711	0					
ANR	10502783	Identifier	v		10502711	1					
ANR	10502784	Parameter	FILE * f	321:19:7942:7948	10502711	1	True				
ANR	10502785	ParameterType	FILE *		10502711	0					
ANR	10502786	Identifier	f		10502711	1					
ANR	10502787	CFGEntryNode	ENTRY		10502711		True				
ANR	10502788	CFGExitNode	EXIT		10502711		True				
ANR	10502789	Symbol	val		10502711						
ANR	10502790	Symbol	v		10502711						
ANR	10502791	Symbol	f		10502711						
ANR	10502792	Symbol	* val		10502711						
ANR	10502793	Function	seek_bmp_image	331:0:8139:8346							
ANR	10502794	FunctionDef	"seek_bmp_image (Image * self , int y)"		10502793	0					
ANR	10502795	CompoundStatement		333:0:8185:8346	10502793	0					
ANR	10502796	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	334:2:8189:8221	10502793	0	True				
ANR	10502797	IdentifierDecl	* pnm = ( ImagePnm * ) self		10502793	0					
ANR	10502798	IdentifierDeclType	ImagePnm *		10502793	0					
ANR	10502799	Identifier	pnm		10502793	1					
ANR	10502800	AssignmentExpression	* pnm = ( ImagePnm * ) self		10502793	2		=			
ANR	10502801	Identifier	pnm		10502793	0					
ANR	10502802	CastExpression	( ImagePnm * ) self		10502793	1					
ANR	10502803	CastTarget	ImagePnm *		10502793	0					
ANR	10502804	Identifier	self		10502793	1					
ANR	10502805	IdentifierDeclStatement	long pos = BMP_HEADER_SIZE + self -> raster * ( self -> height - y - 1 ) ;	335:2:8225:8291	10502793	1	True				
ANR	10502806	IdentifierDecl	pos = BMP_HEADER_SIZE + self -> raster * ( self -> height - y - 1 )		10502793	0					
ANR	10502807	IdentifierDeclType	long		10502793	0					
ANR	10502808	Identifier	pos		10502793	1					
ANR	10502809	AssignmentExpression	pos = BMP_HEADER_SIZE + self -> raster * ( self -> height - y - 1 )		10502793	2		=			
ANR	10502810	Identifier	pos		10502793	0					
ANR	10502811	AdditiveExpression	BMP_HEADER_SIZE + self -> raster * ( self -> height - y - 1 )		10502793	1		+			
ANR	10502812	Identifier	BMP_HEADER_SIZE		10502793	0					
ANR	10502813	MultiplicativeExpression	self -> raster * ( self -> height - y - 1 )		10502793	1		*			
ANR	10502814	PtrMemberAccess	self -> raster		10502793	0					
ANR	10502815	Identifier	self		10502793	0					
ANR	10502816	Identifier	raster		10502793	1					
ANR	10502817	AdditiveExpression	self -> height - y - 1		10502793	1		-			
ANR	10502818	PtrMemberAccess	self -> height		10502793	0					
ANR	10502819	Identifier	self		10502793	0					
ANR	10502820	Identifier	height		10502793	1					
ANR	10502821	AdditiveExpression	y - 1		10502793	1		-			
ANR	10502822	Identifier	y		10502793	0					
ANR	10502823	PrimaryExpression	1		10502793	1					
ANR	10502824	IdentifierDeclStatement	"int r = fseek ( pnm -> f , pos , SEEK_SET ) ;"	336:2:8295:8331	10502793	2	True				
ANR	10502825	IdentifierDecl	"r = fseek ( pnm -> f , pos , SEEK_SET )"		10502793	0					
ANR	10502826	IdentifierDeclType	int		10502793	0					
ANR	10502827	Identifier	r		10502793	1					
ANR	10502828	AssignmentExpression	"r = fseek ( pnm -> f , pos , SEEK_SET )"		10502793	2		=			
ANR	10502829	Identifier	r		10502793	0					
ANR	10502830	CallExpression	"fseek ( pnm -> f , pos , SEEK_SET )"		10502793	1					
ANR	10502831	Callee	fseek		10502793	0					
ANR	10502832	Identifier	fseek		10502793	0					
ANR	10502833	ArgumentList	pnm -> f		10502793	1					
ANR	10502834	Argument	pnm -> f		10502793	0					
ANR	10502835	PtrMemberAccess	pnm -> f		10502793	0					
ANR	10502836	Identifier	pnm		10502793	0					
ANR	10502837	Identifier	f		10502793	1					
ANR	10502838	Argument	pos		10502793	1					
ANR	10502839	Identifier	pos		10502793	0					
ANR	10502840	Argument	SEEK_SET		10502793	2					
ANR	10502841	Identifier	SEEK_SET		10502793	0					
ANR	10502842	ReturnStatement	return r ;	338:2:8336:8344	10502793	3	True				
ANR	10502843	Identifier	r		10502793	0					
ANR	10502844	ReturnType	static int		10502793	1					
ANR	10502845	Identifier	seek_bmp_image		10502793	2					
ANR	10502846	ParameterList	"Image * self , int y"		10502793	3					
ANR	10502847	Parameter	Image * self	332:15:8165:8175	10502793	0	True				
ANR	10502848	ParameterType	Image *		10502793	0					
ANR	10502849	Identifier	self		10502793	1					
ANR	10502850	Parameter	int y	332:28:8178:8182	10502793	1	True				
ANR	10502851	ParameterType	int		10502793	0					
ANR	10502852	Identifier	y		10502793	1					
ANR	10502853	CFGEntryNode	ENTRY		10502793		True				
ANR	10502854	CFGExitNode	EXIT		10502793		True				
ANR	10502855	Symbol	self -> height		10502793						
ANR	10502856	Symbol	SEEK_SET		10502793						
ANR	10502857	Symbol	pnm -> f		10502793						
ANR	10502858	Symbol	* self		10502793						
ANR	10502859	Symbol	self -> raster		10502793						
ANR	10502860	Symbol	BMP_HEADER_SIZE		10502793						
ANR	10502861	Symbol	fseek		10502793						
ANR	10502862	Symbol	pnm		10502793						
ANR	10502863	Symbol	r		10502793						
ANR	10502864	Symbol	pos		10502793						
ANR	10502865	Symbol	self		10502793						
ANR	10502866	Symbol	y		10502793						
ANR	10502867	Symbol	* pnm		10502793						
ANR	10502868	Function	create_bmp_image	341:0:8349:9985							
ANR	10502869	FunctionDef	"create_bmp_image (Image * templ , const char * path)"		10502868	0					
ANR	10502870	CompoundStatement		343:0:8416:9985	10502868	0					
ANR	10502871	IdentifierDeclStatement	int raster = ( templ -> width * 3 + 3 ) & ~3 ;	344:2:8420:8460	10502868	0	True				
ANR	10502872	IdentifierDecl	raster = ( templ -> width * 3 + 3 ) & ~3		10502868	0					
ANR	10502873	IdentifierDeclType	int		10502868	0					
ANR	10502874	Identifier	raster		10502868	1					
ANR	10502875	AssignmentExpression	raster = ( templ -> width * 3 + 3 ) & ~3		10502868	2		=			
ANR	10502876	Identifier	raster		10502868	0					
ANR	10502877	BitAndExpression	( templ -> width * 3 + 3 ) & ~3		10502868	1		&			
ANR	10502878	AdditiveExpression	templ -> width * 3 + 3		10502868	0		+			
ANR	10502879	MultiplicativeExpression	templ -> width * 3		10502868	0		*			
ANR	10502880	PtrMemberAccess	templ -> width		10502868	0					
ANR	10502881	Identifier	templ		10502868	0					
ANR	10502882	Identifier	width		10502868	1					
ANR	10502883	PrimaryExpression	3		10502868	1					
ANR	10502884	PrimaryExpression	3		10502868	1					
ANR	10502885	Identifier	~3		10502868	1					
ANR	10502886	IdentifierDeclStatement	int nImageSize = raster * templ -> height ;	345:2:8464:8503	10502868	1	True				
ANR	10502887	IdentifierDecl	nImageSize = raster * templ -> height		10502868	0					
ANR	10502888	IdentifierDeclType	int		10502868	0					
ANR	10502889	Identifier	nImageSize		10502868	1					
ANR	10502890	AssignmentExpression	nImageSize = raster * templ -> height		10502868	2		=			
ANR	10502891	Identifier	nImageSize		10502868	0					
ANR	10502892	MultiplicativeExpression	raster * templ -> height		10502868	1		*			
ANR	10502893	Identifier	raster		10502868	0					
ANR	10502894	PtrMemberAccess	templ -> height		10502868	1					
ANR	10502895	Identifier	templ		10502868	0					
ANR	10502896	Identifier	height		10502868	1					
ANR	10502897	IdentifierDeclStatement	int nFileSize = BMP_HEADER_SIZE + nImageSize ;	346:2:8507:8551	10502868	2	True				
ANR	10502898	IdentifierDecl	nFileSize = BMP_HEADER_SIZE + nImageSize		10502868	0					
ANR	10502899	IdentifierDeclType	int		10502868	0					
ANR	10502900	Identifier	nFileSize		10502868	1					
ANR	10502901	AssignmentExpression	nFileSize = BMP_HEADER_SIZE + nImageSize		10502868	2		=			
ANR	10502902	Identifier	nFileSize		10502868	0					
ANR	10502903	AdditiveExpression	BMP_HEADER_SIZE + nImageSize		10502868	1		+			
ANR	10502904	Identifier	BMP_HEADER_SIZE		10502868	0					
ANR	10502905	Identifier	nImageSize		10502868	1					
ANR	10502906	IdentifierDeclStatement	"ImagePnm * pnm = create_pnm_image_struct ( templ , path ) ;"	347:2:8555:8607	10502868	3	True				
ANR	10502907	IdentifierDecl	"* pnm = create_pnm_image_struct ( templ , path )"		10502868	0					
ANR	10502908	IdentifierDeclType	ImagePnm *		10502868	0					
ANR	10502909	Identifier	pnm		10502868	1					
ANR	10502910	AssignmentExpression	"* pnm = create_pnm_image_struct ( templ , path )"		10502868	2		=			
ANR	10502911	Identifier	pnm		10502868	0					
ANR	10502912	CallExpression	"create_pnm_image_struct ( templ , path )"		10502868	1					
ANR	10502913	Callee	create_pnm_image_struct		10502868	0					
ANR	10502914	Identifier	create_pnm_image_struct		10502868	0					
ANR	10502915	ArgumentList	templ		10502868	1					
ANR	10502916	Argument	templ		10502868	0					
ANR	10502917	Identifier	templ		10502868	0					
ANR	10502918	Argument	path		10502868	1					
ANR	10502919	Identifier	path		10502868	0					
ANR	10502920	IfStatement	if ( pnm == NULL )		10502868	4					
ANR	10502921	Condition	pnm == NULL	349:6:8616:8626	10502868	0	True				
ANR	10502922	EqualityExpression	pnm == NULL		10502868	0		==			
ANR	10502923	Identifier	pnm		10502868	0					
ANR	10502924	Identifier	NULL		10502868	1					
ANR	10502925	ReturnStatement	return NULL ;	350:4:8633:8644	10502868	1	True				
ANR	10502926	Identifier	NULL		10502868	0					
ANR	10502927	ExpressionStatement	pnm -> super . seek = seek_bmp_image	351:2:8648:8680	10502868	5	True				
ANR	10502928	AssignmentExpression	pnm -> super . seek = seek_bmp_image		10502868	0		=			
ANR	10502929	MemberAccess	pnm -> super . seek		10502868	0					
ANR	10502930	PtrMemberAccess	pnm -> super		10502868	0					
ANR	10502931	Identifier	pnm		10502868	0					
ANR	10502932	Identifier	super		10502868	1					
ANR	10502933	Identifier	seek		10502868	1					
ANR	10502934	Identifier	seek_bmp_image		10502868	1					
ANR	10502935	ExpressionStatement	pnm -> super . write = write	352:2:8684:8708	10502868	6	True				
ANR	10502936	AssignmentExpression	pnm -> super . write = write		10502868	0		=			
ANR	10502937	MemberAccess	pnm -> super . write		10502868	0					
ANR	10502938	PtrMemberAccess	pnm -> super		10502868	0					
ANR	10502939	Identifier	pnm		10502868	0					
ANR	10502940	Identifier	super		10502868	1					
ANR	10502941	Identifier	write		10502868	1					
ANR	10502942	Identifier	write		10502868	1					
ANR	10502943	ExpressionStatement	pnm -> super . raster = raster	353:2:8712:8738	10502868	7	True				
ANR	10502944	AssignmentExpression	pnm -> super . raster = raster		10502868	0		=			
ANR	10502945	MemberAccess	pnm -> super . raster		10502868	0					
ANR	10502946	PtrMemberAccess	pnm -> super		10502868	0					
ANR	10502947	Identifier	pnm		10502868	0					
ANR	10502948	Identifier	super		10502868	1					
ANR	10502949	Identifier	raster		10502868	1					
ANR	10502950	Identifier	raster		10502868	1					
ANR	10502951	ExpressionStatement	"fputc ( 'B' , pnm -> f )"	356:2:8767:8785	10502868	8	True				
ANR	10502952	CallExpression	"fputc ( 'B' , pnm -> f )"		10502868	0					
ANR	10502953	Callee	fputc		10502868	0					
ANR	10502954	Identifier	fputc		10502868	0					
ANR	10502955	ArgumentList	'B'		10502868	1					
ANR	10502956	Argument	'B'		10502868	0					
ANR	10502957	PrimaryExpression	'B'		10502868	0					
ANR	10502958	Argument	pnm -> f		10502868	1					
ANR	10502959	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10502960	Identifier	pnm		10502868	0					
ANR	10502961	Identifier	f		10502868	1					
ANR	10502962	ExpressionStatement	"fputc ( 'M' , pnm -> f )"	357:2:8789:8807	10502868	9	True				
ANR	10502963	CallExpression	"fputc ( 'M' , pnm -> f )"		10502868	0					
ANR	10502964	Callee	fputc		10502868	0					
ANR	10502965	Identifier	fputc		10502868	0					
ANR	10502966	ArgumentList	'M'		10502868	1					
ANR	10502967	Argument	'M'		10502868	0					
ANR	10502968	PrimaryExpression	'M'		10502868	0					
ANR	10502969	Argument	pnm -> f		10502868	1					
ANR	10502970	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10502971	Identifier	pnm		10502868	0					
ANR	10502972	Identifier	f		10502868	1					
ANR	10502973	ExpressionStatement	"write_int32 ( nFileSize , pnm -> f )"	358:2:8811:8841	10502868	10	True				
ANR	10502974	CallExpression	"write_int32 ( nFileSize , pnm -> f )"		10502868	0					
ANR	10502975	Callee	write_int32		10502868	0					
ANR	10502976	Identifier	write_int32		10502868	0					
ANR	10502977	ArgumentList	nFileSize		10502868	1					
ANR	10502978	Argument	nFileSize		10502868	0					
ANR	10502979	Identifier	nFileSize		10502868	0					
ANR	10502980	Argument	pnm -> f		10502868	1					
ANR	10502981	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10502982	Identifier	pnm		10502868	0					
ANR	10502983	Identifier	f		10502868	1					
ANR	10502984	ExpressionStatement	"write_int16 ( 0 , pnm -> f )"	359:2:8845:8867	10502868	11	True				
ANR	10502985	CallExpression	"write_int16 ( 0 , pnm -> f )"		10502868	0					
ANR	10502986	Callee	write_int16		10502868	0					
ANR	10502987	Identifier	write_int16		10502868	0					
ANR	10502988	ArgumentList	0		10502868	1					
ANR	10502989	Argument	0		10502868	0					
ANR	10502990	PrimaryExpression	0		10502868	0					
ANR	10502991	Argument	pnm -> f		10502868	1					
ANR	10502992	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10502993	Identifier	pnm		10502868	0					
ANR	10502994	Identifier	f		10502868	1					
ANR	10502995	ExpressionStatement	"write_int16 ( 0 , pnm -> f )"	360:2:8902:8924	10502868	12	True				
ANR	10502996	CallExpression	"write_int16 ( 0 , pnm -> f )"		10502868	0					
ANR	10502997	Callee	write_int16		10502868	0					
ANR	10502998	Identifier	write_int16		10502868	0					
ANR	10502999	ArgumentList	0		10502868	1					
ANR	10503000	Argument	0		10502868	0					
ANR	10503001	PrimaryExpression	0		10502868	0					
ANR	10503002	Argument	pnm -> f		10502868	1					
ANR	10503003	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503004	Identifier	pnm		10502868	0					
ANR	10503005	Identifier	f		10502868	1					
ANR	10503006	ExpressionStatement	"write_int32 ( BMP_HEADER_SIZE , pnm -> f )"	361:2:8928:8964	10502868	13	True				
ANR	10503007	CallExpression	"write_int32 ( BMP_HEADER_SIZE , pnm -> f )"		10502868	0					
ANR	10503008	Callee	write_int32		10502868	0					
ANR	10503009	Identifier	write_int32		10502868	0					
ANR	10503010	ArgumentList	BMP_HEADER_SIZE		10502868	1					
ANR	10503011	Argument	BMP_HEADER_SIZE		10502868	0					
ANR	10503012	Identifier	BMP_HEADER_SIZE		10502868	0					
ANR	10503013	Argument	pnm -> f		10502868	1					
ANR	10503014	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503015	Identifier	pnm		10502868	0					
ANR	10503016	Identifier	f		10502868	1					
ANR	10503017	ExpressionStatement	"write_int32 ( BMP_INFO_HEADER_SIZE , pnm -> f )"	364:2:8993:9034	10502868	14	True				
ANR	10503018	CallExpression	"write_int32 ( BMP_INFO_HEADER_SIZE , pnm -> f )"		10502868	0					
ANR	10503019	Callee	write_int32		10502868	0					
ANR	10503020	Identifier	write_int32		10502868	0					
ANR	10503021	ArgumentList	BMP_INFO_HEADER_SIZE		10502868	1					
ANR	10503022	Argument	BMP_INFO_HEADER_SIZE		10502868	0					
ANR	10503023	Identifier	BMP_INFO_HEADER_SIZE		10502868	0					
ANR	10503024	Argument	pnm -> f		10502868	1					
ANR	10503025	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503026	Identifier	pnm		10502868	0					
ANR	10503027	Identifier	f		10502868	1					
ANR	10503028	ExpressionStatement	"write_int32 ( templ -> width , pnm -> f )"	365:2:9038:9071	10502868	15	True				
ANR	10503029	CallExpression	"write_int32 ( templ -> width , pnm -> f )"		10502868	0					
ANR	10503030	Callee	write_int32		10502868	0					
ANR	10503031	Identifier	write_int32		10502868	0					
ANR	10503032	ArgumentList	templ -> width		10502868	1					
ANR	10503033	Argument	templ -> width		10502868	0					
ANR	10503034	PtrMemberAccess	templ -> width		10502868	0					
ANR	10503035	Identifier	templ		10502868	0					
ANR	10503036	Identifier	width		10502868	1					
ANR	10503037	Argument	pnm -> f		10502868	1					
ANR	10503038	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503039	Identifier	pnm		10502868	0					
ANR	10503040	Identifier	f		10502868	1					
ANR	10503041	ExpressionStatement	"write_int32 ( pnm -> super . height , pnm -> f )"	366:2:9075:9113	10502868	16	True				
ANR	10503042	CallExpression	"write_int32 ( pnm -> super . height , pnm -> f )"		10502868	0					
ANR	10503043	Callee	write_int32		10502868	0					
ANR	10503044	Identifier	write_int32		10502868	0					
ANR	10503045	ArgumentList	pnm -> super . height		10502868	1					
ANR	10503046	Argument	pnm -> super . height		10502868	0					
ANR	10503047	MemberAccess	pnm -> super . height		10502868	0					
ANR	10503048	PtrMemberAccess	pnm -> super		10502868	0					
ANR	10503049	Identifier	pnm		10502868	0					
ANR	10503050	Identifier	super		10502868	1					
ANR	10503051	Identifier	height		10502868	1					
ANR	10503052	Argument	pnm -> f		10502868	1					
ANR	10503053	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503054	Identifier	pnm		10502868	0					
ANR	10503055	Identifier	f		10502868	1					
ANR	10503056	ExpressionStatement	"write_int16 ( 1 , pnm -> f )"	367:2:9117:9139	10502868	17	True				
ANR	10503057	CallExpression	"write_int16 ( 1 , pnm -> f )"		10502868	0					
ANR	10503058	Callee	write_int16		10502868	0					
ANR	10503059	Identifier	write_int16		10502868	0					
ANR	10503060	ArgumentList	1		10502868	1					
ANR	10503061	Argument	1		10502868	0					
ANR	10503062	PrimaryExpression	1		10502868	0					
ANR	10503063	Argument	pnm -> f		10502868	1					
ANR	10503064	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503065	Identifier	pnm		10502868	0					
ANR	10503066	Identifier	f		10502868	1					
ANR	10503067	ExpressionStatement	"write_int16 ( 24 , pnm -> f )"	368:2:9156:9179	10502868	18	True				
ANR	10503068	CallExpression	"write_int16 ( 24 , pnm -> f )"		10502868	0					
ANR	10503069	Callee	write_int16		10502868	0					
ANR	10503070	Identifier	write_int16		10502868	0					
ANR	10503071	ArgumentList	24		10502868	1					
ANR	10503072	Argument	24		10502868	0					
ANR	10503073	PrimaryExpression	24		10502868	0					
ANR	10503074	Argument	pnm -> f		10502868	1					
ANR	10503075	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503076	Identifier	pnm		10502868	0					
ANR	10503077	Identifier	f		10502868	1					
ANR	10503078	ExpressionStatement	"write_int32 ( 1 , pnm -> f )"	369:2:9199:9221	10502868	19	True				
ANR	10503079	CallExpression	"write_int32 ( 1 , pnm -> f )"		10502868	0					
ANR	10503080	Callee	write_int32		10502868	0					
ANR	10503081	Identifier	write_int32		10502868	0					
ANR	10503082	ArgumentList	1		10502868	1					
ANR	10503083	Argument	1		10502868	0					
ANR	10503084	PrimaryExpression	1		10502868	0					
ANR	10503085	Argument	pnm -> f		10502868	1					
ANR	10503086	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503087	Identifier	pnm		10502868	0					
ANR	10503088	Identifier	f		10502868	1					
ANR	10503089	ExpressionStatement	"write_int32 ( 0 , pnm -> f )"	370:2:9243:9265	10502868	20	True				
ANR	10503090	CallExpression	"write_int32 ( 0 , pnm -> f )"		10502868	0					
ANR	10503091	Callee	write_int32		10502868	0					
ANR	10503092	Identifier	write_int32		10502868	0					
ANR	10503093	ArgumentList	0		10502868	1					
ANR	10503094	Argument	0		10502868	0					
ANR	10503095	PrimaryExpression	0		10502868	0					
ANR	10503096	Argument	pnm -> f		10502868	1					
ANR	10503097	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503098	Identifier	pnm		10502868	0					
ANR	10503099	Identifier	f		10502868	1					
ANR	10503100	ExpressionStatement	"write_int32 ( 3780 , pnm -> f )"	371:2:9286:9311	10502868	21	True				
ANR	10503101	CallExpression	"write_int32 ( 3780 , pnm -> f )"		10502868	0					
ANR	10503102	Callee	write_int32		10502868	0					
ANR	10503103	Identifier	write_int32		10502868	0					
ANR	10503104	ArgumentList	3780		10502868	1					
ANR	10503105	Argument	3780		10502868	0					
ANR	10503106	PrimaryExpression	3780		10502868	0					
ANR	10503107	Argument	pnm -> f		10502868	1					
ANR	10503108	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503109	Identifier	pnm		10502868	0					
ANR	10503110	Identifier	f		10502868	1					
ANR	10503111	ExpressionStatement	"write_int32 ( 3780 , pnm -> f )"	372:2:9352:9377	10502868	22	True				
ANR	10503112	CallExpression	"write_int32 ( 3780 , pnm -> f )"		10502868	0					
ANR	10503113	Callee	write_int32		10502868	0					
ANR	10503114	Identifier	write_int32		10502868	0					
ANR	10503115	ArgumentList	3780		10502868	1					
ANR	10503116	Argument	3780		10502868	0					
ANR	10503117	PrimaryExpression	3780		10502868	0					
ANR	10503118	Argument	pnm -> f		10502868	1					
ANR	10503119	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503120	Identifier	pnm		10502868	0					
ANR	10503121	Identifier	f		10502868	1					
ANR	10503122	ExpressionStatement	"write_int32 ( 0 , pnm -> f )"	373:2:9408:9430	10502868	23	True				
ANR	10503123	CallExpression	"write_int32 ( 0 , pnm -> f )"		10502868	0					
ANR	10503124	Callee	write_int32		10502868	0					
ANR	10503125	Identifier	write_int32		10502868	0					
ANR	10503126	ArgumentList	0		10502868	1					
ANR	10503127	Argument	0		10502868	0					
ANR	10503128	PrimaryExpression	0		10502868	0					
ANR	10503129	Argument	pnm -> f		10502868	1					
ANR	10503130	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503131	Identifier	pnm		10502868	0					
ANR	10503132	Identifier	f		10502868	1					
ANR	10503133	ExpressionStatement	"write_int32 ( 0 , pnm -> f )"	374:2:9448:9470	10502868	24	True				
ANR	10503134	CallExpression	"write_int32 ( 0 , pnm -> f )"		10502868	0					
ANR	10503135	Callee	write_int32		10502868	0					
ANR	10503136	Identifier	write_int32		10502868	0					
ANR	10503137	ArgumentList	0		10502868	1					
ANR	10503138	Argument	0		10502868	0					
ANR	10503139	PrimaryExpression	0		10502868	0					
ANR	10503140	Argument	pnm -> f		10502868	1					
ANR	10503141	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503142	Identifier	pnm		10502868	0					
ANR	10503143	Identifier	f		10502868	1					
ANR	10503144	CompoundStatement		37:4:1207:1238	10502868	25					
ANR	10503145	IdentifierDeclStatement	uchar * linebuf = malloc ( raster ) ;	379:4:9624:9655	10502868	0	True				
ANR	10503146	IdentifierDecl	* linebuf = malloc ( raster )		10502868	0					
ANR	10503147	IdentifierDeclType	uchar *		10502868	0					
ANR	10503148	Identifier	linebuf		10502868	1					
ANR	10503149	AssignmentExpression	* linebuf = malloc ( raster )		10502868	2		=			
ANR	10503150	Identifier	linebuf		10502868	0					
ANR	10503151	CallExpression	malloc ( raster )		10502868	1					
ANR	10503152	Callee	malloc		10502868	0					
ANR	10503153	Identifier	malloc		10502868	0					
ANR	10503154	ArgumentList	raster		10502868	1					
ANR	10503155	Argument	raster		10502868	0					
ANR	10503156	Identifier	raster		10502868	0					
ANR	10503157	IfStatement	if ( linebuf == NULL )		10502868	1					
ANR	10503158	Condition	linebuf == NULL	380:8:9665:9679	10502868	0	True				
ANR	10503159	EqualityExpression	linebuf == NULL		10502868	0		==			
ANR	10503160	Identifier	linebuf		10502868	0					
ANR	10503161	Identifier	NULL		10502868	1					
ANR	10503162	CompoundStatement		38:25:1265:1265	10502868	1					
ANR	10503163	ExpressionStatement	"printf ( ""Couldn't allocate dummy bmp line buffer; diff image may be corrupt.\\n"" )"	381:8:9692:9772	10502868	0	True				
ANR	10503164	CallExpression	"printf ( ""Couldn't allocate dummy bmp line buffer; diff image may be corrupt.\\n"" )"		10502868	0					
ANR	10503165	Callee	printf		10502868	0					
ANR	10503166	Identifier	printf		10502868	0					
ANR	10503167	ArgumentList	"""Couldn't allocate dummy bmp line buffer; diff image may be corrupt.\\n"""		10502868	1					
ANR	10503168	Argument	"""Couldn't allocate dummy bmp line buffer; diff image may be corrupt.\\n"""		10502868	0					
ANR	10503169	PrimaryExpression	"""Couldn't allocate dummy bmp line buffer; diff image may be corrupt.\\n"""		10502868	0					
ANR	10503170	ElseStatement	else		10502868	0					
ANR	10503171	CompoundStatement		41:8:1378:1383	10502868	0					
ANR	10503172	IdentifierDeclStatement	int k ;	383:8:9795:9800	10502868	0	True				
ANR	10503173	IdentifierDecl	k		10502868	0					
ANR	10503174	IdentifierDeclType	int		10502868	0					
ANR	10503175	Identifier	k		10502868	1					
ANR	10503176	ExpressionStatement	"memset ( linebuf , 0 , raster )"	385:8:9811:9837	10502868	1	True				
ANR	10503177	CallExpression	"memset ( linebuf , 0 , raster )"		10502868	0					
ANR	10503178	Callee	memset		10502868	0					
ANR	10503179	Identifier	memset		10502868	0					
ANR	10503180	ArgumentList	linebuf		10502868	1					
ANR	10503181	Argument	linebuf		10502868	0					
ANR	10503182	Identifier	linebuf		10502868	0					
ANR	10503183	Argument	0		10502868	1					
ANR	10503184	PrimaryExpression	0		10502868	0					
ANR	10503185	Argument	raster		10502868	2					
ANR	10503186	Identifier	raster		10502868	0					
ANR	10503187	ForStatement	for ( k = 0 ; k < pnm -> super . height ; k ++ )		10502868	2					
ANR	10503188	ForInit	k = 0 ;	387:13:9853:9858	10502868	0	True				
ANR	10503189	AssignmentExpression	k = 0		10502868	0		=			
ANR	10503190	Identifier	k		10502868	0					
ANR	10503191	PrimaryExpression	0		10502868	1					
ANR	10503192	Condition	k < pnm -> super . height	387:20:9860:9880	10502868	1	True				
ANR	10503193	RelationalExpression	k < pnm -> super . height		10502868	0		<			
ANR	10503194	Identifier	k		10502868	0					
ANR	10503195	MemberAccess	pnm -> super . height		10502868	1					
ANR	10503196	PtrMemberAccess	pnm -> super		10502868	0					
ANR	10503197	Identifier	pnm		10502868	0					
ANR	10503198	Identifier	super		10502868	1					
ANR	10503199	Identifier	height		10502868	1					
ANR	10503200	PostIncDecOperationExpression	k ++	387:43:9883:9885	10502868	2	True				
ANR	10503201	Identifier	k		10502868	0					
ANR	10503202	IncDec	++		10502868	1					
ANR	10503203	ExpressionStatement	"fwrite ( linebuf , 1 , raster , pnm -> f )"	388:12:9900:9934	10502868	3	True				
ANR	10503204	CallExpression	"fwrite ( linebuf , 1 , raster , pnm -> f )"		10502868	0					
ANR	10503205	Callee	fwrite		10502868	0					
ANR	10503206	Identifier	fwrite		10502868	0					
ANR	10503207	ArgumentList	linebuf		10502868	1					
ANR	10503208	Argument	linebuf		10502868	0					
ANR	10503209	Identifier	linebuf		10502868	0					
ANR	10503210	Argument	1		10502868	1					
ANR	10503211	PrimaryExpression	1		10502868	0					
ANR	10503212	Argument	raster		10502868	2					
ANR	10503213	Identifier	raster		10502868	0					
ANR	10503214	Argument	pnm -> f		10502868	3					
ANR	10503215	PtrMemberAccess	pnm -> f		10502868	0					
ANR	10503216	Identifier	pnm		10502868	0					
ANR	10503217	Identifier	f		10502868	1					
ANR	10503218	ExpressionStatement	free ( linebuf )	390:8:9945:9958	10502868	3	True				
ANR	10503219	CallExpression	free ( linebuf )		10502868	0					
ANR	10503220	Callee	free		10502868	0					
ANR	10503221	Identifier	free		10502868	0					
ANR	10503222	ArgumentList	linebuf		10502868	1					
ANR	10503223	Argument	linebuf		10502868	0					
ANR	10503224	Identifier	linebuf		10502868	0					
ANR	10503225	ReturnStatement	return pnm ;	394:2:9973:9983	10502868	26	True				
ANR	10503226	Identifier	pnm		10502868	0					
ANR	10503227	ReturnType	static ImagePnm *		10502868	1					
ANR	10503228	Identifier	create_bmp_image		10502868	2					
ANR	10503229	ParameterList	"Image * templ , const char * path"		10502868	3					
ANR	10503230	Parameter	Image * templ	342:17:8384:8395	10502868	0	True				
ANR	10503231	ParameterType	Image *		10502868	0					
ANR	10503232	Identifier	templ		10502868	1					
ANR	10503233	Parameter	const char * path	342:31:8398:8413	10502868	1	True				
ANR	10503234	ParameterType	const char *		10502868	0					
ANR	10503235	Identifier	path		10502868	1					
ANR	10503236	CFGEntryNode	ENTRY		10502868		True				
ANR	10503237	CFGExitNode	EXIT		10502868		True				
ANR	10503238	Symbol	nFileSize		10502868						
ANR	10503239	Symbol	pnm -> f		10502868						
ANR	10503240	Symbol	templ -> width		10502868						
ANR	10503241	Symbol	nImageSize		10502868						
ANR	10503242	Symbol	templ -> height		10502868						
ANR	10503243	Symbol	BMP_HEADER_SIZE		10502868						
ANR	10503244	Symbol	templ		10502868						
ANR	10503245	Symbol	BMP_INFO_HEADER_SIZE		10502868						
ANR	10503246	Symbol	pnm -> super		10502868						
ANR	10503247	Symbol	path		10502868						
ANR	10503248	Symbol	* templ		10502868						
ANR	10503249	Symbol	* pnm		10502868						
ANR	10503250	Symbol	write		10502868						
ANR	10503251	Symbol	malloc		10502868						
ANR	10503252	Symbol	create_pnm_image_struct		10502868						
ANR	10503253	Symbol	NULL		10502868						
ANR	10503254	Symbol	pnm -> super . seek		10502868						
ANR	10503255	Symbol	pnm -> super . write		10502868						
ANR	10503256	Symbol	raster		10502868						
ANR	10503257	Symbol	k		10502868						
ANR	10503258	Symbol	pnm		10502868						
ANR	10503259	Symbol	linebuf		10502868						
ANR	10503260	Symbol	~3		10502868						
ANR	10503261	Symbol	pnm -> super . height		10502868						
ANR	10503262	Symbol	pnm -> super . raster		10502868						
ANR	10503263	Symbol	seek_bmp_image		10502868						
ANR	10503264	DeclStmt									
ANR	10503265	Decl							uchar	uchar [ 65000 ]	rawCompressionBuffer
ANR	10503266	Function	compressedWrite	399:0:10031:10352							
ANR	10503267	FunctionDef	"compressedWrite (Image * self , uchar * out_buf , int out_buffer_size)"		10503266	0					
ANR	10503268	CompoundStatement		400:66:10108:10352	10503266	0					
ANR	10503269	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	401:2:10112:10144	10503266	0	True				
ANR	10503270	IdentifierDecl	* pnm = ( ImagePnm * ) self		10503266	0					
ANR	10503271	IdentifierDeclType	ImagePnm *		10503266	0					
ANR	10503272	Identifier	pnm		10503266	1					
ANR	10503273	AssignmentExpression	* pnm = ( ImagePnm * ) self		10503266	2		=			
ANR	10503274	Identifier	pnm		10503266	0					
ANR	10503275	CastExpression	( ImagePnm * ) self		10503266	1					
ANR	10503276	CastTarget	ImagePnm *		10503266	0					
ANR	10503277	Identifier	self		10503266	1					
ANR	10503278	IdentifierDeclStatement	int p ;	402:2:10148:10153	10503266	1	True				
ANR	10503279	IdentifierDecl	p		10503266	0					
ANR	10503280	IdentifierDeclType	int		10503266	0					
ANR	10503281	Identifier	p		10503266	1					
ANR	10503282	IdentifierDeclStatement	int t ;	403:2:10157:10162	10503266	2	True				
ANR	10503283	IdentifierDecl	t		10503266	0					
ANR	10503284	IdentifierDeclType	int		10503266	0					
ANR	10503285	Identifier	t		10503266	1					
ANR	10503286	ForStatement	for ( p = 0 ; p < 3 ; p ++ )		10503266	3					
ANR	10503287	ForInit	p = 0 ;	404:7:10171:10174	10503266	0	True				
ANR	10503288	AssignmentExpression	p = 0		10503266	0		=			
ANR	10503289	Identifier	p		10503266	0					
ANR	10503290	PrimaryExpression	0		10503266	1					
ANR	10503291	Condition	p < 3	404:13:10177:10179	10503266	1	True				
ANR	10503292	RelationalExpression	p < 3		10503266	0		<			
ANR	10503293	Identifier	p		10503266	0					
ANR	10503294	PrimaryExpression	3		10503266	1					
ANR	10503295	PostIncDecOperationExpression	p ++	404:19:10183:10185	10503266	2	True				
ANR	10503296	Identifier	p		10503266	0					
ANR	10503297	IncDec	++		10503266	1					
ANR	10503298	CompoundStatement		5:24:79:79	10503266	3					
ANR	10503299	ExpressionStatement	"t = packBits ( out_buf + p , rawCompressionBuffer , out_buffer_size / 3 , 3 )"	405:4:10194:10256	10503266	0	True				
ANR	10503300	AssignmentExpression	"t = packBits ( out_buf + p , rawCompressionBuffer , out_buffer_size / 3 , 3 )"		10503266	0		=			
ANR	10503301	Identifier	t		10503266	0					
ANR	10503302	CallExpression	"packBits ( out_buf + p , rawCompressionBuffer , out_buffer_size / 3 , 3 )"		10503266	1					
ANR	10503303	Callee	packBits		10503266	0					
ANR	10503304	Identifier	packBits		10503266	0					
ANR	10503305	ArgumentList	out_buf + p		10503266	1					
ANR	10503306	Argument	out_buf + p		10503266	0					
ANR	10503307	AdditiveExpression	out_buf + p		10503266	0		+			
ANR	10503308	Identifier	out_buf		10503266	0					
ANR	10503309	Identifier	p		10503266	1					
ANR	10503310	Argument	rawCompressionBuffer		10503266	1					
ANR	10503311	Identifier	rawCompressionBuffer		10503266	0					
ANR	10503312	Argument	out_buffer_size / 3		10503266	2					
ANR	10503313	MultiplicativeExpression	out_buffer_size / 3		10503266	0		/			
ANR	10503314	Identifier	out_buffer_size		10503266	0					
ANR	10503315	PrimaryExpression	3		10503266	1					
ANR	10503316	Argument	3		10503266	3					
ANR	10503317	PrimaryExpression	3		10503266	0					
ANR	10503318	IfStatement	"if ( fwrite ( rawCompressionBuffer , t , 1 , pnm -> f ) != 1 )"		10503266	1					
ANR	10503319	Condition	"fwrite ( rawCompressionBuffer , t , 1 , pnm -> f ) != 1"	406:8:10266:10307	10503266	0	True				
ANR	10503320	EqualityExpression	"fwrite ( rawCompressionBuffer , t , 1 , pnm -> f ) != 1"		10503266	0		!=			
ANR	10503321	CallExpression	"fwrite ( rawCompressionBuffer , t , 1 , pnm -> f )"		10503266	0					
ANR	10503322	Callee	fwrite		10503266	0					
ANR	10503323	Identifier	fwrite		10503266	0					
ANR	10503324	ArgumentList	rawCompressionBuffer		10503266	1					
ANR	10503325	Argument	rawCompressionBuffer		10503266	0					
ANR	10503326	Identifier	rawCompressionBuffer		10503266	0					
ANR	10503327	Argument	t		10503266	1					
ANR	10503328	Identifier	t		10503266	0					
ANR	10503329	Argument	1		10503266	2					
ANR	10503330	PrimaryExpression	1		10503266	0					
ANR	10503331	Argument	pnm -> f		10503266	3					
ANR	10503332	PtrMemberAccess	pnm -> f		10503266	0					
ANR	10503333	Identifier	pnm		10503266	0					
ANR	10503334	Identifier	f		10503266	1					
ANR	10503335	PrimaryExpression	1		10503266	1					
ANR	10503336	CompoundStatement		7:52:201:201	10503266	1					
ANR	10503337	ReturnStatement	return ( 1 ) ;	407:6:10318:10327	10503266	0	True				
ANR	10503338	PrimaryExpression	1		10503266	0					
ANR	10503339	ReturnStatement	return ( 0 ) ;	410:2:10341:10350	10503266	4	True				
ANR	10503340	PrimaryExpression	0		10503266	0					
ANR	10503341	ReturnType	static int		10503266	1					
ANR	10503342	Identifier	compressedWrite		10503266	2					
ANR	10503343	ParameterList	"Image * self , uchar * out_buf , int out_buffer_size"		10503266	3					
ANR	10503344	Parameter	Image * self	400:16:10058:10068	10503266	0	True				
ANR	10503345	ParameterType	Image *		10503266	0					
ANR	10503346	Identifier	self		10503266	1					
ANR	10503347	Parameter	uchar * out_buf	400:29:10071:10084	10503266	1	True				
ANR	10503348	ParameterType	uchar *		10503266	0					
ANR	10503349	Identifier	out_buf		10503266	1					
ANR	10503350	Parameter	int out_buffer_size	400:45:10087:10105	10503266	2	True				
ANR	10503351	ParameterType	int		10503266	0					
ANR	10503352	Identifier	out_buffer_size		10503266	1					
ANR	10503353	CFGEntryNode	ENTRY		10503266		True				
ANR	10503354	CFGExitNode	EXIT		10503266		True				
ANR	10503355	Symbol	p		10503266						
ANR	10503356	Symbol	pnm -> f		10503266						
ANR	10503357	Symbol	t		10503266						
ANR	10503358	Symbol	out_buf		10503266						
ANR	10503359	Symbol	self		10503266						
ANR	10503360	Symbol	fwrite		10503266						
ANR	10503361	Symbol	* pnm		10503266						
ANR	10503362	Symbol	rawCompressionBuffer		10503266						
ANR	10503363	Symbol	out_buffer_size		10503266						
ANR	10503364	Symbol	packBits		10503266						
ANR	10503365	Symbol	pnm		10503266						
ANR	10503366	Function	create_raw_image_struct	413:0:10355:10924							
ANR	10503367	FunctionDef	"create_raw_image_struct (Image * templ , const char * path)"		10503366	0					
ANR	10503368	CompoundStatement		415:0:10429:10924	10503366	0					
ANR	10503369	IdentifierDeclStatement	"FILE * f = fopen ( path , ""w+b"" ) ;"	416:2:10433:10460	10503366	0	True				
ANR	10503370	IdentifierDecl	"* f = fopen ( path , ""w+b"" )"		10503366	0					
ANR	10503371	IdentifierDeclType	FILE *		10503366	0					
ANR	10503372	Identifier	f		10503366	1					
ANR	10503373	AssignmentExpression	"* f = fopen ( path , ""w+b"" )"		10503366	2		=			
ANR	10503374	Identifier	f		10503366	0					
ANR	10503375	CallExpression	"fopen ( path , ""w+b"" )"		10503366	1					
ANR	10503376	Callee	fopen		10503366	0					
ANR	10503377	Identifier	fopen		10503366	0					
ANR	10503378	ArgumentList	path		10503366	1					
ANR	10503379	Argument	path		10503366	0					
ANR	10503380	Identifier	path		10503366	0					
ANR	10503381	Argument	"""w+b"""		10503366	1					
ANR	10503382	PrimaryExpression	"""w+b"""		10503366	0					
ANR	10503383	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) ) ;	417:2:10464:10516	10503366	1	True				
ANR	10503384	IdentifierDecl	* pnm = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10503366	0					
ANR	10503385	IdentifierDeclType	ImagePnm *		10503366	0					
ANR	10503386	Identifier	pnm		10503366	1					
ANR	10503387	AssignmentExpression	* pnm = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10503366	2		=			
ANR	10503388	Identifier	pnm		10503366	0					
ANR	10503389	CastExpression	( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10503366	1					
ANR	10503390	CastTarget	ImagePnm *		10503366	0					
ANR	10503391	CallExpression	malloc ( sizeof ( ImagePnm ) )		10503366	1					
ANR	10503392	Callee	malloc		10503366	0					
ANR	10503393	Identifier	malloc		10503366	0					
ANR	10503394	ArgumentList	sizeof ( ImagePnm )		10503366	1					
ANR	10503395	Argument	sizeof ( ImagePnm )		10503366	0					
ANR	10503396	SizeofExpression	sizeof ( ImagePnm )		10503366	0					
ANR	10503397	Sizeof	sizeof		10503366	0					
ANR	10503398	SizeofOperand	ImagePnm		10503366	1					
ANR	10503399	IfStatement	if ( pnm == NULL )		10503366	2					
ANR	10503400	Condition	pnm == NULL	419:6:10525:10535	10503366	0	True				
ANR	10503401	EqualityExpression	pnm == NULL		10503366	0		==			
ANR	10503402	Identifier	pnm		10503366	0					
ANR	10503403	Identifier	NULL		10503366	1					
ANR	10503404	CompoundStatement		5:19:108:108	10503366	1					
ANR	10503405	ExpressionStatement	"printf ( ""Insufficient RAM.\\n"" )"	420:4:10544:10574	10503366	0	True				
ANR	10503406	CallExpression	"printf ( ""Insufficient RAM.\\n"" )"		10503366	0					
ANR	10503407	Callee	printf		10503366	0					
ANR	10503408	Identifier	printf		10503366	0					
ANR	10503409	ArgumentList	"""Insufficient RAM.\\n"""		10503366	1					
ANR	10503410	Argument	"""Insufficient RAM.\\n"""		10503366	0					
ANR	10503411	PrimaryExpression	"""Insufficient RAM.\\n"""		10503366	0					
ANR	10503412	ReturnStatement	return NULL ;	421:4:10580:10591	10503366	1	True				
ANR	10503413	Identifier	NULL		10503366	0					
ANR	10503414	IfStatement	if ( f == NULL )		10503366	3					
ANR	10503415	Condition	f == NULL	423:6:10603:10611	10503366	0	True				
ANR	10503416	EqualityExpression	f == NULL		10503366	0		==			
ANR	10503417	Identifier	f		10503366	0					
ANR	10503418	Identifier	NULL		10503366	1					
ANR	10503419	CompoundStatement		9:17:184:184	10503366	1					
ANR	10503420	ExpressionStatement	"printf ( ""Can't create the file %s\\n"" , path )"	424:4:10620:10663	10503366	0	True				
ANR	10503421	CallExpression	"printf ( ""Can't create the file %s\\n"" , path )"		10503366	0					
ANR	10503422	Callee	printf		10503366	0					
ANR	10503423	Identifier	printf		10503366	0					
ANR	10503424	ArgumentList	"""Can't create the file %s\\n"""		10503366	1					
ANR	10503425	Argument	"""Can't create the file %s\\n"""		10503366	0					
ANR	10503426	PrimaryExpression	"""Can't create the file %s\\n"""		10503366	0					
ANR	10503427	Argument	path		10503366	1					
ANR	10503428	Identifier	path		10503366	0					
ANR	10503429	ReturnStatement	return NULL ;	425:4:10669:10680	10503366	1	True				
ANR	10503430	Identifier	NULL		10503366	0					
ANR	10503431	ExpressionStatement	pnm -> f = f	427:2:10688:10698	10503366	4	True				
ANR	10503432	AssignmentExpression	pnm -> f = f		10503366	0		=			
ANR	10503433	PtrMemberAccess	pnm -> f		10503366	0					
ANR	10503434	Identifier	pnm		10503366	0					
ANR	10503435	Identifier	f		10503366	1					
ANR	10503436	Identifier	f		10503366	1					
ANR	10503437	ExpressionStatement	pnm -> super = * templ	428:2:10702:10721	10503366	5	True				
ANR	10503438	AssignmentExpression	pnm -> super = * templ		10503366	0		=			
ANR	10503439	PtrMemberAccess	pnm -> super		10503366	0					
ANR	10503440	Identifier	pnm		10503366	0					
ANR	10503441	Identifier	super		10503366	1					
ANR	10503442	UnaryOperationExpression	* templ		10503366	1					
ANR	10503443	UnaryOperator	*		10503366	0					
ANR	10503444	Identifier	templ		10503366	1					
ANR	10503445	ExpressionStatement	pnm -> super . seek = no_seek	429:2:10725:10750	10503366	6	True				
ANR	10503446	AssignmentExpression	pnm -> super . seek = no_seek		10503366	0		=			
ANR	10503447	MemberAccess	pnm -> super . seek		10503366	0					
ANR	10503448	PtrMemberAccess	pnm -> super		10503366	0					
ANR	10503449	Identifier	pnm		10503366	0					
ANR	10503450	Identifier	super		10503366	1					
ANR	10503451	Identifier	seek		10503366	1					
ANR	10503452	Identifier	no_seek		10503366	1					
ANR	10503453	ExpressionStatement	pnm -> super . write = compressedWrite	430:2:10754:10788	10503366	7	True				
ANR	10503454	AssignmentExpression	pnm -> super . write = compressedWrite		10503366	0		=			
ANR	10503455	MemberAccess	pnm -> super . write		10503366	0					
ANR	10503456	PtrMemberAccess	pnm -> super		10503366	0					
ANR	10503457	Identifier	pnm		10503366	0					
ANR	10503458	Identifier	super		10503366	1					
ANR	10503459	Identifier	write		10503366	1					
ANR	10503460	Identifier	compressedWrite		10503366	1					
ANR	10503461	ExpressionStatement	pnm -> super . bpp = 8	431:2:10792:10810	10503366	8	True				
ANR	10503462	AssignmentExpression	pnm -> super . bpp = 8		10503366	0		=			
ANR	10503463	MemberAccess	pnm -> super . bpp		10503366	0					
ANR	10503464	PtrMemberAccess	pnm -> super		10503366	0					
ANR	10503465	Identifier	pnm		10503366	0					
ANR	10503466	Identifier	super		10503366	1					
ANR	10503467	Identifier	bpp		10503366	1					
ANR	10503468	PrimaryExpression	8		10503366	1					
ANR	10503469	ExpressionStatement	pnm -> super . n_chan = 3	432:2:10852:10873	10503366	9	True				
ANR	10503470	AssignmentExpression	pnm -> super . n_chan = 3		10503366	0		=			
ANR	10503471	MemberAccess	pnm -> super . n_chan		10503366	0					
ANR	10503472	PtrMemberAccess	pnm -> super		10503366	0					
ANR	10503473	Identifier	pnm		10503366	0					
ANR	10503474	Identifier	super		10503366	1					
ANR	10503475	Identifier	n_chan		10503366	1					
ANR	10503476	PrimaryExpression	3		10503366	1					
ANR	10503477	ReturnStatement	return pnm ;	433:2:10912:10922	10503366	10	True				
ANR	10503478	Identifier	pnm		10503366	0					
ANR	10503479	ReturnType	static ImagePnm *		10503366	1					
ANR	10503480	Identifier	create_raw_image_struct		10503366	2					
ANR	10503481	ParameterList	"Image * templ , const char * path"		10503366	3					
ANR	10503482	Parameter	Image * templ	414:24:10397:10408	10503366	0	True				
ANR	10503483	ParameterType	Image *		10503366	0					
ANR	10503484	Identifier	templ		10503366	1					
ANR	10503485	Parameter	const char * path	414:38:10411:10426	10503366	1	True				
ANR	10503486	ParameterType	const char *		10503366	0					
ANR	10503487	Identifier	path		10503366	1					
ANR	10503488	CFGEntryNode	ENTRY		10503366		True				
ANR	10503489	CFGExitNode	EXIT		10503366		True				
ANR	10503490	Symbol	fopen		10503366						
ANR	10503491	Symbol	malloc		10503366						
ANR	10503492	Symbol	pnm -> f		10503366						
ANR	10503493	Symbol	NULL		10503366						
ANR	10503494	Symbol	f		10503366						
ANR	10503495	Symbol	pnm -> super . seek		10503366						
ANR	10503496	Symbol	pnm -> super . write		10503366						
ANR	10503497	Symbol	compressedWrite		10503366						
ANR	10503498	Symbol	templ		10503366						
ANR	10503499	Symbol	pnm		10503366						
ANR	10503500	Symbol	pnm -> super		10503366						
ANR	10503501	Symbol	path		10503366						
ANR	10503502	Symbol	* templ		10503366						
ANR	10503503	Symbol	no_seek		10503366						
ANR	10503504	Symbol	pnm -> super . n_chan		10503366						
ANR	10503505	Symbol	* pnm		10503366						
ANR	10503506	Symbol	pnm -> super . bpp		10503366						
ANR	10503507	Function	writeInt	436:0:10927:11022							
ANR	10503508	FunctionDef	"writeInt (int i , FILE * stream)"		10503507	0					
ANR	10503509	CompoundStatement		436:34:10961:11022	10503507	0					
ANR	10503510	ExpressionStatement	"putc ( i >> 8 , stream )"	437:4:10967:10985	10503507	0	True				
ANR	10503511	CallExpression	"putc ( i >> 8 , stream )"		10503507	0					
ANR	10503512	Callee	putc		10503507	0					
ANR	10503513	Identifier	putc		10503507	0					
ANR	10503514	ArgumentList	i >> 8		10503507	1					
ANR	10503515	Argument	i >> 8		10503507	0					
ANR	10503516	ShiftExpression	i >> 8		10503507	0		>>			
ANR	10503517	Identifier	i		10503507	0					
ANR	10503518	PrimaryExpression	8		10503507	1					
ANR	10503519	Argument	stream		10503507	1					
ANR	10503520	Identifier	stream		10503507	0					
ANR	10503521	ReturnStatement	"return ( putc ( i & 0xff , stream ) ) ;"	438:4:10991:11020	10503507	1	True				
ANR	10503522	CallExpression	"putc ( i & 0xff , stream )"		10503507	0					
ANR	10503523	Callee	putc		10503507	0					
ANR	10503524	Identifier	putc		10503507	0					
ANR	10503525	ArgumentList	i & 0xff		10503507	1					
ANR	10503526	Argument	i & 0xff		10503507	0					
ANR	10503527	BitAndExpression	i & 0xff		10503507	0		&			
ANR	10503528	Identifier	i		10503507	0					
ANR	10503529	PrimaryExpression	0xff		10503507	1					
ANR	10503530	Argument	stream		10503507	1					
ANR	10503531	Identifier	stream		10503507	0					
ANR	10503532	ReturnType	int		10503507	1					
ANR	10503533	Identifier	writeInt		10503507	2					
ANR	10503534	ParameterList	"int i , FILE * stream"		10503507	3					
ANR	10503535	Parameter	int i	436:13:10940:10944	10503507	0	True				
ANR	10503536	ParameterType	int		10503507	0					
ANR	10503537	Identifier	i		10503507	1					
ANR	10503538	Parameter	FILE * stream	436:20:10947:10958	10503507	1	True				
ANR	10503539	ParameterType	FILE *		10503507	0					
ANR	10503540	Identifier	stream		10503507	1					
ANR	10503541	CFGEntryNode	ENTRY		10503507		True				
ANR	10503542	CFGExitNode	EXIT		10503507		True				
ANR	10503543	Symbol	putc		10503507						
ANR	10503544	Symbol	stream		10503507						
ANR	10503545	Symbol	i		10503507						
ANR	10503546	Function	create_raw_image	442:0:11026:11644							
ANR	10503547	FunctionDef	"create_raw_image (Image * templ , const char * path)"		10503546	0					
ANR	10503548	CompoundStatement		444:0:11093:11644	10503546	0					
ANR	10503549	IdentifierDeclStatement	"ImagePnm * pnm = create_raw_image_struct ( templ , path ) ;"	445:2:11097:11149	10503546	0	True				
ANR	10503550	IdentifierDecl	"* pnm = create_raw_image_struct ( templ , path )"		10503546	0					
ANR	10503551	IdentifierDeclType	ImagePnm *		10503546	0					
ANR	10503552	Identifier	pnm		10503546	1					
ANR	10503553	AssignmentExpression	"* pnm = create_raw_image_struct ( templ , path )"		10503546	2		=			
ANR	10503554	Identifier	pnm		10503546	0					
ANR	10503555	CallExpression	"create_raw_image_struct ( templ , path )"		10503546	1					
ANR	10503556	Callee	create_raw_image_struct		10503546	0					
ANR	10503557	Identifier	create_raw_image_struct		10503546	0					
ANR	10503558	ArgumentList	templ		10503546	1					
ANR	10503559	Argument	templ		10503546	0					
ANR	10503560	Identifier	templ		10503546	0					
ANR	10503561	Argument	path		10503546	1					
ANR	10503562	Identifier	path		10503546	0					
ANR	10503563	IfStatement	if ( pnm == NULL )		10503546	1					
ANR	10503564	Condition	pnm == NULL	447:6:11158:11168	10503546	0	True				
ANR	10503565	EqualityExpression	pnm == NULL		10503546	0		==			
ANR	10503566	Identifier	pnm		10503546	0					
ANR	10503567	Identifier	NULL		10503546	1					
ANR	10503568	ReturnStatement	return NULL ;	448:4:11175:11186	10503546	1	True				
ANR	10503569	Identifier	NULL		10503546	0					
ANR	10503570	ExpressionStatement	"fwrite ( ( char * ) ""mhwanh"" , 1 , 6 , pnm -> f )"	450:2:11191:11230	10503546	2	True				
ANR	10503571	CallExpression	"fwrite ( ( char * ) ""mhwanh"" , 1 , 6 , pnm -> f )"		10503546	0					
ANR	10503572	Callee	fwrite		10503546	0					
ANR	10503573	Identifier	fwrite		10503546	0					
ANR	10503574	ArgumentList	"( char * ) ""mhwanh"""		10503546	1					
ANR	10503575	Argument	"( char * ) ""mhwanh"""		10503546	0					
ANR	10503576	CastExpression	"( char * ) ""mhwanh"""		10503546	0					
ANR	10503577	CastTarget	char *		10503546	0					
ANR	10503578	PrimaryExpression	"""mhwanh"""		10503546	1					
ANR	10503579	Argument	1		10503546	1					
ANR	10503580	PrimaryExpression	1		10503546	0					
ANR	10503581	Argument	6		10503546	2					
ANR	10503582	PrimaryExpression	6		10503546	0					
ANR	10503583	Argument	pnm -> f		10503546	3					
ANR	10503584	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503585	Identifier	pnm		10503546	0					
ANR	10503586	Identifier	f		10503546	1					
ANR	10503587	ExpressionStatement	"writeInt ( 5 , pnm -> f )"	451:2:11234:11252	10503546	3	True				
ANR	10503588	CallExpression	"writeInt ( 5 , pnm -> f )"		10503546	0					
ANR	10503589	Callee	writeInt		10503546	0					
ANR	10503590	Identifier	writeInt		10503546	0					
ANR	10503591	ArgumentList	5		10503546	1					
ANR	10503592	Argument	5		10503546	0					
ANR	10503593	PrimaryExpression	5		10503546	0					
ANR	10503594	Argument	pnm -> f		10503546	1					
ANR	10503595	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503596	Identifier	pnm		10503546	0					
ANR	10503597	Identifier	f		10503546	1					
ANR	10503598	ExpressionStatement	"writeInt ( templ -> width , pnm -> f )"	452:2:11271:11300	10503546	4	True				
ANR	10503599	CallExpression	"writeInt ( templ -> width , pnm -> f )"		10503546	0					
ANR	10503600	Callee	writeInt		10503546	0					
ANR	10503601	Identifier	writeInt		10503546	0					
ANR	10503602	ArgumentList	templ -> width		10503546	1					
ANR	10503603	Argument	templ -> width		10503546	0					
ANR	10503604	PtrMemberAccess	templ -> width		10503546	0					
ANR	10503605	Identifier	templ		10503546	0					
ANR	10503606	Identifier	width		10503546	1					
ANR	10503607	Argument	pnm -> f		10503546	1					
ANR	10503608	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503609	Identifier	pnm		10503546	0					
ANR	10503610	Identifier	f		10503546	1					
ANR	10503611	ExpressionStatement	"writeInt ( templ -> height , pnm -> f )"	453:2:11304:11334	10503546	5	True				
ANR	10503612	CallExpression	"writeInt ( templ -> height , pnm -> f )"		10503546	0					
ANR	10503613	Callee	writeInt		10503546	0					
ANR	10503614	Identifier	writeInt		10503546	0					
ANR	10503615	ArgumentList	templ -> height		10503546	1					
ANR	10503616	Argument	templ -> height		10503546	0					
ANR	10503617	PtrMemberAccess	templ -> height		10503546	0					
ANR	10503618	Identifier	templ		10503546	0					
ANR	10503619	Identifier	height		10503546	1					
ANR	10503620	Argument	pnm -> f		10503546	1					
ANR	10503621	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503622	Identifier	pnm		10503546	0					
ANR	10503623	Identifier	f		10503546	1					
ANR	10503624	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	454:2:11338:11356	10503546	6	True				
ANR	10503625	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503626	Callee	writeInt		10503546	0					
ANR	10503627	Identifier	writeInt		10503546	0					
ANR	10503628	ArgumentList	0		10503546	1					
ANR	10503629	Argument	0		10503546	0					
ANR	10503630	PrimaryExpression	0		10503546	0					
ANR	10503631	Argument	pnm -> f		10503546	1					
ANR	10503632	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503633	Identifier	pnm		10503546	0					
ANR	10503634	Identifier	f		10503546	1					
ANR	10503635	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	455:2:11370:11388	10503546	7	True				
ANR	10503636	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503637	Callee	writeInt		10503546	0					
ANR	10503638	Identifier	writeInt		10503546	0					
ANR	10503639	ArgumentList	0		10503546	1					
ANR	10503640	Argument	0		10503546	0					
ANR	10503641	PrimaryExpression	0		10503546	0					
ANR	10503642	Argument	pnm -> f		10503546	1					
ANR	10503643	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503644	Identifier	pnm		10503546	0					
ANR	10503645	Identifier	f		10503546	1					
ANR	10503646	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	456:2:11403:11421	10503546	8	True				
ANR	10503647	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503648	Callee	writeInt		10503546	0					
ANR	10503649	Identifier	writeInt		10503546	0					
ANR	10503650	ArgumentList	0		10503546	1					
ANR	10503651	Argument	0		10503546	0					
ANR	10503652	PrimaryExpression	0		10503546	0					
ANR	10503653	Argument	pnm -> f		10503546	1					
ANR	10503654	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503655	Identifier	pnm		10503546	0					
ANR	10503656	Identifier	f		10503546	1					
ANR	10503657	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	457:2:11436:11454	10503546	9	True				
ANR	10503658	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503659	Callee	writeInt		10503546	0					
ANR	10503660	Identifier	writeInt		10503546	0					
ANR	10503661	ArgumentList	0		10503546	1					
ANR	10503662	Argument	0		10503546	0					
ANR	10503663	PrimaryExpression	0		10503546	0					
ANR	10503664	Argument	pnm -> f		10503546	1					
ANR	10503665	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503666	Identifier	pnm		10503546	0					
ANR	10503667	Identifier	f		10503546	1					
ANR	10503668	ExpressionStatement	"writeInt ( 1 , pnm -> f )"	458:2:11470:11488	10503546	10	True				
ANR	10503669	CallExpression	"writeInt ( 1 , pnm -> f )"		10503546	0					
ANR	10503670	Callee	writeInt		10503546	0					
ANR	10503671	Identifier	writeInt		10503546	0					
ANR	10503672	ArgumentList	1		10503546	1					
ANR	10503673	Argument	1		10503546	0					
ANR	10503674	PrimaryExpression	1		10503546	0					
ANR	10503675	Argument	pnm -> f		10503546	1					
ANR	10503676	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503677	Identifier	pnm		10503546	0					
ANR	10503678	Identifier	f		10503546	1					
ANR	10503679	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	459:2:11510:11528	10503546	11	True				
ANR	10503680	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503681	Callee	writeInt		10503546	0					
ANR	10503682	Identifier	writeInt		10503546	0					
ANR	10503683	ArgumentList	0		10503546	1					
ANR	10503684	Argument	0		10503546	0					
ANR	10503685	PrimaryExpression	0		10503546	0					
ANR	10503686	Argument	pnm -> f		10503546	1					
ANR	10503687	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503688	Identifier	pnm		10503546	0					
ANR	10503689	Identifier	f		10503546	1					
ANR	10503690	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	460:2:11544:11562	10503546	12	True				
ANR	10503691	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503692	Callee	writeInt		10503546	0					
ANR	10503693	Identifier	writeInt		10503546	0					
ANR	10503694	ArgumentList	0		10503546	1					
ANR	10503695	Argument	0		10503546	0					
ANR	10503696	PrimaryExpression	0		10503546	0					
ANR	10503697	Argument	pnm -> f		10503546	1					
ANR	10503698	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503699	Identifier	pnm		10503546	0					
ANR	10503700	Identifier	f		10503546	1					
ANR	10503701	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	461:2:11566:11584	10503546	13	True				
ANR	10503702	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503703	Callee	writeInt		10503546	0					
ANR	10503704	Identifier	writeInt		10503546	0					
ANR	10503705	ArgumentList	0		10503546	1					
ANR	10503706	Argument	0		10503546	0					
ANR	10503707	PrimaryExpression	0		10503546	0					
ANR	10503708	Argument	pnm -> f		10503546	1					
ANR	10503709	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503710	Identifier	pnm		10503546	0					
ANR	10503711	Identifier	f		10503546	1					
ANR	10503712	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	462:2:11588:11606	10503546	14	True				
ANR	10503713	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503714	Callee	writeInt		10503546	0					
ANR	10503715	Identifier	writeInt		10503546	0					
ANR	10503716	ArgumentList	0		10503546	1					
ANR	10503717	Argument	0		10503546	0					
ANR	10503718	PrimaryExpression	0		10503546	0					
ANR	10503719	Argument	pnm -> f		10503546	1					
ANR	10503720	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503721	Identifier	pnm		10503546	0					
ANR	10503722	Identifier	f		10503546	1					
ANR	10503723	ExpressionStatement	"writeInt ( 0 , pnm -> f )"	463:2:11610:11628	10503546	15	True				
ANR	10503724	CallExpression	"writeInt ( 0 , pnm -> f )"		10503546	0					
ANR	10503725	Callee	writeInt		10503546	0					
ANR	10503726	Identifier	writeInt		10503546	0					
ANR	10503727	ArgumentList	0		10503546	1					
ANR	10503728	Argument	0		10503546	0					
ANR	10503729	PrimaryExpression	0		10503546	0					
ANR	10503730	Argument	pnm -> f		10503546	1					
ANR	10503731	PtrMemberAccess	pnm -> f		10503546	0					
ANR	10503732	Identifier	pnm		10503546	0					
ANR	10503733	Identifier	f		10503546	1					
ANR	10503734	ReturnStatement	return pnm ;	464:2:11632:11642	10503546	16	True				
ANR	10503735	Identifier	pnm		10503546	0					
ANR	10503736	ReturnType	static ImagePnm *		10503546	1					
ANR	10503737	Identifier	create_raw_image		10503546	2					
ANR	10503738	ParameterList	"Image * templ , const char * path"		10503546	3					
ANR	10503739	Parameter	Image * templ	443:17:11061:11072	10503546	0	True				
ANR	10503740	ParameterType	Image *		10503546	0					
ANR	10503741	Identifier	templ		10503546	1					
ANR	10503742	Parameter	const char * path	443:31:11075:11090	10503546	1	True				
ANR	10503743	ParameterType	const char *		10503546	0					
ANR	10503744	Identifier	path		10503546	1					
ANR	10503745	CFGEntryNode	ENTRY		10503546		True				
ANR	10503746	CFGExitNode	EXIT		10503546		True				
ANR	10503747	Symbol	path		10503546						
ANR	10503748	Symbol	pnm -> f		10503546						
ANR	10503749	Symbol	* templ		10503546						
ANR	10503750	Symbol	NULL		10503546						
ANR	10503751	Symbol	templ -> width		10503546						
ANR	10503752	Symbol	templ -> height		10503546						
ANR	10503753	Symbol	* pnm		10503546						
ANR	10503754	Symbol	templ		10503546						
ANR	10503755	Symbol	create_raw_image_struct		10503546						
ANR	10503756	Symbol	pnm		10503546						
ANR	10503757	Function	image_pnm_get_scan_line	468:0:11648:12051							
ANR	10503758	FunctionDef	"image_pnm_get_scan_line (Image * self , uchar * buf)"		10503757	0					
ANR	10503759	CompoundStatement		470:0:11709:12051	10503757	0					
ANR	10503760	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	471:2:11713:11745	10503757	0	True				
ANR	10503761	IdentifierDecl	* pnm = ( ImagePnm * ) self		10503757	0					
ANR	10503762	IdentifierDeclType	ImagePnm *		10503757	0					
ANR	10503763	Identifier	pnm		10503757	1					
ANR	10503764	AssignmentExpression	* pnm = ( ImagePnm * ) self		10503757	2		=			
ANR	10503765	Identifier	pnm		10503757	0					
ANR	10503766	CastExpression	( ImagePnm * ) self		10503757	1					
ANR	10503767	CastTarget	ImagePnm *		10503757	0					
ANR	10503768	Identifier	self		10503757	1					
ANR	10503769	IdentifierDeclStatement	int n_bytes = self -> raster ;	472:2:11749:11775	10503757	1	True				
ANR	10503770	IdentifierDecl	n_bytes = self -> raster		10503757	0					
ANR	10503771	IdentifierDeclType	int		10503757	0					
ANR	10503772	Identifier	n_bytes		10503757	1					
ANR	10503773	AssignmentExpression	n_bytes = self -> raster		10503757	2		=			
ANR	10503774	Identifier	n_bytes		10503757	0					
ANR	10503775	PtrMemberAccess	self -> raster		10503757	1					
ANR	10503776	Identifier	self		10503757	0					
ANR	10503777	Identifier	raster		10503757	1					
ANR	10503778	IdentifierDeclStatement	int code ;	473:2:11779:11787	10503757	2	True				
ANR	10503779	IdentifierDecl	code		10503757	0					
ANR	10503780	IdentifierDeclType	int		10503757	0					
ANR	10503781	Identifier	code		10503757	1					
ANR	10503782	IdentifierDeclStatement	int bppval = ( 1 << self -> bpp ) - 1 ;	474:2:11791:11823	10503757	3	True				
ANR	10503783	IdentifierDecl	bppval = ( 1 << self -> bpp ) - 1		10503757	0					
ANR	10503784	IdentifierDeclType	int		10503757	0					
ANR	10503785	Identifier	bppval		10503757	1					
ANR	10503786	AssignmentExpression	bppval = ( 1 << self -> bpp ) - 1		10503757	2		=			
ANR	10503787	Identifier	bppval		10503757	0					
ANR	10503788	AdditiveExpression	( 1 << self -> bpp ) - 1		10503757	1		-			
ANR	10503789	ShiftExpression	1 << self -> bpp		10503757	0		<<			
ANR	10503790	PrimaryExpression	1		10503757	0					
ANR	10503791	PtrMemberAccess	self -> bpp		10503757	1					
ANR	10503792	Identifier	self		10503757	0					
ANR	10503793	Identifier	bpp		10503757	1					
ANR	10503794	PrimaryExpression	1		10503757	1					
ANR	10503795	IdentifierDeclStatement	int maxval = self -> maxval ;	475:2:11827:11852	10503757	4	True				
ANR	10503796	IdentifierDecl	maxval = self -> maxval		10503757	0					
ANR	10503797	IdentifierDeclType	int		10503757	0					
ANR	10503798	Identifier	maxval		10503757	1					
ANR	10503799	AssignmentExpression	maxval = self -> maxval		10503757	2		=			
ANR	10503800	Identifier	maxval		10503757	0					
ANR	10503801	PtrMemberAccess	self -> maxval		10503757	1					
ANR	10503802	Identifier	self		10503757	0					
ANR	10503803	Identifier	maxval		10503757	1					
ANR	10503804	ExpressionStatement	"code = fread ( buf , 1 , n_bytes , pnm -> f )"	477:2:11857:11895	10503757	5	True				
ANR	10503805	AssignmentExpression	"code = fread ( buf , 1 , n_bytes , pnm -> f )"		10503757	0		=			
ANR	10503806	Identifier	code		10503757	0					
ANR	10503807	CallExpression	"fread ( buf , 1 , n_bytes , pnm -> f )"		10503757	1					
ANR	10503808	Callee	fread		10503757	0					
ANR	10503809	Identifier	fread		10503757	0					
ANR	10503810	ArgumentList	buf		10503757	1					
ANR	10503811	Argument	buf		10503757	0					
ANR	10503812	Identifier	buf		10503757	0					
ANR	10503813	Argument	1		10503757	1					
ANR	10503814	PrimaryExpression	1		10503757	0					
ANR	10503815	Argument	n_bytes		10503757	2					
ANR	10503816	Identifier	n_bytes		10503757	0					
ANR	10503817	Argument	pnm -> f		10503757	3					
ANR	10503818	PtrMemberAccess	pnm -> f		10503757	0					
ANR	10503819	Identifier	pnm		10503757	0					
ANR	10503820	Identifier	f		10503757	1					
ANR	10503821	IfStatement	if ( maxval < bppval )		10503757	6					
ANR	10503822	Condition	maxval < bppval	478:6:11903:11917	10503757	0	True				
ANR	10503823	RelationalExpression	maxval < bppval		10503757	0		<			
ANR	10503824	Identifier	maxval		10503757	0					
ANR	10503825	Identifier	bppval		10503757	1					
ANR	10503826	CompoundStatement		10:6:218:223	10503757	1					
ANR	10503827	IdentifierDeclStatement	int i ;	479:6:11928:11933	10503757	0	True				
ANR	10503828	IdentifierDecl	i		10503757	0					
ANR	10503829	IdentifierDeclType	int		10503757	0					
ANR	10503830	Identifier	i		10503757	1					
ANR	10503831	ForStatement	for ( i = 0 ; i < n_bytes ; i ++ )		10503757	1					
ANR	10503832	ForInit	i = 0 ;	480:10:11945:11950	10503757	0	True				
ANR	10503833	AssignmentExpression	i = 0		10503757	0		=			
ANR	10503834	Identifier	i		10503757	0					
ANR	10503835	PrimaryExpression	0		10503757	1					
ANR	10503836	Condition	i < n_bytes	480:17:11952:11960	10503757	1	True				
ANR	10503837	RelationalExpression	i < n_bytes		10503757	0		<			
ANR	10503838	Identifier	i		10503757	0					
ANR	10503839	Identifier	n_bytes		10503757	1					
ANR	10503840	PostIncDecOperationExpression	i ++	480:28:11963:11965	10503757	2	True				
ANR	10503841	Identifier	i		10503757	0					
ANR	10503842	IncDec	++		10503757	1					
ANR	10503843	ExpressionStatement	buf [ i ] = buf [ i ] * bppval / maxval	481:8:11976:12009	10503757	3	True				
ANR	10503844	AssignmentExpression	buf [ i ] = buf [ i ] * bppval / maxval		10503757	0		=			
ANR	10503845	ArrayIndexing	buf [ i ]		10503757	0					
ANR	10503846	Identifier	buf		10503757	0					
ANR	10503847	Identifier	i		10503757	1					
ANR	10503848	MultiplicativeExpression	buf [ i ] * bppval / maxval		10503757	1		*			
ANR	10503849	ArrayIndexing	buf [ i ]		10503757	0					
ANR	10503850	Identifier	buf		10503757	0					
ANR	10503851	Identifier	i		10503757	1					
ANR	10503852	MultiplicativeExpression	bppval / maxval		10503757	1		/			
ANR	10503853	Identifier	bppval		10503757	0					
ANR	10503854	Identifier	maxval		10503757	1					
ANR	10503855	ReturnStatement	return ( code < n_bytes ) ? - 1 : 0 ;	483:2:12017:12049	10503757	7	True				
ANR	10503856	ConditionalExpression	( code < n_bytes ) ? - 1 : 0		10503757	0					
ANR	10503857	Condition	code < n_bytes		10503757	0					
ANR	10503858	RelationalExpression	code < n_bytes		10503757	0		<			
ANR	10503859	Identifier	code		10503757	0					
ANR	10503860	Identifier	n_bytes		10503757	1					
ANR	10503861	UnaryOperationExpression	- 1		10503757	1					
ANR	10503862	UnaryOperator	-		10503757	0					
ANR	10503863	PrimaryExpression	1		10503757	1					
ANR	10503864	PrimaryExpression	0		10503757	2					
ANR	10503865	ReturnType	static int		10503757	1					
ANR	10503866	Identifier	image_pnm_get_scan_line		10503757	2					
ANR	10503867	ParameterList	"Image * self , uchar * buf"		10503757	3					
ANR	10503868	Parameter	Image * self	469:25:11684:11694	10503757	0	True				
ANR	10503869	ParameterType	Image *		10503757	0					
ANR	10503870	Identifier	self		10503757	1					
ANR	10503871	Parameter	uchar * buf	469:38:11697:11706	10503757	1	True				
ANR	10503872	ParameterType	uchar *		10503757	0					
ANR	10503873	Identifier	buf		10503757	1					
ANR	10503874	CFGEntryNode	ENTRY		10503757		True				
ANR	10503875	CFGExitNode	EXIT		10503757		True				
ANR	10503876	Symbol	self -> maxval		10503757						
ANR	10503877	Symbol	pnm -> f		10503757						
ANR	10503878	Symbol	* buf		10503757						
ANR	10503879	Symbol	code		10503757						
ANR	10503880	Symbol	* self		10503757						
ANR	10503881	Symbol	bppval		10503757						
ANR	10503882	Symbol	self -> raster		10503757						
ANR	10503883	Symbol	i		10503757						
ANR	10503884	Symbol	pnm		10503757						
ANR	10503885	Symbol	fread		10503757						
ANR	10503886	Symbol	self -> bpp		10503757						
ANR	10503887	Symbol	buf		10503757						
ANR	10503888	Symbol	maxval		10503757						
ANR	10503889	Symbol	* i		10503757						
ANR	10503890	Symbol	self		10503757						
ANR	10503891	Symbol	* pnm		10503757						
ANR	10503892	Symbol	n_bytes		10503757						
ANR	10503893	Function	alloc_pnm_image	486:0:12054:12363							
ANR	10503894	FunctionDef	alloc_pnm_image (const char * fn)		10503893	0					
ANR	10503895	CompoundStatement		488:0:12098:12363	10503893	0					
ANR	10503896	IdentifierDeclStatement	ImagePnm * image ;	489:2:12102:12117	10503893	0	True				
ANR	10503897	IdentifierDecl	* image		10503893	0					
ANR	10503898	IdentifierDeclType	ImagePnm *		10503893	0					
ANR	10503899	Identifier	image		10503893	1					
ANR	10503900	IdentifierDeclStatement	"FILE * f = fopen ( fn , ""rb"" ) ;"	491:2:12122:12148	10503893	1	True				
ANR	10503901	IdentifierDecl	"* f = fopen ( fn , ""rb"" )"		10503893	0					
ANR	10503902	IdentifierDeclType	FILE *		10503893	0					
ANR	10503903	Identifier	f		10503893	1					
ANR	10503904	AssignmentExpression	"* f = fopen ( fn , ""rb"" )"		10503893	2		=			
ANR	10503905	Identifier	f		10503893	0					
ANR	10503906	CallExpression	"fopen ( fn , ""rb"" )"		10503893	1					
ANR	10503907	Callee	fopen		10503893	0					
ANR	10503908	Identifier	fopen		10503893	0					
ANR	10503909	ArgumentList	fn		10503893	1					
ANR	10503910	Argument	fn		10503893	0					
ANR	10503911	Identifier	fn		10503893	0					
ANR	10503912	Argument	"""rb"""		10503893	1					
ANR	10503913	PrimaryExpression	"""rb"""		10503893	0					
ANR	10503914	IfStatement	if ( f == NULL )		10503893	2					
ANR	10503915	Condition	f == NULL	493:6:12157:12165	10503893	0	True				
ANR	10503916	EqualityExpression	f == NULL		10503893	0		==			
ANR	10503917	Identifier	f		10503893	0					
ANR	10503918	Identifier	NULL		10503893	1					
ANR	10503919	CompoundStatement		6:17:69:69	10503893	1					
ANR	10503920	ExpressionStatement	"printf ( ""Can't open file %s\\n"" , fn )"	494:6:12176:12210	10503893	0	True				
ANR	10503921	CallExpression	"printf ( ""Can't open file %s\\n"" , fn )"		10503893	0					
ANR	10503922	Callee	printf		10503893	0					
ANR	10503923	Identifier	printf		10503893	0					
ANR	10503924	ArgumentList	"""Can't open file %s\\n"""		10503893	1					
ANR	10503925	Argument	"""Can't open file %s\\n"""		10503893	0					
ANR	10503926	PrimaryExpression	"""Can't open file %s\\n"""		10503893	0					
ANR	10503927	Argument	fn		10503893	1					
ANR	10503928	Identifier	fn		10503893	0					
ANR	10503929	ReturnStatement	return NULL ;	495:6:12218:12229	10503893	1	True				
ANR	10503930	Identifier	NULL		10503893	0					
ANR	10503931	ExpressionStatement	image = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )	497:2:12237:12282	10503893	3	True				
ANR	10503932	AssignmentExpression	image = ( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10503893	0		=			
ANR	10503933	Identifier	image		10503893	0					
ANR	10503934	CastExpression	( ImagePnm * ) malloc ( sizeof ( ImagePnm ) )		10503893	1					
ANR	10503935	CastTarget	ImagePnm *		10503893	0					
ANR	10503936	CallExpression	malloc ( sizeof ( ImagePnm ) )		10503893	1					
ANR	10503937	Callee	malloc		10503893	0					
ANR	10503938	Identifier	malloc		10503893	0					
ANR	10503939	ArgumentList	sizeof ( ImagePnm )		10503893	1					
ANR	10503940	Argument	sizeof ( ImagePnm )		10503893	0					
ANR	10503941	SizeofExpression	sizeof ( ImagePnm )		10503893	0					
ANR	10503942	Sizeof	sizeof		10503893	0					
ANR	10503943	SizeofOperand	ImagePnm		10503893	1					
ANR	10503944	ExpressionStatement	image -> f = f	498:2:12286:12298	10503893	4	True				
ANR	10503945	AssignmentExpression	image -> f = f		10503893	0		=			
ANR	10503946	PtrMemberAccess	image -> f		10503893	0					
ANR	10503947	Identifier	image		10503893	0					
ANR	10503948	Identifier	f		10503893	1					
ANR	10503949	Identifier	f		10503893	1					
ANR	10503950	ExpressionStatement	image -> file_length = file_length ( fileno ( f ) )	499:2:12302:12345	10503893	5	True				
ANR	10503951	AssignmentExpression	image -> file_length = file_length ( fileno ( f ) )		10503893	0		=			
ANR	10503952	PtrMemberAccess	image -> file_length		10503893	0					
ANR	10503953	Identifier	image		10503893	0					
ANR	10503954	Identifier	file_length		10503893	1					
ANR	10503955	CallExpression	file_length ( fileno ( f ) )		10503893	1					
ANR	10503956	Callee	file_length		10503893	0					
ANR	10503957	Identifier	file_length		10503893	0					
ANR	10503958	ArgumentList	fileno ( f )		10503893	1					
ANR	10503959	Argument	fileno ( f )		10503893	0					
ANR	10503960	CallExpression	fileno ( f )		10503893	0					
ANR	10503961	Callee	fileno		10503893	0					
ANR	10503962	Identifier	fileno		10503893	0					
ANR	10503963	ArgumentList	f		10503893	1					
ANR	10503964	Argument	f		10503893	0					
ANR	10503965	Identifier	f		10503893	0					
ANR	10503966	ReturnStatement	return image ;	500:2:12349:12361	10503893	6	True				
ANR	10503967	Identifier	image		10503893	0					
ANR	10503968	ReturnType	ImagePnm *		10503893	1					
ANR	10503969	Identifier	alloc_pnm_image		10503893	2					
ANR	10503970	ParameterList	const char * fn		10503893	3					
ANR	10503971	Parameter	const char * fn	487:17:12082:12095	10503893	0	True				
ANR	10503972	ParameterType	const char *		10503893	0					
ANR	10503973	Identifier	fn		10503893	1					
ANR	10503974	CFGEntryNode	ENTRY		10503893		True				
ANR	10503975	CFGExitNode	EXIT		10503893		True				
ANR	10503976	Symbol	image		10503893						
ANR	10503977	Symbol	fopen		10503893						
ANR	10503978	Symbol	malloc		10503893						
ANR	10503979	Symbol	NULL		10503893						
ANR	10503980	Symbol	image -> f		10503893						
ANR	10503981	Symbol	fileno		10503893						
ANR	10503982	Symbol	f		10503893						
ANR	10503983	Symbol	fn		10503893						
ANR	10503984	Symbol	image -> file_length		10503893						
ANR	10503985	Symbol	file_length		10503893						
ANR	10503986	Symbol	* image		10503893						
ANR	10503987	Function	open_pnm_image	503:0:12366:13566							
ANR	10503988	FunctionDef	open_pnm_image (ImagePnm * image)		10503987	0					
ANR	10503989	CompoundStatement		505:0:12403:13566	10503987	0					
ANR	10503990	IdentifierDeclStatement	"int width , height ;"	506:2:12407:12424	10503987	0	True				
ANR	10503991	IdentifierDecl	width		10503987	0					
ANR	10503992	IdentifierDeclType	int		10503987	0					
ANR	10503993	Identifier	width		10503987	1					
ANR	10503994	IdentifierDecl	height		10503987	1					
ANR	10503995	IdentifierDeclType	int		10503987	0					
ANR	10503996	Identifier	height		10503987	1					
ANR	10503997	IdentifierDeclStatement	int maxval = 0 ;	507:2:12428:12442	10503987	1	True				
ANR	10503998	IdentifierDecl	maxval = 0		10503987	0					
ANR	10503999	IdentifierDeclType	int		10503987	0					
ANR	10504000	Identifier	maxval		10503987	1					
ANR	10504001	AssignmentExpression	maxval = 0		10503987	2		=			
ANR	10504002	Identifier	maxval		10503987	0					
ANR	10504003	PrimaryExpression	0		10503987	1					
ANR	10504004	IdentifierDeclStatement	"int n_chan , bpp ;"	508:2:12446:12461	10503987	2	True				
ANR	10504005	IdentifierDecl	n_chan		10503987	0					
ANR	10504006	IdentifierDeclType	int		10503987	0					
ANR	10504007	Identifier	n_chan		10503987	1					
ANR	10504008	IdentifierDecl	bpp		10503987	1					
ANR	10504009	IdentifierDeclType	int		10503987	0					
ANR	10504010	Identifier	bpp		10503987	1					
ANR	10504011	IdentifierDeclStatement	char linebuf [ 256 ] ;	509:2:12465:12482	10503987	3	True				
ANR	10504012	IdentifierDecl	linebuf [ 256 ]		10503987	0					
ANR	10504013	IdentifierDeclType	char [ 256 ]		10503987	0					
ANR	10504014	Identifier	linebuf		10503987	1					
ANR	10504015	PrimaryExpression	256		10503987	2					
ANR	10504016	IfStatement	"if ( fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL || linebuf [ 0 ] != 'P' || linebuf [ 1 ] < '4' || linebuf [ 1 ] > '6' )"		10503987	4					
ANR	10504017	Condition	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL || linebuf [ 0 ] != 'P' || linebuf [ 1 ] < '4' || linebuf [ 1 ] > '6'"	511:6:12491:12607	10503987	0	True				
ANR	10504018	OrExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL || linebuf [ 0 ] != 'P' || linebuf [ 1 ] < '4' || linebuf [ 1 ] > '6'"		10503987	0		||			
ANR	10504019	EqualityExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL"		10503987	0		==			
ANR	10504020	CallExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f )"		10503987	0					
ANR	10504021	Callee	fgets		10503987	0					
ANR	10504022	Identifier	fgets		10503987	0					
ANR	10504023	ArgumentList	linebuf		10503987	1					
ANR	10504024	Argument	linebuf		10503987	0					
ANR	10504025	Identifier	linebuf		10503987	0					
ANR	10504026	Argument	sizeof ( linebuf )		10503987	1					
ANR	10504027	SizeofExpression	sizeof ( linebuf )		10503987	0					
ANR	10504028	Sizeof	sizeof		10503987	0					
ANR	10504029	SizeofOperand	linebuf		10503987	1					
ANR	10504030	Argument	image -> f		10503987	2					
ANR	10504031	PtrMemberAccess	image -> f		10503987	0					
ANR	10504032	Identifier	image		10503987	0					
ANR	10504033	Identifier	f		10503987	1					
ANR	10504034	Identifier	NULL		10503987	1					
ANR	10504035	OrExpression	linebuf [ 0 ] != 'P' || linebuf [ 1 ] < '4' || linebuf [ 1 ] > '6'		10503987	1		||			
ANR	10504036	EqualityExpression	linebuf [ 0 ] != 'P'		10503987	0		!=			
ANR	10504037	ArrayIndexing	linebuf [ 0 ]		10503987	0					
ANR	10504038	Identifier	linebuf		10503987	0					
ANR	10504039	PrimaryExpression	0		10503987	1					
ANR	10504040	PrimaryExpression	'P'		10503987	1					
ANR	10504041	OrExpression	linebuf [ 1 ] < '4' || linebuf [ 1 ] > '6'		10503987	1		||			
ANR	10504042	RelationalExpression	linebuf [ 1 ] < '4'		10503987	0		<			
ANR	10504043	ArrayIndexing	linebuf [ 1 ]		10503987	0					
ANR	10504044	Identifier	linebuf		10503987	0					
ANR	10504045	PrimaryExpression	1		10503987	1					
ANR	10504046	PrimaryExpression	'4'		10503987	1					
ANR	10504047	RelationalExpression	linebuf [ 1 ] > '6'		10503987	1		>			
ANR	10504048	ArrayIndexing	linebuf [ 1 ]		10503987	0					
ANR	10504049	Identifier	linebuf		10503987	0					
ANR	10504050	PrimaryExpression	1		10503987	1					
ANR	10504051	PrimaryExpression	'6'		10503987	1					
ANR	10504052	ReturnStatement	return 1 ;	513:4:12614:12622	10503987	1	True				
ANR	10504053	PrimaryExpression	1		10503987	0					
ANR	10504054	SwitchStatement	switch ( linebuf [ 1 ] )		10503987	5					
ANR	10504055	Condition	linebuf [ 1 ]	514:10:12634:12643	10503987	0	True				
ANR	10504056	ArrayIndexing	linebuf [ 1 ]		10503987	0					
ANR	10504057	Identifier	linebuf		10503987	0					
ANR	10504058	PrimaryExpression	1		10503987	1					
ANR	10504059	CompoundStatement		11:4:246:246	10503987	1					
ANR	10504060	Label	case '4' :	516:4:12656:12664	10503987	0	True				
ANR	10504061	ExpressionStatement	n_chan = 1	517:6:12672:12682	10503987	1	True				
ANR	10504062	AssignmentExpression	n_chan = 1		10503987	0		=			
ANR	10504063	Identifier	n_chan		10503987	0					
ANR	10504064	PrimaryExpression	1		10503987	1					
ANR	10504065	ExpressionStatement	bpp = 1	518:6:12690:12697	10503987	2	True				
ANR	10504066	AssignmentExpression	bpp = 1		10503987	0		=			
ANR	10504067	Identifier	bpp		10503987	0					
ANR	10504068	PrimaryExpression	1		10503987	1					
ANR	10504069	ExpressionStatement	maxval = 1	519:6:12705:12715	10503987	3	True				
ANR	10504070	AssignmentExpression	maxval = 1		10503987	0		=			
ANR	10504071	Identifier	maxval		10503987	0					
ANR	10504072	PrimaryExpression	1		10503987	1					
ANR	10504073	BreakStatement	break ;	520:6:12723:12728	10503987	4	True				
ANR	10504074	Label	case '5' :	521:4:12734:12742	10503987	5	True				
ANR	10504075	ExpressionStatement	n_chan = 1	522:6:12750:12760	10503987	6	True				
ANR	10504076	AssignmentExpression	n_chan = 1		10503987	0		=			
ANR	10504077	Identifier	n_chan		10503987	0					
ANR	10504078	PrimaryExpression	1		10503987	1					
ANR	10504079	ExpressionStatement	bpp = 8	523:6:12768:12775	10503987	7	True				
ANR	10504080	AssignmentExpression	bpp = 8		10503987	0		=			
ANR	10504081	Identifier	bpp		10503987	0					
ANR	10504082	PrimaryExpression	8		10503987	1					
ANR	10504083	BreakStatement	break ;	524:6:12783:12788	10503987	8	True				
ANR	10504084	Label	case '6' :	525:4:12794:12802	10503987	9	True				
ANR	10504085	ExpressionStatement	n_chan = 3	526:6:12810:12820	10503987	10	True				
ANR	10504086	AssignmentExpression	n_chan = 3		10503987	0		=			
ANR	10504087	Identifier	n_chan		10503987	0					
ANR	10504088	PrimaryExpression	3		10503987	1					
ANR	10504089	ExpressionStatement	bpp = 8	527:6:12828:12835	10503987	11	True				
ANR	10504090	AssignmentExpression	bpp = 8		10503987	0		=			
ANR	10504091	Identifier	bpp		10503987	0					
ANR	10504092	PrimaryExpression	8		10503987	1					
ANR	10504093	BreakStatement	break ;	528:6:12843:12848	10503987	12	True				
ANR	10504094	Label	default :	529:4:12854:12861	10503987	13	True				
ANR	10504095	Identifier	default		10503987	0					
ANR	10504096	ReturnStatement	return 1 ;	530:6:12869:12877	10503987	14	True				
ANR	10504097	PrimaryExpression	1		10503987	0					
ANR	10504098	DoStatement	do		10503987	6					
ANR	10504099	CompoundStatement		29:4:490:490	10503987	0					
ANR	10504100	IfStatement	"if ( fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL )"		10503987	0					
ANR	10504101	Condition	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL"	534:10:12906:12955	10503987	0	True				
ANR	10504102	EqualityExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL"		10503987	0		==			
ANR	10504103	CallExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f )"		10503987	0					
ANR	10504104	Callee	fgets		10503987	0					
ANR	10504105	Identifier	fgets		10503987	0					
ANR	10504106	ArgumentList	linebuf		10503987	1					
ANR	10504107	Argument	linebuf		10503987	0					
ANR	10504108	Identifier	linebuf		10503987	0					
ANR	10504109	Argument	sizeof ( linebuf )		10503987	1					
ANR	10504110	SizeofExpression	sizeof ( linebuf )		10503987	0					
ANR	10504111	Sizeof	sizeof		10503987	0					
ANR	10504112	SizeofOperand	linebuf		10503987	1					
ANR	10504113	Argument	image -> f		10503987	2					
ANR	10504114	PtrMemberAccess	image -> f		10503987	0					
ANR	10504115	Identifier	image		10503987	0					
ANR	10504116	Identifier	f		10503987	1					
ANR	10504117	Identifier	NULL		10503987	1					
ANR	10504118	ReturnStatement	return 1 ;	535:10:12968:12976	10503987	1	True				
ANR	10504119	PrimaryExpression	1		10503987	0					
ANR	10504120	Condition	linebuf [ 0 ] == '#'	537:9:12993:13009	10503987	1	True				
ANR	10504121	EqualityExpression	linebuf [ 0 ] == '#'		10503987	0		==			
ANR	10504122	ArrayIndexing	linebuf [ 0 ]		10503987	0					
ANR	10504123	Identifier	linebuf		10503987	0					
ANR	10504124	PrimaryExpression	0		10503987	1					
ANR	10504125	PrimaryExpression	'#'		10503987	1					
ANR	10504126	IfStatement	"if ( sscanf ( linebuf , ""%d %d"" , & width , & height ) != 2 )"		10503987	7					
ANR	10504127	Condition	"sscanf ( linebuf , ""%d %d"" , & width , & height ) != 2"	538:6:13019:13065	10503987	0	True				
ANR	10504128	EqualityExpression	"sscanf ( linebuf , ""%d %d"" , & width , & height ) != 2"		10503987	0		!=			
ANR	10504129	CallExpression	"sscanf ( linebuf , ""%d %d"" , & width , & height )"		10503987	0					
ANR	10504130	Callee	sscanf		10503987	0					
ANR	10504131	Identifier	sscanf		10503987	0					
ANR	10504132	ArgumentList	linebuf		10503987	1					
ANR	10504133	Argument	linebuf		10503987	0					
ANR	10504134	Identifier	linebuf		10503987	0					
ANR	10504135	Argument	"""%d %d"""		10503987	1					
ANR	10504136	PrimaryExpression	"""%d %d"""		10503987	0					
ANR	10504137	Argument	& width		10503987	2					
ANR	10504138	UnaryOperationExpression	& width		10503987	0					
ANR	10504139	UnaryOperator	&		10503987	0					
ANR	10504140	Identifier	width		10503987	1					
ANR	10504141	Argument	& height		10503987	3					
ANR	10504142	UnaryOperationExpression	& height		10503987	0					
ANR	10504143	UnaryOperator	&		10503987	0					
ANR	10504144	Identifier	height		10503987	1					
ANR	10504145	PrimaryExpression	2		10503987	1					
ANR	10504146	ReturnStatement	return 1 ;	539:6:13074:13082	10503987	1	True				
ANR	10504147	PrimaryExpression	1		10503987	0					
ANR	10504148	WhileStatement	while ( ! maxval )		10503987	8					
ANR	10504149	Condition	! maxval	540:9:13093:13099	10503987	0	True				
ANR	10504150	UnaryOperationExpression	! maxval		10503987	0					
ANR	10504151	UnaryOperator	!		10503987	0					
ANR	10504152	Identifier	maxval		10503987	1					
ANR	10504153	CompoundStatement		37:4:702:702	10503987	1					
ANR	10504154	IfStatement	"if ( fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL )"		10503987	0					
ANR	10504155	Condition	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL"	542:10:13118:13167	10503987	0	True				
ANR	10504156	EqualityExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f ) == NULL"		10503987	0		==			
ANR	10504157	CallExpression	"fgets ( linebuf , sizeof ( linebuf ) , image -> f )"		10503987	0					
ANR	10504158	Callee	fgets		10503987	0					
ANR	10504159	Identifier	fgets		10503987	0					
ANR	10504160	ArgumentList	linebuf		10503987	1					
ANR	10504161	Argument	linebuf		10503987	0					
ANR	10504162	Identifier	linebuf		10503987	0					
ANR	10504163	Argument	sizeof ( linebuf )		10503987	1					
ANR	10504164	SizeofExpression	sizeof ( linebuf )		10503987	0					
ANR	10504165	Sizeof	sizeof		10503987	0					
ANR	10504166	SizeofOperand	linebuf		10503987	1					
ANR	10504167	Argument	image -> f		10503987	2					
ANR	10504168	PtrMemberAccess	image -> f		10503987	0					
ANR	10504169	Identifier	image		10503987	0					
ANR	10504170	Identifier	f		10503987	1					
ANR	10504171	Identifier	NULL		10503987	1					
ANR	10504172	ReturnStatement	return 1 ;	543:10:13180:13188	10503987	1	True				
ANR	10504173	PrimaryExpression	1		10503987	0					
ANR	10504174	IfStatement	if ( linebuf [ 0 ] == '#' )		10503987	1					
ANR	10504175	Condition	linebuf [ 0 ] == '#'	544:10:13200:13216	10503987	0	True				
ANR	10504176	EqualityExpression	linebuf [ 0 ] == '#'		10503987	0		==			
ANR	10504177	ArrayIndexing	linebuf [ 0 ]		10503987	0					
ANR	10504178	Identifier	linebuf		10503987	0					
ANR	10504179	PrimaryExpression	0		10503987	1					
ANR	10504180	PrimaryExpression	'#'		10503987	1					
ANR	10504181	ContinueStatement	continue ;	545:10:13229:13237	10503987	1	True				
ANR	10504182	IfStatement	"if ( sscanf ( linebuf , ""%d"" , & maxval ) != 1 || maxval <= 0 || maxval > 255 )"		10503987	2					
ANR	10504183	Condition	"sscanf ( linebuf , ""%d"" , & maxval ) != 1 || maxval <= 0 || maxval > 255"	546:10:13249:13314	10503987	0	True				
ANR	10504184	OrExpression	"sscanf ( linebuf , ""%d"" , & maxval ) != 1 || maxval <= 0 || maxval > 255"		10503987	0		||			
ANR	10504185	EqualityExpression	"sscanf ( linebuf , ""%d"" , & maxval ) != 1"		10503987	0		!=			
ANR	10504186	CallExpression	"sscanf ( linebuf , ""%d"" , & maxval )"		10503987	0					
ANR	10504187	Callee	sscanf		10503987	0					
ANR	10504188	Identifier	sscanf		10503987	0					
ANR	10504189	ArgumentList	linebuf		10503987	1					
ANR	10504190	Argument	linebuf		10503987	0					
ANR	10504191	Identifier	linebuf		10503987	0					
ANR	10504192	Argument	"""%d"""		10503987	1					
ANR	10504193	PrimaryExpression	"""%d"""		10503987	0					
ANR	10504194	Argument	& maxval		10503987	2					
ANR	10504195	UnaryOperationExpression	& maxval		10503987	0					
ANR	10504196	UnaryOperator	&		10503987	0					
ANR	10504197	Identifier	maxval		10503987	1					
ANR	10504198	PrimaryExpression	1		10503987	1					
ANR	10504199	OrExpression	maxval <= 0 || maxval > 255		10503987	1		||			
ANR	10504200	RelationalExpression	maxval <= 0		10503987	0		<=			
ANR	10504201	Identifier	maxval		10503987	0					
ANR	10504202	PrimaryExpression	0		10503987	1					
ANR	10504203	RelationalExpression	maxval > 255		10503987	1		>			
ANR	10504204	Identifier	maxval		10503987	0					
ANR	10504205	PrimaryExpression	255		10503987	1					
ANR	10504206	ReturnStatement	return 1 ;	547:10:13327:13335	10503987	1	True				
ANR	10504207	PrimaryExpression	1		10503987	0					
ANR	10504208	ExpressionStatement	image -> super . width = width	549:2:13345:13371	10503987	9	True				
ANR	10504209	AssignmentExpression	image -> super . width = width		10503987	0		=			
ANR	10504210	MemberAccess	image -> super . width		10503987	0					
ANR	10504211	PtrMemberAccess	image -> super		10503987	0					
ANR	10504212	Identifier	image		10503987	0					
ANR	10504213	Identifier	super		10503987	1					
ANR	10504214	Identifier	width		10503987	1					
ANR	10504215	Identifier	width		10503987	1					
ANR	10504216	ExpressionStatement	image -> super . height = height	550:2:13375:13403	10503987	10	True				
ANR	10504217	AssignmentExpression	image -> super . height = height		10503987	0		=			
ANR	10504218	MemberAccess	image -> super . height		10503987	0					
ANR	10504219	PtrMemberAccess	image -> super		10503987	0					
ANR	10504220	Identifier	image		10503987	0					
ANR	10504221	Identifier	super		10503987	1					
ANR	10504222	Identifier	height		10503987	1					
ANR	10504223	Identifier	height		10503987	1					
ANR	10504224	ExpressionStatement	image -> super . maxval = maxval	551:2:13407:13435	10503987	11	True				
ANR	10504225	AssignmentExpression	image -> super . maxval = maxval		10503987	0		=			
ANR	10504226	MemberAccess	image -> super . maxval		10503987	0					
ANR	10504227	PtrMemberAccess	image -> super		10503987	0					
ANR	10504228	Identifier	image		10503987	0					
ANR	10504229	Identifier	super		10503987	1					
ANR	10504230	Identifier	maxval		10503987	1					
ANR	10504231	Identifier	maxval		10503987	1					
ANR	10504232	ExpressionStatement	image -> super . raster = n_chan * ( ( width * bpp + 7 ) >> 3 )	552:2:13439:13494	10503987	12	True				
ANR	10504233	AssignmentExpression	image -> super . raster = n_chan * ( ( width * bpp + 7 ) >> 3 )		10503987	0		=			
ANR	10504234	MemberAccess	image -> super . raster		10503987	0					
ANR	10504235	PtrMemberAccess	image -> super		10503987	0					
ANR	10504236	Identifier	image		10503987	0					
ANR	10504237	Identifier	super		10503987	1					
ANR	10504238	Identifier	raster		10503987	1					
ANR	10504239	MultiplicativeExpression	n_chan * ( ( width * bpp + 7 ) >> 3 )		10503987	1		*			
ANR	10504240	Identifier	n_chan		10503987	0					
ANR	10504241	ShiftExpression	( width * bpp + 7 ) >> 3		10503987	1		>>			
ANR	10504242	AdditiveExpression	width * bpp + 7		10503987	0		+			
ANR	10504243	MultiplicativeExpression	width * bpp		10503987	0		*			
ANR	10504244	Identifier	width		10503987	0					
ANR	10504245	Identifier	bpp		10503987	1					
ANR	10504246	PrimaryExpression	7		10503987	1					
ANR	10504247	PrimaryExpression	3		10503987	1					
ANR	10504248	ExpressionStatement	image -> super . n_chan = n_chan	553:2:13498:13526	10503987	13	True				
ANR	10504249	AssignmentExpression	image -> super . n_chan = n_chan		10503987	0		=			
ANR	10504250	MemberAccess	image -> super . n_chan		10503987	0					
ANR	10504251	PtrMemberAccess	image -> super		10503987	0					
ANR	10504252	Identifier	image		10503987	0					
ANR	10504253	Identifier	super		10503987	1					
ANR	10504254	Identifier	n_chan		10503987	1					
ANR	10504255	Identifier	n_chan		10503987	1					
ANR	10504256	ExpressionStatement	image -> super . bpp = bpp	554:2:13530:13552	10503987	14	True				
ANR	10504257	AssignmentExpression	image -> super . bpp = bpp		10503987	0		=			
ANR	10504258	MemberAccess	image -> super . bpp		10503987	0					
ANR	10504259	PtrMemberAccess	image -> super		10503987	0					
ANR	10504260	Identifier	image		10503987	0					
ANR	10504261	Identifier	super		10503987	1					
ANR	10504262	Identifier	bpp		10503987	1					
ANR	10504263	Identifier	bpp		10503987	1					
ANR	10504264	ReturnStatement	return 0 ;	555:2:13556:13564	10503987	15	True				
ANR	10504265	PrimaryExpression	0		10503987	0					
ANR	10504266	ReturnType	int		10503987	1					
ANR	10504267	Identifier	open_pnm_image		10503987	2					
ANR	10504268	ParameterList	ImagePnm * image		10503987	3					
ANR	10504269	Parameter	ImagePnm * image	504:16:12386:12400	10503987	0	True				
ANR	10504270	ParameterType	ImagePnm *		10503987	0					
ANR	10504271	Identifier	image		10503987	1					
ANR	10504272	CFGEntryNode	ENTRY		10503987		True				
ANR	10504273	CFGExitNode	EXIT		10503987		True				
ANR	10504274	Symbol	image		10503987						
ANR	10504275	Symbol	image -> super . bpp		10503987						
ANR	10504276	Symbol	* linebuf		10503987						
ANR	10504277	Symbol	bpp		10503987						
ANR	10504278	Symbol	NULL		10503987						
ANR	10504279	Symbol	image -> super . n_chan		10503987						
ANR	10504280	Symbol	image -> super . raster		10503987						
ANR	10504281	Symbol	& width		10503987						
ANR	10504282	Symbol	image -> super . width		10503987						
ANR	10504283	Symbol	image -> super		10503987						
ANR	10504284	Symbol	image -> super . maxval		10503987						
ANR	10504285	Symbol	& height		10503987						
ANR	10504286	Symbol	fgets		10503987						
ANR	10504287	Symbol	maxval		10503987						
ANR	10504288	Symbol	image -> super . height		10503987						
ANR	10504289	Symbol	linebuf		10503987						
ANR	10504290	Symbol	image -> f		10503987						
ANR	10504291	Symbol	& maxval		10503987						
ANR	10504292	Symbol	sscanf		10503987						
ANR	10504293	Symbol	width		10503987						
ANR	10504294	Symbol	n_chan		10503987						
ANR	10504295	Symbol	* image		10503987						
ANR	10504296	Symbol	height		10503987						
ANR	10504297	Function	alloc_image_file	558:0:13569:13985							
ANR	10504298	FunctionDef	alloc_image_file (const char * fn)		10504297	0					
ANR	10504299	CompoundStatement		560:0:13611:13985	10504297	0					
ANR	10504300	IdentifierDeclStatement	ImagePnm * image = alloc_pnm_image ( fn ) ;	562:4:13686:13724	10504297	0	True				
ANR	10504301	IdentifierDecl	* image = alloc_pnm_image ( fn )		10504297	0					
ANR	10504302	IdentifierDeclType	ImagePnm *		10504297	0					
ANR	10504303	Identifier	image		10504297	1					
ANR	10504304	AssignmentExpression	* image = alloc_pnm_image ( fn )		10504297	2		=			
ANR	10504305	Identifier	image		10504297	0					
ANR	10504306	CallExpression	alloc_pnm_image ( fn )		10504297	1					
ANR	10504307	Callee	alloc_pnm_image		10504297	0					
ANR	10504308	Identifier	alloc_pnm_image		10504297	0					
ANR	10504309	ArgumentList	fn		10504297	1					
ANR	10504310	Argument	fn		10504297	0					
ANR	10504311	Identifier	fn		10504297	0					
ANR	10504312	IfStatement	if ( image == NULL )		10504297	1					
ANR	10504313	Condition	image == NULL	564:6:13733:13745	10504297	0	True				
ANR	10504314	EqualityExpression	image == NULL		10504297	0		==			
ANR	10504315	Identifier	image		10504297	0					
ANR	10504316	Identifier	NULL		10504297	1					
ANR	10504317	ReturnStatement	return NULL ;	565:4:13752:13763	10504297	1	True				
ANR	10504318	Identifier	NULL		10504297	0					
ANR	10504319	ExpressionStatement	image -> super . close = image_pnm_close	566:2:13767:13803	10504297	2	True				
ANR	10504320	AssignmentExpression	image -> super . close = image_pnm_close		10504297	0		=			
ANR	10504321	MemberAccess	image -> super . close		10504297	0					
ANR	10504322	PtrMemberAccess	image -> super		10504297	0					
ANR	10504323	Identifier	image		10504297	0					
ANR	10504324	Identifier	super		10504297	1					
ANR	10504325	Identifier	close		10504297	1					
ANR	10504326	Identifier	image_pnm_close		10504297	1					
ANR	10504327	ExpressionStatement	image -> super . get_scan_line = image_pnm_get_scan_line	567:2:13807:13859	10504297	3	True				
ANR	10504328	AssignmentExpression	image -> super . get_scan_line = image_pnm_get_scan_line		10504297	0		=			
ANR	10504329	MemberAccess	image -> super . get_scan_line		10504297	0					
ANR	10504330	PtrMemberAccess	image -> super		10504297	0					
ANR	10504331	Identifier	image		10504297	0					
ANR	10504332	Identifier	super		10504297	1					
ANR	10504333	Identifier	get_scan_line		10504297	1					
ANR	10504334	Identifier	image_pnm_get_scan_line		10504297	1					
ANR	10504335	ExpressionStatement	image -> super . seek = no_seek	568:2:13863:13890	10504297	4	True				
ANR	10504336	AssignmentExpression	image -> super . seek = no_seek		10504297	0		=			
ANR	10504337	MemberAccess	image -> super . seek		10504297	0					
ANR	10504338	PtrMemberAccess	image -> super		10504297	0					
ANR	10504339	Identifier	image		10504297	0					
ANR	10504340	Identifier	super		10504297	1					
ANR	10504341	Identifier	seek		10504297	1					
ANR	10504342	Identifier	no_seek		10504297	1					
ANR	10504343	ExpressionStatement	image -> super . write = write	569:2:13894:13920	10504297	5	True				
ANR	10504344	AssignmentExpression	image -> super . write = write		10504297	0		=			
ANR	10504345	MemberAccess	image -> super . write		10504297	0					
ANR	10504346	PtrMemberAccess	image -> super		10504297	0					
ANR	10504347	Identifier	image		10504297	0					
ANR	10504348	Identifier	super		10504297	1					
ANR	10504349	Identifier	write		10504297	1					
ANR	10504350	Identifier	write		10504297	1					
ANR	10504351	ExpressionStatement	image -> super . feof_ = image_pnm_feof	570:2:13924:13959	10504297	6	True				
ANR	10504352	AssignmentExpression	image -> super . feof_ = image_pnm_feof		10504297	0		=			
ANR	10504353	MemberAccess	image -> super . feof_		10504297	0					
ANR	10504354	PtrMemberAccess	image -> super		10504297	0					
ANR	10504355	Identifier	image		10504297	0					
ANR	10504356	Identifier	super		10504297	1					
ANR	10504357	Identifier	feof_		10504297	1					
ANR	10504358	Identifier	image_pnm_feof		10504297	1					
ANR	10504359	ReturnStatement	return & image -> super ;	571:2:13963:13983	10504297	7	True				
ANR	10504360	UnaryOperationExpression	& image -> super		10504297	0					
ANR	10504361	UnaryOperator	&		10504297	0					
ANR	10504362	PtrMemberAccess	image -> super		10504297	1					
ANR	10504363	Identifier	image		10504297	0					
ANR	10504364	Identifier	super		10504297	1					
ANR	10504365	ReturnType	Image *		10504297	1					
ANR	10504366	Identifier	alloc_image_file		10504297	2					
ANR	10504367	ParameterList	const char * fn		10504297	3					
ANR	10504368	Parameter	const char * fn	559:18:13595:13608	10504297	0	True				
ANR	10504369	ParameterType	const char *		10504297	0					
ANR	10504370	Identifier	fn		10504297	1					
ANR	10504371	CFGEntryNode	ENTRY		10504297		True				
ANR	10504372	CFGExitNode	EXIT		10504297		True				
ANR	10504373	Symbol	image -> super . close		10504297						
ANR	10504374	Symbol	image		10504297						
ANR	10504375	Symbol	alloc_pnm_image		10504297						
ANR	10504376	Symbol	NULL		10504297						
ANR	10504377	Symbol	image_pnm_feof		10504297						
ANR	10504378	Symbol	& image -> super		10504297						
ANR	10504379	Symbol	image_pnm_close		10504297						
ANR	10504380	Symbol	fn		10504297						
ANR	10504381	Symbol	image -> super		10504297						
ANR	10504382	Symbol	image -> super . write		10504297						
ANR	10504383	Symbol	image -> super . seek		10504297						
ANR	10504384	Symbol	no_seek		10504297						
ANR	10504385	Symbol	image -> super . get_scan_line		10504297						
ANR	10504386	Symbol	image_pnm_get_scan_line		10504297						
ANR	10504387	Symbol	image -> super . feof_		10504297						
ANR	10504388	Symbol	write		10504297						
ANR	10504389	Symbol	* image		10504297						
ANR	10504390	Function	open_image	574:0:13988:14163							
ANR	10504391	FunctionDef	open_image (Image * self)		10504390	0					
ANR	10504392	CompoundStatement		576:0:14024:14163	10504390	0					
ANR	10504393	IdentifierDeclStatement	ImagePnm * pnm = ( ImagePnm * ) self ;	578:2:14097:14129	10504390	0	True				
ANR	10504394	IdentifierDecl	* pnm = ( ImagePnm * ) self		10504390	0					
ANR	10504395	IdentifierDeclType	ImagePnm *		10504390	0					
ANR	10504396	Identifier	pnm		10504390	1					
ANR	10504397	AssignmentExpression	* pnm = ( ImagePnm * ) self		10504390	2		=			
ANR	10504398	Identifier	pnm		10504390	0					
ANR	10504399	CastExpression	( ImagePnm * ) self		10504390	1					
ANR	10504400	CastTarget	ImagePnm *		10504390	0					
ANR	10504401	Identifier	self		10504390	1					
ANR	10504402	ReturnStatement	return open_pnm_image ( pnm ) ;	580:2:14134:14161	10504390	1	True				
ANR	10504403	CallExpression	open_pnm_image ( pnm )		10504390	0					
ANR	10504404	Callee	open_pnm_image		10504390	0					
ANR	10504405	Identifier	open_pnm_image		10504390	0					
ANR	10504406	ArgumentList	pnm		10504390	1					
ANR	10504407	Argument	pnm		10504390	0					
ANR	10504408	Identifier	pnm		10504390	0					
ANR	10504409	ReturnType	static int		10504390	1					
ANR	10504410	Identifier	open_image		10504390	2					
ANR	10504411	ParameterList	Image * self		10504390	3					
ANR	10504412	Parameter	Image * self	575:12:14011:14021	10504390	0	True				
ANR	10504413	ParameterType	Image *		10504390	0					
ANR	10504414	Identifier	self		10504390	1					
ANR	10504415	CFGEntryNode	ENTRY		10504390		True				
ANR	10504416	CFGExitNode	EXIT		10504390		True				
ANR	10504417	Symbol	self		10504390						
ANR	10504418	Symbol	pnm		10504390						
ANR	10504419	Symbol	open_pnm_image		10504390						
ANR	10504420	Function	alloc_window	583:0:14166:14389							
ANR	10504421	FunctionDef	"alloc_window (int row_bytes , int window_size)"		10504420	0					
ANR	10504422	CompoundStatement		585:0:14228:14389	10504420	0					
ANR	10504423	IdentifierDeclStatement	uchar * * buf = ( uchar * * ) malloc ( window_size * sizeof ( uchar * ) ) ;	586:2:14232:14294	10504420	0	True				
ANR	10504424	IdentifierDecl	* * buf = ( uchar * * ) malloc ( window_size * sizeof ( uchar * ) )		10504420	0					
ANR	10504425	IdentifierDeclType	uchar * *		10504420	0					
ANR	10504426	Identifier	buf		10504420	1					
ANR	10504427	AssignmentExpression	* * buf = ( uchar * * ) malloc ( window_size * sizeof ( uchar * ) )		10504420	2		=			
ANR	10504428	Identifier	buf		10504420	0					
ANR	10504429	CastExpression	( uchar * * ) malloc ( window_size * sizeof ( uchar * ) )		10504420	1					
ANR	10504430	CastTarget	uchar * *		10504420	0					
ANR	10504431	CallExpression	malloc ( window_size * sizeof ( uchar * ) )		10504420	1					
ANR	10504432	Callee	malloc		10504420	0					
ANR	10504433	Identifier	malloc		10504420	0					
ANR	10504434	ArgumentList	window_size * sizeof ( uchar * )		10504420	1					
ANR	10504435	Argument	window_size * sizeof ( uchar * )		10504420	0					
ANR	10504436	MultiplicativeExpression	window_size * sizeof ( uchar * )		10504420	0		*			
ANR	10504437	Identifier	window_size		10504420	0					
ANR	10504438	SizeofExpression	sizeof ( uchar * )		10504420	1					
ANR	10504439	Sizeof	sizeof		10504420	0					
ANR	10504440	SizeofOperand	uchar *		10504420	1					
ANR	10504441	IdentifierDeclStatement	int i ;	587:2:14298:14303	10504420	1	True				
ANR	10504442	IdentifierDecl	i		10504420	0					
ANR	10504443	IdentifierDeclType	int		10504420	0					
ANR	10504444	Identifier	i		10504420	1					
ANR	10504445	ForStatement	for ( i = 0 ; i < window_size ; i ++ )		10504420	2					
ANR	10504446	ForInit	i = 0 ;	589:7:14313:14318	10504420	0	True				
ANR	10504447	AssignmentExpression	i = 0		10504420	0		=			
ANR	10504448	Identifier	i		10504420	0					
ANR	10504449	PrimaryExpression	0		10504420	1					
ANR	10504450	Condition	i < window_size	589:14:14320:14334	10504420	1	True				
ANR	10504451	RelationalExpression	i < window_size		10504420	0		<			
ANR	10504452	Identifier	i		10504420	0					
ANR	10504453	Identifier	window_size		10504420	1					
ANR	10504454	PostIncDecOperationExpression	i ++	589:31:14337:14339	10504420	2	True				
ANR	10504455	Identifier	i		10504420	0					
ANR	10504456	IncDec	++		10504420	1					
ANR	10504457	ExpressionStatement	buf [ i ] = malloc ( row_bytes )	590:4:14346:14373	10504420	3	True				
ANR	10504458	AssignmentExpression	buf [ i ] = malloc ( row_bytes )		10504420	0		=			
ANR	10504459	ArrayIndexing	buf [ i ]		10504420	0					
ANR	10504460	Identifier	buf		10504420	0					
ANR	10504461	Identifier	i		10504420	1					
ANR	10504462	CallExpression	malloc ( row_bytes )		10504420	1					
ANR	10504463	Callee	malloc		10504420	0					
ANR	10504464	Identifier	malloc		10504420	0					
ANR	10504465	ArgumentList	row_bytes		10504420	1					
ANR	10504466	Argument	row_bytes		10504420	0					
ANR	10504467	Identifier	row_bytes		10504420	0					
ANR	10504468	ReturnStatement	return buf ;	591:2:14377:14387	10504420	3	True				
ANR	10504469	Identifier	buf		10504420	0					
ANR	10504470	ReturnType	static uchar * *		10504420	1					
ANR	10504471	Identifier	alloc_window		10504420	2					
ANR	10504472	ParameterList	"int row_bytes , int window_size"		10504420	3					
ANR	10504473	Parameter	int row_bytes	584:14:14196:14208	10504420	0	True				
ANR	10504474	ParameterType	int		10504420	0					
ANR	10504475	Identifier	row_bytes		10504420	1					
ANR	10504476	Parameter	int window_size	584:29:14211:14225	10504420	1	True				
ANR	10504477	ParameterType	int		10504420	0					
ANR	10504478	Identifier	window_size		10504420	1					
ANR	10504479	CFGEntryNode	ENTRY		10504420		True				
ANR	10504480	CFGExitNode	EXIT		10504420		True				
ANR	10504481	Symbol	window_size		10504420						
ANR	10504482	Symbol	malloc		10504420						
ANR	10504483	Symbol	buf		10504420						
ANR	10504484	Symbol	* buf		10504420						
ANR	10504485	Symbol	* i		10504420						
ANR	10504486	Symbol	i		10504420						
ANR	10504487	Symbol	row_bytes		10504420						
ANR	10504488	Function	free_window	594:0:14392:14528							
ANR	10504489	FunctionDef	"free_window (uchar * * buf , int window_size)"		10504488	0					
ANR	10504490	CompoundStatement		596:0:14447:14528	10504488	0					
ANR	10504491	IdentifierDeclStatement	int i ;	597:2:14451:14456	10504488	0	True				
ANR	10504492	IdentifierDecl	i		10504488	0					
ANR	10504493	IdentifierDeclType	int		10504488	0					
ANR	10504494	Identifier	i		10504488	1					
ANR	10504495	ForStatement	for ( i = 0 ; i < window_size ; i ++ )		10504488	1					
ANR	10504496	ForInit	i = 0 ;	599:7:14466:14471	10504488	0	True				
ANR	10504497	AssignmentExpression	i = 0		10504488	0		=			
ANR	10504498	Identifier	i		10504488	0					
ANR	10504499	PrimaryExpression	0		10504488	1					
ANR	10504500	Condition	i < window_size	599:14:14473:14487	10504488	1	True				
ANR	10504501	RelationalExpression	i < window_size		10504488	0		<			
ANR	10504502	Identifier	i		10504488	0					
ANR	10504503	Identifier	window_size		10504488	1					
ANR	10504504	PostIncDecOperationExpression	i ++	599:31:14490:14492	10504488	2	True				
ANR	10504505	Identifier	i		10504488	0					
ANR	10504506	IncDec	++		10504488	1					
ANR	10504507	ExpressionStatement	free ( buf [ i ] )	600:4:14499:14512	10504488	3	True				
ANR	10504508	CallExpression	free ( buf [ i ] )		10504488	0					
ANR	10504509	Callee	free		10504488	0					
ANR	10504510	Identifier	free		10504488	0					
ANR	10504511	ArgumentList	buf [ i ]		10504488	1					
ANR	10504512	Argument	buf [ i ]		10504488	0					
ANR	10504513	ArrayIndexing	buf [ i ]		10504488	0					
ANR	10504514	Identifier	buf		10504488	0					
ANR	10504515	Identifier	i		10504488	1					
ANR	10504516	ExpressionStatement	free ( buf )	601:2:14516:14526	10504488	2	True				
ANR	10504517	CallExpression	free ( buf )		10504488	0					
ANR	10504518	Callee	free		10504488	0					
ANR	10504519	Identifier	free		10504488	0					
ANR	10504520	ArgumentList	buf		10504488	1					
ANR	10504521	Argument	buf		10504488	0					
ANR	10504522	Identifier	buf		10504488	0					
ANR	10504523	ReturnType	static void		10504488	1					
ANR	10504524	Identifier	free_window		10504488	2					
ANR	10504525	ParameterList	"uchar * * buf , int window_size"		10504488	3					
ANR	10504526	Parameter	uchar * * buf	595:13:14417:14427	10504488	0	True				
ANR	10504527	ParameterType	uchar * *		10504488	0					
ANR	10504528	Identifier	buf		10504488	1					
ANR	10504529	Parameter	int window_size	595:26:14430:14444	10504488	1	True				
ANR	10504530	ParameterType	int		10504488	0					
ANR	10504531	Identifier	window_size		10504488	1					
ANR	10504532	CFGEntryNode	ENTRY		10504488		True				
ANR	10504533	CFGExitNode	EXIT		10504488		True				
ANR	10504534	Symbol	window_size		10504488						
ANR	10504535	Symbol	buf		10504488						
ANR	10504536	Symbol	* buf		10504488						
ANR	10504537	Symbol	* i		10504488						
ANR	10504538	Symbol	i		10504488						
ANR	10504539	Function	roll_window	604:0:14531:14760							
ANR	10504540	FunctionDef	"roll_window (uchar * * buf , int window_size)"		10504539	0					
ANR	10504541	CompoundStatement		606:0:14586:14760	10504539	0					
ANR	10504542	IdentifierDeclStatement	int i ;	607:2:14590:14595	10504539	0	True				
ANR	10504543	IdentifierDecl	i		10504539	0					
ANR	10504544	IdentifierDeclType	int		10504539	0					
ANR	10504545	Identifier	i		10504539	1					
ANR	10504546	IdentifierDeclStatement	"uchar * tmp1 , * tmp2 ;"	608:2:14599:14617	10504539	1	True				
ANR	10504547	IdentifierDecl	* tmp1		10504539	0					
ANR	10504548	IdentifierDeclType	uchar *		10504539	0					
ANR	10504549	Identifier	tmp1		10504539	1					
ANR	10504550	IdentifierDecl	* tmp2		10504539	1					
ANR	10504551	IdentifierDeclType	uchar *		10504539	0					
ANR	10504552	Identifier	tmp2		10504539	1					
ANR	10504553	ExpressionStatement	tmp1 = buf [ window_size - 1 ]	610:2:14622:14649	10504539	2	True				
ANR	10504554	AssignmentExpression	tmp1 = buf [ window_size - 1 ]		10504539	0		=			
ANR	10504555	Identifier	tmp1		10504539	0					
ANR	10504556	ArrayIndexing	buf [ window_size - 1 ]		10504539	1					
ANR	10504557	Identifier	buf		10504539	0					
ANR	10504558	AdditiveExpression	window_size - 1		10504539	1		-			
ANR	10504559	Identifier	window_size		10504539	0					
ANR	10504560	PrimaryExpression	1		10504539	1					
ANR	10504561	ForStatement	for ( i = 0 ; i < window_size ; i ++ )		10504539	3					
ANR	10504562	ForInit	i = 0 ;	611:7:14658:14663	10504539	0	True				
ANR	10504563	AssignmentExpression	i = 0		10504539	0		=			
ANR	10504564	Identifier	i		10504539	0					
ANR	10504565	PrimaryExpression	0		10504539	1					
ANR	10504566	Condition	i < window_size	611:14:14665:14679	10504539	1	True				
ANR	10504567	RelationalExpression	i < window_size		10504539	0		<			
ANR	10504568	Identifier	i		10504539	0					
ANR	10504569	Identifier	window_size		10504539	1					
ANR	10504570	PostIncDecOperationExpression	i ++	611:31:14682:14684	10504539	2	True				
ANR	10504571	Identifier	i		10504539	0					
ANR	10504572	IncDec	++		10504539	1					
ANR	10504573	CompoundStatement		7:4:104:104	10504539	3					
ANR	10504574	ExpressionStatement	tmp2 = buf [ i ]	613:6:14699:14712	10504539	0	True				
ANR	10504575	AssignmentExpression	tmp2 = buf [ i ]		10504539	0		=			
ANR	10504576	Identifier	tmp2		10504539	0					
ANR	10504577	ArrayIndexing	buf [ i ]		10504539	1					
ANR	10504578	Identifier	buf		10504539	0					
ANR	10504579	Identifier	i		10504539	1					
ANR	10504580	ExpressionStatement	buf [ i ] = tmp1	614:6:14720:14733	10504539	1	True				
ANR	10504581	AssignmentExpression	buf [ i ] = tmp1		10504539	0		=			
ANR	10504582	ArrayIndexing	buf [ i ]		10504539	0					
ANR	10504583	Identifier	buf		10504539	0					
ANR	10504584	Identifier	i		10504539	1					
ANR	10504585	Identifier	tmp1		10504539	1					
ANR	10504586	ExpressionStatement	tmp1 = tmp2	615:6:14741:14752	10504539	2	True				
ANR	10504587	AssignmentExpression	tmp1 = tmp2		10504539	0		=			
ANR	10504588	Identifier	tmp1		10504539	0					
ANR	10504589	Identifier	tmp2		10504539	1					
ANR	10504590	ReturnType	static void		10504539	1					
ANR	10504591	Identifier	roll_window		10504539	2					
ANR	10504592	ParameterList	"uchar * * buf , int window_size"		10504539	3					
ANR	10504593	Parameter	uchar * * buf	605:13:14556:14566	10504539	0	True				
ANR	10504594	ParameterType	uchar * *		10504539	0					
ANR	10504595	Identifier	buf		10504539	1					
ANR	10504596	Parameter	int window_size	605:26:14569:14583	10504539	1	True				
ANR	10504597	ParameterType	int		10504539	0					
ANR	10504598	Identifier	window_size		10504539	1					
ANR	10504599	CFGEntryNode	ENTRY		10504539		True				
ANR	10504600	CFGExitNode	EXIT		10504539		True				
ANR	10504601	Symbol	window_size		10504539						
ANR	10504602	Symbol	buf		10504539						
ANR	10504603	Symbol	* buf		10504539						
ANR	10504604	Symbol	* i		10504539						
ANR	10504605	Symbol	i		10504539						
ANR	10504606	Symbol	tmp1		10504539						
ANR	10504607	Symbol	tmp2		10504539						
ANR	10504608	Symbol	* window_size		10504539						
ANR	10504609	Function	check_window	619:0:14763:16126							
ANR	10504610	FunctionDef	"check_window (uchar * * buf1 , uchar * * buf2 , const FuzzyParams * fparams , int x , int y , int width , int height)"		10504609	0					
ANR	10504611	CompoundStatement		623:0:14910:16126	10504609	0					
ANR	10504612	IdentifierDeclStatement	int tolerance = fparams -> tolerance ;	624:2:14914:14948	10504609	0	True				
ANR	10504613	IdentifierDecl	tolerance = fparams -> tolerance		10504609	0					
ANR	10504614	IdentifierDeclType	int		10504609	0					
ANR	10504615	Identifier	tolerance		10504609	1					
ANR	10504616	AssignmentExpression	tolerance = fparams -> tolerance		10504609	2		=			
ANR	10504617	Identifier	tolerance		10504609	0					
ANR	10504618	PtrMemberAccess	fparams -> tolerance		10504609	1					
ANR	10504619	Identifier	fparams		10504609	0					
ANR	10504620	Identifier	tolerance		10504609	1					
ANR	10504621	IdentifierDeclStatement	int window_size = fparams -> window_size ;	625:2:14952:14990	10504609	1	True				
ANR	10504622	IdentifierDecl	window_size = fparams -> window_size		10504609	0					
ANR	10504623	IdentifierDeclType	int		10504609	0					
ANR	10504624	Identifier	window_size		10504609	1					
ANR	10504625	AssignmentExpression	window_size = fparams -> window_size		10504609	2		=			
ANR	10504626	Identifier	window_size		10504609	0					
ANR	10504627	PtrMemberAccess	fparams -> window_size		10504609	1					
ANR	10504628	Identifier	fparams		10504609	0					
ANR	10504629	Identifier	window_size		10504609	1					
ANR	10504630	IdentifierDeclStatement	"int i , j ;"	626:2:14994:15002	10504609	2	True				
ANR	10504631	IdentifierDecl	i		10504609	0					
ANR	10504632	IdentifierDeclType	int		10504609	0					
ANR	10504633	Identifier	i		10504609	1					
ANR	10504634	IdentifierDecl	j		10504609	1					
ANR	10504635	IdentifierDeclType	int		10504609	0					
ANR	10504636	Identifier	j		10504609	1					
ANR	10504637	IdentifierDeclStatement	const int half_win = window_size >> 1 ;	627:2:15006:15043	10504609	3	True				
ANR	10504638	IdentifierDecl	half_win = window_size >> 1		10504609	0					
ANR	10504639	IdentifierDeclType	const int		10504609	0					
ANR	10504640	Identifier	half_win		10504609	1					
ANR	10504641	AssignmentExpression	half_win = window_size >> 1		10504609	2		=			
ANR	10504642	Identifier	half_win		10504609	0					
ANR	10504643	ShiftExpression	window_size >> 1		10504609	1		>>			
ANR	10504644	Identifier	window_size		10504609	0					
ANR	10504645	PrimaryExpression	1		10504609	1					
ANR	10504646	IdentifierDeclStatement	const uchar * rowmid1 = buf1 [ half_win ] ;	628:2:15047:15084	10504609	4	True				
ANR	10504647	IdentifierDecl	* rowmid1 = buf1 [ half_win ]		10504609	0					
ANR	10504648	IdentifierDeclType	const uchar *		10504609	0					
ANR	10504649	Identifier	rowmid1		10504609	1					
ANR	10504650	AssignmentExpression	* rowmid1 = buf1 [ half_win ]		10504609	2		=			
ANR	10504651	Identifier	rowmid1		10504609	0					
ANR	10504652	ArrayIndexing	buf1 [ half_win ]		10504609	1					
ANR	10504653	Identifier	buf1		10504609	0					
ANR	10504654	Identifier	half_win		10504609	1					
ANR	10504655	IdentifierDeclStatement	const uchar * rowmid2 = buf2 [ half_win ] ;	629:2:15088:15125	10504609	5	True				
ANR	10504656	IdentifierDecl	* rowmid2 = buf2 [ half_win ]		10504609	0					
ANR	10504657	IdentifierDeclType	const uchar *		10504609	0					
ANR	10504658	Identifier	rowmid2		10504609	1					
ANR	10504659	AssignmentExpression	* rowmid2 = buf2 [ half_win ]		10504609	2		=			
ANR	10504660	Identifier	rowmid2		10504609	0					
ANR	10504661	ArrayIndexing	buf2 [ half_win ]		10504609	1					
ANR	10504662	Identifier	buf2		10504609	0					
ANR	10504663	Identifier	half_win		10504609	1					
ANR	10504664	IdentifierDeclStatement	"uchar r1 = rowmid1 [ x * 3 ] , g1 = rowmid1 [ x * 3 + 1 ] , b1 = rowmid1 [ x * 3 + 2 ] ;"	630:2:15129:15204	10504609	6	True				
ANR	10504665	IdentifierDecl	r1 = rowmid1 [ x * 3 ]		10504609	0					
ANR	10504666	IdentifierDeclType	uchar		10504609	0					
ANR	10504667	Identifier	r1		10504609	1					
ANR	10504668	AssignmentExpression	r1 = rowmid1 [ x * 3 ]		10504609	2		=			
ANR	10504669	Identifier	r1		10504609	0					
ANR	10504670	ArrayIndexing	rowmid1 [ x * 3 ]		10504609	1					
ANR	10504671	Identifier	rowmid1		10504609	0					
ANR	10504672	MultiplicativeExpression	x * 3		10504609	1		*			
ANR	10504673	Identifier	x		10504609	0					
ANR	10504674	PrimaryExpression	3		10504609	1					
ANR	10504675	IdentifierDecl	g1 = rowmid1 [ x * 3 + 1 ]		10504609	1					
ANR	10504676	IdentifierDeclType	uchar		10504609	0					
ANR	10504677	Identifier	g1		10504609	1					
ANR	10504678	AssignmentExpression	g1 = rowmid1 [ x * 3 + 1 ]		10504609	2		=			
ANR	10504679	Identifier	g1		10504609	0					
ANR	10504680	ArrayIndexing	rowmid1 [ x * 3 + 1 ]		10504609	1					
ANR	10504681	Identifier	rowmid1		10504609	0					
ANR	10504682	AdditiveExpression	x * 3 + 1		10504609	1		+			
ANR	10504683	MultiplicativeExpression	x * 3		10504609	0		*			
ANR	10504684	Identifier	x		10504609	0					
ANR	10504685	PrimaryExpression	3		10504609	1					
ANR	10504686	PrimaryExpression	1		10504609	1					
ANR	10504687	IdentifierDecl	b1 = rowmid1 [ x * 3 + 2 ]		10504609	2					
ANR	10504688	IdentifierDeclType	uchar		10504609	0					
ANR	10504689	Identifier	b1		10504609	1					
ANR	10504690	AssignmentExpression	b1 = rowmid1 [ x * 3 + 2 ]		10504609	2		=			
ANR	10504691	Identifier	b1		10504609	0					
ANR	10504692	ArrayIndexing	rowmid1 [ x * 3 + 2 ]		10504609	1					
ANR	10504693	Identifier	rowmid1		10504609	0					
ANR	10504694	AdditiveExpression	x * 3 + 2		10504609	1		+			
ANR	10504695	MultiplicativeExpression	x * 3		10504609	0		*			
ANR	10504696	Identifier	x		10504609	0					
ANR	10504697	PrimaryExpression	3		10504609	1					
ANR	10504698	PrimaryExpression	2		10504609	1					
ANR	10504699	IdentifierDeclStatement	"uchar r2 = rowmid2 [ x * 3 ] , g2 = rowmid2 [ x * 3 + 1 ] , b2 = rowmid2 [ x * 3 + 2 ] ;"	631:2:15208:15283	10504609	7	True				
ANR	10504700	IdentifierDecl	r2 = rowmid2 [ x * 3 ]		10504609	0					
ANR	10504701	IdentifierDeclType	uchar		10504609	0					
ANR	10504702	Identifier	r2		10504609	1					
ANR	10504703	AssignmentExpression	r2 = rowmid2 [ x * 3 ]		10504609	2		=			
ANR	10504704	Identifier	r2		10504609	0					
ANR	10504705	ArrayIndexing	rowmid2 [ x * 3 ]		10504609	1					
ANR	10504706	Identifier	rowmid2		10504609	0					
ANR	10504707	MultiplicativeExpression	x * 3		10504609	1		*			
ANR	10504708	Identifier	x		10504609	0					
ANR	10504709	PrimaryExpression	3		10504609	1					
ANR	10504710	IdentifierDecl	g2 = rowmid2 [ x * 3 + 1 ]		10504609	1					
ANR	10504711	IdentifierDeclType	uchar		10504609	0					
ANR	10504712	Identifier	g2		10504609	1					
ANR	10504713	AssignmentExpression	g2 = rowmid2 [ x * 3 + 1 ]		10504609	2		=			
ANR	10504714	Identifier	g2		10504609	0					
ANR	10504715	ArrayIndexing	rowmid2 [ x * 3 + 1 ]		10504609	1					
ANR	10504716	Identifier	rowmid2		10504609	0					
ANR	10504717	AdditiveExpression	x * 3 + 1		10504609	1		+			
ANR	10504718	MultiplicativeExpression	x * 3		10504609	0		*			
ANR	10504719	Identifier	x		10504609	0					
ANR	10504720	PrimaryExpression	3		10504609	1					
ANR	10504721	PrimaryExpression	1		10504609	1					
ANR	10504722	IdentifierDecl	b2 = rowmid2 [ x * 3 + 2 ]		10504609	2					
ANR	10504723	IdentifierDeclType	uchar		10504609	0					
ANR	10504724	Identifier	b2		10504609	1					
ANR	10504725	AssignmentExpression	b2 = rowmid2 [ x * 3 + 2 ]		10504609	2		=			
ANR	10504726	Identifier	b2		10504609	0					
ANR	10504727	ArrayIndexing	rowmid2 [ x * 3 + 2 ]		10504609	1					
ANR	10504728	Identifier	rowmid2		10504609	0					
ANR	10504729	AdditiveExpression	x * 3 + 2		10504609	1		+			
ANR	10504730	MultiplicativeExpression	x * 3		10504609	0		*			
ANR	10504731	Identifier	x		10504609	0					
ANR	10504732	PrimaryExpression	3		10504609	1					
ANR	10504733	PrimaryExpression	2		10504609	1					
ANR	10504734	IdentifierDeclStatement	"bool match1 = FALSE , match2 = FALSE ;"	632:2:15287:15322	10504609	8	True				
ANR	10504735	IdentifierDecl	match1 = FALSE		10504609	0					
ANR	10504736	IdentifierDeclType	bool		10504609	0					
ANR	10504737	Identifier	match1		10504609	1					
ANR	10504738	AssignmentExpression	match1 = FALSE		10504609	2		=			
ANR	10504739	Identifier	FALSE		10504609	0					
ANR	10504740	Identifier	FALSE		10504609	1					
ANR	10504741	IdentifierDecl	match2 = FALSE		10504609	1					
ANR	10504742	IdentifierDeclType	bool		10504609	0					
ANR	10504743	Identifier	match2		10504609	1					
ANR	10504744	AssignmentExpression	match2 = FALSE		10504609	2		=			
ANR	10504745	Identifier	FALSE		10504609	0					
ANR	10504746	Identifier	FALSE		10504609	1					
ANR	10504747	ForStatement	for ( j = - half_win ; j <= half_win ; j ++ )		10504609	9					
ANR	10504748	ForInit	j = - half_win ;	634:7:15332:15345	10504609	0	True				
ANR	10504749	AssignmentExpression	j = - half_win		10504609	0		=			
ANR	10504750	Identifier	j		10504609	0					
ANR	10504751	UnaryOperationExpression	- half_win		10504609	1					
ANR	10504752	UnaryOperator	-		10504609	0					
ANR	10504753	Identifier	half_win		10504609	1					
ANR	10504754	Condition	j <= half_win	634:22:15347:15359	10504609	1	True				
ANR	10504755	RelationalExpression	j <= half_win		10504609	0		<=			
ANR	10504756	Identifier	j		10504609	0					
ANR	10504757	Identifier	half_win		10504609	1					
ANR	10504758	PostIncDecOperationExpression	j ++	634:37:15362:15364	10504609	2	True				
ANR	10504759	Identifier	j		10504609	0					
ANR	10504760	IncDec	++		10504609	1					
ANR	10504761	CompoundStatement		15:6:514:552	10504609	3					
ANR	10504762	IdentifierDeclStatement	const uchar * row1 = buf1 [ j + half_win ] ;	636:6:15379:15417	10504609	0	True				
ANR	10504763	IdentifierDecl	* row1 = buf1 [ j + half_win ]		10504609	0					
ANR	10504764	IdentifierDeclType	const uchar *		10504609	0					
ANR	10504765	Identifier	row1		10504609	1					
ANR	10504766	AssignmentExpression	* row1 = buf1 [ j + half_win ]		10504609	2		=			
ANR	10504767	Identifier	row1		10504609	0					
ANR	10504768	ArrayIndexing	buf1 [ j + half_win ]		10504609	1					
ANR	10504769	Identifier	buf1		10504609	0					
ANR	10504770	AdditiveExpression	j + half_win		10504609	1		+			
ANR	10504771	Identifier	j		10504609	0					
ANR	10504772	Identifier	half_win		10504609	1					
ANR	10504773	IdentifierDeclStatement	const uchar * row2 = buf2 [ j + half_win ] ;	637:6:15425:15463	10504609	1	True				
ANR	10504774	IdentifierDecl	* row2 = buf2 [ j + half_win ]		10504609	0					
ANR	10504775	IdentifierDeclType	const uchar *		10504609	0					
ANR	10504776	Identifier	row2		10504609	1					
ANR	10504777	AssignmentExpression	* row2 = buf2 [ j + half_win ]		10504609	2		=			
ANR	10504778	Identifier	row2		10504609	0					
ANR	10504779	ArrayIndexing	buf2 [ j + half_win ]		10504609	1					
ANR	10504780	Identifier	buf2		10504609	0					
ANR	10504781	AdditiveExpression	j + half_win		10504609	1		+			
ANR	10504782	Identifier	j		10504609	0					
ANR	10504783	Identifier	half_win		10504609	1					
ANR	10504784	ForStatement	for ( i = - half_win ; i <= half_win ; i ++ )		10504609	2					
ANR	10504785	ForInit	i = - half_win ;	638:11:15476:15489	10504609	0	True				
ANR	10504786	AssignmentExpression	i = - half_win		10504609	0		=			
ANR	10504787	Identifier	i		10504609	0					
ANR	10504788	UnaryOperationExpression	- half_win		10504609	1					
ANR	10504789	UnaryOperator	-		10504609	0					
ANR	10504790	Identifier	half_win		10504609	1					
ANR	10504791	Condition	i <= half_win	638:26:15491:15503	10504609	1	True				
ANR	10504792	RelationalExpression	i <= half_win		10504609	0		<=			
ANR	10504793	Identifier	i		10504609	0					
ANR	10504794	Identifier	half_win		10504609	1					
ANR	10504795	PostIncDecOperationExpression	i ++	638:41:15506:15508	10504609	2	True				
ANR	10504796	Identifier	i		10504609	0					
ANR	10504797	IncDec	++		10504609	1					
ANR	10504798	IfStatement	if ( ( i != 0 || j != 0 ) && x + i >= 0 && x + i < width && y + j >= 0 && y + j < height )		10504609	3					
ANR	10504799	Condition	( i != 0 || j != 0 ) && x + i >= 0 && x + i < width && y + j >= 0 && y + j < height	639:12:15523:15627	10504609	0	True				
ANR	10504800	AndExpression	( i != 0 || j != 0 ) && x + i >= 0 && x + i < width && y + j >= 0 && y + j < height		10504609	0		&&			
ANR	10504801	OrExpression	i != 0 || j != 0		10504609	0		||			
ANR	10504802	EqualityExpression	i != 0		10504609	0		!=			
ANR	10504803	Identifier	i		10504609	0					
ANR	10504804	PrimaryExpression	0		10504609	1					
ANR	10504805	EqualityExpression	j != 0		10504609	1		!=			
ANR	10504806	Identifier	j		10504609	0					
ANR	10504807	PrimaryExpression	0		10504609	1					
ANR	10504808	AndExpression	x + i >= 0 && x + i < width && y + j >= 0 && y + j < height		10504609	1		&&			
ANR	10504809	RelationalExpression	x + i >= 0		10504609	0		>=			
ANR	10504810	AdditiveExpression	x + i		10504609	0		+			
ANR	10504811	Identifier	x		10504609	0					
ANR	10504812	Identifier	i		10504609	1					
ANR	10504813	PrimaryExpression	0		10504609	1					
ANR	10504814	AndExpression	x + i < width && y + j >= 0 && y + j < height		10504609	1		&&			
ANR	10504815	RelationalExpression	x + i < width		10504609	0		<			
ANR	10504816	AdditiveExpression	x + i		10504609	0		+			
ANR	10504817	Identifier	x		10504609	0					
ANR	10504818	Identifier	i		10504609	1					
ANR	10504819	Identifier	width		10504609	1					
ANR	10504820	AndExpression	y + j >= 0 && y + j < height		10504609	1		&&			
ANR	10504821	RelationalExpression	y + j >= 0		10504609	0		>=			
ANR	10504822	AdditiveExpression	y + j		10504609	0		+			
ANR	10504823	Identifier	y		10504609	0					
ANR	10504824	Identifier	j		10504609	1					
ANR	10504825	PrimaryExpression	0		10504609	1					
ANR	10504826	RelationalExpression	y + j < height		10504609	1		<			
ANR	10504827	AdditiveExpression	y + j		10504609	0		+			
ANR	10504828	Identifier	y		10504609	0					
ANR	10504829	Identifier	j		10504609	1					
ANR	10504830	Identifier	height		10504609	1					
ANR	10504831	CompoundStatement		20:10:729:729	10504609	1					
ANR	10504832	IfStatement	if ( abs ( r1 - row2 [ ( x + i ) * 3 ] ) <= tolerance && abs ( g1 - row2 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b1 - row2 [ ( x + i ) * 3 + 2 ] ) <= tolerance )		10504609	0					
ANR	10504833	Condition	abs ( r1 - row2 [ ( x + i ) * 3 ] ) <= tolerance && abs ( g1 - row2 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b1 - row2 [ ( x + i ) * 3 + 2 ] ) <= tolerance	643:16:15658:15828	10504609	0	True				
ANR	10504834	AndExpression	abs ( r1 - row2 [ ( x + i ) * 3 ] ) <= tolerance && abs ( g1 - row2 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b1 - row2 [ ( x + i ) * 3 + 2 ] ) <= tolerance		10504609	0		&&			
ANR	10504835	RelationalExpression	abs ( r1 - row2 [ ( x + i ) * 3 ] ) <= tolerance		10504609	0		<=			
ANR	10504836	CallExpression	abs ( r1 - row2 [ ( x + i ) * 3 ] )		10504609	0					
ANR	10504837	Callee	abs		10504609	0					
ANR	10504838	Identifier	abs		10504609	0					
ANR	10504839	ArgumentList	r1 - row2 [ ( x + i ) * 3 ]		10504609	1					
ANR	10504840	Argument	r1 - row2 [ ( x + i ) * 3 ]		10504609	0					
ANR	10504841	AdditiveExpression	r1 - row2 [ ( x + i ) * 3 ]		10504609	0		-			
ANR	10504842	Identifier	r1		10504609	0					
ANR	10504843	ArrayIndexing	row2 [ ( x + i ) * 3 ]		10504609	1					
ANR	10504844	Identifier	row2		10504609	0					
ANR	10504845	MultiplicativeExpression	( x + i ) * 3		10504609	1		*			
ANR	10504846	AdditiveExpression	x + i		10504609	0		+			
ANR	10504847	Identifier	x		10504609	0					
ANR	10504848	Identifier	i		10504609	1					
ANR	10504849	PrimaryExpression	3		10504609	1					
ANR	10504850	Identifier	tolerance		10504609	1					
ANR	10504851	AndExpression	abs ( g1 - row2 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b1 - row2 [ ( x + i ) * 3 + 2 ] ) <= tolerance		10504609	1		&&			
ANR	10504852	RelationalExpression	abs ( g1 - row2 [ ( x + i ) * 3 + 1 ] ) <= tolerance		10504609	0		<=			
ANR	10504853	CallExpression	abs ( g1 - row2 [ ( x + i ) * 3 + 1 ] )		10504609	0					
ANR	10504854	Callee	abs		10504609	0					
ANR	10504855	Identifier	abs		10504609	0					
ANR	10504856	ArgumentList	g1 - row2 [ ( x + i ) * 3 + 1 ]		10504609	1					
ANR	10504857	Argument	g1 - row2 [ ( x + i ) * 3 + 1 ]		10504609	0					
ANR	10504858	AdditiveExpression	g1 - row2 [ ( x + i ) * 3 + 1 ]		10504609	0		-			
ANR	10504859	Identifier	g1		10504609	0					
ANR	10504860	ArrayIndexing	row2 [ ( x + i ) * 3 + 1 ]		10504609	1					
ANR	10504861	Identifier	row2		10504609	0					
ANR	10504862	AdditiveExpression	( x + i ) * 3 + 1		10504609	1		+			
ANR	10504863	MultiplicativeExpression	( x + i ) * 3		10504609	0		*			
ANR	10504864	AdditiveExpression	x + i		10504609	0		+			
ANR	10504865	Identifier	x		10504609	0					
ANR	10504866	Identifier	i		10504609	1					
ANR	10504867	PrimaryExpression	3		10504609	1					
ANR	10504868	PrimaryExpression	1		10504609	1					
ANR	10504869	Identifier	tolerance		10504609	1					
ANR	10504870	RelationalExpression	abs ( b1 - row2 [ ( x + i ) * 3 + 2 ] ) <= tolerance		10504609	1		<=			
ANR	10504871	CallExpression	abs ( b1 - row2 [ ( x + i ) * 3 + 2 ] )		10504609	0					
ANR	10504872	Callee	abs		10504609	0					
ANR	10504873	Identifier	abs		10504609	0					
ANR	10504874	ArgumentList	b1 - row2 [ ( x + i ) * 3 + 2 ]		10504609	1					
ANR	10504875	Argument	b1 - row2 [ ( x + i ) * 3 + 2 ]		10504609	0					
ANR	10504876	AdditiveExpression	b1 - row2 [ ( x + i ) * 3 + 2 ]		10504609	0		-			
ANR	10504877	Identifier	b1		10504609	0					
ANR	10504878	ArrayIndexing	row2 [ ( x + i ) * 3 + 2 ]		10504609	1					
ANR	10504879	Identifier	row2		10504609	0					
ANR	10504880	AdditiveExpression	( x + i ) * 3 + 2		10504609	1		+			
ANR	10504881	MultiplicativeExpression	( x + i ) * 3		10504609	0		*			
ANR	10504882	AdditiveExpression	x + i		10504609	0		+			
ANR	10504883	Identifier	x		10504609	0					
ANR	10504884	Identifier	i		10504609	1					
ANR	10504885	PrimaryExpression	3		10504609	1					
ANR	10504886	PrimaryExpression	2		10504609	1					
ANR	10504887	Identifier	tolerance		10504609	1					
ANR	10504888	ExpressionStatement	match1 = TRUE	646:14:15845:15858	10504609	1	True				
ANR	10504889	AssignmentExpression	match1 = TRUE		10504609	0		=			
ANR	10504890	Identifier	match1		10504609	0					
ANR	10504891	Identifier	TRUE		10504609	1					
ANR	10504892	IfStatement	if ( abs ( r2 - row1 [ ( x + i ) * 3 ] ) <= tolerance && abs ( g2 - row1 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b2 - row1 [ ( x + i ) * 3 + 2 ] ) <= tolerance )		10504609	1					
ANR	10504893	Condition	abs ( r2 - row1 [ ( x + i ) * 3 ] ) <= tolerance && abs ( g2 - row1 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b2 - row1 [ ( x + i ) * 3 + 2 ] ) <= tolerance	647:16:15876:16046	10504609	0	True				
ANR	10504894	AndExpression	abs ( r2 - row1 [ ( x + i ) * 3 ] ) <= tolerance && abs ( g2 - row1 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b2 - row1 [ ( x + i ) * 3 + 2 ] ) <= tolerance		10504609	0		&&			
ANR	10504895	RelationalExpression	abs ( r2 - row1 [ ( x + i ) * 3 ] ) <= tolerance		10504609	0		<=			
ANR	10504896	CallExpression	abs ( r2 - row1 [ ( x + i ) * 3 ] )		10504609	0					
ANR	10504897	Callee	abs		10504609	0					
ANR	10504898	Identifier	abs		10504609	0					
ANR	10504899	ArgumentList	r2 - row1 [ ( x + i ) * 3 ]		10504609	1					
ANR	10504900	Argument	r2 - row1 [ ( x + i ) * 3 ]		10504609	0					
ANR	10504901	AdditiveExpression	r2 - row1 [ ( x + i ) * 3 ]		10504609	0		-			
ANR	10504902	Identifier	r2		10504609	0					
ANR	10504903	ArrayIndexing	row1 [ ( x + i ) * 3 ]		10504609	1					
ANR	10504904	Identifier	row1		10504609	0					
ANR	10504905	MultiplicativeExpression	( x + i ) * 3		10504609	1		*			
ANR	10504906	AdditiveExpression	x + i		10504609	0		+			
ANR	10504907	Identifier	x		10504609	0					
ANR	10504908	Identifier	i		10504609	1					
ANR	10504909	PrimaryExpression	3		10504609	1					
ANR	10504910	Identifier	tolerance		10504609	1					
ANR	10504911	AndExpression	abs ( g2 - row1 [ ( x + i ) * 3 + 1 ] ) <= tolerance && abs ( b2 - row1 [ ( x + i ) * 3 + 2 ] ) <= tolerance		10504609	1		&&			
ANR	10504912	RelationalExpression	abs ( g2 - row1 [ ( x + i ) * 3 + 1 ] ) <= tolerance		10504609	0		<=			
ANR	10504913	CallExpression	abs ( g2 - row1 [ ( x + i ) * 3 + 1 ] )		10504609	0					
ANR	10504914	Callee	abs		10504609	0					
ANR	10504915	Identifier	abs		10504609	0					
ANR	10504916	ArgumentList	g2 - row1 [ ( x + i ) * 3 + 1 ]		10504609	1					
ANR	10504917	Argument	g2 - row1 [ ( x + i ) * 3 + 1 ]		10504609	0					
ANR	10504918	AdditiveExpression	g2 - row1 [ ( x + i ) * 3 + 1 ]		10504609	0		-			
ANR	10504919	Identifier	g2		10504609	0					
ANR	10504920	ArrayIndexing	row1 [ ( x + i ) * 3 + 1 ]		10504609	1					
ANR	10504921	Identifier	row1		10504609	0					
ANR	10504922	AdditiveExpression	( x + i ) * 3 + 1		10504609	1		+			
ANR	10504923	MultiplicativeExpression	( x + i ) * 3		10504609	0		*			
ANR	10504924	AdditiveExpression	x + i		10504609	0		+			
ANR	10504925	Identifier	x		10504609	0					
ANR	10504926	Identifier	i		10504609	1					
ANR	10504927	PrimaryExpression	3		10504609	1					
ANR	10504928	PrimaryExpression	1		10504609	1					
ANR	10504929	Identifier	tolerance		10504609	1					
ANR	10504930	RelationalExpression	abs ( b2 - row1 [ ( x + i ) * 3 + 2 ] ) <= tolerance		10504609	1		<=			
ANR	10504931	CallExpression	abs ( b2 - row1 [ ( x + i ) * 3 + 2 ] )		10504609	0					
ANR	10504932	Callee	abs		10504609	0					
ANR	10504933	Identifier	abs		10504609	0					
ANR	10504934	ArgumentList	b2 - row1 [ ( x + i ) * 3 + 2 ]		10504609	1					
ANR	10504935	Argument	b2 - row1 [ ( x + i ) * 3 + 2 ]		10504609	0					
ANR	10504936	AdditiveExpression	b2 - row1 [ ( x + i ) * 3 + 2 ]		10504609	0		-			
ANR	10504937	Identifier	b2		10504609	0					
ANR	10504938	ArrayIndexing	row1 [ ( x + i ) * 3 + 2 ]		10504609	1					
ANR	10504939	Identifier	row1		10504609	0					
ANR	10504940	AdditiveExpression	( x + i ) * 3 + 2		10504609	1		+			
ANR	10504941	MultiplicativeExpression	( x + i ) * 3		10504609	0		*			
ANR	10504942	AdditiveExpression	x + i		10504609	0		+			
ANR	10504943	Identifier	x		10504609	0					
ANR	10504944	Identifier	i		10504609	1					
ANR	10504945	PrimaryExpression	3		10504609	1					
ANR	10504946	PrimaryExpression	2		10504609	1					
ANR	10504947	Identifier	tolerance		10504609	1					
ANR	10504948	ExpressionStatement	match2 = TRUE	650:14:16063:16076	10504609	1	True				
ANR	10504949	AssignmentExpression	match2 = TRUE		10504609	0		=			
ANR	10504950	Identifier	match2		10504609	0					
ANR	10504951	Identifier	TRUE		10504609	1					
ANR	10504952	ReturnStatement	return ! ( match1 && match2 ) ;	653:2:16098:16124	10504609	10	True				
ANR	10504953	UnaryOperationExpression	! ( match1 && match2 )		10504609	0					
ANR	10504954	UnaryOperator	!		10504609	0					
ANR	10504955	AndExpression	match1 && match2		10504609	1		&&			
ANR	10504956	Identifier	match1		10504609	0					
ANR	10504957	Identifier	match2		10504609	1					
ANR	10504958	ReturnType	static bool		10504609	1					
ANR	10504959	Identifier	check_window		10504609	2					
ANR	10504960	ParameterList	"uchar * * buf1 , uchar * * buf2 , const FuzzyParams * fparams , int x , int y , int width , int height"		10504609	3					
ANR	10504961	Parameter	uchar * * buf1	620:14:14789:14800	10504609	0	True				
ANR	10504962	ParameterType	uchar * *		10504609	0					
ANR	10504963	Identifier	buf1		10504609	1					
ANR	10504964	Parameter	uchar * * buf2	620:28:14803:14814	10504609	1	True				
ANR	10504965	ParameterType	uchar * *		10504609	0					
ANR	10504966	Identifier	buf2		10504609	1					
ANR	10504967	Parameter	const FuzzyParams * fparams	621:14:14831:14856	10504609	2	True				
ANR	10504968	ParameterType	const FuzzyParams *		10504609	0					
ANR	10504969	Identifier	fparams		10504609	1					
ANR	10504970	Parameter	int x	622:14:14873:14877	10504609	3	True				
ANR	10504971	ParameterType	int		10504609	0					
ANR	10504972	Identifier	x		10504609	1					
ANR	10504973	Parameter	int y	622:21:14880:14884	10504609	4	True				
ANR	10504974	ParameterType	int		10504609	0					
ANR	10504975	Identifier	y		10504609	1					
ANR	10504976	Parameter	int width	622:28:14887:14895	10504609	5	True				
ANR	10504977	ParameterType	int		10504609	0					
ANR	10504978	Identifier	width		10504609	1					
ANR	10504979	Parameter	int height	622:39:14898:14907	10504609	6	True				
ANR	10504980	ParameterType	int		10504609	0					
ANR	10504981	Identifier	height		10504609	1					
ANR	10504982	CFGEntryNode	ENTRY		10504609		True				
ANR	10504983	CFGExitNode	EXIT		10504609		True				
ANR	10504984	Symbol	r2		10504609						
ANR	10504985	Symbol	match2		10504609						
ANR	10504986	Symbol	match1		10504609						
ANR	10504987	Symbol	* x		10504609						
ANR	10504988	Symbol	* buf1		10504609						
ANR	10504989	Symbol	* buf2		10504609						
ANR	10504990	Symbol	fparams		10504609						
ANR	10504991	Symbol	b1		10504609						
ANR	10504992	Symbol	window_size		10504609						
ANR	10504993	Symbol	b2		10504609						
ANR	10504994	Symbol	fparams -> tolerance		10504609						
ANR	10504995	Symbol	half_win		10504609						
ANR	10504996	Symbol	* rowmid1		10504609						
ANR	10504997	Symbol	tolerance		10504609						
ANR	10504998	Symbol	* rowmid2		10504609						
ANR	10504999	Symbol	height		10504609						
ANR	10505000	Symbol	* half_win		10504609						
ANR	10505001	Symbol	row1		10504609						
ANR	10505002	Symbol	i		10504609						
ANR	10505003	Symbol	TRUE		10504609						
ANR	10505004	Symbol	j		10504609						
ANR	10505005	Symbol	g1		10504609						
ANR	10505006	Symbol	g2		10504609						
ANR	10505007	Symbol	row2		10504609						
ANR	10505008	Symbol	* row2		10504609						
ANR	10505009	Symbol	* row1		10504609						
ANR	10505010	Symbol	buf1		10504609						
ANR	10505011	Symbol	* fparams		10504609						
ANR	10505012	Symbol	buf2		10504609						
ANR	10505013	Symbol	rowmid1		10504609						
ANR	10505014	Symbol	* i		10504609						
ANR	10505015	Symbol	abs		10504609						
ANR	10505016	Symbol	fparams -> window_size		10504609						
ANR	10505017	Symbol	rowmid2		10504609						
ANR	10505018	Symbol	* j		10504609						
ANR	10505019	Symbol	x		10504609						
ANR	10505020	Symbol	width		10504609						
ANR	10505021	Symbol	y		10504609						
ANR	10505022	Symbol	FALSE		10504609						
ANR	10505023	Symbol	r1		10504609						
ANR	10505024	Function	fuzzy_diff_images	658:0:16131:22735							
ANR	10505025	FunctionDef	"fuzzy_diff_images (Image * image1 , Image * image2 , const FuzzyParams * fparams , FuzzyReport * freport , ImagePnm * image_out)"		10505024	0					
ANR	10505026	CompoundStatement		661:0:16281:22735	10505024	0					
ANR	10505027	IdentifierDeclStatement	"int width = MIN ( image1 -> width , image2 -> width ) ;"	662:2:16285:16330	10505024	0	True				
ANR	10505028	IdentifierDecl	"width = MIN ( image1 -> width , image2 -> width )"		10505024	0					
ANR	10505029	IdentifierDeclType	int		10505024	0					
ANR	10505030	Identifier	width		10505024	1					
ANR	10505031	AssignmentExpression	"width = MIN ( image1 -> width , image2 -> width )"		10505024	2		=			
ANR	10505032	Identifier	width		10505024	0					
ANR	10505033	CallExpression	"MIN ( image1 -> width , image2 -> width )"		10505024	1					
ANR	10505034	Callee	MIN		10505024	0					
ANR	10505035	Identifier	MIN		10505024	0					
ANR	10505036	ArgumentList	image1 -> width		10505024	1					
ANR	10505037	Argument	image1 -> width		10505024	0					
ANR	10505038	PtrMemberAccess	image1 -> width		10505024	0					
ANR	10505039	Identifier	image1		10505024	0					
ANR	10505040	Identifier	width		10505024	1					
ANR	10505041	Argument	image2 -> width		10505024	1					
ANR	10505042	PtrMemberAccess	image2 -> width		10505024	0					
ANR	10505043	Identifier	image2		10505024	0					
ANR	10505044	Identifier	width		10505024	1					
ANR	10505045	IdentifierDeclStatement	"int height = MIN ( image1 -> height , image2 -> height ) ;"	663:2:16334:16382	10505024	1	True				
ANR	10505046	IdentifierDecl	"height = MIN ( image1 -> height , image2 -> height )"		10505024	0					
ANR	10505047	IdentifierDeclType	int		10505024	0					
ANR	10505048	Identifier	height		10505024	1					
ANR	10505049	AssignmentExpression	"height = MIN ( image1 -> height , image2 -> height )"		10505024	2		=			
ANR	10505050	Identifier	height		10505024	0					
ANR	10505051	CallExpression	"MIN ( image1 -> height , image2 -> height )"		10505024	1					
ANR	10505052	Callee	MIN		10505024	0					
ANR	10505053	Identifier	MIN		10505024	0					
ANR	10505054	ArgumentList	image1 -> height		10505024	1					
ANR	10505055	Argument	image1 -> height		10505024	0					
ANR	10505056	PtrMemberAccess	image1 -> height		10505024	0					
ANR	10505057	Identifier	image1		10505024	0					
ANR	10505058	Identifier	height		10505024	1					
ANR	10505059	Argument	image2 -> height		10505024	1					
ANR	10505060	PtrMemberAccess	image2 -> height		10505024	0					
ANR	10505061	Identifier	image2		10505024	0					
ANR	10505062	Identifier	height		10505024	1					
ANR	10505063	IdentifierDeclStatement	"int max_height = MAX ( image1 -> height , image2 -> height ) ;"	664:2:16386:16438	10505024	2	True				
ANR	10505064	IdentifierDecl	"max_height = MAX ( image1 -> height , image2 -> height )"		10505024	0					
ANR	10505065	IdentifierDeclType	int		10505024	0					
ANR	10505066	Identifier	max_height		10505024	1					
ANR	10505067	AssignmentExpression	"max_height = MAX ( image1 -> height , image2 -> height )"		10505024	2		=			
ANR	10505068	Identifier	max_height		10505024	0					
ANR	10505069	CallExpression	"MAX ( image1 -> height , image2 -> height )"		10505024	1					
ANR	10505070	Callee	MAX		10505024	0					
ANR	10505071	Identifier	MAX		10505024	0					
ANR	10505072	ArgumentList	image1 -> height		10505024	1					
ANR	10505073	Argument	image1 -> height		10505024	0					
ANR	10505074	PtrMemberAccess	image1 -> height		10505024	0					
ANR	10505075	Identifier	image1		10505024	0					
ANR	10505076	Identifier	height		10505024	1					
ANR	10505077	Argument	image2 -> height		10505024	1					
ANR	10505078	PtrMemberAccess	image2 -> height		10505024	0					
ANR	10505079	Identifier	image2		10505024	0					
ANR	10505080	Identifier	height		10505024	1					
ANR	10505081	IdentifierDeclStatement	int tolerance = fparams -> tolerance ;	665:2:16442:16476	10505024	3	True				
ANR	10505082	IdentifierDecl	tolerance = fparams -> tolerance		10505024	0					
ANR	10505083	IdentifierDeclType	int		10505024	0					
ANR	10505084	Identifier	tolerance		10505024	1					
ANR	10505085	AssignmentExpression	tolerance = fparams -> tolerance		10505024	2		=			
ANR	10505086	Identifier	tolerance		10505024	0					
ANR	10505087	PtrMemberAccess	fparams -> tolerance		10505024	1					
ANR	10505088	Identifier	fparams		10505024	0					
ANR	10505089	Identifier	tolerance		10505024	1					
ANR	10505090	IdentifierDeclStatement	int window_size = fparams -> window_size ;	666:2:16480:16518	10505024	4	True				
ANR	10505091	IdentifierDecl	window_size = fparams -> window_size		10505024	0					
ANR	10505092	IdentifierDeclType	int		10505024	0					
ANR	10505093	Identifier	window_size		10505024	1					
ANR	10505094	AssignmentExpression	window_size = fparams -> window_size		10505024	2		=			
ANR	10505095	Identifier	window_size		10505024	0					
ANR	10505096	PtrMemberAccess	fparams -> window_size		10505024	1					
ANR	10505097	Identifier	fparams		10505024	0					
ANR	10505098	Identifier	window_size		10505024	1					
ANR	10505099	IdentifierDeclStatement	int row_bytes = width * 3 ;	667:2:16522:16547	10505024	5	True				
ANR	10505100	IdentifierDecl	row_bytes = width * 3		10505024	0					
ANR	10505101	IdentifierDeclType	int		10505024	0					
ANR	10505102	Identifier	row_bytes		10505024	1					
ANR	10505103	AssignmentExpression	row_bytes = width * 3		10505024	2		=			
ANR	10505104	Identifier	row_bytes		10505024	0					
ANR	10505105	MultiplicativeExpression	width * 3		10505024	1		*			
ANR	10505106	Identifier	width		10505024	0					
ANR	10505107	PrimaryExpression	3		10505024	1					
ANR	10505108	IdentifierDeclStatement	unsigned int out_buffer_size = ( image_out ? row_bytes : 0 ) ;	668:2:16551:16609	10505024	6	True				
ANR	10505109	IdentifierDecl	out_buffer_size = ( image_out ? row_bytes : 0 )		10505024	0					
ANR	10505110	IdentifierDeclType	unsigned int		10505024	0					
ANR	10505111	Identifier	out_buffer_size		10505024	1					
ANR	10505112	AssignmentExpression	out_buffer_size = ( image_out ? row_bytes : 0 )		10505024	2		=			
ANR	10505113	Identifier	out_buffer_size		10505024	0					
ANR	10505114	ConditionalExpression	image_out ? row_bytes : 0		10505024	1					
ANR	10505115	Condition	image_out		10505024	0					
ANR	10505116	Identifier	image_out		10505024	0					
ANR	10505117	Identifier	row_bytes		10505024	1					
ANR	10505118	PrimaryExpression	0		10505024	2					
ANR	10505119	IdentifierDeclStatement	int half_win = window_size >> 1 ;	669:2:16613:16644	10505024	7	True				
ANR	10505120	IdentifierDecl	half_win = window_size >> 1		10505024	0					
ANR	10505121	IdentifierDeclType	int		10505024	0					
ANR	10505122	Identifier	half_win		10505024	1					
ANR	10505123	AssignmentExpression	half_win = window_size >> 1		10505024	2		=			
ANR	10505124	Identifier	half_win		10505024	0					
ANR	10505125	ShiftExpression	window_size >> 1		10505024	1		>>			
ANR	10505126	Identifier	window_size		10505024	0					
ANR	10505127	PrimaryExpression	1		10505024	1					
ANR	10505128	IdentifierDeclStatement	"uchar * * buf1 = alloc_window ( row_bytes * 2 , window_size ) ;"	670:2:16648:16702	10505024	8	True				
ANR	10505129	IdentifierDecl	"* * buf1 = alloc_window ( row_bytes * 2 , window_size )"		10505024	0					
ANR	10505130	IdentifierDeclType	uchar * *		10505024	0					
ANR	10505131	Identifier	buf1		10505024	1					
ANR	10505132	AssignmentExpression	"* * buf1 = alloc_window ( row_bytes * 2 , window_size )"		10505024	2		=			
ANR	10505133	Identifier	buf1		10505024	0					
ANR	10505134	CallExpression	"alloc_window ( row_bytes * 2 , window_size )"		10505024	1					
ANR	10505135	Callee	alloc_window		10505024	0					
ANR	10505136	Identifier	alloc_window		10505024	0					
ANR	10505137	ArgumentList	row_bytes * 2		10505024	1					
ANR	10505138	Argument	row_bytes * 2		10505024	0					
ANR	10505139	MultiplicativeExpression	row_bytes * 2		10505024	0		*			
ANR	10505140	Identifier	row_bytes		10505024	0					
ANR	10505141	PrimaryExpression	2		10505024	1					
ANR	10505142	Argument	window_size		10505024	1					
ANR	10505143	Identifier	window_size		10505024	0					
ANR	10505144	IdentifierDeclStatement	"uchar * * buf2 = alloc_window ( row_bytes * 2 , window_size ) ;"	671:2:16706:16760	10505024	9	True				
ANR	10505145	IdentifierDecl	"* * buf2 = alloc_window ( row_bytes * 2 , window_size )"		10505024	0					
ANR	10505146	IdentifierDeclType	uchar * *		10505024	0					
ANR	10505147	Identifier	buf2		10505024	1					
ANR	10505148	AssignmentExpression	"* * buf2 = alloc_window ( row_bytes * 2 , window_size )"		10505024	2		=			
ANR	10505149	Identifier	buf2		10505024	0					
ANR	10505150	CallExpression	"alloc_window ( row_bytes * 2 , window_size )"		10505024	1					
ANR	10505151	Callee	alloc_window		10505024	0					
ANR	10505152	Identifier	alloc_window		10505024	0					
ANR	10505153	ArgumentList	row_bytes * 2		10505024	1					
ANR	10505154	Argument	row_bytes * 2		10505024	0					
ANR	10505155	MultiplicativeExpression	row_bytes * 2		10505024	0		*			
ANR	10505156	Identifier	row_bytes		10505024	0					
ANR	10505157	PrimaryExpression	2		10505024	1					
ANR	10505158	Argument	window_size		10505024	1					
ANR	10505159	Identifier	window_size		10505024	0					
ANR	10505160	IdentifierDeclStatement	uchar * out_buf = NULL ;	672:2:16764:16785	10505024	10	True				
ANR	10505161	IdentifierDecl	* out_buf = NULL		10505024	0					
ANR	10505162	IdentifierDeclType	uchar *		10505024	0					
ANR	10505163	Identifier	out_buf		10505024	1					
ANR	10505164	AssignmentExpression	* out_buf = NULL		10505024	2		=			
ANR	10505165	Identifier	NULL		10505024	0					
ANR	10505166	Identifier	NULL		10505024	1					
ANR	10505167	IdentifierDeclStatement	"int x0 = - 2 , y0 = - 2 , mc = 0 , mmax = 10 ;"	673:2:16789:16828	10505024	11	True				
ANR	10505168	IdentifierDecl	x0 = - 2		10505024	0					
ANR	10505169	IdentifierDeclType	int		10505024	0					
ANR	10505170	Identifier	x0		10505024	1					
ANR	10505171	AssignmentExpression	x0 = - 2		10505024	2		=			
ANR	10505172	Identifier	x0		10505024	0					
ANR	10505173	UnaryOperationExpression	- 2		10505024	1					
ANR	10505174	UnaryOperator	-		10505024	0					
ANR	10505175	PrimaryExpression	2		10505024	1					
ANR	10505176	IdentifierDecl	y0 = - 2		10505024	1					
ANR	10505177	IdentifierDeclType	int		10505024	0					
ANR	10505178	Identifier	y0		10505024	1					
ANR	10505179	AssignmentExpression	y0 = - 2		10505024	2		=			
ANR	10505180	Identifier	y0		10505024	0					
ANR	10505181	UnaryOperationExpression	- 2		10505024	1					
ANR	10505182	UnaryOperator	-		10505024	0					
ANR	10505183	PrimaryExpression	2		10505024	1					
ANR	10505184	IdentifierDecl	mc = 0		10505024	2					
ANR	10505185	IdentifierDeclType	int		10505024	0					
ANR	10505186	Identifier	mc		10505024	1					
ANR	10505187	AssignmentExpression	mc = 0		10505024	2		=			
ANR	10505188	Identifier	mc		10505024	0					
ANR	10505189	PrimaryExpression	0		10505024	1					
ANR	10505190	IdentifierDecl	mmax = 10		10505024	3					
ANR	10505191	IdentifierDeclType	int		10505024	0					
ANR	10505192	Identifier	mmax		10505024	1					
ANR	10505193	AssignmentExpression	mmax = 10		10505024	2		=			
ANR	10505194	Identifier	mmax		10505024	0					
ANR	10505195	PrimaryExpression	10		10505024	1					
ANR	10505196	IdentifierDeclStatement	int y ;	674:2:16832:16837	10505024	12	True				
ANR	10505197	IdentifierDecl	y		10505024	0					
ANR	10505198	IdentifierDeclType	int		10505024	0					
ANR	10505199	Identifier	y		10505024	1					
ANR	10505200	IdentifierDeclStatement	int rcode = 0 ;	675:2:16841:16854	10505024	13	True				
ANR	10505201	IdentifierDecl	rcode = 0		10505024	0					
ANR	10505202	IdentifierDeclType	int		10505024	0					
ANR	10505203	Identifier	rcode		10505024	1					
ANR	10505204	AssignmentExpression	rcode = 0		10505024	2		=			
ANR	10505205	Identifier	rcode		10505024	0					
ANR	10505206	PrimaryExpression	0		10505024	1					
ANR	10505207	IdentifierDeclStatement	double diff [ 3 ] ;	676:2:16858:16872	10505024	14	True				
ANR	10505208	IdentifierDecl	diff [ 3 ]		10505024	0					
ANR	10505209	IdentifierDeclType	double [ 3 ]		10505024	0					
ANR	10505210	Identifier	diff		10505024	1					
ANR	10505211	PrimaryExpression	3		10505024	2					
ANR	10505212	IdentifierDeclStatement	double color_diff ;	677:2:16876:16893	10505024	15	True				
ANR	10505213	IdentifierDecl	color_diff		10505024	0					
ANR	10505214	IdentifierDeclType	double		10505024	0					
ANR	10505215	Identifier	color_diff		10505024	1					
ANR	10505216	IfStatement	if ( image_out != NULL )		10505024	16					
ANR	10505217	Condition	image_out != NULL	679:6:16902:16918	10505024	0	True				
ANR	10505218	EqualityExpression	image_out != NULL		10505024	0		!=			
ANR	10505219	Identifier	image_out		10505024	0					
ANR	10505220	Identifier	NULL		10505024	1					
ANR	10505221	CompoundStatement		20:4:643:643	10505024	1					
ANR	10505222	ExpressionStatement	out_buf = malloc ( out_buffer_size * 2 )	681:6:16933:16968	10505024	0	True				
ANR	10505223	AssignmentExpression	out_buf = malloc ( out_buffer_size * 2 )		10505024	0		=			
ANR	10505224	Identifier	out_buf		10505024	0					
ANR	10505225	CallExpression	malloc ( out_buffer_size * 2 )		10505024	1					
ANR	10505226	Callee	malloc		10505024	0					
ANR	10505227	Identifier	malloc		10505024	0					
ANR	10505228	ArgumentList	out_buffer_size * 2		10505024	1					
ANR	10505229	Argument	out_buffer_size * 2		10505024	0					
ANR	10505230	MultiplicativeExpression	out_buffer_size * 2		10505024	0		*			
ANR	10505231	Identifier	out_buffer_size		10505024	0					
ANR	10505232	PrimaryExpression	2		10505024	1					
ANR	10505233	IfStatement	if ( out_buf == NULL )		10505024	1					
ANR	10505234	Condition	out_buf == NULL	682:10:16980:16994	10505024	0	True				
ANR	10505235	EqualityExpression	out_buf == NULL		10505024	0		==			
ANR	10505236	Identifier	out_buf		10505024	0					
ANR	10505237	Identifier	NULL		10505024	1					
ANR	10505238	ExpressionStatement	"printf ( ""Can't allocate output buffer.\\n"" )"	683:8:17005:17047	10505024	1	True				
ANR	10505239	CallExpression	"printf ( ""Can't allocate output buffer.\\n"" )"		10505024	0					
ANR	10505240	Callee	printf		10505024	0					
ANR	10505241	Identifier	printf		10505024	0					
ANR	10505242	ArgumentList	"""Can't allocate output buffer.\\n"""		10505024	1					
ANR	10505243	Argument	"""Can't allocate output buffer.\\n"""		10505024	0					
ANR	10505244	PrimaryExpression	"""Can't allocate output buffer.\\n"""		10505024	0					
ANR	10505245	ForStatement	"for ( y = 0 ; y < MIN ( half_win , height ) ; y ++ )"		10505024	17					
ANR	10505246	ForInit	y = 0 ;	687:7:17105:17110	10505024	0	True				
ANR	10505247	AssignmentExpression	y = 0		10505024	0		=			
ANR	10505248	Identifier	y		10505024	0					
ANR	10505249	PrimaryExpression	0		10505024	1					
ANR	10505250	Condition	"y < MIN ( half_win , height )"	687:14:17112:17136	10505024	1	True				
ANR	10505251	RelationalExpression	"y < MIN ( half_win , height )"		10505024	0		<			
ANR	10505252	Identifier	y		10505024	0					
ANR	10505253	CallExpression	"MIN ( half_win , height )"		10505024	1					
ANR	10505254	Callee	MIN		10505024	0					
ANR	10505255	Identifier	MIN		10505024	0					
ANR	10505256	ArgumentList	half_win		10505024	1					
ANR	10505257	Argument	half_win		10505024	0					
ANR	10505258	Identifier	half_win		10505024	0					
ANR	10505259	Argument	height		10505024	1					
ANR	10505260	Identifier	height		10505024	0					
ANR	10505261	PostIncDecOperationExpression	y ++	687:41:17139:17141	10505024	2	True				
ANR	10505262	Identifier	y		10505024	0					
ANR	10505263	IncDec	++		10505024	1					
ANR	10505264	CompoundStatement		28:4:866:866	10505024	3					
ANR	10505265	IfStatement	"if ( image_get_rgb_scan_line_with_error ( image1 , buf1 [ half_win - y ] , 1 , y , & rcode ) )"		10505024	0					
ANR	10505266	Condition	"image_get_rgb_scan_line_with_error ( image1 , buf1 [ half_win - y ] , 1 , y , & rcode )"	689:11:17161:17237	10505024	0	True				
ANR	10505267	CallExpression	"image_get_rgb_scan_line_with_error ( image1 , buf1 [ half_win - y ] , 1 , y , & rcode )"		10505024	0					
ANR	10505268	Callee	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505269	Identifier	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505270	ArgumentList	image1		10505024	1					
ANR	10505271	Argument	image1		10505024	0					
ANR	10505272	Identifier	image1		10505024	0					
ANR	10505273	Argument	buf1 [ half_win - y ]		10505024	1					
ANR	10505274	ArrayIndexing	buf1 [ half_win - y ]		10505024	0					
ANR	10505275	Identifier	buf1		10505024	0					
ANR	10505276	AdditiveExpression	half_win - y		10505024	1		-			
ANR	10505277	Identifier	half_win		10505024	0					
ANR	10505278	Identifier	y		10505024	1					
ANR	10505279	Argument	1		10505024	2					
ANR	10505280	PrimaryExpression	1		10505024	0					
ANR	10505281	Argument	y		10505024	3					
ANR	10505282	Identifier	y		10505024	0					
ANR	10505283	Argument	& rcode		10505024	4					
ANR	10505284	UnaryOperationExpression	& rcode		10505024	0					
ANR	10505285	UnaryOperator	&		10505024	0					
ANR	10505286	Identifier	rcode		10505024	1					
ANR	10505287	GotoStatement	goto ex ;	690:12:17252:17259	10505024	1	True				
ANR	10505288	Identifier	ex		10505024	0					
ANR	10505289	IfStatement	"if ( image_get_rgb_scan_line_with_error ( image2 , buf2 [ half_win - y ] , 2 , y , & rcode ) )"		10505024	1					
ANR	10505290	Condition	"image_get_rgb_scan_line_with_error ( image2 , buf2 [ half_win - y ] , 2 , y , & rcode )"	691:11:17272:17348	10505024	0	True				
ANR	10505291	CallExpression	"image_get_rgb_scan_line_with_error ( image2 , buf2 [ half_win - y ] , 2 , y , & rcode )"		10505024	0					
ANR	10505292	Callee	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505293	Identifier	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505294	ArgumentList	image2		10505024	1					
ANR	10505295	Argument	image2		10505024	0					
ANR	10505296	Identifier	image2		10505024	0					
ANR	10505297	Argument	buf2 [ half_win - y ]		10505024	1					
ANR	10505298	ArrayIndexing	buf2 [ half_win - y ]		10505024	0					
ANR	10505299	Identifier	buf2		10505024	0					
ANR	10505300	AdditiveExpression	half_win - y		10505024	1		-			
ANR	10505301	Identifier	half_win		10505024	0					
ANR	10505302	Identifier	y		10505024	1					
ANR	10505303	Argument	2		10505024	2					
ANR	10505304	PrimaryExpression	2		10505024	0					
ANR	10505305	Argument	y		10505024	3					
ANR	10505306	Identifier	y		10505024	0					
ANR	10505307	Argument	& rcode		10505024	4					
ANR	10505308	UnaryOperationExpression	& rcode		10505024	0					
ANR	10505309	UnaryOperator	&		10505024	0					
ANR	10505310	Identifier	rcode		10505024	1					
ANR	10505311	GotoStatement	goto ex ;	692:12:17363:17370	10505024	1	True				
ANR	10505312	Identifier	ex		10505024	0					
ANR	10505313	ForStatement	for ( ; y < half_win ; y ++ )		10505024	18					
ANR	10505314	Condition	y < half_win	695:9:17446:17457	10505024	0	True				
ANR	10505315	RelationalExpression	y < half_win		10505024	0		<			
ANR	10505316	Identifier	y		10505024	0					
ANR	10505317	Identifier	half_win		10505024	1					
ANR	10505318	PostIncDecOperationExpression	y ++	695:23:17460:17462	10505024	1	True				
ANR	10505319	Identifier	y		10505024	0					
ANR	10505320	IncDec	++		10505024	1					
ANR	10505321	CompoundStatement		35:28:1183:1183	10505024	2					
ANR	10505322	ExpressionStatement	"memcpy ( buf1 [ half_win - y ] , buf1 [ half_win ] , width * 3 )"	696:4:17471:17524	10505024	0	True				
ANR	10505323	CallExpression	"memcpy ( buf1 [ half_win - y ] , buf1 [ half_win ] , width * 3 )"		10505024	0					
ANR	10505324	Callee	memcpy		10505024	0					
ANR	10505325	Identifier	memcpy		10505024	0					
ANR	10505326	ArgumentList	buf1 [ half_win - y ]		10505024	1					
ANR	10505327	Argument	buf1 [ half_win - y ]		10505024	0					
ANR	10505328	ArrayIndexing	buf1 [ half_win - y ]		10505024	0					
ANR	10505329	Identifier	buf1		10505024	0					
ANR	10505330	AdditiveExpression	half_win - y		10505024	1		-			
ANR	10505331	Identifier	half_win		10505024	0					
ANR	10505332	Identifier	y		10505024	1					
ANR	10505333	Argument	buf1 [ half_win ]		10505024	1					
ANR	10505334	ArrayIndexing	buf1 [ half_win ]		10505024	0					
ANR	10505335	Identifier	buf1		10505024	0					
ANR	10505336	Identifier	half_win		10505024	1					
ANR	10505337	Argument	width * 3		10505024	2					
ANR	10505338	MultiplicativeExpression	width * 3		10505024	0		*			
ANR	10505339	Identifier	width		10505024	0					
ANR	10505340	PrimaryExpression	3		10505024	1					
ANR	10505341	ExpressionStatement	"memcpy ( buf2 [ half_win - y ] , buf2 [ half_win ] , width * 3 )"	697:4:17530:17583	10505024	1	True				
ANR	10505342	CallExpression	"memcpy ( buf2 [ half_win - y ] , buf2 [ half_win ] , width * 3 )"		10505024	0					
ANR	10505343	Callee	memcpy		10505024	0					
ANR	10505344	Identifier	memcpy		10505024	0					
ANR	10505345	ArgumentList	buf2 [ half_win - y ]		10505024	1					
ANR	10505346	Argument	buf2 [ half_win - y ]		10505024	0					
ANR	10505347	ArrayIndexing	buf2 [ half_win - y ]		10505024	0					
ANR	10505348	Identifier	buf2		10505024	0					
ANR	10505349	AdditiveExpression	half_win - y		10505024	1		-			
ANR	10505350	Identifier	half_win		10505024	0					
ANR	10505351	Identifier	y		10505024	1					
ANR	10505352	Argument	buf2 [ half_win ]		10505024	1					
ANR	10505353	ArrayIndexing	buf2 [ half_win ]		10505024	0					
ANR	10505354	Identifier	buf2		10505024	0					
ANR	10505355	Identifier	half_win		10505024	1					
ANR	10505356	Argument	width * 3		10505024	2					
ANR	10505357	MultiplicativeExpression	width * 3		10505024	0		*			
ANR	10505358	Identifier	width		10505024	0					
ANR	10505359	PrimaryExpression	3		10505024	1					
ANR	10505360	ForStatement	for ( y = 0 ; y < half_win ; y ++ )		10505024	19					
ANR	10505361	ForInit	y = 0 ;	703:7:17771:17776	10505024	0	True				
ANR	10505362	AssignmentExpression	y = 0		10505024	0		=			
ANR	10505363	Identifier	y		10505024	0					
ANR	10505364	PrimaryExpression	0		10505024	1					
ANR	10505365	Condition	y < half_win	703:14:17778:17789	10505024	1	True				
ANR	10505366	RelationalExpression	y < half_win		10505024	0		<			
ANR	10505367	Identifier	y		10505024	0					
ANR	10505368	Identifier	half_win		10505024	1					
ANR	10505369	PostIncDecOperationExpression	y ++	703:28:17792:17794	10505024	2	True				
ANR	10505370	Identifier	y		10505024	0					
ANR	10505371	IncDec	++		10505024	1					
ANR	10505372	CompoundStatement		43:33:1515:1515	10505024	3					
ANR	10505373	ExpressionStatement	"memcpy ( buf1 [ half_win + y + 1 ] , buf1 [ half_win ] , width * 3 )"	704:4:17803:17860	10505024	0	True				
ANR	10505374	CallExpression	"memcpy ( buf1 [ half_win + y + 1 ] , buf1 [ half_win ] , width * 3 )"		10505024	0					
ANR	10505375	Callee	memcpy		10505024	0					
ANR	10505376	Identifier	memcpy		10505024	0					
ANR	10505377	ArgumentList	buf1 [ half_win + y + 1 ]		10505024	1					
ANR	10505378	Argument	buf1 [ half_win + y + 1 ]		10505024	0					
ANR	10505379	ArrayIndexing	buf1 [ half_win + y + 1 ]		10505024	0					
ANR	10505380	Identifier	buf1		10505024	0					
ANR	10505381	AdditiveExpression	half_win + y + 1		10505024	1		+			
ANR	10505382	Identifier	half_win		10505024	0					
ANR	10505383	AdditiveExpression	y + 1		10505024	1		+			
ANR	10505384	Identifier	y		10505024	0					
ANR	10505385	PrimaryExpression	1		10505024	1					
ANR	10505386	Argument	buf1 [ half_win ]		10505024	1					
ANR	10505387	ArrayIndexing	buf1 [ half_win ]		10505024	0					
ANR	10505388	Identifier	buf1		10505024	0					
ANR	10505389	Identifier	half_win		10505024	1					
ANR	10505390	Argument	width * 3		10505024	2					
ANR	10505391	MultiplicativeExpression	width * 3		10505024	0		*			
ANR	10505392	Identifier	width		10505024	0					
ANR	10505393	PrimaryExpression	3		10505024	1					
ANR	10505394	ExpressionStatement	"memcpy ( buf2 [ half_win + y + 1 ] , buf2 [ half_win ] , width * 3 )"	705:4:17866:17923	10505024	1	True				
ANR	10505395	CallExpression	"memcpy ( buf2 [ half_win + y + 1 ] , buf2 [ half_win ] , width * 3 )"		10505024	0					
ANR	10505396	Callee	memcpy		10505024	0					
ANR	10505397	Identifier	memcpy		10505024	0					
ANR	10505398	ArgumentList	buf2 [ half_win + y + 1 ]		10505024	1					
ANR	10505399	Argument	buf2 [ half_win + y + 1 ]		10505024	0					
ANR	10505400	ArrayIndexing	buf2 [ half_win + y + 1 ]		10505024	0					
ANR	10505401	Identifier	buf2		10505024	0					
ANR	10505402	AdditiveExpression	half_win + y + 1		10505024	1		+			
ANR	10505403	Identifier	half_win		10505024	0					
ANR	10505404	AdditiveExpression	y + 1		10505024	1		+			
ANR	10505405	Identifier	y		10505024	0					
ANR	10505406	PrimaryExpression	1		10505024	1					
ANR	10505407	Argument	buf2 [ half_win ]		10505024	1					
ANR	10505408	ArrayIndexing	buf2 [ half_win ]		10505024	0					
ANR	10505409	Identifier	buf2		10505024	0					
ANR	10505410	Identifier	half_win		10505024	1					
ANR	10505411	Argument	width * 3		10505024	2					
ANR	10505412	MultiplicativeExpression	width * 3		10505024	0		*			
ANR	10505413	Identifier	width		10505024	0					
ANR	10505414	PrimaryExpression	3		10505024	1					
ANR	10505415	ForStatement	for ( y = 0 ; y < height ; y ++ )		10505024	20					
ANR	10505416	ForInit	y = 0 ;	709:7:17958:17963	10505024	0	True				
ANR	10505417	AssignmentExpression	y = 0		10505024	0		=			
ANR	10505418	Identifier	y		10505024	0					
ANR	10505419	PrimaryExpression	0		10505024	1					
ANR	10505420	Condition	y < height	709:14:17965:17974	10505024	1	True				
ANR	10505421	RelationalExpression	y < height		10505024	0		<			
ANR	10505422	Identifier	y		10505024	0					
ANR	10505423	Identifier	height		10505024	1					
ANR	10505424	PostIncDecOperationExpression	y ++	709:26:17977:17979	10505024	2	True				
ANR	10505425	Identifier	y		10505024	0					
ANR	10505426	IncDec	++		10505024	1					
ANR	10505427	CompoundStatement		55:6:1822:1853	10505024	3					
ANR	10505428	IdentifierDeclStatement	int x ;	711:6:17994:17999	10505024	0	True				
ANR	10505429	IdentifierDecl	x		10505024	0					
ANR	10505430	IdentifierDeclType	int		10505024	0					
ANR	10505431	Identifier	x		10505024	1					
ANR	10505432	IdentifierDeclStatement	uchar * row1 = buf1 [ 0 ] ;	712:6:18007:18028	10505024	1	True				
ANR	10505433	IdentifierDecl	* row1 = buf1 [ 0 ]		10505024	0					
ANR	10505434	IdentifierDeclType	uchar *		10505024	0					
ANR	10505435	Identifier	row1		10505024	1					
ANR	10505436	AssignmentExpression	* row1 = buf1 [ 0 ]		10505024	2		=			
ANR	10505437	Identifier	row1		10505024	0					
ANR	10505438	ArrayIndexing	buf1 [ 0 ]		10505024	1					
ANR	10505439	Identifier	buf1		10505024	0					
ANR	10505440	PrimaryExpression	0		10505024	1					
ANR	10505441	IdentifierDeclStatement	uchar * row2 = buf2 [ 0 ] ;	713:6:18036:18057	10505024	2	True				
ANR	10505442	IdentifierDecl	* row2 = buf2 [ 0 ]		10505024	0					
ANR	10505443	IdentifierDeclType	uchar *		10505024	0					
ANR	10505444	Identifier	row2		10505024	1					
ANR	10505445	AssignmentExpression	* row2 = buf2 [ 0 ]		10505024	2		=			
ANR	10505446	Identifier	row2		10505024	0					
ANR	10505447	ArrayIndexing	buf2 [ 0 ]		10505024	1					
ANR	10505448	Identifier	buf2		10505024	0					
ANR	10505449	PrimaryExpression	0		10505024	1					
ANR	10505450	IdentifierDeclStatement	uchar * rowmid1 = buf1 [ half_win ] ;	714:6:18065:18096	10505024	3	True				
ANR	10505451	IdentifierDecl	* rowmid1 = buf1 [ half_win ]		10505024	0					
ANR	10505452	IdentifierDeclType	uchar *		10505024	0					
ANR	10505453	Identifier	rowmid1		10505024	1					
ANR	10505454	AssignmentExpression	* rowmid1 = buf1 [ half_win ]		10505024	2		=			
ANR	10505455	Identifier	rowmid1		10505024	0					
ANR	10505456	ArrayIndexing	buf1 [ half_win ]		10505024	1					
ANR	10505457	Identifier	buf1		10505024	0					
ANR	10505458	Identifier	half_win		10505024	1					
ANR	10505459	IdentifierDeclStatement	uchar * rowmid2 = buf2 [ half_win ] ;	715:6:18104:18135	10505024	4	True				
ANR	10505460	IdentifierDecl	* rowmid2 = buf2 [ half_win ]		10505024	0					
ANR	10505461	IdentifierDeclType	uchar *		10505024	0					
ANR	10505462	Identifier	rowmid2		10505024	1					
ANR	10505463	AssignmentExpression	* rowmid2 = buf2 [ half_win ]		10505024	2		=			
ANR	10505464	Identifier	rowmid2		10505024	0					
ANR	10505465	ArrayIndexing	buf2 [ half_win ]		10505024	1					
ANR	10505466	Identifier	buf2		10505024	0					
ANR	10505467	Identifier	half_win		10505024	1					
ANR	10505468	IfStatement	if ( y < height - half_win )		10505024	5					
ANR	10505469	Condition	y < height - half_win	717:10:18148:18168	10505024	0	True				
ANR	10505470	RelationalExpression	y < height - half_win		10505024	0		<			
ANR	10505471	Identifier	y		10505024	0					
ANR	10505472	AdditiveExpression	height - half_win		10505024	1		-			
ANR	10505473	Identifier	height		10505024	0					
ANR	10505474	Identifier	half_win		10505024	1					
ANR	10505475	CompoundStatement		58:8:1897:1897	10505024	1					
ANR	10505476	IfStatement	"if ( image_get_rgb_scan_line_with_error ( image1 , row1 , 1 , y + half_win , & rcode ) )"		10505024	0					
ANR	10505477	Condition	"image_get_rgb_scan_line_with_error ( image1 , row1 , 1 , y + half_win , & rcode )"	719:16:18197:18270	10505024	0	True				
ANR	10505478	CallExpression	"image_get_rgb_scan_line_with_error ( image1 , row1 , 1 , y + half_win , & rcode )"		10505024	0					
ANR	10505479	Callee	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505480	Identifier	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505481	ArgumentList	image1		10505024	1					
ANR	10505482	Argument	image1		10505024	0					
ANR	10505483	Identifier	image1		10505024	0					
ANR	10505484	Argument	row1		10505024	1					
ANR	10505485	Identifier	row1		10505024	0					
ANR	10505486	Argument	1		10505024	2					
ANR	10505487	PrimaryExpression	1		10505024	0					
ANR	10505488	Argument	y + half_win		10505024	3					
ANR	10505489	AdditiveExpression	y + half_win		10505024	0		+			
ANR	10505490	Identifier	y		10505024	0					
ANR	10505491	Identifier	half_win		10505024	1					
ANR	10505492	Argument	& rcode		10505024	4					
ANR	10505493	UnaryOperationExpression	& rcode		10505024	0					
ANR	10505494	UnaryOperator	&		10505024	0					
ANR	10505495	Identifier	rcode		10505024	1					
ANR	10505496	GotoStatement	goto ex ;	720:16:18289:18296	10505024	1	True				
ANR	10505497	Identifier	ex		10505024	0					
ANR	10505498	IfStatement	"if ( image_get_rgb_scan_line_with_error ( image2 , row2 , 2 , y + half_win , & rcode ) )"		10505024	1					
ANR	10505499	Condition	"image_get_rgb_scan_line_with_error ( image2 , row2 , 2 , y + half_win , & rcode )"	721:16:18314:18387	10505024	0	True				
ANR	10505500	CallExpression	"image_get_rgb_scan_line_with_error ( image2 , row2 , 2 , y + half_win , & rcode )"		10505024	0					
ANR	10505501	Callee	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505502	Identifier	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10505503	ArgumentList	image2		10505024	1					
ANR	10505504	Argument	image2		10505024	0					
ANR	10505505	Identifier	image2		10505024	0					
ANR	10505506	Argument	row2		10505024	1					
ANR	10505507	Identifier	row2		10505024	0					
ANR	10505508	Argument	2		10505024	2					
ANR	10505509	PrimaryExpression	2		10505024	0					
ANR	10505510	Argument	y + half_win		10505024	3					
ANR	10505511	AdditiveExpression	y + half_win		10505024	0		+			
ANR	10505512	Identifier	y		10505024	0					
ANR	10505513	Identifier	half_win		10505024	1					
ANR	10505514	Argument	& rcode		10505024	4					
ANR	10505515	UnaryOperationExpression	& rcode		10505024	0					
ANR	10505516	UnaryOperator	&		10505024	0					
ANR	10505517	Identifier	rcode		10505024	1					
ANR	10505518	GotoStatement	goto ex ;	722:16:18406:18413	10505024	1	True				
ANR	10505519	Identifier	ex		10505024	0					
ANR	10505520	IfStatement	if ( out_buf )		10505024	6					
ANR	10505521	Condition	out_buf	724:10:18435:18441	10505024	0	True				
ANR	10505522	Identifier	out_buf		10505024	0					
ANR	10505523	ExpressionStatement	"memset ( out_buf , 0 , out_buffer_size * 2 )"	725:8:18452:18489	10505024	1	True				
ANR	10505524	CallExpression	"memset ( out_buf , 0 , out_buffer_size * 2 )"		10505024	0					
ANR	10505525	Callee	memset		10505024	0					
ANR	10505526	Identifier	memset		10505024	0					
ANR	10505527	ArgumentList	out_buf		10505024	1					
ANR	10505528	Argument	out_buf		10505024	0					
ANR	10505529	Identifier	out_buf		10505024	0					
ANR	10505530	Argument	0		10505024	1					
ANR	10505531	PrimaryExpression	0		10505024	0					
ANR	10505532	Argument	out_buffer_size * 2		10505024	2					
ANR	10505533	MultiplicativeExpression	out_buffer_size * 2		10505024	0		*			
ANR	10505534	Identifier	out_buffer_size		10505024	0					
ANR	10505535	PrimaryExpression	2		10505024	1					
ANR	10505536	IfStatement	"if ( memcmp ( rowmid1 , rowmid2 , width * 3 ) )"		10505024	7					
ANR	10505537	Condition	"memcmp ( rowmid1 , rowmid2 , width * 3 )"	727:10:18502:18536	10505024	0	True				
ANR	10505538	CallExpression	"memcmp ( rowmid1 , rowmid2 , width * 3 )"		10505024	0					
ANR	10505539	Callee	memcmp		10505024	0					
ANR	10505540	Identifier	memcmp		10505024	0					
ANR	10505541	ArgumentList	rowmid1		10505024	1					
ANR	10505542	Argument	rowmid1		10505024	0					
ANR	10505543	Identifier	rowmid1		10505024	0					
ANR	10505544	Argument	rowmid2		10505024	1					
ANR	10505545	Identifier	rowmid2		10505024	0					
ANR	10505546	Argument	width * 3		10505024	2					
ANR	10505547	MultiplicativeExpression	width * 3		10505024	0		*			
ANR	10505548	Identifier	width		10505024	0					
ANR	10505549	PrimaryExpression	3		10505024	1					
ANR	10505550	CompoundStatement		68:8:2265:2265	10505024	1					
ANR	10505551	ForStatement	for ( x = 0 ; x < width ; x ++ )		10505024	0					
ANR	10505552	ForInit	x = 0 ;	729:15:18564:18569	10505024	0	True				
ANR	10505553	AssignmentExpression	x = 0		10505024	0		=			
ANR	10505554	Identifier	x		10505024	0					
ANR	10505555	PrimaryExpression	0		10505024	1					
ANR	10505556	Condition	x < width	729:22:18571:18579	10505024	1	True				
ANR	10505557	RelationalExpression	x < width		10505024	0		<			
ANR	10505558	Identifier	x		10505024	0					
ANR	10505559	Identifier	width		10505024	1					
ANR	10505560	PostIncDecOperationExpression	x ++	729:33:18582:18584	10505024	2	True				
ANR	10505561	Identifier	x		10505024	0					
ANR	10505562	IncDec	++		10505024	1					
ANR	10505563	CompoundStatement		70:12:2317:2317	10505024	3					
ANR	10505564	IfStatement	if ( rowmid1 [ x * 3 ] != rowmid2 [ x * 3 ] || rowmid1 [ x * 3 + 1 ] != rowmid2 [ x * 3 + 1 ] || rowmid1 [ x * 3 + 2 ] != rowmid2 [ x * 3 + 2 ] )		10505024	0					
ANR	10505565	Condition	rowmid1 [ x * 3 ] != rowmid2 [ x * 3 ] || rowmid1 [ x * 3 + 1 ] != rowmid2 [ x * 3 + 1 ] || rowmid1 [ x * 3 + 2 ] != rowmid2 [ x * 3 + 2 ]	731:18:18619:18774	10505024	0	True				
ANR	10505566	OrExpression	rowmid1 [ x * 3 ] != rowmid2 [ x * 3 ] || rowmid1 [ x * 3 + 1 ] != rowmid2 [ x * 3 + 1 ] || rowmid1 [ x * 3 + 2 ] != rowmid2 [ x * 3 + 2 ]		10505024	0		||			
ANR	10505567	EqualityExpression	rowmid1 [ x * 3 ] != rowmid2 [ x * 3 ]		10505024	0		!=			
ANR	10505568	ArrayIndexing	rowmid1 [ x * 3 ]		10505024	0					
ANR	10505569	Identifier	rowmid1		10505024	0					
ANR	10505570	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10505571	Identifier	x		10505024	0					
ANR	10505572	PrimaryExpression	3		10505024	1					
ANR	10505573	ArrayIndexing	rowmid2 [ x * 3 ]		10505024	1					
ANR	10505574	Identifier	rowmid2		10505024	0					
ANR	10505575	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10505576	Identifier	x		10505024	0					
ANR	10505577	PrimaryExpression	3		10505024	1					
ANR	10505578	OrExpression	rowmid1 [ x * 3 + 1 ] != rowmid2 [ x * 3 + 1 ] || rowmid1 [ x * 3 + 2 ] != rowmid2 [ x * 3 + 2 ]		10505024	1		||			
ANR	10505579	EqualityExpression	rowmid1 [ x * 3 + 1 ] != rowmid2 [ x * 3 + 1 ]		10505024	0		!=			
ANR	10505580	ArrayIndexing	rowmid1 [ x * 3 + 1 ]		10505024	0					
ANR	10505581	Identifier	rowmid1		10505024	0					
ANR	10505582	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505583	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505584	Identifier	x		10505024	0					
ANR	10505585	PrimaryExpression	3		10505024	1					
ANR	10505586	PrimaryExpression	1		10505024	1					
ANR	10505587	ArrayIndexing	rowmid2 [ x * 3 + 1 ]		10505024	1					
ANR	10505588	Identifier	rowmid2		10505024	0					
ANR	10505589	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505590	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505591	Identifier	x		10505024	0					
ANR	10505592	PrimaryExpression	3		10505024	1					
ANR	10505593	PrimaryExpression	1		10505024	1					
ANR	10505594	EqualityExpression	rowmid1 [ x * 3 + 2 ] != rowmid2 [ x * 3 + 2 ]		10505024	1		!=			
ANR	10505595	ArrayIndexing	rowmid1 [ x * 3 + 2 ]		10505024	0					
ANR	10505596	Identifier	rowmid1		10505024	0					
ANR	10505597	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505598	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505599	Identifier	x		10505024	0					
ANR	10505600	PrimaryExpression	3		10505024	1					
ANR	10505601	PrimaryExpression	2		10505024	1					
ANR	10505602	ArrayIndexing	rowmid2 [ x * 3 + 2 ]		10505024	1					
ANR	10505603	Identifier	rowmid2		10505024	0					
ANR	10505604	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505605	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505606	Identifier	x		10505024	0					
ANR	10505607	PrimaryExpression	3		10505024	1					
ANR	10505608	PrimaryExpression	2		10505024	1					
ANR	10505609	CompoundStatement		74:16:2511:2511	10505024	1					
ANR	10505610	ExpressionStatement	freport -> n_diff ++	735:18:18813:18830	10505024	0	True				
ANR	10505611	PostIncDecOperationExpression	freport -> n_diff ++		10505024	0					
ANR	10505612	PtrMemberAccess	freport -> n_diff		10505024	0					
ANR	10505613	Identifier	freport		10505024	0					
ANR	10505614	Identifier	n_diff		10505024	1					
ANR	10505615	IncDec	++		10505024	1					
ANR	10505616	IfStatement	if ( freport -> max_color_error < 440 )		10505024	1					
ANR	10505617	Condition	freport -> max_color_error < 440	740:23:19145:19174	10505024	0	True				
ANR	10505618	RelationalExpression	freport -> max_color_error < 440		10505024	0		<			
ANR	10505619	PtrMemberAccess	freport -> max_color_error		10505024	0					
ANR	10505620	Identifier	freport		10505024	0					
ANR	10505621	Identifier	max_color_error		10505024	1					
ANR	10505622	PrimaryExpression	440		10505024	1					
ANR	10505623	CompoundStatement		80:55:2895:2895	10505024	1					
ANR	10505624	ExpressionStatement	diff [ 0 ] = rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ]	741:22:19201:19242	10505024	0	True				
ANR	10505625	AssignmentExpression	diff [ 0 ] = rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ]		10505024	0		=			
ANR	10505626	ArrayIndexing	diff [ 0 ]		10505024	0					
ANR	10505627	Identifier	diff		10505024	0					
ANR	10505628	PrimaryExpression	0		10505024	1					
ANR	10505629	AdditiveExpression	rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ]		10505024	1		-			
ANR	10505630	ArrayIndexing	rowmid1 [ x * 3 ]		10505024	0					
ANR	10505631	Identifier	rowmid1		10505024	0					
ANR	10505632	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10505633	Identifier	x		10505024	0					
ANR	10505634	PrimaryExpression	3		10505024	1					
ANR	10505635	ArrayIndexing	rowmid2 [ x * 3 ]		10505024	1					
ANR	10505636	Identifier	rowmid2		10505024	0					
ANR	10505637	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10505638	Identifier	x		10505024	0					
ANR	10505639	PrimaryExpression	3		10505024	1					
ANR	10505640	ExpressionStatement	diff [ 1 ] = rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]	742:22:19266:19315	10505024	1	True				
ANR	10505641	AssignmentExpression	diff [ 1 ] = rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	0		=			
ANR	10505642	ArrayIndexing	diff [ 1 ]		10505024	0					
ANR	10505643	Identifier	diff		10505024	0					
ANR	10505644	PrimaryExpression	1		10505024	1					
ANR	10505645	AdditiveExpression	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	1		-			
ANR	10505646	ArrayIndexing	rowmid1 [ x * 3 + 1 ]		10505024	0					
ANR	10505647	Identifier	rowmid1		10505024	0					
ANR	10505648	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505649	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505650	Identifier	x		10505024	0					
ANR	10505651	PrimaryExpression	3		10505024	1					
ANR	10505652	PrimaryExpression	1		10505024	1					
ANR	10505653	ArrayIndexing	rowmid2 [ x * 3 + 1 ]		10505024	1					
ANR	10505654	Identifier	rowmid2		10505024	0					
ANR	10505655	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505656	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505657	Identifier	x		10505024	0					
ANR	10505658	PrimaryExpression	3		10505024	1					
ANR	10505659	PrimaryExpression	1		10505024	1					
ANR	10505660	ExpressionStatement	diff [ 2 ] = rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]	743:22:19339:19388	10505024	2	True				
ANR	10505661	AssignmentExpression	diff [ 2 ] = rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	0		=			
ANR	10505662	ArrayIndexing	diff [ 2 ]		10505024	0					
ANR	10505663	Identifier	diff		10505024	0					
ANR	10505664	PrimaryExpression	2		10505024	1					
ANR	10505665	AdditiveExpression	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	1		-			
ANR	10505666	ArrayIndexing	rowmid1 [ x * 3 + 2 ]		10505024	0					
ANR	10505667	Identifier	rowmid1		10505024	0					
ANR	10505668	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505669	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505670	Identifier	x		10505024	0					
ANR	10505671	PrimaryExpression	3		10505024	1					
ANR	10505672	PrimaryExpression	2		10505024	1					
ANR	10505673	ArrayIndexing	rowmid2 [ x * 3 + 2 ]		10505024	1					
ANR	10505674	Identifier	rowmid2		10505024	0					
ANR	10505675	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505676	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505677	Identifier	x		10505024	0					
ANR	10505678	PrimaryExpression	3		10505024	1					
ANR	10505679	PrimaryExpression	2		10505024	1					
ANR	10505680	ExpressionStatement	color_diff = sqrt ( diff [ 0 ] * diff [ 0 ] + diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ] )	744:22:19412:19482	10505024	3	True				
ANR	10505681	AssignmentExpression	color_diff = sqrt ( diff [ 0 ] * diff [ 0 ] + diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ] )		10505024	0		=			
ANR	10505682	Identifier	color_diff		10505024	0					
ANR	10505683	CallExpression	sqrt ( diff [ 0 ] * diff [ 0 ] + diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ] )		10505024	1					
ANR	10505684	Callee	sqrt		10505024	0					
ANR	10505685	Identifier	sqrt		10505024	0					
ANR	10505686	ArgumentList	diff [ 0 ] * diff [ 0 ] + diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ]		10505024	1					
ANR	10505687	Argument	diff [ 0 ] * diff [ 0 ] + diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ]		10505024	0					
ANR	10505688	AdditiveExpression	diff [ 0 ] * diff [ 0 ] + diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ]		10505024	0		+			
ANR	10505689	MultiplicativeExpression	diff [ 0 ] * diff [ 0 ]		10505024	0		*			
ANR	10505690	ArrayIndexing	diff [ 0 ]		10505024	0					
ANR	10505691	Identifier	diff		10505024	0					
ANR	10505692	PrimaryExpression	0		10505024	1					
ANR	10505693	ArrayIndexing	diff [ 0 ]		10505024	1					
ANR	10505694	Identifier	diff		10505024	0					
ANR	10505695	PrimaryExpression	0		10505024	1					
ANR	10505696	AdditiveExpression	diff [ 1 ] * diff [ 1 ] + diff [ 2 ] * diff [ 2 ]		10505024	1		+			
ANR	10505697	MultiplicativeExpression	diff [ 1 ] * diff [ 1 ]		10505024	0		*			
ANR	10505698	ArrayIndexing	diff [ 1 ]		10505024	0					
ANR	10505699	Identifier	diff		10505024	0					
ANR	10505700	PrimaryExpression	1		10505024	1					
ANR	10505701	ArrayIndexing	diff [ 1 ]		10505024	1					
ANR	10505702	Identifier	diff		10505024	0					
ANR	10505703	PrimaryExpression	1		10505024	1					
ANR	10505704	MultiplicativeExpression	diff [ 2 ] * diff [ 2 ]		10505024	1		*			
ANR	10505705	ArrayIndexing	diff [ 2 ]		10505024	0					
ANR	10505706	Identifier	diff		10505024	0					
ANR	10505707	PrimaryExpression	2		10505024	1					
ANR	10505708	ArrayIndexing	diff [ 2 ]		10505024	1					
ANR	10505709	Identifier	diff		10505024	0					
ANR	10505710	PrimaryExpression	2		10505024	1					
ANR	10505711	IfStatement	if ( color_diff > freport -> max_color_error )		10505024	4					
ANR	10505712	Condition	color_diff > freport -> max_color_error	745:26:19510:19546	10505024	0	True				
ANR	10505713	RelationalExpression	color_diff > freport -> max_color_error		10505024	0		>			
ANR	10505714	Identifier	color_diff		10505024	0					
ANR	10505715	PtrMemberAccess	freport -> max_color_error		10505024	1					
ANR	10505716	Identifier	freport		10505024	0					
ANR	10505717	Identifier	max_color_error		10505024	1					
ANR	10505718	CompoundStatement		85:65:3267:3267	10505024	1					
ANR	10505719	ExpressionStatement	freport -> max_color_error = color_diff	746:24:19575:19612	10505024	0	True				
ANR	10505720	AssignmentExpression	freport -> max_color_error = color_diff		10505024	0		=			
ANR	10505721	PtrMemberAccess	freport -> max_color_error		10505024	0					
ANR	10505722	Identifier	freport		10505024	0					
ANR	10505723	Identifier	max_color_error		10505024	1					
ANR	10505724	Identifier	color_diff		10505024	1					
ANR	10505725	IfStatement	if ( freport -> n_diff == 1 )		10505024	5					
ANR	10505726	Condition	freport -> n_diff == 1	748:26:19664:19683	10505024	0	True				
ANR	10505727	EqualityExpression	freport -> n_diff == 1		10505024	0		==			
ANR	10505728	PtrMemberAccess	freport -> n_diff		10505024	0					
ANR	10505729	Identifier	freport		10505024	0					
ANR	10505730	Identifier	n_diff		10505024	1					
ANR	10505731	PrimaryExpression	1		10505024	1					
ANR	10505732	CompoundStatement		88:48:3404:3404	10505024	1					
ANR	10505733	ExpressionStatement	freport -> avg_color_error = color_diff	749:24:19712:19749	10505024	0	True				
ANR	10505734	AssignmentExpression	freport -> avg_color_error = color_diff		10505024	0		=			
ANR	10505735	PtrMemberAccess	freport -> avg_color_error		10505024	0					
ANR	10505736	Identifier	freport		10505024	0					
ANR	10505737	Identifier	avg_color_error		10505024	1					
ANR	10505738	Identifier	color_diff		10505024	1					
ANR	10505739	ElseStatement	else		10505024	0					
ANR	10505740	CompoundStatement		90:29:3498:3498	10505024	0					
ANR	10505741	ExpressionStatement	freport -> avg_color_error = ( freport -> avg_color_error * ( freport -> n_diff - 1 ) + color_diff ) / freport -> n_diff	751:24:19806:19969	10505024	0	True				
ANR	10505742	AssignmentExpression	freport -> avg_color_error = ( freport -> avg_color_error * ( freport -> n_diff - 1 ) + color_diff ) / freport -> n_diff		10505024	0		=			
ANR	10505743	PtrMemberAccess	freport -> avg_color_error		10505024	0					
ANR	10505744	Identifier	freport		10505024	0					
ANR	10505745	Identifier	avg_color_error		10505024	1					
ANR	10505746	MultiplicativeExpression	( freport -> avg_color_error * ( freport -> n_diff - 1 ) + color_diff ) / freport -> n_diff		10505024	1		/			
ANR	10505747	AdditiveExpression	freport -> avg_color_error * ( freport -> n_diff - 1 ) + color_diff		10505024	0		+			
ANR	10505748	MultiplicativeExpression	freport -> avg_color_error * ( freport -> n_diff - 1 )		10505024	0		*			
ANR	10505749	PtrMemberAccess	freport -> avg_color_error		10505024	0					
ANR	10505750	Identifier	freport		10505024	0					
ANR	10505751	Identifier	avg_color_error		10505024	1					
ANR	10505752	AdditiveExpression	freport -> n_diff - 1		10505024	1		-			
ANR	10505753	PtrMemberAccess	freport -> n_diff		10505024	0					
ANR	10505754	Identifier	freport		10505024	0					
ANR	10505755	Identifier	n_diff		10505024	1					
ANR	10505756	PrimaryExpression	1		10505024	1					
ANR	10505757	Identifier	color_diff		10505024	1					
ANR	10505758	PtrMemberAccess	freport -> n_diff		10505024	1					
ANR	10505759	Identifier	freport		10505024	0					
ANR	10505760	Identifier	n_diff		10505024	1					
ANR	10505761	IfStatement	if ( abs ( rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] ) > tolerance )		10505024	2					
ANR	10505762	Condition	abs ( rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] ) > tolerance	756:22:20037:20251	10505024	0	True				
ANR	10505763	OrExpression	abs ( rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] ) > tolerance		10505024	0		||			
ANR	10505764	RelationalExpression	abs ( rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ] ) > tolerance		10505024	0		>			
ANR	10505765	CallExpression	abs ( rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ] )		10505024	0					
ANR	10505766	Callee	abs		10505024	0					
ANR	10505767	Identifier	abs		10505024	0					
ANR	10505768	ArgumentList	rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ]		10505024	1					
ANR	10505769	Argument	rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ]		10505024	0					
ANR	10505770	AdditiveExpression	rowmid1 [ x * 3 ] - rowmid2 [ x * 3 ]		10505024	0		-			
ANR	10505771	ArrayIndexing	rowmid1 [ x * 3 ]		10505024	0					
ANR	10505772	Identifier	rowmid1		10505024	0					
ANR	10505773	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10505774	Identifier	x		10505024	0					
ANR	10505775	PrimaryExpression	3		10505024	1					
ANR	10505776	ArrayIndexing	rowmid2 [ x * 3 ]		10505024	1					
ANR	10505777	Identifier	rowmid2		10505024	0					
ANR	10505778	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10505779	Identifier	x		10505024	0					
ANR	10505780	PrimaryExpression	3		10505024	1					
ANR	10505781	Identifier	tolerance		10505024	1					
ANR	10505782	OrExpression	abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] ) > tolerance || abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] ) > tolerance		10505024	1		||			
ANR	10505783	RelationalExpression	abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] ) > tolerance		10505024	0		>			
ANR	10505784	CallExpression	abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] )		10505024	0					
ANR	10505785	Callee	abs		10505024	0					
ANR	10505786	Identifier	abs		10505024	0					
ANR	10505787	ArgumentList	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	1					
ANR	10505788	Argument	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	0					
ANR	10505789	AdditiveExpression	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	0		-			
ANR	10505790	ArrayIndexing	rowmid1 [ x * 3 + 1 ]		10505024	0					
ANR	10505791	Identifier	rowmid1		10505024	0					
ANR	10505792	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505793	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505794	Identifier	x		10505024	0					
ANR	10505795	PrimaryExpression	3		10505024	1					
ANR	10505796	PrimaryExpression	1		10505024	1					
ANR	10505797	ArrayIndexing	rowmid2 [ x * 3 + 1 ]		10505024	1					
ANR	10505798	Identifier	rowmid2		10505024	0					
ANR	10505799	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505800	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505801	Identifier	x		10505024	0					
ANR	10505802	PrimaryExpression	3		10505024	1					
ANR	10505803	PrimaryExpression	1		10505024	1					
ANR	10505804	Identifier	tolerance		10505024	1					
ANR	10505805	RelationalExpression	abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] ) > tolerance		10505024	1		>			
ANR	10505806	CallExpression	abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] )		10505024	0					
ANR	10505807	Callee	abs		10505024	0					
ANR	10505808	Identifier	abs		10505024	0					
ANR	10505809	ArgumentList	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	1					
ANR	10505810	Argument	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	0					
ANR	10505811	AdditiveExpression	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	0		-			
ANR	10505812	ArrayIndexing	rowmid1 [ x * 3 + 2 ]		10505024	0					
ANR	10505813	Identifier	rowmid1		10505024	0					
ANR	10505814	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505815	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505816	Identifier	x		10505024	0					
ANR	10505817	PrimaryExpression	3		10505024	1					
ANR	10505818	PrimaryExpression	2		10505024	1					
ANR	10505819	ArrayIndexing	rowmid2 [ x * 3 + 2 ]		10505024	1					
ANR	10505820	Identifier	rowmid2		10505024	0					
ANR	10505821	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505822	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505823	Identifier	x		10505024	0					
ANR	10505824	PrimaryExpression	3		10505024	1					
ANR	10505825	PrimaryExpression	2		10505024	1					
ANR	10505826	Identifier	tolerance		10505024	1					
ANR	10505827	CompoundStatement		99:20:3992:3992	10505024	1					
ANR	10505828	ExpressionStatement	freport -> n_outof_tolerance ++	760:22:20298:20326	10505024	0	True				
ANR	10505829	PostIncDecOperationExpression	freport -> n_outof_tolerance ++		10505024	0					
ANR	10505830	PtrMemberAccess	freport -> n_outof_tolerance		10505024	0					
ANR	10505831	Identifier	freport		10505024	0					
ANR	10505832	Identifier	n_outof_tolerance		10505024	1					
ANR	10505833	IncDec	++		10505024	1					
ANR	10505834	IfStatement	"if ( check_window ( buf1 , buf2 , fparams , x , y , width , height ) )"		10505024	1					
ANR	10505835	Condition	"check_window ( buf1 , buf2 , fparams , x , y , width , height )"	761:26:20354:20408	10505024	0	True				
ANR	10505836	CallExpression	"check_window ( buf1 , buf2 , fparams , x , y , width , height )"		10505024	0					
ANR	10505837	Callee	check_window		10505024	0					
ANR	10505838	Identifier	check_window		10505024	0					
ANR	10505839	ArgumentList	buf1		10505024	1					
ANR	10505840	Argument	buf1		10505024	0					
ANR	10505841	Identifier	buf1		10505024	0					
ANR	10505842	Argument	buf2		10505024	1					
ANR	10505843	Identifier	buf2		10505024	0					
ANR	10505844	Argument	fparams		10505024	2					
ANR	10505845	Identifier	fparams		10505024	0					
ANR	10505846	Argument	x		10505024	3					
ANR	10505847	Identifier	x		10505024	0					
ANR	10505848	Argument	y		10505024	4					
ANR	10505849	Identifier	y		10505024	0					
ANR	10505850	Argument	width		10505024	5					
ANR	10505851	Identifier	width		10505024	0					
ANR	10505852	Argument	height		10505024	6					
ANR	10505853	Identifier	height		10505024	0					
ANR	10505854	CompoundStatement		101:83:4129:4129	10505024	1					
ANR	10505855	ExpressionStatement	freport -> n_outof_window ++	762:24:20437:20462	10505024	0	True				
ANR	10505856	PostIncDecOperationExpression	freport -> n_outof_window ++		10505024	0					
ANR	10505857	PtrMemberAccess	freport -> n_outof_window		10505024	0					
ANR	10505858	Identifier	freport		10505024	0					
ANR	10505859	Identifier	n_outof_window		10505024	1					
ANR	10505860	IncDec	++		10505024	1					
ANR	10505861	IfStatement	if ( out_buf && x < image1 -> width )		10505024	1					
ANR	10505862	Condition	out_buf && x < image1 -> width	763:28:20492:20519	10505024	0	True				
ANR	10505863	AndExpression	out_buf && x < image1 -> width		10505024	0		&&			
ANR	10505864	Identifier	out_buf		10505024	0					
ANR	10505865	RelationalExpression	x < image1 -> width		10505024	1		<			
ANR	10505866	Identifier	x		10505024	0					
ANR	10505867	PtrMemberAccess	image1 -> width		10505024	1					
ANR	10505868	Identifier	image1		10505024	0					
ANR	10505869	Identifier	width		10505024	1					
ANR	10505870	CompoundStatement		103:58:4240:4240	10505024	1					
ANR	10505871	ExpressionStatement	out_buf [ x * 3 + 0 ] = abs ( rowmid1 [ x * 3 + 0 ] - rowmid2 [ x * 3 + 0 ] )	764:26:20550:20614	10505024	0	True				
ANR	10505872	AssignmentExpression	out_buf [ x * 3 + 0 ] = abs ( rowmid1 [ x * 3 + 0 ] - rowmid2 [ x * 3 + 0 ] )		10505024	0		=			
ANR	10505873	ArrayIndexing	out_buf [ x * 3 + 0 ]		10505024	0					
ANR	10505874	Identifier	out_buf		10505024	0					
ANR	10505875	AdditiveExpression	x * 3 + 0		10505024	1		+			
ANR	10505876	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505877	Identifier	x		10505024	0					
ANR	10505878	PrimaryExpression	3		10505024	1					
ANR	10505879	PrimaryExpression	0		10505024	1					
ANR	10505880	CallExpression	abs ( rowmid1 [ x * 3 + 0 ] - rowmid2 [ x * 3 + 0 ] )		10505024	1					
ANR	10505881	Callee	abs		10505024	0					
ANR	10505882	Identifier	abs		10505024	0					
ANR	10505883	ArgumentList	rowmid1 [ x * 3 + 0 ] - rowmid2 [ x * 3 + 0 ]		10505024	1					
ANR	10505884	Argument	rowmid1 [ x * 3 + 0 ] - rowmid2 [ x * 3 + 0 ]		10505024	0					
ANR	10505885	AdditiveExpression	rowmid1 [ x * 3 + 0 ] - rowmid2 [ x * 3 + 0 ]		10505024	0		-			
ANR	10505886	ArrayIndexing	rowmid1 [ x * 3 + 0 ]		10505024	0					
ANR	10505887	Identifier	rowmid1		10505024	0					
ANR	10505888	AdditiveExpression	x * 3 + 0		10505024	1		+			
ANR	10505889	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505890	Identifier	x		10505024	0					
ANR	10505891	PrimaryExpression	3		10505024	1					
ANR	10505892	PrimaryExpression	0		10505024	1					
ANR	10505893	ArrayIndexing	rowmid2 [ x * 3 + 0 ]		10505024	1					
ANR	10505894	Identifier	rowmid2		10505024	0					
ANR	10505895	AdditiveExpression	x * 3 + 0		10505024	1		+			
ANR	10505896	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505897	Identifier	x		10505024	0					
ANR	10505898	PrimaryExpression	3		10505024	1					
ANR	10505899	PrimaryExpression	0		10505024	1					
ANR	10505900	ExpressionStatement	out_buf [ x * 3 + 1 ] = abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] )	765:26:20642:20706	10505024	1	True				
ANR	10505901	AssignmentExpression	out_buf [ x * 3 + 1 ] = abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] )		10505024	0		=			
ANR	10505902	ArrayIndexing	out_buf [ x * 3 + 1 ]		10505024	0					
ANR	10505903	Identifier	out_buf		10505024	0					
ANR	10505904	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505905	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505906	Identifier	x		10505024	0					
ANR	10505907	PrimaryExpression	3		10505024	1					
ANR	10505908	PrimaryExpression	1		10505024	1					
ANR	10505909	CallExpression	abs ( rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ] )		10505024	1					
ANR	10505910	Callee	abs		10505024	0					
ANR	10505911	Identifier	abs		10505024	0					
ANR	10505912	ArgumentList	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	1					
ANR	10505913	Argument	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	0					
ANR	10505914	AdditiveExpression	rowmid1 [ x * 3 + 1 ] - rowmid2 [ x * 3 + 1 ]		10505024	0		-			
ANR	10505915	ArrayIndexing	rowmid1 [ x * 3 + 1 ]		10505024	0					
ANR	10505916	Identifier	rowmid1		10505024	0					
ANR	10505917	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505918	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505919	Identifier	x		10505024	0					
ANR	10505920	PrimaryExpression	3		10505024	1					
ANR	10505921	PrimaryExpression	1		10505024	1					
ANR	10505922	ArrayIndexing	rowmid2 [ x * 3 + 1 ]		10505024	1					
ANR	10505923	Identifier	rowmid2		10505024	0					
ANR	10505924	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10505925	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505926	Identifier	x		10505024	0					
ANR	10505927	PrimaryExpression	3		10505024	1					
ANR	10505928	PrimaryExpression	1		10505024	1					
ANR	10505929	ExpressionStatement	out_buf [ x * 3 + 2 ] = abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] )	766:26:20734:20798	10505024	2	True				
ANR	10505930	AssignmentExpression	out_buf [ x * 3 + 2 ] = abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] )		10505024	0		=			
ANR	10505931	ArrayIndexing	out_buf [ x * 3 + 2 ]		10505024	0					
ANR	10505932	Identifier	out_buf		10505024	0					
ANR	10505933	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505934	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505935	Identifier	x		10505024	0					
ANR	10505936	PrimaryExpression	3		10505024	1					
ANR	10505937	PrimaryExpression	2		10505024	1					
ANR	10505938	CallExpression	abs ( rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ] )		10505024	1					
ANR	10505939	Callee	abs		10505024	0					
ANR	10505940	Identifier	abs		10505024	0					
ANR	10505941	ArgumentList	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	1					
ANR	10505942	Argument	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	0					
ANR	10505943	AdditiveExpression	rowmid1 [ x * 3 + 2 ] - rowmid2 [ x * 3 + 2 ]		10505024	0		-			
ANR	10505944	ArrayIndexing	rowmid1 [ x * 3 + 2 ]		10505024	0					
ANR	10505945	Identifier	rowmid1		10505024	0					
ANR	10505946	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505947	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505948	Identifier	x		10505024	0					
ANR	10505949	PrimaryExpression	3		10505024	1					
ANR	10505950	PrimaryExpression	2		10505024	1					
ANR	10505951	ArrayIndexing	rowmid2 [ x * 3 + 2 ]		10505024	1					
ANR	10505952	Identifier	rowmid2		10505024	0					
ANR	10505953	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10505954	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10505955	Identifier	x		10505024	0					
ANR	10505956	PrimaryExpression	3		10505024	1					
ANR	10505957	PrimaryExpression	2		10505024	1					
ANR	10505958	IfStatement	if ( fparams -> report_coordinates && ( ( abs ( x - x0 ) > 1 && y == y0 ) || y - y0 > 1 ) )		10505024	2					
ANR	10505959	Condition	fparams -> report_coordinates && ( ( abs ( x - x0 ) > 1 && y == y0 ) || y - y0 > 1 )	768:28:20854:20956	10505024	0	True				
ANR	10505960	AndExpression	fparams -> report_coordinates && ( ( abs ( x - x0 ) > 1 && y == y0 ) || y - y0 > 1 )		10505024	0		&&			
ANR	10505961	PtrMemberAccess	fparams -> report_coordinates		10505024	0					
ANR	10505962	Identifier	fparams		10505024	0					
ANR	10505963	Identifier	report_coordinates		10505024	1					
ANR	10505964	OrExpression	( abs ( x - x0 ) > 1 && y == y0 ) || y - y0 > 1		10505024	1		||			
ANR	10505965	AndExpression	abs ( x - x0 ) > 1 && y == y0		10505024	0		&&			
ANR	10505966	RelationalExpression	abs ( x - x0 ) > 1		10505024	0		>			
ANR	10505967	CallExpression	abs ( x - x0 )		10505024	0					
ANR	10505968	Callee	abs		10505024	0					
ANR	10505969	Identifier	abs		10505024	0					
ANR	10505970	ArgumentList	x - x0		10505024	1					
ANR	10505971	Argument	x - x0		10505024	0					
ANR	10505972	AdditiveExpression	x - x0		10505024	0		-			
ANR	10505973	Identifier	x		10505024	0					
ANR	10505974	Identifier	x0		10505024	1					
ANR	10505975	PrimaryExpression	1		10505024	1					
ANR	10505976	EqualityExpression	y == y0		10505024	1		==			
ANR	10505977	Identifier	y		10505024	0					
ANR	10505978	Identifier	y0		10505024	1					
ANR	10505979	RelationalExpression	y - y0 > 1		10505024	1		>			
ANR	10505980	AdditiveExpression	y - y0		10505024	0		-			
ANR	10505981	Identifier	y		10505024	0					
ANR	10505982	Identifier	y0		10505024	1					
ANR	10505983	PrimaryExpression	1		10505024	1					
ANR	10505984	CompoundStatement		110:26:4703:4703	10505024	1					
ANR	10505985	ExpressionStatement	x0 = x	772:28:21083:21089	10505024	0	True				
ANR	10505986	AssignmentExpression	x0 = x		10505024	0		=			
ANR	10505987	Identifier	x0		10505024	0					
ANR	10505988	Identifier	x		10505024	1					
ANR	10505989	ExpressionStatement	y0 = y	772:36:21091:21097	10505024	1	True				
ANR	10505990	AssignmentExpression	y0 = y		10505024	0		=			
ANR	10505991	Identifier	y0		10505024	0					
ANR	10505992	Identifier	y		10505024	1					
ANR	10505993	ExpressionStatement	mc ++	773:28:21127:21131	10505024	2	True				
ANR	10505994	PostIncDecOperationExpression	mc ++		10505024	0					
ANR	10505995	Identifier	mc		10505024	0					
ANR	10505996	IncDec	++		10505024	1					
ANR	10505997	IfStatement	if ( mc < mmax )		10505024	3					
ANR	10505998	Condition	mc < mmax	774:32:21165:21173	10505024	0	True				
ANR	10505999	RelationalExpression	mc < mmax		10505024	0		<			
ANR	10506000	Identifier	mc		10505024	0					
ANR	10506001	Identifier	mmax		10505024	1					
ANR	10506002	CompoundStatement		114:43:4894:4894	10505024	1					
ANR	10506003	ExpressionStatement	"printf ( ""diff: x=%d y=%d c1=%02X%02X%02X c2=%02X%02X%02X\\n"" , x , y , rowmid1 [ x * 3 ] , rowmid1 [ x * 3 + 1 ] , rowmid1 [ x * 3 + 2 ] , rowmid2 [ x * 3 ] , rowmid2 [ x * 3 + 1 ] , rowmid2 [ x * 3 + 2 ] )"	775:32:21210:21467	10505024	0	True				
ANR	10506004	CallExpression	"printf ( ""diff: x=%d y=%d c1=%02X%02X%02X c2=%02X%02X%02X\\n"" , x , y , rowmid1 [ x * 3 ] , rowmid1 [ x * 3 + 1 ] , rowmid1 [ x * 3 + 2 ] , rowmid2 [ x * 3 ] , rowmid2 [ x * 3 + 1 ] , rowmid2 [ x * 3 + 2 ] )"		10505024	0					
ANR	10506005	Callee	printf		10505024	0					
ANR	10506006	Identifier	printf		10505024	0					
ANR	10506007	ArgumentList	"""diff: x=%d y=%d c1=%02X%02X%02X c2=%02X%02X%02X\\n"""		10505024	1					
ANR	10506008	Argument	"""diff: x=%d y=%d c1=%02X%02X%02X c2=%02X%02X%02X\\n"""		10505024	0					
ANR	10506009	PrimaryExpression	"""diff: x=%d y=%d c1=%02X%02X%02X c2=%02X%02X%02X\\n"""		10505024	0					
ANR	10506010	Argument	x		10505024	1					
ANR	10506011	Identifier	x		10505024	0					
ANR	10506012	Argument	y		10505024	2					
ANR	10506013	Identifier	y		10505024	0					
ANR	10506014	Argument	rowmid1 [ x * 3 ]		10505024	3					
ANR	10506015	ArrayIndexing	rowmid1 [ x * 3 ]		10505024	0					
ANR	10506016	Identifier	rowmid1		10505024	0					
ANR	10506017	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10506018	Identifier	x		10505024	0					
ANR	10506019	PrimaryExpression	3		10505024	1					
ANR	10506020	Argument	rowmid1 [ x * 3 + 1 ]		10505024	4					
ANR	10506021	ArrayIndexing	rowmid1 [ x * 3 + 1 ]		10505024	0					
ANR	10506022	Identifier	rowmid1		10505024	0					
ANR	10506023	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10506024	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10506025	Identifier	x		10505024	0					
ANR	10506026	PrimaryExpression	3		10505024	1					
ANR	10506027	PrimaryExpression	1		10505024	1					
ANR	10506028	Argument	rowmid1 [ x * 3 + 2 ]		10505024	5					
ANR	10506029	ArrayIndexing	rowmid1 [ x * 3 + 2 ]		10505024	0					
ANR	10506030	Identifier	rowmid1		10505024	0					
ANR	10506031	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10506032	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10506033	Identifier	x		10505024	0					
ANR	10506034	PrimaryExpression	3		10505024	1					
ANR	10506035	PrimaryExpression	2		10505024	1					
ANR	10506036	Argument	rowmid2 [ x * 3 ]		10505024	6					
ANR	10506037	ArrayIndexing	rowmid2 [ x * 3 ]		10505024	0					
ANR	10506038	Identifier	rowmid2		10505024	0					
ANR	10506039	MultiplicativeExpression	x * 3		10505024	1		*			
ANR	10506040	Identifier	x		10505024	0					
ANR	10506041	PrimaryExpression	3		10505024	1					
ANR	10506042	Argument	rowmid2 [ x * 3 + 1 ]		10505024	7					
ANR	10506043	ArrayIndexing	rowmid2 [ x * 3 + 1 ]		10505024	0					
ANR	10506044	Identifier	rowmid2		10505024	0					
ANR	10506045	AdditiveExpression	x * 3 + 1		10505024	1		+			
ANR	10506046	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10506047	Identifier	x		10505024	0					
ANR	10506048	PrimaryExpression	3		10505024	1					
ANR	10506049	PrimaryExpression	1		10505024	1					
ANR	10506050	Argument	rowmid2 [ x * 3 + 2 ]		10505024	8					
ANR	10506051	ArrayIndexing	rowmid2 [ x * 3 + 2 ]		10505024	0					
ANR	10506052	Identifier	rowmid2		10505024	0					
ANR	10506053	AdditiveExpression	x * 3 + 2		10505024	1		+			
ANR	10506054	MultiplicativeExpression	x * 3		10505024	0		*			
ANR	10506055	Identifier	x		10505024	0					
ANR	10506056	PrimaryExpression	3		10505024	1					
ANR	10506057	PrimaryExpression	2		10505024	1					
ANR	10506058	ElseStatement	else		10505024	0					
ANR	10506059	IfStatement	if ( mc == mmax )		10505024	0					
ANR	10506060	Condition	mc == mmax	778:39:21508:21517	10505024	0	True				
ANR	10506061	EqualityExpression	mc == mmax		10505024	0		==			
ANR	10506062	Identifier	mc		10505024	0					
ANR	10506063	Identifier	mmax		10505024	1					
ANR	10506064	ExpressionStatement	"printf ( ""Won't report more differences.\\n"" )"	779:32:21552:21594	10505024	1	True				
ANR	10506065	CallExpression	"printf ( ""Won't report more differences.\\n"" )"		10505024	0					
ANR	10506066	Callee	printf		10505024	0					
ANR	10506067	Identifier	printf		10505024	0					
ANR	10506068	ArgumentList	"""Won't report more differences.\\n"""		10505024	1					
ANR	10506069	Argument	"""Won't report more differences.\\n"""		10505024	0					
ANR	10506070	PrimaryExpression	"""Won't report more differences.\\n"""		10505024	0					
ANR	10506071	ExpressionStatement	"roll_window ( buf1 , window_size )"	787:6:21717:21748	10505024	8	True				
ANR	10506072	CallExpression	"roll_window ( buf1 , window_size )"		10505024	0					
ANR	10506073	Callee	roll_window		10505024	0					
ANR	10506074	Identifier	roll_window		10505024	0					
ANR	10506075	ArgumentList	buf1		10505024	1					
ANR	10506076	Argument	buf1		10505024	0					
ANR	10506077	Identifier	buf1		10505024	0					
ANR	10506078	Argument	window_size		10505024	1					
ANR	10506079	Identifier	window_size		10505024	0					
ANR	10506080	ExpressionStatement	"roll_window ( buf2 , window_size )"	788:6:21756:21787	10505024	9	True				
ANR	10506081	CallExpression	"roll_window ( buf2 , window_size )"		10505024	0					
ANR	10506082	Callee	roll_window		10505024	0					
ANR	10506083	Identifier	roll_window		10505024	0					
ANR	10506084	ArgumentList	buf2		10505024	1					
ANR	10506085	Argument	buf2		10505024	0					
ANR	10506086	Identifier	buf2		10505024	0					
ANR	10506087	Argument	window_size		10505024	1					
ANR	10506088	Identifier	window_size		10505024	0					
ANR	10506089	IfStatement	if ( out_buf )		10505024	10					
ANR	10506090	Condition	out_buf	789:10:21799:21805	10505024	0	True				
ANR	10506091	Identifier	out_buf		10505024	0					
ANR	10506092	CompoundStatement		129:19:5526:5526	10505024	1					
ANR	10506093	IfStatement	"if ( image_out -> super . seek ( & image_out -> super , y ) )"		10505024	0					
ANR	10506094	Condition	"image_out -> super . seek ( & image_out -> super , y )"	790:12:21822:21864	10505024	0	True				
ANR	10506095	CallExpression	"image_out -> super . seek ( & image_out -> super , y )"		10505024	0					
ANR	10506096	Callee	image_out -> super . seek		10505024	0					
ANR	10506097	MemberAccess	image_out -> super . seek		10505024	0					
ANR	10506098	PtrMemberAccess	image_out -> super		10505024	0					
ANR	10506099	Identifier	image_out		10505024	0					
ANR	10506100	Identifier	super		10505024	1					
ANR	10506101	Identifier	seek		10505024	1					
ANR	10506102	ArgumentList	& image_out -> super		10505024	1					
ANR	10506103	Argument	& image_out -> super		10505024	0					
ANR	10506104	UnaryOperationExpression	& image_out -> super		10505024	0					
ANR	10506105	UnaryOperator	&		10505024	0					
ANR	10506106	PtrMemberAccess	image_out -> super		10505024	1					
ANR	10506107	Identifier	image_out		10505024	0					
ANR	10506108	Identifier	super		10505024	1					
ANR	10506109	Argument	y		10505024	1					
ANR	10506110	Identifier	y		10505024	0					
ANR	10506111	CompoundStatement		131:10:5595:5595	10505024	1					
ANR	10506112	ExpressionStatement	"printf ( ""I/O Error seeking to the output image position.\\n"" )"	792:12:21891:21951	10505024	0	True				
ANR	10506113	CallExpression	"printf ( ""I/O Error seeking to the output image position.\\n"" )"		10505024	0					
ANR	10506114	Callee	printf		10505024	0					
ANR	10506115	Identifier	printf		10505024	0					
ANR	10506116	ArgumentList	"""I/O Error seeking to the output image position.\\n"""		10505024	1					
ANR	10506117	Argument	"""I/O Error seeking to the output image position.\\n"""		10505024	0					
ANR	10506118	PrimaryExpression	"""I/O Error seeking to the output image position.\\n"""		10505024	0					
ANR	10506119	ExpressionStatement	free ( out_buf )	793:12:21965:21978	10505024	1	True				
ANR	10506120	CallExpression	free ( out_buf )		10505024	0					
ANR	10506121	Callee	free		10505024	0					
ANR	10506122	Identifier	free		10505024	0					
ANR	10506123	ArgumentList	out_buf		10505024	1					
ANR	10506124	Argument	out_buf		10505024	0					
ANR	10506125	Identifier	out_buf		10505024	0					
ANR	10506126	ExpressionStatement	out_buf = NULL	794:12:21992:22006	10505024	2	True				
ANR	10506127	AssignmentExpression	out_buf = NULL		10505024	0		=			
ANR	10506128	Identifier	out_buf		10505024	0					
ANR	10506129	Identifier	NULL		10505024	1					
ANR	10506130	ElseStatement	else		10505024	0					
ANR	10506131	IfStatement	"if ( image_out -> super . write ( & image_out -> super , out_buf , out_buffer_size ) )"		10505024	0					
ANR	10506132	Condition	"image_out -> super . write ( & image_out -> super , out_buf , out_buffer_size )"	796:17:22037:22103	10505024	0	True				
ANR	10506133	CallExpression	"image_out -> super . write ( & image_out -> super , out_buf , out_buffer_size )"		10505024	0					
ANR	10506134	Callee	image_out -> super . write		10505024	0					
ANR	10506135	MemberAccess	image_out -> super . write		10505024	0					
ANR	10506136	PtrMemberAccess	image_out -> super		10505024	0					
ANR	10506137	Identifier	image_out		10505024	0					
ANR	10506138	Identifier	super		10505024	1					
ANR	10506139	Identifier	write		10505024	1					
ANR	10506140	ArgumentList	& image_out -> super		10505024	1					
ANR	10506141	Argument	& image_out -> super		10505024	0					
ANR	10506142	UnaryOperationExpression	& image_out -> super		10505024	0					
ANR	10506143	UnaryOperator	&		10505024	0					
ANR	10506144	PtrMemberAccess	image_out -> super		10505024	1					
ANR	10506145	Identifier	image_out		10505024	0					
ANR	10506146	Identifier	super		10505024	1					
ANR	10506147	Argument	out_buf		10505024	1					
ANR	10506148	Identifier	out_buf		10505024	0					
ANR	10506149	Argument	out_buffer_size		10505024	2					
ANR	10506150	Identifier	out_buffer_size		10505024	0					
ANR	10506151	CompoundStatement		138:10:5835:5835	10505024	1					
ANR	10506152	ExpressionStatement	"printf ( ""I/O Error writing the output image.\\n"" )"	799:12:22131:22179	10505024	0	True				
ANR	10506153	CallExpression	"printf ( ""I/O Error writing the output image.\\n"" )"		10505024	0					
ANR	10506154	Callee	printf		10505024	0					
ANR	10506155	Identifier	printf		10505024	0					
ANR	10506156	ArgumentList	"""I/O Error writing the output image.\\n"""		10505024	1					
ANR	10506157	Argument	"""I/O Error writing the output image.\\n"""		10505024	0					
ANR	10506158	PrimaryExpression	"""I/O Error writing the output image.\\n"""		10505024	0					
ANR	10506159	ExpressionStatement	free ( out_buf )	800:12:22193:22206	10505024	1	True				
ANR	10506160	CallExpression	free ( out_buf )		10505024	0					
ANR	10506161	Callee	free		10505024	0					
ANR	10506162	Identifier	free		10505024	0					
ANR	10506163	ArgumentList	out_buf		10505024	1					
ANR	10506164	Argument	out_buf		10505024	0					
ANR	10506165	Identifier	out_buf		10505024	0					
ANR	10506166	ExpressionStatement	out_buf = NULL	801:12:22220:22234	10505024	2	True				
ANR	10506167	AssignmentExpression	out_buf = NULL		10505024	0		=			
ANR	10506168	Identifier	out_buf		10505024	0					
ANR	10506169	Identifier	NULL		10505024	1					
ANR	10506170	ExpressionStatement	y += half_win	805:2:22264:22277	10505024	21	True				
ANR	10506171	AssignmentExpression	y += half_win		10505024	0		+=			
ANR	10506172	Identifier	y		10505024	0					
ANR	10506173	Identifier	half_win		10505024	1					
ANR	10506174	ForStatement	for ( ; y < max_height ; y ++ )		10505024	22					
ANR	10506175	Condition	y < max_height	806:9:22288:22301	10505024	0	True				
ANR	10506176	RelationalExpression	y < max_height		10505024	0		<			
ANR	10506177	Identifier	y		10505024	0					
ANR	10506178	Identifier	max_height		10505024	1					
ANR	10506179	PostIncDecOperationExpression	y ++	806:25:22304:22306	10505024	1	True				
ANR	10506180	Identifier	y		10505024	0					
ANR	10506181	IncDec	++		10505024	1					
ANR	10506182	CompoundStatement		146:30:6027:6027	10505024	2					
ANR	10506183	IfStatement	if ( y < image1 -> height )		10505024	0					
ANR	10506184	Condition	y < image1 -> height	807:10:22321:22338	10505024	0	True				
ANR	10506185	RelationalExpression	y < image1 -> height		10505024	0		<			
ANR	10506186	Identifier	y		10505024	0					
ANR	10506187	PtrMemberAccess	image1 -> height		10505024	1					
ANR	10506188	Identifier	image1		10505024	0					
ANR	10506189	Identifier	height		10505024	1					
ANR	10506190	CompoundStatement		147:30:6059:6059	10505024	1					
ANR	10506191	IfStatement	"if ( image_get_rgb_scan_line_with_error ( image1 , buf1 [ 0 ] , 1 , y , & rcode ) )"		10505024	0					
ANR	10506192	Condition	"image_get_rgb_scan_line_with_error ( image1 , buf1 [ 0 ] , 1 , y , & rcode )"	808:16:22359:22423	10505024	0	True				
ANR	10506193	CallExpression	"image_get_rgb_scan_line_with_error ( image1 , buf1 [ 0 ] , 1 , y , & rcode )"		10505024	0					
ANR	10506194	Callee	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10506195	Identifier	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10506196	ArgumentList	image1		10505024	1					
ANR	10506197	Argument	image1		10505024	0					
ANR	10506198	Identifier	image1		10505024	0					
ANR	10506199	Argument	buf1 [ 0 ]		10505024	1					
ANR	10506200	ArrayIndexing	buf1 [ 0 ]		10505024	0					
ANR	10506201	Identifier	buf1		10505024	0					
ANR	10506202	PrimaryExpression	0		10505024	1					
ANR	10506203	Argument	1		10505024	2					
ANR	10506204	PrimaryExpression	1		10505024	0					
ANR	10506205	Argument	y		10505024	3					
ANR	10506206	Identifier	y		10505024	0					
ANR	10506207	Argument	& rcode		10505024	4					
ANR	10506208	UnaryOperationExpression	& rcode		10505024	0					
ANR	10506209	UnaryOperator	&		10505024	0					
ANR	10506210	Identifier	rcode		10505024	1					
ANR	10506211	GotoStatement	goto ex ;	809:16:22442:22449	10505024	1	True				
ANR	10506212	Identifier	ex		10505024	0					
ANR	10506213	IfStatement	if ( y < image2 -> height )		10505024	1					
ANR	10506214	Condition	y < image2 -> height	811:10:22469:22486	10505024	0	True				
ANR	10506215	RelationalExpression	y < image2 -> height		10505024	0		<			
ANR	10506216	Identifier	y		10505024	0					
ANR	10506217	PtrMemberAccess	image2 -> height		10505024	1					
ANR	10506218	Identifier	image2		10505024	0					
ANR	10506219	Identifier	height		10505024	1					
ANR	10506220	CompoundStatement		151:30:6207:6207	10505024	1					
ANR	10506221	IfStatement	"if ( image_get_rgb_scan_line_with_error ( image2 , buf2 [ 0 ] , 2 , y , & rcode ) )"		10505024	0					
ANR	10506222	Condition	"image_get_rgb_scan_line_with_error ( image2 , buf2 [ 0 ] , 2 , y , & rcode )"	812:16:22507:22571	10505024	0	True				
ANR	10506223	CallExpression	"image_get_rgb_scan_line_with_error ( image2 , buf2 [ 0 ] , 2 , y , & rcode )"		10505024	0					
ANR	10506224	Callee	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10506225	Identifier	image_get_rgb_scan_line_with_error		10505024	0					
ANR	10506226	ArgumentList	image2		10505024	1					
ANR	10506227	Argument	image2		10505024	0					
ANR	10506228	Identifier	image2		10505024	0					
ANR	10506229	Argument	buf2 [ 0 ]		10505024	1					
ANR	10506230	ArrayIndexing	buf2 [ 0 ]		10505024	0					
ANR	10506231	Identifier	buf2		10505024	0					
ANR	10506232	PrimaryExpression	0		10505024	1					
ANR	10506233	Argument	2		10505024	2					
ANR	10506234	PrimaryExpression	2		10505024	0					
ANR	10506235	Argument	y		10505024	3					
ANR	10506236	Identifier	y		10505024	0					
ANR	10506237	Argument	& rcode		10505024	4					
ANR	10506238	UnaryOperationExpression	& rcode		10505024	0					
ANR	10506239	UnaryOperator	&		10505024	0					
ANR	10506240	Identifier	rcode		10505024	1					
ANR	10506241	GotoStatement	goto ex ;	813:16:22590:22597	10505024	1	True				
ANR	10506242	Identifier	ex		10505024	0					
ANR	10506243	Label	ex :	816:0:22611:22613	10505024	23	True				
ANR	10506244	Identifier	ex		10505024	0					
ANR	10506245	ExpressionStatement	"free_window ( buf1 , window_size )"	817:2:22617:22648	10505024	24	True				
ANR	10506246	CallExpression	"free_window ( buf1 , window_size )"		10505024	0					
ANR	10506247	Callee	free_window		10505024	0					
ANR	10506248	Identifier	free_window		10505024	0					
ANR	10506249	ArgumentList	buf1		10505024	1					
ANR	10506250	Argument	buf1		10505024	0					
ANR	10506251	Identifier	buf1		10505024	0					
ANR	10506252	Argument	window_size		10505024	1					
ANR	10506253	Identifier	window_size		10505024	0					
ANR	10506254	ExpressionStatement	"free_window ( buf2 , window_size )"	818:2:22652:22683	10505024	25	True				
ANR	10506255	CallExpression	"free_window ( buf2 , window_size )"		10505024	0					
ANR	10506256	Callee	free_window		10505024	0					
ANR	10506257	Identifier	free_window		10505024	0					
ANR	10506258	ArgumentList	buf2		10505024	1					
ANR	10506259	Argument	buf2		10505024	0					
ANR	10506260	Identifier	buf2		10505024	0					
ANR	10506261	Argument	window_size		10505024	1					
ANR	10506262	Identifier	window_size		10505024	0					
ANR	10506263	IfStatement	if ( out_buf )		10505024	26					
ANR	10506264	Condition	out_buf	819:6:22691:22697	10505024	0	True				
ANR	10506265	Identifier	out_buf		10505024	0					
ANR	10506266	ExpressionStatement	free ( out_buf )	820:4:22704:22717	10505024	1	True				
ANR	10506267	CallExpression	free ( out_buf )		10505024	0					
ANR	10506268	Callee	free		10505024	0					
ANR	10506269	Identifier	free		10505024	0					
ANR	10506270	ArgumentList	out_buf		10505024	1					
ANR	10506271	Argument	out_buf		10505024	0					
ANR	10506272	Identifier	out_buf		10505024	0					
ANR	10506273	ReturnStatement	return rcode ;	821:2:22721:22733	10505024	27	True				
ANR	10506274	Identifier	rcode		10505024	0					
ANR	10506275	ReturnType	static int		10505024	1					
ANR	10506276	Identifier	fuzzy_diff_images		10505024	2					
ANR	10506277	ParameterList	"Image * image1 , Image * image2 , const FuzzyParams * fparams , FuzzyReport * freport , ImagePnm * image_out"		10505024	3					
ANR	10506278	Parameter	Image * image1	659:19:16161:16173	10505024	0	True				
ANR	10506279	ParameterType	Image *		10505024	0					
ANR	10506280	Identifier	image1		10505024	1					
ANR	10506281	Parameter	Image * image2	659:34:16176:16188	10505024	1	True				
ANR	10506282	ParameterType	Image *		10505024	0					
ANR	10506283	Identifier	image2		10505024	1					
ANR	10506284	Parameter	const FuzzyParams * fparams	659:49:16191:16216	10505024	2	True				
ANR	10506285	ParameterType	const FuzzyParams *		10505024	0					
ANR	10506286	Identifier	fparams		10505024	1					
ANR	10506287	Parameter	FuzzyReport * freport	660:19:16238:16257	10505024	3	True				
ANR	10506288	ParameterType	FuzzyReport *		10505024	0					
ANR	10506289	Identifier	freport		10505024	1					
ANR	10506290	Parameter	ImagePnm * image_out	660:41:16260:16278	10505024	4	True				
ANR	10506291	ParameterType	ImagePnm *		10505024	0					
ANR	10506292	Identifier	image_out		10505024	1					
ANR	10506293	CFGEntryNode	ENTRY		10505024		True				
ANR	10506294	CFGExitNode	EXIT		10505024		True				
ANR	10506295	Symbol	* x		10505024						
ANR	10506296	Symbol	* y		10505024						
ANR	10506297	Symbol	out_buf		10505024						
ANR	10506298	Symbol	fparams		10505024						
ANR	10506299	Symbol	max_height		10505024						
ANR	10506300	Symbol	image_get_rgb_scan_line_with_error		10505024						
ANR	10506301	Symbol	freport -> max_color_error		10505024						
ANR	10506302	Symbol	image1 -> height		10505024						
ANR	10506303	Symbol	freport -> n_diff		10505024						
ANR	10506304	Symbol	memcmp		10505024						
ANR	10506305	Symbol	* image_out		10505024						
ANR	10506306	Symbol	sqrt		10505024						
ANR	10506307	Symbol	image_out -> super . seek		10505024						
ANR	10506308	Symbol	fparams -> tolerance		10505024						
ANR	10506309	Symbol	mc		10505024						
ANR	10506310	Symbol	image_out -> super . write		10505024						
ANR	10506311	Symbol	out_buffer_size		10505024						
ANR	10506312	Symbol	half_win		10505024						
ANR	10506313	Symbol	freport		10505024						
ANR	10506314	Symbol	row_bytes		10505024						
ANR	10506315	Symbol	tolerance		10505024						
ANR	10506316	Symbol	freport -> n_outof_tolerance		10505024						
ANR	10506317	Symbol	height		10505024						
ANR	10506318	Symbol	row1		10505024						
ANR	10506319	Symbol	check_window		10505024						
ANR	10506320	Symbol	NULL		10505024						
ANR	10506321	Symbol	fparams -> report_coordinates		10505024						
ANR	10506322	Symbol	* diff		10505024						
ANR	10506323	Symbol	rcode		10505024						
ANR	10506324	Symbol	diff		10505024						
ANR	10506325	Symbol	row2		10505024						
ANR	10506326	Symbol	* fparams		10505024						
ANR	10506327	Symbol	buf1		10505024						
ANR	10506328	Symbol	buf2		10505024						
ANR	10506329	Symbol	MIN		10505024						
ANR	10506330	Symbol	fparams -> window_size		10505024						
ANR	10506331	Symbol	color_diff		10505024						
ANR	10506332	Symbol	x0		10505024						
ANR	10506333	Symbol	alloc_window		10505024						
ANR	10506334	Symbol	image2 -> width		10505024						
ANR	10506335	Symbol	* freport		10505024						
ANR	10506336	Symbol	MAX		10505024						
ANR	10506337	Symbol	image_out		10505024						
ANR	10506338	Symbol	* buf1		10505024						
ANR	10506339	Symbol	* buf2		10505024						
ANR	10506340	Symbol	freport -> avg_color_error		10505024						
ANR	10506341	Symbol	image2 -> height		10505024						
ANR	10506342	Symbol	window_size		10505024						
ANR	10506343	Symbol	freport -> n_outof_window		10505024						
ANR	10506344	Symbol	image1 -> width		10505024						
ANR	10506345	Symbol	y0		10505024						
ANR	10506346	Symbol	& rcode		10505024						
ANR	10506347	Symbol	* rowmid1		10505024						
ANR	10506348	Symbol	* rowmid2		10505024						
ANR	10506349	Symbol	* half_win		10505024						
ANR	10506350	Symbol	malloc		10505024						
ANR	10506351	Symbol	mmax		10505024						
ANR	10506352	Symbol	* out_buf		10505024						
ANR	10506353	Symbol	image1		10505024						
ANR	10506354	Symbol	image2		10505024						
ANR	10506355	Symbol	rowmid1		10505024						
ANR	10506356	Symbol	abs		10505024						
ANR	10506357	Symbol	rowmid2		10505024						
ANR	10506358	Symbol	image_out -> super		10505024						
ANR	10506359	Symbol	width		10505024						
ANR	10506360	Symbol	x		10505024						
ANR	10506361	Symbol	y		10505024						
ANR	10506362	Symbol	& image_out -> super		10505024						
ANR	10506363	Symbol	* image2		10505024						
ANR	10506364	Symbol	* image1		10505024						
ANR	10506365	Function	get_arg	824:0:22738:22968							
ANR	10506366	FunctionDef	"get_arg (int argc , char * * argv , int * pi , const char * arg)"		10506365	0					
ANR	10506367	CompoundStatement		826:0:22816:22968	10506365	0					
ANR	10506368	IfStatement	if ( arg [ 0 ] != 0 )		10506365	0					
ANR	10506369	Condition	arg [ 0 ] != 0	827:6:22824:22834	10506365	0	True				
ANR	10506370	EqualityExpression	arg [ 0 ] != 0		10506365	0		!=			
ANR	10506371	ArrayIndexing	arg [ 0 ]		10506365	0					
ANR	10506372	Identifier	arg		10506365	0					
ANR	10506373	PrimaryExpression	0		10506365	1					
ANR	10506374	PrimaryExpression	0		10506365	1					
ANR	10506375	ReturnStatement	return arg ;	828:4:22841:22851	10506365	1	True				
ANR	10506376	Identifier	arg		10506365	0					
ANR	10506377	ElseStatement	else		10506365	0					
ANR	10506378	CompoundStatement		5:4:47:47	10506365	0					
ANR	10506379	ExpressionStatement	( * pi ) ++	831:6:22872:22879	10506365	0	True				
ANR	10506380	PostIncDecOperationExpression	( * pi ) ++		10506365	0					
ANR	10506381	UnaryOperationExpression	* pi		10506365	0					
ANR	10506382	UnaryOperator	*		10506365	0					
ANR	10506383	Identifier	pi		10506365	1					
ANR	10506384	IncDec	++		10506365	1					
ANR	10506385	IfStatement	if ( * pi == argc )		10506365	1					
ANR	10506386	Condition	* pi == argc	832:10:22891:22901	10506365	0	True				
ANR	10506387	EqualityExpression	* pi == argc		10506365	0		==			
ANR	10506388	UnaryOperationExpression	* pi		10506365	0					
ANR	10506389	UnaryOperator	*		10506365	0					
ANR	10506390	Identifier	pi		10506365	1					
ANR	10506391	Identifier	argc		10506365	1					
ANR	10506392	ReturnStatement	return NULL ;	833:8:22912:22923	10506365	1	True				
ANR	10506393	Identifier	NULL		10506365	0					
ANR	10506394	ElseStatement	else		10506365	0					
ANR	10506395	ReturnStatement	return argv [ * pi ] ;	835:8:22944:22960	10506365	0	True				
ANR	10506396	ArrayIndexing	argv [ * pi ]		10506365	0					
ANR	10506397	Identifier	argv		10506365	0					
ANR	10506398	UnaryOperationExpression	* pi		10506365	1					
ANR	10506399	UnaryOperator	*		10506365	0					
ANR	10506400	Identifier	pi		10506365	1					
ANR	10506401	ReturnType	static const char *		10506365	1					
ANR	10506402	Identifier	get_arg		10506365	2					
ANR	10506403	ParameterList	"int argc , char * * argv , int * pi , const char * arg"		10506365	3					
ANR	10506404	Parameter	int argc	825:9:22767:22774	10506365	0	True				
ANR	10506405	ParameterType	int		10506365	0					
ANR	10506406	Identifier	argc		10506365	1					
ANR	10506407	Parameter	char * * argv	825:19:22777:22787	10506365	1	True				
ANR	10506408	ParameterType	char * *		10506365	0					
ANR	10506409	Identifier	argv		10506365	1					
ANR	10506410	Parameter	int * pi	825:32:22790:22796	10506365	2	True				
ANR	10506411	ParameterType	int *		10506365	0					
ANR	10506412	Identifier	pi		10506365	1					
ANR	10506413	Parameter	const char * arg	825:41:22799:22813	10506365	3	True				
ANR	10506414	ParameterType	const char *		10506365	0					
ANR	10506415	Identifier	arg		10506365	1					
ANR	10506416	CFGEntryNode	ENTRY		10506365		True				
ANR	10506417	CFGExitNode	EXIT		10506365		True				
ANR	10506418	Symbol	argc		10506365						
ANR	10506419	Symbol	NULL		10506365						
ANR	10506420	Symbol	arg		10506365						
ANR	10506421	Symbol	* * pi		10506365						
ANR	10506422	Symbol	pi		10506365						
ANR	10506423	Symbol	* argv		10506365						
ANR	10506424	Symbol	* pi		10506365						
ANR	10506425	Symbol	argv		10506365						
ANR	10506426	Symbol	* arg		10506365						
ANR	10506427	Function	usage	839:0:22971:23102							
ANR	10506428	FunctionDef	usage ()		10506427	0					
ANR	10506429	CompoundStatement		841:0:22988:23102	10506427	0					
ANR	10506430	ExpressionStatement	"printf ( ""Usage: fuzzy [-w window_size] [-t tolerance] [-c] a.ppm b.ppm [diff.ppm | diff.bmp]\\n"" )"	842:2:22992:23088	10506427	0	True				
ANR	10506431	CallExpression	"printf ( ""Usage: fuzzy [-w window_size] [-t tolerance] [-c] a.ppm b.ppm [diff.ppm | diff.bmp]\\n"" )"		10506427	0					
ANR	10506432	Callee	printf		10506427	0					
ANR	10506433	Identifier	printf		10506427	0					
ANR	10506434	ArgumentList	"""Usage: fuzzy [-w window_size] [-t tolerance] [-c] a.ppm b.ppm [diff.ppm | diff.bmp]\\n"""		10506427	1					
ANR	10506435	Argument	"""Usage: fuzzy [-w window_size] [-t tolerance] [-c] a.ppm b.ppm [diff.ppm | diff.bmp]\\n"""		10506427	0					
ANR	10506436	PrimaryExpression	"""Usage: fuzzy [-w window_size] [-t tolerance] [-c] a.ppm b.ppm [diff.ppm | diff.bmp]\\n"""		10506427	0					
ANR	10506437	ReturnStatement	return 1 ;	843:2:23092:23100	10506427	1	True				
ANR	10506438	PrimaryExpression	1		10506427	0					
ANR	10506439	ReturnType	int		10506427	1					
ANR	10506440	Identifier	usage		10506427	2					
ANR	10506441	ParameterList			10506427	3					
ANR	10506442	CFGEntryNode	ENTRY		10506427		True				
ANR	10506443	CFGExitNode	EXIT		10506427		True				
ANR	10506444	Function	main	846:0:23105:27342							
ANR	10506445	FunctionDef	"main (int argc , char * * argv)"		10506444	0					
ANR	10506446	CompoundStatement		848:0:23138:27342	10506444	0					
ANR	10506447	IdentifierDeclStatement	"Image * image1 , * image2 ;"	849:2:23142:23165	10506444	0	True				
ANR	10506448	IdentifierDecl	* image1		10506444	0					
ANR	10506449	IdentifierDeclType	Image *		10506444	0					
ANR	10506450	Identifier	image1		10506444	1					
ANR	10506451	IdentifierDecl	* image2		10506444	1					
ANR	10506452	IdentifierDeclType	Image *		10506444	0					
ANR	10506453	Identifier	image2		10506444	1					
ANR	10506454	IdentifierDeclStatement	ImagePnm * image_out = NULL ;	850:2:23169:23195	10506444	1	True				
ANR	10506455	IdentifierDecl	* image_out = NULL		10506444	0					
ANR	10506456	IdentifierDeclType	ImagePnm *		10506444	0					
ANR	10506457	Identifier	image_out		10506444	1					
ANR	10506458	AssignmentExpression	* image_out = NULL		10506444	2		=			
ANR	10506459	Identifier	NULL		10506444	0					
ANR	10506460	Identifier	NULL		10506444	1					
ANR	10506461	IdentifierDeclStatement	FuzzyParams fparams ;	851:2:23199:23218	10506444	2	True				
ANR	10506462	IdentifierDecl	fparams		10506444	0					
ANR	10506463	IdentifierDeclType	FuzzyParams		10506444	0					
ANR	10506464	Identifier	fparams		10506444	1					
ANR	10506465	IdentifierDeclStatement	FuzzyReport freport ;	852:2:23222:23241	10506444	3	True				
ANR	10506466	IdentifierDecl	freport		10506444	0					
ANR	10506467	IdentifierDeclType	FuzzyReport		10506444	0					
ANR	10506468	Identifier	freport		10506444	1					
ANR	10506469	IdentifierDeclStatement	"const char * fn [ 3 ] = { 0 , 0 , 0 } ;"	853:2:23245:23274	10506444	4	True				
ANR	10506470	IdentifierDecl	"* fn [ 3 ] = { 0 , 0 , 0 }"		10506444	0					
ANR	10506471	IdentifierDeclType	const char * [ 3 ]		10506444	0					
ANR	10506472	Identifier	fn		10506444	1					
ANR	10506473	PrimaryExpression	3		10506444	2					
ANR	10506474	AssignmentExpression	"* fn [ 3 ] = { 0 , 0 , 0 }"		10506444	3		=			
ANR	10506475	Identifier	fn		10506444	0					
ANR	10506476	InitializerList	0		10506444	1					
ANR	10506477	PrimaryExpression	0		10506444	0					
ANR	10506478	PrimaryExpression	0		10506444	1					
ANR	10506479	PrimaryExpression	0		10506444	2					
ANR	10506480	IdentifierDeclStatement	int fn_idx = 0 ;	854:2:23278:23292	10506444	5	True				
ANR	10506481	IdentifierDecl	fn_idx = 0		10506444	0					
ANR	10506482	IdentifierDeclType	int		10506444	0					
ANR	10506483	Identifier	fn_idx		10506444	1					
ANR	10506484	AssignmentExpression	fn_idx = 0		10506444	2		=			
ANR	10506485	Identifier	fn_idx		10506444	0					
ANR	10506486	PrimaryExpression	0		10506444	1					
ANR	10506487	IdentifierDeclStatement	"int i , page = 1 , rcode = 0 ;"	855:2:23296:23322	10506444	6	True				
ANR	10506488	IdentifierDecl	i		10506444	0					
ANR	10506489	IdentifierDeclType	int		10506444	0					
ANR	10506490	Identifier	i		10506444	1					
ANR	10506491	IdentifierDecl	page = 1		10506444	1					
ANR	10506492	IdentifierDeclType	int		10506444	0					
ANR	10506493	Identifier	page		10506444	1					
ANR	10506494	AssignmentExpression	page = 1		10506444	2		=			
ANR	10506495	Identifier	page		10506444	0					
ANR	10506496	PrimaryExpression	1		10506444	1					
ANR	10506497	IdentifierDecl	rcode = 0		10506444	2					
ANR	10506498	IdentifierDeclType	int		10506444	0					
ANR	10506499	Identifier	rcode		10506444	1					
ANR	10506500	AssignmentExpression	rcode = 0		10506444	2		=			
ANR	10506501	Identifier	rcode		10506444	0					
ANR	10506502	PrimaryExpression	0		10506444	1					
ANR	10506503	IdentifierDeclStatement	char * out_fn = NULL ;	856:2:23326:23345	10506444	7	True				
ANR	10506504	IdentifierDecl	* out_fn = NULL		10506444	0					
ANR	10506505	IdentifierDeclType	char *		10506444	0					
ANR	10506506	Identifier	out_fn		10506444	1					
ANR	10506507	AssignmentExpression	* out_fn = NULL		10506444	2		=			
ANR	10506508	Identifier	NULL		10506444	0					
ANR	10506509	Identifier	NULL		10506444	1					
ANR	10506510	ExpressionStatement	fparams . tolerance = 2	858:2:23350:23371	10506444	8	True				
ANR	10506511	AssignmentExpression	fparams . tolerance = 2		10506444	0		=			
ANR	10506512	MemberAccess	fparams . tolerance		10506444	0					
ANR	10506513	Identifier	fparams		10506444	0					
ANR	10506514	Identifier	tolerance		10506444	1					
ANR	10506515	PrimaryExpression	2		10506444	1					
ANR	10506516	ExpressionStatement	fparams . window_size = 3	859:2:23375:23398	10506444	9	True				
ANR	10506517	AssignmentExpression	fparams . window_size = 3		10506444	0		=			
ANR	10506518	MemberAccess	fparams . window_size		10506444	0					
ANR	10506519	Identifier	fparams		10506444	0					
ANR	10506520	Identifier	window_size		10506444	1					
ANR	10506521	PrimaryExpression	3		10506444	1					
ANR	10506522	ExpressionStatement	fparams . report_coordinates = FALSE	860:2:23402:23436	10506444	10	True				
ANR	10506523	AssignmentExpression	fparams . report_coordinates = FALSE		10506444	0		=			
ANR	10506524	MemberAccess	fparams . report_coordinates		10506444	0					
ANR	10506525	Identifier	fparams		10506444	0					
ANR	10506526	Identifier	report_coordinates		10506444	1					
ANR	10506527	Identifier	FALSE		10506444	1					
ANR	10506528	ForStatement	for ( i = 1 ; i < argc ; i ++ )		10506444	11					
ANR	10506529	ForInit	i = 1 ;	862:7:23446:23451	10506444	0	True				
ANR	10506530	AssignmentExpression	i = 1		10506444	0		=			
ANR	10506531	Identifier	i		10506444	0					
ANR	10506532	PrimaryExpression	1		10506444	1					
ANR	10506533	Condition	i < argc	862:14:23453:23460	10506444	1	True				
ANR	10506534	RelationalExpression	i < argc		10506444	0		<			
ANR	10506535	Identifier	i		10506444	0					
ANR	10506536	Identifier	argc		10506444	1					
ANR	10506537	PostIncDecOperationExpression	i ++	862:24:23463:23465	10506444	2	True				
ANR	10506538	Identifier	i		10506444	0					
ANR	10506539	IncDec	++		10506444	1					
ANR	10506540	CompoundStatement		17:6:341:366	10506444	3					
ANR	10506541	IdentifierDeclStatement	const char * arg = argv [ i ] ;	864:6:23480:23505	10506444	0	True				
ANR	10506542	IdentifierDecl	* arg = argv [ i ]		10506444	0					
ANR	10506543	IdentifierDeclType	const char *		10506444	0					
ANR	10506544	Identifier	arg		10506444	1					
ANR	10506545	AssignmentExpression	* arg = argv [ i ]		10506444	2		=			
ANR	10506546	Identifier	arg		10506444	0					
ANR	10506547	ArrayIndexing	argv [ i ]		10506444	1					
ANR	10506548	Identifier	argv		10506444	0					
ANR	10506549	Identifier	i		10506444	1					
ANR	10506550	IfStatement	if ( arg [ 0 ] == '-' )		10506444	1					
ANR	10506551	Condition	arg [ 0 ] == '-'	866:10:23518:23530	10506444	0	True				
ANR	10506552	EqualityExpression	arg [ 0 ] == '-'		10506444	0		==			
ANR	10506553	ArrayIndexing	arg [ 0 ]		10506444	0					
ANR	10506554	Identifier	arg		10506444	0					
ANR	10506555	PrimaryExpression	0		10506444	1					
ANR	10506556	PrimaryExpression	'-'		10506444	1					
ANR	10506557	CompoundStatement		20:8:402:402	10506444	1					
ANR	10506558	SwitchStatement	switch ( arg [ 1 ] )		10506444	0					
ANR	10506559	Condition	arg [ 1 ]	868:18:23561:23566	10506444	0	True				
ANR	10506560	ArrayIndexing	arg [ 1 ]		10506444	0					
ANR	10506561	Identifier	arg		10506444	0					
ANR	10506562	PrimaryExpression	1		10506444	1					
ANR	10506563	CompoundStatement		22:12:442:442	10506444	1					
ANR	10506564	Label	case 'w' :	870:12:23595:23603	10506444	0	True				
ANR	10506565	ExpressionStatement	"fparams . window_size = atoi ( get_arg ( argc , argv , & i , arg + 2 ) )"	871:14:23619:23681	10506444	1	True				
ANR	10506566	AssignmentExpression	"fparams . window_size = atoi ( get_arg ( argc , argv , & i , arg + 2 ) )"		10506444	0		=			
ANR	10506567	MemberAccess	fparams . window_size		10506444	0					
ANR	10506568	Identifier	fparams		10506444	0					
ANR	10506569	Identifier	window_size		10506444	1					
ANR	10506570	CallExpression	"atoi ( get_arg ( argc , argv , & i , arg + 2 ) )"		10506444	1					
ANR	10506571	Callee	atoi		10506444	0					
ANR	10506572	Identifier	atoi		10506444	0					
ANR	10506573	ArgumentList	"get_arg ( argc , argv , & i , arg + 2 )"		10506444	1					
ANR	10506574	Argument	"get_arg ( argc , argv , & i , arg + 2 )"		10506444	0					
ANR	10506575	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		10506444	0					
ANR	10506576	Callee	get_arg		10506444	0					
ANR	10506577	Identifier	get_arg		10506444	0					
ANR	10506578	ArgumentList	argc		10506444	1					
ANR	10506579	Argument	argc		10506444	0					
ANR	10506580	Identifier	argc		10506444	0					
ANR	10506581	Argument	argv		10506444	1					
ANR	10506582	Identifier	argv		10506444	0					
ANR	10506583	Argument	& i		10506444	2					
ANR	10506584	UnaryOperationExpression	& i		10506444	0					
ANR	10506585	UnaryOperator	&		10506444	0					
ANR	10506586	Identifier	i		10506444	1					
ANR	10506587	Argument	arg + 2		10506444	3					
ANR	10506588	AdditiveExpression	arg + 2		10506444	0		+			
ANR	10506589	Identifier	arg		10506444	0					
ANR	10506590	PrimaryExpression	2		10506444	1					
ANR	10506591	IfStatement	if ( ( fparams . window_size & 1 ) == 0 )		10506444	2					
ANR	10506592	Condition	( fparams . window_size & 1 ) == 0	872:18:23701:23730	10506444	0	True				
ANR	10506593	EqualityExpression	( fparams . window_size & 1 ) == 0		10506444	0		==			
ANR	10506594	BitAndExpression	fparams . window_size & 1		10506444	0		&			
ANR	10506595	MemberAccess	fparams . window_size		10506444	0					
ANR	10506596	Identifier	fparams		10506444	0					
ANR	10506597	Identifier	window_size		10506444	1					
ANR	10506598	PrimaryExpression	1		10506444	1					
ANR	10506599	PrimaryExpression	0		10506444	1					
ANR	10506600	CompoundStatement		26:16:610:610	10506444	1					
ANR	10506601	ExpressionStatement	"printf ( ""window size must be odd\\n"" )"	874:18:23769:23805	10506444	0	True				
ANR	10506602	CallExpression	"printf ( ""window size must be odd\\n"" )"		10506444	0					
ANR	10506603	Callee	printf		10506444	0					
ANR	10506604	Identifier	printf		10506444	0					
ANR	10506605	ArgumentList	"""window size must be odd\\n"""		10506444	1					
ANR	10506606	Argument	"""window size must be odd\\n"""		10506444	0					
ANR	10506607	PrimaryExpression	"""window size must be odd\\n"""		10506444	0					
ANR	10506608	ReturnStatement	return 1 ;	875:18:23825:23833	10506444	1	True				
ANR	10506609	PrimaryExpression	1		10506444	0					
ANR	10506610	BreakStatement	break ;	877:14:23867:23872	10506444	3	True				
ANR	10506611	Label	case 't' :	878:12:23886:23894	10506444	4	True				
ANR	10506612	ExpressionStatement	"fparams . tolerance = atoi ( get_arg ( argc , argv , & i , arg + 2 ) )"	879:14:23910:23970	10506444	5	True				
ANR	10506613	AssignmentExpression	"fparams . tolerance = atoi ( get_arg ( argc , argv , & i , arg + 2 ) )"		10506444	0		=			
ANR	10506614	MemberAccess	fparams . tolerance		10506444	0					
ANR	10506615	Identifier	fparams		10506444	0					
ANR	10506616	Identifier	tolerance		10506444	1					
ANR	10506617	CallExpression	"atoi ( get_arg ( argc , argv , & i , arg + 2 ) )"		10506444	1					
ANR	10506618	Callee	atoi		10506444	0					
ANR	10506619	Identifier	atoi		10506444	0					
ANR	10506620	ArgumentList	"get_arg ( argc , argv , & i , arg + 2 )"		10506444	1					
ANR	10506621	Argument	"get_arg ( argc , argv , & i , arg + 2 )"		10506444	0					
ANR	10506622	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		10506444	0					
ANR	10506623	Callee	get_arg		10506444	0					
ANR	10506624	Identifier	get_arg		10506444	0					
ANR	10506625	ArgumentList	argc		10506444	1					
ANR	10506626	Argument	argc		10506444	0					
ANR	10506627	Identifier	argc		10506444	0					
ANR	10506628	Argument	argv		10506444	1					
ANR	10506629	Identifier	argv		10506444	0					
ANR	10506630	Argument	& i		10506444	2					
ANR	10506631	UnaryOperationExpression	& i		10506444	0					
ANR	10506632	UnaryOperator	&		10506444	0					
ANR	10506633	Identifier	i		10506444	1					
ANR	10506634	Argument	arg + 2		10506444	3					
ANR	10506635	AdditiveExpression	arg + 2		10506444	0		+			
ANR	10506636	Identifier	arg		10506444	0					
ANR	10506637	PrimaryExpression	2		10506444	1					
ANR	10506638	BreakStatement	break ;	880:14:23986:23991	10506444	6	True				
ANR	10506639	Label	case 'c' :	881:12:24005:24013	10506444	7	True				
ANR	10506640	ExpressionStatement	fparams . report_coordinates = TRUE	882:14:24029:24062	10506444	8	True				
ANR	10506641	AssignmentExpression	fparams . report_coordinates = TRUE		10506444	0		=			
ANR	10506642	MemberAccess	fparams . report_coordinates		10506444	0					
ANR	10506643	Identifier	fparams		10506444	0					
ANR	10506644	Identifier	report_coordinates		10506444	1					
ANR	10506645	Identifier	TRUE		10506444	1					
ANR	10506646	BreakStatement	break ;	883:14:24078:24083	10506444	9	True				
ANR	10506647	Label	default :	884:12:24097:24104	10506444	10	True				
ANR	10506648	Identifier	default		10506444	0					
ANR	10506649	ReturnStatement	return usage ( ) ;	885:14:24120:24135	10506444	11	True				
ANR	10506650	CallExpression	usage ( )		10506444	0					
ANR	10506651	Callee	usage		10506444	0					
ANR	10506652	Identifier	usage		10506444	0					
ANR	10506653	ArgumentList			10506444	1					
ANR	10506654	ElseStatement	else		10506444	0					
ANR	10506655	IfStatement	if ( fn_idx < sizeof ( fn ) / sizeof ( fn [ 0 ] ) )		10506444	0					
ANR	10506656	Condition	fn_idx < sizeof ( fn ) / sizeof ( fn [ 0 ] )	888:15:24176:24208	10506444	0	True				
ANR	10506657	RelationalExpression	fn_idx < sizeof ( fn ) / sizeof ( fn [ 0 ] )		10506444	0		<			
ANR	10506658	Identifier	fn_idx		10506444	0					
ANR	10506659	MultiplicativeExpression	sizeof ( fn ) / sizeof ( fn [ 0 ] )		10506444	1		/			
ANR	10506660	SizeofExpression	sizeof ( fn )		10506444	0					
ANR	10506661	Sizeof	sizeof		10506444	0					
ANR	10506662	SizeofOperand	fn		10506444	1					
ANR	10506663	SizeofExpression	sizeof ( fn [ 0 ] )		10506444	1					
ANR	10506664	Sizeof	sizeof		10506444	0					
ANR	10506665	ArrayIndexing	fn [ 0 ]		10506444	1					
ANR	10506666	Identifier	fn		10506444	0					
ANR	10506667	PrimaryExpression	0		10506444	1					
ANR	10506668	ExpressionStatement	fn [ fn_idx ++ ] = argv [ i ]	889:8:24219:24241	10506444	1	True				
ANR	10506669	AssignmentExpression	fn [ fn_idx ++ ] = argv [ i ]		10506444	0		=			
ANR	10506670	ArrayIndexing	fn [ fn_idx ++ ]		10506444	0					
ANR	10506671	Identifier	fn		10506444	0					
ANR	10506672	PostIncDecOperationExpression	fn_idx ++		10506444	1					
ANR	10506673	Identifier	fn_idx		10506444	0					
ANR	10506674	IncDec	++		10506444	1					
ANR	10506675	ArrayIndexing	argv [ i ]		10506444	1					
ANR	10506676	Identifier	argv		10506444	0					
ANR	10506677	Identifier	i		10506444	1					
ANR	10506678	ElseStatement	else		10506444	0					
ANR	10506679	ReturnStatement	return usage ( ) ;	891:8:24262:24277	10506444	0	True				
ANR	10506680	CallExpression	usage ( )		10506444	0					
ANR	10506681	Callee	usage		10506444	0					
ANR	10506682	Identifier	usage		10506444	0					
ANR	10506683	ArgumentList			10506444	1					
ANR	10506684	IfStatement	if ( fn_idx < 2 )		10506444	12					
ANR	10506685	Condition	fn_idx < 2	894:6:24292:24301	10506444	0	True				
ANR	10506686	RelationalExpression	fn_idx < 2		10506444	0		<			
ANR	10506687	Identifier	fn_idx		10506444	0					
ANR	10506688	PrimaryExpression	2		10506444	1					
ANR	10506689	ReturnStatement	return usage ( ) ;	895:4:24308:24323	10506444	1	True				
ANR	10506690	CallExpression	usage ( )		10506444	0					
ANR	10506691	Callee	usage		10506444	0					
ANR	10506692	Identifier	usage		10506444	0					
ANR	10506693	ArgumentList			10506444	1					
ANR	10506694	ExpressionStatement	image1 = alloc_image_file ( fn [ 0 ] )	897:2:24328:24361	10506444	13	True				
ANR	10506695	AssignmentExpression	image1 = alloc_image_file ( fn [ 0 ] )		10506444	0		=			
ANR	10506696	Identifier	image1		10506444	0					
ANR	10506697	CallExpression	alloc_image_file ( fn [ 0 ] )		10506444	1					
ANR	10506698	Callee	alloc_image_file		10506444	0					
ANR	10506699	Identifier	alloc_image_file		10506444	0					
ANR	10506700	ArgumentList	fn [ 0 ]		10506444	1					
ANR	10506701	Argument	fn [ 0 ]		10506444	0					
ANR	10506702	ArrayIndexing	fn [ 0 ]		10506444	0					
ANR	10506703	Identifier	fn		10506444	0					
ANR	10506704	PrimaryExpression	0		10506444	1					
ANR	10506705	IfStatement	if ( image1 == NULL )		10506444	14					
ANR	10506706	Condition	image1 == NULL	898:6:24369:24382	10506444	0	True				
ANR	10506707	EqualityExpression	image1 == NULL		10506444	0		==			
ANR	10506708	Identifier	image1		10506444	0					
ANR	10506709	Identifier	NULL		10506444	1					
ANR	10506710	ReturnStatement	return 1 ;	899:6:24391:24399	10506444	1	True				
ANR	10506711	PrimaryExpression	1		10506444	0					
ANR	10506712	ExpressionStatement	image2 = alloc_image_file ( fn [ 1 ] )	901:2:24404:24437	10506444	15	True				
ANR	10506713	AssignmentExpression	image2 = alloc_image_file ( fn [ 1 ] )		10506444	0		=			
ANR	10506714	Identifier	image2		10506444	0					
ANR	10506715	CallExpression	alloc_image_file ( fn [ 1 ] )		10506444	1					
ANR	10506716	Callee	alloc_image_file		10506444	0					
ANR	10506717	Identifier	alloc_image_file		10506444	0					
ANR	10506718	ArgumentList	fn [ 1 ]		10506444	1					
ANR	10506719	Argument	fn [ 1 ]		10506444	0					
ANR	10506720	ArrayIndexing	fn [ 1 ]		10506444	0					
ANR	10506721	Identifier	fn		10506444	0					
ANR	10506722	PrimaryExpression	1		10506444	1					
ANR	10506723	IfStatement	if ( image2 == NULL )		10506444	16					
ANR	10506724	Condition	image2 == NULL	902:6:24445:24458	10506444	0	True				
ANR	10506725	EqualityExpression	image2 == NULL		10506444	0		==			
ANR	10506726	Identifier	image2		10506444	0					
ANR	10506727	Identifier	NULL		10506444	1					
ANR	10506728	CompoundStatement		56:4:1326:1326	10506444	1					
ANR	10506729	ExpressionStatement	image_close ( image1 )	904:6:24473:24493	10506444	0	True				
ANR	10506730	CallExpression	image_close ( image1 )		10506444	0					
ANR	10506731	Callee	image_close		10506444	0					
ANR	10506732	Identifier	image_close		10506444	0					
ANR	10506733	ArgumentList	image1		10506444	1					
ANR	10506734	Argument	image1		10506444	0					
ANR	10506735	Identifier	image1		10506444	0					
ANR	10506736	ReturnStatement	return 1 ;	905:6:24501:24509	10506444	1	True				
ANR	10506737	PrimaryExpression	1		10506444	0					
ANR	10506738	IfStatement	if ( fn [ 2 ] )		10506444	17					
ANR	10506739	Condition	fn [ 2 ]	908:6:24524:24528	10506444	0	True				
ANR	10506740	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10506741	Identifier	fn		10506444	0					
ANR	10506742	PrimaryExpression	2		10506444	1					
ANR	10506743	CompoundStatement		61:13:1392:1392	10506444	1					
ANR	10506744	ExpressionStatement	out_fn = malloc ( strlen ( fn [ 2 ] ) + 5 )	909:6:24539:24573	10506444	0	True				
ANR	10506745	AssignmentExpression	out_fn = malloc ( strlen ( fn [ 2 ] ) + 5 )		10506444	0		=			
ANR	10506746	Identifier	out_fn		10506444	0					
ANR	10506747	CallExpression	malloc ( strlen ( fn [ 2 ] ) + 5 )		10506444	1					
ANR	10506748	Callee	malloc		10506444	0					
ANR	10506749	Identifier	malloc		10506444	0					
ANR	10506750	ArgumentList	strlen ( fn [ 2 ] ) + 5		10506444	1					
ANR	10506751	Argument	strlen ( fn [ 2 ] ) + 5		10506444	0					
ANR	10506752	AdditiveExpression	strlen ( fn [ 2 ] ) + 5		10506444	0		+			
ANR	10506753	CallExpression	strlen ( fn [ 2 ] )		10506444	0					
ANR	10506754	Callee	strlen		10506444	0					
ANR	10506755	Identifier	strlen		10506444	0					
ANR	10506756	ArgumentList	fn [ 2 ]		10506444	1					
ANR	10506757	Argument	fn [ 2 ]		10506444	0					
ANR	10506758	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10506759	Identifier	fn		10506444	0					
ANR	10506760	PrimaryExpression	2		10506444	1					
ANR	10506761	PrimaryExpression	5		10506444	1					
ANR	10506762	IfStatement	if ( out_fn == NULL )		10506444	1					
ANR	10506763	Condition	out_fn == NULL	910:10:24585:24598	10506444	0	True				
ANR	10506764	EqualityExpression	out_fn == NULL		10506444	0		==			
ANR	10506765	Identifier	out_fn		10506444	0					
ANR	10506766	Identifier	NULL		10506444	1					
ANR	10506767	CompoundStatement		63:26:1462:1462	10506444	1					
ANR	10506768	ExpressionStatement	"printf ( ""Can't alloc the output file name.\\n"" )"	911:10:24613:24658	10506444	0	True				
ANR	10506769	CallExpression	"printf ( ""Can't alloc the output file name.\\n"" )"		10506444	0					
ANR	10506770	Callee	printf		10506444	0					
ANR	10506771	Identifier	printf		10506444	0					
ANR	10506772	ArgumentList	"""Can't alloc the output file name.\\n"""		10506444	1					
ANR	10506773	Argument	"""Can't alloc the output file name.\\n"""		10506444	0					
ANR	10506774	PrimaryExpression	"""Can't alloc the output file name.\\n"""		10506444	0					
ANR	10506775	ReturnStatement	return 1 ;	912:10:24670:24678	10506444	1	True				
ANR	10506776	PrimaryExpression	1		10506444	0					
ANR	10506777	WhileStatement	while ( ! image1 -> feof_ ( image1 ) || ! image2 -> feof_ ( image2 ) )		10506444	18					
ANR	10506778	Condition	! image1 -> feof_ ( image1 ) || ! image2 -> feof_ ( image2 )	916:9:24702:24749	10506444	0	True				
ANR	10506779	OrExpression	! image1 -> feof_ ( image1 ) || ! image2 -> feof_ ( image2 )		10506444	0		||			
ANR	10506780	UnaryOperationExpression	! image1 -> feof_ ( image1 )		10506444	0					
ANR	10506781	UnaryOperator	!		10506444	0					
ANR	10506782	CallExpression	image1 -> feof_ ( image1 )		10506444	1					
ANR	10506783	Callee	image1 -> feof_		10506444	0					
ANR	10506784	PtrMemberAccess	image1 -> feof_		10506444	0					
ANR	10506785	Identifier	image1		10506444	0					
ANR	10506786	Identifier	feof_		10506444	1					
ANR	10506787	ArgumentList	image1		10506444	1					
ANR	10506788	Argument	image1		10506444	0					
ANR	10506789	Identifier	image1		10506444	0					
ANR	10506790	UnaryOperationExpression	! image2 -> feof_ ( image2 )		10506444	1					
ANR	10506791	UnaryOperator	!		10506444	0					
ANR	10506792	CallExpression	image2 -> feof_ ( image2 )		10506444	1					
ANR	10506793	Callee	image2 -> feof_		10506444	0					
ANR	10506794	PtrMemberAccess	image2 -> feof_		10506444	0					
ANR	10506795	Identifier	image2		10506444	0					
ANR	10506796	Identifier	feof_		10506444	1					
ANR	10506797	ArgumentList	image2		10506444	1					
ANR	10506798	Argument	image2		10506444	0					
ANR	10506799	Identifier	image2		10506444	0					
ANR	10506800	CompoundStatement		70:2:1615:1615	10506444	1					
ANR	10506801	IfStatement	if ( image1 -> feof_ ( image1 ) )		10506444	0					
ANR	10506802	Condition	image1 -> feof_ ( image1 )	918:8:24764:24784	10506444	0	True				
ANR	10506803	CallExpression	image1 -> feof_ ( image1 )		10506444	0					
ANR	10506804	Callee	image1 -> feof_		10506444	0					
ANR	10506805	PtrMemberAccess	image1 -> feof_		10506444	0					
ANR	10506806	Identifier	image1		10506444	0					
ANR	10506807	Identifier	feof_		10506444	1					
ANR	10506808	ArgumentList	image1		10506444	1					
ANR	10506809	Argument	image1		10506444	0					
ANR	10506810	Identifier	image1		10506444	0					
ANR	10506811	CompoundStatement		72:4:1652:1652	10506444	1					
ANR	10506812	ExpressionStatement	"printf ( ""Extra data (maybe pages) in the image file 2.\\n"" )"	920:6:24799:24857	10506444	0	True				
ANR	10506813	CallExpression	"printf ( ""Extra data (maybe pages) in the image file 2.\\n"" )"		10506444	0					
ANR	10506814	Callee	printf		10506444	0					
ANR	10506815	Identifier	printf		10506444	0					
ANR	10506816	ArgumentList	"""Extra data (maybe pages) in the image file 2.\\n"""		10506444	1					
ANR	10506817	Argument	"""Extra data (maybe pages) in the image file 2.\\n"""		10506444	0					
ANR	10506818	PrimaryExpression	"""Extra data (maybe pages) in the image file 2.\\n"""		10506444	0					
ANR	10506819	ReturnStatement	return 1 ;	921:6:24865:24873	10506444	1	True				
ANR	10506820	PrimaryExpression	1		10506444	0					
ANR	10506821	IfStatement	if ( image2 -> feof_ ( image2 ) )		10506444	1					
ANR	10506822	Condition	image2 -> feof_ ( image2 )	923:8:24889:24909	10506444	0	True				
ANR	10506823	CallExpression	image2 -> feof_ ( image2 )		10506444	0					
ANR	10506824	Callee	image2 -> feof_		10506444	0					
ANR	10506825	PtrMemberAccess	image2 -> feof_		10506444	0					
ANR	10506826	Identifier	image2		10506444	0					
ANR	10506827	Identifier	feof_		10506444	1					
ANR	10506828	ArgumentList	image2		10506444	1					
ANR	10506829	Argument	image2		10506444	0					
ANR	10506830	Identifier	image2		10506444	0					
ANR	10506831	CompoundStatement		77:4:1777:1777	10506444	1					
ANR	10506832	ExpressionStatement	"printf ( ""Extra data (maybe pages) in the image file 1.\\n"" )"	925:6:24924:24982	10506444	0	True				
ANR	10506833	CallExpression	"printf ( ""Extra data (maybe pages) in the image file 1.\\n"" )"		10506444	0					
ANR	10506834	Callee	printf		10506444	0					
ANR	10506835	Identifier	printf		10506444	0					
ANR	10506836	ArgumentList	"""Extra data (maybe pages) in the image file 1.\\n"""		10506444	1					
ANR	10506837	Argument	"""Extra data (maybe pages) in the image file 1.\\n"""		10506444	0					
ANR	10506838	PrimaryExpression	"""Extra data (maybe pages) in the image file 1.\\n"""		10506444	0					
ANR	10506839	ReturnStatement	return 1 ;	926:6:24990:24998	10506444	1	True				
ANR	10506840	PrimaryExpression	1		10506444	0					
ANR	10506841	IfStatement	if ( open_image ( image1 ) )		10506444	2					
ANR	10506842	Condition	open_image ( image1 )	928:8:25014:25031	10506444	0	True				
ANR	10506843	CallExpression	open_image ( image1 )		10506444	0					
ANR	10506844	Callee	open_image		10506444	0					
ANR	10506845	Identifier	open_image		10506444	0					
ANR	10506846	ArgumentList	image1		10506444	1					
ANR	10506847	Argument	image1		10506444	0					
ANR	10506848	Identifier	image1		10506444	0					
ANR	10506849	CompoundStatement		82:4:1899:1899	10506444	1					
ANR	10506850	ExpressionStatement	"printf ( ""Error parsing the page %d header in file %s\\n"" , page , fn [ 0 ] )"	930:6:25046:25115	10506444	0	True				
ANR	10506851	CallExpression	"printf ( ""Error parsing the page %d header in file %s\\n"" , page , fn [ 0 ] )"		10506444	0					
ANR	10506852	Callee	printf		10506444	0					
ANR	10506853	Identifier	printf		10506444	0					
ANR	10506854	ArgumentList	"""Error parsing the page %d header in file %s\\n"""		10506444	1					
ANR	10506855	Argument	"""Error parsing the page %d header in file %s\\n"""		10506444	0					
ANR	10506856	PrimaryExpression	"""Error parsing the page %d header in file %s\\n"""		10506444	0					
ANR	10506857	Argument	page		10506444	1					
ANR	10506858	Identifier	page		10506444	0					
ANR	10506859	Argument	fn [ 0 ]		10506444	2					
ANR	10506860	ArrayIndexing	fn [ 0 ]		10506444	0					
ANR	10506861	Identifier	fn		10506444	0					
ANR	10506862	PrimaryExpression	0		10506444	1					
ANR	10506863	ReturnStatement	return 1 ;	931:6:25123:25131	10506444	1	True				
ANR	10506864	PrimaryExpression	1		10506444	0					
ANR	10506865	IfStatement	if ( open_image ( image2 ) )		10506444	3					
ANR	10506866	Condition	open_image ( image2 )	934:8:25148:25165	10506444	0	True				
ANR	10506867	CallExpression	open_image ( image2 )		10506444	0					
ANR	10506868	Callee	open_image		10506444	0					
ANR	10506869	Identifier	open_image		10506444	0					
ANR	10506870	ArgumentList	image2		10506444	1					
ANR	10506871	Argument	image2		10506444	0					
ANR	10506872	Identifier	image2		10506444	0					
ANR	10506873	CompoundStatement		88:4:2033:2033	10506444	1					
ANR	10506874	ExpressionStatement	"printf ( ""Error parsing the page %d header in file %s\\n"" , page , fn [ 1 ] )"	936:6:25180:25249	10506444	0	True				
ANR	10506875	CallExpression	"printf ( ""Error parsing the page %d header in file %s\\n"" , page , fn [ 1 ] )"		10506444	0					
ANR	10506876	Callee	printf		10506444	0					
ANR	10506877	Identifier	printf		10506444	0					
ANR	10506878	ArgumentList	"""Error parsing the page %d header in file %s\\n"""		10506444	1					
ANR	10506879	Argument	"""Error parsing the page %d header in file %s\\n"""		10506444	0					
ANR	10506880	PrimaryExpression	"""Error parsing the page %d header in file %s\\n"""		10506444	0					
ANR	10506881	Argument	page		10506444	1					
ANR	10506882	Identifier	page		10506444	0					
ANR	10506883	Argument	fn [ 1 ]		10506444	2					
ANR	10506884	ArrayIndexing	fn [ 1 ]		10506444	0					
ANR	10506885	Identifier	fn		10506444	0					
ANR	10506886	PrimaryExpression	1		10506444	1					
ANR	10506887	ReturnStatement	return 1 ;	937:6:25257:25265	10506444	1	True				
ANR	10506888	PrimaryExpression	1		10506444	0					
ANR	10506889	IfStatement	if ( image1 -> width != image2 -> width )		10506444	4					
ANR	10506890	Condition	image1 -> width != image2 -> width	939:8:25281:25310	10506444	0	True				
ANR	10506891	EqualityExpression	image1 -> width != image2 -> width		10506444	0		!=			
ANR	10506892	PtrMemberAccess	image1 -> width		10506444	0					
ANR	10506893	Identifier	image1		10506444	0					
ANR	10506894	Identifier	width		10506444	1					
ANR	10506895	PtrMemberAccess	image2 -> width		10506444	1					
ANR	10506896	Identifier	image2		10506444	0					
ANR	10506897	Identifier	width		10506444	1					
ANR	10506898	CompoundStatement		92:40:2174:2174	10506444	1					
ANR	10506899	ExpressionStatement	"printf ( ""Different image width for page %d (%d vs %d)\\n"" , page , image1 -> width , image2 -> width )"	940:8:25323:25413	10506444	0	True				
ANR	10506900	CallExpression	"printf ( ""Different image width for page %d (%d vs %d)\\n"" , page , image1 -> width , image2 -> width )"		10506444	0					
ANR	10506901	Callee	printf		10506444	0					
ANR	10506902	Identifier	printf		10506444	0					
ANR	10506903	ArgumentList	"""Different image width for page %d (%d vs %d)\\n"""		10506444	1					
ANR	10506904	Argument	"""Different image width for page %d (%d vs %d)\\n"""		10506444	0					
ANR	10506905	PrimaryExpression	"""Different image width for page %d (%d vs %d)\\n"""		10506444	0					
ANR	10506906	Argument	page		10506444	1					
ANR	10506907	Identifier	page		10506444	0					
ANR	10506908	Argument	image1 -> width		10506444	2					
ANR	10506909	PtrMemberAccess	image1 -> width		10506444	0					
ANR	10506910	Identifier	image1		10506444	0					
ANR	10506911	Identifier	width		10506444	1					
ANR	10506912	Argument	image2 -> width		10506444	3					
ANR	10506913	PtrMemberAccess	image2 -> width		10506444	0					
ANR	10506914	Identifier	image2		10506444	0					
ANR	10506915	Identifier	width		10506444	1					
ANR	10506916	ExpressionStatement	"rcode = MAX ( rcode , 1 )"	941:8:25423:25444	10506444	1	True				
ANR	10506917	AssignmentExpression	"rcode = MAX ( rcode , 1 )"		10506444	0		=			
ANR	10506918	Identifier	rcode		10506444	0					
ANR	10506919	CallExpression	"MAX ( rcode , 1 )"		10506444	1					
ANR	10506920	Callee	MAX		10506444	0					
ANR	10506921	Identifier	MAX		10506444	0					
ANR	10506922	ArgumentList	rcode		10506444	1					
ANR	10506923	Argument	rcode		10506444	0					
ANR	10506924	Identifier	rcode		10506444	0					
ANR	10506925	Argument	1		10506444	1					
ANR	10506926	PrimaryExpression	1		10506444	0					
ANR	10506927	IfStatement	if ( image1 -> width * 2 < image2 -> width )		10506444	2					
ANR	10506928	Condition	image1 -> width * 2 < image2 -> width	942:12:25458:25486	10506444	0	True				
ANR	10506929	RelationalExpression	image1 -> width * 2 < image2 -> width		10506444	0		<			
ANR	10506930	MultiplicativeExpression	image1 -> width * 2		10506444	0		*			
ANR	10506931	PtrMemberAccess	image1 -> width		10506444	0					
ANR	10506932	Identifier	image1		10506444	0					
ANR	10506933	Identifier	width		10506444	1					
ANR	10506934	PrimaryExpression	2		10506444	1					
ANR	10506935	PtrMemberAccess	image2 -> width		10506444	1					
ANR	10506936	Identifier	image2		10506444	0					
ANR	10506937	Identifier	width		10506444	1					
ANR	10506938	ReturnStatement	return ( rcode ) ;	943:10:25499:25512	10506444	1	True				
ANR	10506939	Identifier	rcode		10506444	0					
ANR	10506940	IfStatement	if ( image1 -> height != image2 -> height )		10506444	5					
ANR	10506941	Condition	image1 -> height != image2 -> height	945:8:25528:25559	10506444	0	True				
ANR	10506942	EqualityExpression	image1 -> height != image2 -> height		10506444	0		!=			
ANR	10506943	PtrMemberAccess	image1 -> height		10506444	0					
ANR	10506944	Identifier	image1		10506444	0					
ANR	10506945	Identifier	height		10506444	1					
ANR	10506946	PtrMemberAccess	image2 -> height		10506444	1					
ANR	10506947	Identifier	image2		10506444	0					
ANR	10506948	Identifier	height		10506444	1					
ANR	10506949	CompoundStatement		98:42:2423:2423	10506444	1					
ANR	10506950	ExpressionStatement	"printf ( ""Different image height for page %d (%d vs %d)\\n"" , page , image1 -> height , image2 -> height )"	946:8:25572:25665	10506444	0	True				
ANR	10506951	CallExpression	"printf ( ""Different image height for page %d (%d vs %d)\\n"" , page , image1 -> height , image2 -> height )"		10506444	0					
ANR	10506952	Callee	printf		10506444	0					
ANR	10506953	Identifier	printf		10506444	0					
ANR	10506954	ArgumentList	"""Different image height for page %d (%d vs %d)\\n"""		10506444	1					
ANR	10506955	Argument	"""Different image height for page %d (%d vs %d)\\n"""		10506444	0					
ANR	10506956	PrimaryExpression	"""Different image height for page %d (%d vs %d)\\n"""		10506444	0					
ANR	10506957	Argument	page		10506444	1					
ANR	10506958	Identifier	page		10506444	0					
ANR	10506959	Argument	image1 -> height		10506444	2					
ANR	10506960	PtrMemberAccess	image1 -> height		10506444	0					
ANR	10506961	Identifier	image1		10506444	0					
ANR	10506962	Identifier	height		10506444	1					
ANR	10506963	Argument	image2 -> height		10506444	3					
ANR	10506964	PtrMemberAccess	image2 -> height		10506444	0					
ANR	10506965	Identifier	image2		10506444	0					
ANR	10506966	Identifier	height		10506444	1					
ANR	10506967	ExpressionStatement	"rcode = MAX ( rcode , 1 )"	947:8:25675:25696	10506444	1	True				
ANR	10506968	AssignmentExpression	"rcode = MAX ( rcode , 1 )"		10506444	0		=			
ANR	10506969	Identifier	rcode		10506444	0					
ANR	10506970	CallExpression	"MAX ( rcode , 1 )"		10506444	1					
ANR	10506971	Callee	MAX		10506444	0					
ANR	10506972	Identifier	MAX		10506444	0					
ANR	10506973	ArgumentList	rcode		10506444	1					
ANR	10506974	Argument	rcode		10506444	0					
ANR	10506975	Identifier	rcode		10506444	0					
ANR	10506976	Argument	1		10506444	1					
ANR	10506977	PrimaryExpression	1		10506444	0					
ANR	10506978	IfStatement	if ( out_fn != NULL )		10506444	6					
ANR	10506979	Condition	out_fn != NULL	949:8:25712:25725	10506444	0	True				
ANR	10506980	EqualityExpression	out_fn != NULL		10506444	0		!=			
ANR	10506981	Identifier	out_fn		10506444	0					
ANR	10506982	Identifier	NULL		10506444	1					
ANR	10506983	CompoundStatement		103:6:2597:2618	10506444	1					
ANR	10506984	IdentifierDeclStatement	int l = strlen ( fn [ 2 ] ) ;	950:6:25736:25757	10506444	0	True				
ANR	10506985	IdentifierDecl	l = strlen ( fn [ 2 ] )		10506444	0					
ANR	10506986	IdentifierDeclType	int		10506444	0					
ANR	10506987	Identifier	l		10506444	1					
ANR	10506988	AssignmentExpression	l = strlen ( fn [ 2 ] )		10506444	2		=			
ANR	10506989	Identifier	l		10506444	0					
ANR	10506990	CallExpression	strlen ( fn [ 2 ] )		10506444	1					
ANR	10506991	Callee	strlen		10506444	0					
ANR	10506992	Identifier	strlen		10506444	0					
ANR	10506993	ArgumentList	fn [ 2 ]		10506444	1					
ANR	10506994	Argument	fn [ 2 ]		10506444	0					
ANR	10506995	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10506996	Identifier	fn		10506444	0					
ANR	10506997	PrimaryExpression	2		10506444	1					
ANR	10506998	ExpressionStatement	"strcpy ( out_fn , fn [ 2 ] )"	952:6:25766:25787	10506444	1	True				
ANR	10506999	CallExpression	"strcpy ( out_fn , fn [ 2 ] )"		10506444	0					
ANR	10507000	Callee	strcpy		10506444	0					
ANR	10507001	Identifier	strcpy		10506444	0					
ANR	10507002	ArgumentList	out_fn		10506444	1					
ANR	10507003	Argument	out_fn		10506444	0					
ANR	10507004	Identifier	out_fn		10506444	0					
ANR	10507005	Argument	fn [ 2 ]		10506444	1					
ANR	10507006	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10507007	Identifier	fn		10506444	0					
ANR	10507008	PrimaryExpression	2		10506444	1					
ANR	10507009	ForStatement	for ( i = l ; i >= 0 ; i -- )		10506444	2					
ANR	10507010	ForInit	i = l ;	953:11:25800:25805	10506444	0	True				
ANR	10507011	AssignmentExpression	i = l		10506444	0		=			
ANR	10507012	Identifier	i		10506444	0					
ANR	10507013	Identifier	l		10506444	1					
ANR	10507014	Condition	i >= 0	953:18:25807:25812	10506444	1	True				
ANR	10507015	RelationalExpression	i >= 0		10506444	0		>=			
ANR	10507016	Identifier	i		10506444	0					
ANR	10507017	PrimaryExpression	0		10506444	1					
ANR	10507018	PostIncDecOperationExpression	i --	953:26:25815:25817	10506444	2	True				
ANR	10507019	Identifier	i		10506444	0					
ANR	10507020	IncDec	--		10506444	1					
ANR	10507021	CompoundStatement		106:31:2681:2681	10506444	3					
ANR	10507022	IfStatement	if ( out_fn [ i ] == '\\\\' || out_fn [ i ] == '/' || out_fn [ i ] == '.' )		10506444	0					
ANR	10507023	Condition	out_fn [ i ] == '\\\\' || out_fn [ i ] == '/' || out_fn [ i ] == '.'	954:14:25836:25892	10506444	0	True				
ANR	10507024	OrExpression	out_fn [ i ] == '\\\\' || out_fn [ i ] == '/' || out_fn [ i ] == '.'		10506444	0		||			
ANR	10507025	EqualityExpression	out_fn [ i ] == '\\\\'		10506444	0		==			
ANR	10507026	ArrayIndexing	out_fn [ i ]		10506444	0					
ANR	10507027	Identifier	out_fn		10506444	0					
ANR	10507028	Identifier	i		10506444	1					
ANR	10507029	PrimaryExpression	'\\\\'		10506444	1					
ANR	10507030	OrExpression	out_fn [ i ] == '/' || out_fn [ i ] == '.'		10506444	1		||			
ANR	10507031	EqualityExpression	out_fn [ i ] == '/'		10506444	0		==			
ANR	10507032	ArrayIndexing	out_fn [ i ]		10506444	0					
ANR	10507033	Identifier	out_fn		10506444	0					
ANR	10507034	Identifier	i		10506444	1					
ANR	10507035	PrimaryExpression	'/'		10506444	1					
ANR	10507036	EqualityExpression	out_fn [ i ] == '.'		10506444	1		==			
ANR	10507037	ArrayIndexing	out_fn [ i ]		10506444	0					
ANR	10507038	Identifier	out_fn		10506444	0					
ANR	10507039	Identifier	i		10506444	1					
ANR	10507040	PrimaryExpression	'.'		10506444	1					
ANR	10507041	BreakStatement	break ;	955:14:25909:25914	10506444	1	True				
ANR	10507042	IfStatement	if ( out_fn [ i ] == '.' )		10506444	3					
ANR	10507043	Condition	out_fn [ i ] == '.'	957:10:25934:25949	10506444	0	True				
ANR	10507044	EqualityExpression	out_fn [ i ] == '.'		10506444	0		==			
ANR	10507045	ArrayIndexing	out_fn [ i ]		10506444	0					
ANR	10507046	Identifier	out_fn		10506444	0					
ANR	10507047	Identifier	i		10506444	1					
ANR	10507048	PrimaryExpression	'.'		10506444	1					
ANR	10507049	CompoundStatement		111:10:2825:2831	10506444	1					
ANR	10507050	IdentifierDeclStatement	char c ;	958:10:25964:25970	10506444	0	True				
ANR	10507051	IdentifierDecl	c		10506444	0					
ANR	10507052	IdentifierDeclType	char		10506444	0					
ANR	10507053	Identifier	c		10506444	1					
ANR	10507054	ExpressionStatement	"memmove ( out_fn + i + 4 , out_fn + i , l + 1 - i )"	960:10:25983:26029	10506444	1	True				
ANR	10507055	CallExpression	"memmove ( out_fn + i + 4 , out_fn + i , l + 1 - i )"		10506444	0					
ANR	10507056	Callee	memmove		10506444	0					
ANR	10507057	Identifier	memmove		10506444	0					
ANR	10507058	ArgumentList	out_fn + i + 4		10506444	1					
ANR	10507059	Argument	out_fn + i + 4		10506444	0					
ANR	10507060	AdditiveExpression	out_fn + i + 4		10506444	0		+			
ANR	10507061	Identifier	out_fn		10506444	0					
ANR	10507062	AdditiveExpression	i + 4		10506444	1		+			
ANR	10507063	Identifier	i		10506444	0					
ANR	10507064	PrimaryExpression	4		10506444	1					
ANR	10507065	Argument	out_fn + i		10506444	1					
ANR	10507066	AdditiveExpression	out_fn + i		10506444	0		+			
ANR	10507067	Identifier	out_fn		10506444	0					
ANR	10507068	Identifier	i		10506444	1					
ANR	10507069	Argument	l + 1 - i		10506444	2					
ANR	10507070	AdditiveExpression	l + 1 - i		10506444	0		+			
ANR	10507071	Identifier	l		10506444	0					
ANR	10507072	AdditiveExpression	1 - i		10506444	1		-			
ANR	10507073	PrimaryExpression	1		10506444	0					
ANR	10507074	Identifier	i		10506444	1					
ANR	10507075	ExpressionStatement	c = out_fn [ i + 4 ]	961:10:26041:26058	10506444	2	True				
ANR	10507076	AssignmentExpression	c = out_fn [ i + 4 ]		10506444	0		=			
ANR	10507077	Identifier	c		10506444	0					
ANR	10507078	ArrayIndexing	out_fn [ i + 4 ]		10506444	1					
ANR	10507079	Identifier	out_fn		10506444	0					
ANR	10507080	AdditiveExpression	i + 4		10506444	1		+			
ANR	10507081	Identifier	i		10506444	0					
ANR	10507082	PrimaryExpression	4		10506444	1					
ANR	10507083	ExpressionStatement	"sprintf ( out_fn + i , ""-%03d"" , page )"	962:10:26070:26104	10506444	3	True				
ANR	10507084	CallExpression	"sprintf ( out_fn + i , ""-%03d"" , page )"		10506444	0					
ANR	10507085	Callee	sprintf		10506444	0					
ANR	10507086	Identifier	sprintf		10506444	0					
ANR	10507087	ArgumentList	out_fn + i		10506444	1					
ANR	10507088	Argument	out_fn + i		10506444	0					
ANR	10507089	AdditiveExpression	out_fn + i		10506444	0		+			
ANR	10507090	Identifier	out_fn		10506444	0					
ANR	10507091	Identifier	i		10506444	1					
ANR	10507092	Argument	"""-%03d"""		10506444	1					
ANR	10507093	PrimaryExpression	"""-%03d"""		10506444	0					
ANR	10507094	Argument	page		10506444	2					
ANR	10507095	Identifier	page		10506444	0					
ANR	10507096	ExpressionStatement	out_fn [ i + 4 ] = c	963:10:26116:26133	10506444	4	True				
ANR	10507097	AssignmentExpression	out_fn [ i + 4 ] = c		10506444	0		=			
ANR	10507098	ArrayIndexing	out_fn [ i + 4 ]		10506444	0					
ANR	10507099	Identifier	out_fn		10506444	0					
ANR	10507100	AdditiveExpression	i + 4		10506444	1		+			
ANR	10507101	Identifier	i		10506444	0					
ANR	10507102	PrimaryExpression	4		10506444	1					
ANR	10507103	Identifier	c		10506444	1					
ANR	10507104	ElseStatement	else		10506444	0					
ANR	10507105	ExpressionStatement	"sprintf ( out_fn + l , ""-%03d"" , page )"	965:10:26158:26192	10506444	0	True				
ANR	10507106	CallExpression	"sprintf ( out_fn + l , ""-%03d"" , page )"		10506444	0					
ANR	10507107	Callee	sprintf		10506444	0					
ANR	10507108	Identifier	sprintf		10506444	0					
ANR	10507109	ArgumentList	out_fn + l		10506444	1					
ANR	10507110	Argument	out_fn + l		10506444	0					
ANR	10507111	AdditiveExpression	out_fn + l		10506444	0		+			
ANR	10507112	Identifier	out_fn		10506444	0					
ANR	10507113	Identifier	l		10506444	1					
ANR	10507114	Argument	"""-%03d"""		10506444	1					
ANR	10507115	PrimaryExpression	"""-%03d"""		10506444	0					
ANR	10507116	Argument	page		10506444	2					
ANR	10507117	Identifier	page		10506444	0					
ANR	10507118	IfStatement	"if ( ! strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".bmp"" ) )"		10506444	4					
ANR	10507119	Condition	"! strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".bmp"" )"	966:10:26204:26244	10506444	0	True				
ANR	10507120	UnaryOperationExpression	"! strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".bmp"" )"		10506444	0					
ANR	10507121	UnaryOperator	!		10506444	0					
ANR	10507122	CallExpression	"strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".bmp"" )"		10506444	1					
ANR	10507123	Callee	strcmp		10506444	0					
ANR	10507124	Identifier	strcmp		10506444	0					
ANR	10507125	ArgumentList	fn [ 2 ] + strlen ( fn [ 2 ] ) - 4		10506444	1					
ANR	10507126	Argument	fn [ 2 ] + strlen ( fn [ 2 ] ) - 4		10506444	0					
ANR	10507127	AdditiveExpression	fn [ 2 ] + strlen ( fn [ 2 ] ) - 4		10506444	0		+			
ANR	10507128	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10507129	Identifier	fn		10506444	0					
ANR	10507130	PrimaryExpression	2		10506444	1					
ANR	10507131	AdditiveExpression	strlen ( fn [ 2 ] ) - 4		10506444	1		-			
ANR	10507132	CallExpression	strlen ( fn [ 2 ] )		10506444	0					
ANR	10507133	Callee	strlen		10506444	0					
ANR	10507134	Identifier	strlen		10506444	0					
ANR	10507135	ArgumentList	fn [ 2 ]		10506444	1					
ANR	10507136	Argument	fn [ 2 ]		10506444	0					
ANR	10507137	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10507138	Identifier	fn		10506444	0					
ANR	10507139	PrimaryExpression	2		10506444	1					
ANR	10507140	PrimaryExpression	4		10506444	1					
ANR	10507141	Argument	""".bmp"""		10506444	1					
ANR	10507142	PrimaryExpression	""".bmp"""		10506444	0					
ANR	10507143	ExpressionStatement	"image_out = create_bmp_image ( image1 , out_fn )"	967:8:26255:26299	10506444	1	True				
ANR	10507144	AssignmentExpression	"image_out = create_bmp_image ( image1 , out_fn )"		10506444	0		=			
ANR	10507145	Identifier	image_out		10506444	0					
ANR	10507146	CallExpression	"create_bmp_image ( image1 , out_fn )"		10506444	1					
ANR	10507147	Callee	create_bmp_image		10506444	0					
ANR	10507148	Identifier	create_bmp_image		10506444	0					
ANR	10507149	ArgumentList	image1		10506444	1					
ANR	10507150	Argument	image1		10506444	0					
ANR	10507151	Identifier	image1		10506444	0					
ANR	10507152	Argument	out_fn		10506444	1					
ANR	10507153	Identifier	out_fn		10506444	0					
ANR	10507154	ElseStatement	else		10506444	0					
ANR	10507155	IfStatement	"if ( ! strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".raw"" ) )"		10506444	0					
ANR	10507156	Condition	"! strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".raw"" )"	968:15:26316:26356	10506444	0	True				
ANR	10507157	UnaryOperationExpression	"! strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".raw"" )"		10506444	0					
ANR	10507158	UnaryOperator	!		10506444	0					
ANR	10507159	CallExpression	"strcmp ( fn [ 2 ] + strlen ( fn [ 2 ] ) - 4 , "".raw"" )"		10506444	1					
ANR	10507160	Callee	strcmp		10506444	0					
ANR	10507161	Identifier	strcmp		10506444	0					
ANR	10507162	ArgumentList	fn [ 2 ] + strlen ( fn [ 2 ] ) - 4		10506444	1					
ANR	10507163	Argument	fn [ 2 ] + strlen ( fn [ 2 ] ) - 4		10506444	0					
ANR	10507164	AdditiveExpression	fn [ 2 ] + strlen ( fn [ 2 ] ) - 4		10506444	0		+			
ANR	10507165	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10507166	Identifier	fn		10506444	0					
ANR	10507167	PrimaryExpression	2		10506444	1					
ANR	10507168	AdditiveExpression	strlen ( fn [ 2 ] ) - 4		10506444	1		-			
ANR	10507169	CallExpression	strlen ( fn [ 2 ] )		10506444	0					
ANR	10507170	Callee	strlen		10506444	0					
ANR	10507171	Identifier	strlen		10506444	0					
ANR	10507172	ArgumentList	fn [ 2 ]		10506444	1					
ANR	10507173	Argument	fn [ 2 ]		10506444	0					
ANR	10507174	ArrayIndexing	fn [ 2 ]		10506444	0					
ANR	10507175	Identifier	fn		10506444	0					
ANR	10507176	PrimaryExpression	2		10506444	1					
ANR	10507177	PrimaryExpression	4		10506444	1					
ANR	10507178	Argument	""".raw"""		10506444	1					
ANR	10507179	PrimaryExpression	""".raw"""		10506444	0					
ANR	10507180	ExpressionStatement	"image_out = create_raw_image ( image1 , out_fn )"	969:8:26367:26411	10506444	1	True				
ANR	10507181	AssignmentExpression	"image_out = create_raw_image ( image1 , out_fn )"		10506444	0		=			
ANR	10507182	Identifier	image_out		10506444	0					
ANR	10507183	CallExpression	"create_raw_image ( image1 , out_fn )"		10506444	1					
ANR	10507184	Callee	create_raw_image		10506444	0					
ANR	10507185	Identifier	create_raw_image		10506444	0					
ANR	10507186	ArgumentList	image1		10506444	1					
ANR	10507187	Argument	image1		10506444	0					
ANR	10507188	Identifier	image1		10506444	0					
ANR	10507189	Argument	out_fn		10506444	1					
ANR	10507190	Identifier	out_fn		10506444	0					
ANR	10507191	ElseStatement	else		10506444	0					
ANR	10507192	ExpressionStatement	"image_out = create_pnm_image ( image1 , out_fn )"	971:9:26433:26477	10506444	0	True				
ANR	10507193	AssignmentExpression	"image_out = create_pnm_image ( image1 , out_fn )"		10506444	0		=			
ANR	10507194	Identifier	image_out		10506444	0					
ANR	10507195	CallExpression	"create_pnm_image ( image1 , out_fn )"		10506444	1					
ANR	10507196	Callee	create_pnm_image		10506444	0					
ANR	10507197	Identifier	create_pnm_image		10506444	0					
ANR	10507198	ArgumentList	image1		10506444	1					
ANR	10507199	Argument	image1		10506444	0					
ANR	10507200	Identifier	image1		10506444	0					
ANR	10507201	Argument	out_fn		10506444	1					
ANR	10507202	Identifier	out_fn		10506444	0					
ANR	10507203	ElseStatement	else		10506444	0					
ANR	10507204	ExpressionStatement	image_out = NULL	973:6:26496:26512	10506444	0	True				
ANR	10507205	AssignmentExpression	image_out = NULL		10506444	0		=			
ANR	10507206	Identifier	image_out		10506444	0					
ANR	10507207	Identifier	NULL		10506444	1					
ANR	10507208	ExpressionStatement	freport . n_diff = 0	975:4:26519:26537	10506444	7	True				
ANR	10507209	AssignmentExpression	freport . n_diff = 0		10506444	0		=			
ANR	10507210	MemberAccess	freport . n_diff		10506444	0					
ANR	10507211	Identifier	freport		10506444	0					
ANR	10507212	Identifier	n_diff		10506444	1					
ANR	10507213	PrimaryExpression	0		10506444	1					
ANR	10507214	ExpressionStatement	freport . n_outof_tolerance = 0	976:4:26543:26572	10506444	8	True				
ANR	10507215	AssignmentExpression	freport . n_outof_tolerance = 0		10506444	0		=			
ANR	10507216	MemberAccess	freport . n_outof_tolerance		10506444	0					
ANR	10507217	Identifier	freport		10506444	0					
ANR	10507218	Identifier	n_outof_tolerance		10506444	1					
ANR	10507219	PrimaryExpression	0		10506444	1					
ANR	10507220	ExpressionStatement	freport . n_outof_window = 0	977:4:26578:26604	10506444	9	True				
ANR	10507221	AssignmentExpression	freport . n_outof_window = 0		10506444	0		=			
ANR	10507222	MemberAccess	freport . n_outof_window		10506444	0					
ANR	10507223	Identifier	freport		10506444	0					
ANR	10507224	Identifier	n_outof_window		10506444	1					
ANR	10507225	PrimaryExpression	0		10506444	1					
ANR	10507226	ExpressionStatement	freport . avg_color_error = 0	978:4:26610:26637	10506444	10	True				
ANR	10507227	AssignmentExpression	freport . avg_color_error = 0		10506444	0		=			
ANR	10507228	MemberAccess	freport . avg_color_error		10506444	0					
ANR	10507229	Identifier	freport		10506444	0					
ANR	10507230	Identifier	avg_color_error		10506444	1					
ANR	10507231	PrimaryExpression	0		10506444	1					
ANR	10507232	ExpressionStatement	freport . max_color_error = 0	979:4:26643:26670	10506444	11	True				
ANR	10507233	AssignmentExpression	freport . max_color_error = 0		10506444	0		=			
ANR	10507234	MemberAccess	freport . max_color_error		10506444	0					
ANR	10507235	Identifier	freport		10506444	0					
ANR	10507236	Identifier	max_color_error		10506444	1					
ANR	10507237	PrimaryExpression	0		10506444	1					
ANR	10507238	IfStatement	"if ( fuzzy_diff_images ( image1 , image2 , & fparams , & freport , image_out ) )"		10506444	12					
ANR	10507239	Condition	"fuzzy_diff_images ( image1 , image2 , & fparams , & freport , image_out )"	980:8:26680:26744	10506444	0	True				
ANR	10507240	CallExpression	"fuzzy_diff_images ( image1 , image2 , & fparams , & freport , image_out )"		10506444	0					
ANR	10507241	Callee	fuzzy_diff_images		10506444	0					
ANR	10507242	Identifier	fuzzy_diff_images		10506444	0					
ANR	10507243	ArgumentList	image1		10506444	1					
ANR	10507244	Argument	image1		10506444	0					
ANR	10507245	Identifier	image1		10506444	0					
ANR	10507246	Argument	image2		10506444	1					
ANR	10507247	Identifier	image2		10506444	0					
ANR	10507248	Argument	& fparams		10506444	2					
ANR	10507249	UnaryOperationExpression	& fparams		10506444	0					
ANR	10507250	UnaryOperator	&		10506444	0					
ANR	10507251	Identifier	fparams		10506444	1					
ANR	10507252	Argument	& freport		10506444	3					
ANR	10507253	UnaryOperationExpression	& freport		10506444	0					
ANR	10507254	UnaryOperator	&		10506444	0					
ANR	10507255	Identifier	freport		10506444	1					
ANR	10507256	Argument	image_out		10506444	4					
ANR	10507257	Identifier	image_out		10506444	0					
ANR	10507258	ReturnStatement	return 1 ;	981:8:26755:26763	10506444	1	True				
ANR	10507259	PrimaryExpression	1		10506444	0					
ANR	10507260	IfStatement	if ( image_out )		10506444	13					
ANR	10507261	Condition	image_out	982:8:26773:26781	10506444	0	True				
ANR	10507262	Identifier	image_out		10506444	0					
ANR	10507263	ExpressionStatement	image_pnm_close ( & image_out -> super )	983:6:26790:26825	10506444	1	True				
ANR	10507264	CallExpression	image_pnm_close ( & image_out -> super )		10506444	0					
ANR	10507265	Callee	image_pnm_close		10506444	0					
ANR	10507266	Identifier	image_pnm_close		10506444	0					
ANR	10507267	ArgumentList	& image_out -> super		10506444	1					
ANR	10507268	Argument	& image_out -> super		10506444	0					
ANR	10507269	UnaryOperationExpression	& image_out -> super		10506444	0					
ANR	10507270	UnaryOperator	&		10506444	0					
ANR	10507271	PtrMemberAccess	image_out -> super		10506444	1					
ANR	10507272	Identifier	image_out		10506444	0					
ANR	10507273	Identifier	super		10506444	1					
ANR	10507274	ExpressionStatement	image_out = NULL	984:4:26831:26847	10506444	14	True				
ANR	10507275	AssignmentExpression	image_out = NULL		10506444	0		=			
ANR	10507276	Identifier	image_out		10506444	0					
ANR	10507277	Identifier	NULL		10506444	1					
ANR	10507278	IfStatement	if ( freport . n_diff > 0 )		10506444	15					
ANR	10507279	Condition	freport . n_diff > 0	985:8:26857:26874	10506444	0	True				
ANR	10507280	RelationalExpression	freport . n_diff > 0		10506444	0		>			
ANR	10507281	MemberAccess	freport . n_diff		10506444	0					
ANR	10507282	Identifier	freport		10506444	0					
ANR	10507283	Identifier	n_diff		10506444	1					
ANR	10507284	PrimaryExpression	0		10506444	1					
ANR	10507285	CompoundStatement		139:4:3742:3742	10506444	1					
ANR	10507286	ExpressionStatement	"printf ( ""%s: page %d: %d diff., %d out of tol., %d out of win., %3.2lf avg diff, %3.2lf max diff\\n"" , fn [ 0 ] , page , freport . n_diff , freport . n_outof_tolerance , freport . n_outof_window , freport . avg_color_error , freport . max_color_error )"	987:6:26889:27160	10506444	0	True				
ANR	10507287	CallExpression	"printf ( ""%s: page %d: %d diff., %d out of tol., %d out of win., %3.2lf avg diff, %3.2lf max diff\\n"" , fn [ 0 ] , page , freport . n_diff , freport . n_outof_tolerance , freport . n_outof_window , freport . avg_color_error , freport . max_color_error )"		10506444	0					
ANR	10507288	Callee	printf		10506444	0					
ANR	10507289	Identifier	printf		10506444	0					
ANR	10507290	ArgumentList	"""%s: page %d: %d diff., %d out of tol., %d out of win., %3.2lf avg diff, %3.2lf max diff\\n"""		10506444	1					
ANR	10507291	Argument	"""%s: page %d: %d diff., %d out of tol., %d out of win., %3.2lf avg diff, %3.2lf max diff\\n"""		10506444	0					
ANR	10507292	PrimaryExpression	"""%s: page %d: %d diff., %d out of tol., %d out of win., %3.2lf avg diff, %3.2lf max diff\\n"""		10506444	0					
ANR	10507293	Argument	fn [ 0 ]		10506444	1					
ANR	10507294	ArrayIndexing	fn [ 0 ]		10506444	0					
ANR	10507295	Identifier	fn		10506444	0					
ANR	10507296	PrimaryExpression	0		10506444	1					
ANR	10507297	Argument	page		10506444	2					
ANR	10507298	Identifier	page		10506444	0					
ANR	10507299	Argument	freport . n_diff		10506444	3					
ANR	10507300	MemberAccess	freport . n_diff		10506444	0					
ANR	10507301	Identifier	freport		10506444	0					
ANR	10507302	Identifier	n_diff		10506444	1					
ANR	10507303	Argument	freport . n_outof_tolerance		10506444	4					
ANR	10507304	MemberAccess	freport . n_outof_tolerance		10506444	0					
ANR	10507305	Identifier	freport		10506444	0					
ANR	10507306	Identifier	n_outof_tolerance		10506444	1					
ANR	10507307	Argument	freport . n_outof_window		10506444	5					
ANR	10507308	MemberAccess	freport . n_outof_window		10506444	0					
ANR	10507309	Identifier	freport		10506444	0					
ANR	10507310	Identifier	n_outof_window		10506444	1					
ANR	10507311	Argument	freport . avg_color_error		10506444	6					
ANR	10507312	MemberAccess	freport . avg_color_error		10506444	0					
ANR	10507313	Identifier	freport		10506444	0					
ANR	10507314	Identifier	avg_color_error		10506444	1					
ANR	10507315	Argument	freport . max_color_error		10506444	7					
ANR	10507316	MemberAccess	freport . max_color_error		10506444	0					
ANR	10507317	Identifier	freport		10506444	0					
ANR	10507318	Identifier	max_color_error		10506444	1					
ANR	10507319	ExpressionStatement	"rcode = MAX ( rcode , 1 )"	991:6:27168:27189	10506444	1	True				
ANR	10507320	AssignmentExpression	"rcode = MAX ( rcode , 1 )"		10506444	0		=			
ANR	10507321	Identifier	rcode		10506444	0					
ANR	10507322	CallExpression	"MAX ( rcode , 1 )"		10506444	1					
ANR	10507323	Callee	MAX		10506444	0					
ANR	10507324	Identifier	MAX		10506444	0					
ANR	10507325	ArgumentList	rcode		10506444	1					
ANR	10507326	Argument	rcode		10506444	0					
ANR	10507327	Identifier	rcode		10506444	0					
ANR	10507328	Argument	1		10506444	1					
ANR	10507329	PrimaryExpression	1		10506444	0					
ANR	10507330	IfStatement	if ( freport . n_outof_window > 0 )		10506444	16					
ANR	10507331	Condition	freport . n_outof_window > 0	993:8:27205:27230	10506444	0	True				
ANR	10507332	RelationalExpression	freport . n_outof_window > 0		10506444	0		>			
ANR	10507333	MemberAccess	freport . n_outof_window		10506444	0					
ANR	10507334	Identifier	freport		10506444	0					
ANR	10507335	Identifier	n_outof_window		10506444	1					
ANR	10507336	PrimaryExpression	0		10506444	1					
ANR	10507337	ExpressionStatement	"rcode = MAX ( rcode , 2 )"	994:6:27239:27260	10506444	1	True				
ANR	10507338	AssignmentExpression	"rcode = MAX ( rcode , 2 )"		10506444	0		=			
ANR	10507339	Identifier	rcode		10506444	0					
ANR	10507340	CallExpression	"MAX ( rcode , 2 )"		10506444	1					
ANR	10507341	Callee	MAX		10506444	0					
ANR	10507342	Identifier	MAX		10506444	0					
ANR	10507343	ArgumentList	rcode		10506444	1					
ANR	10507344	Argument	rcode		10506444	0					
ANR	10507345	Identifier	rcode		10506444	0					
ANR	10507346	Argument	2		10506444	1					
ANR	10507347	PrimaryExpression	2		10506444	0					
ANR	10507348	ExpressionStatement	page ++	995:4:27266:27272	10506444	17	True				
ANR	10507349	PostIncDecOperationExpression	page ++		10506444	0					
ANR	10507350	Identifier	page		10506444	0					
ANR	10507351	IncDec	++		10506444	1					
ANR	10507352	ExpressionStatement	image_close ( image1 )	997:2:27280:27300	10506444	19	True				
ANR	10507353	CallExpression	image_close ( image1 )		10506444	0					
ANR	10507354	Callee	image_close		10506444	0					
ANR	10507355	Identifier	image_close		10506444	0					
ANR	10507356	ArgumentList	image1		10506444	1					
ANR	10507357	Argument	image1		10506444	0					
ANR	10507358	Identifier	image1		10506444	0					
ANR	10507359	ExpressionStatement	image_close ( image2 )	998:2:27304:27324	10506444	20	True				
ANR	10507360	CallExpression	image_close ( image2 )		10506444	0					
ANR	10507361	Callee	image_close		10506444	0					
ANR	10507362	Identifier	image_close		10506444	0					
ANR	10507363	ArgumentList	image2		10506444	1					
ANR	10507364	Argument	image2		10506444	0					
ANR	10507365	Identifier	image2		10506444	0					
ANR	10507366	ReturnStatement	return rcode ;	999:2:27328:27340	10506444	21	True				
ANR	10507367	Identifier	rcode		10506444	0					
ANR	10507368	ReturnType	int		10506444	1					
ANR	10507369	Identifier	main		10506444	2					
ANR	10507370	ParameterList	"int argc , char * * argv"		10506444	3					
ANR	10507371	Parameter	int argc	847:6:23115:23122	10506444	0	True				
ANR	10507372	ParameterType	int		10506444	0					
ANR	10507373	Identifier	argc		10506444	1					
ANR	10507374	Parameter	char * * argv	847:16:23125:23135	10506444	1	True				
ANR	10507375	ParameterType	char * *		10506444	0					
ANR	10507376	Identifier	argv		10506444	1					
ANR	10507377	CFGEntryNode	ENTRY		10506444		True				
ANR	10507378	CFGExitNode	EXIT		10506444		True				
ANR	10507379	Symbol	open_image		10506444						
ANR	10507380	Symbol	usage		10506444						
ANR	10507381	Symbol	fparams		10506444						
ANR	10507382	Symbol	* argv		10506444						
ANR	10507383	Symbol	freport . avg_color_error		10506444						
ANR	10507384	Symbol	fuzzy_diff_images		10506444						
ANR	10507385	Symbol	fn_idx		10506444						
ANR	10507386	Symbol	image2 -> feof_		10506444						
ANR	10507387	Symbol	image1 -> height		10506444						
ANR	10507388	Symbol	strlen		10506444						
ANR	10507389	Symbol	freport . n_outof_tolerance		10506444						
ANR	10507390	Symbol	freport . n_diff		10506444						
ANR	10507391	Symbol	freport		10506444						
ANR	10507392	Symbol	strcmp		10506444						
ANR	10507393	Symbol	fparams . window_size		10506444						
ANR	10507394	Symbol	fparams . report_coordinates		10506444						
ANR	10507395	Symbol	NULL		10506444						
ANR	10507396	Symbol	create_raw_image		10506444						
ANR	10507397	Symbol	TRUE		10506444						
ANR	10507398	Symbol	rcode		10506444						
ANR	10507399	Symbol	page		10506444						
ANR	10507400	Symbol	create_bmp_image		10506444						
ANR	10507401	Symbol	image2 -> width		10506444						
ANR	10507402	Symbol	* arg		10506444						
ANR	10507403	Symbol	freport . max_color_error		10506444						
ANR	10507404	Symbol	MAX		10506444						
ANR	10507405	Symbol	* out_fn		10506444						
ANR	10507406	Symbol	create_pnm_image		10506444						
ANR	10507407	Symbol	& fparams		10506444						
ANR	10507408	Symbol	image_out		10506444						
ANR	10507409	Symbol	fn		10506444						
ANR	10507410	Symbol	out_fn		10506444						
ANR	10507411	Symbol	argv		10506444						
ANR	10507412	Symbol	image2 -> height		10506444						
ANR	10507413	Symbol	image1 -> width		10506444						
ANR	10507414	Symbol	arg		10506444						
ANR	10507415	Symbol	argc		10506444						
ANR	10507416	Symbol	atoi		10506444						
ANR	10507417	Symbol	malloc		10506444						
ANR	10507418	Symbol	fparams . tolerance		10506444						
ANR	10507419	Symbol	c		10506444						
ANR	10507420	Symbol	image1 -> feof_		10506444						
ANR	10507421	Symbol	get_arg		10506444						
ANR	10507422	Symbol	alloc_image_file		10506444						
ANR	10507423	Symbol	i		10506444						
ANR	10507424	Symbol	image1		10506444						
ANR	10507425	Symbol	l		10506444						
ANR	10507426	Symbol	image2		10506444						
ANR	10507427	Symbol	* fn		10506444						
ANR	10507428	Symbol	& i		10506444						
ANR	10507429	Symbol	* i		10506444						
ANR	10507430	Symbol	freport . n_outof_window		10506444						
ANR	10507431	Symbol	& freport		10506444						
ANR	10507432	Symbol	FALSE		10506444						
ANR	10507433	Symbol	& image_out -> super		10506444						
ANR	10507434	Symbol	* image2		10506444						
ANR	10507435	Symbol	* image1		10506444						
