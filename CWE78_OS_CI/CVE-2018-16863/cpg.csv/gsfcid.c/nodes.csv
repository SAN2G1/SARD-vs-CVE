command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5071873	File	data/converged/CVE-2018-16863_ghostpdl/gsfcid.c								
ANR	5071874	DeclStmt									
ANR	5071875	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_gs_font_cid1
ANR	5071876	DeclStmt									
ANR	5071877	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_gs_font_cid2
ANR	5071878	Function	subst_CID_on_WMode_finalize	109:0:3964:4369							
ANR	5071879	FunctionDef	"subst_CID_on_WMode_finalize (const gs_memory_t * cmem , void * data)"		5071878	0					
ANR	5071880	CompoundStatement		111:0:4041:4369	5071878	0					
ANR	5071881	IdentifierDeclStatement	gs_subst_CID_on_WMode_t * subst = ( gs_subst_CID_on_WMode_t * ) data ;	112:4:4047:4111	5071878	0	True				
ANR	5071882	IdentifierDecl	* subst = ( gs_subst_CID_on_WMode_t * ) data		5071878	0					
ANR	5071883	IdentifierDeclType	gs_subst_CID_on_WMode_t *		5071878	0					
ANR	5071884	Identifier	subst		5071878	1					
ANR	5071885	AssignmentExpression	* subst = ( gs_subst_CID_on_WMode_t * ) data		5071878	2		=			
ANR	5071886	Identifier	subst		5071878	0					
ANR	5071887	CastExpression	( gs_subst_CID_on_WMode_t * ) data		5071878	1					
ANR	5071888	CastTarget	gs_subst_CID_on_WMode_t *		5071878	0					
ANR	5071889	Identifier	data		5071878	1					
ANR	5071890	ExpressionStatement	( void ) cmem	113:4:4117:4127	5071878	1	True				
ANR	5071891	CastExpression	( void ) cmem		5071878	0					
ANR	5071892	CastTarget	void		5071878	0					
ANR	5071893	Identifier	cmem		5071878	1					
ANR	5071894	ExpressionStatement	"gs_free_object ( subst -> rc . memory , subst -> data + 0 , ""subst_CID_on_WMode_finalize"" )"	115:4:4147:4227	5071878	2	True				
ANR	5071895	CallExpression	"gs_free_object ( subst -> rc . memory , subst -> data + 0 , ""subst_CID_on_WMode_finalize"" )"		5071878	0					
ANR	5071896	Callee	gs_free_object		5071878	0					
ANR	5071897	Identifier	gs_free_object		5071878	0					
ANR	5071898	ArgumentList	subst -> rc . memory		5071878	1					
ANR	5071899	Argument	subst -> rc . memory		5071878	0					
ANR	5071900	MemberAccess	subst -> rc . memory		5071878	0					
ANR	5071901	PtrMemberAccess	subst -> rc		5071878	0					
ANR	5071902	Identifier	subst		5071878	0					
ANR	5071903	Identifier	rc		5071878	1					
ANR	5071904	Identifier	memory		5071878	1					
ANR	5071905	Argument	subst -> data + 0		5071878	1					
ANR	5071906	AdditiveExpression	subst -> data + 0		5071878	0		+			
ANR	5071907	PtrMemberAccess	subst -> data		5071878	0					
ANR	5071908	Identifier	subst		5071878	0					
ANR	5071909	Identifier	data		5071878	1					
ANR	5071910	PrimaryExpression	0		5071878	1					
ANR	5071911	Argument	"""subst_CID_on_WMode_finalize"""		5071878	2					
ANR	5071912	PrimaryExpression	"""subst_CID_on_WMode_finalize"""		5071878	0					
ANR	5071913	ExpressionStatement	subst -> data [ 0 ] = NULL	116:4:4233:4254	5071878	3	True				
ANR	5071914	AssignmentExpression	subst -> data [ 0 ] = NULL		5071878	0		=			
ANR	5071915	ArrayIndexing	subst -> data [ 0 ]		5071878	0					
ANR	5071916	PtrMemberAccess	subst -> data		5071878	0					
ANR	5071917	Identifier	subst		5071878	0					
ANR	5071918	Identifier	data		5071878	1					
ANR	5071919	PrimaryExpression	0		5071878	1					
ANR	5071920	Identifier	NULL		5071878	1					
ANR	5071921	ExpressionStatement	"gs_free_object ( subst -> rc . memory , subst -> data + 1 , ""subst_CID_on_WMode_finalize"" )"	117:4:4260:4340	5071878	4	True				
ANR	5071922	CallExpression	"gs_free_object ( subst -> rc . memory , subst -> data + 1 , ""subst_CID_on_WMode_finalize"" )"		5071878	0					
ANR	5071923	Callee	gs_free_object		5071878	0					
ANR	5071924	Identifier	gs_free_object		5071878	0					
ANR	5071925	ArgumentList	subst -> rc . memory		5071878	1					
ANR	5071926	Argument	subst -> rc . memory		5071878	0					
ANR	5071927	MemberAccess	subst -> rc . memory		5071878	0					
ANR	5071928	PtrMemberAccess	subst -> rc		5071878	0					
ANR	5071929	Identifier	subst		5071878	0					
ANR	5071930	Identifier	rc		5071878	1					
ANR	5071931	Identifier	memory		5071878	1					
ANR	5071932	Argument	subst -> data + 1		5071878	1					
ANR	5071933	AdditiveExpression	subst -> data + 1		5071878	0		+			
ANR	5071934	PtrMemberAccess	subst -> data		5071878	0					
ANR	5071935	Identifier	subst		5071878	0					
ANR	5071936	Identifier	data		5071878	1					
ANR	5071937	PrimaryExpression	1		5071878	1					
ANR	5071938	Argument	"""subst_CID_on_WMode_finalize"""		5071878	2					
ANR	5071939	PrimaryExpression	"""subst_CID_on_WMode_finalize"""		5071878	0					
ANR	5071940	ExpressionStatement	subst -> data [ 1 ] = NULL	118:4:4346:4367	5071878	5	True				
ANR	5071941	AssignmentExpression	subst -> data [ 1 ] = NULL		5071878	0		=			
ANR	5071942	ArrayIndexing	subst -> data [ 1 ]		5071878	0					
ANR	5071943	PtrMemberAccess	subst -> data		5071878	0					
ANR	5071944	Identifier	subst		5071878	0					
ANR	5071945	Identifier	data		5071878	1					
ANR	5071946	PrimaryExpression	1		5071878	1					
ANR	5071947	Identifier	NULL		5071878	1					
ANR	5071948	ReturnType	static void		5071878	1					
ANR	5071949	Identifier	subst_CID_on_WMode_finalize		5071878	2					
ANR	5071950	ParameterList	"const gs_memory_t * cmem , void * data"		5071878	3					
ANR	5071951	Parameter	const gs_memory_t * cmem	110:28:4004:4026	5071878	0	True				
ANR	5071952	ParameterType	const gs_memory_t *		5071878	0					
ANR	5071953	Identifier	cmem		5071878	1					
ANR	5071954	Parameter	void * data	110:53:4029:4038	5071878	1	True				
ANR	5071955	ParameterType	void *		5071878	0					
ANR	5071956	Identifier	data		5071878	1					
ANR	5071957	CFGEntryNode	ENTRY		5071878		True				
ANR	5071958	CFGExitNode	EXIT		5071878		True				
ANR	5071959	Symbol	NULL		5071878						
ANR	5071960	Symbol	data		5071878						
ANR	5071961	Symbol	* subst		5071878						
ANR	5071962	Symbol	subst		5071878						
ANR	5071963	Symbol	subst -> rc		5071878						
ANR	5071964	Symbol	subst -> rc . memory		5071878						
ANR	5071965	Symbol	* subst -> data		5071878						
ANR	5071966	Symbol	cmem		5071878						
ANR	5071967	Symbol	* * subst		5071878						
ANR	5071968	Symbol	subst -> data		5071878						
ANR	5071969	Function	cid_system_info_set_null	127:0:4550:4652							
ANR	5071970	FunctionDef	cid_system_info_set_null (gs_cid_system_info_t * pcidsi)		5071969	0					
ANR	5071971	CompoundStatement		129:0:4610:4652	5071969	0					
ANR	5071972	ExpressionStatement	"memset ( pcidsi , 0 , sizeof ( * pcidsi ) )"	130:4:4616:4650	5071969	0	True				
ANR	5071973	CallExpression	"memset ( pcidsi , 0 , sizeof ( * pcidsi ) )"		5071969	0					
ANR	5071974	Callee	memset		5071969	0					
ANR	5071975	Identifier	memset		5071969	0					
ANR	5071976	ArgumentList	pcidsi		5071969	1					
ANR	5071977	Argument	pcidsi		5071969	0					
ANR	5071978	Identifier	pcidsi		5071969	0					
ANR	5071979	Argument	0		5071969	1					
ANR	5071980	PrimaryExpression	0		5071969	0					
ANR	5071981	Argument	sizeof ( * pcidsi )		5071969	2					
ANR	5071982	SizeofExpression	sizeof ( * pcidsi )		5071969	0					
ANR	5071983	Sizeof	sizeof		5071969	0					
ANR	5071984	UnaryOperationExpression	* pcidsi		5071969	1					
ANR	5071985	UnaryOperator	*		5071969	0					
ANR	5071986	Identifier	pcidsi		5071969	1					
ANR	5071987	ReturnType	void		5071969	1					
ANR	5071988	Identifier	cid_system_info_set_null		5071969	2					
ANR	5071989	ParameterList	gs_cid_system_info_t * pcidsi		5071969	3					
ANR	5071990	Parameter	gs_cid_system_info_t * pcidsi	128:25:4580:4607	5071969	0	True				
ANR	5071991	ParameterType	gs_cid_system_info_t *		5071969	0					
ANR	5071992	Identifier	pcidsi		5071969	1					
ANR	5071993	CFGEntryNode	ENTRY		5071969		True				
ANR	5071994	CFGExitNode	EXIT		5071969		True				
ANR	5071995	Symbol	* pcidsi		5071969						
ANR	5071996	Symbol	pcidsi		5071969						
ANR	5071997	Function	cid_system_info_is_null	132:0:4654:4831							
ANR	5071998	FunctionDef	cid_system_info_is_null (const gs_cid_system_info_t * pcidsi)		5071997	0					
ANR	5071999	CompoundStatement		134:0:4719:4831	5071997	0					
ANR	5072000	ReturnStatement	return ( pcidsi -> Registry . size == 0 && pcidsi -> Ordering . size == 0 && pcidsi -> Supplement == 0 ) ;	135:4:4725:4829	5071997	0	True				
ANR	5072001	AndExpression	pcidsi -> Registry . size == 0 && pcidsi -> Ordering . size == 0 && pcidsi -> Supplement == 0		5071997	0		&&			
ANR	5072002	EqualityExpression	pcidsi -> Registry . size == 0		5071997	0		==			
ANR	5072003	MemberAccess	pcidsi -> Registry . size		5071997	0					
ANR	5072004	PtrMemberAccess	pcidsi -> Registry		5071997	0					
ANR	5072005	Identifier	pcidsi		5071997	0					
ANR	5072006	Identifier	Registry		5071997	1					
ANR	5072007	Identifier	size		5071997	1					
ANR	5072008	PrimaryExpression	0		5071997	1					
ANR	5072009	AndExpression	pcidsi -> Ordering . size == 0 && pcidsi -> Supplement == 0		5071997	1		&&			
ANR	5072010	EqualityExpression	pcidsi -> Ordering . size == 0		5071997	0		==			
ANR	5072011	MemberAccess	pcidsi -> Ordering . size		5071997	0					
ANR	5072012	PtrMemberAccess	pcidsi -> Ordering		5071997	0					
ANR	5072013	Identifier	pcidsi		5071997	0					
ANR	5072014	Identifier	Ordering		5071997	1					
ANR	5072015	Identifier	size		5071997	1					
ANR	5072016	PrimaryExpression	0		5071997	1					
ANR	5072017	EqualityExpression	pcidsi -> Supplement == 0		5071997	1		==			
ANR	5072018	PtrMemberAccess	pcidsi -> Supplement		5071997	0					
ANR	5072019	Identifier	pcidsi		5071997	0					
ANR	5072020	Identifier	Supplement		5071997	1					
ANR	5072021	PrimaryExpression	0		5071997	1					
ANR	5072022	ReturnType	bool		5071997	1					
ANR	5072023	Identifier	cid_system_info_is_null		5071997	2					
ANR	5072024	ParameterList	const gs_cid_system_info_t * pcidsi		5071997	3					
ANR	5072025	Parameter	const gs_cid_system_info_t * pcidsi	133:24:4683:4716	5071997	0	True				
ANR	5072026	ParameterType	const gs_cid_system_info_t *		5071997	0					
ANR	5072027	Identifier	pcidsi		5071997	1					
ANR	5072028	CFGEntryNode	ENTRY		5071997		True				
ANR	5072029	CFGExitNode	EXIT		5071997		True				
ANR	5072030	Symbol	* pcidsi		5071997						
ANR	5072031	Symbol	pcidsi -> Ordering . size		5071997						
ANR	5072032	Symbol	pcidsi -> Registry		5071997						
ANR	5072033	Symbol	pcidsi		5071997						
ANR	5072034	Symbol	pcidsi -> Supplement		5071997						
ANR	5072035	Symbol	pcidsi -> Registry . size		5071997						
ANR	5072036	Symbol	pcidsi -> Ordering		5071997						
ANR	5072037	Function	gs_font_cid_system_info	143:0:4924:5373							
ANR	5072038	FunctionDef	gs_font_cid_system_info (const gs_font * pfont)		5072037	0					
ANR	5072039	CompoundStatement		145:0:4999:5373	5072037	0					
ANR	5072040	SwitchStatement	switch ( pfont -> FontType )		5072037	0					
ANR	5072041	Condition	pfont -> FontType	146:12:5013:5027	5072037	0	True				
ANR	5072042	PtrMemberAccess	pfont -> FontType		5072037	0					
ANR	5072043	Identifier	pfont		5072037	0					
ANR	5072044	Identifier	FontType		5072037	1					
ANR	5072045	CompoundStatement		2:29:30:30	5072037	1					
ANR	5072046	Label	case ft_CID_encrypted :	147:4:5036:5057	5072037	0	True				
ANR	5072047	Identifier	ft_CID_encrypted		5072037	0					
ANR	5072048	ReturnStatement	return & ( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo ;	148:8:5067:5133	5072037	1	True				
ANR	5072049	UnaryOperationExpression	& ( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo		5072037	0					
ANR	5072050	UnaryOperator	&		5072037	0					
ANR	5072051	MemberAccess	( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo		5072037	1					
ANR	5072052	MemberAccess	( ( const gs_font_cid0 * ) pfont ) -> cidata . common		5072037	0					
ANR	5072053	PtrMemberAccess	( ( const gs_font_cid0 * ) pfont ) -> cidata		5072037	0					
ANR	5072054	CastExpression	( const gs_font_cid0 * ) pfont		5072037	0					
ANR	5072055	CastTarget	const gs_font_cid0 *		5072037	0					
ANR	5072056	Identifier	pfont		5072037	1					
ANR	5072057	Identifier	cidata		5072037	1					
ANR	5072058	Identifier	common		5072037	1					
ANR	5072059	Identifier	CIDSystemInfo		5072037	1					
ANR	5072060	Label	case ft_CID_user_defined :	149:4:5139:5163	5072037	2	True				
ANR	5072061	Identifier	ft_CID_user_defined		5072037	0					
ANR	5072062	ReturnStatement	return & ( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo ;	150:8:5173:5232	5072037	3	True				
ANR	5072063	UnaryOperationExpression	& ( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo		5072037	0					
ANR	5072064	UnaryOperator	&		5072037	0					
ANR	5072065	MemberAccess	( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo		5072037	1					
ANR	5072066	PtrMemberAccess	( ( const gs_font_cid1 * ) pfont ) -> cidata		5072037	0					
ANR	5072067	CastExpression	( const gs_font_cid1 * ) pfont		5072037	0					
ANR	5072068	CastTarget	const gs_font_cid1 *		5072037	0					
ANR	5072069	Identifier	pfont		5072037	1					
ANR	5072070	Identifier	cidata		5072037	1					
ANR	5072071	Identifier	CIDSystemInfo		5072037	1					
ANR	5072072	Label	case ft_CID_TrueType :	151:4:5238:5258	5072037	4	True				
ANR	5072073	Identifier	ft_CID_TrueType		5072037	0					
ANR	5072074	ReturnStatement	return & ( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo ;	152:8:5268:5334	5072037	5	True				
ANR	5072075	UnaryOperationExpression	& ( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo		5072037	0					
ANR	5072076	UnaryOperator	&		5072037	0					
ANR	5072077	MemberAccess	( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo		5072037	1					
ANR	5072078	MemberAccess	( ( const gs_font_cid2 * ) pfont ) -> cidata . common		5072037	0					
ANR	5072079	PtrMemberAccess	( ( const gs_font_cid2 * ) pfont ) -> cidata		5072037	0					
ANR	5072080	CastExpression	( const gs_font_cid2 * ) pfont		5072037	0					
ANR	5072081	CastTarget	const gs_font_cid2 *		5072037	0					
ANR	5072082	Identifier	pfont		5072037	1					
ANR	5072083	Identifier	cidata		5072037	1					
ANR	5072084	Identifier	common		5072037	1					
ANR	5072085	Identifier	CIDSystemInfo		5072037	1					
ANR	5072086	Label	default :	153:4:5340:5347	5072037	6	True				
ANR	5072087	Identifier	default		5072037	0					
ANR	5072088	ReturnStatement	return 0 ;	154:8:5357:5365	5072037	7	True				
ANR	5072089	PrimaryExpression	0		5072037	0					
ANR	5072090	ReturnType	const gs_cid_system_info_t *		5072037	1					
ANR	5072091	Identifier	gs_font_cid_system_info		5072037	2					
ANR	5072092	ParameterList	const gs_font * pfont		5072037	3					
ANR	5072093	Parameter	const gs_font * pfont	144:24:4977:4996	5072037	0	True				
ANR	5072094	ParameterType	const gs_font *		5072037	0					
ANR	5072095	Identifier	pfont		5072037	1					
ANR	5072096	CFGEntryNode	ENTRY		5072037		True				
ANR	5072097	CFGExitNode	EXIT		5072037		True				
ANR	5072098	Symbol	& ( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo		5072037						
ANR	5072099	Symbol	pfont		5072037						
ANR	5072100	Symbol	& ( ( const gs_font_cid0 * ) pfont ) -> cidata		5072037						
ANR	5072101	Symbol	( ( const gs_font_cid1 * ) pfont ) -> cidata		5072037						
ANR	5072102	Symbol	& ( ( const gs_font_cid0 * ) pfont ) -> cidata . common		5072037						
ANR	5072103	Symbol	& ( ( const gs_font_cid2 * ) pfont ) -> cidata		5072037						
ANR	5072104	Symbol	( ( const gs_font_cid0 * ) pfont ) -> cidata		5072037						
ANR	5072105	Symbol	& ( ( const gs_font_cid2 * ) pfont ) -> cidata . common		5072037						
ANR	5072106	Symbol	* pfont		5072037						
ANR	5072107	Symbol	pfont -> FontType		5072037						
ANR	5072108	Symbol	( ( const gs_font_cid2 * ) pfont ) -> cidata . common		5072037						
ANR	5072109	Symbol	& ( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo		5072037						
ANR	5072110	Symbol	( ( const gs_font_cid0 * ) pfont ) -> cidata . common		5072037						
ANR	5072111	Symbol	& ( ( const gs_font_cid1 * ) pfont ) -> cidata		5072037						
ANR	5072112	Symbol	& ( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo		5072037						
ANR	5072113	Symbol	( ( const gs_font_cid2 * ) pfont ) -> cidata		5072037						
ANR	5072114	Function	gs_is_CIDSystemInfo_compatible	161:0:5421:6029							
ANR	5072115	FunctionDef	"gs_is_CIDSystemInfo_compatible (const gs_cid_system_info_t * info0 , const gs_cid_system_info_t * info1)"		5072114	0					
ANR	5072116	CompoundStatement		164:0:5558:6029	5072114	0					
ANR	5072117	IfStatement	if ( info0 == NULL || info1 == NULL )		5072114	0					
ANR	5072118	Condition	info0 == NULL || info1 == NULL	165:8:5568:5597	5072114	0	True				
ANR	5072119	OrExpression	info0 == NULL || info1 == NULL		5072114	0		||			
ANR	5072120	EqualityExpression	info0 == NULL		5072114	0		==			
ANR	5072121	Identifier	info0		5072114	0					
ANR	5072122	Identifier	NULL		5072114	1					
ANR	5072123	EqualityExpression	info1 == NULL		5072114	1		==			
ANR	5072124	Identifier	info1		5072114	0					
ANR	5072125	Identifier	NULL		5072114	1					
ANR	5072126	ReturnStatement	return false ;	166:8:5608:5620	5072114	1	True				
ANR	5072127	Identifier	false		5072114	0					
ANR	5072128	IfStatement	if ( info0 -> Registry . size != info1 -> Registry . size )		5072114	1					
ANR	5072129	Condition	info0 -> Registry . size != info1 -> Registry . size	167:8:5630:5673	5072114	0	True				
ANR	5072130	EqualityExpression	info0 -> Registry . size != info1 -> Registry . size		5072114	0		!=			
ANR	5072131	MemberAccess	info0 -> Registry . size		5072114	0					
ANR	5072132	PtrMemberAccess	info0 -> Registry		5072114	0					
ANR	5072133	Identifier	info0		5072114	0					
ANR	5072134	Identifier	Registry		5072114	1					
ANR	5072135	Identifier	size		5072114	1					
ANR	5072136	MemberAccess	info1 -> Registry . size		5072114	1					
ANR	5072137	PtrMemberAccess	info1 -> Registry		5072114	0					
ANR	5072138	Identifier	info1		5072114	0					
ANR	5072139	Identifier	Registry		5072114	1					
ANR	5072140	Identifier	size		5072114	1					
ANR	5072141	ReturnStatement	return false ;	168:8:5684:5696	5072114	1	True				
ANR	5072142	Identifier	false		5072114	0					
ANR	5072143	IfStatement	if ( info0 -> Ordering . size != info1 -> Ordering . size )		5072114	2					
ANR	5072144	Condition	info0 -> Ordering . size != info1 -> Ordering . size	169:8:5706:5749	5072114	0	True				
ANR	5072145	EqualityExpression	info0 -> Ordering . size != info1 -> Ordering . size		5072114	0		!=			
ANR	5072146	MemberAccess	info0 -> Ordering . size		5072114	0					
ANR	5072147	PtrMemberAccess	info0 -> Ordering		5072114	0					
ANR	5072148	Identifier	info0		5072114	0					
ANR	5072149	Identifier	Ordering		5072114	1					
ANR	5072150	Identifier	size		5072114	1					
ANR	5072151	MemberAccess	info1 -> Ordering . size		5072114	1					
ANR	5072152	PtrMemberAccess	info1 -> Ordering		5072114	0					
ANR	5072153	Identifier	info1		5072114	0					
ANR	5072154	Identifier	Ordering		5072114	1					
ANR	5072155	Identifier	size		5072114	1					
ANR	5072156	ReturnStatement	return false ;	170:8:5760:5772	5072114	1	True				
ANR	5072157	Identifier	false		5072114	0					
ANR	5072158	IfStatement	"if ( memcmp ( info0 -> Registry . data , info1 -> Registry . data , info0 -> Registry . size ) )"		5072114	3					
ANR	5072159	Condition	"memcmp ( info0 -> Registry . data , info1 -> Registry . data , info0 -> Registry . size )"	171:8:5782:5868	5072114	0	True				
ANR	5072160	CallExpression	"memcmp ( info0 -> Registry . data , info1 -> Registry . data , info0 -> Registry . size )"		5072114	0					
ANR	5072161	Callee	memcmp		5072114	0					
ANR	5072162	Identifier	memcmp		5072114	0					
ANR	5072163	ArgumentList	info0 -> Registry . data		5072114	1					
ANR	5072164	Argument	info0 -> Registry . data		5072114	0					
ANR	5072165	MemberAccess	info0 -> Registry . data		5072114	0					
ANR	5072166	PtrMemberAccess	info0 -> Registry		5072114	0					
ANR	5072167	Identifier	info0		5072114	0					
ANR	5072168	Identifier	Registry		5072114	1					
ANR	5072169	Identifier	data		5072114	1					
ANR	5072170	Argument	info1 -> Registry . data		5072114	1					
ANR	5072171	MemberAccess	info1 -> Registry . data		5072114	0					
ANR	5072172	PtrMemberAccess	info1 -> Registry		5072114	0					
ANR	5072173	Identifier	info1		5072114	0					
ANR	5072174	Identifier	Registry		5072114	1					
ANR	5072175	Identifier	data		5072114	1					
ANR	5072176	Argument	info0 -> Registry . size		5072114	2					
ANR	5072177	MemberAccess	info0 -> Registry . size		5072114	0					
ANR	5072178	PtrMemberAccess	info0 -> Registry		5072114	0					
ANR	5072179	Identifier	info0		5072114	0					
ANR	5072180	Identifier	Registry		5072114	1					
ANR	5072181	Identifier	size		5072114	1					
ANR	5072182	ReturnStatement	return false ;	173:8:5879:5891	5072114	1	True				
ANR	5072183	Identifier	false		5072114	0					
ANR	5072184	IfStatement	"if ( memcmp ( info0 -> Ordering . data , info1 -> Ordering . data , info0 -> Ordering . size ) )"		5072114	4					
ANR	5072185	Condition	"memcmp ( info0 -> Ordering . data , info1 -> Ordering . data , info0 -> Ordering . size )"	174:8:5901:5987	5072114	0	True				
ANR	5072186	CallExpression	"memcmp ( info0 -> Ordering . data , info1 -> Ordering . data , info0 -> Ordering . size )"		5072114	0					
ANR	5072187	Callee	memcmp		5072114	0					
ANR	5072188	Identifier	memcmp		5072114	0					
ANR	5072189	ArgumentList	info0 -> Ordering . data		5072114	1					
ANR	5072190	Argument	info0 -> Ordering . data		5072114	0					
ANR	5072191	MemberAccess	info0 -> Ordering . data		5072114	0					
ANR	5072192	PtrMemberAccess	info0 -> Ordering		5072114	0					
ANR	5072193	Identifier	info0		5072114	0					
ANR	5072194	Identifier	Ordering		5072114	1					
ANR	5072195	Identifier	data		5072114	1					
ANR	5072196	Argument	info1 -> Ordering . data		5072114	1					
ANR	5072197	MemberAccess	info1 -> Ordering . data		5072114	0					
ANR	5072198	PtrMemberAccess	info1 -> Ordering		5072114	0					
ANR	5072199	Identifier	info1		5072114	0					
ANR	5072200	Identifier	Ordering		5072114	1					
ANR	5072201	Identifier	data		5072114	1					
ANR	5072202	Argument	info0 -> Ordering . size		5072114	2					
ANR	5072203	MemberAccess	info0 -> Ordering . size		5072114	0					
ANR	5072204	PtrMemberAccess	info0 -> Ordering		5072114	0					
ANR	5072205	Identifier	info0		5072114	0					
ANR	5072206	Identifier	Ordering		5072114	1					
ANR	5072207	Identifier	size		5072114	1					
ANR	5072208	ReturnStatement	return false ;	176:8:5998:6010	5072114	1	True				
ANR	5072209	Identifier	false		5072114	0					
ANR	5072210	ReturnStatement	return true ;	177:4:6016:6027	5072114	5	True				
ANR	5072211	Identifier	true		5072114	0					
ANR	5072212	ReturnType	bool		5072114	1					
ANR	5072213	Identifier	gs_is_CIDSystemInfo_compatible		5072114	2					
ANR	5072214	ParameterList	"const gs_cid_system_info_t * info0 , const gs_cid_system_info_t * info1"		5072114	3					
ANR	5072215	Parameter	const gs_cid_system_info_t * info0	162:31:5457:5489	5072114	0	True				
ANR	5072216	ParameterType	const gs_cid_system_info_t *		5072114	0					
ANR	5072217	Identifier	info0		5072114	1					
ANR	5072218	Parameter	const gs_cid_system_info_t * info1	163:31:5523:5555	5072114	1	True				
ANR	5072219	ParameterType	const gs_cid_system_info_t *		5072114	0					
ANR	5072220	Identifier	info1		5072114	1					
ANR	5072221	CFGEntryNode	ENTRY		5072114		True				
ANR	5072222	CFGExitNode	EXIT		5072114		True				
ANR	5072223	Symbol	info0 -> Ordering . size		5072114						
ANR	5072224	Symbol	NULL		5072114						
ANR	5072225	Symbol	info1 -> Ordering . size		5072114						
ANR	5072226	Symbol	info1 -> Registry . size		5072114						
ANR	5072227	Symbol	false		5072114						
ANR	5072228	Symbol	info0 -> Ordering		5072114						
ANR	5072229	Symbol	info1 -> Ordering . data		5072114						
ANR	5072230	Symbol	info0 -> Ordering . data		5072114						
ANR	5072231	Symbol	memcmp		5072114						
ANR	5072232	Symbol	info1 -> Registry . data		5072114						
ANR	5072233	Symbol	info1 -> Registry		5072114						
ANR	5072234	Symbol	* info1		5072114						
ANR	5072235	Symbol	info1 -> Ordering		5072114						
ANR	5072236	Symbol	* info0		5072114						
ANR	5072237	Symbol	info1		5072114						
ANR	5072238	Symbol	true		5072114						
ANR	5072239	Symbol	info0		5072114						
ANR	5072240	Symbol	info0 -> Registry		5072114						
ANR	5072241	Symbol	info0 -> Registry . data		5072114						
ANR	5072242	Symbol	info0 -> Registry . size		5072114						
ANR	5072243	Function	gs_font_cid0_enumerate_glyph	185:0:6230:7037							
ANR	5072244	FunctionDef	"gs_font_cid0_enumerate_glyph (gs_font * font , int * pindex , gs_glyph_space_t ignore_glyph_space , gs_glyph * pglyph)"		5072243	0					
ANR	5072245	CompoundStatement		189:0:6404:7037	5072243	0					
ANR	5072246	Statement	gs_font_cid0	190:4:6410:6421	5072243	0	True				
ANR	5072247	Statement	*	190:17:6423:6423	5072243	1	True				
ANR	5072248	Statement	const	190:18:6424:6428	5072243	2	True				
ANR	5072249	ExpressionStatement	pfont = ( gs_font_cid0 * ) font	190:24:6430:6458	5072243	3	True				
ANR	5072250	AssignmentExpression	pfont = ( gs_font_cid0 * ) font		5072243	0		=			
ANR	5072251	Identifier	pfont		5072243	0					
ANR	5072252	CastExpression	( gs_font_cid0 * ) font		5072243	1					
ANR	5072253	CastTarget	gs_font_cid0 *		5072243	0					
ANR	5072254	Identifier	font		5072243	1					
ANR	5072255	WhileStatement	while ( * pindex < pfont -> cidata . common . CIDCount )		5072243	4					
ANR	5072256	Condition	* pindex < pfont -> cidata . common . CIDCount	192:11:6472:6510	5072243	0	True				
ANR	5072257	RelationalExpression	* pindex < pfont -> cidata . common . CIDCount		5072243	0		<			
ANR	5072258	UnaryOperationExpression	* pindex		5072243	0					
ANR	5072259	UnaryOperator	*		5072243	0					
ANR	5072260	Identifier	pindex		5072243	1					
ANR	5072261	MemberAccess	pfont -> cidata . common . CIDCount		5072243	1					
ANR	5072262	MemberAccess	pfont -> cidata . common		5072243	0					
ANR	5072263	PtrMemberAccess	pfont -> cidata		5072243	0					
ANR	5072264	Identifier	pfont		5072243	0					
ANR	5072265	Identifier	cidata		5072243	1					
ANR	5072266	Identifier	common		5072243	1					
ANR	5072267	Identifier	CIDCount		5072243	1					
ANR	5072268	CompoundStatement		8:8:236:244	5072243	1					
ANR	5072269	IdentifierDeclStatement	gs_glyph_data_t gdata ;	193:8:6523:6544	5072243	0	True				
ANR	5072270	IdentifierDecl	gdata		5072243	0					
ANR	5072271	IdentifierDeclType	gs_glyph_data_t		5072243	0					
ANR	5072272	Identifier	gdata		5072243	1					
ANR	5072273	IdentifierDeclStatement	int fidx ;	194:8:6554:6562	5072243	1	True				
ANR	5072274	IdentifierDecl	fidx		5072243	0					
ANR	5072275	IdentifierDeclType	int		5072243	0					
ANR	5072276	Identifier	fidx		5072243	1					
ANR	5072277	IdentifierDeclStatement	gs_glyph glyph = ( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ ) ;	195:8:6572:6631	5072243	2	True				
ANR	5072278	IdentifierDecl	glyph = ( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ )		5072243	0					
ANR	5072279	IdentifierDeclType	gs_glyph		5072243	0					
ANR	5072280	Identifier	glyph		5072243	1					
ANR	5072281	AssignmentExpression	glyph = ( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ )		5072243	2		=			
ANR	5072282	Identifier	glyph		5072243	0					
ANR	5072283	CastExpression	( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ )		5072243	1					
ANR	5072284	CastTarget	gs_glyph		5072243	0					
ANR	5072285	AdditiveExpression	GS_MIN_CID_GLYPH + ( * pindex ) ++		5072243	1		+			
ANR	5072286	Identifier	GS_MIN_CID_GLYPH		5072243	0					
ANR	5072287	PostIncDecOperationExpression	( * pindex ) ++		5072243	1					
ANR	5072288	UnaryOperationExpression	* pindex		5072243	0					
ANR	5072289	UnaryOperator	*		5072243	0					
ANR	5072290	Identifier	pindex		5072243	1					
ANR	5072291	IncDec	++		5072243	1					
ANR	5072292	IdentifierDeclStatement	int code ;	196:8:6641:6649	5072243	3	True				
ANR	5072293	IdentifierDecl	code		5072243	0					
ANR	5072294	IdentifierDeclType	int		5072243	0					
ANR	5072295	Identifier	code		5072243	1					
ANR	5072296	ExpressionStatement	gdata . memory = pfont -> memory	198:8:6660:6688	5072243	4	True				
ANR	5072297	AssignmentExpression	gdata . memory = pfont -> memory		5072243	0		=			
ANR	5072298	MemberAccess	gdata . memory		5072243	0					
ANR	5072299	Identifier	gdata		5072243	0					
ANR	5072300	Identifier	memory		5072243	1					
ANR	5072301	PtrMemberAccess	pfont -> memory		5072243	1					
ANR	5072302	Identifier	pfont		5072243	0					
ANR	5072303	Identifier	memory		5072243	1					
ANR	5072304	ExpressionStatement	"code = pfont -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , & gdata , & fidx )"	199:8:6698:6818	5072243	5	True				
ANR	5072305	AssignmentExpression	"code = pfont -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , & gdata , & fidx )"		5072243	0		=			
ANR	5072306	Identifier	code		5072243	0					
ANR	5072307	CallExpression	"pfont -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , & gdata , & fidx )"		5072243	1					
ANR	5072308	Callee	pfont -> cidata . glyph_data		5072243	0					
ANR	5072309	MemberAccess	pfont -> cidata . glyph_data		5072243	0					
ANR	5072310	PtrMemberAccess	pfont -> cidata		5072243	0					
ANR	5072311	Identifier	pfont		5072243	0					
ANR	5072312	Identifier	cidata		5072243	1					
ANR	5072313	Identifier	glyph_data		5072243	1					
ANR	5072314	ArgumentList	( gs_font_base * ) pfont		5072243	1					
ANR	5072315	Argument	( gs_font_base * ) pfont		5072243	0					
ANR	5072316	CastExpression	( gs_font_base * ) pfont		5072243	0					
ANR	5072317	CastTarget	gs_font_base *		5072243	0					
ANR	5072318	Identifier	pfont		5072243	1					
ANR	5072319	Argument	glyph		5072243	1					
ANR	5072320	Identifier	glyph		5072243	0					
ANR	5072321	Argument	& gdata		5072243	2					
ANR	5072322	UnaryOperationExpression	& gdata		5072243	0					
ANR	5072323	UnaryOperator	&		5072243	0					
ANR	5072324	Identifier	gdata		5072243	1					
ANR	5072325	Argument	& fidx		5072243	3					
ANR	5072326	UnaryOperationExpression	& fidx		5072243	0					
ANR	5072327	UnaryOperator	&		5072243	0					
ANR	5072328	Identifier	fidx		5072243	1					
ANR	5072329	IfStatement	if ( code < 0 || gdata . bits . size == 0 )		5072243	6					
ANR	5072330	Condition	code < 0 || gdata . bits . size == 0	201:12:6832:6863	5072243	0	True				
ANR	5072331	OrExpression	code < 0 || gdata . bits . size == 0		5072243	0		||			
ANR	5072332	RelationalExpression	code < 0		5072243	0		<			
ANR	5072333	Identifier	code		5072243	0					
ANR	5072334	PrimaryExpression	0		5072243	1					
ANR	5072335	EqualityExpression	gdata . bits . size == 0		5072243	1		==			
ANR	5072336	MemberAccess	gdata . bits . size		5072243	0					
ANR	5072337	MemberAccess	gdata . bits		5072243	0					
ANR	5072338	Identifier	gdata		5072243	0					
ANR	5072339	Identifier	bits		5072243	1					
ANR	5072340	Identifier	size		5072243	1					
ANR	5072341	PrimaryExpression	0		5072243	1					
ANR	5072342	ContinueStatement	continue ;	202:12:6878:6886	5072243	1	True				
ANR	5072343	ExpressionStatement	* pglyph = glyph	203:8:6896:6911	5072243	7	True				
ANR	5072344	AssignmentExpression	* pglyph = glyph		5072243	0		=			
ANR	5072345	UnaryOperationExpression	* pglyph		5072243	0					
ANR	5072346	UnaryOperator	*		5072243	0					
ANR	5072347	Identifier	pglyph		5072243	1					
ANR	5072348	Identifier	glyph		5072243	1					
ANR	5072349	ExpressionStatement	"gs_glyph_data_free ( & gdata , ""gs_font_cid0_enumerate_glyphs"" )"	204:8:6921:6980	5072243	8	True				
ANR	5072350	CallExpression	"gs_glyph_data_free ( & gdata , ""gs_font_cid0_enumerate_glyphs"" )"		5072243	0					
ANR	5072351	Callee	gs_glyph_data_free		5072243	0					
ANR	5072352	Identifier	gs_glyph_data_free		5072243	0					
ANR	5072353	ArgumentList	& gdata		5072243	1					
ANR	5072354	Argument	& gdata		5072243	0					
ANR	5072355	UnaryOperationExpression	& gdata		5072243	0					
ANR	5072356	UnaryOperator	&		5072243	0					
ANR	5072357	Identifier	gdata		5072243	1					
ANR	5072358	Argument	"""gs_font_cid0_enumerate_glyphs"""		5072243	1					
ANR	5072359	PrimaryExpression	"""gs_font_cid0_enumerate_glyphs"""		5072243	0					
ANR	5072360	ReturnStatement	return 0 ;	205:8:6990:6998	5072243	9	True				
ANR	5072361	PrimaryExpression	0		5072243	0					
ANR	5072362	ExpressionStatement	* pindex = 0	207:4:7010:7021	5072243	5	True				
ANR	5072363	AssignmentExpression	* pindex = 0		5072243	0		=			
ANR	5072364	UnaryOperationExpression	* pindex		5072243	0					
ANR	5072365	UnaryOperator	*		5072243	0					
ANR	5072366	Identifier	pindex		5072243	1					
ANR	5072367	PrimaryExpression	0		5072243	1					
ANR	5072368	ReturnStatement	return 0 ;	208:4:7027:7035	5072243	6	True				
ANR	5072369	PrimaryExpression	0		5072243	0					
ANR	5072370	ReturnType	int		5072243	1					
ANR	5072371	Identifier	gs_font_cid0_enumerate_glyph		5072243	2					
ANR	5072372	ParameterList	"gs_font * font , int * pindex , gs_glyph_space_t ignore_glyph_space , gs_glyph * pglyph"		5072243	3					
ANR	5072373	Parameter	gs_font * font	186:29:6263:6275	5072243	0	True				
ANR	5072374	ParameterType	gs_font *		5072243	0					
ANR	5072375	Identifier	font		5072243	1					
ANR	5072376	Parameter	int * pindex	186:44:6278:6288	5072243	1	True				
ANR	5072377	ParameterType	int *		5072243	0					
ANR	5072378	Identifier	pindex		5072243	1					
ANR	5072379	Parameter	gs_glyph_space_t ignore_glyph_space	187:29:6320:6354	5072243	2	True				
ANR	5072380	ParameterType	gs_glyph_space_t		5072243	0					
ANR	5072381	Identifier	ignore_glyph_space		5072243	1					
ANR	5072382	Parameter	gs_glyph * pglyph	188:29:6386:6401	5072243	3	True				
ANR	5072383	ParameterType	gs_glyph *		5072243	0					
ANR	5072384	Identifier	pglyph		5072243	1					
ANR	5072385	CFGEntryNode	ENTRY		5072243		True				
ANR	5072386	CFGExitNode	EXIT		5072243		True				
ANR	5072387	Symbol	pglyph		5072243						
ANR	5072388	Symbol	code		5072243						
ANR	5072389	Symbol	pfont -> cidata . glyph_data		5072243						
ANR	5072390	Symbol	pfont -> cidata . common		5072243						
ANR	5072391	Symbol	pfont -> memory		5072243						
ANR	5072392	Symbol	pfont		5072243						
ANR	5072393	Symbol	* pglyph		5072243						
ANR	5072394	Symbol	pfont -> cidata . common . CIDCount		5072243						
ANR	5072395	Symbol	gdata . bits		5072243						
ANR	5072396	Symbol	* pindex		5072243						
ANR	5072397	Symbol	gdata		5072243						
ANR	5072398	Symbol	ignore_glyph_space		5072243						
ANR	5072399	Symbol	pfont -> cidata		5072243						
ANR	5072400	Symbol	* pfont		5072243						
ANR	5072401	Symbol	glyph		5072243						
ANR	5072402	Symbol	& gdata		5072243						
ANR	5072403	Symbol	fidx		5072243						
ANR	5072404	Symbol	& fidx		5072243						
ANR	5072405	Symbol	pindex		5072243						
ANR	5072406	Symbol	gdata . bits . size		5072243						
ANR	5072407	Symbol	GS_MIN_CID_GLYPH		5072243						
ANR	5072408	Symbol	font		5072243						
ANR	5072409	Symbol	gdata . memory		5072243						
ANR	5072410	Function	gs_cid0_indexed_font	212:0:7098:7467							
ANR	5072411	FunctionDef	"gs_cid0_indexed_font (const gs_font * font , int fidx)"		5072410	0					
ANR	5072412	CompoundStatement		214:0:7166:7467	5072410	0					
ANR	5072413	Statement	gs_font_cid0	215:4:7172:7183	5072410	0	True				
ANR	5072414	Statement	*	215:17:7185:7185	5072410	1	True				
ANR	5072415	Statement	const	215:18:7186:7190	5072410	2	True				
ANR	5072416	ExpressionStatement	pfont = ( gs_font_cid0 * ) font	215:24:7192:7220	5072410	3	True				
ANR	5072417	AssignmentExpression	pfont = ( gs_font_cid0 * ) font		5072410	0		=			
ANR	5072418	Identifier	pfont		5072410	0					
ANR	5072419	CastExpression	( gs_font_cid0 * ) font		5072410	1					
ANR	5072420	CastTarget	gs_font_cid0 *		5072410	0					
ANR	5072421	Identifier	font		5072410	1					
ANR	5072422	IfStatement	if ( font -> FontType != ft_CID_encrypted )		5072410	4					
ANR	5072423	Condition	font -> FontType != ft_CID_encrypted	217:8:7231:7264	5072410	0	True				
ANR	5072424	EqualityExpression	font -> FontType != ft_CID_encrypted		5072410	0		!=			
ANR	5072425	PtrMemberAccess	font -> FontType		5072410	0					
ANR	5072426	Identifier	font		5072410	0					
ANR	5072427	Identifier	FontType		5072410	1					
ANR	5072428	Identifier	ft_CID_encrypted		5072410	1					
ANR	5072429	CompoundStatement		4:44:100:100	5072410	1					
ANR	5072430	ExpressionStatement	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"	218:8:7277:7382	5072410	0	True				
ANR	5072431	CallExpression	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"		5072410	0					
ANR	5072432	Callee	emprintf1		5072410	0					
ANR	5072433	Identifier	emprintf1		5072410	0					
ANR	5072434	ArgumentList	font -> memory		5072410	1					
ANR	5072435	Argument	font -> memory		5072410	0					
ANR	5072436	PtrMemberAccess	font -> memory		5072410	0					
ANR	5072437	Identifier	font		5072410	0					
ANR	5072438	Identifier	memory		5072410	1					
ANR	5072439	Argument	"""Unexpected font type: %d\\n"""		5072410	1					
ANR	5072440	PrimaryExpression	"""Unexpected font type: %d\\n"""		5072410	0					
ANR	5072441	Argument	font -> FontType		5072410	2					
ANR	5072442	PtrMemberAccess	font -> FontType		5072410	0					
ANR	5072443	Identifier	font		5072410	0					
ANR	5072444	Identifier	FontType		5072410	1					
ANR	5072445	ReturnStatement	return 0 ;	221:8:7392:7400	5072410	1	True				
ANR	5072446	PrimaryExpression	0		5072410	0					
ANR	5072447	ReturnStatement	return ( const gs_font * ) ( pfont -> cidata . FDArray [ fidx ] ) ;	223:4:7412:7465	5072410	5	True				
ANR	5072448	CastExpression	( const gs_font * ) ( pfont -> cidata . FDArray [ fidx ] )		5072410	0					
ANR	5072449	CastTarget	const gs_font *		5072410	0					
ANR	5072450	ArrayIndexing	pfont -> cidata . FDArray [ fidx ]		5072410	1					
ANR	5072451	MemberAccess	pfont -> cidata . FDArray		5072410	0					
ANR	5072452	PtrMemberAccess	pfont -> cidata		5072410	0					
ANR	5072453	Identifier	pfont		5072410	0					
ANR	5072454	Identifier	cidata		5072410	1					
ANR	5072455	Identifier	FDArray		5072410	1					
ANR	5072456	Identifier	fidx		5072410	1					
ANR	5072457	ReturnType	const gs_font *		5072410	1					
ANR	5072458	Identifier	gs_cid0_indexed_font		5072410	2					
ANR	5072459	ParameterList	"const gs_font * font , int fidx"		5072410	3					
ANR	5072460	Parameter	const gs_font * font	213:21:7135:7153	5072410	0	True				
ANR	5072461	ParameterType	const gs_font *		5072410	0					
ANR	5072462	Identifier	font		5072410	1					
ANR	5072463	Parameter	int fidx	213:42:7156:7163	5072410	1	True				
ANR	5072464	ParameterType	int		5072410	0					
ANR	5072465	Identifier	fidx		5072410	1					
ANR	5072466	CFGEntryNode	ENTRY		5072410		True				
ANR	5072467	CFGExitNode	EXIT		5072410		True				
ANR	5072468	Symbol	* pfont -> cidata		5072410						
ANR	5072469	Symbol	pfont -> cidata . FDArray		5072410						
ANR	5072470	Symbol	pfont		5072410						
ANR	5072471	Symbol	ft_CID_encrypted		5072410						
ANR	5072472	Symbol	* * pfont		5072410						
ANR	5072473	Symbol	* pfont -> cidata . FDArray		5072410						
ANR	5072474	Symbol	pfont -> cidata		5072410						
ANR	5072475	Symbol	* pfont		5072410						
ANR	5072476	Symbol	font -> memory		5072410						
ANR	5072477	Symbol	* fidx		5072410						
ANR	5072478	Symbol	font -> FontType		5072410						
ANR	5072479	Symbol	fidx		5072410						
ANR	5072480	Symbol	* font		5072410						
ANR	5072481	Symbol	font		5072410						
ANR	5072482	Function	gs_cid0_has_type2	227:0:7523:8004							
ANR	5072483	FunctionDef	gs_cid0_has_type2 (const gs_font * font)		5072482	0					
ANR	5072484	CompoundStatement		229:0:7567:8004	5072482	0					
ANR	5072485	Statement	gs_font_cid0	230:4:7573:7584	5072482	0	True				
ANR	5072486	Statement	*	230:17:7586:7586	5072482	1	True				
ANR	5072487	Statement	const	230:18:7587:7591	5072482	2	True				
ANR	5072488	ExpressionStatement	pfont = ( gs_font_cid0 * ) font	230:24:7593:7621	5072482	3	True				
ANR	5072489	AssignmentExpression	pfont = ( gs_font_cid0 * ) font		5072482	0		=			
ANR	5072490	Identifier	pfont		5072482	0					
ANR	5072491	CastExpression	( gs_font_cid0 * ) font		5072482	1					
ANR	5072492	CastTarget	gs_font_cid0 *		5072482	0					
ANR	5072493	Identifier	font		5072482	1					
ANR	5072494	IdentifierDeclStatement	int i ;	231:4:7627:7632	5072482	4	True				
ANR	5072495	IdentifierDecl	i		5072482	0					
ANR	5072496	IdentifierDeclType	int		5072482	0					
ANR	5072497	Identifier	i		5072482	1					
ANR	5072498	IfStatement	if ( font -> FontType != ft_CID_encrypted )		5072482	5					
ANR	5072499	Condition	font -> FontType != ft_CID_encrypted	233:8:7643:7676	5072482	0	True				
ANR	5072500	EqualityExpression	font -> FontType != ft_CID_encrypted		5072482	0		!=			
ANR	5072501	PtrMemberAccess	font -> FontType		5072482	0					
ANR	5072502	Identifier	font		5072482	0					
ANR	5072503	Identifier	FontType		5072482	1					
ANR	5072504	Identifier	ft_CID_encrypted		5072482	1					
ANR	5072505	CompoundStatement		5:44:111:111	5072482	1					
ANR	5072506	ExpressionStatement	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"	234:8:7689:7794	5072482	0	True				
ANR	5072507	CallExpression	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"		5072482	0					
ANR	5072508	Callee	emprintf1		5072482	0					
ANR	5072509	Identifier	emprintf1		5072482	0					
ANR	5072510	ArgumentList	font -> memory		5072482	1					
ANR	5072511	Argument	font -> memory		5072482	0					
ANR	5072512	PtrMemberAccess	font -> memory		5072482	0					
ANR	5072513	Identifier	font		5072482	0					
ANR	5072514	Identifier	memory		5072482	1					
ANR	5072515	Argument	"""Unexpected font type: %d\\n"""		5072482	1					
ANR	5072516	PrimaryExpression	"""Unexpected font type: %d\\n"""		5072482	0					
ANR	5072517	Argument	font -> FontType		5072482	2					
ANR	5072518	PtrMemberAccess	font -> FontType		5072482	0					
ANR	5072519	Identifier	font		5072482	0					
ANR	5072520	Identifier	FontType		5072482	1					
ANR	5072521	ReturnStatement	return false ;	237:8:7804:7816	5072482	1	True				
ANR	5072522	Identifier	false		5072482	0					
ANR	5072523	ForStatement	for ( i = 0 ; i < pfont -> cidata . FDArray_size ; i ++ )		5072482	6					
ANR	5072524	ForInit	i = 0 ;	239:9:7833:7838	5072482	0	True				
ANR	5072525	AssignmentExpression	i = 0		5072482	0		=			
ANR	5072526	Identifier	i		5072482	0					
ANR	5072527	PrimaryExpression	0		5072482	1					
ANR	5072528	Condition	i < pfont -> cidata . FDArray_size	239:16:7840:7869	5072482	1	True				
ANR	5072529	RelationalExpression	i < pfont -> cidata . FDArray_size		5072482	0		<			
ANR	5072530	Identifier	i		5072482	0					
ANR	5072531	MemberAccess	pfont -> cidata . FDArray_size		5072482	1					
ANR	5072532	PtrMemberAccess	pfont -> cidata		5072482	0					
ANR	5072533	Identifier	pfont		5072482	0					
ANR	5072534	Identifier	cidata		5072482	1					
ANR	5072535	Identifier	FDArray_size		5072482	1					
ANR	5072536	PostIncDecOperationExpression	i ++	239:48:7872:7874	5072482	2	True				
ANR	5072537	Identifier	i		5072482	0					
ANR	5072538	IncDec	++		5072482	1					
ANR	5072539	IfStatement	if ( ( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType == ft_encrypted2 )		5072482	3					
ANR	5072540	Condition	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType == ft_encrypted2	240:12:7889:7958	5072482	0	True				
ANR	5072541	EqualityExpression	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType == ft_encrypted2		5072482	0		==			
ANR	5072542	PtrMemberAccess	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType		5072482	0					
ANR	5072543	CastExpression	( const gs_font * ) pfont -> cidata . FDArray [ i ]		5072482	0					
ANR	5072544	CastTarget	const gs_font *		5072482	0					
ANR	5072545	ArrayIndexing	pfont -> cidata . FDArray [ i ]		5072482	1					
ANR	5072546	MemberAccess	pfont -> cidata . FDArray		5072482	0					
ANR	5072547	PtrMemberAccess	pfont -> cidata		5072482	0					
ANR	5072548	Identifier	pfont		5072482	0					
ANR	5072549	Identifier	cidata		5072482	1					
ANR	5072550	Identifier	FDArray		5072482	1					
ANR	5072551	Identifier	i		5072482	1					
ANR	5072552	Identifier	FontType		5072482	1					
ANR	5072553	Identifier	ft_encrypted2		5072482	1					
ANR	5072554	ReturnStatement	return true ;	241:12:7973:7984	5072482	1	True				
ANR	5072555	Identifier	true		5072482	0					
ANR	5072556	ReturnStatement	return false ;	242:4:7990:8002	5072482	7	True				
ANR	5072557	Identifier	false		5072482	0					
ANR	5072558	ReturnType	bool		5072482	1					
ANR	5072559	Identifier	gs_cid0_has_type2		5072482	2					
ANR	5072560	ParameterList	const gs_font * font		5072482	3					
ANR	5072561	Parameter	const gs_font * font	228:18:7546:7564	5072482	0	True				
ANR	5072562	ParameterType	const gs_font *		5072482	0					
ANR	5072563	Identifier	font		5072482	1					
ANR	5072564	CFGEntryNode	ENTRY		5072482		True				
ANR	5072565	CFGExitNode	EXIT		5072482		True				
ANR	5072566	Symbol	* pfont -> cidata		5072482						
ANR	5072567	Symbol	* * i		5072482						
ANR	5072568	Symbol	pfont -> cidata . FDArray_size		5072482						
ANR	5072569	Symbol	pfont -> cidata . FDArray		5072482						
ANR	5072570	Symbol	pfont		5072482						
ANR	5072571	Symbol	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType		5072482						
ANR	5072572	Symbol	false		5072482						
ANR	5072573	Symbol	i		5072482						
ANR	5072574	Symbol	ft_CID_encrypted		5072482						
ANR	5072575	Symbol	* * pfont		5072482						
ANR	5072576	Symbol	* * pfont -> cidata		5072482						
ANR	5072577	Symbol	* pfont -> cidata . FDArray		5072482						
ANR	5072578	Symbol	* * pfont -> cidata . FDArray		5072482						
ANR	5072579	Symbol	pfont -> cidata		5072482						
ANR	5072580	Symbol	* pfont		5072482						
ANR	5072581	Symbol	font -> memory		5072482						
ANR	5072582	Symbol	* i		5072482						
ANR	5072583	Symbol	* * * pfont		5072482						
ANR	5072584	Symbol	font -> FontType		5072482						
ANR	5072585	Symbol	ft_encrypted2		5072482						
ANR	5072586	Symbol	true		5072482						
ANR	5072587	Symbol	* font		5072482						
ANR	5072588	Symbol	font		5072482						
