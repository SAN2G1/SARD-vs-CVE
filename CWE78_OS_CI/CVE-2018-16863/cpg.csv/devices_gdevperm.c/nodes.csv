command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2462410	File	data/converged/CVE-2018-16863_ghostpdl/devices_gdevperm.c								
ANR	2462411	ClassDef	gx_device_perm_s	50:0:2019:2223							
ANR	2462412	DeclStmt									
ANR	2462413	Decl							const char	const char * *	std_colorant_names
ANR	2462414	DeclStmt									
ANR	2462415	Decl							int	int	num_std_colorant_names
ANR	2462416	DeclStmt									
ANR	2462417	Decl							int	int	mode
ANR	2462418	DeclStmt									
ANR	2462419	Decl							int	int	permute
ANR	2462420	DeclStmt									
ANR	2462421	Decl							struct gx_device_perm_s	struct gx_device_perm_s	gx_device_perm_t
ANR	2462422	DeclStmt									
ANR	2462423	Decl							const gx_device_procs	const gx_device_procs	perm_procs
ANR	2462424	DeclStmt									
ANR	2462425	Decl							const gx_device_perm_t	const gx_device_perm_t	gs_perm_device
ANR	2462426	Function	perm_print_page	131:0:4620:6785							
ANR	2462427	FunctionDef	"perm_print_page (gx_device_printer * pdev , FILE * pstream)"		2462426	0					
ANR	2462428	CompoundStatement		133:0:4687:6785	2462426	0					
ANR	2462429	IdentifierDeclStatement	int y ;	134:4:4693:4698	2462426	0	True				
ANR	2462430	IdentifierDecl	y		2462426	0					
ANR	2462431	IdentifierDeclType	int		2462426	0					
ANR	2462432	Identifier	y		2462426	1					
ANR	2462433	Statement	gx_device_perm_t	135:4:4704:4719	2462426	1	True				
ANR	2462434	Statement	*	135:21:4721:4721	2462426	2	True				
ANR	2462435	Statement	const	135:23:4723:4727	2462426	3	True				
ANR	2462436	ExpressionStatement	dev = ( gx_device_perm_t * ) pdev	135:29:4729:4759	2462426	4	True				
ANR	2462437	AssignmentExpression	dev = ( gx_device_perm_t * ) pdev		2462426	0		=			
ANR	2462438	Identifier	dev		2462426	0					
ANR	2462439	CastExpression	( gx_device_perm_t * ) pdev		2462426	1					
ANR	2462440	CastTarget	gx_device_perm_t *		2462426	0					
ANR	2462441	Identifier	pdev		2462426	1					
ANR	2462442	IdentifierDeclStatement	int ncomp = dev -> num_std_colorant_names ;	136:4:4765:4804	2462426	5	True				
ANR	2462443	IdentifierDecl	ncomp = dev -> num_std_colorant_names		2462426	0					
ANR	2462444	IdentifierDeclType	int		2462426	0					
ANR	2462445	Identifier	ncomp		2462426	1					
ANR	2462446	AssignmentExpression	ncomp = dev -> num_std_colorant_names		2462426	2		=			
ANR	2462447	Identifier	ncomp		2462426	0					
ANR	2462448	PtrMemberAccess	dev -> num_std_colorant_names		2462426	1					
ANR	2462449	Identifier	dev		2462426	0					
ANR	2462450	Identifier	num_std_colorant_names		2462426	1					
ANR	2462451	IdentifierDeclStatement	int raw_raster = pdev -> width * ncomp ;	137:4:4810:4846	2462426	6	True				
ANR	2462452	IdentifierDecl	raw_raster = pdev -> width * ncomp		2462426	0					
ANR	2462453	IdentifierDeclType	int		2462426	0					
ANR	2462454	Identifier	raw_raster		2462426	1					
ANR	2462455	AssignmentExpression	raw_raster = pdev -> width * ncomp		2462426	2		=			
ANR	2462456	Identifier	raw_raster		2462426	0					
ANR	2462457	MultiplicativeExpression	pdev -> width * ncomp		2462426	1		*			
ANR	2462458	PtrMemberAccess	pdev -> width		2462426	0					
ANR	2462459	Identifier	pdev		2462426	0					
ANR	2462460	Identifier	width		2462426	1					
ANR	2462461	Identifier	ncomp		2462426	1					
ANR	2462462	IdentifierDeclStatement	byte * raw_line ;	138:4:4852:4866	2462426	7	True				
ANR	2462463	IdentifierDecl	* raw_line		2462426	0					
ANR	2462464	IdentifierDeclType	byte *		2462426	0					
ANR	2462465	Identifier	raw_line		2462426	1					
ANR	2462466	IdentifierDeclStatement	byte * cooked_line ;	139:4:4872:4889	2462426	8	True				
ANR	2462467	IdentifierDecl	* cooked_line		2462426	0					
ANR	2462468	IdentifierDeclType	byte *		2462426	0					
ANR	2462469	Identifier	cooked_line		2462426	1					
ANR	2462470	IdentifierDeclStatement	byte * row ;	140:4:4895:4904	2462426	9	True				
ANR	2462471	IdentifierDecl	* row		2462426	0					
ANR	2462472	IdentifierDeclType	byte *		2462426	0					
ANR	2462473	Identifier	row		2462426	1					
ANR	2462474	IdentifierDeclStatement	int code = 0 ;	141:4:4910:4922	2462426	10	True				
ANR	2462475	IdentifierDecl	code = 0		2462426	0					
ANR	2462476	IdentifierDeclType	int		2462426	0					
ANR	2462477	Identifier	code		2462426	1					
ANR	2462478	AssignmentExpression	code = 0		2462426	2		=			
ANR	2462479	Identifier	code		2462426	0					
ANR	2462480	PrimaryExpression	0		2462426	1					
ANR	2462481	IdentifierDeclStatement	int mode = dev -> mode ;	142:4:4928:4948	2462426	11	True				
ANR	2462482	IdentifierDecl	mode = dev -> mode		2462426	0					
ANR	2462483	IdentifierDeclType	int		2462426	0					
ANR	2462484	Identifier	mode		2462426	1					
ANR	2462485	AssignmentExpression	mode = dev -> mode		2462426	2		=			
ANR	2462486	Identifier	mode		2462426	0					
ANR	2462487	PtrMemberAccess	dev -> mode		2462426	1					
ANR	2462488	Identifier	dev		2462426	0					
ANR	2462489	Identifier	mode		2462426	1					
ANR	2462490	IdentifierDeclStatement	int permute = dev -> permute ;	143:4:4954:4980	2462426	12	True				
ANR	2462491	IdentifierDecl	permute = dev -> permute		2462426	0					
ANR	2462492	IdentifierDeclType	int		2462426	0					
ANR	2462493	Identifier	permute		2462426	1					
ANR	2462494	AssignmentExpression	permute = dev -> permute		2462426	2		=			
ANR	2462495	Identifier	permute		2462426	0					
ANR	2462496	PtrMemberAccess	dev -> permute		2462426	1					
ANR	2462497	Identifier	dev		2462426	0					
ANR	2462498	Identifier	permute		2462426	1					
ANR	2462499	ExpressionStatement	"fprintf ( pstream , ""P6\\n%d %d\\n255\\n"" , dev -> width , dev -> height )"	145:4:4987:5048	2462426	13	True				
ANR	2462500	CallExpression	"fprintf ( pstream , ""P6\\n%d %d\\n255\\n"" , dev -> width , dev -> height )"		2462426	0					
ANR	2462501	Callee	fprintf		2462426	0					
ANR	2462502	Identifier	fprintf		2462426	0					
ANR	2462503	ArgumentList	pstream		2462426	1					
ANR	2462504	Argument	pstream		2462426	0					
ANR	2462505	Identifier	pstream		2462426	0					
ANR	2462506	Argument	"""P6\\n%d %d\\n255\\n"""		2462426	1					
ANR	2462507	PrimaryExpression	"""P6\\n%d %d\\n255\\n"""		2462426	0					
ANR	2462508	Argument	dev -> width		2462426	2					
ANR	2462509	PtrMemberAccess	dev -> width		2462426	0					
ANR	2462510	Identifier	dev		2462426	0					
ANR	2462511	Identifier	width		2462426	1					
ANR	2462512	Argument	dev -> height		2462426	3					
ANR	2462513	PtrMemberAccess	dev -> height		2462426	0					
ANR	2462514	Identifier	dev		2462426	0					
ANR	2462515	Identifier	height		2462426	1					
ANR	2462516	ExpressionStatement	"raw_line = gs_alloc_bytes ( pdev -> memory , raw_raster , ""perm_print_page"" )"	146:4:5054:5124	2462426	14	True				
ANR	2462517	AssignmentExpression	"raw_line = gs_alloc_bytes ( pdev -> memory , raw_raster , ""perm_print_page"" )"		2462426	0		=			
ANR	2462518	Identifier	raw_line		2462426	0					
ANR	2462519	CallExpression	"gs_alloc_bytes ( pdev -> memory , raw_raster , ""perm_print_page"" )"		2462426	1					
ANR	2462520	Callee	gs_alloc_bytes		2462426	0					
ANR	2462521	Identifier	gs_alloc_bytes		2462426	0					
ANR	2462522	ArgumentList	pdev -> memory		2462426	1					
ANR	2462523	Argument	pdev -> memory		2462426	0					
ANR	2462524	PtrMemberAccess	pdev -> memory		2462426	0					
ANR	2462525	Identifier	pdev		2462426	0					
ANR	2462526	Identifier	memory		2462426	1					
ANR	2462527	Argument	raw_raster		2462426	1					
ANR	2462528	Identifier	raw_raster		2462426	0					
ANR	2462529	Argument	"""perm_print_page"""		2462426	2					
ANR	2462530	PrimaryExpression	"""perm_print_page"""		2462426	0					
ANR	2462531	ExpressionStatement	"cooked_line = gs_alloc_bytes ( pdev -> memory , dev -> width * 3 , ""perm_print_page"" )"	147:4:5130:5207	2462426	15	True				
ANR	2462532	AssignmentExpression	"cooked_line = gs_alloc_bytes ( pdev -> memory , dev -> width * 3 , ""perm_print_page"" )"		2462426	0		=			
ANR	2462533	Identifier	cooked_line		2462426	0					
ANR	2462534	CallExpression	"gs_alloc_bytes ( pdev -> memory , dev -> width * 3 , ""perm_print_page"" )"		2462426	1					
ANR	2462535	Callee	gs_alloc_bytes		2462426	0					
ANR	2462536	Identifier	gs_alloc_bytes		2462426	0					
ANR	2462537	ArgumentList	pdev -> memory		2462426	1					
ANR	2462538	Argument	pdev -> memory		2462426	0					
ANR	2462539	PtrMemberAccess	pdev -> memory		2462426	0					
ANR	2462540	Identifier	pdev		2462426	0					
ANR	2462541	Identifier	memory		2462426	1					
ANR	2462542	Argument	dev -> width * 3		2462426	1					
ANR	2462543	MultiplicativeExpression	dev -> width * 3		2462426	0		*			
ANR	2462544	PtrMemberAccess	dev -> width		2462426	0					
ANR	2462545	Identifier	dev		2462426	0					
ANR	2462546	Identifier	width		2462426	1					
ANR	2462547	PrimaryExpression	3		2462426	1					
ANR	2462548	Argument	"""perm_print_page"""		2462426	2					
ANR	2462549	PrimaryExpression	"""perm_print_page"""		2462426	0					
ANR	2462550	ForStatement	for ( y = 0 ; y < dev -> height ; y ++ )		2462426	16					
ANR	2462551	ForInit	y = 0 ;	148:9:5218:5223	2462426	0	True				
ANR	2462552	AssignmentExpression	y = 0		2462426	0		=			
ANR	2462553	Identifier	y		2462426	0					
ANR	2462554	PrimaryExpression	0		2462426	1					
ANR	2462555	Condition	y < dev -> height	148:16:5225:5239	2462426	1	True				
ANR	2462556	RelationalExpression	y < dev -> height		2462426	0		<			
ANR	2462557	Identifier	y		2462426	0					
ANR	2462558	PtrMemberAccess	dev -> height		2462426	1					
ANR	2462559	Identifier	dev		2462426	0					
ANR	2462560	Identifier	height		2462426	1					
ANR	2462561	PostIncDecOperationExpression	y ++	148:33:5242:5244	2462426	2	True				
ANR	2462562	Identifier	y		2462426	0					
ANR	2462563	IncDec	++		2462426	1					
ANR	2462564	CompoundStatement		17:8:569:574	2462426	3					
ANR	2462565	IdentifierDeclStatement	int x ;	149:8:5257:5262	2462426	0	True				
ANR	2462566	IdentifierDecl	x		2462426	0					
ANR	2462567	IdentifierDeclType	int		2462426	0					
ANR	2462568	Identifier	x		2462426	1					
ANR	2462569	ExpressionStatement	"code = gdev_prn_get_bits ( pdev , y , raw_line , & row )"	150:8:5272:5321	2462426	1	True				
ANR	2462570	AssignmentExpression	"code = gdev_prn_get_bits ( pdev , y , raw_line , & row )"		2462426	0		=			
ANR	2462571	Identifier	code		2462426	0					
ANR	2462572	CallExpression	"gdev_prn_get_bits ( pdev , y , raw_line , & row )"		2462426	1					
ANR	2462573	Callee	gdev_prn_get_bits		2462426	0					
ANR	2462574	Identifier	gdev_prn_get_bits		2462426	0					
ANR	2462575	ArgumentList	pdev		2462426	1					
ANR	2462576	Argument	pdev		2462426	0					
ANR	2462577	Identifier	pdev		2462426	0					
ANR	2462578	Argument	y		2462426	1					
ANR	2462579	Identifier	y		2462426	0					
ANR	2462580	Argument	raw_line		2462426	2					
ANR	2462581	Identifier	raw_line		2462426	0					
ANR	2462582	Argument	& row		2462426	3					
ANR	2462583	UnaryOperationExpression	& row		2462426	0					
ANR	2462584	UnaryOperator	&		2462426	0					
ANR	2462585	Identifier	row		2462426	1					
ANR	2462586	ForStatement	for ( x = 0 ; x < dev -> width ; x ++ )		2462426	2					
ANR	2462587	ForInit	x = 0 ;	151:13:5336:5341	2462426	0	True				
ANR	2462588	AssignmentExpression	x = 0		2462426	0		=			
ANR	2462589	Identifier	x		2462426	0					
ANR	2462590	PrimaryExpression	0		2462426	1					
ANR	2462591	Condition	x < dev -> width	151:20:5343:5356	2462426	1	True				
ANR	2462592	RelationalExpression	x < dev -> width		2462426	0		<			
ANR	2462593	Identifier	x		2462426	0					
ANR	2462594	PtrMemberAccess	dev -> width		2462426	1					
ANR	2462595	Identifier	dev		2462426	0					
ANR	2462596	Identifier	width		2462426	1					
ANR	2462597	PostIncDecOperationExpression	x ++	151:36:5359:5361	2462426	2	True				
ANR	2462598	Identifier	x		2462426	0					
ANR	2462599	IncDec	++		2462426	1					
ANR	2462600	CompoundStatement		21:12:718:729	2462426	3					
ANR	2462601	IdentifierDeclStatement	"int c , m , y , k ;"	152:12:5378:5392	2462426	0	True				
ANR	2462602	IdentifierDecl	c		2462426	0					
ANR	2462603	IdentifierDeclType	int		2462426	0					
ANR	2462604	Identifier	c		2462426	1					
ANR	2462605	IdentifierDecl	m		2462426	1					
ANR	2462606	IdentifierDeclType	int		2462426	0					
ANR	2462607	Identifier	m		2462426	1					
ANR	2462608	IdentifierDecl	y		2462426	2					
ANR	2462609	IdentifierDeclType	int		2462426	0					
ANR	2462610	Identifier	y		2462426	1					
ANR	2462611	IdentifierDecl	k		2462426	3					
ANR	2462612	IdentifierDeclType	int		2462426	0					
ANR	2462613	Identifier	k		2462426	1					
ANR	2462614	IdentifierDeclStatement	"int r , g , b ;"	153:12:5406:5417	2462426	1	True				
ANR	2462615	IdentifierDecl	r		2462426	0					
ANR	2462616	IdentifierDeclType	int		2462426	0					
ANR	2462617	Identifier	r		2462426	1					
ANR	2462618	IdentifierDecl	g		2462426	1					
ANR	2462619	IdentifierDeclType	int		2462426	0					
ANR	2462620	Identifier	g		2462426	1					
ANR	2462621	IdentifierDecl	b		2462426	2					
ANR	2462622	IdentifierDeclType	int		2462426	0					
ANR	2462623	Identifier	b		2462426	1					
ANR	2462624	IfStatement	if ( mode == 0 )		2462426	2					
ANR	2462625	Condition	mode == 0	155:16:5436:5444	2462426	0	True				
ANR	2462626	EqualityExpression	mode == 0		2462426	0		==			
ANR	2462627	Identifier	mode		2462426	0					
ANR	2462628	PrimaryExpression	0		2462426	1					
ANR	2462629	CompoundStatement		23:27:759:759	2462426	1					
ANR	2462630	IfStatement	if ( permute )		2462426	0					
ANR	2462631	Condition	permute	156:20:5469:5475	2462426	0	True				
ANR	2462632	Identifier	permute		2462426	0					
ANR	2462633	CompoundStatement		24:29:790:790	2462426	1					
ANR	2462634	ExpressionStatement	c = row [ x * ncomp + 1 ]	157:20:5500:5522	2462426	0	True				
ANR	2462635	AssignmentExpression	c = row [ x * ncomp + 1 ]		2462426	0		=			
ANR	2462636	Identifier	c		2462426	0					
ANR	2462637	ArrayIndexing	row [ x * ncomp + 1 ]		2462426	1					
ANR	2462638	Identifier	row		2462426	0					
ANR	2462639	AdditiveExpression	x * ncomp + 1		2462426	1		+			
ANR	2462640	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462641	Identifier	x		2462426	0					
ANR	2462642	Identifier	ncomp		2462426	1					
ANR	2462643	PrimaryExpression	1		2462426	1					
ANR	2462644	ExpressionStatement	m = row [ x * ncomp + 3 ]	158:20:5544:5566	2462426	1	True				
ANR	2462645	AssignmentExpression	m = row [ x * ncomp + 3 ]		2462426	0		=			
ANR	2462646	Identifier	m		2462426	0					
ANR	2462647	ArrayIndexing	row [ x * ncomp + 3 ]		2462426	1					
ANR	2462648	Identifier	row		2462426	0					
ANR	2462649	AdditiveExpression	x * ncomp + 3		2462426	1		+			
ANR	2462650	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462651	Identifier	x		2462426	0					
ANR	2462652	Identifier	ncomp		2462426	1					
ANR	2462653	PrimaryExpression	3		2462426	1					
ANR	2462654	ExpressionStatement	y = row [ x * ncomp + 0 ]	159:20:5588:5610	2462426	2	True				
ANR	2462655	AssignmentExpression	y = row [ x * ncomp + 0 ]		2462426	0		=			
ANR	2462656	Identifier	y		2462426	0					
ANR	2462657	ArrayIndexing	row [ x * ncomp + 0 ]		2462426	1					
ANR	2462658	Identifier	row		2462426	0					
ANR	2462659	AdditiveExpression	x * ncomp + 0		2462426	1		+			
ANR	2462660	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462661	Identifier	x		2462426	0					
ANR	2462662	Identifier	ncomp		2462426	1					
ANR	2462663	PrimaryExpression	0		2462426	1					
ANR	2462664	ExpressionStatement	k = row [ x * ncomp + 5 ]	160:20:5632:5654	2462426	3	True				
ANR	2462665	AssignmentExpression	k = row [ x * ncomp + 5 ]		2462426	0		=			
ANR	2462666	Identifier	k		2462426	0					
ANR	2462667	ArrayIndexing	row [ x * ncomp + 5 ]		2462426	1					
ANR	2462668	Identifier	row		2462426	0					
ANR	2462669	AdditiveExpression	x * ncomp + 5		2462426	1		+			
ANR	2462670	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462671	Identifier	x		2462426	0					
ANR	2462672	Identifier	ncomp		2462426	1					
ANR	2462673	PrimaryExpression	5		2462426	1					
ANR	2462674	ElseStatement	else		2462426	0					
ANR	2462675	CompoundStatement		29:23:991:991	2462426	0					
ANR	2462676	ExpressionStatement	c = row [ x * ncomp ]	162:20:5701:5719	2462426	0	True				
ANR	2462677	AssignmentExpression	c = row [ x * ncomp ]		2462426	0		=			
ANR	2462678	Identifier	c		2462426	0					
ANR	2462679	ArrayIndexing	row [ x * ncomp ]		2462426	1					
ANR	2462680	Identifier	row		2462426	0					
ANR	2462681	MultiplicativeExpression	x * ncomp		2462426	1		*			
ANR	2462682	Identifier	x		2462426	0					
ANR	2462683	Identifier	ncomp		2462426	1					
ANR	2462684	ExpressionStatement	m = row [ x * ncomp + 1 ]	163:20:5741:5763	2462426	1	True				
ANR	2462685	AssignmentExpression	m = row [ x * ncomp + 1 ]		2462426	0		=			
ANR	2462686	Identifier	m		2462426	0					
ANR	2462687	ArrayIndexing	row [ x * ncomp + 1 ]		2462426	1					
ANR	2462688	Identifier	row		2462426	0					
ANR	2462689	AdditiveExpression	x * ncomp + 1		2462426	1		+			
ANR	2462690	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462691	Identifier	x		2462426	0					
ANR	2462692	Identifier	ncomp		2462426	1					
ANR	2462693	PrimaryExpression	1		2462426	1					
ANR	2462694	ExpressionStatement	y = row [ x * ncomp + 2 ]	164:20:5785:5807	2462426	2	True				
ANR	2462695	AssignmentExpression	y = row [ x * ncomp + 2 ]		2462426	0		=			
ANR	2462696	Identifier	y		2462426	0					
ANR	2462697	ArrayIndexing	row [ x * ncomp + 2 ]		2462426	1					
ANR	2462698	Identifier	row		2462426	0					
ANR	2462699	AdditiveExpression	x * ncomp + 2		2462426	1		+			
ANR	2462700	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462701	Identifier	x		2462426	0					
ANR	2462702	Identifier	ncomp		2462426	1					
ANR	2462703	PrimaryExpression	2		2462426	1					
ANR	2462704	ExpressionStatement	k = row [ x * ncomp + 3 ]	165:20:5829:5851	2462426	3	True				
ANR	2462705	AssignmentExpression	k = row [ x * ncomp + 3 ]		2462426	0		=			
ANR	2462706	Identifier	k		2462426	0					
ANR	2462707	ArrayIndexing	row [ x * ncomp + 3 ]		2462426	1					
ANR	2462708	Identifier	row		2462426	0					
ANR	2462709	AdditiveExpression	x * ncomp + 3		2462426	1		+			
ANR	2462710	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462711	Identifier	x		2462426	0					
ANR	2462712	Identifier	ncomp		2462426	1					
ANR	2462713	PrimaryExpression	3		2462426	1					
ANR	2462714	ElseStatement	else		2462426	0					
ANR	2462715	CompoundStatement		35:40:1223:1223	2462426	0					
ANR	2462716	IfStatement	if ( permute )		2462426	0					
ANR	2462717	Condition	permute	168:20:5933:5939	2462426	0	True				
ANR	2462718	Identifier	permute		2462426	0					
ANR	2462719	CompoundStatement		36:29:1254:1254	2462426	1					
ANR	2462720	ExpressionStatement	c = row [ x * ncomp + 1 ]	169:20:5964:5986	2462426	0	True				
ANR	2462721	AssignmentExpression	c = row [ x * ncomp + 1 ]		2462426	0		=			
ANR	2462722	Identifier	c		2462426	0					
ANR	2462723	ArrayIndexing	row [ x * ncomp + 1 ]		2462426	1					
ANR	2462724	Identifier	row		2462426	0					
ANR	2462725	AdditiveExpression	x * ncomp + 1		2462426	1		+			
ANR	2462726	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462727	Identifier	x		2462426	0					
ANR	2462728	Identifier	ncomp		2462426	1					
ANR	2462729	PrimaryExpression	1		2462426	1					
ANR	2462730	ExpressionStatement	m = row [ x * ncomp + 3 ]	170:20:6008:6030	2462426	1	True				
ANR	2462731	AssignmentExpression	m = row [ x * ncomp + 3 ]		2462426	0		=			
ANR	2462732	Identifier	m		2462426	0					
ANR	2462733	ArrayIndexing	row [ x * ncomp + 3 ]		2462426	1					
ANR	2462734	Identifier	row		2462426	0					
ANR	2462735	AdditiveExpression	x * ncomp + 3		2462426	1		+			
ANR	2462736	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462737	Identifier	x		2462426	0					
ANR	2462738	Identifier	ncomp		2462426	1					
ANR	2462739	PrimaryExpression	3		2462426	1					
ANR	2462740	ExpressionStatement	y = row [ x * ncomp + 0 ]	171:20:6052:6074	2462426	2	True				
ANR	2462741	AssignmentExpression	y = row [ x * ncomp + 0 ]		2462426	0		=			
ANR	2462742	Identifier	y		2462426	0					
ANR	2462743	ArrayIndexing	row [ x * ncomp + 0 ]		2462426	1					
ANR	2462744	Identifier	row		2462426	0					
ANR	2462745	AdditiveExpression	x * ncomp + 0		2462426	1		+			
ANR	2462746	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462747	Identifier	x		2462426	0					
ANR	2462748	Identifier	ncomp		2462426	1					
ANR	2462749	PrimaryExpression	0		2462426	1					
ANR	2462750	ExpressionStatement	k = 0	172:20:6096:6101	2462426	3	True				
ANR	2462751	AssignmentExpression	k = 0		2462426	0		=			
ANR	2462752	Identifier	k		2462426	0					
ANR	2462753	PrimaryExpression	0		2462426	1					
ANR	2462754	ElseStatement	else		2462426	0					
ANR	2462755	CompoundStatement		41:23:1438:1438	2462426	0					
ANR	2462756	ExpressionStatement	c = row [ x * ncomp ]	174:20:6148:6166	2462426	0	True				
ANR	2462757	AssignmentExpression	c = row [ x * ncomp ]		2462426	0		=			
ANR	2462758	Identifier	c		2462426	0					
ANR	2462759	ArrayIndexing	row [ x * ncomp ]		2462426	1					
ANR	2462760	Identifier	row		2462426	0					
ANR	2462761	MultiplicativeExpression	x * ncomp		2462426	1		*			
ANR	2462762	Identifier	x		2462426	0					
ANR	2462763	Identifier	ncomp		2462426	1					
ANR	2462764	ExpressionStatement	m = row [ x * ncomp + 1 ]	175:20:6188:6210	2462426	1	True				
ANR	2462765	AssignmentExpression	m = row [ x * ncomp + 1 ]		2462426	0		=			
ANR	2462766	Identifier	m		2462426	0					
ANR	2462767	ArrayIndexing	row [ x * ncomp + 1 ]		2462426	1					
ANR	2462768	Identifier	row		2462426	0					
ANR	2462769	AdditiveExpression	x * ncomp + 1		2462426	1		+			
ANR	2462770	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462771	Identifier	x		2462426	0					
ANR	2462772	Identifier	ncomp		2462426	1					
ANR	2462773	PrimaryExpression	1		2462426	1					
ANR	2462774	ExpressionStatement	y = row [ x * ncomp + 2 ]	176:20:6232:6254	2462426	2	True				
ANR	2462775	AssignmentExpression	y = row [ x * ncomp + 2 ]		2462426	0		=			
ANR	2462776	Identifier	y		2462426	0					
ANR	2462777	ArrayIndexing	row [ x * ncomp + 2 ]		2462426	1					
ANR	2462778	Identifier	row		2462426	0					
ANR	2462779	AdditiveExpression	x * ncomp + 2		2462426	1		+			
ANR	2462780	MultiplicativeExpression	x * ncomp		2462426	0		*			
ANR	2462781	Identifier	x		2462426	0					
ANR	2462782	Identifier	ncomp		2462426	1					
ANR	2462783	PrimaryExpression	2		2462426	1					
ANR	2462784	ExpressionStatement	k = 0	177:20:6276:6281	2462426	3	True				
ANR	2462785	AssignmentExpression	k = 0		2462426	0		=			
ANR	2462786	Identifier	k		2462426	0					
ANR	2462787	PrimaryExpression	0		2462426	1					
ANR	2462788	ExpressionStatement	r = ( 255 - c ) * ( 255 - k ) / 255	180:12:6327:6358	2462426	3	True				
ANR	2462789	AssignmentExpression	r = ( 255 - c ) * ( 255 - k ) / 255		2462426	0		=			
ANR	2462790	Identifier	r		2462426	0					
ANR	2462791	MultiplicativeExpression	( 255 - c ) * ( 255 - k ) / 255		2462426	1		*			
ANR	2462792	AdditiveExpression	255 - c		2462426	0		-			
ANR	2462793	PrimaryExpression	255		2462426	0					
ANR	2462794	Identifier	c		2462426	1					
ANR	2462795	MultiplicativeExpression	( 255 - k ) / 255		2462426	1		/			
ANR	2462796	AdditiveExpression	255 - k		2462426	0		-			
ANR	2462797	PrimaryExpression	255		2462426	0					
ANR	2462798	Identifier	k		2462426	1					
ANR	2462799	PrimaryExpression	255		2462426	1					
ANR	2462800	ExpressionStatement	g = ( 255 - m ) * ( 255 - k ) / 255	181:12:6372:6403	2462426	4	True				
ANR	2462801	AssignmentExpression	g = ( 255 - m ) * ( 255 - k ) / 255		2462426	0		=			
ANR	2462802	Identifier	g		2462426	0					
ANR	2462803	MultiplicativeExpression	( 255 - m ) * ( 255 - k ) / 255		2462426	1		*			
ANR	2462804	AdditiveExpression	255 - m		2462426	0		-			
ANR	2462805	PrimaryExpression	255		2462426	0					
ANR	2462806	Identifier	m		2462426	1					
ANR	2462807	MultiplicativeExpression	( 255 - k ) / 255		2462426	1		/			
ANR	2462808	AdditiveExpression	255 - k		2462426	0		-			
ANR	2462809	PrimaryExpression	255		2462426	0					
ANR	2462810	Identifier	k		2462426	1					
ANR	2462811	PrimaryExpression	255		2462426	1					
ANR	2462812	ExpressionStatement	b = ( 255 - y ) * ( 255 - k ) / 255	182:12:6417:6448	2462426	5	True				
ANR	2462813	AssignmentExpression	b = ( 255 - y ) * ( 255 - k ) / 255		2462426	0		=			
ANR	2462814	Identifier	b		2462426	0					
ANR	2462815	MultiplicativeExpression	( 255 - y ) * ( 255 - k ) / 255		2462426	1		*			
ANR	2462816	AdditiveExpression	255 - y		2462426	0		-			
ANR	2462817	PrimaryExpression	255		2462426	0					
ANR	2462818	Identifier	y		2462426	1					
ANR	2462819	MultiplicativeExpression	( 255 - k ) / 255		2462426	1		/			
ANR	2462820	AdditiveExpression	255 - k		2462426	0		-			
ANR	2462821	PrimaryExpression	255		2462426	0					
ANR	2462822	Identifier	k		2462426	1					
ANR	2462823	PrimaryExpression	255		2462426	1					
ANR	2462824	ExpressionStatement	cooked_line [ x * 3 ] = r	183:12:6462:6484	2462426	6	True				
ANR	2462825	AssignmentExpression	cooked_line [ x * 3 ] = r		2462426	0		=			
ANR	2462826	ArrayIndexing	cooked_line [ x * 3 ]		2462426	0					
ANR	2462827	Identifier	cooked_line		2462426	0					
ANR	2462828	MultiplicativeExpression	x * 3		2462426	1		*			
ANR	2462829	Identifier	x		2462426	0					
ANR	2462830	PrimaryExpression	3		2462426	1					
ANR	2462831	Identifier	r		2462426	1					
ANR	2462832	ExpressionStatement	cooked_line [ x * 3 + 1 ] = g	184:12:6498:6524	2462426	7	True				
ANR	2462833	AssignmentExpression	cooked_line [ x * 3 + 1 ] = g		2462426	0		=			
ANR	2462834	ArrayIndexing	cooked_line [ x * 3 + 1 ]		2462426	0					
ANR	2462835	Identifier	cooked_line		2462426	0					
ANR	2462836	AdditiveExpression	x * 3 + 1		2462426	1		+			
ANR	2462837	MultiplicativeExpression	x * 3		2462426	0		*			
ANR	2462838	Identifier	x		2462426	0					
ANR	2462839	PrimaryExpression	3		2462426	1					
ANR	2462840	PrimaryExpression	1		2462426	1					
ANR	2462841	Identifier	g		2462426	1					
ANR	2462842	ExpressionStatement	cooked_line [ x * 3 + 2 ] = b	185:12:6538:6564	2462426	8	True				
ANR	2462843	AssignmentExpression	cooked_line [ x * 3 + 2 ] = b		2462426	0		=			
ANR	2462844	ArrayIndexing	cooked_line [ x * 3 + 2 ]		2462426	0					
ANR	2462845	Identifier	cooked_line		2462426	0					
ANR	2462846	AdditiveExpression	x * 3 + 2		2462426	1		+			
ANR	2462847	MultiplicativeExpression	x * 3		2462426	0		*			
ANR	2462848	Identifier	x		2462426	0					
ANR	2462849	PrimaryExpression	3		2462426	1					
ANR	2462850	PrimaryExpression	2		2462426	1					
ANR	2462851	Identifier	b		2462426	1					
ANR	2462852	ExpressionStatement	"fwrite ( cooked_line , 1 , dev -> width * 3 , pstream )"	187:8:6584:6631	2462426	3	True				
ANR	2462853	CallExpression	"fwrite ( cooked_line , 1 , dev -> width * 3 , pstream )"		2462426	0					
ANR	2462854	Callee	fwrite		2462426	0					
ANR	2462855	Identifier	fwrite		2462426	0					
ANR	2462856	ArgumentList	cooked_line		2462426	1					
ANR	2462857	Argument	cooked_line		2462426	0					
ANR	2462858	Identifier	cooked_line		2462426	0					
ANR	2462859	Argument	1		2462426	1					
ANR	2462860	PrimaryExpression	1		2462426	0					
ANR	2462861	Argument	dev -> width * 3		2462426	2					
ANR	2462862	MultiplicativeExpression	dev -> width * 3		2462426	0		*			
ANR	2462863	PtrMemberAccess	dev -> width		2462426	0					
ANR	2462864	Identifier	dev		2462426	0					
ANR	2462865	Identifier	width		2462426	1					
ANR	2462866	PrimaryExpression	3		2462426	1					
ANR	2462867	Argument	pstream		2462426	3					
ANR	2462868	Identifier	pstream		2462426	0					
ANR	2462869	ExpressionStatement	"gs_free_object ( pdev -> memory , cooked_line , ""perm_print_page"" )"	189:4:6643:6703	2462426	17	True				
ANR	2462870	CallExpression	"gs_free_object ( pdev -> memory , cooked_line , ""perm_print_page"" )"		2462426	0					
ANR	2462871	Callee	gs_free_object		2462426	0					
ANR	2462872	Identifier	gs_free_object		2462426	0					
ANR	2462873	ArgumentList	pdev -> memory		2462426	1					
ANR	2462874	Argument	pdev -> memory		2462426	0					
ANR	2462875	PtrMemberAccess	pdev -> memory		2462426	0					
ANR	2462876	Identifier	pdev		2462426	0					
ANR	2462877	Identifier	memory		2462426	1					
ANR	2462878	Argument	cooked_line		2462426	1					
ANR	2462879	Identifier	cooked_line		2462426	0					
ANR	2462880	Argument	"""perm_print_page"""		2462426	2					
ANR	2462881	PrimaryExpression	"""perm_print_page"""		2462426	0					
ANR	2462882	ExpressionStatement	"gs_free_object ( pdev -> memory , raw_line , ""perm_print_page"" )"	190:4:6709:6766	2462426	18	True				
ANR	2462883	CallExpression	"gs_free_object ( pdev -> memory , raw_line , ""perm_print_page"" )"		2462426	0					
ANR	2462884	Callee	gs_free_object		2462426	0					
ANR	2462885	Identifier	gs_free_object		2462426	0					
ANR	2462886	ArgumentList	pdev -> memory		2462426	1					
ANR	2462887	Argument	pdev -> memory		2462426	0					
ANR	2462888	PtrMemberAccess	pdev -> memory		2462426	0					
ANR	2462889	Identifier	pdev		2462426	0					
ANR	2462890	Identifier	memory		2462426	1					
ANR	2462891	Argument	raw_line		2462426	1					
ANR	2462892	Identifier	raw_line		2462426	0					
ANR	2462893	Argument	"""perm_print_page"""		2462426	2					
ANR	2462894	PrimaryExpression	"""perm_print_page"""		2462426	0					
ANR	2462895	ReturnStatement	return code ;	191:4:6772:6783	2462426	19	True				
ANR	2462896	Identifier	code		2462426	0					
ANR	2462897	ReturnType	static int		2462426	1					
ANR	2462898	Identifier	perm_print_page		2462426	2					
ANR	2462899	ParameterList	"gx_device_printer * pdev , FILE * pstream"		2462426	3					
ANR	2462900	Parameter	gx_device_printer * pdev	132:16:4647:4669	2462426	0	True				
ANR	2462901	ParameterType	gx_device_printer *		2462426	0					
ANR	2462902	Identifier	pdev		2462426	1					
ANR	2462903	Parameter	FILE * pstream	132:41:4672:4684	2462426	1	True				
ANR	2462904	ParameterType	FILE *		2462426	0					
ANR	2462905	Identifier	pstream		2462426	1					
ANR	2462906	CFGEntryNode	ENTRY		2462426		True				
ANR	2462907	CFGExitNode	EXIT		2462426		True				
ANR	2462908	Symbol	* dev		2462426						
ANR	2462909	Symbol	ncomp		2462426						
ANR	2462910	Symbol	* x		2462426						
ANR	2462911	Symbol	code		2462426						
ANR	2462912	Symbol	* row		2462426						
ANR	2462913	Symbol	dev -> height		2462426						
ANR	2462914	Symbol	& row		2462426						
ANR	2462915	Symbol	dev -> num_std_colorant_names		2462426						
ANR	2462916	Symbol	dev -> permute		2462426						
ANR	2462917	Symbol	mode		2462426						
ANR	2462918	Symbol	pdev		2462426						
ANR	2462919	Symbol	dev		2462426						
ANR	2462920	Symbol	pdev -> memory		2462426						
ANR	2462921	Symbol	gdev_prn_get_bits		2462426						
ANR	2462922	Symbol	* ncomp		2462426						
ANR	2462923	Symbol	row		2462426						
ANR	2462924	Symbol	dev -> mode		2462426						
ANR	2462925	Symbol	gs_alloc_bytes		2462426						
ANR	2462926	Symbol	b		2462426						
ANR	2462927	Symbol	c		2462426						
ANR	2462928	Symbol	raw_raster		2462426						
ANR	2462929	Symbol	g		2462426						
ANR	2462930	Symbol	raw_line		2462426						
ANR	2462931	Symbol	k		2462426						
ANR	2462932	Symbol	m		2462426						
ANR	2462933	Symbol	r		2462426						
ANR	2462934	Symbol	dev -> width		2462426						
ANR	2462935	Symbol	cooked_line		2462426						
ANR	2462936	Symbol	pdev -> width		2462426						
ANR	2462937	Symbol	x		2462426						
ANR	2462938	Symbol	* cooked_line		2462426						
ANR	2462939	Symbol	y		2462426						
ANR	2462940	Symbol	* pdev		2462426						
ANR	2462941	Symbol	permute		2462426						
ANR	2462942	Symbol	pstream		2462426						
ANR	2462943	Function	perm_permute_cm	194:0:6788:7140							
ANR	2462944	FunctionDef	"perm_permute_cm (gx_device * pdev , frac out [ ])"		2462943	0					
ANR	2462945	CompoundStatement		196:0:6845:7140	2462943	0					
ANR	2462946	Statement	gx_device_perm_t	197:4:6851:6866	2462943	0	True				
ANR	2462947	Statement	*	197:21:6868:6868	2462943	1	True				
ANR	2462948	Statement	const	197:23:6870:6874	2462943	2	True				
ANR	2462949	ExpressionStatement	dev = ( gx_device_perm_t * ) pdev	197:29:6876:6906	2462943	3	True				
ANR	2462950	AssignmentExpression	dev = ( gx_device_perm_t * ) pdev		2462943	0		=			
ANR	2462951	Identifier	dev		2462943	0					
ANR	2462952	CastExpression	( gx_device_perm_t * ) pdev		2462943	1					
ANR	2462953	CastTarget	gx_device_perm_t *		2462943	0					
ANR	2462954	Identifier	pdev		2462943	1					
ANR	2462955	IfStatement	if ( dev -> permute )		2462943	4					
ANR	2462956	Condition	dev -> permute	198:8:6916:6927	2462943	0	True				
ANR	2462957	PtrMemberAccess	dev -> permute		2462943	0					
ANR	2462958	Identifier	dev		2462943	0					
ANR	2462959	Identifier	permute		2462943	1					
ANR	2462960	CompoundStatement		4:8:94:100	2462943	1					
ANR	2462961	IdentifierDeclStatement	frac y ;	199:8:6940:6946	2462943	0	True				
ANR	2462962	IdentifierDecl	y		2462943	0					
ANR	2462963	IdentifierDeclType	frac		2462943	0					
ANR	2462964	Identifier	y		2462943	1					
ANR	2462965	ExpressionStatement	out [ 5 ] = dev -> mode == 0 ? out [ 3 ] : 0	200:8:6956:6992	2462943	1	True				
ANR	2462966	AssignmentExpression	out [ 5 ] = dev -> mode == 0 ? out [ 3 ] : 0		2462943	0		=			
ANR	2462967	ArrayIndexing	out [ 5 ]		2462943	0					
ANR	2462968	Identifier	out		2462943	0					
ANR	2462969	PrimaryExpression	5		2462943	1					
ANR	2462970	ConditionalExpression	dev -> mode == 0 ? out [ 3 ] : 0		2462943	1					
ANR	2462971	Condition	dev -> mode == 0		2462943	0					
ANR	2462972	EqualityExpression	dev -> mode == 0		2462943	0		==			
ANR	2462973	PtrMemberAccess	dev -> mode		2462943	0					
ANR	2462974	Identifier	dev		2462943	0					
ANR	2462975	Identifier	mode		2462943	1					
ANR	2462976	PrimaryExpression	0		2462943	1					
ANR	2462977	ArrayIndexing	out [ 3 ]		2462943	1					
ANR	2462978	Identifier	out		2462943	0					
ANR	2462979	PrimaryExpression	3		2462943	1					
ANR	2462980	PrimaryExpression	0		2462943	2					
ANR	2462981	ExpressionStatement	out [ 4 ] = frac_0	201:8:7002:7017	2462943	2	True				
ANR	2462982	AssignmentExpression	out [ 4 ] = frac_0		2462943	0		=			
ANR	2462983	ArrayIndexing	out [ 4 ]		2462943	0					
ANR	2462984	Identifier	out		2462943	0					
ANR	2462985	PrimaryExpression	4		2462943	1					
ANR	2462986	Identifier	frac_0		2462943	1					
ANR	2462987	ExpressionStatement	y = out [ 2 ]	202:8:7027:7037	2462943	3	True				
ANR	2462988	AssignmentExpression	y = out [ 2 ]		2462943	0		=			
ANR	2462989	Identifier	y		2462943	0					
ANR	2462990	ArrayIndexing	out [ 2 ]		2462943	1					
ANR	2462991	Identifier	out		2462943	0					
ANR	2462992	PrimaryExpression	2		2462943	1					
ANR	2462993	ExpressionStatement	out [ 3 ] = out [ 1 ]	203:8:7047:7062	2462943	4	True				
ANR	2462994	AssignmentExpression	out [ 3 ] = out [ 1 ]		2462943	0		=			
ANR	2462995	ArrayIndexing	out [ 3 ]		2462943	0					
ANR	2462996	Identifier	out		2462943	0					
ANR	2462997	PrimaryExpression	3		2462943	1					
ANR	2462998	ArrayIndexing	out [ 1 ]		2462943	1					
ANR	2462999	Identifier	out		2462943	0					
ANR	2463000	PrimaryExpression	1		2462943	1					
ANR	2463001	ExpressionStatement	out [ 2 ] = out [ 0 ]	204:8:7072:7087	2462943	5	True				
ANR	2463002	AssignmentExpression	out [ 2 ] = out [ 0 ]		2462943	0		=			
ANR	2463003	ArrayIndexing	out [ 2 ]		2462943	0					
ANR	2463004	Identifier	out		2462943	0					
ANR	2463005	PrimaryExpression	2		2462943	1					
ANR	2463006	ArrayIndexing	out [ 0 ]		2462943	1					
ANR	2463007	Identifier	out		2462943	0					
ANR	2463008	PrimaryExpression	0		2462943	1					
ANR	2463009	ExpressionStatement	out [ 1 ] = out [ 0 ]	205:8:7097:7112	2462943	6	True				
ANR	2463010	AssignmentExpression	out [ 1 ] = out [ 0 ]		2462943	0		=			
ANR	2463011	ArrayIndexing	out [ 1 ]		2462943	0					
ANR	2463012	Identifier	out		2462943	0					
ANR	2463013	PrimaryExpression	1		2462943	1					
ANR	2463014	ArrayIndexing	out [ 0 ]		2462943	1					
ANR	2463015	Identifier	out		2462943	0					
ANR	2463016	PrimaryExpression	0		2462943	1					
ANR	2463017	ExpressionStatement	out [ 0 ] = y	206:8:7122:7132	2462943	7	True				
ANR	2463018	AssignmentExpression	out [ 0 ] = y		2462943	0		=			
ANR	2463019	ArrayIndexing	out [ 0 ]		2462943	0					
ANR	2463020	Identifier	out		2462943	0					
ANR	2463021	PrimaryExpression	0		2462943	1					
ANR	2463022	Identifier	y		2462943	1					
ANR	2463023	ReturnType	static void		2462943	1					
ANR	2463024	Identifier	perm_permute_cm		2462943	2					
ANR	2463025	ParameterList	"gx_device * pdev , frac out [ ]"		2462943	3					
ANR	2463026	Parameter	gx_device * pdev	195:16:6816:6830	2462943	0	True				
ANR	2463027	ParameterType	gx_device *		2462943	0					
ANR	2463028	Identifier	pdev		2462943	1					
ANR	2463029	Parameter	frac out [ ]	195:33:6833:6842	2462943	1	True				
ANR	2463030	ParameterType	frac [ ]		2462943	0					
ANR	2463031	Identifier	out		2462943	1					
ANR	2463032	CFGEntryNode	ENTRY		2462943		True				
ANR	2463033	CFGExitNode	EXIT		2462943		True				
ANR	2463034	Symbol	* dev		2462943						
ANR	2463035	Symbol	pdev		2462943						
ANR	2463036	Symbol	dev		2462943						
ANR	2463037	Symbol	* out		2462943						
ANR	2463038	Symbol	dev -> permute		2462943						
ANR	2463039	Symbol	y		2462943						
ANR	2463040	Symbol	dev -> mode		2462943						
ANR	2463041	Symbol	frac_0		2462943						
ANR	2463042	Symbol	out		2462943						
ANR	2463043	Function	gray_cs_to_perm_cm_0	210:0:7143:7315							
ANR	2463044	FunctionDef	"gray_cs_to_perm_cm_0 (gx_device * dev , frac gray , frac out [ ])"		2463043	0					
ANR	2463045	CompoundStatement		212:0:7215:7315	2463043	0					
ANR	2463046	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0	213:4:7221:7254	2463043	0	True				
ANR	2463047	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0		2463043	0		=			
ANR	2463048	ArrayIndexing	out [ 0 ]		2463043	0					
ANR	2463049	Identifier	out		2463043	0					
ANR	2463050	PrimaryExpression	0		2463043	1					
ANR	2463051	AssignmentExpression	out [ 1 ] = out [ 2 ] = frac_0		2463043	1		=			
ANR	2463052	ArrayIndexing	out [ 1 ]		2463043	0					
ANR	2463053	Identifier	out		2463043	0					
ANR	2463054	PrimaryExpression	1		2463043	1					
ANR	2463055	AssignmentExpression	out [ 2 ] = frac_0		2463043	1		=			
ANR	2463056	ArrayIndexing	out [ 2 ]		2463043	0					
ANR	2463057	Identifier	out		2463043	0					
ANR	2463058	PrimaryExpression	2		2463043	1					
ANR	2463059	Identifier	frac_0		2463043	1					
ANR	2463060	ExpressionStatement	out [ 3 ] = frac_1 - gray	214:4:7260:7282	2463043	1	True				
ANR	2463061	AssignmentExpression	out [ 3 ] = frac_1 - gray		2463043	0		=			
ANR	2463062	ArrayIndexing	out [ 3 ]		2463043	0					
ANR	2463063	Identifier	out		2463043	0					
ANR	2463064	PrimaryExpression	3		2463043	1					
ANR	2463065	AdditiveExpression	frac_1 - gray		2463043	1		-			
ANR	2463066	Identifier	frac_1		2463043	0					
ANR	2463067	Identifier	gray		2463043	1					
ANR	2463068	ExpressionStatement	"perm_permute_cm ( dev , out )"	215:4:7288:7313	2463043	2	True				
ANR	2463069	CallExpression	"perm_permute_cm ( dev , out )"		2463043	0					
ANR	2463070	Callee	perm_permute_cm		2463043	0					
ANR	2463071	Identifier	perm_permute_cm		2463043	0					
ANR	2463072	ArgumentList	dev		2463043	1					
ANR	2463073	Argument	dev		2463043	0					
ANR	2463074	Identifier	dev		2463043	0					
ANR	2463075	Argument	out		2463043	1					
ANR	2463076	Identifier	out		2463043	0					
ANR	2463077	ReturnType	static void		2463043	1					
ANR	2463078	Identifier	gray_cs_to_perm_cm_0		2463043	2					
ANR	2463079	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		2463043	3					
ANR	2463080	Parameter	gx_device * dev	211:21:7176:7189	2463043	0	True				
ANR	2463081	ParameterType	gx_device *		2463043	0					
ANR	2463082	Identifier	dev		2463043	1					
ANR	2463083	Parameter	frac gray	211:37:7192:7200	2463043	1	True				
ANR	2463084	ParameterType	frac		2463043	0					
ANR	2463085	Identifier	gray		2463043	1					
ANR	2463086	Parameter	frac out [ ]	211:48:7203:7212	2463043	2	True				
ANR	2463087	ParameterType	frac [ ]		2463043	0					
ANR	2463088	Identifier	out		2463043	1					
ANR	2463089	CFGEntryNode	ENTRY		2463043		True				
ANR	2463090	CFGExitNode	EXIT		2463043		True				
ANR	2463091	Symbol	frac_1		2463043						
ANR	2463092	Symbol	gray		2463043						
ANR	2463093	Symbol	dev		2463043						
ANR	2463094	Symbol	* out		2463043						
ANR	2463095	Symbol	frac_0		2463043						
ANR	2463096	Symbol	out		2463043						
ANR	2463097	Function	rgb_cs_to_perm_cm_0	218:0:7318:7546							
ANR	2463098	FunctionDef	"rgb_cs_to_perm_cm_0 (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		2463097	0					
ANR	2463099	CompoundStatement		221:0:7458:7546	2463097	0					
ANR	2463100	ExpressionStatement	"color_rgb_to_cmyk ( r , g , b , pgs , out , dev -> memory )"	222:4:7464:7513	2463097	0	True				
ANR	2463101	CallExpression	"color_rgb_to_cmyk ( r , g , b , pgs , out , dev -> memory )"		2463097	0					
ANR	2463102	Callee	color_rgb_to_cmyk		2463097	0					
ANR	2463103	Identifier	color_rgb_to_cmyk		2463097	0					
ANR	2463104	ArgumentList	r		2463097	1					
ANR	2463105	Argument	r		2463097	0					
ANR	2463106	Identifier	r		2463097	0					
ANR	2463107	Argument	g		2463097	1					
ANR	2463108	Identifier	g		2463097	0					
ANR	2463109	Argument	b		2463097	2					
ANR	2463110	Identifier	b		2463097	0					
ANR	2463111	Argument	pgs		2463097	3					
ANR	2463112	Identifier	pgs		2463097	0					
ANR	2463113	Argument	out		2463097	4					
ANR	2463114	Identifier	out		2463097	0					
ANR	2463115	Argument	dev -> memory		2463097	5					
ANR	2463116	PtrMemberAccess	dev -> memory		2463097	0					
ANR	2463117	Identifier	dev		2463097	0					
ANR	2463118	Identifier	memory		2463097	1					
ANR	2463119	ExpressionStatement	"perm_permute_cm ( dev , out )"	223:4:7519:7544	2463097	1	True				
ANR	2463120	CallExpression	"perm_permute_cm ( dev , out )"		2463097	0					
ANR	2463121	Callee	perm_permute_cm		2463097	0					
ANR	2463122	Identifier	perm_permute_cm		2463097	0					
ANR	2463123	ArgumentList	dev		2463097	1					
ANR	2463124	Argument	dev		2463097	0					
ANR	2463125	Identifier	dev		2463097	0					
ANR	2463126	Argument	out		2463097	1					
ANR	2463127	Identifier	out		2463097	0					
ANR	2463128	ReturnType	static void		2463097	1					
ANR	2463129	Identifier	rgb_cs_to_perm_cm_0		2463097	2					
ANR	2463130	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		2463097	3					
ANR	2463131	Parameter	gx_device * dev	219:20:7350:7363	2463097	0	True				
ANR	2463132	ParameterType	gx_device *		2463097	0					
ANR	2463133	Identifier	dev		2463097	1					
ANR	2463134	Parameter	const gs_gstate * pgs	219:36:7366:7385	2463097	1	True				
ANR	2463135	ParameterType	const gs_gstate *		2463097	0					
ANR	2463136	Identifier	pgs		2463097	1					
ANR	2463137	Parameter	frac r	220:34:7422:7427	2463097	2	True				
ANR	2463138	ParameterType	frac		2463097	0					
ANR	2463139	Identifier	r		2463097	1					
ANR	2463140	Parameter	frac g	220:42:7430:7435	2463097	3	True				
ANR	2463141	ParameterType	frac		2463097	0					
ANR	2463142	Identifier	g		2463097	1					
ANR	2463143	Parameter	frac b	220:50:7438:7443	2463097	4	True				
ANR	2463144	ParameterType	frac		2463097	0					
ANR	2463145	Identifier	b		2463097	1					
ANR	2463146	Parameter	frac out [ ]	220:58:7446:7455	2463097	5	True				
ANR	2463147	ParameterType	frac [ ]		2463097	0					
ANR	2463148	Identifier	out		2463097	1					
ANR	2463149	CFGEntryNode	ENTRY		2463097		True				
ANR	2463150	CFGExitNode	EXIT		2463097		True				
ANR	2463151	Symbol	* dev		2463097						
ANR	2463152	Symbol	r		2463097						
ANR	2463153	Symbol	b		2463097						
ANR	2463154	Symbol	dev -> memory		2463097						
ANR	2463155	Symbol	dev		2463097						
ANR	2463156	Symbol	g		2463097						
ANR	2463157	Symbol	pgs		2463097						
ANR	2463158	Symbol	out		2463097						
ANR	2463159	Function	cmyk_cs_to_perm_cm_0	226:0:7549:7739							
ANR	2463160	FunctionDef	"cmyk_cs_to_perm_cm_0 (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		2463159	0					
ANR	2463161	CompoundStatement		228:0:7642:7739	2463159	0					
ANR	2463162	ExpressionStatement	out [ 0 ] = c	229:4:7648:7658	2463159	0	True				
ANR	2463163	AssignmentExpression	out [ 0 ] = c		2463159	0		=			
ANR	2463164	ArrayIndexing	out [ 0 ]		2463159	0					
ANR	2463165	Identifier	out		2463159	0					
ANR	2463166	PrimaryExpression	0		2463159	1					
ANR	2463167	Identifier	c		2463159	1					
ANR	2463168	ExpressionStatement	out [ 1 ] = m	230:4:7664:7674	2463159	1	True				
ANR	2463169	AssignmentExpression	out [ 1 ] = m		2463159	0		=			
ANR	2463170	ArrayIndexing	out [ 1 ]		2463159	0					
ANR	2463171	Identifier	out		2463159	0					
ANR	2463172	PrimaryExpression	1		2463159	1					
ANR	2463173	Identifier	m		2463159	1					
ANR	2463174	ExpressionStatement	out [ 2 ] = y	231:4:7680:7690	2463159	2	True				
ANR	2463175	AssignmentExpression	out [ 2 ] = y		2463159	0		=			
ANR	2463176	ArrayIndexing	out [ 2 ]		2463159	0					
ANR	2463177	Identifier	out		2463159	0					
ANR	2463178	PrimaryExpression	2		2463159	1					
ANR	2463179	Identifier	y		2463159	1					
ANR	2463180	ExpressionStatement	out [ 3 ] = k	232:4:7696:7706	2463159	3	True				
ANR	2463181	AssignmentExpression	out [ 3 ] = k		2463159	0		=			
ANR	2463182	ArrayIndexing	out [ 3 ]		2463159	0					
ANR	2463183	Identifier	out		2463159	0					
ANR	2463184	PrimaryExpression	3		2463159	1					
ANR	2463185	Identifier	k		2463159	1					
ANR	2463186	ExpressionStatement	"perm_permute_cm ( dev , out )"	233:4:7712:7737	2463159	4	True				
ANR	2463187	CallExpression	"perm_permute_cm ( dev , out )"		2463159	0					
ANR	2463188	Callee	perm_permute_cm		2463159	0					
ANR	2463189	Identifier	perm_permute_cm		2463159	0					
ANR	2463190	ArgumentList	dev		2463159	1					
ANR	2463191	Argument	dev		2463159	0					
ANR	2463192	Identifier	dev		2463159	0					
ANR	2463193	Argument	out		2463159	1					
ANR	2463194	Identifier	out		2463159	0					
ANR	2463195	ReturnType	static void		2463159	1					
ANR	2463196	Identifier	cmyk_cs_to_perm_cm_0		2463159	2					
ANR	2463197	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		2463159	3					
ANR	2463198	Parameter	gx_device * dev	227:21:7582:7595	2463159	0	True				
ANR	2463199	ParameterType	gx_device *		2463159	0					
ANR	2463200	Identifier	dev		2463159	1					
ANR	2463201	Parameter	frac c	227:37:7598:7603	2463159	1	True				
ANR	2463202	ParameterType	frac		2463159	0					
ANR	2463203	Identifier	c		2463159	1					
ANR	2463204	Parameter	frac m	227:45:7606:7611	2463159	2	True				
ANR	2463205	ParameterType	frac		2463159	0					
ANR	2463206	Identifier	m		2463159	1					
ANR	2463207	Parameter	frac y	227:53:7614:7619	2463159	3	True				
ANR	2463208	ParameterType	frac		2463159	0					
ANR	2463209	Identifier	y		2463159	1					
ANR	2463210	Parameter	frac k	227:61:7622:7627	2463159	4	True				
ANR	2463211	ParameterType	frac		2463159	0					
ANR	2463212	Identifier	k		2463159	1					
ANR	2463213	Parameter	frac out [ ]	227:69:7630:7639	2463159	5	True				
ANR	2463214	ParameterType	frac [ ]		2463159	0					
ANR	2463215	Identifier	out		2463159	1					
ANR	2463216	CFGEntryNode	ENTRY		2463159		True				
ANR	2463217	CFGExitNode	EXIT		2463159		True				
ANR	2463218	Symbol	c		2463159						
ANR	2463219	Symbol	dev		2463159						
ANR	2463220	Symbol	* out		2463159						
ANR	2463221	Symbol	y		2463159						
ANR	2463222	Symbol	k		2463159						
ANR	2463223	Symbol	m		2463159						
ANR	2463224	Symbol	out		2463159						
ANR	2463225	Function	gray_cs_to_perm_cm_1	236:0:7743:7894							
ANR	2463226	FunctionDef	"gray_cs_to_perm_cm_1 (gx_device * dev , frac gray , frac out [ ])"		2463225	0					
ANR	2463227	CompoundStatement		238:0:7815:7894	2463225	0					
ANR	2463228	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_1 - gray	239:4:7821:7861	2463225	0	True				
ANR	2463229	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_1 - gray		2463225	0		=			
ANR	2463230	ArrayIndexing	out [ 0 ]		2463225	0					
ANR	2463231	Identifier	out		2463225	0					
ANR	2463232	PrimaryExpression	0		2463225	1					
ANR	2463233	AssignmentExpression	out [ 1 ] = out [ 2 ] = frac_1 - gray		2463225	1		=			
ANR	2463234	ArrayIndexing	out [ 1 ]		2463225	0					
ANR	2463235	Identifier	out		2463225	0					
ANR	2463236	PrimaryExpression	1		2463225	1					
ANR	2463237	AssignmentExpression	out [ 2 ] = frac_1 - gray		2463225	1		=			
ANR	2463238	ArrayIndexing	out [ 2 ]		2463225	0					
ANR	2463239	Identifier	out		2463225	0					
ANR	2463240	PrimaryExpression	2		2463225	1					
ANR	2463241	AdditiveExpression	frac_1 - gray		2463225	1		-			
ANR	2463242	Identifier	frac_1		2463225	0					
ANR	2463243	Identifier	gray		2463225	1					
ANR	2463244	ExpressionStatement	"perm_permute_cm ( dev , out )"	240:4:7867:7892	2463225	1	True				
ANR	2463245	CallExpression	"perm_permute_cm ( dev , out )"		2463225	0					
ANR	2463246	Callee	perm_permute_cm		2463225	0					
ANR	2463247	Identifier	perm_permute_cm		2463225	0					
ANR	2463248	ArgumentList	dev		2463225	1					
ANR	2463249	Argument	dev		2463225	0					
ANR	2463250	Identifier	dev		2463225	0					
ANR	2463251	Argument	out		2463225	1					
ANR	2463252	Identifier	out		2463225	0					
ANR	2463253	ReturnType	static void		2463225	1					
ANR	2463254	Identifier	gray_cs_to_perm_cm_1		2463225	2					
ANR	2463255	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		2463225	3					
ANR	2463256	Parameter	gx_device * dev	237:21:7776:7789	2463225	0	True				
ANR	2463257	ParameterType	gx_device *		2463225	0					
ANR	2463258	Identifier	dev		2463225	1					
ANR	2463259	Parameter	frac gray	237:37:7792:7800	2463225	1	True				
ANR	2463260	ParameterType	frac		2463225	0					
ANR	2463261	Identifier	gray		2463225	1					
ANR	2463262	Parameter	frac out [ ]	237:48:7803:7812	2463225	2	True				
ANR	2463263	ParameterType	frac [ ]		2463225	0					
ANR	2463264	Identifier	out		2463225	1					
ANR	2463265	CFGEntryNode	ENTRY		2463225		True				
ANR	2463266	CFGExitNode	EXIT		2463225		True				
ANR	2463267	Symbol	frac_1		2463225						
ANR	2463268	Symbol	gray		2463225						
ANR	2463269	Symbol	dev		2463225						
ANR	2463270	Symbol	* out		2463225						
ANR	2463271	Symbol	out		2463225						
ANR	2463272	Function	rgb_cs_to_perm_cm_1	243:0:7897:8145							
ANR	2463273	FunctionDef	"rgb_cs_to_perm_cm_1 (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		2463272	0					
ANR	2463274	CompoundStatement		246:0:8037:8145	2463272	0					
ANR	2463275	ExpressionStatement	out [ 0 ] = frac_1 - r	247:4:8043:8062	2463272	0	True				
ANR	2463276	AssignmentExpression	out [ 0 ] = frac_1 - r		2463272	0		=			
ANR	2463277	ArrayIndexing	out [ 0 ]		2463272	0					
ANR	2463278	Identifier	out		2463272	0					
ANR	2463279	PrimaryExpression	0		2463272	1					
ANR	2463280	AdditiveExpression	frac_1 - r		2463272	1		-			
ANR	2463281	Identifier	frac_1		2463272	0					
ANR	2463282	Identifier	r		2463272	1					
ANR	2463283	ExpressionStatement	out [ 1 ] = frac_1 - g	248:4:8068:8087	2463272	1	True				
ANR	2463284	AssignmentExpression	out [ 1 ] = frac_1 - g		2463272	0		=			
ANR	2463285	ArrayIndexing	out [ 1 ]		2463272	0					
ANR	2463286	Identifier	out		2463272	0					
ANR	2463287	PrimaryExpression	1		2463272	1					
ANR	2463288	AdditiveExpression	frac_1 - g		2463272	1		-			
ANR	2463289	Identifier	frac_1		2463272	0					
ANR	2463290	Identifier	g		2463272	1					
ANR	2463291	ExpressionStatement	out [ 2 ] = frac_1 - b	249:4:8093:8112	2463272	2	True				
ANR	2463292	AssignmentExpression	out [ 2 ] = frac_1 - b		2463272	0		=			
ANR	2463293	ArrayIndexing	out [ 2 ]		2463272	0					
ANR	2463294	Identifier	out		2463272	0					
ANR	2463295	PrimaryExpression	2		2463272	1					
ANR	2463296	AdditiveExpression	frac_1 - b		2463272	1		-			
ANR	2463297	Identifier	frac_1		2463272	0					
ANR	2463298	Identifier	b		2463272	1					
ANR	2463299	ExpressionStatement	"perm_permute_cm ( dev , out )"	250:4:8118:8143	2463272	3	True				
ANR	2463300	CallExpression	"perm_permute_cm ( dev , out )"		2463272	0					
ANR	2463301	Callee	perm_permute_cm		2463272	0					
ANR	2463302	Identifier	perm_permute_cm		2463272	0					
ANR	2463303	ArgumentList	dev		2463272	1					
ANR	2463304	Argument	dev		2463272	0					
ANR	2463305	Identifier	dev		2463272	0					
ANR	2463306	Argument	out		2463272	1					
ANR	2463307	Identifier	out		2463272	0					
ANR	2463308	ReturnType	static void		2463272	1					
ANR	2463309	Identifier	rgb_cs_to_perm_cm_1		2463272	2					
ANR	2463310	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		2463272	3					
ANR	2463311	Parameter	gx_device * dev	244:20:7929:7942	2463272	0	True				
ANR	2463312	ParameterType	gx_device *		2463272	0					
ANR	2463313	Identifier	dev		2463272	1					
ANR	2463314	Parameter	const gs_gstate * pgs	244:36:7945:7964	2463272	1	True				
ANR	2463315	ParameterType	const gs_gstate *		2463272	0					
ANR	2463316	Identifier	pgs		2463272	1					
ANR	2463317	Parameter	frac r	245:34:8001:8006	2463272	2	True				
ANR	2463318	ParameterType	frac		2463272	0					
ANR	2463319	Identifier	r		2463272	1					
ANR	2463320	Parameter	frac g	245:42:8009:8014	2463272	3	True				
ANR	2463321	ParameterType	frac		2463272	0					
ANR	2463322	Identifier	g		2463272	1					
ANR	2463323	Parameter	frac b	245:50:8017:8022	2463272	4	True				
ANR	2463324	ParameterType	frac		2463272	0					
ANR	2463325	Identifier	b		2463272	1					
ANR	2463326	Parameter	frac out [ ]	245:58:8025:8034	2463272	5	True				
ANR	2463327	ParameterType	frac [ ]		2463272	0					
ANR	2463328	Identifier	out		2463272	1					
ANR	2463329	CFGEntryNode	ENTRY		2463272		True				
ANR	2463330	CFGExitNode	EXIT		2463272		True				
ANR	2463331	Symbol	r		2463272						
ANR	2463332	Symbol	b		2463272						
ANR	2463333	Symbol	frac_1		2463272						
ANR	2463334	Symbol	dev		2463272						
ANR	2463335	Symbol	g		2463272						
ANR	2463336	Symbol	* out		2463272						
ANR	2463337	Symbol	pgs		2463272						
ANR	2463338	Symbol	out		2463272						
ANR	2463339	Function	cmyk_cs_to_perm_cm_1	253:0:8148:8423							
ANR	2463340	FunctionDef	"cmyk_cs_to_perm_cm_1 (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		2463339	0					
ANR	2463341	CompoundStatement		255:0:8241:8423	2463339	0					
ANR	2463342	ExpressionStatement	"color_cmyk_to_rgb ( c , m , y , k , NULL , out , dev -> memory )"	256:4:8247:8300	2463339	0	True				
ANR	2463343	CallExpression	"color_cmyk_to_rgb ( c , m , y , k , NULL , out , dev -> memory )"		2463339	0					
ANR	2463344	Callee	color_cmyk_to_rgb		2463339	0					
ANR	2463345	Identifier	color_cmyk_to_rgb		2463339	0					
ANR	2463346	ArgumentList	c		2463339	1					
ANR	2463347	Argument	c		2463339	0					
ANR	2463348	Identifier	c		2463339	0					
ANR	2463349	Argument	m		2463339	1					
ANR	2463350	Identifier	m		2463339	0					
ANR	2463351	Argument	y		2463339	2					
ANR	2463352	Identifier	y		2463339	0					
ANR	2463353	Argument	k		2463339	3					
ANR	2463354	Identifier	k		2463339	0					
ANR	2463355	Argument	NULL		2463339	4					
ANR	2463356	Identifier	NULL		2463339	0					
ANR	2463357	Argument	out		2463339	5					
ANR	2463358	Identifier	out		2463339	0					
ANR	2463359	Argument	dev -> memory		2463339	6					
ANR	2463360	PtrMemberAccess	dev -> memory		2463339	0					
ANR	2463361	Identifier	dev		2463339	0					
ANR	2463362	Identifier	memory		2463339	1					
ANR	2463363	ExpressionStatement	out [ 0 ] = frac_1 - out [ 0 ]	257:4:8306:8330	2463339	1	True				
ANR	2463364	AssignmentExpression	out [ 0 ] = frac_1 - out [ 0 ]		2463339	0		=			
ANR	2463365	ArrayIndexing	out [ 0 ]		2463339	0					
ANR	2463366	Identifier	out		2463339	0					
ANR	2463367	PrimaryExpression	0		2463339	1					
ANR	2463368	AdditiveExpression	frac_1 - out [ 0 ]		2463339	1		-			
ANR	2463369	Identifier	frac_1		2463339	0					
ANR	2463370	ArrayIndexing	out [ 0 ]		2463339	1					
ANR	2463371	Identifier	out		2463339	0					
ANR	2463372	PrimaryExpression	0		2463339	1					
ANR	2463373	ExpressionStatement	out [ 1 ] = frac_1 - out [ 1 ]	258:4:8336:8360	2463339	2	True				
ANR	2463374	AssignmentExpression	out [ 1 ] = frac_1 - out [ 1 ]		2463339	0		=			
ANR	2463375	ArrayIndexing	out [ 1 ]		2463339	0					
ANR	2463376	Identifier	out		2463339	0					
ANR	2463377	PrimaryExpression	1		2463339	1					
ANR	2463378	AdditiveExpression	frac_1 - out [ 1 ]		2463339	1		-			
ANR	2463379	Identifier	frac_1		2463339	0					
ANR	2463380	ArrayIndexing	out [ 1 ]		2463339	1					
ANR	2463381	Identifier	out		2463339	0					
ANR	2463382	PrimaryExpression	1		2463339	1					
ANR	2463383	ExpressionStatement	out [ 2 ] = frac_1 - out [ 2 ]	259:4:8366:8390	2463339	3	True				
ANR	2463384	AssignmentExpression	out [ 2 ] = frac_1 - out [ 2 ]		2463339	0		=			
ANR	2463385	ArrayIndexing	out [ 2 ]		2463339	0					
ANR	2463386	Identifier	out		2463339	0					
ANR	2463387	PrimaryExpression	2		2463339	1					
ANR	2463388	AdditiveExpression	frac_1 - out [ 2 ]		2463339	1		-			
ANR	2463389	Identifier	frac_1		2463339	0					
ANR	2463390	ArrayIndexing	out [ 2 ]		2463339	1					
ANR	2463391	Identifier	out		2463339	0					
ANR	2463392	PrimaryExpression	2		2463339	1					
ANR	2463393	ExpressionStatement	"perm_permute_cm ( dev , out )"	260:4:8396:8421	2463339	4	True				
ANR	2463394	CallExpression	"perm_permute_cm ( dev , out )"		2463339	0					
ANR	2463395	Callee	perm_permute_cm		2463339	0					
ANR	2463396	Identifier	perm_permute_cm		2463339	0					
ANR	2463397	ArgumentList	dev		2463339	1					
ANR	2463398	Argument	dev		2463339	0					
ANR	2463399	Identifier	dev		2463339	0					
ANR	2463400	Argument	out		2463339	1					
ANR	2463401	Identifier	out		2463339	0					
ANR	2463402	ReturnType	static void		2463339	1					
ANR	2463403	Identifier	cmyk_cs_to_perm_cm_1		2463339	2					
ANR	2463404	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		2463339	3					
ANR	2463405	Parameter	gx_device * dev	254:21:8181:8194	2463339	0	True				
ANR	2463406	ParameterType	gx_device *		2463339	0					
ANR	2463407	Identifier	dev		2463339	1					
ANR	2463408	Parameter	frac c	254:37:8197:8202	2463339	1	True				
ANR	2463409	ParameterType	frac		2463339	0					
ANR	2463410	Identifier	c		2463339	1					
ANR	2463411	Parameter	frac m	254:45:8205:8210	2463339	2	True				
ANR	2463412	ParameterType	frac		2463339	0					
ANR	2463413	Identifier	m		2463339	1					
ANR	2463414	Parameter	frac y	254:53:8213:8218	2463339	3	True				
ANR	2463415	ParameterType	frac		2463339	0					
ANR	2463416	Identifier	y		2463339	1					
ANR	2463417	Parameter	frac k	254:61:8221:8226	2463339	4	True				
ANR	2463418	ParameterType	frac		2463339	0					
ANR	2463419	Identifier	k		2463339	1					
ANR	2463420	Parameter	frac out [ ]	254:69:8229:8238	2463339	5	True				
ANR	2463421	ParameterType	frac [ ]		2463339	0					
ANR	2463422	Identifier	out		2463339	1					
ANR	2463423	CFGEntryNode	ENTRY		2463339		True				
ANR	2463424	CFGExitNode	EXIT		2463339		True				
ANR	2463425	Symbol	* dev		2463339						
ANR	2463426	Symbol	dev -> memory		2463339						
ANR	2463427	Symbol	frac_1		2463339						
ANR	2463428	Symbol	c		2463339						
ANR	2463429	Symbol	NULL		2463339						
ANR	2463430	Symbol	dev		2463339						
ANR	2463431	Symbol	* out		2463339						
ANR	2463432	Symbol	y		2463339						
ANR	2463433	Symbol	k		2463339						
ANR	2463434	Symbol	m		2463339						
ANR	2463435	Symbol	out		2463339						
ANR	2463436	DeclStmt									
ANR	2463437	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	perm_cmapping_procs_0
ANR	2463438	DeclStmt									
ANR	2463439	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	perm_cmapping_procs_1
ANR	2463440	DeclStmt									
ANR	2463441	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs * [ ]	perm_cmapping_procs
ANR	2463442	Function	perm_get_color_mapping_procs	276:0:8814:9145							
ANR	2463443	FunctionDef	perm_get_color_mapping_procs (const gx_device * dev)		2463442	0					
ANR	2463444	CompoundStatement		278:0:8902:9145	2463442	0					
ANR	2463445	Statement	const	279:4:8908:8912	2463442	0	True				
ANR	2463446	Statement	gx_device_perm_t	279:10:8914:8929	2463442	1	True				
ANR	2463447	Statement	*	279:27:8931:8931	2463442	2	True				
ANR	2463448	Statement	const	279:29:8933:8937	2463442	3	True				
ANR	2463449	ExpressionStatement	pdev = ( const gx_device_perm_t * ) dev	279:35:8939:8975	2463442	4	True				
ANR	2463450	AssignmentExpression	pdev = ( const gx_device_perm_t * ) dev		2463442	0		=			
ANR	2463451	Identifier	pdev		2463442	0					
ANR	2463452	CastExpression	( const gx_device_perm_t * ) dev		2463442	1					
ANR	2463453	CastTarget	const gx_device_perm_t *		2463442	0					
ANR	2463454	Identifier	dev		2463442	1					
ANR	2463455	IfStatement	if ( pdev -> mode < 0 || pdev -> mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] ) )		2463442	5					
ANR	2463456	Condition	pdev -> mode < 0 || pdev -> mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )	281:8:8986:9077	2463442	0	True				
ANR	2463457	OrExpression	pdev -> mode < 0 || pdev -> mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )		2463442	0		||			
ANR	2463458	RelationalExpression	pdev -> mode < 0		2463442	0		<			
ANR	2463459	PtrMemberAccess	pdev -> mode		2463442	0					
ANR	2463460	Identifier	pdev		2463442	0					
ANR	2463461	Identifier	mode		2463442	1					
ANR	2463462	PrimaryExpression	0		2463442	1					
ANR	2463463	RelationalExpression	pdev -> mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )		2463442	1		>=			
ANR	2463464	PtrMemberAccess	pdev -> mode		2463442	0					
ANR	2463465	Identifier	pdev		2463442	0					
ANR	2463466	Identifier	mode		2463442	1					
ANR	2463467	MultiplicativeExpression	sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )		2463442	1		/			
ANR	2463468	SizeofExpression	sizeof ( perm_cmapping_procs )		2463442	0					
ANR	2463469	Sizeof	sizeof		2463442	0					
ANR	2463470	SizeofOperand	perm_cmapping_procs		2463442	1					
ANR	2463471	SizeofExpression	sizeof ( perm_cmapping_procs [ 0 ] )		2463442	1					
ANR	2463472	Sizeof	sizeof		2463442	0					
ANR	2463473	ArrayIndexing	perm_cmapping_procs [ 0 ]		2463442	1					
ANR	2463474	Identifier	perm_cmapping_procs		2463442	0					
ANR	2463475	PrimaryExpression	0		2463442	1					
ANR	2463476	ReturnStatement	return NULL ;	282:8:9088:9099	2463442	1	True				
ANR	2463477	Identifier	NULL		2463442	0					
ANR	2463478	ReturnStatement	return perm_cmapping_procs [ pdev -> mode ] ;	283:4:9105:9143	2463442	6	True				
ANR	2463479	ArrayIndexing	perm_cmapping_procs [ pdev -> mode ]		2463442	0					
ANR	2463480	Identifier	perm_cmapping_procs		2463442	0					
ANR	2463481	PtrMemberAccess	pdev -> mode		2463442	1					
ANR	2463482	Identifier	pdev		2463442	0					
ANR	2463483	Identifier	mode		2463442	1					
ANR	2463484	ReturnType	static const gx_cm_color_map_procs *		2463442	1					
ANR	2463485	Identifier	perm_get_color_mapping_procs		2463442	2					
ANR	2463486	ParameterList	const gx_device * dev		2463442	3					
ANR	2463487	Parameter	const gx_device * dev	277:29:8880:8899	2463442	0	True				
ANR	2463488	ParameterType	const gx_device *		2463442	0					
ANR	2463489	Identifier	dev		2463442	1					
ANR	2463490	CFGEntryNode	ENTRY		2463442		True				
ANR	2463491	CFGExitNode	EXIT		2463442		True				
ANR	2463492	Symbol	pdev		2463442						
ANR	2463493	Symbol	NULL		2463442						
ANR	2463494	Symbol	dev		2463442						
ANR	2463495	Symbol	pdev -> mode		2463442						
ANR	2463496	Symbol	* perm_cmapping_procs		2463442						
ANR	2463497	Symbol	* pdev		2463442						
ANR	2463498	Symbol	* pdev -> mode		2463442						
ANR	2463499	Symbol	* * pdev		2463442						
ANR	2463500	Symbol	perm_cmapping_procs		2463442						
ANR	2463501	Function	perm_get_color_comp_index	290:0:9317:9844							
ANR	2463502	FunctionDef	"perm_get_color_comp_index (const gx_device * pdev , const char * pname , int name_size , int component_type)"		2463501	0					
ANR	2463503	CompoundStatement		293:0:9471:9844	2463501	0					
ANR	2463504	Statement	const	294:4:9477:9481	2463501	0	True				
ANR	2463505	Statement	gx_device_perm_t	294:10:9483:9498	2463501	1	True				
ANR	2463506	Statement	*	294:27:9500:9500	2463501	2	True				
ANR	2463507	Statement	const	294:29:9502:9506	2463501	3	True				
ANR	2463508	ExpressionStatement	dev = ( const gx_device_perm_t * ) pdev	294:35:9508:9544	2463501	4	True				
ANR	2463509	AssignmentExpression	dev = ( const gx_device_perm_t * ) pdev		2463501	0		=			
ANR	2463510	Identifier	dev		2463501	0					
ANR	2463511	CastExpression	( const gx_device_perm_t * ) pdev		2463501	1					
ANR	2463512	CastTarget	const gx_device_perm_t *		2463501	0					
ANR	2463513	Identifier	pdev		2463501	1					
ANR	2463514	IdentifierDeclStatement	int n_separation_names = dev -> num_std_colorant_names ;	295:4:9550:9602	2463501	5	True				
ANR	2463515	IdentifierDecl	n_separation_names = dev -> num_std_colorant_names		2463501	0					
ANR	2463516	IdentifierDeclType	int		2463501	0					
ANR	2463517	Identifier	n_separation_names		2463501	1					
ANR	2463518	AssignmentExpression	n_separation_names = dev -> num_std_colorant_names		2463501	2		=			
ANR	2463519	Identifier	n_separation_names		2463501	0					
ANR	2463520	PtrMemberAccess	dev -> num_std_colorant_names		2463501	1					
ANR	2463521	Identifier	dev		2463501	0					
ANR	2463522	Identifier	num_std_colorant_names		2463501	1					
ANR	2463523	IdentifierDeclStatement	int i ;	296:4:9608:9613	2463501	6	True				
ANR	2463524	IdentifierDecl	i		2463501	0					
ANR	2463525	IdentifierDeclType	int		2463501	0					
ANR	2463526	Identifier	i		2463501	1					
ANR	2463527	ForStatement	for ( i = 0 ; i < n_separation_names ; i ++ )		2463501	7					
ANR	2463528	ForInit	i = 0 ;	298:9:9625:9630	2463501	0	True				
ANR	2463529	AssignmentExpression	i = 0		2463501	0		=			
ANR	2463530	Identifier	i		2463501	0					
ANR	2463531	PrimaryExpression	0		2463501	1					
ANR	2463532	Condition	i < n_separation_names	298:16:9632:9653	2463501	1	True				
ANR	2463533	RelationalExpression	i < n_separation_names		2463501	0		<			
ANR	2463534	Identifier	i		2463501	0					
ANR	2463535	Identifier	n_separation_names		2463501	1					
ANR	2463536	PostIncDecOperationExpression	i ++	298:40:9656:9658	2463501	2	True				
ANR	2463537	Identifier	i		2463501	0					
ANR	2463538	IncDec	++		2463501	1					
ANR	2463539	CompoundStatement		7:8:199:248	2463501	3					
ANR	2463540	IdentifierDeclStatement	const char * sep_name = dev -> std_colorant_names [ i ] ;	299:8:9671:9720	2463501	0	True				
ANR	2463541	IdentifierDecl	* sep_name = dev -> std_colorant_names [ i ]		2463501	0					
ANR	2463542	IdentifierDeclType	const char *		2463501	0					
ANR	2463543	Identifier	sep_name		2463501	1					
ANR	2463544	AssignmentExpression	* sep_name = dev -> std_colorant_names [ i ]		2463501	2		=			
ANR	2463545	Identifier	sep_name		2463501	0					
ANR	2463546	ArrayIndexing	dev -> std_colorant_names [ i ]		2463501	1					
ANR	2463547	PtrMemberAccess	dev -> std_colorant_names		2463501	0					
ANR	2463548	Identifier	dev		2463501	0					
ANR	2463549	Identifier	std_colorant_names		2463501	1					
ANR	2463550	Identifier	i		2463501	1					
ANR	2463551	IfStatement	"if ( compare_color_names ( pname , name_size , sep_name , strlen ( sep_name ) ) )"		2463501	1					
ANR	2463552	Condition	"compare_color_names ( pname , name_size , sep_name , strlen ( sep_name ) )"	300:12:9734:9798	2463501	0	True				
ANR	2463553	CallExpression	"compare_color_names ( pname , name_size , sep_name , strlen ( sep_name ) )"		2463501	0					
ANR	2463554	Callee	compare_color_names		2463501	0					
ANR	2463555	Identifier	compare_color_names		2463501	0					
ANR	2463556	ArgumentList	pname		2463501	1					
ANR	2463557	Argument	pname		2463501	0					
ANR	2463558	Identifier	pname		2463501	0					
ANR	2463559	Argument	name_size		2463501	1					
ANR	2463560	Identifier	name_size		2463501	0					
ANR	2463561	Argument	sep_name		2463501	2					
ANR	2463562	Identifier	sep_name		2463501	0					
ANR	2463563	Argument	strlen ( sep_name )		2463501	3					
ANR	2463564	CallExpression	strlen ( sep_name )		2463501	0					
ANR	2463565	Callee	strlen		2463501	0					
ANR	2463566	Identifier	strlen		2463501	0					
ANR	2463567	ArgumentList	sep_name		2463501	1					
ANR	2463568	Argument	sep_name		2463501	0					
ANR	2463569	Identifier	sep_name		2463501	0					
ANR	2463570	ReturnStatement	return i ;	301:12:9813:9821	2463501	1	True				
ANR	2463571	Identifier	i		2463501	0					
ANR	2463572	ReturnStatement	return - 1 ;	303:4:9833:9842	2463501	8	True				
ANR	2463573	UnaryOperationExpression	- 1		2463501	0					
ANR	2463574	UnaryOperator	-		2463501	0					
ANR	2463575	PrimaryExpression	1		2463501	1					
ANR	2463576	ReturnType	static int		2463501	1					
ANR	2463577	Identifier	perm_get_color_comp_index		2463501	2					
ANR	2463578	ParameterList	"const gx_device * pdev , const char * pname , int name_size , int component_type"		2463501	3					
ANR	2463579	Parameter	const gx_device * pdev	291:26:9354:9374	2463501	0	True				
ANR	2463580	ParameterType	const gx_device *		2463501	0					
ANR	2463581	Identifier	pdev		2463501	1					
ANR	2463582	Parameter	const char * pname	291:49:9377:9393	2463501	1	True				
ANR	2463583	ParameterType	const char *		2463501	0					
ANR	2463584	Identifier	pname		2463501	1					
ANR	2463585	Parameter	int name_size	292:40:9436:9448	2463501	2	True				
ANR	2463586	ParameterType	int		2463501	0					
ANR	2463587	Identifier	name_size		2463501	1					
ANR	2463588	Parameter	int component_type	292:55:9451:9468	2463501	3	True				
ANR	2463589	ParameterType	int		2463501	0					
ANR	2463590	Identifier	component_type		2463501	1					
ANR	2463591	CFGEntryNode	ENTRY		2463501		True				
ANR	2463592	CFGExitNode	EXIT		2463501		True				
ANR	2463593	Symbol	* dev		2463501						
ANR	2463594	Symbol	n_separation_names		2463501						
ANR	2463595	Symbol	sep_name		2463501						
ANR	2463596	Symbol	compare_color_names		2463501						
ANR	2463597	Symbol	pname		2463501						
ANR	2463598	Symbol	dev -> num_std_colorant_names		2463501						
ANR	2463599	Symbol	i		2463501						
ANR	2463600	Symbol	* * dev		2463501						
ANR	2463601	Symbol	pdev		2463501						
ANR	2463602	Symbol	component_type		2463501						
ANR	2463603	Symbol	strlen		2463501						
ANR	2463604	Symbol	* i		2463501						
ANR	2463605	Symbol	dev		2463501						
ANR	2463606	Symbol	* dev -> std_colorant_names		2463501						
ANR	2463607	Symbol	dev -> std_colorant_names		2463501						
ANR	2463608	Symbol	name_size		2463501						
ANR	2463609	Function	perm_encode_color	314:0:10114:10519							
ANR	2463610	FunctionDef	"perm_encode_color (gx_device * dev , const gx_color_value colors [ ])"		2463609	0					
ANR	2463611	CompoundStatement		316:0:10201:10519	2463609	0					
ANR	2463612	IdentifierDeclStatement	int bpc = 8 ;	317:4:10207:10218	2463609	0	True				
ANR	2463613	IdentifierDecl	bpc = 8		2463609	0					
ANR	2463614	IdentifierDeclType	int		2463609	0					
ANR	2463615	Identifier	bpc		2463609	1					
ANR	2463616	AssignmentExpression	bpc = 8		2463609	2		=			
ANR	2463617	Identifier	bpc		2463609	0					
ANR	2463618	PrimaryExpression	8		2463609	1					
ANR	2463619	IdentifierDeclStatement	gx_color_index color = 0 ;	318:4:10224:10248	2463609	1	True				
ANR	2463620	IdentifierDecl	color = 0		2463609	0					
ANR	2463621	IdentifierDeclType	gx_color_index		2463609	0					
ANR	2463622	Identifier	color		2463609	1					
ANR	2463623	AssignmentExpression	color = 0		2463609	2		=			
ANR	2463624	Identifier	color		2463609	0					
ANR	2463625	PrimaryExpression	0		2463609	1					
ANR	2463626	IdentifierDeclStatement	int i = 0 ;	319:4:10254:10263	2463609	2	True				
ANR	2463627	IdentifierDecl	i = 0		2463609	0					
ANR	2463628	IdentifierDeclType	int		2463609	0					
ANR	2463629	Identifier	i		2463609	1					
ANR	2463630	AssignmentExpression	i = 0		2463609	2		=			
ANR	2463631	Identifier	i		2463609	0					
ANR	2463632	PrimaryExpression	0		2463609	1					
ANR	2463633	IdentifierDeclStatement	int ncomp = dev -> color_info . num_components ;	320:4:10269:10311	2463609	3	True				
ANR	2463634	IdentifierDecl	ncomp = dev -> color_info . num_components		2463609	0					
ANR	2463635	IdentifierDeclType	int		2463609	0					
ANR	2463636	Identifier	ncomp		2463609	1					
ANR	2463637	AssignmentExpression	ncomp = dev -> color_info . num_components		2463609	2		=			
ANR	2463638	Identifier	ncomp		2463609	0					
ANR	2463639	MemberAccess	dev -> color_info . num_components		2463609	1					
ANR	2463640	PtrMemberAccess	dev -> color_info		2463609	0					
ANR	2463641	Identifier	dev		2463609	0					
ANR	2463642	Identifier	color_info		2463609	1					
ANR	2463643	Identifier	num_components		2463609	1					
ANR	2463644	ExpressionStatement	COLROUND_VARS	321:4:10317:10330	2463609	4	True				
ANR	2463645	Identifier	COLROUND_VARS		2463609	0					
ANR	2463646	ExpressionStatement	COLROUND_SETUP ( bpc )	323:4:10337:10356	2463609	5	True				
ANR	2463647	CallExpression	COLROUND_SETUP ( bpc )		2463609	0					
ANR	2463648	Callee	COLROUND_SETUP		2463609	0					
ANR	2463649	Identifier	COLROUND_SETUP		2463609	0					
ANR	2463650	ArgumentList	bpc		2463609	1					
ANR	2463651	Argument	bpc		2463609	0					
ANR	2463652	Identifier	bpc		2463609	0					
ANR	2463653	ForStatement	for ( ; i < ncomp ; i ++ )		2463609	6					
ANR	2463654	Condition	i < ncomp	324:11:10369:10375	2463609	0	True				
ANR	2463655	RelationalExpression	i < ncomp		2463609	0		<			
ANR	2463656	Identifier	i		2463609	0					
ANR	2463657	Identifier	ncomp		2463609	1					
ANR	2463658	PostIncDecOperationExpression	i ++	324:20:10378:10380	2463609	1	True				
ANR	2463659	Identifier	i		2463609	0					
ANR	2463660	IncDec	++		2463609	1					
ANR	2463661	CompoundStatement		9:25:181:181	2463609	2					
ANR	2463662	ExpressionStatement	color <<= bpc	325:8:10393:10406	2463609	0	True				
ANR	2463663	AssignmentExpression	color <<= bpc		2463609	0		<<=			
ANR	2463664	Identifier	color		2463609	0					
ANR	2463665	Identifier	bpc		2463609	1					
ANR	2463666	ExpressionStatement	color |= COLROUND_ROUND ( colors [ i ] )	326:8:10416:10450	2463609	1	True				
ANR	2463667	AssignmentExpression	color |= COLROUND_ROUND ( colors [ i ] )		2463609	0		|=			
ANR	2463668	Identifier	color		2463609	0					
ANR	2463669	CallExpression	COLROUND_ROUND ( colors [ i ] )		2463609	1					
ANR	2463670	Callee	COLROUND_ROUND		2463609	0					
ANR	2463671	Identifier	COLROUND_ROUND		2463609	0					
ANR	2463672	ArgumentList	colors [ i ]		2463609	1					
ANR	2463673	Argument	colors [ i ]		2463609	0					
ANR	2463674	ArrayIndexing	colors [ i ]		2463609	0					
ANR	2463675	Identifier	colors		2463609	0					
ANR	2463676	Identifier	i		2463609	1					
ANR	2463677	ReturnStatement	return ( color == gx_no_color_index ? color ^ 1 : color ) ;	328:4:10462:10517	2463609	7	True				
ANR	2463678	ConditionalExpression	color == gx_no_color_index ? color ^ 1 : color		2463609	0					
ANR	2463679	Condition	color == gx_no_color_index		2463609	0					
ANR	2463680	EqualityExpression	color == gx_no_color_index		2463609	0		==			
ANR	2463681	Identifier	color		2463609	0					
ANR	2463682	Identifier	gx_no_color_index		2463609	1					
ANR	2463683	ExclusiveOrExpression	color ^ 1		2463609	1		^			
ANR	2463684	Identifier	color		2463609	0					
ANR	2463685	PrimaryExpression	1		2463609	1					
ANR	2463686	Identifier	color		2463609	2					
ANR	2463687	ReturnType	static gx_color_index		2463609	1					
ANR	2463688	Identifier	perm_encode_color		2463609	2					
ANR	2463689	ParameterList	"gx_device * dev , const gx_color_value colors [ ]"		2463609	3					
ANR	2463690	Parameter	gx_device * dev	315:18:10154:10167	2463609	0	True				
ANR	2463691	ParameterType	gx_device *		2463609	0					
ANR	2463692	Identifier	dev		2463609	1					
ANR	2463693	Parameter	const gx_color_value colors [ ]	315:34:10170:10198	2463609	1	True				
ANR	2463694	ParameterType	const gx_color_value [ ]		2463609	0					
ANR	2463695	Identifier	colors		2463609	1					
ANR	2463696	CFGEntryNode	ENTRY		2463609		True				
ANR	2463697	CFGExitNode	EXIT		2463609		True				
ANR	2463698	Symbol	* dev		2463609						
ANR	2463699	Symbol	ncomp		2463609						
ANR	2463700	Symbol	color		2463609						
ANR	2463701	Symbol	dev -> color_info . num_components		2463609						
ANR	2463702	Symbol	i		2463609						
ANR	2463703	Symbol	dev -> color_info		2463609						
ANR	2463704	Symbol	colors		2463609						
ANR	2463705	Symbol	* colors		2463609						
ANR	2463706	Symbol	* i		2463609						
ANR	2463707	Symbol	gx_no_color_index		2463609						
ANR	2463708	Symbol	dev		2463609						
ANR	2463709	Symbol	bpc		2463609						
ANR	2463710	Symbol	COLROUND_ROUND		2463609						
ANR	2463711	Function	perm_decode_color	334:0:10597:11013							
ANR	2463712	FunctionDef	"perm_decode_color (gx_device * dev , gx_color_index color , gx_color_value * out)"		2463711	0					
ANR	2463713	CompoundStatement		336:0:10685:11013	2463711	0					
ANR	2463714	IdentifierDeclStatement	int bpc = 8 ;	337:4:10691:10702	2463711	0	True				
ANR	2463715	IdentifierDecl	bpc = 8		2463711	0					
ANR	2463716	IdentifierDeclType	int		2463711	0					
ANR	2463717	Identifier	bpc		2463711	1					
ANR	2463718	AssignmentExpression	bpc = 8		2463711	2		=			
ANR	2463719	Identifier	bpc		2463711	0					
ANR	2463720	PrimaryExpression	8		2463711	1					
ANR	2463721	IdentifierDeclStatement	int drop = sizeof ( gx_color_value ) * 8 - bpc ;	338:4:10708:10751	2463711	1	True				
ANR	2463722	IdentifierDecl	drop = sizeof ( gx_color_value ) * 8 - bpc		2463711	0					
ANR	2463723	IdentifierDeclType	int		2463711	0					
ANR	2463724	Identifier	drop		2463711	1					
ANR	2463725	AssignmentExpression	drop = sizeof ( gx_color_value ) * 8 - bpc		2463711	2		=			
ANR	2463726	Identifier	drop		2463711	0					
ANR	2463727	AdditiveExpression	sizeof ( gx_color_value ) * 8 - bpc		2463711	1		-			
ANR	2463728	MultiplicativeExpression	sizeof ( gx_color_value ) * 8		2463711	0		*			
ANR	2463729	SizeofExpression	sizeof ( gx_color_value )		2463711	0					
ANR	2463730	Sizeof	sizeof		2463711	0					
ANR	2463731	SizeofOperand	gx_color_value		2463711	1					
ANR	2463732	PrimaryExpression	8		2463711	1					
ANR	2463733	Identifier	bpc		2463711	1					
ANR	2463734	IdentifierDeclStatement	int mask = ( 1 << bpc ) - 1 ;	339:4:10757:10782	2463711	2	True				
ANR	2463735	IdentifierDecl	mask = ( 1 << bpc ) - 1		2463711	0					
ANR	2463736	IdentifierDeclType	int		2463711	0					
ANR	2463737	Identifier	mask		2463711	1					
ANR	2463738	AssignmentExpression	mask = ( 1 << bpc ) - 1		2463711	2		=			
ANR	2463739	Identifier	mask		2463711	0					
ANR	2463740	AdditiveExpression	( 1 << bpc ) - 1		2463711	1		-			
ANR	2463741	ShiftExpression	1 << bpc		2463711	0		<<			
ANR	2463742	PrimaryExpression	1		2463711	0					
ANR	2463743	Identifier	bpc		2463711	1					
ANR	2463744	PrimaryExpression	1		2463711	1					
ANR	2463745	IdentifierDeclStatement	int i = 0 ;	340:4:10788:10797	2463711	3	True				
ANR	2463746	IdentifierDecl	i = 0		2463711	0					
ANR	2463747	IdentifierDeclType	int		2463711	0					
ANR	2463748	Identifier	i		2463711	1					
ANR	2463749	AssignmentExpression	i = 0		2463711	2		=			
ANR	2463750	Identifier	i		2463711	0					
ANR	2463751	PrimaryExpression	0		2463711	1					
ANR	2463752	IdentifierDeclStatement	int ncomp = dev -> color_info . num_components ;	341:4:10803:10845	2463711	4	True				
ANR	2463753	IdentifierDecl	ncomp = dev -> color_info . num_components		2463711	0					
ANR	2463754	IdentifierDeclType	int		2463711	0					
ANR	2463755	Identifier	ncomp		2463711	1					
ANR	2463756	AssignmentExpression	ncomp = dev -> color_info . num_components		2463711	2		=			
ANR	2463757	Identifier	ncomp		2463711	0					
ANR	2463758	MemberAccess	dev -> color_info . num_components		2463711	1					
ANR	2463759	PtrMemberAccess	dev -> color_info		2463711	0					
ANR	2463760	Identifier	dev		2463711	0					
ANR	2463761	Identifier	color_info		2463711	1					
ANR	2463762	Identifier	num_components		2463711	1					
ANR	2463763	ExpressionStatement	COLDUP_VARS	342:4:10851:10862	2463711	5	True				
ANR	2463764	Identifier	COLDUP_VARS		2463711	0					
ANR	2463765	ExpressionStatement	COLDUP_SETUP ( bpc )	344:4:10869:10886	2463711	6	True				
ANR	2463766	CallExpression	COLDUP_SETUP ( bpc )		2463711	0					
ANR	2463767	Callee	COLDUP_SETUP		2463711	0					
ANR	2463768	Identifier	COLDUP_SETUP		2463711	0					
ANR	2463769	ArgumentList	bpc		2463711	1					
ANR	2463770	Argument	bpc		2463711	0					
ANR	2463771	Identifier	bpc		2463711	0					
ANR	2463772	ForStatement	for ( ; i < ncomp ; i ++ )		2463711	7					
ANR	2463773	Condition	i < ncomp	345:11:10899:10905	2463711	0	True				
ANR	2463774	RelationalExpression	i < ncomp		2463711	0		<			
ANR	2463775	Identifier	i		2463711	0					
ANR	2463776	Identifier	ncomp		2463711	1					
ANR	2463777	PostIncDecOperationExpression	i ++	345:20:10908:10910	2463711	1	True				
ANR	2463778	Identifier	i		2463711	0					
ANR	2463779	IncDec	++		2463711	1					
ANR	2463780	CompoundStatement		10:25:227:227	2463711	2					
ANR	2463781	ExpressionStatement	out [ ncomp - i - 1 ] = COLDUP_DUP ( color & mask )	346:8:10923:10968	2463711	0	True				
ANR	2463782	AssignmentExpression	out [ ncomp - i - 1 ] = COLDUP_DUP ( color & mask )		2463711	0		=			
ANR	2463783	ArrayIndexing	out [ ncomp - i - 1 ]		2463711	0					
ANR	2463784	Identifier	out		2463711	0					
ANR	2463785	AdditiveExpression	ncomp - i - 1		2463711	1		-			
ANR	2463786	Identifier	ncomp		2463711	0					
ANR	2463787	AdditiveExpression	i - 1		2463711	1		-			
ANR	2463788	Identifier	i		2463711	0					
ANR	2463789	PrimaryExpression	1		2463711	1					
ANR	2463790	CallExpression	COLDUP_DUP ( color & mask )		2463711	1					
ANR	2463791	Callee	COLDUP_DUP		2463711	0					
ANR	2463792	Identifier	COLDUP_DUP		2463711	0					
ANR	2463793	ArgumentList	color & mask		2463711	1					
ANR	2463794	Argument	color & mask		2463711	0					
ANR	2463795	BitAndExpression	color & mask		2463711	0		&			
ANR	2463796	Identifier	color		2463711	0					
ANR	2463797	Identifier	mask		2463711	1					
ANR	2463798	ExpressionStatement	color >>= bpc	347:8:10978:10991	2463711	1	True				
ANR	2463799	AssignmentExpression	color >>= bpc		2463711	0		>>=			
ANR	2463800	Identifier	color		2463711	0					
ANR	2463801	Identifier	bpc		2463711	1					
ANR	2463802	ReturnStatement	return 0 ;	349:4:11003:11011	2463711	8	True				
ANR	2463803	PrimaryExpression	0		2463711	0					
ANR	2463804	ReturnType	static int		2463711	1					
ANR	2463805	Identifier	perm_decode_color		2463711	2					
ANR	2463806	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value * out"		2463711	3					
ANR	2463807	Parameter	gx_device * dev	335:18:10626:10639	2463711	0	True				
ANR	2463808	ParameterType	gx_device *		2463711	0					
ANR	2463809	Identifier	dev		2463711	1					
ANR	2463810	Parameter	gx_color_index color	335:34:10642:10661	2463711	1	True				
ANR	2463811	ParameterType	gx_color_index		2463711	0					
ANR	2463812	Identifier	color		2463711	1					
ANR	2463813	Parameter	gx_color_value * out	335:56:10664:10682	2463711	2	True				
ANR	2463814	ParameterType	gx_color_value *		2463711	0					
ANR	2463815	Identifier	out		2463711	1					
ANR	2463816	CFGEntryNode	ENTRY		2463711		True				
ANR	2463817	CFGExitNode	EXIT		2463711		True				
ANR	2463818	Symbol	drop		2463711						
ANR	2463819	Symbol	* dev		2463711						
ANR	2463820	Symbol	ncomp		2463711						
ANR	2463821	Symbol	color		2463711						
ANR	2463822	Symbol	dev -> color_info . num_components		2463711						
ANR	2463823	Symbol	COLDUP_DUP		2463711						
ANR	2463824	Symbol	i		2463711						
ANR	2463825	Symbol	dev -> color_info		2463711						
ANR	2463826	Symbol	out		2463711						
ANR	2463827	Symbol	* i		2463711						
ANR	2463828	Symbol	dev		2463711						
ANR	2463829	Symbol	bpc		2463711						
ANR	2463830	Symbol	* out		2463711						
ANR	2463831	Symbol	* ncomp		2463711						
ANR	2463832	Symbol	mask		2463711						
ANR	2463833	DeclStmt									
ANR	2463834	Decl							define	"define ( a , d , s )"	set_param_array
ANR	2463835	Function	perm_get_params	355:0:11101:12276							
ANR	2463836	FunctionDef	"perm_get_params (gx_device * pdev , gs_param_list * plist)"		2463835	0					
ANR	2463837	CompoundStatement		357:0:11167:12276	2463835	0					
ANR	2463838	Statement	gx_device_perm_t	358:4:11173:11188	2463835	0	True				
ANR	2463839	Statement	*	358:21:11190:11190	2463835	1	True				
ANR	2463840	Statement	const	358:23:11192:11196	2463835	2	True				
ANR	2463841	ExpressionStatement	dev = ( gx_device_perm_t * ) pdev	358:29:11198:11228	2463835	3	True				
ANR	2463842	AssignmentExpression	dev = ( gx_device_perm_t * ) pdev		2463835	0		=			
ANR	2463843	Identifier	dev		2463835	0					
ANR	2463844	CastExpression	( gx_device_perm_t * ) pdev		2463835	1					
ANR	2463845	CastTarget	gx_device_perm_t *		2463835	0					
ANR	2463846	Identifier	pdev		2463835	1					
ANR	2463847	IdentifierDeclStatement	int code ;	359:4:11234:11242	2463835	4	True				
ANR	2463848	IdentifierDecl	code		2463835	0					
ANR	2463849	IdentifierDeclType	int		2463835	0					
ANR	2463850	Identifier	code		2463835	1					
ANR	2463851	ExpressionStatement	"code = param_write_int ( plist , ""Permute"" , & dev -> permute )"	361:4:11249:11304	2463835	5	True				
ANR	2463852	AssignmentExpression	"code = param_write_int ( plist , ""Permute"" , & dev -> permute )"		2463835	0		=			
ANR	2463853	Identifier	code		2463835	0					
ANR	2463854	CallExpression	"param_write_int ( plist , ""Permute"" , & dev -> permute )"		2463835	1					
ANR	2463855	Callee	param_write_int		2463835	0					
ANR	2463856	Identifier	param_write_int		2463835	0					
ANR	2463857	ArgumentList	plist		2463835	1					
ANR	2463858	Argument	plist		2463835	0					
ANR	2463859	Identifier	plist		2463835	0					
ANR	2463860	Argument	"""Permute"""		2463835	1					
ANR	2463861	PrimaryExpression	"""Permute"""		2463835	0					
ANR	2463862	Argument	& dev -> permute		2463835	2					
ANR	2463863	UnaryOperationExpression	& dev -> permute		2463835	0					
ANR	2463864	UnaryOperator	&		2463835	0					
ANR	2463865	PtrMemberAccess	dev -> permute		2463835	1					
ANR	2463866	Identifier	dev		2463835	0					
ANR	2463867	Identifier	permute		2463835	1					
ANR	2463868	IfStatement	if ( code >= 0 )		2463835	6					
ANR	2463869	Condition	code >= 0	362:8:11314:11322	2463835	0	True				
ANR	2463870	RelationalExpression	code >= 0		2463835	0		>=			
ANR	2463871	Identifier	code		2463835	0					
ANR	2463872	PrimaryExpression	0		2463835	1					
ANR	2463873	ExpressionStatement	"code = param_write_int ( plist , ""Mode"" , & dev -> mode )"	363:8:11333:11382	2463835	1	True				
ANR	2463874	AssignmentExpression	"code = param_write_int ( plist , ""Mode"" , & dev -> mode )"		2463835	0		=			
ANR	2463875	Identifier	code		2463835	0					
ANR	2463876	CallExpression	"param_write_int ( plist , ""Mode"" , & dev -> mode )"		2463835	1					
ANR	2463877	Callee	param_write_int		2463835	0					
ANR	2463878	Identifier	param_write_int		2463835	0					
ANR	2463879	ArgumentList	plist		2463835	1					
ANR	2463880	Argument	plist		2463835	0					
ANR	2463881	Identifier	plist		2463835	0					
ANR	2463882	Argument	"""Mode"""		2463835	1					
ANR	2463883	PrimaryExpression	"""Mode"""		2463835	0					
ANR	2463884	Argument	& dev -> mode		2463835	2					
ANR	2463885	UnaryOperationExpression	& dev -> mode		2463835	0					
ANR	2463886	UnaryOperator	&		2463835	0					
ANR	2463887	PtrMemberAccess	dev -> mode		2463835	1					
ANR	2463888	Identifier	dev		2463835	0					
ANR	2463889	Identifier	mode		2463835	1					
ANR	2463890	IfStatement	if ( code >= 0 && dev -> permute == 1 )		2463835	7					
ANR	2463891	Condition	code >= 0 && dev -> permute == 1	367:8:11490:11519	2463835	0	True				
ANR	2463892	AndExpression	code >= 0 && dev -> permute == 1		2463835	0		&&			
ANR	2463893	RelationalExpression	code >= 0		2463835	0		>=			
ANR	2463894	Identifier	code		2463835	0					
ANR	2463895	PrimaryExpression	0		2463835	1					
ANR	2463896	EqualityExpression	dev -> permute == 1		2463835	1		==			
ANR	2463897	PtrMemberAccess	dev -> permute		2463835	0					
ANR	2463898	Identifier	dev		2463835	0					
ANR	2463899	Identifier	permute		2463835	1					
ANR	2463900	PrimaryExpression	1		2463835	1					
ANR	2463901	CompoundStatement		15:8:487:509	2463835	1					
ANR	2463902	IdentifierDeclStatement	int i ;	368:8:11532:11537	2463835	0	True				
ANR	2463903	IdentifierDecl	i		2463835	0					
ANR	2463904	IdentifierDeclType	int		2463835	0					
ANR	2463905	Identifier	i		2463835	1					
ANR	2463906	IdentifierDeclStatement	gs_param_string_array scna ;	370:8:11619:11645	2463835	1	True				
ANR	2463907	IdentifierDecl	scna		2463835	0					
ANR	2463908	IdentifierDeclType	gs_param_string_array		2463835	0					
ANR	2463909	Identifier	scna		2463835	1					
ANR	2463910	IdentifierDeclStatement	gs_param_string scn [ 6 ] ;	371:8:11655:11677	2463835	2	True				
ANR	2463911	IdentifierDecl	scn [ 6 ]		2463835	0					
ANR	2463912	IdentifierDeclType	gs_param_string [ 6 ]		2463835	0					
ANR	2463913	Identifier	scn		2463835	1					
ANR	2463914	PrimaryExpression	6		2463835	2					
ANR	2463915	ExpressionStatement	"set_param_array ( scna , scn , dev -> num_std_colorant_names )"	373:8:11688:11743	2463835	3	True				
ANR	2463916	CallExpression	"set_param_array ( scna , scn , dev -> num_std_colorant_names )"		2463835	0					
ANR	2463917	Callee	set_param_array		2463835	0					
ANR	2463918	Identifier	set_param_array		2463835	0					
ANR	2463919	ArgumentList	scna		2463835	1					
ANR	2463920	Argument	scna		2463835	0					
ANR	2463921	Identifier	scna		2463835	0					
ANR	2463922	Argument	scn		2463835	1					
ANR	2463923	Identifier	scn		2463835	0					
ANR	2463924	Argument	dev -> num_std_colorant_names		2463835	2					
ANR	2463925	PtrMemberAccess	dev -> num_std_colorant_names		2463835	0					
ANR	2463926	Identifier	dev		2463835	0					
ANR	2463927	Identifier	num_std_colorant_names		2463835	1					
ANR	2463928	ForStatement	for ( i = 0 ; i < dev -> num_std_colorant_names ; i ++ )		2463835	4					
ANR	2463929	ForInit	i = 0 ;	375:13:11820:11825	2463835	0	True				
ANR	2463930	AssignmentExpression	i = 0		2463835	0		=			
ANR	2463931	Identifier	i		2463835	0					
ANR	2463932	PrimaryExpression	0		2463835	1					
ANR	2463933	Condition	i < dev -> num_std_colorant_names	375:20:11827:11857	2463835	1	True				
ANR	2463934	RelationalExpression	i < dev -> num_std_colorant_names		2463835	0		<			
ANR	2463935	Identifier	i		2463835	0					
ANR	2463936	PtrMemberAccess	dev -> num_std_colorant_names		2463835	1					
ANR	2463937	Identifier	dev		2463835	0					
ANR	2463938	Identifier	num_std_colorant_names		2463835	1					
ANR	2463939	PostIncDecOperationExpression	i ++	375:53:11860:11862	2463835	2	True				
ANR	2463940	Identifier	i		2463835	0					
ANR	2463941	IncDec	++		2463835	1					
ANR	2463942	ExpressionStatement	"param_string_from_string ( scn [ i ] , dev -> std_colorant_names [ i ] )"	376:12:11877:11937	2463835	3	True				
ANR	2463943	CallExpression	"param_string_from_string ( scn [ i ] , dev -> std_colorant_names [ i ] )"		2463835	0					
ANR	2463944	Callee	param_string_from_string		2463835	0					
ANR	2463945	Identifier	param_string_from_string		2463835	0					
ANR	2463946	ArgumentList	scn [ i ]		2463835	1					
ANR	2463947	Argument	scn [ i ]		2463835	0					
ANR	2463948	ArrayIndexing	scn [ i ]		2463835	0					
ANR	2463949	Identifier	scn		2463835	0					
ANR	2463950	Identifier	i		2463835	1					
ANR	2463951	Argument	dev -> std_colorant_names [ i ]		2463835	1					
ANR	2463952	ArrayIndexing	dev -> std_colorant_names [ i ]		2463835	0					
ANR	2463953	PtrMemberAccess	dev -> std_colorant_names		2463835	0					
ANR	2463954	Identifier	dev		2463835	0					
ANR	2463955	Identifier	std_colorant_names		2463835	1					
ANR	2463956	Identifier	i		2463835	1					
ANR	2463957	ExpressionStatement	"code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"	381:8:12116:12183	2463835	5	True				
ANR	2463958	AssignmentExpression	"code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"		2463835	0		=			
ANR	2463959	Identifier	code		2463835	0					
ANR	2463960	CallExpression	"param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"		2463835	1					
ANR	2463961	Callee	param_write_name_array		2463835	0					
ANR	2463962	Identifier	param_write_name_array		2463835	0					
ANR	2463963	ArgumentList	plist		2463835	1					
ANR	2463964	Argument	plist		2463835	0					
ANR	2463965	Identifier	plist		2463835	0					
ANR	2463966	Argument	"""SeparationColorNames"""		2463835	1					
ANR	2463967	PrimaryExpression	"""SeparationColorNames"""		2463835	0					
ANR	2463968	Argument	& scna		2463835	2					
ANR	2463969	UnaryOperationExpression	& scna		2463835	0					
ANR	2463970	UnaryOperator	&		2463835	0					
ANR	2463971	Identifier	scna		2463835	1					
ANR	2463972	IfStatement	if ( code >= 0 )		2463835	8					
ANR	2463973	Condition	code >= 0	383:8:12199:12207	2463835	0	True				
ANR	2463974	RelationalExpression	code >= 0		2463835	0		>=			
ANR	2463975	Identifier	code		2463835	0					
ANR	2463976	PrimaryExpression	0		2463835	1					
ANR	2463977	ExpressionStatement	"code = gdev_prn_get_params ( pdev , plist )"	384:8:12218:12257	2463835	1	True				
ANR	2463978	AssignmentExpression	"code = gdev_prn_get_params ( pdev , plist )"		2463835	0		=			
ANR	2463979	Identifier	code		2463835	0					
ANR	2463980	CallExpression	"gdev_prn_get_params ( pdev , plist )"		2463835	1					
ANR	2463981	Callee	gdev_prn_get_params		2463835	0					
ANR	2463982	Identifier	gdev_prn_get_params		2463835	0					
ANR	2463983	ArgumentList	pdev		2463835	1					
ANR	2463984	Argument	pdev		2463835	0					
ANR	2463985	Identifier	pdev		2463835	0					
ANR	2463986	Argument	plist		2463835	1					
ANR	2463987	Identifier	plist		2463835	0					
ANR	2463988	ReturnStatement	return code ;	385:4:12263:12274	2463835	9	True				
ANR	2463989	Identifier	code		2463835	0					
ANR	2463990	ReturnType	static int		2463835	1					
ANR	2463991	Identifier	perm_get_params		2463835	2					
ANR	2463992	ParameterList	"gx_device * pdev , gs_param_list * plist"		2463835	3					
ANR	2463993	Parameter	gx_device * pdev	356:16:11128:11142	2463835	0	True				
ANR	2463994	ParameterType	gx_device *		2463835	0					
ANR	2463995	Identifier	pdev		2463835	1					
ANR	2463996	Parameter	gs_param_list * plist	356:33:11145:11164	2463835	1	True				
ANR	2463997	ParameterType	gs_param_list *		2463835	0					
ANR	2463998	Identifier	plist		2463835	1					
ANR	2463999	CFGEntryNode	ENTRY		2463835		True				
ANR	2464000	CFGExitNode	EXIT		2463835		True				
ANR	2464001	Symbol	* dev		2463835						
ANR	2464002	Symbol	code		2463835						
ANR	2464003	Symbol	& dev -> permute		2463835						
ANR	2464004	Symbol	dev -> num_std_colorant_names		2463835						
ANR	2464005	Symbol	* scn		2463835						
ANR	2464006	Symbol	gdev_prn_get_params		2463835						
ANR	2464007	Symbol	dev -> permute		2463835						
ANR	2464008	Symbol	i		2463835						
ANR	2464009	Symbol	* * dev		2463835						
ANR	2464010	Symbol	& scna		2463835						
ANR	2464011	Symbol	& dev -> mode		2463835						
ANR	2464012	Symbol	param_write_name_array		2463835						
ANR	2464013	Symbol	pdev		2463835						
ANR	2464014	Symbol	plist		2463835						
ANR	2464015	Symbol	* i		2463835						
ANR	2464016	Symbol	dev		2463835						
ANR	2464017	Symbol	scna		2463835						
ANR	2464018	Symbol	* dev -> std_colorant_names		2463835						
ANR	2464019	Symbol	dev -> std_colorant_names		2463835						
ANR	2464020	Symbol	param_write_int		2463835						
ANR	2464021	Symbol	scn		2463835						
ANR	2464022	DeclStmt									
ANR	2464023	Decl							const char	const char * [ ]	DeviceCMYKComponents
ANR	2464024	DeclStmt									
ANR	2464025	Decl							const char	const char * [ ]	DeviceCMYComponents
ANR	2464026	DeclStmt									
ANR	2464027	Decl							const char	const char * [ ]	DeviceNComponents
ANR	2464028	Function	perm_set_color_model	415:0:12777:14086							
ANR	2464029	FunctionDef	"perm_set_color_model (gx_device_perm_t * dev , int mode , int permute)"		2464028	0					
ANR	2464030	CompoundStatement		417:0:12855:14086	2464028	0					
ANR	2464031	ExpressionStatement	dev -> mode = mode	418:4:12861:12877	2464028	0	True				
ANR	2464032	AssignmentExpression	dev -> mode = mode		2464028	0		=			
ANR	2464033	PtrMemberAccess	dev -> mode		2464028	0					
ANR	2464034	Identifier	dev		2464028	0					
ANR	2464035	Identifier	mode		2464028	1					
ANR	2464036	Identifier	mode		2464028	1					
ANR	2464037	ExpressionStatement	dev -> permute = permute	419:4:12883:12905	2464028	1	True				
ANR	2464038	AssignmentExpression	dev -> permute = permute		2464028	0		=			
ANR	2464039	PtrMemberAccess	dev -> permute		2464028	0					
ANR	2464040	Identifier	dev		2464028	0					
ANR	2464041	Identifier	permute		2464028	1					
ANR	2464042	Identifier	permute		2464028	1					
ANR	2464043	IfStatement	if ( mode == 0 && permute == 0 )		2464028	2					
ANR	2464044	Condition	mode == 0 && permute == 0	420:8:12915:12939	2464028	0	True				
ANR	2464045	AndExpression	mode == 0 && permute == 0		2464028	0		&&			
ANR	2464046	EqualityExpression	mode == 0		2464028	0		==			
ANR	2464047	Identifier	mode		2464028	0					
ANR	2464048	PrimaryExpression	0		2464028	1					
ANR	2464049	EqualityExpression	permute == 0		2464028	1		==			
ANR	2464050	Identifier	permute		2464028	0					
ANR	2464051	PrimaryExpression	0		2464028	1					
ANR	2464052	CompoundStatement		4:35:86:86	2464028	1					
ANR	2464053	ExpressionStatement	dev -> std_colorant_names = DeviceCMYKComponents	421:8:12952:12998	2464028	0	True				
ANR	2464054	AssignmentExpression	dev -> std_colorant_names = DeviceCMYKComponents		2464028	0		=			
ANR	2464055	PtrMemberAccess	dev -> std_colorant_names		2464028	0					
ANR	2464056	Identifier	dev		2464028	0					
ANR	2464057	Identifier	std_colorant_names		2464028	1					
ANR	2464058	Identifier	DeviceCMYKComponents		2464028	1					
ANR	2464059	ExpressionStatement	dev -> num_std_colorant_names = 4	422:8:13008:13039	2464028	1	True				
ANR	2464060	AssignmentExpression	dev -> num_std_colorant_names = 4		2464028	0		=			
ANR	2464061	PtrMemberAccess	dev -> num_std_colorant_names		2464028	0					
ANR	2464062	Identifier	dev		2464028	0					
ANR	2464063	Identifier	num_std_colorant_names		2464028	1					
ANR	2464064	PrimaryExpression	4		2464028	1					
ANR	2464065	ExpressionStatement	"dev -> color_info . cm_name = ""DeviceCMYK"""	423:8:13049:13087	2464028	2	True				
ANR	2464066	AssignmentExpression	"dev -> color_info . cm_name = ""DeviceCMYK"""		2464028	0		=			
ANR	2464067	MemberAccess	dev -> color_info . cm_name		2464028	0					
ANR	2464068	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464069	Identifier	dev		2464028	0					
ANR	2464070	Identifier	color_info		2464028	1					
ANR	2464071	Identifier	cm_name		2464028	1					
ANR	2464072	PrimaryExpression	"""DeviceCMYK"""		2464028	1					
ANR	2464073	ExpressionStatement	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE	424:8:13097:13153	2464028	3	True				
ANR	2464074	AssignmentExpression	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE		2464028	0		=			
ANR	2464075	MemberAccess	dev -> color_info . polarity		2464028	0					
ANR	2464076	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464077	Identifier	dev		2464028	0					
ANR	2464078	Identifier	color_info		2464028	1					
ANR	2464079	Identifier	polarity		2464028	1					
ANR	2464080	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		2464028	1					
ANR	2464081	ElseStatement	else		2464028	0					
ANR	2464082	IfStatement	if ( mode == 0 && permute == 1 )		2464028	0					
ANR	2464083	Condition	mode == 0 && permute == 1	425:15:13170:13194	2464028	0	True				
ANR	2464084	AndExpression	mode == 0 && permute == 1		2464028	0		&&			
ANR	2464085	EqualityExpression	mode == 0		2464028	0		==			
ANR	2464086	Identifier	mode		2464028	0					
ANR	2464087	PrimaryExpression	0		2464028	1					
ANR	2464088	EqualityExpression	permute == 1		2464028	1		==			
ANR	2464089	Identifier	permute		2464028	0					
ANR	2464090	PrimaryExpression	1		2464028	1					
ANR	2464091	CompoundStatement		9:42:341:341	2464028	1					
ANR	2464092	ExpressionStatement	dev -> std_colorant_names = DeviceNComponents	426:8:13207:13250	2464028	0	True				
ANR	2464093	AssignmentExpression	dev -> std_colorant_names = DeviceNComponents		2464028	0		=			
ANR	2464094	PtrMemberAccess	dev -> std_colorant_names		2464028	0					
ANR	2464095	Identifier	dev		2464028	0					
ANR	2464096	Identifier	std_colorant_names		2464028	1					
ANR	2464097	Identifier	DeviceNComponents		2464028	1					
ANR	2464098	ExpressionStatement	dev -> num_std_colorant_names = 6	427:8:13260:13291	2464028	1	True				
ANR	2464099	AssignmentExpression	dev -> num_std_colorant_names = 6		2464028	0		=			
ANR	2464100	PtrMemberAccess	dev -> num_std_colorant_names		2464028	0					
ANR	2464101	Identifier	dev		2464028	0					
ANR	2464102	Identifier	num_std_colorant_names		2464028	1					
ANR	2464103	PrimaryExpression	6		2464028	1					
ANR	2464104	ExpressionStatement	"dev -> color_info . cm_name = ""DeviceN"""	428:8:13301:13336	2464028	2	True				
ANR	2464105	AssignmentExpression	"dev -> color_info . cm_name = ""DeviceN"""		2464028	0		=			
ANR	2464106	MemberAccess	dev -> color_info . cm_name		2464028	0					
ANR	2464107	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464108	Identifier	dev		2464028	0					
ANR	2464109	Identifier	color_info		2464028	1					
ANR	2464110	Identifier	cm_name		2464028	1					
ANR	2464111	PrimaryExpression	"""DeviceN"""		2464028	1					
ANR	2464112	ExpressionStatement	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE	429:8:13346:13402	2464028	3	True				
ANR	2464113	AssignmentExpression	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE		2464028	0		=			
ANR	2464114	MemberAccess	dev -> color_info . polarity		2464028	0					
ANR	2464115	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464116	Identifier	dev		2464028	0					
ANR	2464117	Identifier	color_info		2464028	1					
ANR	2464118	Identifier	polarity		2464028	1					
ANR	2464119	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		2464028	1					
ANR	2464120	ElseStatement	else		2464028	0					
ANR	2464121	IfStatement	if ( mode == 1 && permute == 0 )		2464028	0					
ANR	2464122	Condition	mode == 1 && permute == 0	430:15:13419:13443	2464028	0	True				
ANR	2464123	AndExpression	mode == 1 && permute == 0		2464028	0		&&			
ANR	2464124	EqualityExpression	mode == 1		2464028	0		==			
ANR	2464125	Identifier	mode		2464028	0					
ANR	2464126	PrimaryExpression	1		2464028	1					
ANR	2464127	EqualityExpression	permute == 0		2464028	1		==			
ANR	2464128	Identifier	permute		2464028	0					
ANR	2464129	PrimaryExpression	0		2464028	1					
ANR	2464130	CompoundStatement		14:42:590:590	2464028	1					
ANR	2464131	ExpressionStatement	dev -> std_colorant_names = DeviceCMYComponents	431:8:13456:13501	2464028	0	True				
ANR	2464132	AssignmentExpression	dev -> std_colorant_names = DeviceCMYComponents		2464028	0		=			
ANR	2464133	PtrMemberAccess	dev -> std_colorant_names		2464028	0					
ANR	2464134	Identifier	dev		2464028	0					
ANR	2464135	Identifier	std_colorant_names		2464028	1					
ANR	2464136	Identifier	DeviceCMYComponents		2464028	1					
ANR	2464137	ExpressionStatement	dev -> num_std_colorant_names = 3	432:8:13511:13542	2464028	1	True				
ANR	2464138	AssignmentExpression	dev -> num_std_colorant_names = 3		2464028	0		=			
ANR	2464139	PtrMemberAccess	dev -> num_std_colorant_names		2464028	0					
ANR	2464140	Identifier	dev		2464028	0					
ANR	2464141	Identifier	num_std_colorant_names		2464028	1					
ANR	2464142	PrimaryExpression	3		2464028	1					
ANR	2464143	ExpressionStatement	"dev -> color_info . cm_name = ""DeviceCMY"""	433:8:13552:13589	2464028	2	True				
ANR	2464144	AssignmentExpression	"dev -> color_info . cm_name = ""DeviceCMY"""		2464028	0		=			
ANR	2464145	MemberAccess	dev -> color_info . cm_name		2464028	0					
ANR	2464146	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464147	Identifier	dev		2464028	0					
ANR	2464148	Identifier	color_info		2464028	1					
ANR	2464149	Identifier	cm_name		2464028	1					
ANR	2464150	PrimaryExpression	"""DeviceCMY"""		2464028	1					
ANR	2464151	ExpressionStatement	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE	434:8:13599:13655	2464028	3	True				
ANR	2464152	AssignmentExpression	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE		2464028	0		=			
ANR	2464153	MemberAccess	dev -> color_info . polarity		2464028	0					
ANR	2464154	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464155	Identifier	dev		2464028	0					
ANR	2464156	Identifier	color_info		2464028	1					
ANR	2464157	Identifier	polarity		2464028	1					
ANR	2464158	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		2464028	1					
ANR	2464159	ElseStatement	else		2464028	0					
ANR	2464160	IfStatement	if ( mode == 1 && permute == 1 )		2464028	0					
ANR	2464161	Condition	mode == 1 && permute == 1	435:15:13672:13696	2464028	0	True				
ANR	2464162	AndExpression	mode == 1 && permute == 1		2464028	0		&&			
ANR	2464163	EqualityExpression	mode == 1		2464028	0		==			
ANR	2464164	Identifier	mode		2464028	0					
ANR	2464165	PrimaryExpression	1		2464028	1					
ANR	2464166	EqualityExpression	permute == 1		2464028	1		==			
ANR	2464167	Identifier	permute		2464028	0					
ANR	2464168	PrimaryExpression	1		2464028	1					
ANR	2464169	CompoundStatement		19:42:843:843	2464028	1					
ANR	2464170	ExpressionStatement	dev -> std_colorant_names = DeviceNComponents	436:8:13709:13752	2464028	0	True				
ANR	2464171	AssignmentExpression	dev -> std_colorant_names = DeviceNComponents		2464028	0		=			
ANR	2464172	PtrMemberAccess	dev -> std_colorant_names		2464028	0					
ANR	2464173	Identifier	dev		2464028	0					
ANR	2464174	Identifier	std_colorant_names		2464028	1					
ANR	2464175	Identifier	DeviceNComponents		2464028	1					
ANR	2464176	ExpressionStatement	dev -> num_std_colorant_names = 6	437:8:13762:13793	2464028	1	True				
ANR	2464177	AssignmentExpression	dev -> num_std_colorant_names = 6		2464028	0		=			
ANR	2464178	PtrMemberAccess	dev -> num_std_colorant_names		2464028	0					
ANR	2464179	Identifier	dev		2464028	0					
ANR	2464180	Identifier	num_std_colorant_names		2464028	1					
ANR	2464181	PrimaryExpression	6		2464028	1					
ANR	2464182	ExpressionStatement	"dev -> color_info . cm_name = ""DeviceN"""	438:8:13803:13838	2464028	2	True				
ANR	2464183	AssignmentExpression	"dev -> color_info . cm_name = ""DeviceN"""		2464028	0		=			
ANR	2464184	MemberAccess	dev -> color_info . cm_name		2464028	0					
ANR	2464185	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464186	Identifier	dev		2464028	0					
ANR	2464187	Identifier	color_info		2464028	1					
ANR	2464188	Identifier	cm_name		2464028	1					
ANR	2464189	PrimaryExpression	"""DeviceN"""		2464028	1					
ANR	2464190	ExpressionStatement	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE	439:8:13848:13904	2464028	3	True				
ANR	2464191	AssignmentExpression	dev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE		2464028	0		=			
ANR	2464192	MemberAccess	dev -> color_info . polarity		2464028	0					
ANR	2464193	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464194	Identifier	dev		2464028	0					
ANR	2464195	Identifier	color_info		2464028	1					
ANR	2464196	Identifier	polarity		2464028	1					
ANR	2464197	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		2464028	1					
ANR	2464198	ElseStatement	else		2464028	0					
ANR	2464199	CompoundStatement		24:11:1061:1061	2464028	0					
ANR	2464200	ReturnStatement	return - 1 ;	441:8:13927:13936	2464028	0	True				
ANR	2464201	UnaryOperationExpression	- 1		2464028	0					
ANR	2464202	UnaryOperator	-		2464028	0					
ANR	2464203	PrimaryExpression	1		2464028	1					
ANR	2464204	ExpressionStatement	dev -> color_info . num_components = dev -> num_std_colorant_names	443:4:13948:14008	2464028	3	True				
ANR	2464205	AssignmentExpression	dev -> color_info . num_components = dev -> num_std_colorant_names		2464028	0		=			
ANR	2464206	MemberAccess	dev -> color_info . num_components		2464028	0					
ANR	2464207	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464208	Identifier	dev		2464028	0					
ANR	2464209	Identifier	color_info		2464028	1					
ANR	2464210	Identifier	num_components		2464028	1					
ANR	2464211	PtrMemberAccess	dev -> num_std_colorant_names		2464028	1					
ANR	2464212	Identifier	dev		2464028	0					
ANR	2464213	Identifier	num_std_colorant_names		2464028	1					
ANR	2464214	ExpressionStatement	dev -> color_info . depth = 8 * dev -> num_std_colorant_names	444:4:14014:14069	2464028	4	True				
ANR	2464215	AssignmentExpression	dev -> color_info . depth = 8 * dev -> num_std_colorant_names		2464028	0		=			
ANR	2464216	MemberAccess	dev -> color_info . depth		2464028	0					
ANR	2464217	PtrMemberAccess	dev -> color_info		2464028	0					
ANR	2464218	Identifier	dev		2464028	0					
ANR	2464219	Identifier	color_info		2464028	1					
ANR	2464220	Identifier	depth		2464028	1					
ANR	2464221	MultiplicativeExpression	8 * dev -> num_std_colorant_names		2464028	1		*			
ANR	2464222	PrimaryExpression	8		2464028	0					
ANR	2464223	PtrMemberAccess	dev -> num_std_colorant_names		2464028	1					
ANR	2464224	Identifier	dev		2464028	0					
ANR	2464225	Identifier	num_std_colorant_names		2464028	1					
ANR	2464226	ReturnStatement	return 0 ;	446:4:14076:14084	2464028	5	True				
ANR	2464227	PrimaryExpression	0		2464028	0					
ANR	2464228	ReturnType	static int		2464028	1					
ANR	2464229	Identifier	perm_set_color_model		2464028	2					
ANR	2464230	ParameterList	"gx_device_perm_t * dev , int mode , int permute"		2464028	3					
ANR	2464231	Parameter	gx_device_perm_t * dev	416:21:12809:12829	2464028	0	True				
ANR	2464232	ParameterType	gx_device_perm_t *		2464028	0					
ANR	2464233	Identifier	dev		2464028	1					
ANR	2464234	Parameter	int mode	416:44:12832:12839	2464028	1	True				
ANR	2464235	ParameterType	int		2464028	0					
ANR	2464236	Identifier	mode		2464028	1					
ANR	2464237	Parameter	int permute	416:54:12842:12852	2464028	2	True				
ANR	2464238	ParameterType	int		2464028	0					
ANR	2464239	Identifier	permute		2464028	1					
ANR	2464240	CFGEntryNode	ENTRY		2464028		True				
ANR	2464241	CFGExitNode	EXIT		2464028		True				
ANR	2464242	Symbol	* dev		2464028						
ANR	2464243	Symbol	DeviceCMYComponents		2464028						
ANR	2464244	Symbol	dev -> color_info . num_components		2464028						
ANR	2464245	Symbol	dev -> num_std_colorant_names		2464028						
ANR	2464246	Symbol	dev -> permute		2464028						
ANR	2464247	Symbol	dev -> color_info		2464028						
ANR	2464248	Symbol	dev -> color_info . depth		2464028						
ANR	2464249	Symbol	mode		2464028						
ANR	2464250	Symbol	dev -> color_info . cm_name		2464028						
ANR	2464251	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		2464028						
ANR	2464252	Symbol	DeviceNComponents		2464028						
ANR	2464253	Symbol	dev		2464028						
ANR	2464254	Symbol	dev -> color_info . polarity		2464028						
ANR	2464255	Symbol	dev -> std_colorant_names		2464028						
ANR	2464256	Symbol	permute		2464028						
ANR	2464257	Symbol	dev -> mode		2464028						
ANR	2464258	Symbol	DeviceCMYKComponents		2464028						
ANR	2464259	Function	perm_put_params	449:0:14089:15020							
ANR	2464260	FunctionDef	"perm_put_params (gx_device * pdev , gs_param_list * plist)"		2464259	0					
ANR	2464261	CompoundStatement		451:0:14155:15020	2464259	0					
ANR	2464262	Statement	gx_device_perm_t	452:4:14161:14176	2464259	0	True				
ANR	2464263	Statement	*	452:21:14178:14178	2464259	1	True				
ANR	2464264	Statement	const	452:23:14180:14184	2464259	2	True				
ANR	2464265	ExpressionStatement	dev = ( gx_device_perm_t * ) pdev	452:29:14186:14216	2464259	3	True				
ANR	2464266	AssignmentExpression	dev = ( gx_device_perm_t * ) pdev		2464259	0		=			
ANR	2464267	Identifier	dev		2464259	0					
ANR	2464268	CastExpression	( gx_device_perm_t * ) pdev		2464259	1					
ANR	2464269	CastTarget	gx_device_perm_t *		2464259	0					
ANR	2464270	Identifier	pdev		2464259	1					
ANR	2464271	IdentifierDeclStatement	gx_device_color_info save_info ;	453:4:14222:14252	2464259	4	True				
ANR	2464272	IdentifierDecl	save_info		2464259	0					
ANR	2464273	IdentifierDeclType	gx_device_color_info		2464259	0					
ANR	2464274	Identifier	save_info		2464259	1					
ANR	2464275	IdentifierDeclStatement	int code ;	454:4:14258:14266	2464259	5	True				
ANR	2464276	IdentifierDecl	code		2464259	0					
ANR	2464277	IdentifierDeclType	int		2464259	0					
ANR	2464278	Identifier	code		2464259	1					
ANR	2464279	IdentifierDeclStatement	int new_permute = dev -> permute ;	455:4:14272:14302	2464259	6	True				
ANR	2464280	IdentifierDecl	new_permute = dev -> permute		2464259	0					
ANR	2464281	IdentifierDeclType	int		2464259	0					
ANR	2464282	Identifier	new_permute		2464259	1					
ANR	2464283	AssignmentExpression	new_permute = dev -> permute		2464259	2		=			
ANR	2464284	Identifier	new_permute		2464259	0					
ANR	2464285	PtrMemberAccess	dev -> permute		2464259	1					
ANR	2464286	Identifier	dev		2464259	0					
ANR	2464287	Identifier	permute		2464259	1					
ANR	2464288	IdentifierDeclStatement	int new_mode = dev -> mode ;	456:4:14308:14332	2464259	7	True				
ANR	2464289	IdentifierDecl	new_mode = dev -> mode		2464259	0					
ANR	2464290	IdentifierDeclType	int		2464259	0					
ANR	2464291	Identifier	new_mode		2464259	1					
ANR	2464292	AssignmentExpression	new_mode = dev -> mode		2464259	2		=			
ANR	2464293	Identifier	new_mode		2464259	0					
ANR	2464294	PtrMemberAccess	dev -> mode		2464259	1					
ANR	2464295	Identifier	dev		2464259	0					
ANR	2464296	Identifier	mode		2464259	1					
ANR	2464297	ExpressionStatement	"code = param_read_int ( plist , ""Permute"" , & new_permute )"	458:4:14339:14392	2464259	8	True				
ANR	2464298	AssignmentExpression	"code = param_read_int ( plist , ""Permute"" , & new_permute )"		2464259	0		=			
ANR	2464299	Identifier	code		2464259	0					
ANR	2464300	CallExpression	"param_read_int ( plist , ""Permute"" , & new_permute )"		2464259	1					
ANR	2464301	Callee	param_read_int		2464259	0					
ANR	2464302	Identifier	param_read_int		2464259	0					
ANR	2464303	ArgumentList	plist		2464259	1					
ANR	2464304	Argument	plist		2464259	0					
ANR	2464305	Identifier	plist		2464259	0					
ANR	2464306	Argument	"""Permute"""		2464259	1					
ANR	2464307	PrimaryExpression	"""Permute"""		2464259	0					
ANR	2464308	Argument	& new_permute		2464259	2					
ANR	2464309	UnaryOperationExpression	& new_permute		2464259	0					
ANR	2464310	UnaryOperator	&		2464259	0					
ANR	2464311	Identifier	new_permute		2464259	1					
ANR	2464312	IfStatement	if ( code < 0 )		2464259	9					
ANR	2464313	Condition	code < 0	459:8:14402:14409	2464259	0	True				
ANR	2464314	RelationalExpression	code < 0		2464259	0		<			
ANR	2464315	Identifier	code		2464259	0					
ANR	2464316	PrimaryExpression	0		2464259	1					
ANR	2464317	ReturnStatement	return code ;	460:8:14420:14431	2464259	1	True				
ANR	2464318	Identifier	code		2464259	0					
ANR	2464319	ExpressionStatement	"code = param_read_int ( plist , ""Mode"" , & new_mode )"	461:4:14437:14484	2464259	10	True				
ANR	2464320	AssignmentExpression	"code = param_read_int ( plist , ""Mode"" , & new_mode )"		2464259	0		=			
ANR	2464321	Identifier	code		2464259	0					
ANR	2464322	CallExpression	"param_read_int ( plist , ""Mode"" , & new_mode )"		2464259	1					
ANR	2464323	Callee	param_read_int		2464259	0					
ANR	2464324	Identifier	param_read_int		2464259	0					
ANR	2464325	ArgumentList	plist		2464259	1					
ANR	2464326	Argument	plist		2464259	0					
ANR	2464327	Identifier	plist		2464259	0					
ANR	2464328	Argument	"""Mode"""		2464259	1					
ANR	2464329	PrimaryExpression	"""Mode"""		2464259	0					
ANR	2464330	Argument	& new_mode		2464259	2					
ANR	2464331	UnaryOperationExpression	& new_mode		2464259	0					
ANR	2464332	UnaryOperator	&		2464259	0					
ANR	2464333	Identifier	new_mode		2464259	1					
ANR	2464334	IfStatement	if ( code < 0 )		2464259	11					
ANR	2464335	Condition	code < 0	462:8:14494:14501	2464259	0	True				
ANR	2464336	RelationalExpression	code < 0		2464259	0		<			
ANR	2464337	Identifier	code		2464259	0					
ANR	2464338	PrimaryExpression	0		2464259	1					
ANR	2464339	ReturnStatement	return code ;	463:8:14512:14523	2464259	1	True				
ANR	2464340	Identifier	code		2464259	0					
ANR	2464341	IfStatement	if ( new_mode < 0 || new_mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] ) )		2464259	12					
ANR	2464342	Condition	new_mode < 0 || new_mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )	464:8:14533:14620	2464259	0	True				
ANR	2464343	OrExpression	new_mode < 0 || new_mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )		2464259	0		||			
ANR	2464344	RelationalExpression	new_mode < 0		2464259	0		<			
ANR	2464345	Identifier	new_mode		2464259	0					
ANR	2464346	PrimaryExpression	0		2464259	1					
ANR	2464347	RelationalExpression	new_mode >= sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )		2464259	1		>=			
ANR	2464348	Identifier	new_mode		2464259	0					
ANR	2464349	MultiplicativeExpression	sizeof ( perm_cmapping_procs ) / sizeof ( perm_cmapping_procs [ 0 ] )		2464259	1		/			
ANR	2464350	SizeofExpression	sizeof ( perm_cmapping_procs )		2464259	0					
ANR	2464351	Sizeof	sizeof		2464259	0					
ANR	2464352	SizeofOperand	perm_cmapping_procs		2464259	1					
ANR	2464353	SizeofExpression	sizeof ( perm_cmapping_procs [ 0 ] )		2464259	1					
ANR	2464354	Sizeof	sizeof		2464259	0					
ANR	2464355	ArrayIndexing	perm_cmapping_procs [ 0 ]		2464259	1					
ANR	2464356	Identifier	perm_cmapping_procs		2464259	0					
ANR	2464357	PrimaryExpression	0		2464259	1					
ANR	2464358	CompoundStatement		14:98:467:467	2464259	1					
ANR	2464359	ExpressionStatement	"dmlprintf ( pdev -> memory , ""rangecheck!\\n"" )"	465:8:14633:14673	2464259	0	True				
ANR	2464360	CallExpression	"dmlprintf ( pdev -> memory , ""rangecheck!\\n"" )"		2464259	0					
ANR	2464361	Callee	dmlprintf		2464259	0					
ANR	2464362	Identifier	dmlprintf		2464259	0					
ANR	2464363	ArgumentList	pdev -> memory		2464259	1					
ANR	2464364	Argument	pdev -> memory		2464259	0					
ANR	2464365	PtrMemberAccess	pdev -> memory		2464259	0					
ANR	2464366	Identifier	pdev		2464259	0					
ANR	2464367	Identifier	memory		2464259	1					
ANR	2464368	Argument	"""rangecheck!\\n"""		2464259	1					
ANR	2464369	PrimaryExpression	"""rangecheck!\\n"""		2464259	0					
ANR	2464370	ExpressionStatement	return_error ( gs_error_rangecheck )	466:8:14683:14716	2464259	1	True				
ANR	2464371	CallExpression	return_error ( gs_error_rangecheck )		2464259	0					
ANR	2464372	Callee	return_error		2464259	0					
ANR	2464373	Identifier	return_error		2464259	0					
ANR	2464374	ArgumentList	gs_error_rangecheck		2464259	1					
ANR	2464375	Argument	gs_error_rangecheck		2464259	0					
ANR	2464376	Identifier	gs_error_rangecheck		2464259	0					
ANR	2464377	ExpressionStatement	dev -> permute = new_permute	468:4:14728:14754	2464259	13	True				
ANR	2464378	AssignmentExpression	dev -> permute = new_permute		2464259	0		=			
ANR	2464379	PtrMemberAccess	dev -> permute		2464259	0					
ANR	2464380	Identifier	dev		2464259	0					
ANR	2464381	Identifier	permute		2464259	1					
ANR	2464382	Identifier	new_permute		2464259	1					
ANR	2464383	ExpressionStatement	dev -> mode = new_mode	469:4:14760:14780	2464259	14	True				
ANR	2464384	AssignmentExpression	dev -> mode = new_mode		2464259	0		=			
ANR	2464385	PtrMemberAccess	dev -> mode		2464259	0					
ANR	2464386	Identifier	dev		2464259	0					
ANR	2464387	Identifier	mode		2464259	1					
ANR	2464388	Identifier	new_mode		2464259	1					
ANR	2464389	ExpressionStatement	save_info = pdev -> color_info	470:4:14786:14814	2464259	15	True				
ANR	2464390	AssignmentExpression	save_info = pdev -> color_info		2464259	0		=			
ANR	2464391	Identifier	save_info		2464259	0					
ANR	2464392	PtrMemberAccess	pdev -> color_info		2464259	1					
ANR	2464393	Identifier	pdev		2464259	0					
ANR	2464394	Identifier	color_info		2464259	1					
ANR	2464395	ExpressionStatement	"code = perm_set_color_model ( dev , dev -> mode , dev -> permute )"	471:4:14820:14877	2464259	16	True				
ANR	2464396	AssignmentExpression	"code = perm_set_color_model ( dev , dev -> mode , dev -> permute )"		2464259	0		=			
ANR	2464397	Identifier	code		2464259	0					
ANR	2464398	CallExpression	"perm_set_color_model ( dev , dev -> mode , dev -> permute )"		2464259	1					
ANR	2464399	Callee	perm_set_color_model		2464259	0					
ANR	2464400	Identifier	perm_set_color_model		2464259	0					
ANR	2464401	ArgumentList	dev		2464259	1					
ANR	2464402	Argument	dev		2464259	0					
ANR	2464403	Identifier	dev		2464259	0					
ANR	2464404	Argument	dev -> mode		2464259	1					
ANR	2464405	PtrMemberAccess	dev -> mode		2464259	0					
ANR	2464406	Identifier	dev		2464259	0					
ANR	2464407	Identifier	mode		2464259	1					
ANR	2464408	Argument	dev -> permute		2464259	2					
ANR	2464409	PtrMemberAccess	dev -> permute		2464259	0					
ANR	2464410	Identifier	dev		2464259	0					
ANR	2464411	Identifier	permute		2464259	1					
ANR	2464412	IfStatement	if ( code >= 0 )		2464259	17					
ANR	2464413	Condition	code >= 0	472:8:14887:14895	2464259	0	True				
ANR	2464414	RelationalExpression	code >= 0		2464259	0		>=			
ANR	2464415	Identifier	code		2464259	0					
ANR	2464416	PrimaryExpression	0		2464259	1					
ANR	2464417	ExpressionStatement	"code = gdev_prn_put_params ( pdev , plist )"	473:8:14906:14945	2464259	1	True				
ANR	2464418	AssignmentExpression	"code = gdev_prn_put_params ( pdev , plist )"		2464259	0		=			
ANR	2464419	Identifier	code		2464259	0					
ANR	2464420	CallExpression	"gdev_prn_put_params ( pdev , plist )"		2464259	1					
ANR	2464421	Callee	gdev_prn_put_params		2464259	0					
ANR	2464422	Identifier	gdev_prn_put_params		2464259	0					
ANR	2464423	ArgumentList	pdev		2464259	1					
ANR	2464424	Argument	pdev		2464259	0					
ANR	2464425	Identifier	pdev		2464259	0					
ANR	2464426	Argument	plist		2464259	1					
ANR	2464427	Identifier	plist		2464259	0					
ANR	2464428	IfStatement	if ( code < 0 )		2464259	18					
ANR	2464429	Condition	code < 0	474:8:14955:14962	2464259	0	True				
ANR	2464430	RelationalExpression	code < 0		2464259	0		<			
ANR	2464431	Identifier	code		2464259	0					
ANR	2464432	PrimaryExpression	0		2464259	1					
ANR	2464433	ExpressionStatement	pdev -> color_info = save_info	475:8:14973:15001	2464259	1	True				
ANR	2464434	AssignmentExpression	pdev -> color_info = save_info		2464259	0		=			
ANR	2464435	PtrMemberAccess	pdev -> color_info		2464259	0					
ANR	2464436	Identifier	pdev		2464259	0					
ANR	2464437	Identifier	color_info		2464259	1					
ANR	2464438	Identifier	save_info		2464259	1					
ANR	2464439	ReturnStatement	return code ;	476:4:15007:15018	2464259	19	True				
ANR	2464440	Identifier	code		2464259	0					
ANR	2464441	ReturnType	static int		2464259	1					
ANR	2464442	Identifier	perm_put_params		2464259	2					
ANR	2464443	ParameterList	"gx_device * pdev , gs_param_list * plist"		2464259	3					
ANR	2464444	Parameter	gx_device * pdev	450:16:14116:14130	2464259	0	True				
ANR	2464445	ParameterType	gx_device *		2464259	0					
ANR	2464446	Identifier	pdev		2464259	1					
ANR	2464447	Parameter	gs_param_list * plist	450:33:14133:14152	2464259	1	True				
ANR	2464448	ParameterType	gs_param_list *		2464259	0					
ANR	2464449	Identifier	plist		2464259	1					
ANR	2464450	CFGEntryNode	ENTRY		2464259		True				
ANR	2464451	CFGExitNode	EXIT		2464259		True				
ANR	2464452	Symbol	* dev		2464259						
ANR	2464453	Symbol	code		2464259						
ANR	2464454	Symbol	save_info		2464259						
ANR	2464455	Symbol	gs_error_rangecheck		2464259						
ANR	2464456	Symbol	dev -> permute		2464259						
ANR	2464457	Symbol	pdev -> color_info		2464259						
ANR	2464458	Symbol	gdev_prn_put_params		2464259						
ANR	2464459	Symbol	perm_set_color_model		2464259						
ANR	2464460	Symbol	& new_permute		2464259						
ANR	2464461	Symbol	pdev		2464259						
ANR	2464462	Symbol	plist		2464259						
ANR	2464463	Symbol	param_read_int		2464259						
ANR	2464464	Symbol	dev		2464259						
ANR	2464465	Symbol	& new_mode		2464259						
ANR	2464466	Symbol	* perm_cmapping_procs		2464259						
ANR	2464467	Symbol	pdev -> memory		2464259						
ANR	2464468	Symbol	new_mode		2464259						
ANR	2464469	Symbol	* pdev		2464259						
ANR	2464470	Symbol	dev -> mode		2464259						
ANR	2464471	Symbol	perm_cmapping_procs		2464259						
ANR	2464472	Symbol	new_permute		2464259						
