command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8854770	File	data/converged/CVE-2018-16863_ghostpdl/psi_igc.c								
ANR	8854771	DeclStmt									
ANR	8854772	Decl							const bool	const bool	I_FORCE_GLOBAL_GC
ANR	8854773	DeclStmt									
ANR	8854774	Decl							const bool	const bool	I_BYPASS_GC
ANR	8854775	ClassDef	<unnamed>	42:8:1236:1304							
ANR	8854776	DeclStmt									
ANR	8854777	Decl							void	void *	ptr
ANR	8854778	DeclStmt									
ANR	8854779	Decl							uint	uint	index
ANR	8854780	DeclStmt									
ANR	8854781	Decl							bool	bool	is_refs
ANR	8854782	DeclStmt									
ANR	8854783	Decl									ms_entry
ANR	8854784	DeclStmt									
ANR	8854785	Decl							struct gc_mark_stack_s	struct gc_mark_stack_s	gc_mark_stack
ANR	8854786	ClassDef	gc_mark_stack_s	52:0:1517:1687							
ANR	8854787	DeclStmt									
ANR	8854788	Decl							gc_mark_stack	gc_mark_stack *	prev
ANR	8854789	DeclStmt									
ANR	8854790	Decl							gc_mark_stack	gc_mark_stack *	next
ANR	8854791	DeclStmt									
ANR	8854792	Decl							uint	uint	count
ANR	8854793	DeclStmt									
ANR	8854794	Decl							bool	bool	on_heap
ANR	8854795	DeclStmt									
ANR	8854796	Decl							ms_entry	ms_entry [ 1 ]	entries
ANR	8854797	DeclStmt									
ANR	8854798	Decl							void	"void ( gc_mark_stack * , uint )"	gc_init_mark_stack
ANR	8854799	DeclStmt									
ANR	8854800	Decl							void	"void ( const gs_memory_t * mem , clump_t * )"	gc_objects_clear_marks
ANR	8854801	DeclStmt									
ANR	8854802	Decl							void	"void ( name_table * , op_array_table * , op_array_table * )"	gc_unmark_names
ANR	8854803	DeclStmt									
ANR	8854804	Decl							int	"int ( gs_gc_root_t * , gc_state_t * , gc_mark_stack * )"	gc_trace
ANR	8854805	DeclStmt									
ANR	8854806	Decl							int	"int ( clump_t * , gc_state_t * , gc_mark_stack * )"	gc_rescan_clump
ANR	8854807	DeclStmt									
ANR	8854808	Decl							int	"int ( const gs_memory_t * mem , clump_t * , gc_state_t * , gc_mark_stack * )"	gc_trace_clump
ANR	8854809	DeclStmt									
ANR	8854810	Decl							bool	bool ( gc_state_t * )	gc_trace_finish
ANR	8854811	DeclStmt									
ANR	8854812	Decl							void	void ( clump_t * )	gc_clear_reloc
ANR	8854813	DeclStmt									
ANR	8854814	Decl							void	"void ( gc_state_t * gcst , clump_t * )"	gc_objects_set_reloc
ANR	8854815	DeclStmt									
ANR	8854816	Decl							void	"void ( clump_t * , gs_ref_memory_t * , gc_state_t * )"	gc_do_reloc
ANR	8854817	DeclStmt									
ANR	8854818	Decl							void	"void ( clump_t * , gc_state_t * )"	gc_objects_compact
ANR	8854819	DeclStmt									
ANR	8854820	Decl							void	void ( gs_ref_memory_t * )	gc_free_empty_clumps
ANR	8854821	DeclStmt									
ANR	8854822	Decl							const gc_procs_with_refs_t	const gc_procs_with_refs_t	igc_procs
ANR	8854823	DeclStmt									
ANR	8854824	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_struct_procs
ANR	8854825	DeclStmt									
ANR	8854826	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_string_procs
ANR	8854827	DeclStmt									
ANR	8854828	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_const_string_procs
ANR	8854829	DeclStmt									
ANR	8854830	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_ref_procs
ANR	8854831	DeclStmt									
ANR	8854832	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_name_index_procs
ANR	8854833	Function	end_phase	123:0:4529:4761							
ANR	8854834	FunctionDef	"end_phase (const gs_memory_t * mem , const char * str)"		8854833	0					
ANR	8854835	CompoundStatement		125:0:4592:4761	8854833	0					
ANR	8854836	IfStatement	if ( gs_debug_c ( '6' ) )		8854833	0					
ANR	8854837	Condition	gs_debug_c ( '6' )	126:8:4602:4616	8854833	0	True				
ANR	8854838	CallExpression	gs_debug_c ( '6' )		8854833	0					
ANR	8854839	Callee	gs_debug_c		8854833	0					
ANR	8854840	Identifier	gs_debug_c		8854833	0					
ANR	8854841	ArgumentList	'6'		8854833	1					
ANR	8854842	Argument	'6'		8854833	0					
ANR	8854843	PrimaryExpression	'6'		8854833	0					
ANR	8854844	CompoundStatement		2:25:26:26	8854833	1					
ANR	8854845	ExpressionStatement	"dmlprintf1 ( mem , ""[6]---------------- end %s ----------------\\n"" , ( const char * ) str )"	127:8:4629:4731	8854833	0	True				
ANR	8854846	CallExpression	"dmlprintf1 ( mem , ""[6]---------------- end %s ----------------\\n"" , ( const char * ) str )"		8854833	0					
ANR	8854847	Callee	dmlprintf1		8854833	0					
ANR	8854848	Identifier	dmlprintf1		8854833	0					
ANR	8854849	ArgumentList	mem		8854833	1					
ANR	8854850	Argument	mem		8854833	0					
ANR	8854851	Identifier	mem		8854833	0					
ANR	8854852	Argument	"""[6]---------------- end %s ----------------\\n"""		8854833	1					
ANR	8854853	PrimaryExpression	"""[6]---------------- end %s ----------------\\n"""		8854833	0					
ANR	8854854	Argument	( const char * ) str		8854833	2					
ANR	8854855	CastExpression	( const char * ) str		8854833	0					
ANR	8854856	CastTarget	const char *		8854833	0					
ANR	8854857	Identifier	str		8854833	1					
ANR	8854858	ExpressionStatement	dmflush ( mem )	129:8:4741:4753	8854833	1	True				
ANR	8854859	CallExpression	dmflush ( mem )		8854833	0					
ANR	8854860	Callee	dmflush		8854833	0					
ANR	8854861	Identifier	dmflush		8854833	0					
ANR	8854862	ArgumentList	mem		8854833	1					
ANR	8854863	Argument	mem		8854833	0					
ANR	8854864	Identifier	mem		8854833	0					
ANR	8854865	ReturnType	static void		8854833	1					
ANR	8854866	Identifier	end_phase		8854833	2					
ANR	8854867	ParameterList	"const gs_memory_t * mem , const char * str"		8854833	3					
ANR	8854868	Parameter	const gs_memory_t * mem	124:10:4551:4572	8854833	0	True				
ANR	8854869	ParameterType	const gs_memory_t *		8854833	0					
ANR	8854870	Identifier	mem		8854833	1					
ANR	8854871	Parameter	const char * str	124:34:4575:4589	8854833	1	True				
ANR	8854872	ParameterType	const char *		8854833	0					
ANR	8854873	Identifier	str		8854833	1					
ANR	8854874	CFGEntryNode	ENTRY		8854833		True				
ANR	8854875	CFGExitNode	EXIT		8854833		True				
ANR	8854876	Symbol	str		8854833						
ANR	8854877	Symbol	mem		8854833						
ANR	8854878	Symbol	gs_debug_c		8854833						
ANR	8854879	Function	depth_dots	133:0:4822:5110							
ANR	8854880	FunctionDef	"depth_dots (const ms_entry * sp , const gc_mark_stack * pms)"		8854879	0					
ANR	8854881	CompoundStatement		135:0:4901:5110	8854879	0					
ANR	8854882	IdentifierDeclStatement	int depth = sp - pms -> entries - 1 ;	136:4:4907:4940	8854879	0	True				
ANR	8854883	IdentifierDecl	depth = sp - pms -> entries - 1		8854879	0					
ANR	8854884	IdentifierDeclType	int		8854879	0					
ANR	8854885	Identifier	depth		8854879	1					
ANR	8854886	AssignmentExpression	depth = sp - pms -> entries - 1		8854879	2		=			
ANR	8854887	Identifier	depth		8854879	0					
ANR	8854888	AdditiveExpression	sp - pms -> entries - 1		8854879	1		-			
ANR	8854889	Identifier	sp		8854879	0					
ANR	8854890	AdditiveExpression	pms -> entries - 1		8854879	1		-			
ANR	8854891	PtrMemberAccess	pms -> entries		8854879	0					
ANR	8854892	Identifier	pms		8854879	0					
ANR	8854893	Identifier	entries		8854879	1					
ANR	8854894	PrimaryExpression	1		8854879	1					
ANR	8854895	IdentifierDeclStatement	const gc_mark_stack * pss = pms ;	137:4:4946:4976	8854879	1	True				
ANR	8854896	IdentifierDecl	* pss = pms		8854879	0					
ANR	8854897	IdentifierDeclType	const gc_mark_stack *		8854879	0					
ANR	8854898	Identifier	pss		8854879	1					
ANR	8854899	AssignmentExpression	* pss = pms		8854879	2		=			
ANR	8854900	Identifier	pms		8854879	0					
ANR	8854901	Identifier	pms		8854879	1					
ANR	8854902	WhileStatement	while ( ( pss = pss -> prev ) != 0 )		8854879	2					
ANR	8854903	Condition	( pss = pss -> prev ) != 0	139:11:4990:5011	8854879	0	True				
ANR	8854904	EqualityExpression	( pss = pss -> prev ) != 0		8854879	0		!=			
ANR	8854905	AssignmentExpression	pss = pss -> prev		8854879	0		=			
ANR	8854906	Identifier	pss		8854879	0					
ANR	8854907	PtrMemberAccess	pss -> prev		8854879	1					
ANR	8854908	Identifier	pss		8854879	0					
ANR	8854909	Identifier	prev		8854879	1					
ANR	8854910	PrimaryExpression	0		8854879	1					
ANR	8854911	ExpressionStatement	depth += pss -> count - 1	140:8:5022:5045	8854879	1	True				
ANR	8854912	AssignmentExpression	depth += pss -> count - 1		8854879	0		+=			
ANR	8854913	Identifier	depth		8854879	0					
ANR	8854914	AdditiveExpression	pss -> count - 1		8854879	1		-			
ANR	8854915	PtrMemberAccess	pss -> count		8854879	0					
ANR	8854916	Identifier	pss		8854879	0					
ANR	8854917	Identifier	count		8854879	1					
ANR	8854918	PrimaryExpression	1		8854879	1					
ANR	8854919	ReturnStatement	return depth_dots_string + ( depth >= 10 ? 0 : 10 - depth ) ;	141:4:5051:5108	8854879	3	True				
ANR	8854920	AdditiveExpression	depth_dots_string + ( depth >= 10 ? 0 : 10 - depth )		8854879	0		+			
ANR	8854921	Identifier	depth_dots_string		8854879	0					
ANR	8854922	ConditionalExpression	depth >= 10 ? 0 : 10 - depth		8854879	1					
ANR	8854923	Condition	depth >= 10		8854879	0					
ANR	8854924	RelationalExpression	depth >= 10		8854879	0		>=			
ANR	8854925	Identifier	depth		8854879	0					
ANR	8854926	PrimaryExpression	10		8854879	1					
ANR	8854927	PrimaryExpression	0		8854879	1					
ANR	8854928	AdditiveExpression	10 - depth		8854879	2		-			
ANR	8854929	PrimaryExpression	10		8854879	0					
ANR	8854930	Identifier	depth		8854879	1					
ANR	8854931	ReturnType	static const char *		8854879	1					
ANR	8854932	Identifier	depth_dots		8854879	2					
ANR	8854933	ParameterList	"const ms_entry * sp , const gc_mark_stack * pms"		8854879	3					
ANR	8854934	Parameter	const ms_entry * sp	134:11:4853:4871	8854879	0	True				
ANR	8854935	ParameterType	const ms_entry *		8854879	0					
ANR	8854936	Identifier	sp		8854879	1					
ANR	8854937	Parameter	const gc_mark_stack * pms	134:32:4874:4898	8854879	1	True				
ANR	8854938	ParameterType	const gc_mark_stack *		8854879	0					
ANR	8854939	Identifier	pms		8854879	1					
ANR	8854940	CFGEntryNode	ENTRY		8854879		True				
ANR	8854941	CFGExitNode	EXIT		8854879		True				
ANR	8854942	Symbol	* pms		8854879						
ANR	8854943	Symbol	pss		8854879						
ANR	8854944	Symbol	pms -> entries		8854879						
ANR	8854945	Symbol	depth_dots_string		8854879						
ANR	8854946	Symbol	depth		8854879						
ANR	8854947	Symbol	pms		8854879						
ANR	8854948	Symbol	pss -> prev		8854879						
ANR	8854949	Symbol	pss -> count		8854879						
ANR	8854950	Symbol	* pss		8854879						
ANR	8854951	Symbol	sp		8854879						
ANR	8854952	Function	gc_validate_spaces	143:0:5112:5362							
ANR	8854953	FunctionDef	"gc_validate_spaces (gs_ref_memory_t * * spaces , int max_space , gc_state_t * gcst)"		8854952	0					
ANR	8854954	CompoundStatement		145:0:5202:5362	8854952	0					
ANR	8854955	IdentifierDeclStatement	int i ;	146:4:5208:5213	8854952	0	True				
ANR	8854956	IdentifierDecl	i		8854952	0					
ANR	8854957	IdentifierDeclType	int		8854952	0					
ANR	8854958	Identifier	i		8854952	1					
ANR	8854959	IdentifierDeclStatement	gs_ref_memory_t * mem ;	147:4:5219:5239	8854952	1	True				
ANR	8854960	IdentifierDecl	* mem		8854952	0					
ANR	8854961	IdentifierDeclType	gs_ref_memory_t *		8854952	0					
ANR	8854962	Identifier	mem		8854952	1					
ANR	8854963	ForStatement	for ( i = 1 ; i <= max_space ; ++ i )		8854952	2					
ANR	8854964	ForInit	i = 1 ;	149:9:5251:5256	8854952	0	True				
ANR	8854965	AssignmentExpression	i = 1		8854952	0		=			
ANR	8854966	Identifier	i		8854952	0					
ANR	8854967	PrimaryExpression	1		8854952	1					
ANR	8854968	Condition	i <= max_space	149:16:5258:5271	8854952	1	True				
ANR	8854969	RelationalExpression	i <= max_space		8854952	0		<=			
ANR	8854970	Identifier	i		8854952	0					
ANR	8854971	Identifier	max_space		8854952	1					
ANR	8854972	UnaryExpression	++ i	149:32:5274:5276	8854952	2	True				
ANR	8854973	IncDec	++		8854952	0					
ANR	8854974	Identifier	i		8854952	1					
ANR	8854975	IfStatement	if ( ( mem = spaces [ i ] ) != 0 )		8854952	3					
ANR	8854976	Condition	( mem = spaces [ i ] ) != 0	150:12:5291:5312	8854952	0	True				
ANR	8854977	EqualityExpression	( mem = spaces [ i ] ) != 0		8854952	0		!=			
ANR	8854978	AssignmentExpression	mem = spaces [ i ]		8854952	0		=			
ANR	8854979	Identifier	mem		8854952	0					
ANR	8854980	ArrayIndexing	spaces [ i ]		8854952	1					
ANR	8854981	Identifier	spaces		8854952	0					
ANR	8854982	Identifier	i		8854952	1					
ANR	8854983	PrimaryExpression	0		8854952	1					
ANR	8854984	ExpressionStatement	"ialloc_validate_memory ( mem , gcst )"	151:12:5327:5360	8854952	1	True				
ANR	8854985	CallExpression	"ialloc_validate_memory ( mem , gcst )"		8854952	0					
ANR	8854986	Callee	ialloc_validate_memory		8854952	0					
ANR	8854987	Identifier	ialloc_validate_memory		8854952	0					
ANR	8854988	ArgumentList	mem		8854952	1					
ANR	8854989	Argument	mem		8854952	0					
ANR	8854990	Identifier	mem		8854952	0					
ANR	8854991	Argument	gcst		8854952	1					
ANR	8854992	Identifier	gcst		8854952	0					
ANR	8854993	ReturnType	static void		8854952	1					
ANR	8854994	Identifier	gc_validate_spaces		8854952	2					
ANR	8854995	ParameterList	"gs_ref_memory_t * * spaces , int max_space , gc_state_t * gcst"		8854952	3					
ANR	8854996	Parameter	gs_ref_memory_t * * spaces	144:19:5143:5166	8854952	0	True				
ANR	8854997	ParameterType	gs_ref_memory_t * *		8854952	0					
ANR	8854998	Identifier	spaces		8854952	1					
ANR	8854999	Parameter	int max_space	144:45:5169:5181	8854952	1	True				
ANR	8855000	ParameterType	int		8854952	0					
ANR	8855001	Identifier	max_space		8854952	1					
ANR	8855002	Parameter	gc_state_t * gcst	144:60:5184:5199	8854952	2	True				
ANR	8855003	ParameterType	gc_state_t *		8854952	0					
ANR	8855004	Identifier	gcst		8854952	1					
ANR	8855005	CFGEntryNode	ENTRY		8854952		True				
ANR	8855006	CFGExitNode	EXIT		8854952		True				
ANR	8855007	Symbol	* i		8854952						
ANR	8855008	Symbol	mem		8854952						
ANR	8855009	Symbol	spaces		8854952						
ANR	8855010	Symbol	i		8854952						
ANR	8855011	Symbol	max_space		8854952						
ANR	8855012	Symbol	gcst		8854952						
ANR	8855013	Symbol	* spaces		8854952						
ANR	8855014	Function	gs_gc_reclaim	157:0:5444:18529							
ANR	8855015	FunctionDef	"gs_gc_reclaim (vm_spaces * pspaces , bool global)"		8855014	0					
ANR	8855016	CompoundStatement		159:0:5497:18529	8855014	0					
ANR	8855017	Statement	define	160:1:5500:5505	8855014	0	True				
ANR	8855018	Statement	nspaces	160:8:5507:5513	8855014	1	True				
ANR	8855019	Statement	(	160:16:5515:5515	8855014	2	True				
ANR	8855020	Statement	(	160:17:5516:5516	8855014	3	True				
ANR	8855021	Statement	i_vm_max	160:18:5517:5524	8855014	4	True				
ANR	8855022	Statement	+	160:27:5526:5526	8855014	5	True				
ANR	8855023	Statement	1	160:29:5528:5528	8855014	6	True				
ANR	8855024	Statement	)	160:30:5529:5529	8855014	7	True				
ANR	8855025	Statement	*	160:32:5531:5531	8855014	8	True				
ANR	8855026	Statement	2	160:34:5533:5533	8855014	9	True				
ANR	8855027	Statement	)	160:35:5534:5534	8855014	10	True				
ANR	8855028	IdentifierDeclStatement	vm_spaces spaces ;	162:4:5573:5589	8855014	11	True				
ANR	8855029	IdentifierDecl	spaces		8855014	0					
ANR	8855030	IdentifierDeclType	vm_spaces		8855014	0					
ANR	8855031	Identifier	spaces		8855014	1					
ANR	8855032	IdentifierDeclStatement	gs_ref_memory_t * space_memories [ nspaces ] ;	163:4:5595:5635	8855014	12	True				
ANR	8855033	IdentifierDecl	* space_memories [ nspaces ]		8855014	0					
ANR	8855034	IdentifierDeclType	gs_ref_memory_t * [ nspaces ]		8855014	0					
ANR	8855035	Identifier	space_memories		8855014	1					
ANR	8855036	Identifier	nspaces		8855014	2					
ANR	8855037	IdentifierDeclStatement	gs_gc_root_t space_roots [ nspaces ] ;	164:4:5641:5674	8855014	13	True				
ANR	8855038	IdentifierDecl	space_roots [ nspaces ]		8855014	0					
ANR	8855039	IdentifierDeclType	gs_gc_root_t [ nspaces ]		8855014	0					
ANR	8855040	Identifier	space_roots		8855014	1					
ANR	8855041	Identifier	nspaces		8855014	2					
ANR	8855042	IdentifierDeclStatement	int max_trace ;	165:4:5680:5693	8855014	14	True				
ANR	8855043	IdentifierDecl	max_trace		8855014	0					
ANR	8855044	IdentifierDeclType	int		8855014	0					
ANR	8855045	Identifier	max_trace		8855014	1					
ANR	8855046	IdentifierDeclStatement	int min_collect ;	166:4:5726:5741	8855014	15	True				
ANR	8855047	IdentifierDecl	min_collect		8855014	0					
ANR	8855048	IdentifierDeclType	int		8855014	0					
ANR	8855049	Identifier	min_collect		8855014	1					
ANR	8855050	IdentifierDeclStatement	int min_collect_vm_space ;	167:4:5776:5800	8855014	16	True				
ANR	8855051	IdentifierDecl	min_collect_vm_space		8855014	0					
ANR	8855052	IdentifierDeclType	int		8855014	0					
ANR	8855053	Identifier	min_collect_vm_space		8855014	1					
ANR	8855054	IdentifierDeclStatement	int ispace ;	168:4:5836:5846	8855014	17	True				
ANR	8855055	IdentifierDecl	ispace		8855014	0					
ANR	8855056	IdentifierDeclType	int		8855014	0					
ANR	8855057	Identifier	ispace		8855014	1					
ANR	8855058	IdentifierDeclStatement	gs_ref_memory_t * mem ;	169:4:5852:5872	8855014	18	True				
ANR	8855059	IdentifierDecl	* mem		8855014	0					
ANR	8855060	IdentifierDeclType	gs_ref_memory_t *		8855014	0					
ANR	8855061	Identifier	mem		8855014	1					
ANR	8855062	IdentifierDeclStatement	clump_t * cp ;	170:4:5878:5889	8855014	19	True				
ANR	8855063	IdentifierDecl	* cp		8855014	0					
ANR	8855064	IdentifierDeclType	clump_t *		8855014	0					
ANR	8855065	Identifier	cp		8855014	1					
ANR	8855066	IdentifierDeclStatement	gs_gc_root_t * rp ;	171:4:5895:5911	8855014	20	True				
ANR	8855067	IdentifierDecl	* rp		8855014	0					
ANR	8855068	IdentifierDeclType	gs_gc_root_t *		8855014	0					
ANR	8855069	Identifier	rp		8855014	1					
ANR	8855070	IdentifierDeclStatement	gc_state_t state ;	172:4:5917:5933	8855014	21	True				
ANR	8855071	IdentifierDecl	state		8855014	0					
ANR	8855072	IdentifierDeclType	gc_state_t		8855014	0					
ANR	8855073	Identifier	state		8855014	1					
ANR	8855074	ClassDefStatement	struct _msd { gc_mark_stack stack ; ms_entry body [ ms_size_default ] ; } ms_default ;	173:4:5939:6038	8855014	22	True				
ANR	8855075	Identifier	_msd		8855014	0					
ANR	8855076	IdentifierDecl	ms_default		8855014	1					
ANR	8855077	IdentifierDeclType	_msd		8855014	0					
ANR	8855078	Identifier	ms_default		8855014	1					
ANR	8855079	IdentifierDeclStatement	gc_mark_stack * mark_stack = & ms_default . stack ;	177:4:6044:6089	8855014	23	True				
ANR	8855080	IdentifierDecl	* mark_stack = & ms_default . stack		8855014	0					
ANR	8855081	IdentifierDeclType	gc_mark_stack *		8855014	0					
ANR	8855082	Identifier	mark_stack		8855014	1					
ANR	8855083	AssignmentExpression	* mark_stack = & ms_default . stack		8855014	2		=			
ANR	8855084	Identifier	mark_stack		8855014	0					
ANR	8855085	UnaryOperationExpression	& ms_default . stack		8855014	1					
ANR	8855086	UnaryOperator	&		8855014	0					
ANR	8855087	MemberAccess	ms_default . stack		8855014	1					
ANR	8855088	Identifier	ms_default		8855014	0					
ANR	8855089	Identifier	stack		8855014	1					
ANR	8855090	IdentifierDeclStatement	const gs_memory_t * cmem ;	178:4:6095:6118	8855014	24	True				
ANR	8855091	IdentifierDecl	* cmem		8855014	0					
ANR	8855092	IdentifierDeclType	const gs_memory_t *		8855014	0					
ANR	8855093	Identifier	cmem		8855014	1					
ANR	8855094	IdentifierDeclStatement	clump_splay_walker sw ;	179:4:6124:6145	8855014	25	True				
ANR	8855095	IdentifierDecl	sw		8855014	0					
ANR	8855096	IdentifierDeclType	clump_splay_walker		8855014	0					
ANR	8855097	Identifier	sw		8855014	1					
ANR	8855098	IfStatement	if ( I_FORCE_GLOBAL_GC )		8855014	26					
ANR	8855099	Condition	I_FORCE_GLOBAL_GC	183:8:6209:6225	8855014	0	True				
ANR	8855100	Identifier	I_FORCE_GLOBAL_GC		8855014	0					
ANR	8855101	ExpressionStatement	global = true	184:8:6236:6249	8855014	1	True				
ANR	8855102	AssignmentExpression	global = true		8855014	0		=			
ANR	8855103	Identifier	global		8855014	0					
ANR	8855104	Identifier	true		8855014	1					
ANR	8855105	ExpressionStatement	spaces = * pspaces	188:4:6321:6338	8855014	27	True				
ANR	8855106	AssignmentExpression	spaces = * pspaces		8855014	0		=			
ANR	8855107	Identifier	spaces		8855014	0					
ANR	8855108	UnaryOperationExpression	* pspaces		8855014	1					
ANR	8855109	UnaryOperator	*		8855014	0					
ANR	8855110	Identifier	pspaces		8855014	1					
ANR	8855111	ExpressionStatement	cmem = space_system -> stable_memory	189:4:6344:6378	8855014	28	True				
ANR	8855112	AssignmentExpression	cmem = space_system -> stable_memory		8855014	0		=			
ANR	8855113	Identifier	cmem		8855014	0					
ANR	8855114	PtrMemberAccess	space_system -> stable_memory		8855014	1					
ANR	8855115	Identifier	space_system		8855014	0					
ANR	8855116	Identifier	stable_memory		8855014	1					
ANR	8855117	ExpressionStatement	space_memories [ 1 ] = space_system	190:4:6384:6416	8855014	29	True				
ANR	8855118	AssignmentExpression	space_memories [ 1 ] = space_system		8855014	0		=			
ANR	8855119	ArrayIndexing	space_memories [ 1 ]		8855014	0					
ANR	8855120	Identifier	space_memories		8855014	0					
ANR	8855121	PrimaryExpression	1		8855014	1					
ANR	8855122	Identifier	space_system		8855014	1					
ANR	8855123	ExpressionStatement	space_memories [ 2 ] = space_global	191:4:6422:6454	8855014	30	True				
ANR	8855124	AssignmentExpression	space_memories [ 2 ] = space_global		8855014	0		=			
ANR	8855125	ArrayIndexing	space_memories [ 2 ]		8855014	0					
ANR	8855126	Identifier	space_memories		8855014	0					
ANR	8855127	PrimaryExpression	2		8855014	1					
ANR	8855128	Identifier	space_global		8855014	1					
ANR	8855129	ExpressionStatement	min_collect = max_trace = 2	192:4:6460:6487	8855014	31	True				
ANR	8855130	AssignmentExpression	min_collect = max_trace = 2		8855014	0		=			
ANR	8855131	Identifier	min_collect		8855014	0					
ANR	8855132	AssignmentExpression	max_trace = 2		8855014	1		=			
ANR	8855133	Identifier	max_trace		8855014	0					
ANR	8855134	PrimaryExpression	2		8855014	1					
ANR	8855135	ExpressionStatement	min_collect_vm_space = i_vm_global	193:4:6493:6527	8855014	32	True				
ANR	8855136	AssignmentExpression	min_collect_vm_space = i_vm_global		8855014	0		=			
ANR	8855137	Identifier	min_collect_vm_space		8855014	0					
ANR	8855138	Identifier	i_vm_global		8855014	1					
ANR	8855139	IfStatement	if ( space_global -> stable_memory != ( gs_memory_t * ) space_global )		8855014	33					
ANR	8855140	Condition	space_global -> stable_memory != ( gs_memory_t * ) space_global	194:8:6537:6594	8855014	0	True				
ANR	8855141	EqualityExpression	space_global -> stable_memory != ( gs_memory_t * ) space_global		8855014	0		!=			
ANR	8855142	PtrMemberAccess	space_global -> stable_memory		8855014	0					
ANR	8855143	Identifier	space_global		8855014	0					
ANR	8855144	Identifier	stable_memory		8855014	1					
ANR	8855145	CastExpression	( gs_memory_t * ) space_global		8855014	1					
ANR	8855146	CastTarget	gs_memory_t *		8855014	0					
ANR	8855147	Identifier	space_global		8855014	1					
ANR	8855148	ExpressionStatement	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_global -> stable_memory	195:8:6605:6693	8855014	1	True				
ANR	8855149	AssignmentExpression	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_global -> stable_memory		8855014	0		=			
ANR	8855150	ArrayIndexing	space_memories [ ++ max_trace ]		8855014	0					
ANR	8855151	Identifier	space_memories		8855014	0					
ANR	8855152	UnaryExpression	++ max_trace		8855014	1					
ANR	8855153	IncDec	++		8855014	0					
ANR	8855154	Identifier	max_trace		8855014	1					
ANR	8855155	CastExpression	( gs_ref_memory_t * ) space_global -> stable_memory		8855014	1					
ANR	8855156	CastTarget	gs_ref_memory_t *		8855014	0					
ANR	8855157	PtrMemberAccess	space_global -> stable_memory		8855014	1					
ANR	8855158	Identifier	space_global		8855014	0					
ANR	8855159	Identifier	stable_memory		8855014	1					
ANR	8855160	IfStatement	if ( space_global != space_local )		8855014	34					
ANR	8855161	Condition	space_global != space_local	197:8:6703:6729	8855014	0	True				
ANR	8855162	EqualityExpression	space_global != space_local		8855014	0		!=			
ANR	8855163	Identifier	space_global		8855014	0					
ANR	8855164	Identifier	space_local		8855014	1					
ANR	8855165	CompoundStatement		39:37:1234:1234	8855014	1					
ANR	8855166	ExpressionStatement	space_memories [ ++ max_trace ] = space_local	198:8:6742:6783	8855014	0	True				
ANR	8855167	AssignmentExpression	space_memories [ ++ max_trace ] = space_local		8855014	0		=			
ANR	8855168	ArrayIndexing	space_memories [ ++ max_trace ]		8855014	0					
ANR	8855169	Identifier	space_memories		8855014	0					
ANR	8855170	UnaryExpression	++ max_trace		8855014	1					
ANR	8855171	IncDec	++		8855014	0					
ANR	8855172	Identifier	max_trace		8855014	1					
ANR	8855173	Identifier	space_local		8855014	1					
ANR	8855174	ExpressionStatement	min_collect = max_trace	199:8:6793:6816	8855014	1	True				
ANR	8855175	AssignmentExpression	min_collect = max_trace		8855014	0		=			
ANR	8855176	Identifier	min_collect		8855014	0					
ANR	8855177	Identifier	max_trace		8855014	1					
ANR	8855178	ExpressionStatement	min_collect_vm_space = i_vm_local	200:8:6826:6859	8855014	2	True				
ANR	8855179	AssignmentExpression	min_collect_vm_space = i_vm_local		8855014	0		=			
ANR	8855180	Identifier	min_collect_vm_space		8855014	0					
ANR	8855181	Identifier	i_vm_local		8855014	1					
ANR	8855182	IfStatement	if ( space_local -> stable_memory != ( gs_memory_t * ) space_local )		8855014	3					
ANR	8855183	Condition	space_local -> stable_memory != ( gs_memory_t * ) space_local	201:12:6873:6928	8855014	0	True				
ANR	8855184	EqualityExpression	space_local -> stable_memory != ( gs_memory_t * ) space_local		8855014	0		!=			
ANR	8855185	PtrMemberAccess	space_local -> stable_memory		8855014	0					
ANR	8855186	Identifier	space_local		8855014	0					
ANR	8855187	Identifier	stable_memory		8855014	1					
ANR	8855188	CastExpression	( gs_memory_t * ) space_local		8855014	1					
ANR	8855189	CastTarget	gs_memory_t *		8855014	0					
ANR	8855190	Identifier	space_local		8855014	1					
ANR	8855191	ExpressionStatement	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_local -> stable_memory	202:12:6943:7034	8855014	1	True				
ANR	8855192	AssignmentExpression	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_local -> stable_memory		8855014	0		=			
ANR	8855193	ArrayIndexing	space_memories [ ++ max_trace ]		8855014	0					
ANR	8855194	Identifier	space_memories		8855014	0					
ANR	8855195	UnaryExpression	++ max_trace		8855014	1					
ANR	8855196	IncDec	++		8855014	0					
ANR	8855197	Identifier	max_trace		8855014	1					
ANR	8855198	CastExpression	( gs_ref_memory_t * ) space_local -> stable_memory		8855014	1					
ANR	8855199	CastTarget	gs_ref_memory_t *		8855014	0					
ANR	8855200	PtrMemberAccess	space_local -> stable_memory		8855014	1					
ANR	8855201	Identifier	space_local		8855014	0					
ANR	8855202	Identifier	stable_memory		8855014	1					
ANR	8855203	IfStatement	if ( global )		8855014	35					
ANR	8855204	Condition	global	205:8:7050:7055	8855014	0	True				
ANR	8855205	Identifier	global		8855014	0					
ANR	8855206	ExpressionStatement	min_collect = min_collect_vm_space = 1	206:8:7066:7104	8855014	1	True				
ANR	8855207	AssignmentExpression	min_collect = min_collect_vm_space = 1		8855014	0		=			
ANR	8855208	Identifier	min_collect		8855014	0					
ANR	8855209	AssignmentExpression	min_collect_vm_space = 1		8855014	1		=			
ANR	8855210	Identifier	min_collect_vm_space		8855014	0					
ANR	8855211	PrimaryExpression	1		8855014	1					
ANR	8855212	Statement	define	208:1:7108:7113	8855014	36	True				
ANR	8855213	Statement	for_spaces	208:8:7115:7124	8855014	37	True				
ANR	8855214	Statement	(	208:18:7125:7125	8855014	38	True				
ANR	8855215	Statement	i	208:19:7126:7126	8855014	39	True				
ANR	8855216	Statement	","	208:20:7127:7127	8855014	40	True				
ANR	8855217	Statement	n	208:22:7129:7129	8855014	41	True				
ANR	8855218	Statement	)	208:23:7130:7130	8855014	42	True				
ANR	8855219	ForStatement	for ( i = 1 ; i <= n ; ++ i )		8855014	43					
ANR	8855220	ForInit	i = 1 ;	209:7:7140:7145	8855014	0	True				
ANR	8855221	AssignmentExpression	i = 1		8855014	0		=			
ANR	8855222	Identifier	i		8855014	0					
ANR	8855223	PrimaryExpression	1		8855014	1					
ANR	8855224	Condition	i <= n	209:14:7147:7152	8855014	1	True				
ANR	8855225	RelationalExpression	i <= n		8855014	0		<=			
ANR	8855226	Identifier	i		8855014	0					
ANR	8855227	Identifier	n		8855014	1					
ANR	8855228	UnaryExpression	++ i	209:22:7155:7157	8855014	2	True				
ANR	8855229	IncDec	++		8855014	0					
ANR	8855230	Identifier	i		8855014	1					
ANR	8855231	Statement	define	210:1:7161:7166	8855014	3	True				
ANR	8855232	Statement	for_collected_spaces	210:8:7168:7187	8855014	44	True				
ANR	8855233	Statement	(	210:28:7188:7188	8855014	45	True				
ANR	8855234	Statement	i	210:29:7189:7189	8855014	46	True				
ANR	8855235	Statement	)	210:30:7190:7190	8855014	47	True				
ANR	8855236	ForStatement	for ( i = min_collect ; i <= max_trace ; ++ i )		8855014	48					
ANR	8855237	ForInit	i = min_collect ;	211:7:7200:7215	8855014	0	True				
ANR	8855238	AssignmentExpression	i = min_collect		8855014	0		=			
ANR	8855239	Identifier	i		8855014	0					
ANR	8855240	Identifier	min_collect		8855014	1					
ANR	8855241	Condition	i <= max_trace	211:24:7217:7230	8855014	1	True				
ANR	8855242	RelationalExpression	i <= max_trace		8855014	0		<=			
ANR	8855243	Identifier	i		8855014	0					
ANR	8855244	Identifier	max_trace		8855014	1					
ANR	8855245	UnaryExpression	++ i	211:40:7233:7235	8855014	2	True				
ANR	8855246	IncDec	++		8855014	0					
ANR	8855247	Identifier	i		8855014	1					
ANR	8855248	Statement	define	212:1:7239:7244	8855014	3	True				
ANR	8855249	Statement	for_space_mems	212:8:7246:7259	8855014	49	True				
ANR	8855250	Statement	(	212:22:7260:7260	8855014	50	True				
ANR	8855251	Statement	i	212:23:7261:7261	8855014	51	True				
ANR	8855252	Statement	","	212:24:7262:7262	8855014	52	True				
ANR	8855253	Statement	mem	212:26:7264:7266	8855014	53	True				
ANR	8855254	Statement	)	212:29:7267:7267	8855014	54	True				
ANR	8855255	ForStatement	for ( mem = space_memories [ i ] ; mem != 0 ; mem = & mem -> saved -> state )		8855014	55					
ANR	8855256	ForInit	mem = space_memories [ i ] ;	213:7:7277:7300	8855014	0	True				
ANR	8855257	AssignmentExpression	mem = space_memories [ i ]		8855014	0		=			
ANR	8855258	Identifier	mem		8855014	0					
ANR	8855259	ArrayIndexing	space_memories [ i ]		8855014	1					
ANR	8855260	Identifier	space_memories		8855014	0					
ANR	8855261	Identifier	i		8855014	1					
ANR	8855262	Condition	mem != 0	213:32:7302:7309	8855014	1	True				
ANR	8855263	EqualityExpression	mem != 0		8855014	0		!=			
ANR	8855264	Identifier	mem		8855014	0					
ANR	8855265	PrimaryExpression	0		8855014	1					
ANR	8855266	AssignmentExpression	mem = & mem -> saved -> state	213:42:7312:7335	8855014	2	True	=			
ANR	8855267	Identifier	mem		8855014	0					
ANR	8855268	UnaryOperationExpression	& mem -> saved -> state		8855014	1					
ANR	8855269	UnaryOperator	&		8855014	0					
ANR	8855270	PtrMemberAccess	mem -> saved -> state		8855014	1					
ANR	8855271	PtrMemberAccess	mem -> saved		8855014	0					
ANR	8855272	Identifier	mem		8855014	0					
ANR	8855273	Identifier	saved		8855014	1					
ANR	8855274	Identifier	state		8855014	1					
ANR	8855275	Statement	define	214:1:7339:7344	8855014	3	True				
ANR	8855276	Statement	for_mem_clumps	214:8:7346:7359	8855014	56	True				
ANR	8855277	Statement	(	214:22:7360:7360	8855014	57	True				
ANR	8855278	Statement	mem	214:23:7361:7363	8855014	58	True				
ANR	8855279	Statement	","	214:26:7364:7364	8855014	59	True				
ANR	8855280	Statement	cp	214:28:7366:7367	8855014	60	True				
ANR	8855281	Statement	","	214:30:7368:7368	8855014	61	True				
ANR	8855282	Statement	sw	214:32:7370:7371	8855014	62	True				
ANR	8855283	Statement	)	214:34:7372:7372	8855014	63	True				
ANR	8855284	ForStatement	"for ( cp = clump_splay_walk_init ( sw , mem ) ; cp != 0 ; cp = clump_splay_walk_fwd ( sw ) )"		8855014	64					
ANR	8855285	ForInit	"cp = clump_splay_walk_init ( sw , mem ) ;"	215:7:7382:7417	8855014	0	True				
ANR	8855286	AssignmentExpression	"cp = clump_splay_walk_init ( sw , mem )"		8855014	0		=			
ANR	8855287	Identifier	cp		8855014	0					
ANR	8855288	CallExpression	"clump_splay_walk_init ( sw , mem )"		8855014	1					
ANR	8855289	Callee	clump_splay_walk_init		8855014	0					
ANR	8855290	Identifier	clump_splay_walk_init		8855014	0					
ANR	8855291	ArgumentList	sw		8855014	1					
ANR	8855292	Argument	sw		8855014	0					
ANR	8855293	Identifier	sw		8855014	0					
ANR	8855294	Argument	mem		8855014	1					
ANR	8855295	Identifier	mem		8855014	0					
ANR	8855296	Condition	cp != 0	215:44:7419:7425	8855014	1	True				
ANR	8855297	EqualityExpression	cp != 0		8855014	0		!=			
ANR	8855298	Identifier	cp		8855014	0					
ANR	8855299	PrimaryExpression	0		8855014	1					
ANR	8855300	AssignmentExpression	cp = clump_splay_walk_fwd ( sw )	215:53:7428:7456	8855014	2	True	=			
ANR	8855301	Identifier	cp		8855014	0					
ANR	8855302	CallExpression	clump_splay_walk_fwd ( sw )		8855014	1					
ANR	8855303	Callee	clump_splay_walk_fwd		8855014	0					
ANR	8855304	Identifier	clump_splay_walk_fwd		8855014	0					
ANR	8855305	ArgumentList	sw		8855014	1					
ANR	8855306	Argument	sw		8855014	0					
ANR	8855307	Identifier	sw		8855014	0					
ANR	8855308	Statement	define	216:1:7460:7465	8855014	3	True				
ANR	8855309	Statement	for_space_clumps	216:8:7467:7482	8855014	65	True				
ANR	8855310	Statement	(	216:24:7483:7483	8855014	66	True				
ANR	8855311	Statement	i	216:25:7484:7484	8855014	67	True				
ANR	8855312	Statement	","	216:26:7485:7485	8855014	68	True				
ANR	8855313	Statement	mem	216:28:7487:7489	8855014	69	True				
ANR	8855314	Statement	","	216:31:7490:7490	8855014	70	True				
ANR	8855315	Statement	cp	216:33:7492:7493	8855014	71	True				
ANR	8855316	Statement	","	216:35:7494:7494	8855014	72	True				
ANR	8855317	Statement	sw	216:37:7496:7497	8855014	73	True				
ANR	8855318	Statement	)	216:39:7498:7498	8855014	74	True				
ANR	8855319	Statement	for_space_mems	217:2:7503:7516	8855014	75	True				
ANR	8855320	Statement	(	217:16:7517:7517	8855014	76	True				
ANR	8855321	Statement	i	217:17:7518:7518	8855014	77	True				
ANR	8855322	Statement	","	217:18:7519:7519	8855014	78	True				
ANR	8855323	Statement	mem	217:20:7521:7523	8855014	79	True				
ANR	8855324	Statement	)	217:23:7524:7524	8855014	80	True				
ANR	8855325	Statement	for_mem_clumps	217:25:7526:7539	8855014	81	True				
ANR	8855326	Statement	(	217:39:7540:7540	8855014	82	True				
ANR	8855327	Statement	mem	217:40:7541:7543	8855014	83	True				
ANR	8855328	Statement	","	217:43:7544:7544	8855014	84	True				
ANR	8855329	Statement	cp	217:45:7546:7547	8855014	85	True				
ANR	8855330	Statement	","	217:47:7548:7548	8855014	86	True				
ANR	8855331	Statement	sw	217:49:7550:7551	8855014	87	True				
ANR	8855332	Statement	)	217:51:7552:7552	8855014	88	True				
ANR	8855333	Statement	define	218:1:7555:7560	8855014	89	True				
ANR	8855334	Statement	for_clumps	218:8:7562:7571	8855014	90	True				
ANR	8855335	Statement	(	218:18:7572:7572	8855014	91	True				
ANR	8855336	Statement	i	218:19:7573:7573	8855014	92	True				
ANR	8855337	Statement	","	218:20:7574:7574	8855014	93	True				
ANR	8855338	Statement	n	218:22:7576:7576	8855014	94	True				
ANR	8855339	Statement	","	218:23:7577:7577	8855014	95	True				
ANR	8855340	Statement	mem	218:25:7579:7581	8855014	96	True				
ANR	8855341	Statement	","	218:28:7582:7582	8855014	97	True				
ANR	8855342	Statement	cp	218:30:7584:7585	8855014	98	True				
ANR	8855343	Statement	","	218:32:7586:7586	8855014	99	True				
ANR	8855344	Statement	sw	218:34:7588:7589	8855014	100	True				
ANR	8855345	Statement	)	218:36:7590:7590	8855014	101	True				
ANR	8855346	Statement	for_spaces	219:2:7595:7604	8855014	102	True				
ANR	8855347	Statement	(	219:12:7605:7605	8855014	103	True				
ANR	8855348	Statement	i	219:13:7606:7606	8855014	104	True				
ANR	8855349	Statement	","	219:14:7607:7607	8855014	105	True				
ANR	8855350	Statement	n	219:16:7609:7609	8855014	106	True				
ANR	8855351	Statement	)	219:17:7610:7610	8855014	107	True				
ANR	8855352	Statement	for_space_clumps	219:19:7612:7627	8855014	108	True				
ANR	8855353	Statement	(	219:35:7628:7628	8855014	109	True				
ANR	8855354	Statement	i	219:36:7629:7629	8855014	110	True				
ANR	8855355	Statement	","	219:37:7630:7630	8855014	111	True				
ANR	8855356	Statement	mem	219:39:7632:7634	8855014	112	True				
ANR	8855357	Statement	","	219:42:7635:7635	8855014	113	True				
ANR	8855358	Statement	cp	219:44:7637:7638	8855014	114	True				
ANR	8855359	Statement	","	219:46:7639:7639	8855014	115	True				
ANR	8855360	Statement	sw	219:48:7641:7642	8855014	116	True				
ANR	8855361	Statement	)	219:50:7643:7643	8855014	117	True				
ANR	8855362	Statement	define	220:1:7646:7651	8855014	118	True				
ANR	8855363	Statement	for_collected_clumps	220:8:7653:7672	8855014	119	True				
ANR	8855364	Statement	(	220:28:7673:7673	8855014	120	True				
ANR	8855365	Statement	i	220:29:7674:7674	8855014	121	True				
ANR	8855366	Statement	","	220:30:7675:7675	8855014	122	True				
ANR	8855367	Statement	mem	220:32:7677:7679	8855014	123	True				
ANR	8855368	Statement	","	220:35:7680:7680	8855014	124	True				
ANR	8855369	Statement	cp	220:37:7682:7683	8855014	125	True				
ANR	8855370	Statement	","	220:39:7684:7684	8855014	126	True				
ANR	8855371	Statement	sw	220:41:7686:7687	8855014	127	True				
ANR	8855372	Statement	)	220:43:7688:7688	8855014	128	True				
ANR	8855373	Statement	for_collected_spaces	221:2:7693:7712	8855014	129	True				
ANR	8855374	Statement	(	221:22:7713:7713	8855014	130	True				
ANR	8855375	Statement	i	221:23:7714:7714	8855014	131	True				
ANR	8855376	Statement	)	221:24:7715:7715	8855014	132	True				
ANR	8855377	Statement	for_space_clumps	221:26:7717:7732	8855014	133	True				
ANR	8855378	Statement	(	221:42:7733:7733	8855014	134	True				
ANR	8855379	Statement	i	221:43:7734:7734	8855014	135	True				
ANR	8855380	Statement	","	221:44:7735:7735	8855014	136	True				
ANR	8855381	Statement	mem	221:46:7737:7739	8855014	137	True				
ANR	8855382	Statement	","	221:49:7740:7740	8855014	138	True				
ANR	8855383	Statement	cp	221:51:7742:7743	8855014	139	True				
ANR	8855384	Statement	","	221:53:7744:7744	8855014	140	True				
ANR	8855385	Statement	sw	221:55:7746:7747	8855014	141	True				
ANR	8855386	Statement	)	221:57:7748:7748	8855014	142	True				
ANR	8855387	Statement	define	222:1:7751:7756	8855014	143	True				
ANR	8855388	Statement	for_roots	222:8:7758:7766	8855014	144	True				
ANR	8855389	Statement	(	222:17:7767:7767	8855014	145	True				
ANR	8855390	Statement	i	222:18:7768:7768	8855014	146	True				
ANR	8855391	Statement	","	222:19:7769:7769	8855014	147	True				
ANR	8855392	Statement	n	222:21:7771:7771	8855014	148	True				
ANR	8855393	Statement	","	222:22:7772:7772	8855014	149	True				
ANR	8855394	Statement	mem	222:24:7774:7776	8855014	150	True				
ANR	8855395	Statement	","	222:27:7777:7777	8855014	151	True				
ANR	8855396	Statement	rp	222:29:7779:7780	8855014	152	True				
ANR	8855397	Statement	)	222:31:7781:7781	8855014	153	True				
ANR	8855398	Statement	for_spaces	223:2:7786:7795	8855014	154	True				
ANR	8855399	Statement	(	223:12:7796:7796	8855014	155	True				
ANR	8855400	Statement	i	223:13:7797:7797	8855014	156	True				
ANR	8855401	Statement	","	223:14:7798:7798	8855014	157	True				
ANR	8855402	Statement	n	223:16:7800:7800	8855014	158	True				
ANR	8855403	Statement	)	223:17:7801:7801	8855014	159	True				
ANR	8855404	ForStatement	"for ( mem = space_memories [ i ] , rp = mem -> roots ; rp != 0 ; rp = rp -> next )"		8855014	160					
ANR	8855405	ForInit	"mem = space_memories [ i ] , rp = mem -> roots ;"	224:9:7813:7853	8855014	0	True				
ANR	8855406	Expression	"mem = space_memories [ i ] , rp = mem -> roots"		8855014	0					
ANR	8855407	AssignmentExpression	mem = space_memories [ i ]		8855014	0		=			
ANR	8855408	Identifier	mem		8855014	0					
ANR	8855409	ArrayIndexing	space_memories [ i ]		8855014	1					
ANR	8855410	Identifier	space_memories		8855014	0					
ANR	8855411	Identifier	i		8855014	1					
ANR	8855412	AssignmentExpression	rp = mem -> roots		8855014	1		=			
ANR	8855413	Identifier	rp		8855014	0					
ANR	8855414	PtrMemberAccess	mem -> roots		8855014	1					
ANR	8855415	Identifier	mem		8855014	0					
ANR	8855416	Identifier	roots		8855014	1					
ANR	8855417	Condition	rp != 0	224:51:7855:7861	8855014	1	True				
ANR	8855418	EqualityExpression	rp != 0		8855014	0		!=			
ANR	8855419	Identifier	rp		8855014	0					
ANR	8855420	PrimaryExpression	0		8855014	1					
ANR	8855421	AssignmentExpression	rp = rp -> next	224:60:7864:7876	8855014	2	True	=			
ANR	8855422	Identifier	rp		8855014	0					
ANR	8855423	PtrMemberAccess	rp -> next		8855014	1					
ANR	8855424	Identifier	rp		8855014	0					
ANR	8855425	Identifier	next		8855014	1					
ANR	8855426	ExpressionStatement	state . procs = & igc_procs	228:4:7917:7941	8855014	3	True				
ANR	8855427	AssignmentExpression	state . procs = & igc_procs		8855014	0		=			
ANR	8855428	MemberAccess	state . procs		8855014	0					
ANR	8855429	Identifier	state		8855014	0					
ANR	8855430	Identifier	procs		8855014	1					
ANR	8855431	UnaryOperationExpression	& igc_procs		8855014	1					
ANR	8855432	UnaryOperator	&		8855014	0					
ANR	8855433	Identifier	igc_procs		8855014	1					
ANR	8855434	ExpressionStatement	state . loc . memory = space_global	229:4:7947:7978	8855014	161	True				
ANR	8855435	AssignmentExpression	state . loc . memory = space_global		8855014	0		=			
ANR	8855436	MemberAccess	state . loc . memory		8855014	0					
ANR	8855437	MemberAccess	state . loc		8855014	0					
ANR	8855438	Identifier	state		8855014	0					
ANR	8855439	Identifier	loc		8855014	1					
ANR	8855440	Identifier	memory		8855014	1					
ANR	8855441	Identifier	space_global		8855014	1					
ANR	8855442	ExpressionStatement	state . loc . cp = 0	231:4:8007:8023	8855014	162	True				
ANR	8855443	AssignmentExpression	state . loc . cp = 0		8855014	0		=			
ANR	8855444	MemberAccess	state . loc . cp		8855014	0					
ANR	8855445	MemberAccess	state . loc		8855014	0					
ANR	8855446	Identifier	state		8855014	0					
ANR	8855447	Identifier	loc		8855014	1					
ANR	8855448	Identifier	cp		8855014	1					
ANR	8855449	PrimaryExpression	0		8855014	1					
ANR	8855450	ExpressionStatement	state . spaces = spaces	232:4:8029:8050	8855014	163	True				
ANR	8855451	AssignmentExpression	state . spaces = spaces		8855014	0		=			
ANR	8855452	MemberAccess	state . spaces		8855014	0					
ANR	8855453	Identifier	state		8855014	0					
ANR	8855454	Identifier	spaces		8855014	1					
ANR	8855455	Identifier	spaces		8855014	1					
ANR	8855456	ExpressionStatement	state . min_collect = min_collect_vm_space << r_space_shift	233:4:8056:8113	8855014	164	True				
ANR	8855457	AssignmentExpression	state . min_collect = min_collect_vm_space << r_space_shift		8855014	0		=			
ANR	8855458	MemberAccess	state . min_collect		8855014	0					
ANR	8855459	Identifier	state		8855014	0					
ANR	8855460	Identifier	min_collect		8855014	1					
ANR	8855461	ShiftExpression	min_collect_vm_space << r_space_shift		8855014	1		<<			
ANR	8855462	Identifier	min_collect_vm_space		8855014	0					
ANR	8855463	Identifier	r_space_shift		8855014	1					
ANR	8855464	ExpressionStatement	state . relocating_untraced = false	234:4:8119:8152	8855014	165	True				
ANR	8855465	AssignmentExpression	state . relocating_untraced = false		8855014	0		=			
ANR	8855466	MemberAccess	state . relocating_untraced		8855014	0					
ANR	8855467	Identifier	state		8855014	0					
ANR	8855468	Identifier	relocating_untraced		8855014	1					
ANR	8855469	Identifier	false		8855014	1					
ANR	8855470	ExpressionStatement	state . heap = state . loc . memory -> non_gc_memory	235:4:8158:8202	8855014	166	True				
ANR	8855471	AssignmentExpression	state . heap = state . loc . memory -> non_gc_memory		8855014	0		=			
ANR	8855472	MemberAccess	state . heap		8855014	0					
ANR	8855473	Identifier	state		8855014	0					
ANR	8855474	Identifier	heap		8855014	1					
ANR	8855475	PtrMemberAccess	state . loc . memory -> non_gc_memory		8855014	1					
ANR	8855476	MemberAccess	state . loc . memory		8855014	0					
ANR	8855477	MemberAccess	state . loc		8855014	0					
ANR	8855478	Identifier	state		8855014	0					
ANR	8855479	Identifier	loc		8855014	1					
ANR	8855480	Identifier	memory		8855014	1					
ANR	8855481	Identifier	non_gc_memory		8855014	1					
ANR	8855482	ExpressionStatement	state . ntable = state . heap -> gs_lib_ctx -> gs_name_table	236:4:8208:8260	8855014	167	True				
ANR	8855483	AssignmentExpression	state . ntable = state . heap -> gs_lib_ctx -> gs_name_table		8855014	0		=			
ANR	8855484	MemberAccess	state . ntable		8855014	0					
ANR	8855485	Identifier	state		8855014	0					
ANR	8855486	Identifier	ntable		8855014	1					
ANR	8855487	PtrMemberAccess	state . heap -> gs_lib_ctx -> gs_name_table		8855014	1					
ANR	8855488	PtrMemberAccess	state . heap -> gs_lib_ctx		8855014	0					
ANR	8855489	MemberAccess	state . heap		8855014	0					
ANR	8855490	Identifier	state		8855014	0					
ANR	8855491	Identifier	heap		8855014	1					
ANR	8855492	Identifier	gs_lib_ctx		8855014	1					
ANR	8855493	Identifier	gs_name_table		8855014	1					
ANR	8855494	Statement	for_spaces	241:4:8393:8402	8855014	168	True				
ANR	8855495	Statement	(	241:14:8403:8403	8855014	169	True				
ANR	8855496	Statement	ispace	241:15:8404:8409	8855014	170	True				
ANR	8855497	Statement	","	241:21:8410:8410	8855014	171	True				
ANR	8855498	Statement	max_trace	241:23:8412:8420	8855014	172	True				
ANR	8855499	Statement	)	241:32:8421:8421	8855014	173	True				
ANR	8855500	ExpressionStatement	"gs_register_struct_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ( void * * ) & space_memories [ ispace ] , ""gc_top_level"" )"	242:8:8431:8661	8855014	174	True				
ANR	8855501	CallExpression	"gs_register_struct_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ( void * * ) & space_memories [ ispace ] , ""gc_top_level"" )"		8855014	0					
ANR	8855502	Callee	gs_register_struct_root		8855014	0					
ANR	8855503	Identifier	gs_register_struct_root		8855014	0					
ANR	8855504	ArgumentList	( gs_memory_t * ) space_memories [ ispace ]		8855014	1					
ANR	8855505	Argument	( gs_memory_t * ) space_memories [ ispace ]		8855014	0					
ANR	8855506	CastExpression	( gs_memory_t * ) space_memories [ ispace ]		8855014	0					
ANR	8855507	CastTarget	gs_memory_t *		8855014	0					
ANR	8855508	ArrayIndexing	space_memories [ ispace ]		8855014	1					
ANR	8855509	Identifier	space_memories		8855014	0					
ANR	8855510	Identifier	ispace		8855014	1					
ANR	8855511	Argument	& space_roots [ ispace ]		8855014	1					
ANR	8855512	UnaryOperationExpression	& space_roots [ ispace ]		8855014	0					
ANR	8855513	UnaryOperator	&		8855014	0					
ANR	8855514	ArrayIndexing	space_roots [ ispace ]		8855014	1					
ANR	8855515	Identifier	space_roots		8855014	0					
ANR	8855516	Identifier	ispace		8855014	1					
ANR	8855517	Argument	( void * * ) & space_memories [ ispace ]		8855014	2					
ANR	8855518	CastExpression	( void * * ) & space_memories [ ispace ]		8855014	0					
ANR	8855519	CastTarget	void * *		8855014	0					
ANR	8855520	UnaryOperationExpression	& space_memories [ ispace ]		8855014	1					
ANR	8855521	UnaryOperator	&		8855014	0					
ANR	8855522	ArrayIndexing	space_memories [ ispace ]		8855014	1					
ANR	8855523	Identifier	space_memories		8855014	0					
ANR	8855524	Identifier	ispace		8855014	1					
ANR	8855525	Argument	"""gc_top_level"""		8855014	3					
ANR	8855526	PrimaryExpression	"""gc_top_level"""		8855014	0					
ANR	8855527	ExpressionStatement	"end_phase ( state . heap , ""register space roots"" )"	247:4:8668:8712	8855014	175	True				
ANR	8855528	CallExpression	"end_phase ( state . heap , ""register space roots"" )"		8855014	0					
ANR	8855529	Callee	end_phase		8855014	0					
ANR	8855530	Identifier	end_phase		8855014	0					
ANR	8855531	ArgumentList	state . heap		8855014	1					
ANR	8855532	Argument	state . heap		8855014	0					
ANR	8855533	MemberAccess	state . heap		8855014	0					
ANR	8855534	Identifier	state		8855014	0					
ANR	8855535	Identifier	heap		8855014	1					
ANR	8855536	Argument	"""register space roots"""		8855014	1					
ANR	8855537	PrimaryExpression	"""register space roots"""		8855014	0					
ANR	8855538	ExpressionStatement	"gc_validate_spaces ( space_memories , max_trace , & state )"	253:4:8801:8854	8855014	176	True				
ANR	8855539	CallExpression	"gc_validate_spaces ( space_memories , max_trace , & state )"		8855014	0					
ANR	8855540	Callee	gc_validate_spaces		8855014	0					
ANR	8855541	Identifier	gc_validate_spaces		8855014	0					
ANR	8855542	ArgumentList	space_memories		8855014	1					
ANR	8855543	Argument	space_memories		8855014	0					
ANR	8855544	Identifier	space_memories		8855014	0					
ANR	8855545	Argument	max_trace		8855014	1					
ANR	8855546	Identifier	max_trace		8855014	0					
ANR	8855547	Argument	& state		8855014	2					
ANR	8855548	UnaryOperationExpression	& state		8855014	0					
ANR	8855549	UnaryOperator	&		8855014	0					
ANR	8855550	Identifier	state		8855014	1					
ANR	8855551	ExpressionStatement	"end_phase ( state . heap , ""pre-validate pointers"" )"	255:4:8861:8906	8855014	177	True				
ANR	8855552	CallExpression	"end_phase ( state . heap , ""pre-validate pointers"" )"		8855014	0					
ANR	8855553	Callee	end_phase		8855014	0					
ANR	8855554	Identifier	end_phase		8855014	0					
ANR	8855555	ArgumentList	state . heap		8855014	1					
ANR	8855556	Argument	state . heap		8855014	0					
ANR	8855557	MemberAccess	state . heap		8855014	0					
ANR	8855558	Identifier	state		8855014	0					
ANR	8855559	Identifier	heap		8855014	1					
ANR	8855560	Argument	"""pre-validate pointers"""		8855014	1					
ANR	8855561	PrimaryExpression	"""pre-validate pointers"""		8855014	0					
ANR	8855562	IfStatement	if ( I_BYPASS_GC )		8855014	178					
ANR	8855563	Condition	I_BYPASS_GC	259:8:8925:8935	8855014	0	True				
ANR	8855564	Identifier	I_BYPASS_GC		8855014	0					
ANR	8855565	CompoundStatement		101:21:3440:3440	8855014	1					
ANR	8855566	GotoStatement	goto no_collect ;	260:8:8977:8992	8855014	0	True				
ANR	8855567	Identifier	no_collect		8855014	0					
ANR	8855568	Statement	for_collected_spaces	265:4:9055:9074	8855014	179	True				
ANR	8855569	Statement	(	265:24:9075:9075	8855014	180	True				
ANR	8855570	Statement	ispace	265:25:9076:9081	8855014	181	True				
ANR	8855571	Statement	)	265:31:9082:9082	8855014	182	True				
ANR	8855572	Statement	for_space_clumps	266:8:9092:9107	8855014	183	True				
ANR	8855573	Statement	(	266:24:9108:9108	8855014	184	True				
ANR	8855574	Statement	ispace	266:25:9109:9114	8855014	185	True				
ANR	8855575	Statement	","	266:31:9115:9115	8855014	186	True				
ANR	8855576	Statement	mem	266:33:9117:9119	8855014	187	True				
ANR	8855577	Statement	","	266:36:9120:9120	8855014	188	True				
ANR	8855578	Statement	cp	266:38:9122:9123	8855014	189	True				
ANR	8855579	Statement	","	266:40:9124:9124	8855014	190	True				
ANR	8855580	Statement	&	266:42:9126:9126	8855014	191	True				
ANR	8855581	Statement	sw	266:43:9127:9128	8855014	192	True				
ANR	8855582	Statement	)	266:45:9129:9129	8855014	193	True				
ANR	8855583	CompoundStatement		108:47:3633:3633	8855014	194					
ANR	8855584	ExpressionStatement	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"	267:12:9145:9197	8855014	0	True				
ANR	8855585	CallExpression	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"		8855014	0					
ANR	8855586	Callee	gc_objects_clear_marks		8855014	0					
ANR	8855587	Identifier	gc_objects_clear_marks		8855014	0					
ANR	8855588	ArgumentList	( const gs_memory_t * ) mem		8855014	1					
ANR	8855589	Argument	( const gs_memory_t * ) mem		8855014	0					
ANR	8855590	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8855591	CastTarget	const gs_memory_t *		8855014	0					
ANR	8855592	Identifier	mem		8855014	1					
ANR	8855593	Argument	cp		8855014	1					
ANR	8855594	Identifier	cp		8855014	0					
ANR	8855595	ExpressionStatement	"gc_strings_set_marks ( cp , false )"	268:12:9211:9242	8855014	1	True				
ANR	8855596	CallExpression	"gc_strings_set_marks ( cp , false )"		8855014	0					
ANR	8855597	Callee	gc_strings_set_marks		8855014	0					
ANR	8855598	Identifier	gc_strings_set_marks		8855014	0					
ANR	8855599	ArgumentList	cp		8855014	1					
ANR	8855600	Argument	cp		8855014	0					
ANR	8855601	Identifier	cp		8855014	0					
ANR	8855602	Argument	false		8855014	1					
ANR	8855603	Identifier	false		8855014	0					
ANR	8855604	ExpressionStatement	"end_phase ( state . heap , ""clear clump marks"" )"	271:4:9259:9300	8855014	195	True				
ANR	8855605	CallExpression	"end_phase ( state . heap , ""clear clump marks"" )"		8855014	0					
ANR	8855606	Callee	end_phase		8855014	0					
ANR	8855607	Identifier	end_phase		8855014	0					
ANR	8855608	ArgumentList	state . heap		8855014	1					
ANR	8855609	Argument	state . heap		8855014	0					
ANR	8855610	MemberAccess	state . heap		8855014	0					
ANR	8855611	Identifier	state		8855014	0					
ANR	8855612	Identifier	heap		8855014	1					
ANR	8855613	Argument	"""clear clump marks"""		8855014	1					
ANR	8855614	PrimaryExpression	"""clear clump marks"""		8855014	0					
ANR	8855615	Statement	for_roots	276:4:9422:9430	8855014	196	True				
ANR	8855616	Statement	(	276:13:9431:9431	8855014	197	True				
ANR	8855617	Statement	ispace	276:14:9432:9437	8855014	198	True				
ANR	8855618	Statement	","	276:20:9438:9438	8855014	199	True				
ANR	8855619	Statement	max_trace	276:22:9440:9448	8855014	200	True				
ANR	8855620	Statement	","	276:31:9449:9449	8855014	201	True				
ANR	8855621	Statement	mem	276:33:9451:9453	8855014	202	True				
ANR	8855622	Statement	","	276:36:9454:9454	8855014	203	True				
ANR	8855623	Statement	rp	276:38:9456:9457	8855014	204	True				
ANR	8855624	Statement	)	276:40:9458:9458	8855014	205	True				
ANR	8855625	CompoundStatement		119:8:3972:3987	8855014	206					
ANR	8855626	IdentifierDeclStatement	enum_ptr_t eptr ;	277:8:9470:9485	8855014	0	True				
ANR	8855627	IdentifierDecl	eptr		8855014	0					
ANR	8855628	IdentifierDeclType	enum_ptr_t		8855014	0					
ANR	8855629	Identifier	eptr		8855014	1					
ANR	8855630	ExpressionStatement	eptr . ptr = * rp -> p	279:8:9496:9513	8855014	1	True				
ANR	8855631	AssignmentExpression	eptr . ptr = * rp -> p		8855014	0		=			
ANR	8855632	MemberAccess	eptr . ptr		8855014	0					
ANR	8855633	Identifier	eptr		8855014	0					
ANR	8855634	Identifier	ptr		8855014	1					
ANR	8855635	UnaryOperationExpression	* rp -> p		8855014	1					
ANR	8855636	UnaryOperator	*		8855014	0					
ANR	8855637	PtrMemberAccess	rp -> p		8855014	1					
ANR	8855638	Identifier	rp		8855014	0					
ANR	8855639	Identifier	p		8855014	1					
ANR	8855640	ExpressionStatement	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]unmarking root"" , rp )"	280:8:9523:9592	8855014	2	True				
ANR	8855641	CallExpression	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]unmarking root"" , rp )"		8855014	0					
ANR	8855642	Callee	if_debug_root		8855014	0					
ANR	8855643	Identifier	if_debug_root		8855014	0					
ANR	8855644	ArgumentList	'6'		8855014	1					
ANR	8855645	Argument	'6'		8855014	0					
ANR	8855646	PrimaryExpression	'6'		8855014	0					
ANR	8855647	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8855648	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8855649	CastTarget	const gs_memory_t *		8855014	0					
ANR	8855650	Identifier	mem		8855014	1					
ANR	8855651	Argument	"""[6]unmarking root"""		8855014	2					
ANR	8855652	PrimaryExpression	"""[6]unmarking root"""		8855014	0					
ANR	8855653	Argument	rp		8855014	3					
ANR	8855654	Identifier	rp		8855014	0					
ANR	8855655	ExpressionStatement	"( * rp -> ptype -> unmark ) ( & eptr , & state )"	281:8:9602:9637	8855014	3	True				
ANR	8855656	CallExpression	"( * rp -> ptype -> unmark ) ( & eptr , & state )"		8855014	0					
ANR	8855657	Callee	* rp -> ptype -> unmark		8855014	0					
ANR	8855658	UnaryOperationExpression	* rp -> ptype -> unmark		8855014	0					
ANR	8855659	UnaryOperator	*		8855014	0					
ANR	8855660	PtrMemberAccess	rp -> ptype -> unmark		8855014	1					
ANR	8855661	PtrMemberAccess	rp -> ptype		8855014	0					
ANR	8855662	Identifier	rp		8855014	0					
ANR	8855663	Identifier	ptype		8855014	1					
ANR	8855664	Identifier	unmark		8855014	1					
ANR	8855665	ArgumentList	& eptr		8855014	1					
ANR	8855666	Argument	& eptr		8855014	0					
ANR	8855667	UnaryOperationExpression	& eptr		8855014	0					
ANR	8855668	UnaryOperator	&		8855014	0					
ANR	8855669	Identifier	eptr		8855014	1					
ANR	8855670	Argument	& state		8855014	1					
ANR	8855671	UnaryOperationExpression	& state		8855014	0					
ANR	8855672	UnaryOperator	&		8855014	0					
ANR	8855673	Identifier	state		8855014	1					
ANR	8855674	ExpressionStatement	"end_phase ( state . heap , ""clear root marks"" )"	284:4:9650:9690	8855014	207	True				
ANR	8855675	CallExpression	"end_phase ( state . heap , ""clear root marks"" )"		8855014	0					
ANR	8855676	Callee	end_phase		8855014	0					
ANR	8855677	Identifier	end_phase		8855014	0					
ANR	8855678	ArgumentList	state . heap		8855014	1					
ANR	8855679	Argument	state . heap		8855014	0					
ANR	8855680	MemberAccess	state . heap		8855014	0					
ANR	8855681	Identifier	state		8855014	0					
ANR	8855682	Identifier	heap		8855014	1					
ANR	8855683	Argument	"""clear root marks"""		8855014	1					
ANR	8855684	PrimaryExpression	"""clear root marks"""		8855014	0					
ANR	8855685	IfStatement	if ( global )		8855014	208					
ANR	8855686	Condition	global	286:8:9701:9706	8855014	0	True				
ANR	8855687	Identifier	global		8855014	0					
ANR	8855688	CompoundStatement		130:8:4285:4338	8855014	1					
ANR	8855689	IdentifierDeclStatement	op_array_table * global_ops = get_global_op_array ( cmem ) ;	287:8:9719:9773	8855014	0	True				
ANR	8855690	IdentifierDecl	* global_ops = get_global_op_array ( cmem )		8855014	0					
ANR	8855691	IdentifierDeclType	op_array_table *		8855014	0					
ANR	8855692	Identifier	global_ops		8855014	1					
ANR	8855693	AssignmentExpression	* global_ops = get_global_op_array ( cmem )		8855014	2		=			
ANR	8855694	Identifier	global_ops		8855014	0					
ANR	8855695	CallExpression	get_global_op_array ( cmem )		8855014	1					
ANR	8855696	Callee	get_global_op_array		8855014	0					
ANR	8855697	Identifier	get_global_op_array		8855014	0					
ANR	8855698	ArgumentList	cmem		8855014	1					
ANR	8855699	Argument	cmem		8855014	0					
ANR	8855700	Identifier	cmem		8855014	0					
ANR	8855701	IdentifierDeclStatement	op_array_table * local_ops = get_local_op_array ( cmem ) ;	288:8:9783:9836	8855014	1	True				
ANR	8855702	IdentifierDecl	* local_ops = get_local_op_array ( cmem )		8855014	0					
ANR	8855703	IdentifierDeclType	op_array_table *		8855014	0					
ANR	8855704	Identifier	local_ops		8855014	1					
ANR	8855705	AssignmentExpression	* local_ops = get_local_op_array ( cmem )		8855014	2		=			
ANR	8855706	Identifier	local_ops		8855014	0					
ANR	8855707	CallExpression	get_local_op_array ( cmem )		8855014	1					
ANR	8855708	Callee	get_local_op_array		8855014	0					
ANR	8855709	Identifier	get_local_op_array		8855014	0					
ANR	8855710	ArgumentList	cmem		8855014	1					
ANR	8855711	Argument	cmem		8855014	0					
ANR	8855712	Identifier	cmem		8855014	0					
ANR	8855713	ExpressionStatement	"gc_unmark_names ( state . ntable , global_ops , local_ops )"	289:8:9846:9898	8855014	2	True				
ANR	8855714	CallExpression	"gc_unmark_names ( state . ntable , global_ops , local_ops )"		8855014	0					
ANR	8855715	Callee	gc_unmark_names		8855014	0					
ANR	8855716	Identifier	gc_unmark_names		8855014	0					
ANR	8855717	ArgumentList	state . ntable		8855014	1					
ANR	8855718	Argument	state . ntable		8855014	0					
ANR	8855719	MemberAccess	state . ntable		8855014	0					
ANR	8855720	Identifier	state		8855014	0					
ANR	8855721	Identifier	ntable		8855014	1					
ANR	8855722	Argument	global_ops		8855014	1					
ANR	8855723	Identifier	global_ops		8855014	0					
ANR	8855724	Argument	local_ops		8855014	2					
ANR	8855725	Identifier	local_ops		8855014	0					
ANR	8855726	ExpressionStatement	"gc_init_mark_stack ( & ms_default . stack , ms_size_default )"	294:4:9959:10013	8855014	209	True				
ANR	8855727	CallExpression	"gc_init_mark_stack ( & ms_default . stack , ms_size_default )"		8855014	0					
ANR	8855728	Callee	gc_init_mark_stack		8855014	0					
ANR	8855729	Identifier	gc_init_mark_stack		8855014	0					
ANR	8855730	ArgumentList	& ms_default . stack		8855014	1					
ANR	8855731	Argument	& ms_default . stack		8855014	0					
ANR	8855732	UnaryOperationExpression	& ms_default . stack		8855014	0					
ANR	8855733	UnaryOperator	&		8855014	0					
ANR	8855734	MemberAccess	ms_default . stack		8855014	1					
ANR	8855735	Identifier	ms_default		8855014	0					
ANR	8855736	Identifier	stack		8855014	1					
ANR	8855737	Argument	ms_size_default		8855014	1					
ANR	8855738	Identifier	ms_size_default		8855014	0					
ANR	8855739	ExpressionStatement	ms_default . stack . prev = 0	295:4:10019:10044	8855014	210	True				
ANR	8855740	AssignmentExpression	ms_default . stack . prev = 0		8855014	0		=			
ANR	8855741	MemberAccess	ms_default . stack . prev		8855014	0					
ANR	8855742	MemberAccess	ms_default . stack		8855014	0					
ANR	8855743	Identifier	ms_default		8855014	0					
ANR	8855744	Identifier	stack		8855014	1					
ANR	8855745	Identifier	prev		8855014	1					
ANR	8855746	PrimaryExpression	0		8855014	1					
ANR	8855747	ExpressionStatement	ms_default . stack . on_heap = false	296:4:10050:10082	8855014	211	True				
ANR	8855748	AssignmentExpression	ms_default . stack . on_heap = false		8855014	0		=			
ANR	8855749	MemberAccess	ms_default . stack . on_heap		8855014	0					
ANR	8855750	MemberAccess	ms_default . stack		8855014	0					
ANR	8855751	Identifier	ms_default		8855014	0					
ANR	8855752	Identifier	stack		8855014	1					
ANR	8855753	Identifier	on_heap		8855014	1					
ANR	8855754	Identifier	false		8855014	1					
ANR	8855755	CompoundStatement		144:8:4711:4742	8855014	212					
ANR	8855756	IdentifierDeclStatement	gc_mark_stack * end = mark_stack ;	302:8:10209:10240	8855014	0	True				
ANR	8855757	IdentifierDecl	* end = mark_stack		8855014	0					
ANR	8855758	IdentifierDeclType	gc_mark_stack *		8855014	0					
ANR	8855759	Identifier	end		8855014	1					
ANR	8855760	AssignmentExpression	* end = mark_stack		8855014	2		=			
ANR	8855761	Identifier	mark_stack		8855014	0					
ANR	8855762	Identifier	mark_stack		8855014	1					
ANR	8855763	Statement	for_clumps	304:8:10251:10260	8855014	1	True				
ANR	8855764	Statement	(	304:18:10261:10261	8855014	2	True				
ANR	8855765	Statement	ispace	304:19:10262:10267	8855014	3	True				
ANR	8855766	Statement	","	304:25:10268:10268	8855014	4	True				
ANR	8855767	Statement	max_trace	304:27:10270:10278	8855014	5	True				
ANR	8855768	Statement	","	304:36:10279:10279	8855014	6	True				
ANR	8855769	Statement	mem	304:38:10281:10283	8855014	7	True				
ANR	8855770	Statement	","	304:41:10284:10284	8855014	8	True				
ANR	8855771	Statement	cp	304:43:10286:10287	8855014	9	True				
ANR	8855772	Statement	","	304:45:10288:10288	8855014	10	True				
ANR	8855773	Statement	&	304:47:10290:10290	8855014	11	True				
ANR	8855774	Statement	sw	304:48:10291:10292	8855014	12	True				
ANR	8855775	Statement	)	304:50:10293:10293	8855014	13	True				
ANR	8855776	CompoundStatement		147:12:4811:4843	8855014	14					
ANR	8855777	IdentifierDeclStatement	uint avail = cp -> ctop - cp -> cbot ;	305:12:10309:10341	8855014	0	True				
ANR	8855778	IdentifierDecl	avail = cp -> ctop - cp -> cbot		8855014	0					
ANR	8855779	IdentifierDeclType	uint		8855014	0					
ANR	8855780	Identifier	avail		8855014	1					
ANR	8855781	AssignmentExpression	avail = cp -> ctop - cp -> cbot		8855014	2		=			
ANR	8855782	Identifier	avail		8855014	0					
ANR	8855783	AdditiveExpression	cp -> ctop - cp -> cbot		8855014	1		-			
ANR	8855784	PtrMemberAccess	cp -> ctop		8855014	0					
ANR	8855785	Identifier	cp		8855014	0					
ANR	8855786	Identifier	ctop		8855014	1					
ANR	8855787	PtrMemberAccess	cp -> cbot		8855014	1					
ANR	8855788	Identifier	cp		8855014	0					
ANR	8855789	Identifier	cbot		8855014	1					
ANR	8855790	IfStatement	if ( avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min && ! cp -> inner_count )		8855014	1					
ANR	8855791	Condition	avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min && ! cp -> inner_count	307:16:10360:10474	8855014	0	True				
ANR	8855792	AndExpression	avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min && ! cp -> inner_count		8855014	0		&&			
ANR	8855793	RelationalExpression	avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min		8855014	0		>=			
ANR	8855794	Identifier	avail		8855014	0					
ANR	8855795	AdditiveExpression	sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min		8855014	1		+			
ANR	8855796	SizeofExpression	sizeof ( gc_mark_stack )		8855014	0					
ANR	8855797	Sizeof	sizeof		8855014	0					
ANR	8855798	SizeofOperand	gc_mark_stack		8855014	1					
ANR	8855799	MultiplicativeExpression	sizeof ( ms_entry ) * ms_size_min		8855014	1		*			
ANR	8855800	SizeofExpression	sizeof ( ms_entry )		8855014	0					
ANR	8855801	Sizeof	sizeof		8855014	0					
ANR	8855802	SizeofOperand	ms_entry		8855014	1					
ANR	8855803	Identifier	ms_size_min		8855014	1					
ANR	8855804	UnaryOperationExpression	! cp -> inner_count		8855014	1					
ANR	8855805	UnaryOperator	!		8855014	0					
ANR	8855806	PtrMemberAccess	cp -> inner_count		8855014	1					
ANR	8855807	Identifier	cp		8855014	0					
ANR	8855808	Identifier	inner_count		8855014	1					
ANR	8855809	CompoundStatement		153:16:5014:5061	8855014	1					
ANR	8855810	IdentifierDeclStatement	gc_mark_stack * pms = ( gc_mark_stack * ) cp -> cbot ;	311:16:10512:10559	8855014	0	True				
ANR	8855811	IdentifierDecl	* pms = ( gc_mark_stack * ) cp -> cbot		8855014	0					
ANR	8855812	IdentifierDeclType	gc_mark_stack *		8855014	0					
ANR	8855813	Identifier	pms		8855014	1					
ANR	8855814	AssignmentExpression	* pms = ( gc_mark_stack * ) cp -> cbot		8855014	2		=			
ANR	8855815	Identifier	pms		8855014	0					
ANR	8855816	CastExpression	( gc_mark_stack * ) cp -> cbot		8855014	1					
ANR	8855817	CastTarget	gc_mark_stack *		8855014	0					
ANR	8855818	PtrMemberAccess	cp -> cbot		8855014	1					
ANR	8855819	Identifier	cp		8855014	0					
ANR	8855820	Identifier	cbot		8855014	1					
ANR	8855821	ExpressionStatement	"gc_init_mark_stack ( pms , ( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry ) )"	313:16:10578:10688	8855014	1	True				
ANR	8855822	CallExpression	"gc_init_mark_stack ( pms , ( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry ) )"		8855014	0					
ANR	8855823	Callee	gc_init_mark_stack		8855014	0					
ANR	8855824	Identifier	gc_init_mark_stack		8855014	0					
ANR	8855825	ArgumentList	pms		8855014	1					
ANR	8855826	Argument	pms		8855014	0					
ANR	8855827	Identifier	pms		8855014	0					
ANR	8855828	Argument	( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry )		8855014	1					
ANR	8855829	MultiplicativeExpression	( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry )		8855014	0		/			
ANR	8855830	AdditiveExpression	avail - sizeof ( gc_mark_stack )		8855014	0		-			
ANR	8855831	Identifier	avail		8855014	0					
ANR	8855832	SizeofExpression	sizeof ( gc_mark_stack )		8855014	1					
ANR	8855833	Sizeof	sizeof		8855014	0					
ANR	8855834	SizeofOperand	gc_mark_stack		8855014	1					
ANR	8855835	SizeofExpression	sizeof ( ms_entry )		8855014	1					
ANR	8855836	Sizeof	sizeof		8855014	0					
ANR	8855837	SizeofOperand	ms_entry		8855014	1					
ANR	8855838	ExpressionStatement	end -> next = pms	315:16:10706:10721	8855014	2	True				
ANR	8855839	AssignmentExpression	end -> next = pms		8855014	0		=			
ANR	8855840	PtrMemberAccess	end -> next		8855014	0					
ANR	8855841	Identifier	end		8855014	0					
ANR	8855842	Identifier	next		8855014	1					
ANR	8855843	Identifier	pms		8855014	1					
ANR	8855844	ExpressionStatement	pms -> prev = end	316:16:10739:10754	8855014	3	True				
ANR	8855845	AssignmentExpression	pms -> prev = end		8855014	0		=			
ANR	8855846	PtrMemberAccess	pms -> prev		8855014	0					
ANR	8855847	Identifier	pms		8855014	0					
ANR	8855848	Identifier	prev		8855014	1					
ANR	8855849	Identifier	end		8855014	1					
ANR	8855850	ExpressionStatement	pms -> on_heap = false	317:16:10772:10792	8855014	4	True				
ANR	8855851	AssignmentExpression	pms -> on_heap = false		8855014	0		=			
ANR	8855852	PtrMemberAccess	pms -> on_heap		8855014	0					
ANR	8855853	Identifier	pms		8855014	0					
ANR	8855854	Identifier	on_heap		8855014	1					
ANR	8855855	Identifier	false		8855014	1					
ANR	8855856	ExpressionStatement	"if_debug2m ( '6' , ( const gs_memory_t * ) mem , ""[6]adding free 0x%lx(%u) to mark stack\\n"" , ( ulong ) pms , pms -> count )"	318:16:10810:10974	8855014	5	True				
ANR	8855857	CallExpression	"if_debug2m ( '6' , ( const gs_memory_t * ) mem , ""[6]adding free 0x%lx(%u) to mark stack\\n"" , ( ulong ) pms , pms -> count )"		8855014	0					
ANR	8855858	Callee	if_debug2m		8855014	0					
ANR	8855859	Identifier	if_debug2m		8855014	0					
ANR	8855860	ArgumentList	'6'		8855014	1					
ANR	8855861	Argument	'6'		8855014	0					
ANR	8855862	PrimaryExpression	'6'		8855014	0					
ANR	8855863	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8855864	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8855865	CastTarget	const gs_memory_t *		8855014	0					
ANR	8855866	Identifier	mem		8855014	1					
ANR	8855867	Argument	"""[6]adding free 0x%lx(%u) to mark stack\\n"""		8855014	2					
ANR	8855868	PrimaryExpression	"""[6]adding free 0x%lx(%u) to mark stack\\n"""		8855014	0					
ANR	8855869	Argument	( ulong ) pms		8855014	3					
ANR	8855870	CastExpression	( ulong ) pms		8855014	0					
ANR	8855871	CastTarget	ulong		8855014	0					
ANR	8855872	Identifier	pms		8855014	1					
ANR	8855873	Argument	pms -> count		8855014	4					
ANR	8855874	PtrMemberAccess	pms -> count		8855014	0					
ANR	8855875	Identifier	pms		8855014	0					
ANR	8855876	Identifier	count		8855014	1					
ANR	8855877	ExpressionStatement	cp -> rescan_bot = cp -> cend	322:12:11002:11027	8855014	2	True				
ANR	8855878	AssignmentExpression	cp -> rescan_bot = cp -> cend		8855014	0		=			
ANR	8855879	PtrMemberAccess	cp -> rescan_bot		8855014	0					
ANR	8855880	Identifier	cp		8855014	0					
ANR	8855881	Identifier	rescan_bot		8855014	1					
ANR	8855882	PtrMemberAccess	cp -> cend		8855014	1					
ANR	8855883	Identifier	cp		8855014	0					
ANR	8855884	Identifier	cend		8855014	1					
ANR	8855885	ExpressionStatement	cp -> rescan_top = cp -> cbase	323:12:11041:11067	8855014	3	True				
ANR	8855886	AssignmentExpression	cp -> rescan_top = cp -> cbase		8855014	0		=			
ANR	8855887	PtrMemberAccess	cp -> rescan_top		8855014	0					
ANR	8855888	Identifier	cp		8855014	0					
ANR	8855889	Identifier	rescan_top		8855014	1					
ANR	8855890	PtrMemberAccess	cp -> cbase		8855014	1					
ANR	8855891	Identifier	cp		8855014	0					
ANR	8855892	Identifier	cbase		8855014	1					
ANR	8855893	CompoundStatement		172:8:5637:5649	8855014	213					
ANR	8855894	IdentifierDeclStatement	int more = 0 ;	330:8:11135:11147	8855014	0	True				
ANR	8855895	IdentifierDecl	more = 0		8855014	0					
ANR	8855896	IdentifierDeclType	int		8855014	0					
ANR	8855897	Identifier	more		8855014	1					
ANR	8855898	AssignmentExpression	more = 0		8855014	2		=			
ANR	8855899	Identifier	more		8855014	0					
ANR	8855900	PrimaryExpression	0		8855014	1					
ANR	8855901	Statement	for_roots	334:8:11190:11198	8855014	1	True				
ANR	8855902	Statement	(	334:17:11199:11199	8855014	2	True				
ANR	8855903	Statement	ispace	334:18:11200:11205	8855014	3	True				
ANR	8855904	Statement	","	334:24:11206:11206	8855014	4	True				
ANR	8855905	Statement	max_trace	334:26:11208:11216	8855014	5	True				
ANR	8855906	Statement	","	334:35:11217:11217	8855014	6	True				
ANR	8855907	Statement	mem	334:37:11219:11221	8855014	7	True				
ANR	8855908	Statement	","	334:40:11222:11222	8855014	8	True				
ANR	8855909	Statement	rp	334:42:11224:11225	8855014	9	True				
ANR	8855910	Statement	)	334:44:11226:11226	8855014	10	True				
ANR	8855911	CompoundStatement		176:46:5730:5730	8855014	11					
ANR	8855912	ExpressionStatement	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]marking root"" , rp )"	335:12:11242:11309	8855014	0	True				
ANR	8855913	CallExpression	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]marking root"" , rp )"		8855014	0					
ANR	8855914	Callee	if_debug_root		8855014	0					
ANR	8855915	Identifier	if_debug_root		8855014	0					
ANR	8855916	ArgumentList	'6'		8855014	1					
ANR	8855917	Argument	'6'		8855014	0					
ANR	8855918	PrimaryExpression	'6'		8855014	0					
ANR	8855919	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8855920	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8855921	CastTarget	const gs_memory_t *		8855014	0					
ANR	8855922	Identifier	mem		8855014	1					
ANR	8855923	Argument	"""[6]marking root"""		8855014	2					
ANR	8855924	PrimaryExpression	"""[6]marking root"""		8855014	0					
ANR	8855925	Argument	rp		8855014	3					
ANR	8855926	Identifier	rp		8855014	0					
ANR	8855927	ExpressionStatement	"more |= gc_trace ( rp , & state , mark_stack )"	336:12:11323:11363	8855014	1	True				
ANR	8855928	AssignmentExpression	"more |= gc_trace ( rp , & state , mark_stack )"		8855014	0		|=			
ANR	8855929	Identifier	more		8855014	0					
ANR	8855930	CallExpression	"gc_trace ( rp , & state , mark_stack )"		8855014	1					
ANR	8855931	Callee	gc_trace		8855014	0					
ANR	8855932	Identifier	gc_trace		8855014	0					
ANR	8855933	ArgumentList	rp		8855014	1					
ANR	8855934	Argument	rp		8855014	0					
ANR	8855935	Identifier	rp		8855014	0					
ANR	8855936	Argument	& state		8855014	1					
ANR	8855937	UnaryOperationExpression	& state		8855014	0					
ANR	8855938	UnaryOperator	&		8855014	0					
ANR	8855939	Identifier	state		8855014	1					
ANR	8855940	Argument	mark_stack		8855014	2					
ANR	8855941	Identifier	mark_stack		8855014	0					
ANR	8855942	ExpressionStatement	"end_phase ( state . heap , ""mark"" )"	339:8:11384:11412	8855014	12	True				
ANR	8855943	CallExpression	"end_phase ( state . heap , ""mark"" )"		8855014	0					
ANR	8855944	Callee	end_phase		8855014	0					
ANR	8855945	Identifier	end_phase		8855014	0					
ANR	8855946	ArgumentList	state . heap		8855014	1					
ANR	8855947	Argument	state . heap		8855014	0					
ANR	8855948	MemberAccess	state . heap		8855014	0					
ANR	8855949	Identifier	state		8855014	0					
ANR	8855950	Identifier	heap		8855014	1					
ANR	8855951	Argument	"""mark"""		8855014	1					
ANR	8855952	PrimaryExpression	"""mark"""		8855014	0					
ANR	8855953	IfStatement	if ( ! global )		8855014	13					
ANR	8855954	Condition	! global	343:12:11493:11499	8855014	0	True				
ANR	8855955	UnaryOperationExpression	! global		8855014	0					
ANR	8855956	UnaryOperator	!		8855014	0					
ANR	8855957	Identifier	global		8855014	1					
ANR	8855958	Statement	for_clumps	344:12:11514:11523	8855014	1	True				
ANR	8855959	Statement	(	344:22:11524:11524	8855014	14	True				
ANR	8855960	Statement	ispace	344:23:11525:11530	8855014	15	True				
ANR	8855961	Statement	","	344:29:11531:11531	8855014	16	True				
ANR	8855962	Statement	min_collect	344:31:11533:11543	8855014	17	True				
ANR	8855963	Statement	-	344:43:11545:11545	8855014	18	True				
ANR	8855964	Statement	1	344:45:11547:11547	8855014	19	True				
ANR	8855965	Statement	","	344:46:11548:11548	8855014	20	True				
ANR	8855966	Statement	mem	344:48:11550:11552	8855014	21	True				
ANR	8855967	Statement	","	344:51:11553:11553	8855014	22	True				
ANR	8855968	Statement	cp	344:53:11555:11556	8855014	23	True				
ANR	8855969	Statement	","	344:55:11557:11557	8855014	24	True				
ANR	8855970	Statement	&	344:57:11559:11559	8855014	25	True				
ANR	8855971	Statement	sw	344:58:11560:11561	8855014	26	True				
ANR	8855972	Statement	)	344:60:11562:11562	8855014	27	True				
ANR	8855973	ExpressionStatement	"more |= gc_trace_clump ( ( const gs_memory_t * ) mem , cp , & state , mark_stack )"	345:16:11580:11652	8855014	28	True				
ANR	8855974	AssignmentExpression	"more |= gc_trace_clump ( ( const gs_memory_t * ) mem , cp , & state , mark_stack )"		8855014	0		|=			
ANR	8855975	Identifier	more		8855014	0					
ANR	8855976	CallExpression	"gc_trace_clump ( ( const gs_memory_t * ) mem , cp , & state , mark_stack )"		8855014	1					
ANR	8855977	Callee	gc_trace_clump		8855014	0					
ANR	8855978	Identifier	gc_trace_clump		8855014	0					
ANR	8855979	ArgumentList	( const gs_memory_t * ) mem		8855014	1					
ANR	8855980	Argument	( const gs_memory_t * ) mem		8855014	0					
ANR	8855981	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8855982	CastTarget	const gs_memory_t *		8855014	0					
ANR	8855983	Identifier	mem		8855014	1					
ANR	8855984	Argument	cp		8855014	1					
ANR	8855985	Identifier	cp		8855014	0					
ANR	8855986	Argument	& state		8855014	2					
ANR	8855987	UnaryOperationExpression	& state		8855014	0					
ANR	8855988	UnaryOperator	&		8855014	0					
ANR	8855989	Identifier	state		8855014	1					
ANR	8855990	Argument	mark_stack		8855014	3					
ANR	8855991	Identifier	mark_stack		8855014	0					
ANR	8855992	WhileStatement	while ( more < 0 )		8855014	29					
ANR	8855993	Condition	more < 0	349:15:11713:11720	8855014	0	True				
ANR	8855994	RelationalExpression	more < 0		8855014	0		<			
ANR	8855995	Identifier	more		8855014	0					
ANR	8855996	PrimaryExpression	0		8855014	1					
ANR	8855997	CompoundStatement		191:25:6225:6225	8855014	1					
ANR	8855998	ExpressionStatement	more = 0	350:12:11760:11768	8855014	0	True				
ANR	8855999	AssignmentExpression	more = 0		8855014	0		=			
ANR	8856000	Identifier	more		8855014	0					
ANR	8856001	PrimaryExpression	0		8855014	1					
ANR	8856002	Statement	for_clumps	351:12:11782:11791	8855014	1	True				
ANR	8856003	Statement	(	351:22:11792:11792	8855014	2	True				
ANR	8856004	Statement	ispace	351:23:11793:11798	8855014	3	True				
ANR	8856005	Statement	","	351:29:11799:11799	8855014	4	True				
ANR	8856006	Statement	max_trace	351:31:11801:11809	8855014	5	True				
ANR	8856007	Statement	","	351:40:11810:11810	8855014	6	True				
ANR	8856008	Statement	mem	351:42:11812:11814	8855014	7	True				
ANR	8856009	Statement	","	351:45:11815:11815	8855014	8	True				
ANR	8856010	Statement	cp	351:47:11817:11818	8855014	9	True				
ANR	8856011	Statement	","	351:49:11819:11819	8855014	10	True				
ANR	8856012	Statement	&	351:51:11821:11821	8855014	11	True				
ANR	8856013	Statement	sw	351:52:11822:11823	8855014	12	True				
ANR	8856014	Statement	)	351:54:11824:11824	8855014	13	True				
ANR	8856015	ExpressionStatement	"more |= gc_rescan_clump ( cp , & state , mark_stack )"	352:16:11842:11889	8855014	14	True				
ANR	8856016	AssignmentExpression	"more |= gc_rescan_clump ( cp , & state , mark_stack )"		8855014	0		|=			
ANR	8856017	Identifier	more		8855014	0					
ANR	8856018	CallExpression	"gc_rescan_clump ( cp , & state , mark_stack )"		8855014	1					
ANR	8856019	Callee	gc_rescan_clump		8855014	0					
ANR	8856020	Identifier	gc_rescan_clump		8855014	0					
ANR	8856021	ArgumentList	cp		8855014	1					
ANR	8856022	Argument	cp		8855014	0					
ANR	8856023	Identifier	cp		8855014	0					
ANR	8856024	Argument	& state		8855014	1					
ANR	8856025	UnaryOperationExpression	& state		8855014	0					
ANR	8856026	UnaryOperator	&		8855014	0					
ANR	8856027	Identifier	state		8855014	1					
ANR	8856028	Argument	mark_stack		8855014	2					
ANR	8856029	Identifier	mark_stack		8855014	0					
ANR	8856030	ExpressionStatement	"end_phase ( state . heap , ""mark overflow"" )"	355:8:11910:11947	8855014	30	True				
ANR	8856031	CallExpression	"end_phase ( state . heap , ""mark overflow"" )"		8855014	0					
ANR	8856032	Callee	end_phase		8855014	0					
ANR	8856033	Identifier	end_phase		8855014	0					
ANR	8856034	ArgumentList	state . heap		8855014	1					
ANR	8856035	Argument	state . heap		8855014	0					
ANR	8856036	MemberAccess	state . heap		8855014	0					
ANR	8856037	Identifier	state		8855014	0					
ANR	8856038	Identifier	heap		8855014	1					
ANR	8856039	Argument	"""mark overflow"""		8855014	1					
ANR	8856040	PrimaryExpression	"""mark overflow"""		8855014	0					
ANR	8856041	CompoundStatement		203:8:6504:6535	8855014	214					
ANR	8856042	IdentifierDeclStatement	gc_mark_stack * pms = mark_stack ;	361:8:12002:12033	8855014	0	True				
ANR	8856043	IdentifierDecl	* pms = mark_stack		8855014	0					
ANR	8856044	IdentifierDeclType	gc_mark_stack *		8855014	0					
ANR	8856045	Identifier	pms		8855014	1					
ANR	8856046	AssignmentExpression	* pms = mark_stack		8855014	2		=			
ANR	8856047	Identifier	mark_stack		8855014	0					
ANR	8856048	Identifier	mark_stack		8855014	1					
ANR	8856049	WhileStatement	while ( pms -> next )		8855014	1					
ANR	8856050	Condition	pms -> next	363:15:12051:12059	8855014	0	True				
ANR	8856051	PtrMemberAccess	pms -> next		8855014	0					
ANR	8856052	Identifier	pms		8855014	0					
ANR	8856053	Identifier	next		8855014	1					
ANR	8856054	ExpressionStatement	pms = pms -> next	364:12:12074:12089	8855014	1	True				
ANR	8856055	AssignmentExpression	pms = pms -> next		8855014	0		=			
ANR	8856056	Identifier	pms		8855014	0					
ANR	8856057	PtrMemberAccess	pms -> next		8855014	1					
ANR	8856058	Identifier	pms		8855014	0					
ANR	8856059	Identifier	next		8855014	1					
ANR	8856060	WhileStatement	while ( pms )		8855014	2					
ANR	8856061	Condition	pms	365:15:12106:12108	8855014	0	True				
ANR	8856062	Identifier	pms		8855014	0					
ANR	8856063	CompoundStatement		208:12:6627:6658	8855014	1					
ANR	8856064	IdentifierDeclStatement	gc_mark_stack * prev = pms -> prev ;	366:12:12125:12156	8855014	0	True				
ANR	8856065	IdentifierDecl	* prev = pms -> prev		8855014	0					
ANR	8856066	IdentifierDeclType	gc_mark_stack *		8855014	0					
ANR	8856067	Identifier	prev		8855014	1					
ANR	8856068	AssignmentExpression	* prev = pms -> prev		8855014	2		=			
ANR	8856069	Identifier	prev		8855014	0					
ANR	8856070	PtrMemberAccess	pms -> prev		8855014	1					
ANR	8856071	Identifier	pms		8855014	0					
ANR	8856072	Identifier	prev		8855014	1					
ANR	8856073	IfStatement	if ( pms -> on_heap )		8855014	1					
ANR	8856074	Condition	pms -> on_heap	368:16:12175:12186	8855014	0	True				
ANR	8856075	PtrMemberAccess	pms -> on_heap		8855014	0					
ANR	8856076	Identifier	pms		8855014	0					
ANR	8856077	Identifier	on_heap		8855014	1					
ANR	8856078	ExpressionStatement	"gs_free_object ( state . heap , pms , ""gc mark stack"" )"	369:16:12205:12253	8855014	1	True				
ANR	8856079	CallExpression	"gs_free_object ( state . heap , pms , ""gc mark stack"" )"		8855014	0					
ANR	8856080	Callee	gs_free_object		8855014	0					
ANR	8856081	Identifier	gs_free_object		8855014	0					
ANR	8856082	ArgumentList	state . heap		8855014	1					
ANR	8856083	Argument	state . heap		8855014	0					
ANR	8856084	MemberAccess	state . heap		8855014	0					
ANR	8856085	Identifier	state		8855014	0					
ANR	8856086	Identifier	heap		8855014	1					
ANR	8856087	Argument	pms		8855014	1					
ANR	8856088	Identifier	pms		8855014	0					
ANR	8856089	Argument	"""gc mark stack"""		8855014	2					
ANR	8856090	PrimaryExpression	"""gc mark stack"""		8855014	0					
ANR	8856091	ElseStatement	else		8855014	0					
ANR	8856092	ExpressionStatement	"gs_alloc_fill ( pms , gs_alloc_fill_free , sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count )"	371:16:12288:12402	8855014	0	True				
ANR	8856093	CallExpression	"gs_alloc_fill ( pms , gs_alloc_fill_free , sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count )"		8855014	0					
ANR	8856094	Callee	gs_alloc_fill		8855014	0					
ANR	8856095	Identifier	gs_alloc_fill		8855014	0					
ANR	8856096	ArgumentList	pms		8855014	1					
ANR	8856097	Argument	pms		8855014	0					
ANR	8856098	Identifier	pms		8855014	0					
ANR	8856099	Argument	gs_alloc_fill_free		8855014	1					
ANR	8856100	Identifier	gs_alloc_fill_free		8855014	0					
ANR	8856101	Argument	sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count		8855014	2					
ANR	8856102	AdditiveExpression	sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count		8855014	0		+			
ANR	8856103	SizeofExpression	sizeof ( * pms )		8855014	0					
ANR	8856104	Sizeof	sizeof		8855014	0					
ANR	8856105	UnaryOperationExpression	* pms		8855014	1					
ANR	8856106	UnaryOperator	*		8855014	0					
ANR	8856107	Identifier	pms		8855014	1					
ANR	8856108	MultiplicativeExpression	sizeof ( ms_entry ) * pms -> count		8855014	1		*			
ANR	8856109	SizeofExpression	sizeof ( ms_entry )		8855014	0					
ANR	8856110	Sizeof	sizeof		8855014	0					
ANR	8856111	SizeofOperand	ms_entry		8855014	1					
ANR	8856112	PtrMemberAccess	pms -> count		8855014	1					
ANR	8856113	Identifier	pms		8855014	0					
ANR	8856114	Identifier	count		8855014	1					
ANR	8856115	ExpressionStatement	pms = prev	373:12:12416:12426	8855014	2	True				
ANR	8856116	AssignmentExpression	pms = prev		8855014	0		=			
ANR	8856117	Identifier	pms		8855014	0					
ANR	8856118	Identifier	prev		8855014	1					
ANR	8856119	ExpressionStatement	"end_phase ( state . heap , ""free mark stack"" )"	377:4:12449:12488	8855014	215	True				
ANR	8856120	CallExpression	"end_phase ( state . heap , ""free mark stack"" )"		8855014	0					
ANR	8856121	Callee	end_phase		8855014	0					
ANR	8856122	Identifier	end_phase		8855014	0					
ANR	8856123	ArgumentList	state . heap		8855014	1					
ANR	8856124	Argument	state . heap		8855014	0					
ANR	8856125	MemberAccess	state . heap		8855014	0					
ANR	8856126	Identifier	state		8855014	0					
ANR	8856127	Identifier	heap		8855014	1					
ANR	8856128	Argument	"""free mark stack"""		8855014	1					
ANR	8856129	PrimaryExpression	"""free mark stack"""		8855014	0					
ANR	8856130	IfStatement	if ( global )		8855014	216					
ANR	8856131	Condition	global	379:8:12499:12504	8855014	0	True				
ANR	8856132	Identifier	global		8855014	0					
ANR	8856133	CompoundStatement		221:16:7009:7009	8855014	1					
ANR	8856134	ExpressionStatement	gc_trace_finish ( & state )	380:8:12517:12540	8855014	0	True				
ANR	8856135	CallExpression	gc_trace_finish ( & state )		8855014	0					
ANR	8856136	Callee	gc_trace_finish		8855014	0					
ANR	8856137	Identifier	gc_trace_finish		8855014	0					
ANR	8856138	ArgumentList	& state		8855014	1					
ANR	8856139	Argument	& state		8855014	0					
ANR	8856140	UnaryOperationExpression	& state		8855014	0					
ANR	8856141	UnaryOperator	&		8855014	0					
ANR	8856142	Identifier	state		8855014	1					
ANR	8856143	ExpressionStatement	"names_trace_finish ( state . ntable , & state )"	381:8:12550:12590	8855014	1	True				
ANR	8856144	CallExpression	"names_trace_finish ( state . ntable , & state )"		8855014	0					
ANR	8856145	Callee	names_trace_finish		8855014	0					
ANR	8856146	Identifier	names_trace_finish		8855014	0					
ANR	8856147	ArgumentList	state . ntable		8855014	1					
ANR	8856148	Argument	state . ntable		8855014	0					
ANR	8856149	MemberAccess	state . ntable		8855014	0					
ANR	8856150	Identifier	state		8855014	0					
ANR	8856151	Identifier	ntable		8855014	1					
ANR	8856152	Argument	& state		8855014	1					
ANR	8856153	UnaryOperationExpression	& state		8855014	0					
ANR	8856154	UnaryOperator	&		8855014	0					
ANR	8856155	Identifier	state		8855014	1					
ANR	8856156	ExpressionStatement	"end_phase ( state . heap , ""finish trace"" )"	383:8:12601:12637	8855014	2	True				
ANR	8856157	CallExpression	"end_phase ( state . heap , ""finish trace"" )"		8855014	0					
ANR	8856158	Callee	end_phase		8855014	0					
ANR	8856159	Identifier	end_phase		8855014	0					
ANR	8856160	ArgumentList	state . heap		8855014	1					
ANR	8856161	Argument	state . heap		8855014	0					
ANR	8856162	MemberAccess	state . heap		8855014	0					
ANR	8856163	Identifier	state		8855014	0					
ANR	8856164	Identifier	heap		8855014	1					
ANR	8856165	Argument	"""finish trace"""		8855014	1					
ANR	8856166	PrimaryExpression	"""finish trace"""		8855014	0					
ANR	8856167	CompoundStatement		231:8:7268:7273	8855014	217					
ANR	8856168	IdentifierDeclStatement	int i ;	389:8:12766:12771	8855014	0	True				
ANR	8856169	IdentifierDecl	i		8855014	0					
ANR	8856170	IdentifierDeclType	int		8855014	0					
ANR	8856171	Identifier	i		8855014	1					
ANR	8856172	Statement	for_collected_spaces	391:8:12782:12801	8855014	1	True				
ANR	8856173	Statement	(	391:28:12802:12802	8855014	2	True				
ANR	8856174	Statement	i	391:29:12803:12803	8855014	3	True				
ANR	8856175	Statement	)	391:30:12804:12804	8855014	4	True				
ANR	8856176	CompoundStatement		234:12:7322:7362	8855014	5					
ANR	8856177	IdentifierDeclStatement	gs_ref_memory_t * mem = space_memories [ i ] ;	392:12:12820:12860	8855014	0	True				
ANR	8856178	IdentifierDecl	* mem = space_memories [ i ]		8855014	0					
ANR	8856179	IdentifierDeclType	gs_ref_memory_t *		8855014	0					
ANR	8856180	Identifier	mem		8855014	1					
ANR	8856181	AssignmentExpression	* mem = space_memories [ i ]		8855014	2		=			
ANR	8856182	Identifier	mem		8855014	0					
ANR	8856183	ArrayIndexing	space_memories [ i ]		8855014	1					
ANR	8856184	Identifier	space_memories		8855014	0					
ANR	8856185	Identifier	i		8855014	1					
ANR	8856186	ExpressionStatement	alloc_save__filter_changes ( mem )	394:12:12875:12906	8855014	1	True				
ANR	8856187	CallExpression	alloc_save__filter_changes ( mem )		8855014	0					
ANR	8856188	Callee	alloc_save__filter_changes		8855014	0					
ANR	8856189	Identifier	alloc_save__filter_changes		8855014	0					
ANR	8856190	ArgumentList	mem		8855014	1					
ANR	8856191	Argument	mem		8855014	0					
ANR	8856192	Identifier	mem		8855014	0					
ANR	8856193	Statement	for_clumps	401:4:13131:13140	8855014	218	True				
ANR	8856194	Statement	(	401:14:13141:13141	8855014	219	True				
ANR	8856195	Statement	ispace	401:15:13142:13147	8855014	220	True				
ANR	8856196	Statement	","	401:21:13148:13148	8855014	221	True				
ANR	8856197	Statement	min_collect	401:23:13150:13160	8855014	222	True				
ANR	8856198	Statement	-	401:35:13162:13162	8855014	223	True				
ANR	8856199	Statement	1	401:37:13164:13164	8855014	224	True				
ANR	8856200	Statement	","	401:38:13165:13165	8855014	225	True				
ANR	8856201	Statement	mem	401:40:13167:13169	8855014	226	True				
ANR	8856202	Statement	","	401:43:13170:13170	8855014	227	True				
ANR	8856203	Statement	cp	401:45:13172:13173	8855014	228	True				
ANR	8856204	Statement	","	401:47:13174:13174	8855014	229	True				
ANR	8856205	Statement	&	401:49:13176:13176	8855014	230	True				
ANR	8856206	Statement	sw	401:50:13177:13178	8855014	231	True				
ANR	8856207	Statement	)	401:52:13179:13179	8855014	232	True				
ANR	8856208	ExpressionStatement	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"	402:8:13189:13241	8855014	233	True				
ANR	8856209	CallExpression	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"		8855014	0					
ANR	8856210	Callee	gc_objects_clear_marks		8855014	0					
ANR	8856211	Identifier	gc_objects_clear_marks		8855014	0					
ANR	8856212	ArgumentList	( const gs_memory_t * ) mem		8855014	1					
ANR	8856213	Argument	( const gs_memory_t * ) mem		8855014	0					
ANR	8856214	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856215	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856216	Identifier	mem		8855014	1					
ANR	8856217	Argument	cp		8855014	1					
ANR	8856218	Identifier	cp		8855014	0					
ANR	8856219	ExpressionStatement	"end_phase ( state . heap , ""post-clear marks"" )"	404:4:13248:13288	8855014	234	True				
ANR	8856220	CallExpression	"end_phase ( state . heap , ""post-clear marks"" )"		8855014	0					
ANR	8856221	Callee	end_phase		8855014	0					
ANR	8856222	Identifier	end_phase		8855014	0					
ANR	8856223	ArgumentList	state . heap		8855014	1					
ANR	8856224	Argument	state . heap		8855014	0					
ANR	8856225	MemberAccess	state . heap		8855014	0					
ANR	8856226	Identifier	state		8855014	0					
ANR	8856227	Identifier	heap		8855014	1					
ANR	8856228	Argument	"""post-clear marks"""		8855014	1					
ANR	8856229	PrimaryExpression	"""post-clear marks"""		8855014	0					
ANR	8856230	Statement	for_clumps	406:4:13295:13304	8855014	235	True				
ANR	8856231	Statement	(	406:14:13305:13305	8855014	236	True				
ANR	8856232	Statement	ispace	406:15:13306:13311	8855014	237	True				
ANR	8856233	Statement	","	406:21:13312:13312	8855014	238	True				
ANR	8856234	Statement	min_collect	406:23:13314:13324	8855014	239	True				
ANR	8856235	Statement	-	406:35:13326:13326	8855014	240	True				
ANR	8856236	Statement	1	406:37:13328:13328	8855014	241	True				
ANR	8856237	Statement	","	406:38:13329:13329	8855014	242	True				
ANR	8856238	Statement	mem	406:40:13331:13333	8855014	243	True				
ANR	8856239	Statement	","	406:43:13334:13334	8855014	244	True				
ANR	8856240	Statement	cp	406:45:13336:13337	8855014	245	True				
ANR	8856241	Statement	","	406:47:13338:13338	8855014	246	True				
ANR	8856242	Statement	&	406:49:13340:13340	8855014	247	True				
ANR	8856243	Statement	sw	406:50:13341:13342	8855014	248	True				
ANR	8856244	Statement	)	406:52:13343:13343	8855014	249	True				
ANR	8856245	ExpressionStatement	gc_clear_reloc ( cp )	407:8:13353:13371	8855014	250	True				
ANR	8856246	CallExpression	gc_clear_reloc ( cp )		8855014	0					
ANR	8856247	Callee	gc_clear_reloc		8855014	0					
ANR	8856248	Identifier	gc_clear_reloc		8855014	0					
ANR	8856249	ArgumentList	cp		8855014	1					
ANR	8856250	Argument	cp		8855014	0					
ANR	8856251	Identifier	cp		8855014	0					
ANR	8856252	ExpressionStatement	"end_phase ( state . heap , ""clear reloc"" )"	409:4:13378:13413	8855014	251	True				
ANR	8856253	CallExpression	"end_phase ( state . heap , ""clear reloc"" )"		8855014	0					
ANR	8856254	Callee	end_phase		8855014	0					
ANR	8856255	Identifier	end_phase		8855014	0					
ANR	8856256	ArgumentList	state . heap		8855014	1					
ANR	8856257	Argument	state . heap		8855014	0					
ANR	8856258	MemberAccess	state . heap		8855014	0					
ANR	8856259	Identifier	state		8855014	0					
ANR	8856260	Identifier	heap		8855014	1					
ANR	8856261	Argument	"""clear reloc"""		8855014	1					
ANR	8856262	PrimaryExpression	"""clear reloc"""		8855014	0					
ANR	8856263	CompoundStatement		260:8:8237:8242	8855014	252					
ANR	8856264	IdentifierDeclStatement	int i ;	418:8:13735:13740	8855014	0	True				
ANR	8856265	IdentifierDecl	i		8855014	0					
ANR	8856266	IdentifierDeclType	int		8855014	0					
ANR	8856267	Identifier	i		8855014	1					
ANR	8856268	Statement	for_collected_spaces	420:8:13751:13770	8855014	1	True				
ANR	8856269	ExpressionStatement	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , false )"	420:28:13771:13842	8855014	2	True				
ANR	8856270	CastExpression	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , false )"		8855014	0					
ANR	8856271	CastTarget	i		8855014	0					
ANR	8856272	CallExpression	"gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , false )"		8855014	1					
ANR	8856273	Callee	gs_enable_free		8855014	0					
ANR	8856274	Identifier	gs_enable_free		8855014	0					
ANR	8856275	ArgumentList	( gs_memory_t * ) space_memories [ i ]		8855014	1					
ANR	8856276	Argument	( gs_memory_t * ) space_memories [ i ]		8855014	0					
ANR	8856277	CastExpression	( gs_memory_t * ) space_memories [ i ]		8855014	0					
ANR	8856278	CastTarget	gs_memory_t *		8855014	0					
ANR	8856279	ArrayIndexing	space_memories [ i ]		8855014	1					
ANR	8856280	Identifier	space_memories		8855014	0					
ANR	8856281	Identifier	i		8855014	1					
ANR	8856282	Argument	false		8855014	1					
ANR	8856283	Identifier	false		8855014	0					
ANR	8856284	ExpressionStatement	state . cur_mem = ( gs_memory_t * ) mem	426:4:13979:14013	8855014	253	True				
ANR	8856285	AssignmentExpression	state . cur_mem = ( gs_memory_t * ) mem		8855014	0		=			
ANR	8856286	MemberAccess	state . cur_mem		8855014	0					
ANR	8856287	Identifier	state		8855014	0					
ANR	8856288	Identifier	cur_mem		8855014	1					
ANR	8856289	CastExpression	( gs_memory_t * ) mem		8855014	1					
ANR	8856290	CastTarget	gs_memory_t *		8855014	0					
ANR	8856291	Identifier	mem		8855014	1					
ANR	8856292	Statement	for_collected_clumps	428:4:14020:14039	8855014	254	True				
ANR	8856293	Statement	(	428:24:14040:14040	8855014	255	True				
ANR	8856294	Statement	ispace	428:25:14041:14046	8855014	256	True				
ANR	8856295	Statement	","	428:31:14047:14047	8855014	257	True				
ANR	8856296	Statement	mem	428:33:14049:14051	8855014	258	True				
ANR	8856297	Statement	","	428:36:14052:14052	8855014	259	True				
ANR	8856298	Statement	cp	428:38:14054:14055	8855014	260	True				
ANR	8856299	Statement	","	428:40:14056:14056	8855014	261	True				
ANR	8856300	Statement	&	428:42:14058:14058	8855014	262	True				
ANR	8856301	Statement	sw	428:43:14059:14060	8855014	263	True				
ANR	8856302	Statement	)	428:45:14061:14061	8855014	264	True				
ANR	8856303	CompoundStatement		270:47:8565:8565	8855014	265					
ANR	8856304	ExpressionStatement	"gc_objects_set_reloc ( & state , cp )"	429:8:14073:14105	8855014	0	True				
ANR	8856305	CallExpression	"gc_objects_set_reloc ( & state , cp )"		8855014	0					
ANR	8856306	Callee	gc_objects_set_reloc		8855014	0					
ANR	8856307	Identifier	gc_objects_set_reloc		8855014	0					
ANR	8856308	ArgumentList	& state		8855014	1					
ANR	8856309	Argument	& state		8855014	0					
ANR	8856310	UnaryOperationExpression	& state		8855014	0					
ANR	8856311	UnaryOperator	&		8855014	0					
ANR	8856312	Identifier	state		8855014	1					
ANR	8856313	Argument	cp		8855014	1					
ANR	8856314	Identifier	cp		8855014	0					
ANR	8856315	ExpressionStatement	gc_strings_set_reloc ( cp )	430:8:14115:14139	8855014	1	True				
ANR	8856316	CallExpression	gc_strings_set_reloc ( cp )		8855014	0					
ANR	8856317	Callee	gc_strings_set_reloc		8855014	0					
ANR	8856318	Identifier	gc_strings_set_reloc		8855014	0					
ANR	8856319	ArgumentList	cp		8855014	1					
ANR	8856320	Argument	cp		8855014	0					
ANR	8856321	Identifier	cp		8855014	0					
ANR	8856322	CompoundStatement		277:8:8693:8698	8855014	266					
ANR	8856323	IdentifierDeclStatement	int i ;	435:8:14191:14196	8855014	0	True				
ANR	8856324	IdentifierDecl	i		8855014	0					
ANR	8856325	IdentifierDeclType	int		8855014	0					
ANR	8856326	Identifier	i		8855014	1					
ANR	8856327	Statement	for_collected_spaces	437:8:14207:14226	8855014	1	True				
ANR	8856328	ExpressionStatement	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , true )"	437:28:14227:14297	8855014	2	True				
ANR	8856329	CastExpression	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , true )"		8855014	0					
ANR	8856330	CastTarget	i		8855014	0					
ANR	8856331	CallExpression	"gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , true )"		8855014	1					
ANR	8856332	Callee	gs_enable_free		8855014	0					
ANR	8856333	Identifier	gs_enable_free		8855014	0					
ANR	8856334	ArgumentList	( gs_memory_t * ) space_memories [ i ]		8855014	1					
ANR	8856335	Argument	( gs_memory_t * ) space_memories [ i ]		8855014	0					
ANR	8856336	CastExpression	( gs_memory_t * ) space_memories [ i ]		8855014	0					
ANR	8856337	CastTarget	gs_memory_t *		8855014	0					
ANR	8856338	ArrayIndexing	space_memories [ i ]		8855014	1					
ANR	8856339	Identifier	space_memories		8855014	0					
ANR	8856340	Identifier	i		8855014	1					
ANR	8856341	Argument	true		8855014	1					
ANR	8856342	Identifier	true		8855014	0					
ANR	8856343	ExpressionStatement	"end_phase ( state . heap , ""set reloc"" )"	441:4:14310:14343	8855014	267	True				
ANR	8856344	CallExpression	"end_phase ( state . heap , ""set reloc"" )"		8855014	0					
ANR	8856345	Callee	end_phase		8855014	0					
ANR	8856346	Identifier	end_phase		8855014	0					
ANR	8856347	ArgumentList	state . heap		8855014	1					
ANR	8856348	Argument	state . heap		8855014	0					
ANR	8856349	MemberAccess	state . heap		8855014	0					
ANR	8856350	Identifier	state		8855014	0					
ANR	8856351	Identifier	heap		8855014	1					
ANR	8856352	Argument	"""set reloc"""		8855014	1					
ANR	8856353	PrimaryExpression	"""set reloc"""		8855014	0					
ANR	8856354	ExpressionStatement	state . relocating_untraced = true	445:4:14380:14412	8855014	268	True				
ANR	8856355	AssignmentExpression	state . relocating_untraced = true		8855014	0		=			
ANR	8856356	MemberAccess	state . relocating_untraced		8855014	0					
ANR	8856357	Identifier	state		8855014	0					
ANR	8856358	Identifier	relocating_untraced		8855014	1					
ANR	8856359	Identifier	true		8855014	1					
ANR	8856360	Statement	for_clumps	446:4:14418:14427	8855014	269	True				
ANR	8856361	Statement	(	446:14:14428:14428	8855014	270	True				
ANR	8856362	Statement	ispace	446:15:14429:14434	8855014	271	True				
ANR	8856363	Statement	","	446:21:14435:14435	8855014	272	True				
ANR	8856364	Statement	min_collect	446:23:14437:14447	8855014	273	True				
ANR	8856365	Statement	-	446:35:14449:14449	8855014	274	True				
ANR	8856366	Statement	1	446:37:14451:14451	8855014	275	True				
ANR	8856367	Statement	","	446:38:14452:14452	8855014	276	True				
ANR	8856368	Statement	mem	446:40:14454:14456	8855014	277	True				
ANR	8856369	Statement	","	446:43:14457:14457	8855014	278	True				
ANR	8856370	Statement	cp	446:45:14459:14460	8855014	279	True				
ANR	8856371	Statement	","	446:47:14461:14461	8855014	280	True				
ANR	8856372	Statement	&	446:49:14463:14463	8855014	281	True				
ANR	8856373	Statement	sw	446:50:14464:14465	8855014	282	True				
ANR	8856374	Statement	)	446:52:14466:14466	8855014	283	True				
ANR	8856375	ExpressionStatement	"gc_do_reloc ( cp , mem , & state )"	447:8:14476:14504	8855014	284	True				
ANR	8856376	CallExpression	"gc_do_reloc ( cp , mem , & state )"		8855014	0					
ANR	8856377	Callee	gc_do_reloc		8855014	0					
ANR	8856378	Identifier	gc_do_reloc		8855014	0					
ANR	8856379	ArgumentList	cp		8855014	1					
ANR	8856380	Argument	cp		8855014	0					
ANR	8856381	Identifier	cp		8855014	0					
ANR	8856382	Argument	mem		8855014	1					
ANR	8856383	Identifier	mem		8855014	0					
ANR	8856384	Argument	& state		8855014	2					
ANR	8856385	UnaryOperationExpression	& state		8855014	0					
ANR	8856386	UnaryOperator	&		8855014	0					
ANR	8856387	Identifier	state		8855014	1					
ANR	8856388	ExpressionStatement	state . relocating_untraced = false	448:4:14510:14543	8855014	285	True				
ANR	8856389	AssignmentExpression	state . relocating_untraced = false		8855014	0		=			
ANR	8856390	MemberAccess	state . relocating_untraced		8855014	0					
ANR	8856391	Identifier	state		8855014	0					
ANR	8856392	Identifier	relocating_untraced		8855014	1					
ANR	8856393	Identifier	false		8855014	1					
ANR	8856394	Statement	for_collected_clumps	449:4:14549:14568	8855014	286	True				
ANR	8856395	Statement	(	449:24:14569:14569	8855014	287	True				
ANR	8856396	Statement	ispace	449:25:14570:14575	8855014	288	True				
ANR	8856397	Statement	","	449:31:14576:14576	8855014	289	True				
ANR	8856398	Statement	mem	449:33:14578:14580	8855014	290	True				
ANR	8856399	Statement	","	449:36:14581:14581	8855014	291	True				
ANR	8856400	Statement	cp	449:38:14583:14584	8855014	292	True				
ANR	8856401	Statement	","	449:40:14585:14585	8855014	293	True				
ANR	8856402	Statement	&	449:42:14587:14587	8855014	294	True				
ANR	8856403	Statement	sw	449:43:14588:14589	8855014	295	True				
ANR	8856404	Statement	)	449:45:14590:14590	8855014	296	True				
ANR	8856405	ExpressionStatement	"gc_do_reloc ( cp , mem , & state )"	450:8:14600:14628	8855014	297	True				
ANR	8856406	CallExpression	"gc_do_reloc ( cp , mem , & state )"		8855014	0					
ANR	8856407	Callee	gc_do_reloc		8855014	0					
ANR	8856408	Identifier	gc_do_reloc		8855014	0					
ANR	8856409	ArgumentList	cp		8855014	1					
ANR	8856410	Argument	cp		8855014	0					
ANR	8856411	Identifier	cp		8855014	0					
ANR	8856412	Argument	mem		8855014	1					
ANR	8856413	Identifier	mem		8855014	0					
ANR	8856414	Argument	& state		8855014	2					
ANR	8856415	UnaryOperationExpression	& state		8855014	0					
ANR	8856416	UnaryOperator	&		8855014	0					
ANR	8856417	Identifier	state		8855014	1					
ANR	8856418	ExpressionStatement	"end_phase ( state . heap , ""relocate clumps"" )"	452:4:14635:14674	8855014	298	True				
ANR	8856419	CallExpression	"end_phase ( state . heap , ""relocate clumps"" )"		8855014	0					
ANR	8856420	Callee	end_phase		8855014	0					
ANR	8856421	Identifier	end_phase		8855014	0					
ANR	8856422	ArgumentList	state . heap		8855014	1					
ANR	8856423	Argument	state . heap		8855014	0					
ANR	8856424	MemberAccess	state . heap		8855014	0					
ANR	8856425	Identifier	state		8855014	0					
ANR	8856426	Identifier	heap		8855014	1					
ANR	8856427	Argument	"""relocate clumps"""		8855014	1					
ANR	8856428	PrimaryExpression	"""relocate clumps"""		8855014	0					
ANR	8856429	Statement	for_roots	454:4:14681:14689	8855014	299	True				
ANR	8856430	Statement	(	454:13:14690:14690	8855014	300	True				
ANR	8856431	Statement	ispace	454:14:14691:14696	8855014	301	True				
ANR	8856432	Statement	","	454:20:14697:14697	8855014	302	True				
ANR	8856433	Statement	max_trace	454:22:14699:14707	8855014	303	True				
ANR	8856434	Statement	","	454:31:14708:14708	8855014	304	True				
ANR	8856435	Statement	mem	454:33:14710:14712	8855014	305	True				
ANR	8856436	Statement	","	454:36:14713:14713	8855014	306	True				
ANR	8856437	Statement	rp	454:38:14715:14716	8855014	307	True				
ANR	8856438	Statement	)	454:40:14717:14717	8855014	308	True				
ANR	8856439	CompoundStatement		296:42:9221:9221	8855014	309					
ANR	8856440	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"	455:8:14729:14898	8855014	0	True				
ANR	8856441	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"		8855014	0					
ANR	8856442	Callee	if_debug3m		8855014	0					
ANR	8856443	Identifier	if_debug3m		8855014	0					
ANR	8856444	ArgumentList	'6'		8855014	1					
ANR	8856445	Argument	'6'		8855014	0					
ANR	8856446	PrimaryExpression	'6'		8855014	0					
ANR	8856447	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8856448	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856449	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856450	Identifier	mem		8855014	1					
ANR	8856451	Argument	"""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"""		8855014	2					
ANR	8856452	PrimaryExpression	"""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"""		8855014	0					
ANR	8856453	Argument	( ulong ) rp		8855014	3					
ANR	8856454	CastExpression	( ulong ) rp		8855014	0					
ANR	8856455	CastTarget	ulong		8855014	0					
ANR	8856456	Identifier	rp		8855014	1					
ANR	8856457	Argument	( ulong ) rp -> p		8855014	4					
ANR	8856458	CastExpression	( ulong ) rp -> p		8855014	0					
ANR	8856459	CastTarget	ulong		8855014	0					
ANR	8856460	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856461	Identifier	rp		8855014	0					
ANR	8856462	Identifier	p		8855014	1					
ANR	8856463	Argument	( ulong ) * rp -> p		8855014	5					
ANR	8856464	CastExpression	( ulong ) * rp -> p		8855014	0					
ANR	8856465	CastTarget	ulong		8855014	0					
ANR	8856466	UnaryOperationExpression	* rp -> p		8855014	1					
ANR	8856467	UnaryOperator	*		8855014	0					
ANR	8856468	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856469	Identifier	rp		8855014	0					
ANR	8856470	Identifier	p		8855014	1					
ANR	8856471	IfStatement	if ( rp -> ptype == ptr_ref_type )		8855014	1					
ANR	8856472	Condition	rp -> ptype == ptr_ref_type	458:12:14912:14936	8855014	0	True				
ANR	8856473	EqualityExpression	rp -> ptype == ptr_ref_type		8855014	0		==			
ANR	8856474	PtrMemberAccess	rp -> ptype		8855014	0					
ANR	8856475	Identifier	rp		8855014	0					
ANR	8856476	Identifier	ptype		8855014	1					
ANR	8856477	Identifier	ptr_ref_type		8855014	1					
ANR	8856478	CompoundStatement		301:12:9455:9482	8855014	1					
ANR	8856479	IdentifierDeclStatement	ref * pref = ( ref * ) * rp -> p ;	459:12:14953:14980	8855014	0	True				
ANR	8856480	IdentifierDecl	* pref = ( ref * ) * rp -> p		8855014	0					
ANR	8856481	IdentifierDeclType	ref *		8855014	0					
ANR	8856482	Identifier	pref		8855014	1					
ANR	8856483	AssignmentExpression	* pref = ( ref * ) * rp -> p		8855014	2		=			
ANR	8856484	Identifier	pref		8855014	0					
ANR	8856485	CastExpression	( ref * ) * rp -> p		8855014	1					
ANR	8856486	CastTarget	ref *		8855014	0					
ANR	8856487	UnaryOperationExpression	* rp -> p		8855014	1					
ANR	8856488	UnaryOperator	*		8855014	0					
ANR	8856489	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856490	Identifier	rp		8855014	0					
ANR	8856491	Identifier	p		8855014	1					
ANR	8856492	ExpressionStatement	"igc_reloc_refs ( ( ref_packed * ) pref , ( ref_packed * ) ( pref + 1 ) , & state )"	461:12:14995:15119	8855014	1	True				
ANR	8856493	CallExpression	"igc_reloc_refs ( ( ref_packed * ) pref , ( ref_packed * ) ( pref + 1 ) , & state )"		8855014	0					
ANR	8856494	Callee	igc_reloc_refs		8855014	0					
ANR	8856495	Identifier	igc_reloc_refs		8855014	0					
ANR	8856496	ArgumentList	( ref_packed * ) pref		8855014	1					
ANR	8856497	Argument	( ref_packed * ) pref		8855014	0					
ANR	8856498	CastExpression	( ref_packed * ) pref		8855014	0					
ANR	8856499	CastTarget	ref_packed *		8855014	0					
ANR	8856500	Identifier	pref		8855014	1					
ANR	8856501	Argument	( ref_packed * ) ( pref + 1 )		8855014	1					
ANR	8856502	CastExpression	( ref_packed * ) ( pref + 1 )		8855014	0					
ANR	8856503	CastTarget	ref_packed *		8855014	0					
ANR	8856504	AdditiveExpression	pref + 1		8855014	1		+			
ANR	8856505	Identifier	pref		8855014	0					
ANR	8856506	PrimaryExpression	1		8855014	1					
ANR	8856507	Argument	& state		8855014	2					
ANR	8856508	UnaryOperationExpression	& state		8855014	0					
ANR	8856509	UnaryOperator	&		8855014	0					
ANR	8856510	Identifier	state		8855014	1					
ANR	8856511	ElseStatement	else		8855014	0					
ANR	8856512	ExpressionStatement	"* rp -> p = ( * rp -> ptype -> reloc ) ( * rp -> p , & state )"	465:12:15148:15193	8855014	0	True				
ANR	8856513	AssignmentExpression	"* rp -> p = ( * rp -> ptype -> reloc ) ( * rp -> p , & state )"		8855014	0		=			
ANR	8856514	UnaryOperationExpression	* rp -> p		8855014	0					
ANR	8856515	UnaryOperator	*		8855014	0					
ANR	8856516	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856517	Identifier	rp		8855014	0					
ANR	8856518	Identifier	p		8855014	1					
ANR	8856519	CallExpression	"( * rp -> ptype -> reloc ) ( * rp -> p , & state )"		8855014	1					
ANR	8856520	Callee	* rp -> ptype -> reloc		8855014	0					
ANR	8856521	UnaryOperationExpression	* rp -> ptype -> reloc		8855014	0					
ANR	8856522	UnaryOperator	*		8855014	0					
ANR	8856523	PtrMemberAccess	rp -> ptype -> reloc		8855014	1					
ANR	8856524	PtrMemberAccess	rp -> ptype		8855014	0					
ANR	8856525	Identifier	rp		8855014	0					
ANR	8856526	Identifier	ptype		8855014	1					
ANR	8856527	Identifier	reloc		8855014	1					
ANR	8856528	ArgumentList	* rp -> p		8855014	1					
ANR	8856529	Argument	* rp -> p		8855014	0					
ANR	8856530	UnaryOperationExpression	* rp -> p		8855014	0					
ANR	8856531	UnaryOperator	*		8855014	0					
ANR	8856532	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856533	Identifier	rp		8855014	0					
ANR	8856534	Identifier	p		8855014	1					
ANR	8856535	Argument	& state		8855014	1					
ANR	8856536	UnaryOperationExpression	& state		8855014	0					
ANR	8856537	UnaryOperator	&		8855014	0					
ANR	8856538	Identifier	state		8855014	1					
ANR	8856539	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"	466:8:15203:15371	8855014	2	True				
ANR	8856540	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"		8855014	0					
ANR	8856541	Callee	if_debug3m		8855014	0					
ANR	8856542	Identifier	if_debug3m		8855014	0					
ANR	8856543	ArgumentList	'6'		8855014	1					
ANR	8856544	Argument	'6'		8855014	0					
ANR	8856545	PrimaryExpression	'6'		8855014	0					
ANR	8856546	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8856547	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856548	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856549	Identifier	mem		8855014	1					
ANR	8856550	Argument	"""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"""		8855014	2					
ANR	8856551	PrimaryExpression	"""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"""		8855014	0					
ANR	8856552	Argument	( ulong ) rp		8855014	3					
ANR	8856553	CastExpression	( ulong ) rp		8855014	0					
ANR	8856554	CastTarget	ulong		8855014	0					
ANR	8856555	Identifier	rp		8855014	1					
ANR	8856556	Argument	( ulong ) rp -> p		8855014	4					
ANR	8856557	CastExpression	( ulong ) rp -> p		8855014	0					
ANR	8856558	CastTarget	ulong		8855014	0					
ANR	8856559	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856560	Identifier	rp		8855014	0					
ANR	8856561	Identifier	p		8855014	1					
ANR	8856562	Argument	( ulong ) * rp -> p		8855014	5					
ANR	8856563	CastExpression	( ulong ) * rp -> p		8855014	0					
ANR	8856564	CastTarget	ulong		8855014	0					
ANR	8856565	UnaryOperationExpression	* rp -> p		8855014	1					
ANR	8856566	UnaryOperator	*		8855014	0					
ANR	8856567	PtrMemberAccess	rp -> p		8855014	1					
ANR	8856568	Identifier	rp		8855014	0					
ANR	8856569	Identifier	p		8855014	1					
ANR	8856570	ExpressionStatement	"end_phase ( state . heap , ""relocate roots"" )"	471:4:15384:15422	8855014	310	True				
ANR	8856571	CallExpression	"end_phase ( state . heap , ""relocate roots"" )"		8855014	0					
ANR	8856572	Callee	end_phase		8855014	0					
ANR	8856573	Identifier	end_phase		8855014	0					
ANR	8856574	ArgumentList	state . heap		8855014	1					
ANR	8856575	Argument	state . heap		8855014	0					
ANR	8856576	MemberAccess	state . heap		8855014	0					
ANR	8856577	Identifier	state		8855014	0					
ANR	8856578	Identifier	heap		8855014	1					
ANR	8856579	Argument	"""relocate roots"""		8855014	1					
ANR	8856580	PrimaryExpression	"""relocate roots"""		8855014	0					
ANR	8856581	Statement	for_collected_spaces	475:4:15501:15520	8855014	311	True				
ANR	8856582	Statement	(	475:24:15521:15521	8855014	312	True				
ANR	8856583	Statement	ispace	475:25:15522:15527	8855014	313	True				
ANR	8856584	Statement	)	475:31:15528:15528	8855014	314	True				
ANR	8856585	CompoundStatement		317:33:10032:10032	8855014	315					
ANR	8856586	Statement	for_space_mems	476:8:15540:15553	8855014	0	True				
ANR	8856587	Statement	(	476:22:15554:15554	8855014	1	True				
ANR	8856588	Statement	ispace	476:23:15555:15560	8855014	2	True				
ANR	8856589	Statement	","	476:29:15561:15561	8855014	3	True				
ANR	8856590	Statement	mem	476:31:15563:15565	8855014	4	True				
ANR	8856591	Statement	)	476:34:15566:15566	8855014	5	True				
ANR	8856592	CompoundStatement		318:36:10070:10070	8855014	6					
ANR	8856593	Statement	for_mem_clumps	477:12:15582:15595	8855014	0	True				
ANR	8856594	Statement	(	477:26:15596:15596	8855014	1	True				
ANR	8856595	Statement	mem	477:27:15597:15599	8855014	2	True				
ANR	8856596	Statement	","	477:30:15600:15600	8855014	3	True				
ANR	8856597	Statement	cp	477:32:15602:15603	8855014	4	True				
ANR	8856598	Statement	","	477:34:15604:15604	8855014	5	True				
ANR	8856599	Statement	&	477:36:15606:15606	8855014	6	True				
ANR	8856600	Statement	sw	477:37:15607:15608	8855014	7	True				
ANR	8856601	Statement	)	477:39:15609:15609	8855014	8	True				
ANR	8856602	CompoundStatement		319:41:10113:10113	8855014	9					
ANR	8856603	ExpressionStatement	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]compacting clump"" , cp )"	478:16:15629:15701	8855014	0	True				
ANR	8856604	CallExpression	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]compacting clump"" , cp )"		8855014	0					
ANR	8856605	Callee	if_debug_clump		8855014	0					
ANR	8856606	Identifier	if_debug_clump		8855014	0					
ANR	8856607	ArgumentList	'6'		8855014	1					
ANR	8856608	Argument	'6'		8855014	0					
ANR	8856609	PrimaryExpression	'6'		8855014	0					
ANR	8856610	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8856611	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856612	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856613	Identifier	mem		8855014	1					
ANR	8856614	Argument	"""[6]compacting clump"""		8855014	2					
ANR	8856615	PrimaryExpression	"""[6]compacting clump"""		8855014	0					
ANR	8856616	Argument	cp		8855014	3					
ANR	8856617	Identifier	cp		8855014	0					
ANR	8856618	ExpressionStatement	"gc_objects_compact ( cp , & state )"	479:16:15719:15749	8855014	1	True				
ANR	8856619	CallExpression	"gc_objects_compact ( cp , & state )"		8855014	0					
ANR	8856620	Callee	gc_objects_compact		8855014	0					
ANR	8856621	Identifier	gc_objects_compact		8855014	0					
ANR	8856622	ArgumentList	cp		8855014	1					
ANR	8856623	Argument	cp		8855014	0					
ANR	8856624	Identifier	cp		8855014	0					
ANR	8856625	Argument	& state		8855014	1					
ANR	8856626	UnaryOperationExpression	& state		8855014	0					
ANR	8856627	UnaryOperator	&		8855014	0					
ANR	8856628	Identifier	state		8855014	1					
ANR	8856629	ExpressionStatement	"gc_strings_compact ( cp , cmem )"	480:16:15767:15795	8855014	2	True				
ANR	8856630	CallExpression	"gc_strings_compact ( cp , cmem )"		8855014	0					
ANR	8856631	Callee	gc_strings_compact		8855014	0					
ANR	8856632	Identifier	gc_strings_compact		8855014	0					
ANR	8856633	ArgumentList	cp		8855014	1					
ANR	8856634	Argument	cp		8855014	0					
ANR	8856635	Identifier	cp		8855014	0					
ANR	8856636	Argument	cmem		8855014	1					
ANR	8856637	Identifier	cmem		8855014	0					
ANR	8856638	ExpressionStatement	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]after compaction:"" , cp )"	481:16:15813:15886	8855014	3	True				
ANR	8856639	CallExpression	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]after compaction:"" , cp )"		8855014	0					
ANR	8856640	Callee	if_debug_clump		8855014	0					
ANR	8856641	Identifier	if_debug_clump		8855014	0					
ANR	8856642	ArgumentList	'6'		8855014	1					
ANR	8856643	Argument	'6'		8855014	0					
ANR	8856644	PrimaryExpression	'6'		8855014	0					
ANR	8856645	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8856646	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856647	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856648	Identifier	mem		8855014	1					
ANR	8856649	Argument	"""[6]after compaction:"""		8855014	2					
ANR	8856650	PrimaryExpression	"""[6]after compaction:"""		8855014	0					
ANR	8856651	Argument	cp		8855014	3					
ANR	8856652	Identifier	cp		8855014	0					
ANR	8856653	ExpressionStatement	mem -> saved = mem -> reloc_saved	483:12:15914:15943	8855014	10	True				
ANR	8856654	AssignmentExpression	mem -> saved = mem -> reloc_saved		8855014	0		=			
ANR	8856655	PtrMemberAccess	mem -> saved		8855014	0					
ANR	8856656	Identifier	mem		8855014	0					
ANR	8856657	Identifier	saved		8855014	1					
ANR	8856658	PtrMemberAccess	mem -> reloc_saved		8855014	1					
ANR	8856659	Identifier	mem		8855014	0					
ANR	8856660	Identifier	reloc_saved		8855014	1					
ANR	8856661	ExpressionStatement	ialloc_reset_free ( mem )	484:12:15957:15979	8855014	11	True				
ANR	8856662	CallExpression	ialloc_reset_free ( mem )		8855014	0					
ANR	8856663	Callee	ialloc_reset_free		8855014	0					
ANR	8856664	Identifier	ialloc_reset_free		8855014	0					
ANR	8856665	ArgumentList	mem		8855014	1					
ANR	8856666	Argument	mem		8855014	0					
ANR	8856667	Identifier	mem		8855014	0					
ANR	8856668	ExpressionStatement	"end_phase ( state . heap , ""compact"" )"	488:4:16002:16033	8855014	316	True				
ANR	8856669	CallExpression	"end_phase ( state . heap , ""compact"" )"		8855014	0					
ANR	8856670	Callee	end_phase		8855014	0					
ANR	8856671	Identifier	end_phase		8855014	0					
ANR	8856672	ArgumentList	state . heap		8855014	1					
ANR	8856673	Argument	state . heap		8855014	0					
ANR	8856674	MemberAccess	state . heap		8855014	0					
ANR	8856675	Identifier	state		8855014	0					
ANR	8856676	Identifier	heap		8855014	1					
ANR	8856677	Argument	"""compact"""		8855014	1					
ANR	8856678	PrimaryExpression	"""compact"""		8855014	0					
ANR	8856679	Statement	for_collected_spaces	492:4:16070:16089	8855014	317	True				
ANR	8856680	Statement	(	492:24:16090:16090	8855014	318	True				
ANR	8856681	Statement	ispace	492:25:16091:16096	8855014	319	True				
ANR	8856682	Statement	)	492:31:16097:16097	8855014	320	True				
ANR	8856683	CompoundStatement		334:33:10601:10601	8855014	321					
ANR	8856684	Statement	for_space_mems	493:8:16109:16122	8855014	0	True				
ANR	8856685	Statement	(	493:22:16123:16123	8855014	1	True				
ANR	8856686	Statement	ispace	493:23:16124:16129	8855014	2	True				
ANR	8856687	Statement	","	493:29:16130:16130	8855014	3	True				
ANR	8856688	Statement	mem	493:31:16132:16134	8855014	4	True				
ANR	8856689	Statement	)	493:34:16135:16135	8855014	5	True				
ANR	8856690	CompoundStatement		335:36:10639:10639	8855014	6					
ANR	8856691	ExpressionStatement	gc_free_empty_clumps ( mem )	494:12:16151:16176	8855014	0	True				
ANR	8856692	CallExpression	gc_free_empty_clumps ( mem )		8855014	0					
ANR	8856693	Callee	gc_free_empty_clumps		8855014	0					
ANR	8856694	Identifier	gc_free_empty_clumps		8855014	0					
ANR	8856695	ArgumentList	mem		8855014	1					
ANR	8856696	Argument	mem		8855014	0					
ANR	8856697	Identifier	mem		8855014	0					
ANR	8856698	ExpressionStatement	"end_phase ( state . heap , ""free empty clumps"" )"	498:4:16199:16240	8855014	322	True				
ANR	8856699	CallExpression	"end_phase ( state . heap , ""free empty clumps"" )"		8855014	0					
ANR	8856700	Callee	end_phase		8855014	0					
ANR	8856701	Identifier	end_phase		8855014	0					
ANR	8856702	ArgumentList	state . heap		8855014	1					
ANR	8856703	Argument	state . heap		8855014	0					
ANR	8856704	MemberAccess	state . heap		8855014	0					
ANR	8856705	Identifier	state		8855014	0					
ANR	8856706	Identifier	heap		8855014	1					
ANR	8856707	Argument	"""free empty clumps"""		8855014	1					
ANR	8856708	PrimaryExpression	"""free empty clumps"""		8855014	0					
ANR	8856709	Statement	for_collected_spaces	509:4:16638:16657	8855014	323	True				
ANR	8856710	Statement	(	509:24:16658:16658	8855014	324	True				
ANR	8856711	Statement	ispace	509:25:16659:16664	8855014	325	True				
ANR	8856712	Statement	)	509:31:16665:16665	8855014	326	True				
ANR	8856713	CompoundStatement		355:8:11295:11319	8855014	327					
ANR	8856714	IdentifierDeclStatement	alloc_save_t * curr ;	510:8:16705:16723	8855014	0	True				
ANR	8856715	IdentifierDecl	* curr		8855014	0					
ANR	8856716	IdentifierDeclType	alloc_save_t *		8855014	0					
ANR	8856717	Identifier	curr		8855014	1					
ANR	8856718	IdentifierDeclStatement	alloc_save_t * prev = 0 ;	511:8:16733:16755	8855014	1	True				
ANR	8856719	IdentifierDecl	* prev = 0		8855014	0					
ANR	8856720	IdentifierDeclType	alloc_save_t *		8855014	0					
ANR	8856721	Identifier	prev		8855014	1					
ANR	8856722	AssignmentExpression	* prev = 0		8855014	2		=			
ANR	8856723	Identifier	prev		8855014	0					
ANR	8856724	PrimaryExpression	0		8855014	1					
ANR	8856725	IdentifierDeclStatement	alloc_save_t * next ;	512:8:16765:16783	8855014	2	True				
ANR	8856726	IdentifierDecl	* next		8855014	0					
ANR	8856727	IdentifierDeclType	alloc_save_t *		8855014	0					
ANR	8856728	Identifier	next		8855014	1					
ANR	8856729	IdentifierDeclStatement	gs_memory_status_t total ;	513:8:16793:16817	8855014	3	True				
ANR	8856730	IdentifierDecl	total		8855014	0					
ANR	8856731	IdentifierDeclType	gs_memory_status_t		8855014	0					
ANR	8856732	Identifier	total		8855014	1					
ANR	8856733	ForStatement	"for ( curr = space_memories [ ispace ] -> saved ; curr != 0 ; prev = curr , curr = next )"		8855014	4					
ANR	8856734	ForInit	curr = space_memories [ ispace ] -> saved ;	515:13:16833:16869	8855014	0	True				
ANR	8856735	AssignmentExpression	curr = space_memories [ ispace ] -> saved		8855014	0		=			
ANR	8856736	Identifier	curr		8855014	0					
ANR	8856737	PtrMemberAccess	space_memories [ ispace ] -> saved		8855014	1					
ANR	8856738	ArrayIndexing	space_memories [ ispace ]		8855014	0					
ANR	8856739	Identifier	space_memories		8855014	0					
ANR	8856740	Identifier	ispace		8855014	1					
ANR	8856741	Identifier	saved		8855014	1					
ANR	8856742	Condition	curr != 0	515:51:16871:16879	8855014	1	True				
ANR	8856743	EqualityExpression	curr != 0		8855014	0		!=			
ANR	8856744	Identifier	curr		8855014	0					
ANR	8856745	PrimaryExpression	0		8855014	1					
ANR	8856746	Expression	"prev = curr , curr = next"	516:13:16895:16918	8855014	2	True				
ANR	8856747	AssignmentExpression	prev = curr		8855014	0		=			
ANR	8856748	Identifier	prev		8855014	0					
ANR	8856749	Identifier	curr		8855014	1					
ANR	8856750	AssignmentExpression	curr = next		8855014	1		=			
ANR	8856751	Identifier	curr		8855014	0					
ANR	8856752	Identifier	next		8855014	1					
ANR	8856753	CompoundStatement		359:14:11436:11436	8855014	3					
ANR	8856754	ExpressionStatement	next = curr -> state . saved	518:12:16948:16972	8855014	0	True				
ANR	8856755	AssignmentExpression	next = curr -> state . saved		8855014	0		=			
ANR	8856756	Identifier	next		8855014	0					
ANR	8856757	MemberAccess	curr -> state . saved		8855014	1					
ANR	8856758	PtrMemberAccess	curr -> state		8855014	0					
ANR	8856759	Identifier	curr		8855014	0					
ANR	8856760	Identifier	state		8855014	1					
ANR	8856761	Identifier	saved		8855014	1					
ANR	8856762	ExpressionStatement	curr -> state . saved = prev	519:12:16986:17010	8855014	1	True				
ANR	8856763	AssignmentExpression	curr -> state . saved = prev		8855014	0		=			
ANR	8856764	MemberAccess	curr -> state . saved		8855014	0					
ANR	8856765	PtrMemberAccess	curr -> state		8855014	0					
ANR	8856766	Identifier	curr		8855014	0					
ANR	8856767	Identifier	state		8855014	1					
ANR	8856768	Identifier	saved		8855014	1					
ANR	8856769	Identifier	prev		8855014	1					
ANR	8856770	ExpressionStatement	"total . allocated = 0 , total . used = 0"	522:8:17093:17128	8855014	5	True				
ANR	8856771	Expression	"total . allocated = 0 , total . used = 0"		8855014	0					
ANR	8856772	AssignmentExpression	total . allocated = 0		8855014	0		=			
ANR	8856773	MemberAccess	total . allocated		8855014	0					
ANR	8856774	Identifier	total		8855014	0					
ANR	8856775	Identifier	allocated		8855014	1					
ANR	8856776	PrimaryExpression	0		8855014	1					
ANR	8856777	AssignmentExpression	total . used = 0		8855014	1		=			
ANR	8856778	MemberAccess	total . used		8855014	0					
ANR	8856779	Identifier	total		8855014	0					
ANR	8856780	Identifier	used		8855014	1					
ANR	8856781	PrimaryExpression	0		8855014	1					
ANR	8856782	ForStatement	"for ( curr = prev , prev = 0 ; curr != 0 ; prev = curr , curr = next )"		8855014	6					
ANR	8856783	ForInit	"curr = prev , prev = 0 ;"	523:13:17143:17164	8855014	0	True				
ANR	8856784	Expression	"curr = prev , prev = 0"		8855014	0					
ANR	8856785	AssignmentExpression	curr = prev		8855014	0		=			
ANR	8856786	Identifier	curr		8855014	0					
ANR	8856787	Identifier	prev		8855014	1					
ANR	8856788	AssignmentExpression	prev = 0		8855014	1		=			
ANR	8856789	Identifier	prev		8855014	0					
ANR	8856790	PrimaryExpression	0		8855014	1					
ANR	8856791	Condition	curr != 0	523:36:17166:17174	8855014	1	True				
ANR	8856792	EqualityExpression	curr != 0		8855014	0		!=			
ANR	8856793	Identifier	curr		8855014	0					
ANR	8856794	PrimaryExpression	0		8855014	1					
ANR	8856795	Expression	"prev = curr , curr = next"	524:13:17190:17213	8855014	2	True				
ANR	8856796	AssignmentExpression	prev = curr		8855014	0		=			
ANR	8856797	Identifier	prev		8855014	0					
ANR	8856798	Identifier	curr		8855014	1					
ANR	8856799	AssignmentExpression	curr = next		8855014	1		=			
ANR	8856800	Identifier	curr		8855014	0					
ANR	8856801	Identifier	next		8855014	1					
ANR	8856802	CompoundStatement		367:14:11731:11731	8855014	3					
ANR	8856803	ExpressionStatement	mem = & curr -> state	526:12:17243:17261	8855014	0	True				
ANR	8856804	AssignmentExpression	mem = & curr -> state		8855014	0		=			
ANR	8856805	Identifier	mem		8855014	0					
ANR	8856806	UnaryOperationExpression	& curr -> state		8855014	1					
ANR	8856807	UnaryOperator	&		8855014	0					
ANR	8856808	PtrMemberAccess	curr -> state		8855014	1					
ANR	8856809	Identifier	curr		8855014	0					
ANR	8856810	Identifier	state		8855014	1					
ANR	8856811	ExpressionStatement	next = mem -> saved	527:12:17275:17292	8855014	1	True				
ANR	8856812	AssignmentExpression	next = mem -> saved		8855014	0		=			
ANR	8856813	Identifier	next		8855014	0					
ANR	8856814	PtrMemberAccess	mem -> saved		8855014	1					
ANR	8856815	Identifier	mem		8855014	0					
ANR	8856816	Identifier	saved		8855014	1					
ANR	8856817	ExpressionStatement	mem -> saved = prev	528:12:17306:17323	8855014	2	True				
ANR	8856818	AssignmentExpression	mem -> saved = prev		8855014	0		=			
ANR	8856819	PtrMemberAccess	mem -> saved		8855014	0					
ANR	8856820	Identifier	mem		8855014	0					
ANR	8856821	Identifier	saved		8855014	1					
ANR	8856822	Identifier	prev		8855014	1					
ANR	8856823	ExpressionStatement	mem -> previous_status = total	529:12:17337:17365	8855014	3	True				
ANR	8856824	AssignmentExpression	mem -> previous_status = total		8855014	0		=			
ANR	8856825	PtrMemberAccess	mem -> previous_status		8855014	0					
ANR	8856826	Identifier	mem		8855014	0					
ANR	8856827	Identifier	previous_status		8855014	1					
ANR	8856828	Identifier	total		8855014	1					
ANR	8856829	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"	530:12:17379:17555	8855014	4	True				
ANR	8856830	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"		8855014	0					
ANR	8856831	Callee	if_debug3m		8855014	0					
ANR	8856832	Identifier	if_debug3m		8855014	0					
ANR	8856833	ArgumentList	'6'		8855014	1					
ANR	8856834	Argument	'6'		8855014	0					
ANR	8856835	PrimaryExpression	'6'		8855014	0					
ANR	8856836	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8856837	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856838	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856839	Identifier	mem		8855014	1					
ANR	8856840	Argument	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		8855014	2					
ANR	8856841	PrimaryExpression	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		8855014	0					
ANR	8856842	Argument	( ulong ) mem		8855014	3					
ANR	8856843	CastExpression	( ulong ) mem		8855014	0					
ANR	8856844	CastTarget	ulong		8855014	0					
ANR	8856845	Identifier	mem		8855014	1					
ANR	8856846	Argument	total . allocated		8855014	4					
ANR	8856847	MemberAccess	total . allocated		8855014	0					
ANR	8856848	Identifier	total		8855014	0					
ANR	8856849	Identifier	allocated		8855014	1					
ANR	8856850	Argument	total . used		8855014	5					
ANR	8856851	MemberAccess	total . used		8855014	0					
ANR	8856852	Identifier	total		8855014	0					
ANR	8856853	Identifier	used		8855014	1					
ANR	8856854	ExpressionStatement	"gs_memory_status ( ( gs_memory_t * ) mem , & total )"	533:12:17569:17614	8855014	5	True				
ANR	8856855	CallExpression	"gs_memory_status ( ( gs_memory_t * ) mem , & total )"		8855014	0					
ANR	8856856	Callee	gs_memory_status		8855014	0					
ANR	8856857	Identifier	gs_memory_status		8855014	0					
ANR	8856858	ArgumentList	( gs_memory_t * ) mem		8855014	1					
ANR	8856859	Argument	( gs_memory_t * ) mem		8855014	0					
ANR	8856860	CastExpression	( gs_memory_t * ) mem		8855014	0					
ANR	8856861	CastTarget	gs_memory_t *		8855014	0					
ANR	8856862	Identifier	mem		8855014	1					
ANR	8856863	Argument	& total		8855014	1					
ANR	8856864	UnaryOperationExpression	& total		8855014	0					
ANR	8856865	UnaryOperator	&		8855014	0					
ANR	8856866	Identifier	total		8855014	1					
ANR	8856867	ExpressionStatement	mem -> gc_allocated = mem -> allocated + total . allocated	534:12:17628:17680	8855014	6	True				
ANR	8856868	AssignmentExpression	mem -> gc_allocated = mem -> allocated + total . allocated		8855014	0		=			
ANR	8856869	PtrMemberAccess	mem -> gc_allocated		8855014	0					
ANR	8856870	Identifier	mem		8855014	0					
ANR	8856871	Identifier	gc_allocated		8855014	1					
ANR	8856872	AdditiveExpression	mem -> allocated + total . allocated		8855014	1		+			
ANR	8856873	PtrMemberAccess	mem -> allocated		8855014	0					
ANR	8856874	Identifier	mem		8855014	0					
ANR	8856875	Identifier	allocated		8855014	1					
ANR	8856876	MemberAccess	total . allocated		8855014	1					
ANR	8856877	Identifier	total		8855014	0					
ANR	8856878	Identifier	allocated		8855014	1					
ANR	8856879	ExpressionStatement	mem = space_memories [ ispace ]	536:8:17700:17728	8855014	7	True				
ANR	8856880	AssignmentExpression	mem = space_memories [ ispace ]		8855014	0		=			
ANR	8856881	Identifier	mem		8855014	0					
ANR	8856882	ArrayIndexing	space_memories [ ispace ]		8855014	1					
ANR	8856883	Identifier	space_memories		8855014	0					
ANR	8856884	Identifier	ispace		8855014	1					
ANR	8856885	ExpressionStatement	mem -> previous_status = total	537:8:17738:17766	8855014	8	True				
ANR	8856886	AssignmentExpression	mem -> previous_status = total		8855014	0		=			
ANR	8856887	PtrMemberAccess	mem -> previous_status		8855014	0					
ANR	8856888	Identifier	mem		8855014	0					
ANR	8856889	Identifier	previous_status		8855014	1					
ANR	8856890	Identifier	total		8855014	1					
ANR	8856891	ExpressionStatement	mem -> gc_allocated = mem -> allocated + total . allocated	538:8:17776:17828	8855014	9	True				
ANR	8856892	AssignmentExpression	mem -> gc_allocated = mem -> allocated + total . allocated		8855014	0		=			
ANR	8856893	PtrMemberAccess	mem -> gc_allocated		8855014	0					
ANR	8856894	Identifier	mem		8855014	0					
ANR	8856895	Identifier	gc_allocated		8855014	1					
ANR	8856896	AdditiveExpression	mem -> allocated + total . allocated		8855014	1		+			
ANR	8856897	PtrMemberAccess	mem -> allocated		8855014	0					
ANR	8856898	Identifier	mem		8855014	0					
ANR	8856899	Identifier	allocated		8855014	1					
ANR	8856900	MemberAccess	total . allocated		8855014	1					
ANR	8856901	Identifier	total		8855014	0					
ANR	8856902	Identifier	allocated		8855014	1					
ANR	8856903	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"	539:8:17838:18006	8855014	10	True				
ANR	8856904	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"		8855014	0					
ANR	8856905	Callee	if_debug3m		8855014	0					
ANR	8856906	Identifier	if_debug3m		8855014	0					
ANR	8856907	ArgumentList	'6'		8855014	1					
ANR	8856908	Argument	'6'		8855014	0					
ANR	8856909	PrimaryExpression	'6'		8855014	0					
ANR	8856910	Argument	( const gs_memory_t * ) mem		8855014	1					
ANR	8856911	CastExpression	( const gs_memory_t * ) mem		8855014	0					
ANR	8856912	CastTarget	const gs_memory_t *		8855014	0					
ANR	8856913	Identifier	mem		8855014	1					
ANR	8856914	Argument	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		8855014	2					
ANR	8856915	PrimaryExpression	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		8855014	0					
ANR	8856916	Argument	( ulong ) mem		8855014	3					
ANR	8856917	CastExpression	( ulong ) mem		8855014	0					
ANR	8856918	CastTarget	ulong		8855014	0					
ANR	8856919	Identifier	mem		8855014	1					
ANR	8856920	Argument	total . allocated		8855014	4					
ANR	8856921	MemberAccess	total . allocated		8855014	0					
ANR	8856922	Identifier	total		8855014	0					
ANR	8856923	Identifier	allocated		8855014	1					
ANR	8856924	Argument	total . used		8855014	5					
ANR	8856925	MemberAccess	total . used		8855014	0					
ANR	8856926	Identifier	total		8855014	0					
ANR	8856927	Identifier	used		8855014	1					
ANR	8856928	ExpressionStatement	"end_phase ( state . heap , ""update stats"" )"	544:4:18019:18055	8855014	328	True				
ANR	8856929	CallExpression	"end_phase ( state . heap , ""update stats"" )"		8855014	0					
ANR	8856930	Callee	end_phase		8855014	0					
ANR	8856931	Identifier	end_phase		8855014	0					
ANR	8856932	ArgumentList	state . heap		8855014	1					
ANR	8856933	Argument	state . heap		8855014	0					
ANR	8856934	MemberAccess	state . heap		8855014	0					
ANR	8856935	Identifier	state		8855014	0					
ANR	8856936	Identifier	heap		8855014	1					
ANR	8856937	Argument	"""update stats"""		8855014	1					
ANR	8856938	PrimaryExpression	"""update stats"""		8855014	0					
ANR	8856939	Label	no_collect :	546:2:18060:18070	8855014	329	True				
ANR	8856940	Identifier	no_collect		8855014	0					
ANR	8856941	Statement	for_spaces	550:4:18120:18129	8855014	330	True				
ANR	8856942	Statement	(	550:14:18130:18130	8855014	331	True				
ANR	8856943	Statement	ispace	550:15:18131:18136	8855014	332	True				
ANR	8856944	Statement	","	550:21:18137:18137	8855014	333	True				
ANR	8856945	Statement	max_trace	550:23:18139:18147	8855014	334	True				
ANR	8856946	Statement	)	550:32:18148:18148	8855014	335	True				
ANR	8856947	ExpressionStatement	"gs_unregister_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ""gc_top_level"" )"	551:8:18158:18280	8855014	336	True				
ANR	8856948	CallExpression	"gs_unregister_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ""gc_top_level"" )"		8855014	0					
ANR	8856949	Callee	gs_unregister_root		8855014	0					
ANR	8856950	Identifier	gs_unregister_root		8855014	0					
ANR	8856951	ArgumentList	( gs_memory_t * ) space_memories [ ispace ]		8855014	1					
ANR	8856952	Argument	( gs_memory_t * ) space_memories [ ispace ]		8855014	0					
ANR	8856953	CastExpression	( gs_memory_t * ) space_memories [ ispace ]		8855014	0					
ANR	8856954	CastTarget	gs_memory_t *		8855014	0					
ANR	8856955	ArrayIndexing	space_memories [ ispace ]		8855014	1					
ANR	8856956	Identifier	space_memories		8855014	0					
ANR	8856957	Identifier	ispace		8855014	1					
ANR	8856958	Argument	& space_roots [ ispace ]		8855014	1					
ANR	8856959	UnaryOperationExpression	& space_roots [ ispace ]		8855014	0					
ANR	8856960	UnaryOperator	&		8855014	0					
ANR	8856961	ArrayIndexing	space_roots [ ispace ]		8855014	1					
ANR	8856962	Identifier	space_roots		8855014	0					
ANR	8856963	Identifier	ispace		8855014	1					
ANR	8856964	Argument	"""gc_top_level"""		8855014	2					
ANR	8856965	PrimaryExpression	"""gc_top_level"""		8855014	0					
ANR	8856966	ExpressionStatement	"end_phase ( state . heap , ""unregister space roots"" )"	554:4:18287:18333	8855014	337	True				
ANR	8856967	CallExpression	"end_phase ( state . heap , ""unregister space roots"" )"		8855014	0					
ANR	8856968	Callee	end_phase		8855014	0					
ANR	8856969	Identifier	end_phase		8855014	0					
ANR	8856970	ArgumentList	state . heap		8855014	1					
ANR	8856971	Argument	state . heap		8855014	0					
ANR	8856972	MemberAccess	state . heap		8855014	0					
ANR	8856973	Identifier	state		8855014	0					
ANR	8856974	Identifier	heap		8855014	1					
ANR	8856975	Argument	"""unregister space roots"""		8855014	1					
ANR	8856976	PrimaryExpression	"""unregister space roots"""		8855014	0					
ANR	8856977	ExpressionStatement	"gc_validate_spaces ( space_memories , max_trace , & state )"	560:4:18418:18471	8855014	338	True				
ANR	8856978	CallExpression	"gc_validate_spaces ( space_memories , max_trace , & state )"		8855014	0					
ANR	8856979	Callee	gc_validate_spaces		8855014	0					
ANR	8856980	Identifier	gc_validate_spaces		8855014	0					
ANR	8856981	ArgumentList	space_memories		8855014	1					
ANR	8856982	Argument	space_memories		8855014	0					
ANR	8856983	Identifier	space_memories		8855014	0					
ANR	8856984	Argument	max_trace		8855014	1					
ANR	8856985	Identifier	max_trace		8855014	0					
ANR	8856986	Argument	& state		8855014	2					
ANR	8856987	UnaryOperationExpression	& state		8855014	0					
ANR	8856988	UnaryOperator	&		8855014	0					
ANR	8856989	Identifier	state		8855014	1					
ANR	8856990	ExpressionStatement	"end_phase ( state . heap , ""validate pointers"" )"	562:4:18478:18519	8855014	339	True				
ANR	8856991	CallExpression	"end_phase ( state . heap , ""validate pointers"" )"		8855014	0					
ANR	8856992	Callee	end_phase		8855014	0					
ANR	8856993	Identifier	end_phase		8855014	0					
ANR	8856994	ArgumentList	state . heap		8855014	1					
ANR	8856995	Argument	state . heap		8855014	0					
ANR	8856996	MemberAccess	state . heap		8855014	0					
ANR	8856997	Identifier	state		8855014	0					
ANR	8856998	Identifier	heap		8855014	1					
ANR	8856999	Argument	"""validate pointers"""		8855014	1					
ANR	8857000	PrimaryExpression	"""validate pointers"""		8855014	0					
ANR	8857001	ReturnType	void		8855014	1					
ANR	8857002	Identifier	gs_gc_reclaim		8855014	2					
ANR	8857003	ParameterList	"vm_spaces * pspaces , bool global"		8855014	3					
ANR	8857004	Parameter	vm_spaces * pspaces	158:14:5463:5481	8855014	0	True				
ANR	8857005	ParameterType	vm_spaces *		8855014	0					
ANR	8857006	Identifier	pspaces		8855014	1					
ANR	8857007	Parameter	bool global	158:35:5484:5494	8855014	1	True				
ANR	8857008	ParameterType	bool		8855014	0					
ANR	8857009	Identifier	global		8855014	1					
ANR	8857010	CFGEntryNode	ENTRY		8855014		True				
ANR	8857011	CFGExitNode	EXIT		8855014		True				
ANR	8857012	Symbol	space_system		8855014						
ANR	8857013	Symbol	space_local		8855014						
ANR	8857014	Symbol	state . heap -> gs_lib_ctx -> gs_name_table		8855014						
ANR	8857015	Symbol	i_vm_global		8855014						
ANR	8857016	Symbol	prev		8855014						
ANR	8857017	Symbol	* pspaces		8855014						
ANR	8857018	Symbol	ms_default		8855014						
ANR	8857019	Symbol	* state . loc . memory		8855014						
ANR	8857020	Symbol	space_roots		8855014						
ANR	8857021	Symbol	state . procs		8855014						
ANR	8857022	Symbol	ms_size_default		8855014						
ANR	8857023	Symbol	pms		8855014						
ANR	8857024	Symbol	pref		8855014						
ANR	8857025	Symbol	curr -> state . saved		8855014						
ANR	8857026	Symbol	state		8855014						
ANR	8857027	Symbol	I_FORCE_GLOBAL_GC		8855014						
ANR	8857028	Symbol	curr		8855014						
ANR	8857029	Symbol	rp -> p		8855014						
ANR	8857030	Symbol	& ms_default . stack		8855014						
ANR	8857031	Symbol	r_space_shift		8855014						
ANR	8857032	Symbol	mem -> reloc_saved		8855014						
ANR	8857033	Symbol	* * ispace		8855014						
ANR	8857034	Symbol	rp -> next		8855014						
ANR	8857035	Symbol	eptr . ptr		8855014						
ANR	8857036	Symbol	* state . heap -> gs_lib_ctx		8855014						
ANR	8857037	Symbol	* space_global		8855014						
ANR	8857038	Symbol	* cp		8855014						
ANR	8857039	Symbol	state . loc . memory -> non_gc_memory		8855014						
ANR	8857040	Symbol	min_collect		8855014						
ANR	8857041	Symbol	* rp -> ptype -> reloc		8855014						
ANR	8857042	Symbol	rp		8855014						
ANR	8857043	Symbol	* pms		8855014						
ANR	8857044	Symbol	state . loc . cp		8855014						
ANR	8857045	Symbol	get_global_op_array		8855014						
ANR	8857046	Symbol	state . spaces		8855014						
ANR	8857047	Symbol	& state		8855014						
ANR	8857048	Symbol	eptr		8855014						
ANR	8857049	Symbol	cp -> cend		8855014						
ANR	8857050	Symbol	cp -> rescan_top		8855014						
ANR	8857051	Symbol	global		8855014						
ANR	8857052	Symbol	pms -> prev		8855014						
ANR	8857053	Symbol	cp -> cbot		8855014						
ANR	8857054	Symbol	* space_local		8855014						
ANR	8857055	Symbol	state . heap		8855014						
ANR	8857056	Symbol	end -> next		8855014						
ANR	8857057	Symbol	* space_memories		8855014						
ANR	8857058	Symbol	* state . heap		8855014						
ANR	8857059	Symbol	space_local -> stable_memory		8855014						
ANR	8857060	Symbol	state . loc . memory		8855014						
ANR	8857061	Symbol	i_vm_local		8855014						
ANR	8857062	Symbol	avail		8855014						
ANR	8857063	Symbol	space_memories		8855014						
ANR	8857064	Symbol	sw		8855014						
ANR	8857065	Symbol	mem -> saved		8855014						
ANR	8857066	Symbol	more		8855014						
ANR	8857067	Symbol	clump_splay_walk_fwd		8855014						
ANR	8857068	Symbol	i		8855014						
ANR	8857069	Symbol	cp -> cbase		8855014						
ANR	8857070	Symbol	cp		8855014						
ANR	8857071	Symbol	n		8855014						
ANR	8857072	Symbol	* * state		8855014						
ANR	8857073	Symbol	state . heap -> gs_lib_ctx		8855014						
ANR	8857074	Symbol	rp -> ptype -> reloc		8855014						
ANR	8857075	Symbol	gc_trace		8855014						
ANR	8857076	Symbol	& ms_default		8855014						
ANR	8857077	Symbol	mem -> gc_allocated		8855014						
ANR	8857078	Symbol	get_local_op_array		8855014						
ANR	8857079	Symbol	gs_alloc_fill_free		8855014						
ANR	8857080	Symbol	ispace		8855014						
ANR	8857081	Symbol	pms -> next		8855014						
ANR	8857082	Symbol	* * state . heap		8855014						
ANR	8857083	Symbol	mem -> roots		8855014						
ANR	8857084	Symbol	& total		8855014						
ANR	8857085	Symbol	clump_splay_walk_init		8855014						
ANR	8857086	Symbol	pms -> count		8855014						
ANR	8857087	Symbol	ptr_ref_type		8855014						
ANR	8857088	Symbol	* ispace		8855014						
ANR	8857089	Symbol	state . cur_mem		8855014						
ANR	8857090	Symbol	* * rp		8855014						
ANR	8857091	Symbol	& curr -> state		8855014						
ANR	8857092	Symbol	space_global		8855014						
ANR	8857093	Symbol	* rp -> ptype		8855014						
ANR	8857094	Symbol	space_memories [ ispace ] -> saved		8855014						
ANR	8857095	Symbol	space_system -> stable_memory		8855014						
ANR	8857096	Symbol	* rp -> p		8855014						
ANR	8857097	Symbol	gc_trace_clump		8855014						
ANR	8857098	Symbol	ms_default . stack . on_heap		8855014						
ANR	8857099	Symbol	& mem -> saved -> state		8855014						
ANR	8857100	Symbol	spaces		8855014						
ANR	8857101	Symbol	true		8855014						
ANR	8857102	Symbol	space_global -> stable_memory		8855014						
ANR	8857103	Symbol	* end		8855014						
ANR	8857104	Symbol	cmem		8855014						
ANR	8857105	Symbol	max_trace		8855014						
ANR	8857106	Symbol	* mem		8855014						
ANR	8857107	Symbol	* state . loc		8855014						
ANR	8857108	Symbol	next		8855014						
ANR	8857109	Symbol	global_ops		8855014						
ANR	8857110	Symbol	* * space_memories		8855014						
ANR	8857111	Symbol	rp -> ptype		8855014						
ANR	8857112	Symbol	cp -> inner_count		8855014						
ANR	8857113	Symbol	mark_stack		8855014						
ANR	8857114	Symbol	state . min_collect		8855014						
ANR	8857115	Symbol	ms_size_min		8855014						
ANR	8857116	Symbol	ms_default . stack . prev		8855014						
ANR	8857117	Symbol	min_collect_vm_space		8855014						
ANR	8857118	Symbol	pspaces		8855014						
ANR	8857119	Symbol	total		8855014						
ANR	8857120	Symbol	mem		8855014						
ANR	8857121	Symbol	total . used		8855014						
ANR	8857122	Symbol	end		8855014						
ANR	8857123	Symbol	* * * rp		8855014						
ANR	8857124	Symbol	cp -> ctop		8855014						
ANR	8857125	Symbol	mem -> previous_status		8855014						
ANR	8857126	Symbol	curr -> state		8855014						
ANR	8857127	Symbol	mem -> allocated		8855014						
ANR	8857128	Symbol	I_BYPASS_GC		8855014						
ANR	8857129	Symbol	* rp		8855014						
ANR	8857130	Symbol	false		8855014						
ANR	8857131	Symbol	& eptr		8855014						
ANR	8857132	Symbol	ms_default . stack		8855014						
ANR	8857133	Symbol	pms -> on_heap		8855014						
ANR	8857134	Symbol	* state		8855014						
ANR	8857135	Symbol	local_ops		8855014						
ANR	8857136	Symbol	* space_system		8855014						
ANR	8857137	Symbol	* i		8855014						
ANR	8857138	Symbol	* curr		8855014						
ANR	8857139	Symbol	* * rp -> ptype		8855014						
ANR	8857140	Symbol	& igc_procs		8855014						
ANR	8857141	Symbol	state . ntable		8855014						
ANR	8857142	Symbol	rp -> ptype -> unmark		8855014						
ANR	8857143	Symbol	state . relocating_untraced		8855014						
ANR	8857144	Symbol	gc_rescan_clump		8855014						
ANR	8857145	Symbol	* max_trace		8855014						
ANR	8857146	Symbol	state . loc		8855014						
ANR	8857147	Symbol	cp -> rescan_bot		8855014						
ANR	8857148	Symbol	total . allocated		8855014						
ANR	8857149	Function	ptr_struct_unmark	580:0:18862:19065							
ANR	8857150	FunctionDef	"ptr_struct_unmark (enum_ptr_t * pep , gc_state_t * ignored)"		8857149	0					
ANR	8857151	CompoundStatement		582:0:18931:19065	8857149	0					
ANR	8857152	Statement	void	583:4:18937:18940	8857149	0	True				
ANR	8857153	Statement	*	583:9:18942:18942	8857149	1	True				
ANR	8857154	Statement	const	583:10:18943:18947	8857149	2	True				
ANR	8857155	ExpressionStatement	vptr = ( void * ) pep -> ptr	583:16:18949:18972	8857149	3	True				
ANR	8857156	AssignmentExpression	vptr = ( void * ) pep -> ptr		8857149	0		=			
ANR	8857157	Identifier	vptr		8857149	0					
ANR	8857158	CastExpression	( void * ) pep -> ptr		8857149	1					
ANR	8857159	CastTarget	void *		8857149	0					
ANR	8857160	PtrMemberAccess	pep -> ptr		8857149	1					
ANR	8857161	Identifier	pep		8857149	0					
ANR	8857162	Identifier	ptr		8857149	1					
ANR	8857163	IfStatement	if ( vptr != 0 )		8857149	4					
ANR	8857164	Condition	vptr != 0	585:8:19001:19009	8857149	0	True				
ANR	8857165	EqualityExpression	vptr != 0		8857149	0		!=			
ANR	8857166	Identifier	vptr		8857149	0					
ANR	8857167	PrimaryExpression	0		8857149	1					
ANR	8857168	ExpressionStatement	o_set_unmarked ( ( ( obj_header_t * ) vptr - 1 ) )	586:8:19020:19063	8857149	1	True				
ANR	8857169	CallExpression	o_set_unmarked ( ( ( obj_header_t * ) vptr - 1 ) )		8857149	0					
ANR	8857170	Callee	o_set_unmarked		8857149	0					
ANR	8857171	Identifier	o_set_unmarked		8857149	0					
ANR	8857172	ArgumentList	( obj_header_t * ) vptr - 1		8857149	1					
ANR	8857173	Argument	( obj_header_t * ) vptr - 1		8857149	0					
ANR	8857174	AdditiveExpression	( obj_header_t * ) vptr - 1		8857149	0		-			
ANR	8857175	CastExpression	( obj_header_t * ) vptr		8857149	0					
ANR	8857176	CastTarget	obj_header_t *		8857149	0					
ANR	8857177	Identifier	vptr		8857149	1					
ANR	8857178	PrimaryExpression	1		8857149	1					
ANR	8857179	ReturnType	static void		8857149	1					
ANR	8857180	Identifier	ptr_struct_unmark		8857149	2					
ANR	8857181	ParameterList	"enum_ptr_t * pep , gc_state_t * ignored"		8857149	3					
ANR	8857182	Parameter	enum_ptr_t * pep	581:18:18892:18906	8857149	0	True				
ANR	8857183	ParameterType	enum_ptr_t *		8857149	0					
ANR	8857184	Identifier	pep		8857149	1					
ANR	8857185	Parameter	gc_state_t * ignored	581:35:18909:18928	8857149	1	True				
ANR	8857186	ParameterType	gc_state_t *		8857149	0					
ANR	8857187	Identifier	ignored		8857149	1					
ANR	8857188	CFGEntryNode	ENTRY		8857149		True				
ANR	8857189	CFGExitNode	EXIT		8857149		True				
ANR	8857190	Symbol	ignored		8857149						
ANR	8857191	Symbol	pep -> ptr		8857149						
ANR	8857192	Symbol	* pep		8857149						
ANR	8857193	Symbol	pep		8857149						
ANR	8857194	Symbol	vptr		8857149						
ANR	8857195	Function	ptr_string_unmark	590:0:19098:19229							
ANR	8857196	FunctionDef	"ptr_string_unmark (enum_ptr_t * pep , gc_state_t * gcst)"		8857195	0					
ANR	8857197	CompoundStatement		592:0:19164:19229	8857195	0					
ANR	8857198	ExpressionStatement	"discard ( gc_string_mark ( pep -> ptr , pep -> size , false , gcst ) )"	593:4:19170:19227	8857195	0	True				
ANR	8857199	CallExpression	"discard ( gc_string_mark ( pep -> ptr , pep -> size , false , gcst ) )"		8857195	0					
ANR	8857200	Callee	discard		8857195	0					
ANR	8857201	Identifier	discard		8857195	0					
ANR	8857202	ArgumentList	"gc_string_mark ( pep -> ptr , pep -> size , false , gcst )"		8857195	1					
ANR	8857203	Argument	"gc_string_mark ( pep -> ptr , pep -> size , false , gcst )"		8857195	0					
ANR	8857204	CallExpression	"gc_string_mark ( pep -> ptr , pep -> size , false , gcst )"		8857195	0					
ANR	8857205	Callee	gc_string_mark		8857195	0					
ANR	8857206	Identifier	gc_string_mark		8857195	0					
ANR	8857207	ArgumentList	pep -> ptr		8857195	1					
ANR	8857208	Argument	pep -> ptr		8857195	0					
ANR	8857209	PtrMemberAccess	pep -> ptr		8857195	0					
ANR	8857210	Identifier	pep		8857195	0					
ANR	8857211	Identifier	ptr		8857195	1					
ANR	8857212	Argument	pep -> size		8857195	1					
ANR	8857213	PtrMemberAccess	pep -> size		8857195	0					
ANR	8857214	Identifier	pep		8857195	0					
ANR	8857215	Identifier	size		8857195	1					
ANR	8857216	Argument	false		8857195	2					
ANR	8857217	Identifier	false		8857195	0					
ANR	8857218	Argument	gcst		8857195	3					
ANR	8857219	Identifier	gcst		8857195	0					
ANR	8857220	ReturnType	static void		8857195	1					
ANR	8857221	Identifier	ptr_string_unmark		8857195	2					
ANR	8857222	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		8857195	3					
ANR	8857223	Parameter	enum_ptr_t * pep	591:18:19128:19142	8857195	0	True				
ANR	8857224	ParameterType	enum_ptr_t *		8857195	0					
ANR	8857225	Identifier	pep		8857195	1					
ANR	8857226	Parameter	gc_state_t * gcst	591:35:19145:19161	8857195	1	True				
ANR	8857227	ParameterType	gc_state_t *		8857195	0					
ANR	8857228	Identifier	gcst		8857195	1					
ANR	8857229	CFGEntryNode	ENTRY		8857195		True				
ANR	8857230	CFGExitNode	EXIT		8857195		True				
ANR	8857231	Symbol	pep -> size		8857195						
ANR	8857232	Symbol	gc_string_mark		8857195						
ANR	8857233	Symbol	pep -> ptr		8857195						
ANR	8857234	Symbol	* pep		8857195						
ANR	8857235	Symbol	false		8857195						
ANR	8857236	Symbol	pep		8857195						
ANR	8857237	Symbol	gcst		8857195						
ANR	8857238	Function	ptr_name_index_unmark	597:0:19260:19353							
ANR	8857239	FunctionDef	"ptr_name_index_unmark (enum_ptr_t * pep , gc_state_t * gcst)"		8857238	0					
ANR	8857240	CompoundStatement		599:0:19330:19353	8857238	0					
ANR	8857241	ReturnType	static void		8857238	1					
ANR	8857242	Identifier	ptr_name_index_unmark		8857238	2					
ANR	8857243	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		8857238	3					
ANR	8857244	Parameter	enum_ptr_t * pep	598:22:19294:19308	8857238	0	True				
ANR	8857245	ParameterType	enum_ptr_t *		8857238	0					
ANR	8857246	Identifier	pep		8857238	1					
ANR	8857247	Parameter	gc_state_t * gcst	598:39:19311:19327	8857238	1	True				
ANR	8857248	ParameterType	gc_state_t *		8857238	0					
ANR	8857249	Identifier	gcst		8857238	1					
ANR	8857250	CFGEntryNode	ENTRY		8857238		True				
ANR	8857251	CFGExitNode	EXIT		8857238		True				
ANR	8857252	Symbol	pep		8857238						
ANR	8857253	Symbol	gcst		8857238						
ANR	8857254	Function	gc_objects_clear_marks	604:0:19393:20032							
ANR	8857255	FunctionDef	"gc_objects_clear_marks (const gs_memory_t * mem , clump_t * cp)"		8857254	0					
ANR	8857256	CompoundStatement		606:0:19466:20032	8857254	0					
ANR	8857257	ExpressionStatement	"if_debug_clump ( '6' , mem , ""[6]unmarking clump"" , cp )"	607:4:19472:19522	8857254	0	True				
ANR	8857258	CallExpression	"if_debug_clump ( '6' , mem , ""[6]unmarking clump"" , cp )"		8857254	0					
ANR	8857259	Callee	if_debug_clump		8857254	0					
ANR	8857260	Identifier	if_debug_clump		8857254	0					
ANR	8857261	ArgumentList	'6'		8857254	1					
ANR	8857262	Argument	'6'		8857254	0					
ANR	8857263	PrimaryExpression	'6'		8857254	0					
ANR	8857264	Argument	mem		8857254	1					
ANR	8857265	Identifier	mem		8857254	0					
ANR	8857266	Argument	"""[6]unmarking clump"""		8857254	2					
ANR	8857267	PrimaryExpression	"""[6]unmarking clump"""		8857254	0					
ANR	8857268	Argument	cp		8857254	3					
ANR	8857269	Identifier	cp		8857254	0					
ANR	8857270	Statement	SCAN_CLUMP_OBJECTS	608:4:19528:19545	8857254	1	True				
ANR	8857271	Statement	(	608:22:19546:19546	8857254	2	True				
ANR	8857272	Statement	cp	608:23:19547:19548	8857254	3	True				
ANR	8857273	Statement	)	608:25:19549:19549	8857254	4	True				
ANR	8857274	Statement	DO_ALL	609:8:19559:19564	8857254	5	True				
ANR	8857275	ExpressionStatement	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks	610:8:19574:19641	8857254	6	True				
ANR	8857276	AssignmentExpression	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks		8857254	0		=			
ANR	8857277	CallExpression	struct_proc_clear_marks ( ( * proc ) )		8857254	0					
ANR	8857278	Callee	struct_proc_clear_marks		8857254	0					
ANR	8857279	Identifier	struct_proc_clear_marks		8857254	0					
ANR	8857280	ArgumentList	* proc		8857254	1					
ANR	8857281	Argument	* proc		8857254	0					
ANR	8857282	UnaryOperationExpression	* proc		8857254	0					
ANR	8857283	UnaryOperator	*		8857254	0					
ANR	8857284	Identifier	proc		8857254	1					
ANR	8857285	PtrMemberAccess	pre -> o_type -> clear_marks		8857254	1					
ANR	8857286	PtrMemberAccess	pre -> o_type		8857254	0					
ANR	8857287	Identifier	pre		8857254	0					
ANR	8857288	Identifier	o_type		8857254	1					
ANR	8857289	Identifier	clear_marks		8857254	1					
ANR	8857290	IfStatement	if ( pre -> o_type != & st_free )		8857254	7					
ANR	8857291	Condition	pre -> o_type != & st_free	613:8:19664:19686	8857254	0	True				
ANR	8857292	EqualityExpression	pre -> o_type != & st_free		8857254	0		!=			
ANR	8857293	PtrMemberAccess	pre -> o_type		8857254	0					
ANR	8857294	Identifier	pre		8857254	0					
ANR	8857295	Identifier	o_type		8857254	1					
ANR	8857296	UnaryOperationExpression	& st_free		8857254	1					
ANR	8857297	UnaryOperator	&		8857254	0					
ANR	8857298	Identifier	st_free		8857254	1					
ANR	8857299	ExpressionStatement	"debug_check_object ( pre , cp , NULL )"	614:8:19697:19730	8857254	1	True				
ANR	8857300	CallExpression	"debug_check_object ( pre , cp , NULL )"		8857254	0					
ANR	8857301	Callee	debug_check_object		8857254	0					
ANR	8857302	Identifier	debug_check_object		8857254	0					
ANR	8857303	ArgumentList	pre		8857254	1					
ANR	8857304	Argument	pre		8857254	0					
ANR	8857305	Identifier	pre		8857254	0					
ANR	8857306	Argument	cp		8857254	1					
ANR	8857307	Identifier	cp		8857254	0					
ANR	8857308	Argument	NULL		8857254	2					
ANR	8857309	Identifier	NULL		8857254	0					
ANR	8857310	ExpressionStatement	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7](un)marking %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"	616:4:19743:19914	8857254	8	True				
ANR	8857311	CallExpression	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7](un)marking %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"		8857254	0					
ANR	8857312	Callee	if_debug3m		8857254	0					
ANR	8857313	Identifier	if_debug3m		8857254	0					
ANR	8857314	ArgumentList	'7'		8857254	1					
ANR	8857315	Argument	'7'		8857254	0					
ANR	8857316	PrimaryExpression	'7'		8857254	0					
ANR	8857317	Argument	( const gs_memory_t * ) mem		8857254	1					
ANR	8857318	CastExpression	( const gs_memory_t * ) mem		8857254	0					
ANR	8857319	CastTarget	const gs_memory_t *		8857254	0					
ANR	8857320	Identifier	mem		8857254	1					
ANR	8857321	Argument	""" [7](un)marking %s(%lu) 0x%lx\\n"""		8857254	2					
ANR	8857322	PrimaryExpression	""" [7](un)marking %s(%lu) 0x%lx\\n"""		8857254	0					
ANR	8857323	Argument	struct_type_name_string ( pre -> o_type )		8857254	3					
ANR	8857324	CallExpression	struct_type_name_string ( pre -> o_type )		8857254	0					
ANR	8857325	Callee	struct_type_name_string		8857254	0					
ANR	8857326	Identifier	struct_type_name_string		8857254	0					
ANR	8857327	ArgumentList	pre -> o_type		8857254	1					
ANR	8857328	Argument	pre -> o_type		8857254	0					
ANR	8857329	PtrMemberAccess	pre -> o_type		8857254	0					
ANR	8857330	Identifier	pre		8857254	0					
ANR	8857331	Identifier	o_type		8857254	1					
ANR	8857332	Argument	( ulong ) size		8857254	4					
ANR	8857333	CastExpression	( ulong ) size		8857254	0					
ANR	8857334	CastTarget	ulong		8857254	0					
ANR	8857335	Identifier	size		8857254	1					
ANR	8857336	Argument	( ulong ) pre		8857254	5					
ANR	8857337	CastExpression	( ulong ) pre		8857254	0					
ANR	8857338	CastTarget	ulong		8857254	0					
ANR	8857339	Identifier	pre		8857254	1					
ANR	8857340	ExpressionStatement	o_set_unmarked ( pre )	619:4:19920:19939	8857254	9	True				
ANR	8857341	CallExpression	o_set_unmarked ( pre )		8857254	0					
ANR	8857342	Callee	o_set_unmarked		8857254	0					
ANR	8857343	Identifier	o_set_unmarked		8857254	0					
ANR	8857344	ArgumentList	pre		8857254	1					
ANR	8857345	Argument	pre		8857254	0					
ANR	8857346	Identifier	pre		8857254	0					
ANR	8857347	IfStatement	if ( proc != 0 )		8857254	10					
ANR	8857348	Condition	proc != 0	620:8:19949:19957	8857254	0	True				
ANR	8857349	EqualityExpression	proc != 0		8857254	0		!=			
ANR	8857350	Identifier	proc		8857254	0					
ANR	8857351	PrimaryExpression	0		8857254	1					
ANR	8857352	ExpressionStatement	"( * proc ) ( mem , pre + 1 , size , pre -> o_type )"	621:8:19968:20009	8857254	1	True				
ANR	8857353	CallExpression	"( * proc ) ( mem , pre + 1 , size , pre -> o_type )"		8857254	0					
ANR	8857354	Callee	* proc		8857254	0					
ANR	8857355	UnaryOperationExpression	* proc		8857254	0					
ANR	8857356	UnaryOperator	*		8857254	0					
ANR	8857357	Identifier	proc		8857254	1					
ANR	8857358	ArgumentList	mem		8857254	1					
ANR	8857359	Argument	mem		8857254	0					
ANR	8857360	Identifier	mem		8857254	0					
ANR	8857361	Argument	pre + 1		8857254	1					
ANR	8857362	AdditiveExpression	pre + 1		8857254	0		+			
ANR	8857363	Identifier	pre		8857254	0					
ANR	8857364	PrimaryExpression	1		8857254	1					
ANR	8857365	Argument	size		8857254	2					
ANR	8857366	Identifier	size		8857254	0					
ANR	8857367	Argument	pre -> o_type		8857254	3					
ANR	8857368	PtrMemberAccess	pre -> o_type		8857254	0					
ANR	8857369	Identifier	pre		8857254	0					
ANR	8857370	Identifier	o_type		8857254	1					
ANR	8857371	Statement	END_OBJECTS_SCAN	622:4:20015:20030	8857254	11	True				
ANR	8857372	ReturnType	static void		8857254	1					
ANR	8857373	Identifier	gc_objects_clear_marks		8857254	2					
ANR	8857374	ParameterList	"const gs_memory_t * mem , clump_t * cp"		8857254	3					
ANR	8857375	Parameter	const gs_memory_t * mem	605:23:19428:19449	8857254	0	True				
ANR	8857376	ParameterType	const gs_memory_t *		8857254	0					
ANR	8857377	Identifier	mem		8857254	1					
ANR	8857378	Parameter	clump_t * cp	605:47:19452:19463	8857254	1	True				
ANR	8857379	ParameterType	clump_t *		8857254	0					
ANR	8857380	Identifier	cp		8857254	1					
ANR	8857381	CFGEntryNode	ENTRY		8857254		True				
ANR	8857382	CFGExitNode	EXIT		8857254		True				
ANR	8857383	Symbol	struct_proc_clear_marks		8857254						
ANR	8857384	Symbol	pre		8857254						
ANR	8857385	Symbol	proc		8857254						
ANR	8857386	Symbol	struct_type_name_string		8857254						
ANR	8857387	Symbol	NULL		8857254						
ANR	8857388	Symbol	* pre -> o_type		8857254						
ANR	8857389	Symbol	& st_free		8857254						
ANR	8857390	Symbol	cp		8857254						
ANR	8857391	Symbol	* pre		8857254						
ANR	8857392	Symbol	pre -> o_type -> clear_marks		8857254						
ANR	8857393	Symbol	* proc		8857254						
ANR	8857394	Symbol	mem		8857254						
ANR	8857395	Symbol	size		8857254						
ANR	8857396	Symbol	pre -> o_type		8857254						
ANR	8857397	Symbol	* * pre		8857254						
ANR	8857398	Function	gc_unmark_names	627:0:20152:20657							
ANR	8857399	FunctionDef	"gc_unmark_names (name_table * nt , op_array_table * op_array_table_global , op_array_table * op_array_table_local)"		8857398	0					
ANR	8857400	CompoundStatement		630:0:20290:20657	8857398	0					
ANR	8857401	IdentifierDeclStatement	uint i ;	631:4:20296:20302	8857398	0	True				
ANR	8857402	IdentifierDecl	i		8857398	0					
ANR	8857403	IdentifierDeclType	uint		8857398	0					
ANR	8857404	Identifier	i		8857398	1					
ANR	8857405	ExpressionStatement	names_unmark_all ( nt )	633:4:20309:20329	8857398	1	True				
ANR	8857406	CallExpression	names_unmark_all ( nt )		8857398	0					
ANR	8857407	Callee	names_unmark_all		8857398	0					
ANR	8857408	Identifier	names_unmark_all		8857398	0					
ANR	8857409	ArgumentList	nt		8857398	1					
ANR	8857410	Argument	nt		8857398	0					
ANR	8857411	Identifier	nt		8857398	0					
ANR	8857412	ForStatement	for ( i = 0 ; i < op_array_table_global -> count ; i ++ )		8857398	2					
ANR	8857413	ForInit	i = 0 ;	634:9:20340:20345	8857398	0	True				
ANR	8857414	AssignmentExpression	i = 0		8857398	0		=			
ANR	8857415	Identifier	i		8857398	0					
ANR	8857416	PrimaryExpression	0		8857398	1					
ANR	8857417	Condition	i < op_array_table_global -> count	634:16:20347:20378	8857398	1	True				
ANR	8857418	RelationalExpression	i < op_array_table_global -> count		8857398	0		<			
ANR	8857419	Identifier	i		8857398	0					
ANR	8857420	PtrMemberAccess	op_array_table_global -> count		8857398	1					
ANR	8857421	Identifier	op_array_table_global		8857398	0					
ANR	8857422	Identifier	count		8857398	1					
ANR	8857423	PostIncDecOperationExpression	i ++	634:50:20381:20383	8857398	2	True				
ANR	8857424	Identifier	i		8857398	0					
ANR	8857425	IncDec	++		8857398	1					
ANR	8857426	CompoundStatement		6:8:105:159	8857398	3					
ANR	8857427	IdentifierDeclStatement	name_index_t nidx = op_array_table_global -> nx_table [ i ] ;	635:8:20396:20450	8857398	0	True				
ANR	8857428	IdentifierDecl	nidx = op_array_table_global -> nx_table [ i ]		8857398	0					
ANR	8857429	IdentifierDeclType	name_index_t		8857398	0					
ANR	8857430	Identifier	nidx		8857398	1					
ANR	8857431	AssignmentExpression	nidx = op_array_table_global -> nx_table [ i ]		8857398	2		=			
ANR	8857432	Identifier	nidx		8857398	0					
ANR	8857433	ArrayIndexing	op_array_table_global -> nx_table [ i ]		8857398	1					
ANR	8857434	PtrMemberAccess	op_array_table_global -> nx_table		8857398	0					
ANR	8857435	Identifier	op_array_table_global		8857398	0					
ANR	8857436	Identifier	nx_table		8857398	1					
ANR	8857437	Identifier	i		8857398	1					
ANR	8857438	ExpressionStatement	"names_mark_index ( nt , nidx )"	637:8:20461:20487	8857398	1	True				
ANR	8857439	CallExpression	"names_mark_index ( nt , nidx )"		8857398	0					
ANR	8857440	Callee	names_mark_index		8857398	0					
ANR	8857441	Identifier	names_mark_index		8857398	0					
ANR	8857442	ArgumentList	nt		8857398	1					
ANR	8857443	Argument	nt		8857398	0					
ANR	8857444	Identifier	nt		8857398	0					
ANR	8857445	Argument	nidx		8857398	1					
ANR	8857446	Identifier	nidx		8857398	0					
ANR	8857447	ForStatement	for ( i = 0 ; i < op_array_table_local -> count ; i ++ )		8857398	3					
ANR	8857448	ForInit	i = 0 ;	639:9:20504:20509	8857398	0	True				
ANR	8857449	AssignmentExpression	i = 0		8857398	0		=			
ANR	8857450	Identifier	i		8857398	0					
ANR	8857451	PrimaryExpression	0		8857398	1					
ANR	8857452	Condition	i < op_array_table_local -> count	639:16:20511:20541	8857398	1	True				
ANR	8857453	RelationalExpression	i < op_array_table_local -> count		8857398	0		<			
ANR	8857454	Identifier	i		8857398	0					
ANR	8857455	PtrMemberAccess	op_array_table_local -> count		8857398	1					
ANR	8857456	Identifier	op_array_table_local		8857398	0					
ANR	8857457	Identifier	count		8857398	1					
ANR	8857458	PostIncDecOperationExpression	i ++	639:49:20544:20546	8857398	2	True				
ANR	8857459	Identifier	i		8857398	0					
ANR	8857460	IncDec	++		8857398	1					
ANR	8857461	CompoundStatement		11:8:268:321	8857398	3					
ANR	8857462	IdentifierDeclStatement	name_index_t nidx = op_array_table_local -> nx_table [ i ] ;	640:8:20559:20612	8857398	0	True				
ANR	8857463	IdentifierDecl	nidx = op_array_table_local -> nx_table [ i ]		8857398	0					
ANR	8857464	IdentifierDeclType	name_index_t		8857398	0					
ANR	8857465	Identifier	nidx		8857398	1					
ANR	8857466	AssignmentExpression	nidx = op_array_table_local -> nx_table [ i ]		8857398	2		=			
ANR	8857467	Identifier	nidx		8857398	0					
ANR	8857468	ArrayIndexing	op_array_table_local -> nx_table [ i ]		8857398	1					
ANR	8857469	PtrMemberAccess	op_array_table_local -> nx_table		8857398	0					
ANR	8857470	Identifier	op_array_table_local		8857398	0					
ANR	8857471	Identifier	nx_table		8857398	1					
ANR	8857472	Identifier	i		8857398	1					
ANR	8857473	ExpressionStatement	"names_mark_index ( nt , nidx )"	642:8:20623:20649	8857398	1	True				
ANR	8857474	CallExpression	"names_mark_index ( nt , nidx )"		8857398	0					
ANR	8857475	Callee	names_mark_index		8857398	0					
ANR	8857476	Identifier	names_mark_index		8857398	0					
ANR	8857477	ArgumentList	nt		8857398	1					
ANR	8857478	Argument	nt		8857398	0					
ANR	8857479	Identifier	nt		8857398	0					
ANR	8857480	Argument	nidx		8857398	1					
ANR	8857481	Identifier	nidx		8857398	0					
ANR	8857482	ReturnType	static void		8857398	1					
ANR	8857483	Identifier	gc_unmark_names		8857398	2					
ANR	8857484	ParameterList	"name_table * nt , op_array_table * op_array_table_global , op_array_table * op_array_table_local"		8857398	3					
ANR	8857485	Parameter	name_table * nt	628:16:20180:20194	8857398	0	True				
ANR	8857486	ParameterType	name_table *		8857398	0					
ANR	8857487	Identifier	nt		8857398	1					
ANR	8857488	Parameter	op_array_table * op_array_table_global	628:33:20197:20233	8857398	1	True				
ANR	8857489	ParameterType	op_array_table *		8857398	0					
ANR	8857490	Identifier	op_array_table_global		8857398	1					
ANR	8857491	Parameter	op_array_table * op_array_table_local	629:16:20252:20287	8857398	2	True				
ANR	8857492	ParameterType	op_array_table *		8857398	0					
ANR	8857493	Identifier	op_array_table_local		8857398	1					
ANR	8857494	CFGEntryNode	ENTRY		8857398		True				
ANR	8857495	CFGExitNode	EXIT		8857398		True				
ANR	8857496	Symbol	* * op_array_table_local		8857398						
ANR	8857497	Symbol	nt		8857398						
ANR	8857498	Symbol	op_array_table_global -> count		8857398						
ANR	8857499	Symbol	i		8857398						
ANR	8857500	Symbol	op_array_table_global -> nx_table		8857398						
ANR	8857501	Symbol	* op_array_table_local -> nx_table		8857398						
ANR	8857502	Symbol	op_array_table_local -> count		8857398						
ANR	8857503	Symbol	* * op_array_table_global		8857398						
ANR	8857504	Symbol	* i		8857398						
ANR	8857505	Symbol	op_array_table_local -> nx_table		8857398						
ANR	8857506	Symbol	op_array_table_local		8857398						
ANR	8857507	Symbol	* op_array_table_global -> nx_table		8857398						
ANR	8857508	Symbol	op_array_table_global		8857398						
ANR	8857509	Symbol	* op_array_table_global		8857398						
ANR	8857510	Symbol	nidx		8857398						
ANR	8857511	Symbol	* op_array_table_local		8857398						
ANR	8857512	Function	gc_init_mark_stack	649:0:20743:20949							
ANR	8857513	FunctionDef	"gc_init_mark_stack (gc_mark_stack * pms , uint count)"		8857512	0					
ANR	8857514	CompoundStatement		651:0:20807:20949	8857512	0					
ANR	8857515	ExpressionStatement	pms -> next = 0	652:4:20813:20826	8857512	0	True				
ANR	8857516	AssignmentExpression	pms -> next = 0		8857512	0		=			
ANR	8857517	PtrMemberAccess	pms -> next		8857512	0					
ANR	8857518	Identifier	pms		8857512	0					
ANR	8857519	Identifier	next		8857512	1					
ANR	8857520	PrimaryExpression	0		8857512	1					
ANR	8857521	ExpressionStatement	pms -> count = count	653:4:20832:20850	8857512	1	True				
ANR	8857522	AssignmentExpression	pms -> count = count		8857512	0		=			
ANR	8857523	PtrMemberAccess	pms -> count		8857512	0					
ANR	8857524	Identifier	pms		8857512	0					
ANR	8857525	Identifier	count		8857512	1					
ANR	8857526	Identifier	count		8857512	1					
ANR	8857527	ExpressionStatement	pms -> entries [ 0 ] . ptr = 0	654:4:20856:20879	8857512	2	True				
ANR	8857528	AssignmentExpression	pms -> entries [ 0 ] . ptr = 0		8857512	0		=			
ANR	8857529	MemberAccess	pms -> entries [ 0 ] . ptr		8857512	0					
ANR	8857530	ArrayIndexing	pms -> entries [ 0 ]		8857512	0					
ANR	8857531	PtrMemberAccess	pms -> entries		8857512	0					
ANR	8857532	Identifier	pms		8857512	0					
ANR	8857533	Identifier	entries		8857512	1					
ANR	8857534	PrimaryExpression	0		8857512	1					
ANR	8857535	Identifier	ptr		8857512	1					
ANR	8857536	PrimaryExpression	0		8857512	1					
ANR	8857537	ExpressionStatement	pms -> entries [ 0 ] . index = 0	655:4:20885:20910	8857512	3	True				
ANR	8857538	AssignmentExpression	pms -> entries [ 0 ] . index = 0		8857512	0		=			
ANR	8857539	MemberAccess	pms -> entries [ 0 ] . index		8857512	0					
ANR	8857540	ArrayIndexing	pms -> entries [ 0 ]		8857512	0					
ANR	8857541	PtrMemberAccess	pms -> entries		8857512	0					
ANR	8857542	Identifier	pms		8857512	0					
ANR	8857543	Identifier	entries		8857512	1					
ANR	8857544	PrimaryExpression	0		8857512	1					
ANR	8857545	Identifier	index		8857512	1					
ANR	8857546	PrimaryExpression	0		8857512	1					
ANR	8857547	ExpressionStatement	pms -> entries [ 0 ] . is_refs = false	656:4:20916:20947	8857512	4	True				
ANR	8857548	AssignmentExpression	pms -> entries [ 0 ] . is_refs = false		8857512	0		=			
ANR	8857549	MemberAccess	pms -> entries [ 0 ] . is_refs		8857512	0					
ANR	8857550	ArrayIndexing	pms -> entries [ 0 ]		8857512	0					
ANR	8857551	PtrMemberAccess	pms -> entries		8857512	0					
ANR	8857552	Identifier	pms		8857512	0					
ANR	8857553	Identifier	entries		8857512	1					
ANR	8857554	PrimaryExpression	0		8857512	1					
ANR	8857555	Identifier	is_refs		8857512	1					
ANR	8857556	Identifier	false		8857512	1					
ANR	8857557	ReturnType	static void		8857512	1					
ANR	8857558	Identifier	gc_init_mark_stack		8857512	2					
ANR	8857559	ParameterList	"gc_mark_stack * pms , uint count"		8857512	3					
ANR	8857560	Parameter	gc_mark_stack * pms	650:19:20774:20792	8857512	0	True				
ANR	8857561	ParameterType	gc_mark_stack *		8857512	0					
ANR	8857562	Identifier	pms		8857512	1					
ANR	8857563	Parameter	uint count	650:40:20795:20804	8857512	1	True				
ANR	8857564	ParameterType	uint		8857512	0					
ANR	8857565	Identifier	count		8857512	1					
ANR	8857566	CFGEntryNode	ENTRY		8857512		True				
ANR	8857567	CFGExitNode	EXIT		8857512		True				
ANR	8857568	Symbol	* pms		8857512						
ANR	8857569	Symbol	pms -> entries		8857512						
ANR	8857570	Symbol	pms -> entries [ 0 ] . index		8857512						
ANR	8857571	Symbol	* pms -> entries		8857512						
ANR	8857572	Symbol	pms		8857512						
ANR	8857573	Symbol	pms -> count		8857512						
ANR	8857574	Symbol	pms -> entries [ 0 ] . is_refs		8857512						
ANR	8857575	Symbol	count		8857512						
ANR	8857576	Symbol	false		8857512						
ANR	8857577	Symbol	pms -> next		8857512						
ANR	8857578	Symbol	* * pms		8857512						
ANR	8857579	Symbol	pms -> entries [ 0 ] . ptr		8857512						
ANR	8857580	Function	gc_rescan_clump	661:0:21049:23141							
ANR	8857581	FunctionDef	"gc_rescan_clump (clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack)"		8857580	0					
ANR	8857582	CompoundStatement		663:0:21136:23141	8857580	0					
ANR	8857583	IdentifierDeclStatement	byte * sbot = cp -> rescan_bot ;	664:4:21142:21169	8857580	0	True				
ANR	8857584	IdentifierDecl	* sbot = cp -> rescan_bot		8857580	0					
ANR	8857585	IdentifierDeclType	byte *		8857580	0					
ANR	8857586	Identifier	sbot		8857580	1					
ANR	8857587	AssignmentExpression	* sbot = cp -> rescan_bot		8857580	2		=			
ANR	8857588	Identifier	sbot		8857580	0					
ANR	8857589	PtrMemberAccess	cp -> rescan_bot		8857580	1					
ANR	8857590	Identifier	cp		8857580	0					
ANR	8857591	Identifier	rescan_bot		8857580	1					
ANR	8857592	IdentifierDeclStatement	byte * stop = cp -> rescan_top ;	665:4:21175:21202	8857580	1	True				
ANR	8857593	IdentifierDecl	* stop = cp -> rescan_top		8857580	0					
ANR	8857594	IdentifierDeclType	byte *		8857580	0					
ANR	8857595	Identifier	stop		8857580	1					
ANR	8857596	AssignmentExpression	* stop = cp -> rescan_top		8857580	2		=			
ANR	8857597	Identifier	stop		8857580	0					
ANR	8857598	PtrMemberAccess	cp -> rescan_top		8857580	1					
ANR	8857599	Identifier	cp		8857580	0					
ANR	8857600	Identifier	rescan_top		8857580	1					
ANR	8857601	IdentifierDeclStatement	gs_gc_root_t root ;	666:4:21208:21225	8857580	2	True				
ANR	8857602	IdentifierDecl	root		8857580	0					
ANR	8857603	IdentifierDeclType	gs_gc_root_t		8857580	0					
ANR	8857604	Identifier	root		8857580	1					
ANR	8857605	IdentifierDeclStatement	void * comp ;	667:4:21231:21241	8857580	3	True				
ANR	8857606	IdentifierDecl	* comp		8857580	0					
ANR	8857607	IdentifierDeclType	void *		8857580	0					
ANR	8857608	Identifier	comp		8857580	1					
ANR	8857609	IdentifierDeclStatement	int more = 0 ;	668:4:21247:21259	8857580	4	True				
ANR	8857610	IdentifierDecl	more = 0		8857580	0					
ANR	8857611	IdentifierDeclType	int		8857580	0					
ANR	8857612	Identifier	more		8857580	1					
ANR	8857613	AssignmentExpression	more = 0		8857580	2		=			
ANR	8857614	Identifier	more		8857580	0					
ANR	8857615	PrimaryExpression	0		8857580	1					
ANR	8857616	IdentifierDeclStatement	const gs_memory_t * mem = gcst_get_memory_ptr ( pstate ) ;	669:4:21265:21319	8857580	5	True				
ANR	8857617	IdentifierDecl	* mem = gcst_get_memory_ptr ( pstate )		8857580	0					
ANR	8857618	IdentifierDeclType	const gs_memory_t *		8857580	0					
ANR	8857619	Identifier	mem		8857580	1					
ANR	8857620	AssignmentExpression	* mem = gcst_get_memory_ptr ( pstate )		8857580	2		=			
ANR	8857621	Identifier	mem		8857580	0					
ANR	8857622	CallExpression	gcst_get_memory_ptr ( pstate )		8857580	1					
ANR	8857623	Callee	gcst_get_memory_ptr		8857580	0					
ANR	8857624	Identifier	gcst_get_memory_ptr		8857580	0					
ANR	8857625	ArgumentList	pstate		8857580	1					
ANR	8857626	Argument	pstate		8857580	0					
ANR	8857627	Identifier	pstate		8857580	0					
ANR	8857628	IfStatement	if ( sbot > stop )		8857580	6					
ANR	8857629	Condition	sbot > stop	671:8:21330:21340	8857580	0	True				
ANR	8857630	RelationalExpression	sbot > stop		8857580	0		>			
ANR	8857631	Identifier	sbot		8857580	0					
ANR	8857632	Identifier	stop		8857580	1					
ANR	8857633	ReturnStatement	return 0 ;	672:8:21351:21359	8857580	1	True				
ANR	8857634	PrimaryExpression	0		8857580	0					
ANR	8857635	ExpressionStatement	root . p = & comp	673:4:21365:21379	8857580	7	True				
ANR	8857636	AssignmentExpression	root . p = & comp		8857580	0		=			
ANR	8857637	MemberAccess	root . p		8857580	0					
ANR	8857638	Identifier	root		8857580	0					
ANR	8857639	Identifier	p		8857580	1					
ANR	8857640	UnaryOperationExpression	& comp		8857580	1					
ANR	8857641	UnaryOperator	&		8857580	0					
ANR	8857642	Identifier	comp		8857580	1					
ANR	8857643	ExpressionStatement	"if_debug_clump ( '6' , mem , ""[6]rescanning clump"" , cp )"	674:4:21385:21436	8857580	8	True				
ANR	8857644	CallExpression	"if_debug_clump ( '6' , mem , ""[6]rescanning clump"" , cp )"		8857580	0					
ANR	8857645	Callee	if_debug_clump		8857580	0					
ANR	8857646	Identifier	if_debug_clump		8857580	0					
ANR	8857647	ArgumentList	'6'		8857580	1					
ANR	8857648	Argument	'6'		8857580	0					
ANR	8857649	PrimaryExpression	'6'		8857580	0					
ANR	8857650	Argument	mem		8857580	1					
ANR	8857651	Identifier	mem		8857580	0					
ANR	8857652	Argument	"""[6]rescanning clump"""		8857580	2					
ANR	8857653	PrimaryExpression	"""[6]rescanning clump"""		8857580	0					
ANR	8857654	Argument	cp		8857580	3					
ANR	8857655	Identifier	cp		8857580	0					
ANR	8857656	ExpressionStatement	cp -> rescan_bot = cp -> cend	675:4:21442:21467	8857580	9	True				
ANR	8857657	AssignmentExpression	cp -> rescan_bot = cp -> cend		8857580	0		=			
ANR	8857658	PtrMemberAccess	cp -> rescan_bot		8857580	0					
ANR	8857659	Identifier	cp		8857580	0					
ANR	8857660	Identifier	rescan_bot		8857580	1					
ANR	8857661	PtrMemberAccess	cp -> cend		8857580	1					
ANR	8857662	Identifier	cp		8857580	0					
ANR	8857663	Identifier	cend		8857580	1					
ANR	8857664	ExpressionStatement	cp -> rescan_top = cp -> cbase	676:4:21473:21499	8857580	10	True				
ANR	8857665	AssignmentExpression	cp -> rescan_top = cp -> cbase		8857580	0		=			
ANR	8857666	PtrMemberAccess	cp -> rescan_top		8857580	0					
ANR	8857667	Identifier	cp		8857580	0					
ANR	8857668	Identifier	rescan_top		8857580	1					
ANR	8857669	PtrMemberAccess	cp -> cbase		8857580	1					
ANR	8857670	Identifier	cp		8857580	0					
ANR	8857671	Identifier	cbase		8857580	1					
ANR	8857672	Statement	SCAN_CLUMP_OBJECTS	677:4:21505:21522	8857580	11	True				
ANR	8857673	Statement	(	677:22:21523:21523	8857580	12	True				
ANR	8857674	Statement	cp	677:23:21524:21525	8857580	13	True				
ANR	8857675	Statement	)	677:25:21526:21526	8857580	14	True				
ANR	8857676	Statement	DO_ALL	678:8:21536:21541	8857580	15	True				
ANR	8857677	IfStatement	if ( ( byte * ) ( pre + 1 ) + size < sbot )		8857580	16					
ANR	8857678	Condition	( byte * ) ( pre + 1 ) + size < sbot	679:12:21555:21586	8857580	0	True				
ANR	8857679	RelationalExpression	( byte * ) ( pre + 1 ) + size < sbot		8857580	0		<			
ANR	8857680	AdditiveExpression	( byte * ) ( pre + 1 ) + size		8857580	0		+			
ANR	8857681	CastExpression	( byte * ) ( pre + 1 )		8857580	0					
ANR	8857682	CastTarget	byte *		8857580	0					
ANR	8857683	AdditiveExpression	pre + 1		8857580	1		+			
ANR	8857684	Identifier	pre		8857580	0					
ANR	8857685	PrimaryExpression	1		8857580	1					
ANR	8857686	Identifier	size		8857580	1					
ANR	8857687	Identifier	sbot		8857580	1					
ANR	8857688	ExpressionStatement		679:45:21588:21588	8857580	1	True				
ANR	8857689	ElseStatement	else		8857580	0					
ANR	8857690	IfStatement	if ( ( byte * ) ( pre + 1 ) > stop )		8857580	0					
ANR	8857691	Condition	( byte * ) ( pre + 1 ) > stop	680:13:21603:21627	8857580	0	True				
ANR	8857692	RelationalExpression	( byte * ) ( pre + 1 ) > stop		8857580	0		>			
ANR	8857693	CastExpression	( byte * ) ( pre + 1 )		8857580	0					
ANR	8857694	CastTarget	byte *		8857580	0					
ANR	8857695	AdditiveExpression	pre + 1		8857580	1		+			
ANR	8857696	Identifier	pre		8857580	0					
ANR	8857697	PrimaryExpression	1		8857580	1					
ANR	8857698	Identifier	stop		8857580	1					
ANR	8857699	ReturnStatement	return more ;	681:8:21638:21649	8857580	1	True				
ANR	8857700	Identifier	more		8857580	0					
ANR	8857701	ElseStatement	else		8857580	0					
ANR	8857702	CompoundStatement		20:9:554:554	8857580	0					
ANR	8857703	ExpressionStatement	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"	683:8:21701:21804	8857580	0	True				
ANR	8857704	CallExpression	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"		8857580	0					
ANR	8857705	Callee	if_debug2m		8857580	0					
ANR	8857706	Identifier	if_debug2m		8857580	0					
ANR	8857707	ArgumentList	'7'		8857580	1					
ANR	8857708	Argument	'7'		8857580	0					
ANR	8857709	PrimaryExpression	'7'		8857580	0					
ANR	8857710	Argument	mem		8857580	1					
ANR	8857711	Identifier	mem		8857580	0					
ANR	8857712	Argument	""" [7]scanning/marking 0x%lx(%lu)\\n"""		8857580	2					
ANR	8857713	PrimaryExpression	""" [7]scanning/marking 0x%lx(%lu)\\n"""		8857580	0					
ANR	8857714	Argument	( ulong ) pre		8857580	3					
ANR	8857715	CastExpression	( ulong ) pre		8857580	0					
ANR	8857716	CastTarget	ulong		8857580	0					
ANR	8857717	Identifier	pre		8857580	1					
ANR	8857718	Argument	( ulong ) size		8857580	4					
ANR	8857719	CastExpression	( ulong ) size		8857580	0					
ANR	8857720	CastTarget	ulong		8857580	0					
ANR	8857721	Identifier	size		8857580	1					
ANR	8857722	IfStatement	if ( pre -> o_type == & st_refs )		8857580	1					
ANR	8857723	Condition	pre -> o_type == & st_refs	685:12:21818:21840	8857580	0	True				
ANR	8857724	EqualityExpression	pre -> o_type == & st_refs		8857580	0		==			
ANR	8857725	PtrMemberAccess	pre -> o_type		8857580	0					
ANR	8857726	Identifier	pre		8857580	0					
ANR	8857727	Identifier	o_type		8857580	1					
ANR	8857728	UnaryOperationExpression	& st_refs		8857580	1					
ANR	8857729	UnaryOperator	&		8857580	0					
ANR	8857730	Identifier	st_refs		8857580	1					
ANR	8857731	CompoundStatement		25:12:775:804	8857580	1					
ANR	8857732	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) ( pre + 1 ) ;	686:12:21857:21898	8857580	0	True				
ANR	8857733	IdentifierDecl	* rp = ( ref_packed * ) ( pre + 1 )		8857580	0					
ANR	8857734	IdentifierDeclType	ref_packed *		8857580	0					
ANR	8857735	Identifier	rp		8857580	1					
ANR	8857736	AssignmentExpression	* rp = ( ref_packed * ) ( pre + 1 )		8857580	2		=			
ANR	8857737	Identifier	rp		8857580	0					
ANR	8857738	CastExpression	( ref_packed * ) ( pre + 1 )		8857580	1					
ANR	8857739	CastTarget	ref_packed *		8857580	0					
ANR	8857740	AdditiveExpression	pre + 1		8857580	1		+			
ANR	8857741	Identifier	pre		8857580	0					
ANR	8857742	PrimaryExpression	1		8857580	1					
ANR	8857743	IdentifierDeclStatement	char * end = ( char * ) rp + size ;	687:12:21912:21941	8857580	1	True				
ANR	8857744	IdentifierDecl	* end = ( char * ) rp + size		8857580	0					
ANR	8857745	IdentifierDeclType	char *		8857580	0					
ANR	8857746	Identifier	end		8857580	1					
ANR	8857747	AssignmentExpression	* end = ( char * ) rp + size		8857580	2		=			
ANR	8857748	Identifier	end		8857580	0					
ANR	8857749	AdditiveExpression	( char * ) rp + size		8857580	1		+			
ANR	8857750	CastExpression	( char * ) rp		8857580	0					
ANR	8857751	CastTarget	char *		8857580	0					
ANR	8857752	Identifier	rp		8857580	1					
ANR	8857753	Identifier	size		8857580	1					
ANR	8857754	ExpressionStatement	root . ptype = ptr_ref_type	689:12:21956:21981	8857580	2	True				
ANR	8857755	AssignmentExpression	root . ptype = ptr_ref_type		8857580	0		=			
ANR	8857756	MemberAccess	root . ptype		8857580	0					
ANR	8857757	Identifier	root		8857580	0					
ANR	8857758	Identifier	ptype		8857580	1					
ANR	8857759	Identifier	ptr_ref_type		8857580	1					
ANR	8857760	WhileStatement	while ( ( char * ) rp < end )		8857580	3					
ANR	8857761	Condition	( char * ) rp < end	690:19:22002:22017	8857580	0	True				
ANR	8857762	RelationalExpression	( char * ) rp < end		8857580	0		<			
ANR	8857763	CastExpression	( char * ) rp		8857580	0					
ANR	8857764	CastTarget	char *		8857580	0					
ANR	8857765	Identifier	rp		8857580	1					
ANR	8857766	Identifier	end		8857580	1					
ANR	8857767	CompoundStatement		28:37:883:883	8857580	1					
ANR	8857768	ExpressionStatement	comp = rp	691:16:22038:22047	8857580	0	True				
ANR	8857769	AssignmentExpression	comp = rp		8857580	0		=			
ANR	8857770	Identifier	comp		8857580	0					
ANR	8857771	Identifier	rp		8857580	1					
ANR	8857772	IfStatement	if ( r_is_packed ( rp ) )		8857580	1					
ANR	8857773	Condition	r_is_packed ( rp )	692:20:22069:22083	8857580	0	True				
ANR	8857774	CallExpression	r_is_packed ( rp )		8857580	0					
ANR	8857775	Callee	r_is_packed		8857580	0					
ANR	8857776	Identifier	r_is_packed		8857580	0					
ANR	8857777	ArgumentList	rp		8857580	1					
ANR	8857778	Argument	rp		8857580	0					
ANR	8857779	Identifier	rp		8857580	0					
ANR	8857780	CompoundStatement		30:37:949:949	8857580	1					
ANR	8857781	IfStatement	if ( r_has_pmark ( rp ) )		8857580	0					
ANR	8857782	Condition	r_has_pmark ( rp )	693:24:22112:22126	8857580	0	True				
ANR	8857783	CallExpression	r_has_pmark ( rp )		8857580	0					
ANR	8857784	Callee	r_has_pmark		8857580	0					
ANR	8857785	Identifier	r_has_pmark		8857580	0					
ANR	8857786	ArgumentList	rp		8857580	1					
ANR	8857787	Argument	rp		8857580	0					
ANR	8857788	Identifier	rp		8857580	0					
ANR	8857789	CompoundStatement		31:41:992:992	8857580	1					
ANR	8857790	ExpressionStatement	r_clear_pmark ( rp )	694:24:22155:22172	8857580	0	True				
ANR	8857791	CallExpression	r_clear_pmark ( rp )		8857580	0					
ANR	8857792	Callee	r_clear_pmark		8857580	0					
ANR	8857793	Identifier	r_clear_pmark		8857580	0					
ANR	8857794	ArgumentList	rp		8857580	1					
ANR	8857795	Argument	rp		8857580	0					
ANR	8857796	Identifier	rp		8857580	0					
ANR	8857797	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	695:24:22198:22279	8857580	1	True				
ANR	8857798	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		8857580	0		|=			
ANR	8857799	Identifier	more		8857580	0					
ANR	8857800	CallExpression	"gc_trace ( & root , pstate , pmstack )"		8857580	1					
ANR	8857801	Callee	gc_trace		8857580	0					
ANR	8857802	Identifier	gc_trace		8857580	0					
ANR	8857803	ArgumentList	& root		8857580	1					
ANR	8857804	Argument	& root		8857580	0					
ANR	8857805	UnaryOperationExpression	& root		8857580	0					
ANR	8857806	UnaryOperator	&		8857580	0					
ANR	8857807	Identifier	root		8857580	1					
ANR	8857808	Argument	pstate		8857580	1					
ANR	8857809	Identifier	pstate		8857580	0					
ANR	8857810	Argument	pmstack		8857580	2					
ANR	8857811	Identifier	pmstack		8857580	0					
ANR	8857812	ExpressionStatement	rp ++	698:20:22323:22327	8857580	1	True				
ANR	8857813	PostIncDecOperationExpression	rp ++		8857580	0					
ANR	8857814	Identifier	rp		8857580	0					
ANR	8857815	IncDec	++		8857580	1					
ANR	8857816	ElseStatement	else		8857580	0					
ANR	8857817	CompoundStatement		37:23:1215:1215	8857580	0					
ANR	8857818	Statement	ref	700:20:22374:22376	8857580	0	True				
ANR	8857819	Statement	*	700:24:22378:22378	8857580	1	True				
ANR	8857820	Statement	const	700:25:22379:22383	8857580	2	True				
ANR	8857821	ExpressionStatement	pref = ( ref * ) rp	700:31:22385:22401	8857580	3	True				
ANR	8857822	AssignmentExpression	pref = ( ref * ) rp		8857580	0		=			
ANR	8857823	Identifier	pref		8857580	0					
ANR	8857824	CastExpression	( ref * ) rp		8857580	1					
ANR	8857825	CastTarget	ref *		8857580	0					
ANR	8857826	Identifier	rp		8857580	1					
ANR	8857827	IfStatement	"if ( r_has_attr ( pref , l_mark ) )"		8857580	4					
ANR	8857828	Condition	"r_has_attr ( pref , l_mark )"	702:24:22428:22451	8857580	0	True				
ANR	8857829	CallExpression	"r_has_attr ( pref , l_mark )"		8857580	0					
ANR	8857830	Callee	r_has_attr		8857580	0					
ANR	8857831	Identifier	r_has_attr		8857580	0					
ANR	8857832	ArgumentList	pref		8857580	1					
ANR	8857833	Argument	pref		8857580	0					
ANR	8857834	Identifier	pref		8857580	0					
ANR	8857835	Argument	l_mark		8857580	1					
ANR	8857836	Identifier	l_mark		8857580	0					
ANR	8857837	CompoundStatement		40:50:1317:1317	8857580	1					
ANR	8857838	ExpressionStatement	"r_clear_attrs ( pref , l_mark )"	703:24:22480:22507	8857580	0	True				
ANR	8857839	CallExpression	"r_clear_attrs ( pref , l_mark )"		8857580	0					
ANR	8857840	Callee	r_clear_attrs		8857580	0					
ANR	8857841	Identifier	r_clear_attrs		8857580	0					
ANR	8857842	ArgumentList	pref		8857580	1					
ANR	8857843	Argument	pref		8857580	0					
ANR	8857844	Identifier	pref		8857580	0					
ANR	8857845	Argument	l_mark		8857580	1					
ANR	8857846	Identifier	l_mark		8857580	0					
ANR	8857847	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	704:24:22533:22573	8857580	1	True				
ANR	8857848	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		8857580	0		|=			
ANR	8857849	Identifier	more		8857580	0					
ANR	8857850	CallExpression	"gc_trace ( & root , pstate , pmstack )"		8857580	1					
ANR	8857851	Callee	gc_trace		8857580	0					
ANR	8857852	Identifier	gc_trace		8857580	0					
ANR	8857853	ArgumentList	& root		8857580	1					
ANR	8857854	Argument	& root		8857580	0					
ANR	8857855	UnaryOperationExpression	& root		8857580	0					
ANR	8857856	UnaryOperator	&		8857580	0					
ANR	8857857	Identifier	root		8857580	1					
ANR	8857858	Argument	pstate		8857580	1					
ANR	8857859	Identifier	pstate		8857580	0					
ANR	8857860	Argument	pmstack		8857580	2					
ANR	8857861	Identifier	pmstack		8857580	0					
ANR	8857862	ExpressionStatement	rp += packed_per_ref	706:20:22617:22637	8857580	5	True				
ANR	8857863	AssignmentExpression	rp += packed_per_ref		8857580	0		+=			
ANR	8857864	Identifier	rp		8857580	0					
ANR	8857865	Identifier	packed_per_ref		8857580	1					
ANR	8857866	ElseStatement	else		8857580	0					
ANR	8857867	IfStatement	if ( ! o_is_unmarked ( pre ) )		8857580	0					
ANR	8857868	Condition	! o_is_unmarked ( pre )	709:19:22690:22708	8857580	0	True				
ANR	8857869	UnaryOperationExpression	! o_is_unmarked ( pre )		8857580	0					
ANR	8857870	UnaryOperator	!		8857580	0					
ANR	8857871	CallExpression	o_is_unmarked ( pre )		8857580	1					
ANR	8857872	Callee	o_is_unmarked		8857580	0					
ANR	8857873	Identifier	o_is_unmarked		8857580	0					
ANR	8857874	ArgumentList	pre		8857580	1					
ANR	8857875	Argument	pre		8857580	0					
ANR	8857876	Identifier	pre		8857580	0					
ANR	8857877	CompoundStatement		47:40:1574:1574	8857580	1					
ANR	8857878	ExpressionStatement	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks	710:12:22725:22800	8857580	0	True				
ANR	8857879	AssignmentExpression	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks		8857580	0		=			
ANR	8857880	CallExpression	struct_proc_clear_marks ( ( * proc ) )		8857580	0					
ANR	8857881	Callee	struct_proc_clear_marks		8857580	0					
ANR	8857882	Identifier	struct_proc_clear_marks		8857580	0					
ANR	8857883	ArgumentList	* proc		8857580	1					
ANR	8857884	Argument	* proc		8857580	0					
ANR	8857885	UnaryOperationExpression	* proc		8857580	0					
ANR	8857886	UnaryOperator	*		8857580	0					
ANR	8857887	Identifier	proc		8857580	1					
ANR	8857888	PtrMemberAccess	pre -> o_type -> clear_marks		8857580	1					
ANR	8857889	PtrMemberAccess	pre -> o_type		8857580	0					
ANR	8857890	Identifier	pre		8857580	0					
ANR	8857891	Identifier	o_type		8857580	1					
ANR	8857892	Identifier	clear_marks		8857580	1					
ANR	8857893	ExpressionStatement	root . ptype = ptr_struct_type	712:12:22814:22842	8857580	1	True				
ANR	8857894	AssignmentExpression	root . ptype = ptr_struct_type		8857580	0		=			
ANR	8857895	MemberAccess	root . ptype		8857580	0					
ANR	8857896	Identifier	root		8857580	0					
ANR	8857897	Identifier	ptype		8857580	1					
ANR	8857898	Identifier	ptr_struct_type		8857580	1					
ANR	8857899	ExpressionStatement	comp = pre + 1	713:12:22856:22870	8857580	2	True				
ANR	8857900	AssignmentExpression	comp = pre + 1		8857580	0		=			
ANR	8857901	Identifier	comp		8857580	0					
ANR	8857902	AdditiveExpression	pre + 1		8857580	1		+			
ANR	8857903	Identifier	pre		8857580	0					
ANR	8857904	PrimaryExpression	1		8857580	1					
ANR	8857905	IfStatement	if ( ! o_is_untraced ( pre ) )		8857580	3					
ANR	8857906	Condition	! o_is_untraced ( pre )	714:16:22888:22906	8857580	0	True				
ANR	8857907	UnaryOperationExpression	! o_is_untraced ( pre )		8857580	0					
ANR	8857908	UnaryOperator	!		8857580	0					
ANR	8857909	CallExpression	o_is_untraced ( pre )		8857580	1					
ANR	8857910	Callee	o_is_untraced		8857580	0					
ANR	8857911	Identifier	o_is_untraced		8857580	0					
ANR	8857912	ArgumentList	pre		8857580	1					
ANR	8857913	Argument	pre		8857580	0					
ANR	8857914	Identifier	pre		8857580	0					
ANR	8857915	ExpressionStatement	o_set_unmarked ( pre )	715:16:22925:22944	8857580	1	True				
ANR	8857916	CallExpression	o_set_unmarked ( pre )		8857580	0					
ANR	8857917	Callee	o_set_unmarked		8857580	0					
ANR	8857918	Identifier	o_set_unmarked		8857580	0					
ANR	8857919	ArgumentList	pre		8857580	1					
ANR	8857920	Argument	pre		8857580	0					
ANR	8857921	Identifier	pre		8857580	0					
ANR	8857922	IfStatement	if ( proc != 0 )		8857580	4					
ANR	8857923	Condition	proc != 0	716:16:22962:22970	8857580	0	True				
ANR	8857924	EqualityExpression	proc != 0		8857580	0		!=			
ANR	8857925	Identifier	proc		8857580	0					
ANR	8857926	PrimaryExpression	0		8857580	1					
ANR	8857927	ExpressionStatement	"( * proc ) ( mem , comp , size , pre -> o_type )"	717:16:22989:23027	8857580	1	True				
ANR	8857928	CallExpression	"( * proc ) ( mem , comp , size , pre -> o_type )"		8857580	0					
ANR	8857929	Callee	* proc		8857580	0					
ANR	8857930	UnaryOperationExpression	* proc		8857580	0					
ANR	8857931	UnaryOperator	*		8857580	0					
ANR	8857932	Identifier	proc		8857580	1					
ANR	8857933	ArgumentList	mem		8857580	1					
ANR	8857934	Argument	mem		8857580	0					
ANR	8857935	Identifier	mem		8857580	0					
ANR	8857936	Argument	comp		8857580	1					
ANR	8857937	Identifier	comp		8857580	0					
ANR	8857938	Argument	size		8857580	2					
ANR	8857939	Identifier	size		8857580	0					
ANR	8857940	Argument	pre -> o_type		8857580	3					
ANR	8857941	PtrMemberAccess	pre -> o_type		8857580	0					
ANR	8857942	Identifier	pre		8857580	0					
ANR	8857943	Identifier	o_type		8857580	1					
ANR	8857944	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	718:12:23041:23081	8857580	5	True				
ANR	8857945	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		8857580	0		|=			
ANR	8857946	Identifier	more		8857580	0					
ANR	8857947	CallExpression	"gc_trace ( & root , pstate , pmstack )"		8857580	1					
ANR	8857948	Callee	gc_trace		8857580	0					
ANR	8857949	Identifier	gc_trace		8857580	0					
ANR	8857950	ArgumentList	& root		8857580	1					
ANR	8857951	Argument	& root		8857580	0					
ANR	8857952	UnaryOperationExpression	& root		8857580	0					
ANR	8857953	UnaryOperator	&		8857580	0					
ANR	8857954	Identifier	root		8857580	1					
ANR	8857955	Argument	pstate		8857580	1					
ANR	8857956	Identifier	pstate		8857580	0					
ANR	8857957	Argument	pmstack		8857580	2					
ANR	8857958	Identifier	pmstack		8857580	0					
ANR	8857959	Statement	END_OBJECTS_SCAN	721:4:23103:23118	8857580	17	True				
ANR	8857960	ReturnStatement	return more ;	722:8:23128:23139	8857580	18	True				
ANR	8857961	Identifier	more		8857580	0					
ANR	8857962	ReturnType	static int		8857580	1					
ANR	8857963	Identifier	gc_rescan_clump		8857580	2					
ANR	8857964	ParameterList	"clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack"		8857580	3					
ANR	8857965	Parameter	clump_t * cp	662:16:21076:21087	8857580	0	True				
ANR	8857966	ParameterType	clump_t *		8857580	0					
ANR	8857967	Identifier	cp		8857580	1					
ANR	8857968	Parameter	gc_state_t * pstate	662:30:21090:21108	8857580	1	True				
ANR	8857969	ParameterType	gc_state_t *		8857580	0					
ANR	8857970	Identifier	pstate		8857580	1					
ANR	8857971	Parameter	gc_mark_stack * pmstack	662:51:21111:21133	8857580	2	True				
ANR	8857972	ParameterType	gc_mark_stack *		8857580	0					
ANR	8857973	Identifier	pmstack		8857580	1					
ANR	8857974	CFGEntryNode	ENTRY		8857580		True				
ANR	8857975	CFGExitNode	EXIT		8857580		True				
ANR	8857976	Symbol	& comp		8857580						
ANR	8857977	Symbol	sbot		8857580						
ANR	8857978	Symbol	struct_proc_clear_marks		8857580						
ANR	8857979	Symbol	r_is_packed		8857580						
ANR	8857980	Symbol	ptr_struct_type		8857580						
ANR	8857981	Symbol	cp -> cend		8857580						
ANR	8857982	Symbol	pstate		8857580						
ANR	8857983	Symbol	cp -> rescan_top		8857580						
ANR	8857984	Symbol	& root		8857580						
ANR	8857985	Symbol	* pre		8857580						
ANR	8857986	Symbol	pre -> o_type -> clear_marks		8857580						
ANR	8857987	Symbol	mem		8857580						
ANR	8857988	Symbol	o_is_untraced		8857580						
ANR	8857989	Symbol	r_has_attr		8857580						
ANR	8857990	Symbol	gcst_get_memory_ptr		8857580						
ANR	8857991	Symbol	pre -> o_type		8857580						
ANR	8857992	Symbol	r_has_pmark		8857580						
ANR	8857993	Symbol	root		8857580						
ANR	8857994	Symbol	pref		8857580						
ANR	8857995	Symbol	end		8857580						
ANR	8857996	Symbol	ptr_ref_type		8857580						
ANR	8857997	Symbol	comp		8857580						
ANR	8857998	Symbol	pre		8857580						
ANR	8857999	Symbol	proc		8857580						
ANR	8858000	Symbol	* pre -> o_type		8857580						
ANR	8858001	Symbol	root . ptype		8857580						
ANR	8858002	Symbol	more		8857580						
ANR	8858003	Symbol	packed_per_ref		8857580						
ANR	8858004	Symbol	cp -> cbase		8857580						
ANR	8858005	Symbol	cp		8857580						
ANR	8858006	Symbol	pmstack		8857580						
ANR	8858007	Symbol	* proc		8857580						
ANR	8858008	Symbol	* cp		8857580						
ANR	8858009	Symbol	stop		8857580						
ANR	8858010	Symbol	size		8857580						
ANR	8858011	Symbol	gc_trace		8857580						
ANR	8858012	Symbol	root . p		8857580						
ANR	8858013	Symbol	* * pre		8857580						
ANR	8858014	Symbol	& st_refs		8857580						
ANR	8858015	Symbol	l_mark		8857580						
ANR	8858016	Symbol	o_is_unmarked		8857580						
ANR	8858017	Symbol	cp -> rescan_bot		8857580						
ANR	8858018	Symbol	rp		8857580						
ANR	8858019	Function	gc_trace_clump	728:0:23291:24985							
ANR	8858020	FunctionDef	"gc_trace_clump (const gs_memory_t * mem , clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack)"		8858019	0					
ANR	8858021	CompoundStatement		730:0:23401:24985	8858019	0					
ANR	8858022	IdentifierDeclStatement	gs_gc_root_t root ;	731:4:23407:23424	8858019	0	True				
ANR	8858023	IdentifierDecl	root		8858019	0					
ANR	8858024	IdentifierDeclType	gs_gc_root_t		8858019	0					
ANR	8858025	Identifier	root		8858019	1					
ANR	8858026	IdentifierDeclStatement	void * comp ;	732:4:23430:23440	8858019	1	True				
ANR	8858027	IdentifierDecl	* comp		8858019	0					
ANR	8858028	IdentifierDeclType	void *		8858019	0					
ANR	8858029	Identifier	comp		8858019	1					
ANR	8858030	IdentifierDeclStatement	int more = 0 ;	733:4:23446:23458	8858019	2	True				
ANR	8858031	IdentifierDecl	more = 0		8858019	0					
ANR	8858032	IdentifierDeclType	int		8858019	0					
ANR	8858033	Identifier	more		8858019	1					
ANR	8858034	AssignmentExpression	more = 0		8858019	2		=			
ANR	8858035	Identifier	more		8858019	0					
ANR	8858036	PrimaryExpression	0		8858019	1					
ANR	8858037	IdentifierDeclStatement	int min_trace = pstate -> min_collect ;	734:4:23464:23499	8858019	3	True				
ANR	8858038	IdentifierDecl	min_trace = pstate -> min_collect		8858019	0					
ANR	8858039	IdentifierDeclType	int		8858019	0					
ANR	8858040	Identifier	min_trace		8858019	1					
ANR	8858041	AssignmentExpression	min_trace = pstate -> min_collect		8858019	2		=			
ANR	8858042	Identifier	min_trace		8858019	0					
ANR	8858043	PtrMemberAccess	pstate -> min_collect		8858019	1					
ANR	8858044	Identifier	pstate		8858019	0					
ANR	8858045	Identifier	min_collect		8858019	1					
ANR	8858046	ExpressionStatement	root . p = & comp	736:4:23506:23520	8858019	4	True				
ANR	8858047	AssignmentExpression	root . p = & comp		8858019	0		=			
ANR	8858048	MemberAccess	root . p		8858019	0					
ANR	8858049	Identifier	root		8858019	0					
ANR	8858050	Identifier	p		8858019	1					
ANR	8858051	UnaryOperationExpression	& comp		8858019	1					
ANR	8858052	UnaryOperator	&		8858019	0					
ANR	8858053	Identifier	comp		8858019	1					
ANR	8858054	ExpressionStatement	"if_debug_clump ( '6' , mem , ""[6]marking from clump"" , cp )"	737:4:23526:23579	8858019	5	True				
ANR	8858055	CallExpression	"if_debug_clump ( '6' , mem , ""[6]marking from clump"" , cp )"		8858019	0					
ANR	8858056	Callee	if_debug_clump		8858019	0					
ANR	8858057	Identifier	if_debug_clump		8858019	0					
ANR	8858058	ArgumentList	'6'		8858019	1					
ANR	8858059	Argument	'6'		8858019	0					
ANR	8858060	PrimaryExpression	'6'		8858019	0					
ANR	8858061	Argument	mem		8858019	1					
ANR	8858062	Identifier	mem		8858019	0					
ANR	8858063	Argument	"""[6]marking from clump"""		8858019	2					
ANR	8858064	PrimaryExpression	"""[6]marking from clump"""		8858019	0					
ANR	8858065	Argument	cp		8858019	3					
ANR	8858066	Identifier	cp		8858019	0					
ANR	8858067	Statement	SCAN_CLUMP_OBJECTS	738:4:23585:23602	8858019	6	True				
ANR	8858068	Statement	(	738:22:23603:23603	8858019	7	True				
ANR	8858069	Statement	cp	738:23:23604:23605	8858019	8	True				
ANR	8858070	Statement	)	738:25:23606:23606	8858019	9	True				
ANR	8858071	Statement	DO_ALL	739:8:23616:23621	8858019	10	True				
ANR	8858072	CompoundStatement		11:4:225:225	8858019	11					
ANR	8858073	ExpressionStatement	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"	741:8:23637:23740	8858019	0	True				
ANR	8858074	CallExpression	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"		8858019	0					
ANR	8858075	Callee	if_debug2m		8858019	0					
ANR	8858076	Identifier	if_debug2m		8858019	0					
ANR	8858077	ArgumentList	'7'		8858019	1					
ANR	8858078	Argument	'7'		8858019	0					
ANR	8858079	PrimaryExpression	'7'		8858019	0					
ANR	8858080	Argument	mem		8858019	1					
ANR	8858081	Identifier	mem		8858019	0					
ANR	8858082	Argument	""" [7]scanning/marking 0x%lx(%lu)\\n"""		8858019	2					
ANR	8858083	PrimaryExpression	""" [7]scanning/marking 0x%lx(%lu)\\n"""		8858019	0					
ANR	8858084	Argument	( ulong ) pre		8858019	3					
ANR	8858085	CastExpression	( ulong ) pre		8858019	0					
ANR	8858086	CastTarget	ulong		8858019	0					
ANR	8858087	Identifier	pre		8858019	1					
ANR	8858088	Argument	( ulong ) size		8858019	4					
ANR	8858089	CastExpression	( ulong ) size		8858019	0					
ANR	8858090	CastTarget	ulong		8858019	0					
ANR	8858091	Identifier	size		8858019	1					
ANR	8858092	IfStatement	if ( pre -> o_type == & st_refs )		8858019	1					
ANR	8858093	Condition	pre -> o_type == & st_refs	743:12:23754:23776	8858019	0	True				
ANR	8858094	EqualityExpression	pre -> o_type == & st_refs		8858019	0		==			
ANR	8858095	PtrMemberAccess	pre -> o_type		8858019	0					
ANR	8858096	Identifier	pre		8858019	0					
ANR	8858097	Identifier	o_type		8858019	1					
ANR	8858098	UnaryOperationExpression	& st_refs		8858019	1					
ANR	8858099	UnaryOperator	&		8858019	0					
ANR	8858100	Identifier	st_refs		8858019	1					
ANR	8858101	CompoundStatement		16:12:446:475	8858019	1					
ANR	8858102	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) ( pre + 1 ) ;	744:12:23793:23834	8858019	0	True				
ANR	8858103	IdentifierDecl	* rp = ( ref_packed * ) ( pre + 1 )		8858019	0					
ANR	8858104	IdentifierDeclType	ref_packed *		8858019	0					
ANR	8858105	Identifier	rp		8858019	1					
ANR	8858106	AssignmentExpression	* rp = ( ref_packed * ) ( pre + 1 )		8858019	2		=			
ANR	8858107	Identifier	rp		8858019	0					
ANR	8858108	CastExpression	( ref_packed * ) ( pre + 1 )		8858019	1					
ANR	8858109	CastTarget	ref_packed *		8858019	0					
ANR	8858110	AdditiveExpression	pre + 1		8858019	1		+			
ANR	8858111	Identifier	pre		8858019	0					
ANR	8858112	PrimaryExpression	1		8858019	1					
ANR	8858113	IdentifierDeclStatement	char * end = ( char * ) rp + size ;	745:12:23848:23877	8858019	1	True				
ANR	8858114	IdentifierDecl	* end = ( char * ) rp + size		8858019	0					
ANR	8858115	IdentifierDeclType	char *		8858019	0					
ANR	8858116	Identifier	end		8858019	1					
ANR	8858117	AssignmentExpression	* end = ( char * ) rp + size		8858019	2		=			
ANR	8858118	Identifier	end		8858019	0					
ANR	8858119	AdditiveExpression	( char * ) rp + size		8858019	1		+			
ANR	8858120	CastExpression	( char * ) rp		8858019	0					
ANR	8858121	CastTarget	char *		8858019	0					
ANR	8858122	Identifier	rp		8858019	1					
ANR	8858123	Identifier	size		8858019	1					
ANR	8858124	ExpressionStatement	root . ptype = ptr_ref_type	747:12:23892:23917	8858019	2	True				
ANR	8858125	AssignmentExpression	root . ptype = ptr_ref_type		8858019	0		=			
ANR	8858126	MemberAccess	root . ptype		8858019	0					
ANR	8858127	Identifier	root		8858019	0					
ANR	8858128	Identifier	ptype		8858019	1					
ANR	8858129	Identifier	ptr_ref_type		8858019	1					
ANR	8858130	WhileStatement	while ( ( char * ) rp < end )		8858019	3					
ANR	8858131	Condition	( char * ) rp < end	748:19:23938:23953	8858019	0	True				
ANR	8858132	RelationalExpression	( char * ) rp < end		8858019	0		<			
ANR	8858133	CastExpression	( char * ) rp		8858019	0					
ANR	8858134	CastTarget	char *		8858019	0					
ANR	8858135	Identifier	rp		8858019	1					
ANR	8858136	Identifier	end		8858019	1					
ANR	8858137	CompoundStatement		19:37:554:554	8858019	1					
ANR	8858138	ExpressionStatement	comp = rp	749:16:23974:23983	8858019	0	True				
ANR	8858139	AssignmentExpression	comp = rp		8858019	0		=			
ANR	8858140	Identifier	comp		8858019	0					
ANR	8858141	Identifier	rp		8858019	1					
ANR	8858142	IfStatement	if ( r_is_packed ( rp ) )		8858019	1					
ANR	8858143	Condition	r_is_packed ( rp )	750:20:24005:24019	8858019	0	True				
ANR	8858144	CallExpression	r_is_packed ( rp )		8858019	0					
ANR	8858145	Callee	r_is_packed		8858019	0					
ANR	8858146	Identifier	r_is_packed		8858019	0					
ANR	8858147	ArgumentList	rp		8858019	1					
ANR	8858148	Argument	rp		8858019	0					
ANR	8858149	Identifier	rp		8858019	0					
ANR	8858150	CompoundStatement		21:37:620:620	8858019	1					
ANR	8858151	ExpressionStatement	rp ++	751:20:24079:24083	8858019	0	True				
ANR	8858152	PostIncDecOperationExpression	rp ++		8858019	0					
ANR	8858153	Identifier	rp		8858019	0					
ANR	8858154	IncDec	++		8858019	1					
ANR	8858155	ElseStatement	else		8858019	0					
ANR	8858156	CompoundStatement		23:23:706:706	8858019	0					
ANR	8858157	Statement	ref	753:20:24130:24132	8858019	0	True				
ANR	8858158	Statement	*	753:24:24134:24134	8858019	1	True				
ANR	8858159	Statement	const	753:25:24135:24139	8858019	2	True				
ANR	8858160	ExpressionStatement	pref = ( ref * ) rp	753:31:24141:24157	8858019	3	True				
ANR	8858161	AssignmentExpression	pref = ( ref * ) rp		8858019	0		=			
ANR	8858162	Identifier	pref		8858019	0					
ANR	8858163	CastExpression	( ref * ) rp		8858019	1					
ANR	8858164	CastTarget	ref *		8858019	0					
ANR	8858165	Identifier	rp		8858019	1					
ANR	8858166	IfStatement	if ( r_space ( pref ) >= min_trace )		8858019	4					
ANR	8858167	Condition	r_space ( pref ) >= min_trace	755:24:24184:24209	8858019	0	True				
ANR	8858168	RelationalExpression	r_space ( pref ) >= min_trace		8858019	0		>=			
ANR	8858169	CallExpression	r_space ( pref )		8858019	0					
ANR	8858170	Callee	r_space		8858019	0					
ANR	8858171	Identifier	r_space		8858019	0					
ANR	8858172	ArgumentList	pref		8858019	1					
ANR	8858173	Argument	pref		8858019	0					
ANR	8858174	Identifier	pref		8858019	0					
ANR	8858175	Identifier	min_trace		8858019	1					
ANR	8858176	CompoundStatement		26:52:810:810	8858019	1					
ANR	8858177	ExpressionStatement	"r_clear_attrs ( pref , l_mark )"	756:24:24238:24265	8858019	0	True				
ANR	8858178	CallExpression	"r_clear_attrs ( pref , l_mark )"		8858019	0					
ANR	8858179	Callee	r_clear_attrs		8858019	0					
ANR	8858180	Identifier	r_clear_attrs		8858019	0					
ANR	8858181	ArgumentList	pref		8858019	1					
ANR	8858182	Argument	pref		8858019	0					
ANR	8858183	Identifier	pref		8858019	0					
ANR	8858184	Argument	l_mark		8858019	1					
ANR	8858185	Identifier	l_mark		8858019	0					
ANR	8858186	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	757:24:24291:24331	8858019	1	True				
ANR	8858187	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		8858019	0		|=			
ANR	8858188	Identifier	more		8858019	0					
ANR	8858189	CallExpression	"gc_trace ( & root , pstate , pmstack )"		8858019	1					
ANR	8858190	Callee	gc_trace		8858019	0					
ANR	8858191	Identifier	gc_trace		8858019	0					
ANR	8858192	ArgumentList	& root		8858019	1					
ANR	8858193	Argument	& root		8858019	0					
ANR	8858194	UnaryOperationExpression	& root		8858019	0					
ANR	8858195	UnaryOperator	&		8858019	0					
ANR	8858196	Identifier	root		8858019	1					
ANR	8858197	Argument	pstate		8858019	1					
ANR	8858198	Identifier	pstate		8858019	0					
ANR	8858199	Argument	pmstack		8858019	2					
ANR	8858200	Identifier	pmstack		8858019	0					
ANR	8858201	ExpressionStatement	rp += packed_per_ref	759:20:24375:24395	8858019	5	True				
ANR	8858202	AssignmentExpression	rp += packed_per_ref		8858019	0		+=			
ANR	8858203	Identifier	rp		8858019	0					
ANR	8858204	Identifier	packed_per_ref		8858019	1					
ANR	8858205	ElseStatement	else		8858019	0					
ANR	8858206	IfStatement	if ( ! o_is_unmarked ( pre ) )		8858019	0					
ANR	8858207	Condition	! o_is_unmarked ( pre )	762:19:24448:24466	8858019	0	True				
ANR	8858208	UnaryOperationExpression	! o_is_unmarked ( pre )		8858019	0					
ANR	8858209	UnaryOperator	!		8858019	0					
ANR	8858210	CallExpression	o_is_unmarked ( pre )		8858019	1					
ANR	8858211	Callee	o_is_unmarked		8858019	0					
ANR	8858212	Identifier	o_is_unmarked		8858019	0					
ANR	8858213	ArgumentList	pre		8858019	1					
ANR	8858214	Argument	pre		8858019	0					
ANR	8858215	Identifier	pre		8858019	0					
ANR	8858216	CompoundStatement		33:40:1067:1067	8858019	1					
ANR	8858217	IfStatement	if ( ! o_is_untraced ( pre ) )		8858019	0					
ANR	8858218	Condition	! o_is_untraced ( pre )	763:16:24487:24505	8858019	0	True				
ANR	8858219	UnaryOperationExpression	! o_is_untraced ( pre )		8858019	0					
ANR	8858220	UnaryOperator	!		8858019	0					
ANR	8858221	CallExpression	o_is_untraced ( pre )		8858019	1					
ANR	8858222	Callee	o_is_untraced		8858019	0					
ANR	8858223	Identifier	o_is_untraced		8858019	0					
ANR	8858224	ArgumentList	pre		8858019	1					
ANR	8858225	Argument	pre		8858019	0					
ANR	8858226	Identifier	pre		8858019	0					
ANR	8858227	ExpressionStatement	o_set_unmarked ( pre )	764:16:24524:24543	8858019	1	True				
ANR	8858228	CallExpression	o_set_unmarked ( pre )		8858019	0					
ANR	8858229	Callee	o_set_unmarked		8858019	0					
ANR	8858230	Identifier	o_set_unmarked		8858019	0					
ANR	8858231	ArgumentList	pre		8858019	1					
ANR	8858232	Argument	pre		8858019	0					
ANR	8858233	Identifier	pre		8858019	0					
ANR	8858234	IfStatement	if ( pre -> o_type != & st_free )		8858019	1					
ANR	8858235	Condition	pre -> o_type != & st_free	765:16:24561:24583	8858019	0	True				
ANR	8858236	EqualityExpression	pre -> o_type != & st_free		8858019	0		!=			
ANR	8858237	PtrMemberAccess	pre -> o_type		8858019	0					
ANR	8858238	Identifier	pre		8858019	0					
ANR	8858239	Identifier	o_type		8858019	1					
ANR	8858240	UnaryOperationExpression	& st_free		8858019	1					
ANR	8858241	UnaryOperator	&		8858019	0					
ANR	8858242	Identifier	st_free		8858019	1					
ANR	8858243	CompoundStatement		36:41:1184:1184	8858019	1					
ANR	8858244	ExpressionStatement	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks	766:16:24604:24683	8858019	0	True				
ANR	8858245	AssignmentExpression	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks		8858019	0		=			
ANR	8858246	CallExpression	struct_proc_clear_marks ( ( * proc ) )		8858019	0					
ANR	8858247	Callee	struct_proc_clear_marks		8858019	0					
ANR	8858248	Identifier	struct_proc_clear_marks		8858019	0					
ANR	8858249	ArgumentList	* proc		8858019	1					
ANR	8858250	Argument	* proc		8858019	0					
ANR	8858251	UnaryOperationExpression	* proc		8858019	0					
ANR	8858252	UnaryOperator	*		8858019	0					
ANR	8858253	Identifier	proc		8858019	1					
ANR	8858254	PtrMemberAccess	pre -> o_type -> clear_marks		8858019	1					
ANR	8858255	PtrMemberAccess	pre -> o_type		8858019	0					
ANR	8858256	Identifier	pre		8858019	0					
ANR	8858257	Identifier	o_type		8858019	1					
ANR	8858258	Identifier	clear_marks		8858019	1					
ANR	8858259	ExpressionStatement	root . ptype = ptr_struct_type	769:16:24702:24730	8858019	1	True				
ANR	8858260	AssignmentExpression	root . ptype = ptr_struct_type		8858019	0		=			
ANR	8858261	MemberAccess	root . ptype		8858019	0					
ANR	8858262	Identifier	root		8858019	0					
ANR	8858263	Identifier	ptype		8858019	1					
ANR	8858264	Identifier	ptr_struct_type		8858019	1					
ANR	8858265	ExpressionStatement	comp = pre + 1	770:16:24748:24762	8858019	2	True				
ANR	8858266	AssignmentExpression	comp = pre + 1		8858019	0		=			
ANR	8858267	Identifier	comp		8858019	0					
ANR	8858268	AdditiveExpression	pre + 1		8858019	1		+			
ANR	8858269	Identifier	pre		8858019	0					
ANR	8858270	PrimaryExpression	1		8858019	1					
ANR	8858271	IfStatement	if ( proc != 0 )		8858019	3					
ANR	8858272	Condition	proc != 0	771:20:24784:24792	8858019	0	True				
ANR	8858273	EqualityExpression	proc != 0		8858019	0		!=			
ANR	8858274	Identifier	proc		8858019	0					
ANR	8858275	PrimaryExpression	0		8858019	1					
ANR	8858276	ExpressionStatement	"( * proc ) ( mem , comp , size , pre -> o_type )"	772:20:24815:24853	8858019	1	True				
ANR	8858277	CallExpression	"( * proc ) ( mem , comp , size , pre -> o_type )"		8858019	0					
ANR	8858278	Callee	* proc		8858019	0					
ANR	8858279	UnaryOperationExpression	* proc		8858019	0					
ANR	8858280	UnaryOperator	*		8858019	0					
ANR	8858281	Identifier	proc		8858019	1					
ANR	8858282	ArgumentList	mem		8858019	1					
ANR	8858283	Argument	mem		8858019	0					
ANR	8858284	Identifier	mem		8858019	0					
ANR	8858285	Argument	comp		8858019	1					
ANR	8858286	Identifier	comp		8858019	0					
ANR	8858287	Argument	size		8858019	2					
ANR	8858288	Identifier	size		8858019	0					
ANR	8858289	Argument	pre -> o_type		8858019	3					
ANR	8858290	PtrMemberAccess	pre -> o_type		8858019	0					
ANR	8858291	Identifier	pre		8858019	0					
ANR	8858292	Identifier	o_type		8858019	1					
ANR	8858293	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	773:16:24871:24911	8858019	4	True				
ANR	8858294	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		8858019	0		|=			
ANR	8858295	Identifier	more		8858019	0					
ANR	8858296	CallExpression	"gc_trace ( & root , pstate , pmstack )"		8858019	1					
ANR	8858297	Callee	gc_trace		8858019	0					
ANR	8858298	Identifier	gc_trace		8858019	0					
ANR	8858299	ArgumentList	& root		8858019	1					
ANR	8858300	Argument	& root		8858019	0					
ANR	8858301	UnaryOperationExpression	& root		8858019	0					
ANR	8858302	UnaryOperator	&		8858019	0					
ANR	8858303	Identifier	root		8858019	1					
ANR	8858304	Argument	pstate		8858019	1					
ANR	8858305	Identifier	pstate		8858019	0					
ANR	8858306	Argument	pmstack		8858019	2					
ANR	8858307	Identifier	pmstack		8858019	0					
ANR	8858308	Statement	END_OBJECTS_SCAN	777:4:24947:24962	8858019	12	True				
ANR	8858309	ReturnStatement	return more ;	778:8:24972:24983	8858019	13	True				
ANR	8858310	Identifier	more		8858019	0					
ANR	8858311	ReturnType	static int		8858019	1					
ANR	8858312	Identifier	gc_trace_clump		8858019	2					
ANR	8858313	ParameterList	"const gs_memory_t * mem , clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack"		8858019	3					
ANR	8858314	Parameter	const gs_memory_t * mem	729:15:23317:23338	8858019	0	True				
ANR	8858315	ParameterType	const gs_memory_t *		8858019	0					
ANR	8858316	Identifier	mem		8858019	1					
ANR	8858317	Parameter	clump_t * cp	729:39:23341:23352	8858019	1	True				
ANR	8858318	ParameterType	clump_t *		8858019	0					
ANR	8858319	Identifier	cp		8858019	1					
ANR	8858320	Parameter	gc_state_t * pstate	729:53:23355:23373	8858019	2	True				
ANR	8858321	ParameterType	gc_state_t *		8858019	0					
ANR	8858322	Identifier	pstate		8858019	1					
ANR	8858323	Parameter	gc_mark_stack * pmstack	729:74:23376:23398	8858019	3	True				
ANR	8858324	ParameterType	gc_mark_stack *		8858019	0					
ANR	8858325	Identifier	pmstack		8858019	1					
ANR	8858326	CFGEntryNode	ENTRY		8858019		True				
ANR	8858327	CFGExitNode	EXIT		8858019		True				
ANR	8858328	Symbol	& comp		8858019						
ANR	8858329	Symbol	struct_proc_clear_marks		8858019						
ANR	8858330	Symbol	r_is_packed		8858019						
ANR	8858331	Symbol	ptr_struct_type		8858019						
ANR	8858332	Symbol	& st_free		8858019						
ANR	8858333	Symbol	pstate		8858019						
ANR	8858334	Symbol	& root		8858019						
ANR	8858335	Symbol	* pre		8858019						
ANR	8858336	Symbol	pre -> o_type -> clear_marks		8858019						
ANR	8858337	Symbol	r_space		8858019						
ANR	8858338	Symbol	mem		8858019						
ANR	8858339	Symbol	o_is_untraced		8858019						
ANR	8858340	Symbol	pre -> o_type		8858019						
ANR	8858341	Symbol	root		8858019						
ANR	8858342	Symbol	pref		8858019						
ANR	8858343	Symbol	end		8858019						
ANR	8858344	Symbol	ptr_ref_type		8858019						
ANR	8858345	Symbol	comp		8858019						
ANR	8858346	Symbol	pre		8858019						
ANR	8858347	Symbol	proc		8858019						
ANR	8858348	Symbol	* pre -> o_type		8858019						
ANR	8858349	Symbol	root . ptype		8858019						
ANR	8858350	Symbol	more		8858019						
ANR	8858351	Symbol	packed_per_ref		8858019						
ANR	8858352	Symbol	pstate -> min_collect		8858019						
ANR	8858353	Symbol	cp		8858019						
ANR	8858354	Symbol	pmstack		8858019						
ANR	8858355	Symbol	* proc		8858019						
ANR	8858356	Symbol	size		8858019						
ANR	8858357	Symbol	gc_trace		8858019						
ANR	8858358	Symbol	* pstate		8858019						
ANR	8858359	Symbol	root . p		8858019						
ANR	8858360	Symbol	* * pre		8858019						
ANR	8858361	Symbol	min_trace		8858019						
ANR	8858362	Symbol	& st_refs		8858019						
ANR	8858363	Symbol	l_mark		8858019						
ANR	8858364	Symbol	o_is_unmarked		8858019						
ANR	8858365	Symbol	rp		8858019						
ANR	8858366	DeclStmt									
ANR	8858367	Decl							int	"int ( gc_mark_stack * , gc_state_t * )"	gc_extend_stack
ANR	8858368	Function	gc_trace	786:0:25265:33940							
ANR	8858369	FunctionDef	"gc_trace (gs_gc_root_t * rp , gc_state_t * pstate , gc_mark_stack * pmstack)"		8858368	0					
ANR	8858370	CompoundStatement		788:0:25350:33940	8858368	0					
ANR	8858371	IdentifierDeclStatement	int min_trace = pstate -> min_collect ;	789:4:25356:25391	8858368	0	True				
ANR	8858372	IdentifierDecl	min_trace = pstate -> min_collect		8858368	0					
ANR	8858373	IdentifierDeclType	int		8858368	0					
ANR	8858374	Identifier	min_trace		8858368	1					
ANR	8858375	AssignmentExpression	min_trace = pstate -> min_collect		8858368	2		=			
ANR	8858376	Identifier	min_trace		8858368	0					
ANR	8858377	PtrMemberAccess	pstate -> min_collect		8858368	1					
ANR	8858378	Identifier	pstate		8858368	0					
ANR	8858379	Identifier	min_collect		8858368	1					
ANR	8858380	IdentifierDeclStatement	gc_mark_stack * pms = pmstack ;	790:4:25397:25425	8858368	1	True				
ANR	8858381	IdentifierDecl	* pms = pmstack		8858368	0					
ANR	8858382	IdentifierDeclType	gc_mark_stack *		8858368	0					
ANR	8858383	Identifier	pms		8858368	1					
ANR	8858384	AssignmentExpression	* pms = pmstack		8858368	2		=			
ANR	8858385	Identifier	pmstack		8858368	0					
ANR	8858386	Identifier	pmstack		8858368	1					
ANR	8858387	IdentifierDeclStatement	ms_entry * sp = pms -> entries + 1 ;	791:4:25431:25462	8858368	2	True				
ANR	8858388	IdentifierDecl	* sp = pms -> entries + 1		8858368	0					
ANR	8858389	IdentifierDeclType	ms_entry *		8858368	0					
ANR	8858390	Identifier	sp		8858368	1					
ANR	8858391	AssignmentExpression	* sp = pms -> entries + 1		8858368	2		=			
ANR	8858392	Identifier	sp		8858368	0					
ANR	8858393	AdditiveExpression	pms -> entries + 1		8858368	1		+			
ANR	8858394	PtrMemberAccess	pms -> entries		8858368	0					
ANR	8858395	Identifier	pms		8858368	0					
ANR	8858396	Identifier	entries		8858368	1					
ANR	8858397	PrimaryExpression	1		8858368	1					
ANR	8858398	IdentifierDeclStatement	ms_entry * stop = sp + pms -> count - 2 ;	795:4:25575:25611	8858368	3	True				
ANR	8858399	IdentifierDecl	* stop = sp + pms -> count - 2		8858368	0					
ANR	8858400	IdentifierDeclType	ms_entry *		8858368	0					
ANR	8858401	Identifier	stop		8858368	1					
ANR	8858402	AssignmentExpression	* stop = sp + pms -> count - 2		8858368	2		=			
ANR	8858403	Identifier	stop		8858368	0					
ANR	8858404	AdditiveExpression	sp + pms -> count - 2		8858368	1		+			
ANR	8858405	Identifier	sp		8858368	0					
ANR	8858406	AdditiveExpression	pms -> count - 2		8858368	1		-			
ANR	8858407	PtrMemberAccess	pms -> count		8858368	0					
ANR	8858408	Identifier	pms		8858368	0					
ANR	8858409	Identifier	count		8858368	1					
ANR	8858410	PrimaryExpression	2		8858368	1					
ANR	8858411	Statement	int	796:4:25617:25619	8858368	4	True				
ANR	8858412	Statement	new	796:8:25621:25623	8858368	5	True				
ANR	8858413	Statement	=	796:12:25625:25625	8858368	6	True				
ANR	8858414	ExpressionStatement	0	796:14:25627:25628	8858368	7	True				
ANR	8858415	PrimaryExpression	0		8858368	0					
ANR	8858416	IdentifierDeclStatement	enum_ptr_t nep ;	797:4:25634:25648	8858368	8	True				
ANR	8858417	IdentifierDecl	nep		8858368	0					
ANR	8858418	IdentifierDeclType	enum_ptr_t		8858368	0					
ANR	8858419	Identifier	nep		8858368	1					
ANR	8858420	IdentifierDeclStatement	void * nptr ;	798:4:25654:25664	8858368	9	True				
ANR	8858421	IdentifierDecl	* nptr		8858368	0					
ANR	8858422	IdentifierDeclType	void *		8858368	0					
ANR	8858423	Identifier	nptr		8858368	1					
ANR	8858424	IdentifierDeclStatement	name_table * nt = pstate -> ntable ;	799:4:25670:25701	8858368	10	True				
ANR	8858425	IdentifierDecl	* nt = pstate -> ntable		8858368	0					
ANR	8858426	IdentifierDeclType	name_table *		8858368	0					
ANR	8858427	Identifier	nt		8858368	1					
ANR	8858428	AssignmentExpression	* nt = pstate -> ntable		8858368	2		=			
ANR	8858429	Identifier	nt		8858368	0					
ANR	8858430	PtrMemberAccess	pstate -> ntable		8858368	1					
ANR	8858431	Identifier	pstate		8858368	0					
ANR	8858432	Identifier	ntable		8858368	1					
ANR	8858433	Statement	define	801:1:25705:25710	8858368	11	True				
ANR	8858434	Statement	mark_name	801:8:25712:25720	8858368	12	True				
ANR	8858435	Statement	(	801:17:25721:25721	8858368	13	True				
ANR	8858436	Statement	nidx	801:18:25722:25725	8858368	14	True				
ANR	8858437	Statement	)	801:22:25726:25726	8858368	15	True				
ANR	8858438	Statement	BEGIN	802:2:25731:25735	8858368	16	True				
ANR	8858439	IfStatement	"if ( names_mark_index ( nt , nidx ) )"		8858368	17					
ANR	8858440	Condition	"names_mark_index ( nt , nidx )"	803:8:25746:25771	8858368	0	True				
ANR	8858441	CallExpression	"names_mark_index ( nt , nidx )"		8858368	0					
ANR	8858442	Callee	names_mark_index		8858368	0					
ANR	8858443	Identifier	names_mark_index		8858368	0					
ANR	8858444	ArgumentList	nt		8858368	1					
ANR	8858445	Argument	nt		8858368	0					
ANR	8858446	Identifier	nt		8858368	0					
ANR	8858447	Argument	nidx		8858368	1					
ANR	8858448	Identifier	nidx		8858368	0					
ANR	8858449	CompoundStatement		16:36:423:423	8858368	1					
ANR	8858450	Statement	new	804:8:25785:25787	8858368	0	True				
ANR	8858451	Statement	|=	804:12:25789:25790	8858368	1	True				
ANR	8858452	ExpressionStatement	1	804:15:25792:25793	8858368	2	True				
ANR	8858453	PrimaryExpression	1		8858368	0					
ANR	8858454	ExpressionStatement	"if_debug2m ( '8' , gcst_get_memory_ptr ( pstate ) , ""  [8]marked name 0x%lx(%u)\\n"" , ( ulong ) names_index_ptr ( nt , nidx ) , nidx )"	805:8:25804:25939	8858368	3	True				
ANR	8858455	CallExpression	"if_debug2m ( '8' , gcst_get_memory_ptr ( pstate ) , ""  [8]marked name 0x%lx(%u)\\n"" , ( ulong ) names_index_ptr ( nt , nidx ) , nidx )"		8858368	0					
ANR	8858456	Callee	if_debug2m		8858368	0					
ANR	8858457	Identifier	if_debug2m		8858368	0					
ANR	8858458	ArgumentList	'8'		8858368	1					
ANR	8858459	Argument	'8'		8858368	0					
ANR	8858460	PrimaryExpression	'8'		8858368	0					
ANR	8858461	Argument	gcst_get_memory_ptr ( pstate )		8858368	1					
ANR	8858462	CallExpression	gcst_get_memory_ptr ( pstate )		8858368	0					
ANR	8858463	Callee	gcst_get_memory_ptr		8858368	0					
ANR	8858464	Identifier	gcst_get_memory_ptr		8858368	0					
ANR	8858465	ArgumentList	pstate		8858368	1					
ANR	8858466	Argument	pstate		8858368	0					
ANR	8858467	Identifier	pstate		8858368	0					
ANR	8858468	Argument	"""  [8]marked name 0x%lx(%u)\\n"""		8858368	2					
ANR	8858469	PrimaryExpression	"""  [8]marked name 0x%lx(%u)\\n"""		8858368	0					
ANR	8858470	Argument	"( ulong ) names_index_ptr ( nt , nidx )"		8858368	3					
ANR	8858471	CastExpression	"( ulong ) names_index_ptr ( nt , nidx )"		8858368	0					
ANR	8858472	CastTarget	ulong		8858368	0					
ANR	8858473	CallExpression	"names_index_ptr ( nt , nidx )"		8858368	1					
ANR	8858474	Callee	names_index_ptr		8858368	0					
ANR	8858475	Identifier	names_index_ptr		8858368	0					
ANR	8858476	ArgumentList	nt		8858368	1					
ANR	8858477	Argument	nt		8858368	0					
ANR	8858478	Identifier	nt		8858368	0					
ANR	8858479	Argument	nidx		8858368	1					
ANR	8858480	Identifier	nidx		8858368	0					
ANR	8858481	Argument	nidx		8858368	4					
ANR	8858482	Identifier	nidx		8858368	0					
ANR	8858483	IdentifierDeclStatement	END nptr = * rp -> p ;	808:2:25951:25973	8858368	18	True				
ANR	8858484	IdentifierDecl	nptr = * rp -> p		8858368	0					
ANR	8858485	IdentifierDeclType	END		8858368	0					
ANR	8858486	Identifier	nptr		8858368	1					
ANR	8858487	AssignmentExpression	nptr = * rp -> p		8858368	2		=			
ANR	8858488	Identifier	nptr		8858368	0					
ANR	8858489	UnaryOperationExpression	* rp -> p		8858368	1					
ANR	8858490	UnaryOperator	*		8858368	0					
ANR	8858491	PtrMemberAccess	rp -> p		8858368	1					
ANR	8858492	Identifier	rp		8858368	0					
ANR	8858493	Identifier	p		8858368	1					
ANR	8858494	IfStatement	if ( nptr == 0 )		8858368	19					
ANR	8858495	Condition	nptr == 0	811:8:25983:25991	8858368	0	True				
ANR	8858496	EqualityExpression	nptr == 0		8858368	0		==			
ANR	8858497	Identifier	nptr		8858368	0					
ANR	8858498	PrimaryExpression	0		8858368	1					
ANR	8858499	ReturnStatement	return 0 ;	812:8:26002:26010	8858368	1	True				
ANR	8858500	PrimaryExpression	0		8858368	0					
ANR	8858501	ExpressionStatement	sp -> ptr = nptr	815:4:26048:26062	8858368	20	True				
ANR	8858502	AssignmentExpression	sp -> ptr = nptr		8858368	0		=			
ANR	8858503	PtrMemberAccess	sp -> ptr		8858368	0					
ANR	8858504	Identifier	sp		8858368	0					
ANR	8858505	Identifier	ptr		8858368	1					
ANR	8858506	Identifier	nptr		8858368	1					
ANR	8858507	IfStatement	if ( rp -> ptype == ptr_ref_type )		8858368	21					
ANR	8858508	Condition	rp -> ptype == ptr_ref_type	816:8:26072:26096	8858368	0	True				
ANR	8858509	EqualityExpression	rp -> ptype == ptr_ref_type		8858368	0		==			
ANR	8858510	PtrMemberAccess	rp -> ptype		8858368	0					
ANR	8858511	Identifier	rp		8858368	0					
ANR	8858512	Identifier	ptype		8858368	1					
ANR	8858513	Identifier	ptr_ref_type		8858368	1					
ANR	8858514	ExpressionStatement	"sp -> index = 1 , sp -> is_refs = true"	817:8:26107:26140	8858368	1	True				
ANR	8858515	Expression	"sp -> index = 1 , sp -> is_refs = true"		8858368	0					
ANR	8858516	AssignmentExpression	sp -> index = 1		8858368	0		=			
ANR	8858517	PtrMemberAccess	sp -> index		8858368	0					
ANR	8858518	Identifier	sp		8858368	0					
ANR	8858519	Identifier	index		8858368	1					
ANR	8858520	PrimaryExpression	1		8858368	1					
ANR	8858521	AssignmentExpression	sp -> is_refs = true		8858368	1		=			
ANR	8858522	PtrMemberAccess	sp -> is_refs		8858368	0					
ANR	8858523	Identifier	sp		8858368	0					
ANR	8858524	Identifier	is_refs		8858368	1					
ANR	8858525	Identifier	true		8858368	1					
ANR	8858526	ElseStatement	else		8858368	0					
ANR	8858527	CompoundStatement		31:9:800:800	8858368	0					
ANR	8858528	ExpressionStatement	"sp -> index = 0 , sp -> is_refs = false"	819:8:26161:26195	8858368	0	True				
ANR	8858529	Expression	"sp -> index = 0 , sp -> is_refs = false"		8858368	0					
ANR	8858530	AssignmentExpression	sp -> index = 0		8858368	0		=			
ANR	8858531	PtrMemberAccess	sp -> index		8858368	0					
ANR	8858532	Identifier	sp		8858368	0					
ANR	8858533	Identifier	index		8858368	1					
ANR	8858534	PrimaryExpression	0		8858368	1					
ANR	8858535	AssignmentExpression	sp -> is_refs = false		8858368	1		=			
ANR	8858536	PtrMemberAccess	sp -> is_refs		8858368	0					
ANR	8858537	Identifier	sp		8858368	0					
ANR	8858538	Identifier	is_refs		8858368	1					
ANR	8858539	Identifier	false		8858368	1					
ANR	8858540	ExpressionStatement	nep . ptr = nptr	820:8:26205:26219	8858368	1	True				
ANR	8858541	AssignmentExpression	nep . ptr = nptr		8858368	0		=			
ANR	8858542	MemberAccess	nep . ptr		8858368	0					
ANR	8858543	Identifier	nep		8858368	0					
ANR	8858544	Identifier	ptr		8858368	1					
ANR	8858545	Identifier	nptr		8858368	1					
ANR	8858546	IfStatement	"if ( ( * rp -> ptype -> mark ) ( & nep , pstate ) )"		8858368	2					
ANR	8858547	Condition	"( * rp -> ptype -> mark ) ( & nep , pstate )"	821:12:26233:26265	8858368	0	True				
ANR	8858548	CallExpression	"( * rp -> ptype -> mark ) ( & nep , pstate )"		8858368	0					
ANR	8858549	Callee	* rp -> ptype -> mark		8858368	0					
ANR	8858550	UnaryOperationExpression	* rp -> ptype -> mark		8858368	0					
ANR	8858551	UnaryOperator	*		8858368	0					
ANR	8858552	PtrMemberAccess	rp -> ptype -> mark		8858368	1					
ANR	8858553	PtrMemberAccess	rp -> ptype		8858368	0					
ANR	8858554	Identifier	rp		8858368	0					
ANR	8858555	Identifier	ptype		8858368	1					
ANR	8858556	Identifier	mark		8858368	1					
ANR	8858557	ArgumentList	& nep		8858368	1					
ANR	8858558	Argument	& nep		8858368	0					
ANR	8858559	UnaryOperationExpression	& nep		8858368	0					
ANR	8858560	UnaryOperator	&		8858368	0					
ANR	8858561	Identifier	nep		8858368	1					
ANR	8858562	Argument	pstate		8858368	1					
ANR	8858563	Identifier	pstate		8858368	0					
ANR	8858564	Statement	new	822:12:26280:26282	8858368	1	True				
ANR	8858565	Statement	|=	822:16:26284:26285	8858368	3	True				
ANR	8858566	ExpressionStatement	1	822:19:26287:26288	8858368	4	True				
ANR	8858567	PrimaryExpression	1		8858368	0					
ANR	8858568	ForStatement	for ( ; ; )		8858368	22					
ANR	8858569	CompoundStatement		38:8:968:985	8858368	0					
ANR	8858570	IdentifierDeclStatement	gs_ptr_type_t ptp ;	825:8:26319:26336	8858368	0	True				
ANR	8858571	IdentifierDecl	ptp		8858368	0					
ANR	8858572	IdentifierDeclType	gs_ptr_type_t		8858368	0					
ANR	8858573	Identifier	ptp		8858368	1					
ANR	8858574	IfStatement	if ( sp -> is_refs )		8858368	1					
ANR	8858575	Condition	sp -> is_refs	831:12:26488:26498	8858368	0	True				
ANR	8858576	PtrMemberAccess	sp -> is_refs		8858368	0					
ANR	8858577	Identifier	sp		8858368	0					
ANR	8858578	Identifier	is_refs		8858368	1					
ANR	8858579	GotoStatement	goto do_refs ;	832:12:26513:26525	8858368	1	True				
ANR	8858580	Identifier	do_refs		8858368	0					
ANR	8858581	Label	do_struct :	836:6:26593:26602	8858368	2	True				
ANR	8858582	Identifier	do_struct		8858368	0					
ANR	8858583	CompoundStatement		51:12:1275:1302	8858368	3					
ANR	8858584	IdentifierDeclStatement	obj_header_t * ptr = sp -> ptr ;	838:12:26626:26653	8858368	0	True				
ANR	8858585	IdentifierDecl	* ptr = sp -> ptr		8858368	0					
ANR	8858586	IdentifierDeclType	obj_header_t *		8858368	0					
ANR	8858587	Identifier	ptr		8858368	1					
ANR	8858588	AssignmentExpression	* ptr = sp -> ptr		8858368	2		=			
ANR	8858589	Identifier	ptr		8858368	0					
ANR	8858590	PtrMemberAccess	sp -> ptr		8858368	1					
ANR	8858591	Identifier	sp		8858368	0					
ANR	8858592	Identifier	ptr		8858368	1					
ANR	8858593	ExpressionStatement	struct_proc_enum_ptrs ( ( * mproc ) )	840:12:26668:26699	8858368	1	True				
ANR	8858594	CallExpression	struct_proc_enum_ptrs ( ( * mproc ) )		8858368	0					
ANR	8858595	Callee	struct_proc_enum_ptrs		8858368	0					
ANR	8858596	Identifier	struct_proc_enum_ptrs		8858368	0					
ANR	8858597	ArgumentList	* mproc		8858368	1					
ANR	8858598	Argument	* mproc		8858368	0					
ANR	8858599	UnaryOperationExpression	* mproc		8858368	0					
ANR	8858600	UnaryOperator	*		8858368	0					
ANR	8858601	Identifier	mproc		8858368	1					
ANR	8858602	IfStatement	if ( ptr == 0 )		8858368	2					
ANR	8858603	Condition	ptr == 0	842:16:26718:26725	8858368	0	True				
ANR	8858604	EqualityExpression	ptr == 0		8858368	0		==			
ANR	8858605	Identifier	ptr		8858368	0					
ANR	8858606	PrimaryExpression	0		8858368	1					
ANR	8858607	CompoundStatement		55:26:1377:1377	8858368	1					
ANR	8858608	ExpressionStatement	pms = pms -> prev	843:16:26797:26812	8858368	0	True				
ANR	8858609	AssignmentExpression	pms = pms -> prev		8858368	0		=			
ANR	8858610	Identifier	pms		8858368	0					
ANR	8858611	PtrMemberAccess	pms -> prev		8858368	1					
ANR	8858612	Identifier	pms		8858368	0					
ANR	8858613	Identifier	prev		8858368	1					
ANR	8858614	IfStatement	if ( pms == 0 )		8858368	1					
ANR	8858615	Condition	pms == 0	844:20:26834:26841	8858368	0	True				
ANR	8858616	EqualityExpression	pms == 0		8858368	0		==			
ANR	8858617	Identifier	pms		8858368	0					
ANR	8858618	PrimaryExpression	0		8858368	1					
ANR	8858619	BreakStatement	break ;	845:20:26864:26869	8858368	1	True				
ANR	8858620	ExpressionStatement	stop = pms -> entries + pms -> count - 1	846:16:26902:26938	8858368	2	True				
ANR	8858621	AssignmentExpression	stop = pms -> entries + pms -> count - 1		8858368	0		=			
ANR	8858622	Identifier	stop		8858368	0					
ANR	8858623	AdditiveExpression	pms -> entries + pms -> count - 1		8858368	1		+			
ANR	8858624	PtrMemberAccess	pms -> entries		8858368	0					
ANR	8858625	Identifier	pms		8858368	0					
ANR	8858626	Identifier	entries		8858368	1					
ANR	8858627	AdditiveExpression	pms -> count - 1		8858368	1		-			
ANR	8858628	PtrMemberAccess	pms -> count		8858368	0					
ANR	8858629	Identifier	pms		8858368	0					
ANR	8858630	Identifier	count		8858368	1					
ANR	8858631	PrimaryExpression	1		8858368	1					
ANR	8858632	ExpressionStatement	sp = stop	847:16:26956:26965	8858368	3	True				
ANR	8858633	AssignmentExpression	sp = stop		8858368	0		=			
ANR	8858634	Identifier	sp		8858368	0					
ANR	8858635	Identifier	stop		8858368	1					
ANR	8858636	ContinueStatement	continue ;	848:16:26983:26991	8858368	4	True				
ANR	8858637	ExpressionStatement	"debug_check_object ( ptr - 1 , NULL , NULL )"	850:12:27019:27058	8858368	3	True				
ANR	8858638	CallExpression	"debug_check_object ( ptr - 1 , NULL , NULL )"		8858368	0					
ANR	8858639	Callee	debug_check_object		8858368	0					
ANR	8858640	Identifier	debug_check_object		8858368	0					
ANR	8858641	ArgumentList	ptr - 1		8858368	1					
ANR	8858642	Argument	ptr - 1		8858368	0					
ANR	8858643	AdditiveExpression	ptr - 1		8858368	0		-			
ANR	8858644	Identifier	ptr		8858368	0					
ANR	8858645	PrimaryExpression	1		8858368	1					
ANR	8858646	Argument	NULL		8858368	1					
ANR	8858647	Identifier	NULL		8858368	0					
ANR	8858648	Argument	NULL		8858368	2					
ANR	8858649	Identifier	NULL		8858368	0					
ANR	8858650	Label	ts :	851:10:27070:27072	8858368	4	True				
ANR	8858651	Identifier	ts		8858368	0					
ANR	8858652	ExpressionStatement	"if_debug4m ( '7' , pstate -> heap , "" [7]%smarking %s 0x%lx[%u]"" , depth_dots ( sp , pms ) , struct_type_name_string ( ptr [ - 1 ] . o_type ) , ( ulong ) ptr , sp -> index )"	851:13:27073:27290	8858368	5	True				
ANR	8858653	CallExpression	"if_debug4m ( '7' , pstate -> heap , "" [7]%smarking %s 0x%lx[%u]"" , depth_dots ( sp , pms ) , struct_type_name_string ( ptr [ - 1 ] . o_type ) , ( ulong ) ptr , sp -> index )"		8858368	0					
ANR	8858654	Callee	if_debug4m		8858368	0					
ANR	8858655	Identifier	if_debug4m		8858368	0					
ANR	8858656	ArgumentList	'7'		8858368	1					
ANR	8858657	Argument	'7'		8858368	0					
ANR	8858658	PrimaryExpression	'7'		8858368	0					
ANR	8858659	Argument	pstate -> heap		8858368	1					
ANR	8858660	PtrMemberAccess	pstate -> heap		8858368	0					
ANR	8858661	Identifier	pstate		8858368	0					
ANR	8858662	Identifier	heap		8858368	1					
ANR	8858663	Argument	""" [7]%smarking %s 0x%lx[%u]"""		8858368	2					
ANR	8858664	PrimaryExpression	""" [7]%smarking %s 0x%lx[%u]"""		8858368	0					
ANR	8858665	Argument	"depth_dots ( sp , pms )"		8858368	3					
ANR	8858666	CallExpression	"depth_dots ( sp , pms )"		8858368	0					
ANR	8858667	Callee	depth_dots		8858368	0					
ANR	8858668	Identifier	depth_dots		8858368	0					
ANR	8858669	ArgumentList	sp		8858368	1					
ANR	8858670	Argument	sp		8858368	0					
ANR	8858671	Identifier	sp		8858368	0					
ANR	8858672	Argument	pms		8858368	1					
ANR	8858673	Identifier	pms		8858368	0					
ANR	8858674	Argument	struct_type_name_string ( ptr [ - 1 ] . o_type )		8858368	4					
ANR	8858675	CallExpression	struct_type_name_string ( ptr [ - 1 ] . o_type )		8858368	0					
ANR	8858676	Callee	struct_type_name_string		8858368	0					
ANR	8858677	Identifier	struct_type_name_string		8858368	0					
ANR	8858678	ArgumentList	ptr [ - 1 ] . o_type		8858368	1					
ANR	8858679	Argument	ptr [ - 1 ] . o_type		8858368	0					
ANR	8858680	MemberAccess	ptr [ - 1 ] . o_type		8858368	0					
ANR	8858681	ArrayIndexing	ptr [ - 1 ]		8858368	0					
ANR	8858682	Identifier	ptr		8858368	0					
ANR	8858683	UnaryOperationExpression	- 1		8858368	1					
ANR	8858684	UnaryOperator	-		8858368	0					
ANR	8858685	PrimaryExpression	1		8858368	1					
ANR	8858686	Identifier	o_type		8858368	1					
ANR	8858687	Argument	( ulong ) ptr		8858368	5					
ANR	8858688	CastExpression	( ulong ) ptr		8858368	0					
ANR	8858689	CastTarget	ulong		8858368	0					
ANR	8858690	Identifier	ptr		8858368	1					
ANR	8858691	Argument	sp -> index		8858368	6					
ANR	8858692	PtrMemberAccess	sp -> index		8858368	0					
ANR	8858693	Identifier	sp		8858368	0					
ANR	8858694	Identifier	index		8858368	1					
ANR	8858695	ExpressionStatement	mproc = ptr [ - 1 ] . o_type -> enum_ptrs	855:12:27304:27337	8858368	6	True				
ANR	8858696	AssignmentExpression	mproc = ptr [ - 1 ] . o_type -> enum_ptrs		8858368	0		=			
ANR	8858697	Identifier	mproc		8858368	0					
ANR	8858698	PtrMemberAccess	ptr [ - 1 ] . o_type -> enum_ptrs		8858368	1					
ANR	8858699	MemberAccess	ptr [ - 1 ] . o_type		8858368	0					
ANR	8858700	ArrayIndexing	ptr [ - 1 ]		8858368	0					
ANR	8858701	Identifier	ptr		8858368	0					
ANR	8858702	UnaryOperationExpression	- 1		8858368	1					
ANR	8858703	UnaryOperator	-		8858368	0					
ANR	8858704	PrimaryExpression	1		8858368	1					
ANR	8858705	Identifier	o_type		8858368	1					
ANR	8858706	Identifier	enum_ptrs		8858368	1					
ANR	8858707	IfStatement	"if ( mproc == gs_no_struct_enum_ptrs || ( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0 )"		8858368	7					
ANR	8858708	Condition	"mproc == gs_no_struct_enum_ptrs || ( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0"	856:16:27355:27569	8858368	0	True				
ANR	8858709	OrExpression	"mproc == gs_no_struct_enum_ptrs || ( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0"		8858368	0		||			
ANR	8858710	EqualityExpression	mproc == gs_no_struct_enum_ptrs		8858368	0		==			
ANR	8858711	Identifier	mproc		8858368	0					
ANR	8858712	Identifier	gs_no_struct_enum_ptrs		8858368	1					
ANR	8858713	EqualityExpression	"( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0"		8858368	1		==			
ANR	8858714	AssignmentExpression	"ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate )"		8858368	0		=			
ANR	8858715	Identifier	ptp		8858368	0					
ANR	8858716	CallExpression	"( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate )"		8858368	1					
ANR	8858717	Callee	* mproc		8858368	0					
ANR	8858718	UnaryOperationExpression	* mproc		8858368	0					
ANR	8858719	UnaryOperator	*		8858368	0					
ANR	8858720	Identifier	mproc		8858368	1					
ANR	8858721	ArgumentList	gcst_get_memory_ptr ( pstate )		8858368	1					
ANR	8858722	Argument	gcst_get_memory_ptr ( pstate )		8858368	0					
ANR	8858723	CallExpression	gcst_get_memory_ptr ( pstate )		8858368	0					
ANR	8858724	Callee	gcst_get_memory_ptr		8858368	0					
ANR	8858725	Identifier	gcst_get_memory_ptr		8858368	0					
ANR	8858726	ArgumentList	pstate		8858368	1					
ANR	8858727	Argument	pstate		8858368	0					
ANR	8858728	Identifier	pstate		8858368	0					
ANR	8858729	Argument	ptr		8858368	1					
ANR	8858730	Identifier	ptr		8858368	0					
ANR	8858731	Argument	pre_obj_contents_size ( ptr - 1 )		8858368	2					
ANR	8858732	CallExpression	pre_obj_contents_size ( ptr - 1 )		8858368	0					
ANR	8858733	Callee	pre_obj_contents_size		8858368	0					
ANR	8858734	Identifier	pre_obj_contents_size		8858368	0					
ANR	8858735	ArgumentList	ptr - 1		8858368	1					
ANR	8858736	Argument	ptr - 1		8858368	0					
ANR	8858737	AdditiveExpression	ptr - 1		8858368	0		-			
ANR	8858738	Identifier	ptr		8858368	0					
ANR	8858739	PrimaryExpression	1		8858368	1					
ANR	8858740	Argument	sp -> index		8858368	3					
ANR	8858741	PtrMemberAccess	sp -> index		8858368	0					
ANR	8858742	Identifier	sp		8858368	0					
ANR	8858743	Identifier	index		8858368	1					
ANR	8858744	Argument	& nep		8858368	4					
ANR	8858745	UnaryOperationExpression	& nep		8858368	0					
ANR	8858746	UnaryOperator	&		8858368	0					
ANR	8858747	Identifier	nep		8858368	1					
ANR	8858748	Argument	ptr [ - 1 ] . o_type		8858368	5					
ANR	8858749	MemberAccess	ptr [ - 1 ] . o_type		8858368	0					
ANR	8858750	ArrayIndexing	ptr [ - 1 ]		8858368	0					
ANR	8858751	Identifier	ptr		8858368	0					
ANR	8858752	UnaryOperationExpression	- 1		8858368	1					
ANR	8858753	UnaryOperator	-		8858368	0					
ANR	8858754	PrimaryExpression	1		8858368	1					
ANR	8858755	Identifier	o_type		8858368	1					
ANR	8858756	Argument	pstate		8858368	6					
ANR	8858757	Identifier	pstate		8858368	0					
ANR	8858758	PrimaryExpression	0		8858368	1					
ANR	8858759	CompoundStatement		73:18:2238:2238	8858368	1					
ANR	8858760	ExpressionStatement	"if_debug0m ( '7' , pstate -> heap , "" - done\\n"" )"	861:16:27607:27649	8858368	0	True				
ANR	8858761	CallExpression	"if_debug0m ( '7' , pstate -> heap , "" - done\\n"" )"		8858368	0					
ANR	8858762	Callee	if_debug0m		8858368	0					
ANR	8858763	Identifier	if_debug0m		8858368	0					
ANR	8858764	ArgumentList	'7'		8858368	1					
ANR	8858765	Argument	'7'		8858368	0					
ANR	8858766	PrimaryExpression	'7'		8858368	0					
ANR	8858767	Argument	pstate -> heap		8858368	1					
ANR	8858768	PtrMemberAccess	pstate -> heap		8858368	0					
ANR	8858769	Identifier	pstate		8858368	0					
ANR	8858770	Identifier	heap		8858368	1					
ANR	8858771	Argument	""" - done\\n"""		8858368	2					
ANR	8858772	PrimaryExpression	""" - done\\n"""		8858368	0					
ANR	8858773	ExpressionStatement	sp --	862:16:27667:27671	8858368	1	True				
ANR	8858774	PostIncDecOperationExpression	sp --		8858368	0					
ANR	8858775	Identifier	sp		8858368	0					
ANR	8858776	IncDec	--		8858368	1					
ANR	8858777	ContinueStatement	continue ;	863:16:27689:27697	8858368	2	True				
ANR	8858778	ExpressionStatement	nptr = ( void * ) nep . ptr	868:12:27908:27930	8858368	8	True				
ANR	8858779	AssignmentExpression	nptr = ( void * ) nep . ptr		8858368	0		=			
ANR	8858780	Identifier	nptr		8858368	0					
ANR	8858781	CastExpression	( void * ) nep . ptr		8858368	1					
ANR	8858782	CastTarget	void *		8858368	0					
ANR	8858783	MemberAccess	nep . ptr		8858368	1					
ANR	8858784	Identifier	nep		8858368	0					
ANR	8858785	Identifier	ptr		8858368	1					
ANR	8858786	ExpressionStatement	sp -> index ++	869:12:27944:27955	8858368	9	True				
ANR	8858787	PostIncDecOperationExpression	sp -> index ++		8858368	0					
ANR	8858788	PtrMemberAccess	sp -> index		8858368	0					
ANR	8858789	Identifier	sp		8858368	0					
ANR	8858790	Identifier	index		8858368	1					
ANR	8858791	IncDec	++		8858368	1					
ANR	8858792	ExpressionStatement	"if_debug1m ( '7' , pstate -> heap , "" = 0x%lx\\n"" , ( ulong ) nptr )"	870:12:27969:28026	8858368	10	True				
ANR	8858793	CallExpression	"if_debug1m ( '7' , pstate -> heap , "" = 0x%lx\\n"" , ( ulong ) nptr )"		8858368	0					
ANR	8858794	Callee	if_debug1m		8858368	0					
ANR	8858795	Identifier	if_debug1m		8858368	0					
ANR	8858796	ArgumentList	'7'		8858368	1					
ANR	8858797	Argument	'7'		8858368	0					
ANR	8858798	PrimaryExpression	'7'		8858368	0					
ANR	8858799	Argument	pstate -> heap		8858368	1					
ANR	8858800	PtrMemberAccess	pstate -> heap		8858368	0					
ANR	8858801	Identifier	pstate		8858368	0					
ANR	8858802	Identifier	heap		8858368	1					
ANR	8858803	Argument	""" = 0x%lx\\n"""		8858368	2					
ANR	8858804	PrimaryExpression	""" = 0x%lx\\n"""		8858368	0					
ANR	8858805	Argument	( ulong ) nptr		8858368	3					
ANR	8858806	CastExpression	( ulong ) nptr		8858368	0					
ANR	8858807	CastTarget	ulong		8858368	0					
ANR	8858808	Identifier	nptr		8858368	1					
ANR	8858809	IfStatement	if ( ptp == ptr_struct_type )		8858368	11					
ANR	8858810	Condition	ptp == ptr_struct_type	872:16:28111:28132	8858368	0	True				
ANR	8858811	EqualityExpression	ptp == ptr_struct_type		8858368	0		==			
ANR	8858812	Identifier	ptp		8858368	0					
ANR	8858813	Identifier	ptr_struct_type		8858368	1					
ANR	8858814	CompoundStatement		85:40:2784:2784	8858368	1					
ANR	8858815	ExpressionStatement	sp [ 1 ] . index = 0	873:16:28153:28168	8858368	0	True				
ANR	8858816	AssignmentExpression	sp [ 1 ] . index = 0		8858368	0		=			
ANR	8858817	MemberAccess	sp [ 1 ] . index		8858368	0					
ANR	8858818	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8858819	Identifier	sp		8858368	0					
ANR	8858820	PrimaryExpression	1		8858368	1					
ANR	8858821	Identifier	index		8858368	1					
ANR	8858822	PrimaryExpression	0		8858368	1					
ANR	8858823	ExpressionStatement	sp [ 1 ] . is_refs = false	874:16:28186:28207	8858368	1	True				
ANR	8858824	AssignmentExpression	sp [ 1 ] . is_refs = false		8858368	0		=			
ANR	8858825	MemberAccess	sp [ 1 ] . is_refs		8858368	0					
ANR	8858826	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8858827	Identifier	sp		8858368	0					
ANR	8858828	PrimaryExpression	1		8858368	1					
ANR	8858829	Identifier	is_refs		8858368	1					
ANR	8858830	Identifier	false		8858368	1					
ANR	8858831	IfStatement	if ( sp == stop )		8858368	2					
ANR	8858832	Condition	sp == stop	875:20:28229:28238	8858368	0	True				
ANR	8858833	EqualityExpression	sp == stop		8858368	0		==			
ANR	8858834	Identifier	sp		8858368	0					
ANR	8858835	Identifier	stop		8858368	1					
ANR	8858836	GotoStatement	goto push ;	876:20:28261:28270	8858368	1	True				
ANR	8858837	Identifier	push		8858368	0					
ANR	8858838	IfStatement	"if ( ! ptr_struct_mark ( & nep , pstate ) )"		8858368	3					
ANR	8858839	Condition	"! ptr_struct_mark ( & nep , pstate )"	877:20:28292:28321	8858368	0	True				
ANR	8858840	UnaryOperationExpression	"! ptr_struct_mark ( & nep , pstate )"		8858368	0					
ANR	8858841	UnaryOperator	!		8858368	0					
ANR	8858842	CallExpression	"ptr_struct_mark ( & nep , pstate )"		8858368	1					
ANR	8858843	Callee	ptr_struct_mark		8858368	0					
ANR	8858844	Identifier	ptr_struct_mark		8858368	0					
ANR	8858845	ArgumentList	& nep		8858368	1					
ANR	8858846	Argument	& nep		8858368	0					
ANR	8858847	UnaryOperationExpression	& nep		8858368	0					
ANR	8858848	UnaryOperator	&		8858368	0					
ANR	8858849	Identifier	nep		8858368	1					
ANR	8858850	Argument	pstate		8858368	1					
ANR	8858851	Identifier	pstate		8858368	0					
ANR	8858852	GotoStatement	goto ts ;	878:20:28344:28351	8858368	1	True				
ANR	8858853	Identifier	ts		8858368	0					
ANR	8858854	Statement	new	879:16:28369:28371	8858368	4	True				
ANR	8858855	Statement	|=	879:20:28373:28374	8858368	5	True				
ANR	8858856	ExpressionStatement	1	879:23:28376:28377	8858368	6	True				
ANR	8858857	PrimaryExpression	1		8858368	0					
ANR	8858858	ExpressionStatement	( ++ sp ) -> ptr = nptr	880:16:28395:28413	8858368	7	True				
ANR	8858859	AssignmentExpression	( ++ sp ) -> ptr = nptr		8858368	0		=			
ANR	8858860	PtrMemberAccess	( ++ sp ) -> ptr		8858368	0					
ANR	8858861	UnaryExpression	++ sp		8858368	0					
ANR	8858862	IncDec	++		8858368	0					
ANR	8858863	Identifier	sp		8858368	1					
ANR	8858864	Identifier	ptr		8858368	1					
ANR	8858865	Identifier	nptr		8858368	1					
ANR	8858866	GotoStatement	goto do_struct ;	881:16:28431:28445	8858368	8	True				
ANR	8858867	Identifier	do_struct		8858368	0					
ANR	8858868	ElseStatement	else		8858368	0					
ANR	8858869	IfStatement	if ( ptp == ptr_ref_type )		8858368	0					
ANR	8858870	Condition	ptp == ptr_ref_type	882:23:28470:28488	8858368	0	True				
ANR	8858871	EqualityExpression	ptp == ptr_ref_type		8858368	0		==			
ANR	8858872	Identifier	ptp		8858368	0					
ANR	8858873	Identifier	ptr_ref_type		8858368	1					
ANR	8858874	CompoundStatement		95:44:3140:3140	8858368	1					
ANR	8858875	ExpressionStatement	sp [ 1 ] . index = 1	883:16:28509:28524	8858368	0	True				
ANR	8858876	AssignmentExpression	sp [ 1 ] . index = 1		8858368	0		=			
ANR	8858877	MemberAccess	sp [ 1 ] . index		8858368	0					
ANR	8858878	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8858879	Identifier	sp		8858368	0					
ANR	8858880	PrimaryExpression	1		8858368	1					
ANR	8858881	Identifier	index		8858368	1					
ANR	8858882	PrimaryExpression	1		8858368	1					
ANR	8858883	ExpressionStatement	sp [ 1 ] . is_refs = true	884:16:28542:28562	8858368	1	True				
ANR	8858884	AssignmentExpression	sp [ 1 ] . is_refs = true		8858368	0		=			
ANR	8858885	MemberAccess	sp [ 1 ] . is_refs		8858368	0					
ANR	8858886	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8858887	Identifier	sp		8858368	0					
ANR	8858888	PrimaryExpression	1		8858368	1					
ANR	8858889	Identifier	is_refs		8858368	1					
ANR	8858890	Identifier	true		8858368	1					
ANR	8858891	IfStatement	if ( sp == stop )		8858368	2					
ANR	8858892	Condition	sp == stop	885:20:28584:28593	8858368	0	True				
ANR	8858893	EqualityExpression	sp == stop		8858368	0		==			
ANR	8858894	Identifier	sp		8858368	0					
ANR	8858895	Identifier	stop		8858368	1					
ANR	8858896	GotoStatement	goto push ;	886:20:28616:28625	8858368	1	True				
ANR	8858897	Identifier	push		8858368	0					
ANR	8858898	Statement	new	887:16:28643:28645	8858368	3	True				
ANR	8858899	Statement	|=	887:20:28647:28648	8858368	4	True				
ANR	8858900	ExpressionStatement	1	887:23:28650:28651	8858368	5	True				
ANR	8858901	PrimaryExpression	1		8858368	0					
ANR	8858902	ExpressionStatement	( ++ sp ) -> ptr = nptr	888:16:28669:28687	8858368	6	True				
ANR	8858903	AssignmentExpression	( ++ sp ) -> ptr = nptr		8858368	0		=			
ANR	8858904	PtrMemberAccess	( ++ sp ) -> ptr		8858368	0					
ANR	8858905	UnaryExpression	++ sp		8858368	0					
ANR	8858906	IncDec	++		8858368	0					
ANR	8858907	Identifier	sp		8858368	1					
ANR	8858908	Identifier	ptr		8858368	1					
ANR	8858909	Identifier	nptr		8858368	1					
ANR	8858910	GotoStatement	goto do_refs ;	889:16:28705:28717	8858368	7	True				
ANR	8858911	Identifier	do_refs		8858368	0					
ANR	8858912	ElseStatement	else		8858368	0					
ANR	8858913	CompoundStatement		103:19:3387:3387	8858368	0					
ANR	8858914	Statement	new	893:16:28961:28963	8858368	0	True				
ANR	8858915	Statement	|=	893:20:28965:28966	8858368	1	True				
ANR	8858916	ExpressionStatement	"( ( * ptp -> mark ) ( & nep , pstate ) ) ? 1 : 0"	893:23:28968:29005	8858368	2	True				
ANR	8858917	ConditionalExpression	"( ( * ptp -> mark ) ( & nep , pstate ) ) ? 1 : 0"		8858368	0					
ANR	8858918	Condition	"( * ptp -> mark ) ( & nep , pstate )"		8858368	0					
ANR	8858919	CallExpression	"( * ptp -> mark ) ( & nep , pstate )"		8858368	0					
ANR	8858920	Callee	* ptp -> mark		8858368	0					
ANR	8858921	UnaryOperationExpression	* ptp -> mark		8858368	0					
ANR	8858922	UnaryOperator	*		8858368	0					
ANR	8858923	PtrMemberAccess	ptp -> mark		8858368	1					
ANR	8858924	Identifier	ptp		8858368	0					
ANR	8858925	Identifier	mark		8858368	1					
ANR	8858926	ArgumentList	& nep		8858368	1					
ANR	8858927	Argument	& nep		8858368	0					
ANR	8858928	UnaryOperationExpression	& nep		8858368	0					
ANR	8858929	UnaryOperator	&		8858368	0					
ANR	8858930	Identifier	nep		8858368	1					
ANR	8858931	Argument	pstate		8858368	1					
ANR	8858932	Identifier	pstate		8858368	0					
ANR	8858933	PrimaryExpression	1		8858368	1					
ANR	8858934	PrimaryExpression	0		8858368	2					
ANR	8858935	GotoStatement	goto ts ;	894:15:29022:29029	8858368	3	True				
ANR	8858936	Identifier	ts		8858368	0					
ANR	8858937	Label	do_refs :	900:6:29116:29123	8858368	4	True				
ANR	8858938	Identifier	do_refs		8858368	0					
ANR	8858939	CompoundStatement		116:12:3836:3845	8858368	5					
ANR	8858940	IdentifierDeclStatement	ref_packed * pptr = sp -> ptr ;	902:12:29147:29173	8858368	0	True				
ANR	8858941	IdentifierDecl	* pptr = sp -> ptr		8858368	0					
ANR	8858942	IdentifierDeclType	ref_packed *		8858368	0					
ANR	8858943	Identifier	pptr		8858368	1					
ANR	8858944	AssignmentExpression	* pptr = sp -> ptr		8858368	2		=			
ANR	8858945	Identifier	pptr		8858368	0					
ANR	8858946	PtrMemberAccess	sp -> ptr		8858368	1					
ANR	8858947	Identifier	sp		8858368	0					
ANR	8858948	Identifier	ptr		8858368	1					
ANR	8858949	IdentifierDeclStatement	ref * rptr ;	903:12:29187:29196	8858368	1	True				
ANR	8858950	IdentifierDecl	* rptr		8858368	0					
ANR	8858951	IdentifierDeclType	ref *		8858368	0					
ANR	8858952	Identifier	rptr		8858368	1					
ANR	8858953	Label	tr :	905:10:29209:29211	8858368	2	True				
ANR	8858954	Identifier	tr		8858368	0					
ANR	8858955	IfStatement	if ( ! sp -> index )		8858368	3					
ANR	8858956	Condition	! sp -> index	905:17:29216:29225	8858368	0	True				
ANR	8858957	UnaryOperationExpression	! sp -> index		8858368	0					
ANR	8858958	UnaryOperator	!		8858368	0					
ANR	8858959	PtrMemberAccess	sp -> index		8858368	1					
ANR	8858960	Identifier	sp		8858368	0					
ANR	8858961	Identifier	index		8858368	1					
ANR	8858962	CompoundStatement		118:29:3877:3877	8858368	1					
ANR	8858963	ExpressionStatement	-- sp	906:16:29246:29250	8858368	0	True				
ANR	8858964	UnaryExpression	-- sp		8858368	0					
ANR	8858965	IncDec	--		8858368	0					
ANR	8858966	Identifier	sp		8858368	1					
ANR	8858967	ContinueStatement	continue ;	907:16:29268:29276	8858368	1	True				
ANR	8858968	ExpressionStatement	-- ( sp -> index )	909:12:29304:29317	8858368	4	True				
ANR	8858969	UnaryExpression	-- ( sp -> index )		8858368	0					
ANR	8858970	IncDec	--		8858368	0					
ANR	8858971	PtrMemberAccess	sp -> index		8858368	1					
ANR	8858972	Identifier	sp		8858368	0					
ANR	8858973	Identifier	index		8858368	1					
ANR	8858974	ExpressionStatement	"if_debug3m ( '8' , pstate -> heap , ""  [8]%smarking refs 0x%lx[%u]\\n"" , depth_dots ( sp , pms ) , ( ulong ) pptr , sp -> index )"	910:12:29331:29463	8858368	5	True				
ANR	8858975	CallExpression	"if_debug3m ( '8' , pstate -> heap , ""  [8]%smarking refs 0x%lx[%u]\\n"" , depth_dots ( sp , pms ) , ( ulong ) pptr , sp -> index )"		8858368	0					
ANR	8858976	Callee	if_debug3m		8858368	0					
ANR	8858977	Identifier	if_debug3m		8858368	0					
ANR	8858978	ArgumentList	'8'		8858368	1					
ANR	8858979	Argument	'8'		8858368	0					
ANR	8858980	PrimaryExpression	'8'		8858368	0					
ANR	8858981	Argument	pstate -> heap		8858368	1					
ANR	8858982	PtrMemberAccess	pstate -> heap		8858368	0					
ANR	8858983	Identifier	pstate		8858368	0					
ANR	8858984	Identifier	heap		8858368	1					
ANR	8858985	Argument	"""  [8]%smarking refs 0x%lx[%u]\\n"""		8858368	2					
ANR	8858986	PrimaryExpression	"""  [8]%smarking refs 0x%lx[%u]\\n"""		8858368	0					
ANR	8858987	Argument	"depth_dots ( sp , pms )"		8858368	3					
ANR	8858988	CallExpression	"depth_dots ( sp , pms )"		8858368	0					
ANR	8858989	Callee	depth_dots		8858368	0					
ANR	8858990	Identifier	depth_dots		8858368	0					
ANR	8858991	ArgumentList	sp		8858368	1					
ANR	8858992	Argument	sp		8858368	0					
ANR	8858993	Identifier	sp		8858368	0					
ANR	8858994	Argument	pms		8858368	1					
ANR	8858995	Identifier	pms		8858368	0					
ANR	8858996	Argument	( ulong ) pptr		8858368	4					
ANR	8858997	CastExpression	( ulong ) pptr		8858368	0					
ANR	8858998	CastTarget	ulong		8858368	0					
ANR	8858999	Identifier	pptr		8858368	1					
ANR	8859000	Argument	sp -> index		8858368	5					
ANR	8859001	PtrMemberAccess	sp -> index		8858368	0					
ANR	8859002	Identifier	sp		8858368	0					
ANR	8859003	Identifier	index		8858368	1					
ANR	8859004	IfStatement	if ( r_is_packed ( pptr ) )		8858368	6					
ANR	8859005	Condition	r_is_packed ( pptr )	912:16:29481:29497	8858368	0	True				
ANR	8859006	CallExpression	r_is_packed ( pptr )		8858368	0					
ANR	8859007	Callee	r_is_packed		8858368	0					
ANR	8859008	Identifier	r_is_packed		8858368	0					
ANR	8859009	ArgumentList	pptr		8858368	1					
ANR	8859010	Argument	pptr		8858368	0					
ANR	8859011	Identifier	pptr		8858368	0					
ANR	8859012	CompoundStatement		125:35:4149:4149	8858368	1					
ANR	8859013	IfStatement	if ( ! r_has_pmark ( pptr ) )		8858368	0					
ANR	8859014	Condition	! r_has_pmark ( pptr )	913:20:29522:29539	8858368	0	True				
ANR	8859015	UnaryOperationExpression	! r_has_pmark ( pptr )		8858368	0					
ANR	8859016	UnaryOperator	!		8858368	0					
ANR	8859017	CallExpression	r_has_pmark ( pptr )		8858368	1					
ANR	8859018	Callee	r_has_pmark		8858368	0					
ANR	8859019	Identifier	r_has_pmark		8858368	0					
ANR	8859020	ArgumentList	pptr		8858368	1					
ANR	8859021	Argument	pptr		8858368	0					
ANR	8859022	Identifier	pptr		8858368	0					
ANR	8859023	CompoundStatement		126:40:4191:4191	8858368	1					
ANR	8859024	ExpressionStatement	r_set_pmark ( pptr )	914:20:29564:29581	8858368	0	True				
ANR	8859025	CallExpression	r_set_pmark ( pptr )		8858368	0					
ANR	8859026	Callee	r_set_pmark		8858368	0					
ANR	8859027	Identifier	r_set_pmark		8858368	0					
ANR	8859028	ArgumentList	pptr		8858368	1					
ANR	8859029	Argument	pptr		8858368	0					
ANR	8859030	Identifier	pptr		8858368	0					
ANR	8859031	Statement	new	915:20:29603:29605	8858368	1	True				
ANR	8859032	Statement	|=	915:24:29607:29608	8858368	2	True				
ANR	8859033	ExpressionStatement	1	915:27:29610:29611	8858368	3	True				
ANR	8859034	PrimaryExpression	1		8858368	0					
ANR	8859035	IfStatement	if ( r_packed_is_name ( pptr ) )		8858368	4					
ANR	8859036	Condition	r_packed_is_name ( pptr )	916:24:29637:29658	8858368	0	True				
ANR	8859037	CallExpression	r_packed_is_name ( pptr )		8858368	0					
ANR	8859038	Callee	r_packed_is_name		8858368	0					
ANR	8859039	Identifier	r_packed_is_name		8858368	0					
ANR	8859040	ArgumentList	pptr		8858368	1					
ANR	8859041	Argument	pptr		8858368	0					
ANR	8859042	Identifier	pptr		8858368	0					
ANR	8859043	CompoundStatement		130:24:4336:4379	8858368	1					
ANR	8859044	IdentifierDeclStatement	name_index_t nidx = packed_name_index ( pptr ) ;	917:24:29687:29730	8858368	0	True				
ANR	8859045	IdentifierDecl	nidx = packed_name_index ( pptr )		8858368	0					
ANR	8859046	IdentifierDeclType	name_index_t		8858368	0					
ANR	8859047	Identifier	nidx		8858368	1					
ANR	8859048	AssignmentExpression	nidx = packed_name_index ( pptr )		8858368	2		=			
ANR	8859049	Identifier	nidx		8858368	0					
ANR	8859050	CallExpression	packed_name_index ( pptr )		8858368	1					
ANR	8859051	Callee	packed_name_index		8858368	0					
ANR	8859052	Identifier	packed_name_index		8858368	0					
ANR	8859053	ArgumentList	pptr		8858368	1					
ANR	8859054	Argument	pptr		8858368	0					
ANR	8859055	Identifier	pptr		8858368	0					
ANR	8859056	ExpressionStatement	mark_name ( nidx )	919:24:29757:29772	8858368	1	True				
ANR	8859057	CallExpression	mark_name ( nidx )		8858368	0					
ANR	8859058	Callee	mark_name		8858368	0					
ANR	8859059	Identifier	mark_name		8858368	0					
ANR	8859060	ArgumentList	nidx		8858368	1					
ANR	8859061	Argument	nidx		8858368	0					
ANR	8859062	Identifier	nidx		8858368	0					
ANR	8859063	ExpressionStatement	++ pptr	922:16:29830:29836	8858368	1	True				
ANR	8859064	UnaryExpression	++ pptr		8858368	0					
ANR	8859065	IncDec	++		8858368	0					
ANR	8859066	Identifier	pptr		8858368	1					
ANR	8859067	GotoStatement	goto tr ;	923:16:29854:29861	8858368	2	True				
ANR	8859068	Identifier	tr		8858368	0					
ANR	8859069	ExpressionStatement	rptr = ( ref * ) pptr	925:12:29889:29908	8858368	7	True				
ANR	8859070	AssignmentExpression	rptr = ( ref * ) pptr		8858368	0		=			
ANR	8859071	Identifier	rptr		8858368	0					
ANR	8859072	CastExpression	( ref * ) pptr		8858368	1					
ANR	8859073	CastTarget	ref *		8858368	0					
ANR	8859074	Identifier	pptr		8858368	1					
ANR	8859075	IfStatement	"if ( r_has_attr ( rptr , l_mark ) )"		8858368	8					
ANR	8859076	Condition	"r_has_attr ( rptr , l_mark )"	926:16:29952:29975	8858368	0	True				
ANR	8859077	CallExpression	"r_has_attr ( rptr , l_mark )"		8858368	0					
ANR	8859078	Callee	r_has_attr		8858368	0					
ANR	8859079	Identifier	r_has_attr		8858368	0					
ANR	8859080	ArgumentList	rptr		8858368	1					
ANR	8859081	Argument	rptr		8858368	0					
ANR	8859082	Identifier	rptr		8858368	0					
ANR	8859083	Argument	l_mark		8858368	1					
ANR	8859084	Identifier	l_mark		8858368	0					
ANR	8859085	CompoundStatement		139:42:4627:4627	8858368	1					
ANR	8859086	ExpressionStatement	pptr = ( ref_packed * ) ( rptr + 1 )	927:16:29996:30027	8858368	0	True				
ANR	8859087	AssignmentExpression	pptr = ( ref_packed * ) ( rptr + 1 )		8858368	0		=			
ANR	8859088	Identifier	pptr		8858368	0					
ANR	8859089	CastExpression	( ref_packed * ) ( rptr + 1 )		8858368	1					
ANR	8859090	CastTarget	ref_packed *		8858368	0					
ANR	8859091	AdditiveExpression	rptr + 1		8858368	1		+			
ANR	8859092	Identifier	rptr		8858368	0					
ANR	8859093	PrimaryExpression	1		8858368	1					
ANR	8859094	GotoStatement	goto tr ;	928:16:30045:30052	8858368	1	True				
ANR	8859095	Identifier	tr		8858368	0					
ANR	8859096	ExpressionStatement	"r_set_attrs ( rptr , l_mark )"	930:12:30080:30105	8858368	9	True				
ANR	8859097	CallExpression	"r_set_attrs ( rptr , l_mark )"		8858368	0					
ANR	8859098	Callee	r_set_attrs		8858368	0					
ANR	8859099	Identifier	r_set_attrs		8858368	0					
ANR	8859100	ArgumentList	rptr		8858368	1					
ANR	8859101	Argument	rptr		8858368	0					
ANR	8859102	Identifier	rptr		8858368	0					
ANR	8859103	Argument	l_mark		8858368	1					
ANR	8859104	Identifier	l_mark		8858368	0					
ANR	8859105	Statement	new	931:12:30119:30121	8858368	10	True				
ANR	8859106	Statement	|=	931:16:30123:30124	8858368	11	True				
ANR	8859107	ExpressionStatement	1	931:19:30126:30127	8858368	12	True				
ANR	8859108	PrimaryExpression	1		8858368	0					
ANR	8859109	IfStatement	if ( r_space ( rptr ) < min_trace )		8858368	13					
ANR	8859110	Condition	r_space ( rptr ) < min_trace	932:16:30145:30169	8858368	0	True				
ANR	8859111	RelationalExpression	r_space ( rptr ) < min_trace		8858368	0		<			
ANR	8859112	CallExpression	r_space ( rptr )		8858368	0					
ANR	8859113	Callee	r_space		8858368	0					
ANR	8859114	Identifier	r_space		8858368	0					
ANR	8859115	ArgumentList	rptr		8858368	1					
ANR	8859116	Argument	rptr		8858368	0					
ANR	8859117	Identifier	rptr		8858368	0					
ANR	8859118	Identifier	min_trace		8858368	1					
ANR	8859119	CompoundStatement		145:43:4821:4821	8858368	1					
ANR	8859120	ExpressionStatement	pptr = ( ref_packed * ) ( rptr + 1 )	933:16:30240:30272	8858368	0	True				
ANR	8859121	AssignmentExpression	pptr = ( ref_packed * ) ( rptr + 1 )		8858368	0		=			
ANR	8859122	Identifier	pptr		8858368	0					
ANR	8859123	CastExpression	( ref_packed * ) ( rptr + 1 )		8858368	1					
ANR	8859124	CastTarget	ref_packed *		8858368	0					
ANR	8859125	AdditiveExpression	rptr + 1		8858368	1		+			
ANR	8859126	Identifier	rptr		8858368	0					
ANR	8859127	PrimaryExpression	1		8858368	1					
ANR	8859128	GotoStatement	goto tr ;	934:16:30290:30297	8858368	1	True				
ANR	8859129	Identifier	tr		8858368	0					
ANR	8859130	ExpressionStatement	sp -> ptr = rptr + 1	936:12:30325:30343	8858368	14	True				
ANR	8859131	AssignmentExpression	sp -> ptr = rptr + 1		8858368	0		=			
ANR	8859132	PtrMemberAccess	sp -> ptr		8858368	0					
ANR	8859133	Identifier	sp		8858368	0					
ANR	8859134	Identifier	ptr		8858368	1					
ANR	8859135	AdditiveExpression	rptr + 1		8858368	1		+			
ANR	8859136	Identifier	rptr		8858368	0					
ANR	8859137	PrimaryExpression	1		8858368	1					
ANR	8859138	SwitchStatement	switch ( r_type ( rptr ) )		8858368	15					
ANR	8859139	Condition	r_type ( rptr )	937:20:30365:30376	8858368	0	True				
ANR	8859140	CallExpression	r_type ( rptr )		8858368	0					
ANR	8859141	Callee	r_type		8858368	0					
ANR	8859142	Identifier	r_type		8858368	0					
ANR	8859143	ArgumentList	rptr		8858368	1					
ANR	8859144	Argument	rptr		8858368	0					
ANR	8859145	Identifier	rptr		8858368	0					
ANR	8859146	CompoundStatement		150:34:5028:5028	8858368	1					
ANR	8859147	Label	case t_file :	939:16:30436:30447	8858368	0	True				
ANR	8859148	Identifier	t_file		8858368	0					
ANR	8859149	ExpressionStatement	nptr = rptr -> value . pfile	940:20:30469:30493	8858368	1	True				
ANR	8859150	AssignmentExpression	nptr = rptr -> value . pfile		8858368	0		=			
ANR	8859151	Identifier	nptr		8858368	0					
ANR	8859152	MemberAccess	rptr -> value . pfile		8858368	1					
ANR	8859153	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859154	Identifier	rptr		8858368	0					
ANR	8859155	Identifier	value		8858368	1					
ANR	8859156	Identifier	pfile		8858368	1					
ANR	8859157	Label	rs :	941:18:30513:30515	8858368	2	True				
ANR	8859158	Identifier	rs		8858368	0					
ANR	8859159	ExpressionStatement	sp [ 1 ] . is_refs = false	941:21:30516:30537	8858368	3	True				
ANR	8859160	AssignmentExpression	sp [ 1 ] . is_refs = false		8858368	0		=			
ANR	8859161	MemberAccess	sp [ 1 ] . is_refs		8858368	0					
ANR	8859162	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859163	Identifier	sp		8858368	0					
ANR	8859164	PrimaryExpression	1		8858368	1					
ANR	8859165	Identifier	is_refs		8858368	1					
ANR	8859166	Identifier	false		8858368	1					
ANR	8859167	ExpressionStatement	sp [ 1 ] . index = 0	942:20:30559:30574	8858368	4	True				
ANR	8859168	AssignmentExpression	sp [ 1 ] . index = 0		8858368	0		=			
ANR	8859169	MemberAccess	sp [ 1 ] . index		8858368	0					
ANR	8859170	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859171	Identifier	sp		8858368	0					
ANR	8859172	PrimaryExpression	1		8858368	1					
ANR	8859173	Identifier	index		8858368	1					
ANR	8859174	PrimaryExpression	0		8858368	1					
ANR	8859175	IfStatement	if ( sp == stop )		8858368	5					
ANR	8859176	Condition	sp == stop	943:24:30600:30609	8858368	0	True				
ANR	8859177	EqualityExpression	sp == stop		8858368	0		==			
ANR	8859178	Identifier	sp		8858368	0					
ANR	8859179	Identifier	stop		8858368	1					
ANR	8859180	CompoundStatement		156:36:5261:5261	8858368	1					
ANR	8859181	ExpressionStatement	ptp = ptr_struct_type	944:24:30638:30659	8858368	0	True				
ANR	8859182	AssignmentExpression	ptp = ptr_struct_type		8858368	0		=			
ANR	8859183	Identifier	ptp		8858368	0					
ANR	8859184	Identifier	ptr_struct_type		8858368	1					
ANR	8859185	BreakStatement	break ;	945:24:30685:30690	8858368	1	True				
ANR	8859186	ExpressionStatement	nep . ptr = nptr	947:20:30734:30748	8858368	6	True				
ANR	8859187	AssignmentExpression	nep . ptr = nptr		8858368	0		=			
ANR	8859188	MemberAccess	nep . ptr		8858368	0					
ANR	8859189	Identifier	nep		8858368	0					
ANR	8859190	Identifier	ptr		8858368	1					
ANR	8859191	Identifier	nptr		8858368	1					
ANR	8859192	IfStatement	"if ( ! ptr_struct_mark ( & nep , pstate ) )"		8858368	7					
ANR	8859193	Condition	"! ptr_struct_mark ( & nep , pstate )"	948:24:30774:30803	8858368	0	True				
ANR	8859194	UnaryOperationExpression	"! ptr_struct_mark ( & nep , pstate )"		8858368	0					
ANR	8859195	UnaryOperator	!		8858368	0					
ANR	8859196	CallExpression	"ptr_struct_mark ( & nep , pstate )"		8858368	1					
ANR	8859197	Callee	ptr_struct_mark		8858368	0					
ANR	8859198	Identifier	ptr_struct_mark		8858368	0					
ANR	8859199	ArgumentList	& nep		8858368	1					
ANR	8859200	Argument	& nep		8858368	0					
ANR	8859201	UnaryOperationExpression	& nep		8858368	0					
ANR	8859202	UnaryOperator	&		8858368	0					
ANR	8859203	Identifier	nep		8858368	1					
ANR	8859204	Argument	pstate		8858368	1					
ANR	8859205	Identifier	pstate		8858368	0					
ANR	8859206	GotoStatement	goto nr ;	949:24:30830:30837	8858368	1	True				
ANR	8859207	Identifier	nr		8858368	0					
ANR	8859208	Statement	new	950:20:30859:30861	8858368	8	True				
ANR	8859209	Statement	|=	950:24:30863:30864	8858368	9	True				
ANR	8859210	ExpressionStatement	1	950:27:30866:30867	8858368	10	True				
ANR	8859211	PrimaryExpression	1		8858368	0					
ANR	8859212	ExpressionStatement	( ++ sp ) -> ptr = nptr	951:20:30889:30907	8858368	11	True				
ANR	8859213	AssignmentExpression	( ++ sp ) -> ptr = nptr		8858368	0		=			
ANR	8859214	PtrMemberAccess	( ++ sp ) -> ptr		8858368	0					
ANR	8859215	UnaryExpression	++ sp		8858368	0					
ANR	8859216	IncDec	++		8858368	0					
ANR	8859217	Identifier	sp		8858368	1					
ANR	8859218	Identifier	ptr		8858368	1					
ANR	8859219	Identifier	nptr		8858368	1					
ANR	8859220	GotoStatement	goto do_struct ;	952:20:30929:30943	8858368	12	True				
ANR	8859221	Identifier	do_struct		8858368	0					
ANR	8859222	Label	case t_device :	953:16:30961:30974	8858368	13	True				
ANR	8859223	Identifier	t_device		8858368	0					
ANR	8859224	ExpressionStatement	nptr = rptr -> value . pdevice	954:20:30996:31022	8858368	14	True				
ANR	8859225	AssignmentExpression	nptr = rptr -> value . pdevice		8858368	0		=			
ANR	8859226	Identifier	nptr		8858368	0					
ANR	8859227	MemberAccess	rptr -> value . pdevice		8858368	1					
ANR	8859228	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859229	Identifier	rptr		8858368	0					
ANR	8859230	Identifier	value		8858368	1					
ANR	8859231	Identifier	pdevice		8858368	1					
ANR	8859232	GotoStatement	goto rs ;	955:20:31044:31051	8858368	15	True				
ANR	8859233	Identifier	rs		8858368	0					
ANR	8859234	Label	case t_fontID :	956:16:31069:31082	8858368	16	True				
ANR	8859235	Identifier	t_fontID		8858368	0					
ANR	8859236	Label	case t_struct :	957:16:31100:31113	8858368	17	True				
ANR	8859237	Identifier	t_struct		8858368	0					
ANR	8859238	Label	case t_astruct :	958:16:31131:31145	8858368	18	True				
ANR	8859239	Identifier	t_astruct		8858368	0					
ANR	8859240	ExpressionStatement	nptr = rptr -> value . pstruct	959:20:31167:31193	8858368	19	True				
ANR	8859241	AssignmentExpression	nptr = rptr -> value . pstruct		8858368	0		=			
ANR	8859242	Identifier	nptr		8858368	0					
ANR	8859243	MemberAccess	rptr -> value . pstruct		8858368	1					
ANR	8859244	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859245	Identifier	rptr		8858368	0					
ANR	8859246	Identifier	value		8858368	1					
ANR	8859247	Identifier	pstruct		8858368	1					
ANR	8859248	GotoStatement	goto rs ;	960:20:31215:31222	8858368	20	True				
ANR	8859249	Identifier	rs		8858368	0					
ANR	8859250	Label	case t_dictionary :	962:16:31295:31312	8858368	21	True				
ANR	8859251	Identifier	t_dictionary		8858368	0					
ANR	8859252	ExpressionStatement	nptr = rptr -> value . pdict	963:20:31334:31358	8858368	22	True				
ANR	8859253	AssignmentExpression	nptr = rptr -> value . pdict		8858368	0		=			
ANR	8859254	Identifier	nptr		8858368	0					
ANR	8859255	MemberAccess	rptr -> value . pdict		8858368	1					
ANR	8859256	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859257	Identifier	rptr		8858368	0					
ANR	8859258	Identifier	value		8858368	1					
ANR	8859259	Identifier	pdict		8858368	1					
ANR	8859260	ExpressionStatement	sp [ 1 ] . index = sizeof ( dict ) / sizeof ( ref )	964:20:31380:31420	8858368	23	True				
ANR	8859261	AssignmentExpression	sp [ 1 ] . index = sizeof ( dict ) / sizeof ( ref )		8858368	0		=			
ANR	8859262	MemberAccess	sp [ 1 ] . index		8858368	0					
ANR	8859263	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859264	Identifier	sp		8858368	0					
ANR	8859265	PrimaryExpression	1		8858368	1					
ANR	8859266	Identifier	index		8858368	1					
ANR	8859267	MultiplicativeExpression	sizeof ( dict ) / sizeof ( ref )		8858368	1		/			
ANR	8859268	SizeofExpression	sizeof ( dict )		8858368	0					
ANR	8859269	Sizeof	sizeof		8858368	0					
ANR	8859270	SizeofOperand	dict		8858368	1					
ANR	8859271	SizeofExpression	sizeof ( ref )		8858368	1					
ANR	8859272	Sizeof	sizeof		8858368	0					
ANR	8859273	SizeofOperand	ref		8858368	1					
ANR	8859274	GotoStatement	goto rrp ;	965:20:31442:31450	8858368	24	True				
ANR	8859275	Identifier	rrp		8858368	0					
ANR	8859276	Label	case t_array :	966:16:31468:31480	8858368	25	True				
ANR	8859277	Identifier	t_array		8858368	0					
ANR	8859278	ExpressionStatement	nptr = rptr -> value . refs	967:20:31502:31525	8858368	26	True				
ANR	8859279	AssignmentExpression	nptr = rptr -> value . refs		8858368	0		=			
ANR	8859280	Identifier	nptr		8858368	0					
ANR	8859281	MemberAccess	rptr -> value . refs		8858368	1					
ANR	8859282	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859283	Identifier	rptr		8858368	0					
ANR	8859284	Identifier	value		8858368	1					
ANR	8859285	Identifier	refs		8858368	1					
ANR	8859286	Label	rr :	968:18:31545:31547	8858368	27	True				
ANR	8859287	Identifier	rr		8858368	0					
ANR	8859288	IfStatement	if ( ( sp [ 1 ] . index = r_size ( rptr ) ) == 0 )		8858368	28					
ANR	8859289	Condition	( sp [ 1 ] . index = r_size ( rptr ) ) == 0	968:25:31552:31584	8858368	0	True				
ANR	8859290	EqualityExpression	( sp [ 1 ] . index = r_size ( rptr ) ) == 0		8858368	0		==			
ANR	8859291	AssignmentExpression	sp [ 1 ] . index = r_size ( rptr )		8858368	0		=			
ANR	8859292	MemberAccess	sp [ 1 ] . index		8858368	0					
ANR	8859293	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859294	Identifier	sp		8858368	0					
ANR	8859295	PrimaryExpression	1		8858368	1					
ANR	8859296	Identifier	index		8858368	1					
ANR	8859297	CallExpression	r_size ( rptr )		8858368	1					
ANR	8859298	Callee	r_size		8858368	0					
ANR	8859299	Identifier	r_size		8858368	0					
ANR	8859300	ArgumentList	rptr		8858368	1					
ANR	8859301	Argument	rptr		8858368	0					
ANR	8859302	Identifier	rptr		8858368	0					
ANR	8859303	PrimaryExpression	0		8858368	1					
ANR	8859304	CompoundStatement		181:60:6236:6236	8858368	1					
ANR	8859305	ExpressionStatement	rptr -> value . refs = 0	970:24:31708:31728	8858368	0	True				
ANR	8859306	AssignmentExpression	rptr -> value . refs = 0		8858368	0		=			
ANR	8859307	MemberAccess	rptr -> value . refs		8858368	0					
ANR	8859308	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859309	Identifier	rptr		8858368	0					
ANR	8859310	Identifier	value		8858368	1					
ANR	8859311	Identifier	refs		8858368	1					
ANR	8859312	PrimaryExpression	0		8858368	1					
ANR	8859313	GotoStatement	goto nr ;	971:24:31754:31761	8858368	1	True				
ANR	8859314	Identifier	nr		8858368	0					
ANR	8859315	Label	rrp :	973:18:31803:31806	8858368	29	True				
ANR	8859316	Identifier	rrp		8858368	0					
ANR	8859317	Label	rrc :	974:18:31826:31829	8858368	30	True				
ANR	8859318	Identifier	rrc		8858368	0					
ANR	8859319	ExpressionStatement	sp [ 1 ] . is_refs = true	974:22:31830:31850	8858368	31	True				
ANR	8859320	AssignmentExpression	sp [ 1 ] . is_refs = true		8858368	0		=			
ANR	8859321	MemberAccess	sp [ 1 ] . is_refs		8858368	0					
ANR	8859322	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859323	Identifier	sp		8858368	0					
ANR	8859324	PrimaryExpression	1		8858368	1					
ANR	8859325	Identifier	is_refs		8858368	1					
ANR	8859326	Identifier	true		8858368	1					
ANR	8859327	IfStatement	if ( sp == stop )		8858368	32					
ANR	8859328	Condition	sp == stop	975:24:31876:31885	8858368	0	True				
ANR	8859329	EqualityExpression	sp == stop		8858368	0		==			
ANR	8859330	Identifier	sp		8858368	0					
ANR	8859331	Identifier	stop		8858368	1					
ANR	8859332	CompoundStatement		188:36:6537:6537	8858368	1					
ANR	8859333	ExpressionStatement	ptp = ptr_ref_type	983:24:32306:32324	8858368	0	True				
ANR	8859334	AssignmentExpression	ptp = ptr_ref_type		8858368	0		=			
ANR	8859335	Identifier	ptp		8858368	0					
ANR	8859336	Identifier	ptr_ref_type		8858368	1					
ANR	8859337	BreakStatement	break ;	984:24:32350:32355	8858368	1	True				
ANR	8859338	Statement	new	986:20:32399:32401	8858368	33	True				
ANR	8859339	Statement	|=	986:24:32403:32404	8858368	34	True				
ANR	8859340	ExpressionStatement	1	986:27:32406:32407	8858368	35	True				
ANR	8859341	PrimaryExpression	1		8858368	0					
ANR	8859342	ExpressionStatement	( ++ sp ) -> ptr = nptr	987:20:32429:32447	8858368	36	True				
ANR	8859343	AssignmentExpression	( ++ sp ) -> ptr = nptr		8858368	0		=			
ANR	8859344	PtrMemberAccess	( ++ sp ) -> ptr		8858368	0					
ANR	8859345	UnaryExpression	++ sp		8858368	0					
ANR	8859346	IncDec	++		8858368	0					
ANR	8859347	Identifier	sp		8858368	1					
ANR	8859348	Identifier	ptr		8858368	1					
ANR	8859349	Identifier	nptr		8858368	1					
ANR	8859350	GotoStatement	goto do_refs ;	988:20:32469:32481	8858368	37	True				
ANR	8859351	Identifier	do_refs		8858368	0					
ANR	8859352	Label	case t_mixedarray :	989:16:32499:32516	8858368	38	True				
ANR	8859353	Identifier	t_mixedarray		8858368	0					
ANR	8859354	Label	case t_shortarray :	990:16:32534:32551	8858368	39	True				
ANR	8859355	Identifier	t_shortarray		8858368	0					
ANR	8859356	ExpressionStatement	nptr = rptr -> value . writable_packed	991:20:32573:32607	8858368	40	True				
ANR	8859357	AssignmentExpression	nptr = rptr -> value . writable_packed		8858368	0		=			
ANR	8859358	Identifier	nptr		8858368	0					
ANR	8859359	MemberAccess	rptr -> value . writable_packed		8858368	1					
ANR	8859360	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859361	Identifier	rptr		8858368	0					
ANR	8859362	Identifier	value		8858368	1					
ANR	8859363	Identifier	writable_packed		8858368	1					
ANR	8859364	GotoStatement	goto rr ;	992:20:32629:32636	8858368	41	True				
ANR	8859365	Identifier	rr		8858368	0					
ANR	8859366	Label	case t_name :	993:16:32654:32665	8858368	42	True				
ANR	8859367	Identifier	t_name		8858368	0					
ANR	8859368	ExpressionStatement	"mark_name ( names_index ( nt , rptr ) )"	994:20:32687:32719	8858368	43	True				
ANR	8859369	CallExpression	"mark_name ( names_index ( nt , rptr ) )"		8858368	0					
ANR	8859370	Callee	mark_name		8858368	0					
ANR	8859371	Identifier	mark_name		8858368	0					
ANR	8859372	ArgumentList	"names_index ( nt , rptr )"		8858368	1					
ANR	8859373	Argument	"names_index ( nt , rptr )"		8858368	0					
ANR	8859374	CallExpression	"names_index ( nt , rptr )"		8858368	0					
ANR	8859375	Callee	names_index		8858368	0					
ANR	8859376	Identifier	names_index		8858368	0					
ANR	8859377	ArgumentList	nt		8858368	1					
ANR	8859378	Argument	nt		8858368	0					
ANR	8859379	Identifier	nt		8858368	0					
ANR	8859380	Argument	rptr		8858368	1					
ANR	8859381	Identifier	rptr		8858368	0					
ANR	8859382	Label	nr :	995:18:32739:32741	8858368	44	True				
ANR	8859383	Identifier	nr		8858368	0					
ANR	8859384	ExpressionStatement	pptr = ( ref_packed * ) ( rptr + 1 )	995:21:32742:32774	8858368	45	True				
ANR	8859385	AssignmentExpression	pptr = ( ref_packed * ) ( rptr + 1 )		8858368	0		=			
ANR	8859386	Identifier	pptr		8858368	0					
ANR	8859387	CastExpression	( ref_packed * ) ( rptr + 1 )		8858368	1					
ANR	8859388	CastTarget	ref_packed *		8858368	0					
ANR	8859389	AdditiveExpression	rptr + 1		8858368	1		+			
ANR	8859390	Identifier	rptr		8858368	0					
ANR	8859391	PrimaryExpression	1		8858368	1					
ANR	8859392	GotoStatement	goto tr ;	996:20:32796:32803	8858368	46	True				
ANR	8859393	Identifier	tr		8858368	0					
ANR	8859394	Label	case t_string :	997:16:32821:32834	8858368	47	True				
ANR	8859395	Identifier	t_string		8858368	0					
ANR	8859396	IfStatement	"if ( gc_string_mark ( rptr -> value . bytes , r_size ( rptr ) , true , pstate ) )"		8858368	48					
ANR	8859397	Condition	"gc_string_mark ( rptr -> value . bytes , r_size ( rptr ) , true , pstate )"	998:24:32860:32920	8858368	0	True				
ANR	8859398	CallExpression	"gc_string_mark ( rptr -> value . bytes , r_size ( rptr ) , true , pstate )"		8858368	0					
ANR	8859399	Callee	gc_string_mark		8858368	0					
ANR	8859400	Identifier	gc_string_mark		8858368	0					
ANR	8859401	ArgumentList	rptr -> value . bytes		8858368	1					
ANR	8859402	Argument	rptr -> value . bytes		8858368	0					
ANR	8859403	MemberAccess	rptr -> value . bytes		8858368	0					
ANR	8859404	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859405	Identifier	rptr		8858368	0					
ANR	8859406	Identifier	value		8858368	1					
ANR	8859407	Identifier	bytes		8858368	1					
ANR	8859408	Argument	r_size ( rptr )		8858368	1					
ANR	8859409	CallExpression	r_size ( rptr )		8858368	0					
ANR	8859410	Callee	r_size		8858368	0					
ANR	8859411	Identifier	r_size		8858368	0					
ANR	8859412	ArgumentList	rptr		8858368	1					
ANR	8859413	Argument	rptr		8858368	0					
ANR	8859414	Identifier	rptr		8858368	0					
ANR	8859415	Argument	true		8858368	2					
ANR	8859416	Identifier	true		8858368	0					
ANR	8859417	Argument	pstate		8858368	3					
ANR	8859418	Identifier	pstate		8858368	0					
ANR	8859419	Statement	new	999:24:32947:32949	8858368	1	True				
ANR	8859420	Statement	|=	999:28:32951:32952	8858368	49	True				
ANR	8859421	ExpressionStatement	1	999:31:32954:32955	8858368	50	True				
ANR	8859422	PrimaryExpression	1		8858368	0					
ANR	8859423	GotoStatement	goto nr ;	1000:20:32977:32984	8858368	51	True				
ANR	8859424	Identifier	nr		8858368	0					
ANR	8859425	Label	case t_oparray :	1001:16:33002:33016	8858368	52	True				
ANR	8859426	Identifier	t_oparray		8858368	0					
ANR	8859427	ExpressionStatement	nptr = rptr -> value . refs	1002:20:33038:33061	8858368	53	True				
ANR	8859428	AssignmentExpression	nptr = rptr -> value . refs		8858368	0		=			
ANR	8859429	Identifier	nptr		8858368	0					
ANR	8859430	MemberAccess	rptr -> value . refs		8858368	1					
ANR	8859431	PtrMemberAccess	rptr -> value		8858368	0					
ANR	8859432	Identifier	rptr		8858368	0					
ANR	8859433	Identifier	value		8858368	1					
ANR	8859434	Identifier	refs		8858368	1					
ANR	8859435	ExpressionStatement	sp [ 1 ] . index = 1	1003:20:33103:33118	8858368	54	True				
ANR	8859436	AssignmentExpression	sp [ 1 ] . index = 1		8858368	0		=			
ANR	8859437	MemberAccess	sp [ 1 ] . index		8858368	0					
ANR	8859438	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859439	Identifier	sp		8858368	0					
ANR	8859440	PrimaryExpression	1		8858368	1					
ANR	8859441	Identifier	index		8858368	1					
ANR	8859442	PrimaryExpression	1		8858368	1					
ANR	8859443	GotoStatement	goto rrc ;	1004:20:33140:33148	8858368	55	True				
ANR	8859444	Identifier	rrc		8858368	0					
ANR	8859445	Label	default :	1005:16:33166:33173	8858368	56	True				
ANR	8859446	Identifier	default		8858368	0					
ANR	8859447	GotoStatement	goto nr ;	1006:20:33195:33202	8858368	57	True				
ANR	8859448	Identifier	nr		8858368	0					
ANR	8859449	Label	push :	1012:6:33294:33298	8858368	6	True				
ANR	8859450	Identifier	push		8858368	0					
ANR	8859451	IfStatement	if ( sp == stop )		8858368	7					
ANR	8859452	Condition	sp == stop	1013:12:33312:33321	8858368	0	True				
ANR	8859453	EqualityExpression	sp == stop		8858368	0		==			
ANR	8859454	Identifier	sp		8858368	0					
ANR	8859455	Identifier	stop		8858368	1					
ANR	8859456	CompoundStatement		227:12:8022:8066	8858368	1					
ANR	8859457	IdentifierDeclStatement	"int new_added = gc_extend_stack ( pms , pstate ) ;"	1014:12:33373:33417	8858368	0	True				
ANR	8859458	IdentifierDecl	"new_added = gc_extend_stack ( pms , pstate )"		8858368	0					
ANR	8859459	IdentifierDeclType	int		8858368	0					
ANR	8859460	Identifier	new_added		8858368	1					
ANR	8859461	AssignmentExpression	"new_added = gc_extend_stack ( pms , pstate )"		8858368	2		=			
ANR	8859462	Identifier	new_added		8858368	0					
ANR	8859463	CallExpression	"gc_extend_stack ( pms , pstate )"		8858368	1					
ANR	8859464	Callee	gc_extend_stack		8858368	0					
ANR	8859465	Identifier	gc_extend_stack		8858368	0					
ANR	8859466	ArgumentList	pms		8858368	1					
ANR	8859467	Argument	pms		8858368	0					
ANR	8859468	Identifier	pms		8858368	0					
ANR	8859469	Argument	pstate		8858368	1					
ANR	8859470	Identifier	pstate		8858368	0					
ANR	8859471	IfStatement	if ( new_added )		8858368	1					
ANR	8859472	Condition	new_added	1016:16:33436:33444	8858368	0	True				
ANR	8859473	Identifier	new_added		8858368	0					
ANR	8859474	CompoundStatement		229:27:8096:8096	8858368	1					
ANR	8859475	Statement	new	1017:16:33465:33467	8858368	0	True				
ANR	8859476	Statement	|=	1017:20:33469:33470	8858368	1	True				
ANR	8859477	ExpressionStatement	new_added	1017:23:33472:33481	8858368	2	True				
ANR	8859478	Identifier	new_added		8858368	0					
ANR	8859479	ContinueStatement	continue ;	1018:16:33499:33507	8858368	3	True				
ANR	8859480	ExpressionStatement	pms = pms -> next	1020:12:33535:33550	8858368	2	True				
ANR	8859481	AssignmentExpression	pms = pms -> next		8858368	0		=			
ANR	8859482	Identifier	pms		8858368	0					
ANR	8859483	PtrMemberAccess	pms -> next		8858368	1					
ANR	8859484	Identifier	pms		8858368	0					
ANR	8859485	Identifier	next		8858368	1					
ANR	8859486	ExpressionStatement	stop = pms -> entries + pms -> count - 1	1021:12:33564:33600	8858368	3	True				
ANR	8859487	AssignmentExpression	stop = pms -> entries + pms -> count - 1		8858368	0		=			
ANR	8859488	Identifier	stop		8858368	0					
ANR	8859489	AdditiveExpression	pms -> entries + pms -> count - 1		8858368	1		+			
ANR	8859490	PtrMemberAccess	pms -> entries		8858368	0					
ANR	8859491	Identifier	pms		8858368	0					
ANR	8859492	Identifier	entries		8858368	1					
ANR	8859493	AdditiveExpression	pms -> count - 1		8858368	1		-			
ANR	8859494	PtrMemberAccess	pms -> count		8858368	0					
ANR	8859495	Identifier	pms		8858368	0					
ANR	8859496	Identifier	count		8858368	1					
ANR	8859497	PrimaryExpression	1		8858368	1					
ANR	8859498	ExpressionStatement	pms -> entries [ 1 ] = sp [ 1 ]	1022:12:33614:33637	8858368	4	True				
ANR	8859499	AssignmentExpression	pms -> entries [ 1 ] = sp [ 1 ]		8858368	0		=			
ANR	8859500	ArrayIndexing	pms -> entries [ 1 ]		8858368	0					
ANR	8859501	PtrMemberAccess	pms -> entries		8858368	0					
ANR	8859502	Identifier	pms		8858368	0					
ANR	8859503	Identifier	entries		8858368	1					
ANR	8859504	PrimaryExpression	1		8858368	1					
ANR	8859505	ArrayIndexing	sp [ 1 ]		8858368	1					
ANR	8859506	Identifier	sp		8858368	0					
ANR	8859507	PrimaryExpression	1		8858368	1					
ANR	8859508	ExpressionStatement	sp = pms -> entries	1023:12:33651:33668	8858368	5	True				
ANR	8859509	AssignmentExpression	sp = pms -> entries		8858368	0		=			
ANR	8859510	Identifier	sp		8858368	0					
ANR	8859511	PtrMemberAccess	pms -> entries		8858368	1					
ANR	8859512	Identifier	pms		8858368	0					
ANR	8859513	Identifier	entries		8858368	1					
ANR	8859514	IfStatement	if ( ! sp [ 1 ] . is_refs )		8858368	8					
ANR	8859515	Condition	! sp [ 1 ] . is_refs	1026:12:33740:33753	8858368	0	True				
ANR	8859516	UnaryOperationExpression	! sp [ 1 ] . is_refs		8858368	0					
ANR	8859517	UnaryOperator	!		8858368	0					
ANR	8859518	MemberAccess	sp [ 1 ] . is_refs		8858368	1					
ANR	8859519	ArrayIndexing	sp [ 1 ]		8858368	0					
ANR	8859520	Identifier	sp		8858368	0					
ANR	8859521	PrimaryExpression	1		8858368	1					
ANR	8859522	Identifier	is_refs		8858368	1					
ANR	8859523	CompoundStatement		239:28:8405:8405	8858368	1					
ANR	8859524	ExpressionStatement	nep . ptr = nptr	1027:12:33770:33784	8858368	0	True				
ANR	8859525	AssignmentExpression	nep . ptr = nptr		8858368	0		=			
ANR	8859526	MemberAccess	nep . ptr		8858368	0					
ANR	8859527	Identifier	nep		8858368	0					
ANR	8859528	Identifier	ptr		8858368	1					
ANR	8859529	Identifier	nptr		8858368	1					
ANR	8859530	IfStatement	"if ( ! ( * ptp -> mark ) ( & nep , pstate ) )"		8858368	1					
ANR	8859531	Condition	"! ( * ptp -> mark ) ( & nep , pstate )"	1028:16:33802:33829	8858368	0	True				
ANR	8859532	UnaryOperationExpression	"! ( * ptp -> mark ) ( & nep , pstate )"		8858368	0					
ANR	8859533	UnaryOperator	!		8858368	0					
ANR	8859534	CallExpression	"( * ptp -> mark ) ( & nep , pstate )"		8858368	1					
ANR	8859535	Callee	* ptp -> mark		8858368	0					
ANR	8859536	UnaryOperationExpression	* ptp -> mark		8858368	0					
ANR	8859537	UnaryOperator	*		8858368	0					
ANR	8859538	PtrMemberAccess	ptp -> mark		8858368	1					
ANR	8859539	Identifier	ptp		8858368	0					
ANR	8859540	Identifier	mark		8858368	1					
ANR	8859541	ArgumentList	& nep		8858368	1					
ANR	8859542	Argument	& nep		8858368	0					
ANR	8859543	UnaryOperationExpression	& nep		8858368	0					
ANR	8859544	UnaryOperator	&		8858368	0					
ANR	8859545	Identifier	nep		8858368	1					
ANR	8859546	Argument	pstate		8858368	1					
ANR	8859547	Identifier	pstate		8858368	0					
ANR	8859548	ContinueStatement	continue ;	1029:16:33848:33856	8858368	1	True				
ANR	8859549	Statement	new	1030:12:33870:33872	8858368	2	True				
ANR	8859550	Statement	|=	1030:16:33874:33875	8858368	3	True				
ANR	8859551	ExpressionStatement	1	1030:19:33877:33878	8858368	4	True				
ANR	8859552	PrimaryExpression	1		8858368	0					
ANR	8859553	ExpressionStatement	( ++ sp ) -> ptr = nptr	1032:8:33898:33916	8858368	9	True				
ANR	8859554	AssignmentExpression	( ++ sp ) -> ptr = nptr		8858368	0		=			
ANR	8859555	PtrMemberAccess	( ++ sp ) -> ptr		8858368	0					
ANR	8859556	UnaryExpression	++ sp		8858368	0					
ANR	8859557	IncDec	++		8858368	0					
ANR	8859558	Identifier	sp		8858368	1					
ANR	8859559	Identifier	ptr		8858368	1					
ANR	8859560	Identifier	nptr		8858368	1					
ANR	8859561	Statement	return	1034:4:33928:33933	8858368	23	True				
ANR	8859562	Statement	new	1034:11:33935:33937	8858368	24	True				
ANR	8859563	ExpressionStatement		1034:14:33938:33938	8858368	25	True				
ANR	8859564	ReturnType	static int		8858368	1					
ANR	8859565	Identifier	gc_trace		8858368	2					
ANR	8859566	ParameterList	"gs_gc_root_t * rp , gc_state_t * pstate , gc_mark_stack * pmstack"		8858368	3					
ANR	8859567	Parameter	gs_gc_root_t * rp	787:9:25285:25301	8858368	0	True				
ANR	8859568	ParameterType	gs_gc_root_t *		8858368	0					
ANR	8859569	Identifier	rp		8858368	1					
ANR	8859570	Parameter	gc_state_t * pstate	787:28:25304:25322	8858368	1	True				
ANR	8859571	ParameterType	gc_state_t *		8858368	0					
ANR	8859572	Identifier	pstate		8858368	1					
ANR	8859573	Parameter	gc_mark_stack * pmstack	787:49:25325:25347	8858368	2	True				
ANR	8859574	ParameterType	gc_mark_stack *		8858368	0					
ANR	8859575	Identifier	pmstack		8858368	1					
ANR	8859576	CFGEntryNode	ENTRY		8858368		True				
ANR	8859577	CFGExitNode	EXIT		8858368		True				
ANR	8859578	InfiniteForNode	true		8858368		True				
ANR	8859579	Symbol	* sp		8858368						
ANR	8859580	Symbol	rp -> ptype -> mark		8858368						
ANR	8859581	Symbol	ptr_struct_type		8858368						
ANR	8859582	Symbol	pstate		8858368						
ANR	8859583	Symbol	ptr [ - 1 ] . o_type -> enum_ptrs		8858368						
ANR	8859584	Symbol	rptr		8858368						
ANR	8859585	Symbol	rptr -> value . writable_packed		8858368						
ANR	8859586	Symbol	pms -> next		8858368						
ANR	8859587	Symbol	rptr -> value . pfile		8858368						
ANR	8859588	Symbol	names_index		8858368						
ANR	8859589	Symbol	sp -> is_refs		8858368						
ANR	8859590	Symbol	ptp -> mark		8858368						
ANR	8859591	Symbol	rptr -> value . refs		8858368						
ANR	8859592	Symbol	rptr -> value . pstruct		8858368						
ANR	8859593	Symbol	r_packed_is_name		8858368						
ANR	8859594	Symbol	pms -> entries		8858368						
ANR	8859595	Symbol	gc_string_mark		8858368						
ANR	8859596	Symbol	gcst_get_memory_ptr		8858368						
ANR	8859597	Symbol	* ptp		8858368						
ANR	8859598	Symbol	pms		8858368						
ANR	8859599	Symbol	pms -> count		8858368						
ANR	8859600	Symbol	nep		8858368						
ANR	8859601	Symbol	* ptr		8858368						
ANR	8859602	Symbol	ptr_ref_type		8858368						
ANR	8859603	Symbol	ptr [ - 1 ] . o_type		8858368						
ANR	8859604	Symbol	rp -> p		8858368						
ANR	8859605	Symbol	nep . ptr		8858368						
ANR	8859606	Symbol	r_type		8858368						
ANR	8859607	Symbol	struct_type_name_string		8858368						
ANR	8859608	Symbol	NULL		8858368						
ANR	8859609	Symbol	packed_name_index		8858368						
ANR	8859610	Symbol	* * rp		8858368						
ANR	8859611	Symbol	pstate -> min_collect		8858368						
ANR	8859612	Symbol	* rp -> ptype		8858368						
ANR	8859613	Symbol	depth_dots		8858368						
ANR	8859614	Symbol	rptr -> value . bytes		8858368						
ANR	8859615	Symbol	* rp -> p		8858368						
ANR	8859616	Symbol	gc_extend_stack		8858368						
ANR	8859617	Symbol	stop		8858368						
ANR	8859618	Symbol	ptr_struct_mark		8858368						
ANR	8859619	Symbol	* pstate		8858368						
ANR	8859620	Symbol	rptr -> value		8858368						
ANR	8859621	Symbol	rptr -> value . pdevice		8858368						
ANR	8859622	Symbol	rptr -> value . pdict		8858368						
ANR	8859623	Symbol	min_trace		8858368						
ANR	8859624	Symbol	true		8858368						
ANR	8859625	Symbol	& nep		8858368						
ANR	8859626	Symbol	pstate -> ntable		8858368						
ANR	8859627	Symbol	nidx		8858368						
ANR	8859628	Symbol	rp		8858368						
ANR	8859629	Symbol	* pms		8858368						
ANR	8859630	Symbol	* * ptp		8858368						
ANR	8859631	Symbol	* * ptr		8858368						
ANR	8859632	Symbol	r_is_packed		8858368						
ANR	8859633	Symbol	nt		8858368						
ANR	8859634	Symbol	rp -> ptype		8858368						
ANR	8859635	Symbol	( ++ sp ) -> ptr		8858368						
ANR	8859636	Symbol	new_added		8858368						
ANR	8859637	Symbol	pptr		8858368						
ANR	8859638	Symbol	pms -> prev		8858368						
ANR	8859639	Symbol	pstate -> heap		8858368						
ANR	8859640	Symbol	* rp -> ptype -> mark		8858368						
ANR	8859641	Symbol	* rptr		8858368						
ANR	8859642	Symbol	r_space		8858368						
ANR	8859643	Symbol	r_has_attr		8858368						
ANR	8859644	Symbol	r_has_pmark		8858368						
ANR	8859645	Symbol	sp [ 1 ] . index		8858368						
ANR	8859646	Symbol	r_size		8858368						
ANR	8859647	Symbol	* mproc		8858368						
ANR	8859648	Symbol	* * * rp		8858368						
ANR	8859649	Symbol	names_index_ptr		8858368						
ANR	8859650	Symbol	pre_obj_contents_size		8858368						
ANR	8859651	Symbol	sp		8858368						
ANR	8859652	Symbol	* ptr [ - 1 ] . o_type		8858368						
ANR	8859653	Symbol	names_mark_index		8858368						
ANR	8859654	Symbol	sp -> index		8858368						
ANR	8859655	Symbol	* rp		8858368						
ANR	8859656	Symbol	false		8858368						
ANR	8859657	Symbol	* ptp -> mark		8858368						
ANR	8859658	Symbol	* * pms		8858368						
ANR	8859659	Symbol	ptp		8858368						
ANR	8859660	Symbol	sp -> ptr		8858368						
ANR	8859661	Symbol	gs_no_struct_enum_ptrs		8858368						
ANR	8859662	Symbol	pmstack		8858368						
ANR	8859663	Symbol	ptr		8858368						
ANR	8859664	Symbol	sp [ 1 ] . is_refs		8858368						
ANR	8859665	Symbol	nptr		8858368						
ANR	8859666	Symbol	* pms -> entries		8858368						
ANR	8859667	Symbol	* * rp -> ptype		8858368						
ANR	8859668	Symbol	mproc		8858368						
ANR	8859669	Symbol	l_mark		8858368						
ANR	8859670	Function	gc_extend_stack	1038:0:34029:35512							
ANR	8859671	FunctionDef	"gc_extend_stack (gc_mark_stack * pms , gc_state_t * pstate)"		8859670	0					
ANR	8859672	CompoundStatement		1040:0:34098:35512	8859670	0					
ANR	8859673	IfStatement	if ( pms -> next == 0 )		8859670	0					
ANR	8859674	Condition	pms -> next == 0	1041:8:34108:34121	8859670	0	True				
ANR	8859675	EqualityExpression	pms -> next == 0		8859670	0		==			
ANR	8859676	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859677	Identifier	pms		8859670	0					
ANR	8859678	Identifier	next		8859670	1					
ANR	8859679	PrimaryExpression	0		8859670	1					
ANR	8859680	CompoundStatement		3:8:74:84	8859670	1					
ANR	8859681	IdentifierDeclStatement	uint count ;	1042:8:34173:34183	8859670	0	True				
ANR	8859682	IdentifierDecl	count		8859670	0					
ANR	8859683	IdentifierDeclType	uint		8859670	0					
ANR	8859684	Identifier	count		8859670	1					
ANR	8859685	ForStatement	for ( count = ms_size_desired ; count >= ms_size_min ; count >>= 1 )		8859670	1					
ANR	8859686	ForInit	count = ms_size_desired ;	1044:13:34199:34222	8859670	0	True				
ANR	8859687	AssignmentExpression	count = ms_size_desired		8859670	0		=			
ANR	8859688	Identifier	count		8859670	0					
ANR	8859689	Identifier	ms_size_desired		8859670	1					
ANR	8859690	Condition	count >= ms_size_min	1044:38:34224:34243	8859670	1	True				
ANR	8859691	RelationalExpression	count >= ms_size_min		8859670	0		>=			
ANR	8859692	Identifier	count		8859670	0					
ANR	8859693	Identifier	ms_size_min		8859670	1					
ANR	8859694	AssignmentExpression	count >>= 1	1044:60:34246:34256	8859670	2	True	>>=			
ANR	8859695	Identifier	count		8859670	0					
ANR	8859696	PrimaryExpression	1		8859670	1					
ANR	8859697	CompoundStatement		5:73:160:160	8859670	3					
ANR	8859698	ExpressionStatement	"pms -> next = ( gc_mark_stack * ) gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"	1045:12:34273:34547	8859670	0	True				
ANR	8859699	AssignmentExpression	"pms -> next = ( gc_mark_stack * ) gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"		8859670	0		=			
ANR	8859700	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859701	Identifier	pms		8859670	0					
ANR	8859702	Identifier	next		8859670	1					
ANR	8859703	CastExpression	"( gc_mark_stack * ) gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"		8859670	1					
ANR	8859704	CastTarget	gc_mark_stack *		8859670	0					
ANR	8859705	CallExpression	"gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"		8859670	1					
ANR	8859706	Callee	gs_alloc_bytes_immovable		8859670	0					
ANR	8859707	Identifier	gs_alloc_bytes_immovable		8859670	0					
ANR	8859708	ArgumentList	pstate -> heap		8859670	1					
ANR	8859709	Argument	pstate -> heap		8859670	0					
ANR	8859710	PtrMemberAccess	pstate -> heap		8859670	0					
ANR	8859711	Identifier	pstate		8859670	0					
ANR	8859712	Identifier	heap		8859670	1					
ANR	8859713	Argument	sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count		8859670	1					
ANR	8859714	AdditiveExpression	sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count		8859670	0		+			
ANR	8859715	SizeofExpression	sizeof ( gc_mark_stack )		8859670	0					
ANR	8859716	Sizeof	sizeof		8859670	0					
ANR	8859717	SizeofOperand	gc_mark_stack		8859670	1					
ANR	8859718	MultiplicativeExpression	sizeof ( ms_entry ) * count		8859670	1		*			
ANR	8859719	SizeofExpression	sizeof ( ms_entry )		8859670	0					
ANR	8859720	Sizeof	sizeof		8859670	0					
ANR	8859721	SizeofOperand	ms_entry		8859670	1					
ANR	8859722	Identifier	count		8859670	1					
ANR	8859723	Argument	"""gc mark stack"""		8859670	2					
ANR	8859724	PrimaryExpression	"""gc mark stack"""		8859670	0					
ANR	8859725	IfStatement	if ( pms -> next != 0 )		8859670	1					
ANR	8859726	Condition	pms -> next != 0	1050:16:34565:34578	8859670	0	True				
ANR	8859727	EqualityExpression	pms -> next != 0		8859670	0		!=			
ANR	8859728	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859729	Identifier	pms		8859670	0					
ANR	8859730	Identifier	next		8859670	1					
ANR	8859731	PrimaryExpression	0		8859670	1					
ANR	8859732	BreakStatement	break ;	1051:16:34597:34602	8859670	1	True				
ANR	8859733	IfStatement	if ( pms -> next == 0 )		8859670	2					
ANR	8859734	Condition	pms -> next == 0	1053:12:34626:34639	8859670	0	True				
ANR	8859735	EqualityExpression	pms -> next == 0		8859670	0		==			
ANR	8859736	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859737	Identifier	pms		8859670	0					
ANR	8859738	Identifier	next		8859670	1					
ANR	8859739	PrimaryExpression	0		8859670	1					
ANR	8859740	CompoundStatement		17:12:698:735	8859670	1					
ANR	8859741	IdentifierDeclStatement	ms_entry * sp = pms -> entries + pms -> count - 1 ;	1054:12:34689:34733	8859670	0	True				
ANR	8859742	IdentifierDecl	* sp = pms -> entries + pms -> count - 1		8859670	0					
ANR	8859743	IdentifierDeclType	ms_entry *		8859670	0					
ANR	8859744	Identifier	sp		8859670	1					
ANR	8859745	AssignmentExpression	* sp = pms -> entries + pms -> count - 1		8859670	2		=			
ANR	8859746	Identifier	sp		8859670	0					
ANR	8859747	AdditiveExpression	pms -> entries + pms -> count - 1		8859670	1		+			
ANR	8859748	PtrMemberAccess	pms -> entries		8859670	0					
ANR	8859749	Identifier	pms		8859670	0					
ANR	8859750	Identifier	entries		8859670	1					
ANR	8859751	AdditiveExpression	pms -> count - 1		8859670	1		-			
ANR	8859752	PtrMemberAccess	pms -> count		8859670	0					
ANR	8859753	Identifier	pms		8859670	0					
ANR	8859754	Identifier	count		8859670	1					
ANR	8859755	PrimaryExpression	1		8859670	1					
ANR	8859756	IdentifierDeclStatement	byte * cptr = sp -> ptr ;	1055:12:34747:34767	8859670	1	True				
ANR	8859757	IdentifierDecl	* cptr = sp -> ptr		8859670	0					
ANR	8859758	IdentifierDeclType	byte *		8859670	0					
ANR	8859759	Identifier	cptr		8859670	1					
ANR	8859760	AssignmentExpression	* cptr = sp -> ptr		8859670	2		=			
ANR	8859761	Identifier	cptr		8859670	0					
ANR	8859762	PtrMemberAccess	sp -> ptr		8859670	1					
ANR	8859763	Identifier	sp		8859670	0					
ANR	8859764	Identifier	ptr		8859670	1					
ANR	8859765	IdentifierDeclStatement	"clump_t * cp = gc_locate ( cptr , pstate ) ;"	1056:12:34797:34834	8859670	2	True				
ANR	8859766	IdentifierDecl	"* cp = gc_locate ( cptr , pstate )"		8859670	0					
ANR	8859767	IdentifierDeclType	clump_t *		8859670	0					
ANR	8859768	Identifier	cp		8859670	1					
ANR	8859769	AssignmentExpression	"* cp = gc_locate ( cptr , pstate )"		8859670	2		=			
ANR	8859770	Identifier	cp		8859670	0					
ANR	8859771	CallExpression	"gc_locate ( cptr , pstate )"		8859670	1					
ANR	8859772	Callee	gc_locate		8859670	0					
ANR	8859773	Identifier	gc_locate		8859670	0					
ANR	8859774	ArgumentList	cptr		8859670	1					
ANR	8859775	Argument	cptr		8859670	0					
ANR	8859776	Identifier	cptr		8859670	0					
ANR	8859777	Argument	pstate		8859670	1					
ANR	8859778	Identifier	pstate		8859670	0					
ANR	8859779	Statement	int	1057:12:34848:34850	8859670	3	True				
ANR	8859780	Statement	new	1057:16:34852:34854	8859670	4	True				
ANR	8859781	Statement	=	1057:20:34856:34856	8859670	5	True				
ANR	8859782	ExpressionStatement	1	1057:22:34858:34859	8859670	6	True				
ANR	8859783	PrimaryExpression	1		8859670	0					
ANR	8859784	IfStatement	if ( cp == 0 )		8859670	7					
ANR	8859785	Condition	cp == 0	1059:16:34878:34884	8859670	0	True				
ANR	8859786	EqualityExpression	cp == 0		8859670	0		==			
ANR	8859787	Identifier	cp		8859670	0					
ANR	8859788	PrimaryExpression	0		8859670	1					
ANR	8859789	CompoundStatement		20:25:788:788	8859670	1					
ANR	8859790	ExpressionStatement	"lprintf1 ( ""mark stack overflowed while outside collectible space at 0x%lx!\\n"" , ( ulong ) cptr )"	1061:16:34998:35114	8859670	0	True				
ANR	8859791	CallExpression	"lprintf1 ( ""mark stack overflowed while outside collectible space at 0x%lx!\\n"" , ( ulong ) cptr )"		8859670	0					
ANR	8859792	Callee	lprintf1		8859670	0					
ANR	8859793	Identifier	lprintf1		8859670	0					
ANR	8859794	ArgumentList	"""mark stack overflowed while outside collectible space at 0x%lx!\\n"""		8859670	1					
ANR	8859795	Argument	"""mark stack overflowed while outside collectible space at 0x%lx!\\n"""		8859670	0					
ANR	8859796	PrimaryExpression	"""mark stack overflowed while outside collectible space at 0x%lx!\\n"""		8859670	0					
ANR	8859797	Argument	( ulong ) cptr		8859670	1					
ANR	8859798	CastExpression	( ulong ) cptr		8859670	0					
ANR	8859799	CastTarget	ulong		8859670	0					
ANR	8859800	Identifier	cptr		8859670	1					
ANR	8859801	ExpressionStatement	gs_abort ( pstate -> heap )	1063:16:35132:35154	8859670	1	True				
ANR	8859802	CallExpression	gs_abort ( pstate -> heap )		8859670	0					
ANR	8859803	Callee	gs_abort		8859670	0					
ANR	8859804	Identifier	gs_abort		8859670	0					
ANR	8859805	ArgumentList	pstate -> heap		8859670	1					
ANR	8859806	Argument	pstate -> heap		8859670	0					
ANR	8859807	PtrMemberAccess	pstate -> heap		8859670	0					
ANR	8859808	Identifier	pstate		8859670	0					
ANR	8859809	Identifier	heap		8859670	1					
ANR	8859810	IfStatement	if ( cptr < cp -> rescan_bot )		8859670	8					
ANR	8859811	Condition	cptr < cp -> rescan_bot	1065:16:35186:35206	8859670	0	True				
ANR	8859812	RelationalExpression	cptr < cp -> rescan_bot		8859670	0		<			
ANR	8859813	Identifier	cptr		8859670	0					
ANR	8859814	PtrMemberAccess	cp -> rescan_bot		8859670	1					
ANR	8859815	Identifier	cp		8859670	0					
ANR	8859816	Identifier	rescan_bot		8859670	1					
ANR	8859817	Statement	cp	1066:16:35225:35226	8859670	1	True				
ANR	8859818	Statement	->	1066:18:35227:35228	8859670	9	True				
ANR	8859819	Statement	rescan_bot	1066:20:35229:35238	8859670	10	True				
ANR	8859820	Statement	=	1066:31:35240:35240	8859670	11	True				
ANR	8859821	Statement	cptr	1066:33:35242:35245	8859670	12	True				
ANR	8859822	Statement	","	1066:37:35246:35246	8859670	13	True				
ANR	8859823	Statement	new	1066:39:35248:35250	8859670	14	True				
ANR	8859824	Statement	=	1066:43:35252:35252	8859670	15	True				
ANR	8859825	ExpressionStatement	- 1	1066:45:35254:35256	8859670	16	True				
ANR	8859826	UnaryOperationExpression	- 1		8859670	0					
ANR	8859827	UnaryOperator	-		8859670	0					
ANR	8859828	PrimaryExpression	1		8859670	1					
ANR	8859829	IfStatement	if ( cptr > cp -> rescan_top )		8859670	17					
ANR	8859830	Condition	cptr > cp -> rescan_top	1067:16:35274:35294	8859670	0	True				
ANR	8859831	RelationalExpression	cptr > cp -> rescan_top		8859670	0		>			
ANR	8859832	Identifier	cptr		8859670	0					
ANR	8859833	PtrMemberAccess	cp -> rescan_top		8859670	1					
ANR	8859834	Identifier	cp		8859670	0					
ANR	8859835	Identifier	rescan_top		8859670	1					
ANR	8859836	Statement	cp	1068:16:35313:35314	8859670	1	True				
ANR	8859837	Statement	->	1068:18:35315:35316	8859670	18	True				
ANR	8859838	Statement	rescan_top	1068:20:35317:35326	8859670	19	True				
ANR	8859839	Statement	=	1068:31:35328:35328	8859670	20	True				
ANR	8859840	Statement	cptr	1068:33:35330:35333	8859670	21	True				
ANR	8859841	Statement	","	1068:37:35334:35334	8859670	22	True				
ANR	8859842	Statement	new	1068:39:35336:35338	8859670	23	True				
ANR	8859843	Statement	=	1068:43:35340:35340	8859670	24	True				
ANR	8859844	ExpressionStatement	- 1	1068:45:35342:35344	8859670	25	True				
ANR	8859845	UnaryOperationExpression	- 1		8859670	0					
ANR	8859846	UnaryOperator	-		8859670	0					
ANR	8859847	PrimaryExpression	1		8859670	1					
ANR	8859848	Statement	return	1069:12:35358:35363	8859670	26	True				
ANR	8859849	Statement	new	1069:19:35365:35367	8859670	27	True				
ANR	8859850	ExpressionStatement		1069:22:35368:35368	8859670	28	True				
ANR	8859851	ExpressionStatement	"gc_init_mark_stack ( pms -> next , count )"	1071:8:35388:35424	8859670	3	True				
ANR	8859852	CallExpression	"gc_init_mark_stack ( pms -> next , count )"		8859670	0					
ANR	8859853	Callee	gc_init_mark_stack		8859670	0					
ANR	8859854	Identifier	gc_init_mark_stack		8859670	0					
ANR	8859855	ArgumentList	pms -> next		8859670	1					
ANR	8859856	Argument	pms -> next		8859670	0					
ANR	8859857	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859858	Identifier	pms		8859670	0					
ANR	8859859	Identifier	next		8859670	1					
ANR	8859860	Argument	count		8859670	1					
ANR	8859861	Identifier	count		8859670	0					
ANR	8859862	ExpressionStatement	pms -> next -> prev = pms	1072:8:35434:35455	8859670	4	True				
ANR	8859863	AssignmentExpression	pms -> next -> prev = pms		8859670	0		=			
ANR	8859864	PtrMemberAccess	pms -> next -> prev		8859670	0					
ANR	8859865	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859866	Identifier	pms		8859670	0					
ANR	8859867	Identifier	next		8859670	1					
ANR	8859868	Identifier	prev		8859670	1					
ANR	8859869	Identifier	pms		8859670	1					
ANR	8859870	ExpressionStatement	pms -> next -> on_heap = true	1073:8:35465:35490	8859670	5	True				
ANR	8859871	AssignmentExpression	pms -> next -> on_heap = true		8859670	0		=			
ANR	8859872	PtrMemberAccess	pms -> next -> on_heap		8859670	0					
ANR	8859873	PtrMemberAccess	pms -> next		8859670	0					
ANR	8859874	Identifier	pms		8859670	0					
ANR	8859875	Identifier	next		8859670	1					
ANR	8859876	Identifier	on_heap		8859670	1					
ANR	8859877	Identifier	true		8859670	1					
ANR	8859878	ReturnStatement	return 0 ;	1075:4:35502:35510	8859670	1	True				
ANR	8859879	PrimaryExpression	0		8859670	0					
ANR	8859880	ReturnType	static int		8859670	1					
ANR	8859881	Identifier	gc_extend_stack		8859670	2					
ANR	8859882	ParameterList	"gc_mark_stack * pms , gc_state_t * pstate"		8859670	3					
ANR	8859883	Parameter	gc_mark_stack * pms	1039:16:34056:34074	8859670	0	True				
ANR	8859884	ParameterType	gc_mark_stack *		8859670	0					
ANR	8859885	Identifier	pms		8859670	1					
ANR	8859886	Parameter	gc_state_t * pstate	1039:37:34077:34095	8859670	1	True				
ANR	8859887	ParameterType	gc_state_t *		8859670	0					
ANR	8859888	Identifier	pstate		8859670	1					
ANR	8859889	CFGEntryNode	ENTRY		8859670		True				
ANR	8859890	CFGExitNode	EXIT		8859670		True				
ANR	8859891	Symbol	* pms		8859670						
ANR	8859892	Symbol	* sp		8859670						
ANR	8859893	Symbol	pms -> next -> on_heap		8859670						
ANR	8859894	Symbol	cptr		8859670						
ANR	8859895	Symbol	pstate		8859670						
ANR	8859896	Symbol	cp -> rescan_top		8859670						
ANR	8859897	Symbol	pms -> next		8859670						
ANR	8859898	Symbol	pstate -> heap		8859670						
ANR	8859899	Symbol	ms_size_min		8859670						
ANR	8859900	Symbol	pms -> entries		8859670						
ANR	8859901	Symbol	gs_alloc_bytes_immovable		8859670						
ANR	8859902	Symbol	pms		8859670						
ANR	8859903	Symbol	pms -> count		8859670						
ANR	8859904	Symbol	sp		8859670						
ANR	8859905	Symbol	pms -> next -> prev		8859670						
ANR	8859906	Symbol	* pms -> next		8859670						
ANR	8859907	Symbol	count		8859670						
ANR	8859908	Symbol	* * pms		8859670						
ANR	8859909	Symbol	cp		8859670						
ANR	8859910	Symbol	sp -> ptr		8859670						
ANR	8859911	Symbol	ms_size_desired		8859670						
ANR	8859912	Symbol	* cp		8859670						
ANR	8859913	Symbol	* pstate		8859670						
ANR	8859914	Symbol	gc_locate		8859670						
ANR	8859915	Symbol	true		8859670						
ANR	8859916	Symbol	cp -> rescan_bot		8859670						
ANR	8859917	Function	ptr_struct_mark	1079:0:35562:35842							
ANR	8859918	FunctionDef	"ptr_struct_mark (enum_ptr_t * pep , gc_state_t * ignored)"		8859917	0					
ANR	8859919	CompoundStatement		1081:0:35629:35842	8859917	0					
ANR	8859920	IdentifierDeclStatement	obj_header_t * ptr = ( obj_header_t * ) pep -> ptr ;	1082:4:35635:35679	8859917	0	True				
ANR	8859921	IdentifierDecl	* ptr = ( obj_header_t * ) pep -> ptr		8859917	0					
ANR	8859922	IdentifierDeclType	obj_header_t *		8859917	0					
ANR	8859923	Identifier	ptr		8859917	1					
ANR	8859924	AssignmentExpression	* ptr = ( obj_header_t * ) pep -> ptr		8859917	2		=			
ANR	8859925	Identifier	ptr		8859917	0					
ANR	8859926	CastExpression	( obj_header_t * ) pep -> ptr		8859917	1					
ANR	8859927	CastTarget	obj_header_t *		8859917	0					
ANR	8859928	PtrMemberAccess	pep -> ptr		8859917	1					
ANR	8859929	Identifier	pep		8859917	0					
ANR	8859930	Identifier	ptr		8859917	1					
ANR	8859931	IfStatement	if ( ptr == 0 )		8859917	1					
ANR	8859932	Condition	ptr == 0	1084:8:35690:35697	8859917	0	True				
ANR	8859933	EqualityExpression	ptr == 0		8859917	0		==			
ANR	8859934	Identifier	ptr		8859917	0					
ANR	8859935	PrimaryExpression	0		8859917	1					
ANR	8859936	ReturnStatement	return false ;	1085:8:35708:35720	8859917	1	True				
ANR	8859937	Identifier	false		8859917	0					
ANR	8859938	ExpressionStatement	ptr --	1086:4:35726:35731	8859917	2	True				
ANR	8859939	PostIncDecOperationExpression	ptr --		8859917	0					
ANR	8859940	Identifier	ptr		8859917	0					
ANR	8859941	IncDec	--		8859917	1					
ANR	8859942	IfStatement	if ( ! o_is_unmarked ( ptr ) )		8859917	3					
ANR	8859943	Condition	! o_is_unmarked ( ptr )	1087:8:35765:35783	8859917	0	True				
ANR	8859944	UnaryOperationExpression	! o_is_unmarked ( ptr )		8859917	0					
ANR	8859945	UnaryOperator	!		8859917	0					
ANR	8859946	CallExpression	o_is_unmarked ( ptr )		8859917	1					
ANR	8859947	Callee	o_is_unmarked		8859917	0					
ANR	8859948	Identifier	o_is_unmarked		8859917	0					
ANR	8859949	ArgumentList	ptr		8859917	1					
ANR	8859950	Argument	ptr		8859917	0					
ANR	8859951	Identifier	ptr		8859917	0					
ANR	8859952	ReturnStatement	return false ;	1088:8:35794:35806	8859917	1	True				
ANR	8859953	Identifier	false		8859917	0					
ANR	8859954	ExpressionStatement	o_mark ( ptr )	1089:4:35812:35823	8859917	4	True				
ANR	8859955	CallExpression	o_mark ( ptr )		8859917	0					
ANR	8859956	Callee	o_mark		8859917	0					
ANR	8859957	Identifier	o_mark		8859917	0					
ANR	8859958	ArgumentList	ptr		8859917	1					
ANR	8859959	Argument	ptr		8859917	0					
ANR	8859960	Identifier	ptr		8859917	0					
ANR	8859961	ReturnStatement	return true ;	1090:4:35829:35840	8859917	5	True				
ANR	8859962	Identifier	true		8859917	0					
ANR	8859963	ReturnType	static bool		8859917	1					
ANR	8859964	Identifier	ptr_struct_mark		8859917	2					
ANR	8859965	ParameterList	"enum_ptr_t * pep , gc_state_t * ignored"		8859917	3					
ANR	8859966	Parameter	enum_ptr_t * pep	1080:16:35590:35604	8859917	0	True				
ANR	8859967	ParameterType	enum_ptr_t *		8859917	0					
ANR	8859968	Identifier	pep		8859917	1					
ANR	8859969	Parameter	gc_state_t * ignored	1080:33:35607:35626	8859917	1	True				
ANR	8859970	ParameterType	gc_state_t *		8859917	0					
ANR	8859971	Identifier	ignored		8859917	1					
ANR	8859972	CFGEntryNode	ENTRY		8859917		True				
ANR	8859973	CFGExitNode	EXIT		8859917		True				
ANR	8859974	Symbol	ignored		8859917						
ANR	8859975	Symbol	pep -> ptr		8859917						
ANR	8859976	Symbol	* pep		8859917						
ANR	8859977	Symbol	false		8859917						
ANR	8859978	Symbol	true		8859917						
ANR	8859979	Symbol	pep		8859917						
ANR	8859980	Symbol	o_is_unmarked		8859917						
ANR	8859981	Symbol	ptr		8859917						
ANR	8859982	Function	ptr_string_mark	1094:0:35892:36018							
ANR	8859983	FunctionDef	"ptr_string_mark (enum_ptr_t * pep , gc_state_t * gcst)"		8859982	0					
ANR	8859984	CompoundStatement		1096:0:35956:36018	8859982	0					
ANR	8859985	ReturnStatement	"return gc_string_mark ( pep -> ptr , pep -> size , true , gcst ) ;"	1097:4:35962:36016	8859982	0	True				
ANR	8859986	CallExpression	"gc_string_mark ( pep -> ptr , pep -> size , true , gcst )"		8859982	0					
ANR	8859987	Callee	gc_string_mark		8859982	0					
ANR	8859988	Identifier	gc_string_mark		8859982	0					
ANR	8859989	ArgumentList	pep -> ptr		8859982	1					
ANR	8859990	Argument	pep -> ptr		8859982	0					
ANR	8859991	PtrMemberAccess	pep -> ptr		8859982	0					
ANR	8859992	Identifier	pep		8859982	0					
ANR	8859993	Identifier	ptr		8859982	1					
ANR	8859994	Argument	pep -> size		8859982	1					
ANR	8859995	PtrMemberAccess	pep -> size		8859982	0					
ANR	8859996	Identifier	pep		8859982	0					
ANR	8859997	Identifier	size		8859982	1					
ANR	8859998	Argument	true		8859982	2					
ANR	8859999	Identifier	true		8859982	0					
ANR	8860000	Argument	gcst		8859982	3					
ANR	8860001	Identifier	gcst		8859982	0					
ANR	8860002	ReturnType	static bool		8859982	1					
ANR	8860003	Identifier	ptr_string_mark		8859982	2					
ANR	8860004	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		8859982	3					
ANR	8860005	Parameter	enum_ptr_t * pep	1095:16:35920:35934	8859982	0	True				
ANR	8860006	ParameterType	enum_ptr_t *		8859982	0					
ANR	8860007	Identifier	pep		8859982	1					
ANR	8860008	Parameter	gc_state_t * gcst	1095:33:35937:35953	8859982	1	True				
ANR	8860009	ParameterType	gc_state_t *		8859982	0					
ANR	8860010	Identifier	gcst		8859982	1					
ANR	8860011	CFGEntryNode	ENTRY		8859982		True				
ANR	8860012	CFGExitNode	EXIT		8859982		True				
ANR	8860013	Symbol	pep -> size		8859982						
ANR	8860014	Symbol	gc_string_mark		8859982						
ANR	8860015	Symbol	pep -> ptr		8859982						
ANR	8860016	Symbol	* pep		8859982						
ANR	8860017	Symbol	true		8859982						
ANR	8860018	Symbol	pep		8859982						
ANR	8860019	Symbol	gcst		8859982						
ANR	8860020	Function	ptr_name_index_mark	1101:0:36066:36215							
ANR	8860021	FunctionDef	"ptr_name_index_mark (enum_ptr_t * pep , gc_state_t * gcst)"		8860020	0					
ANR	8860022	CompoundStatement		1103:0:36134:36215	8860020	0					
ANR	8860023	ReturnStatement	"return names_mark_index ( gcst -> heap -> gs_lib_ctx -> gs_name_table , pep -> size ) ;"	1104:4:36140:36213	8860020	0	True				
ANR	8860024	CallExpression	"names_mark_index ( gcst -> heap -> gs_lib_ctx -> gs_name_table , pep -> size )"		8860020	0					
ANR	8860025	Callee	names_mark_index		8860020	0					
ANR	8860026	Identifier	names_mark_index		8860020	0					
ANR	8860027	ArgumentList	gcst -> heap -> gs_lib_ctx -> gs_name_table		8860020	1					
ANR	8860028	Argument	gcst -> heap -> gs_lib_ctx -> gs_name_table		8860020	0					
ANR	8860029	PtrMemberAccess	gcst -> heap -> gs_lib_ctx -> gs_name_table		8860020	0					
ANR	8860030	PtrMemberAccess	gcst -> heap -> gs_lib_ctx		8860020	0					
ANR	8860031	PtrMemberAccess	gcst -> heap		8860020	0					
ANR	8860032	Identifier	gcst		8860020	0					
ANR	8860033	Identifier	heap		8860020	1					
ANR	8860034	Identifier	gs_lib_ctx		8860020	1					
ANR	8860035	Identifier	gs_name_table		8860020	1					
ANR	8860036	Argument	pep -> size		8860020	1					
ANR	8860037	PtrMemberAccess	pep -> size		8860020	0					
ANR	8860038	Identifier	pep		8860020	0					
ANR	8860039	Identifier	size		8860020	1					
ANR	8860040	ReturnType	static bool		8860020	1					
ANR	8860041	Identifier	ptr_name_index_mark		8860020	2					
ANR	8860042	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		8860020	3					
ANR	8860043	Parameter	enum_ptr_t * pep	1102:20:36098:36112	8860020	0	True				
ANR	8860044	ParameterType	enum_ptr_t *		8860020	0					
ANR	8860045	Identifier	pep		8860020	1					
ANR	8860046	Parameter	gc_state_t * gcst	1102:37:36115:36131	8860020	1	True				
ANR	8860047	ParameterType	gc_state_t *		8860020	0					
ANR	8860048	Identifier	gcst		8860020	1					
ANR	8860049	CFGEntryNode	ENTRY		8860020		True				
ANR	8860050	CFGExitNode	EXIT		8860020		True				
ANR	8860051	Symbol	* gcst -> heap		8860020						
ANR	8860052	Symbol	* gcst -> heap -> gs_lib_ctx		8860020						
ANR	8860053	Symbol	* pep		8860020						
ANR	8860054	Symbol	gcst -> heap -> gs_lib_ctx		8860020						
ANR	8860055	Symbol	gcst -> heap -> gs_lib_ctx -> gs_name_table		8860020						
ANR	8860056	Symbol	* * gcst -> heap		8860020						
ANR	8860057	Symbol	gcst		8860020						
ANR	8860058	Symbol	* * * gcst		8860020						
ANR	8860059	Symbol	* gcst		8860020						
ANR	8860060	Symbol	pep -> size		8860020						
ANR	8860061	Symbol	gcst -> heap		8860020						
ANR	8860062	Symbol	pep		8860020						
ANR	8860063	Symbol	* * gcst		8860020						
ANR	8860064	Symbol	names_mark_index		8860020						
ANR	8860065	Function	gc_trace_finish	1108:0:36257:37075							
ANR	8860066	FunctionDef	gc_trace_finish (gc_state_t * pstate)		8860065	0					
ANR	8860067	CompoundStatement		1110:0:36306:37075	8860065	0					
ANR	8860068	IdentifierDeclStatement	name_table * nt = pstate -> ntable ;	1111:4:36312:36343	8860065	0	True				
ANR	8860069	IdentifierDecl	* nt = pstate -> ntable		8860065	0					
ANR	8860070	IdentifierDeclType	name_table *		8860065	0					
ANR	8860071	Identifier	nt		8860065	1					
ANR	8860072	AssignmentExpression	* nt = pstate -> ntable		8860065	2		=			
ANR	8860073	Identifier	nt		8860065	0					
ANR	8860074	PtrMemberAccess	pstate -> ntable		8860065	1					
ANR	8860075	Identifier	pstate		8860065	0					
ANR	8860076	Identifier	ntable		8860065	1					
ANR	8860077	IdentifierDeclStatement	name_index_t nidx = 0 ;	1112:4:36349:36370	8860065	1	True				
ANR	8860078	IdentifierDecl	nidx = 0		8860065	0					
ANR	8860079	IdentifierDeclType	name_index_t		8860065	0					
ANR	8860080	Identifier	nidx		8860065	1					
ANR	8860081	AssignmentExpression	nidx = 0		8860065	2		=			
ANR	8860082	Identifier	nidx		8860065	0					
ANR	8860083	PrimaryExpression	0		8860065	1					
ANR	8860084	IdentifierDeclStatement	bool marked = false ;	1113:4:36376:36395	8860065	2	True				
ANR	8860085	IdentifierDecl	marked = false		8860065	0					
ANR	8860086	IdentifierDeclType	bool		8860065	0					
ANR	8860087	Identifier	marked		8860065	1					
ANR	8860088	AssignmentExpression	marked = false		8860065	2		=			
ANR	8860089	Identifier	false		8860065	0					
ANR	8860090	Identifier	false		8860065	1					
ANR	8860091	WhileStatement	"while ( ( nidx = names_next_valid_index ( nt , nidx ) ) != 0 )"		8860065	3					
ANR	8860092	Condition	"( nidx = names_next_valid_index ( nt , nidx ) ) != 0"	1115:11:36409:36454	8860065	0	True				
ANR	8860093	EqualityExpression	"( nidx = names_next_valid_index ( nt , nidx ) ) != 0"		8860065	0		!=			
ANR	8860094	AssignmentExpression	"nidx = names_next_valid_index ( nt , nidx )"		8860065	0		=			
ANR	8860095	Identifier	nidx		8860065	0					
ANR	8860096	CallExpression	"names_next_valid_index ( nt , nidx )"		8860065	1					
ANR	8860097	Callee	names_next_valid_index		8860065	0					
ANR	8860098	Identifier	names_next_valid_index		8860065	0					
ANR	8860099	ArgumentList	nt		8860065	1					
ANR	8860100	Argument	nt		8860065	0					
ANR	8860101	Identifier	nt		8860065	0					
ANR	8860102	Argument	nidx		8860065	1					
ANR	8860103	Identifier	nidx		8860065	0					
ANR	8860104	PrimaryExpression	0		8860065	1					
ANR	8860105	CompoundStatement		7:8:160:218	8860065	1					
ANR	8860106	IdentifierDeclStatement	"name_string_t * pnstr = names_index_string_inline ( nt , nidx ) ;"	1116:8:36467:36525	8860065	0	True				
ANR	8860107	IdentifierDecl	"* pnstr = names_index_string_inline ( nt , nidx )"		8860065	0					
ANR	8860108	IdentifierDeclType	name_string_t *		8860065	0					
ANR	8860109	Identifier	pnstr		8860065	1					
ANR	8860110	AssignmentExpression	"* pnstr = names_index_string_inline ( nt , nidx )"		8860065	2		=			
ANR	8860111	Identifier	pnstr		8860065	0					
ANR	8860112	CallExpression	"names_index_string_inline ( nt , nidx )"		8860065	1					
ANR	8860113	Callee	names_index_string_inline		8860065	0					
ANR	8860114	Identifier	names_index_string_inline		8860065	0					
ANR	8860115	ArgumentList	nt		8860065	1					
ANR	8860116	Argument	nt		8860065	0					
ANR	8860117	Identifier	nt		8860065	0					
ANR	8860118	Argument	nidx		8860065	1					
ANR	8860119	Identifier	nidx		8860065	0					
ANR	8860120	IfStatement	if ( pnstr -> mark )		8860065	1					
ANR	8860121	Condition	pnstr -> mark	1118:12:36540:36550	8860065	0	True				
ANR	8860122	PtrMemberAccess	pnstr -> mark		8860065	0					
ANR	8860123	Identifier	pnstr		8860065	0					
ANR	8860124	Identifier	mark		8860065	1					
ANR	8860125	CompoundStatement		10:12:260:282	8860065	1					
ANR	8860126	IdentifierDeclStatement	"enum_ptr_t enst , ensst ;"	1119:12:36567:36589	8860065	0	True				
ANR	8860127	IdentifierDecl	enst		8860065	0					
ANR	8860128	IdentifierDeclType	enum_ptr_t		8860065	0					
ANR	8860129	Identifier	enst		8860065	1					
ANR	8860130	IdentifierDecl	ensst		8860065	1					
ANR	8860131	IdentifierDeclType	enum_ptr_t		8860065	0					
ANR	8860132	Identifier	ensst		8860065	1					
ANR	8860133	IfStatement	"if ( ! pnstr -> foreign_string && gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate ) )"		8860065	1					
ANR	8860134	Condition	"! pnstr -> foreign_string && gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate )"	1121:16:36608:36749	8860065	0	True				
ANR	8860135	AndExpression	"! pnstr -> foreign_string && gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate )"		8860065	0		&&			
ANR	8860136	UnaryOperationExpression	! pnstr -> foreign_string		8860065	0					
ANR	8860137	UnaryOperator	!		8860065	0					
ANR	8860138	PtrMemberAccess	pnstr -> foreign_string		8860065	1					
ANR	8860139	Identifier	pnstr		8860065	0					
ANR	8860140	Identifier	foreign_string		8860065	1					
ANR	8860141	CallExpression	"gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate )"		8860065	1					
ANR	8860142	Callee	gc_string_mark		8860065	0					
ANR	8860143	Identifier	gc_string_mark		8860065	0					
ANR	8860144	ArgumentList	pnstr -> string_bytes		8860065	1					
ANR	8860145	Argument	pnstr -> string_bytes		8860065	0					
ANR	8860146	PtrMemberAccess	pnstr -> string_bytes		8860065	0					
ANR	8860147	Identifier	pnstr		8860065	0					
ANR	8860148	Identifier	string_bytes		8860065	1					
ANR	8860149	Argument	pnstr -> string_size		8860065	1					
ANR	8860150	PtrMemberAccess	pnstr -> string_size		8860065	0					
ANR	8860151	Identifier	pnstr		8860065	0					
ANR	8860152	Identifier	string_size		8860065	1					
ANR	8860153	Argument	true		8860065	2					
ANR	8860154	Identifier	true		8860065	0					
ANR	8860155	Argument	pstate		8860065	3					
ANR	8860156	Identifier	pstate		8860065	0					
ANR	8860157	ExpressionStatement	marked = true	1125:16:36785:36798	8860065	1	True				
ANR	8860158	AssignmentExpression	marked = true		8860065	0		=			
ANR	8860159	Identifier	marked		8860065	0					
ANR	8860160	Identifier	true		8860065	1					
ANR	8860161	ExpressionStatement	"enst . ptr = names_index_sub_table ( nt , nidx )"	1126:12:36812:36854	8860065	2	True				
ANR	8860162	AssignmentExpression	"enst . ptr = names_index_sub_table ( nt , nidx )"		8860065	0		=			
ANR	8860163	MemberAccess	enst . ptr		8860065	0					
ANR	8860164	Identifier	enst		8860065	0					
ANR	8860165	Identifier	ptr		8860065	1					
ANR	8860166	CallExpression	"names_index_sub_table ( nt , nidx )"		8860065	1					
ANR	8860167	Callee	names_index_sub_table		8860065	0					
ANR	8860168	Identifier	names_index_sub_table		8860065	0					
ANR	8860169	ArgumentList	nt		8860065	1					
ANR	8860170	Argument	nt		8860065	0					
ANR	8860171	Identifier	nt		8860065	0					
ANR	8860172	Argument	nidx		8860065	1					
ANR	8860173	Identifier	nidx		8860065	0					
ANR	8860174	ExpressionStatement	"ensst . ptr = names_index_string_sub_table ( nt , nidx )"	1127:12:36868:36918	8860065	3	True				
ANR	8860175	AssignmentExpression	"ensst . ptr = names_index_string_sub_table ( nt , nidx )"		8860065	0		=			
ANR	8860176	MemberAccess	ensst . ptr		8860065	0					
ANR	8860177	Identifier	ensst		8860065	0					
ANR	8860178	Identifier	ptr		8860065	1					
ANR	8860179	CallExpression	"names_index_string_sub_table ( nt , nidx )"		8860065	1					
ANR	8860180	Callee	names_index_string_sub_table		8860065	0					
ANR	8860181	Identifier	names_index_string_sub_table		8860065	0					
ANR	8860182	ArgumentList	nt		8860065	1					
ANR	8860183	Argument	nt		8860065	0					
ANR	8860184	Identifier	nt		8860065	0					
ANR	8860185	Argument	nidx		8860065	1					
ANR	8860186	Identifier	nidx		8860065	0					
ANR	8860187	ExpressionStatement	"marked |= ptr_struct_mark ( & enst , pstate ) | ptr_struct_mark ( & ensst , pstate )"	1128:12:36932:37038	8860065	4	True				
ANR	8860188	AssignmentExpression	"marked |= ptr_struct_mark ( & enst , pstate ) | ptr_struct_mark ( & ensst , pstate )"		8860065	0		|=			
ANR	8860189	Identifier	marked		8860065	0					
ANR	8860190	InclusiveOrExpression	"ptr_struct_mark ( & enst , pstate ) | ptr_struct_mark ( & ensst , pstate )"		8860065	1		|			
ANR	8860191	CallExpression	"ptr_struct_mark ( & enst , pstate )"		8860065	0					
ANR	8860192	Callee	ptr_struct_mark		8860065	0					
ANR	8860193	Identifier	ptr_struct_mark		8860065	0					
ANR	8860194	ArgumentList	& enst		8860065	1					
ANR	8860195	Argument	& enst		8860065	0					
ANR	8860196	UnaryOperationExpression	& enst		8860065	0					
ANR	8860197	UnaryOperator	&		8860065	0					
ANR	8860198	Identifier	enst		8860065	1					
ANR	8860199	Argument	pstate		8860065	1					
ANR	8860200	Identifier	pstate		8860065	0					
ANR	8860201	CallExpression	"ptr_struct_mark ( & ensst , pstate )"		8860065	1					
ANR	8860202	Callee	ptr_struct_mark		8860065	0					
ANR	8860203	Identifier	ptr_struct_mark		8860065	0					
ANR	8860204	ArgumentList	& ensst		8860065	1					
ANR	8860205	Argument	& ensst		8860065	0					
ANR	8860206	UnaryOperationExpression	& ensst		8860065	0					
ANR	8860207	UnaryOperator	&		8860065	0					
ANR	8860208	Identifier	ensst		8860065	1					
ANR	8860209	Argument	pstate		8860065	1					
ANR	8860210	Identifier	pstate		8860065	0					
ANR	8860211	ReturnStatement	return marked ;	1133:4:37060:37073	8860065	4	True				
ANR	8860212	Identifier	marked		8860065	0					
ANR	8860213	ReturnType	static bool		8860065	1					
ANR	8860214	Identifier	gc_trace_finish		8860065	2					
ANR	8860215	ParameterList	gc_state_t * pstate		8860065	3					
ANR	8860216	Parameter	gc_state_t * pstate	1109:16:36285:36303	8860065	0	True				
ANR	8860217	ParameterType	gc_state_t *		8860065	0					
ANR	8860218	Identifier	pstate		8860065	1					
ANR	8860219	CFGEntryNode	ENTRY		8860065		True				
ANR	8860220	CFGExitNode	EXIT		8860065		True				
ANR	8860221	Symbol	pnstr -> string_size		8860065						
ANR	8860222	Symbol	* pnstr		8860065						
ANR	8860223	Symbol	nt		8860065						
ANR	8860224	Symbol	names_next_valid_index		8860065						
ANR	8860225	Symbol	pstate		8860065						
ANR	8860226	Symbol	ensst		8860065						
ANR	8860227	Symbol	& enst		8860065						
ANR	8860228	Symbol	gc_string_mark		8860065						
ANR	8860229	Symbol	ensst . ptr		8860065						
ANR	8860230	Symbol	& ensst		8860065						
ANR	8860231	Symbol	pnstr -> foreign_string		8860065						
ANR	8860232	Symbol	marked		8860065						
ANR	8860233	Symbol	enst		8860065						
ANR	8860234	Symbol	false		8860065						
ANR	8860235	Symbol	enst . ptr		8860065						
ANR	8860236	Symbol	names_index_string_sub_table		8860065						
ANR	8860237	Symbol	pnstr -> mark		8860065						
ANR	8860238	Symbol	pnstr -> string_bytes		8860065						
ANR	8860239	Symbol	names_index_string_inline		8860065						
ANR	8860240	Symbol	pnstr		8860065						
ANR	8860241	Symbol	ptr_struct_mark		8860065						
ANR	8860242	Symbol	* pstate		8860065						
ANR	8860243	Symbol	true		8860065						
ANR	8860244	Symbol	names_index_sub_table		8860065						
ANR	8860245	Symbol	pstate -> ntable		8860065						
ANR	8860246	Symbol	nidx		8860065						
ANR	8860247	Function	gc_init_reloc	1139:0:37190:37458							
ANR	8860248	FunctionDef	gc_init_reloc (clump_t * cp)		8860247	0					
ANR	8860249	CompoundStatement		1141:0:37230:37458	8860247	0					
ANR	8860250	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1142:4:37236:37267	8860247	0	True				
ANR	8860251	IdentifierDecl	* chead = cp -> chead		8860247	0					
ANR	8860252	IdentifierDeclType	clump_head_t *		8860247	0					
ANR	8860253	Identifier	chead		8860247	1					
ANR	8860254	AssignmentExpression	* chead = cp -> chead		8860247	2		=			
ANR	8860255	Identifier	chead		8860247	0					
ANR	8860256	PtrMemberAccess	cp -> chead		8860247	1					
ANR	8860257	Identifier	cp		8860247	0					
ANR	8860258	Identifier	chead		8860247	1					
ANR	8860259	ExpressionStatement	chead -> dest = cp -> cbase	1144:4:37274:37297	8860247	1	True				
ANR	8860260	AssignmentExpression	chead -> dest = cp -> cbase		8860247	0		=			
ANR	8860261	PtrMemberAccess	chead -> dest		8860247	0					
ANR	8860262	Identifier	chead		8860247	0					
ANR	8860263	Identifier	dest		8860247	1					
ANR	8860264	PtrMemberAccess	cp -> cbase		8860247	1					
ANR	8860265	Identifier	cp		8860247	0					
ANR	8860266	Identifier	cbase		8860247	1					
ANR	8860267	ExpressionStatement	"chead -> free . o_back = offset_of ( clump_head_t , free ) >> obj_back_shift"	1145:4:37303:37379	8860247	2	True				
ANR	8860268	AssignmentExpression	"chead -> free . o_back = offset_of ( clump_head_t , free ) >> obj_back_shift"		8860247	0		=			
ANR	8860269	MemberAccess	chead -> free . o_back		8860247	0					
ANR	8860270	PtrMemberAccess	chead -> free		8860247	0					
ANR	8860271	Identifier	chead		8860247	0					
ANR	8860272	Identifier	free		8860247	1					
ANR	8860273	Identifier	o_back		8860247	1					
ANR	8860274	ShiftExpression	"offset_of ( clump_head_t , free ) >> obj_back_shift"		8860247	1		>>			
ANR	8860275	CallExpression	"offset_of ( clump_head_t , free )"		8860247	0					
ANR	8860276	Callee	offset_of		8860247	0					
ANR	8860277	Identifier	offset_of		8860247	0					
ANR	8860278	ArgumentList	clump_head_t		8860247	1					
ANR	8860279	Argument	clump_head_t		8860247	0					
ANR	8860280	Identifier	clump_head_t		8860247	0					
ANR	8860281	Argument	free		8860247	1					
ANR	8860282	Identifier	free		8860247	0					
ANR	8860283	Identifier	obj_back_shift		8860247	1					
ANR	8860284	ExpressionStatement	chead -> free . o_size = sizeof ( obj_header_t )	1147:4:37385:37426	8860247	3	True				
ANR	8860285	AssignmentExpression	chead -> free . o_size = sizeof ( obj_header_t )		8860247	0		=			
ANR	8860286	MemberAccess	chead -> free . o_size		8860247	0					
ANR	8860287	PtrMemberAccess	chead -> free		8860247	0					
ANR	8860288	Identifier	chead		8860247	0					
ANR	8860289	Identifier	free		8860247	1					
ANR	8860290	Identifier	o_size		8860247	1					
ANR	8860291	SizeofExpression	sizeof ( obj_header_t )		8860247	1					
ANR	8860292	Sizeof	sizeof		8860247	0					
ANR	8860293	SizeofOperand	obj_header_t		8860247	1					
ANR	8860294	ExpressionStatement	chead -> free . o_nreloc = 0	1148:4:37432:37456	8860247	4	True				
ANR	8860295	AssignmentExpression	chead -> free . o_nreloc = 0		8860247	0		=			
ANR	8860296	MemberAccess	chead -> free . o_nreloc		8860247	0					
ANR	8860297	PtrMemberAccess	chead -> free		8860247	0					
ANR	8860298	Identifier	chead		8860247	0					
ANR	8860299	Identifier	free		8860247	1					
ANR	8860300	Identifier	o_nreloc		8860247	1					
ANR	8860301	PrimaryExpression	0		8860247	1					
ANR	8860302	ReturnType	static void		8860247	1					
ANR	8860303	Identifier	gc_init_reloc		8860247	2					
ANR	8860304	ParameterList	clump_t * cp		8860247	3					
ANR	8860305	Parameter	clump_t * cp	1140:14:37216:37227	8860247	0	True				
ANR	8860306	ParameterType	clump_t *		8860247	0					
ANR	8860307	Identifier	cp		8860247	1					
ANR	8860308	CFGEntryNode	ENTRY		8860247		True				
ANR	8860309	CFGExitNode	EXIT		8860247		True				
ANR	8860310	Symbol	chead		8860247						
ANR	8860311	Symbol	offset_of		8860247						
ANR	8860312	Symbol	chead -> free		8860247						
ANR	8860313	Symbol	chead -> free . o_size		8860247						
ANR	8860314	Symbol	chead -> dest		8860247						
ANR	8860315	Symbol	* chead		8860247						
ANR	8860316	Symbol	cp -> cbase		8860247						
ANR	8860317	Symbol	cp		8860247						
ANR	8860318	Symbol	obj_back_shift		8860247						
ANR	8860319	Symbol	clump_head_t		8860247						
ANR	8860320	Symbol	chead -> free . o_nreloc		8860247						
ANR	8860321	Symbol	* cp		8860247						
ANR	8860322	Symbol	cp -> chead		8860247						
ANR	8860323	Symbol	chead -> free . o_back		8860247						
ANR	8860324	Symbol	free		8860247						
ANR	8860325	Function	gc_clear_reloc	1152:0:37534:38001							
ANR	8860326	FunctionDef	gc_clear_reloc (clump_t * cp)		8860325	0					
ANR	8860327	CompoundStatement		1154:0:37575:38001	8860325	0					
ANR	8860328	IdentifierDeclStatement	byte * pfree = ( byte * ) & cp -> chead -> free ;	1155:4:37581:37621	8860325	0	True				
ANR	8860329	IdentifierDecl	* pfree = ( byte * ) & cp -> chead -> free		8860325	0					
ANR	8860330	IdentifierDeclType	byte *		8860325	0					
ANR	8860331	Identifier	pfree		8860325	1					
ANR	8860332	AssignmentExpression	* pfree = ( byte * ) & cp -> chead -> free		8860325	2		=			
ANR	8860333	Identifier	pfree		8860325	0					
ANR	8860334	CastExpression	( byte * ) & cp -> chead -> free		8860325	1					
ANR	8860335	CastTarget	byte *		8860325	0					
ANR	8860336	UnaryOperationExpression	& cp -> chead -> free		8860325	1					
ANR	8860337	UnaryOperator	&		8860325	0					
ANR	8860338	PtrMemberAccess	cp -> chead -> free		8860325	1					
ANR	8860339	PtrMemberAccess	cp -> chead		8860325	0					
ANR	8860340	Identifier	cp		8860325	0					
ANR	8860341	Identifier	chead		8860325	1					
ANR	8860342	Identifier	free		8860325	1					
ANR	8860343	ExpressionStatement	gc_init_reloc ( cp )	1157:4:37628:37645	8860325	1	True				
ANR	8860344	CallExpression	gc_init_reloc ( cp )		8860325	0					
ANR	8860345	Callee	gc_init_reloc		8860325	0					
ANR	8860346	Identifier	gc_init_reloc		8860325	0					
ANR	8860347	ArgumentList	cp		8860325	1					
ANR	8860348	Argument	cp		8860325	0					
ANR	8860349	Identifier	cp		8860325	0					
ANR	8860350	Statement	SCAN_CLUMP_OBJECTS	1158:4:37651:37668	8860325	2	True				
ANR	8860351	Statement	(	1158:22:37669:37669	8860325	3	True				
ANR	8860352	Statement	cp	1158:23:37670:37671	8860325	4	True				
ANR	8860353	Statement	)	1158:25:37672:37672	8860325	5	True				
ANR	8860354	Statement	DO_ALL	1159:8:37682:37687	8860325	6	True				
ANR	8860355	IdentifierDeclStatement	const struct_shared_procs_t * procs = pre -> o_type -> shared ;	1160:8:37697:37757	8860325	7	True				
ANR	8860356	IdentifierDecl	* procs = pre -> o_type -> shared		8860325	0					
ANR	8860357	IdentifierDeclType	const struct_shared_procs_t *		8860325	0					
ANR	8860358	Identifier	procs		8860325	1					
ANR	8860359	AssignmentExpression	* procs = pre -> o_type -> shared		8860325	2		=			
ANR	8860360	Identifier	procs		8860325	0					
ANR	8860361	PtrMemberAccess	pre -> o_type -> shared		8860325	1					
ANR	8860362	PtrMemberAccess	pre -> o_type		8860325	0					
ANR	8860363	Identifier	pre		8860325	0					
ANR	8860364	Identifier	o_type		8860325	1					
ANR	8860365	Identifier	shared		8860325	1					
ANR	8860366	IfStatement	if ( procs != 0 )		8860325	8					
ANR	8860367	Condition	procs != 0	1163:8:37768:37777	8860325	0	True				
ANR	8860368	EqualityExpression	procs != 0		8860325	0		!=			
ANR	8860369	Identifier	procs		8860325	0					
ANR	8860370	PrimaryExpression	0		8860325	1					
ANR	8860371	ExpressionStatement	"( * procs -> clear_reloc ) ( pre , size )"	1164:8:37788:37821	8860325	1	True				
ANR	8860372	CallExpression	"( * procs -> clear_reloc ) ( pre , size )"		8860325	0					
ANR	8860373	Callee	* procs -> clear_reloc		8860325	0					
ANR	8860374	UnaryOperationExpression	* procs -> clear_reloc		8860325	0					
ANR	8860375	UnaryOperator	*		8860325	0					
ANR	8860376	PtrMemberAccess	procs -> clear_reloc		8860325	1					
ANR	8860377	Identifier	procs		8860325	0					
ANR	8860378	Identifier	clear_reloc		8860325	1					
ANR	8860379	ArgumentList	pre		8860325	1					
ANR	8860380	Argument	pre		8860325	0					
ANR	8860381	Identifier	pre		8860325	0					
ANR	8860382	Argument	size		8860325	1					
ANR	8860383	Identifier	size		8860325	0					
ANR	8860384	ExpressionStatement	o_set_untraced ( pre )	1165:4:37827:37846	8860325	9	True				
ANR	8860385	CallExpression	o_set_untraced ( pre )		8860325	0					
ANR	8860386	Callee	o_set_untraced		8860325	0					
ANR	8860387	Identifier	o_set_untraced		8860325	0					
ANR	8860388	ArgumentList	pre		8860325	1					
ANR	8860389	Argument	pre		8860325	0					
ANR	8860390	Identifier	pre		8860325	0					
ANR	8860391	ExpressionStatement	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift	1166:4:37852:37906	8860325	10	True				
ANR	8860392	AssignmentExpression	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift		8860325	0		=			
ANR	8860393	PtrMemberAccess	pre -> o_back		8860325	0					
ANR	8860394	Identifier	pre		8860325	0					
ANR	8860395	Identifier	o_back		8860325	1					
ANR	8860396	ShiftExpression	( ( byte * ) pre - pfree ) >> obj_back_shift		8860325	1		>>			
ANR	8860397	AdditiveExpression	( byte * ) pre - pfree		8860325	0		-			
ANR	8860398	CastExpression	( byte * ) pre		8860325	0					
ANR	8860399	CastTarget	byte *		8860325	0					
ANR	8860400	Identifier	pre		8860325	1					
ANR	8860401	Identifier	pfree		8860325	1					
ANR	8860402	Identifier	obj_back_shift		8860325	1					
ANR	8860403	IdentifierDeclStatement	"END_OBJECTS_SCAN gc_strings_set_marks ( cp , true ) ;"	1167:4:37912:37967	8860325	11	True				
ANR	8860404	IdentifierDecl	"gc_strings_set_marks ( cp , true )"		8860325	0					
ANR	8860405	IdentifierDeclType	END_OBJECTS_SCAN		8860325	0					
ANR	8860406	Identifier	gc_strings_set_marks		8860325	1					
ANR	8860407	Expression	"cp , true"		8860325	2					
ANR	8860408	Identifier	cp		8860325	0					
ANR	8860409	Identifier	true		8860325	1					
ANR	8860410	ExpressionStatement	gc_strings_clear_reloc ( cp )	1169:4:37973:37999	8860325	12	True				
ANR	8860411	CallExpression	gc_strings_clear_reloc ( cp )		8860325	0					
ANR	8860412	Callee	gc_strings_clear_reloc		8860325	0					
ANR	8860413	Identifier	gc_strings_clear_reloc		8860325	0					
ANR	8860414	ArgumentList	cp		8860325	1					
ANR	8860415	Argument	cp		8860325	0					
ANR	8860416	Identifier	cp		8860325	0					
ANR	8860417	ReturnType	static void		8860325	1					
ANR	8860418	Identifier	gc_clear_reloc		8860325	2					
ANR	8860419	ParameterList	clump_t * cp		8860325	3					
ANR	8860420	Parameter	clump_t * cp	1153:15:37561:37572	8860325	0	True				
ANR	8860421	ParameterType	clump_t *		8860325	0					
ANR	8860422	Identifier	cp		8860325	1					
ANR	8860423	CFGEntryNode	ENTRY		8860325		True				
ANR	8860424	CFGExitNode	EXIT		8860325		True				
ANR	8860425	Symbol	pre		8860325						
ANR	8860426	Symbol	procs		8860325						
ANR	8860427	Symbol	* pre -> o_type		8860325						
ANR	8860428	Symbol	gc_strings_set_marks		8860325						
ANR	8860429	Symbol	pfree		8860325						
ANR	8860430	Symbol	* procs		8860325						
ANR	8860431	Symbol	& cp -> chead -> free		8860325						
ANR	8860432	Symbol	pre -> o_back		8860325						
ANR	8860433	Symbol	cp		8860325						
ANR	8860434	Symbol	* pre		8860325						
ANR	8860435	Symbol	obj_back_shift		8860325						
ANR	8860436	Symbol	* cp		8860325						
ANR	8860437	Symbol	cp -> chead		8860325						
ANR	8860438	Symbol	size		8860325						
ANR	8860439	Symbol	pre -> o_type		8860325						
ANR	8860440	Symbol	* * pre		8860325						
ANR	8860441	Symbol	procs -> clear_reloc		8860325						
ANR	8860442	Symbol	pre -> o_type -> shared		8860325						
ANR	8860443	Function	gc_objects_set_reloc	1174:0:38130:39666							
ANR	8860444	FunctionDef	"gc_objects_set_reloc (gc_state_t * gcst , clump_t * cp)"		8860443	0					
ANR	8860445	CompoundStatement		1176:0:38196:39666	8860443	0					
ANR	8860446	IdentifierDeclStatement	size_t reloc = 0 ;	1177:4:38202:38218	8860443	0	True				
ANR	8860447	IdentifierDecl	reloc = 0		8860443	0					
ANR	8860448	IdentifierDeclType	size_t		8860443	0					
ANR	8860449	Identifier	reloc		8860443	1					
ANR	8860450	AssignmentExpression	reloc = 0		8860443	2		=			
ANR	8860451	Identifier	reloc		8860443	0					
ANR	8860452	PrimaryExpression	0		8860443	1					
ANR	8860453	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1178:4:38224:38255	8860443	1	True				
ANR	8860454	IdentifierDecl	* chead = cp -> chead		8860443	0					
ANR	8860455	IdentifierDeclType	clump_head_t *		8860443	0					
ANR	8860456	Identifier	chead		8860443	1					
ANR	8860457	AssignmentExpression	* chead = cp -> chead		8860443	2		=			
ANR	8860458	Identifier	chead		8860443	0					
ANR	8860459	PtrMemberAccess	cp -> chead		8860443	1					
ANR	8860460	Identifier	cp		8860443	0					
ANR	8860461	Identifier	chead		8860443	1					
ANR	8860462	IdentifierDeclStatement	byte * pfree = ( byte * ) & chead -> free ;	1179:4:38261:38297	8860443	2	True				
ANR	8860463	IdentifierDecl	* pfree = ( byte * ) & chead -> free		8860443	0					
ANR	8860464	IdentifierDeclType	byte *		8860443	0					
ANR	8860465	Identifier	pfree		8860443	1					
ANR	8860466	AssignmentExpression	* pfree = ( byte * ) & chead -> free		8860443	2		=			
ANR	8860467	Identifier	pfree		8860443	0					
ANR	8860468	CastExpression	( byte * ) & chead -> free		8860443	1					
ANR	8860469	CastTarget	byte *		8860443	0					
ANR	8860470	UnaryOperationExpression	& chead -> free		8860443	1					
ANR	8860471	UnaryOperator	&		8860443	0					
ANR	8860472	PtrMemberAccess	chead -> free		8860443	1					
ANR	8860473	Identifier	chead		8860443	0					
ANR	8860474	Identifier	free		8860443	1					
ANR	8860475	ExpressionStatement	"if_debug_clump ( '6' , gcst -> heap , ""[6]setting reloc for clump"" , cp )"	1181:4:38334:38399	8860443	3	True				
ANR	8860476	CallExpression	"if_debug_clump ( '6' , gcst -> heap , ""[6]setting reloc for clump"" , cp )"		8860443	0					
ANR	8860477	Callee	if_debug_clump		8860443	0					
ANR	8860478	Identifier	if_debug_clump		8860443	0					
ANR	8860479	ArgumentList	'6'		8860443	1					
ANR	8860480	Argument	'6'		8860443	0					
ANR	8860481	PrimaryExpression	'6'		8860443	0					
ANR	8860482	Argument	gcst -> heap		8860443	1					
ANR	8860483	PtrMemberAccess	gcst -> heap		8860443	0					
ANR	8860484	Identifier	gcst		8860443	0					
ANR	8860485	Identifier	heap		8860443	1					
ANR	8860486	Argument	"""[6]setting reloc for clump"""		8860443	2					
ANR	8860487	PrimaryExpression	"""[6]setting reloc for clump"""		8860443	0					
ANR	8860488	Argument	cp		8860443	3					
ANR	8860489	Identifier	cp		8860443	0					
ANR	8860490	ExpressionStatement	gc_init_reloc ( cp )	1182:4:38405:38422	8860443	4	True				
ANR	8860491	CallExpression	gc_init_reloc ( cp )		8860443	0					
ANR	8860492	Callee	gc_init_reloc		8860443	0					
ANR	8860493	Identifier	gc_init_reloc		8860443	0					
ANR	8860494	ArgumentList	cp		8860443	1					
ANR	8860495	Argument	cp		8860443	0					
ANR	8860496	Identifier	cp		8860443	0					
ANR	8860497	Statement	SCAN_CLUMP_OBJECTS	1183:4:38428:38445	8860443	5	True				
ANR	8860498	Statement	(	1183:22:38446:38446	8860443	6	True				
ANR	8860499	Statement	cp	1183:23:38447:38448	8860443	7	True				
ANR	8860500	Statement	)	1183:25:38449:38449	8860443	8	True				
ANR	8860501	IdentifierDeclStatement	DO_ALL struct_proc_finalize ( ( * finalize ) ) ;	1184:8:38459:38507	8860443	9	True				
ANR	8860502	IdentifierDecl	struct_proc_finalize ( ( * finalize ) )		8860443	0					
ANR	8860503	IdentifierDeclType	DO_ALL		8860443	0					
ANR	8860504	Identifier	struct_proc_finalize		8860443	1					
ANR	8860505	UnaryOperationExpression	* finalize		8860443	2					
ANR	8860506	UnaryOperator	*		8860443	0					
ANR	8860507	Identifier	finalize		8860443	1					
ANR	8860508	IdentifierDeclStatement	const struct_shared_procs_t * procs = pre -> o_type -> shared ;	1186:4:38513:38573	8860443	10	True				
ANR	8860509	IdentifierDecl	* procs = pre -> o_type -> shared		8860443	0					
ANR	8860510	IdentifierDeclType	const struct_shared_procs_t *		8860443	0					
ANR	8860511	Identifier	procs		8860443	1					
ANR	8860512	AssignmentExpression	* procs = pre -> o_type -> shared		8860443	2		=			
ANR	8860513	Identifier	procs		8860443	0					
ANR	8860514	PtrMemberAccess	pre -> o_type -> shared		8860443	1					
ANR	8860515	PtrMemberAccess	pre -> o_type		8860443	0					
ANR	8860516	Identifier	pre		8860443	0					
ANR	8860517	Identifier	o_type		8860443	1					
ANR	8860518	Identifier	shared		8860443	1					
ANR	8860519	IfStatement	"if ( ( procs == 0 ? o_is_unmarked ( pre ) : ! ( * procs -> set_reloc ) ( pre , reloc , size ) ) )"		8860443	11					
ANR	8860520	Condition	"procs == 0 ? o_is_unmarked ( pre ) : ! ( * procs -> set_reloc ) ( pre , reloc , size )"	1189:8:38584:38667	8860443	0	True				
ANR	8860521	ConditionalExpression	"procs == 0 ? o_is_unmarked ( pre ) : ! ( * procs -> set_reloc ) ( pre , reloc , size )"		8860443	0					
ANR	8860522	Condition	procs == 0		8860443	0					
ANR	8860523	EqualityExpression	procs == 0		8860443	0		==			
ANR	8860524	Identifier	procs		8860443	0					
ANR	8860525	PrimaryExpression	0		8860443	1					
ANR	8860526	CallExpression	o_is_unmarked ( pre )		8860443	1					
ANR	8860527	Callee	o_is_unmarked		8860443	0					
ANR	8860528	Identifier	o_is_unmarked		8860443	0					
ANR	8860529	ArgumentList	pre		8860443	1					
ANR	8860530	Argument	pre		8860443	0					
ANR	8860531	Identifier	pre		8860443	0					
ANR	8860532	UnaryOperationExpression	"! ( * procs -> set_reloc ) ( pre , reloc , size )"		8860443	2					
ANR	8860533	UnaryOperator	!		8860443	0					
ANR	8860534	CallExpression	"( * procs -> set_reloc ) ( pre , reloc , size )"		8860443	1					
ANR	8860535	Callee	* procs -> set_reloc		8860443	0					
ANR	8860536	UnaryOperationExpression	* procs -> set_reloc		8860443	0					
ANR	8860537	UnaryOperator	*		8860443	0					
ANR	8860538	PtrMemberAccess	procs -> set_reloc		8860443	1					
ANR	8860539	Identifier	procs		8860443	0					
ANR	8860540	Identifier	set_reloc		8860443	1					
ANR	8860541	ArgumentList	pre		8860443	1					
ANR	8860542	Argument	pre		8860443	0					
ANR	8860543	Identifier	pre		8860443	0					
ANR	8860544	Argument	reloc		8860443	1					
ANR	8860545	Identifier	reloc		8860443	0					
ANR	8860546	Argument	size		8860443	2					
ANR	8860547	Identifier	size		8860443	0					
ANR	8860548	CompoundStatement		16:10:482:482	8860443	1					
ANR	8860549	ExpressionStatement	reloc += sizeof ( obj_header_t ) + obj_align_round ( size )	1192:8:38709:38762	8860443	0	True				
ANR	8860550	AssignmentExpression	reloc += sizeof ( obj_header_t ) + obj_align_round ( size )		8860443	0		+=			
ANR	8860551	Identifier	reloc		8860443	0					
ANR	8860552	AdditiveExpression	sizeof ( obj_header_t ) + obj_align_round ( size )		8860443	1		+			
ANR	8860553	SizeofExpression	sizeof ( obj_header_t )		8860443	0					
ANR	8860554	Sizeof	sizeof		8860443	0					
ANR	8860555	SizeofOperand	obj_header_t		8860443	1					
ANR	8860556	CallExpression	obj_align_round ( size )		8860443	1					
ANR	8860557	Callee	obj_align_round		8860443	0					
ANR	8860558	Identifier	obj_align_round		8860443	0					
ANR	8860559	ArgumentList	size		8860443	1					
ANR	8860560	Argument	size		8860443	0					
ANR	8860561	Identifier	size		8860443	0					
ANR	8860562	IfStatement	if ( ( finalize = pre -> o_type -> finalize ) != 0 )		8860443	1					
ANR	8860563	Condition	( finalize = pre -> o_type -> finalize ) != 0	1193:12:38776:38814	8860443	0	True				
ANR	8860564	EqualityExpression	( finalize = pre -> o_type -> finalize ) != 0		8860443	0		!=			
ANR	8860565	AssignmentExpression	finalize = pre -> o_type -> finalize		8860443	0		=			
ANR	8860566	Identifier	finalize		8860443	0					
ANR	8860567	PtrMemberAccess	pre -> o_type -> finalize		8860443	1					
ANR	8860568	PtrMemberAccess	pre -> o_type		8860443	0					
ANR	8860569	Identifier	pre		8860443	0					
ANR	8860570	Identifier	o_type		8860443	1					
ANR	8860571	Identifier	finalize		8860443	1					
ANR	8860572	PrimaryExpression	0		8860443	1					
ANR	8860573	CompoundStatement		18:53:620:620	8860443	1					
ANR	8860574	ExpressionStatement	"if_debug2m ( 'u' , gcst -> heap , ""[u]GC finalizing %s 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) ( pre + 1 ) )"	1194:12:38831:38992	8860443	0	True				
ANR	8860575	CallExpression	"if_debug2m ( 'u' , gcst -> heap , ""[u]GC finalizing %s 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) ( pre + 1 ) )"		8860443	0					
ANR	8860576	Callee	if_debug2m		8860443	0					
ANR	8860577	Identifier	if_debug2m		8860443	0					
ANR	8860578	ArgumentList	'u'		8860443	1					
ANR	8860579	Argument	'u'		8860443	0					
ANR	8860580	PrimaryExpression	'u'		8860443	0					
ANR	8860581	Argument	gcst -> heap		8860443	1					
ANR	8860582	PtrMemberAccess	gcst -> heap		8860443	0					
ANR	8860583	Identifier	gcst		8860443	0					
ANR	8860584	Identifier	heap		8860443	1					
ANR	8860585	Argument	"""[u]GC finalizing %s 0x%lx\\n"""		8860443	2					
ANR	8860586	PrimaryExpression	"""[u]GC finalizing %s 0x%lx\\n"""		8860443	0					
ANR	8860587	Argument	struct_type_name_string ( pre -> o_type )		8860443	3					
ANR	8860588	CallExpression	struct_type_name_string ( pre -> o_type )		8860443	0					
ANR	8860589	Callee	struct_type_name_string		8860443	0					
ANR	8860590	Identifier	struct_type_name_string		8860443	0					
ANR	8860591	ArgumentList	pre -> o_type		8860443	1					
ANR	8860592	Argument	pre -> o_type		8860443	0					
ANR	8860593	PtrMemberAccess	pre -> o_type		8860443	0					
ANR	8860594	Identifier	pre		8860443	0					
ANR	8860595	Identifier	o_type		8860443	1					
ANR	8860596	Argument	( ulong ) ( pre + 1 )		8860443	4					
ANR	8860597	CastExpression	( ulong ) ( pre + 1 )		8860443	0					
ANR	8860598	CastTarget	ulong		8860443	0					
ANR	8860599	AdditiveExpression	pre + 1		8860443	1		+			
ANR	8860600	Identifier	pre		8860443	0					
ANR	8860601	PrimaryExpression	1		8860443	1					
ANR	8860602	ExpressionStatement	"( * finalize ) ( gcst -> cur_mem , pre + 1 )"	1197:12:39006:39042	8860443	1	True				
ANR	8860603	CallExpression	"( * finalize ) ( gcst -> cur_mem , pre + 1 )"		8860443	0					
ANR	8860604	Callee	* finalize		8860443	0					
ANR	8860605	UnaryOperationExpression	* finalize		8860443	0					
ANR	8860606	UnaryOperator	*		8860443	0					
ANR	8860607	Identifier	finalize		8860443	1					
ANR	8860608	ArgumentList	gcst -> cur_mem		8860443	1					
ANR	8860609	Argument	gcst -> cur_mem		8860443	0					
ANR	8860610	PtrMemberAccess	gcst -> cur_mem		8860443	0					
ANR	8860611	Identifier	gcst		8860443	0					
ANR	8860612	Identifier	cur_mem		8860443	1					
ANR	8860613	Argument	pre + 1		8860443	1					
ANR	8860614	AdditiveExpression	pre + 1		8860443	0		+			
ANR	8860615	Identifier	pre		8860443	0					
ANR	8860616	PrimaryExpression	1		8860443	1					
ANR	8860617	ExpressionStatement	pfree = ( byte * ) pre	1199:8:39062:39082	8860443	2	True				
ANR	8860618	AssignmentExpression	pfree = ( byte * ) pre		8860443	0		=			
ANR	8860619	Identifier	pfree		8860443	0					
ANR	8860620	CastExpression	( byte * ) pre		8860443	1					
ANR	8860621	CastTarget	byte *		8860443	0					
ANR	8860622	Identifier	pre		8860443	1					
ANR	8860623	ExpressionStatement	pre -> o_back = ( pfree - ( byte * ) chead ) >> obj_back_shift	1200:8:39092:39148	8860443	3	True				
ANR	8860624	AssignmentExpression	pre -> o_back = ( pfree - ( byte * ) chead ) >> obj_back_shift		8860443	0		=			
ANR	8860625	PtrMemberAccess	pre -> o_back		8860443	0					
ANR	8860626	Identifier	pre		8860443	0					
ANR	8860627	Identifier	o_back		8860443	1					
ANR	8860628	ShiftExpression	( pfree - ( byte * ) chead ) >> obj_back_shift		8860443	1		>>			
ANR	8860629	AdditiveExpression	pfree - ( byte * ) chead		8860443	0		-			
ANR	8860630	Identifier	pfree		8860443	0					
ANR	8860631	CastExpression	( byte * ) chead		8860443	1					
ANR	8860632	CastTarget	byte *		8860443	0					
ANR	8860633	Identifier	chead		8860443	1					
ANR	8860634	Identifier	obj_back_shift		8860443	1					
ANR	8860635	ExpressionStatement	pre -> o_nreloc = reloc	1201:8:39158:39179	8860443	4	True				
ANR	8860636	AssignmentExpression	pre -> o_nreloc = reloc		8860443	0		=			
ANR	8860637	PtrMemberAccess	pre -> o_nreloc		8860443	0					
ANR	8860638	Identifier	pre		8860443	0					
ANR	8860639	Identifier	o_nreloc		8860443	1					
ANR	8860640	Identifier	reloc		8860443	1					
ANR	8860641	ExpressionStatement	"if_debug3m ( '7' , gcst -> heap , "" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"" , pre , ( ulong ) size , ( unsigned int ) reloc )"	1202:8:39189:39322	8860443	5	True				
ANR	8860642	CallExpression	"if_debug3m ( '7' , gcst -> heap , "" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"" , pre , ( ulong ) size , ( unsigned int ) reloc )"		8860443	0					
ANR	8860643	Callee	if_debug3m		8860443	0					
ANR	8860644	Identifier	if_debug3m		8860443	0					
ANR	8860645	ArgumentList	'7'		8860443	1					
ANR	8860646	Argument	'7'		8860443	0					
ANR	8860647	PrimaryExpression	'7'		8860443	0					
ANR	8860648	Argument	gcst -> heap		8860443	1					
ANR	8860649	PtrMemberAccess	gcst -> heap		8860443	0					
ANR	8860650	Identifier	gcst		8860443	0					
ANR	8860651	Identifier	heap		8860443	1					
ANR	8860652	Argument	""" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"""		8860443	2					
ANR	8860653	PrimaryExpression	""" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"""		8860443	0					
ANR	8860654	Argument	pre		8860443	3					
ANR	8860655	Identifier	pre		8860443	0					
ANR	8860656	Argument	( ulong ) size		8860443	4					
ANR	8860657	CastExpression	( ulong ) size		8860443	0					
ANR	8860658	CastTarget	ulong		8860443	0					
ANR	8860659	Identifier	size		8860443	1					
ANR	8860660	Argument	( unsigned int ) reloc		8860443	5					
ANR	8860661	CastExpression	( unsigned int ) reloc		8860443	0					
ANR	8860662	CastTarget	unsigned int		8860443	0					
ANR	8860663	Identifier	reloc		8860443	1					
ANR	8860664	ElseStatement	else		8860443	0					
ANR	8860665	CompoundStatement		29:11:1138:1138	8860443	0					
ANR	8860666	ExpressionStatement	"debug_check_object ( pre , cp , gcst )"	1205:8:39367:39400	8860443	0	True				
ANR	8860667	CallExpression	"debug_check_object ( pre , cp , gcst )"		8860443	0					
ANR	8860668	Callee	debug_check_object		8860443	0					
ANR	8860669	Identifier	debug_check_object		8860443	0					
ANR	8860670	ArgumentList	pre		8860443	1					
ANR	8860671	Argument	pre		8860443	0					
ANR	8860672	Identifier	pre		8860443	0					
ANR	8860673	Argument	cp		8860443	1					
ANR	8860674	Identifier	cp		8860443	0					
ANR	8860675	Argument	gcst		8860443	2					
ANR	8860676	Identifier	gcst		8860443	0					
ANR	8860677	ExpressionStatement	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift	1206:8:39410:39464	8860443	1	True				
ANR	8860678	AssignmentExpression	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift		8860443	0		=			
ANR	8860679	PtrMemberAccess	pre -> o_back		8860443	0					
ANR	8860680	Identifier	pre		8860443	0					
ANR	8860681	Identifier	o_back		8860443	1					
ANR	8860682	ShiftExpression	( ( byte * ) pre - pfree ) >> obj_back_shift		8860443	1		>>			
ANR	8860683	AdditiveExpression	( byte * ) pre - pfree		8860443	0		-			
ANR	8860684	CastExpression	( byte * ) pre		8860443	0					
ANR	8860685	CastTarget	byte *		8860443	0					
ANR	8860686	Identifier	pre		8860443	1					
ANR	8860687	Identifier	pfree		8860443	1					
ANR	8860688	Identifier	obj_back_shift		8860443	1					
ANR	8860689	Statement	END_OBJECTS_SCAN	1208:4:39476:39491	8860443	12	True				
ANR	8860690	IfStatement	if ( reloc != 0 )		8860443	13					
ANR	8860691	Condition	reloc != 0	1210:8:39514:39523	8860443	0	True				
ANR	8860692	EqualityExpression	reloc != 0		8860443	0		!=			
ANR	8860693	Identifier	reloc		8860443	0					
ANR	8860694	PrimaryExpression	0		8860443	1					
ANR	8860695	CompoundStatement		35:20:1329:1329	8860443	1					
ANR	8860696	ExpressionStatement	"if_debug1m ( '6' , gcst -> heap , ""[6]freed %u"" , ( unsigned int ) reloc )"	1211:8:39536:39599	8860443	0	True				
ANR	8860697	CallExpression	"if_debug1m ( '6' , gcst -> heap , ""[6]freed %u"" , ( unsigned int ) reloc )"		8860443	0					
ANR	8860698	Callee	if_debug1m		8860443	0					
ANR	8860699	Identifier	if_debug1m		8860443	0					
ANR	8860700	ArgumentList	'6'		8860443	1					
ANR	8860701	Argument	'6'		8860443	0					
ANR	8860702	PrimaryExpression	'6'		8860443	0					
ANR	8860703	Argument	gcst -> heap		8860443	1					
ANR	8860704	PtrMemberAccess	gcst -> heap		8860443	0					
ANR	8860705	Identifier	gcst		8860443	0					
ANR	8860706	Identifier	heap		8860443	1					
ANR	8860707	Argument	"""[6]freed %u"""		8860443	2					
ANR	8860708	PrimaryExpression	"""[6]freed %u"""		8860443	0					
ANR	8860709	Argument	( unsigned int ) reloc		8860443	3					
ANR	8860710	CastExpression	( unsigned int ) reloc		8860443	0					
ANR	8860711	CastTarget	unsigned int		8860443	0					
ANR	8860712	Identifier	reloc		8860443	1					
ANR	8860713	ExpressionStatement	"if_debug_clump ( '6' , gcst -> heap , "" in"" , cp )"	1212:8:39609:39651	8860443	1	True				
ANR	8860714	CallExpression	"if_debug_clump ( '6' , gcst -> heap , "" in"" , cp )"		8860443	0					
ANR	8860715	Callee	if_debug_clump		8860443	0					
ANR	8860716	Identifier	if_debug_clump		8860443	0					
ANR	8860717	ArgumentList	'6'		8860443	1					
ANR	8860718	Argument	'6'		8860443	0					
ANR	8860719	PrimaryExpression	'6'		8860443	0					
ANR	8860720	Argument	gcst -> heap		8860443	1					
ANR	8860721	PtrMemberAccess	gcst -> heap		8860443	0					
ANR	8860722	Identifier	gcst		8860443	0					
ANR	8860723	Identifier	heap		8860443	1					
ANR	8860724	Argument	""" in"""		8860443	2					
ANR	8860725	PrimaryExpression	""" in"""		8860443	0					
ANR	8860726	Argument	cp		8860443	3					
ANR	8860727	Identifier	cp		8860443	0					
ANR	8860728	ReturnType	static void		8860443	1					
ANR	8860729	Identifier	gc_objects_set_reloc		8860443	2					
ANR	8860730	ParameterList	"gc_state_t * gcst , clump_t * cp"		8860443	3					
ANR	8860731	Parameter	gc_state_t * gcst	1175:21:38163:38179	8860443	0	True				
ANR	8860732	ParameterType	gc_state_t *		8860443	0					
ANR	8860733	Identifier	gcst		8860443	1					
ANR	8860734	Parameter	clump_t * cp	1175:40:38182:38193	8860443	1	True				
ANR	8860735	ParameterType	clump_t *		8860443	0					
ANR	8860736	Identifier	cp		8860443	1					
ANR	8860737	CFGEntryNode	ENTRY		8860443		True				
ANR	8860738	CFGExitNode	EXIT		8860443		True				
ANR	8860739	Symbol	procs		8860443						
ANR	8860740	Symbol	obj_align_round		8860443						
ANR	8860741	Symbol	pfree		8860443						
ANR	8860742	Symbol	* procs -> set_reloc		8860443						
ANR	8860743	Symbol	pre -> o_back		8860443						
ANR	8860744	Symbol	gcst		8860443						
ANR	8860745	Symbol	* pre		8860443						
ANR	8860746	Symbol	obj_back_shift		8860443						
ANR	8860747	Symbol	cp -> chead		8860443						
ANR	8860748	Symbol	gcst -> heap		8860443						
ANR	8860749	Symbol	struct_proc_finalize		8860443						
ANR	8860750	Symbol	* * procs		8860443						
ANR	8860751	Symbol	pre -> o_nreloc		8860443						
ANR	8860752	Symbol	pre -> o_type		8860443						
ANR	8860753	Symbol	pre -> o_type -> finalize		8860443						
ANR	8860754	Symbol	reloc		8860443						
ANR	8860755	Symbol	procs -> set_reloc		8860443						
ANR	8860756	Symbol	chead		8860443						
ANR	8860757	Symbol	pre		8860443						
ANR	8860758	Symbol	struct_type_name_string		8860443						
ANR	8860759	Symbol	* pre -> o_type		8860443						
ANR	8860760	Symbol	* procs		8860443						
ANR	8860761	Symbol	gcst -> cur_mem		8860443						
ANR	8860762	Symbol	& chead -> free		8860443						
ANR	8860763	Symbol	cp		8860443						
ANR	8860764	Symbol	* gcst		8860443						
ANR	8860765	Symbol	* cp		8860443						
ANR	8860766	Symbol	size		8860443						
ANR	8860767	Symbol	* * pre		8860443						
ANR	8860768	Symbol	finalize		8860443						
ANR	8860769	Symbol	o_is_unmarked		8860443						
ANR	8860770	Symbol	pre -> o_type -> shared		8860443						
ANR	8860771	Function	gc_do_reloc	1220:0:39766:40887							
ANR	8860772	FunctionDef	"gc_do_reloc (clump_t * cp , gs_ref_memory_t * mem , gc_state_t * pstate)"		8860771	0					
ANR	8860773	CompoundStatement		1222:0:39848:40887	8860771	0					
ANR	8860774	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1223:4:39854:39885	8860771	0	True				
ANR	8860775	IdentifierDecl	* chead = cp -> chead		8860771	0					
ANR	8860776	IdentifierDeclType	clump_head_t *		8860771	0					
ANR	8860777	Identifier	chead		8860771	1					
ANR	8860778	AssignmentExpression	* chead = cp -> chead		8860771	2		=			
ANR	8860779	Identifier	chead		8860771	0					
ANR	8860780	PtrMemberAccess	cp -> chead		8860771	1					
ANR	8860781	Identifier	cp		8860771	0					
ANR	8860782	Identifier	chead		8860771	1					
ANR	8860783	ExpressionStatement	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating in clump"" , cp )"	1225:4:39892:39967	8860771	1	True				
ANR	8860784	CallExpression	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating in clump"" , cp )"		8860771	0					
ANR	8860785	Callee	if_debug_clump		8860771	0					
ANR	8860786	Identifier	if_debug_clump		8860771	0					
ANR	8860787	ArgumentList	'6'		8860771	1					
ANR	8860788	Argument	'6'		8860771	0					
ANR	8860789	PrimaryExpression	'6'		8860771	0					
ANR	8860790	Argument	( const gs_memory_t * ) mem		8860771	1					
ANR	8860791	CastExpression	( const gs_memory_t * ) mem		8860771	0					
ANR	8860792	CastTarget	const gs_memory_t *		8860771	0					
ANR	8860793	Identifier	mem		8860771	1					
ANR	8860794	Argument	"""[6]relocating in clump"""		8860771	2					
ANR	8860795	PrimaryExpression	"""[6]relocating in clump"""		8860771	0					
ANR	8860796	Argument	cp		8860771	3					
ANR	8860797	Identifier	cp		8860771	0					
ANR	8860798	Statement	SCAN_CLUMP_OBJECTS	1226:4:39973:39990	8860771	2	True				
ANR	8860799	Statement	(	1226:22:39991:39991	8860771	3	True				
ANR	8860800	Statement	cp	1226:23:39992:39993	8860771	4	True				
ANR	8860801	Statement	)	1226:25:39994:39994	8860771	5	True				
ANR	8860802	Statement	DO_ALL	1227:8:40004:40009	8860771	6	True				
ANR	8860803	ExpressionStatement	pstate -> container = cp	1229:8:40032:40054	8860771	7	True				
ANR	8860804	AssignmentExpression	pstate -> container = cp		8860771	0		=			
ANR	8860805	PtrMemberAccess	pstate -> container		8860771	0					
ANR	8860806	Identifier	pstate		8860771	0					
ANR	8860807	Identifier	container		8860771	1					
ANR	8860808	Identifier	cp		8860771	1					
ANR	8860809	IfStatement	if ( o_is_untraced ( pre ) || pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead )		8860771	8					
ANR	8860810	Condition	o_is_untraced ( pre ) || pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead	1235:12:40284:40379	8860771	0	True				
ANR	8860811	OrExpression	o_is_untraced ( pre ) || pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead		8860771	0		||			
ANR	8860812	CallExpression	o_is_untraced ( pre )		8860771	0					
ANR	8860813	Callee	o_is_untraced		8860771	0					
ANR	8860814	Identifier	o_is_untraced		8860771	0					
ANR	8860815	ArgumentList	pre		8860771	1					
ANR	8860816	Argument	pre		8860771	0					
ANR	8860817	Identifier	pre		8860771	0					
ANR	8860818	EqualityExpression	pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead		8860771	1		!=			
ANR	8860819	ShiftExpression	pre -> o_back << obj_back_shift		8860771	0		<<			
ANR	8860820	PtrMemberAccess	pre -> o_back		8860771	0					
ANR	8860821	Identifier	pre		8860771	0					
ANR	8860822	Identifier	o_back		8860771	1					
ANR	8860823	Identifier	obj_back_shift		8860771	1					
ANR	8860824	AdditiveExpression	( byte * ) pre - ( byte * ) chead		8860771	1		-			
ANR	8860825	CastExpression	( byte * ) pre		8860771	0					
ANR	8860826	CastTarget	byte *		8860771	0					
ANR	8860827	Identifier	pre		8860771	1					
ANR	8860828	CastExpression	( byte * ) chead		8860771	1					
ANR	8860829	CastTarget	byte *		8860771	0					
ANR	8860830	Identifier	chead		8860771	1					
ANR	8860831	CompoundStatement		16:14:546:546	8860771	1					
ANR	8860832	ExpressionStatement	struct_proc_reloc_ptrs ( ( * proc ) ) = pre -> o_type -> reloc_ptrs	1238:12:40409:40482	8860771	0	True				
ANR	8860833	AssignmentExpression	struct_proc_reloc_ptrs ( ( * proc ) ) = pre -> o_type -> reloc_ptrs		8860771	0		=			
ANR	8860834	CallExpression	struct_proc_reloc_ptrs ( ( * proc ) )		8860771	0					
ANR	8860835	Callee	struct_proc_reloc_ptrs		8860771	0					
ANR	8860836	Identifier	struct_proc_reloc_ptrs		8860771	0					
ANR	8860837	ArgumentList	* proc		8860771	1					
ANR	8860838	Argument	* proc		8860771	0					
ANR	8860839	UnaryOperationExpression	* proc		8860771	0					
ANR	8860840	UnaryOperator	*		8860771	0					
ANR	8860841	Identifier	proc		8860771	1					
ANR	8860842	PtrMemberAccess	pre -> o_type -> reloc_ptrs		8860771	1					
ANR	8860843	PtrMemberAccess	pre -> o_type		8860771	0					
ANR	8860844	Identifier	pre		8860771	0					
ANR	8860845	Identifier	o_type		8860771	1					
ANR	8860846	Identifier	reloc_ptrs		8860771	1					
ANR	8860847	ExpressionStatement	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7]relocating ptrs in %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"	1241:12:40497:40714	8860771	1	True				
ANR	8860848	CallExpression	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7]relocating ptrs in %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"		8860771	0					
ANR	8860849	Callee	if_debug3m		8860771	0					
ANR	8860850	Identifier	if_debug3m		8860771	0					
ANR	8860851	ArgumentList	'7'		8860771	1					
ANR	8860852	Argument	'7'		8860771	0					
ANR	8860853	PrimaryExpression	'7'		8860771	0					
ANR	8860854	Argument	( const gs_memory_t * ) mem		8860771	1					
ANR	8860855	CastExpression	( const gs_memory_t * ) mem		8860771	0					
ANR	8860856	CastTarget	const gs_memory_t *		8860771	0					
ANR	8860857	Identifier	mem		8860771	1					
ANR	8860858	Argument	""" [7]relocating ptrs in %s(%lu) 0x%lx\\n"""		8860771	2					
ANR	8860859	PrimaryExpression	""" [7]relocating ptrs in %s(%lu) 0x%lx\\n"""		8860771	0					
ANR	8860860	Argument	struct_type_name_string ( pre -> o_type )		8860771	3					
ANR	8860861	CallExpression	struct_type_name_string ( pre -> o_type )		8860771	0					
ANR	8860862	Callee	struct_type_name_string		8860771	0					
ANR	8860863	Identifier	struct_type_name_string		8860771	0					
ANR	8860864	ArgumentList	pre -> o_type		8860771	1					
ANR	8860865	Argument	pre -> o_type		8860771	0					
ANR	8860866	PtrMemberAccess	pre -> o_type		8860771	0					
ANR	8860867	Identifier	pre		8860771	0					
ANR	8860868	Identifier	o_type		8860771	1					
ANR	8860869	Argument	( ulong ) size		8860771	4					
ANR	8860870	CastExpression	( ulong ) size		8860771	0					
ANR	8860871	CastTarget	ulong		8860771	0					
ANR	8860872	Identifier	size		8860771	1					
ANR	8860873	Argument	( ulong ) pre		8860771	5					
ANR	8860874	CastExpression	( ulong ) pre		8860771	0					
ANR	8860875	CastTarget	ulong		8860771	0					
ANR	8860876	Identifier	pre		8860771	1					
ANR	8860877	IfStatement	if ( proc != 0 )		8860771	2					
ANR	8860878	Condition	proc != 0	1245:16:40732:40740	8860771	0	True				
ANR	8860879	EqualityExpression	proc != 0		8860771	0		!=			
ANR	8860880	Identifier	proc		8860771	0					
ANR	8860881	PrimaryExpression	0		8860771	1					
ANR	8860882	ExpressionStatement	"( * proc ) ( pre + 1 , size , pre -> o_type , pstate )"	1246:16:40759:40803	8860771	1	True				
ANR	8860883	CallExpression	"( * proc ) ( pre + 1 , size , pre -> o_type , pstate )"		8860771	0					
ANR	8860884	Callee	* proc		8860771	0					
ANR	8860885	UnaryOperationExpression	* proc		8860771	0					
ANR	8860886	UnaryOperator	*		8860771	0					
ANR	8860887	Identifier	proc		8860771	1					
ANR	8860888	ArgumentList	pre + 1		8860771	1					
ANR	8860889	Argument	pre + 1		8860771	0					
ANR	8860890	AdditiveExpression	pre + 1		8860771	0		+			
ANR	8860891	Identifier	pre		8860771	0					
ANR	8860892	PrimaryExpression	1		8860771	1					
ANR	8860893	Argument	size		8860771	1					
ANR	8860894	Identifier	size		8860771	0					
ANR	8860895	Argument	pre -> o_type		8860771	2					
ANR	8860896	PtrMemberAccess	pre -> o_type		8860771	0					
ANR	8860897	Identifier	pre		8860771	0					
ANR	8860898	Identifier	o_type		8860771	1					
ANR	8860899	Argument	pstate		8860771	3					
ANR	8860900	Identifier	pstate		8860771	0					
ANR	8860901	ExpressionStatement	pstate -> container = 0	1249:8:40836:40857	8860771	9	True				
ANR	8860902	AssignmentExpression	pstate -> container = 0		8860771	0		=			
ANR	8860903	PtrMemberAccess	pstate -> container		8860771	0					
ANR	8860904	Identifier	pstate		8860771	0					
ANR	8860905	Identifier	container		8860771	1					
ANR	8860906	PrimaryExpression	0		8860771	1					
ANR	8860907	Statement	END_OBJECTS_SCAN	1251:4:40870:40885	8860771	10	True				
ANR	8860908	ReturnType	static void		8860771	1					
ANR	8860909	Identifier	gc_do_reloc		8860771	2					
ANR	8860910	ParameterList	"clump_t * cp , gs_ref_memory_t * mem , gc_state_t * pstate"		8860771	3					
ANR	8860911	Parameter	clump_t * cp	1221:12:39790:39801	8860771	0	True				
ANR	8860912	ParameterType	clump_t *		8860771	0					
ANR	8860913	Identifier	cp		8860771	1					
ANR	8860914	Parameter	gs_ref_memory_t * mem	1221:26:39804:39824	8860771	1	True				
ANR	8860915	ParameterType	gs_ref_memory_t *		8860771	0					
ANR	8860916	Identifier	mem		8860771	1					
ANR	8860917	Parameter	gc_state_t * pstate	1221:49:39827:39845	8860771	2	True				
ANR	8860918	ParameterType	gc_state_t *		8860771	0					
ANR	8860919	Identifier	pstate		8860771	1					
ANR	8860920	CFGEntryNode	ENTRY		8860771		True				
ANR	8860921	CFGExitNode	EXIT		8860771		True				
ANR	8860922	Symbol	chead		8860771						
ANR	8860923	Symbol	pre		8860771						
ANR	8860924	Symbol	proc		8860771						
ANR	8860925	Symbol	struct_type_name_string		8860771						
ANR	8860926	Symbol	* pre -> o_type		8860771						
ANR	8860927	Symbol	pstate		8860771						
ANR	8860928	Symbol	pre -> o_back		8860771						
ANR	8860929	Symbol	struct_proc_reloc_ptrs		8860771						
ANR	8860930	Symbol	pre -> o_type -> reloc_ptrs		8860771						
ANR	8860931	Symbol	cp		8860771						
ANR	8860932	Symbol	* pre		8860771						
ANR	8860933	Symbol	obj_back_shift		8860771						
ANR	8860934	Symbol	* proc		8860771						
ANR	8860935	Symbol	* cp		8860771						
ANR	8860936	Symbol	cp -> chead		8860771						
ANR	8860937	Symbol	mem		8860771						
ANR	8860938	Symbol	o_is_untraced		8860771						
ANR	8860939	Symbol	size		8860771						
ANR	8860940	Symbol	* pstate		8860771						
ANR	8860941	Symbol	pre -> o_type		8860771						
ANR	8860942	Symbol	* * pre		8860771						
ANR	8860943	Symbol	pstate -> container		8860771						
ANR	8860944	Function	print_reloc_proc	1257:0:41072:41280							
ANR	8860945	FunctionDef	"print_reloc_proc (const void * obj , const char * cname , const void * robj)"		8860944	0					
ANR	8860946	CompoundStatement		1259:0:41156:41280	8860944	0					
ANR	8860947	ExpressionStatement	"if_debug3 ( '9' , ""  [9]relocate %s * 0x%lx to 0x%lx\\n"" , cname , ( ulong ) obj , ( ulong ) robj )"	1260:4:41162:41261	8860944	0	True				
ANR	8860948	CallExpression	"if_debug3 ( '9' , ""  [9]relocate %s * 0x%lx to 0x%lx\\n"" , cname , ( ulong ) obj , ( ulong ) robj )"		8860944	0					
ANR	8860949	Callee	if_debug3		8860944	0					
ANR	8860950	Identifier	if_debug3		8860944	0					
ANR	8860951	ArgumentList	'9'		8860944	1					
ANR	8860952	Argument	'9'		8860944	0					
ANR	8860953	PrimaryExpression	'9'		8860944	0					
ANR	8860954	Argument	"""  [9]relocate %s * 0x%lx to 0x%lx\\n"""		8860944	1					
ANR	8860955	PrimaryExpression	"""  [9]relocate %s * 0x%lx to 0x%lx\\n"""		8860944	0					
ANR	8860956	Argument	cname		8860944	2					
ANR	8860957	Identifier	cname		8860944	0					
ANR	8860958	Argument	( ulong ) obj		8860944	3					
ANR	8860959	CastExpression	( ulong ) obj		8860944	0					
ANR	8860960	CastTarget	ulong		8860944	0					
ANR	8860961	Identifier	obj		8860944	1					
ANR	8860962	Argument	( ulong ) robj		8860944	4					
ANR	8860963	CastExpression	( ulong ) robj		8860944	0					
ANR	8860964	CastTarget	ulong		8860944	0					
ANR	8860965	Identifier	robj		8860944	1					
ANR	8860966	ReturnStatement	return robj ;	1262:4:41267:41278	8860944	1	True				
ANR	8860967	Identifier	robj		8860944	0					
ANR	8860968	ReturnType	const void *		8860944	1					
ANR	8860969	Identifier	print_reloc_proc		8860944	2					
ANR	8860970	ParameterList	"const void * obj , const char * cname , const void * robj"		8860944	3					
ANR	8860971	Parameter	const void * obj	1258:17:41102:41116	8860944	0	True				
ANR	8860972	ParameterType	const void *		8860944	0					
ANR	8860973	Identifier	obj		8860944	1					
ANR	8860974	Parameter	const char * cname	1258:34:41119:41135	8860944	1	True				
ANR	8860975	ParameterType	const char *		8860944	0					
ANR	8860976	Identifier	cname		8860944	1					
ANR	8860977	Parameter	const void * robj	1258:53:41138:41153	8860944	2	True				
ANR	8860978	ParameterType	const void *		8860944	0					
ANR	8860979	Identifier	robj		8860944	1					
ANR	8860980	CFGEntryNode	ENTRY		8860944		True				
ANR	8860981	CFGExitNode	EXIT		8860944		True				
ANR	8860982	Symbol	robj		8860944						
ANR	8860983	Symbol	obj		8860944						
ANR	8860984	Symbol	cname		8860944						
ANR	8860985	Function	igc_reloc_struct_ptr	1267:0:41406:43120							
ANR	8860986	FunctionDef	"igc_reloc_struct_ptr (const void * obj , gc_state_t * gcst)"		8860985	0					
ANR	8860987	CompoundStatement		1269:0:41513:43120	8860985	0					
ANR	8860988	Statement	const	1270:4:41519:41523	8860985	0	True				
ANR	8860989	Statement	obj_header_t	1270:10:41525:41536	8860985	1	True				
ANR	8860990	Statement	*	1270:23:41538:41538	8860985	2	True				
ANR	8860991	Statement	const	1270:24:41539:41543	8860985	3	True				
ANR	8860992	ExpressionStatement	optr = ( const obj_header_t * ) obj	1270:30:41545:41577	8860985	4	True				
ANR	8860993	AssignmentExpression	optr = ( const obj_header_t * ) obj		8860985	0		=			
ANR	8860994	Identifier	optr		8860985	0					
ANR	8860995	CastExpression	( const obj_header_t * ) obj		8860985	1					
ANR	8860996	CastTarget	const obj_header_t *		8860985	0					
ANR	8860997	Identifier	obj		8860985	1					
ANR	8860998	IdentifierDeclStatement	const void * robj ;	1271:4:41583:41599	8860985	5	True				
ANR	8860999	IdentifierDecl	* robj		8860985	0					
ANR	8861000	IdentifierDeclType	const void *		8860985	0					
ANR	8861001	Identifier	robj		8860985	1					
ANR	8861002	IfStatement	if ( obj == 0 )		8860985	6					
ANR	8861003	Condition	obj == 0	1273:8:41610:41617	8860985	0	True				
ANR	8861004	EqualityExpression	obj == 0		8860985	0		==			
ANR	8861005	Identifier	obj		8860985	0					
ANR	8861006	PrimaryExpression	0		8860985	1					
ANR	8861007	CompoundStatement		5:18:106:106	8860985	1					
ANR	8861008	ExpressionStatement	"discard ( print_reloc ( obj , ""NULL"" , 0 ) )"	1274:8:41630:41666	8860985	0	True				
ANR	8861009	CallExpression	"discard ( print_reloc ( obj , ""NULL"" , 0 ) )"		8860985	0					
ANR	8861010	Callee	discard		8860985	0					
ANR	8861011	Identifier	discard		8860985	0					
ANR	8861012	ArgumentList	"print_reloc ( obj , ""NULL"" , 0 )"		8860985	1					
ANR	8861013	Argument	"print_reloc ( obj , ""NULL"" , 0 )"		8860985	0					
ANR	8861014	CallExpression	"print_reloc ( obj , ""NULL"" , 0 )"		8860985	0					
ANR	8861015	Callee	print_reloc		8860985	0					
ANR	8861016	Identifier	print_reloc		8860985	0					
ANR	8861017	ArgumentList	obj		8860985	1					
ANR	8861018	Argument	obj		8860985	0					
ANR	8861019	Identifier	obj		8860985	0					
ANR	8861020	Argument	"""NULL"""		8860985	1					
ANR	8861021	PrimaryExpression	"""NULL"""		8860985	0					
ANR	8861022	Argument	0		8860985	2					
ANR	8861023	PrimaryExpression	0		8860985	0					
ANR	8861024	ReturnStatement	return 0 ;	1275:8:41676:41684	8860985	1	True				
ANR	8861025	PrimaryExpression	0		8860985	0					
ANR	8861026	ExpressionStatement	"debug_check_object ( optr - 1 , NULL , gcst )"	1277:4:41696:41736	8860985	7	True				
ANR	8861027	CallExpression	"debug_check_object ( optr - 1 , NULL , gcst )"		8860985	0					
ANR	8861028	Callee	debug_check_object		8860985	0					
ANR	8861029	Identifier	debug_check_object		8860985	0					
ANR	8861030	ArgumentList	optr - 1		8860985	1					
ANR	8861031	Argument	optr - 1		8860985	0					
ANR	8861032	AdditiveExpression	optr - 1		8860985	0		-			
ANR	8861033	Identifier	optr		8860985	0					
ANR	8861034	PrimaryExpression	1		8860985	1					
ANR	8861035	Argument	NULL		8860985	1					
ANR	8861036	Identifier	NULL		8860985	0					
ANR	8861037	Argument	gcst		8860985	2					
ANR	8861038	Identifier	gcst		8860985	0					
ANR	8861039	CompoundStatement		11:8:238:265	8860985	8					
ANR	8861040	IdentifierDeclStatement	uint back = optr [ - 1 ] . o_back ;	1279:8:41752:41779	8860985	0	True				
ANR	8861041	IdentifierDecl	back = optr [ - 1 ] . o_back		8860985	0					
ANR	8861042	IdentifierDeclType	uint		8860985	0					
ANR	8861043	Identifier	back		8860985	1					
ANR	8861044	AssignmentExpression	back = optr [ - 1 ] . o_back		8860985	2		=			
ANR	8861045	Identifier	back		8860985	0					
ANR	8861046	MemberAccess	optr [ - 1 ] . o_back		8860985	1					
ANR	8861047	ArrayIndexing	optr [ - 1 ]		8860985	0					
ANR	8861048	Identifier	optr		8860985	0					
ANR	8861049	UnaryOperationExpression	- 1		8860985	1					
ANR	8861050	UnaryOperator	-		8860985	0					
ANR	8861051	PrimaryExpression	1		8860985	1					
ANR	8861052	Identifier	o_back		8860985	1					
ANR	8861053	IfStatement	if ( back == o_untraced )		8860985	1					
ANR	8861054	Condition	back == o_untraced	1281:12:41794:41811	8860985	0	True				
ANR	8861055	EqualityExpression	back == o_untraced		8860985	0		==			
ANR	8861056	Identifier	back		8860985	0					
ANR	8861057	Identifier	o_untraced		8860985	1					
ANR	8861058	ExpressionStatement	robj = obj	1282:12:41826:41836	8860985	1	True				
ANR	8861059	AssignmentExpression	robj = obj		8860985	0		=			
ANR	8861060	Identifier	robj		8860985	0					
ANR	8861061	Identifier	obj		8860985	1					
ANR	8861062	ElseStatement	else		8860985	0					
ANR	8861063	CompoundStatement		18:12:407:436	8860985	0					
ANR	8861064	IdentifierDeclStatement	clump_t * cp = gcst -> container ;	1286:12:41921:41950	8860985	0	True				
ANR	8861065	IdentifierDecl	* cp = gcst -> container		8860985	0					
ANR	8861066	IdentifierDeclType	clump_t *		8860985	0					
ANR	8861067	Identifier	cp		8860985	1					
ANR	8861068	AssignmentExpression	* cp = gcst -> container		8860985	2		=			
ANR	8861069	Identifier	cp		8860985	0					
ANR	8861070	PtrMemberAccess	gcst -> container		8860985	1					
ANR	8861071	Identifier	gcst		8860985	0					
ANR	8861072	Identifier	container		8860985	1					
ANR	8861073	IfStatement	if ( cp != 0 && cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop )		8860985	1					
ANR	8861074	Condition	cp != 0 && cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop	1288:16:41969:42028	8860985	0	True				
ANR	8861075	AndExpression	cp != 0 && cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop		8860985	0		&&			
ANR	8861076	EqualityExpression	cp != 0		8860985	0		!=			
ANR	8861077	Identifier	cp		8860985	0					
ANR	8861078	PrimaryExpression	0		8860985	1					
ANR	8861079	AndExpression	cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop		8860985	1		&&			
ANR	8861080	RelationalExpression	cp -> cbase <= ( byte * ) obj		8860985	0		<=			
ANR	8861081	PtrMemberAccess	cp -> cbase		8860985	0					
ANR	8861082	Identifier	cp		8860985	0					
ANR	8861083	Identifier	cbase		8860985	1					
ANR	8861084	CastExpression	( byte * ) obj		8860985	1					
ANR	8861085	CastTarget	byte *		8860985	0					
ANR	8861086	Identifier	obj		8860985	1					
ANR	8861087	RelationalExpression	( byte * ) obj < cp -> ctop		8860985	1		<			
ANR	8861088	CastExpression	( byte * ) obj		8860985	0					
ANR	8861089	CastTarget	byte *		8860985	0					
ANR	8861090	Identifier	obj		8860985	1					
ANR	8861091	PtrMemberAccess	cp -> ctop		8860985	1					
ANR	8861092	Identifier	cp		8860985	0					
ANR	8861093	Identifier	ctop		8860985	1					
ANR	8861094	CompoundStatement		20:78:517:517	8860985	1					
ANR	8861095	IfStatement	if ( back > ( cp -> ctop - cp -> cbase ) >> obj_back_shift )		8860985	0					
ANR	8861096	Condition	back > ( cp -> ctop - cp -> cbase ) >> obj_back_shift	1289:20:42053:42099	8860985	0	True				
ANR	8861097	RelationalExpression	back > ( cp -> ctop - cp -> cbase ) >> obj_back_shift		8860985	0		>			
ANR	8861098	Identifier	back		8860985	0					
ANR	8861099	ShiftExpression	( cp -> ctop - cp -> cbase ) >> obj_back_shift		8860985	1		>>			
ANR	8861100	AdditiveExpression	cp -> ctop - cp -> cbase		8860985	0		-			
ANR	8861101	PtrMemberAccess	cp -> ctop		8860985	0					
ANR	8861102	Identifier	cp		8860985	0					
ANR	8861103	Identifier	ctop		8860985	1					
ANR	8861104	PtrMemberAccess	cp -> cbase		8860985	1					
ANR	8861105	Identifier	cp		8860985	0					
ANR	8861106	Identifier	cbase		8860985	1					
ANR	8861107	Identifier	obj_back_shift		8860985	1					
ANR	8861108	CompoundStatement		21:69:588:588	8860985	1					
ANR	8861109	ExpressionStatement	"lprintf2 ( ""Invalid back pointer %u at 0x%lx!\\n"" , back , ( ulong ) obj )"	1290:20:42124:42219	8860985	0	True				
ANR	8861110	CallExpression	"lprintf2 ( ""Invalid back pointer %u at 0x%lx!\\n"" , back , ( ulong ) obj )"		8860985	0					
ANR	8861111	Callee	lprintf2		8860985	0					
ANR	8861112	Identifier	lprintf2		8860985	0					
ANR	8861113	ArgumentList	"""Invalid back pointer %u at 0x%lx!\\n"""		8860985	1					
ANR	8861114	Argument	"""Invalid back pointer %u at 0x%lx!\\n"""		8860985	0					
ANR	8861115	PrimaryExpression	"""Invalid back pointer %u at 0x%lx!\\n"""		8860985	0					
ANR	8861116	Argument	back		8860985	1					
ANR	8861117	Identifier	back		8860985	0					
ANR	8861118	Argument	( ulong ) obj		8860985	2					
ANR	8861119	CastExpression	( ulong ) obj		8860985	0					
ANR	8861120	CastTarget	ulong		8860985	0					
ANR	8861121	Identifier	obj		8860985	1					
ANR	8861122	ExpressionStatement	gs_abort ( NULL )	1292:20:42241:42255	8860985	1	True				
ANR	8861123	CallExpression	gs_abort ( NULL )		8860985	0					
ANR	8861124	Callee	gs_abort		8860985	0					
ANR	8861125	Identifier	gs_abort		8860985	0					
ANR	8861126	ArgumentList	NULL		8860985	1					
ANR	8861127	Argument	NULL		8860985	0					
ANR	8861128	Identifier	NULL		8860985	0					
ANR	8861129	ElseStatement	else		8860985	0					
ANR	8861130	CompoundStatement		26:19:780:780	8860985	0					
ANR	8861131	CompoundStatement		34:16:1059:1200	8860985	2					
ANR	8861132	IdentifierDeclStatement	const obj_header_t * pfree = ( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) ) ;	1299:16:42418:42555	8860985	0	True				
ANR	8861133	IdentifierDecl	* pfree = ( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) )		8860985	0					
ANR	8861134	IdentifierDeclType	const obj_header_t *		8860985	0					
ANR	8861135	Identifier	pfree		8860985	1					
ANR	8861136	AssignmentExpression	* pfree = ( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) )		8860985	2		=			
ANR	8861137	Identifier	pfree		8860985	0					
ANR	8861138	CastExpression	( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) )		8860985	1					
ANR	8861139	CastTarget	const obj_header_t *		8860985	0					
ANR	8861140	AdditiveExpression	( const char * ) ( optr - 1 ) - ( back << obj_back_shift )		8860985	1		-			
ANR	8861141	CastExpression	( const char * ) ( optr - 1 )		8860985	0					
ANR	8861142	CastTarget	const char *		8860985	0					
ANR	8861143	AdditiveExpression	optr - 1		8860985	1		-			
ANR	8861144	Identifier	optr		8860985	0					
ANR	8861145	PrimaryExpression	1		8860985	1					
ANR	8861146	ShiftExpression	back << obj_back_shift		8860985	1		<<			
ANR	8861147	Identifier	back		8860985	0					
ANR	8861148	Identifier	obj_back_shift		8860985	1					
ANR	8861149	IdentifierDeclStatement	const clump_head_t * chead = ( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) ) ;	1302:16:42573:42714	8860985	1	True				
ANR	8861150	IdentifierDecl	* chead = ( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) )		8860985	0					
ANR	8861151	IdentifierDeclType	const clump_head_t *		8860985	0					
ANR	8861152	Identifier	chead		8860985	1					
ANR	8861153	AssignmentExpression	* chead = ( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) )		8860985	2		=			
ANR	8861154	Identifier	chead		8860985	0					
ANR	8861155	CastExpression	( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) )		8860985	1					
ANR	8861156	CastTarget	const clump_head_t *		8860985	0					
ANR	8861157	AdditiveExpression	( const char * ) pfree - ( pfree -> o_back << obj_back_shift )		8860985	1		-			
ANR	8861158	CastExpression	( const char * ) pfree		8860985	0					
ANR	8861159	CastTarget	const char *		8860985	0					
ANR	8861160	Identifier	pfree		8860985	1					
ANR	8861161	ShiftExpression	pfree -> o_back << obj_back_shift		8860985	1		<<			
ANR	8861162	PtrMemberAccess	pfree -> o_back		8860985	0					
ANR	8861163	Identifier	pfree		8860985	0					
ANR	8861164	Identifier	o_back		8860985	1					
ANR	8861165	Identifier	obj_back_shift		8860985	1					
ANR	8861166	ExpressionStatement	robj = chead -> dest + ( ( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc )	1306:16:42733:42860	8860985	2	True				
ANR	8861167	AssignmentExpression	robj = chead -> dest + ( ( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc )		8860985	0		=			
ANR	8861168	Identifier	robj		8860985	0					
ANR	8861169	AdditiveExpression	chead -> dest + ( ( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc )		8860985	1		+			
ANR	8861170	PtrMemberAccess	chead -> dest		8860985	0					
ANR	8861171	Identifier	chead		8860985	0					
ANR	8861172	Identifier	dest		8860985	1					
ANR	8861173	AdditiveExpression	( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc		8860985	1		-			
ANR	8861174	CastExpression	( const char * ) obj		8860985	0					
ANR	8861175	CastTarget	const char *		8860985	0					
ANR	8861176	Identifier	obj		8860985	1					
ANR	8861177	AdditiveExpression	( const char * ) ( chead + 1 ) - pfree -> o_nreloc		8860985	1		-			
ANR	8861178	CastExpression	( const char * ) ( chead + 1 )		8860985	0					
ANR	8861179	CastTarget	const char *		8860985	0					
ANR	8861180	AdditiveExpression	chead + 1		8860985	1		+			
ANR	8861181	Identifier	chead		8860985	0					
ANR	8861182	PrimaryExpression	1		8860985	1					
ANR	8861183	PtrMemberAccess	pfree -> o_nreloc		8860985	1					
ANR	8861184	Identifier	pfree		8860985	0					
ANR	8861185	Identifier	o_nreloc		8860985	1					
ANR	8861186	CompoundStatement		46:8:1462:1497	8860985	9					
ANR	8861187	ClassDefStatement	union { const void * r ; void * w ; } u ;	1314:8:42976:43011	8860985	0	True				
ANR	8861188	IdentifierDecl	u		8860985	0					
ANR	8861189	IdentifierDeclType			8860985	0					
ANR	8861190	Identifier	u		8860985	1					
ANR	8861191	ExpressionStatement	"u . r = print_reloc ( obj , struct_type_name_string ( optr [ - 1 ] . o_type ) , robj )"	1316:8:43022:43092	8860985	1	True				
ANR	8861192	AssignmentExpression	"u . r = print_reloc ( obj , struct_type_name_string ( optr [ - 1 ] . o_type ) , robj )"		8860985	0		=			
ANR	8861193	MemberAccess	u . r		8860985	0					
ANR	8861194	Identifier	u		8860985	0					
ANR	8861195	Identifier	r		8860985	1					
ANR	8861196	CallExpression	"print_reloc ( obj , struct_type_name_string ( optr [ - 1 ] . o_type ) , robj )"		8860985	1					
ANR	8861197	Callee	print_reloc		8860985	0					
ANR	8861198	Identifier	print_reloc		8860985	0					
ANR	8861199	ArgumentList	obj		8860985	1					
ANR	8861200	Argument	obj		8860985	0					
ANR	8861201	Identifier	obj		8860985	0					
ANR	8861202	Argument	struct_type_name_string ( optr [ - 1 ] . o_type )		8860985	1					
ANR	8861203	CallExpression	struct_type_name_string ( optr [ - 1 ] . o_type )		8860985	0					
ANR	8861204	Callee	struct_type_name_string		8860985	0					
ANR	8861205	Identifier	struct_type_name_string		8860985	0					
ANR	8861206	ArgumentList	optr [ - 1 ] . o_type		8860985	1					
ANR	8861207	Argument	optr [ - 1 ] . o_type		8860985	0					
ANR	8861208	MemberAccess	optr [ - 1 ] . o_type		8860985	0					
ANR	8861209	ArrayIndexing	optr [ - 1 ]		8860985	0					
ANR	8861210	Identifier	optr		8860985	0					
ANR	8861211	UnaryOperationExpression	- 1		8860985	1					
ANR	8861212	UnaryOperator	-		8860985	0					
ANR	8861213	PrimaryExpression	1		8860985	1					
ANR	8861214	Identifier	o_type		8860985	1					
ANR	8861215	Argument	robj		8860985	2					
ANR	8861216	Identifier	robj		8860985	0					
ANR	8861217	ReturnStatement	return u . w ;	1317:8:43102:43112	8860985	2	True				
ANR	8861218	MemberAccess	u . w		8860985	0					
ANR	8861219	Identifier	u		8860985	0					
ANR	8861220	Identifier	w		8860985	1					
ANR	8861221	ReturnType	static void *		8860985	1					
ANR	8861222	Identifier	igc_reloc_struct_ptr		8860985	2					
ANR	8861223	ParameterList	"const void * obj , gc_state_t * gcst"		8860985	3					
ANR	8861224	Parameter	const void * obj	1268:21:41459:41491	8860985	0	True				
ANR	8861225	ParameterType	const void *		8860985	0					
ANR	8861226	Identifier	obj		8860985	1					
ANR	8861227	Parameter	gc_state_t * gcst	1268:56:41494:41510	8860985	1	True				
ANR	8861228	ParameterType	gc_state_t *		8860985	0					
ANR	8861229	Identifier	gcst		8860985	1					
ANR	8861230	CFGEntryNode	ENTRY		8860985		True				
ANR	8861231	CFGExitNode	EXIT		8860985		True				
ANR	8861232	Symbol	pfree		8860985						
ANR	8861233	Symbol	back		8860985						
ANR	8861234	Symbol	* chead		8860985						
ANR	8861235	Symbol	pfree -> o_nreloc		8860985						
ANR	8861236	Symbol	gcst		8860985						
ANR	8861237	Symbol	obj_back_shift		8860985						
ANR	8861238	Symbol	optr [ - 1 ] . o_type		8860985						
ANR	8861239	Symbol	o_untraced		8860985						
ANR	8861240	Symbol	cp -> ctop		8860985						
ANR	8861241	Symbol	* pfree		8860985						
ANR	8861242	Symbol	pfree -> o_back		8860985						
ANR	8861243	Symbol	chead		8860985						
ANR	8861244	Symbol	print_reloc		8860985						
ANR	8861245	Symbol	struct_type_name_string		8860985						
ANR	8861246	Symbol	NULL		8860985						
ANR	8861247	Symbol	u . w		8860985						
ANR	8861248	Symbol	chead -> dest		8860985						
ANR	8861249	Symbol	u . r		8860985						
ANR	8861250	Symbol	optr		8860985						
ANR	8861251	Symbol	gcst -> container		8860985						
ANR	8861252	Symbol	cp -> cbase		8860985						
ANR	8861253	Symbol	* gcst		8860985						
ANR	8861254	Symbol	cp		8860985						
ANR	8861255	Symbol	robj		8860985						
ANR	8861256	Symbol	* cp		8860985						
ANR	8861257	Symbol	u		8860985						
ANR	8861258	Symbol	obj		8860985						
ANR	8861259	Symbol	* optr		8860985						
ANR	8861260	Symbol	optr [ - 1 ] . o_back		8860985						
ANR	8861261	Function	gc_objects_compact	1325:0:43272:44676							
ANR	8861262	FunctionDef	"gc_objects_compact (clump_t * cp , gc_state_t * gcst)"		8861261	0					
ANR	8861263	CompoundStatement		1327:0:43336:44676	8861261	0					
ANR	8861264	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1328:4:43342:43373	8861261	0	True				
ANR	8861265	IdentifierDecl	* chead = cp -> chead		8861261	0					
ANR	8861266	IdentifierDeclType	clump_head_t *		8861261	0					
ANR	8861267	Identifier	chead		8861261	1					
ANR	8861268	AssignmentExpression	* chead = cp -> chead		8861261	2		=			
ANR	8861269	Identifier	chead		8861261	0					
ANR	8861270	PtrMemberAccess	cp -> chead		8861261	1					
ANR	8861271	Identifier	cp		8861261	0					
ANR	8861272	Identifier	chead		8861261	1					
ANR	8861273	IdentifierDeclStatement	obj_header_t * dpre = ( obj_header_t * ) chead -> dest ;	1329:4:43379:43428	8861261	1	True				
ANR	8861274	IdentifierDecl	* dpre = ( obj_header_t * ) chead -> dest		8861261	0					
ANR	8861275	IdentifierDeclType	obj_header_t *		8861261	0					
ANR	8861276	Identifier	dpre		8861261	1					
ANR	8861277	AssignmentExpression	* dpre = ( obj_header_t * ) chead -> dest		8861261	2		=			
ANR	8861278	Identifier	dpre		8861261	0					
ANR	8861279	CastExpression	( obj_header_t * ) chead -> dest		8861261	1					
ANR	8861280	CastTarget	obj_header_t *		8861261	0					
ANR	8861281	PtrMemberAccess	chead -> dest		8861261	1					
ANR	8861282	Identifier	chead		8861261	0					
ANR	8861283	Identifier	dest		8861261	1					
ANR	8861284	IdentifierDeclStatement	const gs_memory_t * cmem = gcst -> spaces . memories . named . system -> stable_memory ;	1330:4:43434:43509	8861261	2	True				
ANR	8861285	IdentifierDecl	* cmem = gcst -> spaces . memories . named . system -> stable_memory		8861261	0					
ANR	8861286	IdentifierDeclType	const gs_memory_t *		8861261	0					
ANR	8861287	Identifier	cmem		8861261	1					
ANR	8861288	AssignmentExpression	* cmem = gcst -> spaces . memories . named . system -> stable_memory		8861261	2		=			
ANR	8861289	Identifier	cmem		8861261	0					
ANR	8861290	PtrMemberAccess	gcst -> spaces . memories . named . system -> stable_memory		8861261	1					
ANR	8861291	MemberAccess	gcst -> spaces . memories . named . system		8861261	0					
ANR	8861292	MemberAccess	gcst -> spaces . memories . named		8861261	0					
ANR	8861293	MemberAccess	gcst -> spaces . memories		8861261	0					
ANR	8861294	PtrMemberAccess	gcst -> spaces		8861261	0					
ANR	8861295	Identifier	gcst		8861261	0					
ANR	8861296	Identifier	spaces		8861261	1					
ANR	8861297	Identifier	memories		8861261	1					
ANR	8861298	Identifier	named		8861261	1					
ANR	8861299	Identifier	system		8861261	1					
ANR	8861300	Identifier	stable_memory		8861261	1					
ANR	8861301	Statement	SCAN_CLUMP_OBJECTS	1332:4:43516:43533	8861261	3	True				
ANR	8861302	Statement	(	1332:22:43534:43534	8861261	4	True				
ANR	8861303	Statement	cp	1332:23:43535:43536	8861261	5	True				
ANR	8861304	Statement	)	1332:25:43537:43537	8861261	6	True				
ANR	8861305	Statement	DO_ALL	1333:8:43547:43552	8861261	7	True				
ANR	8861306	IfStatement	if ( pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead )		8861261	8					
ANR	8861307	Condition	pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead	1336:12:43661:43722	8861261	0	True				
ANR	8861308	EqualityExpression	pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead		8861261	0		!=			
ANR	8861309	ShiftExpression	pre -> o_back << obj_back_shift		8861261	0		<<			
ANR	8861310	PtrMemberAccess	pre -> o_back		8861261	0					
ANR	8861311	Identifier	pre		8861261	0					
ANR	8861312	Identifier	o_back		8861261	1					
ANR	8861313	Identifier	obj_back_shift		8861261	1					
ANR	8861314	AdditiveExpression	( byte * ) pre - ( byte * ) chead		8861261	1		-			
ANR	8861315	CastExpression	( byte * ) pre		8861261	0					
ANR	8861316	CastTarget	byte *		8861261	0					
ANR	8861317	Identifier	pre		8861261	1					
ANR	8861318	CastExpression	( byte * ) chead		8861261	1					
ANR	8861319	CastTarget	byte *		8861261	0					
ANR	8861320	Identifier	chead		8861261	1					
ANR	8861321	CompoundStatement		11:8:398:454	8861261	1					
ANR	8861322	IdentifierDeclStatement	const struct_shared_procs_t * procs = pre -> o_type -> shared ;	1337:8:43735:43791	8861261	0	True				
ANR	8861323	IdentifierDecl	* procs = pre -> o_type -> shared		8861261	0					
ANR	8861324	IdentifierDeclType	const struct_shared_procs_t *		8861261	0					
ANR	8861325	Identifier	procs		8861261	1					
ANR	8861326	AssignmentExpression	* procs = pre -> o_type -> shared		8861261	2		=			
ANR	8861327	Identifier	procs		8861261	0					
ANR	8861328	PtrMemberAccess	pre -> o_type -> shared		8861261	1					
ANR	8861329	PtrMemberAccess	pre -> o_type		8861261	0					
ANR	8861330	Identifier	pre		8861261	0					
ANR	8861331	Identifier	o_type		8861261	1					
ANR	8861332	Identifier	shared		8861261	1					
ANR	8861333	ExpressionStatement	"debug_check_object ( pre , cp , gcst )"	1339:8:43802:43835	8861261	1	True				
ANR	8861334	CallExpression	"debug_check_object ( pre , cp , gcst )"		8861261	0					
ANR	8861335	Callee	debug_check_object		8861261	0					
ANR	8861336	Identifier	debug_check_object		8861261	0					
ANR	8861337	ArgumentList	pre		8861261	1					
ANR	8861338	Argument	pre		8861261	0					
ANR	8861339	Identifier	pre		8861261	0					
ANR	8861340	Argument	cp		8861261	1					
ANR	8861341	Identifier	cp		8861261	0					
ANR	8861342	Argument	gcst		8861261	2					
ANR	8861343	Identifier	gcst		8861261	0					
ANR	8861344	ExpressionStatement	"if_debug4m ( '7' , cmem , "" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) pre , ( ulong ) size , ( ulong ) dpre )"	1340:8:43845:44045	8861261	2	True				
ANR	8861345	CallExpression	"if_debug4m ( '7' , cmem , "" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) pre , ( ulong ) size , ( ulong ) dpre )"		8861261	0					
ANR	8861346	Callee	if_debug4m		8861261	0					
ANR	8861347	Identifier	if_debug4m		8861261	0					
ANR	8861348	ArgumentList	'7'		8861261	1					
ANR	8861349	Argument	'7'		8861261	0					
ANR	8861350	PrimaryExpression	'7'		8861261	0					
ANR	8861351	Argument	cmem		8861261	1					
ANR	8861352	Identifier	cmem		8861261	0					
ANR	8861353	Argument	""" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"""		8861261	2					
ANR	8861354	PrimaryExpression	""" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"""		8861261	0					
ANR	8861355	Argument	struct_type_name_string ( pre -> o_type )		8861261	3					
ANR	8861356	CallExpression	struct_type_name_string ( pre -> o_type )		8861261	0					
ANR	8861357	Callee	struct_type_name_string		8861261	0					
ANR	8861358	Identifier	struct_type_name_string		8861261	0					
ANR	8861359	ArgumentList	pre -> o_type		8861261	1					
ANR	8861360	Argument	pre -> o_type		8861261	0					
ANR	8861361	PtrMemberAccess	pre -> o_type		8861261	0					
ANR	8861362	Identifier	pre		8861261	0					
ANR	8861363	Identifier	o_type		8861261	1					
ANR	8861364	Argument	( ulong ) pre		8861261	4					
ANR	8861365	CastExpression	( ulong ) pre		8861261	0					
ANR	8861366	CastTarget	ulong		8861261	0					
ANR	8861367	Identifier	pre		8861261	1					
ANR	8861368	Argument	( ulong ) size		8861261	5					
ANR	8861369	CastExpression	( ulong ) size		8861261	0					
ANR	8861370	CastTarget	ulong		8861261	0					
ANR	8861371	Identifier	size		8861261	1					
ANR	8861372	Argument	( ulong ) dpre		8861261	6					
ANR	8861373	CastExpression	( ulong ) dpre		8861261	0					
ANR	8861374	CastTarget	ulong		8861261	0					
ANR	8861375	Identifier	dpre		8861261	1					
ANR	8861376	IfStatement	if ( procs == 0 )		8861261	3					
ANR	8861377	Condition	procs == 0	1344:12:44059:44068	8861261	0	True				
ANR	8861378	EqualityExpression	procs == 0		8861261	0		==			
ANR	8861379	Identifier	procs		8861261	0					
ANR	8861380	PrimaryExpression	0		8861261	1					
ANR	8861381	CompoundStatement		18:24:734:734	8861261	1					
ANR	8861382	IfStatement	if ( dpre != pre )		8861261	0					
ANR	8861383	Condition	dpre != pre	1345:16:44089:44099	8861261	0	True				
ANR	8861384	EqualityExpression	dpre != pre		8861261	0		!=			
ANR	8861385	Identifier	dpre		8861261	0					
ANR	8861386	Identifier	pre		8861261	1					
ANR	8861387	ExpressionStatement	"memmove ( dpre , pre , sizeof ( obj_header_t ) + size )"	1346:16:44118:44189	8861261	1	True				
ANR	8861388	CallExpression	"memmove ( dpre , pre , sizeof ( obj_header_t ) + size )"		8861261	0					
ANR	8861389	Callee	memmove		8861261	0					
ANR	8861390	Identifier	memmove		8861261	0					
ANR	8861391	ArgumentList	dpre		8861261	1					
ANR	8861392	Argument	dpre		8861261	0					
ANR	8861393	Identifier	dpre		8861261	0					
ANR	8861394	Argument	pre		8861261	1					
ANR	8861395	Identifier	pre		8861261	0					
ANR	8861396	Argument	sizeof ( obj_header_t ) + size		8861261	2					
ANR	8861397	AdditiveExpression	sizeof ( obj_header_t ) + size		8861261	0		+			
ANR	8861398	SizeofExpression	sizeof ( obj_header_t )		8861261	0					
ANR	8861399	Sizeof	sizeof		8861261	0					
ANR	8861400	SizeofOperand	obj_header_t		8861261	1					
ANR	8861401	Identifier	size		8861261	1					
ANR	8861402	ElseStatement	else		8861261	0					
ANR	8861403	ExpressionStatement	"( * procs -> compact ) ( cmem , pre , dpre , size )"	1349:12:44218:44259	8861261	0	True				
ANR	8861404	CallExpression	"( * procs -> compact ) ( cmem , pre , dpre , size )"		8861261	0					
ANR	8861405	Callee	* procs -> compact		8861261	0					
ANR	8861406	UnaryOperationExpression	* procs -> compact		8861261	0					
ANR	8861407	UnaryOperator	*		8861261	0					
ANR	8861408	PtrMemberAccess	procs -> compact		8861261	1					
ANR	8861409	Identifier	procs		8861261	0					
ANR	8861410	Identifier	compact		8861261	1					
ANR	8861411	ArgumentList	cmem		8861261	1					
ANR	8861412	Argument	cmem		8861261	0					
ANR	8861413	Identifier	cmem		8861261	0					
ANR	8861414	Argument	pre		8861261	1					
ANR	8861415	Identifier	pre		8861261	0					
ANR	8861416	Argument	dpre		8861261	2					
ANR	8861417	Identifier	dpre		8861261	0					
ANR	8861418	Argument	size		8861261	3					
ANR	8861419	Identifier	size		8861261	0					
ANR	8861420	ExpressionStatement	dpre = ( obj_header_t * ) ( ( byte * ) dpre + obj_size_round ( size ) )	1350:8:44269:44343	8861261	4	True				
ANR	8861421	AssignmentExpression	dpre = ( obj_header_t * ) ( ( byte * ) dpre + obj_size_round ( size ) )		8861261	0		=			
ANR	8861422	Identifier	dpre		8861261	0					
ANR	8861423	CastExpression	( obj_header_t * ) ( ( byte * ) dpre + obj_size_round ( size ) )		8861261	1					
ANR	8861424	CastTarget	obj_header_t *		8861261	0					
ANR	8861425	AdditiveExpression	( byte * ) dpre + obj_size_round ( size )		8861261	1		+			
ANR	8861426	CastExpression	( byte * ) dpre		8861261	0					
ANR	8861427	CastTarget	byte *		8861261	0					
ANR	8861428	Identifier	dpre		8861261	1					
ANR	8861429	CallExpression	obj_size_round ( size )		8861261	1					
ANR	8861430	Callee	obj_size_round		8861261	0					
ANR	8861431	Identifier	obj_size_round		8861261	0					
ANR	8861432	ArgumentList	size		8861261	1					
ANR	8861433	Argument	size		8861261	0					
ANR	8861434	Identifier	size		8861261	0					
ANR	8861435	Statement	END_OBJECTS_SCAN	1353:4:44355:44370	8861261	9	True				
ANR	8861436	IfStatement	if ( cp -> outer == 0 && chead -> dest != cp -> cbase )		8861261	10					
ANR	8861437	Condition	cp -> outer == 0 && chead -> dest != cp -> cbase	1354:12:44384:44425	8861261	0	True				
ANR	8861438	AndExpression	cp -> outer == 0 && chead -> dest != cp -> cbase		8861261	0		&&			
ANR	8861439	EqualityExpression	cp -> outer == 0		8861261	0		==			
ANR	8861440	PtrMemberAccess	cp -> outer		8861261	0					
ANR	8861441	Identifier	cp		8861261	0					
ANR	8861442	Identifier	outer		8861261	1					
ANR	8861443	PrimaryExpression	0		8861261	1					
ANR	8861444	EqualityExpression	chead -> dest != cp -> cbase		8861261	1		!=			
ANR	8861445	PtrMemberAccess	chead -> dest		8861261	0					
ANR	8861446	Identifier	chead		8861261	0					
ANR	8861447	Identifier	dest		8861261	1					
ANR	8861448	PtrMemberAccess	cp -> cbase		8861261	1					
ANR	8861449	Identifier	cp		8861261	0					
ANR	8861450	Identifier	cbase		8861261	1					
ANR	8861451	ExpressionStatement	dpre = ( obj_header_t * ) cp -> cbase	1355:8:44436:44469	8861261	1	True				
ANR	8861452	AssignmentExpression	dpre = ( obj_header_t * ) cp -> cbase		8861261	0		=			
ANR	8861453	Identifier	dpre		8861261	0					
ANR	8861454	CastExpression	( obj_header_t * ) cp -> cbase		8861261	1					
ANR	8861455	CastTarget	obj_header_t *		8861261	0					
ANR	8861456	PtrMemberAccess	cp -> cbase		8861261	1					
ANR	8861457	Identifier	cp		8861261	0					
ANR	8861458	Identifier	cbase		8861261	1					
ANR	8861459	ExpressionStatement	"gs_alloc_fill ( dpre , gs_alloc_fill_collected , cp -> cbot - ( byte * ) dpre )"	1356:4:44515:44585	8861261	11	True				
ANR	8861460	CallExpression	"gs_alloc_fill ( dpre , gs_alloc_fill_collected , cp -> cbot - ( byte * ) dpre )"		8861261	0					
ANR	8861461	Callee	gs_alloc_fill		8861261	0					
ANR	8861462	Identifier	gs_alloc_fill		8861261	0					
ANR	8861463	ArgumentList	dpre		8861261	1					
ANR	8861464	Argument	dpre		8861261	0					
ANR	8861465	Identifier	dpre		8861261	0					
ANR	8861466	Argument	gs_alloc_fill_collected		8861261	1					
ANR	8861467	Identifier	gs_alloc_fill_collected		8861261	0					
ANR	8861468	Argument	cp -> cbot - ( byte * ) dpre		8861261	2					
ANR	8861469	AdditiveExpression	cp -> cbot - ( byte * ) dpre		8861261	0		-			
ANR	8861470	PtrMemberAccess	cp -> cbot		8861261	0					
ANR	8861471	Identifier	cp		8861261	0					
ANR	8861472	Identifier	cbot		8861261	1					
ANR	8861473	CastExpression	( byte * ) dpre		8861261	1					
ANR	8861474	CastTarget	byte *		8861261	0					
ANR	8861475	Identifier	dpre		8861261	1					
ANR	8861476	ExpressionStatement	cp -> cbot = ( byte * ) dpre	1357:4:44591:44615	8861261	12	True				
ANR	8861477	AssignmentExpression	cp -> cbot = ( byte * ) dpre		8861261	0		=			
ANR	8861478	PtrMemberAccess	cp -> cbot		8861261	0					
ANR	8861479	Identifier	cp		8861261	0					
ANR	8861480	Identifier	cbot		8861261	1					
ANR	8861481	CastExpression	( byte * ) dpre		8861261	1					
ANR	8861482	CastTarget	byte *		8861261	0					
ANR	8861483	Identifier	dpre		8861261	1					
ANR	8861484	ExpressionStatement	cp -> rcur = 0	1358:4:44621:44633	8861261	13	True				
ANR	8861485	AssignmentExpression	cp -> rcur = 0		8861261	0		=			
ANR	8861486	PtrMemberAccess	cp -> rcur		8861261	0					
ANR	8861487	Identifier	cp		8861261	0					
ANR	8861488	Identifier	rcur		8861261	1					
ANR	8861489	PrimaryExpression	0		8861261	1					
ANR	8861490	ExpressionStatement	cp -> rtop = 0	1359:4:44639:44651	8861261	14	True				
ANR	8861491	AssignmentExpression	cp -> rtop = 0		8861261	0		=			
ANR	8861492	PtrMemberAccess	cp -> rtop		8861261	0					
ANR	8861493	Identifier	cp		8861261	0					
ANR	8861494	Identifier	rtop		8861261	1					
ANR	8861495	PrimaryExpression	0		8861261	1					
ANR	8861496	ReturnType	static void		8861261	1					
ANR	8861497	Identifier	gc_objects_compact		8861261	2					
ANR	8861498	ParameterList	"clump_t * cp , gc_state_t * gcst"		8861261	3					
ANR	8861499	Parameter	clump_t * cp	1326:19:43303:43314	8861261	0	True				
ANR	8861500	ParameterType	clump_t *		8861261	0					
ANR	8861501	Identifier	cp		8861261	1					
ANR	8861502	Parameter	gc_state_t * gcst	1326:33:43317:43333	8861261	1	True				
ANR	8861503	ParameterType	gc_state_t *		8861261	0					
ANR	8861504	Identifier	gcst		8861261	1					
ANR	8861505	CFGEntryNode	ENTRY		8861261		True				
ANR	8861506	CFGExitNode	EXIT		8861261		True				
ANR	8861507	Symbol	* gcst -> spaces . memories . named		8861261						
ANR	8861508	Symbol	procs		8861261						
ANR	8861509	Symbol	* gcst -> spaces		8861261						
ANR	8861510	Symbol	cp -> rtop		8861261						
ANR	8861511	Symbol	pre -> o_back		8861261						
ANR	8861512	Symbol	* chead		8861261						
ANR	8861513	Symbol	gcst		8861261						
ANR	8861514	Symbol	* pre		8861261						
ANR	8861515	Symbol	obj_back_shift		8861261						
ANR	8861516	Symbol	dpre		8861261						
ANR	8861517	Symbol	cp -> rcur		8861261						
ANR	8861518	Symbol	cp -> chead		8861261						
ANR	8861519	Symbol	obj_size_round		8861261						
ANR	8861520	Symbol	cp -> cbot		8861261						
ANR	8861521	Symbol	* gcst -> spaces . memories		8861261						
ANR	8861522	Symbol	pre -> o_type		8861261						
ANR	8861523	Symbol	gs_alloc_fill_collected		8861261						
ANR	8861524	Symbol	* gcst -> spaces . memories . named . system		8861261						
ANR	8861525	Symbol	gcst -> spaces . memories . named . system -> stable_memory		8861261						
ANR	8861526	Symbol	procs -> compact		8861261						
ANR	8861527	Symbol	chead		8861261						
ANR	8861528	Symbol	pre		8861261						
ANR	8861529	Symbol	struct_type_name_string		8861261						
ANR	8861530	Symbol	* pre -> o_type		8861261						
ANR	8861531	Symbol	gcst -> spaces . memories		8861261						
ANR	8861532	Symbol	* procs		8861261						
ANR	8861533	Symbol	chead -> dest		8861261						
ANR	8861534	Symbol	gcst -> spaces		8861261						
ANR	8861535	Symbol	gcst -> spaces . memories . named . system		8861261						
ANR	8861536	Symbol	cp -> cbase		8861261						
ANR	8861537	Symbol	cp		8861261						
ANR	8861538	Symbol	* gcst		8861261						
ANR	8861539	Symbol	* cp		8861261						
ANR	8861540	Symbol	size		8861261						
ANR	8861541	Symbol	* * pre		8861261						
ANR	8861542	Symbol	cp -> outer		8861261						
ANR	8861543	Symbol	cmem		8861261						
ANR	8861544	Symbol	gcst -> spaces . memories . named		8861261						
ANR	8861545	Symbol	* * gcst		8861261						
ANR	8861546	Symbol	pre -> o_type -> shared		8861261						
ANR	8861547	Function	free_if_empty	1364:0:44708:45067							
ANR	8861548	FunctionDef	"free_if_empty (clump_t * cp , void * arg)"		8861547	0					
ANR	8861549	CompoundStatement		1366:0:44772:45067	8861547	0					
ANR	8861550	IdentifierDeclStatement	gs_ref_memory_t * mem = ( gs_ref_memory_t * ) arg ;	1367:4:44778:44824	8861547	0	True				
ANR	8861551	IdentifierDecl	* mem = ( gs_ref_memory_t * ) arg		8861547	0					
ANR	8861552	IdentifierDeclType	gs_ref_memory_t *		8861547	0					
ANR	8861553	Identifier	mem		8861547	1					
ANR	8861554	AssignmentExpression	* mem = ( gs_ref_memory_t * ) arg		8861547	2		=			
ANR	8861555	Identifier	mem		8861547	0					
ANR	8861556	CastExpression	( gs_ref_memory_t * ) arg		8861547	1					
ANR	8861557	CastTarget	gs_ref_memory_t *		8861547	0					
ANR	8861558	Identifier	arg		8861547	1					
ANR	8861559	IfStatement	if ( cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0 )		8861547	1					
ANR	8861560	Condition	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0	1369:8:44835:44931	8861547	0	True				
ANR	8861561	AndExpression	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0		8861547	0		&&			
ANR	8861562	EqualityExpression	cp -> cbot == cp -> cbase		8861547	0		==			
ANR	8861563	PtrMemberAccess	cp -> cbot		8861547	0					
ANR	8861564	Identifier	cp		8861547	0					
ANR	8861565	Identifier	cbot		8861547	1					
ANR	8861566	PtrMemberAccess	cp -> cbase		8861547	1					
ANR	8861567	Identifier	cp		8861547	0					
ANR	8861568	Identifier	cbase		8861547	1					
ANR	8861569	AndExpression	cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0		8861547	1		&&			
ANR	8861570	EqualityExpression	cp -> ctop == cp -> climit		8861547	0		==			
ANR	8861571	PtrMemberAccess	cp -> ctop		8861547	0					
ANR	8861572	Identifier	cp		8861547	0					
ANR	8861573	Identifier	ctop		8861547	1					
ANR	8861574	PtrMemberAccess	cp -> climit		8861547	1					
ANR	8861575	Identifier	cp		8861547	0					
ANR	8861576	Identifier	climit		8861547	1					
ANR	8861577	AndExpression	cp -> outer == 0 && cp -> inner_count == 0		8861547	1		&&			
ANR	8861578	EqualityExpression	cp -> outer == 0		8861547	0		==			
ANR	8861579	PtrMemberAccess	cp -> outer		8861547	0					
ANR	8861580	Identifier	cp		8861547	0					
ANR	8861581	Identifier	outer		8861547	1					
ANR	8861582	PrimaryExpression	0		8861547	1					
ANR	8861583	EqualityExpression	cp -> inner_count == 0		8861547	1		==			
ANR	8861584	PtrMemberAccess	cp -> inner_count		8861547	0					
ANR	8861585	Identifier	cp		8861547	0					
ANR	8861586	Identifier	inner_count		8861547	1					
ANR	8861587	PrimaryExpression	0		8861547	1					
ANR	8861588	CompoundStatement		6:4:165:165	8861547	1					
ANR	8861589	ExpressionStatement	"alloc_free_clump ( cp , mem )"	1372:8:44948:44973	8861547	0	True				
ANR	8861590	CallExpression	"alloc_free_clump ( cp , mem )"		8861547	0					
ANR	8861591	Callee	alloc_free_clump		8861547	0					
ANR	8861592	Identifier	alloc_free_clump		8861547	0					
ANR	8861593	ArgumentList	cp		8861547	1					
ANR	8861594	Argument	cp		8861547	0					
ANR	8861595	Identifier	cp		8861547	0					
ANR	8861596	Argument	mem		8861547	1					
ANR	8861597	Identifier	mem		8861547	0					
ANR	8861598	IfStatement	if ( mem -> cc == cp )		8861547	1					
ANR	8861599	Condition	mem -> cc == cp	1373:12:44987:44999	8861547	0	True				
ANR	8861600	EqualityExpression	mem -> cc == cp		8861547	0		==			
ANR	8861601	PtrMemberAccess	mem -> cc		8861547	0					
ANR	8861602	Identifier	mem		8861547	0					
ANR	8861603	Identifier	cc		8861547	1					
ANR	8861604	Identifier	cp		8861547	1					
ANR	8861605	ExpressionStatement	mem -> cc = NULL	1374:12:45014:45028	8861547	1	True				
ANR	8861606	AssignmentExpression	mem -> cc = NULL		8861547	0		=			
ANR	8861607	PtrMemberAccess	mem -> cc		8861547	0					
ANR	8861608	Identifier	mem		8861547	0					
ANR	8861609	Identifier	cc		8861547	1					
ANR	8861610	Identifier	NULL		8861547	1					
ANR	8861611	ReturnStatement	return SPLAY_APP_CONTINUE ;	1376:4:45040:45065	8861547	2	True				
ANR	8861612	Identifier	SPLAY_APP_CONTINUE		8861547	0					
ANR	8861613	ReturnType	static splay_app_result_t		8861547	1					
ANR	8861614	Identifier	free_if_empty		8861547	2					
ANR	8861615	ParameterList	"clump_t * cp , void * arg"		8861547	3					
ANR	8861616	Parameter	clump_t * cp	1365:14:44748:44758	8861547	0	True				
ANR	8861617	ParameterType	clump_t *		8861547	0					
ANR	8861618	Identifier	cp		8861547	1					
ANR	8861619	Parameter	void * arg	1365:27:44761:44769	8861547	1	True				
ANR	8861620	ParameterType	void *		8861547	0					
ANR	8861621	Identifier	arg		8861547	1					
ANR	8861622	CFGEntryNode	ENTRY		8861547		True				
ANR	8861623	CFGExitNode	EXIT		8861547		True				
ANR	8861624	Symbol	NULL		8861547						
ANR	8861625	Symbol	cp -> inner_count		8861547						
ANR	8861626	Symbol	cp -> cbase		8861547						
ANR	8861627	Symbol	cp		8861547						
ANR	8861628	Symbol	cp -> climit		8861547						
ANR	8861629	Symbol	* cp		8861547						
ANR	8861630	Symbol	cp -> cbot		8861547						
ANR	8861631	Symbol	mem		8861547						
ANR	8861632	Symbol	arg		8861547						
ANR	8861633	Symbol	mem -> cc		8861547						
ANR	8861634	Symbol	cp -> outer		8861547						
ANR	8861635	Symbol	cp -> ctop		8861547						
ANR	8861636	Symbol	* mem		8861547						
ANR	8861637	Symbol	SPLAY_APP_CONTINUE		8861547						
ANR	8861638	Function	gc_free_empty_clumps	1380:0:45095:45318							
ANR	8861639	FunctionDef	gc_free_empty_clumps (gs_ref_memory_t * mem)		8861638	0					
ANR	8861640	CompoundStatement		1382:0:45151:45318	8861638	0					
ANR	8861641	ExpressionStatement	"clump_splay_app ( mem -> root , mem , free_if_empty , mem )"	1385:4:45265:45316	8861638	0	True				
ANR	8861642	CallExpression	"clump_splay_app ( mem -> root , mem , free_if_empty , mem )"		8861638	0					
ANR	8861643	Callee	clump_splay_app		8861638	0					
ANR	8861644	Identifier	clump_splay_app		8861638	0					
ANR	8861645	ArgumentList	mem -> root		8861638	1					
ANR	8861646	Argument	mem -> root		8861638	0					
ANR	8861647	PtrMemberAccess	mem -> root		8861638	0					
ANR	8861648	Identifier	mem		8861638	0					
ANR	8861649	Identifier	root		8861638	1					
ANR	8861650	Argument	mem		8861638	1					
ANR	8861651	Identifier	mem		8861638	0					
ANR	8861652	Argument	free_if_empty		8861638	2					
ANR	8861653	Identifier	free_if_empty		8861638	0					
ANR	8861654	Argument	mem		8861638	3					
ANR	8861655	Identifier	mem		8861638	0					
ANR	8861656	ReturnType	static void		8861638	1					
ANR	8861657	Identifier	gc_free_empty_clumps		8861638	2					
ANR	8861658	ParameterList	gs_ref_memory_t * mem		8861638	3					
ANR	8861659	Parameter	gs_ref_memory_t * mem	1381:21:45128:45148	8861638	0	True				
ANR	8861660	ParameterType	gs_ref_memory_t *		8861638	0					
ANR	8861661	Identifier	mem		8861638	1					
ANR	8861662	CFGEntryNode	ENTRY		8861638		True				
ANR	8861663	CFGExitNode	EXIT		8861638		True				
ANR	8861664	Symbol	free_if_empty		8861638						
ANR	8861665	Symbol	mem		8861638						
ANR	8861666	Symbol	mem -> root		8861638						
ANR	8861667	Symbol	* mem		8861638						
ANR	8861668	Function	gcst_get_memory_ptr	1388:0:45321:45494							
ANR	8861669	FunctionDef	gcst_get_memory_ptr (gc_state_t * gcst)		8861668	0					
ANR	8861670	CompoundStatement		1389:0:45379:45494	8861668	0					
ANR	8861671	IdentifierDeclStatement	vm_spaces spaces = gcst -> spaces ;	1390:4:45385:45416	8861668	0	True				
ANR	8861672	IdentifierDecl	spaces = gcst -> spaces		8861668	0					
ANR	8861673	IdentifierDeclType	vm_spaces		8861668	0					
ANR	8861674	Identifier	spaces		8861668	1					
ANR	8861675	AssignmentExpression	spaces = gcst -> spaces		8861668	2		=			
ANR	8861676	Identifier	spaces		8861668	0					
ANR	8861677	PtrMemberAccess	gcst -> spaces		8861668	1					
ANR	8861678	Identifier	gcst		8861668	0					
ANR	8861679	Identifier	spaces		8861668	1					
ANR	8861680	IdentifierDeclStatement	const gs_memory_t * cmem = space_system -> stable_memory ;	1391:4:45422:45475	8861668	1	True				
ANR	8861681	IdentifierDecl	* cmem = space_system -> stable_memory		8861668	0					
ANR	8861682	IdentifierDeclType	const gs_memory_t *		8861668	0					
ANR	8861683	Identifier	cmem		8861668	1					
ANR	8861684	AssignmentExpression	* cmem = space_system -> stable_memory		8861668	2		=			
ANR	8861685	Identifier	cmem		8861668	0					
ANR	8861686	PtrMemberAccess	space_system -> stable_memory		8861668	1					
ANR	8861687	Identifier	space_system		8861668	0					
ANR	8861688	Identifier	stable_memory		8861668	1					
ANR	8861689	ReturnStatement	return cmem ;	1392:4:45481:45492	8861668	2	True				
ANR	8861690	Identifier	cmem		8861668	0					
ANR	8861691	ReturnType	const gs_memory_t *		8861668	1					
ANR	8861692	Identifier	gcst_get_memory_ptr		8861668	2					
ANR	8861693	ParameterList	gc_state_t * gcst		8861668	3					
ANR	8861694	Parameter	gc_state_t * gcst	1388:40:45361:45376	8861668	0	True				
ANR	8861695	ParameterType	gc_state_t *		8861668	0					
ANR	8861696	Identifier	gcst		8861668	1					
ANR	8861697	CFGEntryNode	ENTRY		8861668		True				
ANR	8861698	CFGExitNode	EXIT		8861668		True				
ANR	8861699	Symbol	space_system -> stable_memory		8861668						
ANR	8861700	Symbol	space_system		8861668						
ANR	8861701	Symbol	* space_system		8861668						
ANR	8861702	Symbol	spaces		8861668						
ANR	8861703	Symbol	gcst -> spaces		8861668						
ANR	8861704	Symbol	cmem		8861668						
ANR	8861705	Symbol	gcst		8861668						
ANR	8861706	Symbol	* gcst		8861668						
