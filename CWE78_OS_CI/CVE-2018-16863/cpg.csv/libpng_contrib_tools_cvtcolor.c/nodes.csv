command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7318230	File	data/converged/CVE-2018-16863_ghostpdl/libpng_contrib_tools_cvtcolor.c								
ANR	7318231	Function	usage	24:0:516:675							
ANR	7318232	FunctionDef	usage (const char * prog)		7318231	0					
ANR	7318233	CompoundStatement		26:0:552:675	7318231	0					
ANR	7318234	ExpressionStatement	"fprintf ( stderr , ""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"" , prog , prog )"	27:3:557:661	7318231	0	True				
ANR	7318235	CallExpression	"fprintf ( stderr , ""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"" , prog , prog )"		7318231	0					
ANR	7318236	Callee	fprintf		7318231	0					
ANR	7318237	Identifier	fprintf		7318231	0					
ANR	7318238	ArgumentList	stderr		7318231	1					
ANR	7318239	Argument	stderr		7318231	0					
ANR	7318240	Identifier	stderr		7318231	0					
ANR	7318241	Argument	"""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"""		7318231	1					
ANR	7318242	PrimaryExpression	"""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"""		7318231	0					
ANR	7318243	Argument	prog		7318231	2					
ANR	7318244	Identifier	prog		7318231	0					
ANR	7318245	Argument	prog		7318231	3					
ANR	7318246	Identifier	prog		7318231	0					
ANR	7318247	ExpressionStatement	exit ( 1 )	30:3:666:673	7318231	1	True				
ANR	7318248	CallExpression	exit ( 1 )		7318231	0					
ANR	7318249	Callee	exit		7318231	0					
ANR	7318250	Identifier	exit		7318231	0					
ANR	7318251	ArgumentList	1		7318231	1					
ANR	7318252	Argument	1		7318231	0					
ANR	7318253	PrimaryExpression	1		7318231	0					
ANR	7318254	ReturnType	static void		7318231	1					
ANR	7318255	Identifier	usage		7318231	2					
ANR	7318256	ParameterList	const char * prog		7318231	3					
ANR	7318257	Parameter	const char * prog	25:6:534:549	7318231	0	True				
ANR	7318258	ParameterType	const char *		7318231	0					
ANR	7318259	Identifier	prog		7318231	1					
ANR	7318260	CFGEntryNode	ENTRY		7318231		True				
ANR	7318261	CFGExitNode	EXIT		7318231		True				
ANR	7318262	Symbol	stderr		7318231						
ANR	7318263	Symbol	prog		7318231						
ANR	7318264	Function	component	33:0:678:992							
ANR	7318265	FunctionDef	"component (const char * prog , const char * arg , int issRGB)"		7318264	0					
ANR	7318266	CompoundStatement		35:0:749:992	7318264	0					
ANR	7318267	IdentifierDeclStatement	char * ep ;	36:3:754:762	7318264	0	True				
ANR	7318268	IdentifierDecl	* ep		7318264	0					
ANR	7318269	IdentifierDeclType	char *		7318264	0					
ANR	7318270	Identifier	ep		7318264	1					
ANR	7318271	IdentifierDeclStatement	"unsigned long c = strtoul ( arg , & ep , 0 ) ;"	37:3:767:805	7318264	1	True				
ANR	7318272	IdentifierDecl	"c = strtoul ( arg , & ep , 0 )"		7318264	0					
ANR	7318273	IdentifierDeclType	unsigned long		7318264	0					
ANR	7318274	Identifier	c		7318264	1					
ANR	7318275	AssignmentExpression	"c = strtoul ( arg , & ep , 0 )"		7318264	2		=			
ANR	7318276	Identifier	c		7318264	0					
ANR	7318277	CallExpression	"strtoul ( arg , & ep , 0 )"		7318264	1					
ANR	7318278	Callee	strtoul		7318264	0					
ANR	7318279	Identifier	strtoul		7318264	0					
ANR	7318280	ArgumentList	arg		7318264	1					
ANR	7318281	Argument	arg		7318264	0					
ANR	7318282	Identifier	arg		7318264	0					
ANR	7318283	Argument	& ep		7318264	1					
ANR	7318284	UnaryOperationExpression	& ep		7318264	0					
ANR	7318285	UnaryOperator	&		7318264	0					
ANR	7318286	Identifier	ep		7318264	1					
ANR	7318287	Argument	0		7318264	2					
ANR	7318288	PrimaryExpression	0		7318264	0					
ANR	7318289	IfStatement	if ( ep <= arg || * ep || c > 65535 || ( issRGB && c > 255 ) )		7318264	2					
ANR	7318290	Condition	ep <= arg || * ep || c > 65535 || ( issRGB && c > 255 )	39:7:815:866	7318264	0	True				
ANR	7318291	OrExpression	ep <= arg || * ep || c > 65535 || ( issRGB && c > 255 )		7318264	0		||			
ANR	7318292	RelationalExpression	ep <= arg		7318264	0		<=			
ANR	7318293	Identifier	ep		7318264	0					
ANR	7318294	Identifier	arg		7318264	1					
ANR	7318295	OrExpression	* ep || c > 65535 || ( issRGB && c > 255 )		7318264	1		||			
ANR	7318296	UnaryOperationExpression	* ep		7318264	0					
ANR	7318297	UnaryOperator	*		7318264	0					
ANR	7318298	Identifier	ep		7318264	1					
ANR	7318299	OrExpression	c > 65535 || ( issRGB && c > 255 )		7318264	1		||			
ANR	7318300	RelationalExpression	c > 65535		7318264	0		>			
ANR	7318301	Identifier	c		7318264	0					
ANR	7318302	PrimaryExpression	65535		7318264	1					
ANR	7318303	AndExpression	issRGB && c > 255		7318264	1		&&			
ANR	7318304	Identifier	issRGB		7318264	0					
ANR	7318305	RelationalExpression	c > 255		7318264	1		>			
ANR	7318306	Identifier	c		7318264	0					
ANR	7318307	PrimaryExpression	255		7318264	1					
ANR	7318308	CompoundStatement		6:3:122:122	7318264	1					
ANR	7318309	ExpressionStatement	"fprintf ( stderr , ""%s: %s: invalid component value (%lu)\\n"" , prog , arg , c )"	41:6:880:952	7318264	0	True				
ANR	7318310	CallExpression	"fprintf ( stderr , ""%s: %s: invalid component value (%lu)\\n"" , prog , arg , c )"		7318264	0					
ANR	7318311	Callee	fprintf		7318264	0					
ANR	7318312	Identifier	fprintf		7318264	0					
ANR	7318313	ArgumentList	stderr		7318264	1					
ANR	7318314	Argument	stderr		7318264	0					
ANR	7318315	Identifier	stderr		7318264	0					
ANR	7318316	Argument	"""%s: %s: invalid component value (%lu)\\n"""		7318264	1					
ANR	7318317	PrimaryExpression	"""%s: %s: invalid component value (%lu)\\n"""		7318264	0					
ANR	7318318	Argument	prog		7318264	2					
ANR	7318319	Identifier	prog		7318264	0					
ANR	7318320	Argument	arg		7318264	3					
ANR	7318321	Identifier	arg		7318264	0					
ANR	7318322	Argument	c		7318264	4					
ANR	7318323	Identifier	c		7318264	0					
ANR	7318324	ExpressionStatement	usage ( prog )	42:6:960:971	7318264	1	True				
ANR	7318325	CallExpression	usage ( prog )		7318264	0					
ANR	7318326	Callee	usage		7318264	0					
ANR	7318327	Identifier	usage		7318264	0					
ANR	7318328	ArgumentList	prog		7318264	1					
ANR	7318329	Argument	prog		7318264	0					
ANR	7318330	Identifier	prog		7318264	0					
ANR	7318331	ReturnStatement	return c ;	45:3:982:990	7318264	3	True				
ANR	7318332	Identifier	c		7318264	0					
ANR	7318333	ReturnType	unsigned long		7318264	1					
ANR	7318334	Identifier	component		7318264	2					
ANR	7318335	ParameterList	"const char * prog , const char * arg , int issRGB"		7318264	3					
ANR	7318336	Parameter	const char * prog	34:10:702:717	7318264	0	True				
ANR	7318337	ParameterType	const char *		7318264	0					
ANR	7318338	Identifier	prog		7318264	1					
ANR	7318339	Parameter	const char * arg	34:28:720:734	7318264	1	True				
ANR	7318340	ParameterType	const char *		7318264	0					
ANR	7318341	Identifier	arg		7318264	1					
ANR	7318342	Parameter	int issRGB	34:45:737:746	7318264	2	True				
ANR	7318343	ParameterType	int		7318264	0					
ANR	7318344	Identifier	issRGB		7318264	1					
ANR	7318345	CFGEntryNode	ENTRY		7318264		True				
ANR	7318346	CFGExitNode	EXIT		7318264		True				
ANR	7318347	Symbol	issRGB		7318264						
ANR	7318348	Symbol	* ep		7318264						
ANR	7318349	Symbol	c		7318264						
ANR	7318350	Symbol	& ep		7318264						
ANR	7318351	Symbol	arg		7318264						
ANR	7318352	Symbol	strtoul		7318264						
ANR	7318353	Symbol	ep		7318264						
ANR	7318354	Symbol	stderr		7318264						
ANR	7318355	Symbol	prog		7318264						
ANR	7318356	Function	main	48:0:995:3905							
ANR	7318357	FunctionDef	"main (int argc , const char * * argv)"		7318356	0					
ANR	7318358	CompoundStatement		50:0:1033:3905	7318356	0					
ANR	7318359	IdentifierDeclStatement	const char * prog = * argv ++ ;	51:3:1038:1064	7318356	0	True				
ANR	7318360	IdentifierDecl	* prog = * argv ++		7318356	0					
ANR	7318361	IdentifierDeclType	const char *		7318356	0					
ANR	7318362	Identifier	prog		7318356	1					
ANR	7318363	AssignmentExpression	* prog = * argv ++		7318356	2		=			
ANR	7318364	Identifier	prog		7318356	0					
ANR	7318365	UnaryOperationExpression	* argv ++		7318356	1					
ANR	7318366	UnaryOperator	*		7318356	0					
ANR	7318367	PostIncDecOperationExpression	argv ++		7318356	1					
ANR	7318368	Identifier	argv		7318356	0					
ANR	7318369	IncDec	++		7318356	1					
ANR	7318370	IdentifierDeclStatement	"int to_linear = 0 , to_gray = 0 , to_color = 0 ;"	52:3:1069:1113	7318356	1	True				
ANR	7318371	IdentifierDecl	to_linear = 0		7318356	0					
ANR	7318372	IdentifierDeclType	int		7318356	0					
ANR	7318373	Identifier	to_linear		7318356	1					
ANR	7318374	AssignmentExpression	to_linear = 0		7318356	2		=			
ANR	7318375	Identifier	to_linear		7318356	0					
ANR	7318376	PrimaryExpression	0		7318356	1					
ANR	7318377	IdentifierDecl	to_gray = 0		7318356	1					
ANR	7318378	IdentifierDeclType	int		7318356	0					
ANR	7318379	Identifier	to_gray		7318356	1					
ANR	7318380	AssignmentExpression	to_gray = 0		7318356	2		=			
ANR	7318381	Identifier	to_gray		7318356	0					
ANR	7318382	PrimaryExpression	0		7318356	1					
ANR	7318383	IdentifierDecl	to_color = 0		7318356	2					
ANR	7318384	IdentifierDeclType	int		7318356	0					
ANR	7318385	Identifier	to_color		7318356	1					
ANR	7318386	AssignmentExpression	to_color = 0		7318356	2		=			
ANR	7318387	Identifier	to_color		7318356	0					
ANR	7318388	PrimaryExpression	0		7318356	1					
ANR	7318389	IdentifierDeclStatement	int channels = 0 ;	53:3:1118:1134	7318356	2	True				
ANR	7318390	IdentifierDecl	channels = 0		7318356	0					
ANR	7318391	IdentifierDeclType	int		7318356	0					
ANR	7318392	Identifier	channels		7318356	1					
ANR	7318393	AssignmentExpression	channels = 0		7318356	2		=			
ANR	7318394	Identifier	channels		7318356	0					
ANR	7318395	PrimaryExpression	0		7318356	1					
ANR	7318396	IdentifierDeclStatement	double c [ 4 ] ;	54:3:1139:1150	7318356	3	True				
ANR	7318397	IdentifierDecl	c [ 4 ]		7318356	0					
ANR	7318398	IdentifierDeclType	double [ 4 ]		7318356	0					
ANR	7318399	Identifier	c		7318356	1					
ANR	7318400	PrimaryExpression	4		7318356	2					
ANR	7318401	ExpressionStatement	fesetround ( FE_TONEAREST )	60:3:1345:1369	7318356	4	True				
ANR	7318402	CallExpression	fesetround ( FE_TONEAREST )		7318356	0					
ANR	7318403	Callee	fesetround		7318356	0					
ANR	7318404	Identifier	fesetround		7318356	0					
ANR	7318405	ArgumentList	FE_TONEAREST		7318356	1					
ANR	7318406	Argument	FE_TONEAREST		7318356	0					
ANR	7318407	Identifier	FE_TONEAREST		7318356	0					
ANR	7318408	ExpressionStatement	c [ 3 ] = c [ 2 ] = c [ 1 ] = c [ 0 ] = 0	62:3:1375:1404	7318356	5	True				
ANR	7318409	AssignmentExpression	c [ 3 ] = c [ 2 ] = c [ 1 ] = c [ 0 ] = 0		7318356	0		=			
ANR	7318410	ArrayIndexing	c [ 3 ]		7318356	0					
ANR	7318411	Identifier	c		7318356	0					
ANR	7318412	PrimaryExpression	3		7318356	1					
ANR	7318413	AssignmentExpression	c [ 2 ] = c [ 1 ] = c [ 0 ] = 0		7318356	1		=			
ANR	7318414	ArrayIndexing	c [ 2 ]		7318356	0					
ANR	7318415	Identifier	c		7318356	0					
ANR	7318416	PrimaryExpression	2		7318356	1					
ANR	7318417	AssignmentExpression	c [ 1 ] = c [ 0 ] = 0		7318356	1		=			
ANR	7318418	ArrayIndexing	c [ 1 ]		7318356	0					
ANR	7318419	Identifier	c		7318356	0					
ANR	7318420	PrimaryExpression	1		7318356	1					
ANR	7318421	AssignmentExpression	c [ 0 ] = 0		7318356	1		=			
ANR	7318422	ArrayIndexing	c [ 0 ]		7318356	0					
ANR	7318423	Identifier	c		7318356	0					
ANR	7318424	PrimaryExpression	0		7318356	1					
ANR	7318425	PrimaryExpression	0		7318356	1					
ANR	7318426	WhileStatement	while ( -- argc > 0 && * * argv == '-' )		7318356	6					
ANR	7318427	Condition	-- argc > 0 && * * argv == '-'	64:10:1417:1443	7318356	0	True				
ANR	7318428	AndExpression	-- argc > 0 && * * argv == '-'		7318356	0		&&			
ANR	7318429	RelationalExpression	-- argc > 0		7318356	0		>			
ANR	7318430	UnaryExpression	-- argc		7318356	0					
ANR	7318431	IncDec	--		7318356	0					
ANR	7318432	Identifier	argc		7318356	1					
ANR	7318433	PrimaryExpression	0		7318356	1					
ANR	7318434	EqualityExpression	* * argv == '-'		7318356	1		==			
ANR	7318435	UnaryOperationExpression	* * argv		7318356	0					
ANR	7318436	UnaryOperator	*		7318356	0					
ANR	7318437	UnaryOperationExpression	* argv		7318356	1					
ANR	7318438	UnaryOperator	*		7318356	0					
ANR	7318439	Identifier	argv		7318356	1					
ANR	7318440	PrimaryExpression	'-'		7318356	1					
ANR	7318441	CompoundStatement		17:6:423:450	7318356	1					
ANR	7318442	IdentifierDeclStatement	const char * arg = 1 + * argv ++ ;	66:6:1457:1484	7318356	0	True				
ANR	7318443	IdentifierDecl	* arg = 1 + * argv ++		7318356	0					
ANR	7318444	IdentifierDeclType	const char *		7318356	0					
ANR	7318445	Identifier	arg		7318356	1					
ANR	7318446	AssignmentExpression	* arg = 1 + * argv ++		7318356	2		=			
ANR	7318447	Identifier	arg		7318356	0					
ANR	7318448	AdditiveExpression	1 + * argv ++		7318356	1		+			
ANR	7318449	PrimaryExpression	1		7318356	0					
ANR	7318450	UnaryOperationExpression	* argv ++		7318356	1					
ANR	7318451	UnaryOperator	*		7318356	0					
ANR	7318452	PostIncDecOperationExpression	argv ++		7318356	1					
ANR	7318453	Identifier	argv		7318356	0					
ANR	7318454	IncDec	++		7318356	1					
ANR	7318455	IfStatement	"if ( strcmp ( arg , ""sRGB"" ) == 0 )"		7318356	1					
ANR	7318456	Condition	"strcmp ( arg , ""sRGB"" ) == 0"	68:10:1497:1520	7318356	0	True				
ANR	7318457	EqualityExpression	"strcmp ( arg , ""sRGB"" ) == 0"		7318356	0		==			
ANR	7318458	CallExpression	"strcmp ( arg , ""sRGB"" )"		7318356	0					
ANR	7318459	Callee	strcmp		7318356	0					
ANR	7318460	Identifier	strcmp		7318356	0					
ANR	7318461	ArgumentList	arg		7318356	1					
ANR	7318462	Argument	arg		7318356	0					
ANR	7318463	Identifier	arg		7318356	0					
ANR	7318464	Argument	"""sRGB"""		7318356	1					
ANR	7318465	PrimaryExpression	"""sRGB"""		7318356	0					
ANR	7318466	PrimaryExpression	0		7318356	1					
ANR	7318467	ExpressionStatement	to_linear = 0	69:9:1532:1545	7318356	1	True				
ANR	7318468	AssignmentExpression	to_linear = 0		7318356	0		=			
ANR	7318469	Identifier	to_linear		7318356	0					
ANR	7318470	PrimaryExpression	0		7318356	1					
ANR	7318471	ElseStatement	else		7318356	0					
ANR	7318472	IfStatement	"if ( strcmp ( arg , ""linear"" ) == 0 )"		7318356	0					
ANR	7318473	Condition	"strcmp ( arg , ""linear"" ) == 0"	71:15:1563:1588	7318356	0	True				
ANR	7318474	EqualityExpression	"strcmp ( arg , ""linear"" ) == 0"		7318356	0		==			
ANR	7318475	CallExpression	"strcmp ( arg , ""linear"" )"		7318356	0					
ANR	7318476	Callee	strcmp		7318356	0					
ANR	7318477	Identifier	strcmp		7318356	0					
ANR	7318478	ArgumentList	arg		7318356	1					
ANR	7318479	Argument	arg		7318356	0					
ANR	7318480	Identifier	arg		7318356	0					
ANR	7318481	Argument	"""linear"""		7318356	1					
ANR	7318482	PrimaryExpression	"""linear"""		7318356	0					
ANR	7318483	PrimaryExpression	0		7318356	1					
ANR	7318484	ExpressionStatement	to_linear = 1	72:9:1600:1613	7318356	1	True				
ANR	7318485	AssignmentExpression	to_linear = 1		7318356	0		=			
ANR	7318486	Identifier	to_linear		7318356	0					
ANR	7318487	PrimaryExpression	1		7318356	1					
ANR	7318488	ElseStatement	else		7318356	0					
ANR	7318489	IfStatement	"if ( strcmp ( arg , ""gray"" ) == 0 )"		7318356	0					
ANR	7318490	Condition	"strcmp ( arg , ""gray"" ) == 0"	74:15:1631:1654	7318356	0	True				
ANR	7318491	EqualityExpression	"strcmp ( arg , ""gray"" ) == 0"		7318356	0		==			
ANR	7318492	CallExpression	"strcmp ( arg , ""gray"" )"		7318356	0					
ANR	7318493	Callee	strcmp		7318356	0					
ANR	7318494	Identifier	strcmp		7318356	0					
ANR	7318495	ArgumentList	arg		7318356	1					
ANR	7318496	Argument	arg		7318356	0					
ANR	7318497	Identifier	arg		7318356	0					
ANR	7318498	Argument	"""gray"""		7318356	1					
ANR	7318499	PrimaryExpression	"""gray"""		7318356	0					
ANR	7318500	PrimaryExpression	0		7318356	1					
ANR	7318501	ExpressionStatement	"to_gray = 1 , to_color = 0"	75:9:1666:1691	7318356	1	True				
ANR	7318502	Expression	"to_gray = 1 , to_color = 0"		7318356	0					
ANR	7318503	AssignmentExpression	to_gray = 1		7318356	0		=			
ANR	7318504	Identifier	to_gray		7318356	0					
ANR	7318505	PrimaryExpression	1		7318356	1					
ANR	7318506	AssignmentExpression	to_color = 0		7318356	1		=			
ANR	7318507	Identifier	to_color		7318356	0					
ANR	7318508	PrimaryExpression	0		7318356	1					
ANR	7318509	ElseStatement	else		7318356	0					
ANR	7318510	IfStatement	"if ( strcmp ( arg , ""color"" ) == 0 )"		7318356	0					
ANR	7318511	Condition	"strcmp ( arg , ""color"" ) == 0"	77:15:1709:1733	7318356	0	True				
ANR	7318512	EqualityExpression	"strcmp ( arg , ""color"" ) == 0"		7318356	0		==			
ANR	7318513	CallExpression	"strcmp ( arg , ""color"" )"		7318356	0					
ANR	7318514	Callee	strcmp		7318356	0					
ANR	7318515	Identifier	strcmp		7318356	0					
ANR	7318516	ArgumentList	arg		7318356	1					
ANR	7318517	Argument	arg		7318356	0					
ANR	7318518	Identifier	arg		7318356	0					
ANR	7318519	Argument	"""color"""		7318356	1					
ANR	7318520	PrimaryExpression	"""color"""		7318356	0					
ANR	7318521	PrimaryExpression	0		7318356	1					
ANR	7318522	ExpressionStatement	"to_gray = 0 , to_color = 1"	78:9:1745:1770	7318356	1	True				
ANR	7318523	Expression	"to_gray = 0 , to_color = 1"		7318356	0					
ANR	7318524	AssignmentExpression	to_gray = 0		7318356	0		=			
ANR	7318525	Identifier	to_gray		7318356	0					
ANR	7318526	PrimaryExpression	0		7318356	1					
ANR	7318527	AssignmentExpression	to_color = 1		7318356	1		=			
ANR	7318528	Identifier	to_color		7318356	0					
ANR	7318529	PrimaryExpression	1		7318356	1					
ANR	7318530	ElseStatement	else		7318356	0					
ANR	7318531	ExpressionStatement	usage ( prog )	81:9:1793:1804	7318356	0	True				
ANR	7318532	CallExpression	usage ( prog )		7318356	0					
ANR	7318533	Callee	usage		7318356	0					
ANR	7318534	Identifier	usage		7318356	0					
ANR	7318535	ArgumentList	prog		7318356	1					
ANR	7318536	Argument	prog		7318356	0					
ANR	7318537	Identifier	prog		7318356	0					
ANR	7318538	SwitchStatement	switch ( argc )		7318356	7					
ANR	7318539	Condition	argc	84:11:1823:1826	7318356	0	True				
ANR	7318540	Identifier	argc		7318356	0					
ANR	7318541	CompoundStatement		36:3:798:798	7318356	1					
ANR	7318542	Label	default :	86:6:1840:1847	7318356	0	True				
ANR	7318543	Identifier	default		7318356	0					
ANR	7318544	ExpressionStatement	usage ( prog )	87:9:1858:1869	7318356	1	True				
ANR	7318545	CallExpression	usage ( prog )		7318356	0					
ANR	7318546	Callee	usage		7318356	0					
ANR	7318547	Identifier	usage		7318356	0					
ANR	7318548	ArgumentList	prog		7318356	1					
ANR	7318549	Argument	prog		7318356	0					
ANR	7318550	Identifier	prog		7318356	0					
ANR	7318551	BreakStatement	break ;	88:9:1880:1885	7318356	2	True				
ANR	7318552	Label	case 4 :	90:6:1894:1900	7318356	3	True				
ANR	7318553	ExpressionStatement	"c [ 3 ] = component ( prog , argv [ 3 ] , to_linear )"	91:9:1911:1953	7318356	4	True				
ANR	7318554	AssignmentExpression	"c [ 3 ] = component ( prog , argv [ 3 ] , to_linear )"		7318356	0		=			
ANR	7318555	ArrayIndexing	c [ 3 ]		7318356	0					
ANR	7318556	Identifier	c		7318356	0					
ANR	7318557	PrimaryExpression	3		7318356	1					
ANR	7318558	CallExpression	"component ( prog , argv [ 3 ] , to_linear )"		7318356	1					
ANR	7318559	Callee	component		7318356	0					
ANR	7318560	Identifier	component		7318356	0					
ANR	7318561	ArgumentList	prog		7318356	1					
ANR	7318562	Argument	prog		7318356	0					
ANR	7318563	Identifier	prog		7318356	0					
ANR	7318564	Argument	argv [ 3 ]		7318356	1					
ANR	7318565	ArrayIndexing	argv [ 3 ]		7318356	0					
ANR	7318566	Identifier	argv		7318356	0					
ANR	7318567	PrimaryExpression	3		7318356	1					
ANR	7318568	Argument	to_linear		7318356	2					
ANR	7318569	Identifier	to_linear		7318356	0					
ANR	7318570	ExpressionStatement	++ channels	92:9:1964:1974	7318356	5	True				
ANR	7318571	UnaryExpression	++ channels		7318356	0					
ANR	7318572	IncDec	++		7318356	0					
ANR	7318573	Identifier	channels		7318356	1					
ANR	7318574	Label	case 3 :	93:6:1982:1988	7318356	6	True				
ANR	7318575	ExpressionStatement	"c [ 2 ] = component ( prog , argv [ 2 ] , to_linear )"	94:9:1999:2041	7318356	7	True				
ANR	7318576	AssignmentExpression	"c [ 2 ] = component ( prog , argv [ 2 ] , to_linear )"		7318356	0		=			
ANR	7318577	ArrayIndexing	c [ 2 ]		7318356	0					
ANR	7318578	Identifier	c		7318356	0					
ANR	7318579	PrimaryExpression	2		7318356	1					
ANR	7318580	CallExpression	"component ( prog , argv [ 2 ] , to_linear )"		7318356	1					
ANR	7318581	Callee	component		7318356	0					
ANR	7318582	Identifier	component		7318356	0					
ANR	7318583	ArgumentList	prog		7318356	1					
ANR	7318584	Argument	prog		7318356	0					
ANR	7318585	Identifier	prog		7318356	0					
ANR	7318586	Argument	argv [ 2 ]		7318356	1					
ANR	7318587	ArrayIndexing	argv [ 2 ]		7318356	0					
ANR	7318588	Identifier	argv		7318356	0					
ANR	7318589	PrimaryExpression	2		7318356	1					
ANR	7318590	Argument	to_linear		7318356	2					
ANR	7318591	Identifier	to_linear		7318356	0					
ANR	7318592	ExpressionStatement	++ channels	95:9:2052:2062	7318356	8	True				
ANR	7318593	UnaryExpression	++ channels		7318356	0					
ANR	7318594	IncDec	++		7318356	0					
ANR	7318595	Identifier	channels		7318356	1					
ANR	7318596	Label	case 2 :	96:6:2070:2076	7318356	9	True				
ANR	7318597	ExpressionStatement	"c [ 1 ] = component ( prog , argv [ 1 ] , to_linear )"	97:9:2087:2129	7318356	10	True				
ANR	7318598	AssignmentExpression	"c [ 1 ] = component ( prog , argv [ 1 ] , to_linear )"		7318356	0		=			
ANR	7318599	ArrayIndexing	c [ 1 ]		7318356	0					
ANR	7318600	Identifier	c		7318356	0					
ANR	7318601	PrimaryExpression	1		7318356	1					
ANR	7318602	CallExpression	"component ( prog , argv [ 1 ] , to_linear )"		7318356	1					
ANR	7318603	Callee	component		7318356	0					
ANR	7318604	Identifier	component		7318356	0					
ANR	7318605	ArgumentList	prog		7318356	1					
ANR	7318606	Argument	prog		7318356	0					
ANR	7318607	Identifier	prog		7318356	0					
ANR	7318608	Argument	argv [ 1 ]		7318356	1					
ANR	7318609	ArrayIndexing	argv [ 1 ]		7318356	0					
ANR	7318610	Identifier	argv		7318356	0					
ANR	7318611	PrimaryExpression	1		7318356	1					
ANR	7318612	Argument	to_linear		7318356	2					
ANR	7318613	Identifier	to_linear		7318356	0					
ANR	7318614	ExpressionStatement	++ channels	98:9:2140:2150	7318356	11	True				
ANR	7318615	UnaryExpression	++ channels		7318356	0					
ANR	7318616	IncDec	++		7318356	0					
ANR	7318617	Identifier	channels		7318356	1					
ANR	7318618	Label	case 1 :	99:6:2158:2164	7318356	12	True				
ANR	7318619	ExpressionStatement	"c [ 0 ] = component ( prog , argv [ 0 ] , to_linear )"	100:9:2175:2217	7318356	13	True				
ANR	7318620	AssignmentExpression	"c [ 0 ] = component ( prog , argv [ 0 ] , to_linear )"		7318356	0		=			
ANR	7318621	ArrayIndexing	c [ 0 ]		7318356	0					
ANR	7318622	Identifier	c		7318356	0					
ANR	7318623	PrimaryExpression	0		7318356	1					
ANR	7318624	CallExpression	"component ( prog , argv [ 0 ] , to_linear )"		7318356	1					
ANR	7318625	Callee	component		7318356	0					
ANR	7318626	Identifier	component		7318356	0					
ANR	7318627	ArgumentList	prog		7318356	1					
ANR	7318628	Argument	prog		7318356	0					
ANR	7318629	Identifier	prog		7318356	0					
ANR	7318630	Argument	argv [ 0 ]		7318356	1					
ANR	7318631	ArrayIndexing	argv [ 0 ]		7318356	0					
ANR	7318632	Identifier	argv		7318356	0					
ANR	7318633	PrimaryExpression	0		7318356	1					
ANR	7318634	Argument	to_linear		7318356	2					
ANR	7318635	Identifier	to_linear		7318356	0					
ANR	7318636	ExpressionStatement	++ channels	101:9:2228:2238	7318356	14	True				
ANR	7318637	UnaryExpression	++ channels		7318356	0					
ANR	7318638	IncDec	++		7318356	0					
ANR	7318639	Identifier	channels		7318356	1					
ANR	7318640	BreakStatement	break ;	102:9:2249:2254	7318356	15	True				
ANR	7318641	IfStatement	if ( to_linear )		7318356	8					
ANR	7318642	Condition	to_linear	105:7:2272:2280	7318356	0	True				
ANR	7318643	Identifier	to_linear		7318356	0					
ANR	7318644	CompoundStatement		59:6:1273:1298	7318356	1					
ANR	7318645	IdentifierDeclStatement	int i ;	107:6:2294:2299	7318356	0	True				
ANR	7318646	IdentifierDecl	i		7318356	0					
ANR	7318647	IdentifierDeclType	int		7318356	0					
ANR	7318648	Identifier	i		7318356	1					
ANR	7318649	IdentifierDeclStatement	int components = channels ;	108:6:2307:2332	7318356	1	True				
ANR	7318650	IdentifierDecl	components = channels		7318356	0					
ANR	7318651	IdentifierDeclType	int		7318356	0					
ANR	7318652	Identifier	components		7318356	1					
ANR	7318653	AssignmentExpression	components = channels		7318356	2		=			
ANR	7318654	Identifier	channels		7318356	0					
ANR	7318655	Identifier	channels		7318356	1					
ANR	7318656	IfStatement	if ( ( components & 1 ) == 0 )		7318356	2					
ANR	7318657	Condition	( components & 1 ) == 0	110:10:2345:2365	7318356	0	True				
ANR	7318658	EqualityExpression	( components & 1 ) == 0		7318356	0		==			
ANR	7318659	BitAndExpression	components & 1		7318356	0		&			
ANR	7318660	Identifier	components		7318356	0					
ANR	7318661	PrimaryExpression	1		7318356	1					
ANR	7318662	PrimaryExpression	0		7318356	1					
ANR	7318663	ExpressionStatement	-- components	111:9:2377:2389	7318356	1	True				
ANR	7318664	UnaryExpression	-- components		7318356	0					
ANR	7318665	IncDec	--		7318356	0					
ANR	7318666	Identifier	components		7318356	1					
ANR	7318667	ForStatement	for ( i = 0 ; i < components ; ++ i )		7318356	3					
ANR	7318668	ForInit	i = 0 ;	113:11:2403:2406	7318356	0	True				
ANR	7318669	AssignmentExpression	i = 0		7318356	0		=			
ANR	7318670	Identifier	i		7318356	0					
ANR	7318671	PrimaryExpression	0		7318356	1					
ANR	7318672	Condition	i < components	113:16:2408:2419	7318356	1	True				
ANR	7318673	RelationalExpression	i < components		7318356	0		<			
ANR	7318674	Identifier	i		7318356	0					
ANR	7318675	Identifier	components		7318356	1					
ANR	7318676	UnaryExpression	++ i	113:30:2422:2424	7318356	2	True				
ANR	7318677	IncDec	++		7318356	0					
ANR	7318678	Identifier	i		7318356	1					
ANR	7318679	ExpressionStatement	c [ i ] = linear_from_sRGB ( c [ i ] / 255 )	113:35:2427:2462	7318356	3	True				
ANR	7318680	AssignmentExpression	c [ i ] = linear_from_sRGB ( c [ i ] / 255 )		7318356	0		=			
ANR	7318681	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318682	Identifier	c		7318356	0					
ANR	7318683	Identifier	i		7318356	1					
ANR	7318684	CallExpression	linear_from_sRGB ( c [ i ] / 255 )		7318356	1					
ANR	7318685	Callee	linear_from_sRGB		7318356	0					
ANR	7318686	Identifier	linear_from_sRGB		7318356	0					
ANR	7318687	ArgumentList	c [ i ] / 255		7318356	1					
ANR	7318688	Argument	c [ i ] / 255		7318356	0					
ANR	7318689	MultiplicativeExpression	c [ i ] / 255		7318356	0		/			
ANR	7318690	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318691	Identifier	c		7318356	0					
ANR	7318692	Identifier	i		7318356	1					
ANR	7318693	PrimaryExpression	255		7318356	1					
ANR	7318694	IfStatement	if ( components < channels )		7318356	4					
ANR	7318695	Condition	components < channels	114:10:2474:2494	7318356	0	True				
ANR	7318696	RelationalExpression	components < channels		7318356	0		<			
ANR	7318697	Identifier	components		7318356	0					
ANR	7318698	Identifier	channels		7318356	1					
ANR	7318699	ExpressionStatement	c [ components ] = c [ components ] / 255	115:9:2506:2541	7318356	1	True				
ANR	7318700	AssignmentExpression	c [ components ] = c [ components ] / 255		7318356	0		=			
ANR	7318701	ArrayIndexing	c [ components ]		7318356	0					
ANR	7318702	Identifier	c		7318356	0					
ANR	7318703	Identifier	components		7318356	1					
ANR	7318704	MultiplicativeExpression	c [ components ] / 255		7318356	1		/			
ANR	7318705	ArrayIndexing	c [ components ]		7318356	0					
ANR	7318706	Identifier	c		7318356	0					
ANR	7318707	Identifier	components		7318356	1					
ANR	7318708	PrimaryExpression	255		7318356	1					
ANR	7318709	ElseStatement	else		7318356	0					
ANR	7318710	CompoundStatement		71:6:1534:1539	7318356	0					
ANR	7318711	IdentifierDeclStatement	int i ;	120:6:2568:2573	7318356	0	True				
ANR	7318712	IdentifierDecl	i		7318356	0					
ANR	7318713	IdentifierDeclType	int		7318356	0					
ANR	7318714	Identifier	i		7318356	1					
ANR	7318715	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		7318356	1					
ANR	7318716	ForInit	i = 0 ;	121:11:2586:2589	7318356	0	True				
ANR	7318717	AssignmentExpression	i = 0		7318356	0		=			
ANR	7318718	Identifier	i		7318356	0					
ANR	7318719	PrimaryExpression	0		7318356	1					
ANR	7318720	Condition	i < 4	121:16:2591:2593	7318356	1	True				
ANR	7318721	RelationalExpression	i < 4		7318356	0		<			
ANR	7318722	Identifier	i		7318356	0					
ANR	7318723	PrimaryExpression	4		7318356	1					
ANR	7318724	UnaryExpression	++ i	121:21:2596:2598	7318356	2	True				
ANR	7318725	IncDec	++		7318356	0					
ANR	7318726	Identifier	i		7318356	1					
ANR	7318727	ExpressionStatement	c [ i ] /= 65535	121:26:2601:2614	7318356	3	True				
ANR	7318728	AssignmentExpression	c [ i ] /= 65535		7318356	0		/=			
ANR	7318729	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318730	Identifier	c		7318356	0					
ANR	7318731	Identifier	i		7318356	1					
ANR	7318732	PrimaryExpression	65535		7318356	1					
ANR	7318733	IfStatement	if ( ( channels & 1 ) == 0 )		7318356	2					
ANR	7318734	Condition	( channels & 1 ) == 0	123:10:2627:2645	7318356	0	True				
ANR	7318735	EqualityExpression	( channels & 1 ) == 0		7318356	0		==			
ANR	7318736	BitAndExpression	channels & 1		7318356	0		&			
ANR	7318737	Identifier	channels		7318356	0					
ANR	7318738	PrimaryExpression	1		7318356	1					
ANR	7318739	PrimaryExpression	0		7318356	1					
ANR	7318740	CompoundStatement		76:9:1631:1659	7318356	1					
ANR	7318741	IdentifierDeclStatement	double alpha = c [ channels - 1 ] ;	125:9:2665:2693	7318356	0	True				
ANR	7318742	IdentifierDecl	alpha = c [ channels - 1 ]		7318356	0					
ANR	7318743	IdentifierDeclType	double		7318356	0					
ANR	7318744	Identifier	alpha		7318356	1					
ANR	7318745	AssignmentExpression	alpha = c [ channels - 1 ]		7318356	2		=			
ANR	7318746	Identifier	alpha		7318356	0					
ANR	7318747	ArrayIndexing	c [ channels - 1 ]		7318356	1					
ANR	7318748	Identifier	c		7318356	0					
ANR	7318749	AdditiveExpression	channels - 1		7318356	1		-			
ANR	7318750	Identifier	channels		7318356	0					
ANR	7318751	PrimaryExpression	1		7318356	1					
ANR	7318752	IfStatement	if ( alpha > 0 )		7318356	1					
ANR	7318753	Condition	alpha > 0	127:13:2709:2717	7318356	0	True				
ANR	7318754	RelationalExpression	alpha > 0		7318356	0		>			
ANR	7318755	Identifier	alpha		7318356	0					
ANR	7318756	PrimaryExpression	0		7318356	1					
ANR	7318757	ForStatement	for ( i = 0 ; i < channels - 1 ; ++ i )		7318356	1					
ANR	7318758	ForInit	i = 0 ;	128:17:2737:2740	7318356	0	True				
ANR	7318759	AssignmentExpression	i = 0		7318356	0		=			
ANR	7318760	Identifier	i		7318356	0					
ANR	7318761	PrimaryExpression	0		7318356	1					
ANR	7318762	Condition	i < channels - 1	128:22:2742:2753	7318356	1	True				
ANR	7318763	RelationalExpression	i < channels - 1		7318356	0		<			
ANR	7318764	Identifier	i		7318356	0					
ANR	7318765	AdditiveExpression	channels - 1		7318356	1		-			
ANR	7318766	Identifier	channels		7318356	0					
ANR	7318767	PrimaryExpression	1		7318356	1					
ANR	7318768	UnaryExpression	++ i	128:36:2756:2758	7318356	2	True				
ANR	7318769	IncDec	++		7318356	0					
ANR	7318770	Identifier	i		7318356	1					
ANR	7318771	ExpressionStatement	c [ i ] /= alpha	128:41:2761:2774	7318356	3	True				
ANR	7318772	AssignmentExpression	c [ i ] /= alpha		7318356	0		/=			
ANR	7318773	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318774	Identifier	c		7318356	0					
ANR	7318775	Identifier	i		7318356	1					
ANR	7318776	Identifier	alpha		7318356	1					
ANR	7318777	ElseStatement	else		7318356	0					
ANR	7318778	ForStatement	for ( i = 0 ; i < channels - 1 ; ++ i )		7318356	0					
ANR	7318779	ForInit	i = 0 ;	130:17:2807:2810	7318356	0	True				
ANR	7318780	AssignmentExpression	i = 0		7318356	0		=			
ANR	7318781	Identifier	i		7318356	0					
ANR	7318782	PrimaryExpression	0		7318356	1					
ANR	7318783	Condition	i < channels - 1	130:22:2812:2823	7318356	1	True				
ANR	7318784	RelationalExpression	i < channels - 1		7318356	0		<			
ANR	7318785	Identifier	i		7318356	0					
ANR	7318786	AdditiveExpression	channels - 1		7318356	1		-			
ANR	7318787	Identifier	channels		7318356	0					
ANR	7318788	PrimaryExpression	1		7318356	1					
ANR	7318789	UnaryExpression	++ i	130:36:2826:2828	7318356	2	True				
ANR	7318790	IncDec	++		7318356	0					
ANR	7318791	Identifier	i		7318356	1					
ANR	7318792	ExpressionStatement	c [ i ] = 1	130:41:2831:2839	7318356	3	True				
ANR	7318793	AssignmentExpression	c [ i ] = 1		7318356	0		=			
ANR	7318794	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318795	Identifier	c		7318356	0					
ANR	7318796	Identifier	i		7318356	1					
ANR	7318797	PrimaryExpression	1		7318356	1					
ANR	7318798	IfStatement	if ( to_gray )		7318356	9					
ANR	7318799	Condition	to_gray	134:7:2862:2868	7318356	0	True				
ANR	7318800	Identifier	to_gray		7318356	0					
ANR	7318801	CompoundStatement		86:3:1840:1840	7318356	1					
ANR	7318802	IfStatement	if ( channels < 3 )		7318356	0					
ANR	7318803	Condition	channels < 3	136:10:2886:2897	7318356	0	True				
ANR	7318804	RelationalExpression	channels < 3		7318356	0		<			
ANR	7318805	Identifier	channels		7318356	0					
ANR	7318806	PrimaryExpression	3		7318356	1					
ANR	7318807	CompoundStatement		88:6:1872:1872	7318356	1					
ANR	7318808	ExpressionStatement	"fprintf ( stderr , ""%s: too few channels (%d) for -gray\\n"" , prog , channels )"	138:9:2917:3001	7318356	0	True				
ANR	7318809	CallExpression	"fprintf ( stderr , ""%s: too few channels (%d) for -gray\\n"" , prog , channels )"		7318356	0					
ANR	7318810	Callee	fprintf		7318356	0					
ANR	7318811	Identifier	fprintf		7318356	0					
ANR	7318812	ArgumentList	stderr		7318356	1					
ANR	7318813	Argument	stderr		7318356	0					
ANR	7318814	Identifier	stderr		7318356	0					
ANR	7318815	Argument	"""%s: too few channels (%d) for -gray\\n"""		7318356	1					
ANR	7318816	PrimaryExpression	"""%s: too few channels (%d) for -gray\\n"""		7318356	0					
ANR	7318817	Argument	prog		7318356	2					
ANR	7318818	Identifier	prog		7318356	0					
ANR	7318819	Argument	channels		7318356	3					
ANR	7318820	Identifier	channels		7318356	0					
ANR	7318821	ExpressionStatement	usage ( prog )	140:9:3012:3023	7318356	1	True				
ANR	7318822	CallExpression	usage ( prog )		7318356	0					
ANR	7318823	Callee	usage		7318356	0					
ANR	7318824	Identifier	usage		7318356	0					
ANR	7318825	ArgumentList	prog		7318356	1					
ANR	7318826	Argument	prog		7318356	0					
ANR	7318827	Identifier	prog		7318356	0					
ANR	7318828	ExpressionStatement	"c [ 0 ] = YfromRGB ( c [ 0 ] , c [ 1 ] , c [ 2 ] )"	143:6:3040:3073	7318356	1	True				
ANR	7318829	AssignmentExpression	"c [ 0 ] = YfromRGB ( c [ 0 ] , c [ 1 ] , c [ 2 ] )"		7318356	0		=			
ANR	7318830	ArrayIndexing	c [ 0 ]		7318356	0					
ANR	7318831	Identifier	c		7318356	0					
ANR	7318832	PrimaryExpression	0		7318356	1					
ANR	7318833	CallExpression	"YfromRGB ( c [ 0 ] , c [ 1 ] , c [ 2 ] )"		7318356	1					
ANR	7318834	Callee	YfromRGB		7318356	0					
ANR	7318835	Identifier	YfromRGB		7318356	0					
ANR	7318836	ArgumentList	c [ 0 ]		7318356	1					
ANR	7318837	Argument	c [ 0 ]		7318356	0					
ANR	7318838	ArrayIndexing	c [ 0 ]		7318356	0					
ANR	7318839	Identifier	c		7318356	0					
ANR	7318840	PrimaryExpression	0		7318356	1					
ANR	7318841	Argument	c [ 1 ]		7318356	1					
ANR	7318842	ArrayIndexing	c [ 1 ]		7318356	0					
ANR	7318843	Identifier	c		7318356	0					
ANR	7318844	PrimaryExpression	1		7318356	1					
ANR	7318845	Argument	c [ 2 ]		7318356	2					
ANR	7318846	ArrayIndexing	c [ 2 ]		7318356	0					
ANR	7318847	Identifier	c		7318356	0					
ANR	7318848	PrimaryExpression	2		7318356	1					
ANR	7318849	ExpressionStatement	channels -= 2	144:6:3081:3094	7318356	2	True				
ANR	7318850	AssignmentExpression	channels -= 2		7318356	0		-=			
ANR	7318851	Identifier	channels		7318356	0					
ANR	7318852	PrimaryExpression	2		7318356	1					
ANR	7318853	IfStatement	if ( to_color )		7318356	10					
ANR	7318854	Condition	to_color	147:7:3109:3116	7318356	0	True				
ANR	7318855	Identifier	to_color		7318356	0					
ANR	7318856	CompoundStatement		99:3:2088:2088	7318356	1					
ANR	7318857	IfStatement	if ( channels > 2 )		7318356	0					
ANR	7318858	Condition	channels > 2	149:10:3134:3145	7318356	0	True				
ANR	7318859	RelationalExpression	channels > 2		7318356	0		>			
ANR	7318860	Identifier	channels		7318356	0					
ANR	7318861	PrimaryExpression	2		7318356	1					
ANR	7318862	CompoundStatement		101:6:2120:2120	7318356	1					
ANR	7318863	ExpressionStatement	"fprintf ( stderr , ""%s: too many channels (%d) for -color\\n"" , prog , channels )"	151:9:3165:3251	7318356	0	True				
ANR	7318864	CallExpression	"fprintf ( stderr , ""%s: too many channels (%d) for -color\\n"" , prog , channels )"		7318356	0					
ANR	7318865	Callee	fprintf		7318356	0					
ANR	7318866	Identifier	fprintf		7318356	0					
ANR	7318867	ArgumentList	stderr		7318356	1					
ANR	7318868	Argument	stderr		7318356	0					
ANR	7318869	Identifier	stderr		7318356	0					
ANR	7318870	Argument	"""%s: too many channels (%d) for -color\\n"""		7318356	1					
ANR	7318871	PrimaryExpression	"""%s: too many channels (%d) for -color\\n"""		7318356	0					
ANR	7318872	Argument	prog		7318356	2					
ANR	7318873	Identifier	prog		7318356	0					
ANR	7318874	Argument	channels		7318356	3					
ANR	7318875	Identifier	channels		7318356	0					
ANR	7318876	ExpressionStatement	usage ( prog )	153:9:3262:3273	7318356	1	True				
ANR	7318877	CallExpression	usage ( prog )		7318356	0					
ANR	7318878	Callee	usage		7318356	0					
ANR	7318879	Identifier	usage		7318356	0					
ANR	7318880	ArgumentList	prog		7318356	1					
ANR	7318881	Argument	prog		7318356	0					
ANR	7318882	Identifier	prog		7318356	0					
ANR	7318883	ExpressionStatement	c [ 3 ] = c [ 1 ]	156:6:3290:3301	7318356	1	True				
ANR	7318884	AssignmentExpression	c [ 3 ] = c [ 1 ]		7318356	0		=			
ANR	7318885	ArrayIndexing	c [ 3 ]		7318356	0					
ANR	7318886	Identifier	c		7318356	0					
ANR	7318887	PrimaryExpression	3		7318356	1					
ANR	7318888	ArrayIndexing	c [ 1 ]		7318356	1					
ANR	7318889	Identifier	c		7318356	0					
ANR	7318890	PrimaryExpression	1		7318356	1					
ANR	7318891	ExpressionStatement	c [ 2 ] = c [ 1 ] = c [ 0 ]	157:6:3333:3351	7318356	2	True				
ANR	7318892	AssignmentExpression	c [ 2 ] = c [ 1 ] = c [ 0 ]		7318356	0		=			
ANR	7318893	ArrayIndexing	c [ 2 ]		7318356	0					
ANR	7318894	Identifier	c		7318356	0					
ANR	7318895	PrimaryExpression	2		7318356	1					
ANR	7318896	AssignmentExpression	c [ 1 ] = c [ 0 ]		7318356	1		=			
ANR	7318897	ArrayIndexing	c [ 1 ]		7318356	0					
ANR	7318898	Identifier	c		7318356	0					
ANR	7318899	PrimaryExpression	1		7318356	1					
ANR	7318900	ArrayIndexing	c [ 0 ]		7318356	1					
ANR	7318901	Identifier	c		7318356	0					
ANR	7318902	PrimaryExpression	0		7318356	1					
ANR	7318903	IfStatement	if ( to_linear )		7318356	11					
ANR	7318904	Condition	to_linear	160:7:3366:3374	7318356	0	True				
ANR	7318905	Identifier	to_linear		7318356	0					
ANR	7318906	CompoundStatement		113:6:2354:2359	7318356	1					
ANR	7318907	IdentifierDeclStatement	int i ;	162:6:3388:3393	7318356	0	True				
ANR	7318908	IdentifierDecl	i		7318356	0					
ANR	7318909	IdentifierDeclType	int		7318356	0					
ANR	7318910	Identifier	i		7318356	1					
ANR	7318911	IfStatement	if ( ( channels & 1 ) == 0 )		7318356	1					
ANR	7318912	Condition	( channels & 1 ) == 0	163:10:3405:3423	7318356	0	True				
ANR	7318913	EqualityExpression	( channels & 1 ) == 0		7318356	0		==			
ANR	7318914	BitAndExpression	channels & 1		7318356	0		&			
ANR	7318915	Identifier	channels		7318356	0					
ANR	7318916	PrimaryExpression	1		7318356	1					
ANR	7318917	PrimaryExpression	0		7318356	1					
ANR	7318918	CompoundStatement		116:9:2409:2437	7318356	1					
ANR	7318919	IdentifierDeclStatement	double alpha = c [ channels - 1 ] ;	165:9:3443:3471	7318356	0	True				
ANR	7318920	IdentifierDecl	alpha = c [ channels - 1 ]		7318356	0					
ANR	7318921	IdentifierDeclType	double		7318356	0					
ANR	7318922	Identifier	alpha		7318356	1					
ANR	7318923	AssignmentExpression	alpha = c [ channels - 1 ]		7318356	2		=			
ANR	7318924	Identifier	alpha		7318356	0					
ANR	7318925	ArrayIndexing	c [ channels - 1 ]		7318356	1					
ANR	7318926	Identifier	c		7318356	0					
ANR	7318927	AdditiveExpression	channels - 1		7318356	1		-			
ANR	7318928	Identifier	channels		7318356	0					
ANR	7318929	PrimaryExpression	1		7318356	1					
ANR	7318930	ForStatement	for ( i = 0 ; i < channels - 1 ; ++ i )		7318356	1					
ANR	7318931	ForInit	i = 0 ;	166:14:3487:3490	7318356	0	True				
ANR	7318932	AssignmentExpression	i = 0		7318356	0		=			
ANR	7318933	Identifier	i		7318356	0					
ANR	7318934	PrimaryExpression	0		7318356	1					
ANR	7318935	Condition	i < channels - 1	166:19:3492:3503	7318356	1	True				
ANR	7318936	RelationalExpression	i < channels - 1		7318356	0		<			
ANR	7318937	Identifier	i		7318356	0					
ANR	7318938	AdditiveExpression	channels - 1		7318356	1		-			
ANR	7318939	Identifier	channels		7318356	0					
ANR	7318940	PrimaryExpression	1		7318356	1					
ANR	7318941	UnaryExpression	++ i	166:33:3506:3508	7318356	2	True				
ANR	7318942	IncDec	++		7318356	0					
ANR	7318943	Identifier	i		7318356	1					
ANR	7318944	ExpressionStatement	c [ i ] *= alpha	166:38:3511:3524	7318356	3	True				
ANR	7318945	AssignmentExpression	c [ i ] *= alpha		7318356	0		*=			
ANR	7318946	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318947	Identifier	c		7318356	0					
ANR	7318948	Identifier	i		7318356	1					
ANR	7318949	Identifier	alpha		7318356	1					
ANR	7318950	ForStatement	for ( i = 0 ; i < channels ; ++ i )		7318356	2					
ANR	7318951	ForInit	i = 0 ;	169:11:3546:3549	7318356	0	True				
ANR	7318952	AssignmentExpression	i = 0		7318356	0		=			
ANR	7318953	Identifier	i		7318356	0					
ANR	7318954	PrimaryExpression	0		7318356	1					
ANR	7318955	Condition	i < channels	169:16:3551:3560	7318356	1	True				
ANR	7318956	RelationalExpression	i < channels		7318356	0		<			
ANR	7318957	Identifier	i		7318356	0					
ANR	7318958	Identifier	channels		7318356	1					
ANR	7318959	UnaryExpression	++ i	169:28:3563:3565	7318356	2	True				
ANR	7318960	IncDec	++		7318356	0					
ANR	7318961	Identifier	i		7318356	1					
ANR	7318962	ExpressionStatement	c [ i ] = nearbyint ( c [ i ] * 65535 )	169:33:3568:3598	7318356	3	True				
ANR	7318963	AssignmentExpression	c [ i ] = nearbyint ( c [ i ] * 65535 )		7318356	0		=			
ANR	7318964	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318965	Identifier	c		7318356	0					
ANR	7318966	Identifier	i		7318356	1					
ANR	7318967	CallExpression	nearbyint ( c [ i ] * 65535 )		7318356	1					
ANR	7318968	Callee	nearbyint		7318356	0					
ANR	7318969	Identifier	nearbyint		7318356	0					
ANR	7318970	ArgumentList	c [ i ] * 65535		7318356	1					
ANR	7318971	Argument	c [ i ] * 65535		7318356	0					
ANR	7318972	MultiplicativeExpression	c [ i ] * 65535		7318356	0		*			
ANR	7318973	ArrayIndexing	c [ i ]		7318356	0					
ANR	7318974	Identifier	c		7318356	0					
ANR	7318975	Identifier	i		7318356	1					
ANR	7318976	PrimaryExpression	65535		7318356	1					
ANR	7318977	ElseStatement	else		7318356	0					
ANR	7318978	CompoundStatement		125:6:2605:2628	7318356	0					
ANR	7318979	IdentifierDeclStatement	int i = ( channels + 1 ) & ~1 ;	174:6:3639:3662	7318356	0	True				
ANR	7318980	IdentifierDecl	i = ( channels + 1 ) & ~1		7318356	0					
ANR	7318981	IdentifierDeclType	int		7318356	0					
ANR	7318982	Identifier	i		7318356	1					
ANR	7318983	AssignmentExpression	i = ( channels + 1 ) & ~1		7318356	2		=			
ANR	7318984	Identifier	i		7318356	0					
ANR	7318985	BitAndExpression	( channels + 1 ) & ~1		7318356	1		&			
ANR	7318986	AdditiveExpression	channels + 1		7318356	0		+			
ANR	7318987	Identifier	channels		7318356	0					
ANR	7318988	PrimaryExpression	1		7318356	1					
ANR	7318989	Identifier	~1		7318356	1					
ANR	7318990	WhileStatement	while ( -- i >= 0 )		7318356	1					
ANR	7318991	Condition	-- i >= 0	175:13:3677:3684	7318356	0	True				
ANR	7318992	RelationalExpression	-- i >= 0		7318356	0		>=			
ANR	7318993	UnaryExpression	-- i		7318356	0					
ANR	7318994	IncDec	--		7318356	0					
ANR	7318995	Identifier	i		7318356	1					
ANR	7318996	PrimaryExpression	0		7318356	1					
ANR	7318997	ExpressionStatement	c [ i ] = sRGB_from_linear ( c [ i ] )	176:9:3696:3725	7318356	1	True				
ANR	7318998	AssignmentExpression	c [ i ] = sRGB_from_linear ( c [ i ] )		7318356	0		=			
ANR	7318999	ArrayIndexing	c [ i ]		7318356	0					
ANR	7319000	Identifier	c		7318356	0					
ANR	7319001	Identifier	i		7318356	1					
ANR	7319002	CallExpression	sRGB_from_linear ( c [ i ] )		7318356	1					
ANR	7319003	Callee	sRGB_from_linear		7318356	0					
ANR	7319004	Identifier	sRGB_from_linear		7318356	0					
ANR	7319005	ArgumentList	c [ i ]		7318356	1					
ANR	7319006	Argument	c [ i ]		7318356	0					
ANR	7319007	ArrayIndexing	c [ i ]		7318356	0					
ANR	7319008	Identifier	c		7318356	0					
ANR	7319009	Identifier	i		7318356	1					
ANR	7319010	ForStatement	for ( i = 0 ; i < channels ; ++ i )		7318356	2					
ANR	7319011	ForInit	i = 0 ;	178:11:3739:3742	7318356	0	True				
ANR	7319012	AssignmentExpression	i = 0		7318356	0		=			
ANR	7319013	Identifier	i		7318356	0					
ANR	7319014	PrimaryExpression	0		7318356	1					
ANR	7319015	Condition	i < channels	178:16:3744:3753	7318356	1	True				
ANR	7319016	RelationalExpression	i < channels		7318356	0		<			
ANR	7319017	Identifier	i		7318356	0					
ANR	7319018	Identifier	channels		7318356	1					
ANR	7319019	UnaryExpression	++ i	178:28:3756:3758	7318356	2	True				
ANR	7319020	IncDec	++		7318356	0					
ANR	7319021	Identifier	i		7318356	1					
ANR	7319022	ExpressionStatement	c [ i ] = nearbyint ( c [ i ] * 255 )	178:33:3761:3789	7318356	3	True				
ANR	7319023	AssignmentExpression	c [ i ] = nearbyint ( c [ i ] * 255 )		7318356	0		=			
ANR	7319024	ArrayIndexing	c [ i ]		7318356	0					
ANR	7319025	Identifier	c		7318356	0					
ANR	7319026	Identifier	i		7318356	1					
ANR	7319027	CallExpression	nearbyint ( c [ i ] * 255 )		7318356	1					
ANR	7319028	Callee	nearbyint		7318356	0					
ANR	7319029	Identifier	nearbyint		7318356	0					
ANR	7319030	ArgumentList	c [ i ] * 255		7318356	1					
ANR	7319031	Argument	c [ i ] * 255		7318356	0					
ANR	7319032	MultiplicativeExpression	c [ i ] * 255		7318356	0		*			
ANR	7319033	ArrayIndexing	c [ i ]		7318356	0					
ANR	7319034	Identifier	c		7318356	0					
ANR	7319035	Identifier	i		7318356	1					
ANR	7319036	PrimaryExpression	255		7318356	1					
ANR	7319037	CompoundStatement		133:6:2774:2779	7318356	12					
ANR	7319038	IdentifierDeclStatement	int i ;	182:6:3808:3813	7318356	0	True				
ANR	7319039	IdentifierDecl	i		7318356	0					
ANR	7319040	IdentifierDeclType	int		7318356	0					
ANR	7319041	Identifier	i		7318356	1					
ANR	7319042	ForStatement	for ( i = 0 ; i < channels ; ++ i )		7318356	1					
ANR	7319043	ForInit	i = 0 ;	183:11:3826:3829	7318356	0	True				
ANR	7319044	AssignmentExpression	i = 0		7318356	0		=			
ANR	7319045	Identifier	i		7318356	0					
ANR	7319046	PrimaryExpression	0		7318356	1					
ANR	7319047	Condition	i < channels	183:16:3831:3840	7318356	1	True				
ANR	7319048	RelationalExpression	i < channels		7318356	0		<			
ANR	7319049	Identifier	i		7318356	0					
ANR	7319050	Identifier	channels		7318356	1					
ANR	7319051	UnaryExpression	++ i	183:28:3843:3845	7318356	2	True				
ANR	7319052	IncDec	++		7318356	0					
ANR	7319053	Identifier	i		7318356	1					
ANR	7319054	ExpressionStatement	"printf ( "" %g"" , c [ i ] )"	183:33:3848:3867	7318356	3	True				
ANR	7319055	CallExpression	"printf ( "" %g"" , c [ i ] )"		7318356	0					
ANR	7319056	Callee	printf		7318356	0					
ANR	7319057	Identifier	printf		7318356	0					
ANR	7319058	ArgumentList	""" %g"""		7318356	1					
ANR	7319059	Argument	""" %g"""		7318356	0					
ANR	7319060	PrimaryExpression	""" %g"""		7318356	0					
ANR	7319061	Argument	c [ i ]		7318356	1					
ANR	7319062	ArrayIndexing	c [ i ]		7318356	0					
ANR	7319063	Identifier	c		7318356	0					
ANR	7319064	Identifier	i		7318356	1					
ANR	7319065	ExpressionStatement	"printf ( ""\\n"" )"	185:3:3877:3889	7318356	13	True				
ANR	7319066	CallExpression	"printf ( ""\\n"" )"		7318356	0					
ANR	7319067	Callee	printf		7318356	0					
ANR	7319068	Identifier	printf		7318356	0					
ANR	7319069	ArgumentList	"""\\n"""		7318356	1					
ANR	7319070	Argument	"""\\n"""		7318356	0					
ANR	7319071	PrimaryExpression	"""\\n"""		7318356	0					
ANR	7319072	ReturnStatement	return 0 ;	187:3:3895:3903	7318356	14	True				
ANR	7319073	PrimaryExpression	0		7318356	0					
ANR	7319074	ReturnType	int		7318356	1					
ANR	7319075	Identifier	main		7318356	2					
ANR	7319076	ParameterList	"int argc , const char * * argv"		7318356	3					
ANR	7319077	Parameter	int argc	49:5:1004:1011	7318356	0	True				
ANR	7319078	ParameterType	int		7318356	0					
ANR	7319079	Identifier	argc		7318356	1					
ANR	7319080	Parameter	const char * * argv	49:15:1014:1030	7318356	1	True				
ANR	7319081	ParameterType	const char * *		7318356	0					
ANR	7319082	Identifier	argv		7318356	1					
ANR	7319083	CFGEntryNode	ENTRY		7318356		True				
ANR	7319084	CFGExitNode	EXIT		7318356		True				
ANR	7319085	Symbol	to_color		7318356						
ANR	7319086	Symbol	components		7318356						
ANR	7319087	Symbol	* components		7318356						
ANR	7319088	Symbol	linear_from_sRGB		7318356						
ANR	7319089	Symbol	* argv		7318356						
ANR	7319090	Symbol	argv		7318356						
ANR	7319091	Symbol	to_gray		7318356						
ANR	7319092	Symbol	YfromRGB		7318356						
ANR	7319093	Symbol	arg		7318356						
ANR	7319094	Symbol	alpha		7318356						
ANR	7319095	Symbol	* * argv		7318356						
ANR	7319096	Symbol	argc		7318356						
ANR	7319097	Symbol	strcmp		7318356						
ANR	7319098	Symbol	c		7318356						
ANR	7319099	Symbol	i		7318356						
ANR	7319100	Symbol	sRGB_from_linear		7318356						
ANR	7319101	Symbol	FE_TONEAREST		7318356						
ANR	7319102	Symbol	* argv ++		7318356						
ANR	7319103	Symbol	stderr		7318356						
ANR	7319104	Symbol	* c		7318356						
ANR	7319105	Symbol	prog		7318356						
ANR	7319106	Symbol	nearbyint		7318356						
ANR	7319107	Symbol	to_linear		7318356						
ANR	7319108	Symbol	component		7318356						
ANR	7319109	Symbol	* i		7318356						
ANR	7319110	Symbol	~1		7318356						
ANR	7319111	Symbol	channels		7318356						
ANR	7319112	Symbol	* channels		7318356						
