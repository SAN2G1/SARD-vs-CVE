command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3612396	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_psnames_pstables.h								
ANR	3612397	Function	ft_get_adobe_glyph_index	4142:2:267089:268780							
ANR	3612398	FunctionDef	"ft_get_adobe_glyph_index (const char * name , const char * limit)"		3612397	0					
ANR	3612399	CompoundStatement		4145:2:267208:268780	3612397	0					
ANR	3612400	IdentifierDeclStatement	int c = 0 ;	4146:4:267214:267241	3612397	0	True				
ANR	3612401	IdentifierDecl	c = 0		3612397	0					
ANR	3612402	IdentifierDeclType	int		3612397	0					
ANR	3612403	Identifier	c		3612397	1					
ANR	3612404	AssignmentExpression	c = 0		3612397	2		=			
ANR	3612405	Identifier	c		3612397	0					
ANR	3612406	PrimaryExpression	0		3612397	1					
ANR	3612407	IdentifierDeclStatement	"int count , min , max ;"	4147:4:267247:267284	3612397	1	True				
ANR	3612408	IdentifierDecl	count		3612397	0					
ANR	3612409	IdentifierDeclType	int		3612397	0					
ANR	3612410	Identifier	count		3612397	1					
ANR	3612411	IdentifierDecl	min		3612397	1					
ANR	3612412	IdentifierDeclType	int		3612397	0					
ANR	3612413	Identifier	min		3612397	1					
ANR	3612414	IdentifierDecl	max		3612397	2					
ANR	3612415	IdentifierDeclType	int		3612397	0					
ANR	3612416	Identifier	max		3612397	1					
ANR	3612417	IdentifierDeclStatement	const unsigned char * p = ft_adobe_glyph_list ;	4148:4:267290:267335	3612397	2	True				
ANR	3612418	IdentifierDecl	* p = ft_adobe_glyph_list		3612397	0					
ANR	3612419	IdentifierDeclType	const unsigned char *		3612397	0					
ANR	3612420	Identifier	p		3612397	1					
ANR	3612421	AssignmentExpression	* p = ft_adobe_glyph_list		3612397	2		=			
ANR	3612422	Identifier	ft_adobe_glyph_list		3612397	0					
ANR	3612423	Identifier	ft_adobe_glyph_list		3612397	1					
ANR	3612424	IfStatement	if ( name == 0 || name >= limit )		3612397	3					
ANR	3612425	Condition	name == 0 || name >= limit	4151:9:267348:267373	3612397	0	True				
ANR	3612426	OrExpression	name == 0 || name >= limit		3612397	0		||			
ANR	3612427	EqualityExpression	name == 0		3612397	0		==			
ANR	3612428	Identifier	name		3612397	0					
ANR	3612429	PrimaryExpression	0		3612397	1					
ANR	3612430	RelationalExpression	name >= limit		3612397	1		>=			
ANR	3612431	Identifier	name		3612397	0					
ANR	3612432	Identifier	limit		3612397	1					
ANR	3612433	GotoStatement	goto NotFound ;	4152:6:267383:267396	3612397	1	True				
ANR	3612434	Identifier	NotFound		3612397	0					
ANR	3612435	ExpressionStatement	c = * name ++	4154:4:267403:267418	3612397	4	True				
ANR	3612436	AssignmentExpression	c = * name ++		3612397	0		=			
ANR	3612437	Identifier	c		3612397	0					
ANR	3612438	UnaryOperationExpression	* name ++		3612397	1					
ANR	3612439	UnaryOperator	*		3612397	0					
ANR	3612440	PostIncDecOperationExpression	name ++		3612397	1					
ANR	3612441	Identifier	name		3612397	0					
ANR	3612442	IncDec	++		3612397	1					
ANR	3612443	ExpressionStatement	count = p [ 1 ]	4155:4:267424:267436	3612397	5	True				
ANR	3612444	AssignmentExpression	count = p [ 1 ]		3612397	0		=			
ANR	3612445	Identifier	count		3612397	0					
ANR	3612446	ArrayIndexing	p [ 1 ]		3612397	1					
ANR	3612447	Identifier	p		3612397	0					
ANR	3612448	PrimaryExpression	1		3612397	1					
ANR	3612449	ExpressionStatement	p += 2	4156:4:267442:267451	3612397	6	True				
ANR	3612450	AssignmentExpression	p += 2		3612397	0		+=			
ANR	3612451	Identifier	p		3612397	0					
ANR	3612452	PrimaryExpression	2		3612397	1					
ANR	3612453	ExpressionStatement	min = 0	4158:4:267458:267465	3612397	7	True				
ANR	3612454	AssignmentExpression	min = 0		3612397	0		=			
ANR	3612455	Identifier	min		3612397	0					
ANR	3612456	PrimaryExpression	0		3612397	1					
ANR	3612457	ExpressionStatement	max = count	4159:4:267471:267482	3612397	8	True				
ANR	3612458	AssignmentExpression	max = count		3612397	0		=			
ANR	3612459	Identifier	max		3612397	0					
ANR	3612460	Identifier	count		3612397	1					
ANR	3612461	WhileStatement	while ( min < max )		3612397	9					
ANR	3612462	Condition	min < max	4161:12:267497:267505	3612397	0	True				
ANR	3612463	RelationalExpression	min < max		3612397	0		<			
ANR	3612464	Identifier	min		3612397	0					
ANR	3612465	Identifier	max		3612397	1					
ANR	3612466	CompoundStatement		21:6:413:437	3612397	1					
ANR	3612467	IdentifierDeclStatement	int mid = ( min + max ) >> 1 ;	4163:6:267521:267567	3612397	0	True				
ANR	3612468	IdentifierDecl	mid = ( min + max ) >> 1		3612397	0					
ANR	3612469	IdentifierDeclType	int		3612397	0					
ANR	3612470	Identifier	mid		3612397	1					
ANR	3612471	AssignmentExpression	mid = ( min + max ) >> 1		3612397	2		=			
ANR	3612472	Identifier	mid		3612397	0					
ANR	3612473	ShiftExpression	( min + max ) >> 1		3612397	1		>>			
ANR	3612474	AdditiveExpression	min + max		3612397	0		+			
ANR	3612475	Identifier	min		3612397	0					
ANR	3612476	Identifier	max		3612397	1					
ANR	3612477	PrimaryExpression	1		3612397	1					
ANR	3612478	IdentifierDeclStatement	const unsigned char * q = p + mid * 2 ;	4164:6:267575:267614	3612397	1	True				
ANR	3612479	IdentifierDecl	* q = p + mid * 2		3612397	0					
ANR	3612480	IdentifierDeclType	const unsigned char *		3612397	0					
ANR	3612481	Identifier	q		3612397	1					
ANR	3612482	AssignmentExpression	* q = p + mid * 2		3612397	2		=			
ANR	3612483	Identifier	q		3612397	0					
ANR	3612484	AdditiveExpression	p + mid * 2		3612397	1		+			
ANR	3612485	Identifier	p		3612397	0					
ANR	3612486	MultiplicativeExpression	mid * 2		3612397	1		*			
ANR	3612487	Identifier	mid		3612397	0					
ANR	3612488	PrimaryExpression	2		3612397	1					
ANR	3612489	IdentifierDeclStatement	int c2 ;	4165:6:267622:267646	3612397	2	True				
ANR	3612490	IdentifierDecl	c2		3612397	0					
ANR	3612491	IdentifierDeclType	int		3612397	0					
ANR	3612492	Identifier	c2		3612397	1					
ANR	3612493	ExpressionStatement	q = ft_adobe_glyph_list + ( ( ( int ) q [ 0 ] << 8 ) | q [ 1 ] )	4168:6:267656:267711	3612397	3	True				
ANR	3612494	AssignmentExpression	q = ft_adobe_glyph_list + ( ( ( int ) q [ 0 ] << 8 ) | q [ 1 ] )		3612397	0		=			
ANR	3612495	Identifier	q		3612397	0					
ANR	3612496	AdditiveExpression	ft_adobe_glyph_list + ( ( ( int ) q [ 0 ] << 8 ) | q [ 1 ] )		3612397	1		+			
ANR	3612497	Identifier	ft_adobe_glyph_list		3612397	0					
ANR	3612498	InclusiveOrExpression	( ( int ) q [ 0 ] << 8 ) | q [ 1 ]		3612397	1		|			
ANR	3612499	ShiftExpression	( int ) q [ 0 ] << 8		3612397	0		<<			
ANR	3612500	CastExpression	( int ) q [ 0 ]		3612397	0					
ANR	3612501	CastTarget	int		3612397	0					
ANR	3612502	ArrayIndexing	q [ 0 ]		3612397	1					
ANR	3612503	Identifier	q		3612397	0					
ANR	3612504	PrimaryExpression	0		3612397	1					
ANR	3612505	PrimaryExpression	8		3612397	1					
ANR	3612506	ArrayIndexing	q [ 1 ]		3612397	1					
ANR	3612507	Identifier	q		3612397	0					
ANR	3612508	PrimaryExpression	1		3612397	1					
ANR	3612509	ExpressionStatement	c2 = q [ 0 ] & 127	4170:6:267720:267735	3612397	4	True				
ANR	3612510	AssignmentExpression	c2 = q [ 0 ] & 127		3612397	0		=			
ANR	3612511	Identifier	c2		3612397	0					
ANR	3612512	BitAndExpression	q [ 0 ] & 127		3612397	1		&			
ANR	3612513	ArrayIndexing	q [ 0 ]		3612397	0					
ANR	3612514	Identifier	q		3612397	0					
ANR	3612515	PrimaryExpression	0		3612397	1					
ANR	3612516	PrimaryExpression	127		3612397	1					
ANR	3612517	IfStatement	if ( c2 == c )		3612397	5					
ANR	3612518	Condition	c2 == c	4171:11:267748:267754	3612397	0	True				
ANR	3612519	EqualityExpression	c2 == c		3612397	0		==			
ANR	3612520	Identifier	c2		3612397	0					
ANR	3612521	Identifier	c		3612397	1					
ANR	3612522	CompoundStatement		28:6:555:555	3612397	1					
ANR	3612523	ExpressionStatement	p = q	4173:8:267774:267779	3612397	0	True				
ANR	3612524	AssignmentExpression	p = q		3612397	0		=			
ANR	3612525	Identifier	p		3612397	0					
ANR	3612526	Identifier	q		3612397	1					
ANR	3612527	GotoStatement	goto Found ;	4174:8:267789:267799	3612397	1	True				
ANR	3612528	Identifier	Found		3612397	0					
ANR	3612529	IfStatement	if ( c2 < c )		3612397	6					
ANR	3612530	Condition	c2 < c	4176:11:267820:267825	3612397	0	True				
ANR	3612531	RelationalExpression	c2 < c		3612397	0		<			
ANR	3612532	Identifier	c2		3612397	0					
ANR	3612533	Identifier	c		3612397	1					
ANR	3612534	ExpressionStatement	min = mid + 1	4177:8:267837:267850	3612397	1	True				
ANR	3612535	AssignmentExpression	min = mid + 1		3612397	0		=			
ANR	3612536	Identifier	min		3612397	0					
ANR	3612537	AdditiveExpression	mid + 1		3612397	1		+			
ANR	3612538	Identifier	mid		3612397	0					
ANR	3612539	PrimaryExpression	1		3612397	1					
ANR	3612540	ElseStatement	else		3612397	0					
ANR	3612541	ExpressionStatement	max = mid	4179:8:267871:267880	3612397	0	True				
ANR	3612542	AssignmentExpression	max = mid		3612397	0		=			
ANR	3612543	Identifier	max		3612397	0					
ANR	3612544	Identifier	mid		3612397	1					
ANR	3612545	GotoStatement	goto NotFound ;	4181:4:267892:267905	3612397	10	True				
ANR	3612546	Identifier	NotFound		3612397	0					
ANR	3612547	Label	Found :	4183:2:267910:267915	3612397	11	True				
ANR	3612548	Identifier	Found		3612397	0					
ANR	3612549	ForStatement	for ( ; ; )		3612397	12					
ANR	3612550	CompoundStatement		41:4:725:725	3612397	0					
ANR	3612551	IfStatement	if ( name >= limit )		3612397	0					
ANR	3612552	Condition	name >= limit	4188:11:267983:267995	3612397	0	True				
ANR	3612553	RelationalExpression	name >= limit		3612397	0		>=			
ANR	3612554	Identifier	name		3612397	0					
ANR	3612555	Identifier	limit		3612397	1					
ANR	3612556	CompoundStatement		45:6:796:796	3612397	1					
ANR	3612557	IfStatement	if ( ( p [ 0 ] & 128 ) == 0 && ( p [ 1 ] & 128 ) != 0 )		3612397	0					
ANR	3612558	Condition	( p [ 0 ] & 128 ) == 0 && ( p [ 1 ] & 128 ) != 0	4190:13:268020:268070	3612397	0	True				
ANR	3612559	AndExpression	( p [ 0 ] & 128 ) == 0 && ( p [ 1 ] & 128 ) != 0		3612397	0		&&			
ANR	3612560	EqualityExpression	( p [ 0 ] & 128 ) == 0		3612397	0		==			
ANR	3612561	BitAndExpression	p [ 0 ] & 128		3612397	0		&			
ANR	3612562	ArrayIndexing	p [ 0 ]		3612397	0					
ANR	3612563	Identifier	p		3612397	0					
ANR	3612564	PrimaryExpression	0		3612397	1					
ANR	3612565	PrimaryExpression	128		3612397	1					
ANR	3612566	PrimaryExpression	0		3612397	1					
ANR	3612567	EqualityExpression	( p [ 1 ] & 128 ) != 0		3612397	1		!=			
ANR	3612568	BitAndExpression	p [ 1 ] & 128		3612397	0		&			
ANR	3612569	ArrayIndexing	p [ 1 ]		3612397	0					
ANR	3612570	Identifier	p		3612397	0					
ANR	3612571	PrimaryExpression	1		3612397	1					
ANR	3612572	PrimaryExpression	128		3612397	1					
ANR	3612573	PrimaryExpression	0		3612397	1					
ANR	3612574	ReturnStatement	return ( unsigned long ) ( ( ( int ) p [ 2 ] << 8 ) | p [ 3 ] ) ;	4192:10:268084:268135	3612397	1	True				
ANR	3612575	CastExpression	( unsigned long ) ( ( ( int ) p [ 2 ] << 8 ) | p [ 3 ] )		3612397	0					
ANR	3612576	CastTarget	unsigned long		3612397	0					
ANR	3612577	InclusiveOrExpression	( ( int ) p [ 2 ] << 8 ) | p [ 3 ]		3612397	1		|			
ANR	3612578	ShiftExpression	( int ) p [ 2 ] << 8		3612397	0		<<			
ANR	3612579	CastExpression	( int ) p [ 2 ]		3612397	0					
ANR	3612580	CastTarget	int		3612397	0					
ANR	3612581	ArrayIndexing	p [ 2 ]		3612397	1					
ANR	3612582	Identifier	p		3612397	0					
ANR	3612583	PrimaryExpression	2		3612397	1					
ANR	3612584	PrimaryExpression	8		3612397	1					
ANR	3612585	ArrayIndexing	p [ 3 ]		3612397	1					
ANR	3612586	Identifier	p		3612397	0					
ANR	3612587	PrimaryExpression	3		3612397	1					
ANR	3612588	GotoStatement	goto NotFound ;	4194:8:268146:268159	3612397	1	True				
ANR	3612589	Identifier	NotFound		3612397	0					
ANR	3612590	ExpressionStatement	c = * name ++	4196:6:268175:268186	3612397	1	True				
ANR	3612591	AssignmentExpression	c = * name ++		3612397	0		=			
ANR	3612592	Identifier	c		3612397	0					
ANR	3612593	UnaryOperationExpression	* name ++		3612397	1					
ANR	3612594	UnaryOperator	*		3612397	0					
ANR	3612595	PostIncDecOperationExpression	name ++		3612397	1					
ANR	3612596	Identifier	name		3612397	0					
ANR	3612597	IncDec	++		3612397	1					
ANR	3612598	IfStatement	if ( p [ 0 ] & 128 )		3612397	2					
ANR	3612599	Condition	p [ 0 ] & 128	4197:11:268199:268208	3612397	0	True				
ANR	3612600	BitAndExpression	p [ 0 ] & 128		3612397	0		&			
ANR	3612601	ArrayIndexing	p [ 0 ]		3612397	0					
ANR	3612602	Identifier	p		3612397	0					
ANR	3612603	PrimaryExpression	0		3612397	1					
ANR	3612604	PrimaryExpression	128		3612397	1					
ANR	3612605	CompoundStatement		54:6:1009:1009	3612397	1					
ANR	3612606	ExpressionStatement	p ++	4199:8:268228:268231	3612397	0	True				
ANR	3612607	PostIncDecOperationExpression	p ++		3612397	0					
ANR	3612608	Identifier	p		3612397	0					
ANR	3612609	IncDec	++		3612397	1					
ANR	3612610	IfStatement	if ( c != ( p [ 0 ] & 127 ) )		3612397	1					
ANR	3612611	Condition	c != ( p [ 0 ] & 127 )	4200:13:268246:268262	3612397	0	True				
ANR	3612612	EqualityExpression	c != ( p [ 0 ] & 127 )		3612397	0		!=			
ANR	3612613	Identifier	c		3612397	0					
ANR	3612614	BitAndExpression	p [ 0 ] & 127		3612397	1		&			
ANR	3612615	ArrayIndexing	p [ 0 ]		3612397	0					
ANR	3612616	Identifier	p		3612397	0					
ANR	3612617	PrimaryExpression	0		3612397	1					
ANR	3612618	PrimaryExpression	127		3612397	1					
ANR	3612619	GotoStatement	goto NotFound ;	4201:10:268276:268289	3612397	1	True				
ANR	3612620	Identifier	NotFound		3612397	0					
ANR	3612621	ContinueStatement	continue ;	4203:8:268300:268308	3612397	2	True				
ANR	3612622	ExpressionStatement	p ++	4206:6:268325:268328	3612397	3	True				
ANR	3612623	PostIncDecOperationExpression	p ++		3612397	0					
ANR	3612624	Identifier	p		3612397	0					
ANR	3612625	IncDec	++		3612397	1					
ANR	3612626	ExpressionStatement	count = p [ 0 ] & 127	4207:6:268336:268354	3612397	4	True				
ANR	3612627	AssignmentExpression	count = p [ 0 ] & 127		3612397	0		=			
ANR	3612628	Identifier	count		3612397	0					
ANR	3612629	BitAndExpression	p [ 0 ] & 127		3612397	1		&			
ANR	3612630	ArrayIndexing	p [ 0 ]		3612397	0					
ANR	3612631	Identifier	p		3612397	0					
ANR	3612632	PrimaryExpression	0		3612397	1					
ANR	3612633	PrimaryExpression	127		3612397	1					
ANR	3612634	IfStatement	if ( p [ 0 ] & 128 )		3612397	5					
ANR	3612635	Condition	p [ 0 ] & 128	4208:11:268367:268376	3612397	0	True				
ANR	3612636	BitAndExpression	p [ 0 ] & 128		3612397	0		&			
ANR	3612637	ArrayIndexing	p [ 0 ]		3612397	0					
ANR	3612638	Identifier	p		3612397	0					
ANR	3612639	PrimaryExpression	0		3612397	1					
ANR	3612640	PrimaryExpression	128		3612397	1					
ANR	3612641	ExpressionStatement	p += 2	4209:8:268388:268394	3612397	1	True				
ANR	3612642	AssignmentExpression	p += 2		3612397	0		+=			
ANR	3612643	Identifier	p		3612397	0					
ANR	3612644	PrimaryExpression	2		3612397	1					
ANR	3612645	ExpressionStatement	p ++	4211:6:268403:268406	3612397	6	True				
ANR	3612646	PostIncDecOperationExpression	p ++		3612397	0					
ANR	3612647	Identifier	p		3612397	0					
ANR	3612648	IncDec	++		3612397	1					
ANR	3612649	ForStatement	"for ( ; count > 0 ; count -- , p += 2 )"		3612397	7					
ANR	3612650	Condition	count > 0	4213:14:268423:268431	3612397	0	True				
ANR	3612651	RelationalExpression	count > 0		3612397	0		>			
ANR	3612652	Identifier	count		3612397	0					
ANR	3612653	PrimaryExpression	0		3612397	1					
ANR	3612654	Expression	"count -- , p += 2"	4213:25:268434:268448	3612397	1	True				
ANR	3612655	PostIncDecOperationExpression	count --		3612397	0					
ANR	3612656	Identifier	count		3612397	0					
ANR	3612657	IncDec	--		3612397	1					
ANR	3612658	AssignmentExpression	p += 2		3612397	1		+=			
ANR	3612659	Identifier	p		3612397	0					
ANR	3612660	PrimaryExpression	2		3612397	1					
ANR	3612661	CompoundStatement		72:8:1325:1384	3612397	2					
ANR	3612662	IdentifierDeclStatement	int offset = ( ( int ) p [ 0 ] << 8 ) | p [ 1 ] ;	4215:8:268468:268524	3612397	0	True				
ANR	3612663	IdentifierDecl	offset = ( ( int ) p [ 0 ] << 8 ) | p [ 1 ]		3612397	0					
ANR	3612664	IdentifierDeclType	int		3612397	0					
ANR	3612665	Identifier	offset		3612397	1					
ANR	3612666	AssignmentExpression	offset = ( ( int ) p [ 0 ] << 8 ) | p [ 1 ]		3612397	2		=			
ANR	3612667	Identifier	offset		3612397	0					
ANR	3612668	InclusiveOrExpression	( ( int ) p [ 0 ] << 8 ) | p [ 1 ]		3612397	1		|			
ANR	3612669	ShiftExpression	( int ) p [ 0 ] << 8		3612397	0		<<			
ANR	3612670	CastExpression	( int ) p [ 0 ]		3612397	0					
ANR	3612671	CastTarget	int		3612397	0					
ANR	3612672	ArrayIndexing	p [ 0 ]		3612397	1					
ANR	3612673	Identifier	p		3612397	0					
ANR	3612674	PrimaryExpression	0		3612397	1					
ANR	3612675	PrimaryExpression	8		3612397	1					
ANR	3612676	ArrayIndexing	p [ 1 ]		3612397	1					
ANR	3612677	Identifier	p		3612397	0					
ANR	3612678	PrimaryExpression	1		3612397	1					
ANR	3612679	IdentifierDeclStatement	const unsigned char * q = ft_adobe_glyph_list + offset ;	4216:8:268534:268593	3612397	1	True				
ANR	3612680	IdentifierDecl	* q = ft_adobe_glyph_list + offset		3612397	0					
ANR	3612681	IdentifierDeclType	const unsigned char *		3612397	0					
ANR	3612682	Identifier	q		3612397	1					
ANR	3612683	AssignmentExpression	* q = ft_adobe_glyph_list + offset		3612397	2		=			
ANR	3612684	Identifier	q		3612397	0					
ANR	3612685	AdditiveExpression	ft_adobe_glyph_list + offset		3612397	1		+			
ANR	3612686	Identifier	ft_adobe_glyph_list		3612397	0					
ANR	3612687	Identifier	offset		3612397	1					
ANR	3612688	IfStatement	if ( c == ( q [ 0 ] & 127 ) )		3612397	2					
ANR	3612689	Condition	c == ( q [ 0 ] & 127 )	4218:13:268609:268627	3612397	0	True				
ANR	3612690	EqualityExpression	c == ( q [ 0 ] & 127 )		3612397	0		==			
ANR	3612691	Identifier	c		3612397	0					
ANR	3612692	BitAndExpression	q [ 0 ] & 127		3612397	1		&			
ANR	3612693	ArrayIndexing	q [ 0 ]		3612397	0					
ANR	3612694	Identifier	q		3612397	0					
ANR	3612695	PrimaryExpression	0		3612397	1					
ANR	3612696	PrimaryExpression	127		3612397	1					
ANR	3612697	CompoundStatement		75:8:1430:1430	3612397	1					
ANR	3612698	ExpressionStatement	p = q	4220:10:268651:268656	3612397	0	True				
ANR	3612699	AssignmentExpression	p = q		3612397	0		=			
ANR	3612700	Identifier	p		3612397	0					
ANR	3612701	Identifier	q		3612397	1					
ANR	3612702	GotoStatement	goto NextIter ;	4221:10:268668:268681	3612397	1	True				
ANR	3612703	Identifier	NextIter		3612397	0					
ANR	3612704	GotoStatement	goto NotFound ;	4224:6:268707:268720	3612397	8	True				
ANR	3612705	Identifier	NotFound		3612397	0					
ANR	3612706	Label	NextIter :	4226:4:268727:268735	3612397	9	True				
ANR	3612707	Identifier	NextIter		3612397	0					
ANR	3612708	ExpressionStatement		4227:6:268743:268743	3612397	10	True				
ANR	3612709	Label	NotFound :	4230:2:268754:268762	3612397	13	True				
ANR	3612710	Identifier	NotFound		3612397	0					
ANR	3612711	ReturnStatement	return 0 ;	4231:4:268768:268776	3612397	14	True				
ANR	3612712	PrimaryExpression	0		3612397	0					
ANR	3612713	ReturnType	static unsigned long		3612397	1					
ANR	3612714	Identifier	ft_get_adobe_glyph_index		3612397	2					
ANR	3612715	ParameterList	"const char * name , const char * limit"		3612397	3					
ANR	3612716	Parameter	const char * name	4143:28:267138:267154	3612397	0	True				
ANR	3612717	ParameterType	const char *		3612397	0					
ANR	3612718	Identifier	name		3612397	1					
ANR	3612719	Parameter	const char * limit	4144:28:267185:267202	3612397	1	True				
ANR	3612720	ParameterType	const char *		3612397	0					
ANR	3612721	Identifier	limit		3612397	1					
ANR	3612722	CFGEntryNode	ENTRY		3612397		True				
ANR	3612723	CFGExitNode	EXIT		3612397		True				
ANR	3612724	InfiniteForNode	true		3612397		True				
ANR	3612725	Symbol	c		3612397						
ANR	3612726	Symbol	offset		3612397						
ANR	3612727	Symbol	max		3612397						
ANR	3612728	Symbol	count		3612397						
ANR	3612729	Symbol	mid		3612397						
ANR	3612730	Symbol	c2		3612397						
ANR	3612731	Symbol	p		3612397						
ANR	3612732	Symbol	q		3612397						
ANR	3612733	Symbol	min		3612397						
ANR	3612734	Symbol	ft_adobe_glyph_list		3612397						
ANR	3612735	Symbol	name		3612397						
ANR	3612736	Symbol	limit		3612397						
ANR	3612737	Symbol	* p		3612397						
ANR	3612738	Symbol	* q		3612397						
ANR	3612739	Symbol	* name ++		3612397						
