command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10822817	File	data/converged/CVE-2018-16863_ghostpdl/xps_xpsfont.c								
ANR	10822818	DeclStmt									
ANR	10822819	Decl							void	void ( xps_font_t * font )	xps_load_sfnt_cmap
ANR	10822820	Function	s16	27:0:749:831							
ANR	10822821	FunctionDef	s16 (byte * p)		10822820	0					
ANR	10822822	CompoundStatement		28:0:780:831	10822820	0					
ANR	10822823	ReturnStatement	return ( signed short ) ( ( p [ 0 ] << 8 ) | p [ 1 ] ) ;	29:4:786:829	10822820	0	True				
ANR	10822824	CastExpression	( signed short ) ( ( p [ 0 ] << 8 ) | p [ 1 ] )		10822820	0					
ANR	10822825	CastTarget	signed short		10822820	0					
ANR	10822826	InclusiveOrExpression	( p [ 0 ] << 8 ) | p [ 1 ]		10822820	1		|			
ANR	10822827	ShiftExpression	p [ 0 ] << 8		10822820	0		<<			
ANR	10822828	ArrayIndexing	p [ 0 ]		10822820	0					
ANR	10822829	Identifier	p		10822820	0					
ANR	10822830	PrimaryExpression	0		10822820	1					
ANR	10822831	PrimaryExpression	8		10822820	1					
ANR	10822832	ArrayIndexing	p [ 1 ]		10822820	1					
ANR	10822833	Identifier	p		10822820	0					
ANR	10822834	PrimaryExpression	1		10822820	1					
ANR	10822835	ReturnType	static inline int		10822820	1					
ANR	10822836	Identifier	s16		10822820	2					
ANR	10822837	ParameterList	byte * p		10822820	3					
ANR	10822838	Parameter	byte * p	27:22:771:777	10822820	0	True				
ANR	10822839	ParameterType	byte *		10822820	0					
ANR	10822840	Identifier	p		10822820	1					
ANR	10822841	CFGEntryNode	ENTRY		10822820		True				
ANR	10822842	CFGExitNode	EXIT		10822820		True				
ANR	10822843	Symbol	p		10822820						
ANR	10822844	Symbol	* p		10822820						
ANR	10822845	Function	u16	32:0:834:898							
ANR	10822846	FunctionDef	u16 (byte * p)		10822845	0					
ANR	10822847	CompoundStatement		33:0:865:898	10822845	0					
ANR	10822848	ReturnStatement	return ( p [ 0 ] << 8 ) | p [ 1 ] ;	34:4:871:896	10822845	0	True				
ANR	10822849	InclusiveOrExpression	( p [ 0 ] << 8 ) | p [ 1 ]		10822845	0		|			
ANR	10822850	ShiftExpression	p [ 0 ] << 8		10822845	0		<<			
ANR	10822851	ArrayIndexing	p [ 0 ]		10822845	0					
ANR	10822852	Identifier	p		10822845	0					
ANR	10822853	PrimaryExpression	0		10822845	1					
ANR	10822854	PrimaryExpression	8		10822845	1					
ANR	10822855	ArrayIndexing	p [ 1 ]		10822845	1					
ANR	10822856	Identifier	p		10822845	0					
ANR	10822857	PrimaryExpression	1		10822845	1					
ANR	10822858	ReturnType	static inline int		10822845	1					
ANR	10822859	Identifier	u16		10822845	2					
ANR	10822860	ParameterList	byte * p		10822845	3					
ANR	10822861	Parameter	byte * p	32:22:856:862	10822845	0	True				
ANR	10822862	ParameterType	byte *		10822845	0					
ANR	10822863	Identifier	p		10822845	1					
ANR	10822864	CFGEntryNode	ENTRY		10822845		True				
ANR	10822865	CFGExitNode	EXIT		10822845		True				
ANR	10822866	Symbol	p		10822845						
ANR	10822867	Symbol	* p		10822845						
ANR	10822868	Function	u24	37:0:901:980							
ANR	10822869	FunctionDef	u24 (byte * p)		10822868	0					
ANR	10822870	CompoundStatement		38:0:932:980	10822868	0					
ANR	10822871	ReturnStatement	return ( p [ 0 ] << 16 ) | ( p [ 1 ] << 8 ) | p [ 2 ] ;	39:4:938:978	10822868	0	True				
ANR	10822872	InclusiveOrExpression	( p [ 0 ] << 16 ) | ( p [ 1 ] << 8 ) | p [ 2 ]		10822868	0		|			
ANR	10822873	ShiftExpression	p [ 0 ] << 16		10822868	0		<<			
ANR	10822874	ArrayIndexing	p [ 0 ]		10822868	0					
ANR	10822875	Identifier	p		10822868	0					
ANR	10822876	PrimaryExpression	0		10822868	1					
ANR	10822877	PrimaryExpression	16		10822868	1					
ANR	10822878	InclusiveOrExpression	( p [ 1 ] << 8 ) | p [ 2 ]		10822868	1		|			
ANR	10822879	ShiftExpression	p [ 1 ] << 8		10822868	0		<<			
ANR	10822880	ArrayIndexing	p [ 1 ]		10822868	0					
ANR	10822881	Identifier	p		10822868	0					
ANR	10822882	PrimaryExpression	1		10822868	1					
ANR	10822883	PrimaryExpression	8		10822868	1					
ANR	10822884	ArrayIndexing	p [ 2 ]		10822868	1					
ANR	10822885	Identifier	p		10822868	0					
ANR	10822886	PrimaryExpression	2		10822868	1					
ANR	10822887	ReturnType	static inline int		10822868	1					
ANR	10822888	Identifier	u24		10822868	2					
ANR	10822889	ParameterList	byte * p		10822868	3					
ANR	10822890	Parameter	byte * p	37:22:923:929	10822868	0	True				
ANR	10822891	ParameterType	byte *		10822868	0					
ANR	10822892	Identifier	p		10822868	1					
ANR	10822893	CFGEntryNode	ENTRY		10822868		True				
ANR	10822894	CFGExitNode	EXIT		10822868		True				
ANR	10822895	Symbol	p		10822868						
ANR	10822896	Symbol	* p		10822868						
ANR	10822897	Function	u32	42:0:983:1077							
ANR	10822898	FunctionDef	u32 (byte * p)		10822897	0					
ANR	10822899	CompoundStatement		43:0:1014:1077	10822897	0					
ANR	10822900	ReturnStatement	return ( p [ 0 ] << 24 ) | ( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ] ;	44:4:1020:1075	10822897	0	True				
ANR	10822901	InclusiveOrExpression	( p [ 0 ] << 24 ) | ( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ]		10822897	0		|			
ANR	10822902	ShiftExpression	p [ 0 ] << 24		10822897	0		<<			
ANR	10822903	ArrayIndexing	p [ 0 ]		10822897	0					
ANR	10822904	Identifier	p		10822897	0					
ANR	10822905	PrimaryExpression	0		10822897	1					
ANR	10822906	PrimaryExpression	24		10822897	1					
ANR	10822907	InclusiveOrExpression	( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ]		10822897	1		|			
ANR	10822908	ShiftExpression	p [ 1 ] << 16		10822897	0		<<			
ANR	10822909	ArrayIndexing	p [ 1 ]		10822897	0					
ANR	10822910	Identifier	p		10822897	0					
ANR	10822911	PrimaryExpression	1		10822897	1					
ANR	10822912	PrimaryExpression	16		10822897	1					
ANR	10822913	InclusiveOrExpression	( p [ 2 ] << 8 ) | p [ 3 ]		10822897	1		|			
ANR	10822914	ShiftExpression	p [ 2 ] << 8		10822897	0		<<			
ANR	10822915	ArrayIndexing	p [ 2 ]		10822897	0					
ANR	10822916	Identifier	p		10822897	0					
ANR	10822917	PrimaryExpression	2		10822897	1					
ANR	10822918	PrimaryExpression	8		10822897	1					
ANR	10822919	ArrayIndexing	p [ 3 ]		10822897	1					
ANR	10822920	Identifier	p		10822897	0					
ANR	10822921	PrimaryExpression	3		10822897	1					
ANR	10822922	ReturnType	static inline int		10822897	1					
ANR	10822923	Identifier	u32		10822897	2					
ANR	10822924	ParameterList	byte * p		10822897	3					
ANR	10822925	Parameter	byte * p	42:22:1005:1011	10822897	0	True				
ANR	10822926	ParameterType	byte *		10822897	0					
ANR	10822927	Identifier	p		10822897	1					
ANR	10822928	CFGEntryNode	ENTRY		10822897		True				
ANR	10822929	CFGExitNode	EXIT		10822897		True				
ANR	10822930	Symbol	p		10822897						
ANR	10822931	Symbol	* p		10822897						
ANR	10822932	Function	xps_new_font	47:0:1080:2368							
ANR	10822933	FunctionDef	"xps_new_font (xps_context_t * ctx , byte * buf , int buflen , int index)"		10822932	0					
ANR	10822934	CompoundStatement		49:0:1160:2368	10822932	0					
ANR	10822935	IdentifierDeclStatement	xps_font_t * font ;	50:4:1166:1182	10822932	0	True				
ANR	10822936	IdentifierDecl	* font		10822932	0					
ANR	10822937	IdentifierDeclType	xps_font_t *		10822932	0					
ANR	10822938	Identifier	font		10822932	1					
ANR	10822939	IdentifierDeclStatement	int code ;	51:4:1188:1196	10822932	1	True				
ANR	10822940	IdentifierDecl	code		10822932	0					
ANR	10822941	IdentifierDeclType	int		10822932	0					
ANR	10822942	Identifier	code		10822932	1					
ANR	10822943	ExpressionStatement	"font = xps_alloc ( ctx , sizeof ( xps_font_t ) )"	53:4:1203:1244	10822932	2	True				
ANR	10822944	AssignmentExpression	"font = xps_alloc ( ctx , sizeof ( xps_font_t ) )"		10822932	0		=			
ANR	10822945	Identifier	font		10822932	0					
ANR	10822946	CallExpression	"xps_alloc ( ctx , sizeof ( xps_font_t ) )"		10822932	1					
ANR	10822947	Callee	xps_alloc		10822932	0					
ANR	10822948	Identifier	xps_alloc		10822932	0					
ANR	10822949	ArgumentList	ctx		10822932	1					
ANR	10822950	Argument	ctx		10822932	0					
ANR	10822951	Identifier	ctx		10822932	0					
ANR	10822952	Argument	sizeof ( xps_font_t )		10822932	1					
ANR	10822953	SizeofExpression	sizeof ( xps_font_t )		10822932	0					
ANR	10822954	Sizeof	sizeof		10822932	0					
ANR	10822955	SizeofOperand	xps_font_t		10822932	1					
ANR	10822956	IfStatement	if ( ! font )		10822932	3					
ANR	10822957	Condition	! font	54:8:1254:1258	10822932	0	True				
ANR	10822958	UnaryOperationExpression	! font		10822932	0					
ANR	10822959	UnaryOperator	!		10822932	0					
ANR	10822960	Identifier	font		10822932	1					
ANR	10822961	CompoundStatement		7:4:104:104	10822932	1					
ANR	10822962	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""out of memory"" )"	56:8:1275:1318	10822932	0	True				
ANR	10822963	CallExpression	"gs_throw ( gs_error_VMerror , ""out of memory"" )"		10822932	0					
ANR	10822964	Callee	gs_throw		10822932	0					
ANR	10822965	Identifier	gs_throw		10822932	0					
ANR	10822966	ArgumentList	gs_error_VMerror		10822932	1					
ANR	10822967	Argument	gs_error_VMerror		10822932	0					
ANR	10822968	Identifier	gs_error_VMerror		10822932	0					
ANR	10822969	Argument	"""out of memory"""		10822932	1					
ANR	10822970	PrimaryExpression	"""out of memory"""		10822932	0					
ANR	10822971	ReturnStatement	return NULL ;	57:8:1328:1339	10822932	1	True				
ANR	10822972	Identifier	NULL		10822932	0					
ANR	10822973	ExpressionStatement	font -> data = buf	60:4:1352:1368	10822932	4	True				
ANR	10822974	AssignmentExpression	font -> data = buf		10822932	0		=			
ANR	10822975	PtrMemberAccess	font -> data		10822932	0					
ANR	10822976	Identifier	font		10822932	0					
ANR	10822977	Identifier	data		10822932	1					
ANR	10822978	Identifier	buf		10822932	1					
ANR	10822979	ExpressionStatement	font -> length = buflen	61:4:1374:1395	10822932	5	True				
ANR	10822980	AssignmentExpression	font -> length = buflen		10822932	0		=			
ANR	10822981	PtrMemberAccess	font -> length		10822932	0					
ANR	10822982	Identifier	font		10822932	0					
ANR	10822983	Identifier	length		10822932	1					
ANR	10822984	Identifier	buflen		10822932	1					
ANR	10822985	ExpressionStatement	font -> font = NULL	62:4:1401:1418	10822932	6	True				
ANR	10822986	AssignmentExpression	font -> font = NULL		10822932	0		=			
ANR	10822987	PtrMemberAccess	font -> font		10822932	0					
ANR	10822988	Identifier	font		10822932	0					
ANR	10822989	Identifier	font		10822932	1					
ANR	10822990	Identifier	NULL		10822932	1					
ANR	10822991	ExpressionStatement	font -> subfontid = index	64:4:1425:1448	10822932	7	True				
ANR	10822992	AssignmentExpression	font -> subfontid = index		10822932	0		=			
ANR	10822993	PtrMemberAccess	font -> subfontid		10822932	0					
ANR	10822994	Identifier	font		10822932	0					
ANR	10822995	Identifier	subfontid		10822932	1					
ANR	10822996	Identifier	index		10822932	1					
ANR	10822997	ExpressionStatement	font -> cmaptable = 0	65:4:1454:1473	10822932	8	True				
ANR	10822998	AssignmentExpression	font -> cmaptable = 0		10822932	0		=			
ANR	10822999	PtrMemberAccess	font -> cmaptable		10822932	0					
ANR	10823000	Identifier	font		10822932	0					
ANR	10823001	Identifier	cmaptable		10822932	1					
ANR	10823002	PrimaryExpression	0		10822932	1					
ANR	10823003	ExpressionStatement	font -> cmapsubcount = 0	66:4:1479:1501	10822932	9	True				
ANR	10823004	AssignmentExpression	font -> cmapsubcount = 0		10822932	0		=			
ANR	10823005	PtrMemberAccess	font -> cmapsubcount		10822932	0					
ANR	10823006	Identifier	font		10822932	0					
ANR	10823007	Identifier	cmapsubcount		10822932	1					
ANR	10823008	PrimaryExpression	0		10822932	1					
ANR	10823009	ExpressionStatement	font -> cmapsubtable = 0	67:4:1507:1529	10822932	10	True				
ANR	10823010	AssignmentExpression	font -> cmapsubtable = 0		10822932	0		=			
ANR	10823011	PtrMemberAccess	font -> cmapsubtable		10822932	0					
ANR	10823012	Identifier	font		10822932	0					
ANR	10823013	Identifier	cmapsubtable		10822932	1					
ANR	10823014	PrimaryExpression	0		10822932	1					
ANR	10823015	ExpressionStatement	font -> usepua = 0	68:4:1535:1551	10822932	11	True				
ANR	10823016	AssignmentExpression	font -> usepua = 0		10822932	0		=			
ANR	10823017	PtrMemberAccess	font -> usepua		10822932	0					
ANR	10823018	Identifier	font		10822932	0					
ANR	10823019	Identifier	usepua		10822932	1					
ANR	10823020	PrimaryExpression	0		10822932	1					
ANR	10823021	ExpressionStatement	font -> cffdata = 0	70:4:1558:1575	10822932	12	True				
ANR	10823022	AssignmentExpression	font -> cffdata = 0		10822932	0		=			
ANR	10823023	PtrMemberAccess	font -> cffdata		10822932	0					
ANR	10823024	Identifier	font		10822932	0					
ANR	10823025	Identifier	cffdata		10822932	1					
ANR	10823026	PrimaryExpression	0		10822932	1					
ANR	10823027	ExpressionStatement	font -> cffend = 0	71:4:1581:1597	10822932	13	True				
ANR	10823028	AssignmentExpression	font -> cffend = 0		10822932	0		=			
ANR	10823029	PtrMemberAccess	font -> cffend		10822932	0					
ANR	10823030	Identifier	font		10822932	0					
ANR	10823031	Identifier	cffend		10822932	1					
ANR	10823032	PrimaryExpression	0		10822932	1					
ANR	10823033	ExpressionStatement	font -> gsubrs = 0	72:4:1603:1619	10822932	14	True				
ANR	10823034	AssignmentExpression	font -> gsubrs = 0		10822932	0		=			
ANR	10823035	PtrMemberAccess	font -> gsubrs		10822932	0					
ANR	10823036	Identifier	font		10822932	0					
ANR	10823037	Identifier	gsubrs		10822932	1					
ANR	10823038	PrimaryExpression	0		10822932	1					
ANR	10823039	ExpressionStatement	font -> subrs = 0	73:4:1625:1640	10822932	15	True				
ANR	10823040	AssignmentExpression	font -> subrs = 0		10822932	0		=			
ANR	10823041	PtrMemberAccess	font -> subrs		10822932	0					
ANR	10823042	Identifier	font		10822932	0					
ANR	10823043	Identifier	subrs		10822932	1					
ANR	10823044	PrimaryExpression	0		10822932	1					
ANR	10823045	ExpressionStatement	font -> charstrings = 0	74:4:1646:1667	10822932	16	True				
ANR	10823046	AssignmentExpression	font -> charstrings = 0		10822932	0		=			
ANR	10823047	PtrMemberAccess	font -> charstrings		10822932	0					
ANR	10823048	Identifier	font		10822932	0					
ANR	10823049	Identifier	charstrings		10822932	1					
ANR	10823050	PrimaryExpression	0		10822932	1					
ANR	10823051	IfStatement	"if ( memcmp ( font -> data , ""OTTO"" , 4 ) == 0 )"		10822932	17					
ANR	10823052	Condition	"memcmp ( font -> data , ""OTTO"" , 4 ) == 0"	76:8:1678:1711	10822932	0	True				
ANR	10823053	EqualityExpression	"memcmp ( font -> data , ""OTTO"" , 4 ) == 0"		10822932	0		==			
ANR	10823054	CallExpression	"memcmp ( font -> data , ""OTTO"" , 4 )"		10822932	0					
ANR	10823055	Callee	memcmp		10822932	0					
ANR	10823056	Identifier	memcmp		10822932	0					
ANR	10823057	ArgumentList	font -> data		10822932	1					
ANR	10823058	Argument	font -> data		10822932	0					
ANR	10823059	PtrMemberAccess	font -> data		10822932	0					
ANR	10823060	Identifier	font		10822932	0					
ANR	10823061	Identifier	data		10822932	1					
ANR	10823062	Argument	"""OTTO"""		10822932	1					
ANR	10823063	PrimaryExpression	"""OTTO"""		10822932	0					
ANR	10823064	Argument	4		10822932	2					
ANR	10823065	PrimaryExpression	4		10822932	0					
ANR	10823066	PrimaryExpression	0		10822932	1					
ANR	10823067	ExpressionStatement	"code = xps_init_postscript_font ( ctx , font )"	77:8:1722:1764	10822932	1	True				
ANR	10823068	AssignmentExpression	"code = xps_init_postscript_font ( ctx , font )"		10822932	0		=			
ANR	10823069	Identifier	code		10822932	0					
ANR	10823070	CallExpression	"xps_init_postscript_font ( ctx , font )"		10822932	1					
ANR	10823071	Callee	xps_init_postscript_font		10822932	0					
ANR	10823072	Identifier	xps_init_postscript_font		10822932	0					
ANR	10823073	ArgumentList	ctx		10822932	1					
ANR	10823074	Argument	ctx		10822932	0					
ANR	10823075	Identifier	ctx		10822932	0					
ANR	10823076	Argument	font		10822932	1					
ANR	10823077	Identifier	font		10822932	0					
ANR	10823078	ElseStatement	else		10822932	0					
ANR	10823079	IfStatement	"if ( memcmp ( font -> data , ""\\0\\1\\0\\0"" , 4 ) == 0 )"		10822932	0					
ANR	10823080	Condition	"memcmp ( font -> data , ""\\0\\1\\0\\0"" , 4 ) == 0"	78:13:1779:1816	10822932	0	True				
ANR	10823081	EqualityExpression	"memcmp ( font -> data , ""\\0\\1\\0\\0"" , 4 ) == 0"		10822932	0		==			
ANR	10823082	CallExpression	"memcmp ( font -> data , ""\\0\\1\\0\\0"" , 4 )"		10822932	0					
ANR	10823083	Callee	memcmp		10822932	0					
ANR	10823084	Identifier	memcmp		10822932	0					
ANR	10823085	ArgumentList	font -> data		10822932	1					
ANR	10823086	Argument	font -> data		10822932	0					
ANR	10823087	PtrMemberAccess	font -> data		10822932	0					
ANR	10823088	Identifier	font		10822932	0					
ANR	10823089	Identifier	data		10822932	1					
ANR	10823090	Argument	"""\\0\\1\\0\\0"""		10822932	1					
ANR	10823091	PrimaryExpression	"""\\0\\1\\0\\0"""		10822932	0					
ANR	10823092	Argument	4		10822932	2					
ANR	10823093	PrimaryExpression	4		10822932	0					
ANR	10823094	PrimaryExpression	0		10822932	1					
ANR	10823095	ExpressionStatement	"code = xps_init_truetype_font ( ctx , font )"	79:8:1827:1867	10822932	1	True				
ANR	10823096	AssignmentExpression	"code = xps_init_truetype_font ( ctx , font )"		10822932	0		=			
ANR	10823097	Identifier	code		10822932	0					
ANR	10823098	CallExpression	"xps_init_truetype_font ( ctx , font )"		10822932	1					
ANR	10823099	Callee	xps_init_truetype_font		10822932	0					
ANR	10823100	Identifier	xps_init_truetype_font		10822932	0					
ANR	10823101	ArgumentList	ctx		10822932	1					
ANR	10823102	Argument	ctx		10822932	0					
ANR	10823103	Identifier	ctx		10822932	0					
ANR	10823104	Argument	font		10822932	1					
ANR	10823105	Identifier	font		10822932	0					
ANR	10823106	ElseStatement	else		10822932	0					
ANR	10823107	IfStatement	"if ( memcmp ( font -> data , ""true"" , 4 ) == 0 )"		10822932	0					
ANR	10823108	Condition	"memcmp ( font -> data , ""true"" , 4 ) == 0"	80:13:1882:1915	10822932	0	True				
ANR	10823109	EqualityExpression	"memcmp ( font -> data , ""true"" , 4 ) == 0"		10822932	0		==			
ANR	10823110	CallExpression	"memcmp ( font -> data , ""true"" , 4 )"		10822932	0					
ANR	10823111	Callee	memcmp		10822932	0					
ANR	10823112	Identifier	memcmp		10822932	0					
ANR	10823113	ArgumentList	font -> data		10822932	1					
ANR	10823114	Argument	font -> data		10822932	0					
ANR	10823115	PtrMemberAccess	font -> data		10822932	0					
ANR	10823116	Identifier	font		10822932	0					
ANR	10823117	Identifier	data		10822932	1					
ANR	10823118	Argument	"""true"""		10822932	1					
ANR	10823119	PrimaryExpression	"""true"""		10822932	0					
ANR	10823120	Argument	4		10822932	2					
ANR	10823121	PrimaryExpression	4		10822932	0					
ANR	10823122	PrimaryExpression	0		10822932	1					
ANR	10823123	ExpressionStatement	"code = xps_init_truetype_font ( ctx , font )"	81:8:1926:1966	10822932	1	True				
ANR	10823124	AssignmentExpression	"code = xps_init_truetype_font ( ctx , font )"		10822932	0		=			
ANR	10823125	Identifier	code		10822932	0					
ANR	10823126	CallExpression	"xps_init_truetype_font ( ctx , font )"		10822932	1					
ANR	10823127	Callee	xps_init_truetype_font		10822932	0					
ANR	10823128	Identifier	xps_init_truetype_font		10822932	0					
ANR	10823129	ArgumentList	ctx		10822932	1					
ANR	10823130	Argument	ctx		10822932	0					
ANR	10823131	Identifier	ctx		10822932	0					
ANR	10823132	Argument	font		10822932	1					
ANR	10823133	Identifier	font		10822932	0					
ANR	10823134	ElseStatement	else		10822932	0					
ANR	10823135	IfStatement	"if ( memcmp ( font -> data , ""ttcf"" , 4 ) == 0 )"		10822932	0					
ANR	10823136	Condition	"memcmp ( font -> data , ""ttcf"" , 4 ) == 0"	82:13:1981:2014	10822932	0	True				
ANR	10823137	EqualityExpression	"memcmp ( font -> data , ""ttcf"" , 4 ) == 0"		10822932	0		==			
ANR	10823138	CallExpression	"memcmp ( font -> data , ""ttcf"" , 4 )"		10822932	0					
ANR	10823139	Callee	memcmp		10822932	0					
ANR	10823140	Identifier	memcmp		10822932	0					
ANR	10823141	ArgumentList	font -> data		10822932	1					
ANR	10823142	Argument	font -> data		10822932	0					
ANR	10823143	PtrMemberAccess	font -> data		10822932	0					
ANR	10823144	Identifier	font		10822932	0					
ANR	10823145	Identifier	data		10822932	1					
ANR	10823146	Argument	"""ttcf"""		10822932	1					
ANR	10823147	PrimaryExpression	"""ttcf"""		10822932	0					
ANR	10823148	Argument	4		10822932	2					
ANR	10823149	PrimaryExpression	4		10822932	0					
ANR	10823150	PrimaryExpression	0		10822932	1					
ANR	10823151	ExpressionStatement	"code = xps_init_truetype_font ( ctx , font )"	83:8:2025:2065	10822932	1	True				
ANR	10823152	AssignmentExpression	"code = xps_init_truetype_font ( ctx , font )"		10822932	0		=			
ANR	10823153	Identifier	code		10822932	0					
ANR	10823154	CallExpression	"xps_init_truetype_font ( ctx , font )"		10822932	1					
ANR	10823155	Callee	xps_init_truetype_font		10822932	0					
ANR	10823156	Identifier	xps_init_truetype_font		10822932	0					
ANR	10823157	ArgumentList	ctx		10822932	1					
ANR	10823158	Argument	ctx		10822932	0					
ANR	10823159	Identifier	ctx		10822932	0					
ANR	10823160	Argument	font		10822932	1					
ANR	10823161	Identifier	font		10822932	0					
ANR	10823162	ElseStatement	else		10822932	0					
ANR	10823163	CompoundStatement		37:4:919:919	10822932	0					
ANR	10823164	ExpressionStatement	"xps_free_font ( ctx , font )"	86:8:2090:2114	10822932	0	True				
ANR	10823165	CallExpression	"xps_free_font ( ctx , font )"		10822932	0					
ANR	10823166	Callee	xps_free_font		10822932	0					
ANR	10823167	Identifier	xps_free_font		10822932	0					
ANR	10823168	ArgumentList	ctx		10822932	1					
ANR	10823169	Argument	ctx		10822932	0					
ANR	10823170	Identifier	ctx		10822932	0					
ANR	10823171	Argument	font		10822932	1					
ANR	10823172	Identifier	font		10822932	0					
ANR	10823173	ExpressionStatement	"gs_throw ( - 1 , ""not an opentype font"" )"	87:8:2124:2160	10822932	1	True				
ANR	10823174	CallExpression	"gs_throw ( - 1 , ""not an opentype font"" )"		10822932	0					
ANR	10823175	Callee	gs_throw		10822932	0					
ANR	10823176	Identifier	gs_throw		10822932	0					
ANR	10823177	ArgumentList	- 1		10822932	1					
ANR	10823178	Argument	- 1		10822932	0					
ANR	10823179	UnaryOperationExpression	- 1		10822932	0					
ANR	10823180	UnaryOperator	-		10822932	0					
ANR	10823181	PrimaryExpression	1		10822932	1					
ANR	10823182	Argument	"""not an opentype font"""		10822932	1					
ANR	10823183	PrimaryExpression	"""not an opentype font"""		10822932	0					
ANR	10823184	ReturnStatement	return NULL ;	88:8:2170:2181	10822932	2	True				
ANR	10823185	Identifier	NULL		10822932	0					
ANR	10823186	IfStatement	if ( code < 0 )		10822932	18					
ANR	10823187	Condition	code < 0	91:8:2198:2205	10822932	0	True				
ANR	10823188	RelationalExpression	code < 0		10822932	0		<			
ANR	10823189	Identifier	code		10822932	0					
ANR	10823190	PrimaryExpression	0		10822932	1					
ANR	10823191	CompoundStatement		44:4:1051:1051	10822932	1					
ANR	10823192	ExpressionStatement	"xps_free_font ( ctx , font )"	93:8:2222:2246	10822932	0	True				
ANR	10823193	CallExpression	"xps_free_font ( ctx , font )"		10822932	0					
ANR	10823194	Callee	xps_free_font		10822932	0					
ANR	10823195	Identifier	xps_free_font		10822932	0					
ANR	10823196	ArgumentList	ctx		10822932	1					
ANR	10823197	Argument	ctx		10822932	0					
ANR	10823198	Identifier	ctx		10822932	0					
ANR	10823199	Argument	font		10822932	1					
ANR	10823200	Identifier	font		10822932	0					
ANR	10823201	ExpressionStatement	"gs_rethrow ( - 1 , ""cannot init font"" )"	94:8:2256:2290	10822932	1	True				
ANR	10823202	CallExpression	"gs_rethrow ( - 1 , ""cannot init font"" )"		10822932	0					
ANR	10823203	Callee	gs_rethrow		10822932	0					
ANR	10823204	Identifier	gs_rethrow		10822932	0					
ANR	10823205	ArgumentList	- 1		10822932	1					
ANR	10823206	Argument	- 1		10822932	0					
ANR	10823207	UnaryOperationExpression	- 1		10822932	0					
ANR	10823208	UnaryOperator	-		10822932	0					
ANR	10823209	PrimaryExpression	1		10822932	1					
ANR	10823210	Argument	"""cannot init font"""		10822932	1					
ANR	10823211	PrimaryExpression	"""cannot init font"""		10822932	0					
ANR	10823212	ReturnStatement	return NULL ;	95:8:2300:2311	10822932	2	True				
ANR	10823213	Identifier	NULL		10822932	0					
ANR	10823214	ExpressionStatement	xps_load_sfnt_cmap ( font )	98:4:2324:2348	10822932	19	True				
ANR	10823215	CallExpression	xps_load_sfnt_cmap ( font )		10822932	0					
ANR	10823216	Callee	xps_load_sfnt_cmap		10822932	0					
ANR	10823217	Identifier	xps_load_sfnt_cmap		10822932	0					
ANR	10823218	ArgumentList	font		10822932	1					
ANR	10823219	Argument	font		10822932	0					
ANR	10823220	Identifier	font		10822932	0					
ANR	10823221	ReturnStatement	return font ;	100:4:2355:2366	10822932	20	True				
ANR	10823222	Identifier	font		10822932	0					
ANR	10823223	ReturnType	xps_font_t *		10822932	1					
ANR	10823224	Identifier	xps_new_font		10822932	2					
ANR	10823225	ParameterList	"xps_context_t * ctx , byte * buf , int buflen , int index"		10822932	3					
ANR	10823226	Parameter	xps_context_t * ctx	48:13:1106:1123	10822932	0	True				
ANR	10823227	ParameterType	xps_context_t *		10822932	0					
ANR	10823228	Identifier	ctx		10822932	1					
ANR	10823229	Parameter	byte * buf	48:33:1126:1134	10822932	1	True				
ANR	10823230	ParameterType	byte *		10822932	0					
ANR	10823231	Identifier	buf		10822932	1					
ANR	10823232	Parameter	int buflen	48:44:1137:1146	10822932	2	True				
ANR	10823233	ParameterType	int		10822932	0					
ANR	10823234	Identifier	buflen		10822932	1					
ANR	10823235	Parameter	int index	48:56:1149:1157	10822932	3	True				
ANR	10823236	ParameterType	int		10822932	0					
ANR	10823237	Identifier	index		10822932	1					
ANR	10823238	CFGEntryNode	ENTRY		10822932		True				
ANR	10823239	CFGExitNode	EXIT		10822932		True				
ANR	10823240	Symbol	font -> gsubrs		10822932						
ANR	10823241	Symbol	code		10822932						
ANR	10823242	Symbol	font -> usepua		10822932						
ANR	10823243	Symbol	font -> charstrings		10822932						
ANR	10823244	Symbol	font -> cmapsubtable		10822932						
ANR	10823245	Symbol	font -> subrs		10822932						
ANR	10823246	Symbol	font -> font		10822932						
ANR	10823247	Symbol	memcmp		10822932						
ANR	10823248	Symbol	buflen		10822932						
ANR	10823249	Symbol	xps_alloc		10822932						
ANR	10823250	Symbol	* font		10822932						
ANR	10823251	Symbol	font -> length		10822932						
ANR	10823252	Symbol	NULL		10822932						
ANR	10823253	Symbol	font -> cmapsubcount		10822932						
ANR	10823254	Symbol	font -> subfontid		10822932						
ANR	10823255	Symbol	xps_init_postscript_font		10822932						
ANR	10823256	Symbol	ctx		10822932						
ANR	10823257	Symbol	index		10822932						
ANR	10823258	Symbol	xps_init_truetype_font		10822932						
ANR	10823259	Symbol	gs_error_VMerror		10822932						
ANR	10823260	Symbol	font -> cffend		10822932						
ANR	10823261	Symbol	buf		10822932						
ANR	10823262	Symbol	font -> cffdata		10822932						
ANR	10823263	Symbol	font -> cmaptable		10822932						
ANR	10823264	Symbol	font -> data		10822932						
ANR	10823265	Symbol	font		10822932						
ANR	10823266	Function	xps_free_font	103:0:2371:2602							
ANR	10823267	FunctionDef	"xps_free_font (xps_context_t * ctx , xps_font_t * font)"		10823266	0					
ANR	10823268	CompoundStatement		105:0:2428:2602	10823266	0					
ANR	10823269	IfStatement	if ( font -> font )		10823266	0					
ANR	10823270	Condition	font -> font	106:8:2438:2447	10823266	0	True				
ANR	10823271	PtrMemberAccess	font -> font		10823266	0					
ANR	10823272	Identifier	font		10823266	0					
ANR	10823273	Identifier	font		10823266	1					
ANR	10823274	CompoundStatement		3:4:25:25	10823266	1					
ANR	10823275	ExpressionStatement	"gs_font_finalize ( ctx -> memory , font -> font )"	108:8:2464:2505	10823266	0	True				
ANR	10823276	CallExpression	"gs_font_finalize ( ctx -> memory , font -> font )"		10823266	0					
ANR	10823277	Callee	gs_font_finalize		10823266	0					
ANR	10823278	Identifier	gs_font_finalize		10823266	0					
ANR	10823279	ArgumentList	ctx -> memory		10823266	1					
ANR	10823280	Argument	ctx -> memory		10823266	0					
ANR	10823281	PtrMemberAccess	ctx -> memory		10823266	0					
ANR	10823282	Identifier	ctx		10823266	0					
ANR	10823283	Identifier	memory		10823266	1					
ANR	10823284	Argument	font -> font		10823266	1					
ANR	10823285	PtrMemberAccess	font -> font		10823266	0					
ANR	10823286	Identifier	font		10823266	0					
ANR	10823287	Identifier	font		10823266	1					
ANR	10823288	ExpressionStatement	"gs_free_object ( ctx -> memory , font -> font , ""font object"" )"	109:8:2515:2569	10823266	1	True				
ANR	10823289	CallExpression	"gs_free_object ( ctx -> memory , font -> font , ""font object"" )"		10823266	0					
ANR	10823290	Callee	gs_free_object		10823266	0					
ANR	10823291	Identifier	gs_free_object		10823266	0					
ANR	10823292	ArgumentList	ctx -> memory		10823266	1					
ANR	10823293	Argument	ctx -> memory		10823266	0					
ANR	10823294	PtrMemberAccess	ctx -> memory		10823266	0					
ANR	10823295	Identifier	ctx		10823266	0					
ANR	10823296	Identifier	memory		10823266	1					
ANR	10823297	Argument	font -> font		10823266	1					
ANR	10823298	PtrMemberAccess	font -> font		10823266	0					
ANR	10823299	Identifier	font		10823266	0					
ANR	10823300	Identifier	font		10823266	1					
ANR	10823301	Argument	"""font object"""		10823266	2					
ANR	10823302	PrimaryExpression	"""font object"""		10823266	0					
ANR	10823303	ExpressionStatement	"xps_free ( ctx , font )"	111:4:2581:2600	10823266	1	True				
ANR	10823304	CallExpression	"xps_free ( ctx , font )"		10823266	0					
ANR	10823305	Callee	xps_free		10823266	0					
ANR	10823306	Identifier	xps_free		10823266	0					
ANR	10823307	ArgumentList	ctx		10823266	1					
ANR	10823308	Argument	ctx		10823266	0					
ANR	10823309	Identifier	ctx		10823266	0					
ANR	10823310	Argument	font		10823266	1					
ANR	10823311	Identifier	font		10823266	0					
ANR	10823312	ReturnType	void		10823266	1					
ANR	10823313	Identifier	xps_free_font		10823266	2					
ANR	10823314	ParameterList	"xps_context_t * ctx , xps_font_t * font"		10823266	3					
ANR	10823315	Parameter	xps_context_t * ctx	104:14:2390:2407	10823266	0	True				
ANR	10823316	ParameterType	xps_context_t *		10823266	0					
ANR	10823317	Identifier	ctx		10823266	1					
ANR	10823318	Parameter	xps_font_t * font	104:34:2410:2425	10823266	1	True				
ANR	10823319	ParameterType	xps_font_t *		10823266	0					
ANR	10823320	Identifier	font		10823266	1					
ANR	10823321	CFGEntryNode	ENTRY		10823266		True				
ANR	10823322	CFGExitNode	EXIT		10823266		True				
ANR	10823323	Symbol	ctx -> memory		10823266						
ANR	10823324	Symbol	font -> font		10823266						
ANR	10823325	Symbol	ctx		10823266						
ANR	10823326	Symbol	* font		10823266						
ANR	10823327	Symbol	* ctx		10823266						
ANR	10823328	Symbol	font		10823266						
ANR	10823329	Function	xps_find_sfnt_table	119:0:2718:3626							
ANR	10823330	FunctionDef	"xps_find_sfnt_table (xps_font_t * font , const char * name , int * lengthp)"		10823329	0					
ANR	10823331	CompoundStatement		121:0:2792:3626	10823329	0					
ANR	10823332	IdentifierDeclStatement	int offset ;	122:4:2798:2808	10823329	0	True				
ANR	10823333	IdentifierDecl	offset		10823329	0					
ANR	10823334	IdentifierDeclType	int		10823329	0					
ANR	10823335	Identifier	offset		10823329	1					
ANR	10823336	IdentifierDeclStatement	int ntables ;	123:4:2814:2825	10823329	1	True				
ANR	10823337	IdentifierDecl	ntables		10823329	0					
ANR	10823338	IdentifierDeclType	int		10823329	0					
ANR	10823339	Identifier	ntables		10823329	1					
ANR	10823340	IdentifierDeclStatement	int i ;	124:4:2831:2836	10823329	2	True				
ANR	10823341	IdentifierDecl	i		10823329	0					
ANR	10823342	IdentifierDeclType	int		10823329	0					
ANR	10823343	Identifier	i		10823329	1					
ANR	10823344	IfStatement	if ( font -> length < 12 )		10823329	3					
ANR	10823345	Condition	font -> length < 12	126:8:2847:2863	10823329	0	True				
ANR	10823346	RelationalExpression	font -> length < 12		10823329	0		<			
ANR	10823347	PtrMemberAccess	font -> length		10823329	0					
ANR	10823348	Identifier	font		10823329	0					
ANR	10823349	Identifier	length		10823329	1					
ANR	10823350	PrimaryExpression	12		10823329	1					
ANR	10823351	ReturnStatement	return - 1 ;	127:8:2874:2883	10823329	1	True				
ANR	10823352	UnaryOperationExpression	- 1		10823329	0					
ANR	10823353	UnaryOperator	-		10823329	0					
ANR	10823354	PrimaryExpression	1		10823329	1					
ANR	10823355	IfStatement	"if ( ! memcmp ( font -> data , ""ttcf"" , 4 ) )"		10823329	4					
ANR	10823356	Condition	"! memcmp ( font -> data , ""ttcf"" , 4 )"	129:8:2894:2923	10823329	0	True				
ANR	10823357	UnaryOperationExpression	"! memcmp ( font -> data , ""ttcf"" , 4 )"		10823329	0					
ANR	10823358	UnaryOperator	!		10823329	0					
ANR	10823359	CallExpression	"memcmp ( font -> data , ""ttcf"" , 4 )"		10823329	1					
ANR	10823360	Callee	memcmp		10823329	0					
ANR	10823361	Identifier	memcmp		10823329	0					
ANR	10823362	ArgumentList	font -> data		10823329	1					
ANR	10823363	Argument	font -> data		10823329	0					
ANR	10823364	PtrMemberAccess	font -> data		10823329	0					
ANR	10823365	Identifier	font		10823329	0					
ANR	10823366	Identifier	data		10823329	1					
ANR	10823367	Argument	"""ttcf"""		10823329	1					
ANR	10823368	PrimaryExpression	"""ttcf"""		10823329	0					
ANR	10823369	Argument	4		10823329	2					
ANR	10823370	PrimaryExpression	4		10823329	0					
ANR	10823371	CompoundStatement		11:8:147:179	10823329	1					
ANR	10823372	IdentifierDeclStatement	int nfonts = u32 ( font -> data + 8 ) ;	131:8:2940:2972	10823329	0	True				
ANR	10823373	IdentifierDecl	nfonts = u32 ( font -> data + 8 )		10823329	0					
ANR	10823374	IdentifierDeclType	int		10823329	0					
ANR	10823375	Identifier	nfonts		10823329	1					
ANR	10823376	AssignmentExpression	nfonts = u32 ( font -> data + 8 )		10823329	2		=			
ANR	10823377	Identifier	nfonts		10823329	0					
ANR	10823378	CallExpression	u32 ( font -> data + 8 )		10823329	1					
ANR	10823379	Callee	u32		10823329	0					
ANR	10823380	Identifier	u32		10823329	0					
ANR	10823381	ArgumentList	font -> data + 8		10823329	1					
ANR	10823382	Argument	font -> data + 8		10823329	0					
ANR	10823383	AdditiveExpression	font -> data + 8		10823329	0		+			
ANR	10823384	PtrMemberAccess	font -> data		10823329	0					
ANR	10823385	Identifier	font		10823329	0					
ANR	10823386	Identifier	data		10823329	1					
ANR	10823387	PrimaryExpression	8		10823329	1					
ANR	10823388	IfStatement	if ( font -> subfontid < 0 || font -> subfontid >= nfonts )		10823329	1					
ANR	10823389	Condition	font -> subfontid < 0 || font -> subfontid >= nfonts	132:12:2986:3033	10823329	0	True				
ANR	10823390	OrExpression	font -> subfontid < 0 || font -> subfontid >= nfonts		10823329	0		||			
ANR	10823391	RelationalExpression	font -> subfontid < 0		10823329	0		<			
ANR	10823392	PtrMemberAccess	font -> subfontid		10823329	0					
ANR	10823393	Identifier	font		10823329	0					
ANR	10823394	Identifier	subfontid		10823329	1					
ANR	10823395	PrimaryExpression	0		10823329	1					
ANR	10823396	RelationalExpression	font -> subfontid >= nfonts		10823329	1		>=			
ANR	10823397	PtrMemberAccess	font -> subfontid		10823329	0					
ANR	10823398	Identifier	font		10823329	0					
ANR	10823399	Identifier	subfontid		10823329	1					
ANR	10823400	Identifier	nfonts		10823329	1					
ANR	10823401	CompoundStatement		13:8:251:251	10823329	1					
ANR	10823402	ExpressionStatement	"gs_warn ( ""Invalid subfont ID"" )"	134:12:3058:3087	10823329	0	True				
ANR	10823403	CallExpression	"gs_warn ( ""Invalid subfont ID"" )"		10823329	0					
ANR	10823404	Callee	gs_warn		10823329	0					
ANR	10823405	Identifier	gs_warn		10823329	0					
ANR	10823406	ArgumentList	"""Invalid subfont ID"""		10823329	1					
ANR	10823407	Argument	"""Invalid subfont ID"""		10823329	0					
ANR	10823408	PrimaryExpression	"""Invalid subfont ID"""		10823329	0					
ANR	10823409	ReturnStatement	return - 1 ;	135:12:3101:3110	10823329	1	True				
ANR	10823410	UnaryOperationExpression	- 1		10823329	0					
ANR	10823411	UnaryOperator	-		10823329	0					
ANR	10823412	PrimaryExpression	1		10823329	1					
ANR	10823413	ExpressionStatement	offset = u32 ( font -> data + 12 + font -> subfontid * 4 )	137:8:3130:3181	10823329	2	True				
ANR	10823414	AssignmentExpression	offset = u32 ( font -> data + 12 + font -> subfontid * 4 )		10823329	0		=			
ANR	10823415	Identifier	offset		10823329	0					
ANR	10823416	CallExpression	u32 ( font -> data + 12 + font -> subfontid * 4 )		10823329	1					
ANR	10823417	Callee	u32		10823329	0					
ANR	10823418	Identifier	u32		10823329	0					
ANR	10823419	ArgumentList	font -> data + 12 + font -> subfontid * 4		10823329	1					
ANR	10823420	Argument	font -> data + 12 + font -> subfontid * 4		10823329	0					
ANR	10823421	AdditiveExpression	font -> data + 12 + font -> subfontid * 4		10823329	0		+			
ANR	10823422	PtrMemberAccess	font -> data		10823329	0					
ANR	10823423	Identifier	font		10823329	0					
ANR	10823424	Identifier	data		10823329	1					
ANR	10823425	AdditiveExpression	12 + font -> subfontid * 4		10823329	1		+			
ANR	10823426	PrimaryExpression	12		10823329	0					
ANR	10823427	MultiplicativeExpression	font -> subfontid * 4		10823329	1		*			
ANR	10823428	PtrMemberAccess	font -> subfontid		10823329	0					
ANR	10823429	Identifier	font		10823329	0					
ANR	10823430	Identifier	subfontid		10823329	1					
ANR	10823431	PrimaryExpression	4		10823329	1					
ANR	10823432	ElseStatement	else		10823329	0					
ANR	10823433	CompoundStatement		20:4:409:409	10823329	0					
ANR	10823434	ExpressionStatement	offset = 0	141:8:3212:3222	10823329	0	True				
ANR	10823435	AssignmentExpression	offset = 0		10823329	0		=			
ANR	10823436	Identifier	offset		10823329	0					
ANR	10823437	PrimaryExpression	0		10823329	1					
ANR	10823438	ExpressionStatement	ntables = u16 ( font -> data + offset + 4 )	144:4:3235:3273	10823329	5	True				
ANR	10823439	AssignmentExpression	ntables = u16 ( font -> data + offset + 4 )		10823329	0		=			
ANR	10823440	Identifier	ntables		10823329	0					
ANR	10823441	CallExpression	u16 ( font -> data + offset + 4 )		10823329	1					
ANR	10823442	Callee	u16		10823329	0					
ANR	10823443	Identifier	u16		10823329	0					
ANR	10823444	ArgumentList	font -> data + offset + 4		10823329	1					
ANR	10823445	Argument	font -> data + offset + 4		10823329	0					
ANR	10823446	AdditiveExpression	font -> data + offset + 4		10823329	0		+			
ANR	10823447	PtrMemberAccess	font -> data		10823329	0					
ANR	10823448	Identifier	font		10823329	0					
ANR	10823449	Identifier	data		10823329	1					
ANR	10823450	AdditiveExpression	offset + 4		10823329	1		+			
ANR	10823451	Identifier	offset		10823329	0					
ANR	10823452	PrimaryExpression	4		10823329	1					
ANR	10823453	IfStatement	if ( font -> length < offset + 12 + ntables * 16 )		10823329	6					
ANR	10823454	Condition	font -> length < offset + 12 + ntables * 16	145:8:3283:3323	10823329	0	True				
ANR	10823455	RelationalExpression	font -> length < offset + 12 + ntables * 16		10823329	0		<			
ANR	10823456	PtrMemberAccess	font -> length		10823329	0					
ANR	10823457	Identifier	font		10823329	0					
ANR	10823458	Identifier	length		10823329	1					
ANR	10823459	AdditiveExpression	offset + 12 + ntables * 16		10823329	1		+			
ANR	10823460	Identifier	offset		10823329	0					
ANR	10823461	AdditiveExpression	12 + ntables * 16		10823329	1		+			
ANR	10823462	PrimaryExpression	12		10823329	0					
ANR	10823463	MultiplicativeExpression	ntables * 16		10823329	1		*			
ANR	10823464	Identifier	ntables		10823329	0					
ANR	10823465	PrimaryExpression	16		10823329	1					
ANR	10823466	ReturnStatement	return - 1 ;	146:8:3334:3343	10823329	1	True				
ANR	10823467	UnaryOperationExpression	- 1		10823329	0					
ANR	10823468	UnaryOperator	-		10823329	0					
ANR	10823469	PrimaryExpression	1		10823329	1					
ANR	10823470	ForStatement	for ( i = 0 ; i < ntables ; i ++ )		10823329	7					
ANR	10823471	ForInit	i = 0 ;	148:9:3355:3360	10823329	0	True				
ANR	10823472	AssignmentExpression	i = 0		10823329	0		=			
ANR	10823473	Identifier	i		10823329	0					
ANR	10823474	PrimaryExpression	0		10823329	1					
ANR	10823475	Condition	i < ntables	148:16:3362:3372	10823329	1	True				
ANR	10823476	RelationalExpression	i < ntables		10823329	0		<			
ANR	10823477	Identifier	i		10823329	0					
ANR	10823478	Identifier	ntables		10823329	1					
ANR	10823479	PostIncDecOperationExpression	i ++	148:29:3375:3377	10823329	2	True				
ANR	10823480	Identifier	i		10823329	0					
ANR	10823481	IncDec	++		10823329	1					
ANR	10823482	CompoundStatement		30:8:601:648	10823329	3					
ANR	10823483	IdentifierDeclStatement	byte * entry = font -> data + offset + 12 + i * 16 ;	150:8:3394:3441	10823329	0	True				
ANR	10823484	IdentifierDecl	* entry = font -> data + offset + 12 + i * 16		10823329	0					
ANR	10823485	IdentifierDeclType	byte *		10823329	0					
ANR	10823486	Identifier	entry		10823329	1					
ANR	10823487	AssignmentExpression	* entry = font -> data + offset + 12 + i * 16		10823329	2		=			
ANR	10823488	Identifier	entry		10823329	0					
ANR	10823489	AdditiveExpression	font -> data + offset + 12 + i * 16		10823329	1		+			
ANR	10823490	PtrMemberAccess	font -> data		10823329	0					
ANR	10823491	Identifier	font		10823329	0					
ANR	10823492	Identifier	data		10823329	1					
ANR	10823493	AdditiveExpression	offset + 12 + i * 16		10823329	1		+			
ANR	10823494	Identifier	offset		10823329	0					
ANR	10823495	AdditiveExpression	12 + i * 16		10823329	1		+			
ANR	10823496	PrimaryExpression	12		10823329	0					
ANR	10823497	MultiplicativeExpression	i * 16		10823329	1		*			
ANR	10823498	Identifier	i		10823329	0					
ANR	10823499	PrimaryExpression	16		10823329	1					
ANR	10823500	IfStatement	"if ( ! memcmp ( entry , name , 4 ) )"		10823329	1					
ANR	10823501	Condition	"! memcmp ( entry , name , 4 )"	151:12:3455:3477	10823329	0	True				
ANR	10823502	UnaryOperationExpression	"! memcmp ( entry , name , 4 )"		10823329	0					
ANR	10823503	UnaryOperator	!		10823329	0					
ANR	10823504	CallExpression	"memcmp ( entry , name , 4 )"		10823329	1					
ANR	10823505	Callee	memcmp		10823329	0					
ANR	10823506	Identifier	memcmp		10823329	0					
ANR	10823507	ArgumentList	entry		10823329	1					
ANR	10823508	Argument	entry		10823329	0					
ANR	10823509	Identifier	entry		10823329	0					
ANR	10823510	Argument	name		10823329	1					
ANR	10823511	Identifier	name		10823329	0					
ANR	10823512	Argument	4		10823329	2					
ANR	10823513	PrimaryExpression	4		10823329	0					
ANR	10823514	CompoundStatement		32:8:695:695	10823329	1					
ANR	10823515	IfStatement	if ( lengthp )		10823329	0					
ANR	10823516	Condition	lengthp	153:16:3506:3512	10823329	0	True				
ANR	10823517	Identifier	lengthp		10823329	0					
ANR	10823518	ExpressionStatement	* lengthp = u32 ( entry + 12 )	154:16:3531:3557	10823329	1	True				
ANR	10823519	AssignmentExpression	* lengthp = u32 ( entry + 12 )		10823329	0		=			
ANR	10823520	UnaryOperationExpression	* lengthp		10823329	0					
ANR	10823521	UnaryOperator	*		10823329	0					
ANR	10823522	Identifier	lengthp		10823329	1					
ANR	10823523	CallExpression	u32 ( entry + 12 )		10823329	1					
ANR	10823524	Callee	u32		10823329	0					
ANR	10823525	Identifier	u32		10823329	0					
ANR	10823526	ArgumentList	entry + 12		10823329	1					
ANR	10823527	Argument	entry + 12		10823329	0					
ANR	10823528	AdditiveExpression	entry + 12		10823329	0		+			
ANR	10823529	Identifier	entry		10823329	0					
ANR	10823530	PrimaryExpression	12		10823329	1					
ANR	10823531	ReturnStatement	return u32 ( entry + 8 ) ;	155:12:3571:3592	10823329	1	True				
ANR	10823532	CallExpression	u32 ( entry + 8 )		10823329	0					
ANR	10823533	Callee	u32		10823329	0					
ANR	10823534	Identifier	u32		10823329	0					
ANR	10823535	ArgumentList	entry + 8		10823329	1					
ANR	10823536	Argument	entry + 8		10823329	0					
ANR	10823537	AdditiveExpression	entry + 8		10823329	0		+			
ANR	10823538	Identifier	entry		10823329	0					
ANR	10823539	PrimaryExpression	8		10823329	1					
ANR	10823540	ReturnStatement	return - 1 ;	159:4:3615:3624	10823329	8	True				
ANR	10823541	UnaryOperationExpression	- 1		10823329	0					
ANR	10823542	UnaryOperator	-		10823329	0					
ANR	10823543	PrimaryExpression	1		10823329	1					
ANR	10823544	ReturnType	int		10823329	1					
ANR	10823545	Identifier	xps_find_sfnt_table		10823329	2					
ANR	10823546	ParameterList	"xps_font_t * font , const char * name , int * lengthp"		10823329	3					
ANR	10823547	Parameter	xps_font_t * font	120:20:2742:2757	10823329	0	True				
ANR	10823548	ParameterType	xps_font_t *		10823329	0					
ANR	10823549	Identifier	font		10823329	1					
ANR	10823550	Parameter	const char * name	120:38:2760:2775	10823329	1	True				
ANR	10823551	ParameterType	const char *		10823329	0					
ANR	10823552	Identifier	name		10823329	1					
ANR	10823553	Parameter	int * lengthp	120:56:2778:2789	10823329	2	True				
ANR	10823554	ParameterType	int *		10823329	0					
ANR	10823555	Identifier	lengthp		10823329	1					
ANR	10823556	CFGEntryNode	ENTRY		10823329		True				
ANR	10823557	CFGExitNode	EXIT		10823329		True				
ANR	10823558	Symbol	offset		10823329						
ANR	10823559	Symbol	font -> subfontid		10823329						
ANR	10823560	Symbol	i		10823329						
ANR	10823561	Symbol	* lengthp		10823329						
ANR	10823562	Symbol	nfonts		10823329						
ANR	10823563	Symbol	entry		10823329						
ANR	10823564	Symbol	lengthp		10823329						
ANR	10823565	Symbol	memcmp		10823329						
ANR	10823566	Symbol	u32		10823329						
ANR	10823567	Symbol	font -> data		10823329						
ANR	10823568	Symbol	ntables		10823329						
ANR	10823569	Symbol	name		10823329						
ANR	10823570	Symbol	* font		10823329						
ANR	10823571	Symbol	u16		10823329						
ANR	10823572	Symbol	font -> length		10823329						
ANR	10823573	Symbol	font		10823329						
ANR	10823574	Function	xps_load_sfnt_name	165:0:3711:6919							
ANR	10823575	FunctionDef	"xps_load_sfnt_name (xps_font_t * font , char * namep , const int buflen)"		10823574	0					
ANR	10823576	CompoundStatement		167:0:3784:6919	10823574	0					
ANR	10823577	IdentifierDeclStatement	byte * namedata ;	168:4:3790:3804	10823574	0	True				
ANR	10823578	IdentifierDecl	* namedata		10823574	0					
ANR	10823579	IdentifierDeclType	byte *		10823574	0					
ANR	10823580	Identifier	namedata		10823574	1					
ANR	10823581	IdentifierDeclStatement	"int offset , length ;"	169:4:3810:3828	10823574	1	True				
ANR	10823582	IdentifierDecl	offset		10823574	0					
ANR	10823583	IdentifierDeclType	int		10823574	0					
ANR	10823584	Identifier	offset		10823574	1					
ANR	10823585	IdentifierDecl	length		10823574	1					
ANR	10823586	IdentifierDeclType	int		10823574	0					
ANR	10823587	Identifier	length		10823574	1					
ANR	10823588	IdentifierDeclStatement	"int count , stringoffset ;"	171:4:3854:3877	10823574	2	True				
ANR	10823589	IdentifierDecl	count		10823574	0					
ANR	10823590	IdentifierDeclType	int		10823574	0					
ANR	10823591	Identifier	count		10823574	1					
ANR	10823592	IdentifierDecl	stringoffset		10823574	1					
ANR	10823593	IdentifierDeclType	int		10823574	0					
ANR	10823594	Identifier	stringoffset		10823574	1					
ANR	10823595	IdentifierDeclStatement	int found ;	172:4:3883:3892	10823574	3	True				
ANR	10823596	IdentifierDecl	found		10823574	0					
ANR	10823597	IdentifierDeclType	int		10823574	0					
ANR	10823598	Identifier	found		10823574	1					
ANR	10823599	IdentifierDeclStatement	"int i , k ;"	173:4:3898:3906	10823574	4	True				
ANR	10823600	IdentifierDecl	i		10823574	0					
ANR	10823601	IdentifierDeclType	int		10823574	0					
ANR	10823602	Identifier	i		10823574	1					
ANR	10823603	IdentifierDecl	k		10823574	1					
ANR	10823604	IdentifierDeclType	int		10823574	0					
ANR	10823605	Identifier	k		10823574	1					
ANR	10823606	ExpressionStatement	found = 0	175:4:3913:3922	10823574	5	True				
ANR	10823607	AssignmentExpression	found = 0		10823574	0		=			
ANR	10823608	Identifier	found		10823574	0					
ANR	10823609	PrimaryExpression	0		10823574	1					
ANR	10823610	ExpressionStatement	"strcpy ( namep , ""Unknown"" )"	176:4:3928:3952	10823574	6	True				
ANR	10823611	CallExpression	"strcpy ( namep , ""Unknown"" )"		10823574	0					
ANR	10823612	Callee	strcpy		10823574	0					
ANR	10823613	Identifier	strcpy		10823574	0					
ANR	10823614	ArgumentList	namep		10823574	1					
ANR	10823615	Argument	namep		10823574	0					
ANR	10823616	Identifier	namep		10823574	0					
ANR	10823617	Argument	"""Unknown"""		10823574	1					
ANR	10823618	PrimaryExpression	"""Unknown"""		10823574	0					
ANR	10823619	ExpressionStatement	"offset = xps_find_sfnt_table ( font , ""name"" , & length )"	178:4:3959:4010	10823574	7	True				
ANR	10823620	AssignmentExpression	"offset = xps_find_sfnt_table ( font , ""name"" , & length )"		10823574	0		=			
ANR	10823621	Identifier	offset		10823574	0					
ANR	10823622	CallExpression	"xps_find_sfnt_table ( font , ""name"" , & length )"		10823574	1					
ANR	10823623	Callee	xps_find_sfnt_table		10823574	0					
ANR	10823624	Identifier	xps_find_sfnt_table		10823574	0					
ANR	10823625	ArgumentList	font		10823574	1					
ANR	10823626	Argument	font		10823574	0					
ANR	10823627	Identifier	font		10823574	0					
ANR	10823628	Argument	"""name"""		10823574	1					
ANR	10823629	PrimaryExpression	"""name"""		10823574	0					
ANR	10823630	Argument	& length		10823574	2					
ANR	10823631	UnaryOperationExpression	& length		10823574	0					
ANR	10823632	UnaryOperator	&		10823574	0					
ANR	10823633	Identifier	length		10823574	1					
ANR	10823634	IfStatement	if ( offset < 0 || length < 6 )		10823574	8					
ANR	10823635	Condition	offset < 0 || length < 6	179:8:4020:4043	10823574	0	True				
ANR	10823636	OrExpression	offset < 0 || length < 6		10823574	0		||			
ANR	10823637	RelationalExpression	offset < 0		10823574	0		<			
ANR	10823638	Identifier	offset		10823574	0					
ANR	10823639	PrimaryExpression	0		10823574	1					
ANR	10823640	RelationalExpression	length < 6		10823574	1		<			
ANR	10823641	Identifier	length		10823574	0					
ANR	10823642	PrimaryExpression	6		10823574	1					
ANR	10823643	CompoundStatement		14:4:265:265	10823574	1					
ANR	10823644	ExpressionStatement	"gs_warn ( ""cannot find name table"" )"	181:8:4060:4093	10823574	0	True				
ANR	10823645	CallExpression	"gs_warn ( ""cannot find name table"" )"		10823574	0					
ANR	10823646	Callee	gs_warn		10823574	0					
ANR	10823647	Identifier	gs_warn		10823574	0					
ANR	10823648	ArgumentList	"""cannot find name table"""		10823574	1					
ANR	10823649	Argument	"""cannot find name table"""		10823574	0					
ANR	10823650	PrimaryExpression	"""cannot find name table"""		10823574	0					
ANR	10823651	ReturnStatement	return ;	182:8:4103:4109	10823574	1	True				
ANR	10823652	IfStatement	if ( offset + 6 > font -> length )		10823574	9					
ANR	10823653	Condition	offset + 6 > font -> length	188:8:4221:4245	10823574	0	True				
ANR	10823654	RelationalExpression	offset + 6 > font -> length		10823574	0		>			
ANR	10823655	AdditiveExpression	offset + 6		10823574	0		+			
ANR	10823656	Identifier	offset		10823574	0					
ANR	10823657	PrimaryExpression	6		10823574	1					
ANR	10823658	PtrMemberAccess	font -> length		10823574	1					
ANR	10823659	Identifier	font		10823574	0					
ANR	10823660	Identifier	length		10823574	1					
ANR	10823661	CompoundStatement		23:4:467:467	10823574	1					
ANR	10823662	ExpressionStatement	"gs_warn ( ""name table byte offset invalid"" )"	190:8:4262:4303	10823574	0	True				
ANR	10823663	CallExpression	"gs_warn ( ""name table byte offset invalid"" )"		10823574	0					
ANR	10823664	Callee	gs_warn		10823574	0					
ANR	10823665	Identifier	gs_warn		10823574	0					
ANR	10823666	ArgumentList	"""name table byte offset invalid"""		10823574	1					
ANR	10823667	Argument	"""name table byte offset invalid"""		10823574	0					
ANR	10823668	PrimaryExpression	"""name table byte offset invalid"""		10823574	0					
ANR	10823669	ReturnStatement	return ;	191:8:4313:4319	10823574	1	True				
ANR	10823670	ExpressionStatement	namedata = font -> data + offset	193:4:4331:4361	10823574	10	True				
ANR	10823671	AssignmentExpression	namedata = font -> data + offset		10823574	0		=			
ANR	10823672	Identifier	namedata		10823574	0					
ANR	10823673	AdditiveExpression	font -> data + offset		10823574	1		+			
ANR	10823674	PtrMemberAccess	font -> data		10823574	0					
ANR	10823675	Identifier	font		10823574	0					
ANR	10823676	Identifier	data		10823574	1					
ANR	10823677	Identifier	offset		10823574	1					
ANR	10823678	ExpressionStatement	count = u16 ( namedata + 2 )	196:4:4404:4429	10823574	11	True				
ANR	10823679	AssignmentExpression	count = u16 ( namedata + 2 )		10823574	0		=			
ANR	10823680	Identifier	count		10823574	0					
ANR	10823681	CallExpression	u16 ( namedata + 2 )		10823574	1					
ANR	10823682	Callee	u16		10823574	0					
ANR	10823683	Identifier	u16		10823574	0					
ANR	10823684	ArgumentList	namedata + 2		10823574	1					
ANR	10823685	Argument	namedata + 2		10823574	0					
ANR	10823686	AdditiveExpression	namedata + 2		10823574	0		+			
ANR	10823687	Identifier	namedata		10823574	0					
ANR	10823688	PrimaryExpression	2		10823574	1					
ANR	10823689	ExpressionStatement	stringoffset = u16 ( namedata + 4 )	197:4:4435:4467	10823574	12	True				
ANR	10823690	AssignmentExpression	stringoffset = u16 ( namedata + 4 )		10823574	0		=			
ANR	10823691	Identifier	stringoffset		10823574	0					
ANR	10823692	CallExpression	u16 ( namedata + 4 )		10823574	1					
ANR	10823693	Callee	u16		10823574	0					
ANR	10823694	Identifier	u16		10823574	0					
ANR	10823695	ArgumentList	namedata + 4		10823574	1					
ANR	10823696	Argument	namedata + 4		10823574	0					
ANR	10823697	AdditiveExpression	namedata + 4		10823574	0		+			
ANR	10823698	Identifier	namedata		10823574	0					
ANR	10823699	PrimaryExpression	4		10823574	1					
ANR	10823700	IfStatement	if ( stringoffset + offset > font -> length || offset + 6 + count * 12 > font -> length )		10823574	13					
ANR	10823701	Condition	stringoffset + offset > font -> length || offset + 6 + count * 12 > font -> length	199:8:4478:4563	10823574	0	True				
ANR	10823702	OrExpression	stringoffset + offset > font -> length || offset + 6 + count * 12 > font -> length		10823574	0		||			
ANR	10823703	RelationalExpression	stringoffset + offset > font -> length		10823574	0		>			
ANR	10823704	AdditiveExpression	stringoffset + offset		10823574	0		+			
ANR	10823705	Identifier	stringoffset		10823574	0					
ANR	10823706	Identifier	offset		10823574	1					
ANR	10823707	PtrMemberAccess	font -> length		10823574	1					
ANR	10823708	Identifier	font		10823574	0					
ANR	10823709	Identifier	length		10823574	1					
ANR	10823710	RelationalExpression	offset + 6 + count * 12 > font -> length		10823574	1		>			
ANR	10823711	AdditiveExpression	offset + 6 + count * 12		10823574	0		+			
ANR	10823712	Identifier	offset		10823574	0					
ANR	10823713	AdditiveExpression	6 + count * 12		10823574	1		+			
ANR	10823714	PrimaryExpression	6		10823574	0					
ANR	10823715	MultiplicativeExpression	count * 12		10823574	1		*			
ANR	10823716	Identifier	count		10823574	0					
ANR	10823717	PrimaryExpression	12		10823574	1					
ANR	10823718	PtrMemberAccess	font -> length		10823574	1					
ANR	10823719	Identifier	font		10823574	0					
ANR	10823720	Identifier	length		10823574	1					
ANR	10823721	CompoundStatement		35:4:785:785	10823574	1					
ANR	10823722	ExpressionStatement	"gs_warn ( ""name table invalid"" )"	202:8:4580:4609	10823574	0	True				
ANR	10823723	CallExpression	"gs_warn ( ""name table invalid"" )"		10823574	0					
ANR	10823724	Callee	gs_warn		10823574	0					
ANR	10823725	Identifier	gs_warn		10823574	0					
ANR	10823726	ArgumentList	"""name table invalid"""		10823574	1					
ANR	10823727	Argument	"""name table invalid"""		10823574	0					
ANR	10823728	PrimaryExpression	"""name table invalid"""		10823574	0					
ANR	10823729	ReturnStatement	return ;	203:8:4619:4625	10823574	1	True				
ANR	10823730	IfStatement	if ( length < 6 + ( count * 12 ) )		10823574	14					
ANR	10823731	Condition	length < 6 + ( count * 12 )	206:8:4642:4666	10823574	0	True				
ANR	10823732	RelationalExpression	length < 6 + ( count * 12 )		10823574	0		<			
ANR	10823733	Identifier	length		10823574	0					
ANR	10823734	AdditiveExpression	6 + ( count * 12 )		10823574	1		+			
ANR	10823735	PrimaryExpression	6		10823574	0					
ANR	10823736	MultiplicativeExpression	count * 12		10823574	1		*			
ANR	10823737	Identifier	count		10823574	0					
ANR	10823738	PrimaryExpression	12		10823574	1					
ANR	10823739	CompoundStatement		41:4:888:888	10823574	1					
ANR	10823740	ExpressionStatement	"gs_warn ( ""name table too short"" )"	208:8:4683:4714	10823574	0	True				
ANR	10823741	CallExpression	"gs_warn ( ""name table too short"" )"		10823574	0					
ANR	10823742	Callee	gs_warn		10823574	0					
ANR	10823743	Identifier	gs_warn		10823574	0					
ANR	10823744	ArgumentList	"""name table too short"""		10823574	1					
ANR	10823745	Argument	"""name table too short"""		10823574	0					
ANR	10823746	PrimaryExpression	"""name table too short"""		10823574	0					
ANR	10823747	ReturnStatement	return ;	209:8:4724:4730	10823574	1	True				
ANR	10823748	ForStatement	for ( i = 0 ; i < count ; i ++ )		10823574	15					
ANR	10823749	ForInit	i = 0 ;	212:9:4748:4753	10823574	0	True				
ANR	10823750	AssignmentExpression	i = 0		10823574	0		=			
ANR	10823751	Identifier	i		10823574	0					
ANR	10823752	PrimaryExpression	0		10823574	1					
ANR	10823753	Condition	i < count	212:16:4755:4763	10823574	1	True				
ANR	10823754	RelationalExpression	i < count		10823574	0		<			
ANR	10823755	Identifier	i		10823574	0					
ANR	10823756	Identifier	count		10823574	1					
ANR	10823757	PostIncDecOperationExpression	i ++	212:27:4766:4768	10823574	2	True				
ANR	10823758	Identifier	i		10823574	0					
ANR	10823759	IncDec	++		10823574	1					
ANR	10823760	CompoundStatement		52:8:1154:1182	10823574	3					
ANR	10823761	IdentifierDeclStatement	byte * record = namedata + 6 + i * 12 ;	214:8:4785:4821	10823574	0	True				
ANR	10823762	IdentifierDecl	* record = namedata + 6 + i * 12		10823574	0					
ANR	10823763	IdentifierDeclType	byte *		10823574	0					
ANR	10823764	Identifier	record		10823574	1					
ANR	10823765	AssignmentExpression	* record = namedata + 6 + i * 12		10823574	2		=			
ANR	10823766	Identifier	record		10823574	0					
ANR	10823767	AdditiveExpression	namedata + 6 + i * 12		10823574	1		+			
ANR	10823768	Identifier	namedata		10823574	0					
ANR	10823769	AdditiveExpression	6 + i * 12		10823574	1		+			
ANR	10823770	PrimaryExpression	6		10823574	0					
ANR	10823771	MultiplicativeExpression	i * 12		10823574	1		*			
ANR	10823772	Identifier	i		10823574	0					
ANR	10823773	PrimaryExpression	12		10823574	1					
ANR	10823774	IdentifierDeclStatement	int pid = u16 ( record + 0 ) ;	215:8:4831:4856	10823574	1	True				
ANR	10823775	IdentifierDecl	pid = u16 ( record + 0 )		10823574	0					
ANR	10823776	IdentifierDeclType	int		10823574	0					
ANR	10823777	Identifier	pid		10823574	1					
ANR	10823778	AssignmentExpression	pid = u16 ( record + 0 )		10823574	2		=			
ANR	10823779	Identifier	pid		10823574	0					
ANR	10823780	CallExpression	u16 ( record + 0 )		10823574	1					
ANR	10823781	Callee	u16		10823574	0					
ANR	10823782	Identifier	u16		10823574	0					
ANR	10823783	ArgumentList	record + 0		10823574	1					
ANR	10823784	Argument	record + 0		10823574	0					
ANR	10823785	AdditiveExpression	record + 0		10823574	0		+			
ANR	10823786	Identifier	record		10823574	0					
ANR	10823787	PrimaryExpression	0		10823574	1					
ANR	10823788	IdentifierDeclStatement	int eid = u16 ( record + 2 ) ;	216:8:4866:4891	10823574	2	True				
ANR	10823789	IdentifierDecl	eid = u16 ( record + 2 )		10823574	0					
ANR	10823790	IdentifierDeclType	int		10823574	0					
ANR	10823791	Identifier	eid		10823574	1					
ANR	10823792	AssignmentExpression	eid = u16 ( record + 2 )		10823574	2		=			
ANR	10823793	Identifier	eid		10823574	0					
ANR	10823794	CallExpression	u16 ( record + 2 )		10823574	1					
ANR	10823795	Callee	u16		10823574	0					
ANR	10823796	Identifier	u16		10823574	0					
ANR	10823797	ArgumentList	record + 2		10823574	1					
ANR	10823798	Argument	record + 2		10823574	0					
ANR	10823799	AdditiveExpression	record + 2		10823574	0		+			
ANR	10823800	Identifier	record		10823574	0					
ANR	10823801	PrimaryExpression	2		10823574	1					
ANR	10823802	IdentifierDeclStatement	int langid = u16 ( record + 4 ) ;	217:8:4901:4929	10823574	3	True				
ANR	10823803	IdentifierDecl	langid = u16 ( record + 4 )		10823574	0					
ANR	10823804	IdentifierDeclType	int		10823574	0					
ANR	10823805	Identifier	langid		10823574	1					
ANR	10823806	AssignmentExpression	langid = u16 ( record + 4 )		10823574	2		=			
ANR	10823807	Identifier	langid		10823574	0					
ANR	10823808	CallExpression	u16 ( record + 4 )		10823574	1					
ANR	10823809	Callee	u16		10823574	0					
ANR	10823810	Identifier	u16		10823574	0					
ANR	10823811	ArgumentList	record + 4		10823574	1					
ANR	10823812	Argument	record + 4		10823574	0					
ANR	10823813	AdditiveExpression	record + 4		10823574	0		+			
ANR	10823814	Identifier	record		10823574	0					
ANR	10823815	PrimaryExpression	4		10823574	1					
ANR	10823816	IdentifierDeclStatement	int nameid = u16 ( record + 6 ) ;	218:8:4939:4967	10823574	4	True				
ANR	10823817	IdentifierDecl	nameid = u16 ( record + 6 )		10823574	0					
ANR	10823818	IdentifierDeclType	int		10823574	0					
ANR	10823819	Identifier	nameid		10823574	1					
ANR	10823820	AssignmentExpression	nameid = u16 ( record + 6 )		10823574	2		=			
ANR	10823821	Identifier	nameid		10823574	0					
ANR	10823822	CallExpression	u16 ( record + 6 )		10823574	1					
ANR	10823823	Callee	u16		10823574	0					
ANR	10823824	Identifier	u16		10823574	0					
ANR	10823825	ArgumentList	record + 6		10823574	1					
ANR	10823826	Argument	record + 6		10823574	0					
ANR	10823827	AdditiveExpression	record + 6		10823574	0		+			
ANR	10823828	Identifier	record		10823574	0					
ANR	10823829	PrimaryExpression	6		10823574	1					
ANR	10823830	ExpressionStatement	length = u16 ( record + 8 )	219:8:4977:5001	10823574	5	True				
ANR	10823831	AssignmentExpression	length = u16 ( record + 8 )		10823574	0		=			
ANR	10823832	Identifier	length		10823574	0					
ANR	10823833	CallExpression	u16 ( record + 8 )		10823574	1					
ANR	10823834	Callee	u16		10823574	0					
ANR	10823835	Identifier	u16		10823574	0					
ANR	10823836	ArgumentList	record + 8		10823574	1					
ANR	10823837	Argument	record + 8		10823574	0					
ANR	10823838	AdditiveExpression	record + 8		10823574	0		+			
ANR	10823839	Identifier	record		10823574	0					
ANR	10823840	PrimaryExpression	8		10823574	1					
ANR	10823841	ExpressionStatement	offset = u16 ( record + 10 )	220:8:5011:5036	10823574	6	True				
ANR	10823842	AssignmentExpression	offset = u16 ( record + 10 )		10823574	0		=			
ANR	10823843	Identifier	offset		10823574	0					
ANR	10823844	CallExpression	u16 ( record + 10 )		10823574	1					
ANR	10823845	Callee	u16		10823574	0					
ANR	10823846	Identifier	u16		10823574	0					
ANR	10823847	ArgumentList	record + 10		10823574	1					
ANR	10823848	Argument	record + 10		10823574	0					
ANR	10823849	AdditiveExpression	record + 10		10823574	0		+			
ANR	10823850	Identifier	record		10823574	0					
ANR	10823851	PrimaryExpression	10		10823574	1					
ANR	10823852	ExpressionStatement	length = length > buflen - 1 ? buflen - 1 : length	222:8:5047:5096	10823574	7	True				
ANR	10823853	AssignmentExpression	length = length > buflen - 1 ? buflen - 1 : length		10823574	0		=			
ANR	10823854	Identifier	length		10823574	0					
ANR	10823855	ConditionalExpression	length > buflen - 1 ? buflen - 1 : length		10823574	1					
ANR	10823856	Condition	length > buflen - 1		10823574	0					
ANR	10823857	RelationalExpression	length > buflen - 1		10823574	0		>			
ANR	10823858	Identifier	length		10823574	0					
ANR	10823859	AdditiveExpression	buflen - 1		10823574	1		-			
ANR	10823860	Identifier	buflen		10823574	0					
ANR	10823861	PrimaryExpression	1		10823574	1					
ANR	10823862	AdditiveExpression	buflen - 1		10823574	1		-			
ANR	10823863	Identifier	buflen		10823574	0					
ANR	10823864	PrimaryExpression	1		10823574	1					
ANR	10823865	Identifier	length		10823574	2					
ANR	10823866	IfStatement	if ( namedata + stringoffset + offset >= font -> data + font -> length )		10823574	8					
ANR	10823867	Condition	namedata + stringoffset + offset >= font -> data + font -> length	223:12:5110:5170	10823574	0	True				
ANR	10823868	RelationalExpression	namedata + stringoffset + offset >= font -> data + font -> length		10823574	0		>=			
ANR	10823869	AdditiveExpression	namedata + stringoffset + offset		10823574	0		+			
ANR	10823870	Identifier	namedata		10823574	0					
ANR	10823871	AdditiveExpression	stringoffset + offset		10823574	1		+			
ANR	10823872	Identifier	stringoffset		10823574	0					
ANR	10823873	Identifier	offset		10823574	1					
ANR	10823874	AdditiveExpression	font -> data + font -> length		10823574	1		+			
ANR	10823875	PtrMemberAccess	font -> data		10823574	0					
ANR	10823876	Identifier	font		10823574	0					
ANR	10823877	Identifier	data		10823574	1					
ANR	10823878	PtrMemberAccess	font -> length		10823574	1					
ANR	10823879	Identifier	font		10823574	0					
ANR	10823880	Identifier	length		10823574	1					
ANR	10823881	ContinueStatement	continue ;	224:12:5185:5193	10823574	1	True				
ANR	10823882	IfStatement	if ( namedata + stringoffset + offset + length >= font -> data + font -> length )		10823574	9					
ANR	10823883	Condition	namedata + stringoffset + offset + length >= font -> data + font -> length	226:12:5208:5278	10823574	0	True				
ANR	10823884	RelationalExpression	namedata + stringoffset + offset + length >= font -> data + font -> length		10823574	0		>=			
ANR	10823885	AdditiveExpression	namedata + stringoffset + offset + length		10823574	0		+			
ANR	10823886	Identifier	namedata		10823574	0					
ANR	10823887	AdditiveExpression	stringoffset + offset + length		10823574	1		+			
ANR	10823888	Identifier	stringoffset		10823574	0					
ANR	10823889	AdditiveExpression	offset + length		10823574	1		+			
ANR	10823890	Identifier	offset		10823574	0					
ANR	10823891	Identifier	length		10823574	1					
ANR	10823892	AdditiveExpression	font -> data + font -> length		10823574	1		+			
ANR	10823893	PtrMemberAccess	font -> data		10823574	0					
ANR	10823894	Identifier	font		10823574	0					
ANR	10823895	Identifier	data		10823574	1					
ANR	10823896	PtrMemberAccess	font -> length		10823574	1					
ANR	10823897	Identifier	font		10823574	0					
ANR	10823898	Identifier	length		10823574	1					
ANR	10823899	ExpressionStatement	length = ( font -> data + font -> length ) - ( namedata + stringoffset + offset )	227:12:5293:5367	10823574	1	True				
ANR	10823900	AssignmentExpression	length = ( font -> data + font -> length ) - ( namedata + stringoffset + offset )		10823574	0		=			
ANR	10823901	Identifier	length		10823574	0					
ANR	10823902	AdditiveExpression	( font -> data + font -> length ) - ( namedata + stringoffset + offset )		10823574	1		-			
ANR	10823903	AdditiveExpression	font -> data + font -> length		10823574	0		+			
ANR	10823904	PtrMemberAccess	font -> data		10823574	0					
ANR	10823905	Identifier	font		10823574	0					
ANR	10823906	Identifier	data		10823574	1					
ANR	10823907	PtrMemberAccess	font -> length		10823574	1					
ANR	10823908	Identifier	font		10823574	0					
ANR	10823909	Identifier	length		10823574	1					
ANR	10823910	AdditiveExpression	namedata + stringoffset + offset		10823574	1		+			
ANR	10823911	Identifier	namedata		10823574	0					
ANR	10823912	AdditiveExpression	stringoffset + offset		10823574	1		+			
ANR	10823913	Identifier	stringoffset		10823574	0					
ANR	10823914	Identifier	offset		10823574	1					
ANR	10823915	IfStatement	if ( nameid == 4 || nameid == 6 )		10823574	10					
ANR	10823916	Condition	nameid == 4 || nameid == 6	230:12:5430:5455	10823574	0	True				
ANR	10823917	OrExpression	nameid == 4 || nameid == 6		10823574	0		||			
ANR	10823918	EqualityExpression	nameid == 4		10823574	0		==			
ANR	10823919	Identifier	nameid		10823574	0					
ANR	10823920	PrimaryExpression	4		10823574	1					
ANR	10823921	EqualityExpression	nameid == 6		10823574	1		==			
ANR	10823922	Identifier	nameid		10823574	0					
ANR	10823923	PrimaryExpression	6		10823574	1					
ANR	10823924	CompoundStatement		65:8:1681:1681	10823574	1					
ANR	10823925	IfStatement	if ( pid == 1 && eid == 0 && langid == 0 )		10823574	0					
ANR	10823926	Condition	pid == 1 && eid == 0 && langid == 0	232:16:5484:5518	10823574	0	True				
ANR	10823927	AndExpression	pid == 1 && eid == 0 && langid == 0		10823574	0		&&			
ANR	10823928	EqualityExpression	pid == 1		10823574	0		==			
ANR	10823929	Identifier	pid		10823574	0					
ANR	10823930	PrimaryExpression	1		10823574	1					
ANR	10823931	AndExpression	eid == 0 && langid == 0		10823574	1		&&			
ANR	10823932	EqualityExpression	eid == 0		10823574	0		==			
ANR	10823933	Identifier	eid		10823574	0					
ANR	10823934	PrimaryExpression	0		10823574	1					
ANR	10823935	EqualityExpression	langid == 0		10823574	1		==			
ANR	10823936	Identifier	langid		10823574	0					
ANR	10823937	PrimaryExpression	0		10823574	1					
ANR	10823938	CompoundStatement		67:12:1773:1773	10823574	1					
ANR	10823939	IfStatement	if ( found < 3 )		10823574	0					
ANR	10823940	Condition	found < 3	234:20:5580:5588	10823574	0	True				
ANR	10823941	RelationalExpression	found < 3		10823574	0		<			
ANR	10823942	Identifier	found		10823574	0					
ANR	10823943	PrimaryExpression	3		10823574	1					
ANR	10823944	CompoundStatement		69:16:1822:1822	10823574	1					
ANR	10823945	ExpressionStatement	"memcpy ( namep , namedata + stringoffset + offset , length )"	236:20:5629:5684	10823574	0	True				
ANR	10823946	CallExpression	"memcpy ( namep , namedata + stringoffset + offset , length )"		10823574	0					
ANR	10823947	Callee	memcpy		10823574	0					
ANR	10823948	Identifier	memcpy		10823574	0					
ANR	10823949	ArgumentList	namep		10823574	1					
ANR	10823950	Argument	namep		10823574	0					
ANR	10823951	Identifier	namep		10823574	0					
ANR	10823952	Argument	namedata + stringoffset + offset		10823574	1					
ANR	10823953	AdditiveExpression	namedata + stringoffset + offset		10823574	0		+			
ANR	10823954	Identifier	namedata		10823574	0					
ANR	10823955	AdditiveExpression	stringoffset + offset		10823574	1		+			
ANR	10823956	Identifier	stringoffset		10823574	0					
ANR	10823957	Identifier	offset		10823574	1					
ANR	10823958	Argument	length		10823574	2					
ANR	10823959	Identifier	length		10823574	0					
ANR	10823960	ExpressionStatement	namep [ length ] = 0	237:20:5706:5723	10823574	1	True				
ANR	10823961	AssignmentExpression	namep [ length ] = 0		10823574	0		=			
ANR	10823962	ArrayIndexing	namep [ length ]		10823574	0					
ANR	10823963	Identifier	namep		10823574	0					
ANR	10823964	Identifier	length		10823574	1					
ANR	10823965	PrimaryExpression	0		10823574	1					
ANR	10823966	ExpressionStatement	found = 3	238:20:5745:5754	10823574	2	True				
ANR	10823967	AssignmentExpression	found = 3		10823574	0		=			
ANR	10823968	Identifier	found		10823574	0					
ANR	10823969	PrimaryExpression	3		10823574	1					
ANR	10823970	IfStatement	if ( pid == 3 && eid == 1 && langid == 0x409 )		10823574	1					
ANR	10823971	Condition	pid == 3 && eid == 1 && langid == 0x409	242:16:5805:5843	10823574	0	True				
ANR	10823972	AndExpression	pid == 3 && eid == 1 && langid == 0x409		10823574	0		&&			
ANR	10823973	EqualityExpression	pid == 3		10823574	0		==			
ANR	10823974	Identifier	pid		10823574	0					
ANR	10823975	PrimaryExpression	3		10823574	1					
ANR	10823976	AndExpression	eid == 1 && langid == 0x409		10823574	1		&&			
ANR	10823977	EqualityExpression	eid == 1		10823574	0		==			
ANR	10823978	Identifier	eid		10823574	0					
ANR	10823979	PrimaryExpression	1		10823574	1					
ANR	10823980	EqualityExpression	langid == 0x409		10823574	1		==			
ANR	10823981	Identifier	langid		10823574	0					
ANR	10823982	PrimaryExpression	0x409		10823574	1					
ANR	10823983	CompoundStatement		77:12:2105:2105	10823574	1					
ANR	10823984	IfStatement	if ( found < 2 )		10823574	0					
ANR	10823985	Condition	found < 2	244:20:5912:5920	10823574	0	True				
ANR	10823986	RelationalExpression	found < 2		10823574	0		<			
ANR	10823987	Identifier	found		10823574	0					
ANR	10823988	PrimaryExpression	2		10823574	1					
ANR	10823989	CompoundStatement		81:20:2249:2267	10823574	1					
ANR	10823990	IdentifierDeclStatement	unsigned char * s = namedata + stringoffset + offset ;	246:20:5961:6012	10823574	0	True				
ANR	10823991	IdentifierDecl	* s = namedata + stringoffset + offset		10823574	0					
ANR	10823992	IdentifierDeclType	unsigned char *		10823574	0					
ANR	10823993	Identifier	s		10823574	1					
ANR	10823994	AssignmentExpression	* s = namedata + stringoffset + offset		10823574	2		=			
ANR	10823995	Identifier	s		10823574	0					
ANR	10823996	AdditiveExpression	namedata + stringoffset + offset		10823574	1		+			
ANR	10823997	Identifier	namedata		10823574	0					
ANR	10823998	AdditiveExpression	stringoffset + offset		10823574	1		+			
ANR	10823999	Identifier	stringoffset		10823574	0					
ANR	10824000	Identifier	offset		10823574	1					
ANR	10824001	IdentifierDeclStatement	int n = length / 2 ;	247:20:6034:6052	10823574	1	True				
ANR	10824002	IdentifierDecl	n = length / 2		10823574	0					
ANR	10824003	IdentifierDeclType	int		10823574	0					
ANR	10824004	Identifier	n		10823574	1					
ANR	10824005	AssignmentExpression	n = length / 2		10823574	2		=			
ANR	10824006	Identifier	n		10823574	0					
ANR	10824007	MultiplicativeExpression	length / 2		10823574	1		/			
ANR	10824008	Identifier	length		10823574	0					
ANR	10824009	PrimaryExpression	2		10823574	1					
ANR	10824010	ForStatement	for ( k = 0 ; k < n ; k ++ )		10823574	2					
ANR	10824011	ForInit	k = 0 ;	248:25:6079:6084	10823574	0	True				
ANR	10824012	AssignmentExpression	k = 0		10823574	0		=			
ANR	10824013	Identifier	k		10823574	0					
ANR	10824014	PrimaryExpression	0		10823574	1					
ANR	10824015	Condition	k < n	248:32:6086:6090	10823574	1	True				
ANR	10824016	RelationalExpression	k < n		10823574	0		<			
ANR	10824017	Identifier	k		10823574	0					
ANR	10824018	Identifier	n		10823574	1					
ANR	10824019	PostIncDecOperationExpression	k ++	248:39:6093:6096	10823574	2	True				
ANR	10824020	Identifier	k		10823574	0					
ANR	10824021	IncDec	++		10823574	1					
ANR	10824022	CompoundStatement		84:24:2360:2382	10823574	3					
ANR	10824023	IdentifierDeclStatement	int c = u16 ( s + k * 2 ) ;	250:24:6145:6167	10823574	0	True				
ANR	10824024	IdentifierDecl	c = u16 ( s + k * 2 )		10823574	0					
ANR	10824025	IdentifierDeclType	int		10823574	0					
ANR	10824026	Identifier	c		10823574	1					
ANR	10824027	AssignmentExpression	c = u16 ( s + k * 2 )		10823574	2		=			
ANR	10824028	Identifier	c		10823574	0					
ANR	10824029	CallExpression	u16 ( s + k * 2 )		10823574	1					
ANR	10824030	Callee	u16		10823574	0					
ANR	10824031	Identifier	u16		10823574	0					
ANR	10824032	ArgumentList	s + k * 2		10823574	1					
ANR	10824033	Argument	s + k * 2		10823574	0					
ANR	10824034	AdditiveExpression	s + k * 2		10823574	0		+			
ANR	10824035	Identifier	s		10823574	0					
ANR	10824036	MultiplicativeExpression	k * 2		10823574	1		*			
ANR	10824037	Identifier	k		10823574	0					
ANR	10824038	PrimaryExpression	2		10823574	1					
ANR	10824039	ExpressionStatement	namep [ k ] = isprint ( c ) ? c : '?'	251:24:6193:6224	10823574	1	True				
ANR	10824040	AssignmentExpression	namep [ k ] = isprint ( c ) ? c : '?'		10823574	0		=			
ANR	10824041	ArrayIndexing	namep [ k ]		10823574	0					
ANR	10824042	Identifier	namep		10823574	0					
ANR	10824043	Identifier	k		10823574	1					
ANR	10824044	ConditionalExpression	isprint ( c ) ? c : '?'		10823574	1					
ANR	10824045	Condition	isprint ( c )		10823574	0					
ANR	10824046	CallExpression	isprint ( c )		10823574	0					
ANR	10824047	Callee	isprint		10823574	0					
ANR	10824048	Identifier	isprint		10823574	0					
ANR	10824049	ArgumentList	c		10823574	1					
ANR	10824050	Argument	c		10823574	0					
ANR	10824051	Identifier	c		10823574	0					
ANR	10824052	Identifier	c		10823574	1					
ANR	10824053	PrimaryExpression	'?'		10823574	2					
ANR	10824054	ExpressionStatement	namep [ k ] = 0	253:20:6268:6280	10823574	3	True				
ANR	10824055	AssignmentExpression	namep [ k ] = 0		10823574	0		=			
ANR	10824056	ArrayIndexing	namep [ k ]		10823574	0					
ANR	10824057	Identifier	namep		10823574	0					
ANR	10824058	Identifier	k		10823574	1					
ANR	10824059	PrimaryExpression	0		10823574	1					
ANR	10824060	ExpressionStatement	found = 2	254:20:6302:6311	10823574	4	True				
ANR	10824061	AssignmentExpression	found = 2		10823574	0		=			
ANR	10824062	Identifier	found		10823574	0					
ANR	10824063	PrimaryExpression	2		10823574	1					
ANR	10824064	IfStatement	if ( pid == 3 && eid == 10 && langid == 0x409 )		10823574	2					
ANR	10824065	Condition	pid == 3 && eid == 10 && langid == 0x409	258:16:6362:6401	10823574	0	True				
ANR	10824066	AndExpression	pid == 3 && eid == 10 && langid == 0x409		10823574	0		&&			
ANR	10824067	EqualityExpression	pid == 3		10823574	0		==			
ANR	10824068	Identifier	pid		10823574	0					
ANR	10824069	PrimaryExpression	3		10823574	1					
ANR	10824070	AndExpression	eid == 10 && langid == 0x409		10823574	1		&&			
ANR	10824071	EqualityExpression	eid == 10		10823574	0		==			
ANR	10824072	Identifier	eid		10823574	0					
ANR	10824073	PrimaryExpression	10		10823574	1					
ANR	10824074	EqualityExpression	langid == 0x409		10823574	1		==			
ANR	10824075	Identifier	langid		10823574	0					
ANR	10824076	PrimaryExpression	0x409		10823574	1					
ANR	10824077	CompoundStatement		93:12:2663:2663	10823574	1					
ANR	10824078	IfStatement	if ( found < 1 )		10823574	0					
ANR	10824079	Condition	found < 1	260:20:6470:6478	10823574	0	True				
ANR	10824080	RelationalExpression	found < 1		10823574	0		<			
ANR	10824081	Identifier	found		10823574	0					
ANR	10824082	PrimaryExpression	1		10823574	1					
ANR	10824083	CompoundStatement		97:20:2807:2825	10823574	1					
ANR	10824084	IdentifierDeclStatement	unsigned char * s = namedata + stringoffset + offset ;	262:20:6519:6570	10823574	0	True				
ANR	10824085	IdentifierDecl	* s = namedata + stringoffset + offset		10823574	0					
ANR	10824086	IdentifierDeclType	unsigned char *		10823574	0					
ANR	10824087	Identifier	s		10823574	1					
ANR	10824088	AssignmentExpression	* s = namedata + stringoffset + offset		10823574	2		=			
ANR	10824089	Identifier	s		10823574	0					
ANR	10824090	AdditiveExpression	namedata + stringoffset + offset		10823574	1		+			
ANR	10824091	Identifier	namedata		10823574	0					
ANR	10824092	AdditiveExpression	stringoffset + offset		10823574	1		+			
ANR	10824093	Identifier	stringoffset		10823574	0					
ANR	10824094	Identifier	offset		10823574	1					
ANR	10824095	IdentifierDeclStatement	int n = length / 4 ;	263:20:6592:6610	10823574	1	True				
ANR	10824096	IdentifierDecl	n = length / 4		10823574	0					
ANR	10824097	IdentifierDeclType	int		10823574	0					
ANR	10824098	Identifier	n		10823574	1					
ANR	10824099	AssignmentExpression	n = length / 4		10823574	2		=			
ANR	10824100	Identifier	n		10823574	0					
ANR	10824101	MultiplicativeExpression	length / 4		10823574	1		/			
ANR	10824102	Identifier	length		10823574	0					
ANR	10824103	PrimaryExpression	4		10823574	1					
ANR	10824104	ForStatement	for ( k = 0 ; k < n ; k ++ )		10823574	2					
ANR	10824105	ForInit	k = 0 ;	264:25:6637:6642	10823574	0	True				
ANR	10824106	AssignmentExpression	k = 0		10823574	0		=			
ANR	10824107	Identifier	k		10823574	0					
ANR	10824108	PrimaryExpression	0		10823574	1					
ANR	10824109	Condition	k < n	264:32:6644:6648	10823574	1	True				
ANR	10824110	RelationalExpression	k < n		10823574	0		<			
ANR	10824111	Identifier	k		10823574	0					
ANR	10824112	Identifier	n		10823574	1					
ANR	10824113	PostIncDecOperationExpression	k ++	264:39:6651:6654	10823574	2	True				
ANR	10824114	Identifier	k		10823574	0					
ANR	10824115	IncDec	++		10823574	1					
ANR	10824116	CompoundStatement		100:24:2918:2940	10823574	3					
ANR	10824117	IdentifierDeclStatement	int c = u32 ( s + k * 4 ) ;	266:24:6703:6725	10823574	0	True				
ANR	10824118	IdentifierDecl	c = u32 ( s + k * 4 )		10823574	0					
ANR	10824119	IdentifierDeclType	int		10823574	0					
ANR	10824120	Identifier	c		10823574	1					
ANR	10824121	AssignmentExpression	c = u32 ( s + k * 4 )		10823574	2		=			
ANR	10824122	Identifier	c		10823574	0					
ANR	10824123	CallExpression	u32 ( s + k * 4 )		10823574	1					
ANR	10824124	Callee	u32		10823574	0					
ANR	10824125	Identifier	u32		10823574	0					
ANR	10824126	ArgumentList	s + k * 4		10823574	1					
ANR	10824127	Argument	s + k * 4		10823574	0					
ANR	10824128	AdditiveExpression	s + k * 4		10823574	0		+			
ANR	10824129	Identifier	s		10823574	0					
ANR	10824130	MultiplicativeExpression	k * 4		10823574	1		*			
ANR	10824131	Identifier	k		10823574	0					
ANR	10824132	PrimaryExpression	4		10823574	1					
ANR	10824133	ExpressionStatement	namep [ k ] = isprint ( c ) ? c : '?'	267:24:6751:6782	10823574	1	True				
ANR	10824134	AssignmentExpression	namep [ k ] = isprint ( c ) ? c : '?'		10823574	0		=			
ANR	10824135	ArrayIndexing	namep [ k ]		10823574	0					
ANR	10824136	Identifier	namep		10823574	0					
ANR	10824137	Identifier	k		10823574	1					
ANR	10824138	ConditionalExpression	isprint ( c ) ? c : '?'		10823574	1					
ANR	10824139	Condition	isprint ( c )		10823574	0					
ANR	10824140	CallExpression	isprint ( c )		10823574	0					
ANR	10824141	Callee	isprint		10823574	0					
ANR	10824142	Identifier	isprint		10823574	0					
ANR	10824143	ArgumentList	c		10823574	1					
ANR	10824144	Argument	c		10823574	0					
ANR	10824145	Identifier	c		10823574	0					
ANR	10824146	Identifier	c		10823574	1					
ANR	10824147	PrimaryExpression	'?'		10823574	2					
ANR	10824148	ExpressionStatement	namep [ k ] = 0	269:20:6826:6838	10823574	3	True				
ANR	10824149	AssignmentExpression	namep [ k ] = 0		10823574	0		=			
ANR	10824150	ArrayIndexing	namep [ k ]		10823574	0					
ANR	10824151	Identifier	namep		10823574	0					
ANR	10824152	Identifier	k		10823574	1					
ANR	10824153	PrimaryExpression	0		10823574	1					
ANR	10824154	ExpressionStatement	found = 1	270:20:6860:6869	10823574	4	True				
ANR	10824155	AssignmentExpression	found = 1		10823574	0		=			
ANR	10824156	Identifier	found		10823574	0					
ANR	10824157	PrimaryExpression	1		10823574	1					
ANR	10824158	ReturnType	void		10823574	1					
ANR	10824159	Identifier	xps_load_sfnt_name		10823574	2					
ANR	10824160	ParameterList	"xps_font_t * font , char * namep , const int buflen"		10823574	3					
ANR	10824161	Parameter	xps_font_t * font	166:19:3735:3750	10823574	0	True				
ANR	10824162	ParameterType	xps_font_t *		10823574	0					
ANR	10824163	Identifier	font		10823574	1					
ANR	10824164	Parameter	char * namep	166:37:3753:3763	10823574	1	True				
ANR	10824165	ParameterType	char *		10823574	0					
ANR	10824166	Identifier	namep		10823574	1					
ANR	10824167	Parameter	const int buflen	166:50:3766:3781	10823574	2	True				
ANR	10824168	ParameterType	const int		10823574	0					
ANR	10824169	Identifier	buflen		10823574	1					
ANR	10824170	CFGEntryNode	ENTRY		10823574		True				
ANR	10824171	CFGExitNode	EXIT		10823574		True				
ANR	10824172	Symbol	eid		10823574						
ANR	10824173	Symbol	isprint		10823574						
ANR	10824174	Symbol	namedata		10823574						
ANR	10824175	Symbol	pid		10823574						
ANR	10824176	Symbol	found		10823574						
ANR	10824177	Symbol	* namep		10823574						
ANR	10824178	Symbol	u32		10823574						
ANR	10824179	Symbol	record		10823574						
ANR	10824180	Symbol	buflen		10823574						
ANR	10824181	Symbol	nameid		10823574						
ANR	10824182	Symbol	* length		10823574						
ANR	10824183	Symbol	* font		10823574						
ANR	10824184	Symbol	u16		10823574						
ANR	10824185	Symbol	font -> length		10823574						
ANR	10824186	Symbol	langid		10823574						
ANR	10824187	Symbol	& length		10823574						
ANR	10824188	Symbol	c		10823574						
ANR	10824189	Symbol	offset		10823574						
ANR	10824190	Symbol	length		10823574						
ANR	10824191	Symbol	count		10823574						
ANR	10824192	Symbol	i		10823574						
ANR	10824193	Symbol	stringoffset		10823574						
ANR	10824194	Symbol	k		10823574						
ANR	10824195	Symbol	n		10823574						
ANR	10824196	Symbol	s		10823574						
ANR	10824197	Symbol	* k		10823574						
ANR	10824198	Symbol	font -> data		10823574						
ANR	10824199	Symbol	xps_find_sfnt_table		10823574						
ANR	10824200	Symbol	namep		10823574						
ANR	10824201	Symbol	font		10823574						
ANR	10824202	Function	xps_load_sfnt_cmap	281:0:6992:7668							
ANR	10824203	FunctionDef	xps_load_sfnt_cmap (xps_font_t * font)		10824202	0					
ANR	10824204	CompoundStatement		283:0:7041:7668	10824202	0					
ANR	10824205	IdentifierDeclStatement	byte * cmapdata ;	284:4:7047:7061	10824202	0	True				
ANR	10824206	IdentifierDecl	* cmapdata		10824202	0					
ANR	10824207	IdentifierDeclType	byte *		10824202	0					
ANR	10824208	Identifier	cmapdata		10824202	1					
ANR	10824209	IdentifierDeclStatement	"int offset , length ;"	285:4:7067:7085	10824202	1	True				
ANR	10824210	IdentifierDecl	offset		10824202	0					
ANR	10824211	IdentifierDeclType	int		10824202	0					
ANR	10824212	Identifier	offset		10824202	1					
ANR	10824213	IdentifierDecl	length		10824202	1					
ANR	10824214	IdentifierDeclType	int		10824202	0					
ANR	10824215	Identifier	length		10824202	1					
ANR	10824216	IdentifierDeclStatement	int nsubtables ;	286:4:7091:7105	10824202	2	True				
ANR	10824217	IdentifierDecl	nsubtables		10824202	0					
ANR	10824218	IdentifierDeclType	int		10824202	0					
ANR	10824219	Identifier	nsubtables		10824202	1					
ANR	10824220	ExpressionStatement	"offset = xps_find_sfnt_table ( font , ""cmap"" , & length )"	288:4:7112:7163	10824202	3	True				
ANR	10824221	AssignmentExpression	"offset = xps_find_sfnt_table ( font , ""cmap"" , & length )"		10824202	0		=			
ANR	10824222	Identifier	offset		10824202	0					
ANR	10824223	CallExpression	"xps_find_sfnt_table ( font , ""cmap"" , & length )"		10824202	1					
ANR	10824224	Callee	xps_find_sfnt_table		10824202	0					
ANR	10824225	Identifier	xps_find_sfnt_table		10824202	0					
ANR	10824226	ArgumentList	font		10824202	1					
ANR	10824227	Argument	font		10824202	0					
ANR	10824228	Identifier	font		10824202	0					
ANR	10824229	Argument	"""cmap"""		10824202	1					
ANR	10824230	PrimaryExpression	"""cmap"""		10824202	0					
ANR	10824231	Argument	& length		10824202	2					
ANR	10824232	UnaryOperationExpression	& length		10824202	0					
ANR	10824233	UnaryOperator	&		10824202	0					
ANR	10824234	Identifier	length		10824202	1					
ANR	10824235	IfStatement	if ( offset < 0 || length < 4 )		10824202	4					
ANR	10824236	Condition	offset < 0 || length < 4	289:8:7173:7196	10824202	0	True				
ANR	10824237	OrExpression	offset < 0 || length < 4		10824202	0		||			
ANR	10824238	RelationalExpression	offset < 0		10824202	0		<			
ANR	10824239	Identifier	offset		10824202	0					
ANR	10824240	PrimaryExpression	0		10824202	1					
ANR	10824241	RelationalExpression	length < 4		10824202	1		<			
ANR	10824242	Identifier	length		10824202	0					
ANR	10824243	PrimaryExpression	4		10824202	1					
ANR	10824244	CompoundStatement		8:4:161:161	10824202	1					
ANR	10824245	ExpressionStatement	"gs_warn ( ""cannot find cmap table"" )"	291:8:7213:7246	10824202	0	True				
ANR	10824246	CallExpression	"gs_warn ( ""cannot find cmap table"" )"		10824202	0					
ANR	10824247	Callee	gs_warn		10824202	0					
ANR	10824248	Identifier	gs_warn		10824202	0					
ANR	10824249	ArgumentList	"""cannot find cmap table"""		10824202	1					
ANR	10824250	Argument	"""cannot find cmap table"""		10824202	0					
ANR	10824251	PrimaryExpression	"""cannot find cmap table"""		10824202	0					
ANR	10824252	ReturnStatement	return ;	292:8:7256:7262	10824202	1	True				
ANR	10824253	ExpressionStatement	cmapdata = font -> data + offset	295:4:7275:7305	10824202	5	True				
ANR	10824254	AssignmentExpression	cmapdata = font -> data + offset		10824202	0		=			
ANR	10824255	Identifier	cmapdata		10824202	0					
ANR	10824256	AdditiveExpression	font -> data + offset		10824202	1		+			
ANR	10824257	PtrMemberAccess	font -> data		10824202	0					
ANR	10824258	Identifier	font		10824202	0					
ANR	10824259	Identifier	data		10824202	1					
ANR	10824260	Identifier	offset		10824202	1					
ANR	10824261	IfStatement	if ( cmapdata + 4 < font -> data + font -> length )		10824202	6					
ANR	10824262	Condition	cmapdata + 4 < font -> data + font -> length	296:8:7315:7354	10824202	0	True				
ANR	10824263	RelationalExpression	cmapdata + 4 < font -> data + font -> length		10824202	0		<			
ANR	10824264	AdditiveExpression	cmapdata + 4		10824202	0		+			
ANR	10824265	Identifier	cmapdata		10824202	0					
ANR	10824266	PrimaryExpression	4		10824202	1					
ANR	10824267	AdditiveExpression	font -> data + font -> length		10824202	1		+			
ANR	10824268	PtrMemberAccess	font -> data		10824202	0					
ANR	10824269	Identifier	font		10824202	0					
ANR	10824270	Identifier	data		10824202	1					
ANR	10824271	PtrMemberAccess	font -> length		10824202	1					
ANR	10824272	Identifier	font		10824202	0					
ANR	10824273	Identifier	length		10824202	1					
ANR	10824274	CompoundStatement		15:4:319:319	10824202	1					
ANR	10824275	ExpressionStatement	nsubtables = u16 ( cmapdata + 2 )	298:8:7371:7401	10824202	0	True				
ANR	10824276	AssignmentExpression	nsubtables = u16 ( cmapdata + 2 )		10824202	0		=			
ANR	10824277	Identifier	nsubtables		10824202	0					
ANR	10824278	CallExpression	u16 ( cmapdata + 2 )		10824202	1					
ANR	10824279	Callee	u16		10824202	0					
ANR	10824280	Identifier	u16		10824202	0					
ANR	10824281	ArgumentList	cmapdata + 2		10824202	1					
ANR	10824282	Argument	cmapdata + 2		10824202	0					
ANR	10824283	AdditiveExpression	cmapdata + 2		10824202	0		+			
ANR	10824284	Identifier	cmapdata		10824202	0					
ANR	10824285	PrimaryExpression	2		10824202	1					
ANR	10824286	IfStatement	if ( nsubtables < 0 || length < 4 + nsubtables * 8 )		10824202	1					
ANR	10824287	Condition	nsubtables < 0 || length < 4 + nsubtables * 8	299:12:7415:7459	10824202	0	True				
ANR	10824288	OrExpression	nsubtables < 0 || length < 4 + nsubtables * 8		10824202	0		||			
ANR	10824289	RelationalExpression	nsubtables < 0		10824202	0		<			
ANR	10824290	Identifier	nsubtables		10824202	0					
ANR	10824291	PrimaryExpression	0		10824202	1					
ANR	10824292	RelationalExpression	length < 4 + nsubtables * 8		10824202	1		<			
ANR	10824293	Identifier	length		10824202	0					
ANR	10824294	AdditiveExpression	4 + nsubtables * 8		10824202	1		+			
ANR	10824295	PrimaryExpression	4		10824202	0					
ANR	10824296	MultiplicativeExpression	nsubtables * 8		10824202	1		*			
ANR	10824297	Identifier	nsubtables		10824202	0					
ANR	10824298	PrimaryExpression	8		10824202	1					
ANR	10824299	CompoundStatement		18:8:428:428	10824202	1					
ANR	10824300	ExpressionStatement	"gs_warn ( ""cannot find cmap sub-tables"" )"	301:12:7484:7522	10824202	0	True				
ANR	10824301	CallExpression	"gs_warn ( ""cannot find cmap sub-tables"" )"		10824202	0					
ANR	10824302	Callee	gs_warn		10824202	0					
ANR	10824303	Identifier	gs_warn		10824202	0					
ANR	10824304	ArgumentList	"""cannot find cmap sub-tables"""		10824202	1					
ANR	10824305	Argument	"""cannot find cmap sub-tables"""		10824202	0					
ANR	10824306	PrimaryExpression	"""cannot find cmap sub-tables"""		10824202	0					
ANR	10824307	ReturnStatement	return ;	302:12:7536:7542	10824202	1	True				
ANR	10824308	ExpressionStatement	font -> cmaptable = offset	305:8:7563:7587	10824202	2	True				
ANR	10824309	AssignmentExpression	font -> cmaptable = offset		10824202	0		=			
ANR	10824310	PtrMemberAccess	font -> cmaptable		10824202	0					
ANR	10824311	Identifier	font		10824202	0					
ANR	10824312	Identifier	cmaptable		10824202	1					
ANR	10824313	Identifier	offset		10824202	1					
ANR	10824314	ExpressionStatement	font -> cmapsubcount = nsubtables	306:8:7597:7628	10824202	3	True				
ANR	10824315	AssignmentExpression	font -> cmapsubcount = nsubtables		10824202	0		=			
ANR	10824316	PtrMemberAccess	font -> cmapsubcount		10824202	0					
ANR	10824317	Identifier	font		10824202	0					
ANR	10824318	Identifier	cmapsubcount		10824202	1					
ANR	10824319	Identifier	nsubtables		10824202	1					
ANR	10824320	ExpressionStatement	font -> cmapsubtable = 0	307:8:7638:7660	10824202	4	True				
ANR	10824321	AssignmentExpression	font -> cmapsubtable = 0		10824202	0		=			
ANR	10824322	PtrMemberAccess	font -> cmapsubtable		10824202	0					
ANR	10824323	Identifier	font		10824202	0					
ANR	10824324	Identifier	cmapsubtable		10824202	1					
ANR	10824325	PrimaryExpression	0		10824202	1					
ANR	10824326	ReturnType	static void		10824202	1					
ANR	10824327	Identifier	xps_load_sfnt_cmap		10824202	2					
ANR	10824328	ParameterList	xps_font_t * font		10824202	3					
ANR	10824329	Parameter	xps_font_t * font	282:19:7023:7038	10824202	0	True				
ANR	10824330	ParameterType	xps_font_t *		10824202	0					
ANR	10824331	Identifier	font		10824202	1					
ANR	10824332	CFGEntryNode	ENTRY		10824202		True				
ANR	10824333	CFGExitNode	EXIT		10824202		True				
ANR	10824334	Symbol	& length		10824202						
ANR	10824335	Symbol	offset		10824202						
ANR	10824336	Symbol	font -> cmapsubcount		10824202						
ANR	10824337	Symbol	length		10824202						
ANR	10824338	Symbol	font -> cmapsubtable		10824202						
ANR	10824339	Symbol	font -> cmaptable		10824202						
ANR	10824340	Symbol	font -> data		10824202						
ANR	10824341	Symbol	nsubtables		10824202						
ANR	10824342	Symbol	cmapdata		10824202						
ANR	10824343	Symbol	* font		10824202						
ANR	10824344	Symbol	u16		10824202						
ANR	10824345	Symbol	font -> length		10824202						
ANR	10824346	Symbol	xps_find_sfnt_table		10824202						
ANR	10824347	Symbol	font		10824202						
ANR	10824348	Function	xps_count_font_encodings	315:0:7719:7799							
ANR	10824349	FunctionDef	xps_count_font_encodings (xps_font_t * font)		10824348	0					
ANR	10824350	CompoundStatement		317:0:7766:7799	10824348	0					
ANR	10824351	ReturnStatement	return font -> cmapsubcount ;	318:4:7772:7797	10824348	0	True				
ANR	10824352	PtrMemberAccess	font -> cmapsubcount		10824348	0					
ANR	10824353	Identifier	font		10824348	0					
ANR	10824354	Identifier	cmapsubcount		10824348	1					
ANR	10824355	ReturnType	int		10824348	1					
ANR	10824356	Identifier	xps_count_font_encodings		10824348	2					
ANR	10824357	ParameterList	xps_font_t * font		10824348	3					
ANR	10824358	Parameter	xps_font_t * font	316:25:7748:7763	10824348	0	True				
ANR	10824359	ParameterType	xps_font_t *		10824348	0					
ANR	10824360	Identifier	font		10824348	1					
ANR	10824361	CFGEntryNode	ENTRY		10824348		True				
ANR	10824362	CFGExitNode	EXIT		10824348		True				
ANR	10824363	Symbol	font -> cmapsubcount		10824348						
ANR	10824364	Symbol	* font		10824348						
ANR	10824365	Symbol	font		10824348						
ANR	10824366	Function	xps_identify_font_encoding	325:0:7868:8174							
ANR	10824367	FunctionDef	"xps_identify_font_encoding (xps_font_t * font , int idx , int * pid , int * eid)"		10824366	0					
ANR	10824368	CompoundStatement		327:0:7947:8174	10824366	0					
ANR	10824369	IdentifierDeclStatement	"byte * cmapdata , * entry ;"	328:4:7953:7975	10824366	0	True				
ANR	10824370	IdentifierDecl	* cmapdata		10824366	0					
ANR	10824371	IdentifierDeclType	byte *		10824366	0					
ANR	10824372	Identifier	cmapdata		10824366	1					
ANR	10824373	IdentifierDecl	* entry		10824366	1					
ANR	10824374	IdentifierDeclType	byte *		10824366	0					
ANR	10824375	Identifier	entry		10824366	1					
ANR	10824376	IfStatement	if ( idx < 0 || idx >= font -> cmapsubcount )		10824366	1					
ANR	10824377	Condition	idx < 0 || idx >= font -> cmapsubcount	329:8:7985:8020	10824366	0	True				
ANR	10824378	OrExpression	idx < 0 || idx >= font -> cmapsubcount		10824366	0		||			
ANR	10824379	RelationalExpression	idx < 0		10824366	0		<			
ANR	10824380	Identifier	idx		10824366	0					
ANR	10824381	PrimaryExpression	0		10824366	1					
ANR	10824382	RelationalExpression	idx >= font -> cmapsubcount		10824366	1		>=			
ANR	10824383	Identifier	idx		10824366	0					
ANR	10824384	PtrMemberAccess	font -> cmapsubcount		10824366	1					
ANR	10824385	Identifier	font		10824366	0					
ANR	10824386	Identifier	cmapsubcount		10824366	1					
ANR	10824387	ReturnStatement	return ;	330:8:8031:8037	10824366	1	True				
ANR	10824388	ExpressionStatement	cmapdata = font -> data + font -> cmaptable	331:4:8043:8082	10824366	2	True				
ANR	10824389	AssignmentExpression	cmapdata = font -> data + font -> cmaptable		10824366	0		=			
ANR	10824390	Identifier	cmapdata		10824366	0					
ANR	10824391	AdditiveExpression	font -> data + font -> cmaptable		10824366	1		+			
ANR	10824392	PtrMemberAccess	font -> data		10824366	0					
ANR	10824393	Identifier	font		10824366	0					
ANR	10824394	Identifier	data		10824366	1					
ANR	10824395	PtrMemberAccess	font -> cmaptable		10824366	1					
ANR	10824396	Identifier	font		10824366	0					
ANR	10824397	Identifier	cmaptable		10824366	1					
ANR	10824398	ExpressionStatement	entry = cmapdata + 4 + idx * 8	332:4:8088:8118	10824366	3	True				
ANR	10824399	AssignmentExpression	entry = cmapdata + 4 + idx * 8		10824366	0		=			
ANR	10824400	Identifier	entry		10824366	0					
ANR	10824401	AdditiveExpression	cmapdata + 4 + idx * 8		10824366	1		+			
ANR	10824402	Identifier	cmapdata		10824366	0					
ANR	10824403	AdditiveExpression	4 + idx * 8		10824366	1		+			
ANR	10824404	PrimaryExpression	4		10824366	0					
ANR	10824405	MultiplicativeExpression	idx * 8		10824366	1		*			
ANR	10824406	Identifier	idx		10824366	0					
ANR	10824407	PrimaryExpression	8		10824366	1					
ANR	10824408	ExpressionStatement	* pid = u16 ( entry + 0 )	333:4:8124:8145	10824366	4	True				
ANR	10824409	AssignmentExpression	* pid = u16 ( entry + 0 )		10824366	0		=			
ANR	10824410	UnaryOperationExpression	* pid		10824366	0					
ANR	10824411	UnaryOperator	*		10824366	0					
ANR	10824412	Identifier	pid		10824366	1					
ANR	10824413	CallExpression	u16 ( entry + 0 )		10824366	1					
ANR	10824414	Callee	u16		10824366	0					
ANR	10824415	Identifier	u16		10824366	0					
ANR	10824416	ArgumentList	entry + 0		10824366	1					
ANR	10824417	Argument	entry + 0		10824366	0					
ANR	10824418	AdditiveExpression	entry + 0		10824366	0		+			
ANR	10824419	Identifier	entry		10824366	0					
ANR	10824420	PrimaryExpression	0		10824366	1					
ANR	10824421	ExpressionStatement	* eid = u16 ( entry + 2 )	334:4:8151:8172	10824366	5	True				
ANR	10824422	AssignmentExpression	* eid = u16 ( entry + 2 )		10824366	0		=			
ANR	10824423	UnaryOperationExpression	* eid		10824366	0					
ANR	10824424	UnaryOperator	*		10824366	0					
ANR	10824425	Identifier	eid		10824366	1					
ANR	10824426	CallExpression	u16 ( entry + 2 )		10824366	1					
ANR	10824427	Callee	u16		10824366	0					
ANR	10824428	Identifier	u16		10824366	0					
ANR	10824429	ArgumentList	entry + 2		10824366	1					
ANR	10824430	Argument	entry + 2		10824366	0					
ANR	10824431	AdditiveExpression	entry + 2		10824366	0		+			
ANR	10824432	Identifier	entry		10824366	0					
ANR	10824433	PrimaryExpression	2		10824366	1					
ANR	10824434	ReturnType	void		10824366	1					
ANR	10824435	Identifier	xps_identify_font_encoding		10824366	2					
ANR	10824436	ParameterList	"xps_font_t * font , int idx , int * pid , int * eid"		10824366	3					
ANR	10824437	Parameter	xps_font_t * font	326:27:7900:7915	10824366	0	True				
ANR	10824438	ParameterType	xps_font_t *		10824366	0					
ANR	10824439	Identifier	font		10824366	1					
ANR	10824440	Parameter	int idx	326:45:7918:7924	10824366	1	True				
ANR	10824441	ParameterType	int		10824366	0					
ANR	10824442	Identifier	idx		10824366	1					
ANR	10824443	Parameter	int * pid	326:54:7927:7934	10824366	2	True				
ANR	10824444	ParameterType	int *		10824366	0					
ANR	10824445	Identifier	pid		10824366	1					
ANR	10824446	Parameter	int * eid	326:64:7937:7944	10824366	3	True				
ANR	10824447	ParameterType	int *		10824366	0					
ANR	10824448	Identifier	eid		10824366	1					
ANR	10824449	CFGEntryNode	ENTRY		10824366		True				
ANR	10824450	CFGExitNode	EXIT		10824366		True				
ANR	10824451	Symbol	eid		10824366						
ANR	10824452	Symbol	font -> cmapsubcount		10824366						
ANR	10824453	Symbol	pid		10824366						
ANR	10824454	Symbol	entry		10824366						
ANR	10824455	Symbol	font -> cmaptable		10824366						
ANR	10824456	Symbol	* pid		10824366						
ANR	10824457	Symbol	* eid		10824366						
ANR	10824458	Symbol	font -> data		10824366						
ANR	10824459	Symbol	cmapdata		10824366						
ANR	10824460	Symbol	* font		10824366						
ANR	10824461	Symbol	u16		10824366						
ANR	10824462	Symbol	idx		10824366						
ANR	10824463	Symbol	font		10824366						
ANR	10824464	Function	xps_select_font_encoding	341:0:8244:8763							
ANR	10824465	FunctionDef	"xps_select_font_encoding (xps_font_t * font , int idx)"		10824464	0					
ANR	10824466	CompoundStatement		343:0:8300:8763	10824464	0					
ANR	10824467	IdentifierDeclStatement	"byte * cmapdata , * entry ;"	344:4:8306:8328	10824464	0	True				
ANR	10824468	IdentifierDecl	* cmapdata		10824464	0					
ANR	10824469	IdentifierDeclType	byte *		10824464	0					
ANR	10824470	Identifier	cmapdata		10824464	1					
ANR	10824471	IdentifierDecl	* entry		10824464	1					
ANR	10824472	IdentifierDeclType	byte *		10824464	0					
ANR	10824473	Identifier	entry		10824464	1					
ANR	10824474	IdentifierDeclStatement	"int pid , eid ;"	345:4:8334:8346	10824464	1	True				
ANR	10824475	IdentifierDecl	pid		10824464	0					
ANR	10824476	IdentifierDeclType	int		10824464	0					
ANR	10824477	Identifier	pid		10824464	1					
ANR	10824478	IdentifierDecl	eid		10824464	1					
ANR	10824479	IdentifierDeclType	int		10824464	0					
ANR	10824480	Identifier	eid		10824464	1					
ANR	10824481	IfStatement	if ( idx < 0 || idx >= font -> cmapsubcount )		10824464	2					
ANR	10824482	Condition	idx < 0 || idx >= font -> cmapsubcount	346:8:8356:8391	10824464	0	True				
ANR	10824483	OrExpression	idx < 0 || idx >= font -> cmapsubcount		10824464	0		||			
ANR	10824484	RelationalExpression	idx < 0		10824464	0		<			
ANR	10824485	Identifier	idx		10824464	0					
ANR	10824486	PrimaryExpression	0		10824464	1					
ANR	10824487	RelationalExpression	idx >= font -> cmapsubcount		10824464	1		>=			
ANR	10824488	Identifier	idx		10824464	0					
ANR	10824489	PtrMemberAccess	font -> cmapsubcount		10824464	1					
ANR	10824490	Identifier	font		10824464	0					
ANR	10824491	Identifier	cmapsubcount		10824464	1					
ANR	10824492	ReturnStatement	return 0 ;	347:8:8402:8410	10824464	1	True				
ANR	10824493	PrimaryExpression	0		10824464	0					
ANR	10824494	ExpressionStatement	cmapdata = font -> data + font -> cmaptable	348:4:8416:8455	10824464	3	True				
ANR	10824495	AssignmentExpression	cmapdata = font -> data + font -> cmaptable		10824464	0		=			
ANR	10824496	Identifier	cmapdata		10824464	0					
ANR	10824497	AdditiveExpression	font -> data + font -> cmaptable		10824464	1		+			
ANR	10824498	PtrMemberAccess	font -> data		10824464	0					
ANR	10824499	Identifier	font		10824464	0					
ANR	10824500	Identifier	data		10824464	1					
ANR	10824501	PtrMemberAccess	font -> cmaptable		10824464	1					
ANR	10824502	Identifier	font		10824464	0					
ANR	10824503	Identifier	cmaptable		10824464	1					
ANR	10824504	ExpressionStatement	entry = cmapdata + 4 + idx * 8	349:4:8461:8491	10824464	4	True				
ANR	10824505	AssignmentExpression	entry = cmapdata + 4 + idx * 8		10824464	0		=			
ANR	10824506	Identifier	entry		10824464	0					
ANR	10824507	AdditiveExpression	cmapdata + 4 + idx * 8		10824464	1		+			
ANR	10824508	Identifier	cmapdata		10824464	0					
ANR	10824509	AdditiveExpression	4 + idx * 8		10824464	1		+			
ANR	10824510	PrimaryExpression	4		10824464	0					
ANR	10824511	MultiplicativeExpression	idx * 8		10824464	1		*			
ANR	10824512	Identifier	idx		10824464	0					
ANR	10824513	PrimaryExpression	8		10824464	1					
ANR	10824514	ExpressionStatement	pid = u16 ( entry + 0 )	350:4:8497:8517	10824464	5	True				
ANR	10824515	AssignmentExpression	pid = u16 ( entry + 0 )		10824464	0		=			
ANR	10824516	Identifier	pid		10824464	0					
ANR	10824517	CallExpression	u16 ( entry + 0 )		10824464	1					
ANR	10824518	Callee	u16		10824464	0					
ANR	10824519	Identifier	u16		10824464	0					
ANR	10824520	ArgumentList	entry + 0		10824464	1					
ANR	10824521	Argument	entry + 0		10824464	0					
ANR	10824522	AdditiveExpression	entry + 0		10824464	0		+			
ANR	10824523	Identifier	entry		10824464	0					
ANR	10824524	PrimaryExpression	0		10824464	1					
ANR	10824525	ExpressionStatement	eid = u16 ( entry + 2 )	351:4:8523:8543	10824464	6	True				
ANR	10824526	AssignmentExpression	eid = u16 ( entry + 2 )		10824464	0		=			
ANR	10824527	Identifier	eid		10824464	0					
ANR	10824528	CallExpression	u16 ( entry + 2 )		10824464	1					
ANR	10824529	Callee	u16		10824464	0					
ANR	10824530	Identifier	u16		10824464	0					
ANR	10824531	ArgumentList	entry + 2		10824464	1					
ANR	10824532	Argument	entry + 2		10824464	0					
ANR	10824533	AdditiveExpression	entry + 2		10824464	0		+			
ANR	10824534	Identifier	entry		10824464	0					
ANR	10824535	PrimaryExpression	2		10824464	1					
ANR	10824536	ExpressionStatement	font -> cmapsubtable = font -> cmaptable + u32 ( entry + 4 )	352:4:8549:8602	10824464	7	True				
ANR	10824537	AssignmentExpression	font -> cmapsubtable = font -> cmaptable + u32 ( entry + 4 )		10824464	0		=			
ANR	10824538	PtrMemberAccess	font -> cmapsubtable		10824464	0					
ANR	10824539	Identifier	font		10824464	0					
ANR	10824540	Identifier	cmapsubtable		10824464	1					
ANR	10824541	AdditiveExpression	font -> cmaptable + u32 ( entry + 4 )		10824464	1		+			
ANR	10824542	PtrMemberAccess	font -> cmaptable		10824464	0					
ANR	10824543	Identifier	font		10824464	0					
ANR	10824544	Identifier	cmaptable		10824464	1					
ANR	10824545	CallExpression	u32 ( entry + 4 )		10824464	1					
ANR	10824546	Callee	u32		10824464	0					
ANR	10824547	Identifier	u32		10824464	0					
ANR	10824548	ArgumentList	entry + 4		10824464	1					
ANR	10824549	Argument	entry + 4		10824464	0					
ANR	10824550	AdditiveExpression	entry + 4		10824464	0		+			
ANR	10824551	Identifier	entry		10824464	0					
ANR	10824552	PrimaryExpression	4		10824464	1					
ANR	10824553	IfStatement	if ( font -> cmapsubtable >= font -> length )		10824464	8					
ANR	10824554	Condition	font -> cmapsubtable >= font -> length	353:8:8612:8645	10824464	0	True				
ANR	10824555	RelationalExpression	font -> cmapsubtable >= font -> length		10824464	0		>=			
ANR	10824556	PtrMemberAccess	font -> cmapsubtable		10824464	0					
ANR	10824557	Identifier	font		10824464	0					
ANR	10824558	Identifier	cmapsubtable		10824464	1					
ANR	10824559	PtrMemberAccess	font -> length		10824464	1					
ANR	10824560	Identifier	font		10824464	0					
ANR	10824561	Identifier	length		10824464	1					
ANR	10824562	CompoundStatement		11:44:347:347	10824464	1					
ANR	10824563	ExpressionStatement	font -> cmapsubtable = 0	354:8:8658:8680	10824464	0	True				
ANR	10824564	AssignmentExpression	font -> cmapsubtable = 0		10824464	0		=			
ANR	10824565	PtrMemberAccess	font -> cmapsubtable		10824464	0					
ANR	10824566	Identifier	font		10824464	0					
ANR	10824567	Identifier	cmapsubtable		10824464	1					
ANR	10824568	PrimaryExpression	0		10824464	1					
ANR	10824569	ReturnStatement	return 0 ;	355:8:8690:8698	10824464	1	True				
ANR	10824570	PrimaryExpression	0		10824464	0					
ANR	10824571	ExpressionStatement	font -> usepua = ( pid == 3 && eid == 0 )	357:4:8710:8747	10824464	9	True				
ANR	10824572	AssignmentExpression	font -> usepua = ( pid == 3 && eid == 0 )		10824464	0		=			
ANR	10824573	PtrMemberAccess	font -> usepua		10824464	0					
ANR	10824574	Identifier	font		10824464	0					
ANR	10824575	Identifier	usepua		10824464	1					
ANR	10824576	AndExpression	pid == 3 && eid == 0		10824464	1		&&			
ANR	10824577	EqualityExpression	pid == 3		10824464	0		==			
ANR	10824578	Identifier	pid		10824464	0					
ANR	10824579	PrimaryExpression	3		10824464	1					
ANR	10824580	EqualityExpression	eid == 0		10824464	1		==			
ANR	10824581	Identifier	eid		10824464	0					
ANR	10824582	PrimaryExpression	0		10824464	1					
ANR	10824583	ReturnStatement	return 1 ;	358:4:8753:8761	10824464	10	True				
ANR	10824584	PrimaryExpression	1		10824464	0					
ANR	10824585	ReturnType	int		10824464	1					
ANR	10824586	Identifier	xps_select_font_encoding		10824464	2					
ANR	10824587	ParameterList	"xps_font_t * font , int idx"		10824464	3					
ANR	10824588	Parameter	xps_font_t * font	342:25:8273:8288	10824464	0	True				
ANR	10824589	ParameterType	xps_font_t *		10824464	0					
ANR	10824590	Identifier	font		10824464	1					
ANR	10824591	Parameter	int idx	342:43:8291:8297	10824464	1	True				
ANR	10824592	ParameterType	int		10824464	0					
ANR	10824593	Identifier	idx		10824464	1					
ANR	10824594	CFGEntryNode	ENTRY		10824464		True				
ANR	10824595	CFGExitNode	EXIT		10824464		True				
ANR	10824596	Symbol	eid		10824464						
ANR	10824597	Symbol	font -> cmapsubcount		10824464						
ANR	10824598	Symbol	font -> usepua		10824464						
ANR	10824599	Symbol	pid		10824464						
ANR	10824600	Symbol	font -> cmapsubtable		10824464						
ANR	10824601	Symbol	entry		10824464						
ANR	10824602	Symbol	font -> cmaptable		10824464						
ANR	10824603	Symbol	u32		10824464						
ANR	10824604	Symbol	font -> data		10824464						
ANR	10824605	Symbol	cmapdata		10824464						
ANR	10824606	Symbol	* font		10824464						
ANR	10824607	Symbol	u16		10824464						
ANR	10824608	Symbol	idx		10824464						
ANR	10824609	Symbol	font -> length		10824464						
ANR	10824610	Symbol	font		10824464						
ANR	10824611	Function	xps_encode_font_char_imp	366:0:8879:12335							
ANR	10824612	FunctionDef	"xps_encode_font_char_imp (xps_font_t * font , int code)"		10824611	0					
ANR	10824613	CompoundStatement		368:0:8943:12335	10824611	0					
ANR	10824614	IdentifierDeclStatement	byte * table ;	369:4:8949:8960	10824611	0	True				
ANR	10824615	IdentifierDecl	* table		10824611	0					
ANR	10824616	IdentifierDeclType	byte *		10824611	0					
ANR	10824617	Identifier	table		10824611	1					
ANR	10824618	IfStatement	if ( font -> cmapsubtable <= 0 )		10824611	1					
ANR	10824619	Condition	font -> cmapsubtable <= 0	372:8:9015:9037	10824611	0	True				
ANR	10824620	RelationalExpression	font -> cmapsubtable <= 0		10824611	0		<=			
ANR	10824621	PtrMemberAccess	font -> cmapsubtable		10824611	0					
ANR	10824622	Identifier	font		10824611	0					
ANR	10824623	Identifier	cmapsubtable		10824611	1					
ANR	10824624	PrimaryExpression	0		10824611	1					
ANR	10824625	ReturnStatement	return code ;	373:8:9048:9059	10824611	1	True				
ANR	10824626	Identifier	code		10824611	0					
ANR	10824627	ExpressionStatement	table = font -> data + font -> cmapsubtable	375:4:9066:9105	10824611	2	True				
ANR	10824628	AssignmentExpression	table = font -> data + font -> cmapsubtable		10824611	0		=			
ANR	10824629	Identifier	table		10824611	0					
ANR	10824630	AdditiveExpression	font -> data + font -> cmapsubtable		10824611	1		+			
ANR	10824631	PtrMemberAccess	font -> data		10824611	0					
ANR	10824632	Identifier	font		10824611	0					
ANR	10824633	Identifier	data		10824611	1					
ANR	10824634	PtrMemberAccess	font -> cmapsubtable		10824611	1					
ANR	10824635	Identifier	font		10824611	0					
ANR	10824636	Identifier	cmapsubtable		10824611	1					
ANR	10824637	SwitchStatement	switch ( u16 ( table ) )		10824611	3					
ANR	10824638	Condition	u16 ( table )	377:12:9120:9129	10824611	0	True				
ANR	10824639	CallExpression	u16 ( table )		10824611	0					
ANR	10824640	Callee	u16		10824611	0					
ANR	10824641	Identifier	u16		10824611	0					
ANR	10824642	ArgumentList	table		10824611	1					
ANR	10824643	Argument	table		10824611	0					
ANR	10824644	Identifier	table		10824611	0					
ANR	10824645	CompoundStatement		11:4:192:192	10824611	1					
ANR	10824646	Label	case 0 :	379:4:9142:9148	10824611	0	True				
ANR	10824647	ReturnStatement	return table [ code + 6 ] ;	380:8:9195:9217	10824611	1	True				
ANR	10824648	ArrayIndexing	table [ code + 6 ]		10824611	0					
ANR	10824649	Identifier	table		10824611	0					
ANR	10824650	AdditiveExpression	code + 6		10824611	1		+			
ANR	10824651	Identifier	code		10824611	0					
ANR	10824652	PrimaryExpression	6		10824611	1					
ANR	10824653	Label	case 4 :	382:4:9224:9230	10824611	2	True				
ANR	10824654	CompoundStatement		23:12:627:633	10824611	3					
ANR	10824655	IdentifierDeclStatement	int segCount2 = u16 ( table + 6 ) ;	384:12:9295:9325	10824611	0	True				
ANR	10824656	IdentifierDecl	segCount2 = u16 ( table + 6 )		10824611	0					
ANR	10824657	IdentifierDeclType	int		10824611	0					
ANR	10824658	Identifier	segCount2		10824611	1					
ANR	10824659	AssignmentExpression	segCount2 = u16 ( table + 6 )		10824611	2		=			
ANR	10824660	Identifier	segCount2		10824611	0					
ANR	10824661	CallExpression	u16 ( table + 6 )		10824611	1					
ANR	10824662	Callee	u16		10824611	0					
ANR	10824663	Identifier	u16		10824611	0					
ANR	10824664	ArgumentList	table + 6		10824611	1					
ANR	10824665	Argument	table + 6		10824611	0					
ANR	10824666	AdditiveExpression	table + 6		10824611	0		+			
ANR	10824667	Identifier	table		10824611	0					
ANR	10824668	PrimaryExpression	6		10824611	1					
ANR	10824669	IdentifierDeclStatement	byte * endCount = table + 14 ;	385:12:9339:9366	10824611	1	True				
ANR	10824670	IdentifierDecl	* endCount = table + 14		10824611	0					
ANR	10824671	IdentifierDeclType	byte *		10824611	0					
ANR	10824672	Identifier	endCount		10824611	1					
ANR	10824673	AssignmentExpression	* endCount = table + 14		10824611	2		=			
ANR	10824674	Identifier	endCount		10824611	0					
ANR	10824675	AdditiveExpression	table + 14		10824611	1		+			
ANR	10824676	Identifier	table		10824611	0					
ANR	10824677	PrimaryExpression	14		10824611	1					
ANR	10824678	IdentifierDeclStatement	byte * startCount = endCount + segCount2 + 2 ;	386:12:9380:9423	10824611	2	True				
ANR	10824679	IdentifierDecl	* startCount = endCount + segCount2 + 2		10824611	0					
ANR	10824680	IdentifierDeclType	byte *		10824611	0					
ANR	10824681	Identifier	startCount		10824611	1					
ANR	10824682	AssignmentExpression	* startCount = endCount + segCount2 + 2		10824611	2		=			
ANR	10824683	Identifier	startCount		10824611	0					
ANR	10824684	AdditiveExpression	endCount + segCount2 + 2		10824611	1		+			
ANR	10824685	Identifier	endCount		10824611	0					
ANR	10824686	AdditiveExpression	segCount2 + 2		10824611	1		+			
ANR	10824687	Identifier	segCount2		10824611	0					
ANR	10824688	PrimaryExpression	2		10824611	1					
ANR	10824689	IdentifierDeclStatement	byte * idDelta = startCount + segCount2 ;	387:12:9437:9475	10824611	3	True				
ANR	10824690	IdentifierDecl	* idDelta = startCount + segCount2		10824611	0					
ANR	10824691	IdentifierDeclType	byte *		10824611	0					
ANR	10824692	Identifier	idDelta		10824611	1					
ANR	10824693	AssignmentExpression	* idDelta = startCount + segCount2		10824611	2		=			
ANR	10824694	Identifier	idDelta		10824611	0					
ANR	10824695	AdditiveExpression	startCount + segCount2		10824611	1		+			
ANR	10824696	Identifier	startCount		10824611	0					
ANR	10824697	Identifier	segCount2		10824611	1					
ANR	10824698	IdentifierDeclStatement	byte * idRangeOffset = idDelta + segCount2 ;	388:12:9489:9530	10824611	4	True				
ANR	10824699	IdentifierDecl	* idRangeOffset = idDelta + segCount2		10824611	0					
ANR	10824700	IdentifierDeclType	byte *		10824611	0					
ANR	10824701	Identifier	idRangeOffset		10824611	1					
ANR	10824702	AssignmentExpression	* idRangeOffset = idDelta + segCount2		10824611	2		=			
ANR	10824703	Identifier	idRangeOffset		10824611	0					
ANR	10824704	AdditiveExpression	idDelta + segCount2		10824611	1		+			
ANR	10824705	Identifier	idDelta		10824611	0					
ANR	10824706	Identifier	segCount2		10824611	1					
ANR	10824707	IdentifierDeclStatement	byte * giddata ;	389:12:9544:9557	10824611	5	True				
ANR	10824708	IdentifierDecl	* giddata		10824611	0					
ANR	10824709	IdentifierDeclType	byte *		10824611	0					
ANR	10824710	Identifier	giddata		10824611	1					
ANR	10824711	IdentifierDeclStatement	int i2 ;	390:12:9571:9577	10824611	6	True				
ANR	10824712	IdentifierDecl	i2		10824611	0					
ANR	10824713	IdentifierDeclType	int		10824611	0					
ANR	10824714	Identifier	i2		10824611	1					
ANR	10824715	IfStatement	if ( segCount2 < 3 || segCount2 > 65535 || idRangeOffset > font -> data + font -> length )		10824611	7					
ANR	10824716	Condition	segCount2 < 3 || segCount2 > 65535 || idRangeOffset > font -> data + font -> length	392:16:9596:9689	10824611	0	True				
ANR	10824717	OrExpression	segCount2 < 3 || segCount2 > 65535 || idRangeOffset > font -> data + font -> length		10824611	0		||			
ANR	10824718	RelationalExpression	segCount2 < 3		10824611	0		<			
ANR	10824719	Identifier	segCount2		10824611	0					
ANR	10824720	PrimaryExpression	3		10824611	1					
ANR	10824721	OrExpression	segCount2 > 65535 || idRangeOffset > font -> data + font -> length		10824611	1		||			
ANR	10824722	RelationalExpression	segCount2 > 65535		10824611	0		>			
ANR	10824723	Identifier	segCount2		10824611	0					
ANR	10824724	PrimaryExpression	65535		10824611	1					
ANR	10824725	RelationalExpression	idRangeOffset > font -> data + font -> length		10824611	1		>			
ANR	10824726	Identifier	idRangeOffset		10824611	0					
ANR	10824727	AdditiveExpression	font -> data + font -> length		10824611	1		+			
ANR	10824728	PtrMemberAccess	font -> data		10824611	0					
ANR	10824729	Identifier	font		10824611	0					
ANR	10824730	Identifier	data		10824611	1					
ANR	10824731	PtrMemberAccess	font -> length		10824611	1					
ANR	10824732	Identifier	font		10824611	0					
ANR	10824733	Identifier	length		10824611	1					
ANR	10824734	ReturnStatement	return gs_error_invalidfont ;	394:15:9707:9734	10824611	1	True				
ANR	10824735	Identifier	gs_error_invalidfont		10824611	0					
ANR	10824736	ForStatement	for ( i2 = 0 ; i2 < segCount2 - 3 ; i2 += 2 )		10824611	8					
ANR	10824737	ForInit	i2 = 0 ;	396:16:9753:9759	10824611	0	True				
ANR	10824738	AssignmentExpression	i2 = 0		10824611	0		=			
ANR	10824739	Identifier	i2		10824611	0					
ANR	10824740	PrimaryExpression	0		10824611	1					
ANR	10824741	Condition	i2 < segCount2 - 3	396:24:9761:9778	10824611	1	True				
ANR	10824742	RelationalExpression	i2 < segCount2 - 3		10824611	0		<			
ANR	10824743	Identifier	i2		10824611	0					
ANR	10824744	AdditiveExpression	segCount2 - 3		10824611	1		-			
ANR	10824745	Identifier	segCount2		10824611	0					
ANR	10824746	PrimaryExpression	3		10824611	1					
ANR	10824747	AssignmentExpression	i2 += 2	396:44:9781:9787	10824611	2	True	+=			
ANR	10824748	Identifier	i2		10824611	0					
ANR	10824749	PrimaryExpression	2		10824611	1					
ANR	10824750	CompoundStatement		33:16:959:968	10824611	3					
ANR	10824751	IdentifierDeclStatement	"int delta , roff ;"	398:16:9820:9835	10824611	0	True				
ANR	10824752	IdentifierDecl	delta		10824611	0					
ANR	10824753	IdentifierDeclType	int		10824611	0					
ANR	10824754	Identifier	delta		10824611	1					
ANR	10824755	IdentifierDecl	roff		10824611	1					
ANR	10824756	IdentifierDeclType	int		10824611	0					
ANR	10824757	Identifier	roff		10824611	1					
ANR	10824758	IdentifierDeclStatement	int start = u16 ( startCount + i2 ) ;	399:16:9853:9885	10824611	1	True				
ANR	10824759	IdentifierDecl	start = u16 ( startCount + i2 )		10824611	0					
ANR	10824760	IdentifierDeclType	int		10824611	0					
ANR	10824761	Identifier	start		10824611	1					
ANR	10824762	AssignmentExpression	start = u16 ( startCount + i2 )		10824611	2		=			
ANR	10824763	Identifier	start		10824611	0					
ANR	10824764	CallExpression	u16 ( startCount + i2 )		10824611	1					
ANR	10824765	Callee	u16		10824611	0					
ANR	10824766	Identifier	u16		10824611	0					
ANR	10824767	ArgumentList	startCount + i2		10824611	1					
ANR	10824768	Argument	startCount + i2		10824611	0					
ANR	10824769	AdditiveExpression	startCount + i2		10824611	0		+			
ANR	10824770	Identifier	startCount		10824611	0					
ANR	10824771	Identifier	i2		10824611	1					
ANR	10824772	IdentifierDeclStatement	int glyph ;	400:16:9903:9912	10824611	2	True				
ANR	10824773	IdentifierDecl	glyph		10824611	0					
ANR	10824774	IdentifierDeclType	int		10824611	0					
ANR	10824775	Identifier	glyph		10824611	1					
ANR	10824776	IfStatement	if ( code < start )		10824611	3					
ANR	10824777	Condition	code < start	402:21:9936:9947	10824611	0	True				
ANR	10824778	RelationalExpression	code < start		10824611	0		<			
ANR	10824779	Identifier	code		10824611	0					
ANR	10824780	Identifier	start		10824611	1					
ANR	10824781	ReturnStatement	return 0 ;	403:20:9971:9979	10824611	1	True				
ANR	10824782	PrimaryExpression	0		10824611	0					
ANR	10824783	IfStatement	if ( code > u16 ( endCount + i2 ) )		10824611	4					
ANR	10824784	Condition	code > u16 ( endCount + i2 )	404:21:10002:10026	10824611	0	True				
ANR	10824785	RelationalExpression	code > u16 ( endCount + i2 )		10824611	0		>			
ANR	10824786	Identifier	code		10824611	0					
ANR	10824787	CallExpression	u16 ( endCount + i2 )		10824611	1					
ANR	10824788	Callee	u16		10824611	0					
ANR	10824789	Identifier	u16		10824611	0					
ANR	10824790	ArgumentList	endCount + i2		10824611	1					
ANR	10824791	Argument	endCount + i2		10824611	0					
ANR	10824792	AdditiveExpression	endCount + i2		10824611	0		+			
ANR	10824793	Identifier	endCount		10824611	0					
ANR	10824794	Identifier	i2		10824611	1					
ANR	10824795	ContinueStatement	continue ;	405:20:10050:10058	10824611	1	True				
ANR	10824796	ExpressionStatement	delta = s16 ( idDelta + i2 )	406:16:10076:10101	10824611	5	True				
ANR	10824797	AssignmentExpression	delta = s16 ( idDelta + i2 )		10824611	0		=			
ANR	10824798	Identifier	delta		10824611	0					
ANR	10824799	CallExpression	s16 ( idDelta + i2 )		10824611	1					
ANR	10824800	Callee	s16		10824611	0					
ANR	10824801	Identifier	s16		10824611	0					
ANR	10824802	ArgumentList	idDelta + i2		10824611	1					
ANR	10824803	Argument	idDelta + i2		10824611	0					
ANR	10824804	AdditiveExpression	idDelta + i2		10824611	0		+			
ANR	10824805	Identifier	idDelta		10824611	0					
ANR	10824806	Identifier	i2		10824611	1					
ANR	10824807	ExpressionStatement	roff = u16 ( idRangeOffset + i2 )	407:16:10119:10149	10824611	6	True				
ANR	10824808	AssignmentExpression	roff = u16 ( idRangeOffset + i2 )		10824611	0		=			
ANR	10824809	Identifier	roff		10824611	0					
ANR	10824810	CallExpression	u16 ( idRangeOffset + i2 )		10824611	1					
ANR	10824811	Callee	u16		10824611	0					
ANR	10824812	Identifier	u16		10824611	0					
ANR	10824813	ArgumentList	idRangeOffset + i2		10824611	1					
ANR	10824814	Argument	idRangeOffset + i2		10824611	0					
ANR	10824815	AdditiveExpression	idRangeOffset + i2		10824611	0		+			
ANR	10824816	Identifier	idRangeOffset		10824611	0					
ANR	10824817	Identifier	i2		10824611	1					
ANR	10824818	IfStatement	if ( roff == 0 )		10824611	7					
ANR	10824819	Condition	roff == 0	408:21:10172:10180	10824611	0	True				
ANR	10824820	EqualityExpression	roff == 0		10824611	0		==			
ANR	10824821	Identifier	roff		10824611	0					
ANR	10824822	PrimaryExpression	0		10824611	1					
ANR	10824823	CompoundStatement		42:16:1256:1256	10824611	1					
ANR	10824824	ReturnStatement	return ( code + delta ) & 0xffff ;	410:20:10222:10254	10824611	0	True				
ANR	10824825	BitAndExpression	( code + delta ) & 0xffff		10824611	0		&			
ANR	10824826	AdditiveExpression	code + delta		10824611	0		+			
ANR	10824827	Identifier	code		10824611	0					
ANR	10824828	Identifier	delta		10824611	1					
ANR	10824829	PrimaryExpression	0xffff		10824611	1					
ANR	10824830	IfStatement	if ( ( giddata = ( idRangeOffset + i2 + roff + ( ( code - start ) << 1 ) ) ) > font -> data + font -> length )		10824611	8					
ANR	10824831	Condition	( giddata = ( idRangeOffset + i2 + roff + ( ( code - start ) << 1 ) ) ) > font -> data + font -> length	412:20:10310:10420	10824611	0	True				
ANR	10824832	RelationalExpression	( giddata = ( idRangeOffset + i2 + roff + ( ( code - start ) << 1 ) ) ) > font -> data + font -> length		10824611	0		>			
ANR	10824833	AssignmentExpression	giddata = ( idRangeOffset + i2 + roff + ( ( code - start ) << 1 ) )		10824611	0		=			
ANR	10824834	Identifier	giddata		10824611	0					
ANR	10824835	AdditiveExpression	idRangeOffset + i2 + roff + ( ( code - start ) << 1 )		10824611	1		+			
ANR	10824836	Identifier	idRangeOffset		10824611	0					
ANR	10824837	AdditiveExpression	i2 + roff + ( ( code - start ) << 1 )		10824611	1		+			
ANR	10824838	Identifier	i2		10824611	0					
ANR	10824839	AdditiveExpression	roff + ( ( code - start ) << 1 )		10824611	1		+			
ANR	10824840	Identifier	roff		10824611	0					
ANR	10824841	ShiftExpression	( code - start ) << 1		10824611	1		<<			
ANR	10824842	AdditiveExpression	code - start		10824611	0		-			
ANR	10824843	Identifier	code		10824611	0					
ANR	10824844	Identifier	start		10824611	1					
ANR	10824845	PrimaryExpression	1		10824611	1					
ANR	10824846	AdditiveExpression	font -> data + font -> length		10824611	1		+			
ANR	10824847	PtrMemberAccess	font -> data		10824611	0					
ANR	10824848	Identifier	font		10824611	0					
ANR	10824849	Identifier	data		10824611	1					
ANR	10824850	PtrMemberAccess	font -> length		10824611	1					
ANR	10824851	Identifier	font		10824611	0					
ANR	10824852	Identifier	length		10824611	1					
ANR	10824853	CompoundStatement		46:47:1479:1479	10824611	1					
ANR	10824854	ReturnStatement	return code ;	414:20:10445:10456	10824611	0	True				
ANR	10824855	Identifier	code		10824611	0					
ANR	10824856	ExpressionStatement	glyph = u16 ( giddata )	416:16:10492:10512	10824611	9	True				
ANR	10824857	AssignmentExpression	glyph = u16 ( giddata )		10824611	0		=			
ANR	10824858	Identifier	glyph		10824611	0					
ANR	10824859	CallExpression	u16 ( giddata )		10824611	1					
ANR	10824860	Callee	u16		10824611	0					
ANR	10824861	Identifier	u16		10824611	0					
ANR	10824862	ArgumentList	giddata		10824611	1					
ANR	10824863	Argument	giddata		10824611	0					
ANR	10824864	Identifier	giddata		10824611	0					
ANR	10824865	ReturnStatement	return ( glyph == 0 ? 0 : glyph + delta ) ;	417:16:10530:10569	10824611	10	True				
ANR	10824866	ConditionalExpression	glyph == 0 ? 0 : glyph + delta		10824611	0					
ANR	10824867	Condition	glyph == 0		10824611	0					
ANR	10824868	EqualityExpression	glyph == 0		10824611	0		==			
ANR	10824869	Identifier	glyph		10824611	0					
ANR	10824870	PrimaryExpression	0		10824611	1					
ANR	10824871	PrimaryExpression	0		10824611	1					
ANR	10824872	AdditiveExpression	glyph + delta		10824611	2		+			
ANR	10824873	Identifier	glyph		10824611	0					
ANR	10824874	Identifier	delta		10824611	1					
ANR	10824875	ReturnStatement	return 0 ;	425:12:10829:10837	10824611	9	True				
ANR	10824876	PrimaryExpression	0		10824611	0					
ANR	10824877	Label	case 6 :	428:4:10854:10860	10824611	4	True				
ANR	10824878	CompoundStatement		64:12:2014:2045	10824611	5					
ANR	10824879	IdentifierDeclStatement	int firstCode = u16 ( table + 6 ) ;	430:12:10914:10944	10824611	0	True				
ANR	10824880	IdentifierDecl	firstCode = u16 ( table + 6 )		10824611	0					
ANR	10824881	IdentifierDeclType	int		10824611	0					
ANR	10824882	Identifier	firstCode		10824611	1					
ANR	10824883	AssignmentExpression	firstCode = u16 ( table + 6 )		10824611	2		=			
ANR	10824884	Identifier	firstCode		10824611	0					
ANR	10824885	CallExpression	u16 ( table + 6 )		10824611	1					
ANR	10824886	Callee	u16		10824611	0					
ANR	10824887	Identifier	u16		10824611	0					
ANR	10824888	ArgumentList	table + 6		10824611	1					
ANR	10824889	Argument	table + 6		10824611	0					
ANR	10824890	AdditiveExpression	table + 6		10824611	0		+			
ANR	10824891	Identifier	table		10824611	0					
ANR	10824892	PrimaryExpression	6		10824611	1					
ANR	10824893	IdentifierDeclStatement	int entryCount = u16 ( table + 8 ) ;	431:12:10958:10989	10824611	1	True				
ANR	10824894	IdentifierDecl	entryCount = u16 ( table + 8 )		10824611	0					
ANR	10824895	IdentifierDeclType	int		10824611	0					
ANR	10824896	Identifier	entryCount		10824611	1					
ANR	10824897	AssignmentExpression	entryCount = u16 ( table + 8 )		10824611	2		=			
ANR	10824898	Identifier	entryCount		10824611	0					
ANR	10824899	CallExpression	u16 ( table + 8 )		10824611	1					
ANR	10824900	Callee	u16		10824611	0					
ANR	10824901	Identifier	u16		10824611	0					
ANR	10824902	ArgumentList	table + 8		10824611	1					
ANR	10824903	Argument	table + 8		10824611	0					
ANR	10824904	AdditiveExpression	table + 8		10824611	0		+			
ANR	10824905	Identifier	table		10824611	0					
ANR	10824906	PrimaryExpression	8		10824611	1					
ANR	10824907	IfStatement	if ( code < firstCode || code >= firstCode + entryCount )		10824611	2					
ANR	10824908	Condition	code < firstCode || code >= firstCode + entryCount	432:17:11008:11057	10824611	0	True				
ANR	10824909	OrExpression	code < firstCode || code >= firstCode + entryCount		10824611	0		||			
ANR	10824910	RelationalExpression	code < firstCode		10824611	0		<			
ANR	10824911	Identifier	code		10824611	0					
ANR	10824912	Identifier	firstCode		10824611	1					
ANR	10824913	RelationalExpression	code >= firstCode + entryCount		10824611	1		>=			
ANR	10824914	Identifier	code		10824611	0					
ANR	10824915	AdditiveExpression	firstCode + entryCount		10824611	1		+			
ANR	10824916	Identifier	firstCode		10824611	0					
ANR	10824917	Identifier	entryCount		10824611	1					
ANR	10824918	ReturnStatement	return 0 ;	433:16:11077:11085	10824611	1	True				
ANR	10824919	PrimaryExpression	0		10824611	0					
ANR	10824920	ReturnStatement	return u16 ( table + 10 + ( ( code - firstCode ) << 1 ) ) ;	434:12:11099:11149	10824611	3	True				
ANR	10824921	CallExpression	u16 ( table + 10 + ( ( code - firstCode ) << 1 ) )		10824611	0					
ANR	10824922	Callee	u16		10824611	0					
ANR	10824923	Identifier	u16		10824611	0					
ANR	10824924	ArgumentList	table + 10 + ( ( code - firstCode ) << 1 )		10824611	1					
ANR	10824925	Argument	table + 10 + ( ( code - firstCode ) << 1 )		10824611	0					
ANR	10824926	AdditiveExpression	table + 10 + ( ( code - firstCode ) << 1 )		10824611	0		+			
ANR	10824927	Identifier	table		10824611	0					
ANR	10824928	AdditiveExpression	10 + ( ( code - firstCode ) << 1 )		10824611	1		+			
ANR	10824929	PrimaryExpression	10		10824611	0					
ANR	10824930	ShiftExpression	( code - firstCode ) << 1		10824611	1		<<			
ANR	10824931	AdditiveExpression	code - firstCode		10824611	0		-			
ANR	10824932	Identifier	code		10824611	0					
ANR	10824933	Identifier	firstCode		10824611	1					
ANR	10824934	PrimaryExpression	1		10824611	1					
ANR	10824935	Label	case 10 :	437:4:11166:11173	10824611	6	True				
ANR	10824936	CompoundStatement		73:12:2331:2361	10824611	7					
ANR	10824937	IdentifierDeclStatement	int startCharCode = u32 ( table + 12 ) ;	439:12:11226:11261	10824611	0	True				
ANR	10824938	IdentifierDecl	startCharCode = u32 ( table + 12 )		10824611	0					
ANR	10824939	IdentifierDeclType	int		10824611	0					
ANR	10824940	Identifier	startCharCode		10824611	1					
ANR	10824941	AssignmentExpression	startCharCode = u32 ( table + 12 )		10824611	2		=			
ANR	10824942	Identifier	startCharCode		10824611	0					
ANR	10824943	CallExpression	u32 ( table + 12 )		10824611	1					
ANR	10824944	Callee	u32		10824611	0					
ANR	10824945	Identifier	u32		10824611	0					
ANR	10824946	ArgumentList	table + 12		10824611	1					
ANR	10824947	Argument	table + 12		10824611	0					
ANR	10824948	AdditiveExpression	table + 12		10824611	0		+			
ANR	10824949	Identifier	table		10824611	0					
ANR	10824950	PrimaryExpression	12		10824611	1					
ANR	10824951	IdentifierDeclStatement	int numChars = u32 ( table + 16 ) ;	440:12:11275:11305	10824611	1	True				
ANR	10824952	IdentifierDecl	numChars = u32 ( table + 16 )		10824611	0					
ANR	10824953	IdentifierDeclType	int		10824611	0					
ANR	10824954	Identifier	numChars		10824611	1					
ANR	10824955	AssignmentExpression	numChars = u32 ( table + 16 )		10824611	2		=			
ANR	10824956	Identifier	numChars		10824611	0					
ANR	10824957	CallExpression	u32 ( table + 16 )		10824611	1					
ANR	10824958	Callee	u32		10824611	0					
ANR	10824959	Identifier	u32		10824611	0					
ANR	10824960	ArgumentList	table + 16		10824611	1					
ANR	10824961	Argument	table + 16		10824611	0					
ANR	10824962	AdditiveExpression	table + 16		10824611	0		+			
ANR	10824963	Identifier	table		10824611	0					
ANR	10824964	PrimaryExpression	16		10824611	1					
ANR	10824965	IfStatement	if ( code < startCharCode || code >= startCharCode + numChars )		10824611	2					
ANR	10824966	Condition	code < startCharCode || code >= startCharCode + numChars	441:17:11324:11379	10824611	0	True				
ANR	10824967	OrExpression	code < startCharCode || code >= startCharCode + numChars		10824611	0		||			
ANR	10824968	RelationalExpression	code < startCharCode		10824611	0		<			
ANR	10824969	Identifier	code		10824611	0					
ANR	10824970	Identifier	startCharCode		10824611	1					
ANR	10824971	RelationalExpression	code >= startCharCode + numChars		10824611	1		>=			
ANR	10824972	Identifier	code		10824611	0					
ANR	10824973	AdditiveExpression	startCharCode + numChars		10824611	1		+			
ANR	10824974	Identifier	startCharCode		10824611	0					
ANR	10824975	Identifier	numChars		10824611	1					
ANR	10824976	ReturnStatement	return 0 ;	442:16:11399:11407	10824611	1	True				
ANR	10824977	PrimaryExpression	0		10824611	0					
ANR	10824978	ReturnStatement	return u32 ( table + 20 + ( code - startCharCode ) * 4 ) ;	443:12:11421:11472	10824611	3	True				
ANR	10824979	CallExpression	u32 ( table + 20 + ( code - startCharCode ) * 4 )		10824611	0					
ANR	10824980	Callee	u32		10824611	0					
ANR	10824981	Identifier	u32		10824611	0					
ANR	10824982	ArgumentList	table + 20 + ( code - startCharCode ) * 4		10824611	1					
ANR	10824983	Argument	table + 20 + ( code - startCharCode ) * 4		10824611	0					
ANR	10824984	AdditiveExpression	table + 20 + ( code - startCharCode ) * 4		10824611	0		+			
ANR	10824985	Identifier	table		10824611	0					
ANR	10824986	AdditiveExpression	20 + ( code - startCharCode ) * 4		10824611	1		+			
ANR	10824987	PrimaryExpression	20		10824611	0					
ANR	10824988	MultiplicativeExpression	( code - startCharCode ) * 4		10824611	1		*			
ANR	10824989	AdditiveExpression	code - startCharCode		10824611	0		-			
ANR	10824990	Identifier	code		10824611	0					
ANR	10824991	Identifier	startCharCode		10824611	1					
ANR	10824992	PrimaryExpression	4		10824611	1					
ANR	10824993	Label	case 12 :	446:4:11489:11496	10824611	8	True				
ANR	10824994	CompoundStatement		83:12:2692:2697	10824611	9					
ANR	10824995	IdentifierDeclStatement	int nGroups = u32 ( table + 12 ) ;	448:12:11555:11584	10824611	0	True				
ANR	10824996	IdentifierDecl	nGroups = u32 ( table + 12 )		10824611	0					
ANR	10824997	IdentifierDeclType	int		10824611	0					
ANR	10824998	Identifier	nGroups		10824611	1					
ANR	10824999	AssignmentExpression	nGroups = u32 ( table + 12 )		10824611	2		=			
ANR	10825000	Identifier	nGroups		10824611	0					
ANR	10825001	CallExpression	u32 ( table + 12 )		10824611	1					
ANR	10825002	Callee	u32		10824611	0					
ANR	10825003	Identifier	u32		10824611	0					
ANR	10825004	ArgumentList	table + 12		10824611	1					
ANR	10825005	Argument	table + 12		10824611	0					
ANR	10825006	AdditiveExpression	table + 12		10824611	0		+			
ANR	10825007	Identifier	table		10824611	0					
ANR	10825008	PrimaryExpression	12		10824611	1					
ANR	10825009	IdentifierDeclStatement	byte * group = table + 16 ;	449:12:11598:11622	10824611	1	True				
ANR	10825010	IdentifierDecl	* group = table + 16		10824611	0					
ANR	10825011	IdentifierDeclType	byte *		10824611	0					
ANR	10825012	Identifier	group		10824611	1					
ANR	10825013	AssignmentExpression	* group = table + 16		10824611	2		=			
ANR	10825014	Identifier	group		10824611	0					
ANR	10825015	AdditiveExpression	table + 16		10824611	1		+			
ANR	10825016	Identifier	table		10824611	0					
ANR	10825017	PrimaryExpression	16		10824611	1					
ANR	10825018	IdentifierDeclStatement	int i ;	450:12:11636:11641	10824611	2	True				
ANR	10825019	IdentifierDecl	i		10824611	0					
ANR	10825020	IdentifierDeclType	int		10824611	0					
ANR	10825021	Identifier	i		10824611	1					
ANR	10825022	ForStatement	for ( i = 0 ; i < nGroups ; i ++ )		10824611	3					
ANR	10825023	ForInit	i = 0 ;	452:17:11661:11666	10824611	0	True				
ANR	10825024	AssignmentExpression	i = 0		10824611	0		=			
ANR	10825025	Identifier	i		10824611	0					
ANR	10825026	PrimaryExpression	0		10824611	1					
ANR	10825027	Condition	i < nGroups	452:24:11668:11678	10824611	1	True				
ANR	10825028	RelationalExpression	i < nGroups		10824611	0		<			
ANR	10825029	Identifier	i		10824611	0					
ANR	10825030	Identifier	nGroups		10824611	1					
ANR	10825031	PostIncDecOperationExpression	i ++	452:37:11681:11683	10824611	2	True				
ANR	10825032	Identifier	i		10824611	0					
ANR	10825033	IncDec	++		10824611	1					
ANR	10825034	CompoundStatement		89:16:2874:2907	10824611	3					
ANR	10825035	IdentifierDeclStatement	int startCharCode = u32 ( group + 0 ) ;	454:16:11716:11750	10824611	0	True				
ANR	10825036	IdentifierDecl	startCharCode = u32 ( group + 0 )		10824611	0					
ANR	10825037	IdentifierDeclType	int		10824611	0					
ANR	10825038	Identifier	startCharCode		10824611	1					
ANR	10825039	AssignmentExpression	startCharCode = u32 ( group + 0 )		10824611	2		=			
ANR	10825040	Identifier	startCharCode		10824611	0					
ANR	10825041	CallExpression	u32 ( group + 0 )		10824611	1					
ANR	10825042	Callee	u32		10824611	0					
ANR	10825043	Identifier	u32		10824611	0					
ANR	10825044	ArgumentList	group + 0		10824611	1					
ANR	10825045	Argument	group + 0		10824611	0					
ANR	10825046	AdditiveExpression	group + 0		10824611	0		+			
ANR	10825047	Identifier	group		10824611	0					
ANR	10825048	PrimaryExpression	0		10824611	1					
ANR	10825049	IdentifierDeclStatement	int endCharCode = u32 ( group + 4 ) ;	455:16:11768:11800	10824611	1	True				
ANR	10825050	IdentifierDecl	endCharCode = u32 ( group + 4 )		10824611	0					
ANR	10825051	IdentifierDeclType	int		10824611	0					
ANR	10825052	Identifier	endCharCode		10824611	1					
ANR	10825053	AssignmentExpression	endCharCode = u32 ( group + 4 )		10824611	2		=			
ANR	10825054	Identifier	endCharCode		10824611	0					
ANR	10825055	CallExpression	u32 ( group + 4 )		10824611	1					
ANR	10825056	Callee	u32		10824611	0					
ANR	10825057	Identifier	u32		10824611	0					
ANR	10825058	ArgumentList	group + 4		10824611	1					
ANR	10825059	Argument	group + 4		10824611	0					
ANR	10825060	AdditiveExpression	group + 4		10824611	0		+			
ANR	10825061	Identifier	group		10824611	0					
ANR	10825062	PrimaryExpression	4		10824611	1					
ANR	10825063	IdentifierDeclStatement	int startGlyphID = u32 ( group + 8 ) ;	456:16:11818:11851	10824611	2	True				
ANR	10825064	IdentifierDecl	startGlyphID = u32 ( group + 8 )		10824611	0					
ANR	10825065	IdentifierDeclType	int		10824611	0					
ANR	10825066	Identifier	startGlyphID		10824611	1					
ANR	10825067	AssignmentExpression	startGlyphID = u32 ( group + 8 )		10824611	2		=			
ANR	10825068	Identifier	startGlyphID		10824611	0					
ANR	10825069	CallExpression	u32 ( group + 8 )		10824611	1					
ANR	10825070	Callee	u32		10824611	0					
ANR	10825071	Identifier	u32		10824611	0					
ANR	10825072	ArgumentList	group + 8		10824611	1					
ANR	10825073	Argument	group + 8		10824611	0					
ANR	10825074	AdditiveExpression	group + 8		10824611	0		+			
ANR	10825075	Identifier	group		10824611	0					
ANR	10825076	PrimaryExpression	8		10824611	1					
ANR	10825077	IfStatement	if ( code < startCharCode )		10824611	3					
ANR	10825078	Condition	code < startCharCode	457:21:11874:11893	10824611	0	True				
ANR	10825079	RelationalExpression	code < startCharCode		10824611	0		<			
ANR	10825080	Identifier	code		10824611	0					
ANR	10825081	Identifier	startCharCode		10824611	1					
ANR	10825082	ReturnStatement	return 0 ;	458:20:11917:11925	10824611	1	True				
ANR	10825083	PrimaryExpression	0		10824611	0					
ANR	10825084	IfStatement	if ( code <= endCharCode )		10824611	4					
ANR	10825085	Condition	code <= endCharCode	459:21:11948:11966	10824611	0	True				
ANR	10825086	RelationalExpression	code <= endCharCode		10824611	0		<=			
ANR	10825087	Identifier	code		10824611	0					
ANR	10825088	Identifier	endCharCode		10824611	1					
ANR	10825089	ReturnStatement	return startGlyphID + ( code - startCharCode ) ;	460:20:11990:12034	10824611	1	True				
ANR	10825090	AdditiveExpression	startGlyphID + ( code - startCharCode )		10824611	0		+			
ANR	10825091	Identifier	startGlyphID		10824611	0					
ANR	10825092	AdditiveExpression	code - startCharCode		10824611	1		-			
ANR	10825093	Identifier	code		10824611	0					
ANR	10825094	Identifier	startCharCode		10824611	1					
ANR	10825095	ExpressionStatement	group += 12	461:16:12052:12063	10824611	5	True				
ANR	10825096	AssignmentExpression	group += 12		10824611	0		+=			
ANR	10825097	Identifier	group		10824611	0					
ANR	10825098	PrimaryExpression	12		10824611	1					
ANR	10825099	ReturnStatement	return 0 ;	464:12:12092:12100	10824611	4	True				
ANR	10825100	PrimaryExpression	0		10824611	0					
ANR	10825101	Label	case 2 :	467:4:12117:12123	10824611	10	True				
ANR	10825102	Label	case 8 :	468:4:12168:12174	10824611	11	True				
ANR	10825103	Label	default :	469:4:12228:12235	10824611	12	True				
ANR	10825104	Identifier	default		10824611	0					
ANR	10825105	ExpressionStatement	"gs_warn1 ( ""unknown cmap format: %d\\n"" , u16 ( table ) )"	470:8:12245:12294	10824611	13	True				
ANR	10825106	CallExpression	"gs_warn1 ( ""unknown cmap format: %d\\n"" , u16 ( table ) )"		10824611	0					
ANR	10825107	Callee	gs_warn1		10824611	0					
ANR	10825108	Identifier	gs_warn1		10824611	0					
ANR	10825109	ArgumentList	"""unknown cmap format: %d\\n"""		10824611	1					
ANR	10825110	Argument	"""unknown cmap format: %d\\n"""		10824611	0					
ANR	10825111	PrimaryExpression	"""unknown cmap format: %d\\n"""		10824611	0					
ANR	10825112	Argument	u16 ( table )		10824611	1					
ANR	10825113	CallExpression	u16 ( table )		10824611	0					
ANR	10825114	Callee	u16		10824611	0					
ANR	10825115	Identifier	u16		10824611	0					
ANR	10825116	ArgumentList	table		10824611	1					
ANR	10825117	Argument	table		10824611	0					
ANR	10825118	Identifier	table		10824611	0					
ANR	10825119	ReturnStatement	return 0 ;	471:8:12304:12312	10824611	14	True				
ANR	10825120	PrimaryExpression	0		10824611	0					
ANR	10825121	ReturnStatement	return 0 ;	474:4:12325:12333	10824611	4	True				
ANR	10825122	PrimaryExpression	0		10824611	0					
ANR	10825123	ReturnType	static int		10824611	1					
ANR	10825124	Identifier	xps_encode_font_char_imp		10824611	2					
ANR	10825125	ParameterList	"xps_font_t * font , int code"		10824611	3					
ANR	10825126	Parameter	xps_font_t * font	367:25:8915:8930	10824611	0	True				
ANR	10825127	ParameterType	xps_font_t *		10824611	0					
ANR	10825128	Identifier	font		10824611	1					
ANR	10825129	Parameter	int code	367:43:8933:8940	10824611	1	True				
ANR	10825130	ParameterType	int		10824611	0					
ANR	10825131	Identifier	code		10824611	1					
ANR	10825132	CFGEntryNode	ENTRY		10824611		True				
ANR	10825133	CFGExitNode	EXIT		10824611		True				
ANR	10825134	Symbol	startGlyphID		10824611						
ANR	10825135	Symbol	code		10824611						
ANR	10825136	Symbol	roff		10824611						
ANR	10825137	Symbol	delta		10824611						
ANR	10825138	Symbol	font -> cmapsubtable		10824611						
ANR	10825139	Symbol	giddata		10824611						
ANR	10825140	Symbol	u32		10824611						
ANR	10825141	Symbol	s16		10824611						
ANR	10825142	Symbol	* font		10824611						
ANR	10825143	Symbol	u16		10824611						
ANR	10825144	Symbol	firstCode		10824611						
ANR	10825145	Symbol	font -> length		10824611						
ANR	10825146	Symbol	gs_error_invalidfont		10824611						
ANR	10825147	Symbol	idDelta		10824611						
ANR	10825148	Symbol	table		10824611						
ANR	10825149	Symbol	group		10824611						
ANR	10825150	Symbol	startCount		10824611						
ANR	10825151	Symbol	segCount2		10824611						
ANR	10825152	Symbol	start		10824611						
ANR	10825153	Symbol	* table		10824611						
ANR	10825154	Symbol	i2		10824611						
ANR	10825155	Symbol	i		10824611						
ANR	10825156	Symbol	numChars		10824611						
ANR	10825157	Symbol	glyph		10824611						
ANR	10825158	Symbol	nGroups		10824611						
ANR	10825159	Symbol	entryCount		10824611						
ANR	10825160	Symbol	font -> data		10824611						
ANR	10825161	Symbol	endCount		10824611						
ANR	10825162	Symbol	startCharCode		10824611						
ANR	10825163	Symbol	endCharCode		10824611						
ANR	10825164	Symbol	idRangeOffset		10824611						
ANR	10825165	Symbol	* code		10824611						
ANR	10825166	Symbol	font		10824611						
ANR	10825167	Function	xps_decode_font_char_imp	483:0:12643:17130							
ANR	10825168	FunctionDef	"xps_decode_font_char_imp (xps_font_t * font , int code)"		10825167	0					
ANR	10825169	CompoundStatement		485:0:12707:17130	10825167	0					
ANR	10825170	IdentifierDeclStatement	"byte * table , * t ;"	486:4:12713:12728	10825167	0	True				
ANR	10825171	IdentifierDecl	* table		10825167	0					
ANR	10825172	IdentifierDeclType	byte *		10825167	0					
ANR	10825173	Identifier	table		10825167	1					
ANR	10825174	IdentifierDecl	* t		10825167	1					
ANR	10825175	IdentifierDeclType	byte *		10825167	0					
ANR	10825176	Identifier	t		10825167	1					
ANR	10825177	IfStatement	if ( font -> cmapsubtable <= 0 )		10825167	1					
ANR	10825178	Condition	font -> cmapsubtable <= 0	489:8:12783:12805	10825167	0	True				
ANR	10825179	RelationalExpression	font -> cmapsubtable <= 0		10825167	0		<=			
ANR	10825180	PtrMemberAccess	font -> cmapsubtable		10825167	0					
ANR	10825181	Identifier	font		10825167	0					
ANR	10825182	Identifier	cmapsubtable		10825167	1					
ANR	10825183	PrimaryExpression	0		10825167	1					
ANR	10825184	ReturnStatement	return code ;	490:8:12816:12827	10825167	1	True				
ANR	10825185	Identifier	code		10825167	0					
ANR	10825186	ExpressionStatement	table = font -> data + font -> cmapsubtable	492:4:12834:12873	10825167	2	True				
ANR	10825187	AssignmentExpression	table = font -> data + font -> cmapsubtable		10825167	0		=			
ANR	10825188	Identifier	table		10825167	0					
ANR	10825189	AdditiveExpression	font -> data + font -> cmapsubtable		10825167	1		+			
ANR	10825190	PtrMemberAccess	font -> data		10825167	0					
ANR	10825191	Identifier	font		10825167	0					
ANR	10825192	Identifier	data		10825167	1					
ANR	10825193	PtrMemberAccess	font -> cmapsubtable		10825167	1					
ANR	10825194	Identifier	font		10825167	0					
ANR	10825195	Identifier	cmapsubtable		10825167	1					
ANR	10825196	IfStatement	if ( table >= font -> data + font -> length )		10825167	3					
ANR	10825197	Condition	table >= font -> data + font -> length	493:8:12883:12916	10825167	0	True				
ANR	10825198	RelationalExpression	table >= font -> data + font -> length		10825167	0		>=			
ANR	10825199	Identifier	table		10825167	0					
ANR	10825200	AdditiveExpression	font -> data + font -> length		10825167	1		+			
ANR	10825201	PtrMemberAccess	font -> data		10825167	0					
ANR	10825202	Identifier	font		10825167	0					
ANR	10825203	Identifier	data		10825167	1					
ANR	10825204	PtrMemberAccess	font -> length		10825167	1					
ANR	10825205	Identifier	font		10825167	0					
ANR	10825206	Identifier	length		10825167	1					
ANR	10825207	ReturnStatement	return code ;	494:8:12927:12938	10825167	1	True				
ANR	10825208	Identifier	code		10825167	0					
ANR	10825209	SwitchStatement	switch ( u16 ( table ) )		10825167	4					
ANR	10825210	Condition	u16 ( table )	496:12:12953:12962	10825167	0	True				
ANR	10825211	CallExpression	u16 ( table )		10825167	0					
ANR	10825212	Callee	u16		10825167	0					
ANR	10825213	Identifier	u16		10825167	0					
ANR	10825214	ArgumentList	table		10825167	1					
ANR	10825215	Argument	table		10825167	0					
ANR	10825216	Identifier	table		10825167	0					
ANR	10825217	CompoundStatement		13:4:261:261	10825167	1					
ANR	10825218	Label	case 0 :	498:8:12979:12985	10825167	0	True				
ANR	10825219	CompoundStatement		16:16:346:380	10825167	1					
ANR	10825220	IdentifierDeclStatement	"int i , length = u16 ( & table [ 2 ] ) - 6 ;"	500:16:13054:13088	10825167	0	True				
ANR	10825221	IdentifierDecl	i		10825167	0					
ANR	10825222	IdentifierDeclType	int		10825167	0					
ANR	10825223	Identifier	i		10825167	1					
ANR	10825224	IdentifierDecl	length = u16 ( & table [ 2 ] ) - 6		10825167	1					
ANR	10825225	IdentifierDeclType	int		10825167	0					
ANR	10825226	Identifier	length		10825167	1					
ANR	10825227	AssignmentExpression	length = u16 ( & table [ 2 ] ) - 6		10825167	2		=			
ANR	10825228	Identifier	length		10825167	0					
ANR	10825229	AdditiveExpression	u16 ( & table [ 2 ] ) - 6		10825167	1		-			
ANR	10825230	CallExpression	u16 ( & table [ 2 ] )		10825167	0					
ANR	10825231	Callee	u16		10825167	0					
ANR	10825232	Identifier	u16		10825167	0					
ANR	10825233	ArgumentList	& table [ 2 ]		10825167	1					
ANR	10825234	Argument	& table [ 2 ]		10825167	0					
ANR	10825235	UnaryOperationExpression	& table [ 2 ]		10825167	0					
ANR	10825236	UnaryOperator	&		10825167	0					
ANR	10825237	ArrayIndexing	table [ 2 ]		10825167	1					
ANR	10825238	Identifier	table		10825167	0					
ANR	10825239	PrimaryExpression	2		10825167	1					
ANR	10825240	PrimaryExpression	6		10825167	1					
ANR	10825241	IfStatement	if ( length < 0 || length > 256 )		10825167	1					
ANR	10825242	Condition	length < 0 || length > 256	502:20:13111:13136	10825167	0	True				
ANR	10825243	OrExpression	length < 0 || length > 256		10825167	0		||			
ANR	10825244	RelationalExpression	length < 0		10825167	0		<			
ANR	10825245	Identifier	length		10825167	0					
ANR	10825246	PrimaryExpression	0		10825167	1					
ANR	10825247	RelationalExpression	length > 256		10825167	1		>			
ANR	10825248	Identifier	length		10825167	0					
ANR	10825249	PrimaryExpression	256		10825167	1					
ANR	10825250	ReturnStatement	return gs_error_invalidfont ;	503:20:13159:13186	10825167	1	True				
ANR	10825251	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825252	ForStatement	for ( i = 0 ; i < length ; i ++ )		10825167	2					
ANR	10825253	ForInit	i = 0 ;	505:21:13210:13213	10825167	0	True				
ANR	10825254	AssignmentExpression	i = 0		10825167	0		=			
ANR	10825255	Identifier	i		10825167	0					
ANR	10825256	PrimaryExpression	0		10825167	1					
ANR	10825257	Condition	i < length	505:25:13214:13221	10825167	1	True				
ANR	10825258	RelationalExpression	i < length		10825167	0		<			
ANR	10825259	Identifier	i		10825167	0					
ANR	10825260	Identifier	length		10825167	1					
ANR	10825261	PostIncDecOperationExpression	i ++	505:34:13223:13225	10825167	2	True				
ANR	10825262	Identifier	i		10825167	0					
ANR	10825263	IncDec	++		10825167	1					
ANR	10825264	CompoundStatement		21:39:520:520	10825167	3					
ANR	10825265	IfStatement	if ( table [ 6 + i ] == code )		10825167	0					
ANR	10825266	Condition	table [ 6 + i ] == code	506:24:13254:13273	10825167	0	True				
ANR	10825267	EqualityExpression	table [ 6 + i ] == code		10825167	0		==			
ANR	10825268	ArrayIndexing	table [ 6 + i ]		10825167	0					
ANR	10825269	Identifier	table		10825167	0					
ANR	10825270	AdditiveExpression	6 + i		10825167	1		+			
ANR	10825271	PrimaryExpression	6		10825167	0					
ANR	10825272	Identifier	i		10825167	1					
ANR	10825273	Identifier	code		10825167	1					
ANR	10825274	ReturnStatement	return i ;	507:24:13300:13308	10825167	1	True				
ANR	10825275	Identifier	i		10825167	0					
ANR	10825276	ReturnStatement	return 0 ;	510:12:13354:13362	10825167	2	True				
ANR	10825277	PrimaryExpression	0		10825167	0					
ANR	10825278	Label	case 4 :	511:8:13372:13378	10825167	3	True				
ANR	10825279	CompoundStatement		35:16:1043:1049	10825167	4					
ANR	10825280	IdentifierDeclStatement	int segCount2 = u16 ( table + 6 ) ;	513:16:13451:13481	10825167	0	True				
ANR	10825281	IdentifierDecl	segCount2 = u16 ( table + 6 )		10825167	0					
ANR	10825282	IdentifierDeclType	int		10825167	0					
ANR	10825283	Identifier	segCount2		10825167	1					
ANR	10825284	AssignmentExpression	segCount2 = u16 ( table + 6 )		10825167	2		=			
ANR	10825285	Identifier	segCount2		10825167	0					
ANR	10825286	CallExpression	u16 ( table + 6 )		10825167	1					
ANR	10825287	Callee	u16		10825167	0					
ANR	10825288	Identifier	u16		10825167	0					
ANR	10825289	ArgumentList	table + 6		10825167	1					
ANR	10825290	Argument	table + 6		10825167	0					
ANR	10825291	AdditiveExpression	table + 6		10825167	0		+			
ANR	10825292	Identifier	table		10825167	0					
ANR	10825293	PrimaryExpression	6		10825167	1					
ANR	10825294	IdentifierDeclStatement	byte * endCount = table + 14 ;	514:16:13499:13526	10825167	1	True				
ANR	10825295	IdentifierDecl	* endCount = table + 14		10825167	0					
ANR	10825296	IdentifierDeclType	byte *		10825167	0					
ANR	10825297	Identifier	endCount		10825167	1					
ANR	10825298	AssignmentExpression	* endCount = table + 14		10825167	2		=			
ANR	10825299	Identifier	endCount		10825167	0					
ANR	10825300	AdditiveExpression	table + 14		10825167	1		+			
ANR	10825301	Identifier	table		10825167	0					
ANR	10825302	PrimaryExpression	14		10825167	1					
ANR	10825303	IdentifierDeclStatement	byte * startCount = endCount + segCount2 + 2 ;	515:16:13544:13587	10825167	2	True				
ANR	10825304	IdentifierDecl	* startCount = endCount + segCount2 + 2		10825167	0					
ANR	10825305	IdentifierDeclType	byte *		10825167	0					
ANR	10825306	Identifier	startCount		10825167	1					
ANR	10825307	AssignmentExpression	* startCount = endCount + segCount2 + 2		10825167	2		=			
ANR	10825308	Identifier	startCount		10825167	0					
ANR	10825309	AdditiveExpression	endCount + segCount2 + 2		10825167	1		+			
ANR	10825310	Identifier	endCount		10825167	0					
ANR	10825311	AdditiveExpression	segCount2 + 2		10825167	1		+			
ANR	10825312	Identifier	segCount2		10825167	0					
ANR	10825313	PrimaryExpression	2		10825167	1					
ANR	10825314	IdentifierDeclStatement	byte * idDelta = startCount + segCount2 ;	516:16:13605:13643	10825167	3	True				
ANR	10825315	IdentifierDecl	* idDelta = startCount + segCount2		10825167	0					
ANR	10825316	IdentifierDeclType	byte *		10825167	0					
ANR	10825317	Identifier	idDelta		10825167	1					
ANR	10825318	AssignmentExpression	* idDelta = startCount + segCount2		10825167	2		=			
ANR	10825319	Identifier	idDelta		10825167	0					
ANR	10825320	AdditiveExpression	startCount + segCount2		10825167	1		+			
ANR	10825321	Identifier	startCount		10825167	0					
ANR	10825322	Identifier	segCount2		10825167	1					
ANR	10825323	IdentifierDeclStatement	byte * idRangeOffset = idDelta + segCount2 ;	517:16:13661:13702	10825167	4	True				
ANR	10825324	IdentifierDecl	* idRangeOffset = idDelta + segCount2		10825167	0					
ANR	10825325	IdentifierDeclType	byte *		10825167	0					
ANR	10825326	Identifier	idRangeOffset		10825167	1					
ANR	10825327	AssignmentExpression	* idRangeOffset = idDelta + segCount2		10825167	2		=			
ANR	10825328	Identifier	idRangeOffset		10825167	0					
ANR	10825329	AdditiveExpression	idDelta + segCount2		10825167	1		+			
ANR	10825330	Identifier	idDelta		10825167	0					
ANR	10825331	Identifier	segCount2		10825167	1					
ANR	10825332	IdentifierDeclStatement	byte * giddata ;	518:16:13720:13733	10825167	5	True				
ANR	10825333	IdentifierDecl	* giddata		10825167	0					
ANR	10825334	IdentifierDeclType	byte *		10825167	0					
ANR	10825335	Identifier	giddata		10825167	1					
ANR	10825336	IdentifierDeclStatement	int i2 ;	519:16:13751:13757	10825167	6	True				
ANR	10825337	IdentifierDecl	i2		10825167	0					
ANR	10825338	IdentifierDeclType	int		10825167	0					
ANR	10825339	Identifier	i2		10825167	1					
ANR	10825340	IfStatement	if ( segCount2 < 3 || segCount2 > 65535 || idRangeOffset > font -> data + font -> length )		10825167	7					
ANR	10825341	Condition	segCount2 < 3 || segCount2 > 65535 || idRangeOffset > font -> data + font -> length	521:20:13780:13878	10825167	0	True				
ANR	10825342	OrExpression	segCount2 < 3 || segCount2 > 65535 || idRangeOffset > font -> data + font -> length		10825167	0		||			
ANR	10825343	RelationalExpression	segCount2 < 3		10825167	0		<			
ANR	10825344	Identifier	segCount2		10825167	0					
ANR	10825345	PrimaryExpression	3		10825167	1					
ANR	10825346	OrExpression	segCount2 > 65535 || idRangeOffset > font -> data + font -> length		10825167	1		||			
ANR	10825347	RelationalExpression	segCount2 > 65535		10825167	0		>			
ANR	10825348	Identifier	segCount2		10825167	0					
ANR	10825349	PrimaryExpression	65535		10825167	1					
ANR	10825350	RelationalExpression	idRangeOffset > font -> data + font -> length		10825167	1		>			
ANR	10825351	Identifier	idRangeOffset		10825167	0					
ANR	10825352	AdditiveExpression	font -> data + font -> length		10825167	1		+			
ANR	10825353	PtrMemberAccess	font -> data		10825167	0					
ANR	10825354	Identifier	font		10825167	0					
ANR	10825355	Identifier	data		10825167	1					
ANR	10825356	PtrMemberAccess	font -> length		10825167	1					
ANR	10825357	Identifier	font		10825167	0					
ANR	10825358	Identifier	length		10825167	1					
ANR	10825359	ReturnStatement	return gs_error_invalidfont ;	523:20:13901:13928	10825167	1	True				
ANR	10825360	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825361	ForStatement	for ( i2 = 0 ; i2 < segCount2 - 3 ; i2 += 2 )		10825167	8					
ANR	10825362	ForInit	i2 = 0 ;	525:21:13952:13958	10825167	0	True				
ANR	10825363	AssignmentExpression	i2 = 0		10825167	0		=			
ANR	10825364	Identifier	i2		10825167	0					
ANR	10825365	PrimaryExpression	0		10825167	1					
ANR	10825366	Condition	i2 < segCount2 - 3	525:29:13960:13977	10825167	1	True				
ANR	10825367	RelationalExpression	i2 < segCount2 - 3		10825167	0		<			
ANR	10825368	Identifier	i2		10825167	0					
ANR	10825369	AdditiveExpression	segCount2 - 3		10825167	1		-			
ANR	10825370	Identifier	segCount2		10825167	0					
ANR	10825371	PrimaryExpression	3		10825167	1					
ANR	10825372	AssignmentExpression	i2 += 2	525:49:13980:13986	10825167	2	True	+=			
ANR	10825373	Identifier	i2		10825167	0					
ANR	10825374	PrimaryExpression	2		10825167	1					
ANR	10825375	CompoundStatement		46:20:1506:1518	10825167	3					
ANR	10825376	IdentifierDeclStatement	"int delta = s16 ( idDelta + i2 ) , roff = u16 ( idRangeOffset + i2 ) ;"	527:20:14027:14088	10825167	0	True				
ANR	10825377	IdentifierDecl	delta = s16 ( idDelta + i2 )		10825167	0					
ANR	10825378	IdentifierDeclType	int		10825167	0					
ANR	10825379	Identifier	delta		10825167	1					
ANR	10825380	AssignmentExpression	delta = s16 ( idDelta + i2 )		10825167	2		=			
ANR	10825381	Identifier	delta		10825167	0					
ANR	10825382	CallExpression	s16 ( idDelta + i2 )		10825167	1					
ANR	10825383	Callee	s16		10825167	0					
ANR	10825384	Identifier	s16		10825167	0					
ANR	10825385	ArgumentList	idDelta + i2		10825167	1					
ANR	10825386	Argument	idDelta + i2		10825167	0					
ANR	10825387	AdditiveExpression	idDelta + i2		10825167	0		+			
ANR	10825388	Identifier	idDelta		10825167	0					
ANR	10825389	Identifier	i2		10825167	1					
ANR	10825390	IdentifierDecl	roff = u16 ( idRangeOffset + i2 )		10825167	1					
ANR	10825391	IdentifierDeclType	int		10825167	0					
ANR	10825392	Identifier	roff		10825167	1					
ANR	10825393	AssignmentExpression	roff = u16 ( idRangeOffset + i2 )		10825167	2		=			
ANR	10825394	Identifier	roff		10825167	0					
ANR	10825395	CallExpression	u16 ( idRangeOffset + i2 )		10825167	1					
ANR	10825396	Callee	u16		10825167	0					
ANR	10825397	Identifier	u16		10825167	0					
ANR	10825398	ArgumentList	idRangeOffset + i2		10825167	1					
ANR	10825399	Argument	idRangeOffset + i2		10825167	0					
ANR	10825400	AdditiveExpression	idRangeOffset + i2		10825167	0		+			
ANR	10825401	Identifier	idRangeOffset		10825167	0					
ANR	10825402	Identifier	i2		10825167	1					
ANR	10825403	IdentifierDeclStatement	int start = u16 ( startCount + i2 ) ;	528:20:14110:14142	10825167	1	True				
ANR	10825404	IdentifierDecl	start = u16 ( startCount + i2 )		10825167	0					
ANR	10825405	IdentifierDeclType	int		10825167	0					
ANR	10825406	Identifier	start		10825167	1					
ANR	10825407	AssignmentExpression	start = u16 ( startCount + i2 )		10825167	2		=			
ANR	10825408	Identifier	start		10825167	0					
ANR	10825409	CallExpression	u16 ( startCount + i2 )		10825167	1					
ANR	10825410	Callee	u16		10825167	0					
ANR	10825411	Identifier	u16		10825167	0					
ANR	10825412	ArgumentList	startCount + i2		10825167	1					
ANR	10825413	Argument	startCount + i2		10825167	0					
ANR	10825414	AdditiveExpression	startCount + i2		10825167	0		+			
ANR	10825415	Identifier	startCount		10825167	0					
ANR	10825416	Identifier	i2		10825167	1					
ANR	10825417	IdentifierDeclStatement	int end = u16 ( endCount + i2 ) ;	529:20:14164:14192	10825167	2	True				
ANR	10825418	IdentifierDecl	end = u16 ( endCount + i2 )		10825167	0					
ANR	10825419	IdentifierDeclType	int		10825167	0					
ANR	10825420	Identifier	end		10825167	1					
ANR	10825421	AssignmentExpression	end = u16 ( endCount + i2 )		10825167	2		=			
ANR	10825422	Identifier	end		10825167	0					
ANR	10825423	CallExpression	u16 ( endCount + i2 )		10825167	1					
ANR	10825424	Callee	u16		10825167	0					
ANR	10825425	Identifier	u16		10825167	0					
ANR	10825426	ArgumentList	endCount + i2		10825167	1					
ANR	10825427	Argument	endCount + i2		10825167	0					
ANR	10825428	AdditiveExpression	endCount + i2		10825167	0		+			
ANR	10825429	Identifier	endCount		10825167	0					
ANR	10825430	Identifier	i2		10825167	1					
ANR	10825431	IdentifierDeclStatement	"int glyph , i ;"	530:20:14214:14226	10825167	3	True				
ANR	10825432	IdentifierDecl	glyph		10825167	0					
ANR	10825433	IdentifierDeclType	int		10825167	0					
ANR	10825434	Identifier	glyph		10825167	1					
ANR	10825435	IdentifierDecl	i		10825167	1					
ANR	10825436	IdentifierDeclType	int		10825167	0					
ANR	10825437	Identifier	i		10825167	1					
ANR	10825438	IfStatement	if ( end < start )		10825167	4					
ANR	10825439	Condition	end < start	532:24:14253:14263	10825167	0	True				
ANR	10825440	RelationalExpression	end < start		10825167	0		<			
ANR	10825441	Identifier	end		10825167	0					
ANR	10825442	Identifier	start		10825167	1					
ANR	10825443	ReturnStatement	return gs_error_invalidfont ;	533:24:14290:14317	10825167	1	True				
ANR	10825444	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825445	ForStatement	for ( i = start ; i <= end ; i ++ )		10825167	5					
ANR	10825446	ForInit	i = start ;	535:25:14345:14352	10825167	0	True				
ANR	10825447	AssignmentExpression	i = start		10825167	0		=			
ANR	10825448	Identifier	i		10825167	0					
ANR	10825449	Identifier	start		10825167	1					
ANR	10825450	Condition	i <= end	535:33:14353:14358	10825167	1	True				
ANR	10825451	RelationalExpression	i <= end		10825167	0		<=			
ANR	10825452	Identifier	i		10825167	0					
ANR	10825453	Identifier	end		10825167	1					
ANR	10825454	PostIncDecOperationExpression	i ++	535:40:14360:14362	10825167	2	True				
ANR	10825455	Identifier	i		10825167	0					
ANR	10825456	IncDec	++		10825167	1					
ANR	10825457	CompoundStatement		51:45:1657:1657	10825167	3					
ANR	10825458	IfStatement	if ( roff == 0 )		10825167	0					
ANR	10825459	Condition	roff == 0	536:28:14395:14403	10825167	0	True				
ANR	10825460	EqualityExpression	roff == 0		10825167	0		==			
ANR	10825461	Identifier	roff		10825167	0					
ANR	10825462	PrimaryExpression	0		10825167	1					
ANR	10825463	CompoundStatement		52:39:1698:1698	10825167	1					
ANR	10825464	ExpressionStatement	glyph = ( i + delta ) & 0xffff	537:28:14436:14464	10825167	0	True				
ANR	10825465	AssignmentExpression	glyph = ( i + delta ) & 0xffff		10825167	0		=			
ANR	10825466	Identifier	glyph		10825167	0					
ANR	10825467	BitAndExpression	( i + delta ) & 0xffff		10825167	1		&			
ANR	10825468	AdditiveExpression	i + delta		10825167	0		+			
ANR	10825469	Identifier	i		10825167	0					
ANR	10825470	Identifier	delta		10825167	1					
ANR	10825471	PrimaryExpression	0xffff		10825167	1					
ANR	10825472	ElseStatement	else		10825167	0					
ANR	10825473	CompoundStatement		54:31:1789:1789	10825167	0					
ANR	10825474	IfStatement	if ( ( giddata = ( idRangeOffset + i2 + roff + ( ( i - start ) << 1 ) ) ) > font -> data + font -> length )		10825167	0					
ANR	10825475	Condition	( giddata = ( idRangeOffset + i2 + roff + ( ( i - start ) << 1 ) ) ) > font -> data + font -> length	539:32:14531:14651	10825167	0	True				
ANR	10825476	RelationalExpression	( giddata = ( idRangeOffset + i2 + roff + ( ( i - start ) << 1 ) ) ) > font -> data + font -> length		10825167	0		>			
ANR	10825477	AssignmentExpression	giddata = ( idRangeOffset + i2 + roff + ( ( i - start ) << 1 ) )		10825167	0		=			
ANR	10825478	Identifier	giddata		10825167	0					
ANR	10825479	AdditiveExpression	idRangeOffset + i2 + roff + ( ( i - start ) << 1 )		10825167	1		+			
ANR	10825480	Identifier	idRangeOffset		10825167	0					
ANR	10825481	AdditiveExpression	i2 + roff + ( ( i - start ) << 1 )		10825167	1		+			
ANR	10825482	Identifier	i2		10825167	0					
ANR	10825483	AdditiveExpression	roff + ( ( i - start ) << 1 )		10825167	1		+			
ANR	10825484	Identifier	roff		10825167	0					
ANR	10825485	ShiftExpression	( i - start ) << 1		10825167	1		<<			
ANR	10825486	AdditiveExpression	i - start		10825167	0		-			
ANR	10825487	Identifier	i		10825167	0					
ANR	10825488	Identifier	start		10825167	1					
ANR	10825489	PrimaryExpression	1		10825167	1					
ANR	10825490	AdditiveExpression	font -> data + font -> length		10825167	1		+			
ANR	10825491	PtrMemberAccess	font -> data		10825167	0					
ANR	10825492	Identifier	font		10825167	0					
ANR	10825493	Identifier	data		10825167	1					
ANR	10825494	PtrMemberAccess	font -> length		10825167	1					
ANR	10825495	Identifier	font		10825167	0					
ANR	10825496	Identifier	length		10825167	1					
ANR	10825497	CompoundStatement		56:60:1946:1946	10825167	1					
ANR	10825498	ExpressionStatement	return_error ( gs_error_invalidfont )	541:32:14688:14722	10825167	0	True				
ANR	10825499	CallExpression	return_error ( gs_error_invalidfont )		10825167	0					
ANR	10825500	Callee	return_error		10825167	0					
ANR	10825501	Identifier	return_error		10825167	0					
ANR	10825502	ArgumentList	gs_error_invalidfont		10825167	1					
ANR	10825503	Argument	gs_error_invalidfont		10825167	0					
ANR	10825504	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825505	ExpressionStatement	glyph = u16 ( giddata )	543:28:14782:14802	10825167	1	True				
ANR	10825506	AssignmentExpression	glyph = u16 ( giddata )		10825167	0		=			
ANR	10825507	Identifier	glyph		10825167	0					
ANR	10825508	CallExpression	u16 ( giddata )		10825167	1					
ANR	10825509	Callee	u16		10825167	0					
ANR	10825510	Identifier	u16		10825167	0					
ANR	10825511	ArgumentList	giddata		10825167	1					
ANR	10825512	Argument	giddata		10825167	0					
ANR	10825513	Identifier	giddata		10825167	0					
ANR	10825514	IfStatement	if ( glyph == code )		10825167	1					
ANR	10825515	Condition	glyph == code	545:28:14858:14870	10825167	0	True				
ANR	10825516	EqualityExpression	glyph == code		10825167	0		==			
ANR	10825517	Identifier	glyph		10825167	0					
ANR	10825518	Identifier	code		10825167	1					
ANR	10825519	CompoundStatement		61:43:2165:2165	10825167	1					
ANR	10825520	ReturnStatement	return i ;	546:28:14903:14911	10825167	0	True				
ANR	10825521	Identifier	i		10825167	0					
ANR	10825522	ReturnStatement	return 0 ;	551:12:15005:15013	10825167	5	True				
ANR	10825523	PrimaryExpression	0		10825167	0					
ANR	10825524	Label	case 6 :	552:8:15023:15029	10825167	6	True				
ANR	10825525	CompoundStatement		71:16:2435:2465	10825167	7					
ANR	10825526	IdentifierDeclStatement	"int ch , i , length = u16 ( & table [ 8 ] ) ;"	554:16:15091:15125	10825167	0	True				
ANR	10825527	IdentifierDecl	ch		10825167	0					
ANR	10825528	IdentifierDeclType	int		10825167	0					
ANR	10825529	Identifier	ch		10825167	1					
ANR	10825530	IdentifierDecl	i		10825167	1					
ANR	10825531	IdentifierDeclType	int		10825167	0					
ANR	10825532	Identifier	i		10825167	1					
ANR	10825533	IdentifierDecl	length = u16 ( & table [ 8 ] )		10825167	2					
ANR	10825534	IdentifierDeclType	int		10825167	0					
ANR	10825535	Identifier	length		10825167	1					
ANR	10825536	AssignmentExpression	length = u16 ( & table [ 8 ] )		10825167	2		=			
ANR	10825537	Identifier	length		10825167	0					
ANR	10825538	CallExpression	u16 ( & table [ 8 ] )		10825167	1					
ANR	10825539	Callee	u16		10825167	0					
ANR	10825540	Identifier	u16		10825167	0					
ANR	10825541	ArgumentList	& table [ 8 ]		10825167	1					
ANR	10825542	Argument	& table [ 8 ]		10825167	0					
ANR	10825543	UnaryOperationExpression	& table [ 8 ]		10825167	0					
ANR	10825544	UnaryOperator	&		10825167	0					
ANR	10825545	ArrayIndexing	table [ 8 ]		10825167	1					
ANR	10825546	Identifier	table		10825167	0					
ANR	10825547	PrimaryExpression	8		10825167	1					
ANR	10825548	IdentifierDeclStatement	int firstCode = u16 ( & table [ 6 ] ) ;	555:16:15143:15173	10825167	1	True				
ANR	10825549	IdentifierDecl	firstCode = u16 ( & table [ 6 ] )		10825167	0					
ANR	10825550	IdentifierDeclType	int		10825167	0					
ANR	10825551	Identifier	firstCode		10825167	1					
ANR	10825552	AssignmentExpression	firstCode = u16 ( & table [ 6 ] )		10825167	2		=			
ANR	10825553	Identifier	firstCode		10825167	0					
ANR	10825554	CallExpression	u16 ( & table [ 6 ] )		10825167	1					
ANR	10825555	Callee	u16		10825167	0					
ANR	10825556	Identifier	u16		10825167	0					
ANR	10825557	ArgumentList	& table [ 6 ]		10825167	1					
ANR	10825558	Argument	& table [ 6 ]		10825167	0					
ANR	10825559	UnaryOperationExpression	& table [ 6 ]		10825167	0					
ANR	10825560	UnaryOperator	&		10825167	0					
ANR	10825561	ArrayIndexing	table [ 6 ]		10825167	1					
ANR	10825562	Identifier	table		10825167	0					
ANR	10825563	PrimaryExpression	6		10825167	1					
ANR	10825564	IfStatement	if ( length < 0 || length > 65535 )		10825167	2					
ANR	10825565	Condition	length < 0 || length > 65535	557:20:15196:15223	10825167	0	True				
ANR	10825566	OrExpression	length < 0 || length > 65535		10825167	0		||			
ANR	10825567	RelationalExpression	length < 0		10825167	0		<			
ANR	10825568	Identifier	length		10825167	0					
ANR	10825569	PrimaryExpression	0		10825167	1					
ANR	10825570	RelationalExpression	length > 65535		10825167	1		>			
ANR	10825571	Identifier	length		10825167	0					
ANR	10825572	PrimaryExpression	65535		10825167	1					
ANR	10825573	ReturnStatement	return gs_error_invalidfont ;	558:20:15246:15273	10825167	1	True				
ANR	10825574	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825575	ForStatement	for ( i = 0 ; i < length ; i ++ )		10825167	3					
ANR	10825576	ForInit	i = 0 ;	560:21:15297:15300	10825167	0	True				
ANR	10825577	AssignmentExpression	i = 0		10825167	0		=			
ANR	10825578	Identifier	i		10825167	0					
ANR	10825579	PrimaryExpression	0		10825167	1					
ANR	10825580	Condition	i < length	560:25:15301:15308	10825167	1	True				
ANR	10825581	RelationalExpression	i < length		10825167	0		<			
ANR	10825582	Identifier	i		10825167	0					
ANR	10825583	Identifier	length		10825167	1					
ANR	10825584	PostIncDecOperationExpression	i ++	560:34:15310:15312	10825167	2	True				
ANR	10825585	Identifier	i		10825167	0					
ANR	10825586	IncDec	++		10825167	1					
ANR	10825587	CompoundStatement		76:39:2607:2607	10825167	3					
ANR	10825588	ExpressionStatement	t = & table [ 10 + ( i * 2 ) ]	561:20:15337:15361	10825167	0	True				
ANR	10825589	AssignmentExpression	t = & table [ 10 + ( i * 2 ) ]		10825167	0		=			
ANR	10825590	Identifier	t		10825167	0					
ANR	10825591	UnaryOperationExpression	& table [ 10 + ( i * 2 ) ]		10825167	1					
ANR	10825592	UnaryOperator	&		10825167	0					
ANR	10825593	ArrayIndexing	table [ 10 + ( i * 2 ) ]		10825167	1					
ANR	10825594	Identifier	table		10825167	0					
ANR	10825595	AdditiveExpression	10 + ( i * 2 )		10825167	1		+			
ANR	10825596	PrimaryExpression	10		10825167	0					
ANR	10825597	MultiplicativeExpression	i * 2		10825167	1		*			
ANR	10825598	Identifier	i		10825167	0					
ANR	10825599	PrimaryExpression	2		10825167	1					
ANR	10825600	IfStatement	if ( t + 2 > font -> data + font -> length )		10825167	1					
ANR	10825601	Condition	t + 2 > font -> data + font -> length	562:24:15387:15419	10825167	0	True				
ANR	10825602	RelationalExpression	t + 2 > font -> data + font -> length		10825167	0		>			
ANR	10825603	AdditiveExpression	t + 2		10825167	0		+			
ANR	10825604	Identifier	t		10825167	0					
ANR	10825605	PrimaryExpression	2		10825167	1					
ANR	10825606	AdditiveExpression	font -> data + font -> length		10825167	1		+			
ANR	10825607	PtrMemberAccess	font -> data		10825167	0					
ANR	10825608	Identifier	font		10825167	0					
ANR	10825609	Identifier	data		10825167	1					
ANR	10825610	PtrMemberAccess	font -> length		10825167	1					
ANR	10825611	Identifier	font		10825167	0					
ANR	10825612	Identifier	length		10825167	1					
ANR	10825613	ReturnStatement	return gs_error_invalidfont ;	563:24:15446:15473	10825167	1	True				
ANR	10825614	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825615	ExpressionStatement	ch = u16 ( t )	564:20:15495:15506	10825167	2	True				
ANR	10825616	AssignmentExpression	ch = u16 ( t )		10825167	0		=			
ANR	10825617	Identifier	ch		10825167	0					
ANR	10825618	CallExpression	u16 ( t )		10825167	1					
ANR	10825619	Callee	u16		10825167	0					
ANR	10825620	Identifier	u16		10825167	0					
ANR	10825621	ArgumentList	t		10825167	1					
ANR	10825622	Argument	t		10825167	0					
ANR	10825623	Identifier	t		10825167	0					
ANR	10825624	IfStatement	if ( ch == code )		10825167	3					
ANR	10825625	Condition	ch == code	565:24:15532:15541	10825167	0	True				
ANR	10825626	EqualityExpression	ch == code		10825167	0		==			
ANR	10825627	Identifier	ch		10825167	0					
ANR	10825628	Identifier	code		10825167	1					
ANR	10825629	ReturnStatement	return ( firstCode + i ) ;	566:24:15568:15590	10825167	1	True				
ANR	10825630	AdditiveExpression	firstCode + i		10825167	0		+			
ANR	10825631	Identifier	firstCode		10825167	0					
ANR	10825632	Identifier	i		10825167	1					
ANR	10825633	ReturnStatement	return 0 ;	569:12:15636:15644	10825167	8	True				
ANR	10825634	PrimaryExpression	0		10825167	0					
ANR	10825635	Label	case 10 :	570:8:15654:15661	10825167	9	True				
ANR	10825636	CompoundStatement		89:16:3076:3107	10825167	10					
ANR	10825637	IdentifierDeclStatement	"unsigned int ch , i , length = u32 ( & table [ 20 ] ) ;"	572:16:15722:15766	10825167	0	True				
ANR	10825638	IdentifierDecl	ch		10825167	0					
ANR	10825639	IdentifierDeclType	unsigned int		10825167	0					
ANR	10825640	Identifier	ch		10825167	1					
ANR	10825641	IdentifierDecl	i		10825167	1					
ANR	10825642	IdentifierDeclType	unsigned int		10825167	0					
ANR	10825643	Identifier	i		10825167	1					
ANR	10825644	IdentifierDecl	length = u32 ( & table [ 20 ] )		10825167	2					
ANR	10825645	IdentifierDeclType	unsigned int		10825167	0					
ANR	10825646	Identifier	length		10825167	1					
ANR	10825647	AssignmentExpression	length = u32 ( & table [ 20 ] )		10825167	2		=			
ANR	10825648	Identifier	length		10825167	0					
ANR	10825649	CallExpression	u32 ( & table [ 20 ] )		10825167	1					
ANR	10825650	Callee	u32		10825167	0					
ANR	10825651	Identifier	u32		10825167	0					
ANR	10825652	ArgumentList	& table [ 20 ]		10825167	1					
ANR	10825653	Argument	& table [ 20 ]		10825167	0					
ANR	10825654	UnaryOperationExpression	& table [ 20 ]		10825167	0					
ANR	10825655	UnaryOperator	&		10825167	0					
ANR	10825656	ArrayIndexing	table [ 20 ]		10825167	1					
ANR	10825657	Identifier	table		10825167	0					
ANR	10825658	PrimaryExpression	20		10825167	1					
ANR	10825659	IdentifierDeclStatement	int firstCode = u32 ( & table [ 16 ] ) ;	573:16:15784:15815	10825167	1	True				
ANR	10825660	IdentifierDecl	firstCode = u32 ( & table [ 16 ] )		10825167	0					
ANR	10825661	IdentifierDeclType	int		10825167	0					
ANR	10825662	Identifier	firstCode		10825167	1					
ANR	10825663	AssignmentExpression	firstCode = u32 ( & table [ 16 ] )		10825167	2		=			
ANR	10825664	Identifier	firstCode		10825167	0					
ANR	10825665	CallExpression	u32 ( & table [ 16 ] )		10825167	1					
ANR	10825666	Callee	u32		10825167	0					
ANR	10825667	Identifier	u32		10825167	0					
ANR	10825668	ArgumentList	& table [ 16 ]		10825167	1					
ANR	10825669	Argument	& table [ 16 ]		10825167	0					
ANR	10825670	UnaryOperationExpression	& table [ 16 ]		10825167	0					
ANR	10825671	UnaryOperator	&		10825167	0					
ANR	10825672	ArrayIndexing	table [ 16 ]		10825167	1					
ANR	10825673	Identifier	table		10825167	0					
ANR	10825674	PrimaryExpression	16		10825167	1					
ANR	10825675	ForStatement	for ( i = 0 ; i < length ; i ++ )		10825167	2					
ANR	10825676	ForInit	i = 0 ;	574:21:15838:15841	10825167	0	True				
ANR	10825677	AssignmentExpression	i = 0		10825167	0		=			
ANR	10825678	Identifier	i		10825167	0					
ANR	10825679	PrimaryExpression	0		10825167	1					
ANR	10825680	Condition	i < length	574:25:15842:15849	10825167	1	True				
ANR	10825681	RelationalExpression	i < length		10825167	0		<			
ANR	10825682	Identifier	i		10825167	0					
ANR	10825683	Identifier	length		10825167	1					
ANR	10825684	PostIncDecOperationExpression	i ++	574:34:15851:15853	10825167	2	True				
ANR	10825685	Identifier	i		10825167	0					
ANR	10825686	IncDec	++		10825167	1					
ANR	10825687	CompoundStatement		90:39:3148:3148	10825167	3					
ANR	10825688	ExpressionStatement	t = & table [ 10 + ( i * 2 ) ]	575:20:15878:15902	10825167	0	True				
ANR	10825689	AssignmentExpression	t = & table [ 10 + ( i * 2 ) ]		10825167	0		=			
ANR	10825690	Identifier	t		10825167	0					
ANR	10825691	UnaryOperationExpression	& table [ 10 + ( i * 2 ) ]		10825167	1					
ANR	10825692	UnaryOperator	&		10825167	0					
ANR	10825693	ArrayIndexing	table [ 10 + ( i * 2 ) ]		10825167	1					
ANR	10825694	Identifier	table		10825167	0					
ANR	10825695	AdditiveExpression	10 + ( i * 2 )		10825167	1		+			
ANR	10825696	PrimaryExpression	10		10825167	0					
ANR	10825697	MultiplicativeExpression	i * 2		10825167	1		*			
ANR	10825698	Identifier	i		10825167	0					
ANR	10825699	PrimaryExpression	2		10825167	1					
ANR	10825700	IfStatement	if ( t + 2 > font -> data + font -> length )		10825167	1					
ANR	10825701	Condition	t + 2 > font -> data + font -> length	576:24:15928:15960	10825167	0	True				
ANR	10825702	RelationalExpression	t + 2 > font -> data + font -> length		10825167	0		>			
ANR	10825703	AdditiveExpression	t + 2		10825167	0		+			
ANR	10825704	Identifier	t		10825167	0					
ANR	10825705	PrimaryExpression	2		10825167	1					
ANR	10825706	AdditiveExpression	font -> data + font -> length		10825167	1		+			
ANR	10825707	PtrMemberAccess	font -> data		10825167	0					
ANR	10825708	Identifier	font		10825167	0					
ANR	10825709	Identifier	data		10825167	1					
ANR	10825710	PtrMemberAccess	font -> length		10825167	1					
ANR	10825711	Identifier	font		10825167	0					
ANR	10825712	Identifier	length		10825167	1					
ANR	10825713	ReturnStatement	return gs_error_invalidfont ;	577:24:15987:16014	10825167	1	True				
ANR	10825714	Identifier	gs_error_invalidfont		10825167	0					
ANR	10825715	ExpressionStatement	ch = u16 ( t )	578:20:16036:16047	10825167	2	True				
ANR	10825716	AssignmentExpression	ch = u16 ( t )		10825167	0		=			
ANR	10825717	Identifier	ch		10825167	0					
ANR	10825718	CallExpression	u16 ( t )		10825167	1					
ANR	10825719	Callee	u16		10825167	0					
ANR	10825720	Identifier	u16		10825167	0					
ANR	10825721	ArgumentList	t		10825167	1					
ANR	10825722	Argument	t		10825167	0					
ANR	10825723	Identifier	t		10825167	0					
ANR	10825724	IfStatement	if ( ch == code )		10825167	3					
ANR	10825725	Condition	ch == code	579:24:16073:16082	10825167	0	True				
ANR	10825726	EqualityExpression	ch == code		10825167	0		==			
ANR	10825727	Identifier	ch		10825167	0					
ANR	10825728	Identifier	code		10825167	1					
ANR	10825729	ReturnStatement	return ( firstCode + i ) ;	580:24:16109:16131	10825167	1	True				
ANR	10825730	AdditiveExpression	firstCode + i		10825167	0		+			
ANR	10825731	Identifier	firstCode		10825167	0					
ANR	10825732	Identifier	i		10825167	1					
ANR	10825733	ReturnStatement	return 0 ;	583:12:16177:16185	10825167	11	True				
ANR	10825734	PrimaryExpression	0		10825167	0					
ANR	10825735	Label	case 12 :	584:8:16195:16202	10825167	12	True				
ANR	10825736	CompoundStatement		103:16:3617:3626	10825167	13					
ANR	10825737	IdentifierDeclStatement	unsigned int nGroups = u32 ( & table [ 12 ] ) ;	586:16:16269:16307	10825167	0	True				
ANR	10825738	IdentifierDecl	nGroups = u32 ( & table [ 12 ] )		10825167	0					
ANR	10825739	IdentifierDeclType	unsigned int		10825167	0					
ANR	10825740	Identifier	nGroups		10825167	1					
ANR	10825741	AssignmentExpression	nGroups = u32 ( & table [ 12 ] )		10825167	2		=			
ANR	10825742	Identifier	nGroups		10825167	0					
ANR	10825743	CallExpression	u32 ( & table [ 12 ] )		10825167	1					
ANR	10825744	Callee	u32		10825167	0					
ANR	10825745	Identifier	u32		10825167	0					
ANR	10825746	ArgumentList	& table [ 12 ]		10825167	1					
ANR	10825747	Argument	& table [ 12 ]		10825167	0					
ANR	10825748	UnaryOperationExpression	& table [ 12 ]		10825167	0					
ANR	10825749	UnaryOperator	&		10825167	0					
ANR	10825750	ArrayIndexing	table [ 12 ]		10825167	1					
ANR	10825751	Identifier	table		10825167	0					
ANR	10825752	PrimaryExpression	12		10825167	1					
ANR	10825753	IdentifierDeclStatement	int Group ;	587:16:16325:16334	10825167	1	True				
ANR	10825754	IdentifierDecl	Group		10825167	0					
ANR	10825755	IdentifierDeclType	int		10825167	0					
ANR	10825756	Identifier	Group		10825167	1					
ANR	10825757	ForStatement	for ( Group = 0 ; Group < nGroups ; Group ++ )		10825167	2					
ANR	10825758	ForInit	Group = 0 ;	589:21:16358:16365	10825167	0	True				
ANR	10825759	AssignmentExpression	Group = 0		10825167	0		=			
ANR	10825760	Identifier	Group		10825167	0					
ANR	10825761	PrimaryExpression	0		10825167	1					
ANR	10825762	Condition	Group < nGroups	589:29:16366:16378	10825167	1	True				
ANR	10825763	RelationalExpression	Group < nGroups		10825167	0		<			
ANR	10825764	Identifier	Group		10825167	0					
ANR	10825765	Identifier	nGroups		10825167	1					
ANR	10825766	PostIncDecOperationExpression	Group ++	589:43:16380:16386	10825167	2	True				
ANR	10825767	Identifier	Group		10825167	0					
ANR	10825768	IncDec	++		10825167	1					
ANR	10825769	CompoundStatement		109:20:3865:3920	10825167	3					
ANR	10825770	IdentifierDeclStatement	int startCharCode = u32 ( & table [ 16 + ( Group * 12 ) ] ) ;	591:20:16427:16477	10825167	0	True				
ANR	10825771	IdentifierDecl	startCharCode = u32 ( & table [ 16 + ( Group * 12 ) ] )		10825167	0					
ANR	10825772	IdentifierDeclType	int		10825167	0					
ANR	10825773	Identifier	startCharCode		10825167	1					
ANR	10825774	AssignmentExpression	startCharCode = u32 ( & table [ 16 + ( Group * 12 ) ] )		10825167	2		=			
ANR	10825775	Identifier	startCharCode		10825167	0					
ANR	10825776	CallExpression	u32 ( & table [ 16 + ( Group * 12 ) ] )		10825167	1					
ANR	10825777	Callee	u32		10825167	0					
ANR	10825778	Identifier	u32		10825167	0					
ANR	10825779	ArgumentList	& table [ 16 + ( Group * 12 ) ]		10825167	1					
ANR	10825780	Argument	& table [ 16 + ( Group * 12 ) ]		10825167	0					
ANR	10825781	UnaryOperationExpression	& table [ 16 + ( Group * 12 ) ]		10825167	0					
ANR	10825782	UnaryOperator	&		10825167	0					
ANR	10825783	ArrayIndexing	table [ 16 + ( Group * 12 ) ]		10825167	1					
ANR	10825784	Identifier	table		10825167	0					
ANR	10825785	AdditiveExpression	16 + ( Group * 12 )		10825167	1		+			
ANR	10825786	PrimaryExpression	16		10825167	0					
ANR	10825787	MultiplicativeExpression	Group * 12		10825167	1		*			
ANR	10825788	Identifier	Group		10825167	0					
ANR	10825789	PrimaryExpression	12		10825167	1					
ANR	10825790	IdentifierDeclStatement	int endCharCode = u32 ( & table [ 16 + ( Group * 12 ) + 4 ] ) ;	592:20:16499:16551	10825167	1	True				
ANR	10825791	IdentifierDecl	endCharCode = u32 ( & table [ 16 + ( Group * 12 ) + 4 ] )		10825167	0					
ANR	10825792	IdentifierDeclType	int		10825167	0					
ANR	10825793	Identifier	endCharCode		10825167	1					
ANR	10825794	AssignmentExpression	endCharCode = u32 ( & table [ 16 + ( Group * 12 ) + 4 ] )		10825167	2		=			
ANR	10825795	Identifier	endCharCode		10825167	0					
ANR	10825796	CallExpression	u32 ( & table [ 16 + ( Group * 12 ) + 4 ] )		10825167	1					
ANR	10825797	Callee	u32		10825167	0					
ANR	10825798	Identifier	u32		10825167	0					
ANR	10825799	ArgumentList	& table [ 16 + ( Group * 12 ) + 4 ]		10825167	1					
ANR	10825800	Argument	& table [ 16 + ( Group * 12 ) + 4 ]		10825167	0					
ANR	10825801	UnaryOperationExpression	& table [ 16 + ( Group * 12 ) + 4 ]		10825167	0					
ANR	10825802	UnaryOperator	&		10825167	0					
ANR	10825803	ArrayIndexing	table [ 16 + ( Group * 12 ) + 4 ]		10825167	1					
ANR	10825804	Identifier	table		10825167	0					
ANR	10825805	AdditiveExpression	16 + ( Group * 12 ) + 4		10825167	1		+			
ANR	10825806	PrimaryExpression	16		10825167	0					
ANR	10825807	AdditiveExpression	( Group * 12 ) + 4		10825167	1		+			
ANR	10825808	MultiplicativeExpression	Group * 12		10825167	0		*			
ANR	10825809	Identifier	Group		10825167	0					
ANR	10825810	PrimaryExpression	12		10825167	1					
ANR	10825811	PrimaryExpression	4		10825167	1					
ANR	10825812	IdentifierDeclStatement	int startGlyphCode = u32 ( & table [ 16 + ( Group * 12 ) + 8 ] ) ;	593:20:16573:16628	10825167	2	True				
ANR	10825813	IdentifierDecl	startGlyphCode = u32 ( & table [ 16 + ( Group * 12 ) + 8 ] )		10825167	0					
ANR	10825814	IdentifierDeclType	int		10825167	0					
ANR	10825815	Identifier	startGlyphCode		10825167	1					
ANR	10825816	AssignmentExpression	startGlyphCode = u32 ( & table [ 16 + ( Group * 12 ) + 8 ] )		10825167	2		=			
ANR	10825817	Identifier	startGlyphCode		10825167	0					
ANR	10825818	CallExpression	u32 ( & table [ 16 + ( Group * 12 ) + 8 ] )		10825167	1					
ANR	10825819	Callee	u32		10825167	0					
ANR	10825820	Identifier	u32		10825167	0					
ANR	10825821	ArgumentList	& table [ 16 + ( Group * 12 ) + 8 ]		10825167	1					
ANR	10825822	Argument	& table [ 16 + ( Group * 12 ) + 8 ]		10825167	0					
ANR	10825823	UnaryOperationExpression	& table [ 16 + ( Group * 12 ) + 8 ]		10825167	0					
ANR	10825824	UnaryOperator	&		10825167	0					
ANR	10825825	ArrayIndexing	table [ 16 + ( Group * 12 ) + 8 ]		10825167	1					
ANR	10825826	Identifier	table		10825167	0					
ANR	10825827	AdditiveExpression	16 + ( Group * 12 ) + 8		10825167	1		+			
ANR	10825828	PrimaryExpression	16		10825167	0					
ANR	10825829	AdditiveExpression	( Group * 12 ) + 8		10825167	1		+			
ANR	10825830	MultiplicativeExpression	Group * 12		10825167	0		*			
ANR	10825831	Identifier	Group		10825167	0					
ANR	10825832	PrimaryExpression	12		10825167	1					
ANR	10825833	PrimaryExpression	8		10825167	1					
ANR	10825834	IfStatement	if ( code >= startGlyphCode && code <= ( startGlyphCode + ( endCharCode - startCharCode ) ) )		10825167	3					
ANR	10825835	Condition	code >= startGlyphCode && code <= ( startGlyphCode + ( endCharCode - startCharCode ) )	595:24:16655:16736	10825167	0	True				
ANR	10825836	AndExpression	code >= startGlyphCode && code <= ( startGlyphCode + ( endCharCode - startCharCode ) )		10825167	0		&&			
ANR	10825837	RelationalExpression	code >= startGlyphCode		10825167	0		>=			
ANR	10825838	Identifier	code		10825167	0					
ANR	10825839	Identifier	startGlyphCode		10825167	1					
ANR	10825840	RelationalExpression	code <= ( startGlyphCode + ( endCharCode - startCharCode ) )		10825167	1		<=			
ANR	10825841	Identifier	code		10825167	0					
ANR	10825842	AdditiveExpression	startGlyphCode + ( endCharCode - startCharCode )		10825167	1		+			
ANR	10825843	Identifier	startGlyphCode		10825167	0					
ANR	10825844	AdditiveExpression	endCharCode - startCharCode		10825167	1		-			
ANR	10825845	Identifier	endCharCode		10825167	0					
ANR	10825846	Identifier	startCharCode		10825167	1					
ANR	10825847	CompoundStatement		111:108:4031:4031	10825167	1					
ANR	10825848	ReturnStatement	return startGlyphCode + ( code - startCharCode ) ;	596:24:16765:16811	10825167	0	True				
ANR	10825849	AdditiveExpression	startGlyphCode + ( code - startCharCode )		10825167	0		+			
ANR	10825850	Identifier	startGlyphCode		10825167	0					
ANR	10825851	AdditiveExpression	code - startCharCode		10825167	1		-			
ANR	10825852	Identifier	code		10825167	0					
ANR	10825853	Identifier	startCharCode		10825167	1					
ANR	10825854	ReturnStatement	return 0 ;	600:12:16879:16887	10825167	14	True				
ANR	10825855	PrimaryExpression	0		10825167	0					
ANR	10825856	Label	case 2 :	601:8:16897:16903	10825167	15	True				
ANR	10825857	Label	case 8 :	602:8:16952:16958	10825167	16	True				
ANR	10825858	Label	default :	603:8:17016:17023	10825167	17	True				
ANR	10825859	Identifier	default		10825167	0					
ANR	10825860	ExpressionStatement	"gs_warn1 ( ""unknown cmap format: %d\\n"" , u16 ( table ) )"	604:12:17037:17086	10825167	18	True				
ANR	10825861	CallExpression	"gs_warn1 ( ""unknown cmap format: %d\\n"" , u16 ( table ) )"		10825167	0					
ANR	10825862	Callee	gs_warn1		10825167	0					
ANR	10825863	Identifier	gs_warn1		10825167	0					
ANR	10825864	ArgumentList	"""unknown cmap format: %d\\n"""		10825167	1					
ANR	10825865	Argument	"""unknown cmap format: %d\\n"""		10825167	0					
ANR	10825866	PrimaryExpression	"""unknown cmap format: %d\\n"""		10825167	0					
ANR	10825867	Argument	u16 ( table )		10825167	1					
ANR	10825868	CallExpression	u16 ( table )		10825167	0					
ANR	10825869	Callee	u16		10825167	0					
ANR	10825870	Identifier	u16		10825167	0					
ANR	10825871	ArgumentList	table		10825167	1					
ANR	10825872	Argument	table		10825167	0					
ANR	10825873	Identifier	table		10825167	0					
ANR	10825874	ReturnStatement	return 0 ;	605:12:17100:17108	10825167	19	True				
ANR	10825875	PrimaryExpression	0		10825167	0					
ANR	10825876	ReturnStatement	return 0 ;	607:4:17120:17128	10825167	5	True				
ANR	10825877	PrimaryExpression	0		10825167	0					
ANR	10825878	ReturnType	static int		10825167	1					
ANR	10825879	Identifier	xps_decode_font_char_imp		10825167	2					
ANR	10825880	ParameterList	"xps_font_t * font , int code"		10825167	3					
ANR	10825881	Parameter	xps_font_t * font	484:25:12679:12694	10825167	0	True				
ANR	10825882	ParameterType	xps_font_t *		10825167	0					
ANR	10825883	Identifier	font		10825167	1					
ANR	10825884	Parameter	int code	484:43:12697:12704	10825167	1	True				
ANR	10825885	ParameterType	int		10825167	0					
ANR	10825886	Identifier	code		10825167	1					
ANR	10825887	CFGEntryNode	ENTRY		10825167		True				
ANR	10825888	CFGExitNode	EXIT		10825167		True				
ANR	10825889	Symbol	Group		10825167						
ANR	10825890	Symbol	code		10825167						
ANR	10825891	Symbol	startGlyphCode		10825167						
ANR	10825892	Symbol	roff		10825167						
ANR	10825893	Symbol	delta		10825167						
ANR	10825894	Symbol	font -> cmapsubtable		10825167						
ANR	10825895	Symbol	giddata		10825167						
ANR	10825896	Symbol	u32		10825167						
ANR	10825897	Symbol	s16		10825167						
ANR	10825898	Symbol	end		10825167						
ANR	10825899	Symbol	* font		10825167						
ANR	10825900	Symbol	u16		10825167						
ANR	10825901	Symbol	firstCode		10825167						
ANR	10825902	Symbol	font -> length		10825167						
ANR	10825903	Symbol	gs_error_invalidfont		10825167						
ANR	10825904	Symbol	idDelta		10825167						
ANR	10825905	Symbol	table		10825167						
ANR	10825906	Symbol	startCount		10825167						
ANR	10825907	Symbol	ch		10825167						
ANR	10825908	Symbol	segCount2		10825167						
ANR	10825909	Symbol	length		10825167						
ANR	10825910	Symbol	start		10825167						
ANR	10825911	Symbol	i		10825167						
ANR	10825912	Symbol	* table		10825167						
ANR	10825913	Symbol	i2		10825167						
ANR	10825914	Symbol	glyph		10825167						
ANR	10825915	Symbol	nGroups		10825167						
ANR	10825916	Symbol	* i		10825167						
ANR	10825917	Symbol	t		10825167						
ANR	10825918	Symbol	font -> data		10825167						
ANR	10825919	Symbol	endCount		10825167						
ANR	10825920	Symbol	startCharCode		10825167						
ANR	10825921	Symbol	endCharCode		10825167						
ANR	10825922	Symbol	idRangeOffset		10825167						
ANR	10825923	Symbol	font		10825167						
ANR	10825924	Function	xps_decode_font_char	610:0:17133:17295							
ANR	10825925	FunctionDef	"xps_decode_font_char (xps_font_t * font , int code)"		10825924	0					
ANR	10825926	CompoundStatement		612:0:17186:17295	10825924	0					
ANR	10825927	IdentifierDeclStatement	"int gid = xps_decode_font_char_imp ( font , code ) ;"	613:4:17192:17238	10825924	0	True				
ANR	10825928	IdentifierDecl	"gid = xps_decode_font_char_imp ( font , code )"		10825924	0					
ANR	10825929	IdentifierDeclType	int		10825924	0					
ANR	10825930	Identifier	gid		10825924	1					
ANR	10825931	AssignmentExpression	"gid = xps_decode_font_char_imp ( font , code )"		10825924	2		=			
ANR	10825932	Identifier	gid		10825924	0					
ANR	10825933	CallExpression	"xps_decode_font_char_imp ( font , code )"		10825924	1					
ANR	10825934	Callee	xps_decode_font_char_imp		10825924	0					
ANR	10825935	Identifier	xps_decode_font_char_imp		10825924	0					
ANR	10825936	ArgumentList	font		10825924	1					
ANR	10825937	Argument	font		10825924	0					
ANR	10825938	Identifier	font		10825924	0					
ANR	10825939	Argument	code		10825924	1					
ANR	10825940	Identifier	code		10825924	0					
ANR	10825941	IfStatement	if ( gid == 0 )		10825924	1					
ANR	10825942	Condition	gid == 0	614:8:17248:17255	10825924	0	True				
ANR	10825943	EqualityExpression	gid == 0		10825924	0		==			
ANR	10825944	Identifier	gid		10825924	0					
ANR	10825945	PrimaryExpression	0		10825924	1					
ANR	10825946	ReturnStatement	return code ;	615:8:17266:17277	10825924	1	True				
ANR	10825947	Identifier	code		10825924	0					
ANR	10825948	ReturnStatement	return gid ;	616:4:17283:17293	10825924	2	True				
ANR	10825949	Identifier	gid		10825924	0					
ANR	10825950	ReturnType	int		10825924	1					
ANR	10825951	Identifier	xps_decode_font_char		10825924	2					
ANR	10825952	ParameterList	"xps_font_t * font , int code"		10825924	3					
ANR	10825953	Parameter	xps_font_t * font	611:21:17158:17173	10825924	0	True				
ANR	10825954	ParameterType	xps_font_t *		10825924	0					
ANR	10825955	Identifier	font		10825924	1					
ANR	10825956	Parameter	int code	611:39:17176:17183	10825924	1	True				
ANR	10825957	ParameterType	int		10825924	0					
ANR	10825958	Identifier	code		10825924	1					
ANR	10825959	CFGEntryNode	ENTRY		10825924		True				
ANR	10825960	CFGExitNode	EXIT		10825924		True				
ANR	10825961	Symbol	code		10825924						
ANR	10825962	Symbol	gid		10825924						
ANR	10825963	Symbol	xps_decode_font_char_imp		10825924						
ANR	10825964	Symbol	font		10825924						
ANR	10825965	Function	xps_encode_font_char	619:0:17298:17516							
ANR	10825966	FunctionDef	"xps_encode_font_char (xps_font_t * font , int code)"		10825965	0					
ANR	10825967	CompoundStatement		621:0:17351:17516	10825965	0					
ANR	10825968	IdentifierDeclStatement	"int gid = xps_encode_font_char_imp ( font , code ) ;"	622:4:17357:17403	10825965	0	True				
ANR	10825969	IdentifierDecl	"gid = xps_encode_font_char_imp ( font , code )"		10825965	0					
ANR	10825970	IdentifierDeclType	int		10825965	0					
ANR	10825971	Identifier	gid		10825965	1					
ANR	10825972	AssignmentExpression	"gid = xps_encode_font_char_imp ( font , code )"		10825965	2		=			
ANR	10825973	Identifier	gid		10825965	0					
ANR	10825974	CallExpression	"xps_encode_font_char_imp ( font , code )"		10825965	1					
ANR	10825975	Callee	xps_encode_font_char_imp		10825965	0					
ANR	10825976	Identifier	xps_encode_font_char_imp		10825965	0					
ANR	10825977	ArgumentList	font		10825965	1					
ANR	10825978	Argument	font		10825965	0					
ANR	10825979	Identifier	font		10825965	0					
ANR	10825980	Argument	code		10825965	1					
ANR	10825981	Identifier	code		10825965	0					
ANR	10825982	IfStatement	if ( gid == 0 && font -> usepua )		10825965	1					
ANR	10825983	Condition	gid == 0 && font -> usepua	623:8:17413:17436	10825965	0	True				
ANR	10825984	AndExpression	gid == 0 && font -> usepua		10825965	0		&&			
ANR	10825985	EqualityExpression	gid == 0		10825965	0		==			
ANR	10825986	Identifier	gid		10825965	0					
ANR	10825987	PrimaryExpression	0		10825965	1					
ANR	10825988	PtrMemberAccess	font -> usepua		10825965	1					
ANR	10825989	Identifier	font		10825965	0					
ANR	10825990	Identifier	usepua		10825965	1					
ANR	10825991	ExpressionStatement	"gid = xps_encode_font_char_imp ( font , 0xF000 | code )"	624:8:17447:17498	10825965	1	True				
ANR	10825992	AssignmentExpression	"gid = xps_encode_font_char_imp ( font , 0xF000 | code )"		10825965	0		=			
ANR	10825993	Identifier	gid		10825965	0					
ANR	10825994	CallExpression	"xps_encode_font_char_imp ( font , 0xF000 | code )"		10825965	1					
ANR	10825995	Callee	xps_encode_font_char_imp		10825965	0					
ANR	10825996	Identifier	xps_encode_font_char_imp		10825965	0					
ANR	10825997	ArgumentList	font		10825965	1					
ANR	10825998	Argument	font		10825965	0					
ANR	10825999	Identifier	font		10825965	0					
ANR	10826000	Argument	0xF000 | code		10825965	1					
ANR	10826001	InclusiveOrExpression	0xF000 | code		10825965	0		|			
ANR	10826002	PrimaryExpression	0xF000		10825965	0					
ANR	10826003	Identifier	code		10825965	1					
ANR	10826004	ReturnStatement	return gid ;	625:4:17504:17514	10825965	2	True				
ANR	10826005	Identifier	gid		10825965	0					
ANR	10826006	ReturnType	int		10825965	1					
ANR	10826007	Identifier	xps_encode_font_char		10825965	2					
ANR	10826008	ParameterList	"xps_font_t * font , int code"		10825965	3					
ANR	10826009	Parameter	xps_font_t * font	620:21:17323:17338	10825965	0	True				
ANR	10826010	ParameterType	xps_font_t *		10825965	0					
ANR	10826011	Identifier	font		10825965	1					
ANR	10826012	Parameter	int code	620:39:17341:17348	10825965	1	True				
ANR	10826013	ParameterType	int		10825965	0					
ANR	10826014	Identifier	code		10825965	1					
ANR	10826015	CFGEntryNode	ENTRY		10825965		True				
ANR	10826016	CFGExitNode	EXIT		10825965		True				
ANR	10826017	Symbol	code		10825965						
ANR	10826018	Symbol	gid		10825965						
ANR	10826019	Symbol	font -> usepua		10825965						
ANR	10826020	Symbol	* font		10825965						
ANR	10826021	Symbol	xps_encode_font_char_imp		10825965						
ANR	10826022	Symbol	font		10825965						
ANR	10826023	Function	xps_measure_font_glyph	634:0:17709:20769							
ANR	10826024	FunctionDef	"xps_measure_font_glyph (xps_context_t * ctx , xps_font_t * font , int gid , xps_glyph_metrics_t * mtx)"		10826023	0					
ANR	10826025	CompoundStatement		636:0:17810:20769	10826023	0					
ANR	10826026	IdentifierDeclStatement	"int head , format , loca , glyf ;"	638:4:17817:17845	10826023	0	True				
ANR	10826027	IdentifierDecl	head		10826023	0					
ANR	10826028	IdentifierDeclType	int		10826023	0					
ANR	10826029	Identifier	head		10826023	1					
ANR	10826030	IdentifierDecl	format		10826023	1					
ANR	10826031	IdentifierDeclType	int		10826023	0					
ANR	10826032	Identifier	format		10826023	1					
ANR	10826033	IdentifierDecl	loca		10826023	2					
ANR	10826034	IdentifierDeclType	int		10826023	0					
ANR	10826035	Identifier	loca		10826023	1					
ANR	10826036	IdentifierDecl	glyf		10826023	3					
ANR	10826037	IdentifierDeclType	int		10826023	0					
ANR	10826038	Identifier	glyf		10826023	1					
ANR	10826039	IdentifierDeclStatement	"int ofs , len ;"	639:4:17851:17863	10826023	1	True				
ANR	10826040	IdentifierDecl	ofs		10826023	0					
ANR	10826041	IdentifierDeclType	int		10826023	0					
ANR	10826042	Identifier	ofs		10826023	1					
ANR	10826043	IdentifierDecl	len		10826023	1					
ANR	10826044	IdentifierDeclType	int		10826023	0					
ANR	10826045	Identifier	len		10826023	1					
ANR	10826046	IdentifierDeclStatement	"int idx , i , n ;"	640:4:17869:17882	10826023	2	True				
ANR	10826047	IdentifierDecl	idx		10826023	0					
ANR	10826048	IdentifierDeclType	int		10826023	0					
ANR	10826049	Identifier	idx		10826023	1					
ANR	10826050	IdentifierDecl	i		10826023	1					
ANR	10826051	IdentifierDeclType	int		10826023	0					
ANR	10826052	Identifier	i		10826023	1					
ANR	10826053	IdentifierDecl	n		10826023	2					
ANR	10826054	IdentifierDeclType	int		10826023	0					
ANR	10826055	Identifier	n		10826023	1					
ANR	10826056	IdentifierDeclStatement	"int hadv , vadv , vorg ;"	641:4:17888:17908	10826023	3	True				
ANR	10826057	IdentifierDecl	hadv		10826023	0					
ANR	10826058	IdentifierDeclType	int		10826023	0					
ANR	10826059	Identifier	hadv		10826023	1					
ANR	10826060	IdentifierDecl	vadv		10826023	1					
ANR	10826061	IdentifierDeclType	int		10826023	0					
ANR	10826062	Identifier	vadv		10826023	1					
ANR	10826063	IdentifierDecl	vorg		10826023	2					
ANR	10826064	IdentifierDeclType	int		10826023	0					
ANR	10826065	Identifier	vorg		10826023	1					
ANR	10826066	IdentifierDeclStatement	"int vtop , ymax , desc ;"	642:4:17914:17934	10826023	4	True				
ANR	10826067	IdentifierDecl	vtop		10826023	0					
ANR	10826068	IdentifierDeclType	int		10826023	0					
ANR	10826069	Identifier	vtop		10826023	1					
ANR	10826070	IdentifierDecl	ymax		10826023	1					
ANR	10826071	IdentifierDeclType	int		10826023	0					
ANR	10826072	Identifier	ymax		10826023	1					
ANR	10826073	IdentifierDecl	desc		10826023	2					
ANR	10826074	IdentifierDeclType	int		10826023	0					
ANR	10826075	Identifier	desc		10826023	1					
ANR	10826076	IdentifierDeclStatement	int scale ;	643:4:17940:17949	10826023	5	True				
ANR	10826077	IdentifierDecl	scale		10826023	0					
ANR	10826078	IdentifierDeclType	int		10826023	0					
ANR	10826079	Identifier	scale		10826023	1					
ANR	10826080	ExpressionStatement	scale = 1000	647:4:17988:18000	10826023	6	True				
ANR	10826081	AssignmentExpression	scale = 1000		10826023	0		=			
ANR	10826082	Identifier	scale		10826023	0					
ANR	10826083	PrimaryExpression	1000		10826023	1					
ANR	10826084	ExpressionStatement	hadv = 500	648:4:18025:18035	10826023	7	True				
ANR	10826085	AssignmentExpression	hadv = 500		10826023	0		=			
ANR	10826086	Identifier	hadv		10826023	0					
ANR	10826087	PrimaryExpression	500		10826023	1					
ANR	10826088	ExpressionStatement	vadv = - 1000	649:4:18041:18053	10826023	8	True				
ANR	10826089	AssignmentExpression	vadv = - 1000		10826023	0		=			
ANR	10826090	Identifier	vadv		10826023	0					
ANR	10826091	UnaryOperationExpression	- 1000		10826023	1					
ANR	10826092	UnaryOperator	-		10826023	0					
ANR	10826093	PrimaryExpression	1000		10826023	1					
ANR	10826094	ExpressionStatement	vorg = 1000	650:4:18059:18070	10826023	9	True				
ANR	10826095	AssignmentExpression	vorg = 1000		10826023	0		=			
ANR	10826096	Identifier	vorg		10826023	0					
ANR	10826097	PrimaryExpression	1000		10826023	1					
ANR	10826098	ExpressionStatement	"ofs = xps_find_sfnt_table ( font , ""hhea"" , & len )"	656:4:18129:18174	10826023	10	True				
ANR	10826099	AssignmentExpression	"ofs = xps_find_sfnt_table ( font , ""hhea"" , & len )"		10826023	0		=			
ANR	10826100	Identifier	ofs		10826023	0					
ANR	10826101	CallExpression	"xps_find_sfnt_table ( font , ""hhea"" , & len )"		10826023	1					
ANR	10826102	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826103	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826104	ArgumentList	font		10826023	1					
ANR	10826105	Argument	font		10826023	0					
ANR	10826106	Identifier	font		10826023	0					
ANR	10826107	Argument	"""hhea"""		10826023	1					
ANR	10826108	PrimaryExpression	"""hhea"""		10826023	0					
ANR	10826109	Argument	& len		10826023	2					
ANR	10826110	UnaryOperationExpression	& len		10826023	0					
ANR	10826111	UnaryOperator	&		10826023	0					
ANR	10826112	Identifier	len		10826023	1					
ANR	10826113	IfStatement	if ( ofs < 0 || len < 2 * 18 )		10826023	11					
ANR	10826114	Condition	ofs < 0 || len < 2 * 18	657:8:18184:18206	10826023	0	True				
ANR	10826115	OrExpression	ofs < 0 || len < 2 * 18		10826023	0		||			
ANR	10826116	RelationalExpression	ofs < 0		10826023	0		<			
ANR	10826117	Identifier	ofs		10826023	0					
ANR	10826118	PrimaryExpression	0		10826023	1					
ANR	10826119	RelationalExpression	len < 2 * 18		10826023	1		<			
ANR	10826120	Identifier	len		10826023	0					
ANR	10826121	MultiplicativeExpression	2 * 18		10826023	1		*			
ANR	10826122	PrimaryExpression	2		10826023	0					
ANR	10826123	PrimaryExpression	18		10826023	1					
ANR	10826124	CompoundStatement		23:4:402:402	10826023	1					
ANR	10826125	ExpressionStatement	"gs_warn ( ""hhea table is too short"" )"	659:8:18223:18257	10826023	0	True				
ANR	10826126	CallExpression	"gs_warn ( ""hhea table is too short"" )"		10826023	0					
ANR	10826127	Callee	gs_warn		10826023	0					
ANR	10826128	Identifier	gs_warn		10826023	0					
ANR	10826129	ArgumentList	"""hhea table is too short"""		10826023	1					
ANR	10826130	Argument	"""hhea table is too short"""		10826023	0					
ANR	10826131	PrimaryExpression	"""hhea table is too short"""		10826023	0					
ANR	10826132	ReturnStatement	return ;	660:8:18267:18273	10826023	1	True				
ANR	10826133	ExpressionStatement	vorg = s16 ( font -> data + ofs + 4 )	663:4:18286:18318	10826023	12	True				
ANR	10826134	AssignmentExpression	vorg = s16 ( font -> data + ofs + 4 )		10826023	0		=			
ANR	10826135	Identifier	vorg		10826023	0					
ANR	10826136	CallExpression	s16 ( font -> data + ofs + 4 )		10826023	1					
ANR	10826137	Callee	s16		10826023	0					
ANR	10826138	Identifier	s16		10826023	0					
ANR	10826139	ArgumentList	font -> data + ofs + 4		10826023	1					
ANR	10826140	Argument	font -> data + ofs + 4		10826023	0					
ANR	10826141	AdditiveExpression	font -> data + ofs + 4		10826023	0		+			
ANR	10826142	PtrMemberAccess	font -> data		10826023	0					
ANR	10826143	Identifier	font		10826023	0					
ANR	10826144	Identifier	data		10826023	1					
ANR	10826145	AdditiveExpression	ofs + 4		10826023	1		+			
ANR	10826146	Identifier	ofs		10826023	0					
ANR	10826147	PrimaryExpression	4		10826023	1					
ANR	10826148	ExpressionStatement	desc = s16 ( font -> data + ofs + 6 )	664:4:18355:18387	10826023	13	True				
ANR	10826149	AssignmentExpression	desc = s16 ( font -> data + ofs + 6 )		10826023	0		=			
ANR	10826150	Identifier	desc		10826023	0					
ANR	10826151	CallExpression	s16 ( font -> data + ofs + 6 )		10826023	1					
ANR	10826152	Callee	s16		10826023	0					
ANR	10826153	Identifier	s16		10826023	0					
ANR	10826154	ArgumentList	font -> data + ofs + 6		10826023	1					
ANR	10826155	Argument	font -> data + ofs + 6		10826023	0					
ANR	10826156	AdditiveExpression	font -> data + ofs + 6		10826023	0		+			
ANR	10826157	PtrMemberAccess	font -> data		10826023	0					
ANR	10826158	Identifier	font		10826023	0					
ANR	10826159	Identifier	data		10826023	1					
ANR	10826160	AdditiveExpression	ofs + 6		10826023	1		+			
ANR	10826161	Identifier	ofs		10826023	0					
ANR	10826162	PrimaryExpression	6		10826023	1					
ANR	10826163	IfStatement	if ( desc < 0 )		10826023	14					
ANR	10826164	Condition	desc < 0	665:8:18413:18420	10826023	0	True				
ANR	10826165	RelationalExpression	desc < 0		10826023	0		<			
ANR	10826166	Identifier	desc		10826023	0					
ANR	10826167	PrimaryExpression	0		10826023	1					
ANR	10826168	ExpressionStatement	desc = - desc	666:8:18431:18443	10826023	1	True				
ANR	10826169	AssignmentExpression	desc = - desc		10826023	0		=			
ANR	10826170	Identifier	desc		10826023	0					
ANR	10826171	UnaryOperationExpression	- desc		10826023	1					
ANR	10826172	UnaryOperator	-		10826023	0					
ANR	10826173	Identifier	desc		10826023	1					
ANR	10826174	ExpressionStatement	n = u16 ( font -> data + ofs + 17 * 2 )	667:4:18449:18483	10826023	15	True				
ANR	10826175	AssignmentExpression	n = u16 ( font -> data + ofs + 17 * 2 )		10826023	0		=			
ANR	10826176	Identifier	n		10826023	0					
ANR	10826177	CallExpression	u16 ( font -> data + ofs + 17 * 2 )		10826023	1					
ANR	10826178	Callee	u16		10826023	0					
ANR	10826179	Identifier	u16		10826023	0					
ANR	10826180	ArgumentList	font -> data + ofs + 17 * 2		10826023	1					
ANR	10826181	Argument	font -> data + ofs + 17 * 2		10826023	0					
ANR	10826182	AdditiveExpression	font -> data + ofs + 17 * 2		10826023	0		+			
ANR	10826183	PtrMemberAccess	font -> data		10826023	0					
ANR	10826184	Identifier	font		10826023	0					
ANR	10826185	Identifier	data		10826023	1					
ANR	10826186	AdditiveExpression	ofs + 17 * 2		10826023	1		+			
ANR	10826187	Identifier	ofs		10826023	0					
ANR	10826188	MultiplicativeExpression	17 * 2		10826023	1		*			
ANR	10826189	PrimaryExpression	17		10826023	0					
ANR	10826190	PrimaryExpression	2		10826023	1					
ANR	10826191	ExpressionStatement	"ofs = xps_find_sfnt_table ( font , ""hmtx"" , & len )"	669:4:18490:18535	10826023	16	True				
ANR	10826192	AssignmentExpression	"ofs = xps_find_sfnt_table ( font , ""hmtx"" , & len )"		10826023	0		=			
ANR	10826193	Identifier	ofs		10826023	0					
ANR	10826194	CallExpression	"xps_find_sfnt_table ( font , ""hmtx"" , & len )"		10826023	1					
ANR	10826195	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826196	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826197	ArgumentList	font		10826023	1					
ANR	10826198	Argument	font		10826023	0					
ANR	10826199	Identifier	font		10826023	0					
ANR	10826200	Argument	"""hmtx"""		10826023	1					
ANR	10826201	PrimaryExpression	"""hmtx"""		10826023	0					
ANR	10826202	Argument	& len		10826023	2					
ANR	10826203	UnaryOperationExpression	& len		10826023	0					
ANR	10826204	UnaryOperator	&		10826023	0					
ANR	10826205	Identifier	len		10826023	1					
ANR	10826206	IfStatement	if ( ofs < 0 )		10826023	17					
ANR	10826207	Condition	ofs < 0	670:8:18545:18551	10826023	0	True				
ANR	10826208	RelationalExpression	ofs < 0		10826023	0		<			
ANR	10826209	Identifier	ofs		10826023	0					
ANR	10826210	PrimaryExpression	0		10826023	1					
ANR	10826211	CompoundStatement		36:4:747:747	10826023	1					
ANR	10826212	ExpressionStatement	"gs_warn ( ""cannot find hmtx table"" )"	672:8:18568:18601	10826023	0	True				
ANR	10826213	CallExpression	"gs_warn ( ""cannot find hmtx table"" )"		10826023	0					
ANR	10826214	Callee	gs_warn		10826023	0					
ANR	10826215	Identifier	gs_warn		10826023	0					
ANR	10826216	ArgumentList	"""cannot find hmtx table"""		10826023	1					
ANR	10826217	Argument	"""cannot find hmtx table"""		10826023	0					
ANR	10826218	PrimaryExpression	"""cannot find hmtx table"""		10826023	0					
ANR	10826219	ReturnStatement	return ;	673:8:18611:18617	10826023	1	True				
ANR	10826220	ExpressionStatement	idx = gid	676:4:18630:18639	10826023	18	True				
ANR	10826221	AssignmentExpression	idx = gid		10826023	0		=			
ANR	10826222	Identifier	idx		10826023	0					
ANR	10826223	Identifier	gid		10826023	1					
ANR	10826224	IfStatement	if ( idx > n - 1 )		10826023	19					
ANR	10826225	Condition	idx > n - 1	677:8:18649:18659	10826023	0	True				
ANR	10826226	RelationalExpression	idx > n - 1		10826023	0		>			
ANR	10826227	Identifier	idx		10826023	0					
ANR	10826228	AdditiveExpression	n - 1		10826023	1		-			
ANR	10826229	Identifier	n		10826023	0					
ANR	10826230	PrimaryExpression	1		10826023	1					
ANR	10826231	ExpressionStatement	idx = n - 1	678:8:18670:18681	10826023	1	True				
ANR	10826232	AssignmentExpression	idx = n - 1		10826023	0		=			
ANR	10826233	Identifier	idx		10826023	0					
ANR	10826234	AdditiveExpression	n - 1		10826023	1		-			
ANR	10826235	Identifier	n		10826023	0					
ANR	10826236	PrimaryExpression	1		10826023	1					
ANR	10826237	ExpressionStatement	hadv = u16 ( font -> data + ofs + idx * 4 )	680:4:18688:18726	10826023	20	True				
ANR	10826238	AssignmentExpression	hadv = u16 ( font -> data + ofs + idx * 4 )		10826023	0		=			
ANR	10826239	Identifier	hadv		10826023	0					
ANR	10826240	CallExpression	u16 ( font -> data + ofs + idx * 4 )		10826023	1					
ANR	10826241	Callee	u16		10826023	0					
ANR	10826242	Identifier	u16		10826023	0					
ANR	10826243	ArgumentList	font -> data + ofs + idx * 4		10826023	1					
ANR	10826244	Argument	font -> data + ofs + idx * 4		10826023	0					
ANR	10826245	AdditiveExpression	font -> data + ofs + idx * 4		10826023	0		+			
ANR	10826246	PtrMemberAccess	font -> data		10826023	0					
ANR	10826247	Identifier	font		10826023	0					
ANR	10826248	Identifier	data		10826023	1					
ANR	10826249	AdditiveExpression	ofs + idx * 4		10826023	1		+			
ANR	10826250	Identifier	ofs		10826023	0					
ANR	10826251	MultiplicativeExpression	idx * 4		10826023	1		*			
ANR	10826252	Identifier	idx		10826023	0					
ANR	10826253	PrimaryExpression	4		10826023	1					
ANR	10826254	ExpressionStatement	vadv = 0	681:4:18732:18740	10826023	21	True				
ANR	10826255	AssignmentExpression	vadv = 0		10826023	0		=			
ANR	10826256	Identifier	vadv		10826023	0					
ANR	10826257	PrimaryExpression	0		10826023	1					
ANR	10826258	ExpressionStatement	"head = xps_find_sfnt_table ( font , ""head"" , & len )"	687:4:18820:18866	10826023	22	True				
ANR	10826259	AssignmentExpression	"head = xps_find_sfnt_table ( font , ""head"" , & len )"		10826023	0		=			
ANR	10826260	Identifier	head		10826023	0					
ANR	10826261	CallExpression	"xps_find_sfnt_table ( font , ""head"" , & len )"		10826023	1					
ANR	10826262	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826263	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826264	ArgumentList	font		10826023	1					
ANR	10826265	Argument	font		10826023	0					
ANR	10826266	Identifier	font		10826023	0					
ANR	10826267	Argument	"""head"""		10826023	1					
ANR	10826268	PrimaryExpression	"""head"""		10826023	0					
ANR	10826269	Argument	& len		10826023	2					
ANR	10826270	UnaryOperationExpression	& len		10826023	0					
ANR	10826271	UnaryOperator	&		10826023	0					
ANR	10826272	Identifier	len		10826023	1					
ANR	10826273	IfStatement	if ( head > 0 )		10826023	23					
ANR	10826274	Condition	head > 0	688:8:18876:18883	10826023	0	True				
ANR	10826275	RelationalExpression	head > 0		10826023	0		>			
ANR	10826276	Identifier	head		10826023	0					
ANR	10826277	PrimaryExpression	0		10826023	1					
ANR	10826278	CompoundStatement		54:4:1079:1079	10826023	1					
ANR	10826279	ExpressionStatement	scale = u16 ( font -> data + head + 18 )	690:8:18900:18935	10826023	0	True				
ANR	10826280	AssignmentExpression	scale = u16 ( font -> data + head + 18 )		10826023	0		=			
ANR	10826281	Identifier	scale		10826023	0					
ANR	10826282	CallExpression	u16 ( font -> data + head + 18 )		10826023	1					
ANR	10826283	Callee	u16		10826023	0					
ANR	10826284	Identifier	u16		10826023	0					
ANR	10826285	ArgumentList	font -> data + head + 18		10826023	1					
ANR	10826286	Argument	font -> data + head + 18		10826023	0					
ANR	10826287	AdditiveExpression	font -> data + head + 18		10826023	0		+			
ANR	10826288	PtrMemberAccess	font -> data		10826023	0					
ANR	10826289	Identifier	font		10826023	0					
ANR	10826290	Identifier	data		10826023	1					
ANR	10826291	AdditiveExpression	head + 18		10826023	1		+			
ANR	10826292	Identifier	head		10826023	0					
ANR	10826293	PrimaryExpression	18		10826023	1					
ANR	10826294	ExpressionStatement	"ofs = xps_find_sfnt_table ( font , ""OS/2"" , & len )"	693:4:18967:19012	10826023	24	True				
ANR	10826295	AssignmentExpression	"ofs = xps_find_sfnt_table ( font , ""OS/2"" , & len )"		10826023	0		=			
ANR	10826296	Identifier	ofs		10826023	0					
ANR	10826297	CallExpression	"xps_find_sfnt_table ( font , ""OS/2"" , & len )"		10826023	1					
ANR	10826298	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826299	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826300	ArgumentList	font		10826023	1					
ANR	10826301	Argument	font		10826023	0					
ANR	10826302	Identifier	font		10826023	0					
ANR	10826303	Argument	"""OS/2"""		10826023	1					
ANR	10826304	PrimaryExpression	"""OS/2"""		10826023	0					
ANR	10826305	Argument	& len		10826023	2					
ANR	10826306	UnaryOperationExpression	& len		10826023	0					
ANR	10826307	UnaryOperator	&		10826023	0					
ANR	10826308	Identifier	len		10826023	1					
ANR	10826309	IfStatement	if ( ofs > 0 && len > 70 )		10826023	25					
ANR	10826310	Condition	ofs > 0 && len > 70	694:8:19022:19040	10826023	0	True				
ANR	10826311	AndExpression	ofs > 0 && len > 70		10826023	0		&&			
ANR	10826312	RelationalExpression	ofs > 0		10826023	0		>			
ANR	10826313	Identifier	ofs		10826023	0					
ANR	10826314	PrimaryExpression	0		10826023	1					
ANR	10826315	RelationalExpression	len > 70		10826023	1		>			
ANR	10826316	Identifier	len		10826023	0					
ANR	10826317	PrimaryExpression	70		10826023	1					
ANR	10826318	CompoundStatement		60:4:1236:1236	10826023	1					
ANR	10826319	ExpressionStatement	vorg = s16 ( font -> data + ofs + 68 )	696:8:19057:19090	10826023	0	True				
ANR	10826320	AssignmentExpression	vorg = s16 ( font -> data + ofs + 68 )		10826023	0		=			
ANR	10826321	Identifier	vorg		10826023	0					
ANR	10826322	CallExpression	s16 ( font -> data + ofs + 68 )		10826023	1					
ANR	10826323	Callee	s16		10826023	0					
ANR	10826324	Identifier	s16		10826023	0					
ANR	10826325	ArgumentList	font -> data + ofs + 68		10826023	1					
ANR	10826326	Argument	font -> data + ofs + 68		10826023	0					
ANR	10826327	AdditiveExpression	font -> data + ofs + 68		10826023	0		+			
ANR	10826328	PtrMemberAccess	font -> data		10826023	0					
ANR	10826329	Identifier	font		10826023	0					
ANR	10826330	Identifier	data		10826023	1					
ANR	10826331	AdditiveExpression	ofs + 68		10826023	1		+			
ANR	10826332	Identifier	ofs		10826023	0					
ANR	10826333	PrimaryExpression	68		10826023	1					
ANR	10826334	ExpressionStatement	desc = s16 ( font -> data + ofs + 70 )	697:8:19120:19153	10826023	1	True				
ANR	10826335	AssignmentExpression	desc = s16 ( font -> data + ofs + 70 )		10826023	0		=			
ANR	10826336	Identifier	desc		10826023	0					
ANR	10826337	CallExpression	s16 ( font -> data + ofs + 70 )		10826023	1					
ANR	10826338	Callee	s16		10826023	0					
ANR	10826339	Identifier	s16		10826023	0					
ANR	10826340	ArgumentList	font -> data + ofs + 70		10826023	1					
ANR	10826341	Argument	font -> data + ofs + 70		10826023	0					
ANR	10826342	AdditiveExpression	font -> data + ofs + 70		10826023	0		+			
ANR	10826343	PtrMemberAccess	font -> data		10826023	0					
ANR	10826344	Identifier	font		10826023	0					
ANR	10826345	Identifier	data		10826023	1					
ANR	10826346	AdditiveExpression	ofs + 70		10826023	1		+			
ANR	10826347	Identifier	ofs		10826023	0					
ANR	10826348	PrimaryExpression	70		10826023	1					
ANR	10826349	IfStatement	if ( desc < 0 )		10826023	2					
ANR	10826350	Condition	desc < 0	698:12:19188:19195	10826023	0	True				
ANR	10826351	RelationalExpression	desc < 0		10826023	0		<			
ANR	10826352	Identifier	desc		10826023	0					
ANR	10826353	PrimaryExpression	0		10826023	1					
ANR	10826354	ExpressionStatement	desc = - desc	699:12:19210:19222	10826023	1	True				
ANR	10826355	AssignmentExpression	desc = - desc		10826023	0		=			
ANR	10826356	Identifier	desc		10826023	0					
ANR	10826357	UnaryOperationExpression	- desc		10826023	1					
ANR	10826358	UnaryOperator	-		10826023	0					
ANR	10826359	Identifier	desc		10826023	1					
ANR	10826360	ExpressionStatement	"ofs = xps_find_sfnt_table ( font , ""vhea"" , & len )"	702:4:19235:19280	10826023	26	True				
ANR	10826361	AssignmentExpression	"ofs = xps_find_sfnt_table ( font , ""vhea"" , & len )"		10826023	0		=			
ANR	10826362	Identifier	ofs		10826023	0					
ANR	10826363	CallExpression	"xps_find_sfnt_table ( font , ""vhea"" , & len )"		10826023	1					
ANR	10826364	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826365	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826366	ArgumentList	font		10826023	1					
ANR	10826367	Argument	font		10826023	0					
ANR	10826368	Identifier	font		10826023	0					
ANR	10826369	Argument	"""vhea"""		10826023	1					
ANR	10826370	PrimaryExpression	"""vhea"""		10826023	0					
ANR	10826371	Argument	& len		10826023	2					
ANR	10826372	UnaryOperationExpression	& len		10826023	0					
ANR	10826373	UnaryOperator	&		10826023	0					
ANR	10826374	Identifier	len		10826023	1					
ANR	10826375	IfStatement	if ( ofs > 0 && len >= 2 * 18 )		10826023	27					
ANR	10826376	Condition	ofs > 0 && len >= 2 * 18	703:8:19290:19313	10826023	0	True				
ANR	10826377	AndExpression	ofs > 0 && len >= 2 * 18		10826023	0		&&			
ANR	10826378	RelationalExpression	ofs > 0		10826023	0		>			
ANR	10826379	Identifier	ofs		10826023	0					
ANR	10826380	PrimaryExpression	0		10826023	1					
ANR	10826381	RelationalExpression	len >= 2 * 18		10826023	1		>=			
ANR	10826382	Identifier	len		10826023	0					
ANR	10826383	MultiplicativeExpression	2 * 18		10826023	1		*			
ANR	10826384	PrimaryExpression	2		10826023	0					
ANR	10826385	PrimaryExpression	18		10826023	1					
ANR	10826386	CompoundStatement		69:4:1509:1509	10826023	1					
ANR	10826387	ExpressionStatement	n = u16 ( font -> data + ofs + 17 * 2 )	705:8:19330:19364	10826023	0	True				
ANR	10826388	AssignmentExpression	n = u16 ( font -> data + ofs + 17 * 2 )		10826023	0		=			
ANR	10826389	Identifier	n		10826023	0					
ANR	10826390	CallExpression	u16 ( font -> data + ofs + 17 * 2 )		10826023	1					
ANR	10826391	Callee	u16		10826023	0					
ANR	10826392	Identifier	u16		10826023	0					
ANR	10826393	ArgumentList	font -> data + ofs + 17 * 2		10826023	1					
ANR	10826394	Argument	font -> data + ofs + 17 * 2		10826023	0					
ANR	10826395	AdditiveExpression	font -> data + ofs + 17 * 2		10826023	0		+			
ANR	10826396	PtrMemberAccess	font -> data		10826023	0					
ANR	10826397	Identifier	font		10826023	0					
ANR	10826398	Identifier	data		10826023	1					
ANR	10826399	AdditiveExpression	ofs + 17 * 2		10826023	1		+			
ANR	10826400	Identifier	ofs		10826023	0					
ANR	10826401	MultiplicativeExpression	17 * 2		10826023	1		*			
ANR	10826402	PrimaryExpression	17		10826023	0					
ANR	10826403	PrimaryExpression	2		10826023	1					
ANR	10826404	ExpressionStatement	"ofs = xps_find_sfnt_table ( font , ""vmtx"" , & len )"	707:8:19375:19420	10826023	1	True				
ANR	10826405	AssignmentExpression	"ofs = xps_find_sfnt_table ( font , ""vmtx"" , & len )"		10826023	0		=			
ANR	10826406	Identifier	ofs		10826023	0					
ANR	10826407	CallExpression	"xps_find_sfnt_table ( font , ""vmtx"" , & len )"		10826023	1					
ANR	10826408	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826409	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826410	ArgumentList	font		10826023	1					
ANR	10826411	Argument	font		10826023	0					
ANR	10826412	Identifier	font		10826023	0					
ANR	10826413	Argument	"""vmtx"""		10826023	1					
ANR	10826414	PrimaryExpression	"""vmtx"""		10826023	0					
ANR	10826415	Argument	& len		10826023	2					
ANR	10826416	UnaryOperationExpression	& len		10826023	0					
ANR	10826417	UnaryOperator	&		10826023	0					
ANR	10826418	Identifier	len		10826023	1					
ANR	10826419	IfStatement	if ( ofs < 0 )		10826023	2					
ANR	10826420	Condition	ofs < 0	708:12:19434:19440	10826023	0	True				
ANR	10826421	RelationalExpression	ofs < 0		10826023	0		<			
ANR	10826422	Identifier	ofs		10826023	0					
ANR	10826423	PrimaryExpression	0		10826023	1					
ANR	10826424	CompoundStatement		74:8:1640:1640	10826023	1					
ANR	10826425	ExpressionStatement	"gs_warn ( ""cannot find vmtx table"" )"	710:12:19465:19498	10826023	0	True				
ANR	10826426	CallExpression	"gs_warn ( ""cannot find vmtx table"" )"		10826023	0					
ANR	10826427	Callee	gs_warn		10826023	0					
ANR	10826428	Identifier	gs_warn		10826023	0					
ANR	10826429	ArgumentList	"""cannot find vmtx table"""		10826023	1					
ANR	10826430	Argument	"""cannot find vmtx table"""		10826023	0					
ANR	10826431	PrimaryExpression	"""cannot find vmtx table"""		10826023	0					
ANR	10826432	ReturnStatement	return ;	711:12:19512:19518	10826023	1	True				
ANR	10826433	ExpressionStatement	idx = gid	714:8:19539:19548	10826023	3	True				
ANR	10826434	AssignmentExpression	idx = gid		10826023	0		=			
ANR	10826435	Identifier	idx		10826023	0					
ANR	10826436	Identifier	gid		10826023	1					
ANR	10826437	IfStatement	if ( idx > n - 1 )		10826023	4					
ANR	10826438	Condition	idx > n - 1	715:12:19562:19572	10826023	0	True				
ANR	10826439	RelationalExpression	idx > n - 1		10826023	0		>			
ANR	10826440	Identifier	idx		10826023	0					
ANR	10826441	AdditiveExpression	n - 1		10826023	1		-			
ANR	10826442	Identifier	n		10826023	0					
ANR	10826443	PrimaryExpression	1		10826023	1					
ANR	10826444	ExpressionStatement	idx = n - 1	716:12:19587:19598	10826023	1	True				
ANR	10826445	AssignmentExpression	idx = n - 1		10826023	0		=			
ANR	10826446	Identifier	idx		10826023	0					
ANR	10826447	AdditiveExpression	n - 1		10826023	1		-			
ANR	10826448	Identifier	n		10826023	0					
ANR	10826449	PrimaryExpression	1		10826023	1					
ANR	10826450	ExpressionStatement	vadv = u16 ( font -> data + ofs + idx * 4 )	718:8:19609:19647	10826023	5	True				
ANR	10826451	AssignmentExpression	vadv = u16 ( font -> data + ofs + idx * 4 )		10826023	0		=			
ANR	10826452	Identifier	vadv		10826023	0					
ANR	10826453	CallExpression	u16 ( font -> data + ofs + idx * 4 )		10826023	1					
ANR	10826454	Callee	u16		10826023	0					
ANR	10826455	Identifier	u16		10826023	0					
ANR	10826456	ArgumentList	font -> data + ofs + idx * 4		10826023	1					
ANR	10826457	Argument	font -> data + ofs + idx * 4		10826023	0					
ANR	10826458	AdditiveExpression	font -> data + ofs + idx * 4		10826023	0		+			
ANR	10826459	PtrMemberAccess	font -> data		10826023	0					
ANR	10826460	Identifier	font		10826023	0					
ANR	10826461	Identifier	data		10826023	1					
ANR	10826462	AdditiveExpression	ofs + idx * 4		10826023	1		+			
ANR	10826463	Identifier	ofs		10826023	0					
ANR	10826464	MultiplicativeExpression	idx * 4		10826023	1		*			
ANR	10826465	Identifier	idx		10826023	0					
ANR	10826466	PrimaryExpression	4		10826023	1					
ANR	10826467	ExpressionStatement	vtop = u16 ( font -> data + ofs + idx * 4 + 2 )	719:8:19657:19699	10826023	6	True				
ANR	10826468	AssignmentExpression	vtop = u16 ( font -> data + ofs + idx * 4 + 2 )		10826023	0		=			
ANR	10826469	Identifier	vtop		10826023	0					
ANR	10826470	CallExpression	u16 ( font -> data + ofs + idx * 4 + 2 )		10826023	1					
ANR	10826471	Callee	u16		10826023	0					
ANR	10826472	Identifier	u16		10826023	0					
ANR	10826473	ArgumentList	font -> data + ofs + idx * 4 + 2		10826023	1					
ANR	10826474	Argument	font -> data + ofs + idx * 4 + 2		10826023	0					
ANR	10826475	AdditiveExpression	font -> data + ofs + idx * 4 + 2		10826023	0		+			
ANR	10826476	PtrMemberAccess	font -> data		10826023	0					
ANR	10826477	Identifier	font		10826023	0					
ANR	10826478	Identifier	data		10826023	1					
ANR	10826479	AdditiveExpression	ofs + idx * 4 + 2		10826023	1		+			
ANR	10826480	Identifier	ofs		10826023	0					
ANR	10826481	AdditiveExpression	idx * 4 + 2		10826023	1		+			
ANR	10826482	MultiplicativeExpression	idx * 4		10826023	0		*			
ANR	10826483	Identifier	idx		10826023	0					
ANR	10826484	PrimaryExpression	4		10826023	1					
ANR	10826485	PrimaryExpression	2		10826023	1					
ANR	10826486	ExpressionStatement	"glyf = xps_find_sfnt_table ( font , ""glyf"" , & len )"	721:8:19710:19756	10826023	7	True				
ANR	10826487	AssignmentExpression	"glyf = xps_find_sfnt_table ( font , ""glyf"" , & len )"		10826023	0		=			
ANR	10826488	Identifier	glyf		10826023	0					
ANR	10826489	CallExpression	"xps_find_sfnt_table ( font , ""glyf"" , & len )"		10826023	1					
ANR	10826490	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826491	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826492	ArgumentList	font		10826023	1					
ANR	10826493	Argument	font		10826023	0					
ANR	10826494	Identifier	font		10826023	0					
ANR	10826495	Argument	"""glyf"""		10826023	1					
ANR	10826496	PrimaryExpression	"""glyf"""		10826023	0					
ANR	10826497	Argument	& len		10826023	2					
ANR	10826498	UnaryOperationExpression	& len		10826023	0					
ANR	10826499	UnaryOperator	&		10826023	0					
ANR	10826500	Identifier	len		10826023	1					
ANR	10826501	ExpressionStatement	"loca = xps_find_sfnt_table ( font , ""loca"" , & len )"	722:8:19766:19812	10826023	8	True				
ANR	10826502	AssignmentExpression	"loca = xps_find_sfnt_table ( font , ""loca"" , & len )"		10826023	0		=			
ANR	10826503	Identifier	loca		10826023	0					
ANR	10826504	CallExpression	"xps_find_sfnt_table ( font , ""loca"" , & len )"		10826023	1					
ANR	10826505	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826506	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826507	ArgumentList	font		10826023	1					
ANR	10826508	Argument	font		10826023	0					
ANR	10826509	Identifier	font		10826023	0					
ANR	10826510	Argument	"""loca"""		10826023	1					
ANR	10826511	PrimaryExpression	"""loca"""		10826023	0					
ANR	10826512	Argument	& len		10826023	2					
ANR	10826513	UnaryOperationExpression	& len		10826023	0					
ANR	10826514	UnaryOperator	&		10826023	0					
ANR	10826515	Identifier	len		10826023	1					
ANR	10826516	IfStatement	if ( head > 0 && glyf > 0 && loca > 0 )		10826023	9					
ANR	10826517	Condition	head > 0 && glyf > 0 && loca > 0	723:12:19826:19857	10826023	0	True				
ANR	10826518	AndExpression	head > 0 && glyf > 0 && loca > 0		10826023	0		&&			
ANR	10826519	RelationalExpression	head > 0		10826023	0		>			
ANR	10826520	Identifier	head		10826023	0					
ANR	10826521	PrimaryExpression	0		10826023	1					
ANR	10826522	AndExpression	glyf > 0 && loca > 0		10826023	1		&&			
ANR	10826523	RelationalExpression	glyf > 0		10826023	0		>			
ANR	10826524	Identifier	glyf		10826023	0					
ANR	10826525	PrimaryExpression	0		10826023	1					
ANR	10826526	RelationalExpression	loca > 0		10826023	1		>			
ANR	10826527	Identifier	loca		10826023	0					
ANR	10826528	PrimaryExpression	0		10826023	1					
ANR	10826529	CompoundStatement		89:8:2057:2057	10826023	1					
ANR	10826530	ExpressionStatement	format = u16 ( font -> data + head + 50 )	725:12:19882:19918	10826023	0	True				
ANR	10826531	AssignmentExpression	format = u16 ( font -> data + head + 50 )		10826023	0		=			
ANR	10826532	Identifier	format		10826023	0					
ANR	10826533	CallExpression	u16 ( font -> data + head + 50 )		10826023	1					
ANR	10826534	Callee	u16		10826023	0					
ANR	10826535	Identifier	u16		10826023	0					
ANR	10826536	ArgumentList	font -> data + head + 50		10826023	1					
ANR	10826537	Argument	font -> data + head + 50		10826023	0					
ANR	10826538	AdditiveExpression	font -> data + head + 50		10826023	0		+			
ANR	10826539	PtrMemberAccess	font -> data		10826023	0					
ANR	10826540	Identifier	font		10826023	0					
ANR	10826541	Identifier	data		10826023	1					
ANR	10826542	AdditiveExpression	head + 50		10826023	1		+			
ANR	10826543	Identifier	head		10826023	0					
ANR	10826544	PrimaryExpression	50		10826023	1					
ANR	10826545	IfStatement	if ( format == 0 )		10826023	1					
ANR	10826546	Condition	format == 0	727:16:19961:19971	10826023	0	True				
ANR	10826547	EqualityExpression	format == 0		10826023	0		==			
ANR	10826548	Identifier	format		10826023	0					
ANR	10826549	PrimaryExpression	0		10826023	1					
ANR	10826550	ExpressionStatement	ofs = u16 ( font -> data + loca + gid * 2 ) * 2	728:16:19990:20032	10826023	1	True				
ANR	10826551	AssignmentExpression	ofs = u16 ( font -> data + loca + gid * 2 ) * 2		10826023	0		=			
ANR	10826552	Identifier	ofs		10826023	0					
ANR	10826553	MultiplicativeExpression	u16 ( font -> data + loca + gid * 2 ) * 2		10826023	1		*			
ANR	10826554	CallExpression	u16 ( font -> data + loca + gid * 2 )		10826023	0					
ANR	10826555	Callee	u16		10826023	0					
ANR	10826556	Identifier	u16		10826023	0					
ANR	10826557	ArgumentList	font -> data + loca + gid * 2		10826023	1					
ANR	10826558	Argument	font -> data + loca + gid * 2		10826023	0					
ANR	10826559	AdditiveExpression	font -> data + loca + gid * 2		10826023	0		+			
ANR	10826560	PtrMemberAccess	font -> data		10826023	0					
ANR	10826561	Identifier	font		10826023	0					
ANR	10826562	Identifier	data		10826023	1					
ANR	10826563	AdditiveExpression	loca + gid * 2		10826023	1		+			
ANR	10826564	Identifier	loca		10826023	0					
ANR	10826565	MultiplicativeExpression	gid * 2		10826023	1		*			
ANR	10826566	Identifier	gid		10826023	0					
ANR	10826567	PrimaryExpression	2		10826023	1					
ANR	10826568	PrimaryExpression	2		10826023	1					
ANR	10826569	ElseStatement	else		10826023	0					
ANR	10826570	ExpressionStatement	ofs = u32 ( font -> data + loca + gid * 4 )	730:16:20067:20105	10826023	0	True				
ANR	10826571	AssignmentExpression	ofs = u32 ( font -> data + loca + gid * 4 )		10826023	0		=			
ANR	10826572	Identifier	ofs		10826023	0					
ANR	10826573	CallExpression	u32 ( font -> data + loca + gid * 4 )		10826023	1					
ANR	10826574	Callee	u32		10826023	0					
ANR	10826575	Identifier	u32		10826023	0					
ANR	10826576	ArgumentList	font -> data + loca + gid * 4		10826023	1					
ANR	10826577	Argument	font -> data + loca + gid * 4		10826023	0					
ANR	10826578	AdditiveExpression	font -> data + loca + gid * 4		10826023	0		+			
ANR	10826579	PtrMemberAccess	font -> data		10826023	0					
ANR	10826580	Identifier	font		10826023	0					
ANR	10826581	Identifier	data		10826023	1					
ANR	10826582	AdditiveExpression	loca + gid * 4		10826023	1		+			
ANR	10826583	Identifier	loca		10826023	0					
ANR	10826584	MultiplicativeExpression	gid * 4		10826023	1		*			
ANR	10826585	Identifier	gid		10826023	0					
ANR	10826586	PrimaryExpression	4		10826023	1					
ANR	10826587	ExpressionStatement	ymax = u16 ( font -> data + glyf + ofs + 8 )	732:12:20120:20159	10826023	2	True				
ANR	10826588	AssignmentExpression	ymax = u16 ( font -> data + glyf + ofs + 8 )		10826023	0		=			
ANR	10826589	Identifier	ymax		10826023	0					
ANR	10826590	CallExpression	u16 ( font -> data + glyf + ofs + 8 )		10826023	1					
ANR	10826591	Callee	u16		10826023	0					
ANR	10826592	Identifier	u16		10826023	0					
ANR	10826593	ArgumentList	font -> data + glyf + ofs + 8		10826023	1					
ANR	10826594	Argument	font -> data + glyf + ofs + 8		10826023	0					
ANR	10826595	AdditiveExpression	font -> data + glyf + ofs + 8		10826023	0		+			
ANR	10826596	PtrMemberAccess	font -> data		10826023	0					
ANR	10826597	Identifier	font		10826023	0					
ANR	10826598	Identifier	data		10826023	1					
ANR	10826599	AdditiveExpression	glyf + ofs + 8		10826023	1		+			
ANR	10826600	Identifier	glyf		10826023	0					
ANR	10826601	AdditiveExpression	ofs + 8		10826023	1		+			
ANR	10826602	Identifier	ofs		10826023	0					
ANR	10826603	PrimaryExpression	8		10826023	1					
ANR	10826604	ExpressionStatement	vorg = ymax + vtop	734:12:20185:20203	10826023	3	True				
ANR	10826605	AssignmentExpression	vorg = ymax + vtop		10826023	0		=			
ANR	10826606	Identifier	vorg		10826023	0					
ANR	10826607	AdditiveExpression	ymax + vtop		10826023	1		+			
ANR	10826608	Identifier	ymax		10826023	0					
ANR	10826609	Identifier	vtop		10826023	1					
ANR	10826610	ExpressionStatement	"ofs = xps_find_sfnt_table ( font , ""VORG"" , & len )"	738:4:20226:20271	10826023	28	True				
ANR	10826611	AssignmentExpression	"ofs = xps_find_sfnt_table ( font , ""VORG"" , & len )"		10826023	0		=			
ANR	10826612	Identifier	ofs		10826023	0					
ANR	10826613	CallExpression	"xps_find_sfnt_table ( font , ""VORG"" , & len )"		10826023	1					
ANR	10826614	Callee	xps_find_sfnt_table		10826023	0					
ANR	10826615	Identifier	xps_find_sfnt_table		10826023	0					
ANR	10826616	ArgumentList	font		10826023	1					
ANR	10826617	Argument	font		10826023	0					
ANR	10826618	Identifier	font		10826023	0					
ANR	10826619	Argument	"""VORG"""		10826023	1					
ANR	10826620	PrimaryExpression	"""VORG"""		10826023	0					
ANR	10826621	Argument	& len		10826023	2					
ANR	10826622	UnaryOperationExpression	& len		10826023	0					
ANR	10826623	UnaryOperator	&		10826023	0					
ANR	10826624	Identifier	len		10826023	1					
ANR	10826625	IfStatement	if ( ofs > 0 )		10826023	29					
ANR	10826626	Condition	ofs > 0	739:8:20281:20287	10826023	0	True				
ANR	10826627	RelationalExpression	ofs > 0		10826023	0		>			
ANR	10826628	Identifier	ofs		10826023	0					
ANR	10826629	PrimaryExpression	0		10826023	1					
ANR	10826630	CompoundStatement		105:4:2483:2483	10826023	1					
ANR	10826631	ExpressionStatement	vorg = u16 ( font -> data + ofs + 6 )	741:8:20304:20336	10826023	0	True				
ANR	10826632	AssignmentExpression	vorg = u16 ( font -> data + ofs + 6 )		10826023	0		=			
ANR	10826633	Identifier	vorg		10826023	0					
ANR	10826634	CallExpression	u16 ( font -> data + ofs + 6 )		10826023	1					
ANR	10826635	Callee	u16		10826023	0					
ANR	10826636	Identifier	u16		10826023	0					
ANR	10826637	ArgumentList	font -> data + ofs + 6		10826023	1					
ANR	10826638	Argument	font -> data + ofs + 6		10826023	0					
ANR	10826639	AdditiveExpression	font -> data + ofs + 6		10826023	0		+			
ANR	10826640	PtrMemberAccess	font -> data		10826023	0					
ANR	10826641	Identifier	font		10826023	0					
ANR	10826642	Identifier	data		10826023	1					
ANR	10826643	AdditiveExpression	ofs + 6		10826023	1		+			
ANR	10826644	Identifier	ofs		10826023	0					
ANR	10826645	PrimaryExpression	6		10826023	1					
ANR	10826646	ExpressionStatement	n = u16 ( font -> data + ofs + 6 )	742:8:20346:20375	10826023	1	True				
ANR	10826647	AssignmentExpression	n = u16 ( font -> data + ofs + 6 )		10826023	0		=			
ANR	10826648	Identifier	n		10826023	0					
ANR	10826649	CallExpression	u16 ( font -> data + ofs + 6 )		10826023	1					
ANR	10826650	Callee	u16		10826023	0					
ANR	10826651	Identifier	u16		10826023	0					
ANR	10826652	ArgumentList	font -> data + ofs + 6		10826023	1					
ANR	10826653	Argument	font -> data + ofs + 6		10826023	0					
ANR	10826654	AdditiveExpression	font -> data + ofs + 6		10826023	0		+			
ANR	10826655	PtrMemberAccess	font -> data		10826023	0					
ANR	10826656	Identifier	font		10826023	0					
ANR	10826657	Identifier	data		10826023	1					
ANR	10826658	AdditiveExpression	ofs + 6		10826023	1		+			
ANR	10826659	Identifier	ofs		10826023	0					
ANR	10826660	PrimaryExpression	6		10826023	1					
ANR	10826661	ForStatement	for ( i = 0 ; i < n ; i ++ )		10826023	2					
ANR	10826662	ForInit	i = 0 ;	743:13:20390:20395	10826023	0	True				
ANR	10826663	AssignmentExpression	i = 0		10826023	0		=			
ANR	10826664	Identifier	i		10826023	0					
ANR	10826665	PrimaryExpression	0		10826023	1					
ANR	10826666	Condition	i < n	743:20:20397:20401	10826023	1	True				
ANR	10826667	RelationalExpression	i < n		10826023	0		<			
ANR	10826668	Identifier	i		10826023	0					
ANR	10826669	Identifier	n		10826023	1					
ANR	10826670	PostIncDecOperationExpression	i ++	743:27:20404:20406	10826023	2	True				
ANR	10826671	Identifier	i		10826023	0					
ANR	10826672	IncDec	++		10826023	1					
ANR	10826673	CompoundStatement		109:8:2606:2606	10826023	3					
ANR	10826674	IfStatement	if ( u16 ( font -> data + ofs + 8 + 4 * i ) == gid )		10826023	0					
ANR	10826675	Condition	u16 ( font -> data + ofs + 8 + 4 * i ) == gid	745:16:20435:20474	10826023	0	True				
ANR	10826676	EqualityExpression	u16 ( font -> data + ofs + 8 + 4 * i ) == gid		10826023	0		==			
ANR	10826677	CallExpression	u16 ( font -> data + ofs + 8 + 4 * i )		10826023	0					
ANR	10826678	Callee	u16		10826023	0					
ANR	10826679	Identifier	u16		10826023	0					
ANR	10826680	ArgumentList	font -> data + ofs + 8 + 4 * i		10826023	1					
ANR	10826681	Argument	font -> data + ofs + 8 + 4 * i		10826023	0					
ANR	10826682	AdditiveExpression	font -> data + ofs + 8 + 4 * i		10826023	0		+			
ANR	10826683	PtrMemberAccess	font -> data		10826023	0					
ANR	10826684	Identifier	font		10826023	0					
ANR	10826685	Identifier	data		10826023	1					
ANR	10826686	AdditiveExpression	ofs + 8 + 4 * i		10826023	1		+			
ANR	10826687	Identifier	ofs		10826023	0					
ANR	10826688	AdditiveExpression	8 + 4 * i		10826023	1		+			
ANR	10826689	PrimaryExpression	8		10826023	0					
ANR	10826690	MultiplicativeExpression	4 * i		10826023	1		*			
ANR	10826691	PrimaryExpression	4		10826023	0					
ANR	10826692	Identifier	i		10826023	1					
ANR	10826693	Identifier	gid		10826023	1					
ANR	10826694	CompoundStatement		111:12:2678:2678	10826023	1					
ANR	10826695	ExpressionStatement	vorg = s16 ( font -> data + ofs + 8 + 4 * i + 2 )	747:16:20507:20551	10826023	0	True				
ANR	10826696	AssignmentExpression	vorg = s16 ( font -> data + ofs + 8 + 4 * i + 2 )		10826023	0		=			
ANR	10826697	Identifier	vorg		10826023	0					
ANR	10826698	CallExpression	s16 ( font -> data + ofs + 8 + 4 * i + 2 )		10826023	1					
ANR	10826699	Callee	s16		10826023	0					
ANR	10826700	Identifier	s16		10826023	0					
ANR	10826701	ArgumentList	font -> data + ofs + 8 + 4 * i + 2		10826023	1					
ANR	10826702	Argument	font -> data + ofs + 8 + 4 * i + 2		10826023	0					
ANR	10826703	AdditiveExpression	font -> data + ofs + 8 + 4 * i + 2		10826023	0		+			
ANR	10826704	PtrMemberAccess	font -> data		10826023	0					
ANR	10826705	Identifier	font		10826023	0					
ANR	10826706	Identifier	data		10826023	1					
ANR	10826707	AdditiveExpression	ofs + 8 + 4 * i + 2		10826023	1		+			
ANR	10826708	Identifier	ofs		10826023	0					
ANR	10826709	AdditiveExpression	8 + 4 * i + 2		10826023	1		+			
ANR	10826710	PrimaryExpression	8		10826023	0					
ANR	10826711	AdditiveExpression	4 * i + 2		10826023	1		+			
ANR	10826712	MultiplicativeExpression	4 * i		10826023	0		*			
ANR	10826713	PrimaryExpression	4		10826023	0					
ANR	10826714	Identifier	i		10826023	1					
ANR	10826715	PrimaryExpression	2		10826023	1					
ANR	10826716	BreakStatement	break ;	748:16:20569:20574	10826023	1	True				
ANR	10826717	IfStatement	if ( vadv == 0 )		10826023	30					
ANR	10826718	Condition	vadv == 0	753:8:20615:20623	10826023	0	True				
ANR	10826719	EqualityExpression	vadv == 0		10826023	0		==			
ANR	10826720	Identifier	vadv		10826023	0					
ANR	10826721	PrimaryExpression	0		10826023	1					
ANR	10826722	ExpressionStatement	vadv = vorg + desc	754:8:20634:20652	10826023	1	True				
ANR	10826723	AssignmentExpression	vadv = vorg + desc		10826023	0		=			
ANR	10826724	Identifier	vadv		10826023	0					
ANR	10826725	AdditiveExpression	vorg + desc		10826023	1		+			
ANR	10826726	Identifier	vorg		10826023	0					
ANR	10826727	Identifier	desc		10826023	1					
ANR	10826728	ExpressionStatement	mtx -> hadv = hadv / ( float ) scale	756:4:20659:20691	10826023	31	True				
ANR	10826729	AssignmentExpression	mtx -> hadv = hadv / ( float ) scale		10826023	0		=			
ANR	10826730	PtrMemberAccess	mtx -> hadv		10826023	0					
ANR	10826731	Identifier	mtx		10826023	0					
ANR	10826732	Identifier	hadv		10826023	1					
ANR	10826733	MultiplicativeExpression	hadv / ( float ) scale		10826023	1		/			
ANR	10826734	Identifier	hadv		10826023	0					
ANR	10826735	CastExpression	( float ) scale		10826023	1					
ANR	10826736	CastTarget	float		10826023	0					
ANR	10826737	Identifier	scale		10826023	1					
ANR	10826738	ExpressionStatement	mtx -> vadv = vadv / ( float ) scale	757:4:20697:20729	10826023	32	True				
ANR	10826739	AssignmentExpression	mtx -> vadv = vadv / ( float ) scale		10826023	0		=			
ANR	10826740	PtrMemberAccess	mtx -> vadv		10826023	0					
ANR	10826741	Identifier	mtx		10826023	0					
ANR	10826742	Identifier	vadv		10826023	1					
ANR	10826743	MultiplicativeExpression	vadv / ( float ) scale		10826023	1		/			
ANR	10826744	Identifier	vadv		10826023	0					
ANR	10826745	CastExpression	( float ) scale		10826023	1					
ANR	10826746	CastTarget	float		10826023	0					
ANR	10826747	Identifier	scale		10826023	1					
ANR	10826748	ExpressionStatement	mtx -> vorg = vorg / ( float ) scale	758:4:20735:20767	10826023	33	True				
ANR	10826749	AssignmentExpression	mtx -> vorg = vorg / ( float ) scale		10826023	0		=			
ANR	10826750	PtrMemberAccess	mtx -> vorg		10826023	0					
ANR	10826751	Identifier	mtx		10826023	0					
ANR	10826752	Identifier	vorg		10826023	1					
ANR	10826753	MultiplicativeExpression	vorg / ( float ) scale		10826023	1		/			
ANR	10826754	Identifier	vorg		10826023	0					
ANR	10826755	CastExpression	( float ) scale		10826023	1					
ANR	10826756	CastTarget	float		10826023	0					
ANR	10826757	Identifier	scale		10826023	1					
ANR	10826758	ReturnType	void		10826023	1					
ANR	10826759	Identifier	xps_measure_font_glyph		10826023	2					
ANR	10826760	ParameterList	"xps_context_t * ctx , xps_font_t * font , int gid , xps_glyph_metrics_t * mtx"		10826023	3					
ANR	10826761	Parameter	xps_context_t * ctx	635:23:17737:17754	10826023	0	True				
ANR	10826762	ParameterType	xps_context_t *		10826023	0					
ANR	10826763	Identifier	ctx		10826023	1					
ANR	10826764	Parameter	xps_font_t * font	635:43:17757:17772	10826023	1	True				
ANR	10826765	ParameterType	xps_font_t *		10826023	0					
ANR	10826766	Identifier	font		10826023	1					
ANR	10826767	Parameter	int gid	635:61:17775:17781	10826023	2	True				
ANR	10826768	ParameterType	int		10826023	0					
ANR	10826769	Identifier	gid		10826023	1					
ANR	10826770	Parameter	xps_glyph_metrics_t * mtx	635:70:17784:17807	10826023	3	True				
ANR	10826771	ParameterType	xps_glyph_metrics_t *		10826023	0					
ANR	10826772	Identifier	mtx		10826023	1					
ANR	10826773	CFGEntryNode	ENTRY		10826023		True				
ANR	10826774	CFGExitNode	EXIT		10826023		True				
ANR	10826775	Symbol	glyf		10826023						
ANR	10826776	Symbol	mtx -> vadv		10826023						
ANR	10826777	Symbol	gid		10826023						
ANR	10826778	Symbol	scale		10826023						
ANR	10826779	Symbol	vadv		10826023						
ANR	10826780	Symbol	head		10826023						
ANR	10826781	Symbol	loca		10826023						
ANR	10826782	Symbol	len		10826023						
ANR	10826783	Symbol	u32		10826023						
ANR	10826784	Symbol	vorg		10826023						
ANR	10826785	Symbol	s16		10826023						
ANR	10826786	Symbol	* font		10826023						
ANR	10826787	Symbol	u16		10826023						
ANR	10826788	Symbol	* mtx		10826023						
ANR	10826789	Symbol	ctx		10826023						
ANR	10826790	Symbol	format		10826023						
ANR	10826791	Symbol	vtop		10826023						
ANR	10826792	Symbol	i		10826023						
ANR	10826793	Symbol	n		10826023						
ANR	10826794	Symbol	mtx -> vorg		10826023						
ANR	10826795	Symbol	mtx		10826023						
ANR	10826796	Symbol	mtx -> hadv		10826023						
ANR	10826797	Symbol	ymax		10826023						
ANR	10826798	Symbol	font -> data		10826023						
ANR	10826799	Symbol	hadv		10826023						
ANR	10826800	Symbol	idx		10826023						
ANR	10826801	Symbol	& len		10826023						
ANR	10826802	Symbol	ofs		10826023						
ANR	10826803	Symbol	xps_find_sfnt_table		10826023						
ANR	10826804	Symbol	font		10826023						
ANR	10826805	Symbol	desc		10826023						
