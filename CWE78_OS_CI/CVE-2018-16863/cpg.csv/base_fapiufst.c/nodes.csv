command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	152454	File	data/converged/CVE-2018-16863_ghostpdl/base_fapiufst.c								
ANR	152455	DeclStmt									
ANR	152456	Decl							UW16 CGENTRY	UW16 CGENTRY ( FSP PFONTCONTEXT fc )	CGIFFfont
ANR	152457	DeclStmt									
ANR	152458	Decl							UW16 CGENTRY	UW16 CGENTRY ( fc )	CGIFFfont
ANR	152459	DeclStmt									
ANR	152460	Decl							PFONTCONTEXT	PFONTCONTEXT	fc
ANR	152461	DeclStmt									
ANR	152462	Decl							struct fapi_ufst_server_s	struct fapi_ufst_server_s	fapi_ufst_server
ANR	152463	DeclStmt									
ANR	152464	Decl							unsigned int	unsigned int	font_ids
ANR	152465	DeclStmt									
ANR	152466	Decl							define FSA_FROM_SERVER IF_STATE	define FSA_FROM_SERVER IF_STATE *	pIFS
ANR	152467	DeclStmt									
ANR	152468	Decl							define FSA_FROM_SERVER IF_STATE	define FSA_FROM_SERVER IF_STATE *	pIFS
ANR	152469	DeclStmt									
ANR	152470	Decl							fapi_ufst_server	fapi_ufst_server *	static_server_ptr_for_ufst_callback
ANR	152471	DeclStmt									
ANR	152472	Decl							GLOBAL UW16	"GLOBAL UW16 ( FSP LPUB8 p , UW16 gifct )"	PCLswapHdr
ANR	152473	DeclStmt									
ANR	152474	Decl							struct pcleo_glyph_list_elem_s	struct pcleo_glyph_list_elem_s	pcleo_glyph_list_elem
ANR	152475	ClassDef	pcleo_glyph_list_elem_s	132:0:3277:3414							
ANR	152476	DeclStmt									
ANR	152477	Decl							UW16	UW16	chId
ANR	152478	DeclStmt									
ANR	152479	Decl							pcleo_glyph_list_elem	pcleo_glyph_list_elem *	next
ANR	152480	ClassDef	<unnamed>	139:8:3426:3712							
ANR	152481	DeclStmt									
ANR	152482	Decl							SL32	SL32	font_id
ANR	152483	DeclStmt									
ANR	152484	Decl							uint	uint	tt_font_body_offset
ANR	152485	DeclStmt									
ANR	152486	Decl							UW16	UW16	is_disk_font
ANR	152487	DeclStmt									
ANR	152488	Decl							UW16	UW16	font_type
ANR	152489	DeclStmt									
ANR	152490	Decl							UW16	UW16	platformId
ANR	152491	DeclStmt									
ANR	152492	Decl							UW16	UW16	specificId
ANR	152493	DeclStmt									
ANR	152494	Decl							pcleo_glyph_list_elem	pcleo_glyph_list_elem *	glyphs
ANR	152495	DeclStmt									
ANR	152496	Decl							char	char [ 40 ]	decodingID
ANR	152497	DeclStmt									
ANR	152498	Decl							TTFONTINFOTYPE	TTFONTINFOTYPE *	ufstfontinfo
ANR	152499	DeclStmt									
ANR	152500	Decl							UW16	UW16	ufstfontinfosize
ANR	152501	DeclStmt									
ANR	152502	Decl									ufst_common_font_data
ANR	152503	ClassDef	<unnamed>	153:8:3723:3829							
ANR	152504	DeclStmt									
ANR	152505	Decl							PCLETTO_CHR_HDR	PCLETTO_CHR_HDR	h
ANR	152506	DeclStmt									
ANR	152507	Decl							UW16	UW16	add_data
ANR	152508	DeclStmt									
ANR	152509	Decl							UW16	UW16	charDataSize
ANR	152510	DeclStmt									
ANR	152511	Decl							UW16	UW16	glyphID
ANR	152512	DeclStmt									
ANR	152513	Decl									PCLETTO_CHDR
ANR	152514	ClassDef	fapi_ufst_server_s	161:0:3832:4301							
ANR	152515	DeclStmt									
ANR	152516	Decl							gs_fapi_server	gs_fapi_server	If
ANR	152517	DeclStmt									
ANR	152518	Decl							int	int	bInitialized
ANR	152519	DeclStmt									
ANR	152520	Decl							gs_fapi_font	gs_fapi_font *	ff
ANR	152521	DeclStmt									
ANR	152522	Decl							gs_memory_t	gs_memory_t *	mem
ANR	152523	DeclStmt									
ANR	152524	Decl							byte	byte *	param
ANR	152525	DeclStmt									
ANR	152526	Decl							int	int	param_size
ANR	152527	DeclStmt									
ANR	152528	Decl							IF_STATE	IF_STATE	IFS
ANR	152529	DeclStmt									
ANR	152530	Decl							FONTCONTEXT	FONTCONTEXT	fc
ANR	152531	DeclStmt									
ANR	152532	Decl							void	void *	char_data
ANR	152533	DeclStmt									
ANR	152534	Decl							bool	bool	bRaster
ANR	152535	DeclStmt									
ANR	152536	Decl							bool	bool	ufst_is_singleton
ANR	152537	DeclStmt									
ANR	152538	Decl							double	double	tran_xx
ANR	152539	Decl							double	double	tran_xy
ANR	152540	Decl							double	double	tran_yx
ANR	152541	Decl							double	double	tran_yy
ANR	152542	DeclStmt									
ANR	152543	Decl							fco_list_elem	fco_list_elem *	fco_list
ANR	152544	DeclStmt									
ANR	152545	Decl							gs_fapi_retcode	gs_fapi_retcode	callback_error
ANR	152546	DeclStmt									
ANR	152547	Decl							gs_fapi_metrics_type	gs_fapi_metrics_type	metrics_type
ANR	152548	DeclStmt									
ANR	152549	Decl							fracint	fracint	sb_x
ANR	152550	Decl							fracint	fracint	aw_x
ANR	152551	DeclStmt									
ANR	152552	Decl							void	void ( fapi_ufst_server * r )	gs_fapi_ufst_release_char_data_inline
ANR	152553	DeclStmt									
ANR	152554	Decl							void	"void ( fapi_ufst_server * r , ufst_common_font_data * d )"	release_glyphs
ANR	152555	Function	If_to_I	186:0:4483:4583							
ANR	152556	FunctionDef	If_to_I (gs_fapi_server * If)		152555	0					
ANR	152557	CompoundStatement		188:0:4545:4583	152555	0					
ANR	152558	ReturnStatement	return ( fapi_ufst_server * ) If ;	189:4:4551:4581	152555	0	True				
ANR	152559	CastExpression	( fapi_ufst_server * ) If		152555	0					
ANR	152560	CastTarget	fapi_ufst_server *		152555	0					
ANR	152561	Identifier	If		152555	1					
ANR	152562	ReturnType	static inline fapi_ufst_server *		152555	1					
ANR	152563	Identifier	If_to_I		152555	2					
ANR	152564	ParameterList	gs_fapi_server * If		152555	3					
ANR	152565	Parameter	gs_fapi_server * If	187:8:4524:4542	152555	0	True				
ANR	152566	ParameterType	gs_fapi_server *		152555	0					
ANR	152567	Identifier	If		152555	1					
ANR	152568	CFGEntryNode	ENTRY		152555		True				
ANR	152569	CFGExitNode	EXIT		152555		True				
ANR	152570	Symbol	If		152555						
ANR	152571	Function	IFS_to_I	192:0:4586:4763							
ANR	152572	FunctionDef	IFS_to_I (IF_STATE * pIFS)		152571	0					
ANR	152573	CompoundStatement		194:0:4645:4763	152571	0					
ANR	152574	ReturnStatement	"return ( fapi_ufst_server * ) ( ( char * ) pIFS - offset_of ( fapi_ufst_server , IFS ) ) ;"	195:4:4651:4761	152571	0	True				
ANR	152575	CastExpression	"( fapi_ufst_server * ) ( ( char * ) pIFS - offset_of ( fapi_ufst_server , IFS ) )"		152571	0					
ANR	152576	CastTarget	fapi_ufst_server *		152571	0					
ANR	152577	AdditiveExpression	"( char * ) pIFS - offset_of ( fapi_ufst_server , IFS )"		152571	1		-			
ANR	152578	CastExpression	( char * ) pIFS		152571	0					
ANR	152579	CastTarget	char *		152571	0					
ANR	152580	Identifier	pIFS		152571	1					
ANR	152581	CallExpression	"offset_of ( fapi_ufst_server , IFS )"		152571	1					
ANR	152582	Callee	offset_of		152571	0					
ANR	152583	Identifier	offset_of		152571	0					
ANR	152584	ArgumentList	fapi_ufst_server		152571	1					
ANR	152585	Argument	fapi_ufst_server		152571	0					
ANR	152586	Identifier	fapi_ufst_server		152571	0					
ANR	152587	Argument	IFS		152571	1					
ANR	152588	Identifier	IFS		152571	0					
ANR	152589	ReturnType	static inline fapi_ufst_server *		152571	1					
ANR	152590	Identifier	IFS_to_I		152571	2					
ANR	152591	ParameterList	IF_STATE * pIFS		152571	3					
ANR	152592	Parameter	IF_STATE * pIFS	193:9:4628:4642	152571	0	True				
ANR	152593	ParameterType	IF_STATE *		152571	0					
ANR	152594	Identifier	pIFS		152571	1					
ANR	152595	CFGEntryNode	ENTRY		152571		True				
ANR	152596	CFGExitNode	EXIT		152571		True				
ANR	152597	Symbol	fapi_ufst_server		152571						
ANR	152598	Symbol	offset_of		152571						
ANR	152599	Symbol	pIFS		152571						
ANR	152600	Symbol	IFS		152571						
ANR	152601	Function	assign_font_id	200:0:4835:5252							
ANR	152602	FunctionDef	assign_font_id ()		152601	0					
ANR	152603	CompoundStatement		202:0:4874:5252	152601	0					
ANR	152604	IfStatement	if ( ( -- font_ids ) <= ( 5 << 16 ) )		152601	0					
ANR	152605	Condition	( -- font_ids ) <= ( 5 << 16 )	206:8:4988:5012	152601	0	True				
ANR	152606	RelationalExpression	( -- font_ids ) <= ( 5 << 16 )		152601	0		<=			
ANR	152607	UnaryExpression	-- font_ids		152601	0					
ANR	152608	IncDec	--		152601	0					
ANR	152609	Identifier	font_ids		152601	1					
ANR	152610	ShiftExpression	5 << 16		152601	1		<<			
ANR	152611	PrimaryExpression	5		152601	0					
ANR	152612	PrimaryExpression	16		152601	1					
ANR	152613	CompoundStatement		5:35:140:140	152601	1					
ANR	152614	ExpressionStatement	font_ids = 0x7fffffff	211:8:5200:5221	152601	0	True				
ANR	152615	AssignmentExpression	font_ids = 0x7fffffff		152601	0		=			
ANR	152616	Identifier	font_ids		152601	0					
ANR	152617	PrimaryExpression	0x7fffffff		152601	1					
ANR	152618	ReturnStatement	return ( font_ids ) ;	213:4:5233:5250	152601	1	True				
ANR	152619	Identifier	font_ids		152601	0					
ANR	152620	ReturnType	static inline int		152601	1					
ANR	152621	Identifier	assign_font_id		152601	2					
ANR	152622	ParameterList			152601	3					
ANR	152623	CFGEntryNode	ENTRY		152601		True				
ANR	152624	CFGExitNode	EXIT		152601		True				
ANR	152625	Symbol	font_ids		152601						
ANR	152626	Function	gs_fapi_ufst_release_char_data_inline	218:0:5339:6615							
ANR	152627	FunctionDef	gs_fapi_ufst_release_char_data_inline (fapi_ufst_server * r)		152626	0					
ANR	152628	CompoundStatement		220:0:5418:6615	152626	0					
ANR	152629	IfStatement	if ( r -> char_data != NULL )		152626	0					
ANR	152630	Condition	r -> char_data != NULL	231:8:6485:6504	152626	0	True				
ANR	152631	EqualityExpression	r -> char_data != NULL		152626	0		!=			
ANR	152632	PtrMemberAccess	r -> char_data		152626	0					
ANR	152633	Identifier	r		152626	0					
ANR	152634	Identifier	char_data		152626	1					
ANR	152635	Identifier	NULL		152626	1					
ANR	152636	CompoundStatement		12:30:1088:1088	152626	1					
ANR	152637	ExpressionStatement	FSA_FROM_SERVER	232:8:6517:6532	152626	0	True				
ANR	152638	Identifier	FSA_FROM_SERVER		152626	0					
ANR	152639	Statement	CHARfree	234:8:6543:6550	152626	1	True				
ANR	152640	Statement	(	234:16:6551:6551	152626	2	True				
ANR	152641	Statement	FSA	234:17:6552:6554	152626	3	True				
ANR	152642	Statement	(	234:20:6555:6555	152626	4	True				
ANR	152643	Statement	MEM_HANDLE	234:21:6556:6565	152626	5	True				
ANR	152644	Statement	)	234:31:6566:6566	152626	6	True				
ANR	152645	Statement	r	234:33:6568:6568	152626	7	True				
ANR	152646	Statement	->	234:34:6569:6570	152626	8	True				
ANR	152647	Statement	char_data	234:36:6571:6579	152626	9	True				
ANR	152648	Statement	)	234:45:6580:6580	152626	10	True				
ANR	152649	ExpressionStatement		234:46:6581:6581	152626	11	True				
ANR	152650	ExpressionStatement	r -> char_data = 0	235:8:6591:6607	152626	12	True				
ANR	152651	AssignmentExpression	r -> char_data = 0		152626	0		=			
ANR	152652	PtrMemberAccess	r -> char_data		152626	0					
ANR	152653	Identifier	r		152626	0					
ANR	152654	Identifier	char_data		152626	1					
ANR	152655	PrimaryExpression	0		152626	1					
ANR	152656	ReturnType	static inline void		152626	1					
ANR	152657	Identifier	gs_fapi_ufst_release_char_data_inline		152626	2					
ANR	152658	ParameterList	fapi_ufst_server * r		152626	3					
ANR	152659	Parameter	fapi_ufst_server * r	219:38:5396:5415	152626	0	True				
ANR	152660	ParameterType	fapi_ufst_server *		152626	0					
ANR	152661	Identifier	r		152626	1					
ANR	152662	CFGEntryNode	ENTRY		152626		True				
ANR	152663	CFGExitNode	EXIT		152626		True				
ANR	152664	Symbol	r		152626						
ANR	152665	Symbol	NULL		152626						
ANR	152666	Symbol	* r		152626						
ANR	152667	Symbol	r -> char_data		152626						
ANR	152668	Function	open_UFST	247:0:7044:9810							
ANR	152669	FunctionDef	"open_UFST (fapi_ufst_server * r , const byte * server_param , int server_param_size)"		152668	0					
ANR	152670	CompoundStatement		250:0:7159:9810	152668	0					
ANR	152671	IdentifierDeclStatement	int code ;	251:4:7165:7173	152668	0	True				
ANR	152672	IdentifierDecl	code		152668	0					
ANR	152673	IdentifierDeclType	int		152668	0					
ANR	152674	Identifier	code		152668	1					
ANR	152675	IdentifierDeclStatement	SW16 fcHandle ;	252:4:7179:7192	152668	1	True				
ANR	152676	IdentifierDecl	fcHandle		152668	0					
ANR	152677	IdentifierDeclType	SW16		152668	0					
ANR	152678	Identifier	fcHandle		152668	1					
ANR	152679	IdentifierDeclStatement	int l ;	253:4:7198:7203	152668	2	True				
ANR	152680	IdentifierDecl	l		152668	0					
ANR	152681	IdentifierDeclType	int		152668	0					
ANR	152682	Identifier	l		152668	1					
ANR	152683	IdentifierDeclStatement	"char ufst_root_dir [ 1024 ] = """" ;"	254:4:7209:7238	152668	3	True				
ANR	152684	IdentifierDecl	"ufst_root_dir [ 1024 ] = """""		152668	0					
ANR	152685	IdentifierDeclType	char [ 1024 ]		152668	0					
ANR	152686	Identifier	ufst_root_dir		152668	1					
ANR	152687	PrimaryExpression	1024		152668	2					
ANR	152688	AssignmentExpression	"ufst_root_dir [ 1024 ] = """""		152668	3		=			
ANR	152689	Identifier	ufst_root_dir		152668	0					
ANR	152690	PrimaryExpression	""""""		152668	1					
ANR	152691	IdentifierDeclStatement	"char sPlugIn [ 1024 ] = """" ;"	255:4:7244:7267	152668	4	True				
ANR	152692	IdentifierDecl	"sPlugIn [ 1024 ] = """""		152668	0					
ANR	152693	IdentifierDeclType	char [ 1024 ]		152668	0					
ANR	152694	Identifier	sPlugIn		152668	1					
ANR	152695	PrimaryExpression	1024		152668	2					
ANR	152696	AssignmentExpression	"sPlugIn [ 1024 ] = """""		152668	3		=			
ANR	152697	Identifier	sPlugIn		152668	0					
ANR	152698	PrimaryExpression	""""""		152668	1					
ANR	152699	IdentifierDeclStatement	bool bSSdir = FALSE ;	257:4:7296:7315	152668	5	True				
ANR	152700	IdentifierDecl	bSSdir = FALSE		152668	0					
ANR	152701	IdentifierDeclType	bool		152668	0					
ANR	152702	Identifier	bSSdir		152668	1					
ANR	152703	AssignmentExpression	bSSdir = FALSE		152668	2		=			
ANR	152704	Identifier	FALSE		152668	0					
ANR	152705	Identifier	FALSE		152668	1					
ANR	152706	IdentifierDeclStatement	bool bPlugIn = FALSE ;	259:4:7328:7348	152668	6	True				
ANR	152707	IdentifierDecl	bPlugIn = FALSE		152668	0					
ANR	152708	IdentifierDeclType	bool		152668	0					
ANR	152709	Identifier	bPlugIn		152668	1					
ANR	152710	AssignmentExpression	bPlugIn = FALSE		152668	2		=			
ANR	152711	Identifier	FALSE		152668	0					
ANR	152712	Identifier	FALSE		152668	1					
ANR	152713	IdentifierDeclStatement	"const char * keySSdir = ""UFST_SSdir="" ;"	260:4:7354:7390	152668	7	True				
ANR	152714	IdentifierDecl	"* keySSdir = ""UFST_SSdir="""		152668	0					
ANR	152715	IdentifierDeclType	const char *		152668	0					
ANR	152716	Identifier	keySSdir		152668	1					
ANR	152717	AssignmentExpression	"* keySSdir = ""UFST_SSdir="""		152668	2		=			
ANR	152718	Identifier	keySSdir		152668	0					
ANR	152719	PrimaryExpression	"""UFST_SSdir="""		152668	1					
ANR	152720	IdentifierDeclStatement	const int keySSdir_length = strlen ( keySSdir ) ;	261:4:7396:7440	152668	8	True				
ANR	152721	IdentifierDecl	keySSdir_length = strlen ( keySSdir )		152668	0					
ANR	152722	IdentifierDeclType	const int		152668	0					
ANR	152723	Identifier	keySSdir_length		152668	1					
ANR	152724	AssignmentExpression	keySSdir_length = strlen ( keySSdir )		152668	2		=			
ANR	152725	Identifier	keySSdir_length		152668	0					
ANR	152726	CallExpression	strlen ( keySSdir )		152668	1					
ANR	152727	Callee	strlen		152668	0					
ANR	152728	Identifier	strlen		152668	0					
ANR	152729	ArgumentList	keySSdir		152668	1					
ANR	152730	Argument	keySSdir		152668	0					
ANR	152731	Identifier	keySSdir		152668	0					
ANR	152732	IdentifierDeclStatement	"const char * keyPlugIn = ""UFST_PlugIn="" ;"	262:4:7446:7484	152668	9	True				
ANR	152733	IdentifierDecl	"* keyPlugIn = ""UFST_PlugIn="""		152668	0					
ANR	152734	IdentifierDeclType	const char *		152668	0					
ANR	152735	Identifier	keyPlugIn		152668	1					
ANR	152736	AssignmentExpression	"* keyPlugIn = ""UFST_PlugIn="""		152668	2		=			
ANR	152737	Identifier	keyPlugIn		152668	0					
ANR	152738	PrimaryExpression	"""UFST_PlugIn="""		152668	1					
ANR	152739	IdentifierDeclStatement	const int keyPlugIn_length = strlen ( keyPlugIn ) ;	263:4:7490:7536	152668	10	True				
ANR	152740	IdentifierDecl	keyPlugIn_length = strlen ( keyPlugIn )		152668	0					
ANR	152741	IdentifierDeclType	const int		152668	0					
ANR	152742	Identifier	keyPlugIn_length		152668	1					
ANR	152743	AssignmentExpression	keyPlugIn_length = strlen ( keyPlugIn )		152668	2		=			
ANR	152744	Identifier	keyPlugIn_length		152668	0					
ANR	152745	CallExpression	strlen ( keyPlugIn )		152668	1					
ANR	152746	Callee	strlen		152668	0					
ANR	152747	Identifier	strlen		152668	0					
ANR	152748	ArgumentList	keyPlugIn		152668	1					
ANR	152749	Argument	keyPlugIn		152668	0					
ANR	152750	Identifier	keyPlugIn		152668	0					
ANR	152751	IdentifierDeclStatement	const char sep = gp_file_name_list_separator ;	264:4:7542:7586	152668	11	True				
ANR	152752	IdentifierDecl	sep = gp_file_name_list_separator		152668	0					
ANR	152753	IdentifierDeclType	const char		152668	0					
ANR	152754	Identifier	sep		152668	1					
ANR	152755	AssignmentExpression	sep = gp_file_name_list_separator		152668	2		=			
ANR	152756	Identifier	gp_file_name_list_separator		152668	0					
ANR	152757	Identifier	gp_file_name_list_separator		152668	1					
ANR	152758	IdentifierDeclStatement	"const byte * p = server_param , * e = server_param + server_param_size , * q ;"	265:4:7592:7663	152668	12	True				
ANR	152759	IdentifierDecl	* p = server_param		152668	0					
ANR	152760	IdentifierDeclType	const byte *		152668	0					
ANR	152761	Identifier	p		152668	1					
ANR	152762	AssignmentExpression	* p = server_param		152668	2		=			
ANR	152763	Identifier	server_param		152668	0					
ANR	152764	Identifier	server_param		152668	1					
ANR	152765	IdentifierDecl	* e = server_param + server_param_size		152668	1					
ANR	152766	IdentifierDeclType	const byte *		152668	0					
ANR	152767	Identifier	e		152668	1					
ANR	152768	AssignmentExpression	* e = server_param + server_param_size		152668	2		=			
ANR	152769	Identifier	e		152668	0					
ANR	152770	AdditiveExpression	server_param + server_param_size		152668	1		+			
ANR	152771	Identifier	server_param		152668	0					
ANR	152772	Identifier	server_param_size		152668	1					
ANR	152773	IdentifierDecl	* q		152668	2					
ANR	152774	IdentifierDeclType	const byte *		152668	0					
ANR	152775	Identifier	q		152668	1					
ANR	152776	ExpressionStatement	FSA_FROM_SERVER	267:4:7670:7685	152668	13	True				
ANR	152777	Identifier	FSA_FROM_SERVER		152668	0					
ANR	152778	IfStatement	if ( server_param_size > 0 && server_param )		152668	14					
ANR	152779	Condition	server_param_size > 0 && server_param	269:8:7696:7732	152668	0	True				
ANR	152780	AndExpression	server_param_size > 0 && server_param		152668	0		&&			
ANR	152781	RelationalExpression	server_param_size > 0		152668	0		>			
ANR	152782	Identifier	server_param_size		152668	0					
ANR	152783	PrimaryExpression	0		152668	1					
ANR	152784	Identifier	server_param		152668	1					
ANR	152785	CompoundStatement		20:47:575:575	152668	1					
ANR	152786	ExpressionStatement	"r -> param = ( byte * ) gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"	270:8:7745:7833	152668	0	True				
ANR	152787	AssignmentExpression	"r -> param = ( byte * ) gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"		152668	0		=			
ANR	152788	PtrMemberAccess	r -> param		152668	0					
ANR	152789	Identifier	r		152668	0					
ANR	152790	Identifier	param		152668	1					
ANR	152791	CastExpression	"( byte * ) gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"		152668	1					
ANR	152792	CastTarget	byte *		152668	0					
ANR	152793	CallExpression	"gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"		152668	1					
ANR	152794	Callee	gs_malloc		152668	0					
ANR	152795	Identifier	gs_malloc		152668	0					
ANR	152796	ArgumentList	r -> mem		152668	1					
ANR	152797	Argument	r -> mem		152668	0					
ANR	152798	PtrMemberAccess	r -> mem		152668	0					
ANR	152799	Identifier	r		152668	0					
ANR	152800	Identifier	mem		152668	1					
ANR	152801	Argument	server_param_size		152668	1					
ANR	152802	Identifier	server_param_size		152668	0					
ANR	152803	Argument	1		152668	2					
ANR	152804	PrimaryExpression	1		152668	0					
ANR	152805	Argument	"""server_params"""		152668	3					
ANR	152806	PrimaryExpression	"""server_params"""		152668	0					
ANR	152807	IfStatement	if ( ! r -> param )		152668	1					
ANR	152808	Condition	! r -> param	272:12:7847:7855	152668	0	True				
ANR	152809	UnaryOperationExpression	! r -> param		152668	0					
ANR	152810	UnaryOperator	!		152668	0					
ANR	152811	PtrMemberAccess	r -> param		152668	1					
ANR	152812	Identifier	r		152668	0					
ANR	152813	Identifier	param		152668	1					
ANR	152814	CompoundStatement		23:23:698:698	152668	1					
ANR	152815	ExpressionStatement	return_error ( gs_error_VMerror )	273:12:7872:7902	152668	0	True				
ANR	152816	CallExpression	return_error ( gs_error_VMerror )		152668	0					
ANR	152817	Callee	return_error		152668	0					
ANR	152818	Identifier	return_error		152668	0					
ANR	152819	ArgumentList	gs_error_VMerror		152668	1					
ANR	152820	Argument	gs_error_VMerror		152668	0					
ANR	152821	Identifier	gs_error_VMerror		152668	0					
ANR	152822	ExpressionStatement	"memcpy ( r -> param , server_param , server_param_size )"	275:8:7922:7971	152668	2	True				
ANR	152823	CallExpression	"memcpy ( r -> param , server_param , server_param_size )"		152668	0					
ANR	152824	Callee	memcpy		152668	0					
ANR	152825	Identifier	memcpy		152668	0					
ANR	152826	ArgumentList	r -> param		152668	1					
ANR	152827	Argument	r -> param		152668	0					
ANR	152828	PtrMemberAccess	r -> param		152668	0					
ANR	152829	Identifier	r		152668	0					
ANR	152830	Identifier	param		152668	1					
ANR	152831	Argument	server_param		152668	1					
ANR	152832	Identifier	server_param		152668	0					
ANR	152833	Argument	server_param_size		152668	2					
ANR	152834	Identifier	server_param_size		152668	0					
ANR	152835	ExpressionStatement	r -> param_size = server_param_size	276:8:7981:8014	152668	3	True				
ANR	152836	AssignmentExpression	r -> param_size = server_param_size		152668	0		=			
ANR	152837	PtrMemberAccess	r -> param_size		152668	0					
ANR	152838	Identifier	r		152668	0					
ANR	152839	Identifier	param_size		152668	1					
ANR	152840	Identifier	server_param_size		152668	1					
ANR	152841	ForStatement	for ( ; p < e ; p = q + 1 )		152668	15					
ANR	152842	Condition	p < e	279:11:8034:8038	152668	0	True				
ANR	152843	RelationalExpression	p < e		152668	0		<			
ANR	152844	Identifier	p		152668	0					
ANR	152845	Identifier	e		152668	1					
ANR	152846	AssignmentExpression	p = q + 1	279:18:8041:8049	152668	1	True	=			
ANR	152847	Identifier	p		152668	0					
ANR	152848	AdditiveExpression	q + 1		152668	1		+			
ANR	152849	Identifier	q		152668	0					
ANR	152850	PrimaryExpression	1		152668	1					
ANR	152851	CompoundStatement		30:29:892:892	152668	2					
ANR	152852	ForStatement	for ( q = p ; q < e && * q != sep ; q ++ )		152668	0					
ANR	152853	ForInit	q = p ;	280:13:8067:8072	152668	0	True				
ANR	152854	AssignmentExpression	q = p		152668	0		=			
ANR	152855	Identifier	q		152668	0					
ANR	152856	Identifier	p		152668	1					
ANR	152857	Condition	q < e && * q != sep	280:20:8074:8091	152668	1	True				
ANR	152858	AndExpression	q < e && * q != sep		152668	0		&&			
ANR	152859	RelationalExpression	q < e		152668	0		<			
ANR	152860	Identifier	q		152668	0					
ANR	152861	Identifier	e		152668	1					
ANR	152862	EqualityExpression	* q != sep		152668	1		!=			
ANR	152863	UnaryOperationExpression	* q		152668	0					
ANR	152864	UnaryOperator	*		152668	0					
ANR	152865	Identifier	q		152668	1					
ANR	152866	Identifier	sep		152668	1					
ANR	152867	PostIncDecOperationExpression	q ++	280:40:8094:8096	152668	2	True				
ANR	152868	Identifier	q		152668	0					
ANR	152869	IncDec	++		152668	1					
ANR	152870	ExpressionStatement		281:29:8128:8128	152668	3	True				
ANR	152871	ExpressionStatement	l = q - p	282:8:8138:8147	152668	1	True				
ANR	152872	AssignmentExpression	l = q - p		152668	0		=			
ANR	152873	Identifier	l		152668	0					
ANR	152874	AdditiveExpression	q - p		152668	1		-			
ANR	152875	Identifier	q		152668	0					
ANR	152876	Identifier	p		152668	1					
ANR	152877	IfStatement	"if ( l > keySSdir_length && ! memcmp ( p , keySSdir , keySSdir_length ) )"		152668	2					
ANR	152878	Condition	"l > keySSdir_length && ! memcmp ( p , keySSdir , keySSdir_length )"	283:12:8161:8220	152668	0	True				
ANR	152879	AndExpression	"l > keySSdir_length && ! memcmp ( p , keySSdir , keySSdir_length )"		152668	0		&&			
ANR	152880	RelationalExpression	l > keySSdir_length		152668	0		>			
ANR	152881	Identifier	l		152668	0					
ANR	152882	Identifier	keySSdir_length		152668	1					
ANR	152883	UnaryOperationExpression	"! memcmp ( p , keySSdir , keySSdir_length )"		152668	1					
ANR	152884	UnaryOperator	!		152668	0					
ANR	152885	CallExpression	"memcmp ( p , keySSdir , keySSdir_length )"		152668	1					
ANR	152886	Callee	memcmp		152668	0					
ANR	152887	Identifier	memcmp		152668	0					
ANR	152888	ArgumentList	p		152668	1					
ANR	152889	Argument	p		152668	0					
ANR	152890	Identifier	p		152668	0					
ANR	152891	Argument	keySSdir		152668	1					
ANR	152892	Identifier	keySSdir		152668	0					
ANR	152893	Argument	keySSdir_length		152668	2					
ANR	152894	Identifier	keySSdir_length		152668	0					
ANR	152895	CompoundStatement		34:74:1063:1063	152668	1					
ANR	152896	ExpressionStatement	l = q - p - keySSdir_length	284:12:8237:8264	152668	0	True				
ANR	152897	AssignmentExpression	l = q - p - keySSdir_length		152668	0		=			
ANR	152898	Identifier	l		152668	0					
ANR	152899	AdditiveExpression	q - p - keySSdir_length		152668	1		-			
ANR	152900	Identifier	q		152668	0					
ANR	152901	AdditiveExpression	p - keySSdir_length		152668	1		-			
ANR	152902	Identifier	p		152668	0					
ANR	152903	Identifier	keySSdir_length		152668	1					
ANR	152904	IfStatement	if ( l > sizeof ( ufst_root_dir ) - 1 )		152668	1					
ANR	152905	Condition	l > sizeof ( ufst_root_dir ) - 1	285:16:8282:8310	152668	0	True				
ANR	152906	RelationalExpression	l > sizeof ( ufst_root_dir ) - 1		152668	0		>			
ANR	152907	Identifier	l		152668	0					
ANR	152908	AdditiveExpression	sizeof ( ufst_root_dir ) - 1		152668	1		-			
ANR	152909	SizeofExpression	sizeof ( ufst_root_dir )		152668	0					
ANR	152910	Sizeof	sizeof		152668	0					
ANR	152911	SizeofOperand	ufst_root_dir		152668	1					
ANR	152912	PrimaryExpression	1		152668	1					
ANR	152913	ExpressionStatement	l = sizeof ( ufst_root_dir ) - 1	286:16:8329:8358	152668	1	True				
ANR	152914	AssignmentExpression	l = sizeof ( ufst_root_dir ) - 1		152668	0		=			
ANR	152915	Identifier	l		152668	0					
ANR	152916	AdditiveExpression	sizeof ( ufst_root_dir ) - 1		152668	1		-			
ANR	152917	SizeofExpression	sizeof ( ufst_root_dir )		152668	0					
ANR	152918	Sizeof	sizeof		152668	0					
ANR	152919	SizeofOperand	ufst_root_dir		152668	1					
ANR	152920	PrimaryExpression	1		152668	1					
ANR	152921	ExpressionStatement	"memcpy ( ufst_root_dir , p + keySSdir_length , l )"	287:12:8372:8417	152668	2	True				
ANR	152922	CallExpression	"memcpy ( ufst_root_dir , p + keySSdir_length , l )"		152668	0					
ANR	152923	Callee	memcpy		152668	0					
ANR	152924	Identifier	memcpy		152668	0					
ANR	152925	ArgumentList	ufst_root_dir		152668	1					
ANR	152926	Argument	ufst_root_dir		152668	0					
ANR	152927	Identifier	ufst_root_dir		152668	0					
ANR	152928	Argument	p + keySSdir_length		152668	1					
ANR	152929	AdditiveExpression	p + keySSdir_length		152668	0		+			
ANR	152930	Identifier	p		152668	0					
ANR	152931	Identifier	keySSdir_length		152668	1					
ANR	152932	Argument	l		152668	2					
ANR	152933	Identifier	l		152668	0					
ANR	152934	ExpressionStatement	ufst_root_dir [ l ] = 0	288:12:8431:8451	152668	3	True				
ANR	152935	AssignmentExpression	ufst_root_dir [ l ] = 0		152668	0		=			
ANR	152936	ArrayIndexing	ufst_root_dir [ l ]		152668	0					
ANR	152937	Identifier	ufst_root_dir		152668	0					
ANR	152938	Identifier	l		152668	1					
ANR	152939	PrimaryExpression	0		152668	1					
ANR	152940	ExpressionStatement	bSSdir = TRUE	290:12:8488:8501	152668	4	True				
ANR	152941	AssignmentExpression	bSSdir = TRUE		152668	0		=			
ANR	152942	Identifier	bSSdir		152668	0					
ANR	152943	Identifier	TRUE		152668	1					
ANR	152944	ElseStatement	else		152668	0					
ANR	152945	IfStatement	"if ( l > keyPlugIn_length && ! memcmp ( p , keyPlugIn , keyPlugIn_length ) )"		152668	0					
ANR	152946	Condition	"l > keyPlugIn_length && ! memcmp ( p , keyPlugIn , keyPlugIn_length )"	293:17:8537:8616	152668	0	True				
ANR	152947	AndExpression	"l > keyPlugIn_length && ! memcmp ( p , keyPlugIn , keyPlugIn_length )"		152668	0		&&			
ANR	152948	RelationalExpression	l > keyPlugIn_length		152668	0		>			
ANR	152949	Identifier	l		152668	0					
ANR	152950	Identifier	keyPlugIn_length		152668	1					
ANR	152951	UnaryOperationExpression	"! memcmp ( p , keyPlugIn , keyPlugIn_length )"		152668	1					
ANR	152952	UnaryOperator	!		152668	0					
ANR	152953	CallExpression	"memcmp ( p , keyPlugIn , keyPlugIn_length )"		152668	1					
ANR	152954	Callee	memcmp		152668	0					
ANR	152955	Identifier	memcmp		152668	0					
ANR	152956	ArgumentList	p		152668	1					
ANR	152957	Argument	p		152668	0					
ANR	152958	Identifier	p		152668	0					
ANR	152959	Argument	keyPlugIn		152668	1					
ANR	152960	Identifier	keyPlugIn		152668	0					
ANR	152961	Argument	keyPlugIn_length		152668	2					
ANR	152962	Identifier	keyPlugIn_length		152668	0					
ANR	152963	CompoundStatement		45:61:1459:1459	152668	1					
ANR	152964	ExpressionStatement	l = q - p - keyPlugIn_length	295:12:8633:8661	152668	0	True				
ANR	152965	AssignmentExpression	l = q - p - keyPlugIn_length		152668	0		=			
ANR	152966	Identifier	l		152668	0					
ANR	152967	AdditiveExpression	q - p - keyPlugIn_length		152668	1		-			
ANR	152968	Identifier	q		152668	0					
ANR	152969	AdditiveExpression	p - keyPlugIn_length		152668	1		-			
ANR	152970	Identifier	p		152668	0					
ANR	152971	Identifier	keyPlugIn_length		152668	1					
ANR	152972	IfStatement	if ( l > sizeof ( sPlugIn ) - 1 )		152668	1					
ANR	152973	Condition	l > sizeof ( sPlugIn ) - 1	296:16:8679:8701	152668	0	True				
ANR	152974	RelationalExpression	l > sizeof ( sPlugIn ) - 1		152668	0		>			
ANR	152975	Identifier	l		152668	0					
ANR	152976	AdditiveExpression	sizeof ( sPlugIn ) - 1		152668	1		-			
ANR	152977	SizeofExpression	sizeof ( sPlugIn )		152668	0					
ANR	152978	Sizeof	sizeof		152668	0					
ANR	152979	SizeofOperand	sPlugIn		152668	1					
ANR	152980	PrimaryExpression	1		152668	1					
ANR	152981	ExpressionStatement	l = sizeof ( sPlugIn ) - 1	297:16:8720:8743	152668	1	True				
ANR	152982	AssignmentExpression	l = sizeof ( sPlugIn ) - 1		152668	0		=			
ANR	152983	Identifier	l		152668	0					
ANR	152984	AdditiveExpression	sizeof ( sPlugIn ) - 1		152668	1		-			
ANR	152985	SizeofExpression	sizeof ( sPlugIn )		152668	0					
ANR	152986	Sizeof	sizeof		152668	0					
ANR	152987	SizeofOperand	sPlugIn		152668	1					
ANR	152988	PrimaryExpression	1		152668	1					
ANR	152989	ExpressionStatement	"memcpy ( sPlugIn , p + keyPlugIn_length , l )"	298:12:8757:8797	152668	2	True				
ANR	152990	CallExpression	"memcpy ( sPlugIn , p + keyPlugIn_length , l )"		152668	0					
ANR	152991	Callee	memcpy		152668	0					
ANR	152992	Identifier	memcpy		152668	0					
ANR	152993	ArgumentList	sPlugIn		152668	1					
ANR	152994	Argument	sPlugIn		152668	0					
ANR	152995	Identifier	sPlugIn		152668	0					
ANR	152996	Argument	p + keyPlugIn_length		152668	1					
ANR	152997	AdditiveExpression	p + keyPlugIn_length		152668	0		+			
ANR	152998	Identifier	p		152668	0					
ANR	152999	Identifier	keyPlugIn_length		152668	1					
ANR	153000	Argument	l		152668	2					
ANR	153001	Identifier	l		152668	0					
ANR	153002	ExpressionStatement	sPlugIn [ l ] = 0	299:12:8811:8825	152668	3	True				
ANR	153003	AssignmentExpression	sPlugIn [ l ] = 0		152668	0		=			
ANR	153004	ArrayIndexing	sPlugIn [ l ]		152668	0					
ANR	153005	Identifier	sPlugIn		152668	0					
ANR	153006	Identifier	l		152668	1					
ANR	153007	PrimaryExpression	0		152668	1					
ANR	153008	ExpressionStatement	bPlugIn = TRUE	300:12:8839:8853	152668	4	True				
ANR	153009	AssignmentExpression	bPlugIn = TRUE		152668	0		=			
ANR	153010	Identifier	bPlugIn		152668	0					
ANR	153011	Identifier	TRUE		152668	1					
ANR	153012	ElseStatement	else		152668	0					
ANR	153013	IfStatement	if ( gs_debug_c ( '1' ) )		152668	0					
ANR	153014	Condition	gs_debug_c ( '1' )	302:17:8882:8896	152668	0	True				
ANR	153015	CallExpression	gs_debug_c ( '1' )		152668	0					
ANR	153016	Callee	gs_debug_c		152668	0					
ANR	153017	Identifier	gs_debug_c		152668	0					
ANR	153018	ArgumentList	'1'		152668	1					
ANR	153019	Argument	'1'		152668	0					
ANR	153020	PrimaryExpression	'1'		152668	0					
ANR	153021	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Warning: Unknown UFST parameter ignored.\\n"" )"	303:12:8911:8978	152668	1	True				
ANR	153022	CallExpression	"ufst_emprintf ( r -> mem , ""Warning: Unknown UFST parameter ignored.\\n"" )"		152668	0					
ANR	153023	Callee	ufst_emprintf		152668	0					
ANR	153024	Identifier	ufst_emprintf		152668	0					
ANR	153025	ArgumentList	r -> mem		152668	1					
ANR	153026	Argument	r -> mem		152668	0					
ANR	153027	PtrMemberAccess	r -> mem		152668	0					
ANR	153028	Identifier	r		152668	0					
ANR	153029	Identifier	mem		152668	1					
ANR	153030	Argument	"""Warning: Unknown UFST parameter ignored.\\n"""		152668	1					
ANR	153031	PrimaryExpression	"""Warning: Unknown UFST parameter ignored.\\n"""		152668	0					
ANR	153032	IfStatement	if ( ! bSSdir )		152668	16					
ANR	153033	Condition	! bSSdir	306:8:9017:9023	152668	0	True				
ANR	153034	UnaryOperationExpression	! bSSdir		152668	0					
ANR	153035	UnaryOperator	!		152668	0					
ANR	153036	Identifier	bSSdir		152668	1					
ANR	153037	CompoundStatement		57:17:1866:1866	152668	1					
ANR	153038	ExpressionStatement	"strcpy ( ufst_root_dir , ""."" )"	307:8:9036:9062	152668	0	True				
ANR	153039	CallExpression	"strcpy ( ufst_root_dir , ""."" )"		152668	0					
ANR	153040	Callee	strcpy		152668	0					
ANR	153041	Identifier	strcpy		152668	0					
ANR	153042	ArgumentList	ufst_root_dir		152668	1					
ANR	153043	Argument	ufst_root_dir		152668	0					
ANR	153044	Identifier	ufst_root_dir		152668	0					
ANR	153045	Argument	"""."""		152668	1					
ANR	153046	PrimaryExpression	"""."""		152668	0					
ANR	153047	IfStatement	if ( gs_debug_c ( '1' ) )		152668	1					
ANR	153048	Condition	gs_debug_c ( '1' )	308:12:9076:9090	152668	0	True				
ANR	153049	CallExpression	gs_debug_c ( '1' )		152668	0					
ANR	153050	Callee	gs_debug_c		152668	0					
ANR	153051	Identifier	gs_debug_c		152668	0					
ANR	153052	ArgumentList	'1'		152668	1					
ANR	153053	Argument	'1'		152668	0					
ANR	153054	PrimaryExpression	'1'		152668	0					
ANR	153055	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"" )"	309:12:9105:9238	152668	1	True				
ANR	153056	CallExpression	"ufst_emprintf ( r -> mem , ""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"" )"		152668	0					
ANR	153057	Callee	ufst_emprintf		152668	0					
ANR	153058	Identifier	ufst_emprintf		152668	0					
ANR	153059	ArgumentList	r -> mem		152668	1					
ANR	153060	Argument	r -> mem		152668	0					
ANR	153061	PtrMemberAccess	r -> mem		152668	0					
ANR	153062	Identifier	r		152668	0					
ANR	153063	Identifier	mem		152668	1					
ANR	153064	Argument	"""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"""		152668	1					
ANR	153065	PrimaryExpression	"""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"""		152668	0					
ANR	153066	ExpressionStatement	"code = gx_UFST_init ( r -> mem , ( const UB8 * ) ufst_root_dir )"	313:4:9257:9312	152668	17	True				
ANR	153067	AssignmentExpression	"code = gx_UFST_init ( r -> mem , ( const UB8 * ) ufst_root_dir )"		152668	0		=			
ANR	153068	Identifier	code		152668	0					
ANR	153069	CallExpression	"gx_UFST_init ( r -> mem , ( const UB8 * ) ufst_root_dir )"		152668	1					
ANR	153070	Callee	gx_UFST_init		152668	0					
ANR	153071	Identifier	gx_UFST_init		152668	0					
ANR	153072	ArgumentList	r -> mem		152668	1					
ANR	153073	Argument	r -> mem		152668	0					
ANR	153074	PtrMemberAccess	r -> mem		152668	0					
ANR	153075	Identifier	r		152668	0					
ANR	153076	Identifier	mem		152668	1					
ANR	153077	Argument	( const UB8 * ) ufst_root_dir		152668	1					
ANR	153078	CastExpression	( const UB8 * ) ufst_root_dir		152668	0					
ANR	153079	CastTarget	const UB8 *		152668	0					
ANR	153080	Identifier	ufst_root_dir		152668	1					
ANR	153081	IfStatement	if ( code < 0 )		152668	18					
ANR	153082	Condition	code < 0	314:8:9322:9329	152668	0	True				
ANR	153083	RelationalExpression	code < 0		152668	0		<			
ANR	153084	Identifier	code		152668	0					
ANR	153085	PrimaryExpression	0		152668	1					
ANR	153086	ReturnStatement	return code ;	315:8:9340:9351	152668	1	True				
ANR	153087	Identifier	code		152668	0					
ANR	153088	ExpressionStatement	r -> ufst_is_singleton = ( code == 1 )	316:4:9357:9391	152668	19	True				
ANR	153089	AssignmentExpression	r -> ufst_is_singleton = ( code == 1 )		152668	0		=			
ANR	153090	PtrMemberAccess	r -> ufst_is_singleton		152668	0					
ANR	153091	Identifier	r		152668	0					
ANR	153092	Identifier	ufst_is_singleton		152668	1					
ANR	153093	EqualityExpression	code == 1		152668	1		==			
ANR	153094	Identifier	code		152668	0					
ANR	153095	PrimaryExpression	1		152668	1					
ANR	153096	Statement	CGIFfont_access	317:4:9397:9411	152668	20	True				
ANR	153097	Statement	(	317:19:9412:9412	152668	21	True				
ANR	153098	Statement	FSA	317:20:9413:9415	152668	22	True				
ANR	153099	Statement	DISK_ACCESS	317:24:9417:9427	152668	23	True				
ANR	153100	Statement	)	317:35:9428:9428	152668	24	True				
ANR	153101	ExpressionStatement		317:36:9429:9429	152668	25	True				
ANR	153102	IfStatement	if ( bPlugIn )		152668	26					
ANR	153103	Condition	bPlugIn	318:8:9439:9445	152668	0	True				
ANR	153104	Identifier	bPlugIn		152668	0					
ANR	153105	CompoundStatement		69:17:2288:2288	152668	1					
ANR	153106	IfStatement	"if ( ( code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle ) ) != 0 )"		152668	0					
ANR	153107	Condition	"( code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle ) ) != 0"	319:12:9462:9518	152668	0	True				
ANR	153108	EqualityExpression	"( code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle ) ) != 0"		152668	0		!=			
ANR	153109	AssignmentExpression	"code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle )"		152668	0		=			
ANR	153110	Identifier	code		152668	0					
ANR	153111	CallExpression	"gx_UFST_open_static_fco ( sPlugIn , & fcHandle )"		152668	1					
ANR	153112	Callee	gx_UFST_open_static_fco		152668	0					
ANR	153113	Identifier	gx_UFST_open_static_fco		152668	0					
ANR	153114	ArgumentList	sPlugIn		152668	1					
ANR	153115	Argument	sPlugIn		152668	0					
ANR	153116	Identifier	sPlugIn		152668	0					
ANR	153117	Argument	& fcHandle		152668	1					
ANR	153118	UnaryOperationExpression	& fcHandle		152668	0					
ANR	153119	UnaryOperator	&		152668	0					
ANR	153120	Identifier	fcHandle		152668	1					
ANR	153121	PrimaryExpression	0		152668	1					
ANR	153122	ReturnStatement	return code ;	320:12:9533:9544	152668	1	True				
ANR	153123	Identifier	code		152668	0					
ANR	153124	Statement	if	321:8:9554:9555	152668	1	True				
ANR	153125	Statement	(	321:11:9557:9557	152668	2	True				
ANR	153126	Statement	(	321:12:9558:9558	152668	3	True				
ANR	153127	Statement	code	321:13:9559:9562	152668	4	True				
ANR	153128	Statement	=	321:18:9564:9564	152668	5	True				
ANR	153129	Statement	CGIFfco_Plugin	321:20:9566:9579	152668	6	True				
ANR	153130	Statement	(	321:34:9580:9580	152668	7	True				
ANR	153131	Statement	FSA	321:35:9581:9583	152668	8	True				
ANR	153132	Statement	fcHandle	321:39:9585:9592	152668	9	True				
ANR	153133	Statement	)	321:47:9593:9593	152668	10	True				
ANR	153134	Statement	)	321:48:9594:9594	152668	11	True				
ANR	153135	Statement	!=	321:50:9596:9597	152668	12	True				
ANR	153136	Statement	0	321:53:9599:9599	152668	13	True				
ANR	153137	Statement	)	321:54:9600:9600	152668	14	True				
ANR	153138	ReturnStatement	return code ;	322:12:9614:9625	152668	15	True				
ANR	153139	Identifier	code		152668	0					
ANR	153140	ElseStatement	else		152668	0					
ANR	153141	CompoundStatement		75:9:2482:2482	152668	0					
ANR	153142	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"" )"	326:8:9667:9781	152668	0	True				
ANR	153143	CallExpression	"ufst_emprintf ( r -> mem , ""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"" )"		152668	0					
ANR	153144	Callee	ufst_emprintf		152668	0					
ANR	153145	Identifier	ufst_emprintf		152668	0					
ANR	153146	ArgumentList	r -> mem		152668	1					
ANR	153147	Argument	r -> mem		152668	0					
ANR	153148	PtrMemberAccess	r -> mem		152668	0					
ANR	153149	Identifier	r		152668	0					
ANR	153150	Identifier	mem		152668	1					
ANR	153151	Argument	"""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"""		152668	1					
ANR	153152	PrimaryExpression	"""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"""		152668	0					
ANR	153153	ReturnStatement	return 0 ;	330:4:9800:9808	152668	27	True				
ANR	153154	PrimaryExpression	0		152668	0					
ANR	153155	ReturnType	static gs_fapi_retcode		152668	1					
ANR	153156	Identifier	open_UFST		152668	2					
ANR	153157	ParameterList	"fapi_ufst_server * r , const byte * server_param , int server_param_size"		152668	3					
ANR	153158	Parameter	fapi_ufst_server * r	248:10:7077:7096	152668	0	True				
ANR	153159	ParameterType	fapi_ufst_server *		152668	0					
ANR	153160	Identifier	r		152668	1					
ANR	153161	Parameter	const byte * server_param	248:32:7099:7123	152668	1	True				
ANR	153162	ParameterType	const byte *		152668	0					
ANR	153163	Identifier	server_param		152668	1					
ANR	153164	Parameter	int server_param_size	249:10:7136:7156	152668	2	True				
ANR	153165	ParameterType	int		152668	0					
ANR	153166	Identifier	server_param_size		152668	1					
ANR	153167	CFGEntryNode	ENTRY		152668		True				
ANR	153168	CFGExitNode	EXIT		152668		True				
ANR	153169	Symbol	r -> param		152668						
ANR	153170	Symbol	r -> param_size		152668						
ANR	153171	Symbol	code		152668						
ANR	153172	Symbol	r -> mem		152668						
ANR	153173	Symbol	keySSdir		152668						
ANR	153174	Symbol	* sPlugIn		152668						
ANR	153175	Symbol	server_param		152668						
ANR	153176	Symbol	gx_UFST_init		152668						
ANR	153177	Symbol	strlen		152668						
ANR	153178	Symbol	memcmp		152668						
ANR	153179	Symbol	server_param_size		152668						
ANR	153180	Symbol	bPlugIn		152668						
ANR	153181	Symbol	gs_debug_c		152668						
ANR	153182	Symbol	sep		152668						
ANR	153183	Symbol	& fcHandle		152668						
ANR	153184	Symbol	keyPlugIn_length		152668						
ANR	153185	Symbol	e		152668						
ANR	153186	Symbol	TRUE		152668						
ANR	153187	Symbol	l		152668						
ANR	153188	Symbol	fcHandle		152668						
ANR	153189	Symbol	p		152668						
ANR	153190	Symbol	q		152668						
ANR	153191	Symbol	gs_error_VMerror		152668						
ANR	153192	Symbol	gx_UFST_open_static_fco		152668						
ANR	153193	Symbol	r		152668						
ANR	153194	Symbol	gs_malloc		152668						
ANR	153195	Symbol	* l		152668						
ANR	153196	Symbol	r -> ufst_is_singleton		152668						
ANR	153197	Symbol	ufst_root_dir		152668						
ANR	153198	Symbol	bSSdir		152668						
ANR	153199	Symbol	* ufst_root_dir		152668						
ANR	153200	Symbol	FALSE		152668						
ANR	153201	Symbol	* q		152668						
ANR	153202	Symbol	gp_file_name_list_separator		152668						
ANR	153203	Symbol	* r		152668						
ANR	153204	Symbol	keyPlugIn		152668						
ANR	153205	Symbol	sPlugIn		152668						
ANR	153206	Symbol	keySSdir_length		152668						
ANR	153207	DeclStmt									
ANR	153208	Decl							LPUB8	LPUB8 ( FSP UW16 chId )	impl_PCLchId2ptr
ANR	153209	Function	gs_fapi_ufst_ensure_open	335:0:9860:10409							
ANR	153210	FunctionDef	"gs_fapi_ufst_ensure_open (gs_fapi_server * server , const char * server_param , int server_param_size)"		153209	0					
ANR	153211	CompoundStatement		337:0:9981:10409	153209	0					
ANR	153212	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	338:4:9987:10024	153209	0	True				
ANR	153213	IdentifierDecl	* r = If_to_I ( server )		153209	0					
ANR	153214	IdentifierDeclType	fapi_ufst_server *		153209	0					
ANR	153215	Identifier	r		153209	1					
ANR	153216	AssignmentExpression	* r = If_to_I ( server )		153209	2		=			
ANR	153217	Identifier	r		153209	0					
ANR	153218	CallExpression	If_to_I ( server )		153209	1					
ANR	153219	Callee	If_to_I		153209	0					
ANR	153220	Identifier	If_to_I		153209	0					
ANR	153221	ArgumentList	server		153209	1					
ANR	153222	Argument	server		153209	0					
ANR	153223	Identifier	server		153209	0					
ANR	153224	IdentifierDeclStatement	int code ;	339:4:10030:10038	153209	1	True				
ANR	153225	IdentifierDecl	code		153209	0					
ANR	153226	IdentifierDeclType	int		153209	0					
ANR	153227	Identifier	code		153209	1					
ANR	153228	IfStatement	if ( r -> bInitialized )		153209	2					
ANR	153229	Condition	r -> bInitialized	341:8:10049:10063	153209	0	True				
ANR	153230	PtrMemberAccess	r -> bInitialized		153209	0					
ANR	153231	Identifier	r		153209	0					
ANR	153232	Identifier	bInitialized		153209	1					
ANR	153233	ReturnStatement	return 0 ;	342:8:10074:10082	153209	1	True				
ANR	153234	PrimaryExpression	0		153209	0					
ANR	153235	ExpressionStatement	r -> bInitialized = 1	343:4:10088:10107	153209	3	True				
ANR	153236	AssignmentExpression	r -> bInitialized = 1		153209	0		=			
ANR	153237	PtrMemberAccess	r -> bInitialized		153209	0					
ANR	153238	Identifier	r		153209	0					
ANR	153239	Identifier	bInitialized		153209	1					
ANR	153240	PrimaryExpression	1		153209	1					
ANR	153241	CompoundStatement		8:4:131:131	153209	4					
ANR	153242	ExpressionStatement	"code = open_UFST ( r , ( byte * ) server_param , server_param_size )"	345:8:10123:10183	153209	0	True				
ANR	153243	AssignmentExpression	"code = open_UFST ( r , ( byte * ) server_param , server_param_size )"		153209	0		=			
ANR	153244	Identifier	code		153209	0					
ANR	153245	CallExpression	"open_UFST ( r , ( byte * ) server_param , server_param_size )"		153209	1					
ANR	153246	Callee	open_UFST		153209	0					
ANR	153247	Identifier	open_UFST		153209	0					
ANR	153248	ArgumentList	r		153209	1					
ANR	153249	Argument	r		153209	0					
ANR	153250	Identifier	r		153209	0					
ANR	153251	Argument	( byte * ) server_param		153209	1					
ANR	153252	CastExpression	( byte * ) server_param		153209	0					
ANR	153253	CastTarget	byte *		153209	0					
ANR	153254	Identifier	server_param		153209	1					
ANR	153255	Argument	server_param_size		153209	2					
ANR	153256	Identifier	server_param_size		153209	0					
ANR	153257	IfStatement	if ( code < 0 )		153209	1					
ANR	153258	Condition	code < 0	346:12:10197:10204	153209	0	True				
ANR	153259	RelationalExpression	code < 0		153209	0		<			
ANR	153260	Identifier	code		153209	0					
ANR	153261	PrimaryExpression	0		153209	1					
ANR	153262	CompoundStatement		10:22:225:225	153209	1					
ANR	153263	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Error opening the UFST font server.\\n"" )"	347:12:10221:10283	153209	0	True				
ANR	153264	CallExpression	"ufst_emprintf ( r -> mem , ""Error opening the UFST font server.\\n"" )"		153209	0					
ANR	153265	Callee	ufst_emprintf		153209	0					
ANR	153266	Identifier	ufst_emprintf		153209	0					
ANR	153267	ArgumentList	r -> mem		153209	1					
ANR	153268	Argument	r -> mem		153209	0					
ANR	153269	PtrMemberAccess	r -> mem		153209	0					
ANR	153270	Identifier	r		153209	0					
ANR	153271	Identifier	mem		153209	1					
ANR	153272	Argument	"""Error opening the UFST font server.\\n"""		153209	1					
ANR	153273	PrimaryExpression	"""Error opening the UFST font server.\\n"""		153209	0					
ANR	153274	ReturnStatement	return code ;	348:12:10297:10308	153209	1	True				
ANR	153275	Identifier	code		153209	0					
ANR	153276	ExpressionStatement	"gx_set_UFST_Callbacks ( NULL , impl_PCLchId2ptr , impl_PCLchId2ptr )"	351:4:10330:10393	153209	5	True				
ANR	153277	CallExpression	"gx_set_UFST_Callbacks ( NULL , impl_PCLchId2ptr , impl_PCLchId2ptr )"		153209	0					
ANR	153278	Callee	gx_set_UFST_Callbacks		153209	0					
ANR	153279	Identifier	gx_set_UFST_Callbacks		153209	0					
ANR	153280	ArgumentList	NULL		153209	1					
ANR	153281	Argument	NULL		153209	0					
ANR	153282	Identifier	NULL		153209	0					
ANR	153283	Argument	impl_PCLchId2ptr		153209	1					
ANR	153284	Identifier	impl_PCLchId2ptr		153209	0					
ANR	153285	Argument	impl_PCLchId2ptr		153209	2					
ANR	153286	Identifier	impl_PCLchId2ptr		153209	0					
ANR	153287	ReturnStatement	return 0 ;	352:4:10399:10407	153209	6	True				
ANR	153288	PrimaryExpression	0		153209	0					
ANR	153289	ReturnType	static gs_fapi_retcode		153209	1					
ANR	153290	Identifier	gs_fapi_ufst_ensure_open		153209	2					
ANR	153291	ParameterList	"gs_fapi_server * server , const char * server_param , int server_param_size"		153209	3					
ANR	153292	Parameter	gs_fapi_server * server	336:25:9908:9929	153209	0	True				
ANR	153293	ParameterType	gs_fapi_server *		153209	0					
ANR	153294	Identifier	server		153209	1					
ANR	153295	Parameter	const char * server_param	336:49:9932:9955	153209	1	True				
ANR	153296	ParameterType	const char *		153209	0					
ANR	153297	Identifier	server_param		153209	1					
ANR	153298	Parameter	int server_param_size	336:75:9958:9978	153209	2	True				
ANR	153299	ParameterType	int		153209	0					
ANR	153300	Identifier	server_param_size		153209	1					
ANR	153301	CFGEntryNode	ENTRY		153209		True				
ANR	153302	CFGExitNode	EXIT		153209		True				
ANR	153303	Symbol	server		153209						
ANR	153304	Symbol	If_to_I		153209						
ANR	153305	Symbol	r -> bInitialized		153209						
ANR	153306	Symbol	r		153209						
ANR	153307	Symbol	impl_PCLchId2ptr		153209						
ANR	153308	Symbol	code		153209						
ANR	153309	Symbol	NULL		153209						
ANR	153310	Symbol	r -> mem		153209						
ANR	153311	Symbol	server_param_size		153209						
ANR	153312	Symbol	server_param		153209						
ANR	153313	Symbol	open_UFST		153209						
ANR	153314	Symbol	* r		153209						
ANR	153315	Function	get_font_type	355:0:10412:11060							
ANR	153316	FunctionDef	get_font_type (stream * f)		153315	0					
ANR	153317	CompoundStatement		357:0:10450:11060	153315	0					
ANR	153318	IdentifierDeclStatement	"char buf [ 20 ] , mark_PS [ ] = ""%!"" ;"	358:4:10456:10486	153315	0	True				
ANR	153319	IdentifierDecl	buf [ 20 ]		153315	0					
ANR	153320	IdentifierDeclType	char [ 20 ]		153315	0					
ANR	153321	Identifier	buf		153315	1					
ANR	153322	PrimaryExpression	20		153315	2					
ANR	153323	IdentifierDecl	"mark_PS [ ] = ""%!"""		153315	1					
ANR	153324	IdentifierDeclType	char [ ]		153315	0					
ANR	153325	Identifier	mark_PS		153315	1					
ANR	153326	AssignmentExpression	"mark_PS [ ] = ""%!"""		153315	2		=			
ANR	153327	Identifier	mark_PS		153315	0					
ANR	153328	PrimaryExpression	"""%!"""		153315	1					
ANR	153329	IdentifierDeclStatement	int i ;	359:4:10492:10497	153315	1	True				
ANR	153330	IdentifierDecl	i		153315	0					
ANR	153331	IdentifierDeclType	int		153315	0					
ANR	153332	Identifier	i		153315	1					
ANR	153333	IfStatement	"if ( sfread ( buf , 1 , sizeof ( buf ) , f ) != sizeof ( buf ) )"		153315	2					
ANR	153334	Condition	"sfread ( buf , 1 , sizeof ( buf ) , f ) != sizeof ( buf )"	361:8:10508:10552	153315	0	True				
ANR	153335	EqualityExpression	"sfread ( buf , 1 , sizeof ( buf ) , f ) != sizeof ( buf )"		153315	0		!=			
ANR	153336	CallExpression	"sfread ( buf , 1 , sizeof ( buf ) , f )"		153315	0					
ANR	153337	Callee	sfread		153315	0					
ANR	153338	Identifier	sfread		153315	0					
ANR	153339	ArgumentList	buf		153315	1					
ANR	153340	Argument	buf		153315	0					
ANR	153341	Identifier	buf		153315	0					
ANR	153342	Argument	1		153315	1					
ANR	153343	PrimaryExpression	1		153315	0					
ANR	153344	Argument	sizeof ( buf )		153315	2					
ANR	153345	SizeofExpression	sizeof ( buf )		153315	0					
ANR	153346	Sizeof	sizeof		153315	0					
ANR	153347	SizeofOperand	buf		153315	1					
ANR	153348	Argument	f		153315	3					
ANR	153349	Identifier	f		153315	0					
ANR	153350	SizeofExpression	sizeof ( buf )		153315	1					
ANR	153351	Sizeof	sizeof		153315	0					
ANR	153352	SizeofOperand	buf		153315	1					
ANR	153353	ReturnStatement	return 0 ;	362:8:10563:10571	153315	1	True				
ANR	153354	PrimaryExpression	0		153315	0					
ANR	153355	IfStatement	if ( buf [ 0 ] == 0x15 || buf [ 0 ] == 0x00 )		153315	3					
ANR	153356	Condition	buf [ 0 ] == 0x15 || buf [ 0 ] == 0x00	363:8:10581:10612	153315	0	True				
ANR	153357	OrExpression	buf [ 0 ] == 0x15 || buf [ 0 ] == 0x00		153315	0		||			
ANR	153358	EqualityExpression	buf [ 0 ] == 0x15		153315	0		==			
ANR	153359	ArrayIndexing	buf [ 0 ]		153315	0					
ANR	153360	Identifier	buf		153315	0					
ANR	153361	PrimaryExpression	0		153315	1					
ANR	153362	PrimaryExpression	0x15		153315	1					
ANR	153363	EqualityExpression	buf [ 0 ] == 0x00		153315	1		==			
ANR	153364	ArrayIndexing	buf [ 0 ]		153315	0					
ANR	153365	Identifier	buf		153315	0					
ANR	153366	PrimaryExpression	0		153315	1					
ANR	153367	PrimaryExpression	0x00		153315	1					
ANR	153368	ReturnStatement	return FC_FCO_TYPE ;	364:8:10675:10693	153315	1	True				
ANR	153369	Identifier	FC_FCO_TYPE		153315	0					
ANR	153370	ForStatement	for ( i = 0 ; i < sizeof ( buf ) - sizeof ( mark_PS ) ; i ++ )		153315	4					
ANR	153371	ForInit	i = 0 ;	365:9:10704:10709	153315	0	True				
ANR	153372	AssignmentExpression	i = 0		153315	0		=			
ANR	153373	Identifier	i		153315	0					
ANR	153374	PrimaryExpression	0		153315	1					
ANR	153375	Condition	i < sizeof ( buf ) - sizeof ( mark_PS )	365:16:10711:10743	153315	1	True				
ANR	153376	RelationalExpression	i < sizeof ( buf ) - sizeof ( mark_PS )		153315	0		<			
ANR	153377	Identifier	i		153315	0					
ANR	153378	AdditiveExpression	sizeof ( buf ) - sizeof ( mark_PS )		153315	1		-			
ANR	153379	SizeofExpression	sizeof ( buf )		153315	0					
ANR	153380	Sizeof	sizeof		153315	0					
ANR	153381	SizeofOperand	buf		153315	1					
ANR	153382	SizeofExpression	sizeof ( mark_PS )		153315	1					
ANR	153383	Sizeof	sizeof		153315	0					
ANR	153384	SizeofOperand	mark_PS		153315	1					
ANR	153385	PostIncDecOperationExpression	i ++	365:51:10746:10748	153315	2	True				
ANR	153386	Identifier	i		153315	0					
ANR	153387	IncDec	++		153315	1					
ANR	153388	IfStatement	"if ( ! memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 ) )"		153315	3					
ANR	153389	Condition	"! memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 )"	366:12:10763:10808	153315	0	True				
ANR	153390	UnaryOperationExpression	"! memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 )"		153315	0					
ANR	153391	UnaryOperator	!		153315	0					
ANR	153392	CallExpression	"memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 )"		153315	1					
ANR	153393	Callee	memcmp		153315	0					
ANR	153394	Identifier	memcmp		153315	0					
ANR	153395	ArgumentList	buf + i		153315	1					
ANR	153396	Argument	buf + i		153315	0					
ANR	153397	AdditiveExpression	buf + i		153315	0		+			
ANR	153398	Identifier	buf		153315	0					
ANR	153399	Identifier	i		153315	1					
ANR	153400	Argument	mark_PS		153315	1					
ANR	153401	Identifier	mark_PS		153315	0					
ANR	153402	Argument	sizeof ( mark_PS ) - 1		153315	2					
ANR	153403	AdditiveExpression	sizeof ( mark_PS ) - 1		153315	0		-			
ANR	153404	SizeofExpression	sizeof ( mark_PS )		153315	0					
ANR	153405	Sizeof	sizeof		153315	0					
ANR	153406	SizeofOperand	mark_PS		153315	1					
ANR	153407	PrimaryExpression	1		153315	1					
ANR	153408	ReturnStatement	return FC_PST1_TYPE ;	367:12:10823:10842	153315	1	True				
ANR	153409	Identifier	FC_PST1_TYPE		153315	0					
ANR	153410	IfStatement	if ( buf [ 0 ] == '\\0' && buf [ 1 ] == '\\1' )		153315	5					
ANR	153411	Condition	buf [ 0 ] == '\\0' && buf [ 1 ] == '\\1'	368:8:10852:10883	153315	0	True				
ANR	153412	AndExpression	buf [ 0 ] == '\\0' && buf [ 1 ] == '\\1'		153315	0		&&			
ANR	153413	EqualityExpression	buf [ 0 ] == '\\0'		153315	0		==			
ANR	153414	ArrayIndexing	buf [ 0 ]		153315	0					
ANR	153415	Identifier	buf		153315	0					
ANR	153416	PrimaryExpression	0		153315	1					
ANR	153417	PrimaryExpression	'\\0'		153315	1					
ANR	153418	EqualityExpression	buf [ 1 ] == '\\1'		153315	1		==			
ANR	153419	ArrayIndexing	buf [ 1 ]		153315	0					
ANR	153420	Identifier	buf		153315	0					
ANR	153421	PrimaryExpression	1		153315	1					
ANR	153422	PrimaryExpression	'\\1'		153315	1					
ANR	153423	ReturnStatement	return FC_TT_TYPE ;	369:8:10894:10911	153315	1	True				
ANR	153424	Identifier	FC_TT_TYPE		153315	0					
ANR	153425	IfStatement	if ( buf [ 0 ] == 't' && buf [ 1 ] == 't' )		153315	6					
ANR	153426	Condition	buf [ 0 ] == 't' && buf [ 1 ] == 't'	370:8:10921:10950	153315	0	True				
ANR	153427	AndExpression	buf [ 0 ] == 't' && buf [ 1 ] == 't'		153315	0		&&			
ANR	153428	EqualityExpression	buf [ 0 ] == 't'		153315	0		==			
ANR	153429	ArrayIndexing	buf [ 0 ]		153315	0					
ANR	153430	Identifier	buf		153315	0					
ANR	153431	PrimaryExpression	0		153315	1					
ANR	153432	PrimaryExpression	't'		153315	1					
ANR	153433	EqualityExpression	buf [ 1 ] == 't'		153315	1		==			
ANR	153434	ArrayIndexing	buf [ 1 ]		153315	0					
ANR	153435	Identifier	buf		153315	0					
ANR	153436	PrimaryExpression	1		153315	1					
ANR	153437	PrimaryExpression	't'		153315	1					
ANR	153438	ReturnStatement	return FC_TT_TYPE ;	371:8:10961:10978	153315	1	True				
ANR	153439	Identifier	FC_TT_TYPE		153315	0					
ANR	153440	ReturnStatement	return 0 ;	372:4:10984:10992	153315	7	True				
ANR	153441	PrimaryExpression	0		153315	0					
ANR	153442	ReturnType	static UW16		153315	1					
ANR	153443	Identifier	get_font_type		153315	2					
ANR	153444	ParameterList	stream * f		153315	3					
ANR	153445	Parameter	stream * f	356:14:10438:10447	153315	0	True				
ANR	153446	ParameterType	stream *		153315	0					
ANR	153447	Identifier	f		153315	1					
ANR	153448	CFGEntryNode	ENTRY		153315		True				
ANR	153449	CFGExitNode	EXIT		153315		True				
ANR	153450	Symbol	mark_PS		153315						
ANR	153451	Symbol	buf		153315						
ANR	153452	Symbol	* buf		153315						
ANR	153453	Symbol	FC_FCO_TYPE		153315						
ANR	153454	Symbol	memcmp		153315						
ANR	153455	Symbol	FC_TT_TYPE		153315						
ANR	153456	Symbol	f		153315						
ANR	153457	Symbol	i		153315						
ANR	153458	Symbol	sfread		153315						
ANR	153459	Symbol	FC_PST1_TYPE		153315						
ANR	153460	Function	choose_decoding_general	375:0:11063:11363							
ANR	153461	FunctionDef	"choose_decoding_general (fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId)"		153460	0					
ANR	153462	CompoundStatement		378:0:11191:11363	153460	0					
ANR	153463	IfStatement	if ( ! d -> decodingID [ 0 ] )		153460	0					
ANR	153464	Condition	! d -> decodingID [ 0 ]	379:8:11201:11217	153460	0	True				
ANR	153465	UnaryOperationExpression	! d -> decodingID [ 0 ]		153460	0					
ANR	153466	UnaryOperator	!		153460	0					
ANR	153467	ArrayIndexing	d -> decodingID [ 0 ]		153460	1					
ANR	153468	PtrMemberAccess	d -> decodingID		153460	0					
ANR	153469	Identifier	d		153460	0					
ANR	153470	Identifier	decodingID		153460	1					
ANR	153471	PrimaryExpression	0		153460	1					
ANR	153472	ExpressionStatement	"strncpy ( d -> decodingID , ""Unicode"" , sizeof ( d -> decodingID ) )"	380:8:11228:11284	153460	1	True				
ANR	153473	CallExpression	"strncpy ( d -> decodingID , ""Unicode"" , sizeof ( d -> decodingID ) )"		153460	0					
ANR	153474	Callee	strncpy		153460	0					
ANR	153475	Identifier	strncpy		153460	0					
ANR	153476	ArgumentList	d -> decodingID		153460	1					
ANR	153477	Argument	d -> decodingID		153460	0					
ANR	153478	PtrMemberAccess	d -> decodingID		153460	0					
ANR	153479	Identifier	d		153460	0					
ANR	153480	Identifier	decodingID		153460	1					
ANR	153481	Argument	"""Unicode"""		153460	1					
ANR	153482	PrimaryExpression	"""Unicode"""		153460	0					
ANR	153483	Argument	sizeof ( d -> decodingID )		153460	2					
ANR	153484	SizeofExpression	sizeof ( d -> decodingID )		153460	0					
ANR	153485	Sizeof	sizeof		153460	0					
ANR	153486	PtrMemberAccess	d -> decodingID		153460	1					
ANR	153487	Identifier	d		153460	0					
ANR	153488	Identifier	decodingID		153460	1					
ANR	153489	ReturnStatement	return 1 ;	382:4:11353:11361	153460	1	True				
ANR	153490	PrimaryExpression	1		153460	0					
ANR	153491	ReturnType	static int		153460	1					
ANR	153492	Identifier	choose_decoding_general		153460	2					
ANR	153493	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId"		153460	3					
ANR	153494	Parameter	fapi_ufst_server * r	376:24:11098:11117	153460	0	True				
ANR	153495	ParameterType	fapi_ufst_server *		153460	0					
ANR	153496	Identifier	r		153460	1					
ANR	153497	Parameter	ufst_common_font_data * d	376:46:11120:11144	153460	1	True				
ANR	153498	ParameterType	ufst_common_font_data *		153460	0					
ANR	153499	Identifier	d		153460	1					
ANR	153500	Parameter	const char * cmapId	377:24:11171:11188	153460	2	True				
ANR	153501	ParameterType	const char *		153460	0					
ANR	153502	Identifier	cmapId		153460	1					
ANR	153503	CFGEntryNode	ENTRY		153460		True				
ANR	153504	CFGExitNode	EXIT		153460		True				
ANR	153505	Symbol	r		153460						
ANR	153506	Symbol	d -> decodingID		153460						
ANR	153507	Symbol	d		153460						
ANR	153508	Symbol	* d -> decodingID		153460						
ANR	153509	Symbol	* * d		153460						
ANR	153510	Symbol	cmapId		153460						
ANR	153511	Symbol	* d		153460						
ANR	153512	Function	choose_decoding_TT	385:0:11366:12489							
ANR	153513	FunctionDef	"choose_decoding_TT (fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId)"		153512	0					
ANR	153514	CompoundStatement		388:0:11484:12489	153512	0					
ANR	153515	IdentifierDeclStatement	"int platId , specId , i ;"	390:4:11512:11533	153512	0	True				
ANR	153516	IdentifierDecl	platId		153512	0					
ANR	153517	IdentifierDeclType	int		153512	0					
ANR	153518	Identifier	platId		153512	1					
ANR	153519	IdentifierDecl	specId		153512	1					
ANR	153520	IdentifierDeclType	int		153512	0					
ANR	153521	Identifier	specId		153512	1					
ANR	153522	IdentifierDecl	i		153512	2					
ANR	153523	IdentifierDeclType	int		153512	0					
ANR	153524	Identifier	i		153512	1					
ANR	153525	IdentifierDeclStatement	CMAP_QUERY q ;	391:4:11539:11551	153512	1	True				
ANR	153526	IdentifierDecl	q		153512	0					
ANR	153527	IdentifierDeclType	CMAP_QUERY		153512	0					
ANR	153528	Identifier	q		153512	1					
ANR	153529	IdentifierDeclStatement	UW16 font_access ;	392:4:11557:11573	153512	2	True				
ANR	153530	IdentifierDecl	font_access		153512	0					
ANR	153531	IdentifierDeclType	UW16		153512	0					
ANR	153532	Identifier	font_access		153512	1					
ANR	153533	IdentifierDeclStatement	bool failed ;	393:4:11579:11590	153512	3	True				
ANR	153534	IdentifierDecl	failed		153512	0					
ANR	153535	IdentifierDeclType	bool		153512	0					
ANR	153536	Identifier	failed		153512	1					
ANR	153537	IdentifierDeclStatement	void * p = ( d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset ) ) ;	394:4:11596:11805	153512	4	True				
ANR	153538	IdentifierDecl	* p = ( d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset ) )		153512	0					
ANR	153539	IdentifierDeclType	void *		153512	0					
ANR	153540	Identifier	p		153512	1					
ANR	153541	AssignmentExpression	* p = ( d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset ) )		153512	2		=			
ANR	153542	Identifier	p		153512	0					
ANR	153543	ConditionalExpression	d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset )		153512	1					
ANR	153544	Condition	d -> is_disk_font		153512	0					
ANR	153545	PtrMemberAccess	d -> is_disk_font		153512	0					
ANR	153546	Identifier	d		153512	0					
ANR	153547	Identifier	is_disk_font		153512	1					
ANR	153548	CastExpression	( void * ) ( d + 1 )		153512	1					
ANR	153549	CastTarget	void *		153512	0					
ANR	153550	AdditiveExpression	d + 1		153512	1		+			
ANR	153551	Identifier	d		153512	0					
ANR	153552	PrimaryExpression	1		153512	1					
ANR	153553	CastExpression	( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset )		153512	2					
ANR	153554	CastTarget	void *		153512	0					
ANR	153555	AdditiveExpression	( UB8 * ) d + d -> tt_font_body_offset		153512	1		+			
ANR	153556	CastExpression	( UB8 * ) d		153512	0					
ANR	153557	CastTarget	UB8 *		153512	0					
ANR	153558	Identifier	d		153512	1					
ANR	153559	PtrMemberAccess	d -> tt_font_body_offset		153512	1					
ANR	153560	Identifier	d		153512	0					
ANR	153561	Identifier	tt_font_body_offset		153512	1					
ANR	153562	ExpressionStatement	FSA_FROM_SERVER	398:4:11811:11826	153512	5	True				
ANR	153563	Identifier	FSA_FROM_SERVER		153512	0					
ANR	153564	IfStatement	"if ( sscanf ( cmapId , ""%d.%d"" , & platId , & specId ) != 2 )"		153512	6					
ANR	153565	Condition	"sscanf ( cmapId , ""%d.%d"" , & platId , & specId ) != 2"	400:8:11837:11882	153512	0	True				
ANR	153566	EqualityExpression	"sscanf ( cmapId , ""%d.%d"" , & platId , & specId ) != 2"		153512	0		!=			
ANR	153567	CallExpression	"sscanf ( cmapId , ""%d.%d"" , & platId , & specId )"		153512	0					
ANR	153568	Callee	sscanf		153512	0					
ANR	153569	Identifier	sscanf		153512	0					
ANR	153570	ArgumentList	cmapId		153512	1					
ANR	153571	Argument	cmapId		153512	0					
ANR	153572	Identifier	cmapId		153512	0					
ANR	153573	Argument	"""%d.%d"""		153512	1					
ANR	153574	PrimaryExpression	"""%d.%d"""		153512	0					
ANR	153575	Argument	& platId		153512	2					
ANR	153576	UnaryOperationExpression	& platId		153512	0					
ANR	153577	UnaryOperator	&		153512	0					
ANR	153578	Identifier	platId		153512	1					
ANR	153579	Argument	& specId		153512	3					
ANR	153580	UnaryOperationExpression	& specId		153512	0					
ANR	153581	UnaryOperator	&		153512	0					
ANR	153582	Identifier	specId		153512	1					
ANR	153583	PrimaryExpression	2		153512	1					
ANR	153584	ReturnStatement	return 0 ;	401:8:11893:11901	153512	1	True				
ANR	153585	PrimaryExpression	0		153512	0					
ANR	153586	ExpressionStatement	font_access = pIFS -> font_access	402:4:11907:11938	153512	7	True				
ANR	153587	AssignmentExpression	font_access = pIFS -> font_access		153512	0		=			
ANR	153588	Identifier	font_access		153512	0					
ANR	153589	PtrMemberAccess	pIFS -> font_access		153512	1					
ANR	153590	Identifier	pIFS		153512	0					
ANR	153591	Identifier	font_access		153512	1					
ANR	153592	ExpressionStatement	pIFS -> font_access = ( d -> is_disk_font ? DISK_ACCESS : ROM_ACCESS )	403:4:11944:12008	153512	8	True				
ANR	153593	AssignmentExpression	pIFS -> font_access = ( d -> is_disk_font ? DISK_ACCESS : ROM_ACCESS )		153512	0		=			
ANR	153594	PtrMemberAccess	pIFS -> font_access		153512	0					
ANR	153595	Identifier	pIFS		153512	0					
ANR	153596	Identifier	font_access		153512	1					
ANR	153597	ConditionalExpression	d -> is_disk_font ? DISK_ACCESS : ROM_ACCESS		153512	1					
ANR	153598	Condition	d -> is_disk_font		153512	0					
ANR	153599	PtrMemberAccess	d -> is_disk_font		153512	0					
ANR	153600	Identifier	d		153512	0					
ANR	153601	Identifier	is_disk_font		153512	1					
ANR	153602	Identifier	DISK_ACCESS		153512	1					
ANR	153603	Identifier	ROM_ACCESS		153512	2					
ANR	153604	Statement	failed	404:4:12014:12019	153512	9	True				
ANR	153605	Statement	=	404:11:12021:12021	153512	10	True				
ANR	153606	Statement	CGIFtt_cmap_query	404:13:12023:12039	153512	11	True				
ANR	153607	Statement	(	404:30:12040:12040	153512	12	True				
ANR	153608	Statement	FSA	404:31:12041:12043	153512	13	True				
ANR	153609	Statement	p	404:35:12045:12045	153512	14	True				
ANR	153610	Statement	","	404:36:12046:12046	153512	15	True				
ANR	153611	Statement	r	404:38:12048:12048	153512	16	True				
ANR	153612	Statement	->	404:39:12049:12050	153512	17	True				
ANR	153613	Statement	fc	404:41:12051:12052	153512	18	True				
ANR	153614	Statement	.	404:43:12053:12053	153512	19	True				
ANR	153615	Statement	ttc_index	404:44:12054:12062	153512	20	True				
ANR	153616	Statement	","	404:53:12063:12063	153512	21	True				
ANR	153617	Statement	&	404:55:12065:12065	153512	22	True				
ANR	153618	Statement	q	404:56:12066:12066	153512	23	True				
ANR	153619	Statement	)	404:57:12067:12067	153512	24	True				
ANR	153620	ExpressionStatement		404:58:12068:12068	153512	25	True				
ANR	153621	ExpressionStatement	pIFS -> font_access = font_access	405:4:12074:12105	153512	26	True				
ANR	153622	AssignmentExpression	pIFS -> font_access = font_access		153512	0		=			
ANR	153623	PtrMemberAccess	pIFS -> font_access		153512	0					
ANR	153624	Identifier	pIFS		153512	0					
ANR	153625	Identifier	font_access		153512	1					
ANR	153626	Identifier	font_access		153512	1					
ANR	153627	IfStatement	if ( failed )		153512	27					
ANR	153628	Condition	failed	406:8:12115:12120	153512	0	True				
ANR	153629	Identifier	failed		153512	0					
ANR	153630	ReturnStatement	return 0 ;	407:8:12131:12139	153512	1	True				
ANR	153631	PrimaryExpression	0		153512	0					
ANR	153632	ForStatement	for ( i = 0 ; i < q . numCmap ; i ++ )		153512	28					
ANR	153633	ForInit	i = 0 ;	408:9:12150:12155	153512	0	True				
ANR	153634	AssignmentExpression	i = 0		153512	0		=			
ANR	153635	Identifier	i		153512	0					
ANR	153636	PrimaryExpression	0		153512	1					
ANR	153637	Condition	i < q . numCmap	408:16:12157:12169	153512	1	True				
ANR	153638	RelationalExpression	i < q . numCmap		153512	0		<			
ANR	153639	Identifier	i		153512	0					
ANR	153640	MemberAccess	q . numCmap		153512	1					
ANR	153641	Identifier	q		153512	0					
ANR	153642	Identifier	numCmap		153512	1					
ANR	153643	PostIncDecOperationExpression	i ++	408:31:12172:12174	153512	2	True				
ANR	153644	Identifier	i		153512	0					
ANR	153645	IncDec	++		153512	1					
ANR	153646	IfStatement	if ( q . entry [ i ] . platId == platId && q . entry [ i ] . specId == specId )		153512	3					
ANR	153647	Condition	q . entry [ i ] . platId == platId && q . entry [ i ] . specId == specId	409:12:12189:12246	153512	0	True				
ANR	153648	AndExpression	q . entry [ i ] . platId == platId && q . entry [ i ] . specId == specId		153512	0		&&			
ANR	153649	EqualityExpression	q . entry [ i ] . platId == platId		153512	0		==			
ANR	153650	MemberAccess	q . entry [ i ] . platId		153512	0					
ANR	153651	ArrayIndexing	q . entry [ i ]		153512	0					
ANR	153652	MemberAccess	q . entry		153512	0					
ANR	153653	Identifier	q		153512	0					
ANR	153654	Identifier	entry		153512	1					
ANR	153655	Identifier	i		153512	1					
ANR	153656	Identifier	platId		153512	1					
ANR	153657	Identifier	platId		153512	1					
ANR	153658	EqualityExpression	q . entry [ i ] . specId == specId		153512	1		==			
ANR	153659	MemberAccess	q . entry [ i ] . specId		153512	0					
ANR	153660	ArrayIndexing	q . entry [ i ]		153512	0					
ANR	153661	MemberAccess	q . entry		153512	0					
ANR	153662	Identifier	q		153512	0					
ANR	153663	Identifier	entry		153512	1					
ANR	153664	Identifier	i		153512	1					
ANR	153665	Identifier	specId		153512	1					
ANR	153666	Identifier	specId		153512	1					
ANR	153667	CompoundStatement		22:72:764:764	153512	1					
ANR	153668	ExpressionStatement	d -> platformId = platId	410:12:12263:12285	153512	0	True				
ANR	153669	AssignmentExpression	d -> platformId = platId		153512	0		=			
ANR	153670	PtrMemberAccess	d -> platformId		153512	0					
ANR	153671	Identifier	d		153512	0					
ANR	153672	Identifier	platformId		153512	1					
ANR	153673	Identifier	platId		153512	1					
ANR	153674	ExpressionStatement	d -> specificId = specId	411:12:12299:12321	153512	1	True				
ANR	153675	AssignmentExpression	d -> specificId = specId		153512	0		=			
ANR	153676	PtrMemberAccess	d -> specificId		153512	0					
ANR	153677	Identifier	d		153512	0					
ANR	153678	Identifier	specificId		153512	1					
ANR	153679	Identifier	specId		153512	1					
ANR	153680	ReturnStatement	return 1 ;	412:12:12335:12343	153512	2	True				
ANR	153681	PrimaryExpression	1		153512	0					
ANR	153682	ReturnStatement	return 0 ;	414:4:12359:12367	153512	29	True				
ANR	153683	PrimaryExpression	0		153512	0					
ANR	153684	ReturnType	static int		153512	1					
ANR	153685	Identifier	choose_decoding_TT		153512	2					
ANR	153686	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId"		153512	3					
ANR	153687	Parameter	fapi_ufst_server * r	386:19:11396:11415	153512	0	True				
ANR	153688	ParameterType	fapi_ufst_server *		153512	0					
ANR	153689	Identifier	r		153512	1					
ANR	153690	Parameter	ufst_common_font_data * d	386:41:11418:11442	153512	1	True				
ANR	153691	ParameterType	ufst_common_font_data *		153512	0					
ANR	153692	Identifier	d		153512	1					
ANR	153693	Parameter	const char * cmapId	387:19:11464:11481	153512	2	True				
ANR	153694	ParameterType	const char *		153512	0					
ANR	153695	Identifier	cmapId		153512	1					
ANR	153696	CFGEntryNode	ENTRY		153512		True				
ANR	153697	CFGExitNode	EXIT		153512		True				
ANR	153698	Symbol	q . entry [ i ] . specId		153512						
ANR	153699	Symbol	DISK_ACCESS		153512						
ANR	153700	Symbol	q . entry		153512						
ANR	153701	Symbol	cmapId		153512						
ANR	153702	Symbol	* q . entry		153512						
ANR	153703	Symbol	pIFS		153512						
ANR	153704	Symbol	platId		153512						
ANR	153705	Symbol	& platId		153512						
ANR	153706	Symbol	q . numCmap		153512						
ANR	153707	Symbol	d -> platformId		153512						
ANR	153708	Symbol	ROM_ACCESS		153512						
ANR	153709	Symbol	d -> specificId		153512						
ANR	153710	Symbol	specId		153512						
ANR	153711	Symbol	d		153512						
ANR	153712	Symbol	pIFS -> font_access		153512						
ANR	153713	Symbol	i		153512						
ANR	153714	Symbol	font_access		153512						
ANR	153715	Symbol	failed		153512						
ANR	153716	Symbol	* d		153512						
ANR	153717	Symbol	p		153512						
ANR	153718	Symbol	q . entry [ i ] . platId		153512						
ANR	153719	Symbol	q		153512						
ANR	153720	Symbol	d -> is_disk_font		153512						
ANR	153721	Symbol	r		153512						
ANR	153722	Symbol	d -> tt_font_body_offset		153512						
ANR	153723	Symbol	* i		153512						
ANR	153724	Symbol	sscanf		153512						
ANR	153725	Symbol	& specId		153512						
ANR	153726	Symbol	* q		153512						
ANR	153727	Symbol	* pIFS		153512						
ANR	153728	Function	scan_xlatmap	422:0:12492:13331							
ANR	153729	FunctionDef	"scan_xlatmap (fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap , const char * font_kind , int ( * choose_proc ) ( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId ))"		153728	0					
ANR	153730	CompoundStatement		428:0:12792:13331	153728	0					
ANR	153731	IdentifierDeclStatement	const char * p = xlatmap ;	429:4:12798:12821	153728	0	True				
ANR	153732	IdentifierDecl	* p = xlatmap		153728	0					
ANR	153733	IdentifierDeclType	const char *		153728	0					
ANR	153734	Identifier	p		153728	1					
ANR	153735	AssignmentExpression	* p = xlatmap		153728	2		=			
ANR	153736	Identifier	xlatmap		153728	0					
ANR	153737	Identifier	xlatmap		153728	1					
ANR	153738	WhileStatement	while ( * p )		153728	1					
ANR	153739	Condition	* p	431:11:12835:12836	153728	0	True				
ANR	153740	UnaryOperationExpression	* p		153728	0					
ANR	153741	UnaryOperator	*		153728	0					
ANR	153742	Identifier	p		153728	1					
ANR	153743	CompoundStatement		5:8:56:93	153728	1					
ANR	153744	IdentifierDeclStatement	"int good_kind = ! strcmp ( p , font_kind ) ;"	432:8:12849:12886	153728	0	True				
ANR	153745	IdentifierDecl	"good_kind = ! strcmp ( p , font_kind )"		153728	0					
ANR	153746	IdentifierDeclType	int		153728	0					
ANR	153747	Identifier	good_kind		153728	1					
ANR	153748	AssignmentExpression	"good_kind = ! strcmp ( p , font_kind )"		153728	2		=			
ANR	153749	Identifier	good_kind		153728	0					
ANR	153750	UnaryOperationExpression	"! strcmp ( p , font_kind )"		153728	1					
ANR	153751	UnaryOperator	!		153728	0					
ANR	153752	CallExpression	"strcmp ( p , font_kind )"		153728	1					
ANR	153753	Callee	strcmp		153728	0					
ANR	153754	Identifier	strcmp		153728	0					
ANR	153755	ArgumentList	p		153728	1					
ANR	153756	Argument	p		153728	0					
ANR	153757	Identifier	p		153728	0					
ANR	153758	Argument	font_kind		153728	1					
ANR	153759	Identifier	font_kind		153728	0					
ANR	153760	ExpressionStatement	p += strlen ( p ) + 2	434:8:12897:12915	153728	1	True				
ANR	153761	AssignmentExpression	p += strlen ( p ) + 2		153728	0		+=			
ANR	153762	Identifier	p		153728	0					
ANR	153763	AdditiveExpression	strlen ( p ) + 2		153728	1		+			
ANR	153764	CallExpression	strlen ( p )		153728	0					
ANR	153765	Callee	strlen		153728	0					
ANR	153766	Identifier	strlen		153728	0					
ANR	153767	ArgumentList	p		153728	1					
ANR	153768	Argument	p		153728	0					
ANR	153769	Identifier	p		153728	0					
ANR	153770	PrimaryExpression	2		153728	1					
ANR	153771	WhileStatement	while ( * p )		153728	2					
ANR	153772	Condition	* p	435:15:12932:12933	153728	0	True				
ANR	153773	UnaryOperationExpression	* p		153728	0					
ANR	153774	UnaryOperator	*		153728	0					
ANR	153775	Identifier	p		153728	1					
ANR	153776	CompoundStatement		9:12:157:212	153728	1					
ANR	153777	IdentifierDeclStatement	"const char * cmapId = p , * decodingID = p + strlen ( p ) + 1 ;"	436:12:12950:13005	153728	0	True				
ANR	153778	IdentifierDecl	* cmapId = p		153728	0					
ANR	153779	IdentifierDeclType	const char *		153728	0					
ANR	153780	Identifier	cmapId		153728	1					
ANR	153781	AssignmentExpression	* cmapId = p		153728	2		=			
ANR	153782	Identifier	p		153728	0					
ANR	153783	Identifier	p		153728	1					
ANR	153784	IdentifierDecl	* decodingID = p + strlen ( p ) + 1		153728	1					
ANR	153785	IdentifierDeclType	const char *		153728	0					
ANR	153786	Identifier	decodingID		153728	1					
ANR	153787	AssignmentExpression	* decodingID = p + strlen ( p ) + 1		153728	2		=			
ANR	153788	Identifier	decodingID		153728	0					
ANR	153789	AdditiveExpression	p + strlen ( p ) + 1		153728	1		+			
ANR	153790	Identifier	p		153728	0					
ANR	153791	AdditiveExpression	strlen ( p ) + 1		153728	1		+			
ANR	153792	CallExpression	strlen ( p )		153728	0					
ANR	153793	Callee	strlen		153728	0					
ANR	153794	Identifier	strlen		153728	0					
ANR	153795	ArgumentList	p		153728	1					
ANR	153796	Argument	p		153728	0					
ANR	153797	Identifier	p		153728	0					
ANR	153798	PrimaryExpression	1		153728	1					
ANR	153799	ExpressionStatement	"strncpy ( d -> decodingID , decodingID , sizeof ( d -> decodingID ) )"	438:12:13020:13077	153728	1	True				
ANR	153800	CallExpression	"strncpy ( d -> decodingID , decodingID , sizeof ( d -> decodingID ) )"		153728	0					
ANR	153801	Callee	strncpy		153728	0					
ANR	153802	Identifier	strncpy		153728	0					
ANR	153803	ArgumentList	d -> decodingID		153728	1					
ANR	153804	Argument	d -> decodingID		153728	0					
ANR	153805	PtrMemberAccess	d -> decodingID		153728	0					
ANR	153806	Identifier	d		153728	0					
ANR	153807	Identifier	decodingID		153728	1					
ANR	153808	Argument	decodingID		153728	1					
ANR	153809	Identifier	decodingID		153728	0					
ANR	153810	Argument	sizeof ( d -> decodingID )		153728	2					
ANR	153811	SizeofExpression	sizeof ( d -> decodingID )		153728	0					
ANR	153812	Sizeof	sizeof		153728	0					
ANR	153813	PtrMemberAccess	d -> decodingID		153728	1					
ANR	153814	Identifier	d		153728	0					
ANR	153815	Identifier	decodingID		153728	1					
ANR	153816	IfStatement	if ( ! decodingID [ 0 ] )		153728	2					
ANR	153817	Condition	! decodingID [ 0 ]	439:16:13095:13108	153728	0	True				
ANR	153818	UnaryOperationExpression	! decodingID [ 0 ]		153728	0					
ANR	153819	UnaryOperator	!		153728	0					
ANR	153820	ArrayIndexing	decodingID [ 0 ]		153728	1					
ANR	153821	Identifier	decodingID		153728	0					
ANR	153822	PrimaryExpression	0		153728	1					
ANR	153823	BreakStatement	break ;	440:16:13127:13132	153728	1	True				
ANR	153824	ExpressionStatement	p = decodingID + strlen ( decodingID ) + 1	441:12:13146:13185	153728	3	True				
ANR	153825	AssignmentExpression	p = decodingID + strlen ( decodingID ) + 1		153728	0		=			
ANR	153826	Identifier	p		153728	0					
ANR	153827	AdditiveExpression	decodingID + strlen ( decodingID ) + 1		153728	1		+			
ANR	153828	Identifier	decodingID		153728	0					
ANR	153829	AdditiveExpression	strlen ( decodingID ) + 1		153728	1		+			
ANR	153830	CallExpression	strlen ( decodingID )		153728	0					
ANR	153831	Callee	strlen		153728	0					
ANR	153832	Identifier	strlen		153728	0					
ANR	153833	ArgumentList	decodingID		153728	1					
ANR	153834	Argument	decodingID		153728	0					
ANR	153835	Identifier	decodingID		153728	0					
ANR	153836	PrimaryExpression	1		153728	1					
ANR	153837	IfStatement	if ( good_kind )		153728	4					
ANR	153838	Condition	good_kind	442:16:13203:13211	153728	0	True				
ANR	153839	Identifier	good_kind		153728	0					
ANR	153840	IfStatement	"if ( choose_proc ( r , d , cmapId ) )"		153728	1					
ANR	153841	Condition	"choose_proc ( r , d , cmapId )"	443:20:13234:13258	153728	0	True				
ANR	153842	CallExpression	"choose_proc ( r , d , cmapId )"		153728	0					
ANR	153843	Callee	choose_proc		153728	0					
ANR	153844	Identifier	choose_proc		153728	0					
ANR	153845	ArgumentList	r		153728	1					
ANR	153846	Argument	r		153728	0					
ANR	153847	Identifier	r		153728	0					
ANR	153848	Argument	d		153728	1					
ANR	153849	Identifier	d		153728	0					
ANR	153850	Argument	cmapId		153728	2					
ANR	153851	Identifier	cmapId		153728	0					
ANR	153852	ReturnStatement	return ;	444:20:13281:13287	153728	1	True				
ANR	153853	ExpressionStatement	d -> decodingID [ 0 ] = 0	447:4:13309:13329	153728	2	True				
ANR	153854	AssignmentExpression	d -> decodingID [ 0 ] = 0		153728	0		=			
ANR	153855	ArrayIndexing	d -> decodingID [ 0 ]		153728	0					
ANR	153856	PtrMemberAccess	d -> decodingID		153728	0					
ANR	153857	Identifier	d		153728	0					
ANR	153858	Identifier	decodingID		153728	1					
ANR	153859	PrimaryExpression	0		153728	1					
ANR	153860	PrimaryExpression	0		153728	1					
ANR	153861	ReturnType	static void		153728	1					
ANR	153862	Identifier	scan_xlatmap		153728	2					
ANR	153863	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap , const char * font_kind , int ( * choose_proc ) ( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId )"		153728	3					
ANR	153864	Parameter	fapi_ufst_server * r	423:13:12517:12536	153728	0	True				
ANR	153865	ParameterType	fapi_ufst_server *		153728	0					
ANR	153866	Identifier	r		153728	1					
ANR	153867	Parameter	ufst_common_font_data * d	423:35:12539:12563	153728	1	True				
ANR	153868	ParameterType	ufst_common_font_data *		153728	0					
ANR	153869	Identifier	d		153728	1					
ANR	153870	Parameter	const char * xlatmap	424:13:12579:12597	153728	2	True				
ANR	153871	ParameterType	const char *		153728	0					
ANR	153872	Identifier	xlatmap		153728	1					
ANR	153873	Parameter	const char * font_kind	424:34:12600:12620	153728	3	True				
ANR	153874	ParameterType	const char *		153728	0					
ANR	153875	Identifier	font_kind		153728	1					
ANR	153876	Parameter	"int ( * choose_proc ) ( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId )"	425:13:12636:12789	153728	4	True				
ANR	153877	ParameterType	"(( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId ) int) *"		153728	0					
ANR	153878	Identifier	choose_proc		153728	1					
ANR	153879	CFGEntryNode	ENTRY		153728		True				
ANR	153880	CFGExitNode	EXIT		153728		True				
ANR	153881	Symbol	strcmp		153728						
ANR	153882	Symbol	d		153728						
ANR	153883	Symbol	good_kind		153728						
ANR	153884	Symbol	* d -> decodingID		153728						
ANR	153885	Symbol	* * d		153728						
ANR	153886	Symbol	cmapId		153728						
ANR	153887	Symbol	* d		153728						
ANR	153888	Symbol	* decodingID		153728						
ANR	153889	Symbol	p		153728						
ANR	153890	Symbol	xlatmap		153728						
ANR	153891	Symbol	strlen		153728						
ANR	153892	Symbol	decodingID		153728						
ANR	153893	Symbol	r		153728						
ANR	153894	Symbol	d -> decodingID		153728						
ANR	153895	Symbol	choose_proc		153728						
ANR	153896	Symbol	font_kind		153728						
ANR	153897	Symbol	* p		153728						
ANR	153898	Function	choose_decoding	450:0:13334:14041							
ANR	153899	FunctionDef	"choose_decoding (fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap)"		153898	0					
ANR	153900	CompoundStatement		453:0:13448:14041	153898	0					
ANR	153901	IfStatement	if ( xlatmap != 0 )		153898	0					
ANR	153902	Condition	xlatmap != 0	454:8:13458:13469	153898	0	True				
ANR	153903	EqualityExpression	xlatmap != 0		153898	0		!=			
ANR	153904	Identifier	xlatmap		153898	0					
ANR	153905	PrimaryExpression	0		153898	1					
ANR	153906	SwitchStatement	switch ( d -> font_type )		153898	1					
ANR	153907	Condition	d -> font_type	455:16:13488:13499	153898	0	True				
ANR	153908	PtrMemberAccess	d -> font_type		153898	0					
ANR	153909	Identifier	d		153898	0					
ANR	153910	Identifier	font_type		153898	1					
ANR	153911	CompoundStatement		3:30:53:53	153898	1					
ANR	153912	Label	case FC_IF_TYPE :	456:12:13516:13531	153898	0	True				
ANR	153913	Identifier	FC_IF_TYPE		153898	0					
ANR	153914	BreakStatement	break ;	457:16:13563:13568	153898	1	True				
ANR	153915	Label	case FC_PST1_TYPE :	458:12:13582:13599	153898	2	True				
ANR	153916	Identifier	FC_PST1_TYPE		153898	0					
ANR	153917	ExpressionStatement	"scan_xlatmap ( r , d , xlatmap , ""PostScript"" , choose_decoding_general )"	459:16:13617:13712	153898	3	True				
ANR	153918	CallExpression	"scan_xlatmap ( r , d , xlatmap , ""PostScript"" , choose_decoding_general )"		153898	0					
ANR	153919	Callee	scan_xlatmap		153898	0					
ANR	153920	Identifier	scan_xlatmap		153898	0					
ANR	153921	ArgumentList	r		153898	1					
ANR	153922	Argument	r		153898	0					
ANR	153923	Identifier	r		153898	0					
ANR	153924	Argument	d		153898	1					
ANR	153925	Identifier	d		153898	0					
ANR	153926	Argument	xlatmap		153898	2					
ANR	153927	Identifier	xlatmap		153898	0					
ANR	153928	Argument	"""PostScript"""		153898	3					
ANR	153929	PrimaryExpression	"""PostScript"""		153898	0					
ANR	153930	Argument	choose_decoding_general		153898	4					
ANR	153931	Identifier	choose_decoding_general		153898	0					
ANR	153932	BreakStatement	break ;	461:16:13730:13735	153898	4	True				
ANR	153933	Label	case FC_TT_TYPE :	462:12:13749:13764	153898	5	True				
ANR	153934	Identifier	FC_TT_TYPE		153898	0					
ANR	153935	ExpressionStatement	"scan_xlatmap ( r , d , xlatmap , ""TrueType"" , choose_decoding_TT )"	463:16:13782:13841	153898	6	True				
ANR	153936	CallExpression	"scan_xlatmap ( r , d , xlatmap , ""TrueType"" , choose_decoding_TT )"		153898	0					
ANR	153937	Callee	scan_xlatmap		153898	0					
ANR	153938	Identifier	scan_xlatmap		153898	0					
ANR	153939	ArgumentList	r		153898	1					
ANR	153940	Argument	r		153898	0					
ANR	153941	Identifier	r		153898	0					
ANR	153942	Argument	d		153898	1					
ANR	153943	Identifier	d		153898	0					
ANR	153944	Argument	xlatmap		153898	2					
ANR	153945	Identifier	xlatmap		153898	0					
ANR	153946	Argument	"""TrueType"""		153898	3					
ANR	153947	PrimaryExpression	"""TrueType"""		153898	0					
ANR	153948	Argument	choose_decoding_TT		153898	4					
ANR	153949	Identifier	choose_decoding_TT		153898	0					
ANR	153950	BreakStatement	break ;	464:16:13859:13864	153898	7	True				
ANR	153951	Label	case FC_FCO_TYPE :	465:12:13878:13894	153898	8	True				
ANR	153952	Identifier	FC_FCO_TYPE		153898	0					
ANR	153953	ExpressionStatement	"scan_xlatmap ( r , d , xlatmap , ""Microtype"" , choose_decoding_general )"	466:16:13912:14006	153898	9	True				
ANR	153954	CallExpression	"scan_xlatmap ( r , d , xlatmap , ""Microtype"" , choose_decoding_general )"		153898	0					
ANR	153955	Callee	scan_xlatmap		153898	0					
ANR	153956	Identifier	scan_xlatmap		153898	0					
ANR	153957	ArgumentList	r		153898	1					
ANR	153958	Argument	r		153898	0					
ANR	153959	Identifier	r		153898	0					
ANR	153960	Argument	d		153898	1					
ANR	153961	Identifier	d		153898	0					
ANR	153962	Argument	xlatmap		153898	2					
ANR	153963	Identifier	xlatmap		153898	0					
ANR	153964	Argument	"""Microtype"""		153898	3					
ANR	153965	PrimaryExpression	"""Microtype"""		153898	0					
ANR	153966	Argument	choose_decoding_general		153898	4					
ANR	153967	Identifier	choose_decoding_general		153898	0					
ANR	153968	BreakStatement	break ;	468:16:14024:14029	153898	10	True				
ANR	153969	ReturnType	static void		153898	1					
ANR	153970	Identifier	choose_decoding		153898	2					
ANR	153971	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap"		153898	3					
ANR	153972	Parameter	fapi_ufst_server * r	451:16:13362:13381	153898	0	True				
ANR	153973	ParameterType	fapi_ufst_server *		153898	0					
ANR	153974	Identifier	r		153898	1					
ANR	153975	Parameter	ufst_common_font_data * d	451:38:13384:13408	153898	1	True				
ANR	153976	ParameterType	ufst_common_font_data *		153898	0					
ANR	153977	Identifier	d		153898	1					
ANR	153978	Parameter	const char * xlatmap	452:16:13427:13445	153898	2	True				
ANR	153979	ParameterType	const char *		153898	0					
ANR	153980	Identifier	xlatmap		153898	1					
ANR	153981	CFGEntryNode	ENTRY		153898		True				
ANR	153982	CFGExitNode	EXIT		153898		True				
ANR	153983	Symbol	xlatmap		153898						
ANR	153984	Symbol	d -> font_type		153898						
ANR	153985	Symbol	r		153898						
ANR	153986	Symbol	d		153898						
ANR	153987	Symbol	choose_decoding_general		153898						
ANR	153988	Symbol	choose_decoding_TT		153898						
ANR	153989	Symbol	* d		153898						
ANR	153990	Function	store_word	472:0:14044:14148							
ANR	153991	FunctionDef	"store_word (byte * * p , ushort w)"		153990	0					
ANR	153992	CompoundStatement		474:0:14095:14148	153990	0					
ANR	153993	ExpressionStatement	* ( ( * p ) ++ ) = w / 256	475:4:14101:14120	153990	0	True				
ANR	153994	AssignmentExpression	* ( ( * p ) ++ ) = w / 256		153990	0		=			
ANR	153995	UnaryOperationExpression	* ( ( * p ) ++ )		153990	0					
ANR	153996	UnaryOperator	*		153990	0					
ANR	153997	PostIncDecOperationExpression	( * p ) ++		153990	1					
ANR	153998	UnaryOperationExpression	* p		153990	0					
ANR	153999	UnaryOperator	*		153990	0					
ANR	154000	Identifier	p		153990	1					
ANR	154001	IncDec	++		153990	1					
ANR	154002	MultiplicativeExpression	w / 256		153990	1		/			
ANR	154003	Identifier	w		153990	0					
ANR	154004	PrimaryExpression	256		153990	1					
ANR	154005	ExpressionStatement	* ( ( * p ) ++ ) = w % 256	476:4:14126:14145	153990	1	True				
ANR	154006	AssignmentExpression	* ( ( * p ) ++ ) = w % 256		153990	0		=			
ANR	154007	UnaryOperationExpression	* ( ( * p ) ++ )		153990	0					
ANR	154008	UnaryOperator	*		153990	0					
ANR	154009	PostIncDecOperationExpression	( * p ) ++		153990	1					
ANR	154010	UnaryOperationExpression	* p		153990	0					
ANR	154011	UnaryOperator	*		153990	0					
ANR	154012	Identifier	p		153990	1					
ANR	154013	IncDec	++		153990	1					
ANR	154014	MultiplicativeExpression	w % 256		153990	1		%			
ANR	154015	Identifier	w		153990	0					
ANR	154016	PrimaryExpression	256		153990	1					
ANR	154017	ReturnType	static inline void		153990	1					
ANR	154018	Identifier	store_word		153990	2					
ANR	154019	ParameterList	"byte * * p , ushort w"		153990	3					
ANR	154020	Parameter	byte * * p	473:11:14074:14082	153990	0	True				
ANR	154021	ParameterType	byte * *		153990	0					
ANR	154022	Identifier	p		153990	1					
ANR	154023	Parameter	ushort w	473:22:14085:14092	153990	1	True				
ANR	154024	ParameterType	ushort		153990	0					
ANR	154025	Identifier	w		153990	1					
ANR	154026	CFGEntryNode	ENTRY		153990		True				
ANR	154027	CFGExitNode	EXIT		153990		True				
ANR	154028	Symbol	p		153990						
ANR	154029	Symbol	* ( ( * p ) ++ )		153990						
ANR	154030	Symbol	w		153990						
ANR	154031	Symbol	* p		153990						
ANR	154032	Function	get_TT_glyph	480:0:14151:16767							
ANR	154033	FunctionDef	"get_TT_glyph (fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId)"		154032	0					
ANR	154034	CompoundStatement		482:0:14229:16767	154032	0					
ANR	154035	IdentifierDeclStatement	pcleo_glyph_list_elem * g ;	483:4:14235:14259	154032	0	True				
ANR	154036	IdentifierDecl	* g		154032	0					
ANR	154037	IdentifierDeclType	pcleo_glyph_list_elem *		154032	0					
ANR	154038	Identifier	g		154032	1					
ANR	154039	IdentifierDeclStatement	PCLETTO_CHDR * h ;	484:4:14265:14280	154032	1	True				
ANR	154040	IdentifierDecl	* h		154032	0					
ANR	154041	IdentifierDeclType	PCLETTO_CHDR *		154032	0					
ANR	154042	Identifier	h		154032	1					
ANR	154043	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	485:4:14286:14357	154032	2	True				
ANR	154044	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		154032	0					
ANR	154045	IdentifierDeclType	ufst_common_font_data *		154032	0					
ANR	154046	Identifier	d		154032	1					
ANR	154047	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		154032	2		=			
ANR	154048	Identifier	d		154032	0					
ANR	154049	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		154032	1		-			
ANR	154050	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		154032	0					
ANR	154051	CastTarget	ufst_common_font_data *		154032	0					
ANR	154052	MemberAccess	r -> fc . font_hdr		154032	1					
ANR	154053	PtrMemberAccess	r -> fc		154032	0					
ANR	154054	Identifier	r		154032	0					
ANR	154055	Identifier	fc		154032	1					
ANR	154056	Identifier	font_hdr		154032	1					
ANR	154057	PrimaryExpression	1		154032	1					
ANR	154058	IdentifierDeclStatement	LPUB8 q ;	486:4:14363:14370	154032	3	True				
ANR	154059	IdentifierDecl	q		154032	0					
ANR	154060	IdentifierDeclType	LPUB8		154032	0					
ANR	154061	Identifier	q		154032	1					
ANR	154062	IdentifierDeclStatement	"ushort glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 ) ;"	487:4:14376:14427	154032	4	True				
ANR	154063	IdentifierDecl	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		154032	0					
ANR	154064	IdentifierDeclType	ushort		154032	0					
ANR	154065	Identifier	glyph_length		154032	1					
ANR	154066	AssignmentExpression	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		154032	2		=			
ANR	154067	Identifier	glyph_length		154032	0					
ANR	154068	CallExpression	"ff -> get_glyph ( ff , chId , 0 , 0 )"		154032	1					
ANR	154069	Callee	ff -> get_glyph		154032	0					
ANR	154070	PtrMemberAccess	ff -> get_glyph		154032	0					
ANR	154071	Identifier	ff		154032	0					
ANR	154072	Identifier	get_glyph		154032	1					
ANR	154073	ArgumentList	ff		154032	1					
ANR	154074	Argument	ff		154032	0					
ANR	154075	Identifier	ff		154032	0					
ANR	154076	Argument	chId		154032	1					
ANR	154077	Identifier	chId		154032	0					
ANR	154078	Argument	0		154032	2					
ANR	154079	PrimaryExpression	0		154032	0					
ANR	154080	Argument	0		154032	3					
ANR	154081	PrimaryExpression	0		154032	0					
ANR	154082	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	488:4:14433:14472	154032	5	True				
ANR	154083	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		154032	0					
ANR	154084	IdentifierDeclType	bool		154032	0					
ANR	154085	Identifier	use_XL_format		154032	1					
ANR	154086	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		154032	2		=			
ANR	154087	Identifier	use_XL_format		154032	0					
ANR	154088	PtrMemberAccess	ff -> is_mtx_skipped		154032	1					
ANR	154089	Identifier	ff		154032	0					
ANR	154090	Identifier	is_mtx_skipped		154032	1					
ANR	154091	IfStatement	if ( glyph_length == ( ushort ) - 1 )		154032	6					
ANR	154092	Condition	glyph_length == ( ushort ) - 1	499:8:14792:14819	154032	0	True				
ANR	154093	EqualityExpression	glyph_length == ( ushort ) - 1		154032	0		==			
ANR	154094	Identifier	glyph_length		154032	0					
ANR	154095	CastExpression	( ushort ) - 1		154032	1					
ANR	154096	CastTarget	ushort		154032	0					
ANR	154097	UnaryOperationExpression	- 1		154032	1					
ANR	154098	UnaryOperator	-		154032	0					
ANR	154099	PrimaryExpression	1		154032	1					
ANR	154100	CompoundStatement		18:38:592:592	154032	1					
ANR	154101	ExpressionStatement	r -> callback_error = gs_error_invalidfont	500:8:14832:14872	154032	0	True				
ANR	154102	AssignmentExpression	r -> callback_error = gs_error_invalidfont		154032	0		=			
ANR	154103	PtrMemberAccess	r -> callback_error		154032	0					
ANR	154104	Identifier	r		154032	0					
ANR	154105	Identifier	callback_error		154032	1					
ANR	154106	Identifier	gs_error_invalidfont		154032	1					
ANR	154107	ReturnStatement	return 0 ;	501:8:14882:14890	154032	1	True				
ANR	154108	PrimaryExpression	0		154032	0					
ANR	154109	ExpressionStatement	"g = ( pcleo_glyph_list_elem * ) gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"	503:4:14902:15285	154032	7	True				
ANR	154110	AssignmentExpression	"g = ( pcleo_glyph_list_elem * ) gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"		154032	0		=			
ANR	154111	Identifier	g		154032	0					
ANR	154112	CastExpression	"( pcleo_glyph_list_elem * ) gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"		154032	1					
ANR	154113	CastTarget	pcleo_glyph_list_elem *		154032	0					
ANR	154114	CallExpression	"gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"		154032	1					
ANR	154115	Callee	gs_malloc		154032	0					
ANR	154116	Identifier	gs_malloc		154032	0					
ANR	154117	ArgumentList	r -> mem		154032	1					
ANR	154118	Argument	r -> mem		154032	0					
ANR	154119	PtrMemberAccess	r -> mem		154032	0					
ANR	154120	Identifier	r		154032	0					
ANR	154121	Identifier	mem		154032	1					
ANR	154122	Argument	sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2		154032	1					
ANR	154123	AdditiveExpression	sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2		154032	0		+			
ANR	154124	SizeofExpression	sizeof ( pcleo_glyph_list_elem )		154032	0					
ANR	154125	Sizeof	sizeof		154032	0					
ANR	154126	SizeofOperand	pcleo_glyph_list_elem		154032	1					
ANR	154127	AdditiveExpression	( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2		154032	1		+			
ANR	154128	ConditionalExpression	use_XL_format ? 12 : sizeof ( PCLETTO_CHDR )		154032	0					
ANR	154129	Condition	use_XL_format		154032	0					
ANR	154130	Identifier	use_XL_format		154032	0					
ANR	154131	PrimaryExpression	12		154032	1					
ANR	154132	SizeofExpression	sizeof ( PCLETTO_CHDR )		154032	2					
ANR	154133	Sizeof	sizeof		154032	0					
ANR	154134	SizeofOperand	PCLETTO_CHDR		154032	1					
ANR	154135	AdditiveExpression	glyph_length + 2		154032	1		+			
ANR	154136	Identifier	glyph_length		154032	0					
ANR	154137	PrimaryExpression	2		154032	1					
ANR	154138	Argument	1		154032	2					
ANR	154139	PrimaryExpression	1		154032	0					
ANR	154140	Argument	"""PCLETTO char"""		154032	3					
ANR	154141	PrimaryExpression	"""PCLETTO char"""		154032	0					
ANR	154142	IfStatement	if ( g == 0 )		154032	8					
ANR	154143	Condition	g == 0	509:8:15295:15300	154032	0	True				
ANR	154144	EqualityExpression	g == 0		154032	0		==			
ANR	154145	Identifier	g		154032	0					
ANR	154146	PrimaryExpression	0		154032	1					
ANR	154147	CompoundStatement		28:16:1073:1073	154032	1					
ANR	154148	ExpressionStatement	r -> callback_error = gs_error_VMerror	510:8:15313:15349	154032	0	True				
ANR	154149	AssignmentExpression	r -> callback_error = gs_error_VMerror		154032	0		=			
ANR	154150	PtrMemberAccess	r -> callback_error		154032	0					
ANR	154151	Identifier	r		154032	0					
ANR	154152	Identifier	callback_error		154032	1					
ANR	154153	Identifier	gs_error_VMerror		154032	1					
ANR	154154	ReturnStatement	return 0 ;	511:8:15359:15367	154032	1	True				
ANR	154155	PrimaryExpression	0		154032	0					
ANR	154156	ExpressionStatement	g -> chId = chId	513:4:15379:15393	154032	9	True				
ANR	154157	AssignmentExpression	g -> chId = chId		154032	0		=			
ANR	154158	PtrMemberAccess	g -> chId		154032	0					
ANR	154159	Identifier	g		154032	0					
ANR	154160	Identifier	chId		154032	1					
ANR	154161	Identifier	chId		154032	1					
ANR	154162	ExpressionStatement	g -> next = d -> glyphs	514:4:15399:15418	154032	10	True				
ANR	154163	AssignmentExpression	g -> next = d -> glyphs		154032	0		=			
ANR	154164	PtrMemberAccess	g -> next		154032	0					
ANR	154165	Identifier	g		154032	0					
ANR	154166	Identifier	next		154032	1					
ANR	154167	PtrMemberAccess	d -> glyphs		154032	1					
ANR	154168	Identifier	d		154032	0					
ANR	154169	Identifier	glyphs		154032	1					
ANR	154170	ExpressionStatement	d -> glyphs = g	515:4:15424:15437	154032	11	True				
ANR	154171	AssignmentExpression	d -> glyphs = g		154032	0		=			
ANR	154172	PtrMemberAccess	d -> glyphs		154032	0					
ANR	154173	Identifier	d		154032	0					
ANR	154174	Identifier	glyphs		154032	1					
ANR	154175	Identifier	g		154032	1					
ANR	154176	ExpressionStatement	h = ( PCLETTO_CHDR * ) ( g + 1 )	516:4:15443:15471	154032	12	True				
ANR	154177	AssignmentExpression	h = ( PCLETTO_CHDR * ) ( g + 1 )		154032	0		=			
ANR	154178	Identifier	h		154032	0					
ANR	154179	CastExpression	( PCLETTO_CHDR * ) ( g + 1 )		154032	1					
ANR	154180	CastTarget	PCLETTO_CHDR *		154032	0					
ANR	154181	AdditiveExpression	g + 1		154032	1		+			
ANR	154182	Identifier	g		154032	0					
ANR	154183	PrimaryExpression	1		154032	1					
ANR	154184	ExpressionStatement	h -> h . format = 15	517:4:15477:15493	154032	13	True				
ANR	154185	AssignmentExpression	h -> h . format = 15		154032	0		=			
ANR	154186	MemberAccess	h -> h . format		154032	0					
ANR	154187	PtrMemberAccess	h -> h		154032	0					
ANR	154188	Identifier	h		154032	0					
ANR	154189	Identifier	h		154032	1					
ANR	154190	Identifier	format		154032	1					
ANR	154191	PrimaryExpression	15		154032	1					
ANR	154192	IfStatement	if ( use_XL_format )		154032	14					
ANR	154193	Condition	use_XL_format	518:8:15503:15515	154032	0	True				
ANR	154194	Identifier	use_XL_format		154032	0					
ANR	154195	CompoundStatement		37:23:1288:1288	154032	1					
ANR	154196	ExpressionStatement	h -> h . continuation = 2	519:8:15528:15549	154032	0	True				
ANR	154197	AssignmentExpression	h -> h . continuation = 2		154032	0		=			
ANR	154198	MemberAccess	h -> h . continuation		154032	0					
ANR	154199	PtrMemberAccess	h -> h		154032	0					
ANR	154200	Identifier	h		154032	0					
ANR	154201	Identifier	h		154032	1					
ANR	154202	Identifier	continuation		154032	1					
ANR	154203	PrimaryExpression	2		154032	1					
ANR	154204	ExpressionStatement	q = ( LPUB8 ) h + 2	520:8:15559:15576	154032	1	True				
ANR	154205	AssignmentExpression	q = ( LPUB8 ) h + 2		154032	0		=			
ANR	154206	Identifier	q		154032	0					
ANR	154207	AdditiveExpression	( LPUB8 ) h + 2		154032	1		+			
ANR	154208	CastExpression	( LPUB8 ) h		154032	0					
ANR	154209	CastTarget	LPUB8		154032	0					
ANR	154210	Identifier	h		154032	1					
ANR	154211	PrimaryExpression	2		154032	1					
ANR	154212	ExpressionStatement	"store_word ( & q , ( ushort ) ( glyph_length + 10 ) )"	521:8:15586:15630	154032	2	True				
ANR	154213	CallExpression	"store_word ( & q , ( ushort ) ( glyph_length + 10 ) )"		154032	0					
ANR	154214	Callee	store_word		154032	0					
ANR	154215	Identifier	store_word		154032	0					
ANR	154216	ArgumentList	& q		154032	1					
ANR	154217	Argument	& q		154032	0					
ANR	154218	UnaryOperationExpression	& q		154032	0					
ANR	154219	UnaryOperator	&		154032	0					
ANR	154220	Identifier	q		154032	1					
ANR	154221	Argument	( ushort ) ( glyph_length + 10 )		154032	1					
ANR	154222	CastExpression	( ushort ) ( glyph_length + 10 )		154032	0					
ANR	154223	CastTarget	ushort		154032	0					
ANR	154224	AdditiveExpression	glyph_length + 10		154032	1		+			
ANR	154225	Identifier	glyph_length		154032	0					
ANR	154226	PrimaryExpression	10		154032	1					
ANR	154227	ExpressionStatement	"store_word ( & q , ( ushort ) ( r -> sb_x >> r -> If . frac_shift ) )"	522:8:15640:15694	154032	3	True				
ANR	154228	CallExpression	"store_word ( & q , ( ushort ) ( r -> sb_x >> r -> If . frac_shift ) )"		154032	0					
ANR	154229	Callee	store_word		154032	0					
ANR	154230	Identifier	store_word		154032	0					
ANR	154231	ArgumentList	& q		154032	1					
ANR	154232	Argument	& q		154032	0					
ANR	154233	UnaryOperationExpression	& q		154032	0					
ANR	154234	UnaryOperator	&		154032	0					
ANR	154235	Identifier	q		154032	1					
ANR	154236	Argument	( ushort ) ( r -> sb_x >> r -> If . frac_shift )		154032	1					
ANR	154237	CastExpression	( ushort ) ( r -> sb_x >> r -> If . frac_shift )		154032	0					
ANR	154238	CastTarget	ushort		154032	0					
ANR	154239	ShiftExpression	r -> sb_x >> r -> If . frac_shift		154032	1		>>			
ANR	154240	PtrMemberAccess	r -> sb_x		154032	0					
ANR	154241	Identifier	r		154032	0					
ANR	154242	Identifier	sb_x		154032	1					
ANR	154243	MemberAccess	r -> If . frac_shift		154032	1					
ANR	154244	PtrMemberAccess	r -> If		154032	0					
ANR	154245	Identifier	r		154032	0					
ANR	154246	Identifier	If		154032	1					
ANR	154247	Identifier	frac_shift		154032	1					
ANR	154248	ExpressionStatement	"store_word ( & q , ( ushort ) ( r -> aw_x >> r -> If . frac_shift ) )"	523:8:15747:15801	154032	4	True				
ANR	154249	CallExpression	"store_word ( & q , ( ushort ) ( r -> aw_x >> r -> If . frac_shift ) )"		154032	0					
ANR	154250	Callee	store_word		154032	0					
ANR	154251	Identifier	store_word		154032	0					
ANR	154252	ArgumentList	& q		154032	1					
ANR	154253	Argument	& q		154032	0					
ANR	154254	UnaryOperationExpression	& q		154032	0					
ANR	154255	UnaryOperator	&		154032	0					
ANR	154256	Identifier	q		154032	1					
ANR	154257	Argument	( ushort ) ( r -> aw_x >> r -> If . frac_shift )		154032	1					
ANR	154258	CastExpression	( ushort ) ( r -> aw_x >> r -> If . frac_shift )		154032	0					
ANR	154259	CastTarget	ushort		154032	0					
ANR	154260	ShiftExpression	r -> aw_x >> r -> If . frac_shift		154032	1		>>			
ANR	154261	PtrMemberAccess	r -> aw_x		154032	0					
ANR	154262	Identifier	r		154032	0					
ANR	154263	Identifier	aw_x		154032	1					
ANR	154264	MemberAccess	r -> If . frac_shift		154032	1					
ANR	154265	PtrMemberAccess	r -> If		154032	0					
ANR	154266	Identifier	r		154032	0					
ANR	154267	Identifier	If		154032	1					
ANR	154268	Identifier	frac_shift		154032	1					
ANR	154269	ExpressionStatement	"store_word ( & q , 0 )"	524:8:15811:15828	154032	5	True				
ANR	154270	CallExpression	"store_word ( & q , 0 )"		154032	0					
ANR	154271	Callee	store_word		154032	0					
ANR	154272	Identifier	store_word		154032	0					
ANR	154273	ArgumentList	& q		154032	1					
ANR	154274	Argument	& q		154032	0					
ANR	154275	UnaryOperationExpression	& q		154032	0					
ANR	154276	UnaryOperator	&		154032	0					
ANR	154277	Identifier	q		154032	1					
ANR	154278	Argument	0		154032	1					
ANR	154279	PrimaryExpression	0		154032	0					
ANR	154280	ExpressionStatement	"store_word ( & q , chId )"	525:8:15838:15858	154032	6	True				
ANR	154281	CallExpression	"store_word ( & q , chId )"		154032	0					
ANR	154282	Callee	store_word		154032	0					
ANR	154283	Identifier	store_word		154032	0					
ANR	154284	ArgumentList	& q		154032	1					
ANR	154285	Argument	& q		154032	0					
ANR	154286	UnaryOperationExpression	& q		154032	0					
ANR	154287	UnaryOperator	&		154032	0					
ANR	154288	Identifier	q		154032	1					
ANR	154289	Argument	chId		154032	1					
ANR	154290	Identifier	chId		154032	0					
ANR	154291	ElseStatement	else		154032	0					
ANR	154292	CompoundStatement		46:9:1645:1645	154032	0					
ANR	154293	ExpressionStatement	h -> h . continuation = 0	528:8:15885:15906	154032	0	True				
ANR	154294	AssignmentExpression	h -> h . continuation = 0		154032	0		=			
ANR	154295	MemberAccess	h -> h . continuation		154032	0					
ANR	154296	PtrMemberAccess	h -> h		154032	0					
ANR	154297	Identifier	h		154032	0					
ANR	154298	Identifier	h		154032	1					
ANR	154299	Identifier	continuation		154032	1					
ANR	154300	PrimaryExpression	0		154032	1					
ANR	154301	ExpressionStatement	h -> h . descriptorsize = 4	529:8:15916:15939	154032	1	True				
ANR	154302	AssignmentExpression	h -> h . descriptorsize = 4		154032	0		=			
ANR	154303	MemberAccess	h -> h . descriptorsize		154032	0					
ANR	154304	PtrMemberAccess	h -> h		154032	0					
ANR	154305	Identifier	h		154032	0					
ANR	154306	Identifier	h		154032	1					
ANR	154307	Identifier	descriptorsize		154032	1					
ANR	154308	PrimaryExpression	4		154032	1					
ANR	154309	ExpressionStatement	h -> h . ch_class = 15	530:8:15949:15967	154032	2	True				
ANR	154310	AssignmentExpression	h -> h . ch_class = 15		154032	0		=			
ANR	154311	MemberAccess	h -> h . ch_class		154032	0					
ANR	154312	PtrMemberAccess	h -> h		154032	0					
ANR	154313	Identifier	h		154032	0					
ANR	154314	Identifier	h		154032	1					
ANR	154315	Identifier	ch_class		154032	1					
ANR	154316	PrimaryExpression	15		154032	1					
ANR	154317	ExpressionStatement	h -> add_data = 0	531:8:15977:15992	154032	3	True				
ANR	154318	AssignmentExpression	h -> add_data = 0		154032	0		=			
ANR	154319	PtrMemberAccess	h -> add_data		154032	0					
ANR	154320	Identifier	h		154032	0					
ANR	154321	Identifier	add_data		154032	1					
ANR	154322	PrimaryExpression	0		154032	1					
ANR	154323	ExpressionStatement	q = ( LPUB8 ) & h -> charDataSize	532:8:16002:16031	154032	4	True				
ANR	154324	AssignmentExpression	q = ( LPUB8 ) & h -> charDataSize		154032	0		=			
ANR	154325	Identifier	q		154032	0					
ANR	154326	CastExpression	( LPUB8 ) & h -> charDataSize		154032	1					
ANR	154327	CastTarget	LPUB8		154032	0					
ANR	154328	UnaryOperationExpression	& h -> charDataSize		154032	1					
ANR	154329	UnaryOperator	&		154032	0					
ANR	154330	PtrMemberAccess	h -> charDataSize		154032	1					
ANR	154331	Identifier	h		154032	0					
ANR	154332	Identifier	charDataSize		154032	1					
ANR	154333	ExpressionStatement	"store_word ( & q , ( ushort ) ( glyph_length + 4 ) )"	533:8:16041:16084	154032	5	True				
ANR	154334	CallExpression	"store_word ( & q , ( ushort ) ( glyph_length + 4 ) )"		154032	0					
ANR	154335	Callee	store_word		154032	0					
ANR	154336	Identifier	store_word		154032	0					
ANR	154337	ArgumentList	& q		154032	1					
ANR	154338	Argument	& q		154032	0					
ANR	154339	UnaryOperationExpression	& q		154032	0					
ANR	154340	UnaryOperator	&		154032	0					
ANR	154341	Identifier	q		154032	1					
ANR	154342	Argument	( ushort ) ( glyph_length + 4 )		154032	1					
ANR	154343	CastExpression	( ushort ) ( glyph_length + 4 )		154032	0					
ANR	154344	CastTarget	ushort		154032	0					
ANR	154345	AdditiveExpression	glyph_length + 4		154032	1		+			
ANR	154346	Identifier	glyph_length		154032	0					
ANR	154347	PrimaryExpression	4		154032	1					
ANR	154348	ExpressionStatement	"store_word ( & q , chId )"	534:8:16094:16114	154032	6	True				
ANR	154349	CallExpression	"store_word ( & q , chId )"		154032	0					
ANR	154350	Callee	store_word		154032	0					
ANR	154351	Identifier	store_word		154032	0					
ANR	154352	ArgumentList	& q		154032	1					
ANR	154353	Argument	& q		154032	0					
ANR	154354	UnaryOperationExpression	& q		154032	0					
ANR	154355	UnaryOperator	&		154032	0					
ANR	154356	Identifier	q		154032	1					
ANR	154357	Argument	chId		154032	1					
ANR	154358	Identifier	chId		154032	0					
ANR	154359	IfStatement	"if ( ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length ) == ( ushort ) - 1 )"		154032	15					
ANR	154360	Condition	"ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length ) == ( ushort ) - 1"	536:8:16130:16193	154032	0	True				
ANR	154361	EqualityExpression	"ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length ) == ( ushort ) - 1"		154032	0		==			
ANR	154362	CallExpression	"ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length )"		154032	0					
ANR	154363	Callee	ff -> get_glyph		154032	0					
ANR	154364	PtrMemberAccess	ff -> get_glyph		154032	0					
ANR	154365	Identifier	ff		154032	0					
ANR	154366	Identifier	get_glyph		154032	1					
ANR	154367	ArgumentList	ff		154032	1					
ANR	154368	Argument	ff		154032	0					
ANR	154369	Identifier	ff		154032	0					
ANR	154370	Argument	chId		154032	1					
ANR	154371	Identifier	chId		154032	0					
ANR	154372	Argument	( LPUB8 ) q		154032	2					
ANR	154373	CastExpression	( LPUB8 ) q		154032	0					
ANR	154374	CastTarget	LPUB8		154032	0					
ANR	154375	Identifier	q		154032	1					
ANR	154376	Argument	glyph_length		154032	3					
ANR	154377	Identifier	glyph_length		154032	0					
ANR	154378	CastExpression	( ushort ) - 1		154032	1					
ANR	154379	CastTarget	ushort		154032	0					
ANR	154380	UnaryOperationExpression	- 1		154032	1					
ANR	154381	UnaryOperator	-		154032	0					
ANR	154382	PrimaryExpression	1		154032	1					
ANR	154383	CompoundStatement		55:74:1966:1966	154032	1					
ANR	154384	ExpressionStatement	r -> callback_error = gs_error_invalidfont	537:8:16206:16246	154032	0	True				
ANR	154385	AssignmentExpression	r -> callback_error = gs_error_invalidfont		154032	0		=			
ANR	154386	PtrMemberAccess	r -> callback_error		154032	0					
ANR	154387	Identifier	r		154032	0					
ANR	154388	Identifier	callback_error		154032	1					
ANR	154389	Identifier	gs_error_invalidfont		154032	1					
ANR	154390	ReturnStatement	return 0 ;	538:8:16256:16264	154032	1	True				
ANR	154391	PrimaryExpression	0		154032	0					
ANR	154392	ExpressionStatement	q += glyph_length	540:4:16276:16293	154032	16	True				
ANR	154393	AssignmentExpression	q += glyph_length		154032	0		+=			
ANR	154394	Identifier	q		154032	0					
ANR	154395	Identifier	glyph_length		154032	1					
ANR	154396	ExpressionStatement	"store_word ( & q , 0 )"	541:4:16299:16316	154032	17	True				
ANR	154397	CallExpression	"store_word ( & q , 0 )"		154032	0					
ANR	154398	Callee	store_word		154032	0					
ANR	154399	Identifier	store_word		154032	0					
ANR	154400	ArgumentList	& q		154032	1					
ANR	154401	Argument	& q		154032	0					
ANR	154402	UnaryOperationExpression	& q		154032	0					
ANR	154403	UnaryOperator	&		154032	0					
ANR	154404	Identifier	q		154032	1					
ANR	154405	Argument	0		154032	1					
ANR	154406	PrimaryExpression	0		154032	0					
ANR	154407	ReturnStatement	return ( LPUB8 ) h ;	542:4:16346:16362	154032	18	True				
ANR	154408	CastExpression	( LPUB8 ) h		154032	0					
ANR	154409	CastTarget	LPUB8		154032	0					
ANR	154410	Identifier	h		154032	1					
ANR	154411	ReturnType	static LPUB8		154032	1					
ANR	154412	Identifier	get_TT_glyph		154032	2					
ANR	154413	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId"		154032	3					
ANR	154414	Parameter	fapi_ufst_server * r	481:13:14177:14196	154032	0	True				
ANR	154415	ParameterType	fapi_ufst_server *		154032	0					
ANR	154416	Identifier	r		154032	1					
ANR	154417	Parameter	gs_fapi_font * ff	481:35:14199:14215	154032	1	True				
ANR	154418	ParameterType	gs_fapi_font *		154032	0					
ANR	154419	Identifier	ff		154032	1					
ANR	154420	Parameter	UW16 chId	481:54:14218:14226	154032	2	True				
ANR	154421	ParameterType	UW16		154032	0					
ANR	154422	Identifier	chId		154032	1					
ANR	154423	CFGEntryNode	ENTRY		154032		True				
ANR	154424	CFGExitNode	EXIT		154032		True				
ANR	154425	Symbol	ff		154032						
ANR	154426	Symbol	r -> aw_x		154032						
ANR	154427	Symbol	r -> mem		154032						
ANR	154428	Symbol	h -> h . descriptorsize		154032						
ANR	154429	Symbol	r -> If . frac_shift		154032						
ANR	154430	Symbol	glyph_length		154032						
ANR	154431	Symbol	& h -> charDataSize		154032						
ANR	154432	Symbol	chId		154032						
ANR	154433	Symbol	h -> h . continuation		154032						
ANR	154434	Symbol	g -> chId		154032						
ANR	154435	Symbol	d -> glyphs		154032						
ANR	154436	Symbol	h -> add_data		154032						
ANR	154437	Symbol	ff -> get_glyph		154032						
ANR	154438	Symbol	h -> h . ch_class		154032						
ANR	154439	Symbol	gs_error_invalidfont		154032						
ANR	154440	Symbol	g -> next		154032						
ANR	154441	Symbol	h -> h		154032						
ANR	154442	Symbol	r -> callback_error		154032						
ANR	154443	Symbol	d		154032						
ANR	154444	Symbol	* ff		154032						
ANR	154445	Symbol	r -> fc		154032						
ANR	154446	Symbol	r -> If		154032						
ANR	154447	Symbol	g		154032						
ANR	154448	Symbol	h		154032						
ANR	154449	Symbol	* d		154032						
ANR	154450	Symbol	use_XL_format		154032						
ANR	154451	Symbol	q		154032						
ANR	154452	Symbol	gs_error_VMerror		154032						
ANR	154453	Symbol	* g		154032						
ANR	154454	Symbol	r		154032						
ANR	154455	Symbol	gs_malloc		154032						
ANR	154456	Symbol	* h		154032						
ANR	154457	Symbol	r -> sb_x		154032						
ANR	154458	Symbol	& q		154032						
ANR	154459	Symbol	h -> h . format		154032						
ANR	154460	Symbol	r -> fc . font_hdr		154032						
ANR	154461	Symbol	* r		154032						
ANR	154462	Symbol	ff -> is_mtx_skipped		154032						
ANR	154463	Function	get_T1_glyph	554:0:16770:20305							
ANR	154464	FunctionDef	"get_T1_glyph (fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId)"		154463	0					
ANR	154465	CompoundStatement		556:0:16848:20305	154463	0					
ANR	154466	IdentifierDeclStatement	"ushort glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 ) ;"	559:4:16924:16975	154463	0	True				
ANR	154467	IdentifierDecl	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		154463	0					
ANR	154468	IdentifierDeclType	ushort		154463	0					
ANR	154469	Identifier	glyph_length		154463	1					
ANR	154470	AssignmentExpression	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		154463	2		=			
ANR	154471	Identifier	glyph_length		154463	0					
ANR	154472	CallExpression	"ff -> get_glyph ( ff , chId , 0 , 0 )"		154463	1					
ANR	154473	Callee	ff -> get_glyph		154463	0					
ANR	154474	PtrMemberAccess	ff -> get_glyph		154463	0					
ANR	154475	Identifier	ff		154463	0					
ANR	154476	Identifier	get_glyph		154463	1					
ANR	154477	ArgumentList	ff		154463	1					
ANR	154478	Argument	ff		154463	0					
ANR	154479	Identifier	ff		154463	0					
ANR	154480	Argument	chId		154463	1					
ANR	154481	Identifier	chId		154463	0					
ANR	154482	Argument	0		154463	2					
ANR	154483	PrimaryExpression	0		154463	0					
ANR	154484	Argument	0		154463	3					
ANR	154485	PrimaryExpression	0		154463	0					
ANR	154486	IdentifierDeclStatement	CDATASTR charstring ;	560:4:16981:17000	154463	1	True				
ANR	154487	IdentifierDecl	charstring		154463	0					
ANR	154488	IdentifierDeclType	CDATASTR		154463	0					
ANR	154489	Identifier	charstring		154463	1					
ANR	154490	IdentifierDeclStatement	PCDATASTR_DEMO pcharstring ;	561:4:17006:17032	154463	2	True				
ANR	154491	IdentifierDecl	pcharstring		154463	0					
ANR	154492	IdentifierDeclType	PCDATASTR_DEMO		154463	0					
ANR	154493	Identifier	pcharstring		154463	1					
ANR	154494	IdentifierDeclStatement	byte * cstring ;	562:4:17038:17051	154463	3	True				
ANR	154495	IdentifierDecl	* cstring		154463	0					
ANR	154496	IdentifierDeclType	byte *		154463	0					
ANR	154497	Identifier	cstring		154463	1					
ANR	154498	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	563:4:17057:17128	154463	4	True				
ANR	154499	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		154463	0					
ANR	154500	IdentifierDeclType	ufst_common_font_data *		154463	0					
ANR	154501	Identifier	d		154463	1					
ANR	154502	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		154463	2		=			
ANR	154503	Identifier	d		154463	0					
ANR	154504	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		154463	1		-			
ANR	154505	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		154463	0					
ANR	154506	CastTarget	ufst_common_font_data *		154463	0					
ANR	154507	MemberAccess	r -> fc . font_hdr		154463	1					
ANR	154508	PtrMemberAccess	r -> fc		154463	0					
ANR	154509	Identifier	r		154463	0					
ANR	154510	Identifier	fc		154463	1					
ANR	154511	Identifier	font_hdr		154463	1					
ANR	154512	PrimaryExpression	1		154463	1					
ANR	154513	IdentifierDeclStatement	MEM_HANDLE hndl ;	564:4:17134:17149	154463	5	True				
ANR	154514	IdentifierDecl	hndl		154463	0					
ANR	154515	IdentifierDeclType	MEM_HANDLE		154463	0					
ANR	154516	Identifier	hndl		154463	1					
ANR	154517	ExpressionStatement	FSA_FROM_SERVER	566:4:17156:17171	154463	6	True				
ANR	154518	Identifier	FSA_FROM_SERVER		154463	0					
ANR	154519	ExpressionStatement	d -> glyphs = NULL	568:4:17178:17194	154463	7	True				
ANR	154520	AssignmentExpression	d -> glyphs = NULL		154463	0		=			
ANR	154521	PtrMemberAccess	d -> glyphs		154463	0					
ANR	154522	Identifier	d		154463	0					
ANR	154523	Identifier	glyphs		154463	1					
ANR	154524	Identifier	NULL		154463	1					
ANR	154525	ExpressionStatement	charstring . len = glyph_length	570:4:17201:17230	154463	8	True				
ANR	154526	AssignmentExpression	charstring . len = glyph_length		154463	0		=			
ANR	154527	MemberAccess	charstring . len		154463	0					
ANR	154528	Identifier	charstring		154463	0					
ANR	154529	Identifier	len		154463	1					
ANR	154530	Identifier	glyph_length		154463	1					
ANR	154531	ExpressionStatement	charstring . hdata = BUFalloc ( charstring . len )	571:4:17236:17279	154463	9	True				
ANR	154532	AssignmentExpression	charstring . hdata = BUFalloc ( charstring . len )		154463	0		=			
ANR	154533	MemberAccess	charstring . hdata		154463	0					
ANR	154534	Identifier	charstring		154463	0					
ANR	154535	Identifier	hdata		154463	1					
ANR	154536	CallExpression	BUFalloc ( charstring . len )		154463	1					
ANR	154537	Callee	BUFalloc		154463	0					
ANR	154538	Identifier	BUFalloc		154463	0					
ANR	154539	ArgumentList	charstring . len		154463	1					
ANR	154540	Argument	charstring . len		154463	0					
ANR	154541	MemberAccess	charstring . len		154463	0					
ANR	154542	Identifier	charstring		154463	0					
ANR	154543	Identifier	len		154463	1					
ANR	154544	IfStatement	if ( ! charstring . hdata )		154463	10					
ANR	154545	Condition	! charstring . hdata	572:8:17289:17305	154463	0	True				
ANR	154546	UnaryOperationExpression	! charstring . hdata		154463	0					
ANR	154547	UnaryOperator	!		154463	0					
ANR	154548	MemberAccess	charstring . hdata		154463	1					
ANR	154549	Identifier	charstring		154463	0					
ANR	154550	Identifier	hdata		154463	1					
ANR	154551	CompoundStatement		17:27:459:459	154463	1					
ANR	154552	ExpressionStatement	r -> callback_error = gs_error_VMerror	573:8:17318:17354	154463	0	True				
ANR	154553	AssignmentExpression	r -> callback_error = gs_error_VMerror		154463	0		=			
ANR	154554	PtrMemberAccess	r -> callback_error		154463	0					
ANR	154555	Identifier	r		154463	0					
ANR	154556	Identifier	callback_error		154463	1					
ANR	154557	Identifier	gs_error_VMerror		154463	1					
ANR	154558	ReturnStatement	return ( NULL ) ;	574:8:17364:17377	154463	1	True				
ANR	154559	Identifier	NULL		154463	0					
ANR	154560	ExpressionStatement	cstring = ( unsigned char * ) MEMptr ( charstring . hdata )	577:4:17390:17441	154463	11	True				
ANR	154561	AssignmentExpression	cstring = ( unsigned char * ) MEMptr ( charstring . hdata )		154463	0		=			
ANR	154562	Identifier	cstring		154463	0					
ANR	154563	CastExpression	( unsigned char * ) MEMptr ( charstring . hdata )		154463	1					
ANR	154564	CastTarget	unsigned char *		154463	0					
ANR	154565	CallExpression	MEMptr ( charstring . hdata )		154463	1					
ANR	154566	Callee	MEMptr		154463	0					
ANR	154567	Identifier	MEMptr		154463	0					
ANR	154568	ArgumentList	charstring . hdata		154463	1					
ANR	154569	Argument	charstring . hdata		154463	0					
ANR	154570	MemberAccess	charstring . hdata		154463	0					
ANR	154571	Identifier	charstring		154463	0					
ANR	154572	Identifier	hdata		154463	1					
ANR	154573	IfStatement	"if ( ff -> get_glyph ( ff , chId , cstring , glyph_length ) != glyph_length )"		154463	12					
ANR	154574	Condition	"ff -> get_glyph ( ff , chId , cstring , glyph_length ) != glyph_length"	579:8:17452:17513	154463	0	True				
ANR	154575	EqualityExpression	"ff -> get_glyph ( ff , chId , cstring , glyph_length ) != glyph_length"		154463	0		!=			
ANR	154576	CallExpression	"ff -> get_glyph ( ff , chId , cstring , glyph_length )"		154463	0					
ANR	154577	Callee	ff -> get_glyph		154463	0					
ANR	154578	PtrMemberAccess	ff -> get_glyph		154463	0					
ANR	154579	Identifier	ff		154463	0					
ANR	154580	Identifier	get_glyph		154463	1					
ANR	154581	ArgumentList	ff		154463	1					
ANR	154582	Argument	ff		154463	0					
ANR	154583	Identifier	ff		154463	0					
ANR	154584	Argument	chId		154463	1					
ANR	154585	Identifier	chId		154463	0					
ANR	154586	Argument	cstring		154463	2					
ANR	154587	Identifier	cstring		154463	0					
ANR	154588	Argument	glyph_length		154463	3					
ANR	154589	Identifier	glyph_length		154463	0					
ANR	154590	Identifier	glyph_length		154463	1					
ANR	154591	CompoundStatement		24:72:667:667	154463	1					
ANR	154592	ExpressionStatement	r -> callback_error = gs_error_VMerror	580:8:17526:17562	154463	0	True				
ANR	154593	AssignmentExpression	r -> callback_error = gs_error_VMerror		154463	0		=			
ANR	154594	PtrMemberAccess	r -> callback_error		154463	0					
ANR	154595	Identifier	r		154463	0					
ANR	154596	Identifier	callback_error		154463	1					
ANR	154597	Identifier	gs_error_VMerror		154463	1					
ANR	154598	ExpressionStatement	BUFfree ( charstring . hdata )	581:8:17572:17597	154463	1	True				
ANR	154599	CallExpression	BUFfree ( charstring . hdata )		154463	0					
ANR	154600	Callee	BUFfree		154463	0					
ANR	154601	Identifier	BUFfree		154463	0					
ANR	154602	ArgumentList	charstring . hdata		154463	1					
ANR	154603	Argument	charstring . hdata		154463	0					
ANR	154604	MemberAccess	charstring . hdata		154463	0					
ANR	154605	Identifier	charstring		154463	0					
ANR	154606	Identifier	hdata		154463	1					
ANR	154607	ReturnStatement	return ( NULL ) ;	582:8:17607:17620	154463	2	True				
ANR	154608	Identifier	NULL		154463	0					
ANR	154609	ExpressionStatement	hndl = BUFalloc ( FSA ( SL32 ) ( sizeof ( CDATASTR ) ) )	585:4:17633:17678	154463	13	True				
ANR	154610	AssignmentExpression	hndl = BUFalloc ( FSA ( SL32 ) ( sizeof ( CDATASTR ) ) )		154463	0		=			
ANR	154611	Identifier	hndl		154463	0					
ANR	154612	CallExpression	BUFalloc ( FSA ( SL32 ) ( sizeof ( CDATASTR ) ) )		154463	1					
ANR	154613	Callee	BUFalloc		154463	0					
ANR	154614	Identifier	BUFalloc		154463	0					
ANR	154615	ArgumentList	FSA ( SL32 ) ( sizeof ( CDATASTR ) )		154463	1					
ANR	154616	Argument	FSA ( SL32 ) ( sizeof ( CDATASTR ) )		154463	0					
ANR	154617	CallExpression	FSA ( SL32 ) ( sizeof ( CDATASTR ) )		154463	0					
ANR	154618	Callee	FSA ( SL32 )		154463	0					
ANR	154619	CallExpression	FSA ( SL32 )		154463	0					
ANR	154620	Callee	FSA		154463	0					
ANR	154621	Identifier	FSA		154463	0					
ANR	154622	ArgumentList	SL32		154463	1					
ANR	154623	Argument	SL32		154463	0					
ANR	154624	Identifier	SL32		154463	0					
ANR	154625	ArgumentList	sizeof ( CDATASTR )		154463	1					
ANR	154626	Argument	sizeof ( CDATASTR )		154463	0					
ANR	154627	SizeofExpression	sizeof ( CDATASTR )		154463	0					
ANR	154628	Sizeof	sizeof		154463	0					
ANR	154629	SizeofOperand	CDATASTR		154463	1					
ANR	154630	IfStatement	if ( ! hndl )		154463	14					
ANR	154631	Condition	! hndl	586:8:17688:17692	154463	0	True				
ANR	154632	UnaryOperationExpression	! hndl		154463	0					
ANR	154633	UnaryOperator	!		154463	0					
ANR	154634	Identifier	hndl		154463	1					
ANR	154635	CompoundStatement		31:15:846:846	154463	1					
ANR	154636	ExpressionStatement	r -> callback_error = gs_error_VMerror	587:8:17705:17741	154463	0	True				
ANR	154637	AssignmentExpression	r -> callback_error = gs_error_VMerror		154463	0		=			
ANR	154638	PtrMemberAccess	r -> callback_error		154463	0					
ANR	154639	Identifier	r		154463	0					
ANR	154640	Identifier	callback_error		154463	1					
ANR	154641	Identifier	gs_error_VMerror		154463	1					
ANR	154642	ExpressionStatement	BUFfree ( charstring . hdata )	588:8:17751:17776	154463	1	True				
ANR	154643	CallExpression	BUFfree ( charstring . hdata )		154463	0					
ANR	154644	Callee	BUFfree		154463	0					
ANR	154645	Identifier	BUFfree		154463	0					
ANR	154646	ArgumentList	charstring . hdata		154463	1					
ANR	154647	Argument	charstring . hdata		154463	0					
ANR	154648	MemberAccess	charstring . hdata		154463	0					
ANR	154649	Identifier	charstring		154463	0					
ANR	154650	Identifier	hdata		154463	1					
ANR	154651	ReturnStatement	return ( NULL ) ;	589:8:17786:17799	154463	2	True				
ANR	154652	Identifier	NULL		154463	0					
ANR	154653	ExpressionStatement	pcharstring = ( PCDATASTR_DEMO ) MEMptr ( hndl )	592:4:17812:17855	154463	15	True				
ANR	154654	AssignmentExpression	pcharstring = ( PCDATASTR_DEMO ) MEMptr ( hndl )		154463	0		=			
ANR	154655	Identifier	pcharstring		154463	0					
ANR	154656	CastExpression	( PCDATASTR_DEMO ) MEMptr ( hndl )		154463	1					
ANR	154657	CastTarget	PCDATASTR_DEMO		154463	0					
ANR	154658	CallExpression	MEMptr ( hndl )		154463	1					
ANR	154659	Callee	MEMptr		154463	0					
ANR	154660	Identifier	MEMptr		154463	0					
ANR	154661	ArgumentList	hndl		154463	1					
ANR	154662	Argument	hndl		154463	0					
ANR	154663	Identifier	hndl		154463	0					
ANR	154664	ExpressionStatement	pcharstring -> len = charstring . len	594:4:17862:17895	154463	16	True				
ANR	154665	AssignmentExpression	pcharstring -> len = charstring . len		154463	0		=			
ANR	154666	PtrMemberAccess	pcharstring -> len		154463	0					
ANR	154667	Identifier	pcharstring		154463	0					
ANR	154668	Identifier	len		154463	1					
ANR	154669	MemberAccess	charstring . len		154463	1					
ANR	154670	Identifier	charstring		154463	0					
ANR	154671	Identifier	len		154463	1					
ANR	154672	ExpressionStatement	pcharstring -> hdata = charstring . hdata	595:4:17916:17953	154463	17	True				
ANR	154673	AssignmentExpression	pcharstring -> hdata = charstring . hdata		154463	0		=			
ANR	154674	PtrMemberAccess	pcharstring -> hdata		154463	0					
ANR	154675	Identifier	pcharstring		154463	0					
ANR	154676	Identifier	hdata		154463	1					
ANR	154677	MemberAccess	charstring . hdata		154463	1					
ANR	154678	Identifier	charstring		154463	0					
ANR	154679	Identifier	hdata		154463	1					
ANR	154680	ExpressionStatement	pcharstring -> decrypted = 1	596:4:17959:17985	154463	18	True				
ANR	154681	AssignmentExpression	pcharstring -> decrypted = 1		154463	0		=			
ANR	154682	PtrMemberAccess	pcharstring -> decrypted		154463	0					
ANR	154683	Identifier	pcharstring		154463	0					
ANR	154684	Identifier	decrypted		154463	1					
ANR	154685	PrimaryExpression	1		154463	1					
ANR	154686	ReturnStatement	return ( ( LPUB8 ) pcharstring ) ;	598:4:17992:18020	154463	19	True				
ANR	154687	CastExpression	( LPUB8 ) pcharstring		154463	0					
ANR	154688	CastTarget	LPUB8		154463	0					
ANR	154689	Identifier	pcharstring		154463	1					
ANR	154690	ReturnType	static LPUB8		154463	1					
ANR	154691	Identifier	get_T1_glyph		154463	2					
ANR	154692	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId"		154463	3					
ANR	154693	Parameter	fapi_ufst_server * r	555:13:16796:16815	154463	0	True				
ANR	154694	ParameterType	fapi_ufst_server *		154463	0					
ANR	154695	Identifier	r		154463	1					
ANR	154696	Parameter	gs_fapi_font * ff	555:35:16818:16834	154463	1	True				
ANR	154697	ParameterType	gs_fapi_font *		154463	0					
ANR	154698	Identifier	ff		154463	1					
ANR	154699	Parameter	UW16 chId	555:54:16837:16845	154463	2	True				
ANR	154700	ParameterType	UW16		154463	0					
ANR	154701	Identifier	chId		154463	1					
ANR	154702	CFGEntryNode	ENTRY		154463		True				
ANR	154703	CFGExitNode	EXIT		154463		True				
ANR	154704	Symbol	ff		154463						
ANR	154705	Symbol	* pcharstring		154463						
ANR	154706	Symbol	pcharstring -> len		154463						
ANR	154707	Symbol	charstring		154463						
ANR	154708	Symbol	charstring . hdata		154463						
ANR	154709	Symbol	pcharstring -> hdata		154463						
ANR	154710	Symbol	glyph_length		154463						
ANR	154711	Symbol	chId		154463						
ANR	154712	Symbol	MEMptr		154463						
ANR	154713	Symbol	d -> glyphs		154463						
ANR	154714	Symbol	charstring . len		154463						
ANR	154715	Symbol	FSA		154463						
ANR	154716	Symbol	ff -> get_glyph		154463						
ANR	154717	Symbol	SL32		154463						
ANR	154718	Symbol	NULL		154463						
ANR	154719	Symbol	r -> callback_error		154463						
ANR	154720	Symbol	pcharstring -> decrypted		154463						
ANR	154721	Symbol	d		154463						
ANR	154722	Symbol	* ff		154463						
ANR	154723	Symbol	r -> fc		154463						
ANR	154724	Symbol	cstring		154463						
ANR	154725	Symbol	* d		154463						
ANR	154726	Symbol	gs_error_VMerror		154463						
ANR	154727	Symbol	r		154463						
ANR	154728	Symbol	pcharstring		154463						
ANR	154729	Symbol	r -> fc . font_hdr		154463						
ANR	154730	Symbol	* r		154463						
ANR	154731	Symbol	hndl		154463						
ANR	154732	Symbol	BUFalloc		154463						
ANR	154733	Function	find_glyph	650:0:20308:20531							
ANR	154734	FunctionDef	"find_glyph (ufst_common_font_data * d , UW16 chId)"		154733	0					
ANR	154735	CompoundStatement		652:0:20388:20531	154733	0					
ANR	154736	IdentifierDeclStatement	pcleo_glyph_list_elem * e ;	653:4:20394:20418	154733	0	True				
ANR	154737	IdentifierDecl	* e		154733	0					
ANR	154738	IdentifierDeclType	pcleo_glyph_list_elem *		154733	0					
ANR	154739	Identifier	e		154733	1					
ANR	154740	ForStatement	for ( e = d -> glyphs ; e != 0 ; e = e -> next )		154733	1					
ANR	154741	ForInit	e = d -> glyphs ;	655:9:20430:20443	154733	0	True				
ANR	154742	AssignmentExpression	e = d -> glyphs		154733	0		=			
ANR	154743	Identifier	e		154733	0					
ANR	154744	PtrMemberAccess	d -> glyphs		154733	1					
ANR	154745	Identifier	d		154733	0					
ANR	154746	Identifier	glyphs		154733	1					
ANR	154747	Condition	e != 0	655:24:20445:20450	154733	1	True				
ANR	154748	EqualityExpression	e != 0		154733	0		!=			
ANR	154749	Identifier	e		154733	0					
ANR	154750	PrimaryExpression	0		154733	1					
ANR	154751	AssignmentExpression	e = e -> next	655:32:20453:20463	154733	2	True	=			
ANR	154752	Identifier	e		154733	0					
ANR	154753	PtrMemberAccess	e -> next		154733	1					
ANR	154754	Identifier	e		154733	0					
ANR	154755	Identifier	next		154733	1					
ANR	154756	IfStatement	if ( e -> chId == chId )		154733	3					
ANR	154757	Condition	e -> chId == chId	656:12:20478:20492	154733	0	True				
ANR	154758	EqualityExpression	e -> chId == chId		154733	0		==			
ANR	154759	PtrMemberAccess	e -> chId		154733	0					
ANR	154760	Identifier	e		154733	0					
ANR	154761	Identifier	chId		154733	1					
ANR	154762	Identifier	chId		154733	1					
ANR	154763	ReturnStatement	return e ;	657:12:20507:20515	154733	1	True				
ANR	154764	Identifier	e		154733	0					
ANR	154765	ReturnStatement	return 0 ;	658:4:20521:20529	154733	2	True				
ANR	154766	PrimaryExpression	0		154733	0					
ANR	154767	ReturnType	static pcleo_glyph_list_elem *		154733	1					
ANR	154768	Identifier	find_glyph		154733	2					
ANR	154769	ParameterList	"ufst_common_font_data * d , UW16 chId"		154733	3					
ANR	154770	Parameter	ufst_common_font_data * d	651:11:20350:20374	154733	0	True				
ANR	154771	ParameterType	ufst_common_font_data *		154733	0					
ANR	154772	Identifier	d		154733	1					
ANR	154773	Parameter	UW16 chId	651:38:20377:20385	154733	1	True				
ANR	154774	ParameterType	UW16		154733	0					
ANR	154775	Identifier	chId		154733	1					
ANR	154776	CFGEntryNode	ENTRY		154733		True				
ANR	154777	CFGExitNode	EXIT		154733		True				
ANR	154778	Symbol	d -> glyphs		154733						
ANR	154779	Symbol	d		154733						
ANR	154780	Symbol	e		154733						
ANR	154781	Symbol	e -> next		154733						
ANR	154782	Symbol	chId		154733						
ANR	154783	Symbol	* d		154733						
ANR	154784	Symbol	* e		154733						
ANR	154785	Symbol	e -> chId		154733						
ANR	154786	Function	impl_PCLchId2ptr	662:0:20556:21195							
ANR	154787	FunctionDef	impl_PCLchId2ptr (FSP UW16 chId)		154786	0					
ANR	154788	CompoundStatement		664:0:20601:21195	154786	0					
ANR	154789	IdentifierDeclStatement	fapi_ufst_server * r = IFS_to_I ( pIFS ) ;	666:4:20626:20662	154786	0	True				
ANR	154790	IdentifierDecl	* r = IFS_to_I ( pIFS )		154786	0					
ANR	154791	IdentifierDeclType	fapi_ufst_server *		154786	0					
ANR	154792	Identifier	r		154786	1					
ANR	154793	AssignmentExpression	* r = IFS_to_I ( pIFS )		154786	2		=			
ANR	154794	Identifier	r		154786	0					
ANR	154795	CallExpression	IFS_to_I ( pIFS )		154786	1					
ANR	154796	Callee	IFS_to_I		154786	0					
ANR	154797	Identifier	IFS_to_I		154786	0					
ANR	154798	ArgumentList	pIFS		154786	1					
ANR	154799	Argument	pIFS		154786	0					
ANR	154800	Identifier	pIFS		154786	0					
ANR	154801	IdentifierDeclStatement	gs_fapi_font * ff = r -> ff ;	670:4:20744:20768	154786	1	True				
ANR	154802	IdentifierDecl	* ff = r -> ff		154786	0					
ANR	154803	IdentifierDeclType	gs_fapi_font *		154786	0					
ANR	154804	Identifier	ff		154786	1					
ANR	154805	AssignmentExpression	* ff = r -> ff		154786	2		=			
ANR	154806	Identifier	ff		154786	0					
ANR	154807	PtrMemberAccess	r -> ff		154786	1					
ANR	154808	Identifier	r		154786	0					
ANR	154809	Identifier	ff		154786	1					
ANR	154810	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	671:4:20774:20845	154786	2	True				
ANR	154811	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		154786	0					
ANR	154812	IdentifierDeclType	ufst_common_font_data *		154786	0					
ANR	154813	Identifier	d		154786	1					
ANR	154814	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		154786	2		=			
ANR	154815	Identifier	d		154786	0					
ANR	154816	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		154786	1		-			
ANR	154817	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		154786	0					
ANR	154818	CastTarget	ufst_common_font_data *		154786	0					
ANR	154819	MemberAccess	r -> fc . font_hdr		154786	1					
ANR	154820	PtrMemberAccess	r -> fc		154786	0					
ANR	154821	Identifier	r		154786	0					
ANR	154822	Identifier	fc		154786	1					
ANR	154823	Identifier	font_hdr		154786	1					
ANR	154824	PrimaryExpression	1		154786	1					
ANR	154825	IdentifierDeclStatement	"pcleo_glyph_list_elem * g = find_glyph ( d , chId ) ;"	672:4:20851:20897	154786	3	True				
ANR	154826	IdentifierDecl	"* g = find_glyph ( d , chId )"		154786	0					
ANR	154827	IdentifierDeclType	pcleo_glyph_list_elem *		154786	0					
ANR	154828	Identifier	g		154786	1					
ANR	154829	AssignmentExpression	"* g = find_glyph ( d , chId )"		154786	2		=			
ANR	154830	Identifier	g		154786	0					
ANR	154831	CallExpression	"find_glyph ( d , chId )"		154786	1					
ANR	154832	Callee	find_glyph		154786	0					
ANR	154833	Identifier	find_glyph		154786	0					
ANR	154834	ArgumentList	d		154786	1					
ANR	154835	Argument	d		154786	0					
ANR	154836	Identifier	d		154786	0					
ANR	154837	Argument	chId		154786	1					
ANR	154838	Identifier	chId		154786	0					
ANR	154839	IdentifierDeclStatement	LPUB8 result = 0 ;	673:4:20903:20919	154786	4	True				
ANR	154840	IdentifierDecl	result = 0		154786	0					
ANR	154841	IdentifierDeclType	LPUB8		154786	0					
ANR	154842	Identifier	result		154786	1					
ANR	154843	AssignmentExpression	result = 0		154786	2		=			
ANR	154844	Identifier	result		154786	0					
ANR	154845	PrimaryExpression	0		154786	1					
ANR	154846	IfStatement	if ( g != 0 )		154786	5					
ANR	154847	Condition	g != 0	675:8:20930:20935	154786	0	True				
ANR	154848	EqualityExpression	g != 0		154786	0		!=			
ANR	154849	Identifier	g		154786	0					
ANR	154850	PrimaryExpression	0		154786	1					
ANR	154851	ExpressionStatement	result = ( LPUB8 ) ( g + 1 )	676:8:20946:20970	154786	1	True				
ANR	154852	AssignmentExpression	result = ( LPUB8 ) ( g + 1 )		154786	0		=			
ANR	154853	Identifier	result		154786	0					
ANR	154854	CastExpression	( LPUB8 ) ( g + 1 )		154786	1					
ANR	154855	CastTarget	LPUB8		154786	0					
ANR	154856	AdditiveExpression	g + 1		154786	1		+			
ANR	154857	Identifier	g		154786	0					
ANR	154858	PrimaryExpression	1		154786	1					
ANR	154859	IfStatement	if ( ( r -> fc . format & FC_FONTTYPE_MASK ) == FC_PST1_TYPE )		154786	6					
ANR	154860	Condition	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_PST1_TYPE	677:8:20980:21028	154786	0	True				
ANR	154861	EqualityExpression	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_PST1_TYPE		154786	0		==			
ANR	154862	BitAndExpression	r -> fc . format & FC_FONTTYPE_MASK		154786	0		&			
ANR	154863	MemberAccess	r -> fc . format		154786	0					
ANR	154864	PtrMemberAccess	r -> fc		154786	0					
ANR	154865	Identifier	r		154786	0					
ANR	154866	Identifier	fc		154786	1					
ANR	154867	Identifier	format		154786	1					
ANR	154868	Identifier	FC_FONTTYPE_MASK		154786	1					
ANR	154869	Identifier	FC_PST1_TYPE		154786	1					
ANR	154870	ExpressionStatement	"result = get_T1_glyph ( r , ff , chId )"	678:8:21039:21073	154786	1	True				
ANR	154871	AssignmentExpression	"result = get_T1_glyph ( r , ff , chId )"		154786	0		=			
ANR	154872	Identifier	result		154786	0					
ANR	154873	CallExpression	"get_T1_glyph ( r , ff , chId )"		154786	1					
ANR	154874	Callee	get_T1_glyph		154786	0					
ANR	154875	Identifier	get_T1_glyph		154786	0					
ANR	154876	ArgumentList	r		154786	1					
ANR	154877	Argument	r		154786	0					
ANR	154878	Identifier	r		154786	0					
ANR	154879	Argument	ff		154786	1					
ANR	154880	Identifier	ff		154786	0					
ANR	154881	Argument	chId		154786	2					
ANR	154882	Identifier	chId		154786	0					
ANR	154883	IfStatement	if ( ( r -> fc . format & FC_FONTTYPE_MASK ) == FC_TT_TYPE )		154786	7					
ANR	154884	Condition	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_TT_TYPE	679:8:21083:21129	154786	0	True				
ANR	154885	EqualityExpression	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_TT_TYPE		154786	0		==			
ANR	154886	BitAndExpression	r -> fc . format & FC_FONTTYPE_MASK		154786	0		&			
ANR	154887	MemberAccess	r -> fc . format		154786	0					
ANR	154888	PtrMemberAccess	r -> fc		154786	0					
ANR	154889	Identifier	r		154786	0					
ANR	154890	Identifier	fc		154786	1					
ANR	154891	Identifier	format		154786	1					
ANR	154892	Identifier	FC_FONTTYPE_MASK		154786	1					
ANR	154893	Identifier	FC_TT_TYPE		154786	1					
ANR	154894	ExpressionStatement	"result = get_TT_glyph ( r , ff , chId )"	680:8:21140:21174	154786	1	True				
ANR	154895	AssignmentExpression	"result = get_TT_glyph ( r , ff , chId )"		154786	0		=			
ANR	154896	Identifier	result		154786	0					
ANR	154897	CallExpression	"get_TT_glyph ( r , ff , chId )"		154786	1					
ANR	154898	Callee	get_TT_glyph		154786	0					
ANR	154899	Identifier	get_TT_glyph		154786	0					
ANR	154900	ArgumentList	r		154786	1					
ANR	154901	Argument	r		154786	0					
ANR	154902	Identifier	r		154786	0					
ANR	154903	Argument	ff		154786	1					
ANR	154904	Identifier	ff		154786	0					
ANR	154905	Argument	chId		154786	2					
ANR	154906	Identifier	chId		154786	0					
ANR	154907	ReturnStatement	return result ;	681:4:21180:21193	154786	8	True				
ANR	154908	Identifier	result		154786	0					
ANR	154909	ReturnType	static LPUB8		154786	1					
ANR	154910	Identifier	impl_PCLchId2ptr		154786	2					
ANR	154911	ParameterList	FSP UW16 chId		154786	3					
ANR	154912	Parameter	FSP UW16 chId	663:17:20586:20598	154786	0	True				
ANR	154913	ParameterType	FSP UW16		154786	0					
ANR	154914	Identifier	chId		154786	1					
ANR	154915	CFGEntryNode	ENTRY		154786		True				
ANR	154916	CFGExitNode	EXIT		154786		True				
ANR	154917	Symbol	ff		154786						
ANR	154918	Symbol	d		154786						
ANR	154919	Symbol	FC_TT_TYPE		154786						
ANR	154920	Symbol	r -> fc		154786						
ANR	154921	Symbol	g		154786						
ANR	154922	Symbol	FC_PST1_TYPE		154786						
ANR	154923	Symbol	r -> fc . format		154786						
ANR	154924	Symbol	chId		154786						
ANR	154925	Symbol	result		154786						
ANR	154926	Symbol	r		154786						
ANR	154927	Symbol	pIFS		154786						
ANR	154928	Symbol	IFS_to_I		154786						
ANR	154929	Symbol	FC_FONTTYPE_MASK		154786						
ANR	154930	Symbol	r -> ff		154786						
ANR	154931	Symbol	find_glyph		154786						
ANR	154932	Symbol	r -> fc . font_hdr		154786						
ANR	154933	Symbol	* r		154786						
ANR	154934	Symbol	get_T1_glyph		154786						
ANR	154935	Symbol	get_TT_glyph		154786						
ANR	154936	Function	pack_word	684:0:21198:21428							
ANR	154937	FunctionDef	"pack_word (LPUB8 * p , UW16 v)"		154936	0					
ANR	154938	CompoundStatement		686:0:21246:21428	154936	0					
ANR	154939	IdentifierDeclStatement	LPUB8 q = ( LPUB8 ) & v ;	687:4:21252:21273	154936	0	True				
ANR	154940	IdentifierDecl	q = ( LPUB8 ) & v		154936	0					
ANR	154941	IdentifierDeclType	LPUB8		154936	0					
ANR	154942	Identifier	q		154936	1					
ANR	154943	AssignmentExpression	q = ( LPUB8 ) & v		154936	2		=			
ANR	154944	Identifier	q		154936	0					
ANR	154945	CastExpression	( LPUB8 ) & v		154936	1					
ANR	154946	CastTarget	LPUB8		154936	0					
ANR	154947	UnaryOperationExpression	& v		154936	1					
ANR	154948	UnaryOperator	&		154936	0					
ANR	154949	Identifier	v		154936	1					
ANR	154950	ExpressionStatement	( * p ) [ 1 ] = q [ 0 ]	690:4:21342:21356	154936	1	True				
ANR	154951	AssignmentExpression	( * p ) [ 1 ] = q [ 0 ]		154936	0		=			
ANR	154952	ArrayIndexing	( * p ) [ 1 ]		154936	0					
ANR	154953	UnaryOperationExpression	* p		154936	0					
ANR	154954	UnaryOperator	*		154936	0					
ANR	154955	Identifier	p		154936	1					
ANR	154956	PrimaryExpression	1		154936	1					
ANR	154957	ArrayIndexing	q [ 0 ]		154936	1					
ANR	154958	Identifier	q		154936	0					
ANR	154959	PrimaryExpression	0		154936	1					
ANR	154960	ExpressionStatement	( * p ) [ 0 ] = q [ 1 ]	691:4:21362:21376	154936	2	True				
ANR	154961	AssignmentExpression	( * p ) [ 0 ] = q [ 1 ]		154936	0		=			
ANR	154962	ArrayIndexing	( * p ) [ 0 ]		154936	0					
ANR	154963	UnaryOperationExpression	* p		154936	0					
ANR	154964	UnaryOperator	*		154936	0					
ANR	154965	Identifier	p		154936	1					
ANR	154966	PrimaryExpression	0		154936	1					
ANR	154967	ArrayIndexing	q [ 1 ]		154936	1					
ANR	154968	Identifier	q		154936	0					
ANR	154969	PrimaryExpression	1		154936	1					
ANR	154970	ExpressionStatement	* p += 2	695:4:21419:21426	154936	3	True				
ANR	154971	AssignmentExpression	* p += 2		154936	0		+=			
ANR	154972	UnaryOperationExpression	* p		154936	0					
ANR	154973	UnaryOperator	*		154936	0					
ANR	154974	Identifier	p		154936	1					
ANR	154975	PrimaryExpression	2		154936	1					
ANR	154976	ReturnType	static inline void		154936	1					
ANR	154977	Identifier	pack_word		154936	2					
ANR	154978	ParameterList	"LPUB8 * p , UW16 v"		154936	3					
ANR	154979	Parameter	LPUB8 * p	685:10:21227:21235	154936	0	True				
ANR	154980	ParameterType	LPUB8 *		154936	0					
ANR	154981	Identifier	p		154936	1					
ANR	154982	Parameter	UW16 v	685:21:21238:21243	154936	1	True				
ANR	154983	ParameterType	UW16		154936	0					
ANR	154984	Identifier	v		154936	1					
ANR	154985	CFGEntryNode	ENTRY		154936		True				
ANR	154986	CFGExitNode	EXIT		154936		True				
ANR	154987	Symbol	p		154936						
ANR	154988	Symbol	q		154936						
ANR	154989	Symbol	v		154936						
ANR	154990	Symbol	* p		154936						
ANR	154991	Symbol	* q		154936						
ANR	154992	Symbol	* * p		154936						
ANR	154993	Symbol	& v		154936						
ANR	154994	Function	pack_long	698:0:21431:21701							
ANR	154995	FunctionDef	"pack_long (LPUB8 * p , UL32 v)"		154994	0					
ANR	154996	CompoundStatement		700:0:21479:21701	154994	0					
ANR	154997	IdentifierDeclStatement	LPUB8 q = ( LPUB8 ) & v ;	701:4:21485:21506	154994	0	True				
ANR	154998	IdentifierDecl	q = ( LPUB8 ) & v		154994	0					
ANR	154999	IdentifierDeclType	LPUB8		154994	0					
ANR	155000	Identifier	q		154994	1					
ANR	155001	AssignmentExpression	q = ( LPUB8 ) & v		154994	2		=			
ANR	155002	Identifier	q		154994	0					
ANR	155003	CastExpression	( LPUB8 ) & v		154994	1					
ANR	155004	CastTarget	LPUB8		154994	0					
ANR	155005	UnaryOperationExpression	& v		154994	1					
ANR	155006	UnaryOperator	&		154994	0					
ANR	155007	Identifier	v		154994	1					
ANR	155008	ExpressionStatement	( * p ) [ 3 ] = q [ 0 ]	704:4:21575:21589	154994	1	True				
ANR	155009	AssignmentExpression	( * p ) [ 3 ] = q [ 0 ]		154994	0		=			
ANR	155010	ArrayIndexing	( * p ) [ 3 ]		154994	0					
ANR	155011	UnaryOperationExpression	* p		154994	0					
ANR	155012	UnaryOperator	*		154994	0					
ANR	155013	Identifier	p		154994	1					
ANR	155014	PrimaryExpression	3		154994	1					
ANR	155015	ArrayIndexing	q [ 0 ]		154994	1					
ANR	155016	Identifier	q		154994	0					
ANR	155017	PrimaryExpression	0		154994	1					
ANR	155018	ExpressionStatement	( * p ) [ 2 ] = q [ 1 ]	705:4:21595:21609	154994	2	True				
ANR	155019	AssignmentExpression	( * p ) [ 2 ] = q [ 1 ]		154994	0		=			
ANR	155020	ArrayIndexing	( * p ) [ 2 ]		154994	0					
ANR	155021	UnaryOperationExpression	* p		154994	0					
ANR	155022	UnaryOperator	*		154994	0					
ANR	155023	Identifier	p		154994	1					
ANR	155024	PrimaryExpression	2		154994	1					
ANR	155025	ArrayIndexing	q [ 1 ]		154994	1					
ANR	155026	Identifier	q		154994	0					
ANR	155027	PrimaryExpression	1		154994	1					
ANR	155028	ExpressionStatement	( * p ) [ 1 ] = q [ 2 ]	706:4:21615:21629	154994	3	True				
ANR	155029	AssignmentExpression	( * p ) [ 1 ] = q [ 2 ]		154994	0		=			
ANR	155030	ArrayIndexing	( * p ) [ 1 ]		154994	0					
ANR	155031	UnaryOperationExpression	* p		154994	0					
ANR	155032	UnaryOperator	*		154994	0					
ANR	155033	Identifier	p		154994	1					
ANR	155034	PrimaryExpression	1		154994	1					
ANR	155035	ArrayIndexing	q [ 2 ]		154994	1					
ANR	155036	Identifier	q		154994	0					
ANR	155037	PrimaryExpression	2		154994	1					
ANR	155038	ExpressionStatement	( * p ) [ 0 ] = q [ 3 ]	707:4:21635:21649	154994	4	True				
ANR	155039	AssignmentExpression	( * p ) [ 0 ] = q [ 3 ]		154994	0		=			
ANR	155040	ArrayIndexing	( * p ) [ 0 ]		154994	0					
ANR	155041	UnaryOperationExpression	* p		154994	0					
ANR	155042	UnaryOperator	*		154994	0					
ANR	155043	Identifier	p		154994	1					
ANR	155044	PrimaryExpression	0		154994	1					
ANR	155045	ArrayIndexing	q [ 3 ]		154994	1					
ANR	155046	Identifier	q		154994	0					
ANR	155047	PrimaryExpression	3		154994	1					
ANR	155048	ExpressionStatement	* p += 4	711:4:21692:21699	154994	5	True				
ANR	155049	AssignmentExpression	* p += 4		154994	0		+=			
ANR	155050	UnaryOperationExpression	* p		154994	0					
ANR	155051	UnaryOperator	*		154994	0					
ANR	155052	Identifier	p		154994	1					
ANR	155053	PrimaryExpression	4		154994	1					
ANR	155054	ReturnType	static inline void		154994	1					
ANR	155055	Identifier	pack_long		154994	2					
ANR	155056	ParameterList	"LPUB8 * p , UL32 v"		154994	3					
ANR	155057	Parameter	LPUB8 * p	699:10:21460:21468	154994	0	True				
ANR	155058	ParameterType	LPUB8 *		154994	0					
ANR	155059	Identifier	p		154994	1					
ANR	155060	Parameter	UL32 v	699:21:21471:21476	154994	1	True				
ANR	155061	ParameterType	UL32		154994	0					
ANR	155062	Identifier	v		154994	1					
ANR	155063	CFGEntryNode	ENTRY		154994		True				
ANR	155064	CFGExitNode	EXIT		154994		True				
ANR	155065	Symbol	p		154994						
ANR	155066	Symbol	q		154994						
ANR	155067	Symbol	v		154994						
ANR	155068	Symbol	* p		154994						
ANR	155069	Symbol	* q		154994						
ANR	155070	Symbol	* * p		154994						
ANR	155071	Symbol	& v		154994						
ANR	155072	Function	pack_float	714:0:21704:21835							
ANR	155073	FunctionDef	"pack_float (LPUB8 * p , float v)"		155072	0					
ANR	155074	CompoundStatement		716:0:21754:21835	155072	0					
ANR	155075	ExpressionStatement	"gs_sprintf ( ( char * ) ( * p ) , ""%f"" , v )"	717:4:21760:21793	155072	0	True				
ANR	155076	CallExpression	"gs_sprintf ( ( char * ) ( * p ) , ""%f"" , v )"		155072	0					
ANR	155077	Callee	gs_sprintf		155072	0					
ANR	155078	Identifier	gs_sprintf		155072	0					
ANR	155079	ArgumentList	( char * ) ( * p )		155072	1					
ANR	155080	Argument	( char * ) ( * p )		155072	0					
ANR	155081	CastExpression	( char * ) ( * p )		155072	0					
ANR	155082	CastTarget	char *		155072	0					
ANR	155083	UnaryOperationExpression	* p		155072	1					
ANR	155084	UnaryOperator	*		155072	0					
ANR	155085	Identifier	p		155072	1					
ANR	155086	Argument	"""%f"""		155072	1					
ANR	155087	PrimaryExpression	"""%f"""		155072	0					
ANR	155088	Argument	v		155072	2					
ANR	155089	Identifier	v		155072	0					
ANR	155090	ExpressionStatement	* p += strlen ( ( const char * ) * p ) + 1	718:4:21799:21833	155072	1	True				
ANR	155091	AssignmentExpression	* p += strlen ( ( const char * ) * p ) + 1		155072	0		+=			
ANR	155092	UnaryOperationExpression	* p		155072	0					
ANR	155093	UnaryOperator	*		155072	0					
ANR	155094	Identifier	p		155072	1					
ANR	155095	AdditiveExpression	strlen ( ( const char * ) * p ) + 1		155072	1		+			
ANR	155096	CallExpression	strlen ( ( const char * ) * p )		155072	0					
ANR	155097	Callee	strlen		155072	0					
ANR	155098	Identifier	strlen		155072	0					
ANR	155099	ArgumentList	( const char * ) * p		155072	1					
ANR	155100	Argument	( const char * ) * p		155072	0					
ANR	155101	CastExpression	( const char * ) * p		155072	0					
ANR	155102	CastTarget	const char *		155072	0					
ANR	155103	UnaryOperationExpression	* p		155072	1					
ANR	155104	UnaryOperator	*		155072	0					
ANR	155105	Identifier	p		155072	1					
ANR	155106	PrimaryExpression	1		155072	1					
ANR	155107	ReturnType	static inline void		155072	1					
ANR	155108	Identifier	pack_float		155072	2					
ANR	155109	ParameterList	"LPUB8 * p , float v"		155072	3					
ANR	155110	Parameter	LPUB8 * p	715:11:21734:21742	155072	0	True				
ANR	155111	ParameterType	LPUB8 *		155072	0					
ANR	155112	Identifier	p		155072	1					
ANR	155113	Parameter	float v	715:22:21745:21751	155072	1	True				
ANR	155114	ParameterType	float		155072	0					
ANR	155115	Identifier	v		155072	1					
ANR	155116	CFGEntryNode	ENTRY		155072		True				
ANR	155117	CFGExitNode	EXIT		155072		True				
ANR	155118	Symbol	p		155072						
ANR	155119	Symbol	strlen		155072						
ANR	155120	Symbol	v		155072						
ANR	155121	Symbol	* p		155072						
ANR	155122	Function	pack_pseo_word_array	726:0:22044:22455							
ANR	155123	FunctionDef	"pack_pseo_word_array (fapi_ufst_server * r , gs_fapi_font * ff , UB8 * * p , UW16 max_count , gs_fapi_font_feature count_id , gs_fapi_font_feature array_id)"		155122	0					
ANR	155124	CompoundStatement		730:0:22248:22455	155122	0					
ANR	155125	IdentifierDeclStatement	"UW16 k = min ( ff -> get_word ( ff , count_id , 0 ) , max_count ) , j ;"	731:4:22254:22311	155122	0	True				
ANR	155126	IdentifierDecl	"k = min ( ff -> get_word ( ff , count_id , 0 ) , max_count )"		155122	0					
ANR	155127	IdentifierDeclType	UW16		155122	0					
ANR	155128	Identifier	k		155122	1					
ANR	155129	AssignmentExpression	"k = min ( ff -> get_word ( ff , count_id , 0 ) , max_count )"		155122	2		=			
ANR	155130	Identifier	k		155122	0					
ANR	155131	CallExpression	"min ( ff -> get_word ( ff , count_id , 0 ) , max_count )"		155122	1					
ANR	155132	Callee	min		155122	0					
ANR	155133	Identifier	min		155122	0					
ANR	155134	ArgumentList	"ff -> get_word ( ff , count_id , 0 )"		155122	1					
ANR	155135	Argument	"ff -> get_word ( ff , count_id , 0 )"		155122	0					
ANR	155136	CallExpression	"ff -> get_word ( ff , count_id , 0 )"		155122	0					
ANR	155137	Callee	ff -> get_word		155122	0					
ANR	155138	PtrMemberAccess	ff -> get_word		155122	0					
ANR	155139	Identifier	ff		155122	0					
ANR	155140	Identifier	get_word		155122	1					
ANR	155141	ArgumentList	ff		155122	1					
ANR	155142	Argument	ff		155122	0					
ANR	155143	Identifier	ff		155122	0					
ANR	155144	Argument	count_id		155122	1					
ANR	155145	Identifier	count_id		155122	0					
ANR	155146	Argument	0		155122	2					
ANR	155147	PrimaryExpression	0		155122	0					
ANR	155148	Argument	max_count		155122	1					
ANR	155149	Identifier	max_count		155122	0					
ANR	155150	IdentifierDecl	j		155122	1					
ANR	155151	IdentifierDeclType	UW16		155122	0					
ANR	155152	Identifier	j		155122	1					
ANR	155153	ExpressionStatement	"pack_word ( p , k )"	733:4:22318:22333	155122	1	True				
ANR	155154	CallExpression	"pack_word ( p , k )"		155122	0					
ANR	155155	Callee	pack_word		155122	0					
ANR	155156	Identifier	pack_word		155122	0					
ANR	155157	ArgumentList	p		155122	1					
ANR	155158	Argument	p		155122	0					
ANR	155159	Identifier	p		155122	0					
ANR	155160	Argument	k		155122	1					
ANR	155161	Identifier	k		155122	0					
ANR	155162	ForStatement	for ( j = 0 ; j < k ; j ++ )		155122	2					
ANR	155163	ForInit	j = 0 ;	734:9:22344:22349	155122	0	True				
ANR	155164	AssignmentExpression	j = 0		155122	0		=			
ANR	155165	Identifier	j		155122	0					
ANR	155166	PrimaryExpression	0		155122	1					
ANR	155167	Condition	j < k	734:16:22351:22355	155122	1	True				
ANR	155168	RelationalExpression	j < k		155122	0		<			
ANR	155169	Identifier	j		155122	0					
ANR	155170	Identifier	k		155122	1					
ANR	155171	PostIncDecOperationExpression	j ++	734:23:22358:22360	155122	2	True				
ANR	155172	Identifier	j		155122	0					
ANR	155173	IncDec	++		155122	1					
ANR	155174	ExpressionStatement	"PACK_WORD ( * p , j , array_id )"	735:8:22371:22397	155122	3	True				
ANR	155175	CallExpression	"PACK_WORD ( * p , j , array_id )"		155122	0					
ANR	155176	Callee	PACK_WORD		155122	0					
ANR	155177	Identifier	PACK_WORD		155122	0					
ANR	155178	ArgumentList	* p		155122	1					
ANR	155179	Argument	* p		155122	0					
ANR	155180	UnaryOperationExpression	* p		155122	0					
ANR	155181	UnaryOperator	*		155122	0					
ANR	155182	Identifier	p		155122	1					
ANR	155183	Argument	j		155122	1					
ANR	155184	Identifier	j		155122	0					
ANR	155185	Argument	array_id		155122	2					
ANR	155186	Identifier	array_id		155122	0					
ANR	155187	ForStatement	for ( ; j < max_count ; j ++ )		155122	3					
ANR	155188	Condition	j < max_count	736:11:22410:22422	155122	0	True				
ANR	155189	RelationalExpression	j < max_count		155122	0		<			
ANR	155190	Identifier	j		155122	0					
ANR	155191	Identifier	max_count		155122	1					
ANR	155192	PostIncDecOperationExpression	j ++	736:26:22425:22427	155122	1	True				
ANR	155193	Identifier	j		155122	0					
ANR	155194	IncDec	++		155122	1					
ANR	155195	ExpressionStatement	"pack_word ( p , 0 )"	737:8:22438:22453	155122	2	True				
ANR	155196	CallExpression	"pack_word ( p , 0 )"		155122	0					
ANR	155197	Callee	pack_word		155122	0					
ANR	155198	Identifier	pack_word		155122	0					
ANR	155199	ArgumentList	p		155122	1					
ANR	155200	Argument	p		155122	0					
ANR	155201	Identifier	p		155122	0					
ANR	155202	Argument	0		155122	1					
ANR	155203	PrimaryExpression	0		155122	0					
ANR	155204	ReturnType	static void		155122	1					
ANR	155205	Identifier	pack_pseo_word_array		155122	2					
ANR	155206	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UB8 * * p , UW16 max_count , gs_fapi_font_feature count_id , gs_fapi_font_feature array_id"		155122	3					
ANR	155207	Parameter	fapi_ufst_server * r	727:21:22077:22096	155122	0	True				
ANR	155208	ParameterType	fapi_ufst_server *		155122	0					
ANR	155209	Identifier	r		155122	1					
ANR	155210	Parameter	gs_fapi_font * ff	727:43:22099:22115	155122	1	True				
ANR	155211	ParameterType	gs_fapi_font *		155122	0					
ANR	155212	Identifier	ff		155122	1					
ANR	155213	Parameter	UB8 * * p	727:62:22118:22125	155122	2	True				
ANR	155214	ParameterType	UB8 * *		155122	0					
ANR	155215	Identifier	p		155122	1					
ANR	155216	Parameter	UW16 max_count	728:21:22149:22162	155122	3	True				
ANR	155217	ParameterType	UW16		155122	0					
ANR	155218	Identifier	max_count		155122	1					
ANR	155219	Parameter	gs_fapi_font_feature count_id	728:37:22165:22193	155122	4	True				
ANR	155220	ParameterType	gs_fapi_font_feature		155122	0					
ANR	155221	Identifier	count_id		155122	1					
ANR	155222	Parameter	gs_fapi_font_feature array_id	729:21:22217:22245	155122	5	True				
ANR	155223	ParameterType	gs_fapi_font_feature		155122	0					
ANR	155224	Identifier	array_id		155122	1					
ANR	155225	CFGEntryNode	ENTRY		155122		True				
ANR	155226	CFGExitNode	EXIT		155122		True				
ANR	155227	Symbol	ff		155122						
ANR	155228	Symbol	p		155122						
ANR	155229	Symbol	max_count		155122						
ANR	155230	Symbol	array_id		155122						
ANR	155231	Symbol	r		155122						
ANR	155232	Symbol	min		155122						
ANR	155233	Symbol	* ff		155122						
ANR	155234	Symbol	ff -> get_word		155122						
ANR	155235	Symbol	count_id		155122						
ANR	155236	Symbol	j		155122						
ANR	155237	Symbol	* p		155122						
ANR	155238	Symbol	k		155122						
ANR	155239	Function	pack_pseo_fhdr	740:0:22458:26121							
ANR	155240	FunctionDef	"pack_pseo_fhdr (fapi_ufst_server * r , gs_fapi_font * ff , UB8 * p)"		155239	0					
ANR	155241	CompoundStatement		742:0:22535:26121	155239	0					
ANR	155242	IdentifierDeclStatement	"ushort j , n , skip = 0 ;"	743:4:22541:22562	155239	0	True				
ANR	155243	IdentifierDecl	j		155239	0					
ANR	155244	IdentifierDeclType	ushort		155239	0					
ANR	155245	Identifier	j		155239	1					
ANR	155246	IdentifierDecl	n		155239	1					
ANR	155247	IdentifierDeclType	ushort		155239	0					
ANR	155248	Identifier	n		155239	1					
ANR	155249	IdentifierDecl	skip = 0		155239	2					
ANR	155250	IdentifierDeclType	ushort		155239	0					
ANR	155251	Identifier	skip		155239	1					
ANR	155252	AssignmentExpression	skip = 0		155239	2		=			
ANR	155253	Identifier	skip		155239	0					
ANR	155254	PrimaryExpression	0		155239	1					
ANR	155255	WhileStatement	while ( ( ( uint64_t ) p ) & 0x03 )		155239	1					
ANR	155256	Condition	( ( uint64_t ) p ) & 0x03	745:11:22576:22596	155239	0	True				
ANR	155257	BitAndExpression	( ( uint64_t ) p ) & 0x03		155239	0		&			
ANR	155258	CastExpression	( uint64_t ) p		155239	0					
ANR	155259	CastTarget	uint64_t		155239	0					
ANR	155260	Identifier	p		155239	1					
ANR	155261	PrimaryExpression	0x03		155239	1					
ANR	155262	ExpressionStatement	PACK_ZERO ( p )	746:8:22637:22649	155239	1	True				
ANR	155263	CallExpression	PACK_ZERO ( p )		155239	0					
ANR	155264	Callee	PACK_ZERO		155239	0					
ANR	155265	Identifier	PACK_ZERO		155239	0					
ANR	155266	ArgumentList	p		155239	1					
ANR	155267	Argument	p		155239	0					
ANR	155268	Identifier	p		155239	0					
ANR	155269	ExpressionStatement	"pack_long ( & p , 1 )"	748:4:22656:22672	155239	2	True				
ANR	155270	CallExpression	"pack_long ( & p , 1 )"		155239	0					
ANR	155271	Callee	pack_long		155239	0					
ANR	155272	Identifier	pack_long		155239	0					
ANR	155273	ArgumentList	& p		155239	1					
ANR	155274	Argument	& p		155239	0					
ANR	155275	UnaryOperationExpression	& p		155239	0					
ANR	155276	UnaryOperator	&		155239	0					
ANR	155277	Identifier	p		155239	1					
ANR	155278	Argument	1		155239	1					
ANR	155279	PrimaryExpression	1		155239	0					
ANR	155280	ForStatement	for ( j = 0 ; j < 6 ; j ++ )		155239	3					
ANR	155281	ForInit	j = 0 ;	749:9:22710:22715	155239	0	True				
ANR	155282	AssignmentExpression	j = 0		155239	0		=			
ANR	155283	Identifier	j		155239	0					
ANR	155284	PrimaryExpression	0		155239	1					
ANR	155285	Condition	j < 6	749:16:22717:22721	155239	1	True				
ANR	155286	RelationalExpression	j < 6		155239	0		<			
ANR	155287	Identifier	j		155239	0					
ANR	155288	PrimaryExpression	6		155239	1					
ANR	155289	PostIncDecOperationExpression	j ++	749:23:22724:22726	155239	2	True				
ANR	155290	Identifier	j		155239	0					
ANR	155291	IncDec	++		155239	1					
ANR	155292	ExpressionStatement	"pack_float ( & p , ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j ) )"	750:8:22737:22806	155239	3	True				
ANR	155293	CallExpression	"pack_float ( & p , ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j ) )"		155239	0					
ANR	155294	Callee	pack_float		155239	0					
ANR	155295	Identifier	pack_float		155239	0					
ANR	155296	ArgumentList	& p		155239	1					
ANR	155297	Argument	& p		155239	0					
ANR	155298	UnaryOperationExpression	& p		155239	0					
ANR	155299	UnaryOperator	&		155239	0					
ANR	155300	Identifier	p		155239	1					
ANR	155301	Argument	"ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j )"		155239	1					
ANR	155302	CallExpression	"ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j )"		155239	0					
ANR	155303	Callee	ff -> get_float		155239	0					
ANR	155304	PtrMemberAccess	ff -> get_float		155239	0					
ANR	155305	Identifier	ff		155239	0					
ANR	155306	Identifier	get_float		155239	1					
ANR	155307	ArgumentList	ff		155239	1					
ANR	155308	Argument	ff		155239	0					
ANR	155309	Identifier	ff		155239	0					
ANR	155310	Argument	gs_fapi_font_feature_FontMatrix		155239	1					
ANR	155311	Identifier	gs_fapi_font_feature_FontMatrix		155239	0					
ANR	155312	Argument	j		155239	2					
ANR	155313	Identifier	j		155239	0					
ANR	155314	WhileStatement	while ( ( ( uint64_t ) p ) & 0x03 )		155239	4					
ANR	155315	Condition	( ( uint64_t ) p ) & 0x03	751:11:22819:22839	155239	0	True				
ANR	155316	BitAndExpression	( ( uint64_t ) p ) & 0x03		155239	0		&			
ANR	155317	CastExpression	( uint64_t ) p		155239	0					
ANR	155318	CastTarget	uint64_t		155239	0					
ANR	155319	Identifier	p		155239	1					
ANR	155320	PrimaryExpression	0x03		155239	1					
ANR	155321	ExpressionStatement	PACK_ZERO ( p )	752:8:22880:22892	155239	1	True				
ANR	155322	CallExpression	PACK_ZERO ( p )		155239	0					
ANR	155323	Callee	PACK_ZERO		155239	0					
ANR	155324	Identifier	PACK_ZERO		155239	0					
ANR	155325	ArgumentList	p		155239	1					
ANR	155326	Argument	p		155239	0					
ANR	155327	Identifier	p		155239	0					
ANR	155328	ExpressionStatement	"PACK_LONG ( p , 0 , gs_fapi_font_feature_UniqueID )"	754:4:22980:23026	155239	5	True				
ANR	155329	CallExpression	"PACK_LONG ( p , 0 , gs_fapi_font_feature_UniqueID )"		155239	0					
ANR	155330	Callee	PACK_LONG		155239	0					
ANR	155331	Identifier	PACK_LONG		155239	0					
ANR	155332	ArgumentList	p		155239	1					
ANR	155333	Argument	p		155239	0					
ANR	155334	Identifier	p		155239	0					
ANR	155335	Argument	0		155239	1					
ANR	155336	PrimaryExpression	0		155239	0					
ANR	155337	Argument	gs_fapi_font_feature_UniqueID		155239	2					
ANR	155338	Identifier	gs_fapi_font_feature_UniqueID		155239	0					
ANR	155339	ExpressionStatement	"PACK_LONG ( p , 0 , gs_fapi_font_feature_BlueScale )"	755:4:23032:23079	155239	6	True				
ANR	155340	CallExpression	"PACK_LONG ( p , 0 , gs_fapi_font_feature_BlueScale )"		155239	0					
ANR	155341	Callee	PACK_LONG		155239	0					
ANR	155342	Identifier	PACK_LONG		155239	0					
ANR	155343	ArgumentList	p		155239	1					
ANR	155344	Argument	p		155239	0					
ANR	155345	Identifier	p		155239	0					
ANR	155346	Argument	0		155239	1					
ANR	155347	PrimaryExpression	0		155239	0					
ANR	155348	Argument	gs_fapi_font_feature_BlueScale		155239	2					
ANR	155349	Identifier	gs_fapi_font_feature_BlueScale		155239	0					
ANR	155350	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_Weight )"	756:4:23085:23129	155239	7	True				
ANR	155351	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_Weight )"		155239	0					
ANR	155352	Callee	PACK_WORD		155239	0					
ANR	155353	Identifier	PACK_WORD		155239	0					
ANR	155354	ArgumentList	p		155239	1					
ANR	155355	Argument	p		155239	0					
ANR	155356	Identifier	p		155239	0					
ANR	155357	Argument	0		155239	1					
ANR	155358	PrimaryExpression	0		155239	0					
ANR	155359	Argument	gs_fapi_font_feature_Weight		155239	2					
ANR	155360	Identifier	gs_fapi_font_feature_Weight		155239	0					
ANR	155361	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ItalicAngle )"	757:4:23135:23184	155239	8	True				
ANR	155362	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ItalicAngle )"		155239	0					
ANR	155363	Callee	PACK_WORD		155239	0					
ANR	155364	Identifier	PACK_WORD		155239	0					
ANR	155365	ArgumentList	p		155239	1					
ANR	155366	Argument	p		155239	0					
ANR	155367	Identifier	p		155239	0					
ANR	155368	Argument	0		155239	1					
ANR	155369	PrimaryExpression	0		155239	0					
ANR	155370	Argument	gs_fapi_font_feature_ItalicAngle		155239	2					
ANR	155371	Identifier	gs_fapi_font_feature_ItalicAngle		155239	0					
ANR	155372	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_IsFixedPitch )"	758:4:23190:23240	155239	9	True				
ANR	155373	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_IsFixedPitch )"		155239	0					
ANR	155374	Callee	PACK_WORD		155239	0					
ANR	155375	Identifier	PACK_WORD		155239	0					
ANR	155376	ArgumentList	p		155239	1					
ANR	155377	Argument	p		155239	0					
ANR	155378	Identifier	p		155239	0					
ANR	155379	Argument	0		155239	1					
ANR	155380	PrimaryExpression	0		155239	0					
ANR	155381	Argument	gs_fapi_font_feature_IsFixedPitch		155239	2					
ANR	155382	Identifier	gs_fapi_font_feature_IsFixedPitch		155239	0					
ANR	155383	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderLinePosition )"	759:4:23246:23301	155239	10	True				
ANR	155384	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderLinePosition )"		155239	0					
ANR	155385	Callee	PACK_WORD		155239	0					
ANR	155386	Identifier	PACK_WORD		155239	0					
ANR	155387	ArgumentList	p		155239	1					
ANR	155388	Argument	p		155239	0					
ANR	155389	Identifier	p		155239	0					
ANR	155390	Argument	0		155239	1					
ANR	155391	PrimaryExpression	0		155239	0					
ANR	155392	Argument	gs_fapi_font_feature_UnderLinePosition		155239	2					
ANR	155393	Identifier	gs_fapi_font_feature_UnderLinePosition		155239	0					
ANR	155394	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderlineThickness )"	760:4:23307:23363	155239	11	True				
ANR	155395	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderlineThickness )"		155239	0					
ANR	155396	Callee	PACK_WORD		155239	0					
ANR	155397	Identifier	PACK_WORD		155239	0					
ANR	155398	ArgumentList	p		155239	1					
ANR	155399	Argument	p		155239	0					
ANR	155400	Identifier	p		155239	0					
ANR	155401	Argument	0		155239	1					
ANR	155402	PrimaryExpression	0		155239	0					
ANR	155403	Argument	gs_fapi_font_feature_UnderlineThickness		155239	2					
ANR	155404	Identifier	gs_fapi_font_feature_UnderlineThickness		155239	0					
ANR	155405	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontType )"	761:4:23369:23415	155239	12	True				
ANR	155406	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontType )"		155239	0					
ANR	155407	Callee	PACK_WORD		155239	0					
ANR	155408	Identifier	PACK_WORD		155239	0					
ANR	155409	ArgumentList	p		155239	1					
ANR	155410	Argument	p		155239	0					
ANR	155411	Identifier	p		155239	0					
ANR	155412	Argument	0		155239	1					
ANR	155413	PrimaryExpression	0		155239	0					
ANR	155414	Argument	gs_fapi_font_feature_FontType		155239	2					
ANR	155415	Identifier	gs_fapi_font_feature_FontType		155239	0					
ANR	155416	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontBBox )"	762:4:23421:23467	155239	13	True				
ANR	155417	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontBBox )"		155239	0					
ANR	155418	Callee	PACK_WORD		155239	0					
ANR	155419	Identifier	PACK_WORD		155239	0					
ANR	155420	ArgumentList	p		155239	1					
ANR	155421	Argument	p		155239	0					
ANR	155422	Identifier	p		155239	0					
ANR	155423	Argument	0		155239	1					
ANR	155424	PrimaryExpression	0		155239	0					
ANR	155425	Argument	gs_fapi_font_feature_FontBBox		155239	2					
ANR	155426	Identifier	gs_fapi_font_feature_FontBBox		155239	0					
ANR	155427	ExpressionStatement	"PACK_WORD ( p , 1 , gs_fapi_font_feature_FontBBox )"	763:4:23473:23519	155239	14	True				
ANR	155428	CallExpression	"PACK_WORD ( p , 1 , gs_fapi_font_feature_FontBBox )"		155239	0					
ANR	155429	Callee	PACK_WORD		155239	0					
ANR	155430	Identifier	PACK_WORD		155239	0					
ANR	155431	ArgumentList	p		155239	1					
ANR	155432	Argument	p		155239	0					
ANR	155433	Identifier	p		155239	0					
ANR	155434	Argument	1		155239	1					
ANR	155435	PrimaryExpression	1		155239	0					
ANR	155436	Argument	gs_fapi_font_feature_FontBBox		155239	2					
ANR	155437	Identifier	gs_fapi_font_feature_FontBBox		155239	0					
ANR	155438	ExpressionStatement	"PACK_WORD ( p , 2 , gs_fapi_font_feature_FontBBox )"	764:4:23525:23571	155239	15	True				
ANR	155439	CallExpression	"PACK_WORD ( p , 2 , gs_fapi_font_feature_FontBBox )"		155239	0					
ANR	155440	Callee	PACK_WORD		155239	0					
ANR	155441	Identifier	PACK_WORD		155239	0					
ANR	155442	ArgumentList	p		155239	1					
ANR	155443	Argument	p		155239	0					
ANR	155444	Identifier	p		155239	0					
ANR	155445	Argument	2		155239	1					
ANR	155446	PrimaryExpression	2		155239	0					
ANR	155447	Argument	gs_fapi_font_feature_FontBBox		155239	2					
ANR	155448	Identifier	gs_fapi_font_feature_FontBBox		155239	0					
ANR	155449	ExpressionStatement	"PACK_WORD ( p , 3 , gs_fapi_font_feature_FontBBox )"	765:4:23577:23623	155239	16	True				
ANR	155450	CallExpression	"PACK_WORD ( p , 3 , gs_fapi_font_feature_FontBBox )"		155239	0					
ANR	155451	Callee	PACK_WORD		155239	0					
ANR	155452	Identifier	PACK_WORD		155239	0					
ANR	155453	ArgumentList	p		155239	1					
ANR	155454	Argument	p		155239	0					
ANR	155455	Identifier	p		155239	0					
ANR	155456	Argument	3		155239	1					
ANR	155457	PrimaryExpression	3		155239	0					
ANR	155458	Argument	gs_fapi_font_feature_FontBBox		155239	2					
ANR	155459	Identifier	gs_fapi_font_feature_FontBBox		155239	0					
ANR	155460	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_BlueValues_count , gs_fapi_font_feature_BlueValues )"	766:4:23629:23761	155239	17	True				
ANR	155461	CallExpression	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_BlueValues_count , gs_fapi_font_feature_BlueValues )"		155239	0					
ANR	155462	Callee	pack_pseo_word_array		155239	0					
ANR	155463	Identifier	pack_pseo_word_array		155239	0					
ANR	155464	ArgumentList	r		155239	1					
ANR	155465	Argument	r		155239	0					
ANR	155466	Identifier	r		155239	0					
ANR	155467	Argument	ff		155239	1					
ANR	155468	Identifier	ff		155239	0					
ANR	155469	Argument	& p		155239	2					
ANR	155470	UnaryOperationExpression	& p		155239	0					
ANR	155471	UnaryOperator	&		155239	0					
ANR	155472	Identifier	p		155239	1					
ANR	155473	Argument	14		155239	3					
ANR	155474	PrimaryExpression	14		155239	0					
ANR	155475	Argument	gs_fapi_font_feature_BlueValues_count		155239	4					
ANR	155476	Identifier	gs_fapi_font_feature_BlueValues_count		155239	0					
ANR	155477	Argument	gs_fapi_font_feature_BlueValues		155239	5					
ANR	155478	Identifier	gs_fapi_font_feature_BlueValues		155239	0					
ANR	155479	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_OtherBlues_count , gs_fapi_font_feature_OtherBlues )"	768:4:23767:23899	155239	18	True				
ANR	155480	CallExpression	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_OtherBlues_count , gs_fapi_font_feature_OtherBlues )"		155239	0					
ANR	155481	Callee	pack_pseo_word_array		155239	0					
ANR	155482	Identifier	pack_pseo_word_array		155239	0					
ANR	155483	ArgumentList	r		155239	1					
ANR	155484	Argument	r		155239	0					
ANR	155485	Identifier	r		155239	0					
ANR	155486	Argument	ff		155239	1					
ANR	155487	Identifier	ff		155239	0					
ANR	155488	Argument	& p		155239	2					
ANR	155489	UnaryOperationExpression	& p		155239	0					
ANR	155490	UnaryOperator	&		155239	0					
ANR	155491	Identifier	p		155239	1					
ANR	155492	Argument	10		155239	3					
ANR	155493	PrimaryExpression	10		155239	0					
ANR	155494	Argument	gs_fapi_font_feature_OtherBlues_count		155239	4					
ANR	155495	Identifier	gs_fapi_font_feature_OtherBlues_count		155239	0					
ANR	155496	Argument	gs_fapi_font_feature_OtherBlues		155239	5					
ANR	155497	Identifier	gs_fapi_font_feature_OtherBlues		155239	0					
ANR	155498	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_FamilyBlues_count , gs_fapi_font_feature_FamilyBlues )"	770:4:23905:24064	155239	19	True				
ANR	155499	CallExpression	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_FamilyBlues_count , gs_fapi_font_feature_FamilyBlues )"		155239	0					
ANR	155500	Callee	pack_pseo_word_array		155239	0					
ANR	155501	Identifier	pack_pseo_word_array		155239	0					
ANR	155502	ArgumentList	r		155239	1					
ANR	155503	Argument	r		155239	0					
ANR	155504	Identifier	r		155239	0					
ANR	155505	Argument	ff		155239	1					
ANR	155506	Identifier	ff		155239	0					
ANR	155507	Argument	& p		155239	2					
ANR	155508	UnaryOperationExpression	& p		155239	0					
ANR	155509	UnaryOperator	&		155239	0					
ANR	155510	Identifier	p		155239	1					
ANR	155511	Argument	14		155239	3					
ANR	155512	PrimaryExpression	14		155239	0					
ANR	155513	Argument	gs_fapi_font_feature_FamilyBlues_count		155239	4					
ANR	155514	Identifier	gs_fapi_font_feature_FamilyBlues_count		155239	0					
ANR	155515	Argument	gs_fapi_font_feature_FamilyBlues		155239	5					
ANR	155516	Identifier	gs_fapi_font_feature_FamilyBlues		155239	0					
ANR	155517	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_FamilyOtherBlues_count , gs_fapi_font_feature_FamilyOtherBlues )"	773:4:24070:24239	155239	20	True				
ANR	155518	CallExpression	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_FamilyOtherBlues_count , gs_fapi_font_feature_FamilyOtherBlues )"		155239	0					
ANR	155519	Callee	pack_pseo_word_array		155239	0					
ANR	155520	Identifier	pack_pseo_word_array		155239	0					
ANR	155521	ArgumentList	r		155239	1					
ANR	155522	Argument	r		155239	0					
ANR	155523	Identifier	r		155239	0					
ANR	155524	Argument	ff		155239	1					
ANR	155525	Identifier	ff		155239	0					
ANR	155526	Argument	& p		155239	2					
ANR	155527	UnaryOperationExpression	& p		155239	0					
ANR	155528	UnaryOperator	&		155239	0					
ANR	155529	Identifier	p		155239	1					
ANR	155530	Argument	10		155239	3					
ANR	155531	PrimaryExpression	10		155239	0					
ANR	155532	Argument	gs_fapi_font_feature_FamilyOtherBlues_count		155239	4					
ANR	155533	Identifier	gs_fapi_font_feature_FamilyOtherBlues_count		155239	0					
ANR	155534	Argument	gs_fapi_font_feature_FamilyOtherBlues		155239	5					
ANR	155535	Identifier	gs_fapi_font_feature_FamilyOtherBlues		155239	0					
ANR	155536	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueShift )"	776:4:24245:24292	155239	21	True				
ANR	155537	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueShift )"		155239	0					
ANR	155538	Callee	PACK_WORD		155239	0					
ANR	155539	Identifier	PACK_WORD		155239	0					
ANR	155540	ArgumentList	p		155239	1					
ANR	155541	Argument	p		155239	0					
ANR	155542	Identifier	p		155239	0					
ANR	155543	Argument	0		155239	1					
ANR	155544	PrimaryExpression	0		155239	0					
ANR	155545	Argument	gs_fapi_font_feature_BlueShift		155239	2					
ANR	155546	Identifier	gs_fapi_font_feature_BlueShift		155239	0					
ANR	155547	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueFuzz )"	777:4:24298:24344	155239	22	True				
ANR	155548	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueFuzz )"		155239	0					
ANR	155549	Callee	PACK_WORD		155239	0					
ANR	155550	Identifier	PACK_WORD		155239	0					
ANR	155551	ArgumentList	p		155239	1					
ANR	155552	Argument	p		155239	0					
ANR	155553	Identifier	p		155239	0					
ANR	155554	Argument	0		155239	1					
ANR	155555	PrimaryExpression	0		155239	0					
ANR	155556	Argument	gs_fapi_font_feature_BlueFuzz		155239	2					
ANR	155557	Identifier	gs_fapi_font_feature_BlueFuzz		155239	0					
ANR	155558	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdHW )"	778:4:24350:24393	155239	23	True				
ANR	155559	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdHW )"		155239	0					
ANR	155560	Callee	PACK_WORD		155239	0					
ANR	155561	Identifier	PACK_WORD		155239	0					
ANR	155562	ArgumentList	p		155239	1					
ANR	155563	Argument	p		155239	0					
ANR	155564	Identifier	p		155239	0					
ANR	155565	Argument	0		155239	1					
ANR	155566	PrimaryExpression	0		155239	0					
ANR	155567	Argument	gs_fapi_font_feature_StdHW		155239	2					
ANR	155568	Identifier	gs_fapi_font_feature_StdHW		155239	0					
ANR	155569	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdVW )"	779:4:24399:24442	155239	24	True				
ANR	155570	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdVW )"		155239	0					
ANR	155571	Callee	PACK_WORD		155239	0					
ANR	155572	Identifier	PACK_WORD		155239	0					
ANR	155573	ArgumentList	p		155239	1					
ANR	155574	Argument	p		155239	0					
ANR	155575	Identifier	p		155239	0					
ANR	155576	Argument	0		155239	1					
ANR	155577	PrimaryExpression	0		155239	0					
ANR	155578	Argument	gs_fapi_font_feature_StdVW		155239	2					
ANR	155579	Identifier	gs_fapi_font_feature_StdVW		155239	0					
ANR	155580	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapH_count , gs_fapi_font_feature_StemSnapH )"	780:4:24448:24578	155239	25	True				
ANR	155581	CallExpression	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapH_count , gs_fapi_font_feature_StemSnapH )"		155239	0					
ANR	155582	Callee	pack_pseo_word_array		155239	0					
ANR	155583	Identifier	pack_pseo_word_array		155239	0					
ANR	155584	ArgumentList	r		155239	1					
ANR	155585	Argument	r		155239	0					
ANR	155586	Identifier	r		155239	0					
ANR	155587	Argument	ff		155239	1					
ANR	155588	Identifier	ff		155239	0					
ANR	155589	Argument	& p		155239	2					
ANR	155590	UnaryOperationExpression	& p		155239	0					
ANR	155591	UnaryOperator	&		155239	0					
ANR	155592	Identifier	p		155239	1					
ANR	155593	Argument	12		155239	3					
ANR	155594	PrimaryExpression	12		155239	0					
ANR	155595	Argument	gs_fapi_font_feature_StemSnapH_count		155239	4					
ANR	155596	Identifier	gs_fapi_font_feature_StemSnapH_count		155239	0					
ANR	155597	Argument	gs_fapi_font_feature_StemSnapH		155239	5					
ANR	155598	Identifier	gs_fapi_font_feature_StemSnapH		155239	0					
ANR	155599	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapV_count , gs_fapi_font_feature_StemSnapV )"	782:4:24584:24714	155239	26	True				
ANR	155600	CallExpression	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapV_count , gs_fapi_font_feature_StemSnapV )"		155239	0					
ANR	155601	Callee	pack_pseo_word_array		155239	0					
ANR	155602	Identifier	pack_pseo_word_array		155239	0					
ANR	155603	ArgumentList	r		155239	1					
ANR	155604	Argument	r		155239	0					
ANR	155605	Identifier	r		155239	0					
ANR	155606	Argument	ff		155239	1					
ANR	155607	Identifier	ff		155239	0					
ANR	155608	Argument	& p		155239	2					
ANR	155609	UnaryOperationExpression	& p		155239	0					
ANR	155610	UnaryOperator	&		155239	0					
ANR	155611	Identifier	p		155239	1					
ANR	155612	Argument	12		155239	3					
ANR	155613	PrimaryExpression	12		155239	0					
ANR	155614	Argument	gs_fapi_font_feature_StemSnapV_count		155239	4					
ANR	155615	Identifier	gs_fapi_font_feature_StemSnapV_count		155239	0					
ANR	155616	Argument	gs_fapi_font_feature_StemSnapV		155239	5					
ANR	155617	Identifier	gs_fapi_font_feature_StemSnapV		155239	0					
ANR	155618	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ForceBold )"	784:4:24720:24767	155239	27	True				
ANR	155619	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ForceBold )"		155239	0					
ANR	155620	Callee	PACK_WORD		155239	0					
ANR	155621	Identifier	PACK_WORD		155239	0					
ANR	155622	ArgumentList	p		155239	1					
ANR	155623	Argument	p		155239	0					
ANR	155624	Identifier	p		155239	0					
ANR	155625	Argument	0		155239	1					
ANR	155626	PrimaryExpression	0		155239	0					
ANR	155627	Argument	gs_fapi_font_feature_ForceBold		155239	2					
ANR	155628	Identifier	gs_fapi_font_feature_ForceBold		155239	0					
ANR	155629	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_LanguageGroup )"	785:4:24773:24824	155239	28	True				
ANR	155630	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_LanguageGroup )"		155239	0					
ANR	155631	Callee	PACK_WORD		155239	0					
ANR	155632	Identifier	PACK_WORD		155239	0					
ANR	155633	ArgumentList	p		155239	1					
ANR	155634	Argument	p		155239	0					
ANR	155635	Identifier	p		155239	0					
ANR	155636	Argument	0		155239	1					
ANR	155637	PrimaryExpression	0		155239	0					
ANR	155638	Argument	gs_fapi_font_feature_LanguageGroup		155239	2					
ANR	155639	Identifier	gs_fapi_font_feature_LanguageGroup		155239	0					
ANR	155640	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_lenIV )"	786:4:24830:24873	155239	29	True				
ANR	155641	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_lenIV )"		155239	0					
ANR	155642	Callee	PACK_WORD		155239	0					
ANR	155643	Identifier	PACK_WORD		155239	0					
ANR	155644	ArgumentList	p		155239	1					
ANR	155645	Argument	p		155239	0					
ANR	155646	Identifier	p		155239	0					
ANR	155647	Argument	0		155239	1					
ANR	155648	PrimaryExpression	0		155239	0					
ANR	155649	Argument	gs_fapi_font_feature_lenIV		155239	2					
ANR	155650	Identifier	gs_fapi_font_feature_lenIV		155239	0					
ANR	155651	ForStatement	for ( j = 0 ; j < 12 ; j ++ )		155239	30					
ANR	155652	ForInit	j = 0 ;	787:9:24884:24889	155239	0	True				
ANR	155653	AssignmentExpression	j = 0		155239	0		=			
ANR	155654	Identifier	j		155239	0					
ANR	155655	PrimaryExpression	0		155239	1					
ANR	155656	Condition	j < 12	787:16:24891:24896	155239	1	True				
ANR	155657	RelationalExpression	j < 12		155239	0		<			
ANR	155658	Identifier	j		155239	0					
ANR	155659	PrimaryExpression	12		155239	1					
ANR	155660	PostIncDecOperationExpression	j ++	787:24:24899:24901	155239	2	True				
ANR	155661	Identifier	j		155239	0					
ANR	155662	IncDec	++		155239	1					
ANR	155663	ExpressionStatement	"PACK_ZERO ( p ) , PACK_ZERO ( p )"	788:8:24912:24938	155239	3	True				
ANR	155664	Expression	"PACK_ZERO ( p ) , PACK_ZERO ( p )"		155239	0					
ANR	155665	CallExpression	PACK_ZERO ( p )		155239	0					
ANR	155666	Callee	PACK_ZERO		155239	0					
ANR	155667	Identifier	PACK_ZERO		155239	0					
ANR	155668	ArgumentList	p		155239	1					
ANR	155669	Argument	p		155239	0					
ANR	155670	Identifier	p		155239	0					
ANR	155671	CallExpression	PACK_ZERO ( p )		155239	1					
ANR	155672	Callee	PACK_ZERO		155239	0					
ANR	155673	Identifier	PACK_ZERO		155239	0					
ANR	155674	ArgumentList	p		155239	1					
ANR	155675	Argument	p		155239	0					
ANR	155676	Identifier	p		155239	0					
ANR	155677	ExpressionStatement	"n = ff -> get_word ( ff , gs_fapi_font_feature_Subrs_count , 0 )"	790:4:25020:25077	155239	31	True				
ANR	155678	AssignmentExpression	"n = ff -> get_word ( ff , gs_fapi_font_feature_Subrs_count , 0 )"		155239	0		=			
ANR	155679	Identifier	n		155239	0					
ANR	155680	CallExpression	"ff -> get_word ( ff , gs_fapi_font_feature_Subrs_count , 0 )"		155239	1					
ANR	155681	Callee	ff -> get_word		155239	0					
ANR	155682	PtrMemberAccess	ff -> get_word		155239	0					
ANR	155683	Identifier	ff		155239	0					
ANR	155684	Identifier	get_word		155239	1					
ANR	155685	ArgumentList	ff		155239	1					
ANR	155686	Argument	ff		155239	0					
ANR	155687	Identifier	ff		155239	0					
ANR	155688	Argument	gs_fapi_font_feature_Subrs_count		155239	1					
ANR	155689	Identifier	gs_fapi_font_feature_Subrs_count		155239	0					
ANR	155690	Argument	0		155239	2					
ANR	155691	PrimaryExpression	0		155239	0					
ANR	155692	ExpressionStatement	"pack_word ( & p , n )"	791:4:25083:25099	155239	32	True				
ANR	155693	CallExpression	"pack_word ( & p , n )"		155239	0					
ANR	155694	Callee	pack_word		155239	0					
ANR	155695	Identifier	pack_word		155239	0					
ANR	155696	ArgumentList	& p		155239	1					
ANR	155697	Argument	& p		155239	0					
ANR	155698	UnaryOperationExpression	& p		155239	0					
ANR	155699	UnaryOperator	&		155239	0					
ANR	155700	Identifier	p		155239	1					
ANR	155701	Argument	n		155239	1					
ANR	155702	Identifier	n		155239	0					
ANR	155703	ForStatement	for ( j = 0 ; j < n ; j ++ )		155239	33					
ANR	155704	ForInit	j = 0 ;	792:9:25110:25115	155239	0	True				
ANR	155705	AssignmentExpression	j = 0		155239	0		=			
ANR	155706	Identifier	j		155239	0					
ANR	155707	PrimaryExpression	0		155239	1					
ANR	155708	Condition	j < n	792:16:25117:25121	155239	1	True				
ANR	155709	RelationalExpression	j < n		155239	0		<			
ANR	155710	Identifier	j		155239	0					
ANR	155711	Identifier	n		155239	1					
ANR	155712	PostIncDecOperationExpression	j ++	792:23:25124:25126	155239	2	True				
ANR	155713	Identifier	j		155239	0					
ANR	155714	IncDec	++		155239	1					
ANR	155715	CompoundStatement		52:8:2603:2646	155239	3					
ANR	155716	IdentifierDeclStatement	"ushort subr_len = ff -> get_subr ( ff , j , 0 , 0 ) ;"	793:8:25139:25182	155239	0	True				
ANR	155717	IdentifierDecl	"subr_len = ff -> get_subr ( ff , j , 0 , 0 )"		155239	0					
ANR	155718	IdentifierDeclType	ushort		155239	0					
ANR	155719	Identifier	subr_len		155239	1					
ANR	155720	AssignmentExpression	"subr_len = ff -> get_subr ( ff , j , 0 , 0 )"		155239	2		=			
ANR	155721	Identifier	subr_len		155239	0					
ANR	155722	CallExpression	"ff -> get_subr ( ff , j , 0 , 0 )"		155239	1					
ANR	155723	Callee	ff -> get_subr		155239	0					
ANR	155724	PtrMemberAccess	ff -> get_subr		155239	0					
ANR	155725	Identifier	ff		155239	0					
ANR	155726	Identifier	get_subr		155239	1					
ANR	155727	ArgumentList	ff		155239	1					
ANR	155728	Argument	ff		155239	0					
ANR	155729	Identifier	ff		155239	0					
ANR	155730	Argument	j		155239	1					
ANR	155731	Identifier	j		155239	0					
ANR	155732	Argument	0		155239	2					
ANR	155733	PrimaryExpression	0		155239	0					
ANR	155734	Argument	0		155239	3					
ANR	155735	PrimaryExpression	0		155239	0					
ANR	155736	IfStatement	if ( subr_len != 0 )		155239	1					
ANR	155737	Condition	subr_len != 0	795:12:25197:25209	155239	0	True				
ANR	155738	EqualityExpression	subr_len != 0		155239	0		!=			
ANR	155739	Identifier	subr_len		155239	0					
ANR	155740	PrimaryExpression	0		155239	1					
ANR	155741	CompoundStatement		54:27:2676:2676	155239	1					
ANR	155742	ExpressionStatement	"pack_word ( & p , j )"	796:12:25226:25242	155239	0	True				
ANR	155743	CallExpression	"pack_word ( & p , j )"		155239	0					
ANR	155744	Callee	pack_word		155239	0					
ANR	155745	Identifier	pack_word		155239	0					
ANR	155746	ArgumentList	& p		155239	1					
ANR	155747	Argument	& p		155239	0					
ANR	155748	UnaryOperationExpression	& p		155239	0					
ANR	155749	UnaryOperator	&		155239	0					
ANR	155750	Identifier	p		155239	1					
ANR	155751	Argument	j		155239	1					
ANR	155752	Identifier	j		155239	0					
ANR	155753	ExpressionStatement	"pack_word ( & p , subr_len )"	797:12:25256:25279	155239	1	True				
ANR	155754	CallExpression	"pack_word ( & p , subr_len )"		155239	0					
ANR	155755	Callee	pack_word		155239	0					
ANR	155756	Identifier	pack_word		155239	0					
ANR	155757	ArgumentList	& p		155239	1					
ANR	155758	Argument	& p		155239	0					
ANR	155759	UnaryOperationExpression	& p		155239	0					
ANR	155760	UnaryOperator	&		155239	0					
ANR	155761	Identifier	p		155239	1					
ANR	155762	Argument	subr_len		155239	1					
ANR	155763	Identifier	subr_len		155239	0					
ANR	155764	ExpressionStatement	"PACK_BYTE ( p , 1 )"	798:12:25293:25308	155239	2	True				
ANR	155765	CallExpression	"PACK_BYTE ( p , 1 )"		155239	0					
ANR	155766	Callee	PACK_BYTE		155239	0					
ANR	155767	Identifier	PACK_BYTE		155239	0					
ANR	155768	ArgumentList	p		155239	1					
ANR	155769	Argument	p		155239	0					
ANR	155770	Identifier	p		155239	0					
ANR	155771	Argument	1		155239	1					
ANR	155772	PrimaryExpression	1		155239	0					
ANR	155773	ExpressionStatement	"ff -> get_subr ( ff , j , p , subr_len )"	799:12:25344:25376	155239	3	True				
ANR	155774	CallExpression	"ff -> get_subr ( ff , j , p , subr_len )"		155239	0					
ANR	155775	Callee	ff -> get_subr		155239	0					
ANR	155776	PtrMemberAccess	ff -> get_subr		155239	0					
ANR	155777	Identifier	ff		155239	0					
ANR	155778	Identifier	get_subr		155239	1					
ANR	155779	ArgumentList	ff		155239	1					
ANR	155780	Argument	ff		155239	0					
ANR	155781	Identifier	ff		155239	0					
ANR	155782	Argument	j		155239	1					
ANR	155783	Identifier	j		155239	0					
ANR	155784	Argument	p		155239	2					
ANR	155785	Identifier	p		155239	0					
ANR	155786	Argument	subr_len		155239	3					
ANR	155787	Identifier	subr_len		155239	0					
ANR	155788	ExpressionStatement	p += subr_len	800:12:25390:25403	155239	4	True				
ANR	155789	AssignmentExpression	p += subr_len		155239	0		+=			
ANR	155790	Identifier	p		155239	0					
ANR	155791	Identifier	subr_len		155239	1					
ANR	155792	ElseStatement	else		155239	0					
ANR	155793	ExpressionStatement	skip = 1	803:12:25440:25448	155239	0	True				
ANR	155794	AssignmentExpression	skip = 1		155239	0		=			
ANR	155795	Identifier	skip		155239	0					
ANR	155796	PrimaryExpression	1		155239	1					
ANR	155797	ExpressionStatement	"n = ff -> get_word ( ff , gs_fapi_font_feature_GlobalSubrs_count , 0 )"	805:4:25460:25523	155239	34	True				
ANR	155798	AssignmentExpression	"n = ff -> get_word ( ff , gs_fapi_font_feature_GlobalSubrs_count , 0 )"		155239	0		=			
ANR	155799	Identifier	n		155239	0					
ANR	155800	CallExpression	"ff -> get_word ( ff , gs_fapi_font_feature_GlobalSubrs_count , 0 )"		155239	1					
ANR	155801	Callee	ff -> get_word		155239	0					
ANR	155802	PtrMemberAccess	ff -> get_word		155239	0					
ANR	155803	Identifier	ff		155239	0					
ANR	155804	Identifier	get_word		155239	1					
ANR	155805	ArgumentList	ff		155239	1					
ANR	155806	Argument	ff		155239	0					
ANR	155807	Identifier	ff		155239	0					
ANR	155808	Argument	gs_fapi_font_feature_GlobalSubrs_count		155239	1					
ANR	155809	Identifier	gs_fapi_font_feature_GlobalSubrs_count		155239	0					
ANR	155810	Argument	0		155239	2					
ANR	155811	PrimaryExpression	0		155239	0					
ANR	155812	IfStatement	if ( n != 65535 )		155239	35					
ANR	155813	Condition	n != 65535	807:8:25621:25630	155239	0	True				
ANR	155814	EqualityExpression	n != 65535		155239	0		!=			
ANR	155815	Identifier	n		155239	0					
ANR	155816	PrimaryExpression	65535		155239	1					
ANR	155817	CompoundStatement		66:20:3097:3097	155239	1					
ANR	155818	ExpressionStatement	"pack_word ( & p , n )"	808:8:25643:25659	155239	0	True				
ANR	155819	CallExpression	"pack_word ( & p , n )"		155239	0					
ANR	155820	Callee	pack_word		155239	0					
ANR	155821	Identifier	pack_word		155239	0					
ANR	155822	ArgumentList	& p		155239	1					
ANR	155823	Argument	& p		155239	0					
ANR	155824	UnaryOperationExpression	& p		155239	0					
ANR	155825	UnaryOperator	&		155239	0					
ANR	155826	Identifier	p		155239	1					
ANR	155827	Argument	n		155239	1					
ANR	155828	Identifier	n		155239	0					
ANR	155829	ForStatement	for ( j = 0 ; j < n ; j ++ )		155239	1					
ANR	155830	ForInit	j = 0 ;	809:13:25674:25679	155239	0	True				
ANR	155831	AssignmentExpression	j = 0		155239	0		=			
ANR	155832	Identifier	j		155239	0					
ANR	155833	PrimaryExpression	0		155239	1					
ANR	155834	Condition	j < n	809:20:25681:25685	155239	1	True				
ANR	155835	RelationalExpression	j < n		155239	0		<			
ANR	155836	Identifier	j		155239	0					
ANR	155837	Identifier	n		155239	1					
ANR	155838	PostIncDecOperationExpression	j ++	809:27:25688:25690	155239	2	True				
ANR	155839	Identifier	j		155239	0					
ANR	155840	IncDec	++		155239	1					
ANR	155841	CompoundStatement		69:12:3171:3215	155239	3					
ANR	155842	IdentifierDeclStatement	"ushort subr_len = ff -> get_gsubr ( ff , j , 0 , 0 ) ;"	810:12:25707:25751	155239	0	True				
ANR	155843	IdentifierDecl	"subr_len = ff -> get_gsubr ( ff , j , 0 , 0 )"		155239	0					
ANR	155844	IdentifierDeclType	ushort		155239	0					
ANR	155845	Identifier	subr_len		155239	1					
ANR	155846	AssignmentExpression	"subr_len = ff -> get_gsubr ( ff , j , 0 , 0 )"		155239	2		=			
ANR	155847	Identifier	subr_len		155239	0					
ANR	155848	CallExpression	"ff -> get_gsubr ( ff , j , 0 , 0 )"		155239	1					
ANR	155849	Callee	ff -> get_gsubr		155239	0					
ANR	155850	PtrMemberAccess	ff -> get_gsubr		155239	0					
ANR	155851	Identifier	ff		155239	0					
ANR	155852	Identifier	get_gsubr		155239	1					
ANR	155853	ArgumentList	ff		155239	1					
ANR	155854	Argument	ff		155239	0					
ANR	155855	Identifier	ff		155239	0					
ANR	155856	Argument	j		155239	1					
ANR	155857	Identifier	j		155239	0					
ANR	155858	Argument	0		155239	2					
ANR	155859	PrimaryExpression	0		155239	0					
ANR	155860	Argument	0		155239	3					
ANR	155861	PrimaryExpression	0		155239	0					
ANR	155862	IfStatement	if ( subr_len != 0 )		155239	1					
ANR	155863	Condition	subr_len != 0	812:16:25770:25782	155239	0	True				
ANR	155864	EqualityExpression	subr_len != 0		155239	0		!=			
ANR	155865	Identifier	subr_len		155239	0					
ANR	155866	PrimaryExpression	0		155239	1					
ANR	155867	CompoundStatement		71:31:3249:3249	155239	1					
ANR	155868	ExpressionStatement	"pack_word ( & p , j )"	813:16:25803:25819	155239	0	True				
ANR	155869	CallExpression	"pack_word ( & p , j )"		155239	0					
ANR	155870	Callee	pack_word		155239	0					
ANR	155871	Identifier	pack_word		155239	0					
ANR	155872	ArgumentList	& p		155239	1					
ANR	155873	Argument	& p		155239	0					
ANR	155874	UnaryOperationExpression	& p		155239	0					
ANR	155875	UnaryOperator	&		155239	0					
ANR	155876	Identifier	p		155239	1					
ANR	155877	Argument	j		155239	1					
ANR	155878	Identifier	j		155239	0					
ANR	155879	ExpressionStatement	"pack_word ( & p , subr_len )"	814:16:25837:25860	155239	1	True				
ANR	155880	CallExpression	"pack_word ( & p , subr_len )"		155239	0					
ANR	155881	Callee	pack_word		155239	0					
ANR	155882	Identifier	pack_word		155239	0					
ANR	155883	ArgumentList	& p		155239	1					
ANR	155884	Argument	& p		155239	0					
ANR	155885	UnaryOperationExpression	& p		155239	0					
ANR	155886	UnaryOperator	&		155239	0					
ANR	155887	Identifier	p		155239	1					
ANR	155888	Argument	subr_len		155239	1					
ANR	155889	Identifier	subr_len		155239	0					
ANR	155890	ExpressionStatement	"PACK_BYTE ( p , 1 )"	815:16:25878:25893	155239	2	True				
ANR	155891	CallExpression	"PACK_BYTE ( p , 1 )"		155239	0					
ANR	155892	Callee	PACK_BYTE		155239	0					
ANR	155893	Identifier	PACK_BYTE		155239	0					
ANR	155894	ArgumentList	p		155239	1					
ANR	155895	Argument	p		155239	0					
ANR	155896	Identifier	p		155239	0					
ANR	155897	Argument	1		155239	1					
ANR	155898	PrimaryExpression	1		155239	0					
ANR	155899	ExpressionStatement	"ff -> get_gsubr ( ff , j , p , subr_len )"	816:16:25937:25970	155239	3	True				
ANR	155900	CallExpression	"ff -> get_gsubr ( ff , j , p , subr_len )"		155239	0					
ANR	155901	Callee	ff -> get_gsubr		155239	0					
ANR	155902	PtrMemberAccess	ff -> get_gsubr		155239	0					
ANR	155903	Identifier	ff		155239	0					
ANR	155904	Identifier	get_gsubr		155239	1					
ANR	155905	ArgumentList	ff		155239	1					
ANR	155906	Argument	ff		155239	0					
ANR	155907	Identifier	ff		155239	0					
ANR	155908	Argument	j		155239	1					
ANR	155909	Identifier	j		155239	0					
ANR	155910	Argument	p		155239	2					
ANR	155911	Identifier	p		155239	0					
ANR	155912	Argument	subr_len		155239	3					
ANR	155913	Identifier	subr_len		155239	0					
ANR	155914	ExpressionStatement	p += subr_len	817:16:25988:26001	155239	4	True				
ANR	155915	AssignmentExpression	p += subr_len		155239	0		+=			
ANR	155916	Identifier	p		155239	0					
ANR	155917	Identifier	subr_len		155239	1					
ANR	155918	ElseStatement	else		155239	0					
ANR	155919	ExpressionStatement	skip = 1	820:16:26050:26058	155239	0	True				
ANR	155920	AssignmentExpression	skip = 1		155239	0		=			
ANR	155921	Identifier	skip		155239	0					
ANR	155922	PrimaryExpression	1		155239	1					
ANR	155923	IfStatement	if ( skip )		155239	36					
ANR	155924	Condition	skip	823:8:26084:26087	155239	0	True				
ANR	155925	Identifier	skip		155239	0					
ANR	155926	ExpressionStatement	"pack_word ( & p , 0xFFFF )"	824:8:26098:26119	155239	1	True				
ANR	155927	CallExpression	"pack_word ( & p , 0xFFFF )"		155239	0					
ANR	155928	Callee	pack_word		155239	0					
ANR	155929	Identifier	pack_word		155239	0					
ANR	155930	ArgumentList	& p		155239	1					
ANR	155931	Argument	& p		155239	0					
ANR	155932	UnaryOperationExpression	& p		155239	0					
ANR	155933	UnaryOperator	&		155239	0					
ANR	155934	Identifier	p		155239	1					
ANR	155935	Argument	0xFFFF		155239	1					
ANR	155936	PrimaryExpression	0xFFFF		155239	0					
ANR	155937	ReturnType	static void		155239	1					
ANR	155938	Identifier	pack_pseo_fhdr		155239	2					
ANR	155939	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UB8 * p"		155239	3					
ANR	155940	Parameter	fapi_ufst_server * r	741:15:22485:22504	155239	0	True				
ANR	155941	ParameterType	fapi_ufst_server *		155239	0					
ANR	155942	Identifier	r		155239	1					
ANR	155943	Parameter	gs_fapi_font * ff	741:37:22507:22523	155239	1	True				
ANR	155944	ParameterType	gs_fapi_font *		155239	0					
ANR	155945	Identifier	ff		155239	1					
ANR	155946	Parameter	UB8 * p	741:56:22526:22532	155239	2	True				
ANR	155947	ParameterType	UB8 *		155239	0					
ANR	155948	Identifier	p		155239	1					
ANR	155949	CFGEntryNode	ENTRY		155239		True				
ANR	155950	CFGExitNode	EXIT		155239		True				
ANR	155951	Symbol	ff		155239						
ANR	155952	Symbol	gs_fapi_font_feature_UnderlineThickness		155239						
ANR	155953	Symbol	gs_fapi_font_feature_BlueFuzz		155239						
ANR	155954	Symbol	gs_fapi_font_feature_FamilyOtherBlues		155239						
ANR	155955	Symbol	gs_fapi_font_feature_BlueScale		155239						
ANR	155956	Symbol	subr_len		155239						
ANR	155957	Symbol	ff -> get_gsubr		155239						
ANR	155958	Symbol	gs_fapi_font_feature_GlobalSubrs_count		155239						
ANR	155959	Symbol	ff -> get_subr		155239						
ANR	155960	Symbol	skip		155239						
ANR	155961	Symbol	gs_fapi_font_feature_BlueValues		155239						
ANR	155962	Symbol	gs_fapi_font_feature_BlueShift		155239						
ANR	155963	Symbol	gs_fapi_font_feature_FontType		155239						
ANR	155964	Symbol	gs_fapi_font_feature_StemSnapH		155239						
ANR	155965	Symbol	gs_fapi_font_feature_Subrs_count		155239						
ANR	155966	Symbol	gs_fapi_font_feature_OtherBlues_count		155239						
ANR	155967	Symbol	gs_fapi_font_feature_lenIV		155239						
ANR	155968	Symbol	gs_fapi_font_feature_Weight		155239						
ANR	155969	Symbol	gs_fapi_font_feature_UnderLinePosition		155239						
ANR	155970	Symbol	gs_fapi_font_feature_BlueValues_count		155239						
ANR	155971	Symbol	gs_fapi_font_feature_StemSnapH_count		155239						
ANR	155972	Symbol	gs_fapi_font_feature_ForceBold		155239						
ANR	155973	Symbol	gs_fapi_font_feature_UniqueID		155239						
ANR	155974	Symbol	gs_fapi_font_feature_StemSnapV_count		155239						
ANR	155975	Symbol	gs_fapi_font_feature_StemSnapV		155239						
ANR	155976	Symbol	* ff		155239						
ANR	155977	Symbol	gs_fapi_font_feature_FontBBox		155239						
ANR	155978	Symbol	ff -> get_word		155239						
ANR	155979	Symbol	j		155239						
ANR	155980	Symbol	gs_fapi_font_feature_StdHW		155239						
ANR	155981	Symbol	gs_fapi_font_feature_IsFixedPitch		155239						
ANR	155982	Symbol	n		155239						
ANR	155983	Symbol	p		155239						
ANR	155984	Symbol	ff -> get_float		155239						
ANR	155985	Symbol	r		155239						
ANR	155986	Symbol	gs_fapi_font_feature_OtherBlues		155239						
ANR	155987	Symbol	& p		155239						
ANR	155988	Symbol	gs_fapi_font_feature_FontMatrix		155239						
ANR	155989	Symbol	gs_fapi_font_feature_ItalicAngle		155239						
ANR	155990	Symbol	gs_fapi_font_feature_FamilyBlues_count		155239						
ANR	155991	Symbol	gs_fapi_font_feature_StdVW		155239						
ANR	155992	Symbol	gs_fapi_font_feature_LanguageGroup		155239						
ANR	155993	Symbol	gs_fapi_font_feature_FamilyBlues		155239						
ANR	155994	Symbol	gs_fapi_font_feature_FamilyOtherBlues_count		155239						
ANR	155995	Function	my_strdup	827:0:26124:26349							
ANR	155996	FunctionDef	"my_strdup (fapi_ufst_server * r , const char * s , const char * cname)"		155995	0					
ANR	155997	CompoundStatement		829:0:26204:26349	155995	0					
ANR	155998	IdentifierDeclStatement	int len = strlen ( s ) + 1 ;	830:4:26210:26233	155995	0	True				
ANR	155999	IdentifierDecl	len = strlen ( s ) + 1		155995	0					
ANR	156000	IdentifierDeclType	int		155995	0					
ANR	156001	Identifier	len		155995	1					
ANR	156002	AssignmentExpression	len = strlen ( s ) + 1		155995	2		=			
ANR	156003	Identifier	len		155995	0					
ANR	156004	AdditiveExpression	strlen ( s ) + 1		155995	1		+			
ANR	156005	CallExpression	strlen ( s )		155995	0					
ANR	156006	Callee	strlen		155995	0					
ANR	156007	Identifier	strlen		155995	0					
ANR	156008	ArgumentList	s		155995	1					
ANR	156009	Argument	s		155995	0					
ANR	156010	Identifier	s		155995	0					
ANR	156011	PrimaryExpression	1		155995	1					
ANR	156012	IdentifierDeclStatement	"char * p = ( char * ) gs_malloc ( r -> mem , len , 1 , cname ) ;"	831:4:26239:26289	155995	1	True				
ANR	156013	IdentifierDecl	"* p = ( char * ) gs_malloc ( r -> mem , len , 1 , cname )"		155995	0					
ANR	156014	IdentifierDeclType	char *		155995	0					
ANR	156015	Identifier	p		155995	1					
ANR	156016	AssignmentExpression	"* p = ( char * ) gs_malloc ( r -> mem , len , 1 , cname )"		155995	2		=			
ANR	156017	Identifier	p		155995	0					
ANR	156018	CastExpression	"( char * ) gs_malloc ( r -> mem , len , 1 , cname )"		155995	1					
ANR	156019	CastTarget	char *		155995	0					
ANR	156020	CallExpression	"gs_malloc ( r -> mem , len , 1 , cname )"		155995	1					
ANR	156021	Callee	gs_malloc		155995	0					
ANR	156022	Identifier	gs_malloc		155995	0					
ANR	156023	ArgumentList	r -> mem		155995	1					
ANR	156024	Argument	r -> mem		155995	0					
ANR	156025	PtrMemberAccess	r -> mem		155995	0					
ANR	156026	Identifier	r		155995	0					
ANR	156027	Identifier	mem		155995	1					
ANR	156028	Argument	len		155995	1					
ANR	156029	Identifier	len		155995	0					
ANR	156030	Argument	1		155995	2					
ANR	156031	PrimaryExpression	1		155995	0					
ANR	156032	Argument	cname		155995	3					
ANR	156033	Identifier	cname		155995	0					
ANR	156034	IfStatement	if ( p != 0 )		155995	2					
ANR	156035	Condition	p != 0	833:8:26300:26305	155995	0	True				
ANR	156036	EqualityExpression	p != 0		155995	0		!=			
ANR	156037	Identifier	p		155995	0					
ANR	156038	PrimaryExpression	0		155995	1					
ANR	156039	ExpressionStatement	"memcpy ( p , s , len )"	834:8:26316:26333	155995	1	True				
ANR	156040	CallExpression	"memcpy ( p , s , len )"		155995	0					
ANR	156041	Callee	memcpy		155995	0					
ANR	156042	Identifier	memcpy		155995	0					
ANR	156043	ArgumentList	p		155995	1					
ANR	156044	Argument	p		155995	0					
ANR	156045	Identifier	p		155995	0					
ANR	156046	Argument	s		155995	1					
ANR	156047	Identifier	s		155995	0					
ANR	156048	Argument	len		155995	2					
ANR	156049	Identifier	len		155995	0					
ANR	156050	ReturnStatement	return p ;	835:4:26339:26347	155995	3	True				
ANR	156051	Identifier	p		155995	0					
ANR	156052	ReturnType	static char *		155995	1					
ANR	156053	Identifier	my_strdup		155995	2					
ANR	156054	ParameterList	"fapi_ufst_server * r , const char * s , const char * cname"		155995	3					
ANR	156055	Parameter	fapi_ufst_server * r	828:10:26148:26167	155995	0	True				
ANR	156056	ParameterType	fapi_ufst_server *		155995	0					
ANR	156057	Identifier	r		155995	1					
ANR	156058	Parameter	const char * s	828:32:26170:26182	155995	1	True				
ANR	156059	ParameterType	const char *		155995	0					
ANR	156060	Identifier	s		155995	1					
ANR	156061	Parameter	const char * cname	828:47:26185:26201	155995	2	True				
ANR	156062	ParameterType	const char *		155995	0					
ANR	156063	Identifier	cname		155995	1					
ANR	156064	CFGEntryNode	ENTRY		155995		True				
ANR	156065	CFGExitNode	EXIT		155995		True				
ANR	156066	Symbol	p		155995						
ANR	156067	Symbol	strlen		155995						
ANR	156068	Symbol	r		155995						
ANR	156069	Symbol	gs_malloc		155995						
ANR	156070	Symbol	s		155995						
ANR	156071	Symbol	len		155995						
ANR	156072	Symbol	r -> mem		155995						
ANR	156073	Symbol	cname		155995						
ANR	156074	Symbol	* r		155995						
ANR	156075	Function	fco_open	838:0:26352:27575							
ANR	156076	FunctionDef	"fco_open (fapi_ufst_server * r , const char * font_file_path , fco_list_elem * * result)"		156075	0					
ANR	156077	CompoundStatement		841:0:26468:27575	156075	0					
ANR	156078	IdentifierDeclStatement	int code ;	842:4:26474:26482	156075	0	True				
ANR	156079	IdentifierDecl	code		156075	0					
ANR	156080	IdentifierDeclType	int		156075	0					
ANR	156081	Identifier	code		156075	1					
ANR	156082	IdentifierDeclStatement	fco_list_elem * e = gx_UFST_find_static_fco ( font_file_path ) ;	843:4:26488:26546	156075	1	True				
ANR	156083	IdentifierDecl	* e = gx_UFST_find_static_fco ( font_file_path )		156075	0					
ANR	156084	IdentifierDeclType	fco_list_elem *		156075	0					
ANR	156085	Identifier	e		156075	1					
ANR	156086	AssignmentExpression	* e = gx_UFST_find_static_fco ( font_file_path )		156075	2		=			
ANR	156087	Identifier	e		156075	0					
ANR	156088	CallExpression	gx_UFST_find_static_fco ( font_file_path )		156075	1					
ANR	156089	Callee	gx_UFST_find_static_fco		156075	0					
ANR	156090	Identifier	gx_UFST_find_static_fco		156075	0					
ANR	156091	ArgumentList	font_file_path		156075	1					
ANR	156092	Argument	font_file_path		156075	0					
ANR	156093	Identifier	font_file_path		156075	0					
ANR	156094	IfStatement	if ( e != NULL )		156075	2					
ANR	156095	Condition	e != NULL	845:8:26557:26565	156075	0	True				
ANR	156096	EqualityExpression	e != NULL		156075	0		!=			
ANR	156097	Identifier	e		156075	0					
ANR	156098	Identifier	NULL		156075	1					
ANR	156099	CompoundStatement		5:19:99:99	156075	1					
ANR	156100	ExpressionStatement	* result = e	846:8:26578:26589	156075	0	True				
ANR	156101	AssignmentExpression	* result = e		156075	0		=			
ANR	156102	UnaryOperationExpression	* result		156075	0					
ANR	156103	UnaryOperator	*		156075	0					
ANR	156104	Identifier	result		156075	1					
ANR	156105	Identifier	e		156075	1					
ANR	156106	ReturnStatement	return 0 ;	847:8:26599:26607	156075	1	True				
ANR	156107	PrimaryExpression	0		156075	0					
ANR	156108	ForStatement	for ( e = r -> fco_list ; e != 0 ; e = e -> next )		156075	3					
ANR	156109	ForInit	e = r -> fco_list ;	849:9:26624:26639	156075	0	True				
ANR	156110	AssignmentExpression	e = r -> fco_list		156075	0		=			
ANR	156111	Identifier	e		156075	0					
ANR	156112	PtrMemberAccess	r -> fco_list		156075	1					
ANR	156113	Identifier	r		156075	0					
ANR	156114	Identifier	fco_list		156075	1					
ANR	156115	Condition	e != 0	849:26:26641:26646	156075	1	True				
ANR	156116	EqualityExpression	e != 0		156075	0		!=			
ANR	156117	Identifier	e		156075	0					
ANR	156118	PrimaryExpression	0		156075	1					
ANR	156119	AssignmentExpression	e = e -> next	849:34:26649:26659	156075	2	True	=			
ANR	156120	Identifier	e		156075	0					
ANR	156121	PtrMemberAccess	e -> next		156075	1					
ANR	156122	Identifier	e		156075	0					
ANR	156123	Identifier	next		156075	1					
ANR	156124	CompoundStatement		9:47:193:193	156075	3					
ANR	156125	IfStatement	"if ( ! strcmp ( e -> file_path , font_file_path ) )"		156075	0					
ANR	156126	Condition	"! strcmp ( e -> file_path , font_file_path )"	850:12:26676:26712	156075	0	True				
ANR	156127	UnaryOperationExpression	"! strcmp ( e -> file_path , font_file_path )"		156075	0					
ANR	156128	UnaryOperator	!		156075	0					
ANR	156129	CallExpression	"strcmp ( e -> file_path , font_file_path )"		156075	1					
ANR	156130	Callee	strcmp		156075	0					
ANR	156131	Identifier	strcmp		156075	0					
ANR	156132	ArgumentList	e -> file_path		156075	1					
ANR	156133	Argument	e -> file_path		156075	0					
ANR	156134	PtrMemberAccess	e -> file_path		156075	0					
ANR	156135	Identifier	e		156075	0					
ANR	156136	Identifier	file_path		156075	1					
ANR	156137	Argument	font_file_path		156075	1					
ANR	156138	Identifier	font_file_path		156075	0					
ANR	156139	BreakStatement	break ;	851:12:26727:26732	156075	1	True				
ANR	156140	IfStatement	if ( e == 0 )		156075	4					
ANR	156141	Condition	e == 0	853:8:26748:26753	156075	0	True				
ANR	156142	EqualityExpression	e == 0		156075	0		==			
ANR	156143	Identifier	e		156075	0					
ANR	156144	PrimaryExpression	0		156075	1					
ANR	156145	CompoundStatement		14:8:297:310	156075	1					
ANR	156146	IdentifierDeclStatement	SW16 fcHandle ;	854:8:26766:26779	156075	0	True				
ANR	156147	IdentifierDecl	fcHandle		156075	0					
ANR	156148	IdentifierDeclType	SW16		156075	0					
ANR	156149	Identifier	fcHandle		156075	1					
ANR	156150	ExpressionStatement	FSA_FROM_SERVER	856:8:26790:26805	156075	1	True				
ANR	156151	Identifier	FSA_FROM_SERVER		156075	0					
ANR	156152	Statement	if	858:8:26816:26817	156075	2	True				
ANR	156153	Statement	(	858:11:26819:26819	156075	3	True				
ANR	156154	Statement	(	858:12:26820:26820	156075	4	True				
ANR	156155	Statement	code	858:13:26821:26824	156075	5	True				
ANR	156156	Statement	=	858:18:26826:26826	156075	6	True				
ANR	156157	Statement	CGIFfco_Open	858:20:26828:26839	156075	7	True				
ANR	156158	Statement	(	858:32:26840:26840	156075	8	True				
ANR	156159	Statement	FSA	858:33:26841:26843	156075	9	True				
ANR	156160	Statement	(	858:36:26844:26844	156075	10	True				
ANR	156161	Statement	UB8	858:37:26845:26847	156075	11	True				
ANR	156162	Statement	*	858:41:26849:26849	156075	12	True				
ANR	156163	Statement	)	858:42:26850:26850	156075	13	True				
ANR	156164	Statement	font_file_path	858:44:26852:26865	156075	14	True				
ANR	156165	Statement	","	858:58:26866:26866	156075	15	True				
ANR	156166	Statement	&	858:60:26868:26868	156075	16	True				
ANR	156167	Statement	fcHandle	858:61:26869:26876	156075	17	True				
ANR	156168	Statement	)	858:69:26877:26877	156075	18	True				
ANR	156169	Statement	)	858:70:26878:26878	156075	19	True				
ANR	156170	Statement	!=	858:72:26880:26881	156075	20	True				
ANR	156171	Statement	0	858:75:26883:26883	156075	21	True				
ANR	156172	Statement	)	858:76:26884:26884	156075	22	True				
ANR	156173	ReturnStatement	return code ;	859:12:26898:26909	156075	23	True				
ANR	156174	Identifier	code		156075	0					
ANR	156175	ExpressionStatement	"e = ( fco_list_elem * ) gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"	860:8:26919:27030	156075	24	True				
ANR	156176	AssignmentExpression	"e = ( fco_list_elem * ) gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"		156075	0		=			
ANR	156177	Identifier	e		156075	0					
ANR	156178	CastExpression	"( fco_list_elem * ) gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"		156075	1					
ANR	156179	CastTarget	fco_list_elem *		156075	0					
ANR	156180	CallExpression	"gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"		156075	1					
ANR	156181	Callee	gs_malloc		156075	0					
ANR	156182	Identifier	gs_malloc		156075	0					
ANR	156183	ArgumentList	r -> mem		156075	1					
ANR	156184	Argument	r -> mem		156075	0					
ANR	156185	PtrMemberAccess	r -> mem		156075	0					
ANR	156186	Identifier	r		156075	0					
ANR	156187	Identifier	mem		156075	1					
ANR	156188	Argument	sizeof ( * e )		156075	1					
ANR	156189	SizeofExpression	sizeof ( * e )		156075	0					
ANR	156190	Sizeof	sizeof		156075	0					
ANR	156191	UnaryOperationExpression	* e		156075	1					
ANR	156192	UnaryOperator	*		156075	0					
ANR	156193	Identifier	e		156075	1					
ANR	156194	Argument	1		156075	2					
ANR	156195	PrimaryExpression	1		156075	0					
ANR	156196	Argument	"""fco_list_elem"""		156075	3					
ANR	156197	PrimaryExpression	"""fco_list_elem"""		156075	0					
ANR	156198	IfStatement	if ( e == 0 )		156075	25					
ANR	156199	Condition	e == 0	862:12:27044:27049	156075	0	True				
ANR	156200	EqualityExpression	e == 0		156075	0		==			
ANR	156201	Identifier	e		156075	0					
ANR	156202	PrimaryExpression	0		156075	1					
ANR	156203	CompoundStatement		22:20:583:583	156075	1					
ANR	156204	Statement	CGIFfco_Close	863:12:27066:27078	156075	0	True				
ANR	156205	Statement	(	863:25:27079:27079	156075	1	True				
ANR	156206	Statement	FSA	863:26:27080:27082	156075	2	True				
ANR	156207	Statement	fcHandle	863:30:27084:27091	156075	3	True				
ANR	156208	Statement	)	863:38:27092:27092	156075	4	True				
ANR	156209	ExpressionStatement		863:39:27093:27093	156075	5	True				
ANR	156210	ExpressionStatement	return_error ( gs_error_VMerror )	864:12:27107:27137	156075	6	True				
ANR	156211	CallExpression	return_error ( gs_error_VMerror )		156075	0					
ANR	156212	Callee	return_error		156075	0					
ANR	156213	Identifier	return_error		156075	0					
ANR	156214	ArgumentList	gs_error_VMerror		156075	1					
ANR	156215	Argument	gs_error_VMerror		156075	0					
ANR	156216	Identifier	gs_error_VMerror		156075	0					
ANR	156217	ExpressionStatement	e -> open_count = 0	866:8:27157:27174	156075	26	True				
ANR	156218	AssignmentExpression	e -> open_count = 0		156075	0		=			
ANR	156219	PtrMemberAccess	e -> open_count		156075	0					
ANR	156220	Identifier	e		156075	0					
ANR	156221	Identifier	open_count		156075	1					
ANR	156222	PrimaryExpression	0		156075	1					
ANR	156223	ExpressionStatement	e -> fcHandle = fcHandle	867:8:27184:27206	156075	27	True				
ANR	156224	AssignmentExpression	e -> fcHandle = fcHandle		156075	0		=			
ANR	156225	PtrMemberAccess	e -> fcHandle		156075	0					
ANR	156226	Identifier	e		156075	0					
ANR	156227	Identifier	fcHandle		156075	1					
ANR	156228	Identifier	fcHandle		156075	1					
ANR	156229	ExpressionStatement	"e -> file_path = my_strdup ( r , font_file_path , ""fco_file_path"" )"	868:8:27216:27276	156075	28	True				
ANR	156230	AssignmentExpression	"e -> file_path = my_strdup ( r , font_file_path , ""fco_file_path"" )"		156075	0		=			
ANR	156231	PtrMemberAccess	e -> file_path		156075	0					
ANR	156232	Identifier	e		156075	0					
ANR	156233	Identifier	file_path		156075	1					
ANR	156234	CallExpression	"my_strdup ( r , font_file_path , ""fco_file_path"" )"		156075	1					
ANR	156235	Callee	my_strdup		156075	0					
ANR	156236	Identifier	my_strdup		156075	0					
ANR	156237	ArgumentList	r		156075	1					
ANR	156238	Argument	r		156075	0					
ANR	156239	Identifier	r		156075	0					
ANR	156240	Argument	font_file_path		156075	1					
ANR	156241	Identifier	font_file_path		156075	0					
ANR	156242	Argument	"""fco_file_path"""		156075	2					
ANR	156243	PrimaryExpression	"""fco_file_path"""		156075	0					
ANR	156244	IfStatement	if ( e -> file_path == 0 )		156075	29					
ANR	156245	Condition	e -> file_path == 0	869:12:27290:27306	156075	0	True				
ANR	156246	EqualityExpression	e -> file_path == 0		156075	0		==			
ANR	156247	PtrMemberAccess	e -> file_path		156075	0					
ANR	156248	Identifier	e		156075	0					
ANR	156249	Identifier	file_path		156075	1					
ANR	156250	PrimaryExpression	0		156075	1					
ANR	156251	CompoundStatement		29:31:840:840	156075	1					
ANR	156252	Statement	CGIFfco_Close	870:12:27323:27335	156075	0	True				
ANR	156253	Statement	(	870:25:27336:27336	156075	1	True				
ANR	156254	Statement	FSA	870:26:27337:27339	156075	2	True				
ANR	156255	Statement	fcHandle	870:30:27341:27348	156075	3	True				
ANR	156256	Statement	)	870:38:27349:27349	156075	4	True				
ANR	156257	ExpressionStatement		870:39:27350:27350	156075	5	True				
ANR	156258	ExpressionStatement	"gs_free ( r -> mem , e , 0 , 0 , ""fco_list_elem"" )"	871:12:27364:27405	156075	6	True				
ANR	156259	CallExpression	"gs_free ( r -> mem , e , 0 , 0 , ""fco_list_elem"" )"		156075	0					
ANR	156260	Callee	gs_free		156075	0					
ANR	156261	Identifier	gs_free		156075	0					
ANR	156262	ArgumentList	r -> mem		156075	1					
ANR	156263	Argument	r -> mem		156075	0					
ANR	156264	PtrMemberAccess	r -> mem		156075	0					
ANR	156265	Identifier	r		156075	0					
ANR	156266	Identifier	mem		156075	1					
ANR	156267	Argument	e		156075	1					
ANR	156268	Identifier	e		156075	0					
ANR	156269	Argument	0		156075	2					
ANR	156270	PrimaryExpression	0		156075	0					
ANR	156271	Argument	0		156075	3					
ANR	156272	PrimaryExpression	0		156075	0					
ANR	156273	Argument	"""fco_list_elem"""		156075	4					
ANR	156274	PrimaryExpression	"""fco_list_elem"""		156075	0					
ANR	156275	ExpressionStatement	return_error ( gs_error_VMerror )	872:12:27419:27449	156075	7	True				
ANR	156276	CallExpression	return_error ( gs_error_VMerror )		156075	0					
ANR	156277	Callee	return_error		156075	0					
ANR	156278	Identifier	return_error		156075	0					
ANR	156279	ArgumentList	gs_error_VMerror		156075	1					
ANR	156280	Argument	gs_error_VMerror		156075	0					
ANR	156281	Identifier	gs_error_VMerror		156075	0					
ANR	156282	ExpressionStatement	e -> next = r -> fco_list	874:8:27469:27490	156075	30	True				
ANR	156283	AssignmentExpression	e -> next = r -> fco_list		156075	0		=			
ANR	156284	PtrMemberAccess	e -> next		156075	0					
ANR	156285	Identifier	e		156075	0					
ANR	156286	Identifier	next		156075	1					
ANR	156287	PtrMemberAccess	r -> fco_list		156075	1					
ANR	156288	Identifier	r		156075	0					
ANR	156289	Identifier	fco_list		156075	1					
ANR	156290	ExpressionStatement	r -> fco_list = e	875:8:27500:27515	156075	31	True				
ANR	156291	AssignmentExpression	r -> fco_list = e		156075	0		=			
ANR	156292	PtrMemberAccess	r -> fco_list		156075	0					
ANR	156293	Identifier	r		156075	0					
ANR	156294	Identifier	fco_list		156075	1					
ANR	156295	Identifier	e		156075	1					
ANR	156296	ExpressionStatement	e -> open_count ++	877:4:27527:27542	156075	5	True				
ANR	156297	PostIncDecOperationExpression	e -> open_count ++		156075	0					
ANR	156298	PtrMemberAccess	e -> open_count		156075	0					
ANR	156299	Identifier	e		156075	0					
ANR	156300	Identifier	open_count		156075	1					
ANR	156301	IncDec	++		156075	1					
ANR	156302	ExpressionStatement	* result = e	878:4:27548:27559	156075	6	True				
ANR	156303	AssignmentExpression	* result = e		156075	0		=			
ANR	156304	UnaryOperationExpression	* result		156075	0					
ANR	156305	UnaryOperator	*		156075	0					
ANR	156306	Identifier	result		156075	1					
ANR	156307	Identifier	e		156075	1					
ANR	156308	ReturnStatement	return 0 ;	879:4:27565:27573	156075	7	True				
ANR	156309	PrimaryExpression	0		156075	0					
ANR	156310	ReturnType	static gs_fapi_retcode		156075	1					
ANR	156311	Identifier	fco_open		156075	2					
ANR	156312	ParameterList	"fapi_ufst_server * r , const char * font_file_path , fco_list_elem * * result"		156075	3					
ANR	156313	Parameter	fapi_ufst_server * r	839:9:26384:26403	156075	0	True				
ANR	156314	ParameterType	fapi_ufst_server *		156075	0					
ANR	156315	Identifier	r		156075	1					
ANR	156316	Parameter	const char * font_file_path	839:31:26406:26431	156075	1	True				
ANR	156317	ParameterType	const char *		156075	0					
ANR	156318	Identifier	font_file_path		156075	1					
ANR	156319	Parameter	fco_list_elem * * result	840:9:26443:26465	156075	2	True				
ANR	156320	ParameterType	fco_list_elem * *		156075	0					
ANR	156321	Identifier	result		156075	1					
ANR	156322	CFGEntryNode	ENTRY		156075		True				
ANR	156323	CFGExitNode	EXIT		156075		True				
ANR	156324	Symbol	strcmp		156075						
ANR	156325	Symbol	e -> fcHandle		156075						
ANR	156326	Symbol	gx_UFST_find_static_fco		156075						
ANR	156327	Symbol	e -> file_path		156075						
ANR	156328	Symbol	code		156075						
ANR	156329	Symbol	NULL		156075						
ANR	156330	Symbol	e		156075						
ANR	156331	Symbol	r -> mem		156075						
ANR	156332	Symbol	e -> next		156075						
ANR	156333	Symbol	fcHandle		156075						
ANR	156334	Symbol	* e		156075						
ANR	156335	Symbol	result		156075						
ANR	156336	Symbol	gs_error_VMerror		156075						
ANR	156337	Symbol	e -> open_count		156075						
ANR	156338	Symbol	r		156075						
ANR	156339	Symbol	gs_malloc		156075						
ANR	156340	Symbol	* result		156075						
ANR	156341	Symbol	font_file_path		156075						
ANR	156342	Symbol	my_strdup		156075						
ANR	156343	Symbol	* r		156075						
ANR	156344	Symbol	r -> fco_list		156075						
ANR	156345	Function	ufst_make_font_data	882:0:27578:35374							
ANR	156346	FunctionDef	"ufst_make_font_data (fapi_ufst_server * r , const char * font_file_path , gs_fapi_font * ff , ufst_common_font_data * * return_data)"		156345	0					
ANR	156347	CompoundStatement		885:0:27748:35374	156345	0					
ANR	156348	IdentifierDeclStatement	"ulong area_length = sizeof ( ufst_common_font_data ) , tt_size = 0 ;"	886:4:27754:27816	156345	0	True				
ANR	156349	IdentifierDecl	area_length = sizeof ( ufst_common_font_data )		156345	0					
ANR	156350	IdentifierDeclType	ulong		156345	0					
ANR	156351	Identifier	area_length		156345	1					
ANR	156352	AssignmentExpression	area_length = sizeof ( ufst_common_font_data )		156345	2		=			
ANR	156353	Identifier	area_length		156345	0					
ANR	156354	SizeofExpression	sizeof ( ufst_common_font_data )		156345	1					
ANR	156355	Sizeof	sizeof		156345	0					
ANR	156356	SizeofOperand	ufst_common_font_data		156345	1					
ANR	156357	IdentifierDecl	tt_size = 0		156345	1					
ANR	156358	IdentifierDeclType	ulong		156345	0					
ANR	156359	Identifier	tt_size		156345	1					
ANR	156360	AssignmentExpression	tt_size = 0		156345	2		=			
ANR	156361	Identifier	tt_size		156345	0					
ANR	156362	PrimaryExpression	0		156345	1					
ANR	156363	IdentifierDeclStatement	LPUB8 buf ;	887:4:27822:27831	156345	1	True				
ANR	156364	IdentifierDecl	buf		156345	0					
ANR	156365	IdentifierDeclType	LPUB8		156345	0					
ANR	156366	Identifier	buf		156345	1					
ANR	156367	IdentifierDeclStatement	PCLETTO_FHDR * h ;	888:4:27837:27852	156345	2	True				
ANR	156368	IdentifierDecl	* h		156345	0					
ANR	156369	IdentifierDeclType	PCLETTO_FHDR *		156345	0					
ANR	156370	Identifier	h		156345	1					
ANR	156371	IdentifierDeclStatement	ufst_common_font_data * d ;	889:4:27858:27882	156345	3	True				
ANR	156372	IdentifierDecl	* d		156345	0					
ANR	156373	IdentifierDeclType	ufst_common_font_data *		156345	0					
ANR	156374	Identifier	d		156345	1					
ANR	156375	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	890:4:27888:27927	156345	4	True				
ANR	156376	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		156345	0					
ANR	156377	IdentifierDeclType	bool		156345	0					
ANR	156378	Identifier	use_XL_format		156345	1					
ANR	156379	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		156345	2		=			
ANR	156380	Identifier	use_XL_format		156345	0					
ANR	156381	PtrMemberAccess	ff -> is_mtx_skipped		156345	1					
ANR	156382	Identifier	ff		156345	0					
ANR	156383	Identifier	is_mtx_skipped		156345	1					
ANR	156384	IdentifierDeclStatement	int code ;	891:4:27933:27941	156345	5	True				
ANR	156385	IdentifierDecl	code		156345	0					
ANR	156386	IdentifierDeclType	int		156345	0					
ANR	156387	Identifier	code		156345	1					
ANR	156388	ExpressionStatement	FSA_FROM_SERVER	893:4:27948:27963	156345	6	True				
ANR	156389	Identifier	FSA_FROM_SERVER		156345	0					
ANR	156390	ExpressionStatement	* return_data = 0	895:4:27970:27986	156345	7	True				
ANR	156391	AssignmentExpression	* return_data = 0		156345	0		=			
ANR	156392	UnaryOperationExpression	* return_data		156345	0					
ANR	156393	UnaryOperator	*		156345	0					
ANR	156394	Identifier	return_data		156345	1					
ANR	156395	PrimaryExpression	0		156345	1					
ANR	156396	ExpressionStatement	r -> fc . ttc_index = ff -> subfont	896:4:27992:28021	156345	8	True				
ANR	156397	AssignmentExpression	r -> fc . ttc_index = ff -> subfont		156345	0		=			
ANR	156398	MemberAccess	r -> fc . ttc_index		156345	0					
ANR	156399	PtrMemberAccess	r -> fc		156345	0					
ANR	156400	Identifier	r		156345	0					
ANR	156401	Identifier	fc		156345	1					
ANR	156402	Identifier	ttc_index		156345	1					
ANR	156403	PtrMemberAccess	ff -> subfont		156345	1					
ANR	156404	Identifier	ff		156345	0					
ANR	156405	Identifier	subfont		156345	1					
ANR	156406	IfStatement	if ( ff -> font_file_path == NULL )		156345	9					
ANR	156407	Condition	ff -> font_file_path == NULL	897:8:28031:28056	156345	0	True				
ANR	156408	EqualityExpression	ff -> font_file_path == NULL		156345	0		==			
ANR	156409	PtrMemberAccess	ff -> font_file_path		156345	0					
ANR	156410	Identifier	ff		156345	0					
ANR	156411	Identifier	font_file_path		156345	1					
ANR	156412	Identifier	NULL		156345	1					
ANR	156413	CompoundStatement		13:36:310:310	156345	1					
ANR	156414	ReturnStatement	return ( gs_error_invalidaccess ) ;	899:8:28096:28127	156345	0	True				
ANR	156415	Identifier	gs_error_invalidaccess		156345	0					
ANR	156416	ElseStatement	else		156345	0					
ANR	156417	CompoundStatement		46:8:1653:1686	156345	0					
ANR	156418	IdentifierDeclStatement	int sind = strlen ( font_file_path ) ;	930:8:29402:29435	156345	0	True				
ANR	156419	IdentifierDecl	sind = strlen ( font_file_path )		156345	0					
ANR	156420	IdentifierDeclType	int		156345	0					
ANR	156421	Identifier	sind		156345	1					
ANR	156422	AssignmentExpression	sind = strlen ( font_file_path )		156345	2		=			
ANR	156423	Identifier	sind		156345	0					
ANR	156424	CallExpression	strlen ( font_file_path )		156345	1					
ANR	156425	Callee	strlen		156345	0					
ANR	156426	Identifier	strlen		156345	0					
ANR	156427	ArgumentList	font_file_path		156345	1					
ANR	156428	Argument	font_file_path		156345	0					
ANR	156429	Identifier	font_file_path		156345	0					
ANR	156430	IfStatement	"if ( strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 ) != 0 )"		156345	1					
ANR	156431	Condition	"strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 ) != 0"	932:12:29450:29503	156345	0	True				
ANR	156432	EqualityExpression	"strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 ) != 0"		156345	0		!=			
ANR	156433	CallExpression	"strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 )"		156345	0					
ANR	156434	Callee	strncasecmp		156345	0					
ANR	156435	Identifier	strncasecmp		156345	0					
ANR	156436	ArgumentList	font_file_path + sind - 4		156345	1					
ANR	156437	Argument	font_file_path + sind - 4		156345	0					
ANR	156438	AdditiveExpression	font_file_path + sind - 4		156345	0		+			
ANR	156439	Identifier	font_file_path		156345	0					
ANR	156440	AdditiveExpression	sind - 4		156345	1		-			
ANR	156441	Identifier	sind		156345	0					
ANR	156442	PrimaryExpression	4		156345	1					
ANR	156443	Argument	""".fco"""		156345	1					
ANR	156444	PrimaryExpression	""".fco"""		156345	0					
ANR	156445	Argument	4		156345	2					
ANR	156446	PrimaryExpression	4		156345	0					
ANR	156447	PrimaryExpression	0		156345	1					
ANR	156448	CompoundStatement		48:68:1757:1757	156345	1					
ANR	156449	ReturnStatement	return ( gs_error_invalidaccess ) ;	933:12:29520:29551	156345	0	True				
ANR	156450	Identifier	gs_error_invalidaccess		156345	0					
ANR	156451	ExpressionStatement	area_length += strlen ( font_file_path ) + 1	935:8:29571:29612	156345	2	True				
ANR	156452	AssignmentExpression	area_length += strlen ( font_file_path ) + 1		156345	0		+=			
ANR	156453	Identifier	area_length		156345	0					
ANR	156454	AdditiveExpression	strlen ( font_file_path ) + 1		156345	1		+			
ANR	156455	CallExpression	strlen ( font_file_path )		156345	0					
ANR	156456	Callee	strlen		156345	0					
ANR	156457	Identifier	strlen		156345	0					
ANR	156458	ArgumentList	font_file_path		156345	1					
ANR	156459	Argument	font_file_path		156345	0					
ANR	156460	Identifier	font_file_path		156345	0					
ANR	156461	PrimaryExpression	1		156345	1					
ANR	156462	ExpressionStatement	"buf = gs_malloc ( r -> mem , area_length , 1 , ""ufst font data"" )"	937:4:29624:29681	156345	10	True				
ANR	156463	AssignmentExpression	"buf = gs_malloc ( r -> mem , area_length , 1 , ""ufst font data"" )"		156345	0		=			
ANR	156464	Identifier	buf		156345	0					
ANR	156465	CallExpression	"gs_malloc ( r -> mem , area_length , 1 , ""ufst font data"" )"		156345	1					
ANR	156466	Callee	gs_malloc		156345	0					
ANR	156467	Identifier	gs_malloc		156345	0					
ANR	156468	ArgumentList	r -> mem		156345	1					
ANR	156469	Argument	r -> mem		156345	0					
ANR	156470	PtrMemberAccess	r -> mem		156345	0					
ANR	156471	Identifier	r		156345	0					
ANR	156472	Identifier	mem		156345	1					
ANR	156473	Argument	area_length		156345	1					
ANR	156474	Identifier	area_length		156345	0					
ANR	156475	Argument	1		156345	2					
ANR	156476	PrimaryExpression	1		156345	0					
ANR	156477	Argument	"""ufst font data"""		156345	3					
ANR	156478	PrimaryExpression	"""ufst font data"""		156345	0					
ANR	156479	IfStatement	if ( buf == 0 )		156345	11					
ANR	156480	Condition	buf == 0	938:8:29691:29698	156345	0	True				
ANR	156481	EqualityExpression	buf == 0		156345	0		==			
ANR	156482	Identifier	buf		156345	0					
ANR	156483	PrimaryExpression	0		156345	1					
ANR	156484	ExpressionStatement	return_error ( gs_error_VMerror )	939:8:29709:29739	156345	1	True				
ANR	156485	CallExpression	return_error ( gs_error_VMerror )		156345	0					
ANR	156486	Callee	return_error		156345	0					
ANR	156487	Identifier	return_error		156345	0					
ANR	156488	ArgumentList	gs_error_VMerror		156345	1					
ANR	156489	Argument	gs_error_VMerror		156345	0					
ANR	156490	Identifier	gs_error_VMerror		156345	0					
ANR	156491	ExpressionStatement	"memset ( buf , 0x00 , area_length )"	941:4:29746:29776	156345	12	True				
ANR	156492	CallExpression	"memset ( buf , 0x00 , area_length )"		156345	0					
ANR	156493	Callee	memset		156345	0					
ANR	156494	Identifier	memset		156345	0					
ANR	156495	ArgumentList	buf		156345	1					
ANR	156496	Argument	buf		156345	0					
ANR	156497	Identifier	buf		156345	0					
ANR	156498	Argument	0x00		156345	1					
ANR	156499	PrimaryExpression	0x00		156345	0					
ANR	156500	Argument	area_length		156345	2					
ANR	156501	Identifier	area_length		156345	0					
ANR	156502	ExpressionStatement	d = ( ufst_common_font_data * ) buf	943:4:29783:29816	156345	13	True				
ANR	156503	AssignmentExpression	d = ( ufst_common_font_data * ) buf		156345	0		=			
ANR	156504	Identifier	d		156345	0					
ANR	156505	CastExpression	( ufst_common_font_data * ) buf		156345	1					
ANR	156506	CastTarget	ufst_common_font_data *		156345	0					
ANR	156507	Identifier	buf		156345	1					
ANR	156508	ExpressionStatement	d -> tt_font_body_offset = 0	944:4:29822:29848	156345	14	True				
ANR	156509	AssignmentExpression	d -> tt_font_body_offset = 0		156345	0		=			
ANR	156510	PtrMemberAccess	d -> tt_font_body_offset		156345	0					
ANR	156511	Identifier	d		156345	0					
ANR	156512	Identifier	tt_font_body_offset		156345	1					
ANR	156513	PrimaryExpression	0		156345	1					
ANR	156514	ExpressionStatement	d -> platformId = 0	945:4:29854:29871	156345	15	True				
ANR	156515	AssignmentExpression	d -> platformId = 0		156345	0		=			
ANR	156516	PtrMemberAccess	d -> platformId		156345	0					
ANR	156517	Identifier	d		156345	0					
ANR	156518	Identifier	platformId		156345	1					
ANR	156519	PrimaryExpression	0		156345	1					
ANR	156520	ExpressionStatement	d -> specificId = 0	946:4:29877:29894	156345	16	True				
ANR	156521	AssignmentExpression	d -> specificId = 0		156345	0		=			
ANR	156522	PtrMemberAccess	d -> specificId		156345	0					
ANR	156523	Identifier	d		156345	0					
ANR	156524	Identifier	specificId		156345	1					
ANR	156525	PrimaryExpression	0		156345	1					
ANR	156526	ExpressionStatement	d -> decodingID [ 0 ] = 0	947:4:29900:29920	156345	17	True				
ANR	156527	AssignmentExpression	d -> decodingID [ 0 ] = 0		156345	0		=			
ANR	156528	ArrayIndexing	d -> decodingID [ 0 ]		156345	0					
ANR	156529	PtrMemberAccess	d -> decodingID		156345	0					
ANR	156530	Identifier	d		156345	0					
ANR	156531	Identifier	decodingID		156345	1					
ANR	156532	PrimaryExpression	0		156345	1					
ANR	156533	PrimaryExpression	0		156345	1					
ANR	156534	ExpressionStatement	d -> glyphs = 0	948:4:29926:29939	156345	18	True				
ANR	156535	AssignmentExpression	d -> glyphs = 0		156345	0		=			
ANR	156536	PtrMemberAccess	d -> glyphs		156345	0					
ANR	156537	Identifier	d		156345	0					
ANR	156538	Identifier	glyphs		156345	1					
ANR	156539	PrimaryExpression	0		156345	1					
ANR	156540	ExpressionStatement	d -> is_disk_font = ( ff -> font_file_path != NULL )	949:4:29945:29991	156345	19	True				
ANR	156541	AssignmentExpression	d -> is_disk_font = ( ff -> font_file_path != NULL )		156345	0		=			
ANR	156542	PtrMemberAccess	d -> is_disk_font		156345	0					
ANR	156543	Identifier	d		156345	0					
ANR	156544	Identifier	is_disk_font		156345	1					
ANR	156545	EqualityExpression	ff -> font_file_path != NULL		156345	1		!=			
ANR	156546	PtrMemberAccess	ff -> font_file_path		156345	0					
ANR	156547	Identifier	ff		156345	0					
ANR	156548	Identifier	font_file_path		156345	1					
ANR	156549	Identifier	NULL		156345	1					
ANR	156550	ExpressionStatement	d -> ufstfontinfo = NULL	950:4:29997:30019	156345	20	True				
ANR	156551	AssignmentExpression	d -> ufstfontinfo = NULL		156345	0		=			
ANR	156552	PtrMemberAccess	d -> ufstfontinfo		156345	0					
ANR	156553	Identifier	d		156345	0					
ANR	156554	Identifier	ufstfontinfo		156345	1					
ANR	156555	Identifier	NULL		156345	1					
ANR	156556	ExpressionStatement	d -> ufstfontinfosize = 0	951:4:30025:30048	156345	21	True				
ANR	156557	AssignmentExpression	d -> ufstfontinfosize = 0		156345	0		=			
ANR	156558	PtrMemberAccess	d -> ufstfontinfosize		156345	0					
ANR	156559	Identifier	d		156345	0					
ANR	156560	Identifier	ufstfontinfosize		156345	1					
ANR	156561	PrimaryExpression	0		156345	1					
ANR	156562	IfStatement	if ( d -> is_disk_font )		156345	22					
ANR	156563	Condition	d -> is_disk_font	953:8:30059:30073	156345	0	True				
ANR	156564	PtrMemberAccess	d -> is_disk_font		156345	0					
ANR	156565	Identifier	d		156345	0					
ANR	156566	Identifier	is_disk_font		156345	1					
ANR	156567	CompoundStatement		70:8:2337:2395	156345	1					
ANR	156568	IdentifierDeclStatement	fco_list_elem * e = gx_UFST_find_static_fco ( font_file_path ) ;	954:8:30086:30144	156345	0	True				
ANR	156569	IdentifierDecl	* e = gx_UFST_find_static_fco ( font_file_path )		156345	0					
ANR	156570	IdentifierDeclType	fco_list_elem *		156345	0					
ANR	156571	Identifier	e		156345	1					
ANR	156572	AssignmentExpression	* e = gx_UFST_find_static_fco ( font_file_path )		156345	2		=			
ANR	156573	Identifier	e		156345	0					
ANR	156574	CallExpression	gx_UFST_find_static_fco ( font_file_path )		156345	1					
ANR	156575	Callee	gx_UFST_find_static_fco		156345	0					
ANR	156576	Identifier	gx_UFST_find_static_fco		156345	0					
ANR	156577	ArgumentList	font_file_path		156345	1					
ANR	156578	Argument	font_file_path		156345	0					
ANR	156579	Identifier	font_file_path		156345	0					
ANR	156580	IfStatement	if ( e != NULL )		156345	1					
ANR	156581	Condition	e != NULL	956:12:30159:30167	156345	0	True				
ANR	156582	EqualityExpression	e != NULL		156345	0		!=			
ANR	156583	Identifier	e		156345	0					
ANR	156584	Identifier	NULL		156345	1					
ANR	156585	CompoundStatement		72:23:2421:2421	156345	1					
ANR	156586	ExpressionStatement	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"	957:12:30184:30241	156345	0	True				
ANR	156587	CallExpression	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"		156345	0					
ANR	156588	Callee	memcpy		156345	0					
ANR	156589	Identifier	memcpy		156345	0					
ANR	156590	ArgumentList	d + 1		156345	1					
ANR	156591	Argument	d + 1		156345	0					
ANR	156592	AdditiveExpression	d + 1		156345	0		+			
ANR	156593	Identifier	d		156345	0					
ANR	156594	PrimaryExpression	1		156345	1					
ANR	156595	Argument	font_file_path		156345	1					
ANR	156596	Identifier	font_file_path		156345	0					
ANR	156597	Argument	strlen ( font_file_path ) + 1		156345	2					
ANR	156598	AdditiveExpression	strlen ( font_file_path ) + 1		156345	0		+			
ANR	156599	CallExpression	strlen ( font_file_path )		156345	0					
ANR	156600	Callee	strlen		156345	0					
ANR	156601	Identifier	strlen		156345	0					
ANR	156602	ArgumentList	font_file_path		156345	1					
ANR	156603	Argument	font_file_path		156345	0					
ANR	156604	Identifier	font_file_path		156345	0					
ANR	156605	PrimaryExpression	1		156345	1					
ANR	156606	ExpressionStatement	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont	958:12:30255:30301	156345	1	True				
ANR	156607	AssignmentExpression	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont		156345	0		=			
ANR	156608	PtrMemberAccess	d -> font_id		156345	0					
ANR	156609	Identifier	d		156345	0					
ANR	156610	Identifier	font_id		156345	1					
ANR	156611	InclusiveOrExpression	( e -> fcHandle << 16 ) | ff -> subfont		156345	1		|			
ANR	156612	ShiftExpression	e -> fcHandle << 16		156345	0		<<			
ANR	156613	PtrMemberAccess	e -> fcHandle		156345	0					
ANR	156614	Identifier	e		156345	0					
ANR	156615	Identifier	fcHandle		156345	1					
ANR	156616	PrimaryExpression	16		156345	1					
ANR	156617	PtrMemberAccess	ff -> subfont		156345	1					
ANR	156618	Identifier	ff		156345	0					
ANR	156619	Identifier	subfont		156345	1					
ANR	156620	ExpressionStatement	d -> font_type = FC_FCO_TYPE	959:12:30315:30341	156345	2	True				
ANR	156621	AssignmentExpression	d -> font_type = FC_FCO_TYPE		156345	0		=			
ANR	156622	PtrMemberAccess	d -> font_type		156345	0					
ANR	156623	Identifier	d		156345	0					
ANR	156624	Identifier	font_type		156345	1					
ANR	156625	Identifier	FC_FCO_TYPE		156345	1					
ANR	156626	ElseStatement	else		156345	0					
ANR	156627	CompoundStatement		78:12:2631:2678	156345	0					
ANR	156628	IdentifierDeclStatement	"stream * f = sfopen ( font_file_path , ""r"" , r -> mem ) ;"	962:12:30380:30427	156345	0	True				
ANR	156629	IdentifierDecl	"* f = sfopen ( font_file_path , ""r"" , r -> mem )"		156345	0					
ANR	156630	IdentifierDeclType	stream *		156345	0					
ANR	156631	Identifier	f		156345	1					
ANR	156632	AssignmentExpression	"* f = sfopen ( font_file_path , ""r"" , r -> mem )"		156345	2		=			
ANR	156633	Identifier	f		156345	0					
ANR	156634	CallExpression	"sfopen ( font_file_path , ""r"" , r -> mem )"		156345	1					
ANR	156635	Callee	sfopen		156345	0					
ANR	156636	Identifier	sfopen		156345	0					
ANR	156637	ArgumentList	font_file_path		156345	1					
ANR	156638	Argument	font_file_path		156345	0					
ANR	156639	Identifier	font_file_path		156345	0					
ANR	156640	Argument	"""r"""		156345	1					
ANR	156641	PrimaryExpression	"""r"""		156345	0					
ANR	156642	Argument	r -> mem		156345	2					
ANR	156643	PtrMemberAccess	r -> mem		156345	0					
ANR	156644	Identifier	r		156345	0					
ANR	156645	Identifier	mem		156345	1					
ANR	156646	IfStatement	if ( f == NULL )		156345	1					
ANR	156647	Condition	f == NULL	964:16:30446:30454	156345	0	True				
ANR	156648	EqualityExpression	f == NULL		156345	0		==			
ANR	156649	Identifier	f		156345	0					
ANR	156650	Identifier	NULL		156345	1					
ANR	156651	CompoundStatement		80:27:2708:2708	156345	1					
ANR	156652	ExpressionStatement	"ufst_emprintf1 ( r -> mem , ""fapiufst: Can't open %s\\n"" , font_file_path )"	965:16:30475:30568	156345	0	True				
ANR	156653	CallExpression	"ufst_emprintf1 ( r -> mem , ""fapiufst: Can't open %s\\n"" , font_file_path )"		156345	0					
ANR	156654	Callee	ufst_emprintf1		156345	0					
ANR	156655	Identifier	ufst_emprintf1		156345	0					
ANR	156656	ArgumentList	r -> mem		156345	1					
ANR	156657	Argument	r -> mem		156345	0					
ANR	156658	PtrMemberAccess	r -> mem		156345	0					
ANR	156659	Identifier	r		156345	0					
ANR	156660	Identifier	mem		156345	1					
ANR	156661	Argument	"""fapiufst: Can't open %s\\n"""		156345	1					
ANR	156662	PrimaryExpression	"""fapiufst: Can't open %s\\n"""		156345	0					
ANR	156663	Argument	font_file_path		156345	2					
ANR	156664	Identifier	font_file_path		156345	0					
ANR	156665	ExpressionStatement	return_error ( gs_error_undefinedfilename )	967:16:30586:30626	156345	1	True				
ANR	156666	CallExpression	return_error ( gs_error_undefinedfilename )		156345	0					
ANR	156667	Callee	return_error		156345	0					
ANR	156668	Identifier	return_error		156345	0					
ANR	156669	ArgumentList	gs_error_undefinedfilename		156345	1					
ANR	156670	Argument	gs_error_undefinedfilename		156345	0					
ANR	156671	Identifier	gs_error_undefinedfilename		156345	0					
ANR	156672	ExpressionStatement	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"	969:12:30654:30711	156345	2	True				
ANR	156673	CallExpression	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"		156345	0					
ANR	156674	Callee	memcpy		156345	0					
ANR	156675	Identifier	memcpy		156345	0					
ANR	156676	ArgumentList	d + 1		156345	1					
ANR	156677	Argument	d + 1		156345	0					
ANR	156678	AdditiveExpression	d + 1		156345	0		+			
ANR	156679	Identifier	d		156345	0					
ANR	156680	PrimaryExpression	1		156345	1					
ANR	156681	Argument	font_file_path		156345	1					
ANR	156682	Identifier	font_file_path		156345	0					
ANR	156683	Argument	strlen ( font_file_path ) + 1		156345	2					
ANR	156684	AdditiveExpression	strlen ( font_file_path ) + 1		156345	0		+			
ANR	156685	CallExpression	strlen ( font_file_path )		156345	0					
ANR	156686	Callee	strlen		156345	0					
ANR	156687	Identifier	strlen		156345	0					
ANR	156688	ArgumentList	font_file_path		156345	1					
ANR	156689	Argument	font_file_path		156345	0					
ANR	156690	Identifier	font_file_path		156345	0					
ANR	156691	PrimaryExpression	1		156345	1					
ANR	156692	ExpressionStatement	d -> font_type = get_font_type ( f )	970:12:30725:30756	156345	3	True				
ANR	156693	AssignmentExpression	d -> font_type = get_font_type ( f )		156345	0		=			
ANR	156694	PtrMemberAccess	d -> font_type		156345	0					
ANR	156695	Identifier	d		156345	0					
ANR	156696	Identifier	font_type		156345	1					
ANR	156697	CallExpression	get_font_type ( f )		156345	1					
ANR	156698	Callee	get_font_type		156345	0					
ANR	156699	Identifier	get_font_type		156345	0					
ANR	156700	ArgumentList	f		156345	1					
ANR	156701	Argument	f		156345	0					
ANR	156702	Identifier	f		156345	0					
ANR	156703	ExpressionStatement	sfclose ( f )	971:12:30770:30780	156345	4	True				
ANR	156704	CallExpression	sfclose ( f )		156345	0					
ANR	156705	Callee	sfclose		156345	0					
ANR	156706	Identifier	sfclose		156345	0					
ANR	156707	ArgumentList	f		156345	1					
ANR	156708	Argument	f		156345	0					
ANR	156709	Identifier	f		156345	0					
ANR	156710	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		156345	5					
ANR	156711	Condition	d -> font_type == FC_FCO_TYPE	972:16:30798:30824	156345	0	True				
ANR	156712	EqualityExpression	d -> font_type == FC_FCO_TYPE		156345	0		==			
ANR	156713	PtrMemberAccess	d -> font_type		156345	0					
ANR	156714	Identifier	d		156345	0					
ANR	156715	Identifier	font_type		156345	1					
ANR	156716	Identifier	FC_FCO_TYPE		156345	1					
ANR	156717	CompoundStatement		89:16:3096:3112	156345	1					
ANR	156718	IdentifierDeclStatement	fco_list_elem * e ;	973:16:30845:30861	156345	0	True				
ANR	156719	IdentifierDecl	* e		156345	0					
ANR	156720	IdentifierDeclType	fco_list_elem *		156345	0					
ANR	156721	Identifier	e		156345	1					
ANR	156722	IfStatement	"if ( ( code = fco_open ( r , font_file_path , & e ) ) != 0 )"		156345	1					
ANR	156723	Condition	"( code = fco_open ( r , font_file_path , & e ) ) != 0"	975:20:30884:30928	156345	0	True				
ANR	156724	EqualityExpression	"( code = fco_open ( r , font_file_path , & e ) ) != 0"		156345	0		!=			
ANR	156725	AssignmentExpression	"code = fco_open ( r , font_file_path , & e )"		156345	0		=			
ANR	156726	Identifier	code		156345	0					
ANR	156727	CallExpression	"fco_open ( r , font_file_path , & e )"		156345	1					
ANR	156728	Callee	fco_open		156345	0					
ANR	156729	Identifier	fco_open		156345	0					
ANR	156730	ArgumentList	r		156345	1					
ANR	156731	Argument	r		156345	0					
ANR	156732	Identifier	r		156345	0					
ANR	156733	Argument	font_file_path		156345	1					
ANR	156734	Identifier	font_file_path		156345	0					
ANR	156735	Argument	& e		156345	2					
ANR	156736	UnaryOperationExpression	& e		156345	0					
ANR	156737	UnaryOperator	&		156345	0					
ANR	156738	Identifier	e		156345	1					
ANR	156739	PrimaryExpression	0		156345	1					
ANR	156740	ReturnStatement	return code ;	976:20:30951:30962	156345	1	True				
ANR	156741	Identifier	code		156345	0					
ANR	156742	ExpressionStatement	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont	977:16:30980:31026	156345	2	True				
ANR	156743	AssignmentExpression	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont		156345	0		=			
ANR	156744	PtrMemberAccess	d -> font_id		156345	0					
ANR	156745	Identifier	d		156345	0					
ANR	156746	Identifier	font_id		156345	1					
ANR	156747	InclusiveOrExpression	( e -> fcHandle << 16 ) | ff -> subfont		156345	1		|			
ANR	156748	ShiftExpression	e -> fcHandle << 16		156345	0		<<			
ANR	156749	PtrMemberAccess	e -> fcHandle		156345	0					
ANR	156750	Identifier	e		156345	0					
ANR	156751	Identifier	fcHandle		156345	1					
ANR	156752	PrimaryExpression	16		156345	1					
ANR	156753	PtrMemberAccess	ff -> subfont		156345	1					
ANR	156754	Identifier	ff		156345	0					
ANR	156755	Identifier	subfont		156345	1					
ANR	156756	ElseStatement	else		156345	0					
ANR	156757	CompoundStatement		97:9:3318:3318	156345	0					
ANR	156758	ExpressionStatement	d -> font_type = ( ff -> is_type1 ? FC_PST1_TYPE : FC_TT_TYPE )	982:8:31077:31134	156345	0	True				
ANR	156759	AssignmentExpression	d -> font_type = ( ff -> is_type1 ? FC_PST1_TYPE : FC_TT_TYPE )		156345	0		=			
ANR	156760	PtrMemberAccess	d -> font_type		156345	0					
ANR	156761	Identifier	d		156345	0					
ANR	156762	Identifier	font_type		156345	1					
ANR	156763	ConditionalExpression	ff -> is_type1 ? FC_PST1_TYPE : FC_TT_TYPE		156345	1					
ANR	156764	Condition	ff -> is_type1		156345	0					
ANR	156765	PtrMemberAccess	ff -> is_type1		156345	0					
ANR	156766	Identifier	ff		156345	0					
ANR	156767	Identifier	is_type1		156345	1					
ANR	156768	Identifier	FC_PST1_TYPE		156345	1					
ANR	156769	Identifier	FC_TT_TYPE		156345	2					
ANR	156770	ExpressionStatement	"d -> font_id = ff -> get_long ( ff , gs_fapi_font_feature_UniqueID , 0 )"	983:8:31144:31207	156345	1	True				
ANR	156771	AssignmentExpression	"d -> font_id = ff -> get_long ( ff , gs_fapi_font_feature_UniqueID , 0 )"		156345	0		=			
ANR	156772	PtrMemberAccess	d -> font_id		156345	0					
ANR	156773	Identifier	d		156345	0					
ANR	156774	Identifier	font_id		156345	1					
ANR	156775	CallExpression	"ff -> get_long ( ff , gs_fapi_font_feature_UniqueID , 0 )"		156345	1					
ANR	156776	Callee	ff -> get_long		156345	0					
ANR	156777	PtrMemberAccess	ff -> get_long		156345	0					
ANR	156778	Identifier	ff		156345	0					
ANR	156779	Identifier	get_long		156345	1					
ANR	156780	ArgumentList	ff		156345	1					
ANR	156781	Argument	ff		156345	0					
ANR	156782	Identifier	ff		156345	0					
ANR	156783	Argument	gs_fapi_font_feature_UniqueID		156345	1					
ANR	156784	Identifier	gs_fapi_font_feature_UniqueID		156345	0					
ANR	156785	Argument	0		156345	2					
ANR	156786	PrimaryExpression	0		156345	0					
ANR	156787	IfStatement	if ( d -> font_id < 0 )		156345	2					
ANR	156788	Condition	d -> font_id < 0	984:12:31221:31234	156345	0	True				
ANR	156789	RelationalExpression	d -> font_id < 0		156345	0		<			
ANR	156790	PtrMemberAccess	d -> font_id		156345	0					
ANR	156791	Identifier	d		156345	0					
ANR	156792	Identifier	font_id		156345	1					
ANR	156793	PrimaryExpression	0		156345	1					
ANR	156794	CompoundStatement		100:28:3488:3488	156345	1					
ANR	156795	ExpressionStatement	d -> font_id = assign_font_id ( )	985:12:31251:31280	156345	0	True				
ANR	156796	AssignmentExpression	d -> font_id = assign_font_id ( )		156345	0		=			
ANR	156797	PtrMemberAccess	d -> font_id		156345	0					
ANR	156798	Identifier	d		156345	0					
ANR	156799	Identifier	font_id		156345	1					
ANR	156800	CallExpression	assign_font_id ( )		156345	1					
ANR	156801	Callee	assign_font_id		156345	0					
ANR	156802	Identifier	assign_font_id		156345	0					
ANR	156803	ArgumentList			156345	1					
ANR	156804	ExpressionStatement	h = ( PCLETTO_FHDR * ) ( buf + sizeof ( ufst_common_font_data ) )	987:8:31300:31358	156345	3	True				
ANR	156805	AssignmentExpression	h = ( PCLETTO_FHDR * ) ( buf + sizeof ( ufst_common_font_data ) )		156345	0		=			
ANR	156806	Identifier	h		156345	0					
ANR	156807	CastExpression	( PCLETTO_FHDR * ) ( buf + sizeof ( ufst_common_font_data ) )		156345	1					
ANR	156808	CastTarget	PCLETTO_FHDR *		156345	0					
ANR	156809	AdditiveExpression	buf + sizeof ( ufst_common_font_data )		156345	1		+			
ANR	156810	Identifier	buf		156345	0					
ANR	156811	SizeofExpression	sizeof ( ufst_common_font_data )		156345	1					
ANR	156812	Sizeof	sizeof		156345	0					
ANR	156813	SizeofOperand	ufst_common_font_data		156345	1					
ANR	156814	IfStatement	if ( ff -> is_type1 )		156345	4					
ANR	156815	Condition	ff -> is_type1	989:12:31373:31384	156345	0	True				
ANR	156816	PtrMemberAccess	ff -> is_type1		156345	0					
ANR	156817	Identifier	ff		156345	0					
ANR	156818	Identifier	is_type1		156345	1					
ANR	156819	CompoundStatement		105:26:3638:3638	156345	1					
ANR	156820	ExpressionStatement	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE	990:12:31401:31443	156345	0	True				
ANR	156821	AssignmentExpression	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE		156345	0		=			
ANR	156822	PtrMemberAccess	h -> fontDescriptorSize		156345	0					
ANR	156823	Identifier	h		156345	0					
ANR	156824	Identifier	fontDescriptorSize		156345	1					
ANR	156825	Identifier	PCLETTOFONTHDRSIZE		156345	1					
ANR	156826	ElseStatement	else		156345	0					
ANR	156827	CompoundStatement		108:13:3719:3719	156345	0					
ANR	156828	ExpressionStatement	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE	993:12:31482:31524	156345	0	True				
ANR	156829	AssignmentExpression	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE		156345	0		=			
ANR	156830	PtrMemberAccess	h -> fontDescriptorSize		156345	0					
ANR	156831	Identifier	h		156345	0					
ANR	156832	Identifier	fontDescriptorSize		156345	1					
ANR	156833	Identifier	PCLETTOFONTHDRSIZE		156345	1					
ANR	156834	IfStatement	if ( d -> font_type == FC_TT_TYPE && ! use_XL_format )		156345	5					
ANR	156835	Condition	d -> font_type == FC_TT_TYPE && ! use_XL_format	996:12:31549:31592	156345	0	True				
ANR	156836	AndExpression	d -> font_type == FC_TT_TYPE && ! use_XL_format		156345	0		&&			
ANR	156837	EqualityExpression	d -> font_type == FC_TT_TYPE		156345	0		==			
ANR	156838	PtrMemberAccess	d -> font_type		156345	0					
ANR	156839	Identifier	d		156345	0					
ANR	156840	Identifier	font_type		156345	1					
ANR	156841	Identifier	FC_TT_TYPE		156345	1					
ANR	156842	UnaryOperationExpression	! use_XL_format		156345	1					
ANR	156843	UnaryOperator	!		156345	0					
ANR	156844	Identifier	use_XL_format		156345	1					
ANR	156845	ExpressionStatement	h -> descriptorFormat = 16	997:12:31607:31631	156345	1	True				
ANR	156846	AssignmentExpression	h -> descriptorFormat = 16		156345	0		=			
ANR	156847	PtrMemberAccess	h -> descriptorFormat		156345	0					
ANR	156848	Identifier	h		156345	0					
ANR	156849	Identifier	descriptorFormat		156345	1					
ANR	156850	PrimaryExpression	16		156345	1					
ANR	156851	ElseStatement	else		156345	0					
ANR	156852	ExpressionStatement	h -> descriptorFormat = 15	999:12:31658:31682	156345	0	True				
ANR	156853	AssignmentExpression	h -> descriptorFormat = 15		156345	0		=			
ANR	156854	PtrMemberAccess	h -> descriptorFormat		156345	0					
ANR	156855	Identifier	h		156345	0					
ANR	156856	Identifier	descriptorFormat		156345	1					
ANR	156857	PrimaryExpression	15		156345	1					
ANR	156858	ExpressionStatement	h -> fontType = 11	1000:8:31692:31708	156345	6	True				
ANR	156859	AssignmentExpression	h -> fontType = 11		156345	0		=			
ANR	156860	PtrMemberAccess	h -> fontType		156345	0					
ANR	156861	Identifier	h		156345	0					
ANR	156862	Identifier	fontType		156345	1					
ANR	156863	PrimaryExpression	11		156345	1					
ANR	156864	ExpressionStatement	h -> style_msb = 0	1001:8:31777:31793	156345	7	True				
ANR	156865	AssignmentExpression	h -> style_msb = 0		156345	0		=			
ANR	156866	PtrMemberAccess	h -> style_msb		156345	0					
ANR	156867	Identifier	h		156345	0					
ANR	156868	Identifier	style_msb		156345	1					
ANR	156869	PrimaryExpression	0		156345	1					
ANR	156870	ExpressionStatement	h -> reserved1 = 0	1002:8:31863:31879	156345	8	True				
ANR	156871	AssignmentExpression	h -> reserved1 = 0		156345	0		=			
ANR	156872	PtrMemberAccess	h -> reserved1		156345	0					
ANR	156873	Identifier	h		156345	0					
ANR	156874	Identifier	reserved1		156345	1					
ANR	156875	PrimaryExpression	0		156345	1					
ANR	156876	ExpressionStatement	h -> baselinePosition = 0	1003:8:31889:31912	156345	9	True				
ANR	156877	AssignmentExpression	h -> baselinePosition = 0		156345	0		=			
ANR	156878	PtrMemberAccess	h -> baselinePosition		156345	0					
ANR	156879	Identifier	h		156345	0					
ANR	156880	Identifier	baselinePosition		156345	1					
ANR	156881	PrimaryExpression	0		156345	1					
ANR	156882	ExpressionStatement	h -> cellWidth = 1024	1004:8:31982:32001	156345	10	True				
ANR	156883	AssignmentExpression	h -> cellWidth = 1024		156345	0		=			
ANR	156884	PtrMemberAccess	h -> cellWidth		156345	0					
ANR	156885	Identifier	h		156345	0					
ANR	156886	Identifier	cellWidth		156345	1					
ANR	156887	PrimaryExpression	1024		156345	1					
ANR	156888	ExpressionStatement	h -> cellHeight = 1024	1005:8:32057:32077	156345	11	True				
ANR	156889	AssignmentExpression	h -> cellHeight = 1024		156345	0		=			
ANR	156890	PtrMemberAccess	h -> cellHeight		156345	0					
ANR	156891	Identifier	h		156345	0					
ANR	156892	Identifier	cellHeight		156345	1					
ANR	156893	PrimaryExpression	1024		156345	1					
ANR	156894	ExpressionStatement	h -> orientation = 0	1006:8:32132:32150	156345	12	True				
ANR	156895	AssignmentExpression	h -> orientation = 0		156345	0		=			
ANR	156896	PtrMemberAccess	h -> orientation		156345	0					
ANR	156897	Identifier	h		156345	0					
ANR	156898	Identifier	orientation		156345	1					
ANR	156899	PrimaryExpression	0		156345	1					
ANR	156900	ExpressionStatement	h -> spacing = 1	1007:8:32176:32190	156345	13	True				
ANR	156901	AssignmentExpression	h -> spacing = 1		156345	0		=			
ANR	156902	PtrMemberAccess	h -> spacing		156345	0					
ANR	156903	Identifier	h		156345	0					
ANR	156904	Identifier	spacing		156345	1					
ANR	156905	PrimaryExpression	1		156345	1					
ANR	156906	ExpressionStatement	h -> characterSet = 56	1008:8:32259:32279	156345	14	True				
ANR	156907	AssignmentExpression	h -> characterSet = 56		156345	0		=			
ANR	156908	PtrMemberAccess	h -> characterSet		156345	0					
ANR	156909	Identifier	h		156345	0					
ANR	156910	Identifier	characterSet		156345	1					
ANR	156911	PrimaryExpression	56		156345	1					
ANR	156912	ExpressionStatement	h -> pitch = 1024	1009:8:32348:32363	156345	15	True				
ANR	156913	AssignmentExpression	h -> pitch = 1024		156345	0		=			
ANR	156914	PtrMemberAccess	h -> pitch		156345	0					
ANR	156915	Identifier	h		156345	0					
ANR	156916	Identifier	pitch		156345	1					
ANR	156917	PrimaryExpression	1024		156345	1					
ANR	156918	ExpressionStatement	h -> height = 0	1010:8:32406:32419	156345	16	True				
ANR	156919	AssignmentExpression	h -> height = 0		156345	0		=			
ANR	156920	PtrMemberAccess	h -> height		156345	0					
ANR	156921	Identifier	h		156345	0					
ANR	156922	Identifier	height		156345	1					
ANR	156923	PrimaryExpression	0		156345	1					
ANR	156924	ExpressionStatement	h -> xHeight = 512	1011:8:32462:32478	156345	17	True				
ANR	156925	AssignmentExpression	h -> xHeight = 512		156345	0		=			
ANR	156926	PtrMemberAccess	h -> xHeight		156345	0					
ANR	156927	Identifier	h		156345	0					
ANR	156928	Identifier	xHeight		156345	1					
ANR	156929	PrimaryExpression	512		156345	1					
ANR	156930	ExpressionStatement	h -> widthType = 0	1012:8:32520:32536	156345	18	True				
ANR	156931	AssignmentExpression	h -> widthType = 0		156345	0		=			
ANR	156932	PtrMemberAccess	h -> widthType		156345	0					
ANR	156933	Identifier	h		156345	0					
ANR	156934	Identifier	widthType		156345	1					
ANR	156935	PrimaryExpression	0		156345	1					
ANR	156936	ExpressionStatement	h -> style_lsb = 0	1013:8:32578:32594	156345	19	True				
ANR	156937	AssignmentExpression	h -> style_lsb = 0		156345	0		=			
ANR	156938	PtrMemberAccess	h -> style_lsb		156345	0					
ANR	156939	Identifier	h		156345	0					
ANR	156940	Identifier	style_lsb		156345	1					
ANR	156941	PrimaryExpression	0		156345	1					
ANR	156942	ExpressionStatement	h -> strokeWeight = 0	1014:8:32636:32655	156345	20	True				
ANR	156943	AssignmentExpression	h -> strokeWeight = 0		156345	0		=			
ANR	156944	PtrMemberAccess	h -> strokeWeight		156345	0					
ANR	156945	Identifier	h		156345	0					
ANR	156946	Identifier	strokeWeight		156345	1					
ANR	156947	PrimaryExpression	0		156345	1					
ANR	156948	ExpressionStatement	h -> typeface_lsb = 0	1015:8:32694:32713	156345	21	True				
ANR	156949	AssignmentExpression	h -> typeface_lsb = 0		156345	0		=			
ANR	156950	PtrMemberAccess	h -> typeface_lsb		156345	0					
ANR	156951	Identifier	h		156345	0					
ANR	156952	Identifier	typeface_lsb		156345	1					
ANR	156953	PrimaryExpression	0		156345	1					
ANR	156954	ExpressionStatement	h -> typeface_msb = 0	1016:8:32752:32771	156345	22	True				
ANR	156955	AssignmentExpression	h -> typeface_msb = 0		156345	0		=			
ANR	156956	PtrMemberAccess	h -> typeface_msb		156345	0					
ANR	156957	Identifier	h		156345	0					
ANR	156958	Identifier	typeface_msb		156345	1					
ANR	156959	PrimaryExpression	0		156345	1					
ANR	156960	ExpressionStatement	h -> serifStyle = 0	1017:8:32810:32827	156345	23	True				
ANR	156961	AssignmentExpression	h -> serifStyle = 0		156345	0		=			
ANR	156962	PtrMemberAccess	h -> serifStyle		156345	0					
ANR	156963	Identifier	h		156345	0					
ANR	156964	Identifier	serifStyle		156345	1					
ANR	156965	PrimaryExpression	0		156345	1					
ANR	156966	ExpressionStatement	h -> quality = 0	1018:8:32868:32882	156345	24	True				
ANR	156967	AssignmentExpression	h -> quality = 0		156345	0		=			
ANR	156968	PtrMemberAccess	h -> quality		156345	0					
ANR	156969	Identifier	h		156345	0					
ANR	156970	Identifier	quality		156345	1					
ANR	156971	PrimaryExpression	0		156345	1					
ANR	156972	ExpressionStatement	h -> placement = 0	1019:8:32935:32951	156345	25	True				
ANR	156973	AssignmentExpression	h -> placement = 0		156345	0		=			
ANR	156974	PtrMemberAccess	h -> placement		156345	0					
ANR	156975	Identifier	h		156345	0					
ANR	156976	Identifier	placement		156345	1					
ANR	156977	PrimaryExpression	0		156345	1					
ANR	156978	ExpressionStatement	h -> underlinePosition = 0	1020:8:33003:33027	156345	26	True				
ANR	156979	AssignmentExpression	h -> underlinePosition = 0		156345	0		=			
ANR	156980	PtrMemberAccess	h -> underlinePosition		156345	0					
ANR	156981	Identifier	h		156345	0					
ANR	156982	Identifier	underlinePosition		156345	1					
ANR	156983	PrimaryExpression	0		156345	1					
ANR	156984	ExpressionStatement	h -> underlineHeight = 0	1021:8:33055:33077	156345	27	True				
ANR	156985	AssignmentExpression	h -> underlineHeight = 0		156345	0		=			
ANR	156986	PtrMemberAccess	h -> underlineHeight		156345	0					
ANR	156987	Identifier	h		156345	0					
ANR	156988	Identifier	underlineHeight		156345	1					
ANR	156989	PrimaryExpression	0		156345	1					
ANR	156990	ExpressionStatement	h -> textHeight = 102	1022:8:33099:33118	156345	28	True				
ANR	156991	AssignmentExpression	h -> textHeight = 102		156345	0		=			
ANR	156992	PtrMemberAccess	h -> textHeight		156345	0					
ANR	156993	Identifier	h		156345	0					
ANR	156994	Identifier	textHeight		156345	1					
ANR	156995	PrimaryExpression	102		156345	1					
ANR	156996	ExpressionStatement	h -> textWidth = 1024	1023:8:33179:33198	156345	29	True				
ANR	156997	AssignmentExpression	h -> textWidth = 1024		156345	0		=			
ANR	156998	PtrMemberAccess	h -> textWidth		156345	0					
ANR	156999	Identifier	h		156345	0					
ANR	157000	Identifier	textWidth		156345	1					
ANR	157001	PrimaryExpression	1024		156345	1					
ANR	157002	ExpressionStatement	h -> firstCode = 0	1024:8:33237:33253	156345	30	True				
ANR	157003	AssignmentExpression	h -> firstCode = 0		156345	0		=			
ANR	157004	PtrMemberAccess	h -> firstCode		156345	0					
ANR	157005	Identifier	h		156345	0					
ANR	157006	Identifier	firstCode		156345	1					
ANR	157007	PrimaryExpression	0		156345	1					
ANR	157008	ExpressionStatement	h -> lastCode = 255	1025:8:33299:33316	156345	31	True				
ANR	157009	AssignmentExpression	h -> lastCode = 255		156345	0		=			
ANR	157010	PtrMemberAccess	h -> lastCode		156345	0					
ANR	157011	Identifier	h		156345	0					
ANR	157012	Identifier	lastCode		156345	1					
ANR	157013	PrimaryExpression	255		156345	1					
ANR	157014	ExpressionStatement	h -> pitch_ext = 0	1026:8:33396:33412	156345	32	True				
ANR	157015	AssignmentExpression	h -> pitch_ext = 0		156345	0		=			
ANR	157016	PtrMemberAccess	h -> pitch_ext		156345	0					
ANR	157017	Identifier	h		156345	0					
ANR	157018	Identifier	pitch_ext		156345	1					
ANR	157019	PrimaryExpression	0		156345	1					
ANR	157020	ExpressionStatement	h -> height_ext = 0	1027:8:33452:33469	156345	33	True				
ANR	157021	AssignmentExpression	h -> height_ext = 0		156345	0		=			
ANR	157022	PtrMemberAccess	h -> height_ext		156345	0					
ANR	157023	Identifier	h		156345	0					
ANR	157024	Identifier	height_ext		156345	1					
ANR	157025	PrimaryExpression	0		156345	1					
ANR	157026	ExpressionStatement	h -> capHeight = 1024	1028:8:33508:33527	156345	34	True				
ANR	157027	AssignmentExpression	h -> capHeight = 1024		156345	0		=			
ANR	157028	PtrMemberAccess	h -> capHeight		156345	0					
ANR	157029	Identifier	h		156345	0					
ANR	157030	Identifier	capHeight		156345	1					
ANR	157031	PrimaryExpression	1024		156345	1					
ANR	157032	ExpressionStatement	h -> fontNumber = d -> font_id	1029:8:33566:33592	156345	35	True				
ANR	157033	AssignmentExpression	h -> fontNumber = d -> font_id		156345	0		=			
ANR	157034	PtrMemberAccess	h -> fontNumber		156345	0					
ANR	157035	Identifier	h		156345	0					
ANR	157036	Identifier	fontNumber		156345	1					
ANR	157037	PtrMemberAccess	d -> font_id		156345	1					
ANR	157038	Identifier	d		156345	0					
ANR	157039	Identifier	font_id		156345	1					
ANR	157040	ExpressionStatement	h -> fontName [ 0 ] = 0	1030:8:33621:33639	156345	36	True				
ANR	157041	AssignmentExpression	h -> fontName [ 0 ] = 0		156345	0		=			
ANR	157042	ArrayIndexing	h -> fontName [ 0 ]		156345	0					
ANR	157043	PtrMemberAccess	h -> fontName		156345	0					
ANR	157044	Identifier	h		156345	0					
ANR	157045	Identifier	fontName		156345	1					
ANR	157046	PrimaryExpression	0		156345	1					
ANR	157047	PrimaryExpression	0		156345	1					
ANR	157048	ExpressionStatement	h -> scaleFactor = 1024	1031:8:33679:33700	156345	37	True				
ANR	157049	AssignmentExpression	h -> scaleFactor = 1024		156345	0		=			
ANR	157050	PtrMemberAccess	h -> scaleFactor		156345	0					
ANR	157051	Identifier	h		156345	0					
ANR	157052	Identifier	scaleFactor		156345	1					
ANR	157053	PrimaryExpression	1024		156345	1					
ANR	157054	ExpressionStatement	h -> masterUnderlinePosition = 0	1032:8:33748:33778	156345	38	True				
ANR	157055	AssignmentExpression	h -> masterUnderlinePosition = 0		156345	0		=			
ANR	157056	PtrMemberAccess	h -> masterUnderlinePosition		156345	0					
ANR	157057	Identifier	h		156345	0					
ANR	157058	Identifier	masterUnderlinePosition		156345	1					
ANR	157059	PrimaryExpression	0		156345	1					
ANR	157060	ExpressionStatement	h -> masterUnderlineHeight = 0	1033:8:33835:33863	156345	39	True				
ANR	157061	AssignmentExpression	h -> masterUnderlineHeight = 0		156345	0		=			
ANR	157062	PtrMemberAccess	h -> masterUnderlineHeight		156345	0					
ANR	157063	Identifier	h		156345	0					
ANR	157064	Identifier	masterUnderlineHeight		156345	1					
ANR	157065	PrimaryExpression	0		156345	1					
ANR	157066	ExpressionStatement	h -> fontScalingTechnology = 1	1035:8:33921:33949	156345	40	True				
ANR	157067	AssignmentExpression	h -> fontScalingTechnology = 1		156345	0		=			
ANR	157068	PtrMemberAccess	h -> fontScalingTechnology		156345	0					
ANR	157069	Identifier	h		156345	0					
ANR	157070	Identifier	fontScalingTechnology		156345	1					
ANR	157071	PrimaryExpression	1		156345	1					
ANR	157072	ExpressionStatement	h -> variety = 0	1036:8:33997:34011	156345	41	True				
ANR	157073	AssignmentExpression	h -> variety = 0		156345	0		=			
ANR	157074	PtrMemberAccess	h -> variety		156345	0					
ANR	157075	Identifier	h		156345	0					
ANR	157076	Identifier	variety		156345	1					
ANR	157077	PrimaryExpression	0		156345	1					
ANR	157078	ExpressionStatement	"memset ( ( LPUB8 ) h + PCLETTOFONTHDRSIZE , 0 , 8 )"	1038:8:34054:34098	156345	42	True				
ANR	157079	CallExpression	"memset ( ( LPUB8 ) h + PCLETTOFONTHDRSIZE , 0 , 8 )"		156345	0					
ANR	157080	Callee	memset		156345	0					
ANR	157081	Identifier	memset		156345	0					
ANR	157082	ArgumentList	( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	1					
ANR	157083	Argument	( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	0					
ANR	157084	AdditiveExpression	( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	0		+			
ANR	157085	CastExpression	( LPUB8 ) h		156345	0					
ANR	157086	CastTarget	LPUB8		156345	0					
ANR	157087	Identifier	h		156345	1					
ANR	157088	Identifier	PCLETTOFONTHDRSIZE		156345	1					
ANR	157089	Argument	0		156345	1					
ANR	157090	PrimaryExpression	0		156345	0					
ANR	157091	Argument	8		156345	2					
ANR	157092	PrimaryExpression	8		156345	0					
ANR	157093	ExpressionStatement	"UFST_PCLswapHdr ( ( UB8 * ) h , 0 )"	1045:8:34430:34459	156345	43	True				
ANR	157094	CallExpression	"UFST_PCLswapHdr ( ( UB8 * ) h , 0 )"		156345	0					
ANR	157095	Callee	UFST_PCLswapHdr		156345	0					
ANR	157096	Identifier	UFST_PCLswapHdr		156345	0					
ANR	157097	ArgumentList	( UB8 * ) h		156345	1					
ANR	157098	Argument	( UB8 * ) h		156345	0					
ANR	157099	CastExpression	( UB8 * ) h		156345	0					
ANR	157100	CastTarget	UB8 *		156345	0					
ANR	157101	Identifier	h		156345	1					
ANR	157102	Argument	0		156345	1					
ANR	157103	PrimaryExpression	0		156345	0					
ANR	157104	IfStatement	if ( ff -> is_type1 )		156345	44					
ANR	157105	Condition	ff -> is_type1	1047:12:34474:34485	156345	0	True				
ANR	157106	PtrMemberAccess	ff -> is_type1		156345	0					
ANR	157107	Identifier	ff		156345	0					
ANR	157108	Identifier	is_type1		156345	1					
ANR	157109	CompoundStatement		164:12:6753:6800	156345	1					
ANR	157110	IdentifierDeclStatement	LPUB8 fontdata = ( LPUB8 ) h + PCLETTOFONTHDRSIZE ;	1048:12:34502:34549	156345	0	True				
ANR	157111	IdentifierDecl	fontdata = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	0					
ANR	157112	IdentifierDeclType	LPUB8		156345	0					
ANR	157113	Identifier	fontdata		156345	1					
ANR	157114	AssignmentExpression	fontdata = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	2		=			
ANR	157115	Identifier	fontdata		156345	0					
ANR	157116	AdditiveExpression	( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	1		+			
ANR	157117	CastExpression	( LPUB8 ) h		156345	0					
ANR	157118	CastTarget	LPUB8		156345	0					
ANR	157119	Identifier	h		156345	1					
ANR	157120	Identifier	PCLETTOFONTHDRSIZE		156345	1					
ANR	157121	ExpressionStatement	"pack_pseo_fhdr ( r , ff , fontdata )"	1050:12:34564:34595	156345	1	True				
ANR	157122	CallExpression	"pack_pseo_fhdr ( r , ff , fontdata )"		156345	0					
ANR	157123	Callee	pack_pseo_fhdr		156345	0					
ANR	157124	Identifier	pack_pseo_fhdr		156345	0					
ANR	157125	ArgumentList	r		156345	1					
ANR	157126	Argument	r		156345	0					
ANR	157127	Identifier	r		156345	0					
ANR	157128	Argument	ff		156345	1					
ANR	157129	Identifier	ff		156345	0					
ANR	157130	Argument	fontdata		156345	2					
ANR	157131	Identifier	fontdata		156345	0					
ANR	157132	ElseStatement	else		156345	0					
ANR	157133	CompoundStatement		170:12:6942:6998	156345	0					
ANR	157134	IdentifierDeclStatement	LPUB8 pseg = ( LPUB8 ) h + PCLETTOFONTHDRSIZE ;	1053:12:34634:34677	156345	0	True				
ANR	157135	IdentifierDecl	pseg = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	0					
ANR	157136	IdentifierDeclType	LPUB8		156345	0					
ANR	157137	Identifier	pseg		156345	1					
ANR	157138	AssignmentExpression	pseg = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	2		=			
ANR	157139	Identifier	pseg		156345	0					
ANR	157140	AdditiveExpression	( LPUB8 ) h + PCLETTOFONTHDRSIZE		156345	1		+			
ANR	157141	CastExpression	( LPUB8 ) h		156345	0					
ANR	157142	CastTarget	LPUB8		156345	0					
ANR	157143	Identifier	h		156345	1					
ANR	157144	Identifier	PCLETTOFONTHDRSIZE		156345	1					
ANR	157145	IdentifierDeclStatement	LPUB8 fontdata = pseg + 6 ;	1054:12:34691:34747	156345	1	True				
ANR	157146	IdentifierDecl	fontdata = pseg + 6		156345	0					
ANR	157147	IdentifierDeclType	LPUB8		156345	0					
ANR	157148	Identifier	fontdata		156345	1					
ANR	157149	AssignmentExpression	fontdata = pseg + 6		156345	2		=			
ANR	157150	Identifier	fontdata		156345	0					
ANR	157151	AdditiveExpression	pseg + 6		156345	1		+			
ANR	157152	Identifier	pseg		156345	0					
ANR	157153	PrimaryExpression	6		156345	1					
ANR	157154	ExpressionStatement	pseg [ 0 ] = 'G'	1057:12:34763:34776	156345	2	True				
ANR	157155	AssignmentExpression	pseg [ 0 ] = 'G'		156345	0		=			
ANR	157156	ArrayIndexing	pseg [ 0 ]		156345	0					
ANR	157157	Identifier	pseg		156345	0					
ANR	157158	PrimaryExpression	0		156345	1					
ANR	157159	PrimaryExpression	'G'		156345	1					
ANR	157160	ExpressionStatement	pseg [ 1 ] = 'T'	1058:12:34790:34803	156345	3	True				
ANR	157161	AssignmentExpression	pseg [ 1 ] = 'T'		156345	0		=			
ANR	157162	ArrayIndexing	pseg [ 1 ]		156345	0					
ANR	157163	Identifier	pseg		156345	0					
ANR	157164	PrimaryExpression	1		156345	1					
ANR	157165	PrimaryExpression	'T'		156345	1					
ANR	157166	ExpressionStatement	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) ) = SWAPL ( tt_size )	1060:12:34818:34860	156345	4	True				
ANR	157167	AssignmentExpression	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) ) = SWAPL ( tt_size )		156345	0		=			
ANR	157168	UnaryOperationExpression	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) )		156345	0					
ANR	157169	UnaryOperator	*		156345	0					
ANR	157170	CastExpression	( ulong * ) ( & ( pseg [ 2 ] ) )		156345	1					
ANR	157171	CastTarget	ulong *		156345	0					
ANR	157172	UnaryOperationExpression	& ( pseg [ 2 ] )		156345	1					
ANR	157173	UnaryOperator	&		156345	0					
ANR	157174	ArrayIndexing	pseg [ 2 ]		156345	1					
ANR	157175	Identifier	pseg		156345	0					
ANR	157176	PrimaryExpression	2		156345	1					
ANR	157177	CallExpression	SWAPL ( tt_size )		156345	1					
ANR	157178	Callee	SWAPL		156345	0					
ANR	157179	Identifier	SWAPL		156345	0					
ANR	157180	ArgumentList	tt_size		156345	1					
ANR	157181	Argument	tt_size		156345	0					
ANR	157182	Identifier	tt_size		156345	0					
ANR	157183	ExpressionStatement	d -> tt_font_body_offset = ( LPUB8 ) fontdata - ( LPUB8 ) d	1062:12:34875:34928	156345	5	True				
ANR	157184	AssignmentExpression	d -> tt_font_body_offset = ( LPUB8 ) fontdata - ( LPUB8 ) d		156345	0		=			
ANR	157185	PtrMemberAccess	d -> tt_font_body_offset		156345	0					
ANR	157186	Identifier	d		156345	0					
ANR	157187	Identifier	tt_font_body_offset		156345	1					
ANR	157188	AdditiveExpression	( LPUB8 ) fontdata - ( LPUB8 ) d		156345	1		-			
ANR	157189	CastExpression	( LPUB8 ) fontdata		156345	0					
ANR	157190	CastTarget	LPUB8		156345	0					
ANR	157191	Identifier	fontdata		156345	1					
ANR	157192	CastExpression	( LPUB8 ) d		156345	1					
ANR	157193	CastTarget	LPUB8		156345	0					
ANR	157194	Identifier	d		156345	1					
ANR	157195	IfStatement	"if ( ff -> serialize_tt_font ( ff , fontdata , tt_size ) )"		156345	6					
ANR	157196	Condition	"ff -> serialize_tt_font ( ff , fontdata , tt_size )"	1063:16:34946:34989	156345	0	True				
ANR	157197	CallExpression	"ff -> serialize_tt_font ( ff , fontdata , tt_size )"		156345	0					
ANR	157198	Callee	ff -> serialize_tt_font		156345	0					
ANR	157199	PtrMemberAccess	ff -> serialize_tt_font		156345	0					
ANR	157200	Identifier	ff		156345	0					
ANR	157201	Identifier	serialize_tt_font		156345	1					
ANR	157202	ArgumentList	ff		156345	1					
ANR	157203	Argument	ff		156345	0					
ANR	157204	Identifier	ff		156345	0					
ANR	157205	Argument	fontdata		156345	1					
ANR	157206	Identifier	fontdata		156345	0					
ANR	157207	Argument	tt_size		156345	2					
ANR	157208	Identifier	tt_size		156345	0					
ANR	157209	ExpressionStatement	return_error ( gs_error_invalidfont )	1064:16:35008:35042	156345	1	True				
ANR	157210	CallExpression	return_error ( gs_error_invalidfont )		156345	0					
ANR	157211	Callee	return_error		156345	0					
ANR	157212	Identifier	return_error		156345	0					
ANR	157213	ArgumentList	gs_error_invalidfont		156345	1					
ANR	157214	Argument	gs_error_invalidfont		156345	0					
ANR	157215	Identifier	gs_error_invalidfont		156345	0					
ANR	157216	ExpressionStatement	* ( fontdata + tt_size ) = 255	1065:12:35056:35083	156345	7	True				
ANR	157217	AssignmentExpression	* ( fontdata + tt_size ) = 255		156345	0		=			
ANR	157218	UnaryOperationExpression	* ( fontdata + tt_size )		156345	0					
ANR	157219	UnaryOperator	*		156345	0					
ANR	157220	AdditiveExpression	fontdata + tt_size		156345	1		+			
ANR	157221	Identifier	fontdata		156345	0					
ANR	157222	Identifier	tt_size		156345	1					
ANR	157223	PrimaryExpression	255		156345	1					
ANR	157224	ExpressionStatement	* ( fontdata + tt_size + 1 ) = 255	1066:12:35097:35128	156345	8	True				
ANR	157225	AssignmentExpression	* ( fontdata + tt_size + 1 ) = 255		156345	0		=			
ANR	157226	UnaryOperationExpression	* ( fontdata + tt_size + 1 )		156345	0					
ANR	157227	UnaryOperator	*		156345	0					
ANR	157228	AdditiveExpression	fontdata + tt_size + 1		156345	1		+			
ANR	157229	Identifier	fontdata		156345	0					
ANR	157230	AdditiveExpression	tt_size + 1		156345	1		+			
ANR	157231	Identifier	tt_size		156345	0					
ANR	157232	PrimaryExpression	1		156345	1					
ANR	157233	PrimaryExpression	255		156345	1					
ANR	157234	ExpressionStatement	* ( fontdata + tt_size + 2 ) = 0	1067:12:35142:35171	156345	9	True				
ANR	157235	AssignmentExpression	* ( fontdata + tt_size + 2 ) = 0		156345	0		=			
ANR	157236	UnaryOperationExpression	* ( fontdata + tt_size + 2 )		156345	0					
ANR	157237	UnaryOperator	*		156345	0					
ANR	157238	AdditiveExpression	fontdata + tt_size + 2		156345	1		+			
ANR	157239	Identifier	fontdata		156345	0					
ANR	157240	AdditiveExpression	tt_size + 2		156345	1		+			
ANR	157241	Identifier	tt_size		156345	0					
ANR	157242	PrimaryExpression	2		156345	1					
ANR	157243	PrimaryExpression	0		156345	1					
ANR	157244	ExpressionStatement	* ( fontdata + tt_size + 3 ) = 0	1068:12:35185:35214	156345	10	True				
ANR	157245	AssignmentExpression	* ( fontdata + tt_size + 3 ) = 0		156345	0		=			
ANR	157246	UnaryOperationExpression	* ( fontdata + tt_size + 3 )		156345	0					
ANR	157247	UnaryOperator	*		156345	0					
ANR	157248	AdditiveExpression	fontdata + tt_size + 3		156345	1		+			
ANR	157249	Identifier	fontdata		156345	0					
ANR	157250	AdditiveExpression	tt_size + 3		156345	1		+			
ANR	157251	Identifier	tt_size		156345	0					
ANR	157252	PrimaryExpression	3		156345	1					
ANR	157253	PrimaryExpression	0		156345	1					
ANR	157254	ExpressionStatement	* ( fontdata + tt_size + 4 ) = 0	1069:12:35228:35257	156345	11	True				
ANR	157255	AssignmentExpression	* ( fontdata + tt_size + 4 ) = 0		156345	0		=			
ANR	157256	UnaryOperationExpression	* ( fontdata + tt_size + 4 )		156345	0					
ANR	157257	UnaryOperator	*		156345	0					
ANR	157258	AdditiveExpression	fontdata + tt_size + 4		156345	1		+			
ANR	157259	Identifier	fontdata		156345	0					
ANR	157260	AdditiveExpression	tt_size + 4		156345	1		+			
ANR	157261	Identifier	tt_size		156345	0					
ANR	157262	PrimaryExpression	4		156345	1					
ANR	157263	PrimaryExpression	0		156345	1					
ANR	157264	ExpressionStatement	* ( fontdata + tt_size + 5 ) = 0	1070:12:35271:35300	156345	12	True				
ANR	157265	AssignmentExpression	* ( fontdata + tt_size + 5 ) = 0		156345	0		=			
ANR	157266	UnaryOperationExpression	* ( fontdata + tt_size + 5 )		156345	0					
ANR	157267	UnaryOperator	*		156345	0					
ANR	157268	AdditiveExpression	fontdata + tt_size + 5		156345	1		+			
ANR	157269	Identifier	fontdata		156345	0					
ANR	157270	AdditiveExpression	tt_size + 5		156345	1		+			
ANR	157271	Identifier	tt_size		156345	0					
ANR	157272	PrimaryExpression	5		156345	1					
ANR	157273	PrimaryExpression	0		156345	1					
ANR	157274	ExpressionStatement	* return_data = d	1073:4:35342:35358	156345	23	True				
ANR	157275	AssignmentExpression	* return_data = d		156345	0		=			
ANR	157276	UnaryOperationExpression	* return_data		156345	0					
ANR	157277	UnaryOperator	*		156345	0					
ANR	157278	Identifier	return_data		156345	1					
ANR	157279	Identifier	d		156345	1					
ANR	157280	ReturnStatement	return 0 ;	1074:4:35364:35372	156345	24	True				
ANR	157281	PrimaryExpression	0		156345	0					
ANR	157282	ReturnType	static gs_fapi_retcode		156345	1					
ANR	157283	Identifier	ufst_make_font_data		156345	2					
ANR	157284	ParameterList	"fapi_ufst_server * r , const char * font_file_path , gs_fapi_font * ff , ufst_common_font_data * * return_data"		156345	3					
ANR	157285	Parameter	fapi_ufst_server * r	883:20:27621:27640	156345	0	True				
ANR	157286	ParameterType	fapi_ufst_server *		156345	0					
ANR	157287	Identifier	r		156345	1					
ANR	157288	Parameter	const char * font_file_path	883:42:27643:27668	156345	1	True				
ANR	157289	ParameterType	const char *		156345	0					
ANR	157290	Identifier	font_file_path		156345	1					
ANR	157291	Parameter	gs_fapi_font * ff	884:20:27691:27707	156345	2	True				
ANR	157292	ParameterType	gs_fapi_font *		156345	0					
ANR	157293	Identifier	ff		156345	1					
ANR	157294	Parameter	ufst_common_font_data * * return_data	884:39:27710:27745	156345	3	True				
ANR	157295	ParameterType	ufst_common_font_data * *		156345	0					
ANR	157296	Identifier	return_data		156345	1					
ANR	157297	CFGEntryNode	ENTRY		156345		True				
ANR	157298	CFGExitNode	EXIT		156345		True				
ANR	157299	Symbol	e -> fcHandle		156345						
ANR	157300	Symbol	* ( fontdata + tt_size + 2 )		156345						
ANR	157301	Symbol	gx_UFST_find_static_fco		156345						
ANR	157302	Symbol	r -> mem		156345						
ANR	157303	Symbol	h -> pitch_ext		156345						
ANR	157304	Symbol	h -> variety		156345						
ANR	157305	Symbol	h -> style_msb		156345						
ANR	157306	Symbol	sfopen		156345						
ANR	157307	Symbol	d -> platformId		156345						
ANR	157308	Symbol	h -> height		156345						
ANR	157309	Symbol	gs_error_invalidaccess		156345						
ANR	157310	Symbol	h -> widthType		156345						
ANR	157311	Symbol	ff -> font_file_path		156345						
ANR	157312	Symbol	r -> fc . ttc_index		156345						
ANR	157313	Symbol	h -> typeface_lsb		156345						
ANR	157314	Symbol	h -> fontScalingTechnology		156345						
ANR	157315	Symbol	h -> characterSet		156345						
ANR	157316	Symbol	gs_malloc		156345						
ANR	157317	Symbol	h -> masterUnderlineHeight		156345						
ANR	157318	Symbol	return_data		156345						
ANR	157319	Symbol	h -> fontDescriptorSize		156345						
ANR	157320	Symbol	* ( fontdata + tt_size + 3 )		156345						
ANR	157321	Symbol	d -> ufstfontinfosize		156345						
ANR	157322	Symbol	FC_FCO_TYPE		156345						
ANR	157323	Symbol	h -> serifStyle		156345						
ANR	157324	Symbol	strncasecmp		156345						
ANR	157325	Symbol	ff -> serialize_tt_font		156345						
ANR	157326	Symbol	PCLETTOFONTHDRSIZE		156345						
ANR	157327	Symbol	h -> orientation		156345						
ANR	157328	Symbol	h -> textWidth		156345						
ANR	157329	Symbol	ff -> subfont		156345						
ANR	157330	Symbol	gs_error_invalidfont		156345						
ANR	157331	Symbol	h -> underlineHeight		156345						
ANR	157332	Symbol	d		156345						
ANR	157333	Symbol	* ff		156345						
ANR	157334	Symbol	e		156345						
ANR	157335	Symbol	f		156345						
ANR	157336	Symbol	get_font_type		156345						
ANR	157337	Symbol	h		156345						
ANR	157338	Symbol	gs_error_undefinedfilename		156345						
ANR	157339	Symbol	h -> typeface_msb		156345						
ANR	157340	Symbol	r		156345						
ANR	157341	Symbol	buf		156345						
ANR	157342	Symbol	* return_data		156345						
ANR	157343	Symbol	h -> cellWidth		156345						
ANR	157344	Symbol	h -> pitch		156345						
ANR	157345	Symbol	h -> scaleFactor		156345						
ANR	157346	Symbol	h -> quality		156345						
ANR	157347	Symbol	h -> height_ext		156345						
ANR	157348	Symbol	* tt_size		156345						
ANR	157349	Symbol	* ( fontdata + tt_size )		156345						
ANR	157350	Symbol	* ( fontdata + tt_size + 4 )		156345						
ANR	157351	Symbol	fco_open		156345						
ANR	157352	Symbol	h -> textHeight		156345						
ANR	157353	Symbol	h -> baselinePosition		156345						
ANR	157354	Symbol	h -> lastCode		156345						
ANR	157355	Symbol	strlen		156345						
ANR	157356	Symbol	d -> glyphs		156345						
ANR	157357	Symbol	h -> fontName		156345						
ANR	157358	Symbol	h -> masterUnderlinePosition		156345						
ANR	157359	Symbol	* h -> fontName		156345						
ANR	157360	Symbol	NULL		156345						
ANR	157361	Symbol	* * h		156345						
ANR	157362	Symbol	SWAPL		156345						
ANR	157363	Symbol	* * d		156345						
ANR	157364	Symbol	h -> descriptorFormat		156345						
ANR	157365	Symbol	fontdata		156345						
ANR	157366	Symbol	use_XL_format		156345						
ANR	157367	Symbol	d -> is_disk_font		156345						
ANR	157368	Symbol	d -> font_type		156345						
ANR	157369	Symbol	* pseg		156345						
ANR	157370	Symbol	sind		156345						
ANR	157371	Symbol	ff -> is_mtx_skipped		156345						
ANR	157372	Symbol	ff		156345						
ANR	157373	Symbol	code		156345						
ANR	157374	Symbol	ff -> is_type1		156345						
ANR	157375	Symbol	* fontdata		156345						
ANR	157376	Symbol	* ( fontdata + tt_size + 5 )		156345						
ANR	157377	Symbol	h -> capHeight		156345						
ANR	157378	Symbol	FC_TT_TYPE		156345						
ANR	157379	Symbol	h -> fontType		156345						
ANR	157380	Symbol	* d -> decodingID		156345						
ANR	157381	Symbol	h -> reserved1		156345						
ANR	157382	Symbol	h -> placement		156345						
ANR	157383	Symbol	h -> fontNumber		156345						
ANR	157384	Symbol	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) )		156345						
ANR	157385	Symbol	* ( fontdata + tt_size + 1 )		156345						
ANR	157386	Symbol	pseg		156345						
ANR	157387	Symbol	d -> decodingID		156345						
ANR	157388	Symbol	h -> style_lsb		156345						
ANR	157389	Symbol	ff -> get_long		156345						
ANR	157390	Symbol	tt_size		156345						
ANR	157391	Symbol	assign_font_id		156345						
ANR	157392	Symbol	d -> specificId		156345						
ANR	157393	Symbol	d -> font_id		156345						
ANR	157394	Symbol	h -> underlinePosition		156345						
ANR	157395	Symbol	gs_fapi_font_feature_UniqueID		156345						
ANR	157396	Symbol	h -> cellHeight		156345						
ANR	157397	Symbol	h -> xHeight		156345						
ANR	157398	Symbol	r -> fc		156345						
ANR	157399	Symbol	d -> ufstfontinfo		156345						
ANR	157400	Symbol	FC_PST1_TYPE		156345						
ANR	157401	Symbol	h -> firstCode		156345						
ANR	157402	Symbol	& e		156345						
ANR	157403	Symbol	* d		156345						
ANR	157404	Symbol	* e		156345						
ANR	157405	Symbol	gs_error_VMerror		156345						
ANR	157406	Symbol	d -> tt_font_body_offset		156345						
ANR	157407	Symbol	* h		156345						
ANR	157408	Symbol	area_length		156345						
ANR	157409	Symbol	font_file_path		156345						
ANR	157410	Symbol	h -> strokeWeight		156345						
ANR	157411	Symbol	* r		156345						
ANR	157412	Symbol	h -> spacing		156345						
ANR	157413	Function	prepare_typeface	1077:0:35377:35626							
ANR	157414	FunctionDef	"prepare_typeface (fapi_ufst_server * r , ufst_common_font_data * d)"		157413	0					
ANR	157415	CompoundStatement		1079:0:35455:35626	157413	0					
ANR	157416	ExpressionStatement	r -> fc . format = d -> font_type	1080:4:35461:35488	157413	0	True				
ANR	157417	AssignmentExpression	r -> fc . format = d -> font_type		157413	0		=			
ANR	157418	MemberAccess	r -> fc . format		157413	0					
ANR	157419	PtrMemberAccess	r -> fc		157413	0					
ANR	157420	Identifier	r		157413	0					
ANR	157421	Identifier	fc		157413	1					
ANR	157422	Identifier	format		157413	1					
ANR	157423	PtrMemberAccess	d -> font_type		157413	1					
ANR	157424	Identifier	d		157413	0					
ANR	157425	Identifier	font_type		157413	1					
ANR	157426	ExpressionStatement	r -> fc . font_id = d -> font_id	1081:4:35494:35520	157413	1	True				
ANR	157427	AssignmentExpression	r -> fc . font_id = d -> font_id		157413	0		=			
ANR	157428	MemberAccess	r -> fc . font_id		157413	0					
ANR	157429	PtrMemberAccess	r -> fc		157413	0					
ANR	157430	Identifier	r		157413	0					
ANR	157431	Identifier	fc		157413	1					
ANR	157432	Identifier	font_id		157413	1					
ANR	157433	PtrMemberAccess	d -> font_id		157413	1					
ANR	157434	Identifier	d		157413	0					
ANR	157435	Identifier	font_id		157413	1					
ANR	157436	ExpressionStatement	r -> fc . font_hdr = ( UB8 * ) ( d + 1 )	1082:4:35526:35558	157413	2	True				
ANR	157437	AssignmentExpression	r -> fc . font_hdr = ( UB8 * ) ( d + 1 )		157413	0		=			
ANR	157438	MemberAccess	r -> fc . font_hdr		157413	0					
ANR	157439	PtrMemberAccess	r -> fc		157413	0					
ANR	157440	Identifier	r		157413	0					
ANR	157441	Identifier	fc		157413	1					
ANR	157442	Identifier	font_hdr		157413	1					
ANR	157443	CastExpression	( UB8 * ) ( d + 1 )		157413	1					
ANR	157444	CastTarget	UB8 *		157413	0					
ANR	157445	AdditiveExpression	d + 1		157413	1		+			
ANR	157446	Identifier	d		157413	0					
ANR	157447	PrimaryExpression	1		157413	1					
ANR	157448	IfStatement	if ( ! d -> is_disk_font )		157413	3					
ANR	157449	Condition	! d -> is_disk_font	1083:8:35568:35583	157413	0	True				
ANR	157450	UnaryOperationExpression	! d -> is_disk_font		157413	0					
ANR	157451	UnaryOperator	!		157413	0					
ANR	157452	PtrMemberAccess	d -> is_disk_font		157413	1					
ANR	157453	Identifier	d		157413	0					
ANR	157454	Identifier	is_disk_font		157413	1					
ANR	157455	ExpressionStatement	r -> fc . format |= FC_EXTERN_TYPE	1084:8:35594:35624	157413	1	True				
ANR	157456	AssignmentExpression	r -> fc . format |= FC_EXTERN_TYPE		157413	0		|=			
ANR	157457	MemberAccess	r -> fc . format		157413	0					
ANR	157458	PtrMemberAccess	r -> fc		157413	0					
ANR	157459	Identifier	r		157413	0					
ANR	157460	Identifier	fc		157413	1					
ANR	157461	Identifier	format		157413	1					
ANR	157462	Identifier	FC_EXTERN_TYPE		157413	1					
ANR	157463	ReturnType	static void		157413	1					
ANR	157464	Identifier	prepare_typeface		157413	2					
ANR	157465	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d"		157413	3					
ANR	157466	Parameter	fapi_ufst_server * r	1078:17:35406:35425	157413	0	True				
ANR	157467	ParameterType	fapi_ufst_server *		157413	0					
ANR	157468	Identifier	r		157413	1					
ANR	157469	Parameter	ufst_common_font_data * d	1078:39:35428:35452	157413	1	True				
ANR	157470	ParameterType	ufst_common_font_data *		157413	0					
ANR	157471	Identifier	d		157413	1					
ANR	157472	CFGEntryNode	ENTRY		157413		True				
ANR	157473	CFGExitNode	EXIT		157413		True				
ANR	157474	Symbol	d -> font_type		157413						
ANR	157475	Symbol	d -> is_disk_font		157413						
ANR	157476	Symbol	r		157413						
ANR	157477	Symbol	d		157413						
ANR	157478	Symbol	r -> fc		157413						
ANR	157479	Symbol	FC_EXTERN_TYPE		157413						
ANR	157480	Symbol	r -> fc . format		157413						
ANR	157481	Symbol	r -> fc . font_id		157413						
ANR	157482	Symbol	r -> fc . font_hdr		157413						
ANR	157483	Symbol	* r		157413						
ANR	157484	Symbol	* d		157413						
ANR	157485	Symbol	d -> font_id		157413						
ANR	157486	Function	gs_fapi_ufst_get_scaled_font_aux	1087:0:35629:41421							
ANR	157487	FunctionDef	"gs_fapi_ufst_get_scaled_font_aux (gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc)"		157486	0					
ANR	157488	CompoundStatement		1091:0:35857:41421	157486	0					
ANR	157489	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1092:4:35863:35900	157486	0	True				
ANR	157490	IdentifierDecl	* r = If_to_I ( server )		157486	0					
ANR	157491	IdentifierDeclType	fapi_ufst_server *		157486	0					
ANR	157492	Identifier	r		157486	1					
ANR	157493	AssignmentExpression	* r = If_to_I ( server )		157486	2		=			
ANR	157494	Identifier	r		157486	0					
ANR	157495	CallExpression	If_to_I ( server )		157486	1					
ANR	157496	Callee	If_to_I		157486	0					
ANR	157497	Identifier	If_to_I		157486	0					
ANR	157498	ArgumentList	server		157486	1					
ANR	157499	Argument	server		157486	0					
ANR	157500	Identifier	server		157486	0					
ANR	157501	IdentifierDeclStatement	FONTCONTEXT * fc = & r -> fc ;	1093:4:35906:35930	157486	1	True				
ANR	157502	IdentifierDecl	* fc = & r -> fc		157486	0					
ANR	157503	IdentifierDeclType	FONTCONTEXT *		157486	0					
ANR	157504	Identifier	fc		157486	1					
ANR	157505	AssignmentExpression	* fc = & r -> fc		157486	2		=			
ANR	157506	Identifier	fc		157486	0					
ANR	157507	UnaryOperationExpression	& r -> fc		157486	1					
ANR	157508	UnaryOperator	&		157486	0					
ANR	157509	PtrMemberAccess	r -> fc		157486	1					
ANR	157510	Identifier	r		157486	0					
ANR	157511	Identifier	fc		157486	1					
ANR	157512	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) ff -> server_font_data ;	1100:4:36201:36274	157486	2	True				
ANR	157513	IdentifierDecl	* d = ( ufst_common_font_data * ) ff -> server_font_data		157486	0					
ANR	157514	IdentifierDeclType	ufst_common_font_data *		157486	0					
ANR	157515	Identifier	d		157486	1					
ANR	157516	AssignmentExpression	* d = ( ufst_common_font_data * ) ff -> server_font_data		157486	2		=			
ANR	157517	Identifier	d		157486	0					
ANR	157518	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		157486	1					
ANR	157519	CastTarget	ufst_common_font_data *		157486	0					
ANR	157520	PtrMemberAccess	ff -> server_font_data		157486	1					
ANR	157521	Identifier	ff		157486	0					
ANR	157522	Identifier	server_font_data		157486	1					
ANR	157523	IdentifierDeclStatement	const double scale = F_ONE ;	1101:4:36280:36306	157486	3	True				
ANR	157524	IdentifierDecl	scale = F_ONE		157486	0					
ANR	157525	IdentifierDeclType	const double		157486	0					
ANR	157526	Identifier	scale		157486	1					
ANR	157527	AssignmentExpression	scale = F_ONE		157486	2		=			
ANR	157528	Identifier	F_ONE		157486	0					
ANR	157529	Identifier	F_ONE		157486	1					
ANR	157530	IdentifierDeclStatement	"double hx , hy ;"	1102:4:36312:36325	157486	4	True				
ANR	157531	IdentifierDecl	hx		157486	0					
ANR	157532	IdentifierDeclType	double		157486	0					
ANR	157533	Identifier	hx		157486	1					
ANR	157534	IdentifierDecl	hy		157486	1					
ANR	157535	IdentifierDeclType	double		157486	0					
ANR	157536	Identifier	hy		157486	1					
ANR	157537	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	1103:4:36331:36355	157486	5	True				
ANR	157538	IdentifierDecl	code = 0		157486	0					
ANR	157539	IdentifierDeclType	gs_fapi_retcode		157486	0					
ANR	157540	Identifier	code		157486	1					
ANR	157541	AssignmentExpression	code = 0		157486	2		=			
ANR	157542	Identifier	code		157486	0					
ANR	157543	PrimaryExpression	0		157486	1					
ANR	157544	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	1104:4:36361:36400	157486	6	True				
ANR	157545	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		157486	0					
ANR	157546	IdentifierDeclType	bool		157486	0					
ANR	157547	Identifier	use_XL_format		157486	1					
ANR	157548	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		157486	2		=			
ANR	157549	Identifier	use_XL_format		157486	0					
ANR	157550	PtrMemberAccess	ff -> is_mtx_skipped		157486	1					
ANR	157551	Identifier	ff		157486	0					
ANR	157552	Identifier	is_mtx_skipped		157486	1					
ANR	157553	IdentifierDeclStatement	int world_scale = 0 ;	1105:4:36406:36425	157486	7	True				
ANR	157554	IdentifierDecl	world_scale = 0		157486	0					
ANR	157555	IdentifierDeclType	int		157486	0					
ANR	157556	Identifier	world_scale		157486	1					
ANR	157557	AssignmentExpression	world_scale = 0		157486	2		=			
ANR	157558	Identifier	world_scale		157486	0					
ANR	157559	PrimaryExpression	0		157486	1					
ANR	157560	IdentifierDeclStatement	FONT_METRICS fm ;	1106:4:36431:36446	157486	8	True				
ANR	157561	IdentifierDecl	fm		157486	0					
ANR	157562	IdentifierDeclType	FONT_METRICS		157486	0					
ANR	157563	Identifier	fm		157486	1					
ANR	157564	ExpressionStatement	FSA_FROM_SERVER	1108:4:36453:36468	157486	9	True				
ANR	157565	Identifier	FSA_FROM_SERVER		157486	0					
ANR	157566	IfStatement	if ( ff -> is_cid && ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete ) )		157486	10					
ANR	157567	Condition	ff -> is_cid && ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )	1110:8:36479:36611	157486	0	True				
ANR	157568	AndExpression	ff -> is_cid && ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )		157486	0		&&			
ANR	157569	PtrMemberAccess	ff -> is_cid		157486	0					
ANR	157570	Identifier	ff		157486	0					
ANR	157571	Identifier	is_cid		157486	1					
ANR	157572	AndExpression	ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )		157486	1		&&			
ANR	157573	PtrMemberAccess	ff -> is_type1		157486	0					
ANR	157574	Identifier	ff		157486	0					
ANR	157575	Identifier	is_type1		157486	1					
ANR	157576	AndExpression	ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )		157486	1		&&			
ANR	157577	EqualityExpression	ff -> font_file_path == NULL		157486	0		==			
ANR	157578	PtrMemberAccess	ff -> font_file_path		157486	0					
ANR	157579	Identifier	ff		157486	0					
ANR	157580	Identifier	font_file_path		157486	1					
ANR	157581	Identifier	NULL		157486	1					
ANR	157582	OrExpression	dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete		157486	1		||			
ANR	157583	EqualityExpression	dc == gs_fapi_toplevel_begin		157486	0		==			
ANR	157584	Identifier	dc		157486	0					
ANR	157585	Identifier	gs_fapi_toplevel_begin		157486	1					
ANR	157586	EqualityExpression	dc == gs_fapi_toplevel_complete		157486	1		==			
ANR	157587	Identifier	dc		157486	0					
ANR	157588	Identifier	gs_fapi_toplevel_complete		157486	1					
ANR	157589	CompoundStatement		21:75:756:756	157486	1					
ANR	157590	ReturnStatement	return 0 ;	1116:8:36821:36829	157486	0	True				
ANR	157591	PrimaryExpression	0		157486	0					
ANR	157592	ExpressionStatement	ff -> need_decrypt = 1	1119:4:36842:36862	157486	11	True				
ANR	157593	AssignmentExpression	ff -> need_decrypt = 1		157486	0		=			
ANR	157594	PtrMemberAccess	ff -> need_decrypt		157486	0					
ANR	157595	Identifier	ff		157486	0					
ANR	157596	Identifier	need_decrypt		157486	1					
ANR	157597	PrimaryExpression	1		157486	1					
ANR	157598	IfStatement	if ( d == 0 )		157486	12					
ANR	157599	Condition	d == 0	1120:8:36872:36877	157486	0	True				
ANR	157600	EqualityExpression	d == 0		157486	0		==			
ANR	157601	Identifier	d		157486	0					
ANR	157602	PrimaryExpression	0		157486	1					
ANR	157603	CompoundStatement		30:16:1022:1022	157486	1					
ANR	157604	IfStatement	"if ( ( code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d ) ) != 0 )"		157486	0					
ANR	157605	Condition	"( code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d ) ) != 0"	1121:12:36894:36957	157486	0	True				
ANR	157606	EqualityExpression	"( code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d ) ) != 0"		157486	0		!=			
ANR	157607	AssignmentExpression	"code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d )"		157486	0		=			
ANR	157608	Identifier	code		157486	0					
ANR	157609	CallExpression	"ufst_make_font_data ( r , ff -> font_file_path , ff , & d )"		157486	1					
ANR	157610	Callee	ufst_make_font_data		157486	0					
ANR	157611	Identifier	ufst_make_font_data		157486	0					
ANR	157612	ArgumentList	r		157486	1					
ANR	157613	Argument	r		157486	0					
ANR	157614	Identifier	r		157486	0					
ANR	157615	Argument	ff -> font_file_path		157486	1					
ANR	157616	PtrMemberAccess	ff -> font_file_path		157486	0					
ANR	157617	Identifier	ff		157486	0					
ANR	157618	Identifier	font_file_path		157486	1					
ANR	157619	Argument	ff		157486	2					
ANR	157620	Identifier	ff		157486	0					
ANR	157621	Argument	& d		157486	3					
ANR	157622	UnaryOperationExpression	& d		157486	0					
ANR	157623	UnaryOperator	&		157486	0					
ANR	157624	Identifier	d		157486	1					
ANR	157625	PrimaryExpression	0		157486	1					
ANR	157626	ReturnStatement	return code ;	1122:12:36972:36983	157486	1	True				
ANR	157627	Identifier	code		157486	0					
ANR	157628	ExpressionStatement	ff -> server_font_data = d	1123:8:36993:37017	157486	1	True				
ANR	157629	AssignmentExpression	ff -> server_font_data = d		157486	0		=			
ANR	157630	PtrMemberAccess	ff -> server_font_data		157486	0					
ANR	157631	Identifier	ff		157486	0					
ANR	157632	Identifier	server_font_data		157486	1					
ANR	157633	Identifier	d		157486	1					
ANR	157634	ExpressionStatement	"prepare_typeface ( r , d )"	1124:8:37027:37049	157486	2	True				
ANR	157635	CallExpression	"prepare_typeface ( r , d )"		157486	0					
ANR	157636	Callee	prepare_typeface		157486	0					
ANR	157637	Identifier	prepare_typeface		157486	0					
ANR	157638	ArgumentList	r		157486	1					
ANR	157639	Argument	r		157486	0					
ANR	157640	Identifier	r		157486	0					
ANR	157641	Argument	d		157486	1					
ANR	157642	Identifier	d		157486	0					
ANR	157643	IfStatement	if ( ff -> font_file_path != NULL || ff -> is_type1 )		157486	3					
ANR	157644	Condition	ff -> font_file_path != NULL || ff -> is_type1	1125:12:37063:37104	157486	0	True				
ANR	157645	OrExpression	ff -> font_file_path != NULL || ff -> is_type1		157486	0		||			
ANR	157646	EqualityExpression	ff -> font_file_path != NULL		157486	0		!=			
ANR	157647	PtrMemberAccess	ff -> font_file_path		157486	0					
ANR	157648	Identifier	ff		157486	0					
ANR	157649	Identifier	font_file_path		157486	1					
ANR	157650	Identifier	NULL		157486	1					
ANR	157651	PtrMemberAccess	ff -> is_type1		157486	1					
ANR	157652	Identifier	ff		157486	0					
ANR	157653	Identifier	is_type1		157486	1					
ANR	157654	ExpressionStatement	"choose_decoding ( r , d , xlatmap )"	1126:12:37156:37186	157486	1	True				
ANR	157655	CallExpression	"choose_decoding ( r , d , xlatmap )"		157486	0					
ANR	157656	Callee	choose_decoding		157486	0					
ANR	157657	Identifier	choose_decoding		157486	0					
ANR	157658	ArgumentList	r		157486	1					
ANR	157659	Argument	r		157486	0					
ANR	157660	Identifier	r		157486	0					
ANR	157661	Argument	d		157486	1					
ANR	157662	Identifier	d		157486	0					
ANR	157663	Argument	xlatmap		157486	2					
ANR	157664	Identifier	xlatmap		157486	0					
ANR	157665	ElseStatement	else		157486	0					
ANR	157666	CompoundStatement		38:9:1345:1345	157486	0					
ANR	157667	ExpressionStatement	"prepare_typeface ( r , d )"	1129:8:37213:37235	157486	0	True				
ANR	157668	CallExpression	"prepare_typeface ( r , d )"		157486	0					
ANR	157669	Callee	prepare_typeface		157486	0					
ANR	157670	Identifier	prepare_typeface		157486	0					
ANR	157671	ArgumentList	r		157486	1					
ANR	157672	Argument	r		157486	0					
ANR	157673	Identifier	r		157486	0					
ANR	157674	Argument	d		157486	1					
ANR	157675	Identifier	d		157486	0					
ANR	157676	IfStatement	if ( ff -> font_file_path != NULL || ff -> is_type1 )		157486	1					
ANR	157677	Condition	ff -> font_file_path != NULL || ff -> is_type1	1130:12:37249:37290	157486	0	True				
ANR	157678	OrExpression	ff -> font_file_path != NULL || ff -> is_type1		157486	0		||			
ANR	157679	EqualityExpression	ff -> font_file_path != NULL		157486	0		!=			
ANR	157680	PtrMemberAccess	ff -> font_file_path		157486	0					
ANR	157681	Identifier	ff		157486	0					
ANR	157682	Identifier	font_file_path		157486	1					
ANR	157683	Identifier	NULL		157486	1					
ANR	157684	PtrMemberAccess	ff -> is_type1		157486	1					
ANR	157685	Identifier	ff		157486	0					
ANR	157686	Identifier	is_type1		157486	1					
ANR	157687	ExpressionStatement	"choose_decoding ( r , d , xlatmap )"	1131:12:37342:37372	157486	1	True				
ANR	157688	CallExpression	"choose_decoding ( r , d , xlatmap )"		157486	0					
ANR	157689	Callee	choose_decoding		157486	0					
ANR	157690	Identifier	choose_decoding		157486	0					
ANR	157691	ArgumentList	r		157486	1					
ANR	157692	Argument	r		157486	0					
ANR	157693	Identifier	r		157486	0					
ANR	157694	Argument	d		157486	1					
ANR	157695	Identifier	d		157486	0					
ANR	157696	Argument	xlatmap		157486	2					
ANR	157697	Identifier	xlatmap		157486	0					
ANR	157698	ExpressionStatement	"r -> tran_xx = font_scale -> matrix [ 0 ] / scale , r -> tran_xy = font_scale -> matrix [ 1 ] / scale"	1134:4:37385:37479	157486	13	True				
ANR	157699	Expression	"r -> tran_xx = font_scale -> matrix [ 0 ] / scale , r -> tran_xy = font_scale -> matrix [ 1 ] / scale"		157486	0					
ANR	157700	AssignmentExpression	r -> tran_xx = font_scale -> matrix [ 0 ] / scale		157486	0		=			
ANR	157701	PtrMemberAccess	r -> tran_xx		157486	0					
ANR	157702	Identifier	r		157486	0					
ANR	157703	Identifier	tran_xx		157486	1					
ANR	157704	MultiplicativeExpression	font_scale -> matrix [ 0 ] / scale		157486	1		/			
ANR	157705	ArrayIndexing	font_scale -> matrix [ 0 ]		157486	0					
ANR	157706	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157707	Identifier	font_scale		157486	0					
ANR	157708	Identifier	matrix		157486	1					
ANR	157709	PrimaryExpression	0		157486	1					
ANR	157710	Identifier	scale		157486	1					
ANR	157711	AssignmentExpression	r -> tran_xy = font_scale -> matrix [ 1 ] / scale		157486	1		=			
ANR	157712	PtrMemberAccess	r -> tran_xy		157486	0					
ANR	157713	Identifier	r		157486	0					
ANR	157714	Identifier	tran_xy		157486	1					
ANR	157715	MultiplicativeExpression	font_scale -> matrix [ 1 ] / scale		157486	1		/			
ANR	157716	ArrayIndexing	font_scale -> matrix [ 1 ]		157486	0					
ANR	157717	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157718	Identifier	font_scale		157486	0					
ANR	157719	Identifier	matrix		157486	1					
ANR	157720	PrimaryExpression	1		157486	1					
ANR	157721	Identifier	scale		157486	1					
ANR	157722	ExpressionStatement	"r -> tran_yx = font_scale -> matrix [ 2 ] / scale , r -> tran_yy = font_scale -> matrix [ 3 ] / scale"	1136:4:37485:37579	157486	14	True				
ANR	157723	Expression	"r -> tran_yx = font_scale -> matrix [ 2 ] / scale , r -> tran_yy = font_scale -> matrix [ 3 ] / scale"		157486	0					
ANR	157724	AssignmentExpression	r -> tran_yx = font_scale -> matrix [ 2 ] / scale		157486	0		=			
ANR	157725	PtrMemberAccess	r -> tran_yx		157486	0					
ANR	157726	Identifier	r		157486	0					
ANR	157727	Identifier	tran_yx		157486	1					
ANR	157728	MultiplicativeExpression	font_scale -> matrix [ 2 ] / scale		157486	1		/			
ANR	157729	ArrayIndexing	font_scale -> matrix [ 2 ]		157486	0					
ANR	157730	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157731	Identifier	font_scale		157486	0					
ANR	157732	Identifier	matrix		157486	1					
ANR	157733	PrimaryExpression	2		157486	1					
ANR	157734	Identifier	scale		157486	1					
ANR	157735	AssignmentExpression	r -> tran_yy = font_scale -> matrix [ 3 ] / scale		157486	1		=			
ANR	157736	PtrMemberAccess	r -> tran_yy		157486	0					
ANR	157737	Identifier	r		157486	0					
ANR	157738	Identifier	tran_yy		157486	1					
ANR	157739	MultiplicativeExpression	font_scale -> matrix [ 3 ] / scale		157486	1		/			
ANR	157740	ArrayIndexing	font_scale -> matrix [ 3 ]		157486	0					
ANR	157741	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157742	Identifier	font_scale		157486	0					
ANR	157743	Identifier	matrix		157486	1					
ANR	157744	PrimaryExpression	3		157486	1					
ANR	157745	Identifier	scale		157486	1					
ANR	157746	ExpressionStatement	"hx = hypot ( r -> tran_xx , r -> tran_xy ) , hy = hypot ( r -> tran_yx , r -> tran_yy )"	1138:4:37585:37655	157486	15	True				
ANR	157747	Expression	"hx = hypot ( r -> tran_xx , r -> tran_xy ) , hy = hypot ( r -> tran_yx , r -> tran_yy )"		157486	0					
ANR	157748	AssignmentExpression	"hx = hypot ( r -> tran_xx , r -> tran_xy )"		157486	0		=			
ANR	157749	Identifier	hx		157486	0					
ANR	157750	CallExpression	"hypot ( r -> tran_xx , r -> tran_xy )"		157486	1					
ANR	157751	Callee	hypot		157486	0					
ANR	157752	Identifier	hypot		157486	0					
ANR	157753	ArgumentList	r -> tran_xx		157486	1					
ANR	157754	Argument	r -> tran_xx		157486	0					
ANR	157755	PtrMemberAccess	r -> tran_xx		157486	0					
ANR	157756	Identifier	r		157486	0					
ANR	157757	Identifier	tran_xx		157486	1					
ANR	157758	Argument	r -> tran_xy		157486	1					
ANR	157759	PtrMemberAccess	r -> tran_xy		157486	0					
ANR	157760	Identifier	r		157486	0					
ANR	157761	Identifier	tran_xy		157486	1					
ANR	157762	AssignmentExpression	"hy = hypot ( r -> tran_yx , r -> tran_yy )"		157486	1		=			
ANR	157763	Identifier	hy		157486	0					
ANR	157764	CallExpression	"hypot ( r -> tran_yx , r -> tran_yy )"		157486	1					
ANR	157765	Callee	hypot		157486	0					
ANR	157766	Identifier	hypot		157486	0					
ANR	157767	ArgumentList	r -> tran_yx		157486	1					
ANR	157768	Argument	r -> tran_yx		157486	0					
ANR	157769	PtrMemberAccess	r -> tran_yx		157486	0					
ANR	157770	Identifier	r		157486	0					
ANR	157771	Identifier	tran_yx		157486	1					
ANR	157772	Argument	r -> tran_yy		157486	1					
ANR	157773	PtrMemberAccess	r -> tran_yy		157486	0					
ANR	157774	Identifier	r		157486	0					
ANR	157775	Identifier	tran_yy		157486	1					
ANR	157776	ExpressionStatement	fc -> xspot = F_ONE	1139:4:37661:37678	157486	16	True				
ANR	157777	AssignmentExpression	fc -> xspot = F_ONE		157486	0		=			
ANR	157778	PtrMemberAccess	fc -> xspot		157486	0					
ANR	157779	Identifier	fc		157486	0					
ANR	157780	Identifier	xspot		157486	1					
ANR	157781	Identifier	F_ONE		157486	1					
ANR	157782	ExpressionStatement	fc -> yspot = F_ONE	1140:4:37684:37701	157486	17	True				
ANR	157783	AssignmentExpression	fc -> yspot = F_ONE		157486	0		=			
ANR	157784	PtrMemberAccess	fc -> yspot		157486	0					
ANR	157785	Identifier	fc		157486	0					
ANR	157786	Identifier	yspot		157486	1					
ANR	157787	Identifier	F_ONE		157486	1					
ANR	157788	ExpressionStatement	fc -> fc_type = FC_MAT2_TYPE	1141:4:37707:37733	157486	18	True				
ANR	157789	AssignmentExpression	fc -> fc_type = FC_MAT2_TYPE		157486	0		=			
ANR	157790	PtrMemberAccess	fc -> fc_type		157486	0					
ANR	157791	Identifier	fc		157486	0					
ANR	157792	Identifier	fc_type		157486	1					
ANR	157793	Identifier	FC_MAT2_TYPE		157486	1					
ANR	157794	ExpressionStatement	fc -> s . m2 . m [ 0 ] = ( int ) ( ( double ) font_scale -> matrix [ 0 ] / hx + 0.5 )	1143:4:37740:37803	157486	19	True				
ANR	157795	AssignmentExpression	fc -> s . m2 . m [ 0 ] = ( int ) ( ( double ) font_scale -> matrix [ 0 ] / hx + 0.5 )		157486	0		=			
ANR	157796	ArrayIndexing	fc -> s . m2 . m [ 0 ]		157486	0					
ANR	157797	MemberAccess	fc -> s . m2 . m		157486	0					
ANR	157798	MemberAccess	fc -> s . m2		157486	0					
ANR	157799	PtrMemberAccess	fc -> s		157486	0					
ANR	157800	Identifier	fc		157486	0					
ANR	157801	Identifier	s		157486	1					
ANR	157802	Identifier	m2		157486	1					
ANR	157803	Identifier	m		157486	1					
ANR	157804	PrimaryExpression	0		157486	1					
ANR	157805	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 0 ] / hx + 0.5 )		157486	1					
ANR	157806	CastTarget	int		157486	0					
ANR	157807	AdditiveExpression	( double ) font_scale -> matrix [ 0 ] / hx + 0.5		157486	1		+			
ANR	157808	MultiplicativeExpression	( double ) font_scale -> matrix [ 0 ] / hx		157486	0		/			
ANR	157809	CastExpression	( double ) font_scale -> matrix [ 0 ]		157486	0					
ANR	157810	CastTarget	double		157486	0					
ANR	157811	ArrayIndexing	font_scale -> matrix [ 0 ]		157486	1					
ANR	157812	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157813	Identifier	font_scale		157486	0					
ANR	157814	Identifier	matrix		157486	1					
ANR	157815	PrimaryExpression	0		157486	1					
ANR	157816	Identifier	hx		157486	1					
ANR	157817	PrimaryExpression	0.5		157486	1					
ANR	157818	ExpressionStatement	fc -> s . m2 . m [ 1 ] = ( int ) ( ( double ) font_scale -> matrix [ 1 ] / hx + 0.5 )	1144:4:37809:37872	157486	20	True				
ANR	157819	AssignmentExpression	fc -> s . m2 . m [ 1 ] = ( int ) ( ( double ) font_scale -> matrix [ 1 ] / hx + 0.5 )		157486	0		=			
ANR	157820	ArrayIndexing	fc -> s . m2 . m [ 1 ]		157486	0					
ANR	157821	MemberAccess	fc -> s . m2 . m		157486	0					
ANR	157822	MemberAccess	fc -> s . m2		157486	0					
ANR	157823	PtrMemberAccess	fc -> s		157486	0					
ANR	157824	Identifier	fc		157486	0					
ANR	157825	Identifier	s		157486	1					
ANR	157826	Identifier	m2		157486	1					
ANR	157827	Identifier	m		157486	1					
ANR	157828	PrimaryExpression	1		157486	1					
ANR	157829	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 1 ] / hx + 0.5 )		157486	1					
ANR	157830	CastTarget	int		157486	0					
ANR	157831	AdditiveExpression	( double ) font_scale -> matrix [ 1 ] / hx + 0.5		157486	1		+			
ANR	157832	MultiplicativeExpression	( double ) font_scale -> matrix [ 1 ] / hx		157486	0		/			
ANR	157833	CastExpression	( double ) font_scale -> matrix [ 1 ]		157486	0					
ANR	157834	CastTarget	double		157486	0					
ANR	157835	ArrayIndexing	font_scale -> matrix [ 1 ]		157486	1					
ANR	157836	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157837	Identifier	font_scale		157486	0					
ANR	157838	Identifier	matrix		157486	1					
ANR	157839	PrimaryExpression	1		157486	1					
ANR	157840	Identifier	hx		157486	1					
ANR	157841	PrimaryExpression	0.5		157486	1					
ANR	157842	ExpressionStatement	fc -> s . m2 . m [ 2 ] = ( int ) ( ( double ) font_scale -> matrix [ 2 ] / hy + 0.5 )	1145:4:37878:37941	157486	21	True				
ANR	157843	AssignmentExpression	fc -> s . m2 . m [ 2 ] = ( int ) ( ( double ) font_scale -> matrix [ 2 ] / hy + 0.5 )		157486	0		=			
ANR	157844	ArrayIndexing	fc -> s . m2 . m [ 2 ]		157486	0					
ANR	157845	MemberAccess	fc -> s . m2 . m		157486	0					
ANR	157846	MemberAccess	fc -> s . m2		157486	0					
ANR	157847	PtrMemberAccess	fc -> s		157486	0					
ANR	157848	Identifier	fc		157486	0					
ANR	157849	Identifier	s		157486	1					
ANR	157850	Identifier	m2		157486	1					
ANR	157851	Identifier	m		157486	1					
ANR	157852	PrimaryExpression	2		157486	1					
ANR	157853	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 2 ] / hy + 0.5 )		157486	1					
ANR	157854	CastTarget	int		157486	0					
ANR	157855	AdditiveExpression	( double ) font_scale -> matrix [ 2 ] / hy + 0.5		157486	1		+			
ANR	157856	MultiplicativeExpression	( double ) font_scale -> matrix [ 2 ] / hy		157486	0		/			
ANR	157857	CastExpression	( double ) font_scale -> matrix [ 2 ]		157486	0					
ANR	157858	CastTarget	double		157486	0					
ANR	157859	ArrayIndexing	font_scale -> matrix [ 2 ]		157486	1					
ANR	157860	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157861	Identifier	font_scale		157486	0					
ANR	157862	Identifier	matrix		157486	1					
ANR	157863	PrimaryExpression	2		157486	1					
ANR	157864	Identifier	hy		157486	1					
ANR	157865	PrimaryExpression	0.5		157486	1					
ANR	157866	ExpressionStatement	fc -> s . m2 . m [ 3 ] = ( int ) ( ( double ) font_scale -> matrix [ 3 ] / hy + 0.5 )	1146:4:37947:38010	157486	22	True				
ANR	157867	AssignmentExpression	fc -> s . m2 . m [ 3 ] = ( int ) ( ( double ) font_scale -> matrix [ 3 ] / hy + 0.5 )		157486	0		=			
ANR	157868	ArrayIndexing	fc -> s . m2 . m [ 3 ]		157486	0					
ANR	157869	MemberAccess	fc -> s . m2 . m		157486	0					
ANR	157870	MemberAccess	fc -> s . m2		157486	0					
ANR	157871	PtrMemberAccess	fc -> s		157486	0					
ANR	157872	Identifier	fc		157486	0					
ANR	157873	Identifier	s		157486	1					
ANR	157874	Identifier	m2		157486	1					
ANR	157875	Identifier	m		157486	1					
ANR	157876	PrimaryExpression	3		157486	1					
ANR	157877	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 3 ] / hy + 0.5 )		157486	1					
ANR	157878	CastTarget	int		157486	0					
ANR	157879	AdditiveExpression	( double ) font_scale -> matrix [ 3 ] / hy + 0.5		157486	1		+			
ANR	157880	MultiplicativeExpression	( double ) font_scale -> matrix [ 3 ] / hy		157486	0		/			
ANR	157881	CastExpression	( double ) font_scale -> matrix [ 3 ]		157486	0					
ANR	157882	CastTarget	double		157486	0					
ANR	157883	ArrayIndexing	font_scale -> matrix [ 3 ]		157486	1					
ANR	157884	PtrMemberAccess	font_scale -> matrix		157486	0					
ANR	157885	Identifier	font_scale		157486	0					
ANR	157886	Identifier	matrix		157486	1					
ANR	157887	PrimaryExpression	3		157486	1					
ANR	157888	Identifier	hy		157486	1					
ANR	157889	PrimaryExpression	0.5		157486	1					
ANR	157890	ExpressionStatement	fc -> s . m2 . matrix_scale = 16	1147:4:38016:38042	157486	23	True				
ANR	157891	AssignmentExpression	fc -> s . m2 . matrix_scale = 16		157486	0		=			
ANR	157892	MemberAccess	fc -> s . m2 . matrix_scale		157486	0					
ANR	157893	MemberAccess	fc -> s . m2		157486	0					
ANR	157894	PtrMemberAccess	fc -> s		157486	0					
ANR	157895	Identifier	fc		157486	0					
ANR	157896	Identifier	s		157486	1					
ANR	157897	Identifier	m2		157486	1					
ANR	157898	Identifier	matrix_scale		157486	1					
ANR	157899	PrimaryExpression	16		157486	1					
ANR	157900	ExpressionStatement	fc -> s . m2 . xworld_res = font_scale -> HWResolution [ 0 ] >> 16	1148:4:38048:38103	157486	24	True				
ANR	157901	AssignmentExpression	fc -> s . m2 . xworld_res = font_scale -> HWResolution [ 0 ] >> 16		157486	0		=			
ANR	157902	MemberAccess	fc -> s . m2 . xworld_res		157486	0					
ANR	157903	MemberAccess	fc -> s . m2		157486	0					
ANR	157904	PtrMemberAccess	fc -> s		157486	0					
ANR	157905	Identifier	fc		157486	0					
ANR	157906	Identifier	s		157486	1					
ANR	157907	Identifier	m2		157486	1					
ANR	157908	Identifier	xworld_res		157486	1					
ANR	157909	ShiftExpression	font_scale -> HWResolution [ 0 ] >> 16		157486	1		>>			
ANR	157910	ArrayIndexing	font_scale -> HWResolution [ 0 ]		157486	0					
ANR	157911	PtrMemberAccess	font_scale -> HWResolution		157486	0					
ANR	157912	Identifier	font_scale		157486	0					
ANR	157913	Identifier	HWResolution		157486	1					
ANR	157914	PrimaryExpression	0		157486	1					
ANR	157915	PrimaryExpression	16		157486	1					
ANR	157916	ExpressionStatement	fc -> s . m2 . yworld_res = font_scale -> HWResolution [ 1 ] >> 16	1149:4:38109:38164	157486	25	True				
ANR	157917	AssignmentExpression	fc -> s . m2 . yworld_res = font_scale -> HWResolution [ 1 ] >> 16		157486	0		=			
ANR	157918	MemberAccess	fc -> s . m2 . yworld_res		157486	0					
ANR	157919	MemberAccess	fc -> s . m2		157486	0					
ANR	157920	PtrMemberAccess	fc -> s		157486	0					
ANR	157921	Identifier	fc		157486	0					
ANR	157922	Identifier	s		157486	1					
ANR	157923	Identifier	m2		157486	1					
ANR	157924	Identifier	yworld_res		157486	1					
ANR	157925	ShiftExpression	font_scale -> HWResolution [ 1 ] >> 16		157486	1		>>			
ANR	157926	ArrayIndexing	font_scale -> HWResolution [ 1 ]		157486	0					
ANR	157927	PtrMemberAccess	font_scale -> HWResolution		157486	0					
ANR	157928	Identifier	font_scale		157486	0					
ANR	157929	Identifier	HWResolution		157486	1					
ANR	157930	PrimaryExpression	1		157486	1					
ANR	157931	PrimaryExpression	16		157486	1					
ANR	157932	IfStatement	if ( ( hx > 0 && hy > 0 ) && ( hx < 1.5 || hy < 1.5 ) )		157486	26					
ANR	157933	Condition	( hx > 0 && hy > 0 ) && ( hx < 1.5 || hy < 1.5 )	1151:8:38175:38218	157486	0	True				
ANR	157934	AndExpression	( hx > 0 && hy > 0 ) && ( hx < 1.5 || hy < 1.5 )		157486	0		&&			
ANR	157935	AndExpression	hx > 0 && hy > 0		157486	0		&&			
ANR	157936	RelationalExpression	hx > 0		157486	0		>			
ANR	157937	Identifier	hx		157486	0					
ANR	157938	PrimaryExpression	0		157486	1					
ANR	157939	RelationalExpression	hy > 0		157486	1		>			
ANR	157940	Identifier	hy		157486	0					
ANR	157941	PrimaryExpression	0		157486	1					
ANR	157942	OrExpression	hx < 1.5 || hy < 1.5		157486	1		||			
ANR	157943	RelationalExpression	hx < 1.5		157486	0		<			
ANR	157944	Identifier	hx		157486	0					
ANR	157945	PrimaryExpression	1.5		157486	1					
ANR	157946	RelationalExpression	hy < 1.5		157486	1		<			
ANR	157947	Identifier	hy		157486	0					
ANR	157948	PrimaryExpression	1.5		157486	1					
ANR	157949	CompoundStatement		61:54:2363:2363	157486	1					
ANR	157950	ExpressionStatement	world_scale = 8	1152:8:38231:38246	157486	0	True				
ANR	157951	AssignmentExpression	world_scale = 8		157486	0		=			
ANR	157952	Identifier	world_scale		157486	0					
ANR	157953	PrimaryExpression	8		157486	1					
ANR	157954	ExpressionStatement	hx *= 256	1153:8:38256:38265	157486	1	True				
ANR	157955	AssignmentExpression	hx *= 256		157486	0		*=			
ANR	157956	Identifier	hx		157486	0					
ANR	157957	PrimaryExpression	256		157486	1					
ANR	157958	ExpressionStatement	hy *= 256	1154:8:38275:38284	157486	2	True				
ANR	157959	AssignmentExpression	hy *= 256		157486	0		*=			
ANR	157960	Identifier	hy		157486	0					
ANR	157961	PrimaryExpression	256		157486	1					
ANR	157962	WhileStatement	while ( hx < 1.5 || hy < 1.5 )		157486	3					
ANR	157963	Condition	hx < 1.5 || hy < 1.5	1156:15:38302:38321	157486	0	True				
ANR	157964	OrExpression	hx < 1.5 || hy < 1.5		157486	0		||			
ANR	157965	RelationalExpression	hx < 1.5		157486	0		<			
ANR	157966	Identifier	hx		157486	0					
ANR	157967	PrimaryExpression	1.5		157486	1					
ANR	157968	RelationalExpression	hy < 1.5		157486	1		<			
ANR	157969	Identifier	hy		157486	0					
ANR	157970	PrimaryExpression	1.5		157486	1					
ANR	157971	CompoundStatement		66:37:2466:2466	157486	1					
ANR	157972	ExpressionStatement	world_scale += 1	1157:12:38338:38354	157486	0	True				
ANR	157973	AssignmentExpression	world_scale += 1		157486	0		+=			
ANR	157974	Identifier	world_scale		157486	0					
ANR	157975	PrimaryExpression	1		157486	1					
ANR	157976	ExpressionStatement	hx *= 10	1158:12:38368:38376	157486	1	True				
ANR	157977	AssignmentExpression	hx *= 10		157486	0		*=			
ANR	157978	Identifier	hx		157486	0					
ANR	157979	PrimaryExpression	10		157486	1					
ANR	157980	ExpressionStatement	hy *= 10	1159:12:38390:38398	157486	2	True				
ANR	157981	AssignmentExpression	hy *= 10		157486	0		*=			
ANR	157982	Identifier	hy		157486	0					
ANR	157983	PrimaryExpression	10		157486	1					
ANR	157984	ExpressionStatement	fc -> s . m2 . world_scale = world_scale	1162:4:38420:38454	157486	27	True				
ANR	157985	AssignmentExpression	fc -> s . m2 . world_scale = world_scale		157486	0		=			
ANR	157986	MemberAccess	fc -> s . m2 . world_scale		157486	0					
ANR	157987	MemberAccess	fc -> s . m2		157486	0					
ANR	157988	PtrMemberAccess	fc -> s		157486	0					
ANR	157989	Identifier	fc		157486	0					
ANR	157990	Identifier	s		157486	1					
ANR	157991	Identifier	m2		157486	1					
ANR	157992	Identifier	world_scale		157486	1					
ANR	157993	Identifier	world_scale		157486	1					
ANR	157994	ExpressionStatement	fc -> s . m2 . point_size = ( int ) ( hy * 8 + 0.5 )	1163:4:38460:38501	157486	28	True				
ANR	157995	AssignmentExpression	fc -> s . m2 . point_size = ( int ) ( hy * 8 + 0.5 )		157486	0		=			
ANR	157996	MemberAccess	fc -> s . m2 . point_size		157486	0					
ANR	157997	MemberAccess	fc -> s . m2		157486	0					
ANR	157998	PtrMemberAccess	fc -> s		157486	0					
ANR	157999	Identifier	fc		157486	0					
ANR	158000	Identifier	s		157486	1					
ANR	158001	Identifier	m2		157486	1					
ANR	158002	Identifier	point_size		157486	1					
ANR	158003	CastExpression	( int ) ( hy * 8 + 0.5 )		157486	1					
ANR	158004	CastTarget	int		157486	0					
ANR	158005	AdditiveExpression	hy * 8 + 0.5		157486	1		+			
ANR	158006	MultiplicativeExpression	hy * 8		157486	0		*			
ANR	158007	Identifier	hy		157486	0					
ANR	158008	PrimaryExpression	8		157486	1					
ANR	158009	PrimaryExpression	0.5		157486	1					
ANR	158010	ExpressionStatement	fc -> s . m2 . set_size = ( int ) ( hx * 8 + 0.5 )	1164:4:38531:38570	157486	29	True				
ANR	158011	AssignmentExpression	fc -> s . m2 . set_size = ( int ) ( hx * 8 + 0.5 )		157486	0		=			
ANR	158012	MemberAccess	fc -> s . m2 . set_size		157486	0					
ANR	158013	MemberAccess	fc -> s . m2		157486	0					
ANR	158014	PtrMemberAccess	fc -> s		157486	0					
ANR	158015	Identifier	fc		157486	0					
ANR	158016	Identifier	s		157486	1					
ANR	158017	Identifier	m2		157486	1					
ANR	158018	Identifier	set_size		157486	1					
ANR	158019	CastExpression	( int ) ( hx * 8 + 0.5 )		157486	1					
ANR	158020	CastTarget	int		157486	0					
ANR	158021	AdditiveExpression	hx * 8 + 0.5		157486	1		+			
ANR	158022	MultiplicativeExpression	hx * 8		157486	0		*			
ANR	158023	Identifier	hx		157486	0					
ANR	158024	PrimaryExpression	8		157486	1					
ANR	158025	PrimaryExpression	0.5		157486	1					
ANR	158026	ExpressionStatement	fc -> numXsubpixels = font_scale -> subpixels [ 0 ]	1167:4:38593:38637	157486	30	True				
ANR	158027	AssignmentExpression	fc -> numXsubpixels = font_scale -> subpixels [ 0 ]		157486	0		=			
ANR	158028	PtrMemberAccess	fc -> numXsubpixels		157486	0					
ANR	158029	Identifier	fc		157486	0					
ANR	158030	Identifier	numXsubpixels		157486	1					
ANR	158031	ArrayIndexing	font_scale -> subpixels [ 0 ]		157486	1					
ANR	158032	PtrMemberAccess	font_scale -> subpixels		157486	0					
ANR	158033	Identifier	font_scale		157486	0					
ANR	158034	Identifier	subpixels		157486	1					
ANR	158035	PrimaryExpression	0		157486	1					
ANR	158036	ExpressionStatement	fc -> numYsubpixels = font_scale -> subpixels [ 1 ]	1168:4:38643:38687	157486	31	True				
ANR	158037	AssignmentExpression	fc -> numYsubpixels = font_scale -> subpixels [ 1 ]		157486	0		=			
ANR	158038	PtrMemberAccess	fc -> numYsubpixels		157486	0					
ANR	158039	Identifier	fc		157486	0					
ANR	158040	Identifier	numYsubpixels		157486	1					
ANR	158041	ArrayIndexing	font_scale -> subpixels [ 1 ]		157486	1					
ANR	158042	PtrMemberAccess	font_scale -> subpixels		157486	0					
ANR	158043	Identifier	font_scale		157486	0					
ANR	158044	Identifier	subpixels		157486	1					
ANR	158045	PrimaryExpression	1		157486	1					
ANR	158046	ExpressionStatement	fc -> alignment = ( font_scale -> align_to_pixels ? GAGG : GAPP )	1169:4:38693:38752	157486	32	True				
ANR	158047	AssignmentExpression	fc -> alignment = ( font_scale -> align_to_pixels ? GAGG : GAPP )		157486	0		=			
ANR	158048	PtrMemberAccess	fc -> alignment		157486	0					
ANR	158049	Identifier	fc		157486	0					
ANR	158050	Identifier	alignment		157486	1					
ANR	158051	ConditionalExpression	font_scale -> align_to_pixels ? GAGG : GAPP		157486	1					
ANR	158052	Condition	font_scale -> align_to_pixels		157486	0					
ANR	158053	PtrMemberAccess	font_scale -> align_to_pixels		157486	0					
ANR	158054	Identifier	font_scale		157486	0					
ANR	158055	Identifier	align_to_pixels		157486	1					
ANR	158056	Identifier	GAGG		157486	1					
ANR	158057	Identifier	GAPP		157486	2					
ANR	158058	ExpressionStatement	fc -> ExtndFlags = 0	1172:4:38766:38784	157486	33	True				
ANR	158059	AssignmentExpression	fc -> ExtndFlags = 0		157486	0		=			
ANR	158060	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158061	Identifier	fc		157486	0					
ANR	158062	Identifier	ExtndFlags		157486	1					
ANR	158063	PrimaryExpression	0		157486	1					
ANR	158064	IfStatement	if ( d -> font_type == FC_TT_TYPE )		157486	34					
ANR	158065	Condition	d -> font_type == FC_TT_TYPE	1173:8:38794:38819	157486	0	True				
ANR	158066	EqualityExpression	d -> font_type == FC_TT_TYPE		157486	0		==			
ANR	158067	PtrMemberAccess	d -> font_type		157486	0					
ANR	158068	Identifier	d		157486	0					
ANR	158069	Identifier	font_type		157486	1					
ANR	158070	Identifier	FC_TT_TYPE		157486	1					
ANR	158071	CompoundStatement		83:36:2964:2964	157486	1					
ANR	158072	ExpressionStatement	fc -> ExtndFlags |= EF_TT_ERRORCHECK_ON	1175:8:38860:38897	157486	0	True				
ANR	158073	AssignmentExpression	fc -> ExtndFlags |= EF_TT_ERRORCHECK_ON		157486	0		|=			
ANR	158074	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158075	Identifier	fc		157486	0					
ANR	158076	Identifier	ExtndFlags		157486	1					
ANR	158077	Identifier	EF_TT_ERRORCHECK_ON		157486	1					
ANR	158078	ExpressionStatement	fc -> ssnum = USER_CMAP	1177:8:38914:38935	157486	1	True				
ANR	158079	AssignmentExpression	fc -> ssnum = USER_CMAP		157486	0		=			
ANR	158080	PtrMemberAccess	fc -> ssnum		157486	0					
ANR	158081	Identifier	fc		157486	0					
ANR	158082	Identifier	ssnum		157486	1					
ANR	158083	Identifier	USER_CMAP		157486	1					
ANR	158084	ElseStatement	else		157486	0					
ANR	158085	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		157486	0					
ANR	158086	Condition	d -> font_type == FC_FCO_TYPE	1179:13:38956:38982	157486	0	True				
ANR	158087	EqualityExpression	d -> font_type == FC_FCO_TYPE		157486	0		==			
ANR	158088	PtrMemberAccess	d -> font_type		157486	0					
ANR	158089	Identifier	d		157486	0					
ANR	158090	Identifier	font_type		157486	1					
ANR	158091	Identifier	FC_FCO_TYPE		157486	1					
ANR	158092	CompoundStatement		89:42:3127:3127	157486	1					
ANR	158093	ExpressionStatement	fc -> ssnum = UNICODE	1180:8:38995:39014	157486	0	True				
ANR	158094	AssignmentExpression	fc -> ssnum = UNICODE		157486	0		=			
ANR	158095	PtrMemberAccess	fc -> ssnum		157486	0					
ANR	158096	Identifier	fc		157486	0					
ANR	158097	Identifier	ssnum		157486	1					
ANR	158098	Identifier	UNICODE		157486	1					
ANR	158099	ElseStatement	else		157486	0					
ANR	158100	IfStatement	if ( d -> font_type == FC_PST1_TYPE )		157486	0					
ANR	158101	Condition	d -> font_type == FC_PST1_TYPE	1182:13:39035:39062	157486	0	True				
ANR	158102	EqualityExpression	d -> font_type == FC_PST1_TYPE		157486	0		==			
ANR	158103	PtrMemberAccess	d -> font_type		157486	0					
ANR	158104	Identifier	d		157486	0					
ANR	158105	Identifier	font_type		157486	1					
ANR	158106	Identifier	FC_PST1_TYPE		157486	1					
ANR	158107	CompoundStatement		92:43:3207:3207	157486	1					
ANR	158108	ExpressionStatement	fc -> ssnum = T1ENCODING	1183:8:39075:39097	157486	0	True				
ANR	158109	AssignmentExpression	fc -> ssnum = T1ENCODING		157486	0		=			
ANR	158110	PtrMemberAccess	fc -> ssnum		157486	0					
ANR	158111	Identifier	fc		157486	0					
ANR	158112	Identifier	ssnum		157486	1					
ANR	158113	Identifier	T1ENCODING		157486	1					
ANR	158114	IfStatement	if ( d -> font_type != FC_TT_TYPE && d -> font_type != FC_FCO_TYPE )		157486	35					
ANR	158115	Condition	d -> font_type != FC_TT_TYPE && d -> font_type != FC_FCO_TYPE	1186:8:39114:39170	157486	0	True				
ANR	158116	AndExpression	d -> font_type != FC_TT_TYPE && d -> font_type != FC_FCO_TYPE		157486	0		&&			
ANR	158117	EqualityExpression	d -> font_type != FC_TT_TYPE		157486	0		!=			
ANR	158118	PtrMemberAccess	d -> font_type		157486	0					
ANR	158119	Identifier	d		157486	0					
ANR	158120	Identifier	font_type		157486	1					
ANR	158121	Identifier	FC_TT_TYPE		157486	1					
ANR	158122	EqualityExpression	d -> font_type != FC_FCO_TYPE		157486	1		!=			
ANR	158123	PtrMemberAccess	d -> font_type		157486	0					
ANR	158124	Identifier	d		157486	0					
ANR	158125	Identifier	font_type		157486	1					
ANR	158126	Identifier	FC_FCO_TYPE		157486	1					
ANR	158127	CompoundStatement		96:67:3315:3315	157486	1					
ANR	158128	ExpressionStatement	fc -> ExtndFlags |= EF_NOSYMSETMAP	1187:8:39183:39215	157486	0	True				
ANR	158129	AssignmentExpression	fc -> ExtndFlags |= EF_NOSYMSETMAP		157486	0		|=			
ANR	158130	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158131	Identifier	fc		157486	0					
ANR	158132	Identifier	ExtndFlags		157486	1					
ANR	158133	Identifier	EF_NOSYMSETMAP		157486	1					
ANR	158134	IfStatement	if ( d -> font_type == FC_TT_TYPE && ! use_XL_format )		157486	36					
ANR	158135	Condition	d -> font_type == FC_TT_TYPE && ! use_XL_format	1190:8:39281:39324	157486	0	True				
ANR	158136	AndExpression	d -> font_type == FC_TT_TYPE && ! use_XL_format		157486	0		&&			
ANR	158137	EqualityExpression	d -> font_type == FC_TT_TYPE		157486	0		==			
ANR	158138	PtrMemberAccess	d -> font_type		157486	0					
ANR	158139	Identifier	d		157486	0					
ANR	158140	Identifier	font_type		157486	1					
ANR	158141	Identifier	FC_TT_TYPE		157486	1					
ANR	158142	UnaryOperationExpression	! use_XL_format		157486	1					
ANR	158143	UnaryOperator	!		157486	0					
ANR	158144	Identifier	use_XL_format		157486	1					
ANR	158145	CompoundStatement		100:54:3469:3469	157486	1					
ANR	158146	ExpressionStatement	fc -> ExtndFlags |= EF_FORMAT16_TYPE	1191:8:39337:39371	157486	0	True				
ANR	158147	AssignmentExpression	fc -> ExtndFlags |= EF_FORMAT16_TYPE		157486	0		|=			
ANR	158148	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158149	Identifier	fc		157486	0					
ANR	158150	Identifier	ExtndFlags		157486	1					
ANR	158151	Identifier	EF_FORMAT16_TYPE		157486	1					
ANR	158152	ExpressionStatement	fc -> format |= FC_NON_Z_WIND	1194:4:39433:39460	157486	37	True				
ANR	158153	AssignmentExpression	fc -> format |= FC_NON_Z_WIND		157486	0		|=			
ANR	158154	PtrMemberAccess	fc -> format		157486	0					
ANR	158155	Identifier	fc		157486	0					
ANR	158156	Identifier	format		157486	1					
ANR	158157	Identifier	FC_NON_Z_WIND		157486	1					
ANR	158158	ExpressionStatement	fc -> format |= FC_INCHES_TYPE	1195:4:39518:39546	157486	38	True				
ANR	158159	AssignmentExpression	fc -> format |= FC_INCHES_TYPE		157486	0		|=			
ANR	158160	PtrMemberAccess	fc -> format		157486	0					
ANR	158161	Identifier	fc		157486	0					
ANR	158162	Identifier	format		157486	1					
ANR	158163	Identifier	FC_INCHES_TYPE		157486	1					
ANR	158164	ExpressionStatement	fc -> user_platID = d -> platformId	1196:4:39589:39620	157486	39	True				
ANR	158165	AssignmentExpression	fc -> user_platID = d -> platformId		157486	0		=			
ANR	158166	PtrMemberAccess	fc -> user_platID		157486	0					
ANR	158167	Identifier	fc		157486	0					
ANR	158168	Identifier	user_platID		157486	1					
ANR	158169	PtrMemberAccess	d -> platformId		157486	1					
ANR	158170	Identifier	d		157486	0					
ANR	158171	Identifier	platformId		157486	1					
ANR	158172	ExpressionStatement	fc -> user_specID = d -> specificId	1197:4:39626:39657	157486	40	True				
ANR	158173	AssignmentExpression	fc -> user_specID = d -> specificId		157486	0		=			
ANR	158174	PtrMemberAccess	fc -> user_specID		157486	0					
ANR	158175	Identifier	fc		157486	0					
ANR	158176	Identifier	user_specID		157486	1					
ANR	158177	PtrMemberAccess	d -> specificId		157486	1					
ANR	158178	Identifier	d		157486	0					
ANR	158179	Identifier	specificId		157486	1					
ANR	158180	IfStatement	if ( use_XL_format )		157486	41					
ANR	158181	Condition	use_XL_format	1198:8:39667:39679	157486	0	True				
ANR	158182	Identifier	use_XL_format		157486	0					
ANR	158183	CompoundStatement		108:23:3824:3824	157486	1					
ANR	158184	ExpressionStatement	fc -> ExtndFlags |= EF_XLFONT_TYPE	1199:8:39692:39724	157486	0	True				
ANR	158185	AssignmentExpression	fc -> ExtndFlags |= EF_XLFONT_TYPE		157486	0		|=			
ANR	158186	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158187	Identifier	fc		157486	0					
ANR	158188	Identifier	ExtndFlags		157486	1					
ANR	158189	Identifier	EF_XLFONT_TYPE		157486	1					
ANR	158190	ExpressionStatement	fc -> ExtndFlags |= EF_TT_NOHINT	1201:8:39795:39825	157486	1	True				
ANR	158191	AssignmentExpression	fc -> ExtndFlags |= EF_TT_NOHINT		157486	0		|=			
ANR	158192	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158193	Identifier	fc		157486	0					
ANR	158194	Identifier	ExtndFlags		157486	1					
ANR	158195	Identifier	EF_TT_NOHINT		157486	1					
ANR	158196	IfStatement	if ( ff -> is_vertical )		157486	42					
ANR	158197	Condition	ff -> is_vertical	1203:8:39841:39855	157486	0	True				
ANR	158198	PtrMemberAccess	ff -> is_vertical		157486	0					
ANR	158199	Identifier	ff		157486	0					
ANR	158200	Identifier	is_vertical		157486	1					
ANR	158201	ExpressionStatement	fc -> ExtndFlags |= EF_UFSTVERT_TYPE	1204:8:39866:39900	157486	1	True				
ANR	158202	AssignmentExpression	fc -> ExtndFlags |= EF_UFSTVERT_TYPE		157486	0		|=			
ANR	158203	PtrMemberAccess	fc -> ExtndFlags		157486	0					
ANR	158204	Identifier	fc		157486	0					
ANR	158205	Identifier	ExtndFlags		157486	1					
ANR	158206	Identifier	EF_UFSTVERT_TYPE		157486	1					
ANR	158207	ExpressionStatement	fc -> dl_ssnum = ( d -> specificId << 4 ) | d -> platformId	1205:4:39906:39957	157486	43	True				
ANR	158208	AssignmentExpression	fc -> dl_ssnum = ( d -> specificId << 4 ) | d -> platformId		157486	0		=			
ANR	158209	PtrMemberAccess	fc -> dl_ssnum		157486	0					
ANR	158210	Identifier	fc		157486	0					
ANR	158211	Identifier	dl_ssnum		157486	1					
ANR	158212	InclusiveOrExpression	( d -> specificId << 4 ) | d -> platformId		157486	1		|			
ANR	158213	ShiftExpression	d -> specificId << 4		157486	0		<<			
ANR	158214	PtrMemberAccess	d -> specificId		157486	0					
ANR	158215	Identifier	d		157486	0					
ANR	158216	Identifier	specificId		157486	1					
ANR	158217	PrimaryExpression	4		157486	1					
ANR	158218	PtrMemberAccess	d -> platformId		157486	1					
ANR	158219	Identifier	d		157486	0					
ANR	158220	Identifier	platformId		157486	1					
ANR	158221	ExpressionStatement	fc -> ttc_index = ff -> subfont	1206:4:39963:39990	157486	44	True				
ANR	158222	AssignmentExpression	fc -> ttc_index = ff -> subfont		157486	0		=			
ANR	158223	PtrMemberAccess	fc -> ttc_index		157486	0					
ANR	158224	Identifier	fc		157486	0					
ANR	158225	Identifier	ttc_index		157486	1					
ANR	158226	PtrMemberAccess	ff -> subfont		157486	1					
ANR	158227	Identifier	ff		157486	0					
ANR	158228	Identifier	subfont		157486	1					
ANR	158229	ExpressionStatement	r -> callback_error = 0	1207:4:39996:40017	157486	45	True				
ANR	158230	AssignmentExpression	r -> callback_error = 0		157486	0		=			
ANR	158231	PtrMemberAccess	r -> callback_error		157486	0					
ANR	158232	Identifier	r		157486	0					
ANR	158233	Identifier	callback_error		157486	1					
ANR	158234	PrimaryExpression	0		157486	1					
ANR	158235	Statement	code	1209:4:40024:40027	157486	46	True				
ANR	158236	Statement	=	1209:9:40029:40029	157486	47	True				
ANR	158237	Statement	CGIFfont	1209:11:40031:40038	157486	48	True				
ANR	158238	Statement	(	1209:19:40039:40039	157486	49	True				
ANR	158239	Statement	FSA	1209:20:40040:40042	157486	50	True				
ANR	158240	Statement	fc	1209:24:40044:40045	157486	51	True				
ANR	158241	Statement	)	1209:26:40046:40046	157486	52	True				
ANR	158242	ExpressionStatement		1209:27:40047:40047	157486	53	True				
ANR	158243	IfStatement	if ( r -> callback_error != 0 )		157486	54					
ANR	158244	Condition	r -> callback_error != 0	1210:8:40057:40078	157486	0	True				
ANR	158245	EqualityExpression	r -> callback_error != 0		157486	0		!=			
ANR	158246	PtrMemberAccess	r -> callback_error		157486	0					
ANR	158247	Identifier	r		157486	0					
ANR	158248	Identifier	callback_error		157486	1					
ANR	158249	PrimaryExpression	0		157486	1					
ANR	158250	ReturnStatement	return r -> callback_error ;	1211:8:40089:40113	157486	1	True				
ANR	158251	PtrMemberAccess	r -> callback_error		157486	0					
ANR	158252	Identifier	r		157486	0					
ANR	158253	Identifier	callback_error		157486	1					
ANR	158254	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		157486	55					
ANR	158255	Condition	d -> font_type == FC_FCO_TYPE	1213:8:40124:40150	157486	0	True				
ANR	158256	EqualityExpression	d -> font_type == FC_FCO_TYPE		157486	0		==			
ANR	158257	PtrMemberAccess	d -> font_type		157486	0					
ANR	158258	Identifier	d		157486	0					
ANR	158259	Identifier	font_type		157486	1					
ANR	158260	Identifier	FC_FCO_TYPE		157486	1					
ANR	158261	CompoundStatement		123:37:4295:4295	157486	1					
ANR	158262	ExpressionStatement	code = CGIFfont_metrics ( & fm )	1214:8:40163:40191	157486	0	True				
ANR	158263	AssignmentExpression	code = CGIFfont_metrics ( & fm )		157486	0		=			
ANR	158264	Identifier	code		157486	0					
ANR	158265	CallExpression	CGIFfont_metrics ( & fm )		157486	1					
ANR	158266	Callee	CGIFfont_metrics		157486	0					
ANR	158267	Identifier	CGIFfont_metrics		157486	0					
ANR	158268	ArgumentList	& fm		157486	1					
ANR	158269	Argument	& fm		157486	0					
ANR	158270	UnaryOperationExpression	& fm		157486	0					
ANR	158271	UnaryOperator	&		157486	0					
ANR	158272	Identifier	fm		157486	1					
ANR	158273	IfStatement	if ( r -> callback_error != 0 )		157486	1					
ANR	158274	Condition	r -> callback_error != 0	1215:12:40205:40226	157486	0	True				
ANR	158275	EqualityExpression	r -> callback_error != 0		157486	0		!=			
ANR	158276	PtrMemberAccess	r -> callback_error		157486	0					
ANR	158277	Identifier	r		157486	0					
ANR	158278	Identifier	callback_error		157486	1					
ANR	158279	PrimaryExpression	0		157486	1					
ANR	158280	ReturnStatement	return r -> callback_error ;	1216:12:40241:40265	157486	1	True				
ANR	158281	PtrMemberAccess	r -> callback_error		157486	0					
ANR	158282	Identifier	r		157486	0					
ANR	158283	Identifier	callback_error		157486	1					
ANR	158284	IfStatement	if ( code != 0 )		157486	56					
ANR	158285	Condition	code != 0	1218:8:40281:40289	157486	0	True				
ANR	158286	EqualityExpression	code != 0		157486	0		!=			
ANR	158287	Identifier	code		157486	0					
ANR	158288	PrimaryExpression	0		157486	1					
ANR	158289	CompoundStatement		128:19:4434:4434	157486	1					
ANR	158290	ExpressionStatement	code = gs_error_invalidfont	1219:8:40302:40329	157486	0	True				
ANR	158291	AssignmentExpression	code = gs_error_invalidfont		157486	0		=			
ANR	158292	Identifier	code		157486	0					
ANR	158293	Identifier	gs_error_invalidfont		157486	1					
ANR	158294	IfStatement	if ( code >= 0 && d -> font_type == FC_FCO_TYPE && ff -> font_file_path )		157486	57					
ANR	158295	Condition	code >= 0 && d -> font_type == FC_FCO_TYPE && ff -> font_file_path	1222:8:40346:40407	157486	0	True				
ANR	158296	AndExpression	code >= 0 && d -> font_type == FC_FCO_TYPE && ff -> font_file_path		157486	0		&&			
ANR	158297	RelationalExpression	code >= 0		157486	0		>=			
ANR	158298	Identifier	code		157486	0					
ANR	158299	PrimaryExpression	0		157486	1					
ANR	158300	AndExpression	d -> font_type == FC_FCO_TYPE && ff -> font_file_path		157486	1		&&			
ANR	158301	EqualityExpression	d -> font_type == FC_FCO_TYPE		157486	0		==			
ANR	158302	PtrMemberAccess	d -> font_type		157486	0					
ANR	158303	Identifier	d		157486	0					
ANR	158304	Identifier	font_type		157486	1					
ANR	158305	Identifier	FC_FCO_TYPE		157486	1					
ANR	158306	PtrMemberAccess	ff -> font_file_path		157486	1					
ANR	158307	Identifier	ff		157486	0					
ANR	158308	Identifier	font_file_path		157486	1					
ANR	158309	CompoundStatement		134:8:4588:4607	157486	1					
ANR	158310	IdentifierDeclStatement	UW16 bufsize = 0 ;	1223:8:40420:40436	157486	0	True				
ANR	158311	IdentifierDecl	bufsize = 0		157486	0					
ANR	158312	IdentifierDeclType	UW16		157486	0					
ANR	158313	Identifier	bufsize		157486	1					
ANR	158314	AssignmentExpression	bufsize = 0		157486	2		=			
ANR	158315	Identifier	bufsize		157486	0					
ANR	158316	PrimaryExpression	0		157486	1					
ANR	158317	IdentifierDeclStatement	LPSB8 buffer = NULL ;	1224:8:40446:40465	157486	1	True				
ANR	158318	IdentifierDecl	buffer = NULL		157486	0					
ANR	158319	IdentifierDeclType	LPSB8		157486	0					
ANR	158320	Identifier	buffer		157486	1					
ANR	158321	AssignmentExpression	buffer = NULL		157486	2		=			
ANR	158322	Identifier	NULL		157486	0					
ANR	158323	Identifier	NULL		157486	1					
ANR	158324	Statement	code	1226:8:40476:40479	157486	2	True				
ANR	158325	Statement	=	1226:13:40481:40481	157486	3	True				
ANR	158326	Statement	CGIFfco_Access	1227:12:40495:40508	157486	4	True				
ANR	158327	Statement	(	1227:26:40509:40509	157486	5	True				
ANR	158328	Statement	FSA	1227:27:40510:40512	157486	6	True				
ANR	158329	Statement	(	1227:31:40514:40514	157486	7	True				
ANR	158330	Statement	LPUB8	1227:32:40515:40519	157486	8	True				
ANR	158331	Statement	)	1227:37:40520:40520	157486	9	True				
ANR	158332	Statement	ff	1227:38:40521:40522	157486	10	True				
ANR	158333	Statement	->	1227:40:40523:40524	157486	11	True				
ANR	158334	Statement	font_file_path	1227:42:40525:40538	157486	12	True				
ANR	158335	Statement	","	1227:56:40539:40539	157486	13	True				
ANR	158336	Statement	ff	1227:58:40541:40542	157486	14	True				
ANR	158337	Statement	->	1227:60:40543:40544	157486	15	True				
ANR	158338	Statement	subfont	1227:62:40545:40551	157486	16	True				
ANR	158339	Statement	","	1227:69:40552:40552	157486	17	True				
ANR	158340	Statement	TFATRIB_KEY	1227:71:40554:40564	157486	18	True				
ANR	158341	Statement	","	1227:82:40565:40565	157486	19	True				
ANR	158342	Statement	&	1228:27:40594:40594	157486	20	True				
ANR	158343	Statement	bufsize	1228:28:40595:40601	157486	21	True				
ANR	158344	Statement	","	1228:35:40602:40602	157486	22	True				
ANR	158345	Statement	NULL	1228:37:40604:40607	157486	23	True				
ANR	158346	Statement	)	1228:41:40608:40608	157486	24	True				
ANR	158347	ExpressionStatement		1228:42:40609:40609	157486	25	True				
ANR	158348	IfStatement	if ( code == 0 )		157486	26					
ANR	158349	Condition	code == 0	1229:12:40623:40631	157486	0	True				
ANR	158350	EqualityExpression	code == 0		157486	0		==			
ANR	158351	Identifier	code		157486	0					
ANR	158352	PrimaryExpression	0		157486	1					
ANR	158353	CompoundStatement		139:23:4776:4776	157486	1					
ANR	158354	IfStatement	if ( bufsize > d -> ufstfontinfosize )		157486	0					
ANR	158355	Condition	bufsize > d -> ufstfontinfosize	1230:16:40652:40680	157486	0	True				
ANR	158356	RelationalExpression	bufsize > d -> ufstfontinfosize		157486	0		>			
ANR	158357	Identifier	bufsize		157486	0					
ANR	158358	PtrMemberAccess	d -> ufstfontinfosize		157486	1					
ANR	158359	Identifier	d		157486	0					
ANR	158360	Identifier	ufstfontinfosize		157486	1					
ANR	158361	CompoundStatement		140:47:4825:4825	157486	1					
ANR	158362	ExpressionStatement	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font info data"" )"	1231:16:40701:40762	157486	0	True				
ANR	158363	CallExpression	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font info data"" )"		157486	0					
ANR	158364	Callee	gs_free		157486	0					
ANR	158365	Identifier	gs_free		157486	0					
ANR	158366	ArgumentList	r -> mem		157486	1					
ANR	158367	Argument	r -> mem		157486	0					
ANR	158368	PtrMemberAccess	r -> mem		157486	0					
ANR	158369	Identifier	r		157486	0					
ANR	158370	Identifier	mem		157486	1					
ANR	158371	Argument	d -> ufstfontinfo		157486	1					
ANR	158372	PtrMemberAccess	d -> ufstfontinfo		157486	0					
ANR	158373	Identifier	d		157486	0					
ANR	158374	Identifier	ufstfontinfo		157486	1					
ANR	158375	Argument	0		157486	2					
ANR	158376	PrimaryExpression	0		157486	0					
ANR	158377	Argument	0		157486	3					
ANR	158378	PrimaryExpression	0		157486	0					
ANR	158379	Argument	"""ufst font info data"""		157486	4					
ANR	158380	PrimaryExpression	"""ufst font info data"""		157486	0					
ANR	158381	ExpressionStatement	"buffer = gs_malloc ( r -> mem , bufsize , 1 , ""ufst font info data"" )"	1233:16:40781:40842	157486	1	True				
ANR	158382	AssignmentExpression	"buffer = gs_malloc ( r -> mem , bufsize , 1 , ""ufst font info data"" )"		157486	0		=			
ANR	158383	Identifier	buffer		157486	0					
ANR	158384	CallExpression	"gs_malloc ( r -> mem , bufsize , 1 , ""ufst font info data"" )"		157486	1					
ANR	158385	Callee	gs_malloc		157486	0					
ANR	158386	Identifier	gs_malloc		157486	0					
ANR	158387	ArgumentList	r -> mem		157486	1					
ANR	158388	Argument	r -> mem		157486	0					
ANR	158389	PtrMemberAccess	r -> mem		157486	0					
ANR	158390	Identifier	r		157486	0					
ANR	158391	Identifier	mem		157486	1					
ANR	158392	Argument	bufsize		157486	1					
ANR	158393	Identifier	bufsize		157486	0					
ANR	158394	Argument	1		157486	2					
ANR	158395	PrimaryExpression	1		157486	0					
ANR	158396	Argument	"""ufst font info data"""		157486	3					
ANR	158397	PrimaryExpression	"""ufst font info data"""		157486	0					
ANR	158398	IfStatement	if ( buffer == NULL )		157486	2					
ANR	158399	Condition	buffer == NULL	1234:20:40864:40877	157486	0	True				
ANR	158400	EqualityExpression	buffer == NULL		157486	0		==			
ANR	158401	Identifier	buffer		157486	0					
ANR	158402	Identifier	NULL		157486	1					
ANR	158403	CompoundStatement		144:36:5022:5022	157486	1					
ANR	158404	ExpressionStatement	code = gs_error_VMerror	1235:20:40902:40925	157486	0	True				
ANR	158405	AssignmentExpression	code = gs_error_VMerror		157486	0		=			
ANR	158406	Identifier	code		157486	0					
ANR	158407	Identifier	gs_error_VMerror		157486	1					
ANR	158408	ElseStatement	else		157486	0					
ANR	158409	CompoundStatement		148:17:5118:5118	157486	0					
ANR	158410	ExpressionStatement	buffer = ( LPSB8 ) d -> ufstfontinfo	1239:16:40994:41026	157486	0	True				
ANR	158411	AssignmentExpression	buffer = ( LPSB8 ) d -> ufstfontinfo		157486	0		=			
ANR	158412	Identifier	buffer		157486	0					
ANR	158413	CastExpression	( LPSB8 ) d -> ufstfontinfo		157486	1					
ANR	158414	CastTarget	LPSB8		157486	0					
ANR	158415	PtrMemberAccess	d -> ufstfontinfo		157486	1					
ANR	158416	Identifier	d		157486	0					
ANR	158417	Identifier	ufstfontinfo		157486	1					
ANR	158418	ExpressionStatement	bufsize = d -> ufstfontinfosize	1240:16:41044:41073	157486	1	True				
ANR	158419	AssignmentExpression	bufsize = d -> ufstfontinfosize		157486	0		=			
ANR	158420	Identifier	bufsize		157486	0					
ANR	158421	PtrMemberAccess	d -> ufstfontinfosize		157486	1					
ANR	158422	Identifier	d		157486	0					
ANR	158423	Identifier	ufstfontinfosize		157486	1					
ANR	158424	IfStatement	if ( buffer )		157486	1					
ANR	158425	Condition	buffer	1242:16:41105:41110	157486	0	True				
ANR	158426	Identifier	buffer		157486	0					
ANR	158427	CompoundStatement		152:24:5255:5255	157486	1					
ANR	158428	Statement	(	1243:16:41131:41131	157486	0	True				
ANR	158429	Statement	void	1243:17:41132:41135	157486	1	True				
ANR	158430	Statement	)	1243:21:41136:41136	157486	2	True				
ANR	158431	Statement	CGIFfco_Access	1243:22:41137:41150	157486	3	True				
ANR	158432	Statement	(	1243:36:41151:41151	157486	4	True				
ANR	158433	Statement	FSA	1243:37:41152:41154	157486	5	True				
ANR	158434	Statement	(	1243:41:41156:41156	157486	6	True				
ANR	158435	Statement	LPUB8	1243:42:41157:41161	157486	7	True				
ANR	158436	Statement	)	1243:47:41162:41162	157486	8	True				
ANR	158437	Statement	ff	1243:48:41163:41164	157486	9	True				
ANR	158438	Statement	->	1243:50:41165:41166	157486	10	True				
ANR	158439	Statement	font_file_path	1243:52:41167:41180	157486	11	True				
ANR	158440	Statement	","	1243:66:41181:41181	157486	12	True				
ANR	158441	Statement	ff	1243:68:41183:41184	157486	13	True				
ANR	158442	Statement	->	1243:70:41185:41186	157486	14	True				
ANR	158443	Statement	subfont	1243:72:41187:41193	157486	15	True				
ANR	158444	Statement	","	1243:79:41194:41194	157486	16	True				
ANR	158445	Statement	TFATRIB_KEY	1244:37:41233:41243	157486	17	True				
ANR	158446	Statement	","	1244:48:41244:41244	157486	18	True				
ANR	158447	Statement	&	1244:50:41246:41246	157486	19	True				
ANR	158448	Statement	bufsize	1244:51:41247:41253	157486	20	True				
ANR	158449	Statement	","	1244:58:41254:41254	157486	21	True				
ANR	158450	Statement	buffer	1244:60:41256:41261	157486	22	True				
ANR	158451	Statement	)	1244:66:41262:41262	157486	23	True				
ANR	158452	ExpressionStatement		1244:67:41263:41263	157486	24	True				
ANR	158453	ExpressionStatement	d -> ufstfontinfo = ( TTFONTINFOTYPE * ) buffer	1245:16:41281:41324	157486	25	True				
ANR	158454	AssignmentExpression	d -> ufstfontinfo = ( TTFONTINFOTYPE * ) buffer		157486	0		=			
ANR	158455	PtrMemberAccess	d -> ufstfontinfo		157486	0					
ANR	158456	Identifier	d		157486	0					
ANR	158457	Identifier	ufstfontinfo		157486	1					
ANR	158458	CastExpression	( TTFONTINFOTYPE * ) buffer		157486	1					
ANR	158459	CastTarget	TTFONTINFOTYPE *		157486	0					
ANR	158460	Identifier	buffer		157486	1					
ANR	158461	ExpressionStatement	d -> ufstfontinfosize = bufsize	1246:16:41342:41371	157486	26	True				
ANR	158462	AssignmentExpression	d -> ufstfontinfosize = bufsize		157486	0		=			
ANR	158463	PtrMemberAccess	d -> ufstfontinfosize		157486	0					
ANR	158464	Identifier	d		157486	0					
ANR	158465	Identifier	ufstfontinfosize		157486	1					
ANR	158466	Identifier	bufsize		157486	1					
ANR	158467	ReturnStatement	return code ;	1251:4:41408:41419	157486	58	True				
ANR	158468	Identifier	code		157486	0					
ANR	158469	ReturnType	static gs_fapi_retcode		157486	1					
ANR	158470	Identifier	gs_fapi_ufst_get_scaled_font_aux		157486	2					
ANR	158471	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc"		157486	3					
ANR	158472	Parameter	gs_fapi_server * server	1088:33:35685:35707	157486	0	True				
ANR	158473	ParameterType	gs_fapi_server *		157486	0					
ANR	158474	Identifier	server		157486	1					
ANR	158475	Parameter	gs_fapi_font * ff	1088:58:35710:35726	157486	1	True				
ANR	158476	ParameterType	gs_fapi_font *		157486	0					
ANR	158477	Identifier	ff		157486	1					
ANR	158478	Parameter	const gs_fapi_font_scale * font_scale	1089:20:35749:35785	157486	2	True				
ANR	158479	ParameterType	const gs_fapi_font_scale *		157486	0					
ANR	158480	Identifier	font_scale		157486	1					
ANR	158481	Parameter	const char * xlatmap	1090:20:35808:35826	157486	3	True				
ANR	158482	ParameterType	const char *		157486	0					
ANR	158483	Identifier	xlatmap		157486	1					
ANR	158484	Parameter	gs_fapi_descendant_code dc	1090:41:35829:35854	157486	4	True				
ANR	158485	ParameterType	gs_fapi_descendant_code		157486	0					
ANR	158486	Identifier	dc		157486	1					
ANR	158487	CFGEntryNode	ENTRY		157486		True				
ANR	158488	CFGExitNode	EXIT		157486		True				
ANR	158489	Symbol	ff -> is_cid		157486						
ANR	158490	Symbol	fc -> s . m2		157486						
ANR	158491	Symbol	r -> mem		157486						
ANR	158492	Symbol	r -> tran_yy		157486						
ANR	158493	Symbol	fc -> alignment		157486						
ANR	158494	Symbol	r -> tran_yx		157486						
ANR	158495	Symbol	UNICODE		157486						
ANR	158496	Symbol	hx		157486						
ANR	158497	Symbol	& fm		157486						
ANR	158498	Symbol	xlatmap		157486						
ANR	158499	Symbol	hy		157486						
ANR	158500	Symbol	d -> platformId		157486						
ANR	158501	Symbol	GAGG		157486						
ANR	158502	Symbol	USER_CMAP		157486						
ANR	158503	Symbol	EF_XLFONT_TYPE		157486						
ANR	158504	Symbol	ff -> font_file_path		157486						
ANR	158505	Symbol	fc -> ExtndFlags		157486						
ANR	158506	Symbol	fc -> s . m2 . xworld_res		157486						
ANR	158507	Symbol	r -> tran_xx		157486						
ANR	158508	Symbol	fc -> yspot		157486						
ANR	158509	Symbol	* * fc		157486						
ANR	158510	Symbol	r -> tran_xy		157486						
ANR	158511	Symbol	gs_malloc		157486						
ANR	158512	Symbol	* font_scale -> HWResolution		157486						
ANR	158513	Symbol	fc -> s . m2 . yworld_res		157486						
ANR	158514	Symbol	server		157486						
ANR	158515	Symbol	FC_FCO_TYPE		157486						
ANR	158516	Symbol	d -> ufstfontinfosize		157486						
ANR	158517	Symbol	fc -> s . m2 . m		157486						
ANR	158518	Symbol	* font_scale		157486						
ANR	158519	Symbol	EF_TT_NOHINT		157486						
ANR	158520	Symbol	ff -> is_vertical		157486						
ANR	158521	Symbol	hypot		157486						
ANR	158522	Symbol	ff -> server_font_data		157486						
ANR	158523	Symbol	ff -> subfont		157486						
ANR	158524	Symbol	gs_error_invalidfont		157486						
ANR	158525	Symbol	* fc		157486						
ANR	158526	Symbol	fc -> numXsubpixels		157486						
ANR	158527	Symbol	If_to_I		157486						
ANR	158528	Symbol	& r -> fc		157486						
ANR	158529	Symbol	r -> callback_error		157486						
ANR	158530	Symbol	d		157486						
ANR	158531	Symbol	ufst_make_font_data		157486						
ANR	158532	Symbol	* * font_scale		157486						
ANR	158533	Symbol	* ff		157486						
ANR	158534	Symbol	T1ENCODING		157486						
ANR	158535	Symbol	EF_FORMAT16_TYPE		157486						
ANR	158536	Symbol	bufsize		157486						
ANR	158537	Symbol	fc -> ssnum		157486						
ANR	158538	Symbol	fc -> fc_type		157486						
ANR	158539	Symbol	gs_fapi_toplevel_begin		157486						
ANR	158540	Symbol	* font_scale -> matrix		157486						
ANR	158541	Symbol	r		157486						
ANR	158542	Symbol	world_scale		157486						
ANR	158543	Symbol	GAPP		157486						
ANR	158544	Symbol	dc		157486						
ANR	158545	Symbol	gs_fapi_toplevel_complete		157486						
ANR	158546	Symbol	* font_scale -> subpixels		157486						
ANR	158547	Symbol	EF_TT_ERRORCHECK_ON		157486						
ANR	158548	Symbol	font_scale -> matrix		157486						
ANR	158549	Symbol	fc -> xspot		157486						
ANR	158550	Symbol	buffer		157486						
ANR	158551	Symbol	* fc -> s . m2		157486						
ANR	158552	Symbol	fc -> user_specID		157486						
ANR	158553	Symbol	NULL		157486						
ANR	158554	Symbol	font_scale -> HWResolution		157486						
ANR	158555	Symbol	fc -> s . m2 . world_scale		157486						
ANR	158556	Symbol	fc -> s . m2 . point_size		157486						
ANR	158557	Symbol	fc -> s . m2 . set_size		157486						
ANR	158558	Symbol	use_XL_format		157486						
ANR	158559	Symbol	d -> font_type		157486						
ANR	158560	Symbol	* fc -> s		157486						
ANR	158561	Symbol	fc -> user_platID		157486						
ANR	158562	Symbol	fc		157486						
ANR	158563	Symbol	fc -> format		157486						
ANR	158564	Symbol	ff -> is_mtx_skipped		157486						
ANR	158565	Symbol	ff		157486						
ANR	158566	Symbol	fc -> ttc_index		157486						
ANR	158567	Symbol	code		157486						
ANR	158568	Symbol	ff -> is_type1		157486						
ANR	158569	Symbol	fc -> s		157486						
ANR	158570	Symbol	FC_TT_TYPE		157486						
ANR	158571	Symbol	fm		157486						
ANR	158572	Symbol	scale		157486						
ANR	158573	Symbol	F_ONE		157486						
ANR	158574	Symbol	EF_NOSYMSETMAP		157486						
ANR	158575	Symbol	FC_NON_Z_WIND		157486						
ANR	158576	Symbol	FC_MAT2_TYPE		157486						
ANR	158577	Symbol	fc -> s . m2 . matrix_scale		157486						
ANR	158578	Symbol	fc -> numYsubpixels		157486						
ANR	158579	Symbol	font_scale -> align_to_pixels		157486						
ANR	158580	Symbol	FC_INCHES_TYPE		157486						
ANR	158581	Symbol	d -> specificId		157486						
ANR	158582	Symbol	fc -> dl_ssnum		157486						
ANR	158583	Symbol	d -> ufstfontinfo		157486						
ANR	158584	Symbol	font_scale -> subpixels		157486						
ANR	158585	Symbol	FC_PST1_TYPE		157486						
ANR	158586	Symbol	ff -> need_decrypt		157486						
ANR	158587	Symbol	& d		157486						
ANR	158588	Symbol	* d		157486						
ANR	158589	Symbol	EF_UFSTVERT_TYPE		157486						
ANR	158590	Symbol	CGIFfont_metrics		157486						
ANR	158591	Symbol	gs_error_VMerror		157486						
ANR	158592	Symbol	font_scale		157486						
ANR	158593	Symbol	* fc -> s . m2 . m		157486						
ANR	158594	Symbol	* r		157486						
ANR	158595	Function	gs_fapi_ufst_get_scaled_font	1254:0:41424:41726							
ANR	158596	FunctionDef	"gs_fapi_ufst_get_scaled_font (gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc)"		158595	0					
ANR	158597	CompoundStatement		1258:0:41640:41726	158595	0					
ANR	158598	ReturnStatement	"return ( gs_fapi_ufst_get_scaled_font_aux ( server , ff , font_scale , xlatmap , dc ) ) ;"	1259:4:41646:41724	158595	0	True				
ANR	158599	CallExpression	"gs_fapi_ufst_get_scaled_font_aux ( server , ff , font_scale , xlatmap , dc )"		158595	0					
ANR	158600	Callee	gs_fapi_ufst_get_scaled_font_aux		158595	0					
ANR	158601	Identifier	gs_fapi_ufst_get_scaled_font_aux		158595	0					
ANR	158602	ArgumentList	server		158595	1					
ANR	158603	Argument	server		158595	0					
ANR	158604	Identifier	server		158595	0					
ANR	158605	Argument	ff		158595	1					
ANR	158606	Identifier	ff		158595	0					
ANR	158607	Argument	font_scale		158595	2					
ANR	158608	Identifier	font_scale		158595	0					
ANR	158609	Argument	xlatmap		158595	3					
ANR	158610	Identifier	xlatmap		158595	0					
ANR	158611	Argument	dc		158595	4					
ANR	158612	Identifier	dc		158595	0					
ANR	158613	ReturnType	static gs_fapi_retcode		158595	1					
ANR	158614	Identifier	gs_fapi_ufst_get_scaled_font		158595	2					
ANR	158615	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc"		158595	3					
ANR	158616	Parameter	gs_fapi_server * server	1255:29:41476:41498	158595	0	True				
ANR	158617	ParameterType	gs_fapi_server *		158595	0					
ANR	158618	Identifier	server		158595	1					
ANR	158619	Parameter	gs_fapi_font * ff	1255:54:41501:41517	158595	1	True				
ANR	158620	ParameterType	gs_fapi_font *		158595	0					
ANR	158621	Identifier	ff		158595	1					
ANR	158622	Parameter	const gs_fapi_font_scale * font_scale	1256:16:41536:41572	158595	2	True				
ANR	158623	ParameterType	const gs_fapi_font_scale *		158595	0					
ANR	158624	Identifier	font_scale		158595	1					
ANR	158625	Parameter	const char * xlatmap	1256:55:41575:41593	158595	3	True				
ANR	158626	ParameterType	const char *		158595	0					
ANR	158627	Identifier	xlatmap		158595	1					
ANR	158628	Parameter	gs_fapi_descendant_code dc	1257:16:41612:41637	158595	4	True				
ANR	158629	ParameterType	gs_fapi_descendant_code		158595	0					
ANR	158630	Identifier	dc		158595	1					
ANR	158631	CFGEntryNode	ENTRY		158595		True				
ANR	158632	CFGExitNode	EXIT		158595		True				
ANR	158633	Symbol	ff		158595						
ANR	158634	Symbol	gs_fapi_ufst_get_scaled_font_aux		158595						
ANR	158635	Symbol	server		158595						
ANR	158636	Symbol	xlatmap		158595						
ANR	158637	Symbol	font_scale		158595						
ANR	158638	Symbol	dc		158595						
ANR	158639	Function	gs_fapi_ufst_get_font_info	1262:0:41729:43582							
ANR	158640	FunctionDef	"gs_fapi_ufst_get_font_info (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_font_info item , int index , void * data , int * data_len)"		158639	0					
ANR	158641	CompoundStatement		1266:0:41923:43582	158639	0					
ANR	158642	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	1267:4:41929:41953	158639	0	True				
ANR	158643	IdentifierDecl	code = 0		158639	0					
ANR	158644	IdentifierDeclType	gs_fapi_retcode		158639	0					
ANR	158645	Identifier	code		158639	1					
ANR	158646	AssignmentExpression	code = 0		158639	2		=			
ANR	158647	Identifier	code		158639	0					
ANR	158648	PrimaryExpression	0		158639	1					
ANR	158649	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) ff -> server_font_data ;	1268:4:41959:42032	158639	1	True				
ANR	158650	IdentifierDecl	* d = ( ufst_common_font_data * ) ff -> server_font_data		158639	0					
ANR	158651	IdentifierDeclType	ufst_common_font_data *		158639	0					
ANR	158652	Identifier	d		158639	1					
ANR	158653	AssignmentExpression	* d = ( ufst_common_font_data * ) ff -> server_font_data		158639	2		=			
ANR	158654	Identifier	d		158639	0					
ANR	158655	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		158639	1					
ANR	158656	CastTarget	ufst_common_font_data *		158639	0					
ANR	158657	PtrMemberAccess	ff -> server_font_data		158639	1					
ANR	158658	Identifier	ff		158639	0					
ANR	158659	Identifier	server_font_data		158639	1					
ANR	158660	IfStatement	if ( ! d || ! d -> ufstfontinfo )		158639	2					
ANR	158661	Condition	! d || ! d -> ufstfontinfo	1270:8:42043:42064	158639	0	True				
ANR	158662	OrExpression	! d || ! d -> ufstfontinfo		158639	0		||			
ANR	158663	UnaryOperationExpression	! d		158639	0					
ANR	158664	UnaryOperator	!		158639	0					
ANR	158665	Identifier	d		158639	1					
ANR	158666	UnaryOperationExpression	! d -> ufstfontinfo		158639	1					
ANR	158667	UnaryOperator	!		158639	0					
ANR	158668	PtrMemberAccess	d -> ufstfontinfo		158639	1					
ANR	158669	Identifier	d		158639	0					
ANR	158670	Identifier	ufstfontinfo		158639	1					
ANR	158671	ReturnStatement	return ( gs_error_invalidfont ) ;	1271:8:42075:42104	158639	1	True				
ANR	158672	Identifier	gs_error_invalidfont		158639	0					
ANR	158673	IfStatement	if ( code == 0 )		158639	3					
ANR	158674	Condition	code == 0	1273:8:42115:42123	158639	0	True				
ANR	158675	EqualityExpression	code == 0		158639	0		==			
ANR	158676	Identifier	code		158639	0					
ANR	158677	PrimaryExpression	0		158639	1					
ANR	158678	CompoundStatement		8:19:202:202	158639	1					
ANR	158679	SwitchStatement	switch ( item )		158639	0					
ANR	158680	Condition	item	1274:16:42144:42147	158639	0	True				
ANR	158681	Identifier	item		158639	0					
ANR	158682	CompoundStatement		9:22:226:226	158639	1					
ANR	158683	Label	case gs_fapi_font_info_name :	1275:12:42164:42191	158639	0	True				
ANR	158684	Identifier	gs_fapi_font_info_name		158639	0					
ANR	158685	CompoundStatement		14:20:418:441	158639	1					
ANR	158686	IdentifierDeclStatement	LPSB8 pname = ( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname ;	1277:20:42231:42320	158639	0	True				
ANR	158687	IdentifierDecl	pname = ( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname		158639	0					
ANR	158688	IdentifierDeclType	LPSB8		158639	0					
ANR	158689	Identifier	pname		158639	1					
ANR	158690	AssignmentExpression	pname = ( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname		158639	2		=			
ANR	158691	Identifier	pname		158639	0					
ANR	158692	AdditiveExpression	( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname		158639	1		+			
ANR	158693	CastExpression	( LPSB8 ) d -> ufstfontinfo		158639	0					
ANR	158694	CastTarget	LPSB8		158639	0					
ANR	158695	PtrMemberAccess	d -> ufstfontinfo		158639	1					
ANR	158696	Identifier	d		158639	0					
ANR	158697	Identifier	ufstfontinfo		158639	1					
ANR	158698	PtrMemberAccess	d -> ufstfontinfo -> psname		158639	1					
ANR	158699	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158700	Identifier	d		158639	0					
ANR	158701	Identifier	ufstfontinfo		158639	1					
ANR	158702	Identifier	psname		158639	1					
ANR	158703	IdentifierDeclStatement	int len = strlen ( pname ) ;	1279:20:42342:42365	158639	1	True				
ANR	158704	IdentifierDecl	len = strlen ( pname )		158639	0					
ANR	158705	IdentifierDeclType	int		158639	0					
ANR	158706	Identifier	len		158639	1					
ANR	158707	AssignmentExpression	len = strlen ( pname )		158639	2		=			
ANR	158708	Identifier	len		158639	0					
ANR	158709	CallExpression	strlen ( pname )		158639	1					
ANR	158710	Callee	strlen		158639	0					
ANR	158711	Identifier	strlen		158639	0					
ANR	158712	ArgumentList	pname		158639	1					
ANR	158713	Argument	pname		158639	0					
ANR	158714	Identifier	pname		158639	0					
ANR	158715	IfStatement	if ( data && * data_len >= len + 1 )		158639	2					
ANR	158716	Condition	data && * data_len >= len + 1	1281:24:42392:42419	158639	0	True				
ANR	158717	AndExpression	data && * data_len >= len + 1		158639	0		&&			
ANR	158718	Identifier	data		158639	0					
ANR	158719	RelationalExpression	* data_len >= len + 1		158639	1		>=			
ANR	158720	UnaryOperationExpression	* data_len		158639	0					
ANR	158721	UnaryOperator	*		158639	0					
ANR	158722	Identifier	data_len		158639	1					
ANR	158723	AdditiveExpression	len + 1		158639	1		+			
ANR	158724	Identifier	len		158639	0					
ANR	158725	PrimaryExpression	1		158639	1					
ANR	158726	CompoundStatement		16:54:498:498	158639	1					
ANR	158727	ExpressionStatement	"strcpy ( data , pname )"	1282:24:42448:42467	158639	0	True				
ANR	158728	CallExpression	"strcpy ( data , pname )"		158639	0					
ANR	158729	Callee	strcpy		158639	0					
ANR	158730	Identifier	strcpy		158639	0					
ANR	158731	ArgumentList	data		158639	1					
ANR	158732	Argument	data		158639	0					
ANR	158733	Identifier	data		158639	0					
ANR	158734	Argument	pname		158639	1					
ANR	158735	Identifier	pname		158639	0					
ANR	158736	ExpressionStatement	* data_len = len + 1	1284:20:42511:42530	158639	3	True				
ANR	158737	AssignmentExpression	* data_len = len + 1		158639	0		=			
ANR	158738	UnaryOperationExpression	* data_len		158639	0					
ANR	158739	UnaryOperator	*		158639	0					
ANR	158740	Identifier	data_len		158639	1					
ANR	158741	AdditiveExpression	len + 1		158639	1		+			
ANR	158742	Identifier	len		158639	0					
ANR	158743	PrimaryExpression	1		158639	1					
ANR	158744	BreakStatement	break ;	1285:20:42552:42557	158639	4	True				
ANR	158745	Label	case gs_fapi_font_info_uid :	1288:12:42590:42616	158639	2	True				
ANR	158746	Identifier	gs_fapi_font_info_uid		158639	0					
ANR	158747	IfStatement	if ( * data_len >= sizeof ( d -> ufstfontinfo -> pcltFontNumber ) )		158639	3					
ANR	158748	Condition	* data_len >= sizeof ( d -> ufstfontinfo -> pcltFontNumber )	1289:20:42638:42689	158639	0	True				
ANR	158749	RelationalExpression	* data_len >= sizeof ( d -> ufstfontinfo -> pcltFontNumber )		158639	0		>=			
ANR	158750	UnaryOperationExpression	* data_len		158639	0					
ANR	158751	UnaryOperator	*		158639	0					
ANR	158752	Identifier	data_len		158639	1					
ANR	158753	SizeofExpression	sizeof ( d -> ufstfontinfo -> pcltFontNumber )		158639	1					
ANR	158754	Sizeof	sizeof		158639	0					
ANR	158755	PtrMemberAccess	d -> ufstfontinfo -> pcltFontNumber		158639	1					
ANR	158756	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158757	Identifier	d		158639	0					
ANR	158758	Identifier	ufstfontinfo		158639	1					
ANR	158759	Identifier	pcltFontNumber		158639	1					
ANR	158760	CompoundStatement		24:74:768:768	158639	1					
ANR	158761	ExpressionStatement	* ( ( int * ) data ) = d -> ufstfontinfo -> pcltFontNumber	1290:20:42714:42762	158639	0	True				
ANR	158762	AssignmentExpression	* ( ( int * ) data ) = d -> ufstfontinfo -> pcltFontNumber		158639	0		=			
ANR	158763	UnaryOperationExpression	* ( ( int * ) data )		158639	0					
ANR	158764	UnaryOperator	*		158639	0					
ANR	158765	CastExpression	( int * ) data		158639	1					
ANR	158766	CastTarget	int *		158639	0					
ANR	158767	Identifier	data		158639	1					
ANR	158768	PtrMemberAccess	d -> ufstfontinfo -> pcltFontNumber		158639	1					
ANR	158769	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158770	Identifier	d		158639	0					
ANR	158771	Identifier	ufstfontinfo		158639	1					
ANR	158772	Identifier	pcltFontNumber		158639	1					
ANR	158773	ExpressionStatement	* data_len = sizeof ( d -> ufstfontinfo -> pcltFontNumber )	1292:16:42798:42849	158639	4	True				
ANR	158774	AssignmentExpression	* data_len = sizeof ( d -> ufstfontinfo -> pcltFontNumber )		158639	0		=			
ANR	158775	UnaryOperationExpression	* data_len		158639	0					
ANR	158776	UnaryOperator	*		158639	0					
ANR	158777	Identifier	data_len		158639	1					
ANR	158778	SizeofExpression	sizeof ( d -> ufstfontinfo -> pcltFontNumber )		158639	1					
ANR	158779	Sizeof	sizeof		158639	0					
ANR	158780	PtrMemberAccess	d -> ufstfontinfo -> pcltFontNumber		158639	1					
ANR	158781	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158782	Identifier	d		158639	0					
ANR	158783	Identifier	ufstfontinfo		158639	1					
ANR	158784	Identifier	pcltFontNumber		158639	1					
ANR	158785	BreakStatement	break ;	1293:16:42867:42872	158639	5	True				
ANR	158786	Label	case gs_fapi_font_info_pitch :	1295:12:42887:42915	158639	6	True				
ANR	158787	Identifier	gs_fapi_font_info_pitch		158639	0					
ANR	158788	IfStatement	if ( * data_len >= sizeof ( d -> ufstfontinfo -> spaceBand ) )		158639	7					
ANR	158789	Condition	* data_len >= sizeof ( d -> ufstfontinfo -> spaceBand )	1296:20:42937:42983	158639	0	True				
ANR	158790	RelationalExpression	* data_len >= sizeof ( d -> ufstfontinfo -> spaceBand )		158639	0		>=			
ANR	158791	UnaryOperationExpression	* data_len		158639	0					
ANR	158792	UnaryOperator	*		158639	0					
ANR	158793	Identifier	data_len		158639	1					
ANR	158794	SizeofExpression	sizeof ( d -> ufstfontinfo -> spaceBand )		158639	1					
ANR	158795	Sizeof	sizeof		158639	0					
ANR	158796	PtrMemberAccess	d -> ufstfontinfo -> spaceBand		158639	1					
ANR	158797	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158798	Identifier	d		158639	0					
ANR	158799	Identifier	ufstfontinfo		158639	1					
ANR	158800	Identifier	spaceBand		158639	1					
ANR	158801	CompoundStatement		31:69:1062:1062	158639	1					
ANR	158802	ExpressionStatement	* ( ( int * ) data ) = d -> ufstfontinfo -> spaceBand	1297:20:43008:43051	158639	0	True				
ANR	158803	AssignmentExpression	* ( ( int * ) data ) = d -> ufstfontinfo -> spaceBand		158639	0		=			
ANR	158804	UnaryOperationExpression	* ( ( int * ) data )		158639	0					
ANR	158805	UnaryOperator	*		158639	0					
ANR	158806	CastExpression	( int * ) data		158639	1					
ANR	158807	CastTarget	int *		158639	0					
ANR	158808	Identifier	data		158639	1					
ANR	158809	PtrMemberAccess	d -> ufstfontinfo -> spaceBand		158639	1					
ANR	158810	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158811	Identifier	d		158639	0					
ANR	158812	Identifier	ufstfontinfo		158639	1					
ANR	158813	Identifier	spaceBand		158639	1					
ANR	158814	ExpressionStatement	* data_len = sizeof ( d -> ufstfontinfo -> spaceBand )	1299:16:43087:43133	158639	8	True				
ANR	158815	AssignmentExpression	* data_len = sizeof ( d -> ufstfontinfo -> spaceBand )		158639	0		=			
ANR	158816	UnaryOperationExpression	* data_len		158639	0					
ANR	158817	UnaryOperator	*		158639	0					
ANR	158818	Identifier	data_len		158639	1					
ANR	158819	SizeofExpression	sizeof ( d -> ufstfontinfo -> spaceBand )		158639	1					
ANR	158820	Sizeof	sizeof		158639	0					
ANR	158821	PtrMemberAccess	d -> ufstfontinfo -> spaceBand		158639	1					
ANR	158822	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158823	Identifier	d		158639	0					
ANR	158824	Identifier	ufstfontinfo		158639	1					
ANR	158825	Identifier	spaceBand		158639	1					
ANR	158826	BreakStatement	break ;	1300:16:43151:43156	158639	9	True				
ANR	158827	Label	case gs_fapi_font_info_design_units :	1302:12:43171:43206	158639	10	True				
ANR	158828	Identifier	gs_fapi_font_info_design_units		158639	0					
ANR	158829	IfStatement	if ( * data_len >= sizeof ( d -> ufstfontinfo -> scaleFactor ) )		158639	11					
ANR	158830	Condition	* data_len >= sizeof ( d -> ufstfontinfo -> scaleFactor )	1303:20:43228:43276	158639	0	True				
ANR	158831	RelationalExpression	* data_len >= sizeof ( d -> ufstfontinfo -> scaleFactor )		158639	0		>=			
ANR	158832	UnaryOperationExpression	* data_len		158639	0					
ANR	158833	UnaryOperator	*		158639	0					
ANR	158834	Identifier	data_len		158639	1					
ANR	158835	SizeofExpression	sizeof ( d -> ufstfontinfo -> scaleFactor )		158639	1					
ANR	158836	Sizeof	sizeof		158639	0					
ANR	158837	PtrMemberAccess	d -> ufstfontinfo -> scaleFactor		158639	1					
ANR	158838	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158839	Identifier	d		158639	0					
ANR	158840	Identifier	ufstfontinfo		158639	1					
ANR	158841	Identifier	scaleFactor		158639	1					
ANR	158842	CompoundStatement		38:71:1355:1355	158639	1					
ANR	158843	ExpressionStatement	* ( ( int * ) data ) = d -> ufstfontinfo -> scaleFactor	1304:20:43301:43346	158639	0	True				
ANR	158844	AssignmentExpression	* ( ( int * ) data ) = d -> ufstfontinfo -> scaleFactor		158639	0		=			
ANR	158845	UnaryOperationExpression	* ( ( int * ) data )		158639	0					
ANR	158846	UnaryOperator	*		158639	0					
ANR	158847	CastExpression	( int * ) data		158639	1					
ANR	158848	CastTarget	int *		158639	0					
ANR	158849	Identifier	data		158639	1					
ANR	158850	PtrMemberAccess	d -> ufstfontinfo -> scaleFactor		158639	1					
ANR	158851	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158852	Identifier	d		158639	0					
ANR	158853	Identifier	ufstfontinfo		158639	1					
ANR	158854	Identifier	scaleFactor		158639	1					
ANR	158855	ExpressionStatement	* data_len = sizeof ( d -> ufstfontinfo -> scaleFactor )	1306:16:43382:43430	158639	12	True				
ANR	158856	AssignmentExpression	* data_len = sizeof ( d -> ufstfontinfo -> scaleFactor )		158639	0		=			
ANR	158857	UnaryOperationExpression	* data_len		158639	0					
ANR	158858	UnaryOperator	*		158639	0					
ANR	158859	Identifier	data_len		158639	1					
ANR	158860	SizeofExpression	sizeof ( d -> ufstfontinfo -> scaleFactor )		158639	1					
ANR	158861	Sizeof	sizeof		158639	0					
ANR	158862	PtrMemberAccess	d -> ufstfontinfo -> scaleFactor		158639	1					
ANR	158863	PtrMemberAccess	d -> ufstfontinfo		158639	0					
ANR	158864	Identifier	d		158639	0					
ANR	158865	Identifier	ufstfontinfo		158639	1					
ANR	158866	Identifier	scaleFactor		158639	1					
ANR	158867	BreakStatement	break ;	1307:16:43448:43453	158639	13	True				
ANR	158868	Label	default :	1309:12:43468:43475	158639	14	True				
ANR	158869	Identifier	default		158639	0					
ANR	158870	ExpressionStatement	code = gs_error_invalidaccess	1310:16:43493:43522	158639	15	True				
ANR	158871	AssignmentExpression	code = gs_error_invalidaccess		158639	0		=			
ANR	158872	Identifier	code		158639	0					
ANR	158873	Identifier	gs_error_invalidaccess		158639	1					
ANR	158874	BreakStatement	break ;	1311:16:43540:43545	158639	16	True				
ANR	158875	ReturnStatement	return ( code ) ;	1314:4:43567:43580	158639	4	True				
ANR	158876	Identifier	code		158639	0					
ANR	158877	ReturnType	static gs_fapi_retcode		158639	1					
ANR	158878	Identifier	gs_fapi_ufst_get_font_info		158639	2					
ANR	158879	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_font_info item , int index , void * data , int * data_len"		158639	3					
ANR	158880	Parameter	gs_fapi_server * server	1263:27:41779:41801	158639	0	True				
ANR	158881	ParameterType	gs_fapi_server *		158639	0					
ANR	158882	Identifier	server		158639	1					
ANR	158883	Parameter	gs_fapi_font * ff	1263:52:41804:41820	158639	1	True				
ANR	158884	ParameterType	gs_fapi_font *		158639	0					
ANR	158885	Identifier	ff		158639	1					
ANR	158886	Parameter	gs_fapi_font_info item	1264:19:41842:41863	158639	2	True				
ANR	158887	ParameterType	gs_fapi_font_info		158639	0					
ANR	158888	Identifier	item		158639	1					
ANR	158889	Parameter	int index	1264:43:41866:41874	158639	3	True				
ANR	158890	ParameterType	int		158639	0					
ANR	158891	Identifier	index		158639	1					
ANR	158892	Parameter	void * data	1264:54:41877:41886	158639	4	True				
ANR	158893	ParameterType	void *		158639	0					
ANR	158894	Identifier	data		158639	1					
ANR	158895	Parameter	int * data_len	1265:19:41908:41920	158639	5	True				
ANR	158896	ParameterType	int *		158639	0					
ANR	158897	Identifier	data_len		158639	1					
ANR	158898	CFGEntryNode	ENTRY		158639		True				
ANR	158899	CFGExitNode	EXIT		158639		True				
ANR	158900	Symbol	ff		158639						
ANR	158901	Symbol	server		158639						
ANR	158902	Symbol	code		158639						
ANR	158903	Symbol	data		158639						
ANR	158904	Symbol	d -> ufstfontinfo -> pcltFontNumber		158639						
ANR	158905	Symbol	strlen		158639						
ANR	158906	Symbol	len		158639						
ANR	158907	Symbol	* d -> ufstfontinfo		158639						
ANR	158908	Symbol	ff -> server_font_data		158639						
ANR	158909	Symbol	gs_error_invalidaccess		158639						
ANR	158910	Symbol	gs_error_invalidfont		158639						
ANR	158911	Symbol	d -> ufstfontinfo -> psname		158639						
ANR	158912	Symbol	item		158639						
ANR	158913	Symbol	* ( ( int * ) data )		158639						
ANR	158914	Symbol	d		158639						
ANR	158915	Symbol	* ff		158639						
ANR	158916	Symbol	d -> ufstfontinfo		158639						
ANR	158917	Symbol	pname		158639						
ANR	158918	Symbol	data_len		158639						
ANR	158919	Symbol	* * d		158639						
ANR	158920	Symbol	index		158639						
ANR	158921	Symbol	* d		158639						
ANR	158922	Symbol	* data_len		158639						
ANR	158923	Symbol	* data		158639						
ANR	158924	Symbol	d -> ufstfontinfo -> spaceBand		158639						
ANR	158925	Symbol	d -> ufstfontinfo -> scaleFactor		158639						
ANR	158926	Function	gs_fapi_ufst_get_decodingID	1317:0:43585:43904							
ANR	158927	FunctionDef	"gs_fapi_ufst_get_decodingID (gs_fapi_server * server , gs_fapi_font * ff , const char * * decodingID_result)"		158926	0					
ANR	158928	CompoundStatement		1320:0:43727:43904	158926	0					
ANR	158929	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1321:4:43733:43770	158926	0	True				
ANR	158930	IdentifierDecl	* r = If_to_I ( server )		158926	0					
ANR	158931	IdentifierDeclType	fapi_ufst_server *		158926	0					
ANR	158932	Identifier	r		158926	1					
ANR	158933	AssignmentExpression	* r = If_to_I ( server )		158926	2		=			
ANR	158934	Identifier	r		158926	0					
ANR	158935	CallExpression	If_to_I ( server )		158926	1					
ANR	158936	Callee	If_to_I		158926	0					
ANR	158937	Identifier	If_to_I		158926	0					
ANR	158938	ArgumentList	server		158926	1					
ANR	158939	Argument	server		158926	0					
ANR	158940	Identifier	server		158926	0					
ANR	158941	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	1322:4:43776:43847	158926	1	True				
ANR	158942	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		158926	0					
ANR	158943	IdentifierDeclType	ufst_common_font_data *		158926	0					
ANR	158944	Identifier	d		158926	1					
ANR	158945	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		158926	2		=			
ANR	158946	Identifier	d		158926	0					
ANR	158947	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		158926	1		-			
ANR	158948	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		158926	0					
ANR	158949	CastTarget	ufst_common_font_data *		158926	0					
ANR	158950	MemberAccess	r -> fc . font_hdr		158926	1					
ANR	158951	PtrMemberAccess	r -> fc		158926	0					
ANR	158952	Identifier	r		158926	0					
ANR	158953	Identifier	fc		158926	1					
ANR	158954	Identifier	font_hdr		158926	1					
ANR	158955	PrimaryExpression	1		158926	1					
ANR	158956	ExpressionStatement	* decodingID_result = d -> decodingID	1324:4:43854:43888	158926	2	True				
ANR	158957	AssignmentExpression	* decodingID_result = d -> decodingID		158926	0		=			
ANR	158958	UnaryOperationExpression	* decodingID_result		158926	0					
ANR	158959	UnaryOperator	*		158926	0					
ANR	158960	Identifier	decodingID_result		158926	1					
ANR	158961	PtrMemberAccess	d -> decodingID		158926	1					
ANR	158962	Identifier	d		158926	0					
ANR	158963	Identifier	decodingID		158926	1					
ANR	158964	ReturnStatement	return 0 ;	1325:4:43894:43902	158926	3	True				
ANR	158965	PrimaryExpression	0		158926	0					
ANR	158966	ReturnType	static gs_fapi_retcode		158926	1					
ANR	158967	Identifier	gs_fapi_ufst_get_decodingID		158926	2					
ANR	158968	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , const char * * decodingID_result"		158926	3					
ANR	158969	Parameter	gs_fapi_server * server	1318:28:43636:43658	158926	0	True				
ANR	158970	ParameterType	gs_fapi_server *		158926	0					
ANR	158971	Identifier	server		158926	1					
ANR	158972	Parameter	gs_fapi_font * ff	1318:53:43661:43677	158926	1	True				
ANR	158973	ParameterType	gs_fapi_font *		158926	0					
ANR	158974	Identifier	ff		158926	1					
ANR	158975	Parameter	const char * * decodingID_result	1319:15:43695:43724	158926	2	True				
ANR	158976	ParameterType	const char * *		158926	0					
ANR	158977	Identifier	decodingID_result		158926	1					
ANR	158978	CFGEntryNode	ENTRY		158926		True				
ANR	158979	CFGExitNode	EXIT		158926		True				
ANR	158980	Symbol	ff		158926						
ANR	158981	Symbol	server		158926						
ANR	158982	Symbol	If_to_I		158926						
ANR	158983	Symbol	r		158926						
ANR	158984	Symbol	d -> decodingID		158926						
ANR	158985	Symbol	d		158926						
ANR	158986	Symbol	r -> fc		158926						
ANR	158987	Symbol	* decodingID_result		158926						
ANR	158988	Symbol	r -> fc . font_hdr		158926						
ANR	158989	Symbol	* r		158926						
ANR	158990	Symbol	* d		158926						
ANR	158991	Symbol	decodingID_result		158926						
ANR	158992	Function	gs_fapi_ufst_get_font_bbox	1328:0:43907:44622							
ANR	158993	FunctionDef	"gs_fapi_ufst_get_font_bbox (gs_fapi_server * server , gs_fapi_font * ff , int BBox [ 4 ] , int unitsPerEm [ 2 ])"		158992	0					
ANR	158994	CompoundStatement		1330:0:44033:44622	158992	0					
ANR	158995	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1331:4:44039:44076	158992	0	True				
ANR	158996	IdentifierDecl	* r = If_to_I ( server )		158992	0					
ANR	158997	IdentifierDeclType	fapi_ufst_server *		158992	0					
ANR	158998	Identifier	r		158992	1					
ANR	158999	AssignmentExpression	* r = If_to_I ( server )		158992	2		=			
ANR	159000	Identifier	r		158992	0					
ANR	159001	CallExpression	If_to_I ( server )		158992	1					
ANR	159002	Callee	If_to_I		158992	0					
ANR	159003	Identifier	If_to_I		158992	0					
ANR	159004	ArgumentList	server		158992	1					
ANR	159005	Argument	server		158992	0					
ANR	159006	Identifier	server		158992	0					
ANR	159007	IdentifierDeclStatement	SW16 VLCPower = 0 ;	1332:4:44082:44099	158992	1	True				
ANR	159008	IdentifierDecl	VLCPower = 0		158992	0					
ANR	159009	IdentifierDeclType	SW16		158992	0					
ANR	159010	Identifier	VLCPower		158992	1					
ANR	159011	AssignmentExpression	VLCPower = 0		158992	2		=			
ANR	159012	Identifier	VLCPower		158992	0					
ANR	159013	PrimaryExpression	0		158992	1					
ANR	159014	IdentifierDeclStatement	int code ;	1333:4:44105:44113	158992	2	True				
ANR	159015	IdentifierDecl	code		158992	0					
ANR	159016	IdentifierDeclType	int		158992	0					
ANR	159017	Identifier	code		158992	1					
ANR	159018	ExpressionStatement	FSA_FROM_SERVER	1335:4:44120:44135	158992	3	True				
ANR	159019	Identifier	FSA_FROM_SERVER		158992	0					
ANR	159020	Statement	if	1337:4:44142:44143	158992	4	True				
ANR	159021	Statement	(	1337:7:44145:44145	158992	5	True				
ANR	159022	Statement	(	1337:8:44146:44146	158992	6	True				
ANR	159023	Statement	code	1337:9:44147:44150	158992	7	True				
ANR	159024	Statement	=	1337:14:44152:44152	158992	8	True				
ANR	159025	Statement	CGIFbound_box	1337:16:44154:44166	158992	9	True				
ANR	159026	Statement	(	1337:29:44167:44167	158992	10	True				
ANR	159027	Statement	FSA	1337:30:44168:44170	158992	11	True				
ANR	159028	Statement	BBox	1337:34:44172:44175	158992	12	True				
ANR	159029	Statement	","	1337:38:44176:44176	158992	13	True				
ANR	159030	Statement	&	1337:40:44178:44178	158992	14	True				
ANR	159031	Statement	VLCPower	1337:41:44179:44186	158992	15	True				
ANR	159032	Statement	)	1337:49:44187:44187	158992	16	True				
ANR	159033	Statement	)	1337:50:44188:44188	158992	17	True				
ANR	159034	Statement	<	1337:52:44190:44190	158992	18	True				
ANR	159035	Statement	0	1337:54:44192:44192	158992	19	True				
ANR	159036	Statement	)	1337:55:44193:44193	158992	20	True				
ANR	159037	ReturnStatement	return code ;	1338:8:44203:44214	158992	21	True				
ANR	159038	Identifier	code		158992	0					
ANR	159039	ExpressionStatement	BBox [ 0 ] += 2	1343:4:44395:44407	158992	22	True				
ANR	159040	AssignmentExpression	BBox [ 0 ] += 2		158992	0		+=			
ANR	159041	ArrayIndexing	BBox [ 0 ]		158992	0					
ANR	159042	Identifier	BBox		158992	0					
ANR	159043	PrimaryExpression	0		158992	1					
ANR	159044	PrimaryExpression	2		158992	1					
ANR	159045	ExpressionStatement	BBox [ 1 ] += 2	1344:4:44413:44425	158992	23	True				
ANR	159046	AssignmentExpression	BBox [ 1 ] += 2		158992	0		+=			
ANR	159047	ArrayIndexing	BBox [ 1 ]		158992	0					
ANR	159048	Identifier	BBox		158992	0					
ANR	159049	PrimaryExpression	1		158992	1					
ANR	159050	PrimaryExpression	2		158992	1					
ANR	159051	ExpressionStatement	BBox [ 2 ] -= 2	1345:4:44431:44443	158992	24	True				
ANR	159052	AssignmentExpression	BBox [ 2 ] -= 2		158992	0		-=			
ANR	159053	ArrayIndexing	BBox [ 2 ]		158992	0					
ANR	159054	Identifier	BBox		158992	0					
ANR	159055	PrimaryExpression	2		158992	1					
ANR	159056	PrimaryExpression	2		158992	1					
ANR	159057	ExpressionStatement	BBox [ 3 ] -= 2	1346:4:44449:44461	158992	25	True				
ANR	159058	AssignmentExpression	BBox [ 3 ] -= 2		158992	0		-=			
ANR	159059	ArrayIndexing	BBox [ 3 ]		158992	0					
ANR	159060	Identifier	BBox		158992	0					
ANR	159061	PrimaryExpression	3		158992	1					
ANR	159062	PrimaryExpression	2		158992	1					
ANR	159063	ExpressionStatement	BBox [ 0 ] >>= VLCPower	1347:4:44467:44487	158992	26	True				
ANR	159064	AssignmentExpression	BBox [ 0 ] >>= VLCPower		158992	0		>>=			
ANR	159065	ArrayIndexing	BBox [ 0 ]		158992	0					
ANR	159066	Identifier	BBox		158992	0					
ANR	159067	PrimaryExpression	0		158992	1					
ANR	159068	Identifier	VLCPower		158992	1					
ANR	159069	ExpressionStatement	BBox [ 1 ] >>= VLCPower	1348:4:44493:44513	158992	27	True				
ANR	159070	AssignmentExpression	BBox [ 1 ] >>= VLCPower		158992	0		>>=			
ANR	159071	ArrayIndexing	BBox [ 1 ]		158992	0					
ANR	159072	Identifier	BBox		158992	0					
ANR	159073	PrimaryExpression	1		158992	1					
ANR	159074	Identifier	VLCPower		158992	1					
ANR	159075	ExpressionStatement	BBox [ 2 ] >>= VLCPower	1349:4:44519:44539	158992	28	True				
ANR	159076	AssignmentExpression	BBox [ 2 ] >>= VLCPower		158992	0		>>=			
ANR	159077	ArrayIndexing	BBox [ 2 ]		158992	0					
ANR	159078	Identifier	BBox		158992	0					
ANR	159079	PrimaryExpression	2		158992	1					
ANR	159080	Identifier	VLCPower		158992	1					
ANR	159081	ExpressionStatement	BBox [ 3 ] >>= VLCPower	1350:4:44545:44565	158992	29	True				
ANR	159082	AssignmentExpression	BBox [ 3 ] >>= VLCPower		158992	0		>>=			
ANR	159083	ArrayIndexing	BBox [ 3 ]		158992	0					
ANR	159084	Identifier	BBox		158992	0					
ANR	159085	PrimaryExpression	3		158992	1					
ANR	159086	Identifier	VLCPower		158992	1					
ANR	159087	ExpressionStatement	unitsPerEm [ 0 ] = unitsPerEm [ 1 ] = 1	1352:4:44572:44605	158992	30	True				
ANR	159088	AssignmentExpression	unitsPerEm [ 0 ] = unitsPerEm [ 1 ] = 1		158992	0		=			
ANR	159089	ArrayIndexing	unitsPerEm [ 0 ]		158992	0					
ANR	159090	Identifier	unitsPerEm		158992	0					
ANR	159091	PrimaryExpression	0		158992	1					
ANR	159092	AssignmentExpression	unitsPerEm [ 1 ] = 1		158992	1		=			
ANR	159093	ArrayIndexing	unitsPerEm [ 1 ]		158992	0					
ANR	159094	Identifier	unitsPerEm		158992	0					
ANR	159095	PrimaryExpression	1		158992	1					
ANR	159096	PrimaryExpression	1		158992	1					
ANR	159097	ReturnStatement	return 0 ;	1354:4:44612:44620	158992	31	True				
ANR	159098	PrimaryExpression	0		158992	0					
ANR	159099	ReturnType	static gs_fapi_retcode		158992	1					
ANR	159100	Identifier	gs_fapi_ufst_get_font_bbox		158992	2					
ANR	159101	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , int BBox [ 4 ] , int unitsPerEm [ 2 ]"		158992	3					
ANR	159102	Parameter	gs_fapi_server * server	1329:27:43957:43979	158992	0	True				
ANR	159103	ParameterType	gs_fapi_server *		158992	0					
ANR	159104	Identifier	server		158992	1					
ANR	159105	Parameter	gs_fapi_font * ff	1329:52:43982:43998	158992	1	True				
ANR	159106	ParameterType	gs_fapi_font *		158992	0					
ANR	159107	Identifier	ff		158992	1					
ANR	159108	Parameter	int BBox [ 4 ]	1329:71:44001:44011	158992	2	True				
ANR	159109	ParameterType	int [ 4 ]		158992	0					
ANR	159110	Identifier	BBox		158992	1					
ANR	159111	Parameter	int unitsPerEm [ 2 ]	1329:84:44014:44030	158992	3	True				
ANR	159112	ParameterType	int [ 2 ]		158992	0					
ANR	159113	Identifier	unitsPerEm		158992	1					
ANR	159114	CFGEntryNode	ENTRY		158992		True				
ANR	159115	CFGExitNode	EXIT		158992		True				
ANR	159116	Symbol	ff		158992						
ANR	159117	Symbol	server		158992						
ANR	159118	Symbol	If_to_I		158992						
ANR	159119	Symbol	r		158992						
ANR	159120	Symbol	* BBox		158992						
ANR	159121	Symbol	code		158992						
ANR	159122	Symbol	BBox		158992						
ANR	159123	Symbol	VLCPower		158992						
ANR	159124	Symbol	* unitsPerEm		158992						
ANR	159125	Symbol	unitsPerEm		158992						
ANR	159126	Function	gs_fapi_ufst_get_font_proportional_feature	1357:0:44625:45349							
ANR	159127	FunctionDef	"gs_fapi_ufst_get_font_proportional_feature (gs_fapi_server * server , gs_fapi_font * ff , bool * bProportional)"		159126	0					
ANR	159128	CompoundStatement		1360:0:44787:45349	159126	0					
ANR	159129	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1361:4:44793:44830	159126	0	True				
ANR	159130	IdentifierDecl	* r = If_to_I ( server )		159126	0					
ANR	159131	IdentifierDeclType	fapi_ufst_server *		159126	0					
ANR	159132	Identifier	r		159126	1					
ANR	159133	AssignmentExpression	* r = If_to_I ( server )		159126	2		=			
ANR	159134	Identifier	r		159126	0					
ANR	159135	CallExpression	If_to_I ( server )		159126	1					
ANR	159136	Callee	If_to_I		159126	0					
ANR	159137	Identifier	If_to_I		159126	0					
ANR	159138	ArgumentList	server		159126	1					
ANR	159139	Argument	server		159126	0					
ANR	159140	Identifier	server		159126	0					
ANR	159141	ExpressionStatement	FSA_FROM_SERVER	1363:4:44837:44852	159126	1	True				
ANR	159142	Identifier	FSA_FROM_SERVER		159126	0					
ANR	159143	ExpressionStatement	* bProportional = FALSE	1365:4:44859:44881	159126	2	True				
ANR	159144	AssignmentExpression	* bProportional = FALSE		159126	0		=			
ANR	159145	UnaryOperationExpression	* bProportional		159126	0					
ANR	159146	UnaryOperator	*		159126	0					
ANR	159147	Identifier	bProportional		159126	1					
ANR	159148	Identifier	FALSE		159126	1					
ANR	159149	IfStatement	if ( ff -> font_file_path == NULL || ff -> is_type1 )		159126	3					
ANR	159150	Condition	ff -> font_file_path == NULL || ff -> is_type1	1366:8:44891:44932	159126	0	True				
ANR	159151	OrExpression	ff -> font_file_path == NULL || ff -> is_type1		159126	0		||			
ANR	159152	EqualityExpression	ff -> font_file_path == NULL		159126	0		==			
ANR	159153	PtrMemberAccess	ff -> font_file_path		159126	0					
ANR	159154	Identifier	ff		159126	0					
ANR	159155	Identifier	font_file_path		159126	1					
ANR	159156	Identifier	NULL		159126	1					
ANR	159157	PtrMemberAccess	ff -> is_type1		159126	1					
ANR	159158	Identifier	ff		159126	0					
ANR	159159	Identifier	is_type1		159126	1					
ANR	159160	ReturnStatement	return 0 ;	1367:8:44943:44951	159126	1	True				
ANR	159161	PrimaryExpression	0		159126	0					
ANR	159162	CompoundStatement		12:8:222:247	159126	4					
ANR	159163	IdentifierDeclStatement	UB8 buf [ 74 ] ;	1370:8:44989:45000	159126	0	True				
ANR	159164	IdentifierDecl	buf [ 74 ]		159126	0					
ANR	159165	IdentifierDeclType	UB8 [ 74 ]		159126	0					
ANR	159166	Identifier	buf		159126	1					
ANR	159167	PrimaryExpression	74		159126	2					
ANR	159168	IdentifierDeclStatement	UL32 length = sizeof ( buf ) ;	1371:8:45010:45035	159126	1	True				
ANR	159169	IdentifierDecl	length = sizeof ( buf )		159126	0					
ANR	159170	IdentifierDeclType	UL32		159126	0					
ANR	159171	Identifier	length		159126	1					
ANR	159172	AssignmentExpression	length = sizeof ( buf )		159126	2		=			
ANR	159173	Identifier	length		159126	0					
ANR	159174	SizeofExpression	sizeof ( buf )		159126	1					
ANR	159175	Sizeof	sizeof		159126	0					
ANR	159176	SizeofOperand	buf		159126	1					
ANR	159177	Statement	if	1373:8:45046:45047	159126	2	True				
ANR	159178	Statement	(	1373:11:45049:45049	159126	3	True				
ANR	159179	Statement	CGIFtt_query	1373:12:45050:45061	159126	4	True				
ANR	159180	Statement	(	1374:12:45075:45075	159126	5	True				
ANR	159181	Statement	FSA	1374:13:45076:45078	159126	6	True				
ANR	159182	Statement	(	1374:16:45079:45079	159126	7	True				
ANR	159183	Statement	UB8	1374:17:45080:45082	159126	8	True				
ANR	159184	Statement	*	1374:21:45084:45084	159126	9	True				
ANR	159185	Statement	)	1374:22:45085:45085	159126	10	True				
ANR	159186	Statement	ff	1374:24:45087:45088	159126	11	True				
ANR	159187	Statement	->	1374:26:45089:45090	159126	12	True				
ANR	159188	Statement	font_file_path	1374:28:45091:45104	159126	13	True				
ANR	159189	Statement	","	1374:42:45105:45105	159126	14	True				
ANR	159190	Statement	*	1374:44:45107:45107	159126	15	True				
ANR	159191	Statement	(	1374:45:45108:45108	159126	16	True				
ANR	159192	Statement	UL32	1374:46:45109:45112	159126	17	True				
ANR	159193	Statement	*	1374:51:45114:45114	159126	18	True				
ANR	159194	Statement	)	1374:52:45115:45115	159126	19	True				
ANR	159195	Statement	"""OS/2"""	1374:54:45117:45122	159126	20	True				
ANR	159196	Statement	","	1374:60:45123:45123	159126	21	True				
ANR	159197	Statement	(	1375:13:45138:45138	159126	22	True				
ANR	159198	Statement	UW16	1375:14:45139:45142	159126	23	True				
ANR	159199	Statement	)	1375:18:45143:45143	159126	24	True				
ANR	159200	Statement	ff	1375:20:45145:45146	159126	25	True				
ANR	159201	Statement	->	1375:22:45147:45148	159126	26	True				
ANR	159202	Statement	subfont	1375:24:45149:45155	159126	27	True				
ANR	159203	Statement	","	1375:31:45156:45156	159126	28	True				
ANR	159204	Statement	&	1375:33:45158:45158	159126	29	True				
ANR	159205	Statement	length	1375:34:45159:45164	159126	30	True				
ANR	159206	Statement	","	1375:40:45165:45165	159126	31	True				
ANR	159207	Statement	buf	1375:42:45167:45169	159126	32	True				
ANR	159208	Statement	)	1375:45:45170:45170	159126	33	True				
ANR	159209	Statement	!=	1375:47:45172:45173	159126	34	True				
ANR	159210	Statement	0	1375:50:45175:45175	159126	35	True				
ANR	159211	Statement	)	1375:51:45176:45176	159126	36	True				
ANR	159212	ReturnStatement	return 0 ;	1376:12:45190:45198	159126	37	True				
ANR	159213	PrimaryExpression	0		159126	0					
ANR	159214	ExpressionStatement	* bProportional = ( buf [ 35 ] == 9 )	1377:8:45289:45320	159126	38	True				
ANR	159215	AssignmentExpression	* bProportional = ( buf [ 35 ] == 9 )		159126	0		=			
ANR	159216	UnaryOperationExpression	* bProportional		159126	0					
ANR	159217	UnaryOperator	*		159126	0					
ANR	159218	Identifier	bProportional		159126	1					
ANR	159219	EqualityExpression	buf [ 35 ] == 9		159126	1		==			
ANR	159220	ArrayIndexing	buf [ 35 ]		159126	0					
ANR	159221	Identifier	buf		159126	0					
ANR	159222	PrimaryExpression	35		159126	1					
ANR	159223	PrimaryExpression	9		159126	1					
ANR	159224	ReturnStatement	return 0 ;	1380:4:45339:45347	159126	5	True				
ANR	159225	PrimaryExpression	0		159126	0					
ANR	159226	ReturnType	static gs_fapi_retcode		159126	1					
ANR	159227	Identifier	gs_fapi_ufst_get_font_proportional_feature		159126	2					
ANR	159228	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , bool * bProportional"		159126	3					
ANR	159229	Parameter	gs_fapi_server * server	1358:43:44691:44713	159126	0	True				
ANR	159230	ParameterType	gs_fapi_server *		159126	0					
ANR	159231	Identifier	server		159126	1					
ANR	159232	Parameter	gs_fapi_font * ff	1358:68:44716:44732	159126	1	True				
ANR	159233	ParameterType	gs_fapi_font *		159126	0					
ANR	159234	Identifier	ff		159126	1					
ANR	159235	Parameter	bool * bProportional	1359:30:44765:44784	159126	2	True				
ANR	159236	ParameterType	bool *		159126	0					
ANR	159237	Identifier	bProportional		159126	1					
ANR	159238	CFGEntryNode	ENTRY		159126		True				
ANR	159239	CFGExitNode	EXIT		159126		True				
ANR	159240	Symbol	ff		159126						
ANR	159241	Symbol	server		159126						
ANR	159242	Symbol	If_to_I		159126						
ANR	159243	Symbol	ff -> font_file_path		159126						
ANR	159244	Symbol	* buf		159126						
ANR	159245	Symbol	NULL		159126						
ANR	159246	Symbol	ff -> is_type1		159126						
ANR	159247	Symbol	bProportional		159126						
ANR	159248	Symbol	* ff		159126						
ANR	159249	Symbol	length		159126						
ANR	159250	Symbol	* bProportional		159126						
ANR	159251	Symbol	r		159126						
ANR	159252	Symbol	buf		159126						
ANR	159253	Symbol	FALSE		159126						
ANR	159254	Function	make_asciiz_char_name	1383:0:45352:45555							
ANR	159255	FunctionDef	"make_asciiz_char_name (char * buf , int buf_length , gs_fapi_char_ref * c)"		159254	0					
ANR	159256	CompoundStatement		1385:0:45442:45555	159254	0					
ANR	159257	IdentifierDeclStatement	"int len = min ( buf_length - 1 , c -> char_name_length ) ;"	1386:4:45448:45498	159254	0	True				
ANR	159258	IdentifierDecl	"len = min ( buf_length - 1 , c -> char_name_length )"		159254	0					
ANR	159259	IdentifierDeclType	int		159254	0					
ANR	159260	Identifier	len		159254	1					
ANR	159261	AssignmentExpression	"len = min ( buf_length - 1 , c -> char_name_length )"		159254	2		=			
ANR	159262	Identifier	len		159254	0					
ANR	159263	CallExpression	"min ( buf_length - 1 , c -> char_name_length )"		159254	1					
ANR	159264	Callee	min		159254	0					
ANR	159265	Identifier	min		159254	0					
ANR	159266	ArgumentList	buf_length - 1		159254	1					
ANR	159267	Argument	buf_length - 1		159254	0					
ANR	159268	AdditiveExpression	buf_length - 1		159254	0		-			
ANR	159269	Identifier	buf_length		159254	0					
ANR	159270	PrimaryExpression	1		159254	1					
ANR	159271	Argument	c -> char_name_length		159254	1					
ANR	159272	PtrMemberAccess	c -> char_name_length		159254	0					
ANR	159273	Identifier	c		159254	0					
ANR	159274	Identifier	char_name_length		159254	1					
ANR	159275	ExpressionStatement	"memcpy ( buf , c -> char_name , len )"	1388:4:45505:45535	159254	1	True				
ANR	159276	CallExpression	"memcpy ( buf , c -> char_name , len )"		159254	0					
ANR	159277	Callee	memcpy		159254	0					
ANR	159278	Identifier	memcpy		159254	0					
ANR	159279	ArgumentList	buf		159254	1					
ANR	159280	Argument	buf		159254	0					
ANR	159281	Identifier	buf		159254	0					
ANR	159282	Argument	c -> char_name		159254	1					
ANR	159283	PtrMemberAccess	c -> char_name		159254	0					
ANR	159284	Identifier	c		159254	0					
ANR	159285	Identifier	char_name		159254	1					
ANR	159286	Argument	len		159254	2					
ANR	159287	Identifier	len		159254	0					
ANR	159288	ExpressionStatement	buf [ len ] = 0	1389:4:45541:45553	159254	2	True				
ANR	159289	AssignmentExpression	buf [ len ] = 0		159254	0		=			
ANR	159290	ArrayIndexing	buf [ len ]		159254	0					
ANR	159291	Identifier	buf		159254	0					
ANR	159292	Identifier	len		159254	1					
ANR	159293	PrimaryExpression	0		159254	1					
ANR	159294	ReturnType	static inline void		159254	1					
ANR	159295	Identifier	make_asciiz_char_name		159254	2					
ANR	159296	ParameterList	"char * buf , int buf_length , gs_fapi_char_ref * c"		159254	3					
ANR	159297	Parameter	char * buf	1384:22:45393:45401	159254	0	True				
ANR	159298	ParameterType	char *		159254	0					
ANR	159299	Identifier	buf		159254	1					
ANR	159300	Parameter	int buf_length	1384:33:45404:45417	159254	1	True				
ANR	159301	ParameterType	int		159254	0					
ANR	159302	Identifier	buf_length		159254	1					
ANR	159303	Parameter	gs_fapi_char_ref * c	1384:49:45420:45439	159254	2	True				
ANR	159304	ParameterType	gs_fapi_char_ref *		159254	0					
ANR	159305	Identifier	c		159254	1					
ANR	159306	CFGEntryNode	ENTRY		159254		True				
ANR	159307	CFGExitNode	EXIT		159254		True				
ANR	159308	Symbol	buf		159254						
ANR	159309	Symbol	* buf		159254						
ANR	159310	Symbol	c		159254						
ANR	159311	Symbol	min		159254						
ANR	159312	Symbol	c -> char_name_length		159254						
ANR	159313	Symbol	len		159254						
ANR	159314	Symbol	c -> char_name		159254						
ANR	159315	Symbol	buf_length		159254						
ANR	159316	Symbol	* c		159254						
ANR	159317	Symbol	* len		159254						
ANR	159318	Function	gs_fapi_ufst_can_retrieve_char_by_name	1394:0:45591:46027							
ANR	159319	FunctionDef	"gs_fapi_ufst_can_retrieve_char_by_name (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result)"		159318	0					
ANR	159320	CompoundStatement		1397:0:45758:46027	159318	0					
ANR	159321	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1398:4:45764:45801	159318	0	True				
ANR	159322	IdentifierDecl	* r = If_to_I ( server )		159318	0					
ANR	159323	IdentifierDeclType	fapi_ufst_server *		159318	0					
ANR	159324	Identifier	r		159318	1					
ANR	159325	AssignmentExpression	* r = If_to_I ( server )		159318	2		=			
ANR	159326	Identifier	r		159318	0					
ANR	159327	CallExpression	If_to_I ( server )		159318	1					
ANR	159328	Callee	If_to_I		159318	0					
ANR	159329	Identifier	If_to_I		159318	0					
ANR	159330	ArgumentList	server		159318	1					
ANR	159331	Argument	server		159318	0					
ANR	159332	Identifier	server		159318	0					
ANR	159333	ExpressionStatement	FSA_FROM_SERVER	1400:4:45808:45823	159318	1	True				
ANR	159334	Identifier	FSA_FROM_SERVER		159318	0					
ANR	159335	ExpressionStatement	* result = 0	1402:4:45830:45841	159318	2	True				
ANR	159336	AssignmentExpression	* result = 0		159318	0		=			
ANR	159337	UnaryOperationExpression	* result		159318	0					
ANR	159338	UnaryOperator	*		159318	0					
ANR	159339	Identifier	result		159318	1					
ANR	159340	PrimaryExpression	0		159318	1					
ANR	159341	SwitchStatement	switch ( r -> fc . format & FC_FONTTYPE_MASK )		159318	3					
ANR	159342	Condition	r -> fc . format & FC_FONTTYPE_MASK	1404:12:45856:45886	159318	0	True				
ANR	159343	BitAndExpression	r -> fc . format & FC_FONTTYPE_MASK		159318	0		&			
ANR	159344	MemberAccess	r -> fc . format		159318	0					
ANR	159345	PtrMemberAccess	r -> fc		159318	0					
ANR	159346	Identifier	r		159318	0					
ANR	159347	Identifier	fc		159318	1					
ANR	159348	Identifier	format		159318	1					
ANR	159349	Identifier	FC_FONTTYPE_MASK		159318	1					
ANR	159350	CompoundStatement		8:45:130:130	159318	1					
ANR	159351	Label	case FC_PST1_TYPE :	1405:8:45899:45916	159318	0	True				
ANR	159352	Identifier	FC_PST1_TYPE		159318	0					
ANR	159353	ExpressionStatement	* result = 1	1406:12:45930:45941	159318	1	True				
ANR	159354	AssignmentExpression	* result = 1		159318	0		=			
ANR	159355	UnaryOperationExpression	* result		159318	0					
ANR	159356	UnaryOperator	*		159318	0					
ANR	159357	Identifier	result		159318	1					
ANR	159358	PrimaryExpression	1		159318	1					
ANR	159359	BreakStatement	break ;	1407:12:45955:45960	159318	2	True				
ANR	159360	Label	case FC_TT_TYPE :	1408:8:45970:45985	159318	3	True				
ANR	159361	Identifier	FC_TT_TYPE		159318	0					
ANR	159362	BreakStatement	break ;	1409:12:45999:46004	159318	4	True				
ANR	159363	ReturnStatement	return 0 ;	1412:4:46017:46025	159318	4	True				
ANR	159364	PrimaryExpression	0		159318	0					
ANR	159365	ReturnType	static gs_fapi_retcode		159318	1					
ANR	159366	Identifier	gs_fapi_ufst_can_retrieve_char_by_name		159318	2					
ANR	159367	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result"		159318	3					
ANR	159368	Parameter	gs_fapi_server * server	1395:39:45653:45675	159318	0	True				
ANR	159369	ParameterType	gs_fapi_server *		159318	0					
ANR	159370	Identifier	server		159318	1					
ANR	159371	Parameter	gs_fapi_font * ff	1395:64:45678:45694	159318	1	True				
ANR	159372	ParameterType	gs_fapi_font *		159318	0					
ANR	159373	Identifier	ff		159318	1					
ANR	159374	Parameter	gs_fapi_char_ref * c	1396:26:45723:45742	159318	2	True				
ANR	159375	ParameterType	gs_fapi_char_ref *		159318	0					
ANR	159376	Identifier	c		159318	1					
ANR	159377	Parameter	int * result	1396:48:45745:45755	159318	3	True				
ANR	159378	ParameterType	int *		159318	0					
ANR	159379	Identifier	result		159318	1					
ANR	159380	CFGEntryNode	ENTRY		159318		True				
ANR	159381	CFGExitNode	EXIT		159318		True				
ANR	159382	Symbol	ff		159318						
ANR	159383	Symbol	result		159318						
ANR	159384	Symbol	server		159318						
ANR	159385	Symbol	If_to_I		159318						
ANR	159386	Symbol	r		159318						
ANR	159387	Symbol	c		159318						
ANR	159388	Symbol	* result		159318						
ANR	159389	Symbol	r -> fc		159318						
ANR	159390	Symbol	FC_FONTTYPE_MASK		159318						
ANR	159391	Symbol	r -> fc . format		159318						
ANR	159392	Symbol	* r		159318						
ANR	159393	Function	gs_fapi_ufst_can_replace_metrics	1415:0:46030:46363							
ANR	159394	FunctionDef	"gs_fapi_ufst_can_replace_metrics (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result)"		159393	0					
ANR	159395	CompoundStatement		1418:0:46185:46363	159393	0					
ANR	159396	ExpressionStatement	* result = ( ! ff -> is_type1 && ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace )	1419:4:46191:46347	159393	0	True				
ANR	159397	AssignmentExpression	* result = ( ! ff -> is_type1 && ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace )		159393	0		=			
ANR	159398	UnaryOperationExpression	* result		159393	0					
ANR	159399	UnaryOperator	*		159393	0					
ANR	159400	Identifier	result		159393	1					
ANR	159401	AndExpression	! ff -> is_type1 && ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace		159393	1		&&			
ANR	159402	UnaryOperationExpression	! ff -> is_type1		159393	0					
ANR	159403	UnaryOperator	!		159393	0					
ANR	159404	PtrMemberAccess	ff -> is_type1		159393	1					
ANR	159405	Identifier	ff		159393	0					
ANR	159406	Identifier	is_type1		159393	1					
ANR	159407	AndExpression	ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace		159393	1		&&			
ANR	159408	EqualityExpression	ff -> font_file_path == NULL		159393	0		==			
ANR	159409	PtrMemberAccess	ff -> font_file_path		159393	0					
ANR	159410	Identifier	ff		159393	0					
ANR	159411	Identifier	font_file_path		159393	1					
ANR	159412	Identifier	NULL		159393	1					
ANR	159413	AndExpression	c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace		159393	1		&&			
ANR	159414	EqualityExpression	c -> metrics_scale == 0		159393	0		==			
ANR	159415	PtrMemberAccess	c -> metrics_scale		159393	0					
ANR	159416	Identifier	c		159393	0					
ANR	159417	Identifier	metrics_scale		159393	1					
ANR	159418	PrimaryExpression	0		159393	1					
ANR	159419	EqualityExpression	c -> metrics_type == gs_fapi_metrics_replace		159393	1		==			
ANR	159420	PtrMemberAccess	c -> metrics_type		159393	0					
ANR	159421	Identifier	c		159393	0					
ANR	159422	Identifier	metrics_type		159393	1					
ANR	159423	Identifier	gs_fapi_metrics_replace		159393	1					
ANR	159424	ReturnStatement	return 0 ;	1422:4:46353:46361	159393	1	True				
ANR	159425	PrimaryExpression	0		159393	0					
ANR	159426	ReturnType	static gs_fapi_retcode		159393	1					
ANR	159427	Identifier	gs_fapi_ufst_can_replace_metrics		159393	2					
ANR	159428	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result"		159393	3					
ANR	159429	Parameter	gs_fapi_server * server	1416:33:46086:46108	159393	0	True				
ANR	159430	ParameterType	gs_fapi_server *		159393	0					
ANR	159431	Identifier	server		159393	1					
ANR	159432	Parameter	gs_fapi_font * ff	1416:58:46111:46127	159393	1	True				
ANR	159433	ParameterType	gs_fapi_font *		159393	0					
ANR	159434	Identifier	ff		159393	1					
ANR	159435	Parameter	gs_fapi_char_ref * c	1417:20:46150:46169	159393	2	True				
ANR	159436	ParameterType	gs_fapi_char_ref *		159393	0					
ANR	159437	Identifier	c		159393	1					
ANR	159438	Parameter	int * result	1417:42:46172:46182	159393	3	True				
ANR	159439	ParameterType	int *		159393	0					
ANR	159440	Identifier	result		159393	1					
ANR	159441	CFGEntryNode	ENTRY		159393		True				
ANR	159442	CFGExitNode	EXIT		159393		True				
ANR	159443	Symbol	ff		159393						
ANR	159444	Symbol	server		159393						
ANR	159445	Symbol	ff -> font_file_path		159393						
ANR	159446	Symbol	c		159393						
ANR	159447	Symbol	NULL		159393						
ANR	159448	Symbol	ff -> is_type1		159393						
ANR	159449	Symbol	* ff		159393						
ANR	159450	Symbol	* c		159393						
ANR	159451	Symbol	c -> metrics_type		159393						
ANR	159452	Symbol	result		159393						
ANR	159453	Symbol	c -> metrics_scale		159393						
ANR	159454	Symbol	* result		159393						
ANR	159455	Symbol	gs_fapi_metrics_replace		159393						
ANR	159456	Function	release_glyphs	1425:0:46366:46668							
ANR	159457	FunctionDef	"release_glyphs (fapi_ufst_server * r , ufst_common_font_data * d)"		159456	0					
ANR	159458	CompoundStatement		1427:0:46442:46668	159456	0					
ANR	159459	IfStatement	if ( d )		159456	0					
ANR	159460	Condition	d	1428:8:46452:46452	159456	0	True				
ANR	159461	Identifier	d		159456	0					
ANR	159462	CompoundStatement		2:11:12:12	159456	1					
ANR	159463	WhileStatement	while ( d -> glyphs != 0 )		159456	0					
ANR	159464	Condition	d -> glyphs != 0	1429:15:46472:46485	159456	0	True				
ANR	159465	EqualityExpression	d -> glyphs != 0		159456	0		!=			
ANR	159466	PtrMemberAccess	d -> glyphs		159456	0					
ANR	159467	Identifier	d		159456	0					
ANR	159468	Identifier	glyphs		159456	1					
ANR	159469	PrimaryExpression	0		159456	1					
ANR	159470	CompoundStatement		4:12:59:95	159456	1					
ANR	159471	IdentifierDeclStatement	pcleo_glyph_list_elem * e = d -> glyphs ;	1430:12:46502:46538	159456	0	True				
ANR	159472	IdentifierDecl	* e = d -> glyphs		159456	0					
ANR	159473	IdentifierDeclType	pcleo_glyph_list_elem *		159456	0					
ANR	159474	Identifier	e		159456	1					
ANR	159475	AssignmentExpression	* e = d -> glyphs		159456	2		=			
ANR	159476	Identifier	e		159456	0					
ANR	159477	PtrMemberAccess	d -> glyphs		159456	1					
ANR	159478	Identifier	d		159456	0					
ANR	159479	Identifier	glyphs		159456	1					
ANR	159480	ExpressionStatement	d -> glyphs = e -> next	1432:12:46553:46572	159456	1	True				
ANR	159481	AssignmentExpression	d -> glyphs = e -> next		159456	0		=			
ANR	159482	PtrMemberAccess	d -> glyphs		159456	0					
ANR	159483	Identifier	d		159456	0					
ANR	159484	Identifier	glyphs		159456	1					
ANR	159485	PtrMemberAccess	e -> next		159456	1					
ANR	159486	Identifier	e		159456	0					
ANR	159487	Identifier	next		159456	1					
ANR	159488	ExpressionStatement	"gs_free ( r -> mem , e , 0 , 0 , ""PCLEO char"" )"	1433:12:46586:46624	159456	2	True				
ANR	159489	CallExpression	"gs_free ( r -> mem , e , 0 , 0 , ""PCLEO char"" )"		159456	0					
ANR	159490	Callee	gs_free		159456	0					
ANR	159491	Identifier	gs_free		159456	0					
ANR	159492	ArgumentList	r -> mem		159456	1					
ANR	159493	Argument	r -> mem		159456	0					
ANR	159494	PtrMemberAccess	r -> mem		159456	0					
ANR	159495	Identifier	r		159456	0					
ANR	159496	Identifier	mem		159456	1					
ANR	159497	Argument	e		159456	1					
ANR	159498	Identifier	e		159456	0					
ANR	159499	Argument	0		159456	2					
ANR	159500	PrimaryExpression	0		159456	0					
ANR	159501	Argument	0		159456	3					
ANR	159502	PrimaryExpression	0		159456	0					
ANR	159503	Argument	"""PCLEO char"""		159456	4					
ANR	159504	PrimaryExpression	"""PCLEO char"""		159456	0					
ANR	159505	ExpressionStatement	d -> glyphs = NULL	1435:8:46644:46660	159456	1	True				
ANR	159506	AssignmentExpression	d -> glyphs = NULL		159456	0		=			
ANR	159507	PtrMemberAccess	d -> glyphs		159456	0					
ANR	159508	Identifier	d		159456	0					
ANR	159509	Identifier	glyphs		159456	1					
ANR	159510	Identifier	NULL		159456	1					
ANR	159511	ReturnType	static void		159456	1					
ANR	159512	Identifier	release_glyphs		159456	2					
ANR	159513	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d"		159456	3					
ANR	159514	Parameter	fapi_ufst_server * r	1426:15:46393:46412	159456	0	True				
ANR	159515	ParameterType	fapi_ufst_server *		159456	0					
ANR	159516	Identifier	r		159456	1					
ANR	159517	Parameter	ufst_common_font_data * d	1426:37:46415:46439	159456	1	True				
ANR	159518	ParameterType	ufst_common_font_data *		159456	0					
ANR	159519	Identifier	d		159456	1					
ANR	159520	CFGEntryNode	ENTRY		159456		True				
ANR	159521	CFGExitNode	EXIT		159456		True				
ANR	159522	Symbol	r		159456						
ANR	159523	Symbol	d -> glyphs		159456						
ANR	159524	Symbol	NULL		159456						
ANR	159525	Symbol	d		159456						
ANR	159526	Symbol	e		159456						
ANR	159527	Symbol	r -> mem		159456						
ANR	159528	Symbol	e -> next		159456						
ANR	159529	Symbol	* r		159456						
ANR	159530	Symbol	* d		159456						
ANR	159531	Symbol	* e		159456						
ANR	159532	Function	gs_fapi_ufst_get_fontmatrix	1439:0:46671:48448							
ANR	159533	FunctionDef	"gs_fapi_ufst_get_fontmatrix (gs_fapi_server * I , gs_matrix * m)"		159532	0					
ANR	159534	CompoundStatement		1441:0:46757:48448	159532	0					
ANR	159535	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( I ) ;	1442:4:46763:46795	159532	0	True				
ANR	159536	IdentifierDecl	* r = If_to_I ( I )		159532	0					
ANR	159537	IdentifierDeclType	fapi_ufst_server *		159532	0					
ANR	159538	Identifier	r		159532	1					
ANR	159539	AssignmentExpression	* r = If_to_I ( I )		159532	2		=			
ANR	159540	Identifier	r		159532	0					
ANR	159541	CallExpression	If_to_I ( I )		159532	1					
ANR	159542	Callee	If_to_I		159532	0					
ANR	159543	Identifier	If_to_I		159532	0					
ANR	159544	ArgumentList	I		159532	1					
ANR	159545	Argument	I		159532	0					
ANR	159546	Identifier	I		159532	0					
ANR	159547	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) I -> ff . server_font_data ;	1443:4:46801:46884	159532	1	True				
ANR	159548	IdentifierDecl	* d = ( ufst_common_font_data * ) I -> ff . server_font_data		159532	0					
ANR	159549	IdentifierDeclType	ufst_common_font_data *		159532	0					
ANR	159550	Identifier	d		159532	1					
ANR	159551	AssignmentExpression	* d = ( ufst_common_font_data * ) I -> ff . server_font_data		159532	2		=			
ANR	159552	Identifier	d		159532	0					
ANR	159553	CastExpression	( ufst_common_font_data * ) I -> ff . server_font_data		159532	1					
ANR	159554	CastTarget	ufst_common_font_data *		159532	0					
ANR	159555	MemberAccess	I -> ff . server_font_data		159532	1					
ANR	159556	PtrMemberAccess	I -> ff		159532	0					
ANR	159557	Identifier	I		159532	0					
ANR	159558	Identifier	ff		159532	1					
ANR	159559	Identifier	server_font_data		159532	1					
ANR	159560	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	1445:4:46890:46914	159532	2	True				
ANR	159561	IdentifierDecl	code = 0		159532	0					
ANR	159562	IdentifierDeclType	gs_fapi_retcode		159532	0					
ANR	159563	Identifier	code		159532	1					
ANR	159564	AssignmentExpression	code = 0		159532	2		=			
ANR	159565	Identifier	code		159532	0					
ANR	159566	PrimaryExpression	0		159532	1					
ANR	159567	IdentifierDeclStatement	bool is_FCO_PSfont = false ;	1446:4:46920:46946	159532	3	True				
ANR	159568	IdentifierDecl	is_FCO_PSfont = false		159532	0					
ANR	159569	IdentifierDeclType	bool		159532	0					
ANR	159570	Identifier	is_FCO_PSfont		159532	1					
ANR	159571	AssignmentExpression	is_FCO_PSfont = false		159532	2		=			
ANR	159572	Identifier	false		159532	0					
ANR	159573	Identifier	false		159532	1					
ANR	159574	IfStatement	if ( I -> ff . is_type1 && I -> ff . font_file_path )		159532	4					
ANR	159575	Condition	I -> ff . is_type1 && I -> ff . font_file_path	1448:8:46957:46994	159532	0	True				
ANR	159576	AndExpression	I -> ff . is_type1 && I -> ff . font_file_path		159532	0		&&			
ANR	159577	MemberAccess	I -> ff . is_type1		159532	0					
ANR	159578	PtrMemberAccess	I -> ff		159532	0					
ANR	159579	Identifier	I		159532	0					
ANR	159580	Identifier	ff		159532	1					
ANR	159581	Identifier	is_type1		159532	1					
ANR	159582	MemberAccess	I -> ff . font_file_path		159532	1					
ANR	159583	PtrMemberAccess	I -> ff		159532	0					
ANR	159584	Identifier	I		159532	0					
ANR	159585	Identifier	ff		159532	1					
ANR	159586	Identifier	font_file_path		159532	1					
ANR	159587	CompoundStatement		8:48:239:239	159532	1					
ANR	159588	IfStatement	if ( d == 0 )		159532	0					
ANR	159589	Condition	d == 0	1449:12:47011:47016	159532	0	True				
ANR	159590	EqualityExpression	d == 0		159532	0		==			
ANR	159591	Identifier	d		159532	0					
ANR	159592	PrimaryExpression	0		159532	1					
ANR	159593	CompoundStatement		9:20:261:261	159532	1					
ANR	159594	IfStatement	"if ( ( code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d ) ) != 0 )"		159532	0					
ANR	159595	Condition	"( code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d ) ) != 0"	1450:16:47037:47162	159532	0	True				
ANR	159596	EqualityExpression	"( code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d ) ) != 0"		159532	0		!=			
ANR	159597	AssignmentExpression	"code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d )"		159532	0		=			
ANR	159598	Identifier	code		159532	0					
ANR	159599	CallExpression	"ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d )"		159532	1					
ANR	159600	Callee	ufst_make_font_data		159532	0					
ANR	159601	Identifier	ufst_make_font_data		159532	0					
ANR	159602	ArgumentList	r		159532	1					
ANR	159603	Argument	r		159532	0					
ANR	159604	Identifier	r		159532	0					
ANR	159605	Argument	I -> ff . font_file_path		159532	1					
ANR	159606	MemberAccess	I -> ff . font_file_path		159532	0					
ANR	159607	PtrMemberAccess	I -> ff		159532	0					
ANR	159608	Identifier	I		159532	0					
ANR	159609	Identifier	ff		159532	1					
ANR	159610	Identifier	font_file_path		159532	1					
ANR	159611	Argument	& ( I -> ff )		159532	2					
ANR	159612	UnaryOperationExpression	& ( I -> ff )		159532	0					
ANR	159613	UnaryOperator	&		159532	0					
ANR	159614	PtrMemberAccess	I -> ff		159532	1					
ANR	159615	Identifier	I		159532	0					
ANR	159616	Identifier	ff		159532	1					
ANR	159617	Argument	& d		159532	3					
ANR	159618	UnaryOperationExpression	& d		159532	0					
ANR	159619	UnaryOperator	&		159532	0					
ANR	159620	Identifier	d		159532	1					
ANR	159621	PrimaryExpression	0		159532	1					
ANR	159622	ReturnStatement	return ( code ) ;	1453:16:47181:47194	159532	1	True				
ANR	159623	Identifier	code		159532	0					
ANR	159624	ExpressionStatement	I -> ff . server_font_data = d	1454:12:47208:47234	159532	1	True				
ANR	159625	AssignmentExpression	I -> ff . server_font_data = d		159532	0		=			
ANR	159626	MemberAccess	I -> ff . server_font_data		159532	0					
ANR	159627	PtrMemberAccess	I -> ff		159532	0					
ANR	159628	Identifier	I		159532	0					
ANR	159629	Identifier	ff		159532	1					
ANR	159630	Identifier	server_font_data		159532	1					
ANR	159631	Identifier	d		159532	1					
ANR	159632	ExpressionStatement	"prepare_typeface ( r , d )"	1455:12:47248:47270	159532	2	True				
ANR	159633	CallExpression	"prepare_typeface ( r , d )"		159532	0					
ANR	159634	Callee	prepare_typeface		159532	0					
ANR	159635	Identifier	prepare_typeface		159532	0					
ANR	159636	ArgumentList	r		159532	1					
ANR	159637	Argument	r		159532	0					
ANR	159638	Identifier	r		159532	0					
ANR	159639	Argument	d		159532	1					
ANR	159640	Identifier	d		159532	0					
ANR	159641	IfStatement	if ( d )		159532	1					
ANR	159642	Condition	d	1457:12:47294:47294	159532	0	True				
ANR	159643	Identifier	d		159532	0					
ANR	159644	CompoundStatement		17:15:539:539	159532	1					
ANR	159645	ExpressionStatement	is_FCO_PSfont = ( d -> font_type & FC_FCO_TYPE ) > 0	1458:12:47311:47359	159532	0	True				
ANR	159646	AssignmentExpression	is_FCO_PSfont = ( d -> font_type & FC_FCO_TYPE ) > 0		159532	0		=			
ANR	159647	Identifier	is_FCO_PSfont		159532	0					
ANR	159648	RelationalExpression	( d -> font_type & FC_FCO_TYPE ) > 0		159532	1		>			
ANR	159649	BitAndExpression	d -> font_type & FC_FCO_TYPE		159532	0		&			
ANR	159650	PtrMemberAccess	d -> font_type		159532	0					
ANR	159651	Identifier	d		159532	0					
ANR	159652	Identifier	font_type		159532	1					
ANR	159653	Identifier	FC_FCO_TYPE		159532	1					
ANR	159654	PrimaryExpression	0		159532	1					
ANR	159655	IfStatement	if ( is_FCO_PSfont )		159532	5					
ANR	159656	Condition	is_FCO_PSfont	1470:8:47831:47843	159532	0	True				
ANR	159657	Identifier	is_FCO_PSfont		159532	0					
ANR	159658	CompoundStatement		30:23:1088:1088	159532	1					
ANR	159659	ExpressionStatement	m -> xx = 0.001	1471:8:47856:47869	159532	0	True				
ANR	159660	AssignmentExpression	m -> xx = 0.001		159532	0		=			
ANR	159661	PtrMemberAccess	m -> xx		159532	0					
ANR	159662	Identifier	m		159532	0					
ANR	159663	Identifier	xx		159532	1					
ANR	159664	PrimaryExpression	0.001		159532	1					
ANR	159665	ExpressionStatement	m -> xy = 0.0	1472:8:47879:47890	159532	1	True				
ANR	159666	AssignmentExpression	m -> xy = 0.0		159532	0		=			
ANR	159667	PtrMemberAccess	m -> xy		159532	0					
ANR	159668	Identifier	m		159532	0					
ANR	159669	Identifier	xy		159532	1					
ANR	159670	PrimaryExpression	0.0		159532	1					
ANR	159671	ExpressionStatement	m -> yx = 0.0	1473:8:47900:47911	159532	2	True				
ANR	159672	AssignmentExpression	m -> yx = 0.0		159532	0		=			
ANR	159673	PtrMemberAccess	m -> yx		159532	0					
ANR	159674	Identifier	m		159532	0					
ANR	159675	Identifier	yx		159532	1					
ANR	159676	PrimaryExpression	0.0		159532	1					
ANR	159677	ExpressionStatement	m -> yy = 0.001	1474:8:47921:47934	159532	3	True				
ANR	159678	AssignmentExpression	m -> yy = 0.001		159532	0		=			
ANR	159679	PtrMemberAccess	m -> yy		159532	0					
ANR	159680	Identifier	m		159532	0					
ANR	159681	Identifier	yy		159532	1					
ANR	159682	PrimaryExpression	0.001		159532	1					
ANR	159683	ExpressionStatement	m -> tx = 0.0	1475:8:47944:47955	159532	4	True				
ANR	159684	AssignmentExpression	m -> tx = 0.0		159532	0		=			
ANR	159685	PtrMemberAccess	m -> tx		159532	0					
ANR	159686	Identifier	m		159532	0					
ANR	159687	Identifier	tx		159532	1					
ANR	159688	PrimaryExpression	0.0		159532	1					
ANR	159689	ExpressionStatement	m -> ty = 0.0	1476:8:47965:47976	159532	5	True				
ANR	159690	AssignmentExpression	m -> ty = 0.0		159532	0		=			
ANR	159691	PtrMemberAccess	m -> ty		159532	0					
ANR	159692	Identifier	m		159532	0					
ANR	159693	Identifier	ty		159532	1					
ANR	159694	PrimaryExpression	0.0		159532	1					
ANR	159695	ElseStatement	else		159532	0					
ANR	159696	CompoundStatement		38:9:1235:1235	159532	0					
ANR	159697	ExpressionStatement	m -> xx = 1.0	1479:8:48003:48014	159532	0	True				
ANR	159698	AssignmentExpression	m -> xx = 1.0		159532	0		=			
ANR	159699	PtrMemberAccess	m -> xx		159532	0					
ANR	159700	Identifier	m		159532	0					
ANR	159701	Identifier	xx		159532	1					
ANR	159702	PrimaryExpression	1.0		159532	1					
ANR	159703	ExpressionStatement	m -> xy = 0.0	1480:8:48024:48035	159532	1	True				
ANR	159704	AssignmentExpression	m -> xy = 0.0		159532	0		=			
ANR	159705	PtrMemberAccess	m -> xy		159532	0					
ANR	159706	Identifier	m		159532	0					
ANR	159707	Identifier	xy		159532	1					
ANR	159708	PrimaryExpression	0.0		159532	1					
ANR	159709	ExpressionStatement	m -> yx = 0.0	1481:8:48045:48056	159532	2	True				
ANR	159710	AssignmentExpression	m -> yx = 0.0		159532	0		=			
ANR	159711	PtrMemberAccess	m -> yx		159532	0					
ANR	159712	Identifier	m		159532	0					
ANR	159713	Identifier	yx		159532	1					
ANR	159714	PrimaryExpression	0.0		159532	1					
ANR	159715	ExpressionStatement	m -> yy = 1.0	1482:8:48066:48077	159532	3	True				
ANR	159716	AssignmentExpression	m -> yy = 1.0		159532	0		=			
ANR	159717	PtrMemberAccess	m -> yy		159532	0					
ANR	159718	Identifier	m		159532	0					
ANR	159719	Identifier	yy		159532	1					
ANR	159720	PrimaryExpression	1.0		159532	1					
ANR	159721	ExpressionStatement	m -> tx = 0.0	1483:8:48087:48098	159532	4	True				
ANR	159722	AssignmentExpression	m -> tx = 0.0		159532	0		=			
ANR	159723	PtrMemberAccess	m -> tx		159532	0					
ANR	159724	Identifier	m		159532	0					
ANR	159725	Identifier	tx		159532	1					
ANR	159726	PrimaryExpression	0.0		159532	1					
ANR	159727	ExpressionStatement	m -> ty = 0.0	1484:8:48108:48119	159532	5	True				
ANR	159728	AssignmentExpression	m -> ty = 0.0		159532	0		=			
ANR	159729	PtrMemberAccess	m -> ty		159532	0					
ANR	159730	Identifier	m		159532	0					
ANR	159731	Identifier	ty		159532	1					
ANR	159732	PrimaryExpression	0.0		159532	1					
ANR	159733	IdentifierDeclStatement	gs_matrix * base_font_matrix = & I -> initial_FontMatrix ;	1488:4:48138:48190	159532	6	True				
ANR	159734	IdentifierDecl	* base_font_matrix = & I -> initial_FontMatrix		159532	0					
ANR	159735	IdentifierDeclType	gs_matrix *		159532	0					
ANR	159736	Identifier	base_font_matrix		159532	1					
ANR	159737	AssignmentExpression	* base_font_matrix = & I -> initial_FontMatrix		159532	2		=			
ANR	159738	Identifier	base_font_matrix		159532	0					
ANR	159739	UnaryOperationExpression	& I -> initial_FontMatrix		159532	1					
ANR	159740	UnaryOperator	&		159532	0					
ANR	159741	PtrMemberAccess	I -> initial_FontMatrix		159532	1					
ANR	159742	Identifier	I		159532	0					
ANR	159743	Identifier	initial_FontMatrix		159532	1					
ANR	159744	ExpressionStatement	m -> xx = I -> initial_FontMatrix . xx	1490:4:48197:48229	159532	7	True				
ANR	159745	AssignmentExpression	m -> xx = I -> initial_FontMatrix . xx		159532	0		=			
ANR	159746	PtrMemberAccess	m -> xx		159532	0					
ANR	159747	Identifier	m		159532	0					
ANR	159748	Identifier	xx		159532	1					
ANR	159749	MemberAccess	I -> initial_FontMatrix . xx		159532	1					
ANR	159750	PtrMemberAccess	I -> initial_FontMatrix		159532	0					
ANR	159751	Identifier	I		159532	0					
ANR	159752	Identifier	initial_FontMatrix		159532	1					
ANR	159753	Identifier	xx		159532	1					
ANR	159754	ExpressionStatement	m -> xy = I -> initial_FontMatrix . xy	1491:4:48235:48267	159532	8	True				
ANR	159755	AssignmentExpression	m -> xy = I -> initial_FontMatrix . xy		159532	0		=			
ANR	159756	PtrMemberAccess	m -> xy		159532	0					
ANR	159757	Identifier	m		159532	0					
ANR	159758	Identifier	xy		159532	1					
ANR	159759	MemberAccess	I -> initial_FontMatrix . xy		159532	1					
ANR	159760	PtrMemberAccess	I -> initial_FontMatrix		159532	0					
ANR	159761	Identifier	I		159532	0					
ANR	159762	Identifier	initial_FontMatrix		159532	1					
ANR	159763	Identifier	xy		159532	1					
ANR	159764	ExpressionStatement	m -> yx = I -> initial_FontMatrix . yx	1492:4:48273:48305	159532	9	True				
ANR	159765	AssignmentExpression	m -> yx = I -> initial_FontMatrix . yx		159532	0		=			
ANR	159766	PtrMemberAccess	m -> yx		159532	0					
ANR	159767	Identifier	m		159532	0					
ANR	159768	Identifier	yx		159532	1					
ANR	159769	MemberAccess	I -> initial_FontMatrix . yx		159532	1					
ANR	159770	PtrMemberAccess	I -> initial_FontMatrix		159532	0					
ANR	159771	Identifier	I		159532	0					
ANR	159772	Identifier	initial_FontMatrix		159532	1					
ANR	159773	Identifier	yx		159532	1					
ANR	159774	ExpressionStatement	m -> yy = I -> initial_FontMatrix . yy	1493:4:48311:48343	159532	10	True				
ANR	159775	AssignmentExpression	m -> yy = I -> initial_FontMatrix . yy		159532	0		=			
ANR	159776	PtrMemberAccess	m -> yy		159532	0					
ANR	159777	Identifier	m		159532	0					
ANR	159778	Identifier	yy		159532	1					
ANR	159779	MemberAccess	I -> initial_FontMatrix . yy		159532	1					
ANR	159780	PtrMemberAccess	I -> initial_FontMatrix		159532	0					
ANR	159781	Identifier	I		159532	0					
ANR	159782	Identifier	initial_FontMatrix		159532	1					
ANR	159783	Identifier	yy		159532	1					
ANR	159784	ExpressionStatement	m -> tx = I -> initial_FontMatrix . tx	1494:4:48349:48381	159532	11	True				
ANR	159785	AssignmentExpression	m -> tx = I -> initial_FontMatrix . tx		159532	0		=			
ANR	159786	PtrMemberAccess	m -> tx		159532	0					
ANR	159787	Identifier	m		159532	0					
ANR	159788	Identifier	tx		159532	1					
ANR	159789	MemberAccess	I -> initial_FontMatrix . tx		159532	1					
ANR	159790	PtrMemberAccess	I -> initial_FontMatrix		159532	0					
ANR	159791	Identifier	I		159532	0					
ANR	159792	Identifier	initial_FontMatrix		159532	1					
ANR	159793	Identifier	tx		159532	1					
ANR	159794	ExpressionStatement	m -> ty = I -> initial_FontMatrix . ty	1495:4:48387:48419	159532	12	True				
ANR	159795	AssignmentExpression	m -> ty = I -> initial_FontMatrix . ty		159532	0		=			
ANR	159796	PtrMemberAccess	m -> ty		159532	0					
ANR	159797	Identifier	m		159532	0					
ANR	159798	Identifier	ty		159532	1					
ANR	159799	MemberAccess	I -> initial_FontMatrix . ty		159532	1					
ANR	159800	PtrMemberAccess	I -> initial_FontMatrix		159532	0					
ANR	159801	Identifier	I		159532	0					
ANR	159802	Identifier	initial_FontMatrix		159532	1					
ANR	159803	Identifier	ty		159532	1					
ANR	159804	ReturnStatement	return ( code ) ;	1497:4:48432:48445	159532	13	True				
ANR	159805	Identifier	code		159532	0					
ANR	159806	ReturnType	static gs_fapi_retcode		159532	1					
ANR	159807	Identifier	gs_fapi_ufst_get_fontmatrix		159532	2					
ANR	159808	ParameterList	"gs_fapi_server * I , gs_matrix * m"		159532	3					
ANR	159809	Parameter	gs_fapi_server * I	1440:28:46722:46739	159532	0	True				
ANR	159810	ParameterType	gs_fapi_server *		159532	0					
ANR	159811	Identifier	I		159532	1					
ANR	159812	Parameter	gs_matrix * m	1440:48:46742:46754	159532	1	True				
ANR	159813	ParameterType	gs_matrix *		159532	0					
ANR	159814	Identifier	m		159532	1					
ANR	159815	CFGEntryNode	ENTRY		159532		True				
ANR	159816	CFGExitNode	EXIT		159532		True				
ANR	159817	Symbol	I -> initial_FontMatrix . xy		159532						
ANR	159818	Symbol	FC_FCO_TYPE		159532						
ANR	159819	Symbol	m -> yx		159532						
ANR	159820	Symbol	code		159532						
ANR	159821	Symbol	I -> initial_FontMatrix . tx		159532						
ANR	159822	Symbol	I -> initial_FontMatrix . ty		159532						
ANR	159823	Symbol	m -> yy		159532						
ANR	159824	Symbol	I		159532						
ANR	159825	Symbol	& I -> initial_FontMatrix		159532						
ANR	159826	Symbol	I -> ff . font_file_path		159532						
ANR	159827	Symbol	* I		159532						
ANR	159828	Symbol	I -> ff . is_type1		159532						
ANR	159829	Symbol	& I -> ff		159532						
ANR	159830	Symbol	m -> ty		159532						
ANR	159831	Symbol	m -> tx		159532						
ANR	159832	Symbol	base_font_matrix		159532						
ANR	159833	Symbol	I -> initial_FontMatrix . xx		159532						
ANR	159834	Symbol	I -> ff		159532						
ANR	159835	Symbol	If_to_I		159532						
ANR	159836	Symbol	d		159532						
ANR	159837	Symbol	ufst_make_font_data		159532						
ANR	159838	Symbol	m -> xy		159532						
ANR	159839	Symbol	m -> xx		159532						
ANR	159840	Symbol	I -> initial_FontMatrix		159532						
ANR	159841	Symbol	false		159532						
ANR	159842	Symbol	& d		159532						
ANR	159843	Symbol	m		159532						
ANR	159844	Symbol	is_FCO_PSfont		159532						
ANR	159845	Symbol	* d		159532						
ANR	159846	Symbol	d -> font_type		159532						
ANR	159847	Symbol	r		159532						
ANR	159848	Symbol	I -> ff . server_font_data		159532						
ANR	159849	Symbol	* m		159532						
ANR	159850	Symbol	I -> initial_FontMatrix . yx		159532						
ANR	159851	Symbol	I -> initial_FontMatrix . yy		159532						
ANR	159852	Function	export_outline	1501:0:48451:50592							
ANR	159853	FunctionDef	"export_outline (fapi_ufst_server * r , PIFOUTLINE pol , gs_fapi_path * p)"		159852	0					
ANR	159854	CompoundStatement		1503:0:48533:50592	159852	0					
ANR	159855	IdentifierDeclStatement	POUTLINE_CHAR outchar ;	1504:4:48539:48560	159852	0	True				
ANR	159856	IdentifierDecl	outchar		159852	0					
ANR	159857	IdentifierDeclType	POUTLINE_CHAR		159852	0					
ANR	159858	Identifier	outchar		159852	1					
ANR	159859	IdentifierDeclStatement	"SW16 num_contrs , num_segmts ;"	1505:4:48566:48593	159852	1	True				
ANR	159860	IdentifierDecl	num_contrs		159852	0					
ANR	159861	IdentifierDeclType	SW16		159852	0					
ANR	159862	Identifier	num_contrs		159852	1					
ANR	159863	IdentifierDecl	num_segmts		159852	1					
ANR	159864	IdentifierDeclType	SW16		159852	0					
ANR	159865	Identifier	num_segmts		159852	1					
ANR	159866	IdentifierDeclStatement	LPSB8 segment ;	1506:4:48599:48612	159852	2	True				
ANR	159867	IdentifierDecl	segment		159852	0					
ANR	159868	IdentifierDeclType	LPSB8		159852	0					
ANR	159869	Identifier	segment		159852	1					
ANR	159870	IdentifierDeclStatement	PINTRVECTOR points ;	1507:4:48618:48636	159852	3	True				
ANR	159871	IdentifierDecl	points		159852	0					
ANR	159872	IdentifierDeclType	PINTRVECTOR		159852	0					
ANR	159873	Identifier	points		159852	1					
ANR	159874	IdentifierDeclStatement	"SW16 i , j ;"	1508:4:48642:48651	159852	4	True				
ANR	159875	IdentifierDecl	i		159852	0					
ANR	159876	IdentifierDeclType	SW16		159852	0					
ANR	159877	Identifier	i		159852	1					
ANR	159878	IdentifierDecl	j		159852	1					
ANR	159879	IdentifierDeclType	SW16		159852	0					
ANR	159880	Identifier	j		159852	1					
ANR	159881	IfStatement	if ( pol == NULL )		159852	5					
ANR	159882	Condition	pol == NULL	1510:8:48662:48672	159852	0	True				
ANR	159883	EqualityExpression	pol == NULL		159852	0		==			
ANR	159884	Identifier	pol		159852	0					
ANR	159885	Identifier	NULL		159852	1					
ANR	159886	ReturnStatement	return 0 ;	1511:8:48683:48691	159852	1	True				
ANR	159887	PrimaryExpression	0		159852	0					
ANR	159888	ExpressionStatement	p -> shift += r -> If . frac_shift + pol -> VLCpower	1512:4:48697:48741	159852	6	True				
ANR	159889	AssignmentExpression	p -> shift += r -> If . frac_shift + pol -> VLCpower		159852	0		+=			
ANR	159890	PtrMemberAccess	p -> shift		159852	0					
ANR	159891	Identifier	p		159852	0					
ANR	159892	Identifier	shift		159852	1					
ANR	159893	AdditiveExpression	r -> If . frac_shift + pol -> VLCpower		159852	1		+			
ANR	159894	MemberAccess	r -> If . frac_shift		159852	0					
ANR	159895	PtrMemberAccess	r -> If		159852	0					
ANR	159896	Identifier	r		159852	0					
ANR	159897	Identifier	If		159852	1					
ANR	159898	Identifier	frac_shift		159852	1					
ANR	159899	PtrMemberAccess	pol -> VLCpower		159852	1					
ANR	159900	Identifier	pol		159852	0					
ANR	159901	Identifier	VLCpower		159852	1					
ANR	159902	ExpressionStatement	outchar = & pol -> ol	1513:4:48747:48765	159852	7	True				
ANR	159903	AssignmentExpression	outchar = & pol -> ol		159852	0		=			
ANR	159904	Identifier	outchar		159852	0					
ANR	159905	UnaryOperationExpression	& pol -> ol		159852	1					
ANR	159906	UnaryOperator	&		159852	0					
ANR	159907	PtrMemberAccess	pol -> ol		159852	1					
ANR	159908	Identifier	pol		159852	0					
ANR	159909	Identifier	ol		159852	1					
ANR	159910	ExpressionStatement	num_contrs = outchar -> num_loops	1514:4:48771:48802	159852	8	True				
ANR	159911	AssignmentExpression	num_contrs = outchar -> num_loops		159852	0		=			
ANR	159912	Identifier	num_contrs		159852	0					
ANR	159913	PtrMemberAccess	outchar -> num_loops		159852	1					
ANR	159914	Identifier	outchar		159852	0					
ANR	159915	Identifier	num_loops		159852	1					
ANR	159916	ForStatement	for ( i = 0 ; i < num_contrs ; i ++ )		159852	9					
ANR	159917	ForInit	i = 0 ;	1515:9:48813:48818	159852	0	True				
ANR	159918	AssignmentExpression	i = 0		159852	0		=			
ANR	159919	Identifier	i		159852	0					
ANR	159920	PrimaryExpression	0		159852	1					
ANR	159921	Condition	i < num_contrs	1515:16:48820:48833	159852	1	True				
ANR	159922	RelationalExpression	i < num_contrs		159852	0		<			
ANR	159923	Identifier	i		159852	0					
ANR	159924	Identifier	num_contrs		159852	1					
ANR	159925	PostIncDecOperationExpression	i ++	1515:32:48836:48838	159852	2	True				
ANR	159926	Identifier	i		159852	0					
ANR	159927	IncDec	++		159852	1					
ANR	159928	CompoundStatement		13:37:307:307	159852	3					
ANR	159929	ExpressionStatement	num_segmts = outchar -> loop [ i ] . num_segmts	1516:8:48851:48891	159852	0	True				
ANR	159930	AssignmentExpression	num_segmts = outchar -> loop [ i ] . num_segmts		159852	0		=			
ANR	159931	Identifier	num_segmts		159852	0					
ANR	159932	MemberAccess	outchar -> loop [ i ] . num_segmts		159852	1					
ANR	159933	ArrayIndexing	outchar -> loop [ i ]		159852	0					
ANR	159934	PtrMemberAccess	outchar -> loop		159852	0					
ANR	159935	Identifier	outchar		159852	0					
ANR	159936	Identifier	loop		159852	1					
ANR	159937	Identifier	i		159852	1					
ANR	159938	Identifier	num_segmts		159852	1					
ANR	159939	ExpressionStatement	segment = ( LPSB8 ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset )	1517:8:48901:48988	159852	1	True				
ANR	159940	AssignmentExpression	segment = ( LPSB8 ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset )		159852	0		=			
ANR	159941	Identifier	segment		159852	0					
ANR	159942	CastExpression	( LPSB8 ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset )		159852	1					
ANR	159943	CastTarget	LPSB8		159852	0					
ANR	159944	AdditiveExpression	( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset		159852	1		+			
ANR	159945	CastExpression	( LPSB8 ) ( outchar -> loop )		159852	0					
ANR	159946	CastTarget	LPSB8		159852	0					
ANR	159947	PtrMemberAccess	outchar -> loop		159852	1					
ANR	159948	Identifier	outchar		159852	0					
ANR	159949	Identifier	loop		159852	1					
ANR	159950	MemberAccess	outchar -> loop [ i ] . segmt_offset		159852	1					
ANR	159951	ArrayIndexing	outchar -> loop [ i ]		159852	0					
ANR	159952	PtrMemberAccess	outchar -> loop		159852	0					
ANR	159953	Identifier	outchar		159852	0					
ANR	159954	Identifier	loop		159852	1					
ANR	159955	Identifier	i		159852	1					
ANR	159956	Identifier	segmt_offset		159852	1					
ANR	159957	ExpressionStatement	points = ( PINTRVECTOR ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset )	1519:8:48998:49117	159852	2	True				
ANR	159958	AssignmentExpression	points = ( PINTRVECTOR ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset )		159852	0		=			
ANR	159959	Identifier	points		159852	0					
ANR	159960	CastExpression	( PINTRVECTOR ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset )		159852	1					
ANR	159961	CastTarget	PINTRVECTOR		159852	0					
ANR	159962	AdditiveExpression	( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset		159852	1		+			
ANR	159963	CastExpression	( LPSB8 ) ( outchar -> loop )		159852	0					
ANR	159964	CastTarget	LPSB8		159852	0					
ANR	159965	PtrMemberAccess	outchar -> loop		159852	1					
ANR	159966	Identifier	outchar		159852	0					
ANR	159967	Identifier	loop		159852	1					
ANR	159968	MemberAccess	outchar -> loop [ i ] . coord_offset		159852	1					
ANR	159969	ArrayIndexing	outchar -> loop [ i ]		159852	0					
ANR	159970	PtrMemberAccess	outchar -> loop		159852	0					
ANR	159971	Identifier	outchar		159852	0					
ANR	159972	Identifier	loop		159852	1					
ANR	159973	Identifier	i		159852	1					
ANR	159974	Identifier	coord_offset		159852	1					
ANR	159975	ForStatement	for ( j = 0 ; j < num_segmts ; j ++ )		159852	3					
ANR	159976	ForInit	j = 0 ;	1522:13:49132:49137	159852	0	True				
ANR	159977	AssignmentExpression	j = 0		159852	0		=			
ANR	159978	Identifier	j		159852	0					
ANR	159979	PrimaryExpression	0		159852	1					
ANR	159980	Condition	j < num_segmts	1522:20:49139:49152	159852	1	True				
ANR	159981	RelationalExpression	j < num_segmts		159852	0		<			
ANR	159982	Identifier	j		159852	0					
ANR	159983	Identifier	num_segmts		159852	1					
ANR	159984	PostIncDecOperationExpression	j ++	1522:36:49155:49157	159852	2	True				
ANR	159985	Identifier	j		159852	0					
ANR	159986	IncDec	++		159852	1					
ANR	159987	CompoundStatement		20:41:626:626	159852	3					
ANR	159988	IfStatement	if ( * segment == 0x00 )		159852	0					
ANR	159989	Condition	* segment == 0x00	1524:16:49179:49194	159852	0	True				
ANR	159990	EqualityExpression	* segment == 0x00		159852	0		==			
ANR	159991	UnaryOperationExpression	* segment		159852	0					
ANR	159992	UnaryOperator	*		159852	0					
ANR	159993	Identifier	segment		159852	1					
ANR	159994	PrimaryExpression	0x00		159852	1					
ANR	159995	CompoundStatement		22:34:663:663	159852	1					
ANR	159996	IfStatement	"if ( ( p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0 )"		159852	0					
ANR	159997	Condition	"( p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"	1525:20:49219:49361	159852	0	True				
ANR	159998	EqualityExpression	"( p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"		159852	0		!=			
ANR	159999	AssignmentExpression	"p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		159852	0		=			
ANR	160000	PtrMemberAccess	p -> gs_error		159852	0					
ANR	160001	Identifier	p		159852	0					
ANR	160002	Identifier	gs_error		159852	1					
ANR	160003	CallExpression	"p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		159852	1					
ANR	160004	Callee	p -> moveto		159852	0					
ANR	160005	PtrMemberAccess	p -> moveto		159852	0					
ANR	160006	Identifier	p		159852	0					
ANR	160007	Identifier	moveto		159852	1					
ANR	160008	ArgumentList	p		159852	1					
ANR	160009	Argument	p		159852	0					
ANR	160010	Identifier	p		159852	0					
ANR	160011	Argument	( ( int64_t ) points -> x ) << 16		159852	1					
ANR	160012	ShiftExpression	( ( int64_t ) points -> x ) << 16		159852	0		<<			
ANR	160013	CastExpression	( int64_t ) points -> x		159852	0					
ANR	160014	CastTarget	int64_t		159852	0					
ANR	160015	PtrMemberAccess	points -> x		159852	1					
ANR	160016	Identifier	points		159852	0					
ANR	160017	Identifier	x		159852	1					
ANR	160018	PrimaryExpression	16		159852	1					
ANR	160019	Argument	( ( int64_t ) points -> y ) << 16		159852	2					
ANR	160020	ShiftExpression	( ( int64_t ) points -> y ) << 16		159852	0		<<			
ANR	160021	CastExpression	( int64_t ) points -> y		159852	0					
ANR	160022	CastTarget	int64_t		159852	0					
ANR	160023	PtrMemberAccess	points -> y		159852	1					
ANR	160024	Identifier	points		159852	0					
ANR	160025	Identifier	y		159852	1					
ANR	160026	PrimaryExpression	16		159852	1					
ANR	160027	PrimaryExpression	0		159852	1					
ANR	160028	ReturnStatement	return p -> gs_error ;	1528:20:49384:49402	159852	1	True				
ANR	160029	PtrMemberAccess	p -> gs_error		159852	0					
ANR	160030	Identifier	p		159852	0					
ANR	160031	Identifier	gs_error		159852	1					
ANR	160032	ExpressionStatement	points ++	1529:16:49420:49428	159852	1	True				
ANR	160033	PostIncDecOperationExpression	points ++		159852	0					
ANR	160034	Identifier	points		159852	0					
ANR	160035	IncDec	++		159852	1					
ANR	160036	ElseStatement	else		159852	0					
ANR	160037	IfStatement	if ( * segment == 0x01 )		159852	0					
ANR	160038	Condition	* segment == 0x01	1531:21:49465:49480	159852	0	True				
ANR	160039	EqualityExpression	* segment == 0x01		159852	0		==			
ANR	160040	UnaryOperationExpression	* segment		159852	0					
ANR	160041	UnaryOperator	*		159852	0					
ANR	160042	Identifier	segment		159852	1					
ANR	160043	PrimaryExpression	0x01		159852	1					
ANR	160044	CompoundStatement		29:39:949:949	159852	1					
ANR	160045	IfStatement	"if ( ( p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0 )"		159852	0					
ANR	160046	Condition	"( p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"	1532:20:49505:49647	159852	0	True				
ANR	160047	EqualityExpression	"( p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"		159852	0		!=			
ANR	160048	AssignmentExpression	"p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		159852	0		=			
ANR	160049	PtrMemberAccess	p -> gs_error		159852	0					
ANR	160050	Identifier	p		159852	0					
ANR	160051	Identifier	gs_error		159852	1					
ANR	160052	CallExpression	"p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		159852	1					
ANR	160053	Callee	p -> lineto		159852	0					
ANR	160054	PtrMemberAccess	p -> lineto		159852	0					
ANR	160055	Identifier	p		159852	0					
ANR	160056	Identifier	lineto		159852	1					
ANR	160057	ArgumentList	p		159852	1					
ANR	160058	Argument	p		159852	0					
ANR	160059	Identifier	p		159852	0					
ANR	160060	Argument	( ( int64_t ) points -> x ) << 16		159852	1					
ANR	160061	ShiftExpression	( ( int64_t ) points -> x ) << 16		159852	0		<<			
ANR	160062	CastExpression	( int64_t ) points -> x		159852	0					
ANR	160063	CastTarget	int64_t		159852	0					
ANR	160064	PtrMemberAccess	points -> x		159852	1					
ANR	160065	Identifier	points		159852	0					
ANR	160066	Identifier	x		159852	1					
ANR	160067	PrimaryExpression	16		159852	1					
ANR	160068	Argument	( ( int64_t ) points -> y ) << 16		159852	2					
ANR	160069	ShiftExpression	( ( int64_t ) points -> y ) << 16		159852	0		<<			
ANR	160070	CastExpression	( int64_t ) points -> y		159852	0					
ANR	160071	CastTarget	int64_t		159852	0					
ANR	160072	PtrMemberAccess	points -> y		159852	1					
ANR	160073	Identifier	points		159852	0					
ANR	160074	Identifier	y		159852	1					
ANR	160075	PrimaryExpression	16		159852	1					
ANR	160076	PrimaryExpression	0		159852	1					
ANR	160077	ReturnStatement	return p -> gs_error ;	1535:20:49670:49688	159852	1	True				
ANR	160078	PtrMemberAccess	p -> gs_error		159852	0					
ANR	160079	Identifier	p		159852	0					
ANR	160080	Identifier	gs_error		159852	1					
ANR	160081	ExpressionStatement	points ++	1536:16:49706:49714	159852	1	True				
ANR	160082	PostIncDecOperationExpression	points ++		159852	0					
ANR	160083	Identifier	points		159852	0					
ANR	160084	IncDec	++		159852	1					
ANR	160085	ElseStatement	else		159852	0					
ANR	160086	IfStatement	if ( * segment == 0x02 )		159852	0					
ANR	160087	Condition	* segment == 0x02	1538:21:49751:49766	159852	0	True				
ANR	160088	EqualityExpression	* segment == 0x02		159852	0		==			
ANR	160089	UnaryOperationExpression	* segment		159852	0					
ANR	160090	UnaryOperator	*		159852	0					
ANR	160091	Identifier	segment		159852	1					
ANR	160092	PrimaryExpression	0x02		159852	1					
ANR	160093	CompoundStatement		36:39:1235:1235	159852	1					
ANR	160094	ExpressionStatement	points += 2	1539:16:49787:49798	159852	0	True				
ANR	160095	AssignmentExpression	points += 2		159852	0		+=			
ANR	160096	Identifier	points		159852	0					
ANR	160097	PrimaryExpression	2		159852	1					
ANR	160098	ExpressionStatement	return_error ( gs_error_invalidfont )	1540:16:49816:49850	159852	1	True				
ANR	160099	CallExpression	return_error ( gs_error_invalidfont )		159852	0					
ANR	160100	Callee	return_error		159852	0					
ANR	160101	Identifier	return_error		159852	0					
ANR	160102	ArgumentList	gs_error_invalidfont		159852	1					
ANR	160103	Argument	gs_error_invalidfont		159852	0					
ANR	160104	Identifier	gs_error_invalidfont		159852	0					
ANR	160105	ElseStatement	else		159852	0					
ANR	160106	IfStatement	if ( * segment == 0x03 )		159852	0					
ANR	160107	Condition	* segment == 0x03	1542:21:49916:49931	159852	0	True				
ANR	160108	EqualityExpression	* segment == 0x03		159852	0		==			
ANR	160109	UnaryOperationExpression	* segment		159852	0					
ANR	160110	UnaryOperator	*		159852	0					
ANR	160111	Identifier	segment		159852	1					
ANR	160112	PrimaryExpression	0x03		159852	1					
ANR	160113	CompoundStatement		40:39:1400:1400	159852	1					
ANR	160114	IfStatement	"if ( ( p -> gs_error = p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0 ) )"		159852	0					
ANR	160115	Condition	"p -> gs_error = p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0"	1543:20:49956:50355	159852	0	True				
ANR	160116	AssignmentExpression	"p -> gs_error = p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0"		159852	0		=			
ANR	160117	PtrMemberAccess	p -> gs_error		159852	0					
ANR	160118	Identifier	p		159852	0					
ANR	160119	Identifier	gs_error		159852	1					
ANR	160120	RelationalExpression	"p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0"		159852	1		<			
ANR	160121	CallExpression	"p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 )"		159852	0					
ANR	160122	Callee	p -> curveto		159852	0					
ANR	160123	PtrMemberAccess	p -> curveto		159852	0					
ANR	160124	Identifier	p		159852	0					
ANR	160125	Identifier	curveto		159852	1					
ANR	160126	ArgumentList	p		159852	1					
ANR	160127	Argument	p		159852	0					
ANR	160128	Identifier	p		159852	0					
ANR	160129	Argument	( ( int64_t ) points [ 0 ] . x ) << 16		159852	1					
ANR	160130	ShiftExpression	( ( int64_t ) points [ 0 ] . x ) << 16		159852	0		<<			
ANR	160131	CastExpression	( int64_t ) points [ 0 ] . x		159852	0					
ANR	160132	CastTarget	int64_t		159852	0					
ANR	160133	MemberAccess	points [ 0 ] . x		159852	1					
ANR	160134	ArrayIndexing	points [ 0 ]		159852	0					
ANR	160135	Identifier	points		159852	0					
ANR	160136	PrimaryExpression	0		159852	1					
ANR	160137	Identifier	x		159852	1					
ANR	160138	PrimaryExpression	16		159852	1					
ANR	160139	Argument	( ( int64_t ) points [ 0 ] . y ) << 16		159852	2					
ANR	160140	ShiftExpression	( ( int64_t ) points [ 0 ] . y ) << 16		159852	0		<<			
ANR	160141	CastExpression	( int64_t ) points [ 0 ] . y		159852	0					
ANR	160142	CastTarget	int64_t		159852	0					
ANR	160143	MemberAccess	points [ 0 ] . y		159852	1					
ANR	160144	ArrayIndexing	points [ 0 ]		159852	0					
ANR	160145	Identifier	points		159852	0					
ANR	160146	PrimaryExpression	0		159852	1					
ANR	160147	Identifier	y		159852	1					
ANR	160148	PrimaryExpression	16		159852	1					
ANR	160149	Argument	( ( int64_t ) points [ 1 ] . x ) << 16		159852	3					
ANR	160150	ShiftExpression	( ( int64_t ) points [ 1 ] . x ) << 16		159852	0		<<			
ANR	160151	CastExpression	( int64_t ) points [ 1 ] . x		159852	0					
ANR	160152	CastTarget	int64_t		159852	0					
ANR	160153	MemberAccess	points [ 1 ] . x		159852	1					
ANR	160154	ArrayIndexing	points [ 1 ]		159852	0					
ANR	160155	Identifier	points		159852	0					
ANR	160156	PrimaryExpression	1		159852	1					
ANR	160157	Identifier	x		159852	1					
ANR	160158	PrimaryExpression	16		159852	1					
ANR	160159	Argument	( ( int64_t ) points [ 1 ] . y ) << 16		159852	4					
ANR	160160	ShiftExpression	( ( int64_t ) points [ 1 ] . y ) << 16		159852	0		<<			
ANR	160161	CastExpression	( int64_t ) points [ 1 ] . y		159852	0					
ANR	160162	CastTarget	int64_t		159852	0					
ANR	160163	MemberAccess	points [ 1 ] . y		159852	1					
ANR	160164	ArrayIndexing	points [ 1 ]		159852	0					
ANR	160165	Identifier	points		159852	0					
ANR	160166	PrimaryExpression	1		159852	1					
ANR	160167	Identifier	y		159852	1					
ANR	160168	PrimaryExpression	16		159852	1					
ANR	160169	Argument	( ( int64_t ) points [ 2 ] . x ) << 16		159852	5					
ANR	160170	ShiftExpression	( ( int64_t ) points [ 2 ] . x ) << 16		159852	0		<<			
ANR	160171	CastExpression	( int64_t ) points [ 2 ] . x		159852	0					
ANR	160172	CastTarget	int64_t		159852	0					
ANR	160173	MemberAccess	points [ 2 ] . x		159852	1					
ANR	160174	ArrayIndexing	points [ 2 ]		159852	0					
ANR	160175	Identifier	points		159852	0					
ANR	160176	PrimaryExpression	2		159852	1					
ANR	160177	Identifier	x		159852	1					
ANR	160178	PrimaryExpression	16		159852	1					
ANR	160179	Argument	( ( int64_t ) points [ 2 ] . y ) << 16		159852	6					
ANR	160180	ShiftExpression	( ( int64_t ) points [ 2 ] . y ) << 16		159852	0		<<			
ANR	160181	CastExpression	( int64_t ) points [ 2 ] . y		159852	0					
ANR	160182	CastTarget	int64_t		159852	0					
ANR	160183	MemberAccess	points [ 2 ] . y		159852	1					
ANR	160184	ArrayIndexing	points [ 2 ]		159852	0					
ANR	160185	Identifier	points		159852	0					
ANR	160186	PrimaryExpression	2		159852	1					
ANR	160187	Identifier	y		159852	1					
ANR	160188	PrimaryExpression	16		159852	1					
ANR	160189	PrimaryExpression	0		159852	1					
ANR	160190	ReturnStatement	return p -> gs_error ;	1550:20:50378:50396	159852	1	True				
ANR	160191	PtrMemberAccess	p -> gs_error		159852	0					
ANR	160192	Identifier	p		159852	0					
ANR	160193	Identifier	gs_error		159852	1					
ANR	160194	ExpressionStatement	points += 3	1551:16:50414:50425	159852	1	True				
ANR	160195	AssignmentExpression	points += 3		159852	0		+=			
ANR	160196	Identifier	points		159852	0					
ANR	160197	PrimaryExpression	3		159852	1					
ANR	160198	ElseStatement	else		159852	0					
ANR	160199	ExpressionStatement	return_error ( gs_error_invalidfont )	1554:16:50474:50508	159852	0	True				
ANR	160200	CallExpression	return_error ( gs_error_invalidfont )		159852	0					
ANR	160201	Callee	return_error		159852	0					
ANR	160202	Identifier	return_error		159852	0					
ANR	160203	ArgumentList	gs_error_invalidfont		159852	1					
ANR	160204	Argument	gs_error_invalidfont		159852	0					
ANR	160205	Identifier	gs_error_invalidfont		159852	0					
ANR	160206	ExpressionStatement	segment ++	1555:12:50551:50560	159852	1	True				
ANR	160207	PostIncDecOperationExpression	segment ++		159852	0					
ANR	160208	Identifier	segment		159852	0					
ANR	160209	IncDec	++		159852	1					
ANR	160210	ReturnStatement	return 0 ;	1558:4:50582:50590	159852	10	True				
ANR	160211	PrimaryExpression	0		159852	0					
ANR	160212	ReturnType	static int		159852	1					
ANR	160213	Identifier	export_outline		159852	2					
ANR	160214	ParameterList	"fapi_ufst_server * r , PIFOUTLINE pol , gs_fapi_path * p"		159852	3					
ANR	160215	Parameter	fapi_ufst_server * r	1502:15:48477:48496	159852	0	True				
ANR	160216	ParameterType	fapi_ufst_server *		159852	0					
ANR	160217	Identifier	r		159852	1					
ANR	160218	Parameter	PIFOUTLINE pol	1502:37:48499:48512	159852	1	True				
ANR	160219	ParameterType	PIFOUTLINE		159852	0					
ANR	160220	Identifier	pol		159852	1					
ANR	160221	Parameter	gs_fapi_path * p	1502:53:48515:48530	159852	2	True				
ANR	160222	ParameterType	gs_fapi_path *		159852	0					
ANR	160223	Identifier	p		159852	1					
ANR	160224	CFGEntryNode	ENTRY		159852		True				
ANR	160225	CFGExitNode	EXIT		159852		True				
ANR	160226	Symbol	* outchar -> loop		159852						
ANR	160227	Symbol	* outchar		159852						
ANR	160228	Symbol	points -> y		159852						
ANR	160229	Symbol	points -> x		159852						
ANR	160230	Symbol	r -> If . frac_shift		159852						
ANR	160231	Symbol	points [ 2 ] . x		159852						
ANR	160232	Symbol	pol		159852						
ANR	160233	Symbol	p -> moveto		159852						
ANR	160234	Symbol	points		159852						
ANR	160235	Symbol	points [ 2 ] . y		159852						
ANR	160236	Symbol	p -> lineto		159852						
ANR	160237	Symbol	segment		159852						
ANR	160238	Symbol	& pol -> ol		159852						
ANR	160239	Symbol	gs_error_invalidfont		159852						
ANR	160240	Symbol	points [ 0 ] . y		159852						
ANR	160241	Symbol	points [ 0 ] . x		159852						
ANR	160242	Symbol	outchar -> loop		159852						
ANR	160243	Symbol	NULL		159852						
ANR	160244	Symbol	p -> shift		159852						
ANR	160245	Symbol	outchar -> num_loops		159852						
ANR	160246	Symbol	r -> If		159852						
ANR	160247	Symbol	points [ 1 ] . y		159852						
ANR	160248	Symbol	* * outchar		159852						
ANR	160249	Symbol	points [ 1 ] . x		159852						
ANR	160250	Symbol	num_contrs		159852						
ANR	160251	Symbol	i		159852						
ANR	160252	Symbol	j		159852						
ANR	160253	Symbol	outchar -> loop [ i ] . num_segmts		159852						
ANR	160254	Symbol	p -> gs_error		159852						
ANR	160255	Symbol	outchar		159852						
ANR	160256	Symbol	p		159852						
ANR	160257	Symbol	r		159852						
ANR	160258	Symbol	num_segmts		159852						
ANR	160259	Symbol	* i		159852						
ANR	160260	Symbol	pol -> VLCpower		159852						
ANR	160261	Symbol	outchar -> loop [ i ] . segmt_offset		159852						
ANR	160262	Symbol	p -> curveto		159852						
ANR	160263	Symbol	* pol		159852						
ANR	160264	Symbol	* segment		159852						
ANR	160265	Symbol	* p		159852						
ANR	160266	Symbol	* r		159852						
ANR	160267	Symbol	* points		159852						
ANR	160268	Symbol	outchar -> loop [ i ] . coord_offset		159852						
ANR	160269	Function	set_metrics	1561:0:50595:51086							
ANR	160270	FunctionDef	"set_metrics (fapi_ufst_server * r , gs_fapi_metrics * metrics , SL32 design_bbox [ 4 ] , SW16 design_escapement [ 2 ] , SW16 du_emx , SW16 du_emy)"		160269	0					
ANR	160271	CompoundStatement		1565:0:50773:51086	160269	0					
ANR	160272	ExpressionStatement	metrics -> escapement = design_escapement [ 0 ]	1567:4:50780:50822	160269	0	True				
ANR	160273	AssignmentExpression	metrics -> escapement = design_escapement [ 0 ]		160269	0		=			
ANR	160274	PtrMemberAccess	metrics -> escapement		160269	0					
ANR	160275	Identifier	metrics		160269	0					
ANR	160276	Identifier	escapement		160269	1					
ANR	160277	ArrayIndexing	design_escapement [ 0 ]		160269	1					
ANR	160278	Identifier	design_escapement		160269	0					
ANR	160279	PrimaryExpression	0		160269	1					
ANR	160280	ExpressionStatement	metrics -> v_escapement = design_escapement [ 1 ]	1568:4:50828:50872	160269	1	True				
ANR	160281	AssignmentExpression	metrics -> v_escapement = design_escapement [ 1 ]		160269	0		=			
ANR	160282	PtrMemberAccess	metrics -> v_escapement		160269	0					
ANR	160283	Identifier	metrics		160269	0					
ANR	160284	Identifier	v_escapement		160269	1					
ANR	160285	ArrayIndexing	design_escapement [ 1 ]		160269	1					
ANR	160286	Identifier	design_escapement		160269	0					
ANR	160287	PrimaryExpression	1		160269	1					
ANR	160288	ExpressionStatement	metrics -> em_x = du_emx	1569:4:50878:50900	160269	2	True				
ANR	160289	AssignmentExpression	metrics -> em_x = du_emx		160269	0		=			
ANR	160290	PtrMemberAccess	metrics -> em_x		160269	0					
ANR	160291	Identifier	metrics		160269	0					
ANR	160292	Identifier	em_x		160269	1					
ANR	160293	Identifier	du_emx		160269	1					
ANR	160294	ExpressionStatement	metrics -> em_y = du_emy	1570:4:50906:50928	160269	3	True				
ANR	160295	AssignmentExpression	metrics -> em_y = du_emy		160269	0		=			
ANR	160296	PtrMemberAccess	metrics -> em_y		160269	0					
ANR	160297	Identifier	metrics		160269	0					
ANR	160298	Identifier	em_y		160269	1					
ANR	160299	Identifier	du_emy		160269	1					
ANR	160300	ExpressionStatement	metrics -> bbox_x0 = design_bbox [ 0 ]	1571:4:50934:50967	160269	4	True				
ANR	160301	AssignmentExpression	metrics -> bbox_x0 = design_bbox [ 0 ]		160269	0		=			
ANR	160302	PtrMemberAccess	metrics -> bbox_x0		160269	0					
ANR	160303	Identifier	metrics		160269	0					
ANR	160304	Identifier	bbox_x0		160269	1					
ANR	160305	ArrayIndexing	design_bbox [ 0 ]		160269	1					
ANR	160306	Identifier	design_bbox		160269	0					
ANR	160307	PrimaryExpression	0		160269	1					
ANR	160308	ExpressionStatement	metrics -> bbox_y0 = design_bbox [ 1 ]	1572:4:50973:51006	160269	5	True				
ANR	160309	AssignmentExpression	metrics -> bbox_y0 = design_bbox [ 1 ]		160269	0		=			
ANR	160310	PtrMemberAccess	metrics -> bbox_y0		160269	0					
ANR	160311	Identifier	metrics		160269	0					
ANR	160312	Identifier	bbox_y0		160269	1					
ANR	160313	ArrayIndexing	design_bbox [ 1 ]		160269	1					
ANR	160314	Identifier	design_bbox		160269	0					
ANR	160315	PrimaryExpression	1		160269	1					
ANR	160316	ExpressionStatement	metrics -> bbox_x1 = design_bbox [ 2 ]	1573:4:51012:51045	160269	6	True				
ANR	160317	AssignmentExpression	metrics -> bbox_x1 = design_bbox [ 2 ]		160269	0		=			
ANR	160318	PtrMemberAccess	metrics -> bbox_x1		160269	0					
ANR	160319	Identifier	metrics		160269	0					
ANR	160320	Identifier	bbox_x1		160269	1					
ANR	160321	ArrayIndexing	design_bbox [ 2 ]		160269	1					
ANR	160322	Identifier	design_bbox		160269	0					
ANR	160323	PrimaryExpression	2		160269	1					
ANR	160324	ExpressionStatement	metrics -> bbox_y1 = design_bbox [ 3 ]	1574:4:51051:51084	160269	7	True				
ANR	160325	AssignmentExpression	metrics -> bbox_y1 = design_bbox [ 3 ]		160269	0		=			
ANR	160326	PtrMemberAccess	metrics -> bbox_y1		160269	0					
ANR	160327	Identifier	metrics		160269	0					
ANR	160328	Identifier	bbox_y1		160269	1					
ANR	160329	ArrayIndexing	design_bbox [ 3 ]		160269	1					
ANR	160330	Identifier	design_bbox		160269	0					
ANR	160331	PrimaryExpression	3		160269	1					
ANR	160332	ReturnType	static inline void		160269	1					
ANR	160333	Identifier	set_metrics		160269	2					
ANR	160334	ParameterList	"fapi_ufst_server * r , gs_fapi_metrics * metrics , SL32 design_bbox [ 4 ] , SW16 design_escapement [ 2 ] , SW16 du_emx , SW16 du_emy"		160269	3					
ANR	160335	Parameter	fapi_ufst_server * r	1562:12:50626:50645	160269	0	True				
ANR	160336	ParameterType	fapi_ufst_server *		160269	0					
ANR	160337	Identifier	r		160269	1					
ANR	160338	Parameter	gs_fapi_metrics * metrics	1562:34:50648:50672	160269	1	True				
ANR	160339	ParameterType	gs_fapi_metrics *		160269	0					
ANR	160340	Identifier	metrics		160269	1					
ANR	160341	Parameter	SL32 design_bbox [ 4 ]	1563:12:50687:50705	160269	2	True				
ANR	160342	ParameterType	SL32 [ 4 ]		160269	0					
ANR	160343	Identifier	design_bbox		160269	1					
ANR	160344	Parameter	SW16 design_escapement [ 2 ]	1563:33:50708:50732	160269	3	True				
ANR	160345	ParameterType	SW16 [ 2 ]		160269	0					
ANR	160346	Identifier	design_escapement		160269	1					
ANR	160347	Parameter	SW16 du_emx	1563:60:50735:50745	160269	4	True				
ANR	160348	ParameterType	SW16		160269	0					
ANR	160349	Identifier	du_emx		160269	1					
ANR	160350	Parameter	SW16 du_emy	1564:12:50760:50770	160269	5	True				
ANR	160351	ParameterType	SW16		160269	0					
ANR	160352	Identifier	du_emy		160269	1					
ANR	160353	CFGEntryNode	ENTRY		160269		True				
ANR	160354	CFGExitNode	EXIT		160269		True				
ANR	160355	Symbol	du_emx		160269						
ANR	160356	Symbol	metrics -> escapement		160269						
ANR	160357	Symbol	du_emy		160269						
ANR	160358	Symbol	design_bbox		160269						
ANR	160359	Symbol	metrics -> em_y		160269						
ANR	160360	Symbol	design_escapement		160269						
ANR	160361	Symbol	metrics -> em_x		160269						
ANR	160362	Symbol	* design_bbox		160269						
ANR	160363	Symbol	metrics -> v_escapement		160269						
ANR	160364	Symbol	r		160269						
ANR	160365	Symbol	metrics -> bbox_y0		160269						
ANR	160366	Symbol	metrics -> bbox_x1		160269						
ANR	160367	Symbol	* metrics		160269						
ANR	160368	Symbol	metrics -> bbox_x0		160269						
ANR	160369	Symbol	metrics -> bbox_y1		160269						
ANR	160370	Symbol	metrics		160269						
ANR	160371	Symbol	* design_escapement		160269						
ANR	160372	Function	get_char	1577:0:51089:64354							
ANR	160373	FunctionDef	"get_char (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_path * p , gs_fapi_metrics * metrics , UW16 format)"		160372	0					
ANR	160374	CompoundStatement		1580:0:51249:64354	160372	0					
ANR	160375	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1581:4:51255:51292	160372	0	True				
ANR	160376	IdentifierDecl	* r = If_to_I ( server )		160372	0					
ANR	160377	IdentifierDeclType	fapi_ufst_server *		160372	0					
ANR	160378	Identifier	r		160372	1					
ANR	160379	AssignmentExpression	* r = If_to_I ( server )		160372	2		=			
ANR	160380	Identifier	r		160372	0					
ANR	160381	CallExpression	If_to_I ( server )		160372	1					
ANR	160382	Callee	If_to_I		160372	0					
ANR	160383	Identifier	If_to_I		160372	0					
ANR	160384	ArgumentList	server		160372	1					
ANR	160385	Argument	server		160372	0					
ANR	160386	Identifier	server		160372	0					
ANR	160387	IdentifierDeclStatement	"UW16 code = 0 , code2 = 0 ;"	1582:4:51298:51322	160372	1	True				
ANR	160388	IdentifierDecl	code = 0		160372	0					
ANR	160389	IdentifierDeclType	UW16		160372	0					
ANR	160390	Identifier	code		160372	1					
ANR	160391	AssignmentExpression	code = 0		160372	2		=			
ANR	160392	Identifier	code		160372	0					
ANR	160393	PrimaryExpression	0		160372	1					
ANR	160394	IdentifierDecl	code2 = 0		160372	1					
ANR	160395	IdentifierDeclType	UW16		160372	0					
ANR	160396	Identifier	code2		160372	1					
ANR	160397	AssignmentExpression	code2 = 0		160372	2		=			
ANR	160398	Identifier	code2		160372	0					
ANR	160399	PrimaryExpression	0		160372	1					
ANR	160400	IdentifierDeclStatement	UL32 cc = ( UL32 ) c -> char_codes [ 0 ] ;	1583:4:51328:51361	160372	2	True				
ANR	160401	IdentifierDecl	cc = ( UL32 ) c -> char_codes [ 0 ]		160372	0					
ANR	160402	IdentifierDeclType	UL32		160372	0					
ANR	160403	Identifier	cc		160372	1					
ANR	160404	AssignmentExpression	cc = ( UL32 ) c -> char_codes [ 0 ]		160372	2		=			
ANR	160405	Identifier	cc		160372	0					
ANR	160406	CastExpression	( UL32 ) c -> char_codes [ 0 ]		160372	1					
ANR	160407	CastTarget	UL32		160372	0					
ANR	160408	ArrayIndexing	c -> char_codes [ 0 ]		160372	1					
ANR	160409	PtrMemberAccess	c -> char_codes		160372	0					
ANR	160410	Identifier	c		160372	0					
ANR	160411	Identifier	char_codes		160372	1					
ANR	160412	PrimaryExpression	0		160372	1					
ANR	160413	IdentifierDeclStatement	SL32 design_bbox [ 4 ] ;	1584:4:51367:51386	160372	3	True				
ANR	160414	IdentifierDecl	design_bbox [ 4 ]		160372	0					
ANR	160415	IdentifierDeclType	SL32 [ 4 ]		160372	0					
ANR	160416	Identifier	design_bbox		160372	1					
ANR	160417	PrimaryExpression	4		160372	2					
ANR	160418	IdentifierDeclStatement	char PSchar_name [ MAX_CHAR_NAME_LENGTH ] ;	1585:4:51392:51430	160372	4	True				
ANR	160419	IdentifierDecl	PSchar_name [ MAX_CHAR_NAME_LENGTH ]		160372	0					
ANR	160420	IdentifierDeclType	char [ MAX_CHAR_NAME_LENGTH ]		160372	0					
ANR	160421	Identifier	PSchar_name		160372	1					
ANR	160422	Identifier	MAX_CHAR_NAME_LENGTH		160372	2					
ANR	160423	IdentifierDeclStatement	MEM_HANDLE result = NULL ;	1586:4:51436:51460	160372	5	True				
ANR	160424	IdentifierDecl	result = NULL		160372	0					
ANR	160425	IdentifierDeclType	MEM_HANDLE		160372	0					
ANR	160426	Identifier	result		160372	1					
ANR	160427	AssignmentExpression	result = NULL		160372	2		=			
ANR	160428	Identifier	NULL		160372	0					
ANR	160429	Identifier	NULL		160372	1					
ANR	160430	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) ff -> server_font_data ;	1587:4:51466:51539	160372	6	True				
ANR	160431	IdentifierDecl	* d = ( ufst_common_font_data * ) ff -> server_font_data		160372	0					
ANR	160432	IdentifierDeclType	ufst_common_font_data *		160372	0					
ANR	160433	Identifier	d		160372	1					
ANR	160434	AssignmentExpression	* d = ( ufst_common_font_data * ) ff -> server_font_data		160372	2		=			
ANR	160435	Identifier	d		160372	0					
ANR	160436	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		160372	1					
ANR	160437	CastTarget	ufst_common_font_data *		160372	0					
ANR	160438	PtrMemberAccess	ff -> server_font_data		160372	1					
ANR	160439	Identifier	ff		160372	0					
ANR	160440	Identifier	server_font_data		160372	1					
ANR	160441	IdentifierDeclStatement	SW16 design_escapement [ 2 ] ;	1588:4:51545:51570	160372	7	True				
ANR	160442	IdentifierDecl	design_escapement [ 2 ]		160372	0					
ANR	160443	IdentifierDeclType	SW16 [ 2 ]		160372	0					
ANR	160444	Identifier	design_escapement		160372	1					
ANR	160445	PrimaryExpression	2		160372	2					
ANR	160446	IdentifierDeclStatement	"SW16 du_emx = 0 , du_emy = 0 ;"	1589:4:51576:51603	160372	8	True				
ANR	160447	IdentifierDecl	du_emx = 0		160372	0					
ANR	160448	IdentifierDeclType	SW16		160372	0					
ANR	160449	Identifier	du_emx		160372	1					
ANR	160450	AssignmentExpression	du_emx = 0		160372	2		=			
ANR	160451	Identifier	du_emx		160372	0					
ANR	160452	PrimaryExpression	0		160372	1					
ANR	160453	IdentifierDecl	du_emy = 0		160372	1					
ANR	160454	IdentifierDeclType	SW16		160372	0					
ANR	160455	Identifier	du_emy		160372	1					
ANR	160456	AssignmentExpression	du_emy = 0		160372	2		=			
ANR	160457	Identifier	du_emy		160372	0					
ANR	160458	PrimaryExpression	0		160372	1					
ANR	160459	IdentifierDeclStatement	gs_string notdef_str ;	1590:4:51609:51629	160372	9	True				
ANR	160460	IdentifierDecl	notdef_str		160372	0					
ANR	160461	IdentifierDeclType	gs_string		160372	0					
ANR	160462	Identifier	notdef_str		160372	1					
ANR	160463	IdentifierDeclStatement	"const char * notdef = "".notdef"" ;"	1591:4:51635:51665	160372	10	True				
ANR	160464	IdentifierDecl	"* notdef = "".notdef"""		160372	0					
ANR	160465	IdentifierDeclType	const char *		160372	0					
ANR	160466	Identifier	notdef		160372	1					
ANR	160467	AssignmentExpression	"* notdef = "".notdef"""		160372	2		=			
ANR	160468	Identifier	notdef		160372	0					
ANR	160469	PrimaryExpression	""".notdef"""		160372	1					
ANR	160470	IdentifierDeclStatement	"const char * space = ""space"" ;"	1592:4:51671:51698	160372	11	True				
ANR	160471	IdentifierDecl	"* space = ""space"""		160372	0					
ANR	160472	IdentifierDeclType	const char *		160372	0					
ANR	160473	Identifier	space		160372	1					
ANR	160474	AssignmentExpression	"* space = ""space"""		160372	2		=			
ANR	160475	Identifier	space		160372	0					
ANR	160476	PrimaryExpression	"""space"""		160372	1					
ANR	160477	IdentifierDeclStatement	const void * client_char_data = ff -> char_data ;	1593:4:51704:51748	160372	12	True				
ANR	160478	IdentifierDecl	* client_char_data = ff -> char_data		160372	0					
ANR	160479	IdentifierDeclType	const void *		160372	0					
ANR	160480	Identifier	client_char_data		160372	1					
ANR	160481	AssignmentExpression	* client_char_data = ff -> char_data		160372	2		=			
ANR	160482	Identifier	client_char_data		160372	0					
ANR	160483	PtrMemberAccess	ff -> char_data		160372	1					
ANR	160484	Identifier	ff		160372	0					
ANR	160485	Identifier	char_data		160372	1					
ANR	160486	IdentifierDeclStatement	const int client_char_data_len = ff -> char_data_len ;	1594:4:51754:51804	160372	13	True				
ANR	160487	IdentifierDecl	client_char_data_len = ff -> char_data_len		160372	0					
ANR	160488	IdentifierDeclType	const int		160372	0					
ANR	160489	Identifier	client_char_data_len		160372	1					
ANR	160490	AssignmentExpression	client_char_data_len = ff -> char_data_len		160372	2		=			
ANR	160491	Identifier	client_char_data_len		160372	0					
ANR	160492	PtrMemberAccess	ff -> char_data_len		160372	1					
ANR	160493	Identifier	ff		160372	0					
ANR	160494	Identifier	char_data_len		160372	1					
ANR	160495	IdentifierDeclStatement	int length ;	1595:4:51810:51820	160372	14	True				
ANR	160496	IdentifierDecl	length		160372	0					
ANR	160497	IdentifierDeclType	int		160372	0					
ANR	160498	Identifier	length		160372	1					
ANR	160499	IdentifierDeclStatement	FONTCONTEXT * fc = & r -> fc ;	1596:4:51826:51850	160372	15	True				
ANR	160500	IdentifierDecl	* fc = & r -> fc		160372	0					
ANR	160501	IdentifierDeclType	FONTCONTEXT *		160372	0					
ANR	160502	Identifier	fc		160372	1					
ANR	160503	AssignmentExpression	* fc = & r -> fc		160372	2		=			
ANR	160504	Identifier	fc		160372	0					
ANR	160505	UnaryOperationExpression	& r -> fc		160372	1					
ANR	160506	UnaryOperator	&		160372	0					
ANR	160507	PtrMemberAccess	r -> fc		160372	1					
ANR	160508	Identifier	r		160372	0					
ANR	160509	Identifier	fc		160372	1					
ANR	160510	IdentifierDeclStatement	UW16 glyph_width [ 2 ] ;	1597:4:51856:51875	160372	16	True				
ANR	160511	IdentifierDecl	glyph_width [ 2 ]		160372	0					
ANR	160512	IdentifierDeclType	UW16 [ 2 ]		160372	0					
ANR	160513	Identifier	glyph_width		160372	1					
ANR	160514	PrimaryExpression	2		160372	2					
ANR	160515	IdentifierDeclStatement	WIDTH_LIST_INPUT_ENTRY glyph_width_code ;	1598:4:51881:51920	160372	17	True				
ANR	160516	IdentifierDecl	glyph_width_code		160372	0					
ANR	160517	IdentifierDeclType	WIDTH_LIST_INPUT_ENTRY		160372	0					
ANR	160518	Identifier	glyph_width_code		160372	1					
ANR	160519	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	1599:4:51926:51965	160372	18	True				
ANR	160520	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		160372	0					
ANR	160521	IdentifierDeclType	bool		160372	0					
ANR	160522	Identifier	use_XL_format		160372	1					
ANR	160523	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		160372	2		=			
ANR	160524	Identifier	use_XL_format		160372	0					
ANR	160525	PtrMemberAccess	ff -> is_mtx_skipped		160372	1					
ANR	160526	Identifier	ff		160372	0					
ANR	160527	Identifier	is_mtx_skipped		160372	1					
ANR	160528	ExpressionStatement	FSA_FROM_SERVER	1601:4:51972:51987	160372	19	True				
ANR	160529	Identifier	FSA_FROM_SERVER		160372	0					
ANR	160530	ExpressionStatement	design_escapement [ 0 ] = design_escapement [ 1 ] = 0	1603:4:51994:52041	160372	20	True				
ANR	160531	AssignmentExpression	design_escapement [ 0 ] = design_escapement [ 1 ] = 0		160372	0		=			
ANR	160532	ArrayIndexing	design_escapement [ 0 ]		160372	0					
ANR	160533	Identifier	design_escapement		160372	0					
ANR	160534	PrimaryExpression	0		160372	1					
ANR	160535	AssignmentExpression	design_escapement [ 1 ] = 0		160372	1		=			
ANR	160536	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	160537	Identifier	design_escapement		160372	0					
ANR	160538	PrimaryExpression	1		160372	1					
ANR	160539	PrimaryExpression	0		160372	1					
ANR	160540	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		160372	21					
ANR	160541	Condition	d -> font_type == FC_FCO_TYPE	1610:7:52304:52330	160372	0	True				
ANR	160542	EqualityExpression	d -> font_type == FC_FCO_TYPE		160372	0		==			
ANR	160543	PtrMemberAccess	d -> font_type		160372	0					
ANR	160544	Identifier	d		160372	0					
ANR	160545	Identifier	font_type		160372	1					
ANR	160546	Identifier	FC_FCO_TYPE		160372	1					
ANR	160547	CompoundStatement		31:36:1083:1083	160372	1					
ANR	160548	ExpressionStatement	"memset ( & ( server -> face . ctm ) , 0x00 , sizeof ( server -> face . ctm ) )"	1611:8:52343:52402	160372	0	True				
ANR	160549	CallExpression	"memset ( & ( server -> face . ctm ) , 0x00 , sizeof ( server -> face . ctm ) )"		160372	0					
ANR	160550	Callee	memset		160372	0					
ANR	160551	Identifier	memset		160372	0					
ANR	160552	ArgumentList	& ( server -> face . ctm )		160372	1					
ANR	160553	Argument	& ( server -> face . ctm )		160372	0					
ANR	160554	UnaryOperationExpression	& ( server -> face . ctm )		160372	0					
ANR	160555	UnaryOperator	&		160372	0					
ANR	160556	MemberAccess	server -> face . ctm		160372	1					
ANR	160557	PtrMemberAccess	server -> face		160372	0					
ANR	160558	Identifier	server		160372	0					
ANR	160559	Identifier	face		160372	1					
ANR	160560	Identifier	ctm		160372	1					
ANR	160561	Argument	0x00		160372	1					
ANR	160562	PrimaryExpression	0x00		160372	0					
ANR	160563	Argument	sizeof ( server -> face . ctm )		160372	2					
ANR	160564	SizeofExpression	sizeof ( server -> face . ctm )		160372	0					
ANR	160565	Sizeof	sizeof		160372	0					
ANR	160566	MemberAccess	server -> face . ctm		160372	1					
ANR	160567	PtrMemberAccess	server -> face		160372	0					
ANR	160568	Identifier	server		160372	0					
ANR	160569	Identifier	face		160372	1					
ANR	160570	Identifier	ctm		160372	1					
ANR	160571	IfStatement	if ( ff -> is_type1 )		160372	22					
ANR	160572	Condition	ff -> is_type1	1614:8:52419:52430	160372	0	True				
ANR	160573	PtrMemberAccess	ff -> is_type1		160372	0					
ANR	160574	Identifier	ff		160372	0					
ANR	160575	Identifier	is_type1		160372	1					
ANR	160576	CompoundStatement		35:22:1183:1183	160372	1					
ANR	160577	ExpressionStatement	ff -> need_decrypt = false	1620:8:52721:52745	160372	0	True				
ANR	160578	AssignmentExpression	ff -> need_decrypt = false		160372	0		=			
ANR	160579	PtrMemberAccess	ff -> need_decrypt		160372	0					
ANR	160580	Identifier	ff		160372	0					
ANR	160581	Identifier	need_decrypt		160372	1					
ANR	160582	Identifier	false		160372	1					
ANR	160583	ExpressionStatement	"length = ff -> get_glyph ( ff , c -> char_codes [ 0 ] , NULL , 0 )"	1621:8:52755:52808	160372	1	True				
ANR	160584	AssignmentExpression	"length = ff -> get_glyph ( ff , c -> char_codes [ 0 ] , NULL , 0 )"		160372	0		=			
ANR	160585	Identifier	length		160372	0					
ANR	160586	CallExpression	"ff -> get_glyph ( ff , c -> char_codes [ 0 ] , NULL , 0 )"		160372	1					
ANR	160587	Callee	ff -> get_glyph		160372	0					
ANR	160588	PtrMemberAccess	ff -> get_glyph		160372	0					
ANR	160589	Identifier	ff		160372	0					
ANR	160590	Identifier	get_glyph		160372	1					
ANR	160591	ArgumentList	ff		160372	1					
ANR	160592	Argument	ff		160372	0					
ANR	160593	Identifier	ff		160372	0					
ANR	160594	Argument	c -> char_codes [ 0 ]		160372	1					
ANR	160595	ArrayIndexing	c -> char_codes [ 0 ]		160372	0					
ANR	160596	PtrMemberAccess	c -> char_codes		160372	0					
ANR	160597	Identifier	c		160372	0					
ANR	160598	Identifier	char_codes		160372	1					
ANR	160599	PrimaryExpression	0		160372	1					
ANR	160600	Argument	NULL		160372	2					
ANR	160601	Identifier	NULL		160372	0					
ANR	160602	Argument	0		160372	3					
ANR	160603	PrimaryExpression	0		160372	0					
ANR	160604	IfStatement	if ( length == - 1 )		160372	2					
ANR	160605	Condition	length == - 1	1622:12:52822:52833	160372	0	True				
ANR	160606	EqualityExpression	length == - 1		160372	0		==			
ANR	160607	Identifier	length		160372	0					
ANR	160608	UnaryOperationExpression	- 1		160372	1					
ANR	160609	UnaryOperator	-		160372	0					
ANR	160610	PrimaryExpression	1		160372	1					
ANR	160611	CompoundStatement		43:26:1586:1586	160372	1					
ANR	160612	ReturnStatement	return ( c -> char_codes [ 0 ] + 1 ) ;	1623:12:52850:52879	160372	0	True				
ANR	160613	AdditiveExpression	c -> char_codes [ 0 ] + 1		160372	0		+			
ANR	160614	ArrayIndexing	c -> char_codes [ 0 ]		160372	0					
ANR	160615	PtrMemberAccess	c -> char_codes		160372	0					
ANR	160616	Identifier	c		160372	0					
ANR	160617	Identifier	char_codes		160372	1					
ANR	160618	PrimaryExpression	0		160372	1					
ANR	160619	PrimaryExpression	1		160372	1					
ANR	160620	ExpressionStatement	ff -> need_decrypt = true	1626:4:52901:52924	160372	23	True				
ANR	160621	AssignmentExpression	ff -> need_decrypt = true		160372	0		=			
ANR	160622	PtrMemberAccess	ff -> need_decrypt		160372	0					
ANR	160623	Identifier	ff		160372	0					
ANR	160624	Identifier	need_decrypt		160372	1					
ANR	160625	Identifier	true		160372	1					
ANR	160626	ExpressionStatement	"memset ( metrics , 0 , sizeof ( * metrics ) )"	1627:4:52930:52966	160372	24	True				
ANR	160627	CallExpression	"memset ( metrics , 0 , sizeof ( * metrics ) )"		160372	0					
ANR	160628	Callee	memset		160372	0					
ANR	160629	Identifier	memset		160372	0					
ANR	160630	ArgumentList	metrics		160372	1					
ANR	160631	Argument	metrics		160372	0					
ANR	160632	Identifier	metrics		160372	0					
ANR	160633	Argument	0		160372	1					
ANR	160634	PrimaryExpression	0		160372	0					
ANR	160635	Argument	sizeof ( * metrics )		160372	2					
ANR	160636	SizeofExpression	sizeof ( * metrics )		160372	0					
ANR	160637	Sizeof	sizeof		160372	0					
ANR	160638	UnaryOperationExpression	* metrics		160372	1					
ANR	160639	UnaryOperator	*		160372	0					
ANR	160640	Identifier	metrics		160372	1					
ANR	160641	ExpressionStatement	metrics -> bbox_x1 = - 1	1628:4:52972:52993	160372	25	True				
ANR	160642	AssignmentExpression	metrics -> bbox_x1 = - 1		160372	0		=			
ANR	160643	PtrMemberAccess	metrics -> bbox_x1		160372	0					
ANR	160644	Identifier	metrics		160372	0					
ANR	160645	Identifier	bbox_x1		160372	1					
ANR	160646	UnaryOperationExpression	- 1		160372	1					
ANR	160647	UnaryOperator	-		160372	0					
ANR	160648	PrimaryExpression	1		160372	1					
ANR	160649	IfStatement	if ( ff -> is_type1 && ! ff -> is_cid )		160372	26					
ANR	160650	Condition	ff -> is_type1 && ! ff -> is_cid	1630:8:53004:53030	160372	0	True				
ANR	160651	AndExpression	ff -> is_type1 && ! ff -> is_cid		160372	0		&&			
ANR	160652	PtrMemberAccess	ff -> is_type1		160372	0					
ANR	160653	Identifier	ff		160372	0					
ANR	160654	Identifier	is_type1		160372	1					
ANR	160655	UnaryOperationExpression	! ff -> is_cid		160372	1					
ANR	160656	UnaryOperator	!		160372	0					
ANR	160657	PtrMemberAccess	ff -> is_cid		160372	1					
ANR	160658	Identifier	ff		160372	0					
ANR	160659	Identifier	is_cid		160372	1					
ANR	160660	CompoundStatement		52:8:1793:1850	160372	1					
ANR	160661	IdentifierDeclStatement	"int len = min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 ) ;"	1631:8:53043:53100	160372	0	True				
ANR	160662	IdentifierDecl	"len = min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 )"		160372	0					
ANR	160663	IdentifierDeclType	int		160372	0					
ANR	160664	Identifier	len		160372	1					
ANR	160665	AssignmentExpression	"len = min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 )"		160372	2		=			
ANR	160666	Identifier	len		160372	0					
ANR	160667	CallExpression	"min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 )"		160372	1					
ANR	160668	Callee	min		160372	0					
ANR	160669	Identifier	min		160372	0					
ANR	160670	ArgumentList	ff -> char_data_len		160372	1					
ANR	160671	Argument	ff -> char_data_len		160372	0					
ANR	160672	PtrMemberAccess	ff -> char_data_len		160372	0					
ANR	160673	Identifier	ff		160372	0					
ANR	160674	Identifier	char_data_len		160372	1					
ANR	160675	Argument	sizeof ( PSchar_name ) - 1		160372	1					
ANR	160676	AdditiveExpression	sizeof ( PSchar_name ) - 1		160372	0		-			
ANR	160677	SizeofExpression	sizeof ( PSchar_name )		160372	0					
ANR	160678	Sizeof	sizeof		160372	0					
ANR	160679	SizeofOperand	PSchar_name		160372	1					
ANR	160680	PrimaryExpression	1		160372	1					
ANR	160681	ExpressionStatement	"memcpy ( PSchar_name , ff -> char_data , len )"	1633:8:53111:53150	160372	1	True				
ANR	160682	CallExpression	"memcpy ( PSchar_name , ff -> char_data , len )"		160372	0					
ANR	160683	Callee	memcpy		160372	0					
ANR	160684	Identifier	memcpy		160372	0					
ANR	160685	ArgumentList	PSchar_name		160372	1					
ANR	160686	Argument	PSchar_name		160372	0					
ANR	160687	Identifier	PSchar_name		160372	0					
ANR	160688	Argument	ff -> char_data		160372	1					
ANR	160689	PtrMemberAccess	ff -> char_data		160372	0					
ANR	160690	Identifier	ff		160372	0					
ANR	160691	Identifier	char_data		160372	1					
ANR	160692	Argument	len		160372	2					
ANR	160693	Identifier	len		160372	0					
ANR	160694	ExpressionStatement	PSchar_name [ len ] = 0	1634:8:53160:53180	160372	2	True				
ANR	160695	AssignmentExpression	PSchar_name [ len ] = 0		160372	0		=			
ANR	160696	ArrayIndexing	PSchar_name [ len ]		160372	0					
ANR	160697	Identifier	PSchar_name		160372	0					
ANR	160698	Identifier	len		160372	1					
ANR	160699	PrimaryExpression	0		160372	1					
ANR	160700	ElseStatement	else		160372	0					
ANR	160701	CompoundStatement		57:9:1947:1947	160372	0					
ANR	160702	ExpressionStatement	"make_asciiz_char_name ( PSchar_name , sizeof ( PSchar_name ) , c )"	1637:8:53207:53265	160372	0	True				
ANR	160703	CallExpression	"make_asciiz_char_name ( PSchar_name , sizeof ( PSchar_name ) , c )"		160372	0					
ANR	160704	Callee	make_asciiz_char_name		160372	0					
ANR	160705	Identifier	make_asciiz_char_name		160372	0					
ANR	160706	ArgumentList	PSchar_name		160372	1					
ANR	160707	Argument	PSchar_name		160372	0					
ANR	160708	Identifier	PSchar_name		160372	0					
ANR	160709	Argument	sizeof ( PSchar_name )		160372	1					
ANR	160710	SizeofExpression	sizeof ( PSchar_name )		160372	0					
ANR	160711	Sizeof	sizeof		160372	0					
ANR	160712	SizeofOperand	PSchar_name		160372	1					
ANR	160713	Argument	c		160372	2					
ANR	160714	Identifier	c		160372	0					
ANR	160715	ExpressionStatement	"CGIFchIdptr ( FSA & cc , PSchar_name )"	1640:4:53278:53312	160372	27	True				
ANR	160716	CallExpression	"CGIFchIdptr ( FSA & cc , PSchar_name )"		160372	0					
ANR	160717	Callee	CGIFchIdptr		160372	0					
ANR	160718	Identifier	CGIFchIdptr		160372	0					
ANR	160719	ArgumentList	FSA & cc		160372	1					
ANR	160720	Argument	FSA & cc		160372	0					
ANR	160721	BitAndExpression	FSA & cc		160372	0		&			
ANR	160722	Identifier	FSA		160372	0					
ANR	160723	Identifier	cc		160372	1					
ANR	160724	Argument	PSchar_name		160372	1					
ANR	160725	Identifier	PSchar_name		160372	0					
ANR	160726	CompoundStatement		62:4:2117:2117	160372	28					
ANR	160727	ExpressionStatement	pIFS -> fcCur . format &= ~FC_OUTPUT_MASK	1643:8:53587:53624	160372	0	True				
ANR	160728	AssignmentExpression	pIFS -> fcCur . format &= ~FC_OUTPUT_MASK		160372	0		&=			
ANR	160729	MemberAccess	pIFS -> fcCur . format		160372	0					
ANR	160730	PtrMemberAccess	pIFS -> fcCur		160372	0					
ANR	160731	Identifier	pIFS		160372	0					
ANR	160732	Identifier	fcCur		160372	1					
ANR	160733	Identifier	format		160372	1					
ANR	160734	Identifier	~FC_OUTPUT_MASK		160372	1					
ANR	160735	ExpressionStatement	pIFS -> fcCur . format |= format	1644:8:53634:53662	160372	1	True				
ANR	160736	AssignmentExpression	pIFS -> fcCur . format |= format		160372	0		|=			
ANR	160737	MemberAccess	pIFS -> fcCur . format		160372	0					
ANR	160738	PtrMemberAccess	pIFS -> fcCur		160372	0					
ANR	160739	Identifier	pIFS		160372	0					
ANR	160740	Identifier	fcCur		160372	1					
ANR	160741	Identifier	format		160372	1					
ANR	160742	Identifier	format		160372	1					
ANR	160743	ExpressionStatement	r -> bRaster = FALSE	1646:4:53674:53692	160372	29	True				
ANR	160744	AssignmentExpression	r -> bRaster = FALSE		160372	0		=			
ANR	160745	PtrMemberAccess	r -> bRaster		160372	0					
ANR	160746	Identifier	r		160372	0					
ANR	160747	Identifier	bRaster		160372	1					
ANR	160748	Identifier	FALSE		160372	1					
ANR	160749	ExpressionStatement	r -> ff = ff	1647:4:53698:53708	160372	30	True				
ANR	160750	AssignmentExpression	r -> ff = ff		160372	0		=			
ANR	160751	PtrMemberAccess	r -> ff		160372	0					
ANR	160752	Identifier	r		160372	0					
ANR	160753	Identifier	ff		160372	1					
ANR	160754	Identifier	ff		160372	1					
ANR	160755	ExpressionStatement	r -> callback_error = 0	1648:4:53714:53735	160372	31	True				
ANR	160756	AssignmentExpression	r -> callback_error = 0		160372	0		=			
ANR	160757	PtrMemberAccess	r -> callback_error		160372	0					
ANR	160758	Identifier	r		160372	0					
ANR	160759	Identifier	callback_error		160372	1					
ANR	160760	PrimaryExpression	0		160372	1					
ANR	160761	ExpressionStatement	r -> sb_x = c -> sb_x	1649:4:53741:53758	160372	32	True				
ANR	160762	AssignmentExpression	r -> sb_x = c -> sb_x		160372	0		=			
ANR	160763	PtrMemberAccess	r -> sb_x		160372	0					
ANR	160764	Identifier	r		160372	0					
ANR	160765	Identifier	sb_x		160372	1					
ANR	160766	PtrMemberAccess	c -> sb_x		160372	1					
ANR	160767	Identifier	c		160372	0					
ANR	160768	Identifier	sb_x		160372	1					
ANR	160769	ExpressionStatement	r -> aw_x = c -> aw_x	1650:4:53764:53781	160372	33	True				
ANR	160770	AssignmentExpression	r -> aw_x = c -> aw_x		160372	0		=			
ANR	160771	PtrMemberAccess	r -> aw_x		160372	0					
ANR	160772	Identifier	r		160372	0					
ANR	160773	Identifier	aw_x		160372	1					
ANR	160774	PtrMemberAccess	c -> aw_x		160372	1					
ANR	160775	Identifier	c		160372	0					
ANR	160776	Identifier	aw_x		160372	1					
ANR	160777	ExpressionStatement	r -> metrics_type = c -> metrics_type	1651:4:53787:53820	160372	34	True				
ANR	160778	AssignmentExpression	r -> metrics_type = c -> metrics_type		160372	0		=			
ANR	160779	PtrMemberAccess	r -> metrics_type		160372	0					
ANR	160780	Identifier	r		160372	0					
ANR	160781	Identifier	metrics_type		160372	1					
ANR	160782	PtrMemberAccess	c -> metrics_type		160372	1					
ANR	160783	Identifier	c		160372	0					
ANR	160784	Identifier	metrics_type		160372	1					
ANR	160785	IfStatement	if ( d -> font_type == FC_FCO_TYPE && r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE )		160372	35					
ANR	160786	Condition	d -> font_type == FC_FCO_TYPE && r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE	1652:8:53830:53909	160372	0	True				
ANR	160787	AndExpression	d -> font_type == FC_FCO_TYPE && r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE		160372	0		&&			
ANR	160788	EqualityExpression	d -> font_type == FC_FCO_TYPE		160372	0		==			
ANR	160789	PtrMemberAccess	d -> font_type		160372	0					
ANR	160790	Identifier	d		160372	0					
ANR	160791	Identifier	font_type		160372	1					
ANR	160792	Identifier	FC_FCO_TYPE		160372	1					
ANR	160793	BitAndExpression	r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE		160372	1		&			
ANR	160794	MemberAccess	r -> fc . ExtndFlags		160372	0					
ANR	160795	PtrMemberAccess	r -> fc		160372	0					
ANR	160796	Identifier	r		160372	0					
ANR	160797	Identifier	fc		160372	1					
ANR	160798	Identifier	ExtndFlags		160372	1					
ANR	160799	Identifier	EF_SUBSTHOLLOWBOX_TYPE		160372	1					
ANR	160800	CompoundStatement		74:54:2662:2662	160372	1					
ANR	160801	IfStatement	"if ( c -> char_name != NULL && c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 ) )"		160372	0					
ANR	160802	Condition	"c -> char_name != NULL && c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 )"	1654:12:53926:54024	160372	0	True				
ANR	160803	AndExpression	"c -> char_name != NULL && c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 )"		160372	0		&&			
ANR	160804	EqualityExpression	c -> char_name != NULL		160372	0		!=			
ANR	160805	PtrMemberAccess	c -> char_name		160372	0					
ANR	160806	Identifier	c		160372	0					
ANR	160807	Identifier	char_name		160372	1					
ANR	160808	Identifier	NULL		160372	1					
ANR	160809	AndExpression	"c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 )"		160372	1		&&			
ANR	160810	EqualityExpression	c -> char_name_length == 7		160372	0		==			
ANR	160811	PtrMemberAccess	c -> char_name_length		160372	0					
ANR	160812	Identifier	c		160372	0					
ANR	160813	Identifier	char_name_length		160372	1					
ANR	160814	PrimaryExpression	7		160372	1					
ANR	160815	UnaryOperationExpression	"! memcmp ( c -> char_name , "".notdef"" , 7 )"		160372	1					
ANR	160816	UnaryOperator	!		160372	0					
ANR	160817	CallExpression	"memcmp ( c -> char_name , "".notdef"" , 7 )"		160372	1					
ANR	160818	Callee	memcmp		160372	0					
ANR	160819	Identifier	memcmp		160372	0					
ANR	160820	ArgumentList	c -> char_name		160372	1					
ANR	160821	Argument	c -> char_name		160372	0					
ANR	160822	PtrMemberAccess	c -> char_name		160372	0					
ANR	160823	Identifier	c		160372	0					
ANR	160824	Identifier	char_name		160372	1					
ANR	160825	Argument	""".notdef"""		160372	1					
ANR	160826	PrimaryExpression	""".notdef"""		160372	0					
ANR	160827	Argument	7		160372	2					
ANR	160828	PrimaryExpression	7		160372	0					
ANR	160829	CompoundStatement		76:52:2777:2777	160372	1					
ANR	160830	ExpressionStatement	cc = 32	1660:12:54285:54292	160372	0	True				
ANR	160831	AssignmentExpression	cc = 32		160372	0		=			
ANR	160832	Identifier	cc		160372	0					
ANR	160833	PrimaryExpression	32		160372	1					
ANR	160834	ExpressionStatement	static_server_ptr_for_ufst_callback = r	1664:4:54334:54373	160372	36	True				
ANR	160835	AssignmentExpression	static_server_ptr_for_ufst_callback = r		160372	0		=			
ANR	160836	Identifier	static_server_ptr_for_ufst_callback		160372	0					
ANR	160837	Identifier	r		160372	1					
ANR	160838	ExpressionStatement	pIFS -> gpps = NULL	1668:4:54400:54417	160372	37	True				
ANR	160839	AssignmentExpression	pIFS -> gpps = NULL		160372	0		=			
ANR	160840	PtrMemberAccess	pIFS -> gpps		160372	0					
ANR	160841	Identifier	pIFS		160372	0					
ANR	160842	Identifier	gpps		160372	1					
ANR	160843	Identifier	NULL		160372	1					
ANR	160844	IfStatement	if ( d -> font_type == FC_TT_TYPE || d -> font_type == FC_FCO_TYPE )		160372	38					
ANR	160845	Condition	d -> font_type == FC_TT_TYPE || d -> font_type == FC_FCO_TYPE	1671:8:54435:54491	160372	0	True				
ANR	160846	OrExpression	d -> font_type == FC_TT_TYPE || d -> font_type == FC_FCO_TYPE		160372	0		||			
ANR	160847	EqualityExpression	d -> font_type == FC_TT_TYPE		160372	0		==			
ANR	160848	PtrMemberAccess	d -> font_type		160372	0					
ANR	160849	Identifier	d		160372	0					
ANR	160850	Identifier	font_type		160372	1					
ANR	160851	Identifier	FC_TT_TYPE		160372	1					
ANR	160852	EqualityExpression	d -> font_type == FC_FCO_TYPE		160372	1		==			
ANR	160853	PtrMemberAccess	d -> font_type		160372	0					
ANR	160854	Identifier	d		160372	0					
ANR	160855	Identifier	font_type		160372	1					
ANR	160856	Identifier	FC_FCO_TYPE		160372	1					
ANR	160857	CompoundStatement		92:67:3244:3244	160372	1					
ANR	160858	ExpressionStatement	glyph_width_code . CharType . TT_unicode = cc	1672:8:54504:54545	160372	0	True				
ANR	160859	AssignmentExpression	glyph_width_code . CharType . TT_unicode = cc		160372	0		=			
ANR	160860	MemberAccess	glyph_width_code . CharType . TT_unicode		160372	0					
ANR	160861	MemberAccess	glyph_width_code . CharType		160372	0					
ANR	160862	Identifier	glyph_width_code		160372	0					
ANR	160863	Identifier	CharType		160372	1					
ANR	160864	Identifier	TT_unicode		160372	1					
ANR	160865	Identifier	cc		160372	1					
ANR	160866	IfStatement	if ( use_XL_format || d -> font_type == FC_PST1_TYPE )		160372	39					
ANR	160867	Condition	use_XL_format || d -> font_type == FC_PST1_TYPE	1675:8:54562:54606	160372	0	True				
ANR	160868	OrExpression	use_XL_format || d -> font_type == FC_PST1_TYPE		160372	0		||			
ANR	160869	Identifier	use_XL_format		160372	0					
ANR	160870	EqualityExpression	d -> font_type == FC_PST1_TYPE		160372	1		==			
ANR	160871	PtrMemberAccess	d -> font_type		160372	0					
ANR	160872	Identifier	d		160372	0					
ANR	160873	Identifier	font_type		160372	1					
ANR	160874	Identifier	FC_PST1_TYPE		160372	1					
ANR	160875	CompoundStatement		96:55:3359:3359	160372	1					
ANR	160876	ExpressionStatement	code = 0	1676:8:54619:54627	160372	0	True				
ANR	160877	AssignmentExpression	code = 0		160372	0		=			
ANR	160878	Identifier	code		160372	0					
ANR	160879	PrimaryExpression	0		160372	1					
ANR	160880	ExpressionStatement	glyph_width [ 0 ] = glyph_width [ 1 ] = 0	1677:8:54637:54672	160372	1	True				
ANR	160881	AssignmentExpression	glyph_width [ 0 ] = glyph_width [ 1 ] = 0		160372	0		=			
ANR	160882	ArrayIndexing	glyph_width [ 0 ]		160372	0					
ANR	160883	Identifier	glyph_width		160372	0					
ANR	160884	PrimaryExpression	0		160372	1					
ANR	160885	AssignmentExpression	glyph_width [ 1 ] = 0		160372	1		=			
ANR	160886	ArrayIndexing	glyph_width [ 1 ]		160372	0					
ANR	160887	Identifier	glyph_width		160372	0					
ANR	160888	PrimaryExpression	1		160372	1					
ANR	160889	PrimaryExpression	0		160372	1					
ANR	160890	ElseStatement	else		160372	0					
ANR	160891	CompoundStatement		100:9:3439:3439	160372	0					
ANR	160892	ExpressionStatement	"code = CGIFFwidth2 ( FSA & glyph_width_code , 1 , sizeof ( glyph_width ) , glyph_width )"	1683:8:54856:54934	160372	0	True				
ANR	160893	AssignmentExpression	"code = CGIFFwidth2 ( FSA & glyph_width_code , 1 , sizeof ( glyph_width ) , glyph_width )"		160372	0		=			
ANR	160894	Identifier	code		160372	0					
ANR	160895	CallExpression	"CGIFFwidth2 ( FSA & glyph_width_code , 1 , sizeof ( glyph_width ) , glyph_width )"		160372	1					
ANR	160896	Callee	CGIFFwidth2		160372	0					
ANR	160897	Identifier	CGIFFwidth2		160372	0					
ANR	160898	ArgumentList	FSA & glyph_width_code		160372	1					
ANR	160899	Argument	FSA & glyph_width_code		160372	0					
ANR	160900	BitAndExpression	FSA & glyph_width_code		160372	0		&			
ANR	160901	Identifier	FSA		160372	0					
ANR	160902	Identifier	glyph_width_code		160372	1					
ANR	160903	Argument	1		160372	1					
ANR	160904	PrimaryExpression	1		160372	0					
ANR	160905	Argument	sizeof ( glyph_width )		160372	2					
ANR	160906	SizeofExpression	sizeof ( glyph_width )		160372	0					
ANR	160907	Sizeof	sizeof		160372	0					
ANR	160908	SizeofOperand	glyph_width		160372	1					
ANR	160909	Argument	glyph_width		160372	3					
ANR	160910	Identifier	glyph_width		160372	0					
ANR	160911	IfStatement	if ( code >= 0 )		160372	40					
ANR	160912	Condition	code >= 0	1686:8:54955:54963	160372	0	True				
ANR	160913	RelationalExpression	code >= 0		160372	0		>=			
ANR	160914	Identifier	code		160372	0					
ANR	160915	PrimaryExpression	0		160372	1					
ANR	160916	CompoundStatement		107:19:3716:3716	160372	1					
ANR	160917	Statement	code	1687:8:54976:54979	160372	0	True				
ANR	160918	Statement	=	1687:13:54981:54981	160372	1	True				
ANR	160919	Statement	CGIFchar_handle	1687:15:54983:54997	160372	2	True				
ANR	160920	Statement	(	1687:30:54998:54998	160372	3	True				
ANR	160921	Statement	FSA	1687:31:54999:55001	160372	4	True				
ANR	160922	Statement	cc	1687:35:55003:55004	160372	5	True				
ANR	160923	Statement	","	1687:37:55005:55005	160372	6	True				
ANR	160924	Statement	&	1687:39:55007:55007	160372	7	True				
ANR	160925	Statement	result	1687:40:55008:55013	160372	8	True				
ANR	160926	Statement	","	1687:46:55014:55014	160372	9	True				
ANR	160927	Statement	(	1687:48:55016:55016	160372	10	True				
ANR	160928	Statement	SW16	1687:49:55017:55020	160372	11	True				
ANR	160929	Statement	)	1687:53:55021:55021	160372	12	True				
ANR	160930	Statement	0	1687:55:55023:55023	160372	13	True				
ANR	160931	Statement	)	1687:56:55024:55024	160372	14	True				
ANR	160932	ExpressionStatement		1687:57:55025:55025	160372	15	True				
ANR	160933	ElseStatement	else		160372	0					
ANR	160934	CompoundStatement		110:9:3792:3792	160372	0					
ANR	160935	ExpressionStatement	result = NULL	1690:8:55052:55065	160372	0	True				
ANR	160936	AssignmentExpression	result = NULL		160372	0		=			
ANR	160937	Identifier	result		160372	0					
ANR	160938	Identifier	NULL		160372	1					
ANR	160939	Statement	if	1693:4:55078:55079	160372	41	True				
ANR	160940	Statement	(	1693:7:55081:55081	160372	42	True				
ANR	160941	Statement	code	1693:8:55082:55085	160372	43	True				
ANR	160942	Statement	==	1693:13:55087:55088	160372	44	True				
ANR	160943	Statement	ERR_TT_UNDEFINED_INSTRUCTION	1693:16:55090:55117	160372	45	True				
ANR	160944	Statement	||	1695:8:55155:55156	160372	46	True				
ANR	160945	Statement	(	1695:11:55158:55158	160372	47	True				
ANR	160946	Statement	code	1695:12:55159:55162	160372	48	True				
ANR	160947	Statement	>=	1695:17:55164:55165	160372	49	True				
ANR	160948	Statement	ERR_TT_NULL_FUNCDEF	1695:20:55167:55185	160372	50	True				
ANR	160949	Statement	&&	1695:40:55187:55188	160372	51	True				
ANR	160950	Statement	code	1695:43:55190:55193	160372	52	True				
ANR	160951	Statement	<=	1695:48:55195:55196	160372	53	True				
ANR	160952	Statement	ERR_TT_STACK_OUT_OF_RANGE	1695:51:55198:55222	160372	54	True				
ANR	160953	Statement	)	1695:76:55223:55223	160372	55	True				
ANR	160954	Statement	)	1697:8:55243:55243	160372	56	True				
ANR	160955	CompoundStatement		119:8:4005:4037	160372	57					
ANR	160956	IdentifierDeclStatement	int savehint = FC_DONTHINTTT ( fc ) ;	1698:8:55255:55287	160372	0	True				
ANR	160957	IdentifierDecl	savehint = FC_DONTHINTTT ( fc )		160372	0					
ANR	160958	IdentifierDeclType	int		160372	0					
ANR	160959	Identifier	savehint		160372	1					
ANR	160960	AssignmentExpression	savehint = FC_DONTHINTTT ( fc )		160372	2		=			
ANR	160961	Identifier	savehint		160372	0					
ANR	160962	CallExpression	FC_DONTHINTTT ( fc )		160372	1					
ANR	160963	Callee	FC_DONTHINTTT		160372	0					
ANR	160964	Identifier	FC_DONTHINTTT		160372	0					
ANR	160965	ArgumentList	fc		160372	1					
ANR	160966	Argument	fc		160372	0					
ANR	160967	Identifier	fc		160372	0					
ANR	160968	ExpressionStatement	fc -> ExtndFlags |= EF_TT_NOHINT	1700:8:55298:55328	160372	1	True				
ANR	160969	AssignmentExpression	fc -> ExtndFlags |= EF_TT_NOHINT		160372	0		|=			
ANR	160970	PtrMemberAccess	fc -> ExtndFlags		160372	0					
ANR	160971	Identifier	fc		160372	0					
ANR	160972	Identifier	ExtndFlags		160372	1					
ANR	160973	Identifier	EF_TT_NOHINT		160372	1					
ANR	160974	Statement	(	1702:8:55339:55339	160372	2	True				
ANR	160975	Statement	void	1702:9:55340:55343	160372	3	True				
ANR	160976	Statement	)	1702:13:55344:55344	160372	4	True				
ANR	160977	Statement	CGIFfont	1702:14:55345:55352	160372	5	True				
ANR	160978	Statement	(	1702:22:55353:55353	160372	6	True				
ANR	160979	Statement	FSA	1702:23:55354:55356	160372	7	True				
ANR	160980	Statement	fc	1702:27:55358:55359	160372	8	True				
ANR	160981	Statement	)	1702:29:55360:55360	160372	9	True				
ANR	160982	ExpressionStatement		1702:30:55361:55361	160372	10	True				
ANR	160983	Statement	code	1703:8:55371:55374	160372	11	True				
ANR	160984	Statement	=	1703:13:55376:55376	160372	12	True				
ANR	160985	Statement	CGIFchar_handle	1703:15:55378:55392	160372	13	True				
ANR	160986	Statement	(	1703:30:55393:55393	160372	14	True				
ANR	160987	Statement	FSA	1703:31:55394:55396	160372	15	True				
ANR	160988	Statement	cc	1703:35:55398:55399	160372	16	True				
ANR	160989	Statement	","	1703:37:55400:55400	160372	17	True				
ANR	160990	Statement	&	1703:39:55402:55402	160372	18	True				
ANR	160991	Statement	result	1703:40:55403:55408	160372	19	True				
ANR	160992	Statement	","	1703:46:55409:55409	160372	20	True				
ANR	160993	Statement	(	1703:48:55411:55411	160372	21	True				
ANR	160994	Statement	SW16	1703:49:55412:55415	160372	22	True				
ANR	160995	Statement	)	1703:53:55416:55416	160372	23	True				
ANR	160996	Statement	0	1703:55:55418:55418	160372	24	True				
ANR	160997	Statement	)	1703:56:55419:55419	160372	25	True				
ANR	160998	ExpressionStatement		1703:57:55420:55420	160372	26	True				
ANR	160999	ExpressionStatement	fc -> ExtndFlags |= savehint	1705:8:55431:55457	160372	27	True				
ANR	161000	AssignmentExpression	fc -> ExtndFlags |= savehint		160372	0		|=			
ANR	161001	PtrMemberAccess	fc -> ExtndFlags		160372	0					
ANR	161002	Identifier	fc		160372	0					
ANR	161003	Identifier	ExtndFlags		160372	1					
ANR	161004	Identifier	savehint		160372	1					
ANR	161005	Statement	(	1706:8:55467:55467	160372	28	True				
ANR	161006	Statement	void	1706:9:55468:55471	160372	29	True				
ANR	161007	Statement	)	1706:13:55472:55472	160372	30	True				
ANR	161008	Statement	CGIFfont	1706:14:55473:55480	160372	31	True				
ANR	161009	Statement	(	1706:22:55481:55481	160372	32	True				
ANR	161010	Statement	FSA	1706:23:55482:55484	160372	33	True				
ANR	161011	Statement	fc	1706:27:55486:55487	160372	34	True				
ANR	161012	Statement	)	1706:29:55488:55488	160372	35	True				
ANR	161013	ExpressionStatement		1706:30:55489:55489	160372	36	True				
ANR	161014	IfStatement	if ( ( result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big ) || ( code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big ) )		160372	58					
ANR	161015	Condition	( result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big ) || ( code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big )	1708:8:55505:55675	160372	0	True				
ANR	161016	OrExpression	( result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big ) || ( code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big )		160372	0		||			
ANR	161017	AndExpression	result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big		160372	0		&&			
ANR	161018	EqualityExpression	result == NULL		160372	0		==			
ANR	161019	Identifier	result		160372	0					
ANR	161020	Identifier	NULL		160372	1					
ANR	161021	AndExpression	code != ERR_bm_buff && code != ERR_bm_too_big		160372	1		&&			
ANR	161022	EqualityExpression	code != ERR_bm_buff		160372	0		!=			
ANR	161023	Identifier	code		160372	0					
ANR	161024	Identifier	ERR_bm_buff		160372	1					
ANR	161025	EqualityExpression	code != ERR_bm_too_big		160372	1		!=			
ANR	161026	Identifier	code		160372	0					
ANR	161027	Identifier	ERR_bm_too_big		160372	1					
ANR	161028	AndExpression	code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big		160372	1		&&			
ANR	161029	Identifier	code		160372	0					
ANR	161030	AndExpression	code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big		160372	1		&&			
ANR	161031	EqualityExpression	code != ERR_fixed_space		160372	0		!=			
ANR	161032	Identifier	code		160372	0					
ANR	161033	Identifier	ERR_fixed_space		160372	1					
ANR	161034	AndExpression	code != ERR_bm_buff && code != ERR_bm_too_big		160372	1		&&			
ANR	161035	EqualityExpression	code != ERR_bm_buff		160372	0		!=			
ANR	161036	Identifier	code		160372	0					
ANR	161037	Identifier	ERR_bm_buff		160372	1					
ANR	161038	EqualityExpression	code != ERR_bm_too_big		160372	1		!=			
ANR	161039	Identifier	code		160372	0					
ANR	161040	Identifier	ERR_bm_too_big		160372	1					
ANR	161041	CompoundStatement		134:8:4562:4594	160372	1					
ANR	161042	IdentifierDeclStatement	"UW16 c1 = 0 , ssnum = pIFS -> fcCur . ssnum ;"	1712:8:55764:55802	160372	0	True				
ANR	161043	IdentifierDecl	c1 = 0		160372	0					
ANR	161044	IdentifierDeclType	UW16		160372	0					
ANR	161045	Identifier	c1		160372	1					
ANR	161046	AssignmentExpression	c1 = 0		160372	2		=			
ANR	161047	Identifier	c1		160372	0					
ANR	161048	PrimaryExpression	0		160372	1					
ANR	161049	IdentifierDecl	ssnum = pIFS -> fcCur . ssnum		160372	1					
ANR	161050	IdentifierDeclType	UW16		160372	0					
ANR	161051	Identifier	ssnum		160372	1					
ANR	161052	AssignmentExpression	ssnum = pIFS -> fcCur . ssnum		160372	2		=			
ANR	161053	Identifier	ssnum		160372	0					
ANR	161054	MemberAccess	pIFS -> fcCur . ssnum		160372	1					
ANR	161055	PtrMemberAccess	pIFS -> fcCur		160372	0					
ANR	161056	Identifier	pIFS		160372	0					
ANR	161057	Identifier	fcCur		160372	1					
ANR	161058	Identifier	ssnum		160372	1					
ANR	161059	IdentifierDeclStatement	int savehint = FC_DONTHINTTT ( fc ) ;	1713:8:55812:55844	160372	1	True				
ANR	161060	IdentifierDecl	savehint = FC_DONTHINTTT ( fc )		160372	0					
ANR	161061	IdentifierDeclType	int		160372	0					
ANR	161062	Identifier	savehint		160372	1					
ANR	161063	AssignmentExpression	savehint = FC_DONTHINTTT ( fc )		160372	2		=			
ANR	161064	Identifier	savehint		160372	0					
ANR	161065	CallExpression	FC_DONTHINTTT ( fc )		160372	1					
ANR	161066	Callee	FC_DONTHINTTT		160372	0					
ANR	161067	Identifier	FC_DONTHINTTT		160372	0					
ANR	161068	ArgumentList	fc		160372	1					
ANR	161069	Argument	fc		160372	0					
ANR	161070	Identifier	fc		160372	0					
ANR	161071	ExpressionStatement	fc -> ExtndFlags |= EF_TT_NOHINT	1715:8:55855:55885	160372	2	True				
ANR	161072	AssignmentExpression	fc -> ExtndFlags |= EF_TT_NOHINT		160372	0		|=			
ANR	161073	PtrMemberAccess	fc -> ExtndFlags		160372	0					
ANR	161074	Identifier	fc		160372	0					
ANR	161075	Identifier	ExtndFlags		160372	1					
ANR	161076	Identifier	EF_TT_NOHINT		160372	1					
ANR	161077	Statement	(	1716:8:55895:55895	160372	3	True				
ANR	161078	Statement	void	1716:9:55896:55899	160372	4	True				
ANR	161079	Statement	)	1716:13:55900:55900	160372	5	True				
ANR	161080	Statement	CGIFfont	1716:14:55901:55908	160372	6	True				
ANR	161081	Statement	(	1716:22:55909:55909	160372	7	True				
ANR	161082	Statement	FSA	1716:23:55910:55912	160372	8	True				
ANR	161083	Statement	fc	1716:27:55914:55915	160372	9	True				
ANR	161084	Statement	)	1716:29:55916:55916	160372	10	True				
ANR	161085	ExpressionStatement		1716:30:55917:55917	160372	11	True				
ANR	161086	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		160372	12					
ANR	161087	Condition	d -> font_type == FC_FCO_TYPE	1718:12:55932:55958	160372	0	True				
ANR	161088	EqualityExpression	d -> font_type == FC_FCO_TYPE		160372	0		==			
ANR	161089	PtrMemberAccess	d -> font_type		160372	0					
ANR	161090	Identifier	d		160372	0					
ANR	161091	Identifier	font_type		160372	1					
ANR	161092	Identifier	FC_FCO_TYPE		160372	1					
ANR	161093	CompoundStatement		139:41:4711:4711	160372	1					
ANR	161094	ExpressionStatement	c1 = 32	1724:12:56277:56284	160372	0	True				
ANR	161095	AssignmentExpression	c1 = 32		160372	0		=			
ANR	161096	Identifier	c1		160372	0					
ANR	161097	PrimaryExpression	32		160372	1					
ANR	161098	ElseStatement	else		160372	0					
ANR	161099	CompoundStatement		147:13:5059:5059	160372	0					
ANR	161100	ExpressionStatement	pIFS -> fcCur . ssnum = RAW_GLYPH	1728:12:56389:56418	160372	0	True				
ANR	161101	AssignmentExpression	pIFS -> fcCur . ssnum = RAW_GLYPH		160372	0		=			
ANR	161102	MemberAccess	pIFS -> fcCur . ssnum		160372	0					
ANR	161103	PtrMemberAccess	pIFS -> fcCur		160372	0					
ANR	161104	Identifier	pIFS		160372	0					
ANR	161105	Identifier	fcCur		160372	1					
ANR	161106	Identifier	ssnum		160372	1					
ANR	161107	Identifier	RAW_GLYPH		160372	1					
ANR	161108	ExpressionStatement	r -> callback_error = 0	1730:8:56438:56459	160372	13	True				
ANR	161109	AssignmentExpression	r -> callback_error = 0		160372	0		=			
ANR	161110	PtrMemberAccess	r -> callback_error		160372	0					
ANR	161111	Identifier	r		160372	0					
ANR	161112	Identifier	callback_error		160372	1					
ANR	161113	PrimaryExpression	0		160372	1					
ANR	161114	ExpressionStatement	notdef_str . data = ( byte * ) notdef	1731:8:56469:56501	160372	14	True				
ANR	161115	AssignmentExpression	notdef_str . data = ( byte * ) notdef		160372	0		=			
ANR	161116	MemberAccess	notdef_str . data		160372	0					
ANR	161117	Identifier	notdef_str		160372	0					
ANR	161118	Identifier	data		160372	1					
ANR	161119	CastExpression	( byte * ) notdef		160372	1					
ANR	161120	CastTarget	byte *		160372	0					
ANR	161121	Identifier	notdef		160372	1					
ANR	161122	ExpressionStatement	notdef_str . size = strlen ( notdef )	1732:8:56511:56543	160372	15	True				
ANR	161123	AssignmentExpression	notdef_str . size = strlen ( notdef )		160372	0		=			
ANR	161124	MemberAccess	notdef_str . size		160372	0					
ANR	161125	Identifier	notdef_str		160372	0					
ANR	161126	Identifier	size		160372	1					
ANR	161127	CallExpression	strlen ( notdef )		160372	1					
ANR	161128	Callee	strlen		160372	0					
ANR	161129	Identifier	strlen		160372	0					
ANR	161130	ArgumentList	notdef		160372	1					
ANR	161131	Argument	notdef		160372	0					
ANR	161132	Identifier	notdef		160372	0					
ANR	161133	ExpressionStatement	ff -> char_data = ( void * ) & notdef_str	1733:8:56553:56588	160372	16	True				
ANR	161134	AssignmentExpression	ff -> char_data = ( void * ) & notdef_str		160372	0		=			
ANR	161135	PtrMemberAccess	ff -> char_data		160372	0					
ANR	161136	Identifier	ff		160372	0					
ANR	161137	Identifier	char_data		160372	1					
ANR	161138	CastExpression	( void * ) & notdef_str		160372	1					
ANR	161139	CastTarget	void *		160372	0					
ANR	161140	UnaryOperationExpression	& notdef_str		160372	1					
ANR	161141	UnaryOperator	&		160372	0					
ANR	161142	Identifier	notdef_str		160372	1					
ANR	161143	ExpressionStatement	ff -> char_data_len = 0	1734:8:56598:56619	160372	17	True				
ANR	161144	AssignmentExpression	ff -> char_data_len = 0		160372	0		=			
ANR	161145	PtrMemberAccess	ff -> char_data_len		160372	0					
ANR	161146	Identifier	ff		160372	0					
ANR	161147	Identifier	char_data_len		160372	1					
ANR	161148	PrimaryExpression	0		160372	1					
ANR	161149	ExpressionStatement	"memcpy ( PSchar_name , notdef , 8 )"	1735:8:56629:56659	160372	18	True				
ANR	161150	CallExpression	"memcpy ( PSchar_name , notdef , 8 )"		160372	0					
ANR	161151	Callee	memcpy		160372	0					
ANR	161152	Identifier	memcpy		160372	0					
ANR	161153	ArgumentList	PSchar_name		160372	1					
ANR	161154	Argument	PSchar_name		160372	0					
ANR	161155	Identifier	PSchar_name		160372	0					
ANR	161156	Argument	notdef		160372	1					
ANR	161157	Identifier	notdef		160372	0					
ANR	161158	Argument	8		160372	2					
ANR	161159	PrimaryExpression	8		160372	0					
ANR	161160	Statement	CGIFchIdptr	1736:8:56669:56679	160372	19	True				
ANR	161161	Statement	(	1736:19:56680:56680	160372	20	True				
ANR	161162	Statement	FSA	1736:20:56681:56683	160372	21	True				
ANR	161163	Statement	(	1736:23:56684:56684	160372	22	True				
ANR	161164	Statement	void	1736:24:56685:56688	160372	23	True				
ANR	161165	Statement	*	1736:29:56690:56690	160372	24	True				
ANR	161166	Statement	)	1736:30:56691:56691	160372	25	True				
ANR	161167	Statement	&	1736:32:56693:56693	160372	26	True				
ANR	161168	Statement	c1	1736:34:56695:56696	160372	27	True				
ANR	161169	Statement	","	1736:36:56697:56697	160372	28	True				
ANR	161170	Statement	(	1736:38:56699:56699	160372	29	True				
ANR	161171	Statement	void	1736:39:56700:56703	160372	30	True				
ANR	161172	Statement	*	1736:44:56705:56705	160372	31	True				
ANR	161173	Statement	)	1736:45:56706:56706	160372	32	True				
ANR	161174	Statement	notdef	1736:46:56707:56712	160372	33	True				
ANR	161175	Statement	)	1736:52:56713:56713	160372	34	True				
ANR	161176	ExpressionStatement		1736:53:56714:56714	160372	35	True				
ANR	161177	Statement	code2	1738:8:56725:56729	160372	36	True				
ANR	161178	Statement	=	1738:14:56731:56731	160372	37	True				
ANR	161179	Statement	CGIFchar_handle	1738:16:56733:56747	160372	38	True				
ANR	161180	Statement	(	1738:31:56748:56748	160372	39	True				
ANR	161181	Statement	FSA	1738:32:56749:56751	160372	40	True				
ANR	161182	Statement	c1	1738:36:56753:56754	160372	41	True				
ANR	161183	Statement	","	1738:38:56755:56755	160372	42	True				
ANR	161184	Statement	&	1738:40:56757:56757	160372	43	True				
ANR	161185	Statement	result	1738:41:56758:56763	160372	44	True				
ANR	161186	Statement	","	1738:47:56764:56764	160372	45	True				
ANR	161187	Statement	(	1738:49:56766:56766	160372	46	True				
ANR	161188	Statement	SW16	1738:50:56767:56770	160372	47	True				
ANR	161189	Statement	)	1738:54:56771:56771	160372	48	True				
ANR	161190	Statement	0	1738:56:56773:56773	160372	49	True				
ANR	161191	Statement	)	1738:57:56774:56774	160372	50	True				
ANR	161192	ExpressionStatement		1738:58:56775:56775	160372	51	True				
ANR	161193	IfStatement	if ( code2 && code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big )		160372	52					
ANR	161194	Condition	code2 && code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big	1739:12:56789:56884	160372	0	True				
ANR	161195	AndExpression	code2 && code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big		160372	0		&&			
ANR	161196	Identifier	code2		160372	0					
ANR	161197	AndExpression	code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big		160372	1		&&			
ANR	161198	EqualityExpression	code2 != ERR_fixed_space		160372	0		!=			
ANR	161199	Identifier	code2		160372	0					
ANR	161200	Identifier	ERR_fixed_space		160372	1					
ANR	161201	AndExpression	code2 != ERR_bm_buff && code2 != ERR_bm_too_big		160372	1		&&			
ANR	161202	EqualityExpression	code2 != ERR_bm_buff		160372	0		!=			
ANR	161203	Identifier	code2		160372	0					
ANR	161204	Identifier	ERR_bm_buff		160372	1					
ANR	161205	EqualityExpression	code2 != ERR_bm_too_big		160372	1		!=			
ANR	161206	Identifier	code2		160372	0					
ANR	161207	Identifier	ERR_bm_too_big		160372	1					
ANR	161208	CompoundStatement		161:40:5637:5637	160372	1					
ANR	161209	ExpressionStatement	notdef_str . data = ( byte * ) space	1742:12:56914:56945	160372	0	True				
ANR	161210	AssignmentExpression	notdef_str . data = ( byte * ) space		160372	0		=			
ANR	161211	MemberAccess	notdef_str . data		160372	0					
ANR	161212	Identifier	notdef_str		160372	0					
ANR	161213	Identifier	data		160372	1					
ANR	161214	CastExpression	( byte * ) space		160372	1					
ANR	161215	CastTarget	byte *		160372	0					
ANR	161216	Identifier	space		160372	1					
ANR	161217	ExpressionStatement	notdef_str . size = strlen ( space )	1743:12:56959:56990	160372	1	True				
ANR	161218	AssignmentExpression	notdef_str . size = strlen ( space )		160372	0		=			
ANR	161219	MemberAccess	notdef_str . size		160372	0					
ANR	161220	Identifier	notdef_str		160372	0					
ANR	161221	Identifier	size		160372	1					
ANR	161222	CallExpression	strlen ( space )		160372	1					
ANR	161223	Callee	strlen		160372	0					
ANR	161224	Identifier	strlen		160372	0					
ANR	161225	ArgumentList	space		160372	1					
ANR	161226	Argument	space		160372	0					
ANR	161227	Identifier	space		160372	0					
ANR	161228	ExpressionStatement	ff -> char_data = ( void * ) & notdef_str	1744:12:57004:57039	160372	2	True				
ANR	161229	AssignmentExpression	ff -> char_data = ( void * ) & notdef_str		160372	0		=			
ANR	161230	PtrMemberAccess	ff -> char_data		160372	0					
ANR	161231	Identifier	ff		160372	0					
ANR	161232	Identifier	char_data		160372	1					
ANR	161233	CastExpression	( void * ) & notdef_str		160372	1					
ANR	161234	CastTarget	void *		160372	0					
ANR	161235	UnaryOperationExpression	& notdef_str		160372	1					
ANR	161236	UnaryOperator	&		160372	0					
ANR	161237	Identifier	notdef_str		160372	1					
ANR	161238	ExpressionStatement	ff -> char_data_len = 0	1745:12:57053:57074	160372	3	True				
ANR	161239	AssignmentExpression	ff -> char_data_len = 0		160372	0		=			
ANR	161240	PtrMemberAccess	ff -> char_data_len		160372	0					
ANR	161241	Identifier	ff		160372	0					
ANR	161242	Identifier	char_data_len		160372	1					
ANR	161243	PrimaryExpression	0		160372	1					
ANR	161244	ExpressionStatement	"memcpy ( PSchar_name , space , 6 )"	1746:12:57088:57117	160372	4	True				
ANR	161245	CallExpression	"memcpy ( PSchar_name , space , 6 )"		160372	0					
ANR	161246	Callee	memcpy		160372	0					
ANR	161247	Identifier	memcpy		160372	0					
ANR	161248	ArgumentList	PSchar_name		160372	1					
ANR	161249	Argument	PSchar_name		160372	0					
ANR	161250	Identifier	PSchar_name		160372	0					
ANR	161251	Argument	space		160372	1					
ANR	161252	Identifier	space		160372	0					
ANR	161253	Argument	6		160372	2					
ANR	161254	PrimaryExpression	6		160372	0					
ANR	161255	Statement	CGIFchIdptr	1748:12:57132:57142	160372	5	True				
ANR	161256	Statement	(	1748:23:57143:57143	160372	6	True				
ANR	161257	Statement	FSA	1748:24:57144:57146	160372	7	True				
ANR	161258	Statement	(	1748:27:57147:57147	160372	8	True				
ANR	161259	Statement	void	1748:28:57148:57151	160372	9	True				
ANR	161260	Statement	*	1748:33:57153:57153	160372	10	True				
ANR	161261	Statement	)	1748:34:57154:57154	160372	11	True				
ANR	161262	Statement	&	1748:36:57156:57156	160372	12	True				
ANR	161263	Statement	c1	1748:38:57158:57159	160372	13	True				
ANR	161264	Statement	","	1748:40:57160:57160	160372	14	True				
ANR	161265	Statement	(	1748:42:57162:57162	160372	15	True				
ANR	161266	Statement	void	1748:43:57163:57166	160372	16	True				
ANR	161267	Statement	*	1748:48:57168:57168	160372	17	True				
ANR	161268	Statement	)	1748:49:57169:57169	160372	18	True				
ANR	161269	Statement	space	1748:50:57170:57174	160372	19	True				
ANR	161270	Statement	)	1748:55:57175:57175	160372	20	True				
ANR	161271	ExpressionStatement		1748:56:57176:57176	160372	21	True				
ANR	161272	Statement	code2	1750:12:57191:57195	160372	22	True				
ANR	161273	Statement	=	1750:18:57197:57197	160372	23	True				
ANR	161274	Statement	CGIFchar_handle	1750:20:57199:57213	160372	24	True				
ANR	161275	Statement	(	1750:35:57214:57214	160372	25	True				
ANR	161276	Statement	FSA	1750:36:57215:57217	160372	26	True				
ANR	161277	Statement	c1	1750:40:57219:57220	160372	27	True				
ANR	161278	Statement	","	1750:42:57221:57221	160372	28	True				
ANR	161279	Statement	&	1750:44:57223:57223	160372	29	True				
ANR	161280	Statement	result	1750:45:57224:57229	160372	30	True				
ANR	161281	Statement	","	1750:51:57230:57230	160372	31	True				
ANR	161282	Statement	(	1750:53:57232:57232	160372	32	True				
ANR	161283	Statement	SW16	1750:54:57233:57236	160372	33	True				
ANR	161284	Statement	)	1750:58:57237:57237	160372	34	True				
ANR	161285	Statement	0	1750:60:57239:57239	160372	35	True				
ANR	161286	Statement	)	1750:61:57240:57240	160372	36	True				
ANR	161287	ExpressionStatement		1750:62:57241:57241	160372	37	True				
ANR	161288	IfStatement	if ( ! code2 || code2 == ERR_fixed_space )		160372	53					
ANR	161289	Condition	! code2 || code2 == ERR_fixed_space	1752:12:57265:57298	160372	0	True				
ANR	161290	OrExpression	! code2 || code2 == ERR_fixed_space		160372	0		||			
ANR	161291	UnaryOperationExpression	! code2		160372	0					
ANR	161292	UnaryOperator	!		160372	0					
ANR	161293	Identifier	code2		160372	1					
ANR	161294	EqualityExpression	code2 == ERR_fixed_space		160372	1		==			
ANR	161295	Identifier	code2		160372	0					
ANR	161296	Identifier	ERR_fixed_space		160372	1					
ANR	161297	CompoundStatement		173:48:6051:6051	160372	1					
ANR	161298	ExpressionStatement	code = code2	1753:12:57315:57327	160372	0	True				
ANR	161299	AssignmentExpression	code = code2		160372	0		=			
ANR	161300	Identifier	code		160372	0					
ANR	161301	Identifier	code2		160372	1					
ANR	161302	ExpressionStatement	fc -> ExtndFlags |= savehint	1755:8:57347:57373	160372	54	True				
ANR	161303	AssignmentExpression	fc -> ExtndFlags |= savehint		160372	0		|=			
ANR	161304	PtrMemberAccess	fc -> ExtndFlags		160372	0					
ANR	161305	Identifier	fc		160372	0					
ANR	161306	Identifier	ExtndFlags		160372	1					
ANR	161307	Identifier	savehint		160372	1					
ANR	161308	Statement	(	1756:8:57383:57383	160372	55	True				
ANR	161309	Statement	void	1756:9:57384:57387	160372	56	True				
ANR	161310	Statement	)	1756:13:57388:57388	160372	57	True				
ANR	161311	Statement	CGIFfont	1756:14:57389:57396	160372	58	True				
ANR	161312	Statement	(	1756:22:57397:57397	160372	59	True				
ANR	161313	Statement	FSA	1756:23:57398:57400	160372	60	True				
ANR	161314	Statement	fc	1756:27:57402:57403	160372	61	True				
ANR	161315	Statement	)	1756:29:57404:57404	160372	62	True				
ANR	161316	ExpressionStatement		1756:30:57405:57405	160372	63	True				
ANR	161317	ExpressionStatement	pIFS -> fcCur . ssnum = ssnum	1757:8:57415:57440	160372	64	True				
ANR	161318	AssignmentExpression	pIFS -> fcCur . ssnum = ssnum		160372	0		=			
ANR	161319	MemberAccess	pIFS -> fcCur . ssnum		160372	0					
ANR	161320	PtrMemberAccess	pIFS -> fcCur		160372	0					
ANR	161321	Identifier	pIFS		160372	0					
ANR	161322	Identifier	fcCur		160372	1					
ANR	161323	Identifier	ssnum		160372	1					
ANR	161324	Identifier	ssnum		160372	1					
ANR	161325	ExpressionStatement	ff -> char_data = client_char_data	1759:4:57452:57484	160372	59	True				
ANR	161326	AssignmentExpression	ff -> char_data = client_char_data		160372	0		=			
ANR	161327	PtrMemberAccess	ff -> char_data		160372	0					
ANR	161328	Identifier	ff		160372	0					
ANR	161329	Identifier	char_data		160372	1					
ANR	161330	Identifier	client_char_data		160372	1					
ANR	161331	ExpressionStatement	ff -> char_data_len = client_char_data_len	1760:4:57490:57530	160372	60	True				
ANR	161332	AssignmentExpression	ff -> char_data_len = client_char_data_len		160372	0		=			
ANR	161333	PtrMemberAccess	ff -> char_data_len		160372	0					
ANR	161334	Identifier	ff		160372	0					
ANR	161335	Identifier	char_data_len		160372	1					
ANR	161336	Identifier	client_char_data_len		160372	1					
ANR	161337	ExpressionStatement	static_server_ptr_for_ufst_callback = 0	1764:4:57558:57597	160372	61	True				
ANR	161338	AssignmentExpression	static_server_ptr_for_ufst_callback = 0		160372	0		=			
ANR	161339	Identifier	static_server_ptr_for_ufst_callback		160372	0					
ANR	161340	PrimaryExpression	0		160372	1					
ANR	161341	ExpressionStatement	r -> ff = 0	1767:4:57611:57620	160372	62	True				
ANR	161342	AssignmentExpression	r -> ff = 0		160372	0		=			
ANR	161343	PtrMemberAccess	r -> ff		160372	0					
ANR	161344	Identifier	r		160372	0					
ANR	161345	Identifier	ff		160372	1					
ANR	161346	PrimaryExpression	0		160372	1					
ANR	161347	ExpressionStatement	"release_glyphs ( r , ( ufst_common_font_data * ) ff -> server_font_data )"	1768:4:57626:57691	160372	63	True				
ANR	161348	CallExpression	"release_glyphs ( r , ( ufst_common_font_data * ) ff -> server_font_data )"		160372	0					
ANR	161349	Callee	release_glyphs		160372	0					
ANR	161350	Identifier	release_glyphs		160372	0					
ANR	161351	ArgumentList	r		160372	1					
ANR	161352	Argument	r		160372	0					
ANR	161353	Identifier	r		160372	0					
ANR	161354	Argument	( ufst_common_font_data * ) ff -> server_font_data		160372	1					
ANR	161355	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		160372	0					
ANR	161356	CastTarget	ufst_common_font_data *		160372	0					
ANR	161357	PtrMemberAccess	ff -> server_font_data		160372	1					
ANR	161358	Identifier	ff		160372	0					
ANR	161359	Identifier	server_font_data		160372	1					
ANR	161360	IfStatement	if ( code != ERR_fixed_space && code != 0 )		160372	64					
ANR	161361	Condition	code != ERR_fixed_space && code != 0	1769:8:57701:57736	160372	0	True				
ANR	161362	AndExpression	code != ERR_fixed_space && code != 0		160372	0		&&			
ANR	161363	EqualityExpression	code != ERR_fixed_space		160372	0		!=			
ANR	161364	Identifier	code		160372	0					
ANR	161365	Identifier	ERR_fixed_space		160372	1					
ANR	161366	EqualityExpression	code != 0		160372	1		!=			
ANR	161367	Identifier	code		160372	0					
ANR	161368	PrimaryExpression	0		160372	1					
ANR	161369	ReturnStatement	return code ;	1770:8:57747:57758	160372	1	True				
ANR	161370	Identifier	code		160372	0					
ANR	161371	IfStatement	if ( r -> callback_error != 0 )		160372	65					
ANR	161372	Condition	r -> callback_error != 0	1772:8:57769:57790	160372	0	True				
ANR	161373	EqualityExpression	r -> callback_error != 0		160372	0		!=			
ANR	161374	PtrMemberAccess	r -> callback_error		160372	0					
ANR	161375	Identifier	r		160372	0					
ANR	161376	Identifier	callback_error		160372	1					
ANR	161377	PrimaryExpression	0		160372	1					
ANR	161378	ReturnStatement	return r -> callback_error ;	1773:8:57801:57825	160372	1	True				
ANR	161379	PtrMemberAccess	r -> callback_error		160372	0					
ANR	161380	Identifier	r		160372	0					
ANR	161381	Identifier	callback_error		160372	1					
ANR	161382	IfStatement	if ( format == FC_BITMAP_TYPE && result )		160372	66					
ANR	161383	Condition	format == FC_BITMAP_TYPE && result	1775:8:57836:57869	160372	0	True				
ANR	161384	AndExpression	format == FC_BITMAP_TYPE && result		160372	0		&&			
ANR	161385	EqualityExpression	format == FC_BITMAP_TYPE		160372	0		==			
ANR	161386	Identifier	format		160372	0					
ANR	161387	Identifier	FC_BITMAP_TYPE		160372	1					
ANR	161388	Identifier	result		160372	1					
ANR	161389	CompoundStatement		197:8:6632:6667	160372	1					
ANR	161390	IdentifierDeclStatement	IFBITMAP * pbm = ( IFBITMAP * ) result ;	1776:8:57882:57917	160372	0	True				
ANR	161391	IdentifierDecl	* pbm = ( IFBITMAP * ) result		160372	0					
ANR	161392	IdentifierDeclType	IFBITMAP *		160372	0					
ANR	161393	Identifier	pbm		160372	1					
ANR	161394	AssignmentExpression	* pbm = ( IFBITMAP * ) result		160372	2		=			
ANR	161395	Identifier	pbm		160372	0					
ANR	161396	CastExpression	( IFBITMAP * ) result		160372	1					
ANR	161397	CastTarget	IFBITMAP *		160372	0					
ANR	161398	Identifier	result		160372	1					
ANR	161399	ExpressionStatement	du_emx = pbm -> du_emx	1778:8:57928:57948	160372	1	True				
ANR	161400	AssignmentExpression	du_emx = pbm -> du_emx		160372	0		=			
ANR	161401	Identifier	du_emx		160372	0					
ANR	161402	PtrMemberAccess	pbm -> du_emx		160372	1					
ANR	161403	Identifier	pbm		160372	0					
ANR	161404	Identifier	du_emx		160372	1					
ANR	161405	ExpressionStatement	du_emy = pbm -> du_emy	1779:8:57958:57978	160372	2	True				
ANR	161406	AssignmentExpression	du_emy = pbm -> du_emy		160372	0		=			
ANR	161407	Identifier	du_emy		160372	0					
ANR	161408	PtrMemberAccess	pbm -> du_emy		160372	1					
ANR	161409	Identifier	pbm		160372	0					
ANR	161410	Identifier	du_emy		160372	1					
ANR	161411	ExpressionStatement	r -> char_data = pbm	1780:8:57988:58006	160372	3	True				
ANR	161412	AssignmentExpression	r -> char_data = pbm		160372	0		=			
ANR	161413	PtrMemberAccess	r -> char_data		160372	0					
ANR	161414	Identifier	r		160372	0					
ANR	161415	Identifier	char_data		160372	1					
ANR	161416	Identifier	pbm		160372	1					
ANR	161417	ExpressionStatement	r -> bRaster = TRUE	1781:8:58016:58033	160372	4	True				
ANR	161418	AssignmentExpression	r -> bRaster = TRUE		160372	0		=			
ANR	161419	PtrMemberAccess	r -> bRaster		160372	0					
ANR	161420	Identifier	r		160372	0					
ANR	161421	Identifier	bRaster		160372	1					
ANR	161422	Identifier	TRUE		160372	1					
ANR	161423	ExpressionStatement	design_escapement [ 0 ] = pbm -> escapement	1783:8:58044:58082	160372	5	True				
ANR	161424	AssignmentExpression	design_escapement [ 0 ] = pbm -> escapement		160372	0		=			
ANR	161425	ArrayIndexing	design_escapement [ 0 ]		160372	0					
ANR	161426	Identifier	design_escapement		160372	0					
ANR	161427	PrimaryExpression	0		160372	1					
ANR	161428	PtrMemberAccess	pbm -> escapement		160372	1					
ANR	161429	Identifier	pbm		160372	0					
ANR	161430	Identifier	escapement		160372	1					
ANR	161431	ExpressionStatement	design_bbox [ 0 ] = pbm -> left_indent	1787:8:58149:58182	160372	6	True				
ANR	161432	AssignmentExpression	design_bbox [ 0 ] = pbm -> left_indent		160372	0		=			
ANR	161433	ArrayIndexing	design_bbox [ 0 ]		160372	0					
ANR	161434	Identifier	design_bbox		160372	0					
ANR	161435	PrimaryExpression	0		160372	1					
ANR	161436	PtrMemberAccess	pbm -> left_indent		160372	1					
ANR	161437	Identifier	pbm		160372	0					
ANR	161438	Identifier	left_indent		160372	1					
ANR	161439	ExpressionStatement	design_bbox [ 1 ] = pbm -> top_indent	1788:8:58192:58224	160372	7	True				
ANR	161440	AssignmentExpression	design_bbox [ 1 ] = pbm -> top_indent		160372	0		=			
ANR	161441	ArrayIndexing	design_bbox [ 1 ]		160372	0					
ANR	161442	Identifier	design_bbox		160372	0					
ANR	161443	PrimaryExpression	1		160372	1					
ANR	161444	PtrMemberAccess	pbm -> top_indent		160372	1					
ANR	161445	Identifier	pbm		160372	0					
ANR	161446	Identifier	top_indent		160372	1					
ANR	161447	ExpressionStatement	design_bbox [ 2 ] = pbm -> black_width	1789:8:58234:58267	160372	8	True				
ANR	161448	AssignmentExpression	design_bbox [ 2 ] = pbm -> black_width		160372	0		=			
ANR	161449	ArrayIndexing	design_bbox [ 2 ]		160372	0					
ANR	161450	Identifier	design_bbox		160372	0					
ANR	161451	PrimaryExpression	2		160372	1					
ANR	161452	PtrMemberAccess	pbm -> black_width		160372	1					
ANR	161453	Identifier	pbm		160372	0					
ANR	161454	Identifier	black_width		160372	1					
ANR	161455	ExpressionStatement	design_bbox [ 3 ] = pbm -> black_depth	1790:8:58277:58310	160372	9	True				
ANR	161456	AssignmentExpression	design_bbox [ 3 ] = pbm -> black_depth		160372	0		=			
ANR	161457	ArrayIndexing	design_bbox [ 3 ]		160372	0					
ANR	161458	Identifier	design_bbox		160372	0					
ANR	161459	PrimaryExpression	3		160372	1					
ANR	161460	PtrMemberAccess	pbm -> black_depth		160372	1					
ANR	161461	Identifier	pbm		160372	0					
ANR	161462	Identifier	black_depth		160372	1					
ANR	161463	IfStatement	if ( ff -> is_vertical )		160372	10					
ANR	161464	Condition	ff -> is_vertical	1792:12:58333:58347	160372	0	True				
ANR	161465	PtrMemberAccess	ff -> is_vertical		160372	0					
ANR	161466	Identifier	ff		160372	0					
ANR	161467	Identifier	is_vertical		160372	1					
ANR	161468	CompoundStatement		213:29:7100:7100	160372	1					
ANR	161469	IfStatement	if ( pIFS -> glyphMetricsDU . aw . x == 0 && pIFS -> glyphMetricsDU . aw . y == 0 )		160372	0					
ANR	161470	Condition	pIFS -> glyphMetricsDU . aw . x == 0 && pIFS -> glyphMetricsDU . aw . y == 0	1794:16:58457:58520	160372	0	True				
ANR	161471	AndExpression	pIFS -> glyphMetricsDU . aw . x == 0 && pIFS -> glyphMetricsDU . aw . y == 0		160372	0		&&			
ANR	161472	EqualityExpression	pIFS -> glyphMetricsDU . aw . x == 0		160372	0		==			
ANR	161473	MemberAccess	pIFS -> glyphMetricsDU . aw . x		160372	0					
ANR	161474	MemberAccess	pIFS -> glyphMetricsDU . aw		160372	0					
ANR	161475	PtrMemberAccess	pIFS -> glyphMetricsDU		160372	0					
ANR	161476	Identifier	pIFS		160372	0					
ANR	161477	Identifier	glyphMetricsDU		160372	1					
ANR	161478	Identifier	aw		160372	1					
ANR	161479	Identifier	x		160372	1					
ANR	161480	PrimaryExpression	0		160372	1					
ANR	161481	EqualityExpression	pIFS -> glyphMetricsDU . aw . y == 0		160372	1		==			
ANR	161482	MemberAccess	pIFS -> glyphMetricsDU . aw . y		160372	0					
ANR	161483	MemberAccess	pIFS -> glyphMetricsDU . aw		160372	0					
ANR	161484	PtrMemberAccess	pIFS -> glyphMetricsDU		160372	0					
ANR	161485	Identifier	pIFS		160372	0					
ANR	161486	Identifier	glyphMetricsDU		160372	1					
ANR	161487	Identifier	aw		160372	1					
ANR	161488	Identifier	y		160372	1					
ANR	161489	PrimaryExpression	0		160372	1					
ANR	161490	CompoundStatement		215:82:7273:7273	160372	1					
ANR	161491	ExpressionStatement	design_escapement [ 1 ] = glyph_width [ 1 ]	1795:16:58541:58578	160372	0	True				
ANR	161492	AssignmentExpression	design_escapement [ 1 ] = glyph_width [ 1 ]		160372	0		=			
ANR	161493	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	161494	Identifier	design_escapement		160372	0					
ANR	161495	PrimaryExpression	1		160372	1					
ANR	161496	ArrayIndexing	glyph_width [ 1 ]		160372	1					
ANR	161497	Identifier	glyph_width		160372	0					
ANR	161498	PrimaryExpression	1		160372	1					
ANR	161499	ElseStatement	else		160372	0					
ANR	161500	CompoundStatement		218:17:7361:7361	160372	0					
ANR	161501	ExpressionStatement	design_escapement [ 1 ] = pIFS -> glyphMetricsDU . aw . y	1798:16:58629:58677	160372	0	True				
ANR	161502	AssignmentExpression	design_escapement [ 1 ] = pIFS -> glyphMetricsDU . aw . y		160372	0		=			
ANR	161503	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	161504	Identifier	design_escapement		160372	0					
ANR	161505	PrimaryExpression	1		160372	1					
ANR	161506	MemberAccess	pIFS -> glyphMetricsDU . aw . y		160372	1					
ANR	161507	MemberAccess	pIFS -> glyphMetricsDU . aw		160372	0					
ANR	161508	PtrMemberAccess	pIFS -> glyphMetricsDU		160372	0					
ANR	161509	Identifier	pIFS		160372	0					
ANR	161510	Identifier	glyphMetricsDU		160372	1					
ANR	161511	Identifier	aw		160372	1					
ANR	161512	Identifier	y		160372	1					
ANR	161513	ElseStatement	else		160372	0					
ANR	161514	IfStatement	if ( result )		160372	0					
ANR	161515	Condition	result	1804:13:58730:58735	160372	0	True				
ANR	161516	Identifier	result		160372	0					
ANR	161517	CompoundStatement		226:8:7498:7535	160372	1					
ANR	161518	IdentifierDeclStatement	IFOUTLINE * pol = ( IFOUTLINE * ) result ;	1805:8:58748:58785	160372	0	True				
ANR	161519	IdentifierDecl	* pol = ( IFOUTLINE * ) result		160372	0					
ANR	161520	IdentifierDeclType	IFOUTLINE *		160372	0					
ANR	161521	Identifier	pol		160372	1					
ANR	161522	AssignmentExpression	* pol = ( IFOUTLINE * ) result		160372	2		=			
ANR	161523	Identifier	pol		160372	0					
ANR	161524	CastExpression	( IFOUTLINE * ) result		160372	1					
ANR	161525	CastTarget	IFOUTLINE *		160372	0					
ANR	161526	Identifier	result		160372	1					
ANR	161527	IfStatement	if ( glyph_width [ 0 ] == 0x7fff )		160372	1					
ANR	161528	Condition	glyph_width [ 0 ] == 0x7fff	1807:12:58800:58823	160372	0	True				
ANR	161529	EqualityExpression	glyph_width [ 0 ] == 0x7fff		160372	0		==			
ANR	161530	ArrayIndexing	glyph_width [ 0 ]		160372	0					
ANR	161531	Identifier	glyph_width		160372	0					
ANR	161532	PrimaryExpression	0		160372	1					
ANR	161533	PrimaryExpression	0x7fff		160372	1					
ANR	161534	CompoundStatement		228:38:7576:7576	160372	1					
ANR	161535	ExpressionStatement	design_escapement [ 0 ] = pol -> escapement	1808:12:58856:58894	160372	0	True				
ANR	161536	AssignmentExpression	design_escapement [ 0 ] = pol -> escapement		160372	0		=			
ANR	161537	ArrayIndexing	design_escapement [ 0 ]		160372	0					
ANR	161538	Identifier	design_escapement		160372	0					
ANR	161539	PrimaryExpression	0		160372	1					
ANR	161540	PtrMemberAccess	pol -> escapement		160372	1					
ANR	161541	Identifier	pol		160372	0					
ANR	161542	Identifier	escapement		160372	1					
ANR	161543	ElseStatement	else		160372	0					
ANR	161544	CompoundStatement		231:13:7669:7669	160372	0					
ANR	161545	ExpressionStatement	design_escapement [ 0 ] = glyph_width [ 0 ]	1811:12:58933:58970	160372	0	True				
ANR	161546	AssignmentExpression	design_escapement [ 0 ] = glyph_width [ 0 ]		160372	0		=			
ANR	161547	ArrayIndexing	design_escapement [ 0 ]		160372	0					
ANR	161548	Identifier	design_escapement		160372	0					
ANR	161549	PrimaryExpression	0		160372	1					
ANR	161550	ArrayIndexing	glyph_width [ 0 ]		160372	1					
ANR	161551	Identifier	glyph_width		160372	0					
ANR	161552	PrimaryExpression	0		160372	1					
ANR	161553	IfStatement	if ( ff -> is_vertical )		160372	2					
ANR	161554	Condition	ff -> is_vertical	1813:12:58994:59008	160372	0	True				
ANR	161555	PtrMemberAccess	ff -> is_vertical		160372	0					
ANR	161556	Identifier	ff		160372	0					
ANR	161557	Identifier	is_vertical		160372	1					
ANR	161558	CompoundStatement		234:29:7761:7761	160372	1					
ANR	161559	IfStatement	if ( glyph_width [ 1 ] == 0x7fff )		160372	0					
ANR	161560	Condition	glyph_width [ 1 ] == 0x7fff	1814:16:59029:59052	160372	0	True				
ANR	161561	EqualityExpression	glyph_width [ 1 ] == 0x7fff		160372	0		==			
ANR	161562	ArrayIndexing	glyph_width [ 1 ]		160372	0					
ANR	161563	Identifier	glyph_width		160372	0					
ANR	161564	PrimaryExpression	1		160372	1					
ANR	161565	PrimaryExpression	0x7fff		160372	1					
ANR	161566	CompoundStatement		235:42:7805:7805	160372	1					
ANR	161567	ExpressionStatement	design_escapement [ 1 ] = pol -> advanceHeight	1815:16:59089:59130	160372	0	True				
ANR	161568	AssignmentExpression	design_escapement [ 1 ] = pol -> advanceHeight		160372	0		=			
ANR	161569	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	161570	Identifier	design_escapement		160372	0					
ANR	161571	PrimaryExpression	1		160372	1					
ANR	161572	PtrMemberAccess	pol -> advanceHeight		160372	1					
ANR	161573	Identifier	pol		160372	0					
ANR	161574	Identifier	advanceHeight		160372	1					
ANR	161575	ElseStatement	else		160372	0					
ANR	161576	CompoundStatement		238:17:7913:7913	160372	0					
ANR	161577	ExpressionStatement	design_escapement [ 1 ] = glyph_width [ 1 ]	1818:16:59181:59218	160372	0	True				
ANR	161578	AssignmentExpression	design_escapement [ 1 ] = glyph_width [ 1 ]		160372	0		=			
ANR	161579	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	161580	Identifier	design_escapement		160372	0					
ANR	161581	PrimaryExpression	1		160372	1					
ANR	161582	ArrayIndexing	glyph_width [ 1 ]		160372	1					
ANR	161583	Identifier	glyph_width		160372	0					
ANR	161584	PrimaryExpression	1		160372	1					
ANR	161585	ElseStatement	else		160372	0					
ANR	161586	CompoundStatement		242:13:8007:8007	160372	0					
ANR	161587	ExpressionStatement	design_escapement [ 1 ] = 0	1822:12:59271:59295	160372	0	True				
ANR	161588	AssignmentExpression	design_escapement [ 1 ] = 0		160372	0		=			
ANR	161589	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	161590	Identifier	design_escapement		160372	0					
ANR	161591	PrimaryExpression	1		160372	1					
ANR	161592	PrimaryExpression	0		160372	1					
ANR	161593	IfStatement	if ( pol -> du_emx > 0 && pol -> du_emy > 0 )		160372	3					
ANR	161594	Condition	pol -> du_emx > 0 && pol -> du_emy > 0	1825:12:59320:59353	160372	0	True				
ANR	161595	AndExpression	pol -> du_emx > 0 && pol -> du_emy > 0		160372	0		&&			
ANR	161596	RelationalExpression	pol -> du_emx > 0		160372	0		>			
ANR	161597	PtrMemberAccess	pol -> du_emx		160372	0					
ANR	161598	Identifier	pol		160372	0					
ANR	161599	Identifier	du_emx		160372	1					
ANR	161600	PrimaryExpression	0		160372	1					
ANR	161601	RelationalExpression	pol -> du_emy > 0		160372	1		>			
ANR	161602	PtrMemberAccess	pol -> du_emy		160372	0					
ANR	161603	Identifier	pol		160372	0					
ANR	161604	Identifier	du_emy		160372	1					
ANR	161605	PrimaryExpression	0		160372	1					
ANR	161606	CompoundStatement		246:48:8106:8106	160372	1					
ANR	161607	ExpressionStatement	du_emx = pol -> du_emx	1826:12:59370:59390	160372	0	True				
ANR	161608	AssignmentExpression	du_emx = pol -> du_emx		160372	0		=			
ANR	161609	Identifier	du_emx		160372	0					
ANR	161610	PtrMemberAccess	pol -> du_emx		160372	1					
ANR	161611	Identifier	pol		160372	0					
ANR	161612	Identifier	du_emx		160372	1					
ANR	161613	ExpressionStatement	du_emy = pol -> du_emy	1827:12:59404:59424	160372	1	True				
ANR	161614	AssignmentExpression	du_emy = pol -> du_emy		160372	0		=			
ANR	161615	Identifier	du_emy		160372	0					
ANR	161616	PtrMemberAccess	pol -> du_emy		160372	1					
ANR	161617	Identifier	pol		160372	0					
ANR	161618	Identifier	du_emy		160372	1					
ANR	161619	ElseStatement	else		160372	0					
ANR	161620	CompoundStatement		250:13:8199:8199	160372	0					
ANR	161621	ExpressionStatement	du_emx = pIFS -> cs . du_emx	1830:12:59463:59487	160372	0	True				
ANR	161622	AssignmentExpression	du_emx = pIFS -> cs . du_emx		160372	0		=			
ANR	161623	Identifier	du_emx		160372	0					
ANR	161624	MemberAccess	pIFS -> cs . du_emx		160372	1					
ANR	161625	PtrMemberAccess	pIFS -> cs		160372	0					
ANR	161626	Identifier	pIFS		160372	0					
ANR	161627	Identifier	cs		160372	1					
ANR	161628	Identifier	du_emx		160372	1					
ANR	161629	ExpressionStatement	du_emy = pIFS -> cs . du_emy	1831:12:59501:59525	160372	1	True				
ANR	161630	AssignmentExpression	du_emy = pIFS -> cs . du_emy		160372	0		=			
ANR	161631	Identifier	du_emy		160372	0					
ANR	161632	MemberAccess	pIFS -> cs . du_emy		160372	1					
ANR	161633	PtrMemberAccess	pIFS -> cs		160372	0					
ANR	161634	Identifier	pIFS		160372	0					
ANR	161635	Identifier	cs		160372	1					
ANR	161636	Identifier	du_emy		160372	1					
ANR	161637	ExpressionStatement	design_bbox [ 0 ] = pol -> left	1834:8:59546:59572	160372	4	True				
ANR	161638	AssignmentExpression	design_bbox [ 0 ] = pol -> left		160372	0		=			
ANR	161639	ArrayIndexing	design_bbox [ 0 ]		160372	0					
ANR	161640	Identifier	design_bbox		160372	0					
ANR	161641	PrimaryExpression	0		160372	1					
ANR	161642	PtrMemberAccess	pol -> left		160372	1					
ANR	161643	Identifier	pol		160372	0					
ANR	161644	Identifier	left		160372	1					
ANR	161645	ExpressionStatement	design_bbox [ 1 ] = pol -> bottom	1835:8:59582:59610	160372	5	True				
ANR	161646	AssignmentExpression	design_bbox [ 1 ] = pol -> bottom		160372	0		=			
ANR	161647	ArrayIndexing	design_bbox [ 1 ]		160372	0					
ANR	161648	Identifier	design_bbox		160372	0					
ANR	161649	PrimaryExpression	1		160372	1					
ANR	161650	PtrMemberAccess	pol -> bottom		160372	1					
ANR	161651	Identifier	pol		160372	0					
ANR	161652	Identifier	bottom		160372	1					
ANR	161653	ExpressionStatement	design_bbox [ 2 ] = pol -> right	1836:8:59620:59647	160372	6	True				
ANR	161654	AssignmentExpression	design_bbox [ 2 ] = pol -> right		160372	0		=			
ANR	161655	ArrayIndexing	design_bbox [ 2 ]		160372	0					
ANR	161656	Identifier	design_bbox		160372	0					
ANR	161657	PrimaryExpression	2		160372	1					
ANR	161658	PtrMemberAccess	pol -> right		160372	1					
ANR	161659	Identifier	pol		160372	0					
ANR	161660	Identifier	right		160372	1					
ANR	161661	ExpressionStatement	design_bbox [ 3 ] = pol -> top	1837:8:59657:59682	160372	7	True				
ANR	161662	AssignmentExpression	design_bbox [ 3 ] = pol -> top		160372	0		=			
ANR	161663	ArrayIndexing	design_bbox [ 3 ]		160372	0					
ANR	161664	Identifier	design_bbox		160372	0					
ANR	161665	PrimaryExpression	3		160372	1					
ANR	161666	PtrMemberAccess	pol -> top		160372	1					
ANR	161667	Identifier	pol		160372	0					
ANR	161668	Identifier	top		160372	1					
ANR	161669	ExpressionStatement	r -> char_data = ( IFOUTLINE * ) result	1839:8:59701:59736	160372	8	True				
ANR	161670	AssignmentExpression	r -> char_data = ( IFOUTLINE * ) result		160372	0		=			
ANR	161671	PtrMemberAccess	r -> char_data		160372	0					
ANR	161672	Identifier	r		160372	0					
ANR	161673	Identifier	char_data		160372	1					
ANR	161674	CastExpression	( IFOUTLINE * ) result		160372	1					
ANR	161675	CastTarget	IFOUTLINE *		160372	0					
ANR	161676	Identifier	result		160372	1					
ANR	161677	ElseStatement	else		160372	0					
ANR	161678	CompoundStatement		262:9:8503:8503	160372	0					
ANR	161679	ExpressionStatement	design_escapement [ 0 ] = glyph_width [ 0 ]	1842:8:59763:59800	160372	0	True				
ANR	161680	AssignmentExpression	design_escapement [ 0 ] = glyph_width [ 0 ]		160372	0		=			
ANR	161681	ArrayIndexing	design_escapement [ 0 ]		160372	0					
ANR	161682	Identifier	design_escapement		160372	0					
ANR	161683	PrimaryExpression	0		160372	1					
ANR	161684	ArrayIndexing	glyph_width [ 0 ]		160372	1					
ANR	161685	Identifier	glyph_width		160372	0					
ANR	161686	PrimaryExpression	0		160372	1					
ANR	161687	ExpressionStatement	design_escapement [ 1 ] = glyph_width [ 1 ]	1843:8:59810:59847	160372	1	True				
ANR	161688	AssignmentExpression	design_escapement [ 1 ] = glyph_width [ 1 ]		160372	0		=			
ANR	161689	ArrayIndexing	design_escapement [ 1 ]		160372	0					
ANR	161690	Identifier	design_escapement		160372	0					
ANR	161691	PrimaryExpression	1		160372	1					
ANR	161692	ArrayIndexing	glyph_width [ 1 ]		160372	1					
ANR	161693	Identifier	glyph_width		160372	0					
ANR	161694	PrimaryExpression	1		160372	1					
ANR	161695	ExpressionStatement	design_bbox [ 0 ] = design_bbox [ 1 ] = design_bbox [ 2 ] = design_bbox [ 3 ] = 0	1845:8:59866:59935	160372	2	True				
ANR	161696	AssignmentExpression	design_bbox [ 0 ] = design_bbox [ 1 ] = design_bbox [ 2 ] = design_bbox [ 3 ] = 0		160372	0		=			
ANR	161697	ArrayIndexing	design_bbox [ 0 ]		160372	0					
ANR	161698	Identifier	design_bbox		160372	0					
ANR	161699	PrimaryExpression	0		160372	1					
ANR	161700	AssignmentExpression	design_bbox [ 1 ] = design_bbox [ 2 ] = design_bbox [ 3 ] = 0		160372	1		=			
ANR	161701	ArrayIndexing	design_bbox [ 1 ]		160372	0					
ANR	161702	Identifier	design_bbox		160372	0					
ANR	161703	PrimaryExpression	1		160372	1					
ANR	161704	AssignmentExpression	design_bbox [ 2 ] = design_bbox [ 3 ] = 0		160372	1		=			
ANR	161705	ArrayIndexing	design_bbox [ 2 ]		160372	0					
ANR	161706	Identifier	design_bbox		160372	0					
ANR	161707	PrimaryExpression	2		160372	1					
ANR	161708	AssignmentExpression	design_bbox [ 3 ] = 0		160372	1		=			
ANR	161709	ArrayIndexing	design_bbox [ 3 ]		160372	0					
ANR	161710	Identifier	design_bbox		160372	0					
ANR	161711	PrimaryExpression	3		160372	1					
ANR	161712	PrimaryExpression	0		160372	1					
ANR	161713	IfStatement	if ( USBOUNDBOX && d -> font_type == FC_FCO_TYPE )		160372	67					
ANR	161714	Condition	USBOUNDBOX && d -> font_type == FC_FCO_TYPE	1848:8:59998:60038	160372	0	True				
ANR	161715	AndExpression	USBOUNDBOX && d -> font_type == FC_FCO_TYPE		160372	0		&&			
ANR	161716	Identifier	USBOUNDBOX		160372	0					
ANR	161717	EqualityExpression	d -> font_type == FC_FCO_TYPE		160372	1		==			
ANR	161718	PtrMemberAccess	d -> font_type		160372	0					
ANR	161719	Identifier	d		160372	0					
ANR	161720	Identifier	font_type		160372	1					
ANR	161721	Identifier	FC_FCO_TYPE		160372	1					
ANR	161722	CompoundStatement		269:51:8791:8791	160372	1					
ANR	161723	IfStatement	if ( pIFS -> USBBOXorigScaleFactor && pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor )		160372	0					
ANR	161724	Condition	pIFS -> USBBOXorigScaleFactor && pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor	1849:12:60055:60186	160372	0	True				
ANR	161725	AndExpression	pIFS -> USBBOXorigScaleFactor && pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor		160372	0		&&			
ANR	161726	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	0					
ANR	161727	Identifier	pIFS		160372	0					
ANR	161728	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161729	EqualityExpression	pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor		160372	1		!=			
ANR	161730	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	0					
ANR	161731	Identifier	pIFS		160372	0					
ANR	161732	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161733	PtrMemberAccess	pIFS -> USBBOXscaleFactor		160372	1					
ANR	161734	Identifier	pIFS		160372	0					
ANR	161735	Identifier	USBBOXscaleFactor		160372	1					
ANR	161736	CompoundStatement		274:12:9133:9172	160372	1					
ANR	161737	IdentifierDeclStatement	int w = pIFS -> USBBOXorigScaleFactor / 2 ;	1853:12:60383:60422	160372	0	True				
ANR	161738	IdentifierDecl	w = pIFS -> USBBOXorigScaleFactor / 2		160372	0					
ANR	161739	IdentifierDeclType	int		160372	0					
ANR	161740	Identifier	w		160372	1					
ANR	161741	AssignmentExpression	w = pIFS -> USBBOXorigScaleFactor / 2		160372	2		=			
ANR	161742	Identifier	w		160372	0					
ANR	161743	MultiplicativeExpression	pIFS -> USBBOXorigScaleFactor / 2		160372	1		/			
ANR	161744	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	0					
ANR	161745	Identifier	pIFS		160372	0					
ANR	161746	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161747	PrimaryExpression	2		160372	1					
ANR	161748	ExpressionStatement	design_bbox [ 0 ] = pIFS -> USBBOXxmin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor	1855:12:60437:60558	160372	1	True				
ANR	161749	AssignmentExpression	design_bbox [ 0 ] = pIFS -> USBBOXxmin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		160372	0		=			
ANR	161750	ArrayIndexing	design_bbox [ 0 ]		160372	0					
ANR	161751	Identifier	design_bbox		160372	0					
ANR	161752	PrimaryExpression	0		160372	1					
ANR	161753	MultiplicativeExpression	pIFS -> USBBOXxmin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		160372	1		*			
ANR	161754	PtrMemberAccess	pIFS -> USBBOXxmin		160372	0					
ANR	161755	Identifier	pIFS		160372	0					
ANR	161756	Identifier	USBBOXxmin		160372	1					
ANR	161757	MultiplicativeExpression	pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		160372	1		/			
ANR	161758	PtrMemberAccess	pIFS -> USBBOXscaleFactor		160372	0					
ANR	161759	Identifier	pIFS		160372	0					
ANR	161760	Identifier	USBBOXscaleFactor		160372	1					
ANR	161761	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	1					
ANR	161762	Identifier	pIFS		160372	0					
ANR	161763	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161764	ExpressionStatement	design_bbox [ 1 ] = pIFS -> USBBOXymin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor	1858:12:60572:60693	160372	2	True				
ANR	161765	AssignmentExpression	design_bbox [ 1 ] = pIFS -> USBBOXymin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		160372	0		=			
ANR	161766	ArrayIndexing	design_bbox [ 1 ]		160372	0					
ANR	161767	Identifier	design_bbox		160372	0					
ANR	161768	PrimaryExpression	1		160372	1					
ANR	161769	MultiplicativeExpression	pIFS -> USBBOXymin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		160372	1		*			
ANR	161770	PtrMemberAccess	pIFS -> USBBOXymin		160372	0					
ANR	161771	Identifier	pIFS		160372	0					
ANR	161772	Identifier	USBBOXymin		160372	1					
ANR	161773	MultiplicativeExpression	pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		160372	1		/			
ANR	161774	PtrMemberAccess	pIFS -> USBBOXscaleFactor		160372	0					
ANR	161775	Identifier	pIFS		160372	0					
ANR	161776	Identifier	USBBOXscaleFactor		160372	1					
ANR	161777	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	1					
ANR	161778	Identifier	pIFS		160372	0					
ANR	161779	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161780	ExpressionStatement	design_bbox [ 2 ] = ( pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor	1861:12:60707:60835	160372	3	True				
ANR	161781	AssignmentExpression	design_bbox [ 2 ] = ( pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		160372	0		=			
ANR	161782	ArrayIndexing	design_bbox [ 2 ]		160372	0					
ANR	161783	Identifier	design_bbox		160372	0					
ANR	161784	PrimaryExpression	2		160372	1					
ANR	161785	MultiplicativeExpression	( pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		160372	1		/			
ANR	161786	AdditiveExpression	pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w		160372	0		+			
ANR	161787	MultiplicativeExpression	pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor		160372	0		*			
ANR	161788	PtrMemberAccess	pIFS -> USBBOXxmax		160372	0					
ANR	161789	Identifier	pIFS		160372	0					
ANR	161790	Identifier	USBBOXxmax		160372	1					
ANR	161791	PtrMemberAccess	pIFS -> USBBOXscaleFactor		160372	1					
ANR	161792	Identifier	pIFS		160372	0					
ANR	161793	Identifier	USBBOXscaleFactor		160372	1					
ANR	161794	Identifier	w		160372	1					
ANR	161795	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	1					
ANR	161796	Identifier	pIFS		160372	0					
ANR	161797	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161798	ExpressionStatement	design_bbox [ 3 ] = ( pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor	1864:12:60849:60977	160372	4	True				
ANR	161799	AssignmentExpression	design_bbox [ 3 ] = ( pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		160372	0		=			
ANR	161800	ArrayIndexing	design_bbox [ 3 ]		160372	0					
ANR	161801	Identifier	design_bbox		160372	0					
ANR	161802	PrimaryExpression	3		160372	1					
ANR	161803	MultiplicativeExpression	( pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		160372	1		/			
ANR	161804	AdditiveExpression	pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w		160372	0		+			
ANR	161805	MultiplicativeExpression	pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor		160372	0		*			
ANR	161806	PtrMemberAccess	pIFS -> USBBOXymax		160372	0					
ANR	161807	Identifier	pIFS		160372	0					
ANR	161808	Identifier	USBBOXymax		160372	1					
ANR	161809	PtrMemberAccess	pIFS -> USBBOXscaleFactor		160372	1					
ANR	161810	Identifier	pIFS		160372	0					
ANR	161811	Identifier	USBBOXscaleFactor		160372	1					
ANR	161812	Identifier	w		160372	1					
ANR	161813	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		160372	1					
ANR	161814	Identifier	pIFS		160372	0					
ANR	161815	Identifier	USBBOXorigScaleFactor		160372	1					
ANR	161816	ElseStatement	else		160372	0					
ANR	161817	CompoundStatement		289:13:9752:9752	160372	0					
ANR	161818	ExpressionStatement	design_bbox [ 0 ] = pIFS -> USBBOXxmin	1869:12:61016:61049	160372	0	True				
ANR	161819	AssignmentExpression	design_bbox [ 0 ] = pIFS -> USBBOXxmin		160372	0		=			
ANR	161820	ArrayIndexing	design_bbox [ 0 ]		160372	0					
ANR	161821	Identifier	design_bbox		160372	0					
ANR	161822	PrimaryExpression	0		160372	1					
ANR	161823	PtrMemberAccess	pIFS -> USBBOXxmin		160372	1					
ANR	161824	Identifier	pIFS		160372	0					
ANR	161825	Identifier	USBBOXxmin		160372	1					
ANR	161826	ExpressionStatement	design_bbox [ 1 ] = pIFS -> USBBOXymin	1870:12:61063:61096	160372	1	True				
ANR	161827	AssignmentExpression	design_bbox [ 1 ] = pIFS -> USBBOXymin		160372	0		=			
ANR	161828	ArrayIndexing	design_bbox [ 1 ]		160372	0					
ANR	161829	Identifier	design_bbox		160372	0					
ANR	161830	PrimaryExpression	1		160372	1					
ANR	161831	PtrMemberAccess	pIFS -> USBBOXymin		160372	1					
ANR	161832	Identifier	pIFS		160372	0					
ANR	161833	Identifier	USBBOXymin		160372	1					
ANR	161834	ExpressionStatement	design_bbox [ 2 ] = pIFS -> USBBOXxmax	1871:12:61110:61143	160372	2	True				
ANR	161835	AssignmentExpression	design_bbox [ 2 ] = pIFS -> USBBOXxmax		160372	0		=			
ANR	161836	ArrayIndexing	design_bbox [ 2 ]		160372	0					
ANR	161837	Identifier	design_bbox		160372	0					
ANR	161838	PrimaryExpression	2		160372	1					
ANR	161839	PtrMemberAccess	pIFS -> USBBOXxmax		160372	1					
ANR	161840	Identifier	pIFS		160372	0					
ANR	161841	Identifier	USBBOXxmax		160372	1					
ANR	161842	ExpressionStatement	design_bbox [ 3 ] = pIFS -> USBBOXymax	1872:12:61157:61190	160372	3	True				
ANR	161843	AssignmentExpression	design_bbox [ 3 ] = pIFS -> USBBOXymax		160372	0		=			
ANR	161844	ArrayIndexing	design_bbox [ 3 ]		160372	0					
ANR	161845	Identifier	design_bbox		160372	0					
ANR	161846	PrimaryExpression	3		160372	1					
ANR	161847	PtrMemberAccess	pIFS -> USBBOXymax		160372	1					
ANR	161848	Identifier	pIFS		160372	0					
ANR	161849	Identifier	USBBOXymax		160372	1					
ANR	161850	ElseStatement	else		160372	0					
ANR	161851	CompoundStatement		296:9:9967:9967	160372	0					
ANR	161852	CompoundStatement		338:8:12313:12353	160372	68					
ANR	161853	IdentifierDeclStatement	"const double expansion_x = 2 , expansion_y = 2 ;"	1907:8:63047:63092	160372	0	True				
ANR	161854	IdentifierDecl	expansion_x = 2		160372	0					
ANR	161855	IdentifierDeclType	const double		160372	0					
ANR	161856	Identifier	expansion_x		160372	1					
ANR	161857	AssignmentExpression	expansion_x = 2		160372	2		=			
ANR	161858	Identifier	expansion_x		160372	0					
ANR	161859	PrimaryExpression	2		160372	1					
ANR	161860	IdentifierDecl	expansion_y = 2		160372	1					
ANR	161861	IdentifierDeclType	const double		160372	0					
ANR	161862	Identifier	expansion_y		160372	1					
ANR	161863	AssignmentExpression	expansion_y = 2		160372	2		=			
ANR	161864	Identifier	expansion_y		160372	0					
ANR	161865	PrimaryExpression	2		160372	1					
ANR	161866	IdentifierDeclStatement	const double XX = r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx ;	1908:8:63133:63219	160372	1	True				
ANR	161867	IdentifierDecl	XX = r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	0					
ANR	161868	IdentifierDeclType	const double		160372	0					
ANR	161869	Identifier	XX		160372	1					
ANR	161870	AssignmentExpression	XX = r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	2		=			
ANR	161871	Identifier	XX		160372	0					
ANR	161872	MultiplicativeExpression	r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	1		*			
ANR	161873	PtrMemberAccess	r -> tran_xx		160372	0					
ANR	161874	Identifier	r		160372	0					
ANR	161875	Identifier	tran_xx		160372	1					
ANR	161876	MultiplicativeExpression	( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	1		/			
ANR	161877	ShiftExpression	r -> fc . s . m2 . xworld_res >> 16		160372	0		>>			
ANR	161878	MemberAccess	r -> fc . s . m2 . xworld_res		160372	0					
ANR	161879	MemberAccess	r -> fc . s . m2		160372	0					
ANR	161880	MemberAccess	r -> fc . s		160372	0					
ANR	161881	PtrMemberAccess	r -> fc		160372	0					
ANR	161882	Identifier	r		160372	0					
ANR	161883	Identifier	fc		160372	1					
ANR	161884	Identifier	s		160372	1					
ANR	161885	Identifier	m2		160372	1					
ANR	161886	Identifier	xworld_res		160372	1					
ANR	161887	PrimaryExpression	16		160372	1					
ANR	161888	MultiplicativeExpression	72 / du_emx		160372	1		/			
ANR	161889	PrimaryExpression	72		160372	0					
ANR	161890	Identifier	du_emx		160372	1					
ANR	161891	IdentifierDeclStatement	const double XY = r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy ;	1910:8:63229:63315	160372	2	True				
ANR	161892	IdentifierDecl	XY = r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	0					
ANR	161893	IdentifierDeclType	const double		160372	0					
ANR	161894	Identifier	XY		160372	1					
ANR	161895	AssignmentExpression	XY = r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	2		=			
ANR	161896	Identifier	XY		160372	0					
ANR	161897	MultiplicativeExpression	r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	1		*			
ANR	161898	PtrMemberAccess	r -> tran_xy		160372	0					
ANR	161899	Identifier	r		160372	0					
ANR	161900	Identifier	tran_xy		160372	1					
ANR	161901	MultiplicativeExpression	( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	1		/			
ANR	161902	ShiftExpression	r -> fc . s . m2 . yworld_res >> 16		160372	0		>>			
ANR	161903	MemberAccess	r -> fc . s . m2 . yworld_res		160372	0					
ANR	161904	MemberAccess	r -> fc . s . m2		160372	0					
ANR	161905	MemberAccess	r -> fc . s		160372	0					
ANR	161906	PtrMemberAccess	r -> fc		160372	0					
ANR	161907	Identifier	r		160372	0					
ANR	161908	Identifier	fc		160372	1					
ANR	161909	Identifier	s		160372	1					
ANR	161910	Identifier	m2		160372	1					
ANR	161911	Identifier	yworld_res		160372	1					
ANR	161912	PrimaryExpression	16		160372	1					
ANR	161913	MultiplicativeExpression	72 / du_emy		160372	1		/			
ANR	161914	PrimaryExpression	72		160372	0					
ANR	161915	Identifier	du_emy		160372	1					
ANR	161916	IdentifierDeclStatement	const double YX = r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx ;	1912:8:63325:63411	160372	3	True				
ANR	161917	IdentifierDecl	YX = r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	0					
ANR	161918	IdentifierDeclType	const double		160372	0					
ANR	161919	Identifier	YX		160372	1					
ANR	161920	AssignmentExpression	YX = r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	2		=			
ANR	161921	Identifier	YX		160372	0					
ANR	161922	MultiplicativeExpression	r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	1		*			
ANR	161923	PtrMemberAccess	r -> tran_yx		160372	0					
ANR	161924	Identifier	r		160372	0					
ANR	161925	Identifier	tran_yx		160372	1					
ANR	161926	MultiplicativeExpression	( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		160372	1		/			
ANR	161927	ShiftExpression	r -> fc . s . m2 . xworld_res >> 16		160372	0		>>			
ANR	161928	MemberAccess	r -> fc . s . m2 . xworld_res		160372	0					
ANR	161929	MemberAccess	r -> fc . s . m2		160372	0					
ANR	161930	MemberAccess	r -> fc . s		160372	0					
ANR	161931	PtrMemberAccess	r -> fc		160372	0					
ANR	161932	Identifier	r		160372	0					
ANR	161933	Identifier	fc		160372	1					
ANR	161934	Identifier	s		160372	1					
ANR	161935	Identifier	m2		160372	1					
ANR	161936	Identifier	xworld_res		160372	1					
ANR	161937	PrimaryExpression	16		160372	1					
ANR	161938	MultiplicativeExpression	72 / du_emx		160372	1		/			
ANR	161939	PrimaryExpression	72		160372	0					
ANR	161940	Identifier	du_emx		160372	1					
ANR	161941	IdentifierDeclStatement	const double YY = r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy ;	1914:8:63421:63507	160372	4	True				
ANR	161942	IdentifierDecl	YY = r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	0					
ANR	161943	IdentifierDeclType	const double		160372	0					
ANR	161944	Identifier	YY		160372	1					
ANR	161945	AssignmentExpression	YY = r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	2		=			
ANR	161946	Identifier	YY		160372	0					
ANR	161947	MultiplicativeExpression	r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	1		*			
ANR	161948	PtrMemberAccess	r -> tran_yy		160372	0					
ANR	161949	Identifier	r		160372	0					
ANR	161950	Identifier	tran_yy		160372	1					
ANR	161951	MultiplicativeExpression	( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		160372	1		/			
ANR	161952	ShiftExpression	r -> fc . s . m2 . yworld_res >> 16		160372	0		>>			
ANR	161953	MemberAccess	r -> fc . s . m2 . yworld_res		160372	0					
ANR	161954	MemberAccess	r -> fc . s . m2		160372	0					
ANR	161955	MemberAccess	r -> fc . s		160372	0					
ANR	161956	PtrMemberAccess	r -> fc		160372	0					
ANR	161957	Identifier	r		160372	0					
ANR	161958	Identifier	fc		160372	1					
ANR	161959	Identifier	s		160372	1					
ANR	161960	Identifier	m2		160372	1					
ANR	161961	Identifier	yworld_res		160372	1					
ANR	161962	PrimaryExpression	16		160372	1					
ANR	161963	MultiplicativeExpression	72 / du_emy		160372	1		/			
ANR	161964	PrimaryExpression	72		160372	0					
ANR	161965	Identifier	du_emy		160372	1					
ANR	161966	IdentifierDeclStatement	const double det = XX * YY - XY * YX ;	1916:8:63517:63553	160372	5	True				
ANR	161967	IdentifierDecl	det = XX * YY - XY * YX		160372	0					
ANR	161968	IdentifierDeclType	const double		160372	0					
ANR	161969	Identifier	det		160372	1					
ANR	161970	AssignmentExpression	det = XX * YY - XY * YX		160372	2		=			
ANR	161971	Identifier	det		160372	0					
ANR	161972	AdditiveExpression	XX * YY - XY * YX		160372	1		-			
ANR	161973	MultiplicativeExpression	XX * YY		160372	0		*			
ANR	161974	Identifier	XX		160372	0					
ANR	161975	Identifier	YY		160372	1					
ANR	161976	MultiplicativeExpression	XY * YX		160372	1		*			
ANR	161977	Identifier	XY		160372	0					
ANR	161978	Identifier	YX		160372	1					
ANR	161979	IdentifierDeclStatement	const double deta = det < 0 ? - det : det ;	1917:8:63563:63603	160372	6	True				
ANR	161980	IdentifierDecl	deta = det < 0 ? - det : det		160372	0					
ANR	161981	IdentifierDeclType	const double		160372	0					
ANR	161982	Identifier	deta		160372	1					
ANR	161983	AssignmentExpression	deta = det < 0 ? - det : det		160372	2		=			
ANR	161984	Identifier	deta		160372	0					
ANR	161985	ConditionalExpression	det < 0 ? - det : det		160372	1					
ANR	161986	Condition	det < 0		160372	0					
ANR	161987	RelationalExpression	det < 0		160372	0		<			
ANR	161988	Identifier	det		160372	0					
ANR	161989	PrimaryExpression	0		160372	1					
ANR	161990	UnaryOperationExpression	- det		160372	1					
ANR	161991	UnaryOperator	-		160372	0					
ANR	161992	Identifier	det		160372	1					
ANR	161993	Identifier	det		160372	2					
ANR	161994	IfStatement	if ( deta > 0.0000000001 )		160372	7					
ANR	161995	Condition	deta > 0.0000000001	1919:12:63618:63636	160372	0	True				
ANR	161996	RelationalExpression	deta > 0.0000000001		160372	0		>			
ANR	161997	Identifier	deta		160372	0					
ANR	161998	PrimaryExpression	0.0000000001		160372	1					
ANR	161999	CompoundStatement		346:12:12720:12771	160372	1					
ANR	162000	IdentifierDeclStatement	"const double xx = YY / det , xy = - XY / det ;"	1920:12:63653:63695	160372	0	True				
ANR	162001	IdentifierDecl	xx = YY / det		160372	0					
ANR	162002	IdentifierDeclType	const double		160372	0					
ANR	162003	Identifier	xx		160372	1					
ANR	162004	AssignmentExpression	xx = YY / det		160372	2		=			
ANR	162005	Identifier	xx		160372	0					
ANR	162006	MultiplicativeExpression	YY / det		160372	1		/			
ANR	162007	Identifier	YY		160372	0					
ANR	162008	Identifier	det		160372	1					
ANR	162009	IdentifierDecl	xy = - XY / det		160372	1					
ANR	162010	IdentifierDeclType	const double		160372	0					
ANR	162011	Identifier	xy		160372	1					
ANR	162012	AssignmentExpression	xy = - XY / det		160372	2		=			
ANR	162013	Identifier	xy		160372	0					
ANR	162014	MultiplicativeExpression	- XY / det		160372	1		/			
ANR	162015	UnaryOperationExpression	- XY		160372	0					
ANR	162016	UnaryOperator	-		160372	0					
ANR	162017	Identifier	XY		160372	1					
ANR	162018	Identifier	det		160372	1					
ANR	162019	IdentifierDeclStatement	"const double yx = - YX / det , yy = XX / det ;"	1921:12:63709:63751	160372	1	True				
ANR	162020	IdentifierDecl	yx = - YX / det		160372	0					
ANR	162021	IdentifierDeclType	const double		160372	0					
ANR	162022	Identifier	yx		160372	1					
ANR	162023	AssignmentExpression	yx = - YX / det		160372	2		=			
ANR	162024	Identifier	yx		160372	0					
ANR	162025	MultiplicativeExpression	- YX / det		160372	1		/			
ANR	162026	UnaryOperationExpression	- YX		160372	0					
ANR	162027	UnaryOperator	-		160372	0					
ANR	162028	Identifier	YX		160372	1					
ANR	162029	Identifier	det		160372	1					
ANR	162030	IdentifierDecl	yy = XX / det		160372	1					
ANR	162031	IdentifierDeclType	const double		160372	0					
ANR	162032	Identifier	yy		160372	1					
ANR	162033	AssignmentExpression	yy = XX / det		160372	2		=			
ANR	162034	Identifier	yy		160372	0					
ANR	162035	MultiplicativeExpression	XX / det		160372	1		/			
ANR	162036	Identifier	XX		160372	0					
ANR	162037	Identifier	det		160372	1					
ANR	162038	IdentifierDeclStatement	const double dx = - ( expansion_x * xx + expansion_y * xy ) ;	1922:12:63765:63821	160372	2	True				
ANR	162039	IdentifierDecl	dx = - ( expansion_x * xx + expansion_y * xy )		160372	0					
ANR	162040	IdentifierDeclType	const double		160372	0					
ANR	162041	Identifier	dx		160372	1					
ANR	162042	AssignmentExpression	dx = - ( expansion_x * xx + expansion_y * xy )		160372	2		=			
ANR	162043	Identifier	dx		160372	0					
ANR	162044	UnaryOperationExpression	- ( expansion_x * xx + expansion_y * xy )		160372	1					
ANR	162045	UnaryOperator	-		160372	0					
ANR	162046	AdditiveExpression	expansion_x * xx + expansion_y * xy		160372	1		+			
ANR	162047	MultiplicativeExpression	expansion_x * xx		160372	0		*			
ANR	162048	Identifier	expansion_x		160372	0					
ANR	162049	Identifier	xx		160372	1					
ANR	162050	MultiplicativeExpression	expansion_y * xy		160372	1		*			
ANR	162051	Identifier	expansion_y		160372	0					
ANR	162052	Identifier	xy		160372	1					
ANR	162053	IdentifierDeclStatement	const double dy = - ( expansion_x * yx + expansion_y * yy ) ;	1923:12:63835:63891	160372	3	True				
ANR	162054	IdentifierDecl	dy = - ( expansion_x * yx + expansion_y * yy )		160372	0					
ANR	162055	IdentifierDeclType	const double		160372	0					
ANR	162056	Identifier	dy		160372	1					
ANR	162057	AssignmentExpression	dy = - ( expansion_x * yx + expansion_y * yy )		160372	2		=			
ANR	162058	Identifier	dy		160372	0					
ANR	162059	UnaryOperationExpression	- ( expansion_x * yx + expansion_y * yy )		160372	1					
ANR	162060	UnaryOperator	-		160372	0					
ANR	162061	AdditiveExpression	expansion_x * yx + expansion_y * yy		160372	1		+			
ANR	162062	MultiplicativeExpression	expansion_x * yx		160372	0		*			
ANR	162063	Identifier	expansion_x		160372	0					
ANR	162064	Identifier	yx		160372	1					
ANR	162065	MultiplicativeExpression	expansion_y * yy		160372	1		*			
ANR	162066	Identifier	expansion_y		160372	0					
ANR	162067	Identifier	yy		160372	1					
ANR	162068	IdentifierDeclStatement	const SL32 dxa = ( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 ) ;	1924:12:63905:63956	160372	4	True				
ANR	162069	IdentifierDecl	dxa = ( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 )		160372	0					
ANR	162070	IdentifierDeclType	const SL32		160372	0					
ANR	162071	Identifier	dxa		160372	1					
ANR	162072	AssignmentExpression	dxa = ( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 )		160372	2		=			
ANR	162073	Identifier	dxa		160372	0					
ANR	162074	CastExpression	( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 )		160372	1					
ANR	162075	CastTarget	SL32		160372	0					
ANR	162076	AdditiveExpression	( dx < 0 ? - dx : dx ) + 0.5		160372	1		+			
ANR	162077	ConditionalExpression	dx < 0 ? - dx : dx		160372	0					
ANR	162078	Condition	dx < 0		160372	0					
ANR	162079	RelationalExpression	dx < 0		160372	0		<			
ANR	162080	Identifier	dx		160372	0					
ANR	162081	PrimaryExpression	0		160372	1					
ANR	162082	UnaryOperationExpression	- dx		160372	1					
ANR	162083	UnaryOperator	-		160372	0					
ANR	162084	Identifier	dx		160372	1					
ANR	162085	Identifier	dx		160372	2					
ANR	162086	PrimaryExpression	0.5		160372	1					
ANR	162087	IdentifierDeclStatement	const SL32 dya = ( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 ) ;	1925:12:63970:64021	160372	5	True				
ANR	162088	IdentifierDecl	dya = ( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 )		160372	0					
ANR	162089	IdentifierDeclType	const SL32		160372	0					
ANR	162090	Identifier	dya		160372	1					
ANR	162091	AssignmentExpression	dya = ( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 )		160372	2		=			
ANR	162092	Identifier	dya		160372	0					
ANR	162093	CastExpression	( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 )		160372	1					
ANR	162094	CastTarget	SL32		160372	0					
ANR	162095	AdditiveExpression	( dy < 0 ? - dy : dy ) + 0.5		160372	1		+			
ANR	162096	ConditionalExpression	dy < 0 ? - dy : dy		160372	0					
ANR	162097	Condition	dy < 0		160372	0					
ANR	162098	RelationalExpression	dy < 0		160372	0		<			
ANR	162099	Identifier	dy		160372	0					
ANR	162100	PrimaryExpression	0		160372	1					
ANR	162101	UnaryOperationExpression	- dy		160372	1					
ANR	162102	UnaryOperator	-		160372	0					
ANR	162103	Identifier	dy		160372	1					
ANR	162104	Identifier	dy		160372	2					
ANR	162105	PrimaryExpression	0.5		160372	1					
ANR	162106	ExpressionStatement	design_bbox [ 0 ] -= dxa	1927:12:64036:64057	160372	6	True				
ANR	162107	AssignmentExpression	design_bbox [ 0 ] -= dxa		160372	0		-=			
ANR	162108	ArrayIndexing	design_bbox [ 0 ]		160372	0					
ANR	162109	Identifier	design_bbox		160372	0					
ANR	162110	PrimaryExpression	0		160372	1					
ANR	162111	Identifier	dxa		160372	1					
ANR	162112	ExpressionStatement	design_bbox [ 1 ] -= dya	1928:12:64071:64092	160372	7	True				
ANR	162113	AssignmentExpression	design_bbox [ 1 ] -= dya		160372	0		-=			
ANR	162114	ArrayIndexing	design_bbox [ 1 ]		160372	0					
ANR	162115	Identifier	design_bbox		160372	0					
ANR	162116	PrimaryExpression	1		160372	1					
ANR	162117	Identifier	dya		160372	1					
ANR	162118	ExpressionStatement	design_bbox [ 2 ] += dxa	1929:12:64106:64127	160372	8	True				
ANR	162119	AssignmentExpression	design_bbox [ 2 ] += dxa		160372	0		+=			
ANR	162120	ArrayIndexing	design_bbox [ 2 ]		160372	0					
ANR	162121	Identifier	design_bbox		160372	0					
ANR	162122	PrimaryExpression	2		160372	1					
ANR	162123	Identifier	dxa		160372	1					
ANR	162124	ExpressionStatement	design_bbox [ 3 ] += dya	1930:12:64141:64162	160372	9	True				
ANR	162125	AssignmentExpression	design_bbox [ 3 ] += dya		160372	0		+=			
ANR	162126	ArrayIndexing	design_bbox [ 3 ]		160372	0					
ANR	162127	Identifier	design_bbox		160372	0					
ANR	162128	PrimaryExpression	3		160372	1					
ANR	162129	Identifier	dya		160372	1					
ANR	162130	ExpressionStatement	"set_metrics ( r , metrics , design_bbox , design_escapement , du_emx , du_emy )"	1933:4:64184:64255	160372	69	True				
ANR	162131	CallExpression	"set_metrics ( r , metrics , design_bbox , design_escapement , du_emx , du_emy )"		160372	0					
ANR	162132	Callee	set_metrics		160372	0					
ANR	162133	Identifier	set_metrics		160372	0					
ANR	162134	ArgumentList	r		160372	1					
ANR	162135	Argument	r		160372	0					
ANR	162136	Identifier	r		160372	0					
ANR	162137	Argument	metrics		160372	1					
ANR	162138	Identifier	metrics		160372	0					
ANR	162139	Argument	design_bbox		160372	2					
ANR	162140	Identifier	design_bbox		160372	0					
ANR	162141	Argument	design_escapement		160372	3					
ANR	162142	Identifier	design_escapement		160372	0					
ANR	162143	Argument	du_emx		160372	4					
ANR	162144	Identifier	du_emx		160372	0					
ANR	162145	Argument	du_emy		160372	5					
ANR	162146	Identifier	du_emy		160372	0					
ANR	162147	IfStatement	if ( code == ERR_fixed_space )		160372	70					
ANR	162148	Condition	code == ERR_fixed_space	1934:8:64265:64287	160372	0	True				
ANR	162149	EqualityExpression	code == ERR_fixed_space		160372	0		==			
ANR	162150	Identifier	code		160372	0					
ANR	162151	Identifier	ERR_fixed_space		160372	1					
ANR	162152	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1935:8:64298:64338	160372	1	True				
ANR	162153	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		160372	0					
ANR	162154	Callee	gs_fapi_ufst_release_char_data_inline		160372	0					
ANR	162155	Identifier	gs_fapi_ufst_release_char_data_inline		160372	0					
ANR	162156	ArgumentList	r		160372	1					
ANR	162157	Argument	r		160372	0					
ANR	162158	Identifier	r		160372	0					
ANR	162159	ReturnStatement	return 0 ;	1936:4:64344:64352	160372	71	True				
ANR	162160	PrimaryExpression	0		160372	0					
ANR	162161	ReturnType	static gs_fapi_retcode		160372	1					
ANR	162162	Identifier	get_char		160372	2					
ANR	162163	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_path * p , gs_fapi_metrics * metrics , UW16 format"		160372	3					
ANR	162164	Parameter	gs_fapi_server * server	1578:9:51121:51142	160372	0	True				
ANR	162165	ParameterType	gs_fapi_server *		160372	0					
ANR	162166	Identifier	server		160372	1					
ANR	162167	Parameter	gs_fapi_font * ff	1578:33:51145:51160	160372	1	True				
ANR	162168	ParameterType	gs_fapi_font *		160372	0					
ANR	162169	Identifier	ff		160372	1					
ANR	162170	Parameter	gs_fapi_char_ref * c	1578:51:51163:51181	160372	2	True				
ANR	162171	ParameterType	gs_fapi_char_ref *		160372	0					
ANR	162172	Identifier	c		160372	1					
ANR	162173	Parameter	gs_fapi_path * p	1579:9:51193:51207	160372	3	True				
ANR	162174	ParameterType	gs_fapi_path *		160372	0					
ANR	162175	Identifier	p		160372	1					
ANR	162176	Parameter	gs_fapi_metrics * metrics	1579:26:51210:51233	160372	4	True				
ANR	162177	ParameterType	gs_fapi_metrics *		160372	0					
ANR	162178	Identifier	metrics		160372	1					
ANR	162179	Parameter	UW16 format	1579:52:51236:51246	160372	5	True				
ANR	162180	ParameterType	UW16		160372	0					
ANR	162181	Identifier	format		160372	1					
ANR	162182	CFGEntryNode	ENTRY		160372		True				
ANR	162183	CFGExitNode	EXIT		160372		True				
ANR	162184	Symbol	c -> sb_x		160372						
ANR	162185	Symbol	XX		160372						
ANR	162186	Symbol	xx		160372						
ANR	162187	Symbol	XY		160372						
ANR	162188	Symbol	xy		160372						
ANR	162189	Symbol	ff -> is_cid		160372						
ANR	162190	Symbol	ff -> char_data_len		160372						
ANR	162191	Symbol	pIFS -> fcCur . ssnum		160372						
ANR	162192	Symbol	& server -> face . ctm		160372						
ANR	162193	Symbol	USBOUNDBOX		160372						
ANR	162194	Symbol	r -> tran_yy		160372						
ANR	162195	Symbol	pIFS -> cs		160372						
ANR	162196	Symbol	r -> tran_yx		160372						
ANR	162197	Symbol	* glyph_width		160372						
ANR	162198	Symbol	pbm -> left_indent		160372						
ANR	162199	Symbol	pIFS -> fcCur		160372						
ANR	162200	Symbol	det		160372						
ANR	162201	Symbol	len		160372						
ANR	162202	Symbol	FSA		160372						
ANR	162203	Symbol	r -> fc . s . m2 . xworld_res		160372						
ANR	162204	Symbol	ff -> get_glyph		160372						
ANR	162205	Symbol	notdef_str . data		160372						
ANR	162206	Symbol	CGIFFwidth2		160372						
ANR	162207	Symbol	pIFS -> fcCur . format		160372						
ANR	162208	Symbol	YX		160372						
ANR	162209	Symbol	yx		160372						
ANR	162210	Symbol	YY		160372						
ANR	162211	Symbol	yy		160372						
ANR	162212	Symbol	fc -> ExtndFlags		160372						
ANR	162213	Symbol	design_bbox		160372						
ANR	162214	Symbol	* PSchar_name		160372						
ANR	162215	Symbol	FC_DONTHINTTT		160372						
ANR	162216	Symbol	server -> face		160372						
ANR	162217	Symbol	pIFS -> USBBOXorigScaleFactor		160372						
ANR	162218	Symbol	r -> tran_xx		160372						
ANR	162219	Symbol	~FC_OUTPUT_MASK		160372						
ANR	162220	Symbol	r -> tran_xy		160372						
ANR	162221	Symbol	c1		160372						
ANR	162222	Symbol	pbm -> du_emx		160372						
ANR	162223	Symbol	pbm -> du_emy		160372						
ANR	162224	Symbol	pIFS -> glyphMetricsDU . aw		160372						
ANR	162225	Symbol	r -> sb_x		160372						
ANR	162226	Symbol	* pol		160372						
ANR	162227	Symbol	pIFS -> USBBOXxmin		160372						
ANR	162228	Symbol	r -> fc . s . m2 . yworld_res		160372						
ANR	162229	Symbol	metrics		160372						
ANR	162230	Symbol	r -> char_data		160372						
ANR	162231	Symbol	* pIFS		160372						
ANR	162232	Symbol	server		160372						
ANR	162233	Symbol	pol -> top		160372						
ANR	162234	Symbol	code2		160372						
ANR	162235	Symbol	FC_FCO_TYPE		160372						
ANR	162236	Symbol	pbm -> top_indent		160372						
ANR	162237	Symbol	* server		160372						
ANR	162238	Symbol	server -> face . ctm		160372						
ANR	162239	Symbol	pIFS -> USBBOXxmax		160372						
ANR	162240	Symbol	glyph_width_code . CharType . TT_unicode		160372						
ANR	162241	Symbol	pol		160372						
ANR	162242	Symbol	dxa		160372						
ANR	162243	Symbol	EF_TT_NOHINT		160372						
ANR	162244	Symbol	ff -> is_vertical		160372						
ANR	162245	Symbol	result		160372						
ANR	162246	Symbol	ERR_fixed_space		160372						
ANR	162247	Symbol	pIFS		160372						
ANR	162248	Symbol	pbm -> escapement		160372						
ANR	162249	Symbol	min		160372						
ANR	162250	Symbol	c -> char_name_length		160372						
ANR	162251	Symbol	notdef		160372						
ANR	162252	Symbol	PSchar_name		160372						
ANR	162253	Symbol	ff -> server_font_data		160372						
ANR	162254	Symbol	cc		160372						
ANR	162255	Symbol	du_emx		160372						
ANR	162256	Symbol	* fc		160372						
ANR	162257	Symbol	If_to_I		160372						
ANR	162258	Symbol	du_emy		160372						
ANR	162259	Symbol	& r -> fc		160372						
ANR	162260	Symbol	c		160372						
ANR	162261	Symbol	r -> callback_error		160372						
ANR	162262	Symbol	d		160372						
ANR	162263	Symbol	* ff		160372						
ANR	162264	Symbol	pol -> left		160372						
ANR	162265	Symbol	glyph_width_code		160372						
ANR	162266	Symbol	RAW_GLYPH		160372						
ANR	162267	Symbol	r -> fc . s . m2		160372						
ANR	162268	Symbol	dya		160372						
ANR	162269	Symbol	p		160372						
ANR	162270	Symbol	r		160372						
ANR	162271	Symbol	pbm -> black_width		160372						
ANR	162272	Symbol	& server -> face		160372						
ANR	162273	Symbol	w		160372						
ANR	162274	Symbol	pbm -> black_depth		160372						
ANR	162275	Symbol	* design_escapement		160372						
ANR	162276	Symbol	* len		160372						
ANR	162277	Symbol	deta		160372						
ANR	162278	Symbol	ERR_bm_too_big		160372						
ANR	162279	Symbol	pIFS -> USBBOXscaleFactor		160372						
ANR	162280	Symbol	FC_BITMAP_TYPE		160372						
ANR	162281	Symbol	client_char_data		160372						
ANR	162282	Symbol	space		160372						
ANR	162283	Symbol	r -> bRaster		160372						
ANR	162284	Symbol	pol -> bottom		160372						
ANR	162285	Symbol	notdef_str		160372						
ANR	162286	Symbol	strlen		160372						
ANR	162287	Symbol	memcmp		160372						
ANR	162288	Symbol	pIFS -> gpps		160372						
ANR	162289	Symbol	dx		160372						
ANR	162290	Symbol	* metrics		160372						
ANR	162291	Symbol	dy		160372						
ANR	162292	Symbol	pIFS -> USBBOXymin		160372						
ANR	162293	Symbol	pol -> advanceHeight		160372						
ANR	162294	Symbol	glyph_width_code . CharType		160372						
ANR	162295	Symbol	NULL		160372						
ANR	162296	Symbol	* pbm		160372						
ANR	162297	Symbol	pIFS -> USBBOXymax		160372						
ANR	162298	Symbol	notdef_str . size		160372						
ANR	162299	Symbol	format		160372						
ANR	162300	Symbol	* * c		160372						
ANR	162301	Symbol	pIFS -> cs . du_emy		160372						
ANR	162302	Symbol	TRUE		160372						
ANR	162303	Symbol	r -> metrics_type		160372						
ANR	162304	Symbol	ssnum		160372						
ANR	162305	Symbol	client_char_data_len		160372						
ANR	162306	Symbol	use_XL_format		160372						
ANR	162307	Symbol	d -> font_type		160372						
ANR	162308	Symbol	ff -> char_data		160372						
ANR	162309	Symbol	& notdef_str		160372						
ANR	162310	Symbol	pol -> right		160372						
ANR	162311	Symbol	pIFS -> cs . du_emx		160372						
ANR	162312	Symbol	true		160372						
ANR	162313	Symbol	pbm		160372						
ANR	162314	Symbol	fc		160372						
ANR	162315	Symbol	ff -> is_mtx_skipped		160372						
ANR	162316	Symbol	ff		160372						
ANR	162317	Symbol	pol -> du_emx		160372						
ANR	162318	Symbol	code		160372						
ANR	162319	Symbol	ff -> is_type1		160372						
ANR	162320	Symbol	pol -> du_emy		160372						
ANR	162321	Symbol	design_escapement		160372						
ANR	162322	Symbol	r -> aw_x		160372						
ANR	162323	Symbol	FC_TT_TYPE		160372						
ANR	162324	Symbol	c -> char_codes		160372						
ANR	162325	Symbol	* design_bbox		160372						
ANR	162326	Symbol	glyph_width		160372						
ANR	162327	Symbol	pIFS -> glyphMetricsDU		160372						
ANR	162328	Symbol	c -> metrics_type		160372						
ANR	162329	Symbol	r -> fc . s		160372						
ANR	162330	Symbol	c -> aw_x		160372						
ANR	162331	Symbol	EF_SUBSTHOLLOWBOX_TYPE		160372						
ANR	162332	Symbol	metrics -> bbox_x1		160372						
ANR	162333	Symbol	c -> char_name		160372						
ANR	162334	Symbol	r -> ff		160372						
ANR	162335	Symbol	pIFS -> glyphMetricsDU . aw . x		160372						
ANR	162336	Symbol	pIFS -> glyphMetricsDU . aw . y		160372						
ANR	162337	Symbol	r -> fc		160372						
ANR	162338	Symbol	static_server_ptr_for_ufst_callback		160372						
ANR	162339	Symbol	length		160372						
ANR	162340	Symbol	false		160372						
ANR	162341	Symbol	expansion_x		160372						
ANR	162342	Symbol	FC_PST1_TYPE		160372						
ANR	162343	Symbol	expansion_y		160372						
ANR	162344	Symbol	ff -> need_decrypt		160372						
ANR	162345	Symbol	* c		160372						
ANR	162346	Symbol	* d		160372						
ANR	162347	Symbol	pol -> escapement		160372						
ANR	162348	Symbol	* c -> char_codes		160372						
ANR	162349	Symbol	r -> fc . ExtndFlags		160372						
ANR	162350	Symbol	FALSE		160372						
ANR	162351	Symbol	savehint		160372						
ANR	162352	Symbol	* r		160372						
ANR	162353	Symbol	ERR_bm_buff		160372						
ANR	162354	Function	gs_fapi_ufst_get_char_outline_metrics	1939:0:64357:64859							
ANR	162355	FunctionDef	"gs_fapi_ufst_get_char_outline_metrics (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics)"		162354	0					
ANR	162356	CompoundStatement		1942:0:64535:64859	162354	0					
ANR	162357	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1943:4:64541:64578	162354	0	True				
ANR	162358	IdentifierDecl	* r = If_to_I ( server )		162354	0					
ANR	162359	IdentifierDeclType	fapi_ufst_server *		162354	0					
ANR	162360	Identifier	r		162354	1					
ANR	162361	AssignmentExpression	* r = If_to_I ( server )		162354	2		=			
ANR	162362	Identifier	r		162354	0					
ANR	162363	CallExpression	If_to_I ( server )		162354	1					
ANR	162364	Callee	If_to_I		162354	0					
ANR	162365	Identifier	If_to_I		162354	0					
ANR	162366	ArgumentList	server		162354	1					
ANR	162367	Argument	server		162354	0					
ANR	162368	Identifier	server		162354	0					
ANR	162369	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1945:4:64585:64625	162354	1	True				
ANR	162370	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		162354	0					
ANR	162371	Callee	gs_fapi_ufst_release_char_data_inline		162354	0					
ANR	162372	Identifier	gs_fapi_ufst_release_char_data_inline		162354	0					
ANR	162373	ArgumentList	r		162354	1					
ANR	162374	Argument	r		162354	0					
ANR	162375	Identifier	r		162354	0					
ANR	162376	ReturnStatement	"return get_char ( server , ff , c , NULL , metrics , FC_CUBIC_TYPE ) ;"	1946:4:64631:64691	162354	2	True				
ANR	162377	CallExpression	"get_char ( server , ff , c , NULL , metrics , FC_CUBIC_TYPE )"		162354	0					
ANR	162378	Callee	get_char		162354	0					
ANR	162379	Identifier	get_char		162354	0					
ANR	162380	ArgumentList	server		162354	1					
ANR	162381	Argument	server		162354	0					
ANR	162382	Identifier	server		162354	0					
ANR	162383	Argument	ff		162354	1					
ANR	162384	Identifier	ff		162354	0					
ANR	162385	Argument	c		162354	2					
ANR	162386	Identifier	c		162354	0					
ANR	162387	Argument	NULL		162354	3					
ANR	162388	Identifier	NULL		162354	0					
ANR	162389	Argument	metrics		162354	4					
ANR	162390	Identifier	metrics		162354	0					
ANR	162391	Argument	FC_CUBIC_TYPE		162354	5					
ANR	162392	Identifier	FC_CUBIC_TYPE		162354	0					
ANR	162393	ReturnType	static gs_fapi_retcode		162354	1					
ANR	162394	Identifier	gs_fapi_ufst_get_char_outline_metrics		162354	2					
ANR	162395	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics"		162354	3					
ANR	162396	Parameter	gs_fapi_server * server	1940:38:64418:64439	162354	0	True				
ANR	162397	ParameterType	gs_fapi_server *		162354	0					
ANR	162398	Identifier	server		162354	1					
ANR	162399	Parameter	gs_fapi_font * ff	1940:62:64442:64458	162354	1	True				
ANR	162400	ParameterType	gs_fapi_font *		162354	0					
ANR	162401	Identifier	ff		162354	1					
ANR	162402	Parameter	gs_fapi_char_ref * c	1941:25:64486:64505	162354	2	True				
ANR	162403	ParameterType	gs_fapi_char_ref *		162354	0					
ANR	162404	Identifier	c		162354	1					
ANR	162405	Parameter	gs_fapi_metrics * metrics	1941:47:64508:64532	162354	3	True				
ANR	162406	ParameterType	gs_fapi_metrics *		162354	0					
ANR	162407	Identifier	metrics		162354	1					
ANR	162408	CFGEntryNode	ENTRY		162354		True				
ANR	162409	CFGExitNode	EXIT		162354		True				
ANR	162410	Symbol	ff		162354						
ANR	162411	Symbol	server		162354						
ANR	162412	Symbol	If_to_I		162354						
ANR	162413	Symbol	r		162354						
ANR	162414	Symbol	c		162354						
ANR	162415	Symbol	NULL		162354						
ANR	162416	Symbol	get_char		162354						
ANR	162417	Symbol	metrics		162354						
ANR	162418	Symbol	FC_CUBIC_TYPE		162354						
ANR	162419	Function	gs_fapi_ufst_get_char_outline	1952:0:64862:65065							
ANR	162420	FunctionDef	"gs_fapi_ufst_get_char_outline (gs_fapi_server * server , gs_fapi_path * p)"		162419	0					
ANR	162421	CompoundStatement		1954:0:64958:65065	162419	0					
ANR	162422	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1955:4:64964:65001	162419	0	True				
ANR	162423	IdentifierDecl	* r = If_to_I ( server )		162419	0					
ANR	162424	IdentifierDeclType	fapi_ufst_server *		162419	0					
ANR	162425	Identifier	r		162419	1					
ANR	162426	AssignmentExpression	* r = If_to_I ( server )		162419	2		=			
ANR	162427	Identifier	r		162419	0					
ANR	162428	CallExpression	If_to_I ( server )		162419	1					
ANR	162429	Callee	If_to_I		162419	0					
ANR	162430	Identifier	If_to_I		162419	0					
ANR	162431	ArgumentList	server		162419	1					
ANR	162432	Argument	server		162419	0					
ANR	162433	Identifier	server		162419	0					
ANR	162434	ReturnStatement	"return export_outline ( r , ( IFOUTLINE * ) r -> char_data , p ) ;"	1957:4:65008:65063	162419	1	True				
ANR	162435	CallExpression	"export_outline ( r , ( IFOUTLINE * ) r -> char_data , p )"		162419	0					
ANR	162436	Callee	export_outline		162419	0					
ANR	162437	Identifier	export_outline		162419	0					
ANR	162438	ArgumentList	r		162419	1					
ANR	162439	Argument	r		162419	0					
ANR	162440	Identifier	r		162419	0					
ANR	162441	Argument	( IFOUTLINE * ) r -> char_data		162419	1					
ANR	162442	CastExpression	( IFOUTLINE * ) r -> char_data		162419	0					
ANR	162443	CastTarget	IFOUTLINE *		162419	0					
ANR	162444	PtrMemberAccess	r -> char_data		162419	1					
ANR	162445	Identifier	r		162419	0					
ANR	162446	Identifier	char_data		162419	1					
ANR	162447	Argument	p		162419	2					
ANR	162448	Identifier	p		162419	0					
ANR	162449	ReturnType	static gs_fapi_retcode		162419	1					
ANR	162450	Identifier	gs_fapi_ufst_get_char_outline		162419	2					
ANR	162451	ParameterList	"gs_fapi_server * server , gs_fapi_path * p"		162419	3					
ANR	162452	Parameter	gs_fapi_server * server	1953:30:64915:64937	162419	0	True				
ANR	162453	ParameterType	gs_fapi_server *		162419	0					
ANR	162454	Identifier	server		162419	1					
ANR	162455	Parameter	gs_fapi_path * p	1953:55:64940:64955	162419	1	True				
ANR	162456	ParameterType	gs_fapi_path *		162419	0					
ANR	162457	Identifier	p		162419	1					
ANR	162458	CFGEntryNode	ENTRY		162419		True				
ANR	162459	CFGExitNode	EXIT		162419		True				
ANR	162460	Symbol	p		162419						
ANR	162461	Symbol	server		162419						
ANR	162462	Symbol	If_to_I		162419						
ANR	162463	Symbol	r		162419						
ANR	162464	Symbol	export_outline		162419						
ANR	162465	Symbol	* r		162419						
ANR	162466	Symbol	r -> char_data		162419						
ANR	162467	Function	gs_fapi_ufst_get_char_raster_metrics	1960:0:65068:65716							
ANR	162468	FunctionDef	"gs_fapi_ufst_get_char_raster_metrics (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics)"		162467	0					
ANR	162469	CompoundStatement		1963:0:65245:65716	162467	0					
ANR	162470	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1964:4:65251:65288	162467	0	True				
ANR	162471	IdentifierDecl	* r = If_to_I ( server )		162467	0					
ANR	162472	IdentifierDeclType	fapi_ufst_server *		162467	0					
ANR	162473	Identifier	r		162467	1					
ANR	162474	AssignmentExpression	* r = If_to_I ( server )		162467	2		=			
ANR	162475	Identifier	r		162467	0					
ANR	162476	CallExpression	If_to_I ( server )		162467	1					
ANR	162477	Callee	If_to_I		162467	0					
ANR	162478	Identifier	If_to_I		162467	0					
ANR	162479	ArgumentList	server		162467	1					
ANR	162480	Argument	server		162467	0					
ANR	162481	Identifier	server		162467	0					
ANR	162482	IdentifierDeclStatement	int code ;	1965:4:65294:65302	162467	1	True				
ANR	162483	IdentifierDecl	code		162467	0					
ANR	162484	IdentifierDeclType	int		162467	0					
ANR	162485	Identifier	code		162467	1					
ANR	162486	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1967:4:65309:65349	162467	2	True				
ANR	162487	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		162467	0					
ANR	162488	Callee	gs_fapi_ufst_release_char_data_inline		162467	0					
ANR	162489	Identifier	gs_fapi_ufst_release_char_data_inline		162467	0					
ANR	162490	ArgumentList	r		162467	1					
ANR	162491	Argument	r		162467	0					
ANR	162492	Identifier	r		162467	0					
ANR	162493	ExpressionStatement	"code = get_char ( server , ff , c , NULL , metrics , FC_BITMAP_TYPE )"	1968:4:65355:65416	162467	3	True				
ANR	162494	AssignmentExpression	"code = get_char ( server , ff , c , NULL , metrics , FC_BITMAP_TYPE )"		162467	0		=			
ANR	162495	Identifier	code		162467	0					
ANR	162496	CallExpression	"get_char ( server , ff , c , NULL , metrics , FC_BITMAP_TYPE )"		162467	1					
ANR	162497	Callee	get_char		162467	0					
ANR	162498	Identifier	get_char		162467	0					
ANR	162499	ArgumentList	server		162467	1					
ANR	162500	Argument	server		162467	0					
ANR	162501	Identifier	server		162467	0					
ANR	162502	Argument	ff		162467	1					
ANR	162503	Identifier	ff		162467	0					
ANR	162504	Argument	c		162467	2					
ANR	162505	Identifier	c		162467	0					
ANR	162506	Argument	NULL		162467	3					
ANR	162507	Identifier	NULL		162467	0					
ANR	162508	Argument	metrics		162467	4					
ANR	162509	Identifier	metrics		162467	0					
ANR	162510	Argument	FC_BITMAP_TYPE		162467	5					
ANR	162511	Identifier	FC_BITMAP_TYPE		162467	0					
ANR	162512	IfStatement	if ( code == ERR_bm_buff || code == ERR_bm_too_big )		162467	4					
ANR	162513	Condition	code == ERR_bm_buff || code == ERR_bm_too_big	1969:8:65426:65470	162467	0	True				
ANR	162514	OrExpression	code == ERR_bm_buff || code == ERR_bm_too_big		162467	0		||			
ANR	162515	EqualityExpression	code == ERR_bm_buff		162467	0		==			
ANR	162516	Identifier	code		162467	0					
ANR	162517	Identifier	ERR_bm_buff		162467	1					
ANR	162518	EqualityExpression	code == ERR_bm_too_big		162467	1		==			
ANR	162519	Identifier	code		162467	0					
ANR	162520	Identifier	ERR_bm_too_big		162467	1					
ANR	162521	ReturnStatement	return ( gs_error_VMerror ) ;	1970:8:65508:65533	162467	1	True				
ANR	162522	Identifier	gs_error_VMerror		162467	0					
ANR	162523	ReturnStatement	return code ;	1971:4:65539:65550	162467	5	True				
ANR	162524	Identifier	code		162467	0					
ANR	162525	ReturnType	static gs_fapi_retcode		162467	1					
ANR	162526	Identifier	gs_fapi_ufst_get_char_raster_metrics		162467	2					
ANR	162527	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics"		162467	3					
ANR	162528	Parameter	gs_fapi_server * server	1961:37:65128:65150	162467	0	True				
ANR	162529	ParameterType	gs_fapi_server *		162467	0					
ANR	162530	Identifier	server		162467	1					
ANR	162531	Parameter	gs_fapi_font * ff	1961:62:65153:65169	162467	1	True				
ANR	162532	ParameterType	gs_fapi_font *		162467	0					
ANR	162533	Identifier	ff		162467	1					
ANR	162534	Parameter	gs_fapi_char_ref * c	1962:24:65196:65215	162467	2	True				
ANR	162535	ParameterType	gs_fapi_char_ref *		162467	0					
ANR	162536	Identifier	c		162467	1					
ANR	162537	Parameter	gs_fapi_metrics * metrics	1962:46:65218:65242	162467	3	True				
ANR	162538	ParameterType	gs_fapi_metrics *		162467	0					
ANR	162539	Identifier	metrics		162467	1					
ANR	162540	CFGEntryNode	ENTRY		162467		True				
ANR	162541	CFGExitNode	EXIT		162467		True				
ANR	162542	Symbol	ff		162467						
ANR	162543	Symbol	server		162467						
ANR	162544	Symbol	If_to_I		162467						
ANR	162545	Symbol	ERR_bm_too_big		162467						
ANR	162546	Symbol	c		162467						
ANR	162547	Symbol	code		162467						
ANR	162548	Symbol	NULL		162467						
ANR	162549	Symbol	FC_BITMAP_TYPE		162467						
ANR	162550	Symbol	gs_error_VMerror		162467						
ANR	162551	Symbol	r		162467						
ANR	162552	Symbol	get_char		162467						
ANR	162553	Symbol	metrics		162467						
ANR	162554	Symbol	ERR_bm_buff		162467						
ANR	162555	Function	gs_fapi_ufst_get_char_width	1977:0:65719:66412							
ANR	162556	FunctionDef	"gs_fapi_ufst_get_char_width (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics)"		162555	0					
ANR	162557	CompoundStatement		1980:0:65878:66412	162555	0					
ANR	162558	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1981:4:65884:65921	162555	0	True				
ANR	162559	IdentifierDecl	* r = If_to_I ( server )		162555	0					
ANR	162560	IdentifierDeclType	fapi_ufst_server *		162555	0					
ANR	162561	Identifier	r		162555	1					
ANR	162562	AssignmentExpression	* r = If_to_I ( server )		162555	2		=			
ANR	162563	Identifier	r		162555	0					
ANR	162564	CallExpression	If_to_I ( server )		162555	1					
ANR	162565	Callee	If_to_I		162555	0					
ANR	162566	Identifier	If_to_I		162555	0					
ANR	162567	ArgumentList	server		162555	1					
ANR	162568	Argument	server		162555	0					
ANR	162569	Identifier	server		162555	0					
ANR	162570	IdentifierDeclStatement	int code ;	1982:4:65927:65935	162555	1	True				
ANR	162571	IdentifierDecl	code		162555	0					
ANR	162572	IdentifierDeclType	int		162555	0					
ANR	162573	Identifier	code		162555	1					
ANR	162574	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1984:4:65942:65982	162555	2	True				
ANR	162575	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		162555	0					
ANR	162576	Callee	gs_fapi_ufst_release_char_data_inline		162555	0					
ANR	162577	Identifier	gs_fapi_ufst_release_char_data_inline		162555	0					
ANR	162578	ArgumentList	r		162555	1					
ANR	162579	Argument	r		162555	0					
ANR	162580	Identifier	r		162555	0					
ANR	162581	ExpressionStatement	"code = get_char ( server , ff , c , NULL , metrics , server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE )"	1985:4:65988:66112	162555	3	True				
ANR	162582	AssignmentExpression	"code = get_char ( server , ff , c , NULL , metrics , server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE )"		162555	0		=			
ANR	162583	Identifier	code		162555	0					
ANR	162584	CallExpression	"get_char ( server , ff , c , NULL , metrics , server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE )"		162555	1					
ANR	162585	Callee	get_char		162555	0					
ANR	162586	Identifier	get_char		162555	0					
ANR	162587	ArgumentList	server		162555	1					
ANR	162588	Argument	server		162555	0					
ANR	162589	Identifier	server		162555	0					
ANR	162590	Argument	ff		162555	1					
ANR	162591	Identifier	ff		162555	0					
ANR	162592	Argument	c		162555	2					
ANR	162593	Identifier	c		162555	0					
ANR	162594	Argument	NULL		162555	3					
ANR	162595	Identifier	NULL		162555	0					
ANR	162596	Argument	metrics		162555	4					
ANR	162597	Identifier	metrics		162555	0					
ANR	162598	Argument	server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE		162555	5					
ANR	162599	ConditionalExpression	server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE		162555	0					
ANR	162600	Condition	server -> use_outline		162555	0					
ANR	162601	PtrMemberAccess	server -> use_outline		162555	0					
ANR	162602	Identifier	server		162555	0					
ANR	162603	Identifier	use_outline		162555	1					
ANR	162604	Identifier	FC_CUBIC_TYPE		162555	1					
ANR	162605	Identifier	FC_BITMAP_TYPE		162555	2					
ANR	162606	IfStatement	if ( code == ERR_bm_buff || code == ERR_bm_too_big )		162555	4					
ANR	162607	Condition	code == ERR_bm_buff || code == ERR_bm_too_big	1988:8:66122:66166	162555	0	True				
ANR	162608	OrExpression	code == ERR_bm_buff || code == ERR_bm_too_big		162555	0		||			
ANR	162609	EqualityExpression	code == ERR_bm_buff		162555	0		==			
ANR	162610	Identifier	code		162555	0					
ANR	162611	Identifier	ERR_bm_buff		162555	1					
ANR	162612	EqualityExpression	code == ERR_bm_too_big		162555	1		==			
ANR	162613	Identifier	code		162555	0					
ANR	162614	Identifier	ERR_bm_too_big		162555	1					
ANR	162615	ReturnStatement	return ( gs_error_VMerror ) ;	1989:8:66204:66229	162555	1	True				
ANR	162616	Identifier	gs_error_VMerror		162555	0					
ANR	162617	ReturnStatement	return code ;	1990:4:66235:66246	162555	5	True				
ANR	162618	Identifier	code		162555	0					
ANR	162619	ReturnType	static gs_fapi_retcode		162555	1					
ANR	162620	Identifier	gs_fapi_ufst_get_char_width		162555	2					
ANR	162621	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics"		162555	3					
ANR	162622	Parameter	gs_fapi_server * server	1978:28:65770:65792	162555	0	True				
ANR	162623	ParameterType	gs_fapi_server *		162555	0					
ANR	162624	Identifier	server		162555	1					
ANR	162625	Parameter	gs_fapi_font * ff	1978:53:65795:65811	162555	1	True				
ANR	162626	ParameterType	gs_fapi_font *		162555	0					
ANR	162627	Identifier	ff		162555	1					
ANR	162628	Parameter	gs_fapi_char_ref * c	1979:15:65829:65848	162555	2	True				
ANR	162629	ParameterType	gs_fapi_char_ref *		162555	0					
ANR	162630	Identifier	c		162555	1					
ANR	162631	Parameter	gs_fapi_metrics * metrics	1979:37:65851:65875	162555	3	True				
ANR	162632	ParameterType	gs_fapi_metrics *		162555	0					
ANR	162633	Identifier	metrics		162555	1					
ANR	162634	CFGEntryNode	ENTRY		162555		True				
ANR	162635	CFGExitNode	EXIT		162555		True				
ANR	162636	Symbol	ff		162555						
ANR	162637	Symbol	server		162555						
ANR	162638	Symbol	If_to_I		162555						
ANR	162639	Symbol	ERR_bm_too_big		162555						
ANR	162640	Symbol	c		162555						
ANR	162641	Symbol	code		162555						
ANR	162642	Symbol	* server		162555						
ANR	162643	Symbol	NULL		162555						
ANR	162644	Symbol	FC_BITMAP_TYPE		162555						
ANR	162645	Symbol	gs_error_VMerror		162555						
ANR	162646	Symbol	r		162555						
ANR	162647	Symbol	get_char		162555						
ANR	162648	Symbol	metrics		162555						
ANR	162649	Symbol	server -> use_outline		162555						
ANR	162650	Symbol	FC_CUBIC_TYPE		162555						
ANR	162651	Symbol	ERR_bm_buff		162555						
ANR	162652	Function	gs_fapi_ufst_get_char_raster	1997:0:66416:67381							
ANR	162653	FunctionDef	"gs_fapi_ufst_get_char_raster (gs_fapi_server * server , gs_fapi_raster * rast)"		162652	0					
ANR	162654	CompoundStatement		1999:0:66516:67381	162652	0					
ANR	162655	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	2000:4:66522:66559	162652	0	True				
ANR	162656	IdentifierDecl	* r = If_to_I ( server )		162652	0					
ANR	162657	IdentifierDeclType	fapi_ufst_server *		162652	0					
ANR	162658	Identifier	r		162652	1					
ANR	162659	AssignmentExpression	* r = If_to_I ( server )		162652	2		=			
ANR	162660	Identifier	r		162652	0					
ANR	162661	CallExpression	If_to_I ( server )		162652	1					
ANR	162662	Callee	If_to_I		162652	0					
ANR	162663	Identifier	If_to_I		162652	0					
ANR	162664	ArgumentList	server		162652	1					
ANR	162665	Argument	server		162652	0					
ANR	162666	Identifier	server		162652	0					
ANR	162667	IfStatement	if ( ! r -> bRaster )		162652	1					
ANR	162668	Condition	! r -> bRaster	2002:8:66570:66580	162652	0	True				
ANR	162669	UnaryOperationExpression	! r -> bRaster		162652	0					
ANR	162670	UnaryOperator	!		162652	0					
ANR	162671	PtrMemberAccess	r -> bRaster		162652	1					
ANR	162672	Identifier	r		162652	0					
ANR	162673	Identifier	bRaster		162652	1					
ANR	162674	ExpressionStatement	return_error ( gs_error_unregistered )	2003:8:66591:66626	162652	1	True				
ANR	162675	CallExpression	return_error ( gs_error_unregistered )		162652	0					
ANR	162676	Callee	return_error		162652	0					
ANR	162677	Identifier	return_error		162652	0					
ANR	162678	ArgumentList	gs_error_unregistered		162652	1					
ANR	162679	Argument	gs_error_unregistered		162652	0					
ANR	162680	Identifier	gs_error_unregistered		162652	0					
ANR	162681	ElseStatement	else		162652	0					
ANR	162682	IfStatement	if ( r -> char_data == NULL )		162652	0					
ANR	162683	Condition	r -> char_data == NULL	2004:13:66641:66660	162652	0	True				
ANR	162684	EqualityExpression	r -> char_data == NULL		162652	0		==			
ANR	162685	PtrMemberAccess	r -> char_data		162652	0					
ANR	162686	Identifier	r		162652	0					
ANR	162687	Identifier	char_data		162652	1					
ANR	162688	Identifier	NULL		162652	1					
ANR	162689	CompoundStatement		6:35:146:146	162652	1					
ANR	162690	ExpressionStatement	rast -> height = rast -> width = rast -> line_step = 0	2005:8:66673:66721	162652	0	True				
ANR	162691	AssignmentExpression	rast -> height = rast -> width = rast -> line_step = 0		162652	0		=			
ANR	162692	PtrMemberAccess	rast -> height		162652	0					
ANR	162693	Identifier	rast		162652	0					
ANR	162694	Identifier	height		162652	1					
ANR	162695	AssignmentExpression	rast -> width = rast -> line_step = 0		162652	1		=			
ANR	162696	PtrMemberAccess	rast -> width		162652	0					
ANR	162697	Identifier	rast		162652	0					
ANR	162698	Identifier	width		162652	1					
ANR	162699	AssignmentExpression	rast -> line_step = 0		162652	1		=			
ANR	162700	PtrMemberAccess	rast -> line_step		162652	0					
ANR	162701	Identifier	rast		162652	0					
ANR	162702	Identifier	line_step		162652	1					
ANR	162703	PrimaryExpression	0		162652	1					
ANR	162704	ExpressionStatement	rast -> p = 0	2006:8:66731:66742	162652	1	True				
ANR	162705	AssignmentExpression	rast -> p = 0		162652	0		=			
ANR	162706	PtrMemberAccess	rast -> p		162652	0					
ANR	162707	Identifier	rast		162652	0					
ANR	162708	Identifier	p		162652	1					
ANR	162709	PrimaryExpression	0		162652	1					
ANR	162710	ElseStatement	else		162652	0					
ANR	162711	CompoundStatement		11:8:252:293	162652	0					
ANR	162712	IdentifierDeclStatement	IFBITMAP * pbm = ( IFBITMAP * ) r -> char_data ;	2009:8:66769:66810	162652	0	True				
ANR	162713	IdentifierDecl	* pbm = ( IFBITMAP * ) r -> char_data		162652	0					
ANR	162714	IdentifierDeclType	IFBITMAP *		162652	0					
ANR	162715	Identifier	pbm		162652	1					
ANR	162716	AssignmentExpression	* pbm = ( IFBITMAP * ) r -> char_data		162652	2		=			
ANR	162717	Identifier	pbm		162652	0					
ANR	162718	CastExpression	( IFBITMAP * ) r -> char_data		162652	1					
ANR	162719	CastTarget	IFBITMAP *		162652	0					
ANR	162720	PtrMemberAccess	r -> char_data		162652	1					
ANR	162721	Identifier	r		162652	0					
ANR	162722	Identifier	char_data		162652	1					
ANR	162723	ExpressionStatement	rast -> p = pbm -> bm	2011:8:66821:66838	162652	1	True				
ANR	162724	AssignmentExpression	rast -> p = pbm -> bm		162652	0		=			
ANR	162725	PtrMemberAccess	rast -> p		162652	0					
ANR	162726	Identifier	rast		162652	0					
ANR	162727	Identifier	p		162652	1					
ANR	162728	PtrMemberAccess	pbm -> bm		162652	1					
ANR	162729	Identifier	pbm		162652	0					
ANR	162730	Identifier	bm		162652	1					
ANR	162731	ExpressionStatement	rast -> height = pbm -> top_indent + pbm -> black_depth	2012:8:66848:66897	162652	2	True				
ANR	162732	AssignmentExpression	rast -> height = pbm -> top_indent + pbm -> black_depth		162652	0		=			
ANR	162733	PtrMemberAccess	rast -> height		162652	0					
ANR	162734	Identifier	rast		162652	0					
ANR	162735	Identifier	height		162652	1					
ANR	162736	AdditiveExpression	pbm -> top_indent + pbm -> black_depth		162652	1		+			
ANR	162737	PtrMemberAccess	pbm -> top_indent		162652	0					
ANR	162738	Identifier	pbm		162652	0					
ANR	162739	Identifier	top_indent		162652	1					
ANR	162740	PtrMemberAccess	pbm -> black_depth		162652	1					
ANR	162741	Identifier	pbm		162652	0					
ANR	162742	Identifier	black_depth		162652	1					
ANR	162743	ExpressionStatement	rast -> width = pbm -> left_indent + pbm -> black_width	2013:8:66907:66956	162652	3	True				
ANR	162744	AssignmentExpression	rast -> width = pbm -> left_indent + pbm -> black_width		162652	0		=			
ANR	162745	PtrMemberAccess	rast -> width		162652	0					
ANR	162746	Identifier	rast		162652	0					
ANR	162747	Identifier	width		162652	1					
ANR	162748	AdditiveExpression	pbm -> left_indent + pbm -> black_width		162652	1		+			
ANR	162749	PtrMemberAccess	pbm -> left_indent		162652	0					
ANR	162750	Identifier	pbm		162652	0					
ANR	162751	Identifier	left_indent		162652	1					
ANR	162752	PtrMemberAccess	pbm -> black_width		162652	1					
ANR	162753	Identifier	pbm		162652	0					
ANR	162754	Identifier	black_width		162652	1					
ANR	162755	ExpressionStatement	rast -> line_step = pbm -> width	2014:8:66966:66994	162652	4	True				
ANR	162756	AssignmentExpression	rast -> line_step = pbm -> width		162652	0		=			
ANR	162757	PtrMemberAccess	rast -> line_step		162652	0					
ANR	162758	Identifier	rast		162652	0					
ANR	162759	Identifier	line_step		162652	1					
ANR	162760	PtrMemberAccess	pbm -> width		162652	1					
ANR	162761	Identifier	pbm		162652	0					
ANR	162762	Identifier	width		162652	1					
ANR	162763	ExpressionStatement	rast -> left_indent = pbm -> left_indent	2015:8:67004:67040	162652	5	True				
ANR	162764	AssignmentExpression	rast -> left_indent = pbm -> left_indent		162652	0		=			
ANR	162765	PtrMemberAccess	rast -> left_indent		162652	0					
ANR	162766	Identifier	rast		162652	0					
ANR	162767	Identifier	left_indent		162652	1					
ANR	162768	PtrMemberAccess	pbm -> left_indent		162652	1					
ANR	162769	Identifier	pbm		162652	0					
ANR	162770	Identifier	left_indent		162652	1					
ANR	162771	ExpressionStatement	rast -> top_indent = pbm -> top_indent	2016:8:67050:67084	162652	6	True				
ANR	162772	AssignmentExpression	rast -> top_indent = pbm -> top_indent		162652	0		=			
ANR	162773	PtrMemberAccess	rast -> top_indent		162652	0					
ANR	162774	Identifier	rast		162652	0					
ANR	162775	Identifier	top_indent		162652	1					
ANR	162776	PtrMemberAccess	pbm -> top_indent		162652	1					
ANR	162777	Identifier	pbm		162652	0					
ANR	162778	Identifier	top_indent		162652	1					
ANR	162779	ExpressionStatement	rast -> black_width = pbm -> black_width	2017:8:67094:67130	162652	7	True				
ANR	162780	AssignmentExpression	rast -> black_width = pbm -> black_width		162652	0		=			
ANR	162781	PtrMemberAccess	rast -> black_width		162652	0					
ANR	162782	Identifier	rast		162652	0					
ANR	162783	Identifier	black_width		162652	1					
ANR	162784	PtrMemberAccess	pbm -> black_width		162652	1					
ANR	162785	Identifier	pbm		162652	0					
ANR	162786	Identifier	black_width		162652	1					
ANR	162787	ExpressionStatement	rast -> black_height = pbm -> black_depth	2018:8:67140:67177	162652	8	True				
ANR	162788	AssignmentExpression	rast -> black_height = pbm -> black_depth		162652	0		=			
ANR	162789	PtrMemberAccess	rast -> black_height		162652	0					
ANR	162790	Identifier	rast		162652	0					
ANR	162791	Identifier	black_height		162652	1					
ANR	162792	PtrMemberAccess	pbm -> black_depth		162652	1					
ANR	162793	Identifier	pbm		162652	0					
ANR	162794	Identifier	black_depth		162652	1					
ANR	162795	IfStatement	if ( rast -> width != 0 )		162652	9					
ANR	162796	Condition	rast -> width != 0	2019:12:67191:67206	162652	0	True				
ANR	162797	EqualityExpression	rast -> width != 0		162652	0		!=			
ANR	162798	PtrMemberAccess	rast -> width		162652	0					
ANR	162799	Identifier	rast		162652	0					
ANR	162800	Identifier	width		162652	1					
ANR	162801	PrimaryExpression	0		162652	1					
ANR	162802	CompoundStatement		21:30:692:692	162652	1					
ANR	162803	ExpressionStatement	rast -> orig_x = pbm -> xorigin	2020:12:67223:67250	162652	0	True				
ANR	162804	AssignmentExpression	rast -> orig_x = pbm -> xorigin		162652	0		=			
ANR	162805	PtrMemberAccess	rast -> orig_x		162652	0					
ANR	162806	Identifier	rast		162652	0					
ANR	162807	Identifier	orig_x		162652	1					
ANR	162808	PtrMemberAccess	pbm -> xorigin		162652	1					
ANR	162809	Identifier	pbm		162652	0					
ANR	162810	Identifier	xorigin		162652	1					
ANR	162811	ExpressionStatement	rast -> orig_y = pbm -> yorigin	2021:12:67264:67291	162652	1	True				
ANR	162812	AssignmentExpression	rast -> orig_y = pbm -> yorigin		162652	0		=			
ANR	162813	PtrMemberAccess	rast -> orig_y		162652	0					
ANR	162814	Identifier	rast		162652	0					
ANR	162815	Identifier	orig_y		162652	1					
ANR	162816	PtrMemberAccess	pbm -> yorigin		162652	1					
ANR	162817	Identifier	pbm		162652	0					
ANR	162818	Identifier	yorigin		162652	1					
ANR	162819	ElseStatement	else		162652	0					
ANR	162820	ExpressionStatement	rast -> orig_x = rast -> orig_y = 0	2024:12:67328:67359	162652	0	True				
ANR	162821	AssignmentExpression	rast -> orig_x = rast -> orig_y = 0		162652	0		=			
ANR	162822	PtrMemberAccess	rast -> orig_x		162652	0					
ANR	162823	Identifier	rast		162652	0					
ANR	162824	Identifier	orig_x		162652	1					
ANR	162825	AssignmentExpression	rast -> orig_y = 0		162652	1		=			
ANR	162826	PtrMemberAccess	rast -> orig_y		162652	0					
ANR	162827	Identifier	rast		162652	0					
ANR	162828	Identifier	orig_y		162652	1					
ANR	162829	PrimaryExpression	0		162652	1					
ANR	162830	ReturnStatement	return 0 ;	2026:4:67371:67379	162652	2	True				
ANR	162831	PrimaryExpression	0		162652	0					
ANR	162832	ReturnType	static gs_fapi_retcode		162652	1					
ANR	162833	Identifier	gs_fapi_ufst_get_char_raster		162652	2					
ANR	162834	ParameterList	"gs_fapi_server * server , gs_fapi_raster * rast"		162652	3					
ANR	162835	Parameter	gs_fapi_server * server	1998:29:66468:66490	162652	0	True				
ANR	162836	ParameterType	gs_fapi_server *		162652	0					
ANR	162837	Identifier	server		162652	1					
ANR	162838	Parameter	gs_fapi_raster * rast	1998:54:66493:66513	162652	1	True				
ANR	162839	ParameterType	gs_fapi_raster *		162652	0					
ANR	162840	Identifier	rast		162652	1					
ANR	162841	CFGEntryNode	ENTRY		162652		True				
ANR	162842	CFGExitNode	EXIT		162652		True				
ANR	162843	Symbol	rast -> line_step		162652						
ANR	162844	Symbol	server		162652						
ANR	162845	Symbol	gs_error_unregistered		162652						
ANR	162846	Symbol	pbm -> top_indent		162652						
ANR	162847	Symbol	rast -> orig_y		162652						
ANR	162848	Symbol	rast -> orig_x		162652						
ANR	162849	Symbol	rast -> left_indent		162652						
ANR	162850	Symbol	pbm -> yorigin		162652						
ANR	162851	Symbol	rast -> width		162652						
ANR	162852	Symbol	r -> bRaster		162652						
ANR	162853	Symbol	pbm -> left_indent		162652						
ANR	162854	Symbol	rast -> p		162652						
ANR	162855	Symbol	pbm -> width		162652						
ANR	162856	Symbol	rast -> top_indent		162652						
ANR	162857	Symbol	rast -> black_width		162652						
ANR	162858	Symbol	If_to_I		162652						
ANR	162859	Symbol	NULL		162652						
ANR	162860	Symbol	rast		162652						
ANR	162861	Symbol	* rast		162652						
ANR	162862	Symbol	* pbm		162652						
ANR	162863	Symbol	pbm -> bm		162652						
ANR	162864	Symbol	pbm -> xorigin		162652						
ANR	162865	Symbol	rast -> height		162652						
ANR	162866	Symbol	r		162652						
ANR	162867	Symbol	rast -> black_height		162652						
ANR	162868	Symbol	pbm -> black_width		162652						
ANR	162869	Symbol	pbm -> black_depth		162652						
ANR	162870	Symbol	pbm		162652						
ANR	162871	Symbol	* r		162652						
ANR	162872	Symbol	r -> char_data		162652						
ANR	162873	Function	gs_fapi_ufst_release_char_data	2029:0:67384:67569							
ANR	162874	FunctionDef	gs_fapi_ufst_release_char_data (gs_fapi_server * server)		162873	0					
ANR	162875	CompoundStatement		2031:0:67463:67569	162873	0					
ANR	162876	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	2032:4:67469:67506	162873	0	True				
ANR	162877	IdentifierDecl	* r = If_to_I ( server )		162873	0					
ANR	162878	IdentifierDeclType	fapi_ufst_server *		162873	0					
ANR	162879	Identifier	r		162873	1					
ANR	162880	AssignmentExpression	* r = If_to_I ( server )		162873	2		=			
ANR	162881	Identifier	r		162873	0					
ANR	162882	CallExpression	If_to_I ( server )		162873	1					
ANR	162883	Callee	If_to_I		162873	0					
ANR	162884	Identifier	If_to_I		162873	0					
ANR	162885	ArgumentList	server		162873	1					
ANR	162886	Argument	server		162873	0					
ANR	162887	Identifier	server		162873	0					
ANR	162888	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	2034:4:67513:67553	162873	1	True				
ANR	162889	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		162873	0					
ANR	162890	Callee	gs_fapi_ufst_release_char_data_inline		162873	0					
ANR	162891	Identifier	gs_fapi_ufst_release_char_data_inline		162873	0					
ANR	162892	ArgumentList	r		162873	1					
ANR	162893	Argument	r		162873	0					
ANR	162894	Identifier	r		162873	0					
ANR	162895	ReturnStatement	return 0 ;	2035:4:67559:67567	162873	2	True				
ANR	162896	PrimaryExpression	0		162873	0					
ANR	162897	ReturnType	static gs_fapi_retcode		162873	1					
ANR	162898	Identifier	gs_fapi_ufst_release_char_data		162873	2					
ANR	162899	ParameterList	gs_fapi_server * server		162873	3					
ANR	162900	Parameter	gs_fapi_server * server	2030:31:67438:67460	162873	0	True				
ANR	162901	ParameterType	gs_fapi_server *		162873	0					
ANR	162902	Identifier	server		162873	1					
ANR	162903	CFGEntryNode	ENTRY		162873		True				
ANR	162904	CFGExitNode	EXIT		162873		True				
ANR	162905	Symbol	server		162873						
ANR	162906	Symbol	If_to_I		162873						
ANR	162907	Symbol	r		162873						
ANR	162908	Function	release_fco	2038:0:67572:68155							
ANR	162909	FunctionDef	"release_fco (fapi_ufst_server * r , SW16 fcHandle)"		162908	0					
ANR	162910	CompoundStatement		2040:0:67633:68155	162908	0					
ANR	162911	IdentifierDeclStatement	fco_list_elem * * e ;	2041:4:67639:67656	162908	0	True				
ANR	162912	IdentifierDecl	* * e		162908	0					
ANR	162913	IdentifierDeclType	fco_list_elem * *		162908	0					
ANR	162914	Identifier	e		162908	1					
ANR	162915	IfStatement	if ( gx_UFST_find_static_fco_handle ( fcHandle ) != NULL )		162908	1					
ANR	162916	Condition	gx_UFST_find_static_fco_handle ( fcHandle ) != NULL	2043:8:67667:67714	162908	0	True				
ANR	162917	EqualityExpression	gx_UFST_find_static_fco_handle ( fcHandle ) != NULL		162908	0		!=			
ANR	162918	CallExpression	gx_UFST_find_static_fco_handle ( fcHandle )		162908	0					
ANR	162919	Callee	gx_UFST_find_static_fco_handle		162908	0					
ANR	162920	Identifier	gx_UFST_find_static_fco_handle		162908	0					
ANR	162921	ArgumentList	fcHandle		162908	1					
ANR	162922	Argument	fcHandle		162908	0					
ANR	162923	Identifier	fcHandle		162908	0					
ANR	162924	Identifier	NULL		162908	1					
ANR	162925	ReturnStatement	return ;	2044:8:67725:67731	162908	1	True				
ANR	162926	ForStatement	for ( e = & r -> fco_list ; * e != 0 ; )		162908	2					
ANR	162927	ForInit	e = & r -> fco_list ;	2045:9:67742:67758	162908	0	True				
ANR	162928	AssignmentExpression	e = & r -> fco_list		162908	0		=			
ANR	162929	Identifier	e		162908	0					
ANR	162930	UnaryOperationExpression	& r -> fco_list		162908	1					
ANR	162931	UnaryOperator	&		162908	0					
ANR	162932	PtrMemberAccess	r -> fco_list		162908	1					
ANR	162933	Identifier	r		162908	0					
ANR	162934	Identifier	fco_list		162908	1					
ANR	162935	Condition	* e != 0	2045:27:67760:67766	162908	1	True				
ANR	162936	EqualityExpression	* e != 0		162908	0		!=			
ANR	162937	UnaryOperationExpression	* e		162908	0					
ANR	162938	UnaryOperator	*		162908	0					
ANR	162939	Identifier	e		162908	1					
ANR	162940	PrimaryExpression	0		162908	1					
ANR	162941	IfStatement	if ( ( * e ) -> fcHandle == fcHandle && ( -- ( * e ) -> open_count ) == 0 )		162908	2					
ANR	162942	Condition	( * e ) -> fcHandle == fcHandle && ( -- ( * e ) -> open_count ) == 0	2046:12:67782:67836	162908	0	True				
ANR	162943	AndExpression	( * e ) -> fcHandle == fcHandle && ( -- ( * e ) -> open_count ) == 0		162908	0		&&			
ANR	162944	EqualityExpression	( * e ) -> fcHandle == fcHandle		162908	0		==			
ANR	162945	PtrMemberAccess	( * e ) -> fcHandle		162908	0					
ANR	162946	UnaryOperationExpression	* e		162908	0					
ANR	162947	UnaryOperator	*		162908	0					
ANR	162948	Identifier	e		162908	1					
ANR	162949	Identifier	fcHandle		162908	1					
ANR	162950	Identifier	fcHandle		162908	1					
ANR	162951	EqualityExpression	( -- ( * e ) -> open_count ) == 0		162908	1		==			
ANR	162952	UnaryExpression	-- ( * e ) -> open_count		162908	0					
ANR	162953	IncDec	--		162908	0					
ANR	162954	PtrMemberAccess	( * e ) -> open_count		162908	1					
ANR	162955	UnaryOperationExpression	* e		162908	0					
ANR	162956	UnaryOperator	*		162908	0					
ANR	162957	Identifier	e		162908	1					
ANR	162958	Identifier	open_count		162908	1					
ANR	162959	PrimaryExpression	0		162908	1					
ANR	162960	CompoundStatement		8:12:219:241	162908	1					
ANR	162961	IdentifierDeclStatement	fco_list_elem * ee = * e ;	2047:12:67853:67875	162908	0	True				
ANR	162962	IdentifierDecl	* ee = * e		162908	0					
ANR	162963	IdentifierDeclType	fco_list_elem *		162908	0					
ANR	162964	Identifier	ee		162908	1					
ANR	162965	AssignmentExpression	* ee = * e		162908	2		=			
ANR	162966	Identifier	ee		162908	0					
ANR	162967	UnaryOperationExpression	* e		162908	1					
ANR	162968	UnaryOperator	*		162908	0					
ANR	162969	Identifier	e		162908	1					
ANR	162970	ExpressionStatement	FSA_FROM_SERVER	2049:12:67890:67905	162908	1	True				
ANR	162971	Identifier	FSA_FROM_SERVER		162908	0					
ANR	162972	ExpressionStatement	* e = ee -> next	2051:12:67920:67933	162908	2	True				
ANR	162973	AssignmentExpression	* e = ee -> next		162908	0		=			
ANR	162974	UnaryOperationExpression	* e		162908	0					
ANR	162975	UnaryOperator	*		162908	0					
ANR	162976	Identifier	e		162908	1					
ANR	162977	PtrMemberAccess	ee -> next		162908	1					
ANR	162978	Identifier	ee		162908	0					
ANR	162979	Identifier	next		162908	1					
ANR	162980	Statement	CGIFfco_Close	2052:12:67947:67959	162908	3	True				
ANR	162981	Statement	(	2052:25:67960:67960	162908	4	True				
ANR	162982	Statement	FSA	2052:26:67961:67963	162908	5	True				
ANR	162983	Statement	ee	2052:30:67965:67966	162908	6	True				
ANR	162984	Statement	->	2052:32:67967:67968	162908	7	True				
ANR	162985	Statement	fcHandle	2052:34:67969:67976	162908	8	True				
ANR	162986	Statement	)	2052:42:67977:67977	162908	9	True				
ANR	162987	ExpressionStatement		2052:43:67978:67978	162908	10	True				
ANR	162988	ExpressionStatement	"gs_free ( r -> mem , ee -> file_path , 0 , 0 , ""fco_file_path"" )"	2053:12:67992:68045	162908	11	True				
ANR	162989	CallExpression	"gs_free ( r -> mem , ee -> file_path , 0 , 0 , ""fco_file_path"" )"		162908	0					
ANR	162990	Callee	gs_free		162908	0					
ANR	162991	Identifier	gs_free		162908	0					
ANR	162992	ArgumentList	r -> mem		162908	1					
ANR	162993	Argument	r -> mem		162908	0					
ANR	162994	PtrMemberAccess	r -> mem		162908	0					
ANR	162995	Identifier	r		162908	0					
ANR	162996	Identifier	mem		162908	1					
ANR	162997	Argument	ee -> file_path		162908	1					
ANR	162998	PtrMemberAccess	ee -> file_path		162908	0					
ANR	162999	Identifier	ee		162908	0					
ANR	163000	Identifier	file_path		162908	1					
ANR	163001	Argument	0		162908	2					
ANR	163002	PrimaryExpression	0		162908	0					
ANR	163003	Argument	0		162908	3					
ANR	163004	PrimaryExpression	0		162908	0					
ANR	163005	Argument	"""fco_file_path"""		162908	4					
ANR	163006	PrimaryExpression	"""fco_file_path"""		162908	0					
ANR	163007	ExpressionStatement	"gs_free ( r -> mem , ee , 0 , 0 , ""fco_list_elem"" )"	2054:12:68059:68101	162908	12	True				
ANR	163008	CallExpression	"gs_free ( r -> mem , ee , 0 , 0 , ""fco_list_elem"" )"		162908	0					
ANR	163009	Callee	gs_free		162908	0					
ANR	163010	Identifier	gs_free		162908	0					
ANR	163011	ArgumentList	r -> mem		162908	1					
ANR	163012	Argument	r -> mem		162908	0					
ANR	163013	PtrMemberAccess	r -> mem		162908	0					
ANR	163014	Identifier	r		162908	0					
ANR	163015	Identifier	mem		162908	1					
ANR	163016	Argument	ee		162908	1					
ANR	163017	Identifier	ee		162908	0					
ANR	163018	Argument	0		162908	2					
ANR	163019	PrimaryExpression	0		162908	0					
ANR	163020	Argument	0		162908	3					
ANR	163021	PrimaryExpression	0		162908	0					
ANR	163022	Argument	"""fco_list_elem"""		162908	4					
ANR	163023	PrimaryExpression	"""fco_list_elem"""		162908	0					
ANR	163024	ElseStatement	else		162908	0					
ANR	163025	ExpressionStatement	e = & ( * e ) -> next	2057:12:68138:68153	162908	0	True				
ANR	163026	AssignmentExpression	e = & ( * e ) -> next		162908	0		=			
ANR	163027	Identifier	e		162908	0					
ANR	163028	UnaryOperationExpression	& ( * e ) -> next		162908	1					
ANR	163029	UnaryOperator	&		162908	0					
ANR	163030	PtrMemberAccess	( * e ) -> next		162908	1					
ANR	163031	UnaryOperationExpression	* e		162908	0					
ANR	163032	UnaryOperator	*		162908	0					
ANR	163033	Identifier	e		162908	1					
ANR	163034	Identifier	next		162908	1					
ANR	163035	ReturnType	static void		162908	1					
ANR	163036	Identifier	release_fco		162908	2					
ANR	163037	ParameterList	"fapi_ufst_server * r , SW16 fcHandle"		162908	3					
ANR	163038	Parameter	fapi_ufst_server * r	2039:12:67596:67615	162908	0	True				
ANR	163039	ParameterType	fapi_ufst_server *		162908	0					
ANR	163040	Identifier	r		162908	1					
ANR	163041	Parameter	SW16 fcHandle	2039:34:67618:67630	162908	1	True				
ANR	163042	ParameterType	SW16		162908	0					
ANR	163043	Identifier	fcHandle		162908	1					
ANR	163044	CFGEntryNode	ENTRY		162908		True				
ANR	163045	CFGExitNode	EXIT		162908		True				
ANR	163046	Symbol	ee		162908						
ANR	163047	Symbol	NULL		162908						
ANR	163048	Symbol	e		162908						
ANR	163049	Symbol	* ee		162908						
ANR	163050	Symbol	r -> mem		162908						
ANR	163051	Symbol	* * e		162908						
ANR	163052	Symbol	& r -> fco_list		162908						
ANR	163053	Symbol	fcHandle		162908						
ANR	163054	Symbol	( * e ) -> open_count		162908						
ANR	163055	Symbol	gx_UFST_find_static_fco_handle		162908						
ANR	163056	Symbol	* e		162908						
ANR	163057	Symbol	& ( * e ) -> next		162908						
ANR	163058	Symbol	r		162908						
ANR	163059	Symbol	( * e ) -> fcHandle		162908						
ANR	163060	Symbol	ee -> next		162908						
ANR	163061	Symbol	* r		162908						
ANR	163062	Symbol	ee -> file_path		162908						
ANR	163063	Function	gs_fapi_ufst_release_typeface	2060:0:68158:68959							
ANR	163064	FunctionDef	"gs_fapi_ufst_release_typeface (gs_fapi_server * server , void * font_data)"		163063	0					
ANR	163065	CompoundStatement		2062:0:68253:68959	163063	0					
ANR	163066	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	2063:4:68259:68296	163063	0	True				
ANR	163067	IdentifierDecl	* r = If_to_I ( server )		163063	0					
ANR	163068	IdentifierDeclType	fapi_ufst_server *		163063	0					
ANR	163069	Identifier	r		163063	1					
ANR	163070	AssignmentExpression	* r = If_to_I ( server )		163063	2		=			
ANR	163071	Identifier	r		163063	0					
ANR	163072	CallExpression	If_to_I ( server )		163063	1					
ANR	163073	Callee	If_to_I		163063	0					
ANR	163074	Identifier	If_to_I		163063	0					
ANR	163075	ArgumentList	server		163063	1					
ANR	163076	Argument	server		163063	0					
ANR	163077	Identifier	server		163063	0					
ANR	163078	IdentifierDeclStatement	ufst_common_font_data * d ;	2064:4:68302:68326	163063	1	True				
ANR	163079	IdentifierDecl	* d		163063	0					
ANR	163080	IdentifierDeclType	ufst_common_font_data *		163063	0					
ANR	163081	Identifier	d		163063	1					
ANR	163082	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	2065:4:68332:68356	163063	2	True				
ANR	163083	IdentifierDecl	code = 0		163063	0					
ANR	163084	IdentifierDeclType	gs_fapi_retcode		163063	0					
ANR	163085	Identifier	code		163063	1					
ANR	163086	AssignmentExpression	code = 0		163063	2		=			
ANR	163087	Identifier	code		163063	0					
ANR	163088	PrimaryExpression	0		163063	1					
ANR	163089	ExpressionStatement	FSA_FROM_SERVER	2067:4:68363:68378	163063	3	True				
ANR	163090	Identifier	FSA_FROM_SERVER		163063	0					
ANR	163091	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	2069:4:68385:68425	163063	4	True				
ANR	163092	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		163063	0					
ANR	163093	Callee	gs_fapi_ufst_release_char_data_inline		163063	0					
ANR	163094	Identifier	gs_fapi_ufst_release_char_data_inline		163063	0					
ANR	163095	ArgumentList	r		163063	1					
ANR	163096	Argument	r		163063	0					
ANR	163097	Identifier	r		163063	0					
ANR	163098	IfStatement	if ( font_data == 0 )		163063	5					
ANR	163099	Condition	font_data == 0	2070:8:68435:68448	163063	0	True				
ANR	163100	EqualityExpression	font_data == 0		163063	0		==			
ANR	163101	Identifier	font_data		163063	0					
ANR	163102	PrimaryExpression	0		163063	1					
ANR	163103	ReturnStatement	return 0 ;	2071:8:68459:68467	163063	1	True				
ANR	163104	PrimaryExpression	0		163063	0					
ANR	163105	ExpressionStatement	d = ( ufst_common_font_data * ) font_data	2072:4:68473:68512	163063	6	True				
ANR	163106	AssignmentExpression	d = ( ufst_common_font_data * ) font_data		163063	0		=			
ANR	163107	Identifier	d		163063	0					
ANR	163108	CastExpression	( ufst_common_font_data * ) font_data		163063	1					
ANR	163109	CastTarget	ufst_common_font_data *		163063	0					
ANR	163110	Identifier	font_data		163063	1					
ANR	163111	IfStatement	if ( d -> ufstfontinfo )		163063	7					
ANR	163112	Condition	d -> ufstfontinfo	2073:8:68522:68536	163063	0	True				
ANR	163113	PtrMemberAccess	d -> ufstfontinfo		163063	0					
ANR	163114	Identifier	d		163063	0					
ANR	163115	Identifier	ufstfontinfo		163063	1					
ANR	163116	CompoundStatement		12:25:285:285	163063	1					
ANR	163117	ExpressionStatement	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font data"" )"	2074:8:68549:68605	163063	0	True				
ANR	163118	CallExpression	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font data"" )"		163063	0					
ANR	163119	Callee	gs_free		163063	0					
ANR	163120	Identifier	gs_free		163063	0					
ANR	163121	ArgumentList	r -> mem		163063	1					
ANR	163122	Argument	r -> mem		163063	0					
ANR	163123	PtrMemberAccess	r -> mem		163063	0					
ANR	163124	Identifier	r		163063	0					
ANR	163125	Identifier	mem		163063	1					
ANR	163126	Argument	d -> ufstfontinfo		163063	1					
ANR	163127	PtrMemberAccess	d -> ufstfontinfo		163063	0					
ANR	163128	Identifier	d		163063	0					
ANR	163129	Identifier	ufstfontinfo		163063	1					
ANR	163130	Argument	0		163063	2					
ANR	163131	PrimaryExpression	0		163063	0					
ANR	163132	Argument	0		163063	3					
ANR	163133	PrimaryExpression	0		163063	0					
ANR	163134	Argument	"""ufst font data"""		163063	4					
ANR	163135	PrimaryExpression	"""ufst font data"""		163063	0					
ANR	163136	ExpressionStatement	d -> ufstfontinfo = NULL	2075:8:68615:68637	163063	1	True				
ANR	163137	AssignmentExpression	d -> ufstfontinfo = NULL		163063	0		=			
ANR	163138	PtrMemberAccess	d -> ufstfontinfo		163063	0					
ANR	163139	Identifier	d		163063	0					
ANR	163140	Identifier	ufstfontinfo		163063	1					
ANR	163141	Identifier	NULL		163063	1					
ANR	163142	ExpressionStatement	"prepare_typeface ( r , d )"	2077:4:68649:68671	163063	8	True				
ANR	163143	CallExpression	"prepare_typeface ( r , d )"		163063	0					
ANR	163144	Callee	prepare_typeface		163063	0					
ANR	163145	Identifier	prepare_typeface		163063	0					
ANR	163146	ArgumentList	r		163063	1					
ANR	163147	Argument	r		163063	0					
ANR	163148	Identifier	r		163063	0					
ANR	163149	Argument	d		163063	1					
ANR	163150	Identifier	d		163063	0					
ANR	163151	IfStatement	if ( d -> is_disk_font )		163063	9					
ANR	163152	Condition	d -> is_disk_font	2079:8:68687:68701	163063	0	True				
ANR	163153	PtrMemberAccess	d -> is_disk_font		163063	0					
ANR	163154	Identifier	d		163063	0					
ANR	163155	Identifier	is_disk_font		163063	1					
ANR	163156	ExpressionStatement	code = CGIFhdr_font_purge ( FSA & r -> fc )	2080:8:68712:68750	163063	1	True				
ANR	163157	AssignmentExpression	code = CGIFhdr_font_purge ( FSA & r -> fc )		163063	0		=			
ANR	163158	Identifier	code		163063	0					
ANR	163159	CallExpression	CGIFhdr_font_purge ( FSA & r -> fc )		163063	1					
ANR	163160	Callee	CGIFhdr_font_purge		163063	0					
ANR	163161	Identifier	CGIFhdr_font_purge		163063	0					
ANR	163162	ArgumentList	FSA & r -> fc		163063	1					
ANR	163163	Argument	FSA & r -> fc		163063	0					
ANR	163164	BitAndExpression	FSA & r -> fc		163063	0		&			
ANR	163165	Identifier	FSA		163063	0					
ANR	163166	PtrMemberAccess	r -> fc		163063	1					
ANR	163167	Identifier	r		163063	0					
ANR	163168	Identifier	fc		163063	1					
ANR	163169	ElseStatement	else		163063	0					
ANR	163170	ExpressionStatement	code = CGIFfont_purge ( FSA & r -> fc )	2082:8:68769:68803	163063	0	True				
ANR	163171	AssignmentExpression	code = CGIFfont_purge ( FSA & r -> fc )		163063	0		=			
ANR	163172	Identifier	code		163063	0					
ANR	163173	CallExpression	CGIFfont_purge ( FSA & r -> fc )		163063	1					
ANR	163174	Callee	CGIFfont_purge		163063	0					
ANR	163175	Identifier	CGIFfont_purge		163063	0					
ANR	163176	ArgumentList	FSA & r -> fc		163063	1					
ANR	163177	Argument	FSA & r -> fc		163063	0					
ANR	163178	BitAndExpression	FSA & r -> fc		163063	0		&			
ANR	163179	Identifier	FSA		163063	0					
ANR	163180	PtrMemberAccess	r -> fc		163063	1					
ANR	163181	Identifier	r		163063	0					
ANR	163182	Identifier	fc		163063	1					
ANR	163183	ExpressionStatement	"release_glyphs ( r , d )"	2085:4:68817:68837	163063	10	True				
ANR	163184	CallExpression	"release_glyphs ( r , d )"		163063	0					
ANR	163185	Callee	release_glyphs		163063	0					
ANR	163186	Identifier	release_glyphs		163063	0					
ANR	163187	ArgumentList	r		163063	1					
ANR	163188	Argument	r		163063	0					
ANR	163189	Identifier	r		163063	0					
ANR	163190	Argument	d		163063	1					
ANR	163191	Identifier	d		163063	0					
ANR	163192	ExpressionStatement	"release_fco ( r , ( SW16 ) ( d -> font_id >> 16 ) )"	2086:4:68843:68884	163063	11	True				
ANR	163193	CallExpression	"release_fco ( r , ( SW16 ) ( d -> font_id >> 16 ) )"		163063	0					
ANR	163194	Callee	release_fco		163063	0					
ANR	163195	Identifier	release_fco		163063	0					
ANR	163196	ArgumentList	r		163063	1					
ANR	163197	Argument	r		163063	0					
ANR	163198	Identifier	r		163063	0					
ANR	163199	Argument	( SW16 ) ( d -> font_id >> 16 )		163063	1					
ANR	163200	CastExpression	( SW16 ) ( d -> font_id >> 16 )		163063	0					
ANR	163201	CastTarget	SW16		163063	0					
ANR	163202	ShiftExpression	d -> font_id >> 16		163063	1		>>			
ANR	163203	PtrMemberAccess	d -> font_id		163063	0					
ANR	163204	Identifier	d		163063	0					
ANR	163205	Identifier	font_id		163063	1					
ANR	163206	PrimaryExpression	16		163063	1					
ANR	163207	ExpressionStatement	"gs_free ( r -> mem , font_data , 0 , 0 , ""ufst font data"" )"	2087:4:68890:68940	163063	12	True				
ANR	163208	CallExpression	"gs_free ( r -> mem , font_data , 0 , 0 , ""ufst font data"" )"		163063	0					
ANR	163209	Callee	gs_free		163063	0					
ANR	163210	Identifier	gs_free		163063	0					
ANR	163211	ArgumentList	r -> mem		163063	1					
ANR	163212	Argument	r -> mem		163063	0					
ANR	163213	PtrMemberAccess	r -> mem		163063	0					
ANR	163214	Identifier	r		163063	0					
ANR	163215	Identifier	mem		163063	1					
ANR	163216	Argument	font_data		163063	1					
ANR	163217	Identifier	font_data		163063	0					
ANR	163218	Argument	0		163063	2					
ANR	163219	PrimaryExpression	0		163063	0					
ANR	163220	Argument	0		163063	3					
ANR	163221	PrimaryExpression	0		163063	0					
ANR	163222	Argument	"""ufst font data"""		163063	4					
ANR	163223	PrimaryExpression	"""ufst font data"""		163063	0					
ANR	163224	ReturnStatement	return code ;	2088:4:68946:68957	163063	13	True				
ANR	163225	Identifier	code		163063	0					
ANR	163226	ReturnType	static gs_fapi_retcode		163063	1					
ANR	163227	Identifier	gs_fapi_ufst_release_typeface		163063	2					
ANR	163228	ParameterList	"gs_fapi_server * server , void * font_data"		163063	3					
ANR	163229	Parameter	gs_fapi_server * server	2061:30:68211:68233	163063	0	True				
ANR	163230	ParameterType	gs_fapi_server *		163063	0					
ANR	163231	Identifier	server		163063	1					
ANR	163232	Parameter	void * font_data	2061:55:68236:68250	163063	1	True				
ANR	163233	ParameterType	void *		163063	0					
ANR	163234	Identifier	font_data		163063	1					
ANR	163235	CFGEntryNode	ENTRY		163063		True				
ANR	163236	CFGExitNode	EXIT		163063		True				
ANR	163237	Symbol	CGIFhdr_font_purge		163063						
ANR	163238	Symbol	server		163063						
ANR	163239	Symbol	If_to_I		163063						
ANR	163240	Symbol	code		163063						
ANR	163241	Symbol	NULL		163063						
ANR	163242	Symbol	d		163063						
ANR	163243	Symbol	r -> mem		163063						
ANR	163244	Symbol	d -> ufstfontinfo		163063						
ANR	163245	Symbol	r -> fc		163063						
ANR	163246	Symbol	CGIFfont_purge		163063						
ANR	163247	Symbol	* d		163063						
ANR	163248	Symbol	d -> is_disk_font		163063						
ANR	163249	Symbol	r		163063						
ANR	163250	Symbol	font_data		163063						
ANR	163251	Symbol	FSA		163063						
ANR	163252	Symbol	* r		163063						
ANR	163253	Symbol	d -> font_id		163063						
ANR	163254	Function	gs_fapi_ufst_check_cmap_for_GID	2091:0:68962:69072							
ANR	163255	FunctionDef	"gs_fapi_ufst_check_cmap_for_GID (gs_fapi_server * server , uint * index)"		163254	0					
ANR	163256	CompoundStatement		2093:0:69056:69072	163254	0					
ANR	163257	ReturnStatement	return 0 ;	2094:4:69062:69070	163254	0	True				
ANR	163258	PrimaryExpression	0		163254	0					
ANR	163259	ReturnType	static gs_fapi_retcode		163254	1					
ANR	163260	Identifier	gs_fapi_ufst_check_cmap_for_GID		163254	2					
ANR	163261	ParameterList	"gs_fapi_server * server , uint * index"		163254	3					
ANR	163262	Parameter	gs_fapi_server * server	2092:32:69017:69039	163254	0	True				
ANR	163263	ParameterType	gs_fapi_server *		163254	0					
ANR	163264	Identifier	server		163254	1					
ANR	163265	Parameter	uint * index	2092:57:69042:69053	163254	1	True				
ANR	163266	ParameterType	uint *		163254	0					
ANR	163267	Identifier	index		163254	1					
ANR	163268	CFGEntryNode	ENTRY		163254		True				
ANR	163269	CFGExitNode	EXIT		163254		True				
ANR	163270	Symbol	server		163254						
ANR	163271	Symbol	index		163254						
ANR	163272	Function	gs_fapi_ufst_set_mm_weight_vector	2097:0:69075:69313							
ANR	163273	FunctionDef	"gs_fapi_ufst_set_mm_weight_vector (gs_fapi_server * server , gs_fapi_font * ff , float * wvector , int length)"		163272	0					
ANR	163274	CompoundStatement		2099:0:69202:69313	163272	0					
ANR	163275	ExpressionStatement	( void ) server	2100:4:69208:69220	163272	0	True				
ANR	163276	CastExpression	( void ) server		163272	0					
ANR	163277	CastTarget	void		163272	0					
ANR	163278	Identifier	server		163272	1					
ANR	163279	ExpressionStatement	( void ) ff	2101:4:69226:69234	163272	1	True				
ANR	163280	CastExpression	( void ) ff		163272	0					
ANR	163281	CastTarget	void		163272	0					
ANR	163282	Identifier	ff		163272	1					
ANR	163283	ExpressionStatement	( void ) wvector	2102:4:69240:69253	163272	2	True				
ANR	163284	CastExpression	( void ) wvector		163272	0					
ANR	163285	CastTarget	void		163272	0					
ANR	163286	Identifier	wvector		163272	1					
ANR	163287	ExpressionStatement	( void ) length	2103:4:69259:69271	163272	3	True				
ANR	163288	CastExpression	( void ) length		163272	0					
ANR	163289	CastTarget	void		163272	0					
ANR	163290	Identifier	length		163272	1					
ANR	163291	ReturnStatement	return gs_error_invalidaccess ;	2105:4:69282:69311	163272	4	True				
ANR	163292	Identifier	gs_error_invalidaccess		163272	0					
ANR	163293	ReturnType	static gs_fapi_retcode		163272	1					
ANR	163294	Identifier	gs_fapi_ufst_set_mm_weight_vector		163272	2					
ANR	163295	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , float * wvector , int length"		163272	3					
ANR	163296	Parameter	gs_fapi_server * server	2098:34:69132:69153	163272	0	True				
ANR	163297	ParameterType	gs_fapi_server *		163272	0					
ANR	163298	Identifier	server		163272	1					
ANR	163299	Parameter	gs_fapi_font * ff	2098:58:69156:69171	163272	1	True				
ANR	163300	ParameterType	gs_fapi_font *		163272	0					
ANR	163301	Identifier	ff		163272	1					
ANR	163302	Parameter	float * wvector	2098:76:69174:69187	163272	2	True				
ANR	163303	ParameterType	float *		163272	0					
ANR	163304	Identifier	wvector		163272	1					
ANR	163305	Parameter	int length	2098:92:69190:69199	163272	3	True				
ANR	163306	ParameterType	int		163272	0					
ANR	163307	Identifier	length		163272	1					
ANR	163308	CFGEntryNode	ENTRY		163272		True				
ANR	163309	CFGExitNode	EXIT		163272		True				
ANR	163310	Symbol	ff		163272						
ANR	163311	Symbol	server		163272						
ANR	163312	Symbol	wvector		163272						
ANR	163313	Symbol	length		163272						
ANR	163314	Symbol	gs_error_invalidaccess		163272						
ANR	163315	DeclStmt									
ANR	163316	Decl							void	void ( gs_fapi_server * * server )	gs_fapi_ufst_destroy
ANR	163317	DeclStmt									
ANR	163318	Decl							const gs_fapi_server_descriptor	const gs_fapi_server_descriptor	ufst_descriptor
ANR	163319	DeclStmt									
ANR	163320	Decl							const gs_fapi_server	const gs_fapi_server	ufstserver
ANR	163321	DeclStmt									
ANR	163322	Decl							int	"int ( gs_memory_t * mem , gs_fapi_server * * server )"	gs_fapi_ufst_init
ANR	163323	Function	gs_fapi_ufst_init	2151:0:70596:71336							
ANR	163324	FunctionDef	"gs_fapi_ufst_init (gs_memory_t * mem , gs_fapi_server * * server)"		163323	0					
ANR	163325	CompoundStatement		2153:0:70663:71336	163323	0					
ANR	163326	IdentifierDeclStatement	fapi_ufst_server * serv ;	2154:4:70669:70691	163323	0	True				
ANR	163327	IdentifierDecl	* serv		163323	0					
ANR	163328	IdentifierDeclType	fapi_ufst_server *		163323	0					
ANR	163329	Identifier	serv		163323	1					
ANR	163330	IdentifierDeclStatement	int code = 0 ;	2155:4:70697:70709	163323	1	True				
ANR	163331	IdentifierDecl	code = 0		163323	0					
ANR	163332	IdentifierDeclType	int		163323	0					
ANR	163333	Identifier	code		163323	1					
ANR	163334	AssignmentExpression	code = 0		163323	2		=			
ANR	163335	Identifier	code		163323	0					
ANR	163336	PrimaryExpression	0		163323	1					
ANR	163337	IdentifierDeclStatement	gs_memory_t * cmem = mem -> non_gc_memory ;	2156:4:70715:70753	163323	2	True				
ANR	163338	IdentifierDecl	* cmem = mem -> non_gc_memory		163323	0					
ANR	163339	IdentifierDeclType	gs_memory_t *		163323	0					
ANR	163340	Identifier	cmem		163323	1					
ANR	163341	AssignmentExpression	* cmem = mem -> non_gc_memory		163323	2		=			
ANR	163342	Identifier	cmem		163323	0					
ANR	163343	PtrMemberAccess	mem -> non_gc_memory		163323	1					
ANR	163344	Identifier	mem		163323	0					
ANR	163345	Identifier	non_gc_memory		163323	1					
ANR	163346	ExpressionStatement	"code = gs_memory_chunk_wrap ( & ( cmem ) , mem )"	2158:4:70760:70801	163323	3	True				
ANR	163347	AssignmentExpression	"code = gs_memory_chunk_wrap ( & ( cmem ) , mem )"		163323	0		=			
ANR	163348	Identifier	code		163323	0					
ANR	163349	CallExpression	"gs_memory_chunk_wrap ( & ( cmem ) , mem )"		163323	1					
ANR	163350	Callee	gs_memory_chunk_wrap		163323	0					
ANR	163351	Identifier	gs_memory_chunk_wrap		163323	0					
ANR	163352	ArgumentList	& ( cmem )		163323	1					
ANR	163353	Argument	& ( cmem )		163323	0					
ANR	163354	UnaryOperationExpression	& ( cmem )		163323	0					
ANR	163355	UnaryOperator	&		163323	0					
ANR	163356	Identifier	cmem		163323	1					
ANR	163357	Argument	mem		163323	1					
ANR	163358	Identifier	mem		163323	0					
ANR	163359	IfStatement	if ( code != 0 )		163323	4					
ANR	163360	Condition	code != 0	2159:8:70811:70819	163323	0	True				
ANR	163361	EqualityExpression	code != 0		163323	0		!=			
ANR	163362	Identifier	code		163323	0					
ANR	163363	PrimaryExpression	0		163323	1					
ANR	163364	CompoundStatement		7:19:158:158	163323	1					
ANR	163365	ReturnStatement	return ( code ) ;	2160:8:70832:70845	163323	0	True				
ANR	163366	Identifier	code		163323	0					
ANR	163367	ExpressionStatement	"serv = ( fapi_ufst_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"	2163:4:70858:71133	163323	5	True				
ANR	163368	AssignmentExpression	"serv = ( fapi_ufst_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"		163323	0		=			
ANR	163369	Identifier	serv		163323	0					
ANR	163370	CastExpression	"( fapi_ufst_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"		163323	1					
ANR	163371	CastTarget	fapi_ufst_server *		163323	0					
ANR	163372	CallExpression	"gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"		163323	1					
ANR	163373	Callee	gs_alloc_bytes_immovable		163323	0					
ANR	163374	Identifier	gs_alloc_bytes_immovable		163323	0					
ANR	163375	ArgumentList	cmem		163323	1					
ANR	163376	Argument	cmem		163323	0					
ANR	163377	Identifier	cmem		163323	0					
ANR	163378	Argument	sizeof ( fapi_ufst_server )		163323	1					
ANR	163379	SizeofExpression	sizeof ( fapi_ufst_server )		163323	0					
ANR	163380	Sizeof	sizeof		163323	0					
ANR	163381	SizeofOperand	fapi_ufst_server		163323	1					
ANR	163382	Argument	"""fapi_ufst_server"""		163323	2					
ANR	163383	PrimaryExpression	"""fapi_ufst_server"""		163323	0					
ANR	163384	IfStatement	if ( serv == 0 )		163323	6					
ANR	163385	Condition	serv == 0	2168:8:71143:71151	163323	0	True				
ANR	163386	EqualityExpression	serv == 0		163323	0		==			
ANR	163387	Identifier	serv		163323	0					
ANR	163388	PrimaryExpression	0		163323	1					
ANR	163389	ExpressionStatement	return_error ( gs_error_Fatal )	2169:8:71162:71190	163323	1	True				
ANR	163390	CallExpression	return_error ( gs_error_Fatal )		163323	0					
ANR	163391	Callee	return_error		163323	0					
ANR	163392	Identifier	return_error		163323	0					
ANR	163393	ArgumentList	gs_error_Fatal		163323	1					
ANR	163394	Argument	gs_error_Fatal		163323	0					
ANR	163395	Identifier	gs_error_Fatal		163323	0					
ANR	163396	ExpressionStatement	"memset ( serv , 0 , sizeof ( * serv ) )"	2170:4:71196:71226	163323	7	True				
ANR	163397	CallExpression	"memset ( serv , 0 , sizeof ( * serv ) )"		163323	0					
ANR	163398	Callee	memset		163323	0					
ANR	163399	Identifier	memset		163323	0					
ANR	163400	ArgumentList	serv		163323	1					
ANR	163401	Argument	serv		163323	0					
ANR	163402	Identifier	serv		163323	0					
ANR	163403	Argument	0		163323	1					
ANR	163404	PrimaryExpression	0		163323	0					
ANR	163405	Argument	sizeof ( * serv )		163323	2					
ANR	163406	SizeofExpression	sizeof ( * serv )		163323	0					
ANR	163407	Sizeof	sizeof		163323	0					
ANR	163408	UnaryOperationExpression	* serv		163323	1					
ANR	163409	UnaryOperator	*		163323	0					
ANR	163410	Identifier	serv		163323	1					
ANR	163411	ExpressionStatement	serv -> mem = cmem	2172:4:71233:71249	163323	8	True				
ANR	163412	AssignmentExpression	serv -> mem = cmem		163323	0		=			
ANR	163413	PtrMemberAccess	serv -> mem		163323	0					
ANR	163414	Identifier	serv		163323	0					
ANR	163415	Identifier	mem		163323	1					
ANR	163416	Identifier	cmem		163323	1					
ANR	163417	ExpressionStatement	serv -> If = ufstserver	2174:4:71256:71277	163323	9	True				
ANR	163418	AssignmentExpression	serv -> If = ufstserver		163323	0		=			
ANR	163419	PtrMemberAccess	serv -> If		163323	0					
ANR	163420	Identifier	serv		163323	0					
ANR	163421	Identifier	If		163323	1					
ANR	163422	Identifier	ufstserver		163323	1					
ANR	163423	ExpressionStatement	( * server ) = ( gs_fapi_server * ) serv	2176:4:71284:71319	163323	10	True				
ANR	163424	AssignmentExpression	( * server ) = ( gs_fapi_server * ) serv		163323	0		=			
ANR	163425	UnaryOperationExpression	* server		163323	0					
ANR	163426	UnaryOperator	*		163323	0					
ANR	163427	Identifier	server		163323	1					
ANR	163428	CastExpression	( gs_fapi_server * ) serv		163323	1					
ANR	163429	CastTarget	gs_fapi_server *		163323	0					
ANR	163430	Identifier	serv		163323	1					
ANR	163431	ReturnStatement	return 0 ;	2178:4:71326:71334	163323	11	True				
ANR	163432	PrimaryExpression	0		163323	0					
ANR	163433	ReturnType	int		163323	1					
ANR	163434	Identifier	gs_fapi_ufst_init		163323	2					
ANR	163435	ParameterList	"gs_memory_t * mem , gs_fapi_server * * server"		163323	3					
ANR	163436	Parameter	gs_memory_t * mem	2152:18:70618:70634	163323	0	True				
ANR	163437	ParameterType	gs_memory_t *		163323	0					
ANR	163438	Identifier	mem		163323	1					
ANR	163439	Parameter	gs_fapi_server * * server	2152:37:70637:70660	163323	1	True				
ANR	163440	ParameterType	gs_fapi_server * *		163323	0					
ANR	163441	Identifier	server		163323	1					
ANR	163442	CFGEntryNode	ENTRY		163323		True				
ANR	163443	CFGExitNode	EXIT		163323		True				
ANR	163444	Symbol	gs_error_Fatal		163323						
ANR	163445	Symbol	server		163323						
ANR	163446	Symbol	serv		163323						
ANR	163447	Symbol	code		163323						
ANR	163448	Symbol	* server		163323						
ANR	163449	Symbol	gs_memory_chunk_wrap		163323						
ANR	163450	Symbol	ufstserver		163323						
ANR	163451	Symbol	& cmem		163323						
ANR	163452	Symbol	* serv		163323						
ANR	163453	Symbol	mem -> non_gc_memory		163323						
ANR	163454	Symbol	mem		163323						
ANR	163455	Symbol	gs_alloc_bytes_immovable		163323						
ANR	163456	Symbol	serv -> mem		163323						
ANR	163457	Symbol	serv -> If		163323						
ANR	163458	Symbol	cmem		163323						
ANR	163459	Symbol	* mem		163323						
ANR	163460	DeclStmt									
ANR	163461	Decl							unsigned long	unsigned long	maxmem
ANR	163462	Function	gs_fapi_ufst_destroy	2189:0:71469:72305							
ANR	163463	FunctionDef	gs_fapi_ufst_destroy (gs_fapi_server * * server)		163462	0					
ANR	163464	CompoundStatement		2191:0:71528:72305	163462	0					
ANR	163465	IdentifierDeclStatement	fapi_ufst_server * r = ( fapi_ufst_server * ) * server ;	2192:4:71534:71585	163462	0	True				
ANR	163466	IdentifierDecl	* r = ( fapi_ufst_server * ) * server		163462	0					
ANR	163467	IdentifierDeclType	fapi_ufst_server *		163462	0					
ANR	163468	Identifier	r		163462	1					
ANR	163469	AssignmentExpression	* r = ( fapi_ufst_server * ) * server		163462	2		=			
ANR	163470	Identifier	r		163462	0					
ANR	163471	CastExpression	( fapi_ufst_server * ) * server		163462	1					
ANR	163472	CastTarget	fapi_ufst_server *		163462	0					
ANR	163473	UnaryOperationExpression	* server		163462	1					
ANR	163474	UnaryOperator	*		163462	0					
ANR	163475	Identifier	server		163462	1					
ANR	163476	IdentifierDeclStatement	gs_memory_t * cmem = r -> mem ;	2193:4:71591:71617	163462	1	True				
ANR	163477	IdentifierDecl	* cmem = r -> mem		163462	0					
ANR	163478	IdentifierDeclType	gs_memory_t *		163462	0					
ANR	163479	Identifier	cmem		163462	1					
ANR	163480	AssignmentExpression	* cmem = r -> mem		163462	2		=			
ANR	163481	Identifier	cmem		163462	0					
ANR	163482	PtrMemberAccess	r -> mem		163462	1					
ANR	163483	Identifier	r		163462	0					
ANR	163484	Identifier	mem		163462	1					
ANR	163485	ExpressionStatement	FSA_FROM_SERVER	2195:4:71624:71639	163462	2	True				
ANR	163486	Identifier	FSA_FROM_SERVER		163462	0					
ANR	163487	ExpressionStatement	"dmprintf1 ( r -> mem , ""UFST used %Lf kb\\n"" , ( ( long double ) maxmem ) / 1024 )"	2198:4:71671:71740	163462	3	True				
ANR	163488	CallExpression	"dmprintf1 ( r -> mem , ""UFST used %Lf kb\\n"" , ( ( long double ) maxmem ) / 1024 )"		163462	0					
ANR	163489	Callee	dmprintf1		163462	0					
ANR	163490	Identifier	dmprintf1		163462	0					
ANR	163491	ArgumentList	r -> mem		163462	1					
ANR	163492	Argument	r -> mem		163462	0					
ANR	163493	PtrMemberAccess	r -> mem		163462	0					
ANR	163494	Identifier	r		163462	0					
ANR	163495	Identifier	mem		163462	1					
ANR	163496	Argument	"""UFST used %Lf kb\\n"""		163462	1					
ANR	163497	PrimaryExpression	"""UFST used %Lf kb\\n"""		163462	0					
ANR	163498	Argument	( ( long double ) maxmem ) / 1024		163462	2					
ANR	163499	MultiplicativeExpression	( ( long double ) maxmem ) / 1024		163462	0		/			
ANR	163500	CastExpression	( long double ) maxmem		163462	0					
ANR	163501	CastTarget	long double		163462	0					
ANR	163502	Identifier	maxmem		163462	1					
ANR	163503	PrimaryExpression	1024		163462	1					
ANR	163504	Statement	in	2202:35:71858:71859	163462	4	True				
ANR	163505	Statement	a	2202:38:71861:71861	163462	5	True				
ANR	163506	Statement	single	2202:40:71863:71868	163462	6	True				
ANR	163507	Statement	language	2202:47:71870:71877	163462	7	True				
ANR	163508	Statement	build	2202:56:71879:71883	163462	8	True				
ANR	163509	Statement	for	2202:62:71885:71887	163462	9	True				
ANR	163510	Statement	host	2202:66:71889:71892	163462	10	True				
ANR	163511	Statement	-	2202:70:71893:71893	163462	11	True				
ANR	163512	Statement	based	2202:71:71894:71898	163462	12	True				
ANR	163513	Statement	applications	2202:77:71900:71911	163462	13	True				
ANR	163514	Statement	.	2202:89:71912:71912	163462	14	True				
ANR	163515	Statement	*	2202:91:71914:71914	163462	15	True				
ANR	163516	Statement	/	2202:92:71915:71915	163462	16	True				
ANR	163517	ExpressionStatement	"gx_set_UFST_Callbacks ( NULL , NULL , NULL )"	2203:4:71921:71960	163462	17	True				
ANR	163518	CallExpression	"gx_set_UFST_Callbacks ( NULL , NULL , NULL )"		163462	0					
ANR	163519	Callee	gx_set_UFST_Callbacks		163462	0					
ANR	163520	Identifier	gx_set_UFST_Callbacks		163462	0					
ANR	163521	ArgumentList	NULL		163462	1					
ANR	163522	Argument	NULL		163462	0					
ANR	163523	Identifier	NULL		163462	0					
ANR	163524	Argument	NULL		163462	1					
ANR	163525	Identifier	NULL		163462	0					
ANR	163526	Argument	NULL		163462	2					
ANR	163527	Identifier	NULL		163462	0					
ANR	163528	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	2206:4:71974:72014	163462	18	True				
ANR	163529	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		163462	0					
ANR	163530	Callee	gs_fapi_ufst_release_char_data_inline		163462	0					
ANR	163531	Identifier	gs_fapi_ufst_release_char_data_inline		163462	0					
ANR	163532	ArgumentList	r		163462	1					
ANR	163533	Argument	r		163462	0					
ANR	163534	Identifier	r		163462	0					
ANR	163535	IfStatement	if ( r -> bInitialized && ! r -> ufst_is_singleton )		163462	19					
ANR	163536	Condition	r -> bInitialized && ! r -> ufst_is_singleton	2207:8:72024:72063	163462	0	True				
ANR	163537	AndExpression	r -> bInitialized && ! r -> ufst_is_singleton		163462	0		&&			
ANR	163538	PtrMemberAccess	r -> bInitialized		163462	0					
ANR	163539	Identifier	r		163462	0					
ANR	163540	Identifier	bInitialized		163462	1					
ANR	163541	UnaryOperationExpression	! r -> ufst_is_singleton		163462	1					
ANR	163542	UnaryOperator	!		163462	0					
ANR	163543	PtrMemberAccess	r -> ufst_is_singleton		163462	1					
ANR	163544	Identifier	r		163462	0					
ANR	163545	Identifier	ufst_is_singleton		163462	1					
ANR	163546	ExpressionStatement	gx_UFST_fini ( )	2208:8:72074:72088	163462	1	True				
ANR	163547	CallExpression	gx_UFST_fini ( )		163462	0					
ANR	163548	Callee	gx_UFST_fini		163462	0					
ANR	163549	Identifier	gx_UFST_fini		163462	0					
ANR	163550	ArgumentList			163462	1					
ANR	163551	IfStatement	if ( r -> param )		163462	20					
ANR	163552	Condition	r -> param	2210:8:72099:72106	163462	0	True				
ANR	163553	PtrMemberAccess	r -> param		163462	0					
ANR	163554	Identifier	r		163462	0					
ANR	163555	Identifier	param		163462	1					
ANR	163556	CompoundStatement		20:18:580:580	163462	1					
ANR	163557	ExpressionStatement	"gs_free ( r -> mem , r -> param , 0 , 0 , ""server_params"" )"	2211:8:72119:72167	163462	0	True				
ANR	163558	CallExpression	"gs_free ( r -> mem , r -> param , 0 , 0 , ""server_params"" )"		163462	0					
ANR	163559	Callee	gs_free		163462	0					
ANR	163560	Identifier	gs_free		163462	0					
ANR	163561	ArgumentList	r -> mem		163462	1					
ANR	163562	Argument	r -> mem		163462	0					
ANR	163563	PtrMemberAccess	r -> mem		163462	0					
ANR	163564	Identifier	r		163462	0					
ANR	163565	Identifier	mem		163462	1					
ANR	163566	Argument	r -> param		163462	1					
ANR	163567	PtrMemberAccess	r -> param		163462	0					
ANR	163568	Identifier	r		163462	0					
ANR	163569	Identifier	param		163462	1					
ANR	163570	Argument	0		163462	2					
ANR	163571	PrimaryExpression	0		163462	0					
ANR	163572	Argument	0		163462	3					
ANR	163573	PrimaryExpression	0		163462	0					
ANR	163574	Argument	"""server_params"""		163462	4					
ANR	163575	PrimaryExpression	"""server_params"""		163462	0					
ANR	163576	ExpressionStatement	"gs_free ( cmem , r , 0 , 0 , ""gs_fapi_ufst_destroy: fapi_ufst_server"" )"	2214:4:72180:72244	163462	21	True				
ANR	163577	CallExpression	"gs_free ( cmem , r , 0 , 0 , ""gs_fapi_ufst_destroy: fapi_ufst_server"" )"		163462	0					
ANR	163578	Callee	gs_free		163462	0					
ANR	163579	Identifier	gs_free		163462	0					
ANR	163580	ArgumentList	cmem		163462	1					
ANR	163581	Argument	cmem		163462	0					
ANR	163582	Identifier	cmem		163462	0					
ANR	163583	Argument	r		163462	1					
ANR	163584	Identifier	r		163462	0					
ANR	163585	Argument	0		163462	2					
ANR	163586	PrimaryExpression	0		163462	0					
ANR	163587	Argument	0		163462	3					
ANR	163588	PrimaryExpression	0		163462	0					
ANR	163589	Argument	"""gs_fapi_ufst_destroy: fapi_ufst_server"""		163462	4					
ANR	163590	PrimaryExpression	"""gs_fapi_ufst_destroy: fapi_ufst_server"""		163462	0					
ANR	163591	ExpressionStatement	gs_memory_chunk_release ( cmem )	2216:4:72251:72280	163462	22	True				
ANR	163592	CallExpression	gs_memory_chunk_release ( cmem )		163462	0					
ANR	163593	Callee	gs_memory_chunk_release		163462	0					
ANR	163594	Identifier	gs_memory_chunk_release		163462	0					
ANR	163595	ArgumentList	cmem		163462	1					
ANR	163596	Argument	cmem		163462	0					
ANR	163597	Identifier	cmem		163462	0					
ANR	163598	ExpressionStatement	( * server ) = NULL	2218:4:72287:72303	163462	23	True				
ANR	163599	AssignmentExpression	( * server ) = NULL		163462	0		=			
ANR	163600	UnaryOperationExpression	* server		163462	0					
ANR	163601	UnaryOperator	*		163462	0					
ANR	163602	Identifier	server		163462	1					
ANR	163603	Identifier	NULL		163462	1					
ANR	163604	ReturnType	static void		163462	1					
ANR	163605	Identifier	gs_fapi_ufst_destroy		163462	2					
ANR	163606	ParameterList	gs_fapi_server * * server		163462	3					
ANR	163607	Parameter	gs_fapi_server * * server	2190:21:71502:71525	163462	0	True				
ANR	163608	ParameterType	gs_fapi_server * *		163462	0					
ANR	163609	Identifier	server		163462	1					
ANR	163610	CFGEntryNode	ENTRY		163462		True				
ANR	163611	CFGExitNode	EXIT		163462		True				
ANR	163612	Symbol	r -> param		163462						
ANR	163613	Symbol	server		163462						
ANR	163614	Symbol	r -> bInitialized		163462						
ANR	163615	Symbol	r		163462						
ANR	163616	Symbol	* server		163462						
ANR	163617	Symbol	NULL		163462						
ANR	163618	Symbol	r -> mem		163462						
ANR	163619	Symbol	r -> ufst_is_singleton		163462						
ANR	163620	Symbol	cmem		163462						
ANR	163621	Symbol	* r		163462						
ANR	163622	Symbol	maxmem		163462						
