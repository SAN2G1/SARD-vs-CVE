command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11221983	File	data/converged/CVE-2018-16863_ghostpdl/zlib_examples_gzappend.c								
ANR	11221984	Function	bye	93:0:4373:4486							
ANR	11221985	FunctionDef	"bye (char * msg1 , char * msg2)"		11221984	0					
ANR	11221986	CompoundStatement		94:0:4412:4486	11221984	0					
ANR	11221987	ExpressionStatement	"fprintf ( stderr , ""gzappend error: %s%s\\n"" , msg1 , msg2 )"	95:4:4418:4471	11221984	0	True				
ANR	11221988	CallExpression	"fprintf ( stderr , ""gzappend error: %s%s\\n"" , msg1 , msg2 )"		11221984	0					
ANR	11221989	Callee	fprintf		11221984	0					
ANR	11221990	Identifier	fprintf		11221984	0					
ANR	11221991	ArgumentList	stderr		11221984	1					
ANR	11221992	Argument	stderr		11221984	0					
ANR	11221993	Identifier	stderr		11221984	0					
ANR	11221994	Argument	"""gzappend error: %s%s\\n"""		11221984	1					
ANR	11221995	PrimaryExpression	"""gzappend error: %s%s\\n"""		11221984	0					
ANR	11221996	Argument	msg1		11221984	2					
ANR	11221997	Identifier	msg1		11221984	0					
ANR	11221998	Argument	msg2		11221984	3					
ANR	11221999	Identifier	msg2		11221984	0					
ANR	11222000	ExpressionStatement	exit ( 1 )	96:4:4477:4484	11221984	1	True				
ANR	11222001	CallExpression	exit ( 1 )		11221984	0					
ANR	11222002	Callee	exit		11221984	0					
ANR	11222003	Identifier	exit		11221984	0					
ANR	11222004	ArgumentList	1		11221984	1					
ANR	11222005	Argument	1		11221984	0					
ANR	11222006	PrimaryExpression	1		11221984	0					
ANR	11222007	ReturnType	local void		11221984	1					
ANR	11222008	Identifier	bye		11221984	2					
ANR	11222009	ParameterList	"char * msg1 , char * msg2"		11221984	3					
ANR	11222010	Parameter	char * msg1	93:15:4388:4397	11221984	0	True				
ANR	11222011	ParameterType	char *		11221984	0					
ANR	11222012	Identifier	msg1		11221984	1					
ANR	11222013	Parameter	char * msg2	93:27:4400:4409	11221984	1	True				
ANR	11222014	ParameterType	char *		11221984	0					
ANR	11222015	Identifier	msg2		11221984	1					
ANR	11222016	CFGEntryNode	ENTRY		11221984		True				
ANR	11222017	CFGExitNode	EXIT		11221984		True				
ANR	11222018	Symbol	msg2		11221984						
ANR	11222019	Symbol	msg1		11221984						
ANR	11222020	Symbol	stderr		11221984						
ANR	11222021	Function	gcd	102:6:4686:5025							
ANR	11222022	FunctionDef	"gcd (unsigned a , unsigned b)"		11222021	0					
ANR	11222023	CompoundStatement		103:0:4723:5025	11222021	0					
ANR	11222024	IdentifierDeclStatement	unsigned c ;	104:4:4729:4739	11222021	0	True				
ANR	11222025	IdentifierDecl	c		11222021	0					
ANR	11222026	IdentifierDeclType	unsigned		11222021	0					
ANR	11222027	Identifier	c		11222021	1					
ANR	11222028	WhileStatement	while ( a && b )		11222021	1					
ANR	11222029	Condition	a && b	106:11:4753:4758	11222021	0	True				
ANR	11222030	AndExpression	a && b		11222021	0		&&			
ANR	11222031	Identifier	a		11222021	0					
ANR	11222032	Identifier	b		11222021	1					
ANR	11222033	IfStatement	if ( a > b )		11222021	1					
ANR	11222034	Condition	a > b	107:12:4773:4777	11222021	0	True				
ANR	11222035	RelationalExpression	a > b		11222021	0		>			
ANR	11222036	Identifier	a		11222021	0					
ANR	11222037	Identifier	b		11222021	1					
ANR	11222038	CompoundStatement		5:19:56:56	11222021	1					
ANR	11222039	ExpressionStatement	c = b	108:12:4794:4799	11222021	0	True				
ANR	11222040	AssignmentExpression	c = b		11222021	0		=			
ANR	11222041	Identifier	c		11222021	0					
ANR	11222042	Identifier	b		11222021	1					
ANR	11222043	WhileStatement	while ( a - c >= c )		11222021	1					
ANR	11222044	Condition	a - c >= c	109:19:4820:4829	11222021	0	True				
ANR	11222045	RelationalExpression	a - c >= c		11222021	0		>=			
ANR	11222046	AdditiveExpression	a - c		11222021	0		-			
ANR	11222047	Identifier	a		11222021	0					
ANR	11222048	Identifier	c		11222021	1					
ANR	11222049	Identifier	c		11222021	1					
ANR	11222050	ExpressionStatement	c <<= 1	110:16:4848:4855	11222021	1	True				
ANR	11222051	AssignmentExpression	c <<= 1		11222021	0		<<=			
ANR	11222052	Identifier	c		11222021	0					
ANR	11222053	PrimaryExpression	1		11222021	1					
ANR	11222054	ExpressionStatement	a -= c	111:12:4869:4875	11222021	2	True				
ANR	11222055	AssignmentExpression	a -= c		11222021	0		-=			
ANR	11222056	Identifier	a		11222021	0					
ANR	11222057	Identifier	c		11222021	1					
ANR	11222058	ElseStatement	else		11222021	0					
ANR	11222059	CompoundStatement		11:13:176:176	11222021	0					
ANR	11222060	ExpressionStatement	c = a	114:12:4914:4919	11222021	0	True				
ANR	11222061	AssignmentExpression	c = a		11222021	0		=			
ANR	11222062	Identifier	c		11222021	0					
ANR	11222063	Identifier	a		11222021	1					
ANR	11222064	WhileStatement	while ( b - c >= c )		11222021	1					
ANR	11222065	Condition	b - c >= c	115:19:4940:4949	11222021	0	True				
ANR	11222066	RelationalExpression	b - c >= c		11222021	0		>=			
ANR	11222067	AdditiveExpression	b - c		11222021	0		-			
ANR	11222068	Identifier	b		11222021	0					
ANR	11222069	Identifier	c		11222021	1					
ANR	11222070	Identifier	c		11222021	1					
ANR	11222071	ExpressionStatement	c <<= 1	116:16:4968:4975	11222021	1	True				
ANR	11222072	AssignmentExpression	c <<= 1		11222021	0		<<=			
ANR	11222073	Identifier	c		11222021	0					
ANR	11222074	PrimaryExpression	1		11222021	1					
ANR	11222075	ExpressionStatement	b -= c	117:12:4989:4995	11222021	2	True				
ANR	11222076	AssignmentExpression	b -= c		11222021	0		-=			
ANR	11222077	Identifier	b		11222021	0					
ANR	11222078	Identifier	c		11222021	1					
ANR	11222079	ReturnStatement	return a + b ;	119:4:5011:5023	11222021	2	True				
ANR	11222080	AdditiveExpression	a + b		11222021	0		+			
ANR	11222081	Identifier	a		11222021	0					
ANR	11222082	Identifier	b		11222021	1					
ANR	11222083	ReturnType	unsigned		11222021	1					
ANR	11222084	Identifier	gcd		11222021	2					
ANR	11222085	ParameterList	"unsigned a , unsigned b"		11222021	3					
ANR	11222086	Parameter	unsigned a	102:19:4699:4708	11222021	0	True				
ANR	11222087	ParameterType	unsigned		11222021	0					
ANR	11222088	Identifier	a		11222021	1					
ANR	11222089	Parameter	unsigned b	102:31:4711:4720	11222021	1	True				
ANR	11222090	ParameterType	unsigned		11222021	0					
ANR	11222091	Identifier	b		11222021	1					
ANR	11222092	CFGEntryNode	ENTRY		11222021		True				
ANR	11222093	CFGExitNode	EXIT		11222021		True				
ANR	11222094	Symbol	a		11222021						
ANR	11222095	Symbol	b		11222021						
ANR	11222096	Symbol	c		11222021						
ANR	11222097	Function	rotate	123:0:5088:6517							
ANR	11222098	FunctionDef	"rotate (unsigned char * list , unsigned len , unsigned rot)"		11222097	0					
ANR	11222099	CompoundStatement		124:0:5155:6517	11222097	0					
ANR	11222100	IdentifierDeclStatement	unsigned char tmp ;	125:4:5161:5178	11222097	0	True				
ANR	11222101	IdentifierDecl	tmp		11222097	0					
ANR	11222102	IdentifierDeclType	unsigned char		11222097	0					
ANR	11222103	Identifier	tmp		11222097	1					
ANR	11222104	IdentifierDeclStatement	unsigned cycles ;	126:4:5184:5199	11222097	1	True				
ANR	11222105	IdentifierDecl	cycles		11222097	0					
ANR	11222106	IdentifierDeclType	unsigned		11222097	0					
ANR	11222107	Identifier	cycles		11222097	1					
ANR	11222108	IdentifierDeclStatement	"unsigned char * start , * last , * to , * from ;"	127:4:5205:5244	11222097	2	True				
ANR	11222109	IdentifierDecl	* start		11222097	0					
ANR	11222110	IdentifierDeclType	unsigned char *		11222097	0					
ANR	11222111	Identifier	start		11222097	1					
ANR	11222112	IdentifierDecl	* last		11222097	1					
ANR	11222113	IdentifierDeclType	unsigned char *		11222097	0					
ANR	11222114	Identifier	last		11222097	1					
ANR	11222115	IdentifierDecl	* to		11222097	2					
ANR	11222116	IdentifierDeclType	unsigned char *		11222097	0					
ANR	11222117	Identifier	to		11222097	1					
ANR	11222118	IdentifierDecl	* from		11222097	3					
ANR	11222119	IdentifierDeclType	unsigned char *		11222097	0					
ANR	11222120	Identifier	from		11222097	1					
ANR	11222121	IfStatement	if ( len < 2 )		11222097	3					
ANR	11222122	Condition	len < 2	130:8:5307:5313	11222097	0	True				
ANR	11222123	RelationalExpression	len < 2		11222097	0		<			
ANR	11222124	Identifier	len		11222097	0					
ANR	11222125	PrimaryExpression	2		11222097	1					
ANR	11222126	ReturnStatement	return ;	130:17:5316:5322	11222097	1	True				
ANR	11222127	IfStatement	if ( rot >= len )		11222097	4					
ANR	11222128	Condition	rot >= len	131:8:5332:5341	11222097	0	True				
ANR	11222129	RelationalExpression	rot >= len		11222097	0		>=			
ANR	11222130	Identifier	rot		11222097	0					
ANR	11222131	Identifier	len		11222097	1					
ANR	11222132	ExpressionStatement	rot %= len	131:20:5344:5354	11222097	1	True				
ANR	11222133	AssignmentExpression	rot %= len		11222097	0		%=			
ANR	11222134	Identifier	rot		11222097	0					
ANR	11222135	Identifier	len		11222097	1					
ANR	11222136	IfStatement	if ( rot == 0 )		11222097	5					
ANR	11222137	Condition	rot == 0	132:8:5364:5371	11222097	0	True				
ANR	11222138	EqualityExpression	rot == 0		11222097	0		==			
ANR	11222139	Identifier	rot		11222097	0					
ANR	11222140	PrimaryExpression	0		11222097	1					
ANR	11222141	ReturnStatement	return ;	132:18:5374:5380	11222097	1	True				
ANR	11222142	ExpressionStatement	last = list + ( len - 1 )	135:4:5427:5450	11222097	6	True				
ANR	11222143	AssignmentExpression	last = list + ( len - 1 )		11222097	0		=			
ANR	11222144	Identifier	last		11222097	0					
ANR	11222145	AdditiveExpression	list + ( len - 1 )		11222097	1		+			
ANR	11222146	Identifier	list		11222097	0					
ANR	11222147	AdditiveExpression	len - 1		11222097	1		-			
ANR	11222148	Identifier	len		11222097	0					
ANR	11222149	PrimaryExpression	1		11222097	1					
ANR	11222150	IfStatement	if ( rot == 1 )		11222097	7					
ANR	11222151	Condition	rot == 1	138:8:5499:5506	11222097	0	True				
ANR	11222152	EqualityExpression	rot == 1		11222097	0		==			
ANR	11222153	Identifier	rot		11222097	0					
ANR	11222154	PrimaryExpression	1		11222097	1					
ANR	11222155	CompoundStatement		15:18:353:353	11222097	1					
ANR	11222156	ExpressionStatement	tmp = * list	139:8:5519:5530	11222097	0	True				
ANR	11222157	AssignmentExpression	tmp = * list		11222097	0		=			
ANR	11222158	Identifier	tmp		11222097	0					
ANR	11222159	UnaryOperationExpression	* list		11222097	1					
ANR	11222160	UnaryOperator	*		11222097	0					
ANR	11222161	Identifier	list		11222097	1					
ANR	11222162	ExpressionStatement	"memcpy ( list , list + 1 , len - 1 )"	140:8:5540:5571	11222097	1	True				
ANR	11222163	CallExpression	"memcpy ( list , list + 1 , len - 1 )"		11222097	0					
ANR	11222164	Callee	memcpy		11222097	0					
ANR	11222165	Identifier	memcpy		11222097	0					
ANR	11222166	ArgumentList	list		11222097	1					
ANR	11222167	Argument	list		11222097	0					
ANR	11222168	Identifier	list		11222097	0					
ANR	11222169	Argument	list + 1		11222097	1					
ANR	11222170	AdditiveExpression	list + 1		11222097	0		+			
ANR	11222171	Identifier	list		11222097	0					
ANR	11222172	PrimaryExpression	1		11222097	1					
ANR	11222173	Argument	len - 1		11222097	2					
ANR	11222174	AdditiveExpression	len - 1		11222097	0		-			
ANR	11222175	Identifier	len		11222097	0					
ANR	11222176	PrimaryExpression	1		11222097	1					
ANR	11222177	ExpressionStatement	* last = tmp	141:8:5581:5592	11222097	2	True				
ANR	11222178	AssignmentExpression	* last = tmp		11222097	0		=			
ANR	11222179	UnaryOperationExpression	* last		11222097	0					
ANR	11222180	UnaryOperator	*		11222097	0					
ANR	11222181	Identifier	last		11222097	1					
ANR	11222182	Identifier	tmp		11222097	1					
ANR	11222183	ReturnStatement	return ;	142:8:5602:5608	11222097	3	True				
ANR	11222184	IfStatement	if ( rot == len - 1 )		11222097	8					
ANR	11222185	Condition	rot == len - 1	146:8:5664:5677	11222097	0	True				
ANR	11222186	EqualityExpression	rot == len - 1		11222097	0		==			
ANR	11222187	Identifier	rot		11222097	0					
ANR	11222188	AdditiveExpression	len - 1		11222097	1		-			
ANR	11222189	Identifier	len		11222097	0					
ANR	11222190	PrimaryExpression	1		11222097	1					
ANR	11222191	CompoundStatement		23:24:524:524	11222097	1					
ANR	11222192	ExpressionStatement	tmp = * last	147:8:5690:5701	11222097	0	True				
ANR	11222193	AssignmentExpression	tmp = * last		11222097	0		=			
ANR	11222194	Identifier	tmp		11222097	0					
ANR	11222195	UnaryOperationExpression	* last		11222097	1					
ANR	11222196	UnaryOperator	*		11222097	0					
ANR	11222197	Identifier	last		11222097	1					
ANR	11222198	ExpressionStatement	"memmove ( list + 1 , list , len - 1 )"	148:8:5711:5743	11222097	1	True				
ANR	11222199	CallExpression	"memmove ( list + 1 , list , len - 1 )"		11222097	0					
ANR	11222200	Callee	memmove		11222097	0					
ANR	11222201	Identifier	memmove		11222097	0					
ANR	11222202	ArgumentList	list + 1		11222097	1					
ANR	11222203	Argument	list + 1		11222097	0					
ANR	11222204	AdditiveExpression	list + 1		11222097	0		+			
ANR	11222205	Identifier	list		11222097	0					
ANR	11222206	PrimaryExpression	1		11222097	1					
ANR	11222207	Argument	list		11222097	1					
ANR	11222208	Identifier	list		11222097	0					
ANR	11222209	Argument	len - 1		11222097	2					
ANR	11222210	AdditiveExpression	len - 1		11222097	0		-			
ANR	11222211	Identifier	len		11222097	0					
ANR	11222212	PrimaryExpression	1		11222097	1					
ANR	11222213	ExpressionStatement	* list = tmp	149:8:5753:5764	11222097	2	True				
ANR	11222214	AssignmentExpression	* list = tmp		11222097	0		=			
ANR	11222215	UnaryOperationExpression	* list		11222097	0					
ANR	11222216	UnaryOperator	*		11222097	0					
ANR	11222217	Identifier	list		11222097	1					
ANR	11222218	Identifier	tmp		11222097	1					
ANR	11222219	ReturnStatement	return ;	150:8:5774:5780	11222097	3	True				
ANR	11222220	ExpressionStatement	"cycles = gcd ( len , rot )"	154:4:5851:5873	11222097	9	True				
ANR	11222221	AssignmentExpression	"cycles = gcd ( len , rot )"		11222097	0		=			
ANR	11222222	Identifier	cycles		11222097	0					
ANR	11222223	CallExpression	"gcd ( len , rot )"		11222097	1					
ANR	11222224	Callee	gcd		11222097	0					
ANR	11222225	Identifier	gcd		11222097	0					
ANR	11222226	ArgumentList	len		11222097	1					
ANR	11222227	Argument	len		11222097	0					
ANR	11222228	Identifier	len		11222097	0					
ANR	11222229	Argument	rot		11222097	1					
ANR	11222230	Identifier	rot		11222097	0					
ANR	11222231	DoStatement	do		11222097	10					
ANR	11222232	CompoundStatement		32:7:761:761	11222097	0					
ANR	11222233	ExpressionStatement	start = from = list + cycles	156:8:5927:5955	11222097	0	True				
ANR	11222234	AssignmentExpression	start = from = list + cycles		11222097	0		=			
ANR	11222235	Identifier	start		11222097	0					
ANR	11222236	AssignmentExpression	from = list + cycles		11222097	1		=			
ANR	11222237	Identifier	from		11222097	0					
ANR	11222238	AdditiveExpression	list + cycles		11222097	1		+			
ANR	11222239	Identifier	list		11222097	0					
ANR	11222240	Identifier	cycles		11222097	1					
ANR	11222241	ExpressionStatement	tmp = * from	157:8:5998:6009	11222097	1	True				
ANR	11222242	AssignmentExpression	tmp = * from		11222097	0		=			
ANR	11222243	Identifier	tmp		11222097	0					
ANR	11222244	UnaryOperationExpression	* from		11222097	1					
ANR	11222245	UnaryOperator	*		11222097	0					
ANR	11222246	Identifier	from		11222097	1					
ANR	11222247	ForStatement	for ( ; ; )		11222097	2					
ANR	11222248	CompoundStatement		35:17:926:926	11222097	0					
ANR	11222249	ExpressionStatement	to = from	159:12:6096:6105	11222097	0	True				
ANR	11222250	AssignmentExpression	to = from		11222097	0		=			
ANR	11222251	Identifier	to		11222097	0					
ANR	11222252	Identifier	from		11222097	1					
ANR	11222253	ExpressionStatement	from += rot	160:12:6161:6172	11222097	1	True				
ANR	11222254	AssignmentExpression	from += rot		11222097	0		+=			
ANR	11222255	Identifier	from		11222097	0					
ANR	11222256	Identifier	rot		11222097	1					
ANR	11222257	IfStatement	if ( from > last )		11222097	2					
ANR	11222258	Condition	from > last	161:16:6234:6244	11222097	0	True				
ANR	11222259	RelationalExpression	from > last		11222097	0		>			
ANR	11222260	Identifier	from		11222097	0					
ANR	11222261	Identifier	last		11222097	1					
ANR	11222262	ExpressionStatement	from -= len	161:29:6247:6258	11222097	1	True				
ANR	11222263	AssignmentExpression	from -= len		11222097	0		-=			
ANR	11222264	Identifier	from		11222097	0					
ANR	11222265	Identifier	len		11222097	1					
ANR	11222266	IfStatement	if ( from == start )		11222097	3					
ANR	11222267	Condition	from == start	162:16:6310:6322	11222097	0	True				
ANR	11222268	EqualityExpression	from == start		11222097	0		==			
ANR	11222269	Identifier	from		11222097	0					
ANR	11222270	Identifier	start		11222097	1					
ANR	11222271	BreakStatement	break ;	162:31:6325:6330	11222097	1	True				
ANR	11222272	ExpressionStatement	* to = * from	163:12:6372:6383	11222097	4	True				
ANR	11222273	AssignmentExpression	* to = * from		11222097	0		=			
ANR	11222274	UnaryOperationExpression	* to		11222097	0					
ANR	11222275	UnaryOperator	*		11222097	0					
ANR	11222276	Identifier	to		11222097	1					
ANR	11222277	UnaryOperationExpression	* from		11222097	1					
ANR	11222278	UnaryOperator	*		11222097	0					
ANR	11222279	Identifier	from		11222097	1					
ANR	11222280	ExpressionStatement	* to = tmp	165:8:6435:6444	11222097	3	True				
ANR	11222281	AssignmentExpression	* to = tmp		11222097	0		=			
ANR	11222282	UnaryOperationExpression	* to		11222097	0					
ANR	11222283	UnaryOperator	*		11222097	0					
ANR	11222284	Identifier	to		11222097	1					
ANR	11222285	Identifier	tmp		11222097	1					
ANR	11222286	Condition	-- cycles	166:13:6506:6513	11222097	1	True				
ANR	11222287	UnaryExpression	-- cycles		11222097	0					
ANR	11222288	IncDec	--		11222097	0					
ANR	11222289	Identifier	cycles		11222097	1					
ANR	11222290	ReturnType	local void		11222097	1					
ANR	11222291	Identifier	rotate		11222097	2					
ANR	11222292	ParameterList	"unsigned char * list , unsigned len , unsigned rot"		11222097	3					
ANR	11222293	Parameter	unsigned char * list	123:18:5106:5124	11222097	0	True				
ANR	11222294	ParameterType	unsigned char *		11222097	0					
ANR	11222295	Identifier	list		11222097	1					
ANR	11222296	Parameter	unsigned len	123:39:5127:5138	11222097	1	True				
ANR	11222297	ParameterType	unsigned		11222097	0					
ANR	11222298	Identifier	len		11222097	1					
ANR	11222299	Parameter	unsigned rot	123:53:5141:5152	11222097	2	True				
ANR	11222300	ParameterType	unsigned		11222097	0					
ANR	11222301	Identifier	rot		11222097	1					
ANR	11222302	CFGEntryNode	ENTRY		11222097		True				
ANR	11222303	CFGExitNode	EXIT		11222097		True				
ANR	11222304	InfiniteForNode	true		11222097		True				
ANR	11222305	Symbol	* to		11222097						
ANR	11222306	Symbol	last		11222097						
ANR	11222307	Symbol	start		11222097						
ANR	11222308	Symbol	gcd		11222097						
ANR	11222309	Symbol	cycles		11222097						
ANR	11222310	Symbol	list		11222097						
ANR	11222311	Symbol	* last		11222097						
ANR	11222312	Symbol	len		11222097						
ANR	11222313	Symbol	* list		11222097						
ANR	11222314	Symbol	rot		11222097						
ANR	11222315	Symbol	tmp		11222097						
ANR	11222316	Symbol	from		11222097						
ANR	11222317	Symbol	to		11222097						
ANR	11222318	Symbol	* from		11222097						
ANR	11222319	ClassDef	<unnamed>	170:8:6574:6943							
ANR	11222320	DeclStmt									
ANR	11222321	Decl							int	int	fd
ANR	11222322	DeclStmt									
ANR	11222323	Decl							int	int	size
ANR	11222324	DeclStmt									
ANR	11222325	Decl							unsigned	unsigned	left
ANR	11222326	DeclStmt									
ANR	11222327	Decl							unsigned char	unsigned char *	buf
ANR	11222328	DeclStmt									
ANR	11222329	Decl							unsigned char	unsigned char *	next
ANR	11222330	DeclStmt									
ANR	11222331	Decl							char	char *	name
ANR	11222332	DeclStmt									
ANR	11222333	Decl									file
ANR	11222334	Function	readin	180:0:6966:7179							
ANR	11222335	FunctionDef	readin (file * in)		11222334	0					
ANR	11222336	CompoundStatement		181:0:6993:7179	11222334	0					
ANR	11222337	IdentifierDeclStatement	int len ;	182:4:6999:7006	11222334	0	True				
ANR	11222338	IdentifierDecl	len		11222334	0					
ANR	11222339	IdentifierDeclType	int		11222334	0					
ANR	11222340	Identifier	len		11222334	1					
ANR	11222341	ExpressionStatement	"len = read ( in -> fd , in -> buf , 1 << in -> size )"	184:4:7013:7055	11222334	1	True				
ANR	11222342	AssignmentExpression	"len = read ( in -> fd , in -> buf , 1 << in -> size )"		11222334	0		=			
ANR	11222343	Identifier	len		11222334	0					
ANR	11222344	CallExpression	"read ( in -> fd , in -> buf , 1 << in -> size )"		11222334	1					
ANR	11222345	Callee	read		11222334	0					
ANR	11222346	Identifier	read		11222334	0					
ANR	11222347	ArgumentList	in -> fd		11222334	1					
ANR	11222348	Argument	in -> fd		11222334	0					
ANR	11222349	PtrMemberAccess	in -> fd		11222334	0					
ANR	11222350	Identifier	in		11222334	0					
ANR	11222351	Identifier	fd		11222334	1					
ANR	11222352	Argument	in -> buf		11222334	1					
ANR	11222353	PtrMemberAccess	in -> buf		11222334	0					
ANR	11222354	Identifier	in		11222334	0					
ANR	11222355	Identifier	buf		11222334	1					
ANR	11222356	Argument	1 << in -> size		11222334	2					
ANR	11222357	ShiftExpression	1 << in -> size		11222334	0		<<			
ANR	11222358	PrimaryExpression	1		11222334	0					
ANR	11222359	PtrMemberAccess	in -> size		11222334	1					
ANR	11222360	Identifier	in		11222334	0					
ANR	11222361	Identifier	size		11222334	1					
ANR	11222362	IfStatement	if ( len == - 1 )		11222334	2					
ANR	11222363	Condition	len == - 1	185:8:7065:7073	11222334	0	True				
ANR	11222364	EqualityExpression	len == - 1		11222334	0		==			
ANR	11222365	Identifier	len		11222334	0					
ANR	11222366	UnaryOperationExpression	- 1		11222334	1					
ANR	11222367	UnaryOperator	-		11222334	0					
ANR	11222368	PrimaryExpression	1		11222334	1					
ANR	11222369	ExpressionStatement	"bye ( ""error reading "" , in -> name )"	185:19:7076:7107	11222334	1	True				
ANR	11222370	CallExpression	"bye ( ""error reading "" , in -> name )"		11222334	0					
ANR	11222371	Callee	bye		11222334	0					
ANR	11222372	Identifier	bye		11222334	0					
ANR	11222373	ArgumentList	"""error reading """		11222334	1					
ANR	11222374	Argument	"""error reading """		11222334	0					
ANR	11222375	PrimaryExpression	"""error reading """		11222334	0					
ANR	11222376	Argument	in -> name		11222334	1					
ANR	11222377	PtrMemberAccess	in -> name		11222334	0					
ANR	11222378	Identifier	in		11222334	0					
ANR	11222379	Identifier	name		11222334	1					
ANR	11222380	ExpressionStatement	in -> left = ( unsigned ) len	186:4:7113:7137	11222334	3	True				
ANR	11222381	AssignmentExpression	in -> left = ( unsigned ) len		11222334	0		=			
ANR	11222382	PtrMemberAccess	in -> left		11222334	0					
ANR	11222383	Identifier	in		11222334	0					
ANR	11222384	Identifier	left		11222334	1					
ANR	11222385	CastExpression	( unsigned ) len		11222334	1					
ANR	11222386	CastTarget	unsigned		11222334	0					
ANR	11222387	Identifier	len		11222334	1					
ANR	11222388	ExpressionStatement	in -> next = in -> buf	187:4:7143:7161	11222334	4	True				
ANR	11222389	AssignmentExpression	in -> next = in -> buf		11222334	0		=			
ANR	11222390	PtrMemberAccess	in -> next		11222334	0					
ANR	11222391	Identifier	in		11222334	0					
ANR	11222392	Identifier	next		11222334	1					
ANR	11222393	PtrMemberAccess	in -> buf		11222334	1					
ANR	11222394	Identifier	in		11222334	0					
ANR	11222395	Identifier	buf		11222334	1					
ANR	11222396	ReturnStatement	return len ;	188:4:7167:7177	11222334	5	True				
ANR	11222397	Identifier	len		11222334	0					
ANR	11222398	ReturnType	local int		11222334	1					
ANR	11222399	Identifier	readin		11222334	2					
ANR	11222400	ParameterList	file * in		11222334	3					
ANR	11222401	Parameter	file * in	180:17:6983:6990	11222334	0	True				
ANR	11222402	ParameterType	file *		11222334	0					
ANR	11222403	Identifier	in		11222334	1					
ANR	11222404	CFGEntryNode	ENTRY		11222334		True				
ANR	11222405	CFGExitNode	EXIT		11222334		True				
ANR	11222406	Symbol	in -> buf		11222334						
ANR	11222407	Symbol	read		11222334						
ANR	11222408	Symbol	len		11222334						
ANR	11222409	Symbol	in		11222334						
ANR	11222410	Symbol	in -> fd		11222334						
ANR	11222411	Symbol	* in		11222334						
ANR	11222412	Symbol	in -> name		11222334						
ANR	11222413	Symbol	in -> left		11222334						
ANR	11222414	Symbol	in -> size		11222334						
ANR	11222415	Symbol	in -> next		11222334						
ANR	11222416	Function	readmore	192:0:7227:7334							
ANR	11222417	FunctionDef	readmore (file * in)		11222416	0					
ANR	11222418	CompoundStatement		193:0:7256:7334	11222416	0					
ANR	11222419	IfStatement	if ( readin ( in ) == 0 )		11222416	0					
ANR	11222420	Condition	readin ( in ) == 0	194:8:7266:7280	11222416	0	True				
ANR	11222421	EqualityExpression	readin ( in ) == 0		11222416	0		==			
ANR	11222422	CallExpression	readin ( in )		11222416	0					
ANR	11222423	Callee	readin		11222416	0					
ANR	11222424	Identifier	readin		11222416	0					
ANR	11222425	ArgumentList	in		11222416	1					
ANR	11222426	Argument	in		11222416	0					
ANR	11222427	Identifier	in		11222416	0					
ANR	11222428	PrimaryExpression	0		11222416	1					
ANR	11222429	ExpressionStatement	"bye ( ""unexpected end of "" , in -> name )"	194:25:7283:7318	11222416	1	True				
ANR	11222430	CallExpression	"bye ( ""unexpected end of "" , in -> name )"		11222416	0					
ANR	11222431	Callee	bye		11222416	0					
ANR	11222432	Identifier	bye		11222416	0					
ANR	11222433	ArgumentList	"""unexpected end of """		11222416	1					
ANR	11222434	Argument	"""unexpected end of """		11222416	0					
ANR	11222435	PrimaryExpression	"""unexpected end of """		11222416	0					
ANR	11222436	Argument	in -> name		11222416	1					
ANR	11222437	PtrMemberAccess	in -> name		11222416	0					
ANR	11222438	Identifier	in		11222416	0					
ANR	11222439	Identifier	name		11222416	1					
ANR	11222440	ReturnStatement	return 0 ;	195:4:7324:7332	11222416	1	True				
ANR	11222441	PrimaryExpression	0		11222416	0					
ANR	11222442	ReturnType	local int		11222416	1					
ANR	11222443	Identifier	readmore		11222416	2					
ANR	11222444	ParameterList	file * in		11222416	3					
ANR	11222445	Parameter	file * in	192:19:7246:7253	11222416	0	True				
ANR	11222446	ParameterType	file *		11222416	0					
ANR	11222447	Identifier	in		11222416	1					
ANR	11222448	CFGEntryNode	ENTRY		11222416		True				
ANR	11222449	CFGExitNode	EXIT		11222416		True				
ANR	11222450	Symbol	in		11222416						
ANR	11222451	Symbol	* in		11222416						
ANR	11222452	Symbol	in -> name		11222416						
ANR	11222453	Symbol	readin		11222416						
ANR	11222454	Function	skip	202:0:7469:7927							
ANR	11222455	FunctionDef	"skip (file * in , unsigned n)"		11222454	0					
ANR	11222456	CompoundStatement		203:0:7507:7927	11222454	0					
ANR	11222457	IdentifierDeclStatement	unsigned bypass ;	204:4:7513:7528	11222454	0	True				
ANR	11222458	IdentifierDecl	bypass		11222454	0					
ANR	11222459	IdentifierDeclType	unsigned		11222454	0					
ANR	11222460	Identifier	bypass		11222454	1					
ANR	11222461	IfStatement	if ( n > in -> left )		11222454	1					
ANR	11222462	Condition	n > in -> left	206:8:7539:7550	11222454	0	True				
ANR	11222463	RelationalExpression	n > in -> left		11222454	0		>			
ANR	11222464	Identifier	n		11222454	0					
ANR	11222465	PtrMemberAccess	in -> left		11222454	1					
ANR	11222466	Identifier	in		11222454	0					
ANR	11222467	Identifier	left		11222454	1					
ANR	11222468	CompoundStatement		4:22:45:45	11222454	1					
ANR	11222469	ExpressionStatement	n -= in -> left	207:8:7563:7576	11222454	0	True				
ANR	11222470	AssignmentExpression	n -= in -> left		11222454	0		-=			
ANR	11222471	Identifier	n		11222454	0					
ANR	11222472	PtrMemberAccess	in -> left		11222454	1					
ANR	11222473	Identifier	in		11222454	0					
ANR	11222474	Identifier	left		11222454	1					
ANR	11222475	ExpressionStatement	bypass = n & ~ ( ( 1U << in -> size ) - 1 )	208:8:7586:7622	11222454	1	True				
ANR	11222476	AssignmentExpression	bypass = n & ~ ( ( 1U << in -> size ) - 1 )		11222454	0		=			
ANR	11222477	Identifier	bypass		11222454	0					
ANR	11222478	BitAndExpression	n & ~ ( ( 1U << in -> size ) - 1 )		11222454	1		&			
ANR	11222479	Identifier	n		11222454	0					
ANR	11222480	UnaryOperationExpression	~ ( ( 1U << in -> size ) - 1 )		11222454	1					
ANR	11222481	UnaryOperator	~		11222454	0					
ANR	11222482	AdditiveExpression	( 1U << in -> size ) - 1		11222454	1		-			
ANR	11222483	ShiftExpression	1U << in -> size		11222454	0		<<			
ANR	11222484	PrimaryExpression	1U		11222454	0					
ANR	11222485	PtrMemberAccess	in -> size		11222454	1					
ANR	11222486	Identifier	in		11222454	0					
ANR	11222487	Identifier	size		11222454	1					
ANR	11222488	PrimaryExpression	1		11222454	1					
ANR	11222489	IfStatement	if ( bypass )		11222454	2					
ANR	11222490	Condition	bypass	209:12:7636:7641	11222454	0	True				
ANR	11222491	Identifier	bypass		11222454	0					
ANR	11222492	CompoundStatement		7:20:136:136	11222454	1					
ANR	11222493	IfStatement	"if ( lseek ( in -> fd , ( off_t ) bypass , SEEK_CUR ) == - 1 )"		11222454	0					
ANR	11222494	Condition	"lseek ( in -> fd , ( off_t ) bypass , SEEK_CUR ) == - 1"	210:16:7662:7705	11222454	0	True				
ANR	11222495	EqualityExpression	"lseek ( in -> fd , ( off_t ) bypass , SEEK_CUR ) == - 1"		11222454	0		==			
ANR	11222496	CallExpression	"lseek ( in -> fd , ( off_t ) bypass , SEEK_CUR )"		11222454	0					
ANR	11222497	Callee	lseek		11222454	0					
ANR	11222498	Identifier	lseek		11222454	0					
ANR	11222499	ArgumentList	in -> fd		11222454	1					
ANR	11222500	Argument	in -> fd		11222454	0					
ANR	11222501	PtrMemberAccess	in -> fd		11222454	0					
ANR	11222502	Identifier	in		11222454	0					
ANR	11222503	Identifier	fd		11222454	1					
ANR	11222504	Argument	( off_t ) bypass		11222454	1					
ANR	11222505	CastExpression	( off_t ) bypass		11222454	0					
ANR	11222506	CastTarget	off_t		11222454	0					
ANR	11222507	Identifier	bypass		11222454	1					
ANR	11222508	Argument	SEEK_CUR		11222454	2					
ANR	11222509	Identifier	SEEK_CUR		11222454	0					
ANR	11222510	UnaryOperationExpression	- 1		11222454	1					
ANR	11222511	UnaryOperator	-		11222454	0					
ANR	11222512	PrimaryExpression	1		11222454	1					
ANR	11222513	ExpressionStatement	"bye ( ""seeking "" , in -> name )"	211:16:7724:7749	11222454	1	True				
ANR	11222514	CallExpression	"bye ( ""seeking "" , in -> name )"		11222454	0					
ANR	11222515	Callee	bye		11222454	0					
ANR	11222516	Identifier	bye		11222454	0					
ANR	11222517	ArgumentList	"""seeking """		11222454	1					
ANR	11222518	Argument	"""seeking """		11222454	0					
ANR	11222519	PrimaryExpression	"""seeking """		11222454	0					
ANR	11222520	Argument	in -> name		11222454	1					
ANR	11222521	PtrMemberAccess	in -> name		11222454	0					
ANR	11222522	Identifier	in		11222454	0					
ANR	11222523	Identifier	name		11222454	1					
ANR	11222524	ExpressionStatement	n -= bypass	212:12:7763:7774	11222454	1	True				
ANR	11222525	AssignmentExpression	n -= bypass		11222454	0		-=			
ANR	11222526	Identifier	n		11222454	0					
ANR	11222527	Identifier	bypass		11222454	1					
ANR	11222528	ExpressionStatement	readmore ( in )	214:8:7794:7806	11222454	3	True				
ANR	11222529	CallExpression	readmore ( in )		11222454	0					
ANR	11222530	Callee	readmore		11222454	0					
ANR	11222531	Identifier	readmore		11222454	0					
ANR	11222532	ArgumentList	in		11222454	1					
ANR	11222533	Argument	in		11222454	0					
ANR	11222534	Identifier	in		11222454	0					
ANR	11222535	IfStatement	if ( n > in -> left )		11222454	4					
ANR	11222536	Condition	n > in -> left	215:12:7820:7831	11222454	0	True				
ANR	11222537	RelationalExpression	n > in -> left		11222454	0		>			
ANR	11222538	Identifier	n		11222454	0					
ANR	11222539	PtrMemberAccess	in -> left		11222454	1					
ANR	11222540	Identifier	in		11222454	0					
ANR	11222541	Identifier	left		11222454	1					
ANR	11222542	ExpressionStatement	"bye ( ""unexpected end of "" , in -> name )"	216:12:7846:7881	11222454	1	True				
ANR	11222543	CallExpression	"bye ( ""unexpected end of "" , in -> name )"		11222454	0					
ANR	11222544	Callee	bye		11222454	0					
ANR	11222545	Identifier	bye		11222454	0					
ANR	11222546	ArgumentList	"""unexpected end of """		11222454	1					
ANR	11222547	Argument	"""unexpected end of """		11222454	0					
ANR	11222548	PrimaryExpression	"""unexpected end of """		11222454	0					
ANR	11222549	Argument	in -> name		11222454	1					
ANR	11222550	PtrMemberAccess	in -> name		11222454	0					
ANR	11222551	Identifier	in		11222454	0					
ANR	11222552	Identifier	name		11222454	1					
ANR	11222553	ExpressionStatement	in -> left -= n	218:4:7893:7906	11222454	2	True				
ANR	11222554	AssignmentExpression	in -> left -= n		11222454	0		-=			
ANR	11222555	PtrMemberAccess	in -> left		11222454	0					
ANR	11222556	Identifier	in		11222454	0					
ANR	11222557	Identifier	left		11222454	1					
ANR	11222558	Identifier	n		11222454	1					
ANR	11222559	ExpressionStatement	in -> next += n	219:4:7912:7925	11222454	3	True				
ANR	11222560	AssignmentExpression	in -> next += n		11222454	0		+=			
ANR	11222561	PtrMemberAccess	in -> next		11222454	0					
ANR	11222562	Identifier	in		11222454	0					
ANR	11222563	Identifier	next		11222454	1					
ANR	11222564	Identifier	n		11222454	1					
ANR	11222565	ReturnType	local void		11222454	1					
ANR	11222566	Identifier	skip		11222454	2					
ANR	11222567	ParameterList	"file * in , unsigned n"		11222454	3					
ANR	11222568	Parameter	file * in	202:16:7485:7492	11222454	0	True				
ANR	11222569	ParameterType	file *		11222454	0					
ANR	11222570	Identifier	in		11222454	1					
ANR	11222571	Parameter	unsigned n	202:26:7495:7504	11222454	1	True				
ANR	11222572	ParameterType	unsigned		11222454	0					
ANR	11222573	Identifier	n		11222454	1					
ANR	11222574	CFGEntryNode	ENTRY		11222454		True				
ANR	11222575	CFGExitNode	EXIT		11222454		True				
ANR	11222576	Symbol	bypass		11222454						
ANR	11222577	Symbol	SEEK_CUR		11222454						
ANR	11222578	Symbol	lseek		11222454						
ANR	11222579	Symbol	in		11222454						
ANR	11222580	Symbol	* in		11222454						
ANR	11222581	Symbol	in -> fd		11222454						
ANR	11222582	Symbol	in -> name		11222454						
ANR	11222583	Symbol	in -> left		11222454						
ANR	11222584	Symbol	n		11222454						
ANR	11222585	Symbol	in -> size		11222454						
ANR	11222586	Symbol	in -> next		11222454						
ANR	11222587	Function	read4	223:0:7994:8210							
ANR	11222588	FunctionDef	read4 (file * in)		11222587	0					
ANR	11222589	CompoundStatement		224:0:8024:8210	11222587	0					
ANR	11222590	IdentifierDeclStatement	unsigned long val ;	225:4:8030:8047	11222587	0	True				
ANR	11222591	IdentifierDecl	val		11222587	0					
ANR	11222592	IdentifierDeclType	unsigned long		11222587	0					
ANR	11222593	Identifier	val		11222587	1					
ANR	11222594	ExpressionStatement	val = read1 ( in )	227:4:8054:8069	11222587	1	True				
ANR	11222595	AssignmentExpression	val = read1 ( in )		11222587	0		=			
ANR	11222596	Identifier	val		11222587	0					
ANR	11222597	CallExpression	read1 ( in )		11222587	1					
ANR	11222598	Callee	read1		11222587	0					
ANR	11222599	Identifier	read1		11222587	0					
ANR	11222600	ArgumentList	in		11222587	1					
ANR	11222601	Argument	in		11222587	0					
ANR	11222602	Identifier	in		11222587	0					
ANR	11222603	ExpressionStatement	val += ( unsigned ) read1 ( in ) << 8	228:4:8075:8106	11222587	2	True				
ANR	11222604	AssignmentExpression	val += ( unsigned ) read1 ( in ) << 8		11222587	0		+=			
ANR	11222605	Identifier	val		11222587	0					
ANR	11222606	ShiftExpression	( unsigned ) read1 ( in ) << 8		11222587	1		<<			
ANR	11222607	CastExpression	( unsigned ) read1 ( in )		11222587	0					
ANR	11222608	CastTarget	unsigned		11222587	0					
ANR	11222609	CallExpression	read1 ( in )		11222587	1					
ANR	11222610	Callee	read1		11222587	0					
ANR	11222611	Identifier	read1		11222587	0					
ANR	11222612	ArgumentList	in		11222587	1					
ANR	11222613	Argument	in		11222587	0					
ANR	11222614	Identifier	in		11222587	0					
ANR	11222615	PrimaryExpression	8		11222587	1					
ANR	11222616	ExpressionStatement	val += ( unsigned long ) read1 ( in ) << 16	229:4:8112:8149	11222587	3	True				
ANR	11222617	AssignmentExpression	val += ( unsigned long ) read1 ( in ) << 16		11222587	0		+=			
ANR	11222618	Identifier	val		11222587	0					
ANR	11222619	ShiftExpression	( unsigned long ) read1 ( in ) << 16		11222587	1		<<			
ANR	11222620	CastExpression	( unsigned long ) read1 ( in )		11222587	0					
ANR	11222621	CastTarget	unsigned long		11222587	0					
ANR	11222622	CallExpression	read1 ( in )		11222587	1					
ANR	11222623	Callee	read1		11222587	0					
ANR	11222624	Identifier	read1		11222587	0					
ANR	11222625	ArgumentList	in		11222587	1					
ANR	11222626	Argument	in		11222587	0					
ANR	11222627	Identifier	in		11222587	0					
ANR	11222628	PrimaryExpression	16		11222587	1					
ANR	11222629	ExpressionStatement	val += ( unsigned long ) read1 ( in ) << 24	230:4:8155:8192	11222587	4	True				
ANR	11222630	AssignmentExpression	val += ( unsigned long ) read1 ( in ) << 24		11222587	0		+=			
ANR	11222631	Identifier	val		11222587	0					
ANR	11222632	ShiftExpression	( unsigned long ) read1 ( in ) << 24		11222587	1		<<			
ANR	11222633	CastExpression	( unsigned long ) read1 ( in )		11222587	0					
ANR	11222634	CastTarget	unsigned long		11222587	0					
ANR	11222635	CallExpression	read1 ( in )		11222587	1					
ANR	11222636	Callee	read1		11222587	0					
ANR	11222637	Identifier	read1		11222587	0					
ANR	11222638	ArgumentList	in		11222587	1					
ANR	11222639	Argument	in		11222587	0					
ANR	11222640	Identifier	in		11222587	0					
ANR	11222641	PrimaryExpression	24		11222587	1					
ANR	11222642	ReturnStatement	return val ;	231:4:8198:8208	11222587	5	True				
ANR	11222643	Identifier	val		11222587	0					
ANR	11222644	ReturnType	unsigned long		11222587	1					
ANR	11222645	Identifier	read4		11222587	2					
ANR	11222646	ParameterList	file * in		11222587	3					
ANR	11222647	Parameter	file * in	223:20:8014:8021	11222587	0	True				
ANR	11222648	ParameterType	file *		11222587	0					
ANR	11222649	Identifier	in		11222587	1					
ANR	11222650	CFGEntryNode	ENTRY		11222587		True				
ANR	11222651	CFGExitNode	EXIT		11222587		True				
ANR	11222652	Symbol	val		11222587						
ANR	11222653	Symbol	in		11222587						
ANR	11222654	Symbol	read1		11222587						
ANR	11222655	Function	gzheader	235:0:8241:8798							
ANR	11222656	FunctionDef	gzheader (file * in)		11222655	0					
ANR	11222657	CompoundStatement		236:0:8271:8798	11222655	0					
ANR	11222658	IdentifierDeclStatement	int flags ;	237:4:8277:8286	11222655	0	True				
ANR	11222659	IdentifierDecl	flags		11222655	0					
ANR	11222660	IdentifierDeclType	int		11222655	0					
ANR	11222661	Identifier	flags		11222655	1					
ANR	11222662	IdentifierDeclStatement	unsigned n ;	238:4:8292:8302	11222655	1	True				
ANR	11222663	IdentifierDecl	n		11222655	0					
ANR	11222664	IdentifierDeclType	unsigned		11222655	0					
ANR	11222665	Identifier	n		11222655	1					
ANR	11222666	IfStatement	if ( read1 ( in ) != 31 || read1 ( in ) != 139 )		11222655	2					
ANR	11222667	Condition	read1 ( in ) != 31 || read1 ( in ) != 139	240:8:8313:8347	11222655	0	True				
ANR	11222668	OrExpression	read1 ( in ) != 31 || read1 ( in ) != 139		11222655	0		||			
ANR	11222669	EqualityExpression	read1 ( in ) != 31		11222655	0		!=			
ANR	11222670	CallExpression	read1 ( in )		11222655	0					
ANR	11222671	Callee	read1		11222655	0					
ANR	11222672	Identifier	read1		11222655	0					
ANR	11222673	ArgumentList	in		11222655	1					
ANR	11222674	Argument	in		11222655	0					
ANR	11222675	Identifier	in		11222655	0					
ANR	11222676	PrimaryExpression	31		11222655	1					
ANR	11222677	EqualityExpression	read1 ( in ) != 139		11222655	1		!=			
ANR	11222678	CallExpression	read1 ( in )		11222655	0					
ANR	11222679	Callee	read1		11222655	0					
ANR	11222680	Identifier	read1		11222655	0					
ANR	11222681	ArgumentList	in		11222655	1					
ANR	11222682	Argument	in		11222655	0					
ANR	11222683	Identifier	in		11222655	0					
ANR	11222684	PrimaryExpression	139		11222655	1					
ANR	11222685	ExpressionStatement	"bye ( in -> name , "" not a gzip file"" )"	240:45:8350:8383	11222655	1	True				
ANR	11222686	CallExpression	"bye ( in -> name , "" not a gzip file"" )"		11222655	0					
ANR	11222687	Callee	bye		11222655	0					
ANR	11222688	Identifier	bye		11222655	0					
ANR	11222689	ArgumentList	in -> name		11222655	1					
ANR	11222690	Argument	in -> name		11222655	0					
ANR	11222691	PtrMemberAccess	in -> name		11222655	0					
ANR	11222692	Identifier	in		11222655	0					
ANR	11222693	Identifier	name		11222655	1					
ANR	11222694	Argument	""" not a gzip file"""		11222655	1					
ANR	11222695	PrimaryExpression	""" not a gzip file"""		11222655	0					
ANR	11222696	IfStatement	if ( read1 ( in ) != 8 )		11222655	3					
ANR	11222697	Condition	read1 ( in ) != 8	241:8:8393:8406	11222655	0	True				
ANR	11222698	EqualityExpression	read1 ( in ) != 8		11222655	0		!=			
ANR	11222699	CallExpression	read1 ( in )		11222655	0					
ANR	11222700	Callee	read1		11222655	0					
ANR	11222701	Identifier	read1		11222655	0					
ANR	11222702	ArgumentList	in		11222655	1					
ANR	11222703	Argument	in		11222655	0					
ANR	11222704	Identifier	in		11222655	0					
ANR	11222705	PrimaryExpression	8		11222655	1					
ANR	11222706	ExpressionStatement	"bye ( ""unknown compression method in"" , in -> name )"	241:24:8409:8455	11222655	1	True				
ANR	11222707	CallExpression	"bye ( ""unknown compression method in"" , in -> name )"		11222655	0					
ANR	11222708	Callee	bye		11222655	0					
ANR	11222709	Identifier	bye		11222655	0					
ANR	11222710	ArgumentList	"""unknown compression method in"""		11222655	1					
ANR	11222711	Argument	"""unknown compression method in"""		11222655	0					
ANR	11222712	PrimaryExpression	"""unknown compression method in"""		11222655	0					
ANR	11222713	Argument	in -> name		11222655	1					
ANR	11222714	PtrMemberAccess	in -> name		11222655	0					
ANR	11222715	Identifier	in		11222655	0					
ANR	11222716	Identifier	name		11222655	1					
ANR	11222717	ExpressionStatement	flags = read1 ( in )	242:4:8461:8478	11222655	4	True				
ANR	11222718	AssignmentExpression	flags = read1 ( in )		11222655	0		=			
ANR	11222719	Identifier	flags		11222655	0					
ANR	11222720	CallExpression	read1 ( in )		11222655	1					
ANR	11222721	Callee	read1		11222655	0					
ANR	11222722	Identifier	read1		11222655	0					
ANR	11222723	ArgumentList	in		11222655	1					
ANR	11222724	Argument	in		11222655	0					
ANR	11222725	Identifier	in		11222655	0					
ANR	11222726	IfStatement	if ( flags & 0xe0 )		11222655	5					
ANR	11222727	Condition	flags & 0xe0	243:8:8488:8499	11222655	0	True				
ANR	11222728	BitAndExpression	flags & 0xe0		11222655	0		&			
ANR	11222729	Identifier	flags		11222655	0					
ANR	11222730	PrimaryExpression	0xe0		11222655	1					
ANR	11222731	ExpressionStatement	"bye ( ""unknown header flags set in"" , in -> name )"	243:22:8502:8546	11222655	1	True				
ANR	11222732	CallExpression	"bye ( ""unknown header flags set in"" , in -> name )"		11222655	0					
ANR	11222733	Callee	bye		11222655	0					
ANR	11222734	Identifier	bye		11222655	0					
ANR	11222735	ArgumentList	"""unknown header flags set in"""		11222655	1					
ANR	11222736	Argument	"""unknown header flags set in"""		11222655	0					
ANR	11222737	PrimaryExpression	"""unknown header flags set in"""		11222655	0					
ANR	11222738	Argument	in -> name		11222655	1					
ANR	11222739	PtrMemberAccess	in -> name		11222655	0					
ANR	11222740	Identifier	in		11222655	0					
ANR	11222741	Identifier	name		11222655	1					
ANR	11222742	ExpressionStatement	"skip ( in , 6 )"	244:4:8552:8563	11222655	6	True				
ANR	11222743	CallExpression	"skip ( in , 6 )"		11222655	0					
ANR	11222744	Callee	skip		11222655	0					
ANR	11222745	Identifier	skip		11222655	0					
ANR	11222746	ArgumentList	in		11222655	1					
ANR	11222747	Argument	in		11222655	0					
ANR	11222748	Identifier	in		11222655	0					
ANR	11222749	Argument	6		11222655	1					
ANR	11222750	PrimaryExpression	6		11222655	0					
ANR	11222751	IfStatement	if ( flags & 4 )		11222655	7					
ANR	11222752	Condition	flags & 4	245:8:8573:8581	11222655	0	True				
ANR	11222753	BitAndExpression	flags & 4		11222655	0		&			
ANR	11222754	Identifier	flags		11222655	0					
ANR	11222755	PrimaryExpression	4		11222655	1					
ANR	11222756	CompoundStatement		10:19:312:312	11222655	1					
ANR	11222757	ExpressionStatement	n = read1 ( in )	246:8:8594:8607	11222655	0	True				
ANR	11222758	AssignmentExpression	n = read1 ( in )		11222655	0		=			
ANR	11222759	Identifier	n		11222655	0					
ANR	11222760	CallExpression	read1 ( in )		11222655	1					
ANR	11222761	Callee	read1		11222655	0					
ANR	11222762	Identifier	read1		11222655	0					
ANR	11222763	ArgumentList	in		11222655	1					
ANR	11222764	Argument	in		11222655	0					
ANR	11222765	Identifier	in		11222655	0					
ANR	11222766	ExpressionStatement	n += ( unsigned ) ( read1 ( in ) ) << 8	247:8:8617:8648	11222655	1	True				
ANR	11222767	AssignmentExpression	n += ( unsigned ) ( read1 ( in ) ) << 8		11222655	0		+=			
ANR	11222768	Identifier	n		11222655	0					
ANR	11222769	ShiftExpression	( unsigned ) ( read1 ( in ) ) << 8		11222655	1		<<			
ANR	11222770	CastExpression	( unsigned ) ( read1 ( in ) )		11222655	0					
ANR	11222771	CastTarget	unsigned		11222655	0					
ANR	11222772	CallExpression	read1 ( in )		11222655	1					
ANR	11222773	Callee	read1		11222655	0					
ANR	11222774	Identifier	read1		11222655	0					
ANR	11222775	ArgumentList	in		11222655	1					
ANR	11222776	Argument	in		11222655	0					
ANR	11222777	Identifier	in		11222655	0					
ANR	11222778	PrimaryExpression	8		11222655	1					
ANR	11222779	ExpressionStatement	"skip ( in , n )"	248:8:8658:8669	11222655	2	True				
ANR	11222780	CallExpression	"skip ( in , n )"		11222655	0					
ANR	11222781	Callee	skip		11222655	0					
ANR	11222782	Identifier	skip		11222655	0					
ANR	11222783	ArgumentList	in		11222655	1					
ANR	11222784	Argument	in		11222655	0					
ANR	11222785	Identifier	in		11222655	0					
ANR	11222786	Argument	n		11222655	1					
ANR	11222787	Identifier	n		11222655	0					
ANR	11222788	IfStatement	if ( flags & 8 )		11222655	8					
ANR	11222789	Condition	flags & 8	250:8:8685:8693	11222655	0	True				
ANR	11222790	BitAndExpression	flags & 8		11222655	0		&			
ANR	11222791	Identifier	flags		11222655	0					
ANR	11222792	PrimaryExpression	8		11222655	1					
ANR	11222793	WhileStatement	while ( read1 ( in ) != 0 )		11222655	1					
ANR	11222794	Condition	read1 ( in ) != 0	250:26:8703:8716	11222655	0	True				
ANR	11222795	EqualityExpression	read1 ( in ) != 0		11222655	0		!=			
ANR	11222796	CallExpression	read1 ( in )		11222655	0					
ANR	11222797	Callee	read1		11222655	0					
ANR	11222798	Identifier	read1		11222655	0					
ANR	11222799	ArgumentList	in		11222655	1					
ANR	11222800	Argument	in		11222655	0					
ANR	11222801	Identifier	in		11222655	0					
ANR	11222802	PrimaryExpression	0		11222655	1					
ANR	11222803	ExpressionStatement		250:42:8719:8719	11222655	1	True				
ANR	11222804	IfStatement	if ( flags & 16 )		11222655	9					
ANR	11222805	Condition	flags & 16	251:8:8729:8738	11222655	0	True				
ANR	11222806	BitAndExpression	flags & 16		11222655	0		&			
ANR	11222807	Identifier	flags		11222655	0					
ANR	11222808	PrimaryExpression	16		11222655	1					
ANR	11222809	WhileStatement	while ( read1 ( in ) != 0 )		11222655	1					
ANR	11222810	Condition	read1 ( in ) != 0	251:27:8748:8761	11222655	0	True				
ANR	11222811	EqualityExpression	read1 ( in ) != 0		11222655	0		!=			
ANR	11222812	CallExpression	read1 ( in )		11222655	0					
ANR	11222813	Callee	read1		11222655	0					
ANR	11222814	Identifier	read1		11222655	0					
ANR	11222815	ArgumentList	in		11222655	1					
ANR	11222816	Argument	in		11222655	0					
ANR	11222817	Identifier	in		11222655	0					
ANR	11222818	PrimaryExpression	0		11222655	1					
ANR	11222819	ExpressionStatement		251:43:8764:8764	11222655	1	True				
ANR	11222820	IfStatement	if ( flags & 2 )		11222655	10					
ANR	11222821	Condition	flags & 2	252:8:8774:8782	11222655	0	True				
ANR	11222822	BitAndExpression	flags & 2		11222655	0		&			
ANR	11222823	Identifier	flags		11222655	0					
ANR	11222824	PrimaryExpression	2		11222655	1					
ANR	11222825	ExpressionStatement	"skip ( in , 2 )"	252:19:8785:8796	11222655	1	True				
ANR	11222826	CallExpression	"skip ( in , 2 )"		11222655	0					
ANR	11222827	Callee	skip		11222655	0					
ANR	11222828	Identifier	skip		11222655	0					
ANR	11222829	ArgumentList	in		11222655	1					
ANR	11222830	Argument	in		11222655	0					
ANR	11222831	Identifier	in		11222655	0					
ANR	11222832	Argument	2		11222655	1					
ANR	11222833	PrimaryExpression	2		11222655	0					
ANR	11222834	ReturnType	local void		11222655	1					
ANR	11222835	Identifier	gzheader		11222655	2					
ANR	11222836	ParameterList	file * in		11222655	3					
ANR	11222837	Parameter	file * in	235:20:8261:8268	11222655	0	True				
ANR	11222838	ParameterType	file *		11222655	0					
ANR	11222839	Identifier	in		11222655	1					
ANR	11222840	CFGEntryNode	ENTRY		11222655		True				
ANR	11222841	CFGExitNode	EXIT		11222655		True				
ANR	11222842	Symbol	in		11222655						
ANR	11222843	Symbol	flags		11222655						
ANR	11222844	Symbol	in -> name		11222655						
ANR	11222845	Symbol	* in		11222655						
ANR	11222846	Symbol	n		11222655						
ANR	11222847	Symbol	read1		11222655						
ANR	11222848	Function	gzscan	259:0:9084:13160							
ANR	11222849	FunctionDef	"gzscan (char * name , z_stream * strm , int level)"		11222848	0					
ANR	11222850	CompoundStatement		260:0:9140:13160	11222848	0					
ANR	11222851	IdentifierDeclStatement	"int ret , lastbit , left , full ;"	261:4:9146:9174	11222848	0	True				
ANR	11222852	IdentifierDecl	ret		11222848	0					
ANR	11222853	IdentifierDeclType	int		11222848	0					
ANR	11222854	Identifier	ret		11222848	1					
ANR	11222855	IdentifierDecl	lastbit		11222848	1					
ANR	11222856	IdentifierDeclType	int		11222848	0					
ANR	11222857	Identifier	lastbit		11222848	1					
ANR	11222858	IdentifierDecl	left		11222848	2					
ANR	11222859	IdentifierDeclType	int		11222848	0					
ANR	11222860	Identifier	left		11222848	1					
ANR	11222861	IdentifierDecl	full		11222848	3					
ANR	11222862	IdentifierDeclType	int		11222848	0					
ANR	11222863	Identifier	full		11222848	1					
ANR	11222864	IdentifierDeclStatement	unsigned have ;	262:4:9180:9193	11222848	1	True				
ANR	11222865	IdentifierDecl	have		11222848	0					
ANR	11222866	IdentifierDeclType	unsigned		11222848	0					
ANR	11222867	Identifier	have		11222848	1					
ANR	11222868	IdentifierDeclStatement	"unsigned long crc , tot ;"	263:4:9199:9221	11222848	2	True				
ANR	11222869	IdentifierDecl	crc		11222848	0					
ANR	11222870	IdentifierDeclType	unsigned long		11222848	0					
ANR	11222871	Identifier	crc		11222848	1					
ANR	11222872	IdentifierDecl	tot		11222848	1					
ANR	11222873	IdentifierDeclType	unsigned long		11222848	0					
ANR	11222874	Identifier	tot		11222848	1					
ANR	11222875	IdentifierDeclStatement	unsigned char * window ;	264:4:9227:9248	11222848	3	True				
ANR	11222876	IdentifierDecl	* window		11222848	0					
ANR	11222877	IdentifierDeclType	unsigned char *		11222848	0					
ANR	11222878	Identifier	window		11222848	1					
ANR	11222879	IdentifierDeclStatement	"off_t lastoff , end ;"	265:4:9254:9272	11222848	4	True				
ANR	11222880	IdentifierDecl	lastoff		11222848	0					
ANR	11222881	IdentifierDeclType	off_t		11222848	0					
ANR	11222882	Identifier	lastoff		11222848	1					
ANR	11222883	IdentifierDecl	end		11222848	1					
ANR	11222884	IdentifierDeclType	off_t		11222848	0					
ANR	11222885	Identifier	end		11222848	1					
ANR	11222886	IdentifierDeclStatement	file gz ;	266:4:9278:9285	11222848	5	True				
ANR	11222887	IdentifierDecl	gz		11222848	0					
ANR	11222888	IdentifierDeclType	file		11222848	0					
ANR	11222889	Identifier	gz		11222848	1					
ANR	11222890	ExpressionStatement	gz . name = name	269:4:9317:9331	11222848	6	True				
ANR	11222891	AssignmentExpression	gz . name = name		11222848	0		=			
ANR	11222892	MemberAccess	gz . name		11222848	0					
ANR	11222893	Identifier	gz		11222848	0					
ANR	11222894	Identifier	name		11222848	1					
ANR	11222895	Identifier	name		11222848	1					
ANR	11222896	ExpressionStatement	"gz . fd = open ( name , O_RDWR , 0 )"	270:4:9337:9366	11222848	7	True				
ANR	11222897	AssignmentExpression	"gz . fd = open ( name , O_RDWR , 0 )"		11222848	0		=			
ANR	11222898	MemberAccess	gz . fd		11222848	0					
ANR	11222899	Identifier	gz		11222848	0					
ANR	11222900	Identifier	fd		11222848	1					
ANR	11222901	CallExpression	"open ( name , O_RDWR , 0 )"		11222848	1					
ANR	11222902	Callee	open		11222848	0					
ANR	11222903	Identifier	open		11222848	0					
ANR	11222904	ArgumentList	name		11222848	1					
ANR	11222905	Argument	name		11222848	0					
ANR	11222906	Identifier	name		11222848	0					
ANR	11222907	Argument	O_RDWR		11222848	1					
ANR	11222908	Identifier	O_RDWR		11222848	0					
ANR	11222909	Argument	0		11222848	2					
ANR	11222910	PrimaryExpression	0		11222848	0					
ANR	11222911	IfStatement	if ( gz . fd == - 1 )		11222848	8					
ANR	11222912	Condition	gz . fd == - 1	271:8:9376:9386	11222848	0	True				
ANR	11222913	EqualityExpression	gz . fd == - 1		11222848	0		==			
ANR	11222914	MemberAccess	gz . fd		11222848	0					
ANR	11222915	Identifier	gz		11222848	0					
ANR	11222916	Identifier	fd		11222848	1					
ANR	11222917	UnaryOperationExpression	- 1		11222848	1					
ANR	11222918	UnaryOperator	-		11222848	0					
ANR	11222919	PrimaryExpression	1		11222848	1					
ANR	11222920	ExpressionStatement	"bye ( ""cannot open "" , name )"	271:21:9389:9414	11222848	1	True				
ANR	11222921	CallExpression	"bye ( ""cannot open "" , name )"		11222848	0					
ANR	11222922	Callee	bye		11222848	0					
ANR	11222923	Identifier	bye		11222848	0					
ANR	11222924	ArgumentList	"""cannot open """		11222848	1					
ANR	11222925	Argument	"""cannot open """		11222848	0					
ANR	11222926	PrimaryExpression	"""cannot open """		11222848	0					
ANR	11222927	Argument	name		11222848	1					
ANR	11222928	Identifier	name		11222848	0					
ANR	11222929	ExpressionStatement	gz . buf = malloc ( CHUNK )	272:4:9420:9442	11222848	9	True				
ANR	11222930	AssignmentExpression	gz . buf = malloc ( CHUNK )		11222848	0		=			
ANR	11222931	MemberAccess	gz . buf		11222848	0					
ANR	11222932	Identifier	gz		11222848	0					
ANR	11222933	Identifier	buf		11222848	1					
ANR	11222934	CallExpression	malloc ( CHUNK )		11222848	1					
ANR	11222935	Callee	malloc		11222848	0					
ANR	11222936	Identifier	malloc		11222848	0					
ANR	11222937	ArgumentList	CHUNK		11222848	1					
ANR	11222938	Argument	CHUNK		11222848	0					
ANR	11222939	Identifier	CHUNK		11222848	0					
ANR	11222940	IfStatement	if ( gz . buf == NULL )		11222848	10					
ANR	11222941	Condition	gz . buf == NULL	273:8:9452:9465	11222848	0	True				
ANR	11222942	EqualityExpression	gz . buf == NULL		11222848	0		==			
ANR	11222943	MemberAccess	gz . buf		11222848	0					
ANR	11222944	Identifier	gz		11222848	0					
ANR	11222945	Identifier	buf		11222848	1					
ANR	11222946	Identifier	NULL		11222848	1					
ANR	11222947	ExpressionStatement	"bye ( ""out of memory"" , """" )"	273:24:9468:9492	11222848	1	True				
ANR	11222948	CallExpression	"bye ( ""out of memory"" , """" )"		11222848	0					
ANR	11222949	Callee	bye		11222848	0					
ANR	11222950	Identifier	bye		11222848	0					
ANR	11222951	ArgumentList	"""out of memory"""		11222848	1					
ANR	11222952	Argument	"""out of memory"""		11222848	0					
ANR	11222953	PrimaryExpression	"""out of memory"""		11222848	0					
ANR	11222954	Argument	""""""		11222848	1					
ANR	11222955	PrimaryExpression	""""""		11222848	0					
ANR	11222956	ExpressionStatement	gz . size = LGCHUNK	274:4:9498:9515	11222848	11	True				
ANR	11222957	AssignmentExpression	gz . size = LGCHUNK		11222848	0		=			
ANR	11222958	MemberAccess	gz . size		11222848	0					
ANR	11222959	Identifier	gz		11222848	0					
ANR	11222960	Identifier	size		11222848	1					
ANR	11222961	Identifier	LGCHUNK		11222848	1					
ANR	11222962	ExpressionStatement	gz . left = 0	275:4:9521:9532	11222848	12	True				
ANR	11222963	AssignmentExpression	gz . left = 0		11222848	0		=			
ANR	11222964	MemberAccess	gz . left		11222848	0					
ANR	11222965	Identifier	gz		11222848	0					
ANR	11222966	Identifier	left		11222848	1					
ANR	11222967	PrimaryExpression	0		11222848	1					
ANR	11222968	ExpressionStatement	gzheader ( & gz )	278:4:9566:9579	11222848	13	True				
ANR	11222969	CallExpression	gzheader ( & gz )		11222848	0					
ANR	11222970	Callee	gzheader		11222848	0					
ANR	11222971	Identifier	gzheader		11222848	0					
ANR	11222972	ArgumentList	& gz		11222848	1					
ANR	11222973	Argument	& gz		11222848	0					
ANR	11222974	UnaryOperationExpression	& gz		11222848	0					
ANR	11222975	UnaryOperator	&		11222848	0					
ANR	11222976	Identifier	gz		11222848	1					
ANR	11222977	ExpressionStatement	window = malloc ( DSIZE )	281:4:9618:9640	11222848	14	True				
ANR	11222978	AssignmentExpression	window = malloc ( DSIZE )		11222848	0		=			
ANR	11222979	Identifier	window		11222848	0					
ANR	11222980	CallExpression	malloc ( DSIZE )		11222848	1					
ANR	11222981	Callee	malloc		11222848	0					
ANR	11222982	Identifier	malloc		11222848	0					
ANR	11222983	ArgumentList	DSIZE		11222848	1					
ANR	11222984	Argument	DSIZE		11222848	0					
ANR	11222985	Identifier	DSIZE		11222848	0					
ANR	11222986	IfStatement	if ( window == NULL )		11222848	15					
ANR	11222987	Condition	window == NULL	282:8:9650:9663	11222848	0	True				
ANR	11222988	EqualityExpression	window == NULL		11222848	0		==			
ANR	11222989	Identifier	window		11222848	0					
ANR	11222990	Identifier	NULL		11222848	1					
ANR	11222991	ExpressionStatement	"bye ( ""out of memory"" , """" )"	282:24:9666:9690	11222848	1	True				
ANR	11222992	CallExpression	"bye ( ""out of memory"" , """" )"		11222848	0					
ANR	11222993	Callee	bye		11222848	0					
ANR	11222994	Identifier	bye		11222848	0					
ANR	11222995	ArgumentList	"""out of memory"""		11222848	1					
ANR	11222996	Argument	"""out of memory"""		11222848	0					
ANR	11222997	PrimaryExpression	"""out of memory"""		11222848	0					
ANR	11222998	Argument	""""""		11222848	1					
ANR	11222999	PrimaryExpression	""""""		11222848	0					
ANR	11223000	ExpressionStatement	strm -> zalloc = Z_NULL	283:4:9696:9717	11222848	16	True				
ANR	11223001	AssignmentExpression	strm -> zalloc = Z_NULL		11222848	0		=			
ANR	11223002	PtrMemberAccess	strm -> zalloc		11222848	0					
ANR	11223003	Identifier	strm		11222848	0					
ANR	11223004	Identifier	zalloc		11222848	1					
ANR	11223005	Identifier	Z_NULL		11222848	1					
ANR	11223006	ExpressionStatement	strm -> zfree = Z_NULL	284:4:9723:9743	11222848	17	True				
ANR	11223007	AssignmentExpression	strm -> zfree = Z_NULL		11222848	0		=			
ANR	11223008	PtrMemberAccess	strm -> zfree		11222848	0					
ANR	11223009	Identifier	strm		11222848	0					
ANR	11223010	Identifier	zfree		11222848	1					
ANR	11223011	Identifier	Z_NULL		11222848	1					
ANR	11223012	ExpressionStatement	strm -> opaque = Z_NULL	285:4:9749:9770	11222848	18	True				
ANR	11223013	AssignmentExpression	strm -> opaque = Z_NULL		11222848	0		=			
ANR	11223014	PtrMemberAccess	strm -> opaque		11222848	0					
ANR	11223015	Identifier	strm		11222848	0					
ANR	11223016	Identifier	opaque		11222848	1					
ANR	11223017	Identifier	Z_NULL		11222848	1					
ANR	11223018	ExpressionStatement	"ret = inflateInit2 ( strm , - 15 )"	286:4:9776:9805	11222848	19	True				
ANR	11223019	AssignmentExpression	"ret = inflateInit2 ( strm , - 15 )"		11222848	0		=			
ANR	11223020	Identifier	ret		11222848	0					
ANR	11223021	CallExpression	"inflateInit2 ( strm , - 15 )"		11222848	1					
ANR	11223022	Callee	inflateInit2		11222848	0					
ANR	11223023	Identifier	inflateInit2		11222848	0					
ANR	11223024	ArgumentList	strm		11222848	1					
ANR	11223025	Argument	strm		11222848	0					
ANR	11223026	Identifier	strm		11222848	0					
ANR	11223027	Argument	- 15		11222848	1					
ANR	11223028	UnaryOperationExpression	- 15		11222848	0					
ANR	11223029	UnaryOperator	-		11222848	0					
ANR	11223030	PrimaryExpression	15		11222848	1					
ANR	11223031	IfStatement	if ( ret != Z_OK )		11222848	20					
ANR	11223032	Condition	ret != Z_OK	287:8:9815:9825	11222848	0	True				
ANR	11223033	EqualityExpression	ret != Z_OK		11222848	0		!=			
ANR	11223034	Identifier	ret		11222848	0					
ANR	11223035	Identifier	Z_OK		11222848	1					
ANR	11223036	ExpressionStatement	"bye ( ""out of memory"" , "" or library mismatch"" )"	287:21:9828:9872	11222848	1	True				
ANR	11223037	CallExpression	"bye ( ""out of memory"" , "" or library mismatch"" )"		11222848	0					
ANR	11223038	Callee	bye		11222848	0					
ANR	11223039	Identifier	bye		11222848	0					
ANR	11223040	ArgumentList	"""out of memory"""		11222848	1					
ANR	11223041	Argument	"""out of memory"""		11222848	0					
ANR	11223042	PrimaryExpression	"""out of memory"""		11222848	0					
ANR	11223043	Argument	""" or library mismatch"""		11222848	1					
ANR	11223044	PrimaryExpression	""" or library mismatch"""		11222848	0					
ANR	11223045	ExpressionStatement	lastbit = 0	290:4:9946:9957	11222848	21	True				
ANR	11223046	AssignmentExpression	lastbit = 0		11222848	0		=			
ANR	11223047	Identifier	lastbit		11222848	0					
ANR	11223048	PrimaryExpression	0		11222848	1					
ANR	11223049	ExpressionStatement	"lastoff = lseek ( gz . fd , 0L , SEEK_CUR ) - gz . left"	291:4:9963:10009	11222848	22	True				
ANR	11223050	AssignmentExpression	"lastoff = lseek ( gz . fd , 0L , SEEK_CUR ) - gz . left"		11222848	0		=			
ANR	11223051	Identifier	lastoff		11222848	0					
ANR	11223052	AdditiveExpression	"lseek ( gz . fd , 0L , SEEK_CUR ) - gz . left"		11222848	1		-			
ANR	11223053	CallExpression	"lseek ( gz . fd , 0L , SEEK_CUR )"		11222848	0					
ANR	11223054	Callee	lseek		11222848	0					
ANR	11223055	Identifier	lseek		11222848	0					
ANR	11223056	ArgumentList	gz . fd		11222848	1					
ANR	11223057	Argument	gz . fd		11222848	0					
ANR	11223058	MemberAccess	gz . fd		11222848	0					
ANR	11223059	Identifier	gz		11222848	0					
ANR	11223060	Identifier	fd		11222848	1					
ANR	11223061	Argument	0L		11222848	1					
ANR	11223062	PrimaryExpression	0L		11222848	0					
ANR	11223063	Argument	SEEK_CUR		11222848	2					
ANR	11223064	Identifier	SEEK_CUR		11222848	0					
ANR	11223065	MemberAccess	gz . left		11222848	1					
ANR	11223066	Identifier	gz		11222848	0					
ANR	11223067	Identifier	left		11222848	1					
ANR	11223068	ExpressionStatement	left = 0	292:4:10015:10023	11222848	23	True				
ANR	11223069	AssignmentExpression	left = 0		11222848	0		=			
ANR	11223070	Identifier	left		11222848	0					
ANR	11223071	PrimaryExpression	0		11222848	1					
ANR	11223072	ExpressionStatement	strm -> avail_in = gz . left	293:4:10029:10053	11222848	24	True				
ANR	11223073	AssignmentExpression	strm -> avail_in = gz . left		11222848	0		=			
ANR	11223074	PtrMemberAccess	strm -> avail_in		11222848	0					
ANR	11223075	Identifier	strm		11222848	0					
ANR	11223076	Identifier	avail_in		11222848	1					
ANR	11223077	MemberAccess	gz . left		11222848	1					
ANR	11223078	Identifier	gz		11222848	0					
ANR	11223079	Identifier	left		11222848	1					
ANR	11223080	ExpressionStatement	strm -> next_in = gz . next	294:4:10059:10082	11222848	25	True				
ANR	11223081	AssignmentExpression	strm -> next_in = gz . next		11222848	0		=			
ANR	11223082	PtrMemberAccess	strm -> next_in		11222848	0					
ANR	11223083	Identifier	strm		11222848	0					
ANR	11223084	Identifier	next_in		11222848	1					
ANR	11223085	MemberAccess	gz . next		11222848	1					
ANR	11223086	Identifier	gz		11222848	0					
ANR	11223087	Identifier	next		11222848	1					
ANR	11223088	ExpressionStatement	"crc = crc32 ( 0L , Z_NULL , 0 )"	295:4:10088:10114	11222848	26	True				
ANR	11223089	AssignmentExpression	"crc = crc32 ( 0L , Z_NULL , 0 )"		11222848	0		=			
ANR	11223090	Identifier	crc		11222848	0					
ANR	11223091	CallExpression	"crc32 ( 0L , Z_NULL , 0 )"		11222848	1					
ANR	11223092	Callee	crc32		11222848	0					
ANR	11223093	Identifier	crc32		11222848	0					
ANR	11223094	ArgumentList	0L		11222848	1					
ANR	11223095	Argument	0L		11222848	0					
ANR	11223096	PrimaryExpression	0L		11222848	0					
ANR	11223097	Argument	Z_NULL		11222848	1					
ANR	11223098	Identifier	Z_NULL		11222848	0					
ANR	11223099	Argument	0		11222848	2					
ANR	11223100	PrimaryExpression	0		11222848	0					
ANR	11223101	ExpressionStatement	have = full = 0	296:4:10120:10135	11222848	27	True				
ANR	11223102	AssignmentExpression	have = full = 0		11222848	0		=			
ANR	11223103	Identifier	have		11222848	0					
ANR	11223104	AssignmentExpression	full = 0		11222848	1		=			
ANR	11223105	Identifier	full		11222848	0					
ANR	11223106	PrimaryExpression	0		11222848	1					
ANR	11223107	DoStatement	do		11222848	28					
ANR	11223108	CompoundStatement		38:7:1003:1003	11222848	0					
ANR	11223109	IfStatement	if ( strm -> avail_in == 0 )		11222848	0					
ANR	11223110	Condition	strm -> avail_in == 0	299:12:10198:10216	11222848	0	True				
ANR	11223111	EqualityExpression	strm -> avail_in == 0		11222848	0		==			
ANR	11223112	PtrMemberAccess	strm -> avail_in		11222848	0					
ANR	11223113	Identifier	strm		11222848	0					
ANR	11223114	Identifier	avail_in		11222848	1					
ANR	11223115	PrimaryExpression	0		11222848	1					
ANR	11223116	CompoundStatement		40:33:1078:1078	11222848	1					
ANR	11223117	ExpressionStatement	readmore ( & gz )	300:12:10233:10246	11222848	0	True				
ANR	11223118	CallExpression	readmore ( & gz )		11222848	0					
ANR	11223119	Callee	readmore		11222848	0					
ANR	11223120	Identifier	readmore		11222848	0					
ANR	11223121	ArgumentList	& gz		11222848	1					
ANR	11223122	Argument	& gz		11222848	0					
ANR	11223123	UnaryOperationExpression	& gz		11222848	0					
ANR	11223124	UnaryOperator	&		11222848	0					
ANR	11223125	Identifier	gz		11222848	1					
ANR	11223126	ExpressionStatement	strm -> avail_in = gz . left	301:12:10260:10284	11222848	1	True				
ANR	11223127	AssignmentExpression	strm -> avail_in = gz . left		11222848	0		=			
ANR	11223128	PtrMemberAccess	strm -> avail_in		11222848	0					
ANR	11223129	Identifier	strm		11222848	0					
ANR	11223130	Identifier	avail_in		11222848	1					
ANR	11223131	MemberAccess	gz . left		11222848	1					
ANR	11223132	Identifier	gz		11222848	0					
ANR	11223133	Identifier	left		11222848	1					
ANR	11223134	ExpressionStatement	strm -> next_in = gz . next	302:12:10298:10321	11222848	2	True				
ANR	11223135	AssignmentExpression	strm -> next_in = gz . next		11222848	0		=			
ANR	11223136	PtrMemberAccess	strm -> next_in		11222848	0					
ANR	11223137	Identifier	strm		11222848	0					
ANR	11223138	Identifier	next_in		11222848	1					
ANR	11223139	MemberAccess	gz . next		11222848	1					
ANR	11223140	Identifier	gz		11222848	0					
ANR	11223141	Identifier	next		11222848	1					
ANR	11223142	ExpressionStatement	strm -> avail_out = DSIZE - have	306:8:10414:10444	11222848	1	True				
ANR	11223143	AssignmentExpression	strm -> avail_out = DSIZE - have		11222848	0		=			
ANR	11223144	PtrMemberAccess	strm -> avail_out		11222848	0					
ANR	11223145	Identifier	strm		11222848	0					
ANR	11223146	Identifier	avail_out		11222848	1					
ANR	11223147	AdditiveExpression	DSIZE - have		11222848	1		-			
ANR	11223148	Identifier	DSIZE		11222848	0					
ANR	11223149	Identifier	have		11222848	1					
ANR	11223150	ExpressionStatement	strm -> next_out = window + have	307:8:10454:10484	11222848	2	True				
ANR	11223151	AssignmentExpression	strm -> next_out = window + have		11222848	0		=			
ANR	11223152	PtrMemberAccess	strm -> next_out		11222848	0					
ANR	11223153	Identifier	strm		11222848	0					
ANR	11223154	Identifier	next_out		11222848	1					
ANR	11223155	AdditiveExpression	window + have		11222848	1		+			
ANR	11223156	Identifier	window		11222848	0					
ANR	11223157	Identifier	have		11222848	1					
ANR	11223158	ExpressionStatement	"ret = inflate ( strm , Z_BLOCK )"	310:8:10538:10566	11222848	3	True				
ANR	11223159	AssignmentExpression	"ret = inflate ( strm , Z_BLOCK )"		11222848	0		=			
ANR	11223160	Identifier	ret		11222848	0					
ANR	11223161	CallExpression	"inflate ( strm , Z_BLOCK )"		11222848	1					
ANR	11223162	Callee	inflate		11222848	0					
ANR	11223163	Identifier	inflate		11222848	0					
ANR	11223164	ArgumentList	strm		11222848	1					
ANR	11223165	Argument	strm		11222848	0					
ANR	11223166	Identifier	strm		11222848	0					
ANR	11223167	Argument	Z_BLOCK		11222848	1					
ANR	11223168	Identifier	Z_BLOCK		11222848	0					
ANR	11223169	IfStatement	if ( ret == Z_STREAM_ERROR )		11222848	4					
ANR	11223170	Condition	ret == Z_STREAM_ERROR	311:12:10580:10600	11222848	0	True				
ANR	11223171	EqualityExpression	ret == Z_STREAM_ERROR		11222848	0		==			
ANR	11223172	Identifier	ret		11222848	0					
ANR	11223173	Identifier	Z_STREAM_ERROR		11222848	1					
ANR	11223174	ExpressionStatement	"bye ( ""internal stream error!"" , """" )"	311:35:10603:10636	11222848	1	True				
ANR	11223175	CallExpression	"bye ( ""internal stream error!"" , """" )"		11222848	0					
ANR	11223176	Callee	bye		11222848	0					
ANR	11223177	Identifier	bye		11222848	0					
ANR	11223178	ArgumentList	"""internal stream error!"""		11222848	1					
ANR	11223179	Argument	"""internal stream error!"""		11222848	0					
ANR	11223180	PrimaryExpression	"""internal stream error!"""		11222848	0					
ANR	11223181	Argument	""""""		11222848	1					
ANR	11223182	PrimaryExpression	""""""		11222848	0					
ANR	11223183	IfStatement	if ( ret == Z_MEM_ERROR )		11222848	5					
ANR	11223184	Condition	ret == Z_MEM_ERROR	312:12:10650:10667	11222848	0	True				
ANR	11223185	EqualityExpression	ret == Z_MEM_ERROR		11222848	0		==			
ANR	11223186	Identifier	ret		11222848	0					
ANR	11223187	Identifier	Z_MEM_ERROR		11222848	1					
ANR	11223188	ExpressionStatement	"bye ( ""out of memory"" , """" )"	312:32:10670:10694	11222848	1	True				
ANR	11223189	CallExpression	"bye ( ""out of memory"" , """" )"		11222848	0					
ANR	11223190	Callee	bye		11222848	0					
ANR	11223191	Identifier	bye		11222848	0					
ANR	11223192	ArgumentList	"""out of memory"""		11222848	1					
ANR	11223193	Argument	"""out of memory"""		11222848	0					
ANR	11223194	PrimaryExpression	"""out of memory"""		11222848	0					
ANR	11223195	Argument	""""""		11222848	1					
ANR	11223196	PrimaryExpression	""""""		11222848	0					
ANR	11223197	IfStatement	if ( ret == Z_DATA_ERROR )		11222848	6					
ANR	11223198	Condition	ret == Z_DATA_ERROR	313:12:10708:10726	11222848	0	True				
ANR	11223199	EqualityExpression	ret == Z_DATA_ERROR		11222848	0		==			
ANR	11223200	Identifier	ret		11222848	0					
ANR	11223201	Identifier	Z_DATA_ERROR		11222848	1					
ANR	11223202	ExpressionStatement	"bye ( ""invalid compressed data--format violated in"" , name )"	314:12:10741:10797	11222848	1	True				
ANR	11223203	CallExpression	"bye ( ""invalid compressed data--format violated in"" , name )"		11222848	0					
ANR	11223204	Callee	bye		11222848	0					
ANR	11223205	Identifier	bye		11222848	0					
ANR	11223206	ArgumentList	"""invalid compressed data--format violated in"""		11222848	1					
ANR	11223207	Argument	"""invalid compressed data--format violated in"""		11222848	0					
ANR	11223208	PrimaryExpression	"""invalid compressed data--format violated in"""		11222848	0					
ANR	11223209	Argument	name		11222848	1					
ANR	11223210	Identifier	name		11222848	0					
ANR	11223211	ExpressionStatement	"crc = crc32 ( crc , window + have , DSIZE - have - strm -> avail_out )"	317:8:10860:10923	11222848	7	True				
ANR	11223212	AssignmentExpression	"crc = crc32 ( crc , window + have , DSIZE - have - strm -> avail_out )"		11222848	0		=			
ANR	11223213	Identifier	crc		11222848	0					
ANR	11223214	CallExpression	"crc32 ( crc , window + have , DSIZE - have - strm -> avail_out )"		11222848	1					
ANR	11223215	Callee	crc32		11222848	0					
ANR	11223216	Identifier	crc32		11222848	0					
ANR	11223217	ArgumentList	crc		11222848	1					
ANR	11223218	Argument	crc		11222848	0					
ANR	11223219	Identifier	crc		11222848	0					
ANR	11223220	Argument	window + have		11222848	1					
ANR	11223221	AdditiveExpression	window + have		11222848	0		+			
ANR	11223222	Identifier	window		11222848	0					
ANR	11223223	Identifier	have		11222848	1					
ANR	11223224	Argument	DSIZE - have - strm -> avail_out		11222848	2					
ANR	11223225	AdditiveExpression	DSIZE - have - strm -> avail_out		11222848	0		-			
ANR	11223226	Identifier	DSIZE		11222848	0					
ANR	11223227	AdditiveExpression	have - strm -> avail_out		11222848	1		-			
ANR	11223228	Identifier	have		11222848	0					
ANR	11223229	PtrMemberAccess	strm -> avail_out		11222848	1					
ANR	11223230	Identifier	strm		11222848	0					
ANR	11223231	Identifier	avail_out		11222848	1					
ANR	11223232	IfStatement	if ( strm -> avail_out )		11222848	8					
ANR	11223233	Condition	strm -> avail_out	318:12:10937:10951	11222848	0	True				
ANR	11223234	PtrMemberAccess	strm -> avail_out		11222848	0					
ANR	11223235	Identifier	strm		11222848	0					
ANR	11223236	Identifier	avail_out		11222848	1					
ANR	11223237	ExpressionStatement	have = DSIZE - strm -> avail_out	319:12:10966:10996	11222848	1	True				
ANR	11223238	AssignmentExpression	have = DSIZE - strm -> avail_out		11222848	0		=			
ANR	11223239	Identifier	have		11222848	0					
ANR	11223240	AdditiveExpression	DSIZE - strm -> avail_out		11222848	1		-			
ANR	11223241	Identifier	DSIZE		11222848	0					
ANR	11223242	PtrMemberAccess	strm -> avail_out		11222848	1					
ANR	11223243	Identifier	strm		11222848	0					
ANR	11223244	Identifier	avail_out		11222848	1					
ANR	11223245	ElseStatement	else		11222848	0					
ANR	11223246	CompoundStatement		61:13:1870:1870	11222848	0					
ANR	11223247	ExpressionStatement	have = 0	321:12:11025:11033	11222848	0	True				
ANR	11223248	AssignmentExpression	have = 0		11222848	0		=			
ANR	11223249	Identifier	have		11222848	0					
ANR	11223250	PrimaryExpression	0		11222848	1					
ANR	11223251	ExpressionStatement	full = 1	322:12:11047:11055	11222848	1	True				
ANR	11223252	AssignmentExpression	full = 1		11222848	0		=			
ANR	11223253	Identifier	full		11222848	0					
ANR	11223254	PrimaryExpression	1		11222848	1					
ANR	11223255	IfStatement	if ( strm -> data_type & 128 )		11222848	9					
ANR	11223256	Condition	strm -> data_type & 128	326:12:11115:11135	11222848	0	True				
ANR	11223257	BitAndExpression	strm -> data_type & 128		11222848	0		&			
ANR	11223258	PtrMemberAccess	strm -> data_type		11222848	0					
ANR	11223259	Identifier	strm		11222848	0					
ANR	11223260	Identifier	data_type		11222848	1					
ANR	11223261	PrimaryExpression	128		11222848	1					
ANR	11223262	CompoundStatement		67:35:1997:1997	11222848	1					
ANR	11223263	IfStatement	if ( strm -> data_type & 64 )		11222848	0					
ANR	11223264	Condition	strm -> data_type & 64	327:16:11156:11175	11222848	0	True				
ANR	11223265	BitAndExpression	strm -> data_type & 64		11222848	0		&			
ANR	11223266	PtrMemberAccess	strm -> data_type		11222848	0					
ANR	11223267	Identifier	strm		11222848	0					
ANR	11223268	Identifier	data_type		11222848	1					
ANR	11223269	PrimaryExpression	64		11222848	1					
ANR	11223270	ExpressionStatement	left = strm -> data_type & 0x1f	328:16:11194:11223	11222848	1	True				
ANR	11223271	AssignmentExpression	left = strm -> data_type & 0x1f		11222848	0		=			
ANR	11223272	Identifier	left		11222848	0					
ANR	11223273	BitAndExpression	strm -> data_type & 0x1f		11222848	1		&			
ANR	11223274	PtrMemberAccess	strm -> data_type		11222848	0					
ANR	11223275	Identifier	strm		11222848	0					
ANR	11223276	Identifier	data_type		11222848	1					
ANR	11223277	PrimaryExpression	0x1f		11222848	1					
ANR	11223278	ElseStatement	else		11222848	0					
ANR	11223279	CompoundStatement		70:17:2101:2101	11222848	0					
ANR	11223280	ExpressionStatement	lastbit = strm -> data_type & 0x1f	330:16:11260:11292	11222848	0	True				
ANR	11223281	AssignmentExpression	lastbit = strm -> data_type & 0x1f		11222848	0		=			
ANR	11223282	Identifier	lastbit		11222848	0					
ANR	11223283	BitAndExpression	strm -> data_type & 0x1f		11222848	1		&			
ANR	11223284	PtrMemberAccess	strm -> data_type		11222848	0					
ANR	11223285	Identifier	strm		11222848	0					
ANR	11223286	Identifier	data_type		11222848	1					
ANR	11223287	PrimaryExpression	0x1f		11222848	1					
ANR	11223288	ExpressionStatement	"lastoff = lseek ( gz . fd , 0L , SEEK_CUR ) - strm -> avail_in"	331:16:11310:11363	11222848	1	True				
ANR	11223289	AssignmentExpression	"lastoff = lseek ( gz . fd , 0L , SEEK_CUR ) - strm -> avail_in"		11222848	0		=			
ANR	11223290	Identifier	lastoff		11222848	0					
ANR	11223291	AdditiveExpression	"lseek ( gz . fd , 0L , SEEK_CUR ) - strm -> avail_in"		11222848	1		-			
ANR	11223292	CallExpression	"lseek ( gz . fd , 0L , SEEK_CUR )"		11222848	0					
ANR	11223293	Callee	lseek		11222848	0					
ANR	11223294	Identifier	lseek		11222848	0					
ANR	11223295	ArgumentList	gz . fd		11222848	1					
ANR	11223296	Argument	gz . fd		11222848	0					
ANR	11223297	MemberAccess	gz . fd		11222848	0					
ANR	11223298	Identifier	gz		11222848	0					
ANR	11223299	Identifier	fd		11222848	1					
ANR	11223300	Argument	0L		11222848	1					
ANR	11223301	PrimaryExpression	0L		11222848	0					
ANR	11223302	Argument	SEEK_CUR		11222848	2					
ANR	11223303	Identifier	SEEK_CUR		11222848	0					
ANR	11223304	PtrMemberAccess	strm -> avail_in		11222848	1					
ANR	11223305	Identifier	strm		11222848	0					
ANR	11223306	Identifier	avail_in		11222848	1					
ANR	11223307	Condition	ret != Z_STREAM_END	334:13:11402:11420	11222848	1	True				
ANR	11223308	EqualityExpression	ret != Z_STREAM_END		11222848	0		!=			
ANR	11223309	Identifier	ret		11222848	0					
ANR	11223310	Identifier	Z_STREAM_END		11222848	1					
ANR	11223311	ExpressionStatement	inflateEnd ( strm )	335:4:11428:11444	11222848	29	True				
ANR	11223312	CallExpression	inflateEnd ( strm )		11222848	0					
ANR	11223313	Callee	inflateEnd		11222848	0					
ANR	11223314	Identifier	inflateEnd		11222848	0					
ANR	11223315	ArgumentList	strm		11222848	1					
ANR	11223316	Argument	strm		11222848	0					
ANR	11223317	Identifier	strm		11222848	0					
ANR	11223318	ExpressionStatement	gz . left = strm -> avail_in	336:4:11450:11474	11222848	30	True				
ANR	11223319	AssignmentExpression	gz . left = strm -> avail_in		11222848	0		=			
ANR	11223320	MemberAccess	gz . left		11222848	0					
ANR	11223321	Identifier	gz		11222848	0					
ANR	11223322	Identifier	left		11222848	1					
ANR	11223323	PtrMemberAccess	strm -> avail_in		11222848	1					
ANR	11223324	Identifier	strm		11222848	0					
ANR	11223325	Identifier	avail_in		11222848	1					
ANR	11223326	ExpressionStatement	gz . next = strm -> next_in	337:4:11480:11503	11222848	31	True				
ANR	11223327	AssignmentExpression	gz . next = strm -> next_in		11222848	0		=			
ANR	11223328	MemberAccess	gz . next		11222848	0					
ANR	11223329	Identifier	gz		11222848	0					
ANR	11223330	Identifier	next		11222848	1					
ANR	11223331	PtrMemberAccess	strm -> next_in		11222848	1					
ANR	11223332	Identifier	strm		11222848	0					
ANR	11223333	Identifier	next_in		11222848	1					
ANR	11223334	ExpressionStatement	"end = lseek ( gz . fd , 0L , SEEK_CUR ) - gz . left"	340:4:11572:11614	11222848	32	True				
ANR	11223335	AssignmentExpression	"end = lseek ( gz . fd , 0L , SEEK_CUR ) - gz . left"		11222848	0		=			
ANR	11223336	Identifier	end		11222848	0					
ANR	11223337	AdditiveExpression	"lseek ( gz . fd , 0L , SEEK_CUR ) - gz . left"		11222848	1		-			
ANR	11223338	CallExpression	"lseek ( gz . fd , 0L , SEEK_CUR )"		11222848	0					
ANR	11223339	Callee	lseek		11222848	0					
ANR	11223340	Identifier	lseek		11222848	0					
ANR	11223341	ArgumentList	gz . fd		11222848	1					
ANR	11223342	Argument	gz . fd		11222848	0					
ANR	11223343	MemberAccess	gz . fd		11222848	0					
ANR	11223344	Identifier	gz		11222848	0					
ANR	11223345	Identifier	fd		11222848	1					
ANR	11223346	Argument	0L		11222848	1					
ANR	11223347	PrimaryExpression	0L		11222848	0					
ANR	11223348	Argument	SEEK_CUR		11222848	2					
ANR	11223349	Identifier	SEEK_CUR		11222848	0					
ANR	11223350	MemberAccess	gz . left		11222848	1					
ANR	11223351	Identifier	gz		11222848	0					
ANR	11223352	Identifier	left		11222848	1					
ANR	11223353	IfStatement	if ( crc != read4 ( & gz ) )		11222848	33					
ANR	11223354	Condition	crc != read4 ( & gz )	343:8:11681:11697	11222848	0	True				
ANR	11223355	EqualityExpression	crc != read4 ( & gz )		11222848	0		!=			
ANR	11223356	Identifier	crc		11222848	0					
ANR	11223357	CallExpression	read4 ( & gz )		11222848	1					
ANR	11223358	Callee	read4		11222848	0					
ANR	11223359	Identifier	read4		11222848	0					
ANR	11223360	ArgumentList	& gz		11222848	1					
ANR	11223361	Argument	& gz		11222848	0					
ANR	11223362	UnaryOperationExpression	& gz		11222848	0					
ANR	11223363	UnaryOperator	&		11222848	0					
ANR	11223364	Identifier	gz		11222848	1					
ANR	11223365	ExpressionStatement	"bye ( ""invalid compressed data--crc mismatch in "" , name )"	344:8:11708:11762	11222848	1	True				
ANR	11223366	CallExpression	"bye ( ""invalid compressed data--crc mismatch in "" , name )"		11222848	0					
ANR	11223367	Callee	bye		11222848	0					
ANR	11223368	Identifier	bye		11222848	0					
ANR	11223369	ArgumentList	"""invalid compressed data--crc mismatch in """		11222848	1					
ANR	11223370	Argument	"""invalid compressed data--crc mismatch in """		11222848	0					
ANR	11223371	PrimaryExpression	"""invalid compressed data--crc mismatch in """		11222848	0					
ANR	11223372	Argument	name		11222848	1					
ANR	11223373	Identifier	name		11222848	0					
ANR	11223374	ExpressionStatement	tot = strm -> total_out	345:4:11768:11789	11222848	34	True				
ANR	11223375	AssignmentExpression	tot = strm -> total_out		11222848	0		=			
ANR	11223376	Identifier	tot		11222848	0					
ANR	11223377	PtrMemberAccess	strm -> total_out		11222848	1					
ANR	11223378	Identifier	strm		11222848	0					
ANR	11223379	Identifier	total_out		11222848	1					
ANR	11223380	IfStatement	if ( ( tot & 0xffffffffUL ) != read4 ( & gz ) )		11222848	35					
ANR	11223381	Condition	( tot & 0xffffffffUL ) != read4 ( & gz )	346:8:11799:11832	11222848	0	True				
ANR	11223382	EqualityExpression	( tot & 0xffffffffUL ) != read4 ( & gz )		11222848	0		!=			
ANR	11223383	BitAndExpression	tot & 0xffffffffUL		11222848	0		&			
ANR	11223384	Identifier	tot		11222848	0					
ANR	11223385	PrimaryExpression	0xffffffffUL		11222848	1					
ANR	11223386	CallExpression	read4 ( & gz )		11222848	1					
ANR	11223387	Callee	read4		11222848	0					
ANR	11223388	Identifier	read4		11222848	0					
ANR	11223389	ArgumentList	& gz		11222848	1					
ANR	11223390	Argument	& gz		11222848	0					
ANR	11223391	UnaryOperationExpression	& gz		11222848	0					
ANR	11223392	UnaryOperator	&		11222848	0					
ANR	11223393	Identifier	gz		11222848	1					
ANR	11223394	ExpressionStatement	"bye ( ""invalid compressed data--length mismatch in"" , name )"	347:8:11843:11899	11222848	1	True				
ANR	11223395	CallExpression	"bye ( ""invalid compressed data--length mismatch in"" , name )"		11222848	0					
ANR	11223396	Callee	bye		11222848	0					
ANR	11223397	Identifier	bye		11222848	0					
ANR	11223398	ArgumentList	"""invalid compressed data--length mismatch in"""		11222848	1					
ANR	11223399	Argument	"""invalid compressed data--length mismatch in"""		11222848	0					
ANR	11223400	PrimaryExpression	"""invalid compressed data--length mismatch in"""		11222848	0					
ANR	11223401	Argument	name		11222848	1					
ANR	11223402	Identifier	name		11222848	0					
ANR	11223403	IfStatement	if ( gz . left || readin ( & gz ) )		11222848	36					
ANR	11223404	Condition	gz . left || readin ( & gz )	350:8:11948:11969	11222848	0	True				
ANR	11223405	OrExpression	gz . left || readin ( & gz )		11222848	0		||			
ANR	11223406	MemberAccess	gz . left		11222848	0					
ANR	11223407	Identifier	gz		11222848	0					
ANR	11223408	Identifier	left		11222848	1					
ANR	11223409	CallExpression	readin ( & gz )		11222848	1					
ANR	11223410	Callee	readin		11222848	0					
ANR	11223411	Identifier	readin		11222848	0					
ANR	11223412	ArgumentList	& gz		11222848	1					
ANR	11223413	Argument	& gz		11222848	0					
ANR	11223414	UnaryOperationExpression	& gz		11222848	0					
ANR	11223415	UnaryOperator	&		11222848	0					
ANR	11223416	Identifier	gz		11222848	1					
ANR	11223417	ExpressionStatement	"fprintf ( stderr , ""gzappend warning: junk at end of gzip file overwritten\\n"" )"	351:8:11980:12067	11222848	1	True				
ANR	11223418	CallExpression	"fprintf ( stderr , ""gzappend warning: junk at end of gzip file overwritten\\n"" )"		11222848	0					
ANR	11223419	Callee	fprintf		11222848	0					
ANR	11223420	Identifier	fprintf		11222848	0					
ANR	11223421	ArgumentList	stderr		11222848	1					
ANR	11223422	Argument	stderr		11222848	0					
ANR	11223423	Identifier	stderr		11222848	0					
ANR	11223424	Argument	"""gzappend warning: junk at end of gzip file overwritten\\n"""		11222848	1					
ANR	11223425	PrimaryExpression	"""gzappend warning: junk at end of gzip file overwritten\\n"""		11222848	0					
ANR	11223426	ExpressionStatement	"lseek ( gz . fd , lastoff - ( lastbit != 0 ) , SEEK_SET )"	355:4:12105:12153	11222848	37	True				
ANR	11223427	CallExpression	"lseek ( gz . fd , lastoff - ( lastbit != 0 ) , SEEK_SET )"		11222848	0					
ANR	11223428	Callee	lseek		11222848	0					
ANR	11223429	Identifier	lseek		11222848	0					
ANR	11223430	ArgumentList	gz . fd		11222848	1					
ANR	11223431	Argument	gz . fd		11222848	0					
ANR	11223432	MemberAccess	gz . fd		11222848	0					
ANR	11223433	Identifier	gz		11222848	0					
ANR	11223434	Identifier	fd		11222848	1					
ANR	11223435	Argument	lastoff - ( lastbit != 0 )		11222848	1					
ANR	11223436	AdditiveExpression	lastoff - ( lastbit != 0 )		11222848	0		-			
ANR	11223437	Identifier	lastoff		11222848	0					
ANR	11223438	EqualityExpression	lastbit != 0		11222848	1		!=			
ANR	11223439	Identifier	lastbit		11222848	0					
ANR	11223440	PrimaryExpression	0		11222848	1					
ANR	11223441	Argument	SEEK_SET		11222848	2					
ANR	11223442	Identifier	SEEK_SET		11222848	0					
ANR	11223443	IfStatement	"if ( read ( gz . fd , gz . buf , 1 ) != 1 )"		11222848	38					
ANR	11223444	Condition	"read ( gz . fd , gz . buf , 1 ) != 1"	356:8:12163:12189	11222848	0	True				
ANR	11223445	EqualityExpression	"read ( gz . fd , gz . buf , 1 ) != 1"		11222848	0		!=			
ANR	11223446	CallExpression	"read ( gz . fd , gz . buf , 1 )"		11222848	0					
ANR	11223447	Callee	read		11222848	0					
ANR	11223448	Identifier	read		11222848	0					
ANR	11223449	ArgumentList	gz . fd		11222848	1					
ANR	11223450	Argument	gz . fd		11222848	0					
ANR	11223451	MemberAccess	gz . fd		11222848	0					
ANR	11223452	Identifier	gz		11222848	0					
ANR	11223453	Identifier	fd		11222848	1					
ANR	11223454	Argument	gz . buf		11222848	1					
ANR	11223455	MemberAccess	gz . buf		11222848	0					
ANR	11223456	Identifier	gz		11222848	0					
ANR	11223457	Identifier	buf		11222848	1					
ANR	11223458	Argument	1		11222848	2					
ANR	11223459	PrimaryExpression	1		11222848	0					
ANR	11223460	PrimaryExpression	1		11222848	1					
ANR	11223461	ExpressionStatement	"bye ( ""reading after seek on "" , name )"	356:37:12192:12227	11222848	1	True				
ANR	11223462	CallExpression	"bye ( ""reading after seek on "" , name )"		11222848	0					
ANR	11223463	Callee	bye		11222848	0					
ANR	11223464	Identifier	bye		11222848	0					
ANR	11223465	ArgumentList	"""reading after seek on """		11222848	1					
ANR	11223466	Argument	"""reading after seek on """		11222848	0					
ANR	11223467	PrimaryExpression	"""reading after seek on """		11222848	0					
ANR	11223468	Argument	name		11222848	1					
ANR	11223469	Identifier	name		11222848	0					
ANR	11223470	ExpressionStatement	* gz . buf = ( unsigned char ) ( * gz . buf ^ ( 1 << ( ( 8 - lastbit ) & 7 ) ) )	357:4:12233:12296	11222848	39	True				
ANR	11223471	AssignmentExpression	* gz . buf = ( unsigned char ) ( * gz . buf ^ ( 1 << ( ( 8 - lastbit ) & 7 ) ) )		11222848	0		=			
ANR	11223472	UnaryOperationExpression	* gz . buf		11222848	0					
ANR	11223473	UnaryOperator	*		11222848	0					
ANR	11223474	MemberAccess	gz . buf		11222848	1					
ANR	11223475	Identifier	gz		11222848	0					
ANR	11223476	Identifier	buf		11222848	1					
ANR	11223477	CastExpression	( unsigned char ) ( * gz . buf ^ ( 1 << ( ( 8 - lastbit ) & 7 ) ) )		11222848	1					
ANR	11223478	CastTarget	unsigned char		11222848	0					
ANR	11223479	ExclusiveOrExpression	* gz . buf ^ ( 1 << ( ( 8 - lastbit ) & 7 ) )		11222848	1		^			
ANR	11223480	UnaryOperationExpression	* gz . buf		11222848	0					
ANR	11223481	UnaryOperator	*		11222848	0					
ANR	11223482	MemberAccess	gz . buf		11222848	1					
ANR	11223483	Identifier	gz		11222848	0					
ANR	11223484	Identifier	buf		11222848	1					
ANR	11223485	ShiftExpression	1 << ( ( 8 - lastbit ) & 7 )		11222848	1		<<			
ANR	11223486	PrimaryExpression	1		11222848	0					
ANR	11223487	BitAndExpression	( 8 - lastbit ) & 7		11222848	1		&			
ANR	11223488	AdditiveExpression	8 - lastbit		11222848	0		-			
ANR	11223489	PrimaryExpression	8		11222848	0					
ANR	11223490	Identifier	lastbit		11222848	1					
ANR	11223491	PrimaryExpression	7		11222848	1					
ANR	11223492	ExpressionStatement	"lseek ( gz . fd , - 1L , SEEK_CUR )"	358:4:12302:12329	11222848	40	True				
ANR	11223493	CallExpression	"lseek ( gz . fd , - 1L , SEEK_CUR )"		11222848	0					
ANR	11223494	Callee	lseek		11222848	0					
ANR	11223495	Identifier	lseek		11222848	0					
ANR	11223496	ArgumentList	gz . fd		11222848	1					
ANR	11223497	Argument	gz . fd		11222848	0					
ANR	11223498	MemberAccess	gz . fd		11222848	0					
ANR	11223499	Identifier	gz		11222848	0					
ANR	11223500	Identifier	fd		11222848	1					
ANR	11223501	Argument	- 1L		11222848	1					
ANR	11223502	UnaryOperationExpression	- 1L		11222848	0					
ANR	11223503	UnaryOperator	-		11222848	0					
ANR	11223504	PrimaryExpression	1L		11222848	1					
ANR	11223505	Argument	SEEK_CUR		11222848	2					
ANR	11223506	Identifier	SEEK_CUR		11222848	0					
ANR	11223507	IfStatement	"if ( write ( gz . fd , gz . buf , 1 ) != 1 )"		11222848	41					
ANR	11223508	Condition	"write ( gz . fd , gz . buf , 1 ) != 1"	359:8:12339:12366	11222848	0	True				
ANR	11223509	EqualityExpression	"write ( gz . fd , gz . buf , 1 ) != 1"		11222848	0		!=			
ANR	11223510	CallExpression	"write ( gz . fd , gz . buf , 1 )"		11222848	0					
ANR	11223511	Callee	write		11222848	0					
ANR	11223512	Identifier	write		11222848	0					
ANR	11223513	ArgumentList	gz . fd		11222848	1					
ANR	11223514	Argument	gz . fd		11222848	0					
ANR	11223515	MemberAccess	gz . fd		11222848	0					
ANR	11223516	Identifier	gz		11222848	0					
ANR	11223517	Identifier	fd		11222848	1					
ANR	11223518	Argument	gz . buf		11222848	1					
ANR	11223519	MemberAccess	gz . buf		11222848	0					
ANR	11223520	Identifier	gz		11222848	0					
ANR	11223521	Identifier	buf		11222848	1					
ANR	11223522	Argument	1		11222848	2					
ANR	11223523	PrimaryExpression	1		11222848	0					
ANR	11223524	PrimaryExpression	1		11222848	1					
ANR	11223525	ExpressionStatement	"bye ( ""writing after seek to "" , name )"	359:38:12369:12404	11222848	1	True				
ANR	11223526	CallExpression	"bye ( ""writing after seek to "" , name )"		11222848	0					
ANR	11223527	Callee	bye		11222848	0					
ANR	11223528	Identifier	bye		11222848	0					
ANR	11223529	ArgumentList	"""writing after seek to """		11222848	1					
ANR	11223530	Argument	"""writing after seek to """		11222848	0					
ANR	11223531	PrimaryExpression	"""writing after seek to """		11222848	0					
ANR	11223532	Argument	name		11222848	1					
ANR	11223533	Identifier	name		11222848	0					
ANR	11223534	IfStatement	if ( full )		11222848	42					
ANR	11223535	Condition	full	362:8:12485:12488	11222848	0	True				
ANR	11223536	Identifier	full		11222848	0					
ANR	11223537	CompoundStatement		103:14:3350:3350	11222848	1					
ANR	11223538	ExpressionStatement	"rotate ( window , DSIZE , have )"	363:8:12501:12528	11222848	0	True				
ANR	11223539	CallExpression	"rotate ( window , DSIZE , have )"		11222848	0					
ANR	11223540	Callee	rotate		11222848	0					
ANR	11223541	Identifier	rotate		11222848	0					
ANR	11223542	ArgumentList	window		11222848	1					
ANR	11223543	Argument	window		11222848	0					
ANR	11223544	Identifier	window		11222848	0					
ANR	11223545	Argument	DSIZE		11222848	1					
ANR	11223546	Identifier	DSIZE		11222848	0					
ANR	11223547	Argument	have		11222848	2					
ANR	11223548	Identifier	have		11222848	0					
ANR	11223549	ExpressionStatement	have = DSIZE	364:8:12538:12550	11222848	1	True				
ANR	11223550	AssignmentExpression	have = DSIZE		11222848	0		=			
ANR	11223551	Identifier	have		11222848	0					
ANR	11223552	Identifier	DSIZE		11222848	1					
ANR	11223553	ExpressionStatement	"ret = deflateInit2 ( strm , level , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY )"	368:4:12641:12712	11222848	43	True				
ANR	11223554	AssignmentExpression	"ret = deflateInit2 ( strm , level , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY )"		11222848	0		=			
ANR	11223555	Identifier	ret		11222848	0					
ANR	11223556	CallExpression	"deflateInit2 ( strm , level , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY )"		11222848	1					
ANR	11223557	Callee	deflateInit2		11222848	0					
ANR	11223558	Identifier	deflateInit2		11222848	0					
ANR	11223559	ArgumentList	strm		11222848	1					
ANR	11223560	Argument	strm		11222848	0					
ANR	11223561	Identifier	strm		11222848	0					
ANR	11223562	Argument	level		11222848	1					
ANR	11223563	Identifier	level		11222848	0					
ANR	11223564	Argument	Z_DEFLATED		11222848	2					
ANR	11223565	Identifier	Z_DEFLATED		11222848	0					
ANR	11223566	Argument	- 15		11222848	3					
ANR	11223567	UnaryOperationExpression	- 15		11222848	0					
ANR	11223568	UnaryOperator	-		11222848	0					
ANR	11223569	PrimaryExpression	15		11222848	1					
ANR	11223570	Argument	8		11222848	4					
ANR	11223571	PrimaryExpression	8		11222848	0					
ANR	11223572	Argument	Z_DEFAULT_STRATEGY		11222848	5					
ANR	11223573	Identifier	Z_DEFAULT_STRATEGY		11222848	0					
ANR	11223574	IfStatement	if ( ret != Z_OK )		11222848	44					
ANR	11223575	Condition	ret != Z_OK	369:8:12722:12732	11222848	0	True				
ANR	11223576	EqualityExpression	ret != Z_OK		11222848	0		!=			
ANR	11223577	Identifier	ret		11222848	0					
ANR	11223578	Identifier	Z_OK		11222848	1					
ANR	11223579	ExpressionStatement	"bye ( ""out of memory"" , """" )"	369:21:12735:12759	11222848	1	True				
ANR	11223580	CallExpression	"bye ( ""out of memory"" , """" )"		11222848	0					
ANR	11223581	Callee	bye		11222848	0					
ANR	11223582	Identifier	bye		11222848	0					
ANR	11223583	ArgumentList	"""out of memory"""		11222848	1					
ANR	11223584	Argument	"""out of memory"""		11222848	0					
ANR	11223585	PrimaryExpression	"""out of memory"""		11222848	0					
ANR	11223586	Argument	""""""		11222848	1					
ANR	11223587	PrimaryExpression	""""""		11222848	0					
ANR	11223588	ExpressionStatement	"deflateSetDictionary ( strm , window , have )"	370:4:12765:12805	11222848	45	True				
ANR	11223589	CallExpression	"deflateSetDictionary ( strm , window , have )"		11222848	0					
ANR	11223590	Callee	deflateSetDictionary		11222848	0					
ANR	11223591	Identifier	deflateSetDictionary		11222848	0					
ANR	11223592	ArgumentList	strm		11222848	1					
ANR	11223593	Argument	strm		11222848	0					
ANR	11223594	Identifier	strm		11222848	0					
ANR	11223595	Argument	window		11222848	1					
ANR	11223596	Identifier	window		11222848	0					
ANR	11223597	Argument	have		11222848	2					
ANR	11223598	Identifier	have		11222848	0					
ANR	11223599	ExpressionStatement	strm -> adler = crc	371:4:12811:12828	11222848	46	True				
ANR	11223600	AssignmentExpression	strm -> adler = crc		11222848	0		=			
ANR	11223601	PtrMemberAccess	strm -> adler		11222848	0					
ANR	11223602	Identifier	strm		11222848	0					
ANR	11223603	Identifier	adler		11222848	1					
ANR	11223604	Identifier	crc		11222848	1					
ANR	11223605	ExpressionStatement	strm -> total_in = tot	372:4:12834:12854	11222848	47	True				
ANR	11223606	AssignmentExpression	strm -> total_in = tot		11222848	0		=			
ANR	11223607	PtrMemberAccess	strm -> total_in		11222848	0					
ANR	11223608	Identifier	strm		11222848	0					
ANR	11223609	Identifier	total_in		11222848	1					
ANR	11223610	Identifier	tot		11222848	1					
ANR	11223611	IfStatement	if ( left )		11222848	48					
ANR	11223612	Condition	left	373:8:12864:12867	11222848	0	True				
ANR	11223613	Identifier	left		11222848	0					
ANR	11223614	CompoundStatement		114:14:3729:3729	11222848	1					
ANR	11223615	ExpressionStatement	"lseek ( gz . fd , -- end , SEEK_SET )"	374:8:12880:12909	11222848	0	True				
ANR	11223616	CallExpression	"lseek ( gz . fd , -- end , SEEK_SET )"		11222848	0					
ANR	11223617	Callee	lseek		11222848	0					
ANR	11223618	Identifier	lseek		11222848	0					
ANR	11223619	ArgumentList	gz . fd		11222848	1					
ANR	11223620	Argument	gz . fd		11222848	0					
ANR	11223621	MemberAccess	gz . fd		11222848	0					
ANR	11223622	Identifier	gz		11222848	0					
ANR	11223623	Identifier	fd		11222848	1					
ANR	11223624	Argument	-- end		11222848	1					
ANR	11223625	UnaryExpression	-- end		11222848	0					
ANR	11223626	IncDec	--		11222848	0					
ANR	11223627	Identifier	end		11222848	1					
ANR	11223628	Argument	SEEK_SET		11222848	2					
ANR	11223629	Identifier	SEEK_SET		11222848	0					
ANR	11223630	IfStatement	"if ( read ( gz . fd , gz . buf , 1 ) != 1 )"		11222848	1					
ANR	11223631	Condition	"read ( gz . fd , gz . buf , 1 ) != 1"	375:12:12923:12949	11222848	0	True				
ANR	11223632	EqualityExpression	"read ( gz . fd , gz . buf , 1 ) != 1"		11222848	0		!=			
ANR	11223633	CallExpression	"read ( gz . fd , gz . buf , 1 )"		11222848	0					
ANR	11223634	Callee	read		11222848	0					
ANR	11223635	Identifier	read		11222848	0					
ANR	11223636	ArgumentList	gz . fd		11222848	1					
ANR	11223637	Argument	gz . fd		11222848	0					
ANR	11223638	MemberAccess	gz . fd		11222848	0					
ANR	11223639	Identifier	gz		11222848	0					
ANR	11223640	Identifier	fd		11222848	1					
ANR	11223641	Argument	gz . buf		11222848	1					
ANR	11223642	MemberAccess	gz . buf		11222848	0					
ANR	11223643	Identifier	gz		11222848	0					
ANR	11223644	Identifier	buf		11222848	1					
ANR	11223645	Argument	1		11222848	2					
ANR	11223646	PrimaryExpression	1		11222848	0					
ANR	11223647	PrimaryExpression	1		11222848	1					
ANR	11223648	ExpressionStatement	"bye ( ""reading after seek on "" , name )"	375:41:12952:12987	11222848	1	True				
ANR	11223649	CallExpression	"bye ( ""reading after seek on "" , name )"		11222848	0					
ANR	11223650	Callee	bye		11222848	0					
ANR	11223651	Identifier	bye		11222848	0					
ANR	11223652	ArgumentList	"""reading after seek on """		11222848	1					
ANR	11223653	Argument	"""reading after seek on """		11222848	0					
ANR	11223654	PrimaryExpression	"""reading after seek on """		11222848	0					
ANR	11223655	Argument	name		11222848	1					
ANR	11223656	Identifier	name		11222848	0					
ANR	11223657	ExpressionStatement	"deflatePrime ( strm , 8 - left , * gz . buf )"	376:8:12997:13034	11222848	2	True				
ANR	11223658	CallExpression	"deflatePrime ( strm , 8 - left , * gz . buf )"		11222848	0					
ANR	11223659	Callee	deflatePrime		11222848	0					
ANR	11223660	Identifier	deflatePrime		11222848	0					
ANR	11223661	ArgumentList	strm		11222848	1					
ANR	11223662	Argument	strm		11222848	0					
ANR	11223663	Identifier	strm		11222848	0					
ANR	11223664	Argument	8 - left		11222848	1					
ANR	11223665	AdditiveExpression	8 - left		11222848	0		-			
ANR	11223666	PrimaryExpression	8		11222848	0					
ANR	11223667	Identifier	left		11222848	1					
ANR	11223668	Argument	* gz . buf		11222848	2					
ANR	11223669	UnaryOperationExpression	* gz . buf		11222848	0					
ANR	11223670	UnaryOperator	*		11222848	0					
ANR	11223671	MemberAccess	gz . buf		11222848	1					
ANR	11223672	Identifier	gz		11222848	0					
ANR	11223673	Identifier	buf		11222848	1					
ANR	11223674	ExpressionStatement	"lseek ( gz . fd , end , SEEK_SET )"	378:4:13046:13073	11222848	49	True				
ANR	11223675	CallExpression	"lseek ( gz . fd , end , SEEK_SET )"		11222848	0					
ANR	11223676	Callee	lseek		11222848	0					
ANR	11223677	Identifier	lseek		11222848	0					
ANR	11223678	ArgumentList	gz . fd		11222848	1					
ANR	11223679	Argument	gz . fd		11222848	0					
ANR	11223680	MemberAccess	gz . fd		11222848	0					
ANR	11223681	Identifier	gz		11222848	0					
ANR	11223682	Identifier	fd		11222848	1					
ANR	11223683	Argument	end		11222848	1					
ANR	11223684	Identifier	end		11222848	0					
ANR	11223685	Argument	SEEK_SET		11222848	2					
ANR	11223686	Identifier	SEEK_SET		11222848	0					
ANR	11223687	ExpressionStatement	free ( window )	381:4:13110:13122	11222848	50	True				
ANR	11223688	CallExpression	free ( window )		11222848	0					
ANR	11223689	Callee	free		11222848	0					
ANR	11223690	Identifier	free		11222848	0					
ANR	11223691	ArgumentList	window		11222848	1					
ANR	11223692	Argument	window		11222848	0					
ANR	11223693	Identifier	window		11222848	0					
ANR	11223694	ExpressionStatement	free ( gz . buf )	382:4:13128:13140	11222848	51	True				
ANR	11223695	CallExpression	free ( gz . buf )		11222848	0					
ANR	11223696	Callee	free		11222848	0					
ANR	11223697	Identifier	free		11222848	0					
ANR	11223698	ArgumentList	gz . buf		11222848	1					
ANR	11223699	Argument	gz . buf		11222848	0					
ANR	11223700	MemberAccess	gz . buf		11222848	0					
ANR	11223701	Identifier	gz		11222848	0					
ANR	11223702	Identifier	buf		11222848	1					
ANR	11223703	ReturnStatement	return gz . fd ;	383:4:13146:13158	11222848	52	True				
ANR	11223704	MemberAccess	gz . fd		11222848	0					
ANR	11223705	Identifier	gz		11222848	0					
ANR	11223706	Identifier	fd		11222848	1					
ANR	11223707	ReturnType	local int		11222848	1					
ANR	11223708	Identifier	gzscan		11222848	2					
ANR	11223709	ParameterList	"char * name , z_stream * strm , int level"		11222848	3					
ANR	11223710	Parameter	char * name	259:17:9101:9110	11222848	0	True				
ANR	11223711	ParameterType	char *		11222848	0					
ANR	11223712	Identifier	name		11222848	1					
ANR	11223713	Parameter	z_stream * strm	259:29:9113:9126	11222848	1	True				
ANR	11223714	ParameterType	z_stream *		11222848	0					
ANR	11223715	Identifier	strm		11222848	1					
ANR	11223716	Parameter	int level	259:45:9129:9137	11222848	2	True				
ANR	11223717	ParameterType	int		11222848	0					
ANR	11223718	Identifier	level		11222848	1					
ANR	11223719	CFGEntryNode	ENTRY		11222848		True				
ANR	11223720	CFGExitNode	EXIT		11222848		True				
ANR	11223721	Symbol	Z_STREAM_ERROR		11222848						
ANR	11223722	Symbol	Z_DATA_ERROR		11222848						
ANR	11223723	Symbol	Z_MEM_ERROR		11222848						
ANR	11223724	Symbol	lastbit		11222848						
ANR	11223725	Symbol	Z_DEFLATED		11222848						
ANR	11223726	Symbol	gz . buf		11222848						
ANR	11223727	Symbol	gz . left		11222848						
ANR	11223728	Symbol	gz . size		11222848						
ANR	11223729	Symbol	Z_STREAM_END		11222848						
ANR	11223730	Symbol	strm -> next_in		11222848						
ANR	11223731	Symbol	crc32		11222848						
ANR	11223732	Symbol	Z_BLOCK		11222848						
ANR	11223733	Symbol	write		11222848						
ANR	11223734	Symbol	gz . name		11222848						
ANR	11223735	Symbol	CHUNK		11222848						
ANR	11223736	Symbol	ret		11222848						
ANR	11223737	Symbol	DSIZE		11222848						
ANR	11223738	Symbol	inflateInit2		11222848						
ANR	11223739	Symbol	Z_DEFAULT_STRATEGY		11222848						
ANR	11223740	Symbol	NULL		11222848						
ANR	11223741	Symbol	read		11222848						
ANR	11223742	Symbol	strm -> zfree		11222848						
ANR	11223743	Symbol	level		11222848						
ANR	11223744	Symbol	lastoff		11222848						
ANR	11223745	Symbol	read4		11222848						
ANR	11223746	Symbol	stderr		11222848						
ANR	11223747	Symbol	left		11222848						
ANR	11223748	Symbol	* strm		11222848						
ANR	11223749	Symbol	name		11222848						
ANR	11223750	Symbol	* gz		11222848						
ANR	11223751	Symbol	& gz		11222848						
ANR	11223752	Symbol	strm -> total_out		11222848						
ANR	11223753	Symbol	strm -> zalloc		11222848						
ANR	11223754	Symbol	full		11222848						
ANR	11223755	Symbol	Z_NULL		11222848						
ANR	11223756	Symbol	deflateInit2		11222848						
ANR	11223757	Symbol	SEEK_CUR		11222848						
ANR	11223758	Symbol	lseek		11222848						
ANR	11223759	Symbol	Z_OK		11222848						
ANR	11223760	Symbol	strm -> data_type		11222848						
ANR	11223761	Symbol	O_RDWR		11222848						
ANR	11223762	Symbol	gz . fd		11222848						
ANR	11223763	Symbol	crc		11222848						
ANR	11223764	Symbol	* gz . buf		11222848						
ANR	11223765	Symbol	strm -> adler		11222848						
ANR	11223766	Symbol	have		11222848						
ANR	11223767	Symbol	tot		11222848						
ANR	11223768	Symbol	end		11222848						
ANR	11223769	Symbol	strm -> total_in		11222848						
ANR	11223770	Symbol	SEEK_SET		11222848						
ANR	11223771	Symbol	malloc		11222848						
ANR	11223772	Symbol	LGCHUNK		11222848						
ANR	11223773	Symbol	gz . next		11222848						
ANR	11223774	Symbol	strm -> next_out		11222848						
ANR	11223775	Symbol	strm -> opaque		11222848						
ANR	11223776	Symbol	strm		11222848						
ANR	11223777	Symbol	strm -> avail_out		11222848						
ANR	11223778	Symbol	strm -> avail_in		11222848						
ANR	11223779	Symbol	gz		11222848						
ANR	11223780	Symbol	inflate		11222848						
ANR	11223781	Symbol	window		11222848						
ANR	11223782	Symbol	open		11222848						
ANR	11223783	Symbol	readin		11222848						
ANR	11223784	Function	gztack	388:0:13299:15644							
ANR	11223785	FunctionDef	"gztack (char * name , int gd , z_stream * strm , int last)"		11223784	0					
ANR	11223786	CompoundStatement		389:0:13363:15644	11223784	0					
ANR	11223787	IdentifierDeclStatement	"int fd , len , ret ;"	390:4:13369:13385	11223784	0	True				
ANR	11223788	IdentifierDecl	fd		11223784	0					
ANR	11223789	IdentifierDeclType	int		11223784	0					
ANR	11223790	Identifier	fd		11223784	1					
ANR	11223791	IdentifierDecl	len		11223784	1					
ANR	11223792	IdentifierDeclType	int		11223784	0					
ANR	11223793	Identifier	len		11223784	1					
ANR	11223794	IdentifierDecl	ret		11223784	2					
ANR	11223795	IdentifierDeclType	int		11223784	0					
ANR	11223796	Identifier	ret		11223784	1					
ANR	11223797	IdentifierDeclStatement	unsigned left ;	391:4:13391:13404	11223784	1	True				
ANR	11223798	IdentifierDecl	left		11223784	0					
ANR	11223799	IdentifierDeclType	unsigned		11223784	0					
ANR	11223800	Identifier	left		11223784	1					
ANR	11223801	IdentifierDeclStatement	"unsigned char * in , * out ;"	392:4:13410:13433	11223784	2	True				
ANR	11223802	IdentifierDecl	* in		11223784	0					
ANR	11223803	IdentifierDeclType	unsigned char *		11223784	0					
ANR	11223804	Identifier	in		11223784	1					
ANR	11223805	IdentifierDecl	* out		11223784	1					
ANR	11223806	IdentifierDeclType	unsigned char *		11223784	0					
ANR	11223807	Identifier	out		11223784	1					
ANR	11223808	ExpressionStatement	fd = 0	395:4:13483:13489	11223784	3	True				
ANR	11223809	AssignmentExpression	fd = 0		11223784	0		=			
ANR	11223810	Identifier	fd		11223784	0					
ANR	11223811	PrimaryExpression	0		11223784	1					
ANR	11223812	IfStatement	if ( name != NULL )		11223784	4					
ANR	11223813	Condition	name != NULL	396:8:13499:13510	11223784	0	True				
ANR	11223814	EqualityExpression	name != NULL		11223784	0		!=			
ANR	11223815	Identifier	name		11223784	0					
ANR	11223816	Identifier	NULL		11223784	1					
ANR	11223817	CompoundStatement		8:22:149:149	11223784	1					
ANR	11223818	ExpressionStatement	"fd = open ( name , O_RDONLY , 0 )"	397:8:13523:13551	11223784	0	True				
ANR	11223819	AssignmentExpression	"fd = open ( name , O_RDONLY , 0 )"		11223784	0		=			
ANR	11223820	Identifier	fd		11223784	0					
ANR	11223821	CallExpression	"open ( name , O_RDONLY , 0 )"		11223784	1					
ANR	11223822	Callee	open		11223784	0					
ANR	11223823	Identifier	open		11223784	0					
ANR	11223824	ArgumentList	name		11223784	1					
ANR	11223825	Argument	name		11223784	0					
ANR	11223826	Identifier	name		11223784	0					
ANR	11223827	Argument	O_RDONLY		11223784	1					
ANR	11223828	Identifier	O_RDONLY		11223784	0					
ANR	11223829	Argument	0		11223784	2					
ANR	11223830	PrimaryExpression	0		11223784	0					
ANR	11223831	IfStatement	if ( fd == - 1 )		11223784	1					
ANR	11223832	Condition	fd == - 1	398:12:13565:13572	11223784	0	True				
ANR	11223833	EqualityExpression	fd == - 1		11223784	0		==			
ANR	11223834	Identifier	fd		11223784	0					
ANR	11223835	UnaryOperationExpression	- 1		11223784	1					
ANR	11223836	UnaryOperator	-		11223784	0					
ANR	11223837	PrimaryExpression	1		11223784	1					
ANR	11223838	ExpressionStatement	"fprintf ( stderr , ""gzappend warning: %s not found, skipping ...\\n"" , name )"	399:12:13587:13678	11223784	1	True				
ANR	11223839	CallExpression	"fprintf ( stderr , ""gzappend warning: %s not found, skipping ...\\n"" , name )"		11223784	0					
ANR	11223840	Callee	fprintf		11223784	0					
ANR	11223841	Identifier	fprintf		11223784	0					
ANR	11223842	ArgumentList	stderr		11223784	1					
ANR	11223843	Argument	stderr		11223784	0					
ANR	11223844	Identifier	stderr		11223784	0					
ANR	11223845	Argument	"""gzappend warning: %s not found, skipping ...\\n"""		11223784	1					
ANR	11223846	PrimaryExpression	"""gzappend warning: %s not found, skipping ...\\n"""		11223784	0					
ANR	11223847	Argument	name		11223784	2					
ANR	11223848	Identifier	name		11223784	0					
ANR	11223849	ExpressionStatement	in = malloc ( CHUNK )	404:4:13718:13736	11223784	5	True				
ANR	11223850	AssignmentExpression	in = malloc ( CHUNK )		11223784	0		=			
ANR	11223851	Identifier	in		11223784	0					
ANR	11223852	CallExpression	malloc ( CHUNK )		11223784	1					
ANR	11223853	Callee	malloc		11223784	0					
ANR	11223854	Identifier	malloc		11223784	0					
ANR	11223855	ArgumentList	CHUNK		11223784	1					
ANR	11223856	Argument	CHUNK		11223784	0					
ANR	11223857	Identifier	CHUNK		11223784	0					
ANR	11223858	ExpressionStatement	out = malloc ( CHUNK )	405:4:13742:13761	11223784	6	True				
ANR	11223859	AssignmentExpression	out = malloc ( CHUNK )		11223784	0		=			
ANR	11223860	Identifier	out		11223784	0					
ANR	11223861	CallExpression	malloc ( CHUNK )		11223784	1					
ANR	11223862	Callee	malloc		11223784	0					
ANR	11223863	Identifier	malloc		11223784	0					
ANR	11223864	ArgumentList	CHUNK		11223784	1					
ANR	11223865	Argument	CHUNK		11223784	0					
ANR	11223866	Identifier	CHUNK		11223784	0					
ANR	11223867	IfStatement	if ( in == NULL || out == NULL )		11223784	7					
ANR	11223868	Condition	in == NULL || out == NULL	406:8:13771:13795	11223784	0	True				
ANR	11223869	OrExpression	in == NULL || out == NULL		11223784	0		||			
ANR	11223870	EqualityExpression	in == NULL		11223784	0		==			
ANR	11223871	Identifier	in		11223784	0					
ANR	11223872	Identifier	NULL		11223784	1					
ANR	11223873	EqualityExpression	out == NULL		11223784	1		==			
ANR	11223874	Identifier	out		11223784	0					
ANR	11223875	Identifier	NULL		11223784	1					
ANR	11223876	ExpressionStatement	"bye ( ""out of memory"" , """" )"	406:35:13798:13822	11223784	1	True				
ANR	11223877	CallExpression	"bye ( ""out of memory"" , """" )"		11223784	0					
ANR	11223878	Callee	bye		11223784	0					
ANR	11223879	Identifier	bye		11223784	0					
ANR	11223880	ArgumentList	"""out of memory"""		11223784	1					
ANR	11223881	Argument	"""out of memory"""		11223784	0					
ANR	11223882	PrimaryExpression	"""out of memory"""		11223784	0					
ANR	11223883	Argument	""""""		11223784	1					
ANR	11223884	PrimaryExpression	""""""		11223784	0					
ANR	11223885	DoStatement	do		11223784	8					
ANR	11223886	CompoundStatement		21:7:522:522	11223784	0					
ANR	11223887	ExpressionStatement	"len = read ( fd , in , CHUNK )"	411:8:13925:13950	11223784	0	True				
ANR	11223888	AssignmentExpression	"len = read ( fd , in , CHUNK )"		11223784	0		=			
ANR	11223889	Identifier	len		11223784	0					
ANR	11223890	CallExpression	"read ( fd , in , CHUNK )"		11223784	1					
ANR	11223891	Callee	read		11223784	0					
ANR	11223892	Identifier	read		11223784	0					
ANR	11223893	ArgumentList	fd		11223784	1					
ANR	11223894	Argument	fd		11223784	0					
ANR	11223895	Identifier	fd		11223784	0					
ANR	11223896	Argument	in		11223784	1					
ANR	11223897	Identifier	in		11223784	0					
ANR	11223898	Argument	CHUNK		11223784	2					
ANR	11223899	Identifier	CHUNK		11223784	0					
ANR	11223900	IfStatement	if ( len == - 1 )		11223784	1					
ANR	11223901	Condition	len == - 1	412:12:13964:13972	11223784	0	True				
ANR	11223902	EqualityExpression	len == - 1		11223784	0		==			
ANR	11223903	Identifier	len		11223784	0					
ANR	11223904	UnaryOperationExpression	- 1		11223784	1					
ANR	11223905	UnaryOperator	-		11223784	0					
ANR	11223906	PrimaryExpression	1		11223784	1					
ANR	11223907	CompoundStatement		24:23:611:611	11223784	1					
ANR	11223908	ExpressionStatement	"fprintf ( stderr , ""gzappend warning: error reading %s, skipping rest ...\\n"" , name )"	413:12:13989:14109	11223784	0	True				
ANR	11223909	CallExpression	"fprintf ( stderr , ""gzappend warning: error reading %s, skipping rest ...\\n"" , name )"		11223784	0					
ANR	11223910	Callee	fprintf		11223784	0					
ANR	11223911	Identifier	fprintf		11223784	0					
ANR	11223912	ArgumentList	stderr		11223784	1					
ANR	11223913	Argument	stderr		11223784	0					
ANR	11223914	Identifier	stderr		11223784	0					
ANR	11223915	Argument	"""gzappend warning: error reading %s, skipping rest ...\\n"""		11223784	1					
ANR	11223916	PrimaryExpression	"""gzappend warning: error reading %s, skipping rest ...\\n"""		11223784	0					
ANR	11223917	Argument	name		11223784	2					
ANR	11223918	Identifier	name		11223784	0					
ANR	11223919	ExpressionStatement	len = 0	416:12:14123:14130	11223784	1	True				
ANR	11223920	AssignmentExpression	len = 0		11223784	0		=			
ANR	11223921	Identifier	len		11223784	0					
ANR	11223922	PrimaryExpression	0		11223784	1					
ANR	11223923	ExpressionStatement	strm -> avail_in = ( unsigned ) len	418:8:14150:14180	11223784	2	True				
ANR	11223924	AssignmentExpression	strm -> avail_in = ( unsigned ) len		11223784	0		=			
ANR	11223925	PtrMemberAccess	strm -> avail_in		11223784	0					
ANR	11223926	Identifier	strm		11223784	0					
ANR	11223927	Identifier	avail_in		11223784	1					
ANR	11223928	CastExpression	( unsigned ) len		11223784	1					
ANR	11223929	CastTarget	unsigned		11223784	0					
ANR	11223930	Identifier	len		11223784	1					
ANR	11223931	ExpressionStatement	strm -> next_in = in	419:8:14190:14208	11223784	3	True				
ANR	11223932	AssignmentExpression	strm -> next_in = in		11223784	0		=			
ANR	11223933	PtrMemberAccess	strm -> next_in		11223784	0					
ANR	11223934	Identifier	strm		11223784	0					
ANR	11223935	Identifier	next_in		11223784	1					
ANR	11223936	Identifier	in		11223784	1					
ANR	11223937	IfStatement	if ( len )		11223784	4					
ANR	11223938	Condition	len	420:12:14222:14224	11223784	0	True				
ANR	11223939	Identifier	len		11223784	0					
ANR	11223940	ExpressionStatement	"strm -> adler = crc32 ( strm -> adler , in , ( unsigned ) len )"	420:17:14227:14278	11223784	1	True				
ANR	11223941	AssignmentExpression	"strm -> adler = crc32 ( strm -> adler , in , ( unsigned ) len )"		11223784	0		=			
ANR	11223942	PtrMemberAccess	strm -> adler		11223784	0					
ANR	11223943	Identifier	strm		11223784	0					
ANR	11223944	Identifier	adler		11223784	1					
ANR	11223945	CallExpression	"crc32 ( strm -> adler , in , ( unsigned ) len )"		11223784	1					
ANR	11223946	Callee	crc32		11223784	0					
ANR	11223947	Identifier	crc32		11223784	0					
ANR	11223948	ArgumentList	strm -> adler		11223784	1					
ANR	11223949	Argument	strm -> adler		11223784	0					
ANR	11223950	PtrMemberAccess	strm -> adler		11223784	0					
ANR	11223951	Identifier	strm		11223784	0					
ANR	11223952	Identifier	adler		11223784	1					
ANR	11223953	Argument	in		11223784	1					
ANR	11223954	Identifier	in		11223784	0					
ANR	11223955	Argument	( unsigned ) len		11223784	2					
ANR	11223956	CastExpression	( unsigned ) len		11223784	0					
ANR	11223957	CastTarget	unsigned		11223784	0					
ANR	11223958	Identifier	len		11223784	1					
ANR	11223959	DoStatement	do		11223784	5					
ANR	11223960	CompoundStatement		35:11:982:982	11223784	0					
ANR	11223961	ExpressionStatement	strm -> avail_out = CHUNK	424:12:14360:14383	11223784	0	True				
ANR	11223962	AssignmentExpression	strm -> avail_out = CHUNK		11223784	0		=			
ANR	11223963	PtrMemberAccess	strm -> avail_out		11223784	0					
ANR	11223964	Identifier	strm		11223784	0					
ANR	11223965	Identifier	avail_out		11223784	1					
ANR	11223966	Identifier	CHUNK		11223784	1					
ANR	11223967	ExpressionStatement	strm -> next_out = out	425:12:14397:14417	11223784	1	True				
ANR	11223968	AssignmentExpression	strm -> next_out = out		11223784	0		=			
ANR	11223969	PtrMemberAccess	strm -> next_out		11223784	0					
ANR	11223970	Identifier	strm		11223784	0					
ANR	11223971	Identifier	next_out		11223784	1					
ANR	11223972	Identifier	out		11223784	1					
ANR	11223973	ExpressionStatement	"ret = deflate ( strm , last && len == 0 ? Z_FINISH : Z_NO_FLUSH )"	426:12:14431:14492	11223784	2	True				
ANR	11223974	AssignmentExpression	"ret = deflate ( strm , last && len == 0 ? Z_FINISH : Z_NO_FLUSH )"		11223784	0		=			
ANR	11223975	Identifier	ret		11223784	0					
ANR	11223976	CallExpression	"deflate ( strm , last && len == 0 ? Z_FINISH : Z_NO_FLUSH )"		11223784	1					
ANR	11223977	Callee	deflate		11223784	0					
ANR	11223978	Identifier	deflate		11223784	0					
ANR	11223979	ArgumentList	strm		11223784	1					
ANR	11223980	Argument	strm		11223784	0					
ANR	11223981	Identifier	strm		11223784	0					
ANR	11223982	Argument	last && len == 0 ? Z_FINISH : Z_NO_FLUSH		11223784	1					
ANR	11223983	ConditionalExpression	last && len == 0 ? Z_FINISH : Z_NO_FLUSH		11223784	0					
ANR	11223984	Condition	last && len == 0		11223784	0					
ANR	11223985	AndExpression	last && len == 0		11223784	0		&&			
ANR	11223986	Identifier	last		11223784	0					
ANR	11223987	EqualityExpression	len == 0		11223784	1		==			
ANR	11223988	Identifier	len		11223784	0					
ANR	11223989	PrimaryExpression	0		11223784	1					
ANR	11223990	Identifier	Z_FINISH		11223784	1					
ANR	11223991	Identifier	Z_NO_FLUSH		11223784	2					
ANR	11223992	ExpressionStatement	left = CHUNK - strm -> avail_out	427:12:14506:14536	11223784	3	True				
ANR	11223993	AssignmentExpression	left = CHUNK - strm -> avail_out		11223784	0		=			
ANR	11223994	Identifier	left		11223784	0					
ANR	11223995	AdditiveExpression	CHUNK - strm -> avail_out		11223784	1		-			
ANR	11223996	Identifier	CHUNK		11223784	0					
ANR	11223997	PtrMemberAccess	strm -> avail_out		11223784	1					
ANR	11223998	Identifier	strm		11223784	0					
ANR	11223999	Identifier	avail_out		11223784	1					
ANR	11224000	WhileStatement	while ( left )		11223784	4					
ANR	11224001	Condition	left	428:19:14557:14560	11223784	0	True				
ANR	11224002	Identifier	left		11223784	0					
ANR	11224003	CompoundStatement		40:25:1199:1199	11223784	1					
ANR	11224004	ExpressionStatement	"len = write ( gd , out + CHUNK - strm -> avail_out - left , left )"	429:16:14581:14640	11223784	0	True				
ANR	11224005	AssignmentExpression	"len = write ( gd , out + CHUNK - strm -> avail_out - left , left )"		11223784	0		=			
ANR	11224006	Identifier	len		11223784	0					
ANR	11224007	CallExpression	"write ( gd , out + CHUNK - strm -> avail_out - left , left )"		11223784	1					
ANR	11224008	Callee	write		11223784	0					
ANR	11224009	Identifier	write		11223784	0					
ANR	11224010	ArgumentList	gd		11223784	1					
ANR	11224011	Argument	gd		11223784	0					
ANR	11224012	Identifier	gd		11223784	0					
ANR	11224013	Argument	out + CHUNK - strm -> avail_out - left		11223784	1					
ANR	11224014	AdditiveExpression	out + CHUNK - strm -> avail_out - left		11223784	0		+			
ANR	11224015	Identifier	out		11223784	0					
ANR	11224016	AdditiveExpression	CHUNK - strm -> avail_out - left		11223784	1		-			
ANR	11224017	Identifier	CHUNK		11223784	0					
ANR	11224018	AdditiveExpression	strm -> avail_out - left		11223784	1		-			
ANR	11224019	PtrMemberAccess	strm -> avail_out		11223784	0					
ANR	11224020	Identifier	strm		11223784	0					
ANR	11224021	Identifier	avail_out		11223784	1					
ANR	11224022	Identifier	left		11223784	1					
ANR	11224023	Argument	left		11223784	2					
ANR	11224024	Identifier	left		11223784	0					
ANR	11224025	IfStatement	if ( len == - 1 )		11223784	1					
ANR	11224026	Condition	len == - 1	430:20:14662:14670	11223784	0	True				
ANR	11224027	EqualityExpression	len == - 1		11223784	0		==			
ANR	11224028	Identifier	len		11223784	0					
ANR	11224029	UnaryOperationExpression	- 1		11223784	1					
ANR	11224030	UnaryOperator	-		11223784	0					
ANR	11224031	PrimaryExpression	1		11223784	1					
ANR	11224032	ExpressionStatement	"bye ( ""writing gzip file"" , """" )"	430:31:14673:14701	11223784	1	True				
ANR	11224033	CallExpression	"bye ( ""writing gzip file"" , """" )"		11223784	0					
ANR	11224034	Callee	bye		11223784	0					
ANR	11224035	Identifier	bye		11223784	0					
ANR	11224036	ArgumentList	"""writing gzip file"""		11223784	1					
ANR	11224037	Argument	"""writing gzip file"""		11223784	0					
ANR	11224038	PrimaryExpression	"""writing gzip file"""		11223784	0					
ANR	11224039	Argument	""""""		11223784	1					
ANR	11224040	PrimaryExpression	""""""		11223784	0					
ANR	11224041	ExpressionStatement	left -= ( unsigned ) len	431:16:14719:14740	11223784	2	True				
ANR	11224042	AssignmentExpression	left -= ( unsigned ) len		11223784	0		-=			
ANR	11224043	Identifier	left		11223784	0					
ANR	11224044	CastExpression	( unsigned ) len		11223784	1					
ANR	11224045	CastTarget	unsigned		11223784	0					
ANR	11224046	Identifier	len		11223784	1					
ANR	11224047	Condition	strm -> avail_out == 0 && ret != Z_STREAM_END	433:17:14773:14815	11223784	1	True				
ANR	11224048	AndExpression	strm -> avail_out == 0 && ret != Z_STREAM_END		11223784	0		&&			
ANR	11224049	EqualityExpression	strm -> avail_out == 0		11223784	0		==			
ANR	11224050	PtrMemberAccess	strm -> avail_out		11223784	0					
ANR	11224051	Identifier	strm		11223784	0					
ANR	11224052	Identifier	avail_out		11223784	1					
ANR	11224053	PrimaryExpression	0		11223784	1					
ANR	11224054	EqualityExpression	ret != Z_STREAM_END		11223784	1		!=			
ANR	11224055	Identifier	ret		11223784	0					
ANR	11224056	Identifier	Z_STREAM_END		11223784	1					
ANR	11224057	Condition	len != 0	434:13:14832:14839	11223784	1	True				
ANR	11224058	EqualityExpression	len != 0		11223784	0		!=			
ANR	11224059	Identifier	len		11223784	0					
ANR	11224060	PrimaryExpression	0		11223784	1					
ANR	11224061	IfStatement	if ( last )		11223784	9					
ANR	11224062	Condition	last	437:8:14893:14896	11223784	0	True				
ANR	11224063	Identifier	last		11223784	0					
ANR	11224064	CompoundStatement		49:14:1535:1535	11223784	1					
ANR	11224065	ExpressionStatement	deflateEnd ( strm )	438:8:14909:14925	11223784	0	True				
ANR	11224066	CallExpression	deflateEnd ( strm )		11223784	0					
ANR	11224067	Callee	deflateEnd		11223784	0					
ANR	11224068	Identifier	deflateEnd		11223784	0					
ANR	11224069	ArgumentList	strm		11223784	1					
ANR	11224070	Argument	strm		11223784	0					
ANR	11224071	Identifier	strm		11223784	0					
ANR	11224072	ExpressionStatement	out [ 0 ] = ( unsigned char ) ( strm -> adler )	439:8:14935:14972	11223784	1	True				
ANR	11224073	AssignmentExpression	out [ 0 ] = ( unsigned char ) ( strm -> adler )		11223784	0		=			
ANR	11224074	ArrayIndexing	out [ 0 ]		11223784	0					
ANR	11224075	Identifier	out		11223784	0					
ANR	11224076	PrimaryExpression	0		11223784	1					
ANR	11224077	CastExpression	( unsigned char ) ( strm -> adler )		11223784	1					
ANR	11224078	CastTarget	unsigned char		11223784	0					
ANR	11224079	PtrMemberAccess	strm -> adler		11223784	1					
ANR	11224080	Identifier	strm		11223784	0					
ANR	11224081	Identifier	adler		11223784	1					
ANR	11224082	ExpressionStatement	out [ 1 ] = ( unsigned char ) ( strm -> adler >> 8 )	440:8:14982:15024	11223784	2	True				
ANR	11224083	AssignmentExpression	out [ 1 ] = ( unsigned char ) ( strm -> adler >> 8 )		11223784	0		=			
ANR	11224084	ArrayIndexing	out [ 1 ]		11223784	0					
ANR	11224085	Identifier	out		11223784	0					
ANR	11224086	PrimaryExpression	1		11223784	1					
ANR	11224087	CastExpression	( unsigned char ) ( strm -> adler >> 8 )		11223784	1					
ANR	11224088	CastTarget	unsigned char		11223784	0					
ANR	11224089	ShiftExpression	strm -> adler >> 8		11223784	1		>>			
ANR	11224090	PtrMemberAccess	strm -> adler		11223784	0					
ANR	11224091	Identifier	strm		11223784	0					
ANR	11224092	Identifier	adler		11223784	1					
ANR	11224093	PrimaryExpression	8		11223784	1					
ANR	11224094	ExpressionStatement	out [ 2 ] = ( unsigned char ) ( strm -> adler >> 16 )	441:8:15034:15077	11223784	3	True				
ANR	11224095	AssignmentExpression	out [ 2 ] = ( unsigned char ) ( strm -> adler >> 16 )		11223784	0		=			
ANR	11224096	ArrayIndexing	out [ 2 ]		11223784	0					
ANR	11224097	Identifier	out		11223784	0					
ANR	11224098	PrimaryExpression	2		11223784	1					
ANR	11224099	CastExpression	( unsigned char ) ( strm -> adler >> 16 )		11223784	1					
ANR	11224100	CastTarget	unsigned char		11223784	0					
ANR	11224101	ShiftExpression	strm -> adler >> 16		11223784	1		>>			
ANR	11224102	PtrMemberAccess	strm -> adler		11223784	0					
ANR	11224103	Identifier	strm		11223784	0					
ANR	11224104	Identifier	adler		11223784	1					
ANR	11224105	PrimaryExpression	16		11223784	1					
ANR	11224106	ExpressionStatement	out [ 3 ] = ( unsigned char ) ( strm -> adler >> 24 )	442:8:15087:15130	11223784	4	True				
ANR	11224107	AssignmentExpression	out [ 3 ] = ( unsigned char ) ( strm -> adler >> 24 )		11223784	0		=			
ANR	11224108	ArrayIndexing	out [ 3 ]		11223784	0					
ANR	11224109	Identifier	out		11223784	0					
ANR	11224110	PrimaryExpression	3		11223784	1					
ANR	11224111	CastExpression	( unsigned char ) ( strm -> adler >> 24 )		11223784	1					
ANR	11224112	CastTarget	unsigned char		11223784	0					
ANR	11224113	ShiftExpression	strm -> adler >> 24		11223784	1		>>			
ANR	11224114	PtrMemberAccess	strm -> adler		11223784	0					
ANR	11224115	Identifier	strm		11223784	0					
ANR	11224116	Identifier	adler		11223784	1					
ANR	11224117	PrimaryExpression	24		11223784	1					
ANR	11224118	ExpressionStatement	out [ 4 ] = ( unsigned char ) ( strm -> total_in )	443:8:15140:15180	11223784	5	True				
ANR	11224119	AssignmentExpression	out [ 4 ] = ( unsigned char ) ( strm -> total_in )		11223784	0		=			
ANR	11224120	ArrayIndexing	out [ 4 ]		11223784	0					
ANR	11224121	Identifier	out		11223784	0					
ANR	11224122	PrimaryExpression	4		11223784	1					
ANR	11224123	CastExpression	( unsigned char ) ( strm -> total_in )		11223784	1					
ANR	11224124	CastTarget	unsigned char		11223784	0					
ANR	11224125	PtrMemberAccess	strm -> total_in		11223784	1					
ANR	11224126	Identifier	strm		11223784	0					
ANR	11224127	Identifier	total_in		11223784	1					
ANR	11224128	ExpressionStatement	out [ 5 ] = ( unsigned char ) ( strm -> total_in >> 8 )	444:8:15190:15235	11223784	6	True				
ANR	11224129	AssignmentExpression	out [ 5 ] = ( unsigned char ) ( strm -> total_in >> 8 )		11223784	0		=			
ANR	11224130	ArrayIndexing	out [ 5 ]		11223784	0					
ANR	11224131	Identifier	out		11223784	0					
ANR	11224132	PrimaryExpression	5		11223784	1					
ANR	11224133	CastExpression	( unsigned char ) ( strm -> total_in >> 8 )		11223784	1					
ANR	11224134	CastTarget	unsigned char		11223784	0					
ANR	11224135	ShiftExpression	strm -> total_in >> 8		11223784	1		>>			
ANR	11224136	PtrMemberAccess	strm -> total_in		11223784	0					
ANR	11224137	Identifier	strm		11223784	0					
ANR	11224138	Identifier	total_in		11223784	1					
ANR	11224139	PrimaryExpression	8		11223784	1					
ANR	11224140	ExpressionStatement	out [ 6 ] = ( unsigned char ) ( strm -> total_in >> 16 )	445:8:15245:15291	11223784	7	True				
ANR	11224141	AssignmentExpression	out [ 6 ] = ( unsigned char ) ( strm -> total_in >> 16 )		11223784	0		=			
ANR	11224142	ArrayIndexing	out [ 6 ]		11223784	0					
ANR	11224143	Identifier	out		11223784	0					
ANR	11224144	PrimaryExpression	6		11223784	1					
ANR	11224145	CastExpression	( unsigned char ) ( strm -> total_in >> 16 )		11223784	1					
ANR	11224146	CastTarget	unsigned char		11223784	0					
ANR	11224147	ShiftExpression	strm -> total_in >> 16		11223784	1		>>			
ANR	11224148	PtrMemberAccess	strm -> total_in		11223784	0					
ANR	11224149	Identifier	strm		11223784	0					
ANR	11224150	Identifier	total_in		11223784	1					
ANR	11224151	PrimaryExpression	16		11223784	1					
ANR	11224152	ExpressionStatement	out [ 7 ] = ( unsigned char ) ( strm -> total_in >> 24 )	446:8:15301:15347	11223784	8	True				
ANR	11224153	AssignmentExpression	out [ 7 ] = ( unsigned char ) ( strm -> total_in >> 24 )		11223784	0		=			
ANR	11224154	ArrayIndexing	out [ 7 ]		11223784	0					
ANR	11224155	Identifier	out		11223784	0					
ANR	11224156	PrimaryExpression	7		11223784	1					
ANR	11224157	CastExpression	( unsigned char ) ( strm -> total_in >> 24 )		11223784	1					
ANR	11224158	CastTarget	unsigned char		11223784	0					
ANR	11224159	ShiftExpression	strm -> total_in >> 24		11223784	1		>>			
ANR	11224160	PtrMemberAccess	strm -> total_in		11223784	0					
ANR	11224161	Identifier	strm		11223784	0					
ANR	11224162	Identifier	total_in		11223784	1					
ANR	11224163	PrimaryExpression	24		11223784	1					
ANR	11224164	ExpressionStatement	len = 8	447:8:15357:15364	11223784	9	True				
ANR	11224165	AssignmentExpression	len = 8		11223784	0		=			
ANR	11224166	Identifier	len		11223784	0					
ANR	11224167	PrimaryExpression	8		11223784	1					
ANR	11224168	DoStatement	do		11223784	10					
ANR	11224169	CompoundStatement		60:11:2013:2013	11223784	0					
ANR	11224170	ExpressionStatement	"ret = write ( gd , out + 8 - len , len )"	449:12:15391:15426	11223784	0	True				
ANR	11224171	AssignmentExpression	"ret = write ( gd , out + 8 - len , len )"		11223784	0		=			
ANR	11224172	Identifier	ret		11223784	0					
ANR	11224173	CallExpression	"write ( gd , out + 8 - len , len )"		11223784	1					
ANR	11224174	Callee	write		11223784	0					
ANR	11224175	Identifier	write		11223784	0					
ANR	11224176	ArgumentList	gd		11223784	1					
ANR	11224177	Argument	gd		11223784	0					
ANR	11224178	Identifier	gd		11223784	0					
ANR	11224179	Argument	out + 8 - len		11223784	1					
ANR	11224180	AdditiveExpression	out + 8 - len		11223784	0		+			
ANR	11224181	Identifier	out		11223784	0					
ANR	11224182	AdditiveExpression	8 - len		11223784	1		-			
ANR	11224183	PrimaryExpression	8		11223784	0					
ANR	11224184	Identifier	len		11223784	1					
ANR	11224185	Argument	len		11223784	2					
ANR	11224186	Identifier	len		11223784	0					
ANR	11224187	IfStatement	if ( ret == - 1 )		11223784	1					
ANR	11224188	Condition	ret == - 1	450:16:15444:15452	11223784	0	True				
ANR	11224189	EqualityExpression	ret == - 1		11223784	0		==			
ANR	11224190	Identifier	ret		11223784	0					
ANR	11224191	UnaryOperationExpression	- 1		11223784	1					
ANR	11224192	UnaryOperator	-		11223784	0					
ANR	11224193	PrimaryExpression	1		11223784	1					
ANR	11224194	ExpressionStatement	"bye ( ""writing gzip file"" , """" )"	450:27:15455:15483	11223784	1	True				
ANR	11224195	CallExpression	"bye ( ""writing gzip file"" , """" )"		11223784	0					
ANR	11224196	Callee	bye		11223784	0					
ANR	11224197	Identifier	bye		11223784	0					
ANR	11224198	ArgumentList	"""writing gzip file"""		11223784	1					
ANR	11224199	Argument	"""writing gzip file"""		11223784	0					
ANR	11224200	PrimaryExpression	"""writing gzip file"""		11223784	0					
ANR	11224201	Argument	""""""		11223784	1					
ANR	11224202	PrimaryExpression	""""""		11223784	0					
ANR	11224203	ExpressionStatement	len -= ret	451:12:15497:15507	11223784	2	True				
ANR	11224204	AssignmentExpression	len -= ret		11223784	0		-=			
ANR	11224205	Identifier	len		11223784	0					
ANR	11224206	Identifier	ret		11223784	1					
ANR	11224207	Condition	len	452:17:15526:15528	11223784	1	True				
ANR	11224208	Identifier	len		11223784	0					
ANR	11224209	ExpressionStatement	close ( gd )	453:8:15540:15549	11223784	11	True				
ANR	11224210	CallExpression	close ( gd )		11223784	0					
ANR	11224211	Callee	close		11223784	0					
ANR	11224212	Identifier	close		11223784	0					
ANR	11224213	ArgumentList	gd		11223784	1					
ANR	11224214	Argument	gd		11223784	0					
ANR	11224215	Identifier	gd		11223784	0					
ANR	11224216	ExpressionStatement	free ( out )	457:4:15592:15601	11223784	10	True				
ANR	11224217	CallExpression	free ( out )		11223784	0					
ANR	11224218	Callee	free		11223784	0					
ANR	11224219	Identifier	free		11223784	0					
ANR	11224220	ArgumentList	out		11223784	1					
ANR	11224221	Argument	out		11223784	0					
ANR	11224222	Identifier	out		11223784	0					
ANR	11224223	ExpressionStatement	free ( in )	458:4:15607:15615	11223784	11	True				
ANR	11224224	CallExpression	free ( in )		11223784	0					
ANR	11224225	Callee	free		11223784	0					
ANR	11224226	Identifier	free		11223784	0					
ANR	11224227	ArgumentList	in		11223784	1					
ANR	11224228	Argument	in		11223784	0					
ANR	11224229	Identifier	in		11223784	0					
ANR	11224230	IfStatement	if ( fd > 0 )		11223784	12					
ANR	11224231	Condition	fd > 0	459:8:15625:15630	11223784	0	True				
ANR	11224232	RelationalExpression	fd > 0		11223784	0		>			
ANR	11224233	Identifier	fd		11223784	0					
ANR	11224234	PrimaryExpression	0		11223784	1					
ANR	11224235	ExpressionStatement	close ( fd )	459:16:15633:15642	11223784	1	True				
ANR	11224236	CallExpression	close ( fd )		11223784	0					
ANR	11224237	Callee	close		11223784	0					
ANR	11224238	Identifier	close		11223784	0					
ANR	11224239	ArgumentList	fd		11223784	1					
ANR	11224240	Argument	fd		11223784	0					
ANR	11224241	Identifier	fd		11223784	0					
ANR	11224242	ReturnType	local void		11223784	1					
ANR	11224243	Identifier	gztack		11223784	2					
ANR	11224244	ParameterList	"char * name , int gd , z_stream * strm , int last"		11223784	3					
ANR	11224245	Parameter	char * name	388:18:13317:13326	11223784	0	True				
ANR	11224246	ParameterType	char *		11223784	0					
ANR	11224247	Identifier	name		11223784	1					
ANR	11224248	Parameter	int gd	388:30:13329:13334	11223784	1	True				
ANR	11224249	ParameterType	int		11223784	0					
ANR	11224250	Identifier	gd		11223784	1					
ANR	11224251	Parameter	z_stream * strm	388:38:13337:13350	11223784	2	True				
ANR	11224252	ParameterType	z_stream *		11223784	0					
ANR	11224253	Identifier	strm		11223784	1					
ANR	11224254	Parameter	int last	388:54:13353:13360	11223784	3	True				
ANR	11224255	ParameterType	int		11223784	0					
ANR	11224256	Identifier	last		11223784	1					
ANR	11224257	CFGEntryNode	ENTRY		11223784		True				
ANR	11224258	CFGExitNode	EXIT		11223784		True				
ANR	11224259	Symbol	out		11223784						
ANR	11224260	Symbol	Z_NO_FLUSH		11223784						
ANR	11224261	Symbol	len		11223784						
ANR	11224262	Symbol	strm -> adler		11223784						
ANR	11224263	Symbol	Z_STREAM_END		11223784						
ANR	11224264	Symbol	strm -> next_in		11223784						
ANR	11224265	Symbol	crc32		11223784						
ANR	11224266	Symbol	strm -> total_in		11223784						
ANR	11224267	Symbol	gd		11223784						
ANR	11224268	Symbol	write		11223784						
ANR	11224269	Symbol	CHUNK		11223784						
ANR	11224270	Symbol	ret		11223784						
ANR	11224271	Symbol	malloc		11223784						
ANR	11224272	Symbol	NULL		11223784						
ANR	11224273	Symbol	read		11223784						
ANR	11224274	Symbol	last		11223784						
ANR	11224275	Symbol	in		11223784						
ANR	11224276	Symbol	strm -> next_out		11223784						
ANR	11224277	Symbol	strm		11223784						
ANR	11224278	Symbol	strm -> avail_out		11223784						
ANR	11224279	Symbol	stderr		11223784						
ANR	11224280	Symbol	Z_FINISH		11223784						
ANR	11224281	Symbol	strm -> avail_in		11223784						
ANR	11224282	Symbol	O_RDONLY		11223784						
ANR	11224283	Symbol	deflate		11223784						
ANR	11224284	Symbol	left		11223784						
ANR	11224285	Symbol	* strm		11223784						
ANR	11224286	Symbol	name		11223784						
ANR	11224287	Symbol	* out		11223784						
ANR	11224288	Symbol	fd		11223784						
ANR	11224289	Symbol	open		11223784						
ANR	11224290	Function	main	466:0:15896:16975							
ANR	11224291	FunctionDef	"main (int argc , char * * argv)"		11224290	0					
ANR	11224292	CompoundStatement		467:0:15928:16975	11224290	0					
ANR	11224293	IdentifierDeclStatement	"int gd , level ;"	468:4:15934:15947	11224290	0	True				
ANR	11224294	IdentifierDecl	gd		11224290	0					
ANR	11224295	IdentifierDeclType	int		11224290	0					
ANR	11224296	Identifier	gd		11224290	1					
ANR	11224297	IdentifierDecl	level		11224290	1					
ANR	11224298	IdentifierDeclType	int		11224290	0					
ANR	11224299	Identifier	level		11224290	1					
ANR	11224300	IdentifierDeclStatement	z_stream strm ;	469:4:15953:15966	11224290	1	True				
ANR	11224301	IdentifierDecl	strm		11224290	0					
ANR	11224302	IdentifierDeclType	z_stream		11224290	0					
ANR	11224303	Identifier	strm		11224290	1					
ANR	11224304	ExpressionStatement	argc --	472:4:16003:16009	11224290	2	True				
ANR	11224305	PostIncDecOperationExpression	argc --		11224290	0					
ANR	11224306	Identifier	argc		11224290	0					
ANR	11224307	IncDec	--		11224290	1					
ANR	11224308	ExpressionStatement	argv ++	472:12:16011:16017	11224290	3	True				
ANR	11224309	PostIncDecOperationExpression	argv ++		11224290	0					
ANR	11224310	Identifier	argv		11224290	0					
ANR	11224311	IncDec	++		11224290	1					
ANR	11224312	IfStatement	if ( * argv == NULL )		11224290	4					
ANR	11224313	Condition	* argv == NULL	475:8:16068:16080	11224290	0	True				
ANR	11224314	EqualityExpression	* argv == NULL		11224290	0		==			
ANR	11224315	UnaryOperationExpression	* argv		11224290	0					
ANR	11224316	UnaryOperator	*		11224290	0					
ANR	11224317	Identifier	argv		11224290	1					
ANR	11224318	Identifier	NULL		11224290	1					
ANR	11224319	CompoundStatement		9:23:154:154	11224290	1					
ANR	11224320	ExpressionStatement	"printf ( ""gzappend 1.2 (11 Oct 2012) Copyright (C) 2003, 2012 Mark Adler\\n"" )"	476:8:16093:16196	11224290	0	True				
ANR	11224321	CallExpression	"printf ( ""gzappend 1.2 (11 Oct 2012) Copyright (C) 2003, 2012 Mark Adler\\n"" )"		11224290	0					
ANR	11224322	Callee	printf		11224290	0					
ANR	11224323	Identifier	printf		11224290	0					
ANR	11224324	ArgumentList	"""gzappend 1.2 (11 Oct 2012) Copyright (C) 2003, 2012 Mark Adler\\n"""		11224290	1					
ANR	11224325	Argument	"""gzappend 1.2 (11 Oct 2012) Copyright (C) 2003, 2012 Mark Adler\\n"""		11224290	0					
ANR	11224326	PrimaryExpression	"""gzappend 1.2 (11 Oct 2012) Copyright (C) 2003, 2012 Mark Adler\\n"""		11224290	0					
ANR	11224327	ExpressionStatement	"printf ( ""usage: gzappend [-level] file.gz [ addthis [ andthis ... ]]\\n"" )"	479:8:16206:16290	11224290	1	True				
ANR	11224328	CallExpression	"printf ( ""usage: gzappend [-level] file.gz [ addthis [ andthis ... ]]\\n"" )"		11224290	0					
ANR	11224329	Callee	printf		11224290	0					
ANR	11224330	Identifier	printf		11224290	0					
ANR	11224331	ArgumentList	"""usage: gzappend [-level] file.gz [ addthis [ andthis ... ]]\\n"""		11224290	1					
ANR	11224332	Argument	"""usage: gzappend [-level] file.gz [ addthis [ andthis ... ]]\\n"""		11224290	0					
ANR	11224333	PrimaryExpression	"""usage: gzappend [-level] file.gz [ addthis [ andthis ... ]]\\n"""		11224290	0					
ANR	11224334	ReturnStatement	return 0 ;	481:8:16300:16308	11224290	2	True				
ANR	11224335	PrimaryExpression	0		11224290	0					
ANR	11224336	ExpressionStatement	level = Z_DEFAULT_COMPRESSION	485:4:16353:16382	11224290	5	True				
ANR	11224337	AssignmentExpression	level = Z_DEFAULT_COMPRESSION		11224290	0		=			
ANR	11224338	Identifier	level		11224290	0					
ANR	11224339	Identifier	Z_DEFAULT_COMPRESSION		11224290	1					
ANR	11224340	IfStatement	if ( argv [ 0 ] [ 0 ] == '-' )		11224290	6					
ANR	11224341	Condition	argv [ 0 ] [ 0 ] == '-'	486:8:16392:16408	11224290	0	True				
ANR	11224342	EqualityExpression	argv [ 0 ] [ 0 ] == '-'		11224290	0		==			
ANR	11224343	ArrayIndexing	argv [ 0 ] [ 0 ]		11224290	0					
ANR	11224344	ArrayIndexing	argv [ 0 ]		11224290	0					
ANR	11224345	Identifier	argv		11224290	0					
ANR	11224346	PrimaryExpression	0		11224290	1					
ANR	11224347	PrimaryExpression	0		11224290	1					
ANR	11224348	PrimaryExpression	'-'		11224290	1					
ANR	11224349	CompoundStatement		20:27:482:482	11224290	1					
ANR	11224350	IfStatement	if ( argv [ 0 ] [ 1 ] < '0' || argv [ 0 ] [ 1 ] > '9' || argv [ 0 ] [ 2 ] != 0 )		11224290	0					
ANR	11224351	Condition	argv [ 0 ] [ 1 ] < '0' || argv [ 0 ] [ 1 ] > '9' || argv [ 0 ] [ 2 ] != 0	487:12:16425:16479	11224290	0	True				
ANR	11224352	OrExpression	argv [ 0 ] [ 1 ] < '0' || argv [ 0 ] [ 1 ] > '9' || argv [ 0 ] [ 2 ] != 0		11224290	0		||			
ANR	11224353	RelationalExpression	argv [ 0 ] [ 1 ] < '0'		11224290	0		<			
ANR	11224354	ArrayIndexing	argv [ 0 ] [ 1 ]		11224290	0					
ANR	11224355	ArrayIndexing	argv [ 0 ]		11224290	0					
ANR	11224356	Identifier	argv		11224290	0					
ANR	11224357	PrimaryExpression	0		11224290	1					
ANR	11224358	PrimaryExpression	1		11224290	1					
ANR	11224359	PrimaryExpression	'0'		11224290	1					
ANR	11224360	OrExpression	argv [ 0 ] [ 1 ] > '9' || argv [ 0 ] [ 2 ] != 0		11224290	1		||			
ANR	11224361	RelationalExpression	argv [ 0 ] [ 1 ] > '9'		11224290	0		>			
ANR	11224362	ArrayIndexing	argv [ 0 ] [ 1 ]		11224290	0					
ANR	11224363	ArrayIndexing	argv [ 0 ]		11224290	0					
ANR	11224364	Identifier	argv		11224290	0					
ANR	11224365	PrimaryExpression	0		11224290	1					
ANR	11224366	PrimaryExpression	1		11224290	1					
ANR	11224367	PrimaryExpression	'9'		11224290	1					
ANR	11224368	EqualityExpression	argv [ 0 ] [ 2 ] != 0		11224290	1		!=			
ANR	11224369	ArrayIndexing	argv [ 0 ] [ 2 ]		11224290	0					
ANR	11224370	ArrayIndexing	argv [ 0 ]		11224290	0					
ANR	11224371	Identifier	argv		11224290	0					
ANR	11224372	PrimaryExpression	0		11224290	1					
ANR	11224373	PrimaryExpression	2		11224290	1					
ANR	11224374	PrimaryExpression	0		11224290	1					
ANR	11224375	ExpressionStatement	"bye ( ""invalid compression level"" , """" )"	488:12:16494:16530	11224290	1	True				
ANR	11224376	CallExpression	"bye ( ""invalid compression level"" , """" )"		11224290	0					
ANR	11224377	Callee	bye		11224290	0					
ANR	11224378	Identifier	bye		11224290	0					
ANR	11224379	ArgumentList	"""invalid compression level"""		11224290	1					
ANR	11224380	Argument	"""invalid compression level"""		11224290	0					
ANR	11224381	PrimaryExpression	"""invalid compression level"""		11224290	0					
ANR	11224382	Argument	""""""		11224290	1					
ANR	11224383	PrimaryExpression	""""""		11224290	0					
ANR	11224384	ExpressionStatement	level = argv [ 0 ] [ 1 ] - '0'	489:8:16540:16564	11224290	1	True				
ANR	11224385	AssignmentExpression	level = argv [ 0 ] [ 1 ] - '0'		11224290	0		=			
ANR	11224386	Identifier	level		11224290	0					
ANR	11224387	AdditiveExpression	argv [ 0 ] [ 1 ] - '0'		11224290	1		-			
ANR	11224388	ArrayIndexing	argv [ 0 ] [ 1 ]		11224290	0					
ANR	11224389	ArrayIndexing	argv [ 0 ]		11224290	0					
ANR	11224390	Identifier	argv		11224290	0					
ANR	11224391	PrimaryExpression	0		11224290	1					
ANR	11224392	PrimaryExpression	1		11224290	1					
ANR	11224393	PrimaryExpression	'0'		11224290	1					
ANR	11224394	IfStatement	if ( * ++ argv == NULL )		11224290	2					
ANR	11224395	Condition	* ++ argv == NULL	490:12:16578:16592	11224290	0	True				
ANR	11224396	EqualityExpression	* ++ argv == NULL		11224290	0		==			
ANR	11224397	UnaryOperationExpression	* ++ argv		11224290	0					
ANR	11224398	UnaryOperator	*		11224290	0					
ANR	11224399	UnaryExpression	++ argv		11224290	1					
ANR	11224400	IncDec	++		11224290	0					
ANR	11224401	Identifier	argv		11224290	1					
ANR	11224402	Identifier	NULL		11224290	1					
ANR	11224403	ExpressionStatement	"bye ( ""no gzip file name after options"" , """" )"	490:29:16595:16637	11224290	1	True				
ANR	11224404	CallExpression	"bye ( ""no gzip file name after options"" , """" )"		11224290	0					
ANR	11224405	Callee	bye		11224290	0					
ANR	11224406	Identifier	bye		11224290	0					
ANR	11224407	ArgumentList	"""no gzip file name after options"""		11224290	1					
ANR	11224408	Argument	"""no gzip file name after options"""		11224290	0					
ANR	11224409	PrimaryExpression	"""no gzip file name after options"""		11224290	0					
ANR	11224410	Argument	""""""		11224290	1					
ANR	11224411	PrimaryExpression	""""""		11224290	0					
ANR	11224412	ExpressionStatement	"gd = gzscan ( * argv ++ , & strm , level )"	494:4:16691:16725	11224290	7	True				
ANR	11224413	AssignmentExpression	"gd = gzscan ( * argv ++ , & strm , level )"		11224290	0		=			
ANR	11224414	Identifier	gd		11224290	0					
ANR	11224415	CallExpression	"gzscan ( * argv ++ , & strm , level )"		11224290	1					
ANR	11224416	Callee	gzscan		11224290	0					
ANR	11224417	Identifier	gzscan		11224290	0					
ANR	11224418	ArgumentList	* argv ++		11224290	1					
ANR	11224419	Argument	* argv ++		11224290	0					
ANR	11224420	UnaryOperationExpression	* argv ++		11224290	0					
ANR	11224421	UnaryOperator	*		11224290	0					
ANR	11224422	PostIncDecOperationExpression	argv ++		11224290	1					
ANR	11224423	Identifier	argv		11224290	0					
ANR	11224424	IncDec	++		11224290	1					
ANR	11224425	Argument	& strm		11224290	1					
ANR	11224426	UnaryOperationExpression	& strm		11224290	0					
ANR	11224427	UnaryOperator	&		11224290	0					
ANR	11224428	Identifier	strm		11224290	1					
ANR	11224429	Argument	level		11224290	2					
ANR	11224430	Identifier	level		11224290	0					
ANR	11224431	IfStatement	if ( * argv == NULL )		11224290	8					
ANR	11224432	Condition	* argv == NULL	497:8:16798:16810	11224290	0	True				
ANR	11224433	EqualityExpression	* argv == NULL		11224290	0		==			
ANR	11224434	UnaryOperationExpression	* argv		11224290	0					
ANR	11224435	UnaryOperator	*		11224290	0					
ANR	11224436	Identifier	argv		11224290	1					
ANR	11224437	Identifier	NULL		11224290	1					
ANR	11224438	ExpressionStatement	"gztack ( NULL , gd , & strm , 1 )"	498:8:16821:16847	11224290	1	True				
ANR	11224439	CallExpression	"gztack ( NULL , gd , & strm , 1 )"		11224290	0					
ANR	11224440	Callee	gztack		11224290	0					
ANR	11224441	Identifier	gztack		11224290	0					
ANR	11224442	ArgumentList	NULL		11224290	1					
ANR	11224443	Argument	NULL		11224290	0					
ANR	11224444	Identifier	NULL		11224290	0					
ANR	11224445	Argument	gd		11224290	1					
ANR	11224446	Identifier	gd		11224290	0					
ANR	11224447	Argument	& strm		11224290	2					
ANR	11224448	UnaryOperationExpression	& strm		11224290	0					
ANR	11224449	UnaryOperator	&		11224290	0					
ANR	11224450	Identifier	strm		11224290	1					
ANR	11224451	Argument	1		11224290	3					
ANR	11224452	PrimaryExpression	1		11224290	0					
ANR	11224453	ReturnType	int		11224290	1					
ANR	11224454	Identifier	main		11224290	2					
ANR	11224455	ParameterList	"int argc , char * * argv"		11224290	3					
ANR	11224456	Parameter	int argc	466:9:15905:15912	11224290	0	True				
ANR	11224457	ParameterType	int		11224290	0					
ANR	11224458	Identifier	argc		11224290	1					
ANR	11224459	Parameter	char * * argv	466:19:15915:15925	11224290	1	True				
ANR	11224460	ParameterType	char * *		11224290	0					
ANR	11224461	Identifier	argv		11224290	1					
ANR	11224462	CFGEntryNode	ENTRY		11224290		True				
ANR	11224463	CFGExitNode	EXIT		11224290		True				
ANR	11224464	Symbol	argc		11224290						
ANR	11224465	Symbol	gzscan		11224290						
ANR	11224466	Symbol	NULL		11224290						
ANR	11224467	Symbol	level		11224290						
ANR	11224468	Symbol	& strm		11224290						
ANR	11224469	Symbol	strm		11224290						
ANR	11224470	Symbol	* argv		11224290						
ANR	11224471	Symbol	Z_DEFAULT_COMPRESSION		11224290						
ANR	11224472	Symbol	* argv ++		11224290						
ANR	11224473	Symbol	argv		11224290						
ANR	11224474	Symbol	* ++ argv		11224290						
ANR	11224475	Symbol	* * argv		11224290						
ANR	11224476	Symbol	gd		11224290						
