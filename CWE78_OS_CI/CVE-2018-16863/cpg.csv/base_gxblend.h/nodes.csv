command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	829197	File	data/converged/CVE-2018-16863_ghostpdl/base_gxblend.h								
ANR	829198	DeclStmt									
ANR	829199	Decl							bits16	bits16	ArtPixMaxDepth
ANR	829200	DeclStmt									
ANR	829201	Decl							struct pdf14_device_s	struct pdf14_device_s	pdf14_device
ANR	829202	DeclStmt									
ANR	829203	Decl							struct pdf14_buf_s	struct pdf14_buf_s	pdf14_buf
ANR	829204	DeclStmt									
ANR	829205	Decl							struct gx_device_s	struct gx_device_s	gx_device
ANR	829206	DeclStmt									
ANR	829207	Decl							struct gs_separations_s	struct gs_separations_s	gs_separations
ANR	829208	ClassDef	<unnamed>	70:8:2063:2581							
ANR	829209	DeclStmt									
ANR	829210	Decl									pdf14_nonseparable_blending_procs_s
ANR	829211	DeclStmt									
ANR	829212	Decl							pdf14_nonseparable_blending_procs_s	pdf14_nonseparable_blending_procs_s	pdf14_nonseparable_blending_procs_t
ANR	829213	ClassDef	<unnamed>	90:8:2833:2965							
ANR	829214	DeclStmt									
ANR	829215	Decl							pdf14_nonseparable_blending_procs_t	pdf14_nonseparable_blending_procs_t	device_procs
ANR	829216	DeclStmt									
ANR	829217	Decl							gx_device_procs	gx_device_procs	color_mapping_procs
ANR	829218	DeclStmt									
ANR	829219	Decl									pdf14_parent_cs_params_s
ANR	829220	DeclStmt									
ANR	829221	Decl							pdf14_parent_cs_params_s	pdf14_parent_cs_params_s	pdf14_parent_cs_params_t
ANR	829222	DeclStmt									
ANR	829223	Decl							bool	bool ( gs_blend_mode_t blend_mode )	blend_valid_for_spot
ANR	829224	DeclStmt									
ANR	829225	Decl							byte	"byte ( byte alpha1 , byte alpha2 )"	art_pdf_union_8
ANR	829226	Function	art_pdf_union_mul_8	168:0:5955:6271							
ANR	829227	FunctionDef	"art_pdf_union_mul_8 (byte alpha1 , byte alpha2 , byte alpha_mask)"		829226	0					
ANR	829228	CompoundStatement		170:0:6037:6271	829226	0					
ANR	829229	IdentifierDeclStatement	int tmp ;	171:4:6043:6050	829226	0	True				
ANR	829230	IdentifierDecl	tmp		829226	0					
ANR	829231	IdentifierDeclType	int		829226	0					
ANR	829232	Identifier	tmp		829226	1					
ANR	829233	IfStatement	if ( alpha_mask != 0xff )		829226	1					
ANR	829234	Condition	alpha_mask != 0xff	172:8:6060:6077	829226	0	True				
ANR	829235	EqualityExpression	alpha_mask != 0xff		829226	0		!=			
ANR	829236	Identifier	alpha_mask		829226	0					
ANR	829237	PrimaryExpression	0xff		829226	1					
ANR	829238	CompoundStatement		4:4:46:46	829226	1					
ANR	829239	ExpressionStatement	tmp = alpha2 * alpha_mask + 0x80	174:8:6094:6126	829226	0	True				
ANR	829240	AssignmentExpression	tmp = alpha2 * alpha_mask + 0x80		829226	0		=			
ANR	829241	Identifier	tmp		829226	0					
ANR	829242	AdditiveExpression	alpha2 * alpha_mask + 0x80		829226	1		+			
ANR	829243	MultiplicativeExpression	alpha2 * alpha_mask		829226	0		*			
ANR	829244	Identifier	alpha2		829226	0					
ANR	829245	Identifier	alpha_mask		829226	1					
ANR	829246	PrimaryExpression	0x80		829226	1					
ANR	829247	ExpressionStatement	alpha2 = ( tmp + ( tmp >> 8 ) ) >> 8	175:8:6136:6166	829226	1	True				
ANR	829248	AssignmentExpression	alpha2 = ( tmp + ( tmp >> 8 ) ) >> 8		829226	0		=			
ANR	829249	Identifier	alpha2		829226	0					
ANR	829250	ShiftExpression	( tmp + ( tmp >> 8 ) ) >> 8		829226	1		>>			
ANR	829251	AdditiveExpression	tmp + ( tmp >> 8 )		829226	0		+			
ANR	829252	Identifier	tmp		829226	0					
ANR	829253	ShiftExpression	tmp >> 8		829226	1		>>			
ANR	829254	Identifier	tmp		829226	0					
ANR	829255	PrimaryExpression	8		829226	1					
ANR	829256	PrimaryExpression	8		829226	1					
ANR	829257	ExpressionStatement	tmp = ( 0xff - alpha1 ) * ( 0xff - alpha2 ) + 0x80	177:4:6178:6224	829226	2	True				
ANR	829258	AssignmentExpression	tmp = ( 0xff - alpha1 ) * ( 0xff - alpha2 ) + 0x80		829226	0		=			
ANR	829259	Identifier	tmp		829226	0					
ANR	829260	AdditiveExpression	( 0xff - alpha1 ) * ( 0xff - alpha2 ) + 0x80		829226	1		+			
ANR	829261	MultiplicativeExpression	( 0xff - alpha1 ) * ( 0xff - alpha2 )		829226	0		*			
ANR	829262	AdditiveExpression	0xff - alpha1		829226	0		-			
ANR	829263	PrimaryExpression	0xff		829226	0					
ANR	829264	Identifier	alpha1		829226	1					
ANR	829265	AdditiveExpression	0xff - alpha2		829226	1		-			
ANR	829266	PrimaryExpression	0xff		829226	0					
ANR	829267	Identifier	alpha2		829226	1					
ANR	829268	PrimaryExpression	0x80		829226	1					
ANR	829269	ReturnStatement	return 0xff - ( ( tmp + ( tmp >> 8 ) ) >> 8 ) ;	178:4:6230:6269	829226	3	True				
ANR	829270	AdditiveExpression	0xff - ( ( tmp + ( tmp >> 8 ) ) >> 8 )		829226	0		-			
ANR	829271	PrimaryExpression	0xff		829226	0					
ANR	829272	ShiftExpression	( tmp + ( tmp >> 8 ) ) >> 8		829226	1		>>			
ANR	829273	AdditiveExpression	tmp + ( tmp >> 8 )		829226	0		+			
ANR	829274	Identifier	tmp		829226	0					
ANR	829275	ShiftExpression	tmp >> 8		829226	1		>>			
ANR	829276	Identifier	tmp		829226	0					
ANR	829277	PrimaryExpression	8		829226	1					
ANR	829278	PrimaryExpression	8		829226	1					
ANR	829279	ReturnType	static inline byte		829226	1					
ANR	829280	Identifier	art_pdf_union_mul_8		829226	2					
ANR	829281	ParameterList	"byte alpha1 , byte alpha2 , byte alpha_mask"		829226	3					
ANR	829282	Parameter	byte alpha1	169:20:5994:6004	829226	0	True				
ANR	829283	ParameterType	byte		829226	0					
ANR	829284	Identifier	alpha1		829226	1					
ANR	829285	Parameter	byte alpha2	169:33:6007:6017	829226	1	True				
ANR	829286	ParameterType	byte		829226	0					
ANR	829287	Identifier	alpha2		829226	1					
ANR	829288	Parameter	byte alpha_mask	169:46:6020:6034	829226	2	True				
ANR	829289	ParameterType	byte		829226	0					
ANR	829290	Identifier	alpha_mask		829226	1					
ANR	829291	CFGEntryNode	ENTRY		829226		True				
ANR	829292	CFGExitNode	EXIT		829226		True				
ANR	829293	Symbol	tmp		829226						
ANR	829294	Symbol	alpha2		829226						
ANR	829295	Symbol	alpha1		829226						
ANR	829296	Symbol	alpha_mask		829226						
ANR	829297	DeclStmt									
ANR	829298	Decl							"void ( * ) ( byte * tos_ptr , bool tos_isolated , int tos_planestride , int tos_rowstride , byte alpha , byte shape , gs_blend_mode_t blend_mode , bool tos_has_shape , int tos_shape_offset , int tos_alpha_g_offset , int tos_tag_offset , bool tos_has_tag , byte * nos_ptr , bool nos_isolated , int nos_planestride , int nos_rowstride , byte * nos_alpha_g_ptr , bool nos_knockout , int nos_shape_offset , int nos_tag_offset , byte * mask_row_ptr , int has_mask , pdf14_buf * maskbuf , byte mask_bg_alpha , byte * mask_tr_fn , byte * backdrop_ptr , bool has_matte , int n_chan , bool additive , int num_spots , bool overprint , gx_color_index drawn_comps , int x0 , int y0 , int x1 , int y1 , const pdf14_nonseparable_blending_procs_t * pblend_procs , pdf14_device * pdev )"	"void ( * ) ( byte * tos_ptr , bool tos_isolated , int tos_planestride , int tos_rowstride , byte alpha , byte shape , gs_blend_mode_t blend_mode , bool tos_has_shape , int tos_shape_offset , int tos_alpha_g_offset , int tos_tag_offset , bool tos_has_tag , byte * nos_ptr , bool nos_isolated , int nos_planestride , int nos_rowstride , byte * nos_alpha_g_ptr , bool nos_knockout , int nos_shape_offset , int nos_tag_offset , byte * mask_row_ptr , int has_mask , pdf14_buf * maskbuf , byte mask_bg_alpha , byte * mask_tr_fn , byte * backdrop_ptr , bool has_matte , int n_chan , bool additive , int num_spots , bool overprint , gx_color_index drawn_comps , int x0 , int y0 , int x1 , int y1 , const pdf14_nonseparable_blending_procs_t * pblend_procs , pdf14_device * pdev )"	art_pdf_compose_group_fn
ANR	829299	DeclStmt									
ANR	829300	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_rgb_mix
ANR	829301	DeclStmt									
ANR	829302	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_gray_mix
ANR	829303	DeclStmt									
ANR	829304	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_additive
ANR	829305	DeclStmt									
ANR	829306	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_subtractive
ANR	829307	DeclStmt									
ANR	829308	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_custom
ANR	829309	DeclStmt									
ANR	829310	Decl							void	"void ( pdf14_buf * buf , pdf14_buf * tos , bool knockout_buff )"	pdf14_preserve_backdrop
ANR	829311	DeclStmt									
ANR	829312	Decl							int	"int ( pdf14_buf * buf , cmm_profile_t * group_profile , pdf14_buf * tos , cmm_profile_t * tos_profile , gs_memory_t * memory , gs_gstate * pgs , gx_device * dev , bool knockout_buff )"	pdf14_preserve_backdrop_cm
ANR	829313	DeclStmt									
ANR	829314	Decl							void	"void ( pdf14_buf * tos , pdf14_buf * nos , pdf14_buf * maskbuf , int x0 , int x1 , int y0 , int y1 , int n_chan , bool additive , const pdf14_nonseparable_blending_procs_t * pblend_procs , bool overprint , gx_color_index drawn_comps , gs_memory_t * memory , gx_device * dev )"	pdf14_compose_group
ANR	829315	DeclStmt									
ANR	829316	Decl							void	"void ( pdf14_buf * tos , pdf14_buf * nos , int x0 , int x1 , int y0 , int y1 , gs_memory_t * memory , gx_device * dev )"	pdf14_compose_alphaless_group
ANR	829317	DeclStmt									
ANR	829318	Decl							gx_color_index	"gx_color_index ( gx_device * dev , const gx_color_value colors [ ] )"	pdf14_encode_color
ANR	829319	DeclStmt									
ANR	829320	Decl							gx_color_index	"gx_color_index ( gx_device * dev , const gx_color_value colors [ ] )"	pdf14_encode_color_tag
ANR	829321	DeclStmt									
ANR	829322	Decl							int	"int ( gx_device * dev , gx_color_index color , gx_color_value * out )"	pdf14_decode_color
ANR	829323	DeclStmt									
ANR	829324	Decl							void	"void ( gx_device * dev , frac gray , frac out [ ] )"	pdf14_gray_cs_to_cmyk_cm
ANR	829325	DeclStmt									
ANR	829326	Decl							void	"void ( gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ] )"	pdf14_rgb_cs_to_cmyk_cm
ANR	829327	DeclStmt									
ANR	829328	Decl							void	"void ( gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ] )"	pdf14_cmyk_cs_to_cmyk_cm
ANR	829329	DeclStmt									
ANR	829330	Decl							void	"void ( gx_device * dev , frac gray , frac out [ ] )"	pdf14_gray_cs_to_rgbspot_cm
ANR	829331	DeclStmt									
ANR	829332	Decl							void	"void ( gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ] )"	pdf14_rgb_cs_to_rgbspot_cm
ANR	829333	DeclStmt									
ANR	829334	Decl							void	"void ( gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ] )"	pdf14_cmyk_cs_to_rgbspot_cm
ANR	829335	DeclStmt									
ANR	829336	Decl							void	"void ( gx_device * dev , frac gray , frac out [ ] )"	pdf14_gray_cs_to_grayspot_cm
ANR	829337	DeclStmt									
ANR	829338	Decl							void	"void ( gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ] )"	pdf14_rgb_cs_to_grayspot_cm
ANR	829339	DeclStmt									
ANR	829340	Decl							void	"void ( gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ] )"	pdf14_cmyk_cs_to_grayspot_cm
ANR	829341	DeclStmt									
ANR	829342	Decl							void	"void ( byte * buf_ptr , int width , int height , int rowstride , int planestride , int num_comp , byte bg )"	gx_blend_image_buffer
ANR	829343	DeclStmt									
ANR	829344	Decl							int	"int ( gx_device * target , byte * buf_ptr , int planestride , int rowstride , int x0 , int y0 , int width , int height , int num_comp , byte bg , bool has_tags , gs_int_rect rect , gs_separations * pseparations )"	gx_put_blended_image_cmykspot
ANR	829345	DeclStmt									
ANR	829346	Decl							int	"int ( gx_device * target , byte * buf_ptr , int planestride , int rowstride , int x0 , int y0 , int width , int height , int num_comp , byte bg )"	gx_put_blended_image_custom
ANR	829347	DeclStmt									
ANR	829348	Decl							int	"int ( gx_device * dev , int x , int y , int w , int h , gx_color_index color , const gx_device_color * pdc , bool devn )"	pdf14_mark_fill_rectangle
ANR	829349	DeclStmt									
ANR	829350	Decl							void	"void ( int num_rows , int width , int n_chan , int plane_stride , int rowstride , char filename [ ] , byte * Buffer )"	dump_raw_buffer
