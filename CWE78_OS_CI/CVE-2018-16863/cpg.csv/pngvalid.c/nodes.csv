command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8637555	File	data/converged/CVE-2018-16863_ghostpdl/pngvalid.c								
ANR	8637556	DeclStmt									
ANR	8637557	Decl							png_byte	png_byte *	png_const_bytep
ANR	8637558	DeclStmt									
ANR	8637559	Decl							struct exception_context	struct exception_context *	the_exception_context
ANR	8637560	Function	safecat	212:0:7252:7504							
ANR	8637561	FunctionDef	"safecat (char * buffer , size_t bufsize , size_t pos , const char * cat)"		8637560	0					
ANR	8637562	CompoundStatement		214:0:7336:7504	8637560	0					
ANR	8637563	WhileStatement	while ( pos < bufsize && cat != NULL && * cat != 0 )		8637560	0					
ANR	8637564	Condition	pos < bufsize && cat != NULL && * cat != 0	215:10:7348:7388	8637560	0	True				
ANR	8637565	AndExpression	pos < bufsize && cat != NULL && * cat != 0		8637560	0		&&			
ANR	8637566	RelationalExpression	pos < bufsize		8637560	0		<			
ANR	8637567	Identifier	pos		8637560	0					
ANR	8637568	Identifier	bufsize		8637560	1					
ANR	8637569	AndExpression	cat != NULL && * cat != 0		8637560	1		&&			
ANR	8637570	EqualityExpression	cat != NULL		8637560	0		!=			
ANR	8637571	Identifier	cat		8637560	0					
ANR	8637572	Identifier	NULL		8637560	1					
ANR	8637573	EqualityExpression	* cat != 0		8637560	1		!=			
ANR	8637574	UnaryOperationExpression	* cat		8637560	0					
ANR	8637575	UnaryOperator	*		8637560	0					
ANR	8637576	Identifier	cat		8637560	1					
ANR	8637577	PrimaryExpression	0		8637560	1					
ANR	8637578	ExpressionStatement	buffer [ pos ++ ] = * cat ++	216:6:7397:7419	8637560	1	True				
ANR	8637579	AssignmentExpression	buffer [ pos ++ ] = * cat ++		8637560	0		=			
ANR	8637580	ArrayIndexing	buffer [ pos ++ ]		8637560	0					
ANR	8637581	Identifier	buffer		8637560	0					
ANR	8637582	PostIncDecOperationExpression	pos ++		8637560	1					
ANR	8637583	Identifier	pos		8637560	0					
ANR	8637584	IncDec	++		8637560	1					
ANR	8637585	UnaryOperationExpression	* cat ++		8637560	1					
ANR	8637586	UnaryOperator	*		8637560	0					
ANR	8637587	PostIncDecOperationExpression	cat ++		8637560	1					
ANR	8637588	Identifier	cat		8637560	0					
ANR	8637589	IncDec	++		8637560	1					
ANR	8637590	IfStatement	if ( pos >= bufsize )		8637560	1					
ANR	8637591	Condition	pos >= bufsize	218:7:7429:7442	8637560	0	True				
ANR	8637592	RelationalExpression	pos >= bufsize		8637560	0		>=			
ANR	8637593	Identifier	pos		8637560	0					
ANR	8637594	Identifier	bufsize		8637560	1					
ANR	8637595	ExpressionStatement	pos = bufsize - 1	219:6:7451:7466	8637560	1	True				
ANR	8637596	AssignmentExpression	pos = bufsize - 1		8637560	0		=			
ANR	8637597	Identifier	pos		8637560	0					
ANR	8637598	AdditiveExpression	bufsize - 1		8637560	1		-			
ANR	8637599	Identifier	bufsize		8637560	0					
ANR	8637600	PrimaryExpression	1		8637560	1					
ANR	8637601	ExpressionStatement	buffer [ pos ] = 0	221:3:7472:7487	8637560	2	True				
ANR	8637602	AssignmentExpression	buffer [ pos ] = 0		8637560	0		=			
ANR	8637603	ArrayIndexing	buffer [ pos ]		8637560	0					
ANR	8637604	Identifier	buffer		8637560	0					
ANR	8637605	Identifier	pos		8637560	1					
ANR	8637606	PrimaryExpression	0		8637560	1					
ANR	8637607	ReturnStatement	return pos ;	222:3:7492:7502	8637560	3	True				
ANR	8637608	Identifier	pos		8637560	0					
ANR	8637609	ReturnType	static size_t		8637560	1					
ANR	8637610	Identifier	safecat		8637560	2					
ANR	8637611	ParameterList	"char * buffer , size_t bufsize , size_t pos , const char * cat"		8637560	3					
ANR	8637612	Parameter	char * buffer	212:22:7274:7285	8637560	0	True				
ANR	8637613	ParameterType	char *		8637560	0					
ANR	8637614	Identifier	buffer		8637560	1					
ANR	8637615	Parameter	size_t bufsize	212:36:7288:7301	8637560	1	True				
ANR	8637616	ParameterType	size_t		8637560	0					
ANR	8637617	Identifier	bufsize		8637560	1					
ANR	8637618	Parameter	size_t pos	212:52:7304:7313	8637560	2	True				
ANR	8637619	ParameterType	size_t		8637560	0					
ANR	8637620	Identifier	pos		8637560	1					
ANR	8637621	Parameter	const char * cat	213:3:7319:7333	8637560	3	True				
ANR	8637622	ParameterType	const char *		8637560	0					
ANR	8637623	Identifier	cat		8637560	1					
ANR	8637624	CFGEntryNode	ENTRY		8637560		True				
ANR	8637625	CFGExitNode	EXIT		8637560		True				
ANR	8637626	Symbol	* buffer		8637560						
ANR	8637627	Symbol	NULL		8637560						
ANR	8637628	Symbol	* cat ++		8637560						
ANR	8637629	Symbol	pos		8637560						
ANR	8637630	Symbol	cat		8637560						
ANR	8637631	Symbol	bufsize		8637560						
ANR	8637632	Symbol	buffer		8637560						
ANR	8637633	Symbol	* pos		8637560						
ANR	8637634	Symbol	* cat		8637560						
ANR	8637635	Function	safecatn	225:0:7507:7679							
ANR	8637636	FunctionDef	"safecatn (char * buffer , size_t bufsize , size_t pos , int n)"		8637635	0					
ANR	8637637	CompoundStatement		226:0:7579:7679	8637635	0					
ANR	8637638	IdentifierDeclStatement	char number [ 64 ] ;	227:3:7584:7599	8637635	0	True				
ANR	8637639	IdentifierDecl	number [ 64 ]		8637635	0					
ANR	8637640	IdentifierDeclType	char [ 64 ]		8637635	0					
ANR	8637641	Identifier	number		8637635	1					
ANR	8637642	PrimaryExpression	64		8637635	2					
ANR	8637643	ExpressionStatement	"sprintf ( number , ""%d"" , n )"	228:3:7604:7628	8637635	1	True				
ANR	8637644	CallExpression	"sprintf ( number , ""%d"" , n )"		8637635	0					
ANR	8637645	Callee	sprintf		8637635	0					
ANR	8637646	Identifier	sprintf		8637635	0					
ANR	8637647	ArgumentList	number		8637635	1					
ANR	8637648	Argument	number		8637635	0					
ANR	8637649	Identifier	number		8637635	0					
ANR	8637650	Argument	"""%d"""		8637635	1					
ANR	8637651	PrimaryExpression	"""%d"""		8637635	0					
ANR	8637652	Argument	n		8637635	2					
ANR	8637653	Identifier	n		8637635	0					
ANR	8637654	ReturnStatement	"return safecat ( buffer , bufsize , pos , number ) ;"	229:3:7633:7677	8637635	2	True				
ANR	8637655	CallExpression	"safecat ( buffer , bufsize , pos , number )"		8637635	0					
ANR	8637656	Callee	safecat		8637635	0					
ANR	8637657	Identifier	safecat		8637635	0					
ANR	8637658	ArgumentList	buffer		8637635	1					
ANR	8637659	Argument	buffer		8637635	0					
ANR	8637660	Identifier	buffer		8637635	0					
ANR	8637661	Argument	bufsize		8637635	1					
ANR	8637662	Identifier	bufsize		8637635	0					
ANR	8637663	Argument	pos		8637635	2					
ANR	8637664	Identifier	pos		8637635	0					
ANR	8637665	Argument	number		8637635	3					
ANR	8637666	Identifier	number		8637635	0					
ANR	8637667	ReturnType	static size_t		8637635	1					
ANR	8637668	Identifier	safecatn		8637635	2					
ANR	8637669	ParameterList	"char * buffer , size_t bufsize , size_t pos , int n"		8637635	3					
ANR	8637670	Parameter	char * buffer	225:23:7530:7541	8637635	0	True				
ANR	8637671	ParameterType	char *		8637635	0					
ANR	8637672	Identifier	buffer		8637635	1					
ANR	8637673	Parameter	size_t bufsize	225:37:7544:7557	8637635	1	True				
ANR	8637674	ParameterType	size_t		8637635	0					
ANR	8637675	Identifier	bufsize		8637635	1					
ANR	8637676	Parameter	size_t pos	225:53:7560:7569	8637635	2	True				
ANR	8637677	ParameterType	size_t		8637635	0					
ANR	8637678	Identifier	pos		8637635	1					
ANR	8637679	Parameter	int n	225:65:7572:7576	8637635	3	True				
ANR	8637680	ParameterType	int		8637635	0					
ANR	8637681	Identifier	n		8637635	1					
ANR	8637682	CFGEntryNode	ENTRY		8637635		True				
ANR	8637683	CFGExitNode	EXIT		8637635		True				
ANR	8637684	Symbol	number		8637635						
ANR	8637685	Symbol	pos		8637635						
ANR	8637686	Symbol	safecat		8637635						
ANR	8637687	Symbol	bufsize		8637635						
ANR	8637688	Symbol	buffer		8637635						
ANR	8637689	Symbol	n		8637635						
ANR	8637690	Function	safecatd	233:0:7719:7926							
ANR	8637691	FunctionDef	"safecatd (char * buffer , size_t bufsize , size_t pos , double d , int precision)"		8637690	0					
ANR	8637692	CompoundStatement		235:0:7813:7926	8637690	0					
ANR	8637693	IdentifierDeclStatement	char number [ 64 ] ;	236:3:7818:7833	8637690	0	True				
ANR	8637694	IdentifierDecl	number [ 64 ]		8637690	0					
ANR	8637695	IdentifierDeclType	char [ 64 ]		8637690	0					
ANR	8637696	Identifier	number		8637690	1					
ANR	8637697	PrimaryExpression	64		8637690	2					
ANR	8637698	ExpressionStatement	"sprintf ( number , ""%.*f"" , precision , d )"	237:3:7838:7875	8637690	1	True				
ANR	8637699	CallExpression	"sprintf ( number , ""%.*f"" , precision , d )"		8637690	0					
ANR	8637700	Callee	sprintf		8637690	0					
ANR	8637701	Identifier	sprintf		8637690	0					
ANR	8637702	ArgumentList	number		8637690	1					
ANR	8637703	Argument	number		8637690	0					
ANR	8637704	Identifier	number		8637690	0					
ANR	8637705	Argument	"""%.*f"""		8637690	1					
ANR	8637706	PrimaryExpression	"""%.*f"""		8637690	0					
ANR	8637707	Argument	precision		8637690	2					
ANR	8637708	Identifier	precision		8637690	0					
ANR	8637709	Argument	d		8637690	3					
ANR	8637710	Identifier	d		8637690	0					
ANR	8637711	ReturnStatement	"return safecat ( buffer , bufsize , pos , number ) ;"	238:3:7880:7924	8637690	2	True				
ANR	8637712	CallExpression	"safecat ( buffer , bufsize , pos , number )"		8637690	0					
ANR	8637713	Callee	safecat		8637690	0					
ANR	8637714	Identifier	safecat		8637690	0					
ANR	8637715	ArgumentList	buffer		8637690	1					
ANR	8637716	Argument	buffer		8637690	0					
ANR	8637717	Identifier	buffer		8637690	0					
ANR	8637718	Argument	bufsize		8637690	1					
ANR	8637719	Identifier	bufsize		8637690	0					
ANR	8637720	Argument	pos		8637690	2					
ANR	8637721	Identifier	pos		8637690	0					
ANR	8637722	Argument	number		8637690	3					
ANR	8637723	Identifier	number		8637690	0					
ANR	8637724	ReturnType	static size_t		8637690	1					
ANR	8637725	Identifier	safecatd		8637690	2					
ANR	8637726	ParameterList	"char * buffer , size_t bufsize , size_t pos , double d , int precision"		8637690	3					
ANR	8637727	Parameter	char * buffer	233:23:7742:7753	8637690	0	True				
ANR	8637728	ParameterType	char *		8637690	0					
ANR	8637729	Identifier	buffer		8637690	1					
ANR	8637730	Parameter	size_t bufsize	233:37:7756:7769	8637690	1	True				
ANR	8637731	ParameterType	size_t		8637690	0					
ANR	8637732	Identifier	bufsize		8637690	1					
ANR	8637733	Parameter	size_t pos	233:53:7772:7781	8637690	2	True				
ANR	8637734	ParameterType	size_t		8637690	0					
ANR	8637735	Identifier	pos		8637690	1					
ANR	8637736	Parameter	double d	233:65:7784:7791	8637690	3	True				
ANR	8637737	ParameterType	double		8637690	0					
ANR	8637738	Identifier	d		8637690	1					
ANR	8637739	Parameter	int precision	234:4:7798:7810	8637690	4	True				
ANR	8637740	ParameterType	int		8637690	0					
ANR	8637741	Identifier	precision		8637690	1					
ANR	8637742	CFGEntryNode	ENTRY		8637690		True				
ANR	8637743	CFGExitNode	EXIT		8637690		True				
ANR	8637744	Symbol	number		8637690						
ANR	8637745	Symbol	d		8637690						
ANR	8637746	Symbol	pos		8637690						
ANR	8637747	Symbol	safecat		8637690						
ANR	8637748	Symbol	precision		8637690						
ANR	8637749	Symbol	bufsize		8637690						
ANR	8637750	Symbol	buffer		8637690						
ANR	8637751	DeclStmt									
ANR	8637752	Decl							const char	const char [ ]	invalid
ANR	8637753	DeclStmt									
ANR	8637754	Decl							const char	const char [ ]	sep
ANR	8637755	DeclStmt									
ANR	8637756	Decl							const char	const char * [ 8 ]	colour_types
ANR	8637757	Function	fix	253:0:8271:8373							
ANR	8637758	FunctionDef	fix (double d)		8637757	0					
ANR	8637759	CompoundStatement		255:0:8308:8373	8637757	0					
ANR	8637760	ExpressionStatement	d = floor ( d * PNG_FP_1 + .5 )	256:3:8313:8341	8637757	0	True				
ANR	8637761	AssignmentExpression	d = floor ( d * PNG_FP_1 + .5 )		8637757	0		=			
ANR	8637762	Identifier	d		8637757	0					
ANR	8637763	CallExpression	floor ( d * PNG_FP_1 + .5 )		8637757	1					
ANR	8637764	Callee	floor		8637757	0					
ANR	8637765	Identifier	floor		8637757	0					
ANR	8637766	ArgumentList	d * PNG_FP_1 + .5		8637757	1					
ANR	8637767	Argument	d * PNG_FP_1 + .5		8637757	0					
ANR	8637768	AdditiveExpression	d * PNG_FP_1 + .5		8637757	0		+			
ANR	8637769	MultiplicativeExpression	d * PNG_FP_1		8637757	0		*			
ANR	8637770	Identifier	d		8637757	0					
ANR	8637771	Identifier	PNG_FP_1		8637757	1					
ANR	8637772	PrimaryExpression	.5		8637757	1					
ANR	8637773	ReturnStatement	return ( png_fixed_point ) d ;	257:3:8346:8371	8637757	1	True				
ANR	8637774	CastExpression	( png_fixed_point ) d		8637757	0					
ANR	8637775	CastTarget	png_fixed_point		8637757	0					
ANR	8637776	Identifier	d		8637757	1					
ANR	8637777	ReturnType	static png_fixed_point		8637757	1					
ANR	8637778	Identifier	fix		8637757	2					
ANR	8637779	ParameterList	double d		8637757	3					
ANR	8637780	Parameter	double d	254:4:8298:8305	8637757	0	True				
ANR	8637781	ParameterType	double		8637757	0					
ANR	8637782	Identifier	d		8637757	1					
ANR	8637783	CFGEntryNode	ENTRY		8637757		True				
ANR	8637784	CFGExitNode	EXIT		8637757		True				
ANR	8637785	Symbol	d		8637757						
ANR	8637786	Symbol	PNG_FP_1		8637757						
ANR	8637787	Symbol	floor		8637757						
ANR	8637788	Function	make_random_bytes	268:0:8800:9443							
ANR	8637789	FunctionDef	"make_random_bytes (png_uint_32 * seed , void * pv , size_t size)"		8637788	0					
ANR	8637790	CompoundStatement		270:0:8872:9443	8637788	0					
ANR	8637791	IdentifierDeclStatement	"png_uint_32 u0 = seed [ 0 ] , u1 = seed [ 1 ] ;"	271:3:8877:8915	8637788	0	True				
ANR	8637792	IdentifierDecl	u0 = seed [ 0 ]		8637788	0					
ANR	8637793	IdentifierDeclType	png_uint_32		8637788	0					
ANR	8637794	Identifier	u0		8637788	1					
ANR	8637795	AssignmentExpression	u0 = seed [ 0 ]		8637788	2		=			
ANR	8637796	Identifier	u0		8637788	0					
ANR	8637797	ArrayIndexing	seed [ 0 ]		8637788	1					
ANR	8637798	Identifier	seed		8637788	0					
ANR	8637799	PrimaryExpression	0		8637788	1					
ANR	8637800	IdentifierDecl	u1 = seed [ 1 ]		8637788	1					
ANR	8637801	IdentifierDeclType	png_uint_32		8637788	0					
ANR	8637802	Identifier	u1		8637788	1					
ANR	8637803	AssignmentExpression	u1 = seed [ 1 ]		8637788	2		=			
ANR	8637804	Identifier	u1		8637788	0					
ANR	8637805	ArrayIndexing	seed [ 1 ]		8637788	1					
ANR	8637806	Identifier	seed		8637788	0					
ANR	8637807	PrimaryExpression	1		8637788	1					
ANR	8637808	IdentifierDeclStatement	"png_bytep bytes = voidcast ( png_bytep , pv ) ;"	272:3:8920:8961	8637788	1	True				
ANR	8637809	IdentifierDecl	"bytes = voidcast ( png_bytep , pv )"		8637788	0					
ANR	8637810	IdentifierDeclType	png_bytep		8637788	0					
ANR	8637811	Identifier	bytes		8637788	1					
ANR	8637812	AssignmentExpression	"bytes = voidcast ( png_bytep , pv )"		8637788	2		=			
ANR	8637813	Identifier	bytes		8637788	0					
ANR	8637814	CallExpression	"voidcast ( png_bytep , pv )"		8637788	1					
ANR	8637815	Callee	voidcast		8637788	0					
ANR	8637816	Identifier	voidcast		8637788	0					
ANR	8637817	ArgumentList	png_bytep		8637788	1					
ANR	8637818	Argument	png_bytep		8637788	0					
ANR	8637819	Identifier	png_bytep		8637788	0					
ANR	8637820	Argument	pv		8637788	1					
ANR	8637821	Identifier	pv		8637788	0					
ANR	8637822	IdentifierDeclStatement	size_t i ;	277:3:9116:9124	8637788	2	True				
ANR	8637823	IdentifierDecl	i		8637788	0					
ANR	8637824	IdentifierDeclType	size_t		8637788	0					
ANR	8637825	Identifier	i		8637788	1					
ANR	8637826	ForStatement	for ( i = 0 ; i < size ; ++ i )		8637788	3					
ANR	8637827	ForInit	i = 0 ;	278:8:9134:9137	8637788	0	True				
ANR	8637828	AssignmentExpression	i = 0		8637788	0		=			
ANR	8637829	Identifier	i		8637788	0					
ANR	8637830	PrimaryExpression	0		8637788	1					
ANR	8637831	Condition	i < size	278:13:9139:9144	8637788	1	True				
ANR	8637832	RelationalExpression	i < size		8637788	0		<			
ANR	8637833	Identifier	i		8637788	0					
ANR	8637834	Identifier	size		8637788	1					
ANR	8637835	UnaryExpression	++ i	278:21:9147:9149	8637788	2	True				
ANR	8637836	IncDec	++		8637788	0					
ANR	8637837	Identifier	i		8637788	1					
ANR	8637838	CompoundStatement		12:6:359:429	8637788	3					
ANR	8637839	IdentifierDeclStatement	png_uint_32 u = ( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff ;	281:6:9232:9302	8637788	0	True				
ANR	8637840	IdentifierDecl	u = ( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff		8637788	0					
ANR	8637841	IdentifierDeclType	png_uint_32		8637788	0					
ANR	8637842	Identifier	u		8637788	1					
ANR	8637843	AssignmentExpression	u = ( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff		8637788	2		=			
ANR	8637844	Identifier	u		8637788	0					
ANR	8637845	BitAndExpression	( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff		8637788	1		&			
ANR	8637846	ExclusiveOrExpression	( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) )		8637788	0		^			
ANR	8637847	ShiftExpression	u0 >> ( 20 - 8 )		8637788	0		>>			
ANR	8637848	Identifier	u0		8637788	0					
ANR	8637849	AdditiveExpression	20 - 8		8637788	1		-			
ANR	8637850	PrimaryExpression	20		8637788	0					
ANR	8637851	PrimaryExpression	8		8637788	1					
ANR	8637852	InclusiveOrExpression	( u1 << 7 ) | ( u0 >> ( 32 - 7 ) )		8637788	1		|			
ANR	8637853	ShiftExpression	u1 << 7		8637788	0		<<			
ANR	8637854	Identifier	u1		8637788	0					
ANR	8637855	PrimaryExpression	7		8637788	1					
ANR	8637856	ShiftExpression	u0 >> ( 32 - 7 )		8637788	1		>>			
ANR	8637857	Identifier	u0		8637788	0					
ANR	8637858	AdditiveExpression	32 - 7		8637788	1		-			
ANR	8637859	PrimaryExpression	32		8637788	0					
ANR	8637860	PrimaryExpression	7		8637788	1					
ANR	8637861	PrimaryExpression	0xff		8637788	1					
ANR	8637862	ExpressionStatement	u1 <<= 8	282:6:9310:9318	8637788	1	True				
ANR	8637863	AssignmentExpression	u1 <<= 8		8637788	0		<<=			
ANR	8637864	Identifier	u1		8637788	0					
ANR	8637865	PrimaryExpression	8		8637788	1					
ANR	8637866	ExpressionStatement	u1 |= u0 >> 24	283:6:9326:9340	8637788	2	True				
ANR	8637867	AssignmentExpression	u1 |= u0 >> 24		8637788	0		|=			
ANR	8637868	Identifier	u1		8637788	0					
ANR	8637869	ShiftExpression	u0 >> 24		8637788	1		>>			
ANR	8637870	Identifier	u0		8637788	0					
ANR	8637871	PrimaryExpression	24		8637788	1					
ANR	8637872	ExpressionStatement	u0 <<= 8	284:6:9348:9356	8637788	3	True				
ANR	8637873	AssignmentExpression	u0 <<= 8		8637788	0		<<=			
ANR	8637874	Identifier	u0		8637788	0					
ANR	8637875	PrimaryExpression	8		8637788	1					
ANR	8637876	ExpressionStatement	u0 |= u	285:6:9364:9371	8637788	4	True				
ANR	8637877	AssignmentExpression	u0 |= u		8637788	0		|=			
ANR	8637878	Identifier	u0		8637788	0					
ANR	8637879	Identifier	u		8637788	1					
ANR	8637880	ExpressionStatement	* bytes ++ = ( png_byte ) u	286:6:9379:9401	8637788	5	True				
ANR	8637881	AssignmentExpression	* bytes ++ = ( png_byte ) u		8637788	0		=			
ANR	8637882	UnaryOperationExpression	* bytes ++		8637788	0					
ANR	8637883	UnaryOperator	*		8637788	0					
ANR	8637884	PostIncDecOperationExpression	bytes ++		8637788	1					
ANR	8637885	Identifier	bytes		8637788	0					
ANR	8637886	IncDec	++		8637788	1					
ANR	8637887	CastExpression	( png_byte ) u		8637788	1					
ANR	8637888	CastTarget	png_byte		8637788	0					
ANR	8637889	Identifier	u		8637788	1					
ANR	8637890	ExpressionStatement	seed [ 0 ] = u0	289:3:9412:9424	8637788	4	True				
ANR	8637891	AssignmentExpression	seed [ 0 ] = u0		8637788	0		=			
ANR	8637892	ArrayIndexing	seed [ 0 ]		8637788	0					
ANR	8637893	Identifier	seed		8637788	0					
ANR	8637894	PrimaryExpression	0		8637788	1					
ANR	8637895	Identifier	u0		8637788	1					
ANR	8637896	ExpressionStatement	seed [ 1 ] = u1	290:3:9429:9441	8637788	5	True				
ANR	8637897	AssignmentExpression	seed [ 1 ] = u1		8637788	0		=			
ANR	8637898	ArrayIndexing	seed [ 1 ]		8637788	0					
ANR	8637899	Identifier	seed		8637788	0					
ANR	8637900	PrimaryExpression	1		8637788	1					
ANR	8637901	Identifier	u1		8637788	1					
ANR	8637902	ReturnType	static void		8637788	1					
ANR	8637903	Identifier	make_random_bytes		8637788	2					
ANR	8637904	ParameterList	"png_uint_32 * seed , void * pv , size_t size"		8637788	3					
ANR	8637905	Parameter	png_uint_32 * seed	269:18:8830:8846	8637788	0	True				
ANR	8637906	ParameterType	png_uint_32 *		8637788	0					
ANR	8637907	Identifier	seed		8637788	1					
ANR	8637908	Parameter	void * pv	269:37:8849:8856	8637788	1	True				
ANR	8637909	ParameterType	void *		8637788	0					
ANR	8637910	Identifier	pv		8637788	1					
ANR	8637911	Parameter	size_t size	269:47:8859:8869	8637788	2	True				
ANR	8637912	ParameterType	size_t		8637788	0					
ANR	8637913	Identifier	size		8637788	1					
ANR	8637914	CFGEntryNode	ENTRY		8637788		True				
ANR	8637915	CFGExitNode	EXIT		8637788		True				
ANR	8637916	Symbol	* seed		8637788						
ANR	8637917	Symbol	seed		8637788						
ANR	8637918	Symbol	size		8637788						
ANR	8637919	Symbol	u		8637788						
ANR	8637920	Symbol	pv		8637788						
ANR	8637921	Symbol	bytes		8637788						
ANR	8637922	Symbol	voidcast		8637788						
ANR	8637923	Symbol	i		8637788						
ANR	8637924	Symbol	u0		8637788						
ANR	8637925	Symbol	u1		8637788						
ANR	8637926	Symbol	* bytes ++		8637788						
ANR	8637927	Symbol	png_bytep		8637788						
ANR	8637928	Function	make_four_random_bytes	293:0:9446:9557							
ANR	8637929	FunctionDef	"make_four_random_bytes (png_uint_32 * seed , png_bytep bytes)"		8637928	0					
ANR	8637930	CompoundStatement		295:0:9517:9557	8637928	0					
ANR	8637931	ExpressionStatement	"make_random_bytes ( seed , bytes , 4 )"	296:3:9522:9555	8637928	0	True				
ANR	8637932	CallExpression	"make_random_bytes ( seed , bytes , 4 )"		8637928	0					
ANR	8637933	Callee	make_random_bytes		8637928	0					
ANR	8637934	Identifier	make_random_bytes		8637928	0					
ANR	8637935	ArgumentList	seed		8637928	1					
ANR	8637936	Argument	seed		8637928	0					
ANR	8637937	Identifier	seed		8637928	0					
ANR	8637938	Argument	bytes		8637928	1					
ANR	8637939	Identifier	bytes		8637928	0					
ANR	8637940	Argument	4		8637928	2					
ANR	8637941	PrimaryExpression	4		8637928	0					
ANR	8637942	ReturnType	static void		8637928	1					
ANR	8637943	Identifier	make_four_random_bytes		8637928	2					
ANR	8637944	ParameterList	"png_uint_32 * seed , png_bytep bytes"		8637928	3					
ANR	8637945	Parameter	png_uint_32 * seed	294:23:9481:9497	8637928	0	True				
ANR	8637946	ParameterType	png_uint_32 *		8637928	0					
ANR	8637947	Identifier	seed		8637928	1					
ANR	8637948	Parameter	png_bytep bytes	294:42:9500:9514	8637928	1	True				
ANR	8637949	ParameterType	png_bytep		8637928	0					
ANR	8637950	Identifier	bytes		8637928	1					
ANR	8637951	CFGEntryNode	ENTRY		8637928		True				
ANR	8637952	CFGExitNode	EXIT		8637928		True				
ANR	8637953	Symbol	seed		8637928						
ANR	8637954	Symbol	bytes		8637928						
ANR	8637955	Function	randomize	301:0:9670:9820							
ANR	8637956	FunctionDef	"randomize (void * pv , size_t size)"		8637955	0					
ANR	8637957	CompoundStatement		303:0:9715:9820	8637955	0					
ANR	8637958	Statement	static	304:3:9720:9725	8637955	0	True				
ANR	8637959	IdentifierDeclStatement	"png_uint_32 random_seed [ 2 ] = { 0x56789abc , 0xd } ;"	304:10:9727:9773	8637955	1	True				
ANR	8637960	IdentifierDecl	"random_seed [ 2 ] = { 0x56789abc , 0xd }"		8637955	0					
ANR	8637961	IdentifierDeclType	png_uint_32 [ 2 ]		8637955	0					
ANR	8637962	Identifier	random_seed		8637955	1					
ANR	8637963	PrimaryExpression	2		8637955	2					
ANR	8637964	AssignmentExpression	"random_seed [ 2 ] = { 0x56789abc , 0xd }"		8637955	3		=			
ANR	8637965	Identifier	random_seed		8637955	0					
ANR	8637966	InitializerList	0x56789abc		8637955	1					
ANR	8637967	PrimaryExpression	0x56789abc		8637955	0					
ANR	8637968	PrimaryExpression	0xd		8637955	1					
ANR	8637969	ExpressionStatement	"make_random_bytes ( random_seed , pv , size )"	305:3:9778:9818	8637955	2	True				
ANR	8637970	CallExpression	"make_random_bytes ( random_seed , pv , size )"		8637955	0					
ANR	8637971	Callee	make_random_bytes		8637955	0					
ANR	8637972	Identifier	make_random_bytes		8637955	0					
ANR	8637973	ArgumentList	random_seed		8637955	1					
ANR	8637974	Argument	random_seed		8637955	0					
ANR	8637975	Identifier	random_seed		8637955	0					
ANR	8637976	Argument	pv		8637955	1					
ANR	8637977	Identifier	pv		8637955	0					
ANR	8637978	Argument	size		8637955	2					
ANR	8637979	Identifier	size		8637955	0					
ANR	8637980	ReturnType	static void		8637955	1					
ANR	8637981	Identifier	randomize		8637955	2					
ANR	8637982	ParameterList	"void * pv , size_t size"		8637955	3					
ANR	8637983	Parameter	void * pv	302:10:9692:9699	8637955	0	True				
ANR	8637984	ParameterType	void *		8637955	0					
ANR	8637985	Identifier	pv		8637955	1					
ANR	8637986	Parameter	size_t size	302:20:9702:9712	8637955	1	True				
ANR	8637987	ParameterType	size_t		8637955	0					
ANR	8637988	Identifier	size		8637955	1					
ANR	8637989	CFGEntryNode	ENTRY		8637955		True				
ANR	8637990	CFGExitNode	EXIT		8637955		True				
ANR	8637991	Symbol	random_seed		8637955						
ANR	8637992	Symbol	size		8637955						
ANR	8637993	Symbol	pv		8637955						
ANR	8637994	Function	random_byte	311:0:9901:10007							
ANR	8637995	FunctionDef	random_byte ()		8637994	0					
ANR	8637996	CompoundStatement		313:0:9935:10007	8637994	0					
ANR	8637997	IdentifierDeclStatement	unsigned char b1 [ 1 ] ;	314:3:9940:9959	8637994	0	True				
ANR	8637998	IdentifierDecl	b1 [ 1 ]		8637994	0					
ANR	8637999	IdentifierDeclType	unsigned char [ 1 ]		8637994	0					
ANR	8638000	Identifier	b1		8637994	1					
ANR	8638001	PrimaryExpression	1		8637994	2					
ANR	8638002	ExpressionStatement	"randomize ( b1 , sizeof b1 )"	315:3:9964:9988	8637994	1	True				
ANR	8638003	CallExpression	"randomize ( b1 , sizeof b1 )"		8637994	0					
ANR	8638004	Callee	randomize		8637994	0					
ANR	8638005	Identifier	randomize		8637994	0					
ANR	8638006	ArgumentList	b1		8637994	1					
ANR	8638007	Argument	b1		8637994	0					
ANR	8638008	Identifier	b1		8637994	0					
ANR	8638009	Argument	sizeof b1		8637994	1					
ANR	8638010	SizeofExpression	sizeof b1		8637994	0					
ANR	8638011	Sizeof	sizeof		8637994	0					
ANR	8638012	Identifier	b1		8637994	1					
ANR	8638013	ReturnStatement	return b1 [ 0 ] ;	316:3:9993:10005	8637994	2	True				
ANR	8638014	ArrayIndexing	b1 [ 0 ]		8637994	0					
ANR	8638015	Identifier	b1		8637994	0					
ANR	8638016	PrimaryExpression	0		8637994	1					
ANR	8638017	ReturnType	static png_byte		8637994	1					
ANR	8638018	Identifier	random_byte		8637994	2					
ANR	8638019	ParameterList			8637994	3					
ANR	8638020	CFGEntryNode	ENTRY		8637994		True				
ANR	8638021	CFGExitNode	EXIT		8637994		True				
ANR	8638022	Symbol	* b1		8637994						
ANR	8638023	Symbol	b1		8637994						
ANR	8638024	Function	random_u16	320:0:10028:10150							
ANR	8638025	FunctionDef	random_u16 ()		8638024	0					
ANR	8638026	CompoundStatement		322:0:10064:10150	8638024	0					
ANR	8638027	IdentifierDeclStatement	unsigned char b2 [ 2 ] ;	323:3:10069:10088	8638024	0	True				
ANR	8638028	IdentifierDecl	b2 [ 2 ]		8638024	0					
ANR	8638029	IdentifierDeclType	unsigned char [ 2 ]		8638024	0					
ANR	8638030	Identifier	b2		8638024	1					
ANR	8638031	PrimaryExpression	2		8638024	2					
ANR	8638032	ExpressionStatement	"randomize ( b2 , sizeof b2 )"	324:3:10093:10117	8638024	1	True				
ANR	8638033	CallExpression	"randomize ( b2 , sizeof b2 )"		8638024	0					
ANR	8638034	Callee	randomize		8638024	0					
ANR	8638035	Identifier	randomize		8638024	0					
ANR	8638036	ArgumentList	b2		8638024	1					
ANR	8638037	Argument	b2		8638024	0					
ANR	8638038	Identifier	b2		8638024	0					
ANR	8638039	Argument	sizeof b2		8638024	1					
ANR	8638040	SizeofExpression	sizeof b2		8638024	0					
ANR	8638041	Sizeof	sizeof		8638024	0					
ANR	8638042	Identifier	b2		8638024	1					
ANR	8638043	ReturnStatement	return png_get_uint_16 ( b2 ) ;	325:3:10122:10148	8638024	2	True				
ANR	8638044	CallExpression	png_get_uint_16 ( b2 )		8638024	0					
ANR	8638045	Callee	png_get_uint_16		8638024	0					
ANR	8638046	Identifier	png_get_uint_16		8638024	0					
ANR	8638047	ArgumentList	b2		8638024	1					
ANR	8638048	Argument	b2		8638024	0					
ANR	8638049	Identifier	b2		8638024	0					
ANR	8638050	ReturnType	static png_uint_16		8638024	1					
ANR	8638051	Identifier	random_u16		8638024	2					
ANR	8638052	ParameterList			8638024	3					
ANR	8638053	CFGEntryNode	ENTRY		8638024		True				
ANR	8638054	CFGExitNode	EXIT		8638024		True				
ANR	8638055	Symbol	b2		8638024						
ANR	8638056	Symbol	png_get_uint_16		8638024						
ANR	8638057	Function	random_u32	330:0:10238:10360							
ANR	8638058	FunctionDef	random_u32 ()		8638057	0					
ANR	8638059	CompoundStatement		332:0:10274:10360	8638057	0					
ANR	8638060	IdentifierDeclStatement	unsigned char b4 [ 4 ] ;	333:3:10279:10298	8638057	0	True				
ANR	8638061	IdentifierDecl	b4 [ 4 ]		8638057	0					
ANR	8638062	IdentifierDeclType	unsigned char [ 4 ]		8638057	0					
ANR	8638063	Identifier	b4		8638057	1					
ANR	8638064	PrimaryExpression	4		8638057	2					
ANR	8638065	ExpressionStatement	"randomize ( b4 , sizeof b4 )"	334:3:10303:10327	8638057	1	True				
ANR	8638066	CallExpression	"randomize ( b4 , sizeof b4 )"		8638057	0					
ANR	8638067	Callee	randomize		8638057	0					
ANR	8638068	Identifier	randomize		8638057	0					
ANR	8638069	ArgumentList	b4		8638057	1					
ANR	8638070	Argument	b4		8638057	0					
ANR	8638071	Identifier	b4		8638057	0					
ANR	8638072	Argument	sizeof b4		8638057	1					
ANR	8638073	SizeofExpression	sizeof b4		8638057	0					
ANR	8638074	Sizeof	sizeof		8638057	0					
ANR	8638075	Identifier	b4		8638057	1					
ANR	8638076	ReturnStatement	return png_get_uint_32 ( b4 ) ;	335:3:10332:10358	8638057	2	True				
ANR	8638077	CallExpression	png_get_uint_32 ( b4 )		8638057	0					
ANR	8638078	Callee	png_get_uint_32		8638057	0					
ANR	8638079	Identifier	png_get_uint_32		8638057	0					
ANR	8638080	ArgumentList	b4		8638057	1					
ANR	8638081	Argument	b4		8638057	0					
ANR	8638082	Identifier	b4		8638057	0					
ANR	8638083	ReturnType	static png_uint_32		8638057	1					
ANR	8638084	Identifier	random_u32		8638057	2					
ANR	8638085	ParameterList			8638057	3					
ANR	8638086	CFGEntryNode	ENTRY		8638057		True				
ANR	8638087	CFGExitNode	EXIT		8638057		True				
ANR	8638088	Symbol	b4		8638057						
ANR	8638089	Symbol	png_get_uint_32		8638057						
ANR	8638090	Function	random_mod	343:0:10542:10640							
ANR	8638091	FunctionDef	random_mod (unsigned int max)		8638090	0					
ANR	8638092	CompoundStatement		345:0:10591:10640	8638090	0					
ANR	8638093	ReturnStatement	return random_u16 ( ) % max ;	346:3:10596:10621	8638090	0	True				
ANR	8638094	MultiplicativeExpression	random_u16 ( ) % max		8638090	0		%			
ANR	8638095	CallExpression	random_u16 ( )		8638090	0					
ANR	8638096	Callee	random_u16		8638090	0					
ANR	8638097	Identifier	random_u16		8638090	0					
ANR	8638098	ArgumentList			8638090	1					
ANR	8638099	Identifier	max		8638090	1					
ANR	8638100	ReturnType	static unsigned int		8638090	1					
ANR	8638101	Identifier	random_mod		8638090	2					
ANR	8638102	ParameterList	unsigned int max		8638090	3					
ANR	8638103	Parameter	unsigned int max	344:11:10573:10588	8638090	0	True				
ANR	8638104	ParameterType	unsigned int		8638090	0					
ANR	8638105	Identifier	max		8638090	1					
ANR	8638106	CFGEntryNode	ENTRY		8638090		True				
ANR	8638107	CFGExitNode	EXIT		8638090		True				
ANR	8638108	Symbol	max		8638090						
ANR	8638109	Symbol	random_u16		8638090						
ANR	8638110	Function	random_choice	352:0:10777:10839							
ANR	8638111	FunctionDef	random_choice ()		8638110	0					
ANR	8638112	CompoundStatement		354:0:10808:10839	8638110	0					
ANR	8638113	ReturnStatement	return random_byte ( ) & 1 ;	355:3:10813:10837	8638110	0	True				
ANR	8638114	BitAndExpression	random_byte ( ) & 1		8638110	0		&			
ANR	8638115	CallExpression	random_byte ( )		8638110	0					
ANR	8638116	Callee	random_byte		8638110	0					
ANR	8638117	Identifier	random_byte		8638110	0					
ANR	8638118	ArgumentList			8638110	1					
ANR	8638119	PrimaryExpression	1		8638110	1					
ANR	8638120	ReturnType	static int		8638110	1					
ANR	8638121	Identifier	random_choice		8638110	2					
ANR	8638122	ParameterList			8638110	3					
ANR	8638123	CFGEntryNode	ENTRY		8638110		True				
ANR	8638124	CFGExitNode	EXIT		8638110		True				
ANR	8638125	Symbol	random_byte		8638110						
ANR	8638126	Function	standard_name	378:0:11907:13126							
ANR	8638127	FunctionDef	"standard_name (char * buffer , size_t bufsize , size_t pos , png_byte colour_type , int bit_depth , unsigned int npalette , int interlace_type , png_uint_32 w , png_uint_32 h , int do_interlace)"		8638126	0					
ANR	8638128	CompoundStatement		382:0:12113:13126	8638126	0					
ANR	8638129	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , colour_types [ colour_type ] )"	383:3:12118:12180	8638126	0	True				
ANR	8638130	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , colour_types [ colour_type ] )"		8638126	0		=			
ANR	8638131	Identifier	pos		8638126	0					
ANR	8638132	CallExpression	"safecat ( buffer , bufsize , pos , colour_types [ colour_type ] )"		8638126	1					
ANR	8638133	Callee	safecat		8638126	0					
ANR	8638134	Identifier	safecat		8638126	0					
ANR	8638135	ArgumentList	buffer		8638126	1					
ANR	8638136	Argument	buffer		8638126	0					
ANR	8638137	Identifier	buffer		8638126	0					
ANR	8638138	Argument	bufsize		8638126	1					
ANR	8638139	Identifier	bufsize		8638126	0					
ANR	8638140	Argument	pos		8638126	2					
ANR	8638141	Identifier	pos		8638126	0					
ANR	8638142	Argument	colour_types [ colour_type ]		8638126	3					
ANR	8638143	ArrayIndexing	colour_types [ colour_type ]		8638126	0					
ANR	8638144	Identifier	colour_types		8638126	0					
ANR	8638145	Identifier	colour_type		8638126	1					
ANR	8638146	IfStatement	if ( colour_type == 3 )		8638126	1					
ANR	8638147	Condition	colour_type == 3	384:7:12189:12204	8638126	0	True				
ANR	8638148	EqualityExpression	colour_type == 3		8638126	0		==			
ANR	8638149	Identifier	colour_type		8638126	0					
ANR	8638150	PrimaryExpression	3		8638126	1					
ANR	8638151	CompoundStatement		4:3:122:122	8638126	1					
ANR	8638152	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""["" )"	386:6:12244:12284	8638126	0	True				
ANR	8638153	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""["" )"		8638126	0		=			
ANR	8638154	Identifier	pos		8638126	0					
ANR	8638155	CallExpression	"safecat ( buffer , bufsize , pos , ""["" )"		8638126	1					
ANR	8638156	Callee	safecat		8638126	0					
ANR	8638157	Identifier	safecat		8638126	0					
ANR	8638158	ArgumentList	buffer		8638126	1					
ANR	8638159	Argument	buffer		8638126	0					
ANR	8638160	Identifier	buffer		8638126	0					
ANR	8638161	Argument	bufsize		8638126	1					
ANR	8638162	Identifier	bufsize		8638126	0					
ANR	8638163	Argument	pos		8638126	2					
ANR	8638164	Identifier	pos		8638126	0					
ANR	8638165	Argument	"""["""		8638126	3					
ANR	8638166	PrimaryExpression	"""["""		8638126	0					
ANR	8638167	ExpressionStatement	"pos = safecatn ( buffer , bufsize , pos , npalette )"	387:6:12292:12338	8638126	1	True				
ANR	8638168	AssignmentExpression	"pos = safecatn ( buffer , bufsize , pos , npalette )"		8638126	0		=			
ANR	8638169	Identifier	pos		8638126	0					
ANR	8638170	CallExpression	"safecatn ( buffer , bufsize , pos , npalette )"		8638126	1					
ANR	8638171	Callee	safecatn		8638126	0					
ANR	8638172	Identifier	safecatn		8638126	0					
ANR	8638173	ArgumentList	buffer		8638126	1					
ANR	8638174	Argument	buffer		8638126	0					
ANR	8638175	Identifier	buffer		8638126	0					
ANR	8638176	Argument	bufsize		8638126	1					
ANR	8638177	Identifier	bufsize		8638126	0					
ANR	8638178	Argument	pos		8638126	2					
ANR	8638179	Identifier	pos		8638126	0					
ANR	8638180	Argument	npalette		8638126	3					
ANR	8638181	Identifier	npalette		8638126	0					
ANR	8638182	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""]"" )"	388:6:12346:12386	8638126	2	True				
ANR	8638183	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""]"" )"		8638126	0		=			
ANR	8638184	Identifier	pos		8638126	0					
ANR	8638185	CallExpression	"safecat ( buffer , bufsize , pos , ""]"" )"		8638126	1					
ANR	8638186	Callee	safecat		8638126	0					
ANR	8638187	Identifier	safecat		8638126	0					
ANR	8638188	ArgumentList	buffer		8638126	1					
ANR	8638189	Argument	buffer		8638126	0					
ANR	8638190	Identifier	buffer		8638126	0					
ANR	8638191	Argument	bufsize		8638126	1					
ANR	8638192	Identifier	bufsize		8638126	0					
ANR	8638193	Argument	pos		8638126	2					
ANR	8638194	Identifier	pos		8638126	0					
ANR	8638195	Argument	"""]"""		8638126	3					
ANR	8638196	PrimaryExpression	"""]"""		8638126	0					
ANR	8638197	ElseStatement	else		8638126	0					
ANR	8638198	IfStatement	if ( npalette != 0 )		8638126	0					
ANR	8638199	Condition	npalette != 0	391:12:12406:12418	8638126	0	True				
ANR	8638200	EqualityExpression	npalette != 0		8638126	0		!=			
ANR	8638201	Identifier	npalette		8638126	0					
ANR	8638202	PrimaryExpression	0		8638126	1					
ANR	8638203	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""+tRNS"" )"	392:6:12427:12471	8638126	1	True				
ANR	8638204	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""+tRNS"" )"		8638126	0		=			
ANR	8638205	Identifier	pos		8638126	0					
ANR	8638206	CallExpression	"safecat ( buffer , bufsize , pos , ""+tRNS"" )"		8638126	1					
ANR	8638207	Callee	safecat		8638126	0					
ANR	8638208	Identifier	safecat		8638126	0					
ANR	8638209	ArgumentList	buffer		8638126	1					
ANR	8638210	Argument	buffer		8638126	0					
ANR	8638211	Identifier	buffer		8638126	0					
ANR	8638212	Argument	bufsize		8638126	1					
ANR	8638213	Identifier	bufsize		8638126	0					
ANR	8638214	Argument	pos		8638126	2					
ANR	8638215	Identifier	pos		8638126	0					
ANR	8638216	Argument	"""+tRNS"""		8638126	3					
ANR	8638217	PrimaryExpression	"""+tRNS"""		8638126	0					
ANR	8638218	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "" "" )"	394:3:12477:12517	8638126	2	True				
ANR	8638219	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "" "" )"		8638126	0		=			
ANR	8638220	Identifier	pos		8638126	0					
ANR	8638221	CallExpression	"safecat ( buffer , bufsize , pos , "" "" )"		8638126	1					
ANR	8638222	Callee	safecat		8638126	0					
ANR	8638223	Identifier	safecat		8638126	0					
ANR	8638224	ArgumentList	buffer		8638126	1					
ANR	8638225	Argument	buffer		8638126	0					
ANR	8638226	Identifier	buffer		8638126	0					
ANR	8638227	Argument	bufsize		8638126	1					
ANR	8638228	Identifier	bufsize		8638126	0					
ANR	8638229	Argument	pos		8638126	2					
ANR	8638230	Identifier	pos		8638126	0					
ANR	8638231	Argument	""" """		8638126	3					
ANR	8638232	PrimaryExpression	""" """		8638126	0					
ANR	8638233	ExpressionStatement	"pos = safecatn ( buffer , bufsize , pos , bit_depth )"	395:3:12522:12569	8638126	3	True				
ANR	8638234	AssignmentExpression	"pos = safecatn ( buffer , bufsize , pos , bit_depth )"		8638126	0		=			
ANR	8638235	Identifier	pos		8638126	0					
ANR	8638236	CallExpression	"safecatn ( buffer , bufsize , pos , bit_depth )"		8638126	1					
ANR	8638237	Callee	safecatn		8638126	0					
ANR	8638238	Identifier	safecatn		8638126	0					
ANR	8638239	ArgumentList	buffer		8638126	1					
ANR	8638240	Argument	buffer		8638126	0					
ANR	8638241	Identifier	buffer		8638126	0					
ANR	8638242	Argument	bufsize		8638126	1					
ANR	8638243	Identifier	bufsize		8638126	0					
ANR	8638244	Argument	pos		8638126	2					
ANR	8638245	Identifier	pos		8638126	0					
ANR	8638246	Argument	bit_depth		8638126	3					
ANR	8638247	Identifier	bit_depth		8638126	0					
ANR	8638248	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "" bit"" )"	396:3:12574:12617	8638126	4	True				
ANR	8638249	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "" bit"" )"		8638126	0		=			
ANR	8638250	Identifier	pos		8638126	0					
ANR	8638251	CallExpression	"safecat ( buffer , bufsize , pos , "" bit"" )"		8638126	1					
ANR	8638252	Callee	safecat		8638126	0					
ANR	8638253	Identifier	safecat		8638126	0					
ANR	8638254	ArgumentList	buffer		8638126	1					
ANR	8638255	Argument	buffer		8638126	0					
ANR	8638256	Identifier	buffer		8638126	0					
ANR	8638257	Argument	bufsize		8638126	1					
ANR	8638258	Identifier	bufsize		8638126	0					
ANR	8638259	Argument	pos		8638126	2					
ANR	8638260	Identifier	pos		8638126	0					
ANR	8638261	Argument	""" bit"""		8638126	3					
ANR	8638262	PrimaryExpression	""" bit"""		8638126	0					
ANR	8638263	IfStatement	if ( interlace_type != PNG_INTERLACE_NONE )		8638126	5					
ANR	8638264	Condition	interlace_type != PNG_INTERLACE_NONE	398:7:12627:12662	8638126	0	True				
ANR	8638265	EqualityExpression	interlace_type != PNG_INTERLACE_NONE		8638126	0		!=			
ANR	8638266	Identifier	interlace_type		8638126	0					
ANR	8638267	Identifier	PNG_INTERLACE_NONE		8638126	1					
ANR	8638268	CompoundStatement		18:3:554:554	8638126	1					
ANR	8638269	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "" interlaced"" )"	400:6:12676:12726	8638126	0	True				
ANR	8638270	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "" interlaced"" )"		8638126	0		=			
ANR	8638271	Identifier	pos		8638126	0					
ANR	8638272	CallExpression	"safecat ( buffer , bufsize , pos , "" interlaced"" )"		8638126	1					
ANR	8638273	Callee	safecat		8638126	0					
ANR	8638274	Identifier	safecat		8638126	0					
ANR	8638275	ArgumentList	buffer		8638126	1					
ANR	8638276	Argument	buffer		8638126	0					
ANR	8638277	Identifier	buffer		8638126	0					
ANR	8638278	Argument	bufsize		8638126	1					
ANR	8638279	Identifier	bufsize		8638126	0					
ANR	8638280	Argument	pos		8638126	2					
ANR	8638281	Identifier	pos		8638126	0					
ANR	8638282	Argument	""" interlaced"""		8638126	3					
ANR	8638283	PrimaryExpression	""" interlaced"""		8638126	0					
ANR	8638284	IfStatement	if ( do_interlace )		8638126	1					
ANR	8638285	Condition	do_interlace	401:10:12738:12749	8638126	0	True				
ANR	8638286	Identifier	do_interlace		8638126	0					
ANR	8638287	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""(pngvalid)"" )"	402:9:12761:12810	8638126	1	True				
ANR	8638288	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""(pngvalid)"" )"		8638126	0		=			
ANR	8638289	Identifier	pos		8638126	0					
ANR	8638290	CallExpression	"safecat ( buffer , bufsize , pos , ""(pngvalid)"" )"		8638126	1					
ANR	8638291	Callee	safecat		8638126	0					
ANR	8638292	Identifier	safecat		8638126	0					
ANR	8638293	ArgumentList	buffer		8638126	1					
ANR	8638294	Argument	buffer		8638126	0					
ANR	8638295	Identifier	buffer		8638126	0					
ANR	8638296	Argument	bufsize		8638126	1					
ANR	8638297	Identifier	bufsize		8638126	0					
ANR	8638298	Argument	pos		8638126	2					
ANR	8638299	Identifier	pos		8638126	0					
ANR	8638300	Argument	"""(pngvalid)"""		8638126	3					
ANR	8638301	PrimaryExpression	"""(pngvalid)"""		8638126	0					
ANR	8638302	ElseStatement	else		8638126	0					
ANR	8638303	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""(libpng)"" )"	404:9:12832:12879	8638126	0	True				
ANR	8638304	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""(libpng)"" )"		8638126	0		=			
ANR	8638305	Identifier	pos		8638126	0					
ANR	8638306	CallExpression	"safecat ( buffer , bufsize , pos , ""(libpng)"" )"		8638126	1					
ANR	8638307	Callee	safecat		8638126	0					
ANR	8638308	Identifier	safecat		8638126	0					
ANR	8638309	ArgumentList	buffer		8638126	1					
ANR	8638310	Argument	buffer		8638126	0					
ANR	8638311	Identifier	buffer		8638126	0					
ANR	8638312	Argument	bufsize		8638126	1					
ANR	8638313	Identifier	bufsize		8638126	0					
ANR	8638314	Argument	pos		8638126	2					
ANR	8638315	Identifier	pos		8638126	0					
ANR	8638316	Argument	"""(libpng)"""		8638126	3					
ANR	8638317	PrimaryExpression	"""(libpng)"""		8638126	0					
ANR	8638318	IfStatement	if ( w > 0 || h > 0 )		8638126	6					
ANR	8638319	Condition	w > 0 || h > 0	407:7:12894:12907	8638126	0	True				
ANR	8638320	OrExpression	w > 0 || h > 0		8638126	0		||			
ANR	8638321	RelationalExpression	w > 0		8638126	0		>			
ANR	8638322	Identifier	w		8638126	0					
ANR	8638323	PrimaryExpression	0		8638126	1					
ANR	8638324	RelationalExpression	h > 0		8638126	1		>			
ANR	8638325	Identifier	h		8638126	0					
ANR	8638326	PrimaryExpression	0		8638126	1					
ANR	8638327	CompoundStatement		27:3:799:799	8638126	1					
ANR	8638328	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "" "" )"	409:6:12921:12961	8638126	0	True				
ANR	8638329	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "" "" )"		8638126	0		=			
ANR	8638330	Identifier	pos		8638126	0					
ANR	8638331	CallExpression	"safecat ( buffer , bufsize , pos , "" "" )"		8638126	1					
ANR	8638332	Callee	safecat		8638126	0					
ANR	8638333	Identifier	safecat		8638126	0					
ANR	8638334	ArgumentList	buffer		8638126	1					
ANR	8638335	Argument	buffer		8638126	0					
ANR	8638336	Identifier	buffer		8638126	0					
ANR	8638337	Argument	bufsize		8638126	1					
ANR	8638338	Identifier	bufsize		8638126	0					
ANR	8638339	Argument	pos		8638126	2					
ANR	8638340	Identifier	pos		8638126	0					
ANR	8638341	Argument	""" """		8638126	3					
ANR	8638342	PrimaryExpression	""" """		8638126	0					
ANR	8638343	ExpressionStatement	"pos = safecatn ( buffer , bufsize , pos , w )"	410:6:12969:13008	8638126	1	True				
ANR	8638344	AssignmentExpression	"pos = safecatn ( buffer , bufsize , pos , w )"		8638126	0		=			
ANR	8638345	Identifier	pos		8638126	0					
ANR	8638346	CallExpression	"safecatn ( buffer , bufsize , pos , w )"		8638126	1					
ANR	8638347	Callee	safecatn		8638126	0					
ANR	8638348	Identifier	safecatn		8638126	0					
ANR	8638349	ArgumentList	buffer		8638126	1					
ANR	8638350	Argument	buffer		8638126	0					
ANR	8638351	Identifier	buffer		8638126	0					
ANR	8638352	Argument	bufsize		8638126	1					
ANR	8638353	Identifier	bufsize		8638126	0					
ANR	8638354	Argument	pos		8638126	2					
ANR	8638355	Identifier	pos		8638126	0					
ANR	8638356	Argument	w		8638126	3					
ANR	8638357	Identifier	w		8638126	0					
ANR	8638358	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""x"" )"	411:6:13016:13056	8638126	2	True				
ANR	8638359	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""x"" )"		8638126	0		=			
ANR	8638360	Identifier	pos		8638126	0					
ANR	8638361	CallExpression	"safecat ( buffer , bufsize , pos , ""x"" )"		8638126	1					
ANR	8638362	Callee	safecat		8638126	0					
ANR	8638363	Identifier	safecat		8638126	0					
ANR	8638364	ArgumentList	buffer		8638126	1					
ANR	8638365	Argument	buffer		8638126	0					
ANR	8638366	Identifier	buffer		8638126	0					
ANR	8638367	Argument	bufsize		8638126	1					
ANR	8638368	Identifier	bufsize		8638126	0					
ANR	8638369	Argument	pos		8638126	2					
ANR	8638370	Identifier	pos		8638126	0					
ANR	8638371	Argument	"""x"""		8638126	3					
ANR	8638372	PrimaryExpression	"""x"""		8638126	0					
ANR	8638373	ExpressionStatement	"pos = safecatn ( buffer , bufsize , pos , h )"	412:6:13064:13103	8638126	3	True				
ANR	8638374	AssignmentExpression	"pos = safecatn ( buffer , bufsize , pos , h )"		8638126	0		=			
ANR	8638375	Identifier	pos		8638126	0					
ANR	8638376	CallExpression	"safecatn ( buffer , bufsize , pos , h )"		8638126	1					
ANR	8638377	Callee	safecatn		8638126	0					
ANR	8638378	Identifier	safecatn		8638126	0					
ANR	8638379	ArgumentList	buffer		8638126	1					
ANR	8638380	Argument	buffer		8638126	0					
ANR	8638381	Identifier	buffer		8638126	0					
ANR	8638382	Argument	bufsize		8638126	1					
ANR	8638383	Identifier	bufsize		8638126	0					
ANR	8638384	Argument	pos		8638126	2					
ANR	8638385	Identifier	pos		8638126	0					
ANR	8638386	Argument	h		8638126	3					
ANR	8638387	Identifier	h		8638126	0					
ANR	8638388	ReturnStatement	return pos ;	415:3:13114:13124	8638126	7	True				
ANR	8638389	Identifier	pos		8638126	0					
ANR	8638390	ReturnType	static size_t		8638126	1					
ANR	8638391	Identifier	standard_name		8638126	2					
ANR	8638392	ParameterList	"char * buffer , size_t bufsize , size_t pos , png_byte colour_type , int bit_depth , unsigned int npalette , int interlace_type , png_uint_32 w , png_uint_32 h , int do_interlace"		8638126	3					
ANR	8638393	Parameter	char * buffer	379:14:11935:11946	8638126	0	True				
ANR	8638394	ParameterType	char *		8638126	0					
ANR	8638395	Identifier	buffer		8638126	1					
ANR	8638396	Parameter	size_t bufsize	379:28:11949:11962	8638126	1	True				
ANR	8638397	ParameterType	size_t		8638126	0					
ANR	8638398	Identifier	bufsize		8638126	1					
ANR	8638399	Parameter	size_t pos	379:44:11965:11974	8638126	2	True				
ANR	8638400	ParameterType	size_t		8638126	0					
ANR	8638401	Identifier	pos		8638126	1					
ANR	8638402	Parameter	png_byte colour_type	379:56:11977:11996	8638126	3	True				
ANR	8638403	ParameterType	png_byte		8638126	0					
ANR	8638404	Identifier	colour_type		8638126	1					
ANR	8638405	Parameter	int bit_depth	380:4:12003:12015	8638126	4	True				
ANR	8638406	ParameterType	int		8638126	0					
ANR	8638407	Identifier	bit_depth		8638126	1					
ANR	8638408	Parameter	unsigned int npalette	380:19:12018:12038	8638126	5	True				
ANR	8638409	ParameterType	unsigned int		8638126	0					
ANR	8638410	Identifier	npalette		8638126	1					
ANR	8638411	Parameter	int interlace_type	380:42:12041:12058	8638126	6	True				
ANR	8638412	ParameterType	int		8638126	0					
ANR	8638413	Identifier	interlace_type		8638126	1					
ANR	8638414	Parameter	png_uint_32 w	381:4:12065:12077	8638126	7	True				
ANR	8638415	ParameterType	png_uint_32		8638126	0					
ANR	8638416	Identifier	w		8638126	1					
ANR	8638417	Parameter	png_uint_32 h	381:19:12080:12092	8638126	8	True				
ANR	8638418	ParameterType	png_uint_32		8638126	0					
ANR	8638419	Identifier	h		8638126	1					
ANR	8638420	Parameter	int do_interlace	381:34:12095:12110	8638126	9	True				
ANR	8638421	ParameterType	int		8638126	0					
ANR	8638422	Identifier	do_interlace		8638126	1					
ANR	8638423	CFGEntryNode	ENTRY		8638126		True				
ANR	8638424	CFGExitNode	EXIT		8638126		True				
ANR	8638425	Symbol	* colour_type		8638126						
ANR	8638426	Symbol	bufsize		8638126						
ANR	8638427	Symbol	h		8638126						
ANR	8638428	Symbol	safecatn		8638126						
ANR	8638429	Symbol	colour_types		8638126						
ANR	8638430	Symbol	npalette		8638126						
ANR	8638431	Symbol	PNG_INTERLACE_NONE		8638126						
ANR	8638432	Symbol	colour_type		8638126						
ANR	8638433	Symbol	interlace_type		8638126						
ANR	8638434	Symbol	* colour_types		8638126						
ANR	8638435	Symbol	pos		8638126						
ANR	8638436	Symbol	safecat		8638126						
ANR	8638437	Symbol	w		8638126						
ANR	8638438	Symbol	do_interlace		8638126						
ANR	8638439	Symbol	buffer		8638126						
ANR	8638440	Symbol	bit_depth		8638126						
ANR	8638441	Function	standard_name_from_id	418:0:13129:13429							
ANR	8638442	FunctionDef	"standard_name_from_id (char * buffer , size_t bufsize , size_t pos , png_uint_32 id)"		8638441	0					
ANR	8638443	CompoundStatement		420:0:13223:13429	8638441	0					
ANR	8638444	ReturnStatement	"return standard_name ( buffer , bufsize , pos , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) , PALETTE_FROM_ID ( id ) , INTERLACE_FROM_ID ( id ) , WIDTH_FROM_ID ( id ) , HEIGHT_FROM_ID ( id ) , DO_INTERLACE_FROM_ID ( id ) ) ;"	421:3:13228:13427	8638441	0	True				
ANR	8638445	CallExpression	"standard_name ( buffer , bufsize , pos , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) , PALETTE_FROM_ID ( id ) , INTERLACE_FROM_ID ( id ) , WIDTH_FROM_ID ( id ) , HEIGHT_FROM_ID ( id ) , DO_INTERLACE_FROM_ID ( id ) )"		8638441	0					
ANR	8638446	Callee	standard_name		8638441	0					
ANR	8638447	Identifier	standard_name		8638441	0					
ANR	8638448	ArgumentList	buffer		8638441	1					
ANR	8638449	Argument	buffer		8638441	0					
ANR	8638450	Identifier	buffer		8638441	0					
ANR	8638451	Argument	bufsize		8638441	1					
ANR	8638452	Identifier	bufsize		8638441	0					
ANR	8638453	Argument	pos		8638441	2					
ANR	8638454	Identifier	pos		8638441	0					
ANR	8638455	Argument	COL_FROM_ID ( id )		8638441	3					
ANR	8638456	CallExpression	COL_FROM_ID ( id )		8638441	0					
ANR	8638457	Callee	COL_FROM_ID		8638441	0					
ANR	8638458	Identifier	COL_FROM_ID		8638441	0					
ANR	8638459	ArgumentList	id		8638441	1					
ANR	8638460	Argument	id		8638441	0					
ANR	8638461	Identifier	id		8638441	0					
ANR	8638462	Argument	DEPTH_FROM_ID ( id )		8638441	4					
ANR	8638463	CallExpression	DEPTH_FROM_ID ( id )		8638441	0					
ANR	8638464	Callee	DEPTH_FROM_ID		8638441	0					
ANR	8638465	Identifier	DEPTH_FROM_ID		8638441	0					
ANR	8638466	ArgumentList	id		8638441	1					
ANR	8638467	Argument	id		8638441	0					
ANR	8638468	Identifier	id		8638441	0					
ANR	8638469	Argument	PALETTE_FROM_ID ( id )		8638441	5					
ANR	8638470	CallExpression	PALETTE_FROM_ID ( id )		8638441	0					
ANR	8638471	Callee	PALETTE_FROM_ID		8638441	0					
ANR	8638472	Identifier	PALETTE_FROM_ID		8638441	0					
ANR	8638473	ArgumentList	id		8638441	1					
ANR	8638474	Argument	id		8638441	0					
ANR	8638475	Identifier	id		8638441	0					
ANR	8638476	Argument	INTERLACE_FROM_ID ( id )		8638441	6					
ANR	8638477	CallExpression	INTERLACE_FROM_ID ( id )		8638441	0					
ANR	8638478	Callee	INTERLACE_FROM_ID		8638441	0					
ANR	8638479	Identifier	INTERLACE_FROM_ID		8638441	0					
ANR	8638480	ArgumentList	id		8638441	1					
ANR	8638481	Argument	id		8638441	0					
ANR	8638482	Identifier	id		8638441	0					
ANR	8638483	Argument	WIDTH_FROM_ID ( id )		8638441	7					
ANR	8638484	CallExpression	WIDTH_FROM_ID ( id )		8638441	0					
ANR	8638485	Callee	WIDTH_FROM_ID		8638441	0					
ANR	8638486	Identifier	WIDTH_FROM_ID		8638441	0					
ANR	8638487	ArgumentList	id		8638441	1					
ANR	8638488	Argument	id		8638441	0					
ANR	8638489	Identifier	id		8638441	0					
ANR	8638490	Argument	HEIGHT_FROM_ID ( id )		8638441	8					
ANR	8638491	CallExpression	HEIGHT_FROM_ID ( id )		8638441	0					
ANR	8638492	Callee	HEIGHT_FROM_ID		8638441	0					
ANR	8638493	Identifier	HEIGHT_FROM_ID		8638441	0					
ANR	8638494	ArgumentList	id		8638441	1					
ANR	8638495	Argument	id		8638441	0					
ANR	8638496	Identifier	id		8638441	0					
ANR	8638497	Argument	DO_INTERLACE_FROM_ID ( id )		8638441	9					
ANR	8638498	CallExpression	DO_INTERLACE_FROM_ID ( id )		8638441	0					
ANR	8638499	Callee	DO_INTERLACE_FROM_ID		8638441	0					
ANR	8638500	Identifier	DO_INTERLACE_FROM_ID		8638441	0					
ANR	8638501	ArgumentList	id		8638441	1					
ANR	8638502	Argument	id		8638441	0					
ANR	8638503	Identifier	id		8638441	0					
ANR	8638504	ReturnType	static size_t		8638441	1					
ANR	8638505	Identifier	standard_name_from_id		8638441	2					
ANR	8638506	ParameterList	"char * buffer , size_t bufsize , size_t pos , png_uint_32 id"		8638441	3					
ANR	8638507	Parameter	char * buffer	419:22:13165:13176	8638441	0	True				
ANR	8638508	ParameterType	char *		8638441	0					
ANR	8638509	Identifier	buffer		8638441	1					
ANR	8638510	Parameter	size_t bufsize	419:36:13179:13192	8638441	1	True				
ANR	8638511	ParameterType	size_t		8638441	0					
ANR	8638512	Identifier	bufsize		8638441	1					
ANR	8638513	Parameter	size_t pos	419:52:13195:13204	8638441	2	True				
ANR	8638514	ParameterType	size_t		8638441	0					
ANR	8638515	Identifier	pos		8638441	1					
ANR	8638516	Parameter	png_uint_32 id	419:64:13207:13220	8638441	3	True				
ANR	8638517	ParameterType	png_uint_32		8638441	0					
ANR	8638518	Identifier	id		8638441	1					
ANR	8638519	CFGEntryNode	ENTRY		8638441		True				
ANR	8638520	CFGExitNode	EXIT		8638441		True				
ANR	8638521	Symbol	WIDTH_FROM_ID		8638441						
ANR	8638522	Symbol	PALETTE_FROM_ID		8638441						
ANR	8638523	Symbol	pos		8638441						
ANR	8638524	Symbol	COL_FROM_ID		8638441						
ANR	8638525	Symbol	bufsize		8638441						
ANR	8638526	Symbol	DEPTH_FROM_ID		8638441						
ANR	8638527	Symbol	standard_name		8638441						
ANR	8638528	Symbol	HEIGHT_FROM_ID		8638441						
ANR	8638529	Symbol	buffer		8638441						
ANR	8638530	Symbol	id		8638441						
ANR	8638531	Symbol	DO_INTERLACE_FROM_ID		8638441						
ANR	8638532	Symbol	INTERLACE_FROM_ID		8638441						
ANR	8638533	Function	next_format	448:0:14050:15551							
ANR	8638534	FunctionDef	"next_format (png_bytep colour_type , png_bytep bit_depth , unsigned int * palette_number , int low_depth_gray , int tRNS)"		8638533	0					
ANR	8638535	CompoundStatement		451:0:14180:15551	8638533	0					
ANR	8638536	IfStatement	if ( * bit_depth == 0 )		8638533	0					
ANR	8638537	Condition	* bit_depth == 0	452:7:14189:14203	8638533	0	True				
ANR	8638538	EqualityExpression	* bit_depth == 0		8638533	0		==			
ANR	8638539	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638540	UnaryOperator	*		8638533	0					
ANR	8638541	Identifier	bit_depth		8638533	1					
ANR	8638542	PrimaryExpression	0		8638533	1					
ANR	8638543	CompoundStatement		3:3:28:28	8638533	1					
ANR	8638544	ExpressionStatement	* colour_type = 0	454:6:14217:14233	8638533	0	True				
ANR	8638545	AssignmentExpression	* colour_type = 0		8638533	0		=			
ANR	8638546	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638547	UnaryOperator	*		8638533	0					
ANR	8638548	Identifier	colour_type		8638533	1					
ANR	8638549	PrimaryExpression	0		8638533	1					
ANR	8638550	IfStatement	if ( low_depth_gray )		8638533	1					
ANR	8638551	Condition	low_depth_gray	455:10:14245:14258	8638533	0	True				
ANR	8638552	Identifier	low_depth_gray		8638533	0					
ANR	8638553	ExpressionStatement	* bit_depth = 1	456:9:14270:14284	8638533	1	True				
ANR	8638554	AssignmentExpression	* bit_depth = 1		8638533	0		=			
ANR	8638555	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638556	UnaryOperator	*		8638533	0					
ANR	8638557	Identifier	bit_depth		8638533	1					
ANR	8638558	PrimaryExpression	1		8638533	1					
ANR	8638559	ElseStatement	else		8638533	0					
ANR	8638560	ExpressionStatement	* bit_depth = 8	458:9:14306:14320	8638533	0	True				
ANR	8638561	AssignmentExpression	* bit_depth = 8		8638533	0		=			
ANR	8638562	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638563	UnaryOperator	*		8638533	0					
ANR	8638564	Identifier	bit_depth		8638533	1					
ANR	8638565	PrimaryExpression	8		8638533	1					
ANR	8638566	ExpressionStatement	* palette_number = 0	459:6:14328:14347	8638533	2	True				
ANR	8638567	AssignmentExpression	* palette_number = 0		8638533	0		=			
ANR	8638568	UnaryOperationExpression	* palette_number		8638533	0					
ANR	8638569	UnaryOperator	*		8638533	0					
ANR	8638570	Identifier	palette_number		8638533	1					
ANR	8638571	PrimaryExpression	0		8638533	1					
ANR	8638572	ReturnStatement	return 1 ;	460:6:14355:14363	8638533	3	True				
ANR	8638573	PrimaryExpression	1		8638533	0					
ANR	8638574	IfStatement	if ( * colour_type < 4 )		8638533	1					
ANR	8638575	Condition	* colour_type < 4	463:8:14379:14394	8638533	0	True				
ANR	8638576	RelationalExpression	* colour_type < 4		8638533	0		<			
ANR	8638577	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638578	UnaryOperator	*		8638533	0					
ANR	8638579	Identifier	colour_type		8638533	1					
ANR	8638580	PrimaryExpression	4		8638533	1					
ANR	8638581	CompoundStatement		19:6:424:450	8638533	1					
ANR	8638582	IdentifierDeclStatement	unsigned int pn = ++ * palette_number ;	468:6:14562:14597	8638533	0	True				
ANR	8638583	IdentifierDecl	pn = ++ * palette_number		8638533	0					
ANR	8638584	IdentifierDeclType	unsigned int		8638533	0					
ANR	8638585	Identifier	pn		8638533	1					
ANR	8638586	AssignmentExpression	pn = ++ * palette_number		8638533	2		=			
ANR	8638587	Identifier	pn		8638533	0					
ANR	8638588	UnaryExpression	++ * palette_number		8638533	1					
ANR	8638589	IncDec	++		8638533	0					
ANR	8638590	UnaryOperationExpression	* palette_number		8638533	1					
ANR	8638591	UnaryOperator	*		8638533	0					
ANR	8638592	Identifier	palette_number		8638533	1					
ANR	8638593	IdentifierDeclStatement	png_byte ct = * colour_type ;	469:6:14605:14631	8638533	1	True				
ANR	8638594	IdentifierDecl	ct = * colour_type		8638533	0					
ANR	8638595	IdentifierDeclType	png_byte		8638533	0					
ANR	8638596	Identifier	ct		8638533	1					
ANR	8638597	AssignmentExpression	ct = * colour_type		8638533	2		=			
ANR	8638598	Identifier	ct		8638533	0					
ANR	8638599	UnaryOperationExpression	* colour_type		8638533	1					
ANR	8638600	UnaryOperator	*		8638533	0					
ANR	8638601	Identifier	colour_type		8638533	1					
ANR	8638602	IfStatement	if ( ( ( ct == 0 || ct == 2 ) && tRNS && pn < 2 ) || ( ct == 3 && pn < PALETTE_COUNT ( * bit_depth ) ) )		8638533	2					
ANR	8638603	Condition	( ( ct == 0 || ct == 2 ) && tRNS && pn < 2 ) || ( ct == 3 && pn < PALETTE_COUNT ( * bit_depth ) )	471:10:14644:14766	8638533	0	True				
ANR	8638604	OrExpression	( ( ct == 0 || ct == 2 ) && tRNS && pn < 2 ) || ( ct == 3 && pn < PALETTE_COUNT ( * bit_depth ) )		8638533	0		||			
ANR	8638605	AndExpression	( ct == 0 || ct == 2 ) && tRNS && pn < 2		8638533	0		&&			
ANR	8638606	OrExpression	ct == 0 || ct == 2		8638533	0		||			
ANR	8638607	EqualityExpression	ct == 0		8638533	0		==			
ANR	8638608	Identifier	ct		8638533	0					
ANR	8638609	PrimaryExpression	0		8638533	1					
ANR	8638610	EqualityExpression	ct == 2		8638533	1		==			
ANR	8638611	Identifier	ct		8638533	0					
ANR	8638612	PrimaryExpression	2		8638533	1					
ANR	8638613	AndExpression	tRNS && pn < 2		8638533	1		&&			
ANR	8638614	Identifier	tRNS		8638533	0					
ANR	8638615	RelationalExpression	pn < 2		8638533	1		<			
ANR	8638616	Identifier	pn		8638533	0					
ANR	8638617	PrimaryExpression	2		8638533	1					
ANR	8638618	AndExpression	ct == 3 && pn < PALETTE_COUNT ( * bit_depth )		8638533	1		&&			
ANR	8638619	EqualityExpression	ct == 3		8638533	0		==			
ANR	8638620	Identifier	ct		8638533	0					
ANR	8638621	PrimaryExpression	3		8638533	1					
ANR	8638622	RelationalExpression	pn < PALETTE_COUNT ( * bit_depth )		8638533	1		<			
ANR	8638623	Identifier	pn		8638533	0					
ANR	8638624	CallExpression	PALETTE_COUNT ( * bit_depth )		8638533	1					
ANR	8638625	Callee	PALETTE_COUNT		8638533	0					
ANR	8638626	Identifier	PALETTE_COUNT		8638533	0					
ANR	8638627	ArgumentList	* bit_depth		8638533	1					
ANR	8638628	Argument	* bit_depth		8638533	0					
ANR	8638629	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638630	UnaryOperator	*		8638533	0					
ANR	8638631	Identifier	bit_depth		8638533	1					
ANR	8638632	ReturnStatement	return 1 ;	473:9:14778:14786	8638533	1	True				
ANR	8638633	PrimaryExpression	1		8638533	0					
ANR	8638634	ExpressionStatement	* palette_number = 0	476:6:14826:14845	8638533	3	True				
ANR	8638635	AssignmentExpression	* palette_number = 0		8638533	0		=			
ANR	8638636	UnaryOperationExpression	* palette_number		8638533	0					
ANR	8638637	UnaryOperator	*		8638533	0					
ANR	8638638	Identifier	palette_number		8638533	1					
ANR	8638639	PrimaryExpression	0		8638533	1					
ANR	8638640	ExpressionStatement	* bit_depth = ( png_byte ) ( * bit_depth << 1 )	479:3:14856:14896	8638533	2	True				
ANR	8638641	AssignmentExpression	* bit_depth = ( png_byte ) ( * bit_depth << 1 )		8638533	0		=			
ANR	8638642	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638643	UnaryOperator	*		8638533	0					
ANR	8638644	Identifier	bit_depth		8638533	1					
ANR	8638645	CastExpression	( png_byte ) ( * bit_depth << 1 )		8638533	1					
ANR	8638646	CastTarget	png_byte		8638533	0					
ANR	8638647	ShiftExpression	* bit_depth << 1		8638533	1		<<			
ANR	8638648	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638649	UnaryOperator	*		8638533	0					
ANR	8638650	Identifier	bit_depth		8638533	1					
ANR	8638651	PrimaryExpression	1		8638533	1					
ANR	8638652	Statement	if	482:3:14956:14957	8638533	3	True				
ANR	8638653	Statement	(	482:6:14959:14959	8638533	4	True				
ANR	8638654	Statement	*	482:7:14960:14960	8638533	5	True				
ANR	8638655	Statement	bit_depth	482:8:14961:14969	8638533	6	True				
ANR	8638656	Statement	<=	482:18:14971:14972	8638533	7	True				
ANR	8638657	Statement	8	482:21:14974:14974	8638533	8	True				
ANR	8638658	Statement	||	484:9:15001:15002	8638533	9	True				
ANR	8638659	Statement	(	484:12:15004:15004	8638533	10	True				
ANR	8638660	Statement	*	484:13:15005:15005	8638533	11	True				
ANR	8638661	Statement	colour_type	484:14:15006:15016	8638533	12	True				
ANR	8638662	Statement	!=	484:26:15018:15019	8638533	13	True				
ANR	8638663	Statement	3	484:29:15021:15021	8638533	14	True				
ANR	8638664	Statement	&&	484:31:15023:15024	8638533	15	True				
ANR	8638665	Statement	*	484:34:15026:15026	8638533	16	True				
ANR	8638666	Statement	bit_depth	484:35:15027:15035	8638533	17	True				
ANR	8638667	Statement	<=	484:45:15037:15038	8638533	18	True				
ANR	8638668	Statement	16	484:48:15040:15041	8638533	19	True				
ANR	8638669	Statement	)	484:50:15042:15042	8638533	20	True				
ANR	8638670	Statement	)	486:6:15057:15057	8638533	21	True				
ANR	8638671	ReturnStatement	return 1 ;	487:6:15065:15073	8638533	22	True				
ANR	8638672	PrimaryExpression	1		8638533	0					
ANR	8638673	SwitchStatement	switch ( * colour_type )		8638533	23					
ANR	8638674	Condition	* colour_type	490:11:15149:15160	8638533	0	True				
ANR	8638675	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638676	UnaryOperator	*		8638533	0					
ANR	8638677	Identifier	colour_type		8638533	1					
ANR	8638678	CompoundStatement		41:3:985:985	8638533	1					
ANR	8638679	Label	case 0 :	492:6:15174:15180	8638533	0	True				
ANR	8638680	ExpressionStatement	* colour_type = 2	493:9:15191:15207	8638533	1	True				
ANR	8638681	AssignmentExpression	* colour_type = 2		8638533	0		=			
ANR	8638682	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638683	UnaryOperator	*		8638533	0					
ANR	8638684	Identifier	colour_type		8638533	1					
ANR	8638685	PrimaryExpression	2		8638533	1					
ANR	8638686	ExpressionStatement	* bit_depth = 8	494:9:15218:15232	8638533	2	True				
ANR	8638687	AssignmentExpression	* bit_depth = 8		8638533	0		=			
ANR	8638688	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638689	UnaryOperator	*		8638533	0					
ANR	8638690	Identifier	bit_depth		8638533	1					
ANR	8638691	PrimaryExpression	8		8638533	1					
ANR	8638692	ReturnStatement	return 1 ;	495:9:15243:15251	8638533	3	True				
ANR	8638693	PrimaryExpression	1		8638533	0					
ANR	8638694	Label	case 2 :	497:6:15260:15266	8638533	4	True				
ANR	8638695	ExpressionStatement	* colour_type = 3	498:9:15277:15293	8638533	5	True				
ANR	8638696	AssignmentExpression	* colour_type = 3		8638533	0		=			
ANR	8638697	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638698	UnaryOperator	*		8638533	0					
ANR	8638699	Identifier	colour_type		8638533	1					
ANR	8638700	PrimaryExpression	3		8638533	1					
ANR	8638701	ExpressionStatement	* bit_depth = 1	499:9:15304:15318	8638533	6	True				
ANR	8638702	AssignmentExpression	* bit_depth = 1		8638533	0		=			
ANR	8638703	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638704	UnaryOperator	*		8638533	0					
ANR	8638705	Identifier	bit_depth		8638533	1					
ANR	8638706	PrimaryExpression	1		8638533	1					
ANR	8638707	ReturnStatement	return 1 ;	500:9:15329:15337	8638533	7	True				
ANR	8638708	PrimaryExpression	1		8638533	0					
ANR	8638709	Label	case 3 :	502:6:15346:15352	8638533	8	True				
ANR	8638710	ExpressionStatement	* colour_type = 4	503:9:15363:15379	8638533	9	True				
ANR	8638711	AssignmentExpression	* colour_type = 4		8638533	0		=			
ANR	8638712	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638713	UnaryOperator	*		8638533	0					
ANR	8638714	Identifier	colour_type		8638533	1					
ANR	8638715	PrimaryExpression	4		8638533	1					
ANR	8638716	ExpressionStatement	* bit_depth = 8	504:9:15390:15404	8638533	10	True				
ANR	8638717	AssignmentExpression	* bit_depth = 8		8638533	0		=			
ANR	8638718	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638719	UnaryOperator	*		8638533	0					
ANR	8638720	Identifier	bit_depth		8638533	1					
ANR	8638721	PrimaryExpression	8		8638533	1					
ANR	8638722	ReturnStatement	return 1 ;	505:9:15415:15423	8638533	11	True				
ANR	8638723	PrimaryExpression	1		8638533	0					
ANR	8638724	Label	case 4 :	507:6:15432:15438	8638533	12	True				
ANR	8638725	ExpressionStatement	* colour_type = 6	508:9:15449:15465	8638533	13	True				
ANR	8638726	AssignmentExpression	* colour_type = 6		8638533	0		=			
ANR	8638727	UnaryOperationExpression	* colour_type		8638533	0					
ANR	8638728	UnaryOperator	*		8638533	0					
ANR	8638729	Identifier	colour_type		8638533	1					
ANR	8638730	PrimaryExpression	6		8638533	1					
ANR	8638731	ExpressionStatement	* bit_depth = 8	509:9:15476:15490	8638533	14	True				
ANR	8638732	AssignmentExpression	* bit_depth = 8		8638533	0		=			
ANR	8638733	UnaryOperationExpression	* bit_depth		8638533	0					
ANR	8638734	UnaryOperator	*		8638533	0					
ANR	8638735	Identifier	bit_depth		8638533	1					
ANR	8638736	PrimaryExpression	8		8638533	1					
ANR	8638737	ReturnStatement	return 1 ;	510:9:15501:15509	8638533	15	True				
ANR	8638738	PrimaryExpression	1		8638533	0					
ANR	8638739	Label	default :	512:6:15518:15525	8638533	16	True				
ANR	8638740	Identifier	default		8638533	0					
ANR	8638741	ReturnStatement	return 0 ;	513:9:15536:15544	8638533	17	True				
ANR	8638742	PrimaryExpression	0		8638533	0					
ANR	8638743	ReturnType	static int		8638533	1					
ANR	8638744	Identifier	next_format		8638533	2					
ANR	8638745	ParameterList	"png_bytep colour_type , png_bytep bit_depth , unsigned int * palette_number , int low_depth_gray , int tRNS"		8638533	3					
ANR	8638746	Parameter	png_bytep colour_type	449:12:14073:14093	8638533	0	True				
ANR	8638747	ParameterType	png_bytep		8638533	0					
ANR	8638748	Identifier	colour_type		8638533	1					
ANR	8638749	Parameter	png_bytep bit_depth	449:35:14096:14114	8638533	1	True				
ANR	8638750	ParameterType	png_bytep		8638533	0					
ANR	8638751	Identifier	bit_depth		8638533	1					
ANR	8638752	Parameter	unsigned int * palette_number	450:3:14120:14147	8638533	2	True				
ANR	8638753	ParameterType	unsigned int *		8638533	0					
ANR	8638754	Identifier	palette_number		8638533	1					
ANR	8638755	Parameter	int low_depth_gray	450:33:14150:14167	8638533	3	True				
ANR	8638756	ParameterType	int		8638533	0					
ANR	8638757	Identifier	low_depth_gray		8638533	1					
ANR	8638758	Parameter	int tRNS	450:53:14170:14177	8638533	4	True				
ANR	8638759	ParameterType	int		8638533	0					
ANR	8638760	Identifier	tRNS		8638533	1					
ANR	8638761	CFGEntryNode	ENTRY		8638533		True				
ANR	8638762	CFGExitNode	EXIT		8638533		True				
ANR	8638763	Symbol	colour_type		8638533						
ANR	8638764	Symbol	ct		8638533						
ANR	8638765	Symbol	low_depth_gray		8638533						
ANR	8638766	Symbol	tRNS		8638533						
ANR	8638767	Symbol	* colour_type		8638533						
ANR	8638768	Symbol	* bit_depth		8638533						
ANR	8638769	Symbol	bit_depth		8638533						
ANR	8638770	Symbol	* palette_number		8638533						
ANR	8638771	Symbol	palette_number		8638533						
ANR	8638772	Symbol	pn		8638533						
ANR	8638773	Symbol	PALETTE_COUNT		8638533						
ANR	8638774	Function	sample	518:0:15591:16806							
ANR	8638775	FunctionDef	"sample (png_const_bytep row , png_byte colour_type , png_byte bit_depth , png_uint_32 x , unsigned int sample_index , int swap16 , int littleendian)"		8638774	0					
ANR	8638776	CompoundStatement		521:0:15757:16806	8638774	0					
ANR	8638777	IdentifierDeclStatement	"png_uint_32 bit_index , result ;"	522:3:15762:15791	8638774	0	True				
ANR	8638778	IdentifierDecl	bit_index		8638774	0					
ANR	8638779	IdentifierDeclType	png_uint_32		8638774	0					
ANR	8638780	Identifier	bit_index		8638774	1					
ANR	8638781	IdentifierDecl	result		8638774	1					
ANR	8638782	IdentifierDeclType	png_uint_32		8638774	0					
ANR	8638783	Identifier	result		8638774	1					
ANR	8638784	ExpressionStatement	x *= bit_depth	525:3:15850:15864	8638774	1	True				
ANR	8638785	AssignmentExpression	x *= bit_depth		8638774	0		*=			
ANR	8638786	Identifier	x		8638774	0					
ANR	8638787	Identifier	bit_depth		8638774	1					
ANR	8638788	ExpressionStatement	bit_index = x	526:3:15869:15882	8638774	2	True				
ANR	8638789	AssignmentExpression	bit_index = x		8638774	0		=			
ANR	8638790	Identifier	bit_index		8638774	0					
ANR	8638791	Identifier	x		8638774	1					
ANR	8638792	IfStatement	if ( ( colour_type & 1 ) == 0 )		8638774	3					
ANR	8638793	Condition	( colour_type & 1 ) == 0	528:7:15892:15913	8638774	0	True				
ANR	8638794	EqualityExpression	( colour_type & 1 ) == 0		8638774	0		==			
ANR	8638795	BitAndExpression	colour_type & 1		8638774	0		&			
ANR	8638796	Identifier	colour_type		8638774	0					
ANR	8638797	PrimaryExpression	1		8638774	1					
ANR	8638798	PrimaryExpression	0		8638774	1					
ANR	8638799	CompoundStatement		9:3:176:176	8638774	1					
ANR	8638800	IfStatement	if ( colour_type & 2 )		8638774	0					
ANR	8638801	Condition	colour_type & 2	530:10:15946:15960	8638774	0	True				
ANR	8638802	BitAndExpression	colour_type & 2		8638774	0		&			
ANR	8638803	Identifier	colour_type		8638774	0					
ANR	8638804	PrimaryExpression	2		8638774	1					
ANR	8638805	ExpressionStatement	bit_index *= 3	531:9:15972:15986	8638774	1	True				
ANR	8638806	AssignmentExpression	bit_index *= 3		8638774	0		*=			
ANR	8638807	Identifier	bit_index		8638774	0					
ANR	8638808	PrimaryExpression	3		8638774	1					
ANR	8638809	IfStatement	if ( colour_type & 4 )		8638774	1					
ANR	8638810	Condition	colour_type & 4	533:10:15999:16013	8638774	0	True				
ANR	8638811	BitAndExpression	colour_type & 4		8638774	0		&			
ANR	8638812	Identifier	colour_type		8638774	0					
ANR	8638813	PrimaryExpression	4		8638774	1					
ANR	8638814	ExpressionStatement	bit_index += x	534:9:16025:16039	8638774	1	True				
ANR	8638815	AssignmentExpression	bit_index += x		8638774	0		+=			
ANR	8638816	Identifier	bit_index		8638774	0					
ANR	8638817	Identifier	x		8638774	1					
ANR	8638818	IfStatement	if ( colour_type & ( 2 + 4 ) )		8638774	2					
ANR	8638819	Condition	colour_type & ( 2 + 4 )	537:10:16115:16133	8638774	0	True				
ANR	8638820	BitAndExpression	colour_type & ( 2 + 4 )		8638774	0		&			
ANR	8638821	Identifier	colour_type		8638774	0					
ANR	8638822	AdditiveExpression	2 + 4		8638774	1		+			
ANR	8638823	PrimaryExpression	2		8638774	0					
ANR	8638824	PrimaryExpression	4		8638774	1					
ANR	8638825	ExpressionStatement	bit_index += sample_index * bit_depth	538:9:16145:16182	8638774	1	True				
ANR	8638826	AssignmentExpression	bit_index += sample_index * bit_depth		8638774	0		+=			
ANR	8638827	Identifier	bit_index		8638774	0					
ANR	8638828	MultiplicativeExpression	sample_index * bit_depth		8638774	1		*			
ANR	8638829	Identifier	sample_index		8638774	0					
ANR	8638830	Identifier	bit_depth		8638774	1					
ANR	8638831	ExpressionStatement	row += bit_index >> 3	542:3:16248:16269	8638774	4	True				
ANR	8638832	AssignmentExpression	row += bit_index >> 3		8638774	0		+=			
ANR	8638833	Identifier	row		8638774	0					
ANR	8638834	ShiftExpression	bit_index >> 3		8638774	1		>>			
ANR	8638835	Identifier	bit_index		8638774	0					
ANR	8638836	PrimaryExpression	3		8638774	1					
ANR	8638837	ExpressionStatement	result = * row	543:3:16274:16287	8638774	5	True				
ANR	8638838	AssignmentExpression	result = * row		8638774	0		=			
ANR	8638839	Identifier	result		8638774	0					
ANR	8638840	UnaryOperationExpression	* row		8638774	1					
ANR	8638841	UnaryOperator	*		8638774	0					
ANR	8638842	Identifier	row		8638774	1					
ANR	8638843	IfStatement	if ( bit_depth == 8 )		8638774	6					
ANR	8638844	Condition	bit_depth == 8	545:7:16297:16310	8638774	0	True				
ANR	8638845	EqualityExpression	bit_depth == 8		8638774	0		==			
ANR	8638846	Identifier	bit_depth		8638774	0					
ANR	8638847	PrimaryExpression	8		8638774	1					
ANR	8638848	ReturnStatement	return result ;	546:6:16319:16332	8638774	1	True				
ANR	8638849	Identifier	result		8638774	0					
ANR	8638850	ElseStatement	else		8638774	0					
ANR	8638851	IfStatement	if ( bit_depth > 8 )		8638774	0					
ANR	8638852	Condition	bit_depth > 8	548:12:16347:16359	8638774	0	True				
ANR	8638853	RelationalExpression	bit_depth > 8		8638774	0		>			
ANR	8638854	Identifier	bit_depth		8638774	0					
ANR	8638855	PrimaryExpression	8		8638774	1					
ANR	8638856	CompoundStatement		29:3:607:607	8638774	1					
ANR	8638857	IfStatement	if ( swap16 )		8638774	0					
ANR	8638858	Condition	swap16	550:10:16377:16382	8638774	0	True				
ANR	8638859	Identifier	swap16		8638774	0					
ANR	8638860	ReturnStatement	return ( * ++ row << 8 ) + result ;	551:9:16394:16423	8638774	1	True				
ANR	8638861	AdditiveExpression	( * ++ row << 8 ) + result		8638774	0		+			
ANR	8638862	ShiftExpression	* ++ row << 8		8638774	0		<<			
ANR	8638863	UnaryOperationExpression	* ++ row		8638774	0					
ANR	8638864	UnaryOperator	*		8638774	0					
ANR	8638865	UnaryExpression	++ row		8638774	1					
ANR	8638866	IncDec	++		8638774	0					
ANR	8638867	Identifier	row		8638774	1					
ANR	8638868	PrimaryExpression	8		8638774	1					
ANR	8638869	Identifier	result		8638774	1					
ANR	8638870	ElseStatement	else		8638774	0					
ANR	8638871	ReturnStatement	return ( result << 8 ) + * ++ row ;	553:9:16445:16474	8638774	0	True				
ANR	8638872	AdditiveExpression	( result << 8 ) + * ++ row		8638774	0		+			
ANR	8638873	ShiftExpression	result << 8		8638774	0		<<			
ANR	8638874	Identifier	result		8638774	0					
ANR	8638875	PrimaryExpression	8		8638774	1					
ANR	8638876	UnaryOperationExpression	* ++ row		8638774	1					
ANR	8638877	UnaryOperator	*		8638774	0					
ANR	8638878	UnaryExpression	++ row		8638774	1					
ANR	8638879	IncDec	++		8638774	0					
ANR	8638880	Identifier	row		8638774	1					
ANR	8638881	ExpressionStatement	bit_index &= 7	560:3:16670:16684	8638774	7	True				
ANR	8638882	AssignmentExpression	bit_index &= 7		8638774	0		&=			
ANR	8638883	Identifier	bit_index		8638774	0					
ANR	8638884	PrimaryExpression	7		8638774	1					
ANR	8638885	IfStatement	if ( ! littleendian )		8638774	8					
ANR	8638886	Condition	! littleendian	562:7:16694:16706	8638774	0	True				
ANR	8638887	UnaryOperationExpression	! littleendian		8638774	0					
ANR	8638888	UnaryOperator	!		8638774	0					
ANR	8638889	Identifier	littleendian		8638774	1					
ANR	8638890	ExpressionStatement	bit_index = 8 - bit_index - bit_depth	563:6:16715:16748	8638774	1	True				
ANR	8638891	AssignmentExpression	bit_index = 8 - bit_index - bit_depth		8638774	0		=			
ANR	8638892	Identifier	bit_index		8638774	0					
ANR	8638893	AdditiveExpression	8 - bit_index - bit_depth		8638774	1		-			
ANR	8638894	PrimaryExpression	8		8638774	0					
ANR	8638895	AdditiveExpression	bit_index - bit_depth		8638774	1		-			
ANR	8638896	Identifier	bit_index		8638774	0					
ANR	8638897	Identifier	bit_depth		8638774	1					
ANR	8638898	ReturnStatement	return ( result >> bit_index ) & ( ( 1U << bit_depth ) - 1 ) ;	565:3:16754:16804	8638774	9	True				
ANR	8638899	BitAndExpression	( result >> bit_index ) & ( ( 1U << bit_depth ) - 1 )		8638774	0		&			
ANR	8638900	ShiftExpression	result >> bit_index		8638774	0		>>			
ANR	8638901	Identifier	result		8638774	0					
ANR	8638902	Identifier	bit_index		8638774	1					
ANR	8638903	AdditiveExpression	( 1U << bit_depth ) - 1		8638774	1		-			
ANR	8638904	ShiftExpression	1U << bit_depth		8638774	0		<<			
ANR	8638905	PrimaryExpression	1U		8638774	0					
ANR	8638906	Identifier	bit_depth		8638774	1					
ANR	8638907	PrimaryExpression	1		8638774	1					
ANR	8638908	ReturnType	static unsigned int		8638774	1					
ANR	8638909	Identifier	sample		8638774	2					
ANR	8638910	ParameterList	"png_const_bytep row , png_byte colour_type , png_byte bit_depth , png_uint_32 x , unsigned int sample_index , int swap16 , int littleendian"		8638774	3					
ANR	8638911	Parameter	png_const_bytep row	519:7:15618:15636	8638774	0	True				
ANR	8638912	ParameterType	png_const_bytep		8638774	0					
ANR	8638913	Identifier	row		8638774	1					
ANR	8638914	Parameter	png_byte colour_type	519:28:15639:15658	8638774	1	True				
ANR	8638915	ParameterType	png_byte		8638774	0					
ANR	8638916	Identifier	colour_type		8638774	1					
ANR	8638917	Parameter	png_byte bit_depth	519:50:15661:15678	8638774	2	True				
ANR	8638918	ParameterType	png_byte		8638774	0					
ANR	8638919	Identifier	bit_depth		8638774	1					
ANR	8638920	Parameter	png_uint_32 x	520:4:15685:15697	8638774	3	True				
ANR	8638921	ParameterType	png_uint_32		8638774	0					
ANR	8638922	Identifier	x		8638774	1					
ANR	8638923	Parameter	unsigned int sample_index	520:19:15700:15724	8638774	4	True				
ANR	8638924	ParameterType	unsigned int		8638774	0					
ANR	8638925	Identifier	sample_index		8638774	1					
ANR	8638926	Parameter	int swap16	520:46:15727:15736	8638774	5	True				
ANR	8638927	ParameterType	int		8638774	0					
ANR	8638928	Identifier	swap16		8638774	1					
ANR	8638929	Parameter	int littleendian	520:58:15739:15754	8638774	6	True				
ANR	8638930	ParameterType	int		8638774	0					
ANR	8638931	Identifier	littleendian		8638774	1					
ANR	8638932	CFGEntryNode	ENTRY		8638774		True				
ANR	8638933	CFGExitNode	EXIT		8638774		True				
ANR	8638934	Symbol	colour_type		8638774						
ANR	8638935	Symbol	result		8638774						
ANR	8638936	Symbol	littleendian		8638774						
ANR	8638937	Symbol	* row		8638774						
ANR	8638938	Symbol	* ++ row		8638774						
ANR	8638939	Symbol	x		8638774						
ANR	8638940	Symbol	bit_index		8638774						
ANR	8638941	Symbol	row		8638774						
ANR	8638942	Symbol	sample_index		8638774						
ANR	8638943	Symbol	bit_depth		8638774						
ANR	8638944	Symbol	swap16		8638774						
ANR	8638945	Function	pixel_copy	577:0:17261:18596							
ANR	8638946	FunctionDef	"pixel_copy (png_bytep toBuffer , png_uint_32 toIndex , png_const_bytep fromBuffer , png_uint_32 fromIndex , unsigned int pixelSize , int littleendian)"		8638945	0					
ANR	8638947	CompoundStatement		581:0:17424:18596	8638945	0					
ANR	8638948	ExpressionStatement	toIndex *= pixelSize	585:3:17546:17566	8638945	0	True				
ANR	8638949	AssignmentExpression	toIndex *= pixelSize		8638945	0		*=			
ANR	8638950	Identifier	toIndex		8638945	0					
ANR	8638951	Identifier	pixelSize		8638945	1					
ANR	8638952	ExpressionStatement	fromIndex *= pixelSize	586:3:17571:17593	8638945	1	True				
ANR	8638953	AssignmentExpression	fromIndex *= pixelSize		8638945	0		*=			
ANR	8638954	Identifier	fromIndex		8638945	0					
ANR	8638955	Identifier	pixelSize		8638945	1					
ANR	8638956	IfStatement	if ( pixelSize < 8 )		8638945	2					
ANR	8638957	Condition	pixelSize < 8	587:7:17602:17614	8638945	0	True				
ANR	8638958	RelationalExpression	pixelSize < 8		8638945	0		<			
ANR	8638959	Identifier	pixelSize		8638945	0					
ANR	8638960	PrimaryExpression	8		8638945	1					
ANR	8638961	CompoundStatement		14:6:532:584	8638945	1					
ANR	8638962	IdentifierDeclStatement	unsigned int destMask = ( ( 1U << pixelSize ) - 1 ) << ( littleendian ? toIndex & 7 : 8 - pixelSize - ( toIndex & 7 ) ) ;	590:6:17704:17812	8638945	0	True				
ANR	8638963	IdentifierDecl	destMask = ( ( 1U << pixelSize ) - 1 ) << ( littleendian ? toIndex & 7 : 8 - pixelSize - ( toIndex & 7 ) )		8638945	0					
ANR	8638964	IdentifierDeclType	unsigned int		8638945	0					
ANR	8638965	Identifier	destMask		8638945	1					
ANR	8638966	AssignmentExpression	destMask = ( ( 1U << pixelSize ) - 1 ) << ( littleendian ? toIndex & 7 : 8 - pixelSize - ( toIndex & 7 ) )		8638945	2		=			
ANR	8638967	Identifier	destMask		8638945	0					
ANR	8638968	ShiftExpression	( ( 1U << pixelSize ) - 1 ) << ( littleendian ? toIndex & 7 : 8 - pixelSize - ( toIndex & 7 ) )		8638945	1		<<			
ANR	8638969	AdditiveExpression	( 1U << pixelSize ) - 1		8638945	0		-			
ANR	8638970	ShiftExpression	1U << pixelSize		8638945	0		<<			
ANR	8638971	PrimaryExpression	1U		8638945	0					
ANR	8638972	Identifier	pixelSize		8638945	1					
ANR	8638973	PrimaryExpression	1		8638945	1					
ANR	8638974	ConditionalExpression	littleendian ? toIndex & 7 : 8 - pixelSize - ( toIndex & 7 )		8638945	1					
ANR	8638975	Condition	littleendian		8638945	0					
ANR	8638976	Identifier	littleendian		8638945	0					
ANR	8638977	BitAndExpression	toIndex & 7		8638945	1		&			
ANR	8638978	Identifier	toIndex		8638945	0					
ANR	8638979	PrimaryExpression	7		8638945	1					
ANR	8638980	AdditiveExpression	8 - pixelSize - ( toIndex & 7 )		8638945	2		-			
ANR	8638981	PrimaryExpression	8		8638945	0					
ANR	8638982	AdditiveExpression	pixelSize - ( toIndex & 7 )		8638945	1		-			
ANR	8638983	Identifier	pixelSize		8638945	0					
ANR	8638984	BitAndExpression	toIndex & 7		8638945	1		&			
ANR	8638985	Identifier	toIndex		8638945	0					
ANR	8638986	PrimaryExpression	7		8638945	1					
ANR	8638987	IdentifierDeclStatement	unsigned int destByte = toBuffer [ toIndex >> 3 ] & ~destMask ;	593:6:17891:17949	8638945	1	True				
ANR	8638988	IdentifierDecl	destByte = toBuffer [ toIndex >> 3 ] & ~destMask		8638945	0					
ANR	8638989	IdentifierDeclType	unsigned int		8638945	0					
ANR	8638990	Identifier	destByte		8638945	1					
ANR	8638991	AssignmentExpression	destByte = toBuffer [ toIndex >> 3 ] & ~destMask		8638945	2		=			
ANR	8638992	Identifier	destByte		8638945	0					
ANR	8638993	BitAndExpression	toBuffer [ toIndex >> 3 ] & ~destMask		8638945	1		&			
ANR	8638994	ArrayIndexing	toBuffer [ toIndex >> 3 ]		8638945	0					
ANR	8638995	Identifier	toBuffer		8638945	0					
ANR	8638996	ShiftExpression	toIndex >> 3		8638945	1		>>			
ANR	8638997	Identifier	toIndex		8638945	0					
ANR	8638998	PrimaryExpression	3		8638945	1					
ANR	8638999	Identifier	~destMask		8638945	1					
ANR	8639000	IdentifierDeclStatement	unsigned int sourceByte = fromBuffer [ fromIndex >> 3 ] ;	594:6:17957:18009	8638945	2	True				
ANR	8639001	IdentifierDecl	sourceByte = fromBuffer [ fromIndex >> 3 ]		8638945	0					
ANR	8639002	IdentifierDeclType	unsigned int		8638945	0					
ANR	8639003	Identifier	sourceByte		8638945	1					
ANR	8639004	AssignmentExpression	sourceByte = fromBuffer [ fromIndex >> 3 ]		8638945	2		=			
ANR	8639005	Identifier	sourceByte		8638945	0					
ANR	8639006	ArrayIndexing	fromBuffer [ fromIndex >> 3 ]		8638945	1					
ANR	8639007	Identifier	fromBuffer		8638945	0					
ANR	8639008	ShiftExpression	fromIndex >> 3		8638945	1		>>			
ANR	8639009	Identifier	fromIndex		8638945	0					
ANR	8639010	PrimaryExpression	3		8638945	1					
ANR	8639011	ExpressionStatement	fromIndex &= 7	597:6:18088:18102	8638945	3	True				
ANR	8639012	AssignmentExpression	fromIndex &= 7		8638945	0		&=			
ANR	8639013	Identifier	fromIndex		8638945	0					
ANR	8639014	PrimaryExpression	7		8638945	1					
ANR	8639015	IfStatement	if ( littleendian )		8638945	4					
ANR	8639016	Condition	littleendian	598:10:18114:18125	8638945	0	True				
ANR	8639017	Identifier	littleendian		8638945	0					
ANR	8639018	CompoundStatement		19:6:709:709	8638945	1					
ANR	8639019	IfStatement	if ( fromIndex > 0 )		8638945	0					
ANR	8639020	Condition	fromIndex > 0	600:13:18149:18161	8638945	0	True				
ANR	8639021	RelationalExpression	fromIndex > 0		8638945	0		>			
ANR	8639022	Identifier	fromIndex		8638945	0					
ANR	8639023	PrimaryExpression	0		8638945	1					
ANR	8639024	ExpressionStatement	sourceByte >>= fromIndex	600:28:18164:18188	8638945	1	True				
ANR	8639025	AssignmentExpression	sourceByte >>= fromIndex		8638945	0		>>=			
ANR	8639026	Identifier	sourceByte		8638945	0					
ANR	8639027	Identifier	fromIndex		8638945	1					
ANR	8639028	IfStatement	if ( ( toIndex & 7 ) > 0 )		8638945	1					
ANR	8639029	Condition	( toIndex & 7 ) > 0	601:13:18203:18219	8638945	0	True				
ANR	8639030	RelationalExpression	( toIndex & 7 ) > 0		8638945	0		>			
ANR	8639031	BitAndExpression	toIndex & 7		8638945	0		&			
ANR	8639032	Identifier	toIndex		8638945	0					
ANR	8639033	PrimaryExpression	7		8638945	1					
ANR	8639034	PrimaryExpression	0		8638945	1					
ANR	8639035	ExpressionStatement	sourceByte <<= toIndex & 7	601:32:18222:18248	8638945	1	True				
ANR	8639036	AssignmentExpression	sourceByte <<= toIndex & 7		8638945	0		<<=			
ANR	8639037	Identifier	sourceByte		8638945	0					
ANR	8639038	BitAndExpression	toIndex & 7		8638945	1		&			
ANR	8639039	Identifier	toIndex		8638945	0					
ANR	8639040	PrimaryExpression	7		8638945	1					
ANR	8639041	ElseStatement	else		8638945	0					
ANR	8639042	CompoundStatement		25:6:851:851	8638945	0					
ANR	8639043	IfStatement	if ( fromIndex > 0 )		8638945	0					
ANR	8639044	Condition	fromIndex > 0	606:13:18291:18303	8638945	0	True				
ANR	8639045	RelationalExpression	fromIndex > 0		8638945	0		>			
ANR	8639046	Identifier	fromIndex		8638945	0					
ANR	8639047	PrimaryExpression	0		8638945	1					
ANR	8639048	ExpressionStatement	sourceByte <<= fromIndex	606:28:18306:18330	8638945	1	True				
ANR	8639049	AssignmentExpression	sourceByte <<= fromIndex		8638945	0		<<=			
ANR	8639050	Identifier	sourceByte		8638945	0					
ANR	8639051	Identifier	fromIndex		8638945	1					
ANR	8639052	IfStatement	if ( ( toIndex & 7 ) > 0 )		8638945	1					
ANR	8639053	Condition	( toIndex & 7 ) > 0	607:13:18345:18361	8638945	0	True				
ANR	8639054	RelationalExpression	( toIndex & 7 ) > 0		8638945	0		>			
ANR	8639055	BitAndExpression	toIndex & 7		8638945	0		&			
ANR	8639056	Identifier	toIndex		8638945	0					
ANR	8639057	PrimaryExpression	7		8638945	1					
ANR	8639058	PrimaryExpression	0		8638945	1					
ANR	8639059	ExpressionStatement	sourceByte >>= toIndex & 7	607:32:18364:18390	8638945	1	True				
ANR	8639060	AssignmentExpression	sourceByte >>= toIndex & 7		8638945	0		>>=			
ANR	8639061	Identifier	sourceByte		8638945	0					
ANR	8639062	BitAndExpression	toIndex & 7		8638945	1		&			
ANR	8639063	Identifier	toIndex		8638945	0					
ANR	8639064	PrimaryExpression	7		8638945	1					
ANR	8639065	ExpressionStatement	toBuffer [ toIndex >> 3 ] = ( png_byte ) ( destByte | ( sourceByte & destMask ) )	610:6:18407:18478	8638945	5	True				
ANR	8639066	AssignmentExpression	toBuffer [ toIndex >> 3 ] = ( png_byte ) ( destByte | ( sourceByte & destMask ) )		8638945	0		=			
ANR	8639067	ArrayIndexing	toBuffer [ toIndex >> 3 ]		8638945	0					
ANR	8639068	Identifier	toBuffer		8638945	0					
ANR	8639069	ShiftExpression	toIndex >> 3		8638945	1		>>			
ANR	8639070	Identifier	toIndex		8638945	0					
ANR	8639071	PrimaryExpression	3		8638945	1					
ANR	8639072	CastExpression	( png_byte ) ( destByte | ( sourceByte & destMask ) )		8638945	1					
ANR	8639073	CastTarget	png_byte		8638945	0					
ANR	8639074	InclusiveOrExpression	destByte | ( sourceByte & destMask )		8638945	1		|			
ANR	8639075	Identifier	destByte		8638945	0					
ANR	8639076	BitAndExpression	sourceByte & destMask		8638945	1		&			
ANR	8639077	Identifier	sourceByte		8638945	0					
ANR	8639078	Identifier	destMask		8638945	1					
ANR	8639079	ElseStatement	else		8638945	0					
ANR	8639080	ExpressionStatement	"memmove ( toBuffer + ( toIndex >> 3 ) , fromBuffer + ( fromIndex >> 3 ) , pixelSize >> 3 )"	613:6:18523:18594	8638945	0	True				
ANR	8639081	CallExpression	"memmove ( toBuffer + ( toIndex >> 3 ) , fromBuffer + ( fromIndex >> 3 ) , pixelSize >> 3 )"		8638945	0					
ANR	8639082	Callee	memmove		8638945	0					
ANR	8639083	Identifier	memmove		8638945	0					
ANR	8639084	ArgumentList	toBuffer + ( toIndex >> 3 )		8638945	1					
ANR	8639085	Argument	toBuffer + ( toIndex >> 3 )		8638945	0					
ANR	8639086	AdditiveExpression	toBuffer + ( toIndex >> 3 )		8638945	0		+			
ANR	8639087	Identifier	toBuffer		8638945	0					
ANR	8639088	ShiftExpression	toIndex >> 3		8638945	1		>>			
ANR	8639089	Identifier	toIndex		8638945	0					
ANR	8639090	PrimaryExpression	3		8638945	1					
ANR	8639091	Argument	fromBuffer + ( fromIndex >> 3 )		8638945	1					
ANR	8639092	AdditiveExpression	fromBuffer + ( fromIndex >> 3 )		8638945	0		+			
ANR	8639093	Identifier	fromBuffer		8638945	0					
ANR	8639094	ShiftExpression	fromIndex >> 3		8638945	1		>>			
ANR	8639095	Identifier	fromIndex		8638945	0					
ANR	8639096	PrimaryExpression	3		8638945	1					
ANR	8639097	Argument	pixelSize >> 3		8638945	2					
ANR	8639098	ShiftExpression	pixelSize >> 3		8638945	0		>>			
ANR	8639099	Identifier	pixelSize		8638945	0					
ANR	8639100	PrimaryExpression	3		8638945	1					
ANR	8639101	ReturnType	static void		8638945	1					
ANR	8639102	Identifier	pixel_copy		8638945	2					
ANR	8639103	ParameterList	"png_bytep toBuffer , png_uint_32 toIndex , png_const_bytep fromBuffer , png_uint_32 fromIndex , unsigned int pixelSize , int littleendian"		8638945	3					
ANR	8639104	Parameter	png_bytep toBuffer	578:11:17284:17301	8638945	0	True				
ANR	8639105	ParameterType	png_bytep		8638945	0					
ANR	8639106	Identifier	toBuffer		8638945	1					
ANR	8639107	Parameter	png_uint_32 toIndex	578:31:17304:17322	8638945	1	True				
ANR	8639108	ParameterType	png_uint_32		8638945	0					
ANR	8639109	Identifier	toIndex		8638945	1					
ANR	8639110	Parameter	png_const_bytep fromBuffer	579:3:17328:17353	8638945	2	True				
ANR	8639111	ParameterType	png_const_bytep		8638945	0					
ANR	8639112	Identifier	fromBuffer		8638945	1					
ANR	8639113	Parameter	png_uint_32 fromIndex	579:31:17356:17376	8638945	3	True				
ANR	8639114	ParameterType	png_uint_32		8638945	0					
ANR	8639115	Identifier	fromIndex		8638945	1					
ANR	8639116	Parameter	unsigned int pixelSize	579:54:17379:17400	8638945	4	True				
ANR	8639117	ParameterType	unsigned int		8638945	0					
ANR	8639118	Identifier	pixelSize		8638945	1					
ANR	8639119	Parameter	int littleendian	580:3:17406:17421	8638945	5	True				
ANR	8639120	ParameterType	int		8638945	0					
ANR	8639121	Identifier	littleendian		8638945	1					
ANR	8639122	CFGEntryNode	ENTRY		8638945		True				
ANR	8639123	CFGExitNode	EXIT		8638945		True				
ANR	8639124	Symbol	destByte		8638945						
ANR	8639125	Symbol	destMask		8638945						
ANR	8639126	Symbol	littleendian		8638945						
ANR	8639127	Symbol	* fromBuffer		8638945						
ANR	8639128	Symbol	toIndex		8638945						
ANR	8639129	Symbol	toBuffer		8638945						
ANR	8639130	Symbol	* toBuffer		8638945						
ANR	8639131	Symbol	fromBuffer		8638945						
ANR	8639132	Symbol	pixelSize		8638945						
ANR	8639133	Symbol	~destMask		8638945						
ANR	8639134	Symbol	* toIndex		8638945						
ANR	8639135	Symbol	sourceByte		8638945						
ANR	8639136	Symbol	* fromIndex		8638945						
ANR	8639137	Symbol	fromIndex		8638945						
ANR	8639138	Function	row_copy	620:0:18722:19210							
ANR	8639139	FunctionDef	"row_copy (png_bytep toBuffer , png_const_bytep fromBuffer , unsigned int bitWidth , int littleendian)"		8639138	0					
ANR	8639140	CompoundStatement		623:0:18838:19210	8639138	0					
ANR	8639141	ExpressionStatement	"memcpy ( toBuffer , fromBuffer , bitWidth >> 3 )"	624:3:18843:18886	8639138	0	True				
ANR	8639142	CallExpression	"memcpy ( toBuffer , fromBuffer , bitWidth >> 3 )"		8639138	0					
ANR	8639143	Callee	memcpy		8639138	0					
ANR	8639144	Identifier	memcpy		8639138	0					
ANR	8639145	ArgumentList	toBuffer		8639138	1					
ANR	8639146	Argument	toBuffer		8639138	0					
ANR	8639147	Identifier	toBuffer		8639138	0					
ANR	8639148	Argument	fromBuffer		8639138	1					
ANR	8639149	Identifier	fromBuffer		8639138	0					
ANR	8639150	Argument	bitWidth >> 3		8639138	2					
ANR	8639151	ShiftExpression	bitWidth >> 3		8639138	0		>>			
ANR	8639152	Identifier	bitWidth		8639138	0					
ANR	8639153	PrimaryExpression	3		8639138	1					
ANR	8639154	IfStatement	if ( ( bitWidth & 7 ) != 0 )		8639138	1					
ANR	8639155	Condition	( bitWidth & 7 ) != 0	626:7:18896:18914	8639138	0	True				
ANR	8639156	EqualityExpression	( bitWidth & 7 ) != 0		8639138	0		!=			
ANR	8639157	BitAndExpression	bitWidth & 7		8639138	0		&			
ANR	8639158	Identifier	bitWidth		8639138	0					
ANR	8639159	PrimaryExpression	7		8639138	1					
ANR	8639160	PrimaryExpression	0		8639138	1					
ANR	8639161	CompoundStatement		6:6:89:106	8639138	1					
ANR	8639162	IdentifierDeclStatement	unsigned int mask ;	628:6:18928:18945	8639138	0	True				
ANR	8639163	IdentifierDecl	mask		8639138	0					
ANR	8639164	IdentifierDeclType	unsigned int		8639138	0					
ANR	8639165	Identifier	mask		8639138	1					
ANR	8639166	ExpressionStatement	toBuffer += bitWidth >> 3	630:6:18954:18979	8639138	1	True				
ANR	8639167	AssignmentExpression	toBuffer += bitWidth >> 3		8639138	0		+=			
ANR	8639168	Identifier	toBuffer		8639138	0					
ANR	8639169	ShiftExpression	bitWidth >> 3		8639138	1		>>			
ANR	8639170	Identifier	bitWidth		8639138	0					
ANR	8639171	PrimaryExpression	3		8639138	1					
ANR	8639172	ExpressionStatement	fromBuffer += bitWidth >> 3	631:6:18987:19014	8639138	2	True				
ANR	8639173	AssignmentExpression	fromBuffer += bitWidth >> 3		8639138	0		+=			
ANR	8639174	Identifier	fromBuffer		8639138	0					
ANR	8639175	ShiftExpression	bitWidth >> 3		8639138	1		>>			
ANR	8639176	Identifier	bitWidth		8639138	0					
ANR	8639177	PrimaryExpression	3		8639138	1					
ANR	8639178	IfStatement	if ( littleendian )		8639138	3					
ANR	8639179	Condition	littleendian	632:10:19026:19037	8639138	0	True				
ANR	8639180	Identifier	littleendian		8639138	0					
ANR	8639181	ExpressionStatement	mask = 0xff << ( bitWidth & 7 )	633:9:19049:19078	8639138	1	True				
ANR	8639182	AssignmentExpression	mask = 0xff << ( bitWidth & 7 )		8639138	0		=			
ANR	8639183	Identifier	mask		8639138	0					
ANR	8639184	ShiftExpression	0xff << ( bitWidth & 7 )		8639138	1		<<			
ANR	8639185	PrimaryExpression	0xff		8639138	0					
ANR	8639186	BitAndExpression	bitWidth & 7		8639138	1		&			
ANR	8639187	Identifier	bitWidth		8639138	0					
ANR	8639188	PrimaryExpression	7		8639138	1					
ANR	8639189	ElseStatement	else		8639138	0					
ANR	8639190	ExpressionStatement	mask = 0xff >> ( bitWidth & 7 )	635:9:19100:19129	8639138	0	True				
ANR	8639191	AssignmentExpression	mask = 0xff >> ( bitWidth & 7 )		8639138	0		=			
ANR	8639192	Identifier	mask		8639138	0					
ANR	8639193	ShiftExpression	0xff >> ( bitWidth & 7 )		8639138	1		>>			
ANR	8639194	PrimaryExpression	0xff		8639138	0					
ANR	8639195	BitAndExpression	bitWidth & 7		8639138	1		&			
ANR	8639196	Identifier	bitWidth		8639138	0					
ANR	8639197	PrimaryExpression	7		8639138	1					
ANR	8639198	ExpressionStatement	* toBuffer = ( png_byte ) ( ( * toBuffer & mask ) | ( * fromBuffer & ~mask ) )	636:6:19137:19203	8639138	4	True				
ANR	8639199	AssignmentExpression	* toBuffer = ( png_byte ) ( ( * toBuffer & mask ) | ( * fromBuffer & ~mask ) )		8639138	0		=			
ANR	8639200	UnaryOperationExpression	* toBuffer		8639138	0					
ANR	8639201	UnaryOperator	*		8639138	0					
ANR	8639202	Identifier	toBuffer		8639138	1					
ANR	8639203	CastExpression	( png_byte ) ( ( * toBuffer & mask ) | ( * fromBuffer & ~mask ) )		8639138	1					
ANR	8639204	CastTarget	png_byte		8639138	0					
ANR	8639205	InclusiveOrExpression	( * toBuffer & mask ) | ( * fromBuffer & ~mask )		8639138	1		|			
ANR	8639206	BitAndExpression	* toBuffer & mask		8639138	0		&			
ANR	8639207	UnaryOperationExpression	* toBuffer		8639138	0					
ANR	8639208	UnaryOperator	*		8639138	0					
ANR	8639209	Identifier	toBuffer		8639138	1					
ANR	8639210	Identifier	mask		8639138	1					
ANR	8639211	BitAndExpression	* fromBuffer & ~mask		8639138	1		&			
ANR	8639212	UnaryOperationExpression	* fromBuffer		8639138	0					
ANR	8639213	UnaryOperator	*		8639138	0					
ANR	8639214	Identifier	fromBuffer		8639138	1					
ANR	8639215	Identifier	~mask		8639138	1					
ANR	8639216	ReturnType	static void		8639138	1					
ANR	8639217	Identifier	row_copy		8639138	2					
ANR	8639218	ParameterList	"png_bytep toBuffer , png_const_bytep fromBuffer , unsigned int bitWidth , int littleendian"		8639138	3					
ANR	8639219	Parameter	png_bytep toBuffer	621:9:18743:18760	8639138	0	True				
ANR	8639220	ParameterType	png_bytep		8639138	0					
ANR	8639221	Identifier	toBuffer		8639138	1					
ANR	8639222	Parameter	png_const_bytep fromBuffer	621:29:18763:18788	8639138	1	True				
ANR	8639223	ParameterType	png_const_bytep		8639138	0					
ANR	8639224	Identifier	fromBuffer		8639138	1					
ANR	8639225	Parameter	unsigned int bitWidth	621:57:18791:18811	8639138	2	True				
ANR	8639226	ParameterType	unsigned int		8639138	0					
ANR	8639227	Identifier	bitWidth		8639138	1					
ANR	8639228	Parameter	int littleendian	622:6:18820:18835	8639138	3	True				
ANR	8639229	ParameterType	int		8639138	0					
ANR	8639230	Identifier	littleendian		8639138	1					
ANR	8639231	CFGEntryNode	ENTRY		8639138		True				
ANR	8639232	CFGExitNode	EXIT		8639138		True				
ANR	8639233	Symbol	littleendian		8639138						
ANR	8639234	Symbol	* fromBuffer		8639138						
ANR	8639235	Symbol	toBuffer		8639138						
ANR	8639236	Symbol	bitWidth		8639138						
ANR	8639237	Symbol	* toBuffer		8639138						
ANR	8639238	Symbol	~mask		8639138						
ANR	8639239	Symbol	fromBuffer		8639138						
ANR	8639240	Symbol	mask		8639138						
ANR	8639241	Function	pixel_cmp	643:0:19306:20200							
ANR	8639242	FunctionDef	"pixel_cmp (png_const_bytep pa , png_const_bytep pb , png_uint_32 bit_width)"		8639241	0					
ANR	8639243	CompoundStatement		645:0:19390:20200	8639241	0					
ANR	8639244	IfStatement	"if ( memcmp ( pa , pb , bit_width >> 3 ) == 0 )"		8639241	0					
ANR	8639245	Condition	"memcmp ( pa , pb , bit_width >> 3 ) == 0"	647:7:19426:19458	8639241	0	True				
ANR	8639246	EqualityExpression	"memcmp ( pa , pb , bit_width >> 3 ) == 0"		8639241	0		==			
ANR	8639247	CallExpression	"memcmp ( pa , pb , bit_width >> 3 )"		8639241	0					
ANR	8639248	Callee	memcmp		8639241	0					
ANR	8639249	Identifier	memcmp		8639241	0					
ANR	8639250	ArgumentList	pa		8639241	1					
ANR	8639251	Argument	pa		8639241	0					
ANR	8639252	Identifier	pa		8639241	0					
ANR	8639253	Argument	pb		8639241	1					
ANR	8639254	Identifier	pb		8639241	0					
ANR	8639255	Argument	bit_width >> 3		8639241	2					
ANR	8639256	ShiftExpression	bit_width >> 3		8639241	0		>>			
ANR	8639257	Identifier	bit_width		8639241	0					
ANR	8639258	PrimaryExpression	3		8639241	1					
ANR	8639259	PrimaryExpression	0		8639241	1					
ANR	8639260	CompoundStatement		5:6:81:94	8639241	1					
ANR	8639261	IdentifierDeclStatement	png_uint_32 p ;	649:6:19472:19485	8639241	0	True				
ANR	8639262	IdentifierDecl	p		8639241	0					
ANR	8639263	IdentifierDeclType	png_uint_32		8639241	0					
ANR	8639264	Identifier	p		8639241	1					
ANR	8639265	IfStatement	if ( ( bit_width & 7 ) == 0 )		8639241	1					
ANR	8639266	Condition	( bit_width & 7 ) == 0	651:10:19498:19517	8639241	0	True				
ANR	8639267	EqualityExpression	( bit_width & 7 ) == 0		8639241	0		==			
ANR	8639268	BitAndExpression	bit_width & 7		8639241	0		&			
ANR	8639269	Identifier	bit_width		8639241	0					
ANR	8639270	PrimaryExpression	7		8639241	1					
ANR	8639271	PrimaryExpression	0		8639241	1					
ANR	8639272	ReturnStatement	return 0 ;	651:32:19520:19528	8639241	1	True				
ANR	8639273	PrimaryExpression	0		8639241	0					
ANR	8639274	ExpressionStatement	p = pa [ bit_width >> 3 ]	654:6:19570:19592	8639241	2	True				
ANR	8639275	AssignmentExpression	p = pa [ bit_width >> 3 ]		8639241	0		=			
ANR	8639276	Identifier	p		8639241	0					
ANR	8639277	ArrayIndexing	pa [ bit_width >> 3 ]		8639241	1					
ANR	8639278	Identifier	pa		8639241	0					
ANR	8639279	ShiftExpression	bit_width >> 3		8639241	1		>>			
ANR	8639280	Identifier	bit_width		8639241	0					
ANR	8639281	PrimaryExpression	3		8639241	1					
ANR	8639282	ExpressionStatement	p ^= pb [ bit_width >> 3 ]	655:6:19600:19623	8639241	3	True				
ANR	8639283	AssignmentExpression	p ^= pb [ bit_width >> 3 ]		8639241	0		^=			
ANR	8639284	Identifier	p		8639241	0					
ANR	8639285	ArrayIndexing	pb [ bit_width >> 3 ]		8639241	1					
ANR	8639286	Identifier	pb		8639241	0					
ANR	8639287	ShiftExpression	bit_width >> 3		8639241	1		>>			
ANR	8639288	Identifier	bit_width		8639241	0					
ANR	8639289	PrimaryExpression	3		8639241	1					
ANR	8639290	IfStatement	if ( p == 0 )		8639241	4					
ANR	8639291	Condition	p == 0	657:10:19636:19641	8639241	0	True				
ANR	8639292	EqualityExpression	p == 0		8639241	0		==			
ANR	8639293	Identifier	p		8639241	0					
ANR	8639294	PrimaryExpression	0		8639241	1					
ANR	8639295	ReturnStatement	return 0 ;	657:18:19644:19652	8639241	1	True				
ANR	8639296	PrimaryExpression	0		8639241	0					
ANR	8639297	ExpressionStatement	bit_width &= 7	662:6:19792:19806	8639241	5	True				
ANR	8639298	AssignmentExpression	bit_width &= 7		8639241	0		&=			
ANR	8639299	Identifier	bit_width		8639241	0					
ANR	8639300	PrimaryExpression	7		8639241	1					
ANR	8639301	ExpressionStatement	p >>= 8 - bit_width	663:6:19814:19831	8639241	6	True				
ANR	8639302	AssignmentExpression	p >>= 8 - bit_width		8639241	0		>>=			
ANR	8639303	Identifier	p		8639241	0					
ANR	8639304	AdditiveExpression	8 - bit_width		8639241	1		-			
ANR	8639305	PrimaryExpression	8		8639241	0					
ANR	8639306	Identifier	bit_width		8639241	1					
ANR	8639307	IfStatement	if ( p == 0 )		8639241	7					
ANR	8639308	Condition	p == 0	665:10:19844:19849	8639241	0	True				
ANR	8639309	EqualityExpression	p == 0		8639241	0		==			
ANR	8639310	Identifier	p		8639241	0					
ANR	8639311	PrimaryExpression	0		8639241	1					
ANR	8639312	ReturnStatement	return 0 ;	665:18:19852:19860	8639241	1	True				
ANR	8639313	PrimaryExpression	0		8639241	0					
ANR	8639314	CompoundStatement		33:6:712:733	8639241	1					
ANR	8639315	IdentifierDeclStatement	png_uint_32 where = 0 ;	677:6:20103:20124	8639241	0	True				
ANR	8639316	IdentifierDecl	where = 0		8639241	0					
ANR	8639317	IdentifierDeclType	png_uint_32		8639241	0					
ANR	8639318	Identifier	where		8639241	1					
ANR	8639319	AssignmentExpression	where = 0		8639241	2		=			
ANR	8639320	Identifier	where		8639241	0					
ANR	8639321	PrimaryExpression	0		8639241	1					
ANR	8639322	WhileStatement	while ( pa [ where ] == pb [ where ] )		8639241	1					
ANR	8639323	Condition	pa [ where ] == pb [ where ]	679:13:20140:20161	8639241	0	True				
ANR	8639324	EqualityExpression	pa [ where ] == pb [ where ]		8639241	0		==			
ANR	8639325	ArrayIndexing	pa [ where ]		8639241	0					
ANR	8639326	Identifier	pa		8639241	0					
ANR	8639327	Identifier	where		8639241	1					
ANR	8639328	ArrayIndexing	pb [ where ]		8639241	1					
ANR	8639329	Identifier	pb		8639241	0					
ANR	8639330	Identifier	where		8639241	1					
ANR	8639331	ExpressionStatement	++ where	679:37:20164:20171	8639241	1	True				
ANR	8639332	UnaryExpression	++ where		8639241	0					
ANR	8639333	IncDec	++		8639241	0					
ANR	8639334	Identifier	where		8639241	1					
ANR	8639335	ReturnStatement	return 1 + where ;	680:6:20179:20193	8639241	2	True				
ANR	8639336	AdditiveExpression	1 + where		8639241	0		+			
ANR	8639337	PrimaryExpression	1		8639241	0					
ANR	8639338	Identifier	where		8639241	1					
ANR	8639339	ReturnType	static int		8639241	1					
ANR	8639340	Identifier	pixel_cmp		8639241	2					
ANR	8639341	ParameterList	"png_const_bytep pa , png_const_bytep pb , png_uint_32 bit_width"		8639241	3					
ANR	8639342	Parameter	png_const_bytep pa	644:10:19327:19344	8639241	0	True				
ANR	8639343	ParameterType	png_const_bytep		8639241	0					
ANR	8639344	Identifier	pa		8639241	1					
ANR	8639345	Parameter	png_const_bytep pb	644:30:19347:19364	8639241	1	True				
ANR	8639346	ParameterType	png_const_bytep		8639241	0					
ANR	8639347	Identifier	pb		8639241	1					
ANR	8639348	Parameter	png_uint_32 bit_width	644:50:19367:19387	8639241	2	True				
ANR	8639349	ParameterType	png_uint_32		8639241	0					
ANR	8639350	Identifier	bit_width		8639241	1					
ANR	8639351	CFGEntryNode	ENTRY		8639241		True				
ANR	8639352	CFGExitNode	EXIT		8639241		True				
ANR	8639353	Symbol	p		8639241						
ANR	8639354	Symbol	* bit_width		8639241						
ANR	8639355	Symbol	pa		8639241						
ANR	8639356	Symbol	pb		8639241						
ANR	8639357	Symbol	memcmp		8639241						
ANR	8639358	Symbol	* pa		8639241						
ANR	8639359	Symbol	where		8639241						
ANR	8639360	Symbol	* pb		8639241						
ANR	8639361	Symbol	bit_width		8639241						
ANR	8639362	Symbol	* where		8639241						
ANR	8639363	ClassDef	png_store_buffer	691:8:20542:20716							
ANR	8639364	DeclStmt									
ANR	8639365	Decl							struct png_store_buffer	struct png_store_buffer *	prev
ANR	8639366	DeclStmt									
ANR	8639367	Decl							png_byte	png_byte [ STORE_BUFFER_SIZE ]	buffer
ANR	8639368	DeclStmt									
ANR	8639369	Decl							png_store_buffer	png_store_buffer	png_store_buffer
ANR	8639370	ClassDef	store_palette_entry	699:8:20754:20936							
ANR	8639371	DeclStmt									
ANR	8639372	Decl							png_byte	png_byte	red
ANR	8639373	DeclStmt									
ANR	8639374	Decl							png_byte	png_byte	green
ANR	8639375	DeclStmt									
ANR	8639376	Decl							png_byte	png_byte	blue
ANR	8639377	DeclStmt									
ANR	8639378	Decl							png_byte	png_byte	alpha
ANR	8639379	DeclStmt									
ANR	8639380	Decl							store_palette_entry	store_palette_entry	store_palette_entry
ANR	8639381	Decl							store_palette_entry	store_palette_entry [ 256 ]	store_palette
ANR	8639382	ClassDef	png_store_file	707:8:20947:21579							
ANR	8639383	DeclStmt									
ANR	8639384	Decl							struct png_store_file	struct png_store_file *	next
ANR	8639385	DeclStmt									
ANR	8639386	Decl							char	char [ FILE_NAME_SIZE ]	name
ANR	8639387	DeclStmt									
ANR	8639388	Decl							unsigned int	unsigned int	IDAT_bits
ANR	8639389	DeclStmt									
ANR	8639390	Decl							png_uint_32	png_uint_32	IDAT_size
ANR	8639391	DeclStmt									
ANR	8639392	Decl							png_uint_32	png_uint_32	id
ANR	8639393	DeclStmt									
ANR	8639394	Decl							png_size_t	png_size_t	datacount
ANR	8639395	DeclStmt									
ANR	8639396	Decl							png_store_buffer	png_store_buffer	data
ANR	8639397	DeclStmt									
ANR	8639398	Decl							int	int	npalette
ANR	8639399	DeclStmt									
ANR	8639400	Decl							store_palette_entry	store_palette_entry *	palette
ANR	8639401	DeclStmt									
ANR	8639402	Decl							png_store_file	png_store_file	png_store_file
ANR	8639403	ClassDef	store_pool	723:8:21688:22344							
ANR	8639404	DeclStmt									
ANR	8639405	Decl							struct png_store	struct png_store *	store
ANR	8639406	DeclStmt									
ANR	8639407	Decl							struct store_memory	struct store_memory *	list
ANR	8639408	DeclStmt									
ANR	8639409	Decl							png_byte	png_byte [ 4 ]	mark
ANR	8639410	DeclStmt									
ANR	8639411	Decl							png_alloc_size_t	png_alloc_size_t	max
ANR	8639412	DeclStmt									
ANR	8639413	Decl							png_alloc_size_t	png_alloc_size_t	current
ANR	8639414	DeclStmt									
ANR	8639415	Decl							png_alloc_size_t	png_alloc_size_t	limit
ANR	8639416	DeclStmt									
ANR	8639417	Decl							png_alloc_size_t	png_alloc_size_t	total
ANR	8639418	DeclStmt									
ANR	8639419	Decl							png_alloc_size_t	png_alloc_size_t	max_max
ANR	8639420	DeclStmt									
ANR	8639421	Decl							png_alloc_size_t	png_alloc_size_t	max_limit
ANR	8639422	DeclStmt									
ANR	8639423	Decl							png_alloc_size_t	png_alloc_size_t	max_total
ANR	8639424	DeclStmt									
ANR	8639425	Decl							store_pool	store_pool	store_pool
ANR	8639426	ClassDef	png_store	741:8:22355:25010							
ANR	8639427	DeclStmt									
ANR	8639428	Decl							struct exception_context	struct exception_context	exception_context
ANR	8639429	DeclStmt									
ANR	8639430	Decl							int	int	nerrors
ANR	8639431	DeclStmt									
ANR	8639432	Decl							int	int	nwarnings
ANR	8639433	DeclStmt									
ANR	8639434	Decl							int	int	noptions
ANR	8639435	ClassDef	<unnamed>	761:3:23149:23331							
ANR	8639436	DeclStmt									
ANR	8639437	Decl							unsigned char	unsigned char	option
ANR	8639438	DeclStmt									
ANR	8639439	Decl							unsigned char	unsigned char	setting
ANR	8639440	DeclStmt									
ANR	8639441	Decl								 [ 16 ]	options
ANR	8639442	DeclStmt									
ANR	8639443	Decl							char	char [ 128 ]	test
ANR	8639444	DeclStmt									
ANR	8639445	Decl							char	char [ 256 ]	error
ANR	8639446	DeclStmt									
ANR	8639447	Decl							png_uint_32	png_uint_32	chunklen
ANR	8639448	DeclStmt									
ANR	8639449	Decl							png_uint_32	png_uint_32	chunktype
ANR	8639450	DeclStmt									
ANR	8639451	Decl							png_uint_32	png_uint_32	chunkpos
ANR	8639452	DeclStmt									
ANR	8639453	Decl							png_uint_32	png_uint_32	IDAT_size
ANR	8639454	DeclStmt									
ANR	8639455	Decl							unsigned int	unsigned int	IDAT_bits
ANR	8639456	DeclStmt									
ANR	8639457	Decl							png_structp	png_structp	pread
ANR	8639458	DeclStmt									
ANR	8639459	Decl							png_infop	png_infop	piread
ANR	8639460	DeclStmt									
ANR	8639461	Decl							png_store_file	png_store_file *	current
ANR	8639462	DeclStmt									
ANR	8639463	Decl							png_store_buffer	png_store_buffer *	next
ANR	8639464	DeclStmt									
ANR	8639465	Decl							png_size_t	png_size_t	readpos
ANR	8639466	DeclStmt									
ANR	8639467	Decl							png_byte	png_byte *	image
ANR	8639468	DeclStmt									
ANR	8639469	Decl							png_size_t	png_size_t	cb_image
ANR	8639470	DeclStmt									
ANR	8639471	Decl							png_size_t	png_size_t	cb_row
ANR	8639472	DeclStmt									
ANR	8639473	Decl							uLong	uLong	IDAT_crc
ANR	8639474	DeclStmt									
ANR	8639475	Decl							png_uint_32	png_uint_32	IDAT_len
ANR	8639476	DeclStmt									
ANR	8639477	Decl							png_uint_32	png_uint_32	IDAT_pos
ANR	8639478	DeclStmt									
ANR	8639479	Decl							png_uint_32	png_uint_32	image_h
ANR	8639480	DeclStmt									
ANR	8639481	Decl							store_pool	store_pool	read_memory_pool
ANR	8639482	DeclStmt									
ANR	8639483	Decl							png_store_file	png_store_file *	saved
ANR	8639484	DeclStmt									
ANR	8639485	Decl							png_structp	png_structp	pwrite
ANR	8639486	DeclStmt									
ANR	8639487	Decl							png_infop	png_infop	piwrite
ANR	8639488	DeclStmt									
ANR	8639489	Decl							png_size_t	png_size_t	writepos
ANR	8639490	DeclStmt									
ANR	8639491	Decl							char	char [ FILE_NAME_SIZE ]	wname
ANR	8639492	DeclStmt									
ANR	8639493	Decl							store_pool	store_pool	write_memory_pool
ANR	8639494	DeclStmt									
ANR	8639495	Decl							store_palette_entry	store_palette_entry *	palette
ANR	8639496	DeclStmt									
ANR	8639497	Decl							int	int	npalette
ANR	8639498	DeclStmt									
ANR	8639499	Decl							png_store	png_store	png_store
ANR	8639500	Function	store_pool_mark	803:0:25046:25194							
ANR	8639501	FunctionDef	store_pool_mark (png_bytep mark)		8639500	0					
ANR	8639502	CompoundStatement		805:0:25090:25194	8639500	0					
ANR	8639503	Statement	static	806:3:25095:25100	8639500	0	True				
ANR	8639504	IdentifierDeclStatement	"png_uint_32 store_seed [ 2 ] = { 0x12345678 , 1 } ;"	806:10:25102:25146	8639500	1	True				
ANR	8639505	IdentifierDecl	"store_seed [ 2 ] = { 0x12345678 , 1 }"		8639500	0					
ANR	8639506	IdentifierDeclType	png_uint_32 [ 2 ]		8639500	0					
ANR	8639507	Identifier	store_seed		8639500	1					
ANR	8639508	PrimaryExpression	2		8639500	2					
ANR	8639509	AssignmentExpression	"store_seed [ 2 ] = { 0x12345678 , 1 }"		8639500	3		=			
ANR	8639510	Identifier	store_seed		8639500	0					
ANR	8639511	InitializerList	0x12345678		8639500	1					
ANR	8639512	PrimaryExpression	0x12345678		8639500	0					
ANR	8639513	PrimaryExpression	1		8639500	1					
ANR	8639514	ExpressionStatement	"make_four_random_bytes ( store_seed , mark )"	808:3:25152:25192	8639500	2	True				
ANR	8639515	CallExpression	"make_four_random_bytes ( store_seed , mark )"		8639500	0					
ANR	8639516	Callee	make_four_random_bytes		8639500	0					
ANR	8639517	Identifier	make_four_random_bytes		8639500	0					
ANR	8639518	ArgumentList	store_seed		8639500	1					
ANR	8639519	Argument	store_seed		8639500	0					
ANR	8639520	Identifier	store_seed		8639500	0					
ANR	8639521	Argument	mark		8639500	1					
ANR	8639522	Identifier	mark		8639500	0					
ANR	8639523	ReturnType	static void		8639500	1					
ANR	8639524	Identifier	store_pool_mark		8639500	2					
ANR	8639525	ParameterList	png_bytep mark		8639500	3					
ANR	8639526	Parameter	png_bytep mark	804:16:25074:25087	8639500	0	True				
ANR	8639527	ParameterType	png_bytep		8639500	0					
ANR	8639528	Identifier	mark		8639500	1					
ANR	8639529	CFGEntryNode	ENTRY		8639500		True				
ANR	8639530	CFGExitNode	EXIT		8639500		True				
ANR	8639531	Symbol	store_seed		8639500						
ANR	8639532	Symbol	mark		8639500						
ANR	8639533	Function	random_32	815:0:25328:25554							
ANR	8639534	FunctionDef	random_32 ()		8639533	0					
ANR	8639535	CompoundStatement		817:0:25363:25554	8639533	0					
ANR	8639536	ForStatement	for ( ; ; )		8639533	0					
ANR	8639537	CompoundStatement		6:6:49:67	8639533	0					
ANR	8639538	IdentifierDeclStatement	png_byte mark [ 4 ] ;	821:6:25389:25405	8639533	0	True				
ANR	8639539	IdentifierDecl	mark [ 4 ]		8639533	0					
ANR	8639540	IdentifierDeclType	png_byte [ 4 ]		8639533	0					
ANR	8639541	Identifier	mark		8639533	1					
ANR	8639542	PrimaryExpression	4		8639533	2					
ANR	8639543	IdentifierDeclStatement	png_uint_32 result ;	822:6:25413:25431	8639533	1	True				
ANR	8639544	IdentifierDecl	result		8639533	0					
ANR	8639545	IdentifierDeclType	png_uint_32		8639533	0					
ANR	8639546	Identifier	result		8639533	1					
ANR	8639547	ExpressionStatement	store_pool_mark ( mark )	824:6:25440:25461	8639533	2	True				
ANR	8639548	CallExpression	store_pool_mark ( mark )		8639533	0					
ANR	8639549	Callee	store_pool_mark		8639533	0					
ANR	8639550	Identifier	store_pool_mark		8639533	0					
ANR	8639551	ArgumentList	mark		8639533	1					
ANR	8639552	Argument	mark		8639533	0					
ANR	8639553	Identifier	mark		8639533	0					
ANR	8639554	ExpressionStatement	result = png_get_uint_32 ( mark )	825:6:25469:25499	8639533	3	True				
ANR	8639555	AssignmentExpression	result = png_get_uint_32 ( mark )		8639533	0		=			
ANR	8639556	Identifier	result		8639533	0					
ANR	8639557	CallExpression	png_get_uint_32 ( mark )		8639533	1					
ANR	8639558	Callee	png_get_uint_32		8639533	0					
ANR	8639559	Identifier	png_get_uint_32		8639533	0					
ANR	8639560	ArgumentList	mark		8639533	1					
ANR	8639561	Argument	mark		8639533	0					
ANR	8639562	Identifier	mark		8639533	0					
ANR	8639563	IfStatement	if ( result != 0 )		8639533	4					
ANR	8639564	Condition	result != 0	827:10:25512:25522	8639533	0	True				
ANR	8639565	EqualityExpression	result != 0		8639533	0		!=			
ANR	8639566	Identifier	result		8639533	0					
ANR	8639567	PrimaryExpression	0		8639533	1					
ANR	8639568	ReturnStatement	return result ;	828:9:25534:25547	8639533	1	True				
ANR	8639569	Identifier	result		8639533	0					
ANR	8639570	ReturnType	static png_uint_32		8639533	1					
ANR	8639571	Identifier	random_32		8639533	2					
ANR	8639572	ParameterList			8639533	3					
ANR	8639573	CFGEntryNode	ENTRY		8639533		True				
ANR	8639574	CFGExitNode	EXIT		8639533		True				
ANR	8639575	InfiniteForNode	true		8639533		True				
ANR	8639576	Symbol	result		8639533						
ANR	8639577	Symbol	png_get_uint_32		8639533						
ANR	8639578	Symbol	mark		8639533						
ANR	8639579	Function	store_pool_init	833:0:25589:25882							
ANR	8639580	FunctionDef	"store_pool_init (png_store * ps , store_pool * pool)"		8639579	0					
ANR	8639581	CompoundStatement		835:0:25650:25882	8639579	0					
ANR	8639582	ExpressionStatement	"memset ( pool , 0 , sizeof * pool )"	836:3:25655:25684	8639579	0	True				
ANR	8639583	CallExpression	"memset ( pool , 0 , sizeof * pool )"		8639579	0					
ANR	8639584	Callee	memset		8639579	0					
ANR	8639585	Identifier	memset		8639579	0					
ANR	8639586	ArgumentList	pool		8639579	1					
ANR	8639587	Argument	pool		8639579	0					
ANR	8639588	Identifier	pool		8639579	0					
ANR	8639589	Argument	0		8639579	1					
ANR	8639590	PrimaryExpression	0		8639579	0					
ANR	8639591	Argument	sizeof * pool		8639579	2					
ANR	8639592	SizeofExpression	sizeof * pool		8639579	0					
ANR	8639593	Sizeof	sizeof		8639579	0					
ANR	8639594	UnaryOperationExpression	* pool		8639579	1					
ANR	8639595	UnaryOperator	*		8639579	0					
ANR	8639596	Identifier	pool		8639579	1					
ANR	8639597	ExpressionStatement	pool -> store = ps	838:3:25690:25706	8639579	1	True				
ANR	8639598	AssignmentExpression	pool -> store = ps		8639579	0		=			
ANR	8639599	PtrMemberAccess	pool -> store		8639579	0					
ANR	8639600	Identifier	pool		8639579	0					
ANR	8639601	Identifier	store		8639579	1					
ANR	8639602	Identifier	ps		8639579	1					
ANR	8639603	ExpressionStatement	pool -> list = NULL	839:3:25711:25728	8639579	2	True				
ANR	8639604	AssignmentExpression	pool -> list = NULL		8639579	0		=			
ANR	8639605	PtrMemberAccess	pool -> list		8639579	0					
ANR	8639606	Identifier	pool		8639579	0					
ANR	8639607	Identifier	list		8639579	1					
ANR	8639608	Identifier	NULL		8639579	1					
ANR	8639609	ExpressionStatement	pool -> max = pool -> current = pool -> limit = pool -> total = 0	840:3:25733:25790	8639579	3	True				
ANR	8639610	AssignmentExpression	pool -> max = pool -> current = pool -> limit = pool -> total = 0		8639579	0		=			
ANR	8639611	PtrMemberAccess	pool -> max		8639579	0					
ANR	8639612	Identifier	pool		8639579	0					
ANR	8639613	Identifier	max		8639579	1					
ANR	8639614	AssignmentExpression	pool -> current = pool -> limit = pool -> total = 0		8639579	1		=			
ANR	8639615	PtrMemberAccess	pool -> current		8639579	0					
ANR	8639616	Identifier	pool		8639579	0					
ANR	8639617	Identifier	current		8639579	1					
ANR	8639618	AssignmentExpression	pool -> limit = pool -> total = 0		8639579	1		=			
ANR	8639619	PtrMemberAccess	pool -> limit		8639579	0					
ANR	8639620	Identifier	pool		8639579	0					
ANR	8639621	Identifier	limit		8639579	1					
ANR	8639622	AssignmentExpression	pool -> total = 0		8639579	1		=			
ANR	8639623	PtrMemberAccess	pool -> total		8639579	0					
ANR	8639624	Identifier	pool		8639579	0					
ANR	8639625	Identifier	total		8639579	1					
ANR	8639626	PrimaryExpression	0		8639579	1					
ANR	8639627	ExpressionStatement	pool -> max_max = pool -> max_limit = pool -> max_total = 0	841:3:25795:25848	8639579	4	True				
ANR	8639628	AssignmentExpression	pool -> max_max = pool -> max_limit = pool -> max_total = 0		8639579	0		=			
ANR	8639629	PtrMemberAccess	pool -> max_max		8639579	0					
ANR	8639630	Identifier	pool		8639579	0					
ANR	8639631	Identifier	max_max		8639579	1					
ANR	8639632	AssignmentExpression	pool -> max_limit = pool -> max_total = 0		8639579	1		=			
ANR	8639633	PtrMemberAccess	pool -> max_limit		8639579	0					
ANR	8639634	Identifier	pool		8639579	0					
ANR	8639635	Identifier	max_limit		8639579	1					
ANR	8639636	AssignmentExpression	pool -> max_total = 0		8639579	1		=			
ANR	8639637	PtrMemberAccess	pool -> max_total		8639579	0					
ANR	8639638	Identifier	pool		8639579	0					
ANR	8639639	Identifier	max_total		8639579	1					
ANR	8639640	PrimaryExpression	0		8639579	1					
ANR	8639641	ExpressionStatement	store_pool_mark ( pool -> mark )	842:3:25853:25880	8639579	5	True				
ANR	8639642	CallExpression	store_pool_mark ( pool -> mark )		8639579	0					
ANR	8639643	Callee	store_pool_mark		8639579	0					
ANR	8639644	Identifier	store_pool_mark		8639579	0					
ANR	8639645	ArgumentList	pool -> mark		8639579	1					
ANR	8639646	Argument	pool -> mark		8639579	0					
ANR	8639647	PtrMemberAccess	pool -> mark		8639579	0					
ANR	8639648	Identifier	pool		8639579	0					
ANR	8639649	Identifier	mark		8639579	1					
ANR	8639650	ReturnType	static void		8639579	1					
ANR	8639651	Identifier	store_pool_init		8639579	2					
ANR	8639652	ParameterList	"png_store * ps , store_pool * pool"		8639579	3					
ANR	8639653	Parameter	png_store * ps	834:16:25617:25629	8639579	0	True				
ANR	8639654	ParameterType	png_store *		8639579	0					
ANR	8639655	Identifier	ps		8639579	1					
ANR	8639656	Parameter	store_pool * pool	834:31:25632:25647	8639579	1	True				
ANR	8639657	ParameterType	store_pool *		8639579	0					
ANR	8639658	Identifier	pool		8639579	1					
ANR	8639659	CFGEntryNode	ENTRY		8639579		True				
ANR	8639660	CFGExitNode	EXIT		8639579		True				
ANR	8639661	Symbol	pool -> mark		8639579						
ANR	8639662	Symbol	ps		8639579						
ANR	8639663	Symbol	NULL		8639579						
ANR	8639664	Symbol	pool -> current		8639579						
ANR	8639665	Symbol	pool -> max_limit		8639579						
ANR	8639666	Symbol	pool -> max		8639579						
ANR	8639667	Symbol	pool		8639579						
ANR	8639668	Symbol	pool -> max_max		8639579						
ANR	8639669	Symbol	pool -> total		8639579						
ANR	8639670	Symbol	* pool		8639579						
ANR	8639671	Symbol	pool -> list		8639579						
ANR	8639672	Symbol	pool -> limit		8639579						
ANR	8639673	Symbol	pool -> max_total		8639579						
ANR	8639674	Symbol	pool -> store		8639579						
ANR	8639675	Function	store_init	845:0:25885:26797							
ANR	8639676	FunctionDef	store_init (png_store * ps)		8639675	0					
ANR	8639677	CompoundStatement		847:0:25923:26797	8639675	0					
ANR	8639678	ExpressionStatement	"memset ( ps , 0 , sizeof * ps )"	848:3:25928:25953	8639675	0	True				
ANR	8639679	CallExpression	"memset ( ps , 0 , sizeof * ps )"		8639675	0					
ANR	8639680	Callee	memset		8639675	0					
ANR	8639681	Identifier	memset		8639675	0					
ANR	8639682	ArgumentList	ps		8639675	1					
ANR	8639683	Argument	ps		8639675	0					
ANR	8639684	Identifier	ps		8639675	0					
ANR	8639685	Argument	0		8639675	1					
ANR	8639686	PrimaryExpression	0		8639675	0					
ANR	8639687	Argument	sizeof * ps		8639675	2					
ANR	8639688	SizeofExpression	sizeof * ps		8639675	0					
ANR	8639689	Sizeof	sizeof		8639675	0					
ANR	8639690	UnaryOperationExpression	* ps		8639675	1					
ANR	8639691	UnaryOperator	*		8639675	0					
ANR	8639692	Identifier	ps		8639675	1					
ANR	8639693	ExpressionStatement	init_exception_context ( & ps -> exception_context )	849:3:25958:26004	8639675	1	True				
ANR	8639694	CallExpression	init_exception_context ( & ps -> exception_context )		8639675	0					
ANR	8639695	Callee	init_exception_context		8639675	0					
ANR	8639696	Identifier	init_exception_context		8639675	0					
ANR	8639697	ArgumentList	& ps -> exception_context		8639675	1					
ANR	8639698	Argument	& ps -> exception_context		8639675	0					
ANR	8639699	UnaryOperationExpression	& ps -> exception_context		8639675	0					
ANR	8639700	UnaryOperator	&		8639675	0					
ANR	8639701	PtrMemberAccess	ps -> exception_context		8639675	1					
ANR	8639702	Identifier	ps		8639675	0					
ANR	8639703	Identifier	exception_context		8639675	1					
ANR	8639704	ExpressionStatement	"store_pool_init ( ps , & ps -> read_memory_pool )"	850:3:26009:26051	8639675	2	True				
ANR	8639705	CallExpression	"store_pool_init ( ps , & ps -> read_memory_pool )"		8639675	0					
ANR	8639706	Callee	store_pool_init		8639675	0					
ANR	8639707	Identifier	store_pool_init		8639675	0					
ANR	8639708	ArgumentList	ps		8639675	1					
ANR	8639709	Argument	ps		8639675	0					
ANR	8639710	Identifier	ps		8639675	0					
ANR	8639711	Argument	& ps -> read_memory_pool		8639675	1					
ANR	8639712	UnaryOperationExpression	& ps -> read_memory_pool		8639675	0					
ANR	8639713	UnaryOperator	&		8639675	0					
ANR	8639714	PtrMemberAccess	ps -> read_memory_pool		8639675	1					
ANR	8639715	Identifier	ps		8639675	0					
ANR	8639716	Identifier	read_memory_pool		8639675	1					
ANR	8639717	ExpressionStatement	"store_pool_init ( ps , & ps -> write_memory_pool )"	851:3:26056:26099	8639675	3	True				
ANR	8639718	CallExpression	"store_pool_init ( ps , & ps -> write_memory_pool )"		8639675	0					
ANR	8639719	Callee	store_pool_init		8639675	0					
ANR	8639720	Identifier	store_pool_init		8639675	0					
ANR	8639721	ArgumentList	ps		8639675	1					
ANR	8639722	Argument	ps		8639675	0					
ANR	8639723	Identifier	ps		8639675	0					
ANR	8639724	Argument	& ps -> write_memory_pool		8639675	1					
ANR	8639725	UnaryOperationExpression	& ps -> write_memory_pool		8639675	0					
ANR	8639726	UnaryOperator	&		8639675	0					
ANR	8639727	PtrMemberAccess	ps -> write_memory_pool		8639675	1					
ANR	8639728	Identifier	ps		8639675	0					
ANR	8639729	Identifier	write_memory_pool		8639675	1					
ANR	8639730	ExpressionStatement	ps -> verbose = 0	852:3:26104:26119	8639675	4	True				
ANR	8639731	AssignmentExpression	ps -> verbose = 0		8639675	0		=			
ANR	8639732	PtrMemberAccess	ps -> verbose		8639675	0					
ANR	8639733	Identifier	ps		8639675	0					
ANR	8639734	Identifier	verbose		8639675	1					
ANR	8639735	PrimaryExpression	0		8639675	1					
ANR	8639736	ExpressionStatement	ps -> treat_warnings_as_errors = 0	853:3:26124:26156	8639675	5	True				
ANR	8639737	AssignmentExpression	ps -> treat_warnings_as_errors = 0		8639675	0		=			
ANR	8639738	PtrMemberAccess	ps -> treat_warnings_as_errors		8639675	0					
ANR	8639739	Identifier	ps		8639675	0					
ANR	8639740	Identifier	treat_warnings_as_errors		8639675	1					
ANR	8639741	PrimaryExpression	0		8639675	1					
ANR	8639742	ExpressionStatement	ps -> expect_error = 0	854:3:26161:26181	8639675	6	True				
ANR	8639743	AssignmentExpression	ps -> expect_error = 0		8639675	0		=			
ANR	8639744	PtrMemberAccess	ps -> expect_error		8639675	0					
ANR	8639745	Identifier	ps		8639675	0					
ANR	8639746	Identifier	expect_error		8639675	1					
ANR	8639747	PrimaryExpression	0		8639675	1					
ANR	8639748	ExpressionStatement	ps -> expect_warning = 0	855:3:26186:26208	8639675	7	True				
ANR	8639749	AssignmentExpression	ps -> expect_warning = 0		8639675	0		=			
ANR	8639750	PtrMemberAccess	ps -> expect_warning		8639675	0					
ANR	8639751	Identifier	ps		8639675	0					
ANR	8639752	Identifier	expect_warning		8639675	1					
ANR	8639753	PrimaryExpression	0		8639675	1					
ANR	8639754	ExpressionStatement	ps -> saw_warning = 0	856:3:26213:26232	8639675	8	True				
ANR	8639755	AssignmentExpression	ps -> saw_warning = 0		8639675	0		=			
ANR	8639756	PtrMemberAccess	ps -> saw_warning		8639675	0					
ANR	8639757	Identifier	ps		8639675	0					
ANR	8639758	Identifier	saw_warning		8639675	1					
ANR	8639759	PrimaryExpression	0		8639675	1					
ANR	8639760	ExpressionStatement	ps -> speed = 0	857:3:26237:26250	8639675	9	True				
ANR	8639761	AssignmentExpression	ps -> speed = 0		8639675	0		=			
ANR	8639762	PtrMemberAccess	ps -> speed		8639675	0					
ANR	8639763	Identifier	ps		8639675	0					
ANR	8639764	Identifier	speed		8639675	1					
ANR	8639765	PrimaryExpression	0		8639675	1					
ANR	8639766	ExpressionStatement	ps -> progressive = 0	858:3:26255:26274	8639675	10	True				
ANR	8639767	AssignmentExpression	ps -> progressive = 0		8639675	0		=			
ANR	8639768	PtrMemberAccess	ps -> progressive		8639675	0					
ANR	8639769	Identifier	ps		8639675	0					
ANR	8639770	Identifier	progressive		8639675	1					
ANR	8639771	PrimaryExpression	0		8639675	1					
ANR	8639772	ExpressionStatement	ps -> validated = 0	859:3:26279:26296	8639675	11	True				
ANR	8639773	AssignmentExpression	ps -> validated = 0		8639675	0		=			
ANR	8639774	PtrMemberAccess	ps -> validated		8639675	0					
ANR	8639775	Identifier	ps		8639675	0					
ANR	8639776	Identifier	validated		8639675	1					
ANR	8639777	PrimaryExpression	0		8639675	1					
ANR	8639778	ExpressionStatement	ps -> nerrors = ps -> nwarnings = 0	860:3:26301:26332	8639675	12	True				
ANR	8639779	AssignmentExpression	ps -> nerrors = ps -> nwarnings = 0		8639675	0		=			
ANR	8639780	PtrMemberAccess	ps -> nerrors		8639675	0					
ANR	8639781	Identifier	ps		8639675	0					
ANR	8639782	Identifier	nerrors		8639675	1					
ANR	8639783	AssignmentExpression	ps -> nwarnings = 0		8639675	1		=			
ANR	8639784	PtrMemberAccess	ps -> nwarnings		8639675	0					
ANR	8639785	Identifier	ps		8639675	0					
ANR	8639786	Identifier	nwarnings		8639675	1					
ANR	8639787	PrimaryExpression	0		8639675	1					
ANR	8639788	ExpressionStatement	ps -> pread = NULL	861:3:26337:26353	8639675	13	True				
ANR	8639789	AssignmentExpression	ps -> pread = NULL		8639675	0		=			
ANR	8639790	PtrMemberAccess	ps -> pread		8639675	0					
ANR	8639791	Identifier	ps		8639675	0					
ANR	8639792	Identifier	pread		8639675	1					
ANR	8639793	Identifier	NULL		8639675	1					
ANR	8639794	ExpressionStatement	ps -> piread = NULL	862:3:26358:26375	8639675	14	True				
ANR	8639795	AssignmentExpression	ps -> piread = NULL		8639675	0		=			
ANR	8639796	PtrMemberAccess	ps -> piread		8639675	0					
ANR	8639797	Identifier	ps		8639675	0					
ANR	8639798	Identifier	piread		8639675	1					
ANR	8639799	Identifier	NULL		8639675	1					
ANR	8639800	ExpressionStatement	ps -> saved = ps -> current = NULL	863:3:26380:26410	8639675	15	True				
ANR	8639801	AssignmentExpression	ps -> saved = ps -> current = NULL		8639675	0		=			
ANR	8639802	PtrMemberAccess	ps -> saved		8639675	0					
ANR	8639803	Identifier	ps		8639675	0					
ANR	8639804	Identifier	saved		8639675	1					
ANR	8639805	AssignmentExpression	ps -> current = NULL		8639675	1		=			
ANR	8639806	PtrMemberAccess	ps -> current		8639675	0					
ANR	8639807	Identifier	ps		8639675	0					
ANR	8639808	Identifier	current		8639675	1					
ANR	8639809	Identifier	NULL		8639675	1					
ANR	8639810	ExpressionStatement	ps -> next = NULL	864:3:26415:26430	8639675	16	True				
ANR	8639811	AssignmentExpression	ps -> next = NULL		8639675	0		=			
ANR	8639812	PtrMemberAccess	ps -> next		8639675	0					
ANR	8639813	Identifier	ps		8639675	0					
ANR	8639814	Identifier	next		8639675	1					
ANR	8639815	Identifier	NULL		8639675	1					
ANR	8639816	ExpressionStatement	ps -> readpos = 0	865:3:26435:26450	8639675	17	True				
ANR	8639817	AssignmentExpression	ps -> readpos = 0		8639675	0		=			
ANR	8639818	PtrMemberAccess	ps -> readpos		8639675	0					
ANR	8639819	Identifier	ps		8639675	0					
ANR	8639820	Identifier	readpos		8639675	1					
ANR	8639821	PrimaryExpression	0		8639675	1					
ANR	8639822	ExpressionStatement	ps -> image = NULL	866:3:26455:26471	8639675	18	True				
ANR	8639823	AssignmentExpression	ps -> image = NULL		8639675	0		=			
ANR	8639824	PtrMemberAccess	ps -> image		8639675	0					
ANR	8639825	Identifier	ps		8639675	0					
ANR	8639826	Identifier	image		8639675	1					
ANR	8639827	Identifier	NULL		8639675	1					
ANR	8639828	ExpressionStatement	ps -> cb_image = 0	867:3:26476:26492	8639675	19	True				
ANR	8639829	AssignmentExpression	ps -> cb_image = 0		8639675	0		=			
ANR	8639830	PtrMemberAccess	ps -> cb_image		8639675	0					
ANR	8639831	Identifier	ps		8639675	0					
ANR	8639832	Identifier	cb_image		8639675	1					
ANR	8639833	PrimaryExpression	0		8639675	1					
ANR	8639834	ExpressionStatement	ps -> cb_row = 0	868:3:26497:26511	8639675	20	True				
ANR	8639835	AssignmentExpression	ps -> cb_row = 0		8639675	0		=			
ANR	8639836	PtrMemberAccess	ps -> cb_row		8639675	0					
ANR	8639837	Identifier	ps		8639675	0					
ANR	8639838	Identifier	cb_row		8639675	1					
ANR	8639839	PrimaryExpression	0		8639675	1					
ANR	8639840	ExpressionStatement	ps -> image_h = 0	869:3:26516:26531	8639675	21	True				
ANR	8639841	AssignmentExpression	ps -> image_h = 0		8639675	0		=			
ANR	8639842	PtrMemberAccess	ps -> image_h		8639675	0					
ANR	8639843	Identifier	ps		8639675	0					
ANR	8639844	Identifier	image_h		8639675	1					
ANR	8639845	PrimaryExpression	0		8639675	1					
ANR	8639846	ExpressionStatement	ps -> pwrite = NULL	870:3:26536:26553	8639675	22	True				
ANR	8639847	AssignmentExpression	ps -> pwrite = NULL		8639675	0		=			
ANR	8639848	PtrMemberAccess	ps -> pwrite		8639675	0					
ANR	8639849	Identifier	ps		8639675	0					
ANR	8639850	Identifier	pwrite		8639675	1					
ANR	8639851	Identifier	NULL		8639675	1					
ANR	8639852	ExpressionStatement	ps -> piwrite = NULL	871:3:26558:26576	8639675	23	True				
ANR	8639853	AssignmentExpression	ps -> piwrite = NULL		8639675	0		=			
ANR	8639854	PtrMemberAccess	ps -> piwrite		8639675	0					
ANR	8639855	Identifier	ps		8639675	0					
ANR	8639856	Identifier	piwrite		8639675	1					
ANR	8639857	Identifier	NULL		8639675	1					
ANR	8639858	ExpressionStatement	ps -> writepos = 0	872:3:26581:26597	8639675	24	True				
ANR	8639859	AssignmentExpression	ps -> writepos = 0		8639675	0		=			
ANR	8639860	PtrMemberAccess	ps -> writepos		8639675	0					
ANR	8639861	Identifier	ps		8639675	0					
ANR	8639862	Identifier	writepos		8639675	1					
ANR	8639863	PrimaryExpression	0		8639675	1					
ANR	8639864	ExpressionStatement	ps -> chunkpos = 8	873:3:26602:26618	8639675	25	True				
ANR	8639865	AssignmentExpression	ps -> chunkpos = 8		8639675	0		=			
ANR	8639866	PtrMemberAccess	ps -> chunkpos		8639675	0					
ANR	8639867	Identifier	ps		8639675	0					
ANR	8639868	Identifier	chunkpos		8639675	1					
ANR	8639869	PrimaryExpression	8		8639675	1					
ANR	8639870	ExpressionStatement	ps -> chunktype = 0	874:3:26623:26640	8639675	26	True				
ANR	8639871	AssignmentExpression	ps -> chunktype = 0		8639675	0		=			
ANR	8639872	PtrMemberAccess	ps -> chunktype		8639675	0					
ANR	8639873	Identifier	ps		8639675	0					
ANR	8639874	Identifier	chunktype		8639675	1					
ANR	8639875	PrimaryExpression	0		8639675	1					
ANR	8639876	ExpressionStatement	ps -> chunklen = 16	875:3:26645:26662	8639675	27	True				
ANR	8639877	AssignmentExpression	ps -> chunklen = 16		8639675	0		=			
ANR	8639878	PtrMemberAccess	ps -> chunklen		8639675	0					
ANR	8639879	Identifier	ps		8639675	0					
ANR	8639880	Identifier	chunklen		8639675	1					
ANR	8639881	PrimaryExpression	16		8639675	1					
ANR	8639882	ExpressionStatement	ps -> IDAT_size = 0	876:3:26667:26684	8639675	28	True				
ANR	8639883	AssignmentExpression	ps -> IDAT_size = 0		8639675	0		=			
ANR	8639884	PtrMemberAccess	ps -> IDAT_size		8639675	0					
ANR	8639885	Identifier	ps		8639675	0					
ANR	8639886	Identifier	IDAT_size		8639675	1					
ANR	8639887	PrimaryExpression	0		8639675	1					
ANR	8639888	ExpressionStatement	ps -> IDAT_bits = 0	877:3:26689:26706	8639675	29	True				
ANR	8639889	AssignmentExpression	ps -> IDAT_bits = 0		8639675	0		=			
ANR	8639890	PtrMemberAccess	ps -> IDAT_bits		8639675	0					
ANR	8639891	Identifier	ps		8639675	0					
ANR	8639892	Identifier	IDAT_bits		8639675	1					
ANR	8639893	PrimaryExpression	0		8639675	1					
ANR	8639894	Statement	ps	878:3:26711:26712	8639675	30	True				
ANR	8639895	Statement	->	878:5:26713:26714	8639675	31	True				
ANR	8639896	Statement	new	878:7:26715:26717	8639675	32	True				
ANR	8639897	Statement	.	878:10:26718:26718	8639675	33	True				
ANR	8639898	ExpressionStatement	prev = NULL	878:11:26719:26730	8639675	34	True				
ANR	8639899	AssignmentExpression	prev = NULL		8639675	0		=			
ANR	8639900	Identifier	prev		8639675	0					
ANR	8639901	Identifier	NULL		8639675	1					
ANR	8639902	ExpressionStatement	ps -> palette = NULL	879:3:26735:26753	8639675	35	True				
ANR	8639903	AssignmentExpression	ps -> palette = NULL		8639675	0		=			
ANR	8639904	PtrMemberAccess	ps -> palette		8639675	0					
ANR	8639905	Identifier	ps		8639675	0					
ANR	8639906	Identifier	palette		8639675	1					
ANR	8639907	Identifier	NULL		8639675	1					
ANR	8639908	ExpressionStatement	ps -> npalette = 0	880:3:26758:26774	8639675	36	True				
ANR	8639909	AssignmentExpression	ps -> npalette = 0		8639675	0		=			
ANR	8639910	PtrMemberAccess	ps -> npalette		8639675	0					
ANR	8639911	Identifier	ps		8639675	0					
ANR	8639912	Identifier	npalette		8639675	1					
ANR	8639913	PrimaryExpression	0		8639675	1					
ANR	8639914	ExpressionStatement	ps -> noptions = 0	881:3:26779:26795	8639675	37	True				
ANR	8639915	AssignmentExpression	ps -> noptions = 0		8639675	0		=			
ANR	8639916	PtrMemberAccess	ps -> noptions		8639675	0					
ANR	8639917	Identifier	ps		8639675	0					
ANR	8639918	Identifier	noptions		8639675	1					
ANR	8639919	PrimaryExpression	0		8639675	1					
ANR	8639920	ReturnType	static void		8639675	1					
ANR	8639921	Identifier	store_init		8639675	2					
ANR	8639922	ParameterList	png_store * ps		8639675	3					
ANR	8639923	Parameter	png_store * ps	846:11:25908:25920	8639675	0	True				
ANR	8639924	ParameterType	png_store *		8639675	0					
ANR	8639925	Identifier	ps		8639675	1					
ANR	8639926	CFGEntryNode	ENTRY		8639675		True				
ANR	8639927	CFGExitNode	EXIT		8639675		True				
ANR	8639928	Symbol	ps -> speed		8639675						
ANR	8639929	Symbol	ps		8639675						
ANR	8639930	Symbol	& ps -> read_memory_pool		8639675						
ANR	8639931	Symbol	& ps -> write_memory_pool		8639675						
ANR	8639932	Symbol	ps -> current		8639675						
ANR	8639933	Symbol	prev		8639675						
ANR	8639934	Symbol	ps -> noptions		8639675						
ANR	8639935	Symbol	& ps -> exception_context		8639675						
ANR	8639936	Symbol	ps -> cb_row		8639675						
ANR	8639937	Symbol	ps -> writepos		8639675						
ANR	8639938	Symbol	ps -> piwrite		8639675						
ANR	8639939	Symbol	ps -> verbose		8639675						
ANR	8639940	Symbol	ps -> piread		8639675						
ANR	8639941	Symbol	ps -> saved		8639675						
ANR	8639942	Symbol	ps -> cb_image		8639675						
ANR	8639943	Symbol	ps -> chunklen		8639675						
ANR	8639944	Symbol	ps -> chunkpos		8639675						
ANR	8639945	Symbol	ps -> image_h		8639675						
ANR	8639946	Symbol	NULL		8639675						
ANR	8639947	Symbol	ps -> expect_warning		8639675						
ANR	8639948	Symbol	ps -> next		8639675						
ANR	8639949	Symbol	* ps		8639675						
ANR	8639950	Symbol	ps -> treat_warnings_as_errors		8639675						
ANR	8639951	Symbol	ps -> expect_error		8639675						
ANR	8639952	Symbol	ps -> image		8639675						
ANR	8639953	Symbol	ps -> palette		8639675						
ANR	8639954	Symbol	ps -> readpos		8639675						
ANR	8639955	Symbol	ps -> IDAT_bits		8639675						
ANR	8639956	Symbol	ps -> saw_warning		8639675						
ANR	8639957	Symbol	ps -> chunktype		8639675						
ANR	8639958	Symbol	ps -> nwarnings		8639675						
ANR	8639959	Symbol	ps -> npalette		8639675						
ANR	8639960	Symbol	ps -> progressive		8639675						
ANR	8639961	Symbol	ps -> validated		8639675						
ANR	8639962	Symbol	ps -> pwrite		8639675						
ANR	8639963	Symbol	ps -> IDAT_size		8639675						
ANR	8639964	Symbol	ps -> nerrors		8639675						
ANR	8639965	Symbol	ps -> pread		8639675						
ANR	8639966	Function	store_freebuffer	884:0:26800:26964							
ANR	8639967	FunctionDef	store_freebuffer (png_store_buffer * psb)		8639966	0					
ANR	8639968	CompoundStatement		886:0:26852:26964	8639966	0					
ANR	8639969	IfStatement	if ( psb -> prev )		8639966	0					
ANR	8639970	Condition	psb -> prev	887:7:26861:26869	8639966	0	True				
ANR	8639971	PtrMemberAccess	psb -> prev		8639966	0					
ANR	8639972	Identifier	psb		8639966	0					
ANR	8639973	Identifier	prev		8639966	1					
ANR	8639974	CompoundStatement		3:3:22:22	8639966	1					
ANR	8639975	ExpressionStatement	store_freebuffer ( psb -> prev )	889:6:26883:26910	8639966	0	True				
ANR	8639976	CallExpression	store_freebuffer ( psb -> prev )		8639966	0					
ANR	8639977	Callee	store_freebuffer		8639966	0					
ANR	8639978	Identifier	store_freebuffer		8639966	0					
ANR	8639979	ArgumentList	psb -> prev		8639966	1					
ANR	8639980	Argument	psb -> prev		8639966	0					
ANR	8639981	PtrMemberAccess	psb -> prev		8639966	0					
ANR	8639982	Identifier	psb		8639966	0					
ANR	8639983	Identifier	prev		8639966	1					
ANR	8639984	ExpressionStatement	free ( psb -> prev )	890:6:26918:26933	8639966	1	True				
ANR	8639985	CallExpression	free ( psb -> prev )		8639966	0					
ANR	8639986	Callee	free		8639966	0					
ANR	8639987	Identifier	free		8639966	0					
ANR	8639988	ArgumentList	psb -> prev		8639966	1					
ANR	8639989	Argument	psb -> prev		8639966	0					
ANR	8639990	PtrMemberAccess	psb -> prev		8639966	0					
ANR	8639991	Identifier	psb		8639966	0					
ANR	8639992	Identifier	prev		8639966	1					
ANR	8639993	ExpressionStatement	psb -> prev = NULL	891:6:26941:26957	8639966	2	True				
ANR	8639994	AssignmentExpression	psb -> prev = NULL		8639966	0		=			
ANR	8639995	PtrMemberAccess	psb -> prev		8639966	0					
ANR	8639996	Identifier	psb		8639966	0					
ANR	8639997	Identifier	prev		8639966	1					
ANR	8639998	Identifier	NULL		8639966	1					
ANR	8639999	ReturnType	static void		8639966	1					
ANR	8640000	Identifier	store_freebuffer		8639966	2					
ANR	8640001	ParameterList	png_store_buffer * psb		8639966	3					
ANR	8640002	Parameter	png_store_buffer * psb	885:17:26829:26849	8639966	0	True				
ANR	8640003	ParameterType	png_store_buffer *		8639966	0					
ANR	8640004	Identifier	psb		8639966	1					
ANR	8640005	CFGEntryNode	ENTRY		8639966		True				
ANR	8640006	CFGExitNode	EXIT		8639966		True				
ANR	8640007	Symbol	psb -> prev		8639966						
ANR	8640008	Symbol	NULL		8639966						
ANR	8640009	Symbol	* psb		8639966						
ANR	8640010	Symbol	psb		8639966						
ANR	8640011	Function	store_freenew	895:0:26967:27284							
ANR	8640012	FunctionDef	store_freenew (png_store * ps)		8640011	0					
ANR	8640013	CompoundStatement		897:0:27008:27284	8640011	0					
ANR	8640014	Statement	store_freebuffer	898:3:27013:27028	8640011	0	True				
ANR	8640015	Statement	(	898:19:27029:27029	8640011	1	True				
ANR	8640016	Statement	&	898:20:27030:27030	8640011	2	True				
ANR	8640017	Statement	ps	898:21:27031:27032	8640011	3	True				
ANR	8640018	Statement	->	898:23:27033:27034	8640011	4	True				
ANR	8640019	Statement	new	898:25:27035:27037	8640011	5	True				
ANR	8640020	Statement	)	898:28:27038:27038	8640011	6	True				
ANR	8640021	ExpressionStatement		898:29:27039:27039	8640011	7	True				
ANR	8640022	ExpressionStatement	ps -> writepos = 0	899:3:27044:27060	8640011	8	True				
ANR	8640023	AssignmentExpression	ps -> writepos = 0		8640011	0		=			
ANR	8640024	PtrMemberAccess	ps -> writepos		8640011	0					
ANR	8640025	Identifier	ps		8640011	0					
ANR	8640026	Identifier	writepos		8640011	1					
ANR	8640027	PrimaryExpression	0		8640011	1					
ANR	8640028	ExpressionStatement	ps -> chunkpos = 8	900:3:27065:27081	8640011	9	True				
ANR	8640029	AssignmentExpression	ps -> chunkpos = 8		8640011	0		=			
ANR	8640030	PtrMemberAccess	ps -> chunkpos		8640011	0					
ANR	8640031	Identifier	ps		8640011	0					
ANR	8640032	Identifier	chunkpos		8640011	1					
ANR	8640033	PrimaryExpression	8		8640011	1					
ANR	8640034	ExpressionStatement	ps -> chunktype = 0	901:3:27086:27103	8640011	10	True				
ANR	8640035	AssignmentExpression	ps -> chunktype = 0		8640011	0		=			
ANR	8640036	PtrMemberAccess	ps -> chunktype		8640011	0					
ANR	8640037	Identifier	ps		8640011	0					
ANR	8640038	Identifier	chunktype		8640011	1					
ANR	8640039	PrimaryExpression	0		8640011	1					
ANR	8640040	ExpressionStatement	ps -> chunklen = 16	902:3:27108:27125	8640011	11	True				
ANR	8640041	AssignmentExpression	ps -> chunklen = 16		8640011	0		=			
ANR	8640042	PtrMemberAccess	ps -> chunklen		8640011	0					
ANR	8640043	Identifier	ps		8640011	0					
ANR	8640044	Identifier	chunklen		8640011	1					
ANR	8640045	PrimaryExpression	16		8640011	1					
ANR	8640046	ExpressionStatement	ps -> IDAT_size = 0	903:3:27130:27147	8640011	12	True				
ANR	8640047	AssignmentExpression	ps -> IDAT_size = 0		8640011	0		=			
ANR	8640048	PtrMemberAccess	ps -> IDAT_size		8640011	0					
ANR	8640049	Identifier	ps		8640011	0					
ANR	8640050	Identifier	IDAT_size		8640011	1					
ANR	8640051	PrimaryExpression	0		8640011	1					
ANR	8640052	ExpressionStatement	ps -> IDAT_bits = 0	904:3:27152:27169	8640011	13	True				
ANR	8640053	AssignmentExpression	ps -> IDAT_bits = 0		8640011	0		=			
ANR	8640054	PtrMemberAccess	ps -> IDAT_bits		8640011	0					
ANR	8640055	Identifier	ps		8640011	0					
ANR	8640056	Identifier	IDAT_bits		8640011	1					
ANR	8640057	PrimaryExpression	0		8640011	1					
ANR	8640058	IfStatement	if ( ps -> palette != NULL )		8640011	14					
ANR	8640059	Condition	ps -> palette != NULL	905:7:27178:27196	8640011	0	True				
ANR	8640060	EqualityExpression	ps -> palette != NULL		8640011	0		!=			
ANR	8640061	PtrMemberAccess	ps -> palette		8640011	0					
ANR	8640062	Identifier	ps		8640011	0					
ANR	8640063	Identifier	palette		8640011	1					
ANR	8640064	Identifier	NULL		8640011	1					
ANR	8640065	CompoundStatement		10:3:193:193	8640011	1					
ANR	8640066	ExpressionStatement	free ( ps -> palette )	907:6:27210:27227	8640011	0	True				
ANR	8640067	CallExpression	free ( ps -> palette )		8640011	0					
ANR	8640068	Callee	free		8640011	0					
ANR	8640069	Identifier	free		8640011	0					
ANR	8640070	ArgumentList	ps -> palette		8640011	1					
ANR	8640071	Argument	ps -> palette		8640011	0					
ANR	8640072	PtrMemberAccess	ps -> palette		8640011	0					
ANR	8640073	Identifier	ps		8640011	0					
ANR	8640074	Identifier	palette		8640011	1					
ANR	8640075	ExpressionStatement	ps -> palette = NULL	908:6:27235:27253	8640011	1	True				
ANR	8640076	AssignmentExpression	ps -> palette = NULL		8640011	0		=			
ANR	8640077	PtrMemberAccess	ps -> palette		8640011	0					
ANR	8640078	Identifier	ps		8640011	0					
ANR	8640079	Identifier	palette		8640011	1					
ANR	8640080	Identifier	NULL		8640011	1					
ANR	8640081	ExpressionStatement	ps -> npalette = 0	909:6:27261:27277	8640011	2	True				
ANR	8640082	AssignmentExpression	ps -> npalette = 0		8640011	0		=			
ANR	8640083	PtrMemberAccess	ps -> npalette		8640011	0					
ANR	8640084	Identifier	ps		8640011	0					
ANR	8640085	Identifier	npalette		8640011	1					
ANR	8640086	PrimaryExpression	0		8640011	1					
ANR	8640087	ReturnType	static void		8640011	1					
ANR	8640088	Identifier	store_freenew		8640011	2					
ANR	8640089	ParameterList	png_store * ps		8640011	3					
ANR	8640090	Parameter	png_store * ps	896:14:26993:27005	8640011	0	True				
ANR	8640091	ParameterType	png_store *		8640011	0					
ANR	8640092	Identifier	ps		8640011	1					
ANR	8640093	CFGEntryNode	ENTRY		8640011		True				
ANR	8640094	CFGExitNode	EXIT		8640011		True				
ANR	8640095	Symbol	ps -> palette		8640011						
ANR	8640096	Symbol	ps -> IDAT_bits		8640011						
ANR	8640097	Symbol	ps		8640011						
ANR	8640098	Symbol	ps -> writepos		8640011						
ANR	8640099	Symbol	ps -> chunktype		8640011						
ANR	8640100	Symbol	NULL		8640011						
ANR	8640101	Symbol	ps -> npalette		8640011						
ANR	8640102	Symbol	* ps		8640011						
ANR	8640103	Symbol	ps -> IDAT_size		8640011						
ANR	8640104	Symbol	ps -> chunklen		8640011						
ANR	8640105	Symbol	ps -> chunkpos		8640011						
ANR	8640106	Function	store_storenew	913:0:27287:27543							
ANR	8640107	FunctionDef	store_storenew (png_store * ps)		8640106	0					
ANR	8640108	CompoundStatement		915:0:27329:27543	8640106	0					
ANR	8640109	IdentifierDeclStatement	png_store_buffer * pb ;	916:3:27334:27354	8640106	0	True				
ANR	8640110	IdentifierDecl	* pb		8640106	0					
ANR	8640111	IdentifierDeclType	png_store_buffer *		8640106	0					
ANR	8640112	Identifier	pb		8640106	1					
ANR	8640113	Statement	pb	918:3:27360:27361	8640106	1	True				
ANR	8640114	Statement	=	918:6:27363:27363	8640106	2	True				
ANR	8640115	Statement	voidcast	918:8:27365:27372	8640106	3	True				
ANR	8640116	Statement	(	918:16:27373:27373	8640106	4	True				
ANR	8640117	Statement	png_store_buffer	918:17:27374:27389	8640106	5	True				
ANR	8640118	Statement	*	918:33:27390:27390	8640106	6	True				
ANR	8640119	Statement	","	918:34:27391:27391	8640106	7	True				
ANR	8640120	Statement	malloc	918:36:27393:27398	8640106	8	True				
ANR	8640121	Statement	(	918:42:27399:27399	8640106	9	True				
ANR	8640122	Statement	sizeof	918:43:27400:27405	8640106	10	True				
ANR	8640123	Statement	*	918:50:27407:27407	8640106	11	True				
ANR	8640124	Statement	pb	918:51:27408:27409	8640106	12	True				
ANR	8640125	Statement	)	918:53:27410:27410	8640106	13	True				
ANR	8640126	Statement	)	918:54:27411:27411	8640106	14	True				
ANR	8640127	ExpressionStatement		918:55:27412:27412	8640106	15	True				
ANR	8640128	IfStatement	if ( pb == NULL )		8640106	16					
ANR	8640129	Condition	pb == NULL	920:7:27422:27431	8640106	0	True				
ANR	8640130	EqualityExpression	pb == NULL		8640106	0		==			
ANR	8640131	Identifier	pb		8640106	0					
ANR	8640132	Identifier	NULL		8640106	1					
ANR	8640133	ExpressionStatement	"png_error ( ps -> pwrite , ""store new: OOM"" )"	921:6:27440:27479	8640106	1	True				
ANR	8640134	CallExpression	"png_error ( ps -> pwrite , ""store new: OOM"" )"		8640106	0					
ANR	8640135	Callee	png_error		8640106	0					
ANR	8640136	Identifier	png_error		8640106	0					
ANR	8640137	ArgumentList	ps -> pwrite		8640106	1					
ANR	8640138	Argument	ps -> pwrite		8640106	0					
ANR	8640139	PtrMemberAccess	ps -> pwrite		8640106	0					
ANR	8640140	Identifier	ps		8640106	0					
ANR	8640141	Identifier	pwrite		8640106	1					
ANR	8640142	Argument	"""store new: OOM"""		8640106	1					
ANR	8640143	PrimaryExpression	"""store new: OOM"""		8640106	0					
ANR	8640144	Statement	*	923:3:27485:27485	8640106	17	True				
ANR	8640145	Statement	pb	923:4:27486:27487	8640106	18	True				
ANR	8640146	Statement	=	923:7:27489:27489	8640106	19	True				
ANR	8640147	Statement	ps	923:9:27491:27492	8640106	20	True				
ANR	8640148	Statement	->	923:11:27493:27494	8640106	21	True				
ANR	8640149	Statement	new	923:13:27495:27497	8640106	22	True				
ANR	8640150	ExpressionStatement		923:16:27498:27498	8640106	23	True				
ANR	8640151	Statement	ps	924:3:27503:27504	8640106	24	True				
ANR	8640152	Statement	->	924:5:27505:27506	8640106	25	True				
ANR	8640153	Statement	new	924:7:27507:27509	8640106	26	True				
ANR	8640154	Statement	.	924:10:27510:27510	8640106	27	True				
ANR	8640155	ExpressionStatement	prev = pb	924:11:27511:27520	8640106	28	True				
ANR	8640156	AssignmentExpression	prev = pb		8640106	0		=			
ANR	8640157	Identifier	prev		8640106	0					
ANR	8640158	Identifier	pb		8640106	1					
ANR	8640159	ExpressionStatement	ps -> writepos = 0	925:3:27525:27541	8640106	29	True				
ANR	8640160	AssignmentExpression	ps -> writepos = 0		8640106	0		=			
ANR	8640161	PtrMemberAccess	ps -> writepos		8640106	0					
ANR	8640162	Identifier	ps		8640106	0					
ANR	8640163	Identifier	writepos		8640106	1					
ANR	8640164	PrimaryExpression	0		8640106	1					
ANR	8640165	ReturnType	static void		8640106	1					
ANR	8640166	Identifier	store_storenew		8640106	2					
ANR	8640167	ParameterList	png_store * ps		8640106	3					
ANR	8640168	Parameter	png_store * ps	914:15:27314:27326	8640106	0	True				
ANR	8640169	ParameterType	png_store *		8640106	0					
ANR	8640170	Identifier	ps		8640106	1					
ANR	8640171	CFGEntryNode	ENTRY		8640106		True				
ANR	8640172	CFGExitNode	EXIT		8640106		True				
ANR	8640173	Symbol	pb		8640106						
ANR	8640174	Symbol	ps		8640106						
ANR	8640175	Symbol	NULL		8640106						
ANR	8640176	Symbol	ps -> writepos		8640106						
ANR	8640177	Symbol	prev		8640106						
ANR	8640178	Symbol	* ps		8640106						
ANR	8640179	Symbol	ps -> pwrite		8640106						
ANR	8640180	Function	store_freefile	928:0:27546:27918							
ANR	8640181	FunctionDef	store_freefile (png_store_file * * ppf)		8640180	0					
ANR	8640182	CompoundStatement		930:0:27595:27918	8640180	0					
ANR	8640183	IfStatement	if ( * ppf != NULL )		8640180	0					
ANR	8640184	Condition	* ppf != NULL	931:7:27604:27615	8640180	0	True				
ANR	8640185	EqualityExpression	* ppf != NULL		8640180	0		!=			
ANR	8640186	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640187	UnaryOperator	*		8640180	0					
ANR	8640188	Identifier	ppf		8640180	1					
ANR	8640189	Identifier	NULL		8640180	1					
ANR	8640190	CompoundStatement		3:3:25:25	8640180	1					
ANR	8640191	ExpressionStatement	store_freefile ( & ( * ppf ) -> next )	933:6:27629:27658	8640180	0	True				
ANR	8640192	CallExpression	store_freefile ( & ( * ppf ) -> next )		8640180	0					
ANR	8640193	Callee	store_freefile		8640180	0					
ANR	8640194	Identifier	store_freefile		8640180	0					
ANR	8640195	ArgumentList	& ( * ppf ) -> next		8640180	1					
ANR	8640196	Argument	& ( * ppf ) -> next		8640180	0					
ANR	8640197	UnaryOperationExpression	& ( * ppf ) -> next		8640180	0					
ANR	8640198	UnaryOperator	&		8640180	0					
ANR	8640199	PtrMemberAccess	( * ppf ) -> next		8640180	1					
ANR	8640200	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640201	UnaryOperator	*		8640180	0					
ANR	8640202	Identifier	ppf		8640180	1					
ANR	8640203	Identifier	next		8640180	1					
ANR	8640204	ExpressionStatement	store_freebuffer ( & ( * ppf ) -> data )	935:6:27667:27698	8640180	1	True				
ANR	8640205	CallExpression	store_freebuffer ( & ( * ppf ) -> data )		8640180	0					
ANR	8640206	Callee	store_freebuffer		8640180	0					
ANR	8640207	Identifier	store_freebuffer		8640180	0					
ANR	8640208	ArgumentList	& ( * ppf ) -> data		8640180	1					
ANR	8640209	Argument	& ( * ppf ) -> data		8640180	0					
ANR	8640210	UnaryOperationExpression	& ( * ppf ) -> data		8640180	0					
ANR	8640211	UnaryOperator	&		8640180	0					
ANR	8640212	PtrMemberAccess	( * ppf ) -> data		8640180	1					
ANR	8640213	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640214	UnaryOperator	*		8640180	0					
ANR	8640215	Identifier	ppf		8640180	1					
ANR	8640216	Identifier	data		8640180	1					
ANR	8640217	ExpressionStatement	( * ppf ) -> datacount = 0	936:6:27706:27727	8640180	2	True				
ANR	8640218	AssignmentExpression	( * ppf ) -> datacount = 0		8640180	0		=			
ANR	8640219	PtrMemberAccess	( * ppf ) -> datacount		8640180	0					
ANR	8640220	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640221	UnaryOperator	*		8640180	0					
ANR	8640222	Identifier	ppf		8640180	1					
ANR	8640223	Identifier	datacount		8640180	1					
ANR	8640224	PrimaryExpression	0		8640180	1					
ANR	8640225	IfStatement	if ( ( * ppf ) -> palette != NULL )		8640180	3					
ANR	8640226	Condition	( * ppf ) -> palette != NULL	937:10:27739:27761	8640180	0	True				
ANR	8640227	EqualityExpression	( * ppf ) -> palette != NULL		8640180	0		!=			
ANR	8640228	PtrMemberAccess	( * ppf ) -> palette		8640180	0					
ANR	8640229	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640230	UnaryOperator	*		8640180	0					
ANR	8640231	Identifier	ppf		8640180	1					
ANR	8640232	Identifier	palette		8640180	1					
ANR	8640233	Identifier	NULL		8640180	1					
ANR	8640234	CompoundStatement		9:6:174:174	8640180	1					
ANR	8640235	ExpressionStatement	free ( ( * ppf ) -> palette )	939:9:27781:27802	8640180	0	True				
ANR	8640236	CallExpression	free ( ( * ppf ) -> palette )		8640180	0					
ANR	8640237	Callee	free		8640180	0					
ANR	8640238	Identifier	free		8640180	0					
ANR	8640239	ArgumentList	( * ppf ) -> palette		8640180	1					
ANR	8640240	Argument	( * ppf ) -> palette		8640180	0					
ANR	8640241	PtrMemberAccess	( * ppf ) -> palette		8640180	0					
ANR	8640242	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640243	UnaryOperator	*		8640180	0					
ANR	8640244	Identifier	ppf		8640180	1					
ANR	8640245	Identifier	palette		8640180	1					
ANR	8640246	ExpressionStatement	( * ppf ) -> palette = NULL	940:9:27813:27835	8640180	1	True				
ANR	8640247	AssignmentExpression	( * ppf ) -> palette = NULL		8640180	0		=			
ANR	8640248	PtrMemberAccess	( * ppf ) -> palette		8640180	0					
ANR	8640249	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640250	UnaryOperator	*		8640180	0					
ANR	8640251	Identifier	ppf		8640180	1					
ANR	8640252	Identifier	palette		8640180	1					
ANR	8640253	Identifier	NULL		8640180	1					
ANR	8640254	ExpressionStatement	( * ppf ) -> npalette = 0	941:9:27846:27866	8640180	2	True				
ANR	8640255	AssignmentExpression	( * ppf ) -> npalette = 0		8640180	0		=			
ANR	8640256	PtrMemberAccess	( * ppf ) -> npalette		8640180	0					
ANR	8640257	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640258	UnaryOperator	*		8640180	0					
ANR	8640259	Identifier	ppf		8640180	1					
ANR	8640260	Identifier	npalette		8640180	1					
ANR	8640261	PrimaryExpression	0		8640180	1					
ANR	8640262	ExpressionStatement	free ( * ppf )	943:6:27882:27892	8640180	4	True				
ANR	8640263	CallExpression	free ( * ppf )		8640180	0					
ANR	8640264	Callee	free		8640180	0					
ANR	8640265	Identifier	free		8640180	0					
ANR	8640266	ArgumentList	* ppf		8640180	1					
ANR	8640267	Argument	* ppf		8640180	0					
ANR	8640268	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640269	UnaryOperator	*		8640180	0					
ANR	8640270	Identifier	ppf		8640180	1					
ANR	8640271	ExpressionStatement	* ppf = NULL	944:6:27900:27911	8640180	5	True				
ANR	8640272	AssignmentExpression	* ppf = NULL		8640180	0		=			
ANR	8640273	UnaryOperationExpression	* ppf		8640180	0					
ANR	8640274	UnaryOperator	*		8640180	0					
ANR	8640275	Identifier	ppf		8640180	1					
ANR	8640276	Identifier	NULL		8640180	1					
ANR	8640277	ReturnType	static void		8640180	1					
ANR	8640278	Identifier	store_freefile		8640180	2					
ANR	8640279	ParameterList	png_store_file * * ppf		8640180	3					
ANR	8640280	Parameter	png_store_file * * ppf	929:15:27573:27592	8640180	0	True				
ANR	8640281	ParameterType	png_store_file * *		8640180	0					
ANR	8640282	Identifier	ppf		8640180	1					
ANR	8640283	CFGEntryNode	ENTRY		8640180		True				
ANR	8640284	CFGExitNode	EXIT		8640180		True				
ANR	8640285	Symbol	* ppf		8640180						
ANR	8640286	Symbol	& ( * ppf ) -> data		8640180						
ANR	8640287	Symbol	NULL		8640180						
ANR	8640288	Symbol	ppf		8640180						
ANR	8640289	Symbol	( * ppf ) -> palette		8640180						
ANR	8640290	Symbol	( * ppf ) -> datacount		8640180						
ANR	8640291	Symbol	* * ppf		8640180						
ANR	8640292	Symbol	( * ppf ) -> npalette		8640180						
ANR	8640293	Symbol	& ( * ppf ) -> next		8640180						
ANR	8640294	Function	bits_of	948:0:27921:28327							
ANR	8640295	FunctionDef	bits_of (png_uint_32 num)		8640294	0					
ANR	8640296	CompoundStatement		950:0:27966:28327	8640294	0					
ANR	8640297	IdentifierDeclStatement	unsigned int b = 0 ;	952:3:28015:28033	8640294	0	True				
ANR	8640298	IdentifierDecl	b = 0		8640294	0					
ANR	8640299	IdentifierDeclType	unsigned int		8640294	0					
ANR	8640300	Identifier	b		8640294	1					
ANR	8640301	AssignmentExpression	b = 0		8640294	2		=			
ANR	8640302	Identifier	b		8640294	0					
ANR	8640303	PrimaryExpression	0		8640294	1					
ANR	8640304	IfStatement	if ( num & 0xffff0000U )		8640294	1					
ANR	8640305	Condition	num & 0xffff0000U	954:7:28043:28059	8640294	0	True				
ANR	8640306	BitAndExpression	num & 0xffff0000U		8640294	0		&			
ANR	8640307	Identifier	num		8640294	0					
ANR	8640308	PrimaryExpression	0xffff0000U		8640294	1					
ANR	8640309	ExpressionStatement	"b += 16U , num >>= 16"	954:27:28063:28083	8640294	1	True				
ANR	8640310	Expression	"b += 16U , num >>= 16"		8640294	0					
ANR	8640311	AssignmentExpression	b += 16U		8640294	0		+=			
ANR	8640312	Identifier	b		8640294	0					
ANR	8640313	PrimaryExpression	16U		8640294	1					
ANR	8640314	AssignmentExpression	num >>= 16		8640294	1		>>=			
ANR	8640315	Identifier	num		8640294	0					
ANR	8640316	PrimaryExpression	16		8640294	1					
ANR	8640317	IfStatement	if ( num & 0xff00U )		8640294	2					
ANR	8640318	Condition	num & 0xff00U	955:7:28092:28104	8640294	0	True				
ANR	8640319	BitAndExpression	num & 0xff00U		8640294	0		&			
ANR	8640320	Identifier	num		8640294	0					
ANR	8640321	PrimaryExpression	0xff00U		8640294	1					
ANR	8640322	ExpressionStatement	"b += 8U , num >>= 8"	955:27:28112:28130	8640294	1	True				
ANR	8640323	Expression	"b += 8U , num >>= 8"		8640294	0					
ANR	8640324	AssignmentExpression	b += 8U		8640294	0		+=			
ANR	8640325	Identifier	b		8640294	0					
ANR	8640326	PrimaryExpression	8U		8640294	1					
ANR	8640327	AssignmentExpression	num >>= 8		8640294	1		>>=			
ANR	8640328	Identifier	num		8640294	0					
ANR	8640329	PrimaryExpression	8		8640294	1					
ANR	8640330	IfStatement	if ( num & 0xf0U )		8640294	3					
ANR	8640331	Condition	num & 0xf0U	956:7:28139:28149	8640294	0	True				
ANR	8640332	BitAndExpression	num & 0xf0U		8640294	0		&			
ANR	8640333	Identifier	num		8640294	0					
ANR	8640334	PrimaryExpression	0xf0U		8640294	1					
ANR	8640335	ExpressionStatement	"b += 4U , num >>= 4"	956:27:28159:28177	8640294	1	True				
ANR	8640336	Expression	"b += 4U , num >>= 4"		8640294	0					
ANR	8640337	AssignmentExpression	b += 4U		8640294	0		+=			
ANR	8640338	Identifier	b		8640294	0					
ANR	8640339	PrimaryExpression	4U		8640294	1					
ANR	8640340	AssignmentExpression	num >>= 4		8640294	1		>>=			
ANR	8640341	Identifier	num		8640294	0					
ANR	8640342	PrimaryExpression	4		8640294	1					
ANR	8640343	IfStatement	if ( num & 0xcU )		8640294	4					
ANR	8640344	Condition	num & 0xcU	957:7:28186:28195	8640294	0	True				
ANR	8640345	BitAndExpression	num & 0xcU		8640294	0		&			
ANR	8640346	Identifier	num		8640294	0					
ANR	8640347	PrimaryExpression	0xcU		8640294	1					
ANR	8640348	ExpressionStatement	"b += 2U , num >>= 2"	957:27:28206:28224	8640294	1	True				
ANR	8640349	Expression	"b += 2U , num >>= 2"		8640294	0					
ANR	8640350	AssignmentExpression	b += 2U		8640294	0		+=			
ANR	8640351	Identifier	b		8640294	0					
ANR	8640352	PrimaryExpression	2U		8640294	1					
ANR	8640353	AssignmentExpression	num >>= 2		8640294	1		>>=			
ANR	8640354	Identifier	num		8640294	0					
ANR	8640355	PrimaryExpression	2		8640294	1					
ANR	8640356	IfStatement	if ( num & 0x2U )		8640294	5					
ANR	8640357	Condition	num & 0x2U	958:7:28233:28242	8640294	0	True				
ANR	8640358	BitAndExpression	num & 0x2U		8640294	0		&			
ANR	8640359	Identifier	num		8640294	0					
ANR	8640360	PrimaryExpression	0x2U		8640294	1					
ANR	8640361	ExpressionStatement	"++ b , num >>= 1"	958:27:28253:28267	8640294	1	True				
ANR	8640362	Expression	"++ b , num >>= 1"		8640294	0					
ANR	8640363	UnaryExpression	++ b		8640294	0					
ANR	8640364	IncDec	++		8640294	0					
ANR	8640365	Identifier	b		8640294	1					
ANR	8640366	AssignmentExpression	num >>= 1		8640294	1		>>=			
ANR	8640367	Identifier	num		8640294	0					
ANR	8640368	PrimaryExpression	1		8640294	1					
ANR	8640369	IfStatement	if ( num )		8640294	6					
ANR	8640370	Condition	num	959:7:28276:28278	8640294	0	True				
ANR	8640371	Identifier	num		8640294	0					
ANR	8640372	ExpressionStatement	++ b	959:27:28296:28299	8640294	1	True				
ANR	8640373	UnaryExpression	++ b		8640294	0					
ANR	8640374	IncDec	++		8640294	0					
ANR	8640375	Identifier	b		8640294	1					
ANR	8640376	ReturnStatement	return b ;	961:3:28305:28313	8640294	7	True				
ANR	8640377	Identifier	b		8640294	0					
ANR	8640378	ReturnType	static unsigned int		8640294	1					
ANR	8640379	Identifier	bits_of		8640294	2					
ANR	8640380	ParameterList	png_uint_32 num		8640294	3					
ANR	8640381	Parameter	png_uint_32 num	949:8:27949:27963	8640294	0	True				
ANR	8640382	ParameterType	png_uint_32		8640294	0					
ANR	8640383	Identifier	num		8640294	1					
ANR	8640384	CFGEntryNode	ENTRY		8640294		True				
ANR	8640385	CFGExitNode	EXIT		8640294		True				
ANR	8640386	Symbol	b		8640294						
ANR	8640387	Symbol	num		8640294						
ANR	8640388	Function	store_storefile	967:0:28491:29521							
ANR	8640389	FunctionDef	"store_storefile (png_store * ps , png_uint_32 id)"		8640388	0					
ANR	8640390	CompoundStatement		969:0:28550:29521	8640388	0					
ANR	8640391	IdentifierDeclStatement	png_store_file * pf ;	970:3:28555:28573	8640388	0	True				
ANR	8640392	IdentifierDecl	* pf		8640388	0					
ANR	8640393	IdentifierDeclType	png_store_file *		8640388	0					
ANR	8640394	Identifier	pf		8640388	1					
ANR	8640395	IfStatement	if ( ps -> chunkpos != 0U || ps -> chunktype != 0U || ps -> chunklen != 0U || ps -> IDAT_size == 0 )		8640388	1					
ANR	8640396	Condition	ps -> chunkpos != 0U || ps -> chunktype != 0U || ps -> chunklen != 0U || ps -> IDAT_size == 0	972:7:28583:28674	8640388	0	True				
ANR	8640397	OrExpression	ps -> chunkpos != 0U || ps -> chunktype != 0U || ps -> chunklen != 0U || ps -> IDAT_size == 0		8640388	0		||			
ANR	8640398	EqualityExpression	ps -> chunkpos != 0U		8640388	0		!=			
ANR	8640399	PtrMemberAccess	ps -> chunkpos		8640388	0					
ANR	8640400	Identifier	ps		8640388	0					
ANR	8640401	Identifier	chunkpos		8640388	1					
ANR	8640402	PrimaryExpression	0U		8640388	1					
ANR	8640403	OrExpression	ps -> chunktype != 0U || ps -> chunklen != 0U || ps -> IDAT_size == 0		8640388	1		||			
ANR	8640404	EqualityExpression	ps -> chunktype != 0U		8640388	0		!=			
ANR	8640405	PtrMemberAccess	ps -> chunktype		8640388	0					
ANR	8640406	Identifier	ps		8640388	0					
ANR	8640407	Identifier	chunktype		8640388	1					
ANR	8640408	PrimaryExpression	0U		8640388	1					
ANR	8640409	OrExpression	ps -> chunklen != 0U || ps -> IDAT_size == 0		8640388	1		||			
ANR	8640410	EqualityExpression	ps -> chunklen != 0U		8640388	0		!=			
ANR	8640411	PtrMemberAccess	ps -> chunklen		8640388	0					
ANR	8640412	Identifier	ps		8640388	0					
ANR	8640413	Identifier	chunklen		8640388	1					
ANR	8640414	PrimaryExpression	0U		8640388	1					
ANR	8640415	EqualityExpression	ps -> IDAT_size == 0		8640388	1		==			
ANR	8640416	PtrMemberAccess	ps -> IDAT_size		8640388	0					
ANR	8640417	Identifier	ps		8640388	0					
ANR	8640418	Identifier	IDAT_size		8640388	1					
ANR	8640419	PrimaryExpression	0		8640388	1					
ANR	8640420	ExpressionStatement	"png_error ( ps -> pwrite , ""storefile: incomplete write"" )"	974:6:28683:28735	8640388	1	True				
ANR	8640421	CallExpression	"png_error ( ps -> pwrite , ""storefile: incomplete write"" )"		8640388	0					
ANR	8640422	Callee	png_error		8640388	0					
ANR	8640423	Identifier	png_error		8640388	0					
ANR	8640424	ArgumentList	ps -> pwrite		8640388	1					
ANR	8640425	Argument	ps -> pwrite		8640388	0					
ANR	8640426	PtrMemberAccess	ps -> pwrite		8640388	0					
ANR	8640427	Identifier	ps		8640388	0					
ANR	8640428	Identifier	pwrite		8640388	1					
ANR	8640429	Argument	"""storefile: incomplete write"""		8640388	1					
ANR	8640430	PrimaryExpression	"""storefile: incomplete write"""		8640388	0					
ANR	8640431	Statement	pf	976:3:28741:28742	8640388	2	True				
ANR	8640432	Statement	=	976:6:28744:28744	8640388	3	True				
ANR	8640433	Statement	voidcast	976:8:28746:28753	8640388	4	True				
ANR	8640434	Statement	(	976:16:28754:28754	8640388	5	True				
ANR	8640435	Statement	png_store_file	976:17:28755:28768	8640388	6	True				
ANR	8640436	Statement	*	976:31:28769:28769	8640388	7	True				
ANR	8640437	Statement	","	976:32:28770:28770	8640388	8	True				
ANR	8640438	Statement	malloc	976:34:28772:28777	8640388	9	True				
ANR	8640439	Statement	(	976:40:28778:28778	8640388	10	True				
ANR	8640440	Statement	sizeof	976:41:28779:28784	8640388	11	True				
ANR	8640441	Statement	*	976:48:28786:28786	8640388	12	True				
ANR	8640442	Statement	pf	976:49:28787:28788	8640388	13	True				
ANR	8640443	Statement	)	976:51:28789:28789	8640388	14	True				
ANR	8640444	Statement	)	976:52:28790:28790	8640388	15	True				
ANR	8640445	ExpressionStatement		976:53:28791:28791	8640388	16	True				
ANR	8640446	IfStatement	if ( pf == NULL )		8640388	17					
ANR	8640447	Condition	pf == NULL	977:7:28800:28809	8640388	0	True				
ANR	8640448	EqualityExpression	pf == NULL		8640388	0		==			
ANR	8640449	Identifier	pf		8640388	0					
ANR	8640450	Identifier	NULL		8640388	1					
ANR	8640451	ExpressionStatement	"png_error ( ps -> pwrite , ""storefile: OOM"" )"	978:6:28818:28857	8640388	1	True				
ANR	8640452	CallExpression	"png_error ( ps -> pwrite , ""storefile: OOM"" )"		8640388	0					
ANR	8640453	Callee	png_error		8640388	0					
ANR	8640454	Identifier	png_error		8640388	0					
ANR	8640455	ArgumentList	ps -> pwrite		8640388	1					
ANR	8640456	Argument	ps -> pwrite		8640388	0					
ANR	8640457	PtrMemberAccess	ps -> pwrite		8640388	0					
ANR	8640458	Identifier	ps		8640388	0					
ANR	8640459	Identifier	pwrite		8640388	1					
ANR	8640460	Argument	"""storefile: OOM"""		8640388	1					
ANR	8640461	PrimaryExpression	"""storefile: OOM"""		8640388	0					
ANR	8640462	ExpressionStatement	"safecat ( pf -> name , sizeof pf -> name , 0 , ps -> wname )"	979:3:28862:28910	8640388	18	True				
ANR	8640463	CallExpression	"safecat ( pf -> name , sizeof pf -> name , 0 , ps -> wname )"		8640388	0					
ANR	8640464	Callee	safecat		8640388	0					
ANR	8640465	Identifier	safecat		8640388	0					
ANR	8640466	ArgumentList	pf -> name		8640388	1					
ANR	8640467	Argument	pf -> name		8640388	0					
ANR	8640468	PtrMemberAccess	pf -> name		8640388	0					
ANR	8640469	Identifier	pf		8640388	0					
ANR	8640470	Identifier	name		8640388	1					
ANR	8640471	Argument	sizeof pf -> name		8640388	1					
ANR	8640472	SizeofExpression	sizeof pf -> name		8640388	0					
ANR	8640473	Sizeof	sizeof		8640388	0					
ANR	8640474	PtrMemberAccess	pf -> name		8640388	1					
ANR	8640475	Identifier	pf		8640388	0					
ANR	8640476	Identifier	name		8640388	1					
ANR	8640477	Argument	0		8640388	2					
ANR	8640478	PrimaryExpression	0		8640388	0					
ANR	8640479	Argument	ps -> wname		8640388	3					
ANR	8640480	PtrMemberAccess	ps -> wname		8640388	0					
ANR	8640481	Identifier	ps		8640388	0					
ANR	8640482	Identifier	wname		8640388	1					
ANR	8640483	ExpressionStatement	pf -> id = id	980:3:28915:28926	8640388	19	True				
ANR	8640484	AssignmentExpression	pf -> id = id		8640388	0		=			
ANR	8640485	PtrMemberAccess	pf -> id		8640388	0					
ANR	8640486	Identifier	pf		8640388	0					
ANR	8640487	Identifier	id		8640388	1					
ANR	8640488	Identifier	id		8640388	1					
ANR	8640489	Statement	pf	981:3:28931:28932	8640388	20	True				
ANR	8640490	Statement	->	981:5:28933:28934	8640388	21	True				
ANR	8640491	Statement	data	981:7:28935:28938	8640388	22	True				
ANR	8640492	Statement	=	981:12:28940:28940	8640388	23	True				
ANR	8640493	Statement	ps	981:14:28942:28943	8640388	24	True				
ANR	8640494	Statement	->	981:16:28944:28945	8640388	25	True				
ANR	8640495	Statement	new	981:18:28946:28948	8640388	26	True				
ANR	8640496	ExpressionStatement		981:21:28949:28949	8640388	27	True				
ANR	8640497	ExpressionStatement	pf -> datacount = ps -> writepos	982:3:28954:28982	8640388	28	True				
ANR	8640498	AssignmentExpression	pf -> datacount = ps -> writepos		8640388	0		=			
ANR	8640499	PtrMemberAccess	pf -> datacount		8640388	0					
ANR	8640500	Identifier	pf		8640388	0					
ANR	8640501	Identifier	datacount		8640388	1					
ANR	8640502	PtrMemberAccess	ps -> writepos		8640388	1					
ANR	8640503	Identifier	ps		8640388	0					
ANR	8640504	Identifier	writepos		8640388	1					
ANR	8640505	ExpressionStatement	pf -> IDAT_size = ps -> IDAT_size	983:3:28987:29016	8640388	29	True				
ANR	8640506	AssignmentExpression	pf -> IDAT_size = ps -> IDAT_size		8640388	0		=			
ANR	8640507	PtrMemberAccess	pf -> IDAT_size		8640388	0					
ANR	8640508	Identifier	pf		8640388	0					
ANR	8640509	Identifier	IDAT_size		8640388	1					
ANR	8640510	PtrMemberAccess	ps -> IDAT_size		8640388	1					
ANR	8640511	Identifier	ps		8640388	0					
ANR	8640512	Identifier	IDAT_size		8640388	1					
ANR	8640513	ExpressionStatement	pf -> IDAT_bits = bits_of ( ps -> IDAT_size )	984:3:29021:29059	8640388	30	True				
ANR	8640514	AssignmentExpression	pf -> IDAT_bits = bits_of ( ps -> IDAT_size )		8640388	0		=			
ANR	8640515	PtrMemberAccess	pf -> IDAT_bits		8640388	0					
ANR	8640516	Identifier	pf		8640388	0					
ANR	8640517	Identifier	IDAT_bits		8640388	1					
ANR	8640518	CallExpression	bits_of ( ps -> IDAT_size )		8640388	1					
ANR	8640519	Callee	bits_of		8640388	0					
ANR	8640520	Identifier	bits_of		8640388	0					
ANR	8640521	ArgumentList	ps -> IDAT_size		8640388	1					
ANR	8640522	Argument	ps -> IDAT_size		8640388	0					
ANR	8640523	PtrMemberAccess	ps -> IDAT_size		8640388	0					
ANR	8640524	Identifier	ps		8640388	0					
ANR	8640525	Identifier	IDAT_size		8640388	1					
ANR	8640526	IfStatement	if ( pf -> IDAT_bits == 0U )		8640388	31					
ANR	8640527	Condition	pf -> IDAT_bits == 0U	986:7:29142:29160	8640388	0	True				
ANR	8640528	EqualityExpression	pf -> IDAT_bits == 0U		8640388	0		==			
ANR	8640529	PtrMemberAccess	pf -> IDAT_bits		8640388	0					
ANR	8640530	Identifier	pf		8640388	0					
ANR	8640531	Identifier	IDAT_bits		8640388	1					
ANR	8640532	PrimaryExpression	0U		8640388	1					
ANR	8640533	ExpressionStatement	"png_error ( ps -> pwrite , ""storefile: 0 sized IDAT"" )"	987:6:29169:29217	8640388	1	True				
ANR	8640534	CallExpression	"png_error ( ps -> pwrite , ""storefile: 0 sized IDAT"" )"		8640388	0					
ANR	8640535	Callee	png_error		8640388	0					
ANR	8640536	Identifier	png_error		8640388	0					
ANR	8640537	ArgumentList	ps -> pwrite		8640388	1					
ANR	8640538	Argument	ps -> pwrite		8640388	0					
ANR	8640539	PtrMemberAccess	ps -> pwrite		8640388	0					
ANR	8640540	Identifier	ps		8640388	0					
ANR	8640541	Identifier	pwrite		8640388	1					
ANR	8640542	Argument	"""storefile: 0 sized IDAT"""		8640388	1					
ANR	8640543	PrimaryExpression	"""storefile: 0 sized IDAT"""		8640388	0					
ANR	8640544	Statement	ps	988:3:29222:29223	8640388	32	True				
ANR	8640545	Statement	->	988:5:29224:29225	8640388	33	True				
ANR	8640546	Statement	new	988:7:29226:29228	8640388	34	True				
ANR	8640547	Statement	.	988:10:29229:29229	8640388	35	True				
ANR	8640548	ExpressionStatement	prev = NULL	988:11:29230:29241	8640388	36	True				
ANR	8640549	AssignmentExpression	prev = NULL		8640388	0		=			
ANR	8640550	Identifier	prev		8640388	0					
ANR	8640551	Identifier	NULL		8640388	1					
ANR	8640552	ExpressionStatement	ps -> writepos = 0	989:3:29246:29262	8640388	37	True				
ANR	8640553	AssignmentExpression	ps -> writepos = 0		8640388	0		=			
ANR	8640554	PtrMemberAccess	ps -> writepos		8640388	0					
ANR	8640555	Identifier	ps		8640388	0					
ANR	8640556	Identifier	writepos		8640388	1					
ANR	8640557	PrimaryExpression	0		8640388	1					
ANR	8640558	ExpressionStatement	ps -> chunkpos = 8	990:3:29267:29283	8640388	38	True				
ANR	8640559	AssignmentExpression	ps -> chunkpos = 8		8640388	0		=			
ANR	8640560	PtrMemberAccess	ps -> chunkpos		8640388	0					
ANR	8640561	Identifier	ps		8640388	0					
ANR	8640562	Identifier	chunkpos		8640388	1					
ANR	8640563	PrimaryExpression	8		8640388	1					
ANR	8640564	ExpressionStatement	ps -> chunktype = 0	991:3:29288:29305	8640388	39	True				
ANR	8640565	AssignmentExpression	ps -> chunktype = 0		8640388	0		=			
ANR	8640566	PtrMemberAccess	ps -> chunktype		8640388	0					
ANR	8640567	Identifier	ps		8640388	0					
ANR	8640568	Identifier	chunktype		8640388	1					
ANR	8640569	PrimaryExpression	0		8640388	1					
ANR	8640570	ExpressionStatement	ps -> chunklen = 16	992:3:29310:29327	8640388	40	True				
ANR	8640571	AssignmentExpression	ps -> chunklen = 16		8640388	0		=			
ANR	8640572	PtrMemberAccess	ps -> chunklen		8640388	0					
ANR	8640573	Identifier	ps		8640388	0					
ANR	8640574	Identifier	chunklen		8640388	1					
ANR	8640575	PrimaryExpression	16		8640388	1					
ANR	8640576	ExpressionStatement	ps -> IDAT_size = 0	993:3:29332:29349	8640388	41	True				
ANR	8640577	AssignmentExpression	ps -> IDAT_size = 0		8640388	0		=			
ANR	8640578	PtrMemberAccess	ps -> IDAT_size		8640388	0					
ANR	8640579	Identifier	ps		8640388	0					
ANR	8640580	Identifier	IDAT_size		8640388	1					
ANR	8640581	PrimaryExpression	0		8640388	1					
ANR	8640582	ExpressionStatement	pf -> palette = ps -> palette	994:3:29354:29379	8640388	42	True				
ANR	8640583	AssignmentExpression	pf -> palette = ps -> palette		8640388	0		=			
ANR	8640584	PtrMemberAccess	pf -> palette		8640388	0					
ANR	8640585	Identifier	pf		8640388	0					
ANR	8640586	Identifier	palette		8640388	1					
ANR	8640587	PtrMemberAccess	ps -> palette		8640388	1					
ANR	8640588	Identifier	ps		8640388	0					
ANR	8640589	Identifier	palette		8640388	1					
ANR	8640590	ExpressionStatement	pf -> npalette = ps -> npalette	995:3:29384:29411	8640388	43	True				
ANR	8640591	AssignmentExpression	pf -> npalette = ps -> npalette		8640388	0		=			
ANR	8640592	PtrMemberAccess	pf -> npalette		8640388	0					
ANR	8640593	Identifier	pf		8640388	0					
ANR	8640594	Identifier	npalette		8640388	1					
ANR	8640595	PtrMemberAccess	ps -> npalette		8640388	1					
ANR	8640596	Identifier	ps		8640388	0					
ANR	8640597	Identifier	npalette		8640388	1					
ANR	8640598	ExpressionStatement	ps -> palette = 0	996:3:29416:29431	8640388	44	True				
ANR	8640599	AssignmentExpression	ps -> palette = 0		8640388	0		=			
ANR	8640600	PtrMemberAccess	ps -> palette		8640388	0					
ANR	8640601	Identifier	ps		8640388	0					
ANR	8640602	Identifier	palette		8640388	1					
ANR	8640603	PrimaryExpression	0		8640388	1					
ANR	8640604	ExpressionStatement	ps -> npalette = 0	997:3:29436:29452	8640388	45	True				
ANR	8640605	AssignmentExpression	ps -> npalette = 0		8640388	0		=			
ANR	8640606	PtrMemberAccess	ps -> npalette		8640388	0					
ANR	8640607	Identifier	ps		8640388	0					
ANR	8640608	Identifier	npalette		8640388	1					
ANR	8640609	PrimaryExpression	0		8640388	1					
ANR	8640610	ExpressionStatement	pf -> next = ps -> saved	1000:3:29480:29500	8640388	46	True				
ANR	8640611	AssignmentExpression	pf -> next = ps -> saved		8640388	0		=			
ANR	8640612	PtrMemberAccess	pf -> next		8640388	0					
ANR	8640613	Identifier	pf		8640388	0					
ANR	8640614	Identifier	next		8640388	1					
ANR	8640615	PtrMemberAccess	ps -> saved		8640388	1					
ANR	8640616	Identifier	ps		8640388	0					
ANR	8640617	Identifier	saved		8640388	1					
ANR	8640618	ExpressionStatement	ps -> saved = pf	1001:3:29505:29519	8640388	47	True				
ANR	8640619	AssignmentExpression	ps -> saved = pf		8640388	0		=			
ANR	8640620	PtrMemberAccess	ps -> saved		8640388	0					
ANR	8640621	Identifier	ps		8640388	0					
ANR	8640622	Identifier	saved		8640388	1					
ANR	8640623	Identifier	pf		8640388	1					
ANR	8640624	ReturnType	static void		8640388	1					
ANR	8640625	Identifier	store_storefile		8640388	2					
ANR	8640626	ParameterList	"png_store * ps , png_uint_32 id"		8640388	3					
ANR	8640627	Parameter	png_store * ps	968:16:28519:28531	8640388	0	True				
ANR	8640628	ParameterType	png_store *		8640388	0					
ANR	8640629	Identifier	ps		8640388	1					
ANR	8640630	Parameter	png_uint_32 id	968:31:28534:28547	8640388	1	True				
ANR	8640631	ParameterType	png_uint_32		8640388	0					
ANR	8640632	Identifier	id		8640388	1					
ANR	8640633	CFGEntryNode	ENTRY		8640388		True				
ANR	8640634	CFGExitNode	EXIT		8640388		True				
ANR	8640635	Symbol	pf -> palette		8640388						
ANR	8640636	Symbol	ps		8640388						
ANR	8640637	Symbol	pf -> IDAT_bits		8640388						
ANR	8640638	Symbol	prev		8640388						
ANR	8640639	Symbol	ps -> writepos		8640388						
ANR	8640640	Symbol	pf -> IDAT_size		8640388						
ANR	8640641	Symbol	bits_of		8640388						
ANR	8640642	Symbol	id		8640388						
ANR	8640643	Symbol	ps -> saved		8640388						
ANR	8640644	Symbol	ps -> wname		8640388						
ANR	8640645	Symbol	ps -> chunklen		8640388						
ANR	8640646	Symbol	ps -> chunkpos		8640388						
ANR	8640647	Symbol	pf -> next		8640388						
ANR	8640648	Symbol	NULL		8640388						
ANR	8640649	Symbol	* ps		8640388						
ANR	8640650	Symbol	pf -> npalette		8640388						
ANR	8640651	Symbol	ps -> palette		8640388						
ANR	8640652	Symbol	pf -> id		8640388						
ANR	8640653	Symbol	ps -> chunktype		8640388						
ANR	8640654	Symbol	pf		8640388						
ANR	8640655	Symbol	pf -> name		8640388						
ANR	8640656	Symbol	pf -> datacount		8640388						
ANR	8640657	Symbol	ps -> npalette		8640388						
ANR	8640658	Symbol	ps -> pwrite		8640388						
ANR	8640659	Symbol	ps -> IDAT_size		8640388						
ANR	8640660	Symbol	* pf		8640388						
ANR	8640661	Function	store_message	1005:0:29578:30587							
ANR	8640662	FunctionDef	"store_message (png_store * ps , png_const_structp pp , char * buffer , size_t bufsize , size_t pos , const char * msg)"		8640661	0					
ANR	8640663	CompoundStatement		1008:0:29705:30587	8640661	0					
ANR	8640664	IfStatement	if ( pp != NULL && pp == ps -> pread )		8640661	0					
ANR	8640665	Condition	pp != NULL && pp == ps -> pread	1009:7:29714:29742	8640661	0	True				
ANR	8640666	AndExpression	pp != NULL && pp == ps -> pread		8640661	0		&&			
ANR	8640667	EqualityExpression	pp != NULL		8640661	0		!=			
ANR	8640668	Identifier	pp		8640661	0					
ANR	8640669	Identifier	NULL		8640661	1					
ANR	8640670	EqualityExpression	pp == ps -> pread		8640661	1		==			
ANR	8640671	Identifier	pp		8640661	0					
ANR	8640672	PtrMemberAccess	ps -> pread		8640661	1					
ANR	8640673	Identifier	ps		8640661	0					
ANR	8640674	Identifier	pread		8640661	1					
ANR	8640675	CompoundStatement		3:3:42:42	8640661	1					
ANR	8640676	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""read: "" )"	1012:6:29783:29828	8640661	0	True				
ANR	8640677	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""read: "" )"		8640661	0		=			
ANR	8640678	Identifier	pos		8640661	0					
ANR	8640679	CallExpression	"safecat ( buffer , bufsize , pos , ""read: "" )"		8640661	1					
ANR	8640680	Callee	safecat		8640661	0					
ANR	8640681	Identifier	safecat		8640661	0					
ANR	8640682	ArgumentList	buffer		8640661	1					
ANR	8640683	Argument	buffer		8640661	0					
ANR	8640684	Identifier	buffer		8640661	0					
ANR	8640685	Argument	bufsize		8640661	1					
ANR	8640686	Identifier	bufsize		8640661	0					
ANR	8640687	Argument	pos		8640661	2					
ANR	8640688	Identifier	pos		8640661	0					
ANR	8640689	Argument	"""read: """		8640661	3					
ANR	8640690	PrimaryExpression	"""read: """		8640661	0					
ANR	8640691	IfStatement	if ( ps -> current != NULL )		8640661	1					
ANR	8640692	Condition	ps -> current != NULL	1014:10:29841:29859	8640661	0	True				
ANR	8640693	EqualityExpression	ps -> current != NULL		8640661	0		!=			
ANR	8640694	PtrMemberAccess	ps -> current		8640661	0					
ANR	8640695	Identifier	ps		8640661	0					
ANR	8640696	Identifier	current		8640661	1					
ANR	8640697	Identifier	NULL		8640661	1					
ANR	8640698	CompoundStatement		8:6:162:162	8640661	1					
ANR	8640699	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ps -> current -> name )"	1016:9:29879:29933	8640661	0	True				
ANR	8640700	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ps -> current -> name )"		8640661	0		=			
ANR	8640701	Identifier	pos		8640661	0					
ANR	8640702	CallExpression	"safecat ( buffer , bufsize , pos , ps -> current -> name )"		8640661	1					
ANR	8640703	Callee	safecat		8640661	0					
ANR	8640704	Identifier	safecat		8640661	0					
ANR	8640705	ArgumentList	buffer		8640661	1					
ANR	8640706	Argument	buffer		8640661	0					
ANR	8640707	Identifier	buffer		8640661	0					
ANR	8640708	Argument	bufsize		8640661	1					
ANR	8640709	Identifier	bufsize		8640661	0					
ANR	8640710	Argument	pos		8640661	2					
ANR	8640711	Identifier	pos		8640661	0					
ANR	8640712	Argument	ps -> current -> name		8640661	3					
ANR	8640713	PtrMemberAccess	ps -> current -> name		8640661	0					
ANR	8640714	PtrMemberAccess	ps -> current		8640661	0					
ANR	8640715	Identifier	ps		8640661	0					
ANR	8640716	Identifier	current		8640661	1					
ANR	8640717	Identifier	name		8640661	1					
ANR	8640718	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , sep )"	1017:9:29944:29984	8640661	1	True				
ANR	8640719	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , sep )"		8640661	0		=			
ANR	8640720	Identifier	pos		8640661	0					
ANR	8640721	CallExpression	"safecat ( buffer , bufsize , pos , sep )"		8640661	1					
ANR	8640722	Callee	safecat		8640661	0					
ANR	8640723	Identifier	safecat		8640661	0					
ANR	8640724	ArgumentList	buffer		8640661	1					
ANR	8640725	Argument	buffer		8640661	0					
ANR	8640726	Identifier	buffer		8640661	0					
ANR	8640727	Argument	bufsize		8640661	1					
ANR	8640728	Identifier	bufsize		8640661	0					
ANR	8640729	Argument	pos		8640661	2					
ANR	8640730	Identifier	pos		8640661	0					
ANR	8640731	Argument	sep		8640661	3					
ANR	8640732	Identifier	sep		8640661	0					
ANR	8640733	ElseStatement	else		8640661	0					
ANR	8640734	IfStatement	if ( pp != NULL && pp == ps -> pwrite )		8640661	0					
ANR	8640735	Condition	pp != NULL && pp == ps -> pwrite	1021:12:30012:30041	8640661	0	True				
ANR	8640736	AndExpression	pp != NULL && pp == ps -> pwrite		8640661	0		&&			
ANR	8640737	EqualityExpression	pp != NULL		8640661	0		!=			
ANR	8640738	Identifier	pp		8640661	0					
ANR	8640739	Identifier	NULL		8640661	1					
ANR	8640740	EqualityExpression	pp == ps -> pwrite		8640661	1		==			
ANR	8640741	Identifier	pp		8640661	0					
ANR	8640742	PtrMemberAccess	ps -> pwrite		8640661	1					
ANR	8640743	Identifier	ps		8640661	0					
ANR	8640744	Identifier	pwrite		8640661	1					
ANR	8640745	CompoundStatement		15:3:341:341	8640661	1					
ANR	8640746	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""write: "" )"	1024:6:30082:30128	8640661	0	True				
ANR	8640747	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""write: "" )"		8640661	0		=			
ANR	8640748	Identifier	pos		8640661	0					
ANR	8640749	CallExpression	"safecat ( buffer , bufsize , pos , ""write: "" )"		8640661	1					
ANR	8640750	Callee	safecat		8640661	0					
ANR	8640751	Identifier	safecat		8640661	0					
ANR	8640752	ArgumentList	buffer		8640661	1					
ANR	8640753	Argument	buffer		8640661	0					
ANR	8640754	Identifier	buffer		8640661	0					
ANR	8640755	Argument	bufsize		8640661	1					
ANR	8640756	Identifier	bufsize		8640661	0					
ANR	8640757	Argument	pos		8640661	2					
ANR	8640758	Identifier	pos		8640661	0					
ANR	8640759	Argument	"""write: """		8640661	3					
ANR	8640760	PrimaryExpression	"""write: """		8640661	0					
ANR	8640761	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ps -> wname )"	1025:6:30136:30182	8640661	1	True				
ANR	8640762	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ps -> wname )"		8640661	0		=			
ANR	8640763	Identifier	pos		8640661	0					
ANR	8640764	CallExpression	"safecat ( buffer , bufsize , pos , ps -> wname )"		8640661	1					
ANR	8640765	Callee	safecat		8640661	0					
ANR	8640766	Identifier	safecat		8640661	0					
ANR	8640767	ArgumentList	buffer		8640661	1					
ANR	8640768	Argument	buffer		8640661	0					
ANR	8640769	Identifier	buffer		8640661	0					
ANR	8640770	Argument	bufsize		8640661	1					
ANR	8640771	Identifier	bufsize		8640661	0					
ANR	8640772	Argument	pos		8640661	2					
ANR	8640773	Identifier	pos		8640661	0					
ANR	8640774	Argument	ps -> wname		8640661	3					
ANR	8640775	PtrMemberAccess	ps -> wname		8640661	0					
ANR	8640776	Identifier	ps		8640661	0					
ANR	8640777	Identifier	wname		8640661	1					
ANR	8640778	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , sep )"	1026:6:30190:30230	8640661	2	True				
ANR	8640779	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , sep )"		8640661	0		=			
ANR	8640780	Identifier	pos		8640661	0					
ANR	8640781	CallExpression	"safecat ( buffer , bufsize , pos , sep )"		8640661	1					
ANR	8640782	Callee	safecat		8640661	0					
ANR	8640783	Identifier	safecat		8640661	0					
ANR	8640784	ArgumentList	buffer		8640661	1					
ANR	8640785	Argument	buffer		8640661	0					
ANR	8640786	Identifier	buffer		8640661	0					
ANR	8640787	Argument	bufsize		8640661	1					
ANR	8640788	Identifier	bufsize		8640661	0					
ANR	8640789	Argument	pos		8640661	2					
ANR	8640790	Identifier	pos		8640661	0					
ANR	8640791	Argument	sep		8640661	3					
ANR	8640792	Identifier	sep		8640661	0					
ANR	8640793	ElseStatement	else		8640661	0					
ANR	8640794	CompoundStatement		23:3:543:543	8640661	0					
ANR	8640795	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""pngvalid: "" )"	1032:6:30334:30383	8640661	0	True				
ANR	8640796	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""pngvalid: "" )"		8640661	0		=			
ANR	8640797	Identifier	pos		8640661	0					
ANR	8640798	CallExpression	"safecat ( buffer , bufsize , pos , ""pngvalid: "" )"		8640661	1					
ANR	8640799	Callee	safecat		8640661	0					
ANR	8640800	Identifier	safecat		8640661	0					
ANR	8640801	ArgumentList	buffer		8640661	1					
ANR	8640802	Argument	buffer		8640661	0					
ANR	8640803	Identifier	buffer		8640661	0					
ANR	8640804	Argument	bufsize		8640661	1					
ANR	8640805	Identifier	bufsize		8640661	0					
ANR	8640806	Argument	pos		8640661	2					
ANR	8640807	Identifier	pos		8640661	0					
ANR	8640808	Argument	"""pngvalid: """		8640661	3					
ANR	8640809	PrimaryExpression	"""pngvalid: """		8640661	0					
ANR	8640810	IfStatement	if ( ps -> test [ 0 ] != 0 )		8640661	1					
ANR	8640811	Condition	ps -> test [ 0 ] != 0	1035:7:30398:30413	8640661	0	True				
ANR	8640812	EqualityExpression	ps -> test [ 0 ] != 0		8640661	0		!=			
ANR	8640813	ArrayIndexing	ps -> test [ 0 ]		8640661	0					
ANR	8640814	PtrMemberAccess	ps -> test		8640661	0					
ANR	8640815	Identifier	ps		8640661	0					
ANR	8640816	Identifier	test		8640661	1					
ANR	8640817	PrimaryExpression	0		8640661	1					
ANR	8640818	PrimaryExpression	0		8640661	1					
ANR	8640819	CompoundStatement		29:3:713:713	8640661	1					
ANR	8640820	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ps -> test )"	1037:6:30427:30472	8640661	0	True				
ANR	8640821	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ps -> test )"		8640661	0		=			
ANR	8640822	Identifier	pos		8640661	0					
ANR	8640823	CallExpression	"safecat ( buffer , bufsize , pos , ps -> test )"		8640661	1					
ANR	8640824	Callee	safecat		8640661	0					
ANR	8640825	Identifier	safecat		8640661	0					
ANR	8640826	ArgumentList	buffer		8640661	1					
ANR	8640827	Argument	buffer		8640661	0					
ANR	8640828	Identifier	buffer		8640661	0					
ANR	8640829	Argument	bufsize		8640661	1					
ANR	8640830	Identifier	bufsize		8640661	0					
ANR	8640831	Argument	pos		8640661	2					
ANR	8640832	Identifier	pos		8640661	0					
ANR	8640833	Argument	ps -> test		8640661	3					
ANR	8640834	PtrMemberAccess	ps -> test		8640661	0					
ANR	8640835	Identifier	ps		8640661	0					
ANR	8640836	Identifier	test		8640661	1					
ANR	8640837	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , sep )"	1038:6:30480:30520	8640661	1	True				
ANR	8640838	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , sep )"		8640661	0		=			
ANR	8640839	Identifier	pos		8640661	0					
ANR	8640840	CallExpression	"safecat ( buffer , bufsize , pos , sep )"		8640661	1					
ANR	8640841	Callee	safecat		8640661	0					
ANR	8640842	Identifier	safecat		8640661	0					
ANR	8640843	ArgumentList	buffer		8640661	1					
ANR	8640844	Argument	buffer		8640661	0					
ANR	8640845	Identifier	buffer		8640661	0					
ANR	8640846	Argument	bufsize		8640661	1					
ANR	8640847	Identifier	bufsize		8640661	0					
ANR	8640848	Argument	pos		8640661	2					
ANR	8640849	Identifier	pos		8640661	0					
ANR	8640850	Argument	sep		8640661	3					
ANR	8640851	Identifier	sep		8640661	0					
ANR	8640852	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , msg )"	1040:3:30530:30570	8640661	2	True				
ANR	8640853	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , msg )"		8640661	0		=			
ANR	8640854	Identifier	pos		8640661	0					
ANR	8640855	CallExpression	"safecat ( buffer , bufsize , pos , msg )"		8640661	1					
ANR	8640856	Callee	safecat		8640661	0					
ANR	8640857	Identifier	safecat		8640661	0					
ANR	8640858	ArgumentList	buffer		8640661	1					
ANR	8640859	Argument	buffer		8640661	0					
ANR	8640860	Identifier	buffer		8640661	0					
ANR	8640861	Argument	bufsize		8640661	1					
ANR	8640862	Identifier	bufsize		8640661	0					
ANR	8640863	Argument	pos		8640661	2					
ANR	8640864	Identifier	pos		8640661	0					
ANR	8640865	Argument	msg		8640661	3					
ANR	8640866	Identifier	msg		8640661	0					
ANR	8640867	ReturnStatement	return pos ;	1041:3:30575:30585	8640661	3	True				
ANR	8640868	Identifier	pos		8640661	0					
ANR	8640869	ReturnType	static size_t		8640661	1					
ANR	8640870	Identifier	store_message		8640661	2					
ANR	8640871	ParameterList	"png_store * ps , png_const_structp pp , char * buffer , size_t bufsize , size_t pos , const char * msg"		8640661	3					
ANR	8640872	Parameter	png_store * ps	1006:14:29606:29618	8640661	0	True				
ANR	8640873	ParameterType	png_store *		8640661	0					
ANR	8640874	Identifier	ps		8640661	1					
ANR	8640875	Parameter	png_const_structp pp	1006:29:29621:29640	8640661	1	True				
ANR	8640876	ParameterType	png_const_structp		8640661	0					
ANR	8640877	Identifier	pp		8640661	1					
ANR	8640878	Parameter	char * buffer	1006:51:29643:29654	8640661	2	True				
ANR	8640879	ParameterType	char *		8640661	0					
ANR	8640880	Identifier	buffer		8640661	1					
ANR	8640881	Parameter	size_t bufsize	1006:65:29657:29670	8640661	3	True				
ANR	8640882	ParameterType	size_t		8640661	0					
ANR	8640883	Identifier	bufsize		8640661	1					
ANR	8640884	Parameter	size_t pos	1007:3:29676:29685	8640661	4	True				
ANR	8640885	ParameterType	size_t		8640661	0					
ANR	8640886	Identifier	pos		8640661	1					
ANR	8640887	Parameter	const char * msg	1007:15:29688:29702	8640661	5	True				
ANR	8640888	ParameterType	const char *		8640661	0					
ANR	8640889	Identifier	msg		8640661	1					
ANR	8640890	CFGEntryNode	ENTRY		8640661		True				
ANR	8640891	CFGExitNode	EXIT		8640661		True				
ANR	8640892	Symbol	pp		8640661						
ANR	8640893	Symbol	msg		8640661						
ANR	8640894	Symbol	ps		8640661						
ANR	8640895	Symbol	NULL		8640661						
ANR	8640896	Symbol	ps -> current		8640661						
ANR	8640897	Symbol	* ps -> test		8640661						
ANR	8640898	Symbol	ps -> current -> name		8640661						
ANR	8640899	Symbol	ps -> test		8640661						
ANR	8640900	Symbol	bufsize		8640661						
ANR	8640901	Symbol	* ps		8640661						
ANR	8640902	Symbol	* ps -> current		8640661						
ANR	8640903	Symbol	* * ps		8640661						
ANR	8640904	Symbol	pos		8640661						
ANR	8640905	Symbol	safecat		8640661						
ANR	8640906	Symbol	ps -> pwrite		8640661						
ANR	8640907	Symbol	buffer		8640661						
ANR	8640908	Symbol	ps -> wname		8640661						
ANR	8640909	Symbol	ps -> pread		8640661						
ANR	8640910	Symbol	sep		8640661						
ANR	8640911	Function	store_verbose	1045:0:30632:30933							
ANR	8640912	FunctionDef	"store_verbose (png_store * ps , png_const_structp pp , png_const_charp prefix , png_const_charp message)"		8640911	0					
ANR	8640913	CompoundStatement		1048:0:30747:30933	8640911	0					
ANR	8640914	IdentifierDeclStatement	char buffer [ 512 ] ;	1049:3:30752:30768	8640911	0	True				
ANR	8640915	IdentifierDecl	buffer [ 512 ]		8640911	0					
ANR	8640916	IdentifierDeclType	char [ 512 ]		8640911	0					
ANR	8640917	Identifier	buffer		8640911	1					
ANR	8640918	PrimaryExpression	512		8640911	2					
ANR	8640919	IfStatement	if ( prefix )		8640911	1					
ANR	8640920	Condition	prefix	1051:7:30778:30783	8640911	0	True				
ANR	8640921	Identifier	prefix		8640911	0					
ANR	8640922	ExpressionStatement	"fputs ( prefix , stderr )"	1052:6:30792:30813	8640911	1	True				
ANR	8640923	CallExpression	"fputs ( prefix , stderr )"		8640911	0					
ANR	8640924	Callee	fputs		8640911	0					
ANR	8640925	Identifier	fputs		8640911	0					
ANR	8640926	ArgumentList	prefix		8640911	1					
ANR	8640927	Argument	prefix		8640911	0					
ANR	8640928	Identifier	prefix		8640911	0					
ANR	8640929	Argument	stderr		8640911	1					
ANR	8640930	Identifier	stderr		8640911	0					
ANR	8640931	ExpressionStatement	"( void ) store_message ( ps , pp , buffer , sizeof buffer , 0 , message )"	1054:3:30819:30881	8640911	2	True				
ANR	8640932	CastExpression	"( void ) store_message ( ps , pp , buffer , sizeof buffer , 0 , message )"		8640911	0					
ANR	8640933	CastTarget	void		8640911	0					
ANR	8640934	CallExpression	"store_message ( ps , pp , buffer , sizeof buffer , 0 , message )"		8640911	1					
ANR	8640935	Callee	store_message		8640911	0					
ANR	8640936	Identifier	store_message		8640911	0					
ANR	8640937	ArgumentList	ps		8640911	1					
ANR	8640938	Argument	ps		8640911	0					
ANR	8640939	Identifier	ps		8640911	0					
ANR	8640940	Argument	pp		8640911	1					
ANR	8640941	Identifier	pp		8640911	0					
ANR	8640942	Argument	buffer		8640911	2					
ANR	8640943	Identifier	buffer		8640911	0					
ANR	8640944	Argument	sizeof buffer		8640911	3					
ANR	8640945	SizeofExpression	sizeof buffer		8640911	0					
ANR	8640946	Sizeof	sizeof		8640911	0					
ANR	8640947	Identifier	buffer		8640911	1					
ANR	8640948	Argument	0		8640911	4					
ANR	8640949	PrimaryExpression	0		8640911	0					
ANR	8640950	Argument	message		8640911	5					
ANR	8640951	Identifier	message		8640911	0					
ANR	8640952	ExpressionStatement	"fputs ( buffer , stderr )"	1055:3:30886:30907	8640911	3	True				
ANR	8640953	CallExpression	"fputs ( buffer , stderr )"		8640911	0					
ANR	8640954	Callee	fputs		8640911	0					
ANR	8640955	Identifier	fputs		8640911	0					
ANR	8640956	ArgumentList	buffer		8640911	1					
ANR	8640957	Argument	buffer		8640911	0					
ANR	8640958	Identifier	buffer		8640911	0					
ANR	8640959	Argument	stderr		8640911	1					
ANR	8640960	Identifier	stderr		8640911	0					
ANR	8640961	ExpressionStatement	"fputc ( '\\n' , stderr )"	1056:3:30912:30931	8640911	4	True				
ANR	8640962	CallExpression	"fputc ( '\\n' , stderr )"		8640911	0					
ANR	8640963	Callee	fputc		8640911	0					
ANR	8640964	Identifier	fputc		8640911	0					
ANR	8640965	ArgumentList	'\\n'		8640911	1					
ANR	8640966	Argument	'\\n'		8640911	0					
ANR	8640967	PrimaryExpression	'\\n'		8640911	0					
ANR	8640968	Argument	stderr		8640911	1					
ANR	8640969	Identifier	stderr		8640911	0					
ANR	8640970	ReturnType	static void		8640911	1					
ANR	8640971	Identifier	store_verbose		8640911	2					
ANR	8640972	ParameterList	"png_store * ps , png_const_structp pp , png_const_charp prefix , png_const_charp message"		8640911	3					
ANR	8640973	Parameter	png_store * ps	1046:14:30658:30670	8640911	0	True				
ANR	8640974	ParameterType	png_store *		8640911	0					
ANR	8640975	Identifier	ps		8640911	1					
ANR	8640976	Parameter	png_const_structp pp	1046:29:30673:30692	8640911	1	True				
ANR	8640977	ParameterType	png_const_structp		8640911	0					
ANR	8640978	Identifier	pp		8640911	1					
ANR	8640979	Parameter	png_const_charp prefix	1046:51:30695:30716	8640911	2	True				
ANR	8640980	ParameterType	png_const_charp		8640911	0					
ANR	8640981	Identifier	prefix		8640911	1					
ANR	8640982	Parameter	png_const_charp message	1047:3:30722:30744	8640911	3	True				
ANR	8640983	ParameterType	png_const_charp		8640911	0					
ANR	8640984	Identifier	message		8640911	1					
ANR	8640985	CFGEntryNode	ENTRY		8640911		True				
ANR	8640986	CFGExitNode	EXIT		8640911		True				
ANR	8640987	Symbol	pp		8640911						
ANR	8640988	Symbol	ps		8640911						
ANR	8640989	Symbol	prefix		8640911						
ANR	8640990	Symbol	buffer		8640911						
ANR	8640991	Symbol	message		8640911						
ANR	8640992	Symbol	stderr		8640911						
ANR	8640993	Function	store_log	1060:0:31010:31589							
ANR	8640994	FunctionDef	"store_log (png_store * ps , png_const_structp pp , png_const_charp message , int is_error)"		8640993	0					
ANR	8640995	CompoundStatement		1063:0:31111:31589	8640993	0					
ANR	8640996	IfStatement	if ( is_error ? ( ps -> nerrors ) ++ == 0 : ( ps -> nwarnings ) ++ == 0 && ps -> nerrors == 0 )		8640993	0					
ANR	8640997	Condition	is_error ? ( ps -> nerrors ) ++ == 0 : ( ps -> nwarnings ) ++ == 0 && ps -> nerrors == 0	1068:7:31339:31421	8640993	0	True				
ANR	8640998	ConditionalExpression	is_error ? ( ps -> nerrors ) ++ == 0 : ( ps -> nwarnings ) ++ == 0 && ps -> nerrors == 0		8640993	0					
ANR	8640999	Condition	is_error		8640993	0					
ANR	8641000	Identifier	is_error		8640993	0					
ANR	8641001	EqualityExpression	( ps -> nerrors ) ++ == 0		8640993	1		==			
ANR	8641002	PostIncDecOperationExpression	( ps -> nerrors ) ++		8640993	0					
ANR	8641003	PtrMemberAccess	ps -> nerrors		8640993	0					
ANR	8641004	Identifier	ps		8640993	0					
ANR	8641005	Identifier	nerrors		8640993	1					
ANR	8641006	IncDec	++		8640993	1					
ANR	8641007	PrimaryExpression	0		8640993	1					
ANR	8641008	AndExpression	( ps -> nwarnings ) ++ == 0 && ps -> nerrors == 0		8640993	2		&&			
ANR	8641009	EqualityExpression	( ps -> nwarnings ) ++ == 0		8640993	0		==			
ANR	8641010	PostIncDecOperationExpression	( ps -> nwarnings ) ++		8640993	0					
ANR	8641011	PtrMemberAccess	ps -> nwarnings		8640993	0					
ANR	8641012	Identifier	ps		8640993	0					
ANR	8641013	Identifier	nwarnings		8640993	1					
ANR	8641014	IncDec	++		8640993	1					
ANR	8641015	PrimaryExpression	0		8640993	1					
ANR	8641016	EqualityExpression	ps -> nerrors == 0		8640993	1		==			
ANR	8641017	PtrMemberAccess	ps -> nerrors		8640993	0					
ANR	8641018	Identifier	ps		8640993	0					
ANR	8641019	Identifier	nerrors		8640993	1					
ANR	8641020	PrimaryExpression	0		8640993	1					
ANR	8641021	ExpressionStatement	"store_message ( ps , pp , ps -> error , sizeof ps -> error , 0 , message )"	1070:6:31430:31492	8640993	1	True				
ANR	8641022	CallExpression	"store_message ( ps , pp , ps -> error , sizeof ps -> error , 0 , message )"		8640993	0					
ANR	8641023	Callee	store_message		8640993	0					
ANR	8641024	Identifier	store_message		8640993	0					
ANR	8641025	ArgumentList	ps		8640993	1					
ANR	8641026	Argument	ps		8640993	0					
ANR	8641027	Identifier	ps		8640993	0					
ANR	8641028	Argument	pp		8640993	1					
ANR	8641029	Identifier	pp		8640993	0					
ANR	8641030	Argument	ps -> error		8640993	2					
ANR	8641031	PtrMemberAccess	ps -> error		8640993	0					
ANR	8641032	Identifier	ps		8640993	0					
ANR	8641033	Identifier	error		8640993	1					
ANR	8641034	Argument	sizeof ps -> error		8640993	3					
ANR	8641035	SizeofExpression	sizeof ps -> error		8640993	0					
ANR	8641036	Sizeof	sizeof		8640993	0					
ANR	8641037	PtrMemberAccess	ps -> error		8640993	1					
ANR	8641038	Identifier	ps		8640993	0					
ANR	8641039	Identifier	error		8640993	1					
ANR	8641040	Argument	0		8640993	4					
ANR	8641041	PrimaryExpression	0		8640993	0					
ANR	8641042	Argument	message		8640993	5					
ANR	8641043	Identifier	message		8640993	0					
ANR	8641044	IfStatement	if ( ps -> verbose )		8640993	1					
ANR	8641045	Condition	ps -> verbose	1072:7:31502:31512	8640993	0	True				
ANR	8641046	PtrMemberAccess	ps -> verbose		8640993	0					
ANR	8641047	Identifier	ps		8640993	0					
ANR	8641048	Identifier	verbose		8640993	1					
ANR	8641049	ExpressionStatement	"store_verbose ( ps , pp , is_error ? ""error: "" : ""warning: "" , message )"	1073:6:31521:31587	8640993	1	True				
ANR	8641050	CallExpression	"store_verbose ( ps , pp , is_error ? ""error: "" : ""warning: "" , message )"		8640993	0					
ANR	8641051	Callee	store_verbose		8640993	0					
ANR	8641052	Identifier	store_verbose		8640993	0					
ANR	8641053	ArgumentList	ps		8640993	1					
ANR	8641054	Argument	ps		8640993	0					
ANR	8641055	Identifier	ps		8640993	0					
ANR	8641056	Argument	pp		8640993	1					
ANR	8641057	Identifier	pp		8640993	0					
ANR	8641058	Argument	"is_error ? ""error: "" : ""warning: """		8640993	2					
ANR	8641059	ConditionalExpression	"is_error ? ""error: "" : ""warning: """		8640993	0					
ANR	8641060	Condition	is_error		8640993	0					
ANR	8641061	Identifier	is_error		8640993	0					
ANR	8641062	PrimaryExpression	"""error: """		8640993	1					
ANR	8641063	PrimaryExpression	"""warning: """		8640993	2					
ANR	8641064	Argument	message		8640993	3					
ANR	8641065	Identifier	message		8640993	0					
ANR	8641066	ReturnType	static void		8640993	1					
ANR	8641067	Identifier	store_log		8640993	2					
ANR	8641068	ParameterList	"png_store * ps , png_const_structp pp , png_const_charp message , int is_error"		8640993	3					
ANR	8641069	Parameter	png_store * ps	1061:10:31032:31044	8640993	0	True				
ANR	8641070	ParameterType	png_store *		8640993	0					
ANR	8641071	Identifier	ps		8640993	1					
ANR	8641072	Parameter	png_const_structp pp	1061:25:31047:31066	8640993	1	True				
ANR	8641073	ParameterType	png_const_structp		8640993	0					
ANR	8641074	Identifier	pp		8640993	1					
ANR	8641075	Parameter	png_const_charp message	1061:47:31069:31091	8640993	2	True				
ANR	8641076	ParameterType	png_const_charp		8640993	0					
ANR	8641077	Identifier	message		8640993	1					
ANR	8641078	Parameter	int is_error	1062:3:31097:31108	8640993	3	True				
ANR	8641079	ParameterType	int		8640993	0					
ANR	8641080	Identifier	is_error		8640993	1					
ANR	8641081	CFGEntryNode	ENTRY		8640993		True				
ANR	8641082	CFGExitNode	EXIT		8640993		True				
ANR	8641083	Symbol	pp		8640993						
ANR	8641084	Symbol	ps		8640993						
ANR	8641085	Symbol	ps -> verbose		8640993						
ANR	8641086	Symbol	ps -> nwarnings		8640993						
ANR	8641087	Symbol	ps -> error		8640993						
ANR	8641088	Symbol	is_error		8640993						
ANR	8641089	Symbol	* ps		8640993						
ANR	8641090	Symbol	message		8640993						
ANR	8641091	Symbol	ps -> nerrors		8640993						
ANR	8641092	Function	internal_error	1078:0:31694:31959							
ANR	8641093	FunctionDef	"internal_error (png_store * ps , png_const_charp message)"		8641092	0					
ANR	8641094	CompoundStatement		1080:0:31761:31959	8641092	0					
ANR	8641095	ExpressionStatement	"store_log ( ps , NULL , message , 1 )"	1081:3:31766:31809	8641092	0	True				
ANR	8641096	CallExpression	"store_log ( ps , NULL , message , 1 )"		8641092	0					
ANR	8641097	Callee	store_log		8641092	0					
ANR	8641098	Identifier	store_log		8641092	0					
ANR	8641099	ArgumentList	ps		8641092	1					
ANR	8641100	Argument	ps		8641092	0					
ANR	8641101	Identifier	ps		8641092	0					
ANR	8641102	Argument	NULL		8641092	1					
ANR	8641103	Identifier	NULL		8641092	0					
ANR	8641104	Argument	message		8641092	2					
ANR	8641105	Identifier	message		8641092	0					
ANR	8641106	Argument	1		8641092	3					
ANR	8641107	PrimaryExpression	1		8641092	0					
ANR	8641108	CompoundStatement		7:6:182:190	8641092	1					
ANR	8641109	IdentifierDeclStatement	struct exception_context * the_exception_context = & ps -> exception_context ;	1085:6:31864:31936	8641092	0	True				
ANR	8641110	IdentifierDecl	* the_exception_context = & ps -> exception_context		8641092	0					
ANR	8641111	IdentifierDeclType	struct exception_context *		8641092	0					
ANR	8641112	Identifier	the_exception_context		8641092	1					
ANR	8641113	AssignmentExpression	* the_exception_context = & ps -> exception_context		8641092	2		=			
ANR	8641114	Identifier	the_exception_context		8641092	0					
ANR	8641115	UnaryOperationExpression	& ps -> exception_context		8641092	1					
ANR	8641116	UnaryOperator	&		8641092	0					
ANR	8641117	PtrMemberAccess	ps -> exception_context		8641092	1					
ANR	8641118	Identifier	ps		8641092	0					
ANR	8641119	Identifier	exception_context		8641092	1					
ANR	8641120	IdentifierDeclStatement	Throw ps ;	1086:6:31944:31952	8641092	1	True				
ANR	8641121	IdentifierDecl	ps		8641092	0					
ANR	8641122	IdentifierDeclType	Throw		8641092	0					
ANR	8641123	Identifier	ps		8641092	1					
ANR	8641124	ReturnType	static void		8641092	1					
ANR	8641125	Identifier	internal_error		8641092	2					
ANR	8641126	ParameterList	"png_store * ps , png_const_charp message"		8641092	3					
ANR	8641127	Parameter	png_store * ps	1079:15:31721:31733	8641092	0	True				
ANR	8641128	ParameterType	png_store *		8641092	0					
ANR	8641129	Identifier	ps		8641092	1					
ANR	8641130	Parameter	png_const_charp message	1079:30:31736:31758	8641092	1	True				
ANR	8641131	ParameterType	png_const_charp		8641092	0					
ANR	8641132	Identifier	message		8641092	1					
ANR	8641133	CFGEntryNode	ENTRY		8641092		True				
ANR	8641134	CFGExitNode	EXIT		8641092		True				
ANR	8641135	Symbol	ps		8641092						
ANR	8641136	Symbol	NULL		8641092						
ANR	8641137	Symbol	& ps -> exception_context		8641092						
ANR	8641138	Symbol	message		8641092						
ANR	8641139	Symbol	the_exception_context		8641092						
ANR	8641140	Function	store_error	1092:0:32035:32452							
ANR	8641141	FunctionDef	"store_error (png_structp ppIn , png_const_charp message)"		8641140	0					
ANR	8641142	CompoundStatement		1094:0:32130:32452	8641140	0					
ANR	8641143	IdentifierDeclStatement	png_const_structp pp = ppIn ;	1095:3:32135:32162	8641140	0	True				
ANR	8641144	IdentifierDecl	pp = ppIn		8641140	0					
ANR	8641145	IdentifierDeclType	png_const_structp		8641140	0					
ANR	8641146	Identifier	pp		8641140	1					
ANR	8641147	AssignmentExpression	pp = ppIn		8641140	2		=			
ANR	8641148	Identifier	ppIn		8641140	0					
ANR	8641149	Identifier	ppIn		8641140	1					
ANR	8641150	Statement	png_store	1096:3:32167:32175	8641140	1	True				
ANR	8641151	Statement	*	1096:13:32177:32177	8641140	2	True				
ANR	8641152	Statement	ps	1096:14:32178:32179	8641140	3	True				
ANR	8641153	Statement	=	1096:17:32181:32181	8641140	4	True				
ANR	8641154	Statement	voidcast	1096:19:32183:32190	8641140	5	True				
ANR	8641155	Statement	(	1096:27:32191:32191	8641140	6	True				
ANR	8641156	Statement	png_store	1096:28:32192:32200	8641140	7	True				
ANR	8641157	Statement	*	1096:37:32201:32201	8641140	8	True				
ANR	8641158	Statement	","	1096:38:32202:32202	8641140	9	True				
ANR	8641159	Statement	png_get_error_ptr	1096:40:32204:32220	8641140	10	True				
ANR	8641160	Statement	(	1096:57:32221:32221	8641140	11	True				
ANR	8641161	Statement	pp	1096:58:32222:32223	8641140	12	True				
ANR	8641162	Statement	)	1096:60:32224:32224	8641140	13	True				
ANR	8641163	Statement	)	1096:61:32225:32225	8641140	14	True				
ANR	8641164	ExpressionStatement		1096:62:32226:32226	8641140	15	True				
ANR	8641165	IfStatement	if ( ! ps -> expect_error )		8641140	16					
ANR	8641166	Condition	! ps -> expect_error	1098:7:32236:32252	8641140	0	True				
ANR	8641167	UnaryOperationExpression	! ps -> expect_error		8641140	0					
ANR	8641168	UnaryOperator	!		8641140	0					
ANR	8641169	PtrMemberAccess	ps -> expect_error		8641140	1					
ANR	8641170	Identifier	ps		8641140	0					
ANR	8641171	Identifier	expect_error		8641140	1					
ANR	8641172	ExpressionStatement	"store_log ( ps , pp , message , 1 )"	1099:6:32261:32302	8641140	1	True				
ANR	8641173	CallExpression	"store_log ( ps , pp , message , 1 )"		8641140	0					
ANR	8641174	Callee	store_log		8641140	0					
ANR	8641175	Identifier	store_log		8641140	0					
ANR	8641176	ArgumentList	ps		8641140	1					
ANR	8641177	Argument	ps		8641140	0					
ANR	8641178	Identifier	ps		8641140	0					
ANR	8641179	Argument	pp		8641140	1					
ANR	8641180	Identifier	pp		8641140	0					
ANR	8641181	Argument	message		8641140	2					
ANR	8641182	Identifier	message		8641140	0					
ANR	8641183	Argument	1		8641140	3					
ANR	8641184	PrimaryExpression	1		8641140	0					
ANR	8641185	CompoundStatement		11:6:306:314	8641140	17					
ANR	8641186	IdentifierDeclStatement	struct exception_context * the_exception_context = & ps -> exception_context ;	1103:6:32357:32429	8641140	0	True				
ANR	8641187	IdentifierDecl	* the_exception_context = & ps -> exception_context		8641140	0					
ANR	8641188	IdentifierDeclType	struct exception_context *		8641140	0					
ANR	8641189	Identifier	the_exception_context		8641140	1					
ANR	8641190	AssignmentExpression	* the_exception_context = & ps -> exception_context		8641140	2		=			
ANR	8641191	Identifier	the_exception_context		8641140	0					
ANR	8641192	UnaryOperationExpression	& ps -> exception_context		8641140	1					
ANR	8641193	UnaryOperator	&		8641140	0					
ANR	8641194	PtrMemberAccess	ps -> exception_context		8641140	1					
ANR	8641195	Identifier	ps		8641140	0					
ANR	8641196	Identifier	exception_context		8641140	1					
ANR	8641197	IdentifierDeclStatement	Throw ps ;	1104:6:32437:32445	8641140	1	True				
ANR	8641198	IdentifierDecl	ps		8641140	0					
ANR	8641199	IdentifierDeclType	Throw		8641140	0					
ANR	8641200	Identifier	ps		8641140	1					
ANR	8641201	ReturnType	static void PNGCBAPI		8641140	1					
ANR	8641202	Identifier	store_error		8641140	2					
ANR	8641203	ParameterList	"png_structp ppIn , png_const_charp message"		8641140	3					
ANR	8641204	Parameter	png_structp ppIn	1093:12:32068:32083	8641140	0	True				
ANR	8641205	ParameterType	png_structp		8641140	0					
ANR	8641206	Identifier	ppIn		8641140	1					
ANR	8641207	Parameter	png_const_charp message	1093:30:32086:32108	8641140	1	True				
ANR	8641208	ParameterType	png_const_charp		8641140	0					
ANR	8641209	Identifier	message		8641140	1					
ANR	8641210	CFGEntryNode	ENTRY		8641140		True				
ANR	8641211	CFGExitNode	EXIT		8641140		True				
ANR	8641212	Symbol	pp		8641140						
ANR	8641213	Symbol	ppIn		8641140						
ANR	8641214	Symbol	ps		8641140						
ANR	8641215	Symbol	* ps		8641140						
ANR	8641216	Symbol	& ps -> exception_context		8641140						
ANR	8641217	Symbol	message		8641140						
ANR	8641218	Symbol	ps -> expect_error		8641140						
ANR	8641219	Symbol	the_exception_context		8641140						
ANR	8641220	Function	store_warning	1108:0:32455:32746							
ANR	8641221	FunctionDef	"store_warning (png_structp ppIn , png_const_charp message)"		8641220	0					
ANR	8641222	CompoundStatement		1110:0:32533:32746	8641220	0					
ANR	8641223	IdentifierDeclStatement	png_const_structp pp = ppIn ;	1111:3:32538:32565	8641220	0	True				
ANR	8641224	IdentifierDecl	pp = ppIn		8641220	0					
ANR	8641225	IdentifierDeclType	png_const_structp		8641220	0					
ANR	8641226	Identifier	pp		8641220	1					
ANR	8641227	AssignmentExpression	pp = ppIn		8641220	2		=			
ANR	8641228	Identifier	ppIn		8641220	0					
ANR	8641229	Identifier	ppIn		8641220	1					
ANR	8641230	Statement	png_store	1112:3:32570:32578	8641220	1	True				
ANR	8641231	Statement	*	1112:13:32580:32580	8641220	2	True				
ANR	8641232	Statement	ps	1112:14:32581:32582	8641220	3	True				
ANR	8641233	Statement	=	1112:17:32584:32584	8641220	4	True				
ANR	8641234	Statement	voidcast	1112:19:32586:32593	8641220	5	True				
ANR	8641235	Statement	(	1112:27:32594:32594	8641220	6	True				
ANR	8641236	Statement	png_store	1112:28:32595:32603	8641220	7	True				
ANR	8641237	Statement	*	1112:37:32604:32604	8641220	8	True				
ANR	8641238	Statement	","	1112:38:32605:32605	8641220	9	True				
ANR	8641239	Statement	png_get_error_ptr	1112:40:32607:32623	8641220	10	True				
ANR	8641240	Statement	(	1112:57:32624:32624	8641220	11	True				
ANR	8641241	Statement	pp	1112:58:32625:32626	8641220	12	True				
ANR	8641242	Statement	)	1112:60:32627:32627	8641220	13	True				
ANR	8641243	Statement	)	1112:61:32628:32628	8641220	14	True				
ANR	8641244	ExpressionStatement		1112:62:32629:32629	8641220	15	True				
ANR	8641245	IfStatement	if ( ! ps -> expect_warning )		8641220	16					
ANR	8641246	Condition	! ps -> expect_warning	1114:7:32639:32657	8641220	0	True				
ANR	8641247	UnaryOperationExpression	! ps -> expect_warning		8641220	0					
ANR	8641248	UnaryOperator	!		8641220	0					
ANR	8641249	PtrMemberAccess	ps -> expect_warning		8641220	1					
ANR	8641250	Identifier	ps		8641220	0					
ANR	8641251	Identifier	expect_warning		8641220	1					
ANR	8641252	ExpressionStatement	"store_log ( ps , pp , message , 0 )"	1115:6:32666:32709	8641220	1	True				
ANR	8641253	CallExpression	"store_log ( ps , pp , message , 0 )"		8641220	0					
ANR	8641254	Callee	store_log		8641220	0					
ANR	8641255	Identifier	store_log		8641220	0					
ANR	8641256	ArgumentList	ps		8641220	1					
ANR	8641257	Argument	ps		8641220	0					
ANR	8641258	Identifier	ps		8641220	0					
ANR	8641259	Argument	pp		8641220	1					
ANR	8641260	Identifier	pp		8641220	0					
ANR	8641261	Argument	message		8641220	2					
ANR	8641262	Identifier	message		8641220	0					
ANR	8641263	Argument	0		8641220	3					
ANR	8641264	PrimaryExpression	0		8641220	0					
ANR	8641265	ElseStatement	else		8641220	0					
ANR	8641266	ExpressionStatement	ps -> saw_warning = 1	1117:6:32725:32744	8641220	0	True				
ANR	8641267	AssignmentExpression	ps -> saw_warning = 1		8641220	0		=			
ANR	8641268	PtrMemberAccess	ps -> saw_warning		8641220	0					
ANR	8641269	Identifier	ps		8641220	0					
ANR	8641270	Identifier	saw_warning		8641220	1					
ANR	8641271	PrimaryExpression	1		8641220	1					
ANR	8641272	ReturnType	static void PNGCBAPI		8641220	1					
ANR	8641273	Identifier	store_warning		8641220	2					
ANR	8641274	ParameterList	"png_structp ppIn , png_const_charp message"		8641220	3					
ANR	8641275	Parameter	png_structp ppIn	1109:14:32490:32505	8641220	0	True				
ANR	8641276	ParameterType	png_structp		8641220	0					
ANR	8641277	Identifier	ppIn		8641220	1					
ANR	8641278	Parameter	png_const_charp message	1109:32:32508:32530	8641220	1	True				
ANR	8641279	ParameterType	png_const_charp		8641220	0					
ANR	8641280	Identifier	message		8641220	1					
ANR	8641281	CFGEntryNode	ENTRY		8641220		True				
ANR	8641282	CFGExitNode	EXIT		8641220		True				
ANR	8641283	Symbol	pp		8641220						
ANR	8641284	Symbol	ppIn		8641220						
ANR	8641285	Symbol	ps -> saw_warning		8641220						
ANR	8641286	Symbol	ps		8641220						
ANR	8641287	Symbol	ps -> expect_warning		8641220						
ANR	8641288	Symbol	* ps		8641220						
ANR	8641289	Symbol	message		8641220						
ANR	8641290	Function	store_image_row	1124:0:32941:33315							
ANR	8641291	FunctionDef	"store_image_row (const png_store * ps , png_const_structp pp , int nImage , png_uint_32 y)"		8641290	0					
ANR	8641292	CompoundStatement		1127:0:33047:33315	8641290	0					
ANR	8641293	IdentifierDeclStatement	png_size_t coffset = ( nImage * ps -> image_h + y ) * ( ps -> cb_row + 5 ) + 2 ;	1128:3:33052:33122	8641290	0	True				
ANR	8641294	IdentifierDecl	coffset = ( nImage * ps -> image_h + y ) * ( ps -> cb_row + 5 ) + 2		8641290	0					
ANR	8641295	IdentifierDeclType	png_size_t		8641290	0					
ANR	8641296	Identifier	coffset		8641290	1					
ANR	8641297	AssignmentExpression	coffset = ( nImage * ps -> image_h + y ) * ( ps -> cb_row + 5 ) + 2		8641290	2		=			
ANR	8641298	Identifier	coffset		8641290	0					
ANR	8641299	AdditiveExpression	( nImage * ps -> image_h + y ) * ( ps -> cb_row + 5 ) + 2		8641290	1		+			
ANR	8641300	MultiplicativeExpression	( nImage * ps -> image_h + y ) * ( ps -> cb_row + 5 )		8641290	0		*			
ANR	8641301	AdditiveExpression	nImage * ps -> image_h + y		8641290	0		+			
ANR	8641302	MultiplicativeExpression	nImage * ps -> image_h		8641290	0		*			
ANR	8641303	Identifier	nImage		8641290	0					
ANR	8641304	PtrMemberAccess	ps -> image_h		8641290	1					
ANR	8641305	Identifier	ps		8641290	0					
ANR	8641306	Identifier	image_h		8641290	1					
ANR	8641307	Identifier	y		8641290	1					
ANR	8641308	AdditiveExpression	ps -> cb_row + 5		8641290	1		+			
ANR	8641309	PtrMemberAccess	ps -> cb_row		8641290	0					
ANR	8641310	Identifier	ps		8641290	0					
ANR	8641311	Identifier	cb_row		8641290	1					
ANR	8641312	PrimaryExpression	5		8641290	1					
ANR	8641313	PrimaryExpression	2		8641290	1					
ANR	8641314	IfStatement	if ( ps -> image == NULL )		8641290	1					
ANR	8641315	Condition	ps -> image == NULL	1130:7:33132:33148	8641290	0	True				
ANR	8641316	EqualityExpression	ps -> image == NULL		8641290	0		==			
ANR	8641317	PtrMemberAccess	ps -> image		8641290	0					
ANR	8641318	Identifier	ps		8641290	0					
ANR	8641319	Identifier	image		8641290	1					
ANR	8641320	Identifier	NULL		8641290	1					
ANR	8641321	ExpressionStatement	"png_error ( pp , ""no allocated image"" )"	1131:6:33157:33192	8641290	1	True				
ANR	8641322	CallExpression	"png_error ( pp , ""no allocated image"" )"		8641290	0					
ANR	8641323	Callee	png_error		8641290	0					
ANR	8641324	Identifier	png_error		8641290	0					
ANR	8641325	ArgumentList	pp		8641290	1					
ANR	8641326	Argument	pp		8641290	0					
ANR	8641327	Identifier	pp		8641290	0					
ANR	8641328	Argument	"""no allocated image"""		8641290	1					
ANR	8641329	PrimaryExpression	"""no allocated image"""		8641290	0					
ANR	8641330	IfStatement	if ( coffset + ps -> cb_row + 3 > ps -> cb_image )		8641290	2					
ANR	8641331	Condition	coffset + ps -> cb_row + 3 > ps -> cb_image	1133:7:33202:33240	8641290	0	True				
ANR	8641332	RelationalExpression	coffset + ps -> cb_row + 3 > ps -> cb_image		8641290	0		>			
ANR	8641333	AdditiveExpression	coffset + ps -> cb_row + 3		8641290	0		+			
ANR	8641334	Identifier	coffset		8641290	0					
ANR	8641335	AdditiveExpression	ps -> cb_row + 3		8641290	1		+			
ANR	8641336	PtrMemberAccess	ps -> cb_row		8641290	0					
ANR	8641337	Identifier	ps		8641290	0					
ANR	8641338	Identifier	cb_row		8641290	1					
ANR	8641339	PrimaryExpression	3		8641290	1					
ANR	8641340	PtrMemberAccess	ps -> cb_image		8641290	1					
ANR	8641341	Identifier	ps		8641290	0					
ANR	8641342	Identifier	cb_image		8641290	1					
ANR	8641343	ExpressionStatement	"png_error ( pp , ""image too small"" )"	1134:6:33249:33281	8641290	1	True				
ANR	8641344	CallExpression	"png_error ( pp , ""image too small"" )"		8641290	0					
ANR	8641345	Callee	png_error		8641290	0					
ANR	8641346	Identifier	png_error		8641290	0					
ANR	8641347	ArgumentList	pp		8641290	1					
ANR	8641348	Argument	pp		8641290	0					
ANR	8641349	Identifier	pp		8641290	0					
ANR	8641350	Argument	"""image too small"""		8641290	1					
ANR	8641351	PrimaryExpression	"""image too small"""		8641290	0					
ANR	8641352	ReturnStatement	return ps -> image + coffset ;	1136:3:33287:33313	8641290	3	True				
ANR	8641353	AdditiveExpression	ps -> image + coffset		8641290	0		+			
ANR	8641354	PtrMemberAccess	ps -> image		8641290	0					
ANR	8641355	Identifier	ps		8641290	0					
ANR	8641356	Identifier	image		8641290	1					
ANR	8641357	Identifier	coffset		8641290	1					
ANR	8641358	ReturnType	static png_bytep		8641290	1					
ANR	8641359	Identifier	store_image_row		8641290	2					
ANR	8641360	ParameterList	"const png_store * ps , png_const_structp pp , int nImage , png_uint_32 y"		8641290	3					
ANR	8641361	Parameter	const png_store * ps	1125:16:32974:32992	8641290	0	True				
ANR	8641362	ParameterType	const png_store *		8641290	0					
ANR	8641363	Identifier	ps		8641290	1					
ANR	8641364	Parameter	png_const_structp pp	1125:37:32995:33014	8641290	1	True				
ANR	8641365	ParameterType	png_const_structp		8641290	0					
ANR	8641366	Identifier	pp		8641290	1					
ANR	8641367	Parameter	int nImage	1125:59:33017:33026	8641290	2	True				
ANR	8641368	ParameterType	int		8641290	0					
ANR	8641369	Identifier	nImage		8641290	1					
ANR	8641370	Parameter	png_uint_32 y	1126:3:33032:33044	8641290	3	True				
ANR	8641371	ParameterType	png_uint_32		8641290	0					
ANR	8641372	Identifier	y		8641290	1					
ANR	8641373	CFGEntryNode	ENTRY		8641290		True				
ANR	8641374	CFGExitNode	EXIT		8641290		True				
ANR	8641375	Symbol	pp		8641290						
ANR	8641376	Symbol	ps -> cb_row		8641290						
ANR	8641377	Symbol	nImage		8641290						
ANR	8641378	Symbol	ps		8641290						
ANR	8641379	Symbol	NULL		8641290						
ANR	8641380	Symbol	coffset		8641290						
ANR	8641381	Symbol	y		8641290						
ANR	8641382	Symbol	* ps		8641290						
ANR	8641383	Symbol	ps -> cb_image		8641290						
ANR	8641384	Symbol	ps -> image_h		8641290						
ANR	8641385	Symbol	ps -> image		8641290						
ANR	8641386	Function	store_image_free	1139:0:33318:33785							
ANR	8641387	FunctionDef	"store_image_free (png_store * ps , png_const_structp pp)"		8641386	0					
ANR	8641388	CompoundStatement		1141:0:33384:33785	8641386	0					
ANR	8641389	IfStatement	if ( ps -> image != NULL )		8641386	0					
ANR	8641390	Condition	ps -> image != NULL	1142:7:33393:33409	8641386	0	True				
ANR	8641391	EqualityExpression	ps -> image != NULL		8641386	0		!=			
ANR	8641392	PtrMemberAccess	ps -> image		8641386	0					
ANR	8641393	Identifier	ps		8641386	0					
ANR	8641394	Identifier	image		8641386	1					
ANR	8641395	Identifier	NULL		8641386	1					
ANR	8641396	CompoundStatement		4:6:38:65	8641386	1					
ANR	8641397	IdentifierDeclStatement	png_bytep image = ps -> image ;	1144:6:33423:33450	8641386	0	True				
ANR	8641398	IdentifierDecl	image = ps -> image		8641386	0					
ANR	8641399	IdentifierDeclType	png_bytep		8641386	0					
ANR	8641400	Identifier	image		8641386	1					
ANR	8641401	AssignmentExpression	image = ps -> image		8641386	2		=			
ANR	8641402	Identifier	image		8641386	0					
ANR	8641403	PtrMemberAccess	ps -> image		8641386	1					
ANR	8641404	Identifier	ps		8641386	0					
ANR	8641405	Identifier	image		8641386	1					
ANR	8641406	IfStatement	if ( image [ - 1 ] != 0xed || image [ ps -> cb_image ] != 0xfe )		8641386	1					
ANR	8641407	Condition	image [ - 1 ] != 0xed || image [ ps -> cb_image ] != 0xfe	1146:10:33463:33510	8641386	0	True				
ANR	8641408	OrExpression	image [ - 1 ] != 0xed || image [ ps -> cb_image ] != 0xfe		8641386	0		||			
ANR	8641409	EqualityExpression	image [ - 1 ] != 0xed		8641386	0		!=			
ANR	8641410	ArrayIndexing	image [ - 1 ]		8641386	0					
ANR	8641411	Identifier	image		8641386	0					
ANR	8641412	UnaryOperationExpression	- 1		8641386	1					
ANR	8641413	UnaryOperator	-		8641386	0					
ANR	8641414	PrimaryExpression	1		8641386	1					
ANR	8641415	PrimaryExpression	0xed		8641386	1					
ANR	8641416	EqualityExpression	image [ ps -> cb_image ] != 0xfe		8641386	1		!=			
ANR	8641417	ArrayIndexing	image [ ps -> cb_image ]		8641386	0					
ANR	8641418	Identifier	image		8641386	0					
ANR	8641419	PtrMemberAccess	ps -> cb_image		8641386	1					
ANR	8641420	Identifier	ps		8641386	0					
ANR	8641421	Identifier	cb_image		8641386	1					
ANR	8641422	PrimaryExpression	0xfe		8641386	1					
ANR	8641423	CompoundStatement		7:6:134:134	8641386	1					
ANR	8641424	IfStatement	if ( pp != NULL )		8641386	0					
ANR	8641425	Condition	pp != NULL	1148:13:33534:33543	8641386	0	True				
ANR	8641426	EqualityExpression	pp != NULL		8641386	0		!=			
ANR	8641427	Identifier	pp		8641386	0					
ANR	8641428	Identifier	NULL		8641386	1					
ANR	8641429	ExpressionStatement	"png_error ( pp , ""png_store image overwrite (1)"" )"	1149:12:33558:33604	8641386	1	True				
ANR	8641430	CallExpression	"png_error ( pp , ""png_store image overwrite (1)"" )"		8641386	0					
ANR	8641431	Callee	png_error		8641386	0					
ANR	8641432	Identifier	png_error		8641386	0					
ANR	8641433	ArgumentList	pp		8641386	1					
ANR	8641434	Argument	pp		8641386	0					
ANR	8641435	Identifier	pp		8641386	0					
ANR	8641436	Argument	"""png_store image overwrite (1)"""		8641386	1					
ANR	8641437	PrimaryExpression	"""png_store image overwrite (1)"""		8641386	0					
ANR	8641438	ElseStatement	else		8641386	0					
ANR	8641439	ExpressionStatement	"store_log ( ps , NULL , ""png_store image overwrite (2)"" , 1 )"	1151:12:33632:33687	8641386	0	True				
ANR	8641440	CallExpression	"store_log ( ps , NULL , ""png_store image overwrite (2)"" , 1 )"		8641386	0					
ANR	8641441	Callee	store_log		8641386	0					
ANR	8641442	Identifier	store_log		8641386	0					
ANR	8641443	ArgumentList	ps		8641386	1					
ANR	8641444	Argument	ps		8641386	0					
ANR	8641445	Identifier	ps		8641386	0					
ANR	8641446	Argument	NULL		8641386	1					
ANR	8641447	Identifier	NULL		8641386	0					
ANR	8641448	Argument	"""png_store image overwrite (2)"""		8641386	2					
ANR	8641449	PrimaryExpression	"""png_store image overwrite (2)"""		8641386	0					
ANR	8641450	Argument	1		8641386	3					
ANR	8641451	PrimaryExpression	1		8641386	0					
ANR	8641452	ExpressionStatement	ps -> image = NULL	1154:6:33704:33720	8641386	2	True				
ANR	8641453	AssignmentExpression	ps -> image = NULL		8641386	0		=			
ANR	8641454	PtrMemberAccess	ps -> image		8641386	0					
ANR	8641455	Identifier	ps		8641386	0					
ANR	8641456	Identifier	image		8641386	1					
ANR	8641457	Identifier	NULL		8641386	1					
ANR	8641458	ExpressionStatement	ps -> cb_image = 0	1155:6:33728:33744	8641386	3	True				
ANR	8641459	AssignmentExpression	ps -> cb_image = 0		8641386	0		=			
ANR	8641460	PtrMemberAccess	ps -> cb_image		8641386	0					
ANR	8641461	Identifier	ps		8641386	0					
ANR	8641462	Identifier	cb_image		8641386	1					
ANR	8641463	PrimaryExpression	0		8641386	1					
ANR	8641464	ExpressionStatement	-- image	1156:6:33752:33759	8641386	4	True				
ANR	8641465	UnaryExpression	-- image		8641386	0					
ANR	8641466	IncDec	--		8641386	0					
ANR	8641467	Identifier	image		8641386	1					
ANR	8641468	ExpressionStatement	free ( image )	1157:6:33767:33778	8641386	5	True				
ANR	8641469	CallExpression	free ( image )		8641386	0					
ANR	8641470	Callee	free		8641386	0					
ANR	8641471	Identifier	free		8641386	0					
ANR	8641472	ArgumentList	image		8641386	1					
ANR	8641473	Argument	image		8641386	0					
ANR	8641474	Identifier	image		8641386	0					
ANR	8641475	ReturnType	static void		8641386	1					
ANR	8641476	Identifier	store_image_free		8641386	2					
ANR	8641477	ParameterList	"png_store * ps , png_const_structp pp"		8641386	3					
ANR	8641478	Parameter	png_store * ps	1140:17:33347:33359	8641386	0	True				
ANR	8641479	ParameterType	png_store *		8641386	0					
ANR	8641480	Identifier	ps		8641386	1					
ANR	8641481	Parameter	png_const_structp pp	1140:32:33362:33381	8641386	1	True				
ANR	8641482	ParameterType	png_const_structp		8641386	0					
ANR	8641483	Identifier	pp		8641386	1					
ANR	8641484	CFGEntryNode	ENTRY		8641386		True				
ANR	8641485	CFGExitNode	EXIT		8641386		True				
ANR	8641486	Symbol	pp		8641386						
ANR	8641487	Symbol	image		8641386						
ANR	8641488	Symbol	ps		8641386						
ANR	8641489	Symbol	NULL		8641386						
ANR	8641490	Symbol	* ps		8641386						
ANR	8641491	Symbol	ps -> cb_image		8641386						
ANR	8641492	Symbol	* * ps		8641386						
ANR	8641493	Symbol	* image		8641386						
ANR	8641494	Symbol	* ps -> cb_image		8641386						
ANR	8641495	Symbol	ps -> image		8641386						
ANR	8641496	Function	store_ensure_image	1161:0:33788:35605							
ANR	8641497	FunctionDef	"store_ensure_image (png_store * ps , png_const_structp pp , int nImages , png_size_t cbRow , png_uint_32 cRows)"		8641496	0					
ANR	8641498	CompoundStatement		1164:0:33909:35605	8641496	0					
ANR	8641499	IdentifierDeclStatement	png_size_t cb = nImages * cRows * ( cbRow + 5 ) ;	1165:3:33914:33959	8641496	0	True				
ANR	8641500	IdentifierDecl	cb = nImages * cRows * ( cbRow + 5 )		8641496	0					
ANR	8641501	IdentifierDeclType	png_size_t		8641496	0					
ANR	8641502	Identifier	cb		8641496	1					
ANR	8641503	AssignmentExpression	cb = nImages * cRows * ( cbRow + 5 )		8641496	2		=			
ANR	8641504	Identifier	cb		8641496	0					
ANR	8641505	MultiplicativeExpression	nImages * cRows * ( cbRow + 5 )		8641496	1		*			
ANR	8641506	Identifier	nImages		8641496	0					
ANR	8641507	MultiplicativeExpression	cRows * ( cbRow + 5 )		8641496	1		*			
ANR	8641508	Identifier	cRows		8641496	0					
ANR	8641509	AdditiveExpression	cbRow + 5		8641496	1		+			
ANR	8641510	Identifier	cbRow		8641496	0					
ANR	8641511	PrimaryExpression	5		8641496	1					
ANR	8641512	IfStatement	if ( ps -> cb_image < cb )		8641496	1					
ANR	8641513	Condition	ps -> cb_image < cb	1167:7:33969:33985	8641496	0	True				
ANR	8641514	RelationalExpression	ps -> cb_image < cb		8641496	0		<			
ANR	8641515	PtrMemberAccess	ps -> cb_image		8641496	0					
ANR	8641516	Identifier	ps		8641496	0					
ANR	8641517	Identifier	cb_image		8641496	1					
ANR	8641518	Identifier	cb		8641496	1					
ANR	8641519	CompoundStatement		6:6:89:104	8641496	1					
ANR	8641520	IdentifierDeclStatement	png_bytep image ;	1169:6:33999:34014	8641496	0	True				
ANR	8641521	IdentifierDecl	image		8641496	0					
ANR	8641522	IdentifierDeclType	png_bytep		8641496	0					
ANR	8641523	Identifier	image		8641496	1					
ANR	8641524	ExpressionStatement	"store_image_free ( ps , pp )"	1171:6:34023:34047	8641496	1	True				
ANR	8641525	CallExpression	"store_image_free ( ps , pp )"		8641496	0					
ANR	8641526	Callee	store_image_free		8641496	0					
ANR	8641527	Identifier	store_image_free		8641496	0					
ANR	8641528	ArgumentList	ps		8641496	1					
ANR	8641529	Argument	ps		8641496	0					
ANR	8641530	Identifier	ps		8641496	0					
ANR	8641531	Argument	pp		8641496	1					
ANR	8641532	Identifier	pp		8641496	0					
ANR	8641533	ExpressionStatement	"image = voidcast ( png_bytep , malloc ( cb + 2 ) )"	1174:6:34108:34149	8641496	2	True				
ANR	8641534	AssignmentExpression	"image = voidcast ( png_bytep , malloc ( cb + 2 ) )"		8641496	0		=			
ANR	8641535	Identifier	image		8641496	0					
ANR	8641536	CallExpression	"voidcast ( png_bytep , malloc ( cb + 2 ) )"		8641496	1					
ANR	8641537	Callee	voidcast		8641496	0					
ANR	8641538	Identifier	voidcast		8641496	0					
ANR	8641539	ArgumentList	png_bytep		8641496	1					
ANR	8641540	Argument	png_bytep		8641496	0					
ANR	8641541	Identifier	png_bytep		8641496	0					
ANR	8641542	Argument	malloc ( cb + 2 )		8641496	1					
ANR	8641543	CallExpression	malloc ( cb + 2 )		8641496	0					
ANR	8641544	Callee	malloc		8641496	0					
ANR	8641545	Identifier	malloc		8641496	0					
ANR	8641546	ArgumentList	cb + 2		8641496	1					
ANR	8641547	Argument	cb + 2		8641496	0					
ANR	8641548	AdditiveExpression	cb + 2		8641496	0		+			
ANR	8641549	Identifier	cb		8641496	0					
ANR	8641550	PrimaryExpression	2		8641496	1					
ANR	8641551	IfStatement	if ( image == NULL )		8641496	3					
ANR	8641552	Condition	image == NULL	1175:10:34161:34173	8641496	0	True				
ANR	8641553	EqualityExpression	image == NULL		8641496	0		==			
ANR	8641554	Identifier	image		8641496	0					
ANR	8641555	Identifier	NULL		8641496	1					
ANR	8641556	CompoundStatement		13:6:272:272	8641496	1					
ANR	8641557	IfStatement	if ( pp == NULL )		8641496	0					
ANR	8641558	Condition	pp == NULL	1178:13:34271:34280	8641496	0	True				
ANR	8641559	EqualityExpression	pp == NULL		8641496	0		==			
ANR	8641560	Identifier	pp		8641496	0					
ANR	8641561	Identifier	NULL		8641496	1					
ANR	8641562	ReturnStatement	return ;	1179:12:34295:34301	8641496	1	True				
ANR	8641563	ExpressionStatement	"png_error ( pp , ""OOM allocating image buffer"" )"	1181:9:34313:34357	8641496	1	True				
ANR	8641564	CallExpression	"png_error ( pp , ""OOM allocating image buffer"" )"		8641496	0					
ANR	8641565	Callee	png_error		8641496	0					
ANR	8641566	Identifier	png_error		8641496	0					
ANR	8641567	ArgumentList	pp		8641496	1					
ANR	8641568	Argument	pp		8641496	0					
ANR	8641569	Identifier	pp		8641496	0					
ANR	8641570	Argument	"""OOM allocating image buffer"""		8641496	1					
ANR	8641571	PrimaryExpression	"""OOM allocating image buffer"""		8641496	0					
ANR	8641572	ExpressionStatement	++ image	1185:6:34440:34447	8641496	4	True				
ANR	8641573	UnaryExpression	++ image		8641496	0					
ANR	8641574	IncDec	++		8641496	0					
ANR	8641575	Identifier	image		8641496	1					
ANR	8641576	ExpressionStatement	image [ - 1 ] = 0xed	1186:6:34455:34471	8641496	5	True				
ANR	8641577	AssignmentExpression	image [ - 1 ] = 0xed		8641496	0		=			
ANR	8641578	ArrayIndexing	image [ - 1 ]		8641496	0					
ANR	8641579	Identifier	image		8641496	0					
ANR	8641580	UnaryOperationExpression	- 1		8641496	1					
ANR	8641581	UnaryOperator	-		8641496	0					
ANR	8641582	PrimaryExpression	1		8641496	1					
ANR	8641583	PrimaryExpression	0xed		8641496	1					
ANR	8641584	ExpressionStatement	image [ cb ] = 0xfe	1187:6:34479:34495	8641496	6	True				
ANR	8641585	AssignmentExpression	image [ cb ] = 0xfe		8641496	0		=			
ANR	8641586	ArrayIndexing	image [ cb ]		8641496	0					
ANR	8641587	Identifier	image		8641496	0					
ANR	8641588	Identifier	cb		8641496	1					
ANR	8641589	PrimaryExpression	0xfe		8641496	1					
ANR	8641590	ExpressionStatement	ps -> image = image	1189:6:34504:34521	8641496	7	True				
ANR	8641591	AssignmentExpression	ps -> image = image		8641496	0		=			
ANR	8641592	PtrMemberAccess	ps -> image		8641496	0					
ANR	8641593	Identifier	ps		8641496	0					
ANR	8641594	Identifier	image		8641496	1					
ANR	8641595	Identifier	image		8641496	1					
ANR	8641596	ExpressionStatement	ps -> cb_image = cb	1190:6:34529:34546	8641496	8	True				
ANR	8641597	AssignmentExpression	ps -> cb_image = cb		8641496	0		=			
ANR	8641598	PtrMemberAccess	ps -> cb_image		8641496	0					
ANR	8641599	Identifier	ps		8641496	0					
ANR	8641600	Identifier	cb_image		8641496	1					
ANR	8641601	Identifier	cb		8641496	1					
ANR	8641602	ExpressionStatement	ps -> cb_row = cbRow	1197:3:34796:34814	8641496	2	True				
ANR	8641603	AssignmentExpression	ps -> cb_row = cbRow		8641496	0		=			
ANR	8641604	PtrMemberAccess	ps -> cb_row		8641496	0					
ANR	8641605	Identifier	ps		8641496	0					
ANR	8641606	Identifier	cb_row		8641496	1					
ANR	8641607	Identifier	cbRow		8641496	1					
ANR	8641608	ExpressionStatement	ps -> image_h = cRows	1198:3:34819:34838	8641496	3	True				
ANR	8641609	AssignmentExpression	ps -> image_h = cRows		8641496	0		=			
ANR	8641610	PtrMemberAccess	ps -> image_h		8641496	0					
ANR	8641611	Identifier	ps		8641496	0					
ANR	8641612	Identifier	image_h		8641496	1					
ANR	8641613	Identifier	cRows		8641496	1					
ANR	8641614	ExpressionStatement	"memset ( ps -> image , 178 , cb )"	1206:3:35217:35243	8641496	4	True				
ANR	8641615	CallExpression	"memset ( ps -> image , 178 , cb )"		8641496	0					
ANR	8641616	Callee	memset		8641496	0					
ANR	8641617	Identifier	memset		8641496	0					
ANR	8641618	ArgumentList	ps -> image		8641496	1					
ANR	8641619	Argument	ps -> image		8641496	0					
ANR	8641620	PtrMemberAccess	ps -> image		8641496	0					
ANR	8641621	Identifier	ps		8641496	0					
ANR	8641622	Identifier	image		8641496	1					
ANR	8641623	Argument	178		8641496	1					
ANR	8641624	PrimaryExpression	178		8641496	0					
ANR	8641625	Argument	cb		8641496	2					
ANR	8641626	Identifier	cb		8641496	0					
ANR	8641627	WhileStatement	while ( -- nImages >= 0 )		8641496	5					
ANR	8641628	Condition	-- nImages >= 0	1209:10:35288:35301	8641496	0	True				
ANR	8641629	RelationalExpression	-- nImages >= 0		8641496	0		>=			
ANR	8641630	UnaryExpression	-- nImages		8641496	0					
ANR	8641631	IncDec	--		8641496	0					
ANR	8641632	Identifier	nImages		8641496	1					
ANR	8641633	PrimaryExpression	0		8641496	1					
ANR	8641634	CompoundStatement		48:6:1405:1418	8641496	1					
ANR	8641635	IdentifierDeclStatement	png_uint_32 y ;	1211:6:35315:35328	8641496	0	True				
ANR	8641636	IdentifierDecl	y		8641496	0					
ANR	8641637	IdentifierDeclType	png_uint_32		8641496	0					
ANR	8641638	Identifier	y		8641496	1					
ANR	8641639	ForStatement	for ( y = 0 ; y < cRows ; ++ y )		8641496	1					
ANR	8641640	ForInit	y = 0 ;	1213:11:35342:35345	8641496	0	True				
ANR	8641641	AssignmentExpression	y = 0		8641496	0		=			
ANR	8641642	Identifier	y		8641496	0					
ANR	8641643	PrimaryExpression	0		8641496	1					
ANR	8641644	Condition	y < cRows	1213:16:35347:35353	8641496	1	True				
ANR	8641645	RelationalExpression	y < cRows		8641496	0		<			
ANR	8641646	Identifier	y		8641496	0					
ANR	8641647	Identifier	cRows		8641496	1					
ANR	8641648	UnaryExpression	++ y	1213:25:35356:35358	8641496	2	True				
ANR	8641649	IncDec	++		8641496	0					
ANR	8641650	Identifier	y		8641496	1					
ANR	8641651	CompoundStatement		52:9:1468:1519	8641496	3					
ANR	8641652	IdentifierDeclStatement	"png_bytep row = store_image_row ( ps , pp , nImages , y ) ;"	1215:9:35378:35429	8641496	0	True				
ANR	8641653	IdentifierDecl	"row = store_image_row ( ps , pp , nImages , y )"		8641496	0					
ANR	8641654	IdentifierDeclType	png_bytep		8641496	0					
ANR	8641655	Identifier	row		8641496	1					
ANR	8641656	AssignmentExpression	"row = store_image_row ( ps , pp , nImages , y )"		8641496	2		=			
ANR	8641657	Identifier	row		8641496	0					
ANR	8641658	CallExpression	"store_image_row ( ps , pp , nImages , y )"		8641496	1					
ANR	8641659	Callee	store_image_row		8641496	0					
ANR	8641660	Identifier	store_image_row		8641496	0					
ANR	8641661	ArgumentList	ps		8641496	1					
ANR	8641662	Argument	ps		8641496	0					
ANR	8641663	Identifier	ps		8641496	0					
ANR	8641664	Argument	pp		8641496	1					
ANR	8641665	Identifier	pp		8641496	0					
ANR	8641666	Argument	nImages		8641496	2					
ANR	8641667	Identifier	nImages		8641496	0					
ANR	8641668	Argument	y		8641496	3					
ANR	8641669	Identifier	y		8641496	0					
ANR	8641670	ExpressionStatement	row [ - 2 ] = 190	1218:9:35469:35482	8641496	1	True				
ANR	8641671	AssignmentExpression	row [ - 2 ] = 190		8641496	0		=			
ANR	8641672	ArrayIndexing	row [ - 2 ]		8641496	0					
ANR	8641673	Identifier	row		8641496	0					
ANR	8641674	UnaryOperationExpression	- 2		8641496	1					
ANR	8641675	UnaryOperator	-		8641496	0					
ANR	8641676	PrimaryExpression	2		8641496	1					
ANR	8641677	PrimaryExpression	190		8641496	1					
ANR	8641678	ExpressionStatement	row [ - 1 ] = 239	1219:9:35493:35506	8641496	2	True				
ANR	8641679	AssignmentExpression	row [ - 1 ] = 239		8641496	0		=			
ANR	8641680	ArrayIndexing	row [ - 1 ]		8641496	0					
ANR	8641681	Identifier	row		8641496	0					
ANR	8641682	UnaryOperationExpression	- 1		8641496	1					
ANR	8641683	UnaryOperator	-		8641496	0					
ANR	8641684	PrimaryExpression	1		8641496	1					
ANR	8641685	PrimaryExpression	239		8641496	1					
ANR	8641686	ExpressionStatement	row [ cbRow ] = 222	1220:9:35517:35533	8641496	3	True				
ANR	8641687	AssignmentExpression	row [ cbRow ] = 222		8641496	0		=			
ANR	8641688	ArrayIndexing	row [ cbRow ]		8641496	0					
ANR	8641689	Identifier	row		8641496	0					
ANR	8641690	Identifier	cbRow		8641496	1					
ANR	8641691	PrimaryExpression	222		8641496	1					
ANR	8641692	ExpressionStatement	row [ cbRow + 1 ] = 173	1221:9:35544:35562	8641496	4	True				
ANR	8641693	AssignmentExpression	row [ cbRow + 1 ] = 173		8641496	0		=			
ANR	8641694	ArrayIndexing	row [ cbRow + 1 ]		8641496	0					
ANR	8641695	Identifier	row		8641496	0					
ANR	8641696	AdditiveExpression	cbRow + 1		8641496	1		+			
ANR	8641697	Identifier	cbRow		8641496	0					
ANR	8641698	PrimaryExpression	1		8641496	1					
ANR	8641699	PrimaryExpression	173		8641496	1					
ANR	8641700	ExpressionStatement	row [ cbRow + 2 ] = 17	1222:9:35573:35590	8641496	5	True				
ANR	8641701	AssignmentExpression	row [ cbRow + 2 ] = 17		8641496	0		=			
ANR	8641702	ArrayIndexing	row [ cbRow + 2 ]		8641496	0					
ANR	8641703	Identifier	row		8641496	0					
ANR	8641704	AdditiveExpression	cbRow + 2		8641496	1		+			
ANR	8641705	Identifier	cbRow		8641496	0					
ANR	8641706	PrimaryExpression	2		8641496	1					
ANR	8641707	PrimaryExpression	17		8641496	1					
ANR	8641708	ReturnType	static void		8641496	1					
ANR	8641709	Identifier	store_ensure_image		8641496	2					
ANR	8641710	ParameterList	"png_store * ps , png_const_structp pp , int nImages , png_size_t cbRow , png_uint_32 cRows"		8641496	3					
ANR	8641711	Parameter	png_store * ps	1162:19:33819:33831	8641496	0	True				
ANR	8641712	ParameterType	png_store *		8641496	0					
ANR	8641713	Identifier	ps		8641496	1					
ANR	8641714	Parameter	png_const_structp pp	1162:34:33834:33853	8641496	1	True				
ANR	8641715	ParameterType	png_const_structp		8641496	0					
ANR	8641716	Identifier	pp		8641496	1					
ANR	8641717	Parameter	int nImages	1162:56:33856:33866	8641496	2	True				
ANR	8641718	ParameterType	int		8641496	0					
ANR	8641719	Identifier	nImages		8641496	1					
ANR	8641720	Parameter	png_size_t cbRow	1163:3:33872:33887	8641496	3	True				
ANR	8641721	ParameterType	png_size_t		8641496	0					
ANR	8641722	Identifier	cbRow		8641496	1					
ANR	8641723	Parameter	png_uint_32 cRows	1163:21:33890:33906	8641496	4	True				
ANR	8641724	ParameterType	png_uint_32		8641496	0					
ANR	8641725	Identifier	cRows		8641496	1					
ANR	8641726	CFGEntryNode	ENTRY		8641496		True				
ANR	8641727	CFGExitNode	EXIT		8641496		True				
ANR	8641728	Symbol	pp		8641496						
ANR	8641729	Symbol	image		8641496						
ANR	8641730	Symbol	malloc		8641496						
ANR	8641731	Symbol	ps		8641496						
ANR	8641732	Symbol	NULL		8641496						
ANR	8641733	Symbol	* row		8641496						
ANR	8641734	Symbol	* cbRow		8641496						
ANR	8641735	Symbol	cRows		8641496						
ANR	8641736	Symbol	* cb		8641496						
ANR	8641737	Symbol	voidcast		8641496						
ANR	8641738	Symbol	nImages		8641496						
ANR	8641739	Symbol	* ps		8641496						
ANR	8641740	Symbol	ps -> image		8641496						
ANR	8641741	Symbol	ps -> cb_row		8641496						
ANR	8641742	Symbol	y		8641496						
ANR	8641743	Symbol	cbRow		8641496						
ANR	8641744	Symbol	row		8641496						
ANR	8641745	Symbol	ps -> cb_image		8641496						
ANR	8641746	Symbol	store_image_row		8641496						
ANR	8641747	Symbol	* image		8641496						
ANR	8641748	Symbol	cb		8641496						
ANR	8641749	Symbol	png_bytep		8641496						
ANR	8641750	Symbol	ps -> image_h		8641496						
ANR	8641751	Function	store_image_check	1228:0:35634:36379							
ANR	8641752	FunctionDef	"store_image_check (const png_store * ps , png_const_structp pp , int iImage)"		8641751	0					
ANR	8641753	CompoundStatement		1230:0:35719:36379	8641751	0					
ANR	8641754	IdentifierDeclStatement	png_const_bytep image = ps -> image ;	1231:3:35724:35757	8641751	0	True				
ANR	8641755	IdentifierDecl	image = ps -> image		8641751	0					
ANR	8641756	IdentifierDeclType	png_const_bytep		8641751	0					
ANR	8641757	Identifier	image		8641751	1					
ANR	8641758	AssignmentExpression	image = ps -> image		8641751	2		=			
ANR	8641759	Identifier	image		8641751	0					
ANR	8641760	PtrMemberAccess	ps -> image		8641751	1					
ANR	8641761	Identifier	ps		8641751	0					
ANR	8641762	Identifier	image		8641751	1					
ANR	8641763	IfStatement	if ( image [ - 1 ] != 0xed || image [ ps -> cb_image ] != 0xfe )		8641751	1					
ANR	8641764	Condition	image [ - 1 ] != 0xed || image [ ps -> cb_image ] != 0xfe	1233:7:35767:35814	8641751	0	True				
ANR	8641765	OrExpression	image [ - 1 ] != 0xed || image [ ps -> cb_image ] != 0xfe		8641751	0		||			
ANR	8641766	EqualityExpression	image [ - 1 ] != 0xed		8641751	0		!=			
ANR	8641767	ArrayIndexing	image [ - 1 ]		8641751	0					
ANR	8641768	Identifier	image		8641751	0					
ANR	8641769	UnaryOperationExpression	- 1		8641751	1					
ANR	8641770	UnaryOperator	-		8641751	0					
ANR	8641771	PrimaryExpression	1		8641751	1					
ANR	8641772	PrimaryExpression	0xed		8641751	1					
ANR	8641773	EqualityExpression	image [ ps -> cb_image ] != 0xfe		8641751	1		!=			
ANR	8641774	ArrayIndexing	image [ ps -> cb_image ]		8641751	0					
ANR	8641775	Identifier	image		8641751	0					
ANR	8641776	PtrMemberAccess	ps -> cb_image		8641751	1					
ANR	8641777	Identifier	ps		8641751	0					
ANR	8641778	Identifier	cb_image		8641751	1					
ANR	8641779	PrimaryExpression	0xfe		8641751	1					
ANR	8641780	ExpressionStatement	"png_error ( pp , ""image overwrite"" )"	1234:6:35823:35855	8641751	1	True				
ANR	8641781	CallExpression	"png_error ( pp , ""image overwrite"" )"		8641751	0					
ANR	8641782	Callee	png_error		8641751	0					
ANR	8641783	Identifier	png_error		8641751	0					
ANR	8641784	ArgumentList	pp		8641751	1					
ANR	8641785	Argument	pp		8641751	0					
ANR	8641786	Identifier	pp		8641751	0					
ANR	8641787	Argument	"""image overwrite"""		8641751	1					
ANR	8641788	PrimaryExpression	"""image overwrite"""		8641751	0					
ANR	8641789	ElseStatement	else		8641751	0					
ANR	8641790	CompoundStatement		9:6:193:223	8641751	0					
ANR	8641791	IdentifierDeclStatement	png_size_t cbRow = ps -> cb_row ;	1237:6:35876:35905	8641751	0	True				
ANR	8641792	IdentifierDecl	cbRow = ps -> cb_row		8641751	0					
ANR	8641793	IdentifierDeclType	png_size_t		8641751	0					
ANR	8641794	Identifier	cbRow		8641751	1					
ANR	8641795	AssignmentExpression	cbRow = ps -> cb_row		8641751	2		=			
ANR	8641796	Identifier	cbRow		8641751	0					
ANR	8641797	PtrMemberAccess	ps -> cb_row		8641751	1					
ANR	8641798	Identifier	ps		8641751	0					
ANR	8641799	Identifier	cb_row		8641751	1					
ANR	8641800	IdentifierDeclStatement	png_uint_32 rows = ps -> image_h ;	1238:6:35913:35943	8641751	1	True				
ANR	8641801	IdentifierDecl	rows = ps -> image_h		8641751	0					
ANR	8641802	IdentifierDeclType	png_uint_32		8641751	0					
ANR	8641803	Identifier	rows		8641751	1					
ANR	8641804	AssignmentExpression	rows = ps -> image_h		8641751	2		=			
ANR	8641805	Identifier	rows		8641751	0					
ANR	8641806	PtrMemberAccess	ps -> image_h		8641751	1					
ANR	8641807	Identifier	ps		8641751	0					
ANR	8641808	Identifier	image_h		8641751	1					
ANR	8641809	ExpressionStatement	image += iImage * ( cbRow + 5 ) * ps -> image_h	1240:6:35952:35993	8641751	2	True				
ANR	8641810	AssignmentExpression	image += iImage * ( cbRow + 5 ) * ps -> image_h		8641751	0		+=			
ANR	8641811	Identifier	image		8641751	0					
ANR	8641812	MultiplicativeExpression	iImage * ( cbRow + 5 ) * ps -> image_h		8641751	1		*			
ANR	8641813	Identifier	iImage		8641751	0					
ANR	8641814	MultiplicativeExpression	( cbRow + 5 ) * ps -> image_h		8641751	1		*			
ANR	8641815	AdditiveExpression	cbRow + 5		8641751	0		+			
ANR	8641816	Identifier	cbRow		8641751	0					
ANR	8641817	PrimaryExpression	5		8641751	1					
ANR	8641818	PtrMemberAccess	ps -> image_h		8641751	1					
ANR	8641819	Identifier	ps		8641751	0					
ANR	8641820	Identifier	image_h		8641751	1					
ANR	8641821	ExpressionStatement	image += 2	1242:6:36002:36012	8641751	3	True				
ANR	8641822	AssignmentExpression	image += 2		8641751	0		+=			
ANR	8641823	Identifier	image		8641751	0					
ANR	8641824	PrimaryExpression	2		8641751	1					
ANR	8641825	ForStatement	for ( ; rows > 0 ; -- rows )		8641751	4					
ANR	8641826	Condition	rows > 0	1244:13:36063:36070	8641751	0	True				
ANR	8641827	RelationalExpression	rows > 0		8641751	0		>			
ANR	8641828	Identifier	rows		8641751	0					
ANR	8641829	PrimaryExpression	0		8641751	1					
ANR	8641830	UnaryExpression	-- rows	1244:23:36073:36078	8641751	1	True				
ANR	8641831	IncDec	--		8641751	0					
ANR	8641832	Identifier	rows		8641751	1					
ANR	8641833	CompoundStatement		16:6:367:367	8641751	2					
ANR	8641834	IfStatement	if ( image [ - 2 ] != 190 || image [ - 1 ] != 239 )		8641751	0					
ANR	8641835	Condition	image [ - 2 ] != 190 || image [ - 1 ] != 239	1246:13:36102:36137	8641751	0	True				
ANR	8641836	OrExpression	image [ - 2 ] != 190 || image [ - 1 ] != 239		8641751	0		||			
ANR	8641837	EqualityExpression	image [ - 2 ] != 190		8641751	0		!=			
ANR	8641838	ArrayIndexing	image [ - 2 ]		8641751	0					
ANR	8641839	Identifier	image		8641751	0					
ANR	8641840	UnaryOperationExpression	- 2		8641751	1					
ANR	8641841	UnaryOperator	-		8641751	0					
ANR	8641842	PrimaryExpression	2		8641751	1					
ANR	8641843	PrimaryExpression	190		8641751	1					
ANR	8641844	EqualityExpression	image [ - 1 ] != 239		8641751	1		!=			
ANR	8641845	ArrayIndexing	image [ - 1 ]		8641751	0					
ANR	8641846	Identifier	image		8641751	0					
ANR	8641847	UnaryOperationExpression	- 1		8641751	1					
ANR	8641848	UnaryOperator	-		8641751	0					
ANR	8641849	PrimaryExpression	1		8641751	1					
ANR	8641850	PrimaryExpression	239		8641751	1					
ANR	8641851	ExpressionStatement	"png_error ( pp , ""row start overwritten"" )"	1247:12:36152:36190	8641751	1	True				
ANR	8641852	CallExpression	"png_error ( pp , ""row start overwritten"" )"		8641751	0					
ANR	8641853	Callee	png_error		8641751	0					
ANR	8641854	Identifier	png_error		8641751	0					
ANR	8641855	ArgumentList	pp		8641751	1					
ANR	8641856	Argument	pp		8641751	0					
ANR	8641857	Identifier	pp		8641751	0					
ANR	8641858	Argument	"""row start overwritten"""		8641751	1					
ANR	8641859	PrimaryExpression	"""row start overwritten"""		8641751	0					
ANR	8641860	IfStatement	if ( image [ cbRow ] != 222 || image [ cbRow + 1 ] != 173 || image [ cbRow + 2 ] != 17 )		8641751	1					
ANR	8641861	Condition	image [ cbRow ] != 222 || image [ cbRow + 1 ] != 173 || image [ cbRow + 2 ] != 17	1249:13:36206:36285	8641751	0	True				
ANR	8641862	OrExpression	image [ cbRow ] != 222 || image [ cbRow + 1 ] != 173 || image [ cbRow + 2 ] != 17		8641751	0		||			
ANR	8641863	EqualityExpression	image [ cbRow ] != 222		8641751	0		!=			
ANR	8641864	ArrayIndexing	image [ cbRow ]		8641751	0					
ANR	8641865	Identifier	image		8641751	0					
ANR	8641866	Identifier	cbRow		8641751	1					
ANR	8641867	PrimaryExpression	222		8641751	1					
ANR	8641868	OrExpression	image [ cbRow + 1 ] != 173 || image [ cbRow + 2 ] != 17		8641751	1		||			
ANR	8641869	EqualityExpression	image [ cbRow + 1 ] != 173		8641751	0		!=			
ANR	8641870	ArrayIndexing	image [ cbRow + 1 ]		8641751	0					
ANR	8641871	Identifier	image		8641751	0					
ANR	8641872	AdditiveExpression	cbRow + 1		8641751	1		+			
ANR	8641873	Identifier	cbRow		8641751	0					
ANR	8641874	PrimaryExpression	1		8641751	1					
ANR	8641875	PrimaryExpression	173		8641751	1					
ANR	8641876	EqualityExpression	image [ cbRow + 2 ] != 17		8641751	1		!=			
ANR	8641877	ArrayIndexing	image [ cbRow + 2 ]		8641751	0					
ANR	8641878	Identifier	image		8641751	0					
ANR	8641879	AdditiveExpression	cbRow + 2		8641751	1		+			
ANR	8641880	Identifier	cbRow		8641751	0					
ANR	8641881	PrimaryExpression	2		8641751	1					
ANR	8641882	PrimaryExpression	17		8641751	1					
ANR	8641883	ExpressionStatement	"png_error ( pp , ""row end overwritten"" )"	1251:12:36300:36336	8641751	1	True				
ANR	8641884	CallExpression	"png_error ( pp , ""row end overwritten"" )"		8641751	0					
ANR	8641885	Callee	png_error		8641751	0					
ANR	8641886	Identifier	png_error		8641751	0					
ANR	8641887	ArgumentList	pp		8641751	1					
ANR	8641888	Argument	pp		8641751	0					
ANR	8641889	Identifier	pp		8641751	0					
ANR	8641890	Argument	"""row end overwritten"""		8641751	1					
ANR	8641891	PrimaryExpression	"""row end overwritten"""		8641751	0					
ANR	8641892	ExpressionStatement	image += cbRow + 5	1253:9:36348:36364	8641751	2	True				
ANR	8641893	AssignmentExpression	image += cbRow + 5		8641751	0		+=			
ANR	8641894	Identifier	image		8641751	0					
ANR	8641895	AdditiveExpression	cbRow + 5		8641751	1		+			
ANR	8641896	Identifier	cbRow		8641751	0					
ANR	8641897	PrimaryExpression	5		8641751	1					
ANR	8641898	ReturnType	static void		8641751	1					
ANR	8641899	Identifier	store_image_check		8641751	2					
ANR	8641900	ParameterList	"const png_store * ps , png_const_structp pp , int iImage"		8641751	3					
ANR	8641901	Parameter	const png_store * ps	1229:18:35664:35682	8641751	0	True				
ANR	8641902	ParameterType	const png_store *		8641751	0					
ANR	8641903	Identifier	ps		8641751	1					
ANR	8641904	Parameter	png_const_structp pp	1229:39:35685:35704	8641751	1	True				
ANR	8641905	ParameterType	png_const_structp		8641751	0					
ANR	8641906	Identifier	pp		8641751	1					
ANR	8641907	Parameter	int iImage	1229:61:35707:35716	8641751	2	True				
ANR	8641908	ParameterType	int		8641751	0					
ANR	8641909	Identifier	iImage		8641751	1					
ANR	8641910	CFGEntryNode	ENTRY		8641751		True				
ANR	8641911	CFGExitNode	EXIT		8641751		True				
ANR	8641912	Symbol	pp		8641751						
ANR	8641913	Symbol	image		8641751						
ANR	8641914	Symbol	ps		8641751						
ANR	8641915	Symbol	* cbRow		8641751						
ANR	8641916	Symbol	* ps		8641751						
ANR	8641917	Symbol	rows		8641751						
ANR	8641918	Symbol	* * ps		8641751						
ANR	8641919	Symbol	* ps -> cb_image		8641751						
ANR	8641920	Symbol	ps -> image		8641751						
ANR	8641921	Symbol	ps -> cb_row		8641751						
ANR	8641922	Symbol	iImage		8641751						
ANR	8641923	Symbol	cbRow		8641751						
ANR	8641924	Symbol	ps -> cb_image		8641751						
ANR	8641925	Symbol	* image		8641751						
ANR	8641926	Symbol	ps -> image_h		8641751						
ANR	8641927	Function	valid_chunktype	1259:0:36414:36814							
ANR	8641928	FunctionDef	valid_chunktype (png_uint_32 chunktype)		8641927	0					
ANR	8641929	CompoundStatement		1261:0:36464:36814	8641927	0					
ANR	8641930	IdentifierDeclStatement	unsigned int i ;	1265:3:36583:36597	8641927	0	True				
ANR	8641931	IdentifierDecl	i		8641927	0					
ANR	8641932	IdentifierDeclType	unsigned int		8641927	0					
ANR	8641933	Identifier	i		8641927	1					
ANR	8641934	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		8641927	1					
ANR	8641935	ForInit	i = 0 ;	1267:8:36608:36611	8641927	0	True				
ANR	8641936	AssignmentExpression	i = 0		8641927	0		=			
ANR	8641937	Identifier	i		8641927	0					
ANR	8641938	PrimaryExpression	0		8641927	1					
ANR	8641939	Condition	i < 4	1267:13:36613:36615	8641927	1	True				
ANR	8641940	RelationalExpression	i < 4		8641927	0		<			
ANR	8641941	Identifier	i		8641927	0					
ANR	8641942	PrimaryExpression	4		8641927	1					
ANR	8641943	UnaryExpression	++ i	1267:18:36618:36620	8641927	2	True				
ANR	8641944	IncDec	++		8641927	0					
ANR	8641945	Identifier	i		8641927	1					
ANR	8641946	CompoundStatement		9:6:169:203	8641927	3					
ANR	8641947	IdentifierDeclStatement	unsigned int c = chunktype & 0xffU ;	1269:6:36634:36668	8641927	0	True				
ANR	8641948	IdentifierDecl	c = chunktype & 0xffU		8641927	0					
ANR	8641949	IdentifierDeclType	unsigned int		8641927	0					
ANR	8641950	Identifier	c		8641927	1					
ANR	8641951	AssignmentExpression	c = chunktype & 0xffU		8641927	2		=			
ANR	8641952	Identifier	c		8641927	0					
ANR	8641953	BitAndExpression	chunktype & 0xffU		8641927	1		&			
ANR	8641954	Identifier	chunktype		8641927	0					
ANR	8641955	PrimaryExpression	0xffU		8641927	1					
ANR	8641956	IfStatement	if ( ! ( ( c >= 65U && c <= 90U ) || ( c >= 97U && c <= 122U ) ) )		8641927	1					
ANR	8641957	Condition	! ( ( c >= 65U && c <= 90U ) || ( c >= 97U && c <= 122U ) )	1271:10:36681:36732	8641927	0	True				
ANR	8641958	UnaryOperationExpression	! ( ( c >= 65U && c <= 90U ) || ( c >= 97U && c <= 122U ) )		8641927	0					
ANR	8641959	UnaryOperator	!		8641927	0					
ANR	8641960	OrExpression	( c >= 65U && c <= 90U ) || ( c >= 97U && c <= 122U )		8641927	1		||			
ANR	8641961	AndExpression	c >= 65U && c <= 90U		8641927	0		&&			
ANR	8641962	RelationalExpression	c >= 65U		8641927	0		>=			
ANR	8641963	Identifier	c		8641927	0					
ANR	8641964	PrimaryExpression	65U		8641927	1					
ANR	8641965	RelationalExpression	c <= 90U		8641927	1		<=			
ANR	8641966	Identifier	c		8641927	0					
ANR	8641967	PrimaryExpression	90U		8641927	1					
ANR	8641968	AndExpression	c >= 97U && c <= 122U		8641927	1		&&			
ANR	8641969	RelationalExpression	c >= 97U		8641927	0		>=			
ANR	8641970	Identifier	c		8641927	0					
ANR	8641971	PrimaryExpression	97U		8641927	1					
ANR	8641972	RelationalExpression	c <= 122U		8641927	1		<=			
ANR	8641973	Identifier	c		8641927	0					
ANR	8641974	PrimaryExpression	122U		8641927	1					
ANR	8641975	ReturnStatement	return 0 ;	1272:9:36744:36752	8641927	1	True				
ANR	8641976	PrimaryExpression	0		8641927	0					
ANR	8641977	ExpressionStatement	chunktype >>= 8	1274:6:36761:36776	8641927	2	True				
ANR	8641978	AssignmentExpression	chunktype >>= 8		8641927	0		>>=			
ANR	8641979	Identifier	chunktype		8641927	0					
ANR	8641980	PrimaryExpression	8		8641927	1					
ANR	8641981	ReturnStatement	return 1 ;	1277:3:36787:36795	8641927	2	True				
ANR	8641982	PrimaryExpression	1		8641927	0					
ANR	8641983	ReturnType	static int		8641927	1					
ANR	8641984	Identifier	valid_chunktype		8641927	2					
ANR	8641985	ParameterList	png_uint_32 chunktype		8641927	3					
ANR	8641986	Parameter	png_uint_32 chunktype	1260:16:36441:36461	8641927	0	True				
ANR	8641987	ParameterType	png_uint_32		8641927	0					
ANR	8641988	Identifier	chunktype		8641927	1					
ANR	8641989	CFGEntryNode	ENTRY		8641927		True				
ANR	8641990	CFGExitNode	EXIT		8641927		True				
ANR	8641991	Symbol	c		8641927						
ANR	8641992	Symbol	i		8641927						
ANR	8641993	Symbol	chunktype		8641927						
ANR	8641994	Function	store_write	1280:0:36817:39497							
ANR	8641995	FunctionDef	"store_write (png_structp ppIn , png_bytep pb , png_size_t st)"		8641994	0					
ANR	8641996	CompoundStatement		1282:0:36897:39497	8641994	0					
ANR	8641997	IdentifierDeclStatement	png_const_structp pp = ppIn ;	1283:3:36902:36929	8641994	0	True				
ANR	8641998	IdentifierDecl	pp = ppIn		8641994	0					
ANR	8641999	IdentifierDeclType	png_const_structp		8641994	0					
ANR	8642000	Identifier	pp		8641994	1					
ANR	8642001	AssignmentExpression	pp = ppIn		8641994	2		=			
ANR	8642002	Identifier	ppIn		8641994	0					
ANR	8642003	Identifier	ppIn		8641994	1					
ANR	8642004	Statement	png_store	1284:3:36934:36942	8641994	1	True				
ANR	8642005	Statement	*	1284:13:36944:36944	8641994	2	True				
ANR	8642006	Statement	ps	1284:14:36945:36946	8641994	3	True				
ANR	8642007	Statement	=	1284:17:36948:36948	8641994	4	True				
ANR	8642008	Statement	voidcast	1284:19:36950:36957	8641994	5	True				
ANR	8642009	Statement	(	1284:27:36958:36958	8641994	6	True				
ANR	8642010	Statement	png_store	1284:28:36959:36967	8641994	7	True				
ANR	8642011	Statement	*	1284:37:36968:36968	8641994	8	True				
ANR	8642012	Statement	","	1284:38:36969:36969	8641994	9	True				
ANR	8642013	Statement	png_get_io_ptr	1284:40:36971:36984	8641994	10	True				
ANR	8642014	Statement	(	1284:54:36985:36985	8641994	11	True				
ANR	8642015	Statement	pp	1284:55:36986:36987	8641994	12	True				
ANR	8642016	Statement	)	1284:57:36988:36988	8641994	13	True				
ANR	8642017	Statement	)	1284:58:36989:36989	8641994	14	True				
ANR	8642018	ExpressionStatement		1284:59:36990:36990	8641994	15	True				
ANR	8642019	IdentifierDeclStatement	size_t writepos = ps -> writepos ;	1285:3:36995:37025	8641994	16	True				
ANR	8642020	IdentifierDecl	writepos = ps -> writepos		8641994	0					
ANR	8642021	IdentifierDeclType	size_t		8641994	0					
ANR	8642022	Identifier	writepos		8641994	1					
ANR	8642023	AssignmentExpression	writepos = ps -> writepos		8641994	2		=			
ANR	8642024	Identifier	writepos		8641994	0					
ANR	8642025	PtrMemberAccess	ps -> writepos		8641994	1					
ANR	8642026	Identifier	ps		8641994	0					
ANR	8642027	Identifier	writepos		8641994	1					
ANR	8642028	IdentifierDeclStatement	png_uint_32 chunkpos = ps -> chunkpos ;	1286:3:37030:37065	8641994	17	True				
ANR	8642029	IdentifierDecl	chunkpos = ps -> chunkpos		8641994	0					
ANR	8642030	IdentifierDeclType	png_uint_32		8641994	0					
ANR	8642031	Identifier	chunkpos		8641994	1					
ANR	8642032	AssignmentExpression	chunkpos = ps -> chunkpos		8641994	2		=			
ANR	8642033	Identifier	chunkpos		8641994	0					
ANR	8642034	PtrMemberAccess	ps -> chunkpos		8641994	1					
ANR	8642035	Identifier	ps		8641994	0					
ANR	8642036	Identifier	chunkpos		8641994	1					
ANR	8642037	IdentifierDeclStatement	png_uint_32 chunktype = ps -> chunktype ;	1287:3:37070:37107	8641994	18	True				
ANR	8642038	IdentifierDecl	chunktype = ps -> chunktype		8641994	0					
ANR	8642039	IdentifierDeclType	png_uint_32		8641994	0					
ANR	8642040	Identifier	chunktype		8641994	1					
ANR	8642041	AssignmentExpression	chunktype = ps -> chunktype		8641994	2		=			
ANR	8642042	Identifier	chunktype		8641994	0					
ANR	8642043	PtrMemberAccess	ps -> chunktype		8641994	1					
ANR	8642044	Identifier	ps		8641994	0					
ANR	8642045	Identifier	chunktype		8641994	1					
ANR	8642046	IdentifierDeclStatement	png_uint_32 chunklen = ps -> chunklen ;	1288:3:37112:37147	8641994	19	True				
ANR	8642047	IdentifierDecl	chunklen = ps -> chunklen		8641994	0					
ANR	8642048	IdentifierDeclType	png_uint_32		8641994	0					
ANR	8642049	Identifier	chunklen		8641994	1					
ANR	8642050	AssignmentExpression	chunklen = ps -> chunklen		8641994	2		=			
ANR	8642051	Identifier	chunklen		8641994	0					
ANR	8642052	PtrMemberAccess	ps -> chunklen		8641994	1					
ANR	8642053	Identifier	ps		8641994	0					
ANR	8642054	Identifier	chunklen		8641994	1					
ANR	8642055	IfStatement	if ( ps -> pwrite != pp )		8641994	20					
ANR	8642056	Condition	ps -> pwrite != pp	1290:7:37157:37172	8641994	0	True				
ANR	8642057	EqualityExpression	ps -> pwrite != pp		8641994	0		!=			
ANR	8642058	PtrMemberAccess	ps -> pwrite		8641994	0					
ANR	8642059	Identifier	ps		8641994	0					
ANR	8642060	Identifier	pwrite		8641994	1					
ANR	8642061	Identifier	pp		8641994	1					
ANR	8642062	ExpressionStatement	"png_error ( pp , ""store state damaged"" )"	1291:6:37181:37217	8641994	1	True				
ANR	8642063	CallExpression	"png_error ( pp , ""store state damaged"" )"		8641994	0					
ANR	8642064	Callee	png_error		8641994	0					
ANR	8642065	Identifier	png_error		8641994	0					
ANR	8642066	ArgumentList	pp		8641994	1					
ANR	8642067	Argument	pp		8641994	0					
ANR	8642068	Identifier	pp		8641994	0					
ANR	8642069	Argument	"""store state damaged"""		8641994	1					
ANR	8642070	PrimaryExpression	"""store state damaged"""		8641994	0					
ANR	8642071	IfStatement	if ( st > 0x7fffffffU )		8641994	21					
ANR	8642072	Condition	st > 0x7fffffffU	1297:7:37427:37442	8641994	0	True				
ANR	8642073	RelationalExpression	st > 0x7fffffffU		8641994	0		>			
ANR	8642074	Identifier	st		8641994	0					
ANR	8642075	PrimaryExpression	0x7fffffffU		8641994	1					
ANR	8642076	ExpressionStatement	"png_error ( pp , ""unexpected write size"" )"	1298:6:37451:37489	8641994	1	True				
ANR	8642077	CallExpression	"png_error ( pp , ""unexpected write size"" )"		8641994	0					
ANR	8642078	Callee	png_error		8641994	0					
ANR	8642079	Identifier	png_error		8641994	0					
ANR	8642080	ArgumentList	pp		8641994	1					
ANR	8642081	Argument	pp		8641994	0					
ANR	8642082	Identifier	pp		8641994	0					
ANR	8642083	Argument	"""unexpected write size"""		8641994	1					
ANR	8642084	PrimaryExpression	"""unexpected write size"""		8641994	0					
ANR	8642085	WhileStatement	while ( st > 0 )		8641994	22					
ANR	8642086	Condition	st > 0	1304:10:37722:37727	8641994	0	True				
ANR	8642087	RelationalExpression	st > 0		8641994	0		>			
ANR	8642088	Identifier	st		8641994	0					
ANR	8642089	PrimaryExpression	0		8641994	1					
ANR	8642090	CompoundStatement		24:3:835:835	8641994	1					
ANR	8642091	IfStatement	if ( writepos >= STORE_BUFFER_SIZE )		8641994	0					
ANR	8642092	Condition	writepos >= STORE_BUFFER_SIZE	1306:10:37745:37773	8641994	0	True				
ANR	8642093	RelationalExpression	writepos >= STORE_BUFFER_SIZE		8641994	0		>=			
ANR	8642094	Identifier	writepos		8641994	0					
ANR	8642095	Identifier	STORE_BUFFER_SIZE		8641994	1					
ANR	8642096	ExpressionStatement	"store_storenew ( ps ) , writepos = 0"	1307:9:37785:37817	8641994	1	True				
ANR	8642097	Expression	"store_storenew ( ps ) , writepos = 0"		8641994	0					
ANR	8642098	CallExpression	store_storenew ( ps )		8641994	0					
ANR	8642099	Callee	store_storenew		8641994	0					
ANR	8642100	Identifier	store_storenew		8641994	0					
ANR	8642101	ArgumentList	ps		8641994	1					
ANR	8642102	Argument	ps		8641994	0					
ANR	8642103	Identifier	ps		8641994	0					
ANR	8642104	AssignmentExpression	writepos = 0		8641994	1		=			
ANR	8642105	Identifier	writepos		8641994	0					
ANR	8642106	PrimaryExpression	0		8641994	1					
ANR	8642107	IfStatement	if ( chunkpos < 4 )		8641994	1					
ANR	8642108	Condition	chunkpos < 4	1309:10:37830:37841	8641994	0	True				
ANR	8642109	RelationalExpression	chunkpos < 4		8641994	0		<			
ANR	8642110	Identifier	chunkpos		8641994	0					
ANR	8642111	PrimaryExpression	4		8641994	1					
ANR	8642112	CompoundStatement		30:9:963:981	8641994	1					
ANR	8642113	IdentifierDeclStatement	png_byte b = * pb ++ ;	1311:9:37861:37879	8641994	0	True				
ANR	8642114	IdentifierDecl	b = * pb ++		8641994	0					
ANR	8642115	IdentifierDeclType	png_byte		8641994	0					
ANR	8642116	Identifier	b		8641994	1					
ANR	8642117	AssignmentExpression	b = * pb ++		8641994	2		=			
ANR	8642118	Identifier	b		8641994	0					
ANR	8642119	UnaryOperationExpression	* pb ++		8641994	1					
ANR	8642120	UnaryOperator	*		8641994	0					
ANR	8642121	PostIncDecOperationExpression	pb ++		8641994	1					
ANR	8642122	Identifier	pb		8641994	0					
ANR	8642123	IncDec	++		8641994	1					
ANR	8642124	ExpressionStatement	-- st	1312:9:37890:37894	8641994	1	True				
ANR	8642125	UnaryExpression	-- st		8641994	0					
ANR	8642126	IncDec	--		8641994	0					
ANR	8642127	Identifier	st		8641994	1					
ANR	8642128	ExpressionStatement	chunklen = ( chunklen << 8 ) + b	1313:9:37905:37935	8641994	2	True				
ANR	8642129	AssignmentExpression	chunklen = ( chunklen << 8 ) + b		8641994	0		=			
ANR	8642130	Identifier	chunklen		8641994	0					
ANR	8642131	AdditiveExpression	( chunklen << 8 ) + b		8641994	1		+			
ANR	8642132	ShiftExpression	chunklen << 8		8641994	0		<<			
ANR	8642133	Identifier	chunklen		8641994	0					
ANR	8642134	PrimaryExpression	8		8641994	1					
ANR	8642135	Identifier	b		8641994	1					
ANR	8642136	Statement	ps	1314:9:37946:37947	8641994	3	True				
ANR	8642137	Statement	->	1314:11:37948:37949	8641994	4	True				
ANR	8642138	Statement	new	1314:13:37950:37952	8641994	5	True				
ANR	8642139	Statement	.	1314:16:37953:37953	8641994	6	True				
ANR	8642140	ExpressionStatement	buffer [ writepos ++ ] = b	1314:17:37954:37976	8641994	7	True				
ANR	8642141	AssignmentExpression	buffer [ writepos ++ ] = b		8641994	0		=			
ANR	8642142	ArrayIndexing	buffer [ writepos ++ ]		8641994	0					
ANR	8642143	Identifier	buffer		8641994	0					
ANR	8642144	PostIncDecOperationExpression	writepos ++		8641994	1					
ANR	8642145	Identifier	writepos		8641994	0					
ANR	8642146	IncDec	++		8641994	1					
ANR	8642147	Identifier	b		8641994	1					
ANR	8642148	ExpressionStatement	++ chunkpos	1315:9:37987:37997	8641994	8	True				
ANR	8642149	UnaryExpression	++ chunkpos		8641994	0					
ANR	8642150	IncDec	++		8641994	0					
ANR	8642151	Identifier	chunkpos		8641994	1					
ANR	8642152	ElseStatement	else		8641994	0					
ANR	8642153	IfStatement	if ( chunkpos < 8 )		8641994	0					
ANR	8642154	Condition	chunkpos < 8	1318:15:38023:38034	8641994	0	True				
ANR	8642155	RelationalExpression	chunkpos < 8		8641994	0		<			
ANR	8642156	Identifier	chunkpos		8641994	0					
ANR	8642157	PrimaryExpression	8		8641994	1					
ANR	8642158	CompoundStatement		39:9:1156:1174	8641994	1					
ANR	8642159	IdentifierDeclStatement	png_byte b = * pb ++ ;	1320:9:38054:38072	8641994	0	True				
ANR	8642160	IdentifierDecl	b = * pb ++		8641994	0					
ANR	8642161	IdentifierDeclType	png_byte		8641994	0					
ANR	8642162	Identifier	b		8641994	1					
ANR	8642163	AssignmentExpression	b = * pb ++		8641994	2		=			
ANR	8642164	Identifier	b		8641994	0					
ANR	8642165	UnaryOperationExpression	* pb ++		8641994	1					
ANR	8642166	UnaryOperator	*		8641994	0					
ANR	8642167	PostIncDecOperationExpression	pb ++		8641994	1					
ANR	8642168	Identifier	pb		8641994	0					
ANR	8642169	IncDec	++		8641994	1					
ANR	8642170	ExpressionStatement	-- st	1321:9:38083:38087	8641994	1	True				
ANR	8642171	UnaryExpression	-- st		8641994	0					
ANR	8642172	IncDec	--		8641994	0					
ANR	8642173	Identifier	st		8641994	1					
ANR	8642174	ExpressionStatement	chunktype = ( chunktype << 8 ) + b	1322:9:38098:38130	8641994	2	True				
ANR	8642175	AssignmentExpression	chunktype = ( chunktype << 8 ) + b		8641994	0		=			
ANR	8642176	Identifier	chunktype		8641994	0					
ANR	8642177	AdditiveExpression	( chunktype << 8 ) + b		8641994	1		+			
ANR	8642178	ShiftExpression	chunktype << 8		8641994	0		<<			
ANR	8642179	Identifier	chunktype		8641994	0					
ANR	8642180	PrimaryExpression	8		8641994	1					
ANR	8642181	Identifier	b		8641994	1					
ANR	8642182	Statement	ps	1323:9:38141:38142	8641994	3	True				
ANR	8642183	Statement	->	1323:11:38143:38144	8641994	4	True				
ANR	8642184	Statement	new	1323:13:38145:38147	8641994	5	True				
ANR	8642185	Statement	.	1323:16:38148:38148	8641994	6	True				
ANR	8642186	ExpressionStatement	buffer [ writepos ++ ] = b	1323:17:38149:38171	8641994	7	True				
ANR	8642187	AssignmentExpression	buffer [ writepos ++ ] = b		8641994	0		=			
ANR	8642188	ArrayIndexing	buffer [ writepos ++ ]		8641994	0					
ANR	8642189	Identifier	buffer		8641994	0					
ANR	8642190	PostIncDecOperationExpression	writepos ++		8641994	1					
ANR	8642191	Identifier	writepos		8641994	0					
ANR	8642192	IncDec	++		8641994	1					
ANR	8642193	Identifier	b		8641994	1					
ANR	8642194	IfStatement	if ( ++ chunkpos == 8 )		8641994	8					
ANR	8642195	Condition	++ chunkpos == 8	1325:13:38187:38201	8641994	0	True				
ANR	8642196	EqualityExpression	++ chunkpos == 8		8641994	0		==			
ANR	8642197	UnaryExpression	++ chunkpos		8641994	0					
ANR	8642198	IncDec	++		8641994	0					
ANR	8642199	Identifier	chunkpos		8641994	1					
ANR	8642200	PrimaryExpression	8		8641994	1					
ANR	8642201	CompoundStatement		45:9:1315:1315	8641994	1					
ANR	8642202	ExpressionStatement	chunklen &= 0xffffffffU	1327:12:38227:38250	8641994	0	True				
ANR	8642203	AssignmentExpression	chunklen &= 0xffffffffU		8641994	0		&=			
ANR	8642204	Identifier	chunklen		8641994	0					
ANR	8642205	PrimaryExpression	0xffffffffU		8641994	1					
ANR	8642206	IfStatement	if ( chunklen > 0x7fffffffU )		8641994	1					
ANR	8642207	Condition	chunklen > 0x7fffffffU	1328:16:38268:38289	8641994	0	True				
ANR	8642208	RelationalExpression	chunklen > 0x7fffffffU		8641994	0		>			
ANR	8642209	Identifier	chunklen		8641994	0					
ANR	8642210	PrimaryExpression	0x7fffffffU		8641994	1					
ANR	8642211	ExpressionStatement	"png_error ( pp , ""chunk length too great"" )"	1329:15:38307:38346	8641994	1	True				
ANR	8642212	CallExpression	"png_error ( pp , ""chunk length too great"" )"		8641994	0					
ANR	8642213	Callee	png_error		8641994	0					
ANR	8642214	Identifier	png_error		8641994	0					
ANR	8642215	ArgumentList	pp		8641994	1					
ANR	8642216	Argument	pp		8641994	0					
ANR	8642217	Identifier	pp		8641994	0					
ANR	8642218	Argument	"""chunk length too great"""		8641994	1					
ANR	8642219	PrimaryExpression	"""chunk length too great"""		8641994	0					
ANR	8642220	ExpressionStatement	chunktype &= 0xffffffffU	1331:12:38361:38385	8641994	2	True				
ANR	8642221	AssignmentExpression	chunktype &= 0xffffffffU		8641994	0		&=			
ANR	8642222	Identifier	chunktype		8641994	0					
ANR	8642223	PrimaryExpression	0xffffffffU		8641994	1					
ANR	8642224	IfStatement	if ( chunktype == CHUNK_IDAT )		8641994	3					
ANR	8642225	Condition	chunktype == CHUNK_IDAT	1332:16:38403:38425	8641994	0	True				
ANR	8642226	EqualityExpression	chunktype == CHUNK_IDAT		8641994	0		==			
ANR	8642227	Identifier	chunktype		8641994	0					
ANR	8642228	Identifier	CHUNK_IDAT		8641994	1					
ANR	8642229	CompoundStatement		52:12:1542:1542	8641994	1					
ANR	8642230	IfStatement	if ( chunklen > ~ps -> IDAT_size )		8641994	0					
ANR	8642231	Condition	chunklen > ~ps -> IDAT_size	1334:19:38461:38485	8641994	0	True				
ANR	8642232	RelationalExpression	chunklen > ~ps -> IDAT_size		8641994	0		>			
ANR	8642233	Identifier	chunklen		8641994	0					
ANR	8642234	PtrMemberAccess	~ps -> IDAT_size		8641994	1					
ANR	8642235	Identifier	~ps		8641994	0					
ANR	8642236	Identifier	IDAT_size		8641994	1					
ANR	8642237	ExpressionStatement	"png_error ( pp , ""pngvalid internal image too large"" )"	1335:18:38506:38556	8641994	1	True				
ANR	8642238	CallExpression	"png_error ( pp , ""pngvalid internal image too large"" )"		8641994	0					
ANR	8642239	Callee	png_error		8641994	0					
ANR	8642240	Identifier	png_error		8641994	0					
ANR	8642241	ArgumentList	pp		8641994	1					
ANR	8642242	Argument	pp		8641994	0					
ANR	8642243	Identifier	pp		8641994	0					
ANR	8642244	Argument	"""pngvalid internal image too large"""		8641994	1					
ANR	8642245	PrimaryExpression	"""pngvalid internal image too large"""		8641994	0					
ANR	8642246	ExpressionStatement	ps -> IDAT_size += chunklen	1337:15:38574:38599	8641994	1	True				
ANR	8642247	AssignmentExpression	ps -> IDAT_size += chunklen		8641994	0		+=			
ANR	8642248	PtrMemberAccess	ps -> IDAT_size		8641994	0					
ANR	8642249	Identifier	ps		8641994	0					
ANR	8642250	Identifier	IDAT_size		8641994	1					
ANR	8642251	Identifier	chunklen		8641994	1					
ANR	8642252	ElseStatement	else		8641994	0					
ANR	8642253	IfStatement	if ( ! valid_chunktype ( chunktype ) )		8641994	0					
ANR	8642254	Condition	! valid_chunktype ( chunktype )	1340:21:38637:38663	8641994	0	True				
ANR	8642255	UnaryOperationExpression	! valid_chunktype ( chunktype )		8641994	0					
ANR	8642256	UnaryOperator	!		8641994	0					
ANR	8642257	CallExpression	valid_chunktype ( chunktype )		8641994	1					
ANR	8642258	Callee	valid_chunktype		8641994	0					
ANR	8642259	Identifier	valid_chunktype		8641994	0					
ANR	8642260	ArgumentList	chunktype		8641994	1					
ANR	8642261	Argument	chunktype		8641994	0					
ANR	8642262	Identifier	chunktype		8641994	0					
ANR	8642263	ExpressionStatement	"png_error ( pp , ""invalid chunk type"" )"	1341:15:38681:38716	8641994	1	True				
ANR	8642264	CallExpression	"png_error ( pp , ""invalid chunk type"" )"		8641994	0					
ANR	8642265	Callee	png_error		8641994	0					
ANR	8642266	Identifier	png_error		8641994	0					
ANR	8642267	ArgumentList	pp		8641994	1					
ANR	8642268	Argument	pp		8641994	0					
ANR	8642269	Identifier	pp		8641994	0					
ANR	8642270	Argument	"""invalid chunk type"""		8641994	1					
ANR	8642271	PrimaryExpression	"""invalid chunk type"""		8641994	0					
ANR	8642272	ExpressionStatement	chunklen += 12	1343:12:38731:38745	8641994	4	True				
ANR	8642273	AssignmentExpression	chunklen += 12		8641994	0		+=			
ANR	8642274	Identifier	chunklen		8641994	0					
ANR	8642275	PrimaryExpression	12		8641994	1					
ANR	8642276	ElseStatement	else		8641994	0					
ANR	8642277	CompoundStatement		68:9:1942:1960	8641994	0					
ANR	8642278	IdentifierDeclStatement	png_size_t cb = st ;	1349:9:38840:38858	8641994	0	True				
ANR	8642279	IdentifierDecl	cb = st		8641994	0					
ANR	8642280	IdentifierDeclType	png_size_t		8641994	0					
ANR	8642281	Identifier	cb		8641994	1					
ANR	8642282	AssignmentExpression	cb = st		8641994	2		=			
ANR	8642283	Identifier	st		8641994	0					
ANR	8642284	Identifier	st		8641994	1					
ANR	8642285	IfStatement	if ( cb > STORE_BUFFER_SIZE - writepos )		8641994	1					
ANR	8642286	Condition	cb > STORE_BUFFER_SIZE - writepos	1351:13:38874:38906	8641994	0	True				
ANR	8642287	RelationalExpression	cb > STORE_BUFFER_SIZE - writepos		8641994	0		>			
ANR	8642288	Identifier	cb		8641994	0					
ANR	8642289	AdditiveExpression	STORE_BUFFER_SIZE - writepos		8641994	1		-			
ANR	8642290	Identifier	STORE_BUFFER_SIZE		8641994	0					
ANR	8642291	Identifier	writepos		8641994	1					
ANR	8642292	ExpressionStatement	cb = STORE_BUFFER_SIZE - writepos	1352:12:38921:38954	8641994	1	True				
ANR	8642293	AssignmentExpression	cb = STORE_BUFFER_SIZE - writepos		8641994	0		=			
ANR	8642294	Identifier	cb		8641994	0					
ANR	8642295	AdditiveExpression	STORE_BUFFER_SIZE - writepos		8641994	1		-			
ANR	8642296	Identifier	STORE_BUFFER_SIZE		8641994	0					
ANR	8642297	Identifier	writepos		8641994	1					
ANR	8642298	IfStatement	if ( cb > chunklen - chunkpos )		8641994	2					
ANR	8642299	Condition	cb > chunklen - chunkpos	1354:13:38970:38994	8641994	0	True				
ANR	8642300	RelationalExpression	cb > chunklen - chunkpos		8641994	0		>			
ANR	8642301	Identifier	cb		8641994	0					
ANR	8642302	AdditiveExpression	chunklen - chunkpos		8641994	1		-			
ANR	8642303	Identifier	chunklen		8641994	0					
ANR	8642304	Identifier	chunkpos		8641994	1					
ANR	8642305	ExpressionStatement	cb = ( png_size_t ) ( chunklen - chunkpos )	1355:12:39033:39079	8641994	1	True				
ANR	8642306	AssignmentExpression	cb = ( png_size_t ) ( chunklen - chunkpos )		8641994	0		=			
ANR	8642307	Identifier	cb		8641994	0					
ANR	8642308	CastExpression	( png_size_t ) ( chunklen - chunkpos )		8641994	1					
ANR	8642309	CastTarget	png_size_t		8641994	0					
ANR	8642310	AdditiveExpression	chunklen - chunkpos		8641994	1		-			
ANR	8642311	Identifier	chunklen		8641994	0					
ANR	8642312	Identifier	chunkpos		8641994	1					
ANR	8642313	Statement	memcpy	1357:9:39091:39096	8641994	3	True				
ANR	8642314	Statement	(	1357:15:39097:39097	8641994	4	True				
ANR	8642315	Statement	ps	1357:16:39098:39099	8641994	5	True				
ANR	8642316	Statement	->	1357:18:39100:39101	8641994	6	True				
ANR	8642317	Statement	new	1357:20:39102:39104	8641994	7	True				
ANR	8642318	Statement	.	1357:23:39105:39105	8641994	8	True				
ANR	8642319	Statement	buffer	1357:24:39106:39111	8641994	9	True				
ANR	8642320	Statement	+	1357:31:39113:39113	8641994	10	True				
ANR	8642321	Statement	writepos	1357:33:39115:39122	8641994	11	True				
ANR	8642322	Statement	","	1357:41:39123:39123	8641994	12	True				
ANR	8642323	Statement	pb	1357:43:39125:39126	8641994	13	True				
ANR	8642324	Statement	","	1357:45:39127:39127	8641994	14	True				
ANR	8642325	Statement	cb	1357:47:39129:39130	8641994	15	True				
ANR	8642326	Statement	)	1357:49:39131:39131	8641994	16	True				
ANR	8642327	ExpressionStatement		1357:50:39132:39132	8641994	17	True				
ANR	8642328	ExpressionStatement	chunkpos += ( png_uint_32 ) cb	1358:9:39143:39178	8641994	18	True				
ANR	8642329	AssignmentExpression	chunkpos += ( png_uint_32 ) cb		8641994	0		+=			
ANR	8642330	Identifier	chunkpos		8641994	0					
ANR	8642331	CastExpression	( png_uint_32 ) cb		8641994	1					
ANR	8642332	CastTarget	png_uint_32		8641994	0					
ANR	8642333	Identifier	cb		8641994	1					
ANR	8642334	ExpressionStatement	pb += cb	1359:9:39189:39197	8641994	19	True				
ANR	8642335	AssignmentExpression	pb += cb		8641994	0		+=			
ANR	8642336	Identifier	pb		8641994	0					
ANR	8642337	Identifier	cb		8641994	1					
ANR	8642338	ExpressionStatement	writepos += cb	1360:9:39208:39222	8641994	20	True				
ANR	8642339	AssignmentExpression	writepos += cb		8641994	0		+=			
ANR	8642340	Identifier	writepos		8641994	0					
ANR	8642341	Identifier	cb		8641994	1					
ANR	8642342	ExpressionStatement	st -= cb	1361:9:39233:39241	8641994	21	True				
ANR	8642343	AssignmentExpression	st -= cb		8641994	0		-=			
ANR	8642344	Identifier	st		8641994	0					
ANR	8642345	Identifier	cb		8641994	1					
ANR	8642346	IfStatement	if ( chunkpos >= chunklen )		8641994	22					
ANR	8642347	Condition	chunkpos >= chunklen	1363:13:39257:39276	8641994	0	True				
ANR	8642348	RelationalExpression	chunkpos >= chunklen		8641994	0		>=			
ANR	8642349	Identifier	chunkpos		8641994	0					
ANR	8642350	Identifier	chunklen		8641994	1					
ANR	8642351	ExpressionStatement	chunkpos = chunktype = chunklen = 0	1364:12:39311:39346	8641994	1	True				
ANR	8642352	AssignmentExpression	chunkpos = chunktype = chunklen = 0		8641994	0		=			
ANR	8642353	Identifier	chunkpos		8641994	0					
ANR	8642354	AssignmentExpression	chunktype = chunklen = 0		8641994	1		=			
ANR	8642355	Identifier	chunktype		8641994	0					
ANR	8642356	AssignmentExpression	chunklen = 0		8641994	1		=			
ANR	8642357	Identifier	chunklen		8641994	0					
ANR	8642358	PrimaryExpression	0		8641994	1					
ANR	8642359	ExpressionStatement	ps -> writepos = writepos	1368:3:39386:39409	8641994	23	True				
ANR	8642360	AssignmentExpression	ps -> writepos = writepos		8641994	0		=			
ANR	8642361	PtrMemberAccess	ps -> writepos		8641994	0					
ANR	8642362	Identifier	ps		8641994	0					
ANR	8642363	Identifier	writepos		8641994	1					
ANR	8642364	Identifier	writepos		8641994	1					
ANR	8642365	ExpressionStatement	ps -> chunkpos = chunkpos	1369:3:39414:39437	8641994	24	True				
ANR	8642366	AssignmentExpression	ps -> chunkpos = chunkpos		8641994	0		=			
ANR	8642367	PtrMemberAccess	ps -> chunkpos		8641994	0					
ANR	8642368	Identifier	ps		8641994	0					
ANR	8642369	Identifier	chunkpos		8641994	1					
ANR	8642370	Identifier	chunkpos		8641994	1					
ANR	8642371	ExpressionStatement	ps -> chunktype = chunktype	1370:3:39442:39467	8641994	25	True				
ANR	8642372	AssignmentExpression	ps -> chunktype = chunktype		8641994	0		=			
ANR	8642373	PtrMemberAccess	ps -> chunktype		8641994	0					
ANR	8642374	Identifier	ps		8641994	0					
ANR	8642375	Identifier	chunktype		8641994	1					
ANR	8642376	Identifier	chunktype		8641994	1					
ANR	8642377	ExpressionStatement	ps -> chunklen = chunklen	1371:3:39472:39495	8641994	26	True				
ANR	8642378	AssignmentExpression	ps -> chunklen = chunklen		8641994	0		=			
ANR	8642379	PtrMemberAccess	ps -> chunklen		8641994	0					
ANR	8642380	Identifier	ps		8641994	0					
ANR	8642381	Identifier	chunklen		8641994	1					
ANR	8642382	Identifier	chunklen		8641994	1					
ANR	8642383	ReturnType	static void PNGCBAPI		8641994	1					
ANR	8642384	Identifier	store_write		8641994	2					
ANR	8642385	ParameterList	"png_structp ppIn , png_bytep pb , png_size_t st"		8641994	3					
ANR	8642386	Parameter	png_structp ppIn	1281:12:36850:36865	8641994	0	True				
ANR	8642387	ParameterType	png_structp		8641994	0					
ANR	8642388	Identifier	ppIn		8641994	1					
ANR	8642389	Parameter	png_bytep pb	1281:30:36868:36879	8641994	1	True				
ANR	8642390	ParameterType	png_bytep		8641994	0					
ANR	8642391	Identifier	pb		8641994	1					
ANR	8642392	Parameter	png_size_t st	1281:44:36882:36894	8641994	2	True				
ANR	8642393	ParameterType	png_size_t		8641994	0					
ANR	8642394	Identifier	st		8641994	1					
ANR	8642395	CFGEntryNode	ENTRY		8641994		True				
ANR	8642396	CFGExitNode	EXIT		8641994		True				
ANR	8642397	Symbol	pp		8641994						
ANR	8642398	Symbol	~ps		8641994						
ANR	8642399	Symbol	ps		8641994						
ANR	8642400	Symbol	chunkpos		8641994						
ANR	8642401	Symbol	valid_chunktype		8641994						
ANR	8642402	Symbol	~ps -> IDAT_size		8641994						
ANR	8642403	Symbol	STORE_BUFFER_SIZE		8641994						
ANR	8642404	Symbol	chunklen		8641994						
ANR	8642405	Symbol	ps -> writepos		8641994						
ANR	8642406	Symbol	buffer		8641994						
ANR	8642407	Symbol	ps -> chunklen		8641994						
ANR	8642408	Symbol	ps -> chunkpos		8641994						
ANR	8642409	Symbol	chunktype		8641994						
ANR	8642410	Symbol	cb		8641994						
ANR	8642411	Symbol	* pb ++		8641994						
ANR	8642412	Symbol	st		8641994						
ANR	8642413	Symbol	b		8641994						
ANR	8642414	Symbol	* buffer		8641994						
ANR	8642415	Symbol	writepos		8641994						
ANR	8642416	Symbol	* ps		8641994						
ANR	8642417	Symbol	* ~ps		8641994						
ANR	8642418	Symbol	ppIn		8641994						
ANR	8642419	Symbol	pb		8641994						
ANR	8642420	Symbol	ps -> chunktype		8641994						
ANR	8642421	Symbol	ps -> pwrite		8641994						
ANR	8642422	Symbol	CHUNK_IDAT		8641994						
ANR	8642423	Symbol	ps -> IDAT_size		8641994						
ANR	8642424	Function	store_flush	1374:0:39500:39586							
ANR	8642425	FunctionDef	store_flush (png_structp ppIn)		8642424	0					
ANR	8642426	CompoundStatement		1376:0:39551:39586	8642424	0					
ANR	8642427	Statement	UNUSED	1377:3:39556:39561	8642424	0	True				
ANR	8642428	Statement	(	1377:9:39562:39562	8642424	1	True				
ANR	8642429	Statement	ppIn	1377:10:39563:39566	8642424	2	True				
ANR	8642430	Statement	)	1377:14:39567:39567	8642424	3	True				
ANR	8642431	ReturnType	static void PNGCBAPI		8642424	1					
ANR	8642432	Identifier	store_flush		8642424	2					
ANR	8642433	ParameterList	png_structp ppIn		8642424	3					
ANR	8642434	Parameter	png_structp ppIn	1375:12:39533:39548	8642424	0	True				
ANR	8642435	ParameterType	png_structp		8642424	0					
ANR	8642436	Identifier	ppIn		8642424	1					
ANR	8642437	CFGEntryNode	ENTRY		8642424		True				
ANR	8642438	CFGExitNode	EXIT		8642424		True				
ANR	8642439	Symbol	ppIn		8642424						
ANR	8642440	Function	store_read_buffer_size	1381:0:39615:39843							
ANR	8642441	FunctionDef	store_read_buffer_size (png_store * ps)		8642440	0					
ANR	8642442	CompoundStatement		1383:0:39667:39843	8642440	0					
ANR	8642443	IfStatement	if ( ps -> next != & ps -> current -> data )		8642440	0					
ANR	8642444	Condition	ps -> next != & ps -> current -> data	1385:7:39744:39773	8642440	0	True				
ANR	8642445	EqualityExpression	ps -> next != & ps -> current -> data		8642440	0		!=			
ANR	8642446	PtrMemberAccess	ps -> next		8642440	0					
ANR	8642447	Identifier	ps		8642440	0					
ANR	8642448	Identifier	next		8642440	1					
ANR	8642449	UnaryOperationExpression	& ps -> current -> data		8642440	1					
ANR	8642450	UnaryOperator	&		8642440	0					
ANR	8642451	PtrMemberAccess	ps -> current -> data		8642440	1					
ANR	8642452	PtrMemberAccess	ps -> current		8642440	0					
ANR	8642453	Identifier	ps		8642440	0					
ANR	8642454	Identifier	current		8642440	1					
ANR	8642455	Identifier	data		8642440	1					
ANR	8642456	ReturnStatement	return STORE_BUFFER_SIZE ;	1386:6:39782:39806	8642440	1	True				
ANR	8642457	Identifier	STORE_BUFFER_SIZE		8642440	0					
ANR	8642458	ReturnStatement	return ps -> current -> datacount ;	1388:3:39812:39841	8642440	1	True				
ANR	8642459	PtrMemberAccess	ps -> current -> datacount		8642440	0					
ANR	8642460	PtrMemberAccess	ps -> current		8642440	0					
ANR	8642461	Identifier	ps		8642440	0					
ANR	8642462	Identifier	current		8642440	1					
ANR	8642463	Identifier	datacount		8642440	1					
ANR	8642464	ReturnType	static size_t		8642440	1					
ANR	8642465	Identifier	store_read_buffer_size		8642440	2					
ANR	8642466	ParameterList	png_store * ps		8642440	3					
ANR	8642467	Parameter	png_store * ps	1382:23:39652:39664	8642440	0	True				
ANR	8642468	ParameterType	png_store *		8642440	0					
ANR	8642469	Identifier	ps		8642440	1					
ANR	8642470	CFGEntryNode	ENTRY		8642440		True				
ANR	8642471	CFGExitNode	EXIT		8642440		True				
ANR	8642472	Symbol	& ps -> current -> data		8642440						
ANR	8642473	Symbol	ps		8642440						
ANR	8642474	Symbol	ps -> current		8642440						
ANR	8642475	Symbol	ps -> next		8642440						
ANR	8642476	Symbol	STORE_BUFFER_SIZE		8642440						
ANR	8642477	Symbol	* ps		8642440						
ANR	8642478	Symbol	* ps -> current		8642440						
ANR	8642479	Symbol	* * ps		8642440						
ANR	8642480	Symbol	ps -> current -> datacount		8642440						
ANR	8642481	Function	store_read_buffer_avail	1392:0:39891:40401							
ANR	8642482	FunctionDef	store_read_buffer_avail (png_store * ps)		8642481	0					
ANR	8642483	CompoundStatement		1394:0:39944:40401	8642481	0					
ANR	8642484	IfStatement	if ( ps -> current != NULL && ps -> next != NULL )		8642481	0					
ANR	8642485	Condition	ps -> current != NULL && ps -> next != NULL	1395:7:39953:39991	8642481	0	True				
ANR	8642486	AndExpression	ps -> current != NULL && ps -> next != NULL		8642481	0		&&			
ANR	8642487	EqualityExpression	ps -> current != NULL		8642481	0		!=			
ANR	8642488	PtrMemberAccess	ps -> current		8642481	0					
ANR	8642489	Identifier	ps		8642481	0					
ANR	8642490	Identifier	current		8642481	1					
ANR	8642491	Identifier	NULL		8642481	1					
ANR	8642492	EqualityExpression	ps -> next != NULL		8642481	1		!=			
ANR	8642493	PtrMemberAccess	ps -> next		8642481	0					
ANR	8642494	Identifier	ps		8642481	0					
ANR	8642495	Identifier	next		8642481	1					
ANR	8642496	Identifier	NULL		8642481	1					
ANR	8642497	CompoundStatement		5:6:111:150	8642481	1					
ANR	8642498	IdentifierDeclStatement	png_store_buffer * next = & ps -> current -> data ;	1397:6:40005:40048	8642481	0	True				
ANR	8642499	IdentifierDecl	* next = & ps -> current -> data		8642481	0					
ANR	8642500	IdentifierDeclType	png_store_buffer *		8642481	0					
ANR	8642501	Identifier	next		8642481	1					
ANR	8642502	AssignmentExpression	* next = & ps -> current -> data		8642481	2		=			
ANR	8642503	Identifier	next		8642481	0					
ANR	8642504	UnaryOperationExpression	& ps -> current -> data		8642481	1					
ANR	8642505	UnaryOperator	&		8642481	0					
ANR	8642506	PtrMemberAccess	ps -> current -> data		8642481	1					
ANR	8642507	PtrMemberAccess	ps -> current		8642481	0					
ANR	8642508	Identifier	ps		8642481	0					
ANR	8642509	Identifier	current		8642481	1					
ANR	8642510	Identifier	data		8642481	1					
ANR	8642511	IdentifierDeclStatement	size_t cbAvail = ps -> current -> datacount ;	1398:6:40056:40095	8642481	1	True				
ANR	8642512	IdentifierDecl	cbAvail = ps -> current -> datacount		8642481	0					
ANR	8642513	IdentifierDeclType	size_t		8642481	0					
ANR	8642514	Identifier	cbAvail		8642481	1					
ANR	8642515	AssignmentExpression	cbAvail = ps -> current -> datacount		8642481	2		=			
ANR	8642516	Identifier	cbAvail		8642481	0					
ANR	8642517	PtrMemberAccess	ps -> current -> datacount		8642481	1					
ANR	8642518	PtrMemberAccess	ps -> current		8642481	0					
ANR	8642519	Identifier	ps		8642481	0					
ANR	8642520	Identifier	current		8642481	1					
ANR	8642521	Identifier	datacount		8642481	1					
ANR	8642522	WhileStatement	while ( next != ps -> next && next != NULL )		8642481	2					
ANR	8642523	Condition	next != ps -> next && next != NULL	1400:13:40111:40142	8642481	0	True				
ANR	8642524	AndExpression	next != ps -> next && next != NULL		8642481	0		&&			
ANR	8642525	EqualityExpression	next != ps -> next		8642481	0		!=			
ANR	8642526	Identifier	next		8642481	0					
ANR	8642527	PtrMemberAccess	ps -> next		8642481	1					
ANR	8642528	Identifier	ps		8642481	0					
ANR	8642529	Identifier	next		8642481	1					
ANR	8642530	EqualityExpression	next != NULL		8642481	1		!=			
ANR	8642531	Identifier	next		8642481	0					
ANR	8642532	Identifier	NULL		8642481	1					
ANR	8642533	CompoundStatement		8:6:206:206	8642481	1					
ANR	8642534	ExpressionStatement	next = next -> prev	1402:9:40162:40179	8642481	0	True				
ANR	8642535	AssignmentExpression	next = next -> prev		8642481	0		=			
ANR	8642536	Identifier	next		8642481	0					
ANR	8642537	PtrMemberAccess	next -> prev		8642481	1					
ANR	8642538	Identifier	next		8642481	0					
ANR	8642539	Identifier	prev		8642481	1					
ANR	8642540	ExpressionStatement	cbAvail += STORE_BUFFER_SIZE	1403:9:40190:40218	8642481	1	True				
ANR	8642541	AssignmentExpression	cbAvail += STORE_BUFFER_SIZE		8642481	0		+=			
ANR	8642542	Identifier	cbAvail		8642481	0					
ANR	8642543	Identifier	STORE_BUFFER_SIZE		8642481	1					
ANR	8642544	IfStatement	if ( next != ps -> next )		8642481	3					
ANR	8642545	Condition	next != ps -> next	1406:10:40239:40254	8642481	0	True				
ANR	8642546	EqualityExpression	next != ps -> next		8642481	0		!=			
ANR	8642547	Identifier	next		8642481	0					
ANR	8642548	PtrMemberAccess	ps -> next		8642481	1					
ANR	8642549	Identifier	ps		8642481	0					
ANR	8642550	Identifier	next		8642481	1					
ANR	8642551	ExpressionStatement	"png_error ( ps -> pread , ""buffer read error"" )"	1407:9:40266:40307	8642481	1	True				
ANR	8642552	CallExpression	"png_error ( ps -> pread , ""buffer read error"" )"		8642481	0					
ANR	8642553	Callee	png_error		8642481	0					
ANR	8642554	Identifier	png_error		8642481	0					
ANR	8642555	ArgumentList	ps -> pread		8642481	1					
ANR	8642556	Argument	ps -> pread		8642481	0					
ANR	8642557	PtrMemberAccess	ps -> pread		8642481	0					
ANR	8642558	Identifier	ps		8642481	0					
ANR	8642559	Identifier	pread		8642481	1					
ANR	8642560	Argument	"""buffer read error"""		8642481	1					
ANR	8642561	PrimaryExpression	"""buffer read error"""		8642481	0					
ANR	8642562	IfStatement	if ( cbAvail > ps -> readpos )		8642481	4					
ANR	8642563	Condition	cbAvail > ps -> readpos	1409:10:40320:40340	8642481	0	True				
ANR	8642564	RelationalExpression	cbAvail > ps -> readpos		8642481	0		>			
ANR	8642565	Identifier	cbAvail		8642481	0					
ANR	8642566	PtrMemberAccess	ps -> readpos		8642481	1					
ANR	8642567	Identifier	ps		8642481	0					
ANR	8642568	Identifier	readpos		8642481	1					
ANR	8642569	ReturnStatement	return cbAvail - ps -> readpos ;	1410:9:40352:40380	8642481	1	True				
ANR	8642570	AdditiveExpression	cbAvail - ps -> readpos		8642481	0		-			
ANR	8642571	Identifier	cbAvail		8642481	0					
ANR	8642572	PtrMemberAccess	ps -> readpos		8642481	1					
ANR	8642573	Identifier	ps		8642481	0					
ANR	8642574	Identifier	readpos		8642481	1					
ANR	8642575	ReturnStatement	return 0 ;	1413:3:40391:40399	8642481	1	True				
ANR	8642576	PrimaryExpression	0		8642481	0					
ANR	8642577	ReturnType	static size_t		8642481	1					
ANR	8642578	Identifier	store_read_buffer_avail		8642481	2					
ANR	8642579	ParameterList	png_store * ps		8642481	3					
ANR	8642580	Parameter	png_store * ps	1393:24:39929:39941	8642481	0	True				
ANR	8642581	ParameterType	png_store *		8642481	0					
ANR	8642582	Identifier	ps		8642481	1					
ANR	8642583	CFGEntryNode	ENTRY		8642481		True				
ANR	8642584	CFGExitNode	EXIT		8642481		True				
ANR	8642585	Symbol	next		8642481						
ANR	8642586	Symbol	ps		8642481						
ANR	8642587	Symbol	NULL		8642481						
ANR	8642588	Symbol	ps -> current		8642481						
ANR	8642589	Symbol	ps -> next		8642481						
ANR	8642590	Symbol	STORE_BUFFER_SIZE		8642481						
ANR	8642591	Symbol	* ps		8642481						
ANR	8642592	Symbol	* next		8642481						
ANR	8642593	Symbol	* * ps		8642481						
ANR	8642594	Symbol	* ps -> current		8642481						
ANR	8642595	Symbol	& ps -> current -> data		8642481						
ANR	8642596	Symbol	ps -> readpos		8642481						
ANR	8642597	Symbol	next -> prev		8642481						
ANR	8642598	Symbol	cbAvail		8642481						
ANR	8642599	Symbol	ps -> current -> datacount		8642481						
ANR	8642600	Symbol	ps -> pread		8642481						
ANR	8642601	Function	store_read_buffer_next	1416:0:40404:40849							
ANR	8642602	FunctionDef	store_read_buffer_next (png_store * ps)		8642601	0					
ANR	8642603	CompoundStatement		1418:0:40453:40849	8642601	0					
ANR	8642604	IdentifierDeclStatement	png_store_buffer * pbOld = ps -> next ;	1419:3:40458:40492	8642601	0	True				
ANR	8642605	IdentifierDecl	* pbOld = ps -> next		8642601	0					
ANR	8642606	IdentifierDeclType	png_store_buffer *		8642601	0					
ANR	8642607	Identifier	pbOld		8642601	1					
ANR	8642608	AssignmentExpression	* pbOld = ps -> next		8642601	2		=			
ANR	8642609	Identifier	pbOld		8642601	0					
ANR	8642610	PtrMemberAccess	ps -> next		8642601	1					
ANR	8642611	Identifier	ps		8642601	0					
ANR	8642612	Identifier	next		8642601	1					
ANR	8642613	IdentifierDeclStatement	png_store_buffer * pbNew = & ps -> current -> data ;	1420:3:40497:40541	8642601	1	True				
ANR	8642614	IdentifierDecl	* pbNew = & ps -> current -> data		8642601	0					
ANR	8642615	IdentifierDeclType	png_store_buffer *		8642601	0					
ANR	8642616	Identifier	pbNew		8642601	1					
ANR	8642617	AssignmentExpression	* pbNew = & ps -> current -> data		8642601	2		=			
ANR	8642618	Identifier	pbNew		8642601	0					
ANR	8642619	UnaryOperationExpression	& ps -> current -> data		8642601	1					
ANR	8642620	UnaryOperator	&		8642601	0					
ANR	8642621	PtrMemberAccess	ps -> current -> data		8642601	1					
ANR	8642622	PtrMemberAccess	ps -> current		8642601	0					
ANR	8642623	Identifier	ps		8642601	0					
ANR	8642624	Identifier	current		8642601	1					
ANR	8642625	Identifier	data		8642601	1					
ANR	8642626	IfStatement	if ( pbOld != pbNew )		8642601	2					
ANR	8642627	Condition	pbOld != pbNew	1421:7:40550:40563	8642601	0	True				
ANR	8642628	EqualityExpression	pbOld != pbNew		8642601	0		!=			
ANR	8642629	Identifier	pbOld		8642601	0					
ANR	8642630	Identifier	pbNew		8642601	1					
ANR	8642631	CompoundStatement		5:3:115:115	8642601	1					
ANR	8642632	WhileStatement	while ( pbNew != NULL && pbNew -> prev != pbOld )		8642601	0					
ANR	8642633	Condition	pbNew != NULL && pbNew -> prev != pbOld	1423:13:40584:40620	8642601	0	True				
ANR	8642634	AndExpression	pbNew != NULL && pbNew -> prev != pbOld		8642601	0		&&			
ANR	8642635	EqualityExpression	pbNew != NULL		8642601	0		!=			
ANR	8642636	Identifier	pbNew		8642601	0					
ANR	8642637	Identifier	NULL		8642601	1					
ANR	8642638	EqualityExpression	pbNew -> prev != pbOld		8642601	1		!=			
ANR	8642639	PtrMemberAccess	pbNew -> prev		8642601	0					
ANR	8642640	Identifier	pbNew		8642601	0					
ANR	8642641	Identifier	prev		8642601	1					
ANR	8642642	Identifier	pbOld		8642601	1					
ANR	8642643	ExpressionStatement	pbNew = pbNew -> prev	1424:9:40632:40651	8642601	1	True				
ANR	8642644	AssignmentExpression	pbNew = pbNew -> prev		8642601	0		=			
ANR	8642645	Identifier	pbNew		8642601	0					
ANR	8642646	PtrMemberAccess	pbNew -> prev		8642601	1					
ANR	8642647	Identifier	pbNew		8642601	0					
ANR	8642648	Identifier	prev		8642601	1					
ANR	8642649	IfStatement	if ( pbNew != NULL )		8642601	1					
ANR	8642650	Condition	pbNew != NULL	1426:10:40664:40676	8642601	0	True				
ANR	8642651	EqualityExpression	pbNew != NULL		8642601	0		!=			
ANR	8642652	Identifier	pbNew		8642601	0					
ANR	8642653	Identifier	NULL		8642601	1					
ANR	8642654	CompoundStatement		10:6:231:231	8642601	1					
ANR	8642655	ExpressionStatement	ps -> next = pbNew	1428:9:40696:40712	8642601	0	True				
ANR	8642656	AssignmentExpression	ps -> next = pbNew		8642601	0		=			
ANR	8642657	PtrMemberAccess	ps -> next		8642601	0					
ANR	8642658	Identifier	ps		8642601	0					
ANR	8642659	Identifier	next		8642601	1					
ANR	8642660	Identifier	pbNew		8642601	1					
ANR	8642661	ExpressionStatement	ps -> readpos = 0	1429:9:40723:40738	8642601	1	True				
ANR	8642662	AssignmentExpression	ps -> readpos = 0		8642601	0		=			
ANR	8642663	PtrMemberAccess	ps -> readpos		8642601	0					
ANR	8642664	Identifier	ps		8642601	0					
ANR	8642665	Identifier	readpos		8642601	1					
ANR	8642666	PrimaryExpression	0		8642601	1					
ANR	8642667	ReturnStatement	return 1 ;	1430:9:40749:40757	8642601	2	True				
ANR	8642668	PrimaryExpression	1		8642601	0					
ANR	8642669	ExpressionStatement	"png_error ( ps -> pread , ""buffer lost"" )"	1433:6:40774:40809	8642601	2	True				
ANR	8642670	CallExpression	"png_error ( ps -> pread , ""buffer lost"" )"		8642601	0					
ANR	8642671	Callee	png_error		8642601	0					
ANR	8642672	Identifier	png_error		8642601	0					
ANR	8642673	ArgumentList	ps -> pread		8642601	1					
ANR	8642674	Argument	ps -> pread		8642601	0					
ANR	8642675	PtrMemberAccess	ps -> pread		8642601	0					
ANR	8642676	Identifier	ps		8642601	0					
ANR	8642677	Identifier	pread		8642601	1					
ANR	8642678	Argument	"""buffer lost"""		8642601	1					
ANR	8642679	PrimaryExpression	"""buffer lost"""		8642601	0					
ANR	8642680	ReturnStatement	return 0 ;	1436:3:40820:40828	8642601	3	True				
ANR	8642681	PrimaryExpression	0		8642601	0					
ANR	8642682	ReturnType	static int		8642601	1					
ANR	8642683	Identifier	store_read_buffer_next		8642601	2					
ANR	8642684	ParameterList	png_store * ps		8642601	3					
ANR	8642685	Parameter	png_store * ps	1417:23:40438:40450	8642601	0	True				
ANR	8642686	ParameterType	png_store *		8642601	0					
ANR	8642687	Identifier	ps		8642601	1					
ANR	8642688	CFGEntryNode	ENTRY		8642601		True				
ANR	8642689	CFGExitNode	EXIT		8642601		True				
ANR	8642690	Symbol	& ps -> current -> data		8642601						
ANR	8642691	Symbol	* pbNew		8642601						
ANR	8642692	Symbol	ps -> readpos		8642601						
ANR	8642693	Symbol	ps		8642601						
ANR	8642694	Symbol	NULL		8642601						
ANR	8642695	Symbol	ps -> current		8642601						
ANR	8642696	Symbol	ps -> next		8642601						
ANR	8642697	Symbol	pbNew		8642601						
ANR	8642698	Symbol	* ps		8642601						
ANR	8642699	Symbol	pbOld		8642601						
ANR	8642700	Symbol	pbNew -> prev		8642601						
ANR	8642701	Symbol	ps -> pread		8642601						
ANR	8642702	Function	store_read_imp	1442:0:41005:41598							
ANR	8642703	FunctionDef	"store_read_imp (png_store * ps , png_bytep pb , png_size_t st)"		8642702	0					
ANR	8642704	CompoundStatement		1444:0:41076:41598	8642702	0					
ANR	8642705	IfStatement	if ( ps -> current == NULL || ps -> next == NULL )		8642702	0					
ANR	8642706	Condition	ps -> current == NULL || ps -> next == NULL	1445:7:41085:41123	8642702	0	True				
ANR	8642707	OrExpression	ps -> current == NULL || ps -> next == NULL		8642702	0		||			
ANR	8642708	EqualityExpression	ps -> current == NULL		8642702	0		==			
ANR	8642709	PtrMemberAccess	ps -> current		8642702	0					
ANR	8642710	Identifier	ps		8642702	0					
ANR	8642711	Identifier	current		8642702	1					
ANR	8642712	Identifier	NULL		8642702	1					
ANR	8642713	EqualityExpression	ps -> next == NULL		8642702	1		==			
ANR	8642714	PtrMemberAccess	ps -> next		8642702	0					
ANR	8642715	Identifier	ps		8642702	0					
ANR	8642716	Identifier	next		8642702	1					
ANR	8642717	Identifier	NULL		8642702	1					
ANR	8642718	ExpressionStatement	"png_error ( ps -> pread , ""store state damaged"" )"	1446:6:41132:41175	8642702	1	True				
ANR	8642719	CallExpression	"png_error ( ps -> pread , ""store state damaged"" )"		8642702	0					
ANR	8642720	Callee	png_error		8642702	0					
ANR	8642721	Identifier	png_error		8642702	0					
ANR	8642722	ArgumentList	ps -> pread		8642702	1					
ANR	8642723	Argument	ps -> pread		8642702	0					
ANR	8642724	PtrMemberAccess	ps -> pread		8642702	0					
ANR	8642725	Identifier	ps		8642702	0					
ANR	8642726	Identifier	pread		8642702	1					
ANR	8642727	Argument	"""store state damaged"""		8642702	1					
ANR	8642728	PrimaryExpression	"""store state damaged"""		8642702	0					
ANR	8642729	WhileStatement	while ( st > 0 )		8642702	1					
ANR	8642730	Condition	st > 0	1448:10:41188:41193	8642702	0	True				
ANR	8642731	RelationalExpression	st > 0		8642702	0		>			
ANR	8642732	Identifier	st		8642702	0					
ANR	8642733	PrimaryExpression	0		8642702	1					
ANR	8642734	CompoundStatement		7:6:130:187	8642702	1					
ANR	8642735	IdentifierDeclStatement	size_t cbAvail = store_read_buffer_size ( ps ) - ps -> readpos ;	1450:6:41207:41264	8642702	0	True				
ANR	8642736	IdentifierDecl	cbAvail = store_read_buffer_size ( ps ) - ps -> readpos		8642702	0					
ANR	8642737	IdentifierDeclType	size_t		8642702	0					
ANR	8642738	Identifier	cbAvail		8642702	1					
ANR	8642739	AssignmentExpression	cbAvail = store_read_buffer_size ( ps ) - ps -> readpos		8642702	2		=			
ANR	8642740	Identifier	cbAvail		8642702	0					
ANR	8642741	AdditiveExpression	store_read_buffer_size ( ps ) - ps -> readpos		8642702	1		-			
ANR	8642742	CallExpression	store_read_buffer_size ( ps )		8642702	0					
ANR	8642743	Callee	store_read_buffer_size		8642702	0					
ANR	8642744	Identifier	store_read_buffer_size		8642702	0					
ANR	8642745	ArgumentList	ps		8642702	1					
ANR	8642746	Argument	ps		8642702	0					
ANR	8642747	Identifier	ps		8642702	0					
ANR	8642748	PtrMemberAccess	ps -> readpos		8642702	1					
ANR	8642749	Identifier	ps		8642702	0					
ANR	8642750	Identifier	readpos		8642702	1					
ANR	8642751	IfStatement	if ( cbAvail > 0 )		8642702	1					
ANR	8642752	Condition	cbAvail > 0	1452:10:41277:41287	8642702	0	True				
ANR	8642753	RelationalExpression	cbAvail > 0		8642702	0		>			
ANR	8642754	Identifier	cbAvail		8642702	0					
ANR	8642755	PrimaryExpression	0		8642702	1					
ANR	8642756	CompoundStatement		10:6:219:219	8642702	1					
ANR	8642757	IfStatement	if ( cbAvail > st )		8642702	0					
ANR	8642758	Condition	cbAvail > st	1454:13:41311:41322	8642702	0	True				
ANR	8642759	RelationalExpression	cbAvail > st		8642702	0		>			
ANR	8642760	Identifier	cbAvail		8642702	0					
ANR	8642761	Identifier	st		8642702	1					
ANR	8642762	ExpressionStatement	cbAvail = st	1454:27:41325:41337	8642702	1	True				
ANR	8642763	AssignmentExpression	cbAvail = st		8642702	0		=			
ANR	8642764	Identifier	cbAvail		8642702	0					
ANR	8642765	Identifier	st		8642702	1					
ANR	8642766	ExpressionStatement	"memcpy ( pb , ps -> next -> buffer + ps -> readpos , cbAvail )"	1455:9:41348:41399	8642702	1	True				
ANR	8642767	CallExpression	"memcpy ( pb , ps -> next -> buffer + ps -> readpos , cbAvail )"		8642702	0					
ANR	8642768	Callee	memcpy		8642702	0					
ANR	8642769	Identifier	memcpy		8642702	0					
ANR	8642770	ArgumentList	pb		8642702	1					
ANR	8642771	Argument	pb		8642702	0					
ANR	8642772	Identifier	pb		8642702	0					
ANR	8642773	Argument	ps -> next -> buffer + ps -> readpos		8642702	1					
ANR	8642774	AdditiveExpression	ps -> next -> buffer + ps -> readpos		8642702	0		+			
ANR	8642775	PtrMemberAccess	ps -> next -> buffer		8642702	0					
ANR	8642776	PtrMemberAccess	ps -> next		8642702	0					
ANR	8642777	Identifier	ps		8642702	0					
ANR	8642778	Identifier	next		8642702	1					
ANR	8642779	Identifier	buffer		8642702	1					
ANR	8642780	PtrMemberAccess	ps -> readpos		8642702	1					
ANR	8642781	Identifier	ps		8642702	0					
ANR	8642782	Identifier	readpos		8642702	1					
ANR	8642783	Argument	cbAvail		8642702	2					
ANR	8642784	Identifier	cbAvail		8642702	0					
ANR	8642785	ExpressionStatement	st -= cbAvail	1456:9:41410:41423	8642702	2	True				
ANR	8642786	AssignmentExpression	st -= cbAvail		8642702	0		-=			
ANR	8642787	Identifier	st		8642702	0					
ANR	8642788	Identifier	cbAvail		8642702	1					
ANR	8642789	ExpressionStatement	pb += cbAvail	1457:9:41434:41447	8642702	3	True				
ANR	8642790	AssignmentExpression	pb += cbAvail		8642702	0		+=			
ANR	8642791	Identifier	pb		8642702	0					
ANR	8642792	Identifier	cbAvail		8642702	1					
ANR	8642793	ExpressionStatement	ps -> readpos += cbAvail	1458:9:41458:41480	8642702	4	True				
ANR	8642794	AssignmentExpression	ps -> readpos += cbAvail		8642702	0		+=			
ANR	8642795	PtrMemberAccess	ps -> readpos		8642702	0					
ANR	8642796	Identifier	ps		8642702	0					
ANR	8642797	Identifier	readpos		8642702	1					
ANR	8642798	Identifier	cbAvail		8642702	1					
ANR	8642799	ElseStatement	else		8642702	0					
ANR	8642800	IfStatement	if ( ! store_read_buffer_next ( ps ) )		8642702	0					
ANR	8642801	Condition	! store_read_buffer_next ( ps )	1461:15:41506:41532	8642702	0	True				
ANR	8642802	UnaryOperationExpression	! store_read_buffer_next ( ps )		8642702	0					
ANR	8642803	UnaryOperator	!		8642702	0					
ANR	8642804	CallExpression	store_read_buffer_next ( ps )		8642702	1					
ANR	8642805	Callee	store_read_buffer_next		8642702	0					
ANR	8642806	Identifier	store_read_buffer_next		8642702	0					
ANR	8642807	ArgumentList	ps		8642702	1					
ANR	8642808	Argument	ps		8642702	0					
ANR	8642809	Identifier	ps		8642702	0					
ANR	8642810	ExpressionStatement	"png_error ( ps -> pread , ""read beyond end of file"" )"	1462:9:41544:41591	8642702	1	True				
ANR	8642811	CallExpression	"png_error ( ps -> pread , ""read beyond end of file"" )"		8642702	0					
ANR	8642812	Callee	png_error		8642702	0					
ANR	8642813	Identifier	png_error		8642702	0					
ANR	8642814	ArgumentList	ps -> pread		8642702	1					
ANR	8642815	Argument	ps -> pread		8642702	0					
ANR	8642816	PtrMemberAccess	ps -> pread		8642702	0					
ANR	8642817	Identifier	ps		8642702	0					
ANR	8642818	Identifier	pread		8642702	1					
ANR	8642819	Argument	"""read beyond end of file"""		8642702	1					
ANR	8642820	PrimaryExpression	"""read beyond end of file"""		8642702	0					
ANR	8642821	ReturnType	static void		8642702	1					
ANR	8642822	Identifier	store_read_imp		8642702	2					
ANR	8642823	ParameterList	"png_store * ps , png_bytep pb , png_size_t st"		8642702	3					
ANR	8642824	Parameter	png_store * ps	1443:15:41032:41044	8642702	0	True				
ANR	8642825	ParameterType	png_store *		8642702	0					
ANR	8642826	Identifier	ps		8642702	1					
ANR	8642827	Parameter	png_bytep pb	1443:30:41047:41058	8642702	1	True				
ANR	8642828	ParameterType	png_bytep		8642702	0					
ANR	8642829	Identifier	pb		8642702	1					
ANR	8642830	Parameter	png_size_t st	1443:44:41061:41073	8642702	2	True				
ANR	8642831	ParameterType	png_size_t		8642702	0					
ANR	8642832	Identifier	st		8642702	1					
ANR	8642833	CFGEntryNode	ENTRY		8642702		True				
ANR	8642834	CFGExitNode	EXIT		8642702		True				
ANR	8642835	Symbol	* ps -> next		8642702						
ANR	8642836	Symbol	st		8642702						
ANR	8642837	Symbol	ps		8642702						
ANR	8642838	Symbol	NULL		8642702						
ANR	8642839	Symbol	store_read_buffer_size		8642702						
ANR	8642840	Symbol	ps -> next -> buffer		8642702						
ANR	8642841	Symbol	ps -> current		8642702						
ANR	8642842	Symbol	ps -> next		8642702						
ANR	8642843	Symbol	* ps		8642702						
ANR	8642844	Symbol	* * ps		8642702						
ANR	8642845	Symbol	ps -> readpos		8642702						
ANR	8642846	Symbol	pb		8642702						
ANR	8642847	Symbol	store_read_buffer_next		8642702						
ANR	8642848	Symbol	cbAvail		8642702						
ANR	8642849	Symbol	ps -> pread		8642702						
ANR	8642850	Function	store_read_chunk	1466:0:41601:48864							
ANR	8642851	FunctionDef	"store_read_chunk (png_store * ps , png_bytep pb , const png_size_t max , const png_size_t min)"		8642850	0					
ANR	8642852	CompoundStatement		1469:0:41715:48864	8642850	0					
ANR	8642853	IdentifierDeclStatement	png_uint_32 chunklen = ps -> chunklen ;	1470:3:41720:41755	8642850	0	True				
ANR	8642854	IdentifierDecl	chunklen = ps -> chunklen		8642850	0					
ANR	8642855	IdentifierDeclType	png_uint_32		8642850	0					
ANR	8642856	Identifier	chunklen		8642850	1					
ANR	8642857	AssignmentExpression	chunklen = ps -> chunklen		8642850	2		=			
ANR	8642858	Identifier	chunklen		8642850	0					
ANR	8642859	PtrMemberAccess	ps -> chunklen		8642850	1					
ANR	8642860	Identifier	ps		8642850	0					
ANR	8642861	Identifier	chunklen		8642850	1					
ANR	8642862	IdentifierDeclStatement	png_uint_32 chunktype = ps -> chunktype ;	1471:3:41760:41797	8642850	1	True				
ANR	8642863	IdentifierDecl	chunktype = ps -> chunktype		8642850	0					
ANR	8642864	IdentifierDeclType	png_uint_32		8642850	0					
ANR	8642865	Identifier	chunktype		8642850	1					
ANR	8642866	AssignmentExpression	chunktype = ps -> chunktype		8642850	2		=			
ANR	8642867	Identifier	chunktype		8642850	0					
ANR	8642868	PtrMemberAccess	ps -> chunktype		8642850	1					
ANR	8642869	Identifier	ps		8642850	0					
ANR	8642870	Identifier	chunktype		8642850	1					
ANR	8642871	IdentifierDeclStatement	png_uint_32 chunkpos = ps -> chunkpos ;	1472:3:41802:41837	8642850	2	True				
ANR	8642872	IdentifierDecl	chunkpos = ps -> chunkpos		8642850	0					
ANR	8642873	IdentifierDeclType	png_uint_32		8642850	0					
ANR	8642874	Identifier	chunkpos		8642850	1					
ANR	8642875	AssignmentExpression	chunkpos = ps -> chunkpos		8642850	2		=			
ANR	8642876	Identifier	chunkpos		8642850	0					
ANR	8642877	PtrMemberAccess	ps -> chunkpos		8642850	1					
ANR	8642878	Identifier	ps		8642850	0					
ANR	8642879	Identifier	chunkpos		8642850	1					
ANR	8642880	IdentifierDeclStatement	png_size_t st = max ;	1473:3:41842:41861	8642850	3	True				
ANR	8642881	IdentifierDecl	st = max		8642850	0					
ANR	8642882	IdentifierDeclType	png_size_t		8642850	0					
ANR	8642883	Identifier	st		8642850	1					
ANR	8642884	AssignmentExpression	st = max		8642850	2		=			
ANR	8642885	Identifier	max		8642850	0					
ANR	8642886	Identifier	max		8642850	1					
ANR	8642887	ReturnType	static png_size_t		8642850	1					
ANR	8642888	Identifier	store_read_chunk		8642850	2					
ANR	8642889	ParameterList	"png_store * ps , png_bytep pb , const png_size_t max , const png_size_t min"		8642850	3					
ANR	8642890	Parameter	png_store * ps	1467:17:41636:41648	8642850	0	True				
ANR	8642891	ParameterType	png_store *		8642850	0					
ANR	8642892	Identifier	ps		8642850	1					
ANR	8642893	Parameter	png_bytep pb	1467:32:41651:41662	8642850	1	True				
ANR	8642894	ParameterType	png_bytep		8642850	0					
ANR	8642895	Identifier	pb		8642850	1					
ANR	8642896	Parameter	const png_size_t max	1467:46:41665:41684	8642850	2	True				
ANR	8642897	ParameterType	const png_size_t		8642850	0					
ANR	8642898	Identifier	max		8642850	1					
ANR	8642899	Parameter	const png_size_t min	1468:6:41693:41712	8642850	3	True				
ANR	8642900	ParameterType	const png_size_t		8642850	0					
ANR	8642901	Identifier	min		8642850	1					
ANR	8642902	CFGEntryNode	ENTRY		8642850		True				
ANR	8642903	CFGExitNode	EXIT		8642850		True				
ANR	8642904	Symbol	st		8642850						
ANR	8642905	Symbol	pb		8642850						
ANR	8642906	Symbol	ps		8642850						
ANR	8642907	Symbol	min		8642850						
ANR	8642908	Symbol	ps -> chunktype		8642850						
ANR	8642909	Symbol	chunkpos		8642850						
ANR	8642910	Symbol	max		8642850						
ANR	8642911	Symbol	* ps		8642850						
ANR	8642912	Symbol	chunklen		8642850						
ANR	8642913	Symbol	ps -> chunklen		8642850						
ANR	8642914	Symbol	chunktype		8642850						
ANR	8642915	Symbol	ps -> chunkpos		8642850						
ANR	8642916	Function	store_read	1700:0:48867:49162							
ANR	8642917	FunctionDef	"store_read (png_structp ppIn , png_bytep pb , png_size_t st)"		8642916	0					
ANR	8642918	CompoundStatement		1702:0:48946:49162	8642916	0					
ANR	8642919	IdentifierDeclStatement	png_const_structp pp = ppIn ;	1703:3:48951:48978	8642916	0	True				
ANR	8642920	IdentifierDecl	pp = ppIn		8642916	0					
ANR	8642921	IdentifierDeclType	png_const_structp		8642916	0					
ANR	8642922	Identifier	pp		8642916	1					
ANR	8642923	AssignmentExpression	pp = ppIn		8642916	2		=			
ANR	8642924	Identifier	ppIn		8642916	0					
ANR	8642925	Identifier	ppIn		8642916	1					
ANR	8642926	Statement	png_store	1704:3:48983:48991	8642916	1	True				
ANR	8642927	Statement	*	1704:13:48993:48993	8642916	2	True				
ANR	8642928	Statement	ps	1704:14:48994:48995	8642916	3	True				
ANR	8642929	Statement	=	1704:17:48997:48997	8642916	4	True				
ANR	8642930	Statement	voidcast	1704:19:48999:49006	8642916	5	True				
ANR	8642931	Statement	(	1704:27:49007:49007	8642916	6	True				
ANR	8642932	Statement	png_store	1704:28:49008:49016	8642916	7	True				
ANR	8642933	Statement	*	1704:37:49017:49017	8642916	8	True				
ANR	8642934	Statement	","	1704:38:49018:49018	8642916	9	True				
ANR	8642935	Statement	png_get_io_ptr	1704:40:49020:49033	8642916	10	True				
ANR	8642936	Statement	(	1704:54:49034:49034	8642916	11	True				
ANR	8642937	Statement	pp	1704:55:49035:49036	8642916	12	True				
ANR	8642938	Statement	)	1704:57:49037:49037	8642916	13	True				
ANR	8642939	Statement	)	1704:58:49038:49038	8642916	14	True				
ANR	8642940	ExpressionStatement		1704:59:49039:49039	8642916	15	True				
ANR	8642941	IfStatement	if ( ps == NULL || ps -> pread != pp )		8642916	16					
ANR	8642942	Condition	ps == NULL || ps -> pread != pp	1706:7:49049:49077	8642916	0	True				
ANR	8642943	OrExpression	ps == NULL || ps -> pread != pp		8642916	0		||			
ANR	8642944	EqualityExpression	ps == NULL		8642916	0		==			
ANR	8642945	Identifier	ps		8642916	0					
ANR	8642946	Identifier	NULL		8642916	1					
ANR	8642947	EqualityExpression	ps -> pread != pp		8642916	1		!=			
ANR	8642948	PtrMemberAccess	ps -> pread		8642916	0					
ANR	8642949	Identifier	ps		8642916	0					
ANR	8642950	Identifier	pread		8642916	1					
ANR	8642951	Identifier	pp		8642916	1					
ANR	8642952	ExpressionStatement	"png_error ( pp , ""bad store read call"" )"	1707:6:49086:49122	8642916	1	True				
ANR	8642953	CallExpression	"png_error ( pp , ""bad store read call"" )"		8642916	0					
ANR	8642954	Callee	png_error		8642916	0					
ANR	8642955	Identifier	png_error		8642916	0					
ANR	8642956	ArgumentList	pp		8642916	1					
ANR	8642957	Argument	pp		8642916	0					
ANR	8642958	Identifier	pp		8642916	0					
ANR	8642959	Argument	"""bad store read call"""		8642916	1					
ANR	8642960	PrimaryExpression	"""bad store read call"""		8642916	0					
ANR	8642961	ExpressionStatement	"store_read_chunk ( ps , pb , st , st )"	1709:3:49128:49160	8642916	17	True				
ANR	8642962	CallExpression	"store_read_chunk ( ps , pb , st , st )"		8642916	0					
ANR	8642963	Callee	store_read_chunk		8642916	0					
ANR	8642964	Identifier	store_read_chunk		8642916	0					
ANR	8642965	ArgumentList	ps		8642916	1					
ANR	8642966	Argument	ps		8642916	0					
ANR	8642967	Identifier	ps		8642916	0					
ANR	8642968	Argument	pb		8642916	1					
ANR	8642969	Identifier	pb		8642916	0					
ANR	8642970	Argument	st		8642916	2					
ANR	8642971	Identifier	st		8642916	0					
ANR	8642972	Argument	st		8642916	3					
ANR	8642973	Identifier	st		8642916	0					
ANR	8642974	ReturnType	static void PNGCBAPI		8642916	1					
ANR	8642975	Identifier	store_read		8642916	2					
ANR	8642976	ParameterList	"png_structp ppIn , png_bytep pb , png_size_t st"		8642916	3					
ANR	8642977	Parameter	png_structp ppIn	1701:11:48899:48914	8642916	0	True				
ANR	8642978	ParameterType	png_structp		8642916	0					
ANR	8642979	Identifier	ppIn		8642916	1					
ANR	8642980	Parameter	png_bytep pb	1701:29:48917:48928	8642916	1	True				
ANR	8642981	ParameterType	png_bytep		8642916	0					
ANR	8642982	Identifier	pb		8642916	1					
ANR	8642983	Parameter	png_size_t st	1701:43:48931:48943	8642916	2	True				
ANR	8642984	ParameterType	png_size_t		8642916	0					
ANR	8642985	Identifier	st		8642916	1					
ANR	8642986	CFGEntryNode	ENTRY		8642916		True				
ANR	8642987	CFGExitNode	EXIT		8642916		True				
ANR	8642988	Symbol	pp		8642916						
ANR	8642989	Symbol	ppIn		8642916						
ANR	8642990	Symbol	st		8642916						
ANR	8642991	Symbol	pb		8642916						
ANR	8642992	Symbol	NULL		8642916						
ANR	8642993	Symbol	ps		8642916						
ANR	8642994	Symbol	* ps		8642916						
ANR	8642995	Symbol	ps -> pread		8642916						
ANR	8642996	Function	store_progressive_read	1712:0:49165:50082							
ANR	8642997	FunctionDef	"store_progressive_read (png_store * ps , png_structp pp , png_infop pi)"		8642996	0					
ANR	8642998	CompoundStatement		1714:0:49245:50082	8642996	0					
ANR	8642999	IfStatement	if ( ps -> pread != pp || ps -> current == NULL || ps -> next == NULL )		8642996	0					
ANR	8643000	Condition	ps -> pread != pp || ps -> current == NULL || ps -> next == NULL	1715:7:49254:49311	8642996	0	True				
ANR	8643001	OrExpression	ps -> pread != pp || ps -> current == NULL || ps -> next == NULL		8642996	0		||			
ANR	8643002	EqualityExpression	ps -> pread != pp		8642996	0		!=			
ANR	8643003	PtrMemberAccess	ps -> pread		8642996	0					
ANR	8643004	Identifier	ps		8642996	0					
ANR	8643005	Identifier	pread		8642996	1					
ANR	8643006	Identifier	pp		8642996	1					
ANR	8643007	OrExpression	ps -> current == NULL || ps -> next == NULL		8642996	1		||			
ANR	8643008	EqualityExpression	ps -> current == NULL		8642996	0		==			
ANR	8643009	PtrMemberAccess	ps -> current		8642996	0					
ANR	8643010	Identifier	ps		8642996	0					
ANR	8643011	Identifier	current		8642996	1					
ANR	8643012	Identifier	NULL		8642996	1					
ANR	8643013	EqualityExpression	ps -> next == NULL		8642996	1		==			
ANR	8643014	PtrMemberAccess	ps -> next		8642996	0					
ANR	8643015	Identifier	ps		8642996	0					
ANR	8643016	Identifier	next		8642996	1					
ANR	8643017	Identifier	NULL		8642996	1					
ANR	8643018	ExpressionStatement	"png_error ( pp , ""store state damaged (progressive)"" )"	1716:6:49320:49370	8642996	1	True				
ANR	8643019	CallExpression	"png_error ( pp , ""store state damaged (progressive)"" )"		8642996	0					
ANR	8643020	Callee	png_error		8642996	0					
ANR	8643021	Identifier	png_error		8642996	0					
ANR	8643022	ArgumentList	pp		8642996	1					
ANR	8643023	Argument	pp		8642996	0					
ANR	8643024	Identifier	pp		8642996	0					
ANR	8643025	Argument	"""store state damaged (progressive)"""		8642996	1					
ANR	8643026	PrimaryExpression	"""store state damaged (progressive)"""		8642996	0					
ANR	8643027	WhileStatement	while ( store_read_buffer_avail ( ps ) > 0 )		8642996	1					
ANR	8643028	Condition	store_read_buffer_avail ( ps ) > 0	1724:10:49723:49753	8642996	0	True				
ANR	8643029	RelationalExpression	store_read_buffer_avail ( ps ) > 0		8642996	0		>			
ANR	8643030	CallExpression	store_read_buffer_avail ( ps )		8642996	0					
ANR	8643031	Callee	store_read_buffer_avail		8642996	0					
ANR	8643032	Identifier	store_read_buffer_avail		8642996	0					
ANR	8643033	ArgumentList	ps		8642996	1					
ANR	8643034	Argument	ps		8642996	0					
ANR	8643035	Identifier	ps		8642996	0					
ANR	8643036	PrimaryExpression	0		8642996	1					
ANR	8643037	CompoundStatement		15:6:578:598	8642996	1					
ANR	8643038	Statement	static	1726:6:49767:49772	8642996	0	True				
ANR	8643039	IdentifierDeclStatement	png_uint_32 noise = 2 ;	1726:13:49774:49795	8642996	1	True				
ANR	8643040	IdentifierDecl	noise = 2		8642996	0					
ANR	8643041	IdentifierDeclType	png_uint_32		8642996	0					
ANR	8643042	Identifier	noise		8642996	1					
ANR	8643043	AssignmentExpression	noise = 2		8642996	2		=			
ANR	8643044	Identifier	noise		8642996	0					
ANR	8643045	PrimaryExpression	2		8642996	1					
ANR	8643046	IdentifierDeclStatement	png_size_t cb ;	1727:6:49803:49816	8642996	2	True				
ANR	8643047	IdentifierDecl	cb		8642996	0					
ANR	8643048	IdentifierDeclType	png_size_t		8642996	0					
ANR	8643049	Identifier	cb		8642996	1					
ANR	8643050	IdentifierDeclStatement	png_byte buffer [ 512 ] ;	1728:6:49824:49844	8642996	3	True				
ANR	8643051	IdentifierDecl	buffer [ 512 ]		8642996	0					
ANR	8643052	IdentifierDeclType	png_byte [ 512 ]		8642996	0					
ANR	8643053	Identifier	buffer		8642996	1					
ANR	8643054	PrimaryExpression	512		8642996	2					
ANR	8643055	ExpressionStatement	noise = ( noise << 9 ) | ( ( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff )	1731:6:49897:49956	8642996	4	True				
ANR	8643056	AssignmentExpression	noise = ( noise << 9 ) | ( ( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff )		8642996	0		=			
ANR	8643057	Identifier	noise		8642996	0					
ANR	8643058	InclusiveOrExpression	( noise << 9 ) | ( ( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff )		8642996	1		|			
ANR	8643059	ShiftExpression	noise << 9		8642996	0		<<			
ANR	8643060	Identifier	noise		8642996	0					
ANR	8643061	PrimaryExpression	9		8642996	1					
ANR	8643062	BitAndExpression	( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff		8642996	1		&			
ANR	8643063	ExclusiveOrExpression	noise ^ ( noise >> ( 9 - 5 ) )		8642996	0		^			
ANR	8643064	Identifier	noise		8642996	0					
ANR	8643065	ShiftExpression	noise >> ( 9 - 5 )		8642996	1		>>			
ANR	8643066	Identifier	noise		8642996	0					
ANR	8643067	AdditiveExpression	9 - 5		8642996	1		-			
ANR	8643068	PrimaryExpression	9		8642996	0					
ANR	8643069	PrimaryExpression	5		8642996	1					
ANR	8643070	PrimaryExpression	0x1ff		8642996	1					
ANR	8643071	ExpressionStatement	cb = noise & 0x1ff	1732:6:49964:49982	8642996	5	True				
ANR	8643072	AssignmentExpression	cb = noise & 0x1ff		8642996	0		=			
ANR	8643073	Identifier	cb		8642996	0					
ANR	8643074	BitAndExpression	noise & 0x1ff		8642996	1		&			
ANR	8643075	Identifier	noise		8642996	0					
ANR	8643076	PrimaryExpression	0x1ff		8642996	1					
ANR	8643077	ExpressionStatement	"cb -= store_read_chunk ( ps , buffer , cb , 1 )"	1733:6:49990:50031	8642996	6	True				
ANR	8643078	AssignmentExpression	"cb -= store_read_chunk ( ps , buffer , cb , 1 )"		8642996	0		-=			
ANR	8643079	Identifier	cb		8642996	0					
ANR	8643080	CallExpression	"store_read_chunk ( ps , buffer , cb , 1 )"		8642996	1					
ANR	8643081	Callee	store_read_chunk		8642996	0					
ANR	8643082	Identifier	store_read_chunk		8642996	0					
ANR	8643083	ArgumentList	ps		8642996	1					
ANR	8643084	Argument	ps		8642996	0					
ANR	8643085	Identifier	ps		8642996	0					
ANR	8643086	Argument	buffer		8642996	1					
ANR	8643087	Identifier	buffer		8642996	0					
ANR	8643088	Argument	cb		8642996	2					
ANR	8643089	Identifier	cb		8642996	0					
ANR	8643090	Argument	1		8642996	3					
ANR	8643091	PrimaryExpression	1		8642996	0					
ANR	8643092	ExpressionStatement	"png_process_data ( pp , pi , buffer , cb )"	1734:6:50039:50075	8642996	7	True				
ANR	8643093	CallExpression	"png_process_data ( pp , pi , buffer , cb )"		8642996	0					
ANR	8643094	Callee	png_process_data		8642996	0					
ANR	8643095	Identifier	png_process_data		8642996	0					
ANR	8643096	ArgumentList	pp		8642996	1					
ANR	8643097	Argument	pp		8642996	0					
ANR	8643098	Identifier	pp		8642996	0					
ANR	8643099	Argument	pi		8642996	1					
ANR	8643100	Identifier	pi		8642996	0					
ANR	8643101	Argument	buffer		8642996	2					
ANR	8643102	Identifier	buffer		8642996	0					
ANR	8643103	Argument	cb		8642996	3					
ANR	8643104	Identifier	cb		8642996	0					
ANR	8643105	ReturnType	static void		8642996	1					
ANR	8643106	Identifier	store_progressive_read		8642996	2					
ANR	8643107	ParameterList	"png_store * ps , png_structp pp , png_infop pi"		8642996	3					
ANR	8643108	Parameter	png_store * ps	1713:23:49200:49212	8642996	0	True				
ANR	8643109	ParameterType	png_store *		8642996	0					
ANR	8643110	Identifier	ps		8642996	1					
ANR	8643111	Parameter	png_structp pp	1713:38:49215:49228	8642996	1	True				
ANR	8643112	ParameterType	png_structp		8642996	0					
ANR	8643113	Identifier	pp		8642996	1					
ANR	8643114	Parameter	png_infop pi	1713:54:49231:49242	8642996	2	True				
ANR	8643115	ParameterType	png_infop		8642996	0					
ANR	8643116	Identifier	pi		8642996	1					
ANR	8643117	CFGEntryNode	ENTRY		8642996		True				
ANR	8643118	CFGExitNode	EXIT		8642996		True				
ANR	8643119	Symbol	pp		8642996						
ANR	8643120	Symbol	store_read_chunk		8642996						
ANR	8643121	Symbol	ps		8642996						
ANR	8643122	Symbol	NULL		8642996						
ANR	8643123	Symbol	ps -> current		8642996						
ANR	8643124	Symbol	ps -> next		8642996						
ANR	8643125	Symbol	* ps		8642996						
ANR	8643126	Symbol	store_read_buffer_avail		8642996						
ANR	8643127	Symbol	noise		8642996						
ANR	8643128	Symbol	pi		8642996						
ANR	8643129	Symbol	buffer		8642996						
ANR	8643130	Symbol	ps -> pread		8642996						
ANR	8643131	Symbol	cb		8642996						
ANR	8643132	Function	store_write_palette	1740:0:50153:50778							
ANR	8643133	FunctionDef	"store_write_palette (png_store * ps , int npalette)"		8643132	0					
ANR	8643134	CompoundStatement		1742:0:50231:50778	8643132	0					
ANR	8643135	IfStatement	if ( ps -> pwrite == NULL )		8643132	0					
ANR	8643136	Condition	ps -> pwrite == NULL	1743:7:50240:50257	8643132	0	True				
ANR	8643137	EqualityExpression	ps -> pwrite == NULL		8643132	0		==			
ANR	8643138	PtrMemberAccess	ps -> pwrite		8643132	0					
ANR	8643139	Identifier	ps		8643132	0					
ANR	8643140	Identifier	pwrite		8643132	1					
ANR	8643141	Identifier	NULL		8643132	1					
ANR	8643142	ExpressionStatement	"store_log ( ps , NULL , ""attempt to write palette without write stream"" , 1 )"	1744:6:50266:50337	8643132	1	True				
ANR	8643143	CallExpression	"store_log ( ps , NULL , ""attempt to write palette without write stream"" , 1 )"		8643132	0					
ANR	8643144	Callee	store_log		8643132	0					
ANR	8643145	Identifier	store_log		8643132	0					
ANR	8643146	ArgumentList	ps		8643132	1					
ANR	8643147	Argument	ps		8643132	0					
ANR	8643148	Identifier	ps		8643132	0					
ANR	8643149	Argument	NULL		8643132	1					
ANR	8643150	Identifier	NULL		8643132	0					
ANR	8643151	Argument	"""attempt to write palette without write stream"""		8643132	2					
ANR	8643152	PrimaryExpression	"""attempt to write palette without write stream"""		8643132	0					
ANR	8643153	Argument	1		8643132	3					
ANR	8643154	PrimaryExpression	1		8643132	0					
ANR	8643155	IfStatement	if ( ps -> palette != NULL )		8643132	1					
ANR	8643156	Condition	ps -> palette != NULL	1746:7:50347:50365	8643132	0	True				
ANR	8643157	EqualityExpression	ps -> palette != NULL		8643132	0		!=			
ANR	8643158	PtrMemberAccess	ps -> palette		8643132	0					
ANR	8643159	Identifier	ps		8643132	0					
ANR	8643160	Identifier	palette		8643132	1					
ANR	8643161	Identifier	NULL		8643132	1					
ANR	8643162	ExpressionStatement	"png_error ( ps -> pwrite , ""multiple store_write_palette calls"" )"	1747:6:50374:50433	8643132	1	True				
ANR	8643163	CallExpression	"png_error ( ps -> pwrite , ""multiple store_write_palette calls"" )"		8643132	0					
ANR	8643164	Callee	png_error		8643132	0					
ANR	8643165	Identifier	png_error		8643132	0					
ANR	8643166	ArgumentList	ps -> pwrite		8643132	1					
ANR	8643167	Argument	ps -> pwrite		8643132	0					
ANR	8643168	PtrMemberAccess	ps -> pwrite		8643132	0					
ANR	8643169	Identifier	ps		8643132	0					
ANR	8643170	Identifier	pwrite		8643132	1					
ANR	8643171	Argument	"""multiple store_write_palette calls"""		8643132	1					
ANR	8643172	PrimaryExpression	"""multiple store_write_palette calls"""		8643132	0					
ANR	8643173	IfStatement	if ( npalette > 0 )		8643132	2					
ANR	8643174	Condition	npalette > 0	1750:7:50507:50518	8643132	0	True				
ANR	8643175	RelationalExpression	npalette > 0		8643132	0		>			
ANR	8643176	Identifier	npalette		8643132	0					
ANR	8643177	PrimaryExpression	0		8643132	1					
ANR	8643178	CompoundStatement		10:3:292:292	8643132	1					
ANR	8643179	Statement	ps	1752:6:50532:50533	8643132	0	True				
ANR	8643180	Statement	->	1752:8:50534:50535	8643132	1	True				
ANR	8643181	Statement	palette	1752:10:50536:50542	8643132	2	True				
ANR	8643182	Statement	=	1752:18:50544:50544	8643132	3	True				
ANR	8643183	Statement	voidcast	1752:20:50546:50553	8643132	4	True				
ANR	8643184	Statement	(	1752:28:50554:50554	8643132	5	True				
ANR	8643185	Statement	store_palette_entry	1752:29:50555:50573	8643132	6	True				
ANR	8643186	Statement	*	1752:48:50574:50574	8643132	7	True				
ANR	8643187	Statement	","	1752:49:50575:50575	8643132	8	True				
ANR	8643188	Statement	malloc	1752:51:50577:50582	8643132	9	True				
ANR	8643189	Statement	(	1752:57:50583:50583	8643132	10	True				
ANR	8643190	Statement	npalette	1752:58:50584:50591	8643132	11	True				
ANR	8643191	Statement	*	1752:67:50593:50593	8643132	12	True				
ANR	8643192	Statement	sizeof	1753:9:50604:50609	8643132	13	True				
ANR	8643193	Statement	*	1753:16:50611:50611	8643132	14	True				
ANR	8643194	Statement	ps	1753:17:50612:50613	8643132	15	True				
ANR	8643195	Statement	->	1753:19:50614:50615	8643132	16	True				
ANR	8643196	Statement	palette	1753:21:50616:50622	8643132	17	True				
ANR	8643197	Statement	)	1753:28:50623:50623	8643132	18	True				
ANR	8643198	Statement	)	1753:29:50624:50624	8643132	19	True				
ANR	8643199	ExpressionStatement		1753:30:50625:50625	8643132	20	True				
ANR	8643200	IfStatement	if ( ps -> palette == NULL )		8643132	21					
ANR	8643201	Condition	ps -> palette == NULL	1755:10:50638:50656	8643132	0	True				
ANR	8643202	EqualityExpression	ps -> palette == NULL		8643132	0		==			
ANR	8643203	PtrMemberAccess	ps -> palette		8643132	0					
ANR	8643204	Identifier	ps		8643132	0					
ANR	8643205	Identifier	palette		8643132	1					
ANR	8643206	Identifier	NULL		8643132	1					
ANR	8643207	ExpressionStatement	"png_error ( ps -> pwrite , ""store new palette: OOM"" )"	1756:9:50668:50715	8643132	1	True				
ANR	8643208	CallExpression	"png_error ( ps -> pwrite , ""store new palette: OOM"" )"		8643132	0					
ANR	8643209	Callee	png_error		8643132	0					
ANR	8643210	Identifier	png_error		8643132	0					
ANR	8643211	ArgumentList	ps -> pwrite		8643132	1					
ANR	8643212	Argument	ps -> pwrite		8643132	0					
ANR	8643213	PtrMemberAccess	ps -> pwrite		8643132	0					
ANR	8643214	Identifier	ps		8643132	0					
ANR	8643215	Identifier	pwrite		8643132	1					
ANR	8643216	Argument	"""store new palette: OOM"""		8643132	1					
ANR	8643217	PrimaryExpression	"""store new palette: OOM"""		8643132	0					
ANR	8643218	ExpressionStatement	ps -> npalette = npalette	1758:6:50724:50747	8643132	22	True				
ANR	8643219	AssignmentExpression	ps -> npalette = npalette		8643132	0		=			
ANR	8643220	PtrMemberAccess	ps -> npalette		8643132	0					
ANR	8643221	Identifier	ps		8643132	0					
ANR	8643222	Identifier	npalette		8643132	1					
ANR	8643223	Identifier	npalette		8643132	1					
ANR	8643224	ReturnStatement	return ps -> palette ;	1761:3:50758:50776	8643132	3	True				
ANR	8643225	PtrMemberAccess	ps -> palette		8643132	0					
ANR	8643226	Identifier	ps		8643132	0					
ANR	8643227	Identifier	palette		8643132	1					
ANR	8643228	ReturnType	static store_palette_entry *		8643132	1					
ANR	8643229	Identifier	store_write_palette		8643132	2					
ANR	8643230	ParameterList	"png_store * ps , int npalette"		8643132	3					
ANR	8643231	Parameter	png_store * ps	1741:20:50202:50214	8643132	0	True				
ANR	8643232	ParameterType	png_store *		8643132	0					
ANR	8643233	Identifier	ps		8643132	1					
ANR	8643234	Parameter	int npalette	1741:35:50217:50228	8643132	1	True				
ANR	8643235	ParameterType	int		8643132	0					
ANR	8643236	Identifier	npalette		8643132	1					
ANR	8643237	CFGEntryNode	ENTRY		8643132		True				
ANR	8643238	CFGExitNode	EXIT		8643132		True				
ANR	8643239	Symbol	ps -> palette		8643132						
ANR	8643240	Symbol	ps		8643132						
ANR	8643241	Symbol	NULL		8643132						
ANR	8643242	Symbol	ps -> npalette		8643132						
ANR	8643243	Symbol	ps -> pwrite		8643132						
ANR	8643244	Symbol	* ps		8643132						
ANR	8643245	Symbol	npalette		8643132						
ANR	8643246	Function	store_current_palette	1765:0:50807:51238							
ANR	8643247	FunctionDef	"store_current_palette (png_store * ps , int * npalette)"		8643246	0					
ANR	8643248	CompoundStatement		1767:0:50888:51238	8643246	0					
ANR	8643249	IfStatement	if ( ps -> current == NULL )		8643246	0					
ANR	8643250	Condition	ps -> current == NULL	1771:7:50993:51011	8643246	0	True				
ANR	8643251	EqualityExpression	ps -> current == NULL		8643246	0		==			
ANR	8643252	PtrMemberAccess	ps -> current		8643246	0					
ANR	8643253	Identifier	ps		8643246	0					
ANR	8643254	Identifier	current		8643246	1					
ANR	8643255	Identifier	NULL		8643246	1					
ANR	8643256	CompoundStatement		6:3:128:128	8643246	1					
ANR	8643257	ExpressionStatement	"store_log ( ps , ps -> pread , ""no current stream for palette"" , 1 )"	1773:6:51025:51085	8643246	0	True				
ANR	8643258	CallExpression	"store_log ( ps , ps -> pread , ""no current stream for palette"" , 1 )"		8643246	0					
ANR	8643259	Callee	store_log		8643246	0					
ANR	8643260	Identifier	store_log		8643246	0					
ANR	8643261	ArgumentList	ps		8643246	1					
ANR	8643262	Argument	ps		8643246	0					
ANR	8643263	Identifier	ps		8643246	0					
ANR	8643264	Argument	ps -> pread		8643246	1					
ANR	8643265	PtrMemberAccess	ps -> pread		8643246	0					
ANR	8643266	Identifier	ps		8643246	0					
ANR	8643267	Identifier	pread		8643246	1					
ANR	8643268	Argument	"""no current stream for palette"""		8643246	2					
ANR	8643269	PrimaryExpression	"""no current stream for palette"""		8643246	0					
ANR	8643270	Argument	1		8643246	3					
ANR	8643271	PrimaryExpression	1		8643246	0					
ANR	8643272	ReturnStatement	return NULL ;	1774:6:51093:51104	8643246	1	True				
ANR	8643273	Identifier	NULL		8643246	0					
ANR	8643274	ExpressionStatement	* npalette = ps -> current -> npalette	1778:3:51171:51204	8643246	1	True				
ANR	8643275	AssignmentExpression	* npalette = ps -> current -> npalette		8643246	0		=			
ANR	8643276	UnaryOperationExpression	* npalette		8643246	0					
ANR	8643277	UnaryOperator	*		8643246	0					
ANR	8643278	Identifier	npalette		8643246	1					
ANR	8643279	PtrMemberAccess	ps -> current -> npalette		8643246	1					
ANR	8643280	PtrMemberAccess	ps -> current		8643246	0					
ANR	8643281	Identifier	ps		8643246	0					
ANR	8643282	Identifier	current		8643246	1					
ANR	8643283	Identifier	npalette		8643246	1					
ANR	8643284	ReturnStatement	return ps -> current -> palette ;	1779:3:51209:51236	8643246	2	True				
ANR	8643285	PtrMemberAccess	ps -> current -> palette		8643246	0					
ANR	8643286	PtrMemberAccess	ps -> current		8643246	0					
ANR	8643287	Identifier	ps		8643246	0					
ANR	8643288	Identifier	current		8643246	1					
ANR	8643289	Identifier	palette		8643246	1					
ANR	8643290	ReturnType	static store_palette_entry *		8643246	1					
ANR	8643291	Identifier	store_current_palette		8643246	2					
ANR	8643292	ParameterList	"png_store * ps , int * npalette"		8643246	3					
ANR	8643293	Parameter	png_store * ps	1766:22:50858:50870	8643246	0	True				
ANR	8643294	ParameterType	png_store *		8643246	0					
ANR	8643295	Identifier	ps		8643246	1					
ANR	8643296	Parameter	int * npalette	1766:37:50873:50885	8643246	1	True				
ANR	8643297	ParameterType	int *		8643246	0					
ANR	8643298	Identifier	npalette		8643246	1					
ANR	8643299	CFGEntryNode	ENTRY		8643246		True				
ANR	8643300	CFGExitNode	EXIT		8643246		True				
ANR	8643301	Symbol	ps		8643246						
ANR	8643302	Symbol	NULL		8643246						
ANR	8643303	Symbol	ps -> current		8643246						
ANR	8643304	Symbol	* ps		8643246						
ANR	8643305	Symbol	ps -> current -> npalette		8643246						
ANR	8643306	Symbol	* * ps		8643246						
ANR	8643307	Symbol	* ps -> current		8643246						
ANR	8643308	Symbol	* npalette		8643246						
ANR	8643309	Symbol	ps -> current -> palette		8643246						
ANR	8643310	Symbol	npalette		8643246						
ANR	8643311	Symbol	ps -> pread		8643246						
ANR	8643312	ClassDef	store_memory	1789:8:51615:51878							
ANR	8643313	DeclStmt									
ANR	8643314	Decl							store_pool	store_pool *	pool
ANR	8643315	DeclStmt									
ANR	8643316	Decl							struct store_memory	struct store_memory *	next
ANR	8643317	DeclStmt									
ANR	8643318	Decl							png_alloc_size_t	png_alloc_size_t	size
ANR	8643319	DeclStmt									
ANR	8643320	Decl							png_byte	png_byte [ 4 ]	mark
ANR	8643321	DeclStmt									
ANR	8643322	Decl							store_memory	store_memory	store_memory
ANR	8643323	Function	store_pool_error	1804:0:52291:52659							
ANR	8643324	FunctionDef	"store_pool_error (png_store * ps , png_const_structp pp , const char * msg)"		8643323	0					
ANR	8643325	CompoundStatement		1806:0:52374:52659	8643323	0					
ANR	8643326	IfStatement	if ( pp != NULL )		8643323	0					
ANR	8643327	Condition	pp != NULL	1807:7:52383:52392	8643323	0	True				
ANR	8643328	EqualityExpression	pp != NULL		8643323	0		!=			
ANR	8643329	Identifier	pp		8643323	0					
ANR	8643330	Identifier	NULL		8643323	1					
ANR	8643331	ExpressionStatement	"png_error ( pp , msg )"	1808:6:52401:52419	8643323	1	True				
ANR	8643332	CallExpression	"png_error ( pp , msg )"		8643323	0					
ANR	8643333	Callee	png_error		8643323	0					
ANR	8643334	Identifier	png_error		8643323	0					
ANR	8643335	ArgumentList	pp		8643323	1					
ANR	8643336	Argument	pp		8643323	0					
ANR	8643337	Identifier	pp		8643323	0					
ANR	8643338	Argument	msg		8643323	1					
ANR	8643339	Identifier	msg		8643323	0					
ANR	8643340	ExpressionStatement	"store_log ( ps , pp , msg , 1 )"	1814:3:52620:52657	8643323	1	True				
ANR	8643341	CallExpression	"store_log ( ps , pp , msg , 1 )"		8643323	0					
ANR	8643342	Callee	store_log		8643323	0					
ANR	8643343	Identifier	store_log		8643323	0					
ANR	8643344	ArgumentList	ps		8643323	1					
ANR	8643345	Argument	ps		8643323	0					
ANR	8643346	Identifier	ps		8643323	0					
ANR	8643347	Argument	pp		8643323	1					
ANR	8643348	Identifier	pp		8643323	0					
ANR	8643349	Argument	msg		8643323	2					
ANR	8643350	Identifier	msg		8643323	0					
ANR	8643351	Argument	1		8643323	3					
ANR	8643352	PrimaryExpression	1		8643323	0					
ANR	8643353	ReturnType	static void		8643323	1					
ANR	8643354	Identifier	store_pool_error		8643323	2					
ANR	8643355	ParameterList	"png_store * ps , png_const_structp pp , const char * msg"		8643323	3					
ANR	8643356	Parameter	png_store * ps	1805:17:52320:52332	8643323	0	True				
ANR	8643357	ParameterType	png_store *		8643323	0					
ANR	8643358	Identifier	ps		8643323	1					
ANR	8643359	Parameter	png_const_structp pp	1805:32:52335:52354	8643323	1	True				
ANR	8643360	ParameterType	png_const_structp		8643323	0					
ANR	8643361	Identifier	pp		8643323	1					
ANR	8643362	Parameter	const char * msg	1805:54:52357:52371	8643323	2	True				
ANR	8643363	ParameterType	const char *		8643323	0					
ANR	8643364	Identifier	msg		8643323	1					
ANR	8643365	CFGEntryNode	ENTRY		8643323		True				
ANR	8643366	CFGExitNode	EXIT		8643323		True				
ANR	8643367	Symbol	pp		8643323						
ANR	8643368	Symbol	msg		8643323						
ANR	8643369	Symbol	ps		8643323						
ANR	8643370	Symbol	NULL		8643323						
ANR	8643371	Function	store_memory_free	1817:0:52662:53760							
ANR	8643372	FunctionDef	"store_memory_free (png_const_structp pp , store_pool * pool , store_memory * memory)"		8643371	0					
ANR	8643373	CompoundStatement		1819:0:52754:53760	8643371	0					
ANR	8643374	IfStatement	if ( memory -> pool != pool )		8643371	0					
ANR	8643375	Condition	memory -> pool != pool	1824:7:52994:53013	8643371	0	True				
ANR	8643376	EqualityExpression	memory -> pool != pool		8643371	0		!=			
ANR	8643377	PtrMemberAccess	memory -> pool		8643371	0					
ANR	8643378	Identifier	memory		8643371	0					
ANR	8643379	Identifier	pool		8643371	1					
ANR	8643380	Identifier	pool		8643371	1					
ANR	8643381	ExpressionStatement	"store_pool_error ( pool -> store , pp , ""memory corrupted (pool)"" )"	1825:6:53022:53082	8643371	1	True				
ANR	8643382	CallExpression	"store_pool_error ( pool -> store , pp , ""memory corrupted (pool)"" )"		8643371	0					
ANR	8643383	Callee	store_pool_error		8643371	0					
ANR	8643384	Identifier	store_pool_error		8643371	0					
ANR	8643385	ArgumentList	pool -> store		8643371	1					
ANR	8643386	Argument	pool -> store		8643371	0					
ANR	8643387	PtrMemberAccess	pool -> store		8643371	0					
ANR	8643388	Identifier	pool		8643371	0					
ANR	8643389	Identifier	store		8643371	1					
ANR	8643390	Argument	pp		8643371	1					
ANR	8643391	Identifier	pp		8643371	0					
ANR	8643392	Argument	"""memory corrupted (pool)"""		8643371	2					
ANR	8643393	PrimaryExpression	"""memory corrupted (pool)"""		8643371	0					
ANR	8643394	ElseStatement	else		8643371	0					
ANR	8643395	IfStatement	"if ( memcmp ( memory -> mark , pool -> mark , sizeof memory -> mark ) != 0 )"		8643371	0					
ANR	8643396	Condition	"memcmp ( memory -> mark , pool -> mark , sizeof memory -> mark ) != 0"	1827:12:53097:53154	8643371	0	True				
ANR	8643397	EqualityExpression	"memcmp ( memory -> mark , pool -> mark , sizeof memory -> mark ) != 0"		8643371	0		!=			
ANR	8643398	CallExpression	"memcmp ( memory -> mark , pool -> mark , sizeof memory -> mark )"		8643371	0					
ANR	8643399	Callee	memcmp		8643371	0					
ANR	8643400	Identifier	memcmp		8643371	0					
ANR	8643401	ArgumentList	memory -> mark		8643371	1					
ANR	8643402	Argument	memory -> mark		8643371	0					
ANR	8643403	PtrMemberAccess	memory -> mark		8643371	0					
ANR	8643404	Identifier	memory		8643371	0					
ANR	8643405	Identifier	mark		8643371	1					
ANR	8643406	Argument	pool -> mark		8643371	1					
ANR	8643407	PtrMemberAccess	pool -> mark		8643371	0					
ANR	8643408	Identifier	pool		8643371	0					
ANR	8643409	Identifier	mark		8643371	1					
ANR	8643410	Argument	sizeof memory -> mark		8643371	2					
ANR	8643411	SizeofExpression	sizeof memory -> mark		8643371	0					
ANR	8643412	Sizeof	sizeof		8643371	0					
ANR	8643413	PtrMemberAccess	memory -> mark		8643371	1					
ANR	8643414	Identifier	memory		8643371	0					
ANR	8643415	Identifier	mark		8643371	1					
ANR	8643416	PrimaryExpression	0		8643371	1					
ANR	8643417	ExpressionStatement	"store_pool_error ( pool -> store , pp , ""memory corrupted (start)"" )"	1828:6:53163:53224	8643371	1	True				
ANR	8643418	CallExpression	"store_pool_error ( pool -> store , pp , ""memory corrupted (start)"" )"		8643371	0					
ANR	8643419	Callee	store_pool_error		8643371	0					
ANR	8643420	Identifier	store_pool_error		8643371	0					
ANR	8643421	ArgumentList	pool -> store		8643371	1					
ANR	8643422	Argument	pool -> store		8643371	0					
ANR	8643423	PtrMemberAccess	pool -> store		8643371	0					
ANR	8643424	Identifier	pool		8643371	0					
ANR	8643425	Identifier	store		8643371	1					
ANR	8643426	Argument	pp		8643371	1					
ANR	8643427	Identifier	pp		8643371	0					
ANR	8643428	Argument	"""memory corrupted (start)"""		8643371	2					
ANR	8643429	PrimaryExpression	"""memory corrupted (start)"""		8643371	0					
ANR	8643430	ElseStatement	else		8643371	0					
ANR	8643431	CompoundStatement		15:6:546:580	8643371	0					
ANR	8643432	IdentifierDeclStatement	png_alloc_size_t cb = memory -> size ;	1833:6:53301:53335	8643371	0	True				
ANR	8643433	IdentifierDecl	cb = memory -> size		8643371	0					
ANR	8643434	IdentifierDeclType	png_alloc_size_t		8643371	0					
ANR	8643435	Identifier	cb		8643371	1					
ANR	8643436	AssignmentExpression	cb = memory -> size		8643371	2		=			
ANR	8643437	Identifier	cb		8643371	0					
ANR	8643438	PtrMemberAccess	memory -> size		8643371	1					
ANR	8643439	Identifier	memory		8643371	0					
ANR	8643440	Identifier	size		8643371	1					
ANR	8643441	IfStatement	if ( cb > pool -> max )		8643371	1					
ANR	8643442	Condition	cb > pool -> max	1835:10:53348:53361	8643371	0	True				
ANR	8643443	RelationalExpression	cb > pool -> max		8643371	0		>			
ANR	8643444	Identifier	cb		8643371	0					
ANR	8643445	PtrMemberAccess	pool -> max		8643371	1					
ANR	8643446	Identifier	pool		8643371	0					
ANR	8643447	Identifier	max		8643371	1					
ANR	8643448	ExpressionStatement	"store_pool_error ( pool -> store , pp , ""memory corrupted (size)"" )"	1836:9:53373:53433	8643371	1	True				
ANR	8643449	CallExpression	"store_pool_error ( pool -> store , pp , ""memory corrupted (size)"" )"		8643371	0					
ANR	8643450	Callee	store_pool_error		8643371	0					
ANR	8643451	Identifier	store_pool_error		8643371	0					
ANR	8643452	ArgumentList	pool -> store		8643371	1					
ANR	8643453	Argument	pool -> store		8643371	0					
ANR	8643454	PtrMemberAccess	pool -> store		8643371	0					
ANR	8643455	Identifier	pool		8643371	0					
ANR	8643456	Identifier	store		8643371	1					
ANR	8643457	Argument	pp		8643371	1					
ANR	8643458	Identifier	pp		8643371	0					
ANR	8643459	Argument	"""memory corrupted (size)"""		8643371	2					
ANR	8643460	PrimaryExpression	"""memory corrupted (size)"""		8643371	0					
ANR	8643461	ElseStatement	else		8643371	0					
ANR	8643462	IfStatement	"if ( memcmp ( ( png_bytep ) ( memory + 1 ) + cb , pool -> mark , sizeof pool -> mark ) != 0 )"		8643371	0					
ANR	8643463	Condition	"memcmp ( ( png_bytep ) ( memory + 1 ) + cb , pool -> mark , sizeof pool -> mark ) != 0"	1838:15:53451:53527	8643371	0	True				
ANR	8643464	EqualityExpression	"memcmp ( ( png_bytep ) ( memory + 1 ) + cb , pool -> mark , sizeof pool -> mark ) != 0"		8643371	0		!=			
ANR	8643465	CallExpression	"memcmp ( ( png_bytep ) ( memory + 1 ) + cb , pool -> mark , sizeof pool -> mark )"		8643371	0					
ANR	8643466	Callee	memcmp		8643371	0					
ANR	8643467	Identifier	memcmp		8643371	0					
ANR	8643468	ArgumentList	( png_bytep ) ( memory + 1 ) + cb		8643371	1					
ANR	8643469	Argument	( png_bytep ) ( memory + 1 ) + cb		8643371	0					
ANR	8643470	AdditiveExpression	( png_bytep ) ( memory + 1 ) + cb		8643371	0		+			
ANR	8643471	CastExpression	( png_bytep ) ( memory + 1 )		8643371	0					
ANR	8643472	CastTarget	png_bytep		8643371	0					
ANR	8643473	AdditiveExpression	memory + 1		8643371	1		+			
ANR	8643474	Identifier	memory		8643371	0					
ANR	8643475	PrimaryExpression	1		8643371	1					
ANR	8643476	Identifier	cb		8643371	1					
ANR	8643477	Argument	pool -> mark		8643371	1					
ANR	8643478	PtrMemberAccess	pool -> mark		8643371	0					
ANR	8643479	Identifier	pool		8643371	0					
ANR	8643480	Identifier	mark		8643371	1					
ANR	8643481	Argument	sizeof pool -> mark		8643371	2					
ANR	8643482	SizeofExpression	sizeof pool -> mark		8643371	0					
ANR	8643483	Sizeof	sizeof		8643371	0					
ANR	8643484	PtrMemberAccess	pool -> mark		8643371	1					
ANR	8643485	Identifier	pool		8643371	0					
ANR	8643486	Identifier	mark		8643371	1					
ANR	8643487	PrimaryExpression	0		8643371	1					
ANR	8643488	ExpressionStatement	"store_pool_error ( pool -> store , pp , ""memory corrupted (end)"" )"	1840:9:53539:53598	8643371	1	True				
ANR	8643489	CallExpression	"store_pool_error ( pool -> store , pp , ""memory corrupted (end)"" )"		8643371	0					
ANR	8643490	Callee	store_pool_error		8643371	0					
ANR	8643491	Identifier	store_pool_error		8643371	0					
ANR	8643492	ArgumentList	pool -> store		8643371	1					
ANR	8643493	Argument	pool -> store		8643371	0					
ANR	8643494	PtrMemberAccess	pool -> store		8643371	0					
ANR	8643495	Identifier	pool		8643371	0					
ANR	8643496	Identifier	store		8643371	1					
ANR	8643497	Argument	pp		8643371	1					
ANR	8643498	Identifier	pp		8643371	0					
ANR	8643499	Argument	"""memory corrupted (end)"""		8643371	2					
ANR	8643500	PrimaryExpression	"""memory corrupted (end)"""		8643371	0					
ANR	8643501	ElseStatement	else		8643371	0					
ANR	8643502	CompoundStatement		26:9:934:934	8643371	0					
ANR	8643503	ExpressionStatement	pool -> current -= cb	1845:9:53700:53719	8643371	0	True				
ANR	8643504	AssignmentExpression	pool -> current -= cb		8643371	0		-=			
ANR	8643505	PtrMemberAccess	pool -> current		8643371	0					
ANR	8643506	Identifier	pool		8643371	0					
ANR	8643507	Identifier	current		8643371	1					
ANR	8643508	Identifier	cb		8643371	1					
ANR	8643509	ExpressionStatement	free ( memory )	1846:9:53730:53742	8643371	1	True				
ANR	8643510	CallExpression	free ( memory )		8643371	0					
ANR	8643511	Callee	free		8643371	0					
ANR	8643512	Identifier	free		8643371	0					
ANR	8643513	ArgumentList	memory		8643371	1					
ANR	8643514	Argument	memory		8643371	0					
ANR	8643515	Identifier	memory		8643371	0					
ANR	8643516	ReturnType	static void		8643371	1					
ANR	8643517	Identifier	store_memory_free		8643371	2					
ANR	8643518	ParameterList	"png_const_structp pp , store_pool * pool , store_memory * memory"		8643371	3					
ANR	8643519	Parameter	png_const_structp pp	1818:18:52692:52711	8643371	0	True				
ANR	8643520	ParameterType	png_const_structp		8643371	0					
ANR	8643521	Identifier	pp		8643371	1					
ANR	8643522	Parameter	store_pool * pool	1818:40:52714:52729	8643371	1	True				
ANR	8643523	ParameterType	store_pool *		8643371	0					
ANR	8643524	Identifier	pool		8643371	1					
ANR	8643525	Parameter	store_memory * memory	1818:58:52732:52751	8643371	2	True				
ANR	8643526	ParameterType	store_memory *		8643371	0					
ANR	8643527	Identifier	memory		8643371	1					
ANR	8643528	CFGEntryNode	ENTRY		8643371		True				
ANR	8643529	CFGExitNode	EXIT		8643371		True				
ANR	8643530	Symbol	pp		8643371						
ANR	8643531	Symbol	pool -> mark		8643371						
ANR	8643532	Symbol	memory		8643371						
ANR	8643533	Symbol	pool -> current		8643371						
ANR	8643534	Symbol	pool -> max		8643371						
ANR	8643535	Symbol	memory -> mark		8643371						
ANR	8643536	Symbol	pool		8643371						
ANR	8643537	Symbol	* memory		8643371						
ANR	8643538	Symbol	memory -> size		8643371						
ANR	8643539	Symbol	memory -> pool		8643371						
ANR	8643540	Symbol	* pool		8643371						
ANR	8643541	Symbol	memcmp		8643371						
ANR	8643542	Symbol	pool -> store		8643371						
ANR	8643543	Symbol	cb		8643371						
ANR	8643544	Function	store_pool_delete	1851:0:53763:55329							
ANR	8643545	FunctionDef	"store_pool_delete (png_store * ps , store_pool * pool)"		8643544	0					
ANR	8643546	CompoundStatement		1853:0:53826:55329	8643544	0					
ANR	8643547	IfStatement	if ( pool -> list != NULL )		8643544	0					
ANR	8643548	Condition	pool -> list != NULL	1854:7:53835:53852	8643544	0	True				
ANR	8643549	EqualityExpression	pool -> list != NULL		8643544	0		!=			
ANR	8643550	PtrMemberAccess	pool -> list		8643544	0					
ANR	8643551	Identifier	pool		8643544	0					
ANR	8643552	Identifier	list		8643544	1					
ANR	8643553	Identifier	NULL		8643544	1					
ANR	8643554	CompoundStatement		3:3:31:31	8643544	1					
ANR	8643555	ExpressionStatement	"fprintf ( stderr , ""%s: %s %s: memory lost (list follows):\\n"" , ps -> test , pool == & ps -> read_memory_pool ? ""read"" : ""write"" , pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname )"	1856:6:53866:54119	8643544	0	True				
ANR	8643556	CallExpression	"fprintf ( stderr , ""%s: %s %s: memory lost (list follows):\\n"" , ps -> test , pool == & ps -> read_memory_pool ? ""read"" : ""write"" , pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname )"		8643544	0					
ANR	8643557	Callee	fprintf		8643544	0					
ANR	8643558	Identifier	fprintf		8643544	0					
ANR	8643559	ArgumentList	stderr		8643544	1					
ANR	8643560	Argument	stderr		8643544	0					
ANR	8643561	Identifier	stderr		8643544	0					
ANR	8643562	Argument	"""%s: %s %s: memory lost (list follows):\\n"""		8643544	1					
ANR	8643563	PrimaryExpression	"""%s: %s %s: memory lost (list follows):\\n"""		8643544	0					
ANR	8643564	Argument	ps -> test		8643544	2					
ANR	8643565	PtrMemberAccess	ps -> test		8643544	0					
ANR	8643566	Identifier	ps		8643544	0					
ANR	8643567	Identifier	test		8643544	1					
ANR	8643568	Argument	"pool == & ps -> read_memory_pool ? ""read"" : ""write"""		8643544	3					
ANR	8643569	ConditionalExpression	"pool == & ps -> read_memory_pool ? ""read"" : ""write"""		8643544	0					
ANR	8643570	Condition	pool == & ps -> read_memory_pool		8643544	0					
ANR	8643571	EqualityExpression	pool == & ps -> read_memory_pool		8643544	0		==			
ANR	8643572	Identifier	pool		8643544	0					
ANR	8643573	UnaryOperationExpression	& ps -> read_memory_pool		8643544	1					
ANR	8643574	UnaryOperator	&		8643544	0					
ANR	8643575	PtrMemberAccess	ps -> read_memory_pool		8643544	1					
ANR	8643576	Identifier	ps		8643544	0					
ANR	8643577	Identifier	read_memory_pool		8643544	1					
ANR	8643578	PrimaryExpression	"""read"""		8643544	1					
ANR	8643579	PrimaryExpression	"""write"""		8643544	2					
ANR	8643580	Argument	"pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname"		8643544	4					
ANR	8643581	ConditionalExpression	"pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname"		8643544	0					
ANR	8643582	Condition	pool == & ps -> read_memory_pool		8643544	0					
ANR	8643583	EqualityExpression	pool == & ps -> read_memory_pool		8643544	0		==			
ANR	8643584	Identifier	pool		8643544	0					
ANR	8643585	UnaryOperationExpression	& ps -> read_memory_pool		8643544	1					
ANR	8643586	UnaryOperator	&		8643544	0					
ANR	8643587	PtrMemberAccess	ps -> read_memory_pool		8643544	1					
ANR	8643588	Identifier	ps		8643544	0					
ANR	8643589	Identifier	read_memory_pool		8643544	1					
ANR	8643590	ConditionalExpression	"ps -> current != NULL ? ps -> current -> name : ""unknown file"""		8643544	1					
ANR	8643591	Condition	ps -> current != NULL		8643544	0					
ANR	8643592	EqualityExpression	ps -> current != NULL		8643544	0		!=			
ANR	8643593	PtrMemberAccess	ps -> current		8643544	0					
ANR	8643594	Identifier	ps		8643544	0					
ANR	8643595	Identifier	current		8643544	1					
ANR	8643596	Identifier	NULL		8643544	1					
ANR	8643597	PtrMemberAccess	ps -> current -> name		8643544	1					
ANR	8643598	PtrMemberAccess	ps -> current		8643544	0					
ANR	8643599	Identifier	ps		8643544	0					
ANR	8643600	Identifier	current		8643544	1					
ANR	8643601	Identifier	name		8643544	1					
ANR	8643602	PrimaryExpression	"""unknown file"""		8643544	2					
ANR	8643603	PtrMemberAccess	ps -> wname		8643544	2					
ANR	8643604	Identifier	ps		8643544	0					
ANR	8643605	Identifier	wname		8643544	1					
ANR	8643606	ExpressionStatement	++ ps -> nerrors	1860:6:54127:54140	8643544	1	True				
ANR	8643607	UnaryExpression	++ ps -> nerrors		8643544	0					
ANR	8643608	IncDec	++		8643544	0					
ANR	8643609	PtrMemberAccess	ps -> nerrors		8643544	1					
ANR	8643610	Identifier	ps		8643544	0					
ANR	8643611	Identifier	nerrors		8643544	1					
ANR	8643612	DoStatement	do		8643544	2					
ANR	8643613	CompoundStatement		12:9:342:373	8643544	0					
ANR	8643614	IdentifierDeclStatement	store_memory * next = pool -> list ;	1864:9:54169:54200	8643544	0	True				
ANR	8643615	IdentifierDecl	* next = pool -> list		8643544	0					
ANR	8643616	IdentifierDeclType	store_memory *		8643544	0					
ANR	8643617	Identifier	next		8643544	1					
ANR	8643618	AssignmentExpression	* next = pool -> list		8643544	2		=			
ANR	8643619	Identifier	next		8643544	0					
ANR	8643620	PtrMemberAccess	pool -> list		8643544	1					
ANR	8643621	Identifier	pool		8643544	0					
ANR	8643622	Identifier	list		8643544	1					
ANR	8643623	ExpressionStatement	pool -> list = next -> next	1865:9:54211:54234	8643544	1	True				
ANR	8643624	AssignmentExpression	pool -> list = next -> next		8643544	0		=			
ANR	8643625	PtrMemberAccess	pool -> list		8643544	0					
ANR	8643626	Identifier	pool		8643544	0					
ANR	8643627	Identifier	list		8643544	1					
ANR	8643628	PtrMemberAccess	next -> next		8643544	1					
ANR	8643629	Identifier	next		8643544	0					
ANR	8643630	Identifier	next		8643544	1					
ANR	8643631	ExpressionStatement	next -> next = NULL	1866:9:54245:54262	8643544	2	True				
ANR	8643632	AssignmentExpression	next -> next = NULL		8643544	0		=			
ANR	8643633	PtrMemberAccess	next -> next		8643544	0					
ANR	8643634	Identifier	next		8643544	0					
ANR	8643635	Identifier	next		8643544	1					
ANR	8643636	Identifier	NULL		8643544	1					
ANR	8643637	ExpressionStatement	"fprintf ( stderr , ""\\t%lu bytes @ %p\\n"" , ( unsigned long ) next -> size , ( const void * ) ( next + 1 ) )"	1868:9:54274:54374	8643544	3	True				
ANR	8643638	CallExpression	"fprintf ( stderr , ""\\t%lu bytes @ %p\\n"" , ( unsigned long ) next -> size , ( const void * ) ( next + 1 ) )"		8643544	0					
ANR	8643639	Callee	fprintf		8643544	0					
ANR	8643640	Identifier	fprintf		8643544	0					
ANR	8643641	ArgumentList	stderr		8643544	1					
ANR	8643642	Argument	stderr		8643544	0					
ANR	8643643	Identifier	stderr		8643544	0					
ANR	8643644	Argument	"""\\t%lu bytes @ %p\\n"""		8643544	1					
ANR	8643645	PrimaryExpression	"""\\t%lu bytes @ %p\\n"""		8643544	0					
ANR	8643646	Argument	( unsigned long ) next -> size		8643544	2					
ANR	8643647	CastExpression	( unsigned long ) next -> size		8643544	0					
ANR	8643648	CastTarget	unsigned long		8643544	0					
ANR	8643649	PtrMemberAccess	next -> size		8643544	1					
ANR	8643650	Identifier	next		8643544	0					
ANR	8643651	Identifier	size		8643544	1					
ANR	8643652	Argument	( const void * ) ( next + 1 )		8643544	3					
ANR	8643653	CastExpression	( const void * ) ( next + 1 )		8643544	0					
ANR	8643654	CastTarget	const void *		8643544	0					
ANR	8643655	AdditiveExpression	next + 1		8643544	1		+			
ANR	8643656	Identifier	next		8643544	0					
ANR	8643657	PrimaryExpression	1		8643544	1					
ANR	8643658	ExpressionStatement	"store_memory_free ( NULL , pool , next )"	1873:9:54495:54530	8643544	4	True				
ANR	8643659	CallExpression	"store_memory_free ( NULL , pool , next )"		8643544	0					
ANR	8643660	Callee	store_memory_free		8643544	0					
ANR	8643661	Identifier	store_memory_free		8643544	0					
ANR	8643662	ArgumentList	NULL		8643544	1					
ANR	8643663	Argument	NULL		8643544	0					
ANR	8643664	Identifier	NULL		8643544	0					
ANR	8643665	Argument	pool		8643544	1					
ANR	8643666	Identifier	pool		8643544	0					
ANR	8643667	Argument	next		8643544	2					
ANR	8643668	Identifier	next		8643544	0					
ANR	8643669	Condition	pool -> list != NULL	1875:13:54553:54570	8643544	1	True				
ANR	8643670	EqualityExpression	pool -> list != NULL		8643544	0		!=			
ANR	8643671	PtrMemberAccess	pool -> list		8643544	0					
ANR	8643672	Identifier	pool		8643544	0					
ANR	8643673	Identifier	list		8643544	1					
ANR	8643674	Identifier	NULL		8643544	1					
ANR	8643675	IfStatement	if ( pool -> max > pool -> max_max )		8643544	1					
ANR	8643676	Condition	pool -> max > pool -> max_max	1879:7:54646:54670	8643544	0	True				
ANR	8643677	RelationalExpression	pool -> max > pool -> max_max		8643544	0		>			
ANR	8643678	PtrMemberAccess	pool -> max		8643544	0					
ANR	8643679	Identifier	pool		8643544	0					
ANR	8643680	Identifier	max		8643544	1					
ANR	8643681	PtrMemberAccess	pool -> max_max		8643544	1					
ANR	8643682	Identifier	pool		8643544	0					
ANR	8643683	Identifier	max_max		8643544	1					
ANR	8643684	ExpressionStatement	pool -> max_max = pool -> max	1879:34:54673:54698	8643544	1	True				
ANR	8643685	AssignmentExpression	pool -> max_max = pool -> max		8643544	0		=			
ANR	8643686	PtrMemberAccess	pool -> max_max		8643544	0					
ANR	8643687	Identifier	pool		8643544	0					
ANR	8643688	Identifier	max_max		8643544	1					
ANR	8643689	PtrMemberAccess	pool -> max		8643544	1					
ANR	8643690	Identifier	pool		8643544	0					
ANR	8643691	Identifier	max		8643544	1					
ANR	8643692	ExpressionStatement	pool -> max = 0	1880:3:54703:54716	8643544	2	True				
ANR	8643693	AssignmentExpression	pool -> max = 0		8643544	0		=			
ANR	8643694	PtrMemberAccess	pool -> max		8643544	0					
ANR	8643695	Identifier	pool		8643544	0					
ANR	8643696	Identifier	max		8643544	1					
ANR	8643697	PrimaryExpression	0		8643544	1					
ANR	8643698	IfStatement	if ( pool -> current != 0 )		8643544	3					
ANR	8643699	Condition	pool -> current != 0	1881:7:54725:54742	8643544	0	True				
ANR	8643700	EqualityExpression	pool -> current != 0		8643544	0		!=			
ANR	8643701	PtrMemberAccess	pool -> current		8643544	0					
ANR	8643702	Identifier	pool		8643544	0					
ANR	8643703	Identifier	current		8643544	1					
ANR	8643704	PrimaryExpression	0		8643544	1					
ANR	8643705	ExpressionStatement	"fprintf ( stderr , ""%s: %s %s: memory counter mismatch (internal error)\\n"" , ps -> test , pool == & ps -> read_memory_pool ? ""read"" : ""write"" , pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname )"	1882:6:54783:55049	8643544	1	True				
ANR	8643706	CallExpression	"fprintf ( stderr , ""%s: %s %s: memory counter mismatch (internal error)\\n"" , ps -> test , pool == & ps -> read_memory_pool ? ""read"" : ""write"" , pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname )"		8643544	0					
ANR	8643707	Callee	fprintf		8643544	0					
ANR	8643708	Identifier	fprintf		8643544	0					
ANR	8643709	ArgumentList	stderr		8643544	1					
ANR	8643710	Argument	stderr		8643544	0					
ANR	8643711	Identifier	stderr		8643544	0					
ANR	8643712	Argument	"""%s: %s %s: memory counter mismatch (internal error)\\n"""		8643544	1					
ANR	8643713	PrimaryExpression	"""%s: %s %s: memory counter mismatch (internal error)\\n"""		8643544	0					
ANR	8643714	Argument	ps -> test		8643544	2					
ANR	8643715	PtrMemberAccess	ps -> test		8643544	0					
ANR	8643716	Identifier	ps		8643544	0					
ANR	8643717	Identifier	test		8643544	1					
ANR	8643718	Argument	"pool == & ps -> read_memory_pool ? ""read"" : ""write"""		8643544	3					
ANR	8643719	ConditionalExpression	"pool == & ps -> read_memory_pool ? ""read"" : ""write"""		8643544	0					
ANR	8643720	Condition	pool == & ps -> read_memory_pool		8643544	0					
ANR	8643721	EqualityExpression	pool == & ps -> read_memory_pool		8643544	0		==			
ANR	8643722	Identifier	pool		8643544	0					
ANR	8643723	UnaryOperationExpression	& ps -> read_memory_pool		8643544	1					
ANR	8643724	UnaryOperator	&		8643544	0					
ANR	8643725	PtrMemberAccess	ps -> read_memory_pool		8643544	1					
ANR	8643726	Identifier	ps		8643544	0					
ANR	8643727	Identifier	read_memory_pool		8643544	1					
ANR	8643728	PrimaryExpression	"""read"""		8643544	1					
ANR	8643729	PrimaryExpression	"""write"""		8643544	2					
ANR	8643730	Argument	"pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname"		8643544	4					
ANR	8643731	ConditionalExpression	"pool == & ps -> read_memory_pool ? ( ps -> current != NULL ? ps -> current -> name : ""unknown file"" ) : ps -> wname"		8643544	0					
ANR	8643732	Condition	pool == & ps -> read_memory_pool		8643544	0					
ANR	8643733	EqualityExpression	pool == & ps -> read_memory_pool		8643544	0		==			
ANR	8643734	Identifier	pool		8643544	0					
ANR	8643735	UnaryOperationExpression	& ps -> read_memory_pool		8643544	1					
ANR	8643736	UnaryOperator	&		8643544	0					
ANR	8643737	PtrMemberAccess	ps -> read_memory_pool		8643544	1					
ANR	8643738	Identifier	ps		8643544	0					
ANR	8643739	Identifier	read_memory_pool		8643544	1					
ANR	8643740	ConditionalExpression	"ps -> current != NULL ? ps -> current -> name : ""unknown file"""		8643544	1					
ANR	8643741	Condition	ps -> current != NULL		8643544	0					
ANR	8643742	EqualityExpression	ps -> current != NULL		8643544	0		!=			
ANR	8643743	PtrMemberAccess	ps -> current		8643544	0					
ANR	8643744	Identifier	ps		8643544	0					
ANR	8643745	Identifier	current		8643544	1					
ANR	8643746	Identifier	NULL		8643544	1					
ANR	8643747	PtrMemberAccess	ps -> current -> name		8643544	1					
ANR	8643748	PtrMemberAccess	ps -> current		8643544	0					
ANR	8643749	Identifier	ps		8643544	0					
ANR	8643750	Identifier	current		8643544	1					
ANR	8643751	Identifier	name		8643544	1					
ANR	8643752	PrimaryExpression	"""unknown file"""		8643544	2					
ANR	8643753	PtrMemberAccess	ps -> wname		8643544	2					
ANR	8643754	Identifier	ps		8643544	0					
ANR	8643755	Identifier	wname		8643544	1					
ANR	8643756	ExpressionStatement	pool -> current = 0	1886:3:55054:55071	8643544	4	True				
ANR	8643757	AssignmentExpression	pool -> current = 0		8643544	0		=			
ANR	8643758	PtrMemberAccess	pool -> current		8643544	0					
ANR	8643759	Identifier	pool		8643544	0					
ANR	8643760	Identifier	current		8643544	1					
ANR	8643761	PrimaryExpression	0		8643544	1					
ANR	8643762	IfStatement	if ( pool -> limit > pool -> max_limit )		8643544	5					
ANR	8643763	Condition	pool -> limit > pool -> max_limit	1888:7:55081:55109	8643544	0	True				
ANR	8643764	RelationalExpression	pool -> limit > pool -> max_limit		8643544	0		>			
ANR	8643765	PtrMemberAccess	pool -> limit		8643544	0					
ANR	8643766	Identifier	pool		8643544	0					
ANR	8643767	Identifier	limit		8643544	1					
ANR	8643768	PtrMemberAccess	pool -> max_limit		8643544	1					
ANR	8643769	Identifier	pool		8643544	0					
ANR	8643770	Identifier	max_limit		8643544	1					
ANR	8643771	ExpressionStatement	pool -> max_limit = pool -> limit	1889:6:55118:55147	8643544	1	True				
ANR	8643772	AssignmentExpression	pool -> max_limit = pool -> limit		8643544	0		=			
ANR	8643773	PtrMemberAccess	pool -> max_limit		8643544	0					
ANR	8643774	Identifier	pool		8643544	0					
ANR	8643775	Identifier	max_limit		8643544	1					
ANR	8643776	PtrMemberAccess	pool -> limit		8643544	1					
ANR	8643777	Identifier	pool		8643544	0					
ANR	8643778	Identifier	limit		8643544	1					
ANR	8643779	ExpressionStatement	pool -> limit = 0	1891:3:55153:55168	8643544	6	True				
ANR	8643780	AssignmentExpression	pool -> limit = 0		8643544	0		=			
ANR	8643781	PtrMemberAccess	pool -> limit		8643544	0					
ANR	8643782	Identifier	pool		8643544	0					
ANR	8643783	Identifier	limit		8643544	1					
ANR	8643784	PrimaryExpression	0		8643544	1					
ANR	8643785	IfStatement	if ( pool -> total > pool -> max_total )		8643544	7					
ANR	8643786	Condition	pool -> total > pool -> max_total	1893:7:55178:55206	8643544	0	True				
ANR	8643787	RelationalExpression	pool -> total > pool -> max_total		8643544	0		>			
ANR	8643788	PtrMemberAccess	pool -> total		8643544	0					
ANR	8643789	Identifier	pool		8643544	0					
ANR	8643790	Identifier	total		8643544	1					
ANR	8643791	PtrMemberAccess	pool -> max_total		8643544	1					
ANR	8643792	Identifier	pool		8643544	0					
ANR	8643793	Identifier	max_total		8643544	1					
ANR	8643794	ExpressionStatement	pool -> max_total = pool -> total	1894:6:55215:55244	8643544	1	True				
ANR	8643795	AssignmentExpression	pool -> max_total = pool -> total		8643544	0		=			
ANR	8643796	PtrMemberAccess	pool -> max_total		8643544	0					
ANR	8643797	Identifier	pool		8643544	0					
ANR	8643798	Identifier	max_total		8643544	1					
ANR	8643799	PtrMemberAccess	pool -> total		8643544	1					
ANR	8643800	Identifier	pool		8643544	0					
ANR	8643801	Identifier	total		8643544	1					
ANR	8643802	ExpressionStatement	pool -> total = 0	1896:3:55250:55265	8643544	8	True				
ANR	8643803	AssignmentExpression	pool -> total = 0		8643544	0		=			
ANR	8643804	PtrMemberAccess	pool -> total		8643544	0					
ANR	8643805	Identifier	pool		8643544	0					
ANR	8643806	Identifier	total		8643544	1					
ANR	8643807	PrimaryExpression	0		8643544	1					
ANR	8643808	ExpressionStatement	store_pool_mark ( pool -> mark )	1899:3:55300:55327	8643544	9	True				
ANR	8643809	CallExpression	store_pool_mark ( pool -> mark )		8643544	0					
ANR	8643810	Callee	store_pool_mark		8643544	0					
ANR	8643811	Identifier	store_pool_mark		8643544	0					
ANR	8643812	ArgumentList	pool -> mark		8643544	1					
ANR	8643813	Argument	pool -> mark		8643544	0					
ANR	8643814	PtrMemberAccess	pool -> mark		8643544	0					
ANR	8643815	Identifier	pool		8643544	0					
ANR	8643816	Identifier	mark		8643544	1					
ANR	8643817	ReturnType	static void		8643544	1					
ANR	8643818	Identifier	store_pool_delete		8643544	2					
ANR	8643819	ParameterList	"png_store * ps , store_pool * pool"		8643544	3					
ANR	8643820	Parameter	png_store * ps	1852:18:53793:53805	8643544	0	True				
ANR	8643821	ParameterType	png_store *		8643544	0					
ANR	8643822	Identifier	ps		8643544	1					
ANR	8643823	Parameter	store_pool * pool	1852:33:53808:53823	8643544	1	True				
ANR	8643824	ParameterType	store_pool *		8643544	0					
ANR	8643825	Identifier	pool		8643544	1					
ANR	8643826	CFGEntryNode	ENTRY		8643544		True				
ANR	8643827	CFGExitNode	EXIT		8643544		True				
ANR	8643828	Symbol	next		8643544						
ANR	8643829	Symbol	next -> size		8643544						
ANR	8643830	Symbol	ps		8643544						
ANR	8643831	Symbol	& ps -> read_memory_pool		8643544						
ANR	8643832	Symbol	pool -> current		8643544						
ANR	8643833	Symbol	ps -> current		8643544						
ANR	8643834	Symbol	ps -> current -> name		8643544						
ANR	8643835	Symbol	ps -> test		8643544						
ANR	8643836	Symbol	next -> next		8643544						
ANR	8643837	Symbol	* next		8643544						
ANR	8643838	Symbol	pool -> total		8643544						
ANR	8643839	Symbol	pool -> list		8643544						
ANR	8643840	Symbol	ps -> wname		8643544						
ANR	8643841	Symbol	pool -> mark		8643544						
ANR	8643842	Symbol	NULL		8643544						
ANR	8643843	Symbol	pool -> max_limit		8643544						
ANR	8643844	Symbol	pool -> max		8643544						
ANR	8643845	Symbol	pool		8643544						
ANR	8643846	Symbol	pool -> max_max		8643544						
ANR	8643847	Symbol	* ps		8643544						
ANR	8643848	Symbol	stderr		8643544						
ANR	8643849	Symbol	* ps -> current		8643544						
ANR	8643850	Symbol	* * ps		8643544						
ANR	8643851	Symbol	* pool		8643544						
ANR	8643852	Symbol	pool -> limit		8643544						
ANR	8643853	Symbol	pool -> max_total		8643544						
ANR	8643854	Function	store_malloc	1903:0:55360:56750							
ANR	8643855	FunctionDef	"store_malloc (png_structp ppIn , png_alloc_size_t cb)"		8643854	0					
ANR	8643856	CompoundStatement		1905:0:55438:56750	8643854	0					
ANR	8643857	IdentifierDeclStatement	png_const_structp pp = ppIn ;	1906:3:55443:55470	8643854	0	True				
ANR	8643858	IdentifierDecl	pp = ppIn		8643854	0					
ANR	8643859	IdentifierDeclType	png_const_structp		8643854	0					
ANR	8643860	Identifier	pp		8643854	1					
ANR	8643861	AssignmentExpression	pp = ppIn		8643854	2		=			
ANR	8643862	Identifier	ppIn		8643854	0					
ANR	8643863	Identifier	ppIn		8643854	1					
ANR	8643864	Statement	store_pool	1907:3:55475:55484	8643854	1	True				
ANR	8643865	Statement	*	1907:14:55486:55486	8643854	2	True				
ANR	8643866	Statement	pool	1907:15:55487:55490	8643854	3	True				
ANR	8643867	Statement	=	1907:20:55492:55492	8643854	4	True				
ANR	8643868	Statement	voidcast	1907:22:55494:55501	8643854	5	True				
ANR	8643869	Statement	(	1907:30:55502:55502	8643854	6	True				
ANR	8643870	Statement	store_pool	1907:31:55503:55512	8643854	7	True				
ANR	8643871	Statement	*	1907:41:55513:55513	8643854	8	True				
ANR	8643872	Statement	","	1907:42:55514:55514	8643854	9	True				
ANR	8643873	Statement	png_get_mem_ptr	1907:44:55516:55530	8643854	10	True				
ANR	8643874	Statement	(	1907:59:55531:55531	8643854	11	True				
ANR	8643875	Statement	pp	1907:60:55532:55533	8643854	12	True				
ANR	8643876	Statement	)	1907:62:55534:55534	8643854	13	True				
ANR	8643877	Statement	)	1907:63:55535:55535	8643854	14	True				
ANR	8643878	ExpressionStatement		1907:64:55536:55536	8643854	15	True				
ANR	8643879	Statement	store_memory	1908:3:55541:55552	8643854	16	True				
ANR	8643880	Statement	*	1908:16:55554:55554	8643854	17	True				
ANR	8643881	Statement	new	1908:17:55555:55557	8643854	18	True				
ANR	8643882	Statement	=	1908:21:55559:55559	8643854	19	True				
ANR	8643883	Statement	voidcast	1908:23:55561:55568	8643854	20	True				
ANR	8643884	Statement	(	1908:31:55569:55569	8643854	21	True				
ANR	8643885	Statement	store_memory	1908:32:55570:55581	8643854	22	True				
ANR	8643886	Statement	*	1908:44:55582:55582	8643854	23	True				
ANR	8643887	Statement	","	1908:45:55583:55583	8643854	24	True				
ANR	8643888	Statement	malloc	1908:47:55585:55590	8643854	25	True				
ANR	8643889	Statement	(	1908:53:55591:55591	8643854	26	True				
ANR	8643890	Statement	cb	1908:54:55592:55593	8643854	27	True				
ANR	8643891	Statement	+	1908:57:55595:55595	8643854	28	True				
ANR	8643892	Statement	(	1908:59:55597:55597	8643854	29	True				
ANR	8643893	Statement	sizeof	1908:60:55598:55603	8643854	30	True				
ANR	8643894	Statement	*	1908:67:55605:55605	8643854	31	True				
ANR	8643895	Statement	new	1908:68:55606:55608	8643854	32	True				
ANR	8643896	Statement	)	1908:71:55609:55609	8643854	33	True				
ANR	8643897	Statement	+	1908:73:55611:55611	8643854	34	True				
ANR	8643898	Statement	(	1909:6:55619:55619	8643854	35	True				
ANR	8643899	Statement	sizeof	1909:7:55620:55625	8643854	36	True				
ANR	8643900	Statement	pool	1909:14:55627:55630	8643854	37	True				
ANR	8643901	Statement	->	1909:18:55631:55632	8643854	38	True				
ANR	8643902	Statement	mark	1909:20:55633:55636	8643854	39	True				
ANR	8643903	Statement	)	1909:24:55637:55637	8643854	40	True				
ANR	8643904	Statement	)	1909:25:55638:55638	8643854	41	True				
ANR	8643905	Statement	)	1909:26:55639:55639	8643854	42	True				
ANR	8643906	ExpressionStatement		1909:27:55640:55640	8643854	43	True				
ANR	8643907	Statement	if	1911:3:55646:55647	8643854	44	True				
ANR	8643908	Statement	(	1911:6:55649:55649	8643854	45	True				
ANR	8643909	Statement	new	1911:7:55650:55652	8643854	46	True				
ANR	8643910	Statement	!=	1911:11:55654:55655	8643854	47	True				
ANR	8643911	Statement	NULL	1911:14:55657:55660	8643854	48	True				
ANR	8643912	Statement	)	1911:18:55661:55661	8643854	49	True				
ANR	8643913	CompoundStatement		8:3:227:227	8643854	50					
ANR	8643914	IfStatement	if ( cb > pool -> max )		8643854	0					
ANR	8643915	Condition	cb > pool -> max	1913:10:55678:55691	8643854	0	True				
ANR	8643916	RelationalExpression	cb > pool -> max		8643854	0		>			
ANR	8643917	Identifier	cb		8643854	0					
ANR	8643918	PtrMemberAccess	pool -> max		8643854	1					
ANR	8643919	Identifier	pool		8643854	0					
ANR	8643920	Identifier	max		8643854	1					
ANR	8643921	ExpressionStatement	pool -> max = cb	1914:9:55703:55717	8643854	1	True				
ANR	8643922	AssignmentExpression	pool -> max = cb		8643854	0		=			
ANR	8643923	PtrMemberAccess	pool -> max		8643854	0					
ANR	8643924	Identifier	pool		8643854	0					
ANR	8643925	Identifier	max		8643854	1					
ANR	8643926	Identifier	cb		8643854	1					
ANR	8643927	ExpressionStatement	pool -> current += cb	1916:6:55726:55745	8643854	1	True				
ANR	8643928	AssignmentExpression	pool -> current += cb		8643854	0		+=			
ANR	8643929	PtrMemberAccess	pool -> current		8643854	0					
ANR	8643930	Identifier	pool		8643854	0					
ANR	8643931	Identifier	current		8643854	1					
ANR	8643932	Identifier	cb		8643854	1					
ANR	8643933	IfStatement	if ( pool -> current > pool -> limit )		8643854	2					
ANR	8643934	Condition	pool -> current > pool -> limit	1918:10:55758:55784	8643854	0	True				
ANR	8643935	RelationalExpression	pool -> current > pool -> limit		8643854	0		>			
ANR	8643936	PtrMemberAccess	pool -> current		8643854	0					
ANR	8643937	Identifier	pool		8643854	0					
ANR	8643938	Identifier	current		8643854	1					
ANR	8643939	PtrMemberAccess	pool -> limit		8643854	1					
ANR	8643940	Identifier	pool		8643854	0					
ANR	8643941	Identifier	limit		8643854	1					
ANR	8643942	ExpressionStatement	pool -> limit = pool -> current	1919:9:55796:55823	8643854	1	True				
ANR	8643943	AssignmentExpression	pool -> limit = pool -> current		8643854	0		=			
ANR	8643944	PtrMemberAccess	pool -> limit		8643854	0					
ANR	8643945	Identifier	pool		8643854	0					
ANR	8643946	Identifier	limit		8643854	1					
ANR	8643947	PtrMemberAccess	pool -> current		8643854	1					
ANR	8643948	Identifier	pool		8643854	0					
ANR	8643949	Identifier	current		8643854	1					
ANR	8643950	ExpressionStatement	pool -> total += cb	1921:6:55832:55849	8643854	3	True				
ANR	8643951	AssignmentExpression	pool -> total += cb		8643854	0		+=			
ANR	8643952	PtrMemberAccess	pool -> total		8643854	0					
ANR	8643953	Identifier	pool		8643854	0					
ANR	8643954	Identifier	total		8643854	1					
ANR	8643955	Identifier	cb		8643854	1					
ANR	8643956	Statement	new	1923:6:55858:55860	8643854	4	True				
ANR	8643957	Statement	->	1923:9:55861:55862	8643854	5	True				
ANR	8643958	ExpressionStatement	size = cb	1923:11:55863:55872	8643854	6	True				
ANR	8643959	AssignmentExpression	size = cb		8643854	0		=			
ANR	8643960	Identifier	size		8643854	0					
ANR	8643961	Identifier	cb		8643854	1					
ANR	8643962	Statement	memcpy	1924:6:55880:55885	8643854	7	True				
ANR	8643963	Statement	(	1924:12:55886:55886	8643854	8	True				
ANR	8643964	Statement	new	1924:13:55887:55889	8643854	9	True				
ANR	8643965	Statement	->	1924:16:55890:55891	8643854	10	True				
ANR	8643966	Statement	mark	1924:18:55892:55895	8643854	11	True				
ANR	8643967	Statement	","	1924:22:55896:55896	8643854	12	True				
ANR	8643968	Statement	pool	1924:24:55898:55901	8643854	13	True				
ANR	8643969	Statement	->	1924:28:55902:55903	8643854	14	True				
ANR	8643970	Statement	mark	1924:30:55904:55907	8643854	15	True				
ANR	8643971	Statement	","	1924:34:55908:55908	8643854	16	True				
ANR	8643972	Statement	sizeof	1924:36:55910:55915	8643854	17	True				
ANR	8643973	Statement	new	1924:43:55917:55919	8643854	18	True				
ANR	8643974	Statement	->	1924:46:55920:55921	8643854	19	True				
ANR	8643975	Statement	mark	1924:48:55922:55925	8643854	20	True				
ANR	8643976	Statement	)	1924:52:55926:55926	8643854	21	True				
ANR	8643977	ExpressionStatement		1924:53:55927:55927	8643854	22	True				
ANR	8643978	Statement	memcpy	1925:6:55935:55940	8643854	23	True				
ANR	8643979	Statement	(	1925:12:55941:55941	8643854	24	True				
ANR	8643980	Statement	(	1925:13:55942:55942	8643854	25	True				
ANR	8643981	Statement	png_byte	1925:14:55943:55950	8643854	26	True				
ANR	8643982	Statement	*	1925:22:55951:55951	8643854	27	True				
ANR	8643983	Statement	)	1925:23:55952:55952	8643854	28	True				
ANR	8643984	Statement	(	1925:24:55953:55953	8643854	29	True				
ANR	8643985	Statement	new	1925:25:55954:55956	8643854	30	True				
ANR	8643986	Statement	+	1925:28:55957:55957	8643854	31	True				
ANR	8643987	Statement	1	1925:29:55958:55958	8643854	32	True				
ANR	8643988	Statement	)	1925:30:55959:55959	8643854	33	True				
ANR	8643989	Statement	+	1925:32:55961:55961	8643854	34	True				
ANR	8643990	Statement	cb	1925:34:55963:55964	8643854	35	True				
ANR	8643991	Statement	","	1925:36:55965:55965	8643854	36	True				
ANR	8643992	Statement	pool	1925:38:55967:55970	8643854	37	True				
ANR	8643993	Statement	->	1925:42:55971:55972	8643854	38	True				
ANR	8643994	Statement	mark	1925:44:55973:55976	8643854	39	True				
ANR	8643995	Statement	","	1925:48:55977:55977	8643854	40	True				
ANR	8643996	Statement	sizeof	1925:50:55979:55984	8643854	41	True				
ANR	8643997	Statement	pool	1925:57:55986:55989	8643854	42	True				
ANR	8643998	Statement	->	1925:61:55990:55991	8643854	43	True				
ANR	8643999	Statement	mark	1925:63:55992:55995	8643854	44	True				
ANR	8644000	Statement	)	1925:67:55996:55996	8643854	45	True				
ANR	8644001	ExpressionStatement		1925:68:55997:55997	8643854	46	True				
ANR	8644002	Statement	new	1926:6:56005:56007	8643854	47	True				
ANR	8644003	Statement	->	1926:9:56008:56009	8643854	48	True				
ANR	8644004	ExpressionStatement	pool = pool	1926:11:56010:56021	8643854	49	True				
ANR	8644005	AssignmentExpression	pool = pool		8643854	0		=			
ANR	8644006	Identifier	pool		8643854	0					
ANR	8644007	Identifier	pool		8643854	1					
ANR	8644008	Statement	new	1927:6:56029:56031	8643854	50	True				
ANR	8644009	Statement	->	1927:9:56032:56033	8643854	51	True				
ANR	8644010	ExpressionStatement	next = pool -> list	1927:11:56034:56051	8643854	52	True				
ANR	8644011	AssignmentExpression	next = pool -> list		8643854	0		=			
ANR	8644012	Identifier	next		8643854	0					
ANR	8644013	PtrMemberAccess	pool -> list		8643854	1					
ANR	8644014	Identifier	pool		8643854	0					
ANR	8644015	Identifier	list		8643854	1					
ANR	8644016	Statement	pool	1928:6:56059:56062	8643854	53	True				
ANR	8644017	Statement	->	1928:10:56063:56064	8643854	54	True				
ANR	8644018	Statement	list	1928:12:56065:56068	8643854	55	True				
ANR	8644019	Statement	=	1928:17:56070:56070	8643854	56	True				
ANR	8644020	Statement	new	1928:19:56072:56074	8643854	57	True				
ANR	8644021	ExpressionStatement		1928:22:56075:56075	8643854	58	True				
ANR	8644022	Statement	++	1929:6:56083:56084	8643854	59	True				
ANR	8644023	Statement	new	1929:8:56085:56087	8643854	60	True				
ANR	8644024	ExpressionStatement		1929:11:56088:56088	8643854	61	True				
ANR	8644025	ReturnType	static png_voidp PNGCBAPI		8643854	1					
ANR	8644026	Identifier	store_malloc		8643854	2					
ANR	8644027	ParameterList	"png_structp ppIn , png_alloc_size_t cb"		8643854	3					
ANR	8644028	Parameter	png_structp ppIn	1904:13:55399:55414	8643854	0	True				
ANR	8644029	ParameterType	png_structp		8643854	0					
ANR	8644030	Identifier	ppIn		8643854	1					
ANR	8644031	Parameter	png_alloc_size_t cb	1904:31:55417:55435	8643854	1	True				
ANR	8644032	ParameterType	png_alloc_size_t		8643854	0					
ANR	8644033	Identifier	cb		8643854	1					
ANR	8644034	CFGEntryNode	ENTRY		8643854		True				
ANR	8644035	CFGExitNode	EXIT		8643854		True				
ANR	8644036	Symbol	pp		8643854						
ANR	8644037	Symbol	next		8643854						
ANR	8644038	Symbol	ppIn		8643854						
ANR	8644039	Symbol	* pool		8643854						
ANR	8644040	Symbol	pool -> list		8643854						
ANR	8644041	Symbol	pool -> limit		8643854						
ANR	8644042	Symbol	pool -> current		8643854						
ANR	8644043	Symbol	size		8643854						
ANR	8644044	Symbol	pool -> max		8643854						
ANR	8644045	Symbol	pool		8643854						
ANR	8644046	Symbol	pool -> total		8643854						
ANR	8644047	Symbol	cb		8643854						
ANR	8644048	Function	store_free	1952:0:56753:57835							
ANR	8644049	FunctionDef	"store_free (png_structp ppIn , png_voidp memory)"		8644048	0					
ANR	8644050	CompoundStatement		1954:0:56821:57835	8644048	0					
ANR	8644051	IdentifierDeclStatement	png_const_structp pp = ppIn ;	1955:3:56826:56853	8644048	0	True				
ANR	8644052	IdentifierDecl	pp = ppIn		8644048	0					
ANR	8644053	IdentifierDeclType	png_const_structp		8644048	0					
ANR	8644054	Identifier	pp		8644048	1					
ANR	8644055	AssignmentExpression	pp = ppIn		8644048	2		=			
ANR	8644056	Identifier	ppIn		8644048	0					
ANR	8644057	Identifier	ppIn		8644048	1					
ANR	8644058	Statement	store_pool	1956:3:56858:56867	8644048	1	True				
ANR	8644059	Statement	*	1956:14:56869:56869	8644048	2	True				
ANR	8644060	Statement	pool	1956:15:56870:56873	8644048	3	True				
ANR	8644061	Statement	=	1956:20:56875:56875	8644048	4	True				
ANR	8644062	Statement	voidcast	1956:22:56877:56884	8644048	5	True				
ANR	8644063	Statement	(	1956:30:56885:56885	8644048	6	True				
ANR	8644064	Statement	store_pool	1956:31:56886:56895	8644048	7	True				
ANR	8644065	Statement	*	1956:41:56896:56896	8644048	8	True				
ANR	8644066	Statement	","	1956:42:56897:56897	8644048	9	True				
ANR	8644067	Statement	png_get_mem_ptr	1956:44:56899:56913	8644048	10	True				
ANR	8644068	Statement	(	1956:59:56914:56914	8644048	11	True				
ANR	8644069	Statement	pp	1956:60:56915:56916	8644048	12	True				
ANR	8644070	Statement	)	1956:62:56917:56917	8644048	13	True				
ANR	8644071	Statement	)	1956:63:56918:56918	8644048	14	True				
ANR	8644072	ExpressionStatement		1956:64:56919:56919	8644048	15	True				
ANR	8644073	Statement	store_memory	1957:3:56924:56935	8644048	16	True				
ANR	8644074	Statement	*	1957:16:56937:56937	8644048	17	True				
ANR	8644075	Statement	this	1957:17:56938:56941	8644048	18	True				
ANR	8644076	Statement	=	1957:22:56943:56943	8644048	19	True				
ANR	8644077	Statement	voidcast	1957:24:56945:56952	8644048	20	True				
ANR	8644078	Statement	(	1957:32:56953:56953	8644048	21	True				
ANR	8644079	Statement	store_memory	1957:33:56954:56965	8644048	22	True				
ANR	8644080	Statement	*	1957:45:56966:56966	8644048	23	True				
ANR	8644081	Statement	","	1957:46:56967:56967	8644048	24	True				
ANR	8644082	Statement	memory	1957:48:56969:56974	8644048	25	True				
ANR	8644083	Statement	)	1957:54:56975:56975	8644048	26	True				
ANR	8644084	Statement	","	1957:55:56976:56976	8644048	27	True				
ANR	8644085	ExpressionStatement	* * test	1957:57:56978:56984	8644048	28	True				
ANR	8644086	UnaryOperationExpression	* * test		8644048	0					
ANR	8644087	UnaryOperator	*		8644048	0					
ANR	8644088	UnaryOperationExpression	* test		8644048	1					
ANR	8644089	UnaryOperator	*		8644048	0					
ANR	8644090	Identifier	test		8644048	1					
ANR	8644091	IfStatement	if ( pp != pool -> store -> pread && pp != pool -> store -> pwrite )		8644048	29					
ANR	8644092	Condition	pp != pool -> store -> pread && pp != pool -> store -> pwrite	1964:7:57260:57312	8644048	0	True				
ANR	8644093	AndExpression	pp != pool -> store -> pread && pp != pool -> store -> pwrite		8644048	0		&&			
ANR	8644094	EqualityExpression	pp != pool -> store -> pread		8644048	0		!=			
ANR	8644095	Identifier	pp		8644048	0					
ANR	8644096	PtrMemberAccess	pool -> store -> pread		8644048	1					
ANR	8644097	PtrMemberAccess	pool -> store		8644048	0					
ANR	8644098	Identifier	pool		8644048	0					
ANR	8644099	Identifier	store		8644048	1					
ANR	8644100	Identifier	pread		8644048	1					
ANR	8644101	EqualityExpression	pp != pool -> store -> pwrite		8644048	1		!=			
ANR	8644102	Identifier	pp		8644048	0					
ANR	8644103	PtrMemberAccess	pool -> store -> pwrite		8644048	1					
ANR	8644104	PtrMemberAccess	pool -> store		8644048	0					
ANR	8644105	Identifier	pool		8644048	0					
ANR	8644106	Identifier	store		8644048	1					
ANR	8644107	Identifier	pwrite		8644048	1					
ANR	8644108	ExpressionStatement	pp = NULL	1965:6:57321:57330	8644048	1	True				
ANR	8644109	AssignmentExpression	pp = NULL		8644048	0		=			
ANR	8644110	Identifier	pp		8644048	0					
ANR	8644111	Identifier	NULL		8644048	1					
ANR	8644112	ExpressionStatement	-- this	1970:3:57499:57505	8644048	30	True				
ANR	8644113	UnaryExpression	-- this		8644048	0					
ANR	8644114	IncDec	--		8644048	0					
ANR	8644115	Identifier	this		8644048	1					
ANR	8644116	ForStatement	for ( test = & pool -> list ; * test != this ; test = & ( * test ) -> next )		8644048	31					
ANR	8644117	ForInit	test = & pool -> list ;	1971:8:57515:57533	8644048	0	True				
ANR	8644118	AssignmentExpression	test = & pool -> list		8644048	0		=			
ANR	8644119	Identifier	test		8644048	0					
ANR	8644120	UnaryOperationExpression	& pool -> list		8644048	1					
ANR	8644121	UnaryOperator	&		8644048	0					
ANR	8644122	PtrMemberAccess	pool -> list		8644048	1					
ANR	8644123	Identifier	pool		8644048	0					
ANR	8644124	Identifier	list		8644048	1					
ANR	8644125	Condition	* test != this	1971:28:57535:57547	8644048	1	True				
ANR	8644126	EqualityExpression	* test != this		8644048	0		!=			
ANR	8644127	UnaryOperationExpression	* test		8644048	0					
ANR	8644128	UnaryOperator	*		8644048	0					
ANR	8644129	Identifier	test		8644048	1					
ANR	8644130	Identifier	this		8644048	1					
ANR	8644131	AssignmentExpression	test = & ( * test ) -> next	1971:43:57550:57570	8644048	2	True	=			
ANR	8644132	Identifier	test		8644048	0					
ANR	8644133	UnaryOperationExpression	& ( * test ) -> next		8644048	1					
ANR	8644134	UnaryOperator	&		8644048	0					
ANR	8644135	PtrMemberAccess	( * test ) -> next		8644048	1					
ANR	8644136	UnaryOperationExpression	* test		8644048	0					
ANR	8644137	UnaryOperator	*		8644048	0					
ANR	8644138	Identifier	test		8644048	1					
ANR	8644139	Identifier	next		8644048	1					
ANR	8644140	CompoundStatement		19:3:754:754	8644048	3					
ANR	8644141	IfStatement	if ( * test == NULL )		8644048	0					
ANR	8644142	Condition	* test == NULL	1973:10:57588:57600	8644048	0	True				
ANR	8644143	EqualityExpression	* test == NULL		8644048	0		==			
ANR	8644144	UnaryOperationExpression	* test		8644048	0					
ANR	8644145	UnaryOperator	*		8644048	0					
ANR	8644146	Identifier	test		8644048	1					
ANR	8644147	Identifier	NULL		8644048	1					
ANR	8644148	CompoundStatement		21:6:787:787	8644048	1					
ANR	8644149	ExpressionStatement	"store_pool_error ( pool -> store , pp , ""bad pointer to free"" )"	1975:9:57620:57676	8644048	0	True				
ANR	8644150	CallExpression	"store_pool_error ( pool -> store , pp , ""bad pointer to free"" )"		8644048	0					
ANR	8644151	Callee	store_pool_error		8644048	0					
ANR	8644152	Identifier	store_pool_error		8644048	0					
ANR	8644153	ArgumentList	pool -> store		8644048	1					
ANR	8644154	Argument	pool -> store		8644048	0					
ANR	8644155	PtrMemberAccess	pool -> store		8644048	0					
ANR	8644156	Identifier	pool		8644048	0					
ANR	8644157	Identifier	store		8644048	1					
ANR	8644158	Argument	pp		8644048	1					
ANR	8644159	Identifier	pp		8644048	0					
ANR	8644160	Argument	"""bad pointer to free"""		8644048	2					
ANR	8644161	PrimaryExpression	"""bad pointer to free"""		8644048	0					
ANR	8644162	ReturnStatement	return ;	1976:9:57687:57693	8644048	1	True				
ANR	8644163	ExpressionStatement	* test = this -> next	1981:3:57755:57773	8644048	32	True				
ANR	8644164	AssignmentExpression	* test = this -> next		8644048	0		=			
ANR	8644165	UnaryOperationExpression	* test		8644048	0					
ANR	8644166	UnaryOperator	*		8644048	0					
ANR	8644167	Identifier	test		8644048	1					
ANR	8644168	PtrMemberAccess	this -> next		8644048	1					
ANR	8644169	Identifier	this		8644048	0					
ANR	8644170	Identifier	next		8644048	1					
ANR	8644171	ExpressionStatement	this -> next = NULL	1982:3:57778:57795	8644048	33	True				
ANR	8644172	AssignmentExpression	this -> next = NULL		8644048	0		=			
ANR	8644173	PtrMemberAccess	this -> next		8644048	0					
ANR	8644174	Identifier	this		8644048	0					
ANR	8644175	Identifier	next		8644048	1					
ANR	8644176	Identifier	NULL		8644048	1					
ANR	8644177	ExpressionStatement	"store_memory_free ( pp , pool , this )"	1983:3:57800:57833	8644048	34	True				
ANR	8644178	CallExpression	"store_memory_free ( pp , pool , this )"		8644048	0					
ANR	8644179	Callee	store_memory_free		8644048	0					
ANR	8644180	Identifier	store_memory_free		8644048	0					
ANR	8644181	ArgumentList	pp		8644048	1					
ANR	8644182	Argument	pp		8644048	0					
ANR	8644183	Identifier	pp		8644048	0					
ANR	8644184	Argument	pool		8644048	1					
ANR	8644185	Identifier	pool		8644048	0					
ANR	8644186	Argument	this		8644048	2					
ANR	8644187	Identifier	this		8644048	0					
ANR	8644188	ReturnType	static void PNGCBAPI		8644048	1					
ANR	8644189	Identifier	store_free		8644048	2					
ANR	8644190	ParameterList	"png_structp ppIn , png_voidp memory"		8644048	3					
ANR	8644191	Parameter	png_structp ppIn	1953:11:56785:56800	8644048	0	True				
ANR	8644192	ParameterType	png_structp		8644048	0					
ANR	8644193	Identifier	ppIn		8644048	1					
ANR	8644194	Parameter	png_voidp memory	1953:29:56803:56818	8644048	1	True				
ANR	8644195	ParameterType	png_voidp		8644048	0					
ANR	8644196	Identifier	memory		8644048	1					
ANR	8644197	CFGEntryNode	ENTRY		8644048		True				
ANR	8644198	CFGExitNode	EXIT		8644048		True				
ANR	8644199	Symbol	pp		8644048						
ANR	8644200	Symbol	pool -> store -> pwrite		8644048						
ANR	8644201	Symbol	* pool -> store		8644048						
ANR	8644202	Symbol	memory		8644048						
ANR	8644203	Symbol	NULL		8644048						
ANR	8644204	Symbol	test		8644048						
ANR	8644205	Symbol	this -> next		8644048						
ANR	8644206	Symbol	& pool -> list		8644048						
ANR	8644207	Symbol	pool		8644048						
ANR	8644208	Symbol	this		8644048						
ANR	8644209	Symbol	* test		8644048						
ANR	8644210	Symbol	* this		8644048						
ANR	8644211	Symbol	ppIn		8644048						
ANR	8644212	Symbol	* pool		8644048						
ANR	8644213	Symbol	* * pool		8644048						
ANR	8644214	Symbol	pool -> store -> pread		8644048						
ANR	8644215	Symbol	& ( * test ) -> next		8644048						
ANR	8644216	Symbol	pool -> store		8644048						
ANR	8644217	Function	store_write_reset	1989:0:57964:58559							
ANR	8644218	FunctionDef	store_write_reset (png_store * ps)		8644217	0					
ANR	8644219	CompoundStatement		1991:0:58009:58559	8644217	0					
ANR	8644220	IfStatement	if ( ps -> pwrite != NULL )		8644217	0					
ANR	8644221	Condition	ps -> pwrite != NULL	1992:7:58018:58035	8644217	0	True				
ANR	8644222	EqualityExpression	ps -> pwrite != NULL		8644217	0		!=			
ANR	8644223	PtrMemberAccess	ps -> pwrite		8644217	0					
ANR	8644224	Identifier	ps		8644217	0					
ANR	8644225	Identifier	pwrite		8644217	1					
ANR	8644226	Identifier	NULL		8644217	1					
ANR	8644227	CompoundStatement		6:6:64:128	8644217	1					
ANR	8644228	ExpressionStatement	anon_context ( ps )	1994:6:58049:58065	8644217	0	True				
ANR	8644229	CallExpression	anon_context ( ps )		8644217	0					
ANR	8644230	Callee	anon_context		8644217	0					
ANR	8644231	Identifier	anon_context		8644217	0					
ANR	8644232	ArgumentList	ps		8644217	1					
ANR	8644233	Argument	ps		8644217	0					
ANR	8644234	Identifier	ps		8644217	0					
ANR	8644235	IdentifierDeclStatement	"Try png_destroy_write_struct ( & ps -> pwrite , & ps -> piwrite ) ;"	1996:6:58074:58138	8644217	1	True				
ANR	8644236	IdentifierDecl	"png_destroy_write_struct ( & ps -> pwrite , & ps -> piwrite )"		8644217	0					
ANR	8644237	IdentifierDeclType	Try		8644217	0					
ANR	8644238	Identifier	png_destroy_write_struct		8644217	1					
ANR	8644239	Expression	"& ps -> pwrite , & ps -> piwrite"		8644217	2					
ANR	8644240	UnaryOperationExpression	& ps -> pwrite		8644217	0					
ANR	8644241	UnaryOperator	&		8644217	0					
ANR	8644242	PtrMemberAccess	ps -> pwrite		8644217	1					
ANR	8644243	Identifier	ps		8644217	0					
ANR	8644244	Identifier	pwrite		8644217	1					
ANR	8644245	UnaryOperationExpression	& ps -> piwrite		8644217	1					
ANR	8644246	UnaryOperator	&		8644217	0					
ANR	8644247	PtrMemberAccess	ps -> piwrite		8644217	1					
ANR	8644248	Identifier	ps		8644217	0					
ANR	8644249	Identifier	piwrite		8644217	1					
ANR	8644250	Statement	Catch_anonymous	1999:6:58147:58161	8644217	2	True				
ANR	8644251	CompoundStatement		10:6:159:159	8644217	3					
ANR	8644252	ExpressionStatement	ps -> pwrite = NULL	2004:6:58230:58247	8644217	4	True				
ANR	8644253	AssignmentExpression	ps -> pwrite = NULL		8644217	0		=			
ANR	8644254	PtrMemberAccess	ps -> pwrite		8644217	0					
ANR	8644255	Identifier	ps		8644217	0					
ANR	8644256	Identifier	pwrite		8644217	1					
ANR	8644257	Identifier	NULL		8644217	1					
ANR	8644258	ExpressionStatement	ps -> piwrite = NULL	2005:6:58255:58273	8644217	5	True				
ANR	8644259	AssignmentExpression	ps -> piwrite = NULL		8644217	0		=			
ANR	8644260	PtrMemberAccess	ps -> piwrite		8644217	0					
ANR	8644261	Identifier	ps		8644217	0					
ANR	8644262	Identifier	piwrite		8644217	1					
ANR	8644263	Identifier	NULL		8644217	1					
ANR	8644264	IdentifierDeclStatement	"ifdef PNG_USER_MEM_SUPPORTED store_pool_delete ( ps , & ps -> write_memory_pool ) ;"	2011:3:58445:58525	8644217	1	True				
ANR	8644265	IdentifierDecl	"store_pool_delete ( ps , & ps -> write_memory_pool )"		8644217	0					
ANR	8644266	IdentifierDeclType	ifdef PNG_USER_MEM_SUPPORTED		8644217	0					
ANR	8644267	Identifier	store_pool_delete		8644217	1					
ANR	8644268	Expression	"ps , & ps -> write_memory_pool"		8644217	2					
ANR	8644269	Identifier	ps		8644217	0					
ANR	8644270	UnaryOperationExpression	& ps -> write_memory_pool		8644217	1					
ANR	8644271	UnaryOperator	&		8644217	0					
ANR	8644272	PtrMemberAccess	ps -> write_memory_pool		8644217	1					
ANR	8644273	Identifier	ps		8644217	0					
ANR	8644274	Identifier	write_memory_pool		8644217	1					
ANR	8644275	IdentifierDeclStatement	endif store_freenew ( ps ) ;	2013:3:58530:58557	8644217	2	True				
ANR	8644276	IdentifierDecl	store_freenew ( ps )		8644217	0					
ANR	8644277	IdentifierDeclType	endif		8644217	0					
ANR	8644278	Identifier	store_freenew		8644217	1					
ANR	8644279	Identifier	ps		8644217	2					
ANR	8644280	ReturnType	static void		8644217	1					
ANR	8644281	Identifier	store_write_reset		8644217	2					
ANR	8644282	ParameterList	png_store * ps		8644217	3					
ANR	8644283	Parameter	png_store * ps	1990:18:57994:58006	8644217	0	True				
ANR	8644284	ParameterType	png_store *		8644217	0					
ANR	8644285	Identifier	ps		8644217	1					
ANR	8644286	CFGEntryNode	ENTRY		8644217		True				
ANR	8644287	CFGExitNode	EXIT		8644217		True				
ANR	8644288	Symbol	ps		8644217						
ANR	8644289	Symbol	NULL		8644217						
ANR	8644290	Symbol	store_pool_delete		8644217						
ANR	8644291	Symbol	ps -> piwrite		8644217						
ANR	8644292	Symbol	png_destroy_write_struct		8644217						
ANR	8644293	Symbol	ps -> pwrite		8644217						
ANR	8644294	Symbol	* ps		8644217						
ANR	8644295	Symbol	store_freenew		8644217						
ANR	8644296	Function	set_store_for_write	2023:0:58857:60255							
ANR	8644297	FunctionDef	"set_store_for_write (png_store * ps , png_infopp ppi , const char * name)"		8644296	0					
ANR	8644298	CompoundStatement		2025:0:58945:60255	8644296	0					
ANR	8644299	ExpressionStatement	anon_context ( ps )	2026:3:58950:58966	8644296	0	True				
ANR	8644300	CallExpression	anon_context ( ps )		8644296	0					
ANR	8644301	Callee	anon_context		8644296	0					
ANR	8644302	Identifier	anon_context		8644296	0					
ANR	8644303	ArgumentList	ps		8644296	1					
ANR	8644304	Argument	ps		8644296	0					
ANR	8644305	Identifier	ps		8644296	0					
ANR	8644306	Statement	Try	2028:3:58972:58974	8644296	1	True				
ANR	8644307	CompoundStatement		5:3:33:33	8644296	2					
ANR	8644308	IfStatement	if ( ps -> pwrite != NULL )		8644296	0					
ANR	8644309	Condition	ps -> pwrite != NULL	2030:10:58991:59008	8644296	0	True				
ANR	8644310	EqualityExpression	ps -> pwrite != NULL		8644296	0		!=			
ANR	8644311	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644312	Identifier	ps		8644296	0					
ANR	8644313	Identifier	pwrite		8644296	1					
ANR	8644314	Identifier	NULL		8644296	1					
ANR	8644315	ExpressionStatement	"png_error ( ps -> pwrite , ""write store already in use"" )"	2031:9:59020:59071	8644296	1	True				
ANR	8644316	CallExpression	"png_error ( ps -> pwrite , ""write store already in use"" )"		8644296	0					
ANR	8644317	Callee	png_error		8644296	0					
ANR	8644318	Identifier	png_error		8644296	0					
ANR	8644319	ArgumentList	ps -> pwrite		8644296	1					
ANR	8644320	Argument	ps -> pwrite		8644296	0					
ANR	8644321	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644322	Identifier	ps		8644296	0					
ANR	8644323	Identifier	pwrite		8644296	1					
ANR	8644324	Argument	"""write store already in use"""		8644296	1					
ANR	8644325	PrimaryExpression	"""write store already in use"""		8644296	0					
ANR	8644326	ExpressionStatement	store_write_reset ( ps )	2033:6:59080:59101	8644296	1	True				
ANR	8644327	CallExpression	store_write_reset ( ps )		8644296	0					
ANR	8644328	Callee	store_write_reset		8644296	0					
ANR	8644329	Identifier	store_write_reset		8644296	0					
ANR	8644330	ArgumentList	ps		8644296	1					
ANR	8644331	Argument	ps		8644296	0					
ANR	8644332	Identifier	ps		8644296	0					
ANR	8644333	ExpressionStatement	"safecat ( ps -> wname , sizeof ps -> wname , 0 , name )"	2034:6:59109:59154	8644296	2	True				
ANR	8644334	CallExpression	"safecat ( ps -> wname , sizeof ps -> wname , 0 , name )"		8644296	0					
ANR	8644335	Callee	safecat		8644296	0					
ANR	8644336	Identifier	safecat		8644296	0					
ANR	8644337	ArgumentList	ps -> wname		8644296	1					
ANR	8644338	Argument	ps -> wname		8644296	0					
ANR	8644339	PtrMemberAccess	ps -> wname		8644296	0					
ANR	8644340	Identifier	ps		8644296	0					
ANR	8644341	Identifier	wname		8644296	1					
ANR	8644342	Argument	sizeof ps -> wname		8644296	1					
ANR	8644343	SizeofExpression	sizeof ps -> wname		8644296	0					
ANR	8644344	Sizeof	sizeof		8644296	0					
ANR	8644345	PtrMemberAccess	ps -> wname		8644296	1					
ANR	8644346	Identifier	ps		8644296	0					
ANR	8644347	Identifier	wname		8644296	1					
ANR	8644348	Argument	0		8644296	2					
ANR	8644349	PrimaryExpression	0		8644296	0					
ANR	8644350	Argument	name		8644296	3					
ANR	8644351	Identifier	name		8644296	0					
ANR	8644352	Statement	ifdef	2039:6:59306:59310	8644296	3	True				
ANR	8644353	Statement	PNG_USER_MEM_SUPPORTED	2039:12:59312:59333	8644296	4	True				
ANR	8644354	IfStatement	if ( ! ps -> speed )		8644296	5					
ANR	8644355	Condition	! ps -> speed	2040:13:59348:59357	8644296	0	True				
ANR	8644356	UnaryOperationExpression	! ps -> speed		8644296	0					
ANR	8644357	UnaryOperator	!		8644296	0					
ANR	8644358	PtrMemberAccess	ps -> speed		8644296	1					
ANR	8644359	Identifier	ps		8644296	0					
ANR	8644360	Identifier	speed		8644296	1					
ANR	8644361	ExpressionStatement	"ps -> pwrite = png_create_write_struct_2 ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning , & ps -> write_memory_pool , store_malloc , store_free )"	2041:12:59372:59545	8644296	1	True				
ANR	8644362	AssignmentExpression	"ps -> pwrite = png_create_write_struct_2 ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning , & ps -> write_memory_pool , store_malloc , store_free )"		8644296	0		=			
ANR	8644363	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644364	Identifier	ps		8644296	0					
ANR	8644365	Identifier	pwrite		8644296	1					
ANR	8644366	CallExpression	"png_create_write_struct_2 ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning , & ps -> write_memory_pool , store_malloc , store_free )"		8644296	1					
ANR	8644367	Callee	png_create_write_struct_2		8644296	0					
ANR	8644368	Identifier	png_create_write_struct_2		8644296	0					
ANR	8644369	ArgumentList	PNG_LIBPNG_VER_STRING		8644296	1					
ANR	8644370	Argument	PNG_LIBPNG_VER_STRING		8644296	0					
ANR	8644371	Identifier	PNG_LIBPNG_VER_STRING		8644296	0					
ANR	8644372	Argument	ps		8644296	1					
ANR	8644373	Identifier	ps		8644296	0					
ANR	8644374	Argument	store_error		8644296	2					
ANR	8644375	Identifier	store_error		8644296	0					
ANR	8644376	Argument	store_warning		8644296	3					
ANR	8644377	Identifier	store_warning		8644296	0					
ANR	8644378	Argument	& ps -> write_memory_pool		8644296	4					
ANR	8644379	UnaryOperationExpression	& ps -> write_memory_pool		8644296	0					
ANR	8644380	UnaryOperator	&		8644296	0					
ANR	8644381	PtrMemberAccess	ps -> write_memory_pool		8644296	1					
ANR	8644382	Identifier	ps		8644296	0					
ANR	8644383	Identifier	write_memory_pool		8644296	1					
ANR	8644384	Argument	store_malloc		8644296	5					
ANR	8644385	Identifier	store_malloc		8644296	0					
ANR	8644386	Argument	store_free		8644296	6					
ANR	8644387	Identifier	store_free		8644296	0					
ANR	8644388	ElseStatement	else		8644296	0					
ANR	8644389	Statement	endif	2046:6:59568:59572	8644296	0	True				
ANR	8644390	ExpressionStatement	"ps -> pwrite = png_create_write_struct ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning )"	2047:9:59583:59686	8644296	6	True				
ANR	8644391	AssignmentExpression	"ps -> pwrite = png_create_write_struct ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning )"		8644296	0		=			
ANR	8644392	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644393	Identifier	ps		8644296	0					
ANR	8644394	Identifier	pwrite		8644296	1					
ANR	8644395	CallExpression	"png_create_write_struct ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning )"		8644296	1					
ANR	8644396	Callee	png_create_write_struct		8644296	0					
ANR	8644397	Identifier	png_create_write_struct		8644296	0					
ANR	8644398	ArgumentList	PNG_LIBPNG_VER_STRING		8644296	1					
ANR	8644399	Argument	PNG_LIBPNG_VER_STRING		8644296	0					
ANR	8644400	Identifier	PNG_LIBPNG_VER_STRING		8644296	0					
ANR	8644401	Argument	ps		8644296	1					
ANR	8644402	Identifier	ps		8644296	0					
ANR	8644403	Argument	store_error		8644296	2					
ANR	8644404	Identifier	store_error		8644296	0					
ANR	8644405	Argument	store_warning		8644296	3					
ANR	8644406	Identifier	store_warning		8644296	0					
ANR	8644407	ExpressionStatement	"png_set_write_fn ( ps -> pwrite , ps , store_write , store_flush )"	2050:6:59695:59753	8644296	7	True				
ANR	8644408	CallExpression	"png_set_write_fn ( ps -> pwrite , ps , store_write , store_flush )"		8644296	0					
ANR	8644409	Callee	png_set_write_fn		8644296	0					
ANR	8644410	Identifier	png_set_write_fn		8644296	0					
ANR	8644411	ArgumentList	ps -> pwrite		8644296	1					
ANR	8644412	Argument	ps -> pwrite		8644296	0					
ANR	8644413	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644414	Identifier	ps		8644296	0					
ANR	8644415	Identifier	pwrite		8644296	1					
ANR	8644416	Argument	ps		8644296	1					
ANR	8644417	Identifier	ps		8644296	0					
ANR	8644418	Argument	store_write		8644296	2					
ANR	8644419	Identifier	store_write		8644296	0					
ANR	8644420	Argument	store_flush		8644296	3					
ANR	8644421	Identifier	store_flush		8644296	0					
ANR	8644422	Statement	ifdef	2052:6:59762:59766	8644296	8	True				
ANR	8644423	Statement	PNG_SET_OPTION_SUPPORTED	2052:12:59768:59791	8644296	9	True				
ANR	8644424	CompoundStatement		30:12:870:877	8644296	10					
ANR	8644425	IdentifierDeclStatement	int opt ;	2054:12:59816:59823	8644296	0	True				
ANR	8644426	IdentifierDecl	opt		8644296	0					
ANR	8644427	IdentifierDeclType	int		8644296	0					
ANR	8644428	Identifier	opt		8644296	1					
ANR	8644429	ForStatement	for ( opt = 0 ; opt < ps -> noptions ; ++ opt )		8644296	1					
ANR	8644430	ForInit	opt = 0 ;	2055:17:59842:59847	8644296	0	True				
ANR	8644431	AssignmentExpression	opt = 0		8644296	0		=			
ANR	8644432	Identifier	opt		8644296	0					
ANR	8644433	PrimaryExpression	0		8644296	1					
ANR	8644434	Condition	opt < ps -> noptions	2055:24:59849:59864	8644296	1	True				
ANR	8644435	RelationalExpression	opt < ps -> noptions		8644296	0		<			
ANR	8644436	Identifier	opt		8644296	0					
ANR	8644437	PtrMemberAccess	ps -> noptions		8644296	1					
ANR	8644438	Identifier	ps		8644296	0					
ANR	8644439	Identifier	noptions		8644296	1					
ANR	8644440	UnaryExpression	++ opt	2055:42:59867:59871	8644296	2	True				
ANR	8644441	IncDec	++		8644296	0					
ANR	8644442	Identifier	opt		8644296	1					
ANR	8644443	IfStatement	"if ( png_set_option ( ps -> pwrite , ps -> options [ opt ] . option , ps -> options [ opt ] . setting ) == PNG_OPTION_INVALID )"		8644296	3					
ANR	8644444	Condition	"png_set_option ( ps -> pwrite , ps -> options [ opt ] . option , ps -> options [ opt ] . setting ) == PNG_OPTION_INVALID"	2056:19:59893:60009	8644296	0	True				
ANR	8644445	EqualityExpression	"png_set_option ( ps -> pwrite , ps -> options [ opt ] . option , ps -> options [ opt ] . setting ) == PNG_OPTION_INVALID"		8644296	0		==			
ANR	8644446	CallExpression	"png_set_option ( ps -> pwrite , ps -> options [ opt ] . option , ps -> options [ opt ] . setting )"		8644296	0					
ANR	8644447	Callee	png_set_option		8644296	0					
ANR	8644448	Identifier	png_set_option		8644296	0					
ANR	8644449	ArgumentList	ps -> pwrite		8644296	1					
ANR	8644450	Argument	ps -> pwrite		8644296	0					
ANR	8644451	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644452	Identifier	ps		8644296	0					
ANR	8644453	Identifier	pwrite		8644296	1					
ANR	8644454	Argument	ps -> options [ opt ] . option		8644296	1					
ANR	8644455	MemberAccess	ps -> options [ opt ] . option		8644296	0					
ANR	8644456	ArrayIndexing	ps -> options [ opt ]		8644296	0					
ANR	8644457	PtrMemberAccess	ps -> options		8644296	0					
ANR	8644458	Identifier	ps		8644296	0					
ANR	8644459	Identifier	options		8644296	1					
ANR	8644460	Identifier	opt		8644296	1					
ANR	8644461	Identifier	option		8644296	1					
ANR	8644462	Argument	ps -> options [ opt ] . setting		8644296	2					
ANR	8644463	MemberAccess	ps -> options [ opt ] . setting		8644296	0					
ANR	8644464	ArrayIndexing	ps -> options [ opt ]		8644296	0					
ANR	8644465	PtrMemberAccess	ps -> options		8644296	0					
ANR	8644466	Identifier	ps		8644296	0					
ANR	8644467	Identifier	options		8644296	1					
ANR	8644468	Identifier	opt		8644296	1					
ANR	8644469	Identifier	setting		8644296	1					
ANR	8644470	Identifier	PNG_OPTION_INVALID		8644296	1					
ANR	8644471	ExpressionStatement	"png_error ( ps -> pwrite , ""png option invalid"" )"	2058:18:60030:60073	8644296	1	True				
ANR	8644472	CallExpression	"png_error ( ps -> pwrite , ""png option invalid"" )"		8644296	0					
ANR	8644473	Callee	png_error		8644296	0					
ANR	8644474	Identifier	png_error		8644296	0					
ANR	8644475	ArgumentList	ps -> pwrite		8644296	1					
ANR	8644476	Argument	ps -> pwrite		8644296	0					
ANR	8644477	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644478	Identifier	ps		8644296	0					
ANR	8644479	Identifier	pwrite		8644296	1					
ANR	8644480	Argument	"""png option invalid"""		8644296	1					
ANR	8644481	PrimaryExpression	"""png option invalid"""		8644296	0					
ANR	8644482	Statement	endif	2060:6:60092:60096	8644296	11	True				
ANR	8644483	IfStatement	if ( ppi != NULL )		8644296	12					
ANR	8644484	Condition	ppi != NULL	2062:10:60109:60119	8644296	0	True				
ANR	8644485	EqualityExpression	ppi != NULL		8644296	0		!=			
ANR	8644486	Identifier	ppi		8644296	0					
ANR	8644487	Identifier	NULL		8644296	1					
ANR	8644488	ExpressionStatement	* ppi = ps -> piwrite = png_create_info_struct ( ps -> pwrite )	2063:9:60131:60186	8644296	1	True				
ANR	8644489	AssignmentExpression	* ppi = ps -> piwrite = png_create_info_struct ( ps -> pwrite )		8644296	0		=			
ANR	8644490	UnaryOperationExpression	* ppi		8644296	0					
ANR	8644491	UnaryOperator	*		8644296	0					
ANR	8644492	Identifier	ppi		8644296	1					
ANR	8644493	AssignmentExpression	ps -> piwrite = png_create_info_struct ( ps -> pwrite )		8644296	1		=			
ANR	8644494	PtrMemberAccess	ps -> piwrite		8644296	0					
ANR	8644495	Identifier	ps		8644296	0					
ANR	8644496	Identifier	piwrite		8644296	1					
ANR	8644497	CallExpression	png_create_info_struct ( ps -> pwrite )		8644296	1					
ANR	8644498	Callee	png_create_info_struct		8644296	0					
ANR	8644499	Identifier	png_create_info_struct		8644296	0					
ANR	8644500	ArgumentList	ps -> pwrite		8644296	1					
ANR	8644501	Argument	ps -> pwrite		8644296	0					
ANR	8644502	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644503	Identifier	ps		8644296	0					
ANR	8644504	Identifier	pwrite		8644296	1					
ANR	8644505	Statement	Catch_anonymous	2066:3:60197:60211	8644296	3	True				
ANR	8644506	ReturnStatement	return NULL ;	2067:6:60219:60230	8644296	4	True				
ANR	8644507	Identifier	NULL		8644296	0					
ANR	8644508	ReturnStatement	return ps -> pwrite ;	2069:3:60236:60253	8644296	5	True				
ANR	8644509	PtrMemberAccess	ps -> pwrite		8644296	0					
ANR	8644510	Identifier	ps		8644296	0					
ANR	8644511	Identifier	pwrite		8644296	1					
ANR	8644512	ReturnType	static png_structp		8644296	1					
ANR	8644513	Identifier	set_store_for_write		8644296	2					
ANR	8644514	ParameterList	"png_store * ps , png_infopp ppi , const char * name"		8644296	3					
ANR	8644515	Parameter	png_store * ps	2024:20:58896:58908	8644296	0	True				
ANR	8644516	ParameterType	png_store *		8644296	0					
ANR	8644517	Identifier	ps		8644296	1					
ANR	8644518	Parameter	png_infopp ppi	2024:35:58911:58924	8644296	1	True				
ANR	8644519	ParameterType	png_infopp		8644296	0					
ANR	8644520	Identifier	ppi		8644296	1					
ANR	8644521	Parameter	const char * name	2024:51:58927:58942	8644296	2	True				
ANR	8644522	ParameterType	const char *		8644296	0					
ANR	8644523	Identifier	name		8644296	1					
ANR	8644524	CFGEntryNode	ENTRY		8644296		True				
ANR	8644525	CFGExitNode	EXIT		8644296		True				
ANR	8644526	Symbol	ps -> speed		8644296						
ANR	8644527	Symbol	ps -> options [ opt ] . setting		8644296						
ANR	8644528	Symbol	ps		8644296						
ANR	8644529	Symbol	& ps -> write_memory_pool		8644296						
ANR	8644530	Symbol	ps -> options [ opt ] . option		8644296						
ANR	8644531	Symbol	store_error		8644296						
ANR	8644532	Symbol	ps -> noptions		8644296						
ANR	8644533	Symbol	png_create_write_struct_2		8644296						
ANR	8644534	Symbol	PNG_OPTION_INVALID		8644296						
ANR	8644535	Symbol	store_flush		8644296						
ANR	8644536	Symbol	* ppi		8644296						
ANR	8644537	Symbol	ps -> piwrite		8644296						
ANR	8644538	Symbol	store_malloc		8644296						
ANR	8644539	Symbol	ps -> wname		8644296						
ANR	8644540	Symbol	* opt		8644296						
ANR	8644541	Symbol	png_create_write_struct		8644296						
ANR	8644542	Symbol	* ps -> options		8644296						
ANR	8644543	Symbol	NULL		8644296						
ANR	8644544	Symbol	png_set_option		8644296						
ANR	8644545	Symbol	store_free		8644296						
ANR	8644546	Symbol	ppi		8644296						
ANR	8644547	Symbol	store_write		8644296						
ANR	8644548	Symbol	* ps		8644296						
ANR	8644549	Symbol	* * ps		8644296						
ANR	8644550	Symbol	png_create_info_struct		8644296						
ANR	8644551	Symbol	opt		8644296						
ANR	8644552	Symbol	ps -> options		8644296						
ANR	8644553	Symbol	store_warning		8644296						
ANR	8644554	Symbol	name		8644296						
ANR	8644555	Symbol	ps -> pwrite		8644296						
ANR	8644556	Symbol	PNG_LIBPNG_VER_STRING		8644296						
ANR	8644557	Function	store_read_reset	2076:0:60478:61175							
ANR	8644558	FunctionDef	store_read_reset (png_store * ps)		8644557	0					
ANR	8644559	CompoundStatement		2078:0:60522:61175	8644557	0					
ANR	8644560	Statement	ifdef	2079:3:60527:60531	8644557	0	True				
ANR	8644561	Statement	PNG_READ_SUPPORTED	2079:9:60533:60550	8644557	1	True				
ANR	8644562	IfStatement	if ( ps -> pread != NULL )		8644557	2					
ANR	8644563	Condition	ps -> pread != NULL	2080:10:60562:60578	8644557	0	True				
ANR	8644564	EqualityExpression	ps -> pread != NULL		8644557	0		!=			
ANR	8644565	PtrMemberAccess	ps -> pread		8644557	0					
ANR	8644566	Identifier	ps		8644557	0					
ANR	8644567	Identifier	pread		8644557	1					
ANR	8644568	Identifier	NULL		8644557	1					
ANR	8644569	CompoundStatement		7:9:103:173	8644557	1					
ANR	8644570	ExpressionStatement	anon_context ( ps )	2082:9:60598:60614	8644557	0	True				
ANR	8644571	CallExpression	anon_context ( ps )		8644557	0					
ANR	8644572	Callee	anon_context		8644557	0					
ANR	8644573	Identifier	anon_context		8644557	0					
ANR	8644574	ArgumentList	ps		8644557	1					
ANR	8644575	Argument	ps		8644557	0					
ANR	8644576	Identifier	ps		8644557	0					
ANR	8644577	IdentifierDeclStatement	"Try png_destroy_read_struct ( & ps -> pread , & ps -> piread , NULL ) ;"	2084:9:60626:60696	8644557	1	True				
ANR	8644578	IdentifierDecl	"png_destroy_read_struct ( & ps -> pread , & ps -> piread , NULL )"		8644557	0					
ANR	8644579	IdentifierDeclType	Try		8644557	0					
ANR	8644580	Identifier	png_destroy_read_struct		8644557	1					
ANR	8644581	Expression	"& ps -> pread , & ps -> piread , NULL"		8644557	2					
ANR	8644582	UnaryOperationExpression	& ps -> pread		8644557	0					
ANR	8644583	UnaryOperator	&		8644557	0					
ANR	8644584	PtrMemberAccess	ps -> pread		8644557	1					
ANR	8644585	Identifier	ps		8644557	0					
ANR	8644586	Identifier	pread		8644557	1					
ANR	8644587	Expression	"& ps -> piread , NULL"		8644557	1					
ANR	8644588	UnaryOperationExpression	& ps -> piread		8644557	0					
ANR	8644589	UnaryOperator	&		8644557	0					
ANR	8644590	PtrMemberAccess	ps -> piread		8644557	1					
ANR	8644591	Identifier	ps		8644557	0					
ANR	8644592	Identifier	piread		8644557	1					
ANR	8644593	Identifier	NULL		8644557	1					
ANR	8644594	Statement	Catch_anonymous	2087:9:60708:60722	8644557	2	True				
ANR	8644595	CompoundStatement		11:9:210:210	8644557	3					
ANR	8644596	ExpressionStatement	ps -> pread = NULL	2092:9:60805:60821	8644557	4	True				
ANR	8644597	AssignmentExpression	ps -> pread = NULL		8644557	0		=			
ANR	8644598	PtrMemberAccess	ps -> pread		8644557	0					
ANR	8644599	Identifier	ps		8644557	0					
ANR	8644600	Identifier	pread		8644557	1					
ANR	8644601	Identifier	NULL		8644557	1					
ANR	8644602	ExpressionStatement	ps -> piread = NULL	2093:9:60832:60849	8644557	5	True				
ANR	8644603	AssignmentExpression	ps -> piread = NULL		8644557	0		=			
ANR	8644604	PtrMemberAccess	ps -> piread		8644557	0					
ANR	8644605	Identifier	ps		8644557	0					
ANR	8644606	Identifier	piread		8644557	1					
ANR	8644607	Identifier	NULL		8644557	1					
ANR	8644608	IdentifierDeclStatement	"endif ifdef PNG_USER_MEM_SUPPORTED store_pool_delete ( ps , & ps -> read_memory_pool ) ;"	2095:3:60862:60990	8644557	3	True				
ANR	8644609	IdentifierDecl	"store_pool_delete ( ps , & ps -> read_memory_pool )"		8644557	0					
ANR	8644610	IdentifierDeclType	endif ifdef PNG_USER_MEM_SUPPORTED		8644557	0					
ANR	8644611	Identifier	store_pool_delete		8644557	1					
ANR	8644612	Expression	"ps , & ps -> read_memory_pool"		8644557	2					
ANR	8644613	Identifier	ps		8644557	0					
ANR	8644614	UnaryOperationExpression	& ps -> read_memory_pool		8644557	1					
ANR	8644615	UnaryOperator	&		8644557	0					
ANR	8644616	PtrMemberAccess	ps -> read_memory_pool		8644557	1					
ANR	8644617	Identifier	ps		8644557	0					
ANR	8644618	Identifier	read_memory_pool		8644557	1					
ANR	8644619	Statement	endif	2100:3:60995:60999	8644557	4	True				
ANR	8644620	ExpressionStatement	ps -> current = NULL	2102:3:61005:61023	8644557	5	True				
ANR	8644621	AssignmentExpression	ps -> current = NULL		8644557	0		=			
ANR	8644622	PtrMemberAccess	ps -> current		8644557	0					
ANR	8644623	Identifier	ps		8644557	0					
ANR	8644624	Identifier	current		8644557	1					
ANR	8644625	Identifier	NULL		8644557	1					
ANR	8644626	ExpressionStatement	ps -> next = NULL	2103:3:61028:61043	8644557	6	True				
ANR	8644627	AssignmentExpression	ps -> next = NULL		8644557	0		=			
ANR	8644628	PtrMemberAccess	ps -> next		8644557	0					
ANR	8644629	Identifier	ps		8644557	0					
ANR	8644630	Identifier	next		8644557	1					
ANR	8644631	Identifier	NULL		8644557	1					
ANR	8644632	ExpressionStatement	ps -> readpos = 0	2104:3:61048:61063	8644557	7	True				
ANR	8644633	AssignmentExpression	ps -> readpos = 0		8644557	0		=			
ANR	8644634	PtrMemberAccess	ps -> readpos		8644557	0					
ANR	8644635	Identifier	ps		8644557	0					
ANR	8644636	Identifier	readpos		8644557	1					
ANR	8644637	PrimaryExpression	0		8644557	1					
ANR	8644638	ExpressionStatement	ps -> validated = 0	2105:3:61068:61085	8644557	8	True				
ANR	8644639	AssignmentExpression	ps -> validated = 0		8644557	0		=			
ANR	8644640	PtrMemberAccess	ps -> validated		8644557	0					
ANR	8644641	Identifier	ps		8644557	0					
ANR	8644642	Identifier	validated		8644557	1					
ANR	8644643	PrimaryExpression	0		8644557	1					
ANR	8644644	ExpressionStatement	ps -> chunkpos = 8	2107:3:61091:61107	8644557	9	True				
ANR	8644645	AssignmentExpression	ps -> chunkpos = 8		8644557	0		=			
ANR	8644646	PtrMemberAccess	ps -> chunkpos		8644557	0					
ANR	8644647	Identifier	ps		8644557	0					
ANR	8644648	Identifier	chunkpos		8644557	1					
ANR	8644649	PrimaryExpression	8		8644557	1					
ANR	8644650	ExpressionStatement	ps -> chunktype = 0	2108:3:61112:61129	8644557	10	True				
ANR	8644651	AssignmentExpression	ps -> chunktype = 0		8644557	0		=			
ANR	8644652	PtrMemberAccess	ps -> chunktype		8644557	0					
ANR	8644653	Identifier	ps		8644557	0					
ANR	8644654	Identifier	chunktype		8644557	1					
ANR	8644655	PrimaryExpression	0		8644557	1					
ANR	8644656	ExpressionStatement	ps -> chunklen = 16	2109:3:61134:61151	8644557	11	True				
ANR	8644657	AssignmentExpression	ps -> chunklen = 16		8644557	0		=			
ANR	8644658	PtrMemberAccess	ps -> chunklen		8644557	0					
ANR	8644659	Identifier	ps		8644557	0					
ANR	8644660	Identifier	chunklen		8644557	1					
ANR	8644661	PrimaryExpression	16		8644557	1					
ANR	8644662	ExpressionStatement	ps -> IDAT_size = 0	2110:3:61156:61173	8644557	12	True				
ANR	8644663	AssignmentExpression	ps -> IDAT_size = 0		8644557	0		=			
ANR	8644664	PtrMemberAccess	ps -> IDAT_size		8644557	0					
ANR	8644665	Identifier	ps		8644557	0					
ANR	8644666	Identifier	IDAT_size		8644557	1					
ANR	8644667	PrimaryExpression	0		8644557	1					
ANR	8644668	ReturnType	static void		8644557	1					
ANR	8644669	Identifier	store_read_reset		8644557	2					
ANR	8644670	ParameterList	png_store * ps		8644557	3					
ANR	8644671	Parameter	png_store * ps	2077:17:60507:60519	8644557	0	True				
ANR	8644672	ParameterType	png_store *		8644557	0					
ANR	8644673	Identifier	ps		8644557	1					
ANR	8644674	CFGEntryNode	ENTRY		8644557		True				
ANR	8644675	CFGExitNode	EXIT		8644557		True				
ANR	8644676	Symbol	ps		8644557						
ANR	8644677	Symbol	NULL		8644557						
ANR	8644678	Symbol	store_pool_delete		8644557						
ANR	8644679	Symbol	ps -> current		8644557						
ANR	8644680	Symbol	ps -> next		8644557						
ANR	8644681	Symbol	* ps		8644557						
ANR	8644682	Symbol	ps -> readpos		8644557						
ANR	8644683	Symbol	ps -> chunktype		8644557						
ANR	8644684	Symbol	ps -> piread		8644557						
ANR	8644685	Symbol	png_destroy_read_struct		8644557						
ANR	8644686	Symbol	ps -> validated		8644557						
ANR	8644687	Symbol	ps -> IDAT_size		8644557						
ANR	8644688	Symbol	ps -> chunklen		8644557						
ANR	8644689	Symbol	ps -> chunkpos		8644557						
ANR	8644690	Symbol	ps -> pread		8644557						
ANR	8644691	Function	store_read_set	2114:0:61204:61903							
ANR	8644692	FunctionDef	"store_read_set (png_store * ps , png_uint_32 id)"		8644691	0					
ANR	8644693	CompoundStatement		2116:0:61262:61903	8644691	0					
ANR	8644694	IdentifierDeclStatement	png_store_file * pf = ps -> saved ;	2117:3:61267:61297	8644691	0	True				
ANR	8644695	IdentifierDecl	* pf = ps -> saved		8644691	0					
ANR	8644696	IdentifierDeclType	png_store_file *		8644691	0					
ANR	8644697	Identifier	pf		8644691	1					
ANR	8644698	AssignmentExpression	* pf = ps -> saved		8644691	2		=			
ANR	8644699	Identifier	pf		8644691	0					
ANR	8644700	PtrMemberAccess	ps -> saved		8644691	1					
ANR	8644701	Identifier	ps		8644691	0					
ANR	8644702	Identifier	saved		8644691	1					
ANR	8644703	WhileStatement	while ( pf != NULL )		8644691	1					
ANR	8644704	Condition	pf != NULL	2119:10:61310:61319	8644691	0	True				
ANR	8644705	EqualityExpression	pf != NULL		8644691	0		!=			
ANR	8644706	Identifier	pf		8644691	0					
ANR	8644707	Identifier	NULL		8644691	1					
ANR	8644708	CompoundStatement		5:3:62:62	8644691	1					
ANR	8644709	IfStatement	if ( pf -> id == id )		8644691	0					
ANR	8644710	Condition	pf -> id == id	2121:10:61337:61348	8644691	0	True				
ANR	8644711	EqualityExpression	pf -> id == id		8644691	0		==			
ANR	8644712	PtrMemberAccess	pf -> id		8644691	0					
ANR	8644713	Identifier	pf		8644691	0					
ANR	8644714	Identifier	id		8644691	1					
ANR	8644715	Identifier	id		8644691	1					
ANR	8644716	CompoundStatement		7:6:94:94	8644691	1					
ANR	8644717	ExpressionStatement	ps -> current = pf	2123:9:61368:61384	8644691	0	True				
ANR	8644718	AssignmentExpression	ps -> current = pf		8644691	0		=			
ANR	8644719	PtrMemberAccess	ps -> current		8644691	0					
ANR	8644720	Identifier	ps		8644691	0					
ANR	8644721	Identifier	current		8644691	1					
ANR	8644722	Identifier	pf		8644691	1					
ANR	8644723	ExpressionStatement	ps -> next = NULL	2124:9:61395:61410	8644691	1	True				
ANR	8644724	AssignmentExpression	ps -> next = NULL		8644691	0		=			
ANR	8644725	PtrMemberAccess	ps -> next		8644691	0					
ANR	8644726	Identifier	ps		8644691	0					
ANR	8644727	Identifier	next		8644691	1					
ANR	8644728	Identifier	NULL		8644691	1					
ANR	8644729	ExpressionStatement	ps -> IDAT_size = pf -> IDAT_size	2125:9:61421:61450	8644691	2	True				
ANR	8644730	AssignmentExpression	ps -> IDAT_size = pf -> IDAT_size		8644691	0		=			
ANR	8644731	PtrMemberAccess	ps -> IDAT_size		8644691	0					
ANR	8644732	Identifier	ps		8644691	0					
ANR	8644733	Identifier	IDAT_size		8644691	1					
ANR	8644734	PtrMemberAccess	pf -> IDAT_size		8644691	1					
ANR	8644735	Identifier	pf		8644691	0					
ANR	8644736	Identifier	IDAT_size		8644691	1					
ANR	8644737	ExpressionStatement	ps -> IDAT_bits = pf -> IDAT_bits	2126:9:61461:61490	8644691	3	True				
ANR	8644738	AssignmentExpression	ps -> IDAT_bits = pf -> IDAT_bits		8644691	0		=			
ANR	8644739	PtrMemberAccess	ps -> IDAT_bits		8644691	0					
ANR	8644740	Identifier	ps		8644691	0					
ANR	8644741	Identifier	IDAT_bits		8644691	1					
ANR	8644742	PtrMemberAccess	pf -> IDAT_bits		8644691	1					
ANR	8644743	Identifier	pf		8644691	0					
ANR	8644744	Identifier	IDAT_bits		8644691	1					
ANR	8644745	ExpressionStatement	ps -> IDAT_len = 0	2127:9:61520:61536	8644691	4	True				
ANR	8644746	AssignmentExpression	ps -> IDAT_len = 0		8644691	0		=			
ANR	8644747	PtrMemberAccess	ps -> IDAT_len		8644691	0					
ANR	8644748	Identifier	ps		8644691	0					
ANR	8644749	Identifier	IDAT_len		8644691	1					
ANR	8644750	PrimaryExpression	0		8644691	1					
ANR	8644751	ExpressionStatement	ps -> IDAT_pos = 0	2128:9:61547:61563	8644691	5	True				
ANR	8644752	AssignmentExpression	ps -> IDAT_pos = 0		8644691	0		=			
ANR	8644753	PtrMemberAccess	ps -> IDAT_pos		8644691	0					
ANR	8644754	Identifier	ps		8644691	0					
ANR	8644755	Identifier	IDAT_pos		8644691	1					
ANR	8644756	PrimaryExpression	0		8644691	1					
ANR	8644757	ExpressionStatement	ps -> IDAT_crc = 0UL	2129:9:61574:61592	8644691	6	True				
ANR	8644758	AssignmentExpression	ps -> IDAT_crc = 0UL		8644691	0		=			
ANR	8644759	PtrMemberAccess	ps -> IDAT_crc		8644691	0					
ANR	8644760	Identifier	ps		8644691	0					
ANR	8644761	Identifier	IDAT_crc		8644691	1					
ANR	8644762	PrimaryExpression	0UL		8644691	1					
ANR	8644763	ExpressionStatement	store_read_buffer_next ( ps )	2130:9:61603:61629	8644691	7	True				
ANR	8644764	CallExpression	store_read_buffer_next ( ps )		8644691	0					
ANR	8644765	Callee	store_read_buffer_next		8644691	0					
ANR	8644766	Identifier	store_read_buffer_next		8644691	0					
ANR	8644767	ArgumentList	ps		8644691	1					
ANR	8644768	Argument	ps		8644691	0					
ANR	8644769	Identifier	ps		8644691	0					
ANR	8644770	ReturnStatement	return ;	2131:9:61640:61646	8644691	8	True				
ANR	8644771	ExpressionStatement	pf = pf -> next	2134:6:61663:61676	8644691	1	True				
ANR	8644772	AssignmentExpression	pf = pf -> next		8644691	0		=			
ANR	8644773	Identifier	pf		8644691	0					
ANR	8644774	PtrMemberAccess	pf -> next		8644691	1					
ANR	8644775	Identifier	pf		8644691	0					
ANR	8644776	Identifier	next		8644691	1					
ANR	8644777	CompoundStatement		24:6:450:477	8644691	2					
ANR	8644778	IdentifierDeclStatement	size_t pos ;	2138:6:61695:61705	8644691	0	True				
ANR	8644779	IdentifierDecl	pos		8644691	0					
ANR	8644780	IdentifierDeclType	size_t		8644691	0					
ANR	8644781	Identifier	pos		8644691	1					
ANR	8644782	IdentifierDeclStatement	char msg [ FILE_NAME_SIZE + 64 ] ;	2139:6:61713:61740	8644691	1	True				
ANR	8644783	IdentifierDecl	msg [ FILE_NAME_SIZE + 64 ]		8644691	0					
ANR	8644784	IdentifierDeclType	char [ FILE_NAME_SIZE + 64 ]		8644691	0					
ANR	8644785	Identifier	msg		8644691	1					
ANR	8644786	AdditiveExpression	FILE_NAME_SIZE + 64		8644691	2		+			
ANR	8644787	Identifier	FILE_NAME_SIZE		8644691	0					
ANR	8644788	PrimaryExpression	64		8644691	1					
ANR	8644789	ExpressionStatement	"pos = standard_name_from_id ( msg , sizeof msg , 0 , id )"	2141:6:61749:61800	8644691	2	True				
ANR	8644790	AssignmentExpression	"pos = standard_name_from_id ( msg , sizeof msg , 0 , id )"		8644691	0		=			
ANR	8644791	Identifier	pos		8644691	0					
ANR	8644792	CallExpression	"standard_name_from_id ( msg , sizeof msg , 0 , id )"		8644691	1					
ANR	8644793	Callee	standard_name_from_id		8644691	0					
ANR	8644794	Identifier	standard_name_from_id		8644691	0					
ANR	8644795	ArgumentList	msg		8644691	1					
ANR	8644796	Argument	msg		8644691	0					
ANR	8644797	Identifier	msg		8644691	0					
ANR	8644798	Argument	sizeof msg		8644691	1					
ANR	8644799	SizeofExpression	sizeof msg		8644691	0					
ANR	8644800	Sizeof	sizeof		8644691	0					
ANR	8644801	Identifier	msg		8644691	1					
ANR	8644802	Argument	0		8644691	2					
ANR	8644803	PrimaryExpression	0		8644691	0					
ANR	8644804	Argument	id		8644691	3					
ANR	8644805	Identifier	id		8644691	0					
ANR	8644806	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "": file not found"" )"	2142:6:61808:61863	8644691	3	True				
ANR	8644807	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "": file not found"" )"		8644691	0		=			
ANR	8644808	Identifier	pos		8644691	0					
ANR	8644809	CallExpression	"safecat ( msg , sizeof msg , pos , "": file not found"" )"		8644691	1					
ANR	8644810	Callee	safecat		8644691	0					
ANR	8644811	Identifier	safecat		8644691	0					
ANR	8644812	ArgumentList	msg		8644691	1					
ANR	8644813	Argument	msg		8644691	0					
ANR	8644814	Identifier	msg		8644691	0					
ANR	8644815	Argument	sizeof msg		8644691	1					
ANR	8644816	SizeofExpression	sizeof msg		8644691	0					
ANR	8644817	Sizeof	sizeof		8644691	0					
ANR	8644818	Identifier	msg		8644691	1					
ANR	8644819	Argument	pos		8644691	2					
ANR	8644820	Identifier	pos		8644691	0					
ANR	8644821	Argument	""": file not found"""		8644691	3					
ANR	8644822	PrimaryExpression	""": file not found"""		8644691	0					
ANR	8644823	ExpressionStatement	"png_error ( ps -> pread , msg )"	2143:6:61871:61896	8644691	4	True				
ANR	8644824	CallExpression	"png_error ( ps -> pread , msg )"		8644691	0					
ANR	8644825	Callee	png_error		8644691	0					
ANR	8644826	Identifier	png_error		8644691	0					
ANR	8644827	ArgumentList	ps -> pread		8644691	1					
ANR	8644828	Argument	ps -> pread		8644691	0					
ANR	8644829	PtrMemberAccess	ps -> pread		8644691	0					
ANR	8644830	Identifier	ps		8644691	0					
ANR	8644831	Identifier	pread		8644691	1					
ANR	8644832	Argument	msg		8644691	1					
ANR	8644833	Identifier	msg		8644691	0					
ANR	8644834	ReturnType	static void		8644691	1					
ANR	8644835	Identifier	store_read_set		8644691	2					
ANR	8644836	ParameterList	"png_store * ps , png_uint_32 id"		8644691	3					
ANR	8644837	Parameter	png_store * ps	2115:15:61231:61243	8644691	0	True				
ANR	8644838	ParameterType	png_store *		8644691	0					
ANR	8644839	Identifier	ps		8644691	1					
ANR	8644840	Parameter	png_uint_32 id	2115:30:61246:61259	8644691	1	True				
ANR	8644841	ParameterType	png_uint_32		8644691	0					
ANR	8644842	Identifier	id		8644691	1					
ANR	8644843	CFGEntryNode	ENTRY		8644691		True				
ANR	8644844	CFGExitNode	EXIT		8644691		True				
ANR	8644845	Symbol	msg		8644691						
ANR	8644846	Symbol	ps		8644691						
ANR	8644847	Symbol	NULL		8644691						
ANR	8644848	Symbol	pf -> IDAT_bits		8644691						
ANR	8644849	Symbol	ps -> current		8644691						
ANR	8644850	Symbol	ps -> next		8644691						
ANR	8644851	Symbol	* ps		8644691						
ANR	8644852	Symbol	ps -> IDAT_pos		8644691						
ANR	8644853	Symbol	ps -> IDAT_crc		8644691						
ANR	8644854	Symbol	ps -> IDAT_len		8644691						
ANR	8644855	Symbol	pf -> id		8644691						
ANR	8644856	Symbol	ps -> IDAT_bits		8644691						
ANR	8644857	Symbol	pf -> IDAT_size		8644691						
ANR	8644858	Symbol	pos		8644691						
ANR	8644859	Symbol	pf		8644691						
ANR	8644860	Symbol	safecat		8644691						
ANR	8644861	Symbol	id		8644691						
ANR	8644862	Symbol	ps -> saved		8644691						
ANR	8644863	Symbol	standard_name_from_id		8644691						
ANR	8644864	Symbol	ps -> IDAT_size		8644691						
ANR	8644865	Symbol	pf -> next		8644691						
ANR	8644866	Symbol	* pf		8644691						
ANR	8644867	Symbol	ps -> pread		8644691						
ANR	8644868	Function	set_store_for_read	2152:0:62187:63887							
ANR	8644869	FunctionDef	"set_store_for_read (png_store * ps , png_infopp ppi , png_uint_32 id , const char * name)"		8644868	0					
ANR	8644870	CompoundStatement		2155:0:62293:63887	8644868	0					
ANR	8644871	ExpressionStatement	"safecat ( ps -> test , sizeof ps -> test , 0 , name )"	2157:3:62334:62377	8644868	0	True				
ANR	8644872	CallExpression	"safecat ( ps -> test , sizeof ps -> test , 0 , name )"		8644868	0					
ANR	8644873	Callee	safecat		8644868	0					
ANR	8644874	Identifier	safecat		8644868	0					
ANR	8644875	ArgumentList	ps -> test		8644868	1					
ANR	8644876	Argument	ps -> test		8644868	0					
ANR	8644877	PtrMemberAccess	ps -> test		8644868	0					
ANR	8644878	Identifier	ps		8644868	0					
ANR	8644879	Identifier	test		8644868	1					
ANR	8644880	Argument	sizeof ps -> test		8644868	1					
ANR	8644881	SizeofExpression	sizeof ps -> test		8644868	0					
ANR	8644882	Sizeof	sizeof		8644868	0					
ANR	8644883	PtrMemberAccess	ps -> test		8644868	1					
ANR	8644884	Identifier	ps		8644868	0					
ANR	8644885	Identifier	test		8644868	1					
ANR	8644886	Argument	0		8644868	2					
ANR	8644887	PrimaryExpression	0		8644868	0					
ANR	8644888	Argument	name		8644868	3					
ANR	8644889	Identifier	name		8644868	0					
ANR	8644890	IfStatement	if ( ps -> pread != NULL )		8644868	1					
ANR	8644891	Condition	ps -> pread != NULL	2159:7:62387:62403	8644868	0	True				
ANR	8644892	EqualityExpression	ps -> pread != NULL		8644868	0		!=			
ANR	8644893	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8644894	Identifier	ps		8644868	0					
ANR	8644895	Identifier	pread		8644868	1					
ANR	8644896	Identifier	NULL		8644868	1					
ANR	8644897	ExpressionStatement	"png_error ( ps -> pread , ""read store already in use"" )"	2160:6:62412:62461	8644868	1	True				
ANR	8644898	CallExpression	"png_error ( ps -> pread , ""read store already in use"" )"		8644868	0					
ANR	8644899	Callee	png_error		8644868	0					
ANR	8644900	Identifier	png_error		8644868	0					
ANR	8644901	ArgumentList	ps -> pread		8644868	1					
ANR	8644902	Argument	ps -> pread		8644868	0					
ANR	8644903	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8644904	Identifier	ps		8644868	0					
ANR	8644905	Identifier	pread		8644868	1					
ANR	8644906	Argument	"""read store already in use"""		8644868	1					
ANR	8644907	PrimaryExpression	"""read store already in use"""		8644868	0					
ANR	8644908	ExpressionStatement	store_read_reset ( ps )	2162:3:62467:62487	8644868	2	True				
ANR	8644909	CallExpression	store_read_reset ( ps )		8644868	0					
ANR	8644910	Callee	store_read_reset		8644868	0					
ANR	8644911	Identifier	store_read_reset		8644868	0					
ANR	8644912	ArgumentList	ps		8644868	1					
ANR	8644913	Argument	ps		8644868	0					
ANR	8644914	Identifier	ps		8644868	0					
ANR	8644915	Statement	ifdef	2170:3:62852:62856	8644868	3	True				
ANR	8644916	Statement	PNG_USER_MEM_SUPPORTED	2170:9:62858:62879	8644868	4	True				
ANR	8644917	IfStatement	if ( ! ps -> speed )		8644868	5					
ANR	8644918	Condition	! ps -> speed	2171:10:62891:62900	8644868	0	True				
ANR	8644919	UnaryOperationExpression	! ps -> speed		8644868	0					
ANR	8644920	UnaryOperator	!		8644868	0					
ANR	8644921	PtrMemberAccess	ps -> speed		8644868	1					
ANR	8644922	Identifier	ps		8644868	0					
ANR	8644923	Identifier	speed		8644868	1					
ANR	8644924	ExpressionStatement	"ps -> pread = png_create_read_struct_2 ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning , & ps -> read_memory_pool , store_malloc , store_free )"	2172:9:62912:63078	8644868	1	True				
ANR	8644925	AssignmentExpression	"ps -> pread = png_create_read_struct_2 ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning , & ps -> read_memory_pool , store_malloc , store_free )"		8644868	0		=			
ANR	8644926	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8644927	Identifier	ps		8644868	0					
ANR	8644928	Identifier	pread		8644868	1					
ANR	8644929	CallExpression	"png_create_read_struct_2 ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning , & ps -> read_memory_pool , store_malloc , store_free )"		8644868	1					
ANR	8644930	Callee	png_create_read_struct_2		8644868	0					
ANR	8644931	Identifier	png_create_read_struct_2		8644868	0					
ANR	8644932	ArgumentList	PNG_LIBPNG_VER_STRING		8644868	1					
ANR	8644933	Argument	PNG_LIBPNG_VER_STRING		8644868	0					
ANR	8644934	Identifier	PNG_LIBPNG_VER_STRING		8644868	0					
ANR	8644935	Argument	ps		8644868	1					
ANR	8644936	Identifier	ps		8644868	0					
ANR	8644937	Argument	store_error		8644868	2					
ANR	8644938	Identifier	store_error		8644868	0					
ANR	8644939	Argument	store_warning		8644868	3					
ANR	8644940	Identifier	store_warning		8644868	0					
ANR	8644941	Argument	& ps -> read_memory_pool		8644868	4					
ANR	8644942	UnaryOperationExpression	& ps -> read_memory_pool		8644868	0					
ANR	8644943	UnaryOperator	&		8644868	0					
ANR	8644944	PtrMemberAccess	ps -> read_memory_pool		8644868	1					
ANR	8644945	Identifier	ps		8644868	0					
ANR	8644946	Identifier	read_memory_pool		8644868	1					
ANR	8644947	Argument	store_malloc		8644868	5					
ANR	8644948	Identifier	store_malloc		8644868	0					
ANR	8644949	Argument	store_free		8644868	6					
ANR	8644950	Identifier	store_free		8644868	0					
ANR	8644951	ElseStatement	else		8644868	0					
ANR	8644952	Statement	endif	2177:3:63095:63099	8644868	0	True				
ANR	8644953	ExpressionStatement	"ps -> pread = png_create_read_struct ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning )"	2178:3:63104:63199	8644868	6	True				
ANR	8644954	AssignmentExpression	"ps -> pread = png_create_read_struct ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning )"		8644868	0		=			
ANR	8644955	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8644956	Identifier	ps		8644868	0					
ANR	8644957	Identifier	pread		8644868	1					
ANR	8644958	CallExpression	"png_create_read_struct ( PNG_LIBPNG_VER_STRING , ps , store_error , store_warning )"		8644868	1					
ANR	8644959	Callee	png_create_read_struct		8644868	0					
ANR	8644960	Identifier	png_create_read_struct		8644868	0					
ANR	8644961	ArgumentList	PNG_LIBPNG_VER_STRING		8644868	1					
ANR	8644962	Argument	PNG_LIBPNG_VER_STRING		8644868	0					
ANR	8644963	Identifier	PNG_LIBPNG_VER_STRING		8644868	0					
ANR	8644964	Argument	ps		8644868	1					
ANR	8644965	Identifier	ps		8644868	0					
ANR	8644966	Argument	store_error		8644868	2					
ANR	8644967	Identifier	store_error		8644868	0					
ANR	8644968	Argument	store_warning		8644868	3					
ANR	8644969	Identifier	store_warning		8644868	0					
ANR	8644970	IfStatement	if ( ps -> pread == NULL )		8644868	7					
ANR	8644971	Condition	ps -> pread == NULL	2181:7:63209:63225	8644868	0	True				
ANR	8644972	EqualityExpression	ps -> pread == NULL		8644868	0		==			
ANR	8644973	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8644974	Identifier	ps		8644868	0					
ANR	8644975	Identifier	pread		8644868	1					
ANR	8644976	Identifier	NULL		8644868	1					
ANR	8644977	CompoundStatement		34:6:1129:1137	8644868	1					
ANR	8644978	IdentifierDeclStatement	struct exception_context * the_exception_context = & ps -> exception_context ;	2183:6:63239:63311	8644868	0	True				
ANR	8644979	IdentifierDecl	* the_exception_context = & ps -> exception_context		8644868	0					
ANR	8644980	IdentifierDeclType	struct exception_context *		8644868	0					
ANR	8644981	Identifier	the_exception_context		8644868	1					
ANR	8644982	AssignmentExpression	* the_exception_context = & ps -> exception_context		8644868	2		=			
ANR	8644983	Identifier	the_exception_context		8644868	0					
ANR	8644984	UnaryOperationExpression	& ps -> exception_context		8644868	1					
ANR	8644985	UnaryOperator	&		8644868	0					
ANR	8644986	PtrMemberAccess	ps -> exception_context		8644868	1					
ANR	8644987	Identifier	ps		8644868	0					
ANR	8644988	Identifier	exception_context		8644868	1					
ANR	8644989	ExpressionStatement	"store_log ( ps , NULL , ""png_create_read_struct returned NULL (unexpected)"" , 1 )"	2185:6:63320:63414	8644868	1	True				
ANR	8644990	CallExpression	"store_log ( ps , NULL , ""png_create_read_struct returned NULL (unexpected)"" , 1 )"		8644868	0					
ANR	8644991	Callee	store_log		8644868	0					
ANR	8644992	Identifier	store_log		8644868	0					
ANR	8644993	ArgumentList	ps		8644868	1					
ANR	8644994	Argument	ps		8644868	0					
ANR	8644995	Identifier	ps		8644868	0					
ANR	8644996	Argument	NULL		8644868	1					
ANR	8644997	Identifier	NULL		8644868	0					
ANR	8644998	Argument	"""png_create_read_struct returned NULL (unexpected)"""		8644868	2					
ANR	8644999	PrimaryExpression	"""png_create_read_struct returned NULL (unexpected)"""		8644868	0					
ANR	8645000	Argument	1		8644868	3					
ANR	8645001	PrimaryExpression	1		8644868	0					
ANR	8645002	IdentifierDeclStatement	Throw ps ;	2188:6:63423:63431	8644868	2	True				
ANR	8645003	IdentifierDecl	ps		8644868	0					
ANR	8645004	IdentifierDeclType	Throw		8644868	0					
ANR	8645005	Identifier	ps		8644868	1					
ANR	8645006	Statement	ifdef	2191:3:63442:63446	8644868	8	True				
ANR	8645007	Statement	PNG_SET_OPTION_SUPPORTED	2191:9:63448:63471	8644868	9	True				
ANR	8645008	CompoundStatement		39:9:1196:1203	8644868	10					
ANR	8645009	IdentifierDeclStatement	int opt ;	2193:9:63490:63497	8644868	0	True				
ANR	8645010	IdentifierDecl	opt		8644868	0					
ANR	8645011	IdentifierDeclType	int		8644868	0					
ANR	8645012	Identifier	opt		8644868	1					
ANR	8645013	ForStatement	for ( opt = 0 ; opt < ps -> noptions ; ++ opt )		8644868	1					
ANR	8645014	ForInit	opt = 0 ;	2194:14:63513:63518	8644868	0	True				
ANR	8645015	AssignmentExpression	opt = 0		8644868	0		=			
ANR	8645016	Identifier	opt		8644868	0					
ANR	8645017	PrimaryExpression	0		8644868	1					
ANR	8645018	Condition	opt < ps -> noptions	2194:21:63520:63535	8644868	1	True				
ANR	8645019	RelationalExpression	opt < ps -> noptions		8644868	0		<			
ANR	8645020	Identifier	opt		8644868	0					
ANR	8645021	PtrMemberAccess	ps -> noptions		8644868	1					
ANR	8645022	Identifier	ps		8644868	0					
ANR	8645023	Identifier	noptions		8644868	1					
ANR	8645024	UnaryExpression	++ opt	2194:39:63538:63542	8644868	2	True				
ANR	8645025	IncDec	++		8644868	0					
ANR	8645026	Identifier	opt		8644868	1					
ANR	8645027	IfStatement	"if ( png_set_option ( ps -> pread , ps -> options [ opt ] . option , ps -> options [ opt ] . setting ) == PNG_OPTION_INVALID )"		8644868	3					
ANR	8645028	Condition	"png_set_option ( ps -> pread , ps -> options [ opt ] . option , ps -> options [ opt ] . setting ) == PNG_OPTION_INVALID"	2195:16:63561:63673	8644868	0	True				
ANR	8645029	EqualityExpression	"png_set_option ( ps -> pread , ps -> options [ opt ] . option , ps -> options [ opt ] . setting ) == PNG_OPTION_INVALID"		8644868	0		==			
ANR	8645030	CallExpression	"png_set_option ( ps -> pread , ps -> options [ opt ] . option , ps -> options [ opt ] . setting )"		8644868	0					
ANR	8645031	Callee	png_set_option		8644868	0					
ANR	8645032	Identifier	png_set_option		8644868	0					
ANR	8645033	ArgumentList	ps -> pread		8644868	1					
ANR	8645034	Argument	ps -> pread		8644868	0					
ANR	8645035	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8645036	Identifier	ps		8644868	0					
ANR	8645037	Identifier	pread		8644868	1					
ANR	8645038	Argument	ps -> options [ opt ] . option		8644868	1					
ANR	8645039	MemberAccess	ps -> options [ opt ] . option		8644868	0					
ANR	8645040	ArrayIndexing	ps -> options [ opt ]		8644868	0					
ANR	8645041	PtrMemberAccess	ps -> options		8644868	0					
ANR	8645042	Identifier	ps		8644868	0					
ANR	8645043	Identifier	options		8644868	1					
ANR	8645044	Identifier	opt		8644868	1					
ANR	8645045	Identifier	option		8644868	1					
ANR	8645046	Argument	ps -> options [ opt ] . setting		8644868	2					
ANR	8645047	MemberAccess	ps -> options [ opt ] . setting		8644868	0					
ANR	8645048	ArrayIndexing	ps -> options [ opt ]		8644868	0					
ANR	8645049	PtrMemberAccess	ps -> options		8644868	0					
ANR	8645050	Identifier	ps		8644868	0					
ANR	8645051	Identifier	options		8644868	1					
ANR	8645052	Identifier	opt		8644868	1					
ANR	8645053	Identifier	setting		8644868	1					
ANR	8645054	Identifier	PNG_OPTION_INVALID		8644868	1					
ANR	8645055	ExpressionStatement	"png_error ( ps -> pread , ""png option invalid"" )"	2197:18:63694:63736	8644868	1	True				
ANR	8645056	CallExpression	"png_error ( ps -> pread , ""png option invalid"" )"		8644868	0					
ANR	8645057	Callee	png_error		8644868	0					
ANR	8645058	Identifier	png_error		8644868	0					
ANR	8645059	ArgumentList	ps -> pread		8644868	1					
ANR	8645060	Argument	ps -> pread		8644868	0					
ANR	8645061	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8645062	Identifier	ps		8644868	0					
ANR	8645063	Identifier	pread		8644868	1					
ANR	8645064	Argument	"""png option invalid"""		8644868	1					
ANR	8645065	PrimaryExpression	"""png option invalid"""		8644868	0					
ANR	8645066	IdentifierDeclStatement	"endif store_read_set ( ps , id ) ;"	2199:3:63749:63781	8644868	11	True				
ANR	8645067	IdentifierDecl	"store_read_set ( ps , id )"		8644868	0					
ANR	8645068	IdentifierDeclType	endif		8644868	0					
ANR	8645069	Identifier	store_read_set		8644868	1					
ANR	8645070	Expression	"ps , id"		8644868	2					
ANR	8645071	Identifier	ps		8644868	0					
ANR	8645072	Identifier	id		8644868	1					
ANR	8645073	IfStatement	if ( ppi != NULL )		8644868	12					
ANR	8645074	Condition	ppi != NULL	2203:7:63791:63801	8644868	0	True				
ANR	8645075	EqualityExpression	ppi != NULL		8644868	0		!=			
ANR	8645076	Identifier	ppi		8644868	0					
ANR	8645077	Identifier	NULL		8644868	1					
ANR	8645078	ExpressionStatement	* ppi = ps -> piread = png_create_info_struct ( ps -> pread )	2204:6:63810:63863	8644868	1	True				
ANR	8645079	AssignmentExpression	* ppi = ps -> piread = png_create_info_struct ( ps -> pread )		8644868	0		=			
ANR	8645080	UnaryOperationExpression	* ppi		8644868	0					
ANR	8645081	UnaryOperator	*		8644868	0					
ANR	8645082	Identifier	ppi		8644868	1					
ANR	8645083	AssignmentExpression	ps -> piread = png_create_info_struct ( ps -> pread )		8644868	1		=			
ANR	8645084	PtrMemberAccess	ps -> piread		8644868	0					
ANR	8645085	Identifier	ps		8644868	0					
ANR	8645086	Identifier	piread		8644868	1					
ANR	8645087	CallExpression	png_create_info_struct ( ps -> pread )		8644868	1					
ANR	8645088	Callee	png_create_info_struct		8644868	0					
ANR	8645089	Identifier	png_create_info_struct		8644868	0					
ANR	8645090	ArgumentList	ps -> pread		8644868	1					
ANR	8645091	Argument	ps -> pread		8644868	0					
ANR	8645092	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8645093	Identifier	ps		8644868	0					
ANR	8645094	Identifier	pread		8644868	1					
ANR	8645095	ReturnStatement	return ps -> pread ;	2206:3:63869:63885	8644868	13	True				
ANR	8645096	PtrMemberAccess	ps -> pread		8644868	0					
ANR	8645097	Identifier	ps		8644868	0					
ANR	8645098	Identifier	pread		8644868	1					
ANR	8645099	ReturnType	static png_structp		8644868	1					
ANR	8645100	Identifier	set_store_for_read		8644868	2					
ANR	8645101	ParameterList	"png_store * ps , png_infopp ppi , png_uint_32 id , const char * name"		8644868	3					
ANR	8645102	Parameter	png_store * ps	2153:19:62225:62237	8644868	0	True				
ANR	8645103	ParameterType	png_store *		8644868	0					
ANR	8645104	Identifier	ps		8644868	1					
ANR	8645105	Parameter	png_infopp ppi	2153:34:62240:62253	8644868	1	True				
ANR	8645106	ParameterType	png_infopp		8644868	0					
ANR	8645107	Identifier	ppi		8644868	1					
ANR	8645108	Parameter	png_uint_32 id	2153:50:62256:62269	8644868	2	True				
ANR	8645109	ParameterType	png_uint_32		8644868	0					
ANR	8645110	Identifier	id		8644868	1					
ANR	8645111	Parameter	const char * name	2154:3:62275:62290	8644868	3	True				
ANR	8645112	ParameterType	const char *		8644868	0					
ANR	8645113	Identifier	name		8644868	1					
ANR	8645114	CFGEntryNode	ENTRY		8644868		True				
ANR	8645115	CFGExitNode	EXIT		8644868		True				
ANR	8645116	Symbol	ps -> speed		8644868						
ANR	8645117	Symbol	ps -> options [ opt ] . setting		8644868						
ANR	8645118	Symbol	ps		8644868						
ANR	8645119	Symbol	& ps -> read_memory_pool		8644868						
ANR	8645120	Symbol	ps -> options [ opt ] . option		8644868						
ANR	8645121	Symbol	store_error		8644868						
ANR	8645122	Symbol	ps -> test		8644868						
ANR	8645123	Symbol	ps -> noptions		8644868						
ANR	8645124	Symbol	& ps -> exception_context		8644868						
ANR	8645125	Symbol	PNG_OPTION_INVALID		8644868						
ANR	8645126	Symbol	png_create_read_struct_2		8644868						
ANR	8645127	Symbol	* ppi		8644868						
ANR	8645128	Symbol	store_malloc		8644868						
ANR	8645129	Symbol	ps -> piread		8644868						
ANR	8645130	Symbol	png_create_read_struct		8644868						
ANR	8645131	Symbol	store_read_set		8644868						
ANR	8645132	Symbol	id		8644868						
ANR	8645133	Symbol	* opt		8644868						
ANR	8645134	Symbol	* ps -> options		8644868						
ANR	8645135	Symbol	NULL		8644868						
ANR	8645136	Symbol	png_set_option		8644868						
ANR	8645137	Symbol	store_free		8644868						
ANR	8645138	Symbol	ppi		8644868						
ANR	8645139	Symbol	* ps		8644868						
ANR	8645140	Symbol	* * ps		8644868						
ANR	8645141	Symbol	png_create_info_struct		8644868						
ANR	8645142	Symbol	opt		8644868						
ANR	8645143	Symbol	ps -> options		8644868						
ANR	8645144	Symbol	store_warning		8644868						
ANR	8645145	Symbol	name		8644868						
ANR	8645146	Symbol	PNG_LIBPNG_VER_STRING		8644868						
ANR	8645147	Symbol	ps -> pread		8644868						
ANR	8645148	Symbol	the_exception_context		8644868						
ANR	8645149	Function	store_delete	2213:0:64060:64215							
ANR	8645150	FunctionDef	store_delete (png_store * ps)		8645149	0					
ANR	8645151	CompoundStatement		2215:0:64100:64215	8645149	0					
ANR	8645152	ExpressionStatement	store_write_reset ( ps )	2216:3:64105:64126	8645149	0	True				
ANR	8645153	CallExpression	store_write_reset ( ps )		8645149	0					
ANR	8645154	Callee	store_write_reset		8645149	0					
ANR	8645155	Identifier	store_write_reset		8645149	0					
ANR	8645156	ArgumentList	ps		8645149	1					
ANR	8645157	Argument	ps		8645149	0					
ANR	8645158	Identifier	ps		8645149	0					
ANR	8645159	ExpressionStatement	store_read_reset ( ps )	2217:3:64131:64151	8645149	1	True				
ANR	8645160	CallExpression	store_read_reset ( ps )		8645149	0					
ANR	8645161	Callee	store_read_reset		8645149	0					
ANR	8645162	Identifier	store_read_reset		8645149	0					
ANR	8645163	ArgumentList	ps		8645149	1					
ANR	8645164	Argument	ps		8645149	0					
ANR	8645165	Identifier	ps		8645149	0					
ANR	8645166	ExpressionStatement	store_freefile ( & ps -> saved )	2218:3:64156:64182	8645149	2	True				
ANR	8645167	CallExpression	store_freefile ( & ps -> saved )		8645149	0					
ANR	8645168	Callee	store_freefile		8645149	0					
ANR	8645169	Identifier	store_freefile		8645149	0					
ANR	8645170	ArgumentList	& ps -> saved		8645149	1					
ANR	8645171	Argument	& ps -> saved		8645149	0					
ANR	8645172	UnaryOperationExpression	& ps -> saved		8645149	0					
ANR	8645173	UnaryOperator	&		8645149	0					
ANR	8645174	PtrMemberAccess	ps -> saved		8645149	1					
ANR	8645175	Identifier	ps		8645149	0					
ANR	8645176	Identifier	saved		8645149	1					
ANR	8645177	ExpressionStatement	"store_image_free ( ps , NULL )"	2219:3:64187:64213	8645149	3	True				
ANR	8645178	CallExpression	"store_image_free ( ps , NULL )"		8645149	0					
ANR	8645179	Callee	store_image_free		8645149	0					
ANR	8645180	Identifier	store_image_free		8645149	0					
ANR	8645181	ArgumentList	ps		8645149	1					
ANR	8645182	Argument	ps		8645149	0					
ANR	8645183	Identifier	ps		8645149	0					
ANR	8645184	Argument	NULL		8645149	1					
ANR	8645185	Identifier	NULL		8645149	0					
ANR	8645186	ReturnType	static void		8645149	1					
ANR	8645187	Identifier	store_delete		8645149	2					
ANR	8645188	ParameterList	png_store * ps		8645149	3					
ANR	8645189	Parameter	png_store * ps	2214:13:64085:64097	8645149	0	True				
ANR	8645190	ParameterType	png_store *		8645149	0					
ANR	8645191	Identifier	ps		8645149	1					
ANR	8645192	CFGEntryNode	ENTRY		8645149		True				
ANR	8645193	CFGExitNode	EXIT		8645149		True				
ANR	8645194	Symbol	ps		8645149						
ANR	8645195	Symbol	NULL		8645149						
ANR	8645196	Symbol	& ps -> saved		8645149						
ANR	8645197	ClassDef	modifier_state	2231:8:64802:65028							
ANR	8645198	DeclStmt									
ANR	8645199	Decl							modifier_state	modifier_state	modifier_state
ANR	8645200	ClassDef	CIE_color	2238:8:65039:65377							
ANR	8645201	DeclStmt									
ANR	8645202	Decl							double	double	X
ANR	8645203	Decl							double	double	Y
ANR	8645204	Decl							double	double	Z
ANR	8645205	DeclStmt									
ANR	8645206	Decl							CIE_color	CIE_color	CIE_color
ANR	8645207	ClassDef	color_encoding	2248:8:65388:65882							
ANR	8645208	DeclStmt									
ANR	8645209	Decl							double	double	gamma
ANR	8645210	DeclStmt									
ANR	8645211	Decl							CIE_color	CIE_color	red
ANR	8645212	Decl							CIE_color	CIE_color	green
ANR	8645213	Decl							CIE_color	CIE_color	blue
ANR	8645214	DeclStmt									
ANR	8645215	Decl							color_encoding	color_encoding	color_encoding
ANR	8645216	Function	chromaticity_x	2262:0:65988:66067							
ANR	8645217	FunctionDef	chromaticity_x (CIE_color c)		8645216	0					
ANR	8645218	CompoundStatement		2264:0:66030:66067	8645216	0					
ANR	8645219	ReturnStatement	return c . X / ( c . X + c . Y + c . Z ) ;	2265:3:66035:66065	8645216	0	True				
ANR	8645220	MultiplicativeExpression	c . X / ( c . X + c . Y + c . Z )		8645216	0		/			
ANR	8645221	MemberAccess	c . X		8645216	0					
ANR	8645222	Identifier	c		8645216	0					
ANR	8645223	Identifier	X		8645216	1					
ANR	8645224	AdditiveExpression	c . X + c . Y + c . Z		8645216	1		+			
ANR	8645225	MemberAccess	c . X		8645216	0					
ANR	8645226	Identifier	c		8645216	0					
ANR	8645227	Identifier	X		8645216	1					
ANR	8645228	AdditiveExpression	c . Y + c . Z		8645216	1		+			
ANR	8645229	MemberAccess	c . Y		8645216	0					
ANR	8645230	Identifier	c		8645216	0					
ANR	8645231	Identifier	Y		8645216	1					
ANR	8645232	MemberAccess	c . Z		8645216	1					
ANR	8645233	Identifier	c		8645216	0					
ANR	8645234	Identifier	Z		8645216	1					
ANR	8645235	ReturnType	static double		8645216	1					
ANR	8645236	Identifier	chromaticity_x		8645216	2					
ANR	8645237	ParameterList	CIE_color c		8645216	3					
ANR	8645238	Parameter	CIE_color c	2263:15:66017:66027	8645216	0	True				
ANR	8645239	ParameterType	CIE_color		8645216	0					
ANR	8645240	Identifier	c		8645216	1					
ANR	8645241	CFGEntryNode	ENTRY		8645216		True				
ANR	8645242	CFGExitNode	EXIT		8645216		True				
ANR	8645243	Symbol	c		8645216						
ANR	8645244	Symbol	c . Y		8645216						
ANR	8645245	Symbol	c . Z		8645216						
ANR	8645246	Symbol	c . X		8645216						
ANR	8645247	Function	chromaticity_y	2268:0:66070:66149							
ANR	8645248	FunctionDef	chromaticity_y (CIE_color c)		8645247	0					
ANR	8645249	CompoundStatement		2270:0:66112:66149	8645247	0					
ANR	8645250	ReturnStatement	return c . Y / ( c . X + c . Y + c . Z ) ;	2271:3:66117:66147	8645247	0	True				
ANR	8645251	MultiplicativeExpression	c . Y / ( c . X + c . Y + c . Z )		8645247	0		/			
ANR	8645252	MemberAccess	c . Y		8645247	0					
ANR	8645253	Identifier	c		8645247	0					
ANR	8645254	Identifier	Y		8645247	1					
ANR	8645255	AdditiveExpression	c . X + c . Y + c . Z		8645247	1		+			
ANR	8645256	MemberAccess	c . X		8645247	0					
ANR	8645257	Identifier	c		8645247	0					
ANR	8645258	Identifier	X		8645247	1					
ANR	8645259	AdditiveExpression	c . Y + c . Z		8645247	1		+			
ANR	8645260	MemberAccess	c . Y		8645247	0					
ANR	8645261	Identifier	c		8645247	0					
ANR	8645262	Identifier	Y		8645247	1					
ANR	8645263	MemberAccess	c . Z		8645247	1					
ANR	8645264	Identifier	c		8645247	0					
ANR	8645265	Identifier	Z		8645247	1					
ANR	8645266	ReturnType	static double		8645247	1					
ANR	8645267	Identifier	chromaticity_y		8645247	2					
ANR	8645268	ParameterList	CIE_color c		8645247	3					
ANR	8645269	Parameter	CIE_color c	2269:15:66099:66109	8645247	0	True				
ANR	8645270	ParameterType	CIE_color		8645247	0					
ANR	8645271	Identifier	c		8645247	1					
ANR	8645272	CFGEntryNode	ENTRY		8645247		True				
ANR	8645273	CFGExitNode	EXIT		8645247		True				
ANR	8645274	Symbol	c		8645247						
ANR	8645275	Symbol	c . Y		8645247						
ANR	8645276	Symbol	c . Z		8645247						
ANR	8645277	Symbol	c . X		8645247						
ANR	8645278	Function	white_point	2274:0:66152:66461							
ANR	8645279	FunctionDef	white_point (const color_encoding * encoding)		8645278	0					
ANR	8645280	CompoundStatement		2276:0:66213:66461	8645278	0					
ANR	8645281	IdentifierDeclStatement	CIE_color white ;	2277:3:66218:66233	8645278	0	True				
ANR	8645282	IdentifierDecl	white		8645278	0					
ANR	8645283	IdentifierDeclType	CIE_color		8645278	0					
ANR	8645284	Identifier	white		8645278	1					
ANR	8645285	ExpressionStatement	white . X = encoding -> red . X + encoding -> green . X + encoding -> blue . X	2279:3:66239:66303	8645278	1	True				
ANR	8645286	AssignmentExpression	white . X = encoding -> red . X + encoding -> green . X + encoding -> blue . X		8645278	0		=			
ANR	8645287	MemberAccess	white . X		8645278	0					
ANR	8645288	Identifier	white		8645278	0					
ANR	8645289	Identifier	X		8645278	1					
ANR	8645290	AdditiveExpression	encoding -> red . X + encoding -> green . X + encoding -> blue . X		8645278	1		+			
ANR	8645291	MemberAccess	encoding -> red . X		8645278	0					
ANR	8645292	PtrMemberAccess	encoding -> red		8645278	0					
ANR	8645293	Identifier	encoding		8645278	0					
ANR	8645294	Identifier	red		8645278	1					
ANR	8645295	Identifier	X		8645278	1					
ANR	8645296	AdditiveExpression	encoding -> green . X + encoding -> blue . X		8645278	1		+			
ANR	8645297	MemberAccess	encoding -> green . X		8645278	0					
ANR	8645298	PtrMemberAccess	encoding -> green		8645278	0					
ANR	8645299	Identifier	encoding		8645278	0					
ANR	8645300	Identifier	green		8645278	1					
ANR	8645301	Identifier	X		8645278	1					
ANR	8645302	MemberAccess	encoding -> blue . X		8645278	1					
ANR	8645303	PtrMemberAccess	encoding -> blue		8645278	0					
ANR	8645304	Identifier	encoding		8645278	0					
ANR	8645305	Identifier	blue		8645278	1					
ANR	8645306	Identifier	X		8645278	1					
ANR	8645307	ExpressionStatement	white . Y = encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y	2280:3:66308:66372	8645278	2	True				
ANR	8645308	AssignmentExpression	white . Y = encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y		8645278	0		=			
ANR	8645309	MemberAccess	white . Y		8645278	0					
ANR	8645310	Identifier	white		8645278	0					
ANR	8645311	Identifier	Y		8645278	1					
ANR	8645312	AdditiveExpression	encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y		8645278	1		+			
ANR	8645313	MemberAccess	encoding -> red . Y		8645278	0					
ANR	8645314	PtrMemberAccess	encoding -> red		8645278	0					
ANR	8645315	Identifier	encoding		8645278	0					
ANR	8645316	Identifier	red		8645278	1					
ANR	8645317	Identifier	Y		8645278	1					
ANR	8645318	AdditiveExpression	encoding -> green . Y + encoding -> blue . Y		8645278	1		+			
ANR	8645319	MemberAccess	encoding -> green . Y		8645278	0					
ANR	8645320	PtrMemberAccess	encoding -> green		8645278	0					
ANR	8645321	Identifier	encoding		8645278	0					
ANR	8645322	Identifier	green		8645278	1					
ANR	8645323	Identifier	Y		8645278	1					
ANR	8645324	MemberAccess	encoding -> blue . Y		8645278	1					
ANR	8645325	PtrMemberAccess	encoding -> blue		8645278	0					
ANR	8645326	Identifier	encoding		8645278	0					
ANR	8645327	Identifier	blue		8645278	1					
ANR	8645328	Identifier	Y		8645278	1					
ANR	8645329	ExpressionStatement	white . Z = encoding -> red . Z + encoding -> green . Z + encoding -> blue . Z	2281:3:66377:66441	8645278	3	True				
ANR	8645330	AssignmentExpression	white . Z = encoding -> red . Z + encoding -> green . Z + encoding -> blue . Z		8645278	0		=			
ANR	8645331	MemberAccess	white . Z		8645278	0					
ANR	8645332	Identifier	white		8645278	0					
ANR	8645333	Identifier	Z		8645278	1					
ANR	8645334	AdditiveExpression	encoding -> red . Z + encoding -> green . Z + encoding -> blue . Z		8645278	1		+			
ANR	8645335	MemberAccess	encoding -> red . Z		8645278	0					
ANR	8645336	PtrMemberAccess	encoding -> red		8645278	0					
ANR	8645337	Identifier	encoding		8645278	0					
ANR	8645338	Identifier	red		8645278	1					
ANR	8645339	Identifier	Z		8645278	1					
ANR	8645340	AdditiveExpression	encoding -> green . Z + encoding -> blue . Z		8645278	1		+			
ANR	8645341	MemberAccess	encoding -> green . Z		8645278	0					
ANR	8645342	PtrMemberAccess	encoding -> green		8645278	0					
ANR	8645343	Identifier	encoding		8645278	0					
ANR	8645344	Identifier	green		8645278	1					
ANR	8645345	Identifier	Z		8645278	1					
ANR	8645346	MemberAccess	encoding -> blue . Z		8645278	1					
ANR	8645347	PtrMemberAccess	encoding -> blue		8645278	0					
ANR	8645348	Identifier	encoding		8645278	0					
ANR	8645349	Identifier	blue		8645278	1					
ANR	8645350	Identifier	Z		8645278	1					
ANR	8645351	ReturnStatement	return white ;	2283:3:66447:66459	8645278	4	True				
ANR	8645352	Identifier	white		8645278	0					
ANR	8645353	ReturnType	static CIE_color		8645278	1					
ANR	8645354	Identifier	white_point		8645278	2					
ANR	8645355	ParameterList	const color_encoding * encoding		8645278	3					
ANR	8645356	Parameter	const color_encoding * encoding	2275:12:66181:66210	8645278	0	True				
ANR	8645357	ParameterType	const color_encoding *		8645278	0					
ANR	8645358	Identifier	encoding		8645278	1					
ANR	8645359	CFGEntryNode	ENTRY		8645278		True				
ANR	8645360	CFGExitNode	EXIT		8645278		True				
ANR	8645361	Symbol	encoding -> red . Z		8645278						
ANR	8645362	Symbol	encoding -> red . Y		8645278						
ANR	8645363	Symbol	encoding -> red . X		8645278						
ANR	8645364	Symbol	encoding -> green . X		8645278						
ANR	8645365	Symbol	white . X		8645278						
ANR	8645366	Symbol	encoding -> green . Z		8645278						
ANR	8645367	Symbol	encoding -> green . Y		8645278						
ANR	8645368	Symbol	encoding		8645278						
ANR	8645369	Symbol	* encoding		8645278						
ANR	8645370	Symbol	encoding -> blue		8645278						
ANR	8645371	Symbol	encoding -> blue . Z		8645278						
ANR	8645372	Symbol	white		8645278						
ANR	8645373	Symbol	encoding -> blue . Y		8645278						
ANR	8645374	Symbol	encoding -> green		8645278						
ANR	8645375	Symbol	encoding -> blue . X		8645278						
ANR	8645376	Symbol	white . Y		8645278						
ANR	8645377	Symbol	white . Z		8645278						
ANR	8645378	Symbol	encoding -> red		8645278						
ANR	8645379	Function	normalize_color_encoding	2288:0:66544:67033							
ANR	8645380	FunctionDef	normalize_color_encoding (color_encoding * encoding)		8645379	0					
ANR	8645381	CompoundStatement		2290:0:66607:67033	8645379	0					
ANR	8645382	IdentifierDeclStatement	const double whiteY = encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y ;	2291:3:66612:66694	8645379	0	True				
ANR	8645383	IdentifierDecl	whiteY = encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y		8645379	0					
ANR	8645384	IdentifierDeclType	const double		8645379	0					
ANR	8645385	Identifier	whiteY		8645379	1					
ANR	8645386	AssignmentExpression	whiteY = encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y		8645379	2		=			
ANR	8645387	Identifier	whiteY		8645379	0					
ANR	8645388	AdditiveExpression	encoding -> red . Y + encoding -> green . Y + encoding -> blue . Y		8645379	1		+			
ANR	8645389	MemberAccess	encoding -> red . Y		8645379	0					
ANR	8645390	PtrMemberAccess	encoding -> red		8645379	0					
ANR	8645391	Identifier	encoding		8645379	0					
ANR	8645392	Identifier	red		8645379	1					
ANR	8645393	Identifier	Y		8645379	1					
ANR	8645394	AdditiveExpression	encoding -> green . Y + encoding -> blue . Y		8645379	1		+			
ANR	8645395	MemberAccess	encoding -> green . Y		8645379	0					
ANR	8645396	PtrMemberAccess	encoding -> green		8645379	0					
ANR	8645397	Identifier	encoding		8645379	0					
ANR	8645398	Identifier	green		8645379	1					
ANR	8645399	Identifier	Y		8645379	1					
ANR	8645400	MemberAccess	encoding -> blue . Y		8645379	1					
ANR	8645401	PtrMemberAccess	encoding -> blue		8645379	0					
ANR	8645402	Identifier	encoding		8645379	0					
ANR	8645403	Identifier	blue		8645379	1					
ANR	8645404	Identifier	Y		8645379	1					
ANR	8645405	IfStatement	if ( whiteY != 1 )		8645379	1					
ANR	8645406	Condition	whiteY != 1	2294:7:66704:66714	8645379	0	True				
ANR	8645407	EqualityExpression	whiteY != 1		8645379	0		!=			
ANR	8645408	Identifier	whiteY		8645379	0					
ANR	8645409	PrimaryExpression	1		8645379	1					
ANR	8645410	CompoundStatement		6:3:112:112	8645379	1					
ANR	8645411	ExpressionStatement	encoding -> red . X /= whiteY	2296:6:66728:66753	8645379	0	True				
ANR	8645412	AssignmentExpression	encoding -> red . X /= whiteY		8645379	0		/=			
ANR	8645413	MemberAccess	encoding -> red . X		8645379	0					
ANR	8645414	PtrMemberAccess	encoding -> red		8645379	0					
ANR	8645415	Identifier	encoding		8645379	0					
ANR	8645416	Identifier	red		8645379	1					
ANR	8645417	Identifier	X		8645379	1					
ANR	8645418	Identifier	whiteY		8645379	1					
ANR	8645419	ExpressionStatement	encoding -> red . Y /= whiteY	2297:6:66761:66786	8645379	1	True				
ANR	8645420	AssignmentExpression	encoding -> red . Y /= whiteY		8645379	0		/=			
ANR	8645421	MemberAccess	encoding -> red . Y		8645379	0					
ANR	8645422	PtrMemberAccess	encoding -> red		8645379	0					
ANR	8645423	Identifier	encoding		8645379	0					
ANR	8645424	Identifier	red		8645379	1					
ANR	8645425	Identifier	Y		8645379	1					
ANR	8645426	Identifier	whiteY		8645379	1					
ANR	8645427	ExpressionStatement	encoding -> red . Z /= whiteY	2298:6:66794:66819	8645379	2	True				
ANR	8645428	AssignmentExpression	encoding -> red . Z /= whiteY		8645379	0		/=			
ANR	8645429	MemberAccess	encoding -> red . Z		8645379	0					
ANR	8645430	PtrMemberAccess	encoding -> red		8645379	0					
ANR	8645431	Identifier	encoding		8645379	0					
ANR	8645432	Identifier	red		8645379	1					
ANR	8645433	Identifier	Z		8645379	1					
ANR	8645434	Identifier	whiteY		8645379	1					
ANR	8645435	ExpressionStatement	encoding -> green . X /= whiteY	2299:6:66827:66854	8645379	3	True				
ANR	8645436	AssignmentExpression	encoding -> green . X /= whiteY		8645379	0		/=			
ANR	8645437	MemberAccess	encoding -> green . X		8645379	0					
ANR	8645438	PtrMemberAccess	encoding -> green		8645379	0					
ANR	8645439	Identifier	encoding		8645379	0					
ANR	8645440	Identifier	green		8645379	1					
ANR	8645441	Identifier	X		8645379	1					
ANR	8645442	Identifier	whiteY		8645379	1					
ANR	8645443	ExpressionStatement	encoding -> green . Y /= whiteY	2300:6:66862:66889	8645379	4	True				
ANR	8645444	AssignmentExpression	encoding -> green . Y /= whiteY		8645379	0		/=			
ANR	8645445	MemberAccess	encoding -> green . Y		8645379	0					
ANR	8645446	PtrMemberAccess	encoding -> green		8645379	0					
ANR	8645447	Identifier	encoding		8645379	0					
ANR	8645448	Identifier	green		8645379	1					
ANR	8645449	Identifier	Y		8645379	1					
ANR	8645450	Identifier	whiteY		8645379	1					
ANR	8645451	ExpressionStatement	encoding -> green . Z /= whiteY	2301:6:66897:66924	8645379	5	True				
ANR	8645452	AssignmentExpression	encoding -> green . Z /= whiteY		8645379	0		/=			
ANR	8645453	MemberAccess	encoding -> green . Z		8645379	0					
ANR	8645454	PtrMemberAccess	encoding -> green		8645379	0					
ANR	8645455	Identifier	encoding		8645379	0					
ANR	8645456	Identifier	green		8645379	1					
ANR	8645457	Identifier	Z		8645379	1					
ANR	8645458	Identifier	whiteY		8645379	1					
ANR	8645459	ExpressionStatement	encoding -> blue . X /= whiteY	2302:6:66932:66958	8645379	6	True				
ANR	8645460	AssignmentExpression	encoding -> blue . X /= whiteY		8645379	0		/=			
ANR	8645461	MemberAccess	encoding -> blue . X		8645379	0					
ANR	8645462	PtrMemberAccess	encoding -> blue		8645379	0					
ANR	8645463	Identifier	encoding		8645379	0					
ANR	8645464	Identifier	blue		8645379	1					
ANR	8645465	Identifier	X		8645379	1					
ANR	8645466	Identifier	whiteY		8645379	1					
ANR	8645467	ExpressionStatement	encoding -> blue . Y /= whiteY	2303:6:66966:66992	8645379	7	True				
ANR	8645468	AssignmentExpression	encoding -> blue . Y /= whiteY		8645379	0		/=			
ANR	8645469	MemberAccess	encoding -> blue . Y		8645379	0					
ANR	8645470	PtrMemberAccess	encoding -> blue		8645379	0					
ANR	8645471	Identifier	encoding		8645379	0					
ANR	8645472	Identifier	blue		8645379	1					
ANR	8645473	Identifier	Y		8645379	1					
ANR	8645474	Identifier	whiteY		8645379	1					
ANR	8645475	ExpressionStatement	encoding -> blue . Z /= whiteY	2304:6:67000:67026	8645379	8	True				
ANR	8645476	AssignmentExpression	encoding -> blue . Z /= whiteY		8645379	0		/=			
ANR	8645477	MemberAccess	encoding -> blue . Z		8645379	0					
ANR	8645478	PtrMemberAccess	encoding -> blue		8645379	0					
ANR	8645479	Identifier	encoding		8645379	0					
ANR	8645480	Identifier	blue		8645379	1					
ANR	8645481	Identifier	Z		8645379	1					
ANR	8645482	Identifier	whiteY		8645379	1					
ANR	8645483	ReturnType	static void		8645379	1					
ANR	8645484	Identifier	normalize_color_encoding		8645379	2					
ANR	8645485	ParameterList	color_encoding * encoding		8645379	3					
ANR	8645486	Parameter	color_encoding * encoding	2289:25:66581:66604	8645379	0	True				
ANR	8645487	ParameterType	color_encoding *		8645379	0					
ANR	8645488	Identifier	encoding		8645379	1					
ANR	8645489	CFGEntryNode	ENTRY		8645379		True				
ANR	8645490	CFGExitNode	EXIT		8645379		True				
ANR	8645491	Symbol	encoding -> red . Z		8645379						
ANR	8645492	Symbol	encoding -> red . Y		8645379						
ANR	8645493	Symbol	encoding -> red . X		8645379						
ANR	8645494	Symbol	encoding -> green . X		8645379						
ANR	8645495	Symbol	encoding -> green . Z		8645379						
ANR	8645496	Symbol	encoding -> green . Y		8645379						
ANR	8645497	Symbol	whiteY		8645379						
ANR	8645498	Symbol	encoding		8645379						
ANR	8645499	Symbol	* encoding		8645379						
ANR	8645500	Symbol	encoding -> blue		8645379						
ANR	8645501	Symbol	encoding -> blue . Z		8645379						
ANR	8645502	Symbol	encoding -> blue . Y		8645379						
ANR	8645503	Symbol	encoding -> green		8645379						
ANR	8645504	Symbol	encoding -> blue . X		8645379						
ANR	8645505	Symbol	encoding -> red		8645379						
ANR	8645506	Function	safecat_color_encoding	2310:0:67080:68576							
ANR	8645507	FunctionDef	"safecat_color_encoding (char * buffer , size_t bufsize , size_t pos , const color_encoding * e , double encoding_gamma)"		8645506	0					
ANR	8645508	CompoundStatement		2313:0:67210:68576	8645506	0					
ANR	8645509	IfStatement	if ( e != 0 )		8645506	0					
ANR	8645510	Condition	e != 0	2314:7:67219:67224	8645506	0	True				
ANR	8645511	EqualityExpression	e != 0		8645506	0		!=			
ANR	8645512	Identifier	e		8645506	0					
ANR	8645513	PrimaryExpression	0		8645506	1					
ANR	8645514	CompoundStatement		3:3:19:19	8645506	1					
ANR	8645515	IfStatement	if ( encoding_gamma != 0 )		8645506	0					
ANR	8645516	Condition	encoding_gamma != 0	2316:10:67242:67260	8645506	0	True				
ANR	8645517	EqualityExpression	encoding_gamma != 0		8645506	0		!=			
ANR	8645518	Identifier	encoding_gamma		8645506	0					
ANR	8645519	PrimaryExpression	0		8645506	1					
ANR	8645520	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""("" )"	2317:9:67272:67312	8645506	1	True				
ANR	8645521	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""("" )"		8645506	0		=			
ANR	8645522	Identifier	pos		8645506	0					
ANR	8645523	CallExpression	"safecat ( buffer , bufsize , pos , ""("" )"		8645506	1					
ANR	8645524	Callee	safecat		8645506	0					
ANR	8645525	Identifier	safecat		8645506	0					
ANR	8645526	ArgumentList	buffer		8645506	1					
ANR	8645527	Argument	buffer		8645506	0					
ANR	8645528	Identifier	buffer		8645506	0					
ANR	8645529	Argument	bufsize		8645506	1					
ANR	8645530	Identifier	bufsize		8645506	0					
ANR	8645531	Argument	pos		8645506	2					
ANR	8645532	Identifier	pos		8645506	0					
ANR	8645533	Argument	"""("""		8645506	3					
ANR	8645534	PrimaryExpression	"""("""		8645506	0					
ANR	8645535	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""R("" )"	2318:6:67320:67361	8645506	1	True				
ANR	8645536	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""R("" )"		8645506	0		=			
ANR	8645537	Identifier	pos		8645506	0					
ANR	8645538	CallExpression	"safecat ( buffer , bufsize , pos , ""R("" )"		8645506	1					
ANR	8645539	Callee	safecat		8645506	0					
ANR	8645540	Identifier	safecat		8645506	0					
ANR	8645541	ArgumentList	buffer		8645506	1					
ANR	8645542	Argument	buffer		8645506	0					
ANR	8645543	Identifier	buffer		8645506	0					
ANR	8645544	Argument	bufsize		8645506	1					
ANR	8645545	Identifier	bufsize		8645506	0					
ANR	8645546	Argument	pos		8645506	2					
ANR	8645547	Identifier	pos		8645506	0					
ANR	8645548	Argument	"""R("""		8645506	3					
ANR	8645549	PrimaryExpression	"""R("""		8645506	0					
ANR	8645550	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> red . X , 4 )"	2319:6:67369:67418	8645506	2	True				
ANR	8645551	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> red . X , 4 )"		8645506	0		=			
ANR	8645552	Identifier	pos		8645506	0					
ANR	8645553	CallExpression	"safecatd ( buffer , bufsize , pos , e -> red . X , 4 )"		8645506	1					
ANR	8645554	Callee	safecatd		8645506	0					
ANR	8645555	Identifier	safecatd		8645506	0					
ANR	8645556	ArgumentList	buffer		8645506	1					
ANR	8645557	Argument	buffer		8645506	0					
ANR	8645558	Identifier	buffer		8645506	0					
ANR	8645559	Argument	bufsize		8645506	1					
ANR	8645560	Identifier	bufsize		8645506	0					
ANR	8645561	Argument	pos		8645506	2					
ANR	8645562	Identifier	pos		8645506	0					
ANR	8645563	Argument	e -> red . X		8645506	3					
ANR	8645564	MemberAccess	e -> red . X		8645506	0					
ANR	8645565	PtrMemberAccess	e -> red		8645506	0					
ANR	8645566	Identifier	e		8645506	0					
ANR	8645567	Identifier	red		8645506	1					
ANR	8645568	Identifier	X		8645506	1					
ANR	8645569	Argument	4		8645506	4					
ANR	8645570	PrimaryExpression	4		8645506	0					
ANR	8645571	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "","" )"	2320:6:67426:67466	8645506	3	True				
ANR	8645572	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "","" )"		8645506	0		=			
ANR	8645573	Identifier	pos		8645506	0					
ANR	8645574	CallExpression	"safecat ( buffer , bufsize , pos , "","" )"		8645506	1					
ANR	8645575	Callee	safecat		8645506	0					
ANR	8645576	Identifier	safecat		8645506	0					
ANR	8645577	ArgumentList	buffer		8645506	1					
ANR	8645578	Argument	buffer		8645506	0					
ANR	8645579	Identifier	buffer		8645506	0					
ANR	8645580	Argument	bufsize		8645506	1					
ANR	8645581	Identifier	bufsize		8645506	0					
ANR	8645582	Argument	pos		8645506	2					
ANR	8645583	Identifier	pos		8645506	0					
ANR	8645584	Argument	""","""		8645506	3					
ANR	8645585	PrimaryExpression	""","""		8645506	0					
ANR	8645586	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> red . Y , 4 )"	2321:6:67474:67523	8645506	4	True				
ANR	8645587	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> red . Y , 4 )"		8645506	0		=			
ANR	8645588	Identifier	pos		8645506	0					
ANR	8645589	CallExpression	"safecatd ( buffer , bufsize , pos , e -> red . Y , 4 )"		8645506	1					
ANR	8645590	Callee	safecatd		8645506	0					
ANR	8645591	Identifier	safecatd		8645506	0					
ANR	8645592	ArgumentList	buffer		8645506	1					
ANR	8645593	Argument	buffer		8645506	0					
ANR	8645594	Identifier	buffer		8645506	0					
ANR	8645595	Argument	bufsize		8645506	1					
ANR	8645596	Identifier	bufsize		8645506	0					
ANR	8645597	Argument	pos		8645506	2					
ANR	8645598	Identifier	pos		8645506	0					
ANR	8645599	Argument	e -> red . Y		8645506	3					
ANR	8645600	MemberAccess	e -> red . Y		8645506	0					
ANR	8645601	PtrMemberAccess	e -> red		8645506	0					
ANR	8645602	Identifier	e		8645506	0					
ANR	8645603	Identifier	red		8645506	1					
ANR	8645604	Identifier	Y		8645506	1					
ANR	8645605	Argument	4		8645506	4					
ANR	8645606	PrimaryExpression	4		8645506	0					
ANR	8645607	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "","" )"	2322:6:67531:67571	8645506	5	True				
ANR	8645608	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "","" )"		8645506	0		=			
ANR	8645609	Identifier	pos		8645506	0					
ANR	8645610	CallExpression	"safecat ( buffer , bufsize , pos , "","" )"		8645506	1					
ANR	8645611	Callee	safecat		8645506	0					
ANR	8645612	Identifier	safecat		8645506	0					
ANR	8645613	ArgumentList	buffer		8645506	1					
ANR	8645614	Argument	buffer		8645506	0					
ANR	8645615	Identifier	buffer		8645506	0					
ANR	8645616	Argument	bufsize		8645506	1					
ANR	8645617	Identifier	bufsize		8645506	0					
ANR	8645618	Argument	pos		8645506	2					
ANR	8645619	Identifier	pos		8645506	0					
ANR	8645620	Argument	""","""		8645506	3					
ANR	8645621	PrimaryExpression	""","""		8645506	0					
ANR	8645622	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> red . Z , 4 )"	2323:6:67579:67628	8645506	6	True				
ANR	8645623	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> red . Z , 4 )"		8645506	0		=			
ANR	8645624	Identifier	pos		8645506	0					
ANR	8645625	CallExpression	"safecatd ( buffer , bufsize , pos , e -> red . Z , 4 )"		8645506	1					
ANR	8645626	Callee	safecatd		8645506	0					
ANR	8645627	Identifier	safecatd		8645506	0					
ANR	8645628	ArgumentList	buffer		8645506	1					
ANR	8645629	Argument	buffer		8645506	0					
ANR	8645630	Identifier	buffer		8645506	0					
ANR	8645631	Argument	bufsize		8645506	1					
ANR	8645632	Identifier	bufsize		8645506	0					
ANR	8645633	Argument	pos		8645506	2					
ANR	8645634	Identifier	pos		8645506	0					
ANR	8645635	Argument	e -> red . Z		8645506	3					
ANR	8645636	MemberAccess	e -> red . Z		8645506	0					
ANR	8645637	PtrMemberAccess	e -> red		8645506	0					
ANR	8645638	Identifier	e		8645506	0					
ANR	8645639	Identifier	red		8645506	1					
ANR	8645640	Identifier	Z		8645506	1					
ANR	8645641	Argument	4		8645506	4					
ANR	8645642	PrimaryExpression	4		8645506	0					
ANR	8645643	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""),G("" )"	2324:6:67636:67679	8645506	7	True				
ANR	8645644	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""),G("" )"		8645506	0		=			
ANR	8645645	Identifier	pos		8645506	0					
ANR	8645646	CallExpression	"safecat ( buffer , bufsize , pos , ""),G("" )"		8645506	1					
ANR	8645647	Callee	safecat		8645506	0					
ANR	8645648	Identifier	safecat		8645506	0					
ANR	8645649	ArgumentList	buffer		8645506	1					
ANR	8645650	Argument	buffer		8645506	0					
ANR	8645651	Identifier	buffer		8645506	0					
ANR	8645652	Argument	bufsize		8645506	1					
ANR	8645653	Identifier	bufsize		8645506	0					
ANR	8645654	Argument	pos		8645506	2					
ANR	8645655	Identifier	pos		8645506	0					
ANR	8645656	Argument	"""),G("""		8645506	3					
ANR	8645657	PrimaryExpression	"""),G("""		8645506	0					
ANR	8645658	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> green . X , 4 )"	2325:6:67687:67738	8645506	8	True				
ANR	8645659	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> green . X , 4 )"		8645506	0		=			
ANR	8645660	Identifier	pos		8645506	0					
ANR	8645661	CallExpression	"safecatd ( buffer , bufsize , pos , e -> green . X , 4 )"		8645506	1					
ANR	8645662	Callee	safecatd		8645506	0					
ANR	8645663	Identifier	safecatd		8645506	0					
ANR	8645664	ArgumentList	buffer		8645506	1					
ANR	8645665	Argument	buffer		8645506	0					
ANR	8645666	Identifier	buffer		8645506	0					
ANR	8645667	Argument	bufsize		8645506	1					
ANR	8645668	Identifier	bufsize		8645506	0					
ANR	8645669	Argument	pos		8645506	2					
ANR	8645670	Identifier	pos		8645506	0					
ANR	8645671	Argument	e -> green . X		8645506	3					
ANR	8645672	MemberAccess	e -> green . X		8645506	0					
ANR	8645673	PtrMemberAccess	e -> green		8645506	0					
ANR	8645674	Identifier	e		8645506	0					
ANR	8645675	Identifier	green		8645506	1					
ANR	8645676	Identifier	X		8645506	1					
ANR	8645677	Argument	4		8645506	4					
ANR	8645678	PrimaryExpression	4		8645506	0					
ANR	8645679	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "","" )"	2326:6:67746:67786	8645506	9	True				
ANR	8645680	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "","" )"		8645506	0		=			
ANR	8645681	Identifier	pos		8645506	0					
ANR	8645682	CallExpression	"safecat ( buffer , bufsize , pos , "","" )"		8645506	1					
ANR	8645683	Callee	safecat		8645506	0					
ANR	8645684	Identifier	safecat		8645506	0					
ANR	8645685	ArgumentList	buffer		8645506	1					
ANR	8645686	Argument	buffer		8645506	0					
ANR	8645687	Identifier	buffer		8645506	0					
ANR	8645688	Argument	bufsize		8645506	1					
ANR	8645689	Identifier	bufsize		8645506	0					
ANR	8645690	Argument	pos		8645506	2					
ANR	8645691	Identifier	pos		8645506	0					
ANR	8645692	Argument	""","""		8645506	3					
ANR	8645693	PrimaryExpression	""","""		8645506	0					
ANR	8645694	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> green . Y , 4 )"	2327:6:67794:67845	8645506	10	True				
ANR	8645695	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> green . Y , 4 )"		8645506	0		=			
ANR	8645696	Identifier	pos		8645506	0					
ANR	8645697	CallExpression	"safecatd ( buffer , bufsize , pos , e -> green . Y , 4 )"		8645506	1					
ANR	8645698	Callee	safecatd		8645506	0					
ANR	8645699	Identifier	safecatd		8645506	0					
ANR	8645700	ArgumentList	buffer		8645506	1					
ANR	8645701	Argument	buffer		8645506	0					
ANR	8645702	Identifier	buffer		8645506	0					
ANR	8645703	Argument	bufsize		8645506	1					
ANR	8645704	Identifier	bufsize		8645506	0					
ANR	8645705	Argument	pos		8645506	2					
ANR	8645706	Identifier	pos		8645506	0					
ANR	8645707	Argument	e -> green . Y		8645506	3					
ANR	8645708	MemberAccess	e -> green . Y		8645506	0					
ANR	8645709	PtrMemberAccess	e -> green		8645506	0					
ANR	8645710	Identifier	e		8645506	0					
ANR	8645711	Identifier	green		8645506	1					
ANR	8645712	Identifier	Y		8645506	1					
ANR	8645713	Argument	4		8645506	4					
ANR	8645714	PrimaryExpression	4		8645506	0					
ANR	8645715	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "","" )"	2328:6:67853:67893	8645506	11	True				
ANR	8645716	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "","" )"		8645506	0		=			
ANR	8645717	Identifier	pos		8645506	0					
ANR	8645718	CallExpression	"safecat ( buffer , bufsize , pos , "","" )"		8645506	1					
ANR	8645719	Callee	safecat		8645506	0					
ANR	8645720	Identifier	safecat		8645506	0					
ANR	8645721	ArgumentList	buffer		8645506	1					
ANR	8645722	Argument	buffer		8645506	0					
ANR	8645723	Identifier	buffer		8645506	0					
ANR	8645724	Argument	bufsize		8645506	1					
ANR	8645725	Identifier	bufsize		8645506	0					
ANR	8645726	Argument	pos		8645506	2					
ANR	8645727	Identifier	pos		8645506	0					
ANR	8645728	Argument	""","""		8645506	3					
ANR	8645729	PrimaryExpression	""","""		8645506	0					
ANR	8645730	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> green . Z , 4 )"	2329:6:67901:67952	8645506	12	True				
ANR	8645731	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> green . Z , 4 )"		8645506	0		=			
ANR	8645732	Identifier	pos		8645506	0					
ANR	8645733	CallExpression	"safecatd ( buffer , bufsize , pos , e -> green . Z , 4 )"		8645506	1					
ANR	8645734	Callee	safecatd		8645506	0					
ANR	8645735	Identifier	safecatd		8645506	0					
ANR	8645736	ArgumentList	buffer		8645506	1					
ANR	8645737	Argument	buffer		8645506	0					
ANR	8645738	Identifier	buffer		8645506	0					
ANR	8645739	Argument	bufsize		8645506	1					
ANR	8645740	Identifier	bufsize		8645506	0					
ANR	8645741	Argument	pos		8645506	2					
ANR	8645742	Identifier	pos		8645506	0					
ANR	8645743	Argument	e -> green . Z		8645506	3					
ANR	8645744	MemberAccess	e -> green . Z		8645506	0					
ANR	8645745	PtrMemberAccess	e -> green		8645506	0					
ANR	8645746	Identifier	e		8645506	0					
ANR	8645747	Identifier	green		8645506	1					
ANR	8645748	Identifier	Z		8645506	1					
ANR	8645749	Argument	4		8645506	4					
ANR	8645750	PrimaryExpression	4		8645506	0					
ANR	8645751	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""),B("" )"	2330:6:67960:68003	8645506	13	True				
ANR	8645752	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""),B("" )"		8645506	0		=			
ANR	8645753	Identifier	pos		8645506	0					
ANR	8645754	CallExpression	"safecat ( buffer , bufsize , pos , ""),B("" )"		8645506	1					
ANR	8645755	Callee	safecat		8645506	0					
ANR	8645756	Identifier	safecat		8645506	0					
ANR	8645757	ArgumentList	buffer		8645506	1					
ANR	8645758	Argument	buffer		8645506	0					
ANR	8645759	Identifier	buffer		8645506	0					
ANR	8645760	Argument	bufsize		8645506	1					
ANR	8645761	Identifier	bufsize		8645506	0					
ANR	8645762	Argument	pos		8645506	2					
ANR	8645763	Identifier	pos		8645506	0					
ANR	8645764	Argument	"""),B("""		8645506	3					
ANR	8645765	PrimaryExpression	"""),B("""		8645506	0					
ANR	8645766	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> blue . X , 4 )"	2331:6:68011:68061	8645506	14	True				
ANR	8645767	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> blue . X , 4 )"		8645506	0		=			
ANR	8645768	Identifier	pos		8645506	0					
ANR	8645769	CallExpression	"safecatd ( buffer , bufsize , pos , e -> blue . X , 4 )"		8645506	1					
ANR	8645770	Callee	safecatd		8645506	0					
ANR	8645771	Identifier	safecatd		8645506	0					
ANR	8645772	ArgumentList	buffer		8645506	1					
ANR	8645773	Argument	buffer		8645506	0					
ANR	8645774	Identifier	buffer		8645506	0					
ANR	8645775	Argument	bufsize		8645506	1					
ANR	8645776	Identifier	bufsize		8645506	0					
ANR	8645777	Argument	pos		8645506	2					
ANR	8645778	Identifier	pos		8645506	0					
ANR	8645779	Argument	e -> blue . X		8645506	3					
ANR	8645780	MemberAccess	e -> blue . X		8645506	0					
ANR	8645781	PtrMemberAccess	e -> blue		8645506	0					
ANR	8645782	Identifier	e		8645506	0					
ANR	8645783	Identifier	blue		8645506	1					
ANR	8645784	Identifier	X		8645506	1					
ANR	8645785	Argument	4		8645506	4					
ANR	8645786	PrimaryExpression	4		8645506	0					
ANR	8645787	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "","" )"	2332:6:68069:68109	8645506	15	True				
ANR	8645788	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "","" )"		8645506	0		=			
ANR	8645789	Identifier	pos		8645506	0					
ANR	8645790	CallExpression	"safecat ( buffer , bufsize , pos , "","" )"		8645506	1					
ANR	8645791	Callee	safecat		8645506	0					
ANR	8645792	Identifier	safecat		8645506	0					
ANR	8645793	ArgumentList	buffer		8645506	1					
ANR	8645794	Argument	buffer		8645506	0					
ANR	8645795	Identifier	buffer		8645506	0					
ANR	8645796	Argument	bufsize		8645506	1					
ANR	8645797	Identifier	bufsize		8645506	0					
ANR	8645798	Argument	pos		8645506	2					
ANR	8645799	Identifier	pos		8645506	0					
ANR	8645800	Argument	""","""		8645506	3					
ANR	8645801	PrimaryExpression	""","""		8645506	0					
ANR	8645802	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> blue . Y , 4 )"	2333:6:68117:68167	8645506	16	True				
ANR	8645803	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> blue . Y , 4 )"		8645506	0		=			
ANR	8645804	Identifier	pos		8645506	0					
ANR	8645805	CallExpression	"safecatd ( buffer , bufsize , pos , e -> blue . Y , 4 )"		8645506	1					
ANR	8645806	Callee	safecatd		8645506	0					
ANR	8645807	Identifier	safecatd		8645506	0					
ANR	8645808	ArgumentList	buffer		8645506	1					
ANR	8645809	Argument	buffer		8645506	0					
ANR	8645810	Identifier	buffer		8645506	0					
ANR	8645811	Argument	bufsize		8645506	1					
ANR	8645812	Identifier	bufsize		8645506	0					
ANR	8645813	Argument	pos		8645506	2					
ANR	8645814	Identifier	pos		8645506	0					
ANR	8645815	Argument	e -> blue . Y		8645506	3					
ANR	8645816	MemberAccess	e -> blue . Y		8645506	0					
ANR	8645817	PtrMemberAccess	e -> blue		8645506	0					
ANR	8645818	Identifier	e		8645506	0					
ANR	8645819	Identifier	blue		8645506	1					
ANR	8645820	Identifier	Y		8645506	1					
ANR	8645821	Argument	4		8645506	4					
ANR	8645822	PrimaryExpression	4		8645506	0					
ANR	8645823	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "","" )"	2334:6:68175:68215	8645506	17	True				
ANR	8645824	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "","" )"		8645506	0		=			
ANR	8645825	Identifier	pos		8645506	0					
ANR	8645826	CallExpression	"safecat ( buffer , bufsize , pos , "","" )"		8645506	1					
ANR	8645827	Callee	safecat		8645506	0					
ANR	8645828	Identifier	safecat		8645506	0					
ANR	8645829	ArgumentList	buffer		8645506	1					
ANR	8645830	Argument	buffer		8645506	0					
ANR	8645831	Identifier	buffer		8645506	0					
ANR	8645832	Argument	bufsize		8645506	1					
ANR	8645833	Identifier	bufsize		8645506	0					
ANR	8645834	Argument	pos		8645506	2					
ANR	8645835	Identifier	pos		8645506	0					
ANR	8645836	Argument	""","""		8645506	3					
ANR	8645837	PrimaryExpression	""","""		8645506	0					
ANR	8645838	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , e -> blue . Z , 4 )"	2335:6:68223:68273	8645506	18	True				
ANR	8645839	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , e -> blue . Z , 4 )"		8645506	0		=			
ANR	8645840	Identifier	pos		8645506	0					
ANR	8645841	CallExpression	"safecatd ( buffer , bufsize , pos , e -> blue . Z , 4 )"		8645506	1					
ANR	8645842	Callee	safecatd		8645506	0					
ANR	8645843	Identifier	safecatd		8645506	0					
ANR	8645844	ArgumentList	buffer		8645506	1					
ANR	8645845	Argument	buffer		8645506	0					
ANR	8645846	Identifier	buffer		8645506	0					
ANR	8645847	Argument	bufsize		8645506	1					
ANR	8645848	Identifier	bufsize		8645506	0					
ANR	8645849	Argument	pos		8645506	2					
ANR	8645850	Identifier	pos		8645506	0					
ANR	8645851	Argument	e -> blue . Z		8645506	3					
ANR	8645852	MemberAccess	e -> blue . Z		8645506	0					
ANR	8645853	PtrMemberAccess	e -> blue		8645506	0					
ANR	8645854	Identifier	e		8645506	0					
ANR	8645855	Identifier	blue		8645506	1					
ANR	8645856	Identifier	Z		8645506	1					
ANR	8645857	Argument	4		8645506	4					
ANR	8645858	PrimaryExpression	4		8645506	0					
ANR	8645859	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "")"" )"	2336:6:68281:68321	8645506	19	True				
ANR	8645860	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "")"" )"		8645506	0		=			
ANR	8645861	Identifier	pos		8645506	0					
ANR	8645862	CallExpression	"safecat ( buffer , bufsize , pos , "")"" )"		8645506	1					
ANR	8645863	Callee	safecat		8645506	0					
ANR	8645864	Identifier	safecat		8645506	0					
ANR	8645865	ArgumentList	buffer		8645506	1					
ANR	8645866	Argument	buffer		8645506	0					
ANR	8645867	Identifier	buffer		8645506	0					
ANR	8645868	Argument	bufsize		8645506	1					
ANR	8645869	Identifier	bufsize		8645506	0					
ANR	8645870	Argument	pos		8645506	2					
ANR	8645871	Identifier	pos		8645506	0					
ANR	8645872	Argument	""")"""		8645506	3					
ANR	8645873	PrimaryExpression	""")"""		8645506	0					
ANR	8645874	IfStatement	if ( encoding_gamma != 0 )		8645506	20					
ANR	8645875	Condition	encoding_gamma != 0	2337:10:68333:68351	8645506	0	True				
ANR	8645876	EqualityExpression	encoding_gamma != 0		8645506	0		!=			
ANR	8645877	Identifier	encoding_gamma		8645506	0					
ANR	8645878	PrimaryExpression	0		8645506	1					
ANR	8645879	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , "")"" )"	2338:9:68363:68403	8645506	1	True				
ANR	8645880	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , "")"" )"		8645506	0		=			
ANR	8645881	Identifier	pos		8645506	0					
ANR	8645882	CallExpression	"safecat ( buffer , bufsize , pos , "")"" )"		8645506	1					
ANR	8645883	Callee	safecat		8645506	0					
ANR	8645884	Identifier	safecat		8645506	0					
ANR	8645885	ArgumentList	buffer		8645506	1					
ANR	8645886	Argument	buffer		8645506	0					
ANR	8645887	Identifier	buffer		8645506	0					
ANR	8645888	Argument	bufsize		8645506	1					
ANR	8645889	Identifier	bufsize		8645506	0					
ANR	8645890	Argument	pos		8645506	2					
ANR	8645891	Identifier	pos		8645506	0					
ANR	8645892	Argument	""")"""		8645506	3					
ANR	8645893	PrimaryExpression	""")"""		8645506	0					
ANR	8645894	IfStatement	if ( encoding_gamma != 0 )		8645506	1					
ANR	8645895	Condition	encoding_gamma != 0	2341:7:68418:68436	8645506	0	True				
ANR	8645896	EqualityExpression	encoding_gamma != 0		8645506	0		!=			
ANR	8645897	Identifier	encoding_gamma		8645506	0					
ANR	8645898	PrimaryExpression	0		8645506	1					
ANR	8645899	CompoundStatement		30:3:1231:1231	8645506	1					
ANR	8645900	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""^"" )"	2343:6:68450:68490	8645506	0	True				
ANR	8645901	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""^"" )"		8645506	0		=			
ANR	8645902	Identifier	pos		8645506	0					
ANR	8645903	CallExpression	"safecat ( buffer , bufsize , pos , ""^"" )"		8645506	1					
ANR	8645904	Callee	safecat		8645506	0					
ANR	8645905	Identifier	safecat		8645506	0					
ANR	8645906	ArgumentList	buffer		8645506	1					
ANR	8645907	Argument	buffer		8645506	0					
ANR	8645908	Identifier	buffer		8645506	0					
ANR	8645909	Argument	bufsize		8645506	1					
ANR	8645910	Identifier	bufsize		8645506	0					
ANR	8645911	Argument	pos		8645506	2					
ANR	8645912	Identifier	pos		8645506	0					
ANR	8645913	Argument	"""^"""		8645506	3					
ANR	8645914	PrimaryExpression	"""^"""		8645506	0					
ANR	8645915	ExpressionStatement	"pos = safecatd ( buffer , bufsize , pos , encoding_gamma , 5 )"	2344:6:68498:68553	8645506	1	True				
ANR	8645916	AssignmentExpression	"pos = safecatd ( buffer , bufsize , pos , encoding_gamma , 5 )"		8645506	0		=			
ANR	8645917	Identifier	pos		8645506	0					
ANR	8645918	CallExpression	"safecatd ( buffer , bufsize , pos , encoding_gamma , 5 )"		8645506	1					
ANR	8645919	Callee	safecatd		8645506	0					
ANR	8645920	Identifier	safecatd		8645506	0					
ANR	8645921	ArgumentList	buffer		8645506	1					
ANR	8645922	Argument	buffer		8645506	0					
ANR	8645923	Identifier	buffer		8645506	0					
ANR	8645924	Argument	bufsize		8645506	1					
ANR	8645925	Identifier	bufsize		8645506	0					
ANR	8645926	Argument	pos		8645506	2					
ANR	8645927	Identifier	pos		8645506	0					
ANR	8645928	Argument	encoding_gamma		8645506	3					
ANR	8645929	Identifier	encoding_gamma		8645506	0					
ANR	8645930	Argument	5		8645506	4					
ANR	8645931	PrimaryExpression	5		8645506	0					
ANR	8645932	ReturnStatement	return pos ;	2347:3:68564:68574	8645506	2	True				
ANR	8645933	Identifier	pos		8645506	0					
ANR	8645934	ReturnType	static size_t		8645506	1					
ANR	8645935	Identifier	safecat_color_encoding		8645506	2					
ANR	8645936	ParameterList	"char * buffer , size_t bufsize , size_t pos , const color_encoding * e , double encoding_gamma"		8645506	3					
ANR	8645937	Parameter	char * buffer	2311:23:67117:67128	8645506	0	True				
ANR	8645938	ParameterType	char *		8645506	0					
ANR	8645939	Identifier	buffer		8645506	1					
ANR	8645940	Parameter	size_t bufsize	2311:37:67131:67144	8645506	1	True				
ANR	8645941	ParameterType	size_t		8645506	0					
ANR	8645942	Identifier	bufsize		8645506	1					
ANR	8645943	Parameter	size_t pos	2311:53:67147:67156	8645506	2	True				
ANR	8645944	ParameterType	size_t		8645506	0					
ANR	8645945	Identifier	pos		8645506	1					
ANR	8645946	Parameter	const color_encoding * e	2312:3:67162:67184	8645506	3	True				
ANR	8645947	ParameterType	const color_encoding *		8645506	0					
ANR	8645948	Identifier	e		8645506	1					
ANR	8645949	Parameter	double encoding_gamma	2312:28:67187:67207	8645506	4	True				
ANR	8645950	ParameterType	double		8645506	0					
ANR	8645951	Identifier	encoding_gamma		8645506	1					
ANR	8645952	CFGEntryNode	ENTRY		8645506		True				
ANR	8645953	CFGExitNode	EXIT		8645506		True				
ANR	8645954	Symbol	e		8645506						
ANR	8645955	Symbol	bufsize		8645506						
ANR	8645956	Symbol	* e		8645506						
ANR	8645957	Symbol	e -> green . Z		8645506						
ANR	8645958	Symbol	e -> green . Y		8645506						
ANR	8645959	Symbol	e -> green . X		8645506						
ANR	8645960	Symbol	safecatd		8645506						
ANR	8645961	Symbol	pos		8645506						
ANR	8645962	Symbol	e -> green		8645506						
ANR	8645963	Symbol	e -> blue		8645506						
ANR	8645964	Symbol	safecat		8645506						
ANR	8645965	Symbol	e -> red . Y		8645506						
ANR	8645966	Symbol	buffer		8645506						
ANR	8645967	Symbol	e -> red . Z		8645506						
ANR	8645968	Symbol	e -> blue . Z		8645506						
ANR	8645969	Symbol	e -> red . X		8645506						
ANR	8645970	Symbol	e -> blue . X		8645506						
ANR	8645971	Symbol	encoding_gamma		8645506						
ANR	8645972	Symbol	e -> red		8645506						
ANR	8645973	Symbol	e -> blue . Y		8645506						
ANR	8645974	ClassDef	png_modifier	2352:8:68648:74992							
ANR	8645975	DeclStmt									
ANR	8645976	Decl							png_store	png_store	this
ANR	8645977	DeclStmt									
ANR	8645978	Decl							struct png_modification	struct png_modification *	modifications
ANR	8645979	DeclStmt									
ANR	8645980	Decl							modifier_state	modifier_state	state
ANR	8645981	DeclStmt									
ANR	8645982	Decl							png_byte	png_byte	bit_depth
ANR	8645983	DeclStmt									
ANR	8645984	Decl							png_byte	png_byte	colour_type
ANR	8645985	DeclStmt									
ANR	8645986	Decl							png_uint_32	png_uint_32	pending_len
ANR	8645987	DeclStmt									
ANR	8645988	Decl							png_uint_32	png_uint_32	pending_chunk
ANR	8645989	DeclStmt									
ANR	8645990	Decl							double	double *	gammas
ANR	8645991	DeclStmt									
ANR	8645992	Decl							unsigned int	unsigned int	ngammas
ANR	8645993	DeclStmt									
ANR	8645994	Decl							unsigned int	unsigned int	ngamma_tests
ANR	8645995	DeclStmt									
ANR	8645996	Decl							double	double	current_gamma
ANR	8645997	DeclStmt									
ANR	8645998	Decl							const color_encoding	const color_encoding *	encodings
ANR	8645999	DeclStmt									
ANR	8646000	Decl							unsigned int	unsigned int	nencodings
ANR	8646001	DeclStmt									
ANR	8646002	Decl							const color_encoding	const color_encoding *	current_encoding
ANR	8646003	DeclStmt									
ANR	8646004	Decl							unsigned int	unsigned int	encoding_counter
ANR	8646005	DeclStmt									
ANR	8646006	Decl							int	int	encoding_ignored
ANR	8646007	DeclStmt									
ANR	8646008	Decl							png_byte	png_byte	sbitlow
ANR	8646009	DeclStmt									
ANR	8646010	Decl							double	double	maxout8
ANR	8646011	DeclStmt									
ANR	8646012	Decl							double	double	maxabs8
ANR	8646013	DeclStmt									
ANR	8646014	Decl							double	double	maxcalc8
ANR	8646015	DeclStmt									
ANR	8646016	Decl							double	double	maxpc8
ANR	8646017	DeclStmt									
ANR	8646018	Decl							double	double	maxout16
ANR	8646019	DeclStmt									
ANR	8646020	Decl							double	double	maxabs16
ANR	8646021	DeclStmt									
ANR	8646022	Decl							double	double	maxcalc16
ANR	8646023	DeclStmt									
ANR	8646024	Decl							double	double	maxcalcG
ANR	8646025	DeclStmt									
ANR	8646026	Decl							double	double	maxpc16
ANR	8646027	DeclStmt									
ANR	8646028	Decl							double	double	limit
ANR	8646029	DeclStmt									
ANR	8646030	Decl							double	double	log8
ANR	8646031	DeclStmt									
ANR	8646032	Decl							double	double	log16
ANR	8646033	DeclStmt									
ANR	8646034	Decl							double	double	error_gray_2
ANR	8646035	DeclStmt									
ANR	8646036	Decl							double	double	error_gray_4
ANR	8646037	DeclStmt									
ANR	8646038	Decl							double	double	error_gray_8
ANR	8646039	DeclStmt									
ANR	8646040	Decl							double	double	error_gray_16
ANR	8646041	DeclStmt									
ANR	8646042	Decl							double	double	error_color_8
ANR	8646043	DeclStmt									
ANR	8646044	Decl							double	double	error_color_16
ANR	8646045	DeclStmt									
ANR	8646046	Decl							double	double	error_indexed
ANR	8646047	DeclStmt									
ANR	8646048	Decl							int	int	use_update_info
ANR	8646049	DeclStmt									
ANR	8646050	Decl							size_t	size_t	flush
ANR	8646051	DeclStmt									
ANR	8646052	Decl							size_t	size_t	buffer_count
ANR	8646053	DeclStmt									
ANR	8646054	Decl							size_t	size_t	buffer_position
ANR	8646055	DeclStmt									
ANR	8646056	Decl							png_byte	png_byte [ 1024 ]	buffer
ANR	8646057	DeclStmt									
ANR	8646058	Decl							png_modifier	png_modifier	png_modifier
ANR	8646059	Function	fail	2500:0:75116:75291							
ANR	8646060	FunctionDef	fail (png_modifier * pm)		8646059	0					
ANR	8646061	CompoundStatement		2501:0:75150:75291	8646059	0					
ANR	8646062	ReturnStatement	return ! pm -> log && ! pm -> this . verbose && ( pm -> this . nerrors > 0 || ( pm -> this . treat_warnings_as_errors && pm -> this . nwarnings > 0 ) ) ;	2502:3:75155:75289	8646059	0	True				
ANR	8646063	AndExpression	! pm -> log && ! pm -> this . verbose && ( pm -> this . nerrors > 0 || ( pm -> this . treat_warnings_as_errors && pm -> this . nwarnings > 0 ) )		8646059	0		&&			
ANR	8646064	UnaryOperationExpression	! pm -> log		8646059	0					
ANR	8646065	UnaryOperator	!		8646059	0					
ANR	8646066	PtrMemberAccess	pm -> log		8646059	1					
ANR	8646067	Identifier	pm		8646059	0					
ANR	8646068	Identifier	log		8646059	1					
ANR	8646069	AndExpression	! pm -> this . verbose && ( pm -> this . nerrors > 0 || ( pm -> this . treat_warnings_as_errors && pm -> this . nwarnings > 0 ) )		8646059	1		&&			
ANR	8646070	UnaryOperationExpression	! pm -> this . verbose		8646059	0					
ANR	8646071	UnaryOperator	!		8646059	0					
ANR	8646072	MemberAccess	pm -> this . verbose		8646059	1					
ANR	8646073	PtrMemberAccess	pm -> this		8646059	0					
ANR	8646074	Identifier	pm		8646059	0					
ANR	8646075	Identifier	this		8646059	1					
ANR	8646076	Identifier	verbose		8646059	1					
ANR	8646077	OrExpression	pm -> this . nerrors > 0 || ( pm -> this . treat_warnings_as_errors && pm -> this . nwarnings > 0 )		8646059	1		||			
ANR	8646078	RelationalExpression	pm -> this . nerrors > 0		8646059	0		>			
ANR	8646079	MemberAccess	pm -> this . nerrors		8646059	0					
ANR	8646080	PtrMemberAccess	pm -> this		8646059	0					
ANR	8646081	Identifier	pm		8646059	0					
ANR	8646082	Identifier	this		8646059	1					
ANR	8646083	Identifier	nerrors		8646059	1					
ANR	8646084	PrimaryExpression	0		8646059	1					
ANR	8646085	AndExpression	pm -> this . treat_warnings_as_errors && pm -> this . nwarnings > 0		8646059	1		&&			
ANR	8646086	MemberAccess	pm -> this . treat_warnings_as_errors		8646059	0					
ANR	8646087	PtrMemberAccess	pm -> this		8646059	0					
ANR	8646088	Identifier	pm		8646059	0					
ANR	8646089	Identifier	this		8646059	1					
ANR	8646090	Identifier	treat_warnings_as_errors		8646059	1					
ANR	8646091	RelationalExpression	pm -> this . nwarnings > 0		8646059	1		>			
ANR	8646092	MemberAccess	pm -> this . nwarnings		8646059	0					
ANR	8646093	PtrMemberAccess	pm -> this		8646059	0					
ANR	8646094	Identifier	pm		8646059	0					
ANR	8646095	Identifier	this		8646059	1					
ANR	8646096	Identifier	nwarnings		8646059	1					
ANR	8646097	PrimaryExpression	0		8646059	1					
ANR	8646098	ReturnType	static int		8646059	1					
ANR	8646099	Identifier	fail		8646059	2					
ANR	8646100	ParameterList	png_modifier * pm		8646059	3					
ANR	8646101	Parameter	png_modifier * pm	2500:16:75132:75147	8646059	0	True				
ANR	8646102	ParameterType	png_modifier *		8646059	0					
ANR	8646103	Identifier	pm		8646059	1					
ANR	8646104	CFGEntryNode	ENTRY		8646059		True				
ANR	8646105	CFGExitNode	EXIT		8646059		True				
ANR	8646106	Symbol	* pm		8646059						
ANR	8646107	Symbol	pm -> this		8646059						
ANR	8646108	Symbol	pm -> log		8646059						
ANR	8646109	Symbol	pm -> this . verbose		8646059						
ANR	8646110	Symbol	pm -> this . nerrors		8646059						
ANR	8646111	Symbol	pm		8646059						
ANR	8646112	Symbol	pm -> this . treat_warnings_as_errors		8646059						
ANR	8646113	Symbol	pm -> this . nwarnings		8646059						
ANR	8646114	Function	modifier_init	2506:0:75294:77074							
ANR	8646115	FunctionDef	modifier_init (png_modifier * pm)		8646114	0					
ANR	8646116	CompoundStatement		2508:0:75338:77074	8646114	0					
ANR	8646117	ExpressionStatement	"memset ( pm , 0 , sizeof * pm )"	2509:3:75343:75368	8646114	0	True				
ANR	8646118	CallExpression	"memset ( pm , 0 , sizeof * pm )"		8646114	0					
ANR	8646119	Callee	memset		8646114	0					
ANR	8646120	Identifier	memset		8646114	0					
ANR	8646121	ArgumentList	pm		8646114	1					
ANR	8646122	Argument	pm		8646114	0					
ANR	8646123	Identifier	pm		8646114	0					
ANR	8646124	Argument	0		8646114	1					
ANR	8646125	PrimaryExpression	0		8646114	0					
ANR	8646126	Argument	sizeof * pm		8646114	2					
ANR	8646127	SizeofExpression	sizeof * pm		8646114	0					
ANR	8646128	Sizeof	sizeof		8646114	0					
ANR	8646129	UnaryOperationExpression	* pm		8646114	1					
ANR	8646130	UnaryOperator	*		8646114	0					
ANR	8646131	Identifier	pm		8646114	1					
ANR	8646132	ExpressionStatement	store_init ( & pm -> this )	2510:3:75373:75394	8646114	1	True				
ANR	8646133	CallExpression	store_init ( & pm -> this )		8646114	0					
ANR	8646134	Callee	store_init		8646114	0					
ANR	8646135	Identifier	store_init		8646114	0					
ANR	8646136	ArgumentList	& pm -> this		8646114	1					
ANR	8646137	Argument	& pm -> this		8646114	0					
ANR	8646138	UnaryOperationExpression	& pm -> this		8646114	0					
ANR	8646139	UnaryOperator	&		8646114	0					
ANR	8646140	PtrMemberAccess	pm -> this		8646114	1					
ANR	8646141	Identifier	pm		8646114	0					
ANR	8646142	Identifier	this		8646114	1					
ANR	8646143	ExpressionStatement	pm -> modifications = NULL	2511:3:75399:75423	8646114	2	True				
ANR	8646144	AssignmentExpression	pm -> modifications = NULL		8646114	0		=			
ANR	8646145	PtrMemberAccess	pm -> modifications		8646114	0					
ANR	8646146	Identifier	pm		8646114	0					
ANR	8646147	Identifier	modifications		8646114	1					
ANR	8646148	Identifier	NULL		8646114	1					
ANR	8646149	ExpressionStatement	pm -> state = modifier_start	2512:3:75428:75454	8646114	3	True				
ANR	8646150	AssignmentExpression	pm -> state = modifier_start		8646114	0		=			
ANR	8646151	PtrMemberAccess	pm -> state		8646114	0					
ANR	8646152	Identifier	pm		8646114	0					
ANR	8646153	Identifier	state		8646114	1					
ANR	8646154	Identifier	modifier_start		8646114	1					
ANR	8646155	ExpressionStatement	pm -> sbitlow = 1U	2513:3:75459:75475	8646114	4	True				
ANR	8646156	AssignmentExpression	pm -> sbitlow = 1U		8646114	0		=			
ANR	8646157	PtrMemberAccess	pm -> sbitlow		8646114	0					
ANR	8646158	Identifier	pm		8646114	0					
ANR	8646159	Identifier	sbitlow		8646114	1					
ANR	8646160	PrimaryExpression	1U		8646114	1					
ANR	8646161	ExpressionStatement	pm -> ngammas = 0	2514:3:75480:75495	8646114	5	True				
ANR	8646162	AssignmentExpression	pm -> ngammas = 0		8646114	0		=			
ANR	8646163	PtrMemberAccess	pm -> ngammas		8646114	0					
ANR	8646164	Identifier	pm		8646114	0					
ANR	8646165	Identifier	ngammas		8646114	1					
ANR	8646166	PrimaryExpression	0		8646114	1					
ANR	8646167	ExpressionStatement	pm -> ngamma_tests = 0	2515:3:75500:75520	8646114	6	True				
ANR	8646168	AssignmentExpression	pm -> ngamma_tests = 0		8646114	0		=			
ANR	8646169	PtrMemberAccess	pm -> ngamma_tests		8646114	0					
ANR	8646170	Identifier	pm		8646114	0					
ANR	8646171	Identifier	ngamma_tests		8646114	1					
ANR	8646172	PrimaryExpression	0		8646114	1					
ANR	8646173	ExpressionStatement	pm -> gammas = 0	2516:3:75525:75539	8646114	7	True				
ANR	8646174	AssignmentExpression	pm -> gammas = 0		8646114	0		=			
ANR	8646175	PtrMemberAccess	pm -> gammas		8646114	0					
ANR	8646176	Identifier	pm		8646114	0					
ANR	8646177	Identifier	gammas		8646114	1					
ANR	8646178	PrimaryExpression	0		8646114	1					
ANR	8646179	ExpressionStatement	pm -> current_gamma = 0	2517:3:75544:75565	8646114	8	True				
ANR	8646180	AssignmentExpression	pm -> current_gamma = 0		8646114	0		=			
ANR	8646181	PtrMemberAccess	pm -> current_gamma		8646114	0					
ANR	8646182	Identifier	pm		8646114	0					
ANR	8646183	Identifier	current_gamma		8646114	1					
ANR	8646184	PrimaryExpression	0		8646114	1					
ANR	8646185	ExpressionStatement	pm -> encodings = 0	2518:3:75570:75587	8646114	9	True				
ANR	8646186	AssignmentExpression	pm -> encodings = 0		8646114	0		=			
ANR	8646187	PtrMemberAccess	pm -> encodings		8646114	0					
ANR	8646188	Identifier	pm		8646114	0					
ANR	8646189	Identifier	encodings		8646114	1					
ANR	8646190	PrimaryExpression	0		8646114	1					
ANR	8646191	ExpressionStatement	pm -> nencodings = 0	2519:3:75592:75610	8646114	10	True				
ANR	8646192	AssignmentExpression	pm -> nencodings = 0		8646114	0		=			
ANR	8646193	PtrMemberAccess	pm -> nencodings		8646114	0					
ANR	8646194	Identifier	pm		8646114	0					
ANR	8646195	Identifier	nencodings		8646114	1					
ANR	8646196	PrimaryExpression	0		8646114	1					
ANR	8646197	ExpressionStatement	pm -> current_encoding = 0	2520:3:75615:75639	8646114	11	True				
ANR	8646198	AssignmentExpression	pm -> current_encoding = 0		8646114	0		=			
ANR	8646199	PtrMemberAccess	pm -> current_encoding		8646114	0					
ANR	8646200	Identifier	pm		8646114	0					
ANR	8646201	Identifier	current_encoding		8646114	1					
ANR	8646202	PrimaryExpression	0		8646114	1					
ANR	8646203	ExpressionStatement	pm -> encoding_counter = 0	2521:3:75644:75668	8646114	12	True				
ANR	8646204	AssignmentExpression	pm -> encoding_counter = 0		8646114	0		=			
ANR	8646205	PtrMemberAccess	pm -> encoding_counter		8646114	0					
ANR	8646206	Identifier	pm		8646114	0					
ANR	8646207	Identifier	encoding_counter		8646114	1					
ANR	8646208	PrimaryExpression	0		8646114	1					
ANR	8646209	ExpressionStatement	pm -> encoding_ignored = 0	2522:3:75673:75697	8646114	13	True				
ANR	8646210	AssignmentExpression	pm -> encoding_ignored = 0		8646114	0		=			
ANR	8646211	PtrMemberAccess	pm -> encoding_ignored		8646114	0					
ANR	8646212	Identifier	pm		8646114	0					
ANR	8646213	Identifier	encoding_ignored		8646114	1					
ANR	8646214	PrimaryExpression	0		8646114	1					
ANR	8646215	ExpressionStatement	pm -> repeat = 0	2523:3:75702:75716	8646114	14	True				
ANR	8646216	AssignmentExpression	pm -> repeat = 0		8646114	0		=			
ANR	8646217	PtrMemberAccess	pm -> repeat		8646114	0					
ANR	8646218	Identifier	pm		8646114	0					
ANR	8646219	Identifier	repeat		8646114	1					
ANR	8646220	PrimaryExpression	0		8646114	1					
ANR	8646221	ExpressionStatement	pm -> test_uses_encoding = 0	2524:3:75721:75747	8646114	15	True				
ANR	8646222	AssignmentExpression	pm -> test_uses_encoding = 0		8646114	0		=			
ANR	8646223	PtrMemberAccess	pm -> test_uses_encoding		8646114	0					
ANR	8646224	Identifier	pm		8646114	0					
ANR	8646225	Identifier	test_uses_encoding		8646114	1					
ANR	8646226	PrimaryExpression	0		8646114	1					
ANR	8646227	ExpressionStatement	pm -> maxout8 = pm -> maxpc8 = pm -> maxabs8 = pm -> maxcalc8 = 0	2525:3:75752:75809	8646114	16	True				
ANR	8646228	AssignmentExpression	pm -> maxout8 = pm -> maxpc8 = pm -> maxabs8 = pm -> maxcalc8 = 0		8646114	0		=			
ANR	8646229	PtrMemberAccess	pm -> maxout8		8646114	0					
ANR	8646230	Identifier	pm		8646114	0					
ANR	8646231	Identifier	maxout8		8646114	1					
ANR	8646232	AssignmentExpression	pm -> maxpc8 = pm -> maxabs8 = pm -> maxcalc8 = 0		8646114	1		=			
ANR	8646233	PtrMemberAccess	pm -> maxpc8		8646114	0					
ANR	8646234	Identifier	pm		8646114	0					
ANR	8646235	Identifier	maxpc8		8646114	1					
ANR	8646236	AssignmentExpression	pm -> maxabs8 = pm -> maxcalc8 = 0		8646114	1		=			
ANR	8646237	PtrMemberAccess	pm -> maxabs8		8646114	0					
ANR	8646238	Identifier	pm		8646114	0					
ANR	8646239	Identifier	maxabs8		8646114	1					
ANR	8646240	AssignmentExpression	pm -> maxcalc8 = 0		8646114	1		=			
ANR	8646241	PtrMemberAccess	pm -> maxcalc8		8646114	0					
ANR	8646242	Identifier	pm		8646114	0					
ANR	8646243	Identifier	maxcalc8		8646114	1					
ANR	8646244	PrimaryExpression	0		8646114	1					
ANR	8646245	ExpressionStatement	pm -> maxout16 = pm -> maxpc16 = pm -> maxabs16 = pm -> maxcalc16 = 0	2526:3:75814:75875	8646114	17	True				
ANR	8646246	AssignmentExpression	pm -> maxout16 = pm -> maxpc16 = pm -> maxabs16 = pm -> maxcalc16 = 0		8646114	0		=			
ANR	8646247	PtrMemberAccess	pm -> maxout16		8646114	0					
ANR	8646248	Identifier	pm		8646114	0					
ANR	8646249	Identifier	maxout16		8646114	1					
ANR	8646250	AssignmentExpression	pm -> maxpc16 = pm -> maxabs16 = pm -> maxcalc16 = 0		8646114	1		=			
ANR	8646251	PtrMemberAccess	pm -> maxpc16		8646114	0					
ANR	8646252	Identifier	pm		8646114	0					
ANR	8646253	Identifier	maxpc16		8646114	1					
ANR	8646254	AssignmentExpression	pm -> maxabs16 = pm -> maxcalc16 = 0		8646114	1		=			
ANR	8646255	PtrMemberAccess	pm -> maxabs16		8646114	0					
ANR	8646256	Identifier	pm		8646114	0					
ANR	8646257	Identifier	maxabs16		8646114	1					
ANR	8646258	AssignmentExpression	pm -> maxcalc16 = 0		8646114	1		=			
ANR	8646259	PtrMemberAccess	pm -> maxcalc16		8646114	0					
ANR	8646260	Identifier	pm		8646114	0					
ANR	8646261	Identifier	maxcalc16		8646114	1					
ANR	8646262	PrimaryExpression	0		8646114	1					
ANR	8646263	ExpressionStatement	pm -> maxcalcG = 0	2527:3:75880:75896	8646114	18	True				
ANR	8646264	AssignmentExpression	pm -> maxcalcG = 0		8646114	0		=			
ANR	8646265	PtrMemberAccess	pm -> maxcalcG		8646114	0					
ANR	8646266	Identifier	pm		8646114	0					
ANR	8646267	Identifier	maxcalcG		8646114	1					
ANR	8646268	PrimaryExpression	0		8646114	1					
ANR	8646269	ExpressionStatement	pm -> limit = 4E-3	2528:3:75901:75917	8646114	19	True				
ANR	8646270	AssignmentExpression	pm -> limit = 4E-3		8646114	0		=			
ANR	8646271	PtrMemberAccess	pm -> limit		8646114	0					
ANR	8646272	Identifier	pm		8646114	0					
ANR	8646273	Identifier	limit		8646114	1					
ANR	8646274	PrimaryExpression	4E-3		8646114	1					
ANR	8646275	ExpressionStatement	pm -> log8 = pm -> log16 = 0	2529:3:75922:75946	8646114	20	True				
ANR	8646276	AssignmentExpression	pm -> log8 = pm -> log16 = 0		8646114	0		=			
ANR	8646277	PtrMemberAccess	pm -> log8		8646114	0					
ANR	8646278	Identifier	pm		8646114	0					
ANR	8646279	Identifier	log8		8646114	1					
ANR	8646280	AssignmentExpression	pm -> log16 = 0		8646114	1		=			
ANR	8646281	PtrMemberAccess	pm -> log16		8646114	0					
ANR	8646282	Identifier	pm		8646114	0					
ANR	8646283	Identifier	log16		8646114	1					
ANR	8646284	PrimaryExpression	0		8646114	1					
ANR	8646285	ExpressionStatement	pm -> error_gray_2 = pm -> error_gray_4 = pm -> error_gray_8 = 0	2530:3:75969:76027	8646114	21	True				
ANR	8646286	AssignmentExpression	pm -> error_gray_2 = pm -> error_gray_4 = pm -> error_gray_8 = 0		8646114	0		=			
ANR	8646287	PtrMemberAccess	pm -> error_gray_2		8646114	0					
ANR	8646288	Identifier	pm		8646114	0					
ANR	8646289	Identifier	error_gray_2		8646114	1					
ANR	8646290	AssignmentExpression	pm -> error_gray_4 = pm -> error_gray_8 = 0		8646114	1		=			
ANR	8646291	PtrMemberAccess	pm -> error_gray_4		8646114	0					
ANR	8646292	Identifier	pm		8646114	0					
ANR	8646293	Identifier	error_gray_4		8646114	1					
ANR	8646294	AssignmentExpression	pm -> error_gray_8 = 0		8646114	1		=			
ANR	8646295	PtrMemberAccess	pm -> error_gray_8		8646114	0					
ANR	8646296	Identifier	pm		8646114	0					
ANR	8646297	Identifier	error_gray_8		8646114	1					
ANR	8646298	PrimaryExpression	0		8646114	1					
ANR	8646299	ExpressionStatement	pm -> error_gray_16 = pm -> error_color_8 = pm -> error_color_16 = 0	2531:3:76032:76094	8646114	22	True				
ANR	8646300	AssignmentExpression	pm -> error_gray_16 = pm -> error_color_8 = pm -> error_color_16 = 0		8646114	0		=			
ANR	8646301	PtrMemberAccess	pm -> error_gray_16		8646114	0					
ANR	8646302	Identifier	pm		8646114	0					
ANR	8646303	Identifier	error_gray_16		8646114	1					
ANR	8646304	AssignmentExpression	pm -> error_color_8 = pm -> error_color_16 = 0		8646114	1		=			
ANR	8646305	PtrMemberAccess	pm -> error_color_8		8646114	0					
ANR	8646306	Identifier	pm		8646114	0					
ANR	8646307	Identifier	error_color_8		8646114	1					
ANR	8646308	AssignmentExpression	pm -> error_color_16 = 0		8646114	1		=			
ANR	8646309	PtrMemberAccess	pm -> error_color_16		8646114	0					
ANR	8646310	Identifier	pm		8646114	0					
ANR	8646311	Identifier	error_color_16		8646114	1					
ANR	8646312	PrimaryExpression	0		8646114	1					
ANR	8646313	ExpressionStatement	pm -> error_indexed = 0	2532:3:76099:76120	8646114	23	True				
ANR	8646314	AssignmentExpression	pm -> error_indexed = 0		8646114	0		=			
ANR	8646315	PtrMemberAccess	pm -> error_indexed		8646114	0					
ANR	8646316	Identifier	pm		8646114	0					
ANR	8646317	Identifier	error_indexed		8646114	1					
ANR	8646318	PrimaryExpression	0		8646114	1					
ANR	8646319	ExpressionStatement	pm -> use_update_info = 0	2533:3:76125:76148	8646114	24	True				
ANR	8646320	AssignmentExpression	pm -> use_update_info = 0		8646114	0		=			
ANR	8646321	PtrMemberAccess	pm -> use_update_info		8646114	0					
ANR	8646322	Identifier	pm		8646114	0					
ANR	8646323	Identifier	use_update_info		8646114	1					
ANR	8646324	PrimaryExpression	0		8646114	1					
ANR	8646325	ExpressionStatement	pm -> interlace_type = PNG_INTERLACE_NONE	2534:3:76153:76192	8646114	25	True				
ANR	8646326	AssignmentExpression	pm -> interlace_type = PNG_INTERLACE_NONE		8646114	0		=			
ANR	8646327	PtrMemberAccess	pm -> interlace_type		8646114	0					
ANR	8646328	Identifier	pm		8646114	0					
ANR	8646329	Identifier	interlace_type		8646114	1					
ANR	8646330	Identifier	PNG_INTERLACE_NONE		8646114	1					
ANR	8646331	ExpressionStatement	pm -> test_standard = 0	2535:3:76197:76218	8646114	26	True				
ANR	8646332	AssignmentExpression	pm -> test_standard = 0		8646114	0		=			
ANR	8646333	PtrMemberAccess	pm -> test_standard		8646114	0					
ANR	8646334	Identifier	pm		8646114	0					
ANR	8646335	Identifier	test_standard		8646114	1					
ANR	8646336	PrimaryExpression	0		8646114	1					
ANR	8646337	ExpressionStatement	pm -> test_size = 0	2536:3:76223:76240	8646114	27	True				
ANR	8646338	AssignmentExpression	pm -> test_size = 0		8646114	0		=			
ANR	8646339	PtrMemberAccess	pm -> test_size		8646114	0					
ANR	8646340	Identifier	pm		8646114	0					
ANR	8646341	Identifier	test_size		8646114	1					
ANR	8646342	PrimaryExpression	0		8646114	1					
ANR	8646343	ExpressionStatement	pm -> test_transform = 0	2537:3:76245:76267	8646114	28	True				
ANR	8646344	AssignmentExpression	pm -> test_transform = 0		8646114	0		=			
ANR	8646345	PtrMemberAccess	pm -> test_transform		8646114	0					
ANR	8646346	Identifier	pm		8646114	0					
ANR	8646347	Identifier	test_transform		8646114	1					
ANR	8646348	PrimaryExpression	0		8646114	1					
ANR	8646349	Statement	ifdef	2538:3:76272:76276	8646114	29	True				
ANR	8646350	Statement	PNG_WRITE_tRNS_SUPPORTED	2538:9:76278:76301	8646114	30	True				
ANR	8646351	ExpressionStatement	pm -> test_tRNS = 1	2539:6:76309:76326	8646114	31	True				
ANR	8646352	AssignmentExpression	pm -> test_tRNS = 1		8646114	0		=			
ANR	8646353	PtrMemberAccess	pm -> test_tRNS		8646114	0					
ANR	8646354	Identifier	pm		8646114	0					
ANR	8646355	Identifier	test_tRNS		8646114	1					
ANR	8646356	PrimaryExpression	1		8646114	1					
ANR	8646357	ReturnType	static void		8646114	1					
ANR	8646358	Identifier	modifier_init		8646114	2					
ANR	8646359	ParameterList	png_modifier * pm		8646114	3					
ANR	8646360	Parameter	png_modifier * pm	2507:14:75320:75335	8646114	0	True				
ANR	8646361	ParameterType	png_modifier *		8646114	0					
ANR	8646362	Identifier	pm		8646114	1					
ANR	8646363	CFGEntryNode	ENTRY		8646114		True				
ANR	8646364	CFGExitNode	EXIT		8646114		True				
ANR	8646365	Symbol	pm -> maxpc8		8646114						
ANR	8646366	Symbol	pm -> maxcalc16		8646114						
ANR	8646367	Symbol	pm -> encoding_ignored		8646114						
ANR	8646368	Symbol	pm -> log8		8646114						
ANR	8646369	Symbol	pm -> log16		8646114						
ANR	8646370	Symbol	pm -> encoding_counter		8646114						
ANR	8646371	Symbol	pm -> modifications		8646114						
ANR	8646372	Symbol	pm -> ngammas		8646114						
ANR	8646373	Symbol	pm -> test_tRNS		8646114						
ANR	8646374	Symbol	pm -> maxcalcG		8646114						
ANR	8646375	Symbol	pm -> encodings		8646114						
ANR	8646376	Symbol	pm -> error_gray_8		8646114						
ANR	8646377	Symbol	& pm -> this		8646114						
ANR	8646378	Symbol	pm -> maxpc16		8646114						
ANR	8646379	Symbol	pm -> interlace_type		8646114						
ANR	8646380	Symbol	pm -> error_gray_4		8646114						
ANR	8646381	Symbol	pm -> error_gray_2		8646114						
ANR	8646382	Symbol	pm -> maxcalc8		8646114						
ANR	8646383	Symbol	* pm		8646114						
ANR	8646384	Symbol	pm -> test_size		8646114						
ANR	8646385	Symbol	pm -> ngamma_tests		8646114						
ANR	8646386	Symbol	pm -> test_standard		8646114						
ANR	8646387	Symbol	NULL		8646114						
ANR	8646388	Symbol	pm -> current_gamma		8646114						
ANR	8646389	Symbol	pm -> maxabs16		8646114						
ANR	8646390	Symbol	pm -> maxout8		8646114						
ANR	8646391	Symbol	pm -> error_color_16		8646114						
ANR	8646392	Symbol	pm -> repeat		8646114						
ANR	8646393	Symbol	pm -> nencodings		8646114						
ANR	8646394	Symbol	PNG_INTERLACE_NONE		8646114						
ANR	8646395	Symbol	pm -> error_indexed		8646114						
ANR	8646396	Symbol	pm -> current_encoding		8646114						
ANR	8646397	Symbol	modifier_start		8646114						
ANR	8646398	Symbol	pm -> gammas		8646114						
ANR	8646399	Symbol	pm -> test_uses_encoding		8646114						
ANR	8646400	Symbol	pm -> use_update_info		8646114						
ANR	8646401	Symbol	pm -> limit		8646114						
ANR	8646402	Symbol	pm -> error_color_8		8646114						
ANR	8646403	Symbol	pm -> error_gray_16		8646114						
ANR	8646404	Symbol	pm -> test_transform		8646114						
ANR	8646405	Symbol	pm -> state		8646114						
ANR	8646406	Symbol	pm		8646114						
ANR	8646407	Symbol	pm -> sbitlow		8646114						
ANR	8646408	Symbol	pm -> maxabs8		8646114						
ANR	8646409	Symbol	pm -> maxout16		8646114						
ANR	8646410	Function	digitize	2585:0:77883:78679							
ANR	8646411	FunctionDef	"digitize (double value , int depth , int do_round)"		8646410	0					
ANR	8646412	CompoundStatement		2586:0:77945:78679	8646410	0					
ANR	8646413	IdentifierDeclStatement	const unsigned int digitization_factor = ( 1U << depth ) - 1 ;	2593:3:78289:78346	8646410	0	True				
ANR	8646414	IdentifierDecl	digitization_factor = ( 1U << depth ) - 1		8646410	0					
ANR	8646415	IdentifierDeclType	const unsigned int		8646410	0					
ANR	8646416	Identifier	digitization_factor		8646410	1					
ANR	8646417	AssignmentExpression	digitization_factor = ( 1U << depth ) - 1		8646410	2		=			
ANR	8646418	Identifier	digitization_factor		8646410	0					
ANR	8646419	AdditiveExpression	( 1U << depth ) - 1		8646410	1		-			
ANR	8646420	ShiftExpression	1U << depth		8646410	0		<<			
ANR	8646421	PrimaryExpression	1U		8646410	0					
ANR	8646422	Identifier	depth		8646410	1					
ANR	8646423	PrimaryExpression	1		8646410	1					
ANR	8646424	IfStatement	if ( value <= 0 )		8646410	1					
ANR	8646425	Condition	value <= 0	2598:7:78500:78509	8646410	0	True				
ANR	8646426	RelationalExpression	value <= 0		8646410	0		<=			
ANR	8646427	Identifier	value		8646410	0					
ANR	8646428	PrimaryExpression	0		8646410	1					
ANR	8646429	ExpressionStatement	value = 0	2599:6:78518:78527	8646410	1	True				
ANR	8646430	AssignmentExpression	value = 0		8646410	0		=			
ANR	8646431	Identifier	value		8646410	0					
ANR	8646432	PrimaryExpression	0		8646410	1					
ANR	8646433	ElseStatement	else		8646410	0					
ANR	8646434	IfStatement	if ( value >= 1 )		8646410	0					
ANR	8646435	Condition	value >= 1	2601:12:78542:78551	8646410	0	True				
ANR	8646436	RelationalExpression	value >= 1		8646410	0		>=			
ANR	8646437	Identifier	value		8646410	0					
ANR	8646438	PrimaryExpression	1		8646410	1					
ANR	8646439	ExpressionStatement	value = 1	2602:6:78560:78569	8646410	1	True				
ANR	8646440	AssignmentExpression	value = 1		8646410	0		=			
ANR	8646441	Identifier	value		8646410	0					
ANR	8646442	PrimaryExpression	1		8646410	1					
ANR	8646443	ExpressionStatement	value *= digitization_factor	2604:3:78575:78603	8646410	2	True				
ANR	8646444	AssignmentExpression	value *= digitization_factor		8646410	0		*=			
ANR	8646445	Identifier	value		8646410	0					
ANR	8646446	Identifier	digitization_factor		8646410	1					
ANR	8646447	IfStatement	if ( do_round )		8646410	3					
ANR	8646448	Condition	do_round	2605:7:78612:78619	8646410	0	True				
ANR	8646449	Identifier	do_round		8646410	0					
ANR	8646450	ExpressionStatement	value += .5	2605:17:78622:78633	8646410	1	True				
ANR	8646451	AssignmentExpression	value += .5		8646410	0		+=			
ANR	8646452	Identifier	value		8646410	0					
ANR	8646453	PrimaryExpression	.5		8646410	1					
ANR	8646454	ReturnStatement	return floor ( value ) / digitization_factor ;	2606:3:78638:78677	8646410	4	True				
ANR	8646455	MultiplicativeExpression	floor ( value ) / digitization_factor		8646410	0		/			
ANR	8646456	CallExpression	floor ( value )		8646410	0					
ANR	8646457	Callee	floor		8646410	0					
ANR	8646458	Identifier	floor		8646410	0					
ANR	8646459	ArgumentList	value		8646410	1					
ANR	8646460	Argument	value		8646410	0					
ANR	8646461	Identifier	value		8646410	0					
ANR	8646462	Identifier	digitization_factor		8646410	1					
ANR	8646463	ReturnType	static double		8646410	1					
ANR	8646464	Identifier	digitize		8646410	2					
ANR	8646465	ParameterList	"double value , int depth , int do_round"		8646410	3					
ANR	8646466	Parameter	double value	2585:23:77906:77917	8646410	0	True				
ANR	8646467	ParameterType	double		8646410	0					
ANR	8646468	Identifier	value		8646410	1					
ANR	8646469	Parameter	int depth	2585:37:77920:77928	8646410	1	True				
ANR	8646470	ParameterType	int		8646410	0					
ANR	8646471	Identifier	depth		8646410	1					
ANR	8646472	Parameter	int do_round	2585:48:77931:77942	8646410	2	True				
ANR	8646473	ParameterType	int		8646410	0					
ANR	8646474	Identifier	do_round		8646410	1					
ANR	8646475	CFGEntryNode	ENTRY		8646410		True				
ANR	8646476	CFGExitNode	EXIT		8646410		True				
ANR	8646477	Symbol	digitization_factor		8646410						
ANR	8646478	Symbol	depth		8646410						
ANR	8646479	Symbol	do_round		8646410						
ANR	8646480	Symbol	floor		8646410						
ANR	8646481	Symbol	value		8646410						
ANR	8646482	Function	abserr	2612:0:78746:79109							
ANR	8646483	FunctionDef	"abserr (const png_modifier * pm , int in_depth , int out_depth)"		8646482	0					
ANR	8646484	CompoundStatement		2613:0:78820:79109	8646482	0					
ANR	8646485	IfStatement	if ( pm -> assume_16_bit_calculations || ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16 )		8646482	0					
ANR	8646486	Condition	pm -> assume_16_bit_calculations || ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16	2617:7:78939:79045	8646482	0	True				
ANR	8646487	OrExpression	pm -> assume_16_bit_calculations || ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646482	0		||			
ANR	8646488	PtrMemberAccess	pm -> assume_16_bit_calculations		8646482	0					
ANR	8646489	Identifier	pm		8646482	0					
ANR	8646490	Identifier	assume_16_bit_calculations		8646482	1					
ANR	8646491	EqualityExpression	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646482	1		==			
ANR	8646492	ConditionalExpression	pm -> calculations_use_input_precision ? in_depth : out_depth		8646482	0					
ANR	8646493	Condition	pm -> calculations_use_input_precision		8646482	0					
ANR	8646494	PtrMemberAccess	pm -> calculations_use_input_precision		8646482	0					
ANR	8646495	Identifier	pm		8646482	0					
ANR	8646496	Identifier	calculations_use_input_precision		8646482	1					
ANR	8646497	Identifier	in_depth		8646482	1					
ANR	8646498	Identifier	out_depth		8646482	2					
ANR	8646499	PrimaryExpression	16		8646482	1					
ANR	8646500	ReturnStatement	return pm -> maxabs16 ;	2619:6:79054:79073	8646482	1	True				
ANR	8646501	PtrMemberAccess	pm -> maxabs16		8646482	0					
ANR	8646502	Identifier	pm		8646482	0					
ANR	8646503	Identifier	maxabs16		8646482	1					
ANR	8646504	ElseStatement	else		8646482	0					
ANR	8646505	ReturnStatement	return pm -> maxabs8 ;	2621:6:79089:79107	8646482	0	True				
ANR	8646506	PtrMemberAccess	pm -> maxabs8		8646482	0					
ANR	8646507	Identifier	pm		8646482	0					
ANR	8646508	Identifier	maxabs8		8646482	1					
ANR	8646509	ReturnType	static double		8646482	1					
ANR	8646510	Identifier	abserr		8646482	2					
ANR	8646511	ParameterList	"const png_modifier * pm , int in_depth , int out_depth"		8646482	3					
ANR	8646512	Parameter	const png_modifier * pm	2612:21:78767:78788	8646482	0	True				
ANR	8646513	ParameterType	const png_modifier *		8646482	0					
ANR	8646514	Identifier	pm		8646482	1					
ANR	8646515	Parameter	int in_depth	2612:45:78791:78802	8646482	1	True				
ANR	8646516	ParameterType	int		8646482	0					
ANR	8646517	Identifier	in_depth		8646482	1					
ANR	8646518	Parameter	int out_depth	2612:59:78805:78817	8646482	2	True				
ANR	8646519	ParameterType	int		8646482	0					
ANR	8646520	Identifier	out_depth		8646482	1					
ANR	8646521	CFGEntryNode	ENTRY		8646482		True				
ANR	8646522	CFGExitNode	EXIT		8646482		True				
ANR	8646523	Symbol	* pm		8646482						
ANR	8646524	Symbol	pm -> assume_16_bit_calculations		8646482						
ANR	8646525	Symbol	pm -> calculations_use_input_precision		8646482						
ANR	8646526	Symbol	out_depth		8646482						
ANR	8646527	Symbol	pm -> maxabs16		8646482						
ANR	8646528	Symbol	pm		8646482						
ANR	8646529	Symbol	pm -> maxabs8		8646482						
ANR	8646530	Symbol	in_depth		8646482						
ANR	8646531	Function	calcerr	2624:0:79112:79528							
ANR	8646532	FunctionDef	"calcerr (const png_modifier * pm , int in_depth , int out_depth)"		8646531	0					
ANR	8646533	CompoundStatement		2625:0:79187:79528	8646531	0					
ANR	8646534	IfStatement	if ( ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16 )		8646531	0					
ANR	8646535	Condition	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16	2629:7:79325:79391	8646531	0	True				
ANR	8646536	EqualityExpression	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646531	0		==			
ANR	8646537	ConditionalExpression	pm -> calculations_use_input_precision ? in_depth : out_depth		8646531	0					
ANR	8646538	Condition	pm -> calculations_use_input_precision		8646531	0					
ANR	8646539	PtrMemberAccess	pm -> calculations_use_input_precision		8646531	0					
ANR	8646540	Identifier	pm		8646531	0					
ANR	8646541	Identifier	calculations_use_input_precision		8646531	1					
ANR	8646542	Identifier	in_depth		8646531	1					
ANR	8646543	Identifier	out_depth		8646531	2					
ANR	8646544	PrimaryExpression	16		8646531	1					
ANR	8646545	ReturnStatement	return pm -> maxcalc16 ;	2630:6:79400:79420	8646531	1	True				
ANR	8646546	PtrMemberAccess	pm -> maxcalc16		8646531	0					
ANR	8646547	Identifier	pm		8646531	0					
ANR	8646548	Identifier	maxcalc16		8646531	1					
ANR	8646549	ElseStatement	else		8646531	0					
ANR	8646550	IfStatement	if ( pm -> assume_16_bit_calculations )		8646531	0					
ANR	8646551	Condition	pm -> assume_16_bit_calculations	2631:12:79434:79463	8646531	0	True				
ANR	8646552	PtrMemberAccess	pm -> assume_16_bit_calculations		8646531	0					
ANR	8646553	Identifier	pm		8646531	0					
ANR	8646554	Identifier	assume_16_bit_calculations		8646531	1					
ANR	8646555	ReturnStatement	return pm -> maxcalcG ;	2632:6:79472:79491	8646531	1	True				
ANR	8646556	PtrMemberAccess	pm -> maxcalcG		8646531	0					
ANR	8646557	Identifier	pm		8646531	0					
ANR	8646558	Identifier	maxcalcG		8646531	1					
ANR	8646559	ElseStatement	else		8646531	0					
ANR	8646560	ReturnStatement	return pm -> maxcalc8 ;	2634:6:79507:79526	8646531	0	True				
ANR	8646561	PtrMemberAccess	pm -> maxcalc8		8646531	0					
ANR	8646562	Identifier	pm		8646531	0					
ANR	8646563	Identifier	maxcalc8		8646531	1					
ANR	8646564	ReturnType	static double		8646531	1					
ANR	8646565	Identifier	calcerr		8646531	2					
ANR	8646566	ParameterList	"const png_modifier * pm , int in_depth , int out_depth"		8646531	3					
ANR	8646567	Parameter	const png_modifier * pm	2624:22:79134:79155	8646531	0	True				
ANR	8646568	ParameterType	const png_modifier *		8646531	0					
ANR	8646569	Identifier	pm		8646531	1					
ANR	8646570	Parameter	int in_depth	2624:46:79158:79169	8646531	1	True				
ANR	8646571	ParameterType	int		8646531	0					
ANR	8646572	Identifier	in_depth		8646531	1					
ANR	8646573	Parameter	int out_depth	2624:60:79172:79184	8646531	2	True				
ANR	8646574	ParameterType	int		8646531	0					
ANR	8646575	Identifier	out_depth		8646531	1					
ANR	8646576	CFGEntryNode	ENTRY		8646531		True				
ANR	8646577	CFGExitNode	EXIT		8646531		True				
ANR	8646578	Symbol	* pm		8646531						
ANR	8646579	Symbol	pm -> maxcalc16		8646531						
ANR	8646580	Symbol	pm -> assume_16_bit_calculations		8646531						
ANR	8646581	Symbol	pm -> calculations_use_input_precision		8646531						
ANR	8646582	Symbol	out_depth		8646531						
ANR	8646583	Symbol	pm		8646531						
ANR	8646584	Symbol	pm -> maxcalcG		8646531						
ANR	8646585	Symbol	in_depth		8646531						
ANR	8646586	Symbol	pm -> maxcalc8		8646531						
ANR	8646587	Function	pcerr	2637:0:79531:79950							
ANR	8646588	FunctionDef	"pcerr (const png_modifier * pm , int in_depth , int out_depth)"		8646587	0					
ANR	8646589	CompoundStatement		2638:0:79604:79950	8646587	0					
ANR	8646590	IfStatement	if ( pm -> assume_16_bit_calculations || ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16 )		8646587	0					
ANR	8646591	Condition	pm -> assume_16_bit_calculations || ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16	2642:7:79770:79876	8646587	0	True				
ANR	8646592	OrExpression	pm -> assume_16_bit_calculations || ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646587	0		||			
ANR	8646593	PtrMemberAccess	pm -> assume_16_bit_calculations		8646587	0					
ANR	8646594	Identifier	pm		8646587	0					
ANR	8646595	Identifier	assume_16_bit_calculations		8646587	1					
ANR	8646596	EqualityExpression	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646587	1		==			
ANR	8646597	ConditionalExpression	pm -> calculations_use_input_precision ? in_depth : out_depth		8646587	0					
ANR	8646598	Condition	pm -> calculations_use_input_precision		8646587	0					
ANR	8646599	PtrMemberAccess	pm -> calculations_use_input_precision		8646587	0					
ANR	8646600	Identifier	pm		8646587	0					
ANR	8646601	Identifier	calculations_use_input_precision		8646587	1					
ANR	8646602	Identifier	in_depth		8646587	1					
ANR	8646603	Identifier	out_depth		8646587	2					
ANR	8646604	PrimaryExpression	16		8646587	1					
ANR	8646605	ReturnStatement	return pm -> maxpc16 * .01 ;	2644:6:79885:79909	8646587	1	True				
ANR	8646606	MultiplicativeExpression	pm -> maxpc16 * .01		8646587	0		*			
ANR	8646607	PtrMemberAccess	pm -> maxpc16		8646587	0					
ANR	8646608	Identifier	pm		8646587	0					
ANR	8646609	Identifier	maxpc16		8646587	1					
ANR	8646610	PrimaryExpression	.01		8646587	1					
ANR	8646611	ElseStatement	else		8646587	0					
ANR	8646612	ReturnStatement	return pm -> maxpc8 * .01 ;	2646:6:79925:79948	8646587	0	True				
ANR	8646613	MultiplicativeExpression	pm -> maxpc8 * .01		8646587	0		*			
ANR	8646614	PtrMemberAccess	pm -> maxpc8		8646587	0					
ANR	8646615	Identifier	pm		8646587	0					
ANR	8646616	Identifier	maxpc8		8646587	1					
ANR	8646617	PrimaryExpression	.01		8646587	1					
ANR	8646618	ReturnType	static double		8646587	1					
ANR	8646619	Identifier	pcerr		8646587	2					
ANR	8646620	ParameterList	"const png_modifier * pm , int in_depth , int out_depth"		8646587	3					
ANR	8646621	Parameter	const png_modifier * pm	2637:20:79551:79572	8646587	0	True				
ANR	8646622	ParameterType	const png_modifier *		8646587	0					
ANR	8646623	Identifier	pm		8646587	1					
ANR	8646624	Parameter	int in_depth	2637:44:79575:79586	8646587	1	True				
ANR	8646625	ParameterType	int		8646587	0					
ANR	8646626	Identifier	in_depth		8646587	1					
ANR	8646627	Parameter	int out_depth	2637:58:79589:79601	8646587	2	True				
ANR	8646628	ParameterType	int		8646587	0					
ANR	8646629	Identifier	out_depth		8646587	1					
ANR	8646630	CFGEntryNode	ENTRY		8646587		True				
ANR	8646631	CFGExitNode	EXIT		8646587		True				
ANR	8646632	Symbol	* pm		8646587						
ANR	8646633	Symbol	pm -> maxpc8		8646587						
ANR	8646634	Symbol	pm -> assume_16_bit_calculations		8646587						
ANR	8646635	Symbol	pm -> calculations_use_input_precision		8646587						
ANR	8646636	Symbol	out_depth		8646587						
ANR	8646637	Symbol	pm -> maxpc16		8646587						
ANR	8646638	Symbol	pm		8646587						
ANR	8646639	Symbol	in_depth		8646587						
ANR	8646640	Function	outerr	2660:0:80527:81322							
ANR	8646641	FunctionDef	"outerr (const png_modifier * pm , int in_depth , int out_depth)"		8646640	0					
ANR	8646642	CompoundStatement		2661:0:80601:81322	8646640	0					
ANR	8646643	IfStatement	if ( out_depth == 2 )		8646640	0					
ANR	8646644	Condition	out_depth == 2	2669:7:80923:80936	8646640	0	True				
ANR	8646645	EqualityExpression	out_depth == 2		8646640	0		==			
ANR	8646646	Identifier	out_depth		8646640	0					
ANR	8646647	PrimaryExpression	2		8646640	1					
ANR	8646648	ReturnStatement	return .73182 - .5 ;	2670:6:80945:80961	8646640	1	True				
ANR	8646649	AdditiveExpression	.73182 - .5		8646640	0		-			
ANR	8646650	PrimaryExpression	.73182		8646640	0					
ANR	8646651	PrimaryExpression	.5		8646640	1					
ANR	8646652	IfStatement	if ( out_depth == 4 )		8646640	1					
ANR	8646653	Condition	out_depth == 4	2672:7:80971:80984	8646640	0	True				
ANR	8646654	EqualityExpression	out_depth == 4		8646640	0		==			
ANR	8646655	Identifier	out_depth		8646640	0					
ANR	8646656	PrimaryExpression	4		8646640	1					
ANR	8646657	ReturnStatement	return .90644 - .5 ;	2673:6:80993:81009	8646640	1	True				
ANR	8646658	AdditiveExpression	.90644 - .5		8646640	0		-			
ANR	8646659	PrimaryExpression	.90644		8646640	0					
ANR	8646660	PrimaryExpression	.5		8646640	1					
ANR	8646661	IfStatement	if ( ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16 )		8646640	2					
ANR	8646662	Condition	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16	2675:7:81019:81085	8646640	0	True				
ANR	8646663	EqualityExpression	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646640	0		==			
ANR	8646664	ConditionalExpression	pm -> calculations_use_input_precision ? in_depth : out_depth		8646640	0					
ANR	8646665	Condition	pm -> calculations_use_input_precision		8646640	0					
ANR	8646666	PtrMemberAccess	pm -> calculations_use_input_precision		8646640	0					
ANR	8646667	Identifier	pm		8646640	0					
ANR	8646668	Identifier	calculations_use_input_precision		8646640	1					
ANR	8646669	Identifier	in_depth		8646640	1					
ANR	8646670	Identifier	out_depth		8646640	2					
ANR	8646671	PrimaryExpression	16		8646640	1					
ANR	8646672	ReturnStatement	return pm -> maxout16 ;	2676:6:81094:81113	8646640	1	True				
ANR	8646673	PtrMemberAccess	pm -> maxout16		8646640	0					
ANR	8646674	Identifier	pm		8646640	0					
ANR	8646675	Identifier	maxout16		8646640	1					
ANR	8646676	ElseStatement	else		8646640	0					
ANR	8646677	IfStatement	if ( out_depth == 16 )		8646640	0					
ANR	8646678	Condition	out_depth == 16	2681:12:81238:81252	8646640	0	True				
ANR	8646679	EqualityExpression	out_depth == 16		8646640	0		==			
ANR	8646680	Identifier	out_depth		8646640	0					
ANR	8646681	PrimaryExpression	16		8646640	1					
ANR	8646682	ReturnStatement	return pm -> maxout8 * 257 ;	2682:6:81261:81285	8646640	1	True				
ANR	8646683	MultiplicativeExpression	pm -> maxout8 * 257		8646640	0		*			
ANR	8646684	PtrMemberAccess	pm -> maxout8		8646640	0					
ANR	8646685	Identifier	pm		8646640	0					
ANR	8646686	Identifier	maxout8		8646640	1					
ANR	8646687	PrimaryExpression	257		8646640	1					
ANR	8646688	ElseStatement	else		8646640	0					
ANR	8646689	ReturnStatement	return pm -> maxout8 ;	2685:6:81302:81320	8646640	0	True				
ANR	8646690	PtrMemberAccess	pm -> maxout8		8646640	0					
ANR	8646691	Identifier	pm		8646640	0					
ANR	8646692	Identifier	maxout8		8646640	1					
ANR	8646693	ReturnType	static double		8646640	1					
ANR	8646694	Identifier	outerr		8646640	2					
ANR	8646695	ParameterList	"const png_modifier * pm , int in_depth , int out_depth"		8646640	3					
ANR	8646696	Parameter	const png_modifier * pm	2660:21:80548:80569	8646640	0	True				
ANR	8646697	ParameterType	const png_modifier *		8646640	0					
ANR	8646698	Identifier	pm		8646640	1					
ANR	8646699	Parameter	int in_depth	2660:45:80572:80583	8646640	1	True				
ANR	8646700	ParameterType	int		8646640	0					
ANR	8646701	Identifier	in_depth		8646640	1					
ANR	8646702	Parameter	int out_depth	2660:59:80586:80598	8646640	2	True				
ANR	8646703	ParameterType	int		8646640	0					
ANR	8646704	Identifier	out_depth		8646640	1					
ANR	8646705	CFGEntryNode	ENTRY		8646640		True				
ANR	8646706	CFGExitNode	EXIT		8646640		True				
ANR	8646707	Symbol	* pm		8646640						
ANR	8646708	Symbol	pm -> calculations_use_input_precision		8646640						
ANR	8646709	Symbol	out_depth		8646640						
ANR	8646710	Symbol	pm -> maxout8		8646640						
ANR	8646711	Symbol	pm		8646640						
ANR	8646712	Symbol	pm -> maxout16		8646640						
ANR	8646713	Symbol	in_depth		8646640						
ANR	8646714	Function	outlog	2692:0:81544:82309							
ANR	8646715	FunctionDef	"outlog (const png_modifier * pm , int in_depth , int out_depth)"		8646714	0					
ANR	8646716	CompoundStatement		2693:0:81618:82309	8646714	0					
ANR	8646717	IfStatement	if ( out_depth <= 8 )		8646714	0					
ANR	8646718	Condition	out_depth <= 8	2697:7:81774:81787	8646714	0	True				
ANR	8646719	RelationalExpression	out_depth <= 8		8646714	0		<=			
ANR	8646720	Identifier	out_depth		8646714	0					
ANR	8646721	PrimaryExpression	8		8646714	1					
ANR	8646722	CompoundStatement		6:3:174:174	8646714	1					
ANR	8646723	IfStatement	if ( pm -> log8 == 0 )		8646714	0					
ANR	8646724	Condition	pm -> log8 == 0	2699:10:81805:81817	8646714	0	True				
ANR	8646725	EqualityExpression	pm -> log8 == 0		8646714	0		==			
ANR	8646726	PtrMemberAccess	pm -> log8		8646714	0					
ANR	8646727	Identifier	pm		8646714	0					
ANR	8646728	Identifier	log8		8646714	1					
ANR	8646729	PrimaryExpression	0		8646714	1					
ANR	8646730	ReturnStatement	return 256 ;	2700:9:81848:81858	8646714	1	True				
ANR	8646731	PrimaryExpression	256		8646714	0					
ANR	8646732	IfStatement	if ( out_depth < 8 )		8646714	1					
ANR	8646733	Condition	out_depth < 8	2702:10:81871:81883	8646714	0	True				
ANR	8646734	RelationalExpression	out_depth < 8		8646714	0		<			
ANR	8646735	Identifier	out_depth		8646714	0					
ANR	8646736	PrimaryExpression	8		8646714	1					
ANR	8646737	ReturnStatement	return pm -> log8 / 255 * ( ( 1 << out_depth ) - 1 ) ;	2703:9:81895:81937	8646714	1	True				
ANR	8646738	MultiplicativeExpression	pm -> log8 / 255 * ( ( 1 << out_depth ) - 1 )		8646714	0		/			
ANR	8646739	PtrMemberAccess	pm -> log8		8646714	0					
ANR	8646740	Identifier	pm		8646714	0					
ANR	8646741	Identifier	log8		8646714	1					
ANR	8646742	MultiplicativeExpression	255 * ( ( 1 << out_depth ) - 1 )		8646714	1		*			
ANR	8646743	PrimaryExpression	255		8646714	0					
ANR	8646744	AdditiveExpression	( 1 << out_depth ) - 1		8646714	1		-			
ANR	8646745	ShiftExpression	1 << out_depth		8646714	0		<<			
ANR	8646746	PrimaryExpression	1		8646714	0					
ANR	8646747	Identifier	out_depth		8646714	1					
ANR	8646748	PrimaryExpression	1		8646714	1					
ANR	8646749	ReturnStatement	return pm -> log8 ;	2705:6:81946:81961	8646714	2	True				
ANR	8646750	PtrMemberAccess	pm -> log8		8646714	0					
ANR	8646751	Identifier	pm		8646714	0					
ANR	8646752	Identifier	log8		8646714	1					
ANR	8646753	IfStatement	if ( ( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16 )		8646714	1					
ANR	8646754	Condition	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16	2708:7:81976:82042	8646714	0	True				
ANR	8646755	EqualityExpression	( pm -> calculations_use_input_precision ? in_depth : out_depth ) == 16		8646714	0		==			
ANR	8646756	ConditionalExpression	pm -> calculations_use_input_precision ? in_depth : out_depth		8646714	0					
ANR	8646757	Condition	pm -> calculations_use_input_precision		8646714	0					
ANR	8646758	PtrMemberAccess	pm -> calculations_use_input_precision		8646714	0					
ANR	8646759	Identifier	pm		8646714	0					
ANR	8646760	Identifier	calculations_use_input_precision		8646714	1					
ANR	8646761	Identifier	in_depth		8646714	1					
ANR	8646762	Identifier	out_depth		8646714	2					
ANR	8646763	PrimaryExpression	16		8646714	1					
ANR	8646764	CompoundStatement		17:3:429:429	8646714	1					
ANR	8646765	IfStatement	if ( pm -> log16 == 0 )		8646714	0					
ANR	8646766	Condition	pm -> log16 == 0	2710:10:82060:82073	8646714	0	True				
ANR	8646767	EqualityExpression	pm -> log16 == 0		8646714	0		==			
ANR	8646768	PtrMemberAccess	pm -> log16		8646714	0					
ANR	8646769	Identifier	pm		8646714	0					
ANR	8646770	Identifier	log16		8646714	1					
ANR	8646771	PrimaryExpression	0		8646714	1					
ANR	8646772	ReturnStatement	return 65536 ;	2711:9:82085:82097	8646714	1	True				
ANR	8646773	PrimaryExpression	65536		8646714	0					
ANR	8646774	ReturnStatement	return pm -> log16 ;	2713:6:82106:82122	8646714	1	True				
ANR	8646775	PtrMemberAccess	pm -> log16		8646714	0					
ANR	8646776	Identifier	pm		8646714	0					
ANR	8646777	Identifier	log16		8646714	1					
ANR	8646778	IfStatement	if ( pm -> log8 == 0 )		8646714	2					
ANR	8646779	Condition	pm -> log8 == 0	2719:7:82247:82259	8646714	0	True				
ANR	8646780	EqualityExpression	pm -> log8 == 0		8646714	0		==			
ANR	8646781	PtrMemberAccess	pm -> log8		8646714	0					
ANR	8646782	Identifier	pm		8646714	0					
ANR	8646783	Identifier	log8		8646714	1					
ANR	8646784	PrimaryExpression	0		8646714	1					
ANR	8646785	ReturnStatement	return 65536 ;	2720:6:82268:82280	8646714	1	True				
ANR	8646786	PrimaryExpression	65536		8646714	0					
ANR	8646787	ReturnStatement	return pm -> log8 * 257 ;	2722:3:82286:82307	8646714	3	True				
ANR	8646788	MultiplicativeExpression	pm -> log8 * 257		8646714	0		*			
ANR	8646789	PtrMemberAccess	pm -> log8		8646714	0					
ANR	8646790	Identifier	pm		8646714	0					
ANR	8646791	Identifier	log8		8646714	1					
ANR	8646792	PrimaryExpression	257		8646714	1					
ANR	8646793	ReturnType	static double		8646714	1					
ANR	8646794	Identifier	outlog		8646714	2					
ANR	8646795	ParameterList	"const png_modifier * pm , int in_depth , int out_depth"		8646714	3					
ANR	8646796	Parameter	const png_modifier * pm	2692:21:81565:81586	8646714	0	True				
ANR	8646797	ParameterType	const png_modifier *		8646714	0					
ANR	8646798	Identifier	pm		8646714	1					
ANR	8646799	Parameter	int in_depth	2692:45:81589:81600	8646714	1	True				
ANR	8646800	ParameterType	int		8646714	0					
ANR	8646801	Identifier	in_depth		8646714	1					
ANR	8646802	Parameter	int out_depth	2692:59:81603:81615	8646714	2	True				
ANR	8646803	ParameterType	int		8646714	0					
ANR	8646804	Identifier	out_depth		8646714	1					
ANR	8646805	CFGEntryNode	ENTRY		8646714		True				
ANR	8646806	CFGExitNode	EXIT		8646714		True				
ANR	8646807	Symbol	* pm		8646714						
ANR	8646808	Symbol	pm -> calculations_use_input_precision		8646714						
ANR	8646809	Symbol	pm -> log8		8646714						
ANR	8646810	Symbol	pm -> log16		8646714						
ANR	8646811	Symbol	out_depth		8646714						
ANR	8646812	Symbol	pm		8646714						
ANR	8646813	Symbol	in_depth		8646714						
ANR	8646814	Function	output_quantization_factor	2730:0:82565:82791							
ANR	8646815	FunctionDef	"output_quantization_factor (const png_modifier * pm , int in_depth , int out_depth)"		8646814	0					
ANR	8646816	CompoundStatement		2732:0:82659:82791	8646814	0					
ANR	8646817	IfStatement	if ( out_depth == 16 && in_depth != 16 && pm -> calculations_use_input_precision )		8646814	0					
ANR	8646818	Condition	out_depth == 16 && in_depth != 16 && pm -> calculations_use_input_precision	2733:7:82668:82746	8646814	0	True				
ANR	8646819	AndExpression	out_depth == 16 && in_depth != 16 && pm -> calculations_use_input_precision		8646814	0		&&			
ANR	8646820	EqualityExpression	out_depth == 16		8646814	0		==			
ANR	8646821	Identifier	out_depth		8646814	0					
ANR	8646822	PrimaryExpression	16		8646814	1					
ANR	8646823	AndExpression	in_depth != 16 && pm -> calculations_use_input_precision		8646814	1		&&			
ANR	8646824	EqualityExpression	in_depth != 16		8646814	0		!=			
ANR	8646825	Identifier	in_depth		8646814	0					
ANR	8646826	PrimaryExpression	16		8646814	1					
ANR	8646827	PtrMemberAccess	pm -> calculations_use_input_precision		8646814	1					
ANR	8646828	Identifier	pm		8646814	0					
ANR	8646829	Identifier	calculations_use_input_precision		8646814	1					
ANR	8646830	ReturnStatement	return 257 ;	2735:6:82755:82765	8646814	1	True				
ANR	8646831	PrimaryExpression	257		8646814	0					
ANR	8646832	ElseStatement	else		8646814	0					
ANR	8646833	ReturnStatement	return 1 ;	2737:6:82781:82789	8646814	0	True				
ANR	8646834	PrimaryExpression	1		8646814	0					
ANR	8646835	ReturnType	static int		8646814	1					
ANR	8646836	Identifier	output_quantization_factor		8646814	2					
ANR	8646837	ParameterList	"const png_modifier * pm , int in_depth , int out_depth"		8646814	3					
ANR	8646838	Parameter	const png_modifier * pm	2730:38:82603:82624	8646814	0	True				
ANR	8646839	ParameterType	const png_modifier *		8646814	0					
ANR	8646840	Identifier	pm		8646814	1					
ANR	8646841	Parameter	int in_depth	2730:62:82627:82638	8646814	1	True				
ANR	8646842	ParameterType	int		8646814	0					
ANR	8646843	Identifier	in_depth		8646814	1					
ANR	8646844	Parameter	int out_depth	2731:3:82644:82656	8646814	2	True				
ANR	8646845	ParameterType	int		8646814	0					
ANR	8646846	Identifier	out_depth		8646814	1					
ANR	8646847	CFGEntryNode	ENTRY		8646814		True				
ANR	8646848	CFGExitNode	EXIT		8646814		True				
ANR	8646849	Symbol	* pm		8646814						
ANR	8646850	Symbol	pm -> calculations_use_input_precision		8646814						
ANR	8646851	Symbol	out_depth		8646814						
ANR	8646852	Symbol	pm		8646814						
ANR	8646853	Symbol	in_depth		8646814						
ANR	8646854	ClassDef	png_modification	2750:8:83317:84093							
ANR	8646855	DeclStmt									
ANR	8646856	Decl							struct png_modification	struct png_modification *	next
ANR	8646857	DeclStmt									
ANR	8646858	Decl							png_uint_32	png_uint_32	chunk
ANR	8646859	DeclStmt									
ANR	8646860	Decl							"int ( * ) ( struct png_modifier * pm , struct png_modification * me , int add )"	"int ( * ) ( struct png_modifier * pm , struct png_modification * me , int add )"	modify_fn
ANR	8646861	DeclStmt									
ANR	8646862	Decl							png_uint_32	png_uint_32	add
ANR	8646863	DeclStmt									
ANR	8646864	Decl							png_modification	png_modification	png_modification
ANR	8646865	Function	modification_reset	2769:0:84096:84290							
ANR	8646866	FunctionDef	modification_reset (png_modification * pmm)		8646865	0					
ANR	8646867	CompoundStatement		2771:0:84150:84290	8646865	0					
ANR	8646868	IfStatement	if ( pmm != NULL )		8646865	0					
ANR	8646869	Condition	pmm != NULL	2772:7:84159:84169	8646865	0	True				
ANR	8646870	EqualityExpression	pmm != NULL		8646865	0		!=			
ANR	8646871	Identifier	pmm		8646865	0					
ANR	8646872	Identifier	NULL		8646865	1					
ANR	8646873	CompoundStatement		3:3:24:24	8646865	1					
ANR	8646874	ExpressionStatement	pmm -> modified = 0	2774:6:84183:84200	8646865	0	True				
ANR	8646875	AssignmentExpression	pmm -> modified = 0		8646865	0		=			
ANR	8646876	PtrMemberAccess	pmm -> modified		8646865	0					
ANR	8646877	Identifier	pmm		8646865	0					
ANR	8646878	Identifier	modified		8646865	1					
ANR	8646879	PrimaryExpression	0		8646865	1					
ANR	8646880	ExpressionStatement	pmm -> added = 0	2775:6:84208:84222	8646865	1	True				
ANR	8646881	AssignmentExpression	pmm -> added = 0		8646865	0		=			
ANR	8646882	PtrMemberAccess	pmm -> added		8646865	0					
ANR	8646883	Identifier	pmm		8646865	0					
ANR	8646884	Identifier	added		8646865	1					
ANR	8646885	PrimaryExpression	0		8646865	1					
ANR	8646886	ExpressionStatement	pmm -> removed = 0	2776:6:84230:84246	8646865	2	True				
ANR	8646887	AssignmentExpression	pmm -> removed = 0		8646865	0		=			
ANR	8646888	PtrMemberAccess	pmm -> removed		8646865	0					
ANR	8646889	Identifier	pmm		8646865	0					
ANR	8646890	Identifier	removed		8646865	1					
ANR	8646891	PrimaryExpression	0		8646865	1					
ANR	8646892	ExpressionStatement	modification_reset ( pmm -> next )	2777:6:84254:84283	8646865	3	True				
ANR	8646893	CallExpression	modification_reset ( pmm -> next )		8646865	0					
ANR	8646894	Callee	modification_reset		8646865	0					
ANR	8646895	Identifier	modification_reset		8646865	0					
ANR	8646896	ArgumentList	pmm -> next		8646865	1					
ANR	8646897	Argument	pmm -> next		8646865	0					
ANR	8646898	PtrMemberAccess	pmm -> next		8646865	0					
ANR	8646899	Identifier	pmm		8646865	0					
ANR	8646900	Identifier	next		8646865	1					
ANR	8646901	ReturnType	static void		8646865	1					
ANR	8646902	Identifier	modification_reset		8646865	2					
ANR	8646903	ParameterList	png_modification * pmm		8646865	3					
ANR	8646904	Parameter	png_modification * pmm	2770:19:84127:84147	8646865	0	True				
ANR	8646905	ParameterType	png_modification *		8646865	0					
ANR	8646906	Identifier	pmm		8646865	1					
ANR	8646907	CFGEntryNode	ENTRY		8646865		True				
ANR	8646908	CFGExitNode	EXIT		8646865		True				
ANR	8646909	Symbol	pmm -> removed		8646865						
ANR	8646910	Symbol	pmm		8646865						
ANR	8646911	Symbol	pmm -> added		8646865						
ANR	8646912	Symbol	NULL		8646865						
ANR	8646913	Symbol	pmm -> next		8646865						
ANR	8646914	Symbol	* pmm		8646865						
ANR	8646915	Symbol	pmm -> modified		8646865						
ANR	8646916	Function	modification_init	2781:0:84293:84491							
ANR	8646917	FunctionDef	modification_init (png_modification * pmm)		8646916	0					
ANR	8646918	CompoundStatement		2783:0:84346:84491	8646916	0					
ANR	8646919	ExpressionStatement	"memset ( pmm , 0 , sizeof * pmm )"	2784:3:84351:84378	8646916	0	True				
ANR	8646920	CallExpression	"memset ( pmm , 0 , sizeof * pmm )"		8646916	0					
ANR	8646921	Callee	memset		8646916	0					
ANR	8646922	Identifier	memset		8646916	0					
ANR	8646923	ArgumentList	pmm		8646916	1					
ANR	8646924	Argument	pmm		8646916	0					
ANR	8646925	Identifier	pmm		8646916	0					
ANR	8646926	Argument	0		8646916	1					
ANR	8646927	PrimaryExpression	0		8646916	0					
ANR	8646928	Argument	sizeof * pmm		8646916	2					
ANR	8646929	SizeofExpression	sizeof * pmm		8646916	0					
ANR	8646930	Sizeof	sizeof		8646916	0					
ANR	8646931	UnaryOperationExpression	* pmm		8646916	1					
ANR	8646932	UnaryOperator	*		8646916	0					
ANR	8646933	Identifier	pmm		8646916	1					
ANR	8646934	ExpressionStatement	pmm -> next = NULL	2785:3:84383:84399	8646916	1	True				
ANR	8646935	AssignmentExpression	pmm -> next = NULL		8646916	0		=			
ANR	8646936	PtrMemberAccess	pmm -> next		8646916	0					
ANR	8646937	Identifier	pmm		8646916	0					
ANR	8646938	Identifier	next		8646916	1					
ANR	8646939	Identifier	NULL		8646916	1					
ANR	8646940	ExpressionStatement	pmm -> chunk = 0	2786:3:84404:84418	8646916	2	True				
ANR	8646941	AssignmentExpression	pmm -> chunk = 0		8646916	0		=			
ANR	8646942	PtrMemberAccess	pmm -> chunk		8646916	0					
ANR	8646943	Identifier	pmm		8646916	0					
ANR	8646944	Identifier	chunk		8646916	1					
ANR	8646945	PrimaryExpression	0		8646916	1					
ANR	8646946	ExpressionStatement	pmm -> modify_fn = NULL	2787:3:84423:84444	8646916	3	True				
ANR	8646947	AssignmentExpression	pmm -> modify_fn = NULL		8646916	0		=			
ANR	8646948	PtrMemberAccess	pmm -> modify_fn		8646916	0					
ANR	8646949	Identifier	pmm		8646916	0					
ANR	8646950	Identifier	modify_fn		8646916	1					
ANR	8646951	Identifier	NULL		8646916	1					
ANR	8646952	ExpressionStatement	pmm -> add = 0	2788:3:84449:84461	8646916	4	True				
ANR	8646953	AssignmentExpression	pmm -> add = 0		8646916	0		=			
ANR	8646954	PtrMemberAccess	pmm -> add		8646916	0					
ANR	8646955	Identifier	pmm		8646916	0					
ANR	8646956	Identifier	add		8646916	1					
ANR	8646957	PrimaryExpression	0		8646916	1					
ANR	8646958	ExpressionStatement	modification_reset ( pmm )	2789:3:84466:84489	8646916	5	True				
ANR	8646959	CallExpression	modification_reset ( pmm )		8646916	0					
ANR	8646960	Callee	modification_reset		8646916	0					
ANR	8646961	Identifier	modification_reset		8646916	0					
ANR	8646962	ArgumentList	pmm		8646916	1					
ANR	8646963	Argument	pmm		8646916	0					
ANR	8646964	Identifier	pmm		8646916	0					
ANR	8646965	ReturnType	static void		8646916	1					
ANR	8646966	Identifier	modification_init		8646916	2					
ANR	8646967	ParameterList	png_modification * pmm		8646916	3					
ANR	8646968	Parameter	png_modification * pmm	2782:18:84323:84343	8646916	0	True				
ANR	8646969	ParameterType	png_modification *		8646916	0					
ANR	8646970	Identifier	pmm		8646916	1					
ANR	8646971	CFGEntryNode	ENTRY		8646916		True				
ANR	8646972	CFGExitNode	EXIT		8646916		True				
ANR	8646973	Symbol	pmm		8646916						
ANR	8646974	Symbol	pmm -> modify_fn		8646916						
ANR	8646975	Symbol	pmm -> add		8646916						
ANR	8646976	Symbol	NULL		8646916						
ANR	8646977	Symbol	pmm -> next		8646916						
ANR	8646978	Symbol	* pmm		8646916						
ANR	8646979	Symbol	pmm -> chunk		8646916						
ANR	8646980	Function	modifier_current_encoding	2793:0:84532:84762							
ANR	8646981	FunctionDef	"modifier_current_encoding (const png_modifier * pm , color_encoding * ce)"		8646980	0					
ANR	8646982	CompoundStatement		2795:0:84614:84762	8646980	0					
ANR	8646983	IfStatement	if ( pm -> current_encoding != 0 )		8646980	0					
ANR	8646984	Condition	pm -> current_encoding != 0	2796:7:84623:84647	8646980	0	True				
ANR	8646985	EqualityExpression	pm -> current_encoding != 0		8646980	0		!=			
ANR	8646986	PtrMemberAccess	pm -> current_encoding		8646980	0					
ANR	8646987	Identifier	pm		8646980	0					
ANR	8646988	Identifier	current_encoding		8646980	1					
ANR	8646989	PrimaryExpression	0		8646980	1					
ANR	8646990	ExpressionStatement	* ce = * pm -> current_encoding	2797:6:84656:84683	8646980	1	True				
ANR	8646991	AssignmentExpression	* ce = * pm -> current_encoding		8646980	0		=			
ANR	8646992	UnaryOperationExpression	* ce		8646980	0					
ANR	8646993	UnaryOperator	*		8646980	0					
ANR	8646994	Identifier	ce		8646980	1					
ANR	8646995	UnaryOperationExpression	* pm -> current_encoding		8646980	1					
ANR	8646996	UnaryOperator	*		8646980	0					
ANR	8646997	PtrMemberAccess	pm -> current_encoding		8646980	1					
ANR	8646998	Identifier	pm		8646980	0					
ANR	8646999	Identifier	current_encoding		8646980	1					
ANR	8647000	ElseStatement	else		8646980	0					
ANR	8647001	ExpressionStatement	"memset ( ce , 0 , sizeof * ce )"	2800:6:84700:84725	8646980	0	True				
ANR	8647002	CallExpression	"memset ( ce , 0 , sizeof * ce )"		8646980	0					
ANR	8647003	Callee	memset		8646980	0					
ANR	8647004	Identifier	memset		8646980	0					
ANR	8647005	ArgumentList	ce		8646980	1					
ANR	8647006	Argument	ce		8646980	0					
ANR	8647007	Identifier	ce		8646980	0					
ANR	8647008	Argument	0		8646980	1					
ANR	8647009	PrimaryExpression	0		8646980	0					
ANR	8647010	Argument	sizeof * ce		8646980	2					
ANR	8647011	SizeofExpression	sizeof * ce		8646980	0					
ANR	8647012	Sizeof	sizeof		8646980	0					
ANR	8647013	UnaryOperationExpression	* ce		8646980	1					
ANR	8647014	UnaryOperator	*		8646980	0					
ANR	8647015	Identifier	ce		8646980	1					
ANR	8647016	ExpressionStatement	ce -> gamma = pm -> current_gamma	2802:3:84731:84760	8646980	1	True				
ANR	8647017	AssignmentExpression	ce -> gamma = pm -> current_gamma		8646980	0		=			
ANR	8647018	PtrMemberAccess	ce -> gamma		8646980	0					
ANR	8647019	Identifier	ce		8646980	0					
ANR	8647020	Identifier	gamma		8646980	1					
ANR	8647021	PtrMemberAccess	pm -> current_gamma		8646980	1					
ANR	8647022	Identifier	pm		8646980	0					
ANR	8647023	Identifier	current_gamma		8646980	1					
ANR	8647024	ReturnType	static void		8646980	1					
ANR	8647025	Identifier	modifier_current_encoding		8646980	2					
ANR	8647026	ParameterList	"const png_modifier * pm , color_encoding * ce"		8646980	3					
ANR	8647027	Parameter	const png_modifier * pm	2794:26:84570:84591	8646980	0	True				
ANR	8647028	ParameterType	const png_modifier *		8646980	0					
ANR	8647029	Identifier	pm		8646980	1					
ANR	8647030	Parameter	color_encoding * ce	2794:50:84594:84611	8646980	1	True				
ANR	8647031	ParameterType	color_encoding *		8646980	0					
ANR	8647032	Identifier	ce		8646980	1					
ANR	8647033	CFGEntryNode	ENTRY		8646980		True				
ANR	8647034	CFGExitNode	EXIT		8646980		True				
ANR	8647035	Symbol	* pm		8646980						
ANR	8647036	Symbol	pm -> current_encoding		8646980						
ANR	8647037	Symbol	ce		8646980						
ANR	8647038	Symbol	ce -> gamma		8646980						
ANR	8647039	Symbol	* pm -> current_encoding		8646980						
ANR	8647040	Symbol	pm -> current_gamma		8646980						
ANR	8647041	Symbol	* * pm		8646980						
ANR	8647042	Symbol	* ce		8646980						
ANR	8647043	Symbol	pm		8646980						
ANR	8647044	Function	safecat_current_encoding	2807:0:84809:85126							
ANR	8647045	FunctionDef	"safecat_current_encoding (char * buffer , size_t bufsize , size_t pos , const png_modifier * pm)"		8647044	0					
ANR	8647046	CompoundStatement		2810:0:84917:85126	8647044	0					
ANR	8647047	ExpressionStatement	"pos = safecat_color_encoding ( buffer , bufsize , pos , pm -> current_encoding , pm -> current_gamma )"	2811:3:84922:85019	8647044	0	True				
ANR	8647048	AssignmentExpression	"pos = safecat_color_encoding ( buffer , bufsize , pos , pm -> current_encoding , pm -> current_gamma )"		8647044	0		=			
ANR	8647049	Identifier	pos		8647044	0					
ANR	8647050	CallExpression	"safecat_color_encoding ( buffer , bufsize , pos , pm -> current_encoding , pm -> current_gamma )"		8647044	1					
ANR	8647051	Callee	safecat_color_encoding		8647044	0					
ANR	8647052	Identifier	safecat_color_encoding		8647044	0					
ANR	8647053	ArgumentList	buffer		8647044	1					
ANR	8647054	Argument	buffer		8647044	0					
ANR	8647055	Identifier	buffer		8647044	0					
ANR	8647056	Argument	bufsize		8647044	1					
ANR	8647057	Identifier	bufsize		8647044	0					
ANR	8647058	Argument	pos		8647044	2					
ANR	8647059	Identifier	pos		8647044	0					
ANR	8647060	Argument	pm -> current_encoding		8647044	3					
ANR	8647061	PtrMemberAccess	pm -> current_encoding		8647044	0					
ANR	8647062	Identifier	pm		8647044	0					
ANR	8647063	Identifier	current_encoding		8647044	1					
ANR	8647064	Argument	pm -> current_gamma		8647044	4					
ANR	8647065	PtrMemberAccess	pm -> current_gamma		8647044	0					
ANR	8647066	Identifier	pm		8647044	0					
ANR	8647067	Identifier	current_gamma		8647044	1					
ANR	8647068	IfStatement	if ( pm -> encoding_ignored )		8647044	1					
ANR	8647069	Condition	pm -> encoding_ignored	2814:7:85029:85048	8647044	0	True				
ANR	8647070	PtrMemberAccess	pm -> encoding_ignored		8647044	0					
ANR	8647071	Identifier	pm		8647044	0					
ANR	8647072	Identifier	encoding_ignored		8647044	1					
ANR	8647073	ExpressionStatement	"pos = safecat ( buffer , bufsize , pos , ""[overridden]"" )"	2815:6:85057:85108	8647044	1	True				
ANR	8647074	AssignmentExpression	"pos = safecat ( buffer , bufsize , pos , ""[overridden]"" )"		8647044	0		=			
ANR	8647075	Identifier	pos		8647044	0					
ANR	8647076	CallExpression	"safecat ( buffer , bufsize , pos , ""[overridden]"" )"		8647044	1					
ANR	8647077	Callee	safecat		8647044	0					
ANR	8647078	Identifier	safecat		8647044	0					
ANR	8647079	ArgumentList	buffer		8647044	1					
ANR	8647080	Argument	buffer		8647044	0					
ANR	8647081	Identifier	buffer		8647044	0					
ANR	8647082	Argument	bufsize		8647044	1					
ANR	8647083	Identifier	bufsize		8647044	0					
ANR	8647084	Argument	pos		8647044	2					
ANR	8647085	Identifier	pos		8647044	0					
ANR	8647086	Argument	"""[overridden]"""		8647044	3					
ANR	8647087	PrimaryExpression	"""[overridden]"""		8647044	0					
ANR	8647088	ReturnStatement	return pos ;	2817:3:85114:85124	8647044	2	True				
ANR	8647089	Identifier	pos		8647044	0					
ANR	8647090	ReturnType	static size_t		8647044	1					
ANR	8647091	Identifier	safecat_current_encoding		8647044	2					
ANR	8647092	ParameterList	"char * buffer , size_t bufsize , size_t pos , const png_modifier * pm"		8647044	3					
ANR	8647093	Parameter	char * buffer	2808:25:84848:84859	8647044	0	True				
ANR	8647094	ParameterType	char *		8647044	0					
ANR	8647095	Identifier	buffer		8647044	1					
ANR	8647096	Parameter	size_t bufsize	2808:39:84862:84875	8647044	1	True				
ANR	8647097	ParameterType	size_t		8647044	0					
ANR	8647098	Identifier	bufsize		8647044	1					
ANR	8647099	Parameter	size_t pos	2808:55:84878:84887	8647044	2	True				
ANR	8647100	ParameterType	size_t		8647044	0					
ANR	8647101	Identifier	pos		8647044	1					
ANR	8647102	Parameter	const png_modifier * pm	2809:3:84893:84914	8647044	3	True				
ANR	8647103	ParameterType	const png_modifier *		8647044	0					
ANR	8647104	Identifier	pm		8647044	1					
ANR	8647105	CFGEntryNode	ENTRY		8647044		True				
ANR	8647106	CFGExitNode	EXIT		8647044		True				
ANR	8647107	Symbol	* pm		8647044						
ANR	8647108	Symbol	pm -> current_encoding		8647044						
ANR	8647109	Symbol	pm -> current_gamma		8647044						
ANR	8647110	Symbol	safecat_color_encoding		8647044						
ANR	8647111	Symbol	pm -> encoding_ignored		8647044						
ANR	8647112	Symbol	pos		8647044						
ANR	8647113	Symbol	safecat		8647044						
ANR	8647114	Symbol	bufsize		8647044						
ANR	8647115	Symbol	buffer		8647044						
ANR	8647116	Symbol	pm		8647044						
ANR	8647117	Function	modifier_total_encodings	2838:0:85977:86745							
ANR	8647118	FunctionDef	modifier_total_encodings (const png_modifier * pm)		8647117	0					
ANR	8647119	CompoundStatement		2840:0:86046:86745	8647117	0					
ANR	8647120	ReturnStatement	return 1 + pm -> ngammas + pm -> nencodings + ( ( pm -> bit_depth == 16 || pm -> assume_16_bit_calculations ) ? pm -> nencodings : 0 ) ;	2841:3:86051:86705	8647117	0	True				
ANR	8647121	AdditiveExpression	1 + pm -> ngammas + pm -> nencodings + ( ( pm -> bit_depth == 16 || pm -> assume_16_bit_calculations ) ? pm -> nencodings : 0 )		8647117	0		+			
ANR	8647122	PrimaryExpression	1		8647117	0					
ANR	8647123	AdditiveExpression	pm -> ngammas + pm -> nencodings + ( ( pm -> bit_depth == 16 || pm -> assume_16_bit_calculations ) ? pm -> nencodings : 0 )		8647117	1		+			
ANR	8647124	PtrMemberAccess	pm -> ngammas		8647117	0					
ANR	8647125	Identifier	pm		8647117	0					
ANR	8647126	Identifier	ngammas		8647117	1					
ANR	8647127	AdditiveExpression	pm -> nencodings + ( ( pm -> bit_depth == 16 || pm -> assume_16_bit_calculations ) ? pm -> nencodings : 0 )		8647117	1		+			
ANR	8647128	PtrMemberAccess	pm -> nencodings		8647117	0					
ANR	8647129	Identifier	pm		8647117	0					
ANR	8647130	Identifier	nencodings		8647117	1					
ANR	8647131	ConditionalExpression	( pm -> bit_depth == 16 || pm -> assume_16_bit_calculations ) ? pm -> nencodings : 0		8647117	1					
ANR	8647132	Condition	pm -> bit_depth == 16 || pm -> assume_16_bit_calculations		8647117	0					
ANR	8647133	OrExpression	pm -> bit_depth == 16 || pm -> assume_16_bit_calculations		8647117	0		||			
ANR	8647134	EqualityExpression	pm -> bit_depth == 16		8647117	0		==			
ANR	8647135	PtrMemberAccess	pm -> bit_depth		8647117	0					
ANR	8647136	Identifier	pm		8647117	0					
ANR	8647137	Identifier	bit_depth		8647117	1					
ANR	8647138	PrimaryExpression	16		8647117	1					
ANR	8647139	PtrMemberAccess	pm -> assume_16_bit_calculations		8647117	1					
ANR	8647140	Identifier	pm		8647117	0					
ANR	8647141	Identifier	assume_16_bit_calculations		8647117	1					
ANR	8647142	PtrMemberAccess	pm -> nencodings		8647117	1					
ANR	8647143	Identifier	pm		8647117	0					
ANR	8647144	Identifier	nencodings		8647117	1					
ANR	8647145	PrimaryExpression	0		8647117	2					
ANR	8647146	ReturnType	static unsigned int		8647117	1					
ANR	8647147	Identifier	modifier_total_encodings		8647117	2					
ANR	8647148	ParameterList	const png_modifier * pm		8647117	3					
ANR	8647149	Parameter	const png_modifier * pm	2839:25:86022:86043	8647117	0	True				
ANR	8647150	ParameterType	const png_modifier *		8647117	0					
ANR	8647151	Identifier	pm		8647117	1					
ANR	8647152	CFGEntryNode	ENTRY		8647117		True				
ANR	8647153	CFGExitNode	EXIT		8647117		True				
ANR	8647154	Symbol	* pm		8647117						
ANR	8647155	Symbol	pm -> assume_16_bit_calculations		8647117						
ANR	8647156	Symbol	pm -> bit_depth		8647117						
ANR	8647157	Symbol	pm -> ngammas		8647117						
ANR	8647158	Symbol	pm		8647117						
ANR	8647159	Symbol	pm -> nencodings		8647117						
ANR	8647160	Function	modifier_encoding_iterate	2856:0:86748:87634							
ANR	8647161	FunctionDef	modifier_encoding_iterate (png_modifier * pm)		8647160	0					
ANR	8647162	CompoundStatement		2858:0:86804:87634	8647160	0					
ANR	8647163	IfStatement	if ( ! pm -> repeat && pm -> test_uses_encoding )		8647160	0					
ANR	8647164	Condition	! pm -> repeat && pm -> test_uses_encoding	2859:7:86813:86910	8647160	0	True				
ANR	8647165	AndExpression	! pm -> repeat && pm -> test_uses_encoding		8647160	0		&&			
ANR	8647166	UnaryOperationExpression	! pm -> repeat		8647160	0					
ANR	8647167	UnaryOperator	!		8647160	0					
ANR	8647168	PtrMemberAccess	pm -> repeat		8647160	1					
ANR	8647169	Identifier	pm		8647160	0					
ANR	8647170	Identifier	repeat		8647160	1					
ANR	8647171	PtrMemberAccess	pm -> test_uses_encoding		8647160	1					
ANR	8647172	Identifier	pm		8647160	0					
ANR	8647173	Identifier	test_uses_encoding		8647160	1					
ANR	8647174	CompoundStatement		4:3:154:154	8647160	1					
ANR	8647175	IfStatement	if ( pm -> test_exhaustive )		8647160	0					
ANR	8647176	Condition	pm -> test_exhaustive	2862:10:86971:86989	8647160	0	True				
ANR	8647177	PtrMemberAccess	pm -> test_exhaustive		8647160	0					
ANR	8647178	Identifier	pm		8647160	0					
ANR	8647179	Identifier	test_exhaustive		8647160	1					
ANR	8647180	CompoundStatement		6:6:193:193	8647160	1					
ANR	8647181	IfStatement	if ( ++ pm -> encoding_counter >= modifier_total_encodings ( pm ) )		8647160	0					
ANR	8647182	Condition	++ pm -> encoding_counter >= modifier_total_encodings ( pm )	2864:13:87013:87066	8647160	0	True				
ANR	8647183	RelationalExpression	++ pm -> encoding_counter >= modifier_total_encodings ( pm )		8647160	0		>=			
ANR	8647184	UnaryExpression	++ pm -> encoding_counter		8647160	0					
ANR	8647185	IncDec	++		8647160	0					
ANR	8647186	PtrMemberAccess	pm -> encoding_counter		8647160	1					
ANR	8647187	Identifier	pm		8647160	0					
ANR	8647188	Identifier	encoding_counter		8647160	1					
ANR	8647189	CallExpression	modifier_total_encodings ( pm )		8647160	1					
ANR	8647190	Callee	modifier_total_encodings		8647160	0					
ANR	8647191	Identifier	modifier_total_encodings		8647160	0					
ANR	8647192	ArgumentList	pm		8647160	1					
ANR	8647193	Argument	pm		8647160	0					
ANR	8647194	Identifier	pm		8647160	0					
ANR	8647195	ExpressionStatement	pm -> encoding_counter = 0	2865:12:87081:87105	8647160	1	True				
ANR	8647196	AssignmentExpression	pm -> encoding_counter = 0		8647160	0		=			
ANR	8647197	PtrMemberAccess	pm -> encoding_counter		8647160	0					
ANR	8647198	Identifier	pm		8647160	0					
ANR	8647199	Identifier	encoding_counter		8647160	1					
ANR	8647200	PrimaryExpression	0		8647160	1					
ANR	8647201	ElseStatement	else		8647160	0					
ANR	8647202	CompoundStatement		12:6:360:360	8647160	0					
ANR	8647203	IfStatement	if ( pm -> encoding_counter == 0 )		8647160	0					
ANR	8647204	Condition	pm -> encoding_counter == 0	2873:13:87341:87365	8647160	0	True				
ANR	8647205	EqualityExpression	pm -> encoding_counter == 0		8647160	0		==			
ANR	8647206	PtrMemberAccess	pm -> encoding_counter		8647160	0					
ANR	8647207	Identifier	pm		8647160	0					
ANR	8647208	Identifier	encoding_counter		8647160	1					
ANR	8647209	PrimaryExpression	0		8647160	1					
ANR	8647210	ExpressionStatement	pm -> encoding_counter = random_mod ( modifier_total_encodings ( pm ) - 1 ) + 1	2874:12:87380:87447	8647160	1	True				
ANR	8647211	AssignmentExpression	pm -> encoding_counter = random_mod ( modifier_total_encodings ( pm ) - 1 ) + 1		8647160	0		=			
ANR	8647212	PtrMemberAccess	pm -> encoding_counter		8647160	0					
ANR	8647213	Identifier	pm		8647160	0					
ANR	8647214	Identifier	encoding_counter		8647160	1					
ANR	8647215	AdditiveExpression	random_mod ( modifier_total_encodings ( pm ) - 1 ) + 1		8647160	1		+			
ANR	8647216	CallExpression	random_mod ( modifier_total_encodings ( pm ) - 1 )		8647160	0					
ANR	8647217	Callee	random_mod		8647160	0					
ANR	8647218	Identifier	random_mod		8647160	0					
ANR	8647219	ArgumentList	modifier_total_encodings ( pm ) - 1		8647160	1					
ANR	8647220	Argument	modifier_total_encodings ( pm ) - 1		8647160	0					
ANR	8647221	AdditiveExpression	modifier_total_encodings ( pm ) - 1		8647160	0		-			
ANR	8647222	CallExpression	modifier_total_encodings ( pm )		8647160	0					
ANR	8647223	Callee	modifier_total_encodings		8647160	0					
ANR	8647224	Identifier	modifier_total_encodings		8647160	0					
ANR	8647225	ArgumentList	pm		8647160	1					
ANR	8647226	Argument	pm		8647160	0					
ANR	8647227	Identifier	pm		8647160	0					
ANR	8647228	PrimaryExpression	1		8647160	1					
ANR	8647229	PrimaryExpression	1		8647160	1					
ANR	8647230	ElseStatement	else		8647160	0					
ANR	8647231	ExpressionStatement	pm -> encoding_counter = 0	2876:12:87475:87499	8647160	0	True				
ANR	8647232	AssignmentExpression	pm -> encoding_counter = 0		8647160	0		=			
ANR	8647233	PtrMemberAccess	pm -> encoding_counter		8647160	0					
ANR	8647234	Identifier	pm		8647160	0					
ANR	8647235	Identifier	encoding_counter		8647160	1					
ANR	8647236	PrimaryExpression	0		8647160	1					
ANR	8647237	IfStatement	if ( pm -> encoding_counter > 0 )		8647160	1					
ANR	8647238	Condition	pm -> encoding_counter > 0	2879:10:87520:87543	8647160	0	True				
ANR	8647239	RelationalExpression	pm -> encoding_counter > 0		8647160	0		>			
ANR	8647240	PtrMemberAccess	pm -> encoding_counter		8647160	0					
ANR	8647241	Identifier	pm		8647160	0					
ANR	8647242	Identifier	encoding_counter		8647160	1					
ANR	8647243	PrimaryExpression	0		8647160	1					
ANR	8647244	ExpressionStatement	pm -> repeat = 1	2880:9:87555:87569	8647160	1	True				
ANR	8647245	AssignmentExpression	pm -> repeat = 1		8647160	0		=			
ANR	8647246	PtrMemberAccess	pm -> repeat		8647160	0					
ANR	8647247	Identifier	pm		8647160	0					
ANR	8647248	Identifier	repeat		8647160	1					
ANR	8647249	PrimaryExpression	1		8647160	1					
ANR	8647250	ElseStatement	else		8647160	0					
ANR	8647251	IfStatement	if ( ! pm -> repeat )		8647160	0					
ANR	8647252	Condition	! pm -> repeat	2883:12:87589:87599	8647160	0	True				
ANR	8647253	UnaryOperationExpression	! pm -> repeat		8647160	0					
ANR	8647254	UnaryOperator	!		8647160	0					
ANR	8647255	PtrMemberAccess	pm -> repeat		8647160	1					
ANR	8647256	Identifier	pm		8647160	0					
ANR	8647257	Identifier	repeat		8647160	1					
ANR	8647258	ExpressionStatement	pm -> encoding_counter = 0	2884:6:87608:87632	8647160	1	True				
ANR	8647259	AssignmentExpression	pm -> encoding_counter = 0		8647160	0		=			
ANR	8647260	PtrMemberAccess	pm -> encoding_counter		8647160	0					
ANR	8647261	Identifier	pm		8647160	0					
ANR	8647262	Identifier	encoding_counter		8647160	1					
ANR	8647263	PrimaryExpression	0		8647160	1					
ANR	8647264	ReturnType	static void		8647160	1					
ANR	8647265	Identifier	modifier_encoding_iterate		8647160	2					
ANR	8647266	ParameterList	png_modifier * pm		8647160	3					
ANR	8647267	Parameter	png_modifier * pm	2857:26:86786:86801	8647160	0	True				
ANR	8647268	ParameterType	png_modifier *		8647160	0					
ANR	8647269	Identifier	pm		8647160	1					
ANR	8647270	CFGEntryNode	ENTRY		8647160		True				
ANR	8647271	CFGExitNode	EXIT		8647160		True				
ANR	8647272	Symbol	* pm		8647160						
ANR	8647273	Symbol	modifier_total_encodings		8647160						
ANR	8647274	Symbol	pm -> test_uses_encoding		8647160						
ANR	8647275	Symbol	pm -> encoding_counter		8647160						
ANR	8647276	Symbol	pm		8647160						
ANR	8647277	Symbol	pm -> repeat		8647160						
ANR	8647278	Symbol	pm -> test_exhaustive		8647160						
ANR	8647279	Symbol	random_mod		8647160						
ANR	8647280	Function	modifier_reset	2887:0:87637:88352							
ANR	8647281	FunctionDef	modifier_reset (png_modifier * pm)		8647280	0					
ANR	8647282	CompoundStatement		2889:0:87682:88352	8647280	0					
ANR	8647283	ExpressionStatement	store_read_reset ( & pm -> this )	2890:3:87687:87714	8647280	0	True				
ANR	8647284	CallExpression	store_read_reset ( & pm -> this )		8647280	0					
ANR	8647285	Callee	store_read_reset		8647280	0					
ANR	8647286	Identifier	store_read_reset		8647280	0					
ANR	8647287	ArgumentList	& pm -> this		8647280	1					
ANR	8647288	Argument	& pm -> this		8647280	0					
ANR	8647289	UnaryOperationExpression	& pm -> this		8647280	0					
ANR	8647290	UnaryOperator	&		8647280	0					
ANR	8647291	PtrMemberAccess	pm -> this		8647280	1					
ANR	8647292	Identifier	pm		8647280	0					
ANR	8647293	Identifier	this		8647280	1					
ANR	8647294	ExpressionStatement	pm -> limit = 4E-3	2891:3:87719:87735	8647280	1	True				
ANR	8647295	AssignmentExpression	pm -> limit = 4E-3		8647280	0		=			
ANR	8647296	PtrMemberAccess	pm -> limit		8647280	0					
ANR	8647297	Identifier	pm		8647280	0					
ANR	8647298	Identifier	limit		8647280	1					
ANR	8647299	PrimaryExpression	4E-3		8647280	1					
ANR	8647300	ExpressionStatement	pm -> pending_len = pm -> pending_chunk = 0	2892:3:87740:87779	8647280	2	True				
ANR	8647301	AssignmentExpression	pm -> pending_len = pm -> pending_chunk = 0		8647280	0		=			
ANR	8647302	PtrMemberAccess	pm -> pending_len		8647280	0					
ANR	8647303	Identifier	pm		8647280	0					
ANR	8647304	Identifier	pending_len		8647280	1					
ANR	8647305	AssignmentExpression	pm -> pending_chunk = 0		8647280	1		=			
ANR	8647306	PtrMemberAccess	pm -> pending_chunk		8647280	0					
ANR	8647307	Identifier	pm		8647280	0					
ANR	8647308	Identifier	pending_chunk		8647280	1					
ANR	8647309	PrimaryExpression	0		8647280	1					
ANR	8647310	ExpressionStatement	pm -> flush = pm -> buffer_count = pm -> buffer_position = 0	2893:3:87784:87838	8647280	3	True				
ANR	8647311	AssignmentExpression	pm -> flush = pm -> buffer_count = pm -> buffer_position = 0		8647280	0		=			
ANR	8647312	PtrMemberAccess	pm -> flush		8647280	0					
ANR	8647313	Identifier	pm		8647280	0					
ANR	8647314	Identifier	flush		8647280	1					
ANR	8647315	AssignmentExpression	pm -> buffer_count = pm -> buffer_position = 0		8647280	1		=			
ANR	8647316	PtrMemberAccess	pm -> buffer_count		8647280	0					
ANR	8647317	Identifier	pm		8647280	0					
ANR	8647318	Identifier	buffer_count		8647280	1					
ANR	8647319	AssignmentExpression	pm -> buffer_position = 0		8647280	1		=			
ANR	8647320	PtrMemberAccess	pm -> buffer_position		8647280	0					
ANR	8647321	Identifier	pm		8647280	0					
ANR	8647322	Identifier	buffer_position		8647280	1					
ANR	8647323	PrimaryExpression	0		8647280	1					
ANR	8647324	ExpressionStatement	pm -> modifications = NULL	2894:3:87843:87867	8647280	4	True				
ANR	8647325	AssignmentExpression	pm -> modifications = NULL		8647280	0		=			
ANR	8647326	PtrMemberAccess	pm -> modifications		8647280	0					
ANR	8647327	Identifier	pm		8647280	0					
ANR	8647328	Identifier	modifications		8647280	1					
ANR	8647329	Identifier	NULL		8647280	1					
ANR	8647330	ExpressionStatement	pm -> state = modifier_start	2895:3:87872:87898	8647280	5	True				
ANR	8647331	AssignmentExpression	pm -> state = modifier_start		8647280	0		=			
ANR	8647332	PtrMemberAccess	pm -> state		8647280	0					
ANR	8647333	Identifier	pm		8647280	0					
ANR	8647334	Identifier	state		8647280	1					
ANR	8647335	Identifier	modifier_start		8647280	1					
ANR	8647336	ExpressionStatement	modifier_encoding_iterate ( pm )	2896:3:87903:87932	8647280	6	True				
ANR	8647337	CallExpression	modifier_encoding_iterate ( pm )		8647280	0					
ANR	8647338	Callee	modifier_encoding_iterate		8647280	0					
ANR	8647339	Identifier	modifier_encoding_iterate		8647280	0					
ANR	8647340	ArgumentList	pm		8647280	1					
ANR	8647341	Argument	pm		8647280	0					
ANR	8647342	Identifier	pm		8647280	0					
ANR	8647343	ExpressionStatement	pm -> test_uses_encoding = 0	2901:3:88147:88173	8647280	7	True				
ANR	8647344	AssignmentExpression	pm -> test_uses_encoding = 0		8647280	0		=			
ANR	8647345	PtrMemberAccess	pm -> test_uses_encoding		8647280	0					
ANR	8647346	Identifier	pm		8647280	0					
ANR	8647347	Identifier	test_uses_encoding		8647280	1					
ANR	8647348	PrimaryExpression	0		8647280	1					
ANR	8647349	ExpressionStatement	pm -> current_gamma = 0	2902:3:88178:88199	8647280	8	True				
ANR	8647350	AssignmentExpression	pm -> current_gamma = 0		8647280	0		=			
ANR	8647351	PtrMemberAccess	pm -> current_gamma		8647280	0					
ANR	8647352	Identifier	pm		8647280	0					
ANR	8647353	Identifier	current_gamma		8647280	1					
ANR	8647354	PrimaryExpression	0		8647280	1					
ANR	8647355	ExpressionStatement	pm -> current_encoding = 0	2903:3:88204:88228	8647280	9	True				
ANR	8647356	AssignmentExpression	pm -> current_encoding = 0		8647280	0		=			
ANR	8647357	PtrMemberAccess	pm -> current_encoding		8647280	0					
ANR	8647358	Identifier	pm		8647280	0					
ANR	8647359	Identifier	current_encoding		8647280	1					
ANR	8647360	PrimaryExpression	0		8647280	1					
ANR	8647361	ExpressionStatement	pm -> encoding_ignored = 0	2904:3:88233:88257	8647280	10	True				
ANR	8647362	AssignmentExpression	pm -> encoding_ignored = 0		8647280	0		=			
ANR	8647363	PtrMemberAccess	pm -> encoding_ignored		8647280	0					
ANR	8647364	Identifier	pm		8647280	0					
ANR	8647365	Identifier	encoding_ignored		8647280	1					
ANR	8647366	PrimaryExpression	0		8647280	1					
ANR	8647367	ExpressionStatement	pm -> bit_depth = pm -> colour_type = 0	2906:3:88315:88350	8647280	11	True				
ANR	8647368	AssignmentExpression	pm -> bit_depth = pm -> colour_type = 0		8647280	0		=			
ANR	8647369	PtrMemberAccess	pm -> bit_depth		8647280	0					
ANR	8647370	Identifier	pm		8647280	0					
ANR	8647371	Identifier	bit_depth		8647280	1					
ANR	8647372	AssignmentExpression	pm -> colour_type = 0		8647280	1		=			
ANR	8647373	PtrMemberAccess	pm -> colour_type		8647280	0					
ANR	8647374	Identifier	pm		8647280	0					
ANR	8647375	Identifier	colour_type		8647280	1					
ANR	8647376	PrimaryExpression	0		8647280	1					
ANR	8647377	ReturnType	static void		8647280	1					
ANR	8647378	Identifier	modifier_reset		8647280	2					
ANR	8647379	ParameterList	png_modifier * pm		8647280	3					
ANR	8647380	Parameter	png_modifier * pm	2888:15:87664:87679	8647280	0	True				
ANR	8647381	ParameterType	png_modifier *		8647280	0					
ANR	8647382	Identifier	pm		8647280	1					
ANR	8647383	CFGEntryNode	ENTRY		8647280		True				
ANR	8647384	CFGExitNode	EXIT		8647280		True				
ANR	8647385	Symbol	* pm		8647280						
ANR	8647386	Symbol	pm -> bit_depth		8647280						
ANR	8647387	Symbol	pm -> colour_type		8647280						
ANR	8647388	Symbol	NULL		8647280						
ANR	8647389	Symbol	pm -> current_gamma		8647280						
ANR	8647390	Symbol	pm -> encoding_ignored		8647280						
ANR	8647391	Symbol	pm -> pending_len		8647280						
ANR	8647392	Symbol	pm -> buffer_count		8647280						
ANR	8647393	Symbol	pm -> modifications		8647280						
ANR	8647394	Symbol	pm -> pending_chunk		8647280						
ANR	8647395	Symbol	pm -> current_encoding		8647280						
ANR	8647396	Symbol	modifier_start		8647280						
ANR	8647397	Symbol	pm -> test_uses_encoding		8647280						
ANR	8647398	Symbol	& pm -> this		8647280						
ANR	8647399	Symbol	pm -> limit		8647280						
ANR	8647400	Symbol	pm -> flush		8647280						
ANR	8647401	Symbol	pm -> state		8647280						
ANR	8647402	Symbol	pm		8647280						
ANR	8647403	Symbol	pm -> buffer_position		8647280						
ANR	8647404	Function	modifier_set_encoding	2913:0:88543:89627							
ANR	8647405	FunctionDef	modifier_set_encoding (png_modifier * pm)		8647404	0					
ANR	8647406	CompoundStatement		2915:0:88595:89627	8647404	0					
ANR	8647407	ExpressionStatement	pm -> current_gamma = 0	2920:3:88777:88798	8647404	0	True				
ANR	8647408	AssignmentExpression	pm -> current_gamma = 0		8647404	0		=			
ANR	8647409	PtrMemberAccess	pm -> current_gamma		8647404	0					
ANR	8647410	Identifier	pm		8647404	0					
ANR	8647411	Identifier	current_gamma		8647404	1					
ANR	8647412	PrimaryExpression	0		8647404	1					
ANR	8647413	ExpressionStatement	pm -> current_encoding = 0	2921:3:88803:88827	8647404	1	True				
ANR	8647414	AssignmentExpression	pm -> current_encoding = 0		8647404	0		=			
ANR	8647415	PtrMemberAccess	pm -> current_encoding		8647404	0					
ANR	8647416	Identifier	pm		8647404	0					
ANR	8647417	Identifier	current_encoding		8647404	1					
ANR	8647418	PrimaryExpression	0		8647404	1					
ANR	8647419	ExpressionStatement	pm -> encoding_ignored = 0	2922:3:88832:88856	8647404	2	True				
ANR	8647420	AssignmentExpression	pm -> encoding_ignored = 0		8647404	0		=			
ANR	8647421	PtrMemberAccess	pm -> encoding_ignored		8647404	0					
ANR	8647422	Identifier	pm		8647404	0					
ANR	8647423	Identifier	encoding_ignored		8647404	1					
ANR	8647424	PrimaryExpression	0		8647404	1					
ANR	8647425	IfStatement	if ( pm -> encoding_counter > 0 )		8647404	3					
ANR	8647426	Condition	pm -> encoding_counter > 0	2925:7:88979:89002	8647404	0	True				
ANR	8647427	RelationalExpression	pm -> encoding_counter > 0		8647404	0		>			
ANR	8647428	PtrMemberAccess	pm -> encoding_counter		8647404	0					
ANR	8647429	Identifier	pm		8647404	0					
ANR	8647430	Identifier	encoding_counter		8647404	1					
ANR	8647431	PrimaryExpression	0		8647404	1					
ANR	8647432	CompoundStatement		12:3:412:412	8647404	1					
ANR	8647433	IfStatement	if ( pm -> encoding_counter <= pm -> ngammas )		8647404	0					
ANR	8647434	Condition	pm -> encoding_counter <= pm -> ngammas	2930:10:89142:89176	8647404	0	True				
ANR	8647435	RelationalExpression	pm -> encoding_counter <= pm -> ngammas		8647404	0		<=			
ANR	8647436	PtrMemberAccess	pm -> encoding_counter		8647404	0					
ANR	8647437	Identifier	pm		8647404	0					
ANR	8647438	Identifier	encoding_counter		8647404	1					
ANR	8647439	PtrMemberAccess	pm -> ngammas		8647404	1					
ANR	8647440	Identifier	pm		8647404	0					
ANR	8647441	Identifier	ngammas		8647404	1					
ANR	8647442	ExpressionStatement	pm -> current_gamma = 1 / pm -> gammas [ pm -> encoding_counter - 1 ]	2931:9:89188:89244	8647404	1	True				
ANR	8647443	AssignmentExpression	pm -> current_gamma = 1 / pm -> gammas [ pm -> encoding_counter - 1 ]		8647404	0		=			
ANR	8647444	PtrMemberAccess	pm -> current_gamma		8647404	0					
ANR	8647445	Identifier	pm		8647404	0					
ANR	8647446	Identifier	current_gamma		8647404	1					
ANR	8647447	MultiplicativeExpression	1 / pm -> gammas [ pm -> encoding_counter - 1 ]		8647404	1		/			
ANR	8647448	PrimaryExpression	1		8647404	0					
ANR	8647449	ArrayIndexing	pm -> gammas [ pm -> encoding_counter - 1 ]		8647404	1					
ANR	8647450	PtrMemberAccess	pm -> gammas		8647404	0					
ANR	8647451	Identifier	pm		8647404	0					
ANR	8647452	Identifier	gammas		8647404	1					
ANR	8647453	AdditiveExpression	pm -> encoding_counter - 1		8647404	1		-			
ANR	8647454	PtrMemberAccess	pm -> encoding_counter		8647404	0					
ANR	8647455	Identifier	pm		8647404	0					
ANR	8647456	Identifier	encoding_counter		8647404	1					
ANR	8647457	PrimaryExpression	1		8647404	1					
ANR	8647458	ElseStatement	else		8647404	0					
ANR	8647459	CompoundStatement		21:9:679:730	8647404	0					
ANR	8647460	IdentifierDeclStatement	unsigned int i = pm -> encoding_counter - pm -> ngammas ;	2935:9:89275:89326	8647404	0	True				
ANR	8647461	IdentifierDecl	i = pm -> encoding_counter - pm -> ngammas		8647404	0					
ANR	8647462	IdentifierDeclType	unsigned int		8647404	0					
ANR	8647463	Identifier	i		8647404	1					
ANR	8647464	AssignmentExpression	i = pm -> encoding_counter - pm -> ngammas		8647404	2		=			
ANR	8647465	Identifier	i		8647404	0					
ANR	8647466	AdditiveExpression	pm -> encoding_counter - pm -> ngammas		8647404	1		-			
ANR	8647467	PtrMemberAccess	pm -> encoding_counter		8647404	0					
ANR	8647468	Identifier	pm		8647404	0					
ANR	8647469	Identifier	encoding_counter		8647404	1					
ANR	8647470	PtrMemberAccess	pm -> ngammas		8647404	1					
ANR	8647471	Identifier	pm		8647404	0					
ANR	8647472	Identifier	ngammas		8647404	1					
ANR	8647473	IfStatement	if ( i >= pm -> nencodings )		8647404	1					
ANR	8647474	Condition	i >= pm -> nencodings	2937:13:89342:89360	8647404	0	True				
ANR	8647475	RelationalExpression	i >= pm -> nencodings		8647404	0		>=			
ANR	8647476	Identifier	i		8647404	0					
ANR	8647477	PtrMemberAccess	pm -> nencodings		8647404	1					
ANR	8647478	Identifier	pm		8647404	0					
ANR	8647479	Identifier	nencodings		8647404	1					
ANR	8647480	CompoundStatement		24:9:776:776	8647404	1					
ANR	8647481	ExpressionStatement	i %= pm -> nencodings	2939:12:89386:89405	8647404	0	True				
ANR	8647482	AssignmentExpression	i %= pm -> nencodings		8647404	0		%=			
ANR	8647483	Identifier	i		8647404	0					
ANR	8647484	PtrMemberAccess	pm -> nencodings		8647404	1					
ANR	8647485	Identifier	pm		8647404	0					
ANR	8647486	Identifier	nencodings		8647404	1					
ANR	8647487	ExpressionStatement	pm -> current_gamma = 1	2940:12:89419:89440	8647404	1	True				
ANR	8647488	AssignmentExpression	pm -> current_gamma = 1		8647404	0		=			
ANR	8647489	PtrMemberAccess	pm -> current_gamma		8647404	0					
ANR	8647490	Identifier	pm		8647404	0					
ANR	8647491	Identifier	current_gamma		8647404	1					
ANR	8647492	PrimaryExpression	1		8647404	1					
ANR	8647493	ElseStatement	else		8647404	0					
ANR	8647494	ExpressionStatement	pm -> current_gamma = pm -> encodings [ i ] . gamma	2944:12:89518:89560	8647404	0	True				
ANR	8647495	AssignmentExpression	pm -> current_gamma = pm -> encodings [ i ] . gamma		8647404	0		=			
ANR	8647496	PtrMemberAccess	pm -> current_gamma		8647404	0					
ANR	8647497	Identifier	pm		8647404	0					
ANR	8647498	Identifier	current_gamma		8647404	1					
ANR	8647499	MemberAccess	pm -> encodings [ i ] . gamma		8647404	1					
ANR	8647500	ArrayIndexing	pm -> encodings [ i ]		8647404	0					
ANR	8647501	PtrMemberAccess	pm -> encodings		8647404	0					
ANR	8647502	Identifier	pm		8647404	0					
ANR	8647503	Identifier	encodings		8647404	1					
ANR	8647504	Identifier	i		8647404	1					
ANR	8647505	Identifier	gamma		8647404	1					
ANR	8647506	ExpressionStatement	pm -> current_encoding = pm -> encodings + i	2946:9:89572:89612	8647404	2	True				
ANR	8647507	AssignmentExpression	pm -> current_encoding = pm -> encodings + i		8647404	0		=			
ANR	8647508	PtrMemberAccess	pm -> current_encoding		8647404	0					
ANR	8647509	Identifier	pm		8647404	0					
ANR	8647510	Identifier	current_encoding		8647404	1					
ANR	8647511	AdditiveExpression	pm -> encodings + i		8647404	1		+			
ANR	8647512	PtrMemberAccess	pm -> encodings		8647404	0					
ANR	8647513	Identifier	pm		8647404	0					
ANR	8647514	Identifier	encodings		8647404	1					
ANR	8647515	Identifier	i		8647404	1					
ANR	8647516	ReturnType	static void		8647404	1					
ANR	8647517	Identifier	modifier_set_encoding		8647404	2					
ANR	8647518	ParameterList	png_modifier * pm		8647404	3					
ANR	8647519	Parameter	png_modifier * pm	2914:22:88577:88592	8647404	0	True				
ANR	8647520	ParameterType	png_modifier *		8647404	0					
ANR	8647521	Identifier	pm		8647404	1					
ANR	8647522	CFGEntryNode	ENTRY		8647404		True				
ANR	8647523	CFGExitNode	EXIT		8647404		True				
ANR	8647524	Symbol	* pm		8647404						
ANR	8647525	Symbol	* pm -> gammas		8647404						
ANR	8647526	Symbol	pm -> current_gamma		8647404						
ANR	8647527	Symbol	pm -> encoding_ignored		8647404						
ANR	8647528	Symbol	* pm -> encodings		8647404						
ANR	8647529	Symbol	pm -> encoding_counter		8647404						
ANR	8647530	Symbol	pm -> ngammas		8647404						
ANR	8647531	Symbol	i		8647404						
ANR	8647532	Symbol	* * pm		8647404						
ANR	8647533	Symbol	pm -> nencodings		8647404						
ANR	8647534	Symbol	pm -> current_encoding		8647404						
ANR	8647535	Symbol	pm -> gammas		8647404						
ANR	8647536	Symbol	* i		8647404						
ANR	8647537	Symbol	pm -> encodings		8647404						
ANR	8647538	Symbol	pm -> encodings [ i ] . gamma		8647404						
ANR	8647539	Symbol	* pm -> encoding_counter		8647404						
ANR	8647540	Symbol	pm		8647404						
ANR	8647541	Function	modifier_color_encoding_is_sRGB	2954:0:89791:89996							
ANR	8647542	FunctionDef	modifier_color_encoding_is_sRGB (const png_modifier * pm)		8647541	0					
ANR	8647543	CompoundStatement		2956:0:89858:89996	8647541	0					
ANR	8647544	ReturnStatement	return pm -> current_encoding != 0 && pm -> current_encoding == pm -> encodings && pm -> current_encoding -> gamma == pm -> current_gamma ;	2957:3:89863:89994	8647541	0	True				
ANR	8647545	AndExpression	pm -> current_encoding != 0 && pm -> current_encoding == pm -> encodings && pm -> current_encoding -> gamma == pm -> current_gamma		8647541	0		&&			
ANR	8647546	EqualityExpression	pm -> current_encoding != 0		8647541	0		!=			
ANR	8647547	PtrMemberAccess	pm -> current_encoding		8647541	0					
ANR	8647548	Identifier	pm		8647541	0					
ANR	8647549	Identifier	current_encoding		8647541	1					
ANR	8647550	PrimaryExpression	0		8647541	1					
ANR	8647551	AndExpression	pm -> current_encoding == pm -> encodings && pm -> current_encoding -> gamma == pm -> current_gamma		8647541	1		&&			
ANR	8647552	EqualityExpression	pm -> current_encoding == pm -> encodings		8647541	0		==			
ANR	8647553	PtrMemberAccess	pm -> current_encoding		8647541	0					
ANR	8647554	Identifier	pm		8647541	0					
ANR	8647555	Identifier	current_encoding		8647541	1					
ANR	8647556	PtrMemberAccess	pm -> encodings		8647541	1					
ANR	8647557	Identifier	pm		8647541	0					
ANR	8647558	Identifier	encodings		8647541	1					
ANR	8647559	EqualityExpression	pm -> current_encoding -> gamma == pm -> current_gamma		8647541	1		==			
ANR	8647560	PtrMemberAccess	pm -> current_encoding -> gamma		8647541	0					
ANR	8647561	PtrMemberAccess	pm -> current_encoding		8647541	0					
ANR	8647562	Identifier	pm		8647541	0					
ANR	8647563	Identifier	current_encoding		8647541	1					
ANR	8647564	Identifier	gamma		8647541	1					
ANR	8647565	PtrMemberAccess	pm -> current_gamma		8647541	1					
ANR	8647566	Identifier	pm		8647541	0					
ANR	8647567	Identifier	current_gamma		8647541	1					
ANR	8647568	ReturnType	static int		8647541	1					
ANR	8647569	Identifier	modifier_color_encoding_is_sRGB		8647541	2					
ANR	8647570	ParameterList	const png_modifier * pm		8647541	3					
ANR	8647571	Parameter	const png_modifier * pm	2955:32:89834:89855	8647541	0	True				
ANR	8647572	ParameterType	const png_modifier *		8647541	0					
ANR	8647573	Identifier	pm		8647541	1					
ANR	8647574	CFGEntryNode	ENTRY		8647541		True				
ANR	8647575	CFGExitNode	EXIT		8647541		True				
ANR	8647576	Symbol	* pm		8647541						
ANR	8647577	Symbol	pm -> current_encoding		8647541						
ANR	8647578	Symbol	pm -> current_encoding -> gamma		8647541						
ANR	8647579	Symbol	pm -> current_gamma		8647541						
ANR	8647580	Symbol	* pm -> current_encoding		8647541						
ANR	8647581	Symbol	pm -> encodings		8647541						
ANR	8647582	Symbol	* * pm		8647541						
ANR	8647583	Symbol	pm		8647541						
ANR	8647584	Function	modifier_color_encoding_is_set	2961:0:89999:90101							
ANR	8647585	FunctionDef	modifier_color_encoding_is_set (const png_modifier * pm)		8647584	0					
ANR	8647586	CompoundStatement		2963:0:90065:90101	8647584	0					
ANR	8647587	ReturnStatement	return pm -> current_gamma != 0 ;	2964:3:90070:90099	8647584	0	True				
ANR	8647588	EqualityExpression	pm -> current_gamma != 0		8647584	0		!=			
ANR	8647589	PtrMemberAccess	pm -> current_gamma		8647584	0					
ANR	8647590	Identifier	pm		8647584	0					
ANR	8647591	Identifier	current_gamma		8647584	1					
ANR	8647592	PrimaryExpression	0		8647584	1					
ANR	8647593	ReturnType	static int		8647584	1					
ANR	8647594	Identifier	modifier_color_encoding_is_set		8647584	2					
ANR	8647595	ParameterList	const png_modifier * pm		8647584	3					
ANR	8647596	Parameter	const png_modifier * pm	2962:31:90041:90062	8647584	0	True				
ANR	8647597	ParameterType	const png_modifier *		8647584	0					
ANR	8647598	Identifier	pm		8647584	1					
ANR	8647599	CFGEntryNode	ENTRY		8647584		True				
ANR	8647600	CFGExitNode	EXIT		8647584		True				
ANR	8647601	Symbol	* pm		8647584						
ANR	8647602	Symbol	pm -> current_gamma		8647584						
ANR	8647603	Symbol	pm		8647584						
ANR	8647604	Function	modifier_crc	2968:0:90164:90543							
ANR	8647605	FunctionDef	modifier_crc (png_bytep buffer)		8647604	0					
ANR	8647606	CompoundStatement		2970:0:90207:90543	8647604	0					
ANR	8647607	IdentifierDeclStatement	uInt datalen = png_get_uint_32 ( buffer ) ;	2974:3:90313:90351	8647604	0	True				
ANR	8647608	IdentifierDecl	datalen = png_get_uint_32 ( buffer )		8647604	0					
ANR	8647609	IdentifierDeclType	uInt		8647604	0					
ANR	8647610	Identifier	datalen		8647604	1					
ANR	8647611	AssignmentExpression	datalen = png_get_uint_32 ( buffer )		8647604	2		=			
ANR	8647612	Identifier	datalen		8647604	0					
ANR	8647613	CallExpression	png_get_uint_32 ( buffer )		8647604	1					
ANR	8647614	Callee	png_get_uint_32		8647604	0					
ANR	8647615	Identifier	png_get_uint_32		8647604	0					
ANR	8647616	ArgumentList	buffer		8647604	1					
ANR	8647617	Argument	buffer		8647604	0					
ANR	8647618	Identifier	buffer		8647604	0					
ANR	8647619	IdentifierDeclStatement	"uLong crc = crc32 ( 0 , buffer + 4 , datalen + 4 ) ;"	2975:3:90356:90397	8647604	1	True				
ANR	8647620	IdentifierDecl	"crc = crc32 ( 0 , buffer + 4 , datalen + 4 )"		8647604	0					
ANR	8647621	IdentifierDeclType	uLong		8647604	0					
ANR	8647622	Identifier	crc		8647604	1					
ANR	8647623	AssignmentExpression	"crc = crc32 ( 0 , buffer + 4 , datalen + 4 )"		8647604	2		=			
ANR	8647624	Identifier	crc		8647604	0					
ANR	8647625	CallExpression	"crc32 ( 0 , buffer + 4 , datalen + 4 )"		8647604	1					
ANR	8647626	Callee	crc32		8647604	0					
ANR	8647627	Identifier	crc32		8647604	0					
ANR	8647628	ArgumentList	0		8647604	1					
ANR	8647629	Argument	0		8647604	0					
ANR	8647630	PrimaryExpression	0		8647604	0					
ANR	8647631	Argument	buffer + 4		8647604	1					
ANR	8647632	AdditiveExpression	buffer + 4		8647604	0		+			
ANR	8647633	Identifier	buffer		8647604	0					
ANR	8647634	PrimaryExpression	4		8647604	1					
ANR	8647635	Argument	datalen + 4		8647604	2					
ANR	8647636	AdditiveExpression	datalen + 4		8647604	0		+			
ANR	8647637	Identifier	datalen		8647604	0					
ANR	8647638	PrimaryExpression	4		8647604	1					
ANR	8647639	ExpressionStatement	"png_save_uint_32 ( buffer + datalen + 8 , ( png_uint_32 ) crc )"	2978:3:90489:90541	8647604	2	True				
ANR	8647640	CallExpression	"png_save_uint_32 ( buffer + datalen + 8 , ( png_uint_32 ) crc )"		8647604	0					
ANR	8647641	Callee	png_save_uint_32		8647604	0					
ANR	8647642	Identifier	png_save_uint_32		8647604	0					
ANR	8647643	ArgumentList	buffer + datalen + 8		8647604	1					
ANR	8647644	Argument	buffer + datalen + 8		8647604	0					
ANR	8647645	AdditiveExpression	buffer + datalen + 8		8647604	0		+			
ANR	8647646	Identifier	buffer		8647604	0					
ANR	8647647	AdditiveExpression	datalen + 8		8647604	1		+			
ANR	8647648	Identifier	datalen		8647604	0					
ANR	8647649	PrimaryExpression	8		8647604	1					
ANR	8647650	Argument	( png_uint_32 ) crc		8647604	1					
ANR	8647651	CastExpression	( png_uint_32 ) crc		8647604	0					
ANR	8647652	CastTarget	png_uint_32		8647604	0					
ANR	8647653	Identifier	crc		8647604	1					
ANR	8647654	ReturnType	static void		8647604	1					
ANR	8647655	Identifier	modifier_crc		8647604	2					
ANR	8647656	ParameterList	png_bytep buffer		8647604	3					
ANR	8647657	Parameter	png_bytep buffer	2969:13:90189:90204	8647604	0	True				
ANR	8647658	ParameterType	png_bytep		8647604	0					
ANR	8647659	Identifier	buffer		8647604	1					
ANR	8647660	CFGEntryNode	ENTRY		8647604		True				
ANR	8647661	CFGExitNode	EXIT		8647604		True				
ANR	8647662	Symbol	crc		8647604						
ANR	8647663	Symbol	buffer		8647604						
ANR	8647664	Symbol	crc32		8647604						
ANR	8647665	Symbol	png_get_uint_32		8647604						
ANR	8647666	Symbol	datalen		8647604						
ANR	8647667	Function	modifier_setbuffer	2981:0:90546:90708							
ANR	8647668	FunctionDef	modifier_setbuffer (png_modifier * pm)		8647667	0					
ANR	8647669	CompoundStatement		2983:0:90595:90708	8647667	0					
ANR	8647670	ExpressionStatement	modifier_crc ( pm -> buffer )	2984:3:90600:90624	8647667	0	True				
ANR	8647671	CallExpression	modifier_crc ( pm -> buffer )		8647667	0					
ANR	8647672	Callee	modifier_crc		8647667	0					
ANR	8647673	Identifier	modifier_crc		8647667	0					
ANR	8647674	ArgumentList	pm -> buffer		8647667	1					
ANR	8647675	Argument	pm -> buffer		8647667	0					
ANR	8647676	PtrMemberAccess	pm -> buffer		8647667	0					
ANR	8647677	Identifier	pm		8647667	0					
ANR	8647678	Identifier	buffer		8647667	1					
ANR	8647679	ExpressionStatement	pm -> buffer_count = png_get_uint_32 ( pm -> buffer ) + 12	2985:3:90629:90678	8647667	1	True				
ANR	8647680	AssignmentExpression	pm -> buffer_count = png_get_uint_32 ( pm -> buffer ) + 12		8647667	0		=			
ANR	8647681	PtrMemberAccess	pm -> buffer_count		8647667	0					
ANR	8647682	Identifier	pm		8647667	0					
ANR	8647683	Identifier	buffer_count		8647667	1					
ANR	8647684	AdditiveExpression	png_get_uint_32 ( pm -> buffer ) + 12		8647667	1		+			
ANR	8647685	CallExpression	png_get_uint_32 ( pm -> buffer )		8647667	0					
ANR	8647686	Callee	png_get_uint_32		8647667	0					
ANR	8647687	Identifier	png_get_uint_32		8647667	0					
ANR	8647688	ArgumentList	pm -> buffer		8647667	1					
ANR	8647689	Argument	pm -> buffer		8647667	0					
ANR	8647690	PtrMemberAccess	pm -> buffer		8647667	0					
ANR	8647691	Identifier	pm		8647667	0					
ANR	8647692	Identifier	buffer		8647667	1					
ANR	8647693	PrimaryExpression	12		8647667	1					
ANR	8647694	ExpressionStatement	pm -> buffer_position = 0	2986:3:90683:90706	8647667	2	True				
ANR	8647695	AssignmentExpression	pm -> buffer_position = 0		8647667	0		=			
ANR	8647696	PtrMemberAccess	pm -> buffer_position		8647667	0					
ANR	8647697	Identifier	pm		8647667	0					
ANR	8647698	Identifier	buffer_position		8647667	1					
ANR	8647699	PrimaryExpression	0		8647667	1					
ANR	8647700	ReturnType	static void		8647667	1					
ANR	8647701	Identifier	modifier_setbuffer		8647667	2					
ANR	8647702	ParameterList	png_modifier * pm		8647667	3					
ANR	8647703	Parameter	png_modifier * pm	2982:19:90577:90592	8647667	0	True				
ANR	8647704	ParameterType	png_modifier *		8647667	0					
ANR	8647705	Identifier	pm		8647667	1					
ANR	8647706	CFGEntryNode	ENTRY		8647667		True				
ANR	8647707	CFGExitNode	EXIT		8647667		True				
ANR	8647708	Symbol	* pm		8647667						
ANR	8647709	Symbol	pm -> buffer		8647667						
ANR	8647710	Symbol	pm -> buffer_count		8647667						
ANR	8647711	Symbol	pm		8647667						
ANR	8647712	Symbol	png_get_uint_32		8647667						
ANR	8647713	Symbol	pm -> buffer_position		8647667						
ANR	8647714	Function	modifier_read_imp	2993:0:90886:97833							
ANR	8647715	FunctionDef	"modifier_read_imp (png_modifier * pm , png_bytep pb , png_size_t st)"		8647714	0					
ANR	8647716	CompoundStatement		2995:0:90963:97833	8647714	0					
ANR	8647717	WhileStatement	while ( st > 0 )		8647714	0					
ANR	8647718	Condition	st > 0	2996:10:90975:90980	8647714	0	True				
ANR	8647719	RelationalExpression	st > 0		8647714	0		>			
ANR	8647720	Identifier	st		8647714	0					
ANR	8647721	PrimaryExpression	0		8647714	1					
ANR	8647722	CompoundStatement		6:6:77:98	8647714	1					
ANR	8647723	IdentifierDeclStatement	size_t cb ;	2998:6:90994:91003	8647714	0	True				
ANR	8647724	IdentifierDecl	cb		8647714	0					
ANR	8647725	IdentifierDeclType	size_t		8647714	0					
ANR	8647726	Identifier	cb		8647714	1					
ANR	8647727	IdentifierDeclStatement	"png_uint_32 len , chunk ;"	2999:6:91011:91033	8647714	1	True				
ANR	8647728	IdentifierDecl	len		8647714	0					
ANR	8647729	IdentifierDeclType	png_uint_32		8647714	0					
ANR	8647730	Identifier	len		8647714	1					
ANR	8647731	IdentifierDecl	chunk		8647714	1					
ANR	8647732	IdentifierDeclType	png_uint_32		8647714	0					
ANR	8647733	Identifier	chunk		8647714	1					
ANR	8647734	IdentifierDeclStatement	png_modification * mod ;	3000:6:91041:91062	8647714	2	True				
ANR	8647735	IdentifierDecl	* mod		8647714	0					
ANR	8647736	IdentifierDeclType	png_modification *		8647714	0					
ANR	8647737	Identifier	mod		8647714	1					
ANR	8647738	IfStatement	if ( pm -> buffer_position >= pm -> buffer_count )		8647714	3					
ANR	8647739	Condition	pm -> buffer_position >= pm -> buffer_count	3002:10:91075:91113	8647714	0	True				
ANR	8647740	RelationalExpression	pm -> buffer_position >= pm -> buffer_count		8647714	0		>=			
ANR	8647741	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8647742	Identifier	pm		8647714	0					
ANR	8647743	Identifier	buffer_position		8647714	1					
ANR	8647744	PtrMemberAccess	pm -> buffer_count		8647714	1					
ANR	8647745	Identifier	pm		8647714	0					
ANR	8647746	Identifier	buffer_count		8647714	1					
ANR	8647747	SwitchStatement	switch ( pm -> state )		8647714	1					
ANR	8647748	Condition	pm -> state	3002:59:91124:91132	8647714	0	True				
ANR	8647749	PtrMemberAccess	pm -> state		8647714	0					
ANR	8647750	Identifier	pm		8647714	0					
ANR	8647751	Identifier	state		8647714	1					
ANR	8647752	CompoundStatement		10:16:195:249	8647714	1					
ANR	8647753	Statement	static	3004:9:91152:91157	8647714	0	True				
ANR	8647754	IdentifierDeclStatement	"png_byte sign [ 8 ] = { 137 , 80 , 78 , 71 , 13 , 10 , 26 , 10 } ;"	3004:16:91159:91213	8647714	1	True				
ANR	8647755	IdentifierDecl	"sign [ 8 ] = { 137 , 80 , 78 , 71 , 13 , 10 , 26 , 10 }"		8647714	0					
ANR	8647756	IdentifierDeclType	png_byte [ 8 ]		8647714	0					
ANR	8647757	Identifier	sign		8647714	1					
ANR	8647758	PrimaryExpression	8		8647714	2					
ANR	8647759	AssignmentExpression	"sign [ 8 ] = { 137 , 80 , 78 , 71 , 13 , 10 , 26 , 10 }"		8647714	3		=			
ANR	8647760	Identifier	sign		8647714	0					
ANR	8647761	InitializerList	137		8647714	1					
ANR	8647762	PrimaryExpression	137		8647714	0					
ANR	8647763	PrimaryExpression	80		8647714	1					
ANR	8647764	PrimaryExpression	78		8647714	2					
ANR	8647765	PrimaryExpression	71		8647714	3					
ANR	8647766	PrimaryExpression	13		8647714	4					
ANR	8647767	PrimaryExpression	10		8647714	5					
ANR	8647768	PrimaryExpression	26		8647714	6					
ANR	8647769	PrimaryExpression	10		8647714	7					
ANR	8647770	Label	case modifier_start :	3005:9:91224:91243	8647714	2	True				
ANR	8647771	Identifier	modifier_start		8647714	0					
ANR	8647772	ExpressionStatement	"store_read_chunk ( & pm -> this , pm -> buffer , 8 , 8 )"	3006:12:91257:91302	8647714	3	True				
ANR	8647773	CallExpression	"store_read_chunk ( & pm -> this , pm -> buffer , 8 , 8 )"		8647714	0					
ANR	8647774	Callee	store_read_chunk		8647714	0					
ANR	8647775	Identifier	store_read_chunk		8647714	0					
ANR	8647776	ArgumentList	& pm -> this		8647714	1					
ANR	8647777	Argument	& pm -> this		8647714	0					
ANR	8647778	UnaryOperationExpression	& pm -> this		8647714	0					
ANR	8647779	UnaryOperator	&		8647714	0					
ANR	8647780	PtrMemberAccess	pm -> this		8647714	1					
ANR	8647781	Identifier	pm		8647714	0					
ANR	8647782	Identifier	this		8647714	1					
ANR	8647783	Argument	pm -> buffer		8647714	1					
ANR	8647784	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647785	Identifier	pm		8647714	0					
ANR	8647786	Identifier	buffer		8647714	1					
ANR	8647787	Argument	8		8647714	2					
ANR	8647788	PrimaryExpression	8		8647714	0					
ANR	8647789	Argument	8		8647714	3					
ANR	8647790	PrimaryExpression	8		8647714	0					
ANR	8647791	ExpressionStatement	pm -> buffer_count = 8	3007:12:91333:91353	8647714	4	True				
ANR	8647792	AssignmentExpression	pm -> buffer_count = 8		8647714	0		=			
ANR	8647793	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8647794	Identifier	pm		8647714	0					
ANR	8647795	Identifier	buffer_count		8647714	1					
ANR	8647796	PrimaryExpression	8		8647714	1					
ANR	8647797	ExpressionStatement	pm -> buffer_position = 0	3008:12:91367:91390	8647714	5	True				
ANR	8647798	AssignmentExpression	pm -> buffer_position = 0		8647714	0		=			
ANR	8647799	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8647800	Identifier	pm		8647714	0					
ANR	8647801	Identifier	buffer_position		8647714	1					
ANR	8647802	PrimaryExpression	0		8647714	1					
ANR	8647803	IfStatement	"if ( memcmp ( pm -> buffer , sign , 8 ) != 0 )"		8647714	6					
ANR	8647804	Condition	"memcmp ( pm -> buffer , sign , 8 ) != 0"	3010:16:91409:91440	8647714	0	True				
ANR	8647805	EqualityExpression	"memcmp ( pm -> buffer , sign , 8 ) != 0"		8647714	0		!=			
ANR	8647806	CallExpression	"memcmp ( pm -> buffer , sign , 8 )"		8647714	0					
ANR	8647807	Callee	memcmp		8647714	0					
ANR	8647808	Identifier	memcmp		8647714	0					
ANR	8647809	ArgumentList	pm -> buffer		8647714	1					
ANR	8647810	Argument	pm -> buffer		8647714	0					
ANR	8647811	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647812	Identifier	pm		8647714	0					
ANR	8647813	Identifier	buffer		8647714	1					
ANR	8647814	Argument	sign		8647714	1					
ANR	8647815	Identifier	sign		8647714	0					
ANR	8647816	Argument	8		8647714	2					
ANR	8647817	PrimaryExpression	8		8647714	0					
ANR	8647818	PrimaryExpression	0		8647714	1					
ANR	8647819	ExpressionStatement	"png_error ( pm -> this . pread , ""invalid PNG file signature"" )"	3011:15:91458:91513	8647714	1	True				
ANR	8647820	CallExpression	"png_error ( pm -> this . pread , ""invalid PNG file signature"" )"		8647714	0					
ANR	8647821	Callee	png_error		8647714	0					
ANR	8647822	Identifier	png_error		8647714	0					
ANR	8647823	ArgumentList	pm -> this . pread		8647714	1					
ANR	8647824	Argument	pm -> this . pread		8647714	0					
ANR	8647825	MemberAccess	pm -> this . pread		8647714	0					
ANR	8647826	PtrMemberAccess	pm -> this		8647714	0					
ANR	8647827	Identifier	pm		8647714	0					
ANR	8647828	Identifier	this		8647714	1					
ANR	8647829	Identifier	pread		8647714	1					
ANR	8647830	Argument	"""invalid PNG file signature"""		8647714	1					
ANR	8647831	PrimaryExpression	"""invalid PNG file signature"""		8647714	0					
ANR	8647832	ExpressionStatement	pm -> state = modifier_signature	3012:12:91527:91557	8647714	7	True				
ANR	8647833	AssignmentExpression	pm -> state = modifier_signature		8647714	0		=			
ANR	8647834	PtrMemberAccess	pm -> state		8647714	0					
ANR	8647835	Identifier	pm		8647714	0					
ANR	8647836	Identifier	state		8647714	1					
ANR	8647837	Identifier	modifier_signature		8647714	1					
ANR	8647838	BreakStatement	break ;	3013:12:91571:91576	8647714	8	True				
ANR	8647839	Label	case modifier_signature :	3015:9:91588:91611	8647714	9	True				
ANR	8647840	Identifier	modifier_signature		8647714	0					
ANR	8647841	ExpressionStatement	"store_read_chunk ( & pm -> this , pm -> buffer , 13 + 12 , 13 + 12 )"	3016:12:91625:91678	8647714	10	True				
ANR	8647842	CallExpression	"store_read_chunk ( & pm -> this , pm -> buffer , 13 + 12 , 13 + 12 )"		8647714	0					
ANR	8647843	Callee	store_read_chunk		8647714	0					
ANR	8647844	Identifier	store_read_chunk		8647714	0					
ANR	8647845	ArgumentList	& pm -> this		8647714	1					
ANR	8647846	Argument	& pm -> this		8647714	0					
ANR	8647847	UnaryOperationExpression	& pm -> this		8647714	0					
ANR	8647848	UnaryOperator	&		8647714	0					
ANR	8647849	PtrMemberAccess	pm -> this		8647714	1					
ANR	8647850	Identifier	pm		8647714	0					
ANR	8647851	Identifier	this		8647714	1					
ANR	8647852	Argument	pm -> buffer		8647714	1					
ANR	8647853	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647854	Identifier	pm		8647714	0					
ANR	8647855	Identifier	buffer		8647714	1					
ANR	8647856	Argument	13 + 12		8647714	2					
ANR	8647857	AdditiveExpression	13 + 12		8647714	0		+			
ANR	8647858	PrimaryExpression	13		8647714	0					
ANR	8647859	PrimaryExpression	12		8647714	1					
ANR	8647860	Argument	13 + 12		8647714	3					
ANR	8647861	AdditiveExpression	13 + 12		8647714	0		+			
ANR	8647862	PrimaryExpression	13		8647714	0					
ANR	8647863	PrimaryExpression	12		8647714	1					
ANR	8647864	ExpressionStatement	pm -> buffer_count = 13 + 12	3017:12:91703:91727	8647714	11	True				
ANR	8647865	AssignmentExpression	pm -> buffer_count = 13 + 12		8647714	0		=			
ANR	8647866	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8647867	Identifier	pm		8647714	0					
ANR	8647868	Identifier	buffer_count		8647714	1					
ANR	8647869	AdditiveExpression	13 + 12		8647714	1		+			
ANR	8647870	PrimaryExpression	13		8647714	0					
ANR	8647871	PrimaryExpression	12		8647714	1					
ANR	8647872	ExpressionStatement	pm -> buffer_position = 0	3018:12:91741:91764	8647714	12	True				
ANR	8647873	AssignmentExpression	pm -> buffer_position = 0		8647714	0		=			
ANR	8647874	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8647875	Identifier	pm		8647714	0					
ANR	8647876	Identifier	buffer_position		8647714	1					
ANR	8647877	PrimaryExpression	0		8647714	1					
ANR	8647878	IfStatement	if ( png_get_uint_32 ( pm -> buffer ) != 13 || png_get_uint_32 ( pm -> buffer + 4 ) != CHUNK_IHDR )		8647714	13					
ANR	8647879	Condition	png_get_uint_32 ( pm -> buffer ) != 13 || png_get_uint_32 ( pm -> buffer + 4 ) != CHUNK_IHDR	3020:16:91783:91878	8647714	0	True				
ANR	8647880	OrExpression	png_get_uint_32 ( pm -> buffer ) != 13 || png_get_uint_32 ( pm -> buffer + 4 ) != CHUNK_IHDR		8647714	0		||			
ANR	8647881	EqualityExpression	png_get_uint_32 ( pm -> buffer ) != 13		8647714	0		!=			
ANR	8647882	CallExpression	png_get_uint_32 ( pm -> buffer )		8647714	0					
ANR	8647883	Callee	png_get_uint_32		8647714	0					
ANR	8647884	Identifier	png_get_uint_32		8647714	0					
ANR	8647885	ArgumentList	pm -> buffer		8647714	1					
ANR	8647886	Argument	pm -> buffer		8647714	0					
ANR	8647887	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647888	Identifier	pm		8647714	0					
ANR	8647889	Identifier	buffer		8647714	1					
ANR	8647890	PrimaryExpression	13		8647714	1					
ANR	8647891	EqualityExpression	png_get_uint_32 ( pm -> buffer + 4 ) != CHUNK_IHDR		8647714	1		!=			
ANR	8647892	CallExpression	png_get_uint_32 ( pm -> buffer + 4 )		8647714	0					
ANR	8647893	Callee	png_get_uint_32		8647714	0					
ANR	8647894	Identifier	png_get_uint_32		8647714	0					
ANR	8647895	ArgumentList	pm -> buffer + 4		8647714	1					
ANR	8647896	Argument	pm -> buffer + 4		8647714	0					
ANR	8647897	AdditiveExpression	pm -> buffer + 4		8647714	0		+			
ANR	8647898	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647899	Identifier	pm		8647714	0					
ANR	8647900	Identifier	buffer		8647714	1					
ANR	8647901	PrimaryExpression	4		8647714	1					
ANR	8647902	Identifier	CHUNK_IHDR		8647714	1					
ANR	8647903	ExpressionStatement	"png_error ( pm -> this . pread , ""invalid IHDR"" )"	3022:15:91896:91937	8647714	1	True				
ANR	8647904	CallExpression	"png_error ( pm -> this . pread , ""invalid IHDR"" )"		8647714	0					
ANR	8647905	Callee	png_error		8647714	0					
ANR	8647906	Identifier	png_error		8647714	0					
ANR	8647907	ArgumentList	pm -> this . pread		8647714	1					
ANR	8647908	Argument	pm -> this . pread		8647714	0					
ANR	8647909	MemberAccess	pm -> this . pread		8647714	0					
ANR	8647910	PtrMemberAccess	pm -> this		8647714	0					
ANR	8647911	Identifier	pm		8647714	0					
ANR	8647912	Identifier	this		8647714	1					
ANR	8647913	Identifier	pread		8647714	1					
ANR	8647914	Argument	"""invalid IHDR"""		8647714	1					
ANR	8647915	PrimaryExpression	"""invalid IHDR"""		8647714	0					
ANR	8647916	ExpressionStatement	mod = pm -> modifications	3025:12:92029:92052	8647714	14	True				
ANR	8647917	AssignmentExpression	mod = pm -> modifications		8647714	0		=			
ANR	8647918	Identifier	mod		8647714	0					
ANR	8647919	PtrMemberAccess	pm -> modifications		8647714	1					
ANR	8647920	Identifier	pm		8647714	0					
ANR	8647921	Identifier	modifications		8647714	1					
ANR	8647922	WhileStatement	while ( mod != NULL )		8647714	15					
ANR	8647923	Condition	mod != NULL	3026:19:92073:92083	8647714	0	True				
ANR	8647924	EqualityExpression	mod != NULL		8647714	0		!=			
ANR	8647925	Identifier	mod		8647714	0					
ANR	8647926	Identifier	NULL		8647714	1					
ANR	8647927	CompoundStatement		33:12:1134:1134	8647714	1					
ANR	8647928	IfStatement	"if ( mod -> chunk == CHUNK_IHDR && mod -> modify_fn && ( * mod -> modify_fn ) ( pm , mod , 0 ) )"		8647714	0					
ANR	8647929	Condition	"mod -> chunk == CHUNK_IHDR && mod -> modify_fn && ( * mod -> modify_fn ) ( pm , mod , 0 )"	3028:19:92119:92212	8647714	0	True				
ANR	8647930	AndExpression	"mod -> chunk == CHUNK_IHDR && mod -> modify_fn && ( * mod -> modify_fn ) ( pm , mod , 0 )"		8647714	0		&&			
ANR	8647931	EqualityExpression	mod -> chunk == CHUNK_IHDR		8647714	0		==			
ANR	8647932	PtrMemberAccess	mod -> chunk		8647714	0					
ANR	8647933	Identifier	mod		8647714	0					
ANR	8647934	Identifier	chunk		8647714	1					
ANR	8647935	Identifier	CHUNK_IHDR		8647714	1					
ANR	8647936	AndExpression	"mod -> modify_fn && ( * mod -> modify_fn ) ( pm , mod , 0 )"		8647714	1		&&			
ANR	8647937	PtrMemberAccess	mod -> modify_fn		8647714	0					
ANR	8647938	Identifier	mod		8647714	0					
ANR	8647939	Identifier	modify_fn		8647714	1					
ANR	8647940	CallExpression	"( * mod -> modify_fn ) ( pm , mod , 0 )"		8647714	1					
ANR	8647941	Callee	* mod -> modify_fn		8647714	0					
ANR	8647942	UnaryOperationExpression	* mod -> modify_fn		8647714	0					
ANR	8647943	UnaryOperator	*		8647714	0					
ANR	8647944	PtrMemberAccess	mod -> modify_fn		8647714	1					
ANR	8647945	Identifier	mod		8647714	0					
ANR	8647946	Identifier	modify_fn		8647714	1					
ANR	8647947	ArgumentList	pm		8647714	1					
ANR	8647948	Argument	pm		8647714	0					
ANR	8647949	Identifier	pm		8647714	0					
ANR	8647950	Argument	mod		8647714	1					
ANR	8647951	Identifier	mod		8647714	0					
ANR	8647952	Argument	0		8647714	2					
ANR	8647953	PrimaryExpression	0		8647714	0					
ANR	8647954	CompoundStatement		36:18:1269:1269	8647714	1					
ANR	8647955	ExpressionStatement	mod -> modified = 1	3031:18:92253:92270	8647714	0	True				
ANR	8647956	AssignmentExpression	mod -> modified = 1		8647714	0		=			
ANR	8647957	PtrMemberAccess	mod -> modified		8647714	0					
ANR	8647958	Identifier	mod		8647714	0					
ANR	8647959	Identifier	modified		8647714	1					
ANR	8647960	PrimaryExpression	1		8647714	1					
ANR	8647961	ExpressionStatement	modifier_setbuffer ( pm )	3032:18:92290:92312	8647714	1	True				
ANR	8647962	CallExpression	modifier_setbuffer ( pm )		8647714	0					
ANR	8647963	Callee	modifier_setbuffer		8647714	0					
ANR	8647964	Identifier	modifier_setbuffer		8647714	0					
ANR	8647965	ArgumentList	pm		8647714	1					
ANR	8647966	Argument	pm		8647714	0					
ANR	8647967	Identifier	pm		8647714	0					
ANR	8647968	ExpressionStatement	mod = mod -> next	3036:15:92402:92417	8647714	1	True				
ANR	8647969	AssignmentExpression	mod = mod -> next		8647714	0		=			
ANR	8647970	Identifier	mod		8647714	0					
ANR	8647971	PtrMemberAccess	mod -> next		8647714	1					
ANR	8647972	Identifier	mod		8647714	0					
ANR	8647973	Identifier	next		8647714	1					
ANR	8647974	ExpressionStatement	pm -> bit_depth = pm -> buffer [ 8 + 8 ]	3040:12:92516:92547	8647714	16	True				
ANR	8647975	AssignmentExpression	pm -> bit_depth = pm -> buffer [ 8 + 8 ]		8647714	0		=			
ANR	8647976	PtrMemberAccess	pm -> bit_depth		8647714	0					
ANR	8647977	Identifier	pm		8647714	0					
ANR	8647978	Identifier	bit_depth		8647714	1					
ANR	8647979	ArrayIndexing	pm -> buffer [ 8 + 8 ]		8647714	1					
ANR	8647980	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647981	Identifier	pm		8647714	0					
ANR	8647982	Identifier	buffer		8647714	1					
ANR	8647983	AdditiveExpression	8 + 8		8647714	1		+			
ANR	8647984	PrimaryExpression	8		8647714	0					
ANR	8647985	PrimaryExpression	8		8647714	1					
ANR	8647986	ExpressionStatement	pm -> colour_type = pm -> buffer [ 8 + 8 + 1 ]	3041:12:92561:92596	8647714	17	True				
ANR	8647987	AssignmentExpression	pm -> colour_type = pm -> buffer [ 8 + 8 + 1 ]		8647714	0		=			
ANR	8647988	PtrMemberAccess	pm -> colour_type		8647714	0					
ANR	8647989	Identifier	pm		8647714	0					
ANR	8647990	Identifier	colour_type		8647714	1					
ANR	8647991	ArrayIndexing	pm -> buffer [ 8 + 8 + 1 ]		8647714	1					
ANR	8647992	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8647993	Identifier	pm		8647714	0					
ANR	8647994	Identifier	buffer		8647714	1					
ANR	8647995	AdditiveExpression	8 + 8 + 1		8647714	1		+			
ANR	8647996	PrimaryExpression	8		8647714	0					
ANR	8647997	AdditiveExpression	8 + 1		8647714	1		+			
ANR	8647998	PrimaryExpression	8		8647714	0					
ANR	8647999	PrimaryExpression	1		8647714	1					
ANR	8648000	ExpressionStatement	pm -> state = modifier_IHDR	3043:12:92611:92636	8647714	18	True				
ANR	8648001	AssignmentExpression	pm -> state = modifier_IHDR		8647714	0		=			
ANR	8648002	PtrMemberAccess	pm -> state		8647714	0					
ANR	8648003	Identifier	pm		8647714	0					
ANR	8648004	Identifier	state		8647714	1					
ANR	8648005	Identifier	modifier_IHDR		8647714	1					
ANR	8648006	ExpressionStatement	pm -> flush = 0	3044:12:92650:92663	8647714	19	True				
ANR	8648007	AssignmentExpression	pm -> flush = 0		8647714	0		=			
ANR	8648008	PtrMemberAccess	pm -> flush		8647714	0					
ANR	8648009	Identifier	pm		8647714	0					
ANR	8648010	Identifier	flush		8647714	1					
ANR	8648011	PrimaryExpression	0		8647714	1					
ANR	8648012	BreakStatement	break ;	3045:12:92677:92682	8647714	20	True				
ANR	8648013	Label	case modifier_IHDR :	3047:9:92694:92712	8647714	21	True				
ANR	8648014	Identifier	modifier_IHDR		8647714	0					
ANR	8648015	Label	default :	3048:9:92723:92730	8647714	22	True				
ANR	8648016	Identifier	default		8647714	0					
ANR	8648017	IfStatement	if ( ( cb = pm -> flush ) > 0 )		8647714	23					
ANR	8648018	Condition	( cb = pm -> flush ) > 0	3053:16:92959:92978	8647714	0	True				
ANR	8648019	RelationalExpression	( cb = pm -> flush ) > 0		8647714	0		>			
ANR	8648020	AssignmentExpression	cb = pm -> flush		8647714	0		=			
ANR	8648021	Identifier	cb		8647714	0					
ANR	8648022	PtrMemberAccess	pm -> flush		8647714	1					
ANR	8648023	Identifier	pm		8647714	0					
ANR	8648024	Identifier	flush		8647714	1					
ANR	8648025	PrimaryExpression	0		8647714	1					
ANR	8648026	CompoundStatement		60:12:2029:2029	8647714	1					
ANR	8648027	IfStatement	if ( cb > st )		8647714	0					
ANR	8648028	Condition	cb > st	3055:19:93014:93020	8647714	0	True				
ANR	8648029	RelationalExpression	cb > st		8647714	0		>			
ANR	8648030	Identifier	cb		8647714	0					
ANR	8648031	Identifier	st		8647714	1					
ANR	8648032	ExpressionStatement	cb = st	3055:28:93023:93030	8647714	1	True				
ANR	8648033	AssignmentExpression	cb = st		8647714	0		=			
ANR	8648034	Identifier	cb		8647714	0					
ANR	8648035	Identifier	st		8647714	1					
ANR	8648036	ExpressionStatement	pm -> flush -= cb	3056:15:93047:93062	8647714	1	True				
ANR	8648037	AssignmentExpression	pm -> flush -= cb		8647714	0		-=			
ANR	8648038	PtrMemberAccess	pm -> flush		8647714	0					
ANR	8648039	Identifier	pm		8647714	0					
ANR	8648040	Identifier	flush		8647714	1					
ANR	8648041	Identifier	cb		8647714	1					
ANR	8648042	ExpressionStatement	"store_read_chunk ( & pm -> this , pb , cb , cb )"	3057:15:93079:93118	8647714	2	True				
ANR	8648043	CallExpression	"store_read_chunk ( & pm -> this , pb , cb , cb )"		8647714	0					
ANR	8648044	Callee	store_read_chunk		8647714	0					
ANR	8648045	Identifier	store_read_chunk		8647714	0					
ANR	8648046	ArgumentList	& pm -> this		8647714	1					
ANR	8648047	Argument	& pm -> this		8647714	0					
ANR	8648048	UnaryOperationExpression	& pm -> this		8647714	0					
ANR	8648049	UnaryOperator	&		8647714	0					
ANR	8648050	PtrMemberAccess	pm -> this		8647714	1					
ANR	8648051	Identifier	pm		8647714	0					
ANR	8648052	Identifier	this		8647714	1					
ANR	8648053	Argument	pb		8647714	1					
ANR	8648054	Identifier	pb		8647714	0					
ANR	8648055	Argument	cb		8647714	2					
ANR	8648056	Identifier	cb		8647714	0					
ANR	8648057	Argument	cb		8647714	3					
ANR	8648058	Identifier	cb		8647714	0					
ANR	8648059	ExpressionStatement	pb += cb	3058:15:93135:93143	8647714	3	True				
ANR	8648060	AssignmentExpression	pb += cb		8647714	0		+=			
ANR	8648061	Identifier	pb		8647714	0					
ANR	8648062	Identifier	cb		8647714	1					
ANR	8648063	ExpressionStatement	st -= cb	3059:15:93160:93168	8647714	4	True				
ANR	8648064	AssignmentExpression	st -= cb		8647714	0		-=			
ANR	8648065	Identifier	st		8647714	0					
ANR	8648066	Identifier	cb		8647714	1					
ANR	8648067	IfStatement	if ( st == 0 )		8647714	5					
ANR	8648068	Condition	st == 0	3060:19:93189:93195	8647714	0	True				
ANR	8648069	EqualityExpression	st == 0		8647714	0		==			
ANR	8648070	Identifier	st		8647714	0					
ANR	8648071	PrimaryExpression	0		8647714	1					
ANR	8648072	ReturnStatement	return ;	3060:28:93198:93204	8647714	1	True				
ANR	8648073	IfStatement	if ( pm -> pending_chunk != 0 )		8647714	24					
ANR	8648074	Condition	pm -> pending_chunk != 0	3066:16:93349:93370	8647714	0	True				
ANR	8648075	EqualityExpression	pm -> pending_chunk != 0		8647714	0		!=			
ANR	8648076	PtrMemberAccess	pm -> pending_chunk		8647714	0					
ANR	8648077	Identifier	pm		8647714	0					
ANR	8648078	Identifier	pending_chunk		8647714	1					
ANR	8648079	PrimaryExpression	0		8647714	1					
ANR	8648080	CompoundStatement		73:12:2421:2421	8647714	1					
ANR	8648081	ExpressionStatement	"png_save_uint_32 ( pm -> buffer , pm -> pending_len )"	3068:15:93402:93447	8647714	0	True				
ANR	8648082	CallExpression	"png_save_uint_32 ( pm -> buffer , pm -> pending_len )"		8647714	0					
ANR	8648083	Callee	png_save_uint_32		8647714	0					
ANR	8648084	Identifier	png_save_uint_32		8647714	0					
ANR	8648085	ArgumentList	pm -> buffer		8647714	1					
ANR	8648086	Argument	pm -> buffer		8647714	0					
ANR	8648087	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648088	Identifier	pm		8647714	0					
ANR	8648089	Identifier	buffer		8647714	1					
ANR	8648090	Argument	pm -> pending_len		8647714	1					
ANR	8648091	PtrMemberAccess	pm -> pending_len		8647714	0					
ANR	8648092	Identifier	pm		8647714	0					
ANR	8648093	Identifier	pending_len		8647714	1					
ANR	8648094	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 4 , pm -> pending_chunk )"	3069:15:93464:93513	8647714	1	True				
ANR	8648095	CallExpression	"png_save_uint_32 ( pm -> buffer + 4 , pm -> pending_chunk )"		8647714	0					
ANR	8648096	Callee	png_save_uint_32		8647714	0					
ANR	8648097	Identifier	png_save_uint_32		8647714	0					
ANR	8648098	ArgumentList	pm -> buffer + 4		8647714	1					
ANR	8648099	Argument	pm -> buffer + 4		8647714	0					
ANR	8648100	AdditiveExpression	pm -> buffer + 4		8647714	0		+			
ANR	8648101	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648102	Identifier	pm		8647714	0					
ANR	8648103	Identifier	buffer		8647714	1					
ANR	8648104	PrimaryExpression	4		8647714	1					
ANR	8648105	Argument	pm -> pending_chunk		8647714	1					
ANR	8648106	PtrMemberAccess	pm -> pending_chunk		8647714	0					
ANR	8648107	Identifier	pm		8647714	0					
ANR	8648108	Identifier	pending_chunk		8647714	1					
ANR	8648109	ExpressionStatement	pm -> pending_len = 0	3070:15:93530:93549	8647714	2	True				
ANR	8648110	AssignmentExpression	pm -> pending_len = 0		8647714	0		=			
ANR	8648111	PtrMemberAccess	pm -> pending_len		8647714	0					
ANR	8648112	Identifier	pm		8647714	0					
ANR	8648113	Identifier	pending_len		8647714	1					
ANR	8648114	PrimaryExpression	0		8647714	1					
ANR	8648115	ExpressionStatement	pm -> pending_chunk = 0	3071:15:93566:93587	8647714	3	True				
ANR	8648116	AssignmentExpression	pm -> pending_chunk = 0		8647714	0		=			
ANR	8648117	PtrMemberAccess	pm -> pending_chunk		8647714	0					
ANR	8648118	Identifier	pm		8647714	0					
ANR	8648119	Identifier	pending_chunk		8647714	1					
ANR	8648120	PrimaryExpression	0		8647714	1					
ANR	8648121	ElseStatement	else		8647714	0					
ANR	8648122	ExpressionStatement	"store_read_chunk ( & pm -> this , pm -> buffer , 8 , 8 )"	3074:15:93635:93680	8647714	0	True				
ANR	8648123	CallExpression	"store_read_chunk ( & pm -> this , pm -> buffer , 8 , 8 )"		8647714	0					
ANR	8648124	Callee	store_read_chunk		8647714	0					
ANR	8648125	Identifier	store_read_chunk		8647714	0					
ANR	8648126	ArgumentList	& pm -> this		8647714	1					
ANR	8648127	Argument	& pm -> this		8647714	0					
ANR	8648128	UnaryOperationExpression	& pm -> this		8647714	0					
ANR	8648129	UnaryOperator	&		8647714	0					
ANR	8648130	PtrMemberAccess	pm -> this		8647714	1					
ANR	8648131	Identifier	pm		8647714	0					
ANR	8648132	Identifier	this		8647714	1					
ANR	8648133	Argument	pm -> buffer		8647714	1					
ANR	8648134	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648135	Identifier	pm		8647714	0					
ANR	8648136	Identifier	buffer		8647714	1					
ANR	8648137	Argument	8		8647714	2					
ANR	8648138	PrimaryExpression	8		8647714	0					
ANR	8648139	Argument	8		8647714	3					
ANR	8648140	PrimaryExpression	8		8647714	0					
ANR	8648141	ExpressionStatement	pm -> buffer_count = 8	3076:12:93695:93715	8647714	25	True				
ANR	8648142	AssignmentExpression	pm -> buffer_count = 8		8647714	0		=			
ANR	8648143	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8648144	Identifier	pm		8647714	0					
ANR	8648145	Identifier	buffer_count		8647714	1					
ANR	8648146	PrimaryExpression	8		8647714	1					
ANR	8648147	ExpressionStatement	pm -> buffer_position = 0	3077:12:93729:93752	8647714	26	True				
ANR	8648148	AssignmentExpression	pm -> buffer_position = 0		8647714	0		=			
ANR	8648149	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8648150	Identifier	pm		8647714	0					
ANR	8648151	Identifier	buffer_position		8647714	1					
ANR	8648152	PrimaryExpression	0		8647714	1					
ANR	8648153	ExpressionStatement	len = png_get_uint_32 ( pm -> buffer )	3080:12:93838:93871	8647714	27	True				
ANR	8648154	AssignmentExpression	len = png_get_uint_32 ( pm -> buffer )		8647714	0		=			
ANR	8648155	Identifier	len		8647714	0					
ANR	8648156	CallExpression	png_get_uint_32 ( pm -> buffer )		8647714	1					
ANR	8648157	Callee	png_get_uint_32		8647714	0					
ANR	8648158	Identifier	png_get_uint_32		8647714	0					
ANR	8648159	ArgumentList	pm -> buffer		8647714	1					
ANR	8648160	Argument	pm -> buffer		8647714	0					
ANR	8648161	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648162	Identifier	pm		8647714	0					
ANR	8648163	Identifier	buffer		8647714	1					
ANR	8648164	ExpressionStatement	chunk = png_get_uint_32 ( pm -> buffer + 4 )	3081:12:93885:93922	8647714	28	True				
ANR	8648165	AssignmentExpression	chunk = png_get_uint_32 ( pm -> buffer + 4 )		8647714	0		=			
ANR	8648166	Identifier	chunk		8647714	0					
ANR	8648167	CallExpression	png_get_uint_32 ( pm -> buffer + 4 )		8647714	1					
ANR	8648168	Callee	png_get_uint_32		8647714	0					
ANR	8648169	Identifier	png_get_uint_32		8647714	0					
ANR	8648170	ArgumentList	pm -> buffer + 4		8647714	1					
ANR	8648171	Argument	pm -> buffer + 4		8647714	0					
ANR	8648172	AdditiveExpression	pm -> buffer + 4		8647714	0		+			
ANR	8648173	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648174	Identifier	pm		8647714	0					
ANR	8648175	Identifier	buffer		8647714	1					
ANR	8648176	PrimaryExpression	4		8647714	1					
ANR	8648177	IfStatement	if ( chunk == CHUNK_PLTE || chunk == CHUNK_IDAT || chunk == CHUNK_IEND )		8647714	29					
ANR	8648178	Condition	chunk == CHUNK_PLTE || chunk == CHUNK_IDAT || chunk == CHUNK_IEND	3086:16:94051:94131	8647714	0	True				
ANR	8648179	OrExpression	chunk == CHUNK_PLTE || chunk == CHUNK_IDAT || chunk == CHUNK_IEND		8647714	0		||			
ANR	8648180	EqualityExpression	chunk == CHUNK_PLTE		8647714	0		==			
ANR	8648181	Identifier	chunk		8647714	0					
ANR	8648182	Identifier	CHUNK_PLTE		8647714	1					
ANR	8648183	OrExpression	chunk == CHUNK_IDAT || chunk == CHUNK_IEND		8647714	1		||			
ANR	8648184	EqualityExpression	chunk == CHUNK_IDAT		8647714	0		==			
ANR	8648185	Identifier	chunk		8647714	0					
ANR	8648186	Identifier	CHUNK_IDAT		8647714	1					
ANR	8648187	EqualityExpression	chunk == CHUNK_IEND		8647714	1		==			
ANR	8648188	Identifier	chunk		8647714	0					
ANR	8648189	Identifier	CHUNK_IEND		8647714	1					
ANR	8648190	CompoundStatement		94:12:3182:3182	8647714	1					
ANR	8648191	ExpressionStatement	mod = pm -> modifications	3089:15:94163:94186	8647714	0	True				
ANR	8648192	AssignmentExpression	mod = pm -> modifications		8647714	0		=			
ANR	8648193	Identifier	mod		8647714	0					
ANR	8648194	PtrMemberAccess	pm -> modifications		8647714	1					
ANR	8648195	Identifier	pm		8647714	0					
ANR	8648196	Identifier	modifications		8647714	1					
ANR	8648197	WhileStatement	while ( mod != NULL )		8647714	1					
ANR	8648198	Condition	mod != NULL	3091:22:94211:94221	8647714	0	True				
ANR	8648199	EqualityExpression	mod != NULL		8647714	0		!=			
ANR	8648200	Identifier	mod		8647714	0					
ANR	8648201	Identifier	NULL		8647714	1					
ANR	8648202	CompoundStatement		98:15:3275:3275	8647714	1					
ANR	8648203	IfStatement	if ( ( mod -> add == chunk || ( mod -> add == CHUNK_PLTE && chunk == CHUNK_IDAT ) ) && mod -> modify_fn != NULL && ! mod -> modified && ! mod -> added )		8647714	0					
ANR	8648204	Condition	( mod -> add == chunk || ( mod -> add == CHUNK_PLTE && chunk == CHUNK_IDAT ) ) && mod -> modify_fn != NULL && ! mod -> modified && ! mod -> added	3093:22:94263:94435	8647714	0	True				
ANR	8648205	AndExpression	( mod -> add == chunk || ( mod -> add == CHUNK_PLTE && chunk == CHUNK_IDAT ) ) && mod -> modify_fn != NULL && ! mod -> modified && ! mod -> added		8647714	0		&&			
ANR	8648206	OrExpression	mod -> add == chunk || ( mod -> add == CHUNK_PLTE && chunk == CHUNK_IDAT )		8647714	0		||			
ANR	8648207	EqualityExpression	mod -> add == chunk		8647714	0		==			
ANR	8648208	PtrMemberAccess	mod -> add		8647714	0					
ANR	8648209	Identifier	mod		8647714	0					
ANR	8648210	Identifier	add		8647714	1					
ANR	8648211	Identifier	chunk		8647714	1					
ANR	8648212	AndExpression	mod -> add == CHUNK_PLTE && chunk == CHUNK_IDAT		8647714	1		&&			
ANR	8648213	EqualityExpression	mod -> add == CHUNK_PLTE		8647714	0		==			
ANR	8648214	PtrMemberAccess	mod -> add		8647714	0					
ANR	8648215	Identifier	mod		8647714	0					
ANR	8648216	Identifier	add		8647714	1					
ANR	8648217	Identifier	CHUNK_PLTE		8647714	1					
ANR	8648218	EqualityExpression	chunk == CHUNK_IDAT		8647714	1		==			
ANR	8648219	Identifier	chunk		8647714	0					
ANR	8648220	Identifier	CHUNK_IDAT		8647714	1					
ANR	8648221	AndExpression	mod -> modify_fn != NULL && ! mod -> modified && ! mod -> added		8647714	1		&&			
ANR	8648222	EqualityExpression	mod -> modify_fn != NULL		8647714	0		!=			
ANR	8648223	PtrMemberAccess	mod -> modify_fn		8647714	0					
ANR	8648224	Identifier	mod		8647714	0					
ANR	8648225	Identifier	modify_fn		8647714	1					
ANR	8648226	Identifier	NULL		8647714	1					
ANR	8648227	AndExpression	! mod -> modified && ! mod -> added		8647714	1		&&			
ANR	8648228	UnaryOperationExpression	! mod -> modified		8647714	0					
ANR	8648229	UnaryOperator	!		8647714	0					
ANR	8648230	PtrMemberAccess	mod -> modified		8647714	1					
ANR	8648231	Identifier	mod		8647714	0					
ANR	8648232	Identifier	modified		8647714	1					
ANR	8648233	UnaryOperationExpression	! mod -> added		8647714	1					
ANR	8648234	UnaryOperator	!		8647714	0					
ANR	8648235	PtrMemberAccess	mod -> added		8647714	1					
ANR	8648236	Identifier	mod		8647714	0					
ANR	8648237	Identifier	added		8647714	1					
ANR	8648238	CompoundStatement		102:18:3492:3492	8647714	1					
ANR	8648239	ExpressionStatement	mod -> added = 1	3100:21:94619:94633	8647714	0	True				
ANR	8648240	AssignmentExpression	mod -> added = 1		8647714	0		=			
ANR	8648241	PtrMemberAccess	mod -> added		8647714	0					
ANR	8648242	Identifier	mod		8647714	0					
ANR	8648243	Identifier	added		8647714	1					
ANR	8648244	PrimaryExpression	1		8647714	1					
ANR	8648245	IfStatement	"if ( ( * mod -> modify_fn ) ( pm , mod , 1 ) )"		8647714	1					
ANR	8648246	Condition	"( * mod -> modify_fn ) ( pm , mod , 1 )"	3102:25:94661:94697	8647714	0	True				
ANR	8648247	CallExpression	"( * mod -> modify_fn ) ( pm , mod , 1 )"		8647714	0					
ANR	8648248	Callee	* mod -> modify_fn		8647714	0					
ANR	8648249	UnaryOperationExpression	* mod -> modify_fn		8647714	0					
ANR	8648250	UnaryOperator	*		8647714	0					
ANR	8648251	PtrMemberAccess	mod -> modify_fn		8647714	1					
ANR	8648252	Identifier	mod		8647714	0					
ANR	8648253	Identifier	modify_fn		8647714	1					
ANR	8648254	ArgumentList	pm		8647714	1					
ANR	8648255	Argument	pm		8647714	0					
ANR	8648256	Identifier	pm		8647714	0					
ANR	8648257	Argument	mod		8647714	1					
ANR	8648258	Identifier	mod		8647714	0					
ANR	8648259	Argument	1		8647714	2					
ANR	8648260	PrimaryExpression	1		8647714	0					
ANR	8648261	CompoundStatement		109:21:3757:3757	8647714	1					
ANR	8648262	IfStatement	if ( pm -> buffer_count > 0 )		8647714	0					
ANR	8648263	Condition	pm -> buffer_count > 0	3105:28:94810:94829	8647714	0	True				
ANR	8648264	RelationalExpression	pm -> buffer_count > 0		8647714	0		>			
ANR	8648265	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8648266	Identifier	pm		8647714	0					
ANR	8648267	Identifier	buffer_count		8647714	1					
ANR	8648268	PrimaryExpression	0		8647714	1					
ANR	8648269	ExpressionStatement	modifier_setbuffer ( pm )	3106:27:94859:94881	8647714	1	True				
ANR	8648270	CallExpression	modifier_setbuffer ( pm )		8647714	0					
ANR	8648271	Callee	modifier_setbuffer		8647714	0					
ANR	8648272	Identifier	modifier_setbuffer		8647714	0					
ANR	8648273	ArgumentList	pm		8647714	1					
ANR	8648274	Argument	pm		8647714	0					
ANR	8648275	Identifier	pm		8647714	0					
ANR	8648276	ElseStatement	else		8647714	0					
ANR	8648277	CompoundStatement		115:27:3976:3976	8647714	0					
ANR	8648278	ExpressionStatement	pm -> buffer_position = 0	3110:27:94969:94992	8647714	0	True				
ANR	8648279	AssignmentExpression	pm -> buffer_position = 0		8647714	0		=			
ANR	8648280	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8648281	Identifier	pm		8647714	0					
ANR	8648282	Identifier	buffer_position		8647714	1					
ANR	8648283	PrimaryExpression	0		8647714	1					
ANR	8648284	ExpressionStatement	mod -> removed = 1	3111:27:95021:95037	8647714	1	True				
ANR	8648285	AssignmentExpression	mod -> removed = 1		8647714	0		=			
ANR	8648286	PtrMemberAccess	mod -> removed		8647714	0					
ANR	8648287	Identifier	mod		8647714	0					
ANR	8648288	Identifier	removed		8647714	1					
ANR	8648289	PrimaryExpression	1		8647714	1					
ANR	8648290	ExpressionStatement	pm -> pending_len = len	3117:24:95270:95291	8647714	1	True				
ANR	8648291	AssignmentExpression	pm -> pending_len = len		8647714	0		=			
ANR	8648292	PtrMemberAccess	pm -> pending_len		8647714	0					
ANR	8648293	Identifier	pm		8647714	0					
ANR	8648294	Identifier	pending_len		8647714	1					
ANR	8648295	Identifier	len		8647714	1					
ANR	8648296	ExpressionStatement	pm -> pending_chunk = chunk	3118:24:95317:95342	8647714	2	True				
ANR	8648297	AssignmentExpression	pm -> pending_chunk = chunk		8647714	0		=			
ANR	8648298	PtrMemberAccess	pm -> pending_chunk		8647714	0					
ANR	8648299	Identifier	pm		8647714	0					
ANR	8648300	Identifier	pending_chunk		8647714	1					
ANR	8648301	Identifier	chunk		8647714	1					
ANR	8648302	BreakStatement	break ;	3119:24:95368:95373	8647714	3	True				
ANR	8648303	ExpressionStatement	mod = mod -> next	3123:18:95456:95471	8647714	1	True				
ANR	8648304	AssignmentExpression	mod = mod -> next		8647714	0		=			
ANR	8648305	Identifier	mod		8647714	0					
ANR	8648306	PtrMemberAccess	mod -> next		8647714	1					
ANR	8648307	Identifier	mod		8647714	0					
ANR	8648308	Identifier	next		8647714	1					
ANR	8648309	IfStatement	if ( mod != NULL )		8647714	2					
ANR	8648310	Condition	mod != NULL	3130:19:95714:95724	8647714	0	True				
ANR	8648311	EqualityExpression	mod != NULL		8647714	0		!=			
ANR	8648312	Identifier	mod		8647714	0					
ANR	8648313	Identifier	NULL		8647714	1					
ANR	8648314	BreakStatement	break ;	3131:18:95745:95750	8647714	1	True				
ANR	8648315	IfStatement	if ( len + 12 <= sizeof pm -> buffer )		8647714	30					
ANR	8648316	Condition	len + 12 <= sizeof pm -> buffer	3138:16:96014:96040	8647714	0	True				
ANR	8648317	RelationalExpression	len + 12 <= sizeof pm -> buffer		8647714	0		<=			
ANR	8648318	AdditiveExpression	len + 12		8647714	0		+			
ANR	8648319	Identifier	len		8647714	0					
ANR	8648320	PrimaryExpression	12		8647714	1					
ANR	8648321	SizeofExpression	sizeof pm -> buffer		8647714	1					
ANR	8648322	Sizeof	sizeof		8647714	0					
ANR	8648323	PtrMemberAccess	pm -> buffer		8647714	1					
ANR	8648324	Identifier	pm		8647714	0					
ANR	8648325	Identifier	buffer		8647714	1					
ANR	8648326	CompoundStatement		146:15:5108:5146	8647714	1					
ANR	8648327	IdentifierDeclStatement	png_size_t s = len + 12 - pm -> buffer_count ;	3140:15:96072:96110	8647714	0	True				
ANR	8648328	IdentifierDecl	s = len + 12 - pm -> buffer_count		8647714	0					
ANR	8648329	IdentifierDeclType	png_size_t		8647714	0					
ANR	8648330	Identifier	s		8647714	1					
ANR	8648331	AssignmentExpression	s = len + 12 - pm -> buffer_count		8647714	2		=			
ANR	8648332	Identifier	s		8647714	0					
ANR	8648333	AdditiveExpression	len + 12 - pm -> buffer_count		8647714	1		+			
ANR	8648334	Identifier	len		8647714	0					
ANR	8648335	AdditiveExpression	12 - pm -> buffer_count		8647714	1		-			
ANR	8648336	PrimaryExpression	12		8647714	0					
ANR	8648337	PtrMemberAccess	pm -> buffer_count		8647714	1					
ANR	8648338	Identifier	pm		8647714	0					
ANR	8648339	Identifier	buffer_count		8647714	1					
ANR	8648340	ExpressionStatement	"store_read_chunk ( & pm -> this , pm -> buffer + pm -> buffer_count , s , s )"	3141:15:96127:96189	8647714	1	True				
ANR	8648341	CallExpression	"store_read_chunk ( & pm -> this , pm -> buffer + pm -> buffer_count , s , s )"		8647714	0					
ANR	8648342	Callee	store_read_chunk		8647714	0					
ANR	8648343	Identifier	store_read_chunk		8647714	0					
ANR	8648344	ArgumentList	& pm -> this		8647714	1					
ANR	8648345	Argument	& pm -> this		8647714	0					
ANR	8648346	UnaryOperationExpression	& pm -> this		8647714	0					
ANR	8648347	UnaryOperator	&		8647714	0					
ANR	8648348	PtrMemberAccess	pm -> this		8647714	1					
ANR	8648349	Identifier	pm		8647714	0					
ANR	8648350	Identifier	this		8647714	1					
ANR	8648351	Argument	pm -> buffer + pm -> buffer_count		8647714	1					
ANR	8648352	AdditiveExpression	pm -> buffer + pm -> buffer_count		8647714	0		+			
ANR	8648353	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648354	Identifier	pm		8647714	0					
ANR	8648355	Identifier	buffer		8647714	1					
ANR	8648356	PtrMemberAccess	pm -> buffer_count		8647714	1					
ANR	8648357	Identifier	pm		8647714	0					
ANR	8648358	Identifier	buffer_count		8647714	1					
ANR	8648359	Argument	s		8647714	2					
ANR	8648360	Identifier	s		8647714	0					
ANR	8648361	Argument	s		8647714	3					
ANR	8648362	Identifier	s		8647714	0					
ANR	8648363	ExpressionStatement	pm -> buffer_count = len + 12	3142:15:96206:96231	8647714	2	True				
ANR	8648364	AssignmentExpression	pm -> buffer_count = len + 12		8647714	0		=			
ANR	8648365	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8648366	Identifier	pm		8647714	0					
ANR	8648367	Identifier	buffer_count		8647714	1					
ANR	8648368	AdditiveExpression	len + 12		8647714	1		+			
ANR	8648369	Identifier	len		8647714	0					
ANR	8648370	PrimaryExpression	12		8647714	1					
ANR	8648371	ExpressionStatement	mod = pm -> modifications	3145:15:96314:96337	8647714	3	True				
ANR	8648372	AssignmentExpression	mod = pm -> modifications		8647714	0		=			
ANR	8648373	Identifier	mod		8647714	0					
ANR	8648374	PtrMemberAccess	pm -> modifications		8647714	1					
ANR	8648375	Identifier	pm		8647714	0					
ANR	8648376	Identifier	modifications		8647714	1					
ANR	8648377	WhileStatement	while ( mod != NULL )		8647714	4					
ANR	8648378	Condition	mod != NULL	3146:22:96361:96371	8647714	0	True				
ANR	8648379	EqualityExpression	mod != NULL		8647714	0		!=			
ANR	8648380	Identifier	mod		8647714	0					
ANR	8648381	Identifier	NULL		8647714	1					
ANR	8648382	CompoundStatement		153:15:5425:5425	8647714	1					
ANR	8648383	IfStatement	if ( mod -> chunk == chunk )		8647714	0					
ANR	8648384	Condition	mod -> chunk == chunk	3148:22:96413:96431	8647714	0	True				
ANR	8648385	EqualityExpression	mod -> chunk == chunk		8647714	0		==			
ANR	8648386	PtrMemberAccess	mod -> chunk		8647714	0					
ANR	8648387	Identifier	mod		8647714	0					
ANR	8648388	Identifier	chunk		8647714	1					
ANR	8648389	Identifier	chunk		8647714	1					
ANR	8648390	CompoundStatement		155:18:5488:5488	8647714	1					
ANR	8648391	IfStatement	if ( mod -> modify_fn == NULL )		8647714	0					
ANR	8648392	Condition	mod -> modify_fn == NULL	3150:25:96479:96500	8647714	0	True				
ANR	8648393	EqualityExpression	mod -> modify_fn == NULL		8647714	0		==			
ANR	8648394	PtrMemberAccess	mod -> modify_fn		8647714	0					
ANR	8648395	Identifier	mod		8647714	0					
ANR	8648396	Identifier	modify_fn		8647714	1					
ANR	8648397	Identifier	NULL		8647714	1					
ANR	8648398	CompoundStatement		157:21:5560:5560	8647714	1					
ANR	8648399	ExpressionStatement	pm -> buffer_count = pm -> buffer_position = 0	3153:24:96598:96640	8647714	0	True				
ANR	8648400	AssignmentExpression	pm -> buffer_count = pm -> buffer_position = 0		8647714	0		=			
ANR	8648401	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8648402	Identifier	pm		8647714	0					
ANR	8648403	Identifier	buffer_count		8647714	1					
ANR	8648404	AssignmentExpression	pm -> buffer_position = 0		8647714	1		=			
ANR	8648405	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8648406	Identifier	pm		8647714	0					
ANR	8648407	Identifier	buffer_position		8647714	1					
ANR	8648408	PrimaryExpression	0		8647714	1					
ANR	8648409	ExpressionStatement	mod -> removed = 1	3154:24:96666:96682	8647714	1	True				
ANR	8648410	AssignmentExpression	mod -> removed = 1		8647714	0		=			
ANR	8648411	PtrMemberAccess	mod -> removed		8647714	0					
ANR	8648412	Identifier	mod		8647714	0					
ANR	8648413	Identifier	removed		8647714	1					
ANR	8648414	PrimaryExpression	1		8647714	1					
ANR	8648415	BreakStatement	break ;	3155:24:96708:96713	8647714	2	True				
ANR	8648416	ElseStatement	else		8647714	0					
ANR	8648417	IfStatement	"if ( ( * mod -> modify_fn ) ( pm , mod , 0 ) )"		8647714	0					
ANR	8648418	Condition	"( * mod -> modify_fn ) ( pm , mod , 0 )"	3158:30:96800:96828	8647714	0	True				
ANR	8648419	CallExpression	"( * mod -> modify_fn ) ( pm , mod , 0 )"		8647714	0					
ANR	8648420	Callee	* mod -> modify_fn		8647714	0					
ANR	8648421	UnaryOperationExpression	* mod -> modify_fn		8647714	0					
ANR	8648422	UnaryOperator	*		8647714	0					
ANR	8648423	PtrMemberAccess	mod -> modify_fn		8647714	1					
ANR	8648424	Identifier	mod		8647714	0					
ANR	8648425	Identifier	modify_fn		8647714	1					
ANR	8648426	ArgumentList	pm		8647714	1					
ANR	8648427	Argument	pm		8647714	0					
ANR	8648428	Identifier	pm		8647714	0					
ANR	8648429	Argument	mod		8647714	1					
ANR	8648430	Identifier	mod		8647714	0					
ANR	8648431	Argument	0		8647714	2					
ANR	8648432	PrimaryExpression	0		8647714	0					
ANR	8648433	CompoundStatement		165:21:5888:5888	8647714	1					
ANR	8648434	ExpressionStatement	mod -> modified = 1	3160:24:96878:96895	8647714	0	True				
ANR	8648435	AssignmentExpression	mod -> modified = 1		8647714	0		=			
ANR	8648436	PtrMemberAccess	mod -> modified		8647714	0					
ANR	8648437	Identifier	mod		8647714	0					
ANR	8648438	Identifier	modified		8647714	1					
ANR	8648439	PrimaryExpression	1		8647714	1					
ANR	8648440	IfStatement	if ( pm -> buffer_count == 0 )		8647714	1					
ANR	8648441	Condition	pm -> buffer_count == 0	3162:28:96988:97008	8647714	0	True				
ANR	8648442	EqualityExpression	pm -> buffer_count == 0		8647714	0		==			
ANR	8648443	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8648444	Identifier	pm		8647714	0					
ANR	8648445	Identifier	buffer_count		8647714	1					
ANR	8648446	PrimaryExpression	0		8647714	1					
ANR	8648447	CompoundStatement		169:24:6071:6071	8647714	1					
ANR	8648448	ExpressionStatement	pm -> buffer_position = 0	3164:27:97064:97087	8647714	0	True				
ANR	8648449	AssignmentExpression	pm -> buffer_position = 0		8647714	0		=			
ANR	8648450	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8648451	Identifier	pm		8647714	0					
ANR	8648452	Identifier	buffer_position		8647714	1					
ANR	8648453	PrimaryExpression	0		8647714	1					
ANR	8648454	BreakStatement	break ;	3165:27:97116:97121	8647714	1	True				
ANR	8648455	ExpressionStatement	modifier_setbuffer ( pm )	3167:24:97173:97195	8647714	2	True				
ANR	8648456	CallExpression	modifier_setbuffer ( pm )		8647714	0					
ANR	8648457	Callee	modifier_setbuffer		8647714	0					
ANR	8648458	Identifier	modifier_setbuffer		8647714	0					
ANR	8648459	ArgumentList	pm		8647714	1					
ANR	8648460	Argument	pm		8647714	0					
ANR	8648461	Identifier	pm		8647714	0					
ANR	8648462	ExpressionStatement	mod = mod -> next	3171:18:97259:97274	8647714	1	True				
ANR	8648463	AssignmentExpression	mod = mod -> next		8647714	0		=			
ANR	8648464	Identifier	mod		8647714	0					
ANR	8648465	PtrMemberAccess	mod -> next		8647714	1					
ANR	8648466	Identifier	mod		8647714	0					
ANR	8648467	Identifier	next		8647714	1					
ANR	8648468	ElseStatement	else		8647714	0					
ANR	8648469	ExpressionStatement	pm -> flush = len + 12 - pm -> buffer_count	3176:15:97340:97377	8647714	0	True				
ANR	8648470	AssignmentExpression	pm -> flush = len + 12 - pm -> buffer_count		8647714	0		=			
ANR	8648471	PtrMemberAccess	pm -> flush		8647714	0					
ANR	8648472	Identifier	pm		8647714	0					
ANR	8648473	Identifier	flush		8647714	1					
ANR	8648474	AdditiveExpression	len + 12 - pm -> buffer_count		8647714	1		+			
ANR	8648475	Identifier	len		8647714	0					
ANR	8648476	AdditiveExpression	12 - pm -> buffer_count		8647714	1		-			
ANR	8648477	PrimaryExpression	12		8647714	0					
ANR	8648478	PtrMemberAccess	pm -> buffer_count		8647714	1					
ANR	8648479	Identifier	pm		8647714	0					
ANR	8648480	Identifier	buffer_count		8647714	1					
ANR	8648481	BreakStatement	break ;	3179:12:97476:97481	8647714	31	True				
ANR	8648482	ExpressionStatement	cb = pm -> buffer_count - pm -> buffer_position	3185:6:97623:97666	8647714	4	True				
ANR	8648483	AssignmentExpression	cb = pm -> buffer_count - pm -> buffer_position		8647714	0		=			
ANR	8648484	Identifier	cb		8647714	0					
ANR	8648485	AdditiveExpression	pm -> buffer_count - pm -> buffer_position		8647714	1		-			
ANR	8648486	PtrMemberAccess	pm -> buffer_count		8647714	0					
ANR	8648487	Identifier	pm		8647714	0					
ANR	8648488	Identifier	buffer_count		8647714	1					
ANR	8648489	PtrMemberAccess	pm -> buffer_position		8647714	1					
ANR	8648490	Identifier	pm		8647714	0					
ANR	8648491	Identifier	buffer_position		8647714	1					
ANR	8648492	IfStatement	if ( cb > st )		8647714	5					
ANR	8648493	Condition	cb > st	3187:10:97679:97685	8647714	0	True				
ANR	8648494	RelationalExpression	cb > st		8647714	0		>			
ANR	8648495	Identifier	cb		8647714	0					
ANR	8648496	Identifier	st		8647714	1					
ANR	8648497	ExpressionStatement	cb = st	3188:9:97697:97704	8647714	1	True				
ANR	8648498	AssignmentExpression	cb = st		8647714	0		=			
ANR	8648499	Identifier	cb		8647714	0					
ANR	8648500	Identifier	st		8647714	1					
ANR	8648501	ExpressionStatement	"memcpy ( pb , pm -> buffer + pm -> buffer_position , cb )"	3190:6:97713:97761	8647714	6	True				
ANR	8648502	CallExpression	"memcpy ( pb , pm -> buffer + pm -> buffer_position , cb )"		8647714	0					
ANR	8648503	Callee	memcpy		8647714	0					
ANR	8648504	Identifier	memcpy		8647714	0					
ANR	8648505	ArgumentList	pb		8647714	1					
ANR	8648506	Argument	pb		8647714	0					
ANR	8648507	Identifier	pb		8647714	0					
ANR	8648508	Argument	pm -> buffer + pm -> buffer_position		8647714	1					
ANR	8648509	AdditiveExpression	pm -> buffer + pm -> buffer_position		8647714	0		+			
ANR	8648510	PtrMemberAccess	pm -> buffer		8647714	0					
ANR	8648511	Identifier	pm		8647714	0					
ANR	8648512	Identifier	buffer		8647714	1					
ANR	8648513	PtrMemberAccess	pm -> buffer_position		8647714	1					
ANR	8648514	Identifier	pm		8647714	0					
ANR	8648515	Identifier	buffer_position		8647714	1					
ANR	8648516	Argument	cb		8647714	2					
ANR	8648517	Identifier	cb		8647714	0					
ANR	8648518	ExpressionStatement	st -= cb	3191:6:97769:97777	8647714	7	True				
ANR	8648519	AssignmentExpression	st -= cb		8647714	0		-=			
ANR	8648520	Identifier	st		8647714	0					
ANR	8648521	Identifier	cb		8647714	1					
ANR	8648522	ExpressionStatement	pb += cb	3192:6:97785:97793	8647714	8	True				
ANR	8648523	AssignmentExpression	pb += cb		8647714	0		+=			
ANR	8648524	Identifier	pb		8647714	0					
ANR	8648525	Identifier	cb		8647714	1					
ANR	8648526	ExpressionStatement	pm -> buffer_position += cb	3193:6:97801:97826	8647714	9	True				
ANR	8648527	AssignmentExpression	pm -> buffer_position += cb		8647714	0		+=			
ANR	8648528	PtrMemberAccess	pm -> buffer_position		8647714	0					
ANR	8648529	Identifier	pm		8647714	0					
ANR	8648530	Identifier	buffer_position		8647714	1					
ANR	8648531	Identifier	cb		8647714	1					
ANR	8648532	ReturnType	static void		8647714	1					
ANR	8648533	Identifier	modifier_read_imp		8647714	2					
ANR	8648534	ParameterList	"png_modifier * pm , png_bytep pb , png_size_t st"		8647714	3					
ANR	8648535	Parameter	png_modifier * pm	2994:18:90916:90931	8647714	0	True				
ANR	8648536	ParameterType	png_modifier *		8647714	0					
ANR	8648537	Identifier	pm		8647714	1					
ANR	8648538	Parameter	png_bytep pb	2994:36:90934:90945	8647714	1	True				
ANR	8648539	ParameterType	png_bytep		8647714	0					
ANR	8648540	Identifier	pb		8647714	1					
ANR	8648541	Parameter	png_size_t st	2994:50:90948:90960	8647714	2	True				
ANR	8648542	ParameterType	png_size_t		8647714	0					
ANR	8648543	Identifier	st		8647714	1					
ANR	8648544	CFGEntryNode	ENTRY		8647714		True				
ANR	8648545	CFGExitNode	EXIT		8647714		True				
ANR	8648546	Symbol	mod		8647714						
ANR	8648547	Symbol	pm -> buffer_count		8647714						
ANR	8648548	Symbol	pm -> modifications		8647714						
ANR	8648549	Symbol	sign		8647714						
ANR	8648550	Symbol	chunk		8647714						
ANR	8648551	Symbol	png_get_uint_32		8647714						
ANR	8648552	Symbol	memcmp		8647714						
ANR	8648553	Symbol	len		8647714						
ANR	8648554	Symbol	pm -> buffer		8647714						
ANR	8648555	Symbol	modifier_signature		8647714						
ANR	8648556	Symbol	* * mod		8647714						
ANR	8648557	Symbol	& pm -> this		8647714						
ANR	8648558	Symbol	mod -> modify_fn		8647714						
ANR	8648559	Symbol	cb		8647714						
ANR	8648560	Symbol	* pm -> buffer		8647714						
ANR	8648561	Symbol	* pm		8647714						
ANR	8648562	Symbol	mod -> removed		8647714						
ANR	8648563	Symbol	st		8647714						
ANR	8648564	Symbol	pm -> this		8647714						
ANR	8648565	Symbol	pm -> bit_depth		8647714						
ANR	8648566	Symbol	pm -> colour_type		8647714						
ANR	8648567	Symbol	CHUNK_PLTE		8647714						
ANR	8648568	Symbol	mod -> add		8647714						
ANR	8648569	Symbol	NULL		8647714						
ANR	8648570	Symbol	CHUNK_IHDR		8647714						
ANR	8648571	Symbol	pm -> pending_len		8647714						
ANR	8648572	Symbol	* * pm		8647714						
ANR	8648573	Symbol	* mod		8647714						
ANR	8648574	Symbol	mod -> added		8647714						
ANR	8648575	Symbol	mod -> modified		8647714						
ANR	8648576	Symbol	pm -> pending_chunk		8647714						
ANR	8648577	Symbol	mod -> next		8647714						
ANR	8648578	Symbol	pm -> this . pread		8647714						
ANR	8648579	Symbol	pb		8647714						
ANR	8648580	Symbol	s		8647714						
ANR	8648581	Symbol	modifier_IHDR		8647714						
ANR	8648582	Symbol	CHUNK_IDAT		8647714						
ANR	8648583	Symbol	pm -> state		8647714						
ANR	8648584	Symbol	pm -> flush		8647714						
ANR	8648585	Symbol	pm		8647714						
ANR	8648586	Symbol	* mod -> modify_fn		8647714						
ANR	8648587	Symbol	mod -> chunk		8647714						
ANR	8648588	Symbol	CHUNK_IEND		8647714						
ANR	8648589	Symbol	pm -> buffer_position		8647714						
ANR	8648590	Function	modifier_read	3198:0:97856:98165							
ANR	8648591	FunctionDef	"modifier_read (png_structp ppIn , png_bytep pb , png_size_t st)"		8648590	0					
ANR	8648592	CompoundStatement		3200:0:97938:98165	8648590	0					
ANR	8648593	IdentifierDeclStatement	png_const_structp pp = ppIn ;	3201:3:97943:97970	8648590	0	True				
ANR	8648594	IdentifierDecl	pp = ppIn		8648590	0					
ANR	8648595	IdentifierDeclType	png_const_structp		8648590	0					
ANR	8648596	Identifier	pp		8648590	1					
ANR	8648597	AssignmentExpression	pp = ppIn		8648590	2		=			
ANR	8648598	Identifier	ppIn		8648590	0					
ANR	8648599	Identifier	ppIn		8648590	1					
ANR	8648600	Statement	png_modifier	3202:3:97975:97986	8648590	1	True				
ANR	8648601	Statement	*	3202:16:97988:97988	8648590	2	True				
ANR	8648602	Statement	pm	3202:17:97989:97990	8648590	3	True				
ANR	8648603	Statement	=	3202:20:97992:97992	8648590	4	True				
ANR	8648604	Statement	voidcast	3202:22:97994:98001	8648590	5	True				
ANR	8648605	Statement	(	3202:30:98002:98002	8648590	6	True				
ANR	8648606	Statement	png_modifier	3202:31:98003:98014	8648590	7	True				
ANR	8648607	Statement	*	3202:43:98015:98015	8648590	8	True				
ANR	8648608	Statement	","	3202:44:98016:98016	8648590	9	True				
ANR	8648609	Statement	png_get_io_ptr	3202:46:98018:98031	8648590	10	True				
ANR	8648610	Statement	(	3202:60:98032:98032	8648590	11	True				
ANR	8648611	Statement	pp	3202:61:98033:98034	8648590	12	True				
ANR	8648612	Statement	)	3202:63:98035:98035	8648590	13	True				
ANR	8648613	Statement	)	3202:64:98036:98036	8648590	14	True				
ANR	8648614	ExpressionStatement		3202:65:98037:98037	8648590	15	True				
ANR	8648615	IfStatement	if ( pm == NULL || pm -> this . pread != pp )		8648590	16					
ANR	8648616	Condition	pm == NULL || pm -> this . pread != pp	3204:7:98047:98080	8648590	0	True				
ANR	8648617	OrExpression	pm == NULL || pm -> this . pread != pp		8648590	0		||			
ANR	8648618	EqualityExpression	pm == NULL		8648590	0		==			
ANR	8648619	Identifier	pm		8648590	0					
ANR	8648620	Identifier	NULL		8648590	1					
ANR	8648621	EqualityExpression	pm -> this . pread != pp		8648590	1		!=			
ANR	8648622	MemberAccess	pm -> this . pread		8648590	0					
ANR	8648623	PtrMemberAccess	pm -> this		8648590	0					
ANR	8648624	Identifier	pm		8648590	0					
ANR	8648625	Identifier	this		8648590	1					
ANR	8648626	Identifier	pread		8648590	1					
ANR	8648627	Identifier	pp		8648590	1					
ANR	8648628	ExpressionStatement	"png_error ( pp , ""bad modifier_read call"" )"	3205:6:98089:98128	8648590	1	True				
ANR	8648629	CallExpression	"png_error ( pp , ""bad modifier_read call"" )"		8648590	0					
ANR	8648630	Callee	png_error		8648590	0					
ANR	8648631	Identifier	png_error		8648590	0					
ANR	8648632	ArgumentList	pp		8648590	1					
ANR	8648633	Argument	pp		8648590	0					
ANR	8648634	Identifier	pp		8648590	0					
ANR	8648635	Argument	"""bad modifier_read call"""		8648590	1					
ANR	8648636	PrimaryExpression	"""bad modifier_read call"""		8648590	0					
ANR	8648637	ExpressionStatement	"modifier_read_imp ( pm , pb , st )"	3207:3:98134:98163	8648590	17	True				
ANR	8648638	CallExpression	"modifier_read_imp ( pm , pb , st )"		8648590	0					
ANR	8648639	Callee	modifier_read_imp		8648590	0					
ANR	8648640	Identifier	modifier_read_imp		8648590	0					
ANR	8648641	ArgumentList	pm		8648590	1					
ANR	8648642	Argument	pm		8648590	0					
ANR	8648643	Identifier	pm		8648590	0					
ANR	8648644	Argument	pb		8648590	1					
ANR	8648645	Identifier	pb		8648590	0					
ANR	8648646	Argument	st		8648590	2					
ANR	8648647	Identifier	st		8648590	0					
ANR	8648648	ReturnType	static void PNGCBAPI		8648590	1					
ANR	8648649	Identifier	modifier_read		8648590	2					
ANR	8648650	ParameterList	"png_structp ppIn , png_bytep pb , png_size_t st"		8648590	3					
ANR	8648651	Parameter	png_structp ppIn	3199:14:97891:97906	8648590	0	True				
ANR	8648652	ParameterType	png_structp		8648590	0					
ANR	8648653	Identifier	ppIn		8648590	1					
ANR	8648654	Parameter	png_bytep pb	3199:32:97909:97920	8648590	1	True				
ANR	8648655	ParameterType	png_bytep		8648590	0					
ANR	8648656	Identifier	pb		8648590	1					
ANR	8648657	Parameter	png_size_t st	3199:46:97923:97935	8648590	2	True				
ANR	8648658	ParameterType	png_size_t		8648590	0					
ANR	8648659	Identifier	st		8648590	1					
ANR	8648660	CFGEntryNode	ENTRY		8648590		True				
ANR	8648661	CFGExitNode	EXIT		8648590		True				
ANR	8648662	Symbol	pp		8648590						
ANR	8648663	Symbol	* pm		8648590						
ANR	8648664	Symbol	ppIn		8648590						
ANR	8648665	Symbol	st		8648590						
ANR	8648666	Symbol	pm -> this . pread		8648590						
ANR	8648667	Symbol	pb		8648590						
ANR	8648668	Symbol	pm -> this		8648590						
ANR	8648669	Symbol	NULL		8648590						
ANR	8648670	Symbol	pm		8648590						
ANR	8648671	Function	modifier_progressive_read	3213:0:98274:100098							
ANR	8648672	FunctionDef	"modifier_progressive_read (png_modifier * pm , png_structp pp , png_infop pi)"		8648671	0					
ANR	8648673	CompoundStatement		3215:0:98360:100098	8648671	0					
ANR	8648674	IfStatement	if ( pm -> this . pread != pp || pm -> this . current == NULL || pm -> this . next == NULL )		8648671	0					
ANR	8648675	Condition	pm -> this . pread != pp || pm -> this . current == NULL || pm -> this . next == NULL	3216:7:98369:98448	8648671	0	True				
ANR	8648676	OrExpression	pm -> this . pread != pp || pm -> this . current == NULL || pm -> this . next == NULL		8648671	0		||			
ANR	8648677	EqualityExpression	pm -> this . pread != pp		8648671	0		!=			
ANR	8648678	MemberAccess	pm -> this . pread		8648671	0					
ANR	8648679	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648680	Identifier	pm		8648671	0					
ANR	8648681	Identifier	this		8648671	1					
ANR	8648682	Identifier	pread		8648671	1					
ANR	8648683	Identifier	pp		8648671	1					
ANR	8648684	OrExpression	pm -> this . current == NULL || pm -> this . next == NULL		8648671	1		||			
ANR	8648685	EqualityExpression	pm -> this . current == NULL		8648671	0		==			
ANR	8648686	MemberAccess	pm -> this . current		8648671	0					
ANR	8648687	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648688	Identifier	pm		8648671	0					
ANR	8648689	Identifier	this		8648671	1					
ANR	8648690	Identifier	current		8648671	1					
ANR	8648691	Identifier	NULL		8648671	1					
ANR	8648692	EqualityExpression	pm -> this . next == NULL		8648671	1		==			
ANR	8648693	MemberAccess	pm -> this . next		8648671	0					
ANR	8648694	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648695	Identifier	pm		8648671	0					
ANR	8648696	Identifier	this		8648671	1					
ANR	8648697	Identifier	next		8648671	1					
ANR	8648698	Identifier	NULL		8648671	1					
ANR	8648699	ExpressionStatement	"png_error ( pp , ""store state damaged (progressive)"" )"	3218:6:98457:98507	8648671	1	True				
ANR	8648700	CallExpression	"png_error ( pp , ""store state damaged (progressive)"" )"		8648671	0					
ANR	8648701	Callee	png_error		8648671	0					
ANR	8648702	Identifier	png_error		8648671	0					
ANR	8648703	ArgumentList	pp		8648671	1					
ANR	8648704	Argument	pp		8648671	0					
ANR	8648705	Identifier	pp		8648671	0					
ANR	8648706	Argument	"""store state damaged (progressive)"""		8648671	1					
ANR	8648707	PrimaryExpression	"""store state damaged (progressive)"""		8648671	0					
ANR	8648708	ForStatement	for ( ; ; )		8648671	1					
ANR	8648709	CompoundStatement		16:6:578:598	8648671	0					
ANR	8648710	Statement	static	3228:6:98873:98878	8648671	0	True				
ANR	8648711	IdentifierDeclStatement	png_uint_32 noise = 1 ;	3228:13:98880:98901	8648671	1	True				
ANR	8648712	IdentifierDecl	noise = 1		8648671	0					
ANR	8648713	IdentifierDeclType	png_uint_32		8648671	0					
ANR	8648714	Identifier	noise		8648671	1					
ANR	8648715	AssignmentExpression	noise = 1		8648671	2		=			
ANR	8648716	Identifier	noise		8648671	0					
ANR	8648717	PrimaryExpression	1		8648671	1					
ANR	8648718	IdentifierDeclStatement	"png_size_t cb , cbAvail ;"	3229:6:98909:98931	8648671	2	True				
ANR	8648719	IdentifierDecl	cb		8648671	0					
ANR	8648720	IdentifierDeclType	png_size_t		8648671	0					
ANR	8648721	Identifier	cb		8648671	1					
ANR	8648722	IdentifierDecl	cbAvail		8648671	1					
ANR	8648723	IdentifierDeclType	png_size_t		8648671	0					
ANR	8648724	Identifier	cbAvail		8648671	1					
ANR	8648725	IdentifierDeclStatement	png_byte buffer [ 512 ] ;	3230:6:98939:98959	8648671	3	True				
ANR	8648726	IdentifierDecl	buffer [ 512 ]		8648671	0					
ANR	8648727	IdentifierDeclType	png_byte [ 512 ]		8648671	0					
ANR	8648728	Identifier	buffer		8648671	1					
ANR	8648729	PrimaryExpression	512		8648671	2					
ANR	8648730	ExpressionStatement	noise = ( noise << 9 ) | ( ( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff )	3233:6:99012:99071	8648671	4	True				
ANR	8648731	AssignmentExpression	noise = ( noise << 9 ) | ( ( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff )		8648671	0		=			
ANR	8648732	Identifier	noise		8648671	0					
ANR	8648733	InclusiveOrExpression	( noise << 9 ) | ( ( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff )		8648671	1		|			
ANR	8648734	ShiftExpression	noise << 9		8648671	0		<<			
ANR	8648735	Identifier	noise		8648671	0					
ANR	8648736	PrimaryExpression	9		8648671	1					
ANR	8648737	BitAndExpression	( noise ^ ( noise >> ( 9 - 5 ) ) ) & 0x1ff		8648671	1		&			
ANR	8648738	ExclusiveOrExpression	noise ^ ( noise >> ( 9 - 5 ) )		8648671	0		^			
ANR	8648739	Identifier	noise		8648671	0					
ANR	8648740	ShiftExpression	noise >> ( 9 - 5 )		8648671	1		>>			
ANR	8648741	Identifier	noise		8648671	0					
ANR	8648742	AdditiveExpression	9 - 5		8648671	1		-			
ANR	8648743	PrimaryExpression	9		8648671	0					
ANR	8648744	PrimaryExpression	5		8648671	1					
ANR	8648745	PrimaryExpression	0x1ff		8648671	1					
ANR	8648746	ExpressionStatement	cb = noise & 0x1ff	3234:6:99079:99097	8648671	5	True				
ANR	8648747	AssignmentExpression	cb = noise & 0x1ff		8648671	0		=			
ANR	8648748	Identifier	cb		8648671	0					
ANR	8648749	BitAndExpression	noise & 0x1ff		8648671	1		&			
ANR	8648750	Identifier	noise		8648671	0					
ANR	8648751	PrimaryExpression	0x1ff		8648671	1					
ANR	8648752	ExpressionStatement	cbAvail = store_read_buffer_avail ( & pm -> this )	3241:6:99396:99440	8648671	6	True				
ANR	8648753	AssignmentExpression	cbAvail = store_read_buffer_avail ( & pm -> this )		8648671	0		=			
ANR	8648754	Identifier	cbAvail		8648671	0					
ANR	8648755	CallExpression	store_read_buffer_avail ( & pm -> this )		8648671	1					
ANR	8648756	Callee	store_read_buffer_avail		8648671	0					
ANR	8648757	Identifier	store_read_buffer_avail		8648671	0					
ANR	8648758	ArgumentList	& pm -> this		8648671	1					
ANR	8648759	Argument	& pm -> this		8648671	0					
ANR	8648760	UnaryOperationExpression	& pm -> this		8648671	0					
ANR	8648761	UnaryOperator	&		8648671	0					
ANR	8648762	PtrMemberAccess	pm -> this		8648671	1					
ANR	8648763	Identifier	pm		8648671	0					
ANR	8648764	Identifier	this		8648671	1					
ANR	8648765	IfStatement	if ( pm -> buffer_count > pm -> buffer_position )		8648671	7					
ANR	8648766	Condition	pm -> buffer_count > pm -> buffer_position	3242:10:99452:99489	8648671	0	True				
ANR	8648767	RelationalExpression	pm -> buffer_count > pm -> buffer_position		8648671	0		>			
ANR	8648768	PtrMemberAccess	pm -> buffer_count		8648671	0					
ANR	8648769	Identifier	pm		8648671	0					
ANR	8648770	Identifier	buffer_count		8648671	1					
ANR	8648771	PtrMemberAccess	pm -> buffer_position		8648671	1					
ANR	8648772	Identifier	pm		8648671	0					
ANR	8648773	Identifier	buffer_position		8648671	1					
ANR	8648774	ExpressionStatement	cbAvail += pm -> buffer_count - pm -> buffer_position	3243:9:99501:99550	8648671	1	True				
ANR	8648775	AssignmentExpression	cbAvail += pm -> buffer_count - pm -> buffer_position		8648671	0		+=			
ANR	8648776	Identifier	cbAvail		8648671	0					
ANR	8648777	AdditiveExpression	pm -> buffer_count - pm -> buffer_position		8648671	1		-			
ANR	8648778	PtrMemberAccess	pm -> buffer_count		8648671	0					
ANR	8648779	Identifier	pm		8648671	0					
ANR	8648780	Identifier	buffer_count		8648671	1					
ANR	8648781	PtrMemberAccess	pm -> buffer_position		8648671	1					
ANR	8648782	Identifier	pm		8648671	0					
ANR	8648783	Identifier	buffer_position		8648671	1					
ANR	8648784	IfStatement	if ( cb > cbAvail )		8648671	8					
ANR	8648785	Condition	cb > cbAvail	3245:10:99563:99574	8648671	0	True				
ANR	8648786	RelationalExpression	cb > cbAvail		8648671	0		>			
ANR	8648787	Identifier	cb		8648671	0					
ANR	8648788	Identifier	cbAvail		8648671	1					
ANR	8648789	CompoundStatement		32:6:1222:1222	8648671	1					
ANR	8648790	IfStatement	if ( cbAvail == 0 )		8648671	0					
ANR	8648791	Condition	cbAvail == 0	3248:13:99628:99639	8648671	0	True				
ANR	8648792	EqualityExpression	cbAvail == 0		8648671	0		==			
ANR	8648793	Identifier	cbAvail		8648671	0					
ANR	8648794	PrimaryExpression	0		8648671	1					
ANR	8648795	BreakStatement	break ;	3249:12:99654:99659	8648671	1	True				
ANR	8648796	ExpressionStatement	cb = cbAvail	3251:9:99671:99683	8648671	1	True				
ANR	8648797	AssignmentExpression	cb = cbAvail		8648671	0		=			
ANR	8648798	Identifier	cb		8648671	0					
ANR	8648799	Identifier	cbAvail		8648671	1					
ANR	8648800	ExpressionStatement	"modifier_read_imp ( pm , buffer , cb )"	3254:6:99700:99733	8648671	9	True				
ANR	8648801	CallExpression	"modifier_read_imp ( pm , buffer , cb )"		8648671	0					
ANR	8648802	Callee	modifier_read_imp		8648671	0					
ANR	8648803	Identifier	modifier_read_imp		8648671	0					
ANR	8648804	ArgumentList	pm		8648671	1					
ANR	8648805	Argument	pm		8648671	0					
ANR	8648806	Identifier	pm		8648671	0					
ANR	8648807	Argument	buffer		8648671	1					
ANR	8648808	Identifier	buffer		8648671	0					
ANR	8648809	Argument	cb		8648671	2					
ANR	8648810	Identifier	cb		8648671	0					
ANR	8648811	ExpressionStatement	"png_process_data ( pp , pi , buffer , cb )"	3255:6:99741:99777	8648671	10	True				
ANR	8648812	CallExpression	"png_process_data ( pp , pi , buffer , cb )"		8648671	0					
ANR	8648813	Callee	png_process_data		8648671	0					
ANR	8648814	Identifier	png_process_data		8648671	0					
ANR	8648815	ArgumentList	pp		8648671	1					
ANR	8648816	Argument	pp		8648671	0					
ANR	8648817	Identifier	pp		8648671	0					
ANR	8648818	Argument	pi		8648671	1					
ANR	8648819	Identifier	pi		8648671	0					
ANR	8648820	Argument	buffer		8648671	2					
ANR	8648821	Identifier	buffer		8648671	0					
ANR	8648822	Argument	cb		8648671	3					
ANR	8648823	Identifier	cb		8648671	0					
ANR	8648824	IfStatement	if ( pm -> buffer_count > pm -> buffer_position || pm -> this . next != & pm -> this . current -> data || pm -> this . readpos < pm -> this . current -> datacount )		8648671	2					
ANR	8648825	Condition	pm -> buffer_count > pm -> buffer_position || pm -> this . next != & pm -> this . current -> data || pm -> this . readpos < pm -> this . current -> datacount	3261:7:99888:100033	8648671	0	True				
ANR	8648826	OrExpression	pm -> buffer_count > pm -> buffer_position || pm -> this . next != & pm -> this . current -> data || pm -> this . readpos < pm -> this . current -> datacount		8648671	0		||			
ANR	8648827	RelationalExpression	pm -> buffer_count > pm -> buffer_position		8648671	0		>			
ANR	8648828	PtrMemberAccess	pm -> buffer_count		8648671	0					
ANR	8648829	Identifier	pm		8648671	0					
ANR	8648830	Identifier	buffer_count		8648671	1					
ANR	8648831	PtrMemberAccess	pm -> buffer_position		8648671	1					
ANR	8648832	Identifier	pm		8648671	0					
ANR	8648833	Identifier	buffer_position		8648671	1					
ANR	8648834	OrExpression	pm -> this . next != & pm -> this . current -> data || pm -> this . readpos < pm -> this . current -> datacount		8648671	1		||			
ANR	8648835	EqualityExpression	pm -> this . next != & pm -> this . current -> data		8648671	0		!=			
ANR	8648836	MemberAccess	pm -> this . next		8648671	0					
ANR	8648837	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648838	Identifier	pm		8648671	0					
ANR	8648839	Identifier	this		8648671	1					
ANR	8648840	Identifier	next		8648671	1					
ANR	8648841	UnaryOperationExpression	& pm -> this . current -> data		8648671	1					
ANR	8648842	UnaryOperator	&		8648671	0					
ANR	8648843	PtrMemberAccess	pm -> this . current -> data		8648671	1					
ANR	8648844	MemberAccess	pm -> this . current		8648671	0					
ANR	8648845	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648846	Identifier	pm		8648671	0					
ANR	8648847	Identifier	this		8648671	1					
ANR	8648848	Identifier	current		8648671	1					
ANR	8648849	Identifier	data		8648671	1					
ANR	8648850	RelationalExpression	pm -> this . readpos < pm -> this . current -> datacount		8648671	1		<			
ANR	8648851	MemberAccess	pm -> this . readpos		8648671	0					
ANR	8648852	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648853	Identifier	pm		8648671	0					
ANR	8648854	Identifier	this		8648671	1					
ANR	8648855	Identifier	readpos		8648671	1					
ANR	8648856	PtrMemberAccess	pm -> this . current -> datacount		8648671	1					
ANR	8648857	MemberAccess	pm -> this . current		8648671	0					
ANR	8648858	PtrMemberAccess	pm -> this		8648671	0					
ANR	8648859	Identifier	pm		8648671	0					
ANR	8648860	Identifier	this		8648671	1					
ANR	8648861	Identifier	current		8648671	1					
ANR	8648862	Identifier	datacount		8648671	1					
ANR	8648863	ExpressionStatement	"png_error ( pp , ""progressive read implementation error"" )"	3264:6:100042:100096	8648671	1	True				
ANR	8648864	CallExpression	"png_error ( pp , ""progressive read implementation error"" )"		8648671	0					
ANR	8648865	Callee	png_error		8648671	0					
ANR	8648866	Identifier	png_error		8648671	0					
ANR	8648867	ArgumentList	pp		8648671	1					
ANR	8648868	Argument	pp		8648671	0					
ANR	8648869	Identifier	pp		8648671	0					
ANR	8648870	Argument	"""progressive read implementation error"""		8648671	1					
ANR	8648871	PrimaryExpression	"""progressive read implementation error"""		8648671	0					
ANR	8648872	ReturnType	static void		8648671	1					
ANR	8648873	Identifier	modifier_progressive_read		8648671	2					
ANR	8648874	ParameterList	"png_modifier * pm , png_structp pp , png_infop pi"		8648671	3					
ANR	8648875	Parameter	png_modifier * pm	3214:26:98312:98327	8648671	0	True				
ANR	8648876	ParameterType	png_modifier *		8648671	0					
ANR	8648877	Identifier	pm		8648671	1					
ANR	8648878	Parameter	png_structp pp	3214:44:98330:98343	8648671	1	True				
ANR	8648879	ParameterType	png_structp		8648671	0					
ANR	8648880	Identifier	pp		8648671	1					
ANR	8648881	Parameter	png_infop pi	3214:60:98346:98357	8648671	2	True				
ANR	8648882	ParameterType	png_infop		8648671	0					
ANR	8648883	Identifier	pi		8648671	1					
ANR	8648884	CFGEntryNode	ENTRY		8648671		True				
ANR	8648885	CFGExitNode	EXIT		8648671		True				
ANR	8648886	InfiniteForNode	true		8648671		True				
ANR	8648887	Symbol	pp		8648671						
ANR	8648888	Symbol	* pm		8648671						
ANR	8648889	Symbol	pm -> this . current		8648671						
ANR	8648890	Symbol	pm -> this		8648671						
ANR	8648891	Symbol	NULL		8648671						
ANR	8648892	Symbol	* pm -> this		8648671						
ANR	8648893	Symbol	pm -> buffer_count		8648671						
ANR	8648894	Symbol	* pm -> this . current		8648671						
ANR	8648895	Symbol	pm -> this . next		8648671						
ANR	8648896	Symbol	* * pm		8648671						
ANR	8648897	Symbol	& pm -> this . current -> data		8648671						
ANR	8648898	Symbol	pm -> this . pread		8648671						
ANR	8648899	Symbol	store_read_buffer_avail		8648671						
ANR	8648900	Symbol	noise		8648671						
ANR	8648901	Symbol	pi		8648671						
ANR	8648902	Symbol	& pm -> this		8648671						
ANR	8648903	Symbol	buffer		8648671						
ANR	8648904	Symbol	pm		8648671						
ANR	8648905	Symbol	pm -> this . readpos		8648671						
ANR	8648906	Symbol	cbAvail		8648671						
ANR	8648907	Symbol	cb		8648671						
ANR	8648908	Symbol	pm -> buffer_position		8648671						
ANR	8648909	Symbol	pm -> this . current -> datacount		8648671						
ANR	8648910	Function	set_modifier_for_read	3268:0:100126:100685							
ANR	8648911	FunctionDef	"set_modifier_for_read (png_modifier * pm , png_infopp ppi , png_uint_32 id , const char * name)"		8648910	0					
ANR	8648912	CompoundStatement		3271:0:100239:100685	8648910	0					
ANR	8648913	ExpressionStatement	pm -> state = modifier_start	3276:3:100430:100456	8648910	0	True				
ANR	8648914	AssignmentExpression	pm -> state = modifier_start		8648910	0		=			
ANR	8648915	PtrMemberAccess	pm -> state		8648910	0					
ANR	8648916	Identifier	pm		8648910	0					
ANR	8648917	Identifier	state		8648910	1					
ANR	8648918	Identifier	modifier_start		8648910	1					
ANR	8648919	ExpressionStatement	pm -> bit_depth = 0	3277:3:100461:100478	8648910	1	True				
ANR	8648920	AssignmentExpression	pm -> bit_depth = 0		8648910	0		=			
ANR	8648921	PtrMemberAccess	pm -> bit_depth		8648910	0					
ANR	8648922	Identifier	pm		8648910	0					
ANR	8648923	Identifier	bit_depth		8648910	1					
ANR	8648924	PrimaryExpression	0		8648910	1					
ANR	8648925	ExpressionStatement	pm -> colour_type = 255	3278:3:100483:100504	8648910	2	True				
ANR	8648926	AssignmentExpression	pm -> colour_type = 255		8648910	0		=			
ANR	8648927	PtrMemberAccess	pm -> colour_type		8648910	0					
ANR	8648928	Identifier	pm		8648910	0					
ANR	8648929	Identifier	colour_type		8648910	1					
ANR	8648930	PrimaryExpression	255		8648910	1					
ANR	8648931	ExpressionStatement	pm -> pending_len = 0	3280:3:100510:100529	8648910	3	True				
ANR	8648932	AssignmentExpression	pm -> pending_len = 0		8648910	0		=			
ANR	8648933	PtrMemberAccess	pm -> pending_len		8648910	0					
ANR	8648934	Identifier	pm		8648910	0					
ANR	8648935	Identifier	pending_len		8648910	1					
ANR	8648936	PrimaryExpression	0		8648910	1					
ANR	8648937	ExpressionStatement	pm -> pending_chunk = 0	3281:3:100534:100555	8648910	4	True				
ANR	8648938	AssignmentExpression	pm -> pending_chunk = 0		8648910	0		=			
ANR	8648939	PtrMemberAccess	pm -> pending_chunk		8648910	0					
ANR	8648940	Identifier	pm		8648910	0					
ANR	8648941	Identifier	pending_chunk		8648910	1					
ANR	8648942	PrimaryExpression	0		8648910	1					
ANR	8648943	ExpressionStatement	pm -> flush = 0	3282:3:100560:100573	8648910	5	True				
ANR	8648944	AssignmentExpression	pm -> flush = 0		8648910	0		=			
ANR	8648945	PtrMemberAccess	pm -> flush		8648910	0					
ANR	8648946	Identifier	pm		8648910	0					
ANR	8648947	Identifier	flush		8648910	1					
ANR	8648948	PrimaryExpression	0		8648910	1					
ANR	8648949	ExpressionStatement	pm -> buffer_count = 0	3283:3:100578:100598	8648910	6	True				
ANR	8648950	AssignmentExpression	pm -> buffer_count = 0		8648910	0		=			
ANR	8648951	PtrMemberAccess	pm -> buffer_count		8648910	0					
ANR	8648952	Identifier	pm		8648910	0					
ANR	8648953	Identifier	buffer_count		8648910	1					
ANR	8648954	PrimaryExpression	0		8648910	1					
ANR	8648955	ExpressionStatement	pm -> buffer_position = 0	3284:3:100603:100626	8648910	7	True				
ANR	8648956	AssignmentExpression	pm -> buffer_position = 0		8648910	0		=			
ANR	8648957	PtrMemberAccess	pm -> buffer_position		8648910	0					
ANR	8648958	Identifier	pm		8648910	0					
ANR	8648959	Identifier	buffer_position		8648910	1					
ANR	8648960	PrimaryExpression	0		8648910	1					
ANR	8648961	ReturnStatement	"return set_store_for_read ( & pm -> this , ppi , id , name ) ;"	3286:3:100632:100683	8648910	8	True				
ANR	8648962	CallExpression	"set_store_for_read ( & pm -> this , ppi , id , name )"		8648910	0					
ANR	8648963	Callee	set_store_for_read		8648910	0					
ANR	8648964	Identifier	set_store_for_read		8648910	0					
ANR	8648965	ArgumentList	& pm -> this		8648910	1					
ANR	8648966	Argument	& pm -> this		8648910	0					
ANR	8648967	UnaryOperationExpression	& pm -> this		8648910	0					
ANR	8648968	UnaryOperator	&		8648910	0					
ANR	8648969	PtrMemberAccess	pm -> this		8648910	1					
ANR	8648970	Identifier	pm		8648910	0					
ANR	8648971	Identifier	this		8648910	1					
ANR	8648972	Argument	ppi		8648910	1					
ANR	8648973	Identifier	ppi		8648910	0					
ANR	8648974	Argument	id		8648910	2					
ANR	8648975	Identifier	id		8648910	0					
ANR	8648976	Argument	name		8648910	3					
ANR	8648977	Identifier	name		8648910	0					
ANR	8648978	ReturnType	static png_structp		8648910	1					
ANR	8648979	Identifier	set_modifier_for_read		8648910	2					
ANR	8648980	ParameterList	"png_modifier * pm , png_infopp ppi , png_uint_32 id , const char * name"		8648910	3					
ANR	8648981	Parameter	png_modifier * pm	3269:22:100167:100182	8648910	0	True				
ANR	8648982	ParameterType	png_modifier *		8648910	0					
ANR	8648983	Identifier	pm		8648910	1					
ANR	8648984	Parameter	png_infopp ppi	3269:40:100185:100198	8648910	1	True				
ANR	8648985	ParameterType	png_infopp		8648910	0					
ANR	8648986	Identifier	ppi		8648910	1					
ANR	8648987	Parameter	png_uint_32 id	3269:56:100201:100214	8648910	2	True				
ANR	8648988	ParameterType	png_uint_32		8648910	0					
ANR	8648989	Identifier	id		8648910	1					
ANR	8648990	Parameter	const char * name	3270:4:100221:100236	8648910	3	True				
ANR	8648991	ParameterType	const char *		8648910	0					
ANR	8648992	Identifier	name		8648910	1					
ANR	8648993	CFGEntryNode	ENTRY		8648910		True				
ANR	8648994	CFGExitNode	EXIT		8648910		True				
ANR	8648995	Symbol	* pm		8648910						
ANR	8648996	Symbol	pm -> bit_depth		8648910						
ANR	8648997	Symbol	pm -> colour_type		8648910						
ANR	8648998	Symbol	pm -> pending_len		8648910						
ANR	8648999	Symbol	pm -> buffer_count		8648910						
ANR	8649000	Symbol	ppi		8648910						
ANR	8649001	Symbol	pm -> pending_chunk		8648910						
ANR	8649002	Symbol	modifier_start		8648910						
ANR	8649003	Symbol	set_store_for_read		8648910						
ANR	8649004	Symbol	name		8648910						
ANR	8649005	Symbol	& pm -> this		8648910						
ANR	8649006	Symbol	id		8648910						
ANR	8649007	Symbol	pm -> state		8648910						
ANR	8649008	Symbol	pm -> flush		8648910						
ANR	8649009	Symbol	pm		8648910						
ANR	8649010	Symbol	pm -> buffer_position		8648910						
ANR	8649011	ClassDef	gama_modification	3295:8:100963:101062							
ANR	8649012	DeclStmt									
ANR	8649013	Decl							png_modification	png_modification	this
ANR	8649014	DeclStmt									
ANR	8649015	Decl							png_fixed_point	png_fixed_point	gamma
ANR	8649016	DeclStmt									
ANR	8649017	Decl							gama_modification	gama_modification	gama_modification
ANR	8649018	Function	gama_modify	3301:0:101065:101384							
ANR	8649019	FunctionDef	"gama_modify (png_modifier * pm , png_modification * me , int add)"		8649018	0					
ANR	8649020	CompoundStatement		3303:0:101137:101384	8649018	0					
ANR	8649021	Statement	UNUSED	3304:3:101142:101147	8649018	0	True				
ANR	8649022	ExpressionStatement	"( add ) png_save_uint_32 ( pm -> buffer , 4 )"	3304:9:101148:101254	8649018	1	True				
ANR	8649023	CastExpression	"( add ) png_save_uint_32 ( pm -> buffer , 4 )"		8649018	0					
ANR	8649024	CastTarget	add		8649018	0					
ANR	8649025	CallExpression	"png_save_uint_32 ( pm -> buffer , 4 )"		8649018	1					
ANR	8649026	Callee	png_save_uint_32		8649018	0					
ANR	8649027	Identifier	png_save_uint_32		8649018	0					
ANR	8649028	ArgumentList	pm -> buffer		8649018	1					
ANR	8649029	Argument	pm -> buffer		8649018	0					
ANR	8649030	PtrMemberAccess	pm -> buffer		8649018	0					
ANR	8649031	Identifier	pm		8649018	0					
ANR	8649032	Identifier	buffer		8649018	1					
ANR	8649033	Argument	4		8649018	1					
ANR	8649034	PrimaryExpression	4		8649018	0					
ANR	8649035	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_gAMA )"	3307:3:101259:101301	8649018	2	True				
ANR	8649036	CallExpression	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_gAMA )"		8649018	0					
ANR	8649037	Callee	png_save_uint_32		8649018	0					
ANR	8649038	Identifier	png_save_uint_32		8649018	0					
ANR	8649039	ArgumentList	pm -> buffer + 4		8649018	1					
ANR	8649040	Argument	pm -> buffer + 4		8649018	0					
ANR	8649041	AdditiveExpression	pm -> buffer + 4		8649018	0		+			
ANR	8649042	PtrMemberAccess	pm -> buffer		8649018	0					
ANR	8649043	Identifier	pm		8649018	0					
ANR	8649044	Identifier	buffer		8649018	1					
ANR	8649045	PrimaryExpression	4		8649018	1					
ANR	8649046	Argument	CHUNK_gAMA		8649018	1					
ANR	8649047	Identifier	CHUNK_gAMA		8649018	0					
ANR	8649048	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 8 , ( ( gama_modification * ) me ) -> gamma )"	3308:3:101306:101369	8649018	3	True				
ANR	8649049	CallExpression	"png_save_uint_32 ( pm -> buffer + 8 , ( ( gama_modification * ) me ) -> gamma )"		8649018	0					
ANR	8649050	Callee	png_save_uint_32		8649018	0					
ANR	8649051	Identifier	png_save_uint_32		8649018	0					
ANR	8649052	ArgumentList	pm -> buffer + 8		8649018	1					
ANR	8649053	Argument	pm -> buffer + 8		8649018	0					
ANR	8649054	AdditiveExpression	pm -> buffer + 8		8649018	0		+			
ANR	8649055	PtrMemberAccess	pm -> buffer		8649018	0					
ANR	8649056	Identifier	pm		8649018	0					
ANR	8649057	Identifier	buffer		8649018	1					
ANR	8649058	PrimaryExpression	8		8649018	1					
ANR	8649059	Argument	( ( gama_modification * ) me ) -> gamma		8649018	1					
ANR	8649060	PtrMemberAccess	( ( gama_modification * ) me ) -> gamma		8649018	0					
ANR	8649061	CastExpression	( gama_modification * ) me		8649018	0					
ANR	8649062	CastTarget	gama_modification *		8649018	0					
ANR	8649063	Identifier	me		8649018	1					
ANR	8649064	Identifier	gamma		8649018	1					
ANR	8649065	ReturnStatement	return 1 ;	3309:3:101374:101382	8649018	4	True				
ANR	8649066	PrimaryExpression	1		8649018	0					
ANR	8649067	ReturnType	static int		8649018	1					
ANR	8649068	Identifier	gama_modify		8649018	2					
ANR	8649069	ParameterList	"png_modifier * pm , png_modification * me , int add"		8649018	3					
ANR	8649070	Parameter	png_modifier * pm	3302:12:101088:101103	8649018	0	True				
ANR	8649071	ParameterType	png_modifier *		8649018	0					
ANR	8649072	Identifier	pm		8649018	1					
ANR	8649073	Parameter	png_modification * me	3302:30:101106:101125	8649018	1	True				
ANR	8649074	ParameterType	png_modification *		8649018	0					
ANR	8649075	Identifier	me		8649018	1					
ANR	8649076	Parameter	int add	3302:52:101128:101134	8649018	2	True				
ANR	8649077	ParameterType	int		8649018	0					
ANR	8649078	Identifier	add		8649018	1					
ANR	8649079	CFGEntryNode	ENTRY		8649018		True				
ANR	8649080	CFGExitNode	EXIT		8649018		True				
ANR	8649081	Symbol	add		8649018						
ANR	8649082	Symbol	* pm		8649018						
ANR	8649083	Symbol	( ( gama_modification * ) me ) -> gamma		8649018						
ANR	8649084	Symbol	pm -> buffer		8649018						
ANR	8649085	Symbol	CHUNK_gAMA		8649018						
ANR	8649086	Symbol	me		8649018						
ANR	8649087	Symbol	pm		8649018						
ANR	8649088	Symbol	* me		8649018						
ANR	8649089	Function	gama_modification_init	3312:0:101387:101753							
ANR	8649090	FunctionDef	"gama_modification_init (gama_modification * me , png_modifier * pm , double gammad)"		8649089	0					
ANR	8649091	CompoundStatement		3314:0:101478:101753	8649089	0					
ANR	8649092	IdentifierDeclStatement	double g ;	3315:3:101483:101491	8649089	0	True				
ANR	8649093	IdentifierDecl	g		8649089	0					
ANR	8649094	IdentifierDeclType	double		8649089	0					
ANR	8649095	Identifier	g		8649089	1					
ANR	8649096	ExpressionStatement	modification_init ( & me -> this )	3317:3:101497:101525	8649089	1	True				
ANR	8649097	CallExpression	modification_init ( & me -> this )		8649089	0					
ANR	8649098	Callee	modification_init		8649089	0					
ANR	8649099	Identifier	modification_init		8649089	0					
ANR	8649100	ArgumentList	& me -> this		8649089	1					
ANR	8649101	Argument	& me -> this		8649089	0					
ANR	8649102	UnaryOperationExpression	& me -> this		8649089	0					
ANR	8649103	UnaryOperator	&		8649089	0					
ANR	8649104	PtrMemberAccess	me -> this		8649089	1					
ANR	8649105	Identifier	me		8649089	0					
ANR	8649106	Identifier	this		8649089	1					
ANR	8649107	ExpressionStatement	me -> this . chunk = CHUNK_gAMA	3318:3:101530:101557	8649089	2	True				
ANR	8649108	AssignmentExpression	me -> this . chunk = CHUNK_gAMA		8649089	0		=			
ANR	8649109	MemberAccess	me -> this . chunk		8649089	0					
ANR	8649110	PtrMemberAccess	me -> this		8649089	0					
ANR	8649111	Identifier	me		8649089	0					
ANR	8649112	Identifier	this		8649089	1					
ANR	8649113	Identifier	chunk		8649089	1					
ANR	8649114	Identifier	CHUNK_gAMA		8649089	1					
ANR	8649115	ExpressionStatement	me -> this . modify_fn = gama_modify	3319:3:101562:101594	8649089	3	True				
ANR	8649116	AssignmentExpression	me -> this . modify_fn = gama_modify		8649089	0		=			
ANR	8649117	MemberAccess	me -> this . modify_fn		8649089	0					
ANR	8649118	PtrMemberAccess	me -> this		8649089	0					
ANR	8649119	Identifier	me		8649089	0					
ANR	8649120	Identifier	this		8649089	1					
ANR	8649121	Identifier	modify_fn		8649089	1					
ANR	8649122	Identifier	gama_modify		8649089	1					
ANR	8649123	ExpressionStatement	me -> this . add = CHUNK_PLTE	3320:3:101599:101624	8649089	4	True				
ANR	8649124	AssignmentExpression	me -> this . add = CHUNK_PLTE		8649089	0		=			
ANR	8649125	MemberAccess	me -> this . add		8649089	0					
ANR	8649126	PtrMemberAccess	me -> this		8649089	0					
ANR	8649127	Identifier	me		8649089	0					
ANR	8649128	Identifier	this		8649089	1					
ANR	8649129	Identifier	add		8649089	1					
ANR	8649130	Identifier	CHUNK_PLTE		8649089	1					
ANR	8649131	ExpressionStatement	g = fix ( gammad )	3321:3:101629:101644	8649089	5	True				
ANR	8649132	AssignmentExpression	g = fix ( gammad )		8649089	0		=			
ANR	8649133	Identifier	g		8649089	0					
ANR	8649134	CallExpression	fix ( gammad )		8649089	1					
ANR	8649135	Callee	fix		8649089	0					
ANR	8649136	Identifier	fix		8649089	0					
ANR	8649137	ArgumentList	gammad		8649089	1					
ANR	8649138	Argument	gammad		8649089	0					
ANR	8649139	Identifier	gammad		8649089	0					
ANR	8649140	ExpressionStatement	me -> gamma = ( png_fixed_point ) g	3322:3:101649:101679	8649089	6	True				
ANR	8649141	AssignmentExpression	me -> gamma = ( png_fixed_point ) g		8649089	0		=			
ANR	8649142	PtrMemberAccess	me -> gamma		8649089	0					
ANR	8649143	Identifier	me		8649089	0					
ANR	8649144	Identifier	gamma		8649089	1					
ANR	8649145	CastExpression	( png_fixed_point ) g		8649089	1					
ANR	8649146	CastTarget	png_fixed_point		8649089	0					
ANR	8649147	Identifier	g		8649089	1					
ANR	8649148	ExpressionStatement	me -> this . next = pm -> modifications	3323:3:101684:101717	8649089	7	True				
ANR	8649149	AssignmentExpression	me -> this . next = pm -> modifications		8649089	0		=			
ANR	8649150	MemberAccess	me -> this . next		8649089	0					
ANR	8649151	PtrMemberAccess	me -> this		8649089	0					
ANR	8649152	Identifier	me		8649089	0					
ANR	8649153	Identifier	this		8649089	1					
ANR	8649154	Identifier	next		8649089	1					
ANR	8649155	PtrMemberAccess	pm -> modifications		8649089	1					
ANR	8649156	Identifier	pm		8649089	0					
ANR	8649157	Identifier	modifications		8649089	1					
ANR	8649158	ExpressionStatement	pm -> modifications = & me -> this	3324:3:101722:101751	8649089	8	True				
ANR	8649159	AssignmentExpression	pm -> modifications = & me -> this		8649089	0		=			
ANR	8649160	PtrMemberAccess	pm -> modifications		8649089	0					
ANR	8649161	Identifier	pm		8649089	0					
ANR	8649162	Identifier	modifications		8649089	1					
ANR	8649163	UnaryOperationExpression	& me -> this		8649089	1					
ANR	8649164	UnaryOperator	&		8649089	0					
ANR	8649165	PtrMemberAccess	me -> this		8649089	1					
ANR	8649166	Identifier	me		8649089	0					
ANR	8649167	Identifier	this		8649089	1					
ANR	8649168	ReturnType	static void		8649089	1					
ANR	8649169	Identifier	gama_modification_init		8649089	2					
ANR	8649170	ParameterList	"gama_modification * me , png_modifier * pm , double gammad"		8649089	3					
ANR	8649171	Parameter	gama_modification * me	3313:23:101422:101442	8649089	0	True				
ANR	8649172	ParameterType	gama_modification *		8649089	0					
ANR	8649173	Identifier	me		8649089	1					
ANR	8649174	Parameter	png_modifier * pm	3313:46:101445:101460	8649089	1	True				
ANR	8649175	ParameterType	png_modifier *		8649089	0					
ANR	8649176	Identifier	pm		8649089	1					
ANR	8649177	Parameter	double gammad	3313:64:101463:101475	8649089	2	True				
ANR	8649178	ParameterType	double		8649089	0					
ANR	8649179	Identifier	gammad		8649089	1					
ANR	8649180	CFGEntryNode	ENTRY		8649089		True				
ANR	8649181	CFGExitNode	EXIT		8649089		True				
ANR	8649182	Symbol	* pm		8649089						
ANR	8649183	Symbol	& me -> this		8649089						
ANR	8649184	Symbol	CHUNK_PLTE		8649089						
ANR	8649185	Symbol	gama_modify		8649089						
ANR	8649186	Symbol	me -> this . next		8649089						
ANR	8649187	Symbol	pm -> modifications		8649089						
ANR	8649188	Symbol	g		8649089						
ANR	8649189	Symbol	CHUNK_gAMA		8649089						
ANR	8649190	Symbol	me -> this . modify_fn		8649089						
ANR	8649191	Symbol	me -> this		8649089						
ANR	8649192	Symbol	me -> this . add		8649089						
ANR	8649193	Symbol	me -> this . chunk		8649089						
ANR	8649194	Symbol	gammad		8649089						
ANR	8649195	Symbol	me -> gamma		8649089						
ANR	8649196	Symbol	fix		8649089						
ANR	8649197	Symbol	me		8649089						
ANR	8649198	Symbol	pm		8649089						
ANR	8649199	Symbol	* me		8649089						
ANR	8649200	ClassDef	chrm_modification	3327:8:101764:101941							
ANR	8649201	DeclStmt									
ANR	8649202	Decl							png_modification	png_modification	this
ANR	8649203	DeclStmt									
ANR	8649204	Decl							const color_encoding	const color_encoding *	encoding
ANR	8649205	DeclStmt									
ANR	8649206	Decl							png_fixed_point	png_fixed_point	wx
ANR	8649207	Decl							png_fixed_point	png_fixed_point	wy
ANR	8649208	Decl							png_fixed_point	png_fixed_point	rx
ANR	8649209	Decl							png_fixed_point	png_fixed_point	ry
ANR	8649210	Decl							png_fixed_point	png_fixed_point	gx
ANR	8649211	Decl							png_fixed_point	png_fixed_point	gy
ANR	8649212	Decl							png_fixed_point	png_fixed_point	bx
ANR	8649213	Decl							png_fixed_point	png_fixed_point	by
ANR	8649214	DeclStmt									
ANR	8649215	Decl							chrm_modification	chrm_modification	chrm_modification
ANR	8649216	Function	chrm_modify	3334:0:101944:102738							
ANR	8649217	FunctionDef	"chrm_modify (png_modifier * pm , png_modification * me , int add)"		8649216	0					
ANR	8649218	CompoundStatement		3336:0:102016:102738	8649216	0					
ANR	8649219	Statement	UNUSED	3337:3:102021:102026	8649216	0	True				
ANR	8649220	ExpressionStatement	"( add ) png_save_uint_32 ( pm -> buffer , 32 )"	3337:9:102027:102147	8649216	1	True				
ANR	8649221	CastExpression	"( add ) png_save_uint_32 ( pm -> buffer , 32 )"		8649216	0					
ANR	8649222	CastTarget	add		8649216	0					
ANR	8649223	CallExpression	"png_save_uint_32 ( pm -> buffer , 32 )"		8649216	1					
ANR	8649224	Callee	png_save_uint_32		8649216	0					
ANR	8649225	Identifier	png_save_uint_32		8649216	0					
ANR	8649226	ArgumentList	pm -> buffer		8649216	1					
ANR	8649227	Argument	pm -> buffer		8649216	0					
ANR	8649228	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649229	Identifier	pm		8649216	0					
ANR	8649230	Identifier	buffer		8649216	1					
ANR	8649231	Argument	32		8649216	1					
ANR	8649232	PrimaryExpression	32		8649216	0					
ANR	8649233	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_cHRM )"	3340:3:102152:102195	8649216	2	True				
ANR	8649234	CallExpression	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_cHRM )"		8649216	0					
ANR	8649235	Callee	png_save_uint_32		8649216	0					
ANR	8649236	Identifier	png_save_uint_32		8649216	0					
ANR	8649237	ArgumentList	pm -> buffer + 4		8649216	1					
ANR	8649238	Argument	pm -> buffer + 4		8649216	0					
ANR	8649239	AdditiveExpression	pm -> buffer + 4		8649216	0		+			
ANR	8649240	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649241	Identifier	pm		8649216	0					
ANR	8649242	Identifier	buffer		8649216	1					
ANR	8649243	PrimaryExpression	4		8649216	1					
ANR	8649244	Argument	CHUNK_cHRM		8649216	1					
ANR	8649245	Identifier	CHUNK_cHRM		8649216	0					
ANR	8649246	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 8 , ( ( chrm_modification * ) me ) -> wx )"	3341:3:102200:102261	8649216	3	True				
ANR	8649247	CallExpression	"png_save_uint_32 ( pm -> buffer + 8 , ( ( chrm_modification * ) me ) -> wx )"		8649216	0					
ANR	8649248	Callee	png_save_uint_32		8649216	0					
ANR	8649249	Identifier	png_save_uint_32		8649216	0					
ANR	8649250	ArgumentList	pm -> buffer + 8		8649216	1					
ANR	8649251	Argument	pm -> buffer + 8		8649216	0					
ANR	8649252	AdditiveExpression	pm -> buffer + 8		8649216	0		+			
ANR	8649253	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649254	Identifier	pm		8649216	0					
ANR	8649255	Identifier	buffer		8649216	1					
ANR	8649256	PrimaryExpression	8		8649216	1					
ANR	8649257	Argument	( ( chrm_modification * ) me ) -> wx		8649216	1					
ANR	8649258	PtrMemberAccess	( ( chrm_modification * ) me ) -> wx		8649216	0					
ANR	8649259	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649260	CastTarget	chrm_modification *		8649216	0					
ANR	8649261	Identifier	me		8649216	1					
ANR	8649262	Identifier	wx		8649216	1					
ANR	8649263	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 12 , ( ( chrm_modification * ) me ) -> wy )"	3342:3:102266:102327	8649216	4	True				
ANR	8649264	CallExpression	"png_save_uint_32 ( pm -> buffer + 12 , ( ( chrm_modification * ) me ) -> wy )"		8649216	0					
ANR	8649265	Callee	png_save_uint_32		8649216	0					
ANR	8649266	Identifier	png_save_uint_32		8649216	0					
ANR	8649267	ArgumentList	pm -> buffer + 12		8649216	1					
ANR	8649268	Argument	pm -> buffer + 12		8649216	0					
ANR	8649269	AdditiveExpression	pm -> buffer + 12		8649216	0		+			
ANR	8649270	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649271	Identifier	pm		8649216	0					
ANR	8649272	Identifier	buffer		8649216	1					
ANR	8649273	PrimaryExpression	12		8649216	1					
ANR	8649274	Argument	( ( chrm_modification * ) me ) -> wy		8649216	1					
ANR	8649275	PtrMemberAccess	( ( chrm_modification * ) me ) -> wy		8649216	0					
ANR	8649276	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649277	CastTarget	chrm_modification *		8649216	0					
ANR	8649278	Identifier	me		8649216	1					
ANR	8649279	Identifier	wy		8649216	1					
ANR	8649280	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 16 , ( ( chrm_modification * ) me ) -> rx )"	3343:3:102332:102393	8649216	5	True				
ANR	8649281	CallExpression	"png_save_uint_32 ( pm -> buffer + 16 , ( ( chrm_modification * ) me ) -> rx )"		8649216	0					
ANR	8649282	Callee	png_save_uint_32		8649216	0					
ANR	8649283	Identifier	png_save_uint_32		8649216	0					
ANR	8649284	ArgumentList	pm -> buffer + 16		8649216	1					
ANR	8649285	Argument	pm -> buffer + 16		8649216	0					
ANR	8649286	AdditiveExpression	pm -> buffer + 16		8649216	0		+			
ANR	8649287	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649288	Identifier	pm		8649216	0					
ANR	8649289	Identifier	buffer		8649216	1					
ANR	8649290	PrimaryExpression	16		8649216	1					
ANR	8649291	Argument	( ( chrm_modification * ) me ) -> rx		8649216	1					
ANR	8649292	PtrMemberAccess	( ( chrm_modification * ) me ) -> rx		8649216	0					
ANR	8649293	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649294	CastTarget	chrm_modification *		8649216	0					
ANR	8649295	Identifier	me		8649216	1					
ANR	8649296	Identifier	rx		8649216	1					
ANR	8649297	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 20 , ( ( chrm_modification * ) me ) -> ry )"	3344:3:102398:102459	8649216	6	True				
ANR	8649298	CallExpression	"png_save_uint_32 ( pm -> buffer + 20 , ( ( chrm_modification * ) me ) -> ry )"		8649216	0					
ANR	8649299	Callee	png_save_uint_32		8649216	0					
ANR	8649300	Identifier	png_save_uint_32		8649216	0					
ANR	8649301	ArgumentList	pm -> buffer + 20		8649216	1					
ANR	8649302	Argument	pm -> buffer + 20		8649216	0					
ANR	8649303	AdditiveExpression	pm -> buffer + 20		8649216	0		+			
ANR	8649304	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649305	Identifier	pm		8649216	0					
ANR	8649306	Identifier	buffer		8649216	1					
ANR	8649307	PrimaryExpression	20		8649216	1					
ANR	8649308	Argument	( ( chrm_modification * ) me ) -> ry		8649216	1					
ANR	8649309	PtrMemberAccess	( ( chrm_modification * ) me ) -> ry		8649216	0					
ANR	8649310	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649311	CastTarget	chrm_modification *		8649216	0					
ANR	8649312	Identifier	me		8649216	1					
ANR	8649313	Identifier	ry		8649216	1					
ANR	8649314	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 24 , ( ( chrm_modification * ) me ) -> gx )"	3345:3:102464:102525	8649216	7	True				
ANR	8649315	CallExpression	"png_save_uint_32 ( pm -> buffer + 24 , ( ( chrm_modification * ) me ) -> gx )"		8649216	0					
ANR	8649316	Callee	png_save_uint_32		8649216	0					
ANR	8649317	Identifier	png_save_uint_32		8649216	0					
ANR	8649318	ArgumentList	pm -> buffer + 24		8649216	1					
ANR	8649319	Argument	pm -> buffer + 24		8649216	0					
ANR	8649320	AdditiveExpression	pm -> buffer + 24		8649216	0		+			
ANR	8649321	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649322	Identifier	pm		8649216	0					
ANR	8649323	Identifier	buffer		8649216	1					
ANR	8649324	PrimaryExpression	24		8649216	1					
ANR	8649325	Argument	( ( chrm_modification * ) me ) -> gx		8649216	1					
ANR	8649326	PtrMemberAccess	( ( chrm_modification * ) me ) -> gx		8649216	0					
ANR	8649327	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649328	CastTarget	chrm_modification *		8649216	0					
ANR	8649329	Identifier	me		8649216	1					
ANR	8649330	Identifier	gx		8649216	1					
ANR	8649331	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 28 , ( ( chrm_modification * ) me ) -> gy )"	3346:3:102530:102591	8649216	8	True				
ANR	8649332	CallExpression	"png_save_uint_32 ( pm -> buffer + 28 , ( ( chrm_modification * ) me ) -> gy )"		8649216	0					
ANR	8649333	Callee	png_save_uint_32		8649216	0					
ANR	8649334	Identifier	png_save_uint_32		8649216	0					
ANR	8649335	ArgumentList	pm -> buffer + 28		8649216	1					
ANR	8649336	Argument	pm -> buffer + 28		8649216	0					
ANR	8649337	AdditiveExpression	pm -> buffer + 28		8649216	0		+			
ANR	8649338	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649339	Identifier	pm		8649216	0					
ANR	8649340	Identifier	buffer		8649216	1					
ANR	8649341	PrimaryExpression	28		8649216	1					
ANR	8649342	Argument	( ( chrm_modification * ) me ) -> gy		8649216	1					
ANR	8649343	PtrMemberAccess	( ( chrm_modification * ) me ) -> gy		8649216	0					
ANR	8649344	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649345	CastTarget	chrm_modification *		8649216	0					
ANR	8649346	Identifier	me		8649216	1					
ANR	8649347	Identifier	gy		8649216	1					
ANR	8649348	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 32 , ( ( chrm_modification * ) me ) -> bx )"	3347:3:102596:102657	8649216	9	True				
ANR	8649349	CallExpression	"png_save_uint_32 ( pm -> buffer + 32 , ( ( chrm_modification * ) me ) -> bx )"		8649216	0					
ANR	8649350	Callee	png_save_uint_32		8649216	0					
ANR	8649351	Identifier	png_save_uint_32		8649216	0					
ANR	8649352	ArgumentList	pm -> buffer + 32		8649216	1					
ANR	8649353	Argument	pm -> buffer + 32		8649216	0					
ANR	8649354	AdditiveExpression	pm -> buffer + 32		8649216	0		+			
ANR	8649355	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649356	Identifier	pm		8649216	0					
ANR	8649357	Identifier	buffer		8649216	1					
ANR	8649358	PrimaryExpression	32		8649216	1					
ANR	8649359	Argument	( ( chrm_modification * ) me ) -> bx		8649216	1					
ANR	8649360	PtrMemberAccess	( ( chrm_modification * ) me ) -> bx		8649216	0					
ANR	8649361	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649362	CastTarget	chrm_modification *		8649216	0					
ANR	8649363	Identifier	me		8649216	1					
ANR	8649364	Identifier	bx		8649216	1					
ANR	8649365	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 36 , ( ( chrm_modification * ) me ) -> by )"	3348:3:102662:102723	8649216	10	True				
ANR	8649366	CallExpression	"png_save_uint_32 ( pm -> buffer + 36 , ( ( chrm_modification * ) me ) -> by )"		8649216	0					
ANR	8649367	Callee	png_save_uint_32		8649216	0					
ANR	8649368	Identifier	png_save_uint_32		8649216	0					
ANR	8649369	ArgumentList	pm -> buffer + 36		8649216	1					
ANR	8649370	Argument	pm -> buffer + 36		8649216	0					
ANR	8649371	AdditiveExpression	pm -> buffer + 36		8649216	0		+			
ANR	8649372	PtrMemberAccess	pm -> buffer		8649216	0					
ANR	8649373	Identifier	pm		8649216	0					
ANR	8649374	Identifier	buffer		8649216	1					
ANR	8649375	PrimaryExpression	36		8649216	1					
ANR	8649376	Argument	( ( chrm_modification * ) me ) -> by		8649216	1					
ANR	8649377	PtrMemberAccess	( ( chrm_modification * ) me ) -> by		8649216	0					
ANR	8649378	CastExpression	( chrm_modification * ) me		8649216	0					
ANR	8649379	CastTarget	chrm_modification *		8649216	0					
ANR	8649380	Identifier	me		8649216	1					
ANR	8649381	Identifier	by		8649216	1					
ANR	8649382	ReturnStatement	return 1 ;	3349:3:102728:102736	8649216	11	True				
ANR	8649383	PrimaryExpression	1		8649216	0					
ANR	8649384	ReturnType	static int		8649216	1					
ANR	8649385	Identifier	chrm_modify		8649216	2					
ANR	8649386	ParameterList	"png_modifier * pm , png_modification * me , int add"		8649216	3					
ANR	8649387	Parameter	png_modifier * pm	3335:12:101967:101982	8649216	0	True				
ANR	8649388	ParameterType	png_modifier *		8649216	0					
ANR	8649389	Identifier	pm		8649216	1					
ANR	8649390	Parameter	png_modification * me	3335:30:101985:102004	8649216	1	True				
ANR	8649391	ParameterType	png_modification *		8649216	0					
ANR	8649392	Identifier	me		8649216	1					
ANR	8649393	Parameter	int add	3335:52:102007:102013	8649216	2	True				
ANR	8649394	ParameterType	int		8649216	0					
ANR	8649395	Identifier	add		8649216	1					
ANR	8649396	CFGEntryNode	ENTRY		8649216		True				
ANR	8649397	CFGExitNode	EXIT		8649216		True				
ANR	8649398	Symbol	add		8649216						
ANR	8649399	Symbol	* pm		8649216						
ANR	8649400	Symbol	( ( chrm_modification * ) me ) -> gy		8649216						
ANR	8649401	Symbol	( ( chrm_modification * ) me ) -> gx		8649216						
ANR	8649402	Symbol	( ( chrm_modification * ) me ) -> by		8649216						
ANR	8649403	Symbol	( ( chrm_modification * ) me ) -> bx		8649216						
ANR	8649404	Symbol	( ( chrm_modification * ) me ) -> wy		8649216						
ANR	8649405	Symbol	CHUNK_cHRM		8649216						
ANR	8649406	Symbol	( ( chrm_modification * ) me ) -> wx		8649216						
ANR	8649407	Symbol	pm -> buffer		8649216						
ANR	8649408	Symbol	me		8649216						
ANR	8649409	Symbol	pm		8649216						
ANR	8649410	Symbol	* me		8649216						
ANR	8649411	Symbol	( ( chrm_modification * ) me ) -> ry		8649216						
ANR	8649412	Symbol	( ( chrm_modification * ) me ) -> rx		8649216						
ANR	8649413	Function	chrm_modification_init	3352:0:102741:103580							
ANR	8649414	FunctionDef	"chrm_modification_init (chrm_modification * me , png_modifier * pm , const color_encoding * encoding)"		8649413	0					
ANR	8649415	CompoundStatement		3355:0:102852:103580	8649413	0					
ANR	8649416	IdentifierDeclStatement	CIE_color white = white_point ( encoding ) ;	3356:3:102857:102896	8649413	0	True				
ANR	8649417	IdentifierDecl	white = white_point ( encoding )		8649413	0					
ANR	8649418	IdentifierDeclType	CIE_color		8649413	0					
ANR	8649419	Identifier	white		8649413	1					
ANR	8649420	AssignmentExpression	white = white_point ( encoding )		8649413	2		=			
ANR	8649421	Identifier	white		8649413	0					
ANR	8649422	CallExpression	white_point ( encoding )		8649413	1					
ANR	8649423	Callee	white_point		8649413	0					
ANR	8649424	Identifier	white_point		8649413	0					
ANR	8649425	ArgumentList	encoding		8649413	1					
ANR	8649426	Argument	encoding		8649413	0					
ANR	8649427	Identifier	encoding		8649413	0					
ANR	8649428	ExpressionStatement	me -> encoding = encoding	3359:3:102932:102955	8649413	1	True				
ANR	8649429	AssignmentExpression	me -> encoding = encoding		8649413	0		=			
ANR	8649430	PtrMemberAccess	me -> encoding		8649413	0					
ANR	8649431	Identifier	me		8649413	0					
ANR	8649432	Identifier	encoding		8649413	1					
ANR	8649433	Identifier	encoding		8649413	1					
ANR	8649434	ExpressionStatement	me -> wx = fix ( chromaticity_x ( white ) )	3362:3:103003:103038	8649413	2	True				
ANR	8649435	AssignmentExpression	me -> wx = fix ( chromaticity_x ( white ) )		8649413	0		=			
ANR	8649436	PtrMemberAccess	me -> wx		8649413	0					
ANR	8649437	Identifier	me		8649413	0					
ANR	8649438	Identifier	wx		8649413	1					
ANR	8649439	CallExpression	fix ( chromaticity_x ( white ) )		8649413	1					
ANR	8649440	Callee	fix		8649413	0					
ANR	8649441	Identifier	fix		8649413	0					
ANR	8649442	ArgumentList	chromaticity_x ( white )		8649413	1					
ANR	8649443	Argument	chromaticity_x ( white )		8649413	0					
ANR	8649444	CallExpression	chromaticity_x ( white )		8649413	0					
ANR	8649445	Callee	chromaticity_x		8649413	0					
ANR	8649446	Identifier	chromaticity_x		8649413	0					
ANR	8649447	ArgumentList	white		8649413	1					
ANR	8649448	Argument	white		8649413	0					
ANR	8649449	Identifier	white		8649413	0					
ANR	8649450	ExpressionStatement	me -> wy = fix ( chromaticity_y ( white ) )	3363:3:103043:103078	8649413	3	True				
ANR	8649451	AssignmentExpression	me -> wy = fix ( chromaticity_y ( white ) )		8649413	0		=			
ANR	8649452	PtrMemberAccess	me -> wy		8649413	0					
ANR	8649453	Identifier	me		8649413	0					
ANR	8649454	Identifier	wy		8649413	1					
ANR	8649455	CallExpression	fix ( chromaticity_y ( white ) )		8649413	1					
ANR	8649456	Callee	fix		8649413	0					
ANR	8649457	Identifier	fix		8649413	0					
ANR	8649458	ArgumentList	chromaticity_y ( white )		8649413	1					
ANR	8649459	Argument	chromaticity_y ( white )		8649413	0					
ANR	8649460	CallExpression	chromaticity_y ( white )		8649413	0					
ANR	8649461	Callee	chromaticity_y		8649413	0					
ANR	8649462	Identifier	chromaticity_y		8649413	0					
ANR	8649463	ArgumentList	white		8649413	1					
ANR	8649464	Argument	white		8649413	0					
ANR	8649465	Identifier	white		8649413	0					
ANR	8649466	ExpressionStatement	me -> rx = fix ( chromaticity_x ( encoding -> red ) )	3365:3:103084:103127	8649413	4	True				
ANR	8649467	AssignmentExpression	me -> rx = fix ( chromaticity_x ( encoding -> red ) )		8649413	0		=			
ANR	8649468	PtrMemberAccess	me -> rx		8649413	0					
ANR	8649469	Identifier	me		8649413	0					
ANR	8649470	Identifier	rx		8649413	1					
ANR	8649471	CallExpression	fix ( chromaticity_x ( encoding -> red ) )		8649413	1					
ANR	8649472	Callee	fix		8649413	0					
ANR	8649473	Identifier	fix		8649413	0					
ANR	8649474	ArgumentList	chromaticity_x ( encoding -> red )		8649413	1					
ANR	8649475	Argument	chromaticity_x ( encoding -> red )		8649413	0					
ANR	8649476	CallExpression	chromaticity_x ( encoding -> red )		8649413	0					
ANR	8649477	Callee	chromaticity_x		8649413	0					
ANR	8649478	Identifier	chromaticity_x		8649413	0					
ANR	8649479	ArgumentList	encoding -> red		8649413	1					
ANR	8649480	Argument	encoding -> red		8649413	0					
ANR	8649481	PtrMemberAccess	encoding -> red		8649413	0					
ANR	8649482	Identifier	encoding		8649413	0					
ANR	8649483	Identifier	red		8649413	1					
ANR	8649484	ExpressionStatement	me -> ry = fix ( chromaticity_y ( encoding -> red ) )	3366:3:103132:103175	8649413	5	True				
ANR	8649485	AssignmentExpression	me -> ry = fix ( chromaticity_y ( encoding -> red ) )		8649413	0		=			
ANR	8649486	PtrMemberAccess	me -> ry		8649413	0					
ANR	8649487	Identifier	me		8649413	0					
ANR	8649488	Identifier	ry		8649413	1					
ANR	8649489	CallExpression	fix ( chromaticity_y ( encoding -> red ) )		8649413	1					
ANR	8649490	Callee	fix		8649413	0					
ANR	8649491	Identifier	fix		8649413	0					
ANR	8649492	ArgumentList	chromaticity_y ( encoding -> red )		8649413	1					
ANR	8649493	Argument	chromaticity_y ( encoding -> red )		8649413	0					
ANR	8649494	CallExpression	chromaticity_y ( encoding -> red )		8649413	0					
ANR	8649495	Callee	chromaticity_y		8649413	0					
ANR	8649496	Identifier	chromaticity_y		8649413	0					
ANR	8649497	ArgumentList	encoding -> red		8649413	1					
ANR	8649498	Argument	encoding -> red		8649413	0					
ANR	8649499	PtrMemberAccess	encoding -> red		8649413	0					
ANR	8649500	Identifier	encoding		8649413	0					
ANR	8649501	Identifier	red		8649413	1					
ANR	8649502	ExpressionStatement	me -> gx = fix ( chromaticity_x ( encoding -> green ) )	3367:3:103180:103225	8649413	6	True				
ANR	8649503	AssignmentExpression	me -> gx = fix ( chromaticity_x ( encoding -> green ) )		8649413	0		=			
ANR	8649504	PtrMemberAccess	me -> gx		8649413	0					
ANR	8649505	Identifier	me		8649413	0					
ANR	8649506	Identifier	gx		8649413	1					
ANR	8649507	CallExpression	fix ( chromaticity_x ( encoding -> green ) )		8649413	1					
ANR	8649508	Callee	fix		8649413	0					
ANR	8649509	Identifier	fix		8649413	0					
ANR	8649510	ArgumentList	chromaticity_x ( encoding -> green )		8649413	1					
ANR	8649511	Argument	chromaticity_x ( encoding -> green )		8649413	0					
ANR	8649512	CallExpression	chromaticity_x ( encoding -> green )		8649413	0					
ANR	8649513	Callee	chromaticity_x		8649413	0					
ANR	8649514	Identifier	chromaticity_x		8649413	0					
ANR	8649515	ArgumentList	encoding -> green		8649413	1					
ANR	8649516	Argument	encoding -> green		8649413	0					
ANR	8649517	PtrMemberAccess	encoding -> green		8649413	0					
ANR	8649518	Identifier	encoding		8649413	0					
ANR	8649519	Identifier	green		8649413	1					
ANR	8649520	ExpressionStatement	me -> gy = fix ( chromaticity_y ( encoding -> green ) )	3368:3:103230:103275	8649413	7	True				
ANR	8649521	AssignmentExpression	me -> gy = fix ( chromaticity_y ( encoding -> green ) )		8649413	0		=			
ANR	8649522	PtrMemberAccess	me -> gy		8649413	0					
ANR	8649523	Identifier	me		8649413	0					
ANR	8649524	Identifier	gy		8649413	1					
ANR	8649525	CallExpression	fix ( chromaticity_y ( encoding -> green ) )		8649413	1					
ANR	8649526	Callee	fix		8649413	0					
ANR	8649527	Identifier	fix		8649413	0					
ANR	8649528	ArgumentList	chromaticity_y ( encoding -> green )		8649413	1					
ANR	8649529	Argument	chromaticity_y ( encoding -> green )		8649413	0					
ANR	8649530	CallExpression	chromaticity_y ( encoding -> green )		8649413	0					
ANR	8649531	Callee	chromaticity_y		8649413	0					
ANR	8649532	Identifier	chromaticity_y		8649413	0					
ANR	8649533	ArgumentList	encoding -> green		8649413	1					
ANR	8649534	Argument	encoding -> green		8649413	0					
ANR	8649535	PtrMemberAccess	encoding -> green		8649413	0					
ANR	8649536	Identifier	encoding		8649413	0					
ANR	8649537	Identifier	green		8649413	1					
ANR	8649538	ExpressionStatement	me -> bx = fix ( chromaticity_x ( encoding -> blue ) )	3369:3:103280:103324	8649413	8	True				
ANR	8649539	AssignmentExpression	me -> bx = fix ( chromaticity_x ( encoding -> blue ) )		8649413	0		=			
ANR	8649540	PtrMemberAccess	me -> bx		8649413	0					
ANR	8649541	Identifier	me		8649413	0					
ANR	8649542	Identifier	bx		8649413	1					
ANR	8649543	CallExpression	fix ( chromaticity_x ( encoding -> blue ) )		8649413	1					
ANR	8649544	Callee	fix		8649413	0					
ANR	8649545	Identifier	fix		8649413	0					
ANR	8649546	ArgumentList	chromaticity_x ( encoding -> blue )		8649413	1					
ANR	8649547	Argument	chromaticity_x ( encoding -> blue )		8649413	0					
ANR	8649548	CallExpression	chromaticity_x ( encoding -> blue )		8649413	0					
ANR	8649549	Callee	chromaticity_x		8649413	0					
ANR	8649550	Identifier	chromaticity_x		8649413	0					
ANR	8649551	ArgumentList	encoding -> blue		8649413	1					
ANR	8649552	Argument	encoding -> blue		8649413	0					
ANR	8649553	PtrMemberAccess	encoding -> blue		8649413	0					
ANR	8649554	Identifier	encoding		8649413	0					
ANR	8649555	Identifier	blue		8649413	1					
ANR	8649556	ExpressionStatement	me -> by = fix ( chromaticity_y ( encoding -> blue ) )	3370:3:103329:103373	8649413	9	True				
ANR	8649557	AssignmentExpression	me -> by = fix ( chromaticity_y ( encoding -> blue ) )		8649413	0		=			
ANR	8649558	PtrMemberAccess	me -> by		8649413	0					
ANR	8649559	Identifier	me		8649413	0					
ANR	8649560	Identifier	by		8649413	1					
ANR	8649561	CallExpression	fix ( chromaticity_y ( encoding -> blue ) )		8649413	1					
ANR	8649562	Callee	fix		8649413	0					
ANR	8649563	Identifier	fix		8649413	0					
ANR	8649564	ArgumentList	chromaticity_y ( encoding -> blue )		8649413	1					
ANR	8649565	Argument	chromaticity_y ( encoding -> blue )		8649413	0					
ANR	8649566	CallExpression	chromaticity_y ( encoding -> blue )		8649413	0					
ANR	8649567	Callee	chromaticity_y		8649413	0					
ANR	8649568	Identifier	chromaticity_y		8649413	0					
ANR	8649569	ArgumentList	encoding -> blue		8649413	1					
ANR	8649570	Argument	encoding -> blue		8649413	0					
ANR	8649571	PtrMemberAccess	encoding -> blue		8649413	0					
ANR	8649572	Identifier	encoding		8649413	0					
ANR	8649573	Identifier	blue		8649413	1					
ANR	8649574	ExpressionStatement	modification_init ( & me -> this )	3372:3:103379:103407	8649413	10	True				
ANR	8649575	CallExpression	modification_init ( & me -> this )		8649413	0					
ANR	8649576	Callee	modification_init		8649413	0					
ANR	8649577	Identifier	modification_init		8649413	0					
ANR	8649578	ArgumentList	& me -> this		8649413	1					
ANR	8649579	Argument	& me -> this		8649413	0					
ANR	8649580	UnaryOperationExpression	& me -> this		8649413	0					
ANR	8649581	UnaryOperator	&		8649413	0					
ANR	8649582	PtrMemberAccess	me -> this		8649413	1					
ANR	8649583	Identifier	me		8649413	0					
ANR	8649584	Identifier	this		8649413	1					
ANR	8649585	ExpressionStatement	me -> this . chunk = CHUNK_cHRM	3373:3:103412:103439	8649413	11	True				
ANR	8649586	AssignmentExpression	me -> this . chunk = CHUNK_cHRM		8649413	0		=			
ANR	8649587	MemberAccess	me -> this . chunk		8649413	0					
ANR	8649588	PtrMemberAccess	me -> this		8649413	0					
ANR	8649589	Identifier	me		8649413	0					
ANR	8649590	Identifier	this		8649413	1					
ANR	8649591	Identifier	chunk		8649413	1					
ANR	8649592	Identifier	CHUNK_cHRM		8649413	1					
ANR	8649593	ExpressionStatement	me -> this . modify_fn = chrm_modify	3374:3:103444:103476	8649413	12	True				
ANR	8649594	AssignmentExpression	me -> this . modify_fn = chrm_modify		8649413	0		=			
ANR	8649595	MemberAccess	me -> this . modify_fn		8649413	0					
ANR	8649596	PtrMemberAccess	me -> this		8649413	0					
ANR	8649597	Identifier	me		8649413	0					
ANR	8649598	Identifier	this		8649413	1					
ANR	8649599	Identifier	modify_fn		8649413	1					
ANR	8649600	Identifier	chrm_modify		8649413	1					
ANR	8649601	ExpressionStatement	me -> this . add = CHUNK_PLTE	3375:3:103481:103506	8649413	13	True				
ANR	8649602	AssignmentExpression	me -> this . add = CHUNK_PLTE		8649413	0		=			
ANR	8649603	MemberAccess	me -> this . add		8649413	0					
ANR	8649604	PtrMemberAccess	me -> this		8649413	0					
ANR	8649605	Identifier	me		8649413	0					
ANR	8649606	Identifier	this		8649413	1					
ANR	8649607	Identifier	add		8649413	1					
ANR	8649608	Identifier	CHUNK_PLTE		8649413	1					
ANR	8649609	ExpressionStatement	me -> this . next = pm -> modifications	3376:3:103511:103544	8649413	14	True				
ANR	8649610	AssignmentExpression	me -> this . next = pm -> modifications		8649413	0		=			
ANR	8649611	MemberAccess	me -> this . next		8649413	0					
ANR	8649612	PtrMemberAccess	me -> this		8649413	0					
ANR	8649613	Identifier	me		8649413	0					
ANR	8649614	Identifier	this		8649413	1					
ANR	8649615	Identifier	next		8649413	1					
ANR	8649616	PtrMemberAccess	pm -> modifications		8649413	1					
ANR	8649617	Identifier	pm		8649413	0					
ANR	8649618	Identifier	modifications		8649413	1					
ANR	8649619	ExpressionStatement	pm -> modifications = & me -> this	3377:3:103549:103578	8649413	15	True				
ANR	8649620	AssignmentExpression	pm -> modifications = & me -> this		8649413	0		=			
ANR	8649621	PtrMemberAccess	pm -> modifications		8649413	0					
ANR	8649622	Identifier	pm		8649413	0					
ANR	8649623	Identifier	modifications		8649413	1					
ANR	8649624	UnaryOperationExpression	& me -> this		8649413	1					
ANR	8649625	UnaryOperator	&		8649413	0					
ANR	8649626	PtrMemberAccess	me -> this		8649413	1					
ANR	8649627	Identifier	me		8649413	0					
ANR	8649628	Identifier	this		8649413	1					
ANR	8649629	ReturnType	static void		8649413	1					
ANR	8649630	Identifier	chrm_modification_init		8649413	2					
ANR	8649631	ParameterList	"chrm_modification * me , png_modifier * pm , const color_encoding * encoding"		8649413	3					
ANR	8649632	Parameter	chrm_modification * me	3353:23:102776:102796	8649413	0	True				
ANR	8649633	ParameterType	chrm_modification *		8649413	0					
ANR	8649634	Identifier	me		8649413	1					
ANR	8649635	Parameter	png_modifier * pm	3353:46:102799:102814	8649413	1	True				
ANR	8649636	ParameterType	png_modifier *		8649413	0					
ANR	8649637	Identifier	pm		8649413	1					
ANR	8649638	Parameter	const color_encoding * encoding	3354:3:102820:102849	8649413	2	True				
ANR	8649639	ParameterType	const color_encoding *		8649413	0					
ANR	8649640	Identifier	encoding		8649413	1					
ANR	8649641	CFGEntryNode	ENTRY		8649413		True				
ANR	8649642	CFGExitNode	EXIT		8649413		True				
ANR	8649643	Symbol	& me -> this		8649413						
ANR	8649644	Symbol	me -> encoding		8649413						
ANR	8649645	Symbol	pm -> modifications		8649413						
ANR	8649646	Symbol	me -> this . modify_fn		8649413						
ANR	8649647	Symbol	chromaticity_y		8649413						
ANR	8649648	Symbol	me -> this		8649413						
ANR	8649649	Symbol	me -> wy		8649413						
ANR	8649650	Symbol	me -> wx		8649413						
ANR	8649651	Symbol	me -> this . chunk		8649413						
ANR	8649652	Symbol	* encoding		8649413						
ANR	8649653	Symbol	encoding -> blue		8649413						
ANR	8649654	Symbol	chromaticity_x		8649413						
ANR	8649655	Symbol	white		8649413						
ANR	8649656	Symbol	fix		8649413						
ANR	8649657	Symbol	me		8649413						
ANR	8649658	Symbol	* me		8649413						
ANR	8649659	Symbol	encoding -> red		8649413						
ANR	8649660	Symbol	me -> gy		8649413						
ANR	8649661	Symbol	me -> gx		8649413						
ANR	8649662	Symbol	* pm		8649413						
ANR	8649663	Symbol	CHUNK_PLTE		8649413						
ANR	8649664	Symbol	chrm_modify		8649413						
ANR	8649665	Symbol	me -> this . next		8649413						
ANR	8649666	Symbol	me -> ry		8649413						
ANR	8649667	Symbol	me -> rx		8649413						
ANR	8649668	Symbol	encoding		8649413						
ANR	8649669	Symbol	me -> this . add		8649413						
ANR	8649670	Symbol	CHUNK_cHRM		8649413						
ANR	8649671	Symbol	white_point		8649413						
ANR	8649672	Symbol	encoding -> green		8649413						
ANR	8649673	Symbol	me -> by		8649413						
ANR	8649674	Symbol	me -> bx		8649413						
ANR	8649675	Symbol	pm		8649413						
ANR	8649676	ClassDef	srgb_modification	3380:8:103591:103691							
ANR	8649677	DeclStmt									
ANR	8649678	Decl							png_modification	png_modification	this
ANR	8649679	DeclStmt									
ANR	8649680	Decl							png_byte	png_byte	intent
ANR	8649681	DeclStmt									
ANR	8649682	Decl							srgb_modification	srgb_modification	srgb_modification
ANR	8649683	Function	srgb_modify	3386:0:103694:103988							
ANR	8649684	FunctionDef	"srgb_modify (png_modifier * pm , png_modification * me , int add)"		8649683	0					
ANR	8649685	CompoundStatement		3388:0:103766:103988	8649683	0					
ANR	8649686	Statement	UNUSED	3389:3:103771:103776	8649683	0	True				
ANR	8649687	ExpressionStatement	"( add ) png_save_uint_32 ( pm -> buffer , 1 )"	3389:9:103777:103873	8649683	1	True				
ANR	8649688	CastExpression	"( add ) png_save_uint_32 ( pm -> buffer , 1 )"		8649683	0					
ANR	8649689	CastTarget	add		8649683	0					
ANR	8649690	CallExpression	"png_save_uint_32 ( pm -> buffer , 1 )"		8649683	1					
ANR	8649691	Callee	png_save_uint_32		8649683	0					
ANR	8649692	Identifier	png_save_uint_32		8649683	0					
ANR	8649693	ArgumentList	pm -> buffer		8649683	1					
ANR	8649694	Argument	pm -> buffer		8649683	0					
ANR	8649695	PtrMemberAccess	pm -> buffer		8649683	0					
ANR	8649696	Identifier	pm		8649683	0					
ANR	8649697	Identifier	buffer		8649683	1					
ANR	8649698	Argument	1		8649683	1					
ANR	8649699	PrimaryExpression	1		8649683	0					
ANR	8649700	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_sRGB )"	3392:3:103878:103920	8649683	2	True				
ANR	8649701	CallExpression	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_sRGB )"		8649683	0					
ANR	8649702	Callee	png_save_uint_32		8649683	0					
ANR	8649703	Identifier	png_save_uint_32		8649683	0					
ANR	8649704	ArgumentList	pm -> buffer + 4		8649683	1					
ANR	8649705	Argument	pm -> buffer + 4		8649683	0					
ANR	8649706	AdditiveExpression	pm -> buffer + 4		8649683	0		+			
ANR	8649707	PtrMemberAccess	pm -> buffer		8649683	0					
ANR	8649708	Identifier	pm		8649683	0					
ANR	8649709	Identifier	buffer		8649683	1					
ANR	8649710	PrimaryExpression	4		8649683	1					
ANR	8649711	Argument	CHUNK_sRGB		8649683	1					
ANR	8649712	Identifier	CHUNK_sRGB		8649683	0					
ANR	8649713	ExpressionStatement	pm -> buffer [ 8 ] = ( ( srgb_modification * ) me ) -> intent	3393:3:103925:103973	8649683	3	True				
ANR	8649714	AssignmentExpression	pm -> buffer [ 8 ] = ( ( srgb_modification * ) me ) -> intent		8649683	0		=			
ANR	8649715	ArrayIndexing	pm -> buffer [ 8 ]		8649683	0					
ANR	8649716	PtrMemberAccess	pm -> buffer		8649683	0					
ANR	8649717	Identifier	pm		8649683	0					
ANR	8649718	Identifier	buffer		8649683	1					
ANR	8649719	PrimaryExpression	8		8649683	1					
ANR	8649720	PtrMemberAccess	( ( srgb_modification * ) me ) -> intent		8649683	1					
ANR	8649721	CastExpression	( srgb_modification * ) me		8649683	0					
ANR	8649722	CastTarget	srgb_modification *		8649683	0					
ANR	8649723	Identifier	me		8649683	1					
ANR	8649724	Identifier	intent		8649683	1					
ANR	8649725	ReturnStatement	return 1 ;	3394:3:103978:103986	8649683	4	True				
ANR	8649726	PrimaryExpression	1		8649683	0					
ANR	8649727	ReturnType	static int		8649683	1					
ANR	8649728	Identifier	srgb_modify		8649683	2					
ANR	8649729	ParameterList	"png_modifier * pm , png_modification * me , int add"		8649683	3					
ANR	8649730	Parameter	png_modifier * pm	3387:12:103717:103732	8649683	0	True				
ANR	8649731	ParameterType	png_modifier *		8649683	0					
ANR	8649732	Identifier	pm		8649683	1					
ANR	8649733	Parameter	png_modification * me	3387:30:103735:103754	8649683	1	True				
ANR	8649734	ParameterType	png_modification *		8649683	0					
ANR	8649735	Identifier	me		8649683	1					
ANR	8649736	Parameter	int add	3387:52:103757:103763	8649683	2	True				
ANR	8649737	ParameterType	int		8649683	0					
ANR	8649738	Identifier	add		8649683	1					
ANR	8649739	CFGEntryNode	ENTRY		8649683		True				
ANR	8649740	CFGExitNode	EXIT		8649683		True				
ANR	8649741	Symbol	add		8649683						
ANR	8649742	Symbol	* pm		8649683						
ANR	8649743	Symbol	CHUNK_sRGB		8649683						
ANR	8649744	Symbol	pm -> buffer		8649683						
ANR	8649745	Symbol	( ( srgb_modification * ) me ) -> intent		8649683						
ANR	8649746	Symbol	me		8649683						
ANR	8649747	Symbol	* * pm		8649683						
ANR	8649748	Symbol	pm		8649683						
ANR	8649749	Symbol	* me		8649683						
ANR	8649750	Symbol	* pm -> buffer		8649683						
ANR	8649751	Function	srgb_modification_init	3397:0:103991:104492							
ANR	8649752	FunctionDef	"srgb_modification_init (srgb_modification * me , png_modifier * pm , png_byte intent)"		8649751	0					
ANR	8649753	CompoundStatement		3399:0:104084:104492	8649751	0					
ANR	8649754	ExpressionStatement	modification_init ( & me -> this )	3400:3:104089:104117	8649751	0	True				
ANR	8649755	CallExpression	modification_init ( & me -> this )		8649751	0					
ANR	8649756	Callee	modification_init		8649751	0					
ANR	8649757	Identifier	modification_init		8649751	0					
ANR	8649758	ArgumentList	& me -> this		8649751	1					
ANR	8649759	Argument	& me -> this		8649751	0					
ANR	8649760	UnaryOperationExpression	& me -> this		8649751	0					
ANR	8649761	UnaryOperator	&		8649751	0					
ANR	8649762	PtrMemberAccess	me -> this		8649751	1					
ANR	8649763	Identifier	me		8649751	0					
ANR	8649764	Identifier	this		8649751	1					
ANR	8649765	ExpressionStatement	me -> this . chunk = CHUNK_sBIT	3401:3:104122:104149	8649751	1	True				
ANR	8649766	AssignmentExpression	me -> this . chunk = CHUNK_sBIT		8649751	0		=			
ANR	8649767	MemberAccess	me -> this . chunk		8649751	0					
ANR	8649768	PtrMemberAccess	me -> this		8649751	0					
ANR	8649769	Identifier	me		8649751	0					
ANR	8649770	Identifier	this		8649751	1					
ANR	8649771	Identifier	chunk		8649751	1					
ANR	8649772	Identifier	CHUNK_sBIT		8649751	1					
ANR	8649773	IfStatement	if ( intent <= 3 )		8649751	2					
ANR	8649774	Condition	intent <= 3	3403:7:104159:104169	8649751	0	True				
ANR	8649775	RelationalExpression	intent <= 3		8649751	0		<=			
ANR	8649776	Identifier	intent		8649751	0					
ANR	8649777	PrimaryExpression	3		8649751	1					
ANR	8649778	CompoundStatement		6:3:132:132	8649751	1					
ANR	8649779	ExpressionStatement	me -> this . modify_fn = srgb_modify	3405:6:104225:104257	8649751	0	True				
ANR	8649780	AssignmentExpression	me -> this . modify_fn = srgb_modify		8649751	0		=			
ANR	8649781	MemberAccess	me -> this . modify_fn		8649751	0					
ANR	8649782	PtrMemberAccess	me -> this		8649751	0					
ANR	8649783	Identifier	me		8649751	0					
ANR	8649784	Identifier	this		8649751	1					
ANR	8649785	Identifier	modify_fn		8649751	1					
ANR	8649786	Identifier	srgb_modify		8649751	1					
ANR	8649787	ExpressionStatement	me -> this . add = CHUNK_PLTE	3406:6:104265:104290	8649751	1	True				
ANR	8649788	AssignmentExpression	me -> this . add = CHUNK_PLTE		8649751	0		=			
ANR	8649789	MemberAccess	me -> this . add		8649751	0					
ANR	8649790	PtrMemberAccess	me -> this		8649751	0					
ANR	8649791	Identifier	me		8649751	0					
ANR	8649792	Identifier	this		8649751	1					
ANR	8649793	Identifier	add		8649751	1					
ANR	8649794	Identifier	CHUNK_PLTE		8649751	1					
ANR	8649795	ExpressionStatement	me -> intent = intent	3407:6:104298:104317	8649751	2	True				
ANR	8649796	AssignmentExpression	me -> intent = intent		8649751	0		=			
ANR	8649797	PtrMemberAccess	me -> intent		8649751	0					
ANR	8649798	Identifier	me		8649751	0					
ANR	8649799	Identifier	intent		8649751	1					
ANR	8649800	Identifier	intent		8649751	1					
ANR	8649801	ElseStatement	else		8649751	0					
ANR	8649802	CompoundStatement		13:3:251:251	8649751	0					
ANR	8649803	ExpressionStatement	me -> this . modify_fn = 0	3412:6:104344:104366	8649751	0	True				
ANR	8649804	AssignmentExpression	me -> this . modify_fn = 0		8649751	0		=			
ANR	8649805	MemberAccess	me -> this . modify_fn		8649751	0					
ANR	8649806	PtrMemberAccess	me -> this		8649751	0					
ANR	8649807	Identifier	me		8649751	0					
ANR	8649808	Identifier	this		8649751	1					
ANR	8649809	Identifier	modify_fn		8649751	1					
ANR	8649810	PrimaryExpression	0		8649751	1					
ANR	8649811	ExpressionStatement	me -> this . add = 0	3413:6:104374:104390	8649751	1	True				
ANR	8649812	AssignmentExpression	me -> this . add = 0		8649751	0		=			
ANR	8649813	MemberAccess	me -> this . add		8649751	0					
ANR	8649814	PtrMemberAccess	me -> this		8649751	0					
ANR	8649815	Identifier	me		8649751	0					
ANR	8649816	Identifier	this		8649751	1					
ANR	8649817	Identifier	add		8649751	1					
ANR	8649818	PrimaryExpression	0		8649751	1					
ANR	8649819	ExpressionStatement	me -> intent = 0	3414:6:104398:104412	8649751	2	True				
ANR	8649820	AssignmentExpression	me -> intent = 0		8649751	0		=			
ANR	8649821	PtrMemberAccess	me -> intent		8649751	0					
ANR	8649822	Identifier	me		8649751	0					
ANR	8649823	Identifier	intent		8649751	1					
ANR	8649824	PrimaryExpression	0		8649751	1					
ANR	8649825	ExpressionStatement	me -> this . next = pm -> modifications	3417:3:104423:104456	8649751	3	True				
ANR	8649826	AssignmentExpression	me -> this . next = pm -> modifications		8649751	0		=			
ANR	8649827	MemberAccess	me -> this . next		8649751	0					
ANR	8649828	PtrMemberAccess	me -> this		8649751	0					
ANR	8649829	Identifier	me		8649751	0					
ANR	8649830	Identifier	this		8649751	1					
ANR	8649831	Identifier	next		8649751	1					
ANR	8649832	PtrMemberAccess	pm -> modifications		8649751	1					
ANR	8649833	Identifier	pm		8649751	0					
ANR	8649834	Identifier	modifications		8649751	1					
ANR	8649835	ExpressionStatement	pm -> modifications = & me -> this	3418:3:104461:104490	8649751	4	True				
ANR	8649836	AssignmentExpression	pm -> modifications = & me -> this		8649751	0		=			
ANR	8649837	PtrMemberAccess	pm -> modifications		8649751	0					
ANR	8649838	Identifier	pm		8649751	0					
ANR	8649839	Identifier	modifications		8649751	1					
ANR	8649840	UnaryOperationExpression	& me -> this		8649751	1					
ANR	8649841	UnaryOperator	&		8649751	0					
ANR	8649842	PtrMemberAccess	me -> this		8649751	1					
ANR	8649843	Identifier	me		8649751	0					
ANR	8649844	Identifier	this		8649751	1					
ANR	8649845	ReturnType	static void		8649751	1					
ANR	8649846	Identifier	srgb_modification_init		8649751	2					
ANR	8649847	ParameterList	"srgb_modification * me , png_modifier * pm , png_byte intent"		8649751	3					
ANR	8649848	Parameter	srgb_modification * me	3398:23:104026:104046	8649751	0	True				
ANR	8649849	ParameterType	srgb_modification *		8649751	0					
ANR	8649850	Identifier	me		8649751	1					
ANR	8649851	Parameter	png_modifier * pm	3398:46:104049:104064	8649751	1	True				
ANR	8649852	ParameterType	png_modifier *		8649751	0					
ANR	8649853	Identifier	pm		8649751	1					
ANR	8649854	Parameter	png_byte intent	3398:64:104067:104081	8649751	2	True				
ANR	8649855	ParameterType	png_byte		8649751	0					
ANR	8649856	Identifier	intent		8649751	1					
ANR	8649857	CFGEntryNode	ENTRY		8649751		True				
ANR	8649858	CFGExitNode	EXIT		8649751		True				
ANR	8649859	Symbol	* pm		8649751						
ANR	8649860	Symbol	CHUNK_sBIT		8649751						
ANR	8649861	Symbol	& me -> this		8649751						
ANR	8649862	Symbol	CHUNK_PLTE		8649751						
ANR	8649863	Symbol	pm -> modifications		8649751						
ANR	8649864	Symbol	me -> this . next		8649751						
ANR	8649865	Symbol	me -> this . modify_fn		8649751						
ANR	8649866	Symbol	intent		8649751						
ANR	8649867	Symbol	me -> this		8649751						
ANR	8649868	Symbol	me -> this . add		8649751						
ANR	8649869	Symbol	me -> this . chunk		8649751						
ANR	8649870	Symbol	me -> intent		8649751						
ANR	8649871	Symbol	me		8649751						
ANR	8649872	Symbol	srgb_modify		8649751						
ANR	8649873	Symbol	pm		8649751						
ANR	8649874	Symbol	* me		8649751						
ANR	8649875	ClassDef	sbit_modification	3422:8:104535:104633							
ANR	8649876	DeclStmt									
ANR	8649877	Decl							png_modification	png_modification	this
ANR	8649878	DeclStmt									
ANR	8649879	Decl							png_byte	png_byte	sbit
ANR	8649880	DeclStmt									
ANR	8649881	Decl							sbit_modification	sbit_modification	sbit_modification
ANR	8649882	Function	sbit_modify	3428:0:104636:105566							
ANR	8649883	FunctionDef	"sbit_modify (png_modifier * pm , png_modification * me , int add)"		8649882	0					
ANR	8649884	CompoundStatement		3430:0:104708:105566	8649882	0					
ANR	8649885	IdentifierDeclStatement	png_byte sbit = ( ( sbit_modification * ) me ) -> sbit ;	3431:3:104713:104759	8649882	0	True				
ANR	8649886	IdentifierDecl	sbit = ( ( sbit_modification * ) me ) -> sbit		8649882	0					
ANR	8649887	IdentifierDeclType	png_byte		8649882	0					
ANR	8649888	Identifier	sbit		8649882	1					
ANR	8649889	AssignmentExpression	sbit = ( ( sbit_modification * ) me ) -> sbit		8649882	2		=			
ANR	8649890	Identifier	sbit		8649882	0					
ANR	8649891	PtrMemberAccess	( ( sbit_modification * ) me ) -> sbit		8649882	1					
ANR	8649892	CastExpression	( sbit_modification * ) me		8649882	0					
ANR	8649893	CastTarget	sbit_modification *		8649882	0					
ANR	8649894	Identifier	me		8649882	1					
ANR	8649895	Identifier	sbit		8649882	1					
ANR	8649896	IfStatement	if ( pm -> bit_depth > sbit )		8649882	1					
ANR	8649897	Condition	pm -> bit_depth > sbit	3432:7:104768:104787	8649882	0	True				
ANR	8649898	RelationalExpression	pm -> bit_depth > sbit		8649882	0		>			
ANR	8649899	PtrMemberAccess	pm -> bit_depth		8649882	0					
ANR	8649900	Identifier	pm		8649882	0					
ANR	8649901	Identifier	bit_depth		8649882	1					
ANR	8649902	Identifier	sbit		8649882	1					
ANR	8649903	CompoundStatement		5:6:92:102	8649882	1					
ANR	8649904	IdentifierDeclStatement	int cb = 0 ;	3434:6:104801:104811	8649882	0	True				
ANR	8649905	IdentifierDecl	cb = 0		8649882	0					
ANR	8649906	IdentifierDeclType	int		8649882	0					
ANR	8649907	Identifier	cb		8649882	1					
ANR	8649908	AssignmentExpression	cb = 0		8649882	2		=			
ANR	8649909	Identifier	cb		8649882	0					
ANR	8649910	PrimaryExpression	0		8649882	1					
ANR	8649911	SwitchStatement	switch ( pm -> colour_type )		8649882	1					
ANR	8649912	Condition	pm -> colour_type	3435:14:104827:104841	8649882	0	True				
ANR	8649913	PtrMemberAccess	pm -> colour_type		8649882	0					
ANR	8649914	Identifier	pm		8649882	0					
ANR	8649915	Identifier	colour_type		8649882	1					
ANR	8649916	CompoundStatement		7:6:141:141	8649882	1					
ANR	8649917	Label	case 0 :	3437:9:104861:104867	8649882	0	True				
ANR	8649918	ExpressionStatement	cb = 1	3438:12:104881:104887	8649882	1	True				
ANR	8649919	AssignmentExpression	cb = 1		8649882	0		=			
ANR	8649920	Identifier	cb		8649882	0					
ANR	8649921	PrimaryExpression	1		8649882	1					
ANR	8649922	BreakStatement	break ;	3439:12:104901:104906	8649882	2	True				
ANR	8649923	Label	case 2 :	3441:9:104918:104924	8649882	3	True				
ANR	8649924	Label	case 3 :	3442:9:104935:104941	8649882	4	True				
ANR	8649925	ExpressionStatement	cb = 3	3443:12:104955:104961	8649882	5	True				
ANR	8649926	AssignmentExpression	cb = 3		8649882	0		=			
ANR	8649927	Identifier	cb		8649882	0					
ANR	8649928	PrimaryExpression	3		8649882	1					
ANR	8649929	BreakStatement	break ;	3444:12:104975:104980	8649882	6	True				
ANR	8649930	Label	case 4 :	3446:9:104992:104998	8649882	7	True				
ANR	8649931	ExpressionStatement	cb = 2	3447:12:105012:105018	8649882	8	True				
ANR	8649932	AssignmentExpression	cb = 2		8649882	0		=			
ANR	8649933	Identifier	cb		8649882	0					
ANR	8649934	PrimaryExpression	2		8649882	1					
ANR	8649935	BreakStatement	break ;	3448:12:105032:105037	8649882	9	True				
ANR	8649936	Label	case 6 :	3450:9:105049:105055	8649882	10	True				
ANR	8649937	ExpressionStatement	cb = 4	3451:12:105069:105075	8649882	11	True				
ANR	8649938	AssignmentExpression	cb = 4		8649882	0		=			
ANR	8649939	Identifier	cb		8649882	0					
ANR	8649940	PrimaryExpression	4		8649882	1					
ANR	8649941	BreakStatement	break ;	3452:12:105089:105094	8649882	12	True				
ANR	8649942	Label	default :	3454:9:105106:105113	8649882	13	True				
ANR	8649943	Identifier	default		8649882	0					
ANR	8649944	ExpressionStatement	"png_error ( pm -> this . pread , ""unexpected colour type in sBIT modification"" )"	3455:12:105127:105214	8649882	14	True				
ANR	8649945	CallExpression	"png_error ( pm -> this . pread , ""unexpected colour type in sBIT modification"" )"		8649882	0					
ANR	8649946	Callee	png_error		8649882	0					
ANR	8649947	Identifier	png_error		8649882	0					
ANR	8649948	ArgumentList	pm -> this . pread		8649882	1					
ANR	8649949	Argument	pm -> this . pread		8649882	0					
ANR	8649950	MemberAccess	pm -> this . pread		8649882	0					
ANR	8649951	PtrMemberAccess	pm -> this		8649882	0					
ANR	8649952	Identifier	pm		8649882	0					
ANR	8649953	Identifier	this		8649882	1					
ANR	8649954	Identifier	pread		8649882	1					
ANR	8649955	Argument	"""unexpected colour type in sBIT modification"""		8649882	1					
ANR	8649956	PrimaryExpression	"""unexpected colour type in sBIT modification"""		8649882	0					
ANR	8649957	ExpressionStatement	"png_save_uint_32 ( pm -> buffer , cb )"	3459:6:105231:105263	8649882	2	True				
ANR	8649958	CallExpression	"png_save_uint_32 ( pm -> buffer , cb )"		8649882	0					
ANR	8649959	Callee	png_save_uint_32		8649882	0					
ANR	8649960	Identifier	png_save_uint_32		8649882	0					
ANR	8649961	ArgumentList	pm -> buffer		8649882	1					
ANR	8649962	Argument	pm -> buffer		8649882	0					
ANR	8649963	PtrMemberAccess	pm -> buffer		8649882	0					
ANR	8649964	Identifier	pm		8649882	0					
ANR	8649965	Identifier	buffer		8649882	1					
ANR	8649966	Argument	cb		8649882	1					
ANR	8649967	Identifier	cb		8649882	0					
ANR	8649968	ExpressionStatement	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_sBIT )"	3460:6:105271:105313	8649882	3	True				
ANR	8649969	CallExpression	"png_save_uint_32 ( pm -> buffer + 4 , CHUNK_sBIT )"		8649882	0					
ANR	8649970	Callee	png_save_uint_32		8649882	0					
ANR	8649971	Identifier	png_save_uint_32		8649882	0					
ANR	8649972	ArgumentList	pm -> buffer + 4		8649882	1					
ANR	8649973	Argument	pm -> buffer + 4		8649882	0					
ANR	8649974	AdditiveExpression	pm -> buffer + 4		8649882	0		+			
ANR	8649975	PtrMemberAccess	pm -> buffer		8649882	0					
ANR	8649976	Identifier	pm		8649882	0					
ANR	8649977	Identifier	buffer		8649882	1					
ANR	8649978	PrimaryExpression	4		8649882	1					
ANR	8649979	Argument	CHUNK_sBIT		8649882	1					
ANR	8649980	Identifier	CHUNK_sBIT		8649882	0					
ANR	8649981	WhileStatement	while ( cb > 0 )		8649882	4					
ANR	8649982	Condition	cb > 0	3462:13:105329:105334	8649882	0	True				
ANR	8649983	RelationalExpression	cb > 0		8649882	0		>			
ANR	8649984	Identifier	cb		8649882	0					
ANR	8649985	PrimaryExpression	0		8649882	1					
ANR	8649986	ExpressionStatement	( pm -> buffer + 8 ) [ -- cb ] = sbit	3463:9:105346:105373	8649882	1	True				
ANR	8649987	AssignmentExpression	( pm -> buffer + 8 ) [ -- cb ] = sbit		8649882	0		=			
ANR	8649988	ArrayIndexing	( pm -> buffer + 8 ) [ -- cb ]		8649882	0					
ANR	8649989	AdditiveExpression	pm -> buffer + 8		8649882	0		+			
ANR	8649990	PtrMemberAccess	pm -> buffer		8649882	0					
ANR	8649991	Identifier	pm		8649882	0					
ANR	8649992	Identifier	buffer		8649882	1					
ANR	8649993	PrimaryExpression	8		8649882	1					
ANR	8649994	UnaryExpression	-- cb		8649882	1					
ANR	8649995	IncDec	--		8649882	0					
ANR	8649996	Identifier	cb		8649882	1					
ANR	8649997	Identifier	sbit		8649882	1					
ANR	8649998	ReturnStatement	return 1 ;	3465:6:105382:105390	8649882	5	True				
ANR	8649999	PrimaryExpression	1		8649882	0					
ANR	8650000	ElseStatement	else		8649882	0					
ANR	8650001	IfStatement	if ( ! add )		8649882	0					
ANR	8650002	Condition	! add	3467:12:105409:105412	8649882	0	True				
ANR	8650003	UnaryOperationExpression	! add		8649882	0					
ANR	8650004	UnaryOperator	!		8649882	0					
ANR	8650005	Identifier	add		8649882	1					
ANR	8650006	CompoundStatement		39:3:709:709	8649882	1					
ANR	8650007	ExpressionStatement	pm -> buffer_count = pm -> buffer_position = 0	3470:6:105460:105502	8649882	0	True				
ANR	8650008	AssignmentExpression	pm -> buffer_count = pm -> buffer_position = 0		8649882	0		=			
ANR	8650009	PtrMemberAccess	pm -> buffer_count		8649882	0					
ANR	8650010	Identifier	pm		8649882	0					
ANR	8650011	Identifier	buffer_count		8649882	1					
ANR	8650012	AssignmentExpression	pm -> buffer_position = 0		8649882	1		=			
ANR	8650013	PtrMemberAccess	pm -> buffer_position		8649882	0					
ANR	8650014	Identifier	pm		8649882	0					
ANR	8650015	Identifier	buffer_position		8649882	1					
ANR	8650016	PrimaryExpression	0		8649882	1					
ANR	8650017	ReturnStatement	return 1 ;	3471:6:105510:105518	8649882	1	True				
ANR	8650018	PrimaryExpression	1		8649882	0					
ANR	8650019	ElseStatement	else		8649882	0					
ANR	8650020	ReturnStatement	return 0 ;	3474:6:105539:105547	8649882	0	True				
ANR	8650021	PrimaryExpression	0		8649882	0					
ANR	8650022	ReturnType	static int		8649882	1					
ANR	8650023	Identifier	sbit_modify		8649882	2					
ANR	8650024	ParameterList	"png_modifier * pm , png_modification * me , int add"		8649882	3					
ANR	8650025	Parameter	png_modifier * pm	3429:12:104659:104674	8649882	0	True				
ANR	8650026	ParameterType	png_modifier *		8649882	0					
ANR	8650027	Identifier	pm		8649882	1					
ANR	8650028	Parameter	png_modification * me	3429:30:104677:104696	8649882	1	True				
ANR	8650029	ParameterType	png_modification *		8649882	0					
ANR	8650030	Identifier	me		8649882	1					
ANR	8650031	Parameter	int add	3429:52:104699:104705	8649882	2	True				
ANR	8650032	ParameterType	int		8649882	0					
ANR	8650033	Identifier	add		8649882	1					
ANR	8650034	CFGEntryNode	ENTRY		8649882		True				
ANR	8650035	CFGExitNode	EXIT		8649882		True				
ANR	8650036	Symbol	add		8649882						
ANR	8650037	Symbol	* pm		8649882						
ANR	8650038	Symbol	CHUNK_sBIT		8649882						
ANR	8650039	Symbol	pm -> bit_depth		8649882						
ANR	8650040	Symbol	pm -> colour_type		8649882						
ANR	8650041	Symbol	pm -> this		8649882						
ANR	8650042	Symbol	( ( sbit_modification * ) me ) -> sbit		8649882						
ANR	8650043	Symbol	* cb		8649882						
ANR	8650044	Symbol	pm -> buffer_count		8649882						
ANR	8650045	Symbol	* * pm		8649882						
ANR	8650046	Symbol	sbit		8649882						
ANR	8650047	Symbol	pm -> this . pread		8649882						
ANR	8650048	Symbol	pm -> buffer		8649882						
ANR	8650049	Symbol	me		8649882						
ANR	8650050	Symbol	pm		8649882						
ANR	8650051	Symbol	* me		8649882						
ANR	8650052	Symbol	cb		8649882						
ANR	8650053	Symbol	* pm -> buffer		8649882						
ANR	8650054	Symbol	pm -> buffer_position		8649882						
ANR	8650055	Function	sbit_modification_init	3477:0:105569:105886							
ANR	8650056	FunctionDef	"sbit_modification_init (sbit_modification * me , png_modifier * pm , png_byte sbit)"		8650055	0					
ANR	8650057	CompoundStatement		3479:0:105660:105886	8650055	0					
ANR	8650058	ExpressionStatement	modification_init ( & me -> this )	3480:3:105665:105693	8650055	0	True				
ANR	8650059	CallExpression	modification_init ( & me -> this )		8650055	0					
ANR	8650060	Callee	modification_init		8650055	0					
ANR	8650061	Identifier	modification_init		8650055	0					
ANR	8650062	ArgumentList	& me -> this		8650055	1					
ANR	8650063	Argument	& me -> this		8650055	0					
ANR	8650064	UnaryOperationExpression	& me -> this		8650055	0					
ANR	8650065	UnaryOperator	&		8650055	0					
ANR	8650066	PtrMemberAccess	me -> this		8650055	1					
ANR	8650067	Identifier	me		8650055	0					
ANR	8650068	Identifier	this		8650055	1					
ANR	8650069	ExpressionStatement	me -> this . chunk = CHUNK_sBIT	3481:3:105698:105725	8650055	1	True				
ANR	8650070	AssignmentExpression	me -> this . chunk = CHUNK_sBIT		8650055	0		=			
ANR	8650071	MemberAccess	me -> this . chunk		8650055	0					
ANR	8650072	PtrMemberAccess	me -> this		8650055	0					
ANR	8650073	Identifier	me		8650055	0					
ANR	8650074	Identifier	this		8650055	1					
ANR	8650075	Identifier	chunk		8650055	1					
ANR	8650076	Identifier	CHUNK_sBIT		8650055	1					
ANR	8650077	ExpressionStatement	me -> this . modify_fn = sbit_modify	3482:3:105730:105762	8650055	2	True				
ANR	8650078	AssignmentExpression	me -> this . modify_fn = sbit_modify		8650055	0		=			
ANR	8650079	MemberAccess	me -> this . modify_fn		8650055	0					
ANR	8650080	PtrMemberAccess	me -> this		8650055	0					
ANR	8650081	Identifier	me		8650055	0					
ANR	8650082	Identifier	this		8650055	1					
ANR	8650083	Identifier	modify_fn		8650055	1					
ANR	8650084	Identifier	sbit_modify		8650055	1					
ANR	8650085	ExpressionStatement	me -> this . add = CHUNK_PLTE	3483:3:105767:105792	8650055	3	True				
ANR	8650086	AssignmentExpression	me -> this . add = CHUNK_PLTE		8650055	0		=			
ANR	8650087	MemberAccess	me -> this . add		8650055	0					
ANR	8650088	PtrMemberAccess	me -> this		8650055	0					
ANR	8650089	Identifier	me		8650055	0					
ANR	8650090	Identifier	this		8650055	1					
ANR	8650091	Identifier	add		8650055	1					
ANR	8650092	Identifier	CHUNK_PLTE		8650055	1					
ANR	8650093	ExpressionStatement	me -> sbit = sbit	3484:3:105797:105812	8650055	4	True				
ANR	8650094	AssignmentExpression	me -> sbit = sbit		8650055	0		=			
ANR	8650095	PtrMemberAccess	me -> sbit		8650055	0					
ANR	8650096	Identifier	me		8650055	0					
ANR	8650097	Identifier	sbit		8650055	1					
ANR	8650098	Identifier	sbit		8650055	1					
ANR	8650099	ExpressionStatement	me -> this . next = pm -> modifications	3485:3:105817:105850	8650055	5	True				
ANR	8650100	AssignmentExpression	me -> this . next = pm -> modifications		8650055	0		=			
ANR	8650101	MemberAccess	me -> this . next		8650055	0					
ANR	8650102	PtrMemberAccess	me -> this		8650055	0					
ANR	8650103	Identifier	me		8650055	0					
ANR	8650104	Identifier	this		8650055	1					
ANR	8650105	Identifier	next		8650055	1					
ANR	8650106	PtrMemberAccess	pm -> modifications		8650055	1					
ANR	8650107	Identifier	pm		8650055	0					
ANR	8650108	Identifier	modifications		8650055	1					
ANR	8650109	ExpressionStatement	pm -> modifications = & me -> this	3486:3:105855:105884	8650055	6	True				
ANR	8650110	AssignmentExpression	pm -> modifications = & me -> this		8650055	0		=			
ANR	8650111	PtrMemberAccess	pm -> modifications		8650055	0					
ANR	8650112	Identifier	pm		8650055	0					
ANR	8650113	Identifier	modifications		8650055	1					
ANR	8650114	UnaryOperationExpression	& me -> this		8650055	1					
ANR	8650115	UnaryOperator	&		8650055	0					
ANR	8650116	PtrMemberAccess	me -> this		8650055	1					
ANR	8650117	Identifier	me		8650055	0					
ANR	8650118	Identifier	this		8650055	1					
ANR	8650119	ReturnType	static void		8650055	1					
ANR	8650120	Identifier	sbit_modification_init		8650055	2					
ANR	8650121	ParameterList	"sbit_modification * me , png_modifier * pm , png_byte sbit"		8650055	3					
ANR	8650122	Parameter	sbit_modification * me	3478:23:105604:105624	8650055	0	True				
ANR	8650123	ParameterType	sbit_modification *		8650055	0					
ANR	8650124	Identifier	me		8650055	1					
ANR	8650125	Parameter	png_modifier * pm	3478:46:105627:105642	8650055	1	True				
ANR	8650126	ParameterType	png_modifier *		8650055	0					
ANR	8650127	Identifier	pm		8650055	1					
ANR	8650128	Parameter	png_byte sbit	3478:64:105645:105657	8650055	2	True				
ANR	8650129	ParameterType	png_byte		8650055	0					
ANR	8650130	Identifier	sbit		8650055	1					
ANR	8650131	CFGEntryNode	ENTRY		8650055		True				
ANR	8650132	CFGExitNode	EXIT		8650055		True				
ANR	8650133	Symbol	* pm		8650055						
ANR	8650134	Symbol	CHUNK_sBIT		8650055						
ANR	8650135	Symbol	& me -> this		8650055						
ANR	8650136	Symbol	CHUNK_PLTE		8650055						
ANR	8650137	Symbol	me -> this . next		8650055						
ANR	8650138	Symbol	pm -> modifications		8650055						
ANR	8650139	Symbol	me -> this . modify_fn		8650055						
ANR	8650140	Symbol	me -> sbit		8650055						
ANR	8650141	Symbol	me -> this		8650055						
ANR	8650142	Symbol	me -> this . add		8650055						
ANR	8650143	Symbol	sbit		8650055						
ANR	8650144	Symbol	me -> this . chunk		8650055						
ANR	8650145	Symbol	sbit_modify		8650055						
ANR	8650146	Symbol	me		8650055						
ANR	8650147	Symbol	pm		8650055						
ANR	8650148	Symbol	* me		8650055						
ANR	8650149	Function	make_standard_palette	3544:0:109018:111909							
ANR	8650150	FunctionDef	"make_standard_palette (png_store * ps , int npalette , int do_tRNS)"		8650149	0					
ANR	8650151	CompoundStatement		3546:0:109111:111909	8650149	0					
ANR	8650152	Statement	static	3547:3:109116:109121	8650149	0	True				
ANR	8650153	IdentifierDeclStatement	"png_uint_32 palette_seed [ 2 ] = { 0x87654321 , 9 } ;"	3547:10:109123:109170	8650149	1	True				
ANR	8650154	IdentifierDecl	"palette_seed [ 2 ] = { 0x87654321 , 9 }"		8650149	0					
ANR	8650155	IdentifierDeclType	png_uint_32 [ 2 ]		8650149	0					
ANR	8650156	Identifier	palette_seed		8650149	1					
ANR	8650157	PrimaryExpression	2		8650149	2					
ANR	8650158	AssignmentExpression	"palette_seed [ 2 ] = { 0x87654321 , 9 }"		8650149	3		=			
ANR	8650159	Identifier	palette_seed		8650149	0					
ANR	8650160	InitializerList	0x87654321		8650149	1					
ANR	8650161	PrimaryExpression	0x87654321		8650149	0					
ANR	8650162	PrimaryExpression	9		8650149	1					
ANR	8650163	IdentifierDeclStatement	int i = 0 ;	3549:3:109176:109185	8650149	2	True				
ANR	8650164	IdentifierDecl	i = 0		8650149	0					
ANR	8650165	IdentifierDeclType	int		8650149	0					
ANR	8650166	Identifier	i		8650149	1					
ANR	8650167	AssignmentExpression	i = 0		8650149	2		=			
ANR	8650168	Identifier	i		8650149	0					
ANR	8650169	PrimaryExpression	0		8650149	1					
ANR	8650170	Statement	png_byte	3550:3:109190:109197	8650149	3	True				
ANR	8650171	ExpressionStatement	values [ 256 ] [ 4 ]	3550:12:109199:109213	8650149	4	True				
ANR	8650172	ArrayIndexing	values [ 256 ] [ 4 ]		8650149	0					
ANR	8650173	ArrayIndexing	values [ 256 ]		8650149	0					
ANR	8650174	Identifier	values		8650149	0					
ANR	8650175	PrimaryExpression	256		8650149	1					
ANR	8650176	PrimaryExpression	4		8650149	1					
ANR	8650177	ForStatement	for ( ; i < 8 ; ++ i )		8650149	5					
ANR	8650178	Condition	i < 8	3554:10:109312:109314	8650149	0	True				
ANR	8650179	RelationalExpression	i < 8		8650149	0		<			
ANR	8650180	Identifier	i		8650149	0					
ANR	8650181	PrimaryExpression	8		8650149	1					
ANR	8650182	UnaryExpression	++ i	3554:15:109317:109319	8650149	1	True				
ANR	8650183	IncDec	++		8650149	0					
ANR	8650184	Identifier	i		8650149	1					
ANR	8650185	CompoundStatement		10:3:213:213	8650149	2					
ANR	8650186	ExpressionStatement	values [ i ] [ 1 ] = ( png_byte ) ( ( i & 1 ) ? 255U : 0U )	3556:6:109333:109377	8650149	0	True				
ANR	8650187	AssignmentExpression	values [ i ] [ 1 ] = ( png_byte ) ( ( i & 1 ) ? 255U : 0U )		8650149	0		=			
ANR	8650188	ArrayIndexing	values [ i ] [ 1 ]		8650149	0					
ANR	8650189	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650190	Identifier	values		8650149	0					
ANR	8650191	Identifier	i		8650149	1					
ANR	8650192	PrimaryExpression	1		8650149	1					
ANR	8650193	CastExpression	( png_byte ) ( ( i & 1 ) ? 255U : 0U )		8650149	1					
ANR	8650194	CastTarget	png_byte		8650149	0					
ANR	8650195	ConditionalExpression	( i & 1 ) ? 255U : 0U		8650149	1					
ANR	8650196	Condition	i & 1		8650149	0					
ANR	8650197	BitAndExpression	i & 1		8650149	0		&			
ANR	8650198	Identifier	i		8650149	0					
ANR	8650199	PrimaryExpression	1		8650149	1					
ANR	8650200	PrimaryExpression	255U		8650149	1					
ANR	8650201	PrimaryExpression	0U		8650149	2					
ANR	8650202	ExpressionStatement	values [ i ] [ 2 ] = ( png_byte ) ( ( i & 2 ) ? 255U : 0U )	3557:6:109385:109429	8650149	1	True				
ANR	8650203	AssignmentExpression	values [ i ] [ 2 ] = ( png_byte ) ( ( i & 2 ) ? 255U : 0U )		8650149	0		=			
ANR	8650204	ArrayIndexing	values [ i ] [ 2 ]		8650149	0					
ANR	8650205	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650206	Identifier	values		8650149	0					
ANR	8650207	Identifier	i		8650149	1					
ANR	8650208	PrimaryExpression	2		8650149	1					
ANR	8650209	CastExpression	( png_byte ) ( ( i & 2 ) ? 255U : 0U )		8650149	1					
ANR	8650210	CastTarget	png_byte		8650149	0					
ANR	8650211	ConditionalExpression	( i & 2 ) ? 255U : 0U		8650149	1					
ANR	8650212	Condition	i & 2		8650149	0					
ANR	8650213	BitAndExpression	i & 2		8650149	0		&			
ANR	8650214	Identifier	i		8650149	0					
ANR	8650215	PrimaryExpression	2		8650149	1					
ANR	8650216	PrimaryExpression	255U		8650149	1					
ANR	8650217	PrimaryExpression	0U		8650149	2					
ANR	8650218	ExpressionStatement	values [ i ] [ 3 ] = ( png_byte ) ( ( i & 4 ) ? 255U : 0U )	3558:6:109437:109481	8650149	2	True				
ANR	8650219	AssignmentExpression	values [ i ] [ 3 ] = ( png_byte ) ( ( i & 4 ) ? 255U : 0U )		8650149	0		=			
ANR	8650220	ArrayIndexing	values [ i ] [ 3 ]		8650149	0					
ANR	8650221	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650222	Identifier	values		8650149	0					
ANR	8650223	Identifier	i		8650149	1					
ANR	8650224	PrimaryExpression	3		8650149	1					
ANR	8650225	CastExpression	( png_byte ) ( ( i & 4 ) ? 255U : 0U )		8650149	1					
ANR	8650226	CastTarget	png_byte		8650149	0					
ANR	8650227	ConditionalExpression	( i & 4 ) ? 255U : 0U		8650149	1					
ANR	8650228	Condition	i & 4		8650149	0					
ANR	8650229	BitAndExpression	i & 4		8650149	0		&			
ANR	8650230	Identifier	i		8650149	0					
ANR	8650231	PrimaryExpression	4		8650149	1					
ANR	8650232	PrimaryExpression	255U		8650149	1					
ANR	8650233	PrimaryExpression	0U		8650149	2					
ANR	8650234	CompoundStatement		20:6:506:524	8650149	6					
ANR	8650235	IdentifierDeclStatement	int j = 0 ;	3563:6:109569:109578	8650149	0	True				
ANR	8650236	IdentifierDecl	j = 0		8650149	0					
ANR	8650237	IdentifierDeclType	int		8650149	0					
ANR	8650238	Identifier	j		8650149	1					
ANR	8650239	AssignmentExpression	j = 0		8650149	2		=			
ANR	8650240	Identifier	j		8650149	0					
ANR	8650241	PrimaryExpression	0		8650149	1					
ANR	8650242	IdentifierDeclStatement	png_byte random_bytes [ 4 ] ;	3564:6:109586:109610	8650149	1	True				
ANR	8650243	IdentifierDecl	random_bytes [ 4 ]		8650149	0					
ANR	8650244	IdentifierDeclType	png_byte [ 4 ]		8650149	0					
ANR	8650245	Identifier	random_bytes		8650149	1					
ANR	8650246	PrimaryExpression	4		8650149	2					
ANR	8650247	IdentifierDeclStatement	png_byte need [ 256 ] ;	3565:6:109618:109636	8650149	2	True				
ANR	8650248	IdentifierDecl	need [ 256 ]		8650149	0					
ANR	8650249	IdentifierDeclType	png_byte [ 256 ]		8650149	0					
ANR	8650250	Identifier	need		8650149	1					
ANR	8650251	PrimaryExpression	256		8650149	2					
ANR	8650252	ExpressionStatement	need [ 0 ] = 0	3567:6:109645:109656	8650149	3	True				
ANR	8650253	AssignmentExpression	need [ 0 ] = 0		8650149	0		=			
ANR	8650254	ArrayIndexing	need [ 0 ]		8650149	0					
ANR	8650255	Identifier	need		8650149	0					
ANR	8650256	PrimaryExpression	0		8650149	1					
ANR	8650257	PrimaryExpression	0		8650149	1					
ANR	8650258	ExpressionStatement	"memset ( need + 1 , 1 , ( sizeof need ) - 2 )"	3568:6:109678:109712	8650149	4	True				
ANR	8650259	CallExpression	"memset ( need + 1 , 1 , ( sizeof need ) - 2 )"		8650149	0					
ANR	8650260	Callee	memset		8650149	0					
ANR	8650261	Identifier	memset		8650149	0					
ANR	8650262	ArgumentList	need + 1		8650149	1					
ANR	8650263	Argument	need + 1		8650149	0					
ANR	8650264	AdditiveExpression	need + 1		8650149	0		+			
ANR	8650265	Identifier	need		8650149	0					
ANR	8650266	PrimaryExpression	1		8650149	1					
ANR	8650267	Argument	1		8650149	1					
ANR	8650268	PrimaryExpression	1		8650149	0					
ANR	8650269	Argument	( sizeof need ) - 2		8650149	2					
ANR	8650270	AdditiveExpression	( sizeof need ) - 2		8650149	0		-			
ANR	8650271	SizeofExpression	sizeof need		8650149	0					
ANR	8650272	Sizeof	sizeof		8650149	0					
ANR	8650273	Identifier	need		8650149	1					
ANR	8650274	PrimaryExpression	2		8650149	1					
ANR	8650275	ExpressionStatement	need [ 255 ] = 0	3569:6:109735:109748	8650149	5	True				
ANR	8650276	AssignmentExpression	need [ 255 ] = 0		8650149	0		=			
ANR	8650277	ArrayIndexing	need [ 255 ]		8650149	0					
ANR	8650278	Identifier	need		8650149	0					
ANR	8650279	PrimaryExpression	255		8650149	1					
ANR	8650280	PrimaryExpression	0		8650149	1					
ANR	8650281	WhileStatement	while ( i < 70 )		8650149	6					
ANR	8650282	Condition	i < 70	3571:13:109782:109785	8650149	0	True				
ANR	8650283	RelationalExpression	i < 70		8650149	0		<			
ANR	8650284	Identifier	i		8650149	0					
ANR	8650285	PrimaryExpression	70		8650149	1					
ANR	8650286	CompoundStatement		28:9:693:703	8650149	1					
ANR	8650287	IdentifierDeclStatement	png_byte b ;	3573:9:109805:109815	8650149	0	True				
ANR	8650288	IdentifierDecl	b		8650149	0					
ANR	8650289	IdentifierDeclType	png_byte		8650149	0					
ANR	8650290	Identifier	b		8650149	1					
ANR	8650291	IfStatement	if ( j == 0 )		8650149	1					
ANR	8650292	Condition	j == 0	3575:13:109831:109834	8650149	0	True				
ANR	8650293	EqualityExpression	j == 0		8650149	0		==			
ANR	8650294	Identifier	j		8650149	0					
ANR	8650295	PrimaryExpression	0		8650149	1					
ANR	8650296	CompoundStatement		31:9:734:734	8650149	1					
ANR	8650297	ExpressionStatement	"make_four_random_bytes ( palette_seed , random_bytes )"	3577:12:109860:109910	8650149	0	True				
ANR	8650298	CallExpression	"make_four_random_bytes ( palette_seed , random_bytes )"		8650149	0					
ANR	8650299	Callee	make_four_random_bytes		8650149	0					
ANR	8650300	Identifier	make_four_random_bytes		8650149	0					
ANR	8650301	ArgumentList	palette_seed		8650149	1					
ANR	8650302	Argument	palette_seed		8650149	0					
ANR	8650303	Identifier	palette_seed		8650149	0					
ANR	8650304	Argument	random_bytes		8650149	1					
ANR	8650305	Identifier	random_bytes		8650149	0					
ANR	8650306	ExpressionStatement	j = 4	3578:12:109924:109929	8650149	1	True				
ANR	8650307	AssignmentExpression	j = 4		8650149	0		=			
ANR	8650308	Identifier	j		8650149	0					
ANR	8650309	PrimaryExpression	4		8650149	1					
ANR	8650310	ExpressionStatement	b = random_bytes [ -- j ]	3581:9:109952:109973	8650149	2	True				
ANR	8650311	AssignmentExpression	b = random_bytes [ -- j ]		8650149	0		=			
ANR	8650312	Identifier	b		8650149	0					
ANR	8650313	ArrayIndexing	random_bytes [ -- j ]		8650149	1					
ANR	8650314	Identifier	random_bytes		8650149	0					
ANR	8650315	UnaryExpression	-- j		8650149	1					
ANR	8650316	IncDec	--		8650149	0					
ANR	8650317	Identifier	j		8650149	1					
ANR	8650318	IfStatement	if ( need [ b ] )		8650149	3					
ANR	8650319	Condition	need [ b ]	3582:13:109988:109994	8650149	0	True				
ANR	8650320	ArrayIndexing	need [ b ]		8650149	0					
ANR	8650321	Identifier	need		8650149	0					
ANR	8650322	Identifier	b		8650149	1					
ANR	8650323	CompoundStatement		38:9:894:894	8650149	1					
ANR	8650324	ExpressionStatement	values [ i ] [ 1 ] = b	3584:12:110020:110036	8650149	0	True				
ANR	8650325	AssignmentExpression	values [ i ] [ 1 ] = b		8650149	0		=			
ANR	8650326	ArrayIndexing	values [ i ] [ 1 ]		8650149	0					
ANR	8650327	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650328	Identifier	values		8650149	0					
ANR	8650329	Identifier	i		8650149	1					
ANR	8650330	PrimaryExpression	1		8650149	1					
ANR	8650331	Identifier	b		8650149	1					
ANR	8650332	ExpressionStatement	values [ i ] [ 2 ] = b	3585:12:110050:110066	8650149	1	True				
ANR	8650333	AssignmentExpression	values [ i ] [ 2 ] = b		8650149	0		=			
ANR	8650334	ArrayIndexing	values [ i ] [ 2 ]		8650149	0					
ANR	8650335	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650336	Identifier	values		8650149	0					
ANR	8650337	Identifier	i		8650149	1					
ANR	8650338	PrimaryExpression	2		8650149	1					
ANR	8650339	Identifier	b		8650149	1					
ANR	8650340	ExpressionStatement	values [ i ++ ] [ 3 ] = b	3586:12:110080:110098	8650149	2	True				
ANR	8650341	AssignmentExpression	values [ i ++ ] [ 3 ] = b		8650149	0		=			
ANR	8650342	ArrayIndexing	values [ i ++ ] [ 3 ]		8650149	0					
ANR	8650343	ArrayIndexing	values [ i ++ ]		8650149	0					
ANR	8650344	Identifier	values		8650149	0					
ANR	8650345	PostIncDecOperationExpression	i ++		8650149	1					
ANR	8650346	Identifier	i		8650149	0					
ANR	8650347	IncDec	++		8650149	1					
ANR	8650348	PrimaryExpression	3		8650149	1					
ANR	8650349	Identifier	b		8650149	1					
ANR	8650350	ForStatement	for ( ; i < 256 ; ++ i )		8650149	7					
ANR	8650351	Condition	i < 256	3596:10:110390:110394	8650149	0	True				
ANR	8650352	RelationalExpression	i < 256		8650149	0		<			
ANR	8650353	Identifier	i		8650149	0					
ANR	8650354	PrimaryExpression	256		8650149	1					
ANR	8650355	UnaryExpression	++ i	3596:17:110397:110399	8650149	1	True				
ANR	8650356	IncDec	++		8650149	0					
ANR	8650357	Identifier	i		8650149	1					
ANR	8650358	ExpressionStatement	"make_four_random_bytes ( palette_seed , values [ i ] )"	3597:6:110408:110455	8650149	2	True				
ANR	8650359	CallExpression	"make_four_random_bytes ( palette_seed , values [ i ] )"		8650149	0					
ANR	8650360	Callee	make_four_random_bytes		8650149	0					
ANR	8650361	Identifier	make_four_random_bytes		8650149	0					
ANR	8650362	ArgumentList	palette_seed		8650149	1					
ANR	8650363	Argument	palette_seed		8650149	0					
ANR	8650364	Identifier	palette_seed		8650149	0					
ANR	8650365	Argument	values [ i ]		8650149	1					
ANR	8650366	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650367	Identifier	values		8650149	0					
ANR	8650368	Identifier	i		8650149	1					
ANR	8650369	CompoundStatement		59:6:1526:1546	8650149	8					
ANR	8650370	IdentifierDeclStatement	store_palette_entry * palette ;	3603:6:110602:110630	8650149	0	True				
ANR	8650371	IdentifierDecl	* palette		8650149	0					
ANR	8650372	IdentifierDeclType	store_palette_entry *		8650149	0					
ANR	8650373	Identifier	palette		8650149	1					
ANR	8650374	IdentifierDeclStatement	png_byte selector [ 4 ] ;	3604:6:110638:110658	8650149	1	True				
ANR	8650375	IdentifierDecl	selector [ 4 ]		8650149	0					
ANR	8650376	IdentifierDeclType	png_byte [ 4 ]		8650149	0					
ANR	8650377	Identifier	selector		8650149	1					
ANR	8650378	PrimaryExpression	4		8650149	2					
ANR	8650379	ExpressionStatement	"make_four_random_bytes ( palette_seed , selector )"	3606:6:110667:110713	8650149	2	True				
ANR	8650380	CallExpression	"make_four_random_bytes ( palette_seed , selector )"		8650149	0					
ANR	8650381	Callee	make_four_random_bytes		8650149	0					
ANR	8650382	Identifier	make_four_random_bytes		8650149	0					
ANR	8650383	ArgumentList	palette_seed		8650149	1					
ANR	8650384	Argument	palette_seed		8650149	0					
ANR	8650385	Identifier	palette_seed		8650149	0					
ANR	8650386	Argument	selector		8650149	1					
ANR	8650387	Identifier	selector		8650149	0					
ANR	8650388	IfStatement	if ( do_tRNS )		8650149	3					
ANR	8650389	Condition	do_tRNS	3608:10:110726:110732	8650149	0	True				
ANR	8650390	Identifier	do_tRNS		8650149	0					
ANR	8650391	ForStatement	for ( i = 0 ; i < 256 ; ++ i )		8650149	1					
ANR	8650392	ForInit	i = 0 ;	3609:14:110749:110752	8650149	0	True				
ANR	8650393	AssignmentExpression	i = 0		8650149	0		=			
ANR	8650394	Identifier	i		8650149	0					
ANR	8650395	PrimaryExpression	0		8650149	1					
ANR	8650396	Condition	i < 256	3609:19:110754:110758	8650149	1	True				
ANR	8650397	RelationalExpression	i < 256		8650149	0		<			
ANR	8650398	Identifier	i		8650149	0					
ANR	8650399	PrimaryExpression	256		8650149	1					
ANR	8650400	UnaryExpression	++ i	3609:26:110761:110763	8650149	2	True				
ANR	8650401	IncDec	++		8650149	0					
ANR	8650402	Identifier	i		8650149	1					
ANR	8650403	ExpressionStatement	values [ i ] [ 0 ] = ( png_byte ) ( i ^ selector [ 0 ] )	3610:12:110778:110820	8650149	3	True				
ANR	8650404	AssignmentExpression	values [ i ] [ 0 ] = ( png_byte ) ( i ^ selector [ 0 ] )		8650149	0		=			
ANR	8650405	ArrayIndexing	values [ i ] [ 0 ]		8650149	0					
ANR	8650406	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650407	Identifier	values		8650149	0					
ANR	8650408	Identifier	i		8650149	1					
ANR	8650409	PrimaryExpression	0		8650149	1					
ANR	8650410	CastExpression	( png_byte ) ( i ^ selector [ 0 ] )		8650149	1					
ANR	8650411	CastTarget	png_byte		8650149	0					
ANR	8650412	ExclusiveOrExpression	i ^ selector [ 0 ]		8650149	1		^			
ANR	8650413	Identifier	i		8650149	0					
ANR	8650414	ArrayIndexing	selector [ 0 ]		8650149	1					
ANR	8650415	Identifier	selector		8650149	0					
ANR	8650416	PrimaryExpression	0		8650149	1					
ANR	8650417	ElseStatement	else		8650149	0					
ANR	8650418	ForStatement	for ( i = 0 ; i < 256 ; ++ i )		8650149	0					
ANR	8650419	ForInit	i = 0 ;	3613:14:110848:110851	8650149	0	True				
ANR	8650420	AssignmentExpression	i = 0		8650149	0		=			
ANR	8650421	Identifier	i		8650149	0					
ANR	8650422	PrimaryExpression	0		8650149	1					
ANR	8650423	Condition	i < 256	3613:19:110853:110857	8650149	1	True				
ANR	8650424	RelationalExpression	i < 256		8650149	0		<			
ANR	8650425	Identifier	i		8650149	0					
ANR	8650426	PrimaryExpression	256		8650149	1					
ANR	8650427	UnaryExpression	++ i	3613:26:110860:110862	8650149	2	True				
ANR	8650428	IncDec	++		8650149	0					
ANR	8650429	Identifier	i		8650149	1					
ANR	8650430	ExpressionStatement	values [ i ] [ 0 ] = 255	3614:12:110877:110895	8650149	3	True				
ANR	8650431	AssignmentExpression	values [ i ] [ 0 ] = 255		8650149	0		=			
ANR	8650432	ArrayIndexing	values [ i ] [ 0 ]		8650149	0					
ANR	8650433	ArrayIndexing	values [ i ]		8650149	0					
ANR	8650434	Identifier	values		8650149	0					
ANR	8650435	Identifier	i		8650149	1					
ANR	8650436	PrimaryExpression	0		8650149	1					
ANR	8650437	PrimaryExpression	255		8650149	1					
ANR	8650438	ExpressionStatement	"palette = store_write_palette ( ps , npalette )"	3625:6:111562:111605	8650149	4	True				
ANR	8650439	AssignmentExpression	"palette = store_write_palette ( ps , npalette )"		8650149	0		=			
ANR	8650440	Identifier	palette		8650149	0					
ANR	8650441	CallExpression	"store_write_palette ( ps , npalette )"		8650149	1					
ANR	8650442	Callee	store_write_palette		8650149	0					
ANR	8650443	Identifier	store_write_palette		8650149	0					
ANR	8650444	ArgumentList	ps		8650149	1					
ANR	8650445	Argument	ps		8650149	0					
ANR	8650446	Identifier	ps		8650149	0					
ANR	8650447	Argument	npalette		8650149	1					
ANR	8650448	Identifier	npalette		8650149	0					
ANR	8650449	ForStatement	for ( i = 0 ; i < npalette ; ++ i )		8650149	5					
ANR	8650450	ForInit	i = 0 ;	3627:11:111619:111622	8650149	0	True				
ANR	8650451	AssignmentExpression	i = 0		8650149	0		=			
ANR	8650452	Identifier	i		8650149	0					
ANR	8650453	PrimaryExpression	0		8650149	1					
ANR	8650454	Condition	i < npalette	3627:16:111624:111633	8650149	1	True				
ANR	8650455	RelationalExpression	i < npalette		8650149	0		<			
ANR	8650456	Identifier	i		8650149	0					
ANR	8650457	Identifier	npalette		8650149	1					
ANR	8650458	UnaryExpression	++ i	3627:28:111636:111638	8650149	2	True				
ANR	8650459	IncDec	++		8650149	0					
ANR	8650460	Identifier	i		8650149	1					
ANR	8650461	CompoundStatement		83:6:2535:2535	8650149	3					
ANR	8650462	ExpressionStatement	palette [ i ] . alpha = values [ i ^ selector [ 1 ] ] [ 0 ]	3629:9:111658:111703	8650149	0	True				
ANR	8650463	AssignmentExpression	palette [ i ] . alpha = values [ i ^ selector [ 1 ] ] [ 0 ]		8650149	0		=			
ANR	8650464	MemberAccess	palette [ i ] . alpha		8650149	0					
ANR	8650465	ArrayIndexing	palette [ i ]		8650149	0					
ANR	8650466	Identifier	palette		8650149	0					
ANR	8650467	Identifier	i		8650149	1					
ANR	8650468	Identifier	alpha		8650149	1					
ANR	8650469	ArrayIndexing	values [ i ^ selector [ 1 ] ] [ 0 ]		8650149	1					
ANR	8650470	ArrayIndexing	values [ i ^ selector [ 1 ] ]		8650149	0					
ANR	8650471	Identifier	values		8650149	0					
ANR	8650472	ExclusiveOrExpression	i ^ selector [ 1 ]		8650149	1		^			
ANR	8650473	Identifier	i		8650149	0					
ANR	8650474	ArrayIndexing	selector [ 1 ]		8650149	1					
ANR	8650475	Identifier	selector		8650149	0					
ANR	8650476	PrimaryExpression	1		8650149	1					
ANR	8650477	PrimaryExpression	0		8650149	1					
ANR	8650478	ExpressionStatement	palette [ i ] . red = values [ i ^ selector [ 1 ] ] [ 1 ]	3630:9:111714:111759	8650149	1	True				
ANR	8650479	AssignmentExpression	palette [ i ] . red = values [ i ^ selector [ 1 ] ] [ 1 ]		8650149	0		=			
ANR	8650480	MemberAccess	palette [ i ] . red		8650149	0					
ANR	8650481	ArrayIndexing	palette [ i ]		8650149	0					
ANR	8650482	Identifier	palette		8650149	0					
ANR	8650483	Identifier	i		8650149	1					
ANR	8650484	Identifier	red		8650149	1					
ANR	8650485	ArrayIndexing	values [ i ^ selector [ 1 ] ] [ 1 ]		8650149	1					
ANR	8650486	ArrayIndexing	values [ i ^ selector [ 1 ] ]		8650149	0					
ANR	8650487	Identifier	values		8650149	0					
ANR	8650488	ExclusiveOrExpression	i ^ selector [ 1 ]		8650149	1		^			
ANR	8650489	Identifier	i		8650149	0					
ANR	8650490	ArrayIndexing	selector [ 1 ]		8650149	1					
ANR	8650491	Identifier	selector		8650149	0					
ANR	8650492	PrimaryExpression	1		8650149	1					
ANR	8650493	PrimaryExpression	1		8650149	1					
ANR	8650494	ExpressionStatement	palette [ i ] . green = values [ i ^ selector [ 1 ] ] [ 2 ]	3631:9:111770:111815	8650149	2	True				
ANR	8650495	AssignmentExpression	palette [ i ] . green = values [ i ^ selector [ 1 ] ] [ 2 ]		8650149	0		=			
ANR	8650496	MemberAccess	palette [ i ] . green		8650149	0					
ANR	8650497	ArrayIndexing	palette [ i ]		8650149	0					
ANR	8650498	Identifier	palette		8650149	0					
ANR	8650499	Identifier	i		8650149	1					
ANR	8650500	Identifier	green		8650149	1					
ANR	8650501	ArrayIndexing	values [ i ^ selector [ 1 ] ] [ 2 ]		8650149	1					
ANR	8650502	ArrayIndexing	values [ i ^ selector [ 1 ] ]		8650149	0					
ANR	8650503	Identifier	values		8650149	0					
ANR	8650504	ExclusiveOrExpression	i ^ selector [ 1 ]		8650149	1		^			
ANR	8650505	Identifier	i		8650149	0					
ANR	8650506	ArrayIndexing	selector [ 1 ]		8650149	1					
ANR	8650507	Identifier	selector		8650149	0					
ANR	8650508	PrimaryExpression	1		8650149	1					
ANR	8650509	PrimaryExpression	2		8650149	1					
ANR	8650510	ExpressionStatement	palette [ i ] . blue = values [ i ^ selector [ 1 ] ] [ 3 ]	3632:9:111826:111871	8650149	3	True				
ANR	8650511	AssignmentExpression	palette [ i ] . blue = values [ i ^ selector [ 1 ] ] [ 3 ]		8650149	0		=			
ANR	8650512	MemberAccess	palette [ i ] . blue		8650149	0					
ANR	8650513	ArrayIndexing	palette [ i ]		8650149	0					
ANR	8650514	Identifier	palette		8650149	0					
ANR	8650515	Identifier	i		8650149	1					
ANR	8650516	Identifier	blue		8650149	1					
ANR	8650517	ArrayIndexing	values [ i ^ selector [ 1 ] ] [ 3 ]		8650149	1					
ANR	8650518	ArrayIndexing	values [ i ^ selector [ 1 ] ]		8650149	0					
ANR	8650519	Identifier	values		8650149	0					
ANR	8650520	ExclusiveOrExpression	i ^ selector [ 1 ]		8650149	1		^			
ANR	8650521	Identifier	i		8650149	0					
ANR	8650522	ArrayIndexing	selector [ 1 ]		8650149	1					
ANR	8650523	Identifier	selector		8650149	0					
ANR	8650524	PrimaryExpression	1		8650149	1					
ANR	8650525	PrimaryExpression	3		8650149	1					
ANR	8650526	ReturnStatement	return palette ;	3635:6:111888:111902	8650149	6	True				
ANR	8650527	Identifier	palette		8650149	0					
ANR	8650528	ReturnType	static store_palette_entry *		8650149	1					
ANR	8650529	Identifier	make_standard_palette		8650149	2					
ANR	8650530	ParameterList	"png_store * ps , int npalette , int do_tRNS"		8650149	3					
ANR	8650531	Parameter	png_store * ps	3545:22:109069:109081	8650149	0	True				
ANR	8650532	ParameterType	png_store *		8650149	0					
ANR	8650533	Identifier	ps		8650149	1					
ANR	8650534	Parameter	int npalette	3545:37:109084:109095	8650149	1	True				
ANR	8650535	ParameterType	int		8650149	0					
ANR	8650536	Identifier	npalette		8650149	1					
ANR	8650537	Parameter	int do_tRNS	3545:51:109098:109108	8650149	2	True				
ANR	8650538	ParameterType	int		8650149	0					
ANR	8650539	Identifier	do_tRNS		8650149	1					
ANR	8650540	CFGEntryNode	ENTRY		8650149		True				
ANR	8650541	CFGExitNode	EXIT		8650149		True				
ANR	8650542	Symbol	ps		8650149						
ANR	8650543	Symbol	* palette		8650149						
ANR	8650544	Symbol	palette [ i ] . green		8650149						
ANR	8650545	Symbol	* values		8650149						
ANR	8650546	Symbol	values		8650149						
ANR	8650547	Symbol	* random_bytes		8650149						
ANR	8650548	Symbol	* * selector		8650149						
ANR	8650549	Symbol	store_write_palette		8650149						
ANR	8650550	Symbol	palette [ i ] . alpha		8650149						
ANR	8650551	Symbol	palette		8650149						
ANR	8650552	Symbol	selector		8650149						
ANR	8650553	Symbol	palette [ i ] . red		8650149						
ANR	8650554	Symbol	do_tRNS		8650149						
ANR	8650555	Symbol	random_bytes		8650149						
ANR	8650556	Symbol	* * * selector		8650149						
ANR	8650557	Symbol	* * i		8650149						
ANR	8650558	Symbol	b		8650149						
ANR	8650559	Symbol	need		8650149						
ANR	8650560	Symbol	i		8650149						
ANR	8650561	Symbol	j		8650149						
ANR	8650562	Symbol	* b		8650149						
ANR	8650563	Symbol	* need		8650149						
ANR	8650564	Symbol	npalette		8650149						
ANR	8650565	Symbol	palette [ i ] . blue		8650149						
ANR	8650566	Symbol	* i		8650149						
ANR	8650567	Symbol	* j		8650149						
ANR	8650568	Symbol	palette_seed		8650149						
ANR	8650569	Symbol	* selector		8650149						
ANR	8650570	Symbol	* * values		8650149						
ANR	8650571	Function	init_standard_palette	3643:0:112119:113251							
ANR	8650572	FunctionDef	"init_standard_palette (png_store * ps , png_structp pp , png_infop pi , int npalette , int do_tRNS)"		8650571	0					
ANR	8650573	CompoundStatement		3646:0:112228:113251	8650571	0					
ANR	8650574	IdentifierDeclStatement	"store_palette_entry * ppal = make_standard_palette ( ps , npalette , do_tRNS ) ;"	3647:3:112233:112305	8650571	0	True				
ANR	8650575	IdentifierDecl	"* ppal = make_standard_palette ( ps , npalette , do_tRNS )"		8650571	0					
ANR	8650576	IdentifierDeclType	store_palette_entry *		8650571	0					
ANR	8650577	Identifier	ppal		8650571	1					
ANR	8650578	AssignmentExpression	"* ppal = make_standard_palette ( ps , npalette , do_tRNS )"		8650571	2		=			
ANR	8650579	Identifier	ppal		8650571	0					
ANR	8650580	CallExpression	"make_standard_palette ( ps , npalette , do_tRNS )"		8650571	1					
ANR	8650581	Callee	make_standard_palette		8650571	0					
ANR	8650582	Identifier	make_standard_palette		8650571	0					
ANR	8650583	ArgumentList	ps		8650571	1					
ANR	8650584	Argument	ps		8650571	0					
ANR	8650585	Identifier	ps		8650571	0					
ANR	8650586	Argument	npalette		8650571	1					
ANR	8650587	Identifier	npalette		8650571	0					
ANR	8650588	Argument	do_tRNS		8650571	2					
ANR	8650589	Identifier	do_tRNS		8650571	0					
ANR	8650590	CompoundStatement		6:6:103:125	8650571	1					
ANR	8650591	IdentifierDeclStatement	int i ;	3650:6:112319:112324	8650571	0	True				
ANR	8650592	IdentifierDecl	i		8650571	0					
ANR	8650593	IdentifierDeclType	int		8650571	0					
ANR	8650594	Identifier	i		8650571	1					
ANR	8650595	IdentifierDeclStatement	png_color palette [ 256 ] ;	3651:6:112332:112354	8650571	1	True				
ANR	8650596	IdentifierDecl	palette [ 256 ]		8650571	0					
ANR	8650597	IdentifierDeclType	png_color [ 256 ]		8650571	0					
ANR	8650598	Identifier	palette		8650571	1					
ANR	8650599	PrimaryExpression	256		8650571	2					
ANR	8650600	ForStatement	for ( i = 0 ; i < npalette ; ++ i )		8650571	2					
ANR	8650601	ForInit	i = 0 ;	3654:11:112423:112426	8650571	0	True				
ANR	8650602	AssignmentExpression	i = 0		8650571	0		=			
ANR	8650603	Identifier	i		8650571	0					
ANR	8650604	PrimaryExpression	0		8650571	1					
ANR	8650605	Condition	i < npalette	3654:16:112428:112437	8650571	1	True				
ANR	8650606	RelationalExpression	i < npalette		8650571	0		<			
ANR	8650607	Identifier	i		8650571	0					
ANR	8650608	Identifier	npalette		8650571	1					
ANR	8650609	UnaryExpression	++ i	3654:28:112440:112442	8650571	2	True				
ANR	8650610	IncDec	++		8650571	0					
ANR	8650611	Identifier	i		8650571	1					
ANR	8650612	CompoundStatement		10:6:222:222	8650571	3					
ANR	8650613	ExpressionStatement	palette [ i ] . red = ppal [ i ] . red	3656:9:112462:112490	8650571	0	True				
ANR	8650614	AssignmentExpression	palette [ i ] . red = ppal [ i ] . red		8650571	0		=			
ANR	8650615	MemberAccess	palette [ i ] . red		8650571	0					
ANR	8650616	ArrayIndexing	palette [ i ]		8650571	0					
ANR	8650617	Identifier	palette		8650571	0					
ANR	8650618	Identifier	i		8650571	1					
ANR	8650619	Identifier	red		8650571	1					
ANR	8650620	MemberAccess	ppal [ i ] . red		8650571	1					
ANR	8650621	ArrayIndexing	ppal [ i ]		8650571	0					
ANR	8650622	Identifier	ppal		8650571	0					
ANR	8650623	Identifier	i		8650571	1					
ANR	8650624	Identifier	red		8650571	1					
ANR	8650625	ExpressionStatement	palette [ i ] . green = ppal [ i ] . green	3657:9:112501:112533	8650571	1	True				
ANR	8650626	AssignmentExpression	palette [ i ] . green = ppal [ i ] . green		8650571	0		=			
ANR	8650627	MemberAccess	palette [ i ] . green		8650571	0					
ANR	8650628	ArrayIndexing	palette [ i ]		8650571	0					
ANR	8650629	Identifier	palette		8650571	0					
ANR	8650630	Identifier	i		8650571	1					
ANR	8650631	Identifier	green		8650571	1					
ANR	8650632	MemberAccess	ppal [ i ] . green		8650571	1					
ANR	8650633	ArrayIndexing	ppal [ i ]		8650571	0					
ANR	8650634	Identifier	ppal		8650571	0					
ANR	8650635	Identifier	i		8650571	1					
ANR	8650636	Identifier	green		8650571	1					
ANR	8650637	ExpressionStatement	palette [ i ] . blue = ppal [ i ] . blue	3658:9:112544:112574	8650571	2	True				
ANR	8650638	AssignmentExpression	palette [ i ] . blue = ppal [ i ] . blue		8650571	0		=			
ANR	8650639	MemberAccess	palette [ i ] . blue		8650571	0					
ANR	8650640	ArrayIndexing	palette [ i ]		8650571	0					
ANR	8650641	Identifier	palette		8650571	0					
ANR	8650642	Identifier	i		8650571	1					
ANR	8650643	Identifier	blue		8650571	1					
ANR	8650644	MemberAccess	ppal [ i ] . blue		8650571	1					
ANR	8650645	ArrayIndexing	ppal [ i ]		8650571	0					
ANR	8650646	Identifier	ppal		8650571	0					
ANR	8650647	Identifier	i		8650571	1					
ANR	8650648	Identifier	blue		8650571	1					
ANR	8650649	ForStatement	for ( ; i < 256 ; ++ i )		8650571	3					
ANR	8650650	Condition	i < 256	3662:13:112664:112668	8650571	0	True				
ANR	8650651	RelationalExpression	i < 256		8650571	0		<			
ANR	8650652	Identifier	i		8650571	0					
ANR	8650653	PrimaryExpression	256		8650571	1					
ANR	8650654	UnaryExpression	++ i	3662:20:112671:112673	8650571	1	True				
ANR	8650655	IncDec	++		8650571	0					
ANR	8650656	Identifier	i		8650571	1					
ANR	8650657	ExpressionStatement	palette [ i ] . red = palette [ i ] . green = palette [ i ] . blue = 42	3663:9:112685:112741	8650571	2	True				
ANR	8650658	AssignmentExpression	palette [ i ] . red = palette [ i ] . green = palette [ i ] . blue = 42		8650571	0		=			
ANR	8650659	MemberAccess	palette [ i ] . red		8650571	0					
ANR	8650660	ArrayIndexing	palette [ i ]		8650571	0					
ANR	8650661	Identifier	palette		8650571	0					
ANR	8650662	Identifier	i		8650571	1					
ANR	8650663	Identifier	red		8650571	1					
ANR	8650664	AssignmentExpression	palette [ i ] . green = palette [ i ] . blue = 42		8650571	1		=			
ANR	8650665	MemberAccess	palette [ i ] . green		8650571	0					
ANR	8650666	ArrayIndexing	palette [ i ]		8650571	0					
ANR	8650667	Identifier	palette		8650571	0					
ANR	8650668	Identifier	i		8650571	1					
ANR	8650669	Identifier	green		8650571	1					
ANR	8650670	AssignmentExpression	palette [ i ] . blue = 42		8650571	1		=			
ANR	8650671	MemberAccess	palette [ i ] . blue		8650571	0					
ANR	8650672	ArrayIndexing	palette [ i ]		8650571	0					
ANR	8650673	Identifier	palette		8650571	0					
ANR	8650674	Identifier	i		8650571	1					
ANR	8650675	Identifier	blue		8650571	1					
ANR	8650676	PrimaryExpression	42		8650571	1					
ANR	8650677	ExpressionStatement	"png_set_PLTE ( pp , pi , palette , npalette )"	3665:6:112750:112789	8650571	4	True				
ANR	8650678	CallExpression	"png_set_PLTE ( pp , pi , palette , npalette )"		8650571	0					
ANR	8650679	Callee	png_set_PLTE		8650571	0					
ANR	8650680	Identifier	png_set_PLTE		8650571	0					
ANR	8650681	ArgumentList	pp		8650571	1					
ANR	8650682	Argument	pp		8650571	0					
ANR	8650683	Identifier	pp		8650571	0					
ANR	8650684	Argument	pi		8650571	1					
ANR	8650685	Identifier	pi		8650571	0					
ANR	8650686	Argument	palette		8650571	2					
ANR	8650687	Identifier	palette		8650571	0					
ANR	8650688	Argument	npalette		8650571	3					
ANR	8650689	Identifier	npalette		8650571	0					
ANR	8650690	IfStatement	if ( do_tRNS )		8650571	2					
ANR	8650691	Condition	do_tRNS	3668:7:112804:112810	8650571	0	True				
ANR	8650692	Identifier	do_tRNS		8650571	0					
ANR	8650693	CompoundStatement		26:6:611:629	8650571	1					
ANR	8650694	IdentifierDeclStatement	"int i , j ;"	3670:6:112824:112832	8650571	0	True				
ANR	8650695	IdentifierDecl	i		8650571	0					
ANR	8650696	IdentifierDeclType	int		8650571	0					
ANR	8650697	Identifier	i		8650571	1					
ANR	8650698	IdentifierDecl	j		8650571	1					
ANR	8650699	IdentifierDeclType	int		8650571	0					
ANR	8650700	Identifier	j		8650571	1					
ANR	8650701	IdentifierDeclStatement	png_byte tRNS [ 256 ] ;	3671:6:112840:112858	8650571	1	True				
ANR	8650702	IdentifierDecl	tRNS [ 256 ]		8650571	0					
ANR	8650703	IdentifierDeclType	png_byte [ 256 ]		8650571	0					
ANR	8650704	Identifier	tRNS		8650571	1					
ANR	8650705	PrimaryExpression	256		8650571	2					
ANR	8650706	ForStatement	for ( i = j = 0 ; i < npalette ; ++ i )		8650571	2					
ANR	8650707	ForInit	i = j = 0 ;	3674:11:112938:112943	8650571	0	True				
ANR	8650708	AssignmentExpression	i = j = 0		8650571	0		=			
ANR	8650709	Identifier	i		8650571	0					
ANR	8650710	AssignmentExpression	j = 0		8650571	1		=			
ANR	8650711	Identifier	j		8650571	0					
ANR	8650712	PrimaryExpression	0		8650571	1					
ANR	8650713	Condition	i < npalette	3674:18:112945:112954	8650571	1	True				
ANR	8650714	RelationalExpression	i < npalette		8650571	0		<			
ANR	8650715	Identifier	i		8650571	0					
ANR	8650716	Identifier	npalette		8650571	1					
ANR	8650717	UnaryExpression	++ i	3674:30:112957:112959	8650571	2	True				
ANR	8650718	IncDec	++		8650571	0					
ANR	8650719	Identifier	i		8650571	1					
ANR	8650720	IfStatement	if ( ( tRNS [ i ] = ppal [ i ] . alpha ) < 255 )		8650571	3					
ANR	8650721	Condition	( tRNS [ i ] = ppal [ i ] . alpha ) < 255	3675:13:112975:113005	8650571	0	True				
ANR	8650722	RelationalExpression	( tRNS [ i ] = ppal [ i ] . alpha ) < 255		8650571	0		<			
ANR	8650723	AssignmentExpression	tRNS [ i ] = ppal [ i ] . alpha		8650571	0		=			
ANR	8650724	ArrayIndexing	tRNS [ i ]		8650571	0					
ANR	8650725	Identifier	tRNS		8650571	0					
ANR	8650726	Identifier	i		8650571	1					
ANR	8650727	MemberAccess	ppal [ i ] . alpha		8650571	1					
ANR	8650728	ArrayIndexing	ppal [ i ]		8650571	0					
ANR	8650729	Identifier	ppal		8650571	0					
ANR	8650730	Identifier	i		8650571	1					
ANR	8650731	Identifier	alpha		8650571	1					
ANR	8650732	PrimaryExpression	255		8650571	1					
ANR	8650733	ExpressionStatement	j = i + 1	3676:12:113020:113027	8650571	1	True				
ANR	8650734	AssignmentExpression	j = i + 1		8650571	0		=			
ANR	8650735	Identifier	j		8650571	0					
ANR	8650736	AdditiveExpression	i + 1		8650571	1		+			
ANR	8650737	Identifier	i		8650571	0					
ANR	8650738	PrimaryExpression	1		8650571	1					
ANR	8650739	ForStatement	for ( ; i < 256 ; ++ i )		8650571	3					
ANR	8650740	Condition	i < 256	3679:13:113102:113106	8650571	0	True				
ANR	8650741	RelationalExpression	i < 256		8650571	0		<			
ANR	8650742	Identifier	i		8650571	0					
ANR	8650743	PrimaryExpression	256		8650571	1					
ANR	8650744	UnaryExpression	++ i	3679:20:113109:113111	8650571	1	True				
ANR	8650745	IncDec	++		8650571	0					
ANR	8650746	Identifier	i		8650571	1					
ANR	8650747	ExpressionStatement	tRNS [ i ] = 24	3680:9:113123:113135	8650571	2	True				
ANR	8650748	AssignmentExpression	tRNS [ i ] = 24		8650571	0		=			
ANR	8650749	ArrayIndexing	tRNS [ i ]		8650571	0					
ANR	8650750	Identifier	tRNS		8650571	0					
ANR	8650751	Identifier	i		8650571	1					
ANR	8650752	PrimaryExpression	24		8650571	1					
ANR	8650753	IfStatement	if ( j > 0 )		8650571	4					
ANR	8650754	Condition	j > 0	3683:10:113180:113184	8650571	0	True				
ANR	8650755	RelationalExpression	j > 0		8650571	0		>			
ANR	8650756	Identifier	j		8650571	0					
ANR	8650757	PrimaryExpression	0		8650571	1					
ANR	8650758	ExpressionStatement	"png_set_tRNS ( pp , pi , tRNS , j , 0 )"	3684:9:113196:113237	8650571	1	True				
ANR	8650759	CallExpression	"png_set_tRNS ( pp , pi , tRNS , j , 0 )"		8650571	0					
ANR	8650760	Callee	png_set_tRNS		8650571	0					
ANR	8650761	Identifier	png_set_tRNS		8650571	0					
ANR	8650762	ArgumentList	pp		8650571	1					
ANR	8650763	Argument	pp		8650571	0					
ANR	8650764	Identifier	pp		8650571	0					
ANR	8650765	Argument	pi		8650571	1					
ANR	8650766	Identifier	pi		8650571	0					
ANR	8650767	Argument	tRNS		8650571	2					
ANR	8650768	Identifier	tRNS		8650571	0					
ANR	8650769	Argument	j		8650571	3					
ANR	8650770	Identifier	j		8650571	0					
ANR	8650771	Argument	0		8650571	4					
ANR	8650772	PrimaryExpression	0		8650571	0					
ANR	8650773	ReturnType	static void		8650571	1					
ANR	8650774	Identifier	init_standard_palette		8650571	2					
ANR	8650775	ParameterList	"png_store * ps , png_structp pp , png_infop pi , int npalette , int do_tRNS"		8650571	3					
ANR	8650776	Parameter	png_store * ps	3644:22:112153:112165	8650571	0	True				
ANR	8650777	ParameterType	png_store *		8650571	0					
ANR	8650778	Identifier	ps		8650571	1					
ANR	8650779	Parameter	png_structp pp	3644:37:112168:112181	8650571	1	True				
ANR	8650780	ParameterType	png_structp		8650571	0					
ANR	8650781	Identifier	pp		8650571	1					
ANR	8650782	Parameter	png_infop pi	3644:53:112184:112195	8650571	2	True				
ANR	8650783	ParameterType	png_infop		8650571	0					
ANR	8650784	Identifier	pi		8650571	1					
ANR	8650785	Parameter	int npalette	3644:67:112198:112209	8650571	3	True				
ANR	8650786	ParameterType	int		8650571	0					
ANR	8650787	Identifier	npalette		8650571	1					
ANR	8650788	Parameter	int do_tRNS	3645:3:112215:112225	8650571	4	True				
ANR	8650789	ParameterType	int		8650571	0					
ANR	8650790	Identifier	do_tRNS		8650571	1					
ANR	8650791	CFGEntryNode	ENTRY		8650571		True				
ANR	8650792	CFGExitNode	EXIT		8650571		True				
ANR	8650793	Symbol	pp		8650571						
ANR	8650794	Symbol	* ppal		8650571						
ANR	8650795	Symbol	ps		8650571						
ANR	8650796	Symbol	ppal [ i ] . alpha		8650571						
ANR	8650797	Symbol	* palette		8650571						
ANR	8650798	Symbol	palette [ i ] . green		8650571						
ANR	8650799	Symbol	ppal [ i ] . blue		8650571						
ANR	8650800	Symbol	i		8650571						
ANR	8650801	Symbol	j		8650571						
ANR	8650802	Symbol	ppal [ i ] . green		8650571						
ANR	8650803	Symbol	npalette		8650571						
ANR	8650804	Symbol	palette [ i ] . blue		8650571						
ANR	8650805	Symbol	* i		8650571						
ANR	8650806	Symbol	tRNS		8650571						
ANR	8650807	Symbol	ppal [ i ] . red		8650571						
ANR	8650808	Symbol	pi		8650571						
ANR	8650809	Symbol	palette		8650571						
ANR	8650810	Symbol	palette [ i ] . red		8650571						
ANR	8650811	Symbol	make_standard_palette		8650571						
ANR	8650812	Symbol	* tRNS		8650571						
ANR	8650813	Symbol	do_tRNS		8650571						
ANR	8650814	Symbol	ppal		8650571						
ANR	8650815	Function	set_random_tRNS	3690:0:113286:114423							
ANR	8650816	FunctionDef	"set_random_tRNS (png_structp pp , png_infop pi , const png_byte colour_type , const int bit_depth)"		8650815	0					
ANR	8650817	CompoundStatement		3693:0:113396:114423	8650815	0					
ANR	8650818	IdentifierDeclStatement	png_color_16 tRNS ;	3699:3:113704:113721	8650815	0	True				
ANR	8650819	IdentifierDecl	tRNS		8650815	0					
ANR	8650820	IdentifierDeclType	png_color_16		8650815	0					
ANR	8650821	Identifier	tRNS		8650815	1					
ANR	8650822	IdentifierDeclStatement	const png_uint_16 mask = ( png_uint_16 ) ( ( 1U << bit_depth ) - 1 ) ;	3700:3:113726:113785	8650815	1	True				
ANR	8650823	IdentifierDecl	mask = ( png_uint_16 ) ( ( 1U << bit_depth ) - 1 )		8650815	0					
ANR	8650824	IdentifierDeclType	const png_uint_16		8650815	0					
ANR	8650825	Identifier	mask		8650815	1					
ANR	8650826	AssignmentExpression	mask = ( png_uint_16 ) ( ( 1U << bit_depth ) - 1 )		8650815	2		=			
ANR	8650827	Identifier	mask		8650815	0					
ANR	8650828	CastExpression	( png_uint_16 ) ( ( 1U << bit_depth ) - 1 )		8650815	1					
ANR	8650829	CastTarget	png_uint_16		8650815	0					
ANR	8650830	AdditiveExpression	( 1U << bit_depth ) - 1		8650815	1		-			
ANR	8650831	ShiftExpression	1U << bit_depth		8650815	0		<<			
ANR	8650832	PrimaryExpression	1U		8650815	0					
ANR	8650833	Identifier	bit_depth		8650815	1					
ANR	8650834	PrimaryExpression	1		8650815	1					
ANR	8650835	ExpressionStatement	R8 ( tRNS )	3702:3:113791:113799	8650815	2	True				
ANR	8650836	CallExpression	R8 ( tRNS )		8650815	0					
ANR	8650837	Callee	R8		8650815	0					
ANR	8650838	Identifier	R8		8650815	0					
ANR	8650839	ArgumentList	tRNS		8650815	1					
ANR	8650840	Argument	tRNS		8650815	0					
ANR	8650841	Identifier	tRNS		8650815	0					
ANR	8650842	IfStatement	if ( colour_type & 2 )		8650815	3					
ANR	8650843	Condition	colour_type & 2	3704:7:113841:113855	8650815	0	True				
ANR	8650844	BitAndExpression	colour_type & 2		8650815	0		&			
ANR	8650845	Identifier	colour_type		8650815	0					
ANR	8650846	PrimaryExpression	2		8650815	1					
ANR	8650847	CompoundStatement		13:3:471:471	8650815	1					
ANR	8650848	IfStatement	if ( bit_depth == 8 )		8650815	0					
ANR	8650849	Condition	bit_depth == 8	3706:10:113880:113893	8650815	0	True				
ANR	8650850	EqualityExpression	bit_depth == 8		8650815	0		==			
ANR	8650851	Identifier	bit_depth		8650815	0					
ANR	8650852	PrimaryExpression	8		8650815	1					
ANR	8650853	CompoundStatement		15:6:505:505	8650815	1					
ANR	8650854	ExpressionStatement	tRNS . red = random_u16 ( )	3708:9:113913:113936	8650815	0	True				
ANR	8650855	AssignmentExpression	tRNS . red = random_u16 ( )		8650815	0		=			
ANR	8650856	MemberAccess	tRNS . red		8650815	0					
ANR	8650857	Identifier	tRNS		8650815	0					
ANR	8650858	Identifier	red		8650815	1					
ANR	8650859	CallExpression	random_u16 ( )		8650815	1					
ANR	8650860	Callee	random_u16		8650815	0					
ANR	8650861	Identifier	random_u16		8650815	0					
ANR	8650862	ArgumentList			8650815	1					
ANR	8650863	ExpressionStatement	tRNS . green = random_u16 ( )	3709:9:113947:113972	8650815	1	True				
ANR	8650864	AssignmentExpression	tRNS . green = random_u16 ( )		8650815	0		=			
ANR	8650865	MemberAccess	tRNS . green		8650815	0					
ANR	8650866	Identifier	tRNS		8650815	0					
ANR	8650867	Identifier	green		8650815	1					
ANR	8650868	CallExpression	random_u16 ( )		8650815	1					
ANR	8650869	Callee	random_u16		8650815	0					
ANR	8650870	Identifier	random_u16		8650815	0					
ANR	8650871	ArgumentList			8650815	1					
ANR	8650872	ExpressionStatement	tRNS . blue = tRNS . red ^ tRNS . green	3710:9:113983:114016	8650815	2	True				
ANR	8650873	AssignmentExpression	tRNS . blue = tRNS . red ^ tRNS . green		8650815	0		=			
ANR	8650874	MemberAccess	tRNS . blue		8650815	0					
ANR	8650875	Identifier	tRNS		8650815	0					
ANR	8650876	Identifier	blue		8650815	1					
ANR	8650877	ExclusiveOrExpression	tRNS . red ^ tRNS . green		8650815	1		^			
ANR	8650878	MemberAccess	tRNS . red		8650815	0					
ANR	8650879	Identifier	tRNS		8650815	0					
ANR	8650880	Identifier	red		8650815	1					
ANR	8650881	MemberAccess	tRNS . green		8650815	1					
ANR	8650882	Identifier	tRNS		8650815	0					
ANR	8650883	Identifier	green		8650815	1					
ANR	8650884	ExpressionStatement	tRNS . red &= mask	3711:9:114027:114043	8650815	3	True				
ANR	8650885	AssignmentExpression	tRNS . red &= mask		8650815	0		&=			
ANR	8650886	MemberAccess	tRNS . red		8650815	0					
ANR	8650887	Identifier	tRNS		8650815	0					
ANR	8650888	Identifier	red		8650815	1					
ANR	8650889	Identifier	mask		8650815	1					
ANR	8650890	ExpressionStatement	tRNS . green &= mask	3712:9:114054:114072	8650815	4	True				
ANR	8650891	AssignmentExpression	tRNS . green &= mask		8650815	0		&=			
ANR	8650892	MemberAccess	tRNS . green		8650815	0					
ANR	8650893	Identifier	tRNS		8650815	0					
ANR	8650894	Identifier	green		8650815	1					
ANR	8650895	Identifier	mask		8650815	1					
ANR	8650896	ExpressionStatement	tRNS . blue &= mask	3713:9:114083:114100	8650815	5	True				
ANR	8650897	AssignmentExpression	tRNS . blue &= mask		8650815	0		&=			
ANR	8650898	MemberAccess	tRNS . blue		8650815	0					
ANR	8650899	Identifier	tRNS		8650815	0					
ANR	8650900	Identifier	blue		8650815	1					
ANR	8650901	Identifier	mask		8650815	1					
ANR	8650902	ElseStatement	else		8650815	0					
ANR	8650903	CompoundStatement		25:6:753:753	8650815	0					
ANR	8650904	ExpressionStatement	tRNS . red = random_u16 ( )	3718:9:114161:114184	8650815	0	True				
ANR	8650905	AssignmentExpression	tRNS . red = random_u16 ( )		8650815	0		=			
ANR	8650906	MemberAccess	tRNS . red		8650815	0					
ANR	8650907	Identifier	tRNS		8650815	0					
ANR	8650908	Identifier	red		8650815	1					
ANR	8650909	CallExpression	random_u16 ( )		8650815	1					
ANR	8650910	Callee	random_u16		8650815	0					
ANR	8650911	Identifier	random_u16		8650815	0					
ANR	8650912	ArgumentList			8650815	1					
ANR	8650913	ExpressionStatement	tRNS . green = ( png_uint_16 ) ( tRNS . red * 257 )	3719:9:114195:114237	8650815	1	True				
ANR	8650914	AssignmentExpression	tRNS . green = ( png_uint_16 ) ( tRNS . red * 257 )		8650815	0		=			
ANR	8650915	MemberAccess	tRNS . green		8650815	0					
ANR	8650916	Identifier	tRNS		8650815	0					
ANR	8650917	Identifier	green		8650815	1					
ANR	8650918	CastExpression	( png_uint_16 ) ( tRNS . red * 257 )		8650815	1					
ANR	8650919	CastTarget	png_uint_16		8650815	0					
ANR	8650920	MultiplicativeExpression	tRNS . red * 257		8650815	1		*			
ANR	8650921	MemberAccess	tRNS . red		8650815	0					
ANR	8650922	Identifier	tRNS		8650815	0					
ANR	8650923	Identifier	red		8650815	1					
ANR	8650924	PrimaryExpression	257		8650815	1					
ANR	8650925	ExpressionStatement	tRNS . blue = ( png_uint_16 ) ( tRNS . green * 17 )	3720:9:114248:114290	8650815	2	True				
ANR	8650926	AssignmentExpression	tRNS . blue = ( png_uint_16 ) ( tRNS . green * 17 )		8650815	0		=			
ANR	8650927	MemberAccess	tRNS . blue		8650815	0					
ANR	8650928	Identifier	tRNS		8650815	0					
ANR	8650929	Identifier	blue		8650815	1					
ANR	8650930	CastExpression	( png_uint_16 ) ( tRNS . green * 17 )		8650815	1					
ANR	8650931	CastTarget	png_uint_16		8650815	0					
ANR	8650932	MultiplicativeExpression	tRNS . green * 17		8650815	1		*			
ANR	8650933	MemberAccess	tRNS . green		8650815	0					
ANR	8650934	Identifier	tRNS		8650815	0					
ANR	8650935	Identifier	green		8650815	1					
ANR	8650936	PrimaryExpression	17		8650815	1					
ANR	8650937	ElseStatement	else		8650815	0					
ANR	8650938	CompoundStatement		33:3:920:920	8650815	0					
ANR	8650939	ExpressionStatement	tRNS . gray = random_u16 ( )	3726:6:114325:114349	8650815	0	True				
ANR	8650940	AssignmentExpression	tRNS . gray = random_u16 ( )		8650815	0		=			
ANR	8650941	MemberAccess	tRNS . gray		8650815	0					
ANR	8650942	Identifier	tRNS		8650815	0					
ANR	8650943	Identifier	gray		8650815	1					
ANR	8650944	CallExpression	random_u16 ( )		8650815	1					
ANR	8650945	Callee	random_u16		8650815	0					
ANR	8650946	Identifier	random_u16		8650815	0					
ANR	8650947	ArgumentList			8650815	1					
ANR	8650948	ExpressionStatement	tRNS . gray &= mask	3727:6:114357:114374	8650815	1	True				
ANR	8650949	AssignmentExpression	tRNS . gray &= mask		8650815	0		&=			
ANR	8650950	MemberAccess	tRNS . gray		8650815	0					
ANR	8650951	Identifier	tRNS		8650815	0					
ANR	8650952	Identifier	gray		8650815	1					
ANR	8650953	Identifier	mask		8650815	1					
ANR	8650954	ExpressionStatement	"png_set_tRNS ( pp , pi , NULL , 0 , & tRNS )"	3730:3:114385:114421	8650815	4	True				
ANR	8650955	CallExpression	"png_set_tRNS ( pp , pi , NULL , 0 , & tRNS )"		8650815	0					
ANR	8650956	Callee	png_set_tRNS		8650815	0					
ANR	8650957	Identifier	png_set_tRNS		8650815	0					
ANR	8650958	ArgumentList	pp		8650815	1					
ANR	8650959	Argument	pp		8650815	0					
ANR	8650960	Identifier	pp		8650815	0					
ANR	8650961	Argument	pi		8650815	1					
ANR	8650962	Identifier	pi		8650815	0					
ANR	8650963	Argument	NULL		8650815	2					
ANR	8650964	Identifier	NULL		8650815	0					
ANR	8650965	Argument	0		8650815	3					
ANR	8650966	PrimaryExpression	0		8650815	0					
ANR	8650967	Argument	& tRNS		8650815	4					
ANR	8650968	UnaryOperationExpression	& tRNS		8650815	0					
ANR	8650969	UnaryOperator	&		8650815	0					
ANR	8650970	Identifier	tRNS		8650815	1					
ANR	8650971	ReturnType	static void		8650815	1					
ANR	8650972	Identifier	set_random_tRNS		8650815	2					
ANR	8650973	ParameterList	"png_structp pp , png_infop pi , const png_byte colour_type , const int bit_depth"		8650815	3					
ANR	8650974	Parameter	png_structp pp	3691:16:113314:113327	8650815	0	True				
ANR	8650975	ParameterType	png_structp		8650815	0					
ANR	8650976	Identifier	pp		8650815	1					
ANR	8650977	Parameter	png_infop pi	3691:32:113330:113341	8650815	1	True				
ANR	8650978	ParameterType	png_infop		8650815	0					
ANR	8650979	Identifier	pi		8650815	1					
ANR	8650980	Parameter	const png_byte colour_type	3691:46:113344:113369	8650815	2	True				
ANR	8650981	ParameterType	const png_byte		8650815	0					
ANR	8650982	Identifier	colour_type		8650815	1					
ANR	8650983	Parameter	const int bit_depth	3692:3:113375:113393	8650815	3	True				
ANR	8650984	ParameterType	const int		8650815	0					
ANR	8650985	Identifier	bit_depth		8650815	1					
ANR	8650986	CFGEntryNode	ENTRY		8650815		True				
ANR	8650987	CFGExitNode	EXIT		8650815		True				
ANR	8650988	Symbol	pp		8650815						
ANR	8650989	Symbol	NULL		8650815						
ANR	8650990	Symbol	tRNS . green		8650815						
ANR	8650991	Symbol	tRNS . red		8650815						
ANR	8650992	Symbol	& tRNS		8650815						
ANR	8650993	Symbol	tRNS . gray		8650815						
ANR	8650994	Symbol	colour_type		8650815						
ANR	8650995	Symbol	tRNS . blue		8650815						
ANR	8650996	Symbol	tRNS		8650815						
ANR	8650997	Symbol	random_u16		8650815						
ANR	8650998	Symbol	pi		8650815						
ANR	8650999	Symbol	bit_depth		8650815						
ANR	8651000	Symbol	mask		8650815						
ANR	8651001	Function	npasses_from_interlace_type	3737:0:114586:114881							
ANR	8651002	FunctionDef	"npasses_from_interlace_type (png_const_structp pp , int interlace_type)"		8651001	0					
ANR	8651003	CompoundStatement		3739:0:114667:114881	8651001	0					
ANR	8651004	SwitchStatement	switch ( interlace_type )		8651001	0					
ANR	8651005	Condition	interlace_type	3740:11:114680:114693	8651001	0	True				
ANR	8651006	Identifier	interlace_type		8651001	0					
ANR	8651007	CompoundStatement		3:3:31:31	8651001	1					
ANR	8651008	Label	default :	3742:3:114704:114711	8651001	0	True				
ANR	8651009	Identifier	default		8651001	0					
ANR	8651010	ExpressionStatement	"png_error ( pp , ""invalid interlace type"" )"	3743:6:114719:114758	8651001	1	True				
ANR	8651011	CallExpression	"png_error ( pp , ""invalid interlace type"" )"		8651001	0					
ANR	8651012	Callee	png_error		8651001	0					
ANR	8651013	Identifier	png_error		8651001	0					
ANR	8651014	ArgumentList	pp		8651001	1					
ANR	8651015	Argument	pp		8651001	0					
ANR	8651016	Identifier	pp		8651001	0					
ANR	8651017	Argument	"""invalid interlace type"""		8651001	1					
ANR	8651018	PrimaryExpression	"""invalid interlace type"""		8651001	0					
ANR	8651019	Label	case PNG_INTERLACE_NONE :	3745:3:114764:114787	8651001	2	True				
ANR	8651020	Identifier	PNG_INTERLACE_NONE		8651001	0					
ANR	8651021	ReturnStatement	return 1 ;	3746:6:114795:114803	8651001	3	True				
ANR	8651022	PrimaryExpression	1		8651001	0					
ANR	8651023	Label	case PNG_INTERLACE_ADAM7 :	3748:3:114809:114833	8651001	4	True				
ANR	8651024	Identifier	PNG_INTERLACE_ADAM7		8651001	0					
ANR	8651025	ReturnStatement	return PNG_INTERLACE_ADAM7_PASSES ;	3749:6:114841:114874	8651001	5	True				
ANR	8651026	Identifier	PNG_INTERLACE_ADAM7_PASSES		8651001	0					
ANR	8651027	ReturnType	static int		8651001	1					
ANR	8651028	Identifier	npasses_from_interlace_type		8651001	2					
ANR	8651029	ParameterList	"png_const_structp pp , int interlace_type"		8651001	3					
ANR	8651030	Parameter	png_const_structp pp	3738:28:114625:114644	8651001	0	True				
ANR	8651031	ParameterType	png_const_structp		8651001	0					
ANR	8651032	Identifier	pp		8651001	1					
ANR	8651033	Parameter	int interlace_type	3738:50:114647:114664	8651001	1	True				
ANR	8651034	ParameterType	int		8651001	0					
ANR	8651035	Identifier	interlace_type		8651001	1					
ANR	8651036	CFGEntryNode	ENTRY		8651001		True				
ANR	8651037	CFGExitNode	EXIT		8651001		True				
ANR	8651038	Symbol	pp		8651001						
ANR	8651039	Symbol	interlace_type		8651001						
ANR	8651040	Symbol	PNG_INTERLACE_ADAM7_PASSES		8651001						
ANR	8651041	Function	bit_size	3753:0:114884:115241							
ANR	8651042	FunctionDef	"bit_size (png_const_structp pp , png_byte colour_type , png_byte bit_depth)"		8651041	0					
ANR	8651043	CompoundStatement		3755:0:114977:115241	8651041	0					
ANR	8651044	SwitchStatement	switch ( colour_type )		8651041	0					
ANR	8651045	Condition	colour_type	3756:11:114990:115000	8651041	0	True				
ANR	8651046	Identifier	colour_type		8651041	0					
ANR	8651047	CompoundStatement		3:3:28:28	8651041	1					
ANR	8651048	Label	default :	3758:6:115014:115021	8651041	0	True				
ANR	8651049	Identifier	default		8651041	0					
ANR	8651050	ExpressionStatement	"png_error ( pp , ""invalid color type"" )"	3758:15:115023:115058	8651041	1	True				
ANR	8651051	CallExpression	"png_error ( pp , ""invalid color type"" )"		8651041	0					
ANR	8651052	Callee	png_error		8651041	0					
ANR	8651053	Identifier	png_error		8651041	0					
ANR	8651054	ArgumentList	pp		8651041	1					
ANR	8651055	Argument	pp		8651041	0					
ANR	8651056	Identifier	pp		8651041	0					
ANR	8651057	Argument	"""invalid color type"""		8651041	1					
ANR	8651058	PrimaryExpression	"""invalid color type"""		8651041	0					
ANR	8651059	Label	case 0 :	3760:6:115067:115073	8651041	2	True				
ANR	8651060	ReturnStatement	return bit_depth ;	3760:15:115076:115092	8651041	3	True				
ANR	8651061	Identifier	bit_depth		8651041	0					
ANR	8651062	Label	case 2 :	3762:6:115101:115107	8651041	4	True				
ANR	8651063	ReturnStatement	return 3 * bit_depth ;	3762:15:115110:115128	8651041	5	True				
ANR	8651064	MultiplicativeExpression	3 * bit_depth		8651041	0		*			
ANR	8651065	PrimaryExpression	3		8651041	0					
ANR	8651066	Identifier	bit_depth		8651041	1					
ANR	8651067	Label	case 3 :	3764:6:115137:115143	8651041	6	True				
ANR	8651068	ReturnStatement	return bit_depth ;	3764:15:115146:115162	8651041	7	True				
ANR	8651069	Identifier	bit_depth		8651041	0					
ANR	8651070	Label	case 4 :	3766:6:115171:115177	8651041	8	True				
ANR	8651071	ReturnStatement	return 2 * bit_depth ;	3766:15:115180:115198	8651041	9	True				
ANR	8651072	MultiplicativeExpression	2 * bit_depth		8651041	0		*			
ANR	8651073	PrimaryExpression	2		8651041	0					
ANR	8651074	Identifier	bit_depth		8651041	1					
ANR	8651075	Label	case 6 :	3768:6:115207:115213	8651041	10	True				
ANR	8651076	ReturnStatement	return 4 * bit_depth ;	3768:15:115216:115234	8651041	11	True				
ANR	8651077	MultiplicativeExpression	4 * bit_depth		8651041	0		*			
ANR	8651078	PrimaryExpression	4		8651041	0					
ANR	8651079	Identifier	bit_depth		8651041	1					
ANR	8651080	ReturnType	static unsigned int		8651041	1					
ANR	8651081	Identifier	bit_size		8651041	2					
ANR	8651082	ParameterList	"png_const_structp pp , png_byte colour_type , png_byte bit_depth"		8651041	3					
ANR	8651083	Parameter	png_const_structp pp	3754:9:114913:114932	8651041	0	True				
ANR	8651084	ParameterType	png_const_structp		8651041	0					
ANR	8651085	Identifier	pp		8651041	1					
ANR	8651086	Parameter	png_byte colour_type	3754:31:114935:114954	8651041	1	True				
ANR	8651087	ParameterType	png_byte		8651041	0					
ANR	8651088	Identifier	colour_type		8651041	1					
ANR	8651089	Parameter	png_byte bit_depth	3754:53:114957:114974	8651041	2	True				
ANR	8651090	ParameterType	png_byte		8651041	0					
ANR	8651091	Identifier	bit_depth		8651041	1					
ANR	8651092	CFGEntryNode	ENTRY		8651041		True				
ANR	8651093	CFGExitNode	EXIT		8651041		True				
ANR	8651094	Symbol	pp		8651041						
ANR	8651095	Symbol	colour_type		8651041						
ANR	8651096	Symbol	bit_depth		8651041						
ANR	8651097	Function	transform_rowsize	3778:0:115525:115698							
ANR	8651098	FunctionDef	"transform_rowsize (png_const_structp pp , png_byte colour_type , png_byte bit_depth)"		8651097	0					
ANR	8651099	CompoundStatement		3781:0:115624:115698	8651097	0					
ANR	8651100	ReturnStatement	"return ( TRANSFORM_WIDTH * bit_size ( pp , colour_type , bit_depth ) ) / 8 ;"	3782:3:115629:115696	8651097	0	True				
ANR	8651101	MultiplicativeExpression	"( TRANSFORM_WIDTH * bit_size ( pp , colour_type , bit_depth ) ) / 8"		8651097	0		/			
ANR	8651102	MultiplicativeExpression	"TRANSFORM_WIDTH * bit_size ( pp , colour_type , bit_depth )"		8651097	0		*			
ANR	8651103	Identifier	TRANSFORM_WIDTH		8651097	0					
ANR	8651104	CallExpression	"bit_size ( pp , colour_type , bit_depth )"		8651097	1					
ANR	8651105	Callee	bit_size		8651097	0					
ANR	8651106	Identifier	bit_size		8651097	0					
ANR	8651107	ArgumentList	pp		8651097	1					
ANR	8651108	Argument	pp		8651097	0					
ANR	8651109	Identifier	pp		8651097	0					
ANR	8651110	Argument	colour_type		8651097	1					
ANR	8651111	Identifier	colour_type		8651097	0					
ANR	8651112	Argument	bit_depth		8651097	2					
ANR	8651113	Identifier	bit_depth		8651097	0					
ANR	8651114	PrimaryExpression	8		8651097	1					
ANR	8651115	ReturnType	static size_t		8651097	1					
ANR	8651116	Identifier	transform_rowsize		8651097	2					
ANR	8651117	ParameterList	"png_const_structp pp , png_byte colour_type , png_byte bit_depth"		8651097	3					
ANR	8651118	Parameter	png_const_structp pp	3779:18:115557:115576	8651097	0	True				
ANR	8651119	ParameterType	png_const_structp		8651097	0					
ANR	8651120	Identifier	pp		8651097	1					
ANR	8651121	Parameter	png_byte colour_type	3779:40:115579:115598	8651097	1	True				
ANR	8651122	ParameterType	png_byte		8651097	0					
ANR	8651123	Identifier	colour_type		8651097	1					
ANR	8651124	Parameter	png_byte bit_depth	3780:3:115604:115621	8651097	2	True				
ANR	8651125	ParameterType	png_byte		8651097	0					
ANR	8651126	Identifier	bit_depth		8651097	1					
ANR	8651127	CFGEntryNode	ENTRY		8651097		True				
ANR	8651128	CFGExitNode	EXIT		8651097		True				
ANR	8651129	Symbol	pp		8651097						
ANR	8651130	Symbol	colour_type		8651097						
ANR	8651131	Symbol	TRANSFORM_WIDTH		8651097						
ANR	8651132	Symbol	bit_size		8651097						
ANR	8651133	Symbol	bit_depth		8651097						
ANR	8651134	Function	transform_height	3790:0:115889:116531							
ANR	8651135	FunctionDef	"transform_height (png_const_structp pp , png_byte colour_type , png_byte bit_depth)"		8651134	0					
ANR	8651136	CompoundStatement		3792:0:115989:116531	8651134	0					
ANR	8651137	SwitchStatement	"switch ( bit_size ( pp , colour_type , bit_depth ) )"		8651134	0					
ANR	8651138	Condition	"bit_size ( pp , colour_type , bit_depth )"	3793:11:116002:116037	8651134	0	True				
ANR	8651139	CallExpression	"bit_size ( pp , colour_type , bit_depth )"		8651134	0					
ANR	8651140	Callee	bit_size		8651134	0					
ANR	8651141	Identifier	bit_size		8651134	0					
ANR	8651142	ArgumentList	pp		8651134	1					
ANR	8651143	Argument	pp		8651134	0					
ANR	8651144	Identifier	pp		8651134	0					
ANR	8651145	Argument	colour_type		8651134	1					
ANR	8651146	Identifier	colour_type		8651134	0					
ANR	8651147	Argument	bit_depth		8651134	2					
ANR	8651148	Identifier	bit_depth		8651134	0					
ANR	8651149	CompoundStatement		3:3:53:53	8651134	1					
ANR	8651150	Label	case 1 :	3795:6:116051:116057	8651134	0	True				
ANR	8651151	Label	case 2 :	3796:6:116065:116071	8651134	1	True				
ANR	8651152	Label	case 4 :	3797:6:116079:116085	8651134	2	True				
ANR	8651153	ReturnStatement	return 1 ;	3798:9:116096:116104	8651134	3	True				
ANR	8651154	PrimaryExpression	1		8651134	0					
ANR	8651155	Label	case 8 :	3800:6:116141:116147	8651134	4	True				
ANR	8651156	ReturnStatement	return 2 ;	3801:9:116158:116166	8651134	5	True				
ANR	8651157	PrimaryExpression	2		8651134	0					
ANR	8651158	Label	case 16 :	3803:6:116209:116216	8651134	6	True				
ANR	8651159	ReturnStatement	return 512 ;	3804:9:116227:116237	8651134	7	True				
ANR	8651160	PrimaryExpression	512		8651134	0					
ANR	8651161	Label	case 24 :	3806:6:116274:116281	8651134	8	True				
ANR	8651162	Label	case 32 :	3807:6:116289:116296	8651134	9	True				
ANR	8651163	ReturnStatement	return 512 ;	3808:9:116307:116317	8651134	10	True				
ANR	8651164	PrimaryExpression	512		8651134	0					
ANR	8651165	Label	case 48 :	3810:6:116345:116352	8651134	11	True				
ANR	8651166	Label	case 64 :	3811:6:116360:116367	8651134	12	True				
ANR	8651167	ReturnStatement	return 2048 ;	3812:9:116378:116389	8651134	13	True				
ANR	8651168	PrimaryExpression	2048		8651134	0					
ANR	8651169	Statement	define	3813:9:116423:116428	8651134	14	True				
ANR	8651170	Statement	TRANSFORM_HEIGHTMAX	3813:16:116430:116448	8651134	15	True				
ANR	8651171	Statement	2048	3813:36:116450:116453	8651134	16	True				
ANR	8651172	Label	default :	3815:6:116462:116469	8651134	17	True				
ANR	8651173	Identifier	default		8651134	0					
ANR	8651174	ReturnStatement	return 0 ;	3816:9:116480:116488	8651134	18	True				
ANR	8651175	PrimaryExpression	0		8651134	0					
ANR	8651176	ReturnType	static png_uint_32		8651134	1					
ANR	8651177	Identifier	transform_height		8651134	2					
ANR	8651178	ParameterList	"png_const_structp pp , png_byte colour_type , png_byte bit_depth"		8651134	3					
ANR	8651179	Parameter	png_const_structp pp	3791:17:115925:115944	8651134	0	True				
ANR	8651180	ParameterType	png_const_structp		8651134	0					
ANR	8651181	Identifier	pp		8651134	1					
ANR	8651182	Parameter	png_byte colour_type	3791:39:115947:115966	8651134	1	True				
ANR	8651183	ParameterType	png_byte		8651134	0					
ANR	8651184	Identifier	colour_type		8651134	1					
ANR	8651185	Parameter	png_byte bit_depth	3791:61:115969:115986	8651134	2	True				
ANR	8651186	ParameterType	png_byte		8651134	0					
ANR	8651187	Identifier	bit_depth		8651134	1					
ANR	8651188	CFGEntryNode	ENTRY		8651134		True				
ANR	8651189	CFGExitNode	EXIT		8651134		True				
ANR	8651190	Symbol	pp		8651134						
ANR	8651191	Symbol	colour_type		8651134						
ANR	8651192	Symbol	bit_size		8651134						
ANR	8651193	Symbol	bit_depth		8651134						
ANR	8651194	Function	standard_width	3824:0:116668:116907							
ANR	8651195	FunctionDef	"standard_width (png_const_structp pp , png_uint_32 id)"		8651194	0					
ANR	8651196	CompoundStatement		3826:0:116740:116907	8651194	0					
ANR	8651197	IdentifierDeclStatement	png_uint_32 width = WIDTH_FROM_ID ( id ) ;	3827:3:116745:116782	8651194	0	True				
ANR	8651198	IdentifierDecl	width = WIDTH_FROM_ID ( id )		8651194	0					
ANR	8651199	IdentifierDeclType	png_uint_32		8651194	0					
ANR	8651200	Identifier	width		8651194	1					
ANR	8651201	AssignmentExpression	width = WIDTH_FROM_ID ( id )		8651194	2		=			
ANR	8651202	Identifier	width		8651194	0					
ANR	8651203	CallExpression	WIDTH_FROM_ID ( id )		8651194	1					
ANR	8651204	Callee	WIDTH_FROM_ID		8651194	0					
ANR	8651205	Identifier	WIDTH_FROM_ID		8651194	0					
ANR	8651206	ArgumentList	id		8651194	1					
ANR	8651207	Argument	id		8651194	0					
ANR	8651208	Identifier	id		8651194	0					
ANR	8651209	Statement	UNUSED	3828:3:116787:116792	8651194	1	True				
ANR	8651210	Statement	(	3828:9:116793:116793	8651194	2	True				
ANR	8651211	Statement	pp	3828:10:116794:116795	8651194	3	True				
ANR	8651212	Statement	)	3828:12:116796:116796	8651194	4	True				
ANR	8651213	IfStatement	if ( width == 0 )		8651194	5					
ANR	8651214	Condition	width == 0	3830:7:116806:116815	8651194	0	True				
ANR	8651215	EqualityExpression	width == 0		8651194	0		==			
ANR	8651216	Identifier	width		8651194	0					
ANR	8651217	PrimaryExpression	0		8651194	1					
ANR	8651218	ExpressionStatement	"width = transform_width ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"	3831:6:116824:116887	8651194	1	True				
ANR	8651219	AssignmentExpression	"width = transform_width ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8651194	0		=			
ANR	8651220	Identifier	width		8651194	0					
ANR	8651221	CallExpression	"transform_width ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8651194	1					
ANR	8651222	Callee	transform_width		8651194	0					
ANR	8651223	Identifier	transform_width		8651194	0					
ANR	8651224	ArgumentList	pp		8651194	1					
ANR	8651225	Argument	pp		8651194	0					
ANR	8651226	Identifier	pp		8651194	0					
ANR	8651227	Argument	COL_FROM_ID ( id )		8651194	1					
ANR	8651228	CallExpression	COL_FROM_ID ( id )		8651194	0					
ANR	8651229	Callee	COL_FROM_ID		8651194	0					
ANR	8651230	Identifier	COL_FROM_ID		8651194	0					
ANR	8651231	ArgumentList	id		8651194	1					
ANR	8651232	Argument	id		8651194	0					
ANR	8651233	Identifier	id		8651194	0					
ANR	8651234	Argument	DEPTH_FROM_ID ( id )		8651194	2					
ANR	8651235	CallExpression	DEPTH_FROM_ID ( id )		8651194	0					
ANR	8651236	Callee	DEPTH_FROM_ID		8651194	0					
ANR	8651237	Identifier	DEPTH_FROM_ID		8651194	0					
ANR	8651238	ArgumentList	id		8651194	1					
ANR	8651239	Argument	id		8651194	0					
ANR	8651240	Identifier	id		8651194	0					
ANR	8651241	ReturnStatement	return width ;	3833:3:116893:116905	8651194	6	True				
ANR	8651242	Identifier	width		8651194	0					
ANR	8651243	ReturnType	static png_uint_32		8651194	1					
ANR	8651244	Identifier	standard_width		8651194	2					
ANR	8651245	ParameterList	"png_const_structp pp , png_uint_32 id"		8651194	3					
ANR	8651246	Parameter	png_const_structp pp	3825:15:116702:116721	8651194	0	True				
ANR	8651247	ParameterType	png_const_structp		8651194	0					
ANR	8651248	Identifier	pp		8651194	1					
ANR	8651249	Parameter	png_uint_32 id	3825:37:116724:116737	8651194	1	True				
ANR	8651250	ParameterType	png_uint_32		8651194	0					
ANR	8651251	Identifier	id		8651194	1					
ANR	8651252	CFGEntryNode	ENTRY		8651194		True				
ANR	8651253	CFGExitNode	EXIT		8651194		True				
ANR	8651254	Symbol	pp		8651194						
ANR	8651255	Symbol	WIDTH_FROM_ID		8651194						
ANR	8651256	Symbol	COL_FROM_ID		8651194						
ANR	8651257	Symbol	width		8651194						
ANR	8651258	Symbol	DEPTH_FROM_ID		8651194						
ANR	8651259	Symbol	id		8651194						
ANR	8651260	Symbol	transform_width		8651194						
ANR	8651261	Function	standard_height	3836:0:116910:117142							
ANR	8651262	FunctionDef	"standard_height (png_const_structp pp , png_uint_32 id)"		8651261	0					
ANR	8651263	CompoundStatement		3838:0:116983:117142	8651261	0					
ANR	8651264	IdentifierDeclStatement	png_uint_32 height = HEIGHT_FROM_ID ( id ) ;	3839:3:116988:117027	8651261	0	True				
ANR	8651265	IdentifierDecl	height = HEIGHT_FROM_ID ( id )		8651261	0					
ANR	8651266	IdentifierDeclType	png_uint_32		8651261	0					
ANR	8651267	Identifier	height		8651261	1					
ANR	8651268	AssignmentExpression	height = HEIGHT_FROM_ID ( id )		8651261	2		=			
ANR	8651269	Identifier	height		8651261	0					
ANR	8651270	CallExpression	HEIGHT_FROM_ID ( id )		8651261	1					
ANR	8651271	Callee	HEIGHT_FROM_ID		8651261	0					
ANR	8651272	Identifier	HEIGHT_FROM_ID		8651261	0					
ANR	8651273	ArgumentList	id		8651261	1					
ANR	8651274	Argument	id		8651261	0					
ANR	8651275	Identifier	id		8651261	0					
ANR	8651276	IfStatement	if ( height == 0 )		8651261	1					
ANR	8651277	Condition	height == 0	3841:7:117037:117047	8651261	0	True				
ANR	8651278	EqualityExpression	height == 0		8651261	0		==			
ANR	8651279	Identifier	height		8651261	0					
ANR	8651280	PrimaryExpression	0		8651261	1					
ANR	8651281	ExpressionStatement	"height = transform_height ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"	3842:6:117056:117121	8651261	1	True				
ANR	8651282	AssignmentExpression	"height = transform_height ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8651261	0		=			
ANR	8651283	Identifier	height		8651261	0					
ANR	8651284	CallExpression	"transform_height ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8651261	1					
ANR	8651285	Callee	transform_height		8651261	0					
ANR	8651286	Identifier	transform_height		8651261	0					
ANR	8651287	ArgumentList	pp		8651261	1					
ANR	8651288	Argument	pp		8651261	0					
ANR	8651289	Identifier	pp		8651261	0					
ANR	8651290	Argument	COL_FROM_ID ( id )		8651261	1					
ANR	8651291	CallExpression	COL_FROM_ID ( id )		8651261	0					
ANR	8651292	Callee	COL_FROM_ID		8651261	0					
ANR	8651293	Identifier	COL_FROM_ID		8651261	0					
ANR	8651294	ArgumentList	id		8651261	1					
ANR	8651295	Argument	id		8651261	0					
ANR	8651296	Identifier	id		8651261	0					
ANR	8651297	Argument	DEPTH_FROM_ID ( id )		8651261	2					
ANR	8651298	CallExpression	DEPTH_FROM_ID ( id )		8651261	0					
ANR	8651299	Callee	DEPTH_FROM_ID		8651261	0					
ANR	8651300	Identifier	DEPTH_FROM_ID		8651261	0					
ANR	8651301	ArgumentList	id		8651261	1					
ANR	8651302	Argument	id		8651261	0					
ANR	8651303	Identifier	id		8651261	0					
ANR	8651304	ReturnStatement	return height ;	3844:3:117127:117140	8651261	2	True				
ANR	8651305	Identifier	height		8651261	0					
ANR	8651306	ReturnType	static png_uint_32		8651261	1					
ANR	8651307	Identifier	standard_height		8651261	2					
ANR	8651308	ParameterList	"png_const_structp pp , png_uint_32 id"		8651261	3					
ANR	8651309	Parameter	png_const_structp pp	3837:16:116945:116964	8651261	0	True				
ANR	8651310	ParameterType	png_const_structp		8651261	0					
ANR	8651311	Identifier	pp		8651261	1					
ANR	8651312	Parameter	png_uint_32 id	3837:38:116967:116980	8651261	1	True				
ANR	8651313	ParameterType	png_uint_32		8651261	0					
ANR	8651314	Identifier	id		8651261	1					
ANR	8651315	CFGEntryNode	ENTRY		8651261		True				
ANR	8651316	CFGExitNode	EXIT		8651261		True				
ANR	8651317	Symbol	pp		8651261						
ANR	8651318	Symbol	transform_height		8651261						
ANR	8651319	Symbol	COL_FROM_ID		8651261						
ANR	8651320	Symbol	HEIGHT_FROM_ID		8651261						
ANR	8651321	Symbol	DEPTH_FROM_ID		8651261						
ANR	8651322	Symbol	id		8651261						
ANR	8651323	Symbol	height		8651261						
ANR	8651324	Function	standard_rowsize	3847:0:117145:117388							
ANR	8651325	FunctionDef	"standard_rowsize (png_const_structp pp , png_uint_32 id)"		8651324	0					
ANR	8651326	CompoundStatement		3849:0:117219:117388	8651324	0					
ANR	8651327	IdentifierDeclStatement	"png_uint_32 width = standard_width ( pp , id ) ;"	3850:3:117224:117266	8651324	0	True				
ANR	8651328	IdentifierDecl	"width = standard_width ( pp , id )"		8651324	0					
ANR	8651329	IdentifierDeclType	png_uint_32		8651324	0					
ANR	8651330	Identifier	width		8651324	1					
ANR	8651331	AssignmentExpression	"width = standard_width ( pp , id )"		8651324	2		=			
ANR	8651332	Identifier	width		8651324	0					
ANR	8651333	CallExpression	"standard_width ( pp , id )"		8651324	1					
ANR	8651334	Callee	standard_width		8651324	0					
ANR	8651335	Identifier	standard_width		8651324	0					
ANR	8651336	ArgumentList	pp		8651324	1					
ANR	8651337	Argument	pp		8651324	0					
ANR	8651338	Identifier	pp		8651324	0					
ANR	8651339	Argument	id		8651324	1					
ANR	8651340	Identifier	id		8651324	0					
ANR	8651341	ExpressionStatement	"width *= bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"	3853:3:117302:117359	8651324	1	True				
ANR	8651342	AssignmentExpression	"width *= bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8651324	0		*=			
ANR	8651343	Identifier	width		8651324	0					
ANR	8651344	CallExpression	"bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8651324	1					
ANR	8651345	Callee	bit_size		8651324	0					
ANR	8651346	Identifier	bit_size		8651324	0					
ANR	8651347	ArgumentList	pp		8651324	1					
ANR	8651348	Argument	pp		8651324	0					
ANR	8651349	Identifier	pp		8651324	0					
ANR	8651350	Argument	COL_FROM_ID ( id )		8651324	1					
ANR	8651351	CallExpression	COL_FROM_ID ( id )		8651324	0					
ANR	8651352	Callee	COL_FROM_ID		8651324	0					
ANR	8651353	Identifier	COL_FROM_ID		8651324	0					
ANR	8651354	ArgumentList	id		8651324	1					
ANR	8651355	Argument	id		8651324	0					
ANR	8651356	Identifier	id		8651324	0					
ANR	8651357	Argument	DEPTH_FROM_ID ( id )		8651324	2					
ANR	8651358	CallExpression	DEPTH_FROM_ID ( id )		8651324	0					
ANR	8651359	Callee	DEPTH_FROM_ID		8651324	0					
ANR	8651360	Identifier	DEPTH_FROM_ID		8651324	0					
ANR	8651361	ArgumentList	id		8651324	1					
ANR	8651362	Argument	id		8651324	0					
ANR	8651363	Identifier	id		8651324	0					
ANR	8651364	ReturnStatement	return ( width + 7 ) / 8 ;	3854:3:117364:117386	8651324	2	True				
ANR	8651365	MultiplicativeExpression	( width + 7 ) / 8		8651324	0		/			
ANR	8651366	AdditiveExpression	width + 7		8651324	0		+			
ANR	8651367	Identifier	width		8651324	0					
ANR	8651368	PrimaryExpression	7		8651324	1					
ANR	8651369	PrimaryExpression	8		8651324	1					
ANR	8651370	ReturnType	static png_uint_32		8651324	1					
ANR	8651371	Identifier	standard_rowsize		8651324	2					
ANR	8651372	ParameterList	"png_const_structp pp , png_uint_32 id"		8651324	3					
ANR	8651373	Parameter	png_const_structp pp	3848:17:117181:117200	8651324	0	True				
ANR	8651374	ParameterType	png_const_structp		8651324	0					
ANR	8651375	Identifier	pp		8651324	1					
ANR	8651376	Parameter	png_uint_32 id	3848:39:117203:117216	8651324	1	True				
ANR	8651377	ParameterType	png_uint_32		8651324	0					
ANR	8651378	Identifier	id		8651324	1					
ANR	8651379	CFGEntryNode	ENTRY		8651324		True				
ANR	8651380	CFGExitNode	EXIT		8651324		True				
ANR	8651381	Symbol	pp		8651324						
ANR	8651382	Symbol	COL_FROM_ID		8651324						
ANR	8651383	Symbol	standard_width		8651324						
ANR	8651384	Symbol	bit_size		8651324						
ANR	8651385	Symbol	width		8651324						
ANR	8651386	Symbol	DEPTH_FROM_ID		8651324						
ANR	8651387	Symbol	id		8651324						
ANR	8651388	Function	transform_row	3858:0:117423:120646							
ANR	8651389	FunctionDef	"transform_row (png_const_structp pp , png_byte buffer [ TRANSFORM_ROWMAX ] , png_byte colour_type , png_byte bit_depth , png_uint_32 y)"		8651388	0					
ANR	8651390	CompoundStatement		3861:0:117566:120646	8651388	0					
ANR	8651391	IdentifierDeclStatement	png_uint_32 v = y << 7 ;	3862:3:117571:117593	8651388	0	True				
ANR	8651392	IdentifierDecl	v = y << 7		8651388	0					
ANR	8651393	IdentifierDeclType	png_uint_32		8651388	0					
ANR	8651394	Identifier	v		8651388	1					
ANR	8651395	AssignmentExpression	v = y << 7		8651388	2		=			
ANR	8651396	Identifier	v		8651388	0					
ANR	8651397	ShiftExpression	y << 7		8651388	1		<<			
ANR	8651398	Identifier	y		8651388	0					
ANR	8651399	PrimaryExpression	7		8651388	1					
ANR	8651400	IdentifierDeclStatement	png_uint_32 i = 0 ;	3863:3:117598:117615	8651388	1	True				
ANR	8651401	IdentifierDecl	i = 0		8651388	0					
ANR	8651402	IdentifierDeclType	png_uint_32		8651388	0					
ANR	8651403	Identifier	i		8651388	1					
ANR	8651404	AssignmentExpression	i = 0		8651388	2		=			
ANR	8651405	Identifier	i		8651388	0					
ANR	8651406	PrimaryExpression	0		8651388	1					
ANR	8651407	SwitchStatement	"switch ( bit_size ( pp , colour_type , bit_depth ) )"		8651388	2					
ANR	8651408	Condition	"bit_size ( pp , colour_type , bit_depth )"	3865:11:117629:117664	8651388	0	True				
ANR	8651409	CallExpression	"bit_size ( pp , colour_type , bit_depth )"		8651388	0					
ANR	8651410	Callee	bit_size		8651388	0					
ANR	8651411	Identifier	bit_size		8651388	0					
ANR	8651412	ArgumentList	pp		8651388	1					
ANR	8651413	Argument	pp		8651388	0					
ANR	8651414	Identifier	pp		8651388	0					
ANR	8651415	Argument	colour_type		8651388	1					
ANR	8651416	Identifier	colour_type		8651388	0					
ANR	8651417	Argument	bit_depth		8651388	2					
ANR	8651418	Identifier	bit_depth		8651388	0					
ANR	8651419	CompoundStatement		6:3:103:103	8651388	1					
ANR	8651420	Label	case 1 :	3867:6:117678:117684	8651388	0	True				
ANR	8651421	WhileStatement	while ( i < 128 / 8 )		8651388	1					
ANR	8651422	Condition	i < 128 / 8	3868:16:117702:117708	8651388	0	True				
ANR	8651423	RelationalExpression	i < 128 / 8		8651388	0		<			
ANR	8651424	Identifier	i		8651388	0					
ANR	8651425	MultiplicativeExpression	128 / 8		8651388	1		/			
ANR	8651426	PrimaryExpression	128		8651388	0					
ANR	8651427	PrimaryExpression	8		8651388	1					
ANR	8651428	ExpressionStatement	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , v += 17 , ++ i"	3868:25:117711:117757	8651388	1	True				
ANR	8651429	Expression	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , v += 17 , ++ i"		8651388	0					
ANR	8651430	AssignmentExpression	buffer [ i ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651431	ArrayIndexing	buffer [ i ]		8651388	0					
ANR	8651432	Identifier	buffer		8651388	0					
ANR	8651433	Identifier	i		8651388	1					
ANR	8651434	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651435	CastTarget	png_byte		8651388	0					
ANR	8651436	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651437	Identifier	v		8651388	0					
ANR	8651438	PrimaryExpression	0xff		8651388	1					
ANR	8651439	Expression	"v += 17 , ++ i"		8651388	1					
ANR	8651440	AssignmentExpression	v += 17		8651388	0		+=			
ANR	8651441	Identifier	v		8651388	0					
ANR	8651442	PrimaryExpression	17		8651388	1					
ANR	8651443	UnaryExpression	++ i		8651388	1					
ANR	8651444	IncDec	++		8651388	0					
ANR	8651445	Identifier	i		8651388	1					
ANR	8651446	ReturnStatement	return ;	3869:9:117768:117774	8651388	2	True				
ANR	8651447	Label	case 2 :	3871:6:117783:117789	8651388	3	True				
ANR	8651448	WhileStatement	while ( i < 128 / 4 )		8651388	4					
ANR	8651449	Condition	i < 128 / 4	3872:16:117807:117813	8651388	0	True				
ANR	8651450	RelationalExpression	i < 128 / 4		8651388	0		<			
ANR	8651451	Identifier	i		8651388	0					
ANR	8651452	MultiplicativeExpression	128 / 4		8651388	1		/			
ANR	8651453	PrimaryExpression	128		8651388	0					
ANR	8651454	PrimaryExpression	4		8651388	1					
ANR	8651455	ExpressionStatement	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , v += 33 , ++ i"	3872:25:117816:117862	8651388	1	True				
ANR	8651456	Expression	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , v += 33 , ++ i"		8651388	0					
ANR	8651457	AssignmentExpression	buffer [ i ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651458	ArrayIndexing	buffer [ i ]		8651388	0					
ANR	8651459	Identifier	buffer		8651388	0					
ANR	8651460	Identifier	i		8651388	1					
ANR	8651461	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651462	CastTarget	png_byte		8651388	0					
ANR	8651463	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651464	Identifier	v		8651388	0					
ANR	8651465	PrimaryExpression	0xff		8651388	1					
ANR	8651466	Expression	"v += 33 , ++ i"		8651388	1					
ANR	8651467	AssignmentExpression	v += 33		8651388	0		+=			
ANR	8651468	Identifier	v		8651388	0					
ANR	8651469	PrimaryExpression	33		8651388	1					
ANR	8651470	UnaryExpression	++ i		8651388	1					
ANR	8651471	IncDec	++		8651388	0					
ANR	8651472	Identifier	i		8651388	1					
ANR	8651473	ReturnStatement	return ;	3873:9:117873:117879	8651388	5	True				
ANR	8651474	Label	case 4 :	3875:6:117888:117894	8651388	6	True				
ANR	8651475	WhileStatement	while ( i < 128 / 2 )		8651388	7					
ANR	8651476	Condition	i < 128 / 2	3876:16:117912:117918	8651388	0	True				
ANR	8651477	RelationalExpression	i < 128 / 2		8651388	0		<			
ANR	8651478	Identifier	i		8651388	0					
ANR	8651479	MultiplicativeExpression	128 / 2		8651388	1		/			
ANR	8651480	PrimaryExpression	128		8651388	0					
ANR	8651481	PrimaryExpression	2		8651388	1					
ANR	8651482	ExpressionStatement	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , v += 65 , ++ i"	3876:25:117921:117967	8651388	1	True				
ANR	8651483	Expression	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , v += 65 , ++ i"		8651388	0					
ANR	8651484	AssignmentExpression	buffer [ i ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651485	ArrayIndexing	buffer [ i ]		8651388	0					
ANR	8651486	Identifier	buffer		8651388	0					
ANR	8651487	Identifier	i		8651388	1					
ANR	8651488	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651489	CastTarget	png_byte		8651388	0					
ANR	8651490	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651491	Identifier	v		8651388	0					
ANR	8651492	PrimaryExpression	0xff		8651388	1					
ANR	8651493	Expression	"v += 65 , ++ i"		8651388	1					
ANR	8651494	AssignmentExpression	v += 65		8651388	0		+=			
ANR	8651495	Identifier	v		8651388	0					
ANR	8651496	PrimaryExpression	65		8651388	1					
ANR	8651497	UnaryExpression	++ i		8651388	1					
ANR	8651498	IncDec	++		8651388	0					
ANR	8651499	Identifier	i		8651388	1					
ANR	8651500	ReturnStatement	return ;	3877:9:117978:117984	8651388	8	True				
ANR	8651501	Label	case 8 :	3879:6:117993:117999	8651388	9	True				
ANR	8651502	WhileStatement	while ( i < 128 )		8651388	10					
ANR	8651503	Condition	i < 128	3881:16:118087:118091	8651388	0	True				
ANR	8651504	RelationalExpression	i < 128		8651388	0		<			
ANR	8651505	Identifier	i		8651388	0					
ANR	8651506	PrimaryExpression	128		8651388	1					
ANR	8651507	ExpressionStatement	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , ++ v , ++ i"	3881:23:118094:118136	8651388	1	True				
ANR	8651508	Expression	"buffer [ i ] = ( png_byte ) ( v & 0xff ) , ++ v , ++ i"		8651388	0					
ANR	8651509	AssignmentExpression	buffer [ i ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651510	ArrayIndexing	buffer [ i ]		8651388	0					
ANR	8651511	Identifier	buffer		8651388	0					
ANR	8651512	Identifier	i		8651388	1					
ANR	8651513	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651514	CastTarget	png_byte		8651388	0					
ANR	8651515	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651516	Identifier	v		8651388	0					
ANR	8651517	PrimaryExpression	0xff		8651388	1					
ANR	8651518	Expression	"++ v , ++ i"		8651388	1					
ANR	8651519	UnaryExpression	++ v		8651388	0					
ANR	8651520	IncDec	++		8651388	0					
ANR	8651521	Identifier	v		8651388	1					
ANR	8651522	UnaryExpression	++ i		8651388	1					
ANR	8651523	IncDec	++		8651388	0					
ANR	8651524	Identifier	i		8651388	1					
ANR	8651525	ReturnStatement	return ;	3882:9:118147:118153	8651388	11	True				
ANR	8651526	Label	case 16 :	3884:6:118162:118169	8651388	12	True				
ANR	8651527	WhileStatement	while ( i < 128 )		8651388	13					
ANR	8651528	Condition	i < 128	3888:16:118329:118333	8651388	0	True				
ANR	8651529	RelationalExpression	i < 128		8651388	0		<			
ANR	8651530	Identifier	i		8651388	0					
ANR	8651531	PrimaryExpression	128		8651388	1					
ANR	8651532	CompoundStatement		29:9:778:778	8651388	1					
ANR	8651533	ExpressionStatement	buffer [ 2 * i ] = ( png_byte ) ( ( v >> 8 ) & 0xff )	3890:12:118359:118398	8651388	0	True				
ANR	8651534	AssignmentExpression	buffer [ 2 * i ] = ( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	0		=			
ANR	8651535	ArrayIndexing	buffer [ 2 * i ]		8651388	0					
ANR	8651536	Identifier	buffer		8651388	0					
ANR	8651537	MultiplicativeExpression	2 * i		8651388	1		*			
ANR	8651538	PrimaryExpression	2		8651388	0					
ANR	8651539	Identifier	i		8651388	1					
ANR	8651540	CastExpression	( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	1					
ANR	8651541	CastTarget	png_byte		8651388	0					
ANR	8651542	BitAndExpression	( v >> 8 ) & 0xff		8651388	1		&			
ANR	8651543	ShiftExpression	v >> 8		8651388	0		>>			
ANR	8651544	Identifier	v		8651388	0					
ANR	8651545	PrimaryExpression	8		8651388	1					
ANR	8651546	PrimaryExpression	0xff		8651388	1					
ANR	8651547	ExpressionStatement	buffer [ 2 * i + 1 ] = ( png_byte ) ( v & 0xff )	3891:12:118412:118448	8651388	1	True				
ANR	8651548	AssignmentExpression	buffer [ 2 * i + 1 ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651549	ArrayIndexing	buffer [ 2 * i + 1 ]		8651388	0					
ANR	8651550	Identifier	buffer		8651388	0					
ANR	8651551	AdditiveExpression	2 * i + 1		8651388	1		+			
ANR	8651552	MultiplicativeExpression	2 * i		8651388	0		*			
ANR	8651553	PrimaryExpression	2		8651388	0					
ANR	8651554	Identifier	i		8651388	1					
ANR	8651555	PrimaryExpression	1		8651388	1					
ANR	8651556	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651557	CastTarget	png_byte		8651388	0					
ANR	8651558	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651559	Identifier	v		8651388	0					
ANR	8651560	PrimaryExpression	0xff		8651388	1					
ANR	8651561	ExpressionStatement	++ v	3892:12:118462:118465	8651388	2	True				
ANR	8651562	UnaryExpression	++ v		8651388	0					
ANR	8651563	IncDec	++		8651388	0					
ANR	8651564	Identifier	v		8651388	1					
ANR	8651565	ExpressionStatement	++ i	3893:12:118479:118482	8651388	3	True				
ANR	8651566	UnaryExpression	++ i		8651388	0					
ANR	8651567	IncDec	++		8651388	0					
ANR	8651568	Identifier	i		8651388	1					
ANR	8651569	ReturnStatement	return ;	3896:9:118505:118511	8651388	14	True				
ANR	8651570	Label	case 24 :	3898:6:118520:118527	8651388	15	True				
ANR	8651571	WhileStatement	while ( i < 128 )		8651388	16					
ANR	8651572	Condition	i < 128	3900:16:118597:118601	8651388	0	True				
ANR	8651573	RelationalExpression	i < 128		8651388	0		<			
ANR	8651574	Identifier	i		8651388	0					
ANR	8651575	PrimaryExpression	128		8651388	1					
ANR	8651576	CompoundStatement		41:9:1046:1046	8651388	1					
ANR	8651577	ExpressionStatement	buffer [ 3 * i + 0 ] = ( png_byte ) ( ( v >> 8 ) & 0xff )	3903:12:118691:118734	8651388	0	True				
ANR	8651578	AssignmentExpression	buffer [ 3 * i + 0 ] = ( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	0		=			
ANR	8651579	ArrayIndexing	buffer [ 3 * i + 0 ]		8651388	0					
ANR	8651580	Identifier	buffer		8651388	0					
ANR	8651581	AdditiveExpression	3 * i + 0		8651388	1		+			
ANR	8651582	MultiplicativeExpression	3 * i		8651388	0		*			
ANR	8651583	PrimaryExpression	3		8651388	0					
ANR	8651584	Identifier	i		8651388	1					
ANR	8651585	PrimaryExpression	0		8651388	1					
ANR	8651586	CastExpression	( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	1					
ANR	8651587	CastTarget	png_byte		8651388	0					
ANR	8651588	BitAndExpression	( v >> 8 ) & 0xff		8651388	1		&			
ANR	8651589	ShiftExpression	v >> 8		8651388	0		>>			
ANR	8651590	Identifier	v		8651388	0					
ANR	8651591	PrimaryExpression	8		8651388	1					
ANR	8651592	PrimaryExpression	0xff		8651388	1					
ANR	8651593	ExpressionStatement	buffer [ 3 * i + 1 ] = ( png_byte ) ( v & 0xff )	3904:12:118748:118784	8651388	1	True				
ANR	8651594	AssignmentExpression	buffer [ 3 * i + 1 ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651595	ArrayIndexing	buffer [ 3 * i + 1 ]		8651388	0					
ANR	8651596	Identifier	buffer		8651388	0					
ANR	8651597	AdditiveExpression	3 * i + 1		8651388	1		+			
ANR	8651598	MultiplicativeExpression	3 * i		8651388	0		*			
ANR	8651599	PrimaryExpression	3		8651388	0					
ANR	8651600	Identifier	i		8651388	1					
ANR	8651601	PrimaryExpression	1		8651388	1					
ANR	8651602	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651603	CastTarget	png_byte		8651388	0					
ANR	8651604	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651605	Identifier	v		8651388	0					
ANR	8651606	PrimaryExpression	0xff		8651388	1					
ANR	8651607	ExpressionStatement	buffer [ 3 * i + 2 ] = ( png_byte ) ( ( ( v >> 8 ) ^ v ) & 0xff )	3905:12:118798:118847	8651388	2	True				
ANR	8651608	AssignmentExpression	buffer [ 3 * i + 2 ] = ( png_byte ) ( ( ( v >> 8 ) ^ v ) & 0xff )		8651388	0		=			
ANR	8651609	ArrayIndexing	buffer [ 3 * i + 2 ]		8651388	0					
ANR	8651610	Identifier	buffer		8651388	0					
ANR	8651611	AdditiveExpression	3 * i + 2		8651388	1		+			
ANR	8651612	MultiplicativeExpression	3 * i		8651388	0		*			
ANR	8651613	PrimaryExpression	3		8651388	0					
ANR	8651614	Identifier	i		8651388	1					
ANR	8651615	PrimaryExpression	2		8651388	1					
ANR	8651616	CastExpression	( png_byte ) ( ( ( v >> 8 ) ^ v ) & 0xff )		8651388	1					
ANR	8651617	CastTarget	png_byte		8651388	0					
ANR	8651618	BitAndExpression	( ( v >> 8 ) ^ v ) & 0xff		8651388	1		&			
ANR	8651619	ExclusiveOrExpression	( v >> 8 ) ^ v		8651388	0		^			
ANR	8651620	ShiftExpression	v >> 8		8651388	0		>>			
ANR	8651621	Identifier	v		8651388	0					
ANR	8651622	PrimaryExpression	8		8651388	1					
ANR	8651623	Identifier	v		8651388	1					
ANR	8651624	PrimaryExpression	0xff		8651388	1					
ANR	8651625	ExpressionStatement	++ v	3906:12:118861:118864	8651388	3	True				
ANR	8651626	UnaryExpression	++ v		8651388	0					
ANR	8651627	IncDec	++		8651388	0					
ANR	8651628	Identifier	v		8651388	1					
ANR	8651629	ExpressionStatement	++ i	3907:12:118878:118881	8651388	4	True				
ANR	8651630	UnaryExpression	++ i		8651388	0					
ANR	8651631	IncDec	++		8651388	0					
ANR	8651632	Identifier	i		8651388	1					
ANR	8651633	ReturnStatement	return ;	3910:9:118904:118910	8651388	17	True				
ANR	8651634	Label	case 32 :	3912:6:118919:118926	8651388	18	True				
ANR	8651635	WhileStatement	while ( i < 128 )		8651388	19					
ANR	8651636	Condition	i < 128	3914:16:119000:119004	8651388	0	True				
ANR	8651637	RelationalExpression	i < 128		8651388	0		<			
ANR	8651638	Identifier	i		8651388	0					
ANR	8651639	PrimaryExpression	128		8651388	1					
ANR	8651640	CompoundStatement		55:9:1449:1449	8651388	1					
ANR	8651641	ExpressionStatement	buffer [ 4 * i + 0 ] = ( png_byte ) ( ( v >> 8 ) & 0xff )	3916:12:119030:119073	8651388	0	True				
ANR	8651642	AssignmentExpression	buffer [ 4 * i + 0 ] = ( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	0		=			
ANR	8651643	ArrayIndexing	buffer [ 4 * i + 0 ]		8651388	0					
ANR	8651644	Identifier	buffer		8651388	0					
ANR	8651645	AdditiveExpression	4 * i + 0		8651388	1		+			
ANR	8651646	MultiplicativeExpression	4 * i		8651388	0		*			
ANR	8651647	PrimaryExpression	4		8651388	0					
ANR	8651648	Identifier	i		8651388	1					
ANR	8651649	PrimaryExpression	0		8651388	1					
ANR	8651650	CastExpression	( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	1					
ANR	8651651	CastTarget	png_byte		8651388	0					
ANR	8651652	BitAndExpression	( v >> 8 ) & 0xff		8651388	1		&			
ANR	8651653	ShiftExpression	v >> 8		8651388	0		>>			
ANR	8651654	Identifier	v		8651388	0					
ANR	8651655	PrimaryExpression	8		8651388	1					
ANR	8651656	PrimaryExpression	0xff		8651388	1					
ANR	8651657	ExpressionStatement	buffer [ 4 * i + 1 ] = ( png_byte ) ( v & 0xff )	3917:12:119087:119123	8651388	1	True				
ANR	8651658	AssignmentExpression	buffer [ 4 * i + 1 ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651659	ArrayIndexing	buffer [ 4 * i + 1 ]		8651388	0					
ANR	8651660	Identifier	buffer		8651388	0					
ANR	8651661	AdditiveExpression	4 * i + 1		8651388	1		+			
ANR	8651662	MultiplicativeExpression	4 * i		8651388	0		*			
ANR	8651663	PrimaryExpression	4		8651388	0					
ANR	8651664	Identifier	i		8651388	1					
ANR	8651665	PrimaryExpression	1		8651388	1					
ANR	8651666	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651667	CastTarget	png_byte		8651388	0					
ANR	8651668	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651669	Identifier	v		8651388	0					
ANR	8651670	PrimaryExpression	0xff		8651388	1					
ANR	8651671	ExpressionStatement	buffer [ 4 * i + 2 ] = ( png_byte ) ( ( v >> 8 ) & 0xff )	3918:12:119137:119180	8651388	2	True				
ANR	8651672	AssignmentExpression	buffer [ 4 * i + 2 ] = ( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	0		=			
ANR	8651673	ArrayIndexing	buffer [ 4 * i + 2 ]		8651388	0					
ANR	8651674	Identifier	buffer		8651388	0					
ANR	8651675	AdditiveExpression	4 * i + 2		8651388	1		+			
ANR	8651676	MultiplicativeExpression	4 * i		8651388	0		*			
ANR	8651677	PrimaryExpression	4		8651388	0					
ANR	8651678	Identifier	i		8651388	1					
ANR	8651679	PrimaryExpression	2		8651388	1					
ANR	8651680	CastExpression	( png_byte ) ( ( v >> 8 ) & 0xff )		8651388	1					
ANR	8651681	CastTarget	png_byte		8651388	0					
ANR	8651682	BitAndExpression	( v >> 8 ) & 0xff		8651388	1		&			
ANR	8651683	ShiftExpression	v >> 8		8651388	0		>>			
ANR	8651684	Identifier	v		8651388	0					
ANR	8651685	PrimaryExpression	8		8651388	1					
ANR	8651686	PrimaryExpression	0xff		8651388	1					
ANR	8651687	ExpressionStatement	buffer [ 4 * i + 3 ] = ( png_byte ) ( v & 0xff )	3919:12:119194:119230	8651388	3	True				
ANR	8651688	AssignmentExpression	buffer [ 4 * i + 3 ] = ( png_byte ) ( v & 0xff )		8651388	0		=			
ANR	8651689	ArrayIndexing	buffer [ 4 * i + 3 ]		8651388	0					
ANR	8651690	Identifier	buffer		8651388	0					
ANR	8651691	AdditiveExpression	4 * i + 3		8651388	1		+			
ANR	8651692	MultiplicativeExpression	4 * i		8651388	0		*			
ANR	8651693	PrimaryExpression	4		8651388	0					
ANR	8651694	Identifier	i		8651388	1					
ANR	8651695	PrimaryExpression	3		8651388	1					
ANR	8651696	CastExpression	( png_byte ) ( v & 0xff )		8651388	1					
ANR	8651697	CastTarget	png_byte		8651388	0					
ANR	8651698	BitAndExpression	v & 0xff		8651388	1		&			
ANR	8651699	Identifier	v		8651388	0					
ANR	8651700	PrimaryExpression	0xff		8651388	1					
ANR	8651701	ExpressionStatement	++ v	3920:12:119244:119247	8651388	4	True				
ANR	8651702	UnaryExpression	++ v		8651388	0					
ANR	8651703	IncDec	++		8651388	0					
ANR	8651704	Identifier	v		8651388	1					
ANR	8651705	ExpressionStatement	++ i	3921:12:119261:119264	8651388	5	True				
ANR	8651706	UnaryExpression	++ i		8651388	0					
ANR	8651707	IncDec	++		8651388	0					
ANR	8651708	Identifier	i		8651388	1					
ANR	8651709	ReturnStatement	return ;	3924:9:119287:119293	8651388	20	True				
ANR	8651710	Label	case 48 :	3926:6:119302:119309	8651388	21	True				
ANR	8651711	WhileStatement	while ( i < 128 )		8651388	22					
ANR	8651712	Condition	i < 128	3930:16:119489:119493	8651388	0	True				
ANR	8651713	RelationalExpression	i < 128		8651388	0		<			
ANR	8651714	Identifier	i		8651388	0					
ANR	8651715	PrimaryExpression	128		8651388	1					
ANR	8651716	CompoundStatement		72:12:1952:1971	8651388	1					
ANR	8651717	IdentifierDeclStatement	png_uint_32 t = v ++ ;	3932:12:119519:119538	8651388	0	True				
ANR	8651718	IdentifierDecl	t = v ++		8651388	0					
ANR	8651719	IdentifierDeclType	png_uint_32		8651388	0					
ANR	8651720	Identifier	t		8651388	1					
ANR	8651721	AssignmentExpression	t = v ++		8651388	2		=			
ANR	8651722	Identifier	t		8651388	0					
ANR	8651723	PostIncDecOperationExpression	v ++		8651388	1					
ANR	8651724	Identifier	v		8651388	0					
ANR	8651725	IncDec	++		8651388	1					
ANR	8651726	ExpressionStatement	buffer [ 6 * i + 0 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3933:12:119552:119595	8651388	1	True				
ANR	8651727	AssignmentExpression	buffer [ 6 * i + 0 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651728	ArrayIndexing	buffer [ 6 * i + 0 ]		8651388	0					
ANR	8651729	Identifier	buffer		8651388	0					
ANR	8651730	AdditiveExpression	6 * i + 0		8651388	1		+			
ANR	8651731	MultiplicativeExpression	6 * i		8651388	0		*			
ANR	8651732	PrimaryExpression	6		8651388	0					
ANR	8651733	Identifier	i		8651388	1					
ANR	8651734	PrimaryExpression	0		8651388	1					
ANR	8651735	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651736	CastTarget	png_byte		8651388	0					
ANR	8651737	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651738	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651739	Identifier	t		8651388	0					
ANR	8651740	PrimaryExpression	8		8651388	1					
ANR	8651741	PrimaryExpression	0xff		8651388	1					
ANR	8651742	ExpressionStatement	buffer [ 6 * i + 1 ] = ( png_byte ) ( t & 0xff )	3934:12:119609:119645	8651388	2	True				
ANR	8651743	AssignmentExpression	buffer [ 6 * i + 1 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651744	ArrayIndexing	buffer [ 6 * i + 1 ]		8651388	0					
ANR	8651745	Identifier	buffer		8651388	0					
ANR	8651746	AdditiveExpression	6 * i + 1		8651388	1		+			
ANR	8651747	MultiplicativeExpression	6 * i		8651388	0		*			
ANR	8651748	PrimaryExpression	6		8651388	0					
ANR	8651749	Identifier	i		8651388	1					
ANR	8651750	PrimaryExpression	1		8651388	1					
ANR	8651751	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651752	CastTarget	png_byte		8651388	0					
ANR	8651753	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651754	Identifier	t		8651388	0					
ANR	8651755	PrimaryExpression	0xff		8651388	1					
ANR	8651756	ExpressionStatement	t *= 257	3935:12:119659:119667	8651388	3	True				
ANR	8651757	AssignmentExpression	t *= 257		8651388	0		*=			
ANR	8651758	Identifier	t		8651388	0					
ANR	8651759	PrimaryExpression	257		8651388	1					
ANR	8651760	ExpressionStatement	buffer [ 6 * i + 2 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3936:12:119681:119724	8651388	4	True				
ANR	8651761	AssignmentExpression	buffer [ 6 * i + 2 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651762	ArrayIndexing	buffer [ 6 * i + 2 ]		8651388	0					
ANR	8651763	Identifier	buffer		8651388	0					
ANR	8651764	AdditiveExpression	6 * i + 2		8651388	1		+			
ANR	8651765	MultiplicativeExpression	6 * i		8651388	0		*			
ANR	8651766	PrimaryExpression	6		8651388	0					
ANR	8651767	Identifier	i		8651388	1					
ANR	8651768	PrimaryExpression	2		8651388	1					
ANR	8651769	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651770	CastTarget	png_byte		8651388	0					
ANR	8651771	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651772	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651773	Identifier	t		8651388	0					
ANR	8651774	PrimaryExpression	8		8651388	1					
ANR	8651775	PrimaryExpression	0xff		8651388	1					
ANR	8651776	ExpressionStatement	buffer [ 6 * i + 3 ] = ( png_byte ) ( t & 0xff )	3937:12:119738:119774	8651388	5	True				
ANR	8651777	AssignmentExpression	buffer [ 6 * i + 3 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651778	ArrayIndexing	buffer [ 6 * i + 3 ]		8651388	0					
ANR	8651779	Identifier	buffer		8651388	0					
ANR	8651780	AdditiveExpression	6 * i + 3		8651388	1		+			
ANR	8651781	MultiplicativeExpression	6 * i		8651388	0		*			
ANR	8651782	PrimaryExpression	6		8651388	0					
ANR	8651783	Identifier	i		8651388	1					
ANR	8651784	PrimaryExpression	3		8651388	1					
ANR	8651785	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651786	CastTarget	png_byte		8651388	0					
ANR	8651787	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651788	Identifier	t		8651388	0					
ANR	8651789	PrimaryExpression	0xff		8651388	1					
ANR	8651790	ExpressionStatement	t *= 17	3938:12:119788:119795	8651388	6	True				
ANR	8651791	AssignmentExpression	t *= 17		8651388	0		*=			
ANR	8651792	Identifier	t		8651388	0					
ANR	8651793	PrimaryExpression	17		8651388	1					
ANR	8651794	ExpressionStatement	buffer [ 6 * i + 4 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3939:12:119809:119852	8651388	7	True				
ANR	8651795	AssignmentExpression	buffer [ 6 * i + 4 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651796	ArrayIndexing	buffer [ 6 * i + 4 ]		8651388	0					
ANR	8651797	Identifier	buffer		8651388	0					
ANR	8651798	AdditiveExpression	6 * i + 4		8651388	1		+			
ANR	8651799	MultiplicativeExpression	6 * i		8651388	0		*			
ANR	8651800	PrimaryExpression	6		8651388	0					
ANR	8651801	Identifier	i		8651388	1					
ANR	8651802	PrimaryExpression	4		8651388	1					
ANR	8651803	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651804	CastTarget	png_byte		8651388	0					
ANR	8651805	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651806	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651807	Identifier	t		8651388	0					
ANR	8651808	PrimaryExpression	8		8651388	1					
ANR	8651809	PrimaryExpression	0xff		8651388	1					
ANR	8651810	ExpressionStatement	buffer [ 6 * i + 5 ] = ( png_byte ) ( t & 0xff )	3940:12:119866:119902	8651388	8	True				
ANR	8651811	AssignmentExpression	buffer [ 6 * i + 5 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651812	ArrayIndexing	buffer [ 6 * i + 5 ]		8651388	0					
ANR	8651813	Identifier	buffer		8651388	0					
ANR	8651814	AdditiveExpression	6 * i + 5		8651388	1		+			
ANR	8651815	MultiplicativeExpression	6 * i		8651388	0		*			
ANR	8651816	PrimaryExpression	6		8651388	0					
ANR	8651817	Identifier	i		8651388	1					
ANR	8651818	PrimaryExpression	5		8651388	1					
ANR	8651819	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651820	CastTarget	png_byte		8651388	0					
ANR	8651821	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651822	Identifier	t		8651388	0					
ANR	8651823	PrimaryExpression	0xff		8651388	1					
ANR	8651824	ExpressionStatement	++ i	3941:12:119916:119919	8651388	9	True				
ANR	8651825	UnaryExpression	++ i		8651388	0					
ANR	8651826	IncDec	++		8651388	0					
ANR	8651827	Identifier	i		8651388	1					
ANR	8651828	ReturnStatement	return ;	3944:9:119942:119948	8651388	23	True				
ANR	8651829	Label	case 64 :	3946:6:119957:119964	8651388	24	True				
ANR	8651830	WhileStatement	while ( i < 128 )		8651388	25					
ANR	8651831	Condition	i < 128	3948:16:120026:120030	8651388	0	True				
ANR	8651832	RelationalExpression	i < 128		8651388	0		<			
ANR	8651833	Identifier	i		8651388	0					
ANR	8651834	PrimaryExpression	128		8651388	1					
ANR	8651835	CompoundStatement		90:12:2489:2508	8651388	1					
ANR	8651836	IdentifierDeclStatement	png_uint_32 t = v ++ ;	3950:12:120056:120075	8651388	0	True				
ANR	8651837	IdentifierDecl	t = v ++		8651388	0					
ANR	8651838	IdentifierDeclType	png_uint_32		8651388	0					
ANR	8651839	Identifier	t		8651388	1					
ANR	8651840	AssignmentExpression	t = v ++		8651388	2		=			
ANR	8651841	Identifier	t		8651388	0					
ANR	8651842	PostIncDecOperationExpression	v ++		8651388	1					
ANR	8651843	Identifier	v		8651388	0					
ANR	8651844	IncDec	++		8651388	1					
ANR	8651845	ExpressionStatement	buffer [ 8 * i + 0 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3951:12:120089:120132	8651388	1	True				
ANR	8651846	AssignmentExpression	buffer [ 8 * i + 0 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651847	ArrayIndexing	buffer [ 8 * i + 0 ]		8651388	0					
ANR	8651848	Identifier	buffer		8651388	0					
ANR	8651849	AdditiveExpression	8 * i + 0		8651388	1		+			
ANR	8651850	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651851	PrimaryExpression	8		8651388	0					
ANR	8651852	Identifier	i		8651388	1					
ANR	8651853	PrimaryExpression	0		8651388	1					
ANR	8651854	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651855	CastTarget	png_byte		8651388	0					
ANR	8651856	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651857	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651858	Identifier	t		8651388	0					
ANR	8651859	PrimaryExpression	8		8651388	1					
ANR	8651860	PrimaryExpression	0xff		8651388	1					
ANR	8651861	ExpressionStatement	buffer [ 8 * i + 1 ] = ( png_byte ) ( t & 0xff )	3952:12:120146:120182	8651388	2	True				
ANR	8651862	AssignmentExpression	buffer [ 8 * i + 1 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651863	ArrayIndexing	buffer [ 8 * i + 1 ]		8651388	0					
ANR	8651864	Identifier	buffer		8651388	0					
ANR	8651865	AdditiveExpression	8 * i + 1		8651388	1		+			
ANR	8651866	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651867	PrimaryExpression	8		8651388	0					
ANR	8651868	Identifier	i		8651388	1					
ANR	8651869	PrimaryExpression	1		8651388	1					
ANR	8651870	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651871	CastTarget	png_byte		8651388	0					
ANR	8651872	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651873	Identifier	t		8651388	0					
ANR	8651874	PrimaryExpression	0xff		8651388	1					
ANR	8651875	ExpressionStatement	buffer [ 8 * i + 4 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3953:12:120196:120239	8651388	3	True				
ANR	8651876	AssignmentExpression	buffer [ 8 * i + 4 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651877	ArrayIndexing	buffer [ 8 * i + 4 ]		8651388	0					
ANR	8651878	Identifier	buffer		8651388	0					
ANR	8651879	AdditiveExpression	8 * i + 4		8651388	1		+			
ANR	8651880	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651881	PrimaryExpression	8		8651388	0					
ANR	8651882	Identifier	i		8651388	1					
ANR	8651883	PrimaryExpression	4		8651388	1					
ANR	8651884	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651885	CastTarget	png_byte		8651388	0					
ANR	8651886	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651887	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651888	Identifier	t		8651388	0					
ANR	8651889	PrimaryExpression	8		8651388	1					
ANR	8651890	PrimaryExpression	0xff		8651388	1					
ANR	8651891	ExpressionStatement	buffer [ 8 * i + 5 ] = ( png_byte ) ( t & 0xff )	3954:12:120253:120289	8651388	4	True				
ANR	8651892	AssignmentExpression	buffer [ 8 * i + 5 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651893	ArrayIndexing	buffer [ 8 * i + 5 ]		8651388	0					
ANR	8651894	Identifier	buffer		8651388	0					
ANR	8651895	AdditiveExpression	8 * i + 5		8651388	1		+			
ANR	8651896	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651897	PrimaryExpression	8		8651388	0					
ANR	8651898	Identifier	i		8651388	1					
ANR	8651899	PrimaryExpression	5		8651388	1					
ANR	8651900	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651901	CastTarget	png_byte		8651388	0					
ANR	8651902	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651903	Identifier	t		8651388	0					
ANR	8651904	PrimaryExpression	0xff		8651388	1					
ANR	8651905	ExpressionStatement	t *= 257	3955:12:120303:120311	8651388	5	True				
ANR	8651906	AssignmentExpression	t *= 257		8651388	0		*=			
ANR	8651907	Identifier	t		8651388	0					
ANR	8651908	PrimaryExpression	257		8651388	1					
ANR	8651909	ExpressionStatement	buffer [ 8 * i + 2 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3956:12:120325:120368	8651388	6	True				
ANR	8651910	AssignmentExpression	buffer [ 8 * i + 2 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651911	ArrayIndexing	buffer [ 8 * i + 2 ]		8651388	0					
ANR	8651912	Identifier	buffer		8651388	0					
ANR	8651913	AdditiveExpression	8 * i + 2		8651388	1		+			
ANR	8651914	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651915	PrimaryExpression	8		8651388	0					
ANR	8651916	Identifier	i		8651388	1					
ANR	8651917	PrimaryExpression	2		8651388	1					
ANR	8651918	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651919	CastTarget	png_byte		8651388	0					
ANR	8651920	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651921	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651922	Identifier	t		8651388	0					
ANR	8651923	PrimaryExpression	8		8651388	1					
ANR	8651924	PrimaryExpression	0xff		8651388	1					
ANR	8651925	ExpressionStatement	buffer [ 8 * i + 3 ] = ( png_byte ) ( t & 0xff )	3957:12:120382:120418	8651388	7	True				
ANR	8651926	AssignmentExpression	buffer [ 8 * i + 3 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651927	ArrayIndexing	buffer [ 8 * i + 3 ]		8651388	0					
ANR	8651928	Identifier	buffer		8651388	0					
ANR	8651929	AdditiveExpression	8 * i + 3		8651388	1		+			
ANR	8651930	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651931	PrimaryExpression	8		8651388	0					
ANR	8651932	Identifier	i		8651388	1					
ANR	8651933	PrimaryExpression	3		8651388	1					
ANR	8651934	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651935	CastTarget	png_byte		8651388	0					
ANR	8651936	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651937	Identifier	t		8651388	0					
ANR	8651938	PrimaryExpression	0xff		8651388	1					
ANR	8651939	ExpressionStatement	buffer [ 8 * i + 6 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )	3958:12:120432:120475	8651388	8	True				
ANR	8651940	AssignmentExpression	buffer [ 8 * i + 6 ] = ( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	0		=			
ANR	8651941	ArrayIndexing	buffer [ 8 * i + 6 ]		8651388	0					
ANR	8651942	Identifier	buffer		8651388	0					
ANR	8651943	AdditiveExpression	8 * i + 6		8651388	1		+			
ANR	8651944	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651945	PrimaryExpression	8		8651388	0					
ANR	8651946	Identifier	i		8651388	1					
ANR	8651947	PrimaryExpression	6		8651388	1					
ANR	8651948	CastExpression	( png_byte ) ( ( t >> 8 ) & 0xff )		8651388	1					
ANR	8651949	CastTarget	png_byte		8651388	0					
ANR	8651950	BitAndExpression	( t >> 8 ) & 0xff		8651388	1		&			
ANR	8651951	ShiftExpression	t >> 8		8651388	0		>>			
ANR	8651952	Identifier	t		8651388	0					
ANR	8651953	PrimaryExpression	8		8651388	1					
ANR	8651954	PrimaryExpression	0xff		8651388	1					
ANR	8651955	ExpressionStatement	buffer [ 8 * i + 7 ] = ( png_byte ) ( t & 0xff )	3959:12:120489:120525	8651388	9	True				
ANR	8651956	AssignmentExpression	buffer [ 8 * i + 7 ] = ( png_byte ) ( t & 0xff )		8651388	0		=			
ANR	8651957	ArrayIndexing	buffer [ 8 * i + 7 ]		8651388	0					
ANR	8651958	Identifier	buffer		8651388	0					
ANR	8651959	AdditiveExpression	8 * i + 7		8651388	1		+			
ANR	8651960	MultiplicativeExpression	8 * i		8651388	0		*			
ANR	8651961	PrimaryExpression	8		8651388	0					
ANR	8651962	Identifier	i		8651388	1					
ANR	8651963	PrimaryExpression	7		8651388	1					
ANR	8651964	CastExpression	( png_byte ) ( t & 0xff )		8651388	1					
ANR	8651965	CastTarget	png_byte		8651388	0					
ANR	8651966	BitAndExpression	t & 0xff		8651388	1		&			
ANR	8651967	Identifier	t		8651388	0					
ANR	8651968	PrimaryExpression	0xff		8651388	1					
ANR	8651969	ExpressionStatement	++ i	3960:12:120539:120542	8651388	10	True				
ANR	8651970	UnaryExpression	++ i		8651388	0					
ANR	8651971	IncDec	++		8651388	0					
ANR	8651972	Identifier	i		8651388	1					
ANR	8651973	ReturnStatement	return ;	3962:9:120564:120570	8651388	26	True				
ANR	8651974	Label	default :	3964:6:120579:120586	8651388	27	True				
ANR	8651975	Identifier	default		8651388	0					
ANR	8651976	BreakStatement	break ;	3965:9:120597:120602	8651388	28	True				
ANR	8651977	ExpressionStatement	"png_error ( pp , ""internal error"" )"	3968:3:120613:120644	8651388	3	True				
ANR	8651978	CallExpression	"png_error ( pp , ""internal error"" )"		8651388	0					
ANR	8651979	Callee	png_error		8651388	0					
ANR	8651980	Identifier	png_error		8651388	0					
ANR	8651981	ArgumentList	pp		8651388	1					
ANR	8651982	Argument	pp		8651388	0					
ANR	8651983	Identifier	pp		8651388	0					
ANR	8651984	Argument	"""internal error"""		8651388	1					
ANR	8651985	PrimaryExpression	"""internal error"""		8651388	0					
ANR	8651986	ReturnType	static void		8651388	1					
ANR	8651987	Identifier	transform_row		8651388	2					
ANR	8651988	ParameterList	"png_const_structp pp , png_byte buffer [ TRANSFORM_ROWMAX ] , png_byte colour_type , png_byte bit_depth , png_uint_32 y"		8651388	3					
ANR	8651989	Parameter	png_const_structp pp	3859:14:117449:117468	8651388	0	True				
ANR	8651990	ParameterType	png_const_structp		8651388	0					
ANR	8651991	Identifier	pp		8651388	1					
ANR	8651992	Parameter	png_byte buffer [ TRANSFORM_ROWMAX ]	3859:36:117471:117503	8651388	1	True				
ANR	8651993	ParameterType	png_byte [ TRANSFORM_ROWMAX ]		8651388	0					
ANR	8651994	Identifier	buffer		8651388	1					
ANR	8651995	Parameter	png_byte colour_type	3860:3:117509:117528	8651388	2	True				
ANR	8651996	ParameterType	png_byte		8651388	0					
ANR	8651997	Identifier	colour_type		8651388	1					
ANR	8651998	Parameter	png_byte bit_depth	3860:25:117531:117548	8651388	3	True				
ANR	8651999	ParameterType	png_byte		8651388	0					
ANR	8652000	Identifier	bit_depth		8651388	1					
ANR	8652001	Parameter	png_uint_32 y	3860:45:117551:117563	8651388	4	True				
ANR	8652002	ParameterType	png_uint_32		8651388	0					
ANR	8652003	Identifier	y		8651388	1					
ANR	8652004	CFGEntryNode	ENTRY		8651388		True				
ANR	8652005	CFGExitNode	EXIT		8651388		True				
ANR	8652006	Symbol	pp		8651388						
ANR	8652007	Symbol	colour_type		8651388						
ANR	8652008	Symbol	* buffer		8651388						
ANR	8652009	Symbol	* i		8651388						
ANR	8652010	Symbol	t		8651388						
ANR	8652011	Symbol	v		8651388						
ANR	8652012	Symbol	bit_size		8651388						
ANR	8652013	Symbol	y		8651388						
ANR	8652014	Symbol	i		8651388						
ANR	8652015	Symbol	buffer		8651388						
ANR	8652016	Symbol	bit_depth		8651388						
ANR	8652017	Function	check_interlace_type	3987:0:121318:121831							
ANR	8652018	FunctionDef	check_interlace_type (int const interlace_type)		8652017	0					
ANR	8652019	CompoundStatement		3989:0:121377:121831	8652017	0					
ANR	8652020	IfStatement	if ( interlace_type != PNG_INTERLACE_NONE )		8652017	0					
ANR	8652021	Condition	interlace_type != PNG_INTERLACE_NONE	3994:7:121600:121635	8652017	0	True				
ANR	8652022	EqualityExpression	interlace_type != PNG_INTERLACE_NONE		8652017	0		!=			
ANR	8652023	Identifier	interlace_type		8652017	0					
ANR	8652024	Identifier	PNG_INTERLACE_NONE		8652017	1					
ANR	8652025	CompoundStatement		7:3:263:263	8652017	1					
ANR	8652026	ExpressionStatement	"fprintf ( stderr , ""pngvalid: no interlace support\\n"" )"	3999:6:121757:121808	8652017	0	True				
ANR	8652027	CallExpression	"fprintf ( stderr , ""pngvalid: no interlace support\\n"" )"		8652017	0					
ANR	8652028	Callee	fprintf		8652017	0					
ANR	8652029	Identifier	fprintf		8652017	0					
ANR	8652030	ArgumentList	stderr		8652017	1					
ANR	8652031	Argument	stderr		8652017	0					
ANR	8652032	Identifier	stderr		8652017	0					
ANR	8652033	Argument	"""pngvalid: no interlace support\\n"""		8652017	1					
ANR	8652034	PrimaryExpression	"""pngvalid: no interlace support\\n"""		8652017	0					
ANR	8652035	ExpressionStatement	exit ( 99 )	4000:6:121816:121824	8652017	1	True				
ANR	8652036	CallExpression	exit ( 99 )		8652017	0					
ANR	8652037	Callee	exit		8652017	0					
ANR	8652038	Identifier	exit		8652017	0					
ANR	8652039	ArgumentList	99		8652017	1					
ANR	8652040	Argument	99		8652017	0					
ANR	8652041	PrimaryExpression	99		8652017	0					
ANR	8652042	ReturnType	static void		8652017	1					
ANR	8652043	Identifier	check_interlace_type		8652017	2					
ANR	8652044	ParameterList	int const interlace_type		8652017	3					
ANR	8652045	Parameter	int const interlace_type	3988:21:121351:121374	8652017	0	True				
ANR	8652046	ParameterType	int const		8652017	0					
ANR	8652047	Identifier	interlace_type		8652017	1					
ANR	8652048	CFGEntryNode	ENTRY		8652017		True				
ANR	8652049	CFGExitNode	EXIT		8652017		True				
ANR	8652050	Symbol	interlace_type		8652017						
ANR	8652051	Symbol	stderr		8652017						
ANR	8652052	Symbol	PNG_INTERLACE_NONE		8652017						
ANR	8652053	Function	interlace_row	4030:0:122733:123482							
ANR	8652054	FunctionDef	"interlace_row (png_bytep buffer , png_const_bytep imageRow , unsigned int pixel_size , png_uint_32 w , int pass , int littleendian)"		8652053	0					
ANR	8652055	CompoundStatement		4033:0:122874:123482	8652053	0					
ANR	8652056	IdentifierDeclStatement	"png_uint_32 xin , xout , xstep ;"	4034:3:122879:122907	8652053	0	True				
ANR	8652057	IdentifierDecl	xin		8652053	0					
ANR	8652058	IdentifierDeclType	png_uint_32		8652053	0					
ANR	8652059	Identifier	xin		8652053	1					
ANR	8652060	IdentifierDecl	xout		8652053	1					
ANR	8652061	IdentifierDeclType	png_uint_32		8652053	0					
ANR	8652062	Identifier	xout		8652053	1					
ANR	8652063	IdentifierDecl	xstep		8652053	2					
ANR	8652064	IdentifierDeclType	png_uint_32		8652053	0					
ANR	8652065	Identifier	xstep		8652053	1					
ANR	8652066	ExpressionStatement	xin = PNG_PASS_START_COL ( pass )	4043:3:123276:123306	8652053	1	True				
ANR	8652067	AssignmentExpression	xin = PNG_PASS_START_COL ( pass )		8652053	0		=			
ANR	8652068	Identifier	xin		8652053	0					
ANR	8652069	CallExpression	PNG_PASS_START_COL ( pass )		8652053	1					
ANR	8652070	Callee	PNG_PASS_START_COL		8652053	0					
ANR	8652071	Identifier	PNG_PASS_START_COL		8652053	0					
ANR	8652072	ArgumentList	pass		8652053	1					
ANR	8652073	Argument	pass		8652053	0					
ANR	8652074	Identifier	pass		8652053	0					
ANR	8652075	ExpressionStatement	xstep = 1U << PNG_PASS_COL_SHIFT ( pass )	4044:3:123311:123347	8652053	2	True				
ANR	8652076	AssignmentExpression	xstep = 1U << PNG_PASS_COL_SHIFT ( pass )		8652053	0		=			
ANR	8652077	Identifier	xstep		8652053	0					
ANR	8652078	ShiftExpression	1U << PNG_PASS_COL_SHIFT ( pass )		8652053	1		<<			
ANR	8652079	PrimaryExpression	1U		8652053	0					
ANR	8652080	CallExpression	PNG_PASS_COL_SHIFT ( pass )		8652053	1					
ANR	8652081	Callee	PNG_PASS_COL_SHIFT		8652053	0					
ANR	8652082	Identifier	PNG_PASS_COL_SHIFT		8652053	0					
ANR	8652083	ArgumentList	pass		8652053	1					
ANR	8652084	Argument	pass		8652053	0					
ANR	8652085	Identifier	pass		8652053	0					
ANR	8652086	ForStatement	for ( xout = 0 ; xin < w ; xin += xstep )		8652053	3					
ANR	8652087	ForInit	xout = 0 ;	4046:8:123358:123364	8652053	0	True				
ANR	8652088	AssignmentExpression	xout = 0		8652053	0		=			
ANR	8652089	Identifier	xout		8652053	0					
ANR	8652090	PrimaryExpression	0		8652053	1					
ANR	8652091	Condition	xin < w	4046:16:123366:123370	8652053	1	True				
ANR	8652092	RelationalExpression	xin < w		8652053	0		<			
ANR	8652093	Identifier	xin		8652053	0					
ANR	8652094	Identifier	w		8652053	1					
ANR	8652095	AssignmentExpression	xin += xstep	4046:23:123373:123382	8652053	2	True	+=			
ANR	8652096	Identifier	xin		8652053	0					
ANR	8652097	Identifier	xstep		8652053	1					
ANR	8652098	CompoundStatement		15:3:513:513	8652053	3					
ANR	8652099	ExpressionStatement	"pixel_copy ( buffer , xout , imageRow , xin , pixel_size , littleendian )"	4048:6:123396:123461	8652053	0	True				
ANR	8652100	CallExpression	"pixel_copy ( buffer , xout , imageRow , xin , pixel_size , littleendian )"		8652053	0					
ANR	8652101	Callee	pixel_copy		8652053	0					
ANR	8652102	Identifier	pixel_copy		8652053	0					
ANR	8652103	ArgumentList	buffer		8652053	1					
ANR	8652104	Argument	buffer		8652053	0					
ANR	8652105	Identifier	buffer		8652053	0					
ANR	8652106	Argument	xout		8652053	1					
ANR	8652107	Identifier	xout		8652053	0					
ANR	8652108	Argument	imageRow		8652053	2					
ANR	8652109	Identifier	imageRow		8652053	0					
ANR	8652110	Argument	xin		8652053	3					
ANR	8652111	Identifier	xin		8652053	0					
ANR	8652112	Argument	pixel_size		8652053	4					
ANR	8652113	Identifier	pixel_size		8652053	0					
ANR	8652114	Argument	littleendian		8652053	5					
ANR	8652115	Identifier	littleendian		8652053	0					
ANR	8652116	ExpressionStatement	++ xout	4049:6:123469:123475	8652053	1	True				
ANR	8652117	UnaryExpression	++ xout		8652053	0					
ANR	8652118	IncDec	++		8652053	0					
ANR	8652119	Identifier	xout		8652053	1					
ANR	8652120	ReturnType	static void		8652053	1					
ANR	8652121	Identifier	interlace_row		8652053	2					
ANR	8652122	ParameterList	"png_bytep buffer , png_const_bytep imageRow , unsigned int pixel_size , png_uint_32 w , int pass , int littleendian"		8652053	3					
ANR	8652123	Parameter	png_bytep buffer	4031:14:122759:122774	8652053	0	True				
ANR	8652124	ParameterType	png_bytep		8652053	0					
ANR	8652125	Identifier	buffer		8652053	1					
ANR	8652126	Parameter	png_const_bytep imageRow	4031:32:122777:122800	8652053	1	True				
ANR	8652127	ParameterType	png_const_bytep		8652053	0					
ANR	8652128	Identifier	imageRow		8652053	1					
ANR	8652129	Parameter	unsigned int pixel_size	4032:3:122806:122828	8652053	2	True				
ANR	8652130	ParameterType	unsigned int		8652053	0					
ANR	8652131	Identifier	pixel_size		8652053	1					
ANR	8652132	Parameter	png_uint_32 w	4032:28:122831:122843	8652053	3	True				
ANR	8652133	ParameterType	png_uint_32		8652053	0					
ANR	8652134	Identifier	w		8652053	1					
ANR	8652135	Parameter	int pass	4032:43:122846:122853	8652053	4	True				
ANR	8652136	ParameterType	int		8652053	0					
ANR	8652137	Identifier	pass		8652053	1					
ANR	8652138	Parameter	int littleendian	4032:53:122856:122871	8652053	5	True				
ANR	8652139	ParameterType	int		8652053	0					
ANR	8652140	Identifier	littleendian		8652053	1					
ANR	8652141	CFGEntryNode	ENTRY		8652053		True				
ANR	8652142	CFGExitNode	EXIT		8652053		True				
ANR	8652143	Symbol	PNG_PASS_COL_SHIFT		8652053						
ANR	8652144	Symbol	littleendian		8652053						
ANR	8652145	Symbol	pass		8652053						
ANR	8652146	Symbol	xstep		8652053						
ANR	8652147	Symbol	PNG_PASS_START_COL		8652053						
ANR	8652148	Symbol	w		8652053						
ANR	8652149	Symbol	buffer		8652053						
ANR	8652150	Symbol	pixel_size		8652053						
ANR	8652151	Symbol	imageRow		8652053						
ANR	8652152	Symbol	xin		8652053						
ANR	8652153	Symbol	xout		8652053						
ANR	8652154	Function	deinterlace_row	4054:0:123511:124156							
ANR	8652155	FunctionDef	"deinterlace_row (png_bytep buffer , png_const_bytep row , unsigned int pixel_size , png_uint_32 w , int pass , int littleendian)"		8652154	0					
ANR	8652156	CompoundStatement		4057:0:123649:124156	8652154	0					
ANR	8652157	IdentifierDeclStatement	"png_uint_32 xin , xout , xstep ;"	4063:3:123920:123948	8652154	0	True				
ANR	8652158	IdentifierDecl	xin		8652154	0					
ANR	8652159	IdentifierDeclType	png_uint_32		8652154	0					
ANR	8652160	Identifier	xin		8652154	1					
ANR	8652161	IdentifierDecl	xout		8652154	1					
ANR	8652162	IdentifierDeclType	png_uint_32		8652154	0					
ANR	8652163	Identifier	xout		8652154	1					
ANR	8652164	IdentifierDecl	xstep		8652154	2					
ANR	8652165	IdentifierDeclType	png_uint_32		8652154	0					
ANR	8652166	Identifier	xstep		8652154	1					
ANR	8652167	ExpressionStatement	xout = PNG_PASS_START_COL ( pass )	4065:3:123954:123985	8652154	1	True				
ANR	8652168	AssignmentExpression	xout = PNG_PASS_START_COL ( pass )		8652154	0		=			
ANR	8652169	Identifier	xout		8652154	0					
ANR	8652170	CallExpression	PNG_PASS_START_COL ( pass )		8652154	1					
ANR	8652171	Callee	PNG_PASS_START_COL		8652154	0					
ANR	8652172	Identifier	PNG_PASS_START_COL		8652154	0					
ANR	8652173	ArgumentList	pass		8652154	1					
ANR	8652174	Argument	pass		8652154	0					
ANR	8652175	Identifier	pass		8652154	0					
ANR	8652176	ExpressionStatement	xstep = 1U << PNG_PASS_COL_SHIFT ( pass )	4066:3:123990:124026	8652154	2	True				
ANR	8652177	AssignmentExpression	xstep = 1U << PNG_PASS_COL_SHIFT ( pass )		8652154	0		=			
ANR	8652178	Identifier	xstep		8652154	0					
ANR	8652179	ShiftExpression	1U << PNG_PASS_COL_SHIFT ( pass )		8652154	1		<<			
ANR	8652180	PrimaryExpression	1U		8652154	0					
ANR	8652181	CallExpression	PNG_PASS_COL_SHIFT ( pass )		8652154	1					
ANR	8652182	Callee	PNG_PASS_COL_SHIFT		8652154	0					
ANR	8652183	Identifier	PNG_PASS_COL_SHIFT		8652154	0					
ANR	8652184	ArgumentList	pass		8652154	1					
ANR	8652185	Argument	pass		8652154	0					
ANR	8652186	Identifier	pass		8652154	0					
ANR	8652187	ForStatement	for ( xin = 0 ; xout < w ; xout += xstep )		8652154	3					
ANR	8652188	ForInit	xin = 0 ;	4068:8:124037:124042	8652154	0	True				
ANR	8652189	AssignmentExpression	xin = 0		8652154	0		=			
ANR	8652190	Identifier	xin		8652154	0					
ANR	8652191	PrimaryExpression	0		8652154	1					
ANR	8652192	Condition	xout < w	4068:15:124044:124049	8652154	1	True				
ANR	8652193	RelationalExpression	xout < w		8652154	0		<			
ANR	8652194	Identifier	xout		8652154	0					
ANR	8652195	Identifier	w		8652154	1					
ANR	8652196	AssignmentExpression	xout += xstep	4068:23:124052:124062	8652154	2	True	+=			
ANR	8652197	Identifier	xout		8652154	0					
ANR	8652198	Identifier	xstep		8652154	1					
ANR	8652199	CompoundStatement		13:3:418:418	8652154	3					
ANR	8652200	ExpressionStatement	"pixel_copy ( buffer , xout , row , xin , pixel_size , littleendian )"	4070:6:124076:124136	8652154	0	True				
ANR	8652201	CallExpression	"pixel_copy ( buffer , xout , row , xin , pixel_size , littleendian )"		8652154	0					
ANR	8652202	Callee	pixel_copy		8652154	0					
ANR	8652203	Identifier	pixel_copy		8652154	0					
ANR	8652204	ArgumentList	buffer		8652154	1					
ANR	8652205	Argument	buffer		8652154	0					
ANR	8652206	Identifier	buffer		8652154	0					
ANR	8652207	Argument	xout		8652154	1					
ANR	8652208	Identifier	xout		8652154	0					
ANR	8652209	Argument	row		8652154	2					
ANR	8652210	Identifier	row		8652154	0					
ANR	8652211	Argument	xin		8652154	3					
ANR	8652212	Identifier	xin		8652154	0					
ANR	8652213	Argument	pixel_size		8652154	4					
ANR	8652214	Identifier	pixel_size		8652154	0					
ANR	8652215	Argument	littleendian		8652154	5					
ANR	8652216	Identifier	littleendian		8652154	0					
ANR	8652217	ExpressionStatement	++ xin	4071:6:124144:124149	8652154	1	True				
ANR	8652218	UnaryExpression	++ xin		8652154	0					
ANR	8652219	IncDec	++		8652154	0					
ANR	8652220	Identifier	xin		8652154	1					
ANR	8652221	ReturnType	static void		8652154	1					
ANR	8652222	Identifier	deinterlace_row		8652154	2					
ANR	8652223	ParameterList	"png_bytep buffer , png_const_bytep row , unsigned int pixel_size , png_uint_32 w , int pass , int littleendian"		8652154	3					
ANR	8652224	Parameter	png_bytep buffer	4055:16:123539:123554	8652154	0	True				
ANR	8652225	ParameterType	png_bytep		8652154	0					
ANR	8652226	Identifier	buffer		8652154	1					
ANR	8652227	Parameter	png_const_bytep row	4055:34:123557:123575	8652154	1	True				
ANR	8652228	ParameterType	png_const_bytep		8652154	0					
ANR	8652229	Identifier	row		8652154	1					
ANR	8652230	Parameter	unsigned int pixel_size	4056:3:123581:123603	8652154	2	True				
ANR	8652231	ParameterType	unsigned int		8652154	0					
ANR	8652232	Identifier	pixel_size		8652154	1					
ANR	8652233	Parameter	png_uint_32 w	4056:28:123606:123618	8652154	3	True				
ANR	8652234	ParameterType	png_uint_32		8652154	0					
ANR	8652235	Identifier	w		8652154	1					
ANR	8652236	Parameter	int pass	4056:43:123621:123628	8652154	4	True				
ANR	8652237	ParameterType	int		8652154	0					
ANR	8652238	Identifier	pass		8652154	1					
ANR	8652239	Parameter	int littleendian	4056:53:123631:123646	8652154	5	True				
ANR	8652240	ParameterType	int		8652154	0					
ANR	8652241	Identifier	littleendian		8652154	1					
ANR	8652242	CFGEntryNode	ENTRY		8652154		True				
ANR	8652243	CFGExitNode	EXIT		8652154		True				
ANR	8652244	Symbol	PNG_PASS_COL_SHIFT		8652154						
ANR	8652245	Symbol	littleendian		8652154						
ANR	8652246	Symbol	pass		8652154						
ANR	8652247	Symbol	xstep		8652154						
ANR	8652248	Symbol	PNG_PASS_START_COL		8652154						
ANR	8652249	Symbol	w		8652154						
ANR	8652250	Symbol	buffer		8652154						
ANR	8652251	Symbol	row		8652154						
ANR	8652252	Symbol	pixel_size		8652154						
ANR	8652253	Symbol	xin		8652154						
ANR	8652254	Symbol	xout		8652154						
ANR	8652255	Function	choose_random_filter	4083:0:124583:125042							
ANR	8652256	FunctionDef	"choose_random_filter (png_structp pp , int start)"		8652255	0					
ANR	8652257	CompoundStatement		4085:0:124643:125042	8652255	0					
ANR	8652258	IdentifierDeclStatement	int filters = PNG_ALL_FILTERS & random_mod ( 256U ) ;	4089:3:124780:124828	8652255	0	True				
ANR	8652259	IdentifierDecl	filters = PNG_ALL_FILTERS & random_mod ( 256U )		8652255	0					
ANR	8652260	IdentifierDeclType	int		8652255	0					
ANR	8652261	Identifier	filters		8652255	1					
ANR	8652262	AssignmentExpression	filters = PNG_ALL_FILTERS & random_mod ( 256U )		8652255	2		=			
ANR	8652263	Identifier	filters		8652255	0					
ANR	8652264	BitAndExpression	PNG_ALL_FILTERS & random_mod ( 256U )		8652255	1		&			
ANR	8652265	Identifier	PNG_ALL_FILTERS		8652255	0					
ANR	8652266	CallExpression	random_mod ( 256U )		8652255	1					
ANR	8652267	Callee	random_mod		8652255	0					
ANR	8652268	Identifier	random_mod		8652255	0					
ANR	8652269	ArgumentList	256U		8652255	1					
ANR	8652270	Argument	256U		8652255	0					
ANR	8652271	PrimaryExpression	256U		8652255	0					
ANR	8652272	IfStatement	if ( filters != 0 )		8652255	1					
ANR	8652273	Condition	filters != 0	4092:7:124890:124901	8652255	0	True				
ANR	8652274	EqualityExpression	filters != 0		8652255	0		!=			
ANR	8652275	Identifier	filters		8652255	0					
ANR	8652276	PrimaryExpression	0		8652255	1					
ANR	8652277	CompoundStatement		9:3:263:263	8652255	1					
ANR	8652278	IfStatement	if ( start && filters < PNG_FILTER_UP )		8652255	0					
ANR	8652279	Condition	start && filters < PNG_FILTER_UP	4094:10:124919:124950	8652255	0	True				
ANR	8652280	AndExpression	start && filters < PNG_FILTER_UP		8652255	0		&&			
ANR	8652281	Identifier	start		8652255	0					
ANR	8652282	RelationalExpression	filters < PNG_FILTER_UP		8652255	1		<			
ANR	8652283	Identifier	filters		8652255	0					
ANR	8652284	Identifier	PNG_FILTER_UP		8652255	1					
ANR	8652285	ExpressionStatement	filters |= PNG_FILTER_UP	4095:9:124962:124986	8652255	1	True				
ANR	8652286	AssignmentExpression	filters |= PNG_FILTER_UP		8652255	0		|=			
ANR	8652287	Identifier	filters		8652255	0					
ANR	8652288	Identifier	PNG_FILTER_UP		8652255	1					
ANR	8652289	ExpressionStatement	"png_set_filter ( pp , 0 , filters )"	4097:6:124995:125035	8652255	1	True				
ANR	8652290	CallExpression	"png_set_filter ( pp , 0 , filters )"		8652255	0					
ANR	8652291	Callee	png_set_filter		8652255	0					
ANR	8652292	Identifier	png_set_filter		8652255	0					
ANR	8652293	ArgumentList	pp		8652255	1					
ANR	8652294	Argument	pp		8652255	0					
ANR	8652295	Identifier	pp		8652255	0					
ANR	8652296	Argument	0		8652255	1					
ANR	8652297	PrimaryExpression	0		8652255	0					
ANR	8652298	Argument	filters		8652255	2					
ANR	8652299	Identifier	filters		8652255	0					
ANR	8652300	ReturnType	static void		8652255	1					
ANR	8652301	Identifier	choose_random_filter		8652255	2					
ANR	8652302	ParameterList	"png_structp pp , int start"		8652255	3					
ANR	8652303	Parameter	png_structp pp	4084:21:124616:124629	8652255	0	True				
ANR	8652304	ParameterType	png_structp		8652255	0					
ANR	8652305	Identifier	pp		8652255	1					
ANR	8652306	Parameter	int start	4084:37:124632:124640	8652255	1	True				
ANR	8652307	ParameterType	int		8652255	0					
ANR	8652308	Identifier	start		8652255	1					
ANR	8652309	CFGEntryNode	ENTRY		8652255		True				
ANR	8652310	CFGExitNode	EXIT		8652255		True				
ANR	8652311	Symbol	pp		8652255						
ANR	8652312	Symbol	PNG_ALL_FILTERS		8652255						
ANR	8652313	Symbol	start		8652255						
ANR	8652314	Symbol	filters		8652255						
ANR	8652315	Symbol	PNG_FILTER_UP		8652255						
ANR	8652316	Symbol	random_mod		8652255						
ANR	8652317	DeclStmt									
ANR	8652318	Decl							png_infop	png_infop	pi
ANR	8652319	DeclStmt									
ANR	8652320	Decl							png_structp	png_structp	pp
ANR	8652321	DeclStmt									
ANR	8652322	Decl							png_uint_32	png_uint_32	h
ANR	8652323	Decl							png_uint_32	png_uint_32	w
ANR	8652324	DeclStmt									
ANR	8652325	Decl							Throw	Throw	ps
ANR	8652326	DeclStmt									
ANR	8652327	Decl							char	char [ ]	key
ANR	8652328	DeclStmt									
ANR	8652329	Decl							size_t	size_t	pos
ANR	8652330	DeclStmt									
ANR	8652331	Decl							png_text	png_text	text
ANR	8652332	DeclStmt									
ANR	8652333	Decl							char	char [ FILE_NAME_SIZE ]	copy
ANR	8652334	DeclStmt									
ANR	8652335	Decl							endif	"endif ( pp , pi )"	png_write_info
ANR	8652336	DeclStmt									
ANR	8652337	Decl							int	int	npasses
ANR	8652338	DeclStmt									
ANR	8652339	Decl							int	int	pass
ANR	8652340	DeclStmt									
ANR	8652341	Decl							png_uint_32	png_uint_32	y
ANR	8652342	DeclStmt									
ANR	8652343	Decl							png_byte	png_byte [ TRANSFORM_ROWMAX ]	buffer
ANR	8652344	DeclStmt									
ANR	8652345	Decl							endif	endif	choose_random_filter
ANR	8652346	DeclStmt									
ANR	8652347	Decl							char	char [ ]	key
ANR	8652348	DeclStmt									
ANR	8652349	Decl							char	char [ ]	comment
ANR	8652350	DeclStmt									
ANR	8652351	Decl							png_text	png_text	text
ANR	8652352	Function	make_transform_images	4268:0:130611:131617							
ANR	8652353	FunctionDef	make_transform_images (png_modifier * pm)		8652352	0					
ANR	8652354	CompoundStatement		4270:0:130663:131617	8652352	0					
ANR	8652355	IdentifierDeclStatement	png_byte colour_type = 0 ;	4271:3:130668:130692	8652352	0	True				
ANR	8652356	IdentifierDecl	colour_type = 0		8652352	0					
ANR	8652357	IdentifierDeclType	png_byte		8652352	0					
ANR	8652358	Identifier	colour_type		8652352	1					
ANR	8652359	AssignmentExpression	colour_type = 0		8652352	2		=			
ANR	8652360	Identifier	colour_type		8652352	0					
ANR	8652361	PrimaryExpression	0		8652352	1					
ANR	8652362	IdentifierDeclStatement	png_byte bit_depth = 0 ;	4272:3:130697:130719	8652352	1	True				
ANR	8652363	IdentifierDecl	bit_depth = 0		8652352	0					
ANR	8652364	IdentifierDeclType	png_byte		8652352	0					
ANR	8652365	Identifier	bit_depth		8652352	1					
ANR	8652366	AssignmentExpression	bit_depth = 0		8652352	2		=			
ANR	8652367	Identifier	bit_depth		8652352	0					
ANR	8652368	PrimaryExpression	0		8652352	1					
ANR	8652369	IdentifierDeclStatement	unsigned int palette_number = 0 ;	4273:3:130724:130755	8652352	2	True				
ANR	8652370	IdentifierDecl	palette_number = 0		8652352	0					
ANR	8652371	IdentifierDeclType	unsigned int		8652352	0					
ANR	8652372	Identifier	palette_number		8652352	1					
ANR	8652373	AssignmentExpression	palette_number = 0		8652352	2		=			
ANR	8652374	Identifier	palette_number		8652352	0					
ANR	8652375	PrimaryExpression	0		8652352	1					
ANR	8652376	ExpressionStatement	"safecat ( pm -> this . test , sizeof pm -> this . test , 0 , ""make standard images"" )"	4276:3:130797:130868	8652352	3	True				
ANR	8652377	CallExpression	"safecat ( pm -> this . test , sizeof pm -> this . test , 0 , ""make standard images"" )"		8652352	0					
ANR	8652378	Callee	safecat		8652352	0					
ANR	8652379	Identifier	safecat		8652352	0					
ANR	8652380	ArgumentList	pm -> this . test		8652352	1					
ANR	8652381	Argument	pm -> this . test		8652352	0					
ANR	8652382	MemberAccess	pm -> this . test		8652352	0					
ANR	8652383	PtrMemberAccess	pm -> this		8652352	0					
ANR	8652384	Identifier	pm		8652352	0					
ANR	8652385	Identifier	this		8652352	1					
ANR	8652386	Identifier	test		8652352	1					
ANR	8652387	Argument	sizeof pm -> this . test		8652352	1					
ANR	8652388	SizeofExpression	sizeof pm -> this . test		8652352	0					
ANR	8652389	Sizeof	sizeof		8652352	0					
ANR	8652390	MemberAccess	pm -> this . test		8652352	1					
ANR	8652391	PtrMemberAccess	pm -> this		8652352	0					
ANR	8652392	Identifier	pm		8652352	0					
ANR	8652393	Identifier	this		8652352	1					
ANR	8652394	Identifier	test		8652352	1					
ANR	8652395	Argument	0		8652352	2					
ANR	8652396	PrimaryExpression	0		8652352	0					
ANR	8652397	Argument	"""make standard images"""		8652352	3					
ANR	8652398	PrimaryExpression	"""make standard images"""		8652352	0					
ANR	8652399	WhileStatement	"while ( next_format ( & colour_type , & bit_depth , & palette_number , 1 , 1 ) )"		8652352	4					
ANR	8652400	Condition	"next_format ( & colour_type , & bit_depth , & palette_number , 1 , 1 )"	4282:10:131101:131160	8652352	0	True				
ANR	8652401	CallExpression	"next_format ( & colour_type , & bit_depth , & palette_number , 1 , 1 )"		8652352	0					
ANR	8652402	Callee	next_format		8652352	0					
ANR	8652403	Identifier	next_format		8652352	0					
ANR	8652404	ArgumentList	& colour_type		8652352	1					
ANR	8652405	Argument	& colour_type		8652352	0					
ANR	8652406	UnaryOperationExpression	& colour_type		8652352	0					
ANR	8652407	UnaryOperator	&		8652352	0					
ANR	8652408	Identifier	colour_type		8652352	1					
ANR	8652409	Argument	& bit_depth		8652352	1					
ANR	8652410	UnaryOperationExpression	& bit_depth		8652352	0					
ANR	8652411	UnaryOperator	&		8652352	0					
ANR	8652412	Identifier	bit_depth		8652352	1					
ANR	8652413	Argument	& palette_number		8652352	2					
ANR	8652414	UnaryOperationExpression	& palette_number		8652352	0					
ANR	8652415	UnaryOperator	&		8652352	0					
ANR	8652416	Identifier	palette_number		8652352	1					
ANR	8652417	Argument	1		8652352	3					
ANR	8652418	PrimaryExpression	1		8652352	0					
ANR	8652419	Argument	1		8652352	4					
ANR	8652420	PrimaryExpression	1		8652352	0					
ANR	8652421	CompoundStatement		15:6:510:528	8652352	1					
ANR	8652422	IdentifierDeclStatement	int interlace_type ;	4284:6:131174:131192	8652352	0	True				
ANR	8652423	IdentifierDecl	interlace_type		8652352	0					
ANR	8652424	IdentifierDeclType	int		8652352	0					
ANR	8652425	Identifier	interlace_type		8652352	1					
ANR	8652426	ForStatement	for ( interlace_type = PNG_INTERLACE_NONE ; interlace_type < INTERLACE_LAST ; ++ interlace_type )		8652352	1					
ANR	8652427	ForInit	interlace_type = PNG_INTERLACE_NONE ;	4286:11:131206:131241	8652352	0	True				
ANR	8652428	AssignmentExpression	interlace_type = PNG_INTERLACE_NONE		8652352	0		=			
ANR	8652429	Identifier	interlace_type		8652352	0					
ANR	8652430	Identifier	PNG_INTERLACE_NONE		8652352	1					
ANR	8652431	Condition	interlace_type < INTERLACE_LAST	4287:11:131254:131284	8652352	1	True				
ANR	8652432	RelationalExpression	interlace_type < INTERLACE_LAST		8652352	0		<			
ANR	8652433	Identifier	interlace_type		8652352	0					
ANR	8652434	Identifier	INTERLACE_LAST		8652352	1					
ANR	8652435	UnaryExpression	++ interlace_type	4287:44:131287:131302	8652352	2	True				
ANR	8652436	IncDec	++		8652352	0					
ANR	8652437	Identifier	interlace_type		8652352	1					
ANR	8652438	CompoundStatement		20:9:658:683	8652352	3					
ANR	8652439	IdentifierDeclStatement	char name [ FILE_NAME_SIZE ] ;	4289:9:131322:131347	8652352	0	True				
ANR	8652440	IdentifierDecl	name [ FILE_NAME_SIZE ]		8652352	0					
ANR	8652441	IdentifierDeclType	char [ FILE_NAME_SIZE ]		8652352	0					
ANR	8652442	Identifier	name		8652352	1					
ANR	8652443	Identifier	FILE_NAME_SIZE		8652352	2					
ANR	8652444	ExpressionStatement	"standard_name ( name , sizeof name , 0 , colour_type , bit_depth , palette_number , interlace_type , 0 , 0 , do_own_interlace )"	4291:9:131359:131486	8652352	1	True				
ANR	8652445	CallExpression	"standard_name ( name , sizeof name , 0 , colour_type , bit_depth , palette_number , interlace_type , 0 , 0 , do_own_interlace )"		8652352	0					
ANR	8652446	Callee	standard_name		8652352	0					
ANR	8652447	Identifier	standard_name		8652352	0					
ANR	8652448	ArgumentList	name		8652352	1					
ANR	8652449	Argument	name		8652352	0					
ANR	8652450	Identifier	name		8652352	0					
ANR	8652451	Argument	sizeof name		8652352	1					
ANR	8652452	SizeofExpression	sizeof name		8652352	0					
ANR	8652453	Sizeof	sizeof		8652352	0					
ANR	8652454	Identifier	name		8652352	1					
ANR	8652455	Argument	0		8652352	2					
ANR	8652456	PrimaryExpression	0		8652352	0					
ANR	8652457	Argument	colour_type		8652352	3					
ANR	8652458	Identifier	colour_type		8652352	0					
ANR	8652459	Argument	bit_depth		8652352	4					
ANR	8652460	Identifier	bit_depth		8652352	0					
ANR	8652461	Argument	palette_number		8652352	5					
ANR	8652462	Identifier	palette_number		8652352	0					
ANR	8652463	Argument	interlace_type		8652352	6					
ANR	8652464	Identifier	interlace_type		8652352	0					
ANR	8652465	Argument	0		8652352	7					
ANR	8652466	PrimaryExpression	0		8652352	0					
ANR	8652467	Argument	0		8652352	8					
ANR	8652468	PrimaryExpression	0		8652352	0					
ANR	8652469	Argument	do_own_interlace		8652352	9					
ANR	8652470	Identifier	do_own_interlace		8652352	0					
ANR	8652471	ExpressionStatement	"make_transform_image ( & pm -> this , colour_type , bit_depth , palette_number , interlace_type , name )"	4293:9:131497:131602	8652352	2	True				
ANR	8652472	CallExpression	"make_transform_image ( & pm -> this , colour_type , bit_depth , palette_number , interlace_type , name )"		8652352	0					
ANR	8652473	Callee	make_transform_image		8652352	0					
ANR	8652474	Identifier	make_transform_image		8652352	0					
ANR	8652475	ArgumentList	& pm -> this		8652352	1					
ANR	8652476	Argument	& pm -> this		8652352	0					
ANR	8652477	UnaryOperationExpression	& pm -> this		8652352	0					
ANR	8652478	UnaryOperator	&		8652352	0					
ANR	8652479	PtrMemberAccess	pm -> this		8652352	1					
ANR	8652480	Identifier	pm		8652352	0					
ANR	8652481	Identifier	this		8652352	1					
ANR	8652482	Argument	colour_type		8652352	1					
ANR	8652483	Identifier	colour_type		8652352	0					
ANR	8652484	Argument	bit_depth		8652352	2					
ANR	8652485	Identifier	bit_depth		8652352	0					
ANR	8652486	Argument	palette_number		8652352	3					
ANR	8652487	Identifier	palette_number		8652352	0					
ANR	8652488	Argument	interlace_type		8652352	4					
ANR	8652489	Identifier	interlace_type		8652352	0					
ANR	8652490	Argument	name		8652352	5					
ANR	8652491	Identifier	name		8652352	0					
ANR	8652492	ReturnType	static void		8652352	1					
ANR	8652493	Identifier	make_transform_images		8652352	2					
ANR	8652494	ParameterList	png_modifier * pm		8652352	3					
ANR	8652495	Parameter	png_modifier * pm	4269:22:130645:130660	8652352	0	True				
ANR	8652496	ParameterType	png_modifier *		8652352	0					
ANR	8652497	Identifier	pm		8652352	1					
ANR	8652498	CFGEntryNode	ENTRY		8652352		True				
ANR	8652499	CFGExitNode	EXIT		8652352		True				
ANR	8652500	Symbol	* pm		8652352						
ANR	8652501	Symbol	pm -> this		8652352						
ANR	8652502	Symbol	next_format		8652352						
ANR	8652503	Symbol	do_own_interlace		8652352						
ANR	8652504	Symbol	palette_number		8652352						
ANR	8652505	Symbol	pm -> this . test		8652352						
ANR	8652506	Symbol	PNG_INTERLACE_NONE		8652352						
ANR	8652507	Symbol	colour_type		8652352						
ANR	8652508	Symbol	& palette_number		8652352						
ANR	8652509	Symbol	interlace_type		8652352						
ANR	8652510	Symbol	& colour_type		8652352						
ANR	8652511	Symbol	INTERLACE_LAST		8652352						
ANR	8652512	Symbol	name		8652352						
ANR	8652513	Symbol	& bit_depth		8652352						
ANR	8652514	Symbol	& pm -> this		8652352						
ANR	8652515	Symbol	bit_depth		8652352						
ANR	8652516	Symbol	pm		8652352						
ANR	8652517	Function	size_row	4302:0:131740:132349							
ANR	8652518	FunctionDef	"size_row (png_byte buffer [ SIZE_ROWMAX ] , png_uint_32 bit_width , png_uint_32 y)"		8652517	0					
ANR	8652519	CompoundStatement		4304:0:131829:132349	8652517	0					
ANR	8652520	ExpressionStatement	y = ( ( y & 1 ) << 7 ) + ( ( y & 2 ) << 6 ) + ( ( y & 4 ) << 5 ) + ( ( y & 8 ) << 4 )	4306:3:131879:131948	8652517	0	True				
ANR	8652521	AssignmentExpression	y = ( ( y & 1 ) << 7 ) + ( ( y & 2 ) << 6 ) + ( ( y & 4 ) << 5 ) + ( ( y & 8 ) << 4 )		8652517	0		=			
ANR	8652522	Identifier	y		8652517	0					
ANR	8652523	AdditiveExpression	( ( y & 1 ) << 7 ) + ( ( y & 2 ) << 6 ) + ( ( y & 4 ) << 5 ) + ( ( y & 8 ) << 4 )		8652517	1		+			
ANR	8652524	ShiftExpression	( y & 1 ) << 7		8652517	0		<<			
ANR	8652525	BitAndExpression	y & 1		8652517	0		&			
ANR	8652526	Identifier	y		8652517	0					
ANR	8652527	PrimaryExpression	1		8652517	1					
ANR	8652528	PrimaryExpression	7		8652517	1					
ANR	8652529	AdditiveExpression	( ( y & 2 ) << 6 ) + ( ( y & 4 ) << 5 ) + ( ( y & 8 ) << 4 )		8652517	1		+			
ANR	8652530	ShiftExpression	( y & 2 ) << 6		8652517	0		<<			
ANR	8652531	BitAndExpression	y & 2		8652517	0		&			
ANR	8652532	Identifier	y		8652517	0					
ANR	8652533	PrimaryExpression	2		8652517	1					
ANR	8652534	PrimaryExpression	6		8652517	1					
ANR	8652535	AdditiveExpression	( ( y & 4 ) << 5 ) + ( ( y & 8 ) << 4 )		8652517	1		+			
ANR	8652536	ShiftExpression	( y & 4 ) << 5		8652517	0		<<			
ANR	8652537	BitAndExpression	y & 4		8652517	0		&			
ANR	8652538	Identifier	y		8652517	0					
ANR	8652539	PrimaryExpression	4		8652517	1					
ANR	8652540	PrimaryExpression	5		8652517	1					
ANR	8652541	ShiftExpression	( y & 8 ) << 4		8652517	1		<<			
ANR	8652542	BitAndExpression	y & 8		8652517	0		&			
ANR	8652543	Identifier	y		8652517	0					
ANR	8652544	PrimaryExpression	8		8652517	1					
ANR	8652545	PrimaryExpression	4		8652517	1					
ANR	8652546	ExpressionStatement	y ^= 0xA5	4308:3:132014:132023	8652517	1	True				
ANR	8652547	AssignmentExpression	y ^= 0xA5		8652517	0		^=			
ANR	8652548	Identifier	y		8652517	0					
ANR	8652549	PrimaryExpression	0xA5		8652517	1					
ANR	8652550	WhileStatement	while ( bit_width >= 8 )		8652517	2					
ANR	8652551	Condition	bit_width >= 8	4310:10:132036:132049	8652517	0	True				
ANR	8652552	RelationalExpression	bit_width >= 8		8652517	0		>=			
ANR	8652553	Identifier	bit_width		8652517	0					
ANR	8652554	PrimaryExpression	8		8652517	1					
ANR	8652555	ExpressionStatement	"* buffer ++ = ( png_byte ) y ++ , bit_width -= 8"	4311:6:132058:132099	8652517	1	True				
ANR	8652556	Expression	"* buffer ++ = ( png_byte ) y ++ , bit_width -= 8"		8652517	0					
ANR	8652557	AssignmentExpression	* buffer ++ = ( png_byte ) y ++		8652517	0		=			
ANR	8652558	UnaryOperationExpression	* buffer ++		8652517	0					
ANR	8652559	UnaryOperator	*		8652517	0					
ANR	8652560	PostIncDecOperationExpression	buffer ++		8652517	1					
ANR	8652561	Identifier	buffer		8652517	0					
ANR	8652562	IncDec	++		8652517	1					
ANR	8652563	CastExpression	( png_byte ) y ++		8652517	1					
ANR	8652564	CastTarget	png_byte		8652517	0					
ANR	8652565	PostIncDecOperationExpression	y ++		8652517	1					
ANR	8652566	Identifier	y		8652517	0					
ANR	8652567	IncDec	++		8652517	1					
ANR	8652568	AssignmentExpression	bit_width -= 8		8652517	1		-=			
ANR	8652569	Identifier	bit_width		8652517	0					
ANR	8652570	PrimaryExpression	8		8652517	1					
ANR	8652571	IfStatement	if ( bit_width > 0 )		8652517	3					
ANR	8652572	Condition	bit_width > 0	4316:7:132216:132228	8652517	0	True				
ANR	8652573	RelationalExpression	bit_width > 0		8652517	0		>			
ANR	8652574	Identifier	bit_width		8652517	0					
ANR	8652575	PrimaryExpression	0		8652517	1					
ANR	8652576	CompoundStatement		15:6:412:452	8652517	1					
ANR	8652577	IdentifierDeclStatement	png_uint_32 mask = ( 1U << ( 8 - bit_width ) ) - 1 ;	4318:6:132242:132282	8652517	0	True				
ANR	8652578	IdentifierDecl	mask = ( 1U << ( 8 - bit_width ) ) - 1		8652517	0					
ANR	8652579	IdentifierDeclType	png_uint_32		8652517	0					
ANR	8652580	Identifier	mask		8652517	1					
ANR	8652581	AssignmentExpression	mask = ( 1U << ( 8 - bit_width ) ) - 1		8652517	2		=			
ANR	8652582	Identifier	mask		8652517	0					
ANR	8652583	AdditiveExpression	( 1U << ( 8 - bit_width ) ) - 1		8652517	1		-			
ANR	8652584	ShiftExpression	1U << ( 8 - bit_width )		8652517	0		<<			
ANR	8652585	PrimaryExpression	1U		8652517	0					
ANR	8652586	AdditiveExpression	8 - bit_width		8652517	1		-			
ANR	8652587	PrimaryExpression	8		8652517	0					
ANR	8652588	Identifier	bit_width		8652517	1					
ANR	8652589	PrimaryExpression	1		8652517	1					
ANR	8652590	ExpressionStatement	* buffer = ( png_byte ) ( ( * buffer & mask ) | ( y & ~mask ) )	4319:6:132290:132342	8652517	1	True				
ANR	8652591	AssignmentExpression	* buffer = ( png_byte ) ( ( * buffer & mask ) | ( y & ~mask ) )		8652517	0		=			
ANR	8652592	UnaryOperationExpression	* buffer		8652517	0					
ANR	8652593	UnaryOperator	*		8652517	0					
ANR	8652594	Identifier	buffer		8652517	1					
ANR	8652595	CastExpression	( png_byte ) ( ( * buffer & mask ) | ( y & ~mask ) )		8652517	1					
ANR	8652596	CastTarget	png_byte		8652517	0					
ANR	8652597	InclusiveOrExpression	( * buffer & mask ) | ( y & ~mask )		8652517	1		|			
ANR	8652598	BitAndExpression	* buffer & mask		8652517	0		&			
ANR	8652599	UnaryOperationExpression	* buffer		8652517	0					
ANR	8652600	UnaryOperator	*		8652517	0					
ANR	8652601	Identifier	buffer		8652517	1					
ANR	8652602	Identifier	mask		8652517	1					
ANR	8652603	BitAndExpression	y & ~mask		8652517	1		&			
ANR	8652604	Identifier	y		8652517	0					
ANR	8652605	Identifier	~mask		8652517	1					
ANR	8652606	ReturnType	static void		8652517	1					
ANR	8652607	Identifier	size_row		8652517	2					
ANR	8652608	ParameterList	"png_byte buffer [ SIZE_ROWMAX ] , png_uint_32 bit_width , png_uint_32 y"		8652517	3					
ANR	8652609	Parameter	png_byte buffer [ SIZE_ROWMAX ]	4303:9:131761:131788	8652517	0	True				
ANR	8652610	ParameterType	png_byte [ SIZE_ROWMAX ]		8652517	0					
ANR	8652611	Identifier	buffer		8652517	1					
ANR	8652612	Parameter	png_uint_32 bit_width	4303:39:131791:131811	8652517	1	True				
ANR	8652613	ParameterType	png_uint_32		8652517	0					
ANR	8652614	Identifier	bit_width		8652517	1					
ANR	8652615	Parameter	png_uint_32 y	4303:62:131814:131826	8652517	2	True				
ANR	8652616	ParameterType	png_uint_32		8652517	0					
ANR	8652617	Identifier	y		8652517	1					
ANR	8652618	CFGEntryNode	ENTRY		8652517		True				
ANR	8652619	CFGExitNode	EXIT		8652517		True				
ANR	8652620	Symbol	* buffer		8652517						
ANR	8652621	Symbol	* buffer ++		8652517						
ANR	8652622	Symbol	~mask		8652517						
ANR	8652623	Symbol	y		8652517						
ANR	8652624	Symbol	buffer		8652517						
ANR	8652625	Symbol	bit_width		8652517						
ANR	8652626	Symbol	mask		8652517						
ANR	8652627	DeclStmt									
ANR	8652628	Decl							png_infop	png_infop	pi
ANR	8652629	DeclStmt									
ANR	8652630	Decl							png_structp	png_structp	pp
ANR	8652631	DeclStmt									
ANR	8652632	Decl							unsigned int	unsigned int	pixel_size
ANR	8652633	DeclStmt									
ANR	8652634	Decl							char	char [ FILE_NAME_SIZE ]	name
ANR	8652635	DeclStmt									
ANR	8652636	Decl							const png_uint_32	const png_uint_32	id
ANR	8652637	DeclStmt									
ANR	8652638	Decl							Throw	Throw	ps
ANR	8652639	DeclStmt									
ANR	8652640	Decl							char	char [ ]	key
ANR	8652641	DeclStmt									
ANR	8652642	Decl							size_t	size_t	pos
ANR	8652643	DeclStmt									
ANR	8652644	Decl							png_text	png_text	text
ANR	8652645	DeclStmt									
ANR	8652646	Decl							char	char [ FILE_NAME_SIZE ]	copy
ANR	8652647	DeclStmt									
ANR	8652648	Decl							int	int	npasses
ANR	8652649	DeclStmt									
ANR	8652650	Decl							png_uint_32	png_uint_32	y
ANR	8652651	DeclStmt									
ANR	8652652	Decl							int	int	pass
ANR	8652653	DeclStmt									
ANR	8652654	Decl							const png_uint_32	const png_uint_32	wPass
ANR	8652655	DeclStmt									
ANR	8652656	Decl							png_const_bytep	png_const_bytep	row
ANR	8652657	DeclStmt									
ANR	8652658	Decl							png_byte	png_byte [ SIZE_ROWMAX ]	tempRow
ANR	8652659	DeclStmt									
ANR	8652660	Decl							int	int	filters
ANR	8652661	DeclStmt									
ANR	8652662	Decl							endif	"endif ( pp , row )"	png_write_row
ANR	8652663	DeclStmt									
ANR	8652664	Decl							char	char [ ]	key
ANR	8652665	DeclStmt									
ANR	8652666	Decl							char	char [ ]	comment
ANR	8652667	DeclStmt									
ANR	8652668	Decl							png_text	png_text	text
ANR	8652669	DeclStmt									
ANR	8652670	Decl							png_uint_32	png_uint_32	width
ANR	8652671	DeclStmt									
ANR	8652672	Decl							png_uint_32	png_uint_32	height
ANR	8652673	DeclStmt									
ANR	8652674	Decl							ifdef PNG_WRITE_INTERLACING_SUPPORTED	ifdef PNG_WRITE_INTERLACING_SUPPORTED	make_size_image
ANR	8652675	DeclStmt									
ANR	8652676	Decl							CAN_WRITE_INTERLACE	CAN_WRITE_INTERLACE	make_size_image
ANR	8652677	Function	make_size_images	4558:0:140407:140817							
ANR	8652678	FunctionDef	make_size_images (png_store * ps)		8652677	0					
ANR	8652679	CompoundStatement		4560:0:140451:140817	8652677	0					
ANR	8652680	ExpressionStatement	"safecat ( ps -> test , sizeof ps -> test , 0 , ""make size images"" )"	4562:3:140492:140549	8652677	0	True				
ANR	8652681	CallExpression	"safecat ( ps -> test , sizeof ps -> test , 0 , ""make size images"" )"		8652677	0					
ANR	8652682	Callee	safecat		8652677	0					
ANR	8652683	Identifier	safecat		8652677	0					
ANR	8652684	ArgumentList	ps -> test		8652677	1					
ANR	8652685	Argument	ps -> test		8652677	0					
ANR	8652686	PtrMemberAccess	ps -> test		8652677	0					
ANR	8652687	Identifier	ps		8652677	0					
ANR	8652688	Identifier	test		8652677	1					
ANR	8652689	Argument	sizeof ps -> test		8652677	1					
ANR	8652690	SizeofExpression	sizeof ps -> test		8652677	0					
ANR	8652691	Sizeof	sizeof		8652677	0					
ANR	8652692	PtrMemberAccess	ps -> test		8652677	1					
ANR	8652693	Identifier	ps		8652677	0					
ANR	8652694	Identifier	test		8652677	1					
ANR	8652695	Argument	0		8652677	2					
ANR	8652696	PrimaryExpression	0		8652677	0					
ANR	8652697	Argument	"""make size images"""		8652677	3					
ANR	8652698	PrimaryExpression	"""make size images"""		8652677	0					
ANR	8652699	ExpressionStatement	"make_size ( ps , 0 , 0 , WRITE_BDHI )"	4566:3:140625:140656	8652677	1	True				
ANR	8652700	CallExpression	"make_size ( ps , 0 , 0 , WRITE_BDHI )"		8652677	0					
ANR	8652701	Callee	make_size		8652677	0					
ANR	8652702	Identifier	make_size		8652677	0					
ANR	8652703	ArgumentList	ps		8652677	1					
ANR	8652704	Argument	ps		8652677	0					
ANR	8652705	Identifier	ps		8652677	0					
ANR	8652706	Argument	0		8652677	1					
ANR	8652707	PrimaryExpression	0		8652677	0					
ANR	8652708	Argument	0		8652677	2					
ANR	8652709	PrimaryExpression	0		8652677	0					
ANR	8652710	Argument	WRITE_BDHI		8652677	3					
ANR	8652711	Identifier	WRITE_BDHI		8652677	0					
ANR	8652712	ExpressionStatement	"make_size ( ps , 2 , 3 , WRITE_BDHI )"	4567:3:140661:140692	8652677	2	True				
ANR	8652713	CallExpression	"make_size ( ps , 2 , 3 , WRITE_BDHI )"		8652677	0					
ANR	8652714	Callee	make_size		8652677	0					
ANR	8652715	Identifier	make_size		8652677	0					
ANR	8652716	ArgumentList	ps		8652677	1					
ANR	8652717	Argument	ps		8652677	0					
ANR	8652718	Identifier	ps		8652677	0					
ANR	8652719	Argument	2		8652677	1					
ANR	8652720	PrimaryExpression	2		8652677	0					
ANR	8652721	Argument	3		8652677	2					
ANR	8652722	PrimaryExpression	3		8652677	0					
ANR	8652723	Argument	WRITE_BDHI		8652677	3					
ANR	8652724	Identifier	WRITE_BDHI		8652677	0					
ANR	8652725	ExpressionStatement	"make_size ( ps , 3 , 0 , 3 )"	4568:3:140697:140743	8652677	3	True				
ANR	8652726	CallExpression	"make_size ( ps , 3 , 0 , 3 )"		8652677	0					
ANR	8652727	Callee	make_size		8652677	0					
ANR	8652728	Identifier	make_size		8652677	0					
ANR	8652729	ArgumentList	ps		8652677	1					
ANR	8652730	Argument	ps		8652677	0					
ANR	8652731	Identifier	ps		8652677	0					
ANR	8652732	Argument	3		8652677	1					
ANR	8652733	PrimaryExpression	3		8652677	0					
ANR	8652734	Argument	0		8652677	2					
ANR	8652735	PrimaryExpression	0		8652677	0					
ANR	8652736	Argument	3		8652677	3					
ANR	8652737	PrimaryExpression	3		8652677	0					
ANR	8652738	ExpressionStatement	"make_size ( ps , 4 , 3 , WRITE_BDHI )"	4569:3:140748:140779	8652677	4	True				
ANR	8652739	CallExpression	"make_size ( ps , 4 , 3 , WRITE_BDHI )"		8652677	0					
ANR	8652740	Callee	make_size		8652677	0					
ANR	8652741	Identifier	make_size		8652677	0					
ANR	8652742	ArgumentList	ps		8652677	1					
ANR	8652743	Argument	ps		8652677	0					
ANR	8652744	Identifier	ps		8652677	0					
ANR	8652745	Argument	4		8652677	1					
ANR	8652746	PrimaryExpression	4		8652677	0					
ANR	8652747	Argument	3		8652677	2					
ANR	8652748	PrimaryExpression	3		8652677	0					
ANR	8652749	Argument	WRITE_BDHI		8652677	3					
ANR	8652750	Identifier	WRITE_BDHI		8652677	0					
ANR	8652751	ExpressionStatement	"make_size ( ps , 6 , 3 , WRITE_BDHI )"	4570:3:140784:140815	8652677	5	True				
ANR	8652752	CallExpression	"make_size ( ps , 6 , 3 , WRITE_BDHI )"		8652677	0					
ANR	8652753	Callee	make_size		8652677	0					
ANR	8652754	Identifier	make_size		8652677	0					
ANR	8652755	ArgumentList	ps		8652677	1					
ANR	8652756	Argument	ps		8652677	0					
ANR	8652757	Identifier	ps		8652677	0					
ANR	8652758	Argument	6		8652677	1					
ANR	8652759	PrimaryExpression	6		8652677	0					
ANR	8652760	Argument	3		8652677	2					
ANR	8652761	PrimaryExpression	3		8652677	0					
ANR	8652762	Argument	WRITE_BDHI		8652677	3					
ANR	8652763	Identifier	WRITE_BDHI		8652677	0					
ANR	8652764	ReturnType	static void		8652677	1					
ANR	8652765	Identifier	make_size_images		8652677	2					
ANR	8652766	ParameterList	png_store * ps		8652677	3					
ANR	8652767	Parameter	png_store * ps	4559:17:140436:140448	8652677	0	True				
ANR	8652768	ParameterType	png_store *		8652677	0					
ANR	8652769	Identifier	ps		8652677	1					
ANR	8652770	CFGEntryNode	ENTRY		8652677		True				
ANR	8652771	CFGExitNode	EXIT		8652677		True				
ANR	8652772	Symbol	ps		8652677						
ANR	8652773	Symbol	ps -> test		8652677						
ANR	8652774	Symbol	WRITE_BDHI		8652677						
ANR	8652775	Symbol	* ps		8652677						
ANR	8652776	Function	standard_row	4575:0:140905:141230							
ANR	8652777	FunctionDef	"standard_row (png_const_structp pp , png_byte std [ STANDARD_ROWMAX ] , png_uint_32 id , png_uint_32 y)"		8652776	0					
ANR	8652778	CompoundStatement		4578:0:141017:141230	8652776	0					
ANR	8652779	IfStatement	if ( WIDTH_FROM_ID ( id ) == 0 )		8652776	0					
ANR	8652780	Condition	WIDTH_FROM_ID ( id ) == 0	4579:7:141026:141047	8652776	0	True				
ANR	8652781	EqualityExpression	WIDTH_FROM_ID ( id ) == 0		8652776	0		==			
ANR	8652782	CallExpression	WIDTH_FROM_ID ( id )		8652776	0					
ANR	8652783	Callee	WIDTH_FROM_ID		8652776	0					
ANR	8652784	Identifier	WIDTH_FROM_ID		8652776	0					
ANR	8652785	ArgumentList	id		8652776	1					
ANR	8652786	Argument	id		8652776	0					
ANR	8652787	Identifier	id		8652776	0					
ANR	8652788	PrimaryExpression	0		8652776	1					
ANR	8652789	ExpressionStatement	"transform_row ( pp , std , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) , y )"	4580:6:141056:141117	8652776	1	True				
ANR	8652790	CallExpression	"transform_row ( pp , std , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) , y )"		8652776	0					
ANR	8652791	Callee	transform_row		8652776	0					
ANR	8652792	Identifier	transform_row		8652776	0					
ANR	8652793	ArgumentList	pp		8652776	1					
ANR	8652794	Argument	pp		8652776	0					
ANR	8652795	Identifier	pp		8652776	0					
ANR	8652796	Argument	std		8652776	1					
ANR	8652797	Identifier	std		8652776	0					
ANR	8652798	Argument	COL_FROM_ID ( id )		8652776	2					
ANR	8652799	CallExpression	COL_FROM_ID ( id )		8652776	0					
ANR	8652800	Callee	COL_FROM_ID		8652776	0					
ANR	8652801	Identifier	COL_FROM_ID		8652776	0					
ANR	8652802	ArgumentList	id		8652776	1					
ANR	8652803	Argument	id		8652776	0					
ANR	8652804	Identifier	id		8652776	0					
ANR	8652805	Argument	DEPTH_FROM_ID ( id )		8652776	3					
ANR	8652806	CallExpression	DEPTH_FROM_ID ( id )		8652776	0					
ANR	8652807	Callee	DEPTH_FROM_ID		8652776	0					
ANR	8652808	Identifier	DEPTH_FROM_ID		8652776	0					
ANR	8652809	ArgumentList	id		8652776	1					
ANR	8652810	Argument	id		8652776	0					
ANR	8652811	Identifier	id		8652776	0					
ANR	8652812	Argument	y		8652776	4					
ANR	8652813	Identifier	y		8652776	0					
ANR	8652814	ElseStatement	else		8652776	0					
ANR	8652815	ExpressionStatement	"size_row ( std , WIDTH_FROM_ID ( id ) * bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) ) , y )"	4582:6:141133:141228	8652776	0	True				
ANR	8652816	CallExpression	"size_row ( std , WIDTH_FROM_ID ( id ) * bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) ) , y )"		8652776	0					
ANR	8652817	Callee	size_row		8652776	0					
ANR	8652818	Identifier	size_row		8652776	0					
ANR	8652819	ArgumentList	std		8652776	1					
ANR	8652820	Argument	std		8652776	0					
ANR	8652821	Identifier	std		8652776	0					
ANR	8652822	Argument	"WIDTH_FROM_ID ( id ) * bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8652776	1					
ANR	8652823	MultiplicativeExpression	"WIDTH_FROM_ID ( id ) * bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8652776	0		*			
ANR	8652824	CallExpression	WIDTH_FROM_ID ( id )		8652776	0					
ANR	8652825	Callee	WIDTH_FROM_ID		8652776	0					
ANR	8652826	Identifier	WIDTH_FROM_ID		8652776	0					
ANR	8652827	ArgumentList	id		8652776	1					
ANR	8652828	Argument	id		8652776	0					
ANR	8652829	Identifier	id		8652776	0					
ANR	8652830	CallExpression	"bit_size ( pp , COL_FROM_ID ( id ) , DEPTH_FROM_ID ( id ) )"		8652776	1					
ANR	8652831	Callee	bit_size		8652776	0					
ANR	8652832	Identifier	bit_size		8652776	0					
ANR	8652833	ArgumentList	pp		8652776	1					
ANR	8652834	Argument	pp		8652776	0					
ANR	8652835	Identifier	pp		8652776	0					
ANR	8652836	Argument	COL_FROM_ID ( id )		8652776	1					
ANR	8652837	CallExpression	COL_FROM_ID ( id )		8652776	0					
ANR	8652838	Callee	COL_FROM_ID		8652776	0					
ANR	8652839	Identifier	COL_FROM_ID		8652776	0					
ANR	8652840	ArgumentList	id		8652776	1					
ANR	8652841	Argument	id		8652776	0					
ANR	8652842	Identifier	id		8652776	0					
ANR	8652843	Argument	DEPTH_FROM_ID ( id )		8652776	2					
ANR	8652844	CallExpression	DEPTH_FROM_ID ( id )		8652776	0					
ANR	8652845	Callee	DEPTH_FROM_ID		8652776	0					
ANR	8652846	Identifier	DEPTH_FROM_ID		8652776	0					
ANR	8652847	ArgumentList	id		8652776	1					
ANR	8652848	Argument	id		8652776	0					
ANR	8652849	Identifier	id		8652776	0					
ANR	8652850	Argument	y		8652776	2					
ANR	8652851	Identifier	y		8652776	0					
ANR	8652852	ReturnType	static void		8652776	1					
ANR	8652853	Identifier	standard_row		8652776	2					
ANR	8652854	ParameterList	"png_const_structp pp , png_byte std [ STANDARD_ROWMAX ] , png_uint_32 id , png_uint_32 y"		8652776	3					
ANR	8652855	Parameter	png_const_structp pp	4576:13:140930:140949	8652776	0	True				
ANR	8652856	ParameterType	png_const_structp		8652776	0					
ANR	8652857	Identifier	pp		8652776	1					
ANR	8652858	Parameter	png_byte std [ STANDARD_ROWMAX ]	4576:35:140952:140980	8652776	1	True				
ANR	8652859	ParameterType	png_byte [ STANDARD_ROWMAX ]		8652776	0					
ANR	8652860	Identifier	std		8652776	1					
ANR	8652861	Parameter	png_uint_32 id	4577:3:140986:140999	8652776	2	True				
ANR	8652862	ParameterType	png_uint_32		8652776	0					
ANR	8652863	Identifier	id		8652776	1					
ANR	8652864	Parameter	png_uint_32 y	4577:19:141002:141014	8652776	3	True				
ANR	8652865	ParameterType	png_uint_32		8652776	0					
ANR	8652866	Identifier	y		8652776	1					
ANR	8652867	CFGEntryNode	ENTRY		8652776		True				
ANR	8652868	CFGExitNode	EXIT		8652776		True				
ANR	8652869	Symbol	pp		8652776						
ANR	8652870	Symbol	WIDTH_FROM_ID		8652776						
ANR	8652871	Symbol	std		8652776						
ANR	8652872	Symbol	COL_FROM_ID		8652776						
ANR	8652873	Symbol	bit_size		8652776						
ANR	8652874	Symbol	y		8652776						
ANR	8652875	Symbol	DEPTH_FROM_ID		8652776						
ANR	8652876	Symbol	id		8652776						
ANR	8652877	Function	sBIT0_error_fn	4596:0:141638:141835							
ANR	8652878	FunctionDef	"sBIT0_error_fn (png_structp pp , png_infop pi)"		8652877	0					
ANR	8652879	CompoundStatement		4598:0:141695:141835	8652877	0					
ANR	8652880	IdentifierDeclStatement	png_color_8 bad ;	4600:3:141725:141740	8652877	0	True				
ANR	8652881	IdentifierDecl	bad		8652877	0					
ANR	8652882	IdentifierDeclType	png_color_8		8652877	0					
ANR	8652883	Identifier	bad		8652877	1					
ANR	8652884	ExpressionStatement	bad . red = bad . green = bad . blue = bad . gray = bad . alpha = 0	4601:3:141745:141802	8652877	1	True				
ANR	8652885	AssignmentExpression	bad . red = bad . green = bad . blue = bad . gray = bad . alpha = 0		8652877	0		=			
ANR	8652886	MemberAccess	bad . red		8652877	0					
ANR	8652887	Identifier	bad		8652877	0					
ANR	8652888	Identifier	red		8652877	1					
ANR	8652889	AssignmentExpression	bad . green = bad . blue = bad . gray = bad . alpha = 0		8652877	1		=			
ANR	8652890	MemberAccess	bad . green		8652877	0					
ANR	8652891	Identifier	bad		8652877	0					
ANR	8652892	Identifier	green		8652877	1					
ANR	8652893	AssignmentExpression	bad . blue = bad . gray = bad . alpha = 0		8652877	1		=			
ANR	8652894	MemberAccess	bad . blue		8652877	0					
ANR	8652895	Identifier	bad		8652877	0					
ANR	8652896	Identifier	blue		8652877	1					
ANR	8652897	AssignmentExpression	bad . gray = bad . alpha = 0		8652877	1		=			
ANR	8652898	MemberAccess	bad . gray		8652877	0					
ANR	8652899	Identifier	bad		8652877	0					
ANR	8652900	Identifier	gray		8652877	1					
ANR	8652901	AssignmentExpression	bad . alpha = 0		8652877	1		=			
ANR	8652902	MemberAccess	bad . alpha		8652877	0					
ANR	8652903	Identifier	bad		8652877	0					
ANR	8652904	Identifier	alpha		8652877	1					
ANR	8652905	PrimaryExpression	0		8652877	1					
ANR	8652906	ExpressionStatement	"png_set_sBIT ( pp , pi , & bad )"	4602:3:141807:141833	8652877	2	True				
ANR	8652907	CallExpression	"png_set_sBIT ( pp , pi , & bad )"		8652877	0					
ANR	8652908	Callee	png_set_sBIT		8652877	0					
ANR	8652909	Identifier	png_set_sBIT		8652877	0					
ANR	8652910	ArgumentList	pp		8652877	1					
ANR	8652911	Argument	pp		8652877	0					
ANR	8652912	Identifier	pp		8652877	0					
ANR	8652913	Argument	pi		8652877	1					
ANR	8652914	Identifier	pi		8652877	0					
ANR	8652915	Argument	& bad		8652877	2					
ANR	8652916	UnaryOperationExpression	& bad		8652877	0					
ANR	8652917	UnaryOperator	&		8652877	0					
ANR	8652918	Identifier	bad		8652877	1					
ANR	8652919	ReturnType	static void		8652877	1					
ANR	8652920	Identifier	sBIT0_error_fn		8652877	2					
ANR	8652921	ParameterList	"png_structp pp , png_infop pi"		8652877	3					
ANR	8652922	Parameter	png_structp pp	4597:15:141665:141678	8652877	0	True				
ANR	8652923	ParameterType	png_structp		8652877	0					
ANR	8652924	Identifier	pp		8652877	1					
ANR	8652925	Parameter	png_infop pi	4597:31:141681:141692	8652877	1	True				
ANR	8652926	ParameterType	png_infop		8652877	0					
ANR	8652927	Identifier	pi		8652877	1					
ANR	8652928	CFGEntryNode	ENTRY		8652877		True				
ANR	8652929	CFGExitNode	EXIT		8652877		True				
ANR	8652930	Symbol	pp		8652877						
ANR	8652931	Symbol	bad . red		8652877						
ANR	8652932	Symbol	bad		8652877						
ANR	8652933	Symbol	bad . alpha		8652877						
ANR	8652934	Symbol	pi		8652877						
ANR	8652935	Symbol	bad . gray		8652877						
ANR	8652936	Symbol	& bad		8652877						
ANR	8652937	Symbol	bad . green		8652877						
ANR	8652938	Symbol	bad . blue		8652877						
ANR	8652939	Function	sBIT_error_fn	4605:0:141838:142278							
ANR	8652940	FunctionDef	"sBIT_error_fn (png_structp pp , png_infop pi)"		8652939	0					
ANR	8652941	CompoundStatement		4607:0:141894:142278	8652939	0					
ANR	8652942	IdentifierDeclStatement	png_byte bit_depth ;	4608:3:141899:141917	8652939	0	True				
ANR	8652943	IdentifierDecl	bit_depth		8652939	0					
ANR	8652944	IdentifierDeclType	png_byte		8652939	0					
ANR	8652945	Identifier	bit_depth		8652939	1					
ANR	8652946	IdentifierDeclStatement	png_color_8 bad ;	4609:3:141922:141937	8652939	1	True				
ANR	8652947	IdentifierDecl	bad		8652939	0					
ANR	8652948	IdentifierDeclType	png_color_8		8652939	0					
ANR	8652949	Identifier	bad		8652939	1					
ANR	8652950	IfStatement	"if ( png_get_color_type ( pp , pi ) == PNG_COLOR_TYPE_PALETTE )"		8652939	2					
ANR	8652951	Condition	"png_get_color_type ( pp , pi ) == PNG_COLOR_TYPE_PALETTE"	4611:7:141947:141998	8652939	0	True				
ANR	8652952	EqualityExpression	"png_get_color_type ( pp , pi ) == PNG_COLOR_TYPE_PALETTE"		8652939	0		==			
ANR	8652953	CallExpression	"png_get_color_type ( pp , pi )"		8652939	0					
ANR	8652954	Callee	png_get_color_type		8652939	0					
ANR	8652955	Identifier	png_get_color_type		8652939	0					
ANR	8652956	ArgumentList	pp		8652939	1					
ANR	8652957	Argument	pp		8652939	0					
ANR	8652958	Identifier	pp		8652939	0					
ANR	8652959	Argument	pi		8652939	1					
ANR	8652960	Identifier	pi		8652939	0					
ANR	8652961	Identifier	PNG_COLOR_TYPE_PALETTE		8652939	1					
ANR	8652962	ExpressionStatement	bit_depth = 8	4612:6:142007:142020	8652939	1	True				
ANR	8652963	AssignmentExpression	bit_depth = 8		8652939	0		=			
ANR	8652964	Identifier	bit_depth		8652939	0					
ANR	8652965	PrimaryExpression	8		8652939	1					
ANR	8652966	ElseStatement	else		8652939	0					
ANR	8652967	ExpressionStatement	"bit_depth = png_get_bit_depth ( pp , pi )"	4615:6:142037:142074	8652939	0	True				
ANR	8652968	AssignmentExpression	"bit_depth = png_get_bit_depth ( pp , pi )"		8652939	0		=			
ANR	8652969	Identifier	bit_depth		8652939	0					
ANR	8652970	CallExpression	"png_get_bit_depth ( pp , pi )"		8652939	1					
ANR	8652971	Callee	png_get_bit_depth		8652939	0					
ANR	8652972	Identifier	png_get_bit_depth		8652939	0					
ANR	8652973	ArgumentList	pp		8652939	1					
ANR	8652974	Argument	pp		8652939	0					
ANR	8652975	Identifier	pp		8652939	0					
ANR	8652976	Argument	pi		8652939	1					
ANR	8652977	Identifier	pi		8652939	0					
ANR	8652978	ExpressionStatement	bad . red = bad . green = bad . blue = bad . gray = bad . alpha = ( png_byte ) ( bit_depth + 1 )	4618:3:142160:142245	8652939	3	True				
ANR	8652979	AssignmentExpression	bad . red = bad . green = bad . blue = bad . gray = bad . alpha = ( png_byte ) ( bit_depth + 1 )		8652939	0		=			
ANR	8652980	MemberAccess	bad . red		8652939	0					
ANR	8652981	Identifier	bad		8652939	0					
ANR	8652982	Identifier	red		8652939	1					
ANR	8652983	AssignmentExpression	bad . green = bad . blue = bad . gray = bad . alpha = ( png_byte ) ( bit_depth + 1 )		8652939	1		=			
ANR	8652984	MemberAccess	bad . green		8652939	0					
ANR	8652985	Identifier	bad		8652939	0					
ANR	8652986	Identifier	green		8652939	1					
ANR	8652987	AssignmentExpression	bad . blue = bad . gray = bad . alpha = ( png_byte ) ( bit_depth + 1 )		8652939	1		=			
ANR	8652988	MemberAccess	bad . blue		8652939	0					
ANR	8652989	Identifier	bad		8652939	0					
ANR	8652990	Identifier	blue		8652939	1					
ANR	8652991	AssignmentExpression	bad . gray = bad . alpha = ( png_byte ) ( bit_depth + 1 )		8652939	1		=			
ANR	8652992	MemberAccess	bad . gray		8652939	0					
ANR	8652993	Identifier	bad		8652939	0					
ANR	8652994	Identifier	gray		8652939	1					
ANR	8652995	AssignmentExpression	bad . alpha = ( png_byte ) ( bit_depth + 1 )		8652939	1		=			
ANR	8652996	MemberAccess	bad . alpha		8652939	0					
ANR	8652997	Identifier	bad		8652939	0					
ANR	8652998	Identifier	alpha		8652939	1					
ANR	8652999	CastExpression	( png_byte ) ( bit_depth + 1 )		8652939	1					
ANR	8653000	CastTarget	png_byte		8652939	0					
ANR	8653001	AdditiveExpression	bit_depth + 1		8652939	1		+			
ANR	8653002	Identifier	bit_depth		8652939	0					
ANR	8653003	PrimaryExpression	1		8652939	1					
ANR	8653004	ExpressionStatement	"png_set_sBIT ( pp , pi , & bad )"	4620:3:142250:142276	8652939	4	True				
ANR	8653005	CallExpression	"png_set_sBIT ( pp , pi , & bad )"		8652939	0					
ANR	8653006	Callee	png_set_sBIT		8652939	0					
ANR	8653007	Identifier	png_set_sBIT		8652939	0					
ANR	8653008	ArgumentList	pp		8652939	1					
ANR	8653009	Argument	pp		8652939	0					
ANR	8653010	Identifier	pp		8652939	0					
ANR	8653011	Argument	pi		8652939	1					
ANR	8653012	Identifier	pi		8652939	0					
ANR	8653013	Argument	& bad		8652939	2					
ANR	8653014	UnaryOperationExpression	& bad		8652939	0					
ANR	8653015	UnaryOperator	&		8652939	0					
ANR	8653016	Identifier	bad		8652939	1					
ANR	8653017	ReturnType	static void		8652939	1					
ANR	8653018	Identifier	sBIT_error_fn		8652939	2					
ANR	8653019	ParameterList	"png_structp pp , png_infop pi"		8652939	3					
ANR	8653020	Parameter	png_structp pp	4606:14:141864:141877	8652939	0	True				
ANR	8653021	ParameterType	png_structp		8652939	0					
ANR	8653022	Identifier	pp		8652939	1					
ANR	8653023	Parameter	png_infop pi	4606:30:141880:141891	8652939	1	True				
ANR	8653024	ParameterType	png_infop		8652939	0					
ANR	8653025	Identifier	pi		8652939	1					
ANR	8653026	CFGEntryNode	ENTRY		8652939		True				
ANR	8653027	CFGExitNode	EXIT		8652939		True				
ANR	8653028	Symbol	pp		8652939						
ANR	8653029	Symbol	png_get_color_type		8652939						
ANR	8653030	Symbol	png_get_bit_depth		8652939						
ANR	8653031	Symbol	bad . red		8652939						
ANR	8653032	Symbol	bad		8652939						
ANR	8653033	Symbol	bad . gray		8652939						
ANR	8653034	Symbol	& bad		8652939						
ANR	8653035	Symbol	bad . green		8652939						
ANR	8653036	Symbol	bad . alpha		8652939						
ANR	8653037	Symbol	pi		8652939						
ANR	8653038	Symbol	bit_depth		8652939						
ANR	8653039	Symbol	PNG_COLOR_TYPE_PALETTE		8652939						
ANR	8653040	Symbol	bad . blue		8652939						
ANR	8653041	ClassDef	<unnamed>	4623:13:142294:142730							
ANR	8653042	DeclStmt									
ANR	8653043	Decl							"void ( * ) ( png_structp , png_infop )"	"void ( * ) ( png_structp , png_infop )"	fn
ANR	8653044	DeclStmt									
ANR	8653045	Decl							const char	const char *	msg
ANR	8653046	DeclStmt									
ANR	8653047	Decl								 [ ]	error_test
ANR	8653048	DeclStmt									
ANR	8653049	Decl							png_infop	png_infop	pi
ANR	8653050	DeclStmt									
ANR	8653051	Decl							const png_structp	const png_structp	pp
ANR	8653052	DeclStmt									
ANR	8653053	Decl							png_uint_32	png_uint_32	w
ANR	8653054	Decl							png_uint_32	png_uint_32	h
ANR	8653055	DeclStmt									
ANR	8653056	Decl							Throw	Throw	ps
ANR	8653057	DeclStmt									
ANR	8653058	Decl							Throw	Throw	ps
ANR	8653059	DeclStmt									
ANR	8653060	Decl							int	int	npasses
ANR	8653061	DeclStmt									
ANR	8653062	Decl							int	int	pass
ANR	8653063	DeclStmt									
ANR	8653064	Decl							png_uint_32	png_uint_32	y
ANR	8653065	DeclStmt									
ANR	8653066	Decl							png_byte	png_byte [ TRANSFORM_ROWMAX ]	buffer
ANR	8653067	DeclStmt									
ANR	8653068	Decl							endif	"endif ( pp , buffer )"	png_write_row
ANR	8653069	DeclStmt									
ANR	8653070	Decl							int	int	interlace_type
ANR	8653071	DeclStmt									
ANR	8653072	Decl							unsigned int	unsigned int	test
ANR	8653073	DeclStmt									
ANR	8653074	Decl							char	char [ FILE_NAME_SIZE ]	name
ANR	8653075	Function	perform_error_test	4809:0:148124:148686							
ANR	8653076	FunctionDef	perform_error_test (png_modifier * pm)		8653075	0					
ANR	8653077	CompoundStatement		4811:0:148173:148686	8653075	0					
ANR	8653078	ExpressionStatement	"safecat ( pm -> this . test , sizeof pm -> this . test , 0 , ""error test"" )"	4814:3:148315:148376	8653075	0	True				
ANR	8653079	CallExpression	"safecat ( pm -> this . test , sizeof pm -> this . test , 0 , ""error test"" )"		8653075	0					
ANR	8653080	Callee	safecat		8653075	0					
ANR	8653081	Identifier	safecat		8653075	0					
ANR	8653082	ArgumentList	pm -> this . test		8653075	1					
ANR	8653083	Argument	pm -> this . test		8653075	0					
ANR	8653084	MemberAccess	pm -> this . test		8653075	0					
ANR	8653085	PtrMemberAccess	pm -> this		8653075	0					
ANR	8653086	Identifier	pm		8653075	0					
ANR	8653087	Identifier	this		8653075	1					
ANR	8653088	Identifier	test		8653075	1					
ANR	8653089	Argument	sizeof pm -> this . test		8653075	1					
ANR	8653090	SizeofExpression	sizeof pm -> this . test		8653075	0					
ANR	8653091	Sizeof	sizeof		8653075	0					
ANR	8653092	MemberAccess	pm -> this . test		8653075	1					
ANR	8653093	PtrMemberAccess	pm -> this		8653075	0					
ANR	8653094	Identifier	pm		8653075	0					
ANR	8653095	Identifier	this		8653075	1					
ANR	8653096	Identifier	test		8653075	1					
ANR	8653097	Argument	0		8653075	2					
ANR	8653098	PrimaryExpression	0		8653075	0					
ANR	8653099	Argument	"""error test"""		8653075	3					
ANR	8653100	PrimaryExpression	"""error test"""		8653075	0					
ANR	8653101	IfStatement	"if ( ! make_errors ( pm , 0 , 0 , WRITE_BDHI ) )"		8653075	1					
ANR	8653102	Condition	"! make_errors ( pm , 0 , 0 , WRITE_BDHI )"	4816:7:148386:148419	8653075	0	True				
ANR	8653103	UnaryOperationExpression	"! make_errors ( pm , 0 , 0 , WRITE_BDHI )"		8653075	0					
ANR	8653104	UnaryOperator	!		8653075	0					
ANR	8653105	CallExpression	"make_errors ( pm , 0 , 0 , WRITE_BDHI )"		8653075	1					
ANR	8653106	Callee	make_errors		8653075	0					
ANR	8653107	Identifier	make_errors		8653075	0					
ANR	8653108	ArgumentList	pm		8653075	1					
ANR	8653109	Argument	pm		8653075	0					
ANR	8653110	Identifier	pm		8653075	0					
ANR	8653111	Argument	0		8653075	1					
ANR	8653112	PrimaryExpression	0		8653075	0					
ANR	8653113	Argument	0		8653075	2					
ANR	8653114	PrimaryExpression	0		8653075	0					
ANR	8653115	Argument	WRITE_BDHI		8653075	3					
ANR	8653116	Identifier	WRITE_BDHI		8653075	0					
ANR	8653117	ReturnStatement	return ;	4817:6:148428:148434	8653075	1	True				
ANR	8653118	IfStatement	"if ( ! make_errors ( pm , 2 , 3 , WRITE_BDHI ) )"		8653075	2					
ANR	8653119	Condition	"! make_errors ( pm , 2 , 3 , WRITE_BDHI )"	4819:7:148444:148477	8653075	0	True				
ANR	8653120	UnaryOperationExpression	"! make_errors ( pm , 2 , 3 , WRITE_BDHI )"		8653075	0					
ANR	8653121	UnaryOperator	!		8653075	0					
ANR	8653122	CallExpression	"make_errors ( pm , 2 , 3 , WRITE_BDHI )"		8653075	1					
ANR	8653123	Callee	make_errors		8653075	0					
ANR	8653124	Identifier	make_errors		8653075	0					
ANR	8653125	ArgumentList	pm		8653075	1					
ANR	8653126	Argument	pm		8653075	0					
ANR	8653127	Identifier	pm		8653075	0					
ANR	8653128	Argument	2		8653075	1					
ANR	8653129	PrimaryExpression	2		8653075	0					
ANR	8653130	Argument	3		8653075	2					
ANR	8653131	PrimaryExpression	3		8653075	0					
ANR	8653132	Argument	WRITE_BDHI		8653075	3					
ANR	8653133	Identifier	WRITE_BDHI		8653075	0					
ANR	8653134	ReturnStatement	return ;	4820:6:148486:148492	8653075	1	True				
ANR	8653135	IfStatement	"if ( ! make_errors ( pm , 3 , 0 , 3 ) )"		8653075	3					
ANR	8653136	Condition	"! make_errors ( pm , 3 , 0 , 3 )"	4822:7:148502:148526	8653075	0	True				
ANR	8653137	UnaryOperationExpression	"! make_errors ( pm , 3 , 0 , 3 )"		8653075	0					
ANR	8653138	UnaryOperator	!		8653075	0					
ANR	8653139	CallExpression	"make_errors ( pm , 3 , 0 , 3 )"		8653075	1					
ANR	8653140	Callee	make_errors		8653075	0					
ANR	8653141	Identifier	make_errors		8653075	0					
ANR	8653142	ArgumentList	pm		8653075	1					
ANR	8653143	Argument	pm		8653075	0					
ANR	8653144	Identifier	pm		8653075	0					
ANR	8653145	Argument	3		8653075	1					
ANR	8653146	PrimaryExpression	3		8653075	0					
ANR	8653147	Argument	0		8653075	2					
ANR	8653148	PrimaryExpression	0		8653075	0					
ANR	8653149	Argument	3		8653075	3					
ANR	8653150	PrimaryExpression	3		8653075	0					
ANR	8653151	ReturnStatement	return ;	4823:6:148535:148541	8653075	1	True				
ANR	8653152	IfStatement	"if ( ! make_errors ( pm , 4 , 3 , WRITE_BDHI ) )"		8653075	4					
ANR	8653153	Condition	"! make_errors ( pm , 4 , 3 , WRITE_BDHI )"	4825:7:148551:148584	8653075	0	True				
ANR	8653154	UnaryOperationExpression	"! make_errors ( pm , 4 , 3 , WRITE_BDHI )"		8653075	0					
ANR	8653155	UnaryOperator	!		8653075	0					
ANR	8653156	CallExpression	"make_errors ( pm , 4 , 3 , WRITE_BDHI )"		8653075	1					
ANR	8653157	Callee	make_errors		8653075	0					
ANR	8653158	Identifier	make_errors		8653075	0					
ANR	8653159	ArgumentList	pm		8653075	1					
ANR	8653160	Argument	pm		8653075	0					
ANR	8653161	Identifier	pm		8653075	0					
ANR	8653162	Argument	4		8653075	1					
ANR	8653163	PrimaryExpression	4		8653075	0					
ANR	8653164	Argument	3		8653075	2					
ANR	8653165	PrimaryExpression	3		8653075	0					
ANR	8653166	Argument	WRITE_BDHI		8653075	3					
ANR	8653167	Identifier	WRITE_BDHI		8653075	0					
ANR	8653168	ReturnStatement	return ;	4826:6:148593:148599	8653075	1	True				
ANR	8653169	IfStatement	"if ( ! make_errors ( pm , 6 , 3 , WRITE_BDHI ) )"		8653075	5					
ANR	8653170	Condition	"! make_errors ( pm , 6 , 3 , WRITE_BDHI )"	4828:7:148609:148642	8653075	0	True				
ANR	8653171	UnaryOperationExpression	"! make_errors ( pm , 6 , 3 , WRITE_BDHI )"		8653075	0					
ANR	8653172	UnaryOperator	!		8653075	0					
ANR	8653173	CallExpression	"make_errors ( pm , 6 , 3 , WRITE_BDHI )"		8653075	1					
ANR	8653174	Callee	make_errors		8653075	0					
ANR	8653175	Identifier	make_errors		8653075	0					
ANR	8653176	ArgumentList	pm		8653075	1					
ANR	8653177	Argument	pm		8653075	0					
ANR	8653178	Identifier	pm		8653075	0					
ANR	8653179	Argument	6		8653075	1					
ANR	8653180	PrimaryExpression	6		8653075	0					
ANR	8653181	Argument	3		8653075	2					
ANR	8653182	PrimaryExpression	3		8653075	0					
ANR	8653183	Argument	WRITE_BDHI		8653075	3					
ANR	8653184	Identifier	WRITE_BDHI		8653075	0					
ANR	8653185	ReturnStatement	return ;	4829:6:148651:148657	8653075	1	True				
ANR	8653186	ReturnType	static void		8653075	1					
ANR	8653187	Identifier	perform_error_test		8653075	2					
ANR	8653188	ParameterList	png_modifier * pm		8653075	3					
ANR	8653189	Parameter	png_modifier * pm	4810:19:148155:148170	8653075	0	True				
ANR	8653190	ParameterType	png_modifier *		8653075	0					
ANR	8653191	Identifier	pm		8653075	1					
ANR	8653192	CFGEntryNode	ENTRY		8653075		True				
ANR	8653193	CFGExitNode	EXIT		8653075		True				
ANR	8653194	Symbol	* pm		8653075						
ANR	8653195	Symbol	pm -> this		8653075						
ANR	8653196	Symbol	make_errors		8653075						
ANR	8653197	Symbol	WRITE_BDHI		8653075						
ANR	8653198	Symbol	pm		8653075						
ANR	8653199	Symbol	pm -> this . test		8653075						
ANR	8653200	Function	perform_formatting_test	4838:0:148845:150474							
ANR	8653201	FunctionDef	perform_formatting_test (png_store * ps)		8653200	0					
ANR	8653202	CompoundStatement		4840:0:148896:150474	8653200	0					
ANR	8653203	ExpressionStatement	"context ( ps , fault )"	4845:3:149062:149080	8653200	0	True				
ANR	8653204	CallExpression	"context ( ps , fault )"		8653200	0					
ANR	8653205	Callee	context		8653200	0					
ANR	8653206	Identifier	context		8653200	0					
ANR	8653207	ArgumentList	ps		8653200	1					
ANR	8653208	Argument	ps		8653200	0					
ANR	8653209	Identifier	ps		8653200	0					
ANR	8653210	Argument	fault		8653200	1					
ANR	8653211	Identifier	fault		8653200	0					
ANR	8653212	Statement	Try	4847:3:149086:149088	8653200	1	True				
ANR	8653213	CompoundStatement		21:9:507:515	8653200	2					
ANR	8653214	IdentifierDeclStatement	"png_const_charp correct = ""29 Aug 2079 13:53:60 +0000"" ;"	4849:6:149101:149155	8653200	0	True				
ANR	8653215	IdentifierDecl	"correct = ""29 Aug 2079 13:53:60 +0000"""		8653200	0					
ANR	8653216	IdentifierDeclType	png_const_charp		8653200	0					
ANR	8653217	Identifier	correct		8653200	1					
ANR	8653218	AssignmentExpression	"correct = ""29 Aug 2079 13:53:60 +0000"""		8653200	2		=			
ANR	8653219	Identifier	correct		8653200	0					
ANR	8653220	PrimaryExpression	"""29 Aug 2079 13:53:60 +0000"""		8653200	1					
ANR	8653221	IdentifierDeclStatement	png_const_charp result ;	4850:6:149163:149185	8653200	1	True				
ANR	8653222	IdentifierDecl	result		8653200	0					
ANR	8653223	IdentifierDeclType	png_const_charp		8653200	0					
ANR	8653224	Identifier	result		8653200	1					
ANR	8653225	Statement	if	4851:6:149193:149194	8653200	2	True				
ANR	8653226	Statement	PNG_LIBPNG_VER	4851:9:149196:149209	8653200	3	True				
ANR	8653227	Statement	>=	4851:24:149211:149212	8653200	4	True				
ANR	8653228	Statement	10600	4851:27:149214:149218	8653200	5	True				
ANR	8653229	IdentifierDeclStatement	char timestring [ 29 ] ;	4852:9:149229:149248	8653200	6	True				
ANR	8653230	IdentifierDecl	timestring [ 29 ]		8653200	0					
ANR	8653231	IdentifierDeclType	char [ 29 ]		8653200	0					
ANR	8653232	Identifier	timestring		8653200	1					
ANR	8653233	PrimaryExpression	29		8653200	2					
ANR	8653234	IdentifierDeclStatement	endif png_structp pp ;	4853:6:149256:149282	8653200	7	True				
ANR	8653235	IdentifierDecl	pp		8653200	0					
ANR	8653236	IdentifierDeclType	endif png_structp		8653200	0					
ANR	8653237	Identifier	pp		8653200	1					
ANR	8653238	IdentifierDeclStatement	png_time pt ;	4855:6:149290:149301	8653200	8	True				
ANR	8653239	IdentifierDecl	pt		8653200	0					
ANR	8653240	IdentifierDeclType	png_time		8653200	0					
ANR	8653241	Identifier	pt		8653200	1					
ANR	8653242	ExpressionStatement	"pp = set_store_for_write ( ps , NULL , ""libpng formatting test"" )"	4857:6:149310:149370	8653200	9	True				
ANR	8653243	AssignmentExpression	"pp = set_store_for_write ( ps , NULL , ""libpng formatting test"" )"		8653200	0		=			
ANR	8653244	Identifier	pp		8653200	0					
ANR	8653245	CallExpression	"set_store_for_write ( ps , NULL , ""libpng formatting test"" )"		8653200	1					
ANR	8653246	Callee	set_store_for_write		8653200	0					
ANR	8653247	Identifier	set_store_for_write		8653200	0					
ANR	8653248	ArgumentList	ps		8653200	1					
ANR	8653249	Argument	ps		8653200	0					
ANR	8653250	Identifier	ps		8653200	0					
ANR	8653251	Argument	NULL		8653200	1					
ANR	8653252	Identifier	NULL		8653200	0					
ANR	8653253	Argument	"""libpng formatting test"""		8653200	2					
ANR	8653254	PrimaryExpression	"""libpng formatting test"""		8653200	0					
ANR	8653255	IfStatement	if ( pp == NULL )		8653200	10					
ANR	8653256	Condition	pp == NULL	4859:10:149383:149392	8653200	0	True				
ANR	8653257	EqualityExpression	pp == NULL		8653200	0		==			
ANR	8653258	Identifier	pp		8653200	0					
ANR	8653259	Identifier	NULL		8653200	1					
ANR	8653260	IdentifierDeclStatement	Throw ps ;	4860:9:149404:149412	8653200	1	True				
ANR	8653261	IdentifierDecl	ps		8653200	0					
ANR	8653262	IdentifierDeclType	Throw		8653200	0					
ANR	8653263	Identifier	ps		8653200	1					
ANR	8653264	ElseStatement	else		8653200	0					
ANR	8653265	IfStatement	"if ( png_convert_to_rfc1123_buffer ( timestring , & pt ) )"		8653200	0					
ANR	8653266	Condition	"png_convert_to_rfc1123_buffer ( timestring , & pt )"	4874:13:149701:149746	8653200	0	True				
ANR	8653267	CallExpression	"png_convert_to_rfc1123_buffer ( timestring , & pt )"		8653200	0					
ANR	8653268	Callee	png_convert_to_rfc1123_buffer		8653200	0					
ANR	8653269	Identifier	png_convert_to_rfc1123_buffer		8653200	0					
ANR	8653270	ArgumentList	timestring		8653200	1					
ANR	8653271	Argument	timestring		8653200	0					
ANR	8653272	Identifier	timestring		8653200	0					
ANR	8653273	Argument	& pt		8653200	1					
ANR	8653274	UnaryOperationExpression	& pt		8653200	0					
ANR	8653275	UnaryOperator	&		8653200	0					
ANR	8653276	Identifier	pt		8653200	1					
ANR	8653277	ExpressionStatement	result = timestring	4875:12:149761:149780	8653200	1	True				
ANR	8653278	AssignmentExpression	result = timestring		8653200	0		=			
ANR	8653279	Identifier	result		8653200	0					
ANR	8653280	Identifier	timestring		8653200	1					
ANR	8653281	ElseStatement	else		8653200	0					
ANR	8653282	ExpressionStatement	result = NULL	4878:12:149809:149822	8653200	0	True				
ANR	8653283	AssignmentExpression	result = NULL		8653200	0		=			
ANR	8653284	Identifier	result		8653200	0					
ANR	8653285	Identifier	NULL		8653200	1					
ANR	8653286	ExpressionStatement	pt . year = 2079	4864:6:149454:149468	8653200	11	True				
ANR	8653287	AssignmentExpression	pt . year = 2079		8653200	0		=			
ANR	8653288	MemberAccess	pt . year		8653200	0					
ANR	8653289	Identifier	pt		8653200	0					
ANR	8653290	Identifier	year		8653200	1					
ANR	8653291	PrimaryExpression	2079		8653200	1					
ANR	8653292	ExpressionStatement	pt . month = 8	4865:6:149476:149488	8653200	12	True				
ANR	8653293	AssignmentExpression	pt . month = 8		8653200	0		=			
ANR	8653294	MemberAccess	pt . month		8653200	0					
ANR	8653295	Identifier	pt		8653200	0					
ANR	8653296	Identifier	month		8653200	1					
ANR	8653297	PrimaryExpression	8		8653200	1					
ANR	8653298	ExpressionStatement	pt . day = 29	4866:6:149496:149507	8653200	13	True				
ANR	8653299	AssignmentExpression	pt . day = 29		8653200	0		=			
ANR	8653300	MemberAccess	pt . day		8653200	0					
ANR	8653301	Identifier	pt		8653200	0					
ANR	8653302	Identifier	day		8653200	1					
ANR	8653303	PrimaryExpression	29		8653200	1					
ANR	8653304	ExpressionStatement	pt . hour = 13	4867:6:149515:149527	8653200	14	True				
ANR	8653305	AssignmentExpression	pt . hour = 13		8653200	0		=			
ANR	8653306	MemberAccess	pt . hour		8653200	0					
ANR	8653307	Identifier	pt		8653200	0					
ANR	8653308	Identifier	hour		8653200	1					
ANR	8653309	PrimaryExpression	13		8653200	1					
ANR	8653310	ExpressionStatement	pt . minute = 53	4868:6:149535:149549	8653200	15	True				
ANR	8653311	AssignmentExpression	pt . minute = 53		8653200	0		=			
ANR	8653312	MemberAccess	pt . minute		8653200	0					
ANR	8653313	Identifier	pt		8653200	0					
ANR	8653314	Identifier	minute		8653200	1					
ANR	8653315	PrimaryExpression	53		8653200	1					
ANR	8653316	ExpressionStatement	pt . second = 60	4869:6:149557:149571	8653200	16	True				
ANR	8653317	AssignmentExpression	pt . second = 60		8653200	0		=			
ANR	8653318	MemberAccess	pt . second		8653200	0					
ANR	8653319	Identifier	pt		8653200	0					
ANR	8653320	Identifier	second		8653200	1					
ANR	8653321	PrimaryExpression	60		8653200	1					
ANR	8653322	Statement	if	4871:6:149600:149601	8653200	17	True				
ANR	8653323	Statement	PNG_LIBPNG_VER	4871:9:149603:149616	8653200	18	True				
ANR	8653324	Statement	<	4871:24:149618:149618	8653200	19	True				
ANR	8653325	Statement	10600	4871:26:149620:149624	8653200	20	True				
ANR	8653326	ExpressionStatement	"result = png_convert_to_rfc1123 ( pp , & pt )"	4872:9:149635:149675	8653200	21	True				
ANR	8653327	AssignmentExpression	"result = png_convert_to_rfc1123 ( pp , & pt )"		8653200	0		=			
ANR	8653328	Identifier	result		8653200	0					
ANR	8653329	CallExpression	"png_convert_to_rfc1123 ( pp , & pt )"		8653200	1					
ANR	8653330	Callee	png_convert_to_rfc1123		8653200	0					
ANR	8653331	Identifier	png_convert_to_rfc1123		8653200	0					
ANR	8653332	ArgumentList	pp		8653200	1					
ANR	8653333	Argument	pp		8653200	0					
ANR	8653334	Identifier	pp		8653200	0					
ANR	8653335	Argument	& pt		8653200	1					
ANR	8653336	UnaryOperationExpression	& pt		8653200	0					
ANR	8653337	UnaryOperator	&		8653200	0					
ANR	8653338	Identifier	pt		8653200	1					
ANR	8653339	Statement	endif	4879:6:149830:149834	8653200	22	True				
ANR	8653340	IfStatement	if ( result == NULL )		8653200	23					
ANR	8653341	Condition	result == NULL	4881:10:149847:149860	8653200	0	True				
ANR	8653342	EqualityExpression	result == NULL		8653200	0		==			
ANR	8653343	Identifier	result		8653200	0					
ANR	8653344	Identifier	NULL		8653200	1					
ANR	8653345	ExpressionStatement	"png_error ( pp , ""png_convert_to_rfc1123 failed"" )"	4882:9:149872:149918	8653200	1	True				
ANR	8653346	CallExpression	"png_error ( pp , ""png_convert_to_rfc1123 failed"" )"		8653200	0					
ANR	8653347	Callee	png_error		8653200	0					
ANR	8653348	Identifier	png_error		8653200	0					
ANR	8653349	ArgumentList	pp		8653200	1					
ANR	8653350	Argument	pp		8653200	0					
ANR	8653351	Identifier	pp		8653200	0					
ANR	8653352	Argument	"""png_convert_to_rfc1123 failed"""		8653200	1					
ANR	8653353	PrimaryExpression	"""png_convert_to_rfc1123 failed"""		8653200	0					
ANR	8653354	IfStatement	"if ( strcmp ( result , correct ) != 0 )"		8653200	24					
ANR	8653355	Condition	"strcmp ( result , correct ) != 0"	4884:10:149931:149958	8653200	0	True				
ANR	8653356	EqualityExpression	"strcmp ( result , correct ) != 0"		8653200	0		!=			
ANR	8653357	CallExpression	"strcmp ( result , correct )"		8653200	0					
ANR	8653358	Callee	strcmp		8653200	0					
ANR	8653359	Identifier	strcmp		8653200	0					
ANR	8653360	ArgumentList	result		8653200	1					
ANR	8653361	Argument	result		8653200	0					
ANR	8653362	Identifier	result		8653200	0					
ANR	8653363	Argument	correct		8653200	1					
ANR	8653364	Identifier	correct		8653200	0					
ANR	8653365	PrimaryExpression	0		8653200	1					
ANR	8653366	CompoundStatement		48:9:1106:1119	8653200	1					
ANR	8653367	IdentifierDeclStatement	size_t pos = 0 ;	4886:9:149978:149992	8653200	0	True				
ANR	8653368	IdentifierDecl	pos = 0		8653200	0					
ANR	8653369	IdentifierDeclType	size_t		8653200	0					
ANR	8653370	Identifier	pos		8653200	1					
ANR	8653371	AssignmentExpression	pos = 0		8653200	2		=			
ANR	8653372	Identifier	pos		8653200	0					
ANR	8653373	PrimaryExpression	0		8653200	1					
ANR	8653374	IdentifierDeclStatement	char msg [ 128 ] ;	4887:9:150003:150016	8653200	1	True				
ANR	8653375	IdentifierDecl	msg [ 128 ]		8653200	0					
ANR	8653376	IdentifierDeclType	char [ 128 ]		8653200	0					
ANR	8653377	Identifier	msg		8653200	1					
ANR	8653378	PrimaryExpression	128		8653200	2					
ANR	8653379	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""png_convert_to_rfc1123("" )"	4889:9:150028:150090	8653200	2	True				
ANR	8653380	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""png_convert_to_rfc1123("" )"		8653200	0		=			
ANR	8653381	Identifier	pos		8653200	0					
ANR	8653382	CallExpression	"safecat ( msg , sizeof msg , pos , ""png_convert_to_rfc1123("" )"		8653200	1					
ANR	8653383	Callee	safecat		8653200	0					
ANR	8653384	Identifier	safecat		8653200	0					
ANR	8653385	ArgumentList	msg		8653200	1					
ANR	8653386	Argument	msg		8653200	0					
ANR	8653387	Identifier	msg		8653200	0					
ANR	8653388	Argument	sizeof msg		8653200	1					
ANR	8653389	SizeofExpression	sizeof msg		8653200	0					
ANR	8653390	Sizeof	sizeof		8653200	0					
ANR	8653391	Identifier	msg		8653200	1					
ANR	8653392	Argument	pos		8653200	2					
ANR	8653393	Identifier	pos		8653200	0					
ANR	8653394	Argument	"""png_convert_to_rfc1123("""		8653200	3					
ANR	8653395	PrimaryExpression	"""png_convert_to_rfc1123("""		8653200	0					
ANR	8653396	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , correct )"	4890:9:150101:150145	8653200	3	True				
ANR	8653397	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , correct )"		8653200	0		=			
ANR	8653398	Identifier	pos		8653200	0					
ANR	8653399	CallExpression	"safecat ( msg , sizeof msg , pos , correct )"		8653200	1					
ANR	8653400	Callee	safecat		8653200	0					
ANR	8653401	Identifier	safecat		8653200	0					
ANR	8653402	ArgumentList	msg		8653200	1					
ANR	8653403	Argument	msg		8653200	0					
ANR	8653404	Identifier	msg		8653200	0					
ANR	8653405	Argument	sizeof msg		8653200	1					
ANR	8653406	SizeofExpression	sizeof msg		8653200	0					
ANR	8653407	Sizeof	sizeof		8653200	0					
ANR	8653408	Identifier	msg		8653200	1					
ANR	8653409	Argument	pos		8653200	2					
ANR	8653410	Identifier	pos		8653200	0					
ANR	8653411	Argument	correct		8653200	3					
ANR	8653412	Identifier	correct		8653200	0					
ANR	8653413	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "") returned: '"" )"	4891:9:150156:150208	8653200	4	True				
ANR	8653414	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "") returned: '"" )"		8653200	0		=			
ANR	8653415	Identifier	pos		8653200	0					
ANR	8653416	CallExpression	"safecat ( msg , sizeof msg , pos , "") returned: '"" )"		8653200	1					
ANR	8653417	Callee	safecat		8653200	0					
ANR	8653418	Identifier	safecat		8653200	0					
ANR	8653419	ArgumentList	msg		8653200	1					
ANR	8653420	Argument	msg		8653200	0					
ANR	8653421	Identifier	msg		8653200	0					
ANR	8653422	Argument	sizeof msg		8653200	1					
ANR	8653423	SizeofExpression	sizeof msg		8653200	0					
ANR	8653424	Sizeof	sizeof		8653200	0					
ANR	8653425	Identifier	msg		8653200	1					
ANR	8653426	Argument	pos		8653200	2					
ANR	8653427	Identifier	pos		8653200	0					
ANR	8653428	Argument	""") returned: '"""		8653200	3					
ANR	8653429	PrimaryExpression	""") returned: '"""		8653200	0					
ANR	8653430	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , result )"	4892:9:150219:150262	8653200	5	True				
ANR	8653431	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , result )"		8653200	0		=			
ANR	8653432	Identifier	pos		8653200	0					
ANR	8653433	CallExpression	"safecat ( msg , sizeof msg , pos , result )"		8653200	1					
ANR	8653434	Callee	safecat		8653200	0					
ANR	8653435	Identifier	safecat		8653200	0					
ANR	8653436	ArgumentList	msg		8653200	1					
ANR	8653437	Argument	msg		8653200	0					
ANR	8653438	Identifier	msg		8653200	0					
ANR	8653439	Argument	sizeof msg		8653200	1					
ANR	8653440	SizeofExpression	sizeof msg		8653200	0					
ANR	8653441	Sizeof	sizeof		8653200	0					
ANR	8653442	Identifier	msg		8653200	1					
ANR	8653443	Argument	pos		8653200	2					
ANR	8653444	Identifier	pos		8653200	0					
ANR	8653445	Argument	result		8653200	3					
ANR	8653446	Identifier	result		8653200	0					
ANR	8653447	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""'"" )"	4893:9:150273:150313	8653200	6	True				
ANR	8653448	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""'"" )"		8653200	0		=			
ANR	8653449	Identifier	pos		8653200	0					
ANR	8653450	CallExpression	"safecat ( msg , sizeof msg , pos , ""'"" )"		8653200	1					
ANR	8653451	Callee	safecat		8653200	0					
ANR	8653452	Identifier	safecat		8653200	0					
ANR	8653453	ArgumentList	msg		8653200	1					
ANR	8653454	Argument	msg		8653200	0					
ANR	8653455	Identifier	msg		8653200	0					
ANR	8653456	Argument	sizeof msg		8653200	1					
ANR	8653457	SizeofExpression	sizeof msg		8653200	0					
ANR	8653458	Sizeof	sizeof		8653200	0					
ANR	8653459	Identifier	msg		8653200	1					
ANR	8653460	Argument	pos		8653200	2					
ANR	8653461	Identifier	pos		8653200	0					
ANR	8653462	Argument	"""'"""		8653200	3					
ANR	8653463	PrimaryExpression	"""'"""		8653200	0					
ANR	8653464	ExpressionStatement	"png_error ( pp , msg )"	4895:9:150325:150343	8653200	7	True				
ANR	8653465	CallExpression	"png_error ( pp , msg )"		8653200	0					
ANR	8653466	Callee	png_error		8653200	0					
ANR	8653467	Identifier	png_error		8653200	0					
ANR	8653468	ArgumentList	pp		8653200	1					
ANR	8653469	Argument	pp		8653200	0					
ANR	8653470	Identifier	pp		8653200	0					
ANR	8653471	Argument	msg		8653200	1					
ANR	8653472	Identifier	msg		8653200	0					
ANR	8653473	ExpressionStatement	store_write_reset ( ps )	4898:6:150360:150381	8653200	25	True				
ANR	8653474	CallExpression	store_write_reset ( ps )		8653200	0					
ANR	8653475	Callee	store_write_reset		8653200	0					
ANR	8653476	Identifier	store_write_reset		8653200	0					
ANR	8653477	ArgumentList	ps		8653200	1					
ANR	8653478	Argument	ps		8653200	0					
ANR	8653479	Identifier	ps		8653200	0					
ANR	8653480	Statement	Catch	4901:3:150392:150396	8653200	3	True				
ANR	8653481	Statement	(	4901:8:150397:150397	8653200	4	True				
ANR	8653482	Statement	fault	4901:9:150398:150402	8653200	5	True				
ANR	8653483	Statement	)	4901:14:150403:150403	8653200	6	True				
ANR	8653484	CompoundStatement		63:3:1511:1511	8653200	7					
ANR	8653485	ExpressionStatement	store_write_reset ( fault )	4903:6:150416:150440	8653200	0	True				
ANR	8653486	CallExpression	store_write_reset ( fault )		8653200	0					
ANR	8653487	Callee	store_write_reset		8653200	0					
ANR	8653488	Identifier	store_write_reset		8653200	0					
ANR	8653489	ArgumentList	fault		8653200	1					
ANR	8653490	Argument	fault		8653200	0					
ANR	8653491	Identifier	fault		8653200	0					
ANR	8653492	ReturnType	static void		8653200	1					
ANR	8653493	Identifier	perform_formatting_test		8653200	2					
ANR	8653494	ParameterList	png_store * ps		8653200	3					
ANR	8653495	Parameter	png_store * ps	4839:24:148881:148893	8653200	0	True				
ANR	8653496	ParameterType	png_store *		8653200	0					
ANR	8653497	Identifier	ps		8653200	1					
ANR	8653498	CFGEntryNode	ENTRY		8653200		True				
ANR	8653499	CFGExitNode	EXIT		8653200		True				
ANR	8653500	Symbol	pp		8653200						
ANR	8653501	Symbol	strcmp		8653200						
ANR	8653502	Symbol	msg		8653200						
ANR	8653503	Symbol	pt . hour		8653200						
ANR	8653504	Symbol	ps		8653200						
ANR	8653505	Symbol	NULL		8653200						
ANR	8653506	Symbol	png_convert_to_rfc1123		8653200						
ANR	8653507	Symbol	correct		8653200						
ANR	8653508	Symbol	pt		8653200						
ANR	8653509	Symbol	pt . month		8653200						
ANR	8653510	Symbol	pt . day		8653200						
ANR	8653511	Symbol	fault		8653200						
ANR	8653512	Symbol	& pt		8653200						
ANR	8653513	Symbol	result		8653200						
ANR	8653514	Symbol	pt . year		8653200						
ANR	8653515	Symbol	png_convert_to_rfc1123_buffer		8653200						
ANR	8653516	Symbol	pos		8653200						
ANR	8653517	Symbol	safecat		8653200						
ANR	8653518	Symbol	set_store_for_write		8653200						
ANR	8653519	Symbol	timestring		8653200						
ANR	8653520	Symbol	pt . minute		8653200						
ANR	8653521	Symbol	pt . second		8653200						
ANR	8653522	ClassDef	standard_display	4935:8:152043:153555							
ANR	8653523	DeclStmt									
ANR	8653524	Decl							png_store	png_store *	ps
ANR	8653525	DeclStmt									
ANR	8653526	Decl							png_byte	png_byte	colour_type
ANR	8653527	DeclStmt									
ANR	8653528	Decl							png_byte	png_byte	bit_depth
ANR	8653529	DeclStmt									
ANR	8653530	Decl							png_byte	png_byte	red_sBIT
ANR	8653531	DeclStmt									
ANR	8653532	Decl							png_byte	png_byte	green_sBIT
ANR	8653533	DeclStmt									
ANR	8653534	Decl							png_byte	png_byte	blue_sBIT
ANR	8653535	DeclStmt									
ANR	8653536	Decl							png_byte	png_byte	alpha_sBIT
ANR	8653537	DeclStmt									
ANR	8653538	Decl							png_byte	png_byte	interlace_type
ANR	8653539	DeclStmt									
ANR	8653540	Decl							png_byte	png_byte	filler
ANR	8653541	DeclStmt									
ANR	8653542	Decl							png_uint_32	png_uint_32	id
ANR	8653543	DeclStmt									
ANR	8653544	Decl							png_uint_32	png_uint_32	w
ANR	8653545	DeclStmt									
ANR	8653546	Decl							png_uint_32	png_uint_32	h
ANR	8653547	DeclStmt									
ANR	8653548	Decl							int	int	npasses
ANR	8653549	DeclStmt									
ANR	8653550	Decl							png_uint_32	png_uint_32	pixel_size
ANR	8653551	DeclStmt									
ANR	8653552	Decl							png_uint_32	png_uint_32	bit_width
ANR	8653553	DeclStmt									
ANR	8653554	Decl							size_t	size_t	cbRow
ANR	8653555	DeclStmt									
ANR	8653556	Decl							int	int	do_interlace
ANR	8653557	DeclStmt									
ANR	8653558	Decl							int	int	littleendian
ANR	8653559	DeclStmt									
ANR	8653560	Decl							int	int	is_transparent
ANR	8653561	DeclStmt									
ANR	8653562	Decl							int	int	has_tRNS
ANR	8653563	DeclStmt									
ANR	8653564	Decl							int	int	speed
ANR	8653565	DeclStmt									
ANR	8653566	Decl							int	int	use_update_info
ANR	8653567	ClassDef	<unnamed>	4959:3:153273:153383							
ANR	8653568	DeclStmt									
ANR	8653569	Decl							png_uint_16	png_uint_16	red
ANR	8653570	DeclStmt									
ANR	8653571	Decl							png_uint_16	png_uint_16	green
ANR	8653572	DeclStmt									
ANR	8653573	Decl							png_uint_16	png_uint_16	blue
ANR	8653574	DeclStmt									
ANR	8653575	Decl									transparent
ANR	8653576	DeclStmt									
ANR	8653577	Decl							int	int	npalette
ANR	8653578	DeclStmt									
ANR	8653579	Decl							store_palette	store_palette	palette
ANR	8653580	DeclStmt									
ANR	8653581	Decl							standard_display	standard_display	standard_display
ANR	8653582	Function	standard_display_init	4970:0:153558:154790							
ANR	8653583	FunctionDef	"standard_display_init (standard_display * dp , png_store * ps , png_uint_32 id , int do_interlace , int use_update_info)"		8653582	0					
ANR	8653584	CompoundStatement		4973:0:153687:154790	8653582	0					
ANR	8653585	ExpressionStatement	"memset ( dp , 0 , sizeof * dp )"	4974:3:153692:153717	8653582	0	True				
ANR	8653586	CallExpression	"memset ( dp , 0 , sizeof * dp )"		8653582	0					
ANR	8653587	Callee	memset		8653582	0					
ANR	8653588	Identifier	memset		8653582	0					
ANR	8653589	ArgumentList	dp		8653582	1					
ANR	8653590	Argument	dp		8653582	0					
ANR	8653591	Identifier	dp		8653582	0					
ANR	8653592	Argument	0		8653582	1					
ANR	8653593	PrimaryExpression	0		8653582	0					
ANR	8653594	Argument	sizeof * dp		8653582	2					
ANR	8653595	SizeofExpression	sizeof * dp		8653582	0					
ANR	8653596	Sizeof	sizeof		8653582	0					
ANR	8653597	UnaryOperationExpression	* dp		8653582	1					
ANR	8653598	UnaryOperator	*		8653582	0					
ANR	8653599	Identifier	dp		8653582	1					
ANR	8653600	ExpressionStatement	dp -> ps = ps	4976:3:153723:153734	8653582	1	True				
ANR	8653601	AssignmentExpression	dp -> ps = ps		8653582	0		=			
ANR	8653602	PtrMemberAccess	dp -> ps		8653582	0					
ANR	8653603	Identifier	dp		8653582	0					
ANR	8653604	Identifier	ps		8653582	1					
ANR	8653605	Identifier	ps		8653582	1					
ANR	8653606	ExpressionStatement	dp -> colour_type = COL_FROM_ID ( id )	4977:3:153739:153772	8653582	2	True				
ANR	8653607	AssignmentExpression	dp -> colour_type = COL_FROM_ID ( id )		8653582	0		=			
ANR	8653608	PtrMemberAccess	dp -> colour_type		8653582	0					
ANR	8653609	Identifier	dp		8653582	0					
ANR	8653610	Identifier	colour_type		8653582	1					
ANR	8653611	CallExpression	COL_FROM_ID ( id )		8653582	1					
ANR	8653612	Callee	COL_FROM_ID		8653582	0					
ANR	8653613	Identifier	COL_FROM_ID		8653582	0					
ANR	8653614	ArgumentList	id		8653582	1					
ANR	8653615	Argument	id		8653582	0					
ANR	8653616	Identifier	id		8653582	0					
ANR	8653617	ExpressionStatement	dp -> bit_depth = DEPTH_FROM_ID ( id )	4978:3:153777:153810	8653582	3	True				
ANR	8653618	AssignmentExpression	dp -> bit_depth = DEPTH_FROM_ID ( id )		8653582	0		=			
ANR	8653619	PtrMemberAccess	dp -> bit_depth		8653582	0					
ANR	8653620	Identifier	dp		8653582	0					
ANR	8653621	Identifier	bit_depth		8653582	1					
ANR	8653622	CallExpression	DEPTH_FROM_ID ( id )		8653582	1					
ANR	8653623	Callee	DEPTH_FROM_ID		8653582	0					
ANR	8653624	Identifier	DEPTH_FROM_ID		8653582	0					
ANR	8653625	ArgumentList	id		8653582	1					
ANR	8653626	Argument	id		8653582	0					
ANR	8653627	Identifier	id		8653582	0					
ANR	8653628	IfStatement	if ( dp -> bit_depth < 1 || dp -> bit_depth > 16 )		8653582	4					
ANR	8653629	Condition	dp -> bit_depth < 1 || dp -> bit_depth > 16	4979:7:153819:153857	8653582	0	True				
ANR	8653630	OrExpression	dp -> bit_depth < 1 || dp -> bit_depth > 16		8653582	0		||			
ANR	8653631	RelationalExpression	dp -> bit_depth < 1		8653582	0		<			
ANR	8653632	PtrMemberAccess	dp -> bit_depth		8653582	0					
ANR	8653633	Identifier	dp		8653582	0					
ANR	8653634	Identifier	bit_depth		8653582	1					
ANR	8653635	PrimaryExpression	1		8653582	1					
ANR	8653636	RelationalExpression	dp -> bit_depth > 16		8653582	1		>			
ANR	8653637	PtrMemberAccess	dp -> bit_depth		8653582	0					
ANR	8653638	Identifier	dp		8653582	0					
ANR	8653639	Identifier	bit_depth		8653582	1					
ANR	8653640	PrimaryExpression	16		8653582	1					
ANR	8653641	ExpressionStatement	"internal_error ( ps , ""internal: bad bit depth"" )"	4980:6:153866:153911	8653582	1	True				
ANR	8653642	CallExpression	"internal_error ( ps , ""internal: bad bit depth"" )"		8653582	0					
ANR	8653643	Callee	internal_error		8653582	0					
ANR	8653644	Identifier	internal_error		8653582	0					
ANR	8653645	ArgumentList	ps		8653582	1					
ANR	8653646	Argument	ps		8653582	0					
ANR	8653647	Identifier	ps		8653582	0					
ANR	8653648	Argument	"""internal: bad bit depth"""		8653582	1					
ANR	8653649	PrimaryExpression	"""internal: bad bit depth"""		8653582	0					
ANR	8653650	IfStatement	if ( dp -> colour_type == 3 )		8653582	5					
ANR	8653651	Condition	dp -> colour_type == 3	4981:7:153920:153939	8653582	0	True				
ANR	8653652	EqualityExpression	dp -> colour_type == 3		8653582	0		==			
ANR	8653653	PtrMemberAccess	dp -> colour_type		8653582	0					
ANR	8653654	Identifier	dp		8653582	0					
ANR	8653655	Identifier	colour_type		8653582	1					
ANR	8653656	PrimaryExpression	3		8653582	1					
ANR	8653657	ExpressionStatement	dp -> red_sBIT = dp -> blue_sBIT = dp -> green_sBIT = dp -> alpha_sBIT = 8	4982:6:153948:154014	8653582	1	True				
ANR	8653658	AssignmentExpression	dp -> red_sBIT = dp -> blue_sBIT = dp -> green_sBIT = dp -> alpha_sBIT = 8		8653582	0		=			
ANR	8653659	PtrMemberAccess	dp -> red_sBIT		8653582	0					
ANR	8653660	Identifier	dp		8653582	0					
ANR	8653661	Identifier	red_sBIT		8653582	1					
ANR	8653662	AssignmentExpression	dp -> blue_sBIT = dp -> green_sBIT = dp -> alpha_sBIT = 8		8653582	1		=			
ANR	8653663	PtrMemberAccess	dp -> blue_sBIT		8653582	0					
ANR	8653664	Identifier	dp		8653582	0					
ANR	8653665	Identifier	blue_sBIT		8653582	1					
ANR	8653666	AssignmentExpression	dp -> green_sBIT = dp -> alpha_sBIT = 8		8653582	1		=			
ANR	8653667	PtrMemberAccess	dp -> green_sBIT		8653582	0					
ANR	8653668	Identifier	dp		8653582	0					
ANR	8653669	Identifier	green_sBIT		8653582	1					
ANR	8653670	AssignmentExpression	dp -> alpha_sBIT = 8		8653582	1		=			
ANR	8653671	PtrMemberAccess	dp -> alpha_sBIT		8653582	0					
ANR	8653672	Identifier	dp		8653582	0					
ANR	8653673	Identifier	alpha_sBIT		8653582	1					
ANR	8653674	PrimaryExpression	8		8653582	1					
ANR	8653675	ElseStatement	else		8653582	0					
ANR	8653676	ExpressionStatement	dp -> red_sBIT = dp -> blue_sBIT = dp -> green_sBIT = dp -> alpha_sBIT = dp -> bit_depth	4984:6:154030:154117	8653582	0	True				
ANR	8653677	AssignmentExpression	dp -> red_sBIT = dp -> blue_sBIT = dp -> green_sBIT = dp -> alpha_sBIT = dp -> bit_depth		8653582	0		=			
ANR	8653678	PtrMemberAccess	dp -> red_sBIT		8653582	0					
ANR	8653679	Identifier	dp		8653582	0					
ANR	8653680	Identifier	red_sBIT		8653582	1					
ANR	8653681	AssignmentExpression	dp -> blue_sBIT = dp -> green_sBIT = dp -> alpha_sBIT = dp -> bit_depth		8653582	1		=			
ANR	8653682	PtrMemberAccess	dp -> blue_sBIT		8653582	0					
ANR	8653683	Identifier	dp		8653582	0					
ANR	8653684	Identifier	blue_sBIT		8653582	1					
ANR	8653685	AssignmentExpression	dp -> green_sBIT = dp -> alpha_sBIT = dp -> bit_depth		8653582	1		=			
ANR	8653686	PtrMemberAccess	dp -> green_sBIT		8653582	0					
ANR	8653687	Identifier	dp		8653582	0					
ANR	8653688	Identifier	green_sBIT		8653582	1					
ANR	8653689	AssignmentExpression	dp -> alpha_sBIT = dp -> bit_depth		8653582	1		=			
ANR	8653690	PtrMemberAccess	dp -> alpha_sBIT		8653582	0					
ANR	8653691	Identifier	dp		8653582	0					
ANR	8653692	Identifier	alpha_sBIT		8653582	1					
ANR	8653693	PtrMemberAccess	dp -> bit_depth		8653582	1					
ANR	8653694	Identifier	dp		8653582	0					
ANR	8653695	Identifier	bit_depth		8653582	1					
ANR	8653696	ExpressionStatement	dp -> interlace_type = INTERLACE_FROM_ID ( id )	4986:3:154122:154164	8653582	6	True				
ANR	8653697	AssignmentExpression	dp -> interlace_type = INTERLACE_FROM_ID ( id )		8653582	0		=			
ANR	8653698	PtrMemberAccess	dp -> interlace_type		8653582	0					
ANR	8653699	Identifier	dp		8653582	0					
ANR	8653700	Identifier	interlace_type		8653582	1					
ANR	8653701	CallExpression	INTERLACE_FROM_ID ( id )		8653582	1					
ANR	8653702	Callee	INTERLACE_FROM_ID		8653582	0					
ANR	8653703	Identifier	INTERLACE_FROM_ID		8653582	0					
ANR	8653704	ArgumentList	id		8653582	1					
ANR	8653705	Argument	id		8653582	0					
ANR	8653706	Identifier	id		8653582	0					
ANR	8653707	ExpressionStatement	check_interlace_type ( dp -> interlace_type )	4987:3:154169:154209	8653582	7	True				
ANR	8653708	CallExpression	check_interlace_type ( dp -> interlace_type )		8653582	0					
ANR	8653709	Callee	check_interlace_type		8653582	0					
ANR	8653710	Identifier	check_interlace_type		8653582	0					
ANR	8653711	ArgumentList	dp -> interlace_type		8653582	1					
ANR	8653712	Argument	dp -> interlace_type		8653582	0					
ANR	8653713	PtrMemberAccess	dp -> interlace_type		8653582	0					
ANR	8653714	Identifier	dp		8653582	0					
ANR	8653715	Identifier	interlace_type		8653582	1					
ANR	8653716	ExpressionStatement	dp -> id = id	4988:3:154214:154225	8653582	8	True				
ANR	8653717	AssignmentExpression	dp -> id = id		8653582	0		=			
ANR	8653718	PtrMemberAccess	dp -> id		8653582	0					
ANR	8653719	Identifier	dp		8653582	0					
ANR	8653720	Identifier	id		8653582	1					
ANR	8653721	Identifier	id		8653582	1					
ANR	8653722	ExpressionStatement	dp -> w = 0	4990:3:154287:154296	8653582	9	True				
ANR	8653723	AssignmentExpression	dp -> w = 0		8653582	0		=			
ANR	8653724	PtrMemberAccess	dp -> w		8653582	0					
ANR	8653725	Identifier	dp		8653582	0					
ANR	8653726	Identifier	w		8653582	1					
ANR	8653727	PrimaryExpression	0		8653582	1					
ANR	8653728	ExpressionStatement	dp -> h = 0	4991:3:154301:154310	8653582	10	True				
ANR	8653729	AssignmentExpression	dp -> h = 0		8653582	0		=			
ANR	8653730	PtrMemberAccess	dp -> h		8653582	0					
ANR	8653731	Identifier	dp		8653582	0					
ANR	8653732	Identifier	h		8653582	1					
ANR	8653733	PrimaryExpression	0		8653582	1					
ANR	8653734	ExpressionStatement	dp -> npasses = 0	4992:3:154315:154330	8653582	11	True				
ANR	8653735	AssignmentExpression	dp -> npasses = 0		8653582	0		=			
ANR	8653736	PtrMemberAccess	dp -> npasses		8653582	0					
ANR	8653737	Identifier	dp		8653582	0					
ANR	8653738	Identifier	npasses		8653582	1					
ANR	8653739	PrimaryExpression	0		8653582	1					
ANR	8653740	ExpressionStatement	dp -> pixel_size = 0	4993:3:154335:154353	8653582	12	True				
ANR	8653741	AssignmentExpression	dp -> pixel_size = 0		8653582	0		=			
ANR	8653742	PtrMemberAccess	dp -> pixel_size		8653582	0					
ANR	8653743	Identifier	dp		8653582	0					
ANR	8653744	Identifier	pixel_size		8653582	1					
ANR	8653745	PrimaryExpression	0		8653582	1					
ANR	8653746	ExpressionStatement	dp -> bit_width = 0	4994:3:154358:154375	8653582	13	True				
ANR	8653747	AssignmentExpression	dp -> bit_width = 0		8653582	0		=			
ANR	8653748	PtrMemberAccess	dp -> bit_width		8653582	0					
ANR	8653749	Identifier	dp		8653582	0					
ANR	8653750	Identifier	bit_width		8653582	1					
ANR	8653751	PrimaryExpression	0		8653582	1					
ANR	8653752	ExpressionStatement	dp -> cbRow = 0	4995:3:154380:154393	8653582	14	True				
ANR	8653753	AssignmentExpression	dp -> cbRow = 0		8653582	0		=			
ANR	8653754	PtrMemberAccess	dp -> cbRow		8653582	0					
ANR	8653755	Identifier	dp		8653582	0					
ANR	8653756	Identifier	cbRow		8653582	1					
ANR	8653757	PrimaryExpression	0		8653582	1					
ANR	8653758	ExpressionStatement	dp -> do_interlace = do_interlace	4996:3:154398:154429	8653582	15	True				
ANR	8653759	AssignmentExpression	dp -> do_interlace = do_interlace		8653582	0		=			
ANR	8653760	PtrMemberAccess	dp -> do_interlace		8653582	0					
ANR	8653761	Identifier	dp		8653582	0					
ANR	8653762	Identifier	do_interlace		8653582	1					
ANR	8653763	Identifier	do_interlace		8653582	1					
ANR	8653764	ExpressionStatement	dp -> littleendian = 0	4997:3:154434:154454	8653582	16	True				
ANR	8653765	AssignmentExpression	dp -> littleendian = 0		8653582	0		=			
ANR	8653766	PtrMemberAccess	dp -> littleendian		8653582	0					
ANR	8653767	Identifier	dp		8653582	0					
ANR	8653768	Identifier	littleendian		8653582	1					
ANR	8653769	PrimaryExpression	0		8653582	1					
ANR	8653770	ExpressionStatement	dp -> is_transparent = 0	4998:3:154459:154481	8653582	17	True				
ANR	8653771	AssignmentExpression	dp -> is_transparent = 0		8653582	0		=			
ANR	8653772	PtrMemberAccess	dp -> is_transparent		8653582	0					
ANR	8653773	Identifier	dp		8653582	0					
ANR	8653774	Identifier	is_transparent		8653582	1					
ANR	8653775	PrimaryExpression	0		8653582	1					
ANR	8653776	ExpressionStatement	dp -> speed = ps -> speed	4999:3:154486:154507	8653582	18	True				
ANR	8653777	AssignmentExpression	dp -> speed = ps -> speed		8653582	0		=			
ANR	8653778	PtrMemberAccess	dp -> speed		8653582	0					
ANR	8653779	Identifier	dp		8653582	0					
ANR	8653780	Identifier	speed		8653582	1					
ANR	8653781	PtrMemberAccess	ps -> speed		8653582	1					
ANR	8653782	Identifier	ps		8653582	0					
ANR	8653783	Identifier	speed		8653582	1					
ANR	8653784	ExpressionStatement	dp -> use_update_info = use_update_info	5000:3:154512:154549	8653582	19	True				
ANR	8653785	AssignmentExpression	dp -> use_update_info = use_update_info		8653582	0		=			
ANR	8653786	PtrMemberAccess	dp -> use_update_info		8653582	0					
ANR	8653787	Identifier	dp		8653582	0					
ANR	8653788	Identifier	use_update_info		8653582	1					
ANR	8653789	Identifier	use_update_info		8653582	1					
ANR	8653790	ExpressionStatement	dp -> npalette = 0	5001:3:154554:154570	8653582	20	True				
ANR	8653791	AssignmentExpression	dp -> npalette = 0		8653582	0		=			
ANR	8653792	PtrMemberAccess	dp -> npalette		8653582	0					
ANR	8653793	Identifier	dp		8653582	0					
ANR	8653794	Identifier	npalette		8653582	1					
ANR	8653795	PrimaryExpression	0		8653582	1					
ANR	8653796	ExpressionStatement	"memset ( & dp -> transparent , 0 , sizeof dp -> transparent )"	5003:3:154623:154674	8653582	21	True				
ANR	8653797	CallExpression	"memset ( & dp -> transparent , 0 , sizeof dp -> transparent )"		8653582	0					
ANR	8653798	Callee	memset		8653582	0					
ANR	8653799	Identifier	memset		8653582	0					
ANR	8653800	ArgumentList	& dp -> transparent		8653582	1					
ANR	8653801	Argument	& dp -> transparent		8653582	0					
ANR	8653802	UnaryOperationExpression	& dp -> transparent		8653582	0					
ANR	8653803	UnaryOperator	&		8653582	0					
ANR	8653804	PtrMemberAccess	dp -> transparent		8653582	1					
ANR	8653805	Identifier	dp		8653582	0					
ANR	8653806	Identifier	transparent		8653582	1					
ANR	8653807	Argument	0		8653582	1					
ANR	8653808	PrimaryExpression	0		8653582	0					
ANR	8653809	Argument	sizeof dp -> transparent		8653582	2					
ANR	8653810	SizeofExpression	sizeof dp -> transparent		8653582	0					
ANR	8653811	Sizeof	sizeof		8653582	0					
ANR	8653812	PtrMemberAccess	dp -> transparent		8653582	1					
ANR	8653813	Identifier	dp		8653582	0					
ANR	8653814	Identifier	transparent		8653582	1					
ANR	8653815	ExpressionStatement	"memset ( dp -> palette , 0xff , sizeof dp -> palette )"	5005:3:154743:154788	8653582	22	True				
ANR	8653816	CallExpression	"memset ( dp -> palette , 0xff , sizeof dp -> palette )"		8653582	0					
ANR	8653817	Callee	memset		8653582	0					
ANR	8653818	Identifier	memset		8653582	0					
ANR	8653819	ArgumentList	dp -> palette		8653582	1					
ANR	8653820	Argument	dp -> palette		8653582	0					
ANR	8653821	PtrMemberAccess	dp -> palette		8653582	0					
ANR	8653822	Identifier	dp		8653582	0					
ANR	8653823	Identifier	palette		8653582	1					
ANR	8653824	Argument	0xff		8653582	1					
ANR	8653825	PrimaryExpression	0xff		8653582	0					
ANR	8653826	Argument	sizeof dp -> palette		8653582	2					
ANR	8653827	SizeofExpression	sizeof dp -> palette		8653582	0					
ANR	8653828	Sizeof	sizeof		8653582	0					
ANR	8653829	PtrMemberAccess	dp -> palette		8653582	1					
ANR	8653830	Identifier	dp		8653582	0					
ANR	8653831	Identifier	palette		8653582	1					
ANR	8653832	ReturnType	static void		8653582	1					
ANR	8653833	Identifier	standard_display_init		8653582	2					
ANR	8653834	ParameterList	"standard_display * dp , png_store * ps , png_uint_32 id , int do_interlace , int use_update_info"		8653582	3					
ANR	8653835	Parameter	standard_display * dp	4971:22:153592:153611	8653582	0	True				
ANR	8653836	ParameterType	standard_display *		8653582	0					
ANR	8653837	Identifier	dp		8653582	1					
ANR	8653838	Parameter	png_store * ps	4971:44:153614:153626	8653582	1	True				
ANR	8653839	ParameterType	png_store *		8653582	0					
ANR	8653840	Identifier	ps		8653582	1					
ANR	8653841	Parameter	png_uint_32 id	4971:59:153629:153642	8653582	2	True				
ANR	8653842	ParameterType	png_uint_32		8653582	0					
ANR	8653843	Identifier	id		8653582	1					
ANR	8653844	Parameter	int do_interlace	4972:3:153648:153663	8653582	3	True				
ANR	8653845	ParameterType	int		8653582	0					
ANR	8653846	Identifier	do_interlace		8653582	1					
ANR	8653847	Parameter	int use_update_info	4972:21:153666:153684	8653582	4	True				
ANR	8653848	ParameterType	int		8653582	0					
ANR	8653849	Identifier	use_update_info		8653582	1					
ANR	8653850	CFGEntryNode	ENTRY		8653582		True				
ANR	8653851	CFGExitNode	EXIT		8653582		True				
ANR	8653852	Symbol	dp -> is_transparent		8653582						
ANR	8653853	Symbol	ps -> speed		8653582						
ANR	8653854	Symbol	ps		8653582						
ANR	8653855	Symbol	dp -> do_interlace		8653582						
ANR	8653856	Symbol	dp		8653582						
ANR	8653857	Symbol	* dp		8653582						
ANR	8653858	Symbol	dp -> interlace_type		8653582						
ANR	8653859	Symbol	dp -> transparent		8653582						
ANR	8653860	Symbol	& dp -> transparent		8653582						
ANR	8653861	Symbol	dp -> blue_sBIT		8653582						
ANR	8653862	Symbol	DEPTH_FROM_ID		8653582						
ANR	8653863	Symbol	id		8653582						
ANR	8653864	Symbol	dp -> bit_width		8653582						
ANR	8653865	Symbol	dp -> alpha_sBIT		8653582						
ANR	8653866	Symbol	dp -> ps		8653582						
ANR	8653867	Symbol	dp -> npalette		8653582						
ANR	8653868	Symbol	dp -> palette		8653582						
ANR	8653869	Symbol	dp -> bit_depth		8653582						
ANR	8653870	Symbol	dp -> use_update_info		8653582						
ANR	8653871	Symbol	dp -> npasses		8653582						
ANR	8653872	Symbol	dp -> red_sBIT		8653582						
ANR	8653873	Symbol	dp -> littleendian		8653582						
ANR	8653874	Symbol	* ps		8653582						
ANR	8653875	Symbol	dp -> h		8653582						
ANR	8653876	Symbol	INTERLACE_FROM_ID		8653582						
ANR	8653877	Symbol	dp -> speed		8653582						
ANR	8653878	Symbol	dp -> colour_type		8653582						
ANR	8653879	Symbol	COL_FROM_ID		8653582						
ANR	8653880	Symbol	dp -> id		8653582						
ANR	8653881	Symbol	do_interlace		8653582						
ANR	8653882	Symbol	use_update_info		8653582						
ANR	8653883	Symbol	dp -> cbRow		8653582						
ANR	8653884	Symbol	dp -> w		8653582						
ANR	8653885	Symbol	dp -> pixel_size		8653582						
ANR	8653886	Symbol	dp -> green_sBIT		8653582						
ANR	8653887	Function	standard_palette_init	5011:0:154938:155643							
ANR	8653888	FunctionDef	standard_palette_init (standard_display * dp)		8653887	0					
ANR	8653889	CompoundStatement		5013:0:154994:155643	8653887	0					
ANR	8653890	IdentifierDeclStatement	"store_palette_entry * palette = store_current_palette ( dp -> ps , & dp -> npalette ) ;"	5014:3:154999:155074	8653887	0	True				
ANR	8653891	IdentifierDecl	"* palette = store_current_palette ( dp -> ps , & dp -> npalette )"		8653887	0					
ANR	8653892	IdentifierDeclType	store_palette_entry *		8653887	0					
ANR	8653893	Identifier	palette		8653887	1					
ANR	8653894	AssignmentExpression	"* palette = store_current_palette ( dp -> ps , & dp -> npalette )"		8653887	2		=			
ANR	8653895	Identifier	palette		8653887	0					
ANR	8653896	CallExpression	"store_current_palette ( dp -> ps , & dp -> npalette )"		8653887	1					
ANR	8653897	Callee	store_current_palette		8653887	0					
ANR	8653898	Identifier	store_current_palette		8653887	0					
ANR	8653899	ArgumentList	dp -> ps		8653887	1					
ANR	8653900	Argument	dp -> ps		8653887	0					
ANR	8653901	PtrMemberAccess	dp -> ps		8653887	0					
ANR	8653902	Identifier	dp		8653887	0					
ANR	8653903	Identifier	ps		8653887	1					
ANR	8653904	Argument	& dp -> npalette		8653887	1					
ANR	8653905	UnaryOperationExpression	& dp -> npalette		8653887	0					
ANR	8653906	UnaryOperator	&		8653887	0					
ANR	8653907	PtrMemberAccess	dp -> npalette		8653887	1					
ANR	8653908	Identifier	dp		8653887	0					
ANR	8653909	Identifier	npalette		8653887	1					
ANR	8653910	IfStatement	if ( dp -> npalette > 0 )		8653887	1					
ANR	8653911	Condition	dp -> npalette > 0	5017:7:155136:155151	8653887	0	True				
ANR	8653912	RelationalExpression	dp -> npalette > 0		8653887	0		>			
ANR	8653913	PtrMemberAccess	dp -> npalette		8653887	0					
ANR	8653914	Identifier	dp		8653887	0					
ANR	8653915	Identifier	npalette		8653887	1					
ANR	8653916	PrimaryExpression	0		8653887	1					
ANR	8653917	CompoundStatement		7:6:170:190	8653887	1					
ANR	8653918	IdentifierDeclStatement	int i = dp -> npalette ;	5019:6:155165:155185	8653887	0	True				
ANR	8653919	IdentifierDecl	i = dp -> npalette		8653887	0					
ANR	8653920	IdentifierDeclType	int		8653887	0					
ANR	8653921	Identifier	i		8653887	1					
ANR	8653922	AssignmentExpression	i = dp -> npalette		8653887	2		=			
ANR	8653923	Identifier	i		8653887	0					
ANR	8653924	PtrMemberAccess	dp -> npalette		8653887	1					
ANR	8653925	Identifier	dp		8653887	0					
ANR	8653926	Identifier	npalette		8653887	1					
ANR	8653927	ExpressionStatement	"memcpy ( dp -> palette , palette , i * sizeof * palette )"	5020:6:155193:155242	8653887	1	True				
ANR	8653928	CallExpression	"memcpy ( dp -> palette , palette , i * sizeof * palette )"		8653887	0					
ANR	8653929	Callee	memcpy		8653887	0					
ANR	8653930	Identifier	memcpy		8653887	0					
ANR	8653931	ArgumentList	dp -> palette		8653887	1					
ANR	8653932	Argument	dp -> palette		8653887	0					
ANR	8653933	PtrMemberAccess	dp -> palette		8653887	0					
ANR	8653934	Identifier	dp		8653887	0					
ANR	8653935	Identifier	palette		8653887	1					
ANR	8653936	Argument	palette		8653887	1					
ANR	8653937	Identifier	palette		8653887	0					
ANR	8653938	Argument	i * sizeof * palette		8653887	2					
ANR	8653939	MultiplicativeExpression	i * sizeof * palette		8653887	0		*			
ANR	8653940	Identifier	i		8653887	0					
ANR	8653941	SizeofExpression	sizeof * palette		8653887	1					
ANR	8653942	Sizeof	sizeof		8653887	0					
ANR	8653943	UnaryOperationExpression	* palette		8653887	1					
ANR	8653944	UnaryOperator	*		8653887	0					
ANR	8653945	Identifier	palette		8653887	1					
ANR	8653946	WhileStatement	while ( -- i >= 0 )		8653887	2					
ANR	8653947	Condition	-- i >= 0	5023:13:155308:155315	8653887	0	True				
ANR	8653948	RelationalExpression	-- i >= 0		8653887	0		>=			
ANR	8653949	UnaryExpression	-- i		8653887	0					
ANR	8653950	IncDec	--		8653887	0					
ANR	8653951	Identifier	i		8653887	1					
ANR	8653952	PrimaryExpression	0		8653887	1					
ANR	8653953	IfStatement	if ( palette [ i ] . alpha < 255 )		8653887	1					
ANR	8653954	Condition	palette [ i ] . alpha < 255	5024:13:155331:155352	8653887	0	True				
ANR	8653955	RelationalExpression	palette [ i ] . alpha < 255		8653887	0		<			
ANR	8653956	MemberAccess	palette [ i ] . alpha		8653887	0					
ANR	8653957	ArrayIndexing	palette [ i ]		8653887	0					
ANR	8653958	Identifier	palette		8653887	0					
ANR	8653959	Identifier	i		8653887	1					
ANR	8653960	Identifier	alpha		8653887	1					
ANR	8653961	PrimaryExpression	255		8653887	1					
ANR	8653962	BreakStatement	break ;	5025:12:155367:155372	8653887	1	True				
ANR	8653963	ElseStatement	else		8653887	0					
ANR	8653964	ExpressionStatement	dp -> is_transparent = ( i >= 0 )	5034:9:155595:155624	8653887	0	True				
ANR	8653965	AssignmentExpression	dp -> is_transparent = ( i >= 0 )		8653887	0		=			
ANR	8653966	PtrMemberAccess	dp -> is_transparent		8653887	0					
ANR	8653967	Identifier	dp		8653887	0					
ANR	8653968	Identifier	is_transparent		8653887	1					
ANR	8653969	RelationalExpression	i >= 0		8653887	1		>=			
ANR	8653970	Identifier	i		8653887	0					
ANR	8653971	PrimaryExpression	0		8653887	1					
ANR	8653972	Statement	ifdef	5027:6:155381:155385	8653887	3	True				
ANR	8653973	Statement	__GNUC__	5027:12:155387:155394	8653887	4	True				
ANR	8653974	IfStatement	if ( i >= 0 )		8653887	5					
ANR	8653975	Condition	i >= 0	5029:13:155481:155486	8653887	0	True				
ANR	8653976	RelationalExpression	i >= 0		8653887	0		>=			
ANR	8653977	Identifier	i		8653887	0					
ANR	8653978	PrimaryExpression	0		8653887	1					
ANR	8653979	ExpressionStatement	dp -> is_transparent = 1	5030:12:155501:155523	8653887	1	True				
ANR	8653980	AssignmentExpression	dp -> is_transparent = 1		8653887	0		=			
ANR	8653981	PtrMemberAccess	dp -> is_transparent		8653887	0					
ANR	8653982	Identifier	dp		8653887	0					
ANR	8653983	Identifier	is_transparent		8653887	1					
ANR	8653984	PrimaryExpression	1		8653887	1					
ANR	8653985	ElseStatement	else		8653887	0					
ANR	8653986	ExpressionStatement	dp -> is_transparent = 0	5032:12:155551:155573	8653887	0	True				
ANR	8653987	AssignmentExpression	dp -> is_transparent = 0		8653887	0		=			
ANR	8653988	PtrMemberAccess	dp -> is_transparent		8653887	0					
ANR	8653989	Identifier	dp		8653887	0					
ANR	8653990	Identifier	is_transparent		8653887	1					
ANR	8653991	PrimaryExpression	0		8653887	1					
ANR	8653992	Statement	endif	5035:6:155632:155636	8653887	6	True				
ANR	8653993	ReturnType	static void		8653887	1					
ANR	8653994	Identifier	standard_palette_init		8653887	2					
ANR	8653995	ParameterList	standard_display * dp		8653887	3					
ANR	8653996	Parameter	standard_display * dp	5012:22:154972:154991	8653887	0	True				
ANR	8653997	ParameterType	standard_display *		8653887	0					
ANR	8653998	Identifier	dp		8653887	1					
ANR	8653999	CFGEntryNode	ENTRY		8653887		True				
ANR	8654000	CFGExitNode	EXIT		8653887		True				
ANR	8654001	Symbol	dp -> palette		8653887						
ANR	8654002	Symbol	dp -> is_transparent		8653887						
ANR	8654003	Symbol	* palette		8653887						
ANR	8654004	Symbol	store_current_palette		8653887						
ANR	8654005	Symbol	i		8653887						
ANR	8654006	Symbol	dp		8653887						
ANR	8654007	Symbol	& dp -> npalette		8653887						
ANR	8654008	Symbol	* dp		8653887						
ANR	8654009	Symbol	* i		8653887						
ANR	8654010	Symbol	palette [ i ] . alpha		8653887						
ANR	8654011	Symbol	palette		8653887						
ANR	8654012	Symbol	dp -> ps		8653887						
ANR	8654013	Symbol	dp -> npalette		8653887						
ANR	8654014	Function	read_palette	5043:0:155877:158564							
ANR	8654015	FunctionDef	"read_palette (store_palette palette , int * npalette , png_const_structp pp , png_infop pi)"		8654014	0					
ANR	8654016	CompoundStatement		5046:0:155978:158564	8654014	0					
ANR	8654017	IdentifierDeclStatement	png_colorp pal ;	5047:3:155983:155997	8654014	0	True				
ANR	8654018	IdentifierDecl	pal		8654014	0					
ANR	8654019	IdentifierDeclType	png_colorp		8654014	0					
ANR	8654020	Identifier	pal		8654014	1					
ANR	8654021	IdentifierDeclStatement	png_bytep trans_alpha ;	5048:3:156002:156023	8654014	1	True				
ANR	8654022	IdentifierDecl	trans_alpha		8654014	0					
ANR	8654023	IdentifierDeclType	png_bytep		8654014	0					
ANR	8654024	Identifier	trans_alpha		8654014	1					
ANR	8654025	IdentifierDeclStatement	int num ;	5049:3:156028:156035	8654014	2	True				
ANR	8654026	IdentifierDecl	num		8654014	0					
ANR	8654027	IdentifierDeclType	int		8654014	0					
ANR	8654028	Identifier	num		8654014	1					
ANR	8654029	ExpressionStatement	pal = 0	5051:3:156041:156048	8654014	3	True				
ANR	8654030	AssignmentExpression	pal = 0		8654014	0		=			
ANR	8654031	Identifier	pal		8654014	0					
ANR	8654032	PrimaryExpression	0		8654014	1					
ANR	8654033	ExpressionStatement	* npalette = - 1	5052:3:156053:156067	8654014	4	True				
ANR	8654034	AssignmentExpression	* npalette = - 1		8654014	0		=			
ANR	8654035	UnaryOperationExpression	* npalette		8654014	0					
ANR	8654036	UnaryOperator	*		8654014	0					
ANR	8654037	Identifier	npalette		8654014	1					
ANR	8654038	UnaryOperationExpression	- 1		8654014	1					
ANR	8654039	UnaryOperator	-		8654014	0					
ANR	8654040	PrimaryExpression	1		8654014	1					
ANR	8654041	IfStatement	"if ( png_get_PLTE ( pp , pi , & pal , npalette ) & PNG_INFO_PLTE )"		8654014	5					
ANR	8654042	Condition	"png_get_PLTE ( pp , pi , & pal , npalette ) & PNG_INFO_PLTE"	5054:7:156077:156128	8654014	0	True				
ANR	8654043	BitAndExpression	"png_get_PLTE ( pp , pi , & pal , npalette ) & PNG_INFO_PLTE"		8654014	0		&			
ANR	8654044	CallExpression	"png_get_PLTE ( pp , pi , & pal , npalette )"		8654014	0					
ANR	8654045	Callee	png_get_PLTE		8654014	0					
ANR	8654046	Identifier	png_get_PLTE		8654014	0					
ANR	8654047	ArgumentList	pp		8654014	1					
ANR	8654048	Argument	pp		8654014	0					
ANR	8654049	Identifier	pp		8654014	0					
ANR	8654050	Argument	pi		8654014	1					
ANR	8654051	Identifier	pi		8654014	0					
ANR	8654052	Argument	& pal		8654014	2					
ANR	8654053	UnaryOperationExpression	& pal		8654014	0					
ANR	8654054	UnaryOperator	&		8654014	0					
ANR	8654055	Identifier	pal		8654014	1					
ANR	8654056	Argument	npalette		8654014	3					
ANR	8654057	Identifier	npalette		8654014	0					
ANR	8654058	Identifier	PNG_INFO_PLTE		8654014	1					
ANR	8654059	CompoundStatement		11:6:163:180	8654014	1					
ANR	8654060	IdentifierDeclStatement	int i = * npalette ;	5056:6:156142:156159	8654014	0	True				
ANR	8654061	IdentifierDecl	i = * npalette		8654014	0					
ANR	8654062	IdentifierDeclType	int		8654014	0					
ANR	8654063	Identifier	i		8654014	1					
ANR	8654064	AssignmentExpression	i = * npalette		8654014	2		=			
ANR	8654065	Identifier	i		8654014	0					
ANR	8654066	UnaryOperationExpression	* npalette		8654014	1					
ANR	8654067	UnaryOperator	*		8654014	0					
ANR	8654068	Identifier	npalette		8654014	1					
ANR	8654069	IfStatement	if ( i <= 0 || i > 256 )		8654014	1					
ANR	8654070	Condition	i <= 0 || i > 256	5058:10:156172:156188	8654014	0	True				
ANR	8654071	OrExpression	i <= 0 || i > 256		8654014	0		||			
ANR	8654072	RelationalExpression	i <= 0		8654014	0		<=			
ANR	8654073	Identifier	i		8654014	0					
ANR	8654074	PrimaryExpression	0		8654014	1					
ANR	8654075	RelationalExpression	i > 256		8654014	1		>			
ANR	8654076	Identifier	i		8654014	0					
ANR	8654077	PrimaryExpression	256		8654014	1					
ANR	8654078	ExpressionStatement	"png_error ( pp , ""validate: invalid PLTE count"" )"	5059:9:156200:156245	8654014	1	True				
ANR	8654079	CallExpression	"png_error ( pp , ""validate: invalid PLTE count"" )"		8654014	0					
ANR	8654080	Callee	png_error		8654014	0					
ANR	8654081	Identifier	png_error		8654014	0					
ANR	8654082	ArgumentList	pp		8654014	1					
ANR	8654083	Argument	pp		8654014	0					
ANR	8654084	Identifier	pp		8654014	0					
ANR	8654085	Argument	"""validate: invalid PLTE count"""		8654014	1					
ANR	8654086	PrimaryExpression	"""validate: invalid PLTE count"""		8654014	0					
ANR	8654087	WhileStatement	while ( -- i >= 0 )		8654014	2					
ANR	8654088	Condition	-- i >= 0	5061:13:156261:156268	8654014	0	True				
ANR	8654089	RelationalExpression	-- i >= 0		8654014	0		>=			
ANR	8654090	UnaryExpression	-- i		8654014	0					
ANR	8654091	IncDec	--		8654014	0					
ANR	8654092	Identifier	i		8654014	1					
ANR	8654093	PrimaryExpression	0		8654014	1					
ANR	8654094	CompoundStatement		17:6:298:298	8654014	1					
ANR	8654095	ExpressionStatement	palette [ i ] . red = pal [ i ] . red	5063:9:156288:156315	8654014	0	True				
ANR	8654096	AssignmentExpression	palette [ i ] . red = pal [ i ] . red		8654014	0		=			
ANR	8654097	MemberAccess	palette [ i ] . red		8654014	0					
ANR	8654098	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654099	Identifier	palette		8654014	0					
ANR	8654100	Identifier	i		8654014	1					
ANR	8654101	Identifier	red		8654014	1					
ANR	8654102	MemberAccess	pal [ i ] . red		8654014	1					
ANR	8654103	ArrayIndexing	pal [ i ]		8654014	0					
ANR	8654104	Identifier	pal		8654014	0					
ANR	8654105	Identifier	i		8654014	1					
ANR	8654106	Identifier	red		8654014	1					
ANR	8654107	ExpressionStatement	palette [ i ] . green = pal [ i ] . green	5064:9:156326:156357	8654014	1	True				
ANR	8654108	AssignmentExpression	palette [ i ] . green = pal [ i ] . green		8654014	0		=			
ANR	8654109	MemberAccess	palette [ i ] . green		8654014	0					
ANR	8654110	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654111	Identifier	palette		8654014	0					
ANR	8654112	Identifier	i		8654014	1					
ANR	8654113	Identifier	green		8654014	1					
ANR	8654114	MemberAccess	pal [ i ] . green		8654014	1					
ANR	8654115	ArrayIndexing	pal [ i ]		8654014	0					
ANR	8654116	Identifier	pal		8654014	0					
ANR	8654117	Identifier	i		8654014	1					
ANR	8654118	Identifier	green		8654014	1					
ANR	8654119	ExpressionStatement	palette [ i ] . blue = pal [ i ] . blue	5065:9:156368:156397	8654014	2	True				
ANR	8654120	AssignmentExpression	palette [ i ] . blue = pal [ i ] . blue		8654014	0		=			
ANR	8654121	MemberAccess	palette [ i ] . blue		8654014	0					
ANR	8654122	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654123	Identifier	palette		8654014	0					
ANR	8654124	Identifier	i		8654014	1					
ANR	8654125	Identifier	blue		8654014	1					
ANR	8654126	MemberAccess	pal [ i ] . blue		8654014	1					
ANR	8654127	ArrayIndexing	pal [ i ]		8654014	0					
ANR	8654128	Identifier	pal		8654014	0					
ANR	8654129	Identifier	i		8654014	1					
ANR	8654130	Identifier	blue		8654014	1					
ANR	8654131	ExpressionStatement	"memset ( palette + * npalette , 126 , ( 256 - * npalette ) * sizeof * palette )"	5071:6:156558:156625	8654014	3	True				
ANR	8654132	CallExpression	"memset ( palette + * npalette , 126 , ( 256 - * npalette ) * sizeof * palette )"		8654014	0					
ANR	8654133	Callee	memset		8654014	0					
ANR	8654134	Identifier	memset		8654014	0					
ANR	8654135	ArgumentList	palette + * npalette		8654014	1					
ANR	8654136	Argument	palette + * npalette		8654014	0					
ANR	8654137	AdditiveExpression	palette + * npalette		8654014	0		+			
ANR	8654138	Identifier	palette		8654014	0					
ANR	8654139	UnaryOperationExpression	* npalette		8654014	1					
ANR	8654140	UnaryOperator	*		8654014	0					
ANR	8654141	Identifier	npalette		8654014	1					
ANR	8654142	Argument	126		8654014	1					
ANR	8654143	PrimaryExpression	126		8654014	0					
ANR	8654144	Argument	( 256 - * npalette ) * sizeof * palette		8654014	2					
ANR	8654145	MultiplicativeExpression	( 256 - * npalette ) * sizeof * palette		8654014	0		*			
ANR	8654146	AdditiveExpression	256 - * npalette		8654014	0		-			
ANR	8654147	PrimaryExpression	256		8654014	0					
ANR	8654148	UnaryOperationExpression	* npalette		8654014	1					
ANR	8654149	UnaryOperator	*		8654014	0					
ANR	8654150	Identifier	npalette		8654014	1					
ANR	8654151	SizeofExpression	sizeof * palette		8654014	1					
ANR	8654152	Sizeof	sizeof		8654014	0					
ANR	8654153	UnaryOperationExpression	* palette		8654014	1					
ANR	8654154	UnaryOperator	*		8654014	0					
ANR	8654155	Identifier	palette		8654014	1					
ANR	8654156	ElseStatement	else		8654014	0					
ANR	8654157	CompoundStatement		30:3:685:685	8654014	0					
ANR	8654158	IfStatement	if ( * npalette != ( - 1 ) )		8654014	0					
ANR	8654159	Condition	* npalette != ( - 1 )	5076:10:156676:156692	8654014	0	True				
ANR	8654160	EqualityExpression	* npalette != ( - 1 )		8654014	0		!=			
ANR	8654161	UnaryOperationExpression	* npalette		8654014	0					
ANR	8654162	UnaryOperator	*		8654014	0					
ANR	8654163	Identifier	npalette		8654014	1					
ANR	8654164	UnaryOperationExpression	- 1		8654014	1					
ANR	8654165	UnaryOperator	-		8654014	0					
ANR	8654166	PrimaryExpression	1		8654014	1					
ANR	8654167	ExpressionStatement	"png_error ( pp , ""validate: invalid PLTE result"" )"	5077:9:156704:156750	8654014	1	True				
ANR	8654168	CallExpression	"png_error ( pp , ""validate: invalid PLTE result"" )"		8654014	0					
ANR	8654169	Callee	png_error		8654014	0					
ANR	8654170	Identifier	png_error		8654014	0					
ANR	8654171	ArgumentList	pp		8654014	1					
ANR	8654172	Argument	pp		8654014	0					
ANR	8654173	Identifier	pp		8654014	0					
ANR	8654174	Argument	"""validate: invalid PLTE result"""		8654014	1					
ANR	8654175	PrimaryExpression	"""validate: invalid PLTE result"""		8654014	0					
ANR	8654176	ExpressionStatement	* npalette = 0	5079:6:156811:156824	8654014	1	True				
ANR	8654177	AssignmentExpression	* npalette = 0		8654014	0		=			
ANR	8654178	UnaryOperationExpression	* npalette		8654014	0					
ANR	8654179	UnaryOperator	*		8654014	0					
ANR	8654180	Identifier	npalette		8654014	1					
ANR	8654181	PrimaryExpression	0		8654014	1					
ANR	8654182	ExpressionStatement	"memset ( palette , 113 , sizeof ( store_palette ) )"	5080:6:156832:156876	8654014	2	True				
ANR	8654183	CallExpression	"memset ( palette , 113 , sizeof ( store_palette ) )"		8654014	0					
ANR	8654184	Callee	memset		8654014	0					
ANR	8654185	Identifier	memset		8654014	0					
ANR	8654186	ArgumentList	palette		8654014	1					
ANR	8654187	Argument	palette		8654014	0					
ANR	8654188	Identifier	palette		8654014	0					
ANR	8654189	Argument	113		8654014	1					
ANR	8654190	PrimaryExpression	113		8654014	0					
ANR	8654191	Argument	sizeof ( store_palette )		8654014	2					
ANR	8654192	SizeofExpression	sizeof ( store_palette )		8654014	0					
ANR	8654193	Sizeof	sizeof		8654014	0					
ANR	8654194	SizeofOperand	store_palette		8654014	1					
ANR	8654195	ExpressionStatement	trans_alpha = 0	5083:3:156887:156902	8654014	6	True				
ANR	8654196	AssignmentExpression	trans_alpha = 0		8654014	0		=			
ANR	8654197	Identifier	trans_alpha		8654014	0					
ANR	8654198	PrimaryExpression	0		8654014	1					
ANR	8654199	ExpressionStatement	num = 2	5084:3:156907:156914	8654014	7	True				
ANR	8654200	AssignmentExpression	num = 2		8654014	0		=			
ANR	8654201	Identifier	num		8654014	0					
ANR	8654202	PrimaryExpression	2		8654014	1					
ANR	8654203	IfStatement	"if ( ( png_get_tRNS ( pp , pi , & trans_alpha , & num , 0 ) & PNG_INFO_tRNS ) != 0 && ( trans_alpha != NULL || num != 1 ) && ! ( trans_alpha != NULL && num == 0 ) )"		8654014	8					
ANR	8654204	Condition	"( png_get_tRNS ( pp , pi , & trans_alpha , & num , 0 ) & PNG_INFO_tRNS ) != 0 && ( trans_alpha != NULL || num != 1 ) && ! ( trans_alpha != NULL && num == 0 )"	5085:7:156947:157428	8654014	0	True				
ANR	8654205	AndExpression	"( png_get_tRNS ( pp , pi , & trans_alpha , & num , 0 ) & PNG_INFO_tRNS ) != 0 && ( trans_alpha != NULL || num != 1 ) && ! ( trans_alpha != NULL && num == 0 )"		8654014	0		&&			
ANR	8654206	EqualityExpression	"( png_get_tRNS ( pp , pi , & trans_alpha , & num , 0 ) & PNG_INFO_tRNS ) != 0"		8654014	0		!=			
ANR	8654207	BitAndExpression	"png_get_tRNS ( pp , pi , & trans_alpha , & num , 0 ) & PNG_INFO_tRNS"		8654014	0		&			
ANR	8654208	CallExpression	"png_get_tRNS ( pp , pi , & trans_alpha , & num , 0 )"		8654014	0					
ANR	8654209	Callee	png_get_tRNS		8654014	0					
ANR	8654210	Identifier	png_get_tRNS		8654014	0					
ANR	8654211	ArgumentList	pp		8654014	1					
ANR	8654212	Argument	pp		8654014	0					
ANR	8654213	Identifier	pp		8654014	0					
ANR	8654214	Argument	pi		8654014	1					
ANR	8654215	Identifier	pi		8654014	0					
ANR	8654216	Argument	& trans_alpha		8654014	2					
ANR	8654217	UnaryOperationExpression	& trans_alpha		8654014	0					
ANR	8654218	UnaryOperator	&		8654014	0					
ANR	8654219	Identifier	trans_alpha		8654014	1					
ANR	8654220	Argument	& num		8654014	3					
ANR	8654221	UnaryOperationExpression	& num		8654014	0					
ANR	8654222	UnaryOperator	&		8654014	0					
ANR	8654223	Identifier	num		8654014	1					
ANR	8654224	Argument	0		8654014	4					
ANR	8654225	PrimaryExpression	0		8654014	0					
ANR	8654226	Identifier	PNG_INFO_tRNS		8654014	1					
ANR	8654227	PrimaryExpression	0		8654014	1					
ANR	8654228	AndExpression	( trans_alpha != NULL || num != 1 ) && ! ( trans_alpha != NULL && num == 0 )		8654014	1		&&			
ANR	8654229	OrExpression	trans_alpha != NULL || num != 1		8654014	0		||			
ANR	8654230	EqualityExpression	trans_alpha != NULL		8654014	0		!=			
ANR	8654231	Identifier	trans_alpha		8654014	0					
ANR	8654232	Identifier	NULL		8654014	1					
ANR	8654233	EqualityExpression	num != 1		8654014	1		!=			
ANR	8654234	Identifier	num		8654014	0					
ANR	8654235	PrimaryExpression	1		8654014	1					
ANR	8654236	UnaryOperationExpression	! ( trans_alpha != NULL && num == 0 )		8654014	1					
ANR	8654237	UnaryOperator	!		8654014	0					
ANR	8654238	AndExpression	trans_alpha != NULL && num == 0		8654014	1		&&			
ANR	8654239	EqualityExpression	trans_alpha != NULL		8654014	0		!=			
ANR	8654240	Identifier	trans_alpha		8654014	0					
ANR	8654241	Identifier	NULL		8654014	1					
ANR	8654242	EqualityExpression	num == 0		8654014	1		==			
ANR	8654243	Identifier	num		8654014	0					
ANR	8654244	PrimaryExpression	0		8654014	1					
ANR	8654245	CompoundStatement		49:6:1495:1500	8654014	1					
ANR	8654246	IdentifierDeclStatement	int i ;	5094:6:157474:157479	8654014	0	True				
ANR	8654247	IdentifierDecl	i		8654014	0					
ANR	8654248	IdentifierDeclType	int		8654014	0					
ANR	8654249	Identifier	i		8654014	1					
ANR	8654250	IfStatement	if ( trans_alpha == NULL || num <= 0 || num > 256 || num > * npalette )		8654014	1					
ANR	8654251	Condition	trans_alpha == NULL || num <= 0 || num > 256 || num > * npalette	5102:10:157861:157923	8654014	0	True				
ANR	8654252	OrExpression	trans_alpha == NULL || num <= 0 || num > 256 || num > * npalette		8654014	0		||			
ANR	8654253	EqualityExpression	trans_alpha == NULL		8654014	0		==			
ANR	8654254	Identifier	trans_alpha		8654014	0					
ANR	8654255	Identifier	NULL		8654014	1					
ANR	8654256	OrExpression	num <= 0 || num > 256 || num > * npalette		8654014	1		||			
ANR	8654257	RelationalExpression	num <= 0		8654014	0		<=			
ANR	8654258	Identifier	num		8654014	0					
ANR	8654259	PrimaryExpression	0		8654014	1					
ANR	8654260	OrExpression	num > 256 || num > * npalette		8654014	1		||			
ANR	8654261	RelationalExpression	num > 256		8654014	0		>			
ANR	8654262	Identifier	num		8654014	0					
ANR	8654263	PrimaryExpression	256		8654014	1					
ANR	8654264	RelationalExpression	num > * npalette		8654014	1		>			
ANR	8654265	Identifier	num		8654014	0					
ANR	8654266	UnaryOperationExpression	* npalette		8654014	1					
ANR	8654267	UnaryOperator	*		8654014	0					
ANR	8654268	Identifier	npalette		8654014	1					
ANR	8654269	ExpressionStatement	"png_error ( pp , ""validate: unexpected png_get_tRNS (palette) result"" )"	5103:9:157935:158002	8654014	1	True				
ANR	8654270	CallExpression	"png_error ( pp , ""validate: unexpected png_get_tRNS (palette) result"" )"		8654014	0					
ANR	8654271	Callee	png_error		8654014	0					
ANR	8654272	Identifier	png_error		8654014	0					
ANR	8654273	ArgumentList	pp		8654014	1					
ANR	8654274	Argument	pp		8654014	0					
ANR	8654275	Identifier	pp		8654014	0					
ANR	8654276	Argument	"""validate: unexpected png_get_tRNS (palette) result"""		8654014	1					
ANR	8654277	PrimaryExpression	"""validate: unexpected png_get_tRNS (palette) result"""		8654014	0					
ANR	8654278	ForStatement	for ( i = 0 ; i < num ; ++ i )		8654014	2					
ANR	8654279	ForInit	i = 0 ;	5105:11:158016:158019	8654014	0	True				
ANR	8654280	AssignmentExpression	i = 0		8654014	0		=			
ANR	8654281	Identifier	i		8654014	0					
ANR	8654282	PrimaryExpression	0		8654014	1					
ANR	8654283	Condition	i < num	5105:16:158021:158025	8654014	1	True				
ANR	8654284	RelationalExpression	i < num		8654014	0		<			
ANR	8654285	Identifier	i		8654014	0					
ANR	8654286	Identifier	num		8654014	1					
ANR	8654287	UnaryExpression	++ i	5105:23:158028:158030	8654014	2	True				
ANR	8654288	IncDec	++		8654014	0					
ANR	8654289	Identifier	i		8654014	1					
ANR	8654290	ExpressionStatement	palette [ i ] . alpha = trans_alpha [ i ]	5106:9:158042:158075	8654014	3	True				
ANR	8654291	AssignmentExpression	palette [ i ] . alpha = trans_alpha [ i ]		8654014	0		=			
ANR	8654292	MemberAccess	palette [ i ] . alpha		8654014	0					
ANR	8654293	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654294	Identifier	palette		8654014	0					
ANR	8654295	Identifier	i		8654014	1					
ANR	8654296	Identifier	alpha		8654014	1					
ANR	8654297	ArrayIndexing	trans_alpha [ i ]		8654014	1					
ANR	8654298	Identifier	trans_alpha		8654014	0					
ANR	8654299	Identifier	i		8654014	1					
ANR	8654300	ForStatement	for ( num = * npalette ; i < num ; ++ i )		8654014	3					
ANR	8654301	ForInit	num = * npalette ;	5108:11:158089:158102	8654014	0	True				
ANR	8654302	AssignmentExpression	num = * npalette		8654014	0		=			
ANR	8654303	Identifier	num		8654014	0					
ANR	8654304	UnaryOperationExpression	* npalette		8654014	1					
ANR	8654305	UnaryOperator	*		8654014	0					
ANR	8654306	Identifier	npalette		8654014	1					
ANR	8654307	Condition	i < num	5108:26:158104:158108	8654014	1	True				
ANR	8654308	RelationalExpression	i < num		8654014	0		<			
ANR	8654309	Identifier	i		8654014	0					
ANR	8654310	Identifier	num		8654014	1					
ANR	8654311	UnaryExpression	++ i	5108:33:158111:158113	8654014	2	True				
ANR	8654312	IncDec	++		8654014	0					
ANR	8654313	Identifier	i		8654014	1					
ANR	8654314	ExpressionStatement	palette [ i ] . alpha = 255	5109:9:158125:158147	8654014	3	True				
ANR	8654315	AssignmentExpression	palette [ i ] . alpha = 255		8654014	0		=			
ANR	8654316	MemberAccess	palette [ i ] . alpha		8654014	0					
ANR	8654317	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654318	Identifier	palette		8654014	0					
ANR	8654319	Identifier	i		8654014	1					
ANR	8654320	Identifier	alpha		8654014	1					
ANR	8654321	PrimaryExpression	255		8654014	1					
ANR	8654322	ForStatement	for ( ; i < 256 ; ++ i )		8654014	4					
ANR	8654323	Condition	i < 256	5111:13:158163:158167	8654014	0	True				
ANR	8654324	RelationalExpression	i < 256		8654014	0		<			
ANR	8654325	Identifier	i		8654014	0					
ANR	8654326	PrimaryExpression	256		8654014	1					
ANR	8654327	UnaryExpression	++ i	5111:20:158170:158172	8654014	1	True				
ANR	8654328	IncDec	++		8654014	0					
ANR	8654329	Identifier	i		8654014	1					
ANR	8654330	ExpressionStatement	palette [ i ] . alpha = 33	5112:9:158184:158205	8654014	2	True				
ANR	8654331	AssignmentExpression	palette [ i ] . alpha = 33		8654014	0		=			
ANR	8654332	MemberAccess	palette [ i ] . alpha		8654014	0					
ANR	8654333	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654334	Identifier	palette		8654014	0					
ANR	8654335	Identifier	i		8654014	1					
ANR	8654336	Identifier	alpha		8654014	1					
ANR	8654337	PrimaryExpression	33		8654014	1					
ANR	8654338	ReturnStatement	return 1 ;	5114:6:158231:158239	8654014	5	True				
ANR	8654339	PrimaryExpression	1		8654014	0					
ANR	8654340	ElseStatement	else		8654014	0					
ANR	8654341	CompoundStatement		75:6:2382:2387	8654014	0					
ANR	8654342	IdentifierDeclStatement	int i ;	5120:6:158361:158366	8654014	0	True				
ANR	8654343	IdentifierDecl	i		8654014	0					
ANR	8654344	IdentifierDeclType	int		8654014	0					
ANR	8654345	Identifier	i		8654014	1					
ANR	8654346	ForStatement	"for ( i = 0 , num = * npalette ; i < num ; ++ i )"		8654014	1					
ANR	8654347	ForInit	"i = 0 , num = * npalette ;"	5122:11:158380:158398	8654014	0	True				
ANR	8654348	Expression	"i = 0 , num = * npalette"		8654014	0					
ANR	8654349	AssignmentExpression	i = 0		8654014	0		=			
ANR	8654350	Identifier	i		8654014	0					
ANR	8654351	PrimaryExpression	0		8654014	1					
ANR	8654352	AssignmentExpression	num = * npalette		8654014	1		=			
ANR	8654353	Identifier	num		8654014	0					
ANR	8654354	UnaryOperationExpression	* npalette		8654014	1					
ANR	8654355	UnaryOperator	*		8654014	0					
ANR	8654356	Identifier	npalette		8654014	1					
ANR	8654357	Condition	i < num	5122:31:158400:158404	8654014	1	True				
ANR	8654358	RelationalExpression	i < num		8654014	0		<			
ANR	8654359	Identifier	i		8654014	0					
ANR	8654360	Identifier	num		8654014	1					
ANR	8654361	UnaryExpression	++ i	5122:38:158407:158409	8654014	2	True				
ANR	8654362	IncDec	++		8654014	0					
ANR	8654363	Identifier	i		8654014	1					
ANR	8654364	ExpressionStatement	palette [ i ] . alpha = 255	5123:9:158421:158443	8654014	3	True				
ANR	8654365	AssignmentExpression	palette [ i ] . alpha = 255		8654014	0		=			
ANR	8654366	MemberAccess	palette [ i ] . alpha		8654014	0					
ANR	8654367	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654368	Identifier	palette		8654014	0					
ANR	8654369	Identifier	i		8654014	1					
ANR	8654370	Identifier	alpha		8654014	1					
ANR	8654371	PrimaryExpression	255		8654014	1					
ANR	8654372	ForStatement	for ( ; i < 256 ; ++ i )		8654014	2					
ANR	8654373	Condition	i < 256	5125:13:158459:158463	8654014	0	True				
ANR	8654374	RelationalExpression	i < 256		8654014	0		<			
ANR	8654375	Identifier	i		8654014	0					
ANR	8654376	PrimaryExpression	256		8654014	1					
ANR	8654377	UnaryExpression	++ i	5125:20:158466:158468	8654014	1	True				
ANR	8654378	IncDec	++		8654014	0					
ANR	8654379	Identifier	i		8654014	1					
ANR	8654380	ExpressionStatement	palette [ i ] . alpha = 55	5126:9:158480:158501	8654014	2	True				
ANR	8654381	AssignmentExpression	palette [ i ] . alpha = 55		8654014	0		=			
ANR	8654382	MemberAccess	palette [ i ] . alpha		8654014	0					
ANR	8654383	ArrayIndexing	palette [ i ]		8654014	0					
ANR	8654384	Identifier	palette		8654014	0					
ANR	8654385	Identifier	i		8654014	1					
ANR	8654386	Identifier	alpha		8654014	1					
ANR	8654387	PrimaryExpression	55		8654014	1					
ANR	8654388	ReturnStatement	return 0 ;	5128:6:158527:158535	8654014	3	True				
ANR	8654389	PrimaryExpression	0		8654014	0					
ANR	8654390	ReturnType	static int		8654014	1					
ANR	8654391	Identifier	read_palette		8654014	2					
ANR	8654392	ParameterList	"store_palette palette , int * npalette , png_const_structp pp , png_infop pi"		8654014	3					
ANR	8654393	Parameter	store_palette palette	5044:13:155901:155921	8654014	0	True				
ANR	8654394	ParameterType	store_palette		8654014	0					
ANR	8654395	Identifier	palette		8654014	1					
ANR	8654396	Parameter	int * npalette	5044:36:155924:155936	8654014	1	True				
ANR	8654397	ParameterType	int *		8654014	0					
ANR	8654398	Identifier	npalette		8654014	1					
ANR	8654399	Parameter	png_const_structp pp	5044:51:155939:155958	8654014	2	True				
ANR	8654400	ParameterType	png_const_structp		8654014	0					
ANR	8654401	Identifier	pp		8654014	1					
ANR	8654402	Parameter	png_infop pi	5045:3:155964:155975	8654014	3	True				
ANR	8654403	ParameterType	png_infop		8654014	0					
ANR	8654404	Identifier	pi		8654014	1					
ANR	8654405	CFGEntryNode	ENTRY		8654014		True				
ANR	8654406	CFGExitNode	EXIT		8654014		True				
ANR	8654407	Symbol	pp		8654014						
ANR	8654408	Symbol	png_get_tRNS		8654014						
ANR	8654409	Symbol	* palette		8654014						
ANR	8654410	Symbol	pal [ i ] . blue		8654014						
ANR	8654411	Symbol	* pal		8654014						
ANR	8654412	Symbol	palette [ i ] . green		8654014						
ANR	8654413	Symbol	& pal		8654014						
ANR	8654414	Symbol	num		8654014						
ANR	8654415	Symbol	PNG_INFO_tRNS		8654014						
ANR	8654416	Symbol	pal [ i ] . green		8654014						
ANR	8654417	Symbol	trans_alpha		8654014						
ANR	8654418	Symbol	pal [ i ] . red		8654014						
ANR	8654419	Symbol	palette [ i ] . alpha		8654014						
ANR	8654420	Symbol	palette		8654014						
ANR	8654421	Symbol	pal		8654014						
ANR	8654422	Symbol	palette [ i ] . red		8654014						
ANR	8654423	Symbol	* trans_alpha		8654014						
ANR	8654424	Symbol	png_get_PLTE		8654014						
ANR	8654425	Symbol	NULL		8654014						
ANR	8654426	Symbol	i		8654014						
ANR	8654427	Symbol	PNG_INFO_PLTE		8654014						
ANR	8654428	Symbol	& num		8654014						
ANR	8654429	Symbol	npalette		8654014						
ANR	8654430	Symbol	palette [ i ] . blue		8654014						
ANR	8654431	Symbol	& trans_alpha		8654014						
ANR	8654432	Symbol	* i		8654014						
ANR	8654433	Symbol	pi		8654014						
ANR	8654434	Symbol	* npalette		8654014						
ANR	8654435	Function	standard_palette_validate	5135:0:158665:159668							
ANR	8654436	FunctionDef	"standard_palette_validate (standard_display * dp , png_const_structp pp , png_infop pi)"		8654435	0					
ANR	8654437	CompoundStatement		5138:0:158764:159668	8654435	0					
ANR	8654438	IdentifierDeclStatement	int npalette ;	5139:3:158769:158781	8654435	0	True				
ANR	8654439	IdentifierDecl	npalette		8654435	0					
ANR	8654440	IdentifierDeclType	int		8654435	0					
ANR	8654441	Identifier	npalette		8654435	1					
ANR	8654442	IdentifierDeclStatement	store_palette palette ;	5140:3:158786:158807	8654435	1	True				
ANR	8654443	IdentifierDecl	palette		8654435	0					
ANR	8654444	IdentifierDeclType	store_palette		8654435	0					
ANR	8654445	Identifier	palette		8654435	1					
ANR	8654446	IfStatement	"if ( read_palette ( palette , & npalette , pp , pi ) != dp -> is_transparent )"		8654435	2					
ANR	8654447	Condition	"read_palette ( palette , & npalette , pp , pi ) != dp -> is_transparent"	5142:7:158817:158878	8654435	0	True				
ANR	8654448	EqualityExpression	"read_palette ( palette , & npalette , pp , pi ) != dp -> is_transparent"		8654435	0		!=			
ANR	8654449	CallExpression	"read_palette ( palette , & npalette , pp , pi )"		8654435	0					
ANR	8654450	Callee	read_palette		8654435	0					
ANR	8654451	Identifier	read_palette		8654435	0					
ANR	8654452	ArgumentList	palette		8654435	1					
ANR	8654453	Argument	palette		8654435	0					
ANR	8654454	Identifier	palette		8654435	0					
ANR	8654455	Argument	& npalette		8654435	1					
ANR	8654456	UnaryOperationExpression	& npalette		8654435	0					
ANR	8654457	UnaryOperator	&		8654435	0					
ANR	8654458	Identifier	npalette		8654435	1					
ANR	8654459	Argument	pp		8654435	2					
ANR	8654460	Identifier	pp		8654435	0					
ANR	8654461	Argument	pi		8654435	3					
ANR	8654462	Identifier	pi		8654435	0					
ANR	8654463	PtrMemberAccess	dp -> is_transparent		8654435	1					
ANR	8654464	Identifier	dp		8654435	0					
ANR	8654465	Identifier	is_transparent		8654435	1					
ANR	8654466	ExpressionStatement	"png_error ( pp , ""validate: palette transparency changed"" )"	5143:6:158887:158942	8654435	1	True				
ANR	8654467	CallExpression	"png_error ( pp , ""validate: palette transparency changed"" )"		8654435	0					
ANR	8654468	Callee	png_error		8654435	0					
ANR	8654469	Identifier	png_error		8654435	0					
ANR	8654470	ArgumentList	pp		8654435	1					
ANR	8654471	Argument	pp		8654435	0					
ANR	8654472	Identifier	pp		8654435	0					
ANR	8654473	Argument	"""validate: palette transparency changed"""		8654435	1					
ANR	8654474	PrimaryExpression	"""validate: palette transparency changed"""		8654435	0					
ANR	8654475	IfStatement	if ( npalette != dp -> npalette )		8654435	3					
ANR	8654476	Condition	npalette != dp -> npalette	5145:7:158952:158975	8654435	0	True				
ANR	8654477	EqualityExpression	npalette != dp -> npalette		8654435	0		!=			
ANR	8654478	Identifier	npalette		8654435	0					
ANR	8654479	PtrMemberAccess	dp -> npalette		8654435	1					
ANR	8654480	Identifier	dp		8654435	0					
ANR	8654481	Identifier	npalette		8654435	1					
ANR	8654482	CompoundStatement		11:6:246:258	8654435	1					
ANR	8654483	IdentifierDeclStatement	size_t pos = 0 ;	5147:6:158989:159003	8654435	0	True				
ANR	8654484	IdentifierDecl	pos = 0		8654435	0					
ANR	8654485	IdentifierDeclType	size_t		8654435	0					
ANR	8654486	Identifier	pos		8654435	1					
ANR	8654487	AssignmentExpression	pos = 0		8654435	2		=			
ANR	8654488	Identifier	pos		8654435	0					
ANR	8654489	PrimaryExpression	0		8654435	1					
ANR	8654490	IdentifierDeclStatement	char msg [ 64 ] ;	5148:6:159011:159023	8654435	1	True				
ANR	8654491	IdentifierDecl	msg [ 64 ]		8654435	0					
ANR	8654492	IdentifierDeclType	char [ 64 ]		8654435	0					
ANR	8654493	Identifier	msg		8654435	1					
ANR	8654494	PrimaryExpression	64		8654435	2					
ANR	8654495	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""validate: palette size changed: "" )"	5150:6:159032:159103	8654435	2	True				
ANR	8654496	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""validate: palette size changed: "" )"		8654435	0		=			
ANR	8654497	Identifier	pos		8654435	0					
ANR	8654498	CallExpression	"safecat ( msg , sizeof msg , pos , ""validate: palette size changed: "" )"		8654435	1					
ANR	8654499	Callee	safecat		8654435	0					
ANR	8654500	Identifier	safecat		8654435	0					
ANR	8654501	ArgumentList	msg		8654435	1					
ANR	8654502	Argument	msg		8654435	0					
ANR	8654503	Identifier	msg		8654435	0					
ANR	8654504	Argument	sizeof msg		8654435	1					
ANR	8654505	SizeofExpression	sizeof msg		8654435	0					
ANR	8654506	Sizeof	sizeof		8654435	0					
ANR	8654507	Identifier	msg		8654435	1					
ANR	8654508	Argument	pos		8654435	2					
ANR	8654509	Identifier	pos		8654435	0					
ANR	8654510	Argument	"""validate: palette size changed: """		8654435	3					
ANR	8654511	PrimaryExpression	"""validate: palette size changed: """		8654435	0					
ANR	8654512	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , dp -> npalette )"	5151:6:159111:159161	8654435	3	True				
ANR	8654513	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , dp -> npalette )"		8654435	0		=			
ANR	8654514	Identifier	pos		8654435	0					
ANR	8654515	CallExpression	"safecatn ( msg , sizeof msg , pos , dp -> npalette )"		8654435	1					
ANR	8654516	Callee	safecatn		8654435	0					
ANR	8654517	Identifier	safecatn		8654435	0					
ANR	8654518	ArgumentList	msg		8654435	1					
ANR	8654519	Argument	msg		8654435	0					
ANR	8654520	Identifier	msg		8654435	0					
ANR	8654521	Argument	sizeof msg		8654435	1					
ANR	8654522	SizeofExpression	sizeof msg		8654435	0					
ANR	8654523	Sizeof	sizeof		8654435	0					
ANR	8654524	Identifier	msg		8654435	1					
ANR	8654525	Argument	pos		8654435	2					
ANR	8654526	Identifier	pos		8654435	0					
ANR	8654527	Argument	dp -> npalette		8654435	3					
ANR	8654528	PtrMemberAccess	dp -> npalette		8654435	0					
ANR	8654529	Identifier	dp		8654435	0					
ANR	8654530	Identifier	npalette		8654435	1					
ANR	8654531	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" -> "" )"	5152:6:159169:159212	8654435	4	True				
ANR	8654532	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" -> "" )"		8654435	0		=			
ANR	8654533	Identifier	pos		8654435	0					
ANR	8654534	CallExpression	"safecat ( msg , sizeof msg , pos , "" -> "" )"		8654435	1					
ANR	8654535	Callee	safecat		8654435	0					
ANR	8654536	Identifier	safecat		8654435	0					
ANR	8654537	ArgumentList	msg		8654435	1					
ANR	8654538	Argument	msg		8654435	0					
ANR	8654539	Identifier	msg		8654435	0					
ANR	8654540	Argument	sizeof msg		8654435	1					
ANR	8654541	SizeofExpression	sizeof msg		8654435	0					
ANR	8654542	Sizeof	sizeof		8654435	0					
ANR	8654543	Identifier	msg		8654435	1					
ANR	8654544	Argument	pos		8654435	2					
ANR	8654545	Identifier	pos		8654435	0					
ANR	8654546	Argument	""" -> """		8654435	3					
ANR	8654547	PrimaryExpression	""" -> """		8654435	0					
ANR	8654548	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , npalette )"	5153:6:159220:159266	8654435	5	True				
ANR	8654549	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , npalette )"		8654435	0		=			
ANR	8654550	Identifier	pos		8654435	0					
ANR	8654551	CallExpression	"safecatn ( msg , sizeof msg , pos , npalette )"		8654435	1					
ANR	8654552	Callee	safecatn		8654435	0					
ANR	8654553	Identifier	safecatn		8654435	0					
ANR	8654554	ArgumentList	msg		8654435	1					
ANR	8654555	Argument	msg		8654435	0					
ANR	8654556	Identifier	msg		8654435	0					
ANR	8654557	Argument	sizeof msg		8654435	1					
ANR	8654558	SizeofExpression	sizeof msg		8654435	0					
ANR	8654559	Sizeof	sizeof		8654435	0					
ANR	8654560	Identifier	msg		8654435	1					
ANR	8654561	Argument	pos		8654435	2					
ANR	8654562	Identifier	pos		8654435	0					
ANR	8654563	Argument	npalette		8654435	3					
ANR	8654564	Identifier	npalette		8654435	0					
ANR	8654565	ExpressionStatement	"png_error ( pp , msg )"	5154:6:159274:159292	8654435	6	True				
ANR	8654566	CallExpression	"png_error ( pp , msg )"		8654435	0					
ANR	8654567	Callee	png_error		8654435	0					
ANR	8654568	Identifier	png_error		8654435	0					
ANR	8654569	ArgumentList	pp		8654435	1					
ANR	8654570	Argument	pp		8654435	0					
ANR	8654571	Identifier	pp		8654435	0					
ANR	8654572	Argument	msg		8654435	1					
ANR	8654573	Identifier	msg		8654435	0					
ANR	8654574	CompoundStatement		21:6:546:562	8654435	4					
ANR	8654575	IdentifierDeclStatement	int i = npalette ;	5158:6:159311:159327	8654435	0	True				
ANR	8654576	IdentifierDecl	i = npalette		8654435	0					
ANR	8654577	IdentifierDeclType	int		8654435	0					
ANR	8654578	Identifier	i		8654435	1					
ANR	8654579	AssignmentExpression	i = npalette		8654435	2		=			
ANR	8654580	Identifier	npalette		8654435	0					
ANR	8654581	Identifier	npalette		8654435	1					
ANR	8654582	WhileStatement	while ( -- i >= 0 )		8654435	1					
ANR	8654583	Condition	-- i >= 0	5160:13:159369:159376	8654435	0	True				
ANR	8654584	RelationalExpression	-- i >= 0		8654435	0		>=			
ANR	8654585	UnaryExpression	-- i		8654435	0					
ANR	8654586	IncDec	--		8654435	0					
ANR	8654587	Identifier	i		8654435	1					
ANR	8654588	PrimaryExpression	0		8654435	1					
ANR	8654589	IfStatement	if ( palette [ i ] . red != dp -> palette [ i ] . red || palette [ i ] . green != dp -> palette [ i ] . green || palette [ i ] . blue != dp -> palette [ i ] . blue || palette [ i ] . alpha != dp -> palette [ i ] . alpha )		8654435	1					
ANR	8654590	Condition	palette [ i ] . red != dp -> palette [ i ] . red || palette [ i ] . green != dp -> palette [ i ] . green || palette [ i ] . blue != dp -> palette [ i ] . blue || palette [ i ] . alpha != dp -> palette [ i ] . alpha	5161:13:159392:159593	8654435	0	True				
ANR	8654591	OrExpression	palette [ i ] . red != dp -> palette [ i ] . red || palette [ i ] . green != dp -> palette [ i ] . green || palette [ i ] . blue != dp -> palette [ i ] . blue || palette [ i ] . alpha != dp -> palette [ i ] . alpha		8654435	0		||			
ANR	8654592	EqualityExpression	palette [ i ] . red != dp -> palette [ i ] . red		8654435	0		!=			
ANR	8654593	MemberAccess	palette [ i ] . red		8654435	0					
ANR	8654594	ArrayIndexing	palette [ i ]		8654435	0					
ANR	8654595	Identifier	palette		8654435	0					
ANR	8654596	Identifier	i		8654435	1					
ANR	8654597	Identifier	red		8654435	1					
ANR	8654598	MemberAccess	dp -> palette [ i ] . red		8654435	1					
ANR	8654599	ArrayIndexing	dp -> palette [ i ]		8654435	0					
ANR	8654600	PtrMemberAccess	dp -> palette		8654435	0					
ANR	8654601	Identifier	dp		8654435	0					
ANR	8654602	Identifier	palette		8654435	1					
ANR	8654603	Identifier	i		8654435	1					
ANR	8654604	Identifier	red		8654435	1					
ANR	8654605	OrExpression	palette [ i ] . green != dp -> palette [ i ] . green || palette [ i ] . blue != dp -> palette [ i ] . blue || palette [ i ] . alpha != dp -> palette [ i ] . alpha		8654435	1		||			
ANR	8654606	EqualityExpression	palette [ i ] . green != dp -> palette [ i ] . green		8654435	0		!=			
ANR	8654607	MemberAccess	palette [ i ] . green		8654435	0					
ANR	8654608	ArrayIndexing	palette [ i ]		8654435	0					
ANR	8654609	Identifier	palette		8654435	0					
ANR	8654610	Identifier	i		8654435	1					
ANR	8654611	Identifier	green		8654435	1					
ANR	8654612	MemberAccess	dp -> palette [ i ] . green		8654435	1					
ANR	8654613	ArrayIndexing	dp -> palette [ i ]		8654435	0					
ANR	8654614	PtrMemberAccess	dp -> palette		8654435	0					
ANR	8654615	Identifier	dp		8654435	0					
ANR	8654616	Identifier	palette		8654435	1					
ANR	8654617	Identifier	i		8654435	1					
ANR	8654618	Identifier	green		8654435	1					
ANR	8654619	OrExpression	palette [ i ] . blue != dp -> palette [ i ] . blue || palette [ i ] . alpha != dp -> palette [ i ] . alpha		8654435	1		||			
ANR	8654620	EqualityExpression	palette [ i ] . blue != dp -> palette [ i ] . blue		8654435	0		!=			
ANR	8654621	MemberAccess	palette [ i ] . blue		8654435	0					
ANR	8654622	ArrayIndexing	palette [ i ]		8654435	0					
ANR	8654623	Identifier	palette		8654435	0					
ANR	8654624	Identifier	i		8654435	1					
ANR	8654625	Identifier	blue		8654435	1					
ANR	8654626	MemberAccess	dp -> palette [ i ] . blue		8654435	1					
ANR	8654627	ArrayIndexing	dp -> palette [ i ]		8654435	0					
ANR	8654628	PtrMemberAccess	dp -> palette		8654435	0					
ANR	8654629	Identifier	dp		8654435	0					
ANR	8654630	Identifier	palette		8654435	1					
ANR	8654631	Identifier	i		8654435	1					
ANR	8654632	Identifier	blue		8654435	1					
ANR	8654633	EqualityExpression	palette [ i ] . alpha != dp -> palette [ i ] . alpha		8654435	1		!=			
ANR	8654634	MemberAccess	palette [ i ] . alpha		8654435	0					
ANR	8654635	ArrayIndexing	palette [ i ]		8654435	0					
ANR	8654636	Identifier	palette		8654435	0					
ANR	8654637	Identifier	i		8654435	1					
ANR	8654638	Identifier	alpha		8654435	1					
ANR	8654639	MemberAccess	dp -> palette [ i ] . alpha		8654435	1					
ANR	8654640	ArrayIndexing	dp -> palette [ i ]		8654435	0					
ANR	8654641	PtrMemberAccess	dp -> palette		8654435	0					
ANR	8654642	Identifier	dp		8654435	0					
ANR	8654643	Identifier	palette		8654435	1					
ANR	8654644	Identifier	i		8654435	1					
ANR	8654645	Identifier	alpha		8654435	1					
ANR	8654646	ExpressionStatement	"png_error ( pp , ""validate: PLTE or tRNS chunk changed"" )"	5165:12:159608:159661	8654435	1	True				
ANR	8654647	CallExpression	"png_error ( pp , ""validate: PLTE or tRNS chunk changed"" )"		8654435	0					
ANR	8654648	Callee	png_error		8654435	0					
ANR	8654649	Identifier	png_error		8654435	0					
ANR	8654650	ArgumentList	pp		8654435	1					
ANR	8654651	Argument	pp		8654435	0					
ANR	8654652	Identifier	pp		8654435	0					
ANR	8654653	Argument	"""validate: PLTE or tRNS chunk changed"""		8654435	1					
ANR	8654654	PrimaryExpression	"""validate: PLTE or tRNS chunk changed"""		8654435	0					
ANR	8654655	ReturnType	static void		8654435	1					
ANR	8654656	Identifier	standard_palette_validate		8654435	2					
ANR	8654657	ParameterList	"standard_display * dp , png_const_structp pp , png_infop pi"		8654435	3					
ANR	8654658	Parameter	standard_display * dp	5136:26:158703:158722	8654435	0	True				
ANR	8654659	ParameterType	standard_display *		8654435	0					
ANR	8654660	Identifier	dp		8654435	1					
ANR	8654661	Parameter	png_const_structp pp	5136:48:158725:158744	8654435	1	True				
ANR	8654662	ParameterType	png_const_structp		8654435	0					
ANR	8654663	Identifier	pp		8654435	1					
ANR	8654664	Parameter	png_infop pi	5137:3:158750:158761	8654435	2	True				
ANR	8654665	ParameterType	png_infop		8654435	0					
ANR	8654666	Identifier	pi		8654435	1					
ANR	8654667	CFGEntryNode	ENTRY		8654435		True				
ANR	8654668	CFGExitNode	EXIT		8654435		True				
ANR	8654669	Symbol	pp		8654435						
ANR	8654670	Symbol	dp -> is_transparent		8654435						
ANR	8654671	Symbol	msg		8654435						
ANR	8654672	Symbol	read_palette		8654435						
ANR	8654673	Symbol	* palette		8654435						
ANR	8654674	Symbol	palette [ i ] . green		8654435						
ANR	8654675	Symbol	dp -> palette [ i ] . red		8654435						
ANR	8654676	Symbol	safecatn		8654435						
ANR	8654677	Symbol	dp		8654435						
ANR	8654678	Symbol	& npalette		8654435						
ANR	8654679	Symbol	* dp		8654435						
ANR	8654680	Symbol	* dp -> palette		8654435						
ANR	8654681	Symbol	pos		8654435						
ANR	8654682	Symbol	safecat		8654435						
ANR	8654683	Symbol	dp -> palette [ i ] . blue		8654435						
ANR	8654684	Symbol	palette [ i ] . alpha		8654435						
ANR	8654685	Symbol	palette		8654435						
ANR	8654686	Symbol	palette [ i ] . red		8654435						
ANR	8654687	Symbol	dp -> npalette		8654435						
ANR	8654688	Symbol	dp -> palette		8654435						
ANR	8654689	Symbol	dp -> palette [ i ] . green		8654435						
ANR	8654690	Symbol	i		8654435						
ANR	8654691	Symbol	npalette		8654435						
ANR	8654692	Symbol	palette [ i ] . blue		8654435						
ANR	8654693	Symbol	* i		8654435						
ANR	8654694	Symbol	dp -> palette [ i ] . alpha		8654435						
ANR	8654695	Symbol	pi		8654435						
ANR	8654696	Symbol	* * dp		8654435						
ANR	8654697	Function	standard_info_part1	5177:0:160134:165273							
ANR	8654698	FunctionDef	"standard_info_part1 (standard_display * dp , png_structp pp , png_infop pi)"		8654697	0					
ANR	8654699	CompoundStatement		5179:0:160218:165273	8654697	0					
ANR	8654700	IfStatement	"if ( png_get_bit_depth ( pp , pi ) != dp -> bit_depth )"		8654697	0					
ANR	8654701	Condition	"png_get_bit_depth ( pp , pi ) != dp -> bit_depth"	5180:7:160227:160268	8654697	0	True				
ANR	8654702	EqualityExpression	"png_get_bit_depth ( pp , pi ) != dp -> bit_depth"		8654697	0		!=			
ANR	8654703	CallExpression	"png_get_bit_depth ( pp , pi )"		8654697	0					
ANR	8654704	Callee	png_get_bit_depth		8654697	0					
ANR	8654705	Identifier	png_get_bit_depth		8654697	0					
ANR	8654706	ArgumentList	pp		8654697	1					
ANR	8654707	Argument	pp		8654697	0					
ANR	8654708	Identifier	pp		8654697	0					
ANR	8654709	Argument	pi		8654697	1					
ANR	8654710	Identifier	pi		8654697	0					
ANR	8654711	PtrMemberAccess	dp -> bit_depth		8654697	1					
ANR	8654712	Identifier	dp		8654697	0					
ANR	8654713	Identifier	bit_depth		8654697	1					
ANR	8654714	ExpressionStatement	"png_error ( pp , ""validate: bit depth changed"" )"	5181:6:160277:160321	8654697	1	True				
ANR	8654715	CallExpression	"png_error ( pp , ""validate: bit depth changed"" )"		8654697	0					
ANR	8654716	Callee	png_error		8654697	0					
ANR	8654717	Identifier	png_error		8654697	0					
ANR	8654718	ArgumentList	pp		8654697	1					
ANR	8654719	Argument	pp		8654697	0					
ANR	8654720	Identifier	pp		8654697	0					
ANR	8654721	Argument	"""validate: bit depth changed"""		8654697	1					
ANR	8654722	PrimaryExpression	"""validate: bit depth changed"""		8654697	0					
ANR	8654723	IfStatement	"if ( png_get_color_type ( pp , pi ) != dp -> colour_type )"		8654697	1					
ANR	8654724	Condition	"png_get_color_type ( pp , pi ) != dp -> colour_type"	5183:7:160331:160375	8654697	0	True				
ANR	8654725	EqualityExpression	"png_get_color_type ( pp , pi ) != dp -> colour_type"		8654697	0		!=			
ANR	8654726	CallExpression	"png_get_color_type ( pp , pi )"		8654697	0					
ANR	8654727	Callee	png_get_color_type		8654697	0					
ANR	8654728	Identifier	png_get_color_type		8654697	0					
ANR	8654729	ArgumentList	pp		8654697	1					
ANR	8654730	Argument	pp		8654697	0					
ANR	8654731	Identifier	pp		8654697	0					
ANR	8654732	Argument	pi		8654697	1					
ANR	8654733	Identifier	pi		8654697	0					
ANR	8654734	PtrMemberAccess	dp -> colour_type		8654697	1					
ANR	8654735	Identifier	dp		8654697	0					
ANR	8654736	Identifier	colour_type		8654697	1					
ANR	8654737	ExpressionStatement	"png_error ( pp , ""validate: color type changed"" )"	5184:6:160384:160429	8654697	1	True				
ANR	8654738	CallExpression	"png_error ( pp , ""validate: color type changed"" )"		8654697	0					
ANR	8654739	Callee	png_error		8654697	0					
ANR	8654740	Identifier	png_error		8654697	0					
ANR	8654741	ArgumentList	pp		8654697	1					
ANR	8654742	Argument	pp		8654697	0					
ANR	8654743	Identifier	pp		8654697	0					
ANR	8654744	Argument	"""validate: color type changed"""		8654697	1					
ANR	8654745	PrimaryExpression	"""validate: color type changed"""		8654697	0					
ANR	8654746	IfStatement	"if ( png_get_filter_type ( pp , pi ) != PNG_FILTER_TYPE_BASE )"		8654697	2					
ANR	8654747	Condition	"png_get_filter_type ( pp , pi ) != PNG_FILTER_TYPE_BASE"	5186:7:160439:160489	8654697	0	True				
ANR	8654748	EqualityExpression	"png_get_filter_type ( pp , pi ) != PNG_FILTER_TYPE_BASE"		8654697	0		!=			
ANR	8654749	CallExpression	"png_get_filter_type ( pp , pi )"		8654697	0					
ANR	8654750	Callee	png_get_filter_type		8654697	0					
ANR	8654751	Identifier	png_get_filter_type		8654697	0					
ANR	8654752	ArgumentList	pp		8654697	1					
ANR	8654753	Argument	pp		8654697	0					
ANR	8654754	Identifier	pp		8654697	0					
ANR	8654755	Argument	pi		8654697	1					
ANR	8654756	Identifier	pi		8654697	0					
ANR	8654757	Identifier	PNG_FILTER_TYPE_BASE		8654697	1					
ANR	8654758	ExpressionStatement	"png_error ( pp , ""validate: filter type changed"" )"	5187:6:160498:160544	8654697	1	True				
ANR	8654759	CallExpression	"png_error ( pp , ""validate: filter type changed"" )"		8654697	0					
ANR	8654760	Callee	png_error		8654697	0					
ANR	8654761	Identifier	png_error		8654697	0					
ANR	8654762	ArgumentList	pp		8654697	1					
ANR	8654763	Argument	pp		8654697	0					
ANR	8654764	Identifier	pp		8654697	0					
ANR	8654765	Argument	"""validate: filter type changed"""		8654697	1					
ANR	8654766	PrimaryExpression	"""validate: filter type changed"""		8654697	0					
ANR	8654767	IfStatement	"if ( png_get_interlace_type ( pp , pi ) != dp -> interlace_type )"		8654697	3					
ANR	8654768	Condition	"png_get_interlace_type ( pp , pi ) != dp -> interlace_type"	5189:7:160554:160605	8654697	0	True				
ANR	8654769	EqualityExpression	"png_get_interlace_type ( pp , pi ) != dp -> interlace_type"		8654697	0		!=			
ANR	8654770	CallExpression	"png_get_interlace_type ( pp , pi )"		8654697	0					
ANR	8654771	Callee	png_get_interlace_type		8654697	0					
ANR	8654772	Identifier	png_get_interlace_type		8654697	0					
ANR	8654773	ArgumentList	pp		8654697	1					
ANR	8654774	Argument	pp		8654697	0					
ANR	8654775	Identifier	pp		8654697	0					
ANR	8654776	Argument	pi		8654697	1					
ANR	8654777	Identifier	pi		8654697	0					
ANR	8654778	PtrMemberAccess	dp -> interlace_type		8654697	1					
ANR	8654779	Identifier	dp		8654697	0					
ANR	8654780	Identifier	interlace_type		8654697	1					
ANR	8654781	ExpressionStatement	"png_error ( pp , ""validate: interlacing changed"" )"	5190:6:160614:160660	8654697	1	True				
ANR	8654782	CallExpression	"png_error ( pp , ""validate: interlacing changed"" )"		8654697	0					
ANR	8654783	Callee	png_error		8654697	0					
ANR	8654784	Identifier	png_error		8654697	0					
ANR	8654785	ArgumentList	pp		8654697	1					
ANR	8654786	Argument	pp		8654697	0					
ANR	8654787	Identifier	pp		8654697	0					
ANR	8654788	Argument	"""validate: interlacing changed"""		8654697	1					
ANR	8654789	PrimaryExpression	"""validate: interlacing changed"""		8654697	0					
ANR	8654790	IfStatement	"if ( png_get_compression_type ( pp , pi ) != PNG_COMPRESSION_TYPE_BASE )"		8654697	4					
ANR	8654791	Condition	"png_get_compression_type ( pp , pi ) != PNG_COMPRESSION_TYPE_BASE"	5192:7:160670:160730	8654697	0	True				
ANR	8654792	EqualityExpression	"png_get_compression_type ( pp , pi ) != PNG_COMPRESSION_TYPE_BASE"		8654697	0		!=			
ANR	8654793	CallExpression	"png_get_compression_type ( pp , pi )"		8654697	0					
ANR	8654794	Callee	png_get_compression_type		8654697	0					
ANR	8654795	Identifier	png_get_compression_type		8654697	0					
ANR	8654796	ArgumentList	pp		8654697	1					
ANR	8654797	Argument	pp		8654697	0					
ANR	8654798	Identifier	pp		8654697	0					
ANR	8654799	Argument	pi		8654697	1					
ANR	8654800	Identifier	pi		8654697	0					
ANR	8654801	Identifier	PNG_COMPRESSION_TYPE_BASE		8654697	1					
ANR	8654802	ExpressionStatement	"png_error ( pp , ""validate: compression type changed"" )"	5193:6:160739:160790	8654697	1	True				
ANR	8654803	CallExpression	"png_error ( pp , ""validate: compression type changed"" )"		8654697	0					
ANR	8654804	Callee	png_error		8654697	0					
ANR	8654805	Identifier	png_error		8654697	0					
ANR	8654806	ArgumentList	pp		8654697	1					
ANR	8654807	Argument	pp		8654697	0					
ANR	8654808	Identifier	pp		8654697	0					
ANR	8654809	Argument	"""validate: compression type changed"""		8654697	1					
ANR	8654810	PrimaryExpression	"""validate: compression type changed"""		8654697	0					
ANR	8654811	ExpressionStatement	"dp -> w = png_get_image_width ( pp , pi )"	5195:3:160796:160831	8654697	5	True				
ANR	8654812	AssignmentExpression	"dp -> w = png_get_image_width ( pp , pi )"		8654697	0		=			
ANR	8654813	PtrMemberAccess	dp -> w		8654697	0					
ANR	8654814	Identifier	dp		8654697	0					
ANR	8654815	Identifier	w		8654697	1					
ANR	8654816	CallExpression	"png_get_image_width ( pp , pi )"		8654697	1					
ANR	8654817	Callee	png_get_image_width		8654697	0					
ANR	8654818	Identifier	png_get_image_width		8654697	0					
ANR	8654819	ArgumentList	pp		8654697	1					
ANR	8654820	Argument	pp		8654697	0					
ANR	8654821	Identifier	pp		8654697	0					
ANR	8654822	Argument	pi		8654697	1					
ANR	8654823	Identifier	pi		8654697	0					
ANR	8654824	IfStatement	"if ( dp -> w != standard_width ( pp , dp -> id ) )"		8654697	6					
ANR	8654825	Condition	"dp -> w != standard_width ( pp , dp -> id )"	5197:7:160841:160875	8654697	0	True				
ANR	8654826	EqualityExpression	"dp -> w != standard_width ( pp , dp -> id )"		8654697	0		!=			
ANR	8654827	PtrMemberAccess	dp -> w		8654697	0					
ANR	8654828	Identifier	dp		8654697	0					
ANR	8654829	Identifier	w		8654697	1					
ANR	8654830	CallExpression	"standard_width ( pp , dp -> id )"		8654697	1					
ANR	8654831	Callee	standard_width		8654697	0					
ANR	8654832	Identifier	standard_width		8654697	0					
ANR	8654833	ArgumentList	pp		8654697	1					
ANR	8654834	Argument	pp		8654697	0					
ANR	8654835	Identifier	pp		8654697	0					
ANR	8654836	Argument	dp -> id		8654697	1					
ANR	8654837	PtrMemberAccess	dp -> id		8654697	0					
ANR	8654838	Identifier	dp		8654697	0					
ANR	8654839	Identifier	id		8654697	1					
ANR	8654840	ExpressionStatement	"png_error ( pp , ""validate: image width changed"" )"	5198:6:160884:160930	8654697	1	True				
ANR	8654841	CallExpression	"png_error ( pp , ""validate: image width changed"" )"		8654697	0					
ANR	8654842	Callee	png_error		8654697	0					
ANR	8654843	Identifier	png_error		8654697	0					
ANR	8654844	ArgumentList	pp		8654697	1					
ANR	8654845	Argument	pp		8654697	0					
ANR	8654846	Identifier	pp		8654697	0					
ANR	8654847	Argument	"""validate: image width changed"""		8654697	1					
ANR	8654848	PrimaryExpression	"""validate: image width changed"""		8654697	0					
ANR	8654849	ExpressionStatement	"dp -> h = png_get_image_height ( pp , pi )"	5200:3:160936:160972	8654697	7	True				
ANR	8654850	AssignmentExpression	"dp -> h = png_get_image_height ( pp , pi )"		8654697	0		=			
ANR	8654851	PtrMemberAccess	dp -> h		8654697	0					
ANR	8654852	Identifier	dp		8654697	0					
ANR	8654853	Identifier	h		8654697	1					
ANR	8654854	CallExpression	"png_get_image_height ( pp , pi )"		8654697	1					
ANR	8654855	Callee	png_get_image_height		8654697	0					
ANR	8654856	Identifier	png_get_image_height		8654697	0					
ANR	8654857	ArgumentList	pp		8654697	1					
ANR	8654858	Argument	pp		8654697	0					
ANR	8654859	Identifier	pp		8654697	0					
ANR	8654860	Argument	pi		8654697	1					
ANR	8654861	Identifier	pi		8654697	0					
ANR	8654862	IfStatement	"if ( dp -> h != standard_height ( pp , dp -> id ) )"		8654697	8					
ANR	8654863	Condition	"dp -> h != standard_height ( pp , dp -> id )"	5202:7:160982:161017	8654697	0	True				
ANR	8654864	EqualityExpression	"dp -> h != standard_height ( pp , dp -> id )"		8654697	0		!=			
ANR	8654865	PtrMemberAccess	dp -> h		8654697	0					
ANR	8654866	Identifier	dp		8654697	0					
ANR	8654867	Identifier	h		8654697	1					
ANR	8654868	CallExpression	"standard_height ( pp , dp -> id )"		8654697	1					
ANR	8654869	Callee	standard_height		8654697	0					
ANR	8654870	Identifier	standard_height		8654697	0					
ANR	8654871	ArgumentList	pp		8654697	1					
ANR	8654872	Argument	pp		8654697	0					
ANR	8654873	Identifier	pp		8654697	0					
ANR	8654874	Argument	dp -> id		8654697	1					
ANR	8654875	PtrMemberAccess	dp -> id		8654697	0					
ANR	8654876	Identifier	dp		8654697	0					
ANR	8654877	Identifier	id		8654697	1					
ANR	8654878	ExpressionStatement	"png_error ( pp , ""validate: image height changed"" )"	5203:6:161026:161073	8654697	1	True				
ANR	8654879	CallExpression	"png_error ( pp , ""validate: image height changed"" )"		8654697	0					
ANR	8654880	Callee	png_error		8654697	0					
ANR	8654881	Identifier	png_error		8654697	0					
ANR	8654882	ArgumentList	pp		8654697	1					
ANR	8654883	Argument	pp		8654697	0					
ANR	8654884	Identifier	pp		8654697	0					
ANR	8654885	Argument	"""validate: image height changed"""		8654697	1					
ANR	8654886	PrimaryExpression	"""validate: image height changed"""		8654697	0					
ANR	8654887	CompoundStatement		31:6:980:1001	8654697	9					
ANR	8654888	IdentifierDeclStatement	png_color_8p sBIT = 0 ;	5209:6:161199:161220	8654697	0	True				
ANR	8654889	IdentifierDecl	sBIT = 0		8654697	0					
ANR	8654890	IdentifierDeclType	png_color_8p		8654697	0					
ANR	8654891	Identifier	sBIT		8654697	1					
ANR	8654892	AssignmentExpression	sBIT = 0		8654697	2		=			
ANR	8654893	Identifier	sBIT		8654697	0					
ANR	8654894	PrimaryExpression	0		8654697	1					
ANR	8654895	IfStatement	"if ( png_get_sBIT ( pp , pi , & sBIT ) & PNG_INFO_sBIT )"		8654697	1					
ANR	8654896	Condition	"png_get_sBIT ( pp , pi , & sBIT ) & PNG_INFO_sBIT"	5211:10:161233:161275	8654697	0	True				
ANR	8654897	BitAndExpression	"png_get_sBIT ( pp , pi , & sBIT ) & PNG_INFO_sBIT"		8654697	0		&			
ANR	8654898	CallExpression	"png_get_sBIT ( pp , pi , & sBIT )"		8654697	0					
ANR	8654899	Callee	png_get_sBIT		8654697	0					
ANR	8654900	Identifier	png_get_sBIT		8654697	0					
ANR	8654901	ArgumentList	pp		8654697	1					
ANR	8654902	Argument	pp		8654697	0					
ANR	8654903	Identifier	pp		8654697	0					
ANR	8654904	Argument	pi		8654697	1					
ANR	8654905	Identifier	pi		8654697	0					
ANR	8654906	Argument	& sBIT		8654697	2					
ANR	8654907	UnaryOperationExpression	& sBIT		8654697	0					
ANR	8654908	UnaryOperator	&		8654697	0					
ANR	8654909	Identifier	sBIT		8654697	1					
ANR	8654910	Identifier	PNG_INFO_sBIT		8654697	1					
ANR	8654911	CompoundStatement		35:9:1076:1096	8654697	1					
ANR	8654912	IdentifierDeclStatement	int sBIT_invalid = 0 ;	5213:9:161295:161315	8654697	0	True				
ANR	8654913	IdentifierDecl	sBIT_invalid = 0		8654697	0					
ANR	8654914	IdentifierDeclType	int		8654697	0					
ANR	8654915	Identifier	sBIT_invalid		8654697	1					
ANR	8654916	AssignmentExpression	sBIT_invalid = 0		8654697	2		=			
ANR	8654917	Identifier	sBIT_invalid		8654697	0					
ANR	8654918	PrimaryExpression	0		8654697	1					
ANR	8654919	IfStatement	if ( sBIT == 0 )		8654697	1					
ANR	8654920	Condition	sBIT == 0	5215:13:161331:161339	8654697	0	True				
ANR	8654921	EqualityExpression	sBIT == 0		8654697	0		==			
ANR	8654922	Identifier	sBIT		8654697	0					
ANR	8654923	PrimaryExpression	0		8654697	1					
ANR	8654924	ExpressionStatement	"png_error ( pp , ""validate: unexpected png_get_sBIT result"" )"	5216:12:161354:161411	8654697	1	True				
ANR	8654925	CallExpression	"png_error ( pp , ""validate: unexpected png_get_sBIT result"" )"		8654697	0					
ANR	8654926	Callee	png_error		8654697	0					
ANR	8654927	Identifier	png_error		8654697	0					
ANR	8654928	ArgumentList	pp		8654697	1					
ANR	8654929	Argument	pp		8654697	0					
ANR	8654930	Identifier	pp		8654697	0					
ANR	8654931	Argument	"""validate: unexpected png_get_sBIT result"""		8654697	1					
ANR	8654932	PrimaryExpression	"""validate: unexpected png_get_sBIT result"""		8654697	0					
ANR	8654933	IfStatement	if ( dp -> colour_type & PNG_COLOR_MASK_COLOR )		8654697	2					
ANR	8654934	Condition	dp -> colour_type & PNG_COLOR_MASK_COLOR	5218:13:161427:161464	8654697	0	True				
ANR	8654935	BitAndExpression	dp -> colour_type & PNG_COLOR_MASK_COLOR		8654697	0		&			
ANR	8654936	PtrMemberAccess	dp -> colour_type		8654697	0					
ANR	8654937	Identifier	dp		8654697	0					
ANR	8654938	Identifier	colour_type		8654697	1					
ANR	8654939	Identifier	PNG_COLOR_MASK_COLOR		8654697	1					
ANR	8654940	CompoundStatement		41:9:1257:1257	8654697	1					
ANR	8654941	IfStatement	if ( sBIT -> red == 0 || sBIT -> red > dp -> bit_depth )		8654697	0					
ANR	8654942	Condition	sBIT -> red == 0 || sBIT -> red > dp -> bit_depth	5220:16:161494:161536	8654697	0	True				
ANR	8654943	OrExpression	sBIT -> red == 0 || sBIT -> red > dp -> bit_depth		8654697	0		||			
ANR	8654944	EqualityExpression	sBIT -> red == 0		8654697	0		==			
ANR	8654945	PtrMemberAccess	sBIT -> red		8654697	0					
ANR	8654946	Identifier	sBIT		8654697	0					
ANR	8654947	Identifier	red		8654697	1					
ANR	8654948	PrimaryExpression	0		8654697	1					
ANR	8654949	RelationalExpression	sBIT -> red > dp -> bit_depth		8654697	1		>			
ANR	8654950	PtrMemberAccess	sBIT -> red		8654697	0					
ANR	8654951	Identifier	sBIT		8654697	0					
ANR	8654952	Identifier	red		8654697	1					
ANR	8654953	PtrMemberAccess	dp -> bit_depth		8654697	1					
ANR	8654954	Identifier	dp		8654697	0					
ANR	8654955	Identifier	bit_depth		8654697	1					
ANR	8654956	ExpressionStatement	sBIT_invalid = 1	5221:15:161554:161570	8654697	1	True				
ANR	8654957	AssignmentExpression	sBIT_invalid = 1		8654697	0		=			
ANR	8654958	Identifier	sBIT_invalid		8654697	0					
ANR	8654959	PrimaryExpression	1		8654697	1					
ANR	8654960	ElseStatement	else		8654697	0					
ANR	8654961	ExpressionStatement	dp -> red_sBIT = sBIT -> red	5223:15:161604:161628	8654697	0	True				
ANR	8654962	AssignmentExpression	dp -> red_sBIT = sBIT -> red		8654697	0		=			
ANR	8654963	PtrMemberAccess	dp -> red_sBIT		8654697	0					
ANR	8654964	Identifier	dp		8654697	0					
ANR	8654965	Identifier	red_sBIT		8654697	1					
ANR	8654966	PtrMemberAccess	sBIT -> red		8654697	1					
ANR	8654967	Identifier	sBIT		8654697	0					
ANR	8654968	Identifier	red		8654697	1					
ANR	8654969	IfStatement	if ( sBIT -> green == 0 || sBIT -> green > dp -> bit_depth )		8654697	1					
ANR	8654970	Condition	sBIT -> green == 0 || sBIT -> green > dp -> bit_depth	5225:16:161647:161693	8654697	0	True				
ANR	8654971	OrExpression	sBIT -> green == 0 || sBIT -> green > dp -> bit_depth		8654697	0		||			
ANR	8654972	EqualityExpression	sBIT -> green == 0		8654697	0		==			
ANR	8654973	PtrMemberAccess	sBIT -> green		8654697	0					
ANR	8654974	Identifier	sBIT		8654697	0					
ANR	8654975	Identifier	green		8654697	1					
ANR	8654976	PrimaryExpression	0		8654697	1					
ANR	8654977	RelationalExpression	sBIT -> green > dp -> bit_depth		8654697	1		>			
ANR	8654978	PtrMemberAccess	sBIT -> green		8654697	0					
ANR	8654979	Identifier	sBIT		8654697	0					
ANR	8654980	Identifier	green		8654697	1					
ANR	8654981	PtrMemberAccess	dp -> bit_depth		8654697	1					
ANR	8654982	Identifier	dp		8654697	0					
ANR	8654983	Identifier	bit_depth		8654697	1					
ANR	8654984	ExpressionStatement	sBIT_invalid = 1	5226:15:161711:161727	8654697	1	True				
ANR	8654985	AssignmentExpression	sBIT_invalid = 1		8654697	0		=			
ANR	8654986	Identifier	sBIT_invalid		8654697	0					
ANR	8654987	PrimaryExpression	1		8654697	1					
ANR	8654988	ElseStatement	else		8654697	0					
ANR	8654989	ExpressionStatement	dp -> green_sBIT = sBIT -> green	5228:15:161761:161789	8654697	0	True				
ANR	8654990	AssignmentExpression	dp -> green_sBIT = sBIT -> green		8654697	0		=			
ANR	8654991	PtrMemberAccess	dp -> green_sBIT		8654697	0					
ANR	8654992	Identifier	dp		8654697	0					
ANR	8654993	Identifier	green_sBIT		8654697	1					
ANR	8654994	PtrMemberAccess	sBIT -> green		8654697	1					
ANR	8654995	Identifier	sBIT		8654697	0					
ANR	8654996	Identifier	green		8654697	1					
ANR	8654997	IfStatement	if ( sBIT -> blue == 0 || sBIT -> blue > dp -> bit_depth )		8654697	2					
ANR	8654998	Condition	sBIT -> blue == 0 || sBIT -> blue > dp -> bit_depth	5230:16:161808:161852	8654697	0	True				
ANR	8654999	OrExpression	sBIT -> blue == 0 || sBIT -> blue > dp -> bit_depth		8654697	0		||			
ANR	8655000	EqualityExpression	sBIT -> blue == 0		8654697	0		==			
ANR	8655001	PtrMemberAccess	sBIT -> blue		8654697	0					
ANR	8655002	Identifier	sBIT		8654697	0					
ANR	8655003	Identifier	blue		8654697	1					
ANR	8655004	PrimaryExpression	0		8654697	1					
ANR	8655005	RelationalExpression	sBIT -> blue > dp -> bit_depth		8654697	1		>			
ANR	8655006	PtrMemberAccess	sBIT -> blue		8654697	0					
ANR	8655007	Identifier	sBIT		8654697	0					
ANR	8655008	Identifier	blue		8654697	1					
ANR	8655009	PtrMemberAccess	dp -> bit_depth		8654697	1					
ANR	8655010	Identifier	dp		8654697	0					
ANR	8655011	Identifier	bit_depth		8654697	1					
ANR	8655012	ExpressionStatement	sBIT_invalid = 1	5231:15:161870:161886	8654697	1	True				
ANR	8655013	AssignmentExpression	sBIT_invalid = 1		8654697	0		=			
ANR	8655014	Identifier	sBIT_invalid		8654697	0					
ANR	8655015	PrimaryExpression	1		8654697	1					
ANR	8655016	ElseStatement	else		8654697	0					
ANR	8655017	ExpressionStatement	dp -> blue_sBIT = sBIT -> blue	5233:15:161920:161946	8654697	0	True				
ANR	8655018	AssignmentExpression	dp -> blue_sBIT = sBIT -> blue		8654697	0		=			
ANR	8655019	PtrMemberAccess	dp -> blue_sBIT		8654697	0					
ANR	8655020	Identifier	dp		8654697	0					
ANR	8655021	Identifier	blue_sBIT		8654697	1					
ANR	8655022	PtrMemberAccess	sBIT -> blue		8654697	1					
ANR	8655023	Identifier	sBIT		8654697	0					
ANR	8655024	Identifier	blue		8654697	1					
ANR	8655025	ElseStatement	else		8654697	0					
ANR	8655026	CompoundStatement		59:9:1777:1777	8654697	0					
ANR	8655027	IfStatement	if ( sBIT -> gray == 0 || sBIT -> gray > dp -> bit_depth )		8654697	0					
ANR	8655028	Condition	sBIT -> gray == 0 || sBIT -> gray > dp -> bit_depth	5238:16:162014:162058	8654697	0	True				
ANR	8655029	OrExpression	sBIT -> gray == 0 || sBIT -> gray > dp -> bit_depth		8654697	0		||			
ANR	8655030	EqualityExpression	sBIT -> gray == 0		8654697	0		==			
ANR	8655031	PtrMemberAccess	sBIT -> gray		8654697	0					
ANR	8655032	Identifier	sBIT		8654697	0					
ANR	8655033	Identifier	gray		8654697	1					
ANR	8655034	PrimaryExpression	0		8654697	1					
ANR	8655035	RelationalExpression	sBIT -> gray > dp -> bit_depth		8654697	1		>			
ANR	8655036	PtrMemberAccess	sBIT -> gray		8654697	0					
ANR	8655037	Identifier	sBIT		8654697	0					
ANR	8655038	Identifier	gray		8654697	1					
ANR	8655039	PtrMemberAccess	dp -> bit_depth		8654697	1					
ANR	8655040	Identifier	dp		8654697	0					
ANR	8655041	Identifier	bit_depth		8654697	1					
ANR	8655042	ExpressionStatement	sBIT_invalid = 1	5239:15:162076:162092	8654697	1	True				
ANR	8655043	AssignmentExpression	sBIT_invalid = 1		8654697	0		=			
ANR	8655044	Identifier	sBIT_invalid		8654697	0					
ANR	8655045	PrimaryExpression	1		8654697	1					
ANR	8655046	ElseStatement	else		8654697	0					
ANR	8655047	ExpressionStatement	dp -> blue_sBIT = dp -> green_sBIT = dp -> red_sBIT = sBIT -> gray	5241:15:162126:162184	8654697	0	True				
ANR	8655048	AssignmentExpression	dp -> blue_sBIT = dp -> green_sBIT = dp -> red_sBIT = sBIT -> gray		8654697	0		=			
ANR	8655049	PtrMemberAccess	dp -> blue_sBIT		8654697	0					
ANR	8655050	Identifier	dp		8654697	0					
ANR	8655051	Identifier	blue_sBIT		8654697	1					
ANR	8655052	AssignmentExpression	dp -> green_sBIT = dp -> red_sBIT = sBIT -> gray		8654697	1		=			
ANR	8655053	PtrMemberAccess	dp -> green_sBIT		8654697	0					
ANR	8655054	Identifier	dp		8654697	0					
ANR	8655055	Identifier	green_sBIT		8654697	1					
ANR	8655056	AssignmentExpression	dp -> red_sBIT = sBIT -> gray		8654697	1		=			
ANR	8655057	PtrMemberAccess	dp -> red_sBIT		8654697	0					
ANR	8655058	Identifier	dp		8654697	0					
ANR	8655059	Identifier	red_sBIT		8654697	1					
ANR	8655060	PtrMemberAccess	sBIT -> gray		8654697	1					
ANR	8655061	Identifier	sBIT		8654697	0					
ANR	8655062	Identifier	gray		8654697	1					
ANR	8655063	IfStatement	if ( dp -> colour_type & PNG_COLOR_MASK_ALPHA )		8654697	3					
ANR	8655064	Condition	dp -> colour_type & PNG_COLOR_MASK_ALPHA	5247:13:162319:162356	8654697	0	True				
ANR	8655065	BitAndExpression	dp -> colour_type & PNG_COLOR_MASK_ALPHA		8654697	0		&			
ANR	8655066	PtrMemberAccess	dp -> colour_type		8654697	0					
ANR	8655067	Identifier	dp		8654697	0					
ANR	8655068	Identifier	colour_type		8654697	1					
ANR	8655069	Identifier	PNG_COLOR_MASK_ALPHA		8654697	1					
ANR	8655070	CompoundStatement		70:9:2149:2149	8654697	1					
ANR	8655071	IfStatement	if ( sBIT -> alpha == 0 || sBIT -> alpha > dp -> bit_depth )		8654697	0					
ANR	8655072	Condition	sBIT -> alpha == 0 || sBIT -> alpha > dp -> bit_depth	5249:16:162386:162432	8654697	0	True				
ANR	8655073	OrExpression	sBIT -> alpha == 0 || sBIT -> alpha > dp -> bit_depth		8654697	0		||			
ANR	8655074	EqualityExpression	sBIT -> alpha == 0		8654697	0		==			
ANR	8655075	PtrMemberAccess	sBIT -> alpha		8654697	0					
ANR	8655076	Identifier	sBIT		8654697	0					
ANR	8655077	Identifier	alpha		8654697	1					
ANR	8655078	PrimaryExpression	0		8654697	1					
ANR	8655079	RelationalExpression	sBIT -> alpha > dp -> bit_depth		8654697	1		>			
ANR	8655080	PtrMemberAccess	sBIT -> alpha		8654697	0					
ANR	8655081	Identifier	sBIT		8654697	0					
ANR	8655082	Identifier	alpha		8654697	1					
ANR	8655083	PtrMemberAccess	dp -> bit_depth		8654697	1					
ANR	8655084	Identifier	dp		8654697	0					
ANR	8655085	Identifier	bit_depth		8654697	1					
ANR	8655086	ExpressionStatement	sBIT_invalid = 1	5250:15:162450:162466	8654697	1	True				
ANR	8655087	AssignmentExpression	sBIT_invalid = 1		8654697	0		=			
ANR	8655088	Identifier	sBIT_invalid		8654697	0					
ANR	8655089	PrimaryExpression	1		8654697	1					
ANR	8655090	ElseStatement	else		8654697	0					
ANR	8655091	ExpressionStatement	dp -> alpha_sBIT = sBIT -> alpha	5252:15:162500:162528	8654697	0	True				
ANR	8655092	AssignmentExpression	dp -> alpha_sBIT = sBIT -> alpha		8654697	0		=			
ANR	8655093	PtrMemberAccess	dp -> alpha_sBIT		8654697	0					
ANR	8655094	Identifier	dp		8654697	0					
ANR	8655095	Identifier	alpha_sBIT		8654697	1					
ANR	8655096	PtrMemberAccess	sBIT -> alpha		8654697	1					
ANR	8655097	Identifier	sBIT		8654697	0					
ANR	8655098	Identifier	alpha		8654697	1					
ANR	8655099	IfStatement	if ( sBIT_invalid )		8654697	4					
ANR	8655100	Condition	sBIT_invalid	5255:13:162555:162566	8654697	0	True				
ANR	8655101	Identifier	sBIT_invalid		8654697	0					
ANR	8655102	ExpressionStatement	"png_error ( pp , ""validate: sBIT value out of range"" )"	5256:12:162581:162631	8654697	1	True				
ANR	8655103	CallExpression	"png_error ( pp , ""validate: sBIT value out of range"" )"		8654697	0					
ANR	8655104	Callee	png_error		8654697	0					
ANR	8655105	Identifier	png_error		8654697	0					
ANR	8655106	ArgumentList	pp		8654697	1					
ANR	8655107	Argument	pp		8654697	0					
ANR	8655108	Identifier	pp		8654697	0					
ANR	8655109	Argument	"""validate: sBIT value out of range"""		8654697	1					
ANR	8655110	PrimaryExpression	"""validate: sBIT value out of range"""		8654697	0					
ANR	8655111	IfStatement	"if ( png_get_rowbytes ( pp , pi ) != standard_rowsize ( pp , dp -> id ) )"		8654697	10					
ANR	8655112	Condition	"png_get_rowbytes ( pp , pi ) != standard_rowsize ( pp , dp -> id )"	5265:7:162929:162984	8654697	0	True				
ANR	8655113	EqualityExpression	"png_get_rowbytes ( pp , pi ) != standard_rowsize ( pp , dp -> id )"		8654697	0		!=			
ANR	8655114	CallExpression	"png_get_rowbytes ( pp , pi )"		8654697	0					
ANR	8655115	Callee	png_get_rowbytes		8654697	0					
ANR	8655116	Identifier	png_get_rowbytes		8654697	0					
ANR	8655117	ArgumentList	pp		8654697	1					
ANR	8655118	Argument	pp		8654697	0					
ANR	8655119	Identifier	pp		8654697	0					
ANR	8655120	Argument	pi		8654697	1					
ANR	8655121	Identifier	pi		8654697	0					
ANR	8655122	CallExpression	"standard_rowsize ( pp , dp -> id )"		8654697	1					
ANR	8655123	Callee	standard_rowsize		8654697	0					
ANR	8655124	Identifier	standard_rowsize		8654697	0					
ANR	8655125	ArgumentList	pp		8654697	1					
ANR	8655126	Argument	pp		8654697	0					
ANR	8655127	Identifier	pp		8654697	0					
ANR	8655128	Argument	dp -> id		8654697	1					
ANR	8655129	PtrMemberAccess	dp -> id		8654697	0					
ANR	8655130	Identifier	dp		8654697	0					
ANR	8655131	Identifier	id		8654697	1					
ANR	8655132	ExpressionStatement	"png_error ( pp , ""validate: row size changed"" )"	5266:6:162993:163036	8654697	1	True				
ANR	8655133	CallExpression	"png_error ( pp , ""validate: row size changed"" )"		8654697	0					
ANR	8655134	Callee	png_error		8654697	0					
ANR	8655135	Identifier	png_error		8654697	0					
ANR	8655136	ArgumentList	pp		8654697	1					
ANR	8655137	Argument	pp		8654697	0					
ANR	8655138	Identifier	pp		8654697	0					
ANR	8655139	Argument	"""validate: row size changed"""		8654697	1					
ANR	8655140	PrimaryExpression	"""validate: row size changed"""		8654697	0					
ANR	8655141	ExpressionStatement	"standard_palette_validate ( dp , pp , pi )"	5271:3:163140:163177	8654697	11	True				
ANR	8655142	CallExpression	"standard_palette_validate ( dp , pp , pi )"		8654697	0					
ANR	8655143	Callee	standard_palette_validate		8654697	0					
ANR	8655144	Identifier	standard_palette_validate		8654697	0					
ANR	8655145	ArgumentList	dp		8654697	1					
ANR	8655146	Argument	dp		8654697	0					
ANR	8655147	Identifier	dp		8654697	0					
ANR	8655148	Argument	pp		8654697	1					
ANR	8655149	Identifier	pp		8654697	0					
ANR	8655150	Argument	pi		8654697	2					
ANR	8655151	Identifier	pi		8654697	0					
ANR	8655152	CompoundStatement		100:6:3159:3188	8654697	12					
ANR	8655153	IdentifierDeclStatement	png_color_16p trans_color = 0 ;	5278:6:163378:163407	8654697	0	True				
ANR	8655154	IdentifierDecl	trans_color = 0		8654697	0					
ANR	8655155	IdentifierDeclType	png_color_16p		8654697	0					
ANR	8655156	Identifier	trans_color		8654697	1					
ANR	8655157	AssignmentExpression	trans_color = 0		8654697	2		=			
ANR	8655158	Identifier	trans_color		8654697	0					
ANR	8655159	PrimaryExpression	0		8654697	1					
ANR	8655160	IfStatement	"if ( png_get_tRNS ( pp , pi , 0 , 0 , & trans_color ) & PNG_INFO_tRNS )"		8654697	1					
ANR	8655161	Condition	"png_get_tRNS ( pp , pi , 0 , 0 , & trans_color ) & PNG_INFO_tRNS"	5280:10:163420:163475	8654697	0	True				
ANR	8655162	BitAndExpression	"png_get_tRNS ( pp , pi , 0 , 0 , & trans_color ) & PNG_INFO_tRNS"		8654697	0		&			
ANR	8655163	CallExpression	"png_get_tRNS ( pp , pi , 0 , 0 , & trans_color )"		8654697	0					
ANR	8655164	Callee	png_get_tRNS		8654697	0					
ANR	8655165	Identifier	png_get_tRNS		8654697	0					
ANR	8655166	ArgumentList	pp		8654697	1					
ANR	8655167	Argument	pp		8654697	0					
ANR	8655168	Identifier	pp		8654697	0					
ANR	8655169	Argument	pi		8654697	1					
ANR	8655170	Identifier	pi		8654697	0					
ANR	8655171	Argument	0		8654697	2					
ANR	8655172	PrimaryExpression	0		8654697	0					
ANR	8655173	Argument	0		8654697	3					
ANR	8655174	PrimaryExpression	0		8654697	0					
ANR	8655175	Argument	& trans_color		8654697	4					
ANR	8655176	UnaryOperationExpression	& trans_color		8654697	0					
ANR	8655177	UnaryOperator	&		8654697	0					
ANR	8655178	Identifier	trans_color		8654697	1					
ANR	8655179	Identifier	PNG_INFO_tRNS		8654697	1					
ANR	8655180	CompoundStatement		103:6:3265:3265	8654697	1					
ANR	8655181	IfStatement	if ( trans_color == 0 )		8654697	0					
ANR	8655182	Condition	trans_color == 0	5282:13:163499:163514	8654697	0	True				
ANR	8655183	EqualityExpression	trans_color == 0		8654697	0		==			
ANR	8655184	Identifier	trans_color		8654697	0					
ANR	8655185	PrimaryExpression	0		8654697	1					
ANR	8655186	ExpressionStatement	"png_error ( pp , ""validate: unexpected png_get_tRNS (color) result"" )"	5283:12:163529:163594	8654697	1	True				
ANR	8655187	CallExpression	"png_error ( pp , ""validate: unexpected png_get_tRNS (color) result"" )"		8654697	0					
ANR	8655188	Callee	png_error		8654697	0					
ANR	8655189	Identifier	png_error		8654697	0					
ANR	8655190	ArgumentList	pp		8654697	1					
ANR	8655191	Argument	pp		8654697	0					
ANR	8655192	Identifier	pp		8654697	0					
ANR	8655193	Argument	"""validate: unexpected png_get_tRNS (color) result"""		8654697	1					
ANR	8655194	PrimaryExpression	"""validate: unexpected png_get_tRNS (color) result"""		8654697	0					
ANR	8655195	SwitchStatement	switch ( dp -> colour_type )		8654697	1					
ANR	8655196	Condition	dp -> colour_type	5285:17:163614:163628	8654697	0	True				
ANR	8655197	PtrMemberAccess	dp -> colour_type		8654697	0					
ANR	8655198	Identifier	dp		8654697	0					
ANR	8655199	Identifier	colour_type		8654697	1					
ANR	8655200	CompoundStatement		108:9:3421:3421	8654697	1					
ANR	8655201	Label	case 0 :	5287:9:163651:163657	8654697	0	True				
ANR	8655202	ExpressionStatement	dp -> transparent . red = dp -> transparent . green = dp -> transparent . blue = trans_color -> gray	5288:12:163671:163772	8654697	1	True				
ANR	8655203	AssignmentExpression	dp -> transparent . red = dp -> transparent . green = dp -> transparent . blue = trans_color -> gray		8654697	0		=			
ANR	8655204	MemberAccess	dp -> transparent . red		8654697	0					
ANR	8655205	PtrMemberAccess	dp -> transparent		8654697	0					
ANR	8655206	Identifier	dp		8654697	0					
ANR	8655207	Identifier	transparent		8654697	1					
ANR	8655208	Identifier	red		8654697	1					
ANR	8655209	AssignmentExpression	dp -> transparent . green = dp -> transparent . blue = trans_color -> gray		8654697	1		=			
ANR	8655210	MemberAccess	dp -> transparent . green		8654697	0					
ANR	8655211	PtrMemberAccess	dp -> transparent		8654697	0					
ANR	8655212	Identifier	dp		8654697	0					
ANR	8655213	Identifier	transparent		8654697	1					
ANR	8655214	Identifier	green		8654697	1					
ANR	8655215	AssignmentExpression	dp -> transparent . blue = trans_color -> gray		8654697	1		=			
ANR	8655216	MemberAccess	dp -> transparent . blue		8654697	0					
ANR	8655217	PtrMemberAccess	dp -> transparent		8654697	0					
ANR	8655218	Identifier	dp		8654697	0					
ANR	8655219	Identifier	transparent		8654697	1					
ANR	8655220	Identifier	blue		8654697	1					
ANR	8655221	PtrMemberAccess	trans_color -> gray		8654697	1					
ANR	8655222	Identifier	trans_color		8654697	0					
ANR	8655223	Identifier	gray		8654697	1					
ANR	8655224	ExpressionStatement	dp -> has_tRNS = 1	5290:12:163786:163802	8654697	2	True				
ANR	8655225	AssignmentExpression	dp -> has_tRNS = 1		8654697	0		=			
ANR	8655226	PtrMemberAccess	dp -> has_tRNS		8654697	0					
ANR	8655227	Identifier	dp		8654697	0					
ANR	8655228	Identifier	has_tRNS		8654697	1					
ANR	8655229	PrimaryExpression	1		8654697	1					
ANR	8655230	BreakStatement	break ;	5291:12:163816:163821	8654697	3	True				
ANR	8655231	Label	case 2 :	5293:9:163833:163839	8654697	4	True				
ANR	8655232	ExpressionStatement	dp -> transparent . red = trans_color -> red	5294:12:163853:163891	8654697	5	True				
ANR	8655233	AssignmentExpression	dp -> transparent . red = trans_color -> red		8654697	0		=			
ANR	8655234	MemberAccess	dp -> transparent . red		8654697	0					
ANR	8655235	PtrMemberAccess	dp -> transparent		8654697	0					
ANR	8655236	Identifier	dp		8654697	0					
ANR	8655237	Identifier	transparent		8654697	1					
ANR	8655238	Identifier	red		8654697	1					
ANR	8655239	PtrMemberAccess	trans_color -> red		8654697	1					
ANR	8655240	Identifier	trans_color		8654697	0					
ANR	8655241	Identifier	red		8654697	1					
ANR	8655242	ExpressionStatement	dp -> transparent . green = trans_color -> green	5295:12:163905:163947	8654697	6	True				
ANR	8655243	AssignmentExpression	dp -> transparent . green = trans_color -> green		8654697	0		=			
ANR	8655244	MemberAccess	dp -> transparent . green		8654697	0					
ANR	8655245	PtrMemberAccess	dp -> transparent		8654697	0					
ANR	8655246	Identifier	dp		8654697	0					
ANR	8655247	Identifier	transparent		8654697	1					
ANR	8655248	Identifier	green		8654697	1					
ANR	8655249	PtrMemberAccess	trans_color -> green		8654697	1					
ANR	8655250	Identifier	trans_color		8654697	0					
ANR	8655251	Identifier	green		8654697	1					
ANR	8655252	ExpressionStatement	dp -> transparent . blue = trans_color -> blue	5296:12:163961:164001	8654697	7	True				
ANR	8655253	AssignmentExpression	dp -> transparent . blue = trans_color -> blue		8654697	0		=			
ANR	8655254	MemberAccess	dp -> transparent . blue		8654697	0					
ANR	8655255	PtrMemberAccess	dp -> transparent		8654697	0					
ANR	8655256	Identifier	dp		8654697	0					
ANR	8655257	Identifier	transparent		8654697	1					
ANR	8655258	Identifier	blue		8654697	1					
ANR	8655259	PtrMemberAccess	trans_color -> blue		8654697	1					
ANR	8655260	Identifier	trans_color		8654697	0					
ANR	8655261	Identifier	blue		8654697	1					
ANR	8655262	ExpressionStatement	dp -> has_tRNS = 1	5297:12:164015:164031	8654697	8	True				
ANR	8655263	AssignmentExpression	dp -> has_tRNS = 1		8654697	0		=			
ANR	8655264	PtrMemberAccess	dp -> has_tRNS		8654697	0					
ANR	8655265	Identifier	dp		8654697	0					
ANR	8655266	Identifier	has_tRNS		8654697	1					
ANR	8655267	PrimaryExpression	1		8654697	1					
ANR	8655268	BreakStatement	break ;	5298:12:164045:164050	8654697	9	True				
ANR	8655269	Label	case 3 :	5300:9:164062:164068	8654697	10	True				
ANR	8655270	ExpressionStatement	"png_error ( pp , ""validate: unexpected png_get_tRNS result"" )"	5304:12:164191:164248	8654697	11	True				
ANR	8655271	CallExpression	"png_error ( pp , ""validate: unexpected png_get_tRNS result"" )"		8654697	0					
ANR	8655272	Callee	png_error		8654697	0					
ANR	8655273	Identifier	png_error		8654697	0					
ANR	8655274	ArgumentList	pp		8654697	1					
ANR	8655275	Argument	pp		8654697	0					
ANR	8655276	Identifier	pp		8654697	0					
ANR	8655277	Argument	"""validate: unexpected png_get_tRNS result"""		8654697	1					
ANR	8655278	PrimaryExpression	"""validate: unexpected png_get_tRNS result"""		8654697	0					
ANR	8655279	BreakStatement	break ;	5305:12:164262:164267	8654697	12	True				
ANR	8655280	Label	default :	5307:9:164279:164286	8654697	13	True				
ANR	8655281	Identifier	default		8654697	0					
ANR	8655282	ExpressionStatement	"png_error ( pp , ""validate: invalid tRNS chunk with alpha image"" )"	5308:12:164300:164362	8654697	14	True				
ANR	8655283	CallExpression	"png_error ( pp , ""validate: invalid tRNS chunk with alpha image"" )"		8654697	0					
ANR	8655284	Callee	png_error		8654697	0					
ANR	8655285	Identifier	png_error		8654697	0					
ANR	8655286	ArgumentList	pp		8654697	1					
ANR	8655287	Argument	pp		8654697	0					
ANR	8655288	Identifier	pp		8654697	0					
ANR	8655289	Argument	"""validate: invalid tRNS chunk with alpha image"""		8654697	1					
ANR	8655290	PrimaryExpression	"""validate: invalid tRNS chunk with alpha image"""		8654697	0					
ANR	8655291	ExpressionStatement	"dp -> npasses = npasses_from_interlace_type ( pp , dp -> interlace_type )"	5317:3:164612:164677	8654697	13	True				
ANR	8655292	AssignmentExpression	"dp -> npasses = npasses_from_interlace_type ( pp , dp -> interlace_type )"		8654697	0		=			
ANR	8655293	PtrMemberAccess	dp -> npasses		8654697	0					
ANR	8655294	Identifier	dp		8654697	0					
ANR	8655295	Identifier	npasses		8654697	1					
ANR	8655296	CallExpression	"npasses_from_interlace_type ( pp , dp -> interlace_type )"		8654697	1					
ANR	8655297	Callee	npasses_from_interlace_type		8654697	0					
ANR	8655298	Identifier	npasses_from_interlace_type		8654697	0					
ANR	8655299	ArgumentList	pp		8654697	1					
ANR	8655300	Argument	pp		8654697	0					
ANR	8655301	Identifier	pp		8654697	0					
ANR	8655302	Argument	dp -> interlace_type		8654697	1					
ANR	8655303	PtrMemberAccess	dp -> interlace_type		8654697	0					
ANR	8655304	Identifier	dp		8654697	0					
ANR	8655305	Identifier	interlace_type		8654697	1					
ANR	8655306	IfStatement	if ( ! dp -> do_interlace )		8654697	14					
ANR	8655307	Condition	! dp -> do_interlace	5318:7:164686:164702	8654697	0	True				
ANR	8655308	UnaryOperationExpression	! dp -> do_interlace		8654697	0					
ANR	8655309	UnaryOperator	!		8654697	0					
ANR	8655310	PtrMemberAccess	dp -> do_interlace		8654697	1					
ANR	8655311	Identifier	dp		8654697	0					
ANR	8655312	Identifier	do_interlace		8654697	1					
ANR	8655313	CompoundStatement		141:3:4489:4489	8654697	1					
ANR	8655314	Statement	ifdef	5320:6:164716:164720	8654697	0	True				
ANR	8655315	Statement	PNG_READ_INTERLACING_SUPPORTED	5320:12:164722:164751	8654697	1	True				
ANR	8655316	IfStatement	if ( dp -> npasses != png_set_interlace_handling ( pp ) )		8654697	2					
ANR	8655317	Condition	dp -> npasses != png_set_interlace_handling ( pp )	5321:13:164766:164810	8654697	0	True				
ANR	8655318	EqualityExpression	dp -> npasses != png_set_interlace_handling ( pp )		8654697	0		!=			
ANR	8655319	PtrMemberAccess	dp -> npasses		8654697	0					
ANR	8655320	Identifier	dp		8654697	0					
ANR	8655321	Identifier	npasses		8654697	1					
ANR	8655322	CallExpression	png_set_interlace_handling ( pp )		8654697	1					
ANR	8655323	Callee	png_set_interlace_handling		8654697	0					
ANR	8655324	Identifier	png_set_interlace_handling		8654697	0					
ANR	8655325	ArgumentList	pp		8654697	1					
ANR	8655326	Argument	pp		8654697	0					
ANR	8655327	Identifier	pp		8654697	0					
ANR	8655328	ExpressionStatement	"png_error ( pp , ""validate: file changed interlace type"" )"	5322:12:164825:164879	8654697	1	True				
ANR	8655329	CallExpression	"png_error ( pp , ""validate: file changed interlace type"" )"		8654697	0					
ANR	8655330	Callee	png_error		8654697	0					
ANR	8655331	Identifier	png_error		8654697	0					
ANR	8655332	ArgumentList	pp		8654697	1					
ANR	8655333	Argument	pp		8654697	0					
ANR	8655334	Identifier	pp		8654697	0					
ANR	8655335	Argument	"""validate: file changed interlace type"""		8654697	1					
ANR	8655336	PrimaryExpression	"""validate: file changed interlace type"""		8654697	0					
ANR	8655337	ElseStatement	else		8654697	0					
ANR	8655338	IfStatement	if ( dp -> npasses > 1 )		8654697	0					
ANR	8655339	Condition	dp -> npasses > 1	5327:13:165046:165060	8654697	0	True				
ANR	8655340	RelationalExpression	dp -> npasses > 1		8654697	0		>			
ANR	8655341	PtrMemberAccess	dp -> npasses		8654697	0					
ANR	8655342	Identifier	dp		8654697	0					
ANR	8655343	Identifier	npasses		8654697	1					
ANR	8655344	PrimaryExpression	1		8654697	1					
ANR	8655345	ExpressionStatement	"png_error ( pp , ""validate: no libpng interlace support"" )"	5328:12:165075:165129	8654697	1	True				
ANR	8655346	CallExpression	"png_error ( pp , ""validate: no libpng interlace support"" )"		8654697	0					
ANR	8655347	Callee	png_error		8654697	0					
ANR	8655348	Identifier	png_error		8654697	0					
ANR	8655349	ArgumentList	pp		8654697	1					
ANR	8655350	Argument	pp		8654697	0					
ANR	8655351	Identifier	pp		8654697	0					
ANR	8655352	Argument	"""validate: no libpng interlace support"""		8654697	1					
ANR	8655353	PrimaryExpression	"""validate: no libpng interlace support"""		8654697	0					
ANR	8655354	Statement	endif	5329:6:165137:165141	8654697	3	True				
ANR	8655355	ReturnType	static void		8654697	1					
ANR	8655356	Identifier	standard_info_part1		8654697	2					
ANR	8655357	ParameterList	"standard_display * dp , png_structp pp , png_infop pi"		8654697	3					
ANR	8655358	Parameter	standard_display * dp	5178:20:160166:160185	8654697	0	True				
ANR	8655359	ParameterType	standard_display *		8654697	0					
ANR	8655360	Identifier	dp		8654697	1					
ANR	8655361	Parameter	png_structp pp	5178:42:160188:160201	8654697	1	True				
ANR	8655362	ParameterType	png_structp		8654697	0					
ANR	8655363	Identifier	pp		8654697	1					
ANR	8655364	Parameter	png_infop pi	5178:58:160204:160215	8654697	2	True				
ANR	8655365	ParameterType	png_infop		8654697	0					
ANR	8655366	Identifier	pi		8654697	1					
ANR	8655367	CFGEntryNode	ENTRY		8654697		True				
ANR	8655368	CFGExitNode	EXIT		8654697		True				
ANR	8655369	Symbol	pp		8654697						
ANR	8655370	Symbol	png_get_tRNS		8654697						
ANR	8655371	Symbol	& sBIT		8654697						
ANR	8655372	Symbol	standard_width		8654697						
ANR	8655373	Symbol	png_get_sBIT		8654697						
ANR	8655374	Symbol	dp -> transparent . green		8654697						
ANR	8655375	Symbol	dp		8654697						
ANR	8655376	Symbol	npasses_from_interlace_type		8654697						
ANR	8655377	Symbol	dp -> interlace_type		8654697						
ANR	8655378	Symbol	png_set_interlace_handling		8654697						
ANR	8655379	Symbol	png_get_image_height		8654697						
ANR	8655380	Symbol	dp -> alpha_sBIT		8654697						
ANR	8655381	Symbol	png_get_filter_type		8654697						
ANR	8655382	Symbol	standard_height		8654697						
ANR	8655383	Symbol	png_get_bit_depth		8654697						
ANR	8655384	Symbol	dp -> transparent . blue		8654697						
ANR	8655385	Symbol	dp -> npasses		8654697						
ANR	8655386	Symbol	PNG_COMPRESSION_TYPE_BASE		8654697						
ANR	8655387	Symbol	dp -> h		8654697						
ANR	8655388	Symbol	png_get_compression_type		8654697						
ANR	8655389	Symbol	sBIT		8654697						
ANR	8655390	Symbol	trans_color -> gray		8654697						
ANR	8655391	Symbol	dp -> transparent . red		8654697						
ANR	8655392	Symbol	PNG_COLOR_MASK_ALPHA		8654697						
ANR	8655393	Symbol	dp -> id		8654697						
ANR	8655394	Symbol	trans_color		8654697						
ANR	8655395	Symbol	dp -> w		8654697						
ANR	8655396	Symbol	dp -> has_tRNS		8654697						
ANR	8655397	Symbol	trans_color -> blue		8654697						
ANR	8655398	Symbol	dp -> green_sBIT		8654697						
ANR	8655399	Symbol	sBIT -> green		8654697						
ANR	8655400	Symbol	dp -> do_interlace		8654697						
ANR	8655401	Symbol	PNG_INFO_sBIT		8654697						
ANR	8655402	Symbol	PNG_INFO_tRNS		8654697						
ANR	8655403	Symbol	& trans_color		8654697						
ANR	8655404	Symbol	* dp		8654697						
ANR	8655405	Symbol	PNG_FILTER_TYPE_BASE		8654697						
ANR	8655406	Symbol	trans_color -> red		8654697						
ANR	8655407	Symbol	dp -> transparent		8654697						
ANR	8655408	Symbol	dp -> blue_sBIT		8654697						
ANR	8655409	Symbol	trans_color -> green		8654697						
ANR	8655410	Symbol	sBIT_invalid		8654697						
ANR	8655411	Symbol	standard_rowsize		8654697						
ANR	8655412	Symbol	png_get_interlace_type		8654697						
ANR	8655413	Symbol	dp -> bit_depth		8654697						
ANR	8655414	Symbol	png_get_color_type		8654697						
ANR	8655415	Symbol	dp -> red_sBIT		8654697						
ANR	8655416	Symbol	sBIT -> blue		8654697						
ANR	8655417	Symbol	PNG_COLOR_MASK_COLOR		8654697						
ANR	8655418	Symbol	sBIT -> gray		8654697						
ANR	8655419	Symbol	png_get_rowbytes		8654697						
ANR	8655420	Symbol	dp -> colour_type		8654697						
ANR	8655421	Symbol	png_get_image_width		8654697						
ANR	8655422	Symbol	* sBIT		8654697						
ANR	8655423	Symbol	sBIT -> red		8654697						
ANR	8655424	Symbol	sBIT -> alpha		8654697						
ANR	8655425	Symbol	pi		8654697						
ANR	8655426	Symbol	* trans_color		8654697						
ANR	8655427	Function	standard_info_part2	5341:0:165450:166308							
ANR	8655428	FunctionDef	"standard_info_part2 (standard_display * dp , png_const_structp pp , png_const_infop pi , int nImages)"		8655427	0					
ANR	8655429	CompoundStatement		5344:0:165563:166308	8655427	0					
ANR	8655430	CompoundStatement		5:6:108:147	8655427	0					
ANR	8655431	IdentifierDeclStatement	"png_byte ct = png_get_color_type ( pp , pi ) ;"	5347:6:165624:165664	8655427	0	True				
ANR	8655432	IdentifierDecl	"ct = png_get_color_type ( pp , pi )"		8655427	0					
ANR	8655433	IdentifierDeclType	png_byte		8655427	0					
ANR	8655434	Identifier	ct		8655427	1					
ANR	8655435	AssignmentExpression	"ct = png_get_color_type ( pp , pi )"		8655427	2		=			
ANR	8655436	Identifier	ct		8655427	0					
ANR	8655437	CallExpression	"png_get_color_type ( pp , pi )"		8655427	1					
ANR	8655438	Callee	png_get_color_type		8655427	0					
ANR	8655439	Identifier	png_get_color_type		8655427	0					
ANR	8655440	ArgumentList	pp		8655427	1					
ANR	8655441	Argument	pp		8655427	0					
ANR	8655442	Identifier	pp		8655427	0					
ANR	8655443	Argument	pi		8655427	1					
ANR	8655444	Identifier	pi		8655427	0					
ANR	8655445	IdentifierDeclStatement	"png_byte bd = png_get_bit_depth ( pp , pi ) ;"	5348:6:165672:165711	8655427	1	True				
ANR	8655446	IdentifierDecl	"bd = png_get_bit_depth ( pp , pi )"		8655427	0					
ANR	8655447	IdentifierDeclType	png_byte		8655427	0					
ANR	8655448	Identifier	bd		8655427	1					
ANR	8655449	AssignmentExpression	"bd = png_get_bit_depth ( pp , pi )"		8655427	2		=			
ANR	8655450	Identifier	bd		8655427	0					
ANR	8655451	CallExpression	"png_get_bit_depth ( pp , pi )"		8655427	1					
ANR	8655452	Callee	png_get_bit_depth		8655427	0					
ANR	8655453	Identifier	png_get_bit_depth		8655427	0					
ANR	8655454	ArgumentList	pp		8655427	1					
ANR	8655455	Argument	pp		8655427	0					
ANR	8655456	Identifier	pp		8655427	0					
ANR	8655457	Argument	pi		8655427	1					
ANR	8655458	Identifier	pi		8655427	0					
ANR	8655459	IfStatement	if ( bd >= 8 && ( ct == PNG_COLOR_TYPE_RGB || ct == PNG_COLOR_TYPE_GRAY ) && dp -> filler )		8655427	2					
ANR	8655460	Condition	bd >= 8 && ( ct == PNG_COLOR_TYPE_RGB || ct == PNG_COLOR_TYPE_GRAY ) && dp -> filler	5350:10:165724:165813	8655427	0	True				
ANR	8655461	AndExpression	bd >= 8 && ( ct == PNG_COLOR_TYPE_RGB || ct == PNG_COLOR_TYPE_GRAY ) && dp -> filler		8655427	0		&&			
ANR	8655462	RelationalExpression	bd >= 8		8655427	0		>=			
ANR	8655463	Identifier	bd		8655427	0					
ANR	8655464	PrimaryExpression	8		8655427	1					
ANR	8655465	AndExpression	( ct == PNG_COLOR_TYPE_RGB || ct == PNG_COLOR_TYPE_GRAY ) && dp -> filler		8655427	1		&&			
ANR	8655466	OrExpression	ct == PNG_COLOR_TYPE_RGB || ct == PNG_COLOR_TYPE_GRAY		8655427	0		||			
ANR	8655467	EqualityExpression	ct == PNG_COLOR_TYPE_RGB		8655427	0		==			
ANR	8655468	Identifier	ct		8655427	0					
ANR	8655469	Identifier	PNG_COLOR_TYPE_RGB		8655427	1					
ANR	8655470	EqualityExpression	ct == PNG_COLOR_TYPE_GRAY		8655427	1		==			
ANR	8655471	Identifier	ct		8655427	0					
ANR	8655472	Identifier	PNG_COLOR_TYPE_GRAY		8655427	1					
ANR	8655473	PtrMemberAccess	dp -> filler		8655427	1					
ANR	8655474	Identifier	dp		8655427	0					
ANR	8655475	Identifier	filler		8655427	1					
ANR	8655476	ExpressionStatement	ct |= 4	5352:10:165826:165833	8655427	1	True				
ANR	8655477	AssignmentExpression	ct |= 4		8655427	0		|=			
ANR	8655478	Identifier	ct		8655427	0					
ANR	8655479	PrimaryExpression	4		8655427	1					
ANR	8655480	ExpressionStatement	"dp -> pixel_size = bit_size ( pp , ct , bd )"	5354:6:165885:165922	8655427	3	True				
ANR	8655481	AssignmentExpression	"dp -> pixel_size = bit_size ( pp , ct , bd )"		8655427	0		=			
ANR	8655482	PtrMemberAccess	dp -> pixel_size		8655427	0					
ANR	8655483	Identifier	dp		8655427	0					
ANR	8655484	Identifier	pixel_size		8655427	1					
ANR	8655485	CallExpression	"bit_size ( pp , ct , bd )"		8655427	1					
ANR	8655486	Callee	bit_size		8655427	0					
ANR	8655487	Identifier	bit_size		8655427	0					
ANR	8655488	ArgumentList	pp		8655427	1					
ANR	8655489	Argument	pp		8655427	0					
ANR	8655490	Identifier	pp		8655427	0					
ANR	8655491	Argument	ct		8655427	1					
ANR	8655492	Identifier	ct		8655427	0					
ANR	8655493	Argument	bd		8655427	2					
ANR	8655494	Identifier	bd		8655427	0					
ANR	8655495	ExpressionStatement	"dp -> bit_width = png_get_image_width ( pp , pi ) * dp -> pixel_size"	5356:3:165932:165992	8655427	1	True				
ANR	8655496	AssignmentExpression	"dp -> bit_width = png_get_image_width ( pp , pi ) * dp -> pixel_size"		8655427	0		=			
ANR	8655497	PtrMemberAccess	dp -> bit_width		8655427	0					
ANR	8655498	Identifier	dp		8655427	0					
ANR	8655499	Identifier	bit_width		8655427	1					
ANR	8655500	MultiplicativeExpression	"png_get_image_width ( pp , pi ) * dp -> pixel_size"		8655427	1		*			
ANR	8655501	CallExpression	"png_get_image_width ( pp , pi )"		8655427	0					
ANR	8655502	Callee	png_get_image_width		8655427	0					
ANR	8655503	Identifier	png_get_image_width		8655427	0					
ANR	8655504	ArgumentList	pp		8655427	1					
ANR	8655505	Argument	pp		8655427	0					
ANR	8655506	Identifier	pp		8655427	0					
ANR	8655507	Argument	pi		8655427	1					
ANR	8655508	Identifier	pi		8655427	0					
ANR	8655509	PtrMemberAccess	dp -> pixel_size		8655427	1					
ANR	8655510	Identifier	dp		8655427	0					
ANR	8655511	Identifier	pixel_size		8655427	1					
ANR	8655512	ExpressionStatement	"dp -> cbRow = png_get_rowbytes ( pp , pi )"	5357:3:165997:166033	8655427	2	True				
ANR	8655513	AssignmentExpression	"dp -> cbRow = png_get_rowbytes ( pp , pi )"		8655427	0		=			
ANR	8655514	PtrMemberAccess	dp -> cbRow		8655427	0					
ANR	8655515	Identifier	dp		8655427	0					
ANR	8655516	Identifier	cbRow		8655427	1					
ANR	8655517	CallExpression	"png_get_rowbytes ( pp , pi )"		8655427	1					
ANR	8655518	Callee	png_get_rowbytes		8655427	0					
ANR	8655519	Identifier	png_get_rowbytes		8655427	0					
ANR	8655520	ArgumentList	pp		8655427	1					
ANR	8655521	Argument	pp		8655427	0					
ANR	8655522	Identifier	pp		8655427	0					
ANR	8655523	Argument	pi		8655427	1					
ANR	8655524	Identifier	pi		8655427	0					
ANR	8655525	IfStatement	if ( dp -> cbRow != ( dp -> bit_width + 7 ) / 8 )		8655427	3					
ANR	8655526	Condition	dp -> cbRow != ( dp -> bit_width + 7 ) / 8	5360:7:166086:166117	8655427	0	True				
ANR	8655527	EqualityExpression	dp -> cbRow != ( dp -> bit_width + 7 ) / 8		8655427	0		!=			
ANR	8655528	PtrMemberAccess	dp -> cbRow		8655427	0					
ANR	8655529	Identifier	dp		8655427	0					
ANR	8655530	Identifier	cbRow		8655427	1					
ANR	8655531	MultiplicativeExpression	( dp -> bit_width + 7 ) / 8		8655427	1		/			
ANR	8655532	AdditiveExpression	dp -> bit_width + 7		8655427	0		+			
ANR	8655533	PtrMemberAccess	dp -> bit_width		8655427	0					
ANR	8655534	Identifier	dp		8655427	0					
ANR	8655535	Identifier	bit_width		8655427	1					
ANR	8655536	PrimaryExpression	7		8655427	1					
ANR	8655537	PrimaryExpression	8		8655427	1					
ANR	8655538	ExpressionStatement	"png_error ( pp , ""bad png_get_rowbytes calculation"" )"	5361:6:166126:166175	8655427	1	True				
ANR	8655539	CallExpression	"png_error ( pp , ""bad png_get_rowbytes calculation"" )"		8655427	0					
ANR	8655540	Callee	png_error		8655427	0					
ANR	8655541	Identifier	png_error		8655427	0					
ANR	8655542	ArgumentList	pp		8655427	1					
ANR	8655543	Argument	pp		8655427	0					
ANR	8655544	Identifier	pp		8655427	0					
ANR	8655545	Argument	"""bad png_get_rowbytes calculation"""		8655427	1					
ANR	8655546	PrimaryExpression	"""bad png_get_rowbytes calculation"""		8655427	0					
ANR	8655547	ExpressionStatement	"store_ensure_image ( dp -> ps , pp , nImages , dp -> cbRow , dp -> h )"	5364:3:166249:166306	8655427	4	True				
ANR	8655548	CallExpression	"store_ensure_image ( dp -> ps , pp , nImages , dp -> cbRow , dp -> h )"		8655427	0					
ANR	8655549	Callee	store_ensure_image		8655427	0					
ANR	8655550	Identifier	store_ensure_image		8655427	0					
ANR	8655551	ArgumentList	dp -> ps		8655427	1					
ANR	8655552	Argument	dp -> ps		8655427	0					
ANR	8655553	PtrMemberAccess	dp -> ps		8655427	0					
ANR	8655554	Identifier	dp		8655427	0					
ANR	8655555	Identifier	ps		8655427	1					
ANR	8655556	Argument	pp		8655427	1					
ANR	8655557	Identifier	pp		8655427	0					
ANR	8655558	Argument	nImages		8655427	2					
ANR	8655559	Identifier	nImages		8655427	0					
ANR	8655560	Argument	dp -> cbRow		8655427	3					
ANR	8655561	PtrMemberAccess	dp -> cbRow		8655427	0					
ANR	8655562	Identifier	dp		8655427	0					
ANR	8655563	Identifier	cbRow		8655427	1					
ANR	8655564	Argument	dp -> h		8655427	4					
ANR	8655565	PtrMemberAccess	dp -> h		8655427	0					
ANR	8655566	Identifier	dp		8655427	0					
ANR	8655567	Identifier	h		8655427	1					
ANR	8655568	ReturnType	static void		8655427	1					
ANR	8655569	Identifier	standard_info_part2		8655427	2					
ANR	8655570	ParameterList	"standard_display * dp , png_const_structp pp , png_const_infop pi , int nImages"		8655427	3					
ANR	8655571	Parameter	standard_display * dp	5342:20:165482:165501	8655427	0	True				
ANR	8655572	ParameterType	standard_display *		8655427	0					
ANR	8655573	Identifier	dp		8655427	1					
ANR	8655574	Parameter	png_const_structp pp	5342:42:165504:165523	8655427	1	True				
ANR	8655575	ParameterType	png_const_structp		8655427	0					
ANR	8655576	Identifier	pp		8655427	1					
ANR	8655577	Parameter	png_const_infop pi	5343:4:165530:165547	8655427	2	True				
ANR	8655578	ParameterType	png_const_infop		8655427	0					
ANR	8655579	Identifier	pi		8655427	1					
ANR	8655580	Parameter	int nImages	5343:24:165550:165560	8655427	3	True				
ANR	8655581	ParameterType	int		8655427	0					
ANR	8655582	Identifier	nImages		8655427	1					
ANR	8655583	CFGEntryNode	ENTRY		8655427		True				
ANR	8655584	CFGExitNode	EXIT		8655427		True				
ANR	8655585	Symbol	pp		8655427						
ANR	8655586	Symbol	png_get_color_type		8655427						
ANR	8655587	Symbol	bd		8655427						
ANR	8655588	Symbol	png_get_bit_depth		8655427						
ANR	8655589	Symbol	PNG_COLOR_TYPE_RGB		8655427						
ANR	8655590	Symbol	PNG_COLOR_TYPE_GRAY		8655427						
ANR	8655591	Symbol	nImages		8655427						
ANR	8655592	Symbol	dp -> filler		8655427						
ANR	8655593	Symbol	dp -> h		8655427						
ANR	8655594	Symbol	dp		8655427						
ANR	8655595	Symbol	png_get_rowbytes		8655427						
ANR	8655596	Symbol	ct		8655427						
ANR	8655597	Symbol	* dp		8655427						
ANR	8655598	Symbol	png_get_image_width		8655427						
ANR	8655599	Symbol	bit_size		8655427						
ANR	8655600	Symbol	dp -> cbRow		8655427						
ANR	8655601	Symbol	pi		8655427						
ANR	8655602	Symbol	dp -> bit_width		8655427						
ANR	8655603	Symbol	dp -> pixel_size		8655427						
ANR	8655604	Symbol	dp -> ps		8655427						
ANR	8655605	Function	standard_info_imp	5367:0:166311:167118							
ANR	8655606	FunctionDef	"standard_info_imp (standard_display * dp , png_structp pp , png_infop pi , int nImages)"		8655605	0					
ANR	8655607	CompoundStatement		5370:0:166410:167118	8655605	0					
ANR	8655608	ExpressionStatement	"standard_info_part1 ( dp , pp , pi )"	5374:3:166544:166575	8655605	0	True				
ANR	8655609	CallExpression	"standard_info_part1 ( dp , pp , pi )"		8655605	0					
ANR	8655610	Callee	standard_info_part1		8655605	0					
ANR	8655611	Identifier	standard_info_part1		8655605	0					
ANR	8655612	ArgumentList	dp		8655605	1					
ANR	8655613	Argument	dp		8655605	0					
ANR	8655614	Identifier	dp		8655605	0					
ANR	8655615	Argument	pp		8655605	1					
ANR	8655616	Identifier	pp		8655605	0					
ANR	8655617	Argument	pi		8655605	2					
ANR	8655618	Identifier	pi		8655605	0					
ANR	8655619	IfStatement	if ( dp -> use_update_info )		8655605	1					
ANR	8655620	Condition	dp -> use_update_info	5379:7:166723:166741	8655605	0	True				
ANR	8655621	PtrMemberAccess	dp -> use_update_info		8655605	0					
ANR	8655622	Identifier	dp		8655605	0					
ANR	8655623	Identifier	use_update_info		8655605	1					
ANR	8655624	CompoundStatement		13:6:400:427	8655605	1					
ANR	8655625	IdentifierDeclStatement	int i = dp -> use_update_info ;	5382:6:166811:166838	8655605	0	True				
ANR	8655626	IdentifierDecl	i = dp -> use_update_info		8655605	0					
ANR	8655627	IdentifierDeclType	int		8655605	0					
ANR	8655628	Identifier	i		8655605	1					
ANR	8655629	AssignmentExpression	i = dp -> use_update_info		8655605	2		=			
ANR	8655630	Identifier	i		8655605	0					
ANR	8655631	PtrMemberAccess	dp -> use_update_info		8655605	1					
ANR	8655632	Identifier	dp		8655605	0					
ANR	8655633	Identifier	use_update_info		8655605	1					
ANR	8655634	WhileStatement	while ( i -- > 0 )		8655605	1					
ANR	8655635	Condition	i -- > 0	5383:13:166853:166859	8655605	0	True				
ANR	8655636	RelationalExpression	i -- > 0		8655605	0		>			
ANR	8655637	PostIncDecOperationExpression	i --		8655605	0					
ANR	8655638	Identifier	i		8655605	0					
ANR	8655639	IncDec	--		8655605	1					
ANR	8655640	PrimaryExpression	0		8655605	1					
ANR	8655641	ExpressionStatement	"png_read_update_info ( pp , pi )"	5384:9:166871:166899	8655605	1	True				
ANR	8655642	CallExpression	"png_read_update_info ( pp , pi )"		8655605	0					
ANR	8655643	Callee	png_read_update_info		8655605	0					
ANR	8655644	Identifier	png_read_update_info		8655605	0					
ANR	8655645	ArgumentList	pp		8655605	1					
ANR	8655646	Argument	pp		8655605	0					
ANR	8655647	Identifier	pp		8655605	0					
ANR	8655648	Argument	pi		8655605	1					
ANR	8655649	Identifier	pi		8655605	0					
ANR	8655650	ElseStatement	else		8655605	0					
ANR	8655651	ExpressionStatement	png_start_read_image ( pp )	5388:6:166921:166945	8655605	0	True				
ANR	8655652	CallExpression	png_start_read_image ( pp )		8655605	0					
ANR	8655653	Callee	png_start_read_image		8655605	0					
ANR	8655654	Identifier	png_start_read_image		8655605	0					
ANR	8655655	ArgumentList	pp		8655605	1					
ANR	8655656	Argument	pp		8655605	0					
ANR	8655657	Identifier	pp		8655605	0					
ANR	8655658	ExpressionStatement	"standard_info_part2 ( dp , pp , pi , nImages )"	5393:3:167076:167116	8655605	2	True				
ANR	8655659	CallExpression	"standard_info_part2 ( dp , pp , pi , nImages )"		8655605	0					
ANR	8655660	Callee	standard_info_part2		8655605	0					
ANR	8655661	Identifier	standard_info_part2		8655605	0					
ANR	8655662	ArgumentList	dp		8655605	1					
ANR	8655663	Argument	dp		8655605	0					
ANR	8655664	Identifier	dp		8655605	0					
ANR	8655665	Argument	pp		8655605	1					
ANR	8655666	Identifier	pp		8655605	0					
ANR	8655667	Argument	pi		8655605	2					
ANR	8655668	Identifier	pi		8655605	0					
ANR	8655669	Argument	nImages		8655605	3					
ANR	8655670	Identifier	nImages		8655605	0					
ANR	8655671	ReturnType	static void		8655605	1					
ANR	8655672	Identifier	standard_info_imp		8655605	2					
ANR	8655673	ParameterList	"standard_display * dp , png_structp pp , png_infop pi , int nImages"		8655605	3					
ANR	8655674	Parameter	standard_display * dp	5368:18:166341:166360	8655605	0	True				
ANR	8655675	ParameterType	standard_display *		8655605	0					
ANR	8655676	Identifier	dp		8655605	1					
ANR	8655677	Parameter	png_structp pp	5368:40:166363:166376	8655605	1	True				
ANR	8655678	ParameterType	png_structp		8655605	0					
ANR	8655679	Identifier	pp		8655605	1					
ANR	8655680	Parameter	png_infop pi	5368:56:166379:166390	8655605	2	True				
ANR	8655681	ParameterType	png_infop		8655605	0					
ANR	8655682	Identifier	pi		8655605	1					
ANR	8655683	Parameter	int nImages	5369:4:166397:166407	8655605	3	True				
ANR	8655684	ParameterType	int		8655605	0					
ANR	8655685	Identifier	nImages		8655605	1					
ANR	8655686	CFGEntryNode	ENTRY		8655605		True				
ANR	8655687	CFGExitNode	EXIT		8655605		True				
ANR	8655688	Symbol	pp		8655605						
ANR	8655689	Symbol	* dp		8655605						
ANR	8655690	Symbol	dp -> use_update_info		8655605						
ANR	8655691	Symbol	pi		8655605						
ANR	8655692	Symbol	i		8655605						
ANR	8655693	Symbol	nImages		8655605						
ANR	8655694	Symbol	dp		8655605						
ANR	8655695	Function	standard_info	5396:0:167121:167434							
ANR	8655696	FunctionDef	"standard_info (png_structp pp , png_infop pi)"		8655695	0					
ANR	8655697	CompoundStatement		5398:0:167186:167434	8655695	0					
ANR	8655698	Statement	standard_display	5399:3:167191:167206	8655695	0	True				
ANR	8655699	Statement	*	5399:20:167208:167208	8655695	1	True				
ANR	8655700	Statement	dp	5399:21:167209:167210	8655695	2	True				
ANR	8655701	Statement	=	5399:24:167212:167212	8655695	3	True				
ANR	8655702	Statement	voidcast	5399:26:167214:167221	8655695	4	True				
ANR	8655703	Statement	(	5399:34:167222:167222	8655695	5	True				
ANR	8655704	Statement	standard_display	5399:35:167223:167238	8655695	6	True				
ANR	8655705	Statement	*	5399:51:167239:167239	8655695	7	True				
ANR	8655706	Statement	","	5399:52:167240:167240	8655695	8	True				
ANR	8655707	Statement	png_get_progressive_ptr	5400:6:167248:167270	8655695	9	True				
ANR	8655708	Statement	(	5400:29:167271:167271	8655695	10	True				
ANR	8655709	Statement	pp	5400:30:167272:167273	8655695	11	True				
ANR	8655710	Statement	)	5400:32:167274:167274	8655695	12	True				
ANR	8655711	Statement	)	5400:33:167275:167275	8655695	13	True				
ANR	8655712	ExpressionStatement		5400:34:167276:167276	8655695	14	True				
ANR	8655713	ExpressionStatement	"standard_info_imp ( dp , pp , pi , 1 )"	5405:3:167381:167432	8655695	15	True				
ANR	8655714	CallExpression	"standard_info_imp ( dp , pp , pi , 1 )"		8655695	0					
ANR	8655715	Callee	standard_info_imp		8655695	0					
ANR	8655716	Identifier	standard_info_imp		8655695	0					
ANR	8655717	ArgumentList	dp		8655695	1					
ANR	8655718	Argument	dp		8655695	0					
ANR	8655719	Identifier	dp		8655695	0					
ANR	8655720	Argument	pp		8655695	1					
ANR	8655721	Identifier	pp		8655695	0					
ANR	8655722	Argument	pi		8655695	2					
ANR	8655723	Identifier	pi		8655695	0					
ANR	8655724	Argument	1		8655695	3					
ANR	8655725	PrimaryExpression	1		8655695	0					
ANR	8655726	ReturnType	static void PNGCBAPI		8655695	1					
ANR	8655727	Identifier	standard_info		8655695	2					
ANR	8655728	ParameterList	"png_structp pp , png_infop pi"		8655695	3					
ANR	8655729	Parameter	png_structp pp	5397:14:167156:167169	8655695	0	True				
ANR	8655730	ParameterType	png_structp		8655695	0					
ANR	8655731	Identifier	pp		8655695	1					
ANR	8655732	Parameter	png_infop pi	5397:30:167172:167183	8655695	1	True				
ANR	8655733	ParameterType	png_infop		8655695	0					
ANR	8655734	Identifier	pi		8655695	1					
ANR	8655735	CFGEntryNode	ENTRY		8655695		True				
ANR	8655736	CFGExitNode	EXIT		8655695		True				
ANR	8655737	Symbol	pp		8655695						
ANR	8655738	Symbol	pi		8655695						
ANR	8655739	Symbol	dp		8655695						
ANR	8655740	Function	progressive_row	5408:0:167437:169603							
ANR	8655741	FunctionDef	"progressive_row (png_structp ppIn , png_bytep new_row , png_uint_32 y , int pass)"		8655740	0					
ANR	8655742	CompoundStatement		5410:0:167536:169603	8655740	0					
ANR	8655743	IdentifierDeclStatement	png_const_structp pp = ppIn ;	5411:3:167541:167568	8655740	0	True				
ANR	8655744	IdentifierDecl	pp = ppIn		8655740	0					
ANR	8655745	IdentifierDeclType	png_const_structp		8655740	0					
ANR	8655746	Identifier	pp		8655740	1					
ANR	8655747	AssignmentExpression	pp = ppIn		8655740	2		=			
ANR	8655748	Identifier	ppIn		8655740	0					
ANR	8655749	Identifier	ppIn		8655740	1					
ANR	8655750	Statement	const	5412:3:167573:167577	8655740	1	True				
ANR	8655751	Statement	standard_display	5412:9:167579:167594	8655740	2	True				
ANR	8655752	Statement	*	5412:26:167596:167596	8655740	3	True				
ANR	8655753	Statement	dp	5412:27:167597:167598	8655740	4	True				
ANR	8655754	Statement	=	5412:30:167600:167600	8655740	5	True				
ANR	8655755	Statement	voidcast	5412:32:167602:167609	8655740	6	True				
ANR	8655756	Statement	(	5412:40:167610:167610	8655740	7	True				
ANR	8655757	Statement	standard_display	5412:41:167611:167626	8655740	8	True				
ANR	8655758	Statement	*	5412:57:167627:167627	8655740	9	True				
ANR	8655759	Statement	","	5412:58:167628:167628	8655740	10	True				
ANR	8655760	Statement	png_get_progressive_ptr	5413:6:167636:167658	8655740	11	True				
ANR	8655761	Statement	(	5413:29:167659:167659	8655740	12	True				
ANR	8655762	Statement	pp	5413:30:167660:167661	8655740	13	True				
ANR	8655763	Statement	)	5413:32:167662:167662	8655740	14	True				
ANR	8655764	Statement	)	5413:33:167663:167663	8655740	15	True				
ANR	8655765	ExpressionStatement		5413:34:167664:167664	8655740	16	True				
ANR	8655766	IfStatement	if ( new_row != NULL )		8655740	17					
ANR	8655767	Condition	new_row != NULL	5420:7:167967:167981	8655740	0	True				
ANR	8655768	EqualityExpression	new_row != NULL		8655740	0		!=			
ANR	8655769	Identifier	new_row		8655740	0					
ANR	8655770	Identifier	NULL		8655740	1					
ANR	8655771	CompoundStatement		13:6:458:471	8655740	1					
ANR	8655772	IdentifierDeclStatement	png_bytep row ;	5422:6:167995:168008	8655740	0	True				
ANR	8655773	IdentifierDecl	row		8655740	0					
ANR	8655774	IdentifierDeclType	png_bytep		8655740	0					
ANR	8655775	Identifier	row		8655740	1					
ANR	8655776	IfStatement	if ( dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7 )		8655740	1					
ANR	8655777	Condition	dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7	5427:10:168139:168199	8655740	0	True				
ANR	8655778	AndExpression	dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7		8655740	0		&&			
ANR	8655779	PtrMemberAccess	dp -> do_interlace		8655740	0					
ANR	8655780	Identifier	dp		8655740	0					
ANR	8655781	Identifier	do_interlace		8655740	1					
ANR	8655782	EqualityExpression	dp -> interlace_type == PNG_INTERLACE_ADAM7		8655740	1		==			
ANR	8655783	PtrMemberAccess	dp -> interlace_type		8655740	0					
ANR	8655784	Identifier	dp		8655740	0					
ANR	8655785	Identifier	interlace_type		8655740	1					
ANR	8655786	Identifier	PNG_INTERLACE_ADAM7		8655740	1					
ANR	8655787	CompoundStatement		19:6:671:671	8655740	1					
ANR	8655788	IfStatement	if ( y != png_get_current_row_number ( pp ) )		8655740	0					
ANR	8655789	Condition	y != png_get_current_row_number ( pp )	5431:13:168336:168370	8655740	0	True				
ANR	8655790	EqualityExpression	y != png_get_current_row_number ( pp )		8655740	0		!=			
ANR	8655791	Identifier	y		8655740	0					
ANR	8655792	CallExpression	png_get_current_row_number ( pp )		8655740	1					
ANR	8655793	Callee	png_get_current_row_number		8655740	0					
ANR	8655794	Identifier	png_get_current_row_number		8655740	0					
ANR	8655795	ArgumentList	pp		8655740	1					
ANR	8655796	Argument	pp		8655740	0					
ANR	8655797	Identifier	pp		8655740	0					
ANR	8655798	ExpressionStatement	"png_error ( pp , ""png_get_current_row_number is broken"" )"	5432:12:168385:168438	8655740	1	True				
ANR	8655799	CallExpression	"png_error ( pp , ""png_get_current_row_number is broken"" )"		8655740	0					
ANR	8655800	Callee	png_error		8655740	0					
ANR	8655801	Identifier	png_error		8655740	0					
ANR	8655802	ArgumentList	pp		8655740	1					
ANR	8655803	Argument	pp		8655740	0					
ANR	8655804	Identifier	pp		8655740	0					
ANR	8655805	Argument	"""png_get_current_row_number is broken"""		8655740	1					
ANR	8655806	PrimaryExpression	"""png_get_current_row_number is broken"""		8655740	0					
ANR	8655807	IfStatement	if ( pass != png_get_current_pass_number ( pp ) )		8655740	1					
ANR	8655808	Condition	pass != png_get_current_pass_number ( pp )	5434:13:168454:168492	8655740	0	True				
ANR	8655809	EqualityExpression	pass != png_get_current_pass_number ( pp )		8655740	0		!=			
ANR	8655810	Identifier	pass		8655740	0					
ANR	8655811	CallExpression	png_get_current_pass_number ( pp )		8655740	1					
ANR	8655812	Callee	png_get_current_pass_number		8655740	0					
ANR	8655813	Identifier	png_get_current_pass_number		8655740	0					
ANR	8655814	ArgumentList	pp		8655740	1					
ANR	8655815	Argument	pp		8655740	0					
ANR	8655816	Identifier	pp		8655740	0					
ANR	8655817	ExpressionStatement	"png_error ( pp , ""png_get_current_pass_number is broken"" )"	5435:12:168507:168561	8655740	1	True				
ANR	8655818	CallExpression	"png_error ( pp , ""png_get_current_pass_number is broken"" )"		8655740	0					
ANR	8655819	Callee	png_error		8655740	0					
ANR	8655820	Identifier	png_error		8655740	0					
ANR	8655821	ArgumentList	pp		8655740	1					
ANR	8655822	Argument	pp		8655740	0					
ANR	8655823	Identifier	pp		8655740	0					
ANR	8655824	Argument	"""png_get_current_pass_number is broken"""		8655740	1					
ANR	8655825	PrimaryExpression	"""png_get_current_pass_number is broken"""		8655740	0					
ANR	8655826	ExpressionStatement	"y = PNG_ROW_FROM_PASS_ROW ( y , pass )"	5438:9:168606:168640	8655740	2	True				
ANR	8655827	AssignmentExpression	"y = PNG_ROW_FROM_PASS_ROW ( y , pass )"		8655740	0		=			
ANR	8655828	Identifier	y		8655740	0					
ANR	8655829	CallExpression	"PNG_ROW_FROM_PASS_ROW ( y , pass )"		8655740	1					
ANR	8655830	Callee	PNG_ROW_FROM_PASS_ROW		8655740	0					
ANR	8655831	Identifier	PNG_ROW_FROM_PASS_ROW		8655740	0					
ANR	8655832	ArgumentList	y		8655740	1					
ANR	8655833	Argument	y		8655740	0					
ANR	8655834	Identifier	y		8655740	0					
ANR	8655835	Argument	pass		8655740	1					
ANR	8655836	Identifier	pass		8655740	0					
ANR	8655837	IfStatement	if ( y >= dp -> h )		8655740	2					
ANR	8655838	Condition	y >= dp -> h	5442:10:168701:168710	8655740	0	True				
ANR	8655839	RelationalExpression	y >= dp -> h		8655740	0		>=			
ANR	8655840	Identifier	y		8655740	0					
ANR	8655841	PtrMemberAccess	dp -> h		8655740	1					
ANR	8655842	Identifier	dp		8655740	0					
ANR	8655843	Identifier	h		8655740	1					
ANR	8655844	ExpressionStatement	"png_error ( pp , ""invalid y to progressive row callback"" )"	5443:9:168722:168776	8655740	1	True				
ANR	8655845	CallExpression	"png_error ( pp , ""invalid y to progressive row callback"" )"		8655740	0					
ANR	8655846	Callee	png_error		8655740	0					
ANR	8655847	Identifier	png_error		8655740	0					
ANR	8655848	ArgumentList	pp		8655740	1					
ANR	8655849	Argument	pp		8655740	0					
ANR	8655850	Identifier	pp		8655740	0					
ANR	8655851	Argument	"""invalid y to progressive row callback"""		8655740	1					
ANR	8655852	PrimaryExpression	"""invalid y to progressive row callback"""		8655740	0					
ANR	8655853	ExpressionStatement	"row = store_image_row ( dp -> ps , pp , 0 , y )"	5445:6:168785:168824	8655740	3	True				
ANR	8655854	AssignmentExpression	"row = store_image_row ( dp -> ps , pp , 0 , y )"		8655740	0		=			
ANR	8655855	Identifier	row		8655740	0					
ANR	8655856	CallExpression	"store_image_row ( dp -> ps , pp , 0 , y )"		8655740	1					
ANR	8655857	Callee	store_image_row		8655740	0					
ANR	8655858	Identifier	store_image_row		8655740	0					
ANR	8655859	ArgumentList	dp -> ps		8655740	1					
ANR	8655860	Argument	dp -> ps		8655740	0					
ANR	8655861	PtrMemberAccess	dp -> ps		8655740	0					
ANR	8655862	Identifier	dp		8655740	0					
ANR	8655863	Identifier	ps		8655740	1					
ANR	8655864	Argument	pp		8655740	1					
ANR	8655865	Identifier	pp		8655740	0					
ANR	8655866	Argument	0		8655740	2					
ANR	8655867	PrimaryExpression	0		8655740	0					
ANR	8655868	Argument	y		8655740	3					
ANR	8655869	Identifier	y		8655740	0					
ANR	8655870	IfStatement	if ( dp -> do_interlace )		8655740	4					
ANR	8655871	Condition	dp -> do_interlace	5449:10:168921:168936	8655740	0	True				
ANR	8655872	PtrMemberAccess	dp -> do_interlace		8655740	0					
ANR	8655873	Identifier	dp		8655740	0					
ANR	8655874	Identifier	do_interlace		8655740	1					
ANR	8655875	CompoundStatement		42:6:1438:1438	8655740	1					
ANR	8655876	IfStatement	if ( dp -> interlace_type == PNG_INTERLACE_ADAM7 )		8655740	0					
ANR	8655877	Condition	dp -> interlace_type == PNG_INTERLACE_ADAM7	5452:13:168990:169030	8655740	0	True				
ANR	8655878	EqualityExpression	dp -> interlace_type == PNG_INTERLACE_ADAM7		8655740	0		==			
ANR	8655879	PtrMemberAccess	dp -> interlace_type		8655740	0					
ANR	8655880	Identifier	dp		8655740	0					
ANR	8655881	Identifier	interlace_type		8655740	1					
ANR	8655882	Identifier	PNG_INTERLACE_ADAM7		8655740	1					
ANR	8655883	ExpressionStatement	"deinterlace_row ( row , new_row , dp -> pixel_size , dp -> w , pass , dp -> littleendian )"	5453:12:169045:169139	8655740	1	True				
ANR	8655884	CallExpression	"deinterlace_row ( row , new_row , dp -> pixel_size , dp -> w , pass , dp -> littleendian )"		8655740	0					
ANR	8655885	Callee	deinterlace_row		8655740	0					
ANR	8655886	Identifier	deinterlace_row		8655740	0					
ANR	8655887	ArgumentList	row		8655740	1					
ANR	8655888	Argument	row		8655740	0					
ANR	8655889	Identifier	row		8655740	0					
ANR	8655890	Argument	new_row		8655740	1					
ANR	8655891	Identifier	new_row		8655740	0					
ANR	8655892	Argument	dp -> pixel_size		8655740	2					
ANR	8655893	PtrMemberAccess	dp -> pixel_size		8655740	0					
ANR	8655894	Identifier	dp		8655740	0					
ANR	8655895	Identifier	pixel_size		8655740	1					
ANR	8655896	Argument	dp -> w		8655740	3					
ANR	8655897	PtrMemberAccess	dp -> w		8655740	0					
ANR	8655898	Identifier	dp		8655740	0					
ANR	8655899	Identifier	w		8655740	1					
ANR	8655900	Argument	pass		8655740	4					
ANR	8655901	Identifier	pass		8655740	0					
ANR	8655902	Argument	dp -> littleendian		8655740	5					
ANR	8655903	PtrMemberAccess	dp -> littleendian		8655740	0					
ANR	8655904	Identifier	dp		8655740	0					
ANR	8655905	Identifier	littleendian		8655740	1					
ANR	8655906	ElseStatement	else		8655740	0					
ANR	8655907	ExpressionStatement	"row_copy ( row , new_row , dp -> pixel_size * dp -> w , dp -> littleendian )"	5456:12:169167:169231	8655740	0	True				
ANR	8655908	CallExpression	"row_copy ( row , new_row , dp -> pixel_size * dp -> w , dp -> littleendian )"		8655740	0					
ANR	8655909	Callee	row_copy		8655740	0					
ANR	8655910	Identifier	row_copy		8655740	0					
ANR	8655911	ArgumentList	row		8655740	1					
ANR	8655912	Argument	row		8655740	0					
ANR	8655913	Identifier	row		8655740	0					
ANR	8655914	Argument	new_row		8655740	1					
ANR	8655915	Identifier	new_row		8655740	0					
ANR	8655916	Argument	dp -> pixel_size * dp -> w		8655740	2					
ANR	8655917	MultiplicativeExpression	dp -> pixel_size * dp -> w		8655740	0		*			
ANR	8655918	PtrMemberAccess	dp -> pixel_size		8655740	0					
ANR	8655919	Identifier	dp		8655740	0					
ANR	8655920	Identifier	pixel_size		8655740	1					
ANR	8655921	PtrMemberAccess	dp -> w		8655740	1					
ANR	8655922	Identifier	dp		8655740	0					
ANR	8655923	Identifier	w		8655740	1					
ANR	8655924	Argument	dp -> littleendian		8655740	3					
ANR	8655925	PtrMemberAccess	dp -> littleendian		8655740	0					
ANR	8655926	Identifier	dp		8655740	0					
ANR	8655927	Identifier	littleendian		8655740	1					
ANR	8655928	ElseStatement	else		8655740	0					
ANR	8655929	ExpressionStatement	"png_progressive_combine_row ( pp , row , new_row )"	5460:9:169299:169344	8655740	0	True				
ANR	8655930	CallExpression	"png_progressive_combine_row ( pp , row , new_row )"		8655740	0					
ANR	8655931	Callee	png_progressive_combine_row		8655740	0					
ANR	8655932	Identifier	png_progressive_combine_row		8655740	0					
ANR	8655933	ArgumentList	pp		8655740	1					
ANR	8655934	Argument	pp		8655740	0					
ANR	8655935	Identifier	pp		8655740	0					
ANR	8655936	Argument	row		8655740	1					
ANR	8655937	Identifier	row		8655740	0					
ANR	8655938	Argument	new_row		8655740	2					
ANR	8655939	Identifier	new_row		8655740	0					
ANR	8655940	ElseStatement	else		8655740	0					
ANR	8655941	IfStatement	"if ( dp -> interlace_type == PNG_INTERLACE_ADAM7 && PNG_ROW_IN_INTERLACE_PASS ( y , pass ) && PNG_PASS_COLS ( dp -> w , pass ) > 0 )"		8655740	0					
ANR	8655942	Condition	"dp -> interlace_type == PNG_INTERLACE_ADAM7 && PNG_ROW_IN_INTERLACE_PASS ( y , pass ) && PNG_PASS_COLS ( dp -> w , pass ) > 0"	5464:12:169408:169534	8655740	0	True				
ANR	8655943	AndExpression	"dp -> interlace_type == PNG_INTERLACE_ADAM7 && PNG_ROW_IN_INTERLACE_PASS ( y , pass ) && PNG_PASS_COLS ( dp -> w , pass ) > 0"		8655740	0		&&			
ANR	8655944	EqualityExpression	dp -> interlace_type == PNG_INTERLACE_ADAM7		8655740	0		==			
ANR	8655945	PtrMemberAccess	dp -> interlace_type		8655740	0					
ANR	8655946	Identifier	dp		8655740	0					
ANR	8655947	Identifier	interlace_type		8655740	1					
ANR	8655948	Identifier	PNG_INTERLACE_ADAM7		8655740	1					
ANR	8655949	AndExpression	"PNG_ROW_IN_INTERLACE_PASS ( y , pass ) && PNG_PASS_COLS ( dp -> w , pass ) > 0"		8655740	1		&&			
ANR	8655950	CallExpression	"PNG_ROW_IN_INTERLACE_PASS ( y , pass )"		8655740	0					
ANR	8655951	Callee	PNG_ROW_IN_INTERLACE_PASS		8655740	0					
ANR	8655952	Identifier	PNG_ROW_IN_INTERLACE_PASS		8655740	0					
ANR	8655953	ArgumentList	y		8655740	1					
ANR	8655954	Argument	y		8655740	0					
ANR	8655955	Identifier	y		8655740	0					
ANR	8655956	Argument	pass		8655740	1					
ANR	8655957	Identifier	pass		8655740	0					
ANR	8655958	RelationalExpression	"PNG_PASS_COLS ( dp -> w , pass ) > 0"		8655740	1		>			
ANR	8655959	CallExpression	"PNG_PASS_COLS ( dp -> w , pass )"		8655740	0					
ANR	8655960	Callee	PNG_PASS_COLS		8655740	0					
ANR	8655961	Identifier	PNG_PASS_COLS		8655740	0					
ANR	8655962	ArgumentList	dp -> w		8655740	1					
ANR	8655963	Argument	dp -> w		8655740	0					
ANR	8655964	PtrMemberAccess	dp -> w		8655740	0					
ANR	8655965	Identifier	dp		8655740	0					
ANR	8655966	Identifier	w		8655740	1					
ANR	8655967	Argument	pass		8655740	1					
ANR	8655968	Identifier	pass		8655740	0					
ANR	8655969	PrimaryExpression	0		8655740	1					
ANR	8655970	ExpressionStatement	"png_error ( pp , ""missing row in progressive de-interlacing"" )"	5467:6:169543:169601	8655740	1	True				
ANR	8655971	CallExpression	"png_error ( pp , ""missing row in progressive de-interlacing"" )"		8655740	0					
ANR	8655972	Callee	png_error		8655740	0					
ANR	8655973	Identifier	png_error		8655740	0					
ANR	8655974	ArgumentList	pp		8655740	1					
ANR	8655975	Argument	pp		8655740	0					
ANR	8655976	Identifier	pp		8655740	0					
ANR	8655977	Argument	"""missing row in progressive de-interlacing"""		8655740	1					
ANR	8655978	PrimaryExpression	"""missing row in progressive de-interlacing"""		8655740	0					
ANR	8655979	ReturnType	static void PNGCBAPI		8655740	1					
ANR	8655980	Identifier	progressive_row		8655740	2					
ANR	8655981	ParameterList	"png_structp ppIn , png_bytep new_row , png_uint_32 y , int pass"		8655740	3					
ANR	8655982	Parameter	png_structp ppIn	5409:16:167474:167489	8655740	0	True				
ANR	8655983	ParameterType	png_structp		8655740	0					
ANR	8655984	Identifier	ppIn		8655740	1					
ANR	8655985	Parameter	png_bytep new_row	5409:34:167492:167508	8655740	1	True				
ANR	8655986	ParameterType	png_bytep		8655740	0					
ANR	8655987	Identifier	new_row		8655740	1					
ANR	8655988	Parameter	png_uint_32 y	5409:53:167511:167523	8655740	2	True				
ANR	8655989	ParameterType	png_uint_32		8655740	0					
ANR	8655990	Identifier	y		8655740	1					
ANR	8655991	Parameter	int pass	5409:68:167526:167533	8655740	3	True				
ANR	8655992	ParameterType	int		8655740	0					
ANR	8655993	Identifier	pass		8655740	1					
ANR	8655994	CFGEntryNode	ENTRY		8655740		True				
ANR	8655995	CFGExitNode	EXIT		8655740		True				
ANR	8655996	Symbol	pp		8655740						
ANR	8655997	Symbol	png_get_current_pass_number		8655740						
ANR	8655998	Symbol	NULL		8655740						
ANR	8655999	Symbol	dp -> do_interlace		8655740						
ANR	8656000	Symbol	PNG_ROW_IN_INTERLACE_PASS		8655740						
ANR	8656001	Symbol	pass		8655740						
ANR	8656002	Symbol	PNG_INTERLACE_ADAM7		8655740						
ANR	8656003	Symbol	dp -> littleendian		8655740						
ANR	8656004	Symbol	dp -> h		8655740						
ANR	8656005	Symbol	dp		8655740						
ANR	8656006	Symbol	PNG_ROW_FROM_PASS_ROW		8655740						
ANR	8656007	Symbol	ppIn		8655740						
ANR	8656008	Symbol	* dp		8655740						
ANR	8656009	Symbol	dp -> interlace_type		8655740						
ANR	8656010	Symbol	png_get_current_row_number		8655740						
ANR	8656011	Symbol	y		8655740						
ANR	8656012	Symbol	dp -> w		8655740						
ANR	8656013	Symbol	PNG_PASS_COLS		8655740						
ANR	8656014	Symbol	new_row		8655740						
ANR	8656015	Symbol	row		8655740						
ANR	8656016	Symbol	store_image_row		8655740						
ANR	8656017	Symbol	dp -> pixel_size		8655740						
ANR	8656018	Symbol	dp -> ps		8655740						
ANR	8656019	Function	sequential_row	5470:0:169606:172013							
ANR	8656020	FunctionDef	"sequential_row (standard_display * dp , png_structp pp , png_infop pi , const int iImage , const int iDisplay)"		8656019	0					
ANR	8656021	CompoundStatement		5473:0:169727:172013	8656019	0					
ANR	8656022	IdentifierDeclStatement	const int npasses = dp -> npasses ;	5474:3:169732:169771	8656019	0	True				
ANR	8656023	IdentifierDecl	npasses = dp -> npasses		8656019	0					
ANR	8656024	IdentifierDeclType	const int		8656019	0					
ANR	8656025	Identifier	npasses		8656019	1					
ANR	8656026	AssignmentExpression	npasses = dp -> npasses		8656019	2		=			
ANR	8656027	Identifier	npasses		8656019	0					
ANR	8656028	PtrMemberAccess	dp -> npasses		8656019	1					
ANR	8656029	Identifier	dp		8656019	0					
ANR	8656030	Identifier	npasses		8656019	1					
ANR	8656031	IdentifierDeclStatement	const int do_interlace = dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7 ;	5475:3:169776:169876	8656019	1	True				
ANR	8656032	IdentifierDecl	do_interlace = dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7		8656019	0					
ANR	8656033	IdentifierDeclType	const int		8656019	0					
ANR	8656034	Identifier	do_interlace		8656019	1					
ANR	8656035	AssignmentExpression	do_interlace = dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7		8656019	2		=			
ANR	8656036	Identifier	do_interlace		8656019	0					
ANR	8656037	AndExpression	dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7		8656019	1		&&			
ANR	8656038	PtrMemberAccess	dp -> do_interlace		8656019	0					
ANR	8656039	Identifier	dp		8656019	0					
ANR	8656040	Identifier	do_interlace		8656019	1					
ANR	8656041	EqualityExpression	dp -> interlace_type == PNG_INTERLACE_ADAM7		8656019	1		==			
ANR	8656042	PtrMemberAccess	dp -> interlace_type		8656019	0					
ANR	8656043	Identifier	dp		8656019	0					
ANR	8656044	Identifier	interlace_type		8656019	1					
ANR	8656045	Identifier	PNG_INTERLACE_ADAM7		8656019	1					
ANR	8656046	IdentifierDeclStatement	"const png_uint_32 height = standard_height ( pp , dp -> id ) ;"	5477:3:169881:169935	8656019	2	True				
ANR	8656047	IdentifierDecl	"height = standard_height ( pp , dp -> id )"		8656019	0					
ANR	8656048	IdentifierDeclType	const png_uint_32		8656019	0					
ANR	8656049	Identifier	height		8656019	1					
ANR	8656050	AssignmentExpression	"height = standard_height ( pp , dp -> id )"		8656019	2		=			
ANR	8656051	Identifier	height		8656019	0					
ANR	8656052	CallExpression	"standard_height ( pp , dp -> id )"		8656019	1					
ANR	8656053	Callee	standard_height		8656019	0					
ANR	8656054	Identifier	standard_height		8656019	0					
ANR	8656055	ArgumentList	pp		8656019	1					
ANR	8656056	Argument	pp		8656019	0					
ANR	8656057	Identifier	pp		8656019	0					
ANR	8656058	Argument	dp -> id		8656019	1					
ANR	8656059	PtrMemberAccess	dp -> id		8656019	0					
ANR	8656060	Identifier	dp		8656019	0					
ANR	8656061	Identifier	id		8656019	1					
ANR	8656062	IdentifierDeclStatement	"const png_uint_32 width = standard_width ( pp , dp -> id ) ;"	5478:3:169940:169992	8656019	3	True				
ANR	8656063	IdentifierDecl	"width = standard_width ( pp , dp -> id )"		8656019	0					
ANR	8656064	IdentifierDeclType	const png_uint_32		8656019	0					
ANR	8656065	Identifier	width		8656019	1					
ANR	8656066	AssignmentExpression	"width = standard_width ( pp , dp -> id )"		8656019	2		=			
ANR	8656067	Identifier	width		8656019	0					
ANR	8656068	CallExpression	"standard_width ( pp , dp -> id )"		8656019	1					
ANR	8656069	Callee	standard_width		8656019	0					
ANR	8656070	Identifier	standard_width		8656019	0					
ANR	8656071	ArgumentList	pp		8656019	1					
ANR	8656072	Argument	pp		8656019	0					
ANR	8656073	Identifier	pp		8656019	0					
ANR	8656074	Argument	dp -> id		8656019	1					
ANR	8656075	PtrMemberAccess	dp -> id		8656019	0					
ANR	8656076	Identifier	dp		8656019	0					
ANR	8656077	Identifier	id		8656019	1					
ANR	8656078	IdentifierDeclStatement	const png_store * ps = dp -> ps ;	5479:3:169997:170026	8656019	4	True				
ANR	8656079	IdentifierDecl	* ps = dp -> ps		8656019	0					
ANR	8656080	IdentifierDeclType	const png_store *		8656019	0					
ANR	8656081	Identifier	ps		8656019	1					
ANR	8656082	AssignmentExpression	* ps = dp -> ps		8656019	2		=			
ANR	8656083	Identifier	ps		8656019	0					
ANR	8656084	PtrMemberAccess	dp -> ps		8656019	1					
ANR	8656085	Identifier	dp		8656019	0					
ANR	8656086	Identifier	ps		8656019	1					
ANR	8656087	IdentifierDeclStatement	int pass ;	5480:3:170031:170039	8656019	5	True				
ANR	8656088	IdentifierDecl	pass		8656019	0					
ANR	8656089	IdentifierDeclType	int		8656019	0					
ANR	8656090	Identifier	pass		8656019	1					
ANR	8656091	ForStatement	for ( pass = 0 ; pass < npasses ; ++ pass )		8656019	6					
ANR	8656092	ForInit	pass = 0 ;	5482:8:170050:170056	8656019	0	True				
ANR	8656093	AssignmentExpression	pass = 0		8656019	0		=			
ANR	8656094	Identifier	pass		8656019	0					
ANR	8656095	PrimaryExpression	0		8656019	1					
ANR	8656096	Condition	pass < npasses	5482:16:170058:170069	8656019	1	True				
ANR	8656097	RelationalExpression	pass < npasses		8656019	0		<			
ANR	8656098	Identifier	pass		8656019	0					
ANR	8656099	Identifier	npasses		8656019	1					
ANR	8656100	UnaryExpression	++ pass	5482:30:170072:170077	8656019	2	True				
ANR	8656101	IncDec	++		8656019	0					
ANR	8656102	Identifier	pass		8656019	1					
ANR	8656103	CompoundStatement		13:6:384:430	8656019	3					
ANR	8656104	IdentifierDeclStatement	png_uint_32 y ;	5484:6:170091:170104	8656019	0	True				
ANR	8656105	IdentifierDecl	y		8656019	0					
ANR	8656106	IdentifierDeclType	png_uint_32		8656019	0					
ANR	8656107	Identifier	y		8656019	1					
ANR	8656108	IdentifierDeclStatement	"png_uint_32 wPass = PNG_PASS_COLS ( width , pass ) ;"	5485:6:170112:170158	8656019	1	True				
ANR	8656109	IdentifierDecl	"wPass = PNG_PASS_COLS ( width , pass )"		8656019	0					
ANR	8656110	IdentifierDeclType	png_uint_32		8656019	0					
ANR	8656111	Identifier	wPass		8656019	1					
ANR	8656112	AssignmentExpression	"wPass = PNG_PASS_COLS ( width , pass )"		8656019	2		=			
ANR	8656113	Identifier	wPass		8656019	0					
ANR	8656114	CallExpression	"PNG_PASS_COLS ( width , pass )"		8656019	1					
ANR	8656115	Callee	PNG_PASS_COLS		8656019	0					
ANR	8656116	Identifier	PNG_PASS_COLS		8656019	0					
ANR	8656117	ArgumentList	width		8656019	1					
ANR	8656118	Argument	width		8656019	0					
ANR	8656119	Identifier	width		8656019	0					
ANR	8656120	Argument	pass		8656019	1					
ANR	8656121	Identifier	pass		8656019	0					
ANR	8656122	ForStatement	for ( y = 0 ; y < height ; ++ y )		8656019	2					
ANR	8656123	ForInit	y = 0 ;	5487:11:170172:170175	8656019	0	True				
ANR	8656124	AssignmentExpression	y = 0		8656019	0		=			
ANR	8656125	Identifier	y		8656019	0					
ANR	8656126	PrimaryExpression	0		8656019	1					
ANR	8656127	Condition	y < height	5487:16:170177:170184	8656019	1	True				
ANR	8656128	RelationalExpression	y < height		8656019	0		<			
ANR	8656129	Identifier	y		8656019	0					
ANR	8656130	Identifier	height		8656019	1					
ANR	8656131	UnaryExpression	++ y	5487:26:170187:170189	8656019	2	True				
ANR	8656132	IncDec	++		8656019	0					
ANR	8656133	Identifier	y		8656019	1					
ANR	8656134	CompoundStatement		16:6:470:470	8656019	3					
ANR	8656135	IfStatement	if ( do_interlace )		8656019	0					
ANR	8656136	Condition	do_interlace	5489:13:170213:170224	8656019	0	True				
ANR	8656137	Identifier	do_interlace		8656019	0					
ANR	8656138	CompoundStatement		18:9:508:508	8656019	1					
ANR	8656139	IfStatement	"if ( wPass > 0 && PNG_ROW_IN_INTERLACE_PASS ( y , pass ) )"		8656019	0					
ANR	8656140	Condition	"wPass > 0 && PNG_ROW_IN_INTERLACE_PASS ( y , pass )"	5494:16:170403:170449	8656019	0	True				
ANR	8656141	AndExpression	"wPass > 0 && PNG_ROW_IN_INTERLACE_PASS ( y , pass )"		8656019	0		&&			
ANR	8656142	RelationalExpression	wPass > 0		8656019	0		>			
ANR	8656143	Identifier	wPass		8656019	0					
ANR	8656144	PrimaryExpression	0		8656019	1					
ANR	8656145	CallExpression	"PNG_ROW_IN_INTERLACE_PASS ( y , pass )"		8656019	1					
ANR	8656146	Callee	PNG_ROW_IN_INTERLACE_PASS		8656019	0					
ANR	8656147	Identifier	PNG_ROW_IN_INTERLACE_PASS		8656019	0					
ANR	8656148	ArgumentList	y		8656019	1					
ANR	8656149	Argument	y		8656019	0					
ANR	8656150	Identifier	y		8656019	0					
ANR	8656151	Argument	pass		8656019	1					
ANR	8656152	Identifier	pass		8656019	0					
ANR	8656153	CompoundStatement		27:15:900:955	8656019	1					
ANR	8656154	IdentifierDeclStatement	"png_byte row [ STANDARD_ROWMAX ] , display [ STANDARD_ROWMAX ] ;"	5499:15:170628:170683	8656019	0	True				
ANR	8656155	IdentifierDecl	row [ STANDARD_ROWMAX ]		8656019	0					
ANR	8656156	IdentifierDeclType	png_byte [ STANDARD_ROWMAX ]		8656019	0					
ANR	8656157	Identifier	row		8656019	1					
ANR	8656158	Identifier	STANDARD_ROWMAX		8656019	2					
ANR	8656159	IdentifierDecl	display [ STANDARD_ROWMAX ]		8656019	1					
ANR	8656160	IdentifierDeclType	png_byte [ STANDARD_ROWMAX ]		8656019	0					
ANR	8656161	Identifier	display		8656019	1					
ANR	8656162	Identifier	STANDARD_ROWMAX		8656019	2					
ANR	8656163	ExpressionStatement	"memset ( row , 0xc5 , sizeof row )"	5507:15:171100:171129	8656019	1	True				
ANR	8656164	CallExpression	"memset ( row , 0xc5 , sizeof row )"		8656019	0					
ANR	8656165	Callee	memset		8656019	0					
ANR	8656166	Identifier	memset		8656019	0					
ANR	8656167	ArgumentList	row		8656019	1					
ANR	8656168	Argument	row		8656019	0					
ANR	8656169	Identifier	row		8656019	0					
ANR	8656170	Argument	0xc5		8656019	1					
ANR	8656171	PrimaryExpression	0xc5		8656019	0					
ANR	8656172	Argument	sizeof row		8656019	2					
ANR	8656173	SizeofExpression	sizeof row		8656019	0					
ANR	8656174	Sizeof	sizeof		8656019	0					
ANR	8656175	Identifier	row		8656019	1					
ANR	8656176	ExpressionStatement	"memset ( display , 0x5c , sizeof display )"	5508:15:171146:171183	8656019	2	True				
ANR	8656177	CallExpression	"memset ( display , 0x5c , sizeof display )"		8656019	0					
ANR	8656178	Callee	memset		8656019	0					
ANR	8656179	Identifier	memset		8656019	0					
ANR	8656180	ArgumentList	display		8656019	1					
ANR	8656181	Argument	display		8656019	0					
ANR	8656182	Identifier	display		8656019	0					
ANR	8656183	Argument	0x5c		8656019	1					
ANR	8656184	PrimaryExpression	0x5c		8656019	0					
ANR	8656185	Argument	sizeof display		8656019	2					
ANR	8656186	SizeofExpression	sizeof display		8656019	0					
ANR	8656187	Sizeof	sizeof		8656019	0					
ANR	8656188	Identifier	display		8656019	1					
ANR	8656189	ExpressionStatement	"png_read_row ( pp , row , display )"	5510:15:171201:171231	8656019	3	True				
ANR	8656190	CallExpression	"png_read_row ( pp , row , display )"		8656019	0					
ANR	8656191	Callee	png_read_row		8656019	0					
ANR	8656192	Identifier	png_read_row		8656019	0					
ANR	8656193	ArgumentList	pp		8656019	1					
ANR	8656194	Argument	pp		8656019	0					
ANR	8656195	Identifier	pp		8656019	0					
ANR	8656196	Argument	row		8656019	1					
ANR	8656197	Identifier	row		8656019	0					
ANR	8656198	Argument	display		8656019	2					
ANR	8656199	Identifier	display		8656019	0					
ANR	8656200	IfStatement	if ( iImage >= 0 )		8656019	4					
ANR	8656201	Condition	iImage >= 0	5512:19:171253:171263	8656019	0	True				
ANR	8656202	RelationalExpression	iImage >= 0		8656019	0		>=			
ANR	8656203	Identifier	iImage		8656019	0					
ANR	8656204	PrimaryExpression	0		8656019	1					
ANR	8656205	ExpressionStatement	"deinterlace_row ( store_image_row ( ps , pp , iImage , y ) , row , dp -> pixel_size , dp -> w , pass , dp -> littleendian )"	5513:18:171284:171408	8656019	1	True				
ANR	8656206	CallExpression	"deinterlace_row ( store_image_row ( ps , pp , iImage , y ) , row , dp -> pixel_size , dp -> w , pass , dp -> littleendian )"		8656019	0					
ANR	8656207	Callee	deinterlace_row		8656019	0					
ANR	8656208	Identifier	deinterlace_row		8656019	0					
ANR	8656209	ArgumentList	"store_image_row ( ps , pp , iImage , y )"		8656019	1					
ANR	8656210	Argument	"store_image_row ( ps , pp , iImage , y )"		8656019	0					
ANR	8656211	CallExpression	"store_image_row ( ps , pp , iImage , y )"		8656019	0					
ANR	8656212	Callee	store_image_row		8656019	0					
ANR	8656213	Identifier	store_image_row		8656019	0					
ANR	8656214	ArgumentList	ps		8656019	1					
ANR	8656215	Argument	ps		8656019	0					
ANR	8656216	Identifier	ps		8656019	0					
ANR	8656217	Argument	pp		8656019	1					
ANR	8656218	Identifier	pp		8656019	0					
ANR	8656219	Argument	iImage		8656019	2					
ANR	8656220	Identifier	iImage		8656019	0					
ANR	8656221	Argument	y		8656019	3					
ANR	8656222	Identifier	y		8656019	0					
ANR	8656223	Argument	row		8656019	1					
ANR	8656224	Identifier	row		8656019	0					
ANR	8656225	Argument	dp -> pixel_size		8656019	2					
ANR	8656226	PtrMemberAccess	dp -> pixel_size		8656019	0					
ANR	8656227	Identifier	dp		8656019	0					
ANR	8656228	Identifier	pixel_size		8656019	1					
ANR	8656229	Argument	dp -> w		8656019	3					
ANR	8656230	PtrMemberAccess	dp -> w		8656019	0					
ANR	8656231	Identifier	dp		8656019	0					
ANR	8656232	Identifier	w		8656019	1					
ANR	8656233	Argument	pass		8656019	4					
ANR	8656234	Identifier	pass		8656019	0					
ANR	8656235	Argument	dp -> littleendian		8656019	5					
ANR	8656236	PtrMemberAccess	dp -> littleendian		8656019	0					
ANR	8656237	Identifier	dp		8656019	0					
ANR	8656238	Identifier	littleendian		8656019	1					
ANR	8656239	IfStatement	if ( iDisplay >= 0 )		8656019	5					
ANR	8656240	Condition	iDisplay >= 0	5516:19:171430:171442	8656019	0	True				
ANR	8656241	RelationalExpression	iDisplay >= 0		8656019	0		>=			
ANR	8656242	Identifier	iDisplay		8656019	0					
ANR	8656243	PrimaryExpression	0		8656019	1					
ANR	8656244	ExpressionStatement	"deinterlace_row ( store_image_row ( ps , pp , iDisplay , y ) , display , dp -> pixel_size , dp -> w , pass , dp -> littleendian )"	5517:18:171463:171593	8656019	1	True				
ANR	8656245	CallExpression	"deinterlace_row ( store_image_row ( ps , pp , iDisplay , y ) , display , dp -> pixel_size , dp -> w , pass , dp -> littleendian )"		8656019	0					
ANR	8656246	Callee	deinterlace_row		8656019	0					
ANR	8656247	Identifier	deinterlace_row		8656019	0					
ANR	8656248	ArgumentList	"store_image_row ( ps , pp , iDisplay , y )"		8656019	1					
ANR	8656249	Argument	"store_image_row ( ps , pp , iDisplay , y )"		8656019	0					
ANR	8656250	CallExpression	"store_image_row ( ps , pp , iDisplay , y )"		8656019	0					
ANR	8656251	Callee	store_image_row		8656019	0					
ANR	8656252	Identifier	store_image_row		8656019	0					
ANR	8656253	ArgumentList	ps		8656019	1					
ANR	8656254	Argument	ps		8656019	0					
ANR	8656255	Identifier	ps		8656019	0					
ANR	8656256	Argument	pp		8656019	1					
ANR	8656257	Identifier	pp		8656019	0					
ANR	8656258	Argument	iDisplay		8656019	2					
ANR	8656259	Identifier	iDisplay		8656019	0					
ANR	8656260	Argument	y		8656019	3					
ANR	8656261	Identifier	y		8656019	0					
ANR	8656262	Argument	display		8656019	1					
ANR	8656263	Identifier	display		8656019	0					
ANR	8656264	Argument	dp -> pixel_size		8656019	2					
ANR	8656265	PtrMemberAccess	dp -> pixel_size		8656019	0					
ANR	8656266	Identifier	dp		8656019	0					
ANR	8656267	Identifier	pixel_size		8656019	1					
ANR	8656268	Argument	dp -> w		8656019	3					
ANR	8656269	PtrMemberAccess	dp -> w		8656019	0					
ANR	8656270	Identifier	dp		8656019	0					
ANR	8656271	Identifier	w		8656019	1					
ANR	8656272	Argument	pass		8656019	4					
ANR	8656273	Identifier	pass		8656019	0					
ANR	8656274	Argument	dp -> littleendian		8656019	5					
ANR	8656275	PtrMemberAccess	dp -> littleendian		8656019	0					
ANR	8656276	Identifier	dp		8656019	0					
ANR	8656277	Identifier	littleendian		8656019	1					
ANR	8656278	ElseStatement	else		8656019	0					
ANR	8656279	ExpressionStatement	"png_read_row ( pp , iImage >= 0 ? store_image_row ( ps , pp , iImage , y ) : NULL , iDisplay >= 0 ? store_image_row ( ps , pp , iDisplay , y ) : NULL )"	5522:12:171646:171810	8656019	0	True				
ANR	8656280	CallExpression	"png_read_row ( pp , iImage >= 0 ? store_image_row ( ps , pp , iImage , y ) : NULL , iDisplay >= 0 ? store_image_row ( ps , pp , iDisplay , y ) : NULL )"		8656019	0					
ANR	8656281	Callee	png_read_row		8656019	0					
ANR	8656282	Identifier	png_read_row		8656019	0					
ANR	8656283	ArgumentList	pp		8656019	1					
ANR	8656284	Argument	pp		8656019	0					
ANR	8656285	Identifier	pp		8656019	0					
ANR	8656286	Argument	"iImage >= 0 ? store_image_row ( ps , pp , iImage , y ) : NULL"		8656019	1					
ANR	8656287	ConditionalExpression	"iImage >= 0 ? store_image_row ( ps , pp , iImage , y ) : NULL"		8656019	0					
ANR	8656288	Condition	iImage >= 0		8656019	0					
ANR	8656289	RelationalExpression	iImage >= 0		8656019	0		>=			
ANR	8656290	Identifier	iImage		8656019	0					
ANR	8656291	PrimaryExpression	0		8656019	1					
ANR	8656292	CallExpression	"store_image_row ( ps , pp , iImage , y )"		8656019	1					
ANR	8656293	Callee	store_image_row		8656019	0					
ANR	8656294	Identifier	store_image_row		8656019	0					
ANR	8656295	ArgumentList	ps		8656019	1					
ANR	8656296	Argument	ps		8656019	0					
ANR	8656297	Identifier	ps		8656019	0					
ANR	8656298	Argument	pp		8656019	1					
ANR	8656299	Identifier	pp		8656019	0					
ANR	8656300	Argument	iImage		8656019	2					
ANR	8656301	Identifier	iImage		8656019	0					
ANR	8656302	Argument	y		8656019	3					
ANR	8656303	Identifier	y		8656019	0					
ANR	8656304	Identifier	NULL		8656019	2					
ANR	8656305	Argument	"iDisplay >= 0 ? store_image_row ( ps , pp , iDisplay , y ) : NULL"		8656019	2					
ANR	8656306	ConditionalExpression	"iDisplay >= 0 ? store_image_row ( ps , pp , iDisplay , y ) : NULL"		8656019	0					
ANR	8656307	Condition	iDisplay >= 0		8656019	0					
ANR	8656308	RelationalExpression	iDisplay >= 0		8656019	0		>=			
ANR	8656309	Identifier	iDisplay		8656019	0					
ANR	8656310	PrimaryExpression	0		8656019	1					
ANR	8656311	CallExpression	"store_image_row ( ps , pp , iDisplay , y )"		8656019	1					
ANR	8656312	Callee	store_image_row		8656019	0					
ANR	8656313	Identifier	store_image_row		8656019	0					
ANR	8656314	ArgumentList	ps		8656019	1					
ANR	8656315	Argument	ps		8656019	0					
ANR	8656316	Identifier	ps		8656019	0					
ANR	8656317	Argument	pp		8656019	1					
ANR	8656318	Identifier	pp		8656019	0					
ANR	8656319	Argument	iDisplay		8656019	2					
ANR	8656320	Identifier	iDisplay		8656019	0					
ANR	8656321	Argument	y		8656019	3					
ANR	8656322	Identifier	y		8656019	0					
ANR	8656323	Identifier	NULL		8656019	2					
ANR	8656324	ExpressionStatement	"png_read_end ( pp , pi )"	5531:3:171991:172011	8656019	7	True				
ANR	8656325	CallExpression	"png_read_end ( pp , pi )"		8656019	0					
ANR	8656326	Callee	png_read_end		8656019	0					
ANR	8656327	Identifier	png_read_end		8656019	0					
ANR	8656328	ArgumentList	pp		8656019	1					
ANR	8656329	Argument	pp		8656019	0					
ANR	8656330	Identifier	pp		8656019	0					
ANR	8656331	Argument	pi		8656019	1					
ANR	8656332	Identifier	pi		8656019	0					
ANR	8656333	ReturnType	static void		8656019	1					
ANR	8656334	Identifier	sequential_row		8656019	2					
ANR	8656335	ParameterList	"standard_display * dp , png_structp pp , png_infop pi , const int iImage , const int iDisplay"		8656019	3					
ANR	8656336	Parameter	standard_display * dp	5471:15:169633:169652	8656019	0	True				
ANR	8656337	ParameterType	standard_display *		8656019	0					
ANR	8656338	Identifier	dp		8656019	1					
ANR	8656339	Parameter	png_structp pp	5471:37:169655:169668	8656019	1	True				
ANR	8656340	ParameterType	png_structp		8656019	0					
ANR	8656341	Identifier	pp		8656019	1					
ANR	8656342	Parameter	png_infop pi	5471:53:169671:169682	8656019	2	True				
ANR	8656343	ParameterType	png_infop		8656019	0					
ANR	8656344	Identifier	pi		8656019	1					
ANR	8656345	Parameter	const int iImage	5472:4:169689:169704	8656019	3	True				
ANR	8656346	ParameterType	const int		8656019	0					
ANR	8656347	Identifier	iImage		8656019	1					
ANR	8656348	Parameter	const int iDisplay	5472:22:169707:169724	8656019	4	True				
ANR	8656349	ParameterType	const int		8656019	0					
ANR	8656350	Identifier	iDisplay		8656019	1					
ANR	8656351	CFGEntryNode	ENTRY		8656019		True				
ANR	8656352	CFGExitNode	EXIT		8656019		True				
ANR	8656353	Symbol	pp		8656019						
ANR	8656354	Symbol	dp -> do_interlace		8656019						
ANR	8656355	Symbol	ps		8656019						
ANR	8656356	Symbol	standard_width		8656019						
ANR	8656357	Symbol	PNG_INTERLACE_ADAM7		8656019						
ANR	8656358	Symbol	dp		8656019						
ANR	8656359	Symbol	* dp		8656019						
ANR	8656360	Symbol	dp -> interlace_type		8656019						
ANR	8656361	Symbol	iImage		8656019						
ANR	8656362	Symbol	wPass		8656019						
ANR	8656363	Symbol	PNG_PASS_COLS		8656019						
ANR	8656364	Symbol	row		8656019						
ANR	8656365	Symbol	height		8656019						
ANR	8656366	Symbol	dp -> ps		8656019						
ANR	8656367	Symbol	iDisplay		8656019						
ANR	8656368	Symbol	standard_height		8656019						
ANR	8656369	Symbol	NULL		8656019						
ANR	8656370	Symbol	PNG_ROW_IN_INTERLACE_PASS		8656019						
ANR	8656371	Symbol	dp -> npasses		8656019						
ANR	8656372	Symbol	pass		8656019						
ANR	8656373	Symbol	display		8656019						
ANR	8656374	Symbol	dp -> littleendian		8656019						
ANR	8656375	Symbol	npasses		8656019						
ANR	8656376	Symbol	dp -> id		8656019						
ANR	8656377	Symbol	do_interlace		8656019						
ANR	8656378	Symbol	width		8656019						
ANR	8656379	Symbol	pi		8656019						
ANR	8656380	Symbol	y		8656019						
ANR	8656381	Symbol	dp -> w		8656019						
ANR	8656382	Symbol	store_image_row		8656019						
ANR	8656383	Symbol	dp -> pixel_size		8656019						
ANR	8656384	Function	standard_check_text	5535:0:172042:174254							
ANR	8656385	FunctionDef	"standard_check_text (png_const_structp pp , png_const_textp tp , png_const_charp keyword , png_const_charp text)"		8656384	0					
ANR	8656386	CompoundStatement		5538:0:172166:174254	8656384	0					
ANR	8656387	IdentifierDeclStatement	char msg [ 1024 ] ;	5539:3:172171:172185	8656384	0	True				
ANR	8656388	IdentifierDecl	msg [ 1024 ]		8656384	0					
ANR	8656389	IdentifierDeclType	char [ 1024 ]		8656384	0					
ANR	8656390	Identifier	msg		8656384	1					
ANR	8656391	PrimaryExpression	1024		8656384	2					
ANR	8656392	IdentifierDeclStatement	"size_t pos = safecat ( msg , sizeof msg , 0 , ""text: "" ) ;"	5540:3:172190:172240	8656384	1	True				
ANR	8656393	IdentifierDecl	"pos = safecat ( msg , sizeof msg , 0 , ""text: "" )"		8656384	0					
ANR	8656394	IdentifierDeclType	size_t		8656384	0					
ANR	8656395	Identifier	pos		8656384	1					
ANR	8656396	AssignmentExpression	"pos = safecat ( msg , sizeof msg , 0 , ""text: "" )"		8656384	2		=			
ANR	8656397	Identifier	pos		8656384	0					
ANR	8656398	CallExpression	"safecat ( msg , sizeof msg , 0 , ""text: "" )"		8656384	1					
ANR	8656399	Callee	safecat		8656384	0					
ANR	8656400	Identifier	safecat		8656384	0					
ANR	8656401	ArgumentList	msg		8656384	1					
ANR	8656402	Argument	msg		8656384	0					
ANR	8656403	Identifier	msg		8656384	0					
ANR	8656404	Argument	sizeof msg		8656384	1					
ANR	8656405	SizeofExpression	sizeof msg		8656384	0					
ANR	8656406	Sizeof	sizeof		8656384	0					
ANR	8656407	Identifier	msg		8656384	1					
ANR	8656408	Argument	0		8656384	2					
ANR	8656409	PrimaryExpression	0		8656384	0					
ANR	8656410	Argument	"""text: """		8656384	3					
ANR	8656411	PrimaryExpression	"""text: """		8656384	0					
ANR	8656412	IdentifierDeclStatement	size_t ok ;	5541:3:172245:172254	8656384	2	True				
ANR	8656413	IdentifierDecl	ok		8656384	0					
ANR	8656414	IdentifierDeclType	size_t		8656384	0					
ANR	8656415	Identifier	ok		8656384	1					
ANR	8656416	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , keyword )"	5543:3:172260:172304	8656384	3	True				
ANR	8656417	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , keyword )"		8656384	0		=			
ANR	8656418	Identifier	pos		8656384	0					
ANR	8656419	CallExpression	"safecat ( msg , sizeof msg , pos , keyword )"		8656384	1					
ANR	8656420	Callee	safecat		8656384	0					
ANR	8656421	Identifier	safecat		8656384	0					
ANR	8656422	ArgumentList	msg		8656384	1					
ANR	8656423	Argument	msg		8656384	0					
ANR	8656424	Identifier	msg		8656384	0					
ANR	8656425	Argument	sizeof msg		8656384	1					
ANR	8656426	SizeofExpression	sizeof msg		8656384	0					
ANR	8656427	Sizeof	sizeof		8656384	0					
ANR	8656428	Identifier	msg		8656384	1					
ANR	8656429	Argument	pos		8656384	2					
ANR	8656430	Identifier	pos		8656384	0					
ANR	8656431	Argument	keyword		8656384	3					
ANR	8656432	Identifier	keyword		8656384	0					
ANR	8656433	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "": "" )"	5544:3:172309:172350	8656384	4	True				
ANR	8656434	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "": "" )"		8656384	0		=			
ANR	8656435	Identifier	pos		8656384	0					
ANR	8656436	CallExpression	"safecat ( msg , sizeof msg , pos , "": "" )"		8656384	1					
ANR	8656437	Callee	safecat		8656384	0					
ANR	8656438	Identifier	safecat		8656384	0					
ANR	8656439	ArgumentList	msg		8656384	1					
ANR	8656440	Argument	msg		8656384	0					
ANR	8656441	Identifier	msg		8656384	0					
ANR	8656442	Argument	sizeof msg		8656384	1					
ANR	8656443	SizeofExpression	sizeof msg		8656384	0					
ANR	8656444	Sizeof	sizeof		8656384	0					
ANR	8656445	Identifier	msg		8656384	1					
ANR	8656446	Argument	pos		8656384	2					
ANR	8656447	Identifier	pos		8656384	0					
ANR	8656448	Argument	""": """		8656384	3					
ANR	8656449	PrimaryExpression	""": """		8656384	0					
ANR	8656450	ExpressionStatement	ok = pos	5545:3:172355:172363	8656384	5	True				
ANR	8656451	AssignmentExpression	ok = pos		8656384	0		=			
ANR	8656452	Identifier	ok		8656384	0					
ANR	8656453	Identifier	pos		8656384	1					
ANR	8656454	IfStatement	if ( tp -> compression != TEXT_COMPRESSION )		8656384	6					
ANR	8656455	Condition	tp -> compression != TEXT_COMPRESSION	5547:7:172373:172407	8656384	0	True				
ANR	8656456	EqualityExpression	tp -> compression != TEXT_COMPRESSION		8656384	0		!=			
ANR	8656457	PtrMemberAccess	tp -> compression		8656384	0					
ANR	8656458	Identifier	tp		8656384	0					
ANR	8656459	Identifier	compression		8656384	1					
ANR	8656460	Identifier	TEXT_COMPRESSION		8656384	1					
ANR	8656461	CompoundStatement		12:6:254:266	8656384	1					
ANR	8656462	IdentifierDeclStatement	char buf [ 64 ] ;	5549:6:172421:172433	8656384	0	True				
ANR	8656463	IdentifierDecl	buf [ 64 ]		8656384	0					
ANR	8656464	IdentifierDeclType	char [ 64 ]		8656384	0					
ANR	8656465	Identifier	buf		8656384	1					
ANR	8656466	PrimaryExpression	64		8656384	2					
ANR	8656467	ExpressionStatement	"sprintf ( buf , ""compression [%d->%d], "" , TEXT_COMPRESSION , tp -> compression )"	5551:6:172442:172524	8656384	1	True				
ANR	8656468	CallExpression	"sprintf ( buf , ""compression [%d->%d], "" , TEXT_COMPRESSION , tp -> compression )"		8656384	0					
ANR	8656469	Callee	sprintf		8656384	0					
ANR	8656470	Identifier	sprintf		8656384	0					
ANR	8656471	ArgumentList	buf		8656384	1					
ANR	8656472	Argument	buf		8656384	0					
ANR	8656473	Identifier	buf		8656384	0					
ANR	8656474	Argument	"""compression [%d->%d], """		8656384	1					
ANR	8656475	PrimaryExpression	"""compression [%d->%d], """		8656384	0					
ANR	8656476	Argument	TEXT_COMPRESSION		8656384	2					
ANR	8656477	Identifier	TEXT_COMPRESSION		8656384	0					
ANR	8656478	Argument	tp -> compression		8656384	3					
ANR	8656479	PtrMemberAccess	tp -> compression		8656384	0					
ANR	8656480	Identifier	tp		8656384	0					
ANR	8656481	Identifier	compression		8656384	1					
ANR	8656482	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , buf )"	5553:6:172532:172572	8656384	2	True				
ANR	8656483	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , buf )"		8656384	0		=			
ANR	8656484	Identifier	pos		8656384	0					
ANR	8656485	CallExpression	"safecat ( msg , sizeof msg , pos , buf )"		8656384	1					
ANR	8656486	Callee	safecat		8656384	0					
ANR	8656487	Identifier	safecat		8656384	0					
ANR	8656488	ArgumentList	msg		8656384	1					
ANR	8656489	Argument	msg		8656384	0					
ANR	8656490	Identifier	msg		8656384	0					
ANR	8656491	Argument	sizeof msg		8656384	1					
ANR	8656492	SizeofExpression	sizeof msg		8656384	0					
ANR	8656493	Sizeof	sizeof		8656384	0					
ANR	8656494	Identifier	msg		8656384	1					
ANR	8656495	Argument	pos		8656384	2					
ANR	8656496	Identifier	pos		8656384	0					
ANR	8656497	Argument	buf		8656384	3					
ANR	8656498	Identifier	buf		8656384	0					
ANR	8656499	IfStatement	"if ( tp -> key == NULL || strcmp ( tp -> key , keyword ) != 0 )"		8656384	7					
ANR	8656500	Condition	"tp -> key == NULL || strcmp ( tp -> key , keyword ) != 0"	5556:7:172587:172634	8656384	0	True				
ANR	8656501	OrExpression	"tp -> key == NULL || strcmp ( tp -> key , keyword ) != 0"		8656384	0		||			
ANR	8656502	EqualityExpression	tp -> key == NULL		8656384	0		==			
ANR	8656503	PtrMemberAccess	tp -> key		8656384	0					
ANR	8656504	Identifier	tp		8656384	0					
ANR	8656505	Identifier	key		8656384	1					
ANR	8656506	Identifier	NULL		8656384	1					
ANR	8656507	EqualityExpression	"strcmp ( tp -> key , keyword ) != 0"		8656384	1		!=			
ANR	8656508	CallExpression	"strcmp ( tp -> key , keyword )"		8656384	0					
ANR	8656509	Callee	strcmp		8656384	0					
ANR	8656510	Identifier	strcmp		8656384	0					
ANR	8656511	ArgumentList	tp -> key		8656384	1					
ANR	8656512	Argument	tp -> key		8656384	0					
ANR	8656513	PtrMemberAccess	tp -> key		8656384	0					
ANR	8656514	Identifier	tp		8656384	0					
ANR	8656515	Identifier	key		8656384	1					
ANR	8656516	Argument	keyword		8656384	1					
ANR	8656517	Identifier	keyword		8656384	0					
ANR	8656518	PrimaryExpression	0		8656384	1					
ANR	8656519	CompoundStatement		20:3:473:473	8656384	1					
ANR	8656520	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""keyword \\"""" )"	5558:6:172648:172697	8656384	0	True				
ANR	8656521	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""keyword \\"""" )"		8656384	0		=			
ANR	8656522	Identifier	pos		8656384	0					
ANR	8656523	CallExpression	"safecat ( msg , sizeof msg , pos , ""keyword \\"""" )"		8656384	1					
ANR	8656524	Callee	safecat		8656384	0					
ANR	8656525	Identifier	safecat		8656384	0					
ANR	8656526	ArgumentList	msg		8656384	1					
ANR	8656527	Argument	msg		8656384	0					
ANR	8656528	Identifier	msg		8656384	0					
ANR	8656529	Argument	sizeof msg		8656384	1					
ANR	8656530	SizeofExpression	sizeof msg		8656384	0					
ANR	8656531	Sizeof	sizeof		8656384	0					
ANR	8656532	Identifier	msg		8656384	1					
ANR	8656533	Argument	pos		8656384	2					
ANR	8656534	Identifier	pos		8656384	0					
ANR	8656535	Argument	"""keyword \\"""""		8656384	3					
ANR	8656536	PrimaryExpression	"""keyword \\"""""		8656384	0					
ANR	8656537	IfStatement	if ( tp -> key != NULL )		8656384	1					
ANR	8656538	Condition	tp -> key != NULL	5559:10:172709:172723	8656384	0	True				
ANR	8656539	EqualityExpression	tp -> key != NULL		8656384	0		!=			
ANR	8656540	PtrMemberAccess	tp -> key		8656384	0					
ANR	8656541	Identifier	tp		8656384	0					
ANR	8656542	Identifier	key		8656384	1					
ANR	8656543	Identifier	NULL		8656384	1					
ANR	8656544	CompoundStatement		23:6:565:565	8656384	1					
ANR	8656545	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , tp -> key )"	5561:9:172743:172787	8656384	0	True				
ANR	8656546	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , tp -> key )"		8656384	0		=			
ANR	8656547	Identifier	pos		8656384	0					
ANR	8656548	CallExpression	"safecat ( msg , sizeof msg , pos , tp -> key )"		8656384	1					
ANR	8656549	Callee	safecat		8656384	0					
ANR	8656550	Identifier	safecat		8656384	0					
ANR	8656551	ArgumentList	msg		8656384	1					
ANR	8656552	Argument	msg		8656384	0					
ANR	8656553	Identifier	msg		8656384	0					
ANR	8656554	Argument	sizeof msg		8656384	1					
ANR	8656555	SizeofExpression	sizeof msg		8656384	0					
ANR	8656556	Sizeof	sizeof		8656384	0					
ANR	8656557	Identifier	msg		8656384	1					
ANR	8656558	Argument	pos		8656384	2					
ANR	8656559	Identifier	pos		8656384	0					
ANR	8656560	Argument	tp -> key		8656384	3					
ANR	8656561	PtrMemberAccess	tp -> key		8656384	0					
ANR	8656562	Identifier	tp		8656384	0					
ANR	8656563	Identifier	key		8656384	1					
ANR	8656564	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\"", "" )"	5562:9:172798:172841	8656384	1	True				
ANR	8656565	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\"", "" )"		8656384	0		=			
ANR	8656566	Identifier	pos		8656384	0					
ANR	8656567	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\"", "" )"		8656384	1					
ANR	8656568	Callee	safecat		8656384	0					
ANR	8656569	Identifier	safecat		8656384	0					
ANR	8656570	ArgumentList	msg		8656384	1					
ANR	8656571	Argument	msg		8656384	0					
ANR	8656572	Identifier	msg		8656384	0					
ANR	8656573	Argument	sizeof msg		8656384	1					
ANR	8656574	SizeofExpression	sizeof msg		8656384	0					
ANR	8656575	Sizeof	sizeof		8656384	0					
ANR	8656576	Identifier	msg		8656384	1					
ANR	8656577	Argument	pos		8656384	2					
ANR	8656578	Identifier	pos		8656384	0					
ANR	8656579	Argument	"""\\"", """		8656384	3					
ANR	8656580	PrimaryExpression	"""\\"", """		8656384	0					
ANR	8656581	ElseStatement	else		8656384	0					
ANR	8656582	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""null, "" )"	5566:9:172872:172917	8656384	0	True				
ANR	8656583	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""null, "" )"		8656384	0		=			
ANR	8656584	Identifier	pos		8656384	0					
ANR	8656585	CallExpression	"safecat ( msg , sizeof msg , pos , ""null, "" )"		8656384	1					
ANR	8656586	Callee	safecat		8656384	0					
ANR	8656587	Identifier	safecat		8656384	0					
ANR	8656588	ArgumentList	msg		8656384	1					
ANR	8656589	Argument	msg		8656384	0					
ANR	8656590	Identifier	msg		8656384	0					
ANR	8656591	Argument	sizeof msg		8656384	1					
ANR	8656592	SizeofExpression	sizeof msg		8656384	0					
ANR	8656593	Sizeof	sizeof		8656384	0					
ANR	8656594	Identifier	msg		8656384	1					
ANR	8656595	Argument	pos		8656384	2					
ANR	8656596	Identifier	pos		8656384	0					
ANR	8656597	Argument	"""null, """		8656384	3					
ANR	8656598	PrimaryExpression	"""null, """		8656384	0					
ANR	8656599	IfStatement	if ( tp -> text == NULL )		8656384	8					
ANR	8656600	Condition	tp -> text == NULL	5569:7:172932:172947	8656384	0	True				
ANR	8656601	EqualityExpression	tp -> text == NULL		8656384	0		==			
ANR	8656602	PtrMemberAccess	tp -> text		8656384	0					
ANR	8656603	Identifier	tp		8656384	0					
ANR	8656604	Identifier	text		8656384	1					
ANR	8656605	Identifier	NULL		8656384	1					
ANR	8656606	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""text lost, "" )"	5570:6:172956:173006	8656384	1	True				
ANR	8656607	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""text lost, "" )"		8656384	0		=			
ANR	8656608	Identifier	pos		8656384	0					
ANR	8656609	CallExpression	"safecat ( msg , sizeof msg , pos , ""text lost, "" )"		8656384	1					
ANR	8656610	Callee	safecat		8656384	0					
ANR	8656611	Identifier	safecat		8656384	0					
ANR	8656612	ArgumentList	msg		8656384	1					
ANR	8656613	Argument	msg		8656384	0					
ANR	8656614	Identifier	msg		8656384	0					
ANR	8656615	Argument	sizeof msg		8656384	1					
ANR	8656616	SizeofExpression	sizeof msg		8656384	0					
ANR	8656617	Sizeof	sizeof		8656384	0					
ANR	8656618	Identifier	msg		8656384	1					
ANR	8656619	Argument	pos		8656384	2					
ANR	8656620	Identifier	pos		8656384	0					
ANR	8656621	Argument	"""text lost, """		8656384	3					
ANR	8656622	PrimaryExpression	"""text lost, """		8656384	0					
ANR	8656623	ElseStatement	else		8656384	0					
ANR	8656624	CompoundStatement		36:3:853:853	8656384	0					
ANR	8656625	IfStatement	if ( tp -> text_length != strlen ( text ) )		8656384	0					
ANR	8656626	Condition	tp -> text_length != strlen ( text )	5574:10:173032:173062	8656384	0	True				
ANR	8656627	EqualityExpression	tp -> text_length != strlen ( text )		8656384	0		!=			
ANR	8656628	PtrMemberAccess	tp -> text_length		8656384	0					
ANR	8656629	Identifier	tp		8656384	0					
ANR	8656630	Identifier	text_length		8656384	1					
ANR	8656631	CallExpression	strlen ( text )		8656384	1					
ANR	8656632	Callee	strlen		8656384	0					
ANR	8656633	Identifier	strlen		8656384	0					
ANR	8656634	ArgumentList	text		8656384	1					
ANR	8656635	Argument	text		8656384	0					
ANR	8656636	Identifier	text		8656384	0					
ANR	8656637	CompoundStatement		39:9:915:927	8656384	1					
ANR	8656638	IdentifierDeclStatement	char buf [ 64 ] ;	5576:9:173082:173094	8656384	0	True				
ANR	8656639	IdentifierDecl	buf [ 64 ]		8656384	0					
ANR	8656640	IdentifierDeclType	char [ 64 ]		8656384	0					
ANR	8656641	Identifier	buf		8656384	1					
ANR	8656642	PrimaryExpression	64		8656384	2					
ANR	8656643	ExpressionStatement	"sprintf ( buf , ""text length changed[%lu->%lu], "" , ( unsigned long ) strlen ( text ) , ( unsigned long ) tp -> text_length )"	5577:9:173105:173225	8656384	1	True				
ANR	8656644	CallExpression	"sprintf ( buf , ""text length changed[%lu->%lu], "" , ( unsigned long ) strlen ( text ) , ( unsigned long ) tp -> text_length )"		8656384	0					
ANR	8656645	Callee	sprintf		8656384	0					
ANR	8656646	Identifier	sprintf		8656384	0					
ANR	8656647	ArgumentList	buf		8656384	1					
ANR	8656648	Argument	buf		8656384	0					
ANR	8656649	Identifier	buf		8656384	0					
ANR	8656650	Argument	"""text length changed[%lu->%lu], """		8656384	1					
ANR	8656651	PrimaryExpression	"""text length changed[%lu->%lu], """		8656384	0					
ANR	8656652	Argument	( unsigned long ) strlen ( text )		8656384	2					
ANR	8656653	CastExpression	( unsigned long ) strlen ( text )		8656384	0					
ANR	8656654	CastTarget	unsigned long		8656384	0					
ANR	8656655	CallExpression	strlen ( text )		8656384	1					
ANR	8656656	Callee	strlen		8656384	0					
ANR	8656657	Identifier	strlen		8656384	0					
ANR	8656658	ArgumentList	text		8656384	1					
ANR	8656659	Argument	text		8656384	0					
ANR	8656660	Identifier	text		8656384	0					
ANR	8656661	Argument	( unsigned long ) tp -> text_length		8656384	3					
ANR	8656662	CastExpression	( unsigned long ) tp -> text_length		8656384	0					
ANR	8656663	CastTarget	unsigned long		8656384	0					
ANR	8656664	PtrMemberAccess	tp -> text_length		8656384	1					
ANR	8656665	Identifier	tp		8656384	0					
ANR	8656666	Identifier	text_length		8656384	1					
ANR	8656667	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , buf )"	5579:9:173236:173276	8656384	2	True				
ANR	8656668	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , buf )"		8656384	0		=			
ANR	8656669	Identifier	pos		8656384	0					
ANR	8656670	CallExpression	"safecat ( msg , sizeof msg , pos , buf )"		8656384	1					
ANR	8656671	Callee	safecat		8656384	0					
ANR	8656672	Identifier	safecat		8656384	0					
ANR	8656673	ArgumentList	msg		8656384	1					
ANR	8656674	Argument	msg		8656384	0					
ANR	8656675	Identifier	msg		8656384	0					
ANR	8656676	Argument	sizeof msg		8656384	1					
ANR	8656677	SizeofExpression	sizeof msg		8656384	0					
ANR	8656678	Sizeof	sizeof		8656384	0					
ANR	8656679	Identifier	msg		8656384	1					
ANR	8656680	Argument	pos		8656384	2					
ANR	8656681	Identifier	pos		8656384	0					
ANR	8656682	Argument	buf		8656384	3					
ANR	8656683	Identifier	buf		8656384	0					
ANR	8656684	IfStatement	"if ( strcmp ( tp -> text , text ) != 0 )"		8656384	1					
ANR	8656685	Condition	"strcmp ( tp -> text , text ) != 0"	5582:10:173297:173323	8656384	0	True				
ANR	8656686	EqualityExpression	"strcmp ( tp -> text , text ) != 0"		8656384	0		!=			
ANR	8656687	CallExpression	"strcmp ( tp -> text , text )"		8656384	0					
ANR	8656688	Callee	strcmp		8656384	0					
ANR	8656689	Identifier	strcmp		8656384	0					
ANR	8656690	ArgumentList	tp -> text		8656384	1					
ANR	8656691	Argument	tp -> text		8656384	0					
ANR	8656692	PtrMemberAccess	tp -> text		8656384	0					
ANR	8656693	Identifier	tp		8656384	0					
ANR	8656694	Identifier	text		8656384	1					
ANR	8656695	Argument	text		8656384	1					
ANR	8656696	Identifier	text		8656384	0					
ANR	8656697	PrimaryExpression	0		8656384	1					
ANR	8656698	CompoundStatement		46:6:1165:1165	8656384	1					
ANR	8656699	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""text becomes \\"""" )"	5584:9:173343:173397	8656384	0	True				
ANR	8656700	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""text becomes \\"""" )"		8656384	0		=			
ANR	8656701	Identifier	pos		8656384	0					
ANR	8656702	CallExpression	"safecat ( msg , sizeof msg , pos , ""text becomes \\"""" )"		8656384	1					
ANR	8656703	Callee	safecat		8656384	0					
ANR	8656704	Identifier	safecat		8656384	0					
ANR	8656705	ArgumentList	msg		8656384	1					
ANR	8656706	Argument	msg		8656384	0					
ANR	8656707	Identifier	msg		8656384	0					
ANR	8656708	Argument	sizeof msg		8656384	1					
ANR	8656709	SizeofExpression	sizeof msg		8656384	0					
ANR	8656710	Sizeof	sizeof		8656384	0					
ANR	8656711	Identifier	msg		8656384	1					
ANR	8656712	Argument	pos		8656384	2					
ANR	8656713	Identifier	pos		8656384	0					
ANR	8656714	Argument	"""text becomes \\"""""		8656384	3					
ANR	8656715	PrimaryExpression	"""text becomes \\"""""		8656384	0					
ANR	8656716	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , tp -> text )"	5585:9:173408:173453	8656384	1	True				
ANR	8656717	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , tp -> text )"		8656384	0		=			
ANR	8656718	Identifier	pos		8656384	0					
ANR	8656719	CallExpression	"safecat ( msg , sizeof msg , pos , tp -> text )"		8656384	1					
ANR	8656720	Callee	safecat		8656384	0					
ANR	8656721	Identifier	safecat		8656384	0					
ANR	8656722	ArgumentList	msg		8656384	1					
ANR	8656723	Argument	msg		8656384	0					
ANR	8656724	Identifier	msg		8656384	0					
ANR	8656725	Argument	sizeof msg		8656384	1					
ANR	8656726	SizeofExpression	sizeof msg		8656384	0					
ANR	8656727	Sizeof	sizeof		8656384	0					
ANR	8656728	Identifier	msg		8656384	1					
ANR	8656729	Argument	pos		8656384	2					
ANR	8656730	Identifier	pos		8656384	0					
ANR	8656731	Argument	tp -> text		8656384	3					
ANR	8656732	PtrMemberAccess	tp -> text		8656384	0					
ANR	8656733	Identifier	tp		8656384	0					
ANR	8656734	Identifier	text		8656384	1					
ANR	8656735	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\"" (was \\"""" )"	5586:9:173464:173513	8656384	2	True				
ANR	8656736	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\"" (was \\"""" )"		8656384	0		=			
ANR	8656737	Identifier	pos		8656384	0					
ANR	8656738	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\"" (was \\"""" )"		8656384	1					
ANR	8656739	Callee	safecat		8656384	0					
ANR	8656740	Identifier	safecat		8656384	0					
ANR	8656741	ArgumentList	msg		8656384	1					
ANR	8656742	Argument	msg		8656384	0					
ANR	8656743	Identifier	msg		8656384	0					
ANR	8656744	Argument	sizeof msg		8656384	1					
ANR	8656745	SizeofExpression	sizeof msg		8656384	0					
ANR	8656746	Sizeof	sizeof		8656384	0					
ANR	8656747	Identifier	msg		8656384	1					
ANR	8656748	Argument	pos		8656384	2					
ANR	8656749	Identifier	pos		8656384	0					
ANR	8656750	Argument	"""\\"" (was \\"""""		8656384	3					
ANR	8656751	PrimaryExpression	"""\\"" (was \\"""""		8656384	0					
ANR	8656752	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , text )"	5587:9:173524:173565	8656384	3	True				
ANR	8656753	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , text )"		8656384	0		=			
ANR	8656754	Identifier	pos		8656384	0					
ANR	8656755	CallExpression	"safecat ( msg , sizeof msg , pos , text )"		8656384	1					
ANR	8656756	Callee	safecat		8656384	0					
ANR	8656757	Identifier	safecat		8656384	0					
ANR	8656758	ArgumentList	msg		8656384	1					
ANR	8656759	Argument	msg		8656384	0					
ANR	8656760	Identifier	msg		8656384	0					
ANR	8656761	Argument	sizeof msg		8656384	1					
ANR	8656762	SizeofExpression	sizeof msg		8656384	0					
ANR	8656763	Sizeof	sizeof		8656384	0					
ANR	8656764	Identifier	msg		8656384	1					
ANR	8656765	Argument	pos		8656384	2					
ANR	8656766	Identifier	pos		8656384	0					
ANR	8656767	Argument	text		8656384	3					
ANR	8656768	Identifier	text		8656384	0					
ANR	8656769	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\""), "" )"	5588:9:173576:173620	8656384	4	True				
ANR	8656770	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\""), "" )"		8656384	0		=			
ANR	8656771	Identifier	pos		8656384	0					
ANR	8656772	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\""), "" )"		8656384	1					
ANR	8656773	Callee	safecat		8656384	0					
ANR	8656774	Identifier	safecat		8656384	0					
ANR	8656775	ArgumentList	msg		8656384	1					
ANR	8656776	Argument	msg		8656384	0					
ANR	8656777	Identifier	msg		8656384	0					
ANR	8656778	Argument	sizeof msg		8656384	1					
ANR	8656779	SizeofExpression	sizeof msg		8656384	0					
ANR	8656780	Sizeof	sizeof		8656384	0					
ANR	8656781	Identifier	msg		8656384	1					
ANR	8656782	Argument	pos		8656384	2					
ANR	8656783	Identifier	pos		8656384	0					
ANR	8656784	Argument	"""\\""), """		8656384	3					
ANR	8656785	PrimaryExpression	"""\\""), """		8656384	0					
ANR	8656786	IfStatement	if ( tp -> itxt_length != 0 )		8656384	9					
ANR	8656787	Condition	tp -> itxt_length != 0	5592:7:173643:173662	8656384	0	True				
ANR	8656788	EqualityExpression	tp -> itxt_length != 0		8656384	0		!=			
ANR	8656789	PtrMemberAccess	tp -> itxt_length		8656384	0					
ANR	8656790	Identifier	tp		8656384	0					
ANR	8656791	Identifier	itxt_length		8656384	1					
ANR	8656792	PrimaryExpression	0		8656384	1					
ANR	8656793	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""iTXt length set, "" )"	5593:6:173671:173727	8656384	1	True				
ANR	8656794	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""iTXt length set, "" )"		8656384	0		=			
ANR	8656795	Identifier	pos		8656384	0					
ANR	8656796	CallExpression	"safecat ( msg , sizeof msg , pos , ""iTXt length set, "" )"		8656384	1					
ANR	8656797	Callee	safecat		8656384	0					
ANR	8656798	Identifier	safecat		8656384	0					
ANR	8656799	ArgumentList	msg		8656384	1					
ANR	8656800	Argument	msg		8656384	0					
ANR	8656801	Identifier	msg		8656384	0					
ANR	8656802	Argument	sizeof msg		8656384	1					
ANR	8656803	SizeofExpression	sizeof msg		8656384	0					
ANR	8656804	Sizeof	sizeof		8656384	0					
ANR	8656805	Identifier	msg		8656384	1					
ANR	8656806	Argument	pos		8656384	2					
ANR	8656807	Identifier	pos		8656384	0					
ANR	8656808	Argument	"""iTXt length set, """		8656384	3					
ANR	8656809	PrimaryExpression	"""iTXt length set, """		8656384	0					
ANR	8656810	IfStatement	if ( tp -> lang != NULL )		8656384	10					
ANR	8656811	Condition	tp -> lang != NULL	5595:7:173737:173752	8656384	0	True				
ANR	8656812	EqualityExpression	tp -> lang != NULL		8656384	0		!=			
ANR	8656813	PtrMemberAccess	tp -> lang		8656384	0					
ANR	8656814	Identifier	tp		8656384	0					
ANR	8656815	Identifier	lang		8656384	1					
ANR	8656816	Identifier	NULL		8656384	1					
ANR	8656817	CompoundStatement		59:3:1591:1591	8656384	1					
ANR	8656818	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""iTXt language \\"""" )"	5597:6:173766:173821	8656384	0	True				
ANR	8656819	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""iTXt language \\"""" )"		8656384	0		=			
ANR	8656820	Identifier	pos		8656384	0					
ANR	8656821	CallExpression	"safecat ( msg , sizeof msg , pos , ""iTXt language \\"""" )"		8656384	1					
ANR	8656822	Callee	safecat		8656384	0					
ANR	8656823	Identifier	safecat		8656384	0					
ANR	8656824	ArgumentList	msg		8656384	1					
ANR	8656825	Argument	msg		8656384	0					
ANR	8656826	Identifier	msg		8656384	0					
ANR	8656827	Argument	sizeof msg		8656384	1					
ANR	8656828	SizeofExpression	sizeof msg		8656384	0					
ANR	8656829	Sizeof	sizeof		8656384	0					
ANR	8656830	Identifier	msg		8656384	1					
ANR	8656831	Argument	pos		8656384	2					
ANR	8656832	Identifier	pos		8656384	0					
ANR	8656833	Argument	"""iTXt language \\"""""		8656384	3					
ANR	8656834	PrimaryExpression	"""iTXt language \\"""""		8656384	0					
ANR	8656835	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , tp -> lang )"	5598:6:173829:173874	8656384	1	True				
ANR	8656836	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , tp -> lang )"		8656384	0		=			
ANR	8656837	Identifier	pos		8656384	0					
ANR	8656838	CallExpression	"safecat ( msg , sizeof msg , pos , tp -> lang )"		8656384	1					
ANR	8656839	Callee	safecat		8656384	0					
ANR	8656840	Identifier	safecat		8656384	0					
ANR	8656841	ArgumentList	msg		8656384	1					
ANR	8656842	Argument	msg		8656384	0					
ANR	8656843	Identifier	msg		8656384	0					
ANR	8656844	Argument	sizeof msg		8656384	1					
ANR	8656845	SizeofExpression	sizeof msg		8656384	0					
ANR	8656846	Sizeof	sizeof		8656384	0					
ANR	8656847	Identifier	msg		8656384	1					
ANR	8656848	Argument	pos		8656384	2					
ANR	8656849	Identifier	pos		8656384	0					
ANR	8656850	Argument	tp -> lang		8656384	3					
ANR	8656851	PtrMemberAccess	tp -> lang		8656384	0					
ANR	8656852	Identifier	tp		8656384	0					
ANR	8656853	Identifier	lang		8656384	1					
ANR	8656854	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\"", "" )"	5599:6:173882:173925	8656384	2	True				
ANR	8656855	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\"", "" )"		8656384	0		=			
ANR	8656856	Identifier	pos		8656384	0					
ANR	8656857	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\"", "" )"		8656384	1					
ANR	8656858	Callee	safecat		8656384	0					
ANR	8656859	Identifier	safecat		8656384	0					
ANR	8656860	ArgumentList	msg		8656384	1					
ANR	8656861	Argument	msg		8656384	0					
ANR	8656862	Identifier	msg		8656384	0					
ANR	8656863	Argument	sizeof msg		8656384	1					
ANR	8656864	SizeofExpression	sizeof msg		8656384	0					
ANR	8656865	Sizeof	sizeof		8656384	0					
ANR	8656866	Identifier	msg		8656384	1					
ANR	8656867	Argument	pos		8656384	2					
ANR	8656868	Identifier	pos		8656384	0					
ANR	8656869	Argument	"""\\"", """		8656384	3					
ANR	8656870	PrimaryExpression	"""\\"", """		8656384	0					
ANR	8656871	IfStatement	if ( tp -> lang_key != NULL )		8656384	11					
ANR	8656872	Condition	tp -> lang_key != NULL	5602:7:173940:173959	8656384	0	True				
ANR	8656873	EqualityExpression	tp -> lang_key != NULL		8656384	0		!=			
ANR	8656874	PtrMemberAccess	tp -> lang_key		8656384	0					
ANR	8656875	Identifier	tp		8656384	0					
ANR	8656876	Identifier	lang_key		8656384	1					
ANR	8656877	Identifier	NULL		8656384	1					
ANR	8656878	CompoundStatement		66:3:1798:1798	8656384	1					
ANR	8656879	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""iTXt keyword \\"""" )"	5604:6:173973:174027	8656384	0	True				
ANR	8656880	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""iTXt keyword \\"""" )"		8656384	0		=			
ANR	8656881	Identifier	pos		8656384	0					
ANR	8656882	CallExpression	"safecat ( msg , sizeof msg , pos , ""iTXt keyword \\"""" )"		8656384	1					
ANR	8656883	Callee	safecat		8656384	0					
ANR	8656884	Identifier	safecat		8656384	0					
ANR	8656885	ArgumentList	msg		8656384	1					
ANR	8656886	Argument	msg		8656384	0					
ANR	8656887	Identifier	msg		8656384	0					
ANR	8656888	Argument	sizeof msg		8656384	1					
ANR	8656889	SizeofExpression	sizeof msg		8656384	0					
ANR	8656890	Sizeof	sizeof		8656384	0					
ANR	8656891	Identifier	msg		8656384	1					
ANR	8656892	Argument	pos		8656384	2					
ANR	8656893	Identifier	pos		8656384	0					
ANR	8656894	Argument	"""iTXt keyword \\"""""		8656384	3					
ANR	8656895	PrimaryExpression	"""iTXt keyword \\"""""		8656384	0					
ANR	8656896	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , tp -> lang_key )"	5605:6:174035:174084	8656384	1	True				
ANR	8656897	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , tp -> lang_key )"		8656384	0		=			
ANR	8656898	Identifier	pos		8656384	0					
ANR	8656899	CallExpression	"safecat ( msg , sizeof msg , pos , tp -> lang_key )"		8656384	1					
ANR	8656900	Callee	safecat		8656384	0					
ANR	8656901	Identifier	safecat		8656384	0					
ANR	8656902	ArgumentList	msg		8656384	1					
ANR	8656903	Argument	msg		8656384	0					
ANR	8656904	Identifier	msg		8656384	0					
ANR	8656905	Argument	sizeof msg		8656384	1					
ANR	8656906	SizeofExpression	sizeof msg		8656384	0					
ANR	8656907	Sizeof	sizeof		8656384	0					
ANR	8656908	Identifier	msg		8656384	1					
ANR	8656909	Argument	pos		8656384	2					
ANR	8656910	Identifier	pos		8656384	0					
ANR	8656911	Argument	tp -> lang_key		8656384	3					
ANR	8656912	PtrMemberAccess	tp -> lang_key		8656384	0					
ANR	8656913	Identifier	tp		8656384	0					
ANR	8656914	Identifier	lang_key		8656384	1					
ANR	8656915	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\"", "" )"	5606:6:174092:174135	8656384	2	True				
ANR	8656916	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\"", "" )"		8656384	0		=			
ANR	8656917	Identifier	pos		8656384	0					
ANR	8656918	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\"", "" )"		8656384	1					
ANR	8656919	Callee	safecat		8656384	0					
ANR	8656920	Identifier	safecat		8656384	0					
ANR	8656921	ArgumentList	msg		8656384	1					
ANR	8656922	Argument	msg		8656384	0					
ANR	8656923	Identifier	msg		8656384	0					
ANR	8656924	Argument	sizeof msg		8656384	1					
ANR	8656925	SizeofExpression	sizeof msg		8656384	0					
ANR	8656926	Sizeof	sizeof		8656384	0					
ANR	8656927	Identifier	msg		8656384	1					
ANR	8656928	Argument	pos		8656384	2					
ANR	8656929	Identifier	pos		8656384	0					
ANR	8656930	Argument	"""\\"", """		8656384	3					
ANR	8656931	PrimaryExpression	"""\\"", """		8656384	0					
ANR	8656932	IfStatement	if ( pos > ok )		8656384	12					
ANR	8656933	Condition	pos > ok	5609:7:174150:174157	8656384	0	True				
ANR	8656934	RelationalExpression	pos > ok		8656384	0		>			
ANR	8656935	Identifier	pos		8656384	0					
ANR	8656936	Identifier	ok		8656384	1					
ANR	8656937	CompoundStatement		73:3:1996:1996	8656384	1					
ANR	8656938	ExpressionStatement	msg [ pos - 2 ] = '\\0'	5611:6:174171:174188	8656384	0	True				
ANR	8656939	AssignmentExpression	msg [ pos - 2 ] = '\\0'		8656384	0		=			
ANR	8656940	ArrayIndexing	msg [ pos - 2 ]		8656384	0					
ANR	8656941	Identifier	msg		8656384	0					
ANR	8656942	AdditiveExpression	pos - 2		8656384	1		-			
ANR	8656943	Identifier	pos		8656384	0					
ANR	8656944	PrimaryExpression	2		8656384	1					
ANR	8656945	PrimaryExpression	'\\0'		8656384	1					
ANR	8656946	ExpressionStatement	"png_error ( pp , msg )"	5612:6:174229:174247	8656384	1	True				
ANR	8656947	CallExpression	"png_error ( pp , msg )"		8656384	0					
ANR	8656948	Callee	png_error		8656384	0					
ANR	8656949	Identifier	png_error		8656384	0					
ANR	8656950	ArgumentList	pp		8656384	1					
ANR	8656951	Argument	pp		8656384	0					
ANR	8656952	Identifier	pp		8656384	0					
ANR	8656953	Argument	msg		8656384	1					
ANR	8656954	Identifier	msg		8656384	0					
ANR	8656955	ReturnType	static void		8656384	1					
ANR	8656956	Identifier	standard_check_text		8656384	2					
ANR	8656957	ParameterList	"png_const_structp pp , png_const_textp tp , png_const_charp keyword , png_const_charp text"		8656384	3					
ANR	8656958	Parameter	png_const_structp pp	5536:20:172074:172093	8656384	0	True				
ANR	8656959	ParameterType	png_const_structp		8656384	0					
ANR	8656960	Identifier	pp		8656384	1					
ANR	8656961	Parameter	png_const_textp tp	5536:42:172096:172113	8656384	1	True				
ANR	8656962	ParameterType	png_const_textp		8656384	0					
ANR	8656963	Identifier	tp		8656384	1					
ANR	8656964	Parameter	png_const_charp keyword	5537:3:172119:172141	8656384	2	True				
ANR	8656965	ParameterType	png_const_charp		8656384	0					
ANR	8656966	Identifier	keyword		8656384	1					
ANR	8656967	Parameter	png_const_charp text	5537:28:172144:172163	8656384	3	True				
ANR	8656968	ParameterType	png_const_charp		8656384	0					
ANR	8656969	Identifier	text		8656384	1					
ANR	8656970	CFGEntryNode	ENTRY		8656384		True				
ANR	8656971	CFGExitNode	EXIT		8656384		True				
ANR	8656972	Symbol	pp		8656384						
ANR	8656973	Symbol	msg		8656384						
ANR	8656974	Symbol	strcmp		8656384						
ANR	8656975	Symbol	* tp		8656384						
ANR	8656976	Symbol	tp -> itxt_length		8656384						
ANR	8656977	Symbol	TEXT_COMPRESSION		8656384						
ANR	8656978	Symbol	NULL		8656384						
ANR	8656979	Symbol	tp -> text		8656384						
ANR	8656980	Symbol	tp -> lang_key		8656384						
ANR	8656981	Symbol	tp -> key		8656384						
ANR	8656982	Symbol	tp -> compression		8656384						
ANR	8656983	Symbol	* msg		8656384						
ANR	8656984	Symbol	tp -> lang		8656384						
ANR	8656985	Symbol	strlen		8656384						
ANR	8656986	Symbol	buf		8656384						
ANR	8656987	Symbol	pos		8656384						
ANR	8656988	Symbol	tp -> text_length		8656384						
ANR	8656989	Symbol	safecat		8656384						
ANR	8656990	Symbol	text		8656384						
ANR	8656991	Symbol	tp		8656384						
ANR	8656992	Symbol	keyword		8656384						
ANR	8656993	Symbol	ok		8656384						
ANR	8656994	Symbol	* pos		8656384						
ANR	8656995	Function	standard_text_validate	5616:0:174257:175031							
ANR	8656996	FunctionDef	"standard_text_validate (standard_display * dp , png_const_structp pp , png_infop pi , int check_end)"		8656995	0					
ANR	8656997	CompoundStatement		5619:0:174368:175031	8656995	0					
ANR	8656998	IdentifierDeclStatement	png_textp tp = NULL ;	5620:3:174373:174392	8656995	0	True				
ANR	8656999	IdentifierDecl	tp = NULL		8656995	0					
ANR	8657000	IdentifierDeclType	png_textp		8656995	0					
ANR	8657001	Identifier	tp		8656995	1					
ANR	8657002	AssignmentExpression	tp = NULL		8656995	2		=			
ANR	8657003	Identifier	NULL		8656995	0					
ANR	8657004	Identifier	NULL		8656995	1					
ANR	8657005	IdentifierDeclStatement	"png_uint_32 num_text = png_get_text ( pp , pi , & tp , NULL ) ;"	5621:3:174397:174451	8656995	1	True				
ANR	8657006	IdentifierDecl	"num_text = png_get_text ( pp , pi , & tp , NULL )"		8656995	0					
ANR	8657007	IdentifierDeclType	png_uint_32		8656995	0					
ANR	8657008	Identifier	num_text		8656995	1					
ANR	8657009	AssignmentExpression	"num_text = png_get_text ( pp , pi , & tp , NULL )"		8656995	2		=			
ANR	8657010	Identifier	num_text		8656995	0					
ANR	8657011	CallExpression	"png_get_text ( pp , pi , & tp , NULL )"		8656995	1					
ANR	8657012	Callee	png_get_text		8656995	0					
ANR	8657013	Identifier	png_get_text		8656995	0					
ANR	8657014	ArgumentList	pp		8656995	1					
ANR	8657015	Argument	pp		8656995	0					
ANR	8657016	Identifier	pp		8656995	0					
ANR	8657017	Argument	pi		8656995	1					
ANR	8657018	Identifier	pi		8656995	0					
ANR	8657019	Argument	& tp		8656995	2					
ANR	8657020	UnaryOperationExpression	& tp		8656995	0					
ANR	8657021	UnaryOperator	&		8656995	0					
ANR	8657022	Identifier	tp		8656995	1					
ANR	8657023	Argument	NULL		8656995	3					
ANR	8657024	Identifier	NULL		8656995	0					
ANR	8657025	IfStatement	if ( num_text == 2 && tp != NULL )		8656995	2					
ANR	8657026	Condition	num_text == 2 && tp != NULL	5623:7:174461:174487	8656995	0	True				
ANR	8657027	AndExpression	num_text == 2 && tp != NULL		8656995	0		&&			
ANR	8657028	EqualityExpression	num_text == 2		8656995	0		==			
ANR	8657029	Identifier	num_text		8656995	0					
ANR	8657030	PrimaryExpression	2		8656995	1					
ANR	8657031	EqualityExpression	tp != NULL		8656995	1		!=			
ANR	8657032	Identifier	tp		8656995	0					
ANR	8657033	Identifier	NULL		8656995	1					
ANR	8657034	CompoundStatement		6:3:124:124	8656995	1					
ANR	8657035	ExpressionStatement	"standard_check_text ( pp , tp , ""image name"" , dp -> ps -> current -> name )"	5625:6:174501:174565	8656995	0	True				
ANR	8657036	CallExpression	"standard_check_text ( pp , tp , ""image name"" , dp -> ps -> current -> name )"		8656995	0					
ANR	8657037	Callee	standard_check_text		8656995	0					
ANR	8657038	Identifier	standard_check_text		8656995	0					
ANR	8657039	ArgumentList	pp		8656995	1					
ANR	8657040	Argument	pp		8656995	0					
ANR	8657041	Identifier	pp		8656995	0					
ANR	8657042	Argument	tp		8656995	1					
ANR	8657043	Identifier	tp		8656995	0					
ANR	8657044	Argument	"""image name"""		8656995	2					
ANR	8657045	PrimaryExpression	"""image name"""		8656995	0					
ANR	8657046	Argument	dp -> ps -> current -> name		8656995	3					
ANR	8657047	PtrMemberAccess	dp -> ps -> current -> name		8656995	0					
ANR	8657048	PtrMemberAccess	dp -> ps -> current		8656995	0					
ANR	8657049	PtrMemberAccess	dp -> ps		8656995	0					
ANR	8657050	Identifier	dp		8656995	0					
ANR	8657051	Identifier	ps		8656995	1					
ANR	8657052	Identifier	current		8656995	1					
ANR	8657053	Identifier	name		8656995	1					
ANR	8657054	IfStatement	if ( check_end )		8656995	1					
ANR	8657055	Condition	check_end	5631:10:174798:174806	8656995	0	True				
ANR	8657056	Identifier	check_end		8656995	0					
ANR	8657057	ExpressionStatement	"standard_check_text ( pp , tp + 1 , ""end marker"" , ""end"" )"	5632:9:174818:174868	8656995	1	True				
ANR	8657058	CallExpression	"standard_check_text ( pp , tp + 1 , ""end marker"" , ""end"" )"		8656995	0					
ANR	8657059	Callee	standard_check_text		8656995	0					
ANR	8657060	Identifier	standard_check_text		8656995	0					
ANR	8657061	ArgumentList	pp		8656995	1					
ANR	8657062	Argument	pp		8656995	0					
ANR	8657063	Identifier	pp		8656995	0					
ANR	8657064	Argument	tp + 1		8656995	1					
ANR	8657065	AdditiveExpression	tp + 1		8656995	0		+			
ANR	8657066	Identifier	tp		8656995	0					
ANR	8657067	PrimaryExpression	1		8656995	1					
ANR	8657068	Argument	"""end marker"""		8656995	2					
ANR	8657069	PrimaryExpression	"""end marker"""		8656995	0					
ANR	8657070	Argument	"""end"""		8656995	3					
ANR	8657071	PrimaryExpression	"""end"""		8656995	0					
ANR	8657072	ElseStatement	else		8656995	0					
ANR	8657073	CompoundStatement		19:6:526:538	8656995	0					
ANR	8657074	IdentifierDeclStatement	char msg [ 64 ] ;	5637:6:174895:174907	8656995	0	True				
ANR	8657075	IdentifierDecl	msg [ 64 ]		8656995	0					
ANR	8657076	IdentifierDeclType	char [ 64 ]		8656995	0					
ANR	8657077	Identifier	msg		8656995	1					
ANR	8657078	PrimaryExpression	64		8656995	2					
ANR	8657079	ExpressionStatement	"sprintf ( msg , ""expected two text items, got %lu"" , ( unsigned long ) num_text )"	5639:6:174916:174998	8656995	1	True				
ANR	8657080	CallExpression	"sprintf ( msg , ""expected two text items, got %lu"" , ( unsigned long ) num_text )"		8656995	0					
ANR	8657081	Callee	sprintf		8656995	0					
ANR	8657082	Identifier	sprintf		8656995	0					
ANR	8657083	ArgumentList	msg		8656995	1					
ANR	8657084	Argument	msg		8656995	0					
ANR	8657085	Identifier	msg		8656995	0					
ANR	8657086	Argument	"""expected two text items, got %lu"""		8656995	1					
ANR	8657087	PrimaryExpression	"""expected two text items, got %lu"""		8656995	0					
ANR	8657088	Argument	( unsigned long ) num_text		8656995	2					
ANR	8657089	CastExpression	( unsigned long ) num_text		8656995	0					
ANR	8657090	CastTarget	unsigned long		8656995	0					
ANR	8657091	Identifier	num_text		8656995	1					
ANR	8657092	ExpressionStatement	"png_error ( pp , msg )"	5641:6:175006:175024	8656995	2	True				
ANR	8657093	CallExpression	"png_error ( pp , msg )"		8656995	0					
ANR	8657094	Callee	png_error		8656995	0					
ANR	8657095	Identifier	png_error		8656995	0					
ANR	8657096	ArgumentList	pp		8656995	1					
ANR	8657097	Argument	pp		8656995	0					
ANR	8657098	Identifier	pp		8656995	0					
ANR	8657099	Argument	msg		8656995	1					
ANR	8657100	Identifier	msg		8656995	0					
ANR	8657101	ReturnType	static void		8656995	1					
ANR	8657102	Identifier	standard_text_validate		8656995	2					
ANR	8657103	ParameterList	"standard_display * dp , png_const_structp pp , png_infop pi , int check_end"		8656995	3					
ANR	8657104	Parameter	standard_display * dp	5617:23:174292:174311	8656995	0	True				
ANR	8657105	ParameterType	standard_display *		8656995	0					
ANR	8657106	Identifier	dp		8656995	1					
ANR	8657107	Parameter	png_const_structp pp	5617:45:174314:174333	8656995	1	True				
ANR	8657108	ParameterType	png_const_structp		8656995	0					
ANR	8657109	Identifier	pp		8656995	1					
ANR	8657110	Parameter	png_infop pi	5618:3:174339:174350	8656995	2	True				
ANR	8657111	ParameterType	png_infop		8656995	0					
ANR	8657112	Identifier	pi		8656995	1					
ANR	8657113	Parameter	int check_end	5618:17:174353:174365	8656995	3	True				
ANR	8657114	ParameterType	int		8656995	0					
ANR	8657115	Identifier	check_end		8656995	1					
ANR	8657116	CFGEntryNode	ENTRY		8656995		True				
ANR	8657117	CFGExitNode	EXIT		8656995		True				
ANR	8657118	Symbol	pp		8656995						
ANR	8657119	Symbol	msg		8656995						
ANR	8657120	Symbol	check_end		8656995						
ANR	8657121	Symbol	* dp -> ps -> current		8656995						
ANR	8657122	Symbol	NULL		8656995						
ANR	8657123	Symbol	& tp		8656995						
ANR	8657124	Symbol	dp		8656995						
ANR	8657125	Symbol	png_get_text		8656995						
ANR	8657126	Symbol	num_text		8656995						
ANR	8657127	Symbol	dp -> ps -> current		8656995						
ANR	8657128	Symbol	* dp -> ps		8656995						
ANR	8657129	Symbol	* dp		8656995						
ANR	8657130	Symbol	* * * dp		8656995						
ANR	8657131	Symbol	dp -> ps -> current -> name		8656995						
ANR	8657132	Symbol	pi		8656995						
ANR	8657133	Symbol	* * dp		8656995						
ANR	8657134	Symbol	tp		8656995						
ANR	8657135	Symbol	* * dp -> ps		8656995						
ANR	8657136	Symbol	dp -> ps		8656995						
ANR	8657137	Function	standard_row_validate	5648:0:175110:176498							
ANR	8657138	FunctionDef	"standard_row_validate (standard_display * dp , png_const_structp pp , int iImage , int iDisplay , png_uint_32 y)"		8657137	0					
ANR	8657139	CompoundStatement		5651:0:175232:176498	8657137	0					
ANR	8657140	IdentifierDeclStatement	int where ;	5652:3:175237:175246	8657137	0	True				
ANR	8657141	IdentifierDecl	where		8657137	0					
ANR	8657142	IdentifierDeclType	int		8657137	0					
ANR	8657143	Identifier	where		8657137	1					
ANR	8657144	IdentifierDeclStatement	png_byte std [ STANDARD_ROWMAX ] ;	5653:3:175251:175280	8657137	1	True				
ANR	8657145	IdentifierDecl	std [ STANDARD_ROWMAX ]		8657137	0					
ANR	8657146	IdentifierDeclType	png_byte [ STANDARD_ROWMAX ]		8657137	0					
ANR	8657147	Identifier	std		8657137	1					
ANR	8657148	Identifier	STANDARD_ROWMAX		8657137	2					
ANR	8657149	ExpressionStatement	"memset ( std , 178 , sizeof std )"	5658:3:175390:175418	8657137	2	True				
ANR	8657150	CallExpression	"memset ( std , 178 , sizeof std )"		8657137	0					
ANR	8657151	Callee	memset		8657137	0					
ANR	8657152	Identifier	memset		8657137	0					
ANR	8657153	ArgumentList	std		8657137	1					
ANR	8657154	Argument	std		8657137	0					
ANR	8657155	Identifier	std		8657137	0					
ANR	8657156	Argument	178		8657137	1					
ANR	8657157	PrimaryExpression	178		8657137	0					
ANR	8657158	Argument	sizeof std		8657137	2					
ANR	8657159	SizeofExpression	sizeof std		8657137	0					
ANR	8657160	Sizeof	sizeof		8657137	0					
ANR	8657161	Identifier	std		8657137	1					
ANR	8657162	ExpressionStatement	"standard_row ( pp , std , dp -> id , y )"	5659:3:175423:175455	8657137	3	True				
ANR	8657163	CallExpression	"standard_row ( pp , std , dp -> id , y )"		8657137	0					
ANR	8657164	Callee	standard_row		8657137	0					
ANR	8657165	Identifier	standard_row		8657137	0					
ANR	8657166	ArgumentList	pp		8657137	1					
ANR	8657167	Argument	pp		8657137	0					
ANR	8657168	Identifier	pp		8657137	0					
ANR	8657169	Argument	std		8657137	1					
ANR	8657170	Identifier	std		8657137	0					
ANR	8657171	Argument	dp -> id		8657137	2					
ANR	8657172	PtrMemberAccess	dp -> id		8657137	0					
ANR	8657173	Identifier	dp		8657137	0					
ANR	8657174	Identifier	id		8657137	1					
ANR	8657175	Argument	y		8657137	3					
ANR	8657176	Identifier	y		8657137	0					
ANR	8657177	IfStatement	"if ( iImage >= 0 && ( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iImage , y ) , dp -> bit_width ) ) != 0 )"		8657137	4					
ANR	8657178	Condition	"iImage >= 0 && ( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iImage , y ) , dp -> bit_width ) ) != 0"	5666:7:175779:175895	8657137	0	True				
ANR	8657179	AndExpression	"iImage >= 0 && ( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iImage , y ) , dp -> bit_width ) ) != 0"		8657137	0		&&			
ANR	8657180	RelationalExpression	iImage >= 0		8657137	0		>=			
ANR	8657181	Identifier	iImage		8657137	0					
ANR	8657182	PrimaryExpression	0		8657137	1					
ANR	8657183	EqualityExpression	"( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iImage , y ) , dp -> bit_width ) ) != 0"		8657137	1		!=			
ANR	8657184	AssignmentExpression	"where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iImage , y ) , dp -> bit_width )"		8657137	0		=			
ANR	8657185	Identifier	where		8657137	0					
ANR	8657186	CallExpression	"pixel_cmp ( std , store_image_row ( dp -> ps , pp , iImage , y ) , dp -> bit_width )"		8657137	1					
ANR	8657187	Callee	pixel_cmp		8657137	0					
ANR	8657188	Identifier	pixel_cmp		8657137	0					
ANR	8657189	ArgumentList	std		8657137	1					
ANR	8657190	Argument	std		8657137	0					
ANR	8657191	Identifier	std		8657137	0					
ANR	8657192	Argument	"store_image_row ( dp -> ps , pp , iImage , y )"		8657137	1					
ANR	8657193	CallExpression	"store_image_row ( dp -> ps , pp , iImage , y )"		8657137	0					
ANR	8657194	Callee	store_image_row		8657137	0					
ANR	8657195	Identifier	store_image_row		8657137	0					
ANR	8657196	ArgumentList	dp -> ps		8657137	1					
ANR	8657197	Argument	dp -> ps		8657137	0					
ANR	8657198	PtrMemberAccess	dp -> ps		8657137	0					
ANR	8657199	Identifier	dp		8657137	0					
ANR	8657200	Identifier	ps		8657137	1					
ANR	8657201	Argument	pp		8657137	1					
ANR	8657202	Identifier	pp		8657137	0					
ANR	8657203	Argument	iImage		8657137	2					
ANR	8657204	Identifier	iImage		8657137	0					
ANR	8657205	Argument	y		8657137	3					
ANR	8657206	Identifier	y		8657137	0					
ANR	8657207	Argument	dp -> bit_width		8657137	2					
ANR	8657208	PtrMemberAccess	dp -> bit_width		8657137	0					
ANR	8657209	Identifier	dp		8657137	0					
ANR	8657210	Identifier	bit_width		8657137	1					
ANR	8657211	PrimaryExpression	0		8657137	1					
ANR	8657212	CompoundStatement		20:6:676:688	8657137	1					
ANR	8657213	IdentifierDeclStatement	char msg [ 64 ] ;	5670:6:175909:175921	8657137	0	True				
ANR	8657214	IdentifierDecl	msg [ 64 ]		8657137	0					
ANR	8657215	IdentifierDeclType	char [ 64 ]		8657137	0					
ANR	8657216	Identifier	msg		8657137	1					
ANR	8657217	PrimaryExpression	64		8657137	2					
ANR	8657218	ExpressionStatement	"sprintf ( msg , ""PNG image row[%lu][%d] changed from %.2x to %.2x"" , ( unsigned long ) y , where - 1 , std [ where - 1 ] , store_image_row ( dp -> ps , pp , iImage , y ) [ where - 1 ] )"	5671:6:175929:176101	8657137	1	True				
ANR	8657219	CallExpression	"sprintf ( msg , ""PNG image row[%lu][%d] changed from %.2x to %.2x"" , ( unsigned long ) y , where - 1 , std [ where - 1 ] , store_image_row ( dp -> ps , pp , iImage , y ) [ where - 1 ] )"		8657137	0					
ANR	8657220	Callee	sprintf		8657137	0					
ANR	8657221	Identifier	sprintf		8657137	0					
ANR	8657222	ArgumentList	msg		8657137	1					
ANR	8657223	Argument	msg		8657137	0					
ANR	8657224	Identifier	msg		8657137	0					
ANR	8657225	Argument	"""PNG image row[%lu][%d] changed from %.2x to %.2x"""		8657137	1					
ANR	8657226	PrimaryExpression	"""PNG image row[%lu][%d] changed from %.2x to %.2x"""		8657137	0					
ANR	8657227	Argument	( unsigned long ) y		8657137	2					
ANR	8657228	CastExpression	( unsigned long ) y		8657137	0					
ANR	8657229	CastTarget	unsigned long		8657137	0					
ANR	8657230	Identifier	y		8657137	1					
ANR	8657231	Argument	where - 1		8657137	3					
ANR	8657232	AdditiveExpression	where - 1		8657137	0		-			
ANR	8657233	Identifier	where		8657137	0					
ANR	8657234	PrimaryExpression	1		8657137	1					
ANR	8657235	Argument	std [ where - 1 ]		8657137	4					
ANR	8657236	ArrayIndexing	std [ where - 1 ]		8657137	0					
ANR	8657237	Identifier	std		8657137	0					
ANR	8657238	AdditiveExpression	where - 1		8657137	1		-			
ANR	8657239	Identifier	where		8657137	0					
ANR	8657240	PrimaryExpression	1		8657137	1					
ANR	8657241	Argument	"store_image_row ( dp -> ps , pp , iImage , y ) [ where - 1 ]"		8657137	5					
ANR	8657242	ArrayIndexing	"store_image_row ( dp -> ps , pp , iImage , y ) [ where - 1 ]"		8657137	0					
ANR	8657243	CallExpression	"store_image_row ( dp -> ps , pp , iImage , y )"		8657137	0					
ANR	8657244	Callee	store_image_row		8657137	0					
ANR	8657245	Identifier	store_image_row		8657137	0					
ANR	8657246	ArgumentList	dp -> ps		8657137	1					
ANR	8657247	Argument	dp -> ps		8657137	0					
ANR	8657248	PtrMemberAccess	dp -> ps		8657137	0					
ANR	8657249	Identifier	dp		8657137	0					
ANR	8657250	Identifier	ps		8657137	1					
ANR	8657251	Argument	pp		8657137	1					
ANR	8657252	Identifier	pp		8657137	0					
ANR	8657253	Argument	iImage		8657137	2					
ANR	8657254	Identifier	iImage		8657137	0					
ANR	8657255	Argument	y		8657137	3					
ANR	8657256	Identifier	y		8657137	0					
ANR	8657257	AdditiveExpression	where - 1		8657137	1		-			
ANR	8657258	Identifier	where		8657137	0					
ANR	8657259	PrimaryExpression	1		8657137	1					
ANR	8657260	ExpressionStatement	"png_error ( pp , msg )"	5674:6:176109:176127	8657137	2	True				
ANR	8657261	CallExpression	"png_error ( pp , msg )"		8657137	0					
ANR	8657262	Callee	png_error		8657137	0					
ANR	8657263	Identifier	png_error		8657137	0					
ANR	8657264	ArgumentList	pp		8657137	1					
ANR	8657265	Argument	pp		8657137	0					
ANR	8657266	Identifier	pp		8657137	0					
ANR	8657267	Argument	msg		8657137	1					
ANR	8657268	Identifier	msg		8657137	0					
ANR	8657269	IfStatement	"if ( iDisplay >= 0 && ( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iDisplay , y ) , dp -> bit_width ) ) != 0 )"		8657137	5					
ANR	8657270	Condition	"iDisplay >= 0 && ( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iDisplay , y ) , dp -> bit_width ) ) != 0"	5677:7:176142:176259	8657137	0	True				
ANR	8657271	AndExpression	"iDisplay >= 0 && ( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iDisplay , y ) , dp -> bit_width ) ) != 0"		8657137	0		&&			
ANR	8657272	RelationalExpression	iDisplay >= 0		8657137	0		>=			
ANR	8657273	Identifier	iDisplay		8657137	0					
ANR	8657274	PrimaryExpression	0		8657137	1					
ANR	8657275	EqualityExpression	"( where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iDisplay , y ) , dp -> bit_width ) ) != 0"		8657137	1		!=			
ANR	8657276	AssignmentExpression	"where = pixel_cmp ( std , store_image_row ( dp -> ps , pp , iDisplay , y ) , dp -> bit_width )"		8657137	0		=			
ANR	8657277	Identifier	where		8657137	0					
ANR	8657278	CallExpression	"pixel_cmp ( std , store_image_row ( dp -> ps , pp , iDisplay , y ) , dp -> bit_width )"		8657137	1					
ANR	8657279	Callee	pixel_cmp		8657137	0					
ANR	8657280	Identifier	pixel_cmp		8657137	0					
ANR	8657281	ArgumentList	std		8657137	1					
ANR	8657282	Argument	std		8657137	0					
ANR	8657283	Identifier	std		8657137	0					
ANR	8657284	Argument	"store_image_row ( dp -> ps , pp , iDisplay , y )"		8657137	1					
ANR	8657285	CallExpression	"store_image_row ( dp -> ps , pp , iDisplay , y )"		8657137	0					
ANR	8657286	Callee	store_image_row		8657137	0					
ANR	8657287	Identifier	store_image_row		8657137	0					
ANR	8657288	ArgumentList	dp -> ps		8657137	1					
ANR	8657289	Argument	dp -> ps		8657137	0					
ANR	8657290	PtrMemberAccess	dp -> ps		8657137	0					
ANR	8657291	Identifier	dp		8657137	0					
ANR	8657292	Identifier	ps		8657137	1					
ANR	8657293	Argument	pp		8657137	1					
ANR	8657294	Identifier	pp		8657137	0					
ANR	8657295	Argument	iDisplay		8657137	2					
ANR	8657296	Identifier	iDisplay		8657137	0					
ANR	8657297	Argument	y		8657137	3					
ANR	8657298	Identifier	y		8657137	0					
ANR	8657299	Argument	dp -> bit_width		8657137	2					
ANR	8657300	PtrMemberAccess	dp -> bit_width		8657137	0					
ANR	8657301	Identifier	dp		8657137	0					
ANR	8657302	Identifier	bit_width		8657137	1					
ANR	8657303	PrimaryExpression	0		8657137	1					
ANR	8657304	CompoundStatement		31:6:1040:1052	8657137	1					
ANR	8657305	IdentifierDeclStatement	char msg [ 64 ] ;	5681:6:176273:176285	8657137	0	True				
ANR	8657306	IdentifierDecl	msg [ 64 ]		8657137	0					
ANR	8657307	IdentifierDeclType	char [ 64 ]		8657137	0					
ANR	8657308	Identifier	msg		8657137	1					
ANR	8657309	PrimaryExpression	64		8657137	2					
ANR	8657310	ExpressionStatement	"sprintf ( msg , ""display row[%lu][%d] changed from %.2x to %.2x"" , ( unsigned long ) y , where - 1 , std [ where - 1 ] , store_image_row ( dp -> ps , pp , iDisplay , y ) [ where - 1 ] )"	5682:6:176293:176465	8657137	1	True				
ANR	8657311	CallExpression	"sprintf ( msg , ""display row[%lu][%d] changed from %.2x to %.2x"" , ( unsigned long ) y , where - 1 , std [ where - 1 ] , store_image_row ( dp -> ps , pp , iDisplay , y ) [ where - 1 ] )"		8657137	0					
ANR	8657312	Callee	sprintf		8657137	0					
ANR	8657313	Identifier	sprintf		8657137	0					
ANR	8657314	ArgumentList	msg		8657137	1					
ANR	8657315	Argument	msg		8657137	0					
ANR	8657316	Identifier	msg		8657137	0					
ANR	8657317	Argument	"""display row[%lu][%d] changed from %.2x to %.2x"""		8657137	1					
ANR	8657318	PrimaryExpression	"""display row[%lu][%d] changed from %.2x to %.2x"""		8657137	0					
ANR	8657319	Argument	( unsigned long ) y		8657137	2					
ANR	8657320	CastExpression	( unsigned long ) y		8657137	0					
ANR	8657321	CastTarget	unsigned long		8657137	0					
ANR	8657322	Identifier	y		8657137	1					
ANR	8657323	Argument	where - 1		8657137	3					
ANR	8657324	AdditiveExpression	where - 1		8657137	0		-			
ANR	8657325	Identifier	where		8657137	0					
ANR	8657326	PrimaryExpression	1		8657137	1					
ANR	8657327	Argument	std [ where - 1 ]		8657137	4					
ANR	8657328	ArrayIndexing	std [ where - 1 ]		8657137	0					
ANR	8657329	Identifier	std		8657137	0					
ANR	8657330	AdditiveExpression	where - 1		8657137	1		-			
ANR	8657331	Identifier	where		8657137	0					
ANR	8657332	PrimaryExpression	1		8657137	1					
ANR	8657333	Argument	"store_image_row ( dp -> ps , pp , iDisplay , y ) [ where - 1 ]"		8657137	5					
ANR	8657334	ArrayIndexing	"store_image_row ( dp -> ps , pp , iDisplay , y ) [ where - 1 ]"		8657137	0					
ANR	8657335	CallExpression	"store_image_row ( dp -> ps , pp , iDisplay , y )"		8657137	0					
ANR	8657336	Callee	store_image_row		8657137	0					
ANR	8657337	Identifier	store_image_row		8657137	0					
ANR	8657338	ArgumentList	dp -> ps		8657137	1					
ANR	8657339	Argument	dp -> ps		8657137	0					
ANR	8657340	PtrMemberAccess	dp -> ps		8657137	0					
ANR	8657341	Identifier	dp		8657137	0					
ANR	8657342	Identifier	ps		8657137	1					
ANR	8657343	Argument	pp		8657137	1					
ANR	8657344	Identifier	pp		8657137	0					
ANR	8657345	Argument	iDisplay		8657137	2					
ANR	8657346	Identifier	iDisplay		8657137	0					
ANR	8657347	Argument	y		8657137	3					
ANR	8657348	Identifier	y		8657137	0					
ANR	8657349	AdditiveExpression	where - 1		8657137	1		-			
ANR	8657350	Identifier	where		8657137	0					
ANR	8657351	PrimaryExpression	1		8657137	1					
ANR	8657352	ExpressionStatement	"png_error ( pp , msg )"	5685:6:176473:176491	8657137	2	True				
ANR	8657353	CallExpression	"png_error ( pp , msg )"		8657137	0					
ANR	8657354	Callee	png_error		8657137	0					
ANR	8657355	Identifier	png_error		8657137	0					
ANR	8657356	ArgumentList	pp		8657137	1					
ANR	8657357	Argument	pp		8657137	0					
ANR	8657358	Identifier	pp		8657137	0					
ANR	8657359	Argument	msg		8657137	1					
ANR	8657360	Identifier	msg		8657137	0					
ANR	8657361	ReturnType	static void		8657137	1					
ANR	8657362	Identifier	standard_row_validate		8657137	2					
ANR	8657363	ParameterList	"standard_display * dp , png_const_structp pp , int iImage , int iDisplay , png_uint_32 y"		8657137	3					
ANR	8657364	Parameter	standard_display * dp	5649:22:175144:175163	8657137	0	True				
ANR	8657365	ParameterType	standard_display *		8657137	0					
ANR	8657366	Identifier	dp		8657137	1					
ANR	8657367	Parameter	png_const_structp pp	5649:44:175166:175185	8657137	1	True				
ANR	8657368	ParameterType	png_const_structp		8657137	0					
ANR	8657369	Identifier	pp		8657137	1					
ANR	8657370	Parameter	int iImage	5650:3:175191:175200	8657137	2	True				
ANR	8657371	ParameterType	int		8657137	0					
ANR	8657372	Identifier	iImage		8657137	1					
ANR	8657373	Parameter	int iDisplay	5650:15:175203:175214	8657137	3	True				
ANR	8657374	ParameterType	int		8657137	0					
ANR	8657375	Identifier	iDisplay		8657137	1					
ANR	8657376	Parameter	png_uint_32 y	5650:29:175217:175229	8657137	4	True				
ANR	8657377	ParameterType	png_uint_32		8657137	0					
ANR	8657378	Identifier	y		8657137	1					
ANR	8657379	CFGEntryNode	ENTRY		8657137		True				
ANR	8657380	CFGExitNode	EXIT		8657137		True				
ANR	8657381	Symbol	pp		8657137						
ANR	8657382	Symbol	iDisplay		8657137						
ANR	8657383	Symbol	msg		8657137						
ANR	8657384	Symbol	std		8657137						
ANR	8657385	Symbol	pixel_cmp		8657137						
ANR	8657386	Symbol	dp		8657137						
ANR	8657387	Symbol	* std		8657137						
ANR	8657388	Symbol	* where		8657137						
ANR	8657389	Symbol	* dp		8657137						
ANR	8657390	Symbol	iImage		8657137						
ANR	8657391	Symbol	dp -> id		8657137						
ANR	8657392	Symbol	y		8657137						
ANR	8657393	Symbol	where		8657137						
ANR	8657394	Symbol	store_image_row		8657137						
ANR	8657395	Symbol	dp -> bit_width		8657137						
ANR	8657396	Symbol	* store_image_row		8657137						
ANR	8657397	Symbol	dp -> ps		8657137						
ANR	8657398	Function	standard_image_validate	5689:0:176501:176957							
ANR	8657399	FunctionDef	"standard_image_validate (standard_display * dp , png_const_structp pp , int iImage , int iDisplay)"		8657398	0					
ANR	8657400	CompoundStatement		5692:0:176611:176957	8657398	0					
ANR	8657401	IdentifierDeclStatement	png_uint_32 y ;	5693:3:176616:176629	8657398	0	True				
ANR	8657402	IdentifierDecl	y		8657398	0					
ANR	8657403	IdentifierDeclType	png_uint_32		8657398	0					
ANR	8657404	Identifier	y		8657398	1					
ANR	8657405	IfStatement	if ( iImage >= 0 )		8657398	1					
ANR	8657406	Condition	iImage >= 0	5695:7:176639:176649	8657398	0	True				
ANR	8657407	RelationalExpression	iImage >= 0		8657398	0		>=			
ANR	8657408	Identifier	iImage		8657398	0					
ANR	8657409	PrimaryExpression	0		8657398	1					
ANR	8657410	ExpressionStatement	"store_image_check ( dp -> ps , pp , iImage )"	5696:6:176658:176695	8657398	1	True				
ANR	8657411	CallExpression	"store_image_check ( dp -> ps , pp , iImage )"		8657398	0					
ANR	8657412	Callee	store_image_check		8657398	0					
ANR	8657413	Identifier	store_image_check		8657398	0					
ANR	8657414	ArgumentList	dp -> ps		8657398	1					
ANR	8657415	Argument	dp -> ps		8657398	0					
ANR	8657416	PtrMemberAccess	dp -> ps		8657398	0					
ANR	8657417	Identifier	dp		8657398	0					
ANR	8657418	Identifier	ps		8657398	1					
ANR	8657419	Argument	pp		8657398	1					
ANR	8657420	Identifier	pp		8657398	0					
ANR	8657421	Argument	iImage		8657398	2					
ANR	8657422	Identifier	iImage		8657398	0					
ANR	8657423	IfStatement	if ( iDisplay >= 0 )		8657398	2					
ANR	8657424	Condition	iDisplay >= 0	5698:7:176705:176717	8657398	0	True				
ANR	8657425	RelationalExpression	iDisplay >= 0		8657398	0		>=			
ANR	8657426	Identifier	iDisplay		8657398	0					
ANR	8657427	PrimaryExpression	0		8657398	1					
ANR	8657428	ExpressionStatement	"store_image_check ( dp -> ps , pp , iDisplay )"	5699:6:176726:176765	8657398	1	True				
ANR	8657429	CallExpression	"store_image_check ( dp -> ps , pp , iDisplay )"		8657398	0					
ANR	8657430	Callee	store_image_check		8657398	0					
ANR	8657431	Identifier	store_image_check		8657398	0					
ANR	8657432	ArgumentList	dp -> ps		8657398	1					
ANR	8657433	Argument	dp -> ps		8657398	0					
ANR	8657434	PtrMemberAccess	dp -> ps		8657398	0					
ANR	8657435	Identifier	dp		8657398	0					
ANR	8657436	Identifier	ps		8657398	1					
ANR	8657437	Argument	pp		8657398	1					
ANR	8657438	Identifier	pp		8657398	0					
ANR	8657439	Argument	iDisplay		8657398	2					
ANR	8657440	Identifier	iDisplay		8657398	0					
ANR	8657441	ForStatement	for ( y = 0 ; y < dp -> h ; ++ y )		8657398	3					
ANR	8657442	ForInit	y = 0 ;	5701:8:176776:176779	8657398	0	True				
ANR	8657443	AssignmentExpression	y = 0		8657398	0		=			
ANR	8657444	Identifier	y		8657398	0					
ANR	8657445	PrimaryExpression	0		8657398	1					
ANR	8657446	Condition	y < dp -> h	5701:13:176781:176787	8657398	1	True				
ANR	8657447	RelationalExpression	y < dp -> h		8657398	0		<			
ANR	8657448	Identifier	y		8657398	0					
ANR	8657449	PtrMemberAccess	dp -> h		8657398	1					
ANR	8657450	Identifier	dp		8657398	0					
ANR	8657451	Identifier	h		8657398	1					
ANR	8657452	UnaryExpression	++ y	5701:22:176790:176792	8657398	2	True				
ANR	8657453	IncDec	++		8657398	0					
ANR	8657454	Identifier	y		8657398	1					
ANR	8657455	ExpressionStatement	"standard_row_validate ( dp , pp , iImage , iDisplay , y )"	5702:6:176801:176851	8657398	3	True				
ANR	8657456	CallExpression	"standard_row_validate ( dp , pp , iImage , iDisplay , y )"		8657398	0					
ANR	8657457	Callee	standard_row_validate		8657398	0					
ANR	8657458	Identifier	standard_row_validate		8657398	0					
ANR	8657459	ArgumentList	dp		8657398	1					
ANR	8657460	Argument	dp		8657398	0					
ANR	8657461	Identifier	dp		8657398	0					
ANR	8657462	Argument	pp		8657398	1					
ANR	8657463	Identifier	pp		8657398	0					
ANR	8657464	Argument	iImage		8657398	2					
ANR	8657465	Identifier	iImage		8657398	0					
ANR	8657466	Argument	iDisplay		8657398	3					
ANR	8657467	Identifier	iDisplay		8657398	0					
ANR	8657468	Argument	y		8657398	4					
ANR	8657469	Identifier	y		8657398	0					
ANR	8657470	ExpressionStatement	dp -> ps -> validated = 1	5705:3:176934:176955	8657398	4	True				
ANR	8657471	AssignmentExpression	dp -> ps -> validated = 1		8657398	0		=			
ANR	8657472	PtrMemberAccess	dp -> ps -> validated		8657398	0					
ANR	8657473	PtrMemberAccess	dp -> ps		8657398	0					
ANR	8657474	Identifier	dp		8657398	0					
ANR	8657475	Identifier	ps		8657398	1					
ANR	8657476	Identifier	validated		8657398	1					
ANR	8657477	PrimaryExpression	1		8657398	1					
ANR	8657478	ReturnType	static void		8657398	1					
ANR	8657479	Identifier	standard_image_validate		8657398	2					
ANR	8657480	ParameterList	"standard_display * dp , png_const_structp pp , int iImage , int iDisplay"		8657398	3					
ANR	8657481	Parameter	standard_display * dp	5690:24:176537:176556	8657398	0	True				
ANR	8657482	ParameterType	standard_display *		8657398	0					
ANR	8657483	Identifier	dp		8657398	1					
ANR	8657484	Parameter	png_const_structp pp	5690:46:176559:176578	8657398	1	True				
ANR	8657485	ParameterType	png_const_structp		8657398	0					
ANR	8657486	Identifier	pp		8657398	1					
ANR	8657487	Parameter	int iImage	5690:68:176581:176590	8657398	2	True				
ANR	8657488	ParameterType	int		8657398	0					
ANR	8657489	Identifier	iImage		8657398	1					
ANR	8657490	Parameter	int iDisplay	5691:4:176597:176608	8657398	3	True				
ANR	8657491	ParameterType	int		8657398	0					
ANR	8657492	Identifier	iDisplay		8657398	1					
ANR	8657493	CFGEntryNode	ENTRY		8657398		True				
ANR	8657494	CFGExitNode	EXIT		8657398		True				
ANR	8657495	Symbol	pp		8657398						
ANR	8657496	Symbol	iDisplay		8657398						
ANR	8657497	Symbol	* dp		8657398						
ANR	8657498	Symbol	dp -> ps -> validated		8657398						
ANR	8657499	Symbol	iImage		8657398						
ANR	8657500	Symbol	y		8657398						
ANR	8657501	Symbol	* * dp		8657398						
ANR	8657502	Symbol	dp -> h		8657398						
ANR	8657503	Symbol	dp		8657398						
ANR	8657504	Symbol	dp -> ps		8657398						
ANR	8657505	Symbol	* dp -> ps		8657398						
ANR	8657506	Function	standard_end	5708:0:176960:177421							
ANR	8657507	FunctionDef	"standard_end (png_structp ppIn , png_infop pi)"		8657506	0					
ANR	8657508	CompoundStatement		5710:0:177026:177421	8657506	0					
ANR	8657509	IdentifierDeclStatement	png_const_structp pp = ppIn ;	5711:3:177031:177058	8657506	0	True				
ANR	8657510	IdentifierDecl	pp = ppIn		8657506	0					
ANR	8657511	IdentifierDeclType	png_const_structp		8657506	0					
ANR	8657512	Identifier	pp		8657506	1					
ANR	8657513	AssignmentExpression	pp = ppIn		8657506	2		=			
ANR	8657514	Identifier	ppIn		8657506	0					
ANR	8657515	Identifier	ppIn		8657506	1					
ANR	8657516	Statement	standard_display	5712:3:177063:177078	8657506	1	True				
ANR	8657517	Statement	*	5712:20:177080:177080	8657506	2	True				
ANR	8657518	Statement	dp	5712:21:177081:177082	8657506	3	True				
ANR	8657519	Statement	=	5712:24:177084:177084	8657506	4	True				
ANR	8657520	Statement	voidcast	5712:26:177086:177093	8657506	5	True				
ANR	8657521	Statement	(	5712:34:177094:177094	8657506	6	True				
ANR	8657522	Statement	standard_display	5712:35:177095:177110	8657506	7	True				
ANR	8657523	Statement	*	5712:51:177111:177111	8657506	8	True				
ANR	8657524	Statement	","	5712:52:177112:177112	8657506	9	True				
ANR	8657525	Statement	png_get_progressive_ptr	5713:6:177120:177142	8657506	10	True				
ANR	8657526	Statement	(	5713:29:177143:177143	8657506	11	True				
ANR	8657527	Statement	pp	5713:30:177144:177145	8657506	12	True				
ANR	8657528	Statement	)	5713:32:177146:177146	8657506	13	True				
ANR	8657529	Statement	)	5713:33:177147:177147	8657506	14	True				
ANR	8657530	ExpressionStatement		5713:34:177148:177148	8657506	15	True				
ANR	8657531	Statement	UNUSED	5715:3:177154:177159	8657506	16	True				
ANR	8657532	ExpressionStatement	"( pi ) standard_text_validate ( dp , pp , pi , PNG_LIBPNG_VER >= 10518 )"	5715:9:177160:177376	8657506	17	True				
ANR	8657533	CastExpression	"( pi ) standard_text_validate ( dp , pp , pi , PNG_LIBPNG_VER >= 10518 )"		8657506	0					
ANR	8657534	CastTarget	pi		8657506	0					
ANR	8657535	CallExpression	"standard_text_validate ( dp , pp , pi , PNG_LIBPNG_VER >= 10518 )"		8657506	1					
ANR	8657536	Callee	standard_text_validate		8657506	0					
ANR	8657537	Identifier	standard_text_validate		8657506	0					
ANR	8657538	ArgumentList	dp		8657506	1					
ANR	8657539	Argument	dp		8657506	0					
ANR	8657540	Identifier	dp		8657506	0					
ANR	8657541	Argument	pp		8657506	1					
ANR	8657542	Identifier	pp		8657506	0					
ANR	8657543	Argument	pi		8657506	2					
ANR	8657544	Identifier	pi		8657506	0					
ANR	8657545	Argument	PNG_LIBPNG_VER >= 10518		8657506	3					
ANR	8657546	RelationalExpression	PNG_LIBPNG_VER >= 10518		8657506	0		>=			
ANR	8657547	Identifier	PNG_LIBPNG_VER		8657506	0					
ANR	8657548	PrimaryExpression	10518		8657506	1					
ANR	8657549	ExpressionStatement	"standard_image_validate ( dp , pp , 0 , - 1 )"	5722:3:177381:177419	8657506	18	True				
ANR	8657550	CallExpression	"standard_image_validate ( dp , pp , 0 , - 1 )"		8657506	0					
ANR	8657551	Callee	standard_image_validate		8657506	0					
ANR	8657552	Identifier	standard_image_validate		8657506	0					
ANR	8657553	ArgumentList	dp		8657506	1					
ANR	8657554	Argument	dp		8657506	0					
ANR	8657555	Identifier	dp		8657506	0					
ANR	8657556	Argument	pp		8657506	1					
ANR	8657557	Identifier	pp		8657506	0					
ANR	8657558	Argument	0		8657506	2					
ANR	8657559	PrimaryExpression	0		8657506	0					
ANR	8657560	Argument	- 1		8657506	3					
ANR	8657561	UnaryOperationExpression	- 1		8657506	0					
ANR	8657562	UnaryOperator	-		8657506	0					
ANR	8657563	PrimaryExpression	1		8657506	1					
ANR	8657564	ReturnType	static void PNGCBAPI		8657506	1					
ANR	8657565	Identifier	standard_end		8657506	2					
ANR	8657566	ParameterList	"png_structp ppIn , png_infop pi"		8657506	3					
ANR	8657567	Parameter	png_structp ppIn	5709:13:176994:177009	8657506	0	True				
ANR	8657568	ParameterType	png_structp		8657506	0					
ANR	8657569	Identifier	ppIn		8657506	1					
ANR	8657570	Parameter	png_infop pi	5709:31:177012:177023	8657506	1	True				
ANR	8657571	ParameterType	png_infop		8657506	0					
ANR	8657572	Identifier	pi		8657506	1					
ANR	8657573	CFGEntryNode	ENTRY		8657506		True				
ANR	8657574	CFGExitNode	EXIT		8657506		True				
ANR	8657575	Symbol	pp		8657506						
ANR	8657576	Symbol	PNG_LIBPNG_VER		8657506						
ANR	8657577	Symbol	ppIn		8657506						
ANR	8657578	Symbol	pi		8657506						
ANR	8657579	Symbol	dp		8657506						
ANR	8657580	DeclStmt									
ANR	8657581	Decl							standard_display	standard_display	d
ANR	8657582	DeclStmt									
ANR	8657583	Decl							png_structp	png_structp	pp
ANR	8657584	DeclStmt									
ANR	8657585	Decl							png_infop	png_infop	pi
ANR	8657586	DeclStmt									
ANR	8657587	Decl							int	int	interlace_type
ANR	8657588	Function	perform_standard_test	5836:0:180772:181266							
ANR	8657589	FunctionDef	perform_standard_test (png_modifier * pm)		8657588	0					
ANR	8657590	CompoundStatement		5838:0:180824:181266	8657588	0					
ANR	8657591	IfStatement	"if ( ! test_standard ( pm , 0 , 0 , READ_BDHI ) )"		8657588	0					
ANR	8657592	Condition	"! test_standard ( pm , 0 , 0 , READ_BDHI )"	5842:7:180987:181021	8657588	0	True				
ANR	8657593	UnaryOperationExpression	"! test_standard ( pm , 0 , 0 , READ_BDHI )"		8657588	0					
ANR	8657594	UnaryOperator	!		8657588	0					
ANR	8657595	CallExpression	"test_standard ( pm , 0 , 0 , READ_BDHI )"		8657588	1					
ANR	8657596	Callee	test_standard		8657588	0					
ANR	8657597	Identifier	test_standard		8657588	0					
ANR	8657598	ArgumentList	pm		8657588	1					
ANR	8657599	Argument	pm		8657588	0					
ANR	8657600	Identifier	pm		8657588	0					
ANR	8657601	Argument	0		8657588	1					
ANR	8657602	PrimaryExpression	0		8657588	0					
ANR	8657603	Argument	0		8657588	2					
ANR	8657604	PrimaryExpression	0		8657588	0					
ANR	8657605	Argument	READ_BDHI		8657588	3					
ANR	8657606	Identifier	READ_BDHI		8657588	0					
ANR	8657607	ReturnStatement	return ;	5843:6:181030:181036	8657588	1	True				
ANR	8657608	IfStatement	"if ( ! test_standard ( pm , 2 , 3 , READ_BDHI ) )"		8657588	1					
ANR	8657609	Condition	"! test_standard ( pm , 2 , 3 , READ_BDHI )"	5845:7:181046:181080	8657588	0	True				
ANR	8657610	UnaryOperationExpression	"! test_standard ( pm , 2 , 3 , READ_BDHI )"		8657588	0					
ANR	8657611	UnaryOperator	!		8657588	0					
ANR	8657612	CallExpression	"test_standard ( pm , 2 , 3 , READ_BDHI )"		8657588	1					
ANR	8657613	Callee	test_standard		8657588	0					
ANR	8657614	Identifier	test_standard		8657588	0					
ANR	8657615	ArgumentList	pm		8657588	1					
ANR	8657616	Argument	pm		8657588	0					
ANR	8657617	Identifier	pm		8657588	0					
ANR	8657618	Argument	2		8657588	1					
ANR	8657619	PrimaryExpression	2		8657588	0					
ANR	8657620	Argument	3		8657588	2					
ANR	8657621	PrimaryExpression	3		8657588	0					
ANR	8657622	Argument	READ_BDHI		8657588	3					
ANR	8657623	Identifier	READ_BDHI		8657588	0					
ANR	8657624	ReturnStatement	return ;	5846:6:181089:181095	8657588	1	True				
ANR	8657625	IfStatement	"if ( ! test_standard ( pm , 3 , 0 , 3 ) )"		8657588	2					
ANR	8657626	Condition	"! test_standard ( pm , 3 , 0 , 3 )"	5848:7:181105:181131	8657588	0	True				
ANR	8657627	UnaryOperationExpression	"! test_standard ( pm , 3 , 0 , 3 )"		8657588	0					
ANR	8657628	UnaryOperator	!		8657588	0					
ANR	8657629	CallExpression	"test_standard ( pm , 3 , 0 , 3 )"		8657588	1					
ANR	8657630	Callee	test_standard		8657588	0					
ANR	8657631	Identifier	test_standard		8657588	0					
ANR	8657632	ArgumentList	pm		8657588	1					
ANR	8657633	Argument	pm		8657588	0					
ANR	8657634	Identifier	pm		8657588	0					
ANR	8657635	Argument	3		8657588	1					
ANR	8657636	PrimaryExpression	3		8657588	0					
ANR	8657637	Argument	0		8657588	2					
ANR	8657638	PrimaryExpression	0		8657588	0					
ANR	8657639	Argument	3		8657588	3					
ANR	8657640	PrimaryExpression	3		8657588	0					
ANR	8657641	ReturnStatement	return ;	5849:6:181140:181146	8657588	1	True				
ANR	8657642	IfStatement	"if ( ! test_standard ( pm , 4 , 3 , READ_BDHI ) )"		8657588	3					
ANR	8657643	Condition	"! test_standard ( pm , 4 , 3 , READ_BDHI )"	5851:7:181156:181190	8657588	0	True				
ANR	8657644	UnaryOperationExpression	"! test_standard ( pm , 4 , 3 , READ_BDHI )"		8657588	0					
ANR	8657645	UnaryOperator	!		8657588	0					
ANR	8657646	CallExpression	"test_standard ( pm , 4 , 3 , READ_BDHI )"		8657588	1					
ANR	8657647	Callee	test_standard		8657588	0					
ANR	8657648	Identifier	test_standard		8657588	0					
ANR	8657649	ArgumentList	pm		8657588	1					
ANR	8657650	Argument	pm		8657588	0					
ANR	8657651	Identifier	pm		8657588	0					
ANR	8657652	Argument	4		8657588	1					
ANR	8657653	PrimaryExpression	4		8657588	0					
ANR	8657654	Argument	3		8657588	2					
ANR	8657655	PrimaryExpression	3		8657588	0					
ANR	8657656	Argument	READ_BDHI		8657588	3					
ANR	8657657	Identifier	READ_BDHI		8657588	0					
ANR	8657658	ReturnStatement	return ;	5852:6:181199:181205	8657588	1	True				
ANR	8657659	IfStatement	"if ( ! test_standard ( pm , 6 , 3 , READ_BDHI ) )"		8657588	4					
ANR	8657660	Condition	"! test_standard ( pm , 6 , 3 , READ_BDHI )"	5854:7:181215:181249	8657588	0	True				
ANR	8657661	UnaryOperationExpression	"! test_standard ( pm , 6 , 3 , READ_BDHI )"		8657588	0					
ANR	8657662	UnaryOperator	!		8657588	0					
ANR	8657663	CallExpression	"test_standard ( pm , 6 , 3 , READ_BDHI )"		8657588	1					
ANR	8657664	Callee	test_standard		8657588	0					
ANR	8657665	Identifier	test_standard		8657588	0					
ANR	8657666	ArgumentList	pm		8657588	1					
ANR	8657667	Argument	pm		8657588	0					
ANR	8657668	Identifier	pm		8657588	0					
ANR	8657669	Argument	6		8657588	1					
ANR	8657670	PrimaryExpression	6		8657588	0					
ANR	8657671	Argument	3		8657588	2					
ANR	8657672	PrimaryExpression	3		8657588	0					
ANR	8657673	Argument	READ_BDHI		8657588	3					
ANR	8657674	Identifier	READ_BDHI		8657588	0					
ANR	8657675	ReturnStatement	return ;	5855:6:181258:181264	8657588	1	True				
ANR	8657676	ReturnType	static void		8657588	1					
ANR	8657677	Identifier	perform_standard_test		8657588	2					
ANR	8657678	ParameterList	png_modifier * pm		8657588	3					
ANR	8657679	Parameter	png_modifier * pm	5837:22:180806:180821	8657588	0	True				
ANR	8657680	ParameterType	png_modifier *		8657588	0					
ANR	8657681	Identifier	pm		8657588	1					
ANR	8657682	CFGEntryNode	ENTRY		8657588		True				
ANR	8657683	CFGExitNode	EXIT		8657588		True				
ANR	8657684	Symbol	test_standard		8657588						
ANR	8657685	Symbol	READ_BDHI		8657588						
ANR	8657686	Symbol	pm		8657588						
ANR	8657687	DeclStmt									
ANR	8657688	Decl							const png_byte	const png_byte [ ]	hinc
ANR	8657689	DeclStmt									
ANR	8657690	Decl							const png_byte	const png_byte [ ]	winc
ANR	8657691	DeclStmt									
ANR	8657692	Decl							const int	const int	save_bdlo
ANR	8657693	DeclStmt									
ANR	8657694	Decl							png_uint_32	png_uint_32	h
ANR	8657695	Decl							png_uint_32	png_uint_32	w
ANR	8657696	DeclStmt									
ANR	8657697	Decl							CAN_WRITE_INTERLACE	CAN_WRITE_INTERLACE	standard_test
ANR	8657698	DeclStmt									
ANR	8657699	Decl							png_uint_32	png_uint_32	h
ANR	8657700	Decl							png_uint_32	png_uint_32	w
ANR	8657701	DeclStmt									
ANR	8657702	Decl							CAN_WRITE_INTERLACE	CAN_WRITE_INTERLACE	standard_test
ANR	8657703	DeclStmt									
ANR	8657704	Decl							endif endif ifdef PNG_WRITE_INTERLACING_SUPPORTED	endif endif ifdef PNG_WRITE_INTERLACING_SUPPORTED	standard_test
ANR	8657705	DeclStmt									
ANR	8657706	Decl							endif ifdef PNG_READ_INTERLACING_SUPPORTED ifdef PNG_WRITE_INTERLACING_SUPPORTED	endif ifdef PNG_READ_INTERLACING_SUPPORTED ifdef PNG_WRITE_INTERLACING_SUPPORTED	standard_test
ANR	8657707	Function	perform_size_test	5975:0:185176:185779							
ANR	8657708	FunctionDef	perform_size_test (png_modifier * pm)		8657707	0					
ANR	8657709	CompoundStatement		5977:0:185224:185779	8657707	0					
ANR	8657710	IfStatement	"if ( ! test_size ( pm , 0 , 0 , READ_BDHI ) )"		8657707	0					
ANR	8657711	Condition	"! test_size ( pm , 0 , 0 , READ_BDHI )"	5981:7:185387:185417	8657707	0	True				
ANR	8657712	UnaryOperationExpression	"! test_size ( pm , 0 , 0 , READ_BDHI )"		8657707	0					
ANR	8657713	UnaryOperator	!		8657707	0					
ANR	8657714	CallExpression	"test_size ( pm , 0 , 0 , READ_BDHI )"		8657707	1					
ANR	8657715	Callee	test_size		8657707	0					
ANR	8657716	Identifier	test_size		8657707	0					
ANR	8657717	ArgumentList	pm		8657707	1					
ANR	8657718	Argument	pm		8657707	0					
ANR	8657719	Identifier	pm		8657707	0					
ANR	8657720	Argument	0		8657707	1					
ANR	8657721	PrimaryExpression	0		8657707	0					
ANR	8657722	Argument	0		8657707	2					
ANR	8657723	PrimaryExpression	0		8657707	0					
ANR	8657724	Argument	READ_BDHI		8657707	3					
ANR	8657725	Identifier	READ_BDHI		8657707	0					
ANR	8657726	ReturnStatement	return ;	5982:6:185426:185432	8657707	1	True				
ANR	8657727	IfStatement	"if ( ! test_size ( pm , 2 , 3 , READ_BDHI ) )"		8657707	1					
ANR	8657728	Condition	"! test_size ( pm , 2 , 3 , READ_BDHI )"	5984:7:185442:185472	8657707	0	True				
ANR	8657729	UnaryOperationExpression	"! test_size ( pm , 2 , 3 , READ_BDHI )"		8657707	0					
ANR	8657730	UnaryOperator	!		8657707	0					
ANR	8657731	CallExpression	"test_size ( pm , 2 , 3 , READ_BDHI )"		8657707	1					
ANR	8657732	Callee	test_size		8657707	0					
ANR	8657733	Identifier	test_size		8657707	0					
ANR	8657734	ArgumentList	pm		8657707	1					
ANR	8657735	Argument	pm		8657707	0					
ANR	8657736	Identifier	pm		8657707	0					
ANR	8657737	Argument	2		8657707	1					
ANR	8657738	PrimaryExpression	2		8657707	0					
ANR	8657739	Argument	3		8657707	2					
ANR	8657740	PrimaryExpression	3		8657707	0					
ANR	8657741	Argument	READ_BDHI		8657707	3					
ANR	8657742	Identifier	READ_BDHI		8657707	0					
ANR	8657743	ReturnStatement	return ;	5985:6:185481:185487	8657707	1	True				
ANR	8657744	IfStatement	"if ( ! test_size ( pm , 3 , 0 , 3 ) )"		8657707	2					
ANR	8657745	Condition	"! test_size ( pm , 3 , 0 , 3 )"	5991:7:185623:185645	8657707	0	True				
ANR	8657746	UnaryOperationExpression	"! test_size ( pm , 3 , 0 , 3 )"		8657707	0					
ANR	8657747	UnaryOperator	!		8657707	0					
ANR	8657748	CallExpression	"test_size ( pm , 3 , 0 , 3 )"		8657707	1					
ANR	8657749	Callee	test_size		8657707	0					
ANR	8657750	Identifier	test_size		8657707	0					
ANR	8657751	ArgumentList	pm		8657707	1					
ANR	8657752	Argument	pm		8657707	0					
ANR	8657753	Identifier	pm		8657707	0					
ANR	8657754	Argument	3		8657707	1					
ANR	8657755	PrimaryExpression	3		8657707	0					
ANR	8657756	Argument	0		8657707	2					
ANR	8657757	PrimaryExpression	0		8657707	0					
ANR	8657758	Argument	3		8657707	3					
ANR	8657759	PrimaryExpression	3		8657707	0					
ANR	8657760	ReturnStatement	return ;	5992:6:185654:185660	8657707	1	True				
ANR	8657761	IfStatement	"if ( ! test_size ( pm , 4 , 3 , READ_BDHI ) )"		8657707	3					
ANR	8657762	Condition	"! test_size ( pm , 4 , 3 , READ_BDHI )"	5995:7:185677:185707	8657707	0	True				
ANR	8657763	UnaryOperationExpression	"! test_size ( pm , 4 , 3 , READ_BDHI )"		8657707	0					
ANR	8657764	UnaryOperator	!		8657707	0					
ANR	8657765	CallExpression	"test_size ( pm , 4 , 3 , READ_BDHI )"		8657707	1					
ANR	8657766	Callee	test_size		8657707	0					
ANR	8657767	Identifier	test_size		8657707	0					
ANR	8657768	ArgumentList	pm		8657707	1					
ANR	8657769	Argument	pm		8657707	0					
ANR	8657770	Identifier	pm		8657707	0					
ANR	8657771	Argument	4		8657707	1					
ANR	8657772	PrimaryExpression	4		8657707	0					
ANR	8657773	Argument	3		8657707	2					
ANR	8657774	PrimaryExpression	3		8657707	0					
ANR	8657775	Argument	READ_BDHI		8657707	3					
ANR	8657776	Identifier	READ_BDHI		8657707	0					
ANR	8657777	ReturnStatement	return ;	5996:6:185716:185722	8657707	1	True				
ANR	8657778	IfStatement	"if ( ! test_size ( pm , 6 , 3 , READ_BDHI ) )"		8657707	4					
ANR	8657779	Condition	"! test_size ( pm , 6 , 3 , READ_BDHI )"	5998:7:185732:185762	8657707	0	True				
ANR	8657780	UnaryOperationExpression	"! test_size ( pm , 6 , 3 , READ_BDHI )"		8657707	0					
ANR	8657781	UnaryOperator	!		8657707	0					
ANR	8657782	CallExpression	"test_size ( pm , 6 , 3 , READ_BDHI )"		8657707	1					
ANR	8657783	Callee	test_size		8657707	0					
ANR	8657784	Identifier	test_size		8657707	0					
ANR	8657785	ArgumentList	pm		8657707	1					
ANR	8657786	Argument	pm		8657707	0					
ANR	8657787	Identifier	pm		8657707	0					
ANR	8657788	Argument	6		8657707	1					
ANR	8657789	PrimaryExpression	6		8657707	0					
ANR	8657790	Argument	3		8657707	2					
ANR	8657791	PrimaryExpression	3		8657707	0					
ANR	8657792	Argument	READ_BDHI		8657707	3					
ANR	8657793	Identifier	READ_BDHI		8657707	0					
ANR	8657794	ReturnStatement	return ;	5999:6:185771:185777	8657707	1	True				
ANR	8657795	ReturnType	static void		8657707	1					
ANR	8657796	Identifier	perform_size_test		8657707	2					
ANR	8657797	ParameterList	png_modifier * pm		8657707	3					
ANR	8657798	Parameter	png_modifier * pm	5976:18:185206:185221	8657707	0	True				
ANR	8657799	ParameterType	png_modifier *		8657707	0					
ANR	8657800	Identifier	pm		8657707	1					
ANR	8657801	CFGEntryNode	ENTRY		8657707		True				
ANR	8657802	CFGExitNode	EXIT		8657707		True				
ANR	8657803	Symbol	test_size		8657707						
ANR	8657804	Symbol	READ_BDHI		8657707						
ANR	8657805	Symbol	pm		8657707						
ANR	8657806	ClassDef	image_pixel	6010:8:186177:187991							
ANR	8657807	DeclStmt									
ANR	8657808	Decl							unsigned int	unsigned int	red
ANR	8657809	Decl							unsigned int	unsigned int	green
ANR	8657810	Decl							unsigned int	unsigned int	blue
ANR	8657811	Decl							unsigned int	unsigned int	alpha
ANR	8657812	DeclStmt									
ANR	8657813	Decl							unsigned int	unsigned int	palette_index
ANR	8657814	DeclStmt									
ANR	8657815	Decl							png_byte	png_byte	colour_type
ANR	8657816	DeclStmt									
ANR	8657817	Decl							png_byte	png_byte	bit_depth
ANR	8657818	DeclStmt									
ANR	8657819	Decl							png_byte	png_byte	sample_depth
ANR	8657820	DeclStmt									
ANR	8657821	Decl							double	double	redf
ANR	8657822	Decl							double	double	greenf
ANR	8657823	Decl							double	double	bluef
ANR	8657824	Decl							double	double	alphaf
ANR	8657825	DeclStmt									
ANR	8657826	Decl							double	double	rede
ANR	8657827	Decl							double	double	greene
ANR	8657828	Decl							double	double	bluee
ANR	8657829	Decl							double	double	alphae
ANR	8657830	DeclStmt									
ANR	8657831	Decl							png_byte	png_byte	red_sBIT
ANR	8657832	Decl							png_byte	png_byte	green_sBIT
ANR	8657833	Decl							png_byte	png_byte	blue_sBIT
ANR	8657834	Decl							png_byte	png_byte	alpha_sBIT
ANR	8657835	DeclStmt									
ANR	8657836	Decl							image_pixel	image_pixel	image_pixel
ANR	8657837	Function	image_pixel_setf	6045:0:188036:188769							
ANR	8657838	FunctionDef	"image_pixel_setf (image_pixel * this , unsigned int rMax , unsigned int gMax , unsigned int bMax , unsigned int aMax)"		8657837	0					
ANR	8657839	CompoundStatement		6048:0:188168:188769	8657837	0					
ANR	8657840	ExpressionStatement	this -> redf = this -> red / ( double ) rMax	6049:3:188173:188210	8657837	0	True				
ANR	8657841	AssignmentExpression	this -> redf = this -> red / ( double ) rMax		8657837	0		=			
ANR	8657842	PtrMemberAccess	this -> redf		8657837	0					
ANR	8657843	Identifier	this		8657837	0					
ANR	8657844	Identifier	redf		8657837	1					
ANR	8657845	MultiplicativeExpression	this -> red / ( double ) rMax		8657837	1		/			
ANR	8657846	PtrMemberAccess	this -> red		8657837	0					
ANR	8657847	Identifier	this		8657837	0					
ANR	8657848	Identifier	red		8657837	1					
ANR	8657849	CastExpression	( double ) rMax		8657837	1					
ANR	8657850	CastTarget	double		8657837	0					
ANR	8657851	Identifier	rMax		8657837	1					
ANR	8657852	ExpressionStatement	this -> greenf = this -> green / ( double ) gMax	6050:3:188215:188256	8657837	1	True				
ANR	8657853	AssignmentExpression	this -> greenf = this -> green / ( double ) gMax		8657837	0		=			
ANR	8657854	PtrMemberAccess	this -> greenf		8657837	0					
ANR	8657855	Identifier	this		8657837	0					
ANR	8657856	Identifier	greenf		8657837	1					
ANR	8657857	MultiplicativeExpression	this -> green / ( double ) gMax		8657837	1		/			
ANR	8657858	PtrMemberAccess	this -> green		8657837	0					
ANR	8657859	Identifier	this		8657837	0					
ANR	8657860	Identifier	green		8657837	1					
ANR	8657861	CastExpression	( double ) gMax		8657837	1					
ANR	8657862	CastTarget	double		8657837	0					
ANR	8657863	Identifier	gMax		8657837	1					
ANR	8657864	ExpressionStatement	this -> bluef = this -> blue / ( double ) bMax	6051:3:188261:188300	8657837	2	True				
ANR	8657865	AssignmentExpression	this -> bluef = this -> blue / ( double ) bMax		8657837	0		=			
ANR	8657866	PtrMemberAccess	this -> bluef		8657837	0					
ANR	8657867	Identifier	this		8657837	0					
ANR	8657868	Identifier	bluef		8657837	1					
ANR	8657869	MultiplicativeExpression	this -> blue / ( double ) bMax		8657837	1		/			
ANR	8657870	PtrMemberAccess	this -> blue		8657837	0					
ANR	8657871	Identifier	this		8657837	0					
ANR	8657872	Identifier	blue		8657837	1					
ANR	8657873	CastExpression	( double ) bMax		8657837	1					
ANR	8657874	CastTarget	double		8657837	0					
ANR	8657875	Identifier	bMax		8657837	1					
ANR	8657876	ExpressionStatement	this -> alphaf = this -> alpha / ( double ) aMax	6052:3:188305:188346	8657837	3	True				
ANR	8657877	AssignmentExpression	this -> alphaf = this -> alpha / ( double ) aMax		8657837	0		=			
ANR	8657878	PtrMemberAccess	this -> alphaf		8657837	0					
ANR	8657879	Identifier	this		8657837	0					
ANR	8657880	Identifier	alphaf		8657837	1					
ANR	8657881	MultiplicativeExpression	this -> alpha / ( double ) aMax		8657837	1		/			
ANR	8657882	PtrMemberAccess	this -> alpha		8657837	0					
ANR	8657883	Identifier	this		8657837	0					
ANR	8657884	Identifier	alpha		8657837	1					
ANR	8657885	CastExpression	( double ) aMax		8657837	1					
ANR	8657886	CastTarget	double		8657837	0					
ANR	8657887	Identifier	aMax		8657837	1					
ANR	8657888	IfStatement	if ( this -> red < rMax )		8657837	4					
ANR	8657889	Condition	this -> red < rMax	6054:7:188356:188371	8657837	0	True				
ANR	8657890	RelationalExpression	this -> red < rMax		8657837	0		<			
ANR	8657891	PtrMemberAccess	this -> red		8657837	0					
ANR	8657892	Identifier	this		8657837	0					
ANR	8657893	Identifier	red		8657837	1					
ANR	8657894	Identifier	rMax		8657837	1					
ANR	8657895	ExpressionStatement	this -> rede = this -> redf * DBL_EPSILON	6055:6:188380:188417	8657837	1	True				
ANR	8657896	AssignmentExpression	this -> rede = this -> redf * DBL_EPSILON		8657837	0		=			
ANR	8657897	PtrMemberAccess	this -> rede		8657837	0					
ANR	8657898	Identifier	this		8657837	0					
ANR	8657899	Identifier	rede		8657837	1					
ANR	8657900	MultiplicativeExpression	this -> redf * DBL_EPSILON		8657837	1		*			
ANR	8657901	PtrMemberAccess	this -> redf		8657837	0					
ANR	8657902	Identifier	this		8657837	0					
ANR	8657903	Identifier	redf		8657837	1					
ANR	8657904	Identifier	DBL_EPSILON		8657837	1					
ANR	8657905	ElseStatement	else		8657837	0					
ANR	8657906	ExpressionStatement	this -> rede = 0	6057:6:188433:188447	8657837	0	True				
ANR	8657907	AssignmentExpression	this -> rede = 0		8657837	0		=			
ANR	8657908	PtrMemberAccess	this -> rede		8657837	0					
ANR	8657909	Identifier	this		8657837	0					
ANR	8657910	Identifier	rede		8657837	1					
ANR	8657911	PrimaryExpression	0		8657837	1					
ANR	8657912	IfStatement	if ( this -> green < gMax )		8657837	5					
ANR	8657913	Condition	this -> green < gMax	6058:7:188456:188473	8657837	0	True				
ANR	8657914	RelationalExpression	this -> green < gMax		8657837	0		<			
ANR	8657915	PtrMemberAccess	this -> green		8657837	0					
ANR	8657916	Identifier	this		8657837	0					
ANR	8657917	Identifier	green		8657837	1					
ANR	8657918	Identifier	gMax		8657837	1					
ANR	8657919	ExpressionStatement	this -> greene = this -> greenf * DBL_EPSILON	6059:6:188482:188523	8657837	1	True				
ANR	8657920	AssignmentExpression	this -> greene = this -> greenf * DBL_EPSILON		8657837	0		=			
ANR	8657921	PtrMemberAccess	this -> greene		8657837	0					
ANR	8657922	Identifier	this		8657837	0					
ANR	8657923	Identifier	greene		8657837	1					
ANR	8657924	MultiplicativeExpression	this -> greenf * DBL_EPSILON		8657837	1		*			
ANR	8657925	PtrMemberAccess	this -> greenf		8657837	0					
ANR	8657926	Identifier	this		8657837	0					
ANR	8657927	Identifier	greenf		8657837	1					
ANR	8657928	Identifier	DBL_EPSILON		8657837	1					
ANR	8657929	ElseStatement	else		8657837	0					
ANR	8657930	ExpressionStatement	this -> greene = 0	6061:6:188539:188555	8657837	0	True				
ANR	8657931	AssignmentExpression	this -> greene = 0		8657837	0		=			
ANR	8657932	PtrMemberAccess	this -> greene		8657837	0					
ANR	8657933	Identifier	this		8657837	0					
ANR	8657934	Identifier	greene		8657837	1					
ANR	8657935	PrimaryExpression	0		8657837	1					
ANR	8657936	IfStatement	if ( this -> blue < bMax )		8657837	6					
ANR	8657937	Condition	this -> blue < bMax	6062:7:188564:188580	8657837	0	True				
ANR	8657938	RelationalExpression	this -> blue < bMax		8657837	0		<			
ANR	8657939	PtrMemberAccess	this -> blue		8657837	0					
ANR	8657940	Identifier	this		8657837	0					
ANR	8657941	Identifier	blue		8657837	1					
ANR	8657942	Identifier	bMax		8657837	1					
ANR	8657943	ExpressionStatement	this -> bluee = this -> bluef * DBL_EPSILON	6063:6:188589:188628	8657837	1	True				
ANR	8657944	AssignmentExpression	this -> bluee = this -> bluef * DBL_EPSILON		8657837	0		=			
ANR	8657945	PtrMemberAccess	this -> bluee		8657837	0					
ANR	8657946	Identifier	this		8657837	0					
ANR	8657947	Identifier	bluee		8657837	1					
ANR	8657948	MultiplicativeExpression	this -> bluef * DBL_EPSILON		8657837	1		*			
ANR	8657949	PtrMemberAccess	this -> bluef		8657837	0					
ANR	8657950	Identifier	this		8657837	0					
ANR	8657951	Identifier	bluef		8657837	1					
ANR	8657952	Identifier	DBL_EPSILON		8657837	1					
ANR	8657953	ElseStatement	else		8657837	0					
ANR	8657954	ExpressionStatement	this -> bluee = 0	6065:6:188644:188659	8657837	0	True				
ANR	8657955	AssignmentExpression	this -> bluee = 0		8657837	0		=			
ANR	8657956	PtrMemberAccess	this -> bluee		8657837	0					
ANR	8657957	Identifier	this		8657837	0					
ANR	8657958	Identifier	bluee		8657837	1					
ANR	8657959	PrimaryExpression	0		8657837	1					
ANR	8657960	IfStatement	if ( this -> alpha < aMax )		8657837	7					
ANR	8657961	Condition	this -> alpha < aMax	6066:7:188668:188685	8657837	0	True				
ANR	8657962	RelationalExpression	this -> alpha < aMax		8657837	0		<			
ANR	8657963	PtrMemberAccess	this -> alpha		8657837	0					
ANR	8657964	Identifier	this		8657837	0					
ANR	8657965	Identifier	alpha		8657837	1					
ANR	8657966	Identifier	aMax		8657837	1					
ANR	8657967	ExpressionStatement	this -> alphae = this -> alphaf * DBL_EPSILON	6067:6:188694:188735	8657837	1	True				
ANR	8657968	AssignmentExpression	this -> alphae = this -> alphaf * DBL_EPSILON		8657837	0		=			
ANR	8657969	PtrMemberAccess	this -> alphae		8657837	0					
ANR	8657970	Identifier	this		8657837	0					
ANR	8657971	Identifier	alphae		8657837	1					
ANR	8657972	MultiplicativeExpression	this -> alphaf * DBL_EPSILON		8657837	1		*			
ANR	8657973	PtrMemberAccess	this -> alphaf		8657837	0					
ANR	8657974	Identifier	this		8657837	0					
ANR	8657975	Identifier	alphaf		8657837	1					
ANR	8657976	Identifier	DBL_EPSILON		8657837	1					
ANR	8657977	ElseStatement	else		8657837	0					
ANR	8657978	ExpressionStatement	this -> alphae = 0	6069:6:188751:188767	8657837	0	True				
ANR	8657979	AssignmentExpression	this -> alphae = 0		8657837	0		=			
ANR	8657980	PtrMemberAccess	this -> alphae		8657837	0					
ANR	8657981	Identifier	this		8657837	0					
ANR	8657982	Identifier	alphae		8657837	1					
ANR	8657983	PrimaryExpression	0		8657837	1					
ANR	8657984	ReturnType	static void		8657837	1					
ANR	8657985	Identifier	image_pixel_setf		8657837	2					
ANR	8657986	ParameterList	"image_pixel * this , unsigned int rMax , unsigned int gMax , unsigned int bMax , unsigned int aMax"		8657837	3					
ANR	8657987	Parameter	image_pixel * this	6046:17:188065:188081	8657837	0	True				
ANR	8657988	ParameterType	image_pixel *		8657837	0					
ANR	8657989	Identifier	this		8657837	1					
ANR	8657990	Parameter	unsigned int rMax	6046:36:188084:188100	8657837	1	True				
ANR	8657991	ParameterType	unsigned int		8657837	0					
ANR	8657992	Identifier	rMax		8657837	1					
ANR	8657993	Parameter	unsigned int gMax	6046:55:188103:188119	8657837	2	True				
ANR	8657994	ParameterType	unsigned int		8657837	0					
ANR	8657995	Identifier	gMax		8657837	1					
ANR	8657996	Parameter	unsigned int bMax	6047:8:188130:188146	8657837	3	True				
ANR	8657997	ParameterType	unsigned int		8657837	0					
ANR	8657998	Identifier	bMax		8657837	1					
ANR	8657999	Parameter	unsigned int aMax	6047:27:188149:188165	8657837	4	True				
ANR	8658000	ParameterType	unsigned int		8657837	0					
ANR	8658001	Identifier	aMax		8657837	1					
ANR	8658002	CFGEntryNode	ENTRY		8657837		True				
ANR	8658003	CFGExitNode	EXIT		8657837		True				
ANR	8658004	Symbol	this -> green		8657837						
ANR	8658005	Symbol	this -> greenf		8657837						
ANR	8658006	Symbol	this -> redf		8657837						
ANR	8658007	Symbol	rMax		8657837						
ANR	8658008	Symbol	this -> rede		8657837						
ANR	8658009	Symbol	this -> blue		8657837						
ANR	8658010	Symbol	this		8657837						
ANR	8658011	Symbol	DBL_EPSILON		8657837						
ANR	8658012	Symbol	aMax		8657837						
ANR	8658013	Symbol	this -> alpha		8657837						
ANR	8658014	Symbol	bMax		8657837						
ANR	8658015	Symbol	* this		8657837						
ANR	8658016	Symbol	this -> alphaf		8657837						
ANR	8658017	Symbol	this -> alphae		8657837						
ANR	8658018	Symbol	gMax		8657837						
ANR	8658019	Symbol	this -> bluef		8657837						
ANR	8658020	Symbol	this -> bluee		8657837						
ANR	8658021	Symbol	this -> greene		8657837						
ANR	8658022	Symbol	this -> red		8657837						
ANR	8658023	Function	image_pixel_init	6076:0:188939:192548							
ANR	8658024	FunctionDef	"image_pixel_init (image_pixel * this , png_const_bytep row , png_byte colour_type , png_byte bit_depth , png_uint_32 x , store_palette palette , const image_pixel * format)"		8658023	0					
ANR	8658025	CompoundStatement		6080:0:189160:192548	8658023	0					
ANR	8658026	IdentifierDeclStatement	const png_byte sample_depth = ( png_byte ) ( colour_type == PNG_COLOR_TYPE_PALETTE ? 8 : bit_depth ) ;	6081:3:189165:189266	8658023	0	True				
ANR	8658027	IdentifierDecl	sample_depth = ( png_byte ) ( colour_type == PNG_COLOR_TYPE_PALETTE ? 8 : bit_depth )		8658023	0					
ANR	8658028	IdentifierDeclType	const png_byte		8658023	0					
ANR	8658029	Identifier	sample_depth		8658023	1					
ANR	8658030	AssignmentExpression	sample_depth = ( png_byte ) ( colour_type == PNG_COLOR_TYPE_PALETTE ? 8 : bit_depth )		8658023	2		=			
ANR	8658031	Identifier	sample_depth		8658023	0					
ANR	8658032	CastExpression	( png_byte ) ( colour_type == PNG_COLOR_TYPE_PALETTE ? 8 : bit_depth )		8658023	1					
ANR	8658033	CastTarget	png_byte		8658023	0					
ANR	8658034	ConditionalExpression	colour_type == PNG_COLOR_TYPE_PALETTE ? 8 : bit_depth		8658023	1					
ANR	8658035	Condition	colour_type == PNG_COLOR_TYPE_PALETTE		8658023	0					
ANR	8658036	EqualityExpression	colour_type == PNG_COLOR_TYPE_PALETTE		8658023	0		==			
ANR	8658037	Identifier	colour_type		8658023	0					
ANR	8658038	Identifier	PNG_COLOR_TYPE_PALETTE		8658023	1					
ANR	8658039	PrimaryExpression	8		8658023	1					
ANR	8658040	Identifier	bit_depth		8658023	2					
ANR	8658041	IdentifierDeclStatement	const unsigned int max = ( 1U << sample_depth ) - 1 ;	6083:3:189271:189316	8658023	1	True				
ANR	8658042	IdentifierDecl	max = ( 1U << sample_depth ) - 1		8658023	0					
ANR	8658043	IdentifierDeclType	const unsigned int		8658023	0					
ANR	8658044	Identifier	max		8658023	1					
ANR	8658045	AssignmentExpression	max = ( 1U << sample_depth ) - 1		8658023	2		=			
ANR	8658046	Identifier	max		8658023	0					
ANR	8658047	AdditiveExpression	( 1U << sample_depth ) - 1		8658023	1		-			
ANR	8658048	ShiftExpression	1U << sample_depth		8658023	0		<<			
ANR	8658049	PrimaryExpression	1U		8658023	0					
ANR	8658050	Identifier	sample_depth		8658023	1					
ANR	8658051	PrimaryExpression	1		8658023	1					
ANR	8658052	IdentifierDeclStatement	const int swap16 = ( format != 0 && format -> swap16 ) ;	6084:3:189321:189371	8658023	2	True				
ANR	8658053	IdentifierDecl	swap16 = ( format != 0 && format -> swap16 )		8658023	0					
ANR	8658054	IdentifierDeclType	const int		8658023	0					
ANR	8658055	Identifier	swap16		8658023	1					
ANR	8658056	AssignmentExpression	swap16 = ( format != 0 && format -> swap16 )		8658023	2		=			
ANR	8658057	Identifier	swap16		8658023	0					
ANR	8658058	AndExpression	format != 0 && format -> swap16		8658023	1		&&			
ANR	8658059	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658060	Identifier	format		8658023	0					
ANR	8658061	PrimaryExpression	0		8658023	1					
ANR	8658062	PtrMemberAccess	format -> swap16		8658023	1					
ANR	8658063	Identifier	format		8658023	0					
ANR	8658064	Identifier	swap16		8658023	1					
ANR	8658065	IdentifierDeclStatement	const int littleendian = ( format != 0 && format -> littleendian ) ;	6085:3:189376:189438	8658023	3	True				
ANR	8658066	IdentifierDecl	littleendian = ( format != 0 && format -> littleendian )		8658023	0					
ANR	8658067	IdentifierDeclType	const int		8658023	0					
ANR	8658068	Identifier	littleendian		8658023	1					
ANR	8658069	AssignmentExpression	littleendian = ( format != 0 && format -> littleendian )		8658023	2		=			
ANR	8658070	Identifier	littleendian		8658023	0					
ANR	8658071	AndExpression	format != 0 && format -> littleendian		8658023	1		&&			
ANR	8658072	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658073	Identifier	format		8658023	0					
ANR	8658074	PrimaryExpression	0		8658023	1					
ANR	8658075	PtrMemberAccess	format -> littleendian		8658023	1					
ANR	8658076	Identifier	format		8658023	0					
ANR	8658077	Identifier	littleendian		8658023	1					
ANR	8658078	IdentifierDeclStatement	const int sig_bits = ( format != 0 && format -> sig_bits ) ;	6086:3:189443:189497	8658023	4	True				
ANR	8658079	IdentifierDecl	sig_bits = ( format != 0 && format -> sig_bits )		8658023	0					
ANR	8658080	IdentifierDeclType	const int		8658023	0					
ANR	8658081	Identifier	sig_bits		8658023	1					
ANR	8658082	AssignmentExpression	sig_bits = ( format != 0 && format -> sig_bits )		8658023	2		=			
ANR	8658083	Identifier	sig_bits		8658023	0					
ANR	8658084	AndExpression	format != 0 && format -> sig_bits		8658023	1		&&			
ANR	8658085	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658086	Identifier	format		8658023	0					
ANR	8658087	PrimaryExpression	0		8658023	1					
ANR	8658088	PtrMemberAccess	format -> sig_bits		8658023	1					
ANR	8658089	Identifier	format		8658023	0					
ANR	8658090	Identifier	sig_bits		8658023	1					
ANR	8658091	ExpressionStatement	"this -> palette_index = this -> red = this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 0 , swap16 , littleendian )"	6092:3:189689:189819	8658023	5	True				
ANR	8658092	AssignmentExpression	"this -> palette_index = this -> red = this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 0 , swap16 , littleendian )"		8658023	0		=			
ANR	8658093	PtrMemberAccess	this -> palette_index		8658023	0					
ANR	8658094	Identifier	this		8658023	0					
ANR	8658095	Identifier	palette_index		8658023	1					
ANR	8658096	AssignmentExpression	"this -> red = this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 0 , swap16 , littleendian )"		8658023	1		=			
ANR	8658097	PtrMemberAccess	this -> red		8658023	0					
ANR	8658098	Identifier	this		8658023	0					
ANR	8658099	Identifier	red		8658023	1					
ANR	8658100	AssignmentExpression	"this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 0 , swap16 , littleendian )"		8658023	1		=			
ANR	8658101	PtrMemberAccess	this -> green		8658023	0					
ANR	8658102	Identifier	this		8658023	0					
ANR	8658103	Identifier	green		8658023	1					
ANR	8658104	AssignmentExpression	"this -> blue = sample ( row , colour_type , bit_depth , x , 0 , swap16 , littleendian )"		8658023	1		=			
ANR	8658105	PtrMemberAccess	this -> blue		8658023	0					
ANR	8658106	Identifier	this		8658023	0					
ANR	8658107	Identifier	blue		8658023	1					
ANR	8658108	CallExpression	"sample ( row , colour_type , bit_depth , x , 0 , swap16 , littleendian )"		8658023	1					
ANR	8658109	Callee	sample		8658023	0					
ANR	8658110	Identifier	sample		8658023	0					
ANR	8658111	ArgumentList	row		8658023	1					
ANR	8658112	Argument	row		8658023	0					
ANR	8658113	Identifier	row		8658023	0					
ANR	8658114	Argument	colour_type		8658023	1					
ANR	8658115	Identifier	colour_type		8658023	0					
ANR	8658116	Argument	bit_depth		8658023	2					
ANR	8658117	Identifier	bit_depth		8658023	0					
ANR	8658118	Argument	x		8658023	3					
ANR	8658119	Identifier	x		8658023	0					
ANR	8658120	Argument	0		8658023	4					
ANR	8658121	PrimaryExpression	0		8658023	0					
ANR	8658122	Argument	swap16		8658023	5					
ANR	8658123	Identifier	swap16		8658023	0					
ANR	8658124	Argument	littleendian		8658023	6					
ANR	8658125	Identifier	littleendian		8658023	0					
ANR	8658126	ExpressionStatement	this -> alpha = max	6094:3:189824:189841	8658023	6	True				
ANR	8658127	AssignmentExpression	this -> alpha = max		8658023	0		=			
ANR	8658128	PtrMemberAccess	this -> alpha		8658023	0					
ANR	8658129	Identifier	this		8658023	0					
ANR	8658130	Identifier	alpha		8658023	1					
ANR	8658131	Identifier	max		8658023	1					
ANR	8658132	ExpressionStatement	this -> red_sBIT = this -> green_sBIT = this -> blue_sBIT = this -> alpha_sBIT = sample_depth	6095:3:189846:189937	8658023	7	True				
ANR	8658133	AssignmentExpression	this -> red_sBIT = this -> green_sBIT = this -> blue_sBIT = this -> alpha_sBIT = sample_depth		8658023	0		=			
ANR	8658134	PtrMemberAccess	this -> red_sBIT		8658023	0					
ANR	8658135	Identifier	this		8658023	0					
ANR	8658136	Identifier	red_sBIT		8658023	1					
ANR	8658137	AssignmentExpression	this -> green_sBIT = this -> blue_sBIT = this -> alpha_sBIT = sample_depth		8658023	1		=			
ANR	8658138	PtrMemberAccess	this -> green_sBIT		8658023	0					
ANR	8658139	Identifier	this		8658023	0					
ANR	8658140	Identifier	green_sBIT		8658023	1					
ANR	8658141	AssignmentExpression	this -> blue_sBIT = this -> alpha_sBIT = sample_depth		8658023	1		=			
ANR	8658142	PtrMemberAccess	this -> blue_sBIT		8658023	0					
ANR	8658143	Identifier	this		8658023	0					
ANR	8658144	Identifier	blue_sBIT		8658023	1					
ANR	8658145	AssignmentExpression	this -> alpha_sBIT = sample_depth		8658023	1		=			
ANR	8658146	PtrMemberAccess	this -> alpha_sBIT		8658023	0					
ANR	8658147	Identifier	this		8658023	0					
ANR	8658148	Identifier	alpha_sBIT		8658023	1					
ANR	8658149	Identifier	sample_depth		8658023	1					
ANR	8658150	IfStatement	if ( colour_type == 3 )		8658023	8					
ANR	8658151	Condition	colour_type == 3	6099:7:189986:190001	8658023	0	True				
ANR	8658152	EqualityExpression	colour_type == 3		8658023	0		==			
ANR	8658153	Identifier	colour_type		8658023	0					
ANR	8658154	PrimaryExpression	3		8658023	1					
ANR	8658155	CompoundStatement		21:3:860:860	8658023	1					
ANR	8658156	IfStatement	if ( palette != 0 )		8658023	0					
ANR	8658157	Condition	palette != 0	6102:10:190101:190112	8658023	0	True				
ANR	8658158	EqualityExpression	palette != 0		8658023	0		!=			
ANR	8658159	Identifier	palette		8658023	0					
ANR	8658160	PrimaryExpression	0		8658023	1					
ANR	8658161	CompoundStatement		25:9:971:1013	8658023	1					
ANR	8658162	IdentifierDeclStatement	const unsigned int i = this -> palette_index ;	6104:9:190132:190174	8658023	0	True				
ANR	8658163	IdentifierDecl	i = this -> palette_index		8658023	0					
ANR	8658164	IdentifierDeclType	const unsigned int		8658023	0					
ANR	8658165	Identifier	i		8658023	1					
ANR	8658166	AssignmentExpression	i = this -> palette_index		8658023	2		=			
ANR	8658167	Identifier	i		8658023	0					
ANR	8658168	PtrMemberAccess	this -> palette_index		8658023	1					
ANR	8658169	Identifier	this		8658023	0					
ANR	8658170	Identifier	palette_index		8658023	1					
ANR	8658171	ExpressionStatement	this -> red = palette [ i ] . red	6106:9:190186:190212	8658023	1	True				
ANR	8658172	AssignmentExpression	this -> red = palette [ i ] . red		8658023	0		=			
ANR	8658173	PtrMemberAccess	this -> red		8658023	0					
ANR	8658174	Identifier	this		8658023	0					
ANR	8658175	Identifier	red		8658023	1					
ANR	8658176	MemberAccess	palette [ i ] . red		8658023	1					
ANR	8658177	ArrayIndexing	palette [ i ]		8658023	0					
ANR	8658178	Identifier	palette		8658023	0					
ANR	8658179	Identifier	i		8658023	1					
ANR	8658180	Identifier	red		8658023	1					
ANR	8658181	ExpressionStatement	this -> green = palette [ i ] . green	6107:9:190223:190253	8658023	2	True				
ANR	8658182	AssignmentExpression	this -> green = palette [ i ] . green		8658023	0		=			
ANR	8658183	PtrMemberAccess	this -> green		8658023	0					
ANR	8658184	Identifier	this		8658023	0					
ANR	8658185	Identifier	green		8658023	1					
ANR	8658186	MemberAccess	palette [ i ] . green		8658023	1					
ANR	8658187	ArrayIndexing	palette [ i ]		8658023	0					
ANR	8658188	Identifier	palette		8658023	0					
ANR	8658189	Identifier	i		8658023	1					
ANR	8658190	Identifier	green		8658023	1					
ANR	8658191	ExpressionStatement	this -> blue = palette [ i ] . blue	6108:9:190264:190292	8658023	3	True				
ANR	8658192	AssignmentExpression	this -> blue = palette [ i ] . blue		8658023	0		=			
ANR	8658193	PtrMemberAccess	this -> blue		8658023	0					
ANR	8658194	Identifier	this		8658023	0					
ANR	8658195	Identifier	blue		8658023	1					
ANR	8658196	MemberAccess	palette [ i ] . blue		8658023	1					
ANR	8658197	ArrayIndexing	palette [ i ]		8658023	0					
ANR	8658198	Identifier	palette		8658023	0					
ANR	8658199	Identifier	i		8658023	1					
ANR	8658200	Identifier	blue		8658023	1					
ANR	8658201	ExpressionStatement	this -> alpha = palette [ i ] . alpha	6109:9:190303:190333	8658023	4	True				
ANR	8658202	AssignmentExpression	this -> alpha = palette [ i ] . alpha		8658023	0		=			
ANR	8658203	PtrMemberAccess	this -> alpha		8658023	0					
ANR	8658204	Identifier	this		8658023	0					
ANR	8658205	Identifier	alpha		8658023	1					
ANR	8658206	MemberAccess	palette [ i ] . alpha		8658023	1					
ANR	8658207	ArrayIndexing	palette [ i ]		8658023	0					
ANR	8658208	Identifier	palette		8658023	0					
ANR	8658209	Identifier	i		8658023	1					
ANR	8658210	Identifier	alpha		8658023	1					
ANR	8658211	ElseStatement	else		8658023	0					
ANR	8658212	CompoundStatement		36:6:1225:1243	8658023	0					
ANR	8658213	IdentifierDeclStatement	unsigned int i = 0 ;	6115:6:190386:190404	8658023	0	True				
ANR	8658214	IdentifierDecl	i = 0		8658023	0					
ANR	8658215	IdentifierDeclType	unsigned int		8658023	0					
ANR	8658216	Identifier	i		8658023	1					
ANR	8658217	AssignmentExpression	i = 0		8658023	2		=			
ANR	8658218	Identifier	i		8658023	0					
ANR	8658219	PrimaryExpression	0		8658023	1					
ANR	8658220	IfStatement	if ( ( colour_type & 4 ) != 0 && format != 0 && format -> alpha_first )		8658023	1					
ANR	8658221	Condition	( colour_type & 4 ) != 0 && format != 0 && format -> alpha_first	6117:10:190417:190476	8658023	0	True				
ANR	8658222	AndExpression	( colour_type & 4 ) != 0 && format != 0 && format -> alpha_first		8658023	0		&&			
ANR	8658223	EqualityExpression	( colour_type & 4 ) != 0		8658023	0		!=			
ANR	8658224	BitAndExpression	colour_type & 4		8658023	0		&			
ANR	8658225	Identifier	colour_type		8658023	0					
ANR	8658226	PrimaryExpression	4		8658023	1					
ANR	8658227	PrimaryExpression	0		8658023	1					
ANR	8658228	AndExpression	format != 0 && format -> alpha_first		8658023	1		&&			
ANR	8658229	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658230	Identifier	format		8658023	0					
ANR	8658231	PrimaryExpression	0		8658023	1					
ANR	8658232	PtrMemberAccess	format -> alpha_first		8658023	1					
ANR	8658233	Identifier	format		8658023	0					
ANR	8658234	Identifier	alpha_first		8658023	1					
ANR	8658235	CompoundStatement		39:6:1324:1324	8658023	1					
ANR	8658236	ExpressionStatement	this -> alpha = this -> red	6119:9:190496:190519	8658023	0	True				
ANR	8658237	AssignmentExpression	this -> alpha = this -> red		8658023	0		=			
ANR	8658238	PtrMemberAccess	this -> alpha		8658023	0					
ANR	8658239	Identifier	this		8658023	0					
ANR	8658240	Identifier	alpha		8658023	1					
ANR	8658241	PtrMemberAccess	this -> red		8658023	1					
ANR	8658242	Identifier	this		8658023	0					
ANR	8658243	Identifier	red		8658023	1					
ANR	8658244	ExpressionStatement	"this -> palette_index = this -> red = this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 1 , swap16 , littleendian )"	6121:9:190588:190724	8658023	1	True				
ANR	8658245	AssignmentExpression	"this -> palette_index = this -> red = this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 1 , swap16 , littleendian )"		8658023	0		=			
ANR	8658246	PtrMemberAccess	this -> palette_index		8658023	0					
ANR	8658247	Identifier	this		8658023	0					
ANR	8658248	Identifier	palette_index		8658023	1					
ANR	8658249	AssignmentExpression	"this -> red = this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 1 , swap16 , littleendian )"		8658023	1		=			
ANR	8658250	PtrMemberAccess	this -> red		8658023	0					
ANR	8658251	Identifier	this		8658023	0					
ANR	8658252	Identifier	red		8658023	1					
ANR	8658253	AssignmentExpression	"this -> green = this -> blue = sample ( row , colour_type , bit_depth , x , 1 , swap16 , littleendian )"		8658023	1		=			
ANR	8658254	PtrMemberAccess	this -> green		8658023	0					
ANR	8658255	Identifier	this		8658023	0					
ANR	8658256	Identifier	green		8658023	1					
ANR	8658257	AssignmentExpression	"this -> blue = sample ( row , colour_type , bit_depth , x , 1 , swap16 , littleendian )"		8658023	1		=			
ANR	8658258	PtrMemberAccess	this -> blue		8658023	0					
ANR	8658259	Identifier	this		8658023	0					
ANR	8658260	Identifier	blue		8658023	1					
ANR	8658261	CallExpression	"sample ( row , colour_type , bit_depth , x , 1 , swap16 , littleendian )"		8658023	1					
ANR	8658262	Callee	sample		8658023	0					
ANR	8658263	Identifier	sample		8658023	0					
ANR	8658264	ArgumentList	row		8658023	1					
ANR	8658265	Argument	row		8658023	0					
ANR	8658266	Identifier	row		8658023	0					
ANR	8658267	Argument	colour_type		8658023	1					
ANR	8658268	Identifier	colour_type		8658023	0					
ANR	8658269	Argument	bit_depth		8658023	2					
ANR	8658270	Identifier	bit_depth		8658023	0					
ANR	8658271	Argument	x		8658023	3					
ANR	8658272	Identifier	x		8658023	0					
ANR	8658273	Argument	1		8658023	4					
ANR	8658274	PrimaryExpression	1		8658023	0					
ANR	8658275	Argument	swap16		8658023	5					
ANR	8658276	Identifier	swap16		8658023	0					
ANR	8658277	Argument	littleendian		8658023	6					
ANR	8658278	Identifier	littleendian		8658023	0					
ANR	8658279	ExpressionStatement	i = 1	6123:9:190735:190740	8658023	2	True				
ANR	8658280	AssignmentExpression	i = 1		8658023	0		=			
ANR	8658281	Identifier	i		8658023	0					
ANR	8658282	PrimaryExpression	1		8658023	1					
ANR	8658283	IfStatement	if ( colour_type & 2 )		8658023	2					
ANR	8658284	Condition	colour_type & 2	6126:10:190761:190775	8658023	0	True				
ANR	8658285	BitAndExpression	colour_type & 2		8658023	0		&			
ANR	8658286	Identifier	colour_type		8658023	0					
ANR	8658287	PrimaryExpression	2		8658023	1					
ANR	8658288	CompoundStatement		48:6:1623:1623	8658023	1					
ANR	8658289	ExpressionStatement	"this -> green = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"	6129:9:190848:190944	8658023	0	True				
ANR	8658290	AssignmentExpression	"this -> green = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	0		=			
ANR	8658291	PtrMemberAccess	this -> green		8658023	0					
ANR	8658292	Identifier	this		8658023	0					
ANR	8658293	Identifier	green		8658023	1					
ANR	8658294	CallExpression	"sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	1					
ANR	8658295	Callee	sample		8658023	0					
ANR	8658296	Identifier	sample		8658023	0					
ANR	8658297	ArgumentList	row		8658023	1					
ANR	8658298	Argument	row		8658023	0					
ANR	8658299	Identifier	row		8658023	0					
ANR	8658300	Argument	colour_type		8658023	1					
ANR	8658301	Identifier	colour_type		8658023	0					
ANR	8658302	Argument	bit_depth		8658023	2					
ANR	8658303	Identifier	bit_depth		8658023	0					
ANR	8658304	Argument	x		8658023	3					
ANR	8658305	Identifier	x		8658023	0					
ANR	8658306	Argument	++ i		8658023	4					
ANR	8658307	UnaryExpression	++ i		8658023	0					
ANR	8658308	IncDec	++		8658023	0					
ANR	8658309	Identifier	i		8658023	1					
ANR	8658310	Argument	swap16		8658023	5					
ANR	8658311	Identifier	swap16		8658023	0					
ANR	8658312	Argument	littleendian		8658023	6					
ANR	8658313	Identifier	littleendian		8658023	0					
ANR	8658314	IfStatement	if ( format != 0 && format -> swap_rgb )		8658023	1					
ANR	8658315	Condition	format != 0 && format -> swap_rgb	6132:13:190960:190990	8658023	0	True				
ANR	8658316	AndExpression	format != 0 && format -> swap_rgb		8658023	0		&&			
ANR	8658317	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658318	Identifier	format		8658023	0					
ANR	8658319	PrimaryExpression	0		8658023	1					
ANR	8658320	PtrMemberAccess	format -> swap_rgb		8658023	1					
ANR	8658321	Identifier	format		8658023	0					
ANR	8658322	Identifier	swap_rgb		8658023	1					
ANR	8658323	ExpressionStatement	"this -> red = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"	6133:13:191016:191114	8658023	1	True				
ANR	8658324	AssignmentExpression	"this -> red = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	0		=			
ANR	8658325	PtrMemberAccess	this -> red		8658023	0					
ANR	8658326	Identifier	this		8658023	0					
ANR	8658327	Identifier	red		8658023	1					
ANR	8658328	CallExpression	"sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	1					
ANR	8658329	Callee	sample		8658023	0					
ANR	8658330	Identifier	sample		8658023	0					
ANR	8658331	ArgumentList	row		8658023	1					
ANR	8658332	Argument	row		8658023	0					
ANR	8658333	Identifier	row		8658023	0					
ANR	8658334	Argument	colour_type		8658023	1					
ANR	8658335	Identifier	colour_type		8658023	0					
ANR	8658336	Argument	bit_depth		8658023	2					
ANR	8658337	Identifier	bit_depth		8658023	0					
ANR	8658338	Argument	x		8658023	3					
ANR	8658339	Identifier	x		8658023	0					
ANR	8658340	Argument	++ i		8658023	4					
ANR	8658341	UnaryExpression	++ i		8658023	0					
ANR	8658342	IncDec	++		8658023	0					
ANR	8658343	Identifier	i		8658023	1					
ANR	8658344	Argument	swap16		8658023	5					
ANR	8658345	Identifier	swap16		8658023	0					
ANR	8658346	Argument	littleendian		8658023	6					
ANR	8658347	Identifier	littleendian		8658023	0					
ANR	8658348	ElseStatement	else		8658023	0					
ANR	8658349	ExpressionStatement	"this -> blue = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"	6136:13:191143:191242	8658023	0	True				
ANR	8658350	AssignmentExpression	"this -> blue = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	0		=			
ANR	8658351	PtrMemberAccess	this -> blue		8658023	0					
ANR	8658352	Identifier	this		8658023	0					
ANR	8658353	Identifier	blue		8658023	1					
ANR	8658354	CallExpression	"sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	1					
ANR	8658355	Callee	sample		8658023	0					
ANR	8658356	Identifier	sample		8658023	0					
ANR	8658357	ArgumentList	row		8658023	1					
ANR	8658358	Argument	row		8658023	0					
ANR	8658359	Identifier	row		8658023	0					
ANR	8658360	Argument	colour_type		8658023	1					
ANR	8658361	Identifier	colour_type		8658023	0					
ANR	8658362	Argument	bit_depth		8658023	2					
ANR	8658363	Identifier	bit_depth		8658023	0					
ANR	8658364	Argument	x		8658023	3					
ANR	8658365	Identifier	x		8658023	0					
ANR	8658366	Argument	++ i		8658023	4					
ANR	8658367	UnaryExpression	++ i		8658023	0					
ANR	8658368	IncDec	++		8658023	0					
ANR	8658369	Identifier	i		8658023	1					
ANR	8658370	Argument	swap16		8658023	5					
ANR	8658371	Identifier	swap16		8658023	0					
ANR	8658372	Argument	littleendian		8658023	6					
ANR	8658373	Identifier	littleendian		8658023	0					
ANR	8658374	ElseStatement	else		8658023	0					
ANR	8658375	IfStatement	if ( format != 0 && format -> mono_inverted )		8658023	0					
ANR	8658376	Condition	format != 0 && format -> mono_inverted	6140:31:191284:191319	8658023	0	True				
ANR	8658377	AndExpression	format != 0 && format -> mono_inverted		8658023	0		&&			
ANR	8658378	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658379	Identifier	format		8658023	0					
ANR	8658380	PrimaryExpression	0		8658023	1					
ANR	8658381	PtrMemberAccess	format -> mono_inverted		8658023	1					
ANR	8658382	Identifier	format		8658023	0					
ANR	8658383	Identifier	mono_inverted		8658023	1					
ANR	8658384	ExpressionStatement	this -> red = this -> green = this -> blue = this -> red ^ max	6141:9:191331:191385	8658023	1	True				
ANR	8658385	AssignmentExpression	this -> red = this -> green = this -> blue = this -> red ^ max		8658023	0		=			
ANR	8658386	PtrMemberAccess	this -> red		8658023	0					
ANR	8658387	Identifier	this		8658023	0					
ANR	8658388	Identifier	red		8658023	1					
ANR	8658389	AssignmentExpression	this -> green = this -> blue = this -> red ^ max		8658023	1		=			
ANR	8658390	PtrMemberAccess	this -> green		8658023	0					
ANR	8658391	Identifier	this		8658023	0					
ANR	8658392	Identifier	green		8658023	1					
ANR	8658393	AssignmentExpression	this -> blue = this -> red ^ max		8658023	1		=			
ANR	8658394	PtrMemberAccess	this -> blue		8658023	0					
ANR	8658395	Identifier	this		8658023	0					
ANR	8658396	Identifier	blue		8658023	1					
ANR	8658397	ExclusiveOrExpression	this -> red ^ max		8658023	1		^			
ANR	8658398	PtrMemberAccess	this -> red		8658023	0					
ANR	8658399	Identifier	this		8658023	0					
ANR	8658400	Identifier	red		8658023	1					
ANR	8658401	Identifier	max		8658023	1					
ANR	8658402	IfStatement	if ( ( colour_type & 4 ) != 0 )		8658023	3					
ANR	8658403	Condition	( colour_type & 4 ) != 0	6143:10:191398:191419	8658023	0	True				
ANR	8658404	EqualityExpression	( colour_type & 4 ) != 0		8658023	0		!=			
ANR	8658405	BitAndExpression	colour_type & 4		8658023	0		&			
ANR	8658406	Identifier	colour_type		8658023	0					
ANR	8658407	PrimaryExpression	4		8658023	1					
ANR	8658408	PrimaryExpression	0		8658023	1					
ANR	8658409	CompoundStatement		65:6:2279:2279	8658023	1					
ANR	8658410	IfStatement	if ( format == 0 || ! format -> alpha_first )		8658023	0					
ANR	8658411	Condition	format == 0 || ! format -> alpha_first	6145:13:191455:191489	8658023	0	True				
ANR	8658412	OrExpression	format == 0 || ! format -> alpha_first		8658023	0		||			
ANR	8658413	EqualityExpression	format == 0		8658023	0		==			
ANR	8658414	Identifier	format		8658023	0					
ANR	8658415	PrimaryExpression	0		8658023	1					
ANR	8658416	UnaryOperationExpression	! format -> alpha_first		8658023	1					
ANR	8658417	UnaryOperator	!		8658023	0					
ANR	8658418	PtrMemberAccess	format -> alpha_first		8658023	1					
ANR	8658419	Identifier	format		8658023	0					
ANR	8658420	Identifier	alpha_first		8658023	1					
ANR	8658421	ExpressionStatement	"this -> alpha = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"	6146:13:191505:191605	8658023	1	True				
ANR	8658422	AssignmentExpression	"this -> alpha = sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	0		=			
ANR	8658423	PtrMemberAccess	this -> alpha		8658023	0					
ANR	8658424	Identifier	this		8658023	0					
ANR	8658425	Identifier	alpha		8658023	1					
ANR	8658426	CallExpression	"sample ( row , colour_type , bit_depth , x , ++ i , swap16 , littleendian )"		8658023	1					
ANR	8658427	Callee	sample		8658023	0					
ANR	8658428	Identifier	sample		8658023	0					
ANR	8658429	ArgumentList	row		8658023	1					
ANR	8658430	Argument	row		8658023	0					
ANR	8658431	Identifier	row		8658023	0					
ANR	8658432	Argument	colour_type		8658023	1					
ANR	8658433	Identifier	colour_type		8658023	0					
ANR	8658434	Argument	bit_depth		8658023	2					
ANR	8658435	Identifier	bit_depth		8658023	0					
ANR	8658436	Argument	x		8658023	3					
ANR	8658437	Identifier	x		8658023	0					
ANR	8658438	Argument	++ i		8658023	4					
ANR	8658439	UnaryExpression	++ i		8658023	0					
ANR	8658440	IncDec	++		8658023	0					
ANR	8658441	Identifier	i		8658023	1					
ANR	8658442	Argument	swap16		8658023	5					
ANR	8658443	Identifier	swap16		8658023	0					
ANR	8658444	Argument	littleendian		8658023	6					
ANR	8658445	Identifier	littleendian		8658023	0					
ANR	8658446	IfStatement	if ( format != 0 && format -> alpha_inverted )		8658023	1					
ANR	8658447	Condition	format != 0 && format -> alpha_inverted	6149:13:191621:191657	8658023	0	True				
ANR	8658448	AndExpression	format != 0 && format -> alpha_inverted		8658023	0		&&			
ANR	8658449	EqualityExpression	format != 0		8658023	0		!=			
ANR	8658450	Identifier	format		8658023	0					
ANR	8658451	PrimaryExpression	0		8658023	1					
ANR	8658452	PtrMemberAccess	format -> alpha_inverted		8658023	1					
ANR	8658453	Identifier	format		8658023	0					
ANR	8658454	Identifier	alpha_inverted		8658023	1					
ANR	8658455	ExpressionStatement	this -> alpha ^= max	6150:12:191672:191690	8658023	1	True				
ANR	8658456	AssignmentExpression	this -> alpha ^= max		8658023	0		^=			
ANR	8658457	PtrMemberAccess	this -> alpha		8658023	0					
ANR	8658458	Identifier	this		8658023	0					
ANR	8658459	Identifier	alpha		8658023	1					
ANR	8658460	Identifier	max		8658023	1					
ANR	8658461	ExpressionStatement	"image_pixel_setf ( this , sig_bits ? ( 1U << format -> red_sBIT ) - 1 : max , sig_bits ? ( 1U << format -> green_sBIT ) - 1 : max , sig_bits ? ( 1U << format -> blue_sBIT ) - 1 : max , sig_bits ? ( 1U << format -> alpha_sBIT ) - 1 : max )"	6158:3:191897:192128	8658023	9	True				
ANR	8658462	CallExpression	"image_pixel_setf ( this , sig_bits ? ( 1U << format -> red_sBIT ) - 1 : max , sig_bits ? ( 1U << format -> green_sBIT ) - 1 : max , sig_bits ? ( 1U << format -> blue_sBIT ) - 1 : max , sig_bits ? ( 1U << format -> alpha_sBIT ) - 1 : max )"		8658023	0					
ANR	8658463	Callee	image_pixel_setf		8658023	0					
ANR	8658464	Identifier	image_pixel_setf		8658023	0					
ANR	8658465	ArgumentList	this		8658023	1					
ANR	8658466	Argument	this		8658023	0					
ANR	8658467	Identifier	this		8658023	0					
ANR	8658468	Argument	sig_bits ? ( 1U << format -> red_sBIT ) - 1 : max		8658023	1					
ANR	8658469	ConditionalExpression	sig_bits ? ( 1U << format -> red_sBIT ) - 1 : max		8658023	0					
ANR	8658470	Condition	sig_bits		8658023	0					
ANR	8658471	Identifier	sig_bits		8658023	0					
ANR	8658472	AdditiveExpression	( 1U << format -> red_sBIT ) - 1		8658023	1		-			
ANR	8658473	ShiftExpression	1U << format -> red_sBIT		8658023	0		<<			
ANR	8658474	PrimaryExpression	1U		8658023	0					
ANR	8658475	PtrMemberAccess	format -> red_sBIT		8658023	1					
ANR	8658476	Identifier	format		8658023	0					
ANR	8658477	Identifier	red_sBIT		8658023	1					
ANR	8658478	PrimaryExpression	1		8658023	1					
ANR	8658479	Identifier	max		8658023	2					
ANR	8658480	Argument	sig_bits ? ( 1U << format -> green_sBIT ) - 1 : max		8658023	2					
ANR	8658481	ConditionalExpression	sig_bits ? ( 1U << format -> green_sBIT ) - 1 : max		8658023	0					
ANR	8658482	Condition	sig_bits		8658023	0					
ANR	8658483	Identifier	sig_bits		8658023	0					
ANR	8658484	AdditiveExpression	( 1U << format -> green_sBIT ) - 1		8658023	1		-			
ANR	8658485	ShiftExpression	1U << format -> green_sBIT		8658023	0		<<			
ANR	8658486	PrimaryExpression	1U		8658023	0					
ANR	8658487	PtrMemberAccess	format -> green_sBIT		8658023	1					
ANR	8658488	Identifier	format		8658023	0					
ANR	8658489	Identifier	green_sBIT		8658023	1					
ANR	8658490	PrimaryExpression	1		8658023	1					
ANR	8658491	Identifier	max		8658023	2					
ANR	8658492	Argument	sig_bits ? ( 1U << format -> blue_sBIT ) - 1 : max		8658023	3					
ANR	8658493	ConditionalExpression	sig_bits ? ( 1U << format -> blue_sBIT ) - 1 : max		8658023	0					
ANR	8658494	Condition	sig_bits		8658023	0					
ANR	8658495	Identifier	sig_bits		8658023	0					
ANR	8658496	AdditiveExpression	( 1U << format -> blue_sBIT ) - 1		8658023	1		-			
ANR	8658497	ShiftExpression	1U << format -> blue_sBIT		8658023	0		<<			
ANR	8658498	PrimaryExpression	1U		8658023	0					
ANR	8658499	PtrMemberAccess	format -> blue_sBIT		8658023	1					
ANR	8658500	Identifier	format		8658023	0					
ANR	8658501	Identifier	blue_sBIT		8658023	1					
ANR	8658502	PrimaryExpression	1		8658023	1					
ANR	8658503	Identifier	max		8658023	2					
ANR	8658504	Argument	sig_bits ? ( 1U << format -> alpha_sBIT ) - 1 : max		8658023	4					
ANR	8658505	ConditionalExpression	sig_bits ? ( 1U << format -> alpha_sBIT ) - 1 : max		8658023	0					
ANR	8658506	Condition	sig_bits		8658023	0					
ANR	8658507	Identifier	sig_bits		8658023	0					
ANR	8658508	AdditiveExpression	( 1U << format -> alpha_sBIT ) - 1		8658023	1		-			
ANR	8658509	ShiftExpression	1U << format -> alpha_sBIT		8658023	0		<<			
ANR	8658510	PrimaryExpression	1U		8658023	0					
ANR	8658511	PtrMemberAccess	format -> alpha_sBIT		8658023	1					
ANR	8658512	Identifier	format		8658023	0					
ANR	8658513	Identifier	alpha_sBIT		8658023	1					
ANR	8658514	PrimaryExpression	1		8658023	1					
ANR	8658515	Identifier	max		8658023	2					
ANR	8658516	ExpressionStatement	this -> colour_type = colour_type	6167:3:192244:192275	8658023	10	True				
ANR	8658517	AssignmentExpression	this -> colour_type = colour_type		8658023	0		=			
ANR	8658518	PtrMemberAccess	this -> colour_type		8658023	0					
ANR	8658519	Identifier	this		8658023	0					
ANR	8658520	Identifier	colour_type		8658023	1					
ANR	8658521	Identifier	colour_type		8658023	1					
ANR	8658522	ExpressionStatement	this -> bit_depth = bit_depth	6168:3:192280:192307	8658023	11	True				
ANR	8658523	AssignmentExpression	this -> bit_depth = bit_depth		8658023	0		=			
ANR	8658524	PtrMemberAccess	this -> bit_depth		8658023	0					
ANR	8658525	Identifier	this		8658023	0					
ANR	8658526	Identifier	bit_depth		8658023	1					
ANR	8658527	Identifier	bit_depth		8658023	1					
ANR	8658528	ExpressionStatement	this -> sample_depth = sample_depth	6169:3:192312:192345	8658023	12	True				
ANR	8658529	AssignmentExpression	this -> sample_depth = sample_depth		8658023	0		=			
ANR	8658530	PtrMemberAccess	this -> sample_depth		8658023	0					
ANR	8658531	Identifier	this		8658023	0					
ANR	8658532	Identifier	sample_depth		8658023	1					
ANR	8658533	Identifier	sample_depth		8658023	1					
ANR	8658534	ExpressionStatement	this -> have_tRNS = 0	6170:3:192350:192369	8658023	13	True				
ANR	8658535	AssignmentExpression	this -> have_tRNS = 0		8658023	0		=			
ANR	8658536	PtrMemberAccess	this -> have_tRNS		8658023	0					
ANR	8658537	Identifier	this		8658023	0					
ANR	8658538	Identifier	have_tRNS		8658023	1					
ANR	8658539	PrimaryExpression	0		8658023	1					
ANR	8658540	ExpressionStatement	this -> swap_rgb = 0	6171:3:192374:192392	8658023	14	True				
ANR	8658541	AssignmentExpression	this -> swap_rgb = 0		8658023	0		=			
ANR	8658542	PtrMemberAccess	this -> swap_rgb		8658023	0					
ANR	8658543	Identifier	this		8658023	0					
ANR	8658544	Identifier	swap_rgb		8658023	1					
ANR	8658545	PrimaryExpression	0		8658023	1					
ANR	8658546	ExpressionStatement	this -> alpha_first = 0	6172:3:192397:192418	8658023	15	True				
ANR	8658547	AssignmentExpression	this -> alpha_first = 0		8658023	0		=			
ANR	8658548	PtrMemberAccess	this -> alpha_first		8658023	0					
ANR	8658549	Identifier	this		8658023	0					
ANR	8658550	Identifier	alpha_first		8658023	1					
ANR	8658551	PrimaryExpression	0		8658023	1					
ANR	8658552	ExpressionStatement	this -> alpha_inverted = 0	6173:3:192423:192447	8658023	16	True				
ANR	8658553	AssignmentExpression	this -> alpha_inverted = 0		8658023	0		=			
ANR	8658554	PtrMemberAccess	this -> alpha_inverted		8658023	0					
ANR	8658555	Identifier	this		8658023	0					
ANR	8658556	Identifier	alpha_inverted		8658023	1					
ANR	8658557	PrimaryExpression	0		8658023	1					
ANR	8658558	ExpressionStatement	this -> mono_inverted = 0	6174:3:192452:192475	8658023	17	True				
ANR	8658559	AssignmentExpression	this -> mono_inverted = 0		8658023	0		=			
ANR	8658560	PtrMemberAccess	this -> mono_inverted		8658023	0					
ANR	8658561	Identifier	this		8658023	0					
ANR	8658562	Identifier	mono_inverted		8658023	1					
ANR	8658563	PrimaryExpression	0		8658023	1					
ANR	8658564	ExpressionStatement	this -> swap16 = 0	6175:3:192480:192496	8658023	18	True				
ANR	8658565	AssignmentExpression	this -> swap16 = 0		8658023	0		=			
ANR	8658566	PtrMemberAccess	this -> swap16		8658023	0					
ANR	8658567	Identifier	this		8658023	0					
ANR	8658568	Identifier	swap16		8658023	1					
ANR	8658569	PrimaryExpression	0		8658023	1					
ANR	8658570	ExpressionStatement	this -> littleendian = 0	6176:3:192501:192523	8658023	19	True				
ANR	8658571	AssignmentExpression	this -> littleendian = 0		8658023	0		=			
ANR	8658572	PtrMemberAccess	this -> littleendian		8658023	0					
ANR	8658573	Identifier	this		8658023	0					
ANR	8658574	Identifier	littleendian		8658023	1					
ANR	8658575	PrimaryExpression	0		8658023	1					
ANR	8658576	ExpressionStatement	this -> sig_bits = 0	6177:3:192528:192546	8658023	20	True				
ANR	8658577	AssignmentExpression	this -> sig_bits = 0		8658023	0		=			
ANR	8658578	PtrMemberAccess	this -> sig_bits		8658023	0					
ANR	8658579	Identifier	this		8658023	0					
ANR	8658580	Identifier	sig_bits		8658023	1					
ANR	8658581	PrimaryExpression	0		8658023	1					
ANR	8658582	ReturnType	static void		8658023	1					
ANR	8658583	Identifier	image_pixel_init		8658023	2					
ANR	8658584	ParameterList	"image_pixel * this , png_const_bytep row , png_byte colour_type , png_byte bit_depth , png_uint_32 x , store_palette palette , const image_pixel * format"		8658023	3					
ANR	8658585	Parameter	image_pixel * this	6077:17:188968:188984	8658023	0	True				
ANR	8658586	ParameterType	image_pixel *		8658023	0					
ANR	8658587	Identifier	this		8658023	1					
ANR	8658588	Parameter	png_const_bytep row	6077:36:188987:189005	8658023	1	True				
ANR	8658589	ParameterType	png_const_bytep		8658023	0					
ANR	8658590	Identifier	row		8658023	1					
ANR	8658591	Parameter	png_byte colour_type	6077:57:189008:189027	8658023	2	True				
ANR	8658592	ParameterType	png_byte		8658023	0					
ANR	8658593	Identifier	colour_type		8658023	1					
ANR	8658594	Parameter	png_byte bit_depth	6078:4:189034:189051	8658023	3	True				
ANR	8658595	ParameterType	png_byte		8658023	0					
ANR	8658596	Identifier	bit_depth		8658023	1					
ANR	8658597	Parameter	png_uint_32 x	6078:24:189054:189066	8658023	4	True				
ANR	8658598	ParameterType	png_uint_32		8658023	0					
ANR	8658599	Identifier	x		8658023	1					
ANR	8658600	Parameter	store_palette palette	6078:39:189069:189089	8658023	5	True				
ANR	8658601	ParameterType	store_palette		8658023	0					
ANR	8658602	Identifier	palette		8658023	1					
ANR	8658603	Parameter	const image_pixel * format	6079:4:189096:189120	8658023	6	True				
ANR	8658604	ParameterType	const image_pixel *		8658023	0					
ANR	8658605	Identifier	format		8658023	1					
ANR	8658606	CFGEntryNode	ENTRY		8658023		True				
ANR	8658607	CFGExitNode	EXIT		8658023		True				
ANR	8658608	Symbol	palette [ i ] . green		8658023						
ANR	8658609	Symbol	format -> sig_bits		8658023						
ANR	8658610	Symbol	swap16		8658023						
ANR	8658611	Symbol	this -> bit_depth		8658023						
ANR	8658612	Symbol	this -> swap16		8658023						
ANR	8658613	Symbol	this -> green_sBIT		8658023						
ANR	8658614	Symbol	this -> mono_inverted		8658023						
ANR	8658615	Symbol	this -> alpha_inverted		8658023						
ANR	8658616	Symbol	this -> littleendian		8658023						
ANR	8658617	Symbol	this -> sample_depth		8658023						
ANR	8658618	Symbol	palette		8658023						
ANR	8658619	Symbol	this -> green		8658023						
ANR	8658620	Symbol	sample_depth		8658023						
ANR	8658621	Symbol	this -> colour_type		8658023						
ANR	8658622	Symbol	this -> have_tRNS		8658023						
ANR	8658623	Symbol	this		8658023						
ANR	8658624	Symbol	format		8658023						
ANR	8658625	Symbol	format -> alpha_sBIT		8658023						
ANR	8658626	Symbol	this -> alpha		8658023						
ANR	8658627	Symbol	colour_type		8658023						
ANR	8658628	Symbol	format -> green_sBIT		8658023						
ANR	8658629	Symbol	palette [ i ] . blue		8658023						
ANR	8658630	Symbol	* format		8658023						
ANR	8658631	Symbol	format -> littleendian		8658023						
ANR	8658632	Symbol	this -> alpha_sBIT		8658023						
ANR	8658633	Symbol	bit_depth		8658023						
ANR	8658634	Symbol	* palette		8658023						
ANR	8658635	Symbol	this -> blue		8658023						
ANR	8658636	Symbol	this -> blue_sBIT		8658023						
ANR	8658637	Symbol	format -> alpha_first		8658023						
ANR	8658638	Symbol	format -> mono_inverted		8658023						
ANR	8658639	Symbol	this -> sig_bits		8658023						
ANR	8658640	Symbol	this -> alpha_first		8658023						
ANR	8658641	Symbol	palette [ i ] . alpha		8658023						
ANR	8658642	Symbol	palette [ i ] . red		8658023						
ANR	8658643	Symbol	row		8658023						
ANR	8658644	Symbol	format -> swap_rgb		8658023						
ANR	8658645	Symbol	format -> alpha_inverted		8658023						
ANR	8658646	Symbol	format -> blue_sBIT		8658023						
ANR	8658647	Symbol	this -> red		8658023						
ANR	8658648	Symbol	littleendian		8658023						
ANR	8658649	Symbol	format -> swap16		8658023						
ANR	8658650	Symbol	max		8658023						
ANR	8658651	Symbol	this -> palette_index		8658023						
ANR	8658652	Symbol	i		8658023						
ANR	8658653	Symbol	this -> red_sBIT		8658023						
ANR	8658654	Symbol	sample		8658023						
ANR	8658655	Symbol	format -> red_sBIT		8658023						
ANR	8658656	Symbol	* this		8658023						
ANR	8658657	Symbol	* i		8658023						
ANR	8658658	Symbol	sig_bits		8658023						
ANR	8658659	Symbol	this -> swap_rgb		8658023						
ANR	8658660	Symbol	x		8658023						
ANR	8658661	Symbol	PNG_COLOR_TYPE_PALETTE		8658023						
ANR	8658662	Function	image_pixel_convert_PLTE	6190:0:193201:193695							
ANR	8658663	FunctionDef	image_pixel_convert_PLTE (image_pixel * this)		8658662	0					
ANR	8658664	CompoundStatement		6192:0:193257:193695	8658662	0					
ANR	8658665	IfStatement	if ( this -> colour_type == PNG_COLOR_TYPE_PALETTE )		8658662	0					
ANR	8658666	Condition	this -> colour_type == PNG_COLOR_TYPE_PALETTE	6193:7:193266:193308	8658662	0	True				
ANR	8658667	EqualityExpression	this -> colour_type == PNG_COLOR_TYPE_PALETTE		8658662	0		==			
ANR	8658668	PtrMemberAccess	this -> colour_type		8658662	0					
ANR	8658669	Identifier	this		8658662	0					
ANR	8658670	Identifier	colour_type		8658662	1					
ANR	8658671	Identifier	PNG_COLOR_TYPE_PALETTE		8658662	1					
ANR	8658672	CompoundStatement		3:3:56:56	8658662	1					
ANR	8658673	IfStatement	if ( this -> have_tRNS )		8658662	0					
ANR	8658674	Condition	this -> have_tRNS	6195:10:193326:193340	8658662	0	True				
ANR	8658675	PtrMemberAccess	this -> have_tRNS		8658662	0					
ANR	8658676	Identifier	this		8658662	0					
ANR	8658677	Identifier	have_tRNS		8658662	1					
ANR	8658678	CompoundStatement		5:6:91:91	8658662	1					
ANR	8658679	ExpressionStatement	this -> colour_type = PNG_COLOR_TYPE_RGB_ALPHA	6197:9:193360:193404	8658662	0	True				
ANR	8658680	AssignmentExpression	this -> colour_type = PNG_COLOR_TYPE_RGB_ALPHA		8658662	0		=			
ANR	8658681	PtrMemberAccess	this -> colour_type		8658662	0					
ANR	8658682	Identifier	this		8658662	0					
ANR	8658683	Identifier	colour_type		8658662	1					
ANR	8658684	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		8658662	1					
ANR	8658685	ExpressionStatement	this -> have_tRNS = 0	6198:9:193415:193434	8658662	1	True				
ANR	8658686	AssignmentExpression	this -> have_tRNS = 0		8658662	0		=			
ANR	8658687	PtrMemberAccess	this -> have_tRNS		8658662	0					
ANR	8658688	Identifier	this		8658662	0					
ANR	8658689	Identifier	have_tRNS		8658662	1					
ANR	8658690	PrimaryExpression	0		8658662	1					
ANR	8658691	ElseStatement	else		8658662	0					
ANR	8658692	ExpressionStatement	this -> colour_type = PNG_COLOR_TYPE_RGB	6201:9:193464:193502	8658662	0	True				
ANR	8658693	AssignmentExpression	this -> colour_type = PNG_COLOR_TYPE_RGB		8658662	0		=			
ANR	8658694	PtrMemberAccess	this -> colour_type		8658662	0					
ANR	8658695	Identifier	this		8658662	0					
ANR	8658696	Identifier	colour_type		8658662	1					
ANR	8658697	Identifier	PNG_COLOR_TYPE_RGB		8658662	1					
ANR	8658698	ExpressionStatement	this -> bit_depth = 8	6206:6:193669:193688	8658662	1	True				
ANR	8658699	AssignmentExpression	this -> bit_depth = 8		8658662	0		=			
ANR	8658700	PtrMemberAccess	this -> bit_depth		8658662	0					
ANR	8658701	Identifier	this		8658662	0					
ANR	8658702	Identifier	bit_depth		8658662	1					
ANR	8658703	PrimaryExpression	8		8658662	1					
ANR	8658704	ReturnType	static void		8658662	1					
ANR	8658705	Identifier	image_pixel_convert_PLTE		8658662	2					
ANR	8658706	ParameterList	image_pixel * this		8658662	3					
ANR	8658707	Parameter	image_pixel * this	6191:25:193238:193254	8658662	0	True				
ANR	8658708	ParameterType	image_pixel *		8658662	0					
ANR	8658709	Identifier	this		8658662	1					
ANR	8658710	CFGEntryNode	ENTRY		8658662		True				
ANR	8658711	CFGExitNode	EXIT		8658662		True				
ANR	8658712	Symbol	* this		8658662						
ANR	8658713	Symbol	this -> bit_depth		8658662						
ANR	8658714	Symbol	this -> colour_type		8658662						
ANR	8658715	Symbol	this -> have_tRNS		8658662						
ANR	8658716	Symbol	PNG_COLOR_TYPE_RGB		8658662						
ANR	8658717	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		8658662						
ANR	8658718	Symbol	this		8658662						
ANR	8658719	Symbol	PNG_COLOR_TYPE_PALETTE		8658662						
ANR	8658720	Function	image_pixel_add_alpha	6217:0:194106:196259							
ANR	8658721	FunctionDef	"image_pixel_add_alpha (image_pixel * this , const standard_display * display , int for_background)"		8658720	0					
ANR	8658722	CompoundStatement		6220:0:194215:196259	8658720	0					
ANR	8658723	IfStatement	if ( this -> colour_type == PNG_COLOR_TYPE_PALETTE )		8658720	0					
ANR	8658724	Condition	this -> colour_type == PNG_COLOR_TYPE_PALETTE	6221:7:194224:194266	8658720	0	True				
ANR	8658725	EqualityExpression	this -> colour_type == PNG_COLOR_TYPE_PALETTE		8658720	0		==			
ANR	8658726	PtrMemberAccess	this -> colour_type		8658720	0					
ANR	8658727	Identifier	this		8658720	0					
ANR	8658728	Identifier	colour_type		8658720	1					
ANR	8658729	Identifier	PNG_COLOR_TYPE_PALETTE		8658720	1					
ANR	8658730	ExpressionStatement	image_pixel_convert_PLTE ( this )	6222:6:194275:194305	8658720	1	True				
ANR	8658731	CallExpression	image_pixel_convert_PLTE ( this )		8658720	0					
ANR	8658732	Callee	image_pixel_convert_PLTE		8658720	0					
ANR	8658733	Identifier	image_pixel_convert_PLTE		8658720	0					
ANR	8658734	ArgumentList	this		8658720	1					
ANR	8658735	Argument	this		8658720	0					
ANR	8658736	Identifier	this		8658720	0					
ANR	8658737	IfStatement	if ( ( this -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0 )		8658720	1					
ANR	8658738	Condition	( this -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0	6224:7:194315:194361	8658720	0	True				
ANR	8658739	EqualityExpression	( this -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8658720	0		==			
ANR	8658740	BitAndExpression	this -> colour_type & PNG_COLOR_MASK_ALPHA		8658720	0		&			
ANR	8658741	PtrMemberAccess	this -> colour_type		8658720	0					
ANR	8658742	Identifier	this		8658720	0					
ANR	8658743	Identifier	colour_type		8658720	1					
ANR	8658744	Identifier	PNG_COLOR_MASK_ALPHA		8658720	1					
ANR	8658745	PrimaryExpression	0		8658720	1					
ANR	8658746	CompoundStatement		6:3:151:151	8658720	1					
ANR	8658747	IfStatement	if ( this -> colour_type == PNG_COLOR_TYPE_GRAY )		8658720	0					
ANR	8658748	Condition	this -> colour_type == PNG_COLOR_TYPE_GRAY	6226:10:194379:194418	8658720	0	True				
ANR	8658749	EqualityExpression	this -> colour_type == PNG_COLOR_TYPE_GRAY		8658720	0		==			
ANR	8658750	PtrMemberAccess	this -> colour_type		8658720	0					
ANR	8658751	Identifier	this		8658720	0					
ANR	8658752	Identifier	colour_type		8658720	1					
ANR	8658753	Identifier	PNG_COLOR_TYPE_GRAY		8658720	1					
ANR	8658754	CompoundStatement		8:6:211:211	8658720	1					
ANR	8658755	Statement	if	6228:9:194438:194439	8658720	0	True				
ANR	8658756	Statement	PNG_LIBPNG_VER	6228:12:194441:194454	8658720	1	True				
ANR	8658757	Statement	<	6228:27:194456:194456	8658720	2	True				
ANR	8658758	Statement	10700	6228:29:194458:194462	8658720	3	True				
ANR	8658759	IfStatement	if ( ! for_background && this -> bit_depth < 8 )		8658720	4					
ANR	8658760	Condition	! for_background && this -> bit_depth < 8	6229:16:194480:194517	8658720	0	True				
ANR	8658761	AndExpression	! for_background && this -> bit_depth < 8		8658720	0		&&			
ANR	8658762	UnaryOperationExpression	! for_background		8658720	0					
ANR	8658763	UnaryOperator	!		8658720	0					
ANR	8658764	Identifier	for_background		8658720	1					
ANR	8658765	RelationalExpression	this -> bit_depth < 8		8658720	1		<			
ANR	8658766	PtrMemberAccess	this -> bit_depth		8658720	0					
ANR	8658767	Identifier	this		8658720	0					
ANR	8658768	Identifier	bit_depth		8658720	1					
ANR	8658769	PrimaryExpression	8		8658720	1					
ANR	8658770	ExpressionStatement	this -> bit_depth = this -> sample_depth = 8	6230:15:194535:194575	8658720	1	True				
ANR	8658771	AssignmentExpression	this -> bit_depth = this -> sample_depth = 8		8658720	0		=			
ANR	8658772	PtrMemberAccess	this -> bit_depth		8658720	0					
ANR	8658773	Identifier	this		8658720	0					
ANR	8658774	Identifier	bit_depth		8658720	1					
ANR	8658775	AssignmentExpression	this -> sample_depth = 8		8658720	1		=			
ANR	8658776	PtrMemberAccess	this -> sample_depth		8658720	0					
ANR	8658777	Identifier	this		8658720	0					
ANR	8658778	Identifier	sample_depth		8658720	1					
ANR	8658779	PrimaryExpression	8		8658720	1					
ANR	8658780	Statement	endif	6231:9:194586:194590	8658720	5	True				
ANR	8658781	IfStatement	if ( this -> have_tRNS )		8658720	6					
ANR	8658782	Condition	this -> have_tRNS	6233:13:194606:194620	8658720	0	True				
ANR	8658783	PtrMemberAccess	this -> have_tRNS		8658720	0					
ANR	8658784	Identifier	this		8658720	0					
ANR	8658785	Identifier	have_tRNS		8658720	1					
ANR	8658786	CompoundStatement		15:9:416:416	8658720	1					
ANR	8658787	Statement	if	6238:12:194792:194793	8658720	0	True				
ANR	8658788	Statement	PNG_LIBPNG_VER	6238:15:194795:194808	8658720	1	True				
ANR	8658789	Statement	>=	6238:30:194810:194811	8658720	2	True				
ANR	8658790	Statement	10700	6238:33:194813:194817	8658720	3	True				
ANR	8658791	IfStatement	if ( ! for_background && this -> bit_depth < 8 )		8658720	4					
ANR	8658792	Condition	! for_background && this -> bit_depth < 8	6239:19:194838:194875	8658720	0	True				
ANR	8658793	AndExpression	! for_background && this -> bit_depth < 8		8658720	0		&&			
ANR	8658794	UnaryOperationExpression	! for_background		8658720	0					
ANR	8658795	UnaryOperator	!		8658720	0					
ANR	8658796	Identifier	for_background		8658720	1					
ANR	8658797	RelationalExpression	this -> bit_depth < 8		8658720	1		<			
ANR	8658798	PtrMemberAccess	this -> bit_depth		8658720	0					
ANR	8658799	Identifier	this		8658720	0					
ANR	8658800	Identifier	bit_depth		8658720	1					
ANR	8658801	PrimaryExpression	8		8658720	1					
ANR	8658802	ExpressionStatement	this -> bit_depth = this -> sample_depth = 8	6240:18:194896:194936	8658720	1	True				
ANR	8658803	AssignmentExpression	this -> bit_depth = this -> sample_depth = 8		8658720	0		=			
ANR	8658804	PtrMemberAccess	this -> bit_depth		8658720	0					
ANR	8658805	Identifier	this		8658720	0					
ANR	8658806	Identifier	bit_depth		8658720	1					
ANR	8658807	AssignmentExpression	this -> sample_depth = 8		8658720	1		=			
ANR	8658808	PtrMemberAccess	this -> sample_depth		8658720	0					
ANR	8658809	Identifier	this		8658720	0					
ANR	8658810	Identifier	sample_depth		8658720	1					
ANR	8658811	PrimaryExpression	8		8658720	1					
ANR	8658812	Statement	endif	6241:12:194950:194954	8658720	5	True				
ANR	8658813	ExpressionStatement	this -> have_tRNS = 0	6243:12:194969:194988	8658720	6	True				
ANR	8658814	AssignmentExpression	this -> have_tRNS = 0		8658720	0		=			
ANR	8658815	PtrMemberAccess	this -> have_tRNS		8658720	0					
ANR	8658816	Identifier	this		8658720	0					
ANR	8658817	Identifier	have_tRNS		8658720	1					
ANR	8658818	PrimaryExpression	0		8658720	1					
ANR	8658819	IfStatement	if ( this -> red == display -> transparent . red )		8658720	7					
ANR	8658820	Condition	this -> red == display -> transparent . red	6248:16:195143:195179	8658720	0	True				
ANR	8658821	EqualityExpression	this -> red == display -> transparent . red		8658720	0		==			
ANR	8658822	PtrMemberAccess	this -> red		8658720	0					
ANR	8658823	Identifier	this		8658720	0					
ANR	8658824	Identifier	red		8658720	1					
ANR	8658825	MemberAccess	display -> transparent . red		8658720	1					
ANR	8658826	PtrMemberAccess	display -> transparent		8658720	0					
ANR	8658827	Identifier	display		8658720	0					
ANR	8658828	Identifier	transparent		8658720	1					
ANR	8658829	Identifier	red		8658720	1					
ANR	8658830	ExpressionStatement	this -> alphaf = 0	6249:15:195197:195213	8658720	1	True				
ANR	8658831	AssignmentExpression	this -> alphaf = 0		8658720	0		=			
ANR	8658832	PtrMemberAccess	this -> alphaf		8658720	0					
ANR	8658833	Identifier	this		8658720	0					
ANR	8658834	Identifier	alphaf		8658720	1					
ANR	8658835	PrimaryExpression	0		8658720	1					
ANR	8658836	ElseStatement	else		8658720	0					
ANR	8658837	ExpressionStatement	this -> alphaf = 1	6251:15:195247:195263	8658720	0	True				
ANR	8658838	AssignmentExpression	this -> alphaf = 1		8658720	0		=			
ANR	8658839	PtrMemberAccess	this -> alphaf		8658720	0					
ANR	8658840	Identifier	this		8658720	0					
ANR	8658841	Identifier	alphaf		8658720	1					
ANR	8658842	PrimaryExpression	1		8658720	1					
ANR	8658843	ElseStatement	else		8658720	0					
ANR	8658844	ExpressionStatement	this -> alphaf = 1	6254:12:195302:195318	8658720	0	True				
ANR	8658845	AssignmentExpression	this -> alphaf = 1		8658720	0		=			
ANR	8658846	PtrMemberAccess	this -> alphaf		8658720	0					
ANR	8658847	Identifier	this		8658720	0					
ANR	8658848	Identifier	alphaf		8658720	1					
ANR	8658849	PrimaryExpression	1		8658720	1					
ANR	8658850	ExpressionStatement	this -> colour_type = PNG_COLOR_TYPE_GRAY_ALPHA	6256:9:195330:195375	8658720	7	True				
ANR	8658851	AssignmentExpression	this -> colour_type = PNG_COLOR_TYPE_GRAY_ALPHA		8658720	0		=			
ANR	8658852	PtrMemberAccess	this -> colour_type		8658720	0					
ANR	8658853	Identifier	this		8658720	0					
ANR	8658854	Identifier	colour_type		8658720	1					
ANR	8658855	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		8658720	1					
ANR	8658856	ElseStatement	else		8658720	0					
ANR	8658857	IfStatement	if ( this -> colour_type == PNG_COLOR_TYPE_RGB )		8658720	0					
ANR	8658858	Condition	this -> colour_type == PNG_COLOR_TYPE_RGB	6259:15:195401:195439	8658720	0	True				
ANR	8658859	EqualityExpression	this -> colour_type == PNG_COLOR_TYPE_RGB		8658720	0		==			
ANR	8658860	PtrMemberAccess	this -> colour_type		8658720	0					
ANR	8658861	Identifier	this		8658720	0					
ANR	8658862	Identifier	colour_type		8658720	1					
ANR	8658863	Identifier	PNG_COLOR_TYPE_RGB		8658720	1					
ANR	8658864	CompoundStatement		41:6:1232:1232	8658720	1					
ANR	8658865	IfStatement	if ( this -> have_tRNS )		8658720	0					
ANR	8658866	Condition	this -> have_tRNS	6261:13:195463:195477	8658720	0	True				
ANR	8658867	PtrMemberAccess	this -> have_tRNS		8658720	0					
ANR	8658868	Identifier	this		8658720	0					
ANR	8658869	Identifier	have_tRNS		8658720	1					
ANR	8658870	CompoundStatement		43:9:1273:1273	8658720	1					
ANR	8658871	ExpressionStatement	this -> have_tRNS = 0	6263:12:195503:195522	8658720	0	True				
ANR	8658872	AssignmentExpression	this -> have_tRNS = 0		8658720	0		=			
ANR	8658873	PtrMemberAccess	this -> have_tRNS		8658720	0					
ANR	8658874	Identifier	this		8658720	0					
ANR	8658875	Identifier	have_tRNS		8658720	1					
ANR	8658876	PrimaryExpression	0		8658720	1					
ANR	8658877	IfStatement	if ( this -> red == display -> transparent . red && this -> green == display -> transparent . green && this -> blue == display -> transparent . blue )		8658720	1					
ANR	8658878	Condition	this -> red == display -> transparent . red && this -> green == display -> transparent . green && this -> blue == display -> transparent . blue	6268:16:195659:195813	8658720	0	True				
ANR	8658879	AndExpression	this -> red == display -> transparent . red && this -> green == display -> transparent . green && this -> blue == display -> transparent . blue		8658720	0		&&			
ANR	8658880	EqualityExpression	this -> red == display -> transparent . red		8658720	0		==			
ANR	8658881	PtrMemberAccess	this -> red		8658720	0					
ANR	8658882	Identifier	this		8658720	0					
ANR	8658883	Identifier	red		8658720	1					
ANR	8658884	MemberAccess	display -> transparent . red		8658720	1					
ANR	8658885	PtrMemberAccess	display -> transparent		8658720	0					
ANR	8658886	Identifier	display		8658720	0					
ANR	8658887	Identifier	transparent		8658720	1					
ANR	8658888	Identifier	red		8658720	1					
ANR	8658889	AndExpression	this -> green == display -> transparent . green && this -> blue == display -> transparent . blue		8658720	1		&&			
ANR	8658890	EqualityExpression	this -> green == display -> transparent . green		8658720	0		==			
ANR	8658891	PtrMemberAccess	this -> green		8658720	0					
ANR	8658892	Identifier	this		8658720	0					
ANR	8658893	Identifier	green		8658720	1					
ANR	8658894	MemberAccess	display -> transparent . green		8658720	1					
ANR	8658895	PtrMemberAccess	display -> transparent		8658720	0					
ANR	8658896	Identifier	display		8658720	0					
ANR	8658897	Identifier	transparent		8658720	1					
ANR	8658898	Identifier	green		8658720	1					
ANR	8658899	EqualityExpression	this -> blue == display -> transparent . blue		8658720	1		==			
ANR	8658900	PtrMemberAccess	this -> blue		8658720	0					
ANR	8658901	Identifier	this		8658720	0					
ANR	8658902	Identifier	blue		8658720	1					
ANR	8658903	MemberAccess	display -> transparent . blue		8658720	1					
ANR	8658904	PtrMemberAccess	display -> transparent		8658720	0					
ANR	8658905	Identifier	display		8658720	0					
ANR	8658906	Identifier	transparent		8658720	1					
ANR	8658907	Identifier	blue		8658720	1					
ANR	8658908	ExpressionStatement	this -> alphaf = 0	6271:15:195831:195847	8658720	1	True				
ANR	8658909	AssignmentExpression	this -> alphaf = 0		8658720	0		=			
ANR	8658910	PtrMemberAccess	this -> alphaf		8658720	0					
ANR	8658911	Identifier	this		8658720	0					
ANR	8658912	Identifier	alphaf		8658720	1					
ANR	8658913	PrimaryExpression	0		8658720	1					
ANR	8658914	ElseStatement	else		8658720	0					
ANR	8658915	ExpressionStatement	this -> alphaf = 1	6273:15:195881:195897	8658720	0	True				
ANR	8658916	AssignmentExpression	this -> alphaf = 1		8658720	0		=			
ANR	8658917	PtrMemberAccess	this -> alphaf		8658720	0					
ANR	8658918	Identifier	this		8658720	0					
ANR	8658919	Identifier	alphaf		8658720	1					
ANR	8658920	PrimaryExpression	1		8658720	1					
ANR	8658921	ElseStatement	else		8658720	0					
ANR	8658922	ExpressionStatement	this -> alphaf = 1	6276:12:195936:195952	8658720	0	True				
ANR	8658923	AssignmentExpression	this -> alphaf = 1		8658720	0		=			
ANR	8658924	PtrMemberAccess	this -> alphaf		8658720	0					
ANR	8658925	Identifier	this		8658720	0					
ANR	8658926	Identifier	alphaf		8658720	1					
ANR	8658927	PrimaryExpression	1		8658720	1					
ANR	8658928	ExpressionStatement	this -> colour_type = PNG_COLOR_TYPE_RGB_ALPHA	6278:9:195964:196008	8658720	1	True				
ANR	8658929	AssignmentExpression	this -> colour_type = PNG_COLOR_TYPE_RGB_ALPHA		8658720	0		=			
ANR	8658930	PtrMemberAccess	this -> colour_type		8658720	0					
ANR	8658931	Identifier	this		8658720	0					
ANR	8658932	Identifier	colour_type		8658720	1					
ANR	8658933	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		8658720	1					
ANR	8658934	ExpressionStatement	this -> alphae = 0	6284:6:196190:196206	8658720	1	True				
ANR	8658935	AssignmentExpression	this -> alphae = 0		8658720	0		=			
ANR	8658936	PtrMemberAccess	this -> alphae		8658720	0					
ANR	8658937	Identifier	this		8658720	0					
ANR	8658938	Identifier	alphae		8658720	1					
ANR	8658939	PrimaryExpression	0		8658720	1					
ANR	8658940	ExpressionStatement	this -> alpha_sBIT = display -> alpha_sBIT	6285:6:196214:196252	8658720	2	True				
ANR	8658941	AssignmentExpression	this -> alpha_sBIT = display -> alpha_sBIT		8658720	0		=			
ANR	8658942	PtrMemberAccess	this -> alpha_sBIT		8658720	0					
ANR	8658943	Identifier	this		8658720	0					
ANR	8658944	Identifier	alpha_sBIT		8658720	1					
ANR	8658945	PtrMemberAccess	display -> alpha_sBIT		8658720	1					
ANR	8658946	Identifier	display		8658720	0					
ANR	8658947	Identifier	alpha_sBIT		8658720	1					
ANR	8658948	ReturnType	static void		8658720	1					
ANR	8658949	Identifier	image_pixel_add_alpha		8658720	2					
ANR	8658950	ParameterList	"image_pixel * this , const standard_display * display , int for_background"		8658720	3					
ANR	8658951	Parameter	image_pixel * this	6218:22:194140:194156	8658720	0	True				
ANR	8658952	ParameterType	image_pixel *		8658720	0					
ANR	8658953	Identifier	this		8658720	1					
ANR	8658954	Parameter	const standard_display * display	6218:41:194159:194189	8658720	1	True				
ANR	8658955	ParameterType	const standard_display *		8658720	0					
ANR	8658956	Identifier	display		8658720	1					
ANR	8658957	Parameter	int for_background	6219:3:194195:194212	8658720	2	True				
ANR	8658958	ParameterType	int		8658720	0					
ANR	8658959	Identifier	for_background		8658720	1					
ANR	8658960	CFGEntryNode	ENTRY		8658720		True				
ANR	8658961	CFGExitNode	EXIT		8658720		True				
ANR	8658962	Symbol	PNG_COLOR_TYPE_RGB		8658720						
ANR	8658963	Symbol	PNG_COLOR_TYPE_GRAY		8658720						
ANR	8658964	Symbol	this -> blue		8658720						
ANR	8658965	Symbol	* display		8658720						
ANR	8658966	Symbol	display -> transparent		8658720						
ANR	8658967	Symbol	this -> alphaf		8658720						
ANR	8658968	Symbol	this -> bit_depth		8658720						
ANR	8658969	Symbol	this -> alphae		8658720						
ANR	8658970	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		8658720						
ANR	8658971	Symbol	display -> transparent . green		8658720						
ANR	8658972	Symbol	this -> sample_depth		8658720						
ANR	8658973	Symbol	this -> red		8658720						
ANR	8658974	Symbol	this -> green		8658720						
ANR	8658975	Symbol	this -> colour_type		8658720						
ANR	8658976	Symbol	this -> have_tRNS		8658720						
ANR	8658977	Symbol	for_background		8658720						
ANR	8658978	Symbol	PNG_COLOR_TYPE_GRAY_ALPHA		8658720						
ANR	8658979	Symbol	display		8658720						
ANR	8658980	Symbol	this		8658720						
ANR	8658981	Symbol	* this		8658720						
ANR	8658982	Symbol	display -> transparent . blue		8658720						
ANR	8658983	Symbol	PNG_COLOR_MASK_ALPHA		8658720						
ANR	8658984	Symbol	display -> transparent . red		8658720						
ANR	8658985	Symbol	this -> alpha_sBIT		8658720						
ANR	8658986	Symbol	PNG_COLOR_TYPE_PALETTE		8658720						
ANR	8658987	Symbol	display -> alpha_sBIT		8658720						
ANR	8658988	ClassDef	image_transform	6291:8:196352:198510							
ANR	8658989	DeclStmt									
ANR	8658990	Decl							const char	const char *	name
ANR	8658991	DeclStmt									
ANR	8658992	Decl							int	int	enable
ANR	8658993	DeclStmt									
ANR	8658994	Decl							unsigned int	unsigned int	global_use
ANR	8658995	DeclStmt									
ANR	8658996	Decl							unsigned int	unsigned int	local_use
ANR	8658997	DeclStmt									
ANR	8658998	Decl							const struct image_transform	const struct image_transform *	next
ANR	8658999	DeclStmt									
ANR	8659000	Decl							"void ( * ) ( const struct image_transform * this , struct transform_display * that )"	"void ( * ) ( const struct image_transform * this , struct transform_display * that )"	ini
ANR	8659001	DeclStmt									
ANR	8659002	Decl							"void ( * ) ( const struct image_transform * this , struct transform_display * that , png_structp pp , png_infop pi )"	"void ( * ) ( const struct image_transform * this , struct transform_display * that , png_structp pp , png_infop pi )"	set
ANR	8659003	DeclStmt									
ANR	8659004	Decl							"void ( * ) ( const struct image_transform * this , image_pixel * that , png_const_structp pp , const struct transform_display * display )"	"void ( * ) ( const struct image_transform * this , image_pixel * that , png_const_structp pp , const struct transform_display * display )"	mod
ANR	8659005	DeclStmt									
ANR	8659006	Decl							"int ( * ) ( struct image_transform * this , const struct image_transform * * that , png_byte colour_type , png_byte bit_depth )"	"int ( * ) ( struct image_transform * this , const struct image_transform * * that , png_byte colour_type , png_byte bit_depth )"	add
ANR	8659007	DeclStmt									
ANR	8659008	Decl							image_transform	image_transform	image_transform
ANR	8659009	ClassDef	transform_display	6348:8:198521:198970							
ANR	8659010	DeclStmt									
ANR	8659011	Decl							standard_display	standard_display	this
ANR	8659012	DeclStmt									
ANR	8659013	Decl							png_modifier	png_modifier *	pm
ANR	8659014	DeclStmt									
ANR	8659015	Decl							const image_transform	const image_transform *	transform_list
ANR	8659016	DeclStmt									
ANR	8659017	Decl							unsigned int	unsigned int	max_gamma_8
ANR	8659018	DeclStmt									
ANR	8659019	Decl							png_byte	png_byte	output_colour_type
ANR	8659020	DeclStmt									
ANR	8659021	Decl							png_byte	png_byte	output_bit_depth
ANR	8659022	DeclStmt									
ANR	8659023	Decl							png_byte	png_byte	unpacked
ANR	8659024	DeclStmt									
ANR	8659025	Decl							gama_modification	gama_modification	gama_mod
ANR	8659026	DeclStmt									
ANR	8659027	Decl							chrm_modification	chrm_modification	chrm_mod
ANR	8659028	DeclStmt									
ANR	8659029	Decl							srgb_modification	srgb_modification	srgb_mod
ANR	8659030	DeclStmt									
ANR	8659031	Decl							transform_display	transform_display	transform_display
ANR	8659032	Function	transform_set_encoding	6369:0:199051:199743							
ANR	8659033	FunctionDef	transform_set_encoding (transform_display * this)		8659032	0					
ANR	8659034	CompoundStatement		6371:0:199111:199743	8659032	0					
ANR	8659035	IdentifierDeclStatement	png_modifier * pm = this -> pm ;	6375:3:199236:199263	8659032	0	True				
ANR	8659036	IdentifierDecl	* pm = this -> pm		8659032	0					
ANR	8659037	IdentifierDeclType	png_modifier *		8659032	0					
ANR	8659038	Identifier	pm		8659032	1					
ANR	8659039	AssignmentExpression	* pm = this -> pm		8659032	2		=			
ANR	8659040	Identifier	pm		8659032	0					
ANR	8659041	PtrMemberAccess	this -> pm		8659032	1					
ANR	8659042	Identifier	this		8659032	0					
ANR	8659043	Identifier	pm		8659032	1					
ANR	8659044	ExpressionStatement	modifier_set_encoding ( pm )	6377:3:199269:199294	8659032	1	True				
ANR	8659045	CallExpression	modifier_set_encoding ( pm )		8659032	0					
ANR	8659046	Callee	modifier_set_encoding		8659032	0					
ANR	8659047	Identifier	modifier_set_encoding		8659032	0					
ANR	8659048	ArgumentList	pm		8659032	1					
ANR	8659049	Argument	pm		8659032	0					
ANR	8659050	Identifier	pm		8659032	0					
ANR	8659051	IfStatement	if ( modifier_color_encoding_is_set ( pm ) )		8659032	2					
ANR	8659052	Condition	modifier_color_encoding_is_set ( pm )	6379:7:199304:199337	8659032	0	True				
ANR	8659053	CallExpression	modifier_color_encoding_is_set ( pm )		8659032	0					
ANR	8659054	Callee	modifier_color_encoding_is_set		8659032	0					
ANR	8659055	Identifier	modifier_color_encoding_is_set		8659032	0					
ANR	8659056	ArgumentList	pm		8659032	1					
ANR	8659057	Argument	pm		8659032	0					
ANR	8659058	Identifier	pm		8659032	0					
ANR	8659059	CompoundStatement		10:3:231:231	8659032	1					
ANR	8659060	IfStatement	if ( modifier_color_encoding_is_sRGB ( pm ) )		8659032	0					
ANR	8659061	Condition	modifier_color_encoding_is_sRGB ( pm )	6381:10:199355:199389	8659032	0	True				
ANR	8659062	CallExpression	modifier_color_encoding_is_sRGB ( pm )		8659032	0					
ANR	8659063	Callee	modifier_color_encoding_is_sRGB		8659032	0					
ANR	8659064	Identifier	modifier_color_encoding_is_sRGB		8659032	0					
ANR	8659065	ArgumentList	pm		8659032	1					
ANR	8659066	Argument	pm		8659032	0					
ANR	8659067	Identifier	pm		8659032	0					
ANR	8659068	ExpressionStatement	"srgb_modification_init ( & this -> srgb_mod , pm , PNG_sRGB_INTENT_ABSOLUTE )"	6382:9:199401:199470	8659032	1	True				
ANR	8659069	CallExpression	"srgb_modification_init ( & this -> srgb_mod , pm , PNG_sRGB_INTENT_ABSOLUTE )"		8659032	0					
ANR	8659070	Callee	srgb_modification_init		8659032	0					
ANR	8659071	Identifier	srgb_modification_init		8659032	0					
ANR	8659072	ArgumentList	& this -> srgb_mod		8659032	1					
ANR	8659073	Argument	& this -> srgb_mod		8659032	0					
ANR	8659074	UnaryOperationExpression	& this -> srgb_mod		8659032	0					
ANR	8659075	UnaryOperator	&		8659032	0					
ANR	8659076	PtrMemberAccess	this -> srgb_mod		8659032	1					
ANR	8659077	Identifier	this		8659032	0					
ANR	8659078	Identifier	srgb_mod		8659032	1					
ANR	8659079	Argument	pm		8659032	1					
ANR	8659080	Identifier	pm		8659032	0					
ANR	8659081	Argument	PNG_sRGB_INTENT_ABSOLUTE		8659032	2					
ANR	8659082	Identifier	PNG_sRGB_INTENT_ABSOLUTE		8659032	0					
ANR	8659083	ElseStatement	else		8659032	0					
ANR	8659084	CompoundStatement		15:6:378:378	8659032	0					
ANR	8659085	ExpressionStatement	"gama_modification_init ( & this -> gama_mod , pm , pm -> current_gamma )"	6387:9:199546:199608	8659032	0	True				
ANR	8659086	CallExpression	"gama_modification_init ( & this -> gama_mod , pm , pm -> current_gamma )"		8659032	0					
ANR	8659087	Callee	gama_modification_init		8659032	0					
ANR	8659088	Identifier	gama_modification_init		8659032	0					
ANR	8659089	ArgumentList	& this -> gama_mod		8659032	1					
ANR	8659090	Argument	& this -> gama_mod		8659032	0					
ANR	8659091	UnaryOperationExpression	& this -> gama_mod		8659032	0					
ANR	8659092	UnaryOperator	&		8659032	0					
ANR	8659093	PtrMemberAccess	this -> gama_mod		8659032	1					
ANR	8659094	Identifier	this		8659032	0					
ANR	8659095	Identifier	gama_mod		8659032	1					
ANR	8659096	Argument	pm		8659032	1					
ANR	8659097	Identifier	pm		8659032	0					
ANR	8659098	Argument	pm -> current_gamma		8659032	2					
ANR	8659099	PtrMemberAccess	pm -> current_gamma		8659032	0					
ANR	8659100	Identifier	pm		8659032	0					
ANR	8659101	Identifier	current_gamma		8659032	1					
ANR	8659102	IfStatement	if ( pm -> current_encoding != 0 )		8659032	1					
ANR	8659103	Condition	pm -> current_encoding != 0	6389:13:199624:199648	8659032	0	True				
ANR	8659104	EqualityExpression	pm -> current_encoding != 0		8659032	0		!=			
ANR	8659105	PtrMemberAccess	pm -> current_encoding		8659032	0					
ANR	8659106	Identifier	pm		8659032	0					
ANR	8659107	Identifier	current_encoding		8659032	1					
ANR	8659108	PrimaryExpression	0		8659032	1					
ANR	8659109	ExpressionStatement	"chrm_modification_init ( & this -> chrm_mod , pm , pm -> current_encoding )"	6390:12:199663:199728	8659032	1	True				
ANR	8659110	CallExpression	"chrm_modification_init ( & this -> chrm_mod , pm , pm -> current_encoding )"		8659032	0					
ANR	8659111	Callee	chrm_modification_init		8659032	0					
ANR	8659112	Identifier	chrm_modification_init		8659032	0					
ANR	8659113	ArgumentList	& this -> chrm_mod		8659032	1					
ANR	8659114	Argument	& this -> chrm_mod		8659032	0					
ANR	8659115	UnaryOperationExpression	& this -> chrm_mod		8659032	0					
ANR	8659116	UnaryOperator	&		8659032	0					
ANR	8659117	PtrMemberAccess	this -> chrm_mod		8659032	1					
ANR	8659118	Identifier	this		8659032	0					
ANR	8659119	Identifier	chrm_mod		8659032	1					
ANR	8659120	Argument	pm		8659032	1					
ANR	8659121	Identifier	pm		8659032	0					
ANR	8659122	Argument	pm -> current_encoding		8659032	2					
ANR	8659123	PtrMemberAccess	pm -> current_encoding		8659032	0					
ANR	8659124	Identifier	pm		8659032	0					
ANR	8659125	Identifier	current_encoding		8659032	1					
ANR	8659126	ReturnType	static void		8659032	1					
ANR	8659127	Identifier	transform_set_encoding		8659032	2					
ANR	8659128	ParameterList	transform_display * this		8659032	3					
ANR	8659129	Parameter	transform_display * this	6370:23:199086:199108	8659032	0	True				
ANR	8659130	ParameterType	transform_display *		8659032	0					
ANR	8659131	Identifier	this		8659032	1					
ANR	8659132	CFGEntryNode	ENTRY		8659032		True				
ANR	8659133	CFGExitNode	EXIT		8659032		True				
ANR	8659134	Symbol	* pm		8659032						
ANR	8659135	Symbol	pm -> current_gamma		8659032						
ANR	8659136	Symbol	this -> pm		8659032						
ANR	8659137	Symbol	this		8659032						
ANR	8659138	Symbol	& this -> chrm_mod		8659032						
ANR	8659139	Symbol	* this		8659032						
ANR	8659140	Symbol	& this -> srgb_mod		8659032						
ANR	8659141	Symbol	pm -> current_encoding		8659032						
ANR	8659142	Symbol	& this -> gama_mod		8659032						
ANR	8659143	Symbol	modifier_color_encoding_is_sRGB		8659032						
ANR	8659144	Symbol	modifier_color_encoding_is_set		8659032						
ANR	8659145	Symbol	pm		8659032						
ANR	8659146	Symbol	PNG_sRGB_INTENT_ABSOLUTE		8659032						
ANR	8659147	Function	image_transform_ini_end	6396:0:199785:199912							
ANR	8659148	FunctionDef	"image_transform_ini_end (const image_transform * this , transform_display * that)"		8659147	0					
ANR	8659149	CompoundStatement		6399:0:199878:199912	8659147	0					
ANR	8659150	Statement	UNUSED	6400:3:199883:199888	8659147	0	True				
ANR	8659151	Statement	(	6400:9:199889:199889	8659147	1	True				
ANR	8659152	Statement	this	6400:10:199890:199893	8659147	2	True				
ANR	8659153	Statement	)	6400:14:199894:199894	8659147	3	True				
ANR	8659154	Statement	UNUSED	6401:3:199899:199904	8659147	4	True				
ANR	8659155	Statement	(	6401:9:199905:199905	8659147	5	True				
ANR	8659156	Statement	that	6401:10:199906:199909	8659147	6	True				
ANR	8659157	Statement	)	6401:14:199910:199910	8659147	7	True				
ANR	8659158	ReturnType	static void		8659147	1					
ANR	8659159	Identifier	image_transform_ini_end		8659147	2					
ANR	8659160	ParameterList	"const image_transform * this , transform_display * that"		8659147	3					
ANR	8659161	Parameter	const image_transform * this	6397:24:199821:199847	8659147	0	True				
ANR	8659162	ParameterType	const image_transform *		8659147	0					
ANR	8659163	Identifier	this		8659147	1					
ANR	8659164	Parameter	transform_display * that	6398:3:199853:199875	8659147	1	True				
ANR	8659165	ParameterType	transform_display *		8659147	0					
ANR	8659166	Identifier	that		8659147	1					
ANR	8659167	CFGEntryNode	ENTRY		8659147		True				
ANR	8659168	CFGExitNode	EXIT		8659147		True				
ANR	8659169	Symbol	that		8659147						
ANR	8659170	Symbol	this		8659147						
ANR	8659171	Function	image_transform_set_end	6404:0:199915:200100							
ANR	8659172	FunctionDef	"image_transform_set_end (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8659171	0					
ANR	8659173	CompoundStatement		6407:0:200038:200100	8659171	0					
ANR	8659174	Statement	UNUSED	6408:3:200043:200048	8659171	0	True				
ANR	8659175	Statement	(	6408:9:200049:200049	8659171	1	True				
ANR	8659176	Statement	this	6408:10:200050:200053	8659171	2	True				
ANR	8659177	Statement	)	6408:14:200054:200054	8659171	3	True				
ANR	8659178	Statement	UNUSED	6409:3:200059:200064	8659171	4	True				
ANR	8659179	Statement	(	6409:9:200065:200065	8659171	5	True				
ANR	8659180	Statement	that	6409:10:200066:200069	8659171	6	True				
ANR	8659181	Statement	)	6409:14:200070:200070	8659171	7	True				
ANR	8659182	Statement	UNUSED	6410:3:200075:200080	8659171	8	True				
ANR	8659183	Statement	(	6410:9:200081:200081	8659171	9	True				
ANR	8659184	Statement	pp	6410:10:200082:200083	8659171	10	True				
ANR	8659185	Statement	)	6410:12:200084:200084	8659171	11	True				
ANR	8659186	Statement	UNUSED	6411:3:200089:200094	8659171	12	True				
ANR	8659187	Statement	(	6411:9:200095:200095	8659171	13	True				
ANR	8659188	Statement	pi	6411:10:200096:200097	8659171	14	True				
ANR	8659189	Statement	)	6411:12:200098:200098	8659171	15	True				
ANR	8659190	ReturnType	static void		8659171	1					
ANR	8659191	Identifier	image_transform_set_end		8659171	2					
ANR	8659192	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8659171	3					
ANR	8659193	Parameter	const image_transform * this	6405:24:199951:199977	8659171	0	True				
ANR	8659194	ParameterType	const image_transform *		8659171	0					
ANR	8659195	Identifier	this		8659171	1					
ANR	8659196	Parameter	transform_display * that	6406:3:199983:200005	8659171	1	True				
ANR	8659197	ParameterType	transform_display *		8659171	0					
ANR	8659198	Identifier	that		8659171	1					
ANR	8659199	Parameter	png_structp pp	6406:28:200008:200021	8659171	2	True				
ANR	8659200	ParameterType	png_structp		8659171	0					
ANR	8659201	Identifier	pp		8659171	1					
ANR	8659202	Parameter	png_infop pi	6406:44:200024:200035	8659171	3	True				
ANR	8659203	ParameterType	png_infop		8659171	0					
ANR	8659204	Identifier	pi		8659171	1					
ANR	8659205	CFGEntryNode	ENTRY		8659171		True				
ANR	8659206	CFGExitNode	EXIT		8659171		True				
ANR	8659207	Symbol	pp		8659171						
ANR	8659208	Symbol	that		8659171						
ANR	8659209	Symbol	this		8659171						
ANR	8659210	Symbol	pi		8659171						
ANR	8659211	Function	sample_scale	6417:0:200247:200555							
ANR	8659212	FunctionDef	"sample_scale (double sample_value , unsigned int scale)"		8659211	0					
ANR	8659213	CompoundStatement		6419:0:200321:200555	8659211	0					
ANR	8659214	ExpressionStatement	sample_value = floor ( sample_value * scale + .5 )	6420:3:200326:200373	8659211	0	True				
ANR	8659215	AssignmentExpression	sample_value = floor ( sample_value * scale + .5 )		8659211	0		=			
ANR	8659216	Identifier	sample_value		8659211	0					
ANR	8659217	CallExpression	floor ( sample_value * scale + .5 )		8659211	1					
ANR	8659218	Callee	floor		8659211	0					
ANR	8659219	Identifier	floor		8659211	0					
ANR	8659220	ArgumentList	sample_value * scale + .5		8659211	1					
ANR	8659221	Argument	sample_value * scale + .5		8659211	0					
ANR	8659222	AdditiveExpression	sample_value * scale + .5		8659211	0		+			
ANR	8659223	MultiplicativeExpression	sample_value * scale		8659211	0		*			
ANR	8659224	Identifier	sample_value		8659211	0					
ANR	8659225	Identifier	scale		8659211	1					
ANR	8659226	PrimaryExpression	.5		8659211	1					
ANR	8659227	IfStatement	if ( ! ( sample_value > 0 ) )		8659211	1					
ANR	8659228	Condition	! ( sample_value > 0 )	6423:7:200409:200427	8659211	0	True				
ANR	8659229	UnaryOperationExpression	! ( sample_value > 0 )		8659211	0					
ANR	8659230	UnaryOperator	!		8659211	0					
ANR	8659231	RelationalExpression	sample_value > 0		8659211	1		>			
ANR	8659232	Identifier	sample_value		8659211	0					
ANR	8659233	PrimaryExpression	0		8659211	1					
ANR	8659234	ExpressionStatement	sample_value = 0	6424:6:200436:200452	8659211	1	True				
ANR	8659235	AssignmentExpression	sample_value = 0		8659211	0		=			
ANR	8659236	Identifier	sample_value		8659211	0					
ANR	8659237	PrimaryExpression	0		8659211	1					
ANR	8659238	ElseStatement	else		8659211	0					
ANR	8659239	IfStatement	if ( sample_value > scale )		8659211	0					
ANR	8659240	Condition	sample_value > scale	6425:12:200466:200485	8659211	0	True				
ANR	8659241	RelationalExpression	sample_value > scale		8659211	0		>			
ANR	8659242	Identifier	sample_value		8659211	0					
ANR	8659243	Identifier	scale		8659211	1					
ANR	8659244	ExpressionStatement	sample_value = scale	6426:6:200494:200514	8659211	1	True				
ANR	8659245	AssignmentExpression	sample_value = scale		8659211	0		=			
ANR	8659246	Identifier	sample_value		8659211	0					
ANR	8659247	Identifier	scale		8659211	1					
ANR	8659248	ReturnStatement	return ( unsigned int ) sample_value ;	6428:3:200520:200553	8659211	2	True				
ANR	8659249	CastExpression	( unsigned int ) sample_value		8659211	0					
ANR	8659250	CastTarget	unsigned int		8659211	0					
ANR	8659251	Identifier	sample_value		8659211	1					
ANR	8659252	ReturnType	static unsigned int		8659211	1					
ANR	8659253	Identifier	sample_scale		8659211	2					
ANR	8659254	ParameterList	"double sample_value , unsigned int scale"		8659211	3					
ANR	8659255	Parameter	double sample_value	6418:13:200280:200298	8659211	0	True				
ANR	8659256	ParameterType	double		8659211	0					
ANR	8659257	Identifier	sample_value		8659211	1					
ANR	8659258	Parameter	unsigned int scale	6418:34:200301:200318	8659211	1	True				
ANR	8659259	ParameterType	unsigned int		8659211	0					
ANR	8659260	Identifier	scale		8659211	1					
ANR	8659261	CFGEntryNode	ENTRY		8659211		True				
ANR	8659262	CFGExitNode	EXIT		8659211		True				
ANR	8659263	Symbol	sample_value		8659211						
ANR	8659264	Symbol	scale		8659211						
ANR	8659265	Symbol	floor		8659211						
ANR	8659266	Function	image_transform_mod_end	6431:0:200558:203562							
ANR	8659267	FunctionDef	"image_transform_mod_end (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8659266	0					
ANR	8659268	CompoundStatement		6434:0:200702:203562	8659266	0					
ANR	8659269	IdentifierDeclStatement	const unsigned int scale = ( 1U << that -> sample_depth ) - 1 ;	6435:3:200707:200760	8659266	0	True				
ANR	8659270	IdentifierDecl	scale = ( 1U << that -> sample_depth ) - 1		8659266	0					
ANR	8659271	IdentifierDeclType	const unsigned int		8659266	0					
ANR	8659272	Identifier	scale		8659266	1					
ANR	8659273	AssignmentExpression	scale = ( 1U << that -> sample_depth ) - 1		8659266	2		=			
ANR	8659274	Identifier	scale		8659266	0					
ANR	8659275	AdditiveExpression	( 1U << that -> sample_depth ) - 1		8659266	1		-			
ANR	8659276	ShiftExpression	1U << that -> sample_depth		8659266	0		<<			
ANR	8659277	PrimaryExpression	1U		8659266	0					
ANR	8659278	PtrMemberAccess	that -> sample_depth		8659266	1					
ANR	8659279	Identifier	that		8659266	0					
ANR	8659280	Identifier	sample_depth		8659266	1					
ANR	8659281	PrimaryExpression	1		8659266	1					
ANR	8659282	IdentifierDeclStatement	const int sig_bits = that -> sig_bits ;	6436:3:200765:200800	8659266	1	True				
ANR	8659283	IdentifierDecl	sig_bits = that -> sig_bits		8659266	0					
ANR	8659284	IdentifierDeclType	const int		8659266	0					
ANR	8659285	Identifier	sig_bits		8659266	1					
ANR	8659286	AssignmentExpression	sig_bits = that -> sig_bits		8659266	2		=			
ANR	8659287	Identifier	sig_bits		8659266	0					
ANR	8659288	PtrMemberAccess	that -> sig_bits		8659266	1					
ANR	8659289	Identifier	that		8659266	0					
ANR	8659290	Identifier	sig_bits		8659266	1					
ANR	8659291	Statement	UNUSED	6438:3:200806:200811	8659266	2	True				
ANR	8659292	Statement	(	6438:9:200812:200812	8659266	3	True				
ANR	8659293	Statement	this	6438:10:200813:200816	8659266	4	True				
ANR	8659294	Statement	)	6438:14:200817:200817	8659266	5	True				
ANR	8659295	Statement	UNUSED	6439:3:200822:200827	8659266	6	True				
ANR	8659296	Statement	(	6439:9:200828:200828	8659266	7	True				
ANR	8659297	Statement	pp	6439:10:200829:200830	8659266	8	True				
ANR	8659298	Statement	)	6439:12:200831:200831	8659266	9	True				
ANR	8659299	Statement	UNUSED	6440:3:200836:200841	8659266	10	True				
ANR	8659300	ExpressionStatement	"( display ) that -> red = sample_scale ( that -> redf , scale )"	6440:9:200842:201262	8659266	11	True				
ANR	8659301	AssignmentExpression	"( display ) that -> red = sample_scale ( that -> redf , scale )"		8659266	0		=			
ANR	8659302	CastExpression	( display ) that -> red		8659266	0					
ANR	8659303	CastTarget	display		8659266	0					
ANR	8659304	PtrMemberAccess	that -> red		8659266	1					
ANR	8659305	Identifier	that		8659266	0					
ANR	8659306	Identifier	red		8659266	1					
ANR	8659307	CallExpression	"sample_scale ( that -> redf , scale )"		8659266	1					
ANR	8659308	Callee	sample_scale		8659266	0					
ANR	8659309	Identifier	sample_scale		8659266	0					
ANR	8659310	ArgumentList	that -> redf		8659266	1					
ANR	8659311	Argument	that -> redf		8659266	0					
ANR	8659312	PtrMemberAccess	that -> redf		8659266	0					
ANR	8659313	Identifier	that		8659266	0					
ANR	8659314	Identifier	redf		8659266	1					
ANR	8659315	Argument	scale		8659266	1					
ANR	8659316	Identifier	scale		8659266	0					
ANR	8659317	IfStatement	if ( sig_bits && that -> red_sBIT < that -> sample_depth )		8659266	12					
ANR	8659318	Condition	sig_bits && that -> red_sBIT < that -> sample_depth	6455:7:201506:201552	8659266	0	True				
ANR	8659319	AndExpression	sig_bits && that -> red_sBIT < that -> sample_depth		8659266	0		&&			
ANR	8659320	Identifier	sig_bits		8659266	0					
ANR	8659321	RelationalExpression	that -> red_sBIT < that -> sample_depth		8659266	1		<			
ANR	8659322	PtrMemberAccess	that -> red_sBIT		8659266	0					
ANR	8659323	Identifier	that		8659266	0					
ANR	8659324	Identifier	red_sBIT		8659266	1					
ANR	8659325	PtrMemberAccess	that -> sample_depth		8659266	1					
ANR	8659326	Identifier	that		8659266	0					
ANR	8659327	Identifier	sample_depth		8659266	1					
ANR	8659328	ExpressionStatement	that -> red >>= that -> sample_depth - that -> red_sBIT	6456:6:201561:201610	8659266	1	True				
ANR	8659329	AssignmentExpression	that -> red >>= that -> sample_depth - that -> red_sBIT		8659266	0		>>=			
ANR	8659330	PtrMemberAccess	that -> red		8659266	0					
ANR	8659331	Identifier	that		8659266	0					
ANR	8659332	Identifier	red		8659266	1					
ANR	8659333	AdditiveExpression	that -> sample_depth - that -> red_sBIT		8659266	1		-			
ANR	8659334	PtrMemberAccess	that -> sample_depth		8659266	0					
ANR	8659335	Identifier	that		8659266	0					
ANR	8659336	Identifier	sample_depth		8659266	1					
ANR	8659337	PtrMemberAccess	that -> red_sBIT		8659266	1					
ANR	8659338	Identifier	that		8659266	0					
ANR	8659339	Identifier	red_sBIT		8659266	1					
ANR	8659340	ExpressionStatement	that -> rede += 1. / ( 2 * ( ( 1U << that -> red_sBIT ) - 1 ) )	6468:3:202329:202374	8659266	13	True				
ANR	8659341	AssignmentExpression	that -> rede += 1. / ( 2 * ( ( 1U << that -> red_sBIT ) - 1 ) )		8659266	0		+=			
ANR	8659342	PtrMemberAccess	that -> rede		8659266	0					
ANR	8659343	Identifier	that		8659266	0					
ANR	8659344	Identifier	rede		8659266	1					
ANR	8659345	MultiplicativeExpression	1. / ( 2 * ( ( 1U << that -> red_sBIT ) - 1 ) )		8659266	1		/			
ANR	8659346	PrimaryExpression	1.		8659266	0					
ANR	8659347	MultiplicativeExpression	2 * ( ( 1U << that -> red_sBIT ) - 1 )		8659266	1		*			
ANR	8659348	PrimaryExpression	2		8659266	0					
ANR	8659349	AdditiveExpression	( 1U << that -> red_sBIT ) - 1		8659266	1		-			
ANR	8659350	ShiftExpression	1U << that -> red_sBIT		8659266	0		<<			
ANR	8659351	PrimaryExpression	1U		8659266	0					
ANR	8659352	PtrMemberAccess	that -> red_sBIT		8659266	1					
ANR	8659353	Identifier	that		8659266	0					
ANR	8659354	Identifier	red_sBIT		8659266	1					
ANR	8659355	PrimaryExpression	1		8659266	1					
ANR	8659356	IfStatement	if ( that -> colour_type & PNG_COLOR_MASK_COLOR )		8659266	14					
ANR	8659357	Condition	that -> colour_type & PNG_COLOR_MASK_COLOR	6470:7:202384:202423	8659266	0	True				
ANR	8659358	BitAndExpression	that -> colour_type & PNG_COLOR_MASK_COLOR		8659266	0		&			
ANR	8659359	PtrMemberAccess	that -> colour_type		8659266	0					
ANR	8659360	Identifier	that		8659266	0					
ANR	8659361	Identifier	colour_type		8659266	1					
ANR	8659362	Identifier	PNG_COLOR_MASK_COLOR		8659266	1					
ANR	8659363	CompoundStatement		38:3:1726:1726	8659266	1					
ANR	8659364	ExpressionStatement	"that -> green = sample_scale ( that -> greenf , scale )"	6472:6:202437:202484	8659266	0	True				
ANR	8659365	AssignmentExpression	"that -> green = sample_scale ( that -> greenf , scale )"		8659266	0		=			
ANR	8659366	PtrMemberAccess	that -> green		8659266	0					
ANR	8659367	Identifier	that		8659266	0					
ANR	8659368	Identifier	green		8659266	1					
ANR	8659369	CallExpression	"sample_scale ( that -> greenf , scale )"		8659266	1					
ANR	8659370	Callee	sample_scale		8659266	0					
ANR	8659371	Identifier	sample_scale		8659266	0					
ANR	8659372	ArgumentList	that -> greenf		8659266	1					
ANR	8659373	Argument	that -> greenf		8659266	0					
ANR	8659374	PtrMemberAccess	that -> greenf		8659266	0					
ANR	8659375	Identifier	that		8659266	0					
ANR	8659376	Identifier	greenf		8659266	1					
ANR	8659377	Argument	scale		8659266	1					
ANR	8659378	Identifier	scale		8659266	0					
ANR	8659379	IfStatement	if ( sig_bits && that -> green_sBIT < that -> sample_depth )		8659266	1					
ANR	8659380	Condition	sig_bits && that -> green_sBIT < that -> sample_depth	6473:10:202496:202544	8659266	0	True				
ANR	8659381	AndExpression	sig_bits && that -> green_sBIT < that -> sample_depth		8659266	0		&&			
ANR	8659382	Identifier	sig_bits		8659266	0					
ANR	8659383	RelationalExpression	that -> green_sBIT < that -> sample_depth		8659266	1		<			
ANR	8659384	PtrMemberAccess	that -> green_sBIT		8659266	0					
ANR	8659385	Identifier	that		8659266	0					
ANR	8659386	Identifier	green_sBIT		8659266	1					
ANR	8659387	PtrMemberAccess	that -> sample_depth		8659266	1					
ANR	8659388	Identifier	that		8659266	0					
ANR	8659389	Identifier	sample_depth		8659266	1					
ANR	8659390	ExpressionStatement	that -> green >>= that -> sample_depth - that -> green_sBIT	6474:9:202556:202609	8659266	1	True				
ANR	8659391	AssignmentExpression	that -> green >>= that -> sample_depth - that -> green_sBIT		8659266	0		>>=			
ANR	8659392	PtrMemberAccess	that -> green		8659266	0					
ANR	8659393	Identifier	that		8659266	0					
ANR	8659394	Identifier	green		8659266	1					
ANR	8659395	AdditiveExpression	that -> sample_depth - that -> green_sBIT		8659266	1		-			
ANR	8659396	PtrMemberAccess	that -> sample_depth		8659266	0					
ANR	8659397	Identifier	that		8659266	0					
ANR	8659398	Identifier	sample_depth		8659266	1					
ANR	8659399	PtrMemberAccess	that -> green_sBIT		8659266	1					
ANR	8659400	Identifier	that		8659266	0					
ANR	8659401	Identifier	green_sBIT		8659266	1					
ANR	8659402	ExpressionStatement	"that -> blue = sample_scale ( that -> bluef , scale )"	6476:6:202618:202663	8659266	2	True				
ANR	8659403	AssignmentExpression	"that -> blue = sample_scale ( that -> bluef , scale )"		8659266	0		=			
ANR	8659404	PtrMemberAccess	that -> blue		8659266	0					
ANR	8659405	Identifier	that		8659266	0					
ANR	8659406	Identifier	blue		8659266	1					
ANR	8659407	CallExpression	"sample_scale ( that -> bluef , scale )"		8659266	1					
ANR	8659408	Callee	sample_scale		8659266	0					
ANR	8659409	Identifier	sample_scale		8659266	0					
ANR	8659410	ArgumentList	that -> bluef		8659266	1					
ANR	8659411	Argument	that -> bluef		8659266	0					
ANR	8659412	PtrMemberAccess	that -> bluef		8659266	0					
ANR	8659413	Identifier	that		8659266	0					
ANR	8659414	Identifier	bluef		8659266	1					
ANR	8659415	Argument	scale		8659266	1					
ANR	8659416	Identifier	scale		8659266	0					
ANR	8659417	IfStatement	if ( sig_bits && that -> blue_sBIT < that -> sample_depth )		8659266	3					
ANR	8659418	Condition	sig_bits && that -> blue_sBIT < that -> sample_depth	6477:10:202675:202722	8659266	0	True				
ANR	8659419	AndExpression	sig_bits && that -> blue_sBIT < that -> sample_depth		8659266	0		&&			
ANR	8659420	Identifier	sig_bits		8659266	0					
ANR	8659421	RelationalExpression	that -> blue_sBIT < that -> sample_depth		8659266	1		<			
ANR	8659422	PtrMemberAccess	that -> blue_sBIT		8659266	0					
ANR	8659423	Identifier	that		8659266	0					
ANR	8659424	Identifier	blue_sBIT		8659266	1					
ANR	8659425	PtrMemberAccess	that -> sample_depth		8659266	1					
ANR	8659426	Identifier	that		8659266	0					
ANR	8659427	Identifier	sample_depth		8659266	1					
ANR	8659428	ExpressionStatement	that -> blue >>= that -> sample_depth - that -> blue_sBIT	6478:9:202734:202785	8659266	1	True				
ANR	8659429	AssignmentExpression	that -> blue >>= that -> sample_depth - that -> blue_sBIT		8659266	0		>>=			
ANR	8659430	PtrMemberAccess	that -> blue		8659266	0					
ANR	8659431	Identifier	that		8659266	0					
ANR	8659432	Identifier	blue		8659266	1					
ANR	8659433	AdditiveExpression	that -> sample_depth - that -> blue_sBIT		8659266	1		-			
ANR	8659434	PtrMemberAccess	that -> sample_depth		8659266	0					
ANR	8659435	Identifier	that		8659266	0					
ANR	8659436	Identifier	sample_depth		8659266	1					
ANR	8659437	PtrMemberAccess	that -> blue_sBIT		8659266	1					
ANR	8659438	Identifier	that		8659266	0					
ANR	8659439	Identifier	blue_sBIT		8659266	1					
ANR	8659440	ExpressionStatement	that -> greene += 1. / ( 2 * ( ( 1U << that -> green_sBIT ) - 1 ) )	6480:6:202794:202843	8659266	4	True				
ANR	8659441	AssignmentExpression	that -> greene += 1. / ( 2 * ( ( 1U << that -> green_sBIT ) - 1 ) )		8659266	0		+=			
ANR	8659442	PtrMemberAccess	that -> greene		8659266	0					
ANR	8659443	Identifier	that		8659266	0					
ANR	8659444	Identifier	greene		8659266	1					
ANR	8659445	MultiplicativeExpression	1. / ( 2 * ( ( 1U << that -> green_sBIT ) - 1 ) )		8659266	1		/			
ANR	8659446	PrimaryExpression	1.		8659266	0					
ANR	8659447	MultiplicativeExpression	2 * ( ( 1U << that -> green_sBIT ) - 1 )		8659266	1		*			
ANR	8659448	PrimaryExpression	2		8659266	0					
ANR	8659449	AdditiveExpression	( 1U << that -> green_sBIT ) - 1		8659266	1		-			
ANR	8659450	ShiftExpression	1U << that -> green_sBIT		8659266	0		<<			
ANR	8659451	PrimaryExpression	1U		8659266	0					
ANR	8659452	PtrMemberAccess	that -> green_sBIT		8659266	1					
ANR	8659453	Identifier	that		8659266	0					
ANR	8659454	Identifier	green_sBIT		8659266	1					
ANR	8659455	PrimaryExpression	1		8659266	1					
ANR	8659456	ExpressionStatement	that -> bluee += 1. / ( 2 * ( ( 1U << that -> blue_sBIT ) - 1 ) )	6481:6:202851:202898	8659266	5	True				
ANR	8659457	AssignmentExpression	that -> bluee += 1. / ( 2 * ( ( 1U << that -> blue_sBIT ) - 1 ) )		8659266	0		+=			
ANR	8659458	PtrMemberAccess	that -> bluee		8659266	0					
ANR	8659459	Identifier	that		8659266	0					
ANR	8659460	Identifier	bluee		8659266	1					
ANR	8659461	MultiplicativeExpression	1. / ( 2 * ( ( 1U << that -> blue_sBIT ) - 1 ) )		8659266	1		/			
ANR	8659462	PrimaryExpression	1.		8659266	0					
ANR	8659463	MultiplicativeExpression	2 * ( ( 1U << that -> blue_sBIT ) - 1 )		8659266	1		*			
ANR	8659464	PrimaryExpression	2		8659266	0					
ANR	8659465	AdditiveExpression	( 1U << that -> blue_sBIT ) - 1		8659266	1		-			
ANR	8659466	ShiftExpression	1U << that -> blue_sBIT		8659266	0		<<			
ANR	8659467	PrimaryExpression	1U		8659266	0					
ANR	8659468	PtrMemberAccess	that -> blue_sBIT		8659266	1					
ANR	8659469	Identifier	that		8659266	0					
ANR	8659470	Identifier	blue_sBIT		8659266	1					
ANR	8659471	PrimaryExpression	1		8659266	1					
ANR	8659472	ElseStatement	else		8659266	0					
ANR	8659473	CompoundStatement		51:3:2213:2213	8659266	0					
ANR	8659474	ExpressionStatement	that -> blue = that -> green = that -> red	6485:6:202924:202960	8659266	0	True				
ANR	8659475	AssignmentExpression	that -> blue = that -> green = that -> red		8659266	0		=			
ANR	8659476	PtrMemberAccess	that -> blue		8659266	0					
ANR	8659477	Identifier	that		8659266	0					
ANR	8659478	Identifier	blue		8659266	1					
ANR	8659479	AssignmentExpression	that -> green = that -> red		8659266	1		=			
ANR	8659480	PtrMemberAccess	that -> green		8659266	0					
ANR	8659481	Identifier	that		8659266	0					
ANR	8659482	Identifier	green		8659266	1					
ANR	8659483	PtrMemberAccess	that -> red		8659266	1					
ANR	8659484	Identifier	that		8659266	0					
ANR	8659485	Identifier	red		8659266	1					
ANR	8659486	ExpressionStatement	that -> bluef = that -> greenf = that -> redf	6486:6:202968:203007	8659266	1	True				
ANR	8659487	AssignmentExpression	that -> bluef = that -> greenf = that -> redf		8659266	0		=			
ANR	8659488	PtrMemberAccess	that -> bluef		8659266	0					
ANR	8659489	Identifier	that		8659266	0					
ANR	8659490	Identifier	bluef		8659266	1					
ANR	8659491	AssignmentExpression	that -> greenf = that -> redf		8659266	1		=			
ANR	8659492	PtrMemberAccess	that -> greenf		8659266	0					
ANR	8659493	Identifier	that		8659266	0					
ANR	8659494	Identifier	greenf		8659266	1					
ANR	8659495	PtrMemberAccess	that -> redf		8659266	1					
ANR	8659496	Identifier	that		8659266	0					
ANR	8659497	Identifier	redf		8659266	1					
ANR	8659498	ExpressionStatement	that -> bluee = that -> greene = that -> rede	6487:6:203015:203054	8659266	2	True				
ANR	8659499	AssignmentExpression	that -> bluee = that -> greene = that -> rede		8659266	0		=			
ANR	8659500	PtrMemberAccess	that -> bluee		8659266	0					
ANR	8659501	Identifier	that		8659266	0					
ANR	8659502	Identifier	bluee		8659266	1					
ANR	8659503	AssignmentExpression	that -> greene = that -> rede		8659266	1		=			
ANR	8659504	PtrMemberAccess	that -> greene		8659266	0					
ANR	8659505	Identifier	that		8659266	0					
ANR	8659506	Identifier	greene		8659266	1					
ANR	8659507	PtrMemberAccess	that -> rede		8659266	1					
ANR	8659508	Identifier	that		8659266	0					
ANR	8659509	Identifier	rede		8659266	1					
ANR	8659510	IfStatement	if ( ( that -> colour_type & PNG_COLOR_MASK_ALPHA ) || that -> colour_type == PNG_COLOR_TYPE_PALETTE )		8659266	15					
ANR	8659511	Condition	( that -> colour_type & PNG_COLOR_MASK_ALPHA ) || that -> colour_type == PNG_COLOR_TYPE_PALETTE	6490:7:203069:203163	8659266	0	True				
ANR	8659512	OrExpression	( that -> colour_type & PNG_COLOR_MASK_ALPHA ) || that -> colour_type == PNG_COLOR_TYPE_PALETTE		8659266	0		||			
ANR	8659513	BitAndExpression	that -> colour_type & PNG_COLOR_MASK_ALPHA		8659266	0		&			
ANR	8659514	PtrMemberAccess	that -> colour_type		8659266	0					
ANR	8659515	Identifier	that		8659266	0					
ANR	8659516	Identifier	colour_type		8659266	1					
ANR	8659517	Identifier	PNG_COLOR_MASK_ALPHA		8659266	1					
ANR	8659518	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_PALETTE		8659266	1		==			
ANR	8659519	PtrMemberAccess	that -> colour_type		8659266	0					
ANR	8659520	Identifier	that		8659266	0					
ANR	8659521	Identifier	colour_type		8659266	1					
ANR	8659522	Identifier	PNG_COLOR_TYPE_PALETTE		8659266	1					
ANR	8659523	CompoundStatement		59:3:2466:2466	8659266	1					
ANR	8659524	ExpressionStatement	"that -> alpha = sample_scale ( that -> alphaf , scale )"	6493:6:203177:203224	8659266	0	True				
ANR	8659525	AssignmentExpression	"that -> alpha = sample_scale ( that -> alphaf , scale )"		8659266	0		=			
ANR	8659526	PtrMemberAccess	that -> alpha		8659266	0					
ANR	8659527	Identifier	that		8659266	0					
ANR	8659528	Identifier	alpha		8659266	1					
ANR	8659529	CallExpression	"sample_scale ( that -> alphaf , scale )"		8659266	1					
ANR	8659530	Callee	sample_scale		8659266	0					
ANR	8659531	Identifier	sample_scale		8659266	0					
ANR	8659532	ArgumentList	that -> alphaf		8659266	1					
ANR	8659533	Argument	that -> alphaf		8659266	0					
ANR	8659534	PtrMemberAccess	that -> alphaf		8659266	0					
ANR	8659535	Identifier	that		8659266	0					
ANR	8659536	Identifier	alphaf		8659266	1					
ANR	8659537	Argument	scale		8659266	1					
ANR	8659538	Identifier	scale		8659266	0					
ANR	8659539	ExpressionStatement	that -> alphae += 1. / ( 2 * ( ( 1U << that -> alpha_sBIT ) - 1 ) )	6494:6:203232:203281	8659266	1	True				
ANR	8659540	AssignmentExpression	that -> alphae += 1. / ( 2 * ( ( 1U << that -> alpha_sBIT ) - 1 ) )		8659266	0		+=			
ANR	8659541	PtrMemberAccess	that -> alphae		8659266	0					
ANR	8659542	Identifier	that		8659266	0					
ANR	8659543	Identifier	alphae		8659266	1					
ANR	8659544	MultiplicativeExpression	1. / ( 2 * ( ( 1U << that -> alpha_sBIT ) - 1 ) )		8659266	1		/			
ANR	8659545	PrimaryExpression	1.		8659266	0					
ANR	8659546	MultiplicativeExpression	2 * ( ( 1U << that -> alpha_sBIT ) - 1 )		8659266	1		*			
ANR	8659547	PrimaryExpression	2		8659266	0					
ANR	8659548	AdditiveExpression	( 1U << that -> alpha_sBIT ) - 1		8659266	1		-			
ANR	8659549	ShiftExpression	1U << that -> alpha_sBIT		8659266	0		<<			
ANR	8659550	PrimaryExpression	1U		8659266	0					
ANR	8659551	PtrMemberAccess	that -> alpha_sBIT		8659266	1					
ANR	8659552	Identifier	that		8659266	0					
ANR	8659553	Identifier	alpha_sBIT		8659266	1					
ANR	8659554	PrimaryExpression	1		8659266	1					
ANR	8659555	ElseStatement	else		8659266	0					
ANR	8659556	CompoundStatement		64:3:2596:2596	8659266	0					
ANR	8659557	ExpressionStatement	that -> alpha = scale	6498:6:203307:203326	8659266	0	True				
ANR	8659558	AssignmentExpression	that -> alpha = scale		8659266	0		=			
ANR	8659559	PtrMemberAccess	that -> alpha		8659266	0					
ANR	8659560	Identifier	that		8659266	0					
ANR	8659561	Identifier	alpha		8659266	1					
ANR	8659562	Identifier	scale		8659266	1					
ANR	8659563	ExpressionStatement	that -> alphaf = 1	6499:6:203347:203363	8659266	1	True				
ANR	8659564	AssignmentExpression	that -> alphaf = 1		8659266	0		=			
ANR	8659565	PtrMemberAccess	that -> alphaf		8659266	0					
ANR	8659566	Identifier	that		8659266	0					
ANR	8659567	Identifier	alphaf		8659266	1					
ANR	8659568	PrimaryExpression	1		8659266	1					
ANR	8659569	ExpressionStatement	that -> alphae = 0	6500:6:203395:203411	8659266	2	True				
ANR	8659570	AssignmentExpression	that -> alphae = 0		8659266	0		=			
ANR	8659571	PtrMemberAccess	that -> alphae		8659266	0					
ANR	8659572	Identifier	that		8659266	0					
ANR	8659573	Identifier	alphae		8659266	1					
ANR	8659574	PrimaryExpression	0		8659266	1					
ANR	8659575	IfStatement	if ( sig_bits && that -> alpha_sBIT < that -> sample_depth )		8659266	16					
ANR	8659576	Condition	sig_bits && that -> alpha_sBIT < that -> sample_depth	6503:7:203450:203498	8659266	0	True				
ANR	8659577	AndExpression	sig_bits && that -> alpha_sBIT < that -> sample_depth		8659266	0		&&			
ANR	8659578	Identifier	sig_bits		8659266	0					
ANR	8659579	RelationalExpression	that -> alpha_sBIT < that -> sample_depth		8659266	1		<			
ANR	8659580	PtrMemberAccess	that -> alpha_sBIT		8659266	0					
ANR	8659581	Identifier	that		8659266	0					
ANR	8659582	Identifier	alpha_sBIT		8659266	1					
ANR	8659583	PtrMemberAccess	that -> sample_depth		8659266	1					
ANR	8659584	Identifier	that		8659266	0					
ANR	8659585	Identifier	sample_depth		8659266	1					
ANR	8659586	ExpressionStatement	that -> alpha >>= that -> sample_depth - that -> alpha_sBIT	6504:6:203507:203560	8659266	1	True				
ANR	8659587	AssignmentExpression	that -> alpha >>= that -> sample_depth - that -> alpha_sBIT		8659266	0		>>=			
ANR	8659588	PtrMemberAccess	that -> alpha		8659266	0					
ANR	8659589	Identifier	that		8659266	0					
ANR	8659590	Identifier	alpha		8659266	1					
ANR	8659591	AdditiveExpression	that -> sample_depth - that -> alpha_sBIT		8659266	1		-			
ANR	8659592	PtrMemberAccess	that -> sample_depth		8659266	0					
ANR	8659593	Identifier	that		8659266	0					
ANR	8659594	Identifier	sample_depth		8659266	1					
ANR	8659595	PtrMemberAccess	that -> alpha_sBIT		8659266	1					
ANR	8659596	Identifier	that		8659266	0					
ANR	8659597	Identifier	alpha_sBIT		8659266	1					
ANR	8659598	ReturnType	static void		8659266	1					
ANR	8659599	Identifier	image_transform_mod_end		8659266	2					
ANR	8659600	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8659266	3					
ANR	8659601	Parameter	const image_transform * this	6432:24:200594:200620	8659266	0	True				
ANR	8659602	ParameterType	const image_transform *		8659266	0					
ANR	8659603	Identifier	this		8659266	1					
ANR	8659604	Parameter	image_pixel * that	6432:53:200623:200639	8659266	1	True				
ANR	8659605	ParameterType	image_pixel *		8659266	0					
ANR	8659606	Identifier	that		8659266	1					
ANR	8659607	Parameter	png_const_structp pp	6433:4:200646:200665	8659266	2	True				
ANR	8659608	ParameterType	png_const_structp		8659266	0					
ANR	8659609	Identifier	pp		8659266	1					
ANR	8659610	Parameter	const transform_display * display	6433:26:200668:200699	8659266	3	True				
ANR	8659611	ParameterType	const transform_display *		8659266	0					
ANR	8659612	Identifier	display		8659266	1					
ANR	8659613	CFGEntryNode	ENTRY		8659266		True				
ANR	8659614	CFGExitNode	EXIT		8659266		True				
ANR	8659615	Symbol	pp		8659266						
ANR	8659616	Symbol	that -> alphae		8659266						
ANR	8659617	Symbol	that -> red		8659266						
ANR	8659618	Symbol	that -> alphaf		8659266						
ANR	8659619	Symbol	scale		8659266						
ANR	8659620	Symbol	that -> alpha		8659266						
ANR	8659621	Symbol	that -> red_sBIT		8659266						
ANR	8659622	Symbol	that		8659266						
ANR	8659623	Symbol	that -> alpha_sBIT		8659266						
ANR	8659624	Symbol	that -> bluee		8659266						
ANR	8659625	Symbol	display		8659266						
ANR	8659626	Symbol	that -> bluef		8659266						
ANR	8659627	Symbol	this		8659266						
ANR	8659628	Symbol	that -> blue		8659266						
ANR	8659629	Symbol	that -> rede		8659266						
ANR	8659630	Symbol	PNG_COLOR_MASK_COLOR		8659266						
ANR	8659631	Symbol	sample_scale		8659266						
ANR	8659632	Symbol	that -> redf		8659266						
ANR	8659633	Symbol	that -> sig_bits		8659266						
ANR	8659634	Symbol	that -> green_sBIT		8659266						
ANR	8659635	Symbol	that -> greenf		8659266						
ANR	8659636	Symbol	that -> greene		8659266						
ANR	8659637	Symbol	that -> colour_type		8659266						
ANR	8659638	Symbol	that -> blue_sBIT		8659266						
ANR	8659639	Symbol	sig_bits		8659266						
ANR	8659640	Symbol	PNG_COLOR_MASK_ALPHA		8659266						
ANR	8659641	Symbol	that -> green		8659266						
ANR	8659642	Symbol	* that		8659266						
ANR	8659643	Symbol	that -> sample_depth		8659266						
ANR	8659644	Symbol	PNG_COLOR_TYPE_PALETTE		8659266						
ANR	8659645	DeclStmt									
ANR	8659646	Decl							image_transform	image_transform	image_transform_end
ANR	8659647	Function	transform_display_init	6525:0:203995:204559							
ANR	8659648	FunctionDef	"transform_display_init (transform_display * dp , png_modifier * pm , png_uint_32 id , const image_transform * transform_list)"		8659647	0					
ANR	8659649	CompoundStatement		6528:0:204130:204559	8659647	0					
ANR	8659650	ExpressionStatement	"memset ( dp , 0 , sizeof * dp )"	6529:3:204135:204160	8659647	0	True				
ANR	8659651	CallExpression	"memset ( dp , 0 , sizeof * dp )"		8659647	0					
ANR	8659652	Callee	memset		8659647	0					
ANR	8659653	Identifier	memset		8659647	0					
ANR	8659654	ArgumentList	dp		8659647	1					
ANR	8659655	Argument	dp		8659647	0					
ANR	8659656	Identifier	dp		8659647	0					
ANR	8659657	Argument	0		8659647	1					
ANR	8659658	PrimaryExpression	0		8659647	0					
ANR	8659659	Argument	sizeof * dp		8659647	2					
ANR	8659660	SizeofExpression	sizeof * dp		8659647	0					
ANR	8659661	Sizeof	sizeof		8659647	0					
ANR	8659662	UnaryOperationExpression	* dp		8659647	1					
ANR	8659663	UnaryOperator	*		8659647	0					
ANR	8659664	Identifier	dp		8659647	1					
ANR	8659665	ExpressionStatement	"standard_display_init ( & dp -> this , & pm -> this , id , do_read_interlace , pm -> use_update_info )"	6532:3:204191:204284	8659647	1	True				
ANR	8659666	CallExpression	"standard_display_init ( & dp -> this , & pm -> this , id , do_read_interlace , pm -> use_update_info )"		8659647	0					
ANR	8659667	Callee	standard_display_init		8659647	0					
ANR	8659668	Identifier	standard_display_init		8659647	0					
ANR	8659669	ArgumentList	& dp -> this		8659647	1					
ANR	8659670	Argument	& dp -> this		8659647	0					
ANR	8659671	UnaryOperationExpression	& dp -> this		8659647	0					
ANR	8659672	UnaryOperator	&		8659647	0					
ANR	8659673	PtrMemberAccess	dp -> this		8659647	1					
ANR	8659674	Identifier	dp		8659647	0					
ANR	8659675	Identifier	this		8659647	1					
ANR	8659676	Argument	& pm -> this		8659647	1					
ANR	8659677	UnaryOperationExpression	& pm -> this		8659647	0					
ANR	8659678	UnaryOperator	&		8659647	0					
ANR	8659679	PtrMemberAccess	pm -> this		8659647	1					
ANR	8659680	Identifier	pm		8659647	0					
ANR	8659681	Identifier	this		8659647	1					
ANR	8659682	Argument	id		8659647	2					
ANR	8659683	Identifier	id		8659647	0					
ANR	8659684	Argument	do_read_interlace		8659647	3					
ANR	8659685	Identifier	do_read_interlace		8659647	0					
ANR	8659686	Argument	pm -> use_update_info		8659647	4					
ANR	8659687	PtrMemberAccess	pm -> use_update_info		8659647	0					
ANR	8659688	Identifier	pm		8659647	0					
ANR	8659689	Identifier	use_update_info		8659647	1					
ANR	8659690	ExpressionStatement	dp -> pm = pm	6536:3:204316:204327	8659647	2	True				
ANR	8659691	AssignmentExpression	dp -> pm = pm		8659647	0		=			
ANR	8659692	PtrMemberAccess	dp -> pm		8659647	0					
ANR	8659693	Identifier	dp		8659647	0					
ANR	8659694	Identifier	pm		8659647	1					
ANR	8659695	Identifier	pm		8659647	1					
ANR	8659696	ExpressionStatement	dp -> transform_list = transform_list	6537:3:204332:204367	8659647	3	True				
ANR	8659697	AssignmentExpression	dp -> transform_list = transform_list		8659647	0		=			
ANR	8659698	PtrMemberAccess	dp -> transform_list		8659647	0					
ANR	8659699	Identifier	dp		8659647	0					
ANR	8659700	Identifier	transform_list		8659647	1					
ANR	8659701	Identifier	transform_list		8659647	1					
ANR	8659702	ExpressionStatement	dp -> max_gamma_8 = 16	6538:3:204372:204392	8659647	4	True				
ANR	8659703	AssignmentExpression	dp -> max_gamma_8 = 16		8659647	0		=			
ANR	8659704	PtrMemberAccess	dp -> max_gamma_8		8659647	0					
ANR	8659705	Identifier	dp		8659647	0					
ANR	8659706	Identifier	max_gamma_8		8659647	1					
ANR	8659707	PrimaryExpression	16		8659647	1					
ANR	8659708	ExpressionStatement	dp -> output_colour_type = 255	6541:3:204429:204457	8659647	5	True				
ANR	8659709	AssignmentExpression	dp -> output_colour_type = 255		8659647	0		=			
ANR	8659710	PtrMemberAccess	dp -> output_colour_type		8659647	0					
ANR	8659711	Identifier	dp		8659647	0					
ANR	8659712	Identifier	output_colour_type		8659647	1					
ANR	8659713	PrimaryExpression	255		8659647	1					
ANR	8659714	ExpressionStatement	dp -> output_bit_depth = 255	6542:3:204476:204502	8659647	6	True				
ANR	8659715	AssignmentExpression	dp -> output_bit_depth = 255		8659647	0		=			
ANR	8659716	PtrMemberAccess	dp -> output_bit_depth		8659647	0					
ANR	8659717	Identifier	dp		8659647	0					
ANR	8659718	Identifier	output_bit_depth		8659647	1					
ANR	8659719	PrimaryExpression	255		8659647	1					
ANR	8659720	ExpressionStatement	dp -> unpacked = 0	6543:3:204522:204538	8659647	7	True				
ANR	8659721	AssignmentExpression	dp -> unpacked = 0		8659647	0		=			
ANR	8659722	PtrMemberAccess	dp -> unpacked		8659647	0					
ANR	8659723	Identifier	dp		8659647	0					
ANR	8659724	Identifier	unpacked		8659647	1					
ANR	8659725	PrimaryExpression	0		8659647	1					
ANR	8659726	ReturnType	static void		8659647	1					
ANR	8659727	Identifier	transform_display_init		8659647	2					
ANR	8659728	ParameterList	"transform_display * dp , png_modifier * pm , png_uint_32 id , const image_transform * transform_list"		8659647	3					
ANR	8659729	Parameter	transform_display * dp	6526:23:204030:204050	8659647	0	True				
ANR	8659730	ParameterType	transform_display *		8659647	0					
ANR	8659731	Identifier	dp		8659647	1					
ANR	8659732	Parameter	png_modifier * pm	6526:46:204053:204068	8659647	1	True				
ANR	8659733	ParameterType	png_modifier *		8659647	0					
ANR	8659734	Identifier	pm		8659647	1					
ANR	8659735	Parameter	png_uint_32 id	6526:64:204071:204084	8659647	2	True				
ANR	8659736	ParameterType	png_uint_32		8659647	0					
ANR	8659737	Identifier	id		8659647	1					
ANR	8659738	Parameter	const image_transform * transform_list	6527:4:204091:204127	8659647	3	True				
ANR	8659739	ParameterType	const image_transform *		8659647	0					
ANR	8659740	Identifier	transform_list		8659647	1					
ANR	8659741	CFGEntryNode	ENTRY		8659647		True				
ANR	8659742	CFGExitNode	EXIT		8659647		True				
ANR	8659743	Symbol	* pm		8659647						
ANR	8659744	Symbol	do_read_interlace		8659647						
ANR	8659745	Symbol	& dp -> this		8659647						
ANR	8659746	Symbol	dp		8659647						
ANR	8659747	Symbol	dp -> transform_list		8659647						
ANR	8659748	Symbol	dp -> output_colour_type		8659647						
ANR	8659749	Symbol	dp -> output_bit_depth		8659647						
ANR	8659750	Symbol	* dp		8659647						
ANR	8659751	Symbol	dp -> max_gamma_8		8659647						
ANR	8659752	Symbol	transform_list		8659647						
ANR	8659753	Symbol	pm -> use_update_info		8659647						
ANR	8659754	Symbol	& pm -> this		8659647						
ANR	8659755	Symbol	dp -> pm		8659647						
ANR	8659756	Symbol	id		8659647						
ANR	8659757	Symbol	dp -> unpacked		8659647						
ANR	8659758	Symbol	pm		8659647						
ANR	8659759	Function	transform_info_imp	6546:0:204562:210365							
ANR	8659760	FunctionDef	"transform_info_imp (transform_display * dp , png_structp pp , png_infop pi)"		8659759	0					
ANR	8659761	CompoundStatement		6548:0:204646:210365	8659759	0					
ANR	8659762	ExpressionStatement	"standard_info_part1 ( & dp -> this , pp , pi )"	6550:3:204701:204739	8659759	0	True				
ANR	8659763	CallExpression	"standard_info_part1 ( & dp -> this , pp , pi )"		8659759	0					
ANR	8659764	Callee	standard_info_part1		8659759	0					
ANR	8659765	Identifier	standard_info_part1		8659759	0					
ANR	8659766	ArgumentList	& dp -> this		8659759	1					
ANR	8659767	Argument	& dp -> this		8659759	0					
ANR	8659768	UnaryOperationExpression	& dp -> this		8659759	0					
ANR	8659769	UnaryOperator	&		8659759	0					
ANR	8659770	PtrMemberAccess	dp -> this		8659759	1					
ANR	8659771	Identifier	dp		8659759	0					
ANR	8659772	Identifier	this		8659759	1					
ANR	8659773	Argument	pp		8659759	1					
ANR	8659774	Identifier	pp		8659759	0					
ANR	8659775	Argument	pi		8659759	2					
ANR	8659776	Identifier	pi		8659759	0					
ANR	8659777	ExpressionStatement	"dp -> transform_list -> set ( dp -> transform_list , dp , pp , pi )"	6553:3:204786:204841	8659759	1	True				
ANR	8659778	CallExpression	"dp -> transform_list -> set ( dp -> transform_list , dp , pp , pi )"		8659759	0					
ANR	8659779	Callee	dp -> transform_list -> set		8659759	0					
ANR	8659780	PtrMemberAccess	dp -> transform_list -> set		8659759	0					
ANR	8659781	PtrMemberAccess	dp -> transform_list		8659759	0					
ANR	8659782	Identifier	dp		8659759	0					
ANR	8659783	Identifier	transform_list		8659759	1					
ANR	8659784	Identifier	set		8659759	1					
ANR	8659785	ArgumentList	dp -> transform_list		8659759	1					
ANR	8659786	Argument	dp -> transform_list		8659759	0					
ANR	8659787	PtrMemberAccess	dp -> transform_list		8659759	0					
ANR	8659788	Identifier	dp		8659759	0					
ANR	8659789	Identifier	transform_list		8659759	1					
ANR	8659790	Argument	dp		8659759	1					
ANR	8659791	Identifier	dp		8659759	0					
ANR	8659792	Argument	pp		8659759	2					
ANR	8659793	Identifier	pp		8659759	0					
ANR	8659794	Argument	pi		8659759	3					
ANR	8659795	Identifier	pi		8659759	0					
ANR	8659796	CompoundStatement		10:6:265:297	8659759	2					
ANR	8659797	IdentifierDeclStatement	int i = dp -> this . use_update_info ;	6557:6:204912:204944	8659759	0	True				
ANR	8659798	IdentifierDecl	i = dp -> this . use_update_info		8659759	0					
ANR	8659799	IdentifierDeclType	int		8659759	0					
ANR	8659800	Identifier	i		8659759	1					
ANR	8659801	AssignmentExpression	i = dp -> this . use_update_info		8659759	2		=			
ANR	8659802	Identifier	i		8659759	0					
ANR	8659803	MemberAccess	dp -> this . use_update_info		8659759	1					
ANR	8659804	PtrMemberAccess	dp -> this		8659759	0					
ANR	8659805	Identifier	dp		8659759	0					
ANR	8659806	Identifier	this		8659759	1					
ANR	8659807	Identifier	use_update_info		8659759	1					
ANR	8659808	DoStatement	do		8659759	1					
ANR	8659809	ExpressionStatement	"png_read_update_info ( pp , pi )"	6560:9:205026:205054	8659759	0	True				
ANR	8659810	CallExpression	"png_read_update_info ( pp , pi )"		8659759	0					
ANR	8659811	Callee	png_read_update_info		8659759	0					
ANR	8659812	Identifier	png_read_update_info		8659759	0					
ANR	8659813	ArgumentList	pp		8659759	1					
ANR	8659814	Argument	pp		8659759	0					
ANR	8659815	Identifier	pp		8659759	0					
ANR	8659816	Argument	pi		8659759	1					
ANR	8659817	Identifier	pi		8659759	0					
ANR	8659818	Condition	-- i > 0	6561:13:205069:205075	8659759	1	True				
ANR	8659819	RelationalExpression	-- i > 0		8659759	0		>			
ANR	8659820	UnaryExpression	-- i		8659759	0					
ANR	8659821	IncDec	--		8659759	0					
ANR	8659822	Identifier	i		8659759	1					
ANR	8659823	PrimaryExpression	0		8659759	1					
ANR	8659824	ExpressionStatement	"standard_info_part2 ( & dp -> this , pp , pi , 1 )"	6565:3:205154:205205	8659759	3	True				
ANR	8659825	CallExpression	"standard_info_part2 ( & dp -> this , pp , pi , 1 )"		8659759	0					
ANR	8659826	Callee	standard_info_part2		8659759	0					
ANR	8659827	Identifier	standard_info_part2		8659759	0					
ANR	8659828	ArgumentList	& dp -> this		8659759	1					
ANR	8659829	Argument	& dp -> this		8659759	0					
ANR	8659830	UnaryOperationExpression	& dp -> this		8659759	0					
ANR	8659831	UnaryOperator	&		8659759	0					
ANR	8659832	PtrMemberAccess	dp -> this		8659759	1					
ANR	8659833	Identifier	dp		8659759	0					
ANR	8659834	Identifier	this		8659759	1					
ANR	8659835	Argument	pp		8659759	1					
ANR	8659836	Identifier	pp		8659759	0					
ANR	8659837	Argument	pi		8659759	2					
ANR	8659838	Identifier	pi		8659759	0					
ANR	8659839	Argument	1		8659759	3					
ANR	8659840	PrimaryExpression	1		8659759	0					
ANR	8659841	ExpressionStatement	"dp -> output_colour_type = png_get_color_type ( pp , pi )"	6568:3:205274:205325	8659759	4	True				
ANR	8659842	AssignmentExpression	"dp -> output_colour_type = png_get_color_type ( pp , pi )"		8659759	0		=			
ANR	8659843	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8659844	Identifier	dp		8659759	0					
ANR	8659845	Identifier	output_colour_type		8659759	1					
ANR	8659846	CallExpression	"png_get_color_type ( pp , pi )"		8659759	1					
ANR	8659847	Callee	png_get_color_type		8659759	0					
ANR	8659848	Identifier	png_get_color_type		8659759	0					
ANR	8659849	ArgumentList	pp		8659759	1					
ANR	8659850	Argument	pp		8659759	0					
ANR	8659851	Identifier	pp		8659759	0					
ANR	8659852	Argument	pi		8659759	1					
ANR	8659853	Identifier	pi		8659759	0					
ANR	8659854	ExpressionStatement	"dp -> output_bit_depth = png_get_bit_depth ( pp , pi )"	6569:3:205330:205378	8659759	5	True				
ANR	8659855	AssignmentExpression	"dp -> output_bit_depth = png_get_bit_depth ( pp , pi )"		8659759	0		=			
ANR	8659856	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659857	Identifier	dp		8659759	0					
ANR	8659858	Identifier	output_bit_depth		8659759	1					
ANR	8659859	CallExpression	"png_get_bit_depth ( pp , pi )"		8659759	1					
ANR	8659860	Callee	png_get_bit_depth		8659759	0					
ANR	8659861	Identifier	png_get_bit_depth		8659759	0					
ANR	8659862	ArgumentList	pp		8659759	1					
ANR	8659863	Argument	pp		8659759	0					
ANR	8659864	Identifier	pp		8659759	0					
ANR	8659865	Argument	pi		8659759	1					
ANR	8659866	Identifier	pi		8659759	0					
ANR	8659867	IfStatement	if ( dp -> output_bit_depth >= 8 && ( dp -> output_colour_type == PNG_COLOR_TYPE_RGB || dp -> output_colour_type == PNG_COLOR_TYPE_GRAY ) && dp -> this . filler )		8659759	6					
ANR	8659868	Condition	dp -> output_bit_depth >= 8 && ( dp -> output_colour_type == PNG_COLOR_TYPE_RGB || dp -> output_colour_type == PNG_COLOR_TYPE_GRAY ) && dp -> this . filler	6574:7:205517:205674	8659759	0	True				
ANR	8659869	AndExpression	dp -> output_bit_depth >= 8 && ( dp -> output_colour_type == PNG_COLOR_TYPE_RGB || dp -> output_colour_type == PNG_COLOR_TYPE_GRAY ) && dp -> this . filler		8659759	0		&&			
ANR	8659870	RelationalExpression	dp -> output_bit_depth >= 8		8659759	0		>=			
ANR	8659871	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659872	Identifier	dp		8659759	0					
ANR	8659873	Identifier	output_bit_depth		8659759	1					
ANR	8659874	PrimaryExpression	8		8659759	1					
ANR	8659875	AndExpression	( dp -> output_colour_type == PNG_COLOR_TYPE_RGB || dp -> output_colour_type == PNG_COLOR_TYPE_GRAY ) && dp -> this . filler		8659759	1		&&			
ANR	8659876	OrExpression	dp -> output_colour_type == PNG_COLOR_TYPE_RGB || dp -> output_colour_type == PNG_COLOR_TYPE_GRAY		8659759	0		||			
ANR	8659877	EqualityExpression	dp -> output_colour_type == PNG_COLOR_TYPE_RGB		8659759	0		==			
ANR	8659878	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8659879	Identifier	dp		8659759	0					
ANR	8659880	Identifier	output_colour_type		8659759	1					
ANR	8659881	Identifier	PNG_COLOR_TYPE_RGB		8659759	1					
ANR	8659882	EqualityExpression	dp -> output_colour_type == PNG_COLOR_TYPE_GRAY		8659759	1		==			
ANR	8659883	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8659884	Identifier	dp		8659759	0					
ANR	8659885	Identifier	output_colour_type		8659759	1					
ANR	8659886	Identifier	PNG_COLOR_TYPE_GRAY		8659759	1					
ANR	8659887	MemberAccess	dp -> this . filler		8659759	1					
ANR	8659888	PtrMemberAccess	dp -> this		8659759	0					
ANR	8659889	Identifier	dp		8659759	0					
ANR	8659890	Identifier	this		8659759	1					
ANR	8659891	Identifier	filler		8659759	1					
ANR	8659892	ExpressionStatement	dp -> output_colour_type |= 4	6577:7:205684:205711	8659759	1	True				
ANR	8659893	AssignmentExpression	dp -> output_colour_type |= 4		8659759	0		|=			
ANR	8659894	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8659895	Identifier	dp		8659759	0					
ANR	8659896	Identifier	output_colour_type		8659759	1					
ANR	8659897	PrimaryExpression	4		8659759	1					
ANR	8659898	SwitchStatement	switch ( dp -> output_colour_type )		8659759	7					
ANR	8659899	Condition	dp -> output_colour_type	6583:11:205909:205930	8659759	0	True				
ANR	8659900	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8659901	Identifier	dp		8659759	0					
ANR	8659902	Identifier	output_colour_type		8659759	1					
ANR	8659903	CompoundStatement		37:3:1289:1289	8659759	1					
ANR	8659904	Label	case PNG_COLOR_TYPE_PALETTE :	6585:3:205941:205968	8659759	0	True				
ANR	8659905	Identifier	PNG_COLOR_TYPE_PALETTE		8659759	0					
ANR	8659906	IfStatement	if ( dp -> output_bit_depth > 8 )		8659759	1					
ANR	8659907	Condition	dp -> output_bit_depth > 8	6586:10:205980:206003	8659759	0	True				
ANR	8659908	RelationalExpression	dp -> output_bit_depth > 8		8659759	0		>			
ANR	8659909	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659910	Identifier	dp		8659759	0					
ANR	8659911	Identifier	output_bit_depth		8659759	1					
ANR	8659912	PrimaryExpression	8		8659759	1					
ANR	8659913	GotoStatement	goto error ;	6586:36:206006:206016	8659759	1	True				
ANR	8659914	Identifier	error		8659759	0					
ANR	8659915	Label	case PNG_COLOR_TYPE_GRAY :	6588:3:206045:206069	8659759	2	True				
ANR	8659916	Identifier	PNG_COLOR_TYPE_GRAY		8659759	0					
ANR	8659917	IfStatement	if ( dp -> output_bit_depth == 1 || dp -> output_bit_depth == 2 || dp -> output_bit_depth == 4 )		8659759	3					
ANR	8659918	Condition	dp -> output_bit_depth == 1 || dp -> output_bit_depth == 2 || dp -> output_bit_depth == 4	6589:10:206081:206172	8659759	0	True				
ANR	8659919	OrExpression	dp -> output_bit_depth == 1 || dp -> output_bit_depth == 2 || dp -> output_bit_depth == 4		8659759	0		||			
ANR	8659920	EqualityExpression	dp -> output_bit_depth == 1		8659759	0		==			
ANR	8659921	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659922	Identifier	dp		8659759	0					
ANR	8659923	Identifier	output_bit_depth		8659759	1					
ANR	8659924	PrimaryExpression	1		8659759	1					
ANR	8659925	OrExpression	dp -> output_bit_depth == 2 || dp -> output_bit_depth == 4		8659759	1		||			
ANR	8659926	EqualityExpression	dp -> output_bit_depth == 2		8659759	0		==			
ANR	8659927	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659928	Identifier	dp		8659759	0					
ANR	8659929	Identifier	output_bit_depth		8659759	1					
ANR	8659930	PrimaryExpression	2		8659759	1					
ANR	8659931	EqualityExpression	dp -> output_bit_depth == 4		8659759	1		==			
ANR	8659932	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659933	Identifier	dp		8659759	0					
ANR	8659934	Identifier	output_bit_depth		8659759	1					
ANR	8659935	PrimaryExpression	4		8659759	1					
ANR	8659936	BreakStatement	break ;	6591:9:206184:206189	8659759	1	True				
ANR	8659937	Label	default :	6593:3:206218:206225	8659759	4	True				
ANR	8659938	Identifier	default		8659759	0					
ANR	8659939	IfStatement	if ( dp -> output_bit_depth == 8 || dp -> output_bit_depth == 16 )		8659759	5					
ANR	8659940	Condition	dp -> output_bit_depth == 8 || dp -> output_bit_depth == 16	6594:10:206237:206291	8659759	0	True				
ANR	8659941	OrExpression	dp -> output_bit_depth == 8 || dp -> output_bit_depth == 16		8659759	0		||			
ANR	8659942	EqualityExpression	dp -> output_bit_depth == 8		8659759	0		==			
ANR	8659943	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659944	Identifier	dp		8659759	0					
ANR	8659945	Identifier	output_bit_depth		8659759	1					
ANR	8659946	PrimaryExpression	8		8659759	1					
ANR	8659947	EqualityExpression	dp -> output_bit_depth == 16		8659759	1		==			
ANR	8659948	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8659949	Identifier	dp		8659759	0					
ANR	8659950	Identifier	output_bit_depth		8659759	1					
ANR	8659951	PrimaryExpression	16		8659759	1					
ANR	8659952	BreakStatement	break ;	6595:9:206303:206308	8659759	1	True				
ANR	8659953	Label	error :	6597:3:206337:206342	8659759	6	True				
ANR	8659954	Identifier	error		8659759	0					
ANR	8659955	CompoundStatement		53:9:1742:1752	8659759	7					
ANR	8659956	IdentifierDeclStatement	char message [ 128 ] ;	6599:9:206361:206378	8659759	0	True				
ANR	8659957	IdentifierDecl	message [ 128 ]		8659759	0					
ANR	8659958	IdentifierDeclType	char [ 128 ]		8659759	0					
ANR	8659959	Identifier	message		8659759	1					
ANR	8659960	PrimaryExpression	128		8659759	2					
ANR	8659961	IdentifierDeclStatement	size_t pos ;	6600:9:206389:206399	8659759	1	True				
ANR	8659962	IdentifierDecl	pos		8659759	0					
ANR	8659963	IdentifierDeclType	size_t		8659759	0					
ANR	8659964	Identifier	pos		8659759	1					
ANR	8659965	ExpressionStatement	"pos = safecat ( message , sizeof message , 0 , ""invalid final bit depth: colour type("" )"	6602:9:206411:206505	8659759	2	True				
ANR	8659966	AssignmentExpression	"pos = safecat ( message , sizeof message , 0 , ""invalid final bit depth: colour type("" )"		8659759	0		=			
ANR	8659967	Identifier	pos		8659759	0					
ANR	8659968	CallExpression	"safecat ( message , sizeof message , 0 , ""invalid final bit depth: colour type("" )"		8659759	1					
ANR	8659969	Callee	safecat		8659759	0					
ANR	8659970	Identifier	safecat		8659759	0					
ANR	8659971	ArgumentList	message		8659759	1					
ANR	8659972	Argument	message		8659759	0					
ANR	8659973	Identifier	message		8659759	0					
ANR	8659974	Argument	sizeof message		8659759	1					
ANR	8659975	SizeofExpression	sizeof message		8659759	0					
ANR	8659976	Sizeof	sizeof		8659759	0					
ANR	8659977	Identifier	message		8659759	1					
ANR	8659978	Argument	0		8659759	2					
ANR	8659979	PrimaryExpression	0		8659759	0					
ANR	8659980	Argument	"""invalid final bit depth: colour type("""		8659759	3					
ANR	8659981	PrimaryExpression	"""invalid final bit depth: colour type("""		8659759	0					
ANR	8659982	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , dp -> output_colour_type )"	6604:9:206516:206584	8659759	3	True				
ANR	8659983	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , dp -> output_colour_type )"		8659759	0		=			
ANR	8659984	Identifier	pos		8659759	0					
ANR	8659985	CallExpression	"safecatn ( message , sizeof message , pos , dp -> output_colour_type )"		8659759	1					
ANR	8659986	Callee	safecatn		8659759	0					
ANR	8659987	Identifier	safecatn		8659759	0					
ANR	8659988	ArgumentList	message		8659759	1					
ANR	8659989	Argument	message		8659759	0					
ANR	8659990	Identifier	message		8659759	0					
ANR	8659991	Argument	sizeof message		8659759	1					
ANR	8659992	SizeofExpression	sizeof message		8659759	0					
ANR	8659993	Sizeof	sizeof		8659759	0					
ANR	8659994	Identifier	message		8659759	1					
ANR	8659995	Argument	pos		8659759	2					
ANR	8659996	Identifier	pos		8659759	0					
ANR	8659997	Argument	dp -> output_colour_type		8659759	3					
ANR	8659998	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8659999	Identifier	dp		8659759	0					
ANR	8660000	Identifier	output_colour_type		8659759	1					
ANR	8660001	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "") with bit depth: "" )"	6605:9:206595:206660	8659759	4	True				
ANR	8660002	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "") with bit depth: "" )"		8659759	0		=			
ANR	8660003	Identifier	pos		8659759	0					
ANR	8660004	CallExpression	"safecat ( message , sizeof message , pos , "") with bit depth: "" )"		8659759	1					
ANR	8660005	Callee	safecat		8659759	0					
ANR	8660006	Identifier	safecat		8659759	0					
ANR	8660007	ArgumentList	message		8659759	1					
ANR	8660008	Argument	message		8659759	0					
ANR	8660009	Identifier	message		8659759	0					
ANR	8660010	Argument	sizeof message		8659759	1					
ANR	8660011	SizeofExpression	sizeof message		8659759	0					
ANR	8660012	Sizeof	sizeof		8659759	0					
ANR	8660013	Identifier	message		8659759	1					
ANR	8660014	Argument	pos		8659759	2					
ANR	8660015	Identifier	pos		8659759	0					
ANR	8660016	Argument	""") with bit depth: """		8659759	3					
ANR	8660017	PrimaryExpression	""") with bit depth: """		8659759	0					
ANR	8660018	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"	6606:9:206671:206737	8659759	5	True				
ANR	8660019	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"		8659759	0		=			
ANR	8660020	Identifier	pos		8659759	0					
ANR	8660021	CallExpression	"safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"		8659759	1					
ANR	8660022	Callee	safecatn		8659759	0					
ANR	8660023	Identifier	safecatn		8659759	0					
ANR	8660024	ArgumentList	message		8659759	1					
ANR	8660025	Argument	message		8659759	0					
ANR	8660026	Identifier	message		8659759	0					
ANR	8660027	Argument	sizeof message		8659759	1					
ANR	8660028	SizeofExpression	sizeof message		8659759	0					
ANR	8660029	Sizeof	sizeof		8659759	0					
ANR	8660030	Identifier	message		8659759	1					
ANR	8660031	Argument	pos		8659759	2					
ANR	8660032	Identifier	pos		8659759	0					
ANR	8660033	Argument	dp -> output_bit_depth		8659759	3					
ANR	8660034	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8660035	Identifier	dp		8659759	0					
ANR	8660036	Identifier	output_bit_depth		8659759	1					
ANR	8660037	ExpressionStatement	"png_error ( pp , message )"	6608:9:206749:206771	8659759	6	True				
ANR	8660038	CallExpression	"png_error ( pp , message )"		8659759	0					
ANR	8660039	Callee	png_error		8659759	0					
ANR	8660040	Identifier	png_error		8659759	0					
ANR	8660041	ArgumentList	pp		8659759	1					
ANR	8660042	Argument	pp		8659759	0					
ANR	8660043	Identifier	pp		8659759	0					
ANR	8660044	Argument	message		8659759	1					
ANR	8660045	Identifier	message		8659759	0					
ANR	8660046	CompoundStatement		70:6:2350:2372	8659759	8					
ANR	8660047	IdentifierDeclStatement	image_pixel test_pixel ;	6617:6:206997:207019	8659759	0	True				
ANR	8660048	IdentifierDecl	test_pixel		8659759	0					
ANR	8660049	IdentifierDeclType	image_pixel		8659759	0					
ANR	8660050	Identifier	test_pixel		8659759	1					
ANR	8660051	ExpressionStatement	"memset ( & test_pixel , 0 , sizeof test_pixel )"	6619:6:207028:207069	8659759	1	True				
ANR	8660052	CallExpression	"memset ( & test_pixel , 0 , sizeof test_pixel )"		8659759	0					
ANR	8660053	Callee	memset		8659759	0					
ANR	8660054	Identifier	memset		8659759	0					
ANR	8660055	ArgumentList	& test_pixel		8659759	1					
ANR	8660056	Argument	& test_pixel		8659759	0					
ANR	8660057	UnaryOperationExpression	& test_pixel		8659759	0					
ANR	8660058	UnaryOperator	&		8659759	0					
ANR	8660059	Identifier	test_pixel		8659759	1					
ANR	8660060	Argument	0		8659759	1					
ANR	8660061	PrimaryExpression	0		8659759	0					
ANR	8660062	Argument	sizeof test_pixel		8659759	2					
ANR	8660063	SizeofExpression	sizeof test_pixel		8659759	0					
ANR	8660064	Sizeof	sizeof		8659759	0					
ANR	8660065	Identifier	test_pixel		8659759	1					
ANR	8660066	ExpressionStatement	test_pixel . colour_type = dp -> this . colour_type	6620:6:207077:207122	8659759	2	True				
ANR	8660067	AssignmentExpression	test_pixel . colour_type = dp -> this . colour_type		8659759	0		=			
ANR	8660068	MemberAccess	test_pixel . colour_type		8659759	0					
ANR	8660069	Identifier	test_pixel		8659759	0					
ANR	8660070	Identifier	colour_type		8659759	1					
ANR	8660071	MemberAccess	dp -> this . colour_type		8659759	1					
ANR	8660072	PtrMemberAccess	dp -> this		8659759	0					
ANR	8660073	Identifier	dp		8659759	0					
ANR	8660074	Identifier	this		8659759	1					
ANR	8660075	Identifier	colour_type		8659759	1					
ANR	8660076	ExpressionStatement	test_pixel . bit_depth = dp -> this . bit_depth	6621:6:207142:207183	8659759	3	True				
ANR	8660077	AssignmentExpression	test_pixel . bit_depth = dp -> this . bit_depth		8659759	0		=			
ANR	8660078	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660079	Identifier	test_pixel		8659759	0					
ANR	8660080	Identifier	bit_depth		8659759	1					
ANR	8660081	MemberAccess	dp -> this . bit_depth		8659759	1					
ANR	8660082	PtrMemberAccess	dp -> this		8659759	0					
ANR	8660083	Identifier	dp		8659759	0					
ANR	8660084	Identifier	this		8659759	1					
ANR	8660085	Identifier	bit_depth		8659759	1					
ANR	8660086	IfStatement	if ( test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE )		8659759	4					
ANR	8660087	Condition	test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE	6622:10:207195:207242	8659759	0	True				
ANR	8660088	EqualityExpression	test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE		8659759	0		==			
ANR	8660089	MemberAccess	test_pixel . colour_type		8659759	0					
ANR	8660090	Identifier	test_pixel		8659759	0					
ANR	8660091	Identifier	colour_type		8659759	1					
ANR	8660092	Identifier	PNG_COLOR_TYPE_PALETTE		8659759	1					
ANR	8660093	ExpressionStatement	test_pixel . sample_depth = 8	6623:9:207254:207281	8659759	1	True				
ANR	8660094	AssignmentExpression	test_pixel . sample_depth = 8		8659759	0		=			
ANR	8660095	MemberAccess	test_pixel . sample_depth		8659759	0					
ANR	8660096	Identifier	test_pixel		8659759	0					
ANR	8660097	Identifier	sample_depth		8659759	1					
ANR	8660098	PrimaryExpression	8		8659759	1					
ANR	8660099	ElseStatement	else		8659759	0					
ANR	8660100	ExpressionStatement	test_pixel . sample_depth = test_pixel . bit_depth	6625:9:207303:207349	8659759	0	True				
ANR	8660101	AssignmentExpression	test_pixel . sample_depth = test_pixel . bit_depth		8659759	0		=			
ANR	8660102	MemberAccess	test_pixel . sample_depth		8659759	0					
ANR	8660103	Identifier	test_pixel		8659759	0					
ANR	8660104	Identifier	sample_depth		8659759	1					
ANR	8660105	MemberAccess	test_pixel . bit_depth		8659759	1					
ANR	8660106	Identifier	test_pixel		8659759	0					
ANR	8660107	Identifier	bit_depth		8659759	1					
ANR	8660108	ExpressionStatement	test_pixel . have_tRNS = dp -> this . is_transparent != 0	6629:6:207469:207520	8659759	5	True				
ANR	8660109	AssignmentExpression	test_pixel . have_tRNS = dp -> this . is_transparent != 0		8659759	0		=			
ANR	8660110	MemberAccess	test_pixel . have_tRNS		8659759	0					
ANR	8660111	Identifier	test_pixel		8659759	0					
ANR	8660112	Identifier	have_tRNS		8659759	1					
ANR	8660113	EqualityExpression	dp -> this . is_transparent != 0		8659759	1		!=			
ANR	8660114	MemberAccess	dp -> this . is_transparent		8659759	0					
ANR	8660115	PtrMemberAccess	dp -> this		8659759	0					
ANR	8660116	Identifier	dp		8659759	0					
ANR	8660117	Identifier	this		8659759	1					
ANR	8660118	Identifier	is_transparent		8659759	1					
ANR	8660119	PrimaryExpression	0		8659759	1					
ANR	8660120	ExpressionStatement	test_pixel . red_sBIT = test_pixel . green_sBIT = test_pixel . blue_sBIT = test_pixel . alpha_sBIT = test_pixel . sample_depth	6630:6:207528:207653	8659759	6	True				
ANR	8660121	AssignmentExpression	test_pixel . red_sBIT = test_pixel . green_sBIT = test_pixel . blue_sBIT = test_pixel . alpha_sBIT = test_pixel . sample_depth		8659759	0		=			
ANR	8660122	MemberAccess	test_pixel . red_sBIT		8659759	0					
ANR	8660123	Identifier	test_pixel		8659759	0					
ANR	8660124	Identifier	red_sBIT		8659759	1					
ANR	8660125	AssignmentExpression	test_pixel . green_sBIT = test_pixel . blue_sBIT = test_pixel . alpha_sBIT = test_pixel . sample_depth		8659759	1		=			
ANR	8660126	MemberAccess	test_pixel . green_sBIT		8659759	0					
ANR	8660127	Identifier	test_pixel		8659759	0					
ANR	8660128	Identifier	green_sBIT		8659759	1					
ANR	8660129	AssignmentExpression	test_pixel . blue_sBIT = test_pixel . alpha_sBIT = test_pixel . sample_depth		8659759	1		=			
ANR	8660130	MemberAccess	test_pixel . blue_sBIT		8659759	0					
ANR	8660131	Identifier	test_pixel		8659759	0					
ANR	8660132	Identifier	blue_sBIT		8659759	1					
ANR	8660133	AssignmentExpression	test_pixel . alpha_sBIT = test_pixel . sample_depth		8659759	1		=			
ANR	8660134	MemberAccess	test_pixel . alpha_sBIT		8659759	0					
ANR	8660135	Identifier	test_pixel		8659759	0					
ANR	8660136	Identifier	alpha_sBIT		8659759	1					
ANR	8660137	MemberAccess	test_pixel . sample_depth		8659759	1					
ANR	8660138	Identifier	test_pixel		8659759	0					
ANR	8660139	Identifier	sample_depth		8659759	1					
ANR	8660140	ExpressionStatement	"dp -> transform_list -> mod ( dp -> transform_list , & test_pixel , pp , dp )"	6633:6:207662:207726	8659759	7	True				
ANR	8660141	CallExpression	"dp -> transform_list -> mod ( dp -> transform_list , & test_pixel , pp , dp )"		8659759	0					
ANR	8660142	Callee	dp -> transform_list -> mod		8659759	0					
ANR	8660143	PtrMemberAccess	dp -> transform_list -> mod		8659759	0					
ANR	8660144	PtrMemberAccess	dp -> transform_list		8659759	0					
ANR	8660145	Identifier	dp		8659759	0					
ANR	8660146	Identifier	transform_list		8659759	1					
ANR	8660147	Identifier	mod		8659759	1					
ANR	8660148	ArgumentList	dp -> transform_list		8659759	1					
ANR	8660149	Argument	dp -> transform_list		8659759	0					
ANR	8660150	PtrMemberAccess	dp -> transform_list		8659759	0					
ANR	8660151	Identifier	dp		8659759	0					
ANR	8660152	Identifier	transform_list		8659759	1					
ANR	8660153	Argument	& test_pixel		8659759	1					
ANR	8660154	UnaryOperationExpression	& test_pixel		8659759	0					
ANR	8660155	UnaryOperator	&		8659759	0					
ANR	8660156	Identifier	test_pixel		8659759	1					
ANR	8660157	Argument	pp		8659759	2					
ANR	8660158	Identifier	pp		8659759	0					
ANR	8660159	Argument	dp		8659759	3					
ANR	8660160	Identifier	dp		8659759	0					
ANR	8660161	IfStatement	if ( test_pixel . colour_type != dp -> output_colour_type )		8659759	8					
ANR	8660162	Condition	test_pixel . colour_type != dp -> output_colour_type	6635:10:207739:207786	8659759	0	True				
ANR	8660163	EqualityExpression	test_pixel . colour_type != dp -> output_colour_type		8659759	0		!=			
ANR	8660164	MemberAccess	test_pixel . colour_type		8659759	0					
ANR	8660165	Identifier	test_pixel		8659759	0					
ANR	8660166	Identifier	colour_type		8659759	1					
ANR	8660167	PtrMemberAccess	dp -> output_colour_type		8659759	1					
ANR	8660168	Identifier	dp		8659759	0					
ANR	8660169	Identifier	output_colour_type		8659759	1					
ANR	8660170	CompoundStatement		91:9:3187:3251	8659759	1					
ANR	8660171	IdentifierDeclStatement	char message [ 128 ] ;	6637:9:207806:207823	8659759	0	True				
ANR	8660172	IdentifierDecl	message [ 128 ]		8659759	0					
ANR	8660173	IdentifierDeclType	char [ 128 ]		8659759	0					
ANR	8660174	Identifier	message		8659759	1					
ANR	8660175	PrimaryExpression	128		8659759	2					
ANR	8660176	IdentifierDeclStatement	"size_t pos = safecat ( message , sizeof message , 0 , ""colour type "" ) ;"	6638:9:207834:207898	8659759	1	True				
ANR	8660177	IdentifierDecl	"pos = safecat ( message , sizeof message , 0 , ""colour type "" )"		8659759	0					
ANR	8660178	IdentifierDeclType	size_t		8659759	0					
ANR	8660179	Identifier	pos		8659759	1					
ANR	8660180	AssignmentExpression	"pos = safecat ( message , sizeof message , 0 , ""colour type "" )"		8659759	2		=			
ANR	8660181	Identifier	pos		8659759	0					
ANR	8660182	CallExpression	"safecat ( message , sizeof message , 0 , ""colour type "" )"		8659759	1					
ANR	8660183	Callee	safecat		8659759	0					
ANR	8660184	Identifier	safecat		8659759	0					
ANR	8660185	ArgumentList	message		8659759	1					
ANR	8660186	Argument	message		8659759	0					
ANR	8660187	Identifier	message		8659759	0					
ANR	8660188	Argument	sizeof message		8659759	1					
ANR	8660189	SizeofExpression	sizeof message		8659759	0					
ANR	8660190	Sizeof	sizeof		8659759	0					
ANR	8660191	Identifier	message		8659759	1					
ANR	8660192	Argument	0		8659759	2					
ANR	8660193	PrimaryExpression	0		8659759	0					
ANR	8660194	Argument	"""colour type """		8659759	3					
ANR	8660195	PrimaryExpression	"""colour type """		8659759	0					
ANR	8660196	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , dp -> output_colour_type )"	6640:9:207910:207978	8659759	2	True				
ANR	8660197	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , dp -> output_colour_type )"		8659759	0		=			
ANR	8660198	Identifier	pos		8659759	0					
ANR	8660199	CallExpression	"safecatn ( message , sizeof message , pos , dp -> output_colour_type )"		8659759	1					
ANR	8660200	Callee	safecatn		8659759	0					
ANR	8660201	Identifier	safecatn		8659759	0					
ANR	8660202	ArgumentList	message		8659759	1					
ANR	8660203	Argument	message		8659759	0					
ANR	8660204	Identifier	message		8659759	0					
ANR	8660205	Argument	sizeof message		8659759	1					
ANR	8660206	SizeofExpression	sizeof message		8659759	0					
ANR	8660207	Sizeof	sizeof		8659759	0					
ANR	8660208	Identifier	message		8659759	1					
ANR	8660209	Argument	pos		8659759	2					
ANR	8660210	Identifier	pos		8659759	0					
ANR	8660211	Argument	dp -> output_colour_type		8659759	3					
ANR	8660212	PtrMemberAccess	dp -> output_colour_type		8659759	0					
ANR	8660213	Identifier	dp		8659759	0					
ANR	8660214	Identifier	output_colour_type		8659759	1					
ANR	8660215	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" expected "" )"	6641:9:207989:208046	8659759	3	True				
ANR	8660216	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" expected "" )"		8659759	0		=			
ANR	8660217	Identifier	pos		8659759	0					
ANR	8660218	CallExpression	"safecat ( message , sizeof message , pos , "" expected "" )"		8659759	1					
ANR	8660219	Callee	safecat		8659759	0					
ANR	8660220	Identifier	safecat		8659759	0					
ANR	8660221	ArgumentList	message		8659759	1					
ANR	8660222	Argument	message		8659759	0					
ANR	8660223	Identifier	message		8659759	0					
ANR	8660224	Argument	sizeof message		8659759	1					
ANR	8660225	SizeofExpression	sizeof message		8659759	0					
ANR	8660226	Sizeof	sizeof		8659759	0					
ANR	8660227	Identifier	message		8659759	1					
ANR	8660228	Argument	pos		8659759	2					
ANR	8660229	Identifier	pos		8659759	0					
ANR	8660230	Argument	""" expected """		8659759	3					
ANR	8660231	PrimaryExpression	""" expected """		8659759	0					
ANR	8660232	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , test_pixel . colour_type )"	6642:9:208057:208125	8659759	4	True				
ANR	8660233	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , test_pixel . colour_type )"		8659759	0		=			
ANR	8660234	Identifier	pos		8659759	0					
ANR	8660235	CallExpression	"safecatn ( message , sizeof message , pos , test_pixel . colour_type )"		8659759	1					
ANR	8660236	Callee	safecatn		8659759	0					
ANR	8660237	Identifier	safecatn		8659759	0					
ANR	8660238	ArgumentList	message		8659759	1					
ANR	8660239	Argument	message		8659759	0					
ANR	8660240	Identifier	message		8659759	0					
ANR	8660241	Argument	sizeof message		8659759	1					
ANR	8660242	SizeofExpression	sizeof message		8659759	0					
ANR	8660243	Sizeof	sizeof		8659759	0					
ANR	8660244	Identifier	message		8659759	1					
ANR	8660245	Argument	pos		8659759	2					
ANR	8660246	Identifier	pos		8659759	0					
ANR	8660247	Argument	test_pixel . colour_type		8659759	3					
ANR	8660248	MemberAccess	test_pixel . colour_type		8659759	0					
ANR	8660249	Identifier	test_pixel		8659759	0					
ANR	8660250	Identifier	colour_type		8659759	1					
ANR	8660251	ExpressionStatement	"png_error ( pp , message )"	6644:9:208137:208159	8659759	5	True				
ANR	8660252	CallExpression	"png_error ( pp , message )"		8659759	0					
ANR	8660253	Callee	png_error		8659759	0					
ANR	8660254	Identifier	png_error		8659759	0					
ANR	8660255	ArgumentList	pp		8659759	1					
ANR	8660256	Argument	pp		8659759	0					
ANR	8660257	Identifier	pp		8659759	0					
ANR	8660258	Argument	message		8659759	1					
ANR	8660259	Identifier	message		8659759	0					
ANR	8660260	IfStatement	if ( test_pixel . bit_depth != dp -> output_bit_depth )		8659759	9					
ANR	8660261	Condition	test_pixel . bit_depth != dp -> output_bit_depth	6647:10:208180:208223	8659759	0	True				
ANR	8660262	EqualityExpression	test_pixel . bit_depth != dp -> output_bit_depth		8659759	0		!=			
ANR	8660263	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660264	Identifier	test_pixel		8659759	0					
ANR	8660265	Identifier	bit_depth		8659759	1					
ANR	8660266	PtrMemberAccess	dp -> output_bit_depth		8659759	1					
ANR	8660267	Identifier	dp		8659759	0					
ANR	8660268	Identifier	output_bit_depth		8659759	1					
ANR	8660269	CompoundStatement		103:9:3624:3686	8659759	1					
ANR	8660270	IdentifierDeclStatement	char message [ 128 ] ;	6649:9:208243:208260	8659759	0	True				
ANR	8660271	IdentifierDecl	message [ 128 ]		8659759	0					
ANR	8660272	IdentifierDeclType	char [ 128 ]		8659759	0					
ANR	8660273	Identifier	message		8659759	1					
ANR	8660274	PrimaryExpression	128		8659759	2					
ANR	8660275	IdentifierDeclStatement	"size_t pos = safecat ( message , sizeof message , 0 , ""bit depth "" ) ;"	6650:9:208271:208333	8659759	1	True				
ANR	8660276	IdentifierDecl	"pos = safecat ( message , sizeof message , 0 , ""bit depth "" )"		8659759	0					
ANR	8660277	IdentifierDeclType	size_t		8659759	0					
ANR	8660278	Identifier	pos		8659759	1					
ANR	8660279	AssignmentExpression	"pos = safecat ( message , sizeof message , 0 , ""bit depth "" )"		8659759	2		=			
ANR	8660280	Identifier	pos		8659759	0					
ANR	8660281	CallExpression	"safecat ( message , sizeof message , 0 , ""bit depth "" )"		8659759	1					
ANR	8660282	Callee	safecat		8659759	0					
ANR	8660283	Identifier	safecat		8659759	0					
ANR	8660284	ArgumentList	message		8659759	1					
ANR	8660285	Argument	message		8659759	0					
ANR	8660286	Identifier	message		8659759	0					
ANR	8660287	Argument	sizeof message		8659759	1					
ANR	8660288	SizeofExpression	sizeof message		8659759	0					
ANR	8660289	Sizeof	sizeof		8659759	0					
ANR	8660290	Identifier	message		8659759	1					
ANR	8660291	Argument	0		8659759	2					
ANR	8660292	PrimaryExpression	0		8659759	0					
ANR	8660293	Argument	"""bit depth """		8659759	3					
ANR	8660294	PrimaryExpression	"""bit depth """		8659759	0					
ANR	8660295	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"	6652:9:208345:208411	8659759	2	True				
ANR	8660296	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"		8659759	0		=			
ANR	8660297	Identifier	pos		8659759	0					
ANR	8660298	CallExpression	"safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"		8659759	1					
ANR	8660299	Callee	safecatn		8659759	0					
ANR	8660300	Identifier	safecatn		8659759	0					
ANR	8660301	ArgumentList	message		8659759	1					
ANR	8660302	Argument	message		8659759	0					
ANR	8660303	Identifier	message		8659759	0					
ANR	8660304	Argument	sizeof message		8659759	1					
ANR	8660305	SizeofExpression	sizeof message		8659759	0					
ANR	8660306	Sizeof	sizeof		8659759	0					
ANR	8660307	Identifier	message		8659759	1					
ANR	8660308	Argument	pos		8659759	2					
ANR	8660309	Identifier	pos		8659759	0					
ANR	8660310	Argument	dp -> output_bit_depth		8659759	3					
ANR	8660311	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8660312	Identifier	dp		8659759	0					
ANR	8660313	Identifier	output_bit_depth		8659759	1					
ANR	8660314	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" expected "" )"	6653:9:208422:208479	8659759	3	True				
ANR	8660315	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" expected "" )"		8659759	0		=			
ANR	8660316	Identifier	pos		8659759	0					
ANR	8660317	CallExpression	"safecat ( message , sizeof message , pos , "" expected "" )"		8659759	1					
ANR	8660318	Callee	safecat		8659759	0					
ANR	8660319	Identifier	safecat		8659759	0					
ANR	8660320	ArgumentList	message		8659759	1					
ANR	8660321	Argument	message		8659759	0					
ANR	8660322	Identifier	message		8659759	0					
ANR	8660323	Argument	sizeof message		8659759	1					
ANR	8660324	SizeofExpression	sizeof message		8659759	0					
ANR	8660325	Sizeof	sizeof		8659759	0					
ANR	8660326	Identifier	message		8659759	1					
ANR	8660327	Argument	pos		8659759	2					
ANR	8660328	Identifier	pos		8659759	0					
ANR	8660329	Argument	""" expected """		8659759	3					
ANR	8660330	PrimaryExpression	""" expected """		8659759	0					
ANR	8660331	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"	6654:9:208490:208556	8659759	4	True				
ANR	8660332	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"		8659759	0		=			
ANR	8660333	Identifier	pos		8659759	0					
ANR	8660334	CallExpression	"safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"		8659759	1					
ANR	8660335	Callee	safecatn		8659759	0					
ANR	8660336	Identifier	safecatn		8659759	0					
ANR	8660337	ArgumentList	message		8659759	1					
ANR	8660338	Argument	message		8659759	0					
ANR	8660339	Identifier	message		8659759	0					
ANR	8660340	Argument	sizeof message		8659759	1					
ANR	8660341	SizeofExpression	sizeof message		8659759	0					
ANR	8660342	Sizeof	sizeof		8659759	0					
ANR	8660343	Identifier	message		8659759	1					
ANR	8660344	Argument	pos		8659759	2					
ANR	8660345	Identifier	pos		8659759	0					
ANR	8660346	Argument	test_pixel . bit_depth		8659759	3					
ANR	8660347	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660348	Identifier	test_pixel		8659759	0					
ANR	8660349	Identifier	bit_depth		8659759	1					
ANR	8660350	ExpressionStatement	"png_error ( pp , message )"	6656:9:208568:208590	8659759	5	True				
ANR	8660351	CallExpression	"png_error ( pp , message )"		8659759	0					
ANR	8660352	Callee	png_error		8659759	0					
ANR	8660353	Identifier	png_error		8659759	0					
ANR	8660354	ArgumentList	pp		8659759	1					
ANR	8660355	Argument	pp		8659759	0					
ANR	8660356	Identifier	pp		8659759	0					
ANR	8660357	Argument	message		8659759	1					
ANR	8660358	Identifier	message		8659759	0					
ANR	8660359	IfStatement	if ( test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE && test_pixel . sample_depth != 8 )		8659759	10					
ANR	8660360	Condition	test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE && test_pixel . sample_depth != 8	6661:10:208700:208789	8659759	0	True				
ANR	8660361	AndExpression	test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE && test_pixel . sample_depth != 8		8659759	0		&&			
ANR	8660362	EqualityExpression	test_pixel . colour_type == PNG_COLOR_TYPE_PALETTE		8659759	0		==			
ANR	8660363	MemberAccess	test_pixel . colour_type		8659759	0					
ANR	8660364	Identifier	test_pixel		8659759	0					
ANR	8660365	Identifier	colour_type		8659759	1					
ANR	8660366	Identifier	PNG_COLOR_TYPE_PALETTE		8659759	1					
ANR	8660367	EqualityExpression	test_pixel . sample_depth != 8		8659759	1		!=			
ANR	8660368	MemberAccess	test_pixel . sample_depth		8659759	0					
ANR	8660369	Identifier	test_pixel		8659759	0					
ANR	8660370	Identifier	sample_depth		8659759	1					
ANR	8660371	PrimaryExpression	8		8659759	1					
ANR	8660372	ExpressionStatement	"png_error ( pp , ""pngvalid: internal: palette sample depth not 8"" )"	6663:9:208830:208893	8659759	1	True				
ANR	8660373	CallExpression	"png_error ( pp , ""pngvalid: internal: palette sample depth not 8"" )"		8659759	0					
ANR	8660374	Callee	png_error		8659759	0					
ANR	8660375	Identifier	png_error		8659759	0					
ANR	8660376	ArgumentList	pp		8659759	1					
ANR	8660377	Argument	pp		8659759	0					
ANR	8660378	Identifier	pp		8659759	0					
ANR	8660379	Argument	"""pngvalid: internal: palette sample depth not 8"""		8659759	1					
ANR	8660380	PrimaryExpression	"""pngvalid: internal: palette sample depth not 8"""		8659759	0					
ANR	8660381	ElseStatement	else		8659759	0					
ANR	8660382	IfStatement	if ( dp -> unpacked && test_pixel . bit_depth != 8 )		8659759	0					
ANR	8660383	Condition	dp -> unpacked && test_pixel . bit_depth != 8	6664:15:208910:208950	8659759	0	True				
ANR	8660384	AndExpression	dp -> unpacked && test_pixel . bit_depth != 8		8659759	0		&&			
ANR	8660385	PtrMemberAccess	dp -> unpacked		8659759	0					
ANR	8660386	Identifier	dp		8659759	0					
ANR	8660387	Identifier	unpacked		8659759	1					
ANR	8660388	EqualityExpression	test_pixel . bit_depth != 8		8659759	1		!=			
ANR	8660389	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660390	Identifier	test_pixel		8659759	0					
ANR	8660391	Identifier	bit_depth		8659759	1					
ANR	8660392	PrimaryExpression	8		8659759	1					
ANR	8660393	ExpressionStatement	"png_error ( pp , ""pngvalid: internal: bad unpacked pixel depth"" )"	6665:9:208962:209023	8659759	1	True				
ANR	8660394	CallExpression	"png_error ( pp , ""pngvalid: internal: bad unpacked pixel depth"" )"		8659759	0					
ANR	8660395	Callee	png_error		8659759	0					
ANR	8660396	Identifier	png_error		8659759	0					
ANR	8660397	ArgumentList	pp		8659759	1					
ANR	8660398	Argument	pp		8659759	0					
ANR	8660399	Identifier	pp		8659759	0					
ANR	8660400	Argument	"""pngvalid: internal: bad unpacked pixel depth"""		8659759	1					
ANR	8660401	PrimaryExpression	"""pngvalid: internal: bad unpacked pixel depth"""		8659759	0					
ANR	8660402	ElseStatement	else		8659759	0					
ANR	8660403	IfStatement	if ( ! dp -> unpacked && test_pixel . colour_type != PNG_COLOR_TYPE_PALETTE && test_pixel . bit_depth != test_pixel . sample_depth )		8659759	0					
ANR	8660404	Condition	! dp -> unpacked && test_pixel . colour_type != PNG_COLOR_TYPE_PALETTE && test_pixel . bit_depth != test_pixel . sample_depth	6666:15:209040:209169	8659759	0	True				
ANR	8660405	AndExpression	! dp -> unpacked && test_pixel . colour_type != PNG_COLOR_TYPE_PALETTE && test_pixel . bit_depth != test_pixel . sample_depth		8659759	0		&&			
ANR	8660406	UnaryOperationExpression	! dp -> unpacked		8659759	0					
ANR	8660407	UnaryOperator	!		8659759	0					
ANR	8660408	PtrMemberAccess	dp -> unpacked		8659759	1					
ANR	8660409	Identifier	dp		8659759	0					
ANR	8660410	Identifier	unpacked		8659759	1					
ANR	8660411	AndExpression	test_pixel . colour_type != PNG_COLOR_TYPE_PALETTE && test_pixel . bit_depth != test_pixel . sample_depth		8659759	1		&&			
ANR	8660412	EqualityExpression	test_pixel . colour_type != PNG_COLOR_TYPE_PALETTE		8659759	0		!=			
ANR	8660413	MemberAccess	test_pixel . colour_type		8659759	0					
ANR	8660414	Identifier	test_pixel		8659759	0					
ANR	8660415	Identifier	colour_type		8659759	1					
ANR	8660416	Identifier	PNG_COLOR_TYPE_PALETTE		8659759	1					
ANR	8660417	EqualityExpression	test_pixel . bit_depth != test_pixel . sample_depth		8659759	1		!=			
ANR	8660418	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660419	Identifier	test_pixel		8659759	0					
ANR	8660420	Identifier	bit_depth		8659759	1					
ANR	8660421	MemberAccess	test_pixel . sample_depth		8659759	1					
ANR	8660422	Identifier	test_pixel		8659759	0					
ANR	8660423	Identifier	sample_depth		8659759	1					
ANR	8660424	CompoundStatement		123:9:4570:4657	8659759	1					
ANR	8660425	IdentifierDeclStatement	char message [ 128 ] ;	6669:9:209189:209206	8659759	0	True				
ANR	8660426	IdentifierDecl	message [ 128 ]		8659759	0					
ANR	8660427	IdentifierDeclType	char [ 128 ]		8659759	0					
ANR	8660428	Identifier	message		8659759	1					
ANR	8660429	PrimaryExpression	128		8659759	2					
ANR	8660430	IdentifierDeclStatement	"size_t pos = safecat ( message , sizeof message , 0 , ""internal: sample depth "" ) ;"	6670:9:209217:209304	8659759	1	True				
ANR	8660431	IdentifierDecl	"pos = safecat ( message , sizeof message , 0 , ""internal: sample depth "" )"		8659759	0					
ANR	8660432	IdentifierDeclType	size_t		8659759	0					
ANR	8660433	Identifier	pos		8659759	1					
ANR	8660434	AssignmentExpression	"pos = safecat ( message , sizeof message , 0 , ""internal: sample depth "" )"		8659759	2		=			
ANR	8660435	Identifier	pos		8659759	0					
ANR	8660436	CallExpression	"safecat ( message , sizeof message , 0 , ""internal: sample depth "" )"		8659759	1					
ANR	8660437	Callee	safecat		8659759	0					
ANR	8660438	Identifier	safecat		8659759	0					
ANR	8660439	ArgumentList	message		8659759	1					
ANR	8660440	Argument	message		8659759	0					
ANR	8660441	Identifier	message		8659759	0					
ANR	8660442	Argument	sizeof message		8659759	1					
ANR	8660443	SizeofExpression	sizeof message		8659759	0					
ANR	8660444	Sizeof	sizeof		8659759	0					
ANR	8660445	Identifier	message		8659759	1					
ANR	8660446	Argument	0		8659759	2					
ANR	8660447	PrimaryExpression	0		8659759	0					
ANR	8660448	Argument	"""internal: sample depth """		8659759	3					
ANR	8660449	PrimaryExpression	"""internal: sample depth """		8659759	0					
ANR	8660450	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , test_pixel . sample_depth )"	6677:9:209509:209578	8659759	2	True				
ANR	8660451	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , test_pixel . sample_depth )"		8659759	0		=			
ANR	8660452	Identifier	pos		8659759	0					
ANR	8660453	CallExpression	"safecatn ( message , sizeof message , pos , test_pixel . sample_depth )"		8659759	1					
ANR	8660454	Callee	safecatn		8659759	0					
ANR	8660455	Identifier	safecatn		8659759	0					
ANR	8660456	ArgumentList	message		8659759	1					
ANR	8660457	Argument	message		8659759	0					
ANR	8660458	Identifier	message		8659759	0					
ANR	8660459	Argument	sizeof message		8659759	1					
ANR	8660460	SizeofExpression	sizeof message		8659759	0					
ANR	8660461	Sizeof	sizeof		8659759	0					
ANR	8660462	Identifier	message		8659759	1					
ANR	8660463	Argument	pos		8659759	2					
ANR	8660464	Identifier	pos		8659759	0					
ANR	8660465	Argument	test_pixel . sample_depth		8659759	3					
ANR	8660466	MemberAccess	test_pixel . sample_depth		8659759	0					
ANR	8660467	Identifier	test_pixel		8659759	0					
ANR	8660468	Identifier	sample_depth		8659759	1					
ANR	8660469	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" expected "" )"	6678:9:209589:209646	8659759	3	True				
ANR	8660470	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" expected "" )"		8659759	0		=			
ANR	8660471	Identifier	pos		8659759	0					
ANR	8660472	CallExpression	"safecat ( message , sizeof message , pos , "" expected "" )"		8659759	1					
ANR	8660473	Callee	safecat		8659759	0					
ANR	8660474	Identifier	safecat		8659759	0					
ANR	8660475	ArgumentList	message		8659759	1					
ANR	8660476	Argument	message		8659759	0					
ANR	8660477	Identifier	message		8659759	0					
ANR	8660478	Argument	sizeof message		8659759	1					
ANR	8660479	SizeofExpression	sizeof message		8659759	0					
ANR	8660480	Sizeof	sizeof		8659759	0					
ANR	8660481	Identifier	message		8659759	1					
ANR	8660482	Argument	pos		8659759	2					
ANR	8660483	Identifier	pos		8659759	0					
ANR	8660484	Argument	""" expected """		8659759	3					
ANR	8660485	PrimaryExpression	""" expected """		8659759	0					
ANR	8660486	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"	6679:9:209657:209723	8659759	4	True				
ANR	8660487	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"		8659759	0		=			
ANR	8660488	Identifier	pos		8659759	0					
ANR	8660489	CallExpression	"safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"		8659759	1					
ANR	8660490	Callee	safecatn		8659759	0					
ANR	8660491	Identifier	safecatn		8659759	0					
ANR	8660492	ArgumentList	message		8659759	1					
ANR	8660493	Argument	message		8659759	0					
ANR	8660494	Identifier	message		8659759	0					
ANR	8660495	Argument	sizeof message		8659759	1					
ANR	8660496	SizeofExpression	sizeof message		8659759	0					
ANR	8660497	Sizeof	sizeof		8659759	0					
ANR	8660498	Identifier	message		8659759	1					
ANR	8660499	Argument	pos		8659759	2					
ANR	8660500	Identifier	pos		8659759	0					
ANR	8660501	Argument	test_pixel . bit_depth		8659759	3					
ANR	8660502	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660503	Identifier	test_pixel		8659759	0					
ANR	8660504	Identifier	bit_depth		8659759	1					
ANR	8660505	ExpressionStatement	"png_error ( pp , message )"	6681:9:209735:209757	8659759	5	True				
ANR	8660506	CallExpression	"png_error ( pp , message )"		8659759	0					
ANR	8660507	Callee	png_error		8659759	0					
ANR	8660508	Identifier	png_error		8659759	0					
ANR	8660509	ArgumentList	pp		8659759	1					
ANR	8660510	Argument	pp		8659759	0					
ANR	8660511	Identifier	pp		8659759	0					
ANR	8660512	Argument	message		8659759	1					
ANR	8660513	Identifier	message		8659759	0					
ANR	8660514	ElseStatement	else		8659759	0					
ANR	8660515	IfStatement	if ( test_pixel . bit_depth != dp -> output_bit_depth )		8659759	0					
ANR	8660516	Condition	test_pixel . bit_depth != dp -> output_bit_depth	6683:15:209782:209825	8659759	0	True				
ANR	8660517	EqualityExpression	test_pixel . bit_depth != dp -> output_bit_depth		8659759	0		!=			
ANR	8660518	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660519	Identifier	test_pixel		8659759	0					
ANR	8660520	Identifier	bit_depth		8659759	1					
ANR	8660521	PtrMemberAccess	dp -> output_bit_depth		8659759	1					
ANR	8660522	Identifier	dp		8659759	0					
ANR	8660523	Identifier	output_bit_depth		8659759	1					
ANR	8660524	CompoundStatement		142:9:5362:5446	8659759	1					
ANR	8660525	IdentifierDeclStatement	char message [ 128 ] ;	6688:9:209981:209998	8659759	0	True				
ANR	8660526	IdentifierDecl	message [ 128 ]		8659759	0					
ANR	8660527	IdentifierDeclType	char [ 128 ]		8659759	0					
ANR	8660528	Identifier	message		8659759	1					
ANR	8660529	PrimaryExpression	128		8659759	2					
ANR	8660530	IdentifierDeclStatement	"size_t pos = safecat ( message , sizeof message , 0 , ""internal: bit depth "" ) ;"	6689:9:210009:210093	8659759	1	True				
ANR	8660531	IdentifierDecl	"pos = safecat ( message , sizeof message , 0 , ""internal: bit depth "" )"		8659759	0					
ANR	8660532	IdentifierDeclType	size_t		8659759	0					
ANR	8660533	Identifier	pos		8659759	1					
ANR	8660534	AssignmentExpression	"pos = safecat ( message , sizeof message , 0 , ""internal: bit depth "" )"		8659759	2		=			
ANR	8660535	Identifier	pos		8659759	0					
ANR	8660536	CallExpression	"safecat ( message , sizeof message , 0 , ""internal: bit depth "" )"		8659759	1					
ANR	8660537	Callee	safecat		8659759	0					
ANR	8660538	Identifier	safecat		8659759	0					
ANR	8660539	ArgumentList	message		8659759	1					
ANR	8660540	Argument	message		8659759	0					
ANR	8660541	Identifier	message		8659759	0					
ANR	8660542	Argument	sizeof message		8659759	1					
ANR	8660543	SizeofExpression	sizeof message		8659759	0					
ANR	8660544	Sizeof	sizeof		8659759	0					
ANR	8660545	Identifier	message		8659759	1					
ANR	8660546	Argument	0		8659759	2					
ANR	8660547	PrimaryExpression	0		8659759	0					
ANR	8660548	Argument	"""internal: bit depth """		8659759	3					
ANR	8660549	PrimaryExpression	"""internal: bit depth """		8659759	0					
ANR	8660550	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"	6692:9:210105:210171	8659759	2	True				
ANR	8660551	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"		8659759	0		=			
ANR	8660552	Identifier	pos		8659759	0					
ANR	8660553	CallExpression	"safecatn ( message , sizeof message , pos , dp -> output_bit_depth )"		8659759	1					
ANR	8660554	Callee	safecatn		8659759	0					
ANR	8660555	Identifier	safecatn		8659759	0					
ANR	8660556	ArgumentList	message		8659759	1					
ANR	8660557	Argument	message		8659759	0					
ANR	8660558	Identifier	message		8659759	0					
ANR	8660559	Argument	sizeof message		8659759	1					
ANR	8660560	SizeofExpression	sizeof message		8659759	0					
ANR	8660561	Sizeof	sizeof		8659759	0					
ANR	8660562	Identifier	message		8659759	1					
ANR	8660563	Argument	pos		8659759	2					
ANR	8660564	Identifier	pos		8659759	0					
ANR	8660565	Argument	dp -> output_bit_depth		8659759	3					
ANR	8660566	PtrMemberAccess	dp -> output_bit_depth		8659759	0					
ANR	8660567	Identifier	dp		8659759	0					
ANR	8660568	Identifier	output_bit_depth		8659759	1					
ANR	8660569	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" expected "" )"	6693:9:210182:210239	8659759	3	True				
ANR	8660570	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" expected "" )"		8659759	0		=			
ANR	8660571	Identifier	pos		8659759	0					
ANR	8660572	CallExpression	"safecat ( message , sizeof message , pos , "" expected "" )"		8659759	1					
ANR	8660573	Callee	safecat		8659759	0					
ANR	8660574	Identifier	safecat		8659759	0					
ANR	8660575	ArgumentList	message		8659759	1					
ANR	8660576	Argument	message		8659759	0					
ANR	8660577	Identifier	message		8659759	0					
ANR	8660578	Argument	sizeof message		8659759	1					
ANR	8660579	SizeofExpression	sizeof message		8659759	0					
ANR	8660580	Sizeof	sizeof		8659759	0					
ANR	8660581	Identifier	message		8659759	1					
ANR	8660582	Argument	pos		8659759	2					
ANR	8660583	Identifier	pos		8659759	0					
ANR	8660584	Argument	""" expected """		8659759	3					
ANR	8660585	PrimaryExpression	""" expected """		8659759	0					
ANR	8660586	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"	6694:9:210250:210316	8659759	4	True				
ANR	8660587	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"		8659759	0		=			
ANR	8660588	Identifier	pos		8659759	0					
ANR	8660589	CallExpression	"safecatn ( message , sizeof message , pos , test_pixel . bit_depth )"		8659759	1					
ANR	8660590	Callee	safecatn		8659759	0					
ANR	8660591	Identifier	safecatn		8659759	0					
ANR	8660592	ArgumentList	message		8659759	1					
ANR	8660593	Argument	message		8659759	0					
ANR	8660594	Identifier	message		8659759	0					
ANR	8660595	Argument	sizeof message		8659759	1					
ANR	8660596	SizeofExpression	sizeof message		8659759	0					
ANR	8660597	Sizeof	sizeof		8659759	0					
ANR	8660598	Identifier	message		8659759	1					
ANR	8660599	Argument	pos		8659759	2					
ANR	8660600	Identifier	pos		8659759	0					
ANR	8660601	Argument	test_pixel . bit_depth		8659759	3					
ANR	8660602	MemberAccess	test_pixel . bit_depth		8659759	0					
ANR	8660603	Identifier	test_pixel		8659759	0					
ANR	8660604	Identifier	bit_depth		8659759	1					
ANR	8660605	ExpressionStatement	"png_error ( pp , message )"	6696:9:210328:210350	8659759	5	True				
ANR	8660606	CallExpression	"png_error ( pp , message )"		8659759	0					
ANR	8660607	Callee	png_error		8659759	0					
ANR	8660608	Identifier	png_error		8659759	0					
ANR	8660609	ArgumentList	pp		8659759	1					
ANR	8660610	Argument	pp		8659759	0					
ANR	8660611	Identifier	pp		8659759	0					
ANR	8660612	Argument	message		8659759	1					
ANR	8660613	Identifier	message		8659759	0					
ANR	8660614	ReturnType	static void		8659759	1					
ANR	8660615	Identifier	transform_info_imp		8659759	2					
ANR	8660616	ParameterList	"transform_display * dp , png_structp pp , png_infop pi"		8659759	3					
ANR	8660617	Parameter	transform_display * dp	6547:19:204593:204613	8659759	0	True				
ANR	8660618	ParameterType	transform_display *		8659759	0					
ANR	8660619	Identifier	dp		8659759	1					
ANR	8660620	Parameter	png_structp pp	6547:42:204616:204629	8659759	1	True				
ANR	8660621	ParameterType	png_structp		8659759	0					
ANR	8660622	Identifier	pp		8659759	1					
ANR	8660623	Parameter	png_infop pi	6547:58:204632:204643	8659759	2	True				
ANR	8660624	ParameterType	png_infop		8659759	0					
ANR	8660625	Identifier	pi		8659759	1					
ANR	8660626	CFGEntryNode	ENTRY		8659759		True				
ANR	8660627	CFGExitNode	EXIT		8659759		True				
ANR	8660628	Symbol	pp		8659759						
ANR	8660629	Symbol	PNG_COLOR_TYPE_RGB		8659759						
ANR	8660630	Symbol	dp -> this . bit_depth		8659759						
ANR	8660631	Symbol	PNG_COLOR_TYPE_GRAY		8659759						
ANR	8660632	Symbol	safecatn		8659759						
ANR	8660633	Symbol	dp -> this . colour_type		8659759						
ANR	8660634	Symbol	dp		8659759						
ANR	8660635	Symbol	dp -> output_colour_type		8659759						
ANR	8660636	Symbol	dp -> output_bit_depth		8659759						
ANR	8660637	Symbol	dp -> this . filler		8659759						
ANR	8660638	Symbol	* dp		8659759						
ANR	8660639	Symbol	test_pixel . green_sBIT		8659759						
ANR	8660640	Symbol	pos		8659759						
ANR	8660641	Symbol	safecat		8659759						
ANR	8660642	Symbol	test_pixel . blue_sBIT		8659759						
ANR	8660643	Symbol	dp -> this		8659759						
ANR	8660644	Symbol	test_pixel . colour_type		8659759						
ANR	8660645	Symbol	test_pixel		8659759						
ANR	8660646	Symbol	dp -> this . use_update_info		8659759						
ANR	8660647	Symbol	png_get_color_type		8659759						
ANR	8660648	Symbol	png_get_bit_depth		8659759						
ANR	8660649	Symbol	test_pixel . have_tRNS		8659759						
ANR	8660650	Symbol	test_pixel . red_sBIT		8659759						
ANR	8660651	Symbol	i		8659759						
ANR	8660652	Symbol	& dp -> this		8659759						
ANR	8660653	Symbol	dp -> this . is_transparent		8659759						
ANR	8660654	Symbol	message		8659759						
ANR	8660655	Symbol	dp -> transform_list		8659759						
ANR	8660656	Symbol	test_pixel . alpha_sBIT		8659759						
ANR	8660657	Symbol	test_pixel . bit_depth		8659759						
ANR	8660658	Symbol	pi		8659759						
ANR	8660659	Symbol	dp -> unpacked		8659759						
ANR	8660660	Symbol	& test_pixel		8659759						
ANR	8660661	Symbol	PNG_COLOR_TYPE_PALETTE		8659759						
ANR	8660662	Symbol	test_pixel . sample_depth		8659759						
ANR	8660663	Function	transform_info	6701:0:210368:210532							
ANR	8660664	FunctionDef	"transform_info (png_structp pp , png_infop pi)"		8660663	0					
ANR	8660665	CompoundStatement		6703:0:210434:210532	8660663	0					
ANR	8660666	Statement	transform_info_imp	6704:3:210439:210456	8660663	0	True				
ANR	8660667	Statement	(	6704:21:210457:210457	8660663	1	True				
ANR	8660668	Statement	voidcast	6704:22:210458:210465	8660663	2	True				
ANR	8660669	Statement	(	6704:30:210466:210466	8660663	3	True				
ANR	8660670	Statement	transform_display	6704:31:210467:210483	8660663	4	True				
ANR	8660671	Statement	*	6704:48:210484:210484	8660663	5	True				
ANR	8660672	Statement	","	6704:49:210485:210485	8660663	6	True				
ANR	8660673	Statement	png_get_progressive_ptr	6704:51:210487:210509	8660663	7	True				
ANR	8660674	Statement	(	6704:74:210510:210510	8660663	8	True				
ANR	8660675	Statement	pp	6704:75:210511:210512	8660663	9	True				
ANR	8660676	Statement	)	6704:77:210513:210513	8660663	10	True				
ANR	8660677	Statement	)	6704:78:210514:210514	8660663	11	True				
ANR	8660678	Statement	","	6704:79:210515:210515	8660663	12	True				
ANR	8660679	Statement	pp	6705:6:210523:210524	8660663	13	True				
ANR	8660680	Statement	","	6705:8:210525:210525	8660663	14	True				
ANR	8660681	Statement	pi	6705:10:210527:210528	8660663	15	True				
ANR	8660682	Statement	)	6705:12:210529:210529	8660663	16	True				
ANR	8660683	ExpressionStatement		6705:13:210530:210530	8660663	17	True				
ANR	8660684	ReturnType	static void PNGCBAPI		8660663	1					
ANR	8660685	Identifier	transform_info		8660663	2					
ANR	8660686	ParameterList	"png_structp pp , png_infop pi"		8660663	3					
ANR	8660687	Parameter	png_structp pp	6702:15:210404:210417	8660663	0	True				
ANR	8660688	ParameterType	png_structp		8660663	0					
ANR	8660689	Identifier	pp		8660663	1					
ANR	8660690	Parameter	png_infop pi	6702:31:210420:210431	8660663	1	True				
ANR	8660691	ParameterType	png_infop		8660663	0					
ANR	8660692	Identifier	pi		8660663	1					
ANR	8660693	CFGEntryNode	ENTRY		8660663		True				
ANR	8660694	CFGExitNode	EXIT		8660663		True				
ANR	8660695	Symbol	pp		8660663						
ANR	8660696	Symbol	pi		8660663						
ANR	8660697	Function	transform_range_check	6708:0:210535:212593							
ANR	8660698	FunctionDef	"transform_range_check (png_const_structp pp , unsigned int r , unsigned int g , unsigned int b , unsigned int a , unsigned int in_digitized , double in , unsigned int out , png_byte sample_depth , double err , double limit , const char * name , double digitization_error)"		8660697	0					
ANR	8660699	CompoundStatement		6713:0:210814:212593	8660697	0					
ANR	8660700	IdentifierDeclStatement	unsigned int max = ( 1U << sample_depth ) - 1 ;	6720:3:211181:211220	8660697	0	True				
ANR	8660701	IdentifierDecl	max = ( 1U << sample_depth ) - 1		8660697	0					
ANR	8660702	IdentifierDeclType	unsigned int		8660697	0					
ANR	8660703	Identifier	max		8660697	1					
ANR	8660704	AssignmentExpression	max = ( 1U << sample_depth ) - 1		8660697	2		=			
ANR	8660705	Identifier	max		8660697	0					
ANR	8660706	AdditiveExpression	( 1U << sample_depth ) - 1		8660697	1		-			
ANR	8660707	ShiftExpression	1U << sample_depth		8660697	0		<<			
ANR	8660708	PrimaryExpression	1U		8660697	0					
ANR	8660709	Identifier	sample_depth		8660697	1					
ANR	8660710	PrimaryExpression	1		8660697	1					
ANR	8660711	IdentifierDeclStatement	double in_min = ceil ( ( in - err ) * max - digitization_error ) ;	6721:3:211225:211280	8660697	1	True				
ANR	8660712	IdentifierDecl	in_min = ceil ( ( in - err ) * max - digitization_error )		8660697	0					
ANR	8660713	IdentifierDeclType	double		8660697	0					
ANR	8660714	Identifier	in_min		8660697	1					
ANR	8660715	AssignmentExpression	in_min = ceil ( ( in - err ) * max - digitization_error )		8660697	2		=			
ANR	8660716	Identifier	in_min		8660697	0					
ANR	8660717	CallExpression	ceil ( ( in - err ) * max - digitization_error )		8660697	1					
ANR	8660718	Callee	ceil		8660697	0					
ANR	8660719	Identifier	ceil		8660697	0					
ANR	8660720	ArgumentList	( in - err ) * max - digitization_error		8660697	1					
ANR	8660721	Argument	( in - err ) * max - digitization_error		8660697	0					
ANR	8660722	AdditiveExpression	( in - err ) * max - digitization_error		8660697	0		-			
ANR	8660723	MultiplicativeExpression	( in - err ) * max		8660697	0		*			
ANR	8660724	AdditiveExpression	in - err		8660697	0		-			
ANR	8660725	Identifier	in		8660697	0					
ANR	8660726	Identifier	err		8660697	1					
ANR	8660727	Identifier	max		8660697	1					
ANR	8660728	Identifier	digitization_error		8660697	1					
ANR	8660729	IdentifierDeclStatement	double in_max = floor ( ( in + err ) * max + digitization_error ) ;	6722:3:211285:211341	8660697	2	True				
ANR	8660730	IdentifierDecl	in_max = floor ( ( in + err ) * max + digitization_error )		8660697	0					
ANR	8660731	IdentifierDeclType	double		8660697	0					
ANR	8660732	Identifier	in_max		8660697	1					
ANR	8660733	AssignmentExpression	in_max = floor ( ( in + err ) * max + digitization_error )		8660697	2		=			
ANR	8660734	Identifier	in_max		8660697	0					
ANR	8660735	CallExpression	floor ( ( in + err ) * max + digitization_error )		8660697	1					
ANR	8660736	Callee	floor		8660697	0					
ANR	8660737	Identifier	floor		8660697	0					
ANR	8660738	ArgumentList	( in + err ) * max + digitization_error		8660697	1					
ANR	8660739	Argument	( in + err ) * max + digitization_error		8660697	0					
ANR	8660740	AdditiveExpression	( in + err ) * max + digitization_error		8660697	0		+			
ANR	8660741	MultiplicativeExpression	( in + err ) * max		8660697	0		*			
ANR	8660742	AdditiveExpression	in + err		8660697	0		+			
ANR	8660743	Identifier	in		8660697	0					
ANR	8660744	Identifier	err		8660697	1					
ANR	8660745	Identifier	max		8660697	1					
ANR	8660746	Identifier	digitization_error		8660697	1					
ANR	8660747	Statement	if	6723:3:211346:211347	8660697	3	True				
ANR	8660748	Statement	(	6723:6:211349:211349	8660697	4	True				
ANR	8660749	Statement	debugonly	6723:7:211350:211358	8660697	5	True				
ANR	8660750	Statement	(	6723:16:211359:211359	8660697	6	True				
ANR	8660751	Statement	err	6723:17:211360:211362	8660697	7	True				
ANR	8660752	Statement	>	6723:21:211364:211364	8660697	8	True				
ANR	8660753	Statement	limit	6723:23:211366:211370	8660697	9	True				
ANR	8660754	Statement	||	6723:29:211372:211373	8660697	10	True				
ANR	8660755	Statement	)	6723:31:211374:211374	8660697	11	True				
ANR	8660756	Statement	!	6723:33:211376:211376	8660697	12	True				
ANR	8660757	Statement	(	6723:34:211377:211377	8660697	13	True				
ANR	8660758	Statement	out	6723:35:211378:211380	8660697	14	True				
ANR	8660759	Statement	>=	6723:39:211382:211383	8660697	15	True				
ANR	8660760	Statement	in_min	6723:42:211385:211390	8660697	16	True				
ANR	8660761	Statement	&&	6723:49:211392:211393	8660697	17	True				
ANR	8660762	Statement	out	6723:52:211395:211397	8660697	18	True				
ANR	8660763	Statement	<=	6723:56:211399:211400	8660697	19	True				
ANR	8660764	Statement	in_max	6723:59:211402:211407	8660697	20	True				
ANR	8660765	Statement	)	6723:65:211408:211408	8660697	21	True				
ANR	8660766	Statement	)	6723:66:211409:211409	8660697	22	True				
ANR	8660767	CompoundStatement		14:6:632:642	8660697	23					
ANR	8660768	IdentifierDeclStatement	char message [ 256 ] ;	6725:6:211422:211439	8660697	0	True				
ANR	8660769	IdentifierDecl	message [ 256 ]		8660697	0					
ANR	8660770	IdentifierDeclType	char [ 256 ]		8660697	0					
ANR	8660771	Identifier	message		8660697	1					
ANR	8660772	PrimaryExpression	256		8660697	2					
ANR	8660773	IdentifierDeclStatement	size_t pos ;	6726:6:211447:211457	8660697	1	True				
ANR	8660774	IdentifierDecl	pos		8660697	0					
ANR	8660775	IdentifierDeclType	size_t		8660697	0					
ANR	8660776	Identifier	pos		8660697	1					
ANR	8660777	ExpressionStatement	"pos = safecat ( message , sizeof message , 0 , name )"	6728:6:211466:211513	8660697	2	True				
ANR	8660778	AssignmentExpression	"pos = safecat ( message , sizeof message , 0 , name )"		8660697	0		=			
ANR	8660779	Identifier	pos		8660697	0					
ANR	8660780	CallExpression	"safecat ( message , sizeof message , 0 , name )"		8660697	1					
ANR	8660781	Callee	safecat		8660697	0					
ANR	8660782	Identifier	safecat		8660697	0					
ANR	8660783	ArgumentList	message		8660697	1					
ANR	8660784	Argument	message		8660697	0					
ANR	8660785	Identifier	message		8660697	0					
ANR	8660786	Argument	sizeof message		8660697	1					
ANR	8660787	SizeofExpression	sizeof message		8660697	0					
ANR	8660788	Sizeof	sizeof		8660697	0					
ANR	8660789	Identifier	message		8660697	1					
ANR	8660790	Argument	0		8660697	2					
ANR	8660791	PrimaryExpression	0		8660697	0					
ANR	8660792	Argument	name		8660697	3					
ANR	8660793	Identifier	name		8660697	0					
ANR	8660794	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" output value error: rgba("" )"	6729:6:211521:211594	8660697	3	True				
ANR	8660795	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" output value error: rgba("" )"		8660697	0		=			
ANR	8660796	Identifier	pos		8660697	0					
ANR	8660797	CallExpression	"safecat ( message , sizeof message , pos , "" output value error: rgba("" )"		8660697	1					
ANR	8660798	Callee	safecat		8660697	0					
ANR	8660799	Identifier	safecat		8660697	0					
ANR	8660800	ArgumentList	message		8660697	1					
ANR	8660801	Argument	message		8660697	0					
ANR	8660802	Identifier	message		8660697	0					
ANR	8660803	Argument	sizeof message		8660697	1					
ANR	8660804	SizeofExpression	sizeof message		8660697	0					
ANR	8660805	Sizeof	sizeof		8660697	0					
ANR	8660806	Identifier	message		8660697	1					
ANR	8660807	Argument	pos		8660697	2					
ANR	8660808	Identifier	pos		8660697	0					
ANR	8660809	Argument	""" output value error: rgba("""		8660697	3					
ANR	8660810	PrimaryExpression	""" output value error: rgba("""		8660697	0					
ANR	8660811	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , r )"	6730:6:211602:211649	8660697	4	True				
ANR	8660812	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , r )"		8660697	0		=			
ANR	8660813	Identifier	pos		8660697	0					
ANR	8660814	CallExpression	"safecatn ( message , sizeof message , pos , r )"		8660697	1					
ANR	8660815	Callee	safecatn		8660697	0					
ANR	8660816	Identifier	safecatn		8660697	0					
ANR	8660817	ArgumentList	message		8660697	1					
ANR	8660818	Argument	message		8660697	0					
ANR	8660819	Identifier	message		8660697	0					
ANR	8660820	Argument	sizeof message		8660697	1					
ANR	8660821	SizeofExpression	sizeof message		8660697	0					
ANR	8660822	Sizeof	sizeof		8660697	0					
ANR	8660823	Identifier	message		8660697	1					
ANR	8660824	Argument	pos		8660697	2					
ANR	8660825	Identifier	pos		8660697	0					
ANR	8660826	Argument	r		8660697	3					
ANR	8660827	Identifier	r		8660697	0					
ANR	8660828	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "","" )"	6731:6:211657:211705	8660697	5	True				
ANR	8660829	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "","" )"		8660697	0		=			
ANR	8660830	Identifier	pos		8660697	0					
ANR	8660831	CallExpression	"safecat ( message , sizeof message , pos , "","" )"		8660697	1					
ANR	8660832	Callee	safecat		8660697	0					
ANR	8660833	Identifier	safecat		8660697	0					
ANR	8660834	ArgumentList	message		8660697	1					
ANR	8660835	Argument	message		8660697	0					
ANR	8660836	Identifier	message		8660697	0					
ANR	8660837	Argument	sizeof message		8660697	1					
ANR	8660838	SizeofExpression	sizeof message		8660697	0					
ANR	8660839	Sizeof	sizeof		8660697	0					
ANR	8660840	Identifier	message		8660697	1					
ANR	8660841	Argument	pos		8660697	2					
ANR	8660842	Identifier	pos		8660697	0					
ANR	8660843	Argument	""","""		8660697	3					
ANR	8660844	PrimaryExpression	""","""		8660697	0					
ANR	8660845	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , g )"	6732:6:211713:211760	8660697	6	True				
ANR	8660846	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , g )"		8660697	0		=			
ANR	8660847	Identifier	pos		8660697	0					
ANR	8660848	CallExpression	"safecatn ( message , sizeof message , pos , g )"		8660697	1					
ANR	8660849	Callee	safecatn		8660697	0					
ANR	8660850	Identifier	safecatn		8660697	0					
ANR	8660851	ArgumentList	message		8660697	1					
ANR	8660852	Argument	message		8660697	0					
ANR	8660853	Identifier	message		8660697	0					
ANR	8660854	Argument	sizeof message		8660697	1					
ANR	8660855	SizeofExpression	sizeof message		8660697	0					
ANR	8660856	Sizeof	sizeof		8660697	0					
ANR	8660857	Identifier	message		8660697	1					
ANR	8660858	Argument	pos		8660697	2					
ANR	8660859	Identifier	pos		8660697	0					
ANR	8660860	Argument	g		8660697	3					
ANR	8660861	Identifier	g		8660697	0					
ANR	8660862	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "","" )"	6733:6:211768:211816	8660697	7	True				
ANR	8660863	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "","" )"		8660697	0		=			
ANR	8660864	Identifier	pos		8660697	0					
ANR	8660865	CallExpression	"safecat ( message , sizeof message , pos , "","" )"		8660697	1					
ANR	8660866	Callee	safecat		8660697	0					
ANR	8660867	Identifier	safecat		8660697	0					
ANR	8660868	ArgumentList	message		8660697	1					
ANR	8660869	Argument	message		8660697	0					
ANR	8660870	Identifier	message		8660697	0					
ANR	8660871	Argument	sizeof message		8660697	1					
ANR	8660872	SizeofExpression	sizeof message		8660697	0					
ANR	8660873	Sizeof	sizeof		8660697	0					
ANR	8660874	Identifier	message		8660697	1					
ANR	8660875	Argument	pos		8660697	2					
ANR	8660876	Identifier	pos		8660697	0					
ANR	8660877	Argument	""","""		8660697	3					
ANR	8660878	PrimaryExpression	""","""		8660697	0					
ANR	8660879	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , b )"	6734:6:211824:211871	8660697	8	True				
ANR	8660880	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , b )"		8660697	0		=			
ANR	8660881	Identifier	pos		8660697	0					
ANR	8660882	CallExpression	"safecatn ( message , sizeof message , pos , b )"		8660697	1					
ANR	8660883	Callee	safecatn		8660697	0					
ANR	8660884	Identifier	safecatn		8660697	0					
ANR	8660885	ArgumentList	message		8660697	1					
ANR	8660886	Argument	message		8660697	0					
ANR	8660887	Identifier	message		8660697	0					
ANR	8660888	Argument	sizeof message		8660697	1					
ANR	8660889	SizeofExpression	sizeof message		8660697	0					
ANR	8660890	Sizeof	sizeof		8660697	0					
ANR	8660891	Identifier	message		8660697	1					
ANR	8660892	Argument	pos		8660697	2					
ANR	8660893	Identifier	pos		8660697	0					
ANR	8660894	Argument	b		8660697	3					
ANR	8660895	Identifier	b		8660697	0					
ANR	8660896	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "","" )"	6735:6:211879:211927	8660697	9	True				
ANR	8660897	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "","" )"		8660697	0		=			
ANR	8660898	Identifier	pos		8660697	0					
ANR	8660899	CallExpression	"safecat ( message , sizeof message , pos , "","" )"		8660697	1					
ANR	8660900	Callee	safecat		8660697	0					
ANR	8660901	Identifier	safecat		8660697	0					
ANR	8660902	ArgumentList	message		8660697	1					
ANR	8660903	Argument	message		8660697	0					
ANR	8660904	Identifier	message		8660697	0					
ANR	8660905	Argument	sizeof message		8660697	1					
ANR	8660906	SizeofExpression	sizeof message		8660697	0					
ANR	8660907	Sizeof	sizeof		8660697	0					
ANR	8660908	Identifier	message		8660697	1					
ANR	8660909	Argument	pos		8660697	2					
ANR	8660910	Identifier	pos		8660697	0					
ANR	8660911	Argument	""","""		8660697	3					
ANR	8660912	PrimaryExpression	""","""		8660697	0					
ANR	8660913	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , a )"	6736:6:211935:211982	8660697	10	True				
ANR	8660914	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , a )"		8660697	0		=			
ANR	8660915	Identifier	pos		8660697	0					
ANR	8660916	CallExpression	"safecatn ( message , sizeof message , pos , a )"		8660697	1					
ANR	8660917	Callee	safecatn		8660697	0					
ANR	8660918	Identifier	safecatn		8660697	0					
ANR	8660919	ArgumentList	message		8660697	1					
ANR	8660920	Argument	message		8660697	0					
ANR	8660921	Identifier	message		8660697	0					
ANR	8660922	Argument	sizeof message		8660697	1					
ANR	8660923	SizeofExpression	sizeof message		8660697	0					
ANR	8660924	Sizeof	sizeof		8660697	0					
ANR	8660925	Identifier	message		8660697	1					
ANR	8660926	Argument	pos		8660697	2					
ANR	8660927	Identifier	pos		8660697	0					
ANR	8660928	Argument	a		8660697	3					
ANR	8660929	Identifier	a		8660697	0					
ANR	8660930	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , ""): "" )"	6737:6:211990:212040	8660697	11	True				
ANR	8660931	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , ""): "" )"		8660697	0		=			
ANR	8660932	Identifier	pos		8660697	0					
ANR	8660933	CallExpression	"safecat ( message , sizeof message , pos , ""): "" )"		8660697	1					
ANR	8660934	Callee	safecat		8660697	0					
ANR	8660935	Identifier	safecat		8660697	0					
ANR	8660936	ArgumentList	message		8660697	1					
ANR	8660937	Argument	message		8660697	0					
ANR	8660938	Identifier	message		8660697	0					
ANR	8660939	Argument	sizeof message		8660697	1					
ANR	8660940	SizeofExpression	sizeof message		8660697	0					
ANR	8660941	Sizeof	sizeof		8660697	0					
ANR	8660942	Identifier	message		8660697	1					
ANR	8660943	Argument	pos		8660697	2					
ANR	8660944	Identifier	pos		8660697	0					
ANR	8660945	Argument	"""): """		8660697	3					
ANR	8660946	PrimaryExpression	"""): """		8660697	0					
ANR	8660947	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , out )"	6738:6:212048:212097	8660697	12	True				
ANR	8660948	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , out )"		8660697	0		=			
ANR	8660949	Identifier	pos		8660697	0					
ANR	8660950	CallExpression	"safecatn ( message , sizeof message , pos , out )"		8660697	1					
ANR	8660951	Callee	safecatn		8660697	0					
ANR	8660952	Identifier	safecatn		8660697	0					
ANR	8660953	ArgumentList	message		8660697	1					
ANR	8660954	Argument	message		8660697	0					
ANR	8660955	Identifier	message		8660697	0					
ANR	8660956	Argument	sizeof message		8660697	1					
ANR	8660957	SizeofExpression	sizeof message		8660697	0					
ANR	8660958	Sizeof	sizeof		8660697	0					
ANR	8660959	Identifier	message		8660697	1					
ANR	8660960	Argument	pos		8660697	2					
ANR	8660961	Identifier	pos		8660697	0					
ANR	8660962	Argument	out		8660697	3					
ANR	8660963	Identifier	out		8660697	0					
ANR	8660964	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" expected: "" )"	6739:6:212105:212163	8660697	13	True				
ANR	8660965	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" expected: "" )"		8660697	0		=			
ANR	8660966	Identifier	pos		8660697	0					
ANR	8660967	CallExpression	"safecat ( message , sizeof message , pos , "" expected: "" )"		8660697	1					
ANR	8660968	Callee	safecat		8660697	0					
ANR	8660969	Identifier	safecat		8660697	0					
ANR	8660970	ArgumentList	message		8660697	1					
ANR	8660971	Argument	message		8660697	0					
ANR	8660972	Identifier	message		8660697	0					
ANR	8660973	Argument	sizeof message		8660697	1					
ANR	8660974	SizeofExpression	sizeof message		8660697	0					
ANR	8660975	Sizeof	sizeof		8660697	0					
ANR	8660976	Identifier	message		8660697	1					
ANR	8660977	Argument	pos		8660697	2					
ANR	8660978	Identifier	pos		8660697	0					
ANR	8660979	Argument	""" expected: """		8660697	3					
ANR	8660980	PrimaryExpression	""" expected: """		8660697	0					
ANR	8660981	ExpressionStatement	"pos = safecatn ( message , sizeof message , pos , in_digitized )"	6740:6:212171:212229	8660697	14	True				
ANR	8660982	AssignmentExpression	"pos = safecatn ( message , sizeof message , pos , in_digitized )"		8660697	0		=			
ANR	8660983	Identifier	pos		8660697	0					
ANR	8660984	CallExpression	"safecatn ( message , sizeof message , pos , in_digitized )"		8660697	1					
ANR	8660985	Callee	safecatn		8660697	0					
ANR	8660986	Identifier	safecatn		8660697	0					
ANR	8660987	ArgumentList	message		8660697	1					
ANR	8660988	Argument	message		8660697	0					
ANR	8660989	Identifier	message		8660697	0					
ANR	8660990	Argument	sizeof message		8660697	1					
ANR	8660991	SizeofExpression	sizeof message		8660697	0					
ANR	8660992	Sizeof	sizeof		8660697	0					
ANR	8660993	Identifier	message		8660697	1					
ANR	8660994	Argument	pos		8660697	2					
ANR	8660995	Identifier	pos		8660697	0					
ANR	8660996	Argument	in_digitized		8660697	3					
ANR	8660997	Identifier	in_digitized		8660697	0					
ANR	8660998	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "" ("" )"	6741:6:212237:212286	8660697	15	True				
ANR	8660999	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "" ("" )"		8660697	0		=			
ANR	8661000	Identifier	pos		8660697	0					
ANR	8661001	CallExpression	"safecat ( message , sizeof message , pos , "" ("" )"		8660697	1					
ANR	8661002	Callee	safecat		8660697	0					
ANR	8661003	Identifier	safecat		8660697	0					
ANR	8661004	ArgumentList	message		8660697	1					
ANR	8661005	Argument	message		8660697	0					
ANR	8661006	Identifier	message		8660697	0					
ANR	8661007	Argument	sizeof message		8660697	1					
ANR	8661008	SizeofExpression	sizeof message		8660697	0					
ANR	8661009	Sizeof	sizeof		8660697	0					
ANR	8661010	Identifier	message		8660697	1					
ANR	8661011	Argument	pos		8660697	2					
ANR	8661012	Identifier	pos		8660697	0					
ANR	8661013	Argument	""" ("""		8660697	3					
ANR	8661014	PrimaryExpression	""" ("""		8660697	0					
ANR	8661015	ExpressionStatement	"pos = safecatd ( message , sizeof message , pos , ( in - err ) * max , 3 )"	6742:6:212294:212355	8660697	16	True				
ANR	8661016	AssignmentExpression	"pos = safecatd ( message , sizeof message , pos , ( in - err ) * max , 3 )"		8660697	0		=			
ANR	8661017	Identifier	pos		8660697	0					
ANR	8661018	CallExpression	"safecatd ( message , sizeof message , pos , ( in - err ) * max , 3 )"		8660697	1					
ANR	8661019	Callee	safecatd		8660697	0					
ANR	8661020	Identifier	safecatd		8660697	0					
ANR	8661021	ArgumentList	message		8660697	1					
ANR	8661022	Argument	message		8660697	0					
ANR	8661023	Identifier	message		8660697	0					
ANR	8661024	Argument	sizeof message		8660697	1					
ANR	8661025	SizeofExpression	sizeof message		8660697	0					
ANR	8661026	Sizeof	sizeof		8660697	0					
ANR	8661027	Identifier	message		8660697	1					
ANR	8661028	Argument	pos		8660697	2					
ANR	8661029	Identifier	pos		8660697	0					
ANR	8661030	Argument	( in - err ) * max		8660697	3					
ANR	8661031	MultiplicativeExpression	( in - err ) * max		8660697	0		*			
ANR	8661032	AdditiveExpression	in - err		8660697	0		-			
ANR	8661033	Identifier	in		8660697	0					
ANR	8661034	Identifier	err		8660697	1					
ANR	8661035	Identifier	max		8660697	1					
ANR	8661036	Argument	3		8660697	4					
ANR	8661037	PrimaryExpression	3		8660697	0					
ANR	8661038	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "".."" )"	6743:6:212363:212412	8660697	17	True				
ANR	8661039	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "".."" )"		8660697	0		=			
ANR	8661040	Identifier	pos		8660697	0					
ANR	8661041	CallExpression	"safecat ( message , sizeof message , pos , "".."" )"		8660697	1					
ANR	8661042	Callee	safecat		8660697	0					
ANR	8661043	Identifier	safecat		8660697	0					
ANR	8661044	ArgumentList	message		8660697	1					
ANR	8661045	Argument	message		8660697	0					
ANR	8661046	Identifier	message		8660697	0					
ANR	8661047	Argument	sizeof message		8660697	1					
ANR	8661048	SizeofExpression	sizeof message		8660697	0					
ANR	8661049	Sizeof	sizeof		8660697	0					
ANR	8661050	Identifier	message		8660697	1					
ANR	8661051	Argument	pos		8660697	2					
ANR	8661052	Identifier	pos		8660697	0					
ANR	8661053	Argument	""".."""		8660697	3					
ANR	8661054	PrimaryExpression	""".."""		8660697	0					
ANR	8661055	ExpressionStatement	"pos = safecatd ( message , sizeof message , pos , ( in + err ) * max , 3 )"	6744:6:212420:212481	8660697	18	True				
ANR	8661056	AssignmentExpression	"pos = safecatd ( message , sizeof message , pos , ( in + err ) * max , 3 )"		8660697	0		=			
ANR	8661057	Identifier	pos		8660697	0					
ANR	8661058	CallExpression	"safecatd ( message , sizeof message , pos , ( in + err ) * max , 3 )"		8660697	1					
ANR	8661059	Callee	safecatd		8660697	0					
ANR	8661060	Identifier	safecatd		8660697	0					
ANR	8661061	ArgumentList	message		8660697	1					
ANR	8661062	Argument	message		8660697	0					
ANR	8661063	Identifier	message		8660697	0					
ANR	8661064	Argument	sizeof message		8660697	1					
ANR	8661065	SizeofExpression	sizeof message		8660697	0					
ANR	8661066	Sizeof	sizeof		8660697	0					
ANR	8661067	Identifier	message		8660697	1					
ANR	8661068	Argument	pos		8660697	2					
ANR	8661069	Identifier	pos		8660697	0					
ANR	8661070	Argument	( in + err ) * max		8660697	3					
ANR	8661071	MultiplicativeExpression	( in + err ) * max		8660697	0		*			
ANR	8661072	AdditiveExpression	in + err		8660697	0		+			
ANR	8661073	Identifier	in		8660697	0					
ANR	8661074	Identifier	err		8660697	1					
ANR	8661075	Identifier	max		8660697	1					
ANR	8661076	Argument	3		8660697	4					
ANR	8661077	PrimaryExpression	3		8660697	0					
ANR	8661078	ExpressionStatement	"pos = safecat ( message , sizeof message , pos , "")"" )"	6745:6:212489:212537	8660697	19	True				
ANR	8661079	AssignmentExpression	"pos = safecat ( message , sizeof message , pos , "")"" )"		8660697	0		=			
ANR	8661080	Identifier	pos		8660697	0					
ANR	8661081	CallExpression	"safecat ( message , sizeof message , pos , "")"" )"		8660697	1					
ANR	8661082	Callee	safecat		8660697	0					
ANR	8661083	Identifier	safecat		8660697	0					
ANR	8661084	ArgumentList	message		8660697	1					
ANR	8661085	Argument	message		8660697	0					
ANR	8661086	Identifier	message		8660697	0					
ANR	8661087	Argument	sizeof message		8660697	1					
ANR	8661088	SizeofExpression	sizeof message		8660697	0					
ANR	8661089	Sizeof	sizeof		8660697	0					
ANR	8661090	Identifier	message		8660697	1					
ANR	8661091	Argument	pos		8660697	2					
ANR	8661092	Identifier	pos		8660697	0					
ANR	8661093	Argument	""")"""		8660697	3					
ANR	8661094	PrimaryExpression	""")"""		8660697	0					
ANR	8661095	ExpressionStatement	"png_error ( pp , message )"	6747:6:212546:212568	8660697	20	True				
ANR	8661096	CallExpression	"png_error ( pp , message )"		8660697	0					
ANR	8661097	Callee	png_error		8660697	0					
ANR	8661098	Identifier	png_error		8660697	0					
ANR	8661099	ArgumentList	pp		8660697	1					
ANR	8661100	Argument	pp		8660697	0					
ANR	8661101	Identifier	pp		8660697	0					
ANR	8661102	Argument	message		8660697	1					
ANR	8661103	Identifier	message		8660697	0					
ANR	8661104	Statement	UNUSED	6750:3:212579:212584	8660697	24	True				
ANR	8661105	Statement	(	6750:9:212585:212585	8660697	25	True				
ANR	8661106	Statement	limit	6750:10:212586:212590	8660697	26	True				
ANR	8661107	Statement	)	6750:15:212591:212591	8660697	27	True				
ANR	8661108	ReturnType	static void		8660697	1					
ANR	8661109	Identifier	transform_range_check		8660697	2					
ANR	8661110	ParameterList	"png_const_structp pp , unsigned int r , unsigned int g , unsigned int b , unsigned int a , unsigned int in_digitized , double in , unsigned int out , png_byte sample_depth , double err , double limit , const char * name , double digitization_error"		8660697	3					
ANR	8661111	Parameter	png_const_structp pp	6709:22:210569:210588	8660697	0	True				
ANR	8661112	ParameterType	png_const_structp		8660697	0					
ANR	8661113	Identifier	pp		8660697	1					
ANR	8661114	Parameter	unsigned int r	6709:44:210591:210604	8660697	1	True				
ANR	8661115	ParameterType	unsigned int		8660697	0					
ANR	8661116	Identifier	r		8660697	1					
ANR	8661117	Parameter	unsigned int g	6709:60:210607:210620	8660697	2	True				
ANR	8661118	ParameterType	unsigned int		8660697	0					
ANR	8661119	Identifier	g		8660697	1					
ANR	8661120	Parameter	unsigned int b	6710:3:210626:210639	8660697	3	True				
ANR	8661121	ParameterType	unsigned int		8660697	0					
ANR	8661122	Identifier	b		8660697	1					
ANR	8661123	Parameter	unsigned int a	6710:19:210642:210655	8660697	4	True				
ANR	8661124	ParameterType	unsigned int		8660697	0					
ANR	8661125	Identifier	a		8660697	1					
ANR	8661126	Parameter	unsigned int in_digitized	6710:35:210658:210682	8660697	5	True				
ANR	8661127	ParameterType	unsigned int		8660697	0					
ANR	8661128	Identifier	in_digitized		8660697	1					
ANR	8661129	Parameter	double in	6710:62:210685:210693	8660697	6	True				
ANR	8661130	ParameterType	double		8660697	0					
ANR	8661131	Identifier	in		8660697	1					
ANR	8661132	Parameter	unsigned int out	6711:3:210699:210714	8660697	7	True				
ANR	8661133	ParameterType	unsigned int		8660697	0					
ANR	8661134	Identifier	out		8660697	1					
ANR	8661135	Parameter	png_byte sample_depth	6711:21:210717:210737	8660697	8	True				
ANR	8661136	ParameterType	png_byte		8660697	0					
ANR	8661137	Identifier	sample_depth		8660697	1					
ANR	8661138	Parameter	double err	6711:44:210740:210749	8660697	9	True				
ANR	8661139	ParameterType	double		8660697	0					
ANR	8661140	Identifier	err		8660697	1					
ANR	8661141	Parameter	double limit	6711:56:210752:210763	8660697	10	True				
ANR	8661142	ParameterType	double		8660697	0					
ANR	8661143	Identifier	limit		8660697	1					
ANR	8661144	Parameter	const char * name	6712:3:210769:210784	8660697	11	True				
ANR	8661145	ParameterType	const char *		8660697	0					
ANR	8661146	Identifier	name		8660697	1					
ANR	8661147	Parameter	double digitization_error	6712:21:210787:210811	8660697	12	True				
ANR	8661148	ParameterType	double		8660697	0					
ANR	8661149	Identifier	digitization_error		8660697	1					
ANR	8661150	CFGEntryNode	ENTRY		8660697		True				
ANR	8661151	CFGExitNode	EXIT		8660697		True				
ANR	8661152	Symbol	pp		8660697						
ANR	8661153	Symbol	a		8660697						
ANR	8661154	Symbol	b		8660697						
ANR	8661155	Symbol	sample_depth		8660697						
ANR	8661156	Symbol	err		8660697						
ANR	8661157	Symbol	in		8660697						
ANR	8661158	Symbol	max		8660697						
ANR	8661159	Symbol	g		8660697						
ANR	8661160	Symbol	safecatn		8660697						
ANR	8661161	Symbol	ceil		8660697						
ANR	8661162	Symbol	message		8660697						
ANR	8661163	Symbol	in_max		8660697						
ANR	8661164	Symbol	digitization_error		8660697						
ANR	8661165	Symbol	out		8660697						
ANR	8661166	Symbol	r		8660697						
ANR	8661167	Symbol	safecatd		8660697						
ANR	8661168	Symbol	pos		8660697						
ANR	8661169	Symbol	safecat		8660697						
ANR	8661170	Symbol	limit		8660697						
ANR	8661171	Symbol	name		8660697						
ANR	8661172	Symbol	floor		8660697						
ANR	8661173	Symbol	in_digitized		8660697						
ANR	8661174	Symbol	in_min		8660697						
ANR	8661175	Function	transform_image_validate	6753:0:212596:218607							
ANR	8661176	FunctionDef	"transform_image_validate (transform_display * dp , png_const_structp pp , png_infop pi)"		8661175	0					
ANR	8661177	CompoundStatement		6756:0:212695:218607	8661175	0					
ANR	8661178	Statement	const	6758:3:212739:212743	8661175	0	True				
ANR	8661179	Statement	png_store	6758:9:212745:212753	8661175	1	True				
ANR	8661180	Statement	*	6758:18:212754:212754	8661175	2	True				
ANR	8661181	Statement	const	6758:20:212756:212760	8661175	3	True				
ANR	8661182	ExpressionStatement	ps = dp -> this . ps	6758:26:212762:212778	8661175	4	True				
ANR	8661183	AssignmentExpression	ps = dp -> this . ps		8661175	0		=			
ANR	8661184	Identifier	ps		8661175	0					
ANR	8661185	MemberAccess	dp -> this . ps		8661175	1					
ANR	8661186	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661187	Identifier	dp		8661175	0					
ANR	8661188	Identifier	this		8661175	1					
ANR	8661189	Identifier	ps		8661175	1					
ANR	8661190	IdentifierDeclStatement	const png_byte in_ct = dp -> this . colour_type ;	6759:3:212783:212826	8661175	5	True				
ANR	8661191	IdentifierDecl	in_ct = dp -> this . colour_type		8661175	0					
ANR	8661192	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661193	Identifier	in_ct		8661175	1					
ANR	8661194	AssignmentExpression	in_ct = dp -> this . colour_type		8661175	2		=			
ANR	8661195	Identifier	in_ct		8661175	0					
ANR	8661196	MemberAccess	dp -> this . colour_type		8661175	1					
ANR	8661197	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661198	Identifier	dp		8661175	0					
ANR	8661199	Identifier	this		8661175	1					
ANR	8661200	Identifier	colour_type		8661175	1					
ANR	8661201	IdentifierDeclStatement	const png_byte in_bd = dp -> this . bit_depth ;	6760:3:212831:212872	8661175	6	True				
ANR	8661202	IdentifierDecl	in_bd = dp -> this . bit_depth		8661175	0					
ANR	8661203	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661204	Identifier	in_bd		8661175	1					
ANR	8661205	AssignmentExpression	in_bd = dp -> this . bit_depth		8661175	2		=			
ANR	8661206	Identifier	in_bd		8661175	0					
ANR	8661207	MemberAccess	dp -> this . bit_depth		8661175	1					
ANR	8661208	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661209	Identifier	dp		8661175	0					
ANR	8661210	Identifier	this		8661175	1					
ANR	8661211	Identifier	bit_depth		8661175	1					
ANR	8661212	IdentifierDeclStatement	const png_uint_32 w = dp -> this . w ;	6761:3:212877:212909	8661175	7	True				
ANR	8661213	IdentifierDecl	w = dp -> this . w		8661175	0					
ANR	8661214	IdentifierDeclType	const png_uint_32		8661175	0					
ANR	8661215	Identifier	w		8661175	1					
ANR	8661216	AssignmentExpression	w = dp -> this . w		8661175	2		=			
ANR	8661217	Identifier	w		8661175	0					
ANR	8661218	MemberAccess	dp -> this . w		8661175	1					
ANR	8661219	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661220	Identifier	dp		8661175	0					
ANR	8661221	Identifier	this		8661175	1					
ANR	8661222	Identifier	w		8661175	1					
ANR	8661223	IdentifierDeclStatement	const png_uint_32 h = dp -> this . h ;	6762:3:212914:212946	8661175	8	True				
ANR	8661224	IdentifierDecl	h = dp -> this . h		8661175	0					
ANR	8661225	IdentifierDeclType	const png_uint_32		8661175	0					
ANR	8661226	Identifier	h		8661175	1					
ANR	8661227	AssignmentExpression	h = dp -> this . h		8661175	2		=			
ANR	8661228	Identifier	h		8661175	0					
ANR	8661229	MemberAccess	dp -> this . h		8661175	1					
ANR	8661230	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661231	Identifier	dp		8661175	0					
ANR	8661232	Identifier	this		8661175	1					
ANR	8661233	Identifier	h		8661175	1					
ANR	8661234	IdentifierDeclStatement	const png_byte out_ct = dp -> output_colour_type ;	6763:3:212951:212997	8661175	9	True				
ANR	8661235	IdentifierDecl	out_ct = dp -> output_colour_type		8661175	0					
ANR	8661236	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661237	Identifier	out_ct		8661175	1					
ANR	8661238	AssignmentExpression	out_ct = dp -> output_colour_type		8661175	2		=			
ANR	8661239	Identifier	out_ct		8661175	0					
ANR	8661240	PtrMemberAccess	dp -> output_colour_type		8661175	1					
ANR	8661241	Identifier	dp		8661175	0					
ANR	8661242	Identifier	output_colour_type		8661175	1					
ANR	8661243	IdentifierDeclStatement	const png_byte out_bd = dp -> output_bit_depth ;	6764:3:213002:213046	8661175	10	True				
ANR	8661244	IdentifierDecl	out_bd = dp -> output_bit_depth		8661175	0					
ANR	8661245	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661246	Identifier	out_bd		8661175	1					
ANR	8661247	AssignmentExpression	out_bd = dp -> output_bit_depth		8661175	2		=			
ANR	8661248	Identifier	out_bd		8661175	0					
ANR	8661249	PtrMemberAccess	dp -> output_bit_depth		8661175	1					
ANR	8661250	Identifier	dp		8661175	0					
ANR	8661251	Identifier	output_bit_depth		8661175	1					
ANR	8661252	IdentifierDeclStatement	const png_byte sample_depth = ( png_byte ) ( out_ct == PNG_COLOR_TYPE_PALETTE ? 8 : out_bd ) ;	6765:3:213051:213144	8661175	11	True				
ANR	8661253	IdentifierDecl	sample_depth = ( png_byte ) ( out_ct == PNG_COLOR_TYPE_PALETTE ? 8 : out_bd )		8661175	0					
ANR	8661254	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661255	Identifier	sample_depth		8661175	1					
ANR	8661256	AssignmentExpression	sample_depth = ( png_byte ) ( out_ct == PNG_COLOR_TYPE_PALETTE ? 8 : out_bd )		8661175	2		=			
ANR	8661257	Identifier	sample_depth		8661175	0					
ANR	8661258	CastExpression	( png_byte ) ( out_ct == PNG_COLOR_TYPE_PALETTE ? 8 : out_bd )		8661175	1					
ANR	8661259	CastTarget	png_byte		8661175	0					
ANR	8661260	ConditionalExpression	out_ct == PNG_COLOR_TYPE_PALETTE ? 8 : out_bd		8661175	1					
ANR	8661261	Condition	out_ct == PNG_COLOR_TYPE_PALETTE		8661175	0					
ANR	8661262	EqualityExpression	out_ct == PNG_COLOR_TYPE_PALETTE		8661175	0		==			
ANR	8661263	Identifier	out_ct		8661175	0					
ANR	8661264	Identifier	PNG_COLOR_TYPE_PALETTE		8661175	1					
ANR	8661265	PrimaryExpression	8		8661175	1					
ANR	8661266	Identifier	out_bd		8661175	2					
ANR	8661267	IdentifierDeclStatement	const png_byte red_sBIT = dp -> this . red_sBIT ;	6767:3:213149:213192	8661175	12	True				
ANR	8661268	IdentifierDecl	red_sBIT = dp -> this . red_sBIT		8661175	0					
ANR	8661269	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661270	Identifier	red_sBIT		8661175	1					
ANR	8661271	AssignmentExpression	red_sBIT = dp -> this . red_sBIT		8661175	2		=			
ANR	8661272	Identifier	red_sBIT		8661175	0					
ANR	8661273	MemberAccess	dp -> this . red_sBIT		8661175	1					
ANR	8661274	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661275	Identifier	dp		8661175	0					
ANR	8661276	Identifier	this		8661175	1					
ANR	8661277	Identifier	red_sBIT		8661175	1					
ANR	8661278	IdentifierDeclStatement	const png_byte green_sBIT = dp -> this . green_sBIT ;	6768:3:213197:213244	8661175	13	True				
ANR	8661279	IdentifierDecl	green_sBIT = dp -> this . green_sBIT		8661175	0					
ANR	8661280	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661281	Identifier	green_sBIT		8661175	1					
ANR	8661282	AssignmentExpression	green_sBIT = dp -> this . green_sBIT		8661175	2		=			
ANR	8661283	Identifier	green_sBIT		8661175	0					
ANR	8661284	MemberAccess	dp -> this . green_sBIT		8661175	1					
ANR	8661285	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661286	Identifier	dp		8661175	0					
ANR	8661287	Identifier	this		8661175	1					
ANR	8661288	Identifier	green_sBIT		8661175	1					
ANR	8661289	IdentifierDeclStatement	const png_byte blue_sBIT = dp -> this . blue_sBIT ;	6769:3:213249:213294	8661175	14	True				
ANR	8661290	IdentifierDecl	blue_sBIT = dp -> this . blue_sBIT		8661175	0					
ANR	8661291	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661292	Identifier	blue_sBIT		8661175	1					
ANR	8661293	AssignmentExpression	blue_sBIT = dp -> this . blue_sBIT		8661175	2		=			
ANR	8661294	Identifier	blue_sBIT		8661175	0					
ANR	8661295	MemberAccess	dp -> this . blue_sBIT		8661175	1					
ANR	8661296	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661297	Identifier	dp		8661175	0					
ANR	8661298	Identifier	this		8661175	1					
ANR	8661299	Identifier	blue_sBIT		8661175	1					
ANR	8661300	IdentifierDeclStatement	const png_byte alpha_sBIT = dp -> this . alpha_sBIT ;	6770:3:213299:213346	8661175	15	True				
ANR	8661301	IdentifierDecl	alpha_sBIT = dp -> this . alpha_sBIT		8661175	0					
ANR	8661302	IdentifierDeclType	const png_byte		8661175	0					
ANR	8661303	Identifier	alpha_sBIT		8661175	1					
ANR	8661304	AssignmentExpression	alpha_sBIT = dp -> this . alpha_sBIT		8661175	2		=			
ANR	8661305	Identifier	alpha_sBIT		8661175	0					
ANR	8661306	MemberAccess	dp -> this . alpha_sBIT		8661175	1					
ANR	8661307	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661308	Identifier	dp		8661175	0					
ANR	8661309	Identifier	this		8661175	1					
ANR	8661310	Identifier	alpha_sBIT		8661175	1					
ANR	8661311	IdentifierDeclStatement	const int have_tRNS = dp -> this . is_transparent ;	6771:3:213351:213396	8661175	16	True				
ANR	8661312	IdentifierDecl	have_tRNS = dp -> this . is_transparent		8661175	0					
ANR	8661313	IdentifierDeclType	const int		8661175	0					
ANR	8661314	Identifier	have_tRNS		8661175	1					
ANR	8661315	AssignmentExpression	have_tRNS = dp -> this . is_transparent		8661175	2		=			
ANR	8661316	Identifier	have_tRNS		8661175	0					
ANR	8661317	MemberAccess	dp -> this . is_transparent		8661175	1					
ANR	8661318	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661319	Identifier	dp		8661175	0					
ANR	8661320	Identifier	this		8661175	1					
ANR	8661321	Identifier	is_transparent		8661175	1					
ANR	8661322	IdentifierDeclStatement	double digitization_error ;	6772:3:213401:213426	8661175	17	True				
ANR	8661323	IdentifierDecl	digitization_error		8661175	0					
ANR	8661324	IdentifierDeclType	double		8661175	0					
ANR	8661325	Identifier	digitization_error		8661175	1					
ANR	8661326	IdentifierDeclStatement	store_palette out_palette ;	6774:3:213432:213457	8661175	18	True				
ANR	8661327	IdentifierDecl	out_palette		8661175	0					
ANR	8661328	IdentifierDeclType	store_palette		8661175	0					
ANR	8661329	Identifier	out_palette		8661175	1					
ANR	8661330	IdentifierDeclStatement	png_uint_32 y ;	6775:3:213462:213475	8661175	19	True				
ANR	8661331	IdentifierDecl	y		8661175	0					
ANR	8661332	IdentifierDeclType	png_uint_32		8661175	0					
ANR	8661333	Identifier	y		8661175	1					
ANR	8661334	Statement	UNUSED	6777:3:213481:213486	8661175	20	True				
ANR	8661335	ExpressionStatement	"( pi ) store_image_check ( dp -> this . ps , pp , 0 )"	6777:9:213487:213573	8661175	21	True				
ANR	8661336	CastExpression	"( pi ) store_image_check ( dp -> this . ps , pp , 0 )"		8661175	0					
ANR	8661337	CastTarget	pi		8661175	0					
ANR	8661338	CallExpression	"store_image_check ( dp -> this . ps , pp , 0 )"		8661175	1					
ANR	8661339	Callee	store_image_check		8661175	0					
ANR	8661340	Identifier	store_image_check		8661175	0					
ANR	8661341	ArgumentList	dp -> this . ps		8661175	1					
ANR	8661342	Argument	dp -> this . ps		8661175	0					
ANR	8661343	MemberAccess	dp -> this . ps		8661175	0					
ANR	8661344	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661345	Identifier	dp		8661175	0					
ANR	8661346	Identifier	this		8661175	1					
ANR	8661347	Identifier	ps		8661175	1					
ANR	8661348	Argument	pp		8661175	1					
ANR	8661349	Identifier	pp		8661175	0					
ANR	8661350	Argument	0		8661175	2					
ANR	8661351	PrimaryExpression	0		8661175	0					
ANR	8661352	IfStatement	if ( out_ct == PNG_COLOR_TYPE_PALETTE )		8661175	22					
ANR	8661353	Condition	out_ct == PNG_COLOR_TYPE_PALETTE	6785:7:213731:213762	8661175	0	True				
ANR	8661354	EqualityExpression	out_ct == PNG_COLOR_TYPE_PALETTE		8661175	0		==			
ANR	8661355	Identifier	out_ct		8661175	0					
ANR	8661356	Identifier	PNG_COLOR_TYPE_PALETTE		8661175	1					
ANR	8661357	CompoundStatement		35:6:1187:1206	8661175	1					
ANR	8661358	IdentifierDeclStatement	int npalette = ( - 1 ) ;	6790:6:213883:213902	8661175	0	True				
ANR	8661359	IdentifierDecl	npalette = ( - 1 )		8661175	0					
ANR	8661360	IdentifierDeclType	int		8661175	0					
ANR	8661361	Identifier	npalette		8661175	1					
ANR	8661362	AssignmentExpression	npalette = ( - 1 )		8661175	2		=			
ANR	8661363	Identifier	npalette		8661175	0					
ANR	8661364	UnaryOperationExpression	- 1		8661175	1					
ANR	8661365	UnaryOperator	-		8661175	0					
ANR	8661366	PrimaryExpression	1		8661175	1					
ANR	8661367	ExpressionStatement	"( void ) read_palette ( out_palette , & npalette , pp , pi )"	6792:6:213911:213961	8661175	1	True				
ANR	8661368	CastExpression	"( void ) read_palette ( out_palette , & npalette , pp , pi )"		8661175	0					
ANR	8661369	CastTarget	void		8661175	0					
ANR	8661370	CallExpression	"read_palette ( out_palette , & npalette , pp , pi )"		8661175	1					
ANR	8661371	Callee	read_palette		8661175	0					
ANR	8661372	Identifier	read_palette		8661175	0					
ANR	8661373	ArgumentList	out_palette		8661175	1					
ANR	8661374	Argument	out_palette		8661175	0					
ANR	8661375	Identifier	out_palette		8661175	0					
ANR	8661376	Argument	& npalette		8661175	1					
ANR	8661377	UnaryOperationExpression	& npalette		8661175	0					
ANR	8661378	UnaryOperator	&		8661175	0					
ANR	8661379	Identifier	npalette		8661175	1					
ANR	8661380	Argument	pp		8661175	2					
ANR	8661381	Identifier	pp		8661175	0					
ANR	8661382	Argument	pi		8661175	3					
ANR	8661383	Identifier	pi		8661175	0					
ANR	8661384	IfStatement	if ( npalette != dp -> this . npalette )		8661175	2					
ANR	8661385	Condition	npalette != dp -> this . npalette	6793:10:213973:214001	8661175	0	True				
ANR	8661386	EqualityExpression	npalette != dp -> this . npalette		8661175	0		!=			
ANR	8661387	Identifier	npalette		8661175	0					
ANR	8661388	MemberAccess	dp -> this . npalette		8661175	1					
ANR	8661389	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661390	Identifier	dp		8661175	0					
ANR	8661391	Identifier	this		8661175	1					
ANR	8661392	Identifier	npalette		8661175	1					
ANR	8661393	ExpressionStatement	"png_error ( pp , ""unexpected change in palette size"" )"	6794:9:214013:214063	8661175	1	True				
ANR	8661394	CallExpression	"png_error ( pp , ""unexpected change in palette size"" )"		8661175	0					
ANR	8661395	Callee	png_error		8661175	0					
ANR	8661396	Identifier	png_error		8661175	0					
ANR	8661397	ArgumentList	pp		8661175	1					
ANR	8661398	Argument	pp		8661175	0					
ANR	8661399	Identifier	pp		8661175	0					
ANR	8661400	Argument	"""unexpected change in palette size"""		8661175	1					
ANR	8661401	PrimaryExpression	"""unexpected change in palette size"""		8661175	0					
ANR	8661402	ExpressionStatement	digitization_error = .5	6796:6:214072:214095	8661175	3	True				
ANR	8661403	AssignmentExpression	digitization_error = .5		8661175	0		=			
ANR	8661404	Identifier	digitization_error		8661175	0					
ANR	8661405	PrimaryExpression	.5		8661175	1					
ANR	8661406	ElseStatement	else		8661175	0					
ANR	8661407	CompoundStatement		45:6:1425:1449	8661175	0					
ANR	8661408	IdentifierDeclStatement	png_byte in_sample_depth ;	6800:6:214121:214145	8661175	0	True				
ANR	8661409	IdentifierDecl	in_sample_depth		8661175	0					
ANR	8661410	IdentifierDeclType	png_byte		8661175	0					
ANR	8661411	Identifier	in_sample_depth		8661175	1					
ANR	8661412	ExpressionStatement	"memset ( out_palette , 0x5e , sizeof out_palette )"	6802:6:214154:214199	8661175	1	True				
ANR	8661413	CallExpression	"memset ( out_palette , 0x5e , sizeof out_palette )"		8661175	0					
ANR	8661414	Callee	memset		8661175	0					
ANR	8661415	Identifier	memset		8661175	0					
ANR	8661416	ArgumentList	out_palette		8661175	1					
ANR	8661417	Argument	out_palette		8661175	0					
ANR	8661418	Identifier	out_palette		8661175	0					
ANR	8661419	Argument	0x5e		8661175	1					
ANR	8661420	PrimaryExpression	0x5e		8661175	0					
ANR	8661421	Argument	sizeof out_palette		8661175	2					
ANR	8661422	SizeofExpression	sizeof out_palette		8661175	0					
ANR	8661423	Sizeof	sizeof		8661175	0					
ANR	8661424	Identifier	out_palette		8661175	1					
ANR	8661425	IfStatement	if ( in_ct == PNG_COLOR_TYPE_PALETTE || in_bd < 16 )		8661175	2					
ANR	8661426	Condition	in_ct == PNG_COLOR_TYPE_PALETTE || in_bd < 16	6808:10:214422:214466	8661175	0	True				
ANR	8661427	OrExpression	in_ct == PNG_COLOR_TYPE_PALETTE || in_bd < 16		8661175	0		||			
ANR	8661428	EqualityExpression	in_ct == PNG_COLOR_TYPE_PALETTE		8661175	0		==			
ANR	8661429	Identifier	in_ct		8661175	0					
ANR	8661430	Identifier	PNG_COLOR_TYPE_PALETTE		8661175	1					
ANR	8661431	RelationalExpression	in_bd < 16		8661175	1		<			
ANR	8661432	Identifier	in_bd		8661175	0					
ANR	8661433	PrimaryExpression	16		8661175	1					
ANR	8661434	ExpressionStatement	in_sample_depth = 8	6809:9:214478:214497	8661175	1	True				
ANR	8661435	AssignmentExpression	in_sample_depth = 8		8661175	0		=			
ANR	8661436	Identifier	in_sample_depth		8661175	0					
ANR	8661437	PrimaryExpression	8		8661175	1					
ANR	8661438	ElseStatement	else		8661175	0					
ANR	8661439	ExpressionStatement	in_sample_depth = in_bd	6811:9:214519:214542	8661175	0	True				
ANR	8661440	AssignmentExpression	in_sample_depth = in_bd		8661175	0		=			
ANR	8661441	Identifier	in_sample_depth		8661175	0					
ANR	8661442	Identifier	in_bd		8661175	1					
ANR	8661443	IfStatement	if ( sample_depth != 16 || in_sample_depth > 8 || ! dp -> pm -> calculations_use_input_precision )		8661175	3					
ANR	8661444	Condition	sample_depth != 16 || in_sample_depth > 8 || ! dp -> pm -> calculations_use_input_precision	6813:10:214555:214649	8661175	0	True				
ANR	8661445	OrExpression	sample_depth != 16 || in_sample_depth > 8 || ! dp -> pm -> calculations_use_input_precision		8661175	0		||			
ANR	8661446	EqualityExpression	sample_depth != 16		8661175	0		!=			
ANR	8661447	Identifier	sample_depth		8661175	0					
ANR	8661448	PrimaryExpression	16		8661175	1					
ANR	8661449	OrExpression	in_sample_depth > 8 || ! dp -> pm -> calculations_use_input_precision		8661175	1		||			
ANR	8661450	RelationalExpression	in_sample_depth > 8		8661175	0		>			
ANR	8661451	Identifier	in_sample_depth		8661175	0					
ANR	8661452	PrimaryExpression	8		8661175	1					
ANR	8661453	UnaryOperationExpression	! dp -> pm -> calculations_use_input_precision		8661175	1					
ANR	8661454	UnaryOperator	!		8661175	0					
ANR	8661455	PtrMemberAccess	dp -> pm -> calculations_use_input_precision		8661175	1					
ANR	8661456	PtrMemberAccess	dp -> pm		8661175	0					
ANR	8661457	Identifier	dp		8661175	0					
ANR	8661458	Identifier	pm		8661175	1					
ANR	8661459	Identifier	calculations_use_input_precision		8661175	1					
ANR	8661460	ExpressionStatement	digitization_error = .5	6815:9:214661:214684	8661175	1	True				
ANR	8661461	AssignmentExpression	digitization_error = .5		8661175	0		=			
ANR	8661462	Identifier	digitization_error		8661175	0					
ANR	8661463	PrimaryExpression	.5		8661175	1					
ANR	8661464	ElseStatement	else		8661175	0					
ANR	8661465	ExpressionStatement	digitization_error = .5 * 257	6821:9:214872:214901	8661175	0	True				
ANR	8661466	AssignmentExpression	digitization_error = .5 * 257		8661175	0		=			
ANR	8661467	Identifier	digitization_error		8661175	0					
ANR	8661468	MultiplicativeExpression	.5 * 257		8661175	1		*			
ANR	8661469	PrimaryExpression	.5		8661175	0					
ANR	8661470	PrimaryExpression	257		8661175	1					
ANR	8661471	ForStatement	for ( y = 0 ; y < h ; ++ y )		8661175	23					
ANR	8661472	ForInit	y = 0 ;	6824:8:214917:214920	8661175	0	True				
ANR	8661473	AssignmentExpression	y = 0		8661175	0		=			
ANR	8661474	Identifier	y		8661175	0					
ANR	8661475	PrimaryExpression	0		8661175	1					
ANR	8661476	Condition	y < h	6824:13:214922:214924	8661175	1	True				
ANR	8661477	RelationalExpression	y < h		8661175	0		<			
ANR	8661478	Identifier	y		8661175	0					
ANR	8661479	Identifier	h		8661175	1					
ANR	8661480	UnaryExpression	++ y	6824:18:214927:214929	8661175	2	True				
ANR	8661481	IncDec	++		8661175	0					
ANR	8661482	Identifier	y		8661175	1					
ANR	8661483	CompoundStatement		75:6:2391:2420	8661175	3					
ANR	8661484	IdentifierDeclStatement	"png_const_bytep const pRow = store_image_row ( ps , pp , 0 , y ) ;"	6826:6:214943:215001	8661175	0	True				
ANR	8661485	IdentifierDecl	"pRow = store_image_row ( ps , pp , 0 , y )"		8661175	0					
ANR	8661486	IdentifierDeclType	png_const_bytep const		8661175	0					
ANR	8661487	Identifier	pRow		8661175	1					
ANR	8661488	AssignmentExpression	"pRow = store_image_row ( ps , pp , 0 , y )"		8661175	2		=			
ANR	8661489	Identifier	pRow		8661175	0					
ANR	8661490	CallExpression	"store_image_row ( ps , pp , 0 , y )"		8661175	1					
ANR	8661491	Callee	store_image_row		8661175	0					
ANR	8661492	Identifier	store_image_row		8661175	0					
ANR	8661493	ArgumentList	ps		8661175	1					
ANR	8661494	Argument	ps		8661175	0					
ANR	8661495	Identifier	ps		8661175	0					
ANR	8661496	Argument	pp		8661175	1					
ANR	8661497	Identifier	pp		8661175	0					
ANR	8661498	Argument	0		8661175	2					
ANR	8661499	PrimaryExpression	0		8661175	0					
ANR	8661500	Argument	y		8661175	3					
ANR	8661501	Identifier	y		8661175	0					
ANR	8661502	IdentifierDeclStatement	png_uint_32 x ;	6827:6:215009:215022	8661175	1	True				
ANR	8661503	IdentifierDecl	x		8661175	0					
ANR	8661504	IdentifierDeclType	png_uint_32		8661175	0					
ANR	8661505	Identifier	x		8661175	1					
ANR	8661506	IdentifierDeclStatement	png_byte std [ STANDARD_ROWMAX ] ;	6830:6:215087:215116	8661175	2	True				
ANR	8661507	IdentifierDecl	std [ STANDARD_ROWMAX ]		8661175	0					
ANR	8661508	IdentifierDeclType	png_byte [ STANDARD_ROWMAX ]		8661175	0					
ANR	8661509	Identifier	std		8661175	1					
ANR	8661510	Identifier	STANDARD_ROWMAX		8661175	2					
ANR	8661511	ExpressionStatement	"transform_row ( pp , std , in_ct , in_bd , y )"	6832:6:215125:215164	8661175	3	True				
ANR	8661512	CallExpression	"transform_row ( pp , std , in_ct , in_bd , y )"		8661175	0					
ANR	8661513	Callee	transform_row		8661175	0					
ANR	8661514	Identifier	transform_row		8661175	0					
ANR	8661515	ArgumentList	pp		8661175	1					
ANR	8661516	Argument	pp		8661175	0					
ANR	8661517	Identifier	pp		8661175	0					
ANR	8661518	Argument	std		8661175	1					
ANR	8661519	Identifier	std		8661175	0					
ANR	8661520	Argument	in_ct		8661175	2					
ANR	8661521	Identifier	in_ct		8661175	0					
ANR	8661522	Argument	in_bd		8661175	3					
ANR	8661523	Identifier	in_bd		8661175	0					
ANR	8661524	Argument	y		8661175	4					
ANR	8661525	Identifier	y		8661175	0					
ANR	8661526	ForStatement	for ( x = 0 ; x < w ; ++ x )		8661175	4					
ANR	8661527	ForInit	x = 0 ;	6837:11:215307:215310	8661175	0	True				
ANR	8661528	AssignmentExpression	x = 0		8661175	0		=			
ANR	8661529	Identifier	x		8661175	0					
ANR	8661530	PrimaryExpression	0		8661175	1					
ANR	8661531	Condition	x < w	6837:16:215312:215314	8661175	1	True				
ANR	8661532	RelationalExpression	x < w		8661175	0		<			
ANR	8661533	Identifier	x		8661175	0					
ANR	8661534	Identifier	w		8661175	1					
ANR	8661535	UnaryExpression	++ x	6837:21:215317:215319	8661175	2	True				
ANR	8661536	IncDec	++		8661175	0					
ANR	8661537	Identifier	x		8661175	1					
ANR	8661538	CompoundStatement		85:9:2685:2708	8661175	3					
ANR	8661539	IdentifierDeclStatement	"image_pixel in_pixel , out_pixel ;"	6839:9:215339:215370	8661175	0	True				
ANR	8661540	IdentifierDecl	in_pixel		8661175	0					
ANR	8661541	IdentifierDeclType	image_pixel		8661175	0					
ANR	8661542	Identifier	in_pixel		8661175	1					
ANR	8661543	IdentifierDecl	out_pixel		8661175	1					
ANR	8661544	IdentifierDeclType	image_pixel		8661175	0					
ANR	8661545	Identifier	out_pixel		8661175	1					
ANR	8661546	IdentifierDeclStatement	"unsigned int r , g , b , a ;"	6840:9:215381:215404	8661175	1	True				
ANR	8661547	IdentifierDecl	r		8661175	0					
ANR	8661548	IdentifierDeclType	unsigned int		8661175	0					
ANR	8661549	Identifier	r		8661175	1					
ANR	8661550	IdentifierDecl	g		8661175	1					
ANR	8661551	IdentifierDeclType	unsigned int		8661175	0					
ANR	8661552	Identifier	g		8661175	1					
ANR	8661553	IdentifierDecl	b		8661175	2					
ANR	8661554	IdentifierDeclType	unsigned int		8661175	0					
ANR	8661555	Identifier	b		8661175	1					
ANR	8661556	IdentifierDecl	a		8661175	3					
ANR	8661557	IdentifierDeclType	unsigned int		8661175	0					
ANR	8661558	Identifier	a		8661175	1					
ANR	8661559	ExpressionStatement	"image_pixel_init ( & in_pixel , std , in_ct , in_bd , x , dp -> this . palette , NULL )"	6843:9:215475:215565	8661175	2	True				
ANR	8661560	CallExpression	"image_pixel_init ( & in_pixel , std , in_ct , in_bd , x , dp -> this . palette , NULL )"		8661175	0					
ANR	8661561	Callee	image_pixel_init		8661175	0					
ANR	8661562	Identifier	image_pixel_init		8661175	0					
ANR	8661563	ArgumentList	& in_pixel		8661175	1					
ANR	8661564	Argument	& in_pixel		8661175	0					
ANR	8661565	UnaryOperationExpression	& in_pixel		8661175	0					
ANR	8661566	UnaryOperator	&		8661175	0					
ANR	8661567	Identifier	in_pixel		8661175	1					
ANR	8661568	Argument	std		8661175	1					
ANR	8661569	Identifier	std		8661175	0					
ANR	8661570	Argument	in_ct		8661175	2					
ANR	8661571	Identifier	in_ct		8661175	0					
ANR	8661572	Argument	in_bd		8661175	3					
ANR	8661573	Identifier	in_bd		8661175	0					
ANR	8661574	Argument	x		8661175	4					
ANR	8661575	Identifier	x		8661175	0					
ANR	8661576	Argument	dp -> this . palette		8661175	5					
ANR	8661577	MemberAccess	dp -> this . palette		8661175	0					
ANR	8661578	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661579	Identifier	dp		8661175	0					
ANR	8661580	Identifier	this		8661175	1					
ANR	8661581	Identifier	palette		8661175	1					
ANR	8661582	Argument	NULL		8661175	6					
ANR	8661583	Identifier	NULL		8661175	0					
ANR	8661584	ExpressionStatement	in_pixel . red_sBIT = red_sBIT	6846:9:215577:215605	8661175	3	True				
ANR	8661585	AssignmentExpression	in_pixel . red_sBIT = red_sBIT		8661175	0		=			
ANR	8661586	MemberAccess	in_pixel . red_sBIT		8661175	0					
ANR	8661587	Identifier	in_pixel		8661175	0					
ANR	8661588	Identifier	red_sBIT		8661175	1					
ANR	8661589	Identifier	red_sBIT		8661175	1					
ANR	8661590	ExpressionStatement	in_pixel . green_sBIT = green_sBIT	6847:9:215616:215648	8661175	4	True				
ANR	8661591	AssignmentExpression	in_pixel . green_sBIT = green_sBIT		8661175	0		=			
ANR	8661592	MemberAccess	in_pixel . green_sBIT		8661175	0					
ANR	8661593	Identifier	in_pixel		8661175	0					
ANR	8661594	Identifier	green_sBIT		8661175	1					
ANR	8661595	Identifier	green_sBIT		8661175	1					
ANR	8661596	ExpressionStatement	in_pixel . blue_sBIT = blue_sBIT	6848:9:215659:215689	8661175	5	True				
ANR	8661597	AssignmentExpression	in_pixel . blue_sBIT = blue_sBIT		8661175	0		=			
ANR	8661598	MemberAccess	in_pixel . blue_sBIT		8661175	0					
ANR	8661599	Identifier	in_pixel		8661175	0					
ANR	8661600	Identifier	blue_sBIT		8661175	1					
ANR	8661601	Identifier	blue_sBIT		8661175	1					
ANR	8661602	ExpressionStatement	in_pixel . alpha_sBIT = alpha_sBIT	6849:9:215700:215732	8661175	6	True				
ANR	8661603	AssignmentExpression	in_pixel . alpha_sBIT = alpha_sBIT		8661175	0		=			
ANR	8661604	MemberAccess	in_pixel . alpha_sBIT		8661175	0					
ANR	8661605	Identifier	in_pixel		8661175	0					
ANR	8661606	Identifier	alpha_sBIT		8661175	1					
ANR	8661607	Identifier	alpha_sBIT		8661175	1					
ANR	8661608	ExpressionStatement	in_pixel . have_tRNS = have_tRNS != 0	6850:9:215743:215778	8661175	7	True				
ANR	8661609	AssignmentExpression	in_pixel . have_tRNS = have_tRNS != 0		8661175	0		=			
ANR	8661610	MemberAccess	in_pixel . have_tRNS		8661175	0					
ANR	8661611	Identifier	in_pixel		8661175	0					
ANR	8661612	Identifier	have_tRNS		8661175	1					
ANR	8661613	EqualityExpression	have_tRNS != 0		8661175	1		!=			
ANR	8661614	Identifier	have_tRNS		8661175	0					
ANR	8661615	PrimaryExpression	0		8661175	1					
ANR	8661616	ExpressionStatement	r = in_pixel . red	6853:9:215833:215849	8661175	8	True				
ANR	8661617	AssignmentExpression	r = in_pixel . red		8661175	0		=			
ANR	8661618	Identifier	r		8661175	0					
ANR	8661619	MemberAccess	in_pixel . red		8661175	1					
ANR	8661620	Identifier	in_pixel		8661175	0					
ANR	8661621	Identifier	red		8661175	1					
ANR	8661622	ExpressionStatement	g = in_pixel . green	6854:9:215860:215878	8661175	9	True				
ANR	8661623	AssignmentExpression	g = in_pixel . green		8661175	0		=			
ANR	8661624	Identifier	g		8661175	0					
ANR	8661625	MemberAccess	in_pixel . green		8661175	1					
ANR	8661626	Identifier	in_pixel		8661175	0					
ANR	8661627	Identifier	green		8661175	1					
ANR	8661628	ExpressionStatement	b = in_pixel . blue	6855:9:215889:215906	8661175	10	True				
ANR	8661629	AssignmentExpression	b = in_pixel . blue		8661175	0		=			
ANR	8661630	Identifier	b		8661175	0					
ANR	8661631	MemberAccess	in_pixel . blue		8661175	1					
ANR	8661632	Identifier	in_pixel		8661175	0					
ANR	8661633	Identifier	blue		8661175	1					
ANR	8661634	ExpressionStatement	a = in_pixel . alpha	6856:9:215917:215935	8661175	11	True				
ANR	8661635	AssignmentExpression	a = in_pixel . alpha		8661175	0		=			
ANR	8661636	Identifier	a		8661175	0					
ANR	8661637	MemberAccess	in_pixel . alpha		8661175	1					
ANR	8661638	Identifier	in_pixel		8661175	0					
ANR	8661639	Identifier	alpha		8661175	1					
ANR	8661640	ExpressionStatement	"dp -> transform_list -> mod ( dp -> transform_list , & in_pixel , pp , dp )"	6862:9:216149:216211	8661175	12	True				
ANR	8661641	CallExpression	"dp -> transform_list -> mod ( dp -> transform_list , & in_pixel , pp , dp )"		8661175	0					
ANR	8661642	Callee	dp -> transform_list -> mod		8661175	0					
ANR	8661643	PtrMemberAccess	dp -> transform_list -> mod		8661175	0					
ANR	8661644	PtrMemberAccess	dp -> transform_list		8661175	0					
ANR	8661645	Identifier	dp		8661175	0					
ANR	8661646	Identifier	transform_list		8661175	1					
ANR	8661647	Identifier	mod		8661175	1					
ANR	8661648	ArgumentList	dp -> transform_list		8661175	1					
ANR	8661649	Argument	dp -> transform_list		8661175	0					
ANR	8661650	PtrMemberAccess	dp -> transform_list		8661175	0					
ANR	8661651	Identifier	dp		8661175	0					
ANR	8661652	Identifier	transform_list		8661175	1					
ANR	8661653	Argument	& in_pixel		8661175	1					
ANR	8661654	UnaryOperationExpression	& in_pixel		8661175	0					
ANR	8661655	UnaryOperator	&		8661175	0					
ANR	8661656	Identifier	in_pixel		8661175	1					
ANR	8661657	Argument	pp		8661175	2					
ANR	8661658	Identifier	pp		8661175	0					
ANR	8661659	Argument	dp		8661175	3					
ANR	8661660	Identifier	dp		8661175	0					
ANR	8661661	ExpressionStatement	"image_pixel_init ( & out_pixel , pRow , out_ct , out_bd , x , out_palette , & in_pixel )"	6868:9:216456:216550	8661175	13	True				
ANR	8661662	CallExpression	"image_pixel_init ( & out_pixel , pRow , out_ct , out_bd , x , out_palette , & in_pixel )"		8661175	0					
ANR	8661663	Callee	image_pixel_init		8661175	0					
ANR	8661664	Identifier	image_pixel_init		8661175	0					
ANR	8661665	ArgumentList	& out_pixel		8661175	1					
ANR	8661666	Argument	& out_pixel		8661175	0					
ANR	8661667	UnaryOperationExpression	& out_pixel		8661175	0					
ANR	8661668	UnaryOperator	&		8661175	0					
ANR	8661669	Identifier	out_pixel		8661175	1					
ANR	8661670	Argument	pRow		8661175	1					
ANR	8661671	Identifier	pRow		8661175	0					
ANR	8661672	Argument	out_ct		8661175	2					
ANR	8661673	Identifier	out_ct		8661175	0					
ANR	8661674	Argument	out_bd		8661175	3					
ANR	8661675	Identifier	out_bd		8661175	0					
ANR	8661676	Argument	x		8661175	4					
ANR	8661677	Identifier	x		8661175	0					
ANR	8661678	Argument	out_palette		8661175	5					
ANR	8661679	Identifier	out_palette		8661175	0					
ANR	8661680	Argument	& in_pixel		8661175	6					
ANR	8661681	UnaryOperationExpression	& in_pixel		8661175	0					
ANR	8661682	UnaryOperator	&		8661175	0					
ANR	8661683	Identifier	in_pixel		8661175	1					
ANR	8661684	IfStatement	if ( in_ct == PNG_COLOR_TYPE_PALETTE && out_ct == PNG_COLOR_TYPE_PALETTE )		8661175	14					
ANR	8661685	Condition	in_ct == PNG_COLOR_TYPE_PALETTE && out_ct == PNG_COLOR_TYPE_PALETTE	6874:13:216679:216757	8661175	0	True				
ANR	8661686	AndExpression	in_ct == PNG_COLOR_TYPE_PALETTE && out_ct == PNG_COLOR_TYPE_PALETTE		8661175	0		&&			
ANR	8661687	EqualityExpression	in_ct == PNG_COLOR_TYPE_PALETTE		8661175	0		==			
ANR	8661688	Identifier	in_ct		8661175	0					
ANR	8661689	Identifier	PNG_COLOR_TYPE_PALETTE		8661175	1					
ANR	8661690	EqualityExpression	out_ct == PNG_COLOR_TYPE_PALETTE		8661175	1		==			
ANR	8661691	Identifier	out_ct		8661175	0					
ANR	8661692	Identifier	PNG_COLOR_TYPE_PALETTE		8661175	1					
ANR	8661693	CompoundStatement		121:9:4073:4073	8661175	1					
ANR	8661694	IfStatement	if ( in_pixel . palette_index != out_pixel . palette_index )		8661175	0					
ANR	8661695	Condition	in_pixel . palette_index != out_pixel . palette_index	6877:16:216787:216835	8661175	0	True				
ANR	8661696	EqualityExpression	in_pixel . palette_index != out_pixel . palette_index		8661175	0		!=			
ANR	8661697	MemberAccess	in_pixel . palette_index		8661175	0					
ANR	8661698	Identifier	in_pixel		8661175	0					
ANR	8661699	Identifier	palette_index		8661175	1					
ANR	8661700	MemberAccess	out_pixel . palette_index		8661175	1					
ANR	8661701	Identifier	out_pixel		8661175	0					
ANR	8661702	Identifier	palette_index		8661175	1					
ANR	8661703	ExpressionStatement	"png_error ( pp , ""unexpected transformed palette index"" )"	6878:15:216853:216906	8661175	1	True				
ANR	8661704	CallExpression	"png_error ( pp , ""unexpected transformed palette index"" )"		8661175	0					
ANR	8661705	Callee	png_error		8661175	0					
ANR	8661706	Identifier	png_error		8661175	0					
ANR	8661707	ArgumentList	pp		8661175	1					
ANR	8661708	Argument	pp		8661175	0					
ANR	8661709	Identifier	pp		8661175	0					
ANR	8661710	Argument	"""unexpected transformed palette index"""		8661175	1					
ANR	8661711	PrimaryExpression	"""unexpected transformed palette index"""		8661175	0					
ANR	8661712	IfStatement	if ( in_pixel . red != out_pixel . red )		8661175	15					
ANR	8661713	Condition	in_pixel . red != out_pixel . red	6884:13:217084:217112	8661175	0	True				
ANR	8661714	EqualityExpression	in_pixel . red != out_pixel . red		8661175	0		!=			
ANR	8661715	MemberAccess	in_pixel . red		8661175	0					
ANR	8661716	Identifier	in_pixel		8661175	0					
ANR	8661717	Identifier	red		8661175	1					
ANR	8661718	MemberAccess	out_pixel . red		8661175	1					
ANR	8661719	Identifier	out_pixel		8661175	0					
ANR	8661720	Identifier	red		8661175	1					
ANR	8661721	ExpressionStatement	"transform_range_check ( pp , r , g , b , a , in_pixel . red , in_pixel . redf , out_pixel . red , sample_depth , in_pixel . rede , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . red_sBIT ) - 1 ) ) , ""red/gray"" , digitization_error )"	6885:12:217127:217366	8661175	1	True				
ANR	8661722	CallExpression	"transform_range_check ( pp , r , g , b , a , in_pixel . red , in_pixel . redf , out_pixel . red , sample_depth , in_pixel . rede , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . red_sBIT ) - 1 ) ) , ""red/gray"" , digitization_error )"		8661175	0					
ANR	8661723	Callee	transform_range_check		8661175	0					
ANR	8661724	Identifier	transform_range_check		8661175	0					
ANR	8661725	ArgumentList	pp		8661175	1					
ANR	8661726	Argument	pp		8661175	0					
ANR	8661727	Identifier	pp		8661175	0					
ANR	8661728	Argument	r		8661175	1					
ANR	8661729	Identifier	r		8661175	0					
ANR	8661730	Argument	g		8661175	2					
ANR	8661731	Identifier	g		8661175	0					
ANR	8661732	Argument	b		8661175	3					
ANR	8661733	Identifier	b		8661175	0					
ANR	8661734	Argument	a		8661175	4					
ANR	8661735	Identifier	a		8661175	0					
ANR	8661736	Argument	in_pixel . red		8661175	5					
ANR	8661737	MemberAccess	in_pixel . red		8661175	0					
ANR	8661738	Identifier	in_pixel		8661175	0					
ANR	8661739	Identifier	red		8661175	1					
ANR	8661740	Argument	in_pixel . redf		8661175	6					
ANR	8661741	MemberAccess	in_pixel . redf		8661175	0					
ANR	8661742	Identifier	in_pixel		8661175	0					
ANR	8661743	Identifier	redf		8661175	1					
ANR	8661744	Argument	out_pixel . red		8661175	7					
ANR	8661745	MemberAccess	out_pixel . red		8661175	0					
ANR	8661746	Identifier	out_pixel		8661175	0					
ANR	8661747	Identifier	red		8661175	1					
ANR	8661748	Argument	sample_depth		8661175	8					
ANR	8661749	Identifier	sample_depth		8661175	0					
ANR	8661750	Argument	in_pixel . rede		8661175	9					
ANR	8661751	MemberAccess	in_pixel . rede		8661175	0					
ANR	8661752	Identifier	in_pixel		8661175	0					
ANR	8661753	Identifier	rede		8661175	1					
ANR	8661754	Argument	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . red_sBIT ) - 1 ) )		8661175	10					
ANR	8661755	AdditiveExpression	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . red_sBIT ) - 1 ) )		8661175	0		+			
ANR	8661756	PtrMemberAccess	dp -> pm -> limit		8661175	0					
ANR	8661757	PtrMemberAccess	dp -> pm		8661175	0					
ANR	8661758	Identifier	dp		8661175	0					
ANR	8661759	Identifier	pm		8661175	1					
ANR	8661760	Identifier	limit		8661175	1					
ANR	8661761	MultiplicativeExpression	1. / ( 2 * ( ( 1U << in_pixel . red_sBIT ) - 1 ) )		8661175	1		/			
ANR	8661762	PrimaryExpression	1.		8661175	0					
ANR	8661763	MultiplicativeExpression	2 * ( ( 1U << in_pixel . red_sBIT ) - 1 )		8661175	1		*			
ANR	8661764	PrimaryExpression	2		8661175	0					
ANR	8661765	AdditiveExpression	( 1U << in_pixel . red_sBIT ) - 1		8661175	1		-			
ANR	8661766	ShiftExpression	1U << in_pixel . red_sBIT		8661175	0		<<			
ANR	8661767	PrimaryExpression	1U		8661175	0					
ANR	8661768	MemberAccess	in_pixel . red_sBIT		8661175	1					
ANR	8661769	Identifier	in_pixel		8661175	0					
ANR	8661770	Identifier	red_sBIT		8661175	1					
ANR	8661771	PrimaryExpression	1		8661175	1					
ANR	8661772	Argument	"""red/gray"""		8661175	11					
ANR	8661773	PrimaryExpression	"""red/gray"""		8661175	0					
ANR	8661774	Argument	digitization_error		8661175	12					
ANR	8661775	Identifier	digitization_error		8661175	0					
ANR	8661776	IfStatement	if ( ( out_ct & PNG_COLOR_MASK_COLOR ) != 0 && in_pixel . green != out_pixel . green )		8661175	16					
ANR	8661777	Condition	( out_ct & PNG_COLOR_MASK_COLOR ) != 0 && in_pixel . green != out_pixel . green	6890:13:217382:217466	8661175	0	True				
ANR	8661778	AndExpression	( out_ct & PNG_COLOR_MASK_COLOR ) != 0 && in_pixel . green != out_pixel . green		8661175	0		&&			
ANR	8661779	EqualityExpression	( out_ct & PNG_COLOR_MASK_COLOR ) != 0		8661175	0		!=			
ANR	8661780	BitAndExpression	out_ct & PNG_COLOR_MASK_COLOR		8661175	0		&			
ANR	8661781	Identifier	out_ct		8661175	0					
ANR	8661782	Identifier	PNG_COLOR_MASK_COLOR		8661175	1					
ANR	8661783	PrimaryExpression	0		8661175	1					
ANR	8661784	EqualityExpression	in_pixel . green != out_pixel . green		8661175	1		!=			
ANR	8661785	MemberAccess	in_pixel . green		8661175	0					
ANR	8661786	Identifier	in_pixel		8661175	0					
ANR	8661787	Identifier	green		8661175	1					
ANR	8661788	MemberAccess	out_pixel . green		8661175	1					
ANR	8661789	Identifier	out_pixel		8661175	0					
ANR	8661790	Identifier	green		8661175	1					
ANR	8661791	ExpressionStatement	"transform_range_check ( pp , r , g , b , a , in_pixel . green , in_pixel . greenf , out_pixel . green , sample_depth , in_pixel . greene , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . green_sBIT ) - 1 ) ) , ""green"" , digitization_error )"	6892:12:217481:217727	8661175	1	True				
ANR	8661792	CallExpression	"transform_range_check ( pp , r , g , b , a , in_pixel . green , in_pixel . greenf , out_pixel . green , sample_depth , in_pixel . greene , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . green_sBIT ) - 1 ) ) , ""green"" , digitization_error )"		8661175	0					
ANR	8661793	Callee	transform_range_check		8661175	0					
ANR	8661794	Identifier	transform_range_check		8661175	0					
ANR	8661795	ArgumentList	pp		8661175	1					
ANR	8661796	Argument	pp		8661175	0					
ANR	8661797	Identifier	pp		8661175	0					
ANR	8661798	Argument	r		8661175	1					
ANR	8661799	Identifier	r		8661175	0					
ANR	8661800	Argument	g		8661175	2					
ANR	8661801	Identifier	g		8661175	0					
ANR	8661802	Argument	b		8661175	3					
ANR	8661803	Identifier	b		8661175	0					
ANR	8661804	Argument	a		8661175	4					
ANR	8661805	Identifier	a		8661175	0					
ANR	8661806	Argument	in_pixel . green		8661175	5					
ANR	8661807	MemberAccess	in_pixel . green		8661175	0					
ANR	8661808	Identifier	in_pixel		8661175	0					
ANR	8661809	Identifier	green		8661175	1					
ANR	8661810	Argument	in_pixel . greenf		8661175	6					
ANR	8661811	MemberAccess	in_pixel . greenf		8661175	0					
ANR	8661812	Identifier	in_pixel		8661175	0					
ANR	8661813	Identifier	greenf		8661175	1					
ANR	8661814	Argument	out_pixel . green		8661175	7					
ANR	8661815	MemberAccess	out_pixel . green		8661175	0					
ANR	8661816	Identifier	out_pixel		8661175	0					
ANR	8661817	Identifier	green		8661175	1					
ANR	8661818	Argument	sample_depth		8661175	8					
ANR	8661819	Identifier	sample_depth		8661175	0					
ANR	8661820	Argument	in_pixel . greene		8661175	9					
ANR	8661821	MemberAccess	in_pixel . greene		8661175	0					
ANR	8661822	Identifier	in_pixel		8661175	0					
ANR	8661823	Identifier	greene		8661175	1					
ANR	8661824	Argument	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . green_sBIT ) - 1 ) )		8661175	10					
ANR	8661825	AdditiveExpression	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . green_sBIT ) - 1 ) )		8661175	0		+			
ANR	8661826	PtrMemberAccess	dp -> pm -> limit		8661175	0					
ANR	8661827	PtrMemberAccess	dp -> pm		8661175	0					
ANR	8661828	Identifier	dp		8661175	0					
ANR	8661829	Identifier	pm		8661175	1					
ANR	8661830	Identifier	limit		8661175	1					
ANR	8661831	MultiplicativeExpression	1. / ( 2 * ( ( 1U << in_pixel . green_sBIT ) - 1 ) )		8661175	1		/			
ANR	8661832	PrimaryExpression	1.		8661175	0					
ANR	8661833	MultiplicativeExpression	2 * ( ( 1U << in_pixel . green_sBIT ) - 1 )		8661175	1		*			
ANR	8661834	PrimaryExpression	2		8661175	0					
ANR	8661835	AdditiveExpression	( 1U << in_pixel . green_sBIT ) - 1		8661175	1		-			
ANR	8661836	ShiftExpression	1U << in_pixel . green_sBIT		8661175	0		<<			
ANR	8661837	PrimaryExpression	1U		8661175	0					
ANR	8661838	MemberAccess	in_pixel . green_sBIT		8661175	1					
ANR	8661839	Identifier	in_pixel		8661175	0					
ANR	8661840	Identifier	green_sBIT		8661175	1					
ANR	8661841	PrimaryExpression	1		8661175	1					
ANR	8661842	Argument	"""green"""		8661175	11					
ANR	8661843	PrimaryExpression	"""green"""		8661175	0					
ANR	8661844	Argument	digitization_error		8661175	12					
ANR	8661845	Identifier	digitization_error		8661175	0					
ANR	8661846	IfStatement	if ( ( out_ct & PNG_COLOR_MASK_COLOR ) != 0 && in_pixel . blue != out_pixel . blue )		8661175	17					
ANR	8661847	Condition	( out_ct & PNG_COLOR_MASK_COLOR ) != 0 && in_pixel . blue != out_pixel . blue	6897:13:217743:217825	8661175	0	True				
ANR	8661848	AndExpression	( out_ct & PNG_COLOR_MASK_COLOR ) != 0 && in_pixel . blue != out_pixel . blue		8661175	0		&&			
ANR	8661849	EqualityExpression	( out_ct & PNG_COLOR_MASK_COLOR ) != 0		8661175	0		!=			
ANR	8661850	BitAndExpression	out_ct & PNG_COLOR_MASK_COLOR		8661175	0		&			
ANR	8661851	Identifier	out_ct		8661175	0					
ANR	8661852	Identifier	PNG_COLOR_MASK_COLOR		8661175	1					
ANR	8661853	PrimaryExpression	0		8661175	1					
ANR	8661854	EqualityExpression	in_pixel . blue != out_pixel . blue		8661175	1		!=			
ANR	8661855	MemberAccess	in_pixel . blue		8661175	0					
ANR	8661856	Identifier	in_pixel		8661175	0					
ANR	8661857	Identifier	blue		8661175	1					
ANR	8661858	MemberAccess	out_pixel . blue		8661175	1					
ANR	8661859	Identifier	out_pixel		8661175	0					
ANR	8661860	Identifier	blue		8661175	1					
ANR	8661861	ExpressionStatement	"transform_range_check ( pp , r , g , b , a , in_pixel . blue , in_pixel . bluef , out_pixel . blue , sample_depth , in_pixel . bluee , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . blue_sBIT ) - 1 ) ) , ""blue"" , digitization_error )"	6899:12:217840:218080	8661175	1	True				
ANR	8661862	CallExpression	"transform_range_check ( pp , r , g , b , a , in_pixel . blue , in_pixel . bluef , out_pixel . blue , sample_depth , in_pixel . bluee , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . blue_sBIT ) - 1 ) ) , ""blue"" , digitization_error )"		8661175	0					
ANR	8661863	Callee	transform_range_check		8661175	0					
ANR	8661864	Identifier	transform_range_check		8661175	0					
ANR	8661865	ArgumentList	pp		8661175	1					
ANR	8661866	Argument	pp		8661175	0					
ANR	8661867	Identifier	pp		8661175	0					
ANR	8661868	Argument	r		8661175	1					
ANR	8661869	Identifier	r		8661175	0					
ANR	8661870	Argument	g		8661175	2					
ANR	8661871	Identifier	g		8661175	0					
ANR	8661872	Argument	b		8661175	3					
ANR	8661873	Identifier	b		8661175	0					
ANR	8661874	Argument	a		8661175	4					
ANR	8661875	Identifier	a		8661175	0					
ANR	8661876	Argument	in_pixel . blue		8661175	5					
ANR	8661877	MemberAccess	in_pixel . blue		8661175	0					
ANR	8661878	Identifier	in_pixel		8661175	0					
ANR	8661879	Identifier	blue		8661175	1					
ANR	8661880	Argument	in_pixel . bluef		8661175	6					
ANR	8661881	MemberAccess	in_pixel . bluef		8661175	0					
ANR	8661882	Identifier	in_pixel		8661175	0					
ANR	8661883	Identifier	bluef		8661175	1					
ANR	8661884	Argument	out_pixel . blue		8661175	7					
ANR	8661885	MemberAccess	out_pixel . blue		8661175	0					
ANR	8661886	Identifier	out_pixel		8661175	0					
ANR	8661887	Identifier	blue		8661175	1					
ANR	8661888	Argument	sample_depth		8661175	8					
ANR	8661889	Identifier	sample_depth		8661175	0					
ANR	8661890	Argument	in_pixel . bluee		8661175	9					
ANR	8661891	MemberAccess	in_pixel . bluee		8661175	0					
ANR	8661892	Identifier	in_pixel		8661175	0					
ANR	8661893	Identifier	bluee		8661175	1					
ANR	8661894	Argument	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . blue_sBIT ) - 1 ) )		8661175	10					
ANR	8661895	AdditiveExpression	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . blue_sBIT ) - 1 ) )		8661175	0		+			
ANR	8661896	PtrMemberAccess	dp -> pm -> limit		8661175	0					
ANR	8661897	PtrMemberAccess	dp -> pm		8661175	0					
ANR	8661898	Identifier	dp		8661175	0					
ANR	8661899	Identifier	pm		8661175	1					
ANR	8661900	Identifier	limit		8661175	1					
ANR	8661901	MultiplicativeExpression	1. / ( 2 * ( ( 1U << in_pixel . blue_sBIT ) - 1 ) )		8661175	1		/			
ANR	8661902	PrimaryExpression	1.		8661175	0					
ANR	8661903	MultiplicativeExpression	2 * ( ( 1U << in_pixel . blue_sBIT ) - 1 )		8661175	1		*			
ANR	8661904	PrimaryExpression	2		8661175	0					
ANR	8661905	AdditiveExpression	( 1U << in_pixel . blue_sBIT ) - 1		8661175	1		-			
ANR	8661906	ShiftExpression	1U << in_pixel . blue_sBIT		8661175	0		<<			
ANR	8661907	PrimaryExpression	1U		8661175	0					
ANR	8661908	MemberAccess	in_pixel . blue_sBIT		8661175	1					
ANR	8661909	Identifier	in_pixel		8661175	0					
ANR	8661910	Identifier	blue_sBIT		8661175	1					
ANR	8661911	PrimaryExpression	1		8661175	1					
ANR	8661912	Argument	"""blue"""		8661175	11					
ANR	8661913	PrimaryExpression	"""blue"""		8661175	0					
ANR	8661914	Argument	digitization_error		8661175	12					
ANR	8661915	Identifier	digitization_error		8661175	0					
ANR	8661916	IfStatement	if ( ( out_ct & PNG_COLOR_MASK_ALPHA ) != 0 && in_pixel . alpha != out_pixel . alpha )		8661175	18					
ANR	8661917	Condition	( out_ct & PNG_COLOR_MASK_ALPHA ) != 0 && in_pixel . alpha != out_pixel . alpha	6904:13:218096:218180	8661175	0	True				
ANR	8661918	AndExpression	( out_ct & PNG_COLOR_MASK_ALPHA ) != 0 && in_pixel . alpha != out_pixel . alpha		8661175	0		&&			
ANR	8661919	EqualityExpression	( out_ct & PNG_COLOR_MASK_ALPHA ) != 0		8661175	0		!=			
ANR	8661920	BitAndExpression	out_ct & PNG_COLOR_MASK_ALPHA		8661175	0		&			
ANR	8661921	Identifier	out_ct		8661175	0					
ANR	8661922	Identifier	PNG_COLOR_MASK_ALPHA		8661175	1					
ANR	8661923	PrimaryExpression	0		8661175	1					
ANR	8661924	EqualityExpression	in_pixel . alpha != out_pixel . alpha		8661175	1		!=			
ANR	8661925	MemberAccess	in_pixel . alpha		8661175	0					
ANR	8661926	Identifier	in_pixel		8661175	0					
ANR	8661927	Identifier	alpha		8661175	1					
ANR	8661928	MemberAccess	out_pixel . alpha		8661175	1					
ANR	8661929	Identifier	out_pixel		8661175	0					
ANR	8661930	Identifier	alpha		8661175	1					
ANR	8661931	ExpressionStatement	"transform_range_check ( pp , r , g , b , a , in_pixel . alpha , in_pixel . alphaf , out_pixel . alpha , sample_depth , in_pixel . alphae , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . alpha_sBIT ) - 1 ) ) , ""alpha"" , digitization_error )"	6906:12:218195:218441	8661175	1	True				
ANR	8661932	CallExpression	"transform_range_check ( pp , r , g , b , a , in_pixel . alpha , in_pixel . alphaf , out_pixel . alpha , sample_depth , in_pixel . alphae , dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . alpha_sBIT ) - 1 ) ) , ""alpha"" , digitization_error )"		8661175	0					
ANR	8661933	Callee	transform_range_check		8661175	0					
ANR	8661934	Identifier	transform_range_check		8661175	0					
ANR	8661935	ArgumentList	pp		8661175	1					
ANR	8661936	Argument	pp		8661175	0					
ANR	8661937	Identifier	pp		8661175	0					
ANR	8661938	Argument	r		8661175	1					
ANR	8661939	Identifier	r		8661175	0					
ANR	8661940	Argument	g		8661175	2					
ANR	8661941	Identifier	g		8661175	0					
ANR	8661942	Argument	b		8661175	3					
ANR	8661943	Identifier	b		8661175	0					
ANR	8661944	Argument	a		8661175	4					
ANR	8661945	Identifier	a		8661175	0					
ANR	8661946	Argument	in_pixel . alpha		8661175	5					
ANR	8661947	MemberAccess	in_pixel . alpha		8661175	0					
ANR	8661948	Identifier	in_pixel		8661175	0					
ANR	8661949	Identifier	alpha		8661175	1					
ANR	8661950	Argument	in_pixel . alphaf		8661175	6					
ANR	8661951	MemberAccess	in_pixel . alphaf		8661175	0					
ANR	8661952	Identifier	in_pixel		8661175	0					
ANR	8661953	Identifier	alphaf		8661175	1					
ANR	8661954	Argument	out_pixel . alpha		8661175	7					
ANR	8661955	MemberAccess	out_pixel . alpha		8661175	0					
ANR	8661956	Identifier	out_pixel		8661175	0					
ANR	8661957	Identifier	alpha		8661175	1					
ANR	8661958	Argument	sample_depth		8661175	8					
ANR	8661959	Identifier	sample_depth		8661175	0					
ANR	8661960	Argument	in_pixel . alphae		8661175	9					
ANR	8661961	MemberAccess	in_pixel . alphae		8661175	0					
ANR	8661962	Identifier	in_pixel		8661175	0					
ANR	8661963	Identifier	alphae		8661175	1					
ANR	8661964	Argument	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . alpha_sBIT ) - 1 ) )		8661175	10					
ANR	8661965	AdditiveExpression	dp -> pm -> limit + 1. / ( 2 * ( ( 1U << in_pixel . alpha_sBIT ) - 1 ) )		8661175	0		+			
ANR	8661966	PtrMemberAccess	dp -> pm -> limit		8661175	0					
ANR	8661967	PtrMemberAccess	dp -> pm		8661175	0					
ANR	8661968	Identifier	dp		8661175	0					
ANR	8661969	Identifier	pm		8661175	1					
ANR	8661970	Identifier	limit		8661175	1					
ANR	8661971	MultiplicativeExpression	1. / ( 2 * ( ( 1U << in_pixel . alpha_sBIT ) - 1 ) )		8661175	1		/			
ANR	8661972	PrimaryExpression	1.		8661175	0					
ANR	8661973	MultiplicativeExpression	2 * ( ( 1U << in_pixel . alpha_sBIT ) - 1 )		8661175	1		*			
ANR	8661974	PrimaryExpression	2		8661175	0					
ANR	8661975	AdditiveExpression	( 1U << in_pixel . alpha_sBIT ) - 1		8661175	1		-			
ANR	8661976	ShiftExpression	1U << in_pixel . alpha_sBIT		8661175	0		<<			
ANR	8661977	PrimaryExpression	1U		8661175	0					
ANR	8661978	MemberAccess	in_pixel . alpha_sBIT		8661175	1					
ANR	8661979	Identifier	in_pixel		8661175	0					
ANR	8661980	Identifier	alpha_sBIT		8661175	1					
ANR	8661981	PrimaryExpression	1		8661175	1					
ANR	8661982	Argument	"""alpha"""		8661175	11					
ANR	8661983	PrimaryExpression	"""alpha"""		8661175	0					
ANR	8661984	Argument	digitization_error		8661175	12					
ANR	8661985	Identifier	digitization_error		8661175	0					
ANR	8661986	ExpressionStatement	dp -> this . ps -> validated = 1	6914:3:218579:218605	8661175	24	True				
ANR	8661987	AssignmentExpression	dp -> this . ps -> validated = 1		8661175	0		=			
ANR	8661988	PtrMemberAccess	dp -> this . ps -> validated		8661175	0					
ANR	8661989	MemberAccess	dp -> this . ps		8661175	0					
ANR	8661990	PtrMemberAccess	dp -> this		8661175	0					
ANR	8661991	Identifier	dp		8661175	0					
ANR	8661992	Identifier	this		8661175	1					
ANR	8661993	Identifier	ps		8661175	1					
ANR	8661994	Identifier	validated		8661175	1					
ANR	8661995	PrimaryExpression	1		8661175	1					
ANR	8661996	ReturnType	static void		8661175	1					
ANR	8661997	Identifier	transform_image_validate		8661175	2					
ANR	8661998	ParameterList	"transform_display * dp , png_const_structp pp , png_infop pi"		8661175	3					
ANR	8661999	Parameter	transform_display * dp	6754:25:212633:212653	8661175	0	True				
ANR	8662000	ParameterType	transform_display *		8661175	0					
ANR	8662001	Identifier	dp		8661175	1					
ANR	8662002	Parameter	png_const_structp pp	6754:48:212656:212675	8661175	1	True				
ANR	8662003	ParameterType	png_const_structp		8661175	0					
ANR	8662004	Identifier	pp		8661175	1					
ANR	8662005	Parameter	png_infop pi	6755:3:212681:212692	8661175	2	True				
ANR	8662006	ParameterType	png_infop		8661175	0					
ANR	8662007	Identifier	pi		8661175	1					
ANR	8662008	CFGEntryNode	ENTRY		8661175		True				
ANR	8662009	CFGExitNode	EXIT		8661175		True				
ANR	8662010	Symbol	pp		8661175						
ANR	8662011	Symbol	in_pixel . green_sBIT		8661175						
ANR	8662012	Symbol	green_sBIT		8661175						
ANR	8662013	Symbol	out_pixel . green		8661175						
ANR	8662014	Symbol	ps		8661175						
ANR	8662015	Symbol	dp -> this . bit_depth		8661175						
ANR	8662016	Symbol	dp -> this . ps -> validated		8661175						
ANR	8662017	Symbol	dp -> pm -> limit		8661175						
ANR	8662018	Symbol	dp		8661175						
ANR	8662019	Symbol	dp -> this . npalette		8661175						
ANR	8662020	Symbol	in_pixel . palette_index		8661175						
ANR	8662021	Symbol	& npalette		8661175						
ANR	8662022	Symbol	out_ct		8661175						
ANR	8662023	Symbol	have_tRNS		8661175						
ANR	8662024	Symbol	& in_pixel		8661175						
ANR	8662025	Symbol	* dp -> pm		8661175						
ANR	8662026	Symbol	in_pixel . blue_sBIT		8661175						
ANR	8662027	Symbol	dp -> this		8661175						
ANR	8662028	Symbol	sample_depth		8661175						
ANR	8662029	Symbol	std		8661175						
ANR	8662030	Symbol	in_pixel . greenf		8661175						
ANR	8662031	Symbol	NULL		8661175						
ANR	8662032	Symbol	in_pixel . greene		8661175						
ANR	8662033	Symbol	red_sBIT		8661175						
ANR	8662034	Symbol	out_palette		8661175						
ANR	8662035	Symbol	dp -> this . w		8661175						
ANR	8662036	Symbol	dp -> this . green_sBIT		8661175						
ANR	8662037	Symbol	out_pixel . red		8661175						
ANR	8662038	Symbol	in_pixel		8661175						
ANR	8662039	Symbol	dp -> transform_list		8661175						
ANR	8662040	Symbol	in_ct		8661175						
ANR	8662041	Symbol	dp -> this . palette		8661175						
ANR	8662042	Symbol	out_pixel		8661175						
ANR	8662043	Symbol	dp -> this . ps		8661175						
ANR	8662044	Symbol	PNG_COLOR_MASK_ALPHA		8661175						
ANR	8662045	Symbol	dp -> this . h		8661175						
ANR	8662046	Symbol	store_image_row		8661175						
ANR	8662047	Symbol	in_pixel . rede		8661175						
ANR	8662048	Symbol	in_pixel . redf		8661175						
ANR	8662049	Symbol	out_bd		8661175						
ANR	8662050	Symbol	dp -> this . blue_sBIT		8661175						
ANR	8662051	Symbol	out_pixel . palette_index		8661175						
ANR	8662052	Symbol	dp -> this . colour_type		8661175						
ANR	8662053	Symbol	dp -> output_colour_type		8661175						
ANR	8662054	Symbol	dp -> output_bit_depth		8661175						
ANR	8662055	Symbol	digitization_error		8661175						
ANR	8662056	Symbol	* dp		8661175						
ANR	8662057	Symbol	dp -> this . alpha_sBIT		8661175						
ANR	8662058	Symbol	dp -> pm -> calculations_use_input_precision		8661175						
ANR	8662059	Symbol	out_pixel . alpha		8661175						
ANR	8662060	Symbol	in_pixel . alphaf		8661175						
ANR	8662061	Symbol	in_pixel . alphae		8661175						
ANR	8662062	Symbol	in_pixel . blue		8661175						
ANR	8662063	Symbol	dp -> this . red_sBIT		8661175						
ANR	8662064	Symbol	in_pixel . alpha_sBIT		8661175						
ANR	8662065	Symbol	dp -> pm		8661175						
ANR	8662066	Symbol	& out_pixel		8661175						
ANR	8662067	Symbol	a		8661175						
ANR	8662068	Symbol	b		8661175						
ANR	8662069	Symbol	* dp -> this . ps		8661175						
ANR	8662070	Symbol	in_pixel . red_sBIT		8661175						
ANR	8662071	Symbol	in_bd		8661175						
ANR	8662072	Symbol	g		8661175						
ANR	8662073	Symbol	h		8661175						
ANR	8662074	Symbol	PNG_COLOR_MASK_COLOR		8661175						
ANR	8662075	Symbol	dp -> this . is_transparent		8661175						
ANR	8662076	Symbol	blue_sBIT		8661175						
ANR	8662077	Symbol	alpha_sBIT		8661175						
ANR	8662078	Symbol	npalette		8661175						
ANR	8662079	Symbol	* dp -> this		8661175						
ANR	8662080	Symbol	r		8661175						
ANR	8662081	Symbol	in_pixel . red		8661175						
ANR	8662082	Symbol	in_pixel . alpha		8661175						
ANR	8662083	Symbol	w		8661175						
ANR	8662084	Symbol	in_pixel . have_tRNS		8661175						
ANR	8662085	Symbol	x		8661175						
ANR	8662086	Symbol	in_pixel . green		8661175						
ANR	8662087	Symbol	pi		8661175						
ANR	8662088	Symbol	y		8661175						
ANR	8662089	Symbol	out_pixel . blue		8661175						
ANR	8662090	Symbol	in_pixel . bluee		8661175						
ANR	8662091	Symbol	* * dp		8661175						
ANR	8662092	Symbol	in_pixel . bluef		8661175						
ANR	8662093	Symbol	in_sample_depth		8661175						
ANR	8662094	Symbol	pRow		8661175						
ANR	8662095	Symbol	PNG_COLOR_TYPE_PALETTE		8661175						
ANR	8662096	Function	transform_end	6917:0:218610:218914							
ANR	8662097	FunctionDef	"transform_end (png_structp ppIn , png_infop pi)"		8662096	0					
ANR	8662098	CompoundStatement		6919:0:218677:218914	8662096	0					
ANR	8662099	IdentifierDeclStatement	png_const_structp pp = ppIn ;	6920:3:218682:218709	8662096	0	True				
ANR	8662100	IdentifierDecl	pp = ppIn		8662096	0					
ANR	8662101	IdentifierDeclType	png_const_structp		8662096	0					
ANR	8662102	Identifier	pp		8662096	1					
ANR	8662103	AssignmentExpression	pp = ppIn		8662096	2		=			
ANR	8662104	Identifier	ppIn		8662096	0					
ANR	8662105	Identifier	ppIn		8662096	1					
ANR	8662106	Statement	transform_display	6921:3:218714:218730	8662096	1	True				
ANR	8662107	Statement	*	6921:21:218732:218732	8662096	2	True				
ANR	8662108	Statement	dp	6921:22:218733:218734	8662096	3	True				
ANR	8662109	Statement	=	6921:25:218736:218736	8662096	4	True				
ANR	8662110	Statement	voidcast	6921:27:218738:218745	8662096	5	True				
ANR	8662111	Statement	(	6921:35:218746:218746	8662096	6	True				
ANR	8662112	Statement	transform_display	6921:36:218747:218763	8662096	7	True				
ANR	8662113	Statement	*	6921:53:218764:218764	8662096	8	True				
ANR	8662114	Statement	","	6921:54:218765:218765	8662096	9	True				
ANR	8662115	Statement	png_get_progressive_ptr	6922:6:218773:218795	8662096	10	True				
ANR	8662116	Statement	(	6922:29:218796:218796	8662096	11	True				
ANR	8662117	Statement	pp	6922:30:218797:218798	8662096	12	True				
ANR	8662118	Statement	)	6922:32:218799:218799	8662096	13	True				
ANR	8662119	Statement	)	6922:33:218800:218800	8662096	14	True				
ANR	8662120	ExpressionStatement		6922:34:218801:218801	8662096	15	True				
ANR	8662121	IfStatement	if ( ! dp -> this . speed )		8662096	16					
ANR	8662122	Condition	! dp -> this . speed	6924:7:218811:218825	8662096	0	True				
ANR	8662123	UnaryOperationExpression	! dp -> this . speed		8662096	0					
ANR	8662124	UnaryOperator	!		8662096	0					
ANR	8662125	MemberAccess	dp -> this . speed		8662096	1					
ANR	8662126	PtrMemberAccess	dp -> this		8662096	0					
ANR	8662127	Identifier	dp		8662096	0					
ANR	8662128	Identifier	this		8662096	1					
ANR	8662129	Identifier	speed		8662096	1					
ANR	8662130	ExpressionStatement	"transform_image_validate ( dp , pp , pi )"	6925:6:218834:218870	8662096	1	True				
ANR	8662131	CallExpression	"transform_image_validate ( dp , pp , pi )"		8662096	0					
ANR	8662132	Callee	transform_image_validate		8662096	0					
ANR	8662133	Identifier	transform_image_validate		8662096	0					
ANR	8662134	ArgumentList	dp		8662096	1					
ANR	8662135	Argument	dp		8662096	0					
ANR	8662136	Identifier	dp		8662096	0					
ANR	8662137	Argument	pp		8662096	1					
ANR	8662138	Identifier	pp		8662096	0					
ANR	8662139	Argument	pi		8662096	2					
ANR	8662140	Identifier	pi		8662096	0					
ANR	8662141	ElseStatement	else		8662096	0					
ANR	8662142	ExpressionStatement	dp -> this . ps -> validated = 1	6927:6:218886:218912	8662096	0	True				
ANR	8662143	AssignmentExpression	dp -> this . ps -> validated = 1		8662096	0		=			
ANR	8662144	PtrMemberAccess	dp -> this . ps -> validated		8662096	0					
ANR	8662145	MemberAccess	dp -> this . ps		8662096	0					
ANR	8662146	PtrMemberAccess	dp -> this		8662096	0					
ANR	8662147	Identifier	dp		8662096	0					
ANR	8662148	Identifier	this		8662096	1					
ANR	8662149	Identifier	ps		8662096	1					
ANR	8662150	Identifier	validated		8662096	1					
ANR	8662151	PrimaryExpression	1		8662096	1					
ANR	8662152	ReturnType	static void PNGCBAPI		8662096	1					
ANR	8662153	Identifier	transform_end		8662096	2					
ANR	8662154	ParameterList	"png_structp ppIn , png_infop pi"		8662096	3					
ANR	8662155	Parameter	png_structp ppIn	6918:14:218645:218660	8662096	0	True				
ANR	8662156	ParameterType	png_structp		8662096	0					
ANR	8662157	Identifier	ppIn		8662096	1					
ANR	8662158	Parameter	png_infop pi	6918:32:218663:218674	8662096	1	True				
ANR	8662159	ParameterType	png_infop		8662096	0					
ANR	8662160	Identifier	pi		8662096	1					
ANR	8662161	CFGEntryNode	ENTRY		8662096		True				
ANR	8662162	CFGExitNode	EXIT		8662096		True				
ANR	8662163	Symbol	pp		8662096						
ANR	8662164	Symbol	* dp -> this		8662096						
ANR	8662165	Symbol	ppIn		8662096						
ANR	8662166	Symbol	* dp		8662096						
ANR	8662167	Symbol	dp -> this . speed		8662096						
ANR	8662168	Symbol	* dp -> this . ps		8662096						
ANR	8662169	Symbol	dp -> this . ps		8662096						
ANR	8662170	Symbol	dp -> this . ps -> validated		8662096						
ANR	8662171	Symbol	pi		8662096						
ANR	8662172	Symbol	* * dp		8662096						
ANR	8662173	Symbol	dp		8662096						
ANR	8662174	Symbol	dp -> this		8662096						
ANR	8662175	DeclStmt									
ANR	8662176	Decl							transform_display	transform_display	d
ANR	8662177	DeclStmt									
ANR	8662178	Decl							size_t	size_t	pos
ANR	8662179	DeclStmt									
ANR	8662180	Decl							png_structp	png_structp	pp
ANR	8662181	DeclStmt									
ANR	8662182	Decl							png_infop	png_infop	pi
ANR	8662183	DeclStmt									
ANR	8662184	Decl							char	char [ 256 ]	full_name
ANR	8662185	DeclStmt									
ANR	8662186	Decl							char	char [ 256 ]	buffer
ANR	8662187	DeclStmt									
ANR	8662188	Decl							image_transform	image_transform ( name )	ITSTRUCT
ANR	8662189	Function	image_transform_default_ini	7037:0:221928:222099							
ANR	8662190	FunctionDef	"image_transform_default_ini (const image_transform * this , transform_display * that)"		8662189	0					
ANR	8662191	CompoundStatement		7040:0:222059:222099	8662189	0					
ANR	8662192	ExpressionStatement	"this -> next -> ini ( this -> next , that )"	7041:3:222064:222097	8662189	0	True				
ANR	8662193	CallExpression	"this -> next -> ini ( this -> next , that )"		8662189	0					
ANR	8662194	Callee	this -> next -> ini		8662189	0					
ANR	8662195	PtrMemberAccess	this -> next -> ini		8662189	0					
ANR	8662196	PtrMemberAccess	this -> next		8662189	0					
ANR	8662197	Identifier	this		8662189	0					
ANR	8662198	Identifier	next		8662189	1					
ANR	8662199	Identifier	ini		8662189	1					
ANR	8662200	ArgumentList	this -> next		8662189	1					
ANR	8662201	Argument	this -> next		8662189	0					
ANR	8662202	PtrMemberAccess	this -> next		8662189	0					
ANR	8662203	Identifier	this		8662189	0					
ANR	8662204	Identifier	next		8662189	1					
ANR	8662205	Argument	that		8662189	1					
ANR	8662206	Identifier	that		8662189	0					
ANR	8662207	ReturnType	void		8662189	1					
ANR	8662208	Identifier	image_transform_default_ini		8662189	2					
ANR	8662209	ParameterList	"const image_transform * this , transform_display * that"		8662189	3					
ANR	8662210	Parameter	const image_transform * this	7038:28:222001:222027	8662189	0	True				
ANR	8662211	ParameterType	const image_transform *		8662189	0					
ANR	8662212	Identifier	this		8662189	1					
ANR	8662213	Parameter	transform_display * that	7039:4:222034:222056	8662189	1	True				
ANR	8662214	ParameterType	transform_display *		8662189	0					
ANR	8662215	Identifier	that		8662189	1					
ANR	8662216	CFGEntryNode	ENTRY		8662189		True				
ANR	8662217	CFGExitNode	EXIT		8662189		True				
ANR	8662218	Symbol	* this		8662189						
ANR	8662219	Symbol	that		8662189						
ANR	8662220	Symbol	this -> next		8662189						
ANR	8662221	Symbol	this		8662189						
ANR	8662222	Function	image_transform_default_add	7045:0:222139:222378							
ANR	8662223	FunctionDef	"image_transform_default_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8662222	0					
ANR	8662224	CompoundStatement		7048:0:222277:222378	8662222	0					
ANR	8662225	Statement	UNUSED	7049:3:222282:222287	8662222	0	True				
ANR	8662226	Statement	(	7049:9:222288:222288	8662222	1	True				
ANR	8662227	Statement	colour_type	7049:10:222289:222299	8662222	2	True				
ANR	8662228	Statement	)	7049:21:222300:222300	8662222	3	True				
ANR	8662229	Statement	UNUSED	7050:3:222305:222310	8662222	4	True				
ANR	8662230	ExpressionStatement	( bit_depth ) this -> next = * that	7050:9:222311:222345	8662222	5	True				
ANR	8662231	AssignmentExpression	( bit_depth ) this -> next = * that		8662222	0		=			
ANR	8662232	CastExpression	( bit_depth ) this -> next		8662222	0					
ANR	8662233	CastTarget	bit_depth		8662222	0					
ANR	8662234	PtrMemberAccess	this -> next		8662222	1					
ANR	8662235	Identifier	this		8662222	0					
ANR	8662236	Identifier	next		8662222	1					
ANR	8662237	UnaryOperationExpression	* that		8662222	1					
ANR	8662238	UnaryOperator	*		8662222	0					
ANR	8662239	Identifier	that		8662222	1					
ANR	8662240	ExpressionStatement	* that = this	7053:3:222350:222362	8662222	6	True				
ANR	8662241	AssignmentExpression	* that = this		8662222	0		=			
ANR	8662242	UnaryOperationExpression	* that		8662222	0					
ANR	8662243	UnaryOperator	*		8662222	0					
ANR	8662244	Identifier	that		8662222	1					
ANR	8662245	Identifier	this		8662222	1					
ANR	8662246	ReturnStatement	return 1 ;	7055:3:222368:222376	8662222	7	True				
ANR	8662247	PrimaryExpression	1		8662222	0					
ANR	8662248	ReturnType	static int		8662222	1					
ANR	8662249	Identifier	image_transform_default_add		8662222	2					
ANR	8662250	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8662222	3					
ANR	8662251	Parameter	image_transform * this	7046:28:222178:222198	8662222	0	True				
ANR	8662252	ParameterType	image_transform *		8662222	0					
ANR	8662253	Identifier	this		8662222	1					
ANR	8662254	Parameter	const image_transform * * that	7047:4:222205:222232	8662222	1	True				
ANR	8662255	ParameterType	const image_transform * *		8662222	0					
ANR	8662256	Identifier	that		8662222	1					
ANR	8662257	Parameter	png_byte colour_type	7047:34:222235:222254	8662222	2	True				
ANR	8662258	ParameterType	png_byte		8662222	0					
ANR	8662259	Identifier	colour_type		8662222	1					
ANR	8662260	Parameter	png_byte bit_depth	7047:56:222257:222274	8662222	3	True				
ANR	8662261	ParameterType	png_byte		8662222	0					
ANR	8662262	Identifier	bit_depth		8662222	1					
ANR	8662263	CFGEntryNode	ENTRY		8662222		True				
ANR	8662264	CFGExitNode	EXIT		8662222		True				
ANR	8662265	Symbol	colour_type		8662222						
ANR	8662266	Symbol	* this		8662222						
ANR	8662267	Symbol	that		8662222						
ANR	8662268	Symbol	this -> next		8662222						
ANR	8662269	Symbol	this		8662222						
ANR	8662270	Symbol	* that		8662222						
ANR	8662271	Symbol	bit_depth		8662222						
ANR	8662272	Function	image_transform_png_set_palette_to_rgb_set	7061:0:222450:222672							
ANR	8662273	FunctionDef	"image_transform_png_set_palette_to_rgb_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8662272	0					
ANR	8662274	CompoundStatement		7064:0:222593:222672	8662272	0					
ANR	8662275	ExpressionStatement	png_set_palette_to_rgb ( pp )	7065:3:222598:222624	8662272	0	True				
ANR	8662276	CallExpression	png_set_palette_to_rgb ( pp )		8662272	0					
ANR	8662277	Callee	png_set_palette_to_rgb		8662272	0					
ANR	8662278	Identifier	png_set_palette_to_rgb		8662272	0					
ANR	8662279	ArgumentList	pp		8662272	1					
ANR	8662280	Argument	pp		8662272	0					
ANR	8662281	Identifier	pp		8662272	0					
ANR	8662282	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7066:3:222629:222670	8662272	1	True				
ANR	8662283	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8662272	0					
ANR	8662284	Callee	this -> next -> set		8662272	0					
ANR	8662285	PtrMemberAccess	this -> next -> set		8662272	0					
ANR	8662286	PtrMemberAccess	this -> next		8662272	0					
ANR	8662287	Identifier	this		8662272	0					
ANR	8662288	Identifier	next		8662272	1					
ANR	8662289	Identifier	set		8662272	1					
ANR	8662290	ArgumentList	this -> next		8662272	1					
ANR	8662291	Argument	this -> next		8662272	0					
ANR	8662292	PtrMemberAccess	this -> next		8662272	0					
ANR	8662293	Identifier	this		8662272	0					
ANR	8662294	Identifier	next		8662272	1					
ANR	8662295	Argument	that		8662272	1					
ANR	8662296	Identifier	that		8662272	0					
ANR	8662297	Argument	pp		8662272	2					
ANR	8662298	Identifier	pp		8662272	0					
ANR	8662299	Argument	pi		8662272	3					
ANR	8662300	Identifier	pi		8662272	0					
ANR	8662301	ReturnType	static void		8662272	1					
ANR	8662302	Identifier	image_transform_png_set_palette_to_rgb_set		8662272	2					
ANR	8662303	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8662272	3					
ANR	8662304	Parameter	const image_transform * this	7062:43:222505:222531	8662272	0	True				
ANR	8662305	ParameterType	const image_transform *		8662272	0					
ANR	8662306	Identifier	this		8662272	1					
ANR	8662307	Parameter	transform_display * that	7063:4:222538:222560	8662272	1	True				
ANR	8662308	ParameterType	transform_display *		8662272	0					
ANR	8662309	Identifier	that		8662272	1					
ANR	8662310	Parameter	png_structp pp	7063:29:222563:222576	8662272	2	True				
ANR	8662311	ParameterType	png_structp		8662272	0					
ANR	8662312	Identifier	pp		8662272	1					
ANR	8662313	Parameter	png_infop pi	7063:45:222579:222590	8662272	3	True				
ANR	8662314	ParameterType	png_infop		8662272	0					
ANR	8662315	Identifier	pi		8662272	1					
ANR	8662316	CFGEntryNode	ENTRY		8662272		True				
ANR	8662317	CFGExitNode	EXIT		8662272		True				
ANR	8662318	Symbol	pp		8662272						
ANR	8662319	Symbol	* this		8662272						
ANR	8662320	Symbol	that		8662272						
ANR	8662321	Symbol	this -> next		8662272						
ANR	8662322	Symbol	this		8662272						
ANR	8662323	Symbol	pi		8662272						
ANR	8662324	Function	image_transform_png_set_palette_to_rgb_mod	7069:0:222675:222986							
ANR	8662325	FunctionDef	"image_transform_png_set_palette_to_rgb_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8662324	0					
ANR	8662326	CompoundStatement		7073:0:222842:222986	8662324	0					
ANR	8662327	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_PALETTE )		8662324	0					
ANR	8662328	Condition	that -> colour_type == PNG_COLOR_TYPE_PALETTE	7074:7:222851:222893	8662324	0	True				
ANR	8662329	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_PALETTE		8662324	0		==			
ANR	8662330	PtrMemberAccess	that -> colour_type		8662324	0					
ANR	8662331	Identifier	that		8662324	0					
ANR	8662332	Identifier	colour_type		8662324	1					
ANR	8662333	Identifier	PNG_COLOR_TYPE_PALETTE		8662324	1					
ANR	8662334	ExpressionStatement	image_pixel_convert_PLTE ( that )	7075:6:222902:222932	8662324	1	True				
ANR	8662335	CallExpression	image_pixel_convert_PLTE ( that )		8662324	0					
ANR	8662336	Callee	image_pixel_convert_PLTE		8662324	0					
ANR	8662337	Identifier	image_pixel_convert_PLTE		8662324	0					
ANR	8662338	ArgumentList	that		8662324	1					
ANR	8662339	Argument	that		8662324	0					
ANR	8662340	Identifier	that		8662324	0					
ANR	8662341	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7077:3:222938:222984	8662324	1	True				
ANR	8662342	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8662324	0					
ANR	8662343	Callee	this -> next -> mod		8662324	0					
ANR	8662344	PtrMemberAccess	this -> next -> mod		8662324	0					
ANR	8662345	PtrMemberAccess	this -> next		8662324	0					
ANR	8662346	Identifier	this		8662324	0					
ANR	8662347	Identifier	next		8662324	1					
ANR	8662348	Identifier	mod		8662324	1					
ANR	8662349	ArgumentList	this -> next		8662324	1					
ANR	8662350	Argument	this -> next		8662324	0					
ANR	8662351	PtrMemberAccess	this -> next		8662324	0					
ANR	8662352	Identifier	this		8662324	0					
ANR	8662353	Identifier	next		8662324	1					
ANR	8662354	Argument	that		8662324	1					
ANR	8662355	Identifier	that		8662324	0					
ANR	8662356	Argument	pp		8662324	2					
ANR	8662357	Identifier	pp		8662324	0					
ANR	8662358	Argument	display		8662324	3					
ANR	8662359	Identifier	display		8662324	0					
ANR	8662360	ReturnType	static void		8662324	1					
ANR	8662361	Identifier	image_transform_png_set_palette_to_rgb_mod		8662324	2					
ANR	8662362	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8662324	3					
ANR	8662363	Parameter	const image_transform * this	7070:43:222730:222756	8662324	0	True				
ANR	8662364	ParameterType	const image_transform *		8662324	0					
ANR	8662365	Identifier	this		8662324	1					
ANR	8662366	Parameter	image_pixel * that	7071:4:222763:222779	8662324	1	True				
ANR	8662367	ParameterType	image_pixel *		8662324	0					
ANR	8662368	Identifier	that		8662324	1					
ANR	8662369	Parameter	png_const_structp pp	7071:23:222782:222801	8662324	2	True				
ANR	8662370	ParameterType	png_const_structp		8662324	0					
ANR	8662371	Identifier	pp		8662324	1					
ANR	8662372	Parameter	const transform_display * display	7072:4:222808:222839	8662324	3	True				
ANR	8662373	ParameterType	const transform_display *		8662324	0					
ANR	8662374	Identifier	display		8662324	1					
ANR	8662375	CFGEntryNode	ENTRY		8662324		True				
ANR	8662376	CFGExitNode	EXIT		8662324		True				
ANR	8662377	Symbol	pp		8662324						
ANR	8662378	Symbol	* this		8662324						
ANR	8662379	Symbol	that		8662324						
ANR	8662380	Symbol	that -> colour_type		8662324						
ANR	8662381	Symbol	this -> next		8662324						
ANR	8662382	Symbol	display		8662324						
ANR	8662383	Symbol	this		8662324						
ANR	8662384	Symbol	* that		8662324						
ANR	8662385	Symbol	PNG_COLOR_TYPE_PALETTE		8662324						
ANR	8662386	Function	image_transform_png_set_palette_to_rgb_add	7080:0:222989:223256							
ANR	8662387	FunctionDef	"image_transform_png_set_palette_to_rgb_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8662386	0					
ANR	8662388	CompoundStatement		7083:0:223142:223256	8662386	0					
ANR	8662389	Statement	UNUSED	7084:3:223147:223152	8662386	0	True				
ANR	8662390	ExpressionStatement	( bit_depth ) this -> next = * that	7084:9:223153:223187	8662386	1	True				
ANR	8662391	AssignmentExpression	( bit_depth ) this -> next = * that		8662386	0		=			
ANR	8662392	CastExpression	( bit_depth ) this -> next		8662386	0					
ANR	8662393	CastTarget	bit_depth		8662386	0					
ANR	8662394	PtrMemberAccess	this -> next		8662386	1					
ANR	8662395	Identifier	this		8662386	0					
ANR	8662396	Identifier	next		8662386	1					
ANR	8662397	UnaryOperationExpression	* that		8662386	1					
ANR	8662398	UnaryOperator	*		8662386	0					
ANR	8662399	Identifier	that		8662386	1					
ANR	8662400	ExpressionStatement	* that = this	7087:3:223192:223204	8662386	2	True				
ANR	8662401	AssignmentExpression	* that = this		8662386	0		=			
ANR	8662402	UnaryOperationExpression	* that		8662386	0					
ANR	8662403	UnaryOperator	*		8662386	0					
ANR	8662404	Identifier	that		8662386	1					
ANR	8662405	Identifier	this		8662386	1					
ANR	8662406	ReturnStatement	return colour_type == PNG_COLOR_TYPE_PALETTE ;	7089:3:223210:223254	8662386	3	True				
ANR	8662407	EqualityExpression	colour_type == PNG_COLOR_TYPE_PALETTE		8662386	0		==			
ANR	8662408	Identifier	colour_type		8662386	0					
ANR	8662409	Identifier	PNG_COLOR_TYPE_PALETTE		8662386	1					
ANR	8662410	ReturnType	static int		8662386	1					
ANR	8662411	Identifier	image_transform_png_set_palette_to_rgb_add		8662386	2					
ANR	8662412	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8662386	3					
ANR	8662413	Parameter	image_transform * this	7081:43:223043:223063	8662386	0	True				
ANR	8662414	ParameterType	image_transform *		8662386	0					
ANR	8662415	Identifier	this		8662386	1					
ANR	8662416	Parameter	const image_transform * * that	7082:4:223070:223097	8662386	1	True				
ANR	8662417	ParameterType	const image_transform * *		8662386	0					
ANR	8662418	Identifier	that		8662386	1					
ANR	8662419	Parameter	png_byte colour_type	7082:34:223100:223119	8662386	2	True				
ANR	8662420	ParameterType	png_byte		8662386	0					
ANR	8662421	Identifier	colour_type		8662386	1					
ANR	8662422	Parameter	png_byte bit_depth	7082:56:223122:223139	8662386	3	True				
ANR	8662423	ParameterType	png_byte		8662386	0					
ANR	8662424	Identifier	bit_depth		8662386	1					
ANR	8662425	CFGEntryNode	ENTRY		8662386		True				
ANR	8662426	CFGExitNode	EXIT		8662386		True				
ANR	8662427	Symbol	colour_type		8662386						
ANR	8662428	Symbol	* this		8662386						
ANR	8662429	Symbol	that		8662386						
ANR	8662430	Symbol	this -> next		8662386						
ANR	8662431	Symbol	this		8662386						
ANR	8662432	Symbol	* that		8662386						
ANR	8662433	Symbol	bit_depth		8662386						
ANR	8662434	Symbol	PNG_COLOR_TYPE_PALETTE		8662386						
ANR	8662435	Function	image_transform_png_set_tRNS_to_alpha_set	7099:0:223426:223838							
ANR	8662436	FunctionDef	"image_transform_png_set_tRNS_to_alpha_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8662435	0					
ANR	8662437	CompoundStatement		7102:0:223567:223838	8662435	0					
ANR	8662438	ExpressionStatement	png_set_tRNS_to_alpha ( pp )	7103:3:223572:223597	8662435	0	True				
ANR	8662439	CallExpression	png_set_tRNS_to_alpha ( pp )		8662435	0					
ANR	8662440	Callee	png_set_tRNS_to_alpha		8662435	0					
ANR	8662441	Identifier	png_set_tRNS_to_alpha		8662435	0					
ANR	8662442	ArgumentList	pp		8662435	1					
ANR	8662443	Argument	pp		8662435	0					
ANR	8662444	Identifier	pp		8662435	0					
ANR	8662445	IfStatement	if ( that -> this . has_tRNS )		8662435	1					
ANR	8662446	Condition	that -> this . has_tRNS	7108:7:223733:223751	8662435	0	True				
ANR	8662447	MemberAccess	that -> this . has_tRNS		8662435	0					
ANR	8662448	PtrMemberAccess	that -> this		8662435	0					
ANR	8662449	Identifier	that		8662435	0					
ANR	8662450	Identifier	this		8662435	1					
ANR	8662451	Identifier	has_tRNS		8662435	1					
ANR	8662452	ExpressionStatement	that -> this . is_transparent = 1	7109:6:223760:223789	8662435	1	True				
ANR	8662453	AssignmentExpression	that -> this . is_transparent = 1		8662435	0		=			
ANR	8662454	MemberAccess	that -> this . is_transparent		8662435	0					
ANR	8662455	PtrMemberAccess	that -> this		8662435	0					
ANR	8662456	Identifier	that		8662435	0					
ANR	8662457	Identifier	this		8662435	1					
ANR	8662458	Identifier	is_transparent		8662435	1					
ANR	8662459	PrimaryExpression	1		8662435	1					
ANR	8662460	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7111:3:223795:223836	8662435	2	True				
ANR	8662461	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8662435	0					
ANR	8662462	Callee	this -> next -> set		8662435	0					
ANR	8662463	PtrMemberAccess	this -> next -> set		8662435	0					
ANR	8662464	PtrMemberAccess	this -> next		8662435	0					
ANR	8662465	Identifier	this		8662435	0					
ANR	8662466	Identifier	next		8662435	1					
ANR	8662467	Identifier	set		8662435	1					
ANR	8662468	ArgumentList	this -> next		8662435	1					
ANR	8662469	Argument	this -> next		8662435	0					
ANR	8662470	PtrMemberAccess	this -> next		8662435	0					
ANR	8662471	Identifier	this		8662435	0					
ANR	8662472	Identifier	next		8662435	1					
ANR	8662473	Argument	that		8662435	1					
ANR	8662474	Identifier	that		8662435	0					
ANR	8662475	Argument	pp		8662435	2					
ANR	8662476	Identifier	pp		8662435	0					
ANR	8662477	Argument	pi		8662435	3					
ANR	8662478	Identifier	pi		8662435	0					
ANR	8662479	ReturnType	static void		8662435	1					
ANR	8662480	Identifier	image_transform_png_set_tRNS_to_alpha_set		8662435	2					
ANR	8662481	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8662435	3					
ANR	8662482	Parameter	const image_transform * this	7100:42:223480:223506	8662435	0	True				
ANR	8662483	ParameterType	const image_transform *		8662435	0					
ANR	8662484	Identifier	this		8662435	1					
ANR	8662485	Parameter	transform_display * that	7101:3:223512:223534	8662435	1	True				
ANR	8662486	ParameterType	transform_display *		8662435	0					
ANR	8662487	Identifier	that		8662435	1					
ANR	8662488	Parameter	png_structp pp	7101:28:223537:223550	8662435	2	True				
ANR	8662489	ParameterType	png_structp		8662435	0					
ANR	8662490	Identifier	pp		8662435	1					
ANR	8662491	Parameter	png_infop pi	7101:44:223553:223564	8662435	3	True				
ANR	8662492	ParameterType	png_infop		8662435	0					
ANR	8662493	Identifier	pi		8662435	1					
ANR	8662494	CFGEntryNode	ENTRY		8662435		True				
ANR	8662495	CFGExitNode	EXIT		8662435		True				
ANR	8662496	Symbol	pp		8662435						
ANR	8662497	Symbol	* this		8662435						
ANR	8662498	Symbol	that		8662435						
ANR	8662499	Symbol	that -> this . has_tRNS		8662435						
ANR	8662500	Symbol	that -> this		8662435						
ANR	8662501	Symbol	this -> next		8662435						
ANR	8662502	Symbol	that -> this . is_transparent		8662435						
ANR	8662503	Symbol	this		8662435						
ANR	8662504	Symbol	pi		8662435						
ANR	8662505	Symbol	* that		8662435						
ANR	8662506	Function	image_transform_png_set_tRNS_to_alpha_mod	7114:0:223841:224874							
ANR	8662507	FunctionDef	"image_transform_png_set_tRNS_to_alpha_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8662506	0					
ANR	8662508	CompoundStatement		7118:0:224005:224874	8662506	0					
ANR	8662509	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_PALETTE )		8662506	0					
ANR	8662510	Condition	that -> colour_type == PNG_COLOR_TYPE_PALETTE	7121:7:224104:224146	8662506	0	True				
ANR	8662511	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_PALETTE		8662506	0		==			
ANR	8662512	PtrMemberAccess	that -> colour_type		8662506	0					
ANR	8662513	Identifier	that		8662506	0					
ANR	8662514	Identifier	colour_type		8662506	1					
ANR	8662515	Identifier	PNG_COLOR_TYPE_PALETTE		8662506	1					
ANR	8662516	ExpressionStatement	image_pixel_convert_PLTE ( that )	7122:6:224155:224185	8662506	1	True				
ANR	8662517	CallExpression	image_pixel_convert_PLTE ( that )		8662506	0					
ANR	8662518	Callee	image_pixel_convert_PLTE		8662506	0					
ANR	8662519	Identifier	image_pixel_convert_PLTE		8662506	0					
ANR	8662520	ArgumentList	that		8662506	1					
ANR	8662521	Argument	that		8662506	0					
ANR	8662522	Identifier	that		8662506	0					
ANR	8662523	IfStatement	if ( that -> have_tRNS )		8662506	1					
ANR	8662524	Condition	that -> have_tRNS	7128:7:224322:224336	8662506	0	True				
ANR	8662525	PtrMemberAccess	that -> have_tRNS		8662506	0					
ANR	8662526	Identifier	that		8662506	0					
ANR	8662527	Identifier	have_tRNS		8662506	1					
ANR	8662528	Statement	if	7129:6:224345:224346	8662506	1	True				
ANR	8662529	Statement	PNG_LIBPNG_VER	7129:9:224348:224361	8662506	2	True				
ANR	8662530	Statement	>=	7129:24:224363:224364	8662506	3	True				
ANR	8662531	Statement	10700	7129:27:224366:224370	8662506	4	True				
ANR	8662532	IfStatement	if ( that -> colour_type != PNG_COLOR_TYPE_PALETTE && ( that -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0 )		8662506	5					
ANR	8662533	Condition	that -> colour_type != PNG_COLOR_TYPE_PALETTE && ( that -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0	7130:13:224385:224491	8662506	0	True				
ANR	8662534	AndExpression	that -> colour_type != PNG_COLOR_TYPE_PALETTE && ( that -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8662506	0		&&			
ANR	8662535	EqualityExpression	that -> colour_type != PNG_COLOR_TYPE_PALETTE		8662506	0		!=			
ANR	8662536	PtrMemberAccess	that -> colour_type		8662506	0					
ANR	8662537	Identifier	that		8662506	0					
ANR	8662538	Identifier	colour_type		8662506	1					
ANR	8662539	Identifier	PNG_COLOR_TYPE_PALETTE		8662506	1					
ANR	8662540	EqualityExpression	( that -> colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8662506	1		==			
ANR	8662541	BitAndExpression	that -> colour_type & PNG_COLOR_MASK_ALPHA		8662506	0		&			
ANR	8662542	PtrMemberAccess	that -> colour_type		8662506	0					
ANR	8662543	Identifier	that		8662506	0					
ANR	8662544	Identifier	colour_type		8662506	1					
ANR	8662545	Identifier	PNG_COLOR_MASK_ALPHA		8662506	1					
ANR	8662546	PrimaryExpression	0		8662506	1					
ANR	8662547	IdentifierDeclStatement	"endif image_pixel_add_alpha ( that , & display -> this , 0 ) ;"	7132:6:224500:224577	8662506	1	True				
ANR	8662548	IdentifierDecl	"image_pixel_add_alpha ( that , & display -> this , 0 )"		8662506	0					
ANR	8662549	IdentifierDeclType	endif		8662506	0					
ANR	8662550	Identifier	image_pixel_add_alpha		8662506	1					
ANR	8662551	Expression	"that , & display -> this , 0"		8662506	2					
ANR	8662552	Identifier	that		8662506	0					
ANR	8662553	Expression	"& display -> this , 0"		8662506	1					
ANR	8662554	UnaryOperationExpression	& display -> this		8662506	0					
ANR	8662555	UnaryOperator	&		8662506	0					
ANR	8662556	PtrMemberAccess	display -> this		8662506	1					
ANR	8662557	Identifier	display		8662506	0					
ANR	8662558	Identifier	this		8662506	1					
ANR	8662559	PrimaryExpression	0		8662506	1					
ANR	8662560	ElseStatement	else		8662506	0					
ANR	8662561	CompoundStatement		21:3:675:675	8662506	0					
ANR	8662562	IfStatement	if ( that -> bit_depth < 8 )		8662506	0					
ANR	8662563	Condition	that -> bit_depth < 8	7139:10:224693:224711	8662506	0	True				
ANR	8662564	RelationalExpression	that -> bit_depth < 8		8662506	0		<			
ANR	8662565	PtrMemberAccess	that -> bit_depth		8662506	0					
ANR	8662566	Identifier	that		8662506	0					
ANR	8662567	Identifier	bit_depth		8662506	1					
ANR	8662568	PrimaryExpression	8		8662506	1					
ANR	8662569	ExpressionStatement	that -> bit_depth = 8	7140:9:224723:224741	8662506	1	True				
ANR	8662570	AssignmentExpression	that -> bit_depth = 8		8662506	0		=			
ANR	8662571	PtrMemberAccess	that -> bit_depth		8662506	0					
ANR	8662572	Identifier	that		8662506	0					
ANR	8662573	Identifier	bit_depth		8662506	1					
ANR	8662574	PrimaryExpression	8		8662506	1					
ANR	8662575	IfStatement	if ( that -> sample_depth < 8 )		8662506	1					
ANR	8662576	Condition	that -> sample_depth < 8	7141:10:224753:224774	8662506	0	True				
ANR	8662577	RelationalExpression	that -> sample_depth < 8		8662506	0		<			
ANR	8662578	PtrMemberAccess	that -> sample_depth		8662506	0					
ANR	8662579	Identifier	that		8662506	0					
ANR	8662580	Identifier	sample_depth		8662506	1					
ANR	8662581	PrimaryExpression	8		8662506	1					
ANR	8662582	ExpressionStatement	that -> sample_depth = 8	7142:9:224786:224808	8662506	1	True				
ANR	8662583	AssignmentExpression	that -> sample_depth = 8		8662506	0		=			
ANR	8662584	PtrMemberAccess	that -> sample_depth		8662506	0					
ANR	8662585	Identifier	that		8662506	0					
ANR	8662586	Identifier	sample_depth		8662506	1					
ANR	8662587	PrimaryExpression	8		8662506	1					
ANR	8662588	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7146:3:224826:224872	8662506	6	True				
ANR	8662589	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8662506	0					
ANR	8662590	Callee	this -> next -> mod		8662506	0					
ANR	8662591	PtrMemberAccess	this -> next -> mod		8662506	0					
ANR	8662592	PtrMemberAccess	this -> next		8662506	0					
ANR	8662593	Identifier	this		8662506	0					
ANR	8662594	Identifier	next		8662506	1					
ANR	8662595	Identifier	mod		8662506	1					
ANR	8662596	ArgumentList	this -> next		8662506	1					
ANR	8662597	Argument	this -> next		8662506	0					
ANR	8662598	PtrMemberAccess	this -> next		8662506	0					
ANR	8662599	Identifier	this		8662506	0					
ANR	8662600	Identifier	next		8662506	1					
ANR	8662601	Argument	that		8662506	1					
ANR	8662602	Identifier	that		8662506	0					
ANR	8662603	Argument	pp		8662506	2					
ANR	8662604	Identifier	pp		8662506	0					
ANR	8662605	Argument	display		8662506	3					
ANR	8662606	Identifier	display		8662506	0					
ANR	8662607	ReturnType	static void		8662506	1					
ANR	8662608	Identifier	image_transform_png_set_tRNS_to_alpha_mod		8662506	2					
ANR	8662609	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8662506	3					
ANR	8662610	Parameter	const image_transform * this	7115:42:223895:223921	8662506	0	True				
ANR	8662611	ParameterType	const image_transform *		8662506	0					
ANR	8662612	Identifier	this		8662506	1					
ANR	8662613	Parameter	image_pixel * that	7116:3:223927:223943	8662506	1	True				
ANR	8662614	ParameterType	image_pixel *		8662506	0					
ANR	8662615	Identifier	that		8662506	1					
ANR	8662616	Parameter	png_const_structp pp	7116:22:223946:223965	8662506	2	True				
ANR	8662617	ParameterType	png_const_structp		8662506	0					
ANR	8662618	Identifier	pp		8662506	1					
ANR	8662619	Parameter	const transform_display * display	7117:3:223971:224002	8662506	3	True				
ANR	8662620	ParameterType	const transform_display *		8662506	0					
ANR	8662621	Identifier	display		8662506	1					
ANR	8662622	CFGEntryNode	ENTRY		8662506		True				
ANR	8662623	CFGExitNode	EXIT		8662506		True				
ANR	8662624	Symbol	pp		8662506						
ANR	8662625	Symbol	this -> next		8662506						
ANR	8662626	Symbol	display		8662506						
ANR	8662627	Symbol	this		8662506						
ANR	8662628	Symbol	that -> bit_depth		8662506						
ANR	8662629	Symbol	* this		8662506						
ANR	8662630	Symbol	that		8662506						
ANR	8662631	Symbol	that -> colour_type		8662506						
ANR	8662632	Symbol	that -> have_tRNS		8662506						
ANR	8662633	Symbol	PNG_COLOR_MASK_ALPHA		8662506						
ANR	8662634	Symbol	* that		8662506						
ANR	8662635	Symbol	that -> sample_depth		8662506						
ANR	8662636	Symbol	image_pixel_add_alpha		8662506						
ANR	8662637	Symbol	PNG_COLOR_TYPE_PALETTE		8662506						
ANR	8662638	Function	image_transform_png_set_tRNS_to_alpha_add	7149:0:224877:225506							
ANR	8662639	FunctionDef	"image_transform_png_set_tRNS_to_alpha_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8662638	0					
ANR	8662640	CompoundStatement		7152:0:225029:225506	8662638	0					
ANR	8662641	Statement	UNUSED	7153:3:225034:225039	8662638	0	True				
ANR	8662642	ExpressionStatement	( bit_depth ) this -> next = * that	7153:9:225040:225074	8662638	1	True				
ANR	8662643	AssignmentExpression	( bit_depth ) this -> next = * that		8662638	0		=			
ANR	8662644	CastExpression	( bit_depth ) this -> next		8662638	0					
ANR	8662645	CastTarget	bit_depth		8662638	0					
ANR	8662646	PtrMemberAccess	this -> next		8662638	1					
ANR	8662647	Identifier	this		8662638	0					
ANR	8662648	Identifier	next		8662638	1					
ANR	8662649	UnaryOperationExpression	* that		8662638	1					
ANR	8662650	UnaryOperator	*		8662638	0					
ANR	8662651	Identifier	that		8662638	1					
ANR	8662652	ExpressionStatement	* that = this	7156:3:225079:225091	8662638	2	True				
ANR	8662653	AssignmentExpression	* that = this		8662638	0		=			
ANR	8662654	UnaryOperationExpression	* that		8662638	0					
ANR	8662655	UnaryOperator	*		8662638	0					
ANR	8662656	Identifier	that		8662638	1					
ANR	8662657	Identifier	this		8662638	1					
ANR	8662658	Statement	return	7163:3:225367:225372	8662638	3	True				
ANR	8662659	Statement	if	7164:3:225377:225378	8662638	4	True				
ANR	8662660	Statement	PNG_LIBPNG_VER	7164:6:225380:225393	8662638	5	True				
ANR	8662661	Statement	>=	7164:21:225395:225396	8662638	6	True				
ANR	8662662	Statement	10700	7164:24:225398:225402	8662638	7	True				
ANR	8662663	ExpressionStatement	colour_type != PNG_COLOR_TYPE_PALETTE && endif ( colour_type & PNG_COLOR_MASK_ALPHA ) == 0	7165:6:225410:225504	8662638	8	True				
ANR	8662664	AndExpression	colour_type != PNG_COLOR_TYPE_PALETTE && endif ( colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8662638	0		&&			
ANR	8662665	EqualityExpression	colour_type != PNG_COLOR_TYPE_PALETTE		8662638	0		!=			
ANR	8662666	Identifier	colour_type		8662638	0					
ANR	8662667	Identifier	PNG_COLOR_TYPE_PALETTE		8662638	1					
ANR	8662668	EqualityExpression	endif ( colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8662638	1		==			
ANR	8662669	CallExpression	endif ( colour_type & PNG_COLOR_MASK_ALPHA )		8662638	0					
ANR	8662670	Callee	endif		8662638	0					
ANR	8662671	Identifier	endif		8662638	0					
ANR	8662672	ArgumentList	colour_type & PNG_COLOR_MASK_ALPHA		8662638	1					
ANR	8662673	Argument	colour_type & PNG_COLOR_MASK_ALPHA		8662638	0					
ANR	8662674	BitAndExpression	colour_type & PNG_COLOR_MASK_ALPHA		8662638	0		&			
ANR	8662675	Identifier	colour_type		8662638	0					
ANR	8662676	Identifier	PNG_COLOR_MASK_ALPHA		8662638	1					
ANR	8662677	PrimaryExpression	0		8662638	1					
ANR	8662678	ReturnType	static int		8662638	1					
ANR	8662679	Identifier	image_transform_png_set_tRNS_to_alpha_add		8662638	2					
ANR	8662680	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8662638	3					
ANR	8662681	Parameter	image_transform * this	7150:42:224930:224950	8662638	0	True				
ANR	8662682	ParameterType	image_transform *		8662638	0					
ANR	8662683	Identifier	this		8662638	1					
ANR	8662684	Parameter	const image_transform * * that	7151:4:224957:224984	8662638	1	True				
ANR	8662685	ParameterType	const image_transform * *		8662638	0					
ANR	8662686	Identifier	that		8662638	1					
ANR	8662687	Parameter	png_byte colour_type	7151:34:224987:225006	8662638	2	True				
ANR	8662688	ParameterType	png_byte		8662638	0					
ANR	8662689	Identifier	colour_type		8662638	1					
ANR	8662690	Parameter	png_byte bit_depth	7151:56:225009:225026	8662638	3	True				
ANR	8662691	ParameterType	png_byte		8662638	0					
ANR	8662692	Identifier	bit_depth		8662638	1					
ANR	8662693	CFGEntryNode	ENTRY		8662638		True				
ANR	8662694	CFGExitNode	EXIT		8662638		True				
ANR	8662695	Symbol	colour_type		8662638						
ANR	8662696	Symbol	* this		8662638						
ANR	8662697	Symbol	that		8662638						
ANR	8662698	Symbol	this -> next		8662638						
ANR	8662699	Symbol	PNG_COLOR_MASK_ALPHA		8662638						
ANR	8662700	Symbol	this		8662638						
ANR	8662701	Symbol	* that		8662638						
ANR	8662702	Symbol	bit_depth		8662638						
ANR	8662703	Function	image_transform_png_set_gray_to_rgb_set	7177:0:225677:225947							
ANR	8662704	FunctionDef	"image_transform_png_set_gray_to_rgb_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8662703	0					
ANR	8662705	CompoundStatement		7180:0:225817:225947	8662703	0					
ANR	8662706	ExpressionStatement	png_set_gray_to_rgb ( pp )	7181:3:225822:225845	8662703	0	True				
ANR	8662707	CallExpression	png_set_gray_to_rgb ( pp )		8662703	0					
ANR	8662708	Callee	png_set_gray_to_rgb		8662703	0					
ANR	8662709	Identifier	png_set_gray_to_rgb		8662703	0					
ANR	8662710	ArgumentList	pp		8662703	1					
ANR	8662711	Argument	pp		8662703	0					
ANR	8662712	Identifier	pp		8662703	0					
ANR	8662713	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7183:3:225904:225945	8662703	1	True				
ANR	8662714	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8662703	0					
ANR	8662715	Callee	this -> next -> set		8662703	0					
ANR	8662716	PtrMemberAccess	this -> next -> set		8662703	0					
ANR	8662717	PtrMemberAccess	this -> next		8662703	0					
ANR	8662718	Identifier	this		8662703	0					
ANR	8662719	Identifier	next		8662703	1					
ANR	8662720	Identifier	set		8662703	1					
ANR	8662721	ArgumentList	this -> next		8662703	1					
ANR	8662722	Argument	this -> next		8662703	0					
ANR	8662723	PtrMemberAccess	this -> next		8662703	0					
ANR	8662724	Identifier	this		8662703	0					
ANR	8662725	Identifier	next		8662703	1					
ANR	8662726	Argument	that		8662703	1					
ANR	8662727	Identifier	that		8662703	0					
ANR	8662728	Argument	pp		8662703	2					
ANR	8662729	Identifier	pp		8662703	0					
ANR	8662730	Argument	pi		8662703	3					
ANR	8662731	Identifier	pi		8662703	0					
ANR	8662732	ReturnType	static void		8662703	1					
ANR	8662733	Identifier	image_transform_png_set_gray_to_rgb_set		8662703	2					
ANR	8662734	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8662703	3					
ANR	8662735	Parameter	const image_transform * this	7178:40:225729:225755	8662703	0	True				
ANR	8662736	ParameterType	const image_transform *		8662703	0					
ANR	8662737	Identifier	this		8662703	1					
ANR	8662738	Parameter	transform_display * that	7179:4:225762:225784	8662703	1	True				
ANR	8662739	ParameterType	transform_display *		8662703	0					
ANR	8662740	Identifier	that		8662703	1					
ANR	8662741	Parameter	png_structp pp	7179:29:225787:225800	8662703	2	True				
ANR	8662742	ParameterType	png_structp		8662703	0					
ANR	8662743	Identifier	pp		8662703	1					
ANR	8662744	Parameter	png_infop pi	7179:45:225803:225814	8662703	3	True				
ANR	8662745	ParameterType	png_infop		8662703	0					
ANR	8662746	Identifier	pi		8662703	1					
ANR	8662747	CFGEntryNode	ENTRY		8662703		True				
ANR	8662748	CFGExitNode	EXIT		8662703		True				
ANR	8662749	Symbol	pp		8662703						
ANR	8662750	Symbol	* this		8662703						
ANR	8662751	Symbol	that		8662703						
ANR	8662752	Symbol	this -> next		8662703						
ANR	8662753	Symbol	this		8662703						
ANR	8662754	Symbol	pi		8662703						
ANR	8662755	Function	image_transform_png_set_gray_to_rgb_mod	7186:0:225950:227197							
ANR	8662756	FunctionDef	"image_transform_png_set_gray_to_rgb_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8662755	0					
ANR	8662757	CompoundStatement		7190:0:226114:227197	8662755	0					
ANR	8662758	IfStatement	if ( ( that -> colour_type & PNG_COLOR_MASK_COLOR ) == 0 && that -> have_tRNS )		8662755	0					
ANR	8662759	Condition	( that -> colour_type & PNG_COLOR_MASK_COLOR ) == 0 && that -> have_tRNS	7196:7:226402:226467	8662755	0	True				
ANR	8662760	AndExpression	( that -> colour_type & PNG_COLOR_MASK_COLOR ) == 0 && that -> have_tRNS		8662755	0		&&			
ANR	8662761	EqualityExpression	( that -> colour_type & PNG_COLOR_MASK_COLOR ) == 0		8662755	0		==			
ANR	8662762	BitAndExpression	that -> colour_type & PNG_COLOR_MASK_COLOR		8662755	0		&			
ANR	8662763	PtrMemberAccess	that -> colour_type		8662755	0					
ANR	8662764	Identifier	that		8662755	0					
ANR	8662765	Identifier	colour_type		8662755	1					
ANR	8662766	Identifier	PNG_COLOR_MASK_COLOR		8662755	1					
ANR	8662767	PrimaryExpression	0		8662755	1					
ANR	8662768	PtrMemberAccess	that -> have_tRNS		8662755	1					
ANR	8662769	Identifier	that		8662755	0					
ANR	8662770	Identifier	have_tRNS		8662755	1					
ANR	8662771	ExpressionStatement	"image_pixel_add_alpha ( that , & display -> this , 0 )"	7197:6:226476:226541	8662755	1	True				
ANR	8662772	CallExpression	"image_pixel_add_alpha ( that , & display -> this , 0 )"		8662755	0					
ANR	8662773	Callee	image_pixel_add_alpha		8662755	0					
ANR	8662774	Identifier	image_pixel_add_alpha		8662755	0					
ANR	8662775	ArgumentList	that		8662755	1					
ANR	8662776	Argument	that		8662755	0					
ANR	8662777	Identifier	that		8662755	0					
ANR	8662778	Argument	& display -> this		8662755	1					
ANR	8662779	UnaryOperationExpression	& display -> this		8662755	0					
ANR	8662780	UnaryOperator	&		8662755	0					
ANR	8662781	PtrMemberAccess	display -> this		8662755	1					
ANR	8662782	Identifier	display		8662755	0					
ANR	8662783	Identifier	this		8662755	1					
ANR	8662784	Argument	0		8662755	2					
ANR	8662785	PrimaryExpression	0		8662755	0					
ANR	8662786	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_GRAY )		8662755	1					
ANR	8662787	Condition	that -> colour_type == PNG_COLOR_TYPE_GRAY	7200:7:226627:226666	8662755	0	True				
ANR	8662788	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GRAY		8662755	0		==			
ANR	8662789	PtrMemberAccess	that -> colour_type		8662755	0					
ANR	8662790	Identifier	that		8662755	0					
ANR	8662791	Identifier	colour_type		8662755	1					
ANR	8662792	Identifier	PNG_COLOR_TYPE_GRAY		8662755	1					
ANR	8662793	CompoundStatement		12:3:557:557	8662755	1					
ANR	8662794	IfStatement	if ( that -> bit_depth < 8 )		8662755	0					
ANR	8662795	Condition	that -> bit_depth < 8	7203:10:226746:226764	8662755	0	True				
ANR	8662796	RelationalExpression	that -> bit_depth < 8		8662755	0		<			
ANR	8662797	PtrMemberAccess	that -> bit_depth		8662755	0					
ANR	8662798	Identifier	that		8662755	0					
ANR	8662799	Identifier	bit_depth		8662755	1					
ANR	8662800	PrimaryExpression	8		8662755	1					
ANR	8662801	ExpressionStatement	that -> sample_depth = that -> bit_depth = 8	7204:9:226776:226816	8662755	1	True				
ANR	8662802	AssignmentExpression	that -> sample_depth = that -> bit_depth = 8		8662755	0		=			
ANR	8662803	PtrMemberAccess	that -> sample_depth		8662755	0					
ANR	8662804	Identifier	that		8662755	0					
ANR	8662805	Identifier	sample_depth		8662755	1					
ANR	8662806	AssignmentExpression	that -> bit_depth = 8		8662755	1		=			
ANR	8662807	PtrMemberAccess	that -> bit_depth		8662755	0					
ANR	8662808	Identifier	that		8662755	0					
ANR	8662809	Identifier	bit_depth		8662755	1					
ANR	8662810	PrimaryExpression	8		8662755	1					
ANR	8662811	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_RGB	7209:6:226987:227025	8662755	1	True				
ANR	8662812	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_RGB		8662755	0		=			
ANR	8662813	PtrMemberAccess	that -> colour_type		8662755	0					
ANR	8662814	Identifier	that		8662755	0					
ANR	8662815	Identifier	colour_type		8662755	1					
ANR	8662816	Identifier	PNG_COLOR_TYPE_RGB		8662755	1					
ANR	8662817	ElseStatement	else		8662755	0					
ANR	8662818	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA )		8662755	0					
ANR	8662819	Condition	that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA	7212:12:227045:227090	8662755	0	True				
ANR	8662820	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA		8662755	0		==			
ANR	8662821	PtrMemberAccess	that -> colour_type		8662755	0					
ANR	8662822	Identifier	that		8662755	0					
ANR	8662823	Identifier	colour_type		8662755	1					
ANR	8662824	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		8662755	1					
ANR	8662825	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_RGB_ALPHA	7213:6:227099:227143	8662755	1	True				
ANR	8662826	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_RGB_ALPHA		8662755	0		=			
ANR	8662827	PtrMemberAccess	that -> colour_type		8662755	0					
ANR	8662828	Identifier	that		8662755	0					
ANR	8662829	Identifier	colour_type		8662755	1					
ANR	8662830	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		8662755	1					
ANR	8662831	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7215:3:227149:227195	8662755	2	True				
ANR	8662832	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8662755	0					
ANR	8662833	Callee	this -> next -> mod		8662755	0					
ANR	8662834	PtrMemberAccess	this -> next -> mod		8662755	0					
ANR	8662835	PtrMemberAccess	this -> next		8662755	0					
ANR	8662836	Identifier	this		8662755	0					
ANR	8662837	Identifier	next		8662755	1					
ANR	8662838	Identifier	mod		8662755	1					
ANR	8662839	ArgumentList	this -> next		8662755	1					
ANR	8662840	Argument	this -> next		8662755	0					
ANR	8662841	PtrMemberAccess	this -> next		8662755	0					
ANR	8662842	Identifier	this		8662755	0					
ANR	8662843	Identifier	next		8662755	1					
ANR	8662844	Argument	that		8662755	1					
ANR	8662845	Identifier	that		8662755	0					
ANR	8662846	Argument	pp		8662755	2					
ANR	8662847	Identifier	pp		8662755	0					
ANR	8662848	Argument	display		8662755	3					
ANR	8662849	Identifier	display		8662755	0					
ANR	8662850	ReturnType	static void		8662755	1					
ANR	8662851	Identifier	image_transform_png_set_gray_to_rgb_mod		8662755	2					
ANR	8662852	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8662755	3					
ANR	8662853	Parameter	const image_transform * this	7187:40:226002:226028	8662755	0	True				
ANR	8662854	ParameterType	const image_transform *		8662755	0					
ANR	8662855	Identifier	this		8662755	1					
ANR	8662856	Parameter	image_pixel * that	7188:4:226035:226051	8662755	1	True				
ANR	8662857	ParameterType	image_pixel *		8662755	0					
ANR	8662858	Identifier	that		8662755	1					
ANR	8662859	Parameter	png_const_structp pp	7188:23:226054:226073	8662755	2	True				
ANR	8662860	ParameterType	png_const_structp		8662755	0					
ANR	8662861	Identifier	pp		8662755	1					
ANR	8662862	Parameter	const transform_display * display	7189:4:226080:226111	8662755	3	True				
ANR	8662863	ParameterType	const transform_display *		8662755	0					
ANR	8662864	Identifier	display		8662755	1					
ANR	8662865	CFGEntryNode	ENTRY		8662755		True				
ANR	8662866	CFGExitNode	EXIT		8662755		True				
ANR	8662867	Symbol	pp		8662755						
ANR	8662868	Symbol	PNG_COLOR_TYPE_RGB		8662755						
ANR	8662869	Symbol	PNG_COLOR_TYPE_GRAY_ALPHA		8662755						
ANR	8662870	Symbol	this -> next		8662755						
ANR	8662871	Symbol	display		8662755						
ANR	8662872	Symbol	PNG_COLOR_TYPE_GRAY		8662755						
ANR	8662873	Symbol	this		8662755						
ANR	8662874	Symbol	PNG_COLOR_MASK_COLOR		8662755						
ANR	8662875	Symbol	& display -> this		8662755						
ANR	8662876	Symbol	that -> bit_depth		8662755						
ANR	8662877	Symbol	* this		8662755						
ANR	8662878	Symbol	that		8662755						
ANR	8662879	Symbol	that -> colour_type		8662755						
ANR	8662880	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		8662755						
ANR	8662881	Symbol	that -> have_tRNS		8662755						
ANR	8662882	Symbol	* that		8662755						
ANR	8662883	Symbol	that -> sample_depth		8662755						
ANR	8662884	Function	image_transform_png_set_gray_to_rgb_add	7218:0:227200:227468							
ANR	8662885	FunctionDef	"image_transform_png_set_gray_to_rgb_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8662884	0					
ANR	8662886	CompoundStatement		7221:0:227350:227468	8662884	0					
ANR	8662887	Statement	UNUSED	7222:3:227355:227360	8662884	0	True				
ANR	8662888	ExpressionStatement	( bit_depth ) this -> next = * that	7222:9:227361:227395	8662884	1	True				
ANR	8662889	AssignmentExpression	( bit_depth ) this -> next = * that		8662884	0		=			
ANR	8662890	CastExpression	( bit_depth ) this -> next		8662884	0					
ANR	8662891	CastTarget	bit_depth		8662884	0					
ANR	8662892	PtrMemberAccess	this -> next		8662884	1					
ANR	8662893	Identifier	this		8662884	0					
ANR	8662894	Identifier	next		8662884	1					
ANR	8662895	UnaryOperationExpression	* that		8662884	1					
ANR	8662896	UnaryOperator	*		8662884	0					
ANR	8662897	Identifier	that		8662884	1					
ANR	8662898	ExpressionStatement	* that = this	7225:3:227400:227412	8662884	2	True				
ANR	8662899	AssignmentExpression	* that = this		8662884	0		=			
ANR	8662900	UnaryOperationExpression	* that		8662884	0					
ANR	8662901	UnaryOperator	*		8662884	0					
ANR	8662902	Identifier	that		8662884	1					
ANR	8662903	Identifier	this		8662884	1					
ANR	8662904	ReturnStatement	return ( colour_type & PNG_COLOR_MASK_COLOR ) == 0 ;	7227:3:227418:227466	8662884	3	True				
ANR	8662905	EqualityExpression	( colour_type & PNG_COLOR_MASK_COLOR ) == 0		8662884	0		==			
ANR	8662906	BitAndExpression	colour_type & PNG_COLOR_MASK_COLOR		8662884	0		&			
ANR	8662907	Identifier	colour_type		8662884	0					
ANR	8662908	Identifier	PNG_COLOR_MASK_COLOR		8662884	1					
ANR	8662909	PrimaryExpression	0		8662884	1					
ANR	8662910	ReturnType	static int		8662884	1					
ANR	8662911	Identifier	image_transform_png_set_gray_to_rgb_add		8662884	2					
ANR	8662912	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8662884	3					
ANR	8662913	Parameter	image_transform * this	7219:40:227251:227271	8662884	0	True				
ANR	8662914	ParameterType	image_transform *		8662884	0					
ANR	8662915	Identifier	this		8662884	1					
ANR	8662916	Parameter	const image_transform * * that	7220:4:227278:227305	8662884	1	True				
ANR	8662917	ParameterType	const image_transform * *		8662884	0					
ANR	8662918	Identifier	that		8662884	1					
ANR	8662919	Parameter	png_byte colour_type	7220:34:227308:227327	8662884	2	True				
ANR	8662920	ParameterType	png_byte		8662884	0					
ANR	8662921	Identifier	colour_type		8662884	1					
ANR	8662922	Parameter	png_byte bit_depth	7220:56:227330:227347	8662884	3	True				
ANR	8662923	ParameterType	png_byte		8662884	0					
ANR	8662924	Identifier	bit_depth		8662884	1					
ANR	8662925	CFGEntryNode	ENTRY		8662884		True				
ANR	8662926	CFGExitNode	EXIT		8662884		True				
ANR	8662927	Symbol	colour_type		8662884						
ANR	8662928	Symbol	* this		8662884						
ANR	8662929	Symbol	that		8662884						
ANR	8662930	Symbol	this -> next		8662884						
ANR	8662931	Symbol	this		8662884						
ANR	8662932	Symbol	* that		8662884						
ANR	8662933	Symbol	PNG_COLOR_MASK_COLOR		8662884						
ANR	8662934	Symbol	bit_depth		8662884						
ANR	8662935	Function	image_transform_png_set_expand_set	7237:0:227630:227903							
ANR	8662936	FunctionDef	"image_transform_png_set_expand_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8662935	0					
ANR	8662937	CompoundStatement		7240:0:227765:227903	8662935	0					
ANR	8662938	ExpressionStatement	png_set_expand ( pp )	7241:3:227770:227788	8662935	0	True				
ANR	8662939	CallExpression	png_set_expand ( pp )		8662935	0					
ANR	8662940	Callee	png_set_expand		8662935	0					
ANR	8662941	Identifier	png_set_expand		8662935	0					
ANR	8662942	ArgumentList	pp		8662935	1					
ANR	8662943	Argument	pp		8662935	0					
ANR	8662944	Identifier	pp		8662935	0					
ANR	8662945	IfStatement	if ( that -> this . has_tRNS )		8662935	1					
ANR	8662946	Condition	that -> this . has_tRNS	7243:7:227798:227816	8662935	0	True				
ANR	8662947	MemberAccess	that -> this . has_tRNS		8662935	0					
ANR	8662948	PtrMemberAccess	that -> this		8662935	0					
ANR	8662949	Identifier	that		8662935	0					
ANR	8662950	Identifier	this		8662935	1					
ANR	8662951	Identifier	has_tRNS		8662935	1					
ANR	8662952	ExpressionStatement	that -> this . is_transparent = 1	7244:6:227825:227854	8662935	1	True				
ANR	8662953	AssignmentExpression	that -> this . is_transparent = 1		8662935	0		=			
ANR	8662954	MemberAccess	that -> this . is_transparent		8662935	0					
ANR	8662955	PtrMemberAccess	that -> this		8662935	0					
ANR	8662956	Identifier	that		8662935	0					
ANR	8662957	Identifier	this		8662935	1					
ANR	8662958	Identifier	is_transparent		8662935	1					
ANR	8662959	PrimaryExpression	1		8662935	1					
ANR	8662960	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7246:3:227860:227901	8662935	2	True				
ANR	8662961	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8662935	0					
ANR	8662962	Callee	this -> next -> set		8662935	0					
ANR	8662963	PtrMemberAccess	this -> next -> set		8662935	0					
ANR	8662964	PtrMemberAccess	this -> next		8662935	0					
ANR	8662965	Identifier	this		8662935	0					
ANR	8662966	Identifier	next		8662935	1					
ANR	8662967	Identifier	set		8662935	1					
ANR	8662968	ArgumentList	this -> next		8662935	1					
ANR	8662969	Argument	this -> next		8662935	0					
ANR	8662970	PtrMemberAccess	this -> next		8662935	0					
ANR	8662971	Identifier	this		8662935	0					
ANR	8662972	Identifier	next		8662935	1					
ANR	8662973	Argument	that		8662935	1					
ANR	8662974	Identifier	that		8662935	0					
ANR	8662975	Argument	pp		8662935	2					
ANR	8662976	Identifier	pp		8662935	0					
ANR	8662977	Argument	pi		8662935	3					
ANR	8662978	Identifier	pi		8662935	0					
ANR	8662979	ReturnType	static void		8662935	1					
ANR	8662980	Identifier	image_transform_png_set_expand_set		8662935	2					
ANR	8662981	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8662935	3					
ANR	8662982	Parameter	const image_transform * this	7238:35:227677:227703	8662935	0	True				
ANR	8662983	ParameterType	const image_transform *		8662935	0					
ANR	8662984	Identifier	this		8662935	1					
ANR	8662985	Parameter	transform_display * that	7239:4:227710:227732	8662935	1	True				
ANR	8662986	ParameterType	transform_display *		8662935	0					
ANR	8662987	Identifier	that		8662935	1					
ANR	8662988	Parameter	png_structp pp	7239:29:227735:227748	8662935	2	True				
ANR	8662989	ParameterType	png_structp		8662935	0					
ANR	8662990	Identifier	pp		8662935	1					
ANR	8662991	Parameter	png_infop pi	7239:45:227751:227762	8662935	3	True				
ANR	8662992	ParameterType	png_infop		8662935	0					
ANR	8662993	Identifier	pi		8662935	1					
ANR	8662994	CFGEntryNode	ENTRY		8662935		True				
ANR	8662995	CFGExitNode	EXIT		8662935		True				
ANR	8662996	Symbol	pp		8662935						
ANR	8662997	Symbol	* this		8662935						
ANR	8662998	Symbol	that		8662935						
ANR	8662999	Symbol	that -> this . has_tRNS		8662935						
ANR	8663000	Symbol	that -> this		8662935						
ANR	8663001	Symbol	this -> next		8662935						
ANR	8663002	Symbol	that -> this . is_transparent		8662935						
ANR	8663003	Symbol	this		8662935						
ANR	8663004	Symbol	pi		8662935						
ANR	8663005	Symbol	* that		8662935						
ANR	8663006	Function	image_transform_png_set_expand_mod	7249:0:227906:228473							
ANR	8663007	FunctionDef	"image_transform_png_set_expand_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8663006	0					
ANR	8663008	CompoundStatement		7253:0:228065:228473	8663006	0					
ANR	8663009	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_PALETTE )		8663006	0					
ANR	8663010	Condition	that -> colour_type == PNG_COLOR_TYPE_PALETTE	7255:7:228143:228185	8663006	0	True				
ANR	8663011	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_PALETTE		8663006	0		==			
ANR	8663012	PtrMemberAccess	that -> colour_type		8663006	0					
ANR	8663013	Identifier	that		8663006	0					
ANR	8663014	Identifier	colour_type		8663006	1					
ANR	8663015	Identifier	PNG_COLOR_TYPE_PALETTE		8663006	1					
ANR	8663016	ExpressionStatement	image_pixel_convert_PLTE ( that )	7256:6:228194:228224	8663006	1	True				
ANR	8663017	CallExpression	image_pixel_convert_PLTE ( that )		8663006	0					
ANR	8663018	Callee	image_pixel_convert_PLTE		8663006	0					
ANR	8663019	Identifier	image_pixel_convert_PLTE		8663006	0					
ANR	8663020	ArgumentList	that		8663006	1					
ANR	8663021	Argument	that		8663006	0					
ANR	8663022	Identifier	that		8663006	0					
ANR	8663023	ElseStatement	else		8663006	0					
ANR	8663024	IfStatement	if ( that -> bit_depth < 8 )		8663006	0					
ANR	8663025	Condition	that -> bit_depth < 8	7257:12:228238:228256	8663006	0	True				
ANR	8663026	RelationalExpression	that -> bit_depth < 8		8663006	0		<			
ANR	8663027	PtrMemberAccess	that -> bit_depth		8663006	0					
ANR	8663028	Identifier	that		8663006	0					
ANR	8663029	Identifier	bit_depth		8663006	1					
ANR	8663030	PrimaryExpression	8		8663006	1					
ANR	8663031	ExpressionStatement	that -> sample_depth = that -> bit_depth = 8	7258:6:228281:228321	8663006	1	True				
ANR	8663032	AssignmentExpression	that -> sample_depth = that -> bit_depth = 8		8663006	0		=			
ANR	8663033	PtrMemberAccess	that -> sample_depth		8663006	0					
ANR	8663034	Identifier	that		8663006	0					
ANR	8663035	Identifier	sample_depth		8663006	1					
ANR	8663036	AssignmentExpression	that -> bit_depth = 8		8663006	1		=			
ANR	8663037	PtrMemberAccess	that -> bit_depth		8663006	0					
ANR	8663038	Identifier	that		8663006	0					
ANR	8663039	Identifier	bit_depth		8663006	1					
ANR	8663040	PrimaryExpression	8		8663006	1					
ANR	8663041	IfStatement	if ( that -> have_tRNS )		8663006	1					
ANR	8663042	Condition	that -> have_tRNS	7260:7:228331:228345	8663006	0	True				
ANR	8663043	PtrMemberAccess	that -> have_tRNS		8663006	0					
ANR	8663044	Identifier	that		8663006	0					
ANR	8663045	Identifier	have_tRNS		8663006	1					
ANR	8663046	ExpressionStatement	"image_pixel_add_alpha ( that , & display -> this , 0 )"	7261:6:228354:228419	8663006	1	True				
ANR	8663047	CallExpression	"image_pixel_add_alpha ( that , & display -> this , 0 )"		8663006	0					
ANR	8663048	Callee	image_pixel_add_alpha		8663006	0					
ANR	8663049	Identifier	image_pixel_add_alpha		8663006	0					
ANR	8663050	ArgumentList	that		8663006	1					
ANR	8663051	Argument	that		8663006	0					
ANR	8663052	Identifier	that		8663006	0					
ANR	8663053	Argument	& display -> this		8663006	1					
ANR	8663054	UnaryOperationExpression	& display -> this		8663006	0					
ANR	8663055	UnaryOperator	&		8663006	0					
ANR	8663056	PtrMemberAccess	display -> this		8663006	1					
ANR	8663057	Identifier	display		8663006	0					
ANR	8663058	Identifier	this		8663006	1					
ANR	8663059	Argument	0		8663006	2					
ANR	8663060	PrimaryExpression	0		8663006	0					
ANR	8663061	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7263:3:228425:228471	8663006	2	True				
ANR	8663062	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8663006	0					
ANR	8663063	Callee	this -> next -> mod		8663006	0					
ANR	8663064	PtrMemberAccess	this -> next -> mod		8663006	0					
ANR	8663065	PtrMemberAccess	this -> next		8663006	0					
ANR	8663066	Identifier	this		8663006	0					
ANR	8663067	Identifier	next		8663006	1					
ANR	8663068	Identifier	mod		8663006	1					
ANR	8663069	ArgumentList	this -> next		8663006	1					
ANR	8663070	Argument	this -> next		8663006	0					
ANR	8663071	PtrMemberAccess	this -> next		8663006	0					
ANR	8663072	Identifier	this		8663006	0					
ANR	8663073	Identifier	next		8663006	1					
ANR	8663074	Argument	that		8663006	1					
ANR	8663075	Identifier	that		8663006	0					
ANR	8663076	Argument	pp		8663006	2					
ANR	8663077	Identifier	pp		8663006	0					
ANR	8663078	Argument	display		8663006	3					
ANR	8663079	Identifier	display		8663006	0					
ANR	8663080	ReturnType	static void		8663006	1					
ANR	8663081	Identifier	image_transform_png_set_expand_mod		8663006	2					
ANR	8663082	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8663006	3					
ANR	8663083	Parameter	const image_transform * this	7250:35:227953:227979	8663006	0	True				
ANR	8663084	ParameterType	const image_transform *		8663006	0					
ANR	8663085	Identifier	this		8663006	1					
ANR	8663086	Parameter	image_pixel * that	7251:4:227986:228002	8663006	1	True				
ANR	8663087	ParameterType	image_pixel *		8663006	0					
ANR	8663088	Identifier	that		8663006	1					
ANR	8663089	Parameter	png_const_structp pp	7251:23:228005:228024	8663006	2	True				
ANR	8663090	ParameterType	png_const_structp		8663006	0					
ANR	8663091	Identifier	pp		8663006	1					
ANR	8663092	Parameter	const transform_display * display	7252:4:228031:228062	8663006	3	True				
ANR	8663093	ParameterType	const transform_display *		8663006	0					
ANR	8663094	Identifier	display		8663006	1					
ANR	8663095	CFGEntryNode	ENTRY		8663006		True				
ANR	8663096	CFGExitNode	EXIT		8663006		True				
ANR	8663097	Symbol	pp		8663006						
ANR	8663098	Symbol	this -> next		8663006						
ANR	8663099	Symbol	display		8663006						
ANR	8663100	Symbol	this		8663006						
ANR	8663101	Symbol	& display -> this		8663006						
ANR	8663102	Symbol	that -> bit_depth		8663006						
ANR	8663103	Symbol	* this		8663006						
ANR	8663104	Symbol	that		8663006						
ANR	8663105	Symbol	that -> colour_type		8663006						
ANR	8663106	Symbol	that -> have_tRNS		8663006						
ANR	8663107	Symbol	* that		8663006						
ANR	8663108	Symbol	that -> sample_depth		8663006						
ANR	8663109	Symbol	PNG_COLOR_TYPE_PALETTE		8663006						
ANR	8663110	Function	image_transform_png_set_expand_add	7266:0:228476:228857							
ANR	8663111	FunctionDef	"image_transform_png_set_expand_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8663110	0					
ANR	8663112	CompoundStatement		7269:0:228621:228857	8663110	0					
ANR	8663113	Statement	UNUSED	7270:3:228626:228631	8663110	0	True				
ANR	8663114	ExpressionStatement	( bit_depth ) this -> next = * that	7270:9:228632:228666	8663110	1	True				
ANR	8663115	AssignmentExpression	( bit_depth ) this -> next = * that		8663110	0		=			
ANR	8663116	CastExpression	( bit_depth ) this -> next		8663110	0					
ANR	8663117	CastTarget	bit_depth		8663110	0					
ANR	8663118	PtrMemberAccess	this -> next		8663110	1					
ANR	8663119	Identifier	this		8663110	0					
ANR	8663120	Identifier	next		8663110	1					
ANR	8663121	UnaryOperationExpression	* that		8663110	1					
ANR	8663122	UnaryOperator	*		8663110	0					
ANR	8663123	Identifier	that		8663110	1					
ANR	8663124	ExpressionStatement	* that = this	7273:3:228671:228683	8663110	2	True				
ANR	8663125	AssignmentExpression	* that = this		8663110	0		=			
ANR	8663126	UnaryOperationExpression	* that		8663110	0					
ANR	8663127	UnaryOperator	*		8663110	0					
ANR	8663128	Identifier	that		8663110	1					
ANR	8663129	Identifier	this		8663110	1					
ANR	8663130	ReturnStatement	return ( colour_type & PNG_COLOR_MASK_ALPHA ) == 0 ;	7278:3:228807:228855	8663110	3	True				
ANR	8663131	EqualityExpression	( colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8663110	0		==			
ANR	8663132	BitAndExpression	colour_type & PNG_COLOR_MASK_ALPHA		8663110	0		&			
ANR	8663133	Identifier	colour_type		8663110	0					
ANR	8663134	Identifier	PNG_COLOR_MASK_ALPHA		8663110	1					
ANR	8663135	PrimaryExpression	0		8663110	1					
ANR	8663136	ReturnType	static int		8663110	1					
ANR	8663137	Identifier	image_transform_png_set_expand_add		8663110	2					
ANR	8663138	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8663110	3					
ANR	8663139	Parameter	image_transform * this	7267:35:228522:228542	8663110	0	True				
ANR	8663140	ParameterType	image_transform *		8663110	0					
ANR	8663141	Identifier	this		8663110	1					
ANR	8663142	Parameter	const image_transform * * that	7268:4:228549:228576	8663110	1	True				
ANR	8663143	ParameterType	const image_transform * *		8663110	0					
ANR	8663144	Identifier	that		8663110	1					
ANR	8663145	Parameter	png_byte colour_type	7268:34:228579:228598	8663110	2	True				
ANR	8663146	ParameterType	png_byte		8663110	0					
ANR	8663147	Identifier	colour_type		8663110	1					
ANR	8663148	Parameter	png_byte bit_depth	7268:56:228601:228618	8663110	3	True				
ANR	8663149	ParameterType	png_byte		8663110	0					
ANR	8663150	Identifier	bit_depth		8663110	1					
ANR	8663151	CFGEntryNode	ENTRY		8663110		True				
ANR	8663152	CFGExitNode	EXIT		8663110		True				
ANR	8663153	Symbol	colour_type		8663110						
ANR	8663154	Symbol	* this		8663110						
ANR	8663155	Symbol	that		8663110						
ANR	8663156	Symbol	this -> next		8663110						
ANR	8663157	Symbol	PNG_COLOR_MASK_ALPHA		8663110						
ANR	8663158	Symbol	this		8663110						
ANR	8663159	Symbol	* that		8663110						
ANR	8663160	Symbol	bit_depth		8663110						
ANR	8663161	Function	image_transform_png_set_expand_gray_1_2_4_to_8_set	7290:0:229073:229364							
ANR	8663162	FunctionDef	"image_transform_png_set_expand_gray_1_2_4_to_8_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8663161	0					
ANR	8663163	CompoundStatement		7294:0:229229:229364	8663161	0					
ANR	8663164	ExpressionStatement	png_set_expand_gray_1_2_4_to_8 ( pp )	7295:3:229234:229268	8663161	0	True				
ANR	8663165	CallExpression	png_set_expand_gray_1_2_4_to_8 ( pp )		8663161	0					
ANR	8663166	Callee	png_set_expand_gray_1_2_4_to_8		8663161	0					
ANR	8663167	Identifier	png_set_expand_gray_1_2_4_to_8		8663161	0					
ANR	8663168	ArgumentList	pp		8663161	1					
ANR	8663169	Argument	pp		8663161	0					
ANR	8663170	Identifier	pp		8663161	0					
ANR	8663171	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7297:3:229321:229362	8663161	1	True				
ANR	8663172	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8663161	0					
ANR	8663173	Callee	this -> next -> set		8663161	0					
ANR	8663174	PtrMemberAccess	this -> next -> set		8663161	0					
ANR	8663175	PtrMemberAccess	this -> next		8663161	0					
ANR	8663176	Identifier	this		8663161	0					
ANR	8663177	Identifier	next		8663161	1					
ANR	8663178	Identifier	set		8663161	1					
ANR	8663179	ArgumentList	this -> next		8663161	1					
ANR	8663180	Argument	this -> next		8663161	0					
ANR	8663181	PtrMemberAccess	this -> next		8663161	0					
ANR	8663182	Identifier	this		8663161	0					
ANR	8663183	Identifier	next		8663161	1					
ANR	8663184	Argument	that		8663161	1					
ANR	8663185	Identifier	that		8663161	0					
ANR	8663186	Argument	pp		8663161	2					
ANR	8663187	Identifier	pp		8663161	0					
ANR	8663188	Argument	pi		8663161	3					
ANR	8663189	Identifier	pi		8663161	0					
ANR	8663190	ReturnType	static void		8663161	1					
ANR	8663191	Identifier	image_transform_png_set_expand_gray_1_2_4_to_8_set		8663161	2					
ANR	8663192	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8663161	3					
ANR	8663193	Parameter	const image_transform * this	7292:4:229141:229167	8663161	0	True				
ANR	8663194	ParameterType	const image_transform *		8663161	0					
ANR	8663195	Identifier	this		8663161	1					
ANR	8663196	Parameter	transform_display * that	7292:33:229170:229192	8663161	1	True				
ANR	8663197	ParameterType	transform_display *		8663161	0					
ANR	8663198	Identifier	that		8663161	1					
ANR	8663199	Parameter	png_structp pp	7292:58:229195:229208	8663161	2	True				
ANR	8663200	ParameterType	png_structp		8663161	0					
ANR	8663201	Identifier	pp		8663161	1					
ANR	8663202	Parameter	png_infop pi	7293:4:229215:229226	8663161	3	True				
ANR	8663203	ParameterType	png_infop		8663161	0					
ANR	8663204	Identifier	pi		8663161	1					
ANR	8663205	CFGEntryNode	ENTRY		8663161		True				
ANR	8663206	CFGExitNode	EXIT		8663161		True				
ANR	8663207	Symbol	pp		8663161						
ANR	8663208	Symbol	* this		8663161						
ANR	8663209	Symbol	that		8663161						
ANR	8663210	Symbol	this -> next		8663161						
ANR	8663211	Symbol	this		8663161						
ANR	8663212	Symbol	pi		8663161						
ANR	8663213	Function	image_transform_png_set_expand_gray_1_2_4_to_8_mod	7300:0:229367:229904							
ANR	8663214	FunctionDef	"image_transform_png_set_expand_gray_1_2_4_to_8_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8663213	0					
ANR	8663215	CompoundStatement		7304:0:229543:229904	8663213	0					
ANR	8663216	ExpressionStatement	"image_transform_png_set_expand_mod ( this , that , pp , display )"	7306:3:229575:229634	8663213	0	True				
ANR	8663217	CallExpression	"image_transform_png_set_expand_mod ( this , that , pp , display )"		8663213	0					
ANR	8663218	Callee	image_transform_png_set_expand_mod		8663213	0					
ANR	8663219	Identifier	image_transform_png_set_expand_mod		8663213	0					
ANR	8663220	ArgumentList	this		8663213	1					
ANR	8663221	Argument	this		8663213	0					
ANR	8663222	Identifier	this		8663213	0					
ANR	8663223	Argument	that		8663213	1					
ANR	8663224	Identifier	that		8663213	0					
ANR	8663225	Argument	pp		8663213	2					
ANR	8663226	Identifier	pp		8663213	0					
ANR	8663227	Argument	display		8663213	3					
ANR	8663228	Identifier	display		8663213	0					
ANR	8663229	ReturnType	static void		8663213	1					
ANR	8663230	Identifier	image_transform_png_set_expand_gray_1_2_4_to_8_mod		8663213	2					
ANR	8663231	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8663213	3					
ANR	8663232	Parameter	const image_transform * this	7302:4:229435:229461	8663213	0	True				
ANR	8663233	ParameterType	const image_transform *		8663213	0					
ANR	8663234	Identifier	this		8663213	1					
ANR	8663235	Parameter	image_pixel * that	7302:33:229464:229480	8663213	1	True				
ANR	8663236	ParameterType	image_pixel *		8663213	0					
ANR	8663237	Identifier	that		8663213	1					
ANR	8663238	Parameter	png_const_structp pp	7302:52:229483:229502	8663213	2	True				
ANR	8663239	ParameterType	png_const_structp		8663213	0					
ANR	8663240	Identifier	pp		8663213	1					
ANR	8663241	Parameter	const transform_display * display	7303:4:229509:229540	8663213	3	True				
ANR	8663242	ParameterType	const transform_display *		8663213	0					
ANR	8663243	Identifier	display		8663213	1					
ANR	8663244	CFGEntryNode	ENTRY		8663213		True				
ANR	8663245	CFGExitNode	EXIT		8663213		True				
ANR	8663246	Symbol	pp		8663213						
ANR	8663247	Symbol	that		8663213						
ANR	8663248	Symbol	display		8663213						
ANR	8663249	Symbol	this		8663213						
ANR	8663250	Function	image_transform_png_set_expand_gray_1_2_4_to_8_add	7317:0:229907:230449							
ANR	8663251	FunctionDef	"image_transform_png_set_expand_gray_1_2_4_to_8_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8663250	0					
ANR	8663252	CompoundStatement		7320:0:230068:230449	8663250	0					
ANR	8663253	ReturnStatement	"return image_transform_png_set_expand_add ( this , that , colour_type , bit_depth ) ;"	7322:3:230100:230183	8663250	0	True				
ANR	8663254	CallExpression	"image_transform_png_set_expand_add ( this , that , colour_type , bit_depth )"		8663250	0					
ANR	8663255	Callee	image_transform_png_set_expand_add		8663250	0					
ANR	8663256	Identifier	image_transform_png_set_expand_add		8663250	0					
ANR	8663257	ArgumentList	this		8663250	1					
ANR	8663258	Argument	this		8663250	0					
ANR	8663259	Identifier	this		8663250	0					
ANR	8663260	Argument	that		8663250	1					
ANR	8663261	Identifier	that		8663250	0					
ANR	8663262	Argument	colour_type		8663250	2					
ANR	8663263	Identifier	colour_type		8663250	0					
ANR	8663264	Argument	bit_depth		8663250	3					
ANR	8663265	Identifier	bit_depth		8663250	0					
ANR	8663266	ReturnType	static int		8663250	1					
ANR	8663267	Identifier	image_transform_png_set_expand_gray_1_2_4_to_8_add		8663250	2					
ANR	8663268	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8663250	3					
ANR	8663269	Parameter	image_transform * this	7318:51:229969:229989	8663250	0	True				
ANR	8663270	ParameterType	image_transform *		8663250	0					
ANR	8663271	Identifier	this		8663250	1					
ANR	8663272	Parameter	const image_transform * * that	7319:4:229996:230023	8663250	1	True				
ANR	8663273	ParameterType	const image_transform * *		8663250	0					
ANR	8663274	Identifier	that		8663250	1					
ANR	8663275	Parameter	png_byte colour_type	7319:34:230026:230045	8663250	2	True				
ANR	8663276	ParameterType	png_byte		8663250	0					
ANR	8663277	Identifier	colour_type		8663250	1					
ANR	8663278	Parameter	png_byte bit_depth	7319:56:230048:230065	8663250	3	True				
ANR	8663279	ParameterType	png_byte		8663250	0					
ANR	8663280	Identifier	bit_depth		8663250	1					
ANR	8663281	CFGEntryNode	ENTRY		8663250		True				
ANR	8663282	CFGExitNode	EXIT		8663250		True				
ANR	8663283	Symbol	colour_type		8663250						
ANR	8663284	Symbol	that		8663250						
ANR	8663285	Symbol	image_transform_png_set_expand_add		8663250						
ANR	8663286	Symbol	this		8663250						
ANR	8663287	Symbol	bit_depth		8663250						
ANR	8663288	Function	image_transform_png_set_expand_16_set	7344:0:230634:231038							
ANR	8663289	FunctionDef	"image_transform_png_set_expand_16_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8663288	0					
ANR	8663290	CompoundStatement		7347:0:230772:231038	8663288	0					
ANR	8663291	ExpressionStatement	png_set_expand_16 ( pp )	7348:3:230777:230798	8663288	0	True				
ANR	8663292	CallExpression	png_set_expand_16 ( pp )		8663288	0					
ANR	8663293	Callee	png_set_expand_16		8663288	0					
ANR	8663294	Identifier	png_set_expand_16		8663288	0					
ANR	8663295	ArgumentList	pp		8663288	1					
ANR	8663296	Argument	pp		8663288	0					
ANR	8663297	Identifier	pp		8663288	0					
ANR	8663298	Statement	if	7351:3:230885:230886	8663288	1	True				
ANR	8663299	Statement	PNG_LIBPNG_VER	7351:6:230888:230901	8663288	2	True				
ANR	8663300	Statement	<	7351:21:230903:230903	8663288	3	True				
ANR	8663301	Statement	10700	7351:23:230905:230909	8663288	4	True				
ANR	8663302	IfStatement	if ( that -> this . has_tRNS )		8663288	5					
ANR	8663303	Condition	that -> this . has_tRNS	7352:10:230921:230939	8663288	0	True				
ANR	8663304	MemberAccess	that -> this . has_tRNS		8663288	0					
ANR	8663305	PtrMemberAccess	that -> this		8663288	0					
ANR	8663306	Identifier	that		8663288	0					
ANR	8663307	Identifier	this		8663288	1					
ANR	8663308	Identifier	has_tRNS		8663288	1					
ANR	8663309	ExpressionStatement	that -> this . is_transparent = 1	7353:9:230951:230980	8663288	1	True				
ANR	8663310	AssignmentExpression	that -> this . is_transparent = 1		8663288	0		=			
ANR	8663311	MemberAccess	that -> this . is_transparent		8663288	0					
ANR	8663312	PtrMemberAccess	that -> this		8663288	0					
ANR	8663313	Identifier	that		8663288	0					
ANR	8663314	Identifier	this		8663288	1					
ANR	8663315	Identifier	is_transparent		8663288	1					
ANR	8663316	PrimaryExpression	1		8663288	1					
ANR	8663317	Statement	endif	7354:3:230985:230989	8663288	6	True				
ANR	8663318	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7356:3:230995:231036	8663288	7	True				
ANR	8663319	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8663288	0					
ANR	8663320	Callee	this -> next -> set		8663288	0					
ANR	8663321	PtrMemberAccess	this -> next -> set		8663288	0					
ANR	8663322	PtrMemberAccess	this -> next		8663288	0					
ANR	8663323	Identifier	this		8663288	0					
ANR	8663324	Identifier	next		8663288	1					
ANR	8663325	Identifier	set		8663288	1					
ANR	8663326	ArgumentList	this -> next		8663288	1					
ANR	8663327	Argument	this -> next		8663288	0					
ANR	8663328	PtrMemberAccess	this -> next		8663288	0					
ANR	8663329	Identifier	this		8663288	0					
ANR	8663330	Identifier	next		8663288	1					
ANR	8663331	Argument	that		8663288	1					
ANR	8663332	Identifier	that		8663288	0					
ANR	8663333	Argument	pp		8663288	2					
ANR	8663334	Identifier	pp		8663288	0					
ANR	8663335	Argument	pi		8663288	3					
ANR	8663336	Identifier	pi		8663288	0					
ANR	8663337	ReturnType	static void		8663288	1					
ANR	8663338	Identifier	image_transform_png_set_expand_16_set		8663288	2					
ANR	8663339	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8663288	3					
ANR	8663340	Parameter	const image_transform * this	7345:38:230684:230710	8663288	0	True				
ANR	8663341	ParameterType	const image_transform *		8663288	0					
ANR	8663342	Identifier	this		8663288	1					
ANR	8663343	Parameter	transform_display * that	7346:4:230717:230739	8663288	1	True				
ANR	8663344	ParameterType	transform_display *		8663288	0					
ANR	8663345	Identifier	that		8663288	1					
ANR	8663346	Parameter	png_structp pp	7346:29:230742:230755	8663288	2	True				
ANR	8663347	ParameterType	png_structp		8663288	0					
ANR	8663348	Identifier	pp		8663288	1					
ANR	8663349	Parameter	png_infop pi	7346:45:230758:230769	8663288	3	True				
ANR	8663350	ParameterType	png_infop		8663288	0					
ANR	8663351	Identifier	pi		8663288	1					
ANR	8663352	CFGEntryNode	ENTRY		8663288		True				
ANR	8663353	CFGExitNode	EXIT		8663288		True				
ANR	8663354	Symbol	pp		8663288						
ANR	8663355	Symbol	* this		8663288						
ANR	8663356	Symbol	that		8663288						
ANR	8663357	Symbol	that -> this . has_tRNS		8663288						
ANR	8663358	Symbol	that -> this		8663288						
ANR	8663359	Symbol	this -> next		8663288						
ANR	8663360	Symbol	that -> this . is_transparent		8663288						
ANR	8663361	Symbol	this		8663288						
ANR	8663362	Symbol	pi		8663288						
ANR	8663363	Symbol	* that		8663288						
ANR	8663364	Function	image_transform_png_set_expand_16_mod	7359:0:231041:231640							
ANR	8663365	FunctionDef	"image_transform_png_set_expand_16_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8663364	0					
ANR	8663366	CompoundStatement		7363:0:231203:231640	8663364	0					
ANR	8663367	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_PALETTE )		8663364	0					
ANR	8663368	Condition	that -> colour_type == PNG_COLOR_TYPE_PALETTE	7367:7:231328:231370	8663364	0	True				
ANR	8663369	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_PALETTE		8663364	0		==			
ANR	8663370	PtrMemberAccess	that -> colour_type		8663364	0					
ANR	8663371	Identifier	that		8663364	0					
ANR	8663372	Identifier	colour_type		8663364	1					
ANR	8663373	Identifier	PNG_COLOR_TYPE_PALETTE		8663364	1					
ANR	8663374	ExpressionStatement	image_pixel_convert_PLTE ( that )	7368:6:231379:231409	8663364	1	True				
ANR	8663375	CallExpression	image_pixel_convert_PLTE ( that )		8663364	0					
ANR	8663376	Callee	image_pixel_convert_PLTE		8663364	0					
ANR	8663377	Identifier	image_pixel_convert_PLTE		8663364	0					
ANR	8663378	ArgumentList	that		8663364	1					
ANR	8663379	Argument	that		8663364	0					
ANR	8663380	Identifier	that		8663364	0					
ANR	8663381	IfStatement	if ( that -> have_tRNS )		8663364	1					
ANR	8663382	Condition	that -> have_tRNS	7370:7:231419:231433	8663364	0	True				
ANR	8663383	PtrMemberAccess	that -> have_tRNS		8663364	0					
ANR	8663384	Identifier	that		8663364	0					
ANR	8663385	Identifier	have_tRNS		8663364	1					
ANR	8663386	ExpressionStatement	"image_pixel_add_alpha ( that , & display -> this , 0 )"	7371:6:231442:231507	8663364	1	True				
ANR	8663387	CallExpression	"image_pixel_add_alpha ( that , & display -> this , 0 )"		8663364	0					
ANR	8663388	Callee	image_pixel_add_alpha		8663364	0					
ANR	8663389	Identifier	image_pixel_add_alpha		8663364	0					
ANR	8663390	ArgumentList	that		8663364	1					
ANR	8663391	Argument	that		8663364	0					
ANR	8663392	Identifier	that		8663364	0					
ANR	8663393	Argument	& display -> this		8663364	1					
ANR	8663394	UnaryOperationExpression	& display -> this		8663364	0					
ANR	8663395	UnaryOperator	&		8663364	0					
ANR	8663396	PtrMemberAccess	display -> this		8663364	1					
ANR	8663397	Identifier	display		8663364	0					
ANR	8663398	Identifier	this		8663364	1					
ANR	8663399	Argument	0		8663364	2					
ANR	8663400	PrimaryExpression	0		8663364	0					
ANR	8663401	IfStatement	if ( that -> bit_depth < 16 )		8663364	2					
ANR	8663402	Condition	that -> bit_depth < 16	7373:7:231517:231536	8663364	0	True				
ANR	8663403	RelationalExpression	that -> bit_depth < 16		8663364	0		<			
ANR	8663404	PtrMemberAccess	that -> bit_depth		8663364	0					
ANR	8663405	Identifier	that		8663364	0					
ANR	8663406	Identifier	bit_depth		8663364	1					
ANR	8663407	PrimaryExpression	16		8663364	1					
ANR	8663408	ExpressionStatement	that -> sample_depth = that -> bit_depth = 16	7374:6:231545:231586	8663364	1	True				
ANR	8663409	AssignmentExpression	that -> sample_depth = that -> bit_depth = 16		8663364	0		=			
ANR	8663410	PtrMemberAccess	that -> sample_depth		8663364	0					
ANR	8663411	Identifier	that		8663364	0					
ANR	8663412	Identifier	sample_depth		8663364	1					
ANR	8663413	AssignmentExpression	that -> bit_depth = 16		8663364	1		=			
ANR	8663414	PtrMemberAccess	that -> bit_depth		8663364	0					
ANR	8663415	Identifier	that		8663364	0					
ANR	8663416	Identifier	bit_depth		8663364	1					
ANR	8663417	PrimaryExpression	16		8663364	1					
ANR	8663418	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7376:3:231592:231638	8663364	3	True				
ANR	8663419	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8663364	0					
ANR	8663420	Callee	this -> next -> mod		8663364	0					
ANR	8663421	PtrMemberAccess	this -> next -> mod		8663364	0					
ANR	8663422	PtrMemberAccess	this -> next		8663364	0					
ANR	8663423	Identifier	this		8663364	0					
ANR	8663424	Identifier	next		8663364	1					
ANR	8663425	Identifier	mod		8663364	1					
ANR	8663426	ArgumentList	this -> next		8663364	1					
ANR	8663427	Argument	this -> next		8663364	0					
ANR	8663428	PtrMemberAccess	this -> next		8663364	0					
ANR	8663429	Identifier	this		8663364	0					
ANR	8663430	Identifier	next		8663364	1					
ANR	8663431	Argument	that		8663364	1					
ANR	8663432	Identifier	that		8663364	0					
ANR	8663433	Argument	pp		8663364	2					
ANR	8663434	Identifier	pp		8663364	0					
ANR	8663435	Argument	display		8663364	3					
ANR	8663436	Identifier	display		8663364	0					
ANR	8663437	ReturnType	static void		8663364	1					
ANR	8663438	Identifier	image_transform_png_set_expand_16_mod		8663364	2					
ANR	8663439	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8663364	3					
ANR	8663440	Parameter	const image_transform * this	7360:38:231091:231117	8663364	0	True				
ANR	8663441	ParameterType	const image_transform *		8663364	0					
ANR	8663442	Identifier	this		8663364	1					
ANR	8663443	Parameter	image_pixel * that	7361:4:231124:231140	8663364	1	True				
ANR	8663444	ParameterType	image_pixel *		8663364	0					
ANR	8663445	Identifier	that		8663364	1					
ANR	8663446	Parameter	png_const_structp pp	7361:23:231143:231162	8663364	2	True				
ANR	8663447	ParameterType	png_const_structp		8663364	0					
ANR	8663448	Identifier	pp		8663364	1					
ANR	8663449	Parameter	const transform_display * display	7362:4:231169:231200	8663364	3	True				
ANR	8663450	ParameterType	const transform_display *		8663364	0					
ANR	8663451	Identifier	display		8663364	1					
ANR	8663452	CFGEntryNode	ENTRY		8663364		True				
ANR	8663453	CFGExitNode	EXIT		8663364		True				
ANR	8663454	Symbol	pp		8663364						
ANR	8663455	Symbol	this -> next		8663364						
ANR	8663456	Symbol	display		8663364						
ANR	8663457	Symbol	this		8663364						
ANR	8663458	Symbol	& display -> this		8663364						
ANR	8663459	Symbol	that -> bit_depth		8663364						
ANR	8663460	Symbol	* this		8663364						
ANR	8663461	Symbol	that		8663364						
ANR	8663462	Symbol	that -> colour_type		8663364						
ANR	8663463	Symbol	that -> have_tRNS		8663364						
ANR	8663464	Symbol	* that		8663364						
ANR	8663465	Symbol	that -> sample_depth		8663364						
ANR	8663466	Symbol	PNG_COLOR_TYPE_PALETTE		8663364						
ANR	8663467	Function	image_transform_png_set_expand_16_add	7379:0:231643:231954							
ANR	8663468	FunctionDef	"image_transform_png_set_expand_16_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8663467	0					
ANR	8663469	CompoundStatement		7382:0:231791:231954	8663467	0					
ANR	8663470	Statement	UNUSED	7383:3:231796:231801	8663467	0	True				
ANR	8663471	ExpressionStatement	( colour_type ) this -> next = * that	7383:9:231802:231838	8663467	1	True				
ANR	8663472	AssignmentExpression	( colour_type ) this -> next = * that		8663467	0		=			
ANR	8663473	CastExpression	( colour_type ) this -> next		8663467	0					
ANR	8663474	CastTarget	colour_type		8663467	0					
ANR	8663475	PtrMemberAccess	this -> next		8663467	1					
ANR	8663476	Identifier	this		8663467	0					
ANR	8663477	Identifier	next		8663467	1					
ANR	8663478	UnaryOperationExpression	* that		8663467	1					
ANR	8663479	UnaryOperator	*		8663467	0					
ANR	8663480	Identifier	that		8663467	1					
ANR	8663481	ExpressionStatement	* that = this	7386:3:231843:231855	8663467	2	True				
ANR	8663482	AssignmentExpression	* that = this		8663467	0		=			
ANR	8663483	UnaryOperationExpression	* that		8663467	0					
ANR	8663484	UnaryOperator	*		8663467	0					
ANR	8663485	Identifier	that		8663467	1					
ANR	8663486	Identifier	this		8663467	1					
ANR	8663487	ReturnStatement	return bit_depth < 16 ;	7389:3:231931:231952	8663467	3	True				
ANR	8663488	RelationalExpression	bit_depth < 16		8663467	0		<			
ANR	8663489	Identifier	bit_depth		8663467	0					
ANR	8663490	PrimaryExpression	16		8663467	1					
ANR	8663491	ReturnType	static int		8663467	1					
ANR	8663492	Identifier	image_transform_png_set_expand_16_add		8663467	2					
ANR	8663493	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8663467	3					
ANR	8663494	Parameter	image_transform * this	7380:38:231692:231712	8663467	0	True				
ANR	8663495	ParameterType	image_transform *		8663467	0					
ANR	8663496	Identifier	this		8663467	1					
ANR	8663497	Parameter	const image_transform * * that	7381:4:231719:231746	8663467	1	True				
ANR	8663498	ParameterType	const image_transform * *		8663467	0					
ANR	8663499	Identifier	that		8663467	1					
ANR	8663500	Parameter	png_byte colour_type	7381:34:231749:231768	8663467	2	True				
ANR	8663501	ParameterType	png_byte		8663467	0					
ANR	8663502	Identifier	colour_type		8663467	1					
ANR	8663503	Parameter	png_byte bit_depth	7381:56:231771:231788	8663467	3	True				
ANR	8663504	ParameterType	png_byte		8663467	0					
ANR	8663505	Identifier	bit_depth		8663467	1					
ANR	8663506	CFGEntryNode	ENTRY		8663467		True				
ANR	8663507	CFGExitNode	EXIT		8663467		True				
ANR	8663508	Symbol	colour_type		8663467						
ANR	8663509	Symbol	* this		8663467						
ANR	8663510	Symbol	that		8663467						
ANR	8663511	Symbol	this -> next		8663467						
ANR	8663512	Symbol	this		8663467						
ANR	8663513	Symbol	* that		8663467						
ANR	8663514	Symbol	bit_depth		8663467						
ANR	8663515	Function	image_transform_png_set_scale_16_set	7399:0:232145:232488							
ANR	8663516	FunctionDef	"image_transform_png_set_scale_16_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8663515	0					
ANR	8663517	CompoundStatement		7402:0:232282:232488	8663515	0					
ANR	8663518	ExpressionStatement	png_set_scale_16 ( pp )	7403:3:232287:232307	8663515	0	True				
ANR	8663519	CallExpression	png_set_scale_16 ( pp )		8663515	0					
ANR	8663520	Callee	png_set_scale_16		8663515	0					
ANR	8663521	Identifier	png_set_scale_16		8663515	0					
ANR	8663522	ArgumentList	pp		8663515	1					
ANR	8663523	Argument	pp		8663515	0					
ANR	8663524	Identifier	pp		8663515	0					
ANR	8663525	Statement	if	7404:3:232312:232313	8663515	1	True				
ANR	8663526	Statement	PNG_LIBPNG_VER	7404:6:232315:232328	8663515	2	True				
ANR	8663527	Statement	<	7404:21:232330:232330	8663515	3	True				
ANR	8663528	Statement	10700	7404:23:232332:232336	8663515	4	True				
ANR	8663529	ExpressionStatement	that -> max_gamma_8 = PNG_MAX_GAMMA_8	7406:6:232396:232431	8663515	5	True				
ANR	8663530	AssignmentExpression	that -> max_gamma_8 = PNG_MAX_GAMMA_8		8663515	0		=			
ANR	8663531	PtrMemberAccess	that -> max_gamma_8		8663515	0					
ANR	8663532	Identifier	that		8663515	0					
ANR	8663533	Identifier	max_gamma_8		8663515	1					
ANR	8663534	Identifier	PNG_MAX_GAMMA_8		8663515	1					
ANR	8663535	Statement	endif	7407:3:232436:232440	8663515	6	True				
ANR	8663536	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7408:3:232445:232486	8663515	7	True				
ANR	8663537	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8663515	0					
ANR	8663538	Callee	this -> next -> set		8663515	0					
ANR	8663539	PtrMemberAccess	this -> next -> set		8663515	0					
ANR	8663540	PtrMemberAccess	this -> next		8663515	0					
ANR	8663541	Identifier	this		8663515	0					
ANR	8663542	Identifier	next		8663515	1					
ANR	8663543	Identifier	set		8663515	1					
ANR	8663544	ArgumentList	this -> next		8663515	1					
ANR	8663545	Argument	this -> next		8663515	0					
ANR	8663546	PtrMemberAccess	this -> next		8663515	0					
ANR	8663547	Identifier	this		8663515	0					
ANR	8663548	Identifier	next		8663515	1					
ANR	8663549	Argument	that		8663515	1					
ANR	8663550	Identifier	that		8663515	0					
ANR	8663551	Argument	pp		8663515	2					
ANR	8663552	Identifier	pp		8663515	0					
ANR	8663553	Argument	pi		8663515	3					
ANR	8663554	Identifier	pi		8663515	0					
ANR	8663555	ReturnType	static void		8663515	1					
ANR	8663556	Identifier	image_transform_png_set_scale_16_set		8663515	2					
ANR	8663557	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8663515	3					
ANR	8663558	Parameter	const image_transform * this	7400:37:232194:232220	8663515	0	True				
ANR	8663559	ParameterType	const image_transform *		8663515	0					
ANR	8663560	Identifier	this		8663515	1					
ANR	8663561	Parameter	transform_display * that	7401:4:232227:232249	8663515	1	True				
ANR	8663562	ParameterType	transform_display *		8663515	0					
ANR	8663563	Identifier	that		8663515	1					
ANR	8663564	Parameter	png_structp pp	7401:29:232252:232265	8663515	2	True				
ANR	8663565	ParameterType	png_structp		8663515	0					
ANR	8663566	Identifier	pp		8663515	1					
ANR	8663567	Parameter	png_infop pi	7401:45:232268:232279	8663515	3	True				
ANR	8663568	ParameterType	png_infop		8663515	0					
ANR	8663569	Identifier	pi		8663515	1					
ANR	8663570	CFGEntryNode	ENTRY		8663515		True				
ANR	8663571	CFGExitNode	EXIT		8663515		True				
ANR	8663572	Symbol	pp		8663515						
ANR	8663573	Symbol	* this		8663515						
ANR	8663574	Symbol	that		8663515						
ANR	8663575	Symbol	that -> max_gamma_8		8663515						
ANR	8663576	Symbol	this -> next		8663515						
ANR	8663577	Symbol	this		8663515						
ANR	8663578	Symbol	pi		8663515						
ANR	8663579	Symbol	* that		8663515						
ANR	8663580	Symbol	PNG_MAX_GAMMA_8		8663515						
ANR	8663581	Function	image_transform_png_set_scale_16_mod	7411:0:232491:233004							
ANR	8663582	FunctionDef	"image_transform_png_set_scale_16_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8663581	0					
ANR	8663583	CompoundStatement		7415:0:232652:233004	8663581	0					
ANR	8663584	IfStatement	if ( that -> bit_depth == 16 )		8663581	0					
ANR	8663585	Condition	that -> bit_depth == 16	7416:7:232661:232681	8663581	0	True				
ANR	8663586	EqualityExpression	that -> bit_depth == 16		8663581	0		==			
ANR	8663587	PtrMemberAccess	that -> bit_depth		8663581	0					
ANR	8663588	Identifier	that		8663581	0					
ANR	8663589	Identifier	bit_depth		8663581	1					
ANR	8663590	PrimaryExpression	16		8663581	1					
ANR	8663591	CompoundStatement		3:3:34:34	8663581	1					
ANR	8663592	ExpressionStatement	that -> sample_depth = that -> bit_depth = 8	7418:6:232695:232735	8663581	0	True				
ANR	8663593	AssignmentExpression	that -> sample_depth = that -> bit_depth = 8		8663581	0		=			
ANR	8663594	PtrMemberAccess	that -> sample_depth		8663581	0					
ANR	8663595	Identifier	that		8663581	0					
ANR	8663596	Identifier	sample_depth		8663581	1					
ANR	8663597	AssignmentExpression	that -> bit_depth = 8		8663581	1		=			
ANR	8663598	PtrMemberAccess	that -> bit_depth		8663581	0					
ANR	8663599	Identifier	that		8663581	0					
ANR	8663600	Identifier	bit_depth		8663581	1					
ANR	8663601	PrimaryExpression	8		8663581	1					
ANR	8663602	IfStatement	if ( that -> red_sBIT > 8 )		8663581	1					
ANR	8663603	Condition	that -> red_sBIT > 8	7419:10:232747:232764	8663581	0	True				
ANR	8663604	RelationalExpression	that -> red_sBIT > 8		8663581	0		>			
ANR	8663605	PtrMemberAccess	that -> red_sBIT		8663581	0					
ANR	8663606	Identifier	that		8663581	0					
ANR	8663607	Identifier	red_sBIT		8663581	1					
ANR	8663608	PrimaryExpression	8		8663581	1					
ANR	8663609	ExpressionStatement	that -> red_sBIT = 8	7419:30:232767:232785	8663581	1	True				
ANR	8663610	AssignmentExpression	that -> red_sBIT = 8		8663581	0		=			
ANR	8663611	PtrMemberAccess	that -> red_sBIT		8663581	0					
ANR	8663612	Identifier	that		8663581	0					
ANR	8663613	Identifier	red_sBIT		8663581	1					
ANR	8663614	PrimaryExpression	8		8663581	1					
ANR	8663615	IfStatement	if ( that -> green_sBIT > 8 )		8663581	2					
ANR	8663616	Condition	that -> green_sBIT > 8	7420:10:232797:232816	8663581	0	True				
ANR	8663617	RelationalExpression	that -> green_sBIT > 8		8663581	0		>			
ANR	8663618	PtrMemberAccess	that -> green_sBIT		8663581	0					
ANR	8663619	Identifier	that		8663581	0					
ANR	8663620	Identifier	green_sBIT		8663581	1					
ANR	8663621	PrimaryExpression	8		8663581	1					
ANR	8663622	ExpressionStatement	that -> green_sBIT = 8	7420:32:232819:232839	8663581	1	True				
ANR	8663623	AssignmentExpression	that -> green_sBIT = 8		8663581	0		=			
ANR	8663624	PtrMemberAccess	that -> green_sBIT		8663581	0					
ANR	8663625	Identifier	that		8663581	0					
ANR	8663626	Identifier	green_sBIT		8663581	1					
ANR	8663627	PrimaryExpression	8		8663581	1					
ANR	8663628	IfStatement	if ( that -> blue_sBIT > 8 )		8663581	3					
ANR	8663629	Condition	that -> blue_sBIT > 8	7421:10:232851:232869	8663581	0	True				
ANR	8663630	RelationalExpression	that -> blue_sBIT > 8		8663581	0		>			
ANR	8663631	PtrMemberAccess	that -> blue_sBIT		8663581	0					
ANR	8663632	Identifier	that		8663581	0					
ANR	8663633	Identifier	blue_sBIT		8663581	1					
ANR	8663634	PrimaryExpression	8		8663581	1					
ANR	8663635	ExpressionStatement	that -> blue_sBIT = 8	7421:31:232872:232891	8663581	1	True				
ANR	8663636	AssignmentExpression	that -> blue_sBIT = 8		8663581	0		=			
ANR	8663637	PtrMemberAccess	that -> blue_sBIT		8663581	0					
ANR	8663638	Identifier	that		8663581	0					
ANR	8663639	Identifier	blue_sBIT		8663581	1					
ANR	8663640	PrimaryExpression	8		8663581	1					
ANR	8663641	IfStatement	if ( that -> alpha_sBIT > 8 )		8663581	4					
ANR	8663642	Condition	that -> alpha_sBIT > 8	7422:10:232903:232922	8663581	0	True				
ANR	8663643	RelationalExpression	that -> alpha_sBIT > 8		8663581	0		>			
ANR	8663644	PtrMemberAccess	that -> alpha_sBIT		8663581	0					
ANR	8663645	Identifier	that		8663581	0					
ANR	8663646	Identifier	alpha_sBIT		8663581	1					
ANR	8663647	PrimaryExpression	8		8663581	1					
ANR	8663648	ExpressionStatement	that -> alpha_sBIT = 8	7422:32:232925:232945	8663581	1	True				
ANR	8663649	AssignmentExpression	that -> alpha_sBIT = 8		8663581	0		=			
ANR	8663650	PtrMemberAccess	that -> alpha_sBIT		8663581	0					
ANR	8663651	Identifier	that		8663581	0					
ANR	8663652	Identifier	alpha_sBIT		8663581	1					
ANR	8663653	PrimaryExpression	8		8663581	1					
ANR	8663654	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7425:3:232956:233002	8663581	1	True				
ANR	8663655	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8663581	0					
ANR	8663656	Callee	this -> next -> mod		8663581	0					
ANR	8663657	PtrMemberAccess	this -> next -> mod		8663581	0					
ANR	8663658	PtrMemberAccess	this -> next		8663581	0					
ANR	8663659	Identifier	this		8663581	0					
ANR	8663660	Identifier	next		8663581	1					
ANR	8663661	Identifier	mod		8663581	1					
ANR	8663662	ArgumentList	this -> next		8663581	1					
ANR	8663663	Argument	this -> next		8663581	0					
ANR	8663664	PtrMemberAccess	this -> next		8663581	0					
ANR	8663665	Identifier	this		8663581	0					
ANR	8663666	Identifier	next		8663581	1					
ANR	8663667	Argument	that		8663581	1					
ANR	8663668	Identifier	that		8663581	0					
ANR	8663669	Argument	pp		8663581	2					
ANR	8663670	Identifier	pp		8663581	0					
ANR	8663671	Argument	display		8663581	3					
ANR	8663672	Identifier	display		8663581	0					
ANR	8663673	ReturnType	static void		8663581	1					
ANR	8663674	Identifier	image_transform_png_set_scale_16_mod		8663581	2					
ANR	8663675	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8663581	3					
ANR	8663676	Parameter	const image_transform * this	7412:37:232540:232566	8663581	0	True				
ANR	8663677	ParameterType	const image_transform *		8663581	0					
ANR	8663678	Identifier	this		8663581	1					
ANR	8663679	Parameter	image_pixel * that	7413:4:232573:232589	8663581	1	True				
ANR	8663680	ParameterType	image_pixel *		8663581	0					
ANR	8663681	Identifier	that		8663581	1					
ANR	8663682	Parameter	png_const_structp pp	7413:23:232592:232611	8663581	2	True				
ANR	8663683	ParameterType	png_const_structp		8663581	0					
ANR	8663684	Identifier	pp		8663581	1					
ANR	8663685	Parameter	const transform_display * display	7414:4:232618:232649	8663581	3	True				
ANR	8663686	ParameterType	const transform_display *		8663581	0					
ANR	8663687	Identifier	display		8663581	1					
ANR	8663688	CFGEntryNode	ENTRY		8663581		True				
ANR	8663689	CFGExitNode	EXIT		8663581		True				
ANR	8663690	Symbol	pp		8663581						
ANR	8663691	Symbol	this -> next		8663581						
ANR	8663692	Symbol	display		8663581						
ANR	8663693	Symbol	this		8663581						
ANR	8663694	Symbol	that -> bit_depth		8663581						
ANR	8663695	Symbol	that -> red_sBIT		8663581						
ANR	8663696	Symbol	that -> green_sBIT		8663581						
ANR	8663697	Symbol	* this		8663581						
ANR	8663698	Symbol	that		8663581						
ANR	8663699	Symbol	that -> alpha_sBIT		8663581						
ANR	8663700	Symbol	that -> blue_sBIT		8663581						
ANR	8663701	Symbol	* that		8663581						
ANR	8663702	Symbol	that -> sample_depth		8663581						
ANR	8663703	Function	image_transform_png_set_scale_16_add	7428:0:233007:233246							
ANR	8663704	FunctionDef	"image_transform_png_set_scale_16_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8663703	0					
ANR	8663705	CompoundStatement		7431:0:233154:233246	8663703	0					
ANR	8663706	Statement	UNUSED	7432:3:233159:233164	8663703	0	True				
ANR	8663707	ExpressionStatement	( colour_type ) this -> next = * that	7432:9:233165:233201	8663703	1	True				
ANR	8663708	AssignmentExpression	( colour_type ) this -> next = * that		8663703	0		=			
ANR	8663709	CastExpression	( colour_type ) this -> next		8663703	0					
ANR	8663710	CastTarget	colour_type		8663703	0					
ANR	8663711	PtrMemberAccess	this -> next		8663703	1					
ANR	8663712	Identifier	this		8663703	0					
ANR	8663713	Identifier	next		8663703	1					
ANR	8663714	UnaryOperationExpression	* that		8663703	1					
ANR	8663715	UnaryOperator	*		8663703	0					
ANR	8663716	Identifier	that		8663703	1					
ANR	8663717	ExpressionStatement	* that = this	7435:3:233206:233218	8663703	2	True				
ANR	8663718	AssignmentExpression	* that = this		8663703	0		=			
ANR	8663719	UnaryOperationExpression	* that		8663703	0					
ANR	8663720	UnaryOperator	*		8663703	0					
ANR	8663721	Identifier	that		8663703	1					
ANR	8663722	Identifier	this		8663703	1					
ANR	8663723	ReturnStatement	return bit_depth > 8 ;	7437:3:233224:233244	8663703	3	True				
ANR	8663724	RelationalExpression	bit_depth > 8		8663703	0		>			
ANR	8663725	Identifier	bit_depth		8663703	0					
ANR	8663726	PrimaryExpression	8		8663703	1					
ANR	8663727	ReturnType	static int		8663703	1					
ANR	8663728	Identifier	image_transform_png_set_scale_16_add		8663703	2					
ANR	8663729	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8663703	3					
ANR	8663730	Parameter	image_transform * this	7429:37:233055:233075	8663703	0	True				
ANR	8663731	ParameterType	image_transform *		8663703	0					
ANR	8663732	Identifier	this		8663703	1					
ANR	8663733	Parameter	const image_transform * * that	7430:4:233082:233109	8663703	1	True				
ANR	8663734	ParameterType	const image_transform * *		8663703	0					
ANR	8663735	Identifier	that		8663703	1					
ANR	8663736	Parameter	png_byte colour_type	7430:34:233112:233131	8663703	2	True				
ANR	8663737	ParameterType	png_byte		8663703	0					
ANR	8663738	Identifier	colour_type		8663703	1					
ANR	8663739	Parameter	png_byte bit_depth	7430:56:233134:233151	8663703	3	True				
ANR	8663740	ParameterType	png_byte		8663703	0					
ANR	8663741	Identifier	bit_depth		8663703	1					
ANR	8663742	CFGEntryNode	ENTRY		8663703		True				
ANR	8663743	CFGExitNode	EXIT		8663703		True				
ANR	8663744	Symbol	colour_type		8663703						
ANR	8663745	Symbol	* this		8663703						
ANR	8663746	Symbol	that		8663703						
ANR	8663747	Symbol	this -> next		8663703						
ANR	8663748	Symbol	this		8663703						
ANR	8663749	Symbol	* that		8663703						
ANR	8663750	Symbol	bit_depth		8663703						
ANR	8663751	Function	image_transform_png_set_strip_16_set	7447:0:233449:233792							
ANR	8663752	FunctionDef	"image_transform_png_set_strip_16_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8663751	0					
ANR	8663753	CompoundStatement		7450:0:233586:233792	8663751	0					
ANR	8663754	ExpressionStatement	png_set_strip_16 ( pp )	7451:3:233591:233611	8663751	0	True				
ANR	8663755	CallExpression	png_set_strip_16 ( pp )		8663751	0					
ANR	8663756	Callee	png_set_strip_16		8663751	0					
ANR	8663757	Identifier	png_set_strip_16		8663751	0					
ANR	8663758	ArgumentList	pp		8663751	1					
ANR	8663759	Argument	pp		8663751	0					
ANR	8663760	Identifier	pp		8663751	0					
ANR	8663761	Statement	if	7452:3:233616:233617	8663751	1	True				
ANR	8663762	Statement	PNG_LIBPNG_VER	7452:6:233619:233632	8663751	2	True				
ANR	8663763	Statement	<	7452:21:233634:233634	8663751	3	True				
ANR	8663764	Statement	10700	7452:23:233636:233640	8663751	4	True				
ANR	8663765	ExpressionStatement	that -> max_gamma_8 = PNG_MAX_GAMMA_8	7454:6:233700:233735	8663751	5	True				
ANR	8663766	AssignmentExpression	that -> max_gamma_8 = PNG_MAX_GAMMA_8		8663751	0		=			
ANR	8663767	PtrMemberAccess	that -> max_gamma_8		8663751	0					
ANR	8663768	Identifier	that		8663751	0					
ANR	8663769	Identifier	max_gamma_8		8663751	1					
ANR	8663770	Identifier	PNG_MAX_GAMMA_8		8663751	1					
ANR	8663771	Statement	endif	7455:3:233740:233744	8663751	6	True				
ANR	8663772	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7456:3:233749:233790	8663751	7	True				
ANR	8663773	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8663751	0					
ANR	8663774	Callee	this -> next -> set		8663751	0					
ANR	8663775	PtrMemberAccess	this -> next -> set		8663751	0					
ANR	8663776	PtrMemberAccess	this -> next		8663751	0					
ANR	8663777	Identifier	this		8663751	0					
ANR	8663778	Identifier	next		8663751	1					
ANR	8663779	Identifier	set		8663751	1					
ANR	8663780	ArgumentList	this -> next		8663751	1					
ANR	8663781	Argument	this -> next		8663751	0					
ANR	8663782	PtrMemberAccess	this -> next		8663751	0					
ANR	8663783	Identifier	this		8663751	0					
ANR	8663784	Identifier	next		8663751	1					
ANR	8663785	Argument	that		8663751	1					
ANR	8663786	Identifier	that		8663751	0					
ANR	8663787	Argument	pp		8663751	2					
ANR	8663788	Identifier	pp		8663751	0					
ANR	8663789	Argument	pi		8663751	3					
ANR	8663790	Identifier	pi		8663751	0					
ANR	8663791	ReturnType	static void		8663751	1					
ANR	8663792	Identifier	image_transform_png_set_strip_16_set		8663751	2					
ANR	8663793	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8663751	3					
ANR	8663794	Parameter	const image_transform * this	7448:37:233498:233524	8663751	0	True				
ANR	8663795	ParameterType	const image_transform *		8663751	0					
ANR	8663796	Identifier	this		8663751	1					
ANR	8663797	Parameter	transform_display * that	7449:4:233531:233553	8663751	1	True				
ANR	8663798	ParameterType	transform_display *		8663751	0					
ANR	8663799	Identifier	that		8663751	1					
ANR	8663800	Parameter	png_structp pp	7449:29:233556:233569	8663751	2	True				
ANR	8663801	ParameterType	png_structp		8663751	0					
ANR	8663802	Identifier	pp		8663751	1					
ANR	8663803	Parameter	png_infop pi	7449:45:233572:233583	8663751	3	True				
ANR	8663804	ParameterType	png_infop		8663751	0					
ANR	8663805	Identifier	pi		8663751	1					
ANR	8663806	CFGEntryNode	ENTRY		8663751		True				
ANR	8663807	CFGExitNode	EXIT		8663751		True				
ANR	8663808	Symbol	pp		8663751						
ANR	8663809	Symbol	* this		8663751						
ANR	8663810	Symbol	that		8663751						
ANR	8663811	Symbol	that -> max_gamma_8		8663751						
ANR	8663812	Symbol	this -> next		8663751						
ANR	8663813	Symbol	this		8663751						
ANR	8663814	Symbol	pi		8663751						
ANR	8663815	Symbol	* that		8663751						
ANR	8663816	Symbol	PNG_MAX_GAMMA_8		8663751						
ANR	8663817	Function	image_transform_png_set_strip_16_mod	7459:0:233795:235208							
ANR	8663818	FunctionDef	"image_transform_png_set_strip_16_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8663817	0					
ANR	8663819	CompoundStatement		7463:0:233956:235208	8663817	0					
ANR	8663820	IfStatement	if ( that -> bit_depth == 16 )		8663817	0					
ANR	8663821	Condition	that -> bit_depth == 16	7464:7:233965:233985	8663817	0	True				
ANR	8663822	EqualityExpression	that -> bit_depth == 16		8663817	0		==			
ANR	8663823	PtrMemberAccess	that -> bit_depth		8663817	0					
ANR	8663824	Identifier	that		8663817	0					
ANR	8663825	Identifier	bit_depth		8663817	1					
ANR	8663826	PrimaryExpression	16		8663817	1					
ANR	8663827	CompoundStatement		3:3:34:34	8663817	1					
ANR	8663828	ExpressionStatement	that -> sample_depth = that -> bit_depth = 8	7466:6:233999:234039	8663817	0	True				
ANR	8663829	AssignmentExpression	that -> sample_depth = that -> bit_depth = 8		8663817	0		=			
ANR	8663830	PtrMemberAccess	that -> sample_depth		8663817	0					
ANR	8663831	Identifier	that		8663817	0					
ANR	8663832	Identifier	sample_depth		8663817	1					
ANR	8663833	AssignmentExpression	that -> bit_depth = 8		8663817	1		=			
ANR	8663834	PtrMemberAccess	that -> bit_depth		8663817	0					
ANR	8663835	Identifier	that		8663817	0					
ANR	8663836	Identifier	bit_depth		8663817	1					
ANR	8663837	PrimaryExpression	8		8663817	1					
ANR	8663838	IfStatement	if ( that -> red_sBIT > 8 )		8663817	1					
ANR	8663839	Condition	that -> red_sBIT > 8	7467:10:234051:234068	8663817	0	True				
ANR	8663840	RelationalExpression	that -> red_sBIT > 8		8663817	0		>			
ANR	8663841	PtrMemberAccess	that -> red_sBIT		8663817	0					
ANR	8663842	Identifier	that		8663817	0					
ANR	8663843	Identifier	red_sBIT		8663817	1					
ANR	8663844	PrimaryExpression	8		8663817	1					
ANR	8663845	ExpressionStatement	that -> red_sBIT = 8	7467:30:234071:234089	8663817	1	True				
ANR	8663846	AssignmentExpression	that -> red_sBIT = 8		8663817	0		=			
ANR	8663847	PtrMemberAccess	that -> red_sBIT		8663817	0					
ANR	8663848	Identifier	that		8663817	0					
ANR	8663849	Identifier	red_sBIT		8663817	1					
ANR	8663850	PrimaryExpression	8		8663817	1					
ANR	8663851	IfStatement	if ( that -> green_sBIT > 8 )		8663817	2					
ANR	8663852	Condition	that -> green_sBIT > 8	7468:10:234101:234120	8663817	0	True				
ANR	8663853	RelationalExpression	that -> green_sBIT > 8		8663817	0		>			
ANR	8663854	PtrMemberAccess	that -> green_sBIT		8663817	0					
ANR	8663855	Identifier	that		8663817	0					
ANR	8663856	Identifier	green_sBIT		8663817	1					
ANR	8663857	PrimaryExpression	8		8663817	1					
ANR	8663858	ExpressionStatement	that -> green_sBIT = 8	7468:32:234123:234143	8663817	1	True				
ANR	8663859	AssignmentExpression	that -> green_sBIT = 8		8663817	0		=			
ANR	8663860	PtrMemberAccess	that -> green_sBIT		8663817	0					
ANR	8663861	Identifier	that		8663817	0					
ANR	8663862	Identifier	green_sBIT		8663817	1					
ANR	8663863	PrimaryExpression	8		8663817	1					
ANR	8663864	IfStatement	if ( that -> blue_sBIT > 8 )		8663817	3					
ANR	8663865	Condition	that -> blue_sBIT > 8	7469:10:234155:234173	8663817	0	True				
ANR	8663866	RelationalExpression	that -> blue_sBIT > 8		8663817	0		>			
ANR	8663867	PtrMemberAccess	that -> blue_sBIT		8663817	0					
ANR	8663868	Identifier	that		8663817	0					
ANR	8663869	Identifier	blue_sBIT		8663817	1					
ANR	8663870	PrimaryExpression	8		8663817	1					
ANR	8663871	ExpressionStatement	that -> blue_sBIT = 8	7469:31:234176:234195	8663817	1	True				
ANR	8663872	AssignmentExpression	that -> blue_sBIT = 8		8663817	0		=			
ANR	8663873	PtrMemberAccess	that -> blue_sBIT		8663817	0					
ANR	8663874	Identifier	that		8663817	0					
ANR	8663875	Identifier	blue_sBIT		8663817	1					
ANR	8663876	PrimaryExpression	8		8663817	1					
ANR	8663877	IfStatement	if ( that -> alpha_sBIT > 8 )		8663817	4					
ANR	8663878	Condition	that -> alpha_sBIT > 8	7470:10:234207:234226	8663817	0	True				
ANR	8663879	RelationalExpression	that -> alpha_sBIT > 8		8663817	0		>			
ANR	8663880	PtrMemberAccess	that -> alpha_sBIT		8663817	0					
ANR	8663881	Identifier	that		8663817	0					
ANR	8663882	Identifier	alpha_sBIT		8663817	1					
ANR	8663883	PrimaryExpression	8		8663817	1					
ANR	8663884	ExpressionStatement	that -> alpha_sBIT = 8	7470:32:234229:234249	8663817	1	True				
ANR	8663885	AssignmentExpression	that -> alpha_sBIT = 8		8663817	0		=			
ANR	8663886	PtrMemberAccess	that -> alpha_sBIT		8663817	0					
ANR	8663887	Identifier	that		8663817	0					
ANR	8663888	Identifier	alpha_sBIT		8663817	1					
ANR	8663889	PrimaryExpression	8		8663817	1					
ANR	8663890	Statement	ifdef	7476:6:234471:234475	8663817	5	True				
ANR	8663891	Statement	PNG_READ_ACCURATE_SCALE_SUPPORTED	7476:12:234477:234509	8663817	6	True				
ANR	8663892	Statement	if	7477:9:234520:234521	8663817	7	True				
ANR	8663893	Statement	PNG_LIBPNG_VER	7477:12:234523:234536	8663817	8	True				
ANR	8663894	Statement	>=	7477:27:234538:234539	8663817	9	True				
ANR	8663895	Statement	10504	7477:30:234541:234545	8663817	10	True				
ANR	8663896	Statement	error	7478:12:234559:234563	8663817	11	True				
ANR	8663897	Statement	PNG_READ_ACCURATE_SCALE	7478:18:234565:234587	8663817	12	True				
ANR	8663898	Statement	should	7478:42:234589:234594	8663817	13	True				
ANR	8663899	Statement	not	7478:49:234596:234598	8663817	14	True				
ANR	8663900	Statement	be	7478:53:234600:234601	8663817	15	True				
ANR	8663901	Statement	set	7478:56:234603:234605	8663817	16	True				
ANR	8663902	Statement	endif	7479:9:234616:234620	8663817	17	True				
ANR	8663903	CompoundStatement		25:12:1014:1048	8663817	18					
ANR	8663904	IdentifierDeclStatement	const double d = ( 255 - 128.5 ) / 65535 ;	7487:12:234971:235005	8663817	0	True				
ANR	8663905	IdentifierDecl	d = ( 255 - 128.5 ) / 65535		8663817	0					
ANR	8663906	IdentifierDeclType	const double		8663817	0					
ANR	8663907	Identifier	d		8663817	1					
ANR	8663908	AssignmentExpression	d = ( 255 - 128.5 ) / 65535		8663817	2		=			
ANR	8663909	Identifier	d		8663817	0					
ANR	8663910	MultiplicativeExpression	( 255 - 128.5 ) / 65535		8663817	1		/			
ANR	8663911	AdditiveExpression	255 - 128.5		8663817	0		-			
ANR	8663912	PrimaryExpression	255		8663817	0					
ANR	8663913	PrimaryExpression	128.5		8663817	1					
ANR	8663914	PrimaryExpression	65535		8663817	1					
ANR	8663915	ExpressionStatement	that -> rede += d	7488:12:235019:235034	8663817	1	True				
ANR	8663916	AssignmentExpression	that -> rede += d		8663817	0		+=			
ANR	8663917	PtrMemberAccess	that -> rede		8663817	0					
ANR	8663918	Identifier	that		8663817	0					
ANR	8663919	Identifier	rede		8663817	1					
ANR	8663920	Identifier	d		8663817	1					
ANR	8663921	ExpressionStatement	that -> greene += d	7489:12:235048:235065	8663817	2	True				
ANR	8663922	AssignmentExpression	that -> greene += d		8663817	0		+=			
ANR	8663923	PtrMemberAccess	that -> greene		8663817	0					
ANR	8663924	Identifier	that		8663817	0					
ANR	8663925	Identifier	greene		8663817	1					
ANR	8663926	Identifier	d		8663817	1					
ANR	8663927	ExpressionStatement	that -> bluee += d	7490:12:235079:235095	8663817	3	True				
ANR	8663928	AssignmentExpression	that -> bluee += d		8663817	0		+=			
ANR	8663929	PtrMemberAccess	that -> bluee		8663817	0					
ANR	8663930	Identifier	that		8663817	0					
ANR	8663931	Identifier	bluee		8663817	1					
ANR	8663932	Identifier	d		8663817	1					
ANR	8663933	ExpressionStatement	that -> alphae += d	7491:12:235109:235126	8663817	4	True				
ANR	8663934	AssignmentExpression	that -> alphae += d		8663817	0		+=			
ANR	8663935	PtrMemberAccess	that -> alphae		8663817	0					
ANR	8663936	Identifier	that		8663817	0					
ANR	8663937	Identifier	alphae		8663817	1					
ANR	8663938	Identifier	d		8663817	1					
ANR	8663939	Statement	endif	7493:6:235145:235149	8663817	19	True				
ANR	8663940	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7496:3:235160:235206	8663817	1	True				
ANR	8663941	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8663817	0					
ANR	8663942	Callee	this -> next -> mod		8663817	0					
ANR	8663943	PtrMemberAccess	this -> next -> mod		8663817	0					
ANR	8663944	PtrMemberAccess	this -> next		8663817	0					
ANR	8663945	Identifier	this		8663817	0					
ANR	8663946	Identifier	next		8663817	1					
ANR	8663947	Identifier	mod		8663817	1					
ANR	8663948	ArgumentList	this -> next		8663817	1					
ANR	8663949	Argument	this -> next		8663817	0					
ANR	8663950	PtrMemberAccess	this -> next		8663817	0					
ANR	8663951	Identifier	this		8663817	0					
ANR	8663952	Identifier	next		8663817	1					
ANR	8663953	Argument	that		8663817	1					
ANR	8663954	Identifier	that		8663817	0					
ANR	8663955	Argument	pp		8663817	2					
ANR	8663956	Identifier	pp		8663817	0					
ANR	8663957	Argument	display		8663817	3					
ANR	8663958	Identifier	display		8663817	0					
ANR	8663959	ReturnType	static void		8663817	1					
ANR	8663960	Identifier	image_transform_png_set_strip_16_mod		8663817	2					
ANR	8663961	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8663817	3					
ANR	8663962	Parameter	const image_transform * this	7460:37:233844:233870	8663817	0	True				
ANR	8663963	ParameterType	const image_transform *		8663817	0					
ANR	8663964	Identifier	this		8663817	1					
ANR	8663965	Parameter	image_pixel * that	7461:4:233877:233893	8663817	1	True				
ANR	8663966	ParameterType	image_pixel *		8663817	0					
ANR	8663967	Identifier	that		8663817	1					
ANR	8663968	Parameter	png_const_structp pp	7461:23:233896:233915	8663817	2	True				
ANR	8663969	ParameterType	png_const_structp		8663817	0					
ANR	8663970	Identifier	pp		8663817	1					
ANR	8663971	Parameter	const transform_display * display	7462:4:233922:233953	8663817	3	True				
ANR	8663972	ParameterType	const transform_display *		8663817	0					
ANR	8663973	Identifier	display		8663817	1					
ANR	8663974	CFGEntryNode	ENTRY		8663817		True				
ANR	8663975	CFGExitNode	EXIT		8663817		True				
ANR	8663976	Symbol	pp		8663817						
ANR	8663977	Symbol	that -> alphae		8663817						
ANR	8663978	Symbol	d		8663817						
ANR	8663979	Symbol	that -> bluee		8663817						
ANR	8663980	Symbol	this -> next		8663817						
ANR	8663981	Symbol	display		8663817						
ANR	8663982	Symbol	this		8663817						
ANR	8663983	Symbol	that -> rede		8663817						
ANR	8663984	Symbol	that -> bit_depth		8663817						
ANR	8663985	Symbol	that -> red_sBIT		8663817						
ANR	8663986	Symbol	that -> green_sBIT		8663817						
ANR	8663987	Symbol	* this		8663817						
ANR	8663988	Symbol	that		8663817						
ANR	8663989	Symbol	that -> alpha_sBIT		8663817						
ANR	8663990	Symbol	that -> greene		8663817						
ANR	8663991	Symbol	that -> blue_sBIT		8663817						
ANR	8663992	Symbol	* that		8663817						
ANR	8663993	Symbol	that -> sample_depth		8663817						
ANR	8663994	Function	image_transform_png_set_strip_16_add	7499:0:235211:235450							
ANR	8663995	FunctionDef	"image_transform_png_set_strip_16_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8663994	0					
ANR	8663996	CompoundStatement		7502:0:235358:235450	8663994	0					
ANR	8663997	Statement	UNUSED	7503:3:235363:235368	8663994	0	True				
ANR	8663998	ExpressionStatement	( colour_type ) this -> next = * that	7503:9:235369:235405	8663994	1	True				
ANR	8663999	AssignmentExpression	( colour_type ) this -> next = * that		8663994	0		=			
ANR	8664000	CastExpression	( colour_type ) this -> next		8663994	0					
ANR	8664001	CastTarget	colour_type		8663994	0					
ANR	8664002	PtrMemberAccess	this -> next		8663994	1					
ANR	8664003	Identifier	this		8663994	0					
ANR	8664004	Identifier	next		8663994	1					
ANR	8664005	UnaryOperationExpression	* that		8663994	1					
ANR	8664006	UnaryOperator	*		8663994	0					
ANR	8664007	Identifier	that		8663994	1					
ANR	8664008	ExpressionStatement	* that = this	7506:3:235410:235422	8663994	2	True				
ANR	8664009	AssignmentExpression	* that = this		8663994	0		=			
ANR	8664010	UnaryOperationExpression	* that		8663994	0					
ANR	8664011	UnaryOperator	*		8663994	0					
ANR	8664012	Identifier	that		8663994	1					
ANR	8664013	Identifier	this		8663994	1					
ANR	8664014	ReturnStatement	return bit_depth > 8 ;	7508:3:235428:235448	8663994	3	True				
ANR	8664015	RelationalExpression	bit_depth > 8		8663994	0		>			
ANR	8664016	Identifier	bit_depth		8663994	0					
ANR	8664017	PrimaryExpression	8		8663994	1					
ANR	8664018	ReturnType	static int		8663994	1					
ANR	8664019	Identifier	image_transform_png_set_strip_16_add		8663994	2					
ANR	8664020	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8663994	3					
ANR	8664021	Parameter	image_transform * this	7500:37:235259:235279	8663994	0	True				
ANR	8664022	ParameterType	image_transform *		8663994	0					
ANR	8664023	Identifier	this		8663994	1					
ANR	8664024	Parameter	const image_transform * * that	7501:4:235286:235313	8663994	1	True				
ANR	8664025	ParameterType	const image_transform * *		8663994	0					
ANR	8664026	Identifier	that		8663994	1					
ANR	8664027	Parameter	png_byte colour_type	7501:34:235316:235335	8663994	2	True				
ANR	8664028	ParameterType	png_byte		8663994	0					
ANR	8664029	Identifier	colour_type		8663994	1					
ANR	8664030	Parameter	png_byte bit_depth	7501:56:235338:235355	8663994	3	True				
ANR	8664031	ParameterType	png_byte		8663994	0					
ANR	8664032	Identifier	bit_depth		8663994	1					
ANR	8664033	CFGEntryNode	ENTRY		8663994		True				
ANR	8664034	CFGExitNode	EXIT		8663994		True				
ANR	8664035	Symbol	colour_type		8663994						
ANR	8664036	Symbol	* this		8663994						
ANR	8664037	Symbol	that		8663994						
ANR	8664038	Symbol	this -> next		8663994						
ANR	8664039	Symbol	this		8663994						
ANR	8664040	Symbol	* that		8663994						
ANR	8664041	Symbol	bit_depth		8663994						
ANR	8664042	Function	image_transform_png_set_strip_alpha_set	7518:0:235612:235828							
ANR	8664043	FunctionDef	"image_transform_png_set_strip_alpha_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8664042	0					
ANR	8664044	CompoundStatement		7521:0:235752:235828	8664042	0					
ANR	8664045	ExpressionStatement	png_set_strip_alpha ( pp )	7522:3:235757:235780	8664042	0	True				
ANR	8664046	CallExpression	png_set_strip_alpha ( pp )		8664042	0					
ANR	8664047	Callee	png_set_strip_alpha		8664042	0					
ANR	8664048	Identifier	png_set_strip_alpha		8664042	0					
ANR	8664049	ArgumentList	pp		8664042	1					
ANR	8664050	Argument	pp		8664042	0					
ANR	8664051	Identifier	pp		8664042	0					
ANR	8664052	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	7523:3:235785:235826	8664042	1	True				
ANR	8664053	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8664042	0					
ANR	8664054	Callee	this -> next -> set		8664042	0					
ANR	8664055	PtrMemberAccess	this -> next -> set		8664042	0					
ANR	8664056	PtrMemberAccess	this -> next		8664042	0					
ANR	8664057	Identifier	this		8664042	0					
ANR	8664058	Identifier	next		8664042	1					
ANR	8664059	Identifier	set		8664042	1					
ANR	8664060	ArgumentList	this -> next		8664042	1					
ANR	8664061	Argument	this -> next		8664042	0					
ANR	8664062	PtrMemberAccess	this -> next		8664042	0					
ANR	8664063	Identifier	this		8664042	0					
ANR	8664064	Identifier	next		8664042	1					
ANR	8664065	Argument	that		8664042	1					
ANR	8664066	Identifier	that		8664042	0					
ANR	8664067	Argument	pp		8664042	2					
ANR	8664068	Identifier	pp		8664042	0					
ANR	8664069	Argument	pi		8664042	3					
ANR	8664070	Identifier	pi		8664042	0					
ANR	8664071	ReturnType	static void		8664042	1					
ANR	8664072	Identifier	image_transform_png_set_strip_alpha_set		8664042	2					
ANR	8664073	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8664042	3					
ANR	8664074	Parameter	const image_transform * this	7519:40:235664:235690	8664042	0	True				
ANR	8664075	ParameterType	const image_transform *		8664042	0					
ANR	8664076	Identifier	this		8664042	1					
ANR	8664077	Parameter	transform_display * that	7520:4:235697:235719	8664042	1	True				
ANR	8664078	ParameterType	transform_display *		8664042	0					
ANR	8664079	Identifier	that		8664042	1					
ANR	8664080	Parameter	png_structp pp	7520:29:235722:235735	8664042	2	True				
ANR	8664081	ParameterType	png_structp		8664042	0					
ANR	8664082	Identifier	pp		8664042	1					
ANR	8664083	Parameter	png_infop pi	7520:45:235738:235749	8664042	3	True				
ANR	8664084	ParameterType	png_infop		8664042	0					
ANR	8664085	Identifier	pi		8664042	1					
ANR	8664086	CFGEntryNode	ENTRY		8664042		True				
ANR	8664087	CFGExitNode	EXIT		8664042		True				
ANR	8664088	Symbol	pp		8664042						
ANR	8664089	Symbol	* this		8664042						
ANR	8664090	Symbol	that		8664042						
ANR	8664091	Symbol	this -> next		8664042						
ANR	8664092	Symbol	this		8664042						
ANR	8664093	Symbol	pi		8664042						
ANR	8664094	Function	image_transform_png_set_strip_alpha_mod	7526:0:235831:236302							
ANR	8664095	FunctionDef	"image_transform_png_set_strip_alpha_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8664094	0					
ANR	8664096	CompoundStatement		7530:0:235995:236302	8664094	0					
ANR	8664097	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA )		8664094	0					
ANR	8664098	Condition	that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA	7531:7:236004:236049	8664094	0	True				
ANR	8664099	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA		8664094	0		==			
ANR	8664100	PtrMemberAccess	that -> colour_type		8664094	0					
ANR	8664101	Identifier	that		8664094	0					
ANR	8664102	Identifier	colour_type		8664094	1					
ANR	8664103	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		8664094	1					
ANR	8664104	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_GRAY	7532:6:236058:236097	8664094	1	True				
ANR	8664105	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_GRAY		8664094	0		=			
ANR	8664106	PtrMemberAccess	that -> colour_type		8664094	0					
ANR	8664107	Identifier	that		8664094	0					
ANR	8664108	Identifier	colour_type		8664094	1					
ANR	8664109	Identifier	PNG_COLOR_TYPE_GRAY		8664094	1					
ANR	8664110	ElseStatement	else		8664094	0					
ANR	8664111	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA )		8664094	0					
ANR	8664112	Condition	that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA	7533:12:236111:236155	8664094	0	True				
ANR	8664113	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA		8664094	0		==			
ANR	8664114	PtrMemberAccess	that -> colour_type		8664094	0					
ANR	8664115	Identifier	that		8664094	0					
ANR	8664116	Identifier	colour_type		8664094	1					
ANR	8664117	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		8664094	1					
ANR	8664118	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_RGB	7534:6:236164:236202	8664094	1	True				
ANR	8664119	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_RGB		8664094	0		=			
ANR	8664120	PtrMemberAccess	that -> colour_type		8664094	0					
ANR	8664121	Identifier	that		8664094	0					
ANR	8664122	Identifier	colour_type		8664094	1					
ANR	8664123	Identifier	PNG_COLOR_TYPE_RGB		8664094	1					
ANR	8664124	ExpressionStatement	that -> have_tRNS = 0	7536:3:236208:236227	8664094	1	True				
ANR	8664125	AssignmentExpression	that -> have_tRNS = 0		8664094	0		=			
ANR	8664126	PtrMemberAccess	that -> have_tRNS		8664094	0					
ANR	8664127	Identifier	that		8664094	0					
ANR	8664128	Identifier	have_tRNS		8664094	1					
ANR	8664129	PrimaryExpression	0		8664094	1					
ANR	8664130	ExpressionStatement	that -> alphaf = 1	7537:3:236232:236248	8664094	2	True				
ANR	8664131	AssignmentExpression	that -> alphaf = 1		8664094	0		=			
ANR	8664132	PtrMemberAccess	that -> alphaf		8664094	0					
ANR	8664133	Identifier	that		8664094	0					
ANR	8664134	Identifier	alphaf		8664094	1					
ANR	8664135	PrimaryExpression	1		8664094	1					
ANR	8664136	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	7539:3:236254:236300	8664094	3	True				
ANR	8664137	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8664094	0					
ANR	8664138	Callee	this -> next -> mod		8664094	0					
ANR	8664139	PtrMemberAccess	this -> next -> mod		8664094	0					
ANR	8664140	PtrMemberAccess	this -> next		8664094	0					
ANR	8664141	Identifier	this		8664094	0					
ANR	8664142	Identifier	next		8664094	1					
ANR	8664143	Identifier	mod		8664094	1					
ANR	8664144	ArgumentList	this -> next		8664094	1					
ANR	8664145	Argument	this -> next		8664094	0					
ANR	8664146	PtrMemberAccess	this -> next		8664094	0					
ANR	8664147	Identifier	this		8664094	0					
ANR	8664148	Identifier	next		8664094	1					
ANR	8664149	Argument	that		8664094	1					
ANR	8664150	Identifier	that		8664094	0					
ANR	8664151	Argument	pp		8664094	2					
ANR	8664152	Identifier	pp		8664094	0					
ANR	8664153	Argument	display		8664094	3					
ANR	8664154	Identifier	display		8664094	0					
ANR	8664155	ReturnType	static void		8664094	1					
ANR	8664156	Identifier	image_transform_png_set_strip_alpha_mod		8664094	2					
ANR	8664157	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8664094	3					
ANR	8664158	Parameter	const image_transform * this	7527:40:235883:235909	8664094	0	True				
ANR	8664159	ParameterType	const image_transform *		8664094	0					
ANR	8664160	Identifier	this		8664094	1					
ANR	8664161	Parameter	image_pixel * that	7528:4:235916:235932	8664094	1	True				
ANR	8664162	ParameterType	image_pixel *		8664094	0					
ANR	8664163	Identifier	that		8664094	1					
ANR	8664164	Parameter	png_const_structp pp	7528:23:235935:235954	8664094	2	True				
ANR	8664165	ParameterType	png_const_structp		8664094	0					
ANR	8664166	Identifier	pp		8664094	1					
ANR	8664167	Parameter	const transform_display * display	7529:4:235961:235992	8664094	3	True				
ANR	8664168	ParameterType	const transform_display *		8664094	0					
ANR	8664169	Identifier	display		8664094	1					
ANR	8664170	CFGEntryNode	ENTRY		8664094		True				
ANR	8664171	CFGExitNode	EXIT		8664094		True				
ANR	8664172	Symbol	pp		8664094						
ANR	8664173	Symbol	PNG_COLOR_TYPE_RGB		8664094						
ANR	8664174	Symbol	that -> alphaf		8664094						
ANR	8664175	Symbol	PNG_COLOR_TYPE_GRAY_ALPHA		8664094						
ANR	8664176	Symbol	this -> next		8664094						
ANR	8664177	Symbol	display		8664094						
ANR	8664178	Symbol	PNG_COLOR_TYPE_GRAY		8664094						
ANR	8664179	Symbol	this		8664094						
ANR	8664180	Symbol	* this		8664094						
ANR	8664181	Symbol	that		8664094						
ANR	8664182	Symbol	that -> colour_type		8664094						
ANR	8664183	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		8664094						
ANR	8664184	Symbol	that -> have_tRNS		8664094						
ANR	8664185	Symbol	* that		8664094						
ANR	8664186	Function	image_transform_png_set_strip_alpha_add	7542:0:236305:236573							
ANR	8664187	FunctionDef	"image_transform_png_set_strip_alpha_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8664186	0					
ANR	8664188	CompoundStatement		7545:0:236455:236573	8664186	0					
ANR	8664189	Statement	UNUSED	7546:3:236460:236465	8664186	0	True				
ANR	8664190	ExpressionStatement	( bit_depth ) this -> next = * that	7546:9:236466:236500	8664186	1	True				
ANR	8664191	AssignmentExpression	( bit_depth ) this -> next = * that		8664186	0		=			
ANR	8664192	CastExpression	( bit_depth ) this -> next		8664186	0					
ANR	8664193	CastTarget	bit_depth		8664186	0					
ANR	8664194	PtrMemberAccess	this -> next		8664186	1					
ANR	8664195	Identifier	this		8664186	0					
ANR	8664196	Identifier	next		8664186	1					
ANR	8664197	UnaryOperationExpression	* that		8664186	1					
ANR	8664198	UnaryOperator	*		8664186	0					
ANR	8664199	Identifier	that		8664186	1					
ANR	8664200	ExpressionStatement	* that = this	7549:3:236505:236517	8664186	2	True				
ANR	8664201	AssignmentExpression	* that = this		8664186	0		=			
ANR	8664202	UnaryOperationExpression	* that		8664186	0					
ANR	8664203	UnaryOperator	*		8664186	0					
ANR	8664204	Identifier	that		8664186	1					
ANR	8664205	Identifier	this		8664186	1					
ANR	8664206	ReturnStatement	return ( colour_type & PNG_COLOR_MASK_ALPHA ) != 0 ;	7551:3:236523:236571	8664186	3	True				
ANR	8664207	EqualityExpression	( colour_type & PNG_COLOR_MASK_ALPHA ) != 0		8664186	0		!=			
ANR	8664208	BitAndExpression	colour_type & PNG_COLOR_MASK_ALPHA		8664186	0		&			
ANR	8664209	Identifier	colour_type		8664186	0					
ANR	8664210	Identifier	PNG_COLOR_MASK_ALPHA		8664186	1					
ANR	8664211	PrimaryExpression	0		8664186	1					
ANR	8664212	ReturnType	static int		8664186	1					
ANR	8664213	Identifier	image_transform_png_set_strip_alpha_add		8664186	2					
ANR	8664214	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8664186	3					
ANR	8664215	Parameter	image_transform * this	7543:40:236356:236376	8664186	0	True				
ANR	8664216	ParameterType	image_transform *		8664186	0					
ANR	8664217	Identifier	this		8664186	1					
ANR	8664218	Parameter	const image_transform * * that	7544:4:236383:236410	8664186	1	True				
ANR	8664219	ParameterType	const image_transform * *		8664186	0					
ANR	8664220	Identifier	that		8664186	1					
ANR	8664221	Parameter	png_byte colour_type	7544:34:236413:236432	8664186	2	True				
ANR	8664222	ParameterType	png_byte		8664186	0					
ANR	8664223	Identifier	colour_type		8664186	1					
ANR	8664224	Parameter	png_byte bit_depth	7544:56:236435:236452	8664186	3	True				
ANR	8664225	ParameterType	png_byte		8664186	0					
ANR	8664226	Identifier	bit_depth		8664186	1					
ANR	8664227	CFGEntryNode	ENTRY		8664186		True				
ANR	8664228	CFGExitNode	EXIT		8664186		True				
ANR	8664229	Symbol	colour_type		8664186						
ANR	8664230	Symbol	* this		8664186						
ANR	8664231	Symbol	that		8664186						
ANR	8664232	Symbol	this -> next		8664186						
ANR	8664233	Symbol	PNG_COLOR_MASK_ALPHA		8664186						
ANR	8664234	Symbol	this		8664186						
ANR	8664235	Symbol	* that		8664186						
ANR	8664236	Symbol	bit_depth		8664186						
ANR	8664237	ClassDef	<unnamed>	7578:7:237401:237929							
ANR	8664238	DeclStmt									
ANR	8664239	Decl							double	double	gamma
ANR	8664240	DeclStmt									
ANR	8664241	Decl							ifdef PNG_FLOATING_POINT_SUPPORTED double	ifdef PNG_FLOATING_POINT_SUPPORTED double	red_to_set
ANR	8664242	DeclStmt									
ANR	8664243	Decl							double	double	green_to_set
ANR	8664244	DeclStmt									
ANR	8664245	Decl							png_fixed_point	png_fixed_point	red_to_set
ANR	8664246	DeclStmt									
ANR	8664247	Decl							png_fixed_point	png_fixed_point	green_to_set
ANR	8664248	DeclStmt									
ANR	8664249	Decl							endif double	endif double	red_coefficient
ANR	8664250	DeclStmt									
ANR	8664251	Decl							double	double	green_coefficient
ANR	8664252	DeclStmt									
ANR	8664253	Decl							double	double	blue_coefficient
ANR	8664254	DeclStmt									
ANR	8664255	Decl							int	int	coefficients_overridden
ANR	8664256	DeclStmt									
ANR	8664257	Decl									data
ANR	8664258	Function	image_transform_png_set_rgb_to_gray_ini	7602:0:238027:243077							
ANR	8664259	FunctionDef	"image_transform_png_set_rgb_to_gray_ini (const image_transform * this , transform_display * that)"		8664258	0					
ANR	8664260	CompoundStatement		7605:0:238137:243077	8664258	0					
ANR	8664261	IdentifierDeclStatement	png_modifier * pm = that -> pm ;	7606:3:238142:238169	8664258	0	True				
ANR	8664262	IdentifierDecl	* pm = that -> pm		8664258	0					
ANR	8664263	IdentifierDeclType	png_modifier *		8664258	0					
ANR	8664264	Identifier	pm		8664258	1					
ANR	8664265	AssignmentExpression	* pm = that -> pm		8664258	2		=			
ANR	8664266	Identifier	pm		8664258	0					
ANR	8664267	PtrMemberAccess	that -> pm		8664258	1					
ANR	8664268	Identifier	that		8664258	0					
ANR	8664269	Identifier	pm		8664258	1					
ANR	8664270	IdentifierDeclStatement	const color_encoding * e = pm -> current_encoding ;	7607:3:238174:238220	8664258	1	True				
ANR	8664271	IdentifierDecl	* e = pm -> current_encoding		8664258	0					
ANR	8664272	IdentifierDeclType	const color_encoding *		8664258	0					
ANR	8664273	Identifier	e		8664258	1					
ANR	8664274	AssignmentExpression	* e = pm -> current_encoding		8664258	2		=			
ANR	8664275	Identifier	e		8664258	0					
ANR	8664276	PtrMemberAccess	pm -> current_encoding		8664258	1					
ANR	8664277	Identifier	pm		8664258	0					
ANR	8664278	Identifier	current_encoding		8664258	1					
ANR	8664279	Statement	UNUSED	7609:3:238226:238231	8664258	2	True				
ANR	8664280	ExpressionStatement	( this ) pm -> test_uses_encoding = 1	7609:9:238232:238329	8664258	3	True				
ANR	8664281	AssignmentExpression	( this ) pm -> test_uses_encoding = 1		8664258	0		=			
ANR	8664282	CastExpression	( this ) pm -> test_uses_encoding		8664258	0					
ANR	8664283	CastTarget	this		8664258	0					
ANR	8664284	PtrMemberAccess	pm -> test_uses_encoding		8664258	1					
ANR	8664285	Identifier	pm		8664258	0					
ANR	8664286	Identifier	test_uses_encoding		8664258	1					
ANR	8664287	PrimaryExpression	1		8664258	1					
ANR	8664288	IfStatement	if ( e != 0 )		8664258	4					
ANR	8664289	Condition	e != 0	7617:7:238466:238471	8664258	0	True				
ANR	8664290	EqualityExpression	e != 0		8664258	0		!=			
ANR	8664291	Identifier	e		8664258	0					
ANR	8664292	PrimaryExpression	0		8664258	1					
ANR	8664293	CompoundStatement		18:6:468:523	8664258	1					
ANR	8664294	IdentifierDeclStatement	const double whiteY = e -> red . Y + e -> green . Y + e -> blue . Y ;	7622:6:238606:238661	8664258	0	True				
ANR	8664295	IdentifierDecl	whiteY = e -> red . Y + e -> green . Y + e -> blue . Y		8664258	0					
ANR	8664296	IdentifierDeclType	const double		8664258	0					
ANR	8664297	Identifier	whiteY		8664258	1					
ANR	8664298	AssignmentExpression	whiteY = e -> red . Y + e -> green . Y + e -> blue . Y		8664258	2		=			
ANR	8664299	Identifier	whiteY		8664258	0					
ANR	8664300	AdditiveExpression	e -> red . Y + e -> green . Y + e -> blue . Y		8664258	1		+			
ANR	8664301	MemberAccess	e -> red . Y		8664258	0					
ANR	8664302	PtrMemberAccess	e -> red		8664258	0					
ANR	8664303	Identifier	e		8664258	0					
ANR	8664304	Identifier	red		8664258	1					
ANR	8664305	Identifier	Y		8664258	1					
ANR	8664306	AdditiveExpression	e -> green . Y + e -> blue . Y		8664258	1		+			
ANR	8664307	MemberAccess	e -> green . Y		8664258	0					
ANR	8664308	PtrMemberAccess	e -> green		8664258	0					
ANR	8664309	Identifier	e		8664258	0					
ANR	8664310	Identifier	green		8664258	1					
ANR	8664311	Identifier	Y		8664258	1					
ANR	8664312	MemberAccess	e -> blue . Y		8664258	1					
ANR	8664313	PtrMemberAccess	e -> blue		8664258	0					
ANR	8664314	Identifier	e		8664258	0					
ANR	8664315	Identifier	blue		8664258	1					
ANR	8664316	Identifier	Y		8664258	1					
ANR	8664317	ExpressionStatement	data . red_coefficient = e -> red . Y	7624:6:238670:238701	8664258	1	True				
ANR	8664318	AssignmentExpression	data . red_coefficient = e -> red . Y		8664258	0		=			
ANR	8664319	MemberAccess	data . red_coefficient		8664258	0					
ANR	8664320	Identifier	data		8664258	0					
ANR	8664321	Identifier	red_coefficient		8664258	1					
ANR	8664322	MemberAccess	e -> red . Y		8664258	1					
ANR	8664323	PtrMemberAccess	e -> red		8664258	0					
ANR	8664324	Identifier	e		8664258	0					
ANR	8664325	Identifier	red		8664258	1					
ANR	8664326	Identifier	Y		8664258	1					
ANR	8664327	ExpressionStatement	data . green_coefficient = e -> green . Y	7625:6:238709:238744	8664258	2	True				
ANR	8664328	AssignmentExpression	data . green_coefficient = e -> green . Y		8664258	0		=			
ANR	8664329	MemberAccess	data . green_coefficient		8664258	0					
ANR	8664330	Identifier	data		8664258	0					
ANR	8664331	Identifier	green_coefficient		8664258	1					
ANR	8664332	MemberAccess	e -> green . Y		8664258	1					
ANR	8664333	PtrMemberAccess	e -> green		8664258	0					
ANR	8664334	Identifier	e		8664258	0					
ANR	8664335	Identifier	green		8664258	1					
ANR	8664336	Identifier	Y		8664258	1					
ANR	8664337	ExpressionStatement	data . blue_coefficient = e -> blue . Y	7626:6:238752:238785	8664258	3	True				
ANR	8664338	AssignmentExpression	data . blue_coefficient = e -> blue . Y		8664258	0		=			
ANR	8664339	MemberAccess	data . blue_coefficient		8664258	0					
ANR	8664340	Identifier	data		8664258	0					
ANR	8664341	Identifier	blue_coefficient		8664258	1					
ANR	8664342	MemberAccess	e -> blue . Y		8664258	1					
ANR	8664343	PtrMemberAccess	e -> blue		8664258	0					
ANR	8664344	Identifier	e		8664258	0					
ANR	8664345	Identifier	blue		8664258	1					
ANR	8664346	Identifier	Y		8664258	1					
ANR	8664347	IfStatement	if ( whiteY != 1 )		8664258	4					
ANR	8664348	Condition	whiteY != 1	7628:10:238798:238808	8664258	0	True				
ANR	8664349	EqualityExpression	whiteY != 1		8664258	0		!=			
ANR	8664350	Identifier	whiteY		8664258	0					
ANR	8664351	PrimaryExpression	1		8664258	1					
ANR	8664352	CompoundStatement		25:6:679:679	8664258	1					
ANR	8664353	ExpressionStatement	data . red_coefficient /= whiteY	7630:9:238828:238858	8664258	0	True				
ANR	8664354	AssignmentExpression	data . red_coefficient /= whiteY		8664258	0		/=			
ANR	8664355	MemberAccess	data . red_coefficient		8664258	0					
ANR	8664356	Identifier	data		8664258	0					
ANR	8664357	Identifier	red_coefficient		8664258	1					
ANR	8664358	Identifier	whiteY		8664258	1					
ANR	8664359	ExpressionStatement	data . green_coefficient /= whiteY	7631:9:238869:238901	8664258	1	True				
ANR	8664360	AssignmentExpression	data . green_coefficient /= whiteY		8664258	0		/=			
ANR	8664361	MemberAccess	data . green_coefficient		8664258	0					
ANR	8664362	Identifier	data		8664258	0					
ANR	8664363	Identifier	green_coefficient		8664258	1					
ANR	8664364	Identifier	whiteY		8664258	1					
ANR	8664365	ExpressionStatement	data . blue_coefficient /= whiteY	7632:9:238912:238943	8664258	2	True				
ANR	8664366	AssignmentExpression	data . blue_coefficient /= whiteY		8664258	0		/=			
ANR	8664367	MemberAccess	data . blue_coefficient		8664258	0					
ANR	8664368	Identifier	data		8664258	0					
ANR	8664369	Identifier	blue_coefficient		8664258	1					
ANR	8664370	Identifier	whiteY		8664258	1					
ANR	8664371	ElseStatement	else		8664258	0					
ANR	8664372	ExpressionStatement	data . red_coefficient = .2126	7644:9:239227:239255	8664258	0	True				
ANR	8664373	AssignmentExpression	data . red_coefficient = .2126		8664258	0		=			
ANR	8664374	MemberAccess	data . red_coefficient		8664258	0					
ANR	8664375	Identifier	data		8664258	0					
ANR	8664376	Identifier	red_coefficient		8664258	1					
ANR	8664377	PrimaryExpression	.2126		8664258	1					
ANR	8664378	ReturnType	static void		8664258	1					
ANR	8664379	Identifier	image_transform_png_set_rgb_to_gray_ini		8664258	2					
ANR	8664380	ParameterList	"const image_transform * this , transform_display * that"		8664258	3					
ANR	8664381	Parameter	const image_transform * this	7603:40:238079:238105	8664258	0	True				
ANR	8664382	ParameterType	const image_transform *		8664258	0					
ANR	8664383	Identifier	this		8664258	1					
ANR	8664384	Parameter	transform_display * that	7604:4:238112:238134	8664258	1	True				
ANR	8664385	ParameterType	transform_display *		8664258	0					
ANR	8664386	Identifier	that		8664258	1					
ANR	8664387	CFGEntryNode	ENTRY		8664258		True				
ANR	8664388	CFGExitNode	EXIT		8664258		True				
ANR	8664389	Symbol	* pm		8664258						
ANR	8664390	Symbol	data		8664258						
ANR	8664391	Symbol	data . blue_coefficient		8664258						
ANR	8664392	Symbol	e		8664258						
ANR	8664393	Symbol	this		8664258						
ANR	8664394	Symbol	whiteY		8664258						
ANR	8664395	Symbol	data . red_coefficient		8664258						
ANR	8664396	Symbol	* e		8664258						
ANR	8664397	Symbol	that		8664258						
ANR	8664398	Symbol	pm -> current_encoding		8664258						
ANR	8664399	Symbol	e -> green . Y		8664258						
ANR	8664400	Symbol	pm -> test_uses_encoding		8664258						
ANR	8664401	Symbol	e -> blue		8664258						
ANR	8664402	Symbol	e -> green		8664258						
ANR	8664403	Symbol	that -> pm		8664258						
ANR	8664404	Symbol	* that		8664258						
ANR	8664405	Symbol	e -> red . Y		8664258						
ANR	8664406	Symbol	pm		8664258						
ANR	8664407	Symbol	e -> blue . Y		8664258						
ANR	8664408	Symbol	e -> red		8664258						
ANR	8664409	Symbol	data . green_coefficient		8664258						
ANR	8664410	Function	image_transform_png_set_rgb_to_gray_set	7763:0:243080:247757							
ANR	8664411	FunctionDef	"image_transform_png_set_rgb_to_gray_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8664410	0					
ANR	8664412	CompoundStatement		7766:0:243220:247757	8664410	0					
ANR	8664413	IdentifierDeclStatement	const int error_action = 1 ;	7767:3:243225:243251	8664410	0	True				
ANR	8664414	IdentifierDecl	error_action = 1		8664410	0					
ANR	8664415	IdentifierDeclType	const int		8664410	0					
ANR	8664416	Identifier	error_action		8664410	1					
ANR	8664417	AssignmentExpression	error_action = 1		8664410	2		=			
ANR	8664418	Identifier	error_action		8664410	0					
ANR	8664419	PrimaryExpression	1		8664410	1					
ANR	8664420	IdentifierDeclStatement	"ifdef PNG_FLOATING_POINT_SUPPORTED png_set_rgb_to_gray ( pp , error_action , data . red_to_set , data . green_to_set ) ;"	7769:3:243293:243407	8664410	1	True				
ANR	8664421	IdentifierDecl	"png_set_rgb_to_gray ( pp , error_action , data . red_to_set , data . green_to_set )"		8664410	0					
ANR	8664422	IdentifierDeclType	ifdef PNG_FLOATING_POINT_SUPPORTED		8664410	0					
ANR	8664423	Identifier	png_set_rgb_to_gray		8664410	1					
ANR	8664424	Expression	"pp , error_action , data . red_to_set , data . green_to_set"		8664410	2					
ANR	8664425	Identifier	pp		8664410	0					
ANR	8664426	Expression	"error_action , data . red_to_set , data . green_to_set"		8664410	1					
ANR	8664427	Identifier	error_action		8664410	0					
ANR	8664428	Expression	"data . red_to_set , data . green_to_set"		8664410	1					
ANR	8664429	MemberAccess	data . red_to_set		8664410	0					
ANR	8664430	Identifier	data		8664410	0					
ANR	8664431	Identifier	red_to_set		8664410	1					
ANR	8664432	MemberAccess	data . green_to_set		8664410	1					
ANR	8664433	Identifier	data		8664410	0					
ANR	8664434	Identifier	green_to_set		8664410	1					
ANR	8664435	ReturnType	static void		8664410	1					
ANR	8664436	Identifier	image_transform_png_set_rgb_to_gray_set		8664410	2					
ANR	8664437	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8664410	3					
ANR	8664438	Parameter	const image_transform * this	7764:40:243132:243158	8664410	0	True				
ANR	8664439	ParameterType	const image_transform *		8664410	0					
ANR	8664440	Identifier	this		8664410	1					
ANR	8664441	Parameter	transform_display * that	7765:4:243165:243187	8664410	1	True				
ANR	8664442	ParameterType	transform_display *		8664410	0					
ANR	8664443	Identifier	that		8664410	1					
ANR	8664444	Parameter	png_structp pp	7765:29:243190:243203	8664410	2	True				
ANR	8664445	ParameterType	png_structp		8664410	0					
ANR	8664446	Identifier	pp		8664410	1					
ANR	8664447	Parameter	png_infop pi	7765:45:243206:243217	8664410	3	True				
ANR	8664448	ParameterType	png_infop		8664410	0					
ANR	8664449	Identifier	pi		8664410	1					
ANR	8664450	CFGEntryNode	ENTRY		8664410		True				
ANR	8664451	CFGExitNode	EXIT		8664410		True				
ANR	8664452	Symbol	pp		8664410						
ANR	8664453	Symbol	that		8664410						
ANR	8664454	Symbol	data		8664410						
ANR	8664455	Symbol	this		8664410						
ANR	8664456	Symbol	pi		8664410						
ANR	8664457	Symbol	png_set_rgb_to_gray		8664410						
ANR	8664458	Symbol	error_action		8664410						
ANR	8664459	Function	image_transform_png_set_rgb_to_gray_mod	7890:0:247760:261125							
ANR	8664460	FunctionDef	"image_transform_png_set_rgb_to_gray_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8664459	0					
ANR	8664461	CompoundStatement		7894:0:247924:261125	8664459	0					
ANR	8664462	IfStatement	if ( ( that -> colour_type & PNG_COLOR_MASK_COLOR ) != 0 )		8664459	0					
ANR	8664463	Condition	( that -> colour_type & PNG_COLOR_MASK_COLOR ) != 0	7895:7:247933:247979	8664459	0	True				
ANR	8664464	EqualityExpression	( that -> colour_type & PNG_COLOR_MASK_COLOR ) != 0		8664459	0		!=			
ANR	8664465	BitAndExpression	that -> colour_type & PNG_COLOR_MASK_COLOR		8664459	0		&			
ANR	8664466	PtrMemberAccess	that -> colour_type		8664459	0					
ANR	8664467	Identifier	that		8664459	0					
ANR	8664468	Identifier	colour_type		8664459	1					
ANR	8664469	Identifier	PNG_COLOR_MASK_COLOR		8664459	1					
ANR	8664470	PrimaryExpression	0		8664459	1					
ANR	8664471	CompoundStatement		4:6:68:84	8664459	1					
ANR	8664472	IdentifierDeclStatement	"double gray , err ;"	7897:6:247993:248009	8664459	0	True				
ANR	8664473	IdentifierDecl	gray		8664459	0					
ANR	8664474	IdentifierDeclType	double		8664459	0					
ANR	8664475	Identifier	gray		8664459	1					
ANR	8664476	IdentifierDecl	err		8664459	1					
ANR	8664477	IdentifierDeclType	double		8664459	0					
ANR	8664478	Identifier	err		8664459	1					
ANR	8664479	Statement	if	7899:6:248018:248019	8664459	1	True				
ANR	8664480	Statement	PNG_LIBPNG_VER	7899:9:248021:248034	8664459	2	True				
ANR	8664481	Statement	<	7899:24:248036:248036	8664459	3	True				
ANR	8664482	Statement	10700	7899:26:248038:248042	8664459	4	True				
ANR	8664483	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_PALETTE )		8664459	5					
ANR	8664484	Condition	that -> colour_type == PNG_COLOR_TYPE_PALETTE	7900:13:248057:248099	8664459	0	True				
ANR	8664485	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_PALETTE		8664459	0		==			
ANR	8664486	PtrMemberAccess	that -> colour_type		8664459	0					
ANR	8664487	Identifier	that		8664459	0					
ANR	8664488	Identifier	colour_type		8664459	1					
ANR	8664489	Identifier	PNG_COLOR_TYPE_PALETTE		8664459	1					
ANR	8664490	ExpressionStatement	image_pixel_convert_PLTE ( that )	7901:12:248114:248144	8664459	1	True				
ANR	8664491	CallExpression	image_pixel_convert_PLTE ( that )		8664459	0					
ANR	8664492	Callee	image_pixel_convert_PLTE		8664459	0					
ANR	8664493	Identifier	image_pixel_convert_PLTE		8664459	0					
ANR	8664494	ArgumentList	that		8664459	1					
ANR	8664495	Argument	that		8664459	0					
ANR	8664496	Identifier	that		8664459	0					
ANR	8664497	ElseStatement	else		8664459	0					
ANR	8664498	CompoundStatement		191:9:7301:7324	8664459	0					
ANR	8664499	IdentifierDeclStatement	double r = that -> redf ;	8079:9:255059:255080	8664459	0	True				
ANR	8664500	IdentifierDecl	r = that -> redf		8664459	0					
ANR	8664501	IdentifierDeclType	double		8664459	0					
ANR	8664502	Identifier	r		8664459	1					
ANR	8664503	AssignmentExpression	r = that -> redf		8664459	2		=			
ANR	8664504	Identifier	r		8664459	0					
ANR	8664505	PtrMemberAccess	that -> redf		8664459	1					
ANR	8664506	Identifier	that		8664459	0					
ANR	8664507	Identifier	redf		8664459	1					
ANR	8664508	IdentifierDeclStatement	double re = that -> rede ;	8080:9:255091:255113	8664459	1	True				
ANR	8664509	IdentifierDecl	re = that -> rede		8664459	0					
ANR	8664510	IdentifierDeclType	double		8664459	0					
ANR	8664511	Identifier	re		8664459	1					
ANR	8664512	AssignmentExpression	re = that -> rede		8664459	2		=			
ANR	8664513	Identifier	re		8664459	0					
ANR	8664514	PtrMemberAccess	that -> rede		8664459	1					
ANR	8664515	Identifier	that		8664459	0					
ANR	8664516	Identifier	rede		8664459	1					
ANR	8664517	IdentifierDeclStatement	double g = that -> greenf ;	8081:9:255124:255147	8664459	2	True				
ANR	8664518	IdentifierDecl	g = that -> greenf		8664459	0					
ANR	8664519	IdentifierDeclType	double		8664459	0					
ANR	8664520	Identifier	g		8664459	1					
ANR	8664521	AssignmentExpression	g = that -> greenf		8664459	2		=			
ANR	8664522	Identifier	g		8664459	0					
ANR	8664523	PtrMemberAccess	that -> greenf		8664459	1					
ANR	8664524	Identifier	that		8664459	0					
ANR	8664525	Identifier	greenf		8664459	1					
ANR	8664526	IdentifierDeclStatement	double ge = that -> greene ;	8082:9:255158:255182	8664459	3	True				
ANR	8664527	IdentifierDecl	ge = that -> greene		8664459	0					
ANR	8664528	IdentifierDeclType	double		8664459	0					
ANR	8664529	Identifier	ge		8664459	1					
ANR	8664530	AssignmentExpression	ge = that -> greene		8664459	2		=			
ANR	8664531	Identifier	ge		8664459	0					
ANR	8664532	PtrMemberAccess	that -> greene		8664459	1					
ANR	8664533	Identifier	that		8664459	0					
ANR	8664534	Identifier	greene		8664459	1					
ANR	8664535	IdentifierDeclStatement	double b = that -> bluef ;	8083:9:255193:255215	8664459	4	True				
ANR	8664536	IdentifierDecl	b = that -> bluef		8664459	0					
ANR	8664537	IdentifierDeclType	double		8664459	0					
ANR	8664538	Identifier	b		8664459	1					
ANR	8664539	AssignmentExpression	b = that -> bluef		8664459	2		=			
ANR	8664540	Identifier	b		8664459	0					
ANR	8664541	PtrMemberAccess	that -> bluef		8664459	1					
ANR	8664542	Identifier	that		8664459	0					
ANR	8664543	Identifier	bluef		8664459	1					
ANR	8664544	IdentifierDeclStatement	double be = that -> bluee ;	8084:9:255226:255249	8664459	5	True				
ANR	8664545	IdentifierDecl	be = that -> bluee		8664459	0					
ANR	8664546	IdentifierDeclType	double		8664459	0					
ANR	8664547	Identifier	be		8664459	1					
ANR	8664548	AssignmentExpression	be = that -> bluee		8664459	2		=			
ANR	8664549	Identifier	be		8664459	0					
ANR	8664550	PtrMemberAccess	that -> bluee		8664459	1					
ANR	8664551	Identifier	that		8664459	0					
ANR	8664552	Identifier	bluee		8664459	1					
ANR	8664553	Statement	if	8086:9:255261:255262	8664459	6	True				
ANR	8664554	Statement	PNG_LIBPNG_VER	8086:12:255264:255277	8664459	7	True				
ANR	8664555	Statement	<	8086:27:255279:255279	8664459	8	True				
ANR	8664556	Statement	10700	8086:29:255281:255285	8664459	9	True				
ANR	8664557	IfStatement	if ( r == g && r == b )		8664459	10					
ANR	8664558	Condition	r == g && r == b	8090:16:255471:255486	8664459	0	True				
ANR	8664559	AndExpression	r == g && r == b		8664459	0		&&			
ANR	8664560	EqualityExpression	r == g		8664459	0		==			
ANR	8664561	Identifier	r		8664459	0					
ANR	8664562	Identifier	g		8664459	1					
ANR	8664563	EqualityExpression	r == b		8664459	1		==			
ANR	8664564	Identifier	r		8664459	0					
ANR	8664565	Identifier	b		8664459	1					
ANR	8664566	CompoundStatement		198:12:7576:7576	8664459	1					
ANR	8664567	ExpressionStatement	gray = r	8092:15:255518:255526	8664459	0	True				
ANR	8664568	AssignmentExpression	gray = r		8664459	0		=			
ANR	8664569	Identifier	gray		8664459	0					
ANR	8664570	Identifier	r		8664459	1					
ANR	8664571	ExpressionStatement	err = re	8093:15:255543:255551	8664459	1	True				
ANR	8664572	AssignmentExpression	err = re		8664459	0		=			
ANR	8664573	Identifier	err		8664459	0					
ANR	8664574	Identifier	re		8664459	1					
ANR	8664575	IfStatement	if ( err < ge )		8664459	2					
ANR	8664576	Condition	err < ge	8094:19:255572:255579	8664459	0	True				
ANR	8664577	RelationalExpression	err < ge		8664459	0		<			
ANR	8664578	Identifier	err		8664459	0					
ANR	8664579	Identifier	ge		8664459	1					
ANR	8664580	ExpressionStatement	err = ge	8094:29:255582:255590	8664459	1	True				
ANR	8664581	AssignmentExpression	err = ge		8664459	0		=			
ANR	8664582	Identifier	err		8664459	0					
ANR	8664583	Identifier	ge		8664459	1					
ANR	8664584	IfStatement	if ( err < be )		8664459	3					
ANR	8664585	Condition	err < be	8095:19:255611:255618	8664459	0	True				
ANR	8664586	RelationalExpression	err < be		8664459	0		<			
ANR	8664587	Identifier	err		8664459	0					
ANR	8664588	Identifier	be		8664459	1					
ANR	8664589	ExpressionStatement	err = be	8095:29:255621:255629	8664459	1	True				
ANR	8664590	AssignmentExpression	err = be		8664459	0		=			
ANR	8664591	Identifier	err		8664459	0					
ANR	8664592	Identifier	be		8664459	1					
ANR	8664593	ElseStatement	else		8664459	0					
ANR	8664594	Statement	endif	8099:9:255672:255676	8664459	0	True				
ANR	8664595	IfStatement	if ( data . gamma == 1 )		8664459	11					
ANR	8664596	Condition	data . gamma == 1	8100:13:255708:255722	8664459	0	True				
ANR	8664597	EqualityExpression	data . gamma == 1		8664459	0		==			
ANR	8664598	MemberAccess	data . gamma		8664459	0					
ANR	8664599	Identifier	data		8664459	0					
ANR	8664600	Identifier	gamma		8664459	1					
ANR	8664601	PrimaryExpression	1		8664459	1					
ANR	8664602	CompoundStatement		208:9:7809:7809	8664459	1					
ANR	8664603	ExpressionStatement	gray = r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient	8122:12:256927:257030	8664459	0	True				
ANR	8664604	AssignmentExpression	gray = r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient		8664459	0		=			
ANR	8664605	Identifier	gray		8664459	0					
ANR	8664606	AdditiveExpression	r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient		8664459	1		+			
ANR	8664607	MultiplicativeExpression	r * data . red_coefficient		8664459	0		*			
ANR	8664608	Identifier	r		8664459	0					
ANR	8664609	MemberAccess	data . red_coefficient		8664459	1					
ANR	8664610	Identifier	data		8664459	0					
ANR	8664611	Identifier	red_coefficient		8664459	1					
ANR	8664612	AdditiveExpression	g * data . green_coefficient + b * data . blue_coefficient		8664459	1		+			
ANR	8664613	MultiplicativeExpression	g * data . green_coefficient		8664459	0		*			
ANR	8664614	Identifier	g		8664459	0					
ANR	8664615	MemberAccess	data . green_coefficient		8664459	1					
ANR	8664616	Identifier	data		8664459	0					
ANR	8664617	Identifier	green_coefficient		8664459	1					
ANR	8664618	MultiplicativeExpression	b * data . blue_coefficient		8664459	1		*			
ANR	8664619	Identifier	b		8664459	0					
ANR	8664620	MemberAccess	data . blue_coefficient		8664459	1					
ANR	8664621	Identifier	data		8664459	0					
ANR	8664622	Identifier	blue_coefficient		8664459	1					
ANR	8664623	ExpressionStatement	err = re * data . red_coefficient + ge * data . green_coefficient + be * data . blue_coefficient + 2. / 32768 + gray * 5 * DBL_EPSILON	8124:12:257044:257185	8664459	1	True				
ANR	8664624	AssignmentExpression	err = re * data . red_coefficient + ge * data . green_coefficient + be * data . blue_coefficient + 2. / 32768 + gray * 5 * DBL_EPSILON		8664459	0		=			
ANR	8664625	Identifier	err		8664459	0					
ANR	8664626	AdditiveExpression	re * data . red_coefficient + ge * data . green_coefficient + be * data . blue_coefficient + 2. / 32768 + gray * 5 * DBL_EPSILON		8664459	1		+			
ANR	8664627	MultiplicativeExpression	re * data . red_coefficient		8664459	0		*			
ANR	8664628	Identifier	re		8664459	0					
ANR	8664629	MemberAccess	data . red_coefficient		8664459	1					
ANR	8664630	Identifier	data		8664459	0					
ANR	8664631	Identifier	red_coefficient		8664459	1					
ANR	8664632	AdditiveExpression	ge * data . green_coefficient + be * data . blue_coefficient + 2. / 32768 + gray * 5 * DBL_EPSILON		8664459	1		+			
ANR	8664633	MultiplicativeExpression	ge * data . green_coefficient		8664459	0		*			
ANR	8664634	Identifier	ge		8664459	0					
ANR	8664635	MemberAccess	data . green_coefficient		8664459	1					
ANR	8664636	Identifier	data		8664459	0					
ANR	8664637	Identifier	green_coefficient		8664459	1					
ANR	8664638	AdditiveExpression	be * data . blue_coefficient + 2. / 32768 + gray * 5 * DBL_EPSILON		8664459	1		+			
ANR	8664639	MultiplicativeExpression	be * data . blue_coefficient		8664459	0		*			
ANR	8664640	Identifier	be		8664459	0					
ANR	8664641	MemberAccess	data . blue_coefficient		8664459	1					
ANR	8664642	Identifier	data		8664459	0					
ANR	8664643	Identifier	blue_coefficient		8664459	1					
ANR	8664644	AdditiveExpression	2. / 32768 + gray * 5 * DBL_EPSILON		8664459	1		+			
ANR	8664645	MultiplicativeExpression	2. / 32768		8664459	0		/			
ANR	8664646	PrimaryExpression	2.		8664459	0					
ANR	8664647	PrimaryExpression	32768		8664459	1					
ANR	8664648	MultiplicativeExpression	gray * 5 * DBL_EPSILON		8664459	1		*			
ANR	8664649	Identifier	gray		8664459	0					
ANR	8664650	MultiplicativeExpression	5 * DBL_EPSILON		8664459	1		*			
ANR	8664651	PrimaryExpression	5		8664459	0					
ANR	8664652	Identifier	DBL_EPSILON		8664459	1					
ANR	8664653	ElseStatement	else		8664459	0					
ANR	8664654	CompoundStatement		249:12:10017:10041	8664459	0					
ANR	8664655	IdentifierDeclStatement	png_modifier * pm = display -> pm ;	8136:12:257613:257643	8664459	0	True				
ANR	8664656	IdentifierDecl	* pm = display -> pm		8664459	0					
ANR	8664657	IdentifierDeclType	png_modifier *		8664459	0					
ANR	8664658	Identifier	pm		8664459	1					
ANR	8664659	AssignmentExpression	* pm = display -> pm		8664459	2		=			
ANR	8664660	Identifier	pm		8664459	0					
ANR	8664661	PtrMemberAccess	display -> pm		8664459	1					
ANR	8664662	Identifier	display		8664459	0					
ANR	8664663	Identifier	pm		8664459	1					
ANR	8664664	IdentifierDeclStatement	double in_qe = ( that -> sample_depth > 8 ? .5 / 65535 : .5 / 255 ) ;	8137:12:257657:257716	8664459	1	True				
ANR	8664665	IdentifierDecl	in_qe = ( that -> sample_depth > 8 ? .5 / 65535 : .5 / 255 )		8664459	0					
ANR	8664666	IdentifierDeclType	double		8664459	0					
ANR	8664667	Identifier	in_qe		8664459	1					
ANR	8664668	AssignmentExpression	in_qe = ( that -> sample_depth > 8 ? .5 / 65535 : .5 / 255 )		8664459	2		=			
ANR	8664669	Identifier	in_qe		8664459	0					
ANR	8664670	ConditionalExpression	that -> sample_depth > 8 ? .5 / 65535 : .5 / 255		8664459	1					
ANR	8664671	Condition	that -> sample_depth > 8		8664459	0					
ANR	8664672	RelationalExpression	that -> sample_depth > 8		8664459	0		>			
ANR	8664673	PtrMemberAccess	that -> sample_depth		8664459	0					
ANR	8664674	Identifier	that		8664459	0					
ANR	8664675	Identifier	sample_depth		8664459	1					
ANR	8664676	PrimaryExpression	8		8664459	1					
ANR	8664677	MultiplicativeExpression	.5 / 65535		8664459	1		/			
ANR	8664678	PrimaryExpression	.5		8664459	0					
ANR	8664679	PrimaryExpression	65535		8664459	1					
ANR	8664680	MultiplicativeExpression	.5 / 255		8664459	2		/			
ANR	8664681	PrimaryExpression	.5		8664459	0					
ANR	8664682	PrimaryExpression	255		8664459	1					
ANR	8664683	IdentifierDeclStatement	double out_qe = ( that -> sample_depth > 8 ? .5 / 65535 : ( pm -> assume_16_bit_calculations ? .5 / ( 1 << display -> max_gamma_8 ) : .5 / 255 ) ) ;	8138:12:257730:257886	8664459	2	True				
ANR	8664684	IdentifierDecl	out_qe = ( that -> sample_depth > 8 ? .5 / 65535 : ( pm -> assume_16_bit_calculations ? .5 / ( 1 << display -> max_gamma_8 ) : .5 / 255 ) )		8664459	0					
ANR	8664685	IdentifierDeclType	double		8664459	0					
ANR	8664686	Identifier	out_qe		8664459	1					
ANR	8664687	AssignmentExpression	out_qe = ( that -> sample_depth > 8 ? .5 / 65535 : ( pm -> assume_16_bit_calculations ? .5 / ( 1 << display -> max_gamma_8 ) : .5 / 255 ) )		8664459	2		=			
ANR	8664688	Identifier	out_qe		8664459	0					
ANR	8664689	ConditionalExpression	that -> sample_depth > 8 ? .5 / 65535 : ( pm -> assume_16_bit_calculations ? .5 / ( 1 << display -> max_gamma_8 ) : .5 / 255 )		8664459	1					
ANR	8664690	Condition	that -> sample_depth > 8		8664459	0					
ANR	8664691	RelationalExpression	that -> sample_depth > 8		8664459	0		>			
ANR	8664692	PtrMemberAccess	that -> sample_depth		8664459	0					
ANR	8664693	Identifier	that		8664459	0					
ANR	8664694	Identifier	sample_depth		8664459	1					
ANR	8664695	PrimaryExpression	8		8664459	1					
ANR	8664696	MultiplicativeExpression	.5 / 65535		8664459	1		/			
ANR	8664697	PrimaryExpression	.5		8664459	0					
ANR	8664698	PrimaryExpression	65535		8664459	1					
ANR	8664699	ConditionalExpression	pm -> assume_16_bit_calculations ? .5 / ( 1 << display -> max_gamma_8 ) : .5 / 255		8664459	2					
ANR	8664700	Condition	pm -> assume_16_bit_calculations		8664459	0					
ANR	8664701	PtrMemberAccess	pm -> assume_16_bit_calculations		8664459	0					
ANR	8664702	Identifier	pm		8664459	0					
ANR	8664703	Identifier	assume_16_bit_calculations		8664459	1					
ANR	8664704	MultiplicativeExpression	.5 / ( 1 << display -> max_gamma_8 )		8664459	1		/			
ANR	8664705	PrimaryExpression	.5		8664459	0					
ANR	8664706	ShiftExpression	1 << display -> max_gamma_8		8664459	1		<<			
ANR	8664707	PrimaryExpression	1		8664459	0					
ANR	8664708	PtrMemberAccess	display -> max_gamma_8		8664459	1					
ANR	8664709	Identifier	display		8664459	0					
ANR	8664710	Identifier	max_gamma_8		8664459	1					
ANR	8664711	MultiplicativeExpression	.5 / 255		8664459	2		/			
ANR	8664712	PrimaryExpression	.5		8664459	0					
ANR	8664713	PrimaryExpression	255		8664459	1					
ANR	8664714	IdentifierDeclStatement	"double rhi , ghi , bhi , grayhi ;"	8141:12:257900:257928	8664459	3	True				
ANR	8664715	IdentifierDecl	rhi		8664459	0					
ANR	8664716	IdentifierDeclType	double		8664459	0					
ANR	8664717	Identifier	rhi		8664459	1					
ANR	8664718	IdentifierDecl	ghi		8664459	1					
ANR	8664719	IdentifierDeclType	double		8664459	0					
ANR	8664720	Identifier	ghi		8664459	1					
ANR	8664721	IdentifierDecl	bhi		8664459	2					
ANR	8664722	IdentifierDeclType	double		8664459	0					
ANR	8664723	Identifier	bhi		8664459	1					
ANR	8664724	IdentifierDecl	grayhi		8664459	3					
ANR	8664725	IdentifierDeclType	double		8664459	0					
ANR	8664726	Identifier	grayhi		8664459	1					
ANR	8664727	IdentifierDeclStatement	double g1 = 1 / data . gamma ;	8142:12:257942:257966	8664459	4	True				
ANR	8664728	IdentifierDecl	g1 = 1 / data . gamma		8664459	0					
ANR	8664729	IdentifierDeclType	double		8664459	0					
ANR	8664730	Identifier	g1		8664459	1					
ANR	8664731	AssignmentExpression	g1 = 1 / data . gamma		8664459	2		=			
ANR	8664732	Identifier	g1		8664459	0					
ANR	8664733	MultiplicativeExpression	1 / data . gamma		8664459	1		/			
ANR	8664734	PrimaryExpression	1		8664459	0					
ANR	8664735	MemberAccess	data . gamma		8664459	1					
ANR	8664736	Identifier	data		8664459	0					
ANR	8664737	Identifier	gamma		8664459	1					
ANR	8664738	ExpressionStatement	rhi = r + re + in_qe	8144:12:257981:258001	8664459	5	True				
ANR	8664739	AssignmentExpression	rhi = r + re + in_qe		8664459	0		=			
ANR	8664740	Identifier	rhi		8664459	0					
ANR	8664741	AdditiveExpression	r + re + in_qe		8664459	1		+			
ANR	8664742	Identifier	r		8664459	0					
ANR	8664743	AdditiveExpression	re + in_qe		8664459	1		+			
ANR	8664744	Identifier	re		8664459	0					
ANR	8664745	Identifier	in_qe		8664459	1					
ANR	8664746	IfStatement	if ( rhi > 1 )		8664459	6					
ANR	8664747	Condition	rhi > 1	8144:38:258007:258013	8664459	0	True				
ANR	8664748	RelationalExpression	rhi > 1		8664459	0		>			
ANR	8664749	Identifier	rhi		8664459	0					
ANR	8664750	PrimaryExpression	1		8664459	1					
ANR	8664751	ExpressionStatement	rhi = 1	8144:47:258016:258023	8664459	1	True				
ANR	8664752	AssignmentExpression	rhi = 1		8664459	0		=			
ANR	8664753	Identifier	rhi		8664459	0					
ANR	8664754	PrimaryExpression	1		8664459	1					
ANR	8664755	ExpressionStatement	r -= re + in_qe	8145:12:258037:258052	8664459	7	True				
ANR	8664756	AssignmentExpression	r -= re + in_qe		8664459	0		-=			
ANR	8664757	Identifier	r		8664459	0					
ANR	8664758	AdditiveExpression	re + in_qe		8664459	1		+			
ANR	8664759	Identifier	re		8664459	0					
ANR	8664760	Identifier	in_qe		8664459	1					
ANR	8664761	IfStatement	if ( r < 0 )		8664459	8					
ANR	8664762	Condition	r < 0	8145:33:258058:258062	8664459	0	True				
ANR	8664763	RelationalExpression	r < 0		8664459	0		<			
ANR	8664764	Identifier	r		8664459	0					
ANR	8664765	PrimaryExpression	0		8664459	1					
ANR	8664766	ExpressionStatement	r = 0	8145:40:258065:258070	8664459	1	True				
ANR	8664767	AssignmentExpression	r = 0		8664459	0		=			
ANR	8664768	Identifier	r		8664459	0					
ANR	8664769	PrimaryExpression	0		8664459	1					
ANR	8664770	ExpressionStatement	ghi = g + ge + in_qe	8146:12:258084:258104	8664459	9	True				
ANR	8664771	AssignmentExpression	ghi = g + ge + in_qe		8664459	0		=			
ANR	8664772	Identifier	ghi		8664459	0					
ANR	8664773	AdditiveExpression	g + ge + in_qe		8664459	1		+			
ANR	8664774	Identifier	g		8664459	0					
ANR	8664775	AdditiveExpression	ge + in_qe		8664459	1		+			
ANR	8664776	Identifier	ge		8664459	0					
ANR	8664777	Identifier	in_qe		8664459	1					
ANR	8664778	IfStatement	if ( ghi > 1 )		8664459	10					
ANR	8664779	Condition	ghi > 1	8146:38:258110:258116	8664459	0	True				
ANR	8664780	RelationalExpression	ghi > 1		8664459	0		>			
ANR	8664781	Identifier	ghi		8664459	0					
ANR	8664782	PrimaryExpression	1		8664459	1					
ANR	8664783	ExpressionStatement	ghi = 1	8146:47:258119:258126	8664459	1	True				
ANR	8664784	AssignmentExpression	ghi = 1		8664459	0		=			
ANR	8664785	Identifier	ghi		8664459	0					
ANR	8664786	PrimaryExpression	1		8664459	1					
ANR	8664787	ExpressionStatement	g -= ge + in_qe	8147:12:258140:258155	8664459	11	True				
ANR	8664788	AssignmentExpression	g -= ge + in_qe		8664459	0		-=			
ANR	8664789	Identifier	g		8664459	0					
ANR	8664790	AdditiveExpression	ge + in_qe		8664459	1		+			
ANR	8664791	Identifier	ge		8664459	0					
ANR	8664792	Identifier	in_qe		8664459	1					
ANR	8664793	IfStatement	if ( g < 0 )		8664459	12					
ANR	8664794	Condition	g < 0	8147:33:258161:258165	8664459	0	True				
ANR	8664795	RelationalExpression	g < 0		8664459	0		<			
ANR	8664796	Identifier	g		8664459	0					
ANR	8664797	PrimaryExpression	0		8664459	1					
ANR	8664798	ExpressionStatement	g = 0	8147:40:258168:258173	8664459	1	True				
ANR	8664799	AssignmentExpression	g = 0		8664459	0		=			
ANR	8664800	Identifier	g		8664459	0					
ANR	8664801	PrimaryExpression	0		8664459	1					
ANR	8664802	ExpressionStatement	bhi = b + be + in_qe	8148:12:258187:258207	8664459	13	True				
ANR	8664803	AssignmentExpression	bhi = b + be + in_qe		8664459	0		=			
ANR	8664804	Identifier	bhi		8664459	0					
ANR	8664805	AdditiveExpression	b + be + in_qe		8664459	1		+			
ANR	8664806	Identifier	b		8664459	0					
ANR	8664807	AdditiveExpression	be + in_qe		8664459	1		+			
ANR	8664808	Identifier	be		8664459	0					
ANR	8664809	Identifier	in_qe		8664459	1					
ANR	8664810	IfStatement	if ( bhi > 1 )		8664459	14					
ANR	8664811	Condition	bhi > 1	8148:38:258213:258219	8664459	0	True				
ANR	8664812	RelationalExpression	bhi > 1		8664459	0		>			
ANR	8664813	Identifier	bhi		8664459	0					
ANR	8664814	PrimaryExpression	1		8664459	1					
ANR	8664815	ExpressionStatement	bhi = 1	8148:47:258222:258229	8664459	1	True				
ANR	8664816	AssignmentExpression	bhi = 1		8664459	0		=			
ANR	8664817	Identifier	bhi		8664459	0					
ANR	8664818	PrimaryExpression	1		8664459	1					
ANR	8664819	ExpressionStatement	b -= be + in_qe	8149:12:258243:258258	8664459	15	True				
ANR	8664820	AssignmentExpression	b -= be + in_qe		8664459	0		-=			
ANR	8664821	Identifier	b		8664459	0					
ANR	8664822	AdditiveExpression	be + in_qe		8664459	1		+			
ANR	8664823	Identifier	be		8664459	0					
ANR	8664824	Identifier	in_qe		8664459	1					
ANR	8664825	IfStatement	if ( b < 0 )		8664459	16					
ANR	8664826	Condition	b < 0	8149:33:258264:258268	8664459	0	True				
ANR	8664827	RelationalExpression	b < 0		8664459	0		<			
ANR	8664828	Identifier	b		8664459	0					
ANR	8664829	PrimaryExpression	0		8664459	1					
ANR	8664830	ExpressionStatement	b = 0	8149:40:258271:258276	8664459	1	True				
ANR	8664831	AssignmentExpression	b = 0		8664459	0		=			
ANR	8664832	Identifier	b		8664459	0					
ANR	8664833	PrimaryExpression	0		8664459	1					
ANR	8664834	ExpressionStatement	"r = pow ( r , g1 ) * ( 1 - DBL_EPSILON )"	8151:12:258291:258321	8664459	17	True				
ANR	8664835	AssignmentExpression	"r = pow ( r , g1 ) * ( 1 - DBL_EPSILON )"		8664459	0		=			
ANR	8664836	Identifier	r		8664459	0					
ANR	8664837	MultiplicativeExpression	"pow ( r , g1 ) * ( 1 - DBL_EPSILON )"		8664459	1		*			
ANR	8664838	CallExpression	"pow ( r , g1 )"		8664459	0					
ANR	8664839	Callee	pow		8664459	0					
ANR	8664840	Identifier	pow		8664459	0					
ANR	8664841	ArgumentList	r		8664459	1					
ANR	8664842	Argument	r		8664459	0					
ANR	8664843	Identifier	r		8664459	0					
ANR	8664844	Argument	g1		8664459	1					
ANR	8664845	Identifier	g1		8664459	0					
ANR	8664846	AdditiveExpression	1 - DBL_EPSILON		8664459	1		-			
ANR	8664847	PrimaryExpression	1		8664459	0					
ANR	8664848	Identifier	DBL_EPSILON		8664459	1					
ANR	8664849	ExpressionStatement	"rhi = pow ( rhi , g1 ) * ( 1 + DBL_EPSILON )"	8151:44:258323:258357	8664459	18	True				
ANR	8664850	AssignmentExpression	"rhi = pow ( rhi , g1 ) * ( 1 + DBL_EPSILON )"		8664459	0		=			
ANR	8664851	Identifier	rhi		8664459	0					
ANR	8664852	MultiplicativeExpression	"pow ( rhi , g1 ) * ( 1 + DBL_EPSILON )"		8664459	1		*			
ANR	8664853	CallExpression	"pow ( rhi , g1 )"		8664459	0					
ANR	8664854	Callee	pow		8664459	0					
ANR	8664855	Identifier	pow		8664459	0					
ANR	8664856	ArgumentList	rhi		8664459	1					
ANR	8664857	Argument	rhi		8664459	0					
ANR	8664858	Identifier	rhi		8664459	0					
ANR	8664859	Argument	g1		8664459	1					
ANR	8664860	Identifier	g1		8664459	0					
ANR	8664861	AdditiveExpression	1 + DBL_EPSILON		8664459	1		+			
ANR	8664862	PrimaryExpression	1		8664459	0					
ANR	8664863	Identifier	DBL_EPSILON		8664459	1					
ANR	8664864	ExpressionStatement	"g = pow ( g , g1 ) * ( 1 - DBL_EPSILON )"	8152:12:258371:258401	8664459	19	True				
ANR	8664865	AssignmentExpression	"g = pow ( g , g1 ) * ( 1 - DBL_EPSILON )"		8664459	0		=			
ANR	8664866	Identifier	g		8664459	0					
ANR	8664867	MultiplicativeExpression	"pow ( g , g1 ) * ( 1 - DBL_EPSILON )"		8664459	1		*			
ANR	8664868	CallExpression	"pow ( g , g1 )"		8664459	0					
ANR	8664869	Callee	pow		8664459	0					
ANR	8664870	Identifier	pow		8664459	0					
ANR	8664871	ArgumentList	g		8664459	1					
ANR	8664872	Argument	g		8664459	0					
ANR	8664873	Identifier	g		8664459	0					
ANR	8664874	Argument	g1		8664459	1					
ANR	8664875	Identifier	g1		8664459	0					
ANR	8664876	AdditiveExpression	1 - DBL_EPSILON		8664459	1		-			
ANR	8664877	PrimaryExpression	1		8664459	0					
ANR	8664878	Identifier	DBL_EPSILON		8664459	1					
ANR	8664879	ExpressionStatement	"ghi = pow ( ghi , g1 ) * ( 1 + DBL_EPSILON )"	8152:44:258403:258437	8664459	20	True				
ANR	8664880	AssignmentExpression	"ghi = pow ( ghi , g1 ) * ( 1 + DBL_EPSILON )"		8664459	0		=			
ANR	8664881	Identifier	ghi		8664459	0					
ANR	8664882	MultiplicativeExpression	"pow ( ghi , g1 ) * ( 1 + DBL_EPSILON )"		8664459	1		*			
ANR	8664883	CallExpression	"pow ( ghi , g1 )"		8664459	0					
ANR	8664884	Callee	pow		8664459	0					
ANR	8664885	Identifier	pow		8664459	0					
ANR	8664886	ArgumentList	ghi		8664459	1					
ANR	8664887	Argument	ghi		8664459	0					
ANR	8664888	Identifier	ghi		8664459	0					
ANR	8664889	Argument	g1		8664459	1					
ANR	8664890	Identifier	g1		8664459	0					
ANR	8664891	AdditiveExpression	1 + DBL_EPSILON		8664459	1		+			
ANR	8664892	PrimaryExpression	1		8664459	0					
ANR	8664893	Identifier	DBL_EPSILON		8664459	1					
ANR	8664894	ExpressionStatement	"b = pow ( b , g1 ) * ( 1 - DBL_EPSILON )"	8153:12:258451:258481	8664459	21	True				
ANR	8664895	AssignmentExpression	"b = pow ( b , g1 ) * ( 1 - DBL_EPSILON )"		8664459	0		=			
ANR	8664896	Identifier	b		8664459	0					
ANR	8664897	MultiplicativeExpression	"pow ( b , g1 ) * ( 1 - DBL_EPSILON )"		8664459	1		*			
ANR	8664898	CallExpression	"pow ( b , g1 )"		8664459	0					
ANR	8664899	Callee	pow		8664459	0					
ANR	8664900	Identifier	pow		8664459	0					
ANR	8664901	ArgumentList	b		8664459	1					
ANR	8664902	Argument	b		8664459	0					
ANR	8664903	Identifier	b		8664459	0					
ANR	8664904	Argument	g1		8664459	1					
ANR	8664905	Identifier	g1		8664459	0					
ANR	8664906	AdditiveExpression	1 - DBL_EPSILON		8664459	1		-			
ANR	8664907	PrimaryExpression	1		8664459	0					
ANR	8664908	Identifier	DBL_EPSILON		8664459	1					
ANR	8664909	ExpressionStatement	"bhi = pow ( bhi , g1 ) * ( 1 + DBL_EPSILON )"	8153:44:258483:258517	8664459	22	True				
ANR	8664910	AssignmentExpression	"bhi = pow ( bhi , g1 ) * ( 1 + DBL_EPSILON )"		8664459	0		=			
ANR	8664911	Identifier	bhi		8664459	0					
ANR	8664912	MultiplicativeExpression	"pow ( bhi , g1 ) * ( 1 + DBL_EPSILON )"		8664459	1		*			
ANR	8664913	CallExpression	"pow ( bhi , g1 )"		8664459	0					
ANR	8664914	Callee	pow		8664459	0					
ANR	8664915	Identifier	pow		8664459	0					
ANR	8664916	ArgumentList	bhi		8664459	1					
ANR	8664917	Argument	bhi		8664459	0					
ANR	8664918	Identifier	bhi		8664459	0					
ANR	8664919	Argument	g1		8664459	1					
ANR	8664920	Identifier	g1		8664459	0					
ANR	8664921	AdditiveExpression	1 + DBL_EPSILON		8664459	1		+			
ANR	8664922	PrimaryExpression	1		8664459	0					
ANR	8664923	Identifier	DBL_EPSILON		8664459	1					
ANR	8664924	ExpressionStatement	gray = r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient - 2. / 32768 - out_qe	8159:12:258775:258898	8664459	23	True				
ANR	8664925	AssignmentExpression	gray = r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient - 2. / 32768 - out_qe		8664459	0		=			
ANR	8664926	Identifier	gray		8664459	0					
ANR	8664927	AdditiveExpression	r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient - 2. / 32768 - out_qe		8664459	1		+			
ANR	8664928	MultiplicativeExpression	r * data . red_coefficient		8664459	0		*			
ANR	8664929	Identifier	r		8664459	0					
ANR	8664930	MemberAccess	data . red_coefficient		8664459	1					
ANR	8664931	Identifier	data		8664459	0					
ANR	8664932	Identifier	red_coefficient		8664459	1					
ANR	8664933	AdditiveExpression	g * data . green_coefficient + b * data . blue_coefficient - 2. / 32768 - out_qe		8664459	1		+			
ANR	8664934	MultiplicativeExpression	g * data . green_coefficient		8664459	0		*			
ANR	8664935	Identifier	g		8664459	0					
ANR	8664936	MemberAccess	data . green_coefficient		8664459	1					
ANR	8664937	Identifier	data		8664459	0					
ANR	8664938	Identifier	green_coefficient		8664459	1					
ANR	8664939	AdditiveExpression	b * data . blue_coefficient - 2. / 32768 - out_qe		8664459	1		-			
ANR	8664940	MultiplicativeExpression	b * data . blue_coefficient		8664459	0		*			
ANR	8664941	Identifier	b		8664459	0					
ANR	8664942	MemberAccess	data . blue_coefficient		8664459	1					
ANR	8664943	Identifier	data		8664459	0					
ANR	8664944	Identifier	blue_coefficient		8664459	1					
ANR	8664945	AdditiveExpression	2. / 32768 - out_qe		8664459	1		-			
ANR	8664946	MultiplicativeExpression	2. / 32768		8664459	0		/			
ANR	8664947	PrimaryExpression	2.		8664459	0					
ANR	8664948	PrimaryExpression	32768		8664459	1					
ANR	8664949	Identifier	out_qe		8664459	1					
ANR	8664950	IfStatement	if ( gray <= 0 )		8664459	24					
ANR	8664951	Condition	gray <= 0	8161:16:258916:258924	8664459	0	True				
ANR	8664952	RelationalExpression	gray <= 0		8664459	0		<=			
ANR	8664953	Identifier	gray		8664459	0					
ANR	8664954	PrimaryExpression	0		8664459	1					
ANR	8664955	ExpressionStatement	gray = 0	8162:15:258942:258950	8664459	1	True				
ANR	8664956	AssignmentExpression	gray = 0		8664459	0		=			
ANR	8664957	Identifier	gray		8664459	0					
ANR	8664958	PrimaryExpression	0		8664459	1					
ANR	8664959	ElseStatement	else		8664459	0					
ANR	8664960	CompoundStatement		271:12:11056:11056	8664459	0					
ANR	8664961	ExpressionStatement	gray *= ( 1 - 6 * DBL_EPSILON )	8165:15:258998:259027	8664459	0	True				
ANR	8664962	AssignmentExpression	gray *= ( 1 - 6 * DBL_EPSILON )		8664459	0		*=			
ANR	8664963	Identifier	gray		8664459	0					
ANR	8664964	AdditiveExpression	1 - 6 * DBL_EPSILON		8664459	1		-			
ANR	8664965	PrimaryExpression	1		8664459	0					
ANR	8664966	MultiplicativeExpression	6 * DBL_EPSILON		8664459	1		*			
ANR	8664967	PrimaryExpression	6		8664459	0					
ANR	8664968	Identifier	DBL_EPSILON		8664459	1					
ANR	8664969	ExpressionStatement	"gray = pow ( gray , data . gamma ) * ( 1 - DBL_EPSILON )"	8166:15:259044:259090	8664459	1	True				
ANR	8664970	AssignmentExpression	"gray = pow ( gray , data . gamma ) * ( 1 - DBL_EPSILON )"		8664459	0		=			
ANR	8664971	Identifier	gray		8664459	0					
ANR	8664972	MultiplicativeExpression	"pow ( gray , data . gamma ) * ( 1 - DBL_EPSILON )"		8664459	1		*			
ANR	8664973	CallExpression	"pow ( gray , data . gamma )"		8664459	0					
ANR	8664974	Callee	pow		8664459	0					
ANR	8664975	Identifier	pow		8664459	0					
ANR	8664976	ArgumentList	gray		8664459	1					
ANR	8664977	Argument	gray		8664459	0					
ANR	8664978	Identifier	gray		8664459	0					
ANR	8664979	Argument	data . gamma		8664459	1					
ANR	8664980	MemberAccess	data . gamma		8664459	0					
ANR	8664981	Identifier	data		8664459	0					
ANR	8664982	Identifier	gamma		8664459	1					
ANR	8664983	AdditiveExpression	1 - DBL_EPSILON		8664459	1		-			
ANR	8664984	PrimaryExpression	1		8664459	0					
ANR	8664985	Identifier	DBL_EPSILON		8664459	1					
ANR	8664986	ExpressionStatement	grayhi = rhi * data . red_coefficient + ghi * data . green_coefficient + bhi * data . blue_coefficient + 2. / 32768 + out_qe	8169:12:259119:259250	8664459	25	True				
ANR	8664987	AssignmentExpression	grayhi = rhi * data . red_coefficient + ghi * data . green_coefficient + bhi * data . blue_coefficient + 2. / 32768 + out_qe		8664459	0		=			
ANR	8664988	Identifier	grayhi		8664459	0					
ANR	8664989	AdditiveExpression	rhi * data . red_coefficient + ghi * data . green_coefficient + bhi * data . blue_coefficient + 2. / 32768 + out_qe		8664459	1		+			
ANR	8664990	MultiplicativeExpression	rhi * data . red_coefficient		8664459	0		*			
ANR	8664991	Identifier	rhi		8664459	0					
ANR	8664992	MemberAccess	data . red_coefficient		8664459	1					
ANR	8664993	Identifier	data		8664459	0					
ANR	8664994	Identifier	red_coefficient		8664459	1					
ANR	8664995	AdditiveExpression	ghi * data . green_coefficient + bhi * data . blue_coefficient + 2. / 32768 + out_qe		8664459	1		+			
ANR	8664996	MultiplicativeExpression	ghi * data . green_coefficient		8664459	0		*			
ANR	8664997	Identifier	ghi		8664459	0					
ANR	8664998	MemberAccess	data . green_coefficient		8664459	1					
ANR	8664999	Identifier	data		8664459	0					
ANR	8665000	Identifier	green_coefficient		8664459	1					
ANR	8665001	AdditiveExpression	bhi * data . blue_coefficient + 2. / 32768 + out_qe		8664459	1		+			
ANR	8665002	MultiplicativeExpression	bhi * data . blue_coefficient		8664459	0		*			
ANR	8665003	Identifier	bhi		8664459	0					
ANR	8665004	MemberAccess	data . blue_coefficient		8664459	1					
ANR	8665005	Identifier	data		8664459	0					
ANR	8665006	Identifier	blue_coefficient		8664459	1					
ANR	8665007	AdditiveExpression	2. / 32768 + out_qe		8664459	1		+			
ANR	8665008	MultiplicativeExpression	2. / 32768		8664459	0		/			
ANR	8665009	PrimaryExpression	2.		8664459	0					
ANR	8665010	PrimaryExpression	32768		8664459	1					
ANR	8665011	Identifier	out_qe		8664459	1					
ANR	8665012	ExpressionStatement	grayhi *= ( 1 + 6 * DBL_EPSILON )	8171:12:259264:259295	8664459	26	True				
ANR	8665013	AssignmentExpression	grayhi *= ( 1 + 6 * DBL_EPSILON )		8664459	0		*=			
ANR	8665014	Identifier	grayhi		8664459	0					
ANR	8665015	AdditiveExpression	1 + 6 * DBL_EPSILON		8664459	1		+			
ANR	8665016	PrimaryExpression	1		8664459	0					
ANR	8665017	MultiplicativeExpression	6 * DBL_EPSILON		8664459	1		*			
ANR	8665018	PrimaryExpression	6		8664459	0					
ANR	8665019	Identifier	DBL_EPSILON		8664459	1					
ANR	8665020	IfStatement	if ( grayhi >= 1 )		8664459	27					
ANR	8665021	Condition	grayhi >= 1	8172:16:259313:259323	8664459	0	True				
ANR	8665022	RelationalExpression	grayhi >= 1		8664459	0		>=			
ANR	8665023	Identifier	grayhi		8664459	0					
ANR	8665024	PrimaryExpression	1		8664459	1					
ANR	8665025	ExpressionStatement	grayhi = 1	8173:15:259341:259351	8664459	1	True				
ANR	8665026	AssignmentExpression	grayhi = 1		8664459	0		=			
ANR	8665027	Identifier	grayhi		8664459	0					
ANR	8665028	PrimaryExpression	1		8664459	1					
ANR	8665029	ElseStatement	else		8664459	0					
ANR	8665030	ExpressionStatement	"grayhi = pow ( grayhi , data . gamma ) * ( 1 + DBL_EPSILON )"	8175:15:259385:259435	8664459	0	True				
ANR	8665031	AssignmentExpression	"grayhi = pow ( grayhi , data . gamma ) * ( 1 + DBL_EPSILON )"		8664459	0		=			
ANR	8665032	Identifier	grayhi		8664459	0					
ANR	8665033	MultiplicativeExpression	"pow ( grayhi , data . gamma ) * ( 1 + DBL_EPSILON )"		8664459	1		*			
ANR	8665034	CallExpression	"pow ( grayhi , data . gamma )"		8664459	0					
ANR	8665035	Callee	pow		8664459	0					
ANR	8665036	Identifier	pow		8664459	0					
ANR	8665037	ArgumentList	grayhi		8664459	1					
ANR	8665038	Argument	grayhi		8664459	0					
ANR	8665039	Identifier	grayhi		8664459	0					
ANR	8665040	Argument	data . gamma		8664459	1					
ANR	8665041	MemberAccess	data . gamma		8664459	0					
ANR	8665042	Identifier	data		8664459	0					
ANR	8665043	Identifier	gamma		8664459	1					
ANR	8665044	AdditiveExpression	1 + DBL_EPSILON		8664459	1		+			
ANR	8665045	PrimaryExpression	1		8664459	0					
ANR	8665046	Identifier	DBL_EPSILON		8664459	1					
ANR	8665047	ExpressionStatement	err = ( grayhi - gray ) / 2	8177:12:259450:259475	8664459	28	True				
ANR	8665048	AssignmentExpression	err = ( grayhi - gray ) / 2		8664459	0		=			
ANR	8665049	Identifier	err		8664459	0					
ANR	8665050	MultiplicativeExpression	( grayhi - gray ) / 2		8664459	1		/			
ANR	8665051	AdditiveExpression	grayhi - gray		8664459	0		-			
ANR	8665052	Identifier	grayhi		8664459	0					
ANR	8665053	Identifier	gray		8664459	1					
ANR	8665054	PrimaryExpression	2		8664459	1					
ANR	8665055	ExpressionStatement	gray = ( grayhi + gray ) / 2	8178:12:259489:259515	8664459	29	True				
ANR	8665056	AssignmentExpression	gray = ( grayhi + gray ) / 2		8664459	0		=			
ANR	8665057	Identifier	gray		8664459	0					
ANR	8665058	MultiplicativeExpression	( grayhi + gray ) / 2		8664459	1		/			
ANR	8665059	AdditiveExpression	grayhi + gray		8664459	0		+			
ANR	8665060	Identifier	grayhi		8664459	0					
ANR	8665061	Identifier	gray		8664459	1					
ANR	8665062	PrimaryExpression	2		8664459	1					
ANR	8665063	IfStatement	if ( err <= in_qe )		8664459	30					
ANR	8665064	Condition	err <= in_qe	8180:16:259534:259545	8664459	0	True				
ANR	8665065	RelationalExpression	err <= in_qe		8664459	0		<=			
ANR	8665066	Identifier	err		8664459	0					
ANR	8665067	Identifier	in_qe		8664459	1					
ANR	8665068	ExpressionStatement	err = gray * DBL_EPSILON	8181:15:259563:259587	8664459	1	True				
ANR	8665069	AssignmentExpression	err = gray * DBL_EPSILON		8664459	0		=			
ANR	8665070	Identifier	err		8664459	0					
ANR	8665071	MultiplicativeExpression	gray * DBL_EPSILON		8664459	1		*			
ANR	8665072	Identifier	gray		8664459	0					
ANR	8665073	Identifier	DBL_EPSILON		8664459	1					
ANR	8665074	ElseStatement	else		8664459	0					
ANR	8665075	ExpressionStatement	err -= in_qe	8184:15:259622:259634	8664459	0	True				
ANR	8665076	AssignmentExpression	err -= in_qe		8664459	0		-=			
ANR	8665077	Identifier	err		8664459	0					
ANR	8665078	Identifier	in_qe		8664459	1					
ANR	8665079	IfStatement	if ( err > pm -> limit )		8664459	31					
ANR	8665080	Condition	err > pm -> limit	8190:16:259832:259846	8664459	0	True				
ANR	8665081	RelationalExpression	err > pm -> limit		8664459	0		>			
ANR	8665082	Identifier	err		8664459	0					
ANR	8665083	PtrMemberAccess	pm -> limit		8664459	1					
ANR	8665084	Identifier	pm		8664459	0					
ANR	8665085	Identifier	limit		8664459	1					
ANR	8665086	CompoundStatement		300:15:11984:12000	8664459	1					
ANR	8665087	IdentifierDeclStatement	size_t pos = 0 ;	8192:15:259878:259892	8664459	0	True				
ANR	8665088	IdentifierDecl	pos = 0		8664459	0					
ANR	8665089	IdentifierDeclType	size_t		8664459	0					
ANR	8665090	Identifier	pos		8664459	1					
ANR	8665091	AssignmentExpression	pos = 0		8664459	2		=			
ANR	8665092	Identifier	pos		8664459	0					
ANR	8665093	PrimaryExpression	0		8664459	1					
ANR	8665094	IdentifierDeclStatement	char buffer [ 128 ] ;	8193:15:259909:259925	8664459	1	True				
ANR	8665095	IdentifierDecl	buffer [ 128 ]		8664459	0					
ANR	8665096	IdentifierDeclType	char [ 128 ]		8664459	0					
ANR	8665097	Identifier	buffer		8664459	1					
ANR	8665098	PrimaryExpression	128		8664459	2					
ANR	8665099	ExpressionStatement	"pos = safecat ( buffer , sizeof buffer , pos , ""rgb_to_gray error "" )"	8195:15:259943:260006	8664459	2	True				
ANR	8665100	AssignmentExpression	"pos = safecat ( buffer , sizeof buffer , pos , ""rgb_to_gray error "" )"		8664459	0		=			
ANR	8665101	Identifier	pos		8664459	0					
ANR	8665102	CallExpression	"safecat ( buffer , sizeof buffer , pos , ""rgb_to_gray error "" )"		8664459	1					
ANR	8665103	Callee	safecat		8664459	0					
ANR	8665104	Identifier	safecat		8664459	0					
ANR	8665105	ArgumentList	buffer		8664459	1					
ANR	8665106	Argument	buffer		8664459	0					
ANR	8665107	Identifier	buffer		8664459	0					
ANR	8665108	Argument	sizeof buffer		8664459	1					
ANR	8665109	SizeofExpression	sizeof buffer		8664459	0					
ANR	8665110	Sizeof	sizeof		8664459	0					
ANR	8665111	Identifier	buffer		8664459	1					
ANR	8665112	Argument	pos		8664459	2					
ANR	8665113	Identifier	pos		8664459	0					
ANR	8665114	Argument	"""rgb_to_gray error """		8664459	3					
ANR	8665115	PrimaryExpression	"""rgb_to_gray error """		8664459	0					
ANR	8665116	ExpressionStatement	"pos = safecatd ( buffer , sizeof buffer , pos , err , 6 )"	8196:15:260023:260073	8664459	3	True				
ANR	8665117	AssignmentExpression	"pos = safecatd ( buffer , sizeof buffer , pos , err , 6 )"		8664459	0		=			
ANR	8665118	Identifier	pos		8664459	0					
ANR	8665119	CallExpression	"safecatd ( buffer , sizeof buffer , pos , err , 6 )"		8664459	1					
ANR	8665120	Callee	safecatd		8664459	0					
ANR	8665121	Identifier	safecatd		8664459	0					
ANR	8665122	ArgumentList	buffer		8664459	1					
ANR	8665123	Argument	buffer		8664459	0					
ANR	8665124	Identifier	buffer		8664459	0					
ANR	8665125	Argument	sizeof buffer		8664459	1					
ANR	8665126	SizeofExpression	sizeof buffer		8664459	0					
ANR	8665127	Sizeof	sizeof		8664459	0					
ANR	8665128	Identifier	buffer		8664459	1					
ANR	8665129	Argument	pos		8664459	2					
ANR	8665130	Identifier	pos		8664459	0					
ANR	8665131	Argument	err		8664459	3					
ANR	8665132	Identifier	err		8664459	0					
ANR	8665133	Argument	6		8664459	4					
ANR	8665134	PrimaryExpression	6		8664459	0					
ANR	8665135	ExpressionStatement	"pos = safecat ( buffer , sizeof buffer , pos , "" exceeds limit "" )"	8197:15:260090:260150	8664459	4	True				
ANR	8665136	AssignmentExpression	"pos = safecat ( buffer , sizeof buffer , pos , "" exceeds limit "" )"		8664459	0		=			
ANR	8665137	Identifier	pos		8664459	0					
ANR	8665138	CallExpression	"safecat ( buffer , sizeof buffer , pos , "" exceeds limit "" )"		8664459	1					
ANR	8665139	Callee	safecat		8664459	0					
ANR	8665140	Identifier	safecat		8664459	0					
ANR	8665141	ArgumentList	buffer		8664459	1					
ANR	8665142	Argument	buffer		8664459	0					
ANR	8665143	Identifier	buffer		8664459	0					
ANR	8665144	Argument	sizeof buffer		8664459	1					
ANR	8665145	SizeofExpression	sizeof buffer		8664459	0					
ANR	8665146	Sizeof	sizeof		8664459	0					
ANR	8665147	Identifier	buffer		8664459	1					
ANR	8665148	Argument	pos		8664459	2					
ANR	8665149	Identifier	pos		8664459	0					
ANR	8665150	Argument	""" exceeds limit """		8664459	3					
ANR	8665151	PrimaryExpression	""" exceeds limit """		8664459	0					
ANR	8665152	ExpressionStatement	"pos = safecatd ( buffer , sizeof buffer , pos , pm -> limit , 6 )"	8198:15:260167:260223	8664459	5	True				
ANR	8665153	AssignmentExpression	"pos = safecatd ( buffer , sizeof buffer , pos , pm -> limit , 6 )"		8664459	0		=			
ANR	8665154	Identifier	pos		8664459	0					
ANR	8665155	CallExpression	"safecatd ( buffer , sizeof buffer , pos , pm -> limit , 6 )"		8664459	1					
ANR	8665156	Callee	safecatd		8664459	0					
ANR	8665157	Identifier	safecatd		8664459	0					
ANR	8665158	ArgumentList	buffer		8664459	1					
ANR	8665159	Argument	buffer		8664459	0					
ANR	8665160	Identifier	buffer		8664459	0					
ANR	8665161	Argument	sizeof buffer		8664459	1					
ANR	8665162	SizeofExpression	sizeof buffer		8664459	0					
ANR	8665163	Sizeof	sizeof		8664459	0					
ANR	8665164	Identifier	buffer		8664459	1					
ANR	8665165	Argument	pos		8664459	2					
ANR	8665166	Identifier	pos		8664459	0					
ANR	8665167	Argument	pm -> limit		8664459	3					
ANR	8665168	PtrMemberAccess	pm -> limit		8664459	0					
ANR	8665169	Identifier	pm		8664459	0					
ANR	8665170	Identifier	limit		8664459	1					
ANR	8665171	Argument	6		8664459	4					
ANR	8665172	PrimaryExpression	6		8664459	0					
ANR	8665173	ExpressionStatement	"png_warning ( pp , buffer )"	8199:15:260240:260263	8664459	6	True				
ANR	8665174	CallExpression	"png_warning ( pp , buffer )"		8664459	0					
ANR	8665175	Callee	png_warning		8664459	0					
ANR	8665176	Identifier	png_warning		8664459	0					
ANR	8665177	ArgumentList	pp		8664459	1					
ANR	8665178	Argument	pp		8664459	0					
ANR	8665179	Identifier	pp		8664459	0					
ANR	8665180	Argument	buffer		8664459	1					
ANR	8665181	Identifier	buffer		8664459	0					
ANR	8665182	ExpressionStatement	pm -> limit = err	8200:15:260280:260295	8664459	7	True				
ANR	8665183	AssignmentExpression	pm -> limit = err		8664459	0		=			
ANR	8665184	PtrMemberAccess	pm -> limit		8664459	0					
ANR	8665185	Identifier	pm		8664459	0					
ANR	8665186	Identifier	limit		8664459	1					
ANR	8665187	Identifier	err		8664459	1					
ANR	8665188	Statement	endif	7902:6:248152:248156	8664459	6	True				
ANR	8665189	Statement	if	7905:3:248204:248205	8664459	7	True				
ANR	8665190	Statement	DIGITIZE	7905:6:248207:248214	8664459	8	True				
ANR	8665191	CompoundStatement		26:9:803:854	8664459	9					
ANR	8665192	IdentifierDeclStatement	png_modifier * pm = display -> pm ;	7907:9:248233:248263	8664459	0	True				
ANR	8665193	IdentifierDecl	* pm = display -> pm		8664459	0					
ANR	8665194	IdentifierDeclType	png_modifier *		8664459	0					
ANR	8665195	Identifier	pm		8664459	1					
ANR	8665196	AssignmentExpression	* pm = display -> pm		8664459	2		=			
ANR	8665197	Identifier	pm		8664459	0					
ANR	8665198	PtrMemberAccess	display -> pm		8664459	1					
ANR	8665199	Identifier	display		8664459	0					
ANR	8665200	Identifier	pm		8664459	1					
ANR	8665201	IdentifierDeclStatement	const unsigned int sample_depth = that -> sample_depth ;	7908:9:248274:248326	8664459	1	True				
ANR	8665202	IdentifierDecl	sample_depth = that -> sample_depth		8664459	0					
ANR	8665203	IdentifierDeclType	const unsigned int		8664459	0					
ANR	8665204	Identifier	sample_depth		8664459	1					
ANR	8665205	AssignmentExpression	sample_depth = that -> sample_depth		8664459	2		=			
ANR	8665206	Identifier	sample_depth		8664459	0					
ANR	8665207	PtrMemberAccess	that -> sample_depth		8664459	1					
ANR	8665208	Identifier	that		8664459	0					
ANR	8665209	Identifier	sample_depth		8664459	1					
ANR	8665210	IdentifierDeclStatement	const unsigned int calc_depth = ( pm -> assume_16_bit_calculations ? 16 : sample_depth ) ;	7909:9:248337:248433	8664459	2	True				
ANR	8665211	IdentifierDecl	calc_depth = ( pm -> assume_16_bit_calculations ? 16 : sample_depth )		8664459	0					
ANR	8665212	IdentifierDeclType	const unsigned int		8664459	0					
ANR	8665213	Identifier	calc_depth		8664459	1					
ANR	8665214	AssignmentExpression	calc_depth = ( pm -> assume_16_bit_calculations ? 16 : sample_depth )		8664459	2		=			
ANR	8665215	Identifier	calc_depth		8664459	0					
ANR	8665216	ConditionalExpression	pm -> assume_16_bit_calculations ? 16 : sample_depth		8664459	1					
ANR	8665217	Condition	pm -> assume_16_bit_calculations		8664459	0					
ANR	8665218	PtrMemberAccess	pm -> assume_16_bit_calculations		8664459	0					
ANR	8665219	Identifier	pm		8664459	0					
ANR	8665220	Identifier	assume_16_bit_calculations		8664459	1					
ANR	8665221	PrimaryExpression	16		8664459	1					
ANR	8665222	Identifier	sample_depth		8664459	2					
ANR	8665223	IdentifierDeclStatement	const unsigned int gamma_depth = ( sample_depth == 16 ? display -> max_gamma_8 : ( pm -> assume_16_bit_calculations ? display -> max_gamma_8 : sample_depth ) ) ;	7911:9:248444:248671	8664459	3	True				
ANR	8665224	IdentifierDecl	gamma_depth = ( sample_depth == 16 ? display -> max_gamma_8 : ( pm -> assume_16_bit_calculations ? display -> max_gamma_8 : sample_depth ) )		8664459	0					
ANR	8665225	IdentifierDeclType	const unsigned int		8664459	0					
ANR	8665226	Identifier	gamma_depth		8664459	1					
ANR	8665227	AssignmentExpression	gamma_depth = ( sample_depth == 16 ? display -> max_gamma_8 : ( pm -> assume_16_bit_calculations ? display -> max_gamma_8 : sample_depth ) )		8664459	2		=			
ANR	8665228	Identifier	gamma_depth		8664459	0					
ANR	8665229	ConditionalExpression	sample_depth == 16 ? display -> max_gamma_8 : ( pm -> assume_16_bit_calculations ? display -> max_gamma_8 : sample_depth )		8664459	1					
ANR	8665230	Condition	sample_depth == 16		8664459	0					
ANR	8665231	EqualityExpression	sample_depth == 16		8664459	0		==			
ANR	8665232	Identifier	sample_depth		8664459	0					
ANR	8665233	PrimaryExpression	16		8664459	1					
ANR	8665234	PtrMemberAccess	display -> max_gamma_8		8664459	1					
ANR	8665235	Identifier	display		8664459	0					
ANR	8665236	Identifier	max_gamma_8		8664459	1					
ANR	8665237	ConditionalExpression	pm -> assume_16_bit_calculations ? display -> max_gamma_8 : sample_depth		8664459	2					
ANR	8665238	Condition	pm -> assume_16_bit_calculations		8664459	0					
ANR	8665239	PtrMemberAccess	pm -> assume_16_bit_calculations		8664459	0					
ANR	8665240	Identifier	pm		8664459	0					
ANR	8665241	Identifier	assume_16_bit_calculations		8664459	1					
ANR	8665242	PtrMemberAccess	display -> max_gamma_8		8664459	1					
ANR	8665243	Identifier	display		8664459	0					
ANR	8665244	Identifier	max_gamma_8		8664459	1					
ANR	8665245	Identifier	sample_depth		8664459	2					
ANR	8665246	IdentifierDeclStatement	int isgray ;	7917:9:248682:248692	8664459	4	True				
ANR	8665247	IdentifierDecl	isgray		8664459	0					
ANR	8665248	IdentifierDeclType	int		8664459	0					
ANR	8665249	Identifier	isgray		8664459	1					
ANR	8665250	IdentifierDeclStatement	"double r , g , b ;"	7918:9:248703:248717	8664459	5	True				
ANR	8665251	IdentifierDecl	r		8664459	0					
ANR	8665252	IdentifierDeclType	double		8664459	0					
ANR	8665253	Identifier	r		8664459	1					
ANR	8665254	IdentifierDecl	g		8664459	1					
ANR	8665255	IdentifierDeclType	double		8664459	0					
ANR	8665256	Identifier	g		8664459	1					
ANR	8665257	IdentifierDecl	b		8664459	2					
ANR	8665258	IdentifierDeclType	double		8664459	0					
ANR	8665259	Identifier	b		8664459	1					
ANR	8665260	IdentifierDeclStatement	"double rlo , rhi , glo , ghi , blo , bhi , graylo , grayhi ;"	7919:9:248728:248779	8664459	6	True				
ANR	8665261	IdentifierDecl	rlo		8664459	0					
ANR	8665262	IdentifierDeclType	double		8664459	0					
ANR	8665263	Identifier	rlo		8664459	1					
ANR	8665264	IdentifierDecl	rhi		8664459	1					
ANR	8665265	IdentifierDeclType	double		8664459	0					
ANR	8665266	Identifier	rhi		8664459	1					
ANR	8665267	IdentifierDecl	glo		8664459	2					
ANR	8665268	IdentifierDeclType	double		8664459	0					
ANR	8665269	Identifier	glo		8664459	1					
ANR	8665270	IdentifierDecl	ghi		8664459	3					
ANR	8665271	IdentifierDeclType	double		8664459	0					
ANR	8665272	Identifier	ghi		8664459	1					
ANR	8665273	IdentifierDecl	blo		8664459	4					
ANR	8665274	IdentifierDeclType	double		8664459	0					
ANR	8665275	Identifier	blo		8664459	1					
ANR	8665276	IdentifierDecl	bhi		8664459	5					
ANR	8665277	IdentifierDeclType	double		8664459	0					
ANR	8665278	Identifier	bhi		8664459	1					
ANR	8665279	IdentifierDecl	graylo		8664459	6					
ANR	8665280	IdentifierDeclType	double		8664459	0					
ANR	8665281	Identifier	graylo		8664459	1					
ANR	8665282	IdentifierDecl	grayhi		8664459	7					
ANR	8665283	IdentifierDeclType	double		8664459	0					
ANR	8665284	Identifier	grayhi		8664459	1					
ANR	8665285	Statement	define	7935:9:249631:249636	8664459	7	True				
ANR	8665286	Statement	DD	7935:16:249638:249639	8664459	8	True				
ANR	8665287	Statement	(	7935:18:249640:249640	8664459	9	True				
ANR	8665288	Statement	v	7935:19:249641:249641	8664459	10	True				
ANR	8665289	Statement	","	7935:20:249642:249642	8664459	11	True				
ANR	8665290	Statement	d	7935:21:249643:249643	8664459	12	True				
ANR	8665291	Statement	","	7935:22:249644:249644	8664459	13	True				
ANR	8665292	Statement	r	7935:23:249645:249645	8664459	14	True				
ANR	8665293	Statement	)	7935:24:249646:249646	8664459	15	True				
ANR	8665294	Statement	(	7935:26:249648:249648	8664459	16	True				
ANR	8665295	Statement	digitize	7935:27:249649:249656	8664459	17	True				
ANR	8665296	Statement	(	7935:35:249657:249657	8664459	18	True				
ANR	8665297	Statement	v	7935:36:249658:249658	8664459	19	True				
ANR	8665298	Statement	*	7935:37:249659:249659	8664459	20	True				
ANR	8665299	Statement	(	7935:38:249660:249660	8664459	21	True				
ANR	8665300	Statement	1	7935:39:249661:249661	8664459	22	True				
ANR	8665301	Statement	-	7935:40:249662:249662	8664459	23	True				
ANR	8665302	Statement	DBL_EPSILON	7935:41:249663:249673	8664459	24	True				
ANR	8665303	Statement	)	7935:52:249674:249674	8664459	25	True				
ANR	8665304	Statement	","	7935:53:249675:249675	8664459	26	True				
ANR	8665305	Statement	d	7935:55:249677:249677	8664459	27	True				
ANR	8665306	Statement	","	7935:56:249678:249678	8664459	28	True				
ANR	8665307	Statement	r	7935:58:249680:249680	8664459	29	True				
ANR	8665308	Statement	)	7935:59:249681:249681	8664459	30	True				
ANR	8665309	Statement	*	7935:61:249683:249683	8664459	31	True				
ANR	8665310	Statement	(	7935:63:249685:249685	8664459	32	True				
ANR	8665311	Statement	1	7935:64:249686:249686	8664459	33	True				
ANR	8665312	Statement	-	7935:65:249687:249687	8664459	34	True				
ANR	8665313	Statement	DBL_EPSILON	7935:66:249688:249698	8664459	35	True				
ANR	8665314	Statement	)	7935:77:249699:249699	8664459	36	True				
ANR	8665315	Statement	)	7935:78:249700:249700	8664459	37	True				
ANR	8665316	Statement	define	7936:9:249711:249716	8664459	38	True				
ANR	8665317	Statement	DU	7936:16:249718:249719	8664459	39	True				
ANR	8665318	Statement	(	7936:18:249720:249720	8664459	40	True				
ANR	8665319	Statement	v	7936:19:249721:249721	8664459	41	True				
ANR	8665320	Statement	","	7936:20:249722:249722	8664459	42	True				
ANR	8665321	Statement	d	7936:21:249723:249723	8664459	43	True				
ANR	8665322	Statement	","	7936:22:249724:249724	8664459	44	True				
ANR	8665323	Statement	r	7936:23:249725:249725	8664459	45	True				
ANR	8665324	Statement	)	7936:24:249726:249726	8664459	46	True				
ANR	8665325	Statement	(	7936:26:249728:249728	8664459	47	True				
ANR	8665326	Statement	digitize	7936:27:249729:249736	8664459	48	True				
ANR	8665327	Statement	(	7936:35:249737:249737	8664459	49	True				
ANR	8665328	Statement	v	7936:36:249738:249738	8664459	50	True				
ANR	8665329	Statement	*	7936:37:249739:249739	8664459	51	True				
ANR	8665330	Statement	(	7936:38:249740:249740	8664459	52	True				
ANR	8665331	Statement	1	7936:39:249741:249741	8664459	53	True				
ANR	8665332	Statement	+	7936:40:249742:249742	8664459	54	True				
ANR	8665333	Statement	DBL_EPSILON	7936:41:249743:249753	8664459	55	True				
ANR	8665334	Statement	)	7936:52:249754:249754	8664459	56	True				
ANR	8665335	Statement	","	7936:53:249755:249755	8664459	57	True				
ANR	8665336	Statement	d	7936:55:249757:249757	8664459	58	True				
ANR	8665337	Statement	","	7936:56:249758:249758	8664459	59	True				
ANR	8665338	Statement	r	7936:58:249760:249760	8664459	60	True				
ANR	8665339	Statement	)	7936:59:249761:249761	8664459	61	True				
ANR	8665340	Statement	*	7936:61:249763:249763	8664459	62	True				
ANR	8665341	Statement	(	7936:63:249765:249765	8664459	63	True				
ANR	8665342	Statement	1	7936:64:249766:249766	8664459	64	True				
ANR	8665343	Statement	+	7936:65:249767:249767	8664459	65	True				
ANR	8665344	Statement	DBL_EPSILON	7936:66:249768:249778	8664459	66	True				
ANR	8665345	Statement	)	7936:77:249779:249779	8664459	67	True				
ANR	8665346	Statement	)	7936:78:249780:249780	8664459	68	True				
ANR	8665347	ExpressionStatement	r = rlo = rhi = that -> redf	7938:9:249792:249818	8664459	69	True				
ANR	8665348	AssignmentExpression	r = rlo = rhi = that -> redf		8664459	0		=			
ANR	8665349	Identifier	r		8664459	0					
ANR	8665350	AssignmentExpression	rlo = rhi = that -> redf		8664459	1		=			
ANR	8665351	Identifier	rlo		8664459	0					
ANR	8665352	AssignmentExpression	rhi = that -> redf		8664459	1		=			
ANR	8665353	Identifier	rhi		8664459	0					
ANR	8665354	PtrMemberAccess	that -> redf		8664459	1					
ANR	8665355	Identifier	that		8664459	0					
ANR	8665356	Identifier	redf		8664459	1					
ANR	8665357	ExpressionStatement	rlo -= that -> rede	7939:9:249829:249846	8664459	70	True				
ANR	8665358	AssignmentExpression	rlo -= that -> rede		8664459	0		-=			
ANR	8665359	Identifier	rlo		8664459	0					
ANR	8665360	PtrMemberAccess	that -> rede		8664459	1					
ANR	8665361	Identifier	that		8664459	0					
ANR	8665362	Identifier	rede		8664459	1					
ANR	8665363	ExpressionStatement	"rlo = DD ( rlo , calc_depth , 1 )"	7940:9:249857:249894	8664459	71	True				
ANR	8665364	AssignmentExpression	"rlo = DD ( rlo , calc_depth , 1 )"		8664459	0		=			
ANR	8665365	Identifier	rlo		8664459	0					
ANR	8665366	CallExpression	"DD ( rlo , calc_depth , 1 )"		8664459	1					
ANR	8665367	Callee	DD		8664459	0					
ANR	8665368	Identifier	DD		8664459	0					
ANR	8665369	ArgumentList	rlo		8664459	1					
ANR	8665370	Argument	rlo		8664459	0					
ANR	8665371	Identifier	rlo		8664459	0					
ANR	8665372	Argument	calc_depth		8664459	1					
ANR	8665373	Identifier	calc_depth		8664459	0					
ANR	8665374	Argument	1		8664459	2					
ANR	8665375	PrimaryExpression	1		8664459	0					
ANR	8665376	ExpressionStatement	rhi += that -> rede	7941:9:249905:249922	8664459	72	True				
ANR	8665377	AssignmentExpression	rhi += that -> rede		8664459	0		+=			
ANR	8665378	Identifier	rhi		8664459	0					
ANR	8665379	PtrMemberAccess	that -> rede		8664459	1					
ANR	8665380	Identifier	that		8664459	0					
ANR	8665381	Identifier	rede		8664459	1					
ANR	8665382	ExpressionStatement	"rhi = DU ( rhi , calc_depth , 1 )"	7942:9:249933:249970	8664459	73	True				
ANR	8665383	AssignmentExpression	"rhi = DU ( rhi , calc_depth , 1 )"		8664459	0		=			
ANR	8665384	Identifier	rhi		8664459	0					
ANR	8665385	CallExpression	"DU ( rhi , calc_depth , 1 )"		8664459	1					
ANR	8665386	Callee	DU		8664459	0					
ANR	8665387	Identifier	DU		8664459	0					
ANR	8665388	ArgumentList	rhi		8664459	1					
ANR	8665389	Argument	rhi		8664459	0					
ANR	8665390	Identifier	rhi		8664459	0					
ANR	8665391	Argument	calc_depth		8664459	1					
ANR	8665392	Identifier	calc_depth		8664459	0					
ANR	8665393	Argument	1		8664459	2					
ANR	8665394	PrimaryExpression	1		8664459	0					
ANR	8665395	ExpressionStatement	g = glo = ghi = that -> greenf	7944:9:249982:250010	8664459	74	True				
ANR	8665396	AssignmentExpression	g = glo = ghi = that -> greenf		8664459	0		=			
ANR	8665397	Identifier	g		8664459	0					
ANR	8665398	AssignmentExpression	glo = ghi = that -> greenf		8664459	1		=			
ANR	8665399	Identifier	glo		8664459	0					
ANR	8665400	AssignmentExpression	ghi = that -> greenf		8664459	1		=			
ANR	8665401	Identifier	ghi		8664459	0					
ANR	8665402	PtrMemberAccess	that -> greenf		8664459	1					
ANR	8665403	Identifier	that		8664459	0					
ANR	8665404	Identifier	greenf		8664459	1					
ANR	8665405	ExpressionStatement	glo -= that -> greene	7945:9:250021:250040	8664459	75	True				
ANR	8665406	AssignmentExpression	glo -= that -> greene		8664459	0		-=			
ANR	8665407	Identifier	glo		8664459	0					
ANR	8665408	PtrMemberAccess	that -> greene		8664459	1					
ANR	8665409	Identifier	that		8664459	0					
ANR	8665410	Identifier	greene		8664459	1					
ANR	8665411	ExpressionStatement	"glo = DD ( glo , calc_depth , 1 )"	7946:9:250051:250088	8664459	76	True				
ANR	8665412	AssignmentExpression	"glo = DD ( glo , calc_depth , 1 )"		8664459	0		=			
ANR	8665413	Identifier	glo		8664459	0					
ANR	8665414	CallExpression	"DD ( glo , calc_depth , 1 )"		8664459	1					
ANR	8665415	Callee	DD		8664459	0					
ANR	8665416	Identifier	DD		8664459	0					
ANR	8665417	ArgumentList	glo		8664459	1					
ANR	8665418	Argument	glo		8664459	0					
ANR	8665419	Identifier	glo		8664459	0					
ANR	8665420	Argument	calc_depth		8664459	1					
ANR	8665421	Identifier	calc_depth		8664459	0					
ANR	8665422	Argument	1		8664459	2					
ANR	8665423	PrimaryExpression	1		8664459	0					
ANR	8665424	ExpressionStatement	ghi += that -> greene	7947:9:250099:250118	8664459	77	True				
ANR	8665425	AssignmentExpression	ghi += that -> greene		8664459	0		+=			
ANR	8665426	Identifier	ghi		8664459	0					
ANR	8665427	PtrMemberAccess	that -> greene		8664459	1					
ANR	8665428	Identifier	that		8664459	0					
ANR	8665429	Identifier	greene		8664459	1					
ANR	8665430	ExpressionStatement	"ghi = DU ( ghi , calc_depth , 1 )"	7948:9:250129:250166	8664459	78	True				
ANR	8665431	AssignmentExpression	"ghi = DU ( ghi , calc_depth , 1 )"		8664459	0		=			
ANR	8665432	Identifier	ghi		8664459	0					
ANR	8665433	CallExpression	"DU ( ghi , calc_depth , 1 )"		8664459	1					
ANR	8665434	Callee	DU		8664459	0					
ANR	8665435	Identifier	DU		8664459	0					
ANR	8665436	ArgumentList	ghi		8664459	1					
ANR	8665437	Argument	ghi		8664459	0					
ANR	8665438	Identifier	ghi		8664459	0					
ANR	8665439	Argument	calc_depth		8664459	1					
ANR	8665440	Identifier	calc_depth		8664459	0					
ANR	8665441	Argument	1		8664459	2					
ANR	8665442	PrimaryExpression	1		8664459	0					
ANR	8665443	ExpressionStatement	b = blo = bhi = that -> bluef	7950:9:250178:250205	8664459	79	True				
ANR	8665444	AssignmentExpression	b = blo = bhi = that -> bluef		8664459	0		=			
ANR	8665445	Identifier	b		8664459	0					
ANR	8665446	AssignmentExpression	blo = bhi = that -> bluef		8664459	1		=			
ANR	8665447	Identifier	blo		8664459	0					
ANR	8665448	AssignmentExpression	bhi = that -> bluef		8664459	1		=			
ANR	8665449	Identifier	bhi		8664459	0					
ANR	8665450	PtrMemberAccess	that -> bluef		8664459	1					
ANR	8665451	Identifier	that		8664459	0					
ANR	8665452	Identifier	bluef		8664459	1					
ANR	8665453	ExpressionStatement	blo -= that -> bluee	7951:9:250216:250234	8664459	80	True				
ANR	8665454	AssignmentExpression	blo -= that -> bluee		8664459	0		-=			
ANR	8665455	Identifier	blo		8664459	0					
ANR	8665456	PtrMemberAccess	that -> bluee		8664459	1					
ANR	8665457	Identifier	that		8664459	0					
ANR	8665458	Identifier	bluee		8664459	1					
ANR	8665459	ExpressionStatement	"blo = DD ( blo , calc_depth , 1 )"	7952:9:250245:250282	8664459	81	True				
ANR	8665460	AssignmentExpression	"blo = DD ( blo , calc_depth , 1 )"		8664459	0		=			
ANR	8665461	Identifier	blo		8664459	0					
ANR	8665462	CallExpression	"DD ( blo , calc_depth , 1 )"		8664459	1					
ANR	8665463	Callee	DD		8664459	0					
ANR	8665464	Identifier	DD		8664459	0					
ANR	8665465	ArgumentList	blo		8664459	1					
ANR	8665466	Argument	blo		8664459	0					
ANR	8665467	Identifier	blo		8664459	0					
ANR	8665468	Argument	calc_depth		8664459	1					
ANR	8665469	Identifier	calc_depth		8664459	0					
ANR	8665470	Argument	1		8664459	2					
ANR	8665471	PrimaryExpression	1		8664459	0					
ANR	8665472	ExpressionStatement	bhi += that -> bluee	7953:9:250293:250311	8664459	82	True				
ANR	8665473	AssignmentExpression	bhi += that -> bluee		8664459	0		+=			
ANR	8665474	Identifier	bhi		8664459	0					
ANR	8665475	PtrMemberAccess	that -> bluee		8664459	1					
ANR	8665476	Identifier	that		8664459	0					
ANR	8665477	Identifier	bluee		8664459	1					
ANR	8665478	ExpressionStatement	"bhi = DU ( bhi , calc_depth , 1 )"	7954:9:250322:250359	8664459	83	True				
ANR	8665479	AssignmentExpression	"bhi = DU ( bhi , calc_depth , 1 )"		8664459	0		=			
ANR	8665480	Identifier	bhi		8664459	0					
ANR	8665481	CallExpression	"DU ( bhi , calc_depth , 1 )"		8664459	1					
ANR	8665482	Callee	DU		8664459	0					
ANR	8665483	Identifier	DU		8664459	0					
ANR	8665484	ArgumentList	bhi		8664459	1					
ANR	8665485	Argument	bhi		8664459	0					
ANR	8665486	Identifier	bhi		8664459	0					
ANR	8665487	Argument	calc_depth		8664459	1					
ANR	8665488	Identifier	calc_depth		8664459	0					
ANR	8665489	Argument	1		8664459	2					
ANR	8665490	PrimaryExpression	1		8664459	0					
ANR	8665491	ExpressionStatement	isgray = r == g && g == b	7956:9:250371:250392	8664459	84	True				
ANR	8665492	AssignmentExpression	isgray = r == g && g == b		8664459	0		=			
ANR	8665493	Identifier	isgray		8664459	0					
ANR	8665494	AndExpression	r == g && g == b		8664459	1		&&			
ANR	8665495	EqualityExpression	r == g		8664459	0		==			
ANR	8665496	Identifier	r		8664459	0					
ANR	8665497	Identifier	g		8664459	1					
ANR	8665498	EqualityExpression	g == b		8664459	1		==			
ANR	8665499	Identifier	g		8664459	0					
ANR	8665500	Identifier	b		8664459	1					
ANR	8665501	IfStatement	if ( data . gamma != 1 )		8664459	85					
ANR	8665502	Condition	data . gamma != 1	7958:13:250408:250422	8664459	0	True				
ANR	8665503	EqualityExpression	data . gamma != 1		8664459	0		!=			
ANR	8665504	MemberAccess	data . gamma		8664459	0					
ANR	8665505	Identifier	data		8664459	0					
ANR	8665506	Identifier	gamma		8664459	1					
ANR	8665507	PrimaryExpression	1		8664459	1					
ANR	8665508	CompoundStatement		68:12:2570:2627	8664459	1					
ANR	8665509	IdentifierDeclStatement	const double power = 1 / data . gamma ;	7960:12:250448:250481	8664459	0	True				
ANR	8665510	IdentifierDecl	power = 1 / data . gamma		8664459	0					
ANR	8665511	IdentifierDeclType	const double		8664459	0					
ANR	8665512	Identifier	power		8664459	1					
ANR	8665513	AssignmentExpression	power = 1 / data . gamma		8664459	2		=			
ANR	8665514	Identifier	power		8664459	0					
ANR	8665515	MultiplicativeExpression	1 / data . gamma		8664459	1		/			
ANR	8665516	PrimaryExpression	1		8664459	0					
ANR	8665517	MemberAccess	data . gamma		8664459	1					
ANR	8665518	Identifier	data		8664459	0					
ANR	8665519	Identifier	gamma		8664459	1					
ANR	8665520	IdentifierDeclStatement	const double abse = .5 / ( sample_depth == 16 ? 65535 : 255 ) ;	7961:12:250495:250552	8664459	1	True				
ANR	8665521	IdentifierDecl	abse = .5 / ( sample_depth == 16 ? 65535 : 255 )		8664459	0					
ANR	8665522	IdentifierDeclType	const double		8664459	0					
ANR	8665523	Identifier	abse		8664459	1					
ANR	8665524	AssignmentExpression	abse = .5 / ( sample_depth == 16 ? 65535 : 255 )		8664459	2		=			
ANR	8665525	Identifier	abse		8664459	0					
ANR	8665526	MultiplicativeExpression	.5 / ( sample_depth == 16 ? 65535 : 255 )		8664459	1		/			
ANR	8665527	PrimaryExpression	.5		8664459	0					
ANR	8665528	ConditionalExpression	sample_depth == 16 ? 65535 : 255		8664459	1					
ANR	8665529	Condition	sample_depth == 16		8664459	0					
ANR	8665530	EqualityExpression	sample_depth == 16		8664459	0		==			
ANR	8665531	Identifier	sample_depth		8664459	0					
ANR	8665532	PrimaryExpression	16		8664459	1					
ANR	8665533	PrimaryExpression	65535		8664459	1					
ANR	8665534	PrimaryExpression	255		8664459	2					
ANR	8665535	IfStatement	if ( gamma_depth != calc_depth )		8664459	2					
ANR	8665536	Condition	gamma_depth != calc_depth	7967:16:250796:250820	8664459	0	True				
ANR	8665537	EqualityExpression	gamma_depth != calc_depth		8664459	0		!=			
ANR	8665538	Identifier	gamma_depth		8664459	0					
ANR	8665539	Identifier	calc_depth		8664459	1					
ANR	8665540	CompoundStatement		75:12:2910:2910	8664459	1					
ANR	8665541	ExpressionStatement	"rlo = DD ( rlo , gamma_depth , 0 )"	7969:15:250852:250893	8664459	0	True				
ANR	8665542	AssignmentExpression	"rlo = DD ( rlo , gamma_depth , 0 )"		8664459	0		=			
ANR	8665543	Identifier	rlo		8664459	0					
ANR	8665544	CallExpression	"DD ( rlo , gamma_depth , 0 )"		8664459	1					
ANR	8665545	Callee	DD		8664459	0					
ANR	8665546	Identifier	DD		8664459	0					
ANR	8665547	ArgumentList	rlo		8664459	1					
ANR	8665548	Argument	rlo		8664459	0					
ANR	8665549	Identifier	rlo		8664459	0					
ANR	8665550	Argument	gamma_depth		8664459	1					
ANR	8665551	Identifier	gamma_depth		8664459	0					
ANR	8665552	Argument	0		8664459	2					
ANR	8665553	PrimaryExpression	0		8664459	0					
ANR	8665554	ExpressionStatement	"rhi = DU ( rhi , gamma_depth , 0 )"	7970:15:250910:250951	8664459	1	True				
ANR	8665555	AssignmentExpression	"rhi = DU ( rhi , gamma_depth , 0 )"		8664459	0		=			
ANR	8665556	Identifier	rhi		8664459	0					
ANR	8665557	CallExpression	"DU ( rhi , gamma_depth , 0 )"		8664459	1					
ANR	8665558	Callee	DU		8664459	0					
ANR	8665559	Identifier	DU		8664459	0					
ANR	8665560	ArgumentList	rhi		8664459	1					
ANR	8665561	Argument	rhi		8664459	0					
ANR	8665562	Identifier	rhi		8664459	0					
ANR	8665563	Argument	gamma_depth		8664459	1					
ANR	8665564	Identifier	gamma_depth		8664459	0					
ANR	8665565	Argument	0		8664459	2					
ANR	8665566	PrimaryExpression	0		8664459	0					
ANR	8665567	ExpressionStatement	"glo = DD ( glo , gamma_depth , 0 )"	7971:15:250968:251009	8664459	2	True				
ANR	8665568	AssignmentExpression	"glo = DD ( glo , gamma_depth , 0 )"		8664459	0		=			
ANR	8665569	Identifier	glo		8664459	0					
ANR	8665570	CallExpression	"DD ( glo , gamma_depth , 0 )"		8664459	1					
ANR	8665571	Callee	DD		8664459	0					
ANR	8665572	Identifier	DD		8664459	0					
ANR	8665573	ArgumentList	glo		8664459	1					
ANR	8665574	Argument	glo		8664459	0					
ANR	8665575	Identifier	glo		8664459	0					
ANR	8665576	Argument	gamma_depth		8664459	1					
ANR	8665577	Identifier	gamma_depth		8664459	0					
ANR	8665578	Argument	0		8664459	2					
ANR	8665579	PrimaryExpression	0		8664459	0					
ANR	8665580	ExpressionStatement	"ghi = DU ( ghi , gamma_depth , 0 )"	7972:15:251026:251067	8664459	3	True				
ANR	8665581	AssignmentExpression	"ghi = DU ( ghi , gamma_depth , 0 )"		8664459	0		=			
ANR	8665582	Identifier	ghi		8664459	0					
ANR	8665583	CallExpression	"DU ( ghi , gamma_depth , 0 )"		8664459	1					
ANR	8665584	Callee	DU		8664459	0					
ANR	8665585	Identifier	DU		8664459	0					
ANR	8665586	ArgumentList	ghi		8664459	1					
ANR	8665587	Argument	ghi		8664459	0					
ANR	8665588	Identifier	ghi		8664459	0					
ANR	8665589	Argument	gamma_depth		8664459	1					
ANR	8665590	Identifier	gamma_depth		8664459	0					
ANR	8665591	Argument	0		8664459	2					
ANR	8665592	PrimaryExpression	0		8664459	0					
ANR	8665593	ExpressionStatement	"blo = DD ( blo , gamma_depth , 0 )"	7973:15:251084:251125	8664459	4	True				
ANR	8665594	AssignmentExpression	"blo = DD ( blo , gamma_depth , 0 )"		8664459	0		=			
ANR	8665595	Identifier	blo		8664459	0					
ANR	8665596	CallExpression	"DD ( blo , gamma_depth , 0 )"		8664459	1					
ANR	8665597	Callee	DD		8664459	0					
ANR	8665598	Identifier	DD		8664459	0					
ANR	8665599	ArgumentList	blo		8664459	1					
ANR	8665600	Argument	blo		8664459	0					
ANR	8665601	Identifier	blo		8664459	0					
ANR	8665602	Argument	gamma_depth		8664459	1					
ANR	8665603	Identifier	gamma_depth		8664459	0					
ANR	8665604	Argument	0		8664459	2					
ANR	8665605	PrimaryExpression	0		8664459	0					
ANR	8665606	ExpressionStatement	"bhi = DU ( bhi , gamma_depth , 0 )"	7974:15:251142:251183	8664459	5	True				
ANR	8665607	AssignmentExpression	"bhi = DU ( bhi , gamma_depth , 0 )"		8664459	0		=			
ANR	8665608	Identifier	bhi		8664459	0					
ANR	8665609	CallExpression	"DU ( bhi , gamma_depth , 0 )"		8664459	1					
ANR	8665610	Callee	DU		8664459	0					
ANR	8665611	Identifier	DU		8664459	0					
ANR	8665612	ArgumentList	bhi		8664459	1					
ANR	8665613	Argument	bhi		8664459	0					
ANR	8665614	Identifier	bhi		8664459	0					
ANR	8665615	Argument	gamma_depth		8664459	1					
ANR	8665616	Identifier	gamma_depth		8664459	0					
ANR	8665617	Argument	0		8664459	2					
ANR	8665618	PrimaryExpression	0		8664459	0					
ANR	8665619	ExpressionStatement	"r = pow ( r , power )"	7978:12:251289:251306	8664459	3	True				
ANR	8665620	AssignmentExpression	"r = pow ( r , power )"		8664459	0		=			
ANR	8665621	Identifier	r		8664459	0					
ANR	8665622	CallExpression	"pow ( r , power )"		8664459	1					
ANR	8665623	Callee	pow		8664459	0					
ANR	8665624	Identifier	pow		8664459	0					
ANR	8665625	ArgumentList	r		8664459	1					
ANR	8665626	Argument	r		8664459	0					
ANR	8665627	Identifier	r		8664459	0					
ANR	8665628	Argument	power		8664459	1					
ANR	8665629	Identifier	power		8664459	0					
ANR	8665630	ExpressionStatement	"rlo = DD ( pow ( rlo , power ) - abse , calc_depth , 1 )"	7979:12:251320:251365	8664459	4	True				
ANR	8665631	AssignmentExpression	"rlo = DD ( pow ( rlo , power ) - abse , calc_depth , 1 )"		8664459	0		=			
ANR	8665632	Identifier	rlo		8664459	0					
ANR	8665633	CallExpression	"DD ( pow ( rlo , power ) - abse , calc_depth , 1 )"		8664459	1					
ANR	8665634	Callee	DD		8664459	0					
ANR	8665635	Identifier	DD		8664459	0					
ANR	8665636	ArgumentList	"pow ( rlo , power ) - abse"		8664459	1					
ANR	8665637	Argument	"pow ( rlo , power ) - abse"		8664459	0					
ANR	8665638	AdditiveExpression	"pow ( rlo , power ) - abse"		8664459	0		-			
ANR	8665639	CallExpression	"pow ( rlo , power )"		8664459	0					
ANR	8665640	Callee	pow		8664459	0					
ANR	8665641	Identifier	pow		8664459	0					
ANR	8665642	ArgumentList	rlo		8664459	1					
ANR	8665643	Argument	rlo		8664459	0					
ANR	8665644	Identifier	rlo		8664459	0					
ANR	8665645	Argument	power		8664459	1					
ANR	8665646	Identifier	power		8664459	0					
ANR	8665647	Identifier	abse		8664459	1					
ANR	8665648	Argument	calc_depth		8664459	1					
ANR	8665649	Identifier	calc_depth		8664459	0					
ANR	8665650	Argument	1		8664459	2					
ANR	8665651	PrimaryExpression	1		8664459	0					
ANR	8665652	ExpressionStatement	"rhi = DU ( pow ( rhi , power ) + abse , calc_depth , 1 )"	7980:12:251379:251424	8664459	5	True				
ANR	8665653	AssignmentExpression	"rhi = DU ( pow ( rhi , power ) + abse , calc_depth , 1 )"		8664459	0		=			
ANR	8665654	Identifier	rhi		8664459	0					
ANR	8665655	CallExpression	"DU ( pow ( rhi , power ) + abse , calc_depth , 1 )"		8664459	1					
ANR	8665656	Callee	DU		8664459	0					
ANR	8665657	Identifier	DU		8664459	0					
ANR	8665658	ArgumentList	"pow ( rhi , power ) + abse"		8664459	1					
ANR	8665659	Argument	"pow ( rhi , power ) + abse"		8664459	0					
ANR	8665660	AdditiveExpression	"pow ( rhi , power ) + abse"		8664459	0		+			
ANR	8665661	CallExpression	"pow ( rhi , power )"		8664459	0					
ANR	8665662	Callee	pow		8664459	0					
ANR	8665663	Identifier	pow		8664459	0					
ANR	8665664	ArgumentList	rhi		8664459	1					
ANR	8665665	Argument	rhi		8664459	0					
ANR	8665666	Identifier	rhi		8664459	0					
ANR	8665667	Argument	power		8664459	1					
ANR	8665668	Identifier	power		8664459	0					
ANR	8665669	Identifier	abse		8664459	1					
ANR	8665670	Argument	calc_depth		8664459	1					
ANR	8665671	Identifier	calc_depth		8664459	0					
ANR	8665672	Argument	1		8664459	2					
ANR	8665673	PrimaryExpression	1		8664459	0					
ANR	8665674	ExpressionStatement	"g = pow ( g , power )"	7982:12:251439:251456	8664459	6	True				
ANR	8665675	AssignmentExpression	"g = pow ( g , power )"		8664459	0		=			
ANR	8665676	Identifier	g		8664459	0					
ANR	8665677	CallExpression	"pow ( g , power )"		8664459	1					
ANR	8665678	Callee	pow		8664459	0					
ANR	8665679	Identifier	pow		8664459	0					
ANR	8665680	ArgumentList	g		8664459	1					
ANR	8665681	Argument	g		8664459	0					
ANR	8665682	Identifier	g		8664459	0					
ANR	8665683	Argument	power		8664459	1					
ANR	8665684	Identifier	power		8664459	0					
ANR	8665685	ExpressionStatement	"glo = DD ( pow ( glo , power ) - abse , calc_depth , 1 )"	7983:12:251470:251515	8664459	7	True				
ANR	8665686	AssignmentExpression	"glo = DD ( pow ( glo , power ) - abse , calc_depth , 1 )"		8664459	0		=			
ANR	8665687	Identifier	glo		8664459	0					
ANR	8665688	CallExpression	"DD ( pow ( glo , power ) - abse , calc_depth , 1 )"		8664459	1					
ANR	8665689	Callee	DD		8664459	0					
ANR	8665690	Identifier	DD		8664459	0					
ANR	8665691	ArgumentList	"pow ( glo , power ) - abse"		8664459	1					
ANR	8665692	Argument	"pow ( glo , power ) - abse"		8664459	0					
ANR	8665693	AdditiveExpression	"pow ( glo , power ) - abse"		8664459	0		-			
ANR	8665694	CallExpression	"pow ( glo , power )"		8664459	0					
ANR	8665695	Callee	pow		8664459	0					
ANR	8665696	Identifier	pow		8664459	0					
ANR	8665697	ArgumentList	glo		8664459	1					
ANR	8665698	Argument	glo		8664459	0					
ANR	8665699	Identifier	glo		8664459	0					
ANR	8665700	Argument	power		8664459	1					
ANR	8665701	Identifier	power		8664459	0					
ANR	8665702	Identifier	abse		8664459	1					
ANR	8665703	Argument	calc_depth		8664459	1					
ANR	8665704	Identifier	calc_depth		8664459	0					
ANR	8665705	Argument	1		8664459	2					
ANR	8665706	PrimaryExpression	1		8664459	0					
ANR	8665707	ExpressionStatement	"ghi = DU ( pow ( ghi , power ) + abse , calc_depth , 1 )"	7984:12:251529:251574	8664459	8	True				
ANR	8665708	AssignmentExpression	"ghi = DU ( pow ( ghi , power ) + abse , calc_depth , 1 )"		8664459	0		=			
ANR	8665709	Identifier	ghi		8664459	0					
ANR	8665710	CallExpression	"DU ( pow ( ghi , power ) + abse , calc_depth , 1 )"		8664459	1					
ANR	8665711	Callee	DU		8664459	0					
ANR	8665712	Identifier	DU		8664459	0					
ANR	8665713	ArgumentList	"pow ( ghi , power ) + abse"		8664459	1					
ANR	8665714	Argument	"pow ( ghi , power ) + abse"		8664459	0					
ANR	8665715	AdditiveExpression	"pow ( ghi , power ) + abse"		8664459	0		+			
ANR	8665716	CallExpression	"pow ( ghi , power )"		8664459	0					
ANR	8665717	Callee	pow		8664459	0					
ANR	8665718	Identifier	pow		8664459	0					
ANR	8665719	ArgumentList	ghi		8664459	1					
ANR	8665720	Argument	ghi		8664459	0					
ANR	8665721	Identifier	ghi		8664459	0					
ANR	8665722	Argument	power		8664459	1					
ANR	8665723	Identifier	power		8664459	0					
ANR	8665724	Identifier	abse		8664459	1					
ANR	8665725	Argument	calc_depth		8664459	1					
ANR	8665726	Identifier	calc_depth		8664459	0					
ANR	8665727	Argument	1		8664459	2					
ANR	8665728	PrimaryExpression	1		8664459	0					
ANR	8665729	ExpressionStatement	"b = pow ( b , power )"	7986:12:251589:251606	8664459	9	True				
ANR	8665730	AssignmentExpression	"b = pow ( b , power )"		8664459	0		=			
ANR	8665731	Identifier	b		8664459	0					
ANR	8665732	CallExpression	"pow ( b , power )"		8664459	1					
ANR	8665733	Callee	pow		8664459	0					
ANR	8665734	Identifier	pow		8664459	0					
ANR	8665735	ArgumentList	b		8664459	1					
ANR	8665736	Argument	b		8664459	0					
ANR	8665737	Identifier	b		8664459	0					
ANR	8665738	Argument	power		8664459	1					
ANR	8665739	Identifier	power		8664459	0					
ANR	8665740	ExpressionStatement	"blo = DD ( pow ( blo , power ) - abse , calc_depth , 1 )"	7987:12:251620:251665	8664459	10	True				
ANR	8665741	AssignmentExpression	"blo = DD ( pow ( blo , power ) - abse , calc_depth , 1 )"		8664459	0		=			
ANR	8665742	Identifier	blo		8664459	0					
ANR	8665743	CallExpression	"DD ( pow ( blo , power ) - abse , calc_depth , 1 )"		8664459	1					
ANR	8665744	Callee	DD		8664459	0					
ANR	8665745	Identifier	DD		8664459	0					
ANR	8665746	ArgumentList	"pow ( blo , power ) - abse"		8664459	1					
ANR	8665747	Argument	"pow ( blo , power ) - abse"		8664459	0					
ANR	8665748	AdditiveExpression	"pow ( blo , power ) - abse"		8664459	0		-			
ANR	8665749	CallExpression	"pow ( blo , power )"		8664459	0					
ANR	8665750	Callee	pow		8664459	0					
ANR	8665751	Identifier	pow		8664459	0					
ANR	8665752	ArgumentList	blo		8664459	1					
ANR	8665753	Argument	blo		8664459	0					
ANR	8665754	Identifier	blo		8664459	0					
ANR	8665755	Argument	power		8664459	1					
ANR	8665756	Identifier	power		8664459	0					
ANR	8665757	Identifier	abse		8664459	1					
ANR	8665758	Argument	calc_depth		8664459	1					
ANR	8665759	Identifier	calc_depth		8664459	0					
ANR	8665760	Argument	1		8664459	2					
ANR	8665761	PrimaryExpression	1		8664459	0					
ANR	8665762	ExpressionStatement	"bhi = DU ( pow ( bhi , power ) + abse , calc_depth , 1 )"	7988:12:251679:251724	8664459	11	True				
ANR	8665763	AssignmentExpression	"bhi = DU ( pow ( bhi , power ) + abse , calc_depth , 1 )"		8664459	0		=			
ANR	8665764	Identifier	bhi		8664459	0					
ANR	8665765	CallExpression	"DU ( pow ( bhi , power ) + abse , calc_depth , 1 )"		8664459	1					
ANR	8665766	Callee	DU		8664459	0					
ANR	8665767	Identifier	DU		8664459	0					
ANR	8665768	ArgumentList	"pow ( bhi , power ) + abse"		8664459	1					
ANR	8665769	Argument	"pow ( bhi , power ) + abse"		8664459	0					
ANR	8665770	AdditiveExpression	"pow ( bhi , power ) + abse"		8664459	0		+			
ANR	8665771	CallExpression	"pow ( bhi , power )"		8664459	0					
ANR	8665772	Callee	pow		8664459	0					
ANR	8665773	Identifier	pow		8664459	0					
ANR	8665774	ArgumentList	bhi		8664459	1					
ANR	8665775	Argument	bhi		8664459	0					
ANR	8665776	Identifier	bhi		8664459	0					
ANR	8665777	Argument	power		8664459	1					
ANR	8665778	Identifier	power		8664459	0					
ANR	8665779	Identifier	abse		8664459	1					
ANR	8665780	Argument	calc_depth		8664459	1					
ANR	8665781	Identifier	calc_depth		8664459	0					
ANR	8665782	Argument	1		8664459	2					
ANR	8665783	PrimaryExpression	1		8664459	0					
ANR	8665784	ExpressionStatement	gray = r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient	8001:9:252391:252491	8664459	86	True				
ANR	8665785	AssignmentExpression	gray = r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient		8664459	0		=			
ANR	8665786	Identifier	gray		8664459	0					
ANR	8665787	AdditiveExpression	r * data . red_coefficient + g * data . green_coefficient + b * data . blue_coefficient		8664459	1		+			
ANR	8665788	MultiplicativeExpression	r * data . red_coefficient		8664459	0		*			
ANR	8665789	Identifier	r		8664459	0					
ANR	8665790	MemberAccess	data . red_coefficient		8664459	1					
ANR	8665791	Identifier	data		8664459	0					
ANR	8665792	Identifier	red_coefficient		8664459	1					
ANR	8665793	AdditiveExpression	g * data . green_coefficient + b * data . blue_coefficient		8664459	1		+			
ANR	8665794	MultiplicativeExpression	g * data . green_coefficient		8664459	0		*			
ANR	8665795	Identifier	g		8664459	0					
ANR	8665796	MemberAccess	data . green_coefficient		8664459	1					
ANR	8665797	Identifier	data		8664459	0					
ANR	8665798	Identifier	green_coefficient		8664459	1					
ANR	8665799	MultiplicativeExpression	b * data . blue_coefficient		8664459	1		*			
ANR	8665800	Identifier	b		8664459	0					
ANR	8665801	MemberAccess	data . blue_coefficient		8664459	1					
ANR	8665802	Identifier	data		8664459	0					
ANR	8665803	Identifier	blue_coefficient		8664459	1					
ANR	8665804	CompoundStatement		113:12:4662:4690	8664459	87					
ANR	8665805	IdentifierDeclStatement	const int do_round = data . gamma != 1 || calc_depth == 16 ;	8005:12:252517:252573	8664459	0	True				
ANR	8665806	IdentifierDecl	do_round = data . gamma != 1 || calc_depth == 16		8664459	0					
ANR	8665807	IdentifierDeclType	const int		8664459	0					
ANR	8665808	Identifier	do_round		8664459	1					
ANR	8665809	AssignmentExpression	do_round = data . gamma != 1 || calc_depth == 16		8664459	2		=			
ANR	8665810	Identifier	do_round		8664459	0					
ANR	8665811	OrExpression	data . gamma != 1 || calc_depth == 16		8664459	1		||			
ANR	8665812	EqualityExpression	data . gamma != 1		8664459	0		!=			
ANR	8665813	MemberAccess	data . gamma		8664459	0					
ANR	8665814	Identifier	data		8664459	0					
ANR	8665815	Identifier	gamma		8664459	1					
ANR	8665816	PrimaryExpression	1		8664459	1					
ANR	8665817	EqualityExpression	calc_depth == 16		8664459	1		==			
ANR	8665818	Identifier	calc_depth		8664459	0					
ANR	8665819	PrimaryExpression	16		8664459	1					
ANR	8665820	IdentifierDeclStatement	const double ce = 2. / 32768 ;	8006:12:252587:252615	8664459	1	True				
ANR	8665821	IdentifierDecl	ce = 2. / 32768		8664459	0					
ANR	8665822	IdentifierDeclType	const double		8664459	0					
ANR	8665823	Identifier	ce		8664459	1					
ANR	8665824	AssignmentExpression	ce = 2. / 32768		8664459	2		=			
ANR	8665825	Identifier	ce		8664459	0					
ANR	8665826	MultiplicativeExpression	2. / 32768		8664459	1		/			
ANR	8665827	PrimaryExpression	2.		8664459	0					
ANR	8665828	PrimaryExpression	32768		8664459	1					
ANR	8665829	ExpressionStatement	"graylo = DD ( rlo * ( data . red_coefficient - ce ) + glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce ) , calc_depth , do_round )"	8008:12:252630:252797	8664459	2	True				
ANR	8665830	AssignmentExpression	"graylo = DD ( rlo * ( data . red_coefficient - ce ) + glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce ) , calc_depth , do_round )"		8664459	0		=			
ANR	8665831	Identifier	graylo		8664459	0					
ANR	8665832	CallExpression	"DD ( rlo * ( data . red_coefficient - ce ) + glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce ) , calc_depth , do_round )"		8664459	1					
ANR	8665833	Callee	DD		8664459	0					
ANR	8665834	Identifier	DD		8664459	0					
ANR	8665835	ArgumentList	rlo * ( data . red_coefficient - ce ) + glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce )		8664459	1					
ANR	8665836	Argument	rlo * ( data . red_coefficient - ce ) + glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce )		8664459	0					
ANR	8665837	AdditiveExpression	rlo * ( data . red_coefficient - ce ) + glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce )		8664459	0		+			
ANR	8665838	MultiplicativeExpression	rlo * ( data . red_coefficient - ce )		8664459	0		*			
ANR	8665839	Identifier	rlo		8664459	0					
ANR	8665840	AdditiveExpression	data . red_coefficient - ce		8664459	1		-			
ANR	8665841	MemberAccess	data . red_coefficient		8664459	0					
ANR	8665842	Identifier	data		8664459	0					
ANR	8665843	Identifier	red_coefficient		8664459	1					
ANR	8665844	Identifier	ce		8664459	1					
ANR	8665845	AdditiveExpression	glo * ( data . green_coefficient - ce ) + blo * ( data . blue_coefficient - ce )		8664459	1		+			
ANR	8665846	MultiplicativeExpression	glo * ( data . green_coefficient - ce )		8664459	0		*			
ANR	8665847	Identifier	glo		8664459	0					
ANR	8665848	AdditiveExpression	data . green_coefficient - ce		8664459	1		-			
ANR	8665849	MemberAccess	data . green_coefficient		8664459	0					
ANR	8665850	Identifier	data		8664459	0					
ANR	8665851	Identifier	green_coefficient		8664459	1					
ANR	8665852	Identifier	ce		8664459	1					
ANR	8665853	MultiplicativeExpression	blo * ( data . blue_coefficient - ce )		8664459	1		*			
ANR	8665854	Identifier	blo		8664459	0					
ANR	8665855	AdditiveExpression	data . blue_coefficient - ce		8664459	1		-			
ANR	8665856	MemberAccess	data . blue_coefficient		8664459	0					
ANR	8665857	Identifier	data		8664459	0					
ANR	8665858	Identifier	blue_coefficient		8664459	1					
ANR	8665859	Identifier	ce		8664459	1					
ANR	8665860	Argument	calc_depth		8664459	1					
ANR	8665861	Identifier	calc_depth		8664459	0					
ANR	8665862	Argument	do_round		8664459	2					
ANR	8665863	Identifier	do_round		8664459	0					
ANR	8665864	IfStatement	if ( graylo > gray )		8664459	3					
ANR	8665865	Condition	graylo > gray	8011:16:252815:252827	8664459	0	True				
ANR	8665866	RelationalExpression	graylo > gray		8664459	0		>			
ANR	8665867	Identifier	graylo		8664459	0					
ANR	8665868	Identifier	gray		8664459	1					
ANR	8665869	ExpressionStatement	graylo = gray	8012:15:252882:252895	8664459	1	True				
ANR	8665870	AssignmentExpression	graylo = gray		8664459	0		=			
ANR	8665871	Identifier	graylo		8664459	0					
ANR	8665872	Identifier	gray		8664459	1					
ANR	8665873	ExpressionStatement	"grayhi = DU ( rhi * ( data . red_coefficient + ce ) + ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce ) , calc_depth , do_round )"	8014:12:252910:253077	8664459	4	True				
ANR	8665874	AssignmentExpression	"grayhi = DU ( rhi * ( data . red_coefficient + ce ) + ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce ) , calc_depth , do_round )"		8664459	0		=			
ANR	8665875	Identifier	grayhi		8664459	0					
ANR	8665876	CallExpression	"DU ( rhi * ( data . red_coefficient + ce ) + ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce ) , calc_depth , do_round )"		8664459	1					
ANR	8665877	Callee	DU		8664459	0					
ANR	8665878	Identifier	DU		8664459	0					
ANR	8665879	ArgumentList	rhi * ( data . red_coefficient + ce ) + ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce )		8664459	1					
ANR	8665880	Argument	rhi * ( data . red_coefficient + ce ) + ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce )		8664459	0					
ANR	8665881	AdditiveExpression	rhi * ( data . red_coefficient + ce ) + ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce )		8664459	0		+			
ANR	8665882	MultiplicativeExpression	rhi * ( data . red_coefficient + ce )		8664459	0		*			
ANR	8665883	Identifier	rhi		8664459	0					
ANR	8665884	AdditiveExpression	data . red_coefficient + ce		8664459	1		+			
ANR	8665885	MemberAccess	data . red_coefficient		8664459	0					
ANR	8665886	Identifier	data		8664459	0					
ANR	8665887	Identifier	red_coefficient		8664459	1					
ANR	8665888	Identifier	ce		8664459	1					
ANR	8665889	AdditiveExpression	ghi * ( data . green_coefficient + ce ) + bhi * ( data . blue_coefficient + ce )		8664459	1		+			
ANR	8665890	MultiplicativeExpression	ghi * ( data . green_coefficient + ce )		8664459	0		*			
ANR	8665891	Identifier	ghi		8664459	0					
ANR	8665892	AdditiveExpression	data . green_coefficient + ce		8664459	1		+			
ANR	8665893	MemberAccess	data . green_coefficient		8664459	0					
ANR	8665894	Identifier	data		8664459	0					
ANR	8665895	Identifier	green_coefficient		8664459	1					
ANR	8665896	Identifier	ce		8664459	1					
ANR	8665897	MultiplicativeExpression	bhi * ( data . blue_coefficient + ce )		8664459	1		*			
ANR	8665898	Identifier	bhi		8664459	0					
ANR	8665899	AdditiveExpression	data . blue_coefficient + ce		8664459	1		+			
ANR	8665900	MemberAccess	data . blue_coefficient		8664459	0					
ANR	8665901	Identifier	data		8664459	0					
ANR	8665902	Identifier	blue_coefficient		8664459	1					
ANR	8665903	Identifier	ce		8664459	1					
ANR	8665904	Argument	calc_depth		8664459	1					
ANR	8665905	Identifier	calc_depth		8664459	0					
ANR	8665906	Argument	do_round		8664459	2					
ANR	8665907	Identifier	do_round		8664459	0					
ANR	8665908	IfStatement	if ( grayhi < gray )		8664459	5					
ANR	8665909	Condition	grayhi < gray	8017:16:253095:253107	8664459	0	True				
ANR	8665910	RelationalExpression	grayhi < gray		8664459	0		<			
ANR	8665911	Identifier	grayhi		8664459	0					
ANR	8665912	Identifier	gray		8664459	1					
ANR	8665913	ExpressionStatement	grayhi = gray	8018:15:253125:253138	8664459	1	True				
ANR	8665914	AssignmentExpression	grayhi = gray		8664459	0		=			
ANR	8665915	Identifier	grayhi		8664459	0					
ANR	8665916	Identifier	gray		8664459	1					
ANR	8665917	IfStatement	if ( data . gamma != 1 )		8664459	88					
ANR	8665918	Condition	data . gamma != 1	8022:13:253202:253216	8664459	0	True				
ANR	8665919	EqualityExpression	data . gamma != 1		8664459	0		!=			
ANR	8665920	MemberAccess	data . gamma		8664459	0					
ANR	8665921	Identifier	data		8664459	0					
ANR	8665922	Identifier	gamma		8664459	1					
ANR	8665923	PrimaryExpression	1		8664459	1					
ANR	8665924	CompoundStatement		131:12:5317:5348	8664459	1					
ANR	8665925	IdentifierDeclStatement	const double power = data . gamma ;	8024:12:253242:253273	8664459	0	True				
ANR	8665926	IdentifierDecl	power = data . gamma		8664459	0					
ANR	8665927	IdentifierDeclType	const double		8664459	0					
ANR	8665928	Identifier	power		8664459	1					
ANR	8665929	AssignmentExpression	power = data . gamma		8664459	2		=			
ANR	8665930	Identifier	power		8664459	0					
ANR	8665931	MemberAccess	data . gamma		8664459	1					
ANR	8665932	Identifier	data		8664459	0					
ANR	8665933	Identifier	gamma		8664459	1					
ANR	8665934	IfStatement	if ( gamma_depth != sample_depth )		8664459	1					
ANR	8665935	Condition	gamma_depth != sample_depth	8027:16:253369:253395	8664459	0	True				
ANR	8665936	EqualityExpression	gamma_depth != sample_depth		8664459	0		!=			
ANR	8665937	Identifier	gamma_depth		8664459	0					
ANR	8665938	Identifier	sample_depth		8664459	1					
ANR	8665939	CompoundStatement		135:12:5485:5485	8664459	1					
ANR	8665940	ExpressionStatement	"rlo = DD ( rlo , gamma_depth , 0 )"	8029:15:253427:253468	8664459	0	True				
ANR	8665941	AssignmentExpression	"rlo = DD ( rlo , gamma_depth , 0 )"		8664459	0		=			
ANR	8665942	Identifier	rlo		8664459	0					
ANR	8665943	CallExpression	"DD ( rlo , gamma_depth , 0 )"		8664459	1					
ANR	8665944	Callee	DD		8664459	0					
ANR	8665945	Identifier	DD		8664459	0					
ANR	8665946	ArgumentList	rlo		8664459	1					
ANR	8665947	Argument	rlo		8664459	0					
ANR	8665948	Identifier	rlo		8664459	0					
ANR	8665949	Argument	gamma_depth		8664459	1					
ANR	8665950	Identifier	gamma_depth		8664459	0					
ANR	8665951	Argument	0		8664459	2					
ANR	8665952	PrimaryExpression	0		8664459	0					
ANR	8665953	ExpressionStatement	"rhi = DU ( rhi , gamma_depth , 0 )"	8030:15:253485:253526	8664459	1	True				
ANR	8665954	AssignmentExpression	"rhi = DU ( rhi , gamma_depth , 0 )"		8664459	0		=			
ANR	8665955	Identifier	rhi		8664459	0					
ANR	8665956	CallExpression	"DU ( rhi , gamma_depth , 0 )"		8664459	1					
ANR	8665957	Callee	DU		8664459	0					
ANR	8665958	Identifier	DU		8664459	0					
ANR	8665959	ArgumentList	rhi		8664459	1					
ANR	8665960	Argument	rhi		8664459	0					
ANR	8665961	Identifier	rhi		8664459	0					
ANR	8665962	Argument	gamma_depth		8664459	1					
ANR	8665963	Identifier	gamma_depth		8664459	0					
ANR	8665964	Argument	0		8664459	2					
ANR	8665965	PrimaryExpression	0		8664459	0					
ANR	8665966	ExpressionStatement	"glo = DD ( glo , gamma_depth , 0 )"	8031:15:253543:253584	8664459	2	True				
ANR	8665967	AssignmentExpression	"glo = DD ( glo , gamma_depth , 0 )"		8664459	0		=			
ANR	8665968	Identifier	glo		8664459	0					
ANR	8665969	CallExpression	"DD ( glo , gamma_depth , 0 )"		8664459	1					
ANR	8665970	Callee	DD		8664459	0					
ANR	8665971	Identifier	DD		8664459	0					
ANR	8665972	ArgumentList	glo		8664459	1					
ANR	8665973	Argument	glo		8664459	0					
ANR	8665974	Identifier	glo		8664459	0					
ANR	8665975	Argument	gamma_depth		8664459	1					
ANR	8665976	Identifier	gamma_depth		8664459	0					
ANR	8665977	Argument	0		8664459	2					
ANR	8665978	PrimaryExpression	0		8664459	0					
ANR	8665979	ExpressionStatement	"ghi = DU ( ghi , gamma_depth , 0 )"	8032:15:253601:253642	8664459	3	True				
ANR	8665980	AssignmentExpression	"ghi = DU ( ghi , gamma_depth , 0 )"		8664459	0		=			
ANR	8665981	Identifier	ghi		8664459	0					
ANR	8665982	CallExpression	"DU ( ghi , gamma_depth , 0 )"		8664459	1					
ANR	8665983	Callee	DU		8664459	0					
ANR	8665984	Identifier	DU		8664459	0					
ANR	8665985	ArgumentList	ghi		8664459	1					
ANR	8665986	Argument	ghi		8664459	0					
ANR	8665987	Identifier	ghi		8664459	0					
ANR	8665988	Argument	gamma_depth		8664459	1					
ANR	8665989	Identifier	gamma_depth		8664459	0					
ANR	8665990	Argument	0		8664459	2					
ANR	8665991	PrimaryExpression	0		8664459	0					
ANR	8665992	ExpressionStatement	"blo = DD ( blo , gamma_depth , 0 )"	8033:15:253659:253700	8664459	4	True				
ANR	8665993	AssignmentExpression	"blo = DD ( blo , gamma_depth , 0 )"		8664459	0		=			
ANR	8665994	Identifier	blo		8664459	0					
ANR	8665995	CallExpression	"DD ( blo , gamma_depth , 0 )"		8664459	1					
ANR	8665996	Callee	DD		8664459	0					
ANR	8665997	Identifier	DD		8664459	0					
ANR	8665998	ArgumentList	blo		8664459	1					
ANR	8665999	Argument	blo		8664459	0					
ANR	8666000	Identifier	blo		8664459	0					
ANR	8666001	Argument	gamma_depth		8664459	1					
ANR	8666002	Identifier	gamma_depth		8664459	0					
ANR	8666003	Argument	0		8664459	2					
ANR	8666004	PrimaryExpression	0		8664459	0					
ANR	8666005	ExpressionStatement	"bhi = DU ( bhi , gamma_depth , 0 )"	8034:15:253717:253758	8664459	5	True				
ANR	8666006	AssignmentExpression	"bhi = DU ( bhi , gamma_depth , 0 )"		8664459	0		=			
ANR	8666007	Identifier	bhi		8664459	0					
ANR	8666008	CallExpression	"DU ( bhi , gamma_depth , 0 )"		8664459	1					
ANR	8666009	Callee	DU		8664459	0					
ANR	8666010	Identifier	DU		8664459	0					
ANR	8666011	ArgumentList	bhi		8664459	1					
ANR	8666012	Argument	bhi		8664459	0					
ANR	8666013	Identifier	bhi		8664459	0					
ANR	8666014	Argument	gamma_depth		8664459	1					
ANR	8666015	Identifier	gamma_depth		8664459	0					
ANR	8666016	Argument	0		8664459	2					
ANR	8666017	PrimaryExpression	0		8664459	0					
ANR	8666018	ExpressionStatement	"gray = pow ( gray , power )"	8037:12:253787:253810	8664459	2	True				
ANR	8666019	AssignmentExpression	"gray = pow ( gray , power )"		8664459	0		=			
ANR	8666020	Identifier	gray		8664459	0					
ANR	8666021	CallExpression	"pow ( gray , power )"		8664459	1					
ANR	8666022	Callee	pow		8664459	0					
ANR	8666023	Identifier	pow		8664459	0					
ANR	8666024	ArgumentList	gray		8664459	1					
ANR	8666025	Argument	gray		8664459	0					
ANR	8666026	Identifier	gray		8664459	0					
ANR	8666027	Argument	power		8664459	1					
ANR	8666028	Identifier	power		8664459	0					
ANR	8666029	ExpressionStatement	"graylo = DD ( pow ( graylo , power ) , sample_depth , 1 )"	8038:12:253824:253872	8664459	3	True				
ANR	8666030	AssignmentExpression	"graylo = DD ( pow ( graylo , power ) , sample_depth , 1 )"		8664459	0		=			
ANR	8666031	Identifier	graylo		8664459	0					
ANR	8666032	CallExpression	"DD ( pow ( graylo , power ) , sample_depth , 1 )"		8664459	1					
ANR	8666033	Callee	DD		8664459	0					
ANR	8666034	Identifier	DD		8664459	0					
ANR	8666035	ArgumentList	"pow ( graylo , power )"		8664459	1					
ANR	8666036	Argument	"pow ( graylo , power )"		8664459	0					
ANR	8666037	CallExpression	"pow ( graylo , power )"		8664459	0					
ANR	8666038	Callee	pow		8664459	0					
ANR	8666039	Identifier	pow		8664459	0					
ANR	8666040	ArgumentList	graylo		8664459	1					
ANR	8666041	Argument	graylo		8664459	0					
ANR	8666042	Identifier	graylo		8664459	0					
ANR	8666043	Argument	power		8664459	1					
ANR	8666044	Identifier	power		8664459	0					
ANR	8666045	Argument	sample_depth		8664459	1					
ANR	8666046	Identifier	sample_depth		8664459	0					
ANR	8666047	Argument	1		8664459	2					
ANR	8666048	PrimaryExpression	1		8664459	0					
ANR	8666049	ExpressionStatement	"grayhi = DU ( pow ( grayhi , power ) , sample_depth , 1 )"	8039:12:253886:253934	8664459	4	True				
ANR	8666050	AssignmentExpression	"grayhi = DU ( pow ( grayhi , power ) , sample_depth , 1 )"		8664459	0		=			
ANR	8666051	Identifier	grayhi		8664459	0					
ANR	8666052	CallExpression	"DU ( pow ( grayhi , power ) , sample_depth , 1 )"		8664459	1					
ANR	8666053	Callee	DU		8664459	0					
ANR	8666054	Identifier	DU		8664459	0					
ANR	8666055	ArgumentList	"pow ( grayhi , power )"		8664459	1					
ANR	8666056	Argument	"pow ( grayhi , power )"		8664459	0					
ANR	8666057	CallExpression	"pow ( grayhi , power )"		8664459	0					
ANR	8666058	Callee	pow		8664459	0					
ANR	8666059	Identifier	pow		8664459	0					
ANR	8666060	ArgumentList	grayhi		8664459	1					
ANR	8666061	Argument	grayhi		8664459	0					
ANR	8666062	Identifier	grayhi		8664459	0					
ANR	8666063	Argument	power		8664459	1					
ANR	8666064	Identifier	power		8664459	0					
ANR	8666065	Argument	sample_depth		8664459	1					
ANR	8666066	Identifier	sample_depth		8664459	0					
ANR	8666067	Argument	1		8664459	2					
ANR	8666068	PrimaryExpression	1		8664459	0					
ANR	8666069	Statement	undef	8042:9:253957:253961	8664459	89	True				
ANR	8666070	Statement	DD	8042:15:253963:253964	8664459	90	True				
ANR	8666071	Statement	undef	8043:9:253975:253979	8664459	91	True				
ANR	8666072	Statement	DU	8043:15:253981:253982	8664459	92	True				
ANR	8666073	IfStatement	if ( isgray )		8664459	93					
ANR	8666074	Condition	isgray	8050:13:254195:254200	8664459	0	True				
ANR	8666075	Identifier	isgray		8664459	0					
ANR	8666076	ExpressionStatement	err = ( that -> rede + that -> greene + that -> bluee ) / 3	8051:12:254215:254264	8664459	1	True				
ANR	8666077	AssignmentExpression	err = ( that -> rede + that -> greene + that -> bluee ) / 3		8664459	0		=			
ANR	8666078	Identifier	err		8664459	0					
ANR	8666079	MultiplicativeExpression	( that -> rede + that -> greene + that -> bluee ) / 3		8664459	1		/			
ANR	8666080	AdditiveExpression	that -> rede + that -> greene + that -> bluee		8664459	0		+			
ANR	8666081	PtrMemberAccess	that -> rede		8664459	0					
ANR	8666082	Identifier	that		8664459	0					
ANR	8666083	Identifier	rede		8664459	1					
ANR	8666084	AdditiveExpression	that -> greene + that -> bluee		8664459	1		+			
ANR	8666085	PtrMemberAccess	that -> greene		8664459	0					
ANR	8666086	Identifier	that		8664459	0					
ANR	8666087	Identifier	greene		8664459	1					
ANR	8666088	PtrMemberAccess	that -> bluee		8664459	1					
ANR	8666089	Identifier	that		8664459	0					
ANR	8666090	Identifier	bluee		8664459	1					
ANR	8666091	PrimaryExpression	3		8664459	1					
ANR	8666092	ElseStatement	else		8664459	0					
ANR	8666093	CompoundStatement		161:9:6365:6365	8664459	0					
ANR	8666094	ExpressionStatement	err = fabs ( grayhi - gray )	8055:12:254304:254327	8664459	0	True				
ANR	8666095	AssignmentExpression	err = fabs ( grayhi - gray )		8664459	0		=			
ANR	8666096	Identifier	err		8664459	0					
ANR	8666097	CallExpression	fabs ( grayhi - gray )		8664459	1					
ANR	8666098	Callee	fabs		8664459	0					
ANR	8666099	Identifier	fabs		8664459	0					
ANR	8666100	ArgumentList	grayhi - gray		8664459	1					
ANR	8666101	Argument	grayhi - gray		8664459	0					
ANR	8666102	AdditiveExpression	grayhi - gray		8664459	0		-			
ANR	8666103	Identifier	grayhi		8664459	0					
ANR	8666104	Identifier	gray		8664459	1					
ANR	8666105	IfStatement	if ( fabs ( gray - graylo ) > err )		8664459	1					
ANR	8666106	Condition	fabs ( gray - graylo ) > err	8057:16:254346:254370	8664459	0	True				
ANR	8666107	RelationalExpression	fabs ( gray - graylo ) > err		8664459	0		>			
ANR	8666108	CallExpression	fabs ( gray - graylo )		8664459	0					
ANR	8666109	Callee	fabs		8664459	0					
ANR	8666110	Identifier	fabs		8664459	0					
ANR	8666111	ArgumentList	gray - graylo		8664459	1					
ANR	8666112	Argument	gray - graylo		8664459	0					
ANR	8666113	AdditiveExpression	gray - graylo		8664459	0		-			
ANR	8666114	Identifier	gray		8664459	0					
ANR	8666115	Identifier	graylo		8664459	1					
ANR	8666116	Identifier	err		8664459	1					
ANR	8666117	ExpressionStatement	err = fabs ( graylo - gray )	8058:15:254388:254411	8664459	1	True				
ANR	8666118	AssignmentExpression	err = fabs ( graylo - gray )		8664459	0		=			
ANR	8666119	Identifier	err		8664459	0					
ANR	8666120	CallExpression	fabs ( graylo - gray )		8664459	1					
ANR	8666121	Callee	fabs		8664459	0					
ANR	8666122	Identifier	fabs		8664459	0					
ANR	8666123	ArgumentList	graylo - gray		8664459	1					
ANR	8666124	Argument	graylo - gray		8664459	0					
ANR	8666125	AdditiveExpression	graylo - gray		8664459	0		-			
ANR	8666126	Identifier	graylo		8664459	0					
ANR	8666127	Identifier	gray		8664459	1					
ANR	8666128	IfStatement	if ( err > pm -> limit )		8664459	2					
ANR	8666129	Condition	err > pm -> limit	8062:16:254491:254505	8664459	0	True				
ANR	8666130	RelationalExpression	err > pm -> limit		8664459	0		>			
ANR	8666131	Identifier	err		8664459	0					
ANR	8666132	PtrMemberAccess	pm -> limit		8664459	1					
ANR	8666133	Identifier	pm		8664459	0					
ANR	8666134	Identifier	limit		8664459	1					
ANR	8666135	CompoundStatement		172:15:6643:6659	8664459	1					
ANR	8666136	IdentifierDeclStatement	size_t pos = 0 ;	8064:15:254537:254551	8664459	0	True				
ANR	8666137	IdentifierDecl	pos = 0		8664459	0					
ANR	8666138	IdentifierDeclType	size_t		8664459	0					
ANR	8666139	Identifier	pos		8664459	1					
ANR	8666140	AssignmentExpression	pos = 0		8664459	2		=			
ANR	8666141	Identifier	pos		8664459	0					
ANR	8666142	PrimaryExpression	0		8664459	1					
ANR	8666143	IdentifierDeclStatement	char buffer [ 128 ] ;	8065:15:254568:254584	8664459	1	True				
ANR	8666144	IdentifierDecl	buffer [ 128 ]		8664459	0					
ANR	8666145	IdentifierDeclType	char [ 128 ]		8664459	0					
ANR	8666146	Identifier	buffer		8664459	1					
ANR	8666147	PrimaryExpression	128		8664459	2					
ANR	8666148	ExpressionStatement	"pos = safecat ( buffer , sizeof buffer , pos , ""rgb_to_gray error "" )"	8067:15:254602:254665	8664459	2	True				
ANR	8666149	AssignmentExpression	"pos = safecat ( buffer , sizeof buffer , pos , ""rgb_to_gray error "" )"		8664459	0		=			
ANR	8666150	Identifier	pos		8664459	0					
ANR	8666151	CallExpression	"safecat ( buffer , sizeof buffer , pos , ""rgb_to_gray error "" )"		8664459	1					
ANR	8666152	Callee	safecat		8664459	0					
ANR	8666153	Identifier	safecat		8664459	0					
ANR	8666154	ArgumentList	buffer		8664459	1					
ANR	8666155	Argument	buffer		8664459	0					
ANR	8666156	Identifier	buffer		8664459	0					
ANR	8666157	Argument	sizeof buffer		8664459	1					
ANR	8666158	SizeofExpression	sizeof buffer		8664459	0					
ANR	8666159	Sizeof	sizeof		8664459	0					
ANR	8666160	Identifier	buffer		8664459	1					
ANR	8666161	Argument	pos		8664459	2					
ANR	8666162	Identifier	pos		8664459	0					
ANR	8666163	Argument	"""rgb_to_gray error """		8664459	3					
ANR	8666164	PrimaryExpression	"""rgb_to_gray error """		8664459	0					
ANR	8666165	ExpressionStatement	"pos = safecatd ( buffer , sizeof buffer , pos , err , 6 )"	8068:15:254682:254732	8664459	3	True				
ANR	8666166	AssignmentExpression	"pos = safecatd ( buffer , sizeof buffer , pos , err , 6 )"		8664459	0		=			
ANR	8666167	Identifier	pos		8664459	0					
ANR	8666168	CallExpression	"safecatd ( buffer , sizeof buffer , pos , err , 6 )"		8664459	1					
ANR	8666169	Callee	safecatd		8664459	0					
ANR	8666170	Identifier	safecatd		8664459	0					
ANR	8666171	ArgumentList	buffer		8664459	1					
ANR	8666172	Argument	buffer		8664459	0					
ANR	8666173	Identifier	buffer		8664459	0					
ANR	8666174	Argument	sizeof buffer		8664459	1					
ANR	8666175	SizeofExpression	sizeof buffer		8664459	0					
ANR	8666176	Sizeof	sizeof		8664459	0					
ANR	8666177	Identifier	buffer		8664459	1					
ANR	8666178	Argument	pos		8664459	2					
ANR	8666179	Identifier	pos		8664459	0					
ANR	8666180	Argument	err		8664459	3					
ANR	8666181	Identifier	err		8664459	0					
ANR	8666182	Argument	6		8664459	4					
ANR	8666183	PrimaryExpression	6		8664459	0					
ANR	8666184	ExpressionStatement	"pos = safecat ( buffer , sizeof buffer , pos , "" exceeds limit "" )"	8069:15:254749:254809	8664459	4	True				
ANR	8666185	AssignmentExpression	"pos = safecat ( buffer , sizeof buffer , pos , "" exceeds limit "" )"		8664459	0		=			
ANR	8666186	Identifier	pos		8664459	0					
ANR	8666187	CallExpression	"safecat ( buffer , sizeof buffer , pos , "" exceeds limit "" )"		8664459	1					
ANR	8666188	Callee	safecat		8664459	0					
ANR	8666189	Identifier	safecat		8664459	0					
ANR	8666190	ArgumentList	buffer		8664459	1					
ANR	8666191	Argument	buffer		8664459	0					
ANR	8666192	Identifier	buffer		8664459	0					
ANR	8666193	Argument	sizeof buffer		8664459	1					
ANR	8666194	SizeofExpression	sizeof buffer		8664459	0					
ANR	8666195	Sizeof	sizeof		8664459	0					
ANR	8666196	Identifier	buffer		8664459	1					
ANR	8666197	Argument	pos		8664459	2					
ANR	8666198	Identifier	pos		8664459	0					
ANR	8666199	Argument	""" exceeds limit """		8664459	3					
ANR	8666200	PrimaryExpression	""" exceeds limit """		8664459	0					
ANR	8666201	ExpressionStatement	"pos = safecatd ( buffer , sizeof buffer , pos , pm -> limit , 6 )"	8070:15:254826:254882	8664459	5	True				
ANR	8666202	AssignmentExpression	"pos = safecatd ( buffer , sizeof buffer , pos , pm -> limit , 6 )"		8664459	0		=			
ANR	8666203	Identifier	pos		8664459	0					
ANR	8666204	CallExpression	"safecatd ( buffer , sizeof buffer , pos , pm -> limit , 6 )"		8664459	1					
ANR	8666205	Callee	safecatd		8664459	0					
ANR	8666206	Identifier	safecatd		8664459	0					
ANR	8666207	ArgumentList	buffer		8664459	1					
ANR	8666208	Argument	buffer		8664459	0					
ANR	8666209	Identifier	buffer		8664459	0					
ANR	8666210	Argument	sizeof buffer		8664459	1					
ANR	8666211	SizeofExpression	sizeof buffer		8664459	0					
ANR	8666212	Sizeof	sizeof		8664459	0					
ANR	8666213	Identifier	buffer		8664459	1					
ANR	8666214	Argument	pos		8664459	2					
ANR	8666215	Identifier	pos		8664459	0					
ANR	8666216	Argument	pm -> limit		8664459	3					
ANR	8666217	PtrMemberAccess	pm -> limit		8664459	0					
ANR	8666218	Identifier	pm		8664459	0					
ANR	8666219	Identifier	limit		8664459	1					
ANR	8666220	Argument	6		8664459	4					
ANR	8666221	PrimaryExpression	6		8664459	0					
ANR	8666222	ExpressionStatement	"png_warning ( pp , buffer )"	8071:15:254899:254922	8664459	6	True				
ANR	8666223	CallExpression	"png_warning ( pp , buffer )"		8664459	0					
ANR	8666224	Callee	png_warning		8664459	0					
ANR	8666225	Identifier	png_warning		8664459	0					
ANR	8666226	ArgumentList	pp		8664459	1					
ANR	8666227	Argument	pp		8664459	0					
ANR	8666228	Identifier	pp		8664459	0					
ANR	8666229	Argument	buffer		8664459	1					
ANR	8666230	Identifier	buffer		8664459	0					
ANR	8666231	ExpressionStatement	pm -> limit = err	8072:15:254939:254954	8664459	7	True				
ANR	8666232	AssignmentExpression	pm -> limit = err		8664459	0		=			
ANR	8666233	PtrMemberAccess	pm -> limit		8664459	0					
ANR	8666234	Identifier	pm		8664459	0					
ANR	8666235	Identifier	limit		8664459	1					
ANR	8666236	Identifier	err		8664459	1					
ANR	8666237	Statement	endif	8205:3:260361:260365	8664459	10	True				
ANR	8666238	ExpressionStatement	that -> bluef = that -> greenf = that -> redf = gray	8207:6:260390:260436	8664459	11	True				
ANR	8666239	AssignmentExpression	that -> bluef = that -> greenf = that -> redf = gray		8664459	0		=			
ANR	8666240	PtrMemberAccess	that -> bluef		8664459	0					
ANR	8666241	Identifier	that		8664459	0					
ANR	8666242	Identifier	bluef		8664459	1					
ANR	8666243	AssignmentExpression	that -> greenf = that -> redf = gray		8664459	1		=			
ANR	8666244	PtrMemberAccess	that -> greenf		8664459	0					
ANR	8666245	Identifier	that		8664459	0					
ANR	8666246	Identifier	greenf		8664459	1					
ANR	8666247	AssignmentExpression	that -> redf = gray		8664459	1		=			
ANR	8666248	PtrMemberAccess	that -> redf		8664459	0					
ANR	8666249	Identifier	that		8664459	0					
ANR	8666250	Identifier	redf		8664459	1					
ANR	8666251	Identifier	gray		8664459	1					
ANR	8666252	ExpressionStatement	that -> bluee = that -> greene = that -> rede = err	8208:6:260444:260489	8664459	12	True				
ANR	8666253	AssignmentExpression	that -> bluee = that -> greene = that -> rede = err		8664459	0		=			
ANR	8666254	PtrMemberAccess	that -> bluee		8664459	0					
ANR	8666255	Identifier	that		8664459	0					
ANR	8666256	Identifier	bluee		8664459	1					
ANR	8666257	AssignmentExpression	that -> greene = that -> rede = err		8664459	1		=			
ANR	8666258	PtrMemberAccess	that -> greene		8664459	0					
ANR	8666259	Identifier	that		8664459	0					
ANR	8666260	Identifier	greene		8664459	1					
ANR	8666261	AssignmentExpression	that -> rede = err		8664459	1		=			
ANR	8666262	PtrMemberAccess	that -> rede		8664459	0					
ANR	8666263	Identifier	that		8664459	0					
ANR	8666264	Identifier	rede		8664459	1					
ANR	8666265	Identifier	err		8664459	1					
ANR	8666266	IfStatement	if ( that -> red_sBIT > that -> green_sBIT )		8664459	13					
ANR	8666267	Condition	that -> red_sBIT > that -> green_sBIT	8211:10:260572:260604	8664459	0	True				
ANR	8666268	RelationalExpression	that -> red_sBIT > that -> green_sBIT		8664459	0		>			
ANR	8666269	PtrMemberAccess	that -> red_sBIT		8664459	0					
ANR	8666270	Identifier	that		8664459	0					
ANR	8666271	Identifier	red_sBIT		8664459	1					
ANR	8666272	PtrMemberAccess	that -> green_sBIT		8664459	1					
ANR	8666273	Identifier	that		8664459	0					
ANR	8666274	Identifier	green_sBIT		8664459	1					
ANR	8666275	ExpressionStatement	that -> red_sBIT = that -> green_sBIT	8212:9:260616:260649	8664459	1	True				
ANR	8666276	AssignmentExpression	that -> red_sBIT = that -> green_sBIT		8664459	0		=			
ANR	8666277	PtrMemberAccess	that -> red_sBIT		8664459	0					
ANR	8666278	Identifier	that		8664459	0					
ANR	8666279	Identifier	red_sBIT		8664459	1					
ANR	8666280	PtrMemberAccess	that -> green_sBIT		8664459	1					
ANR	8666281	Identifier	that		8664459	0					
ANR	8666282	Identifier	green_sBIT		8664459	1					
ANR	8666283	IfStatement	if ( that -> red_sBIT > that -> blue_sBIT )		8664459	14					
ANR	8666284	Condition	that -> red_sBIT > that -> blue_sBIT	8213:10:260661:260692	8664459	0	True				
ANR	8666285	RelationalExpression	that -> red_sBIT > that -> blue_sBIT		8664459	0		>			
ANR	8666286	PtrMemberAccess	that -> red_sBIT		8664459	0					
ANR	8666287	Identifier	that		8664459	0					
ANR	8666288	Identifier	red_sBIT		8664459	1					
ANR	8666289	PtrMemberAccess	that -> blue_sBIT		8664459	1					
ANR	8666290	Identifier	that		8664459	0					
ANR	8666291	Identifier	blue_sBIT		8664459	1					
ANR	8666292	ExpressionStatement	that -> red_sBIT = that -> blue_sBIT	8214:9:260704:260736	8664459	1	True				
ANR	8666293	AssignmentExpression	that -> red_sBIT = that -> blue_sBIT		8664459	0		=			
ANR	8666294	PtrMemberAccess	that -> red_sBIT		8664459	0					
ANR	8666295	Identifier	that		8664459	0					
ANR	8666296	Identifier	red_sBIT		8664459	1					
ANR	8666297	PtrMemberAccess	that -> blue_sBIT		8664459	1					
ANR	8666298	Identifier	that		8664459	0					
ANR	8666299	Identifier	blue_sBIT		8664459	1					
ANR	8666300	ExpressionStatement	that -> blue_sBIT = that -> green_sBIT = that -> red_sBIT	8215:6:260744:260795	8664459	15	True				
ANR	8666301	AssignmentExpression	that -> blue_sBIT = that -> green_sBIT = that -> red_sBIT		8664459	0		=			
ANR	8666302	PtrMemberAccess	that -> blue_sBIT		8664459	0					
ANR	8666303	Identifier	that		8664459	0					
ANR	8666304	Identifier	blue_sBIT		8664459	1					
ANR	8666305	AssignmentExpression	that -> green_sBIT = that -> red_sBIT		8664459	1		=			
ANR	8666306	PtrMemberAccess	that -> green_sBIT		8664459	0					
ANR	8666307	Identifier	that		8664459	0					
ANR	8666308	Identifier	green_sBIT		8664459	1					
ANR	8666309	PtrMemberAccess	that -> red_sBIT		8664459	1					
ANR	8666310	Identifier	that		8664459	0					
ANR	8666311	Identifier	red_sBIT		8664459	1					
ANR	8666312	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_RGB )		8664459	16					
ANR	8666313	Condition	that -> colour_type == PNG_COLOR_TYPE_RGB	8218:10:260859:260897	8664459	0	True				
ANR	8666314	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB		8664459	0		==			
ANR	8666315	PtrMemberAccess	that -> colour_type		8664459	0					
ANR	8666316	Identifier	that		8664459	0					
ANR	8666317	Identifier	colour_type		8664459	1					
ANR	8666318	Identifier	PNG_COLOR_TYPE_RGB		8664459	1					
ANR	8666319	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_GRAY	8219:9:260909:260948	8664459	1	True				
ANR	8666320	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_GRAY		8664459	0		=			
ANR	8666321	PtrMemberAccess	that -> colour_type		8664459	0					
ANR	8666322	Identifier	that		8664459	0					
ANR	8666323	Identifier	colour_type		8664459	1					
ANR	8666324	Identifier	PNG_COLOR_TYPE_GRAY		8664459	1					
ANR	8666325	ElseStatement	else		8664459	0					
ANR	8666326	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA )		8664459	0					
ANR	8666327	Condition	that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA	8220:15:260965:261009	8664459	0	True				
ANR	8666328	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA		8664459	0		==			
ANR	8666329	PtrMemberAccess	that -> colour_type		8664459	0					
ANR	8666330	Identifier	that		8664459	0					
ANR	8666331	Identifier	colour_type		8664459	1					
ANR	8666332	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		8664459	1					
ANR	8666333	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_GRAY_ALPHA	8221:9:261021:261066	8664459	1	True				
ANR	8666334	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_GRAY_ALPHA		8664459	0		=			
ANR	8666335	PtrMemberAccess	that -> colour_type		8664459	0					
ANR	8666336	Identifier	that		8664459	0					
ANR	8666337	Identifier	colour_type		8664459	1					
ANR	8666338	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		8664459	1					
ANR	8666339	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8224:3:261077:261123	8664459	1	True				
ANR	8666340	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8664459	0					
ANR	8666341	Callee	this -> next -> mod		8664459	0					
ANR	8666342	PtrMemberAccess	this -> next -> mod		8664459	0					
ANR	8666343	PtrMemberAccess	this -> next		8664459	0					
ANR	8666344	Identifier	this		8664459	0					
ANR	8666345	Identifier	next		8664459	1					
ANR	8666346	Identifier	mod		8664459	1					
ANR	8666347	ArgumentList	this -> next		8664459	1					
ANR	8666348	Argument	this -> next		8664459	0					
ANR	8666349	PtrMemberAccess	this -> next		8664459	0					
ANR	8666350	Identifier	this		8664459	0					
ANR	8666351	Identifier	next		8664459	1					
ANR	8666352	Argument	that		8664459	1					
ANR	8666353	Identifier	that		8664459	0					
ANR	8666354	Argument	pp		8664459	2					
ANR	8666355	Identifier	pp		8664459	0					
ANR	8666356	Argument	display		8664459	3					
ANR	8666357	Identifier	display		8664459	0					
ANR	8666358	ReturnType	static void		8664459	1					
ANR	8666359	Identifier	image_transform_png_set_rgb_to_gray_mod		8664459	2					
ANR	8666360	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8664459	3					
ANR	8666361	Parameter	const image_transform * this	7891:40:247812:247838	8664459	0	True				
ANR	8666362	ParameterType	const image_transform *		8664459	0					
ANR	8666363	Identifier	this		8664459	1					
ANR	8666364	Parameter	image_pixel * that	7892:4:247845:247861	8664459	1	True				
ANR	8666365	ParameterType	image_pixel *		8664459	0					
ANR	8666366	Identifier	that		8664459	1					
ANR	8666367	Parameter	png_const_structp pp	7892:23:247864:247883	8664459	2	True				
ANR	8666368	ParameterType	png_const_structp		8664459	0					
ANR	8666369	Identifier	pp		8664459	1					
ANR	8666370	Parameter	const transform_display * display	7893:4:247890:247921	8664459	3	True				
ANR	8666371	ParameterType	const transform_display *		8664459	0					
ANR	8666372	Identifier	display		8664459	1					
ANR	8666373	CFGEntryNode	ENTRY		8664459		True				
ANR	8666374	CFGExitNode	EXIT		8664459		True				
ANR	8666375	Symbol	pp		8664459						
ANR	8666376	Symbol	DD		8664459						
ANR	8666377	Symbol	data		8664459						
ANR	8666378	Symbol	data . gamma		8664459						
ANR	8666379	Symbol	that -> red_sBIT		8664459						
ANR	8666380	Symbol	that		8664459						
ANR	8666381	Symbol	graylo		8664459						
ANR	8666382	Symbol	DU		8664459						
ANR	8666383	Symbol	grayhi		8664459						
ANR	8666384	Symbol	in_qe		8664459						
ANR	8666385	Symbol	safecat		8664459						
ANR	8666386	Symbol	buffer		8664459						
ANR	8666387	Symbol	abse		8664459						
ANR	8666388	Symbol	* pm		8664459						
ANR	8666389	Symbol	sample_depth		8664459						
ANR	8666390	Symbol	this -> next		8664459						
ANR	8666391	Symbol	this		8664459						
ANR	8666392	Symbol	ghi		8664459						
ANR	8666393	Symbol	that -> rede		8664459						
ANR	8666394	Symbol	g1		8664459						
ANR	8666395	Symbol	that -> redf		8664459						
ANR	8666396	Symbol	glo		8664459						
ANR	8666397	Symbol	that -> greenf		8664459						
ANR	8666398	Symbol	that -> greene		8664459						
ANR	8666399	Symbol	that -> colour_type		8664459						
ANR	8666400	Symbol	re		8664459						
ANR	8666401	Symbol	that -> blue_sBIT		8664459						
ANR	8666402	Symbol	out_qe		8664459						
ANR	8666403	Symbol	pm -> limit		8664459						
ANR	8666404	Symbol	do_round		8664459						
ANR	8666405	Symbol	isgray		8664459						
ANR	8666406	Symbol	data . green_coefficient		8664459						
ANR	8666407	Symbol	pm -> assume_16_bit_calculations		8664459						
ANR	8666408	Symbol	be		8664459						
ANR	8666409	Symbol	PNG_COLOR_TYPE_RGB		8664459						
ANR	8666410	Symbol	PNG_COLOR_TYPE_GRAY		8664459						
ANR	8666411	Symbol	* display		8664459						
ANR	8666412	Symbol	DBL_EPSILON		8664459						
ANR	8666413	Symbol	gamma_depth		8664459						
ANR	8666414	Symbol	gray		8664459						
ANR	8666415	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		8664459						
ANR	8666416	Symbol	pos		8664459						
ANR	8666417	Symbol	pow		8664459						
ANR	8666418	Symbol	power		8664459						
ANR	8666419	Symbol	ge		8664459						
ANR	8666420	Symbol	b		8664459						
ANR	8666421	Symbol	bhi		8664459						
ANR	8666422	Symbol	ce		8664459						
ANR	8666423	Symbol	fabs		8664459						
ANR	8666424	Symbol	err		8664459						
ANR	8666425	Symbol	that -> bluee		8664459						
ANR	8666426	Symbol	data . blue_coefficient		8664459						
ANR	8666427	Symbol	blo		8664459						
ANR	8666428	Symbol	PNG_COLOR_TYPE_GRAY_ALPHA		8664459						
ANR	8666429	Symbol	display		8664459						
ANR	8666430	Symbol	g		8664459						
ANR	8666431	Symbol	that -> bluef		8664459						
ANR	8666432	Symbol	PNG_COLOR_MASK_COLOR		8664459						
ANR	8666433	Symbol	display -> max_gamma_8		8664459						
ANR	8666434	Symbol	data . red_coefficient		8664459						
ANR	8666435	Symbol	that -> green_sBIT		8664459						
ANR	8666436	Symbol	calc_depth		8664459						
ANR	8666437	Symbol	* this		8664459						
ANR	8666438	Symbol	r		8664459						
ANR	8666439	Symbol	rhi		8664459						
ANR	8666440	Symbol	display -> pm		8664459						
ANR	8666441	Symbol	safecatd		8664459						
ANR	8666442	Symbol	rlo		8664459						
ANR	8666443	Symbol	* that		8664459						
ANR	8666444	Symbol	that -> sample_depth		8664459						
ANR	8666445	Symbol	pm		8664459						
ANR	8666446	Symbol	PNG_COLOR_TYPE_PALETTE		8664459						
ANR	8666447	Function	image_transform_png_set_rgb_to_gray_add	8227:0:261128:261396							
ANR	8666448	FunctionDef	"image_transform_png_set_rgb_to_gray_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8666447	0					
ANR	8666449	CompoundStatement		8230:0:261278:261396	8666447	0					
ANR	8666450	Statement	UNUSED	8231:3:261283:261288	8666447	0	True				
ANR	8666451	ExpressionStatement	( bit_depth ) this -> next = * that	8231:9:261289:261323	8666447	1	True				
ANR	8666452	AssignmentExpression	( bit_depth ) this -> next = * that		8666447	0		=			
ANR	8666453	CastExpression	( bit_depth ) this -> next		8666447	0					
ANR	8666454	CastTarget	bit_depth		8666447	0					
ANR	8666455	PtrMemberAccess	this -> next		8666447	1					
ANR	8666456	Identifier	this		8666447	0					
ANR	8666457	Identifier	next		8666447	1					
ANR	8666458	UnaryOperationExpression	* that		8666447	1					
ANR	8666459	UnaryOperator	*		8666447	0					
ANR	8666460	Identifier	that		8666447	1					
ANR	8666461	ExpressionStatement	* that = this	8234:3:261328:261340	8666447	2	True				
ANR	8666462	AssignmentExpression	* that = this		8666447	0		=			
ANR	8666463	UnaryOperationExpression	* that		8666447	0					
ANR	8666464	UnaryOperator	*		8666447	0					
ANR	8666465	Identifier	that		8666447	1					
ANR	8666466	Identifier	this		8666447	1					
ANR	8666467	ReturnStatement	return ( colour_type & PNG_COLOR_MASK_COLOR ) != 0 ;	8236:3:261346:261394	8666447	3	True				
ANR	8666468	EqualityExpression	( colour_type & PNG_COLOR_MASK_COLOR ) != 0		8666447	0		!=			
ANR	8666469	BitAndExpression	colour_type & PNG_COLOR_MASK_COLOR		8666447	0		&			
ANR	8666470	Identifier	colour_type		8666447	0					
ANR	8666471	Identifier	PNG_COLOR_MASK_COLOR		8666447	1					
ANR	8666472	PrimaryExpression	0		8666447	1					
ANR	8666473	ReturnType	static int		8666447	1					
ANR	8666474	Identifier	image_transform_png_set_rgb_to_gray_add		8666447	2					
ANR	8666475	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8666447	3					
ANR	8666476	Parameter	image_transform * this	8228:40:261179:261199	8666447	0	True				
ANR	8666477	ParameterType	image_transform *		8666447	0					
ANR	8666478	Identifier	this		8666447	1					
ANR	8666479	Parameter	const image_transform * * that	8229:4:261206:261233	8666447	1	True				
ANR	8666480	ParameterType	const image_transform * *		8666447	0					
ANR	8666481	Identifier	that		8666447	1					
ANR	8666482	Parameter	png_byte colour_type	8229:34:261236:261255	8666447	2	True				
ANR	8666483	ParameterType	png_byte		8666447	0					
ANR	8666484	Identifier	colour_type		8666447	1					
ANR	8666485	Parameter	png_byte bit_depth	8229:56:261258:261275	8666447	3	True				
ANR	8666486	ParameterType	png_byte		8666447	0					
ANR	8666487	Identifier	bit_depth		8666447	1					
ANR	8666488	CFGEntryNode	ENTRY		8666447		True				
ANR	8666489	CFGExitNode	EXIT		8666447		True				
ANR	8666490	Symbol	colour_type		8666447						
ANR	8666491	Symbol	* this		8666447						
ANR	8666492	Symbol	that		8666447						
ANR	8666493	Symbol	this -> next		8666447						
ANR	8666494	Symbol	this		8666447						
ANR	8666495	Symbol	* that		8666447						
ANR	8666496	Symbol	PNG_COLOR_MASK_COLOR		8666447						
ANR	8666497	Symbol	bit_depth		8666447						
ANR	8666498	DeclStmt									
ANR	8666499	Decl							undef data	undef data ( rgb_to_gray )	IT
ANR	8666500	DeclStmt									
ANR	8666501	Decl							image_pixel	image_pixel	data
ANR	8666502	Function	image_transform_png_set_background_set	8259:0:262057:263857							
ANR	8666503	FunctionDef	"image_transform_png_set_background_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8666502	0					
ANR	8666504	CompoundStatement		8262:0:262196:263857	8666502	0					
ANR	8666505	IdentifierDeclStatement	"png_byte colour_type , bit_depth ;"	8263:3:262201:262232	8666502	0	True				
ANR	8666506	IdentifierDecl	colour_type		8666502	0					
ANR	8666507	IdentifierDeclType	png_byte		8666502	0					
ANR	8666508	Identifier	colour_type		8666502	1					
ANR	8666509	IdentifierDecl	bit_depth		8666502	1					
ANR	8666510	IdentifierDeclType	png_byte		8666502	0					
ANR	8666511	Identifier	bit_depth		8666502	1					
ANR	8666512	IdentifierDeclStatement	png_byte random_bytes [ 8 ] ;	8264:3:262237:262261	8666502	1	True				
ANR	8666513	IdentifierDecl	random_bytes [ 8 ]		8666502	0					
ANR	8666514	IdentifierDeclType	png_byte [ 8 ]		8666502	0					
ANR	8666515	Identifier	random_bytes		8666502	1					
ANR	8666516	PrimaryExpression	8		8666502	2					
ANR	8666517	IdentifierDeclStatement	int expand ;	8265:3:262310:262320	8666502	2	True				
ANR	8666518	IdentifierDecl	expand		8666502	0					
ANR	8666519	IdentifierDeclType	int		8666502	0					
ANR	8666520	Identifier	expand		8666502	1					
ANR	8666521	IdentifierDeclStatement	png_color_16 back ;	8266:3:262325:262342	8666502	3	True				
ANR	8666522	IdentifierDecl	back		8666502	0					
ANR	8666523	IdentifierDeclType	png_color_16		8666502	0					
ANR	8666524	Identifier	back		8666502	1					
ANR	8666525	ExpressionStatement	R8 ( random_bytes )	8273:3:262621:262637	8666502	4	True				
ANR	8666526	CallExpression	R8 ( random_bytes )		8666502	0					
ANR	8666527	Callee	R8		8666502	0					
ANR	8666528	Identifier	R8		8666502	0					
ANR	8666529	ArgumentList	random_bytes		8666502	1					
ANR	8666530	Argument	random_bytes		8666502	0					
ANR	8666531	Identifier	random_bytes		8666502	0					
ANR	8666532	ExpressionStatement	colour_type = that -> this . colour_type	8278:3:262777:262813	8666502	5	True				
ANR	8666533	AssignmentExpression	colour_type = that -> this . colour_type		8666502	0		=			
ANR	8666534	Identifier	colour_type		8666502	0					
ANR	8666535	MemberAccess	that -> this . colour_type		8666502	1					
ANR	8666536	PtrMemberAccess	that -> this		8666502	0					
ANR	8666537	Identifier	that		8666502	0					
ANR	8666538	Identifier	this		8666502	1					
ANR	8666539	Identifier	colour_type		8666502	1					
ANR	8666540	IfStatement	if ( colour_type == 3 )		8666502	6					
ANR	8666541	Condition	colour_type == 3	8279:7:262822:262837	8666502	0	True				
ANR	8666542	EqualityExpression	colour_type == 3		8666502	0		==			
ANR	8666543	Identifier	colour_type		8666502	0					
ANR	8666544	PrimaryExpression	3		8666502	1					
ANR	8666545	CompoundStatement		19:3:646:646	8666502	1					
ANR	8666546	ExpressionStatement	colour_type = PNG_COLOR_TYPE_RGB	8281:6:262851:262883	8666502	0	True				
ANR	8666547	AssignmentExpression	colour_type = PNG_COLOR_TYPE_RGB		8666502	0		=			
ANR	8666548	Identifier	colour_type		8666502	0					
ANR	8666549	Identifier	PNG_COLOR_TYPE_RGB		8666502	1					
ANR	8666550	ExpressionStatement	bit_depth = 8	8282:6:262891:262904	8666502	1	True				
ANR	8666551	AssignmentExpression	bit_depth = 8		8666502	0		=			
ANR	8666552	Identifier	bit_depth		8666502	0					
ANR	8666553	PrimaryExpression	8		8666502	1					
ANR	8666554	ExpressionStatement	expand = 0	8283:6:262912:262922	8666502	2	True				
ANR	8666555	AssignmentExpression	expand = 0		8666502	0		=			
ANR	8666556	Identifier	expand		8666502	0					
ANR	8666557	PrimaryExpression	0		8666502	1					
ANR	8666558	ElseStatement	else		8666502	0					
ANR	8666559	CompoundStatement		26:3:786:786	8666502	0					
ANR	8666560	IfStatement	if ( that -> this . has_tRNS )		8666502	0					
ANR	8666561	Condition	that -> this . has_tRNS	8288:10:262995:263013	8666502	0	True				
ANR	8666562	MemberAccess	that -> this . has_tRNS		8666502	0					
ANR	8666563	PtrMemberAccess	that -> this		8666502	0					
ANR	8666564	Identifier	that		8666502	0					
ANR	8666565	Identifier	this		8666502	1					
ANR	8666566	Identifier	has_tRNS		8666502	1					
ANR	8666567	ExpressionStatement	that -> this . is_transparent = 1	8289:9:263025:263054	8666502	1	True				
ANR	8666568	AssignmentExpression	that -> this . is_transparent = 1		8666502	0		=			
ANR	8666569	MemberAccess	that -> this . is_transparent		8666502	0					
ANR	8666570	PtrMemberAccess	that -> this		8666502	0					
ANR	8666571	Identifier	that		8666502	0					
ANR	8666572	Identifier	this		8666502	1					
ANR	8666573	Identifier	is_transparent		8666502	1					
ANR	8666574	PrimaryExpression	1		8666502	1					
ANR	8666575	ExpressionStatement	bit_depth = that -> this . bit_depth	8291:6:263063:263095	8666502	1	True				
ANR	8666576	AssignmentExpression	bit_depth = that -> this . bit_depth		8666502	0		=			
ANR	8666577	Identifier	bit_depth		8666502	0					
ANR	8666578	MemberAccess	that -> this . bit_depth		8666502	1					
ANR	8666579	PtrMemberAccess	that -> this		8666502	0					
ANR	8666580	Identifier	that		8666502	0					
ANR	8666581	Identifier	this		8666502	1					
ANR	8666582	Identifier	bit_depth		8666502	1					
ANR	8666583	ExpressionStatement	expand = 1	8292:6:263103:263113	8666502	2	True				
ANR	8666584	AssignmentExpression	expand = 1		8666502	0		=			
ANR	8666585	Identifier	expand		8666502	0					
ANR	8666586	PrimaryExpression	1		8666502	1					
ANR	8666587	ExpressionStatement	"image_pixel_init ( & data , random_bytes , colour_type , bit_depth , 0 , 0 , NULL )"	8295:3:263124:263237	8666502	7	True				
ANR	8666588	CallExpression	"image_pixel_init ( & data , random_bytes , colour_type , bit_depth , 0 , 0 , NULL )"		8666502	0					
ANR	8666589	Callee	image_pixel_init		8666502	0					
ANR	8666590	Identifier	image_pixel_init		8666502	0					
ANR	8666591	ArgumentList	& data		8666502	1					
ANR	8666592	Argument	& data		8666502	0					
ANR	8666593	UnaryOperationExpression	& data		8666502	0					
ANR	8666594	UnaryOperator	&		8666502	0					
ANR	8666595	Identifier	data		8666502	1					
ANR	8666596	Argument	random_bytes		8666502	1					
ANR	8666597	Identifier	random_bytes		8666502	0					
ANR	8666598	Argument	colour_type		8666502	2					
ANR	8666599	Identifier	colour_type		8666502	0					
ANR	8666600	Argument	bit_depth		8666502	3					
ANR	8666601	Identifier	bit_depth		8666502	0					
ANR	8666602	Argument	0		8666502	4					
ANR	8666603	PrimaryExpression	0		8666502	0					
ANR	8666604	Argument	0		8666502	5					
ANR	8666605	PrimaryExpression	0		8666502	0					
ANR	8666606	Argument	NULL		8666502	6					
ANR	8666607	Identifier	NULL		8666502	0					
ANR	8666608	ExpressionStatement	R8 ( back )	8301:3:263370:263378	8666502	8	True				
ANR	8666609	CallExpression	R8 ( back )		8666502	0					
ANR	8666610	Callee	R8		8666502	0					
ANR	8666611	Identifier	R8		8666502	0					
ANR	8666612	ArgumentList	back		8666502	1					
ANR	8666613	Argument	back		8666502	0					
ANR	8666614	Identifier	back		8666502	0					
ANR	8666615	IfStatement	if ( colour_type & PNG_COLOR_MASK_COLOR )		8666502	9					
ANR	8666616	Condition	colour_type & PNG_COLOR_MASK_COLOR	8303:7:263388:263421	8666502	0	True				
ANR	8666617	BitAndExpression	colour_type & PNG_COLOR_MASK_COLOR		8666502	0		&			
ANR	8666618	Identifier	colour_type		8666502	0					
ANR	8666619	Identifier	PNG_COLOR_MASK_COLOR		8666502	1					
ANR	8666620	CompoundStatement		43:3:1230:1230	8666502	1					
ANR	8666621	ExpressionStatement	back . red = ( png_uint_16 ) data . red	8305:6:263435:263467	8666502	0	True				
ANR	8666622	AssignmentExpression	back . red = ( png_uint_16 ) data . red		8666502	0		=			
ANR	8666623	MemberAccess	back . red		8666502	0					
ANR	8666624	Identifier	back		8666502	0					
ANR	8666625	Identifier	red		8666502	1					
ANR	8666626	CastExpression	( png_uint_16 ) data . red		8666502	1					
ANR	8666627	CastTarget	png_uint_16		8666502	0					
ANR	8666628	MemberAccess	data . red		8666502	1					
ANR	8666629	Identifier	data		8666502	0					
ANR	8666630	Identifier	red		8666502	1					
ANR	8666631	ExpressionStatement	back . green = ( png_uint_16 ) data . green	8306:6:263475:263511	8666502	1	True				
ANR	8666632	AssignmentExpression	back . green = ( png_uint_16 ) data . green		8666502	0		=			
ANR	8666633	MemberAccess	back . green		8666502	0					
ANR	8666634	Identifier	back		8666502	0					
ANR	8666635	Identifier	green		8666502	1					
ANR	8666636	CastExpression	( png_uint_16 ) data . green		8666502	1					
ANR	8666637	CastTarget	png_uint_16		8666502	0					
ANR	8666638	MemberAccess	data . green		8666502	1					
ANR	8666639	Identifier	data		8666502	0					
ANR	8666640	Identifier	green		8666502	1					
ANR	8666641	ExpressionStatement	back . blue = ( png_uint_16 ) data . blue	8307:6:263519:263553	8666502	2	True				
ANR	8666642	AssignmentExpression	back . blue = ( png_uint_16 ) data . blue		8666502	0		=			
ANR	8666643	MemberAccess	back . blue		8666502	0					
ANR	8666644	Identifier	back		8666502	0					
ANR	8666645	Identifier	blue		8666502	1					
ANR	8666646	CastExpression	( png_uint_16 ) data . blue		8666502	1					
ANR	8666647	CastTarget	png_uint_16		8666502	0					
ANR	8666648	MemberAccess	data . blue		8666502	1					
ANR	8666649	Identifier	data		8666502	0					
ANR	8666650	Identifier	blue		8666502	1					
ANR	8666651	ElseStatement	else		8666502	0					
ANR	8666652	ExpressionStatement	back . gray = ( png_uint_16 ) data . red	8311:6:263575:263608	8666502	0	True				
ANR	8666653	AssignmentExpression	back . gray = ( png_uint_16 ) data . red		8666502	0		=			
ANR	8666654	MemberAccess	back . gray		8666502	0					
ANR	8666655	Identifier	back		8666502	0					
ANR	8666656	Identifier	gray		8666502	1					
ANR	8666657	CastExpression	( png_uint_16 ) data . red		8666502	1					
ANR	8666658	CastTarget	png_uint_16		8666502	0					
ANR	8666659	MemberAccess	data . red		8666502	1					
ANR	8666660	Identifier	data		8666502	0					
ANR	8666661	Identifier	red		8666502	1					
ANR	8666662	ExpressionStatement	"png_set_background ( pp , & back , PNG_BACKGROUND_GAMMA_FILE , expand , 0 )"	8314:3:263650:263717	8666502	10	True				
ANR	8666663	CallExpression	"png_set_background ( pp , & back , PNG_BACKGROUND_GAMMA_FILE , expand , 0 )"		8666502	0					
ANR	8666664	Callee	png_set_background		8666502	0					
ANR	8666665	Identifier	png_set_background		8666502	0					
ANR	8666666	ArgumentList	pp		8666502	1					
ANR	8666667	Argument	pp		8666502	0					
ANR	8666668	Identifier	pp		8666502	0					
ANR	8666669	Argument	& back		8666502	1					
ANR	8666670	UnaryOperationExpression	& back		8666502	0					
ANR	8666671	UnaryOperator	&		8666502	0					
ANR	8666672	Identifier	back		8666502	1					
ANR	8666673	Argument	PNG_BACKGROUND_GAMMA_FILE		8666502	2					
ANR	8666674	Identifier	PNG_BACKGROUND_GAMMA_FILE		8666502	0					
ANR	8666675	Argument	expand		8666502	3					
ANR	8666676	Identifier	expand		8666502	0					
ANR	8666677	Argument	0		8666502	4					
ANR	8666678	PrimaryExpression	0		8666502	0					
ANR	8666679	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8319:3:263814:263855	8666502	11	True				
ANR	8666680	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8666502	0					
ANR	8666681	Callee	this -> next -> set		8666502	0					
ANR	8666682	PtrMemberAccess	this -> next -> set		8666502	0					
ANR	8666683	PtrMemberAccess	this -> next		8666502	0					
ANR	8666684	Identifier	this		8666502	0					
ANR	8666685	Identifier	next		8666502	1					
ANR	8666686	Identifier	set		8666502	1					
ANR	8666687	ArgumentList	this -> next		8666502	1					
ANR	8666688	Argument	this -> next		8666502	0					
ANR	8666689	PtrMemberAccess	this -> next		8666502	0					
ANR	8666690	Identifier	this		8666502	0					
ANR	8666691	Identifier	next		8666502	1					
ANR	8666692	Argument	that		8666502	1					
ANR	8666693	Identifier	that		8666502	0					
ANR	8666694	Argument	pp		8666502	2					
ANR	8666695	Identifier	pp		8666502	0					
ANR	8666696	Argument	pi		8666502	3					
ANR	8666697	Identifier	pi		8666502	0					
ANR	8666698	ReturnType	static void		8666502	1					
ANR	8666699	Identifier	image_transform_png_set_background_set		8666502	2					
ANR	8666700	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8666502	3					
ANR	8666701	Parameter	const image_transform * this	8260:39:262108:262134	8666502	0	True				
ANR	8666702	ParameterType	const image_transform *		8666502	0					
ANR	8666703	Identifier	this		8666502	1					
ANR	8666704	Parameter	transform_display * that	8261:4:262141:262163	8666502	1	True				
ANR	8666705	ParameterType	transform_display *		8666502	0					
ANR	8666706	Identifier	that		8666502	1					
ANR	8666707	Parameter	png_structp pp	8261:29:262166:262179	8666502	2	True				
ANR	8666708	ParameterType	png_structp		8666502	0					
ANR	8666709	Identifier	pp		8666502	1					
ANR	8666710	Parameter	png_infop pi	8261:45:262182:262193	8666502	3	True				
ANR	8666711	ParameterType	png_infop		8666502	0					
ANR	8666712	Identifier	pi		8666502	1					
ANR	8666713	CFGEntryNode	ENTRY		8666502		True				
ANR	8666714	CFGExitNode	EXIT		8666502		True				
ANR	8666715	Symbol	pp		8666502						
ANR	8666716	Symbol	back . gray		8666502						
ANR	8666717	Symbol	PNG_COLOR_TYPE_RGB		8666502						
ANR	8666718	Symbol	data		8666502						
ANR	8666719	Symbol	back		8666502						
ANR	8666720	Symbol	back . blue		8666502						
ANR	8666721	Symbol	that		8666502						
ANR	8666722	Symbol	that -> this		8666502						
ANR	8666723	Symbol	that -> this . colour_type		8666502						
ANR	8666724	Symbol	that -> this . is_transparent		8666502						
ANR	8666725	Symbol	PNG_BACKGROUND_GAMMA_FILE		8666502						
ANR	8666726	Symbol	data . green		8666502						
ANR	8666727	Symbol	random_bytes		8666502						
ANR	8666728	Symbol	NULL		8666502						
ANR	8666729	Symbol	this -> next		8666502						
ANR	8666730	Symbol	this		8666502						
ANR	8666731	Symbol	back . red		8666502						
ANR	8666732	Symbol	& back		8666502						
ANR	8666733	Symbol	PNG_COLOR_MASK_COLOR		8666502						
ANR	8666734	Symbol	& data		8666502						
ANR	8666735	Symbol	colour_type		8666502						
ANR	8666736	Symbol	* this		8666502						
ANR	8666737	Symbol	expand		8666502						
ANR	8666738	Symbol	that -> this . has_tRNS		8666502						
ANR	8666739	Symbol	back . green		8666502						
ANR	8666740	Symbol	data . blue		8666502						
ANR	8666741	Symbol	pi		8666502						
ANR	8666742	Symbol	* that		8666502						
ANR	8666743	Symbol	bit_depth		8666502						
ANR	8666744	Symbol	that -> this . bit_depth		8666502						
ANR	8666745	Symbol	data . red		8666502						
ANR	8666746	Function	image_transform_png_set_background_mod	8322:0:263860:265780							
ANR	8666747	FunctionDef	"image_transform_png_set_background_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8666746	0					
ANR	8666748	CompoundStatement		8326:0:264023:265780	8666746	0					
ANR	8666749	IfStatement	if ( that -> have_tRNS && that -> colour_type != PNG_COLOR_TYPE_PALETTE )		8666746	0					
ANR	8666750	Condition	that -> have_tRNS && that -> colour_type != PNG_COLOR_TYPE_PALETTE	8328:7:264063:264124	8666746	0	True				
ANR	8666751	AndExpression	that -> have_tRNS && that -> colour_type != PNG_COLOR_TYPE_PALETTE		8666746	0		&&			
ANR	8666752	PtrMemberAccess	that -> have_tRNS		8666746	0					
ANR	8666753	Identifier	that		8666746	0					
ANR	8666754	Identifier	have_tRNS		8666746	1					
ANR	8666755	EqualityExpression	that -> colour_type != PNG_COLOR_TYPE_PALETTE		8666746	1		!=			
ANR	8666756	PtrMemberAccess	that -> colour_type		8666746	0					
ANR	8666757	Identifier	that		8666746	0					
ANR	8666758	Identifier	colour_type		8666746	1					
ANR	8666759	Identifier	PNG_COLOR_TYPE_PALETTE		8666746	1					
ANR	8666760	ExpressionStatement	"image_pixel_add_alpha ( that , & display -> this , 1 )"	8329:6:264133:264197	8666746	1	True				
ANR	8666761	CallExpression	"image_pixel_add_alpha ( that , & display -> this , 1 )"		8666746	0					
ANR	8666762	Callee	image_pixel_add_alpha		8666746	0					
ANR	8666763	Identifier	image_pixel_add_alpha		8666746	0					
ANR	8666764	ArgumentList	that		8666746	1					
ANR	8666765	Argument	that		8666746	0					
ANR	8666766	Identifier	that		8666746	0					
ANR	8666767	Argument	& display -> this		8666746	1					
ANR	8666768	UnaryOperationExpression	& display -> this		8666746	0					
ANR	8666769	UnaryOperator	&		8666746	0					
ANR	8666770	PtrMemberAccess	display -> this		8666746	1					
ANR	8666771	Identifier	display		8666746	0					
ANR	8666772	Identifier	this		8666746	1					
ANR	8666773	Argument	1		8666746	2					
ANR	8666774	PrimaryExpression	1		8666746	0					
ANR	8666775	IfStatement	if ( that -> alphaf < 1 )		8666746	1					
ANR	8666776	Condition	that -> alphaf < 1	8332:7:264274:264289	8666746	0	True				
ANR	8666777	RelationalExpression	that -> alphaf < 1		8666746	0		<			
ANR	8666778	PtrMemberAccess	that -> alphaf		8666746	0					
ANR	8666779	Identifier	that		8666746	0					
ANR	8666780	Identifier	alphaf		8666746	1					
ANR	8666781	PrimaryExpression	1		8666746	1					
ANR	8666782	CompoundStatement		8:3:271:271	8666746	1					
ANR	8666783	IfStatement	if ( that -> alphaf <= 0 )		8666746	0					
ANR	8666784	Condition	that -> alphaf <= 0	8335:10:264386:264402	8666746	0	True				
ANR	8666785	RelationalExpression	that -> alphaf <= 0		8666746	0		<=			
ANR	8666786	PtrMemberAccess	that -> alphaf		8666746	0					
ANR	8666787	Identifier	that		8666746	0					
ANR	8666788	Identifier	alphaf		8666746	1					
ANR	8666789	PrimaryExpression	0		8666746	1					
ANR	8666790	CompoundStatement		11:6:387:387	8666746	1					
ANR	8666791	ExpressionStatement	that -> redf = data . redf	8337:9:264422:264444	8666746	0	True				
ANR	8666792	AssignmentExpression	that -> redf = data . redf		8666746	0		=			
ANR	8666793	PtrMemberAccess	that -> redf		8666746	0					
ANR	8666794	Identifier	that		8666746	0					
ANR	8666795	Identifier	redf		8666746	1					
ANR	8666796	MemberAccess	data . redf		8666746	1					
ANR	8666797	Identifier	data		8666746	0					
ANR	8666798	Identifier	redf		8666746	1					
ANR	8666799	ExpressionStatement	that -> greenf = data . greenf	8338:9:264455:264481	8666746	1	True				
ANR	8666800	AssignmentExpression	that -> greenf = data . greenf		8666746	0		=			
ANR	8666801	PtrMemberAccess	that -> greenf		8666746	0					
ANR	8666802	Identifier	that		8666746	0					
ANR	8666803	Identifier	greenf		8666746	1					
ANR	8666804	MemberAccess	data . greenf		8666746	1					
ANR	8666805	Identifier	data		8666746	0					
ANR	8666806	Identifier	greenf		8666746	1					
ANR	8666807	ExpressionStatement	that -> bluef = data . bluef	8339:9:264492:264516	8666746	2	True				
ANR	8666808	AssignmentExpression	that -> bluef = data . bluef		8666746	0		=			
ANR	8666809	PtrMemberAccess	that -> bluef		8666746	0					
ANR	8666810	Identifier	that		8666746	0					
ANR	8666811	Identifier	bluef		8666746	1					
ANR	8666812	MemberAccess	data . bluef		8666746	1					
ANR	8666813	Identifier	data		8666746	0					
ANR	8666814	Identifier	bluef		8666746	1					
ANR	8666815	ExpressionStatement	that -> rede = data . rede	8341:9:264528:264550	8666746	3	True				
ANR	8666816	AssignmentExpression	that -> rede = data . rede		8666746	0		=			
ANR	8666817	PtrMemberAccess	that -> rede		8666746	0					
ANR	8666818	Identifier	that		8666746	0					
ANR	8666819	Identifier	rede		8666746	1					
ANR	8666820	MemberAccess	data . rede		8666746	1					
ANR	8666821	Identifier	data		8666746	0					
ANR	8666822	Identifier	rede		8666746	1					
ANR	8666823	ExpressionStatement	that -> greene = data . greene	8342:9:264561:264587	8666746	4	True				
ANR	8666824	AssignmentExpression	that -> greene = data . greene		8666746	0		=			
ANR	8666825	PtrMemberAccess	that -> greene		8666746	0					
ANR	8666826	Identifier	that		8666746	0					
ANR	8666827	Identifier	greene		8666746	1					
ANR	8666828	MemberAccess	data . greene		8666746	1					
ANR	8666829	Identifier	data		8666746	0					
ANR	8666830	Identifier	greene		8666746	1					
ANR	8666831	ExpressionStatement	that -> bluee = data . bluee	8343:9:264598:264622	8666746	5	True				
ANR	8666832	AssignmentExpression	that -> bluee = data . bluee		8666746	0		=			
ANR	8666833	PtrMemberAccess	that -> bluee		8666746	0					
ANR	8666834	Identifier	that		8666746	0					
ANR	8666835	Identifier	bluee		8666746	1					
ANR	8666836	MemberAccess	data . bluee		8666746	1					
ANR	8666837	Identifier	data		8666746	0					
ANR	8666838	Identifier	bluee		8666746	1					
ANR	8666839	ExpressionStatement	that -> red_sBIT = data . red_sBIT	8345:9:264634:264663	8666746	6	True				
ANR	8666840	AssignmentExpression	that -> red_sBIT = data . red_sBIT		8666746	0		=			
ANR	8666841	PtrMemberAccess	that -> red_sBIT		8666746	0					
ANR	8666842	Identifier	that		8666746	0					
ANR	8666843	Identifier	red_sBIT		8666746	1					
ANR	8666844	MemberAccess	data . red_sBIT		8666746	1					
ANR	8666845	Identifier	data		8666746	0					
ANR	8666846	Identifier	red_sBIT		8666746	1					
ANR	8666847	ExpressionStatement	that -> green_sBIT = data . green_sBIT	8346:9:264674:264707	8666746	7	True				
ANR	8666848	AssignmentExpression	that -> green_sBIT = data . green_sBIT		8666746	0		=			
ANR	8666849	PtrMemberAccess	that -> green_sBIT		8666746	0					
ANR	8666850	Identifier	that		8666746	0					
ANR	8666851	Identifier	green_sBIT		8666746	1					
ANR	8666852	MemberAccess	data . green_sBIT		8666746	1					
ANR	8666853	Identifier	data		8666746	0					
ANR	8666854	Identifier	green_sBIT		8666746	1					
ANR	8666855	ExpressionStatement	that -> blue_sBIT = data . blue_sBIT	8347:9:264718:264749	8666746	8	True				
ANR	8666856	AssignmentExpression	that -> blue_sBIT = data . blue_sBIT		8666746	0		=			
ANR	8666857	PtrMemberAccess	that -> blue_sBIT		8666746	0					
ANR	8666858	Identifier	that		8666746	0					
ANR	8666859	Identifier	blue_sBIT		8666746	1					
ANR	8666860	MemberAccess	data . blue_sBIT		8666746	1					
ANR	8666861	Identifier	data		8666746	0					
ANR	8666862	Identifier	blue_sBIT		8666746	1					
ANR	8666863	ElseStatement	else		8666746	0					
ANR	8666864	CompoundStatement		27:9:784:813	8666746	0					
ANR	8666865	IdentifierDeclStatement	double alf = 1 - that -> alphaf ;	8352:9:264808:264837	8666746	0	True				
ANR	8666866	IdentifierDecl	alf = 1 - that -> alphaf		8666746	0					
ANR	8666867	IdentifierDeclType	double		8666746	0					
ANR	8666868	Identifier	alf		8666746	1					
ANR	8666869	AssignmentExpression	alf = 1 - that -> alphaf		8666746	2		=			
ANR	8666870	Identifier	alf		8666746	0					
ANR	8666871	AdditiveExpression	1 - that -> alphaf		8666746	1		-			
ANR	8666872	PrimaryExpression	1		8666746	0					
ANR	8666873	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666874	Identifier	that		8666746	0					
ANR	8666875	Identifier	alphaf		8666746	1					
ANR	8666876	ExpressionStatement	that -> redf = that -> redf * that -> alphaf + data . redf * alf	8354:9:264849:264905	8666746	1	True				
ANR	8666877	AssignmentExpression	that -> redf = that -> redf * that -> alphaf + data . redf * alf		8666746	0		=			
ANR	8666878	PtrMemberAccess	that -> redf		8666746	0					
ANR	8666879	Identifier	that		8666746	0					
ANR	8666880	Identifier	redf		8666746	1					
ANR	8666881	AdditiveExpression	that -> redf * that -> alphaf + data . redf * alf		8666746	1		+			
ANR	8666882	MultiplicativeExpression	that -> redf * that -> alphaf		8666746	0		*			
ANR	8666883	PtrMemberAccess	that -> redf		8666746	0					
ANR	8666884	Identifier	that		8666746	0					
ANR	8666885	Identifier	redf		8666746	1					
ANR	8666886	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666887	Identifier	that		8666746	0					
ANR	8666888	Identifier	alphaf		8666746	1					
ANR	8666889	MultiplicativeExpression	data . redf * alf		8666746	1		*			
ANR	8666890	MemberAccess	data . redf		8666746	0					
ANR	8666891	Identifier	data		8666746	0					
ANR	8666892	Identifier	redf		8666746	1					
ANR	8666893	Identifier	alf		8666746	1					
ANR	8666894	ExpressionStatement	that -> rede = that -> rede * that -> alphaf + data . rede * alf + DBL_EPSILON	8355:9:264916:264998	8666746	2	True				
ANR	8666895	AssignmentExpression	that -> rede = that -> rede * that -> alphaf + data . rede * alf + DBL_EPSILON		8666746	0		=			
ANR	8666896	PtrMemberAccess	that -> rede		8666746	0					
ANR	8666897	Identifier	that		8666746	0					
ANR	8666898	Identifier	rede		8666746	1					
ANR	8666899	AdditiveExpression	that -> rede * that -> alphaf + data . rede * alf + DBL_EPSILON		8666746	1		+			
ANR	8666900	MultiplicativeExpression	that -> rede * that -> alphaf		8666746	0		*			
ANR	8666901	PtrMemberAccess	that -> rede		8666746	0					
ANR	8666902	Identifier	that		8666746	0					
ANR	8666903	Identifier	rede		8666746	1					
ANR	8666904	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666905	Identifier	that		8666746	0					
ANR	8666906	Identifier	alphaf		8666746	1					
ANR	8666907	AdditiveExpression	data . rede * alf + DBL_EPSILON		8666746	1		+			
ANR	8666908	MultiplicativeExpression	data . rede * alf		8666746	0		*			
ANR	8666909	MemberAccess	data . rede		8666746	0					
ANR	8666910	Identifier	data		8666746	0					
ANR	8666911	Identifier	rede		8666746	1					
ANR	8666912	Identifier	alf		8666746	1					
ANR	8666913	Identifier	DBL_EPSILON		8666746	1					
ANR	8666914	ExpressionStatement	that -> greenf = that -> greenf * that -> alphaf + data . greenf * alf	8357:9:265009:265071	8666746	3	True				
ANR	8666915	AssignmentExpression	that -> greenf = that -> greenf * that -> alphaf + data . greenf * alf		8666746	0		=			
ANR	8666916	PtrMemberAccess	that -> greenf		8666746	0					
ANR	8666917	Identifier	that		8666746	0					
ANR	8666918	Identifier	greenf		8666746	1					
ANR	8666919	AdditiveExpression	that -> greenf * that -> alphaf + data . greenf * alf		8666746	1		+			
ANR	8666920	MultiplicativeExpression	that -> greenf * that -> alphaf		8666746	0		*			
ANR	8666921	PtrMemberAccess	that -> greenf		8666746	0					
ANR	8666922	Identifier	that		8666746	0					
ANR	8666923	Identifier	greenf		8666746	1					
ANR	8666924	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666925	Identifier	that		8666746	0					
ANR	8666926	Identifier	alphaf		8666746	1					
ANR	8666927	MultiplicativeExpression	data . greenf * alf		8666746	1		*			
ANR	8666928	MemberAccess	data . greenf		8666746	0					
ANR	8666929	Identifier	data		8666746	0					
ANR	8666930	Identifier	greenf		8666746	1					
ANR	8666931	Identifier	alf		8666746	1					
ANR	8666932	ExpressionStatement	that -> greene = that -> greene * that -> alphaf + data . greene * alf + DBL_EPSILON	8358:9:265082:265170	8666746	4	True				
ANR	8666933	AssignmentExpression	that -> greene = that -> greene * that -> alphaf + data . greene * alf + DBL_EPSILON		8666746	0		=			
ANR	8666934	PtrMemberAccess	that -> greene		8666746	0					
ANR	8666935	Identifier	that		8666746	0					
ANR	8666936	Identifier	greene		8666746	1					
ANR	8666937	AdditiveExpression	that -> greene * that -> alphaf + data . greene * alf + DBL_EPSILON		8666746	1		+			
ANR	8666938	MultiplicativeExpression	that -> greene * that -> alphaf		8666746	0		*			
ANR	8666939	PtrMemberAccess	that -> greene		8666746	0					
ANR	8666940	Identifier	that		8666746	0					
ANR	8666941	Identifier	greene		8666746	1					
ANR	8666942	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666943	Identifier	that		8666746	0					
ANR	8666944	Identifier	alphaf		8666746	1					
ANR	8666945	AdditiveExpression	data . greene * alf + DBL_EPSILON		8666746	1		+			
ANR	8666946	MultiplicativeExpression	data . greene * alf		8666746	0		*			
ANR	8666947	MemberAccess	data . greene		8666746	0					
ANR	8666948	Identifier	data		8666746	0					
ANR	8666949	Identifier	greene		8666746	1					
ANR	8666950	Identifier	alf		8666746	1					
ANR	8666951	Identifier	DBL_EPSILON		8666746	1					
ANR	8666952	ExpressionStatement	that -> bluef = that -> bluef * that -> alphaf + data . bluef * alf	8360:9:265181:265240	8666746	5	True				
ANR	8666953	AssignmentExpression	that -> bluef = that -> bluef * that -> alphaf + data . bluef * alf		8666746	0		=			
ANR	8666954	PtrMemberAccess	that -> bluef		8666746	0					
ANR	8666955	Identifier	that		8666746	0					
ANR	8666956	Identifier	bluef		8666746	1					
ANR	8666957	AdditiveExpression	that -> bluef * that -> alphaf + data . bluef * alf		8666746	1		+			
ANR	8666958	MultiplicativeExpression	that -> bluef * that -> alphaf		8666746	0		*			
ANR	8666959	PtrMemberAccess	that -> bluef		8666746	0					
ANR	8666960	Identifier	that		8666746	0					
ANR	8666961	Identifier	bluef		8666746	1					
ANR	8666962	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666963	Identifier	that		8666746	0					
ANR	8666964	Identifier	alphaf		8666746	1					
ANR	8666965	MultiplicativeExpression	data . bluef * alf		8666746	1		*			
ANR	8666966	MemberAccess	data . bluef		8666746	0					
ANR	8666967	Identifier	data		8666746	0					
ANR	8666968	Identifier	bluef		8666746	1					
ANR	8666969	Identifier	alf		8666746	1					
ANR	8666970	ExpressionStatement	that -> bluee = that -> bluee * that -> alphaf + data . bluee * alf + DBL_EPSILON	8361:9:265251:265336	8666746	6	True				
ANR	8666971	AssignmentExpression	that -> bluee = that -> bluee * that -> alphaf + data . bluee * alf + DBL_EPSILON		8666746	0		=			
ANR	8666972	PtrMemberAccess	that -> bluee		8666746	0					
ANR	8666973	Identifier	that		8666746	0					
ANR	8666974	Identifier	bluee		8666746	1					
ANR	8666975	AdditiveExpression	that -> bluee * that -> alphaf + data . bluee * alf + DBL_EPSILON		8666746	1		+			
ANR	8666976	MultiplicativeExpression	that -> bluee * that -> alphaf		8666746	0		*			
ANR	8666977	PtrMemberAccess	that -> bluee		8666746	0					
ANR	8666978	Identifier	that		8666746	0					
ANR	8666979	Identifier	bluee		8666746	1					
ANR	8666980	PtrMemberAccess	that -> alphaf		8666746	1					
ANR	8666981	Identifier	that		8666746	0					
ANR	8666982	Identifier	alphaf		8666746	1					
ANR	8666983	AdditiveExpression	data . bluee * alf + DBL_EPSILON		8666746	1		+			
ANR	8666984	MultiplicativeExpression	data . bluee * alf		8666746	0		*			
ANR	8666985	MemberAccess	data . bluee		8666746	0					
ANR	8666986	Identifier	data		8666746	0					
ANR	8666987	Identifier	bluee		8666746	1					
ANR	8666988	Identifier	alf		8666746	1					
ANR	8666989	Identifier	DBL_EPSILON		8666746	1					
ANR	8666990	ExpressionStatement	that -> alphaf = 1	8366:6:265426:265442	8666746	1	True				
ANR	8666991	AssignmentExpression	that -> alphaf = 1		8666746	0		=			
ANR	8666992	PtrMemberAccess	that -> alphaf		8666746	0					
ANR	8666993	Identifier	that		8666746	0					
ANR	8666994	Identifier	alphaf		8666746	1					
ANR	8666995	PrimaryExpression	1		8666746	1					
ANR	8666996	ExpressionStatement	that -> alphae = 0	8367:6:265450:265466	8666746	2	True				
ANR	8666997	AssignmentExpression	that -> alphae = 0		8666746	0		=			
ANR	8666998	PtrMemberAccess	that -> alphae		8666746	0					
ANR	8666999	Identifier	that		8666746	0					
ANR	8667000	Identifier	alphae		8666746	1					
ANR	8667001	PrimaryExpression	0		8666746	1					
ANR	8667002	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA )		8666746	2					
ANR	8667003	Condition	that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA	8370:7:265481:265525	8666746	0	True				
ANR	8667004	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB_ALPHA		8666746	0		==			
ANR	8667005	PtrMemberAccess	that -> colour_type		8666746	0					
ANR	8667006	Identifier	that		8666746	0					
ANR	8667007	Identifier	colour_type		8666746	1					
ANR	8667008	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		8666746	1					
ANR	8667009	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_RGB	8371:6:265534:265572	8666746	1	True				
ANR	8667010	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_RGB		8666746	0		=			
ANR	8667011	PtrMemberAccess	that -> colour_type		8666746	0					
ANR	8667012	Identifier	that		8666746	0					
ANR	8667013	Identifier	colour_type		8666746	1					
ANR	8667014	Identifier	PNG_COLOR_TYPE_RGB		8666746	1					
ANR	8667015	ElseStatement	else		8666746	0					
ANR	8667016	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA )		8666746	0					
ANR	8667017	Condition	that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA	8372:12:265586:265631	8666746	0	True				
ANR	8667018	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GRAY_ALPHA		8666746	0		==			
ANR	8667019	PtrMemberAccess	that -> colour_type		8666746	0					
ANR	8667020	Identifier	that		8666746	0					
ANR	8667021	Identifier	colour_type		8666746	1					
ANR	8667022	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		8666746	1					
ANR	8667023	ExpressionStatement	that -> colour_type = PNG_COLOR_TYPE_GRAY	8373:6:265640:265679	8666746	1	True				
ANR	8667024	AssignmentExpression	that -> colour_type = PNG_COLOR_TYPE_GRAY		8666746	0		=			
ANR	8667025	PtrMemberAccess	that -> colour_type		8666746	0					
ANR	8667026	Identifier	that		8666746	0					
ANR	8667027	Identifier	colour_type		8666746	1					
ANR	8667028	Identifier	PNG_COLOR_TYPE_GRAY		8666746	1					
ANR	8667029	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8376:3:265732:265778	8666746	3	True				
ANR	8667030	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8666746	0					
ANR	8667031	Callee	this -> next -> mod		8666746	0					
ANR	8667032	PtrMemberAccess	this -> next -> mod		8666746	0					
ANR	8667033	PtrMemberAccess	this -> next		8666746	0					
ANR	8667034	Identifier	this		8666746	0					
ANR	8667035	Identifier	next		8666746	1					
ANR	8667036	Identifier	mod		8666746	1					
ANR	8667037	ArgumentList	this -> next		8666746	1					
ANR	8667038	Argument	this -> next		8666746	0					
ANR	8667039	PtrMemberAccess	this -> next		8666746	0					
ANR	8667040	Identifier	this		8666746	0					
ANR	8667041	Identifier	next		8666746	1					
ANR	8667042	Argument	that		8666746	1					
ANR	8667043	Identifier	that		8666746	0					
ANR	8667044	Argument	pp		8666746	2					
ANR	8667045	Identifier	pp		8666746	0					
ANR	8667046	Argument	display		8666746	3					
ANR	8667047	Identifier	display		8666746	0					
ANR	8667048	ReturnType	static void		8666746	1					
ANR	8667049	Identifier	image_transform_png_set_background_mod		8666746	2					
ANR	8667050	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8666746	3					
ANR	8667051	Parameter	const image_transform * this	8323:39:263911:263937	8666746	0	True				
ANR	8667052	ParameterType	const image_transform *		8666746	0					
ANR	8667053	Identifier	this		8666746	1					
ANR	8667054	Parameter	image_pixel * that	8324:4:263944:263960	8666746	1	True				
ANR	8667055	ParameterType	image_pixel *		8666746	0					
ANR	8667056	Identifier	that		8666746	1					
ANR	8667057	Parameter	png_const_structp pp	8324:23:263963:263982	8666746	2	True				
ANR	8667058	ParameterType	png_const_structp		8666746	0					
ANR	8667059	Identifier	pp		8666746	1					
ANR	8667060	Parameter	const transform_display * display	8325:4:263989:264020	8666746	3	True				
ANR	8667061	ParameterType	const transform_display *		8666746	0					
ANR	8667062	Identifier	display		8666746	1					
ANR	8667063	CFGEntryNode	ENTRY		8666746		True				
ANR	8667064	CFGExitNode	EXIT		8666746		True				
ANR	8667065	Symbol	pp		8666746						
ANR	8667066	Symbol	that -> alphae		8666746						
ANR	8667067	Symbol	that -> alphaf		8666746						
ANR	8667068	Symbol	PNG_COLOR_TYPE_RGB		8666746						
ANR	8667069	Symbol	data		8666746						
ANR	8667070	Symbol	data . red_sBIT		8666746						
ANR	8667071	Symbol	data . blue_sBIT		8666746						
ANR	8667072	Symbol	PNG_COLOR_TYPE_GRAY		8666746						
ANR	8667073	Symbol	that -> red_sBIT		8666746						
ANR	8667074	Symbol	DBL_EPSILON		8666746						
ANR	8667075	Symbol	that		8666746						
ANR	8667076	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		8666746						
ANR	8667077	Symbol	that -> have_tRNS		8666746						
ANR	8667078	Symbol	alf		8666746						
ANR	8667079	Symbol	data . bluee		8666746						
ANR	8667080	Symbol	data . greenf		8666746						
ANR	8667081	Symbol	data . bluef		8666746						
ANR	8667082	Symbol	data . greene		8666746						
ANR	8667083	Symbol	data . rede		8666746						
ANR	8667084	Symbol	data . redf		8666746						
ANR	8667085	Symbol	that -> bluee		8666746						
ANR	8667086	Symbol	PNG_COLOR_TYPE_GRAY_ALPHA		8666746						
ANR	8667087	Symbol	this -> next		8666746						
ANR	8667088	Symbol	display		8666746						
ANR	8667089	Symbol	that -> bluef		8666746						
ANR	8667090	Symbol	this		8666746						
ANR	8667091	Symbol	& display -> this		8666746						
ANR	8667092	Symbol	that -> rede		8666746						
ANR	8667093	Symbol	that -> redf		8666746						
ANR	8667094	Symbol	that -> green_sBIT		8666746						
ANR	8667095	Symbol	that -> greenf		8666746						
ANR	8667096	Symbol	* this		8666746						
ANR	8667097	Symbol	that -> greene		8666746						
ANR	8667098	Symbol	data . green_sBIT		8666746						
ANR	8667099	Symbol	that -> colour_type		8666746						
ANR	8667100	Symbol	that -> blue_sBIT		8666746						
ANR	8667101	Symbol	* that		8666746						
ANR	8667102	Symbol	PNG_COLOR_TYPE_PALETTE		8666746						
ANR	8667103	DeclStmt									
ANR	8667104	Decl							define image_transform_png_set_background_add image_transform_default_add undef data	define image_transform_png_set_background_add image_transform_default_add undef data ( background )	IT
ANR	8667105	Function	image_transform_png_set_invert_alpha_set	8407:0:266741:266959							
ANR	8667106	FunctionDef	"image_transform_png_set_invert_alpha_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8667105	0					
ANR	8667107	CompoundStatement		8410:0:266882:266959	8667105	0					
ANR	8667108	ExpressionStatement	png_set_invert_alpha ( pp )	8411:3:266887:266911	8667105	0	True				
ANR	8667109	CallExpression	png_set_invert_alpha ( pp )		8667105	0					
ANR	8667110	Callee	png_set_invert_alpha		8667105	0					
ANR	8667111	Identifier	png_set_invert_alpha		8667105	0					
ANR	8667112	ArgumentList	pp		8667105	1					
ANR	8667113	Argument	pp		8667105	0					
ANR	8667114	Identifier	pp		8667105	0					
ANR	8667115	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8412:3:266916:266957	8667105	1	True				
ANR	8667116	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8667105	0					
ANR	8667117	Callee	this -> next -> set		8667105	0					
ANR	8667118	PtrMemberAccess	this -> next -> set		8667105	0					
ANR	8667119	PtrMemberAccess	this -> next		8667105	0					
ANR	8667120	Identifier	this		8667105	0					
ANR	8667121	Identifier	next		8667105	1					
ANR	8667122	Identifier	set		8667105	1					
ANR	8667123	ArgumentList	this -> next		8667105	1					
ANR	8667124	Argument	this -> next		8667105	0					
ANR	8667125	PtrMemberAccess	this -> next		8667105	0					
ANR	8667126	Identifier	this		8667105	0					
ANR	8667127	Identifier	next		8667105	1					
ANR	8667128	Argument	that		8667105	1					
ANR	8667129	Identifier	that		8667105	0					
ANR	8667130	Argument	pp		8667105	2					
ANR	8667131	Identifier	pp		8667105	0					
ANR	8667132	Argument	pi		8667105	3					
ANR	8667133	Identifier	pi		8667105	0					
ANR	8667134	ReturnType	static void		8667105	1					
ANR	8667135	Identifier	image_transform_png_set_invert_alpha_set		8667105	2					
ANR	8667136	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8667105	3					
ANR	8667137	Parameter	const image_transform * this	8408:41:266794:266820	8667105	0	True				
ANR	8667138	ParameterType	const image_transform *		8667105	0					
ANR	8667139	Identifier	this		8667105	1					
ANR	8667140	Parameter	transform_display * that	8409:4:266827:266849	8667105	1	True				
ANR	8667141	ParameterType	transform_display *		8667105	0					
ANR	8667142	Identifier	that		8667105	1					
ANR	8667143	Parameter	png_structp pp	8409:29:266852:266865	8667105	2	True				
ANR	8667144	ParameterType	png_structp		8667105	0					
ANR	8667145	Identifier	pp		8667105	1					
ANR	8667146	Parameter	png_infop pi	8409:45:266868:266879	8667105	3	True				
ANR	8667147	ParameterType	png_infop		8667105	0					
ANR	8667148	Identifier	pi		8667105	1					
ANR	8667149	CFGEntryNode	ENTRY		8667105		True				
ANR	8667150	CFGExitNode	EXIT		8667105		True				
ANR	8667151	Symbol	pp		8667105						
ANR	8667152	Symbol	* this		8667105						
ANR	8667153	Symbol	that		8667105						
ANR	8667154	Symbol	this -> next		8667105						
ANR	8667155	Symbol	this		8667105						
ANR	8667156	Symbol	pi		8667105						
ANR	8667157	Function	image_transform_png_set_invert_alpha_mod	8415:0:266962:267243							
ANR	8667158	FunctionDef	"image_transform_png_set_invert_alpha_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8667157	0					
ANR	8667159	CompoundStatement		8419:0:267127:267243	8667157	0					
ANR	8667160	IfStatement	if ( that -> colour_type & 4 )		8667157	0					
ANR	8667161	Condition	that -> colour_type & 4	8420:7:267136:267156	8667157	0	True				
ANR	8667162	BitAndExpression	that -> colour_type & 4		8667157	0		&			
ANR	8667163	PtrMemberAccess	that -> colour_type		8667157	0					
ANR	8667164	Identifier	that		8667157	0					
ANR	8667165	Identifier	colour_type		8667157	1					
ANR	8667166	PrimaryExpression	4		8667157	1					
ANR	8667167	ExpressionStatement	that -> alpha_inverted = 1	8421:6:267165:267189	8667157	1	True				
ANR	8667168	AssignmentExpression	that -> alpha_inverted = 1		8667157	0		=			
ANR	8667169	PtrMemberAccess	that -> alpha_inverted		8667157	0					
ANR	8667170	Identifier	that		8667157	0					
ANR	8667171	Identifier	alpha_inverted		8667157	1					
ANR	8667172	PrimaryExpression	1		8667157	1					
ANR	8667173	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8423:3:267195:267241	8667157	1	True				
ANR	8667174	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8667157	0					
ANR	8667175	Callee	this -> next -> mod		8667157	0					
ANR	8667176	PtrMemberAccess	this -> next -> mod		8667157	0					
ANR	8667177	PtrMemberAccess	this -> next		8667157	0					
ANR	8667178	Identifier	this		8667157	0					
ANR	8667179	Identifier	next		8667157	1					
ANR	8667180	Identifier	mod		8667157	1					
ANR	8667181	ArgumentList	this -> next		8667157	1					
ANR	8667182	Argument	this -> next		8667157	0					
ANR	8667183	PtrMemberAccess	this -> next		8667157	0					
ANR	8667184	Identifier	this		8667157	0					
ANR	8667185	Identifier	next		8667157	1					
ANR	8667186	Argument	that		8667157	1					
ANR	8667187	Identifier	that		8667157	0					
ANR	8667188	Argument	pp		8667157	2					
ANR	8667189	Identifier	pp		8667157	0					
ANR	8667190	Argument	display		8667157	3					
ANR	8667191	Identifier	display		8667157	0					
ANR	8667192	ReturnType	static void		8667157	1					
ANR	8667193	Identifier	image_transform_png_set_invert_alpha_mod		8667157	2					
ANR	8667194	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8667157	3					
ANR	8667195	Parameter	const image_transform * this	8416:41:267015:267041	8667157	0	True				
ANR	8667196	ParameterType	const image_transform *		8667157	0					
ANR	8667197	Identifier	this		8667157	1					
ANR	8667198	Parameter	image_pixel * that	8417:4:267048:267064	8667157	1	True				
ANR	8667199	ParameterType	image_pixel *		8667157	0					
ANR	8667200	Identifier	that		8667157	1					
ANR	8667201	Parameter	png_const_structp pp	8417:23:267067:267086	8667157	2	True				
ANR	8667202	ParameterType	png_const_structp		8667157	0					
ANR	8667203	Identifier	pp		8667157	1					
ANR	8667204	Parameter	const transform_display * display	8418:4:267093:267124	8667157	3	True				
ANR	8667205	ParameterType	const transform_display *		8667157	0					
ANR	8667206	Identifier	display		8667157	1					
ANR	8667207	CFGEntryNode	ENTRY		8667157		True				
ANR	8667208	CFGExitNode	EXIT		8667157		True				
ANR	8667209	Symbol	pp		8667157						
ANR	8667210	Symbol	* this		8667157						
ANR	8667211	Symbol	that		8667157						
ANR	8667212	Symbol	that -> colour_type		8667157						
ANR	8667213	Symbol	that -> alpha_inverted		8667157						
ANR	8667214	Symbol	this -> next		8667157						
ANR	8667215	Symbol	display		8667157						
ANR	8667216	Symbol	this		8667157						
ANR	8667217	Symbol	* that		8667157						
ANR	8667218	Function	image_transform_png_set_invert_alpha_add	8426:0:267246:267546							
ANR	8667219	FunctionDef	"image_transform_png_set_invert_alpha_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8667218	0					
ANR	8667220	CompoundStatement		8429:0:267397:267546	8667218	0					
ANR	8667221	Statement	UNUSED	8430:3:267402:267407	8667218	0	True				
ANR	8667222	ExpressionStatement	( bit_depth ) this -> next = * that	8430:9:267408:267442	8667218	1	True				
ANR	8667223	AssignmentExpression	( bit_depth ) this -> next = * that		8667218	0		=			
ANR	8667224	CastExpression	( bit_depth ) this -> next		8667218	0					
ANR	8667225	CastTarget	bit_depth		8667218	0					
ANR	8667226	PtrMemberAccess	this -> next		8667218	1					
ANR	8667227	Identifier	this		8667218	0					
ANR	8667228	Identifier	next		8667218	1					
ANR	8667229	UnaryOperationExpression	* that		8667218	1					
ANR	8667230	UnaryOperator	*		8667218	0					
ANR	8667231	Identifier	that		8667218	1					
ANR	8667232	ExpressionStatement	* that = this	8433:3:267447:267459	8667218	2	True				
ANR	8667233	AssignmentExpression	* that = this		8667218	0		=			
ANR	8667234	UnaryOperationExpression	* that		8667218	0					
ANR	8667235	UnaryOperator	*		8667218	0					
ANR	8667236	Identifier	that		8667218	1					
ANR	8667237	Identifier	this		8667218	1					
ANR	8667238	ReturnStatement	return ( colour_type & 4 ) != 0 ;	8436:3:267515:267544	8667218	3	True				
ANR	8667239	EqualityExpression	( colour_type & 4 ) != 0		8667218	0		!=			
ANR	8667240	BitAndExpression	colour_type & 4		8667218	0		&			
ANR	8667241	Identifier	colour_type		8667218	0					
ANR	8667242	PrimaryExpression	4		8667218	1					
ANR	8667243	PrimaryExpression	0		8667218	1					
ANR	8667244	ReturnType	static int		8667218	1					
ANR	8667245	Identifier	image_transform_png_set_invert_alpha_add		8667218	2					
ANR	8667246	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8667218	3					
ANR	8667247	Parameter	image_transform * this	8427:41:267298:267318	8667218	0	True				
ANR	8667248	ParameterType	image_transform *		8667218	0					
ANR	8667249	Identifier	this		8667218	1					
ANR	8667250	Parameter	const image_transform * * that	8428:4:267325:267352	8667218	1	True				
ANR	8667251	ParameterType	const image_transform * *		8667218	0					
ANR	8667252	Identifier	that		8667218	1					
ANR	8667253	Parameter	png_byte colour_type	8428:34:267355:267374	8667218	2	True				
ANR	8667254	ParameterType	png_byte		8667218	0					
ANR	8667255	Identifier	colour_type		8667218	1					
ANR	8667256	Parameter	png_byte bit_depth	8428:56:267377:267394	8667218	3	True				
ANR	8667257	ParameterType	png_byte		8667218	0					
ANR	8667258	Identifier	bit_depth		8667218	1					
ANR	8667259	CFGEntryNode	ENTRY		8667218		True				
ANR	8667260	CFGExitNode	EXIT		8667218		True				
ANR	8667261	Symbol	colour_type		8667218						
ANR	8667262	Symbol	* this		8667218						
ANR	8667263	Symbol	that		8667218						
ANR	8667264	Symbol	this -> next		8667218						
ANR	8667265	Symbol	this		8667218						
ANR	8667266	Symbol	* that		8667218						
ANR	8667267	Symbol	bit_depth		8667218						
ANR	8667268	Function	image_transform_png_set_bgr_set	8453:0:267844:268044							
ANR	8667269	FunctionDef	"image_transform_png_set_bgr_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8667268	0					
ANR	8667270	CompoundStatement		8456:0:267976:268044	8667268	0					
ANR	8667271	ExpressionStatement	png_set_bgr ( pp )	8457:3:267981:267996	8667268	0	True				
ANR	8667272	CallExpression	png_set_bgr ( pp )		8667268	0					
ANR	8667273	Callee	png_set_bgr		8667268	0					
ANR	8667274	Identifier	png_set_bgr		8667268	0					
ANR	8667275	ArgumentList	pp		8667268	1					
ANR	8667276	Argument	pp		8667268	0					
ANR	8667277	Identifier	pp		8667268	0					
ANR	8667278	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8458:3:268001:268042	8667268	1	True				
ANR	8667279	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8667268	0					
ANR	8667280	Callee	this -> next -> set		8667268	0					
ANR	8667281	PtrMemberAccess	this -> next -> set		8667268	0					
ANR	8667282	PtrMemberAccess	this -> next		8667268	0					
ANR	8667283	Identifier	this		8667268	0					
ANR	8667284	Identifier	next		8667268	1					
ANR	8667285	Identifier	set		8667268	1					
ANR	8667286	ArgumentList	this -> next		8667268	1					
ANR	8667287	Argument	this -> next		8667268	0					
ANR	8667288	PtrMemberAccess	this -> next		8667268	0					
ANR	8667289	Identifier	this		8667268	0					
ANR	8667290	Identifier	next		8667268	1					
ANR	8667291	Argument	that		8667268	1					
ANR	8667292	Identifier	that		8667268	0					
ANR	8667293	Argument	pp		8667268	2					
ANR	8667294	Identifier	pp		8667268	0					
ANR	8667295	Argument	pi		8667268	3					
ANR	8667296	Identifier	pi		8667268	0					
ANR	8667297	ReturnType	static void		8667268	1					
ANR	8667298	Identifier	image_transform_png_set_bgr_set		8667268	2					
ANR	8667299	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8667268	3					
ANR	8667300	Parameter	const image_transform * this	8454:32:267888:267914	8667268	0	True				
ANR	8667301	ParameterType	const image_transform *		8667268	0					
ANR	8667302	Identifier	this		8667268	1					
ANR	8667303	Parameter	transform_display * that	8455:4:267921:267943	8667268	1	True				
ANR	8667304	ParameterType	transform_display *		8667268	0					
ANR	8667305	Identifier	that		8667268	1					
ANR	8667306	Parameter	png_structp pp	8455:29:267946:267959	8667268	2	True				
ANR	8667307	ParameterType	png_structp		8667268	0					
ANR	8667308	Identifier	pp		8667268	1					
ANR	8667309	Parameter	png_infop pi	8455:45:267962:267973	8667268	3	True				
ANR	8667310	ParameterType	png_infop		8667268	0					
ANR	8667311	Identifier	pi		8667268	1					
ANR	8667312	CFGEntryNode	ENTRY		8667268		True				
ANR	8667313	CFGExitNode	EXIT		8667268		True				
ANR	8667314	Symbol	pp		8667268						
ANR	8667315	Symbol	* this		8667268						
ANR	8667316	Symbol	that		8667268						
ANR	8667317	Symbol	this -> next		8667268						
ANR	8667318	Symbol	this		8667268						
ANR	8667319	Symbol	pi		8667268						
ANR	8667320	Function	image_transform_png_set_bgr_mod	8461:0:268047:268383							
ANR	8667321	FunctionDef	"image_transform_png_set_bgr_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8667320	0					
ANR	8667322	CompoundStatement		8465:0:268203:268383	8667320	0					
ANR	8667323	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_RGBA )		8667320	0					
ANR	8667324	Condition	that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_RGBA	8466:7:268212:268301	8667320	0	True				
ANR	8667325	OrExpression	that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_RGBA		8667320	0		||			
ANR	8667326	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB		8667320	0		==			
ANR	8667327	PtrMemberAccess	that -> colour_type		8667320	0					
ANR	8667328	Identifier	that		8667320	0					
ANR	8667329	Identifier	colour_type		8667320	1					
ANR	8667330	Identifier	PNG_COLOR_TYPE_RGB		8667320	1					
ANR	8667331	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGBA		8667320	1		==			
ANR	8667332	PtrMemberAccess	that -> colour_type		8667320	0					
ANR	8667333	Identifier	that		8667320	0					
ANR	8667334	Identifier	colour_type		8667320	1					
ANR	8667335	Identifier	PNG_COLOR_TYPE_RGBA		8667320	1					
ANR	8667336	ExpressionStatement	that -> swap_rgb = 1	8468:7:268311:268329	8667320	1	True				
ANR	8667337	AssignmentExpression	that -> swap_rgb = 1		8667320	0		=			
ANR	8667338	PtrMemberAccess	that -> swap_rgb		8667320	0					
ANR	8667339	Identifier	that		8667320	0					
ANR	8667340	Identifier	swap_rgb		8667320	1					
ANR	8667341	PrimaryExpression	1		8667320	1					
ANR	8667342	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8470:3:268335:268381	8667320	1	True				
ANR	8667343	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8667320	0					
ANR	8667344	Callee	this -> next -> mod		8667320	0					
ANR	8667345	PtrMemberAccess	this -> next -> mod		8667320	0					
ANR	8667346	PtrMemberAccess	this -> next		8667320	0					
ANR	8667347	Identifier	this		8667320	0					
ANR	8667348	Identifier	next		8667320	1					
ANR	8667349	Identifier	mod		8667320	1					
ANR	8667350	ArgumentList	this -> next		8667320	1					
ANR	8667351	Argument	this -> next		8667320	0					
ANR	8667352	PtrMemberAccess	this -> next		8667320	0					
ANR	8667353	Identifier	this		8667320	0					
ANR	8667354	Identifier	next		8667320	1					
ANR	8667355	Argument	that		8667320	1					
ANR	8667356	Identifier	that		8667320	0					
ANR	8667357	Argument	pp		8667320	2					
ANR	8667358	Identifier	pp		8667320	0					
ANR	8667359	Argument	display		8667320	3					
ANR	8667360	Identifier	display		8667320	0					
ANR	8667361	ReturnType	static void		8667320	1					
ANR	8667362	Identifier	image_transform_png_set_bgr_mod		8667320	2					
ANR	8667363	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8667320	3					
ANR	8667364	Parameter	const image_transform * this	8462:32:268091:268117	8667320	0	True				
ANR	8667365	ParameterType	const image_transform *		8667320	0					
ANR	8667366	Identifier	this		8667320	1					
ANR	8667367	Parameter	image_pixel * that	8463:4:268124:268140	8667320	1	True				
ANR	8667368	ParameterType	image_pixel *		8667320	0					
ANR	8667369	Identifier	that		8667320	1					
ANR	8667370	Parameter	png_const_structp pp	8463:23:268143:268162	8667320	2	True				
ANR	8667371	ParameterType	png_const_structp		8667320	0					
ANR	8667372	Identifier	pp		8667320	1					
ANR	8667373	Parameter	const transform_display * display	8464:4:268169:268200	8667320	3	True				
ANR	8667374	ParameterType	const transform_display *		8667320	0					
ANR	8667375	Identifier	display		8667320	1					
ANR	8667376	CFGEntryNode	ENTRY		8667320		True				
ANR	8667377	CFGExitNode	EXIT		8667320		True				
ANR	8667378	Symbol	pp		8667320						
ANR	8667379	Symbol	* this		8667320						
ANR	8667380	Symbol	that		8667320						
ANR	8667381	Symbol	PNG_COLOR_TYPE_RGBA		8667320						
ANR	8667382	Symbol	that -> colour_type		8667320						
ANR	8667383	Symbol	PNG_COLOR_TYPE_RGB		8667320						
ANR	8667384	Symbol	this -> next		8667320						
ANR	8667385	Symbol	display		8667320						
ANR	8667386	Symbol	this		8667320						
ANR	8667387	Symbol	* that		8667320						
ANR	8667388	Symbol	that -> swap_rgb		8667320						
ANR	8667389	Function	image_transform_png_set_bgr_add	8473:0:268386:268683							
ANR	8667390	FunctionDef	"image_transform_png_set_bgr_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8667389	0					
ANR	8667391	CompoundStatement		8476:0:268528:268683	8667389	0					
ANR	8667392	Statement	UNUSED	8477:3:268533:268538	8667389	0	True				
ANR	8667393	ExpressionStatement	( bit_depth ) this -> next = * that	8477:9:268539:268573	8667389	1	True				
ANR	8667394	AssignmentExpression	( bit_depth ) this -> next = * that		8667389	0		=			
ANR	8667395	CastExpression	( bit_depth ) this -> next		8667389	0					
ANR	8667396	CastTarget	bit_depth		8667389	0					
ANR	8667397	PtrMemberAccess	this -> next		8667389	1					
ANR	8667398	Identifier	this		8667389	0					
ANR	8667399	Identifier	next		8667389	1					
ANR	8667400	UnaryOperationExpression	* that		8667389	1					
ANR	8667401	UnaryOperator	*		8667389	0					
ANR	8667402	Identifier	that		8667389	1					
ANR	8667403	ExpressionStatement	* that = this	8480:3:268578:268590	8667389	2	True				
ANR	8667404	AssignmentExpression	* that = this		8667389	0		=			
ANR	8667405	UnaryOperationExpression	* that		8667389	0					
ANR	8667406	UnaryOperator	*		8667389	0					
ANR	8667407	Identifier	that		8667389	1					
ANR	8667408	Identifier	this		8667389	1					
ANR	8667409	ReturnStatement	return colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_RGBA ;	8482:3:268596:268681	8667389	3	True				
ANR	8667410	OrExpression	colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_RGBA		8667389	0		||			
ANR	8667411	EqualityExpression	colour_type == PNG_COLOR_TYPE_RGB		8667389	0		==			
ANR	8667412	Identifier	colour_type		8667389	0					
ANR	8667413	Identifier	PNG_COLOR_TYPE_RGB		8667389	1					
ANR	8667414	EqualityExpression	colour_type == PNG_COLOR_TYPE_RGBA		8667389	1		==			
ANR	8667415	Identifier	colour_type		8667389	0					
ANR	8667416	Identifier	PNG_COLOR_TYPE_RGBA		8667389	1					
ANR	8667417	ReturnType	static int		8667389	1					
ANR	8667418	Identifier	image_transform_png_set_bgr_add		8667389	2					
ANR	8667419	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8667389	3					
ANR	8667420	Parameter	image_transform * this	8474:32:268429:268449	8667389	0	True				
ANR	8667421	ParameterType	image_transform *		8667389	0					
ANR	8667422	Identifier	this		8667389	1					
ANR	8667423	Parameter	const image_transform * * that	8475:4:268456:268483	8667389	1	True				
ANR	8667424	ParameterType	const image_transform * *		8667389	0					
ANR	8667425	Identifier	that		8667389	1					
ANR	8667426	Parameter	png_byte colour_type	8475:34:268486:268505	8667389	2	True				
ANR	8667427	ParameterType	png_byte		8667389	0					
ANR	8667428	Identifier	colour_type		8667389	1					
ANR	8667429	Parameter	png_byte bit_depth	8475:56:268508:268525	8667389	3	True				
ANR	8667430	ParameterType	png_byte		8667389	0					
ANR	8667431	Identifier	bit_depth		8667389	1					
ANR	8667432	CFGEntryNode	ENTRY		8667389		True				
ANR	8667433	CFGExitNode	EXIT		8667389		True				
ANR	8667434	Symbol	colour_type		8667389						
ANR	8667435	Symbol	* this		8667389						
ANR	8667436	Symbol	that		8667389						
ANR	8667437	Symbol	PNG_COLOR_TYPE_RGBA		8667389						
ANR	8667438	Symbol	PNG_COLOR_TYPE_RGB		8667389						
ANR	8667439	Symbol	this -> next		8667389						
ANR	8667440	Symbol	this		8667389						
ANR	8667441	Symbol	* that		8667389						
ANR	8667442	Symbol	bit_depth		8667389						
ANR	8667443	Function	image_transform_png_set_swap_alpha_set	8500:0:268967:269181							
ANR	8667444	FunctionDef	"image_transform_png_set_swap_alpha_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8667443	0					
ANR	8667445	CompoundStatement		8503:0:269106:269181	8667443	0					
ANR	8667446	ExpressionStatement	png_set_swap_alpha ( pp )	8504:3:269111:269133	8667443	0	True				
ANR	8667447	CallExpression	png_set_swap_alpha ( pp )		8667443	0					
ANR	8667448	Callee	png_set_swap_alpha		8667443	0					
ANR	8667449	Identifier	png_set_swap_alpha		8667443	0					
ANR	8667450	ArgumentList	pp		8667443	1					
ANR	8667451	Argument	pp		8667443	0					
ANR	8667452	Identifier	pp		8667443	0					
ANR	8667453	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8505:3:269138:269179	8667443	1	True				
ANR	8667454	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8667443	0					
ANR	8667455	Callee	this -> next -> set		8667443	0					
ANR	8667456	PtrMemberAccess	this -> next -> set		8667443	0					
ANR	8667457	PtrMemberAccess	this -> next		8667443	0					
ANR	8667458	Identifier	this		8667443	0					
ANR	8667459	Identifier	next		8667443	1					
ANR	8667460	Identifier	set		8667443	1					
ANR	8667461	ArgumentList	this -> next		8667443	1					
ANR	8667462	Argument	this -> next		8667443	0					
ANR	8667463	PtrMemberAccess	this -> next		8667443	0					
ANR	8667464	Identifier	this		8667443	0					
ANR	8667465	Identifier	next		8667443	1					
ANR	8667466	Argument	that		8667443	1					
ANR	8667467	Identifier	that		8667443	0					
ANR	8667468	Argument	pp		8667443	2					
ANR	8667469	Identifier	pp		8667443	0					
ANR	8667470	Argument	pi		8667443	3					
ANR	8667471	Identifier	pi		8667443	0					
ANR	8667472	ReturnType	static void		8667443	1					
ANR	8667473	Identifier	image_transform_png_set_swap_alpha_set		8667443	2					
ANR	8667474	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8667443	3					
ANR	8667475	Parameter	const image_transform * this	8501:39:269018:269044	8667443	0	True				
ANR	8667476	ParameterType	const image_transform *		8667443	0					
ANR	8667477	Identifier	this		8667443	1					
ANR	8667478	Parameter	transform_display * that	8502:4:269051:269073	8667443	1	True				
ANR	8667479	ParameterType	transform_display *		8667443	0					
ANR	8667480	Identifier	that		8667443	1					
ANR	8667481	Parameter	png_structp pp	8502:29:269076:269089	8667443	2	True				
ANR	8667482	ParameterType	png_structp		8667443	0					
ANR	8667483	Identifier	pp		8667443	1					
ANR	8667484	Parameter	png_infop pi	8502:45:269092:269103	8667443	3	True				
ANR	8667485	ParameterType	png_infop		8667443	0					
ANR	8667486	Identifier	pi		8667443	1					
ANR	8667487	CFGEntryNode	ENTRY		8667443		True				
ANR	8667488	CFGExitNode	EXIT		8667443		True				
ANR	8667489	Symbol	pp		8667443						
ANR	8667490	Symbol	* this		8667443						
ANR	8667491	Symbol	that		8667443						
ANR	8667492	Symbol	this -> next		8667443						
ANR	8667493	Symbol	this		8667443						
ANR	8667494	Symbol	pi		8667443						
ANR	8667495	Function	image_transform_png_set_swap_alpha_mod	8508:0:269184:269528							
ANR	8667496	FunctionDef	"image_transform_png_set_swap_alpha_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8667495	0					
ANR	8667497	CompoundStatement		8512:0:269347:269528	8667495	0					
ANR	8667498	IfStatement	if ( that -> colour_type == PNG_COLOR_TYPE_GA || that -> colour_type == PNG_COLOR_TYPE_RGBA )		8667495	0					
ANR	8667499	Condition	that -> colour_type == PNG_COLOR_TYPE_GA || that -> colour_type == PNG_COLOR_TYPE_RGBA	8513:7:269356:269444	8667495	0	True				
ANR	8667500	OrExpression	that -> colour_type == PNG_COLOR_TYPE_GA || that -> colour_type == PNG_COLOR_TYPE_RGBA		8667495	0		||			
ANR	8667501	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GA		8667495	0		==			
ANR	8667502	PtrMemberAccess	that -> colour_type		8667495	0					
ANR	8667503	Identifier	that		8667495	0					
ANR	8667504	Identifier	colour_type		8667495	1					
ANR	8667505	Identifier	PNG_COLOR_TYPE_GA		8667495	1					
ANR	8667506	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGBA		8667495	1		==			
ANR	8667507	PtrMemberAccess	that -> colour_type		8667495	0					
ANR	8667508	Identifier	that		8667495	0					
ANR	8667509	Identifier	colour_type		8667495	1					
ANR	8667510	Identifier	PNG_COLOR_TYPE_RGBA		8667495	1					
ANR	8667511	ExpressionStatement	that -> alpha_first = 1	8515:6:269453:269474	8667495	1	True				
ANR	8667512	AssignmentExpression	that -> alpha_first = 1		8667495	0		=			
ANR	8667513	PtrMemberAccess	that -> alpha_first		8667495	0					
ANR	8667514	Identifier	that		8667495	0					
ANR	8667515	Identifier	alpha_first		8667495	1					
ANR	8667516	PrimaryExpression	1		8667495	1					
ANR	8667517	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8517:3:269480:269526	8667495	1	True				
ANR	8667518	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8667495	0					
ANR	8667519	Callee	this -> next -> mod		8667495	0					
ANR	8667520	PtrMemberAccess	this -> next -> mod		8667495	0					
ANR	8667521	PtrMemberAccess	this -> next		8667495	0					
ANR	8667522	Identifier	this		8667495	0					
ANR	8667523	Identifier	next		8667495	1					
ANR	8667524	Identifier	mod		8667495	1					
ANR	8667525	ArgumentList	this -> next		8667495	1					
ANR	8667526	Argument	this -> next		8667495	0					
ANR	8667527	PtrMemberAccess	this -> next		8667495	0					
ANR	8667528	Identifier	this		8667495	0					
ANR	8667529	Identifier	next		8667495	1					
ANR	8667530	Argument	that		8667495	1					
ANR	8667531	Identifier	that		8667495	0					
ANR	8667532	Argument	pp		8667495	2					
ANR	8667533	Identifier	pp		8667495	0					
ANR	8667534	Argument	display		8667495	3					
ANR	8667535	Identifier	display		8667495	0					
ANR	8667536	ReturnType	static void		8667495	1					
ANR	8667537	Identifier	image_transform_png_set_swap_alpha_mod		8667495	2					
ANR	8667538	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8667495	3					
ANR	8667539	Parameter	const image_transform * this	8509:39:269235:269261	8667495	0	True				
ANR	8667540	ParameterType	const image_transform *		8667495	0					
ANR	8667541	Identifier	this		8667495	1					
ANR	8667542	Parameter	image_pixel * that	8510:4:269268:269284	8667495	1	True				
ANR	8667543	ParameterType	image_pixel *		8667495	0					
ANR	8667544	Identifier	that		8667495	1					
ANR	8667545	Parameter	png_const_structp pp	8510:23:269287:269306	8667495	2	True				
ANR	8667546	ParameterType	png_const_structp		8667495	0					
ANR	8667547	Identifier	pp		8667495	1					
ANR	8667548	Parameter	const transform_display * display	8511:4:269313:269344	8667495	3	True				
ANR	8667549	ParameterType	const transform_display *		8667495	0					
ANR	8667550	Identifier	display		8667495	1					
ANR	8667551	CFGEntryNode	ENTRY		8667495		True				
ANR	8667552	CFGExitNode	EXIT		8667495		True				
ANR	8667553	Symbol	pp		8667495						
ANR	8667554	Symbol	* this		8667495						
ANR	8667555	Symbol	that		8667495						
ANR	8667556	Symbol	PNG_COLOR_TYPE_RGBA		8667495						
ANR	8667557	Symbol	that -> colour_type		8667495						
ANR	8667558	Symbol	PNG_COLOR_TYPE_GA		8667495						
ANR	8667559	Symbol	that -> alpha_first		8667495						
ANR	8667560	Symbol	this -> next		8667495						
ANR	8667561	Symbol	display		8667495						
ANR	8667562	Symbol	this		8667495						
ANR	8667563	Symbol	* that		8667495						
ANR	8667564	Function	image_transform_png_set_swap_alpha_add	8520:0:269531:269834							
ANR	8667565	FunctionDef	"image_transform_png_set_swap_alpha_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8667564	0					
ANR	8667566	CompoundStatement		8523:0:269680:269834	8667564	0					
ANR	8667567	Statement	UNUSED	8524:3:269685:269690	8667564	0	True				
ANR	8667568	ExpressionStatement	( bit_depth ) this -> next = * that	8524:9:269691:269725	8667564	1	True				
ANR	8667569	AssignmentExpression	( bit_depth ) this -> next = * that		8667564	0		=			
ANR	8667570	CastExpression	( bit_depth ) this -> next		8667564	0					
ANR	8667571	CastTarget	bit_depth		8667564	0					
ANR	8667572	PtrMemberAccess	this -> next		8667564	1					
ANR	8667573	Identifier	this		8667564	0					
ANR	8667574	Identifier	next		8667564	1					
ANR	8667575	UnaryOperationExpression	* that		8667564	1					
ANR	8667576	UnaryOperator	*		8667564	0					
ANR	8667577	Identifier	that		8667564	1					
ANR	8667578	ExpressionStatement	* that = this	8527:3:269730:269742	8667564	2	True				
ANR	8667579	AssignmentExpression	* that = this		8667564	0		=			
ANR	8667580	UnaryOperationExpression	* that		8667564	0					
ANR	8667581	UnaryOperator	*		8667564	0					
ANR	8667582	Identifier	that		8667564	1					
ANR	8667583	Identifier	this		8667564	1					
ANR	8667584	ReturnStatement	return colour_type == PNG_COLOR_TYPE_GA || colour_type == PNG_COLOR_TYPE_RGBA ;	8529:3:269748:269832	8667564	3	True				
ANR	8667585	OrExpression	colour_type == PNG_COLOR_TYPE_GA || colour_type == PNG_COLOR_TYPE_RGBA		8667564	0		||			
ANR	8667586	EqualityExpression	colour_type == PNG_COLOR_TYPE_GA		8667564	0		==			
ANR	8667587	Identifier	colour_type		8667564	0					
ANR	8667588	Identifier	PNG_COLOR_TYPE_GA		8667564	1					
ANR	8667589	EqualityExpression	colour_type == PNG_COLOR_TYPE_RGBA		8667564	1		==			
ANR	8667590	Identifier	colour_type		8667564	0					
ANR	8667591	Identifier	PNG_COLOR_TYPE_RGBA		8667564	1					
ANR	8667592	ReturnType	static int		8667564	1					
ANR	8667593	Identifier	image_transform_png_set_swap_alpha_add		8667564	2					
ANR	8667594	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8667564	3					
ANR	8667595	Parameter	image_transform * this	8521:39:269581:269601	8667564	0	True				
ANR	8667596	ParameterType	image_transform *		8667564	0					
ANR	8667597	Identifier	this		8667564	1					
ANR	8667598	Parameter	const image_transform * * that	8522:4:269608:269635	8667564	1	True				
ANR	8667599	ParameterType	const image_transform * *		8667564	0					
ANR	8667600	Identifier	that		8667564	1					
ANR	8667601	Parameter	png_byte colour_type	8522:34:269638:269657	8667564	2	True				
ANR	8667602	ParameterType	png_byte		8667564	0					
ANR	8667603	Identifier	colour_type		8667564	1					
ANR	8667604	Parameter	png_byte bit_depth	8522:56:269660:269677	8667564	3	True				
ANR	8667605	ParameterType	png_byte		8667564	0					
ANR	8667606	Identifier	bit_depth		8667564	1					
ANR	8667607	CFGEntryNode	ENTRY		8667564		True				
ANR	8667608	CFGExitNode	EXIT		8667564		True				
ANR	8667609	Symbol	colour_type		8667564						
ANR	8667610	Symbol	* this		8667564						
ANR	8667611	Symbol	that		8667564						
ANR	8667612	Symbol	PNG_COLOR_TYPE_RGBA		8667564						
ANR	8667613	Symbol	PNG_COLOR_TYPE_GA		8667564						
ANR	8667614	Symbol	this -> next		8667564						
ANR	8667615	Symbol	this		8667564						
ANR	8667616	Symbol	* that		8667564						
ANR	8667617	Symbol	bit_depth		8667564						
ANR	8667618	Function	image_transform_png_set_swap_set	8545:0:270068:270270							
ANR	8667619	FunctionDef	"image_transform_png_set_swap_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8667618	0					
ANR	8667620	CompoundStatement		8548:0:270201:270270	8667618	0					
ANR	8667621	ExpressionStatement	png_set_swap ( pp )	8549:3:270206:270222	8667618	0	True				
ANR	8667622	CallExpression	png_set_swap ( pp )		8667618	0					
ANR	8667623	Callee	png_set_swap		8667618	0					
ANR	8667624	Identifier	png_set_swap		8667618	0					
ANR	8667625	ArgumentList	pp		8667618	1					
ANR	8667626	Argument	pp		8667618	0					
ANR	8667627	Identifier	pp		8667618	0					
ANR	8667628	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8550:3:270227:270268	8667618	1	True				
ANR	8667629	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8667618	0					
ANR	8667630	Callee	this -> next -> set		8667618	0					
ANR	8667631	PtrMemberAccess	this -> next -> set		8667618	0					
ANR	8667632	PtrMemberAccess	this -> next		8667618	0					
ANR	8667633	Identifier	this		8667618	0					
ANR	8667634	Identifier	next		8667618	1					
ANR	8667635	Identifier	set		8667618	1					
ANR	8667636	ArgumentList	this -> next		8667618	1					
ANR	8667637	Argument	this -> next		8667618	0					
ANR	8667638	PtrMemberAccess	this -> next		8667618	0					
ANR	8667639	Identifier	this		8667618	0					
ANR	8667640	Identifier	next		8667618	1					
ANR	8667641	Argument	that		8667618	1					
ANR	8667642	Identifier	that		8667618	0					
ANR	8667643	Argument	pp		8667618	2					
ANR	8667644	Identifier	pp		8667618	0					
ANR	8667645	Argument	pi		8667618	3					
ANR	8667646	Identifier	pi		8667618	0					
ANR	8667647	ReturnType	static void		8667618	1					
ANR	8667648	Identifier	image_transform_png_set_swap_set		8667618	2					
ANR	8667649	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8667618	3					
ANR	8667650	Parameter	const image_transform * this	8546:33:270113:270139	8667618	0	True				
ANR	8667651	ParameterType	const image_transform *		8667618	0					
ANR	8667652	Identifier	this		8667618	1					
ANR	8667653	Parameter	transform_display * that	8547:4:270146:270168	8667618	1	True				
ANR	8667654	ParameterType	transform_display *		8667618	0					
ANR	8667655	Identifier	that		8667618	1					
ANR	8667656	Parameter	png_structp pp	8547:29:270171:270184	8667618	2	True				
ANR	8667657	ParameterType	png_structp		8667618	0					
ANR	8667658	Identifier	pp		8667618	1					
ANR	8667659	Parameter	png_infop pi	8547:45:270187:270198	8667618	3	True				
ANR	8667660	ParameterType	png_infop		8667618	0					
ANR	8667661	Identifier	pi		8667618	1					
ANR	8667662	CFGEntryNode	ENTRY		8667618		True				
ANR	8667663	CFGExitNode	EXIT		8667618		True				
ANR	8667664	Symbol	pp		8667618						
ANR	8667665	Symbol	* this		8667618						
ANR	8667666	Symbol	that		8667618						
ANR	8667667	Symbol	this -> next		8667618						
ANR	8667668	Symbol	this		8667618						
ANR	8667669	Symbol	pi		8667618						
ANR	8667670	Function	image_transform_png_set_swap_mod	8553:0:270273:270538							
ANR	8667671	FunctionDef	"image_transform_png_set_swap_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8667670	0					
ANR	8667672	CompoundStatement		8557:0:270430:270538	8667670	0					
ANR	8667673	IfStatement	if ( that -> bit_depth == 16 )		8667670	0					
ANR	8667674	Condition	that -> bit_depth == 16	8558:7:270439:270459	8667670	0	True				
ANR	8667675	EqualityExpression	that -> bit_depth == 16		8667670	0		==			
ANR	8667676	PtrMemberAccess	that -> bit_depth		8667670	0					
ANR	8667677	Identifier	that		8667670	0					
ANR	8667678	Identifier	bit_depth		8667670	1					
ANR	8667679	PrimaryExpression	16		8667670	1					
ANR	8667680	ExpressionStatement	that -> swap16 = 1	8559:6:270468:270484	8667670	1	True				
ANR	8667681	AssignmentExpression	that -> swap16 = 1		8667670	0		=			
ANR	8667682	PtrMemberAccess	that -> swap16		8667670	0					
ANR	8667683	Identifier	that		8667670	0					
ANR	8667684	Identifier	swap16		8667670	1					
ANR	8667685	PrimaryExpression	1		8667670	1					
ANR	8667686	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8561:3:270490:270536	8667670	1	True				
ANR	8667687	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8667670	0					
ANR	8667688	Callee	this -> next -> mod		8667670	0					
ANR	8667689	PtrMemberAccess	this -> next -> mod		8667670	0					
ANR	8667690	PtrMemberAccess	this -> next		8667670	0					
ANR	8667691	Identifier	this		8667670	0					
ANR	8667692	Identifier	next		8667670	1					
ANR	8667693	Identifier	mod		8667670	1					
ANR	8667694	ArgumentList	this -> next		8667670	1					
ANR	8667695	Argument	this -> next		8667670	0					
ANR	8667696	PtrMemberAccess	this -> next		8667670	0					
ANR	8667697	Identifier	this		8667670	0					
ANR	8667698	Identifier	next		8667670	1					
ANR	8667699	Argument	that		8667670	1					
ANR	8667700	Identifier	that		8667670	0					
ANR	8667701	Argument	pp		8667670	2					
ANR	8667702	Identifier	pp		8667670	0					
ANR	8667703	Argument	display		8667670	3					
ANR	8667704	Identifier	display		8667670	0					
ANR	8667705	ReturnType	static void		8667670	1					
ANR	8667706	Identifier	image_transform_png_set_swap_mod		8667670	2					
ANR	8667707	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8667670	3					
ANR	8667708	Parameter	const image_transform * this	8554:33:270318:270344	8667670	0	True				
ANR	8667709	ParameterType	const image_transform *		8667670	0					
ANR	8667710	Identifier	this		8667670	1					
ANR	8667711	Parameter	image_pixel * that	8555:4:270351:270367	8667670	1	True				
ANR	8667712	ParameterType	image_pixel *		8667670	0					
ANR	8667713	Identifier	that		8667670	1					
ANR	8667714	Parameter	png_const_structp pp	8555:23:270370:270389	8667670	2	True				
ANR	8667715	ParameterType	png_const_structp		8667670	0					
ANR	8667716	Identifier	pp		8667670	1					
ANR	8667717	Parameter	const transform_display * display	8556:4:270396:270427	8667670	3	True				
ANR	8667718	ParameterType	const transform_display *		8667670	0					
ANR	8667719	Identifier	display		8667670	1					
ANR	8667720	CFGEntryNode	ENTRY		8667670		True				
ANR	8667721	CFGExitNode	EXIT		8667670		True				
ANR	8667722	Symbol	pp		8667670						
ANR	8667723	Symbol	* this		8667670						
ANR	8667724	Symbol	that		8667670						
ANR	8667725	Symbol	this -> next		8667670						
ANR	8667726	Symbol	that -> swap16		8667670						
ANR	8667727	Symbol	display		8667670						
ANR	8667728	Symbol	this		8667670						
ANR	8667729	Symbol	* that		8667670						
ANR	8667730	Symbol	that -> bit_depth		8667670						
ANR	8667731	Function	image_transform_png_set_swap_add	8564:0:270541:270778							
ANR	8667732	FunctionDef	"image_transform_png_set_swap_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8667731	0					
ANR	8667733	CompoundStatement		8567:0:270684:270778	8667731	0					
ANR	8667734	Statement	UNUSED	8568:3:270689:270694	8667731	0	True				
ANR	8667735	ExpressionStatement	( colour_type ) this -> next = * that	8568:9:270695:270731	8667731	1	True				
ANR	8667736	AssignmentExpression	( colour_type ) this -> next = * that		8667731	0		=			
ANR	8667737	CastExpression	( colour_type ) this -> next		8667731	0					
ANR	8667738	CastTarget	colour_type		8667731	0					
ANR	8667739	PtrMemberAccess	this -> next		8667731	1					
ANR	8667740	Identifier	this		8667731	0					
ANR	8667741	Identifier	next		8667731	1					
ANR	8667742	UnaryOperationExpression	* that		8667731	1					
ANR	8667743	UnaryOperator	*		8667731	0					
ANR	8667744	Identifier	that		8667731	1					
ANR	8667745	ExpressionStatement	* that = this	8571:3:270736:270748	8667731	2	True				
ANR	8667746	AssignmentExpression	* that = this		8667731	0		=			
ANR	8667747	UnaryOperationExpression	* that		8667731	0					
ANR	8667748	UnaryOperator	*		8667731	0					
ANR	8667749	Identifier	that		8667731	1					
ANR	8667750	Identifier	this		8667731	1					
ANR	8667751	ReturnStatement	return bit_depth == 16 ;	8573:3:270754:270776	8667731	3	True				
ANR	8667752	EqualityExpression	bit_depth == 16		8667731	0		==			
ANR	8667753	Identifier	bit_depth		8667731	0					
ANR	8667754	PrimaryExpression	16		8667731	1					
ANR	8667755	ReturnType	static int		8667731	1					
ANR	8667756	Identifier	image_transform_png_set_swap_add		8667731	2					
ANR	8667757	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8667731	3					
ANR	8667758	Parameter	image_transform * this	8565:33:270585:270605	8667731	0	True				
ANR	8667759	ParameterType	image_transform *		8667731	0					
ANR	8667760	Identifier	this		8667731	1					
ANR	8667761	Parameter	const image_transform * * that	8566:4:270612:270639	8667731	1	True				
ANR	8667762	ParameterType	const image_transform * *		8667731	0					
ANR	8667763	Identifier	that		8667731	1					
ANR	8667764	Parameter	png_byte colour_type	8566:34:270642:270661	8667731	2	True				
ANR	8667765	ParameterType	png_byte		8667731	0					
ANR	8667766	Identifier	colour_type		8667731	1					
ANR	8667767	Parameter	png_byte bit_depth	8566:56:270664:270681	8667731	3	True				
ANR	8667768	ParameterType	png_byte		8667731	0					
ANR	8667769	Identifier	bit_depth		8667731	1					
ANR	8667770	CFGEntryNode	ENTRY		8667731		True				
ANR	8667771	CFGExitNode	EXIT		8667731		True				
ANR	8667772	Symbol	colour_type		8667731						
ANR	8667773	Symbol	* this		8667731						
ANR	8667774	Symbol	that		8667731						
ANR	8667775	Symbol	this -> next		8667731						
ANR	8667776	Symbol	this		8667731						
ANR	8667777	Symbol	* that		8667731						
ANR	8667778	Symbol	bit_depth		8667731						
ANR	8667779	ClassDef	<unnamed>	8593:7:271132:271192							
ANR	8667780	DeclStmt									
ANR	8667781	Decl							png_uint_32	png_uint_32	filler
ANR	8667782	DeclStmt									
ANR	8667783	Decl							int	int	flags
ANR	8667784	DeclStmt									
ANR	8667785	Decl									data
ANR	8667786	Function	image_transform_png_set_filler_set	8599:0:271195:271847							
ANR	8667787	FunctionDef	"image_transform_png_set_filler_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8667786	0					
ANR	8667788	CompoundStatement		8602:0:271330:271847	8667786	0					
ANR	8667789	ExpressionStatement	data . filler = random_u32 ( )	8607:3:271547:271573	8667786	0	True				
ANR	8667790	AssignmentExpression	data . filler = random_u32 ( )		8667786	0		=			
ANR	8667791	MemberAccess	data . filler		8667786	0					
ANR	8667792	Identifier	data		8667786	0					
ANR	8667793	Identifier	filler		8667786	1					
ANR	8667794	CallExpression	random_u32 ( )		8667786	1					
ANR	8667795	Callee	random_u32		8667786	0					
ANR	8667796	Identifier	random_u32		8667786	0					
ANR	8667797	ArgumentList			8667786	1					
ANR	8667798	ExpressionStatement	data . flags = random_choice ( )	8608:3:271578:271606	8667786	1	True				
ANR	8667799	AssignmentExpression	data . flags = random_choice ( )		8667786	0		=			
ANR	8667800	MemberAccess	data . flags		8667786	0					
ANR	8667801	Identifier	data		8667786	0					
ANR	8667802	Identifier	flags		8667786	1					
ANR	8667803	CallExpression	random_choice ( )		8667786	1					
ANR	8667804	Callee	random_choice		8667786	0					
ANR	8667805	Identifier	random_choice		8667786	0					
ANR	8667806	ArgumentList			8667786	1					
ANR	8667807	ExpressionStatement	"png_set_filler ( pp , data . filler , data . flags )"	8610:3:271612:271655	8667786	2	True				
ANR	8667808	CallExpression	"png_set_filler ( pp , data . filler , data . flags )"		8667786	0					
ANR	8667809	Callee	png_set_filler		8667786	0					
ANR	8667810	Identifier	png_set_filler		8667786	0					
ANR	8667811	ArgumentList	pp		8667786	1					
ANR	8667812	Argument	pp		8667786	0					
ANR	8667813	Identifier	pp		8667786	0					
ANR	8667814	Argument	data . filler		8667786	1					
ANR	8667815	MemberAccess	data . filler		8667786	0					
ANR	8667816	Identifier	data		8667786	0					
ANR	8667817	Identifier	filler		8667786	1					
ANR	8667818	Argument	data . flags		8667786	2					
ANR	8667819	MemberAccess	data . flags		8667786	0					
ANR	8667820	Identifier	data		8667786	0					
ANR	8667821	Identifier	flags		8667786	1					
ANR	8667822	ExpressionStatement	that -> this . filler = 1	8615:3:271777:271798	8667786	3	True				
ANR	8667823	AssignmentExpression	that -> this . filler = 1		8667786	0		=			
ANR	8667824	MemberAccess	that -> this . filler		8667786	0					
ANR	8667825	PtrMemberAccess	that -> this		8667786	0					
ANR	8667826	Identifier	that		8667786	0					
ANR	8667827	Identifier	this		8667786	1					
ANR	8667828	Identifier	filler		8667786	1					
ANR	8667829	PrimaryExpression	1		8667786	1					
ANR	8667830	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8617:3:271804:271845	8667786	4	True				
ANR	8667831	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8667786	0					
ANR	8667832	Callee	this -> next -> set		8667786	0					
ANR	8667833	PtrMemberAccess	this -> next -> set		8667786	0					
ANR	8667834	PtrMemberAccess	this -> next		8667786	0					
ANR	8667835	Identifier	this		8667786	0					
ANR	8667836	Identifier	next		8667786	1					
ANR	8667837	Identifier	set		8667786	1					
ANR	8667838	ArgumentList	this -> next		8667786	1					
ANR	8667839	Argument	this -> next		8667786	0					
ANR	8667840	PtrMemberAccess	this -> next		8667786	0					
ANR	8667841	Identifier	this		8667786	0					
ANR	8667842	Identifier	next		8667786	1					
ANR	8667843	Argument	that		8667786	1					
ANR	8667844	Identifier	that		8667786	0					
ANR	8667845	Argument	pp		8667786	2					
ANR	8667846	Identifier	pp		8667786	0					
ANR	8667847	Argument	pi		8667786	3					
ANR	8667848	Identifier	pi		8667786	0					
ANR	8667849	ReturnType	static void		8667786	1					
ANR	8667850	Identifier	image_transform_png_set_filler_set		8667786	2					
ANR	8667851	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8667786	3					
ANR	8667852	Parameter	const image_transform * this	8600:35:271242:271268	8667786	0	True				
ANR	8667853	ParameterType	const image_transform *		8667786	0					
ANR	8667854	Identifier	this		8667786	1					
ANR	8667855	Parameter	transform_display * that	8601:4:271275:271297	8667786	1	True				
ANR	8667856	ParameterType	transform_display *		8667786	0					
ANR	8667857	Identifier	that		8667786	1					
ANR	8667858	Parameter	png_structp pp	8601:29:271300:271313	8667786	2	True				
ANR	8667859	ParameterType	png_structp		8667786	0					
ANR	8667860	Identifier	pp		8667786	1					
ANR	8667861	Parameter	png_infop pi	8601:45:271316:271327	8667786	3	True				
ANR	8667862	ParameterType	png_infop		8667786	0					
ANR	8667863	Identifier	pi		8667786	1					
ANR	8667864	CFGEntryNode	ENTRY		8667786		True				
ANR	8667865	CFGExitNode	EXIT		8667786		True				
ANR	8667866	Symbol	pp		8667786						
ANR	8667867	Symbol	data		8667786						
ANR	8667868	Symbol	this -> next		8667786						
ANR	8667869	Symbol	this		8667786						
ANR	8667870	Symbol	random_choice		8667786						
ANR	8667871	Symbol	data . flags		8667786						
ANR	8667872	Symbol	* this		8667786						
ANR	8667873	Symbol	that		8667786						
ANR	8667874	Symbol	random_u32		8667786						
ANR	8667875	Symbol	that -> this . filler		8667786						
ANR	8667876	Symbol	that -> this		8667786						
ANR	8667877	Symbol	pi		8667786						
ANR	8667878	Symbol	* that		8667786						
ANR	8667879	Symbol	data . filler		8667786						
ANR	8667880	Function	image_transform_png_set_filler_mod	8620:0:271850:272840							
ANR	8667881	FunctionDef	"image_transform_png_set_filler_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8667880	0					
ANR	8667882	CompoundStatement		8624:0:272009:272840	8667880	0					
ANR	8667883	IfStatement	if ( that -> bit_depth >= 8 && ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY ) )		8667880	0					
ANR	8667884	Condition	that -> bit_depth >= 8 && ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY )	8625:7:272018:272141	8667880	0	True				
ANR	8667885	AndExpression	that -> bit_depth >= 8 && ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY )		8667880	0		&&			
ANR	8667886	RelationalExpression	that -> bit_depth >= 8		8667880	0		>=			
ANR	8667887	PtrMemberAccess	that -> bit_depth		8667880	0					
ANR	8667888	Identifier	that		8667880	0					
ANR	8667889	Identifier	bit_depth		8667880	1					
ANR	8667890	PrimaryExpression	8		8667880	1					
ANR	8667891	OrExpression	that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY		8667880	1		||			
ANR	8667892	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB		8667880	0		==			
ANR	8667893	PtrMemberAccess	that -> colour_type		8667880	0					
ANR	8667894	Identifier	that		8667880	0					
ANR	8667895	Identifier	colour_type		8667880	1					
ANR	8667896	Identifier	PNG_COLOR_TYPE_RGB		8667880	1					
ANR	8667897	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GRAY		8667880	1		==			
ANR	8667898	PtrMemberAccess	that -> colour_type		8667880	0					
ANR	8667899	Identifier	that		8667880	0					
ANR	8667900	Identifier	colour_type		8667880	1					
ANR	8667901	Identifier	PNG_COLOR_TYPE_GRAY		8667880	1					
ANR	8667902	CompoundStatement		6:6:145:195	8667880	1					
ANR	8667903	IdentifierDeclStatement	const unsigned int max = ( 1U << that -> bit_depth ) - 1 ;	8629:6:272155:272205	8667880	0	True				
ANR	8667904	IdentifierDecl	max = ( 1U << that -> bit_depth ) - 1		8667880	0					
ANR	8667905	IdentifierDeclType	const unsigned int		8667880	0					
ANR	8667906	Identifier	max		8667880	1					
ANR	8667907	AssignmentExpression	max = ( 1U << that -> bit_depth ) - 1		8667880	2		=			
ANR	8667908	Identifier	max		8667880	0					
ANR	8667909	AdditiveExpression	( 1U << that -> bit_depth ) - 1		8667880	1		-			
ANR	8667910	ShiftExpression	1U << that -> bit_depth		8667880	0		<<			
ANR	8667911	PrimaryExpression	1U		8667880	0					
ANR	8667912	PtrMemberAccess	that -> bit_depth		8667880	1					
ANR	8667913	Identifier	that		8667880	0					
ANR	8667914	Identifier	bit_depth		8667880	1					
ANR	8667915	PrimaryExpression	1		8667880	1					
ANR	8667916	ExpressionStatement	that -> alpha = data . filler & max	8630:6:272213:272244	8667880	1	True				
ANR	8667917	AssignmentExpression	that -> alpha = data . filler & max		8667880	0		=			
ANR	8667918	PtrMemberAccess	that -> alpha		8667880	0					
ANR	8667919	Identifier	that		8667880	0					
ANR	8667920	Identifier	alpha		8667880	1					
ANR	8667921	BitAndExpression	data . filler & max		8667880	1		&			
ANR	8667922	MemberAccess	data . filler		8667880	0					
ANR	8667923	Identifier	data		8667880	0					
ANR	8667924	Identifier	filler		8667880	1					
ANR	8667925	Identifier	max		8667880	1					
ANR	8667926	ExpressionStatement	that -> alphaf = ( ( double ) that -> alpha ) / max	8631:6:272252:272294	8667880	2	True				
ANR	8667927	AssignmentExpression	that -> alphaf = ( ( double ) that -> alpha ) / max		8667880	0		=			
ANR	8667928	PtrMemberAccess	that -> alphaf		8667880	0					
ANR	8667929	Identifier	that		8667880	0					
ANR	8667930	Identifier	alphaf		8667880	1					
ANR	8667931	MultiplicativeExpression	( ( double ) that -> alpha ) / max		8667880	1		/			
ANR	8667932	CastExpression	( double ) that -> alpha		8667880	0					
ANR	8667933	CastTarget	double		8667880	0					
ANR	8667934	PtrMemberAccess	that -> alpha		8667880	1					
ANR	8667935	Identifier	that		8667880	0					
ANR	8667936	Identifier	alpha		8667880	1					
ANR	8667937	Identifier	max		8667880	1					
ANR	8667938	ExpressionStatement	that -> alphae = 0	8632:6:272302:272318	8667880	3	True				
ANR	8667939	AssignmentExpression	that -> alphae = 0		8667880	0		=			
ANR	8667940	PtrMemberAccess	that -> alphae		8667880	0					
ANR	8667941	Identifier	that		8667880	0					
ANR	8667942	Identifier	alphae		8667880	1					
ANR	8667943	PrimaryExpression	0		8667880	1					
ANR	8667944	ExpressionStatement	that -> colour_type |= 4	8640:6:272682:272704	8667880	4	True				
ANR	8667945	AssignmentExpression	that -> colour_type |= 4		8667880	0		|=			
ANR	8667946	PtrMemberAccess	that -> colour_type		8667880	0					
ANR	8667947	Identifier	that		8667880	0					
ANR	8667948	Identifier	colour_type		8667880	1					
ANR	8667949	PrimaryExpression	4		8667880	1					
ANR	8667950	ExpressionStatement	that -> alpha_first = data . flags == PNG_FILLER_BEFORE	8641:6:272730:272781	8667880	5	True				
ANR	8667951	AssignmentExpression	that -> alpha_first = data . flags == PNG_FILLER_BEFORE		8667880	0		=			
ANR	8667952	PtrMemberAccess	that -> alpha_first		8667880	0					
ANR	8667953	Identifier	that		8667880	0					
ANR	8667954	Identifier	alpha_first		8667880	1					
ANR	8667955	EqualityExpression	data . flags == PNG_FILLER_BEFORE		8667880	1		==			
ANR	8667956	MemberAccess	data . flags		8667880	0					
ANR	8667957	Identifier	data		8667880	0					
ANR	8667958	Identifier	flags		8667880	1					
ANR	8667959	Identifier	PNG_FILLER_BEFORE		8667880	1					
ANR	8667960	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8644:3:272792:272838	8667880	1	True				
ANR	8667961	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8667880	0					
ANR	8667962	Callee	this -> next -> mod		8667880	0					
ANR	8667963	PtrMemberAccess	this -> next -> mod		8667880	0					
ANR	8667964	PtrMemberAccess	this -> next		8667880	0					
ANR	8667965	Identifier	this		8667880	0					
ANR	8667966	Identifier	next		8667880	1					
ANR	8667967	Identifier	mod		8667880	1					
ANR	8667968	ArgumentList	this -> next		8667880	1					
ANR	8667969	Argument	this -> next		8667880	0					
ANR	8667970	PtrMemberAccess	this -> next		8667880	0					
ANR	8667971	Identifier	this		8667880	0					
ANR	8667972	Identifier	next		8667880	1					
ANR	8667973	Argument	that		8667880	1					
ANR	8667974	Identifier	that		8667880	0					
ANR	8667975	Argument	pp		8667880	2					
ANR	8667976	Identifier	pp		8667880	0					
ANR	8667977	Argument	display		8667880	3					
ANR	8667978	Identifier	display		8667880	0					
ANR	8667979	ReturnType	static void		8667880	1					
ANR	8667980	Identifier	image_transform_png_set_filler_mod		8667880	2					
ANR	8667981	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8667880	3					
ANR	8667982	Parameter	const image_transform * this	8621:35:271897:271923	8667880	0	True				
ANR	8667983	ParameterType	const image_transform *		8667880	0					
ANR	8667984	Identifier	this		8667880	1					
ANR	8667985	Parameter	image_pixel * that	8622:4:271930:271946	8667880	1	True				
ANR	8667986	ParameterType	image_pixel *		8667880	0					
ANR	8667987	Identifier	that		8667880	1					
ANR	8667988	Parameter	png_const_structp pp	8622:23:271949:271968	8667880	2	True				
ANR	8667989	ParameterType	png_const_structp		8667880	0					
ANR	8667990	Identifier	pp		8667880	1					
ANR	8667991	Parameter	const transform_display * display	8623:4:271975:272006	8667880	3	True				
ANR	8667992	ParameterType	const transform_display *		8667880	0					
ANR	8667993	Identifier	display		8667880	1					
ANR	8667994	CFGEntryNode	ENTRY		8667880		True				
ANR	8667995	CFGExitNode	EXIT		8667880		True				
ANR	8667996	Symbol	pp		8667880						
ANR	8667997	Symbol	that -> alphae		8667880						
ANR	8667998	Symbol	PNG_COLOR_TYPE_RGB		8667880						
ANR	8667999	Symbol	that -> alphaf		8667880						
ANR	8668000	Symbol	data		8667880						
ANR	8668001	Symbol	that -> alpha_first		8667880						
ANR	8668002	Symbol	max		8667880						
ANR	8668003	Symbol	this -> next		8667880						
ANR	8668004	Symbol	display		8667880						
ANR	8668005	Symbol	PNG_COLOR_TYPE_GRAY		8667880						
ANR	8668006	Symbol	this		8667880						
ANR	8668007	Symbol	that -> alpha		8667880						
ANR	8668008	Symbol	that -> bit_depth		8667880						
ANR	8668009	Symbol	data . flags		8667880						
ANR	8668010	Symbol	* this		8667880						
ANR	8668011	Symbol	that		8667880						
ANR	8668012	Symbol	that -> colour_type		8667880						
ANR	8668013	Symbol	PNG_FILLER_BEFORE		8667880						
ANR	8668014	Symbol	* that		8667880						
ANR	8668015	Symbol	data . filler		8667880						
ANR	8668016	Function	image_transform_png_set_filler_add	8647:0:272843:273145							
ANR	8668017	FunctionDef	"image_transform_png_set_filler_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8668016	0					
ANR	8668018	CompoundStatement		8650:0:272988:273145	8668016	0					
ANR	8668019	ExpressionStatement	this -> next = * that	8651:3:272993:273011	8668016	0	True				
ANR	8668020	AssignmentExpression	this -> next = * that		8668016	0		=			
ANR	8668021	PtrMemberAccess	this -> next		8668016	0					
ANR	8668022	Identifier	this		8668016	0					
ANR	8668023	Identifier	next		8668016	1					
ANR	8668024	UnaryOperationExpression	* that		8668016	1					
ANR	8668025	UnaryOperator	*		8668016	0					
ANR	8668026	Identifier	that		8668016	1					
ANR	8668027	ExpressionStatement	* that = this	8652:3:273016:273028	8668016	1	True				
ANR	8668028	AssignmentExpression	* that = this		8668016	0		=			
ANR	8668029	UnaryOperationExpression	* that		8668016	0					
ANR	8668030	UnaryOperator	*		8668016	0					
ANR	8668031	Identifier	that		8668016	1					
ANR	8668032	Identifier	this		8668016	1					
ANR	8668033	ReturnStatement	return bit_depth >= 8 && ( colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_GRAY ) ;	8654:3:273034:273143	8668016	2	True				
ANR	8668034	AndExpression	bit_depth >= 8 && ( colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_GRAY )		8668016	0		&&			
ANR	8668035	RelationalExpression	bit_depth >= 8		8668016	0		>=			
ANR	8668036	Identifier	bit_depth		8668016	0					
ANR	8668037	PrimaryExpression	8		8668016	1					
ANR	8668038	OrExpression	colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_GRAY		8668016	1		||			
ANR	8668039	EqualityExpression	colour_type == PNG_COLOR_TYPE_RGB		8668016	0		==			
ANR	8668040	Identifier	colour_type		8668016	0					
ANR	8668041	Identifier	PNG_COLOR_TYPE_RGB		8668016	1					
ANR	8668042	EqualityExpression	colour_type == PNG_COLOR_TYPE_GRAY		8668016	1		==			
ANR	8668043	Identifier	colour_type		8668016	0					
ANR	8668044	Identifier	PNG_COLOR_TYPE_GRAY		8668016	1					
ANR	8668045	ReturnType	static int		8668016	1					
ANR	8668046	Identifier	image_transform_png_set_filler_add		8668016	2					
ANR	8668047	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8668016	3					
ANR	8668048	Parameter	image_transform * this	8648:35:272889:272909	8668016	0	True				
ANR	8668049	ParameterType	image_transform *		8668016	0					
ANR	8668050	Identifier	this		8668016	1					
ANR	8668051	Parameter	const image_transform * * that	8649:4:272916:272943	8668016	1	True				
ANR	8668052	ParameterType	const image_transform * *		8668016	0					
ANR	8668053	Identifier	that		8668016	1					
ANR	8668054	Parameter	png_byte colour_type	8649:34:272946:272965	8668016	2	True				
ANR	8668055	ParameterType	png_byte		8668016	0					
ANR	8668056	Identifier	colour_type		8668016	1					
ANR	8668057	Parameter	png_byte bit_depth	8649:56:272968:272985	8668016	3	True				
ANR	8668058	ParameterType	png_byte		8668016	0					
ANR	8668059	Identifier	bit_depth		8668016	1					
ANR	8668060	CFGEntryNode	ENTRY		8668016		True				
ANR	8668061	CFGExitNode	EXIT		8668016		True				
ANR	8668062	Symbol	colour_type		8668016						
ANR	8668063	Symbol	* this		8668016						
ANR	8668064	Symbol	that		8668016						
ANR	8668065	Symbol	PNG_COLOR_TYPE_RGB		8668016						
ANR	8668066	Symbol	this -> next		8668016						
ANR	8668067	Symbol	PNG_COLOR_TYPE_GRAY		8668016						
ANR	8668068	Symbol	this		8668016						
ANR	8668069	Symbol	* that		8668016						
ANR	8668070	Symbol	bit_depth		8668016						
ANR	8668071	DeclStmt									
ANR	8668072	Decl							undef data	undef data ( filler )	IT
ANR	8668073	ClassDef	<unnamed>	8666:7:273389:273449							
ANR	8668074	DeclStmt									
ANR	8668075	Decl							png_uint_32	png_uint_32	filler
ANR	8668076	DeclStmt									
ANR	8668077	Decl							int	int	flags
ANR	8668078	DeclStmt									
ANR	8668079	Decl									data
ANR	8668080	Function	image_transform_png_set_add_alpha_set	8672:0:273452:273966							
ANR	8668081	FunctionDef	"image_transform_png_set_add_alpha_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8668080	0					
ANR	8668082	CompoundStatement		8675:0:273590:273966	8668080	0					
ANR	8668083	ExpressionStatement	data . filler = random_u32 ( )	8680:3:273807:273833	8668080	0	True				
ANR	8668084	AssignmentExpression	data . filler = random_u32 ( )		8668080	0		=			
ANR	8668085	MemberAccess	data . filler		8668080	0					
ANR	8668086	Identifier	data		8668080	0					
ANR	8668087	Identifier	filler		8668080	1					
ANR	8668088	CallExpression	random_u32 ( )		8668080	1					
ANR	8668089	Callee	random_u32		8668080	0					
ANR	8668090	Identifier	random_u32		8668080	0					
ANR	8668091	ArgumentList			8668080	1					
ANR	8668092	ExpressionStatement	data . flags = random_choice ( )	8681:3:273838:273866	8668080	1	True				
ANR	8668093	AssignmentExpression	data . flags = random_choice ( )		8668080	0		=			
ANR	8668094	MemberAccess	data . flags		8668080	0					
ANR	8668095	Identifier	data		8668080	0					
ANR	8668096	Identifier	flags		8668080	1					
ANR	8668097	CallExpression	random_choice ( )		8668080	1					
ANR	8668098	Callee	random_choice		8668080	0					
ANR	8668099	Identifier	random_choice		8668080	0					
ANR	8668100	ArgumentList			8668080	1					
ANR	8668101	ExpressionStatement	"png_set_add_alpha ( pp , data . filler , data . flags )"	8683:3:273872:273918	8668080	2	True				
ANR	8668102	CallExpression	"png_set_add_alpha ( pp , data . filler , data . flags )"		8668080	0					
ANR	8668103	Callee	png_set_add_alpha		8668080	0					
ANR	8668104	Identifier	png_set_add_alpha		8668080	0					
ANR	8668105	ArgumentList	pp		8668080	1					
ANR	8668106	Argument	pp		8668080	0					
ANR	8668107	Identifier	pp		8668080	0					
ANR	8668108	Argument	data . filler		8668080	1					
ANR	8668109	MemberAccess	data . filler		8668080	0					
ANR	8668110	Identifier	data		8668080	0					
ANR	8668111	Identifier	filler		8668080	1					
ANR	8668112	Argument	data . flags		8668080	2					
ANR	8668113	MemberAccess	data . flags		8668080	0					
ANR	8668114	Identifier	data		8668080	0					
ANR	8668115	Identifier	flags		8668080	1					
ANR	8668116	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8684:3:273923:273964	8668080	3	True				
ANR	8668117	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8668080	0					
ANR	8668118	Callee	this -> next -> set		8668080	0					
ANR	8668119	PtrMemberAccess	this -> next -> set		8668080	0					
ANR	8668120	PtrMemberAccess	this -> next		8668080	0					
ANR	8668121	Identifier	this		8668080	0					
ANR	8668122	Identifier	next		8668080	1					
ANR	8668123	Identifier	set		8668080	1					
ANR	8668124	ArgumentList	this -> next		8668080	1					
ANR	8668125	Argument	this -> next		8668080	0					
ANR	8668126	PtrMemberAccess	this -> next		8668080	0					
ANR	8668127	Identifier	this		8668080	0					
ANR	8668128	Identifier	next		8668080	1					
ANR	8668129	Argument	that		8668080	1					
ANR	8668130	Identifier	that		8668080	0					
ANR	8668131	Argument	pp		8668080	2					
ANR	8668132	Identifier	pp		8668080	0					
ANR	8668133	Argument	pi		8668080	3					
ANR	8668134	Identifier	pi		8668080	0					
ANR	8668135	ReturnType	static void		8668080	1					
ANR	8668136	Identifier	image_transform_png_set_add_alpha_set		8668080	2					
ANR	8668137	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8668080	3					
ANR	8668138	Parameter	const image_transform * this	8673:38:273502:273528	8668080	0	True				
ANR	8668139	ParameterType	const image_transform *		8668080	0					
ANR	8668140	Identifier	this		8668080	1					
ANR	8668141	Parameter	transform_display * that	8674:4:273535:273557	8668080	1	True				
ANR	8668142	ParameterType	transform_display *		8668080	0					
ANR	8668143	Identifier	that		8668080	1					
ANR	8668144	Parameter	png_structp pp	8674:29:273560:273573	8668080	2	True				
ANR	8668145	ParameterType	png_structp		8668080	0					
ANR	8668146	Identifier	pp		8668080	1					
ANR	8668147	Parameter	png_infop pi	8674:45:273576:273587	8668080	3	True				
ANR	8668148	ParameterType	png_infop		8668080	0					
ANR	8668149	Identifier	pi		8668080	1					
ANR	8668150	CFGEntryNode	ENTRY		8668080		True				
ANR	8668151	CFGExitNode	EXIT		8668080		True				
ANR	8668152	Symbol	pp		8668080						
ANR	8668153	Symbol	* this		8668080						
ANR	8668154	Symbol	that		8668080						
ANR	8668155	Symbol	random_u32		8668080						
ANR	8668156	Symbol	data		8668080						
ANR	8668157	Symbol	this -> next		8668080						
ANR	8668158	Symbol	this		8668080						
ANR	8668159	Symbol	pi		8668080						
ANR	8668160	Symbol	random_choice		8668080						
ANR	8668161	Symbol	data . filler		8668080						
ANR	8668162	Symbol	data . flags		8668080						
ANR	8668163	Function	image_transform_png_set_add_alpha_mod	8687:0:273969:274607							
ANR	8668164	FunctionDef	"image_transform_png_set_add_alpha_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8668163	0					
ANR	8668165	CompoundStatement		8691:0:274131:274607	8668163	0					
ANR	8668166	IfStatement	if ( that -> bit_depth >= 8 && ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY ) )		8668163	0					
ANR	8668167	Condition	that -> bit_depth >= 8 && ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY )	8692:7:274140:274263	8668163	0	True				
ANR	8668168	AndExpression	that -> bit_depth >= 8 && ( that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY )		8668163	0		&&			
ANR	8668169	RelationalExpression	that -> bit_depth >= 8		8668163	0		>=			
ANR	8668170	PtrMemberAccess	that -> bit_depth		8668163	0					
ANR	8668171	Identifier	that		8668163	0					
ANR	8668172	Identifier	bit_depth		8668163	1					
ANR	8668173	PrimaryExpression	8		8668163	1					
ANR	8668174	OrExpression	that -> colour_type == PNG_COLOR_TYPE_RGB || that -> colour_type == PNG_COLOR_TYPE_GRAY		8668163	1		||			
ANR	8668175	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_RGB		8668163	0		==			
ANR	8668176	PtrMemberAccess	that -> colour_type		8668163	0					
ANR	8668177	Identifier	that		8668163	0					
ANR	8668178	Identifier	colour_type		8668163	1					
ANR	8668179	Identifier	PNG_COLOR_TYPE_RGB		8668163	1					
ANR	8668180	EqualityExpression	that -> colour_type == PNG_COLOR_TYPE_GRAY		8668163	1		==			
ANR	8668181	PtrMemberAccess	that -> colour_type		8668163	0					
ANR	8668182	Identifier	that		8668163	0					
ANR	8668183	Identifier	colour_type		8668163	1					
ANR	8668184	Identifier	PNG_COLOR_TYPE_GRAY		8668163	1					
ANR	8668185	CompoundStatement		6:6:145:195	8668163	1					
ANR	8668186	IdentifierDeclStatement	const unsigned int max = ( 1U << that -> bit_depth ) - 1 ;	8696:6:274277:274327	8668163	0	True				
ANR	8668187	IdentifierDecl	max = ( 1U << that -> bit_depth ) - 1		8668163	0					
ANR	8668188	IdentifierDeclType	const unsigned int		8668163	0					
ANR	8668189	Identifier	max		8668163	1					
ANR	8668190	AssignmentExpression	max = ( 1U << that -> bit_depth ) - 1		8668163	2		=			
ANR	8668191	Identifier	max		8668163	0					
ANR	8668192	AdditiveExpression	( 1U << that -> bit_depth ) - 1		8668163	1		-			
ANR	8668193	ShiftExpression	1U << that -> bit_depth		8668163	0		<<			
ANR	8668194	PrimaryExpression	1U		8668163	0					
ANR	8668195	PtrMemberAccess	that -> bit_depth		8668163	1					
ANR	8668196	Identifier	that		8668163	0					
ANR	8668197	Identifier	bit_depth		8668163	1					
ANR	8668198	PrimaryExpression	1		8668163	1					
ANR	8668199	ExpressionStatement	that -> alpha = data . filler & max	8697:6:274335:274366	8668163	1	True				
ANR	8668200	AssignmentExpression	that -> alpha = data . filler & max		8668163	0		=			
ANR	8668201	PtrMemberAccess	that -> alpha		8668163	0					
ANR	8668202	Identifier	that		8668163	0					
ANR	8668203	Identifier	alpha		8668163	1					
ANR	8668204	BitAndExpression	data . filler & max		8668163	1		&			
ANR	8668205	MemberAccess	data . filler		8668163	0					
ANR	8668206	Identifier	data		8668163	0					
ANR	8668207	Identifier	filler		8668163	1					
ANR	8668208	Identifier	max		8668163	1					
ANR	8668209	ExpressionStatement	that -> alphaf = ( ( double ) that -> alpha ) / max	8698:6:274374:274416	8668163	2	True				
ANR	8668210	AssignmentExpression	that -> alphaf = ( ( double ) that -> alpha ) / max		8668163	0		=			
ANR	8668211	PtrMemberAccess	that -> alphaf		8668163	0					
ANR	8668212	Identifier	that		8668163	0					
ANR	8668213	Identifier	alphaf		8668163	1					
ANR	8668214	MultiplicativeExpression	( ( double ) that -> alpha ) / max		8668163	1		/			
ANR	8668215	CastExpression	( double ) that -> alpha		8668163	0					
ANR	8668216	CastTarget	double		8668163	0					
ANR	8668217	PtrMemberAccess	that -> alpha		8668163	1					
ANR	8668218	Identifier	that		8668163	0					
ANR	8668219	Identifier	alpha		8668163	1					
ANR	8668220	Identifier	max		8668163	1					
ANR	8668221	ExpressionStatement	that -> alphae = 0	8699:6:274424:274440	8668163	3	True				
ANR	8668222	AssignmentExpression	that -> alphae = 0		8668163	0		=			
ANR	8668223	PtrMemberAccess	that -> alphae		8668163	0					
ANR	8668224	Identifier	that		8668163	0					
ANR	8668225	Identifier	alphae		8668163	1					
ANR	8668226	PrimaryExpression	0		8668163	1					
ANR	8668227	ExpressionStatement	that -> colour_type |= 4	8701:6:274449:274471	8668163	4	True				
ANR	8668228	AssignmentExpression	that -> colour_type |= 4		8668163	0		|=			
ANR	8668229	PtrMemberAccess	that -> colour_type		8668163	0					
ANR	8668230	Identifier	that		8668163	0					
ANR	8668231	Identifier	colour_type		8668163	1					
ANR	8668232	PrimaryExpression	4		8668163	1					
ANR	8668233	ExpressionStatement	that -> alpha_first = data . flags == PNG_FILLER_BEFORE	8702:6:274497:274548	8668163	5	True				
ANR	8668234	AssignmentExpression	that -> alpha_first = data . flags == PNG_FILLER_BEFORE		8668163	0		=			
ANR	8668235	PtrMemberAccess	that -> alpha_first		8668163	0					
ANR	8668236	Identifier	that		8668163	0					
ANR	8668237	Identifier	alpha_first		8668163	1					
ANR	8668238	EqualityExpression	data . flags == PNG_FILLER_BEFORE		8668163	1		==			
ANR	8668239	MemberAccess	data . flags		8668163	0					
ANR	8668240	Identifier	data		8668163	0					
ANR	8668241	Identifier	flags		8668163	1					
ANR	8668242	Identifier	PNG_FILLER_BEFORE		8668163	1					
ANR	8668243	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8705:3:274559:274605	8668163	1	True				
ANR	8668244	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8668163	0					
ANR	8668245	Callee	this -> next -> mod		8668163	0					
ANR	8668246	PtrMemberAccess	this -> next -> mod		8668163	0					
ANR	8668247	PtrMemberAccess	this -> next		8668163	0					
ANR	8668248	Identifier	this		8668163	0					
ANR	8668249	Identifier	next		8668163	1					
ANR	8668250	Identifier	mod		8668163	1					
ANR	8668251	ArgumentList	this -> next		8668163	1					
ANR	8668252	Argument	this -> next		8668163	0					
ANR	8668253	PtrMemberAccess	this -> next		8668163	0					
ANR	8668254	Identifier	this		8668163	0					
ANR	8668255	Identifier	next		8668163	1					
ANR	8668256	Argument	that		8668163	1					
ANR	8668257	Identifier	that		8668163	0					
ANR	8668258	Argument	pp		8668163	2					
ANR	8668259	Identifier	pp		8668163	0					
ANR	8668260	Argument	display		8668163	3					
ANR	8668261	Identifier	display		8668163	0					
ANR	8668262	ReturnType	static void		8668163	1					
ANR	8668263	Identifier	image_transform_png_set_add_alpha_mod		8668163	2					
ANR	8668264	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8668163	3					
ANR	8668265	Parameter	const image_transform * this	8688:38:274019:274045	8668163	0	True				
ANR	8668266	ParameterType	const image_transform *		8668163	0					
ANR	8668267	Identifier	this		8668163	1					
ANR	8668268	Parameter	image_pixel * that	8689:4:274052:274068	8668163	1	True				
ANR	8668269	ParameterType	image_pixel *		8668163	0					
ANR	8668270	Identifier	that		8668163	1					
ANR	8668271	Parameter	png_const_structp pp	8689:23:274071:274090	8668163	2	True				
ANR	8668272	ParameterType	png_const_structp		8668163	0					
ANR	8668273	Identifier	pp		8668163	1					
ANR	8668274	Parameter	const transform_display * display	8690:4:274097:274128	8668163	3	True				
ANR	8668275	ParameterType	const transform_display *		8668163	0					
ANR	8668276	Identifier	display		8668163	1					
ANR	8668277	CFGEntryNode	ENTRY		8668163		True				
ANR	8668278	CFGExitNode	EXIT		8668163		True				
ANR	8668279	Symbol	pp		8668163						
ANR	8668280	Symbol	that -> alphae		8668163						
ANR	8668281	Symbol	PNG_COLOR_TYPE_RGB		8668163						
ANR	8668282	Symbol	that -> alphaf		8668163						
ANR	8668283	Symbol	data		8668163						
ANR	8668284	Symbol	that -> alpha_first		8668163						
ANR	8668285	Symbol	max		8668163						
ANR	8668286	Symbol	this -> next		8668163						
ANR	8668287	Symbol	display		8668163						
ANR	8668288	Symbol	PNG_COLOR_TYPE_GRAY		8668163						
ANR	8668289	Symbol	this		8668163						
ANR	8668290	Symbol	that -> alpha		8668163						
ANR	8668291	Symbol	that -> bit_depth		8668163						
ANR	8668292	Symbol	data . flags		8668163						
ANR	8668293	Symbol	* this		8668163						
ANR	8668294	Symbol	that		8668163						
ANR	8668295	Symbol	that -> colour_type		8668163						
ANR	8668296	Symbol	PNG_FILLER_BEFORE		8668163						
ANR	8668297	Symbol	* that		8668163						
ANR	8668298	Symbol	data . filler		8668163						
ANR	8668299	Function	image_transform_png_set_add_alpha_add	8708:0:274610:274915							
ANR	8668300	FunctionDef	"image_transform_png_set_add_alpha_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8668299	0					
ANR	8668301	CompoundStatement		8711:0:274758:274915	8668299	0					
ANR	8668302	ExpressionStatement	this -> next = * that	8712:3:274763:274781	8668299	0	True				
ANR	8668303	AssignmentExpression	this -> next = * that		8668299	0		=			
ANR	8668304	PtrMemberAccess	this -> next		8668299	0					
ANR	8668305	Identifier	this		8668299	0					
ANR	8668306	Identifier	next		8668299	1					
ANR	8668307	UnaryOperationExpression	* that		8668299	1					
ANR	8668308	UnaryOperator	*		8668299	0					
ANR	8668309	Identifier	that		8668299	1					
ANR	8668310	ExpressionStatement	* that = this	8713:3:274786:274798	8668299	1	True				
ANR	8668311	AssignmentExpression	* that = this		8668299	0		=			
ANR	8668312	UnaryOperationExpression	* that		8668299	0					
ANR	8668313	UnaryOperator	*		8668299	0					
ANR	8668314	Identifier	that		8668299	1					
ANR	8668315	Identifier	this		8668299	1					
ANR	8668316	ReturnStatement	return bit_depth >= 8 && ( colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_GRAY ) ;	8715:3:274804:274913	8668299	2	True				
ANR	8668317	AndExpression	bit_depth >= 8 && ( colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_GRAY )		8668299	0		&&			
ANR	8668318	RelationalExpression	bit_depth >= 8		8668299	0		>=			
ANR	8668319	Identifier	bit_depth		8668299	0					
ANR	8668320	PrimaryExpression	8		8668299	1					
ANR	8668321	OrExpression	colour_type == PNG_COLOR_TYPE_RGB || colour_type == PNG_COLOR_TYPE_GRAY		8668299	1		||			
ANR	8668322	EqualityExpression	colour_type == PNG_COLOR_TYPE_RGB		8668299	0		==			
ANR	8668323	Identifier	colour_type		8668299	0					
ANR	8668324	Identifier	PNG_COLOR_TYPE_RGB		8668299	1					
ANR	8668325	EqualityExpression	colour_type == PNG_COLOR_TYPE_GRAY		8668299	1		==			
ANR	8668326	Identifier	colour_type		8668299	0					
ANR	8668327	Identifier	PNG_COLOR_TYPE_GRAY		8668299	1					
ANR	8668328	ReturnType	static int		8668299	1					
ANR	8668329	Identifier	image_transform_png_set_add_alpha_add		8668299	2					
ANR	8668330	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8668299	3					
ANR	8668331	Parameter	image_transform * this	8709:38:274659:274679	8668299	0	True				
ANR	8668332	ParameterType	image_transform *		8668299	0					
ANR	8668333	Identifier	this		8668299	1					
ANR	8668334	Parameter	const image_transform * * that	8710:4:274686:274713	8668299	1	True				
ANR	8668335	ParameterType	const image_transform * *		8668299	0					
ANR	8668336	Identifier	that		8668299	1					
ANR	8668337	Parameter	png_byte colour_type	8710:34:274716:274735	8668299	2	True				
ANR	8668338	ParameterType	png_byte		8668299	0					
ANR	8668339	Identifier	colour_type		8668299	1					
ANR	8668340	Parameter	png_byte bit_depth	8710:56:274738:274755	8668299	3	True				
ANR	8668341	ParameterType	png_byte		8668299	0					
ANR	8668342	Identifier	bit_depth		8668299	1					
ANR	8668343	CFGEntryNode	ENTRY		8668299		True				
ANR	8668344	CFGExitNode	EXIT		8668299		True				
ANR	8668345	Symbol	colour_type		8668299						
ANR	8668346	Symbol	* this		8668299						
ANR	8668347	Symbol	that		8668299						
ANR	8668348	Symbol	PNG_COLOR_TYPE_RGB		8668299						
ANR	8668349	Symbol	this -> next		8668299						
ANR	8668350	Symbol	PNG_COLOR_TYPE_GRAY		8668299						
ANR	8668351	Symbol	this		8668299						
ANR	8668352	Symbol	* that		8668299						
ANR	8668353	Symbol	bit_depth		8668299						
ANR	8668354	DeclStmt									
ANR	8668355	Decl							undef data	undef data ( add_alpha )	IT
ANR	8668356	Function	image_transform_png_set_packing_set	8735:0:275279:275510							
ANR	8668357	FunctionDef	"image_transform_png_set_packing_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8668356	0					
ANR	8668358	CompoundStatement		8738:0:275415:275510	8668356	0					
ANR	8668359	ExpressionStatement	png_set_packing ( pp )	8739:3:275420:275439	8668356	0	True				
ANR	8668360	CallExpression	png_set_packing ( pp )		8668356	0					
ANR	8668361	Callee	png_set_packing		8668356	0					
ANR	8668362	Identifier	png_set_packing		8668356	0					
ANR	8668363	ArgumentList	pp		8668356	1					
ANR	8668364	Argument	pp		8668356	0					
ANR	8668365	Identifier	pp		8668356	0					
ANR	8668366	ExpressionStatement	that -> unpacked = 1	8740:3:275444:275462	8668356	1	True				
ANR	8668367	AssignmentExpression	that -> unpacked = 1		8668356	0		=			
ANR	8668368	PtrMemberAccess	that -> unpacked		8668356	0					
ANR	8668369	Identifier	that		8668356	0					
ANR	8668370	Identifier	unpacked		8668356	1					
ANR	8668371	PrimaryExpression	1		8668356	1					
ANR	8668372	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8741:3:275467:275508	8668356	2	True				
ANR	8668373	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8668356	0					
ANR	8668374	Callee	this -> next -> set		8668356	0					
ANR	8668375	PtrMemberAccess	this -> next -> set		8668356	0					
ANR	8668376	PtrMemberAccess	this -> next		8668356	0					
ANR	8668377	Identifier	this		8668356	0					
ANR	8668378	Identifier	next		8668356	1					
ANR	8668379	Identifier	set		8668356	1					
ANR	8668380	ArgumentList	this -> next		8668356	1					
ANR	8668381	Argument	this -> next		8668356	0					
ANR	8668382	PtrMemberAccess	this -> next		8668356	0					
ANR	8668383	Identifier	this		8668356	0					
ANR	8668384	Identifier	next		8668356	1					
ANR	8668385	Argument	that		8668356	1					
ANR	8668386	Identifier	that		8668356	0					
ANR	8668387	Argument	pp		8668356	2					
ANR	8668388	Identifier	pp		8668356	0					
ANR	8668389	Argument	pi		8668356	3					
ANR	8668390	Identifier	pi		8668356	0					
ANR	8668391	ReturnType	static void		8668356	1					
ANR	8668392	Identifier	image_transform_png_set_packing_set		8668356	2					
ANR	8668393	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8668356	3					
ANR	8668394	Parameter	const image_transform * this	8736:36:275327:275353	8668356	0	True				
ANR	8668395	ParameterType	const image_transform *		8668356	0					
ANR	8668396	Identifier	this		8668356	1					
ANR	8668397	Parameter	transform_display * that	8737:4:275360:275382	8668356	1	True				
ANR	8668398	ParameterType	transform_display *		8668356	0					
ANR	8668399	Identifier	that		8668356	1					
ANR	8668400	Parameter	png_structp pp	8737:29:275385:275398	8668356	2	True				
ANR	8668401	ParameterType	png_structp		8668356	0					
ANR	8668402	Identifier	pp		8668356	1					
ANR	8668403	Parameter	png_infop pi	8737:45:275401:275412	8668356	3	True				
ANR	8668404	ParameterType	png_infop		8668356	0					
ANR	8668405	Identifier	pi		8668356	1					
ANR	8668406	CFGEntryNode	ENTRY		8668356		True				
ANR	8668407	CFGExitNode	EXIT		8668356		True				
ANR	8668408	Symbol	pp		8668356						
ANR	8668409	Symbol	* this		8668356						
ANR	8668410	Symbol	that		8668356						
ANR	8668411	Symbol	this -> next		8668356						
ANR	8668412	Symbol	this		8668356						
ANR	8668413	Symbol	pi		8668356						
ANR	8668414	Symbol	that -> unpacked		8668356						
ANR	8668415	Symbol	* that		8668356						
ANR	8668416	Function	image_transform_png_set_packing_mod	8744:0:275513:275994							
ANR	8668417	FunctionDef	"image_transform_png_set_packing_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8668416	0					
ANR	8668418	CompoundStatement		8748:0:275673:275994	8668416	0					
ANR	8668419	IfStatement	if ( that -> bit_depth < 8 )		8668416	0					
ANR	8668420	Condition	that -> bit_depth < 8	8753:7:275867:275885	8668416	0	True				
ANR	8668421	RelationalExpression	that -> bit_depth < 8		8668416	0		<			
ANR	8668422	PtrMemberAccess	that -> bit_depth		8668416	0					
ANR	8668423	Identifier	that		8668416	0					
ANR	8668424	Identifier	bit_depth		8668416	1					
ANR	8668425	PrimaryExpression	8		8668416	1					
ANR	8668426	ExpressionStatement	that -> bit_depth = 8	8754:6:275921:275940	8668416	1	True				
ANR	8668427	AssignmentExpression	that -> bit_depth = 8		8668416	0		=			
ANR	8668428	PtrMemberAccess	that -> bit_depth		8668416	0					
ANR	8668429	Identifier	that		8668416	0					
ANR	8668430	Identifier	bit_depth		8668416	1					
ANR	8668431	PrimaryExpression	8		8668416	1					
ANR	8668432	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8756:3:275946:275992	8668416	1	True				
ANR	8668433	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8668416	0					
ANR	8668434	Callee	this -> next -> mod		8668416	0					
ANR	8668435	PtrMemberAccess	this -> next -> mod		8668416	0					
ANR	8668436	PtrMemberAccess	this -> next		8668416	0					
ANR	8668437	Identifier	this		8668416	0					
ANR	8668438	Identifier	next		8668416	1					
ANR	8668439	Identifier	mod		8668416	1					
ANR	8668440	ArgumentList	this -> next		8668416	1					
ANR	8668441	Argument	this -> next		8668416	0					
ANR	8668442	PtrMemberAccess	this -> next		8668416	0					
ANR	8668443	Identifier	this		8668416	0					
ANR	8668444	Identifier	next		8668416	1					
ANR	8668445	Argument	that		8668416	1					
ANR	8668446	Identifier	that		8668416	0					
ANR	8668447	Argument	pp		8668416	2					
ANR	8668448	Identifier	pp		8668416	0					
ANR	8668449	Argument	display		8668416	3					
ANR	8668450	Identifier	display		8668416	0					
ANR	8668451	ReturnType	static void		8668416	1					
ANR	8668452	Identifier	image_transform_png_set_packing_mod		8668416	2					
ANR	8668453	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8668416	3					
ANR	8668454	Parameter	const image_transform * this	8745:36:275561:275587	8668416	0	True				
ANR	8668455	ParameterType	const image_transform *		8668416	0					
ANR	8668456	Identifier	this		8668416	1					
ANR	8668457	Parameter	image_pixel * that	8746:4:275594:275610	8668416	1	True				
ANR	8668458	ParameterType	image_pixel *		8668416	0					
ANR	8668459	Identifier	that		8668416	1					
ANR	8668460	Parameter	png_const_structp pp	8746:23:275613:275632	8668416	2	True				
ANR	8668461	ParameterType	png_const_structp		8668416	0					
ANR	8668462	Identifier	pp		8668416	1					
ANR	8668463	Parameter	const transform_display * display	8747:4:275639:275670	8668416	3	True				
ANR	8668464	ParameterType	const transform_display *		8668416	0					
ANR	8668465	Identifier	display		8668416	1					
ANR	8668466	CFGEntryNode	ENTRY		8668416		True				
ANR	8668467	CFGExitNode	EXIT		8668416		True				
ANR	8668468	Symbol	pp		8668416						
ANR	8668469	Symbol	* this		8668416						
ANR	8668470	Symbol	that		8668416						
ANR	8668471	Symbol	this -> next		8668416						
ANR	8668472	Symbol	display		8668416						
ANR	8668473	Symbol	this		8668416						
ANR	8668474	Symbol	* that		8668416						
ANR	8668475	Symbol	that -> bit_depth		8668416						
ANR	8668476	Function	image_transform_png_set_packing_add	8759:0:275997:276303							
ANR	8668477	FunctionDef	"image_transform_png_set_packing_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8668476	0					
ANR	8668478	CompoundStatement		8762:0:276143:276303	8668476	0					
ANR	8668479	Statement	UNUSED	8763:3:276148:276153	8668476	0	True				
ANR	8668480	ExpressionStatement	( colour_type ) this -> next = * that	8763:9:276154:276190	8668476	1	True				
ANR	8668481	AssignmentExpression	( colour_type ) this -> next = * that		8668476	0		=			
ANR	8668482	CastExpression	( colour_type ) this -> next		8668476	0					
ANR	8668483	CastTarget	colour_type		8668476	0					
ANR	8668484	PtrMemberAccess	this -> next		8668476	1					
ANR	8668485	Identifier	this		8668476	0					
ANR	8668486	Identifier	next		8668476	1					
ANR	8668487	UnaryOperationExpression	* that		8668476	1					
ANR	8668488	UnaryOperator	*		8668476	0					
ANR	8668489	Identifier	that		8668476	1					
ANR	8668490	ExpressionStatement	* that = this	8766:3:276195:276207	8668476	2	True				
ANR	8668491	AssignmentExpression	* that = this		8668476	0		=			
ANR	8668492	UnaryOperationExpression	* that		8668476	0					
ANR	8668493	UnaryOperator	*		8668476	0					
ANR	8668494	Identifier	that		8668476	1					
ANR	8668495	Identifier	this		8668476	1					
ANR	8668496	ReturnStatement	return bit_depth < 8 ;	8769:3:276281:276301	8668476	3	True				
ANR	8668497	RelationalExpression	bit_depth < 8		8668476	0		<			
ANR	8668498	Identifier	bit_depth		8668476	0					
ANR	8668499	PrimaryExpression	8		8668476	1					
ANR	8668500	ReturnType	static int		8668476	1					
ANR	8668501	Identifier	image_transform_png_set_packing_add		8668476	2					
ANR	8668502	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8668476	3					
ANR	8668503	Parameter	image_transform * this	8760:36:276044:276064	8668476	0	True				
ANR	8668504	ParameterType	image_transform *		8668476	0					
ANR	8668505	Identifier	this		8668476	1					
ANR	8668506	Parameter	const image_transform * * that	8761:4:276071:276098	8668476	1	True				
ANR	8668507	ParameterType	const image_transform * *		8668476	0					
ANR	8668508	Identifier	that		8668476	1					
ANR	8668509	Parameter	png_byte colour_type	8761:34:276101:276120	8668476	2	True				
ANR	8668510	ParameterType	png_byte		8668476	0					
ANR	8668511	Identifier	colour_type		8668476	1					
ANR	8668512	Parameter	png_byte bit_depth	8761:56:276123:276140	8668476	3	True				
ANR	8668513	ParameterType	png_byte		8668476	0					
ANR	8668514	Identifier	bit_depth		8668476	1					
ANR	8668515	CFGEntryNode	ENTRY		8668476		True				
ANR	8668516	CFGExitNode	EXIT		8668476		True				
ANR	8668517	Symbol	colour_type		8668476						
ANR	8668518	Symbol	* this		8668476						
ANR	8668519	Symbol	that		8668476						
ANR	8668520	Symbol	this -> next		8668476						
ANR	8668521	Symbol	this		8668476						
ANR	8668522	Symbol	* that		8668476						
ANR	8668523	Symbol	bit_depth		8668476						
ANR	8668524	Function	image_transform_png_set_packswap_set	8785:0:276635:276877							
ANR	8668525	FunctionDef	"image_transform_png_set_packswap_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8668524	0					
ANR	8668526	CompoundStatement		8788:0:276772:276877	8668524	0					
ANR	8668527	ExpressionStatement	png_set_packswap ( pp )	8789:3:276777:276797	8668524	0	True				
ANR	8668528	CallExpression	png_set_packswap ( pp )		8668524	0					
ANR	8668529	Callee	png_set_packswap		8668524	0					
ANR	8668530	Identifier	png_set_packswap		8668524	0					
ANR	8668531	ArgumentList	pp		8668524	1					
ANR	8668532	Argument	pp		8668524	0					
ANR	8668533	Identifier	pp		8668524	0					
ANR	8668534	ExpressionStatement	that -> this . littleendian = 1	8790:3:276802:276829	8668524	1	True				
ANR	8668535	AssignmentExpression	that -> this . littleendian = 1		8668524	0		=			
ANR	8668536	MemberAccess	that -> this . littleendian		8668524	0					
ANR	8668537	PtrMemberAccess	that -> this		8668524	0					
ANR	8668538	Identifier	that		8668524	0					
ANR	8668539	Identifier	this		8668524	1					
ANR	8668540	Identifier	littleendian		8668524	1					
ANR	8668541	PrimaryExpression	1		8668524	1					
ANR	8668542	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8791:3:276834:276875	8668524	2	True				
ANR	8668543	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8668524	0					
ANR	8668544	Callee	this -> next -> set		8668524	0					
ANR	8668545	PtrMemberAccess	this -> next -> set		8668524	0					
ANR	8668546	PtrMemberAccess	this -> next		8668524	0					
ANR	8668547	Identifier	this		8668524	0					
ANR	8668548	Identifier	next		8668524	1					
ANR	8668549	Identifier	set		8668524	1					
ANR	8668550	ArgumentList	this -> next		8668524	1					
ANR	8668551	Argument	this -> next		8668524	0					
ANR	8668552	PtrMemberAccess	this -> next		8668524	0					
ANR	8668553	Identifier	this		8668524	0					
ANR	8668554	Identifier	next		8668524	1					
ANR	8668555	Argument	that		8668524	1					
ANR	8668556	Identifier	that		8668524	0					
ANR	8668557	Argument	pp		8668524	2					
ANR	8668558	Identifier	pp		8668524	0					
ANR	8668559	Argument	pi		8668524	3					
ANR	8668560	Identifier	pi		8668524	0					
ANR	8668561	ReturnType	static void		8668524	1					
ANR	8668562	Identifier	image_transform_png_set_packswap_set		8668524	2					
ANR	8668563	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8668524	3					
ANR	8668564	Parameter	const image_transform * this	8786:37:276684:276710	8668524	0	True				
ANR	8668565	ParameterType	const image_transform *		8668524	0					
ANR	8668566	Identifier	this		8668524	1					
ANR	8668567	Parameter	transform_display * that	8787:4:276717:276739	8668524	1	True				
ANR	8668568	ParameterType	transform_display *		8668524	0					
ANR	8668569	Identifier	that		8668524	1					
ANR	8668570	Parameter	png_structp pp	8787:29:276742:276755	8668524	2	True				
ANR	8668571	ParameterType	png_structp		8668524	0					
ANR	8668572	Identifier	pp		8668524	1					
ANR	8668573	Parameter	png_infop pi	8787:45:276758:276769	8668524	3	True				
ANR	8668574	ParameterType	png_infop		8668524	0					
ANR	8668575	Identifier	pi		8668524	1					
ANR	8668576	CFGEntryNode	ENTRY		8668524		True				
ANR	8668577	CFGExitNode	EXIT		8668524		True				
ANR	8668578	Symbol	pp		8668524						
ANR	8668579	Symbol	* this		8668524						
ANR	8668580	Symbol	that		8668524						
ANR	8668581	Symbol	that -> this		8668524						
ANR	8668582	Symbol	this -> next		8668524						
ANR	8668583	Symbol	that -> this . littleendian		8668524						
ANR	8668584	Symbol	this		8668524						
ANR	8668585	Symbol	pi		8668524						
ANR	8668586	Symbol	* that		8668524						
ANR	8668587	Function	image_transform_png_set_packswap_mod	8794:0:276880:277153							
ANR	8668588	FunctionDef	"image_transform_png_set_packswap_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8668587	0					
ANR	8668589	CompoundStatement		8798:0:277041:277153	8668587	0					
ANR	8668590	IfStatement	if ( that -> bit_depth < 8 )		8668587	0					
ANR	8668591	Condition	that -> bit_depth < 8	8799:7:277050:277068	8668587	0	True				
ANR	8668592	RelationalExpression	that -> bit_depth < 8		8668587	0		<			
ANR	8668593	PtrMemberAccess	that -> bit_depth		8668587	0					
ANR	8668594	Identifier	that		8668587	0					
ANR	8668595	Identifier	bit_depth		8668587	1					
ANR	8668596	PrimaryExpression	8		8668587	1					
ANR	8668597	ExpressionStatement	that -> littleendian = 1	8800:6:277077:277099	8668587	1	True				
ANR	8668598	AssignmentExpression	that -> littleendian = 1		8668587	0		=			
ANR	8668599	PtrMemberAccess	that -> littleendian		8668587	0					
ANR	8668600	Identifier	that		8668587	0					
ANR	8668601	Identifier	littleendian		8668587	1					
ANR	8668602	PrimaryExpression	1		8668587	1					
ANR	8668603	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8802:3:277105:277151	8668587	1	True				
ANR	8668604	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8668587	0					
ANR	8668605	Callee	this -> next -> mod		8668587	0					
ANR	8668606	PtrMemberAccess	this -> next -> mod		8668587	0					
ANR	8668607	PtrMemberAccess	this -> next		8668587	0					
ANR	8668608	Identifier	this		8668587	0					
ANR	8668609	Identifier	next		8668587	1					
ANR	8668610	Identifier	mod		8668587	1					
ANR	8668611	ArgumentList	this -> next		8668587	1					
ANR	8668612	Argument	this -> next		8668587	0					
ANR	8668613	PtrMemberAccess	this -> next		8668587	0					
ANR	8668614	Identifier	this		8668587	0					
ANR	8668615	Identifier	next		8668587	1					
ANR	8668616	Argument	that		8668587	1					
ANR	8668617	Identifier	that		8668587	0					
ANR	8668618	Argument	pp		8668587	2					
ANR	8668619	Identifier	pp		8668587	0					
ANR	8668620	Argument	display		8668587	3					
ANR	8668621	Identifier	display		8668587	0					
ANR	8668622	ReturnType	static void		8668587	1					
ANR	8668623	Identifier	image_transform_png_set_packswap_mod		8668587	2					
ANR	8668624	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8668587	3					
ANR	8668625	Parameter	const image_transform * this	8795:37:276929:276955	8668587	0	True				
ANR	8668626	ParameterType	const image_transform *		8668587	0					
ANR	8668627	Identifier	this		8668587	1					
ANR	8668628	Parameter	image_pixel * that	8796:4:276962:276978	8668587	1	True				
ANR	8668629	ParameterType	image_pixel *		8668587	0					
ANR	8668630	Identifier	that		8668587	1					
ANR	8668631	Parameter	png_const_structp pp	8796:23:276981:277000	8668587	2	True				
ANR	8668632	ParameterType	png_const_structp		8668587	0					
ANR	8668633	Identifier	pp		8668587	1					
ANR	8668634	Parameter	const transform_display * display	8797:4:277007:277038	8668587	3	True				
ANR	8668635	ParameterType	const transform_display *		8668587	0					
ANR	8668636	Identifier	display		8668587	1					
ANR	8668637	CFGEntryNode	ENTRY		8668587		True				
ANR	8668638	CFGExitNode	EXIT		8668587		True				
ANR	8668639	Symbol	pp		8668587						
ANR	8668640	Symbol	* this		8668587						
ANR	8668641	Symbol	that		8668587						
ANR	8668642	Symbol	that -> littleendian		8668587						
ANR	8668643	Symbol	this -> next		8668587						
ANR	8668644	Symbol	display		8668587						
ANR	8668645	Symbol	this		8668587						
ANR	8668646	Symbol	* that		8668587						
ANR	8668647	Symbol	that -> bit_depth		8668587						
ANR	8668648	Function	image_transform_png_set_packswap_add	8805:0:277156:277395							
ANR	8668649	FunctionDef	"image_transform_png_set_packswap_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8668648	0					
ANR	8668650	CompoundStatement		8808:0:277303:277395	8668648	0					
ANR	8668651	Statement	UNUSED	8809:3:277308:277313	8668648	0	True				
ANR	8668652	ExpressionStatement	( colour_type ) this -> next = * that	8809:9:277314:277350	8668648	1	True				
ANR	8668653	AssignmentExpression	( colour_type ) this -> next = * that		8668648	0		=			
ANR	8668654	CastExpression	( colour_type ) this -> next		8668648	0					
ANR	8668655	CastTarget	colour_type		8668648	0					
ANR	8668656	PtrMemberAccess	this -> next		8668648	1					
ANR	8668657	Identifier	this		8668648	0					
ANR	8668658	Identifier	next		8668648	1					
ANR	8668659	UnaryOperationExpression	* that		8668648	1					
ANR	8668660	UnaryOperator	*		8668648	0					
ANR	8668661	Identifier	that		8668648	1					
ANR	8668662	ExpressionStatement	* that = this	8812:3:277355:277367	8668648	2	True				
ANR	8668663	AssignmentExpression	* that = this		8668648	0		=			
ANR	8668664	UnaryOperationExpression	* that		8668648	0					
ANR	8668665	UnaryOperator	*		8668648	0					
ANR	8668666	Identifier	that		8668648	1					
ANR	8668667	Identifier	this		8668648	1					
ANR	8668668	ReturnStatement	return bit_depth < 8 ;	8814:3:277373:277393	8668648	3	True				
ANR	8668669	RelationalExpression	bit_depth < 8		8668648	0		<			
ANR	8668670	Identifier	bit_depth		8668648	0					
ANR	8668671	PrimaryExpression	8		8668648	1					
ANR	8668672	ReturnType	static int		8668648	1					
ANR	8668673	Identifier	image_transform_png_set_packswap_add		8668648	2					
ANR	8668674	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8668648	3					
ANR	8668675	Parameter	image_transform * this	8806:37:277204:277224	8668648	0	True				
ANR	8668676	ParameterType	image_transform *		8668648	0					
ANR	8668677	Identifier	this		8668648	1					
ANR	8668678	Parameter	const image_transform * * that	8807:4:277231:277258	8668648	1	True				
ANR	8668679	ParameterType	const image_transform * *		8668648	0					
ANR	8668680	Identifier	that		8668648	1					
ANR	8668681	Parameter	png_byte colour_type	8807:34:277261:277280	8668648	2	True				
ANR	8668682	ParameterType	png_byte		8668648	0					
ANR	8668683	Identifier	colour_type		8668648	1					
ANR	8668684	Parameter	png_byte bit_depth	8807:56:277283:277300	8668648	3	True				
ANR	8668685	ParameterType	png_byte		8668648	0					
ANR	8668686	Identifier	bit_depth		8668648	1					
ANR	8668687	CFGEntryNode	ENTRY		8668648		True				
ANR	8668688	CFGExitNode	EXIT		8668648		True				
ANR	8668689	Symbol	colour_type		8668648						
ANR	8668690	Symbol	* this		8668648						
ANR	8668691	Symbol	that		8668648						
ANR	8668692	Symbol	this -> next		8668648						
ANR	8668693	Symbol	this		8668648						
ANR	8668694	Symbol	* that		8668648						
ANR	8668695	Symbol	bit_depth		8668648						
ANR	8668696	Function	image_transform_png_set_invert_mono_set	8830:0:277640:277856							
ANR	8668697	FunctionDef	"image_transform_png_set_invert_mono_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8668696	0					
ANR	8668698	CompoundStatement		8833:0:277780:277856	8668696	0					
ANR	8668699	ExpressionStatement	png_set_invert_mono ( pp )	8834:3:277785:277808	8668696	0	True				
ANR	8668700	CallExpression	png_set_invert_mono ( pp )		8668696	0					
ANR	8668701	Callee	png_set_invert_mono		8668696	0					
ANR	8668702	Identifier	png_set_invert_mono		8668696	0					
ANR	8668703	ArgumentList	pp		8668696	1					
ANR	8668704	Argument	pp		8668696	0					
ANR	8668705	Identifier	pp		8668696	0					
ANR	8668706	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8835:3:277813:277854	8668696	1	True				
ANR	8668707	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8668696	0					
ANR	8668708	Callee	this -> next -> set		8668696	0					
ANR	8668709	PtrMemberAccess	this -> next -> set		8668696	0					
ANR	8668710	PtrMemberAccess	this -> next		8668696	0					
ANR	8668711	Identifier	this		8668696	0					
ANR	8668712	Identifier	next		8668696	1					
ANR	8668713	Identifier	set		8668696	1					
ANR	8668714	ArgumentList	this -> next		8668696	1					
ANR	8668715	Argument	this -> next		8668696	0					
ANR	8668716	PtrMemberAccess	this -> next		8668696	0					
ANR	8668717	Identifier	this		8668696	0					
ANR	8668718	Identifier	next		8668696	1					
ANR	8668719	Argument	that		8668696	1					
ANR	8668720	Identifier	that		8668696	0					
ANR	8668721	Argument	pp		8668696	2					
ANR	8668722	Identifier	pp		8668696	0					
ANR	8668723	Argument	pi		8668696	3					
ANR	8668724	Identifier	pi		8668696	0					
ANR	8668725	ReturnType	static void		8668696	1					
ANR	8668726	Identifier	image_transform_png_set_invert_mono_set		8668696	2					
ANR	8668727	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8668696	3					
ANR	8668728	Parameter	const image_transform * this	8831:40:277692:277718	8668696	0	True				
ANR	8668729	ParameterType	const image_transform *		8668696	0					
ANR	8668730	Identifier	this		8668696	1					
ANR	8668731	Parameter	transform_display * that	8832:4:277725:277747	8668696	1	True				
ANR	8668732	ParameterType	transform_display *		8668696	0					
ANR	8668733	Identifier	that		8668696	1					
ANR	8668734	Parameter	png_structp pp	8832:29:277750:277763	8668696	2	True				
ANR	8668735	ParameterType	png_structp		8668696	0					
ANR	8668736	Identifier	pp		8668696	1					
ANR	8668737	Parameter	png_infop pi	8832:45:277766:277777	8668696	3	True				
ANR	8668738	ParameterType	png_infop		8668696	0					
ANR	8668739	Identifier	pi		8668696	1					
ANR	8668740	CFGEntryNode	ENTRY		8668696		True				
ANR	8668741	CFGExitNode	EXIT		8668696		True				
ANR	8668742	Symbol	pp		8668696						
ANR	8668743	Symbol	* this		8668696						
ANR	8668744	Symbol	that		8668696						
ANR	8668745	Symbol	this -> next		8668696						
ANR	8668746	Symbol	this		8668696						
ANR	8668747	Symbol	pi		8668696						
ANR	8668748	Function	image_transform_png_set_invert_mono_mod	8838:0:277859:278138							
ANR	8668749	FunctionDef	"image_transform_png_set_invert_mono_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8668748	0					
ANR	8668750	CompoundStatement		8842:0:278023:278138	8668748	0					
ANR	8668751	IfStatement	if ( that -> colour_type & 4 )		8668748	0					
ANR	8668752	Condition	that -> colour_type & 4	8843:7:278032:278052	8668748	0	True				
ANR	8668753	BitAndExpression	that -> colour_type & 4		8668748	0		&			
ANR	8668754	PtrMemberAccess	that -> colour_type		8668748	0					
ANR	8668755	Identifier	that		8668748	0					
ANR	8668756	Identifier	colour_type		8668748	1					
ANR	8668757	PrimaryExpression	4		8668748	1					
ANR	8668758	ExpressionStatement	that -> mono_inverted = 1	8844:6:278061:278084	8668748	1	True				
ANR	8668759	AssignmentExpression	that -> mono_inverted = 1		8668748	0		=			
ANR	8668760	PtrMemberAccess	that -> mono_inverted		8668748	0					
ANR	8668761	Identifier	that		8668748	0					
ANR	8668762	Identifier	mono_inverted		8668748	1					
ANR	8668763	PrimaryExpression	1		8668748	1					
ANR	8668764	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8846:3:278090:278136	8668748	1	True				
ANR	8668765	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8668748	0					
ANR	8668766	Callee	this -> next -> mod		8668748	0					
ANR	8668767	PtrMemberAccess	this -> next -> mod		8668748	0					
ANR	8668768	PtrMemberAccess	this -> next		8668748	0					
ANR	8668769	Identifier	this		8668748	0					
ANR	8668770	Identifier	next		8668748	1					
ANR	8668771	Identifier	mod		8668748	1					
ANR	8668772	ArgumentList	this -> next		8668748	1					
ANR	8668773	Argument	this -> next		8668748	0					
ANR	8668774	PtrMemberAccess	this -> next		8668748	0					
ANR	8668775	Identifier	this		8668748	0					
ANR	8668776	Identifier	next		8668748	1					
ANR	8668777	Argument	that		8668748	1					
ANR	8668778	Identifier	that		8668748	0					
ANR	8668779	Argument	pp		8668748	2					
ANR	8668780	Identifier	pp		8668748	0					
ANR	8668781	Argument	display		8668748	3					
ANR	8668782	Identifier	display		8668748	0					
ANR	8668783	ReturnType	static void		8668748	1					
ANR	8668784	Identifier	image_transform_png_set_invert_mono_mod		8668748	2					
ANR	8668785	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8668748	3					
ANR	8668786	Parameter	const image_transform * this	8839:40:277911:277937	8668748	0	True				
ANR	8668787	ParameterType	const image_transform *		8668748	0					
ANR	8668788	Identifier	this		8668748	1					
ANR	8668789	Parameter	image_pixel * that	8840:4:277944:277960	8668748	1	True				
ANR	8668790	ParameterType	image_pixel *		8668748	0					
ANR	8668791	Identifier	that		8668748	1					
ANR	8668792	Parameter	png_const_structp pp	8840:23:277963:277982	8668748	2	True				
ANR	8668793	ParameterType	png_const_structp		8668748	0					
ANR	8668794	Identifier	pp		8668748	1					
ANR	8668795	Parameter	const transform_display * display	8841:4:277989:278020	8668748	3	True				
ANR	8668796	ParameterType	const transform_display *		8668748	0					
ANR	8668797	Identifier	display		8668748	1					
ANR	8668798	CFGEntryNode	ENTRY		8668748		True				
ANR	8668799	CFGExitNode	EXIT		8668748		True				
ANR	8668800	Symbol	pp		8668748						
ANR	8668801	Symbol	* this		8668748						
ANR	8668802	Symbol	that		8668748						
ANR	8668803	Symbol	that -> colour_type		8668748						
ANR	8668804	Symbol	this -> next		8668748						
ANR	8668805	Symbol	display		8668748						
ANR	8668806	Symbol	this		8668748						
ANR	8668807	Symbol	* that		8668748						
ANR	8668808	Symbol	that -> mono_inverted		8668748						
ANR	8668809	Function	image_transform_png_set_invert_mono_add	8849:0:278141:278444							
ANR	8668810	FunctionDef	"image_transform_png_set_invert_mono_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8668809	0					
ANR	8668811	CompoundStatement		8852:0:278291:278444	8668809	0					
ANR	8668812	Statement	UNUSED	8853:3:278296:278301	8668809	0	True				
ANR	8668813	ExpressionStatement	( bit_depth ) this -> next = * that	8853:9:278302:278336	8668809	1	True				
ANR	8668814	AssignmentExpression	( bit_depth ) this -> next = * that		8668809	0		=			
ANR	8668815	CastExpression	( bit_depth ) this -> next		8668809	0					
ANR	8668816	CastTarget	bit_depth		8668809	0					
ANR	8668817	PtrMemberAccess	this -> next		8668809	1					
ANR	8668818	Identifier	this		8668809	0					
ANR	8668819	Identifier	next		8668809	1					
ANR	8668820	UnaryOperationExpression	* that		8668809	1					
ANR	8668821	UnaryOperator	*		8668809	0					
ANR	8668822	Identifier	that		8668809	1					
ANR	8668823	ExpressionStatement	* that = this	8856:3:278341:278353	8668809	2	True				
ANR	8668824	AssignmentExpression	* that = this		8668809	0		=			
ANR	8668825	UnaryOperationExpression	* that		8668809	0					
ANR	8668826	UnaryOperator	*		8668809	0					
ANR	8668827	Identifier	that		8668809	1					
ANR	8668828	Identifier	this		8668809	1					
ANR	8668829	ReturnStatement	return ( colour_type & 2 ) == 0 ;	8859:3:278413:278442	8668809	3	True				
ANR	8668830	EqualityExpression	( colour_type & 2 ) == 0		8668809	0		==			
ANR	8668831	BitAndExpression	colour_type & 2		8668809	0		&			
ANR	8668832	Identifier	colour_type		8668809	0					
ANR	8668833	PrimaryExpression	2		8668809	1					
ANR	8668834	PrimaryExpression	0		8668809	1					
ANR	8668835	ReturnType	static int		8668809	1					
ANR	8668836	Identifier	image_transform_png_set_invert_mono_add		8668809	2					
ANR	8668837	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8668809	3					
ANR	8668838	Parameter	image_transform * this	8850:40:278192:278212	8668809	0	True				
ANR	8668839	ParameterType	image_transform *		8668809	0					
ANR	8668840	Identifier	this		8668809	1					
ANR	8668841	Parameter	const image_transform * * that	8851:4:278219:278246	8668809	1	True				
ANR	8668842	ParameterType	const image_transform * *		8668809	0					
ANR	8668843	Identifier	that		8668809	1					
ANR	8668844	Parameter	png_byte colour_type	8851:34:278249:278268	8668809	2	True				
ANR	8668845	ParameterType	png_byte		8668809	0					
ANR	8668846	Identifier	colour_type		8668809	1					
ANR	8668847	Parameter	png_byte bit_depth	8851:56:278271:278288	8668809	3	True				
ANR	8668848	ParameterType	png_byte		8668809	0					
ANR	8668849	Identifier	bit_depth		8668809	1					
ANR	8668850	CFGEntryNode	ENTRY		8668809		True				
ANR	8668851	CFGExitNode	EXIT		8668809		True				
ANR	8668852	Symbol	colour_type		8668809						
ANR	8668853	Symbol	* this		8668809						
ANR	8668854	Symbol	that		8668809						
ANR	8668855	Symbol	this -> next		8668809						
ANR	8668856	Symbol	this		8668809						
ANR	8668857	Symbol	* that		8668809						
ANR	8668858	Symbol	bit_depth		8668809						
ANR	8668859	DeclStmt									
ANR	8668860	Decl							png_color_8	png_color_8	data
ANR	8668861	Function	image_transform_png_set_shift_set	8877:0:278776:279638							
ANR	8668862	FunctionDef	"image_transform_png_set_shift_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8668861	0					
ANR	8668863	CompoundStatement		8880:0:278910:279638	8668861	0					
ANR	8668864	IdentifierDeclStatement	const unsigned int depth = that -> this . bit_depth ;	8887:3:279231:279278	8668861	0	True				
ANR	8668865	IdentifierDecl	depth = that -> this . bit_depth		8668861	0					
ANR	8668866	IdentifierDeclType	const unsigned int		8668861	0					
ANR	8668867	Identifier	depth		8668861	1					
ANR	8668868	AssignmentExpression	depth = that -> this . bit_depth		8668861	2		=			
ANR	8668869	Identifier	depth		8668861	0					
ANR	8668870	MemberAccess	that -> this . bit_depth		8668861	1					
ANR	8668871	PtrMemberAccess	that -> this		8668861	0					
ANR	8668872	Identifier	that		8668861	0					
ANR	8668873	Identifier	this		8668861	1					
ANR	8668874	Identifier	bit_depth		8668861	1					
ANR	8668875	ExpressionStatement	data . red = ( png_byte ) ( random_mod ( depth ) + 1 )	8889:3:279284:279334	8668861	1	True				
ANR	8668876	AssignmentExpression	data . red = ( png_byte ) ( random_mod ( depth ) + 1 )		8668861	0		=			
ANR	8668877	MemberAccess	data . red		8668861	0					
ANR	8668878	Identifier	data		8668861	0					
ANR	8668879	Identifier	red		8668861	1					
ANR	8668880	CastExpression	( png_byte ) ( random_mod ( depth ) + 1 )		8668861	1					
ANR	8668881	CastTarget	png_byte		8668861	0					
ANR	8668882	AdditiveExpression	random_mod ( depth ) + 1		8668861	1		+			
ANR	8668883	CallExpression	random_mod ( depth )		8668861	0					
ANR	8668884	Callee	random_mod		8668861	0					
ANR	8668885	Identifier	random_mod		8668861	0					
ANR	8668886	ArgumentList	depth		8668861	1					
ANR	8668887	Argument	depth		8668861	0					
ANR	8668888	Identifier	depth		8668861	0					
ANR	8668889	PrimaryExpression	1		8668861	1					
ANR	8668890	ExpressionStatement	data . green = ( png_byte ) ( random_mod ( depth ) + 1 )	8890:3:279339:279391	8668861	2	True				
ANR	8668891	AssignmentExpression	data . green = ( png_byte ) ( random_mod ( depth ) + 1 )		8668861	0		=			
ANR	8668892	MemberAccess	data . green		8668861	0					
ANR	8668893	Identifier	data		8668861	0					
ANR	8668894	Identifier	green		8668861	1					
ANR	8668895	CastExpression	( png_byte ) ( random_mod ( depth ) + 1 )		8668861	1					
ANR	8668896	CastTarget	png_byte		8668861	0					
ANR	8668897	AdditiveExpression	random_mod ( depth ) + 1		8668861	1		+			
ANR	8668898	CallExpression	random_mod ( depth )		8668861	0					
ANR	8668899	Callee	random_mod		8668861	0					
ANR	8668900	Identifier	random_mod		8668861	0					
ANR	8668901	ArgumentList	depth		8668861	1					
ANR	8668902	Argument	depth		8668861	0					
ANR	8668903	Identifier	depth		8668861	0					
ANR	8668904	PrimaryExpression	1		8668861	1					
ANR	8668905	ExpressionStatement	data . blue = ( png_byte ) ( random_mod ( depth ) + 1 )	8891:3:279396:279447	8668861	3	True				
ANR	8668906	AssignmentExpression	data . blue = ( png_byte ) ( random_mod ( depth ) + 1 )		8668861	0		=			
ANR	8668907	MemberAccess	data . blue		8668861	0					
ANR	8668908	Identifier	data		8668861	0					
ANR	8668909	Identifier	blue		8668861	1					
ANR	8668910	CastExpression	( png_byte ) ( random_mod ( depth ) + 1 )		8668861	1					
ANR	8668911	CastTarget	png_byte		8668861	0					
ANR	8668912	AdditiveExpression	random_mod ( depth ) + 1		8668861	1		+			
ANR	8668913	CallExpression	random_mod ( depth )		8668861	0					
ANR	8668914	Callee	random_mod		8668861	0					
ANR	8668915	Identifier	random_mod		8668861	0					
ANR	8668916	ArgumentList	depth		8668861	1					
ANR	8668917	Argument	depth		8668861	0					
ANR	8668918	Identifier	depth		8668861	0					
ANR	8668919	PrimaryExpression	1		8668861	1					
ANR	8668920	ExpressionStatement	data . gray = ( png_byte ) ( random_mod ( depth ) + 1 )	8892:3:279452:279503	8668861	4	True				
ANR	8668921	AssignmentExpression	data . gray = ( png_byte ) ( random_mod ( depth ) + 1 )		8668861	0		=			
ANR	8668922	MemberAccess	data . gray		8668861	0					
ANR	8668923	Identifier	data		8668861	0					
ANR	8668924	Identifier	gray		8668861	1					
ANR	8668925	CastExpression	( png_byte ) ( random_mod ( depth ) + 1 )		8668861	1					
ANR	8668926	CastTarget	png_byte		8668861	0					
ANR	8668927	AdditiveExpression	random_mod ( depth ) + 1		8668861	1		+			
ANR	8668928	CallExpression	random_mod ( depth )		8668861	0					
ANR	8668929	Callee	random_mod		8668861	0					
ANR	8668930	Identifier	random_mod		8668861	0					
ANR	8668931	ArgumentList	depth		8668861	1					
ANR	8668932	Argument	depth		8668861	0					
ANR	8668933	Identifier	depth		8668861	0					
ANR	8668934	PrimaryExpression	1		8668861	1					
ANR	8668935	ExpressionStatement	data . alpha = ( png_byte ) ( random_mod ( depth ) + 1 )	8893:3:279508:279560	8668861	5	True				
ANR	8668936	AssignmentExpression	data . alpha = ( png_byte ) ( random_mod ( depth ) + 1 )		8668861	0		=			
ANR	8668937	MemberAccess	data . alpha		8668861	0					
ANR	8668938	Identifier	data		8668861	0					
ANR	8668939	Identifier	alpha		8668861	1					
ANR	8668940	CastExpression	( png_byte ) ( random_mod ( depth ) + 1 )		8668861	1					
ANR	8668941	CastTarget	png_byte		8668861	0					
ANR	8668942	AdditiveExpression	random_mod ( depth ) + 1		8668861	1		+			
ANR	8668943	CallExpression	random_mod ( depth )		8668861	0					
ANR	8668944	Callee	random_mod		8668861	0					
ANR	8668945	Identifier	random_mod		8668861	0					
ANR	8668946	ArgumentList	depth		8668861	1					
ANR	8668947	Argument	depth		8668861	0					
ANR	8668948	Identifier	depth		8668861	0					
ANR	8668949	PrimaryExpression	1		8668861	1					
ANR	8668950	ExpressionStatement	"png_set_shift ( pp , & data )"	8895:3:279566:279590	8668861	6	True				
ANR	8668951	CallExpression	"png_set_shift ( pp , & data )"		8668861	0					
ANR	8668952	Callee	png_set_shift		8668861	0					
ANR	8668953	Identifier	png_set_shift		8668861	0					
ANR	8668954	ArgumentList	pp		8668861	1					
ANR	8668955	Argument	pp		8668861	0					
ANR	8668956	Identifier	pp		8668861	0					
ANR	8668957	Argument	& data		8668861	1					
ANR	8668958	UnaryOperationExpression	& data		8668861	0					
ANR	8668959	UnaryOperator	&		8668861	0					
ANR	8668960	Identifier	data		8668861	1					
ANR	8668961	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8896:3:279595:279636	8668861	7	True				
ANR	8668962	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8668861	0					
ANR	8668963	Callee	this -> next -> set		8668861	0					
ANR	8668964	PtrMemberAccess	this -> next -> set		8668861	0					
ANR	8668965	PtrMemberAccess	this -> next		8668861	0					
ANR	8668966	Identifier	this		8668861	0					
ANR	8668967	Identifier	next		8668861	1					
ANR	8668968	Identifier	set		8668861	1					
ANR	8668969	ArgumentList	this -> next		8668861	1					
ANR	8668970	Argument	this -> next		8668861	0					
ANR	8668971	PtrMemberAccess	this -> next		8668861	0					
ANR	8668972	Identifier	this		8668861	0					
ANR	8668973	Identifier	next		8668861	1					
ANR	8668974	Argument	that		8668861	1					
ANR	8668975	Identifier	that		8668861	0					
ANR	8668976	Argument	pp		8668861	2					
ANR	8668977	Identifier	pp		8668861	0					
ANR	8668978	Argument	pi		8668861	3					
ANR	8668979	Identifier	pi		8668861	0					
ANR	8668980	ReturnType	static void		8668861	1					
ANR	8668981	Identifier	image_transform_png_set_shift_set		8668861	2					
ANR	8668982	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8668861	3					
ANR	8668983	Parameter	const image_transform * this	8878:34:278822:278848	8668861	0	True				
ANR	8668984	ParameterType	const image_transform *		8668861	0					
ANR	8668985	Identifier	this		8668861	1					
ANR	8668986	Parameter	transform_display * that	8879:4:278855:278877	8668861	1	True				
ANR	8668987	ParameterType	transform_display *		8668861	0					
ANR	8668988	Identifier	that		8668861	1					
ANR	8668989	Parameter	png_structp pp	8879:29:278880:278893	8668861	2	True				
ANR	8668990	ParameterType	png_structp		8668861	0					
ANR	8668991	Identifier	pp		8668861	1					
ANR	8668992	Parameter	png_infop pi	8879:45:278896:278907	8668861	3	True				
ANR	8668993	ParameterType	png_infop		8668861	0					
ANR	8668994	Identifier	pi		8668861	1					
ANR	8668995	CFGEntryNode	ENTRY		8668861		True				
ANR	8668996	CFGExitNode	EXIT		8668861		True				
ANR	8668997	Symbol	pp		8668861						
ANR	8668998	Symbol	data		8668861						
ANR	8668999	Symbol	this -> next		8668861						
ANR	8669000	Symbol	this		8668861						
ANR	8669001	Symbol	& data		8668861						
ANR	8669002	Symbol	random_mod		8668861						
ANR	8669003	Symbol	* this		8668861						
ANR	8669004	Symbol	that		8668861						
ANR	8669005	Symbol	depth		8668861						
ANR	8669006	Symbol	that -> this		8668861						
ANR	8669007	Symbol	data . blue		8668861						
ANR	8669008	Symbol	pi		8668861						
ANR	8669009	Symbol	* that		8668861						
ANR	8669010	Symbol	data . green		8668861						
ANR	8669011	Symbol	data . gray		8668861						
ANR	8669012	Symbol	data . alpha		8668861						
ANR	8669013	Symbol	that -> this . bit_depth		8668861						
ANR	8669014	Symbol	data . red		8668861						
ANR	8669015	Function	image_transform_png_set_shift_mod	8899:0:279641:280541							
ANR	8669016	FunctionDef	"image_transform_png_set_shift_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8669015	0					
ANR	8669017	CompoundStatement		8903:0:279799:280541	8669015	0					
ANR	8669018	IfStatement	if ( that -> colour_type != PNG_COLOR_TYPE_PALETTE )		8669015	0					
ANR	8669019	Condition	that -> colour_type != PNG_COLOR_TYPE_PALETTE	8907:7:279918:279960	8669015	0	True				
ANR	8669020	EqualityExpression	that -> colour_type != PNG_COLOR_TYPE_PALETTE		8669015	0		!=			
ANR	8669021	PtrMemberAccess	that -> colour_type		8669015	0					
ANR	8669022	Identifier	that		8669015	0					
ANR	8669023	Identifier	colour_type		8669015	1					
ANR	8669024	Identifier	PNG_COLOR_TYPE_PALETTE		8669015	1					
ANR	8669025	CompoundStatement		6:3:166:166	8669015	1					
ANR	8669026	ExpressionStatement	that -> sig_bits = 1	8909:7:279975:279993	8669015	0	True				
ANR	8669027	AssignmentExpression	that -> sig_bits = 1		8669015	0		=			
ANR	8669028	PtrMemberAccess	that -> sig_bits		8669015	0					
ANR	8669029	Identifier	that		8669015	0					
ANR	8669030	Identifier	sig_bits		8669015	1					
ANR	8669031	PrimaryExpression	1		8669015	1					
ANR	8669032	IfStatement	if ( that -> colour_type & 2 )		8669015	1					
ANR	8669033	Condition	that -> colour_type & 2	8915:11:280157:280177	8669015	0	True				
ANR	8669034	BitAndExpression	that -> colour_type & 2		8669015	0		&			
ANR	8669035	PtrMemberAccess	that -> colour_type		8669015	0					
ANR	8669036	Identifier	that		8669015	0					
ANR	8669037	Identifier	colour_type		8669015	1					
ANR	8669038	PrimaryExpression	2		8669015	1					
ANR	8669039	CompoundStatement		14:7:406:406	8669015	1					
ANR	8669040	ExpressionStatement	that -> red_sBIT = data . red	8917:10:280218:280243	8669015	0	True				
ANR	8669041	AssignmentExpression	that -> red_sBIT = data . red		8669015	0		=			
ANR	8669042	PtrMemberAccess	that -> red_sBIT		8669015	0					
ANR	8669043	Identifier	that		8669015	0					
ANR	8669044	Identifier	red_sBIT		8669015	1					
ANR	8669045	MemberAccess	data . red		8669015	1					
ANR	8669046	Identifier	data		8669015	0					
ANR	8669047	Identifier	red		8669015	1					
ANR	8669048	ExpressionStatement	that -> green_sBIT = data . green	8918:10:280255:280284	8669015	1	True				
ANR	8669049	AssignmentExpression	that -> green_sBIT = data . green		8669015	0		=			
ANR	8669050	PtrMemberAccess	that -> green_sBIT		8669015	0					
ANR	8669051	Identifier	that		8669015	0					
ANR	8669052	Identifier	green_sBIT		8669015	1					
ANR	8669053	MemberAccess	data . green		8669015	1					
ANR	8669054	Identifier	data		8669015	0					
ANR	8669055	Identifier	green		8669015	1					
ANR	8669056	ExpressionStatement	that -> blue_sBIT = data . blue	8919:10:280296:280323	8669015	2	True				
ANR	8669057	AssignmentExpression	that -> blue_sBIT = data . blue		8669015	0		=			
ANR	8669058	PtrMemberAccess	that -> blue_sBIT		8669015	0					
ANR	8669059	Identifier	that		8669015	0					
ANR	8669060	Identifier	blue_sBIT		8669015	1					
ANR	8669061	MemberAccess	data . blue		8669015	1					
ANR	8669062	Identifier	data		8669015	0					
ANR	8669063	Identifier	blue		8669015	1					
ANR	8669064	ElseStatement	else		8669015	0					
ANR	8669065	ExpressionStatement	that -> red_sBIT = that -> green_sBIT = that -> blue_sBIT = data . gray	8923:10:280380:280443	8669015	0	True				
ANR	8669066	AssignmentExpression	that -> red_sBIT = that -> green_sBIT = that -> blue_sBIT = data . gray		8669015	0		=			
ANR	8669067	PtrMemberAccess	that -> red_sBIT		8669015	0					
ANR	8669068	Identifier	that		8669015	0					
ANR	8669069	Identifier	red_sBIT		8669015	1					
ANR	8669070	AssignmentExpression	that -> green_sBIT = that -> blue_sBIT = data . gray		8669015	1		=			
ANR	8669071	PtrMemberAccess	that -> green_sBIT		8669015	0					
ANR	8669072	Identifier	that		8669015	0					
ANR	8669073	Identifier	green_sBIT		8669015	1					
ANR	8669074	AssignmentExpression	that -> blue_sBIT = data . gray		8669015	1		=			
ANR	8669075	PtrMemberAccess	that -> blue_sBIT		8669015	0					
ANR	8669076	Identifier	that		8669015	0					
ANR	8669077	Identifier	blue_sBIT		8669015	1					
ANR	8669078	MemberAccess	data . gray		8669015	1					
ANR	8669079	Identifier	data		8669015	0					
ANR	8669080	Identifier	gray		8669015	1					
ANR	8669081	ExpressionStatement	that -> alpha_sBIT = data . alpha	8925:7:280453:280482	8669015	2	True				
ANR	8669082	AssignmentExpression	that -> alpha_sBIT = data . alpha		8669015	0		=			
ANR	8669083	PtrMemberAccess	that -> alpha_sBIT		8669015	0					
ANR	8669084	Identifier	that		8669015	0					
ANR	8669085	Identifier	alpha_sBIT		8669015	1					
ANR	8669086	MemberAccess	data . alpha		8669015	1					
ANR	8669087	Identifier	data		8669015	0					
ANR	8669088	Identifier	alpha		8669015	1					
ANR	8669089	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8928:3:280493:280539	8669015	1	True				
ANR	8669090	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8669015	0					
ANR	8669091	Callee	this -> next -> mod		8669015	0					
ANR	8669092	PtrMemberAccess	this -> next -> mod		8669015	0					
ANR	8669093	PtrMemberAccess	this -> next		8669015	0					
ANR	8669094	Identifier	this		8669015	0					
ANR	8669095	Identifier	next		8669015	1					
ANR	8669096	Identifier	mod		8669015	1					
ANR	8669097	ArgumentList	this -> next		8669015	1					
ANR	8669098	Argument	this -> next		8669015	0					
ANR	8669099	PtrMemberAccess	this -> next		8669015	0					
ANR	8669100	Identifier	this		8669015	0					
ANR	8669101	Identifier	next		8669015	1					
ANR	8669102	Argument	that		8669015	1					
ANR	8669103	Identifier	that		8669015	0					
ANR	8669104	Argument	pp		8669015	2					
ANR	8669105	Identifier	pp		8669015	0					
ANR	8669106	Argument	display		8669015	3					
ANR	8669107	Identifier	display		8669015	0					
ANR	8669108	ReturnType	static void		8669015	1					
ANR	8669109	Identifier	image_transform_png_set_shift_mod		8669015	2					
ANR	8669110	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8669015	3					
ANR	8669111	Parameter	const image_transform * this	8900:34:279687:279713	8669015	0	True				
ANR	8669112	ParameterType	const image_transform *		8669015	0					
ANR	8669113	Identifier	this		8669015	1					
ANR	8669114	Parameter	image_pixel * that	8901:4:279720:279736	8669015	1	True				
ANR	8669115	ParameterType	image_pixel *		8669015	0					
ANR	8669116	Identifier	that		8669015	1					
ANR	8669117	Parameter	png_const_structp pp	8901:23:279739:279758	8669015	2	True				
ANR	8669118	ParameterType	png_const_structp		8669015	0					
ANR	8669119	Identifier	pp		8669015	1					
ANR	8669120	Parameter	const transform_display * display	8902:4:279765:279796	8669015	3	True				
ANR	8669121	ParameterType	const transform_display *		8669015	0					
ANR	8669122	Identifier	display		8669015	1					
ANR	8669123	CFGEntryNode	ENTRY		8669015		True				
ANR	8669124	CFGExitNode	EXIT		8669015		True				
ANR	8669125	Symbol	pp		8669015						
ANR	8669126	Symbol	data		8669015						
ANR	8669127	Symbol	this -> next		8669015						
ANR	8669128	Symbol	display		8669015						
ANR	8669129	Symbol	this		8669015						
ANR	8669130	Symbol	that -> red_sBIT		8669015						
ANR	8669131	Symbol	that -> sig_bits		8669015						
ANR	8669132	Symbol	that -> green_sBIT		8669015						
ANR	8669133	Symbol	* this		8669015						
ANR	8669134	Symbol	that		8669015						
ANR	8669135	Symbol	that -> alpha_sBIT		8669015						
ANR	8669136	Symbol	that -> colour_type		8669015						
ANR	8669137	Symbol	that -> blue_sBIT		8669015						
ANR	8669138	Symbol	data . blue		8669015						
ANR	8669139	Symbol	* that		8669015						
ANR	8669140	Symbol	data . green		8669015						
ANR	8669141	Symbol	data . gray		8669015						
ANR	8669142	Symbol	data . alpha		8669015						
ANR	8669143	Symbol	PNG_COLOR_TYPE_PALETTE		8669015						
ANR	8669144	Symbol	data . red		8669015						
ANR	8669145	Function	image_transform_png_set_shift_add	8931:0:280544:280802							
ANR	8669146	FunctionDef	"image_transform_png_set_shift_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8669145	0					
ANR	8669147	CompoundStatement		8934:0:280688:280802	8669145	0					
ANR	8669148	Statement	UNUSED	8935:3:280693:280698	8669145	0	True				
ANR	8669149	ExpressionStatement	( bit_depth ) this -> next = * that	8935:9:280699:280733	8669145	1	True				
ANR	8669150	AssignmentExpression	( bit_depth ) this -> next = * that		8669145	0		=			
ANR	8669151	CastExpression	( bit_depth ) this -> next		8669145	0					
ANR	8669152	CastTarget	bit_depth		8669145	0					
ANR	8669153	PtrMemberAccess	this -> next		8669145	1					
ANR	8669154	Identifier	this		8669145	0					
ANR	8669155	Identifier	next		8669145	1					
ANR	8669156	UnaryOperationExpression	* that		8669145	1					
ANR	8669157	UnaryOperator	*		8669145	0					
ANR	8669158	Identifier	that		8669145	1					
ANR	8669159	ExpressionStatement	* that = this	8938:3:280738:280750	8669145	2	True				
ANR	8669160	AssignmentExpression	* that = this		8669145	0		=			
ANR	8669161	UnaryOperationExpression	* that		8669145	0					
ANR	8669162	UnaryOperator	*		8669145	0					
ANR	8669163	Identifier	that		8669145	1					
ANR	8669164	Identifier	this		8669145	1					
ANR	8669165	ReturnStatement	return colour_type != PNG_COLOR_TYPE_PALETTE ;	8940:3:280756:280800	8669145	3	True				
ANR	8669166	EqualityExpression	colour_type != PNG_COLOR_TYPE_PALETTE		8669145	0		!=			
ANR	8669167	Identifier	colour_type		8669145	0					
ANR	8669168	Identifier	PNG_COLOR_TYPE_PALETTE		8669145	1					
ANR	8669169	ReturnType	static int		8669145	1					
ANR	8669170	Identifier	image_transform_png_set_shift_add		8669145	2					
ANR	8669171	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8669145	3					
ANR	8669172	Parameter	image_transform * this	8932:34:280589:280609	8669145	0	True				
ANR	8669173	ParameterType	image_transform *		8669145	0					
ANR	8669174	Identifier	this		8669145	1					
ANR	8669175	Parameter	const image_transform * * that	8933:4:280616:280643	8669145	1	True				
ANR	8669176	ParameterType	const image_transform * *		8669145	0					
ANR	8669177	Identifier	that		8669145	1					
ANR	8669178	Parameter	png_byte colour_type	8933:34:280646:280665	8669145	2	True				
ANR	8669179	ParameterType	png_byte		8669145	0					
ANR	8669180	Identifier	colour_type		8669145	1					
ANR	8669181	Parameter	png_byte bit_depth	8933:56:280668:280685	8669145	3	True				
ANR	8669182	ParameterType	png_byte		8669145	0					
ANR	8669183	Identifier	bit_depth		8669145	1					
ANR	8669184	CFGEntryNode	ENTRY		8669145		True				
ANR	8669185	CFGExitNode	EXIT		8669145		True				
ANR	8669186	Symbol	colour_type		8669145						
ANR	8669187	Symbol	* this		8669145						
ANR	8669188	Symbol	that		8669145						
ANR	8669189	Symbol	this -> next		8669145						
ANR	8669190	Symbol	this		8669145						
ANR	8669191	Symbol	* that		8669145						
ANR	8669192	Symbol	bit_depth		8669145						
ANR	8669193	Symbol	PNG_COLOR_TYPE_PALETTE		8669145						
ANR	8669194	Function	_set	8950:0:280921:281117							
ANR	8669195	FunctionDef	"_set (const image_transform * this , transform_display * that , png_structp pp , png_infop pi)"		8669194	0					
ANR	8669196	CompoundStatement		8953:0:281051:281117	8669194	0					
ANR	8669197	ExpressionStatement	png_set_ ( pp )	8954:3:281056:281069	8669194	0	True				
ANR	8669198	CallExpression	png_set_ ( pp )		8669194	0					
ANR	8669199	Callee	png_set_		8669194	0					
ANR	8669200	Identifier	png_set_		8669194	0					
ANR	8669201	ArgumentList	pp		8669194	1					
ANR	8669202	Argument	pp		8669194	0					
ANR	8669203	Identifier	pp		8669194	0					
ANR	8669204	ExpressionStatement	"this -> next -> set ( this -> next , that , pp , pi )"	8955:3:281074:281115	8669194	1	True				
ANR	8669205	CallExpression	"this -> next -> set ( this -> next , that , pp , pi )"		8669194	0					
ANR	8669206	Callee	this -> next -> set		8669194	0					
ANR	8669207	PtrMemberAccess	this -> next -> set		8669194	0					
ANR	8669208	PtrMemberAccess	this -> next		8669194	0					
ANR	8669209	Identifier	this		8669194	0					
ANR	8669210	Identifier	next		8669194	1					
ANR	8669211	Identifier	set		8669194	1					
ANR	8669212	ArgumentList	this -> next		8669194	1					
ANR	8669213	Argument	this -> next		8669194	0					
ANR	8669214	PtrMemberAccess	this -> next		8669194	0					
ANR	8669215	Identifier	this		8669194	0					
ANR	8669216	Identifier	next		8669194	1					
ANR	8669217	Argument	that		8669194	1					
ANR	8669218	Identifier	that		8669194	0					
ANR	8669219	Argument	pp		8669194	2					
ANR	8669220	Identifier	pp		8669194	0					
ANR	8669221	Argument	pi		8669194	3					
ANR	8669222	Identifier	pi		8669194	0					
ANR	8669223	ReturnType	static void image_transform_png_set_		8669194	1					
ANR	8669224	Identifier	_set		8669194	2					
ANR	8669225	ParameterList	"const image_transform * this , transform_display * that , png_structp pp , png_infop pi"		8669194	3					
ANR	8669226	Parameter	const image_transform * this	8951:30:280963:280989	8669194	0	True				
ANR	8669227	ParameterType	const image_transform *		8669194	0					
ANR	8669228	Identifier	this		8669194	1					
ANR	8669229	Parameter	transform_display * that	8952:4:280996:281018	8669194	1	True				
ANR	8669230	ParameterType	transform_display *		8669194	0					
ANR	8669231	Identifier	that		8669194	1					
ANR	8669232	Parameter	png_structp pp	8952:29:281021:281034	8669194	2	True				
ANR	8669233	ParameterType	png_structp		8669194	0					
ANR	8669234	Identifier	pp		8669194	1					
ANR	8669235	Parameter	png_infop pi	8952:45:281037:281048	8669194	3	True				
ANR	8669236	ParameterType	png_infop		8669194	0					
ANR	8669237	Identifier	pi		8669194	1					
ANR	8669238	CFGEntryNode	ENTRY		8669194		True				
ANR	8669239	CFGExitNode	EXIT		8669194		True				
ANR	8669240	Symbol	pp		8669194						
ANR	8669241	Symbol	* this		8669194						
ANR	8669242	Symbol	that		8669194						
ANR	8669243	Symbol	this -> next		8669194						
ANR	8669244	Symbol	this		8669194						
ANR	8669245	Symbol	pi		8669194						
ANR	8669246	Function	_mod	8958:0:281120:281327							
ANR	8669247	FunctionDef	"_mod (const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display)"		8669246	0					
ANR	8669248	CompoundStatement		8962:0:281274:281327	8669246	0					
ANR	8669249	ExpressionStatement	"this -> next -> mod ( this -> next , that , pp , display )"	8963:3:281279:281325	8669246	0	True				
ANR	8669250	CallExpression	"this -> next -> mod ( this -> next , that , pp , display )"		8669246	0					
ANR	8669251	Callee	this -> next -> mod		8669246	0					
ANR	8669252	PtrMemberAccess	this -> next -> mod		8669246	0					
ANR	8669253	PtrMemberAccess	this -> next		8669246	0					
ANR	8669254	Identifier	this		8669246	0					
ANR	8669255	Identifier	next		8669246	1					
ANR	8669256	Identifier	mod		8669246	1					
ANR	8669257	ArgumentList	this -> next		8669246	1					
ANR	8669258	Argument	this -> next		8669246	0					
ANR	8669259	PtrMemberAccess	this -> next		8669246	0					
ANR	8669260	Identifier	this		8669246	0					
ANR	8669261	Identifier	next		8669246	1					
ANR	8669262	Argument	that		8669246	1					
ANR	8669263	Identifier	that		8669246	0					
ANR	8669264	Argument	pp		8669246	2					
ANR	8669265	Identifier	pp		8669246	0					
ANR	8669266	Argument	display		8669246	3					
ANR	8669267	Identifier	display		8669246	0					
ANR	8669268	ReturnType	static void image_transform_png_set_		8669246	1					
ANR	8669269	Identifier	_mod		8669246	2					
ANR	8669270	ParameterList	"const image_transform * this , image_pixel * that , png_const_structp pp , const transform_display * display"		8669246	3					
ANR	8669271	Parameter	const image_transform * this	8959:30:281162:281188	8669246	0	True				
ANR	8669272	ParameterType	const image_transform *		8669246	0					
ANR	8669273	Identifier	this		8669246	1					
ANR	8669274	Parameter	image_pixel * that	8960:4:281195:281211	8669246	1	True				
ANR	8669275	ParameterType	image_pixel *		8669246	0					
ANR	8669276	Identifier	that		8669246	1					
ANR	8669277	Parameter	png_const_structp pp	8960:23:281214:281233	8669246	2	True				
ANR	8669278	ParameterType	png_const_structp		8669246	0					
ANR	8669279	Identifier	pp		8669246	1					
ANR	8669280	Parameter	const transform_display * display	8961:4:281240:281271	8669246	3	True				
ANR	8669281	ParameterType	const transform_display *		8669246	0					
ANR	8669282	Identifier	display		8669246	1					
ANR	8669283	CFGEntryNode	ENTRY		8669246		True				
ANR	8669284	CFGExitNode	EXIT		8669246		True				
ANR	8669285	Symbol	pp		8669246						
ANR	8669286	Symbol	* this		8669246						
ANR	8669287	Symbol	that		8669246						
ANR	8669288	Symbol	this -> next		8669246						
ANR	8669289	Symbol	display		8669246						
ANR	8669290	Symbol	this		8669246						
ANR	8669291	Function	_add	8966:0:281330:281526							
ANR	8669292	FunctionDef	"_add (image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth)"		8669291	0					
ANR	8669293	CompoundStatement		8969:0:281470:281526	8669291	0					
ANR	8669294	ExpressionStatement	this -> next = * that	8970:3:281475:281493	8669291	0	True				
ANR	8669295	AssignmentExpression	this -> next = * that		8669291	0		=			
ANR	8669296	PtrMemberAccess	this -> next		8669291	0					
ANR	8669297	Identifier	this		8669291	0					
ANR	8669298	Identifier	next		8669291	1					
ANR	8669299	UnaryOperationExpression	* that		8669291	1					
ANR	8669300	UnaryOperator	*		8669291	0					
ANR	8669301	Identifier	that		8669291	1					
ANR	8669302	ExpressionStatement	* that = this	8971:3:281498:281510	8669291	1	True				
ANR	8669303	AssignmentExpression	* that = this		8669291	0		=			
ANR	8669304	UnaryOperationExpression	* that		8669291	0					
ANR	8669305	UnaryOperator	*		8669291	0					
ANR	8669306	Identifier	that		8669291	1					
ANR	8669307	Identifier	this		8669291	1					
ANR	8669308	ReturnStatement	return 1 ;	8973:3:281516:281524	8669291	2	True				
ANR	8669309	PrimaryExpression	1		8669291	0					
ANR	8669310	ReturnType	static int image_transform_png_set_		8669291	1					
ANR	8669311	Identifier	_add		8669291	2					
ANR	8669312	ParameterList	"image_transform * this , const image_transform * * that , png_byte colour_type , png_byte bit_depth"		8669291	3					
ANR	8669313	Parameter	image_transform * this	8967:30:281371:281391	8669291	0	True				
ANR	8669314	ParameterType	image_transform *		8669291	0					
ANR	8669315	Identifier	this		8669291	1					
ANR	8669316	Parameter	const image_transform * * that	8968:4:281398:281425	8669291	1	True				
ANR	8669317	ParameterType	const image_transform * *		8669291	0					
ANR	8669318	Identifier	that		8669291	1					
ANR	8669319	Parameter	png_byte colour_type	8968:34:281428:281447	8669291	2	True				
ANR	8669320	ParameterType	png_byte		8669291	0					
ANR	8669321	Identifier	colour_type		8669291	1					
ANR	8669322	Parameter	png_byte bit_depth	8968:56:281450:281467	8669291	3	True				
ANR	8669323	ParameterType	png_byte		8669291	0					
ANR	8669324	Identifier	bit_depth		8669291	1					
ANR	8669325	CFGEntryNode	ENTRY		8669291		True				
ANR	8669326	CFGExitNode	EXIT		8669291		True				
ANR	8669327	Symbol	colour_type		8669291						
ANR	8669328	Symbol	* this		8669291						
ANR	8669329	Symbol	that		8669291						
ANR	8669330	Symbol	this -> next		8669291						
ANR	8669331	Symbol	this		8669291						
ANR	8669332	Symbol	* that		8669291						
ANR	8669333	Symbol	bit_depth		8669291						
ANR	8669334	Function	transform_enable	8983:0:281670:282346							
ANR	8669335	FunctionDef	transform_enable (const char * name)		8669334	0					
ANR	8669336	CompoundStatement		8985:0:281717:282346	8669334	0					
ANR	8669337	Statement	static	8989:3:281844:281849	8669334	0	True				
ANR	8669338	IdentifierDeclStatement	int all_disabled = 0 ;	8989:10:281851:281871	8669334	1	True				
ANR	8669339	IdentifierDecl	all_disabled = 0		8669334	0					
ANR	8669340	IdentifierDeclType	int		8669334	0					
ANR	8669341	Identifier	all_disabled		8669334	1					
ANR	8669342	AssignmentExpression	all_disabled = 0		8669334	2		=			
ANR	8669343	Identifier	all_disabled		8669334	0					
ANR	8669344	PrimaryExpression	0		8669334	1					
ANR	8669345	IdentifierDeclStatement	int found_it = 0 ;	8990:3:281876:281892	8669334	2	True				
ANR	8669346	IdentifierDecl	found_it = 0		8669334	0					
ANR	8669347	IdentifierDeclType	int		8669334	0					
ANR	8669348	Identifier	found_it		8669334	1					
ANR	8669349	AssignmentExpression	found_it = 0		8669334	2		=			
ANR	8669350	Identifier	found_it		8669334	0					
ANR	8669351	PrimaryExpression	0		8669334	1					
ANR	8669352	IdentifierDeclStatement	image_transform * list = image_transform_first ;	8991:3:281897:281942	8669334	3	True				
ANR	8669353	IdentifierDecl	* list = image_transform_first		8669334	0					
ANR	8669354	IdentifierDeclType	image_transform *		8669334	0					
ANR	8669355	Identifier	list		8669334	1					
ANR	8669356	AssignmentExpression	* list = image_transform_first		8669334	2		=			
ANR	8669357	Identifier	image_transform_first		8669334	0					
ANR	8669358	Identifier	image_transform_first		8669334	1					
ANR	8669359	WhileStatement	while ( list != & image_transform_end )		8669334	4					
ANR	8669360	Condition	list != & image_transform_end	8993:10:281955:281982	8669334	0	True				
ANR	8669361	EqualityExpression	list != & image_transform_end		8669334	0		!=			
ANR	8669362	Identifier	list		8669334	0					
ANR	8669363	UnaryOperationExpression	& image_transform_end		8669334	1					
ANR	8669364	UnaryOperator	&		8669334	0					
ANR	8669365	Identifier	image_transform_end		8669334	1					
ANR	8669366	CompoundStatement		10:3:270:270	8669334	1					
ANR	8669367	IfStatement	"if ( strcmp ( list -> name , name ) == 0 )"		8669334	0					
ANR	8669368	Condition	"strcmp ( list -> name , name ) == 0"	8995:10:282000:282028	8669334	0	True				
ANR	8669369	EqualityExpression	"strcmp ( list -> name , name ) == 0"		8669334	0		==			
ANR	8669370	CallExpression	"strcmp ( list -> name , name )"		8669334	0					
ANR	8669371	Callee	strcmp		8669334	0					
ANR	8669372	Identifier	strcmp		8669334	0					
ANR	8669373	ArgumentList	list -> name		8669334	1					
ANR	8669374	Argument	list -> name		8669334	0					
ANR	8669375	PtrMemberAccess	list -> name		8669334	0					
ANR	8669376	Identifier	list		8669334	0					
ANR	8669377	Identifier	name		8669334	1					
ANR	8669378	Argument	name		8669334	1					
ANR	8669379	Identifier	name		8669334	0					
ANR	8669380	PrimaryExpression	0		8669334	1					
ANR	8669381	CompoundStatement		12:6:319:319	8669334	1					
ANR	8669382	ExpressionStatement	list -> enable = 1	8997:9:282048:282064	8669334	0	True				
ANR	8669383	AssignmentExpression	list -> enable = 1		8669334	0		=			
ANR	8669384	PtrMemberAccess	list -> enable		8669334	0					
ANR	8669385	Identifier	list		8669334	0					
ANR	8669386	Identifier	enable		8669334	1					
ANR	8669387	PrimaryExpression	1		8669334	1					
ANR	8669388	ExpressionStatement	found_it = 1	8998:9:282075:282087	8669334	1	True				
ANR	8669389	AssignmentExpression	found_it = 1		8669334	0		=			
ANR	8669390	Identifier	found_it		8669334	0					
ANR	8669391	PrimaryExpression	1		8669334	1					
ANR	8669392	ElseStatement	else		8669334	0					
ANR	8669393	IfStatement	if ( ! all_disabled )		8669334	0					
ANR	8669394	Condition	! all_disabled	9000:15:282112:282124	8669334	0	True				
ANR	8669395	UnaryOperationExpression	! all_disabled		8669334	0					
ANR	8669396	UnaryOperator	!		8669334	0					
ANR	8669397	Identifier	all_disabled		8669334	1					
ANR	8669398	ExpressionStatement	list -> enable = 0	9001:9:282136:282152	8669334	1	True				
ANR	8669399	AssignmentExpression	list -> enable = 0		8669334	0		=			
ANR	8669400	PtrMemberAccess	list -> enable		8669334	0					
ANR	8669401	Identifier	list		8669334	0					
ANR	8669402	Identifier	enable		8669334	1					
ANR	8669403	PrimaryExpression	0		8669334	1					
ANR	8669404	ExpressionStatement	list = list -> list	9003:6:282161:282178	8669334	1	True				
ANR	8669405	AssignmentExpression	list = list -> list		8669334	0		=			
ANR	8669406	Identifier	list		8669334	0					
ANR	8669407	PtrMemberAccess	list -> list		8669334	1					
ANR	8669408	Identifier	list		8669334	0					
ANR	8669409	Identifier	list		8669334	1					
ANR	8669410	ExpressionStatement	all_disabled = 1	9006:3:282189:282205	8669334	5	True				
ANR	8669411	AssignmentExpression	all_disabled = 1		8669334	0		=			
ANR	8669412	Identifier	all_disabled		8669334	0					
ANR	8669413	PrimaryExpression	1		8669334	1					
ANR	8669414	IfStatement	if ( ! found_it )		8669334	6					
ANR	8669415	Condition	! found_it	9008:7:282215:282223	8669334	0	True				
ANR	8669416	UnaryOperationExpression	! found_it		8669334	0					
ANR	8669417	UnaryOperator	!		8669334	0					
ANR	8669418	Identifier	found_it		8669334	1					
ANR	8669419	CompoundStatement		25:3:511:511	8669334	1					
ANR	8669420	ExpressionStatement	"fprintf ( stderr , ""pngvalid: --transform-enable=%s: unknown transform\\n"" , name )"	9010:6:282237:282323	8669334	0	True				
ANR	8669421	CallExpression	"fprintf ( stderr , ""pngvalid: --transform-enable=%s: unknown transform\\n"" , name )"		8669334	0					
ANR	8669422	Callee	fprintf		8669334	0					
ANR	8669423	Identifier	fprintf		8669334	0					
ANR	8669424	ArgumentList	stderr		8669334	1					
ANR	8669425	Argument	stderr		8669334	0					
ANR	8669426	Identifier	stderr		8669334	0					
ANR	8669427	Argument	"""pngvalid: --transform-enable=%s: unknown transform\\n"""		8669334	1					
ANR	8669428	PrimaryExpression	"""pngvalid: --transform-enable=%s: unknown transform\\n"""		8669334	0					
ANR	8669429	Argument	name		8669334	2					
ANR	8669430	Identifier	name		8669334	0					
ANR	8669431	ExpressionStatement	exit ( 99 )	9012:6:282331:282339	8669334	1	True				
ANR	8669432	CallExpression	exit ( 99 )		8669334	0					
ANR	8669433	Callee	exit		8669334	0					
ANR	8669434	Identifier	exit		8669334	0					
ANR	8669435	ArgumentList	99		8669334	1					
ANR	8669436	Argument	99		8669334	0					
ANR	8669437	PrimaryExpression	99		8669334	0					
ANR	8669438	ReturnType	static void		8669334	1					
ANR	8669439	Identifier	transform_enable		8669334	2					
ANR	8669440	ParameterList	const char * name		8669334	3					
ANR	8669441	Parameter	const char * name	8984:17:281699:281714	8669334	0	True				
ANR	8669442	ParameterType	const char *		8669334	0					
ANR	8669443	Identifier	name		8669334	1					
ANR	8669444	CFGEntryNode	ENTRY		8669334		True				
ANR	8669445	CFGExitNode	EXIT		8669334		True				
ANR	8669446	Symbol	& image_transform_end		8669334						
ANR	8669447	Symbol	strcmp		8669334						
ANR	8669448	Symbol	image_transform_first		8669334						
ANR	8669449	Symbol	list -> list		8669334						
ANR	8669450	Symbol	* list		8669334						
ANR	8669451	Symbol	found_it		8669334						
ANR	8669452	Symbol	name		8669334						
ANR	8669453	Symbol	all_disabled		8669334						
ANR	8669454	Symbol	list -> name		8669334						
ANR	8669455	Symbol	list -> enable		8669334						
ANR	8669456	Symbol	list		8669334						
ANR	8669457	Symbol	stderr		8669334						
ANR	8669458	Function	transform_disable	9016:0:282349:282730							
ANR	8669459	FunctionDef	transform_disable (const char * name)		8669458	0					
ANR	8669460	CompoundStatement		9018:0:282397:282730	8669458	0					
ANR	8669461	IdentifierDeclStatement	image_transform * list = image_transform_first ;	9019:3:282402:282447	8669458	0	True				
ANR	8669462	IdentifierDecl	* list = image_transform_first		8669458	0					
ANR	8669463	IdentifierDeclType	image_transform *		8669458	0					
ANR	8669464	Identifier	list		8669458	1					
ANR	8669465	AssignmentExpression	* list = image_transform_first		8669458	2		=			
ANR	8669466	Identifier	image_transform_first		8669458	0					
ANR	8669467	Identifier	image_transform_first		8669458	1					
ANR	8669468	WhileStatement	while ( list != & image_transform_end )		8669458	1					
ANR	8669469	Condition	list != & image_transform_end	9021:10:282460:282487	8669458	0	True				
ANR	8669470	EqualityExpression	list != & image_transform_end		8669458	0		!=			
ANR	8669471	Identifier	list		8669458	0					
ANR	8669472	UnaryOperationExpression	& image_transform_end		8669458	1					
ANR	8669473	UnaryOperator	&		8669458	0					
ANR	8669474	Identifier	image_transform_end		8669458	1					
ANR	8669475	CompoundStatement		5:3:95:95	8669458	1					
ANR	8669476	IfStatement	"if ( strcmp ( list -> name , name ) == 0 )"		8669458	0					
ANR	8669477	Condition	"strcmp ( list -> name , name ) == 0"	9023:10:282505:282533	8669458	0	True				
ANR	8669478	EqualityExpression	"strcmp ( list -> name , name ) == 0"		8669458	0		==			
ANR	8669479	CallExpression	"strcmp ( list -> name , name )"		8669458	0					
ANR	8669480	Callee	strcmp		8669458	0					
ANR	8669481	Identifier	strcmp		8669458	0					
ANR	8669482	ArgumentList	list -> name		8669458	1					
ANR	8669483	Argument	list -> name		8669458	0					
ANR	8669484	PtrMemberAccess	list -> name		8669458	0					
ANR	8669485	Identifier	list		8669458	0					
ANR	8669486	Identifier	name		8669458	1					
ANR	8669487	Argument	name		8669458	1					
ANR	8669488	Identifier	name		8669458	0					
ANR	8669489	PrimaryExpression	0		8669458	1					
ANR	8669490	CompoundStatement		7:6:144:144	8669458	1					
ANR	8669491	ExpressionStatement	list -> enable = 0	9025:9:282553:282569	8669458	0	True				
ANR	8669492	AssignmentExpression	list -> enable = 0		8669458	0		=			
ANR	8669493	PtrMemberAccess	list -> enable		8669458	0					
ANR	8669494	Identifier	list		8669458	0					
ANR	8669495	Identifier	enable		8669458	1					
ANR	8669496	PrimaryExpression	0		8669458	1					
ANR	8669497	ReturnStatement	return ;	9026:9:282580:282586	8669458	1	True				
ANR	8669498	ExpressionStatement	list = list -> list	9029:6:282603:282620	8669458	1	True				
ANR	8669499	AssignmentExpression	list = list -> list		8669458	0		=			
ANR	8669500	Identifier	list		8669458	0					
ANR	8669501	PtrMemberAccess	list -> list		8669458	1					
ANR	8669502	Identifier	list		8669458	0					
ANR	8669503	Identifier	list		8669458	1					
ANR	8669504	ExpressionStatement	"fprintf ( stderr , ""pngvalid: --transform-disable=%s: unknown transform\\n"" , name )"	9032:3:282631:282715	8669458	2	True				
ANR	8669505	CallExpression	"fprintf ( stderr , ""pngvalid: --transform-disable=%s: unknown transform\\n"" , name )"		8669458	0					
ANR	8669506	Callee	fprintf		8669458	0					
ANR	8669507	Identifier	fprintf		8669458	0					
ANR	8669508	ArgumentList	stderr		8669458	1					
ANR	8669509	Argument	stderr		8669458	0					
ANR	8669510	Identifier	stderr		8669458	0					
ANR	8669511	Argument	"""pngvalid: --transform-disable=%s: unknown transform\\n"""		8669458	1					
ANR	8669512	PrimaryExpression	"""pngvalid: --transform-disable=%s: unknown transform\\n"""		8669458	0					
ANR	8669513	Argument	name		8669458	2					
ANR	8669514	Identifier	name		8669458	0					
ANR	8669515	ExpressionStatement	exit ( 99 )	9034:3:282720:282728	8669458	3	True				
ANR	8669516	CallExpression	exit ( 99 )		8669458	0					
ANR	8669517	Callee	exit		8669458	0					
ANR	8669518	Identifier	exit		8669458	0					
ANR	8669519	ArgumentList	99		8669458	1					
ANR	8669520	Argument	99		8669458	0					
ANR	8669521	PrimaryExpression	99		8669458	0					
ANR	8669522	ReturnType	static void		8669458	1					
ANR	8669523	Identifier	transform_disable		8669458	2					
ANR	8669524	ParameterList	const char * name		8669458	3					
ANR	8669525	Parameter	const char * name	9017:18:282379:282394	8669458	0	True				
ANR	8669526	ParameterType	const char *		8669458	0					
ANR	8669527	Identifier	name		8669458	1					
ANR	8669528	CFGEntryNode	ENTRY		8669458		True				
ANR	8669529	CFGExitNode	EXIT		8669458		True				
ANR	8669530	Symbol	& image_transform_end		8669458						
ANR	8669531	Symbol	strcmp		8669458						
ANR	8669532	Symbol	image_transform_first		8669458						
ANR	8669533	Symbol	list -> list		8669458						
ANR	8669534	Symbol	* list		8669458						
ANR	8669535	Symbol	name		8669458						
ANR	8669536	Symbol	list -> name		8669458						
ANR	8669537	Symbol	list -> enable		8669458						
ANR	8669538	Symbol	list		8669458						
ANR	8669539	Symbol	stderr		8669458						
ANR	8669540	Function	image_transform_reset_count	9037:0:282733:283132							
ANR	8669541	FunctionDef	image_transform_reset_count ()		8669540	0					
ANR	8669542	CompoundStatement		9039:0:282779:283132	8669540	0					
ANR	8669543	IdentifierDeclStatement	image_transform * next = image_transform_first ;	9040:3:282784:282829	8669540	0	True				
ANR	8669544	IdentifierDecl	* next = image_transform_first		8669540	0					
ANR	8669545	IdentifierDeclType	image_transform *		8669540	0					
ANR	8669546	Identifier	next		8669540	1					
ANR	8669547	AssignmentExpression	* next = image_transform_first		8669540	2		=			
ANR	8669548	Identifier	image_transform_first		8669540	0					
ANR	8669549	Identifier	image_transform_first		8669540	1					
ANR	8669550	IdentifierDeclStatement	int count = 0 ;	9041:3:282834:282847	8669540	1	True				
ANR	8669551	IdentifierDecl	count = 0		8669540	0					
ANR	8669552	IdentifierDeclType	int		8669540	0					
ANR	8669553	Identifier	count		8669540	1					
ANR	8669554	AssignmentExpression	count = 0		8669540	2		=			
ANR	8669555	Identifier	count		8669540	0					
ANR	8669556	PrimaryExpression	0		8669540	1					
ANR	8669557	WhileStatement	while ( next != & image_transform_end )		8669540	2					
ANR	8669558	Condition	next != & image_transform_end	9043:10:282860:282887	8669540	0	True				
ANR	8669559	EqualityExpression	next != & image_transform_end		8669540	0		!=			
ANR	8669560	Identifier	next		8669540	0					
ANR	8669561	UnaryOperationExpression	& image_transform_end		8669540	1					
ANR	8669562	UnaryOperator	&		8669540	0					
ANR	8669563	Identifier	image_transform_end		8669540	1					
ANR	8669564	CompoundStatement		6:3:113:113	8669540	1					
ANR	8669565	ExpressionStatement	next -> local_use = 0	9045:6:282901:282920	8669540	0	True				
ANR	8669566	AssignmentExpression	next -> local_use = 0		8669540	0		=			
ANR	8669567	PtrMemberAccess	next -> local_use		8669540	0					
ANR	8669568	Identifier	next		8669540	0					
ANR	8669569	Identifier	local_use		8669540	1					
ANR	8669570	PrimaryExpression	0		8669540	1					
ANR	8669571	ExpressionStatement	next -> next = 0	9046:6:282928:282942	8669540	1	True				
ANR	8669572	AssignmentExpression	next -> next = 0		8669540	0		=			
ANR	8669573	PtrMemberAccess	next -> next		8669540	0					
ANR	8669574	Identifier	next		8669540	0					
ANR	8669575	Identifier	next		8669540	1					
ANR	8669576	PrimaryExpression	0		8669540	1					
ANR	8669577	ExpressionStatement	next = next -> list	9047:6:282950:282967	8669540	2	True				
ANR	8669578	AssignmentExpression	next = next -> list		8669540	0		=			
ANR	8669579	Identifier	next		8669540	0					
ANR	8669580	PtrMemberAccess	next -> list		8669540	1					
ANR	8669581	Identifier	next		8669540	0					
ANR	8669582	Identifier	list		8669540	1					
ANR	8669583	ExpressionStatement	++ count	9048:6:282975:282982	8669540	3	True				
ANR	8669584	UnaryExpression	++ count		8669540	0					
ANR	8669585	IncDec	++		8669540	0					
ANR	8669586	Identifier	count		8669540	1					
ANR	8669587	IfStatement	if ( count > 32 )		8669540	3					
ANR	8669588	Condition	count > 32	9054:7:283111:283120	8669540	0	True				
ANR	8669589	RelationalExpression	count > 32		8669540	0		>			
ANR	8669590	Identifier	count		8669540	0					
ANR	8669591	PrimaryExpression	32		8669540	1					
ANR	8669592	ExpressionStatement	abort ( )	9054:19:283123:283130	8669540	1	True				
ANR	8669593	CallExpression	abort ( )		8669540	0					
ANR	8669594	Callee	abort		8669540	0					
ANR	8669595	Identifier	abort		8669540	0					
ANR	8669596	ArgumentList			8669540	1					
ANR	8669597	ReturnType	static void		8669540	1					
ANR	8669598	Identifier	image_transform_reset_count		8669540	2					
ANR	8669599	ParameterList			8669540	3					
ANR	8669600	CFGEntryNode	ENTRY		8669540		True				
ANR	8669601	CFGExitNode	EXIT		8669540		True				
ANR	8669602	Symbol	next		8669540						
ANR	8669603	Symbol	& image_transform_end		8669540						
ANR	8669604	Symbol	image_transform_first		8669540						
ANR	8669605	Symbol	count		8669540						
ANR	8669606	Symbol	next -> next		8669540						
ANR	8669607	Symbol	* next		8669540						
ANR	8669608	Symbol	next -> local_use		8669540						
ANR	8669609	Symbol	next -> list		8669540						
ANR	8669610	Function	image_transform_test_counter	9057:0:283135:283703							
ANR	8669611	FunctionDef	"image_transform_test_counter (png_uint_32 counter , unsigned int max)"		8669610	0					
ANR	8669612	CompoundStatement		9059:0:283214:283703	8669610	0					
ANR	8669613	IdentifierDeclStatement	image_transform * next = image_transform_first ;	9063:3:283335:283380	8669610	0	True				
ANR	8669614	IdentifierDecl	* next = image_transform_first		8669610	0					
ANR	8669615	IdentifierDeclType	image_transform *		8669610	0					
ANR	8669616	Identifier	next		8669610	1					
ANR	8669617	AssignmentExpression	* next = image_transform_first		8669610	2		=			
ANR	8669618	Identifier	image_transform_first		8669610	0					
ANR	8669619	Identifier	image_transform_first		8669610	1					
ANR	8669620	WhileStatement	while ( next != & image_transform_end )		8669610	1					
ANR	8669621	Condition	next != & image_transform_end	9065:10:283393:283420	8669610	0	True				
ANR	8669622	EqualityExpression	next != & image_transform_end		8669610	0		!=			
ANR	8669623	Identifier	next		8669610	0					
ANR	8669624	UnaryOperationExpression	& image_transform_end		8669610	1					
ANR	8669625	UnaryOperator	&		8669610	0					
ANR	8669626	Identifier	image_transform_end		8669610	1					
ANR	8669627	CompoundStatement		8:3:211:211	8669610	1					
ANR	8669628	ExpressionStatement	counter >>= 1	9068:6:283499:283512	8669610	0	True				
ANR	8669629	AssignmentExpression	counter >>= 1		8669610	0		>>=			
ANR	8669630	Identifier	counter		8669610	0					
ANR	8669631	PrimaryExpression	1		8669610	1					
ANR	8669632	IfStatement	if ( max > 1 && next -> local_use < max )		8669610	1					
ANR	8669633	Condition	max > 1 && next -> local_use < max	9071:10:283583:283614	8669610	0	True				
ANR	8669634	AndExpression	max > 1 && next -> local_use < max		8669610	0		&&			
ANR	8669635	RelationalExpression	max > 1		8669610	0		>			
ANR	8669636	Identifier	max		8669610	0					
ANR	8669637	PrimaryExpression	1		8669610	1					
ANR	8669638	RelationalExpression	next -> local_use < max		8669610	1		<			
ANR	8669639	PtrMemberAccess	next -> local_use		8669610	0					
ANR	8669640	Identifier	next		8669610	0					
ANR	8669641	Identifier	local_use		8669610	1					
ANR	8669642	Identifier	max		8669610	1					
ANR	8669643	ReturnStatement	return 1 ;	9072:9:283626:283634	8669610	1	True				
ANR	8669644	PrimaryExpression	1		8669610	0					
ANR	8669645	ExpressionStatement	next = next -> list	9073:6:283642:283659	8669610	2	True				
ANR	8669646	AssignmentExpression	next = next -> list		8669610	0		=			
ANR	8669647	Identifier	next		8669610	0					
ANR	8669648	PtrMemberAccess	next -> list		8669610	1					
ANR	8669649	Identifier	next		8669610	0					
ANR	8669650	Identifier	list		8669610	1					
ANR	8669651	ReturnStatement	return max <= 1 && counter == 0 ;	9076:3:283670:283701	8669610	2	True				
ANR	8669652	AndExpression	max <= 1 && counter == 0		8669610	0		&&			
ANR	8669653	RelationalExpression	max <= 1		8669610	0		<=			
ANR	8669654	Identifier	max		8669610	0					
ANR	8669655	PrimaryExpression	1		8669610	1					
ANR	8669656	EqualityExpression	counter == 0		8669610	1		==			
ANR	8669657	Identifier	counter		8669610	0					
ANR	8669658	PrimaryExpression	0		8669610	1					
ANR	8669659	ReturnType	static int		8669610	1					
ANR	8669660	Identifier	image_transform_test_counter		8669610	2					
ANR	8669661	ParameterList	"png_uint_32 counter , unsigned int max"		8669610	3					
ANR	8669662	Parameter	png_uint_32 counter	9058:29:283175:283193	8669610	0	True				
ANR	8669663	ParameterType	png_uint_32		8669610	0					
ANR	8669664	Identifier	counter		8669610	1					
ANR	8669665	Parameter	unsigned int max	9058:50:283196:283211	8669610	1	True				
ANR	8669666	ParameterType	unsigned int		8669610	0					
ANR	8669667	Identifier	max		8669610	1					
ANR	8669668	CFGEntryNode	ENTRY		8669610		True				
ANR	8669669	CFGExitNode	EXIT		8669610		True				
ANR	8669670	Symbol	next		8669610						
ANR	8669671	Symbol	& image_transform_end		8669610						
ANR	8669672	Symbol	image_transform_first		8669610						
ANR	8669673	Symbol	max		8669610						
ANR	8669674	Symbol	counter		8669610						
ANR	8669675	Symbol	* next		8669610						
ANR	8669676	Symbol	next -> local_use		8669610						
ANR	8669677	Symbol	next -> list		8669610						
ANR	8669678	Function	image_transform_add	9079:0:283706:286087							
ANR	8669679	FunctionDef	"image_transform_add (const image_transform * * this , unsigned int max , png_uint_32 counter , char * name , size_t sizeof_name , size_t * pos , png_byte colour_type , png_byte bit_depth)"		8669678	0					
ANR	8669680	CompoundStatement		9083:0:283907:286087	8669678	0					
ANR	8669681	ForStatement	for ( ; ; )		8669678	0					
ANR	8669682	CompoundStatement		5:6:87:108	8669678	0					
ANR	8669683	IdentifierDeclStatement	png_uint_32 mask ;	9086:6:283971:283987	8669678	0	True				
ANR	8669684	IdentifierDecl	mask		8669678	0					
ANR	8669685	IdentifierDeclType	png_uint_32		8669678	0					
ANR	8669686	Identifier	mask		8669678	1					
ANR	8669687	IdentifierDeclStatement	image_transform * list ;	9087:6:283995:284016	8669678	1	True				
ANR	8669688	IdentifierDecl	* list		8669678	0					
ANR	8669689	IdentifierDeclType	image_transform *		8669678	0					
ANR	8669690	Identifier	list		8669678	1					
ANR	8669691	IfStatement	if ( counter == 0 )		8669678	2					
ANR	8669692	Condition	counter == 0	9093:10:284272:284283	8669678	0	True				
ANR	8669693	EqualityExpression	counter == 0		8669678	0		==			
ANR	8669694	Identifier	counter		8669678	0					
ANR	8669695	PrimaryExpression	0		8669678	1					
ANR	8669696	CompoundStatement		12:6:401:401	8669678	1					
ANR	8669697	ExpressionStatement	image_transform_reset_count ( )	9095:9:284320:284349	8669678	0	True				
ANR	8669698	CallExpression	image_transform_reset_count ( )		8669678	0					
ANR	8669699	Callee	image_transform_reset_count		8669678	0					
ANR	8669700	Identifier	image_transform_reset_count		8669678	0					
ANR	8669701	ArgumentList			8669678	1					
ANR	8669702	IfStatement	if ( max <= 1 )		8669678	1					
ANR	8669703	Condition	max <= 1	9096:13:284364:284371	8669678	0	True				
ANR	8669704	RelationalExpression	max <= 1		8669678	0		<=			
ANR	8669705	Identifier	max		8669678	0					
ANR	8669706	PrimaryExpression	1		8669678	1					
ANR	8669707	ExpressionStatement	counter = 1	9097:12:284386:284397	8669678	1	True				
ANR	8669708	AssignmentExpression	counter = 1		8669678	0		=			
ANR	8669709	Identifier	counter		8669678	0					
ANR	8669710	PrimaryExpression	1		8669678	1					
ANR	8669711	ElseStatement	else		8669678	0					
ANR	8669712	ExpressionStatement	counter = random_32 ( )	9099:12:284425:284446	8669678	0	True				
ANR	8669713	AssignmentExpression	counter = random_32 ( )		8669678	0		=			
ANR	8669714	Identifier	counter		8669678	0					
ANR	8669715	CallExpression	random_32 ( )		8669678	1					
ANR	8669716	Callee	random_32		8669678	0					
ANR	8669717	Identifier	random_32		8669678	0					
ANR	8669718	ArgumentList			8669678	1					
ANR	8669719	ElseStatement	else		8669678	0					
ANR	8669720	CompoundStatement		20:6:591:591	8669678	0					
ANR	8669721	SwitchStatement	switch ( max )		8669678	0					
ANR	8669722	Condition	max	9103:17:284518:284520	8669678	0	True				
ANR	8669723	Identifier	max		8669678	0					
ANR	8669724	CompoundStatement		22:9:624:624	8669678	1					
ANR	8669725	Label	case 0 :	9105:12:284546:284552	8669678	0	True				
ANR	8669726	ExpressionStatement	++ counter	9105:21:284555:284564	8669678	1	True				
ANR	8669727	UnaryExpression	++ counter		8669678	0					
ANR	8669728	IncDec	++		8669678	0					
ANR	8669729	Identifier	counter		8669678	1					
ANR	8669730	BreakStatement	break ;	9105:32:284566:284571	8669678	2	True				
ANR	8669731	Label	case 1 :	9106:12:284585:284591	8669678	3	True				
ANR	8669732	ExpressionStatement	counter <<= 1	9106:21:284594:284607	8669678	4	True				
ANR	8669733	AssignmentExpression	counter <<= 1		8669678	0		<<=			
ANR	8669734	Identifier	counter		8669678	0					
ANR	8669735	PrimaryExpression	1		8669678	1					
ANR	8669736	BreakStatement	break ;	9106:36:284609:284614	8669678	5	True				
ANR	8669737	Label	default :	9107:12:284628:284635	8669678	6	True				
ANR	8669738	Identifier	default		8669678	0					
ANR	8669739	ExpressionStatement	counter = random_32 ( )	9107:21:284637:284658	8669678	7	True				
ANR	8669740	AssignmentExpression	counter = random_32 ( )		8669678	0		=			
ANR	8669741	Identifier	counter		8669678	0					
ANR	8669742	CallExpression	random_32 ( )		8669678	1					
ANR	8669743	Callee	random_32		8669678	0					
ANR	8669744	Identifier	random_32		8669678	0					
ANR	8669745	ArgumentList			8669678	1					
ANR	8669746	BreakStatement	break ;	9107:44:284660:284665	8669678	8	True				
ANR	8669747	ExpressionStatement	* this = & image_transform_end	9112:6:284742:284770	8669678	3	True				
ANR	8669748	AssignmentExpression	* this = & image_transform_end		8669678	0		=			
ANR	8669749	UnaryOperationExpression	* this		8669678	0					
ANR	8669750	UnaryOperator	*		8669678	0					
ANR	8669751	Identifier	this		8669678	1					
ANR	8669752	UnaryOperationExpression	& image_transform_end		8669678	1					
ANR	8669753	UnaryOperator	&		8669678	0					
ANR	8669754	Identifier	image_transform_end		8669678	1					
ANR	8669755	ExpressionStatement	list = image_transform_first	9113:6:284778:284806	8669678	4	True				
ANR	8669756	AssignmentExpression	list = image_transform_first		8669678	0		=			
ANR	8669757	Identifier	list		8669678	0					
ANR	8669758	Identifier	image_transform_first		8669678	1					
ANR	8669759	ExpressionStatement	mask = 1	9114:6:284814:284822	8669678	5	True				
ANR	8669760	AssignmentExpression	mask = 1		8669678	0		=			
ANR	8669761	Identifier	mask		8669678	0					
ANR	8669762	PrimaryExpression	1		8669678	1					
ANR	8669763	WhileStatement	while ( list != & image_transform_end )		8669678	6					
ANR	8669764	Condition	list != & image_transform_end	9117:13:284918:284945	8669678	0	True				
ANR	8669765	EqualityExpression	list != & image_transform_end		8669678	0		!=			
ANR	8669766	Identifier	list		8669678	0					
ANR	8669767	UnaryOperationExpression	& image_transform_end		8669678	1					
ANR	8669768	UnaryOperator	&		8669678	0					
ANR	8669769	Identifier	image_transform_end		8669678	1					
ANR	8669770	CompoundStatement		36:6:1046:1046	8669678	1					
ANR	8669771	IfStatement	if ( ( counter & mask ) != 0 && list -> enable && ( max == 0 || list -> local_use < max ) )		8669678	0					
ANR	8669772	Condition	( counter & mask ) != 0 && list -> enable && ( max == 0 || list -> local_use < max )	9119:13:284969:285057	8669678	0	True				
ANR	8669773	AndExpression	( counter & mask ) != 0 && list -> enable && ( max == 0 || list -> local_use < max )		8669678	0		&&			
ANR	8669774	EqualityExpression	( counter & mask ) != 0		8669678	0		!=			
ANR	8669775	BitAndExpression	counter & mask		8669678	0		&			
ANR	8669776	Identifier	counter		8669678	0					
ANR	8669777	Identifier	mask		8669678	1					
ANR	8669778	PrimaryExpression	0		8669678	1					
ANR	8669779	AndExpression	list -> enable && ( max == 0 || list -> local_use < max )		8669678	1		&&			
ANR	8669780	PtrMemberAccess	list -> enable		8669678	0					
ANR	8669781	Identifier	list		8669678	0					
ANR	8669782	Identifier	enable		8669678	1					
ANR	8669783	OrExpression	max == 0 || list -> local_use < max		8669678	1		||			
ANR	8669784	EqualityExpression	max == 0		8669678	0		==			
ANR	8669785	Identifier	max		8669678	0					
ANR	8669786	PrimaryExpression	0		8669678	1					
ANR	8669787	RelationalExpression	list -> local_use < max		8669678	1		<			
ANR	8669788	PtrMemberAccess	list -> local_use		8669678	0					
ANR	8669789	Identifier	list		8669678	0					
ANR	8669790	Identifier	local_use		8669678	1					
ANR	8669791	Identifier	max		8669678	1					
ANR	8669792	CompoundStatement		39:9:1161:1161	8669678	1					
ANR	8669793	IfStatement	"if ( list -> add ( list , this , colour_type , bit_depth ) || max == 0 )"		8669678	0					
ANR	8669794	Condition	"list -> add ( list , this , colour_type , bit_depth ) || max == 0"	9123:16:285123:285179	8669678	0	True				
ANR	8669795	OrExpression	"list -> add ( list , this , colour_type , bit_depth ) || max == 0"		8669678	0		||			
ANR	8669796	CallExpression	"list -> add ( list , this , colour_type , bit_depth )"		8669678	0					
ANR	8669797	Callee	list -> add		8669678	0					
ANR	8669798	PtrMemberAccess	list -> add		8669678	0					
ANR	8669799	Identifier	list		8669678	0					
ANR	8669800	Identifier	add		8669678	1					
ANR	8669801	ArgumentList	list		8669678	1					
ANR	8669802	Argument	list		8669678	0					
ANR	8669803	Identifier	list		8669678	0					
ANR	8669804	Argument	this		8669678	1					
ANR	8669805	Identifier	this		8669678	0					
ANR	8669806	Argument	colour_type		8669678	2					
ANR	8669807	Identifier	colour_type		8669678	0					
ANR	8669808	Argument	bit_depth		8669678	3					
ANR	8669809	Identifier	bit_depth		8669678	0					
ANR	8669810	EqualityExpression	max == 0		8669678	1		==			
ANR	8669811	Identifier	max		8669678	0					
ANR	8669812	PrimaryExpression	0		8669678	1					
ANR	8669813	CompoundStatement		42:12:1286:1286	8669678	1					
ANR	8669814	ExpressionStatement	"* pos = safecat ( name , sizeof_name , * pos , "" +"" )"	9126:15:285263:285308	8669678	0	True				
ANR	8669815	AssignmentExpression	"* pos = safecat ( name , sizeof_name , * pos , "" +"" )"		8669678	0		=			
ANR	8669816	UnaryOperationExpression	* pos		8669678	0					
ANR	8669817	UnaryOperator	*		8669678	0					
ANR	8669818	Identifier	pos		8669678	1					
ANR	8669819	CallExpression	"safecat ( name , sizeof_name , * pos , "" +"" )"		8669678	1					
ANR	8669820	Callee	safecat		8669678	0					
ANR	8669821	Identifier	safecat		8669678	0					
ANR	8669822	ArgumentList	name		8669678	1					
ANR	8669823	Argument	name		8669678	0					
ANR	8669824	Identifier	name		8669678	0					
ANR	8669825	Argument	sizeof_name		8669678	1					
ANR	8669826	Identifier	sizeof_name		8669678	0					
ANR	8669827	Argument	* pos		8669678	2					
ANR	8669828	UnaryOperationExpression	* pos		8669678	0					
ANR	8669829	UnaryOperator	*		8669678	0					
ANR	8669830	Identifier	pos		8669678	1					
ANR	8669831	Argument	""" +"""		8669678	3					
ANR	8669832	PrimaryExpression	""" +"""		8669678	0					
ANR	8669833	ExpressionStatement	"* pos = safecat ( name , sizeof_name , * pos , list -> name )"	9127:15:285325:285376	8669678	1	True				
ANR	8669834	AssignmentExpression	"* pos = safecat ( name , sizeof_name , * pos , list -> name )"		8669678	0		=			
ANR	8669835	UnaryOperationExpression	* pos		8669678	0					
ANR	8669836	UnaryOperator	*		8669678	0					
ANR	8669837	Identifier	pos		8669678	1					
ANR	8669838	CallExpression	"safecat ( name , sizeof_name , * pos , list -> name )"		8669678	1					
ANR	8669839	Callee	safecat		8669678	0					
ANR	8669840	Identifier	safecat		8669678	0					
ANR	8669841	ArgumentList	name		8669678	1					
ANR	8669842	Argument	name		8669678	0					
ANR	8669843	Identifier	name		8669678	0					
ANR	8669844	Argument	sizeof_name		8669678	1					
ANR	8669845	Identifier	sizeof_name		8669678	0					
ANR	8669846	Argument	* pos		8669678	2					
ANR	8669847	UnaryOperationExpression	* pos		8669678	0					
ANR	8669848	UnaryOperator	*		8669678	0					
ANR	8669849	Identifier	pos		8669678	1					
ANR	8669850	Argument	list -> name		8669678	3					
ANR	8669851	PtrMemberAccess	list -> name		8669678	0					
ANR	8669852	Identifier	list		8669678	0					
ANR	8669853	Identifier	name		8669678	1					
ANR	8669854	ElseStatement	else		8669678	0					
ANR	8669855	CompoundStatement		49:12:1514:1514	8669678	0					
ANR	8669856	ExpressionStatement	* this = list -> next	9133:15:285507:285525	8669678	0	True				
ANR	8669857	AssignmentExpression	* this = list -> next		8669678	0		=			
ANR	8669858	UnaryOperationExpression	* this		8669678	0					
ANR	8669859	UnaryOperator	*		8669678	0					
ANR	8669860	Identifier	this		8669678	1					
ANR	8669861	PtrMemberAccess	list -> next		8669678	1					
ANR	8669862	Identifier	list		8669678	0					
ANR	8669863	Identifier	next		8669678	1					
ANR	8669864	ExpressionStatement	list -> next = 0	9134:15:285542:285556	8669678	1	True				
ANR	8669865	AssignmentExpression	list -> next = 0		8669678	0		=			
ANR	8669866	PtrMemberAccess	list -> next		8669678	0					
ANR	8669867	Identifier	list		8669678	0					
ANR	8669868	Identifier	next		8669678	1					
ANR	8669869	PrimaryExpression	0		8669678	1					
ANR	8669870	ExpressionStatement	list -> local_use = max	9139:15:285704:285725	8669678	2	True				
ANR	8669871	AssignmentExpression	list -> local_use = max		8669678	0		=			
ANR	8669872	PtrMemberAccess	list -> local_use		8669678	0					
ANR	8669873	Identifier	list		8669678	0					
ANR	8669874	Identifier	local_use		8669678	1					
ANR	8669875	Identifier	max		8669678	1					
ANR	8669876	ExpressionStatement	mask <<= 1	9143:9:285762:285772	8669678	1	True				
ANR	8669877	AssignmentExpression	mask <<= 1		8669678	0		<<=			
ANR	8669878	Identifier	mask		8669678	0					
ANR	8669879	PrimaryExpression	1		8669678	1					
ANR	8669880	ExpressionStatement	list = list -> list	9144:9:285783:285800	8669678	2	True				
ANR	8669881	AssignmentExpression	list = list -> list		8669678	0		=			
ANR	8669882	Identifier	list		8669678	0					
ANR	8669883	PtrMemberAccess	list -> list		8669678	1					
ANR	8669884	Identifier	list		8669678	0					
ANR	8669885	Identifier	list		8669678	1					
ANR	8669886	IfStatement	if ( * this != & image_transform_end )		8669678	7					
ANR	8669887	Condition	* this != & image_transform_end	9148:10:285884:285912	8669678	0	True				
ANR	8669888	EqualityExpression	* this != & image_transform_end		8669678	0		!=			
ANR	8669889	UnaryOperationExpression	* this		8669678	0					
ANR	8669890	UnaryOperator	*		8669678	0					
ANR	8669891	Identifier	this		8669678	1					
ANR	8669892	UnaryOperationExpression	& image_transform_end		8669678	1					
ANR	8669893	UnaryOperator	&		8669678	0					
ANR	8669894	Identifier	image_transform_end		8669678	1					
ANR	8669895	ReturnStatement	return counter ;	9149:9:285924:285938	8669678	1	True				
ANR	8669896	Identifier	counter		8669678	0					
ANR	8669897	IfStatement	"if ( ! image_transform_test_counter ( counter , max ) )"		8669678	8					
ANR	8669898	Condition	"! image_transform_test_counter ( counter , max )"	9152:10:286018:286060	8669678	0	True				
ANR	8669899	UnaryOperationExpression	"! image_transform_test_counter ( counter , max )"		8669678	0					
ANR	8669900	UnaryOperator	!		8669678	0					
ANR	8669901	CallExpression	"image_transform_test_counter ( counter , max )"		8669678	1					
ANR	8669902	Callee	image_transform_test_counter		8669678	0					
ANR	8669903	Identifier	image_transform_test_counter		8669678	0					
ANR	8669904	ArgumentList	counter		8669678	1					
ANR	8669905	Argument	counter		8669678	0					
ANR	8669906	Identifier	counter		8669678	0					
ANR	8669907	Argument	max		8669678	1					
ANR	8669908	Identifier	max		8669678	0					
ANR	8669909	ReturnStatement	return 0 ;	9153:9:286072:286080	8669678	1	True				
ANR	8669910	PrimaryExpression	0		8669678	0					
ANR	8669911	ReturnType	static png_uint_32		8669678	1					
ANR	8669912	Identifier	image_transform_add		8669678	2					
ANR	8669913	ParameterList	"const image_transform * * this , unsigned int max , png_uint_32 counter , char * name , size_t sizeof_name , size_t * pos , png_byte colour_type , png_byte bit_depth"		8669678	3					
ANR	8669914	Parameter	const image_transform * * this	9080:20:283745:283772	8669678	0	True				
ANR	8669915	ParameterType	const image_transform * *		8669678	0					
ANR	8669916	Identifier	this		8669678	1					
ANR	8669917	Parameter	unsigned int max	9080:50:283775:283790	8669678	1	True				
ANR	8669918	ParameterType	unsigned int		8669678	0					
ANR	8669919	Identifier	max		8669678	1					
ANR	8669920	Parameter	png_uint_32 counter	9081:3:283796:283814	8669678	2	True				
ANR	8669921	ParameterType	png_uint_32		8669678	0					
ANR	8669922	Identifier	counter		8669678	1					
ANR	8669923	Parameter	char * name	9081:24:283817:283826	8669678	3	True				
ANR	8669924	ParameterType	char *		8669678	0					
ANR	8669925	Identifier	name		8669678	1					
ANR	8669926	Parameter	size_t sizeof_name	9081:36:283829:283846	8669678	4	True				
ANR	8669927	ParameterType	size_t		8669678	0					
ANR	8669928	Identifier	sizeof_name		8669678	1					
ANR	8669929	Parameter	size_t * pos	9081:56:283849:283859	8669678	5	True				
ANR	8669930	ParameterType	size_t *		8669678	0					
ANR	8669931	Identifier	pos		8669678	1					
ANR	8669932	Parameter	png_byte colour_type	9082:3:283865:283884	8669678	6	True				
ANR	8669933	ParameterType	png_byte		8669678	0					
ANR	8669934	Identifier	colour_type		8669678	1					
ANR	8669935	Parameter	png_byte bit_depth	9082:25:283887:283904	8669678	7	True				
ANR	8669936	ParameterType	png_byte		8669678	0					
ANR	8669937	Identifier	bit_depth		8669678	1					
ANR	8669938	CFGEntryNode	ENTRY		8669678		True				
ANR	8669939	CFGExitNode	EXIT		8669678		True				
ANR	8669940	InfiniteForNode	true		8669678		True				
ANR	8669941	Symbol	& image_transform_end		8669678						
ANR	8669942	Symbol	list -> next		8669678						
ANR	8669943	Symbol	image_transform_first		8669678						
ANR	8669944	Symbol	image_transform_test_counter		8669678						
ANR	8669945	Symbol	max		8669678						
ANR	8669946	Symbol	this		8669678						
ANR	8669947	Symbol	list -> enable		8669678						
ANR	8669948	Symbol	counter		8669678						
ANR	8669949	Symbol	list		8669678						
ANR	8669950	Symbol	sizeof_name		8669678						
ANR	8669951	Symbol	list -> local_use		8669678						
ANR	8669952	Symbol	colour_type		8669678						
ANR	8669953	Symbol	* this		8669678						
ANR	8669954	Symbol	list -> list		8669678						
ANR	8669955	Symbol	pos		8669678						
ANR	8669956	Symbol	* list		8669678						
ANR	8669957	Symbol	safecat		8669678						
ANR	8669958	Symbol	random_32		8669678						
ANR	8669959	Symbol	name		8669678						
ANR	8669960	Symbol	list -> add		8669678						
ANR	8669961	Symbol	list -> name		8669678						
ANR	8669962	Symbol	bit_depth		8669678						
ANR	8669963	Symbol	* pos		8669678						
ANR	8669964	Symbol	mask		8669678						
ANR	8669965	Function	perform_transform_test	9157:0:286090:287250							
ANR	8669966	FunctionDef	perform_transform_test (png_modifier * pm)		8669965	0					
ANR	8669967	CompoundStatement		9159:0:286143:287250	8669965	0					
ANR	8669968	IdentifierDeclStatement	png_byte colour_type = 0 ;	9160:3:286148:286172	8669965	0	True				
ANR	8669969	IdentifierDecl	colour_type = 0		8669965	0					
ANR	8669970	IdentifierDeclType	png_byte		8669965	0					
ANR	8669971	Identifier	colour_type		8669965	1					
ANR	8669972	AssignmentExpression	colour_type = 0		8669965	2		=			
ANR	8669973	Identifier	colour_type		8669965	0					
ANR	8669974	PrimaryExpression	0		8669965	1					
ANR	8669975	IdentifierDeclStatement	png_byte bit_depth = 0 ;	9161:3:286177:286199	8669965	1	True				
ANR	8669976	IdentifierDecl	bit_depth = 0		8669965	0					
ANR	8669977	IdentifierDeclType	png_byte		8669965	0					
ANR	8669978	Identifier	bit_depth		8669965	1					
ANR	8669979	AssignmentExpression	bit_depth = 0		8669965	2		=			
ANR	8669980	Identifier	bit_depth		8669965	0					
ANR	8669981	PrimaryExpression	0		8669965	1					
ANR	8669982	IdentifierDeclStatement	unsigned int palette_number = 0 ;	9162:3:286204:286235	8669965	2	True				
ANR	8669983	IdentifierDecl	palette_number = 0		8669965	0					
ANR	8669984	IdentifierDeclType	unsigned int		8669965	0					
ANR	8669985	Identifier	palette_number		8669965	1					
ANR	8669986	AssignmentExpression	palette_number = 0		8669965	2		=			
ANR	8669987	Identifier	palette_number		8669965	0					
ANR	8669988	PrimaryExpression	0		8669965	1					
ANR	8669989	WhileStatement	"while ( next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg , pm -> test_tRNS ) )"		8669965	3					
ANR	8669990	Condition	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg , pm -> test_tRNS )"	9164:10:286248:286342	8669965	0	True				
ANR	8669991	CallExpression	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg , pm -> test_tRNS )"		8669965	0					
ANR	8669992	Callee	next_format		8669965	0					
ANR	8669993	Identifier	next_format		8669965	0					
ANR	8669994	ArgumentList	& colour_type		8669965	1					
ANR	8669995	Argument	& colour_type		8669965	0					
ANR	8669996	UnaryOperationExpression	& colour_type		8669965	0					
ANR	8669997	UnaryOperator	&		8669965	0					
ANR	8669998	Identifier	colour_type		8669965	1					
ANR	8669999	Argument	& bit_depth		8669965	1					
ANR	8670000	UnaryOperationExpression	& bit_depth		8669965	0					
ANR	8670001	UnaryOperator	&		8669965	0					
ANR	8670002	Identifier	bit_depth		8669965	1					
ANR	8670003	Argument	& palette_number		8669965	2					
ANR	8670004	UnaryOperationExpression	& palette_number		8669965	0					
ANR	8670005	UnaryOperator	&		8669965	0					
ANR	8670006	Identifier	palette_number		8669965	1					
ANR	8670007	Argument	pm -> test_lbg		8669965	3					
ANR	8670008	PtrMemberAccess	pm -> test_lbg		8669965	0					
ANR	8670009	Identifier	pm		8669965	0					
ANR	8670010	Identifier	test_lbg		8669965	1					
ANR	8670011	Argument	pm -> test_tRNS		8669965	4					
ANR	8670012	PtrMemberAccess	pm -> test_tRNS		8669965	0					
ANR	8670013	Identifier	pm		8669965	0					
ANR	8670014	Identifier	test_tRNS		8669965	1					
ANR	8670015	CompoundStatement		11:6:266:279	8669965	1					
ANR	8670016	IdentifierDeclStatement	png_uint_32 counter = 0 ;	9167:6:286356:286379	8669965	0	True				
ANR	8670017	IdentifierDecl	counter = 0		8669965	0					
ANR	8670018	IdentifierDeclType	png_uint_32		8669965	0					
ANR	8670019	Identifier	counter		8669965	1					
ANR	8670020	AssignmentExpression	counter = 0		8669965	2		=			
ANR	8670021	Identifier	counter		8669965	0					
ANR	8670022	PrimaryExpression	0		8669965	1					
ANR	8670023	IdentifierDeclStatement	size_t base_pos ;	9168:6:286387:286402	8669965	1	True				
ANR	8670024	IdentifierDecl	base_pos		8669965	0					
ANR	8670025	IdentifierDeclType	size_t		8669965	0					
ANR	8670026	Identifier	base_pos		8669965	1					
ANR	8670027	IdentifierDeclStatement	char name [ 64 ] ;	9169:6:286410:286423	8669965	2	True				
ANR	8670028	IdentifierDecl	name [ 64 ]		8669965	0					
ANR	8670029	IdentifierDeclType	char [ 64 ]		8669965	0					
ANR	8670030	Identifier	name		8669965	1					
ANR	8670031	PrimaryExpression	64		8669965	2					
ANR	8670032	ExpressionStatement	"base_pos = safecat ( name , sizeof name , 0 , ""transform:"" )"	9171:6:286432:286486	8669965	3	True				
ANR	8670033	AssignmentExpression	"base_pos = safecat ( name , sizeof name , 0 , ""transform:"" )"		8669965	0		=			
ANR	8670034	Identifier	base_pos		8669965	0					
ANR	8670035	CallExpression	"safecat ( name , sizeof name , 0 , ""transform:"" )"		8669965	1					
ANR	8670036	Callee	safecat		8669965	0					
ANR	8670037	Identifier	safecat		8669965	0					
ANR	8670038	ArgumentList	name		8669965	1					
ANR	8670039	Argument	name		8669965	0					
ANR	8670040	Identifier	name		8669965	0					
ANR	8670041	Argument	sizeof name		8669965	1					
ANR	8670042	SizeofExpression	sizeof name		8669965	0					
ANR	8670043	Sizeof	sizeof		8669965	0					
ANR	8670044	Identifier	name		8669965	1					
ANR	8670045	Argument	0		8669965	2					
ANR	8670046	PrimaryExpression	0		8669965	0					
ANR	8670047	Argument	"""transform:"""		8669965	3					
ANR	8670048	PrimaryExpression	"""transform:"""		8669965	0					
ANR	8670049	ForStatement	for ( ; ; )		8669965	4					
ANR	8670050	CompoundStatement		18:9:409:440	8669965	0					
ANR	8670051	IdentifierDeclStatement	size_t pos = base_pos ;	9175:9:286521:286542	8669965	0	True				
ANR	8670052	IdentifierDecl	pos = base_pos		8669965	0					
ANR	8670053	IdentifierDeclType	size_t		8669965	0					
ANR	8670054	Identifier	pos		8669965	1					
ANR	8670055	AssignmentExpression	pos = base_pos		8669965	2		=			
ANR	8670056	Identifier	base_pos		8669965	0					
ANR	8670057	Identifier	base_pos		8669965	1					
ANR	8670058	IdentifierDeclStatement	const image_transform * list = 0 ;	9176:9:286553:286584	8669965	1	True				
ANR	8670059	IdentifierDecl	* list = 0		8669965	0					
ANR	8670060	IdentifierDeclType	const image_transform *		8669965	0					
ANR	8670061	Identifier	list		8669965	1					
ANR	8670062	AssignmentExpression	* list = 0		8669965	2		=			
ANR	8670063	Identifier	list		8669965	0					
ANR	8670064	PrimaryExpression	0		8669965	1					
ANR	8670065	ExpressionStatement	"counter = image_transform_add ( & list , 1 , counter , name , sizeof name , & pos , colour_type , bit_depth )"	9181:9:286715:286831	8669965	2	True				
ANR	8670066	AssignmentExpression	"counter = image_transform_add ( & list , 1 , counter , name , sizeof name , & pos , colour_type , bit_depth )"		8669965	0		=			
ANR	8670067	Identifier	counter		8669965	0					
ANR	8670068	CallExpression	"image_transform_add ( & list , 1 , counter , name , sizeof name , & pos , colour_type , bit_depth )"		8669965	1					
ANR	8670069	Callee	image_transform_add		8669965	0					
ANR	8670070	Identifier	image_transform_add		8669965	0					
ANR	8670071	ArgumentList	& list		8669965	1					
ANR	8670072	Argument	& list		8669965	0					
ANR	8670073	UnaryOperationExpression	& list		8669965	0					
ANR	8670074	UnaryOperator	&		8669965	0					
ANR	8670075	Identifier	list		8669965	1					
ANR	8670076	Argument	1		8669965	1					
ANR	8670077	PrimaryExpression	1		8669965	0					
ANR	8670078	Argument	counter		8669965	2					
ANR	8670079	Identifier	counter		8669965	0					
ANR	8670080	Argument	name		8669965	3					
ANR	8670081	Identifier	name		8669965	0					
ANR	8670082	Argument	sizeof name		8669965	4					
ANR	8670083	SizeofExpression	sizeof name		8669965	0					
ANR	8670084	Sizeof	sizeof		8669965	0					
ANR	8670085	Identifier	name		8669965	1					
ANR	8670086	Argument	& pos		8669965	5					
ANR	8670087	UnaryOperationExpression	& pos		8669965	0					
ANR	8670088	UnaryOperator	&		8669965	0					
ANR	8670089	Identifier	pos		8669965	1					
ANR	8670090	Argument	colour_type		8669965	6					
ANR	8670091	Identifier	colour_type		8669965	0					
ANR	8670092	Argument	bit_depth		8669965	7					
ANR	8670093	Identifier	bit_depth		8669965	0					
ANR	8670094	IfStatement	if ( counter == 0 )		8669965	3					
ANR	8670095	Condition	counter == 0	9184:13:286847:286858	8669965	0	True				
ANR	8670096	EqualityExpression	counter == 0		8669965	0		==			
ANR	8670097	Identifier	counter		8669965	0					
ANR	8670098	PrimaryExpression	0		8669965	1					
ANR	8670099	BreakStatement	break ;	9185:12:286873:286878	8669965	1	True				
ANR	8670100	DoStatement	do		8669965	4					
ANR	8670101	CompoundStatement		31:9:837:837	8669965	0					
ANR	8670102	ExpressionStatement	pm -> repeat = 0	9190:12:286995:287009	8669965	0	True				
ANR	8670103	AssignmentExpression	pm -> repeat = 0		8669965	0		=			
ANR	8670104	PtrMemberAccess	pm -> repeat		8669965	0					
ANR	8670105	Identifier	pm		8669965	0					
ANR	8670106	Identifier	repeat		8669965	1					
ANR	8670107	PrimaryExpression	0		8669965	1					
ANR	8670108	ExpressionStatement	"transform_test ( pm , FILEID ( colour_type , bit_depth , palette_number , pm -> interlace_type , 0 , 0 , 0 ) , list , name )"	9191:12:287023:287145	8669965	1	True				
ANR	8670109	CallExpression	"transform_test ( pm , FILEID ( colour_type , bit_depth , palette_number , pm -> interlace_type , 0 , 0 , 0 ) , list , name )"		8669965	0					
ANR	8670110	Callee	transform_test		8669965	0					
ANR	8670111	Identifier	transform_test		8669965	0					
ANR	8670112	ArgumentList	pm		8669965	1					
ANR	8670113	Argument	pm		8669965	0					
ANR	8670114	Identifier	pm		8669965	0					
ANR	8670115	Argument	"FILEID ( colour_type , bit_depth , palette_number , pm -> interlace_type , 0 , 0 , 0 )"		8669965	1					
ANR	8670116	CallExpression	"FILEID ( colour_type , bit_depth , palette_number , pm -> interlace_type , 0 , 0 , 0 )"		8669965	0					
ANR	8670117	Callee	FILEID		8669965	0					
ANR	8670118	Identifier	FILEID		8669965	0					
ANR	8670119	ArgumentList	colour_type		8669965	1					
ANR	8670120	Argument	colour_type		8669965	0					
ANR	8670121	Identifier	colour_type		8669965	0					
ANR	8670122	Argument	bit_depth		8669965	1					
ANR	8670123	Identifier	bit_depth		8669965	0					
ANR	8670124	Argument	palette_number		8669965	2					
ANR	8670125	Identifier	palette_number		8669965	0					
ANR	8670126	Argument	pm -> interlace_type		8669965	3					
ANR	8670127	PtrMemberAccess	pm -> interlace_type		8669965	0					
ANR	8670128	Identifier	pm		8669965	0					
ANR	8670129	Identifier	interlace_type		8669965	1					
ANR	8670130	Argument	0		8669965	4					
ANR	8670131	PrimaryExpression	0		8669965	0					
ANR	8670132	Argument	0		8669965	5					
ANR	8670133	PrimaryExpression	0		8669965	0					
ANR	8670134	Argument	0		8669965	6					
ANR	8670135	PrimaryExpression	0		8669965	0					
ANR	8670136	Argument	list		8669965	2					
ANR	8670137	Identifier	list		8669965	0					
ANR	8670138	Argument	name		8669965	3					
ANR	8670139	Identifier	name		8669965	0					
ANR	8670140	IfStatement	if ( fail ( pm ) )		8669965	2					
ANR	8670141	Condition	fail ( pm )	9194:16:287164:287171	8669965	0	True				
ANR	8670142	CallExpression	fail ( pm )		8669965	0					
ANR	8670143	Callee	fail		8669965	0					
ANR	8670144	Identifier	fail		8669965	0					
ANR	8670145	ArgumentList	pm		8669965	1					
ANR	8670146	Argument	pm		8669965	0					
ANR	8670147	Identifier	pm		8669965	0					
ANR	8670148	ReturnStatement	return ;	9195:15:287189:287195	8669965	1	True				
ANR	8670149	Condition	pm -> repeat	9197:16:287224:287233	8669965	1	True				
ANR	8670150	PtrMemberAccess	pm -> repeat		8669965	0					
ANR	8670151	Identifier	pm		8669965	0					
ANR	8670152	Identifier	repeat		8669965	1					
ANR	8670153	ReturnType	static void		8669965	1					
ANR	8670154	Identifier	perform_transform_test		8669965	2					
ANR	8670155	ParameterList	png_modifier * pm		8669965	3					
ANR	8670156	Parameter	png_modifier * pm	9158:23:286125:286140	8669965	0	True				
ANR	8670157	ParameterType	png_modifier *		8669965	0					
ANR	8670158	Identifier	pm		8669965	1					
ANR	8670159	CFGEntryNode	ENTRY		8669965		True				
ANR	8670160	CFGExitNode	EXIT		8669965		True				
ANR	8670161	InfiniteForNode	true		8669965		True				
ANR	8670162	Symbol	* pm		8669965						
ANR	8670163	Symbol	pm -> test_tRNS		8669965						
ANR	8670164	Symbol	next_format		8669965						
ANR	8670165	Symbol	pm -> test_lbg		8669965						
ANR	8670166	Symbol	counter		8669965						
ANR	8670167	Symbol	list		8669965						
ANR	8670168	Symbol	FILEID		8669965						
ANR	8670169	Symbol	pm -> repeat		8669965						
ANR	8670170	Symbol	palette_number		8669965						
ANR	8670171	Symbol	base_pos		8669965						
ANR	8670172	Symbol	colour_type		8669965						
ANR	8670173	Symbol	& palette_number		8669965						
ANR	8670174	Symbol	image_transform_add		8669965						
ANR	8670175	Symbol	fail		8669965						
ANR	8670176	Symbol	pos		8669965						
ANR	8670177	Symbol	& list		8669965						
ANR	8670178	Symbol	safecat		8669965						
ANR	8670179	Symbol	& colour_type		8669965						
ANR	8670180	Symbol	name		8669965						
ANR	8670181	Symbol	& bit_depth		8669965						
ANR	8670182	Symbol	pm -> interlace_type		8669965						
ANR	8670183	Symbol	bit_depth		8669965						
ANR	8670184	Symbol	pm		8669965						
ANR	8670185	Symbol	& pos		8669965						
ANR	8670186	ClassDef	gamma_display	9208:8:287507:288061							
ANR	8670187	DeclStmt									
ANR	8670188	Decl							standard_display	standard_display	this
ANR	8670189	DeclStmt									
ANR	8670190	Decl							png_modifier	png_modifier *	pm
ANR	8670191	DeclStmt									
ANR	8670192	Decl							double	double	file_gamma
ANR	8670193	DeclStmt									
ANR	8670194	Decl							double	double	screen_gamma
ANR	8670195	DeclStmt									
ANR	8670196	Decl							double	double	background_gamma
ANR	8670197	DeclStmt									
ANR	8670198	Decl							png_byte	png_byte	sbit
ANR	8670199	DeclStmt									
ANR	8670200	Decl							int	int	threshold_test
ANR	8670201	DeclStmt									
ANR	8670202	Decl							int	int	use_input_precision
ANR	8670203	DeclStmt									
ANR	8670204	Decl							int	int	scale16
ANR	8670205	DeclStmt									
ANR	8670206	Decl							int	int	expand16
ANR	8670207	DeclStmt									
ANR	8670208	Decl							int	int	do_background
ANR	8670209	DeclStmt									
ANR	8670210	Decl							png_color_16	png_color_16	background_color
ANR	8670211	DeclStmt									
ANR	8670212	Decl							double	double	maxerrout
ANR	8670213	DeclStmt									
ANR	8670214	Decl							double	double	maxerrpc
ANR	8670215	DeclStmt									
ANR	8670216	Decl							double	double	maxerrabs
ANR	8670217	DeclStmt									
ANR	8670218	Decl							gamma_display	gamma_display	gamma_display
ANR	8670219	Function	gamma_display_init	9233:0:288093:289186							
ANR	8670220	FunctionDef	"gamma_display_init (gamma_display * dp , png_modifier * pm , png_uint_32 id , double file_gamma , double screen_gamma , png_byte sbit , int threshold_test , int use_input_precision , int scale16 , int expand16 , int do_background , const png_color_16 * pointer_to_the_background_color , double background_gamma)"		8670219	0					
ANR	8670221	CompoundStatement		9239:0:288417:289186	8670219	0					
ANR	8670222	ExpressionStatement	"standard_display_init ( & dp -> this , & pm -> this , id , do_read_interlace , pm -> use_update_info )"	9241:3:288447:288540	8670219	0	True				
ANR	8670223	CallExpression	"standard_display_init ( & dp -> this , & pm -> this , id , do_read_interlace , pm -> use_update_info )"		8670219	0					
ANR	8670224	Callee	standard_display_init		8670219	0					
ANR	8670225	Identifier	standard_display_init		8670219	0					
ANR	8670226	ArgumentList	& dp -> this		8670219	1					
ANR	8670227	Argument	& dp -> this		8670219	0					
ANR	8670228	UnaryOperationExpression	& dp -> this		8670219	0					
ANR	8670229	UnaryOperator	&		8670219	0					
ANR	8670230	PtrMemberAccess	dp -> this		8670219	1					
ANR	8670231	Identifier	dp		8670219	0					
ANR	8670232	Identifier	this		8670219	1					
ANR	8670233	Argument	& pm -> this		8670219	1					
ANR	8670234	UnaryOperationExpression	& pm -> this		8670219	0					
ANR	8670235	UnaryOperator	&		8670219	0					
ANR	8670236	PtrMemberAccess	pm -> this		8670219	1					
ANR	8670237	Identifier	pm		8670219	0					
ANR	8670238	Identifier	this		8670219	1					
ANR	8670239	Argument	id		8670219	2					
ANR	8670240	Identifier	id		8670219	0					
ANR	8670241	Argument	do_read_interlace		8670219	3					
ANR	8670242	Identifier	do_read_interlace		8670219	0					
ANR	8670243	Argument	pm -> use_update_info		8670219	4					
ANR	8670244	PtrMemberAccess	pm -> use_update_info		8670219	0					
ANR	8670245	Identifier	pm		8670219	0					
ANR	8670246	Identifier	use_update_info		8670219	1					
ANR	8670247	ExpressionStatement	dp -> pm = pm	9245:3:288572:288583	8670219	1	True				
ANR	8670248	AssignmentExpression	dp -> pm = pm		8670219	0		=			
ANR	8670249	PtrMemberAccess	dp -> pm		8670219	0					
ANR	8670250	Identifier	dp		8670219	0					
ANR	8670251	Identifier	pm		8670219	1					
ANR	8670252	Identifier	pm		8670219	1					
ANR	8670253	ExpressionStatement	dp -> file_gamma = file_gamma	9246:3:288588:288615	8670219	2	True				
ANR	8670254	AssignmentExpression	dp -> file_gamma = file_gamma		8670219	0		=			
ANR	8670255	PtrMemberAccess	dp -> file_gamma		8670219	0					
ANR	8670256	Identifier	dp		8670219	0					
ANR	8670257	Identifier	file_gamma		8670219	1					
ANR	8670258	Identifier	file_gamma		8670219	1					
ANR	8670259	ExpressionStatement	dp -> screen_gamma = screen_gamma	9247:3:288620:288651	8670219	3	True				
ANR	8670260	AssignmentExpression	dp -> screen_gamma = screen_gamma		8670219	0		=			
ANR	8670261	PtrMemberAccess	dp -> screen_gamma		8670219	0					
ANR	8670262	Identifier	dp		8670219	0					
ANR	8670263	Identifier	screen_gamma		8670219	1					
ANR	8670264	Identifier	screen_gamma		8670219	1					
ANR	8670265	ExpressionStatement	dp -> background_gamma = background_gamma	9248:3:288656:288695	8670219	4	True				
ANR	8670266	AssignmentExpression	dp -> background_gamma = background_gamma		8670219	0		=			
ANR	8670267	PtrMemberAccess	dp -> background_gamma		8670219	0					
ANR	8670268	Identifier	dp		8670219	0					
ANR	8670269	Identifier	background_gamma		8670219	1					
ANR	8670270	Identifier	background_gamma		8670219	1					
ANR	8670271	ExpressionStatement	dp -> sbit = sbit	9249:3:288700:288715	8670219	5	True				
ANR	8670272	AssignmentExpression	dp -> sbit = sbit		8670219	0		=			
ANR	8670273	PtrMemberAccess	dp -> sbit		8670219	0					
ANR	8670274	Identifier	dp		8670219	0					
ANR	8670275	Identifier	sbit		8670219	1					
ANR	8670276	Identifier	sbit		8670219	1					
ANR	8670277	ExpressionStatement	dp -> threshold_test = threshold_test	9250:3:288720:288755	8670219	6	True				
ANR	8670278	AssignmentExpression	dp -> threshold_test = threshold_test		8670219	0		=			
ANR	8670279	PtrMemberAccess	dp -> threshold_test		8670219	0					
ANR	8670280	Identifier	dp		8670219	0					
ANR	8670281	Identifier	threshold_test		8670219	1					
ANR	8670282	Identifier	threshold_test		8670219	1					
ANR	8670283	ExpressionStatement	dp -> use_input_precision = use_input_precision	9251:3:288760:288805	8670219	7	True				
ANR	8670284	AssignmentExpression	dp -> use_input_precision = use_input_precision		8670219	0		=			
ANR	8670285	PtrMemberAccess	dp -> use_input_precision		8670219	0					
ANR	8670286	Identifier	dp		8670219	0					
ANR	8670287	Identifier	use_input_precision		8670219	1					
ANR	8670288	Identifier	use_input_precision		8670219	1					
ANR	8670289	ExpressionStatement	dp -> scale16 = scale16	9252:3:288810:288831	8670219	8	True				
ANR	8670290	AssignmentExpression	dp -> scale16 = scale16		8670219	0		=			
ANR	8670291	PtrMemberAccess	dp -> scale16		8670219	0					
ANR	8670292	Identifier	dp		8670219	0					
ANR	8670293	Identifier	scale16		8670219	1					
ANR	8670294	Identifier	scale16		8670219	1					
ANR	8670295	ExpressionStatement	dp -> expand16 = expand16	9253:3:288836:288859	8670219	9	True				
ANR	8670296	AssignmentExpression	dp -> expand16 = expand16		8670219	0		=			
ANR	8670297	PtrMemberAccess	dp -> expand16		8670219	0					
ANR	8670298	Identifier	dp		8670219	0					
ANR	8670299	Identifier	expand16		8670219	1					
ANR	8670300	Identifier	expand16		8670219	1					
ANR	8670301	ExpressionStatement	dp -> do_background = do_background	9254:3:288864:288897	8670219	10	True				
ANR	8670302	AssignmentExpression	dp -> do_background = do_background		8670219	0		=			
ANR	8670303	PtrMemberAccess	dp -> do_background		8670219	0					
ANR	8670304	Identifier	dp		8670219	0					
ANR	8670305	Identifier	do_background		8670219	1					
ANR	8670306	Identifier	do_background		8670219	1					
ANR	8670307	IfStatement	if ( do_background && pointer_to_the_background_color != 0 )		8670219	11					
ANR	8670308	Condition	do_background && pointer_to_the_background_color != 0	9255:7:288906:288958	8670219	0	True				
ANR	8670309	AndExpression	do_background && pointer_to_the_background_color != 0		8670219	0		&&			
ANR	8670310	Identifier	do_background		8670219	0					
ANR	8670311	EqualityExpression	pointer_to_the_background_color != 0		8670219	1		!=			
ANR	8670312	Identifier	pointer_to_the_background_color		8670219	0					
ANR	8670313	PrimaryExpression	0		8670219	1					
ANR	8670314	ExpressionStatement	dp -> background_color = * pointer_to_the_background_color	9256:6:288967:289022	8670219	1	True				
ANR	8670315	AssignmentExpression	dp -> background_color = * pointer_to_the_background_color		8670219	0		=			
ANR	8670316	PtrMemberAccess	dp -> background_color		8670219	0					
ANR	8670317	Identifier	dp		8670219	0					
ANR	8670318	Identifier	background_color		8670219	1					
ANR	8670319	UnaryOperationExpression	* pointer_to_the_background_color		8670219	1					
ANR	8670320	UnaryOperator	*		8670219	0					
ANR	8670321	Identifier	pointer_to_the_background_color		8670219	1					
ANR	8670322	ElseStatement	else		8670219	0					
ANR	8670323	ExpressionStatement	"memset ( & dp -> background_color , 0 , sizeof dp -> background_color )"	9258:6:289038:289099	8670219	0	True				
ANR	8670324	CallExpression	"memset ( & dp -> background_color , 0 , sizeof dp -> background_color )"		8670219	0					
ANR	8670325	Callee	memset		8670219	0					
ANR	8670326	Identifier	memset		8670219	0					
ANR	8670327	ArgumentList	& dp -> background_color		8670219	1					
ANR	8670328	Argument	& dp -> background_color		8670219	0					
ANR	8670329	UnaryOperationExpression	& dp -> background_color		8670219	0					
ANR	8670330	UnaryOperator	&		8670219	0					
ANR	8670331	PtrMemberAccess	dp -> background_color		8670219	1					
ANR	8670332	Identifier	dp		8670219	0					
ANR	8670333	Identifier	background_color		8670219	1					
ANR	8670334	Argument	0		8670219	1					
ANR	8670335	PrimaryExpression	0		8670219	0					
ANR	8670336	Argument	sizeof dp -> background_color		8670219	2					
ANR	8670337	SizeofExpression	sizeof dp -> background_color		8670219	0					
ANR	8670338	Sizeof	sizeof		8670219	0					
ANR	8670339	PtrMemberAccess	dp -> background_color		8670219	1					
ANR	8670340	Identifier	dp		8670219	0					
ANR	8670341	Identifier	background_color		8670219	1					
ANR	8670342	ExpressionStatement	dp -> maxerrout = dp -> maxerrpc = dp -> maxerrabs = 0	9261:3:289136:289184	8670219	12	True				
ANR	8670343	AssignmentExpression	dp -> maxerrout = dp -> maxerrpc = dp -> maxerrabs = 0		8670219	0		=			
ANR	8670344	PtrMemberAccess	dp -> maxerrout		8670219	0					
ANR	8670345	Identifier	dp		8670219	0					
ANR	8670346	Identifier	maxerrout		8670219	1					
ANR	8670347	AssignmentExpression	dp -> maxerrpc = dp -> maxerrabs = 0		8670219	1		=			
ANR	8670348	PtrMemberAccess	dp -> maxerrpc		8670219	0					
ANR	8670349	Identifier	dp		8670219	0					
ANR	8670350	Identifier	maxerrpc		8670219	1					
ANR	8670351	AssignmentExpression	dp -> maxerrabs = 0		8670219	1		=			
ANR	8670352	PtrMemberAccess	dp -> maxerrabs		8670219	0					
ANR	8670353	Identifier	dp		8670219	0					
ANR	8670354	Identifier	maxerrabs		8670219	1					
ANR	8670355	PrimaryExpression	0		8670219	1					
ANR	8670356	ReturnType	static void		8670219	1					
ANR	8670357	Identifier	gamma_display_init		8670219	2					
ANR	8670358	ParameterList	"gamma_display * dp , png_modifier * pm , png_uint_32 id , double file_gamma , double screen_gamma , png_byte sbit , int threshold_test , int use_input_precision , int scale16 , int expand16 , int do_background , const png_color_16 * pointer_to_the_background_color , double background_gamma"		8670219	3					
ANR	8670359	Parameter	gamma_display * dp	9234:19:288124:288140	8670219	0	True				
ANR	8670360	ParameterType	gamma_display *		8670219	0					
ANR	8670361	Identifier	dp		8670219	1					
ANR	8670362	Parameter	png_modifier * pm	9234:38:288143:288158	8670219	1	True				
ANR	8670363	ParameterType	png_modifier *		8670219	0					
ANR	8670364	Identifier	pm		8670219	1					
ANR	8670365	Parameter	png_uint_32 id	9234:56:288161:288174	8670219	2	True				
ANR	8670366	ParameterType	png_uint_32		8670219	0					
ANR	8670367	Identifier	id		8670219	1					
ANR	8670368	Parameter	double file_gamma	9235:4:288181:288197	8670219	3	True				
ANR	8670369	ParameterType	double		8670219	0					
ANR	8670370	Identifier	file_gamma		8670219	1					
ANR	8670371	Parameter	double screen_gamma	9235:23:288200:288218	8670219	4	True				
ANR	8670372	ParameterType	double		8670219	0					
ANR	8670373	Identifier	screen_gamma		8670219	1					
ANR	8670374	Parameter	png_byte sbit	9235:44:288221:288233	8670219	5	True				
ANR	8670375	ParameterType	png_byte		8670219	0					
ANR	8670376	Identifier	sbit		8670219	1					
ANR	8670377	Parameter	int threshold_test	9235:59:288236:288253	8670219	6	True				
ANR	8670378	ParameterType	int		8670219	0					
ANR	8670379	Identifier	threshold_test		8670219	1					
ANR	8670380	Parameter	int use_input_precision	9236:4:288260:288282	8670219	7	True				
ANR	8670381	ParameterType	int		8670219	0					
ANR	8670382	Identifier	use_input_precision		8670219	1					
ANR	8670383	Parameter	int scale16	9236:29:288285:288295	8670219	8	True				
ANR	8670384	ParameterType	int		8670219	0					
ANR	8670385	Identifier	scale16		8670219	1					
ANR	8670386	Parameter	int expand16	9236:42:288298:288309	8670219	9	True				
ANR	8670387	ParameterType	int		8670219	0					
ANR	8670388	Identifier	expand16		8670219	1					
ANR	8670389	Parameter	int do_background	9237:4:288316:288332	8670219	10	True				
ANR	8670390	ParameterType	int		8670219	0					
ANR	8670391	Identifier	do_background		8670219	1					
ANR	8670392	Parameter	const png_color_16 * pointer_to_the_background_color	9237:23:288335:288385	8670219	11	True				
ANR	8670393	ParameterType	const png_color_16 *		8670219	0					
ANR	8670394	Identifier	pointer_to_the_background_color		8670219	1					
ANR	8670395	Parameter	double background_gamma	9238:4:288392:288414	8670219	12	True				
ANR	8670396	ParameterType	double		8670219	0					
ANR	8670397	Identifier	background_gamma		8670219	1					
ANR	8670398	CFGEntryNode	ENTRY		8670219		True				
ANR	8670399	CFGExitNode	EXIT		8670219		True				
ANR	8670400	Symbol	dp -> background_color		8670219						
ANR	8670401	Symbol	dp -> use_input_precision		8670219						
ANR	8670402	Symbol	do_background		8670219						
ANR	8670403	Symbol	scale16		8670219						
ANR	8670404	Symbol	dp		8670219						
ANR	8670405	Symbol	background_gamma		8670219						
ANR	8670406	Symbol	dp -> do_background		8670219						
ANR	8670407	Symbol	sbit		8670219						
ANR	8670408	Symbol	dp -> scale16		8670219						
ANR	8670409	Symbol	* dp		8670219						
ANR	8670410	Symbol	dp -> screen_gamma		8670219						
ANR	8670411	Symbol	threshold_test		8670219						
ANR	8670412	Symbol	expand16		8670219						
ANR	8670413	Symbol	dp -> maxerrabs		8670219						
ANR	8670414	Symbol	& pm -> this		8670219						
ANR	8670415	Symbol	dp -> pm		8670219						
ANR	8670416	Symbol	dp -> expand16		8670219						
ANR	8670417	Symbol	id		8670219						
ANR	8670418	Symbol	* pm		8670219						
ANR	8670419	Symbol	* pointer_to_the_background_color		8670219						
ANR	8670420	Symbol	do_read_interlace		8670219						
ANR	8670421	Symbol	use_input_precision		8670219						
ANR	8670422	Symbol	& dp -> this		8670219						
ANR	8670423	Symbol	dp -> file_gamma		8670219						
ANR	8670424	Symbol	dp -> background_gamma		8670219						
ANR	8670425	Symbol	dp -> threshold_test		8670219						
ANR	8670426	Symbol	dp -> maxerrout		8670219						
ANR	8670427	Symbol	dp -> maxerrpc		8670219						
ANR	8670428	Symbol	dp -> sbit		8670219						
ANR	8670429	Symbol	screen_gamma		8670219						
ANR	8670430	Symbol	pm -> use_update_info		8670219						
ANR	8670431	Symbol	file_gamma		8670219						
ANR	8670432	Symbol	& dp -> background_color		8670219						
ANR	8670433	Symbol	pm		8670219						
ANR	8670434	Symbol	pointer_to_the_background_color		8670219						
ANR	8670435	Function	gamma_info_imp	9264:0:289189:292984							
ANR	8670436	FunctionDef	"gamma_info_imp (gamma_display * dp , png_structp pp , png_infop pi)"		8670435	0					
ANR	8670437	CompoundStatement		9266:0:289265:292984	8670435	0					
ANR	8670438	ExpressionStatement	"standard_info_part1 ( & dp -> this , pp , pi )"	9268:3:289320:289358	8670435	0	True				
ANR	8670439	CallExpression	"standard_info_part1 ( & dp -> this , pp , pi )"		8670435	0					
ANR	8670440	Callee	standard_info_part1		8670435	0					
ANR	8670441	Identifier	standard_info_part1		8670435	0					
ANR	8670442	ArgumentList	& dp -> this		8670435	1					
ANR	8670443	Argument	& dp -> this		8670435	0					
ANR	8670444	UnaryOperationExpression	& dp -> this		8670435	0					
ANR	8670445	UnaryOperator	&		8670435	0					
ANR	8670446	PtrMemberAccess	dp -> this		8670435	1					
ANR	8670447	Identifier	dp		8670435	0					
ANR	8670448	Identifier	this		8670435	1					
ANR	8670449	Argument	pp		8670435	1					
ANR	8670450	Identifier	pp		8670435	0					
ANR	8670451	Argument	pi		8670435	2					
ANR	8670452	Identifier	pi		8670435	0					
ANR	8670453	IfStatement	if ( dp -> scale16 )		8670435	1					
ANR	8670454	Condition	dp -> scale16	9275:7:289666:289676	8670435	0	True				
ANR	8670455	PtrMemberAccess	dp -> scale16		8670435	0					
ANR	8670456	Identifier	dp		8670435	0					
ANR	8670457	Identifier	scale16		8670435	1					
ANR	8670458	IdentifierDeclStatement	ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED png_set_scale_16 ( pp ) ;	9276:6:289685:289753	8670435	1	True				
ANR	8670459	IdentifierDecl	png_set_scale_16 ( pp )		8670435	0					
ANR	8670460	IdentifierDeclType	ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED		8670435	0					
ANR	8670461	Identifier	png_set_scale_16		8670435	1					
ANR	8670462	Identifier	pp		8670435	2					
ANR	8670463	ElseStatement	else		8670435	0					
ANR	8670464	IdentifierDeclStatement	ifdef PNG_READ_16_TO_8_SUPPORTED png_set_strip_16 ( pp ) ;	9280:9:289846:289911	8670435	0	True				
ANR	8670465	IdentifierDecl	png_set_strip_16 ( pp )		8670435	0					
ANR	8670466	IdentifierDeclType	ifdef PNG_READ_16_TO_8_SUPPORTED		8670435	0					
ANR	8670467	Identifier	png_set_strip_16		8670435	1					
ANR	8670468	Identifier	pp		8670435	2					
ANR	8670469	ReturnType	static void		8670435	1					
ANR	8670470	Identifier	gamma_info_imp		8670435	2					
ANR	8670471	ParameterList	"gamma_display * dp , png_structp pp , png_infop pi"		8670435	3					
ANR	8670472	Parameter	gamma_display * dp	9265:15:289216:289232	8670435	0	True				
ANR	8670473	ParameterType	gamma_display *		8670435	0					
ANR	8670474	Identifier	dp		8670435	1					
ANR	8670475	Parameter	png_structp pp	9265:34:289235:289248	8670435	1	True				
ANR	8670476	ParameterType	png_structp		8670435	0					
ANR	8670477	Identifier	pp		8670435	1					
ANR	8670478	Parameter	png_infop pi	9265:50:289251:289262	8670435	2	True				
ANR	8670479	ParameterType	png_infop		8670435	0					
ANR	8670480	Identifier	pi		8670435	1					
ANR	8670481	CFGEntryNode	ENTRY		8670435		True				
ANR	8670482	CFGExitNode	EXIT		8670435		True				
ANR	8670483	Symbol	pp		8670435						
ANR	8670484	Symbol	dp -> scale16		8670435						
ANR	8670485	Symbol	* dp		8670435						
ANR	8670486	Symbol	png_set_scale_16		8670435						
ANR	8670487	Symbol	pi		8670435						
ANR	8670488	Symbol	png_set_strip_16		8670435						
ANR	8670489	Symbol	& dp -> this		8670435						
ANR	8670490	Symbol	dp		8670435						
ANR	8670491	Function	gamma_info	9383:0:292987:293139							
ANR	8670492	FunctionDef	"gamma_info (png_structp pp , png_infop pi)"		8670491	0					
ANR	8670493	CompoundStatement		9385:0:293049:293139	8670491	0					
ANR	8670494	Statement	gamma_info_imp	9386:3:293054:293067	8670491	0	True				
ANR	8670495	Statement	(	9386:17:293068:293068	8670491	1	True				
ANR	8670496	Statement	voidcast	9386:18:293069:293076	8670491	2	True				
ANR	8670497	Statement	(	9386:26:293077:293077	8670491	3	True				
ANR	8670498	Statement	gamma_display	9386:27:293078:293090	8670491	4	True				
ANR	8670499	Statement	*	9386:40:293091:293091	8670491	5	True				
ANR	8670500	Statement	","	9386:41:293092:293092	8670491	6	True				
ANR	8670501	Statement	png_get_progressive_ptr	9386:43:293094:293116	8670491	7	True				
ANR	8670502	Statement	(	9386:66:293117:293117	8670491	8	True				
ANR	8670503	Statement	pp	9386:67:293118:293119	8670491	9	True				
ANR	8670504	Statement	)	9386:69:293120:293120	8670491	10	True				
ANR	8670505	Statement	)	9386:70:293121:293121	8670491	11	True				
ANR	8670506	Statement	","	9386:71:293122:293122	8670491	12	True				
ANR	8670507	Statement	pp	9386:73:293124:293125	8670491	13	True				
ANR	8670508	Statement	","	9386:75:293126:293126	8670491	14	True				
ANR	8670509	Statement	pi	9387:6:293134:293135	8670491	15	True				
ANR	8670510	Statement	)	9387:8:293136:293136	8670491	16	True				
ANR	8670511	ExpressionStatement		9387:9:293137:293137	8670491	17	True				
ANR	8670512	ReturnType	static void PNGCBAPI		8670491	1					
ANR	8670513	Identifier	gamma_info		8670491	2					
ANR	8670514	ParameterList	"png_structp pp , png_infop pi"		8670491	3					
ANR	8670515	Parameter	png_structp pp	9384:11:293019:293032	8670491	0	True				
ANR	8670516	ParameterType	png_structp		8670491	0					
ANR	8670517	Identifier	pp		8670491	1					
ANR	8670518	Parameter	png_infop pi	9384:27:293035:293046	8670491	1	True				
ANR	8670519	ParameterType	png_infop		8670491	0					
ANR	8670520	Identifier	pi		8670491	1					
ANR	8670521	CFGEntryNode	ENTRY		8670491		True				
ANR	8670522	CFGExitNode	EXIT		8670491		True				
ANR	8670523	Symbol	pp		8670491						
ANR	8670524	Symbol	pi		8670491						
ANR	8670525	ClassDef	validate_info	9394:8:293359:294120							
ANR	8670526	DeclStmt									
ANR	8670527	Decl							png_const_structp	png_const_structp	pp
ANR	8670528	DeclStmt									
ANR	8670529	Decl							gamma_display	gamma_display *	dp
ANR	8670530	DeclStmt									
ANR	8670531	Decl							png_byte	png_byte	sbit
ANR	8670532	DeclStmt									
ANR	8670533	Decl							int	int	use_input_precision
ANR	8670534	DeclStmt									
ANR	8670535	Decl							int	int	do_background
ANR	8670536	DeclStmt									
ANR	8670537	Decl							int	int	scale16
ANR	8670538	DeclStmt									
ANR	8670539	Decl							unsigned int	unsigned int	sbit_max
ANR	8670540	DeclStmt									
ANR	8670541	Decl							unsigned int	unsigned int	isbit_shift
ANR	8670542	DeclStmt									
ANR	8670543	Decl							unsigned int	unsigned int	outmax
ANR	8670544	DeclStmt									
ANR	8670545	Decl							double	double	gamma_correction
ANR	8670546	DeclStmt									
ANR	8670547	Decl							double	double	file_inverse
ANR	8670548	DeclStmt									
ANR	8670549	Decl							double	double	screen_gamma
ANR	8670550	DeclStmt									
ANR	8670551	Decl							double	double	screen_inverse
ANR	8670552	DeclStmt									
ANR	8670553	Decl							double	double	background_red
ANR	8670554	DeclStmt									
ANR	8670555	Decl							double	double	background_green
ANR	8670556	DeclStmt									
ANR	8670557	Decl							double	double	background_blue
ANR	8670558	DeclStmt									
ANR	8670559	Decl							double	double	maxabs
ANR	8670560	DeclStmt									
ANR	8670561	Decl							double	double	maxpc
ANR	8670562	DeclStmt									
ANR	8670563	Decl							double	double	maxcalc
ANR	8670564	DeclStmt									
ANR	8670565	Decl							double	double	maxout
ANR	8670566	DeclStmt									
ANR	8670567	Decl							double	double	maxout_total
ANR	8670568	DeclStmt									
ANR	8670569	Decl							double	double	outlog
ANR	8670570	DeclStmt									
ANR	8670571	Decl							int	int	outquant
ANR	8670572	DeclStmt									
ANR	8670573	Decl							validate_info	validate_info	validate_info
ANR	8670574	Function	init_validate_info	9425:0:294123:296926							
ANR	8670575	FunctionDef	"init_validate_info (validate_info * vi , gamma_display * dp , png_const_structp pp , int in_depth , int out_depth)"		8670574	0					
ANR	8670576	CompoundStatement		9428:0:294247:296926	8670574	0					
ANR	8670577	IdentifierDeclStatement	const unsigned int outmax = ( 1U << out_depth ) - 1 ;	9429:3:294252:294297	8670574	0	True				
ANR	8670578	IdentifierDecl	outmax = ( 1U << out_depth ) - 1		8670574	0					
ANR	8670579	IdentifierDeclType	const unsigned int		8670574	0					
ANR	8670580	Identifier	outmax		8670574	1					
ANR	8670581	AssignmentExpression	outmax = ( 1U << out_depth ) - 1		8670574	2		=			
ANR	8670582	Identifier	outmax		8670574	0					
ANR	8670583	AdditiveExpression	( 1U << out_depth ) - 1		8670574	1		-			
ANR	8670584	ShiftExpression	1U << out_depth		8670574	0		<<			
ANR	8670585	PrimaryExpression	1U		8670574	0					
ANR	8670586	Identifier	out_depth		8670574	1					
ANR	8670587	PrimaryExpression	1		8670574	1					
ANR	8670588	ExpressionStatement	vi -> pp = pp	9431:3:294303:294314	8670574	1	True				
ANR	8670589	AssignmentExpression	vi -> pp = pp		8670574	0		=			
ANR	8670590	PtrMemberAccess	vi -> pp		8670574	0					
ANR	8670591	Identifier	vi		8670574	0					
ANR	8670592	Identifier	pp		8670574	1					
ANR	8670593	Identifier	pp		8670574	1					
ANR	8670594	ExpressionStatement	vi -> dp = dp	9432:3:294319:294330	8670574	2	True				
ANR	8670595	AssignmentExpression	vi -> dp = dp		8670574	0		=			
ANR	8670596	PtrMemberAccess	vi -> dp		8670574	0					
ANR	8670597	Identifier	vi		8670574	0					
ANR	8670598	Identifier	dp		8670574	1					
ANR	8670599	Identifier	dp		8670574	1					
ANR	8670600	IfStatement	if ( dp -> sbit > 0 && dp -> sbit < in_depth )		8670574	3					
ANR	8670601	Condition	dp -> sbit > 0 && dp -> sbit < in_depth	9434:7:294340:294374	8670574	0	True				
ANR	8670602	AndExpression	dp -> sbit > 0 && dp -> sbit < in_depth		8670574	0		&&			
ANR	8670603	RelationalExpression	dp -> sbit > 0		8670574	0		>			
ANR	8670604	PtrMemberAccess	dp -> sbit		8670574	0					
ANR	8670605	Identifier	dp		8670574	0					
ANR	8670606	Identifier	sbit		8670574	1					
ANR	8670607	PrimaryExpression	0		8670574	1					
ANR	8670608	RelationalExpression	dp -> sbit < in_depth		8670574	1		<			
ANR	8670609	PtrMemberAccess	dp -> sbit		8670574	0					
ANR	8670610	Identifier	dp		8670574	0					
ANR	8670611	Identifier	sbit		8670574	1					
ANR	8670612	Identifier	in_depth		8670574	1					
ANR	8670613	CompoundStatement		8:3:132:132	8670574	1					
ANR	8670614	ExpressionStatement	vi -> sbit = dp -> sbit	9436:6:294388:294407	8670574	0	True				
ANR	8670615	AssignmentExpression	vi -> sbit = dp -> sbit		8670574	0		=			
ANR	8670616	PtrMemberAccess	vi -> sbit		8670574	0					
ANR	8670617	Identifier	vi		8670574	0					
ANR	8670618	Identifier	sbit		8670574	1					
ANR	8670619	PtrMemberAccess	dp -> sbit		8670574	1					
ANR	8670620	Identifier	dp		8670574	0					
ANR	8670621	Identifier	sbit		8670574	1					
ANR	8670622	ExpressionStatement	vi -> isbit_shift = in_depth - dp -> sbit	9437:6:294415:294452	8670574	1	True				
ANR	8670623	AssignmentExpression	vi -> isbit_shift = in_depth - dp -> sbit		8670574	0		=			
ANR	8670624	PtrMemberAccess	vi -> isbit_shift		8670574	0					
ANR	8670625	Identifier	vi		8670574	0					
ANR	8670626	Identifier	isbit_shift		8670574	1					
ANR	8670627	AdditiveExpression	in_depth - dp -> sbit		8670574	1		-			
ANR	8670628	Identifier	in_depth		8670574	0					
ANR	8670629	PtrMemberAccess	dp -> sbit		8670574	1					
ANR	8670630	Identifier	dp		8670574	0					
ANR	8670631	Identifier	sbit		8670574	1					
ANR	8670632	ElseStatement	else		8670574	0					
ANR	8670633	CompoundStatement		14:3:223:223	8670574	0					
ANR	8670634	ExpressionStatement	vi -> sbit = ( png_byte ) in_depth	9442:6:294479:294508	8670574	0	True				
ANR	8670635	AssignmentExpression	vi -> sbit = ( png_byte ) in_depth		8670574	0		=			
ANR	8670636	PtrMemberAccess	vi -> sbit		8670574	0					
ANR	8670637	Identifier	vi		8670574	0					
ANR	8670638	Identifier	sbit		8670574	1					
ANR	8670639	CastExpression	( png_byte ) in_depth		8670574	1					
ANR	8670640	CastTarget	png_byte		8670574	0					
ANR	8670641	Identifier	in_depth		8670574	1					
ANR	8670642	ExpressionStatement	vi -> isbit_shift = 0	9443:6:294516:294535	8670574	1	True				
ANR	8670643	AssignmentExpression	vi -> isbit_shift = 0		8670574	0		=			
ANR	8670644	PtrMemberAccess	vi -> isbit_shift		8670574	0					
ANR	8670645	Identifier	vi		8670574	0					
ANR	8670646	Identifier	isbit_shift		8670574	1					
ANR	8670647	PrimaryExpression	0		8670574	1					
ANR	8670648	ExpressionStatement	vi -> sbit_max = ( 1U << vi -> sbit ) - 1	9446:3:294546:294579	8670574	4	True				
ANR	8670649	AssignmentExpression	vi -> sbit_max = ( 1U << vi -> sbit ) - 1		8670574	0		=			
ANR	8670650	PtrMemberAccess	vi -> sbit_max		8670574	0					
ANR	8670651	Identifier	vi		8670574	0					
ANR	8670652	Identifier	sbit_max		8670574	1					
ANR	8670653	AdditiveExpression	( 1U << vi -> sbit ) - 1		8670574	1		-			
ANR	8670654	ShiftExpression	1U << vi -> sbit		8670574	0		<<			
ANR	8670655	PrimaryExpression	1U		8670574	0					
ANR	8670656	PtrMemberAccess	vi -> sbit		8670574	1					
ANR	8670657	Identifier	vi		8670574	0					
ANR	8670658	Identifier	sbit		8670574	1					
ANR	8670659	PrimaryExpression	1		8670574	1					
ANR	8670660	ExpressionStatement	vi -> screen_gamma = dp -> screen_gamma	9451:3:294707:294742	8670574	5	True				
ANR	8670661	AssignmentExpression	vi -> screen_gamma = dp -> screen_gamma		8670574	0		=			
ANR	8670662	PtrMemberAccess	vi -> screen_gamma		8670574	0					
ANR	8670663	Identifier	vi		8670574	0					
ANR	8670664	Identifier	screen_gamma		8670574	1					
ANR	8670665	PtrMemberAccess	dp -> screen_gamma		8670574	1					
ANR	8670666	Identifier	dp		8670574	0					
ANR	8670667	Identifier	screen_gamma		8670574	1					
ANR	8670668	IfStatement	if ( fabs ( vi -> screen_gamma - 1 ) < PNG_GAMMA_THRESHOLD )		8670574	6					
ANR	8670669	Condition	fabs ( vi -> screen_gamma - 1 ) < PNG_GAMMA_THRESHOLD	9452:7:294751:294796	8670574	0	True				
ANR	8670670	RelationalExpression	fabs ( vi -> screen_gamma - 1 ) < PNG_GAMMA_THRESHOLD		8670574	0		<			
ANR	8670671	CallExpression	fabs ( vi -> screen_gamma - 1 )		8670574	0					
ANR	8670672	Callee	fabs		8670574	0					
ANR	8670673	Identifier	fabs		8670574	0					
ANR	8670674	ArgumentList	vi -> screen_gamma - 1		8670574	1					
ANR	8670675	Argument	vi -> screen_gamma - 1		8670574	0					
ANR	8670676	AdditiveExpression	vi -> screen_gamma - 1		8670574	0		-			
ANR	8670677	PtrMemberAccess	vi -> screen_gamma		8670574	0					
ANR	8670678	Identifier	vi		8670574	0					
ANR	8670679	Identifier	screen_gamma		8670574	1					
ANR	8670680	PrimaryExpression	1		8670574	1					
ANR	8670681	Identifier	PNG_GAMMA_THRESHOLD		8670574	1					
ANR	8670682	ExpressionStatement	vi -> screen_gamma = vi -> screen_inverse = 0	9453:6:294805:294846	8670574	1	True				
ANR	8670683	AssignmentExpression	vi -> screen_gamma = vi -> screen_inverse = 0		8670574	0		=			
ANR	8670684	PtrMemberAccess	vi -> screen_gamma		8670574	0					
ANR	8670685	Identifier	vi		8670574	0					
ANR	8670686	Identifier	screen_gamma		8670574	1					
ANR	8670687	AssignmentExpression	vi -> screen_inverse = 0		8670574	1		=			
ANR	8670688	PtrMemberAccess	vi -> screen_inverse		8670574	0					
ANR	8670689	Identifier	vi		8670574	0					
ANR	8670690	Identifier	screen_inverse		8670574	1					
ANR	8670691	PrimaryExpression	0		8670574	1					
ANR	8670692	ElseStatement	else		8670574	0					
ANR	8670693	ExpressionStatement	vi -> screen_inverse = 1 / vi -> screen_gamma	9455:6:294862:294901	8670574	0	True				
ANR	8670694	AssignmentExpression	vi -> screen_inverse = 1 / vi -> screen_gamma		8670574	0		=			
ANR	8670695	PtrMemberAccess	vi -> screen_inverse		8670574	0					
ANR	8670696	Identifier	vi		8670574	0					
ANR	8670697	Identifier	screen_inverse		8670574	1					
ANR	8670698	MultiplicativeExpression	1 / vi -> screen_gamma		8670574	1		/			
ANR	8670699	PrimaryExpression	1		8670574	0					
ANR	8670700	PtrMemberAccess	vi -> screen_gamma		8670574	1					
ANR	8670701	Identifier	vi		8670574	0					
ANR	8670702	Identifier	screen_gamma		8670574	1					
ANR	8670703	ExpressionStatement	vi -> use_input_precision = dp -> use_input_precision	9457:3:294907:294956	8670574	7	True				
ANR	8670704	AssignmentExpression	vi -> use_input_precision = dp -> use_input_precision		8670574	0		=			
ANR	8670705	PtrMemberAccess	vi -> use_input_precision		8670574	0					
ANR	8670706	Identifier	vi		8670574	0					
ANR	8670707	Identifier	use_input_precision		8670574	1					
ANR	8670708	PtrMemberAccess	dp -> use_input_precision		8670574	1					
ANR	8670709	Identifier	dp		8670574	0					
ANR	8670710	Identifier	use_input_precision		8670574	1					
ANR	8670711	ExpressionStatement	vi -> outmax = outmax	9458:3:294961:294980	8670574	8	True				
ANR	8670712	AssignmentExpression	vi -> outmax = outmax		8670574	0		=			
ANR	8670713	PtrMemberAccess	vi -> outmax		8670574	0					
ANR	8670714	Identifier	vi		8670574	0					
ANR	8670715	Identifier	outmax		8670574	1					
ANR	8670716	Identifier	outmax		8670574	1					
ANR	8670717	ExpressionStatement	"vi -> maxabs = abserr ( dp -> pm , in_depth , out_depth )"	9459:3:294985:295033	8670574	9	True				
ANR	8670718	AssignmentExpression	"vi -> maxabs = abserr ( dp -> pm , in_depth , out_depth )"		8670574	0		=			
ANR	8670719	PtrMemberAccess	vi -> maxabs		8670574	0					
ANR	8670720	Identifier	vi		8670574	0					
ANR	8670721	Identifier	maxabs		8670574	1					
ANR	8670722	CallExpression	"abserr ( dp -> pm , in_depth , out_depth )"		8670574	1					
ANR	8670723	Callee	abserr		8670574	0					
ANR	8670724	Identifier	abserr		8670574	0					
ANR	8670725	ArgumentList	dp -> pm		8670574	1					
ANR	8670726	Argument	dp -> pm		8670574	0					
ANR	8670727	PtrMemberAccess	dp -> pm		8670574	0					
ANR	8670728	Identifier	dp		8670574	0					
ANR	8670729	Identifier	pm		8670574	1					
ANR	8670730	Argument	in_depth		8670574	1					
ANR	8670731	Identifier	in_depth		8670574	0					
ANR	8670732	Argument	out_depth		8670574	2					
ANR	8670733	Identifier	out_depth		8670574	0					
ANR	8670734	ExpressionStatement	"vi -> maxpc = pcerr ( dp -> pm , in_depth , out_depth )"	9460:3:295038:295084	8670574	10	True				
ANR	8670735	AssignmentExpression	"vi -> maxpc = pcerr ( dp -> pm , in_depth , out_depth )"		8670574	0		=			
ANR	8670736	PtrMemberAccess	vi -> maxpc		8670574	0					
ANR	8670737	Identifier	vi		8670574	0					
ANR	8670738	Identifier	maxpc		8670574	1					
ANR	8670739	CallExpression	"pcerr ( dp -> pm , in_depth , out_depth )"		8670574	1					
ANR	8670740	Callee	pcerr		8670574	0					
ANR	8670741	Identifier	pcerr		8670574	0					
ANR	8670742	ArgumentList	dp -> pm		8670574	1					
ANR	8670743	Argument	dp -> pm		8670574	0					
ANR	8670744	PtrMemberAccess	dp -> pm		8670574	0					
ANR	8670745	Identifier	dp		8670574	0					
ANR	8670746	Identifier	pm		8670574	1					
ANR	8670747	Argument	in_depth		8670574	1					
ANR	8670748	Identifier	in_depth		8670574	0					
ANR	8670749	Argument	out_depth		8670574	2					
ANR	8670750	Identifier	out_depth		8670574	0					
ANR	8670751	ExpressionStatement	"vi -> maxcalc = calcerr ( dp -> pm , in_depth , out_depth )"	9461:3:295089:295139	8670574	11	True				
ANR	8670752	AssignmentExpression	"vi -> maxcalc = calcerr ( dp -> pm , in_depth , out_depth )"		8670574	0		=			
ANR	8670753	PtrMemberAccess	vi -> maxcalc		8670574	0					
ANR	8670754	Identifier	vi		8670574	0					
ANR	8670755	Identifier	maxcalc		8670574	1					
ANR	8670756	CallExpression	"calcerr ( dp -> pm , in_depth , out_depth )"		8670574	1					
ANR	8670757	Callee	calcerr		8670574	0					
ANR	8670758	Identifier	calcerr		8670574	0					
ANR	8670759	ArgumentList	dp -> pm		8670574	1					
ANR	8670760	Argument	dp -> pm		8670574	0					
ANR	8670761	PtrMemberAccess	dp -> pm		8670574	0					
ANR	8670762	Identifier	dp		8670574	0					
ANR	8670763	Identifier	pm		8670574	1					
ANR	8670764	Argument	in_depth		8670574	1					
ANR	8670765	Identifier	in_depth		8670574	0					
ANR	8670766	Argument	out_depth		8670574	2					
ANR	8670767	Identifier	out_depth		8670574	0					
ANR	8670768	ExpressionStatement	"vi -> maxout = outerr ( dp -> pm , in_depth , out_depth )"	9462:3:295144:295192	8670574	12	True				
ANR	8670769	AssignmentExpression	"vi -> maxout = outerr ( dp -> pm , in_depth , out_depth )"		8670574	0		=			
ANR	8670770	PtrMemberAccess	vi -> maxout		8670574	0					
ANR	8670771	Identifier	vi		8670574	0					
ANR	8670772	Identifier	maxout		8670574	1					
ANR	8670773	CallExpression	"outerr ( dp -> pm , in_depth , out_depth )"		8670574	1					
ANR	8670774	Callee	outerr		8670574	0					
ANR	8670775	Identifier	outerr		8670574	0					
ANR	8670776	ArgumentList	dp -> pm		8670574	1					
ANR	8670777	Argument	dp -> pm		8670574	0					
ANR	8670778	PtrMemberAccess	dp -> pm		8670574	0					
ANR	8670779	Identifier	dp		8670574	0					
ANR	8670780	Identifier	pm		8670574	1					
ANR	8670781	Argument	in_depth		8670574	1					
ANR	8670782	Identifier	in_depth		8670574	0					
ANR	8670783	Argument	out_depth		8670574	2					
ANR	8670784	Identifier	out_depth		8670574	0					
ANR	8670785	ExpressionStatement	"vi -> outquant = output_quantization_factor ( dp -> pm , in_depth , out_depth )"	9463:3:295197:295267	8670574	13	True				
ANR	8670786	AssignmentExpression	"vi -> outquant = output_quantization_factor ( dp -> pm , in_depth , out_depth )"		8670574	0		=			
ANR	8670787	PtrMemberAccess	vi -> outquant		8670574	0					
ANR	8670788	Identifier	vi		8670574	0					
ANR	8670789	Identifier	outquant		8670574	1					
ANR	8670790	CallExpression	"output_quantization_factor ( dp -> pm , in_depth , out_depth )"		8670574	1					
ANR	8670791	Callee	output_quantization_factor		8670574	0					
ANR	8670792	Identifier	output_quantization_factor		8670574	0					
ANR	8670793	ArgumentList	dp -> pm		8670574	1					
ANR	8670794	Argument	dp -> pm		8670574	0					
ANR	8670795	PtrMemberAccess	dp -> pm		8670574	0					
ANR	8670796	Identifier	dp		8670574	0					
ANR	8670797	Identifier	pm		8670574	1					
ANR	8670798	Argument	in_depth		8670574	1					
ANR	8670799	Identifier	in_depth		8670574	0					
ANR	8670800	Argument	out_depth		8670574	2					
ANR	8670801	Identifier	out_depth		8670574	0					
ANR	8670802	ExpressionStatement	vi -> maxout_total = vi -> maxout + vi -> outquant * .5	9464:3:295272:295321	8670574	14	True				
ANR	8670803	AssignmentExpression	vi -> maxout_total = vi -> maxout + vi -> outquant * .5		8670574	0		=			
ANR	8670804	PtrMemberAccess	vi -> maxout_total		8670574	0					
ANR	8670805	Identifier	vi		8670574	0					
ANR	8670806	Identifier	maxout_total		8670574	1					
ANR	8670807	AdditiveExpression	vi -> maxout + vi -> outquant * .5		8670574	1		+			
ANR	8670808	PtrMemberAccess	vi -> maxout		8670574	0					
ANR	8670809	Identifier	vi		8670574	0					
ANR	8670810	Identifier	maxout		8670574	1					
ANR	8670811	MultiplicativeExpression	vi -> outquant * .5		8670574	1		*			
ANR	8670812	PtrMemberAccess	vi -> outquant		8670574	0					
ANR	8670813	Identifier	vi		8670574	0					
ANR	8670814	Identifier	outquant		8670574	1					
ANR	8670815	PrimaryExpression	.5		8670574	1					
ANR	8670816	ExpressionStatement	"vi -> outlog = outlog ( dp -> pm , in_depth , out_depth )"	9465:3:295326:295374	8670574	15	True				
ANR	8670817	AssignmentExpression	"vi -> outlog = outlog ( dp -> pm , in_depth , out_depth )"		8670574	0		=			
ANR	8670818	PtrMemberAccess	vi -> outlog		8670574	0					
ANR	8670819	Identifier	vi		8670574	0					
ANR	8670820	Identifier	outlog		8670574	1					
ANR	8670821	CallExpression	"outlog ( dp -> pm , in_depth , out_depth )"		8670574	1					
ANR	8670822	Callee	outlog		8670574	0					
ANR	8670823	Identifier	outlog		8670574	0					
ANR	8670824	ArgumentList	dp -> pm		8670574	1					
ANR	8670825	Argument	dp -> pm		8670574	0					
ANR	8670826	PtrMemberAccess	dp -> pm		8670574	0					
ANR	8670827	Identifier	dp		8670574	0					
ANR	8670828	Identifier	pm		8670574	1					
ANR	8670829	Argument	in_depth		8670574	1					
ANR	8670830	Identifier	in_depth		8670574	0					
ANR	8670831	Argument	out_depth		8670574	2					
ANR	8670832	Identifier	out_depth		8670574	0					
ANR	8670833	IfStatement	if ( ( dp -> this . colour_type & PNG_COLOR_MASK_ALPHA ) != 0 || ( dp -> this . colour_type == 3 && dp -> this . is_transparent ) || ( ( dp -> this . colour_type == 0 || dp -> this . colour_type == 2 ) && dp -> this . has_tRNS ) )		8670574	16					
ANR	8670834	Condition	( dp -> this . colour_type & PNG_COLOR_MASK_ALPHA ) != 0 || ( dp -> this . colour_type == 3 && dp -> this . is_transparent ) || ( ( dp -> this . colour_type == 0 || dp -> this . colour_type == 2 ) && dp -> this . has_tRNS )	9467:7:295384:295593	8670574	0	True				
ANR	8670835	OrExpression	( dp -> this . colour_type & PNG_COLOR_MASK_ALPHA ) != 0 || ( dp -> this . colour_type == 3 && dp -> this . is_transparent ) || ( ( dp -> this . colour_type == 0 || dp -> this . colour_type == 2 ) && dp -> this . has_tRNS )		8670574	0		||			
ANR	8670836	EqualityExpression	( dp -> this . colour_type & PNG_COLOR_MASK_ALPHA ) != 0		8670574	0		!=			
ANR	8670837	BitAndExpression	dp -> this . colour_type & PNG_COLOR_MASK_ALPHA		8670574	0		&			
ANR	8670838	MemberAccess	dp -> this . colour_type		8670574	0					
ANR	8670839	PtrMemberAccess	dp -> this		8670574	0					
ANR	8670840	Identifier	dp		8670574	0					
ANR	8670841	Identifier	this		8670574	1					
ANR	8670842	Identifier	colour_type		8670574	1					
ANR	8670843	Identifier	PNG_COLOR_MASK_ALPHA		8670574	1					
ANR	8670844	PrimaryExpression	0		8670574	1					
ANR	8670845	OrExpression	( dp -> this . colour_type == 3 && dp -> this . is_transparent ) || ( ( dp -> this . colour_type == 0 || dp -> this . colour_type == 2 ) && dp -> this . has_tRNS )		8670574	1		||			
ANR	8670846	AndExpression	dp -> this . colour_type == 3 && dp -> this . is_transparent		8670574	0		&&			
ANR	8670847	EqualityExpression	dp -> this . colour_type == 3		8670574	0		==			
ANR	8670848	MemberAccess	dp -> this . colour_type		8670574	0					
ANR	8670849	PtrMemberAccess	dp -> this		8670574	0					
ANR	8670850	Identifier	dp		8670574	0					
ANR	8670851	Identifier	this		8670574	1					
ANR	8670852	Identifier	colour_type		8670574	1					
ANR	8670853	PrimaryExpression	3		8670574	1					
ANR	8670854	MemberAccess	dp -> this . is_transparent		8670574	1					
ANR	8670855	PtrMemberAccess	dp -> this		8670574	0					
ANR	8670856	Identifier	dp		8670574	0					
ANR	8670857	Identifier	this		8670574	1					
ANR	8670858	Identifier	is_transparent		8670574	1					
ANR	8670859	AndExpression	( dp -> this . colour_type == 0 || dp -> this . colour_type == 2 ) && dp -> this . has_tRNS		8670574	1		&&			
ANR	8670860	OrExpression	dp -> this . colour_type == 0 || dp -> this . colour_type == 2		8670574	0		||			
ANR	8670861	EqualityExpression	dp -> this . colour_type == 0		8670574	0		==			
ANR	8670862	MemberAccess	dp -> this . colour_type		8670574	0					
ANR	8670863	PtrMemberAccess	dp -> this		8670574	0					
ANR	8670864	Identifier	dp		8670574	0					
ANR	8670865	Identifier	this		8670574	1					
ANR	8670866	Identifier	colour_type		8670574	1					
ANR	8670867	PrimaryExpression	0		8670574	1					
ANR	8670868	EqualityExpression	dp -> this . colour_type == 2		8670574	1		==			
ANR	8670869	MemberAccess	dp -> this . colour_type		8670574	0					
ANR	8670870	PtrMemberAccess	dp -> this		8670574	0					
ANR	8670871	Identifier	dp		8670574	0					
ANR	8670872	Identifier	this		8670574	1					
ANR	8670873	Identifier	colour_type		8670574	1					
ANR	8670874	PrimaryExpression	2		8670574	1					
ANR	8670875	MemberAccess	dp -> this . has_tRNS		8670574	1					
ANR	8670876	PtrMemberAccess	dp -> this		8670574	0					
ANR	8670877	Identifier	dp		8670574	0					
ANR	8670878	Identifier	this		8670574	1					
ANR	8670879	Identifier	has_tRNS		8670574	1					
ANR	8670880	CompoundStatement		44:3:1351:1351	8670574	1					
ANR	8670881	ExpressionStatement	vi -> do_background = dp -> do_background	9472:6:295607:295644	8670574	0	True				
ANR	8670882	AssignmentExpression	vi -> do_background = dp -> do_background		8670574	0		=			
ANR	8670883	PtrMemberAccess	vi -> do_background		8670574	0					
ANR	8670884	Identifier	vi		8670574	0					
ANR	8670885	Identifier	do_background		8670574	1					
ANR	8670886	PtrMemberAccess	dp -> do_background		8670574	1					
ANR	8670887	Identifier	dp		8670574	0					
ANR	8670888	Identifier	do_background		8670574	1					
ANR	8670889	IfStatement	if ( vi -> do_background != 0 )		8670574	1					
ANR	8670890	Condition	vi -> do_background != 0	9474:10:295657:295678	8670574	0	True				
ANR	8670891	EqualityExpression	vi -> do_background != 0		8670574	0		!=			
ANR	8670892	PtrMemberAccess	vi -> do_background		8670574	0					
ANR	8670893	Identifier	vi		8670574	0					
ANR	8670894	Identifier	do_background		8670574	1					
ANR	8670895	PrimaryExpression	0		8670574	1					
ANR	8670896	CompoundStatement		50:9:1509:1523	8670574	1					
ANR	8670897	IdentifierDeclStatement	const double bg_inverse = 1 / dp -> background_gamma ;	9476:9:295698:295746	8670574	0	True				
ANR	8670898	IdentifierDecl	bg_inverse = 1 / dp -> background_gamma		8670574	0					
ANR	8670899	IdentifierDeclType	const double		8670574	0					
ANR	8670900	Identifier	bg_inverse		8670574	1					
ANR	8670901	AssignmentExpression	bg_inverse = 1 / dp -> background_gamma		8670574	2		=			
ANR	8670902	Identifier	bg_inverse		8670574	0					
ANR	8670903	MultiplicativeExpression	1 / dp -> background_gamma		8670574	1		/			
ANR	8670904	PrimaryExpression	1		8670574	0					
ANR	8670905	PtrMemberAccess	dp -> background_gamma		8670574	1					
ANR	8670906	Identifier	dp		8670574	0					
ANR	8670907	Identifier	background_gamma		8670574	1					
ANR	8670908	IdentifierDeclStatement	"double r , g , b ;"	9477:9:295757:295771	8670574	1	True				
ANR	8670909	IdentifierDecl	r		8670574	0					
ANR	8670910	IdentifierDeclType	double		8670574	0					
ANR	8670911	Identifier	r		8670574	1					
ANR	8670912	IdentifierDecl	g		8670574	1					
ANR	8670913	IdentifierDeclType	double		8670574	0					
ANR	8670914	Identifier	g		8670574	1					
ANR	8670915	IdentifierDecl	b		8670574	2					
ANR	8670916	IdentifierDeclType	double		8670574	0					
ANR	8670917	Identifier	b		8670574	1					
ANR	8670918	ExpressionStatement	r = dp -> background_color . red	9480:9:295859:295887	8670574	2	True				
ANR	8670919	AssignmentExpression	r = dp -> background_color . red		8670574	0		=			
ANR	8670920	Identifier	r		8670574	0					
ANR	8670921	MemberAccess	dp -> background_color . red		8670574	1					
ANR	8670922	PtrMemberAccess	dp -> background_color		8670574	0					
ANR	8670923	Identifier	dp		8670574	0					
ANR	8670924	Identifier	background_color		8670574	1					
ANR	8670925	Identifier	red		8670574	1					
ANR	8670926	ExpressionStatement	r /= outmax	9480:39:295889:295900	8670574	3	True				
ANR	8670927	AssignmentExpression	r /= outmax		8670574	0		/=			
ANR	8670928	Identifier	r		8670574	0					
ANR	8670929	Identifier	outmax		8670574	1					
ANR	8670930	ExpressionStatement	g = dp -> background_color . green	9481:9:295911:295941	8670574	4	True				
ANR	8670931	AssignmentExpression	g = dp -> background_color . green		8670574	0		=			
ANR	8670932	Identifier	g		8670574	0					
ANR	8670933	MemberAccess	dp -> background_color . green		8670574	1					
ANR	8670934	PtrMemberAccess	dp -> background_color		8670574	0					
ANR	8670935	Identifier	dp		8670574	0					
ANR	8670936	Identifier	background_color		8670574	1					
ANR	8670937	Identifier	green		8670574	1					
ANR	8670938	ExpressionStatement	g /= outmax	9481:41:295943:295954	8670574	5	True				
ANR	8670939	AssignmentExpression	g /= outmax		8670574	0		/=			
ANR	8670940	Identifier	g		8670574	0					
ANR	8670941	Identifier	outmax		8670574	1					
ANR	8670942	ExpressionStatement	b = dp -> background_color . blue	9482:9:295965:295994	8670574	6	True				
ANR	8670943	AssignmentExpression	b = dp -> background_color . blue		8670574	0		=			
ANR	8670944	Identifier	b		8670574	0					
ANR	8670945	MemberAccess	dp -> background_color . blue		8670574	1					
ANR	8670946	PtrMemberAccess	dp -> background_color		8670574	0					
ANR	8670947	Identifier	dp		8670574	0					
ANR	8670948	Identifier	background_color		8670574	1					
ANR	8670949	Identifier	blue		8670574	1					
ANR	8670950	ExpressionStatement	b /= outmax	9482:40:295996:296007	8670574	7	True				
ANR	8670951	AssignmentExpression	b /= outmax		8670574	0		/=			
ANR	8670952	Identifier	b		8670574	0					
ANR	8670953	Identifier	outmax		8670574	1					
ANR	8670954	Statement	if	9484:6:296016:296017	8670574	8	True				
ANR	8670955	Statement	0	9484:9:296019:296019	8670574	9	True				
ANR	8670956	IfStatement	if ( fabs ( bg_inverse - 1 ) >= PNG_GAMMA_THRESHOLD )		8670574	10					
ANR	8670957	Condition	fabs ( bg_inverse - 1 ) >= PNG_GAMMA_THRESHOLD	9487:13:296125:296165	8670574	0	True				
ANR	8670958	RelationalExpression	fabs ( bg_inverse - 1 ) >= PNG_GAMMA_THRESHOLD		8670574	0		>=			
ANR	8670959	CallExpression	fabs ( bg_inverse - 1 )		8670574	0					
ANR	8670960	Callee	fabs		8670574	0					
ANR	8670961	Identifier	fabs		8670574	0					
ANR	8670962	ArgumentList	bg_inverse - 1		8670574	1					
ANR	8670963	Argument	bg_inverse - 1		8670574	0					
ANR	8670964	AdditiveExpression	bg_inverse - 1		8670574	0		-			
ANR	8670965	Identifier	bg_inverse		8670574	0					
ANR	8670966	PrimaryExpression	1		8670574	1					
ANR	8670967	Identifier	PNG_GAMMA_THRESHOLD		8670574	1					
ANR	8670968	Statement	endif	9488:6:296174:296178	8670574	1	True				
ANR	8670969	CompoundStatement		62:9:1941:1941	8670574	11					
ANR	8670970	ExpressionStatement	"r = pow ( r , bg_inverse )"	9490:12:296203:296225	8670574	0	True				
ANR	8670971	AssignmentExpression	"r = pow ( r , bg_inverse )"		8670574	0		=			
ANR	8670972	Identifier	r		8670574	0					
ANR	8670973	CallExpression	"pow ( r , bg_inverse )"		8670574	1					
ANR	8670974	Callee	pow		8670574	0					
ANR	8670975	Identifier	pow		8670574	0					
ANR	8670976	ArgumentList	r		8670574	1					
ANR	8670977	Argument	r		8670574	0					
ANR	8670978	Identifier	r		8670574	0					
ANR	8670979	Argument	bg_inverse		8670574	1					
ANR	8670980	Identifier	bg_inverse		8670574	0					
ANR	8670981	ExpressionStatement	"g = pow ( g , bg_inverse )"	9491:12:296239:296261	8670574	1	True				
ANR	8670982	AssignmentExpression	"g = pow ( g , bg_inverse )"		8670574	0		=			
ANR	8670983	Identifier	g		8670574	0					
ANR	8670984	CallExpression	"pow ( g , bg_inverse )"		8670574	1					
ANR	8670985	Callee	pow		8670574	0					
ANR	8670986	Identifier	pow		8670574	0					
ANR	8670987	ArgumentList	g		8670574	1					
ANR	8670988	Argument	g		8670574	0					
ANR	8670989	Identifier	g		8670574	0					
ANR	8670990	Argument	bg_inverse		8670574	1					
ANR	8670991	Identifier	bg_inverse		8670574	0					
ANR	8670992	ExpressionStatement	"b = pow ( b , bg_inverse )"	9492:12:296275:296297	8670574	2	True				
ANR	8670993	AssignmentExpression	"b = pow ( b , bg_inverse )"		8670574	0		=			
ANR	8670994	Identifier	b		8670574	0					
ANR	8670995	CallExpression	"pow ( b , bg_inverse )"		8670574	1					
ANR	8670996	Callee	pow		8670574	0					
ANR	8670997	Identifier	pow		8670574	0					
ANR	8670998	ArgumentList	b		8670574	1					
ANR	8670999	Argument	b		8670574	0					
ANR	8671000	Identifier	b		8670574	0					
ANR	8671001	Argument	bg_inverse		8670574	1					
ANR	8671002	Identifier	bg_inverse		8670574	0					
ANR	8671003	ExpressionStatement	vi -> background_red = r	9495:9:296320:296342	8670574	12	True				
ANR	8671004	AssignmentExpression	vi -> background_red = r		8670574	0		=			
ANR	8671005	PtrMemberAccess	vi -> background_red		8670574	0					
ANR	8671006	Identifier	vi		8670574	0					
ANR	8671007	Identifier	background_red		8670574	1					
ANR	8671008	Identifier	r		8670574	1					
ANR	8671009	ExpressionStatement	vi -> background_green = g	9496:9:296353:296377	8670574	13	True				
ANR	8671010	AssignmentExpression	vi -> background_green = g		8670574	0		=			
ANR	8671011	PtrMemberAccess	vi -> background_green		8670574	0					
ANR	8671012	Identifier	vi		8670574	0					
ANR	8671013	Identifier	background_green		8670574	1					
ANR	8671014	Identifier	g		8670574	1					
ANR	8671015	ExpressionStatement	vi -> background_blue = b	9497:9:296388:296411	8670574	14	True				
ANR	8671016	AssignmentExpression	vi -> background_blue = b		8670574	0		=			
ANR	8671017	PtrMemberAccess	vi -> background_blue		8670574	0					
ANR	8671018	Identifier	vi		8670574	0					
ANR	8671019	Identifier	background_blue		8670574	1					
ANR	8671020	Identifier	b		8670574	1					
ANR	8671021	ElseStatement	else		8670574	0					
ANR	8671022	ExpressionStatement	vi -> do_background = 0	9501:6:296486:296507	8670574	0	True				
ANR	8671023	AssignmentExpression	vi -> do_background = 0		8670574	0		=			
ANR	8671024	PtrMemberAccess	vi -> do_background		8670574	0					
ANR	8671025	Identifier	vi		8670574	0					
ANR	8671026	Identifier	do_background		8670574	1					
ANR	8671027	PrimaryExpression	0		8670574	1					
ANR	8671028	IfStatement	if ( vi -> do_background == 0 )		8670574	17					
ANR	8671029	Condition	vi -> do_background == 0	9503:7:296517:296538	8670574	0	True				
ANR	8671030	EqualityExpression	vi -> do_background == 0		8670574	0		==			
ANR	8671031	PtrMemberAccess	vi -> do_background		8670574	0					
ANR	8671032	Identifier	vi		8670574	0					
ANR	8671033	Identifier	do_background		8670574	1					
ANR	8671034	PrimaryExpression	0		8670574	1					
ANR	8671035	ExpressionStatement	vi -> background_red = vi -> background_green = vi -> background_blue = 0	9504:6:296547:296614	8670574	1	True				
ANR	8671036	AssignmentExpression	vi -> background_red = vi -> background_green = vi -> background_blue = 0		8670574	0		=			
ANR	8671037	PtrMemberAccess	vi -> background_red		8670574	0					
ANR	8671038	Identifier	vi		8670574	0					
ANR	8671039	Identifier	background_red		8670574	1					
ANR	8671040	AssignmentExpression	vi -> background_green = vi -> background_blue = 0		8670574	1		=			
ANR	8671041	PtrMemberAccess	vi -> background_green		8670574	0					
ANR	8671042	Identifier	vi		8670574	0					
ANR	8671043	Identifier	background_green		8670574	1					
ANR	8671044	AssignmentExpression	vi -> background_blue = 0		8670574	1		=			
ANR	8671045	PtrMemberAccess	vi -> background_blue		8670574	0					
ANR	8671046	Identifier	vi		8670574	0					
ANR	8671047	Identifier	background_blue		8670574	1					
ANR	8671048	PrimaryExpression	0		8670574	1					
ANR	8671049	ExpressionStatement	vi -> gamma_correction = 1 / ( dp -> file_gamma * dp -> screen_gamma )	9506:3:296620:296678	8670574	18	True				
ANR	8671050	AssignmentExpression	vi -> gamma_correction = 1 / ( dp -> file_gamma * dp -> screen_gamma )		8670574	0		=			
ANR	8671051	PtrMemberAccess	vi -> gamma_correction		8670574	0					
ANR	8671052	Identifier	vi		8670574	0					
ANR	8671053	Identifier	gamma_correction		8670574	1					
ANR	8671054	MultiplicativeExpression	1 / ( dp -> file_gamma * dp -> screen_gamma )		8670574	1		/			
ANR	8671055	PrimaryExpression	1		8670574	0					
ANR	8671056	MultiplicativeExpression	dp -> file_gamma * dp -> screen_gamma		8670574	1		*			
ANR	8671057	PtrMemberAccess	dp -> file_gamma		8670574	0					
ANR	8671058	Identifier	dp		8670574	0					
ANR	8671059	Identifier	file_gamma		8670574	1					
ANR	8671060	PtrMemberAccess	dp -> screen_gamma		8670574	1					
ANR	8671061	Identifier	dp		8670574	0					
ANR	8671062	Identifier	screen_gamma		8670574	1					
ANR	8671063	IfStatement	if ( fabs ( vi -> gamma_correction - 1 ) < PNG_GAMMA_THRESHOLD )		8670574	19					
ANR	8671064	Condition	fabs ( vi -> gamma_correction - 1 ) < PNG_GAMMA_THRESHOLD	9507:7:296687:296736	8670574	0	True				
ANR	8671065	RelationalExpression	fabs ( vi -> gamma_correction - 1 ) < PNG_GAMMA_THRESHOLD		8670574	0		<			
ANR	8671066	CallExpression	fabs ( vi -> gamma_correction - 1 )		8670574	0					
ANR	8671067	Callee	fabs		8670574	0					
ANR	8671068	Identifier	fabs		8670574	0					
ANR	8671069	ArgumentList	vi -> gamma_correction - 1		8670574	1					
ANR	8671070	Argument	vi -> gamma_correction - 1		8670574	0					
ANR	8671071	AdditiveExpression	vi -> gamma_correction - 1		8670574	0		-			
ANR	8671072	PtrMemberAccess	vi -> gamma_correction		8670574	0					
ANR	8671073	Identifier	vi		8670574	0					
ANR	8671074	Identifier	gamma_correction		8670574	1					
ANR	8671075	PrimaryExpression	1		8670574	1					
ANR	8671076	Identifier	PNG_GAMMA_THRESHOLD		8670574	1					
ANR	8671077	ExpressionStatement	vi -> gamma_correction = 0	9508:6:296745:296769	8670574	1	True				
ANR	8671078	AssignmentExpression	vi -> gamma_correction = 0		8670574	0		=			
ANR	8671079	PtrMemberAccess	vi -> gamma_correction		8670574	0					
ANR	8671080	Identifier	vi		8670574	0					
ANR	8671081	Identifier	gamma_correction		8670574	1					
ANR	8671082	PrimaryExpression	0		8670574	1					
ANR	8671083	ExpressionStatement	vi -> file_inverse = 1 / dp -> file_gamma	9510:3:296775:296810	8670574	20	True				
ANR	8671084	AssignmentExpression	vi -> file_inverse = 1 / dp -> file_gamma		8670574	0		=			
ANR	8671085	PtrMemberAccess	vi -> file_inverse		8670574	0					
ANR	8671086	Identifier	vi		8670574	0					
ANR	8671087	Identifier	file_inverse		8670574	1					
ANR	8671088	MultiplicativeExpression	1 / dp -> file_gamma		8670574	1		/			
ANR	8671089	PrimaryExpression	1		8670574	0					
ANR	8671090	PtrMemberAccess	dp -> file_gamma		8670574	1					
ANR	8671091	Identifier	dp		8670574	0					
ANR	8671092	Identifier	file_gamma		8670574	1					
ANR	8671093	IfStatement	if ( fabs ( vi -> file_inverse - 1 ) < PNG_GAMMA_THRESHOLD )		8670574	21					
ANR	8671094	Condition	fabs ( vi -> file_inverse - 1 ) < PNG_GAMMA_THRESHOLD	9511:7:296819:296864	8670574	0	True				
ANR	8671095	RelationalExpression	fabs ( vi -> file_inverse - 1 ) < PNG_GAMMA_THRESHOLD		8670574	0		<			
ANR	8671096	CallExpression	fabs ( vi -> file_inverse - 1 )		8670574	0					
ANR	8671097	Callee	fabs		8670574	0					
ANR	8671098	Identifier	fabs		8670574	0					
ANR	8671099	ArgumentList	vi -> file_inverse - 1		8670574	1					
ANR	8671100	Argument	vi -> file_inverse - 1		8670574	0					
ANR	8671101	AdditiveExpression	vi -> file_inverse - 1		8670574	0		-			
ANR	8671102	PtrMemberAccess	vi -> file_inverse		8670574	0					
ANR	8671103	Identifier	vi		8670574	0					
ANR	8671104	Identifier	file_inverse		8670574	1					
ANR	8671105	PrimaryExpression	1		8670574	1					
ANR	8671106	Identifier	PNG_GAMMA_THRESHOLD		8670574	1					
ANR	8671107	ExpressionStatement	vi -> file_inverse = 0	9512:6:296873:296893	8670574	1	True				
ANR	8671108	AssignmentExpression	vi -> file_inverse = 0		8670574	0		=			
ANR	8671109	PtrMemberAccess	vi -> file_inverse		8670574	0					
ANR	8671110	Identifier	vi		8670574	0					
ANR	8671111	Identifier	file_inverse		8670574	1					
ANR	8671112	PrimaryExpression	0		8670574	1					
ANR	8671113	ExpressionStatement	vi -> scale16 = dp -> scale16	9514:3:296899:296924	8670574	22	True				
ANR	8671114	AssignmentExpression	vi -> scale16 = dp -> scale16		8670574	0		=			
ANR	8671115	PtrMemberAccess	vi -> scale16		8670574	0					
ANR	8671116	Identifier	vi		8670574	0					
ANR	8671117	Identifier	scale16		8670574	1					
ANR	8671118	PtrMemberAccess	dp -> scale16		8670574	1					
ANR	8671119	Identifier	dp		8670574	0					
ANR	8671120	Identifier	scale16		8670574	1					
ANR	8671121	ReturnType	static void		8670574	1					
ANR	8671122	Identifier	init_validate_info		8670574	2					
ANR	8671123	ParameterList	"validate_info * vi , gamma_display * dp , png_const_structp pp , int in_depth , int out_depth"		8670574	3					
ANR	8671124	Parameter	validate_info * vi	9426:19:294154:294170	8670574	0	True				
ANR	8671125	ParameterType	validate_info *		8670574	0					
ANR	8671126	Identifier	vi		8670574	1					
ANR	8671127	Parameter	gamma_display * dp	9426:38:294173:294189	8670574	1	True				
ANR	8671128	ParameterType	gamma_display *		8670574	0					
ANR	8671129	Identifier	dp		8670574	1					
ANR	8671130	Parameter	png_const_structp pp	9426:57:294192:294211	8670574	2	True				
ANR	8671131	ParameterType	png_const_structp		8670574	0					
ANR	8671132	Identifier	pp		8670574	1					
ANR	8671133	Parameter	int in_depth	9427:4:294218:294229	8670574	3	True				
ANR	8671134	ParameterType	int		8670574	0					
ANR	8671135	Identifier	in_depth		8670574	1					
ANR	8671136	Parameter	int out_depth	9427:18:294232:294244	8670574	4	True				
ANR	8671137	ParameterType	int		8670574	0					
ANR	8671138	Identifier	out_depth		8670574	1					
ANR	8671139	CFGEntryNode	ENTRY		8670574		True				
ANR	8671140	CFGExitNode	EXIT		8670574		True				
ANR	8671141	Symbol	pp		8670574						
ANR	8671142	Symbol	vi -> background_blue		8670574						
ANR	8671143	Symbol	vi -> maxcalc		8670574						
ANR	8671144	Symbol	dp -> use_input_precision		8670574						
ANR	8671145	Symbol	dp		8670574						
ANR	8671146	Symbol	dp -> do_background		8670574						
ANR	8671147	Symbol	dp -> scale16		8670574						
ANR	8671148	Symbol	vi -> sbit		8670574						
ANR	8671149	Symbol	abserr		8670574						
ANR	8671150	Symbol	dp -> this		8670574						
ANR	8671151	Symbol	vi -> outlog		8670574						
ANR	8671152	Symbol	vi -> outquant		8670574						
ANR	8671153	Symbol	vi -> gamma_correction		8670574						
ANR	8671154	Symbol	out_depth		8670574						
ANR	8671155	Symbol	outlog		8670574						
ANR	8671156	Symbol	dp -> file_gamma		8670574						
ANR	8671157	Symbol	dp -> background_gamma		8670574						
ANR	8671158	Symbol	bg_inverse		8670574						
ANR	8671159	Symbol	vi		8670574						
ANR	8671160	Symbol	dp -> sbit		8670574						
ANR	8671161	Symbol	vi -> use_input_precision		8670574						
ANR	8671162	Symbol	PNG_COLOR_MASK_ALPHA		8670574						
ANR	8671163	Symbol	output_quantization_factor		8670574						
ANR	8671164	Symbol	vi -> outmax		8670574						
ANR	8671165	Symbol	in_depth		8670574						
ANR	8671166	Symbol	vi -> sbit_max		8670574						
ANR	8671167	Symbol	dp -> background_color		8670574						
ANR	8671168	Symbol	vi -> maxpc		8670574						
ANR	8671169	Symbol	vi -> isbit_shift		8670574						
ANR	8671170	Symbol	vi -> dp		8670574						
ANR	8671171	Symbol	vi -> screen_inverse		8670574						
ANR	8671172	Symbol	outmax		8670574						
ANR	8671173	Symbol	outerr		8670574						
ANR	8671174	Symbol	vi -> do_background		8670574						
ANR	8671175	Symbol	vi -> pp		8670574						
ANR	8671176	Symbol	vi -> maxout		8670574						
ANR	8671177	Symbol	dp -> background_color . blue		8670574						
ANR	8671178	Symbol	pcerr		8670574						
ANR	8671179	Symbol	dp -> this . colour_type		8670574						
ANR	8671180	Symbol	vi -> screen_gamma		8670574						
ANR	8671181	Symbol	vi -> background_red		8670574						
ANR	8671182	Symbol	vi -> file_inverse		8670574						
ANR	8671183	Symbol	* dp		8670574						
ANR	8671184	Symbol	dp -> screen_gamma		8670574						
ANR	8671185	Symbol	vi -> scale16		8670574						
ANR	8671186	Symbol	dp -> pm		8670574						
ANR	8671187	Symbol	pow		8670574						
ANR	8671188	Symbol	dp -> background_color . red		8670574						
ANR	8671189	Symbol	calcerr		8670574						
ANR	8671190	Symbol	b		8670574						
ANR	8671191	Symbol	PNG_GAMMA_THRESHOLD		8670574						
ANR	8671192	Symbol	fabs		8670574						
ANR	8671193	Symbol	g		8670574						
ANR	8671194	Symbol	dp -> this . has_tRNS		8670574						
ANR	8671195	Symbol	dp -> this . is_transparent		8670574						
ANR	8671196	Symbol	vi -> background_green		8670574						
ANR	8671197	Symbol	vi -> maxout_total		8670574						
ANR	8671198	Symbol	r		8670574						
ANR	8671199	Symbol	dp -> background_color . green		8670574						
ANR	8671200	Symbol	vi -> maxabs		8670574						
ANR	8671201	Symbol	* vi		8670574						
ANR	8671202	Function	gamma_component_compose	9522:0:297238:299070							
ANR	8671203	FunctionDef	"gamma_component_compose (int do_background , double input_sample , double alpha , double background , int * compose)"		8671202	0					
ANR	8671204	CompoundStatement		9525:0:297366:299070	8671202	0					
ANR	8671205	SwitchStatement	switch ( do_background )		8671202	0					
ANR	8671206	Condition	do_background	9526:11:297379:297391	8671202	0	True				
ANR	8671207	Identifier	do_background		8671202	0					
ANR	8671208	CompoundStatement		3:3:30:30	8671202	1					
ANR	8671209	Label	case PNG_BACKGROUND_GAMMA_SCREEN :	9529:6:297442:297474	8671202	0	True				
ANR	8671210	Identifier	PNG_BACKGROUND_GAMMA_SCREEN		8671202	0					
ANR	8671211	Label	case PNG_BACKGROUND_GAMMA_FILE :	9530:6:297482:297512	8671202	1	True				
ANR	8671212	Identifier	PNG_BACKGROUND_GAMMA_FILE		8671202	0					
ANR	8671213	Label	case PNG_BACKGROUND_GAMMA_UNIQUE :	9531:6:297520:297552	8671202	2	True				
ANR	8671214	Identifier	PNG_BACKGROUND_GAMMA_UNIQUE		8671202	0					
ANR	8671215	IfStatement	if ( alpha < 1 )		8671202	3					
ANR	8671216	Condition	alpha < 1	9533:13:297618:297626	8671202	0	True				
ANR	8671217	RelationalExpression	alpha < 1		8671202	0		<			
ANR	8671218	Identifier	alpha		8671202	0					
ANR	8671219	PrimaryExpression	1		8671202	1					
ANR	8671220	CompoundStatement		10:9:271:271	8671202	1					
ANR	8671221	IfStatement	if ( alpha > 0 )		8671202	0					
ANR	8671222	Condition	alpha > 0	9535:16:297656:297664	8671202	0	True				
ANR	8671223	RelationalExpression	alpha > 0		8671202	0		>			
ANR	8671224	Identifier	alpha		8671202	0					
ANR	8671225	PrimaryExpression	0		8671202	1					
ANR	8671226	CompoundStatement		12:12:312:312	8671202	1					
ANR	8671227	ExpressionStatement	input_sample = input_sample * alpha + background * ( 1 - alpha )	9537:15:297696:297756	8671202	0	True				
ANR	8671228	AssignmentExpression	input_sample = input_sample * alpha + background * ( 1 - alpha )		8671202	0		=			
ANR	8671229	Identifier	input_sample		8671202	0					
ANR	8671230	AdditiveExpression	input_sample * alpha + background * ( 1 - alpha )		8671202	1		+			
ANR	8671231	MultiplicativeExpression	input_sample * alpha		8671202	0		*			
ANR	8671232	Identifier	input_sample		8671202	0					
ANR	8671233	Identifier	alpha		8671202	1					
ANR	8671234	MultiplicativeExpression	background * ( 1 - alpha )		8671202	1		*			
ANR	8671235	Identifier	background		8671202	0					
ANR	8671236	AdditiveExpression	1 - alpha		8671202	1		-			
ANR	8671237	PrimaryExpression	1		8671202	0					
ANR	8671238	Identifier	alpha		8671202	1					
ANR	8671239	IfStatement	if ( compose != NULL )		8671202	1					
ANR	8671240	Condition	compose != NULL	9538:19:297777:297791	8671202	0	True				
ANR	8671241	EqualityExpression	compose != NULL		8671202	0		!=			
ANR	8671242	Identifier	compose		8671202	0					
ANR	8671243	Identifier	NULL		8671202	1					
ANR	8671244	ExpressionStatement	* compose = 1	9539:18:297812:297824	8671202	1	True				
ANR	8671245	AssignmentExpression	* compose = 1		8671202	0		=			
ANR	8671246	UnaryOperationExpression	* compose		8671202	0					
ANR	8671247	UnaryOperator	*		8671202	0					
ANR	8671248	Identifier	compose		8671202	1					
ANR	8671249	PrimaryExpression	1		8671202	1					
ANR	8671250	ElseStatement	else		8671202	0					
ANR	8671251	ExpressionStatement	input_sample = background	9543:15:297873:297898	8671202	0	True				
ANR	8671252	AssignmentExpression	input_sample = background		8671202	0		=			
ANR	8671253	Identifier	input_sample		8671202	0					
ANR	8671254	Identifier	background		8671202	1					
ANR	8671255	BreakStatement	break ;	9545:9:297920:297925	8671202	4	True				
ANR	8671256	Statement	case	9549:6:297978:297981	8671202	5	True				
ANR	8671257	Statement	ALPHA_MODE_OFFSET	9549:11:297983:297999	8671202	6	True				
ANR	8671258	Statement	+	9549:29:298001:298001	8671202	7	True				
ANR	8671259	Label	PNG_ALPHA_STANDARD :	9549:31:298003:298021	8671202	8	True				
ANR	8671260	Identifier	PNG_ALPHA_STANDARD		8671202	0					
ANR	8671261	Statement	case	9550:6:298029:298032	8671202	9	True				
ANR	8671262	Statement	ALPHA_MODE_OFFSET	9550:11:298034:298050	8671202	10	True				
ANR	8671263	Statement	+	9550:29:298052:298052	8671202	11	True				
ANR	8671264	Label	PNG_ALPHA_BROKEN :	9550:31:298054:298070	8671202	12	True				
ANR	8671265	Identifier	PNG_ALPHA_BROKEN		8671202	0					
ANR	8671266	Statement	case	9555:6:298282:298285	8671202	13	True				
ANR	8671267	Statement	ALPHA_MODE_OFFSET	9555:11:298287:298303	8671202	14	True				
ANR	8671268	Statement	+	9555:29:298305:298305	8671202	15	True				
ANR	8671269	Label	PNG_ALPHA_OPTIMIZED :	9555:31:298307:298326	8671202	16	True				
ANR	8671270	Identifier	PNG_ALPHA_OPTIMIZED		8671202	0					
ANR	8671271	IfStatement	if ( alpha < 1 )		8671202	17					
ANR	8671272	Condition	alpha < 1	9560:13:298538:298546	8671202	0	True				
ANR	8671273	RelationalExpression	alpha < 1		8671202	0		<			
ANR	8671274	Identifier	alpha		8671202	0					
ANR	8671275	PrimaryExpression	1		8671202	1					
ANR	8671276	CompoundStatement		37:9:1191:1191	8671202	1					
ANR	8671277	IfStatement	if ( alpha > 0 )		8671202	0					
ANR	8671278	Condition	alpha > 0	9562:16:298576:298584	8671202	0	True				
ANR	8671279	RelationalExpression	alpha > 0		8671202	0		>			
ANR	8671280	Identifier	alpha		8671202	0					
ANR	8671281	PrimaryExpression	0		8671202	1					
ANR	8671282	CompoundStatement		39:12:1232:1232	8671202	1					
ANR	8671283	ExpressionStatement	input_sample *= alpha	9564:15:298616:298637	8671202	0	True				
ANR	8671284	AssignmentExpression	input_sample *= alpha		8671202	0		*=			
ANR	8671285	Identifier	input_sample		8671202	0					
ANR	8671286	Identifier	alpha		8671202	1					
ANR	8671287	IfStatement	if ( compose != NULL )		8671202	1					
ANR	8671288	Condition	compose != NULL	9565:19:298658:298672	8671202	0	True				
ANR	8671289	EqualityExpression	compose != NULL		8671202	0		!=			
ANR	8671290	Identifier	compose		8671202	0					
ANR	8671291	Identifier	NULL		8671202	1					
ANR	8671292	ExpressionStatement	* compose = 1	9566:18:298693:298705	8671202	1	True				
ANR	8671293	AssignmentExpression	* compose = 1		8671202	0		=			
ANR	8671294	UnaryOperationExpression	* compose		8671202	0					
ANR	8671295	UnaryOperator	*		8671202	0					
ANR	8671296	Identifier	compose		8671202	1					
ANR	8671297	PrimaryExpression	1		8671202	1					
ANR	8671298	ElseStatement	else		8671202	0					
ANR	8671299	ExpressionStatement	input_sample = 0	9570:15:298754:298770	8671202	0	True				
ANR	8671300	AssignmentExpression	input_sample = 0		8671202	0		=			
ANR	8671301	Identifier	input_sample		8671202	0					
ANR	8671302	PrimaryExpression	0		8671202	1					
ANR	8671303	BreakStatement	break ;	9572:9:298792:298797	8671202	18	True				
ANR	8671304	Label	default :	9575:6:298813:298820	8671202	19	True				
ANR	8671305	Identifier	default		8671202	0					
ANR	8671306	Statement	UNUSED	9579:9:298957:298962	8671202	20	True				
ANR	8671307	Statement	(	9579:15:298963:298963	8671202	21	True				
ANR	8671308	Statement	alpha	9579:16:298964:298968	8671202	22	True				
ANR	8671309	Statement	)	9579:21:298969:298969	8671202	23	True				
ANR	8671310	Statement	UNUSED	9580:9:298980:298985	8671202	24	True				
ANR	8671311	Statement	(	9580:15:298986:298986	8671202	25	True				
ANR	8671312	Statement	background	9580:16:298987:298996	8671202	26	True				
ANR	8671313	Statement	)	9580:26:298997:298997	8671202	27	True				
ANR	8671314	Statement	UNUSED	9581:9:299008:299013	8671202	28	True				
ANR	8671315	Statement	(	9581:15:299014:299014	8671202	29	True				
ANR	8671316	Statement	compose	9581:16:299015:299021	8671202	30	True				
ANR	8671317	Statement	)	9581:23:299022:299022	8671202	31	True				
ANR	8671318	BreakStatement	break ;	9582:9:299033:299038	8671202	32	True				
ANR	8671319	ReturnStatement	return input_sample ;	9585:3:299049:299068	8671202	1	True				
ANR	8671320	Identifier	input_sample		8671202	0					
ANR	8671321	ReturnType	static double		8671202	1					
ANR	8671322	Identifier	gamma_component_compose		8671202	2					
ANR	8671323	ParameterList	"int do_background , double input_sample , double alpha , double background , int * compose"		8671202	3					
ANR	8671324	Parameter	int do_background	9523:24:297276:297292	8671202	0	True				
ANR	8671325	ParameterType	int		8671202	0					
ANR	8671326	Identifier	do_background		8671202	1					
ANR	8671327	Parameter	double input_sample	9523:43:297295:297313	8671202	1	True				
ANR	8671328	ParameterType	double		8671202	0					
ANR	8671329	Identifier	input_sample		8671202	1					
ANR	8671330	Parameter	double alpha	9523:64:297316:297327	8671202	2	True				
ANR	8671331	ParameterType	double		8671202	0					
ANR	8671332	Identifier	alpha		8671202	1					
ANR	8671333	Parameter	double background	9524:3:297333:297349	8671202	3	True				
ANR	8671334	ParameterType	double		8671202	0					
ANR	8671335	Identifier	background		8671202	1					
ANR	8671336	Parameter	int * compose	9524:22:297352:297363	8671202	4	True				
ANR	8671337	ParameterType	int *		8671202	0					
ANR	8671338	Identifier	compose		8671202	1					
ANR	8671339	CFGEntryNode	ENTRY		8671202		True				
ANR	8671340	CFGExitNode	EXIT		8671202		True				
ANR	8671341	Symbol	NULL		8671202						
ANR	8671342	Symbol	compose		8671202						
ANR	8671343	Symbol	input_sample		8671202						
ANR	8671344	Symbol	background		8671202						
ANR	8671345	Symbol	alpha		8671202						
ANR	8671346	Symbol	do_background		8671202						
ANR	8671347	Symbol	* compose		8671202						
ANR	8671348	Function	gamma_component_validate	9589:0:299145:320623							
ANR	8671349	FunctionDef	"gamma_component_validate (const char * name , const validate_info * vi , const unsigned int id , const unsigned int od , const double alpha , const double background)"		8671348	0					
ANR	8671350	CompoundStatement		9594:0:299401:320623	8671348	0					
ANR	8671351	IdentifierDeclStatement	const unsigned int isbit = id >> vi -> isbit_shift ;	9595:3:299406:299454	8671348	0	True				
ANR	8671352	IdentifierDecl	isbit = id >> vi -> isbit_shift		8671348	0					
ANR	8671353	IdentifierDeclType	const unsigned int		8671348	0					
ANR	8671354	Identifier	isbit		8671348	1					
ANR	8671355	AssignmentExpression	isbit = id >> vi -> isbit_shift		8671348	2		=			
ANR	8671356	Identifier	isbit		8671348	0					
ANR	8671357	ShiftExpression	id >> vi -> isbit_shift		8671348	1		>>			
ANR	8671358	Identifier	id		8671348	0					
ANR	8671359	PtrMemberAccess	vi -> isbit_shift		8671348	1					
ANR	8671360	Identifier	vi		8671348	0					
ANR	8671361	Identifier	isbit_shift		8671348	1					
ANR	8671362	IdentifierDeclStatement	const unsigned int sbit_max = vi -> sbit_max ;	9596:3:299459:299501	8671348	1	True				
ANR	8671363	IdentifierDecl	sbit_max = vi -> sbit_max		8671348	0					
ANR	8671364	IdentifierDeclType	const unsigned int		8671348	0					
ANR	8671365	Identifier	sbit_max		8671348	1					
ANR	8671366	AssignmentExpression	sbit_max = vi -> sbit_max		8671348	2		=			
ANR	8671367	Identifier	sbit_max		8671348	0					
ANR	8671368	PtrMemberAccess	vi -> sbit_max		8671348	1					
ANR	8671369	Identifier	vi		8671348	0					
ANR	8671370	Identifier	sbit_max		8671348	1					
ANR	8671371	IdentifierDeclStatement	const unsigned int outmax = vi -> outmax ;	9597:3:299506:299544	8671348	2	True				
ANR	8671372	IdentifierDecl	outmax = vi -> outmax		8671348	0					
ANR	8671373	IdentifierDeclType	const unsigned int		8671348	0					
ANR	8671374	Identifier	outmax		8671348	1					
ANR	8671375	AssignmentExpression	outmax = vi -> outmax		8671348	2		=			
ANR	8671376	Identifier	outmax		8671348	0					
ANR	8671377	PtrMemberAccess	vi -> outmax		8671348	1					
ANR	8671378	Identifier	vi		8671348	0					
ANR	8671379	Identifier	outmax		8671348	1					
ANR	8671380	IdentifierDeclStatement	const int do_background = vi -> do_background ;	9598:3:299549:299592	8671348	3	True				
ANR	8671381	IdentifierDecl	do_background = vi -> do_background		8671348	0					
ANR	8671382	IdentifierDeclType	const int		8671348	0					
ANR	8671383	Identifier	do_background		8671348	1					
ANR	8671384	AssignmentExpression	do_background = vi -> do_background		8671348	2		=			
ANR	8671385	Identifier	do_background		8671348	0					
ANR	8671386	PtrMemberAccess	vi -> do_background		8671348	1					
ANR	8671387	Identifier	vi		8671348	0					
ANR	8671388	Identifier	do_background		8671348	1					
ANR	8671389	IdentifierDeclStatement	double i ;	9600:3:299598:299606	8671348	4	True				
ANR	8671390	IdentifierDecl	i		8671348	0					
ANR	8671391	IdentifierDeclType	double		8671348	0					
ANR	8671392	Identifier	i		8671348	1					
ANR	8671393	ExpressionStatement	i = isbit	9606:3:299821:299830	8671348	5	True				
ANR	8671394	AssignmentExpression	i = isbit		8671348	0		=			
ANR	8671395	Identifier	i		8671348	0					
ANR	8671396	Identifier	isbit		8671348	1					
ANR	8671397	ExpressionStatement	i /= sbit_max	9606:14:299832:299845	8671348	6	True				
ANR	8671398	AssignmentExpression	i /= sbit_max		8671348	0		/=			
ANR	8671399	Identifier	i		8671348	0					
ANR	8671400	Identifier	sbit_max		8671348	1					
ANR	8671401	Statement	if	9612:3:300095:300096	8671348	7	True				
ANR	8671402	Statement	(	9612:6:300098:300098	8671348	8	True				
ANR	8671403	Statement	alpha	9612:7:300099:300103	8671348	9	True				
ANR	8671404	Statement	==	9612:13:300105:300106	8671348	10	True				
ANR	8671405	Statement	1	9612:16:300108:300108	8671348	11	True				
ANR	8671406	Statement	||	9612:47:300139:300140	8671348	12	True				
ANR	8671407	Statement	!	9612:50:300142:300142	8671348	13	True				
ANR	8671408	Statement	do_background	9612:51:300143:300155	8671348	14	True				
ANR	8671409	Statement	||	9614:6:300200:300201	8671348	15	True				
ANR	8671410	Statement	do_background	9614:9:300203:300215	8671348	16	True				
ANR	8671411	Statement	==	9614:23:300217:300218	8671348	17	True				
ANR	8671412	Statement	ALPHA_MODE_OFFSET	9614:26:300220:300236	8671348	18	True				
ANR	8671413	Statement	+	9614:44:300238:300238	8671348	19	True				
ANR	8671414	Statement	PNG_ALPHA_PNG	9614:46:300240:300252	8671348	20	True				
ANR	8671415	Statement	||	9616:6:300267:300268	8671348	21	True				
ANR	8671416	Statement	(	9616:9:300270:300270	8671348	22	True				
ANR	8671417	Statement	alpha	9616:10:300271:300275	8671348	23	True				
ANR	8671418	Statement	<	9616:16:300277:300277	8671348	24	True				
ANR	8671419	Statement	0	9616:18:300279:300279	8671348	25	True				
ANR	8671420	Statement	&&	9618:6:300344:300345	8671348	26	True				
ANR	8671421	Statement	do_background	9618:9:300347:300359	8671348	27	True				
ANR	8671422	Statement	!=	9618:23:300361:300362	8671348	28	True				
ANR	8671423	Statement	ALPHA_MODE_OFFSET	9618:26:300364:300380	8671348	29	True				
ANR	8671424	Statement	+	9618:44:300382:300382	8671348	30	True				
ANR	8671425	Statement	PNG_ALPHA_BROKEN	9618:46:300384:300399	8671348	31	True				
ANR	8671426	Statement	)	9620:6:300414:300414	8671348	32	True				
ANR	8671427	Statement	)	9620:7:300415:300415	8671348	33	True				
ANR	8671428	CompoundStatement		35:6:1344:1364	8671348	34					
ANR	8671429	IdentifierDeclStatement	double encoded_sample = i ;	9627:6:300713:300738	8671348	0	True				
ANR	8671430	IdentifierDecl	encoded_sample = i		8671348	0					
ANR	8671431	IdentifierDeclType	double		8671348	0					
ANR	8671432	Identifier	encoded_sample		8671348	1					
ANR	8671433	AssignmentExpression	encoded_sample = i		8671348	2		=			
ANR	8671434	Identifier	i		8671348	0					
ANR	8671435	Identifier	i		8671348	1					
ANR	8671436	IdentifierDeclStatement	double encoded_error ;	9628:6:300746:300766	8671348	1	True				
ANR	8671437	IdentifierDecl	encoded_error		8671348	0					
ANR	8671438	IdentifierDeclType	double		8671348	0					
ANR	8671439	Identifier	encoded_error		8671348	1					
ANR	8671440	IfStatement	if ( alpha >= 0 && vi -> gamma_correction > 0 )		8671348	2					
ANR	8671441	Condition	alpha >= 0 && vi -> gamma_correction > 0	9632:10:300868:300905	8671348	0	True				
ANR	8671442	AndExpression	alpha >= 0 && vi -> gamma_correction > 0		8671348	0		&&			
ANR	8671443	RelationalExpression	alpha >= 0		8671348	0		>=			
ANR	8671444	Identifier	alpha		8671348	0					
ANR	8671445	PrimaryExpression	0		8671348	1					
ANR	8671446	RelationalExpression	vi -> gamma_correction > 0		8671348	1		>			
ANR	8671447	PtrMemberAccess	vi -> gamma_correction		8671348	0					
ANR	8671448	Identifier	vi		8671348	0					
ANR	8671449	Identifier	gamma_correction		8671348	1					
ANR	8671450	PrimaryExpression	0		8671348	1					
ANR	8671451	ExpressionStatement	"encoded_sample = pow ( encoded_sample , vi -> gamma_correction )"	9633:9:300917:300975	8671348	1	True				
ANR	8671452	AssignmentExpression	"encoded_sample = pow ( encoded_sample , vi -> gamma_correction )"		8671348	0		=			
ANR	8671453	Identifier	encoded_sample		8671348	0					
ANR	8671454	CallExpression	"pow ( encoded_sample , vi -> gamma_correction )"		8671348	1					
ANR	8671455	Callee	pow		8671348	0					
ANR	8671456	Identifier	pow		8671348	0					
ANR	8671457	ArgumentList	encoded_sample		8671348	1					
ANR	8671458	Argument	encoded_sample		8671348	0					
ANR	8671459	Identifier	encoded_sample		8671348	0					
ANR	8671460	Argument	vi -> gamma_correction		8671348	1					
ANR	8671461	PtrMemberAccess	vi -> gamma_correction		8671348	0					
ANR	8671462	Identifier	vi		8671348	0					
ANR	8671463	Identifier	gamma_correction		8671348	1					
ANR	8671464	ExpressionStatement	encoded_sample *= outmax	9634:6:300983:301007	8671348	3	True				
ANR	8671465	AssignmentExpression	encoded_sample *= outmax		8671348	0		*=			
ANR	8671466	Identifier	encoded_sample		8671348	0					
ANR	8671467	Identifier	outmax		8671348	1					
ANR	8671468	ExpressionStatement	encoded_error = fabs ( od - encoded_sample )	9636:6:301016:301055	8671348	4	True				
ANR	8671469	AssignmentExpression	encoded_error = fabs ( od - encoded_sample )		8671348	0		=			
ANR	8671470	Identifier	encoded_error		8671348	0					
ANR	8671471	CallExpression	fabs ( od - encoded_sample )		8671348	1					
ANR	8671472	Callee	fabs		8671348	0					
ANR	8671473	Identifier	fabs		8671348	0					
ANR	8671474	ArgumentList	od - encoded_sample		8671348	1					
ANR	8671475	Argument	od - encoded_sample		8671348	0					
ANR	8671476	AdditiveExpression	od - encoded_sample		8671348	0		-			
ANR	8671477	Identifier	od		8671348	0					
ANR	8671478	Identifier	encoded_sample		8671348	1					
ANR	8671479	IfStatement	if ( encoded_error > vi -> dp -> maxerrout )		8671348	5					
ANR	8671480	Condition	encoded_error > vi -> dp -> maxerrout	9638:10:301068:301100	8671348	0	True				
ANR	8671481	RelationalExpression	encoded_error > vi -> dp -> maxerrout		8671348	0		>			
ANR	8671482	Identifier	encoded_error		8671348	0					
ANR	8671483	PtrMemberAccess	vi -> dp -> maxerrout		8671348	1					
ANR	8671484	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671485	Identifier	vi		8671348	0					
ANR	8671486	Identifier	dp		8671348	1					
ANR	8671487	Identifier	maxerrout		8671348	1					
ANR	8671488	ExpressionStatement	vi -> dp -> maxerrout = encoded_error	9639:9:301112:301145	8671348	1	True				
ANR	8671489	AssignmentExpression	vi -> dp -> maxerrout = encoded_error		8671348	0		=			
ANR	8671490	PtrMemberAccess	vi -> dp -> maxerrout		8671348	0					
ANR	8671491	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671492	Identifier	vi		8671348	0					
ANR	8671493	Identifier	dp		8671348	1					
ANR	8671494	Identifier	maxerrout		8671348	1					
ANR	8671495	Identifier	encoded_error		8671348	1					
ANR	8671496	IfStatement	if ( encoded_error < vi -> maxout_total && encoded_error < vi -> outlog )		8671348	6					
ANR	8671497	Condition	encoded_error < vi -> maxout_total && encoded_error < vi -> outlog	9641:10:301158:301219	8671348	0	True				
ANR	8671498	AndExpression	encoded_error < vi -> maxout_total && encoded_error < vi -> outlog		8671348	0		&&			
ANR	8671499	RelationalExpression	encoded_error < vi -> maxout_total		8671348	0		<			
ANR	8671500	Identifier	encoded_error		8671348	0					
ANR	8671501	PtrMemberAccess	vi -> maxout_total		8671348	1					
ANR	8671502	Identifier	vi		8671348	0					
ANR	8671503	Identifier	maxout_total		8671348	1					
ANR	8671504	RelationalExpression	encoded_error < vi -> outlog		8671348	1		<			
ANR	8671505	Identifier	encoded_error		8671348	0					
ANR	8671506	PtrMemberAccess	vi -> outlog		8671348	1					
ANR	8671507	Identifier	vi		8671348	0					
ANR	8671508	Identifier	outlog		8671348	1					
ANR	8671509	ReturnStatement	return i ;	9642:9:301231:301239	8671348	1	True				
ANR	8671510	Identifier	i		8671348	0					
ANR	8671511	CompoundStatement		67:6:2734:2758	8671348	35					
ANR	8671512	IdentifierDeclStatement	double input_sample = i ;	9654:6:301793:301816	8671348	0	True				
ANR	8671513	IdentifierDecl	input_sample = i		8671348	0					
ANR	8671514	IdentifierDeclType	double		8671348	0					
ANR	8671515	Identifier	input_sample		8671348	1					
ANR	8671516	AssignmentExpression	input_sample = i		8671348	2		=			
ANR	8671517	Identifier	i		8671348	0					
ANR	8671518	Identifier	i		8671348	1					
ANR	8671519	IdentifierDeclStatement	"double output , error , encoded_sample , encoded_error ;"	9655:6:301844:301895	8671348	1	True				
ANR	8671520	IdentifierDecl	output		8671348	0					
ANR	8671521	IdentifierDeclType	double		8671348	0					
ANR	8671522	Identifier	output		8671348	1					
ANR	8671523	IdentifierDecl	error		8671348	1					
ANR	8671524	IdentifierDeclType	double		8671348	0					
ANR	8671525	Identifier	error		8671348	1					
ANR	8671526	IdentifierDecl	encoded_sample		8671348	2					
ANR	8671527	IdentifierDeclType	double		8671348	0					
ANR	8671528	Identifier	encoded_sample		8671348	1					
ANR	8671529	IdentifierDecl	encoded_error		8671348	3					
ANR	8671530	IdentifierDeclType	double		8671348	0					
ANR	8671531	Identifier	encoded_error		8671348	1					
ANR	8671532	IdentifierDeclStatement	"double es_lo , es_hi ;"	9656:6:301903:301922	8671348	2	True				
ANR	8671533	IdentifierDecl	es_lo		8671348	0					
ANR	8671534	IdentifierDeclType	double		8671348	0					
ANR	8671535	Identifier	es_lo		8671348	1					
ANR	8671536	IdentifierDecl	es_hi		8671348	1					
ANR	8671537	IdentifierDeclType	double		8671348	0					
ANR	8671538	Identifier	es_hi		8671348	1					
ANR	8671539	IdentifierDeclStatement	int compose = 0 ;	9657:6:301930:301945	8671348	3	True				
ANR	8671540	IdentifierDecl	compose = 0		8671348	0					
ANR	8671541	IdentifierDeclType	int		8671348	0					
ANR	8671542	Identifier	compose		8671348	1					
ANR	8671543	AssignmentExpression	compose = 0		8671348	2		=			
ANR	8671544	Identifier	compose		8671348	0					
ANR	8671545	PrimaryExpression	0		8671348	1					
ANR	8671546	IdentifierDeclStatement	int output_is_encoded ;	9658:6:302000:302021	8671348	4	True				
ANR	8671547	IdentifierDecl	output_is_encoded		8671348	0					
ANR	8671548	IdentifierDeclType	int		8671348	0					
ANR	8671549	Identifier	output_is_encoded		8671348	1					
ANR	8671550	IdentifierDeclStatement	int log_max_error = 1 ;	9659:6:302070:302091	8671348	5	True				
ANR	8671551	IdentifierDecl	log_max_error = 1		8671348	0					
ANR	8671552	IdentifierDeclType	int		8671348	0					
ANR	8671553	Identifier	log_max_error		8671348	1					
ANR	8671554	AssignmentExpression	log_max_error = 1		8671348	2		=			
ANR	8671555	Identifier	log_max_error		8671348	0					
ANR	8671556	PrimaryExpression	1		8671348	1					
ANR	8671557	IdentifierDeclStatement	png_const_charp pass = 0 ;	9660:6:302136:302160	8671348	6	True				
ANR	8671558	IdentifierDecl	pass = 0		8671348	0					
ANR	8671559	IdentifierDeclType	png_const_charp		8671348	0					
ANR	8671560	Identifier	pass		8671348	1					
ANR	8671561	AssignmentExpression	pass = 0		8671348	2		=			
ANR	8671562	Identifier	pass		8671348	0					
ANR	8671563	PrimaryExpression	0		8671348	1					
ANR	8671564	IfStatement	if ( alpha >= 0 )		8671348	7					
ANR	8671565	Condition	alpha >= 0	9665:10:302330:302339	8671348	0	True				
ANR	8671566	RelationalExpression	alpha >= 0		8671348	0		>=			
ANR	8671567	Identifier	alpha		8671348	0					
ANR	8671568	PrimaryExpression	0		8671348	1					
ANR	8671569	CompoundStatement		74:9:2957:2969	8671348	1					
ANR	8671570	IdentifierDeclStatement	int tcompose ;	9667:9:302359:302371	8671348	0	True				
ANR	8671571	IdentifierDecl	tcompose		8671348	0					
ANR	8671572	IdentifierDeclType	int		8671348	0					
ANR	8671573	Identifier	tcompose		8671348	1					
ANR	8671574	IfStatement	if ( vi -> file_inverse > 0 )		8671348	1					
ANR	8671575	Condition	vi -> file_inverse > 0	9669:13:302387:302406	8671348	0	True				
ANR	8671576	RelationalExpression	vi -> file_inverse > 0		8671348	0		>			
ANR	8671577	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8671578	Identifier	vi		8671348	0					
ANR	8671579	Identifier	file_inverse		8671348	1					
ANR	8671580	PrimaryExpression	0		8671348	1					
ANR	8671581	ExpressionStatement	"input_sample = pow ( input_sample , vi -> file_inverse )"	9670:12:302421:302471	8671348	1	True				
ANR	8671582	AssignmentExpression	"input_sample = pow ( input_sample , vi -> file_inverse )"		8671348	0		=			
ANR	8671583	Identifier	input_sample		8671348	0					
ANR	8671584	CallExpression	"pow ( input_sample , vi -> file_inverse )"		8671348	1					
ANR	8671585	Callee	pow		8671348	0					
ANR	8671586	Identifier	pow		8671348	0					
ANR	8671587	ArgumentList	input_sample		8671348	1					
ANR	8671588	Argument	input_sample		8671348	0					
ANR	8671589	Identifier	input_sample		8671348	0					
ANR	8671590	Argument	vi -> file_inverse		8671348	1					
ANR	8671591	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8671592	Identifier	vi		8671348	0					
ANR	8671593	Identifier	file_inverse		8671348	1					
ANR	8671594	ExpressionStatement	tcompose = 0	9673:9:302529:302541	8671348	2	True				
ANR	8671595	AssignmentExpression	tcompose = 0		8671348	0		=			
ANR	8671596	Identifier	tcompose		8671348	0					
ANR	8671597	PrimaryExpression	0		8671348	1					
ANR	8671598	ExpressionStatement	"input_sample = gamma_component_compose ( do_background , input_sample , alpha , background , & tcompose )"	9674:9:302552:302661	8671348	3	True				
ANR	8671599	AssignmentExpression	"input_sample = gamma_component_compose ( do_background , input_sample , alpha , background , & tcompose )"		8671348	0		=			
ANR	8671600	Identifier	input_sample		8671348	0					
ANR	8671601	CallExpression	"gamma_component_compose ( do_background , input_sample , alpha , background , & tcompose )"		8671348	1					
ANR	8671602	Callee	gamma_component_compose		8671348	0					
ANR	8671603	Identifier	gamma_component_compose		8671348	0					
ANR	8671604	ArgumentList	do_background		8671348	1					
ANR	8671605	Argument	do_background		8671348	0					
ANR	8671606	Identifier	do_background		8671348	0					
ANR	8671607	Argument	input_sample		8671348	1					
ANR	8671608	Identifier	input_sample		8671348	0					
ANR	8671609	Argument	alpha		8671348	2					
ANR	8671610	Identifier	alpha		8671348	0					
ANR	8671611	Argument	background		8671348	3					
ANR	8671612	Identifier	background		8671348	0					
ANR	8671613	Argument	& tcompose		8671348	4					
ANR	8671614	UnaryOperationExpression	& tcompose		8671348	0					
ANR	8671615	UnaryOperator	&		8671348	0					
ANR	8671616	Identifier	tcompose		8671348	1					
ANR	8671617	IfStatement	if ( tcompose )		8671348	4					
ANR	8671618	Condition	tcompose	9677:13:302677:302684	8671348	0	True				
ANR	8671619	Identifier	tcompose		8671348	0					
ANR	8671620	ExpressionStatement	compose = 1	9678:12:302699:302710	8671348	1	True				
ANR	8671621	AssignmentExpression	compose = 1		8671348	0		=			
ANR	8671622	Identifier	compose		8671348	0					
ANR	8671623	PrimaryExpression	1		8671348	1					
ANR	8671624	ExpressionStatement	output = od	9684:6:302863:302874	8671348	8	True				
ANR	8671625	AssignmentExpression	output = od		8671348	0		=			
ANR	8671626	Identifier	output		8671348	0					
ANR	8671627	Identifier	od		8671348	1					
ANR	8671628	ExpressionStatement	output /= outmax	9685:6:302882:302898	8671348	9	True				
ANR	8671629	AssignmentExpression	output /= outmax		8671348	0		/=			
ANR	8671630	Identifier	output		8671348	0					
ANR	8671631	Identifier	outmax		8671348	1					
ANR	8671632	ExpressionStatement	output_is_encoded = vi -> screen_gamma > 0	9687:6:302907:302947	8671348	10	True				
ANR	8671633	AssignmentExpression	output_is_encoded = vi -> screen_gamma > 0		8671348	0		=			
ANR	8671634	Identifier	output_is_encoded		8671348	0					
ANR	8671635	RelationalExpression	vi -> screen_gamma > 0		8671348	1		>			
ANR	8671636	PtrMemberAccess	vi -> screen_gamma		8671348	0					
ANR	8671637	Identifier	vi		8671348	0					
ANR	8671638	Identifier	screen_gamma		8671348	1					
ANR	8671639	PrimaryExpression	0		8671348	1					
ANR	8671640	IfStatement	if ( alpha < 0 )		8671348	11					
ANR	8671641	Condition	alpha < 0	9689:10:302960:302968	8671348	0	True				
ANR	8671642	RelationalExpression	alpha < 0		8671348	0		<			
ANR	8671643	Identifier	alpha		8671348	0					
ANR	8671644	PrimaryExpression	0		8671348	1					
ANR	8671645	CompoundStatement		97:6:3599:3599	8671348	1					
ANR	8671646	IfStatement	if ( do_background != ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN )		8671348	0					
ANR	8671647	Condition	do_background != ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN	9692:13:303053:303105	8671348	0	True				
ANR	8671648	EqualityExpression	do_background != ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN		8671348	0		!=			
ANR	8671649	Identifier	do_background		8671348	0					
ANR	8671650	AdditiveExpression	ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN		8671348	1		+			
ANR	8671651	Identifier	ALPHA_MODE_OFFSET		8671348	0					
ANR	8671652	Identifier	PNG_ALPHA_BROKEN		8671348	1					
ANR	8671653	CompoundStatement		101:9:3722:3722	8671348	1					
ANR	8671654	ExpressionStatement	output_is_encoded = 0	9698:12:303307:303328	8671348	0	True				
ANR	8671655	AssignmentExpression	output_is_encoded = 0		8671348	0		=			
ANR	8671656	Identifier	output_is_encoded		8671348	0					
ANR	8671657	PrimaryExpression	0		8671348	1					
ANR	8671658	ExpressionStatement	log_max_error = 0	9699:12:303342:303359	8671348	1	True				
ANR	8671659	AssignmentExpression	log_max_error = 0		8671348	0		=			
ANR	8671660	Identifier	log_max_error		8671348	0					
ANR	8671661	PrimaryExpression	0		8671348	1					
ANR	8671662	ElseStatement	else		8671348	0					
ANR	8671663	CompoundStatement		112:6:4051:4051	8671348	0					
ANR	8671664	IfStatement	if ( do_background == ALPHA_MODE_OFFSET + PNG_ALPHA_OPTIMIZED && alpha < 1 )		8671348	0					
ANR	8671665	Condition	do_background == ALPHA_MODE_OFFSET + PNG_ALPHA_OPTIMIZED && alpha < 1	9706:13:303468:303548	8671348	0	True				
ANR	8671666	AndExpression	do_background == ALPHA_MODE_OFFSET + PNG_ALPHA_OPTIMIZED && alpha < 1		8671348	0		&&			
ANR	8671667	EqualityExpression	do_background == ALPHA_MODE_OFFSET + PNG_ALPHA_OPTIMIZED		8671348	0		==			
ANR	8671668	Identifier	do_background		8671348	0					
ANR	8671669	AdditiveExpression	ALPHA_MODE_OFFSET + PNG_ALPHA_OPTIMIZED		8671348	1		+			
ANR	8671670	Identifier	ALPHA_MODE_OFFSET		8671348	0					
ANR	8671671	Identifier	PNG_ALPHA_OPTIMIZED		8671348	1					
ANR	8671672	RelationalExpression	alpha < 1		8671348	1		<			
ANR	8671673	Identifier	alpha		8671348	0					
ANR	8671674	PrimaryExpression	1		8671348	1					
ANR	8671675	CompoundStatement		115:9:4199:4199	8671348	1					
ANR	8671676	IfStatement	if ( alpha > 0 )		8671348	0					
ANR	8671677	Condition	alpha > 0	9709:16:303619:303627	8671348	0	True				
ANR	8671678	RelationalExpression	alpha > 0		8671348	0		>			
ANR	8671679	Identifier	alpha		8671348	0					
ANR	8671680	PrimaryExpression	0		8671348	1					
ANR	8671681	ExpressionStatement	log_max_error = 0	9709:27:303630:303647	8671348	1	True				
ANR	8671682	AssignmentExpression	log_max_error = 0		8671348	0		=			
ANR	8671683	Identifier	log_max_error		8671348	0					
ANR	8671684	PrimaryExpression	0		8671348	1					
ANR	8671685	ExpressionStatement	output_is_encoded = 0	9710:12:303661:303682	8671348	1	True				
ANR	8671686	AssignmentExpression	output_is_encoded = 0		8671348	0		=			
ANR	8671687	Identifier	output_is_encoded		8671348	0					
ANR	8671688	PrimaryExpression	0		8671348	1					
ANR	8671689	IfStatement	if ( output_is_encoded )		8671348	12					
ANR	8671690	Condition	output_is_encoded	9715:10:303721:303737	8671348	0	True				
ANR	8671691	Identifier	output_is_encoded		8671348	0					
ANR	8671692	ExpressionStatement	"output = pow ( output , vi -> screen_gamma )"	9716:9:303749:303787	8671348	1	True				
ANR	8671693	AssignmentExpression	"output = pow ( output , vi -> screen_gamma )"		8671348	0		=			
ANR	8671694	Identifier	output		8671348	0					
ANR	8671695	CallExpression	"pow ( output , vi -> screen_gamma )"		8671348	1					
ANR	8671696	Callee	pow		8671348	0					
ANR	8671697	Identifier	pow		8671348	0					
ANR	8671698	ArgumentList	output		8671348	1					
ANR	8671699	Argument	output		8671348	0					
ANR	8671700	Identifier	output		8671348	0					
ANR	8671701	Argument	vi -> screen_gamma		8671348	1					
ANR	8671702	PtrMemberAccess	vi -> screen_gamma		8671348	0					
ANR	8671703	Identifier	vi		8671348	0					
ANR	8671704	Identifier	screen_gamma		8671348	1					
ANR	8671705	ExpressionStatement	encoded_sample = input_sample	9721:6:303958:303987	8671348	13	True				
ANR	8671706	AssignmentExpression	encoded_sample = input_sample		8671348	0		=			
ANR	8671707	Identifier	encoded_sample		8671348	0					
ANR	8671708	Identifier	input_sample		8671348	1					
ANR	8671709	IfStatement	if ( output_is_encoded )		8671348	14					
ANR	8671710	Condition	output_is_encoded	9722:10:303999:304015	8671348	0	True				
ANR	8671711	Identifier	output_is_encoded		8671348	0					
ANR	8671712	ExpressionStatement	"encoded_sample = pow ( encoded_sample , vi -> screen_inverse )"	9723:9:304027:304083	8671348	1	True				
ANR	8671713	AssignmentExpression	"encoded_sample = pow ( encoded_sample , vi -> screen_inverse )"		8671348	0		=			
ANR	8671714	Identifier	encoded_sample		8671348	0					
ANR	8671715	CallExpression	"pow ( encoded_sample , vi -> screen_inverse )"		8671348	1					
ANR	8671716	Callee	pow		8671348	0					
ANR	8671717	Identifier	pow		8671348	0					
ANR	8671718	ArgumentList	encoded_sample		8671348	1					
ANR	8671719	Argument	encoded_sample		8671348	0					
ANR	8671720	Identifier	encoded_sample		8671348	0					
ANR	8671721	Argument	vi -> screen_inverse		8671348	1					
ANR	8671722	PtrMemberAccess	vi -> screen_inverse		8671348	0					
ANR	8671723	Identifier	vi		8671348	0					
ANR	8671724	Identifier	screen_inverse		8671348	1					
ANR	8671725	ExpressionStatement	encoded_sample *= outmax	9724:6:304091:304115	8671348	15	True				
ANR	8671726	AssignmentExpression	encoded_sample *= outmax		8671348	0		*=			
ANR	8671727	Identifier	encoded_sample		8671348	0					
ANR	8671728	Identifier	outmax		8671348	1					
ANR	8671729	ExpressionStatement	encoded_error = fabs ( od - encoded_sample )	9726:6:304124:304163	8671348	16	True				
ANR	8671730	AssignmentExpression	encoded_error = fabs ( od - encoded_sample )		8671348	0		=			
ANR	8671731	Identifier	encoded_error		8671348	0					
ANR	8671732	CallExpression	fabs ( od - encoded_sample )		8671348	1					
ANR	8671733	Callee	fabs		8671348	0					
ANR	8671734	Identifier	fabs		8671348	0					
ANR	8671735	ArgumentList	od - encoded_sample		8671348	1					
ANR	8671736	Argument	od - encoded_sample		8671348	0					
ANR	8671737	AdditiveExpression	od - encoded_sample		8671348	0		-			
ANR	8671738	Identifier	od		8671348	0					
ANR	8671739	Identifier	encoded_sample		8671348	1					
ANR	8671740	IfStatement	if ( log_max_error && encoded_error > vi -> dp -> maxerrout )		8671348	17					
ANR	8671741	Condition	log_max_error && encoded_error > vi -> dp -> maxerrout	9731:10:304319:304368	8671348	0	True				
ANR	8671742	AndExpression	log_max_error && encoded_error > vi -> dp -> maxerrout		8671348	0		&&			
ANR	8671743	Identifier	log_max_error		8671348	0					
ANR	8671744	RelationalExpression	encoded_error > vi -> dp -> maxerrout		8671348	1		>			
ANR	8671745	Identifier	encoded_error		8671348	0					
ANR	8671746	PtrMemberAccess	vi -> dp -> maxerrout		8671348	1					
ANR	8671747	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671748	Identifier	vi		8671348	0					
ANR	8671749	Identifier	dp		8671348	1					
ANR	8671750	Identifier	maxerrout		8671348	1					
ANR	8671751	ExpressionStatement	vi -> dp -> maxerrout = encoded_error	9732:9:304380:304413	8671348	1	True				
ANR	8671752	AssignmentExpression	vi -> dp -> maxerrout = encoded_error		8671348	0		=			
ANR	8671753	PtrMemberAccess	vi -> dp -> maxerrout		8671348	0					
ANR	8671754	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671755	Identifier	vi		8671348	0					
ANR	8671756	Identifier	dp		8671348	1					
ANR	8671757	Identifier	maxerrout		8671348	1					
ANR	8671758	Identifier	encoded_error		8671348	1					
ANR	8671759	IfStatement	if ( encoded_error < vi -> maxout_total )		8671348	18					
ANR	8671760	Condition	encoded_error < vi -> maxout_total	9734:10:304426:304457	8671348	0	True				
ANR	8671761	RelationalExpression	encoded_error < vi -> maxout_total		8671348	0		<			
ANR	8671762	Identifier	encoded_error		8671348	0					
ANR	8671763	PtrMemberAccess	vi -> maxout_total		8671348	1					
ANR	8671764	Identifier	vi		8671348	0					
ANR	8671765	Identifier	maxout_total		8671348	1					
ANR	8671766	CompoundStatement		142:6:5064:5064	8671348	1					
ANR	8671767	IfStatement	if ( encoded_error < vi -> outlog )		8671348	0					
ANR	8671768	Condition	encoded_error < vi -> outlog	9736:13:304481:304506	8671348	0	True				
ANR	8671769	RelationalExpression	encoded_error < vi -> outlog		8671348	0		<			
ANR	8671770	Identifier	encoded_error		8671348	0					
ANR	8671771	PtrMemberAccess	vi -> outlog		8671348	1					
ANR	8671772	Identifier	vi		8671348	0					
ANR	8671773	Identifier	outlog		8671348	1					
ANR	8671774	ReturnStatement	return i ;	9737:12:304521:304529	8671348	1	True				
ANR	8671775	Identifier	i		8671348	0					
ANR	8671776	ExpressionStatement	"pass = ""less than maxout:\\n"""	9742:9:304658:304686	8671348	1	True				
ANR	8671777	AssignmentExpression	"pass = ""less than maxout:\\n"""		8671348	0		=			
ANR	8671778	Identifier	pass		8671348	0					
ANR	8671779	PrimaryExpression	"""less than maxout:\\n"""		8671348	1					
ANR	8671780	ExpressionStatement	error = fabs ( input_sample - output )	9759:6:305254:305287	8671348	19	True				
ANR	8671781	AssignmentExpression	error = fabs ( input_sample - output )		8671348	0		=			
ANR	8671782	Identifier	error		8671348	0					
ANR	8671783	CallExpression	fabs ( input_sample - output )		8671348	1					
ANR	8671784	Callee	fabs		8671348	0					
ANR	8671785	Identifier	fabs		8671348	0					
ANR	8671786	ArgumentList	input_sample - output		8671348	1					
ANR	8671787	Argument	input_sample - output		8671348	0					
ANR	8671788	AdditiveExpression	input_sample - output		8671348	0		-			
ANR	8671789	Identifier	input_sample		8671348	0					
ANR	8671790	Identifier	output		8671348	1					
ANR	8671791	IfStatement	if ( log_max_error && error > vi -> dp -> maxerrabs )		8671348	20					
ANR	8671792	Condition	log_max_error && error > vi -> dp -> maxerrabs	9761:10:305300:305341	8671348	0	True				
ANR	8671793	AndExpression	log_max_error && error > vi -> dp -> maxerrabs		8671348	0		&&			
ANR	8671794	Identifier	log_max_error		8671348	0					
ANR	8671795	RelationalExpression	error > vi -> dp -> maxerrabs		8671348	1		>			
ANR	8671796	Identifier	error		8671348	0					
ANR	8671797	PtrMemberAccess	vi -> dp -> maxerrabs		8671348	1					
ANR	8671798	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671799	Identifier	vi		8671348	0					
ANR	8671800	Identifier	dp		8671348	1					
ANR	8671801	Identifier	maxerrabs		8671348	1					
ANR	8671802	ExpressionStatement	vi -> dp -> maxerrabs = error	9762:9:305353:305378	8671348	1	True				
ANR	8671803	AssignmentExpression	vi -> dp -> maxerrabs = error		8671348	0		=			
ANR	8671804	PtrMemberAccess	vi -> dp -> maxerrabs		8671348	0					
ANR	8671805	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671806	Identifier	vi		8671348	0					
ANR	8671807	Identifier	dp		8671348	1					
ANR	8671808	Identifier	maxerrabs		8671348	1					
ANR	8671809	Identifier	error		8671348	1					
ANR	8671810	IfStatement	if ( log_max_error && input_sample > .5 )		8671348	21					
ANR	8671811	Condition	log_max_error && input_sample > .5	9767:10:305545:305578	8671348	0	True				
ANR	8671812	AndExpression	log_max_error && input_sample > .5		8671348	0		&&			
ANR	8671813	Identifier	log_max_error		8671348	0					
ANR	8671814	RelationalExpression	input_sample > .5		8671348	1		>			
ANR	8671815	Identifier	input_sample		8671348	0					
ANR	8671816	PrimaryExpression	.5		8671348	1					
ANR	8671817	CompoundStatement		176:9:6196:6240	8671348	1					
ANR	8671818	IdentifierDeclStatement	double percentage_error = error / input_sample ;	9769:9:305598:305642	8671348	0	True				
ANR	8671819	IdentifierDecl	percentage_error = error / input_sample		8671348	0					
ANR	8671820	IdentifierDeclType	double		8671348	0					
ANR	8671821	Identifier	percentage_error		8671348	1					
ANR	8671822	AssignmentExpression	percentage_error = error / input_sample		8671348	2		=			
ANR	8671823	Identifier	percentage_error		8671348	0					
ANR	8671824	MultiplicativeExpression	error / input_sample		8671348	1		/			
ANR	8671825	Identifier	error		8671348	0					
ANR	8671826	Identifier	input_sample		8671348	1					
ANR	8671827	IfStatement	if ( percentage_error > vi -> dp -> maxerrpc )		8671348	1					
ANR	8671828	Condition	percentage_error > vi -> dp -> maxerrpc	9770:13:305657:305691	8671348	0	True				
ANR	8671829	RelationalExpression	percentage_error > vi -> dp -> maxerrpc		8671348	0		>			
ANR	8671830	Identifier	percentage_error		8671348	0					
ANR	8671831	PtrMemberAccess	vi -> dp -> maxerrpc		8671348	1					
ANR	8671832	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671833	Identifier	vi		8671348	0					
ANR	8671834	Identifier	dp		8671348	1					
ANR	8671835	Identifier	maxerrpc		8671348	1					
ANR	8671836	ExpressionStatement	vi -> dp -> maxerrpc = percentage_error	9771:12:305706:305741	8671348	1	True				
ANR	8671837	AssignmentExpression	vi -> dp -> maxerrpc = percentage_error		8671348	0		=			
ANR	8671838	PtrMemberAccess	vi -> dp -> maxerrpc		8671348	0					
ANR	8671839	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8671840	Identifier	vi		8671348	0					
ANR	8671841	Identifier	dp		8671348	1					
ANR	8671842	Identifier	maxerrpc		8671348	1					
ANR	8671843	Identifier	percentage_error		8671348	1					
ANR	8671844	CompoundStatement		188:9:6659:6696	8671348	22					
ANR	8671845	IdentifierDeclStatement	double tmp = input_sample * vi -> maxpc ;	9781:9:306061:306098	8671348	0	True				
ANR	8671846	IdentifierDecl	tmp = input_sample * vi -> maxpc		8671348	0					
ANR	8671847	IdentifierDeclType	double		8671348	0					
ANR	8671848	Identifier	tmp		8671348	1					
ANR	8671849	AssignmentExpression	tmp = input_sample * vi -> maxpc		8671348	2		=			
ANR	8671850	Identifier	tmp		8671348	0					
ANR	8671851	MultiplicativeExpression	input_sample * vi -> maxpc		8671348	1		*			
ANR	8671852	Identifier	input_sample		8671348	0					
ANR	8671853	PtrMemberAccess	vi -> maxpc		8671348	1					
ANR	8671854	Identifier	vi		8671348	0					
ANR	8671855	Identifier	maxpc		8671348	1					
ANR	8671856	IfStatement	if ( tmp < vi -> maxabs )		8671348	1					
ANR	8671857	Condition	tmp < vi -> maxabs	9782:13:306113:306128	8671348	0	True				
ANR	8671858	RelationalExpression	tmp < vi -> maxabs		8671348	0		<			
ANR	8671859	Identifier	tmp		8671348	0					
ANR	8671860	PtrMemberAccess	vi -> maxabs		8671348	1					
ANR	8671861	Identifier	vi		8671348	0					
ANR	8671862	Identifier	maxabs		8671348	1					
ANR	8671863	ExpressionStatement	tmp = vi -> maxabs	9782:31:306131:306147	8671348	1	True				
ANR	8671864	AssignmentExpression	tmp = vi -> maxabs		8671348	0		=			
ANR	8671865	Identifier	tmp		8671348	0					
ANR	8671866	PtrMemberAccess	vi -> maxabs		8671348	1					
ANR	8671867	Identifier	vi		8671348	0					
ANR	8671868	Identifier	maxabs		8671348	1					
ANR	8671869	IfStatement	if ( compose && tmp < vi -> maxcalc )		8671348	2					
ANR	8671870	Condition	compose && tmp < vi -> maxcalc	9789:13:306525:306552	8671348	0	True				
ANR	8671871	AndExpression	compose && tmp < vi -> maxcalc		8671348	0		&&			
ANR	8671872	Identifier	compose		8671348	0					
ANR	8671873	RelationalExpression	tmp < vi -> maxcalc		8671348	1		<			
ANR	8671874	Identifier	tmp		8671348	0					
ANR	8671875	PtrMemberAccess	vi -> maxcalc		8671348	1					
ANR	8671876	Identifier	vi		8671348	0					
ANR	8671877	Identifier	maxcalc		8671348	1					
ANR	8671878	ExpressionStatement	tmp = vi -> maxcalc	9789:43:306555:306572	8671348	1	True				
ANR	8671879	AssignmentExpression	tmp = vi -> maxcalc		8671348	0		=			
ANR	8671880	Identifier	tmp		8671348	0					
ANR	8671881	PtrMemberAccess	vi -> maxcalc		8671348	1					
ANR	8671882	Identifier	vi		8671348	0					
ANR	8671883	Identifier	maxcalc		8671348	1					
ANR	8671884	ExpressionStatement	es_lo = encoded_sample - vi -> maxout	9794:9:306754:306789	8671348	3	True				
ANR	8671885	AssignmentExpression	es_lo = encoded_sample - vi -> maxout		8671348	0		=			
ANR	8671886	Identifier	es_lo		8671348	0					
ANR	8671887	AdditiveExpression	encoded_sample - vi -> maxout		8671348	1		-			
ANR	8671888	Identifier	encoded_sample		8671348	0					
ANR	8671889	PtrMemberAccess	vi -> maxout		8671348	1					
ANR	8671890	Identifier	vi		8671348	0					
ANR	8671891	Identifier	maxout		8671348	1					
ANR	8671892	IfStatement	if ( es_lo > 0 && input_sample - tmp > 0 )		8671348	4					
ANR	8671893	Condition	es_lo > 0 && input_sample - tmp > 0	9796:13:306805:306837	8671348	0	True				
ANR	8671894	AndExpression	es_lo > 0 && input_sample - tmp > 0		8671348	0		&&			
ANR	8671895	RelationalExpression	es_lo > 0		8671348	0		>			
ANR	8671896	Identifier	es_lo		8671348	0					
ANR	8671897	PrimaryExpression	0		8671348	1					
ANR	8671898	RelationalExpression	input_sample - tmp > 0		8671348	1		>			
ANR	8671899	AdditiveExpression	input_sample - tmp		8671348	0		-			
ANR	8671900	Identifier	input_sample		8671348	0					
ANR	8671901	Identifier	tmp		8671348	1					
ANR	8671902	PrimaryExpression	0		8671348	1					
ANR	8671903	CompoundStatement		205:12:7461:7496	8671348	1					
ANR	8671904	IdentifierDeclStatement	double low_value = input_sample - tmp ;	9798:12:306863:306898	8671348	0	True				
ANR	8671905	IdentifierDecl	low_value = input_sample - tmp		8671348	0					
ANR	8671906	IdentifierDeclType	double		8671348	0					
ANR	8671907	Identifier	low_value		8671348	1					
ANR	8671908	AssignmentExpression	low_value = input_sample - tmp		8671348	2		=			
ANR	8671909	Identifier	low_value		8671348	0					
ANR	8671910	AdditiveExpression	input_sample - tmp		8671348	1		-			
ANR	8671911	Identifier	input_sample		8671348	0					
ANR	8671912	Identifier	tmp		8671348	1					
ANR	8671913	IfStatement	if ( output_is_encoded )		8671348	1					
ANR	8671914	Condition	output_is_encoded	9799:16:306916:306932	8671348	0	True				
ANR	8671915	Identifier	output_is_encoded		8671348	0					
ANR	8671916	ExpressionStatement	"low_value = pow ( low_value , vi -> screen_inverse )"	9800:15:306950:306996	8671348	1	True				
ANR	8671917	AssignmentExpression	"low_value = pow ( low_value , vi -> screen_inverse )"		8671348	0		=			
ANR	8671918	Identifier	low_value		8671348	0					
ANR	8671919	CallExpression	"pow ( low_value , vi -> screen_inverse )"		8671348	1					
ANR	8671920	Callee	pow		8671348	0					
ANR	8671921	Identifier	pow		8671348	0					
ANR	8671922	ArgumentList	low_value		8671348	1					
ANR	8671923	Argument	low_value		8671348	0					
ANR	8671924	Identifier	low_value		8671348	0					
ANR	8671925	Argument	vi -> screen_inverse		8671348	1					
ANR	8671926	PtrMemberAccess	vi -> screen_inverse		8671348	0					
ANR	8671927	Identifier	vi		8671348	0					
ANR	8671928	Identifier	screen_inverse		8671348	1					
ANR	8671929	ExpressionStatement	low_value *= outmax	9801:12:307010:307029	8671348	2	True				
ANR	8671930	AssignmentExpression	low_value *= outmax		8671348	0		*=			
ANR	8671931	Identifier	low_value		8671348	0					
ANR	8671932	Identifier	outmax		8671348	1					
ANR	8671933	IfStatement	if ( low_value < es_lo )		8671348	3					
ANR	8671934	Condition	low_value < es_lo	9802:16:307047:307063	8671348	0	True				
ANR	8671935	RelationalExpression	low_value < es_lo		8671348	0		<			
ANR	8671936	Identifier	low_value		8671348	0					
ANR	8671937	Identifier	es_lo		8671348	1					
ANR	8671938	ExpressionStatement	es_lo = low_value	9802:35:307066:307083	8671348	1	True				
ANR	8671939	AssignmentExpression	es_lo = low_value		8671348	0		=			
ANR	8671940	Identifier	es_lo		8671348	0					
ANR	8671941	Identifier	low_value		8671348	1					
ANR	8671942	ExpressionStatement	es_lo = ceil ( es_lo / vi -> outquant - .5 ) * vi -> outquant	9805:12:307145:307199	8671348	4	True				
ANR	8671943	AssignmentExpression	es_lo = ceil ( es_lo / vi -> outquant - .5 ) * vi -> outquant		8671348	0		=			
ANR	8671944	Identifier	es_lo		8671348	0					
ANR	8671945	MultiplicativeExpression	ceil ( es_lo / vi -> outquant - .5 ) * vi -> outquant		8671348	1		*			
ANR	8671946	CallExpression	ceil ( es_lo / vi -> outquant - .5 )		8671348	0					
ANR	8671947	Callee	ceil		8671348	0					
ANR	8671948	Identifier	ceil		8671348	0					
ANR	8671949	ArgumentList	es_lo / vi -> outquant - .5		8671348	1					
ANR	8671950	Argument	es_lo / vi -> outquant - .5		8671348	0					
ANR	8671951	AdditiveExpression	es_lo / vi -> outquant - .5		8671348	0		-			
ANR	8671952	MultiplicativeExpression	es_lo / vi -> outquant		8671348	0		/			
ANR	8671953	Identifier	es_lo		8671348	0					
ANR	8671954	PtrMemberAccess	vi -> outquant		8671348	1					
ANR	8671955	Identifier	vi		8671348	0					
ANR	8671956	Identifier	outquant		8671348	1					
ANR	8671957	PrimaryExpression	.5		8671348	1					
ANR	8671958	PtrMemberAccess	vi -> outquant		8671348	1					
ANR	8671959	Identifier	vi		8671348	0					
ANR	8671960	Identifier	outquant		8671348	1					
ANR	8671961	ElseStatement	else		8671348	0					
ANR	8671962	ExpressionStatement	es_lo = 0	9809:12:307239:307248	8671348	0	True				
ANR	8671963	AssignmentExpression	es_lo = 0		8671348	0		=			
ANR	8671964	Identifier	es_lo		8671348	0					
ANR	8671965	PrimaryExpression	0		8671348	1					
ANR	8671966	ExpressionStatement	es_hi = encoded_sample + vi -> maxout	9811:9:307260:307295	8671348	5	True				
ANR	8671967	AssignmentExpression	es_hi = encoded_sample + vi -> maxout		8671348	0		=			
ANR	8671968	Identifier	es_hi		8671348	0					
ANR	8671969	AdditiveExpression	encoded_sample + vi -> maxout		8671348	1		+			
ANR	8671970	Identifier	encoded_sample		8671348	0					
ANR	8671971	PtrMemberAccess	vi -> maxout		8671348	1					
ANR	8671972	Identifier	vi		8671348	0					
ANR	8671973	Identifier	maxout		8671348	1					
ANR	8671974	IfStatement	if ( es_hi < outmax && input_sample + tmp < 1 )		8671348	6					
ANR	8671975	Condition	es_hi < outmax && input_sample + tmp < 1	9813:13:307311:307348	8671348	0	True				
ANR	8671976	AndExpression	es_hi < outmax && input_sample + tmp < 1		8671348	0		&&			
ANR	8671977	RelationalExpression	es_hi < outmax		8671348	0		<			
ANR	8671978	Identifier	es_hi		8671348	0					
ANR	8671979	Identifier	outmax		8671348	1					
ANR	8671980	RelationalExpression	input_sample + tmp < 1		8671348	1		<			
ANR	8671981	AdditiveExpression	input_sample + tmp		8671348	0		+			
ANR	8671982	Identifier	input_sample		8671348	0					
ANR	8671983	Identifier	tmp		8671348	1					
ANR	8671984	PrimaryExpression	1		8671348	1					
ANR	8671985	CompoundStatement		222:12:7972:8008	8671348	1					
ANR	8671986	IdentifierDeclStatement	double high_value = input_sample + tmp ;	9815:12:307374:307410	8671348	0	True				
ANR	8671987	IdentifierDecl	high_value = input_sample + tmp		8671348	0					
ANR	8671988	IdentifierDeclType	double		8671348	0					
ANR	8671989	Identifier	high_value		8671348	1					
ANR	8671990	AssignmentExpression	high_value = input_sample + tmp		8671348	2		=			
ANR	8671991	Identifier	high_value		8671348	0					
ANR	8671992	AdditiveExpression	input_sample + tmp		8671348	1		+			
ANR	8671993	Identifier	input_sample		8671348	0					
ANR	8671994	Identifier	tmp		8671348	1					
ANR	8671995	IfStatement	if ( output_is_encoded )		8671348	1					
ANR	8671996	Condition	output_is_encoded	9816:16:307428:307444	8671348	0	True				
ANR	8671997	Identifier	output_is_encoded		8671348	0					
ANR	8671998	ExpressionStatement	"high_value = pow ( high_value , vi -> screen_inverse )"	9817:15:307462:307510	8671348	1	True				
ANR	8671999	AssignmentExpression	"high_value = pow ( high_value , vi -> screen_inverse )"		8671348	0		=			
ANR	8672000	Identifier	high_value		8671348	0					
ANR	8672001	CallExpression	"pow ( high_value , vi -> screen_inverse )"		8671348	1					
ANR	8672002	Callee	pow		8671348	0					
ANR	8672003	Identifier	pow		8671348	0					
ANR	8672004	ArgumentList	high_value		8671348	1					
ANR	8672005	Argument	high_value		8671348	0					
ANR	8672006	Identifier	high_value		8671348	0					
ANR	8672007	Argument	vi -> screen_inverse		8671348	1					
ANR	8672008	PtrMemberAccess	vi -> screen_inverse		8671348	0					
ANR	8672009	Identifier	vi		8671348	0					
ANR	8672010	Identifier	screen_inverse		8671348	1					
ANR	8672011	ExpressionStatement	high_value *= outmax	9818:12:307524:307544	8671348	2	True				
ANR	8672012	AssignmentExpression	high_value *= outmax		8671348	0		*=			
ANR	8672013	Identifier	high_value		8671348	0					
ANR	8672014	Identifier	outmax		8671348	1					
ANR	8672015	IfStatement	if ( high_value > es_hi )		8671348	3					
ANR	8672016	Condition	high_value > es_hi	9819:16:307562:307579	8671348	0	True				
ANR	8672017	RelationalExpression	high_value > es_hi		8671348	0		>			
ANR	8672018	Identifier	high_value		8671348	0					
ANR	8672019	Identifier	es_hi		8671348	1					
ANR	8672020	ExpressionStatement	es_hi = high_value	9819:36:307582:307600	8671348	1	True				
ANR	8672021	AssignmentExpression	es_hi = high_value		8671348	0		=			
ANR	8672022	Identifier	es_hi		8671348	0					
ANR	8672023	Identifier	high_value		8671348	1					
ANR	8672024	ExpressionStatement	es_hi = floor ( es_hi / vi -> outquant + .5 ) * vi -> outquant	9821:12:307615:307670	8671348	4	True				
ANR	8672025	AssignmentExpression	es_hi = floor ( es_hi / vi -> outquant + .5 ) * vi -> outquant		8671348	0		=			
ANR	8672026	Identifier	es_hi		8671348	0					
ANR	8672027	MultiplicativeExpression	floor ( es_hi / vi -> outquant + .5 ) * vi -> outquant		8671348	1		*			
ANR	8672028	CallExpression	floor ( es_hi / vi -> outquant + .5 )		8671348	0					
ANR	8672029	Callee	floor		8671348	0					
ANR	8672030	Identifier	floor		8671348	0					
ANR	8672031	ArgumentList	es_hi / vi -> outquant + .5		8671348	1					
ANR	8672032	Argument	es_hi / vi -> outquant + .5		8671348	0					
ANR	8672033	AdditiveExpression	es_hi / vi -> outquant + .5		8671348	0		+			
ANR	8672034	MultiplicativeExpression	es_hi / vi -> outquant		8671348	0		/			
ANR	8672035	Identifier	es_hi		8671348	0					
ANR	8672036	PtrMemberAccess	vi -> outquant		8671348	1					
ANR	8672037	Identifier	vi		8671348	0					
ANR	8672038	Identifier	outquant		8671348	1					
ANR	8672039	PrimaryExpression	.5		8671348	1					
ANR	8672040	PtrMemberAccess	vi -> outquant		8671348	1					
ANR	8672041	Identifier	vi		8671348	0					
ANR	8672042	Identifier	outquant		8671348	1					
ANR	8672043	ElseStatement	else		8671348	0					
ANR	8672044	ExpressionStatement	es_hi = outmax	9825:12:307710:307724	8671348	0	True				
ANR	8672045	AssignmentExpression	es_hi = outmax		8671348	0		=			
ANR	8672046	Identifier	es_hi		8671348	0					
ANR	8672047	Identifier	outmax		8671348	1					
ANR	8672048	IfStatement	if ( od >= es_lo && od <= es_hi )		8671348	23					
ANR	8672049	Condition	od >= es_lo && od <= es_hi	9832:10:307928:307953	8671348	0	True				
ANR	8672050	AndExpression	od >= es_lo && od <= es_hi		8671348	0		&&			
ANR	8672051	RelationalExpression	od >= es_lo		8671348	0		>=			
ANR	8672052	Identifier	od		8671348	0					
ANR	8672053	Identifier	es_lo		8671348	1					
ANR	8672054	RelationalExpression	od <= es_hi		8671348	1		<=			
ANR	8672055	Identifier	od		8671348	0					
ANR	8672056	Identifier	es_hi		8671348	1					
ANR	8672057	CompoundStatement		240:6:8560:8560	8671348	1					
ANR	8672058	IfStatement	if ( encoded_error < vi -> outlog )		8671348	0					
ANR	8672059	Condition	encoded_error < vi -> outlog	9835:13:308057:308082	8671348	0	True				
ANR	8672060	RelationalExpression	encoded_error < vi -> outlog		8671348	0		<			
ANR	8672061	Identifier	encoded_error		8671348	0					
ANR	8672062	PtrMemberAccess	vi -> outlog		8671348	1					
ANR	8672063	Identifier	vi		8671348	0					
ANR	8672064	Identifier	outlog		8671348	1					
ANR	8672065	ReturnStatement	return i ;	9836:12:308097:308105	8671348	1	True				
ANR	8672066	Identifier	i		8671348	0					
ANR	8672067	IfStatement	if ( pass == 0 )		8671348	1					
ANR	8672068	Condition	pass == 0	9838:13:308121:308129	8671348	0	True				
ANR	8672069	EqualityExpression	pass == 0		8671348	0		==			
ANR	8672070	Identifier	pass		8671348	0					
ANR	8672071	PrimaryExpression	0		8671348	1					
ANR	8672072	ExpressionStatement	"pass = ""within digitization limits:\\n"""	9839:12:308144:308182	8671348	1	True				
ANR	8672073	AssignmentExpression	"pass = ""within digitization limits:\\n"""		8671348	0		=			
ANR	8672074	Identifier	pass		8671348	0					
ANR	8672075	PrimaryExpression	"""within digitization limits:\\n"""		8671348	1					
ANR	8672076	ElseStatement	else		8671348	0					
ANR	8672077	ExpressionStatement	"is_lo = es_lo , is_hi = es_hi"	9969:12:312833:312861	8671348	0	True				
ANR	8672078	Expression	"is_lo = es_lo , is_hi = es_hi"		8671348	0					
ANR	8672079	AssignmentExpression	is_lo = es_lo		8671348	0		=			
ANR	8672080	Identifier	is_lo		8671348	0					
ANR	8672081	Identifier	es_lo		8671348	1					
ANR	8672082	AssignmentExpression	is_hi = es_hi		8671348	1		=			
ANR	8672083	Identifier	is_hi		8671348	0					
ANR	8672084	Identifier	es_hi		8671348	1					
ANR	8672085	CompoundStatement		253:9:8914:8933	8671348	24					
ANR	8672086	IdentifierDeclStatement	"double is_lo , is_hi ;"	9846:9:308316:308335	8671348	0	True				
ANR	8672087	IdentifierDecl	is_lo		8671348	0					
ANR	8672088	IdentifierDeclType	double		8671348	0					
ANR	8672089	Identifier	is_lo		8671348	1					
ANR	8672090	IdentifierDecl	is_hi		8671348	1					
ANR	8672091	IdentifierDeclType	double		8671348	0					
ANR	8672092	Identifier	is_hi		8671348	1					
ANR	8672093	IfStatement	if ( pass == 0 && vi -> use_input_precision && vi -> dp -> sbit )		8671348	1					
ANR	8672094	Condition	pass == 0 && vi -> use_input_precision && vi -> dp -> sbit	9852:13:308559:308610	8671348	0	True				
ANR	8672095	AndExpression	pass == 0 && vi -> use_input_precision && vi -> dp -> sbit		8671348	0		&&			
ANR	8672096	EqualityExpression	pass == 0		8671348	0		==			
ANR	8672097	Identifier	pass		8671348	0					
ANR	8672098	PrimaryExpression	0		8671348	1					
ANR	8672099	AndExpression	vi -> use_input_precision && vi -> dp -> sbit		8671348	1		&&			
ANR	8672100	PtrMemberAccess	vi -> use_input_precision		8671348	0					
ANR	8672101	Identifier	vi		8671348	0					
ANR	8672102	Identifier	use_input_precision		8671348	1					
ANR	8672103	PtrMemberAccess	vi -> dp -> sbit		8671348	1					
ANR	8672104	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8672105	Identifier	vi		8671348	0					
ANR	8672106	Identifier	dp		8671348	1					
ANR	8672107	Identifier	sbit		8671348	1					
ANR	8672108	CompoundStatement		276:12:10033:10093	8671348	1					
ANR	8672109	Statement	if	9865:12:309308:309309	8671348	0	True				
ANR	8672110	Statement	PNG_LIBPNG_VER	9865:15:309311:309324	8671348	1	True				
ANR	8672111	Statement	<	9865:30:309326:309326	8671348	2	True				
ANR	8672112	Statement	10700	9865:32:309328:309332	8671348	3	True				
ANR	8672113	Statement	define	9866:15:309349:309354	8671348	4	True				
ANR	8672114	Statement	SBIT_ERROR	9866:22:309356:309365	8671348	5	True				
ANR	8672115	Statement	.5	9866:33:309367:309368	8671348	6	True				
ANR	8672116	Statement	SBIT_ERROR	9868:22:309409:309418	8671348	7	True				
ANR	8672117	Statement	1.	9868:33:309420:309421	8671348	8	True				
ANR	8672118	IdentifierDeclStatement	endif double tmp = ( isbit - SBIT_ERROR ) / sbit_max ;	9869:12:309435:309495	8671348	9	True				
ANR	8672119	IdentifierDecl	tmp = ( isbit - SBIT_ERROR ) / sbit_max		8671348	0					
ANR	8672120	IdentifierDeclType	endif double		8671348	0					
ANR	8672121	Identifier	tmp		8671348	1					
ANR	8672122	AssignmentExpression	tmp = ( isbit - SBIT_ERROR ) / sbit_max		8671348	2		=			
ANR	8672123	Identifier	tmp		8671348	0					
ANR	8672124	MultiplicativeExpression	( isbit - SBIT_ERROR ) / sbit_max		8671348	1		/			
ANR	8672125	AdditiveExpression	isbit - SBIT_ERROR		8671348	0		-			
ANR	8672126	Identifier	isbit		8671348	0					
ANR	8672127	Identifier	SBIT_ERROR		8671348	1					
ANR	8672128	Identifier	sbit_max		8671348	1					
ANR	8672129	IfStatement	if ( tmp <= 0 )		8671348	10					
ANR	8672130	Condition	tmp <= 0	9872:16:309514:309521	8671348	0	True				
ANR	8672131	RelationalExpression	tmp <= 0		8671348	0		<=			
ANR	8672132	Identifier	tmp		8671348	0					
ANR	8672133	PrimaryExpression	0		8671348	1					
ANR	8672134	ExpressionStatement	tmp = 0	9873:15:309539:309546	8671348	1	True				
ANR	8672135	AssignmentExpression	tmp = 0		8671348	0		=			
ANR	8672136	Identifier	tmp		8671348	0					
ANR	8672137	PrimaryExpression	0		8671348	1					
ANR	8672138	ElseStatement	else		8671348	0					
ANR	8672139	IfStatement	if ( alpha >= 0 && vi -> file_inverse > 0 && tmp < 1 )		8671348	0					
ANR	8672140	Condition	alpha >= 0 && vi -> file_inverse > 0 && tmp < 1	9875:21:309570:309614	8671348	0	True				
ANR	8672141	AndExpression	alpha >= 0 && vi -> file_inverse > 0 && tmp < 1		8671348	0		&&			
ANR	8672142	RelationalExpression	alpha >= 0		8671348	0		>=			
ANR	8672143	Identifier	alpha		8671348	0					
ANR	8672144	PrimaryExpression	0		8671348	1					
ANR	8672145	AndExpression	vi -> file_inverse > 0 && tmp < 1		8671348	1		&&			
ANR	8672146	RelationalExpression	vi -> file_inverse > 0		8671348	0		>			
ANR	8672147	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8672148	Identifier	vi		8671348	0					
ANR	8672149	Identifier	file_inverse		8671348	1					
ANR	8672150	PrimaryExpression	0		8671348	1					
ANR	8672151	RelationalExpression	tmp < 1		8671348	1		<			
ANR	8672152	Identifier	tmp		8671348	0					
ANR	8672153	PrimaryExpression	1		8671348	1					
ANR	8672154	ExpressionStatement	"tmp = pow ( tmp , vi -> file_inverse )"	9876:15:309632:309664	8671348	1	True				
ANR	8672155	AssignmentExpression	"tmp = pow ( tmp , vi -> file_inverse )"		8671348	0		=			
ANR	8672156	Identifier	tmp		8671348	0					
ANR	8672157	CallExpression	"pow ( tmp , vi -> file_inverse )"		8671348	1					
ANR	8672158	Callee	pow		8671348	0					
ANR	8672159	Identifier	pow		8671348	0					
ANR	8672160	ArgumentList	tmp		8671348	1					
ANR	8672161	Argument	tmp		8671348	0					
ANR	8672162	Identifier	tmp		8671348	0					
ANR	8672163	Argument	vi -> file_inverse		8671348	1					
ANR	8672164	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8672165	Identifier	vi		8671348	0					
ANR	8672166	Identifier	file_inverse		8671348	1					
ANR	8672167	ExpressionStatement	"tmp = gamma_component_compose ( do_background , tmp , alpha , background , NULL )"	9878:12:309679:309768	8671348	11	True				
ANR	8672168	AssignmentExpression	"tmp = gamma_component_compose ( do_background , tmp , alpha , background , NULL )"		8671348	0		=			
ANR	8672169	Identifier	tmp		8671348	0					
ANR	8672170	CallExpression	"gamma_component_compose ( do_background , tmp , alpha , background , NULL )"		8671348	1					
ANR	8672171	Callee	gamma_component_compose		8671348	0					
ANR	8672172	Identifier	gamma_component_compose		8671348	0					
ANR	8672173	ArgumentList	do_background		8671348	1					
ANR	8672174	Argument	do_background		8671348	0					
ANR	8672175	Identifier	do_background		8671348	0					
ANR	8672176	Argument	tmp		8671348	1					
ANR	8672177	Identifier	tmp		8671348	0					
ANR	8672178	Argument	alpha		8671348	2					
ANR	8672179	Identifier	alpha		8671348	0					
ANR	8672180	Argument	background		8671348	3					
ANR	8672181	Identifier	background		8671348	0					
ANR	8672182	Argument	NULL		8671348	4					
ANR	8672183	Identifier	NULL		8671348	0					
ANR	8672184	IfStatement	if ( output_is_encoded && tmp > 0 && tmp < 1 )		8671348	12					
ANR	8672185	Condition	output_is_encoded && tmp > 0 && tmp < 1	9881:16:309787:309825	8671348	0	True				
ANR	8672186	AndExpression	output_is_encoded && tmp > 0 && tmp < 1		8671348	0		&&			
ANR	8672187	Identifier	output_is_encoded		8671348	0					
ANR	8672188	AndExpression	tmp > 0 && tmp < 1		8671348	1		&&			
ANR	8672189	RelationalExpression	tmp > 0		8671348	0		>			
ANR	8672190	Identifier	tmp		8671348	0					
ANR	8672191	PrimaryExpression	0		8671348	1					
ANR	8672192	RelationalExpression	tmp < 1		8671348	1		<			
ANR	8672193	Identifier	tmp		8671348	0					
ANR	8672194	PrimaryExpression	1		8671348	1					
ANR	8672195	ExpressionStatement	"tmp = pow ( tmp , vi -> screen_inverse )"	9882:15:309843:309877	8671348	1	True				
ANR	8672196	AssignmentExpression	"tmp = pow ( tmp , vi -> screen_inverse )"		8671348	0		=			
ANR	8672197	Identifier	tmp		8671348	0					
ANR	8672198	CallExpression	"pow ( tmp , vi -> screen_inverse )"		8671348	1					
ANR	8672199	Callee	pow		8671348	0					
ANR	8672200	Identifier	pow		8671348	0					
ANR	8672201	ArgumentList	tmp		8671348	1					
ANR	8672202	Argument	tmp		8671348	0					
ANR	8672203	Identifier	tmp		8671348	0					
ANR	8672204	Argument	vi -> screen_inverse		8671348	1					
ANR	8672205	PtrMemberAccess	vi -> screen_inverse		8671348	0					
ANR	8672206	Identifier	vi		8671348	0					
ANR	8672207	Identifier	screen_inverse		8671348	1					
ANR	8672208	ExpressionStatement	is_lo = ceil ( outmax * tmp - vi -> maxout_total )	9884:12:309892:309937	8671348	13	True				
ANR	8672209	AssignmentExpression	is_lo = ceil ( outmax * tmp - vi -> maxout_total )		8671348	0		=			
ANR	8672210	Identifier	is_lo		8671348	0					
ANR	8672211	CallExpression	ceil ( outmax * tmp - vi -> maxout_total )		8671348	1					
ANR	8672212	Callee	ceil		8671348	0					
ANR	8672213	Identifier	ceil		8671348	0					
ANR	8672214	ArgumentList	outmax * tmp - vi -> maxout_total		8671348	1					
ANR	8672215	Argument	outmax * tmp - vi -> maxout_total		8671348	0					
ANR	8672216	AdditiveExpression	outmax * tmp - vi -> maxout_total		8671348	0		-			
ANR	8672217	MultiplicativeExpression	outmax * tmp		8671348	0		*			
ANR	8672218	Identifier	outmax		8671348	0					
ANR	8672219	Identifier	tmp		8671348	1					
ANR	8672220	PtrMemberAccess	vi -> maxout_total		8671348	1					
ANR	8672221	Identifier	vi		8671348	0					
ANR	8672222	Identifier	maxout_total		8671348	1					
ANR	8672223	IfStatement	if ( is_lo < 0 )		8671348	14					
ANR	8672224	Condition	is_lo < 0	9886:16:309956:309964	8671348	0	True				
ANR	8672225	RelationalExpression	is_lo < 0		8671348	0		<			
ANR	8672226	Identifier	is_lo		8671348	0					
ANR	8672227	PrimaryExpression	0		8671348	1					
ANR	8672228	ExpressionStatement	is_lo = 0	9887:15:309982:309991	8671348	1	True				
ANR	8672229	AssignmentExpression	is_lo = 0		8671348	0		=			
ANR	8672230	Identifier	is_lo		8671348	0					
ANR	8672231	PrimaryExpression	0		8671348	1					
ANR	8672232	ExpressionStatement	tmp = ( isbit + SBIT_ERROR ) / sbit_max	9889:12:310006:310041	8671348	15	True				
ANR	8672233	AssignmentExpression	tmp = ( isbit + SBIT_ERROR ) / sbit_max		8671348	0		=			
ANR	8672234	Identifier	tmp		8671348	0					
ANR	8672235	MultiplicativeExpression	( isbit + SBIT_ERROR ) / sbit_max		8671348	1		/			
ANR	8672236	AdditiveExpression	isbit + SBIT_ERROR		8671348	0		+			
ANR	8672237	Identifier	isbit		8671348	0					
ANR	8672238	Identifier	SBIT_ERROR		8671348	1					
ANR	8672239	Identifier	sbit_max		8671348	1					
ANR	8672240	IfStatement	if ( tmp >= 1 )		8671348	16					
ANR	8672241	Condition	tmp >= 1	9891:16:310060:310067	8671348	0	True				
ANR	8672242	RelationalExpression	tmp >= 1		8671348	0		>=			
ANR	8672243	Identifier	tmp		8671348	0					
ANR	8672244	PrimaryExpression	1		8671348	1					
ANR	8672245	ExpressionStatement	tmp = 1	9892:15:310085:310092	8671348	1	True				
ANR	8672246	AssignmentExpression	tmp = 1		8671348	0		=			
ANR	8672247	Identifier	tmp		8671348	0					
ANR	8672248	PrimaryExpression	1		8671348	1					
ANR	8672249	ElseStatement	else		8671348	0					
ANR	8672250	IfStatement	if ( alpha >= 0 && vi -> file_inverse > 0 && tmp < 1 )		8671348	0					
ANR	8672251	Condition	alpha >= 0 && vi -> file_inverse > 0 && tmp < 1	9894:21:310116:310160	8671348	0	True				
ANR	8672252	AndExpression	alpha >= 0 && vi -> file_inverse > 0 && tmp < 1		8671348	0		&&			
ANR	8672253	RelationalExpression	alpha >= 0		8671348	0		>=			
ANR	8672254	Identifier	alpha		8671348	0					
ANR	8672255	PrimaryExpression	0		8671348	1					
ANR	8672256	AndExpression	vi -> file_inverse > 0 && tmp < 1		8671348	1		&&			
ANR	8672257	RelationalExpression	vi -> file_inverse > 0		8671348	0		>			
ANR	8672258	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8672259	Identifier	vi		8671348	0					
ANR	8672260	Identifier	file_inverse		8671348	1					
ANR	8672261	PrimaryExpression	0		8671348	1					
ANR	8672262	RelationalExpression	tmp < 1		8671348	1		<			
ANR	8672263	Identifier	tmp		8671348	0					
ANR	8672264	PrimaryExpression	1		8671348	1					
ANR	8672265	ExpressionStatement	"tmp = pow ( tmp , vi -> file_inverse )"	9895:15:310178:310210	8671348	1	True				
ANR	8672266	AssignmentExpression	"tmp = pow ( tmp , vi -> file_inverse )"		8671348	0		=			
ANR	8672267	Identifier	tmp		8671348	0					
ANR	8672268	CallExpression	"pow ( tmp , vi -> file_inverse )"		8671348	1					
ANR	8672269	Callee	pow		8671348	0					
ANR	8672270	Identifier	pow		8671348	0					
ANR	8672271	ArgumentList	tmp		8671348	1					
ANR	8672272	Argument	tmp		8671348	0					
ANR	8672273	Identifier	tmp		8671348	0					
ANR	8672274	Argument	vi -> file_inverse		8671348	1					
ANR	8672275	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8672276	Identifier	vi		8671348	0					
ANR	8672277	Identifier	file_inverse		8671348	1					
ANR	8672278	ExpressionStatement	"tmp = gamma_component_compose ( do_background , tmp , alpha , background , NULL )"	9897:12:310225:310314	8671348	17	True				
ANR	8672279	AssignmentExpression	"tmp = gamma_component_compose ( do_background , tmp , alpha , background , NULL )"		8671348	0		=			
ANR	8672280	Identifier	tmp		8671348	0					
ANR	8672281	CallExpression	"gamma_component_compose ( do_background , tmp , alpha , background , NULL )"		8671348	1					
ANR	8672282	Callee	gamma_component_compose		8671348	0					
ANR	8672283	Identifier	gamma_component_compose		8671348	0					
ANR	8672284	ArgumentList	do_background		8671348	1					
ANR	8672285	Argument	do_background		8671348	0					
ANR	8672286	Identifier	do_background		8671348	0					
ANR	8672287	Argument	tmp		8671348	1					
ANR	8672288	Identifier	tmp		8671348	0					
ANR	8672289	Argument	alpha		8671348	2					
ANR	8672290	Identifier	alpha		8671348	0					
ANR	8672291	Argument	background		8671348	3					
ANR	8672292	Identifier	background		8671348	0					
ANR	8672293	Argument	NULL		8671348	4					
ANR	8672294	Identifier	NULL		8671348	0					
ANR	8672295	IfStatement	if ( output_is_encoded && tmp > 0 && tmp < 1 )		8671348	18					
ANR	8672296	Condition	output_is_encoded && tmp > 0 && tmp < 1	9900:16:310333:310371	8671348	0	True				
ANR	8672297	AndExpression	output_is_encoded && tmp > 0 && tmp < 1		8671348	0		&&			
ANR	8672298	Identifier	output_is_encoded		8671348	0					
ANR	8672299	AndExpression	tmp > 0 && tmp < 1		8671348	1		&&			
ANR	8672300	RelationalExpression	tmp > 0		8671348	0		>			
ANR	8672301	Identifier	tmp		8671348	0					
ANR	8672302	PrimaryExpression	0		8671348	1					
ANR	8672303	RelationalExpression	tmp < 1		8671348	1		<			
ANR	8672304	Identifier	tmp		8671348	0					
ANR	8672305	PrimaryExpression	1		8671348	1					
ANR	8672306	ExpressionStatement	"tmp = pow ( tmp , vi -> screen_inverse )"	9901:15:310389:310423	8671348	1	True				
ANR	8672307	AssignmentExpression	"tmp = pow ( tmp , vi -> screen_inverse )"		8671348	0		=			
ANR	8672308	Identifier	tmp		8671348	0					
ANR	8672309	CallExpression	"pow ( tmp , vi -> screen_inverse )"		8671348	1					
ANR	8672310	Callee	pow		8671348	0					
ANR	8672311	Identifier	pow		8671348	0					
ANR	8672312	ArgumentList	tmp		8671348	1					
ANR	8672313	Argument	tmp		8671348	0					
ANR	8672314	Identifier	tmp		8671348	0					
ANR	8672315	Argument	vi -> screen_inverse		8671348	1					
ANR	8672316	PtrMemberAccess	vi -> screen_inverse		8671348	0					
ANR	8672317	Identifier	vi		8671348	0					
ANR	8672318	Identifier	screen_inverse		8671348	1					
ANR	8672319	ExpressionStatement	is_hi = floor ( outmax * tmp + vi -> maxout_total )	9903:12:310438:310484	8671348	19	True				
ANR	8672320	AssignmentExpression	is_hi = floor ( outmax * tmp + vi -> maxout_total )		8671348	0		=			
ANR	8672321	Identifier	is_hi		8671348	0					
ANR	8672322	CallExpression	floor ( outmax * tmp + vi -> maxout_total )		8671348	1					
ANR	8672323	Callee	floor		8671348	0					
ANR	8672324	Identifier	floor		8671348	0					
ANR	8672325	ArgumentList	outmax * tmp + vi -> maxout_total		8671348	1					
ANR	8672326	Argument	outmax * tmp + vi -> maxout_total		8671348	0					
ANR	8672327	AdditiveExpression	outmax * tmp + vi -> maxout_total		8671348	0		+			
ANR	8672328	MultiplicativeExpression	outmax * tmp		8671348	0		*			
ANR	8672329	Identifier	outmax		8671348	0					
ANR	8672330	Identifier	tmp		8671348	1					
ANR	8672331	PtrMemberAccess	vi -> maxout_total		8671348	1					
ANR	8672332	Identifier	vi		8671348	0					
ANR	8672333	Identifier	maxout_total		8671348	1					
ANR	8672334	IfStatement	if ( is_hi > outmax )		8671348	20					
ANR	8672335	Condition	is_hi > outmax	9905:16:310503:310516	8671348	0	True				
ANR	8672336	RelationalExpression	is_hi > outmax		8671348	0		>			
ANR	8672337	Identifier	is_hi		8671348	0					
ANR	8672338	Identifier	outmax		8671348	1					
ANR	8672339	ExpressionStatement	is_hi = outmax	9906:15:310534:310548	8671348	1	True				
ANR	8672340	AssignmentExpression	is_hi = outmax		8671348	0		=			
ANR	8672341	Identifier	is_hi		8671348	0					
ANR	8672342	Identifier	outmax		8671348	1					
ANR	8672343	IfStatement	if ( ! ( od < is_lo || od > is_hi ) )		8671348	21					
ANR	8672344	Condition	! ( od < is_lo || od > is_hi )	9908:16:310567:310593	8671348	0	True				
ANR	8672345	UnaryOperationExpression	! ( od < is_lo || od > is_hi )		8671348	0					
ANR	8672346	UnaryOperator	!		8671348	0					
ANR	8672347	OrExpression	od < is_lo || od > is_hi		8671348	1		||			
ANR	8672348	RelationalExpression	od < is_lo		8671348	0		<			
ANR	8672349	Identifier	od		8671348	0					
ANR	8672350	Identifier	is_lo		8671348	1					
ANR	8672351	RelationalExpression	od > is_hi		8671348	1		>			
ANR	8672352	Identifier	od		8671348	0					
ANR	8672353	Identifier	is_hi		8671348	1					
ANR	8672354	CompoundStatement		316:12:11206:11206	8671348	1					
ANR	8672355	IfStatement	if ( encoded_error < vi -> outlog )		8671348	0					
ANR	8672356	Condition	encoded_error < vi -> outlog	9910:19:310629:310654	8671348	0	True				
ANR	8672357	RelationalExpression	encoded_error < vi -> outlog		8671348	0		<			
ANR	8672358	Identifier	encoded_error		8671348	0					
ANR	8672359	PtrMemberAccess	vi -> outlog		8671348	1					
ANR	8672360	Identifier	vi		8671348	0					
ANR	8672361	Identifier	outlog		8671348	1					
ANR	8672362	ReturnStatement	return i ;	9911:18:310675:310683	8671348	1	True				
ANR	8672363	Identifier	i		8671348	0					
ANR	8672364	ExpressionStatement	"pass = ""within input precision limits:\\n"""	9913:15:310701:310742	8671348	1	True				
ANR	8672365	AssignmentExpression	"pass = ""within input precision limits:\\n"""		8671348	0		=			
ANR	8672366	Identifier	pass		8671348	0					
ANR	8672367	PrimaryExpression	"""within input precision limits:\\n"""		8671348	1					
ANR	8672368	Statement	ifndef	9924:12:311187:311192	8671348	22	True				
ANR	8672369	Statement	PNG_READ_16_TO_8_ACCURATE_SCALE_SUPPORTED	9924:19:311194:311234	8671348	23	True				
ANR	8672370	Statement	if	9925:15:311251:311252	8671348	24	True				
ANR	8672371	Statement	PNG_LIBPNG_VER	9925:18:311254:311267	8671348	25	True				
ANR	8672372	Statement	<	9925:33:311269:311269	8671348	26	True				
ANR	8672373	Statement	10504	9925:35:311271:311275	8671348	27	True				
ANR	8672374	IfStatement	if ( pass == 0 && alpha < 0 && vi -> scale16 && vi -> sbit > 8 && vi -> sbit + vi -> isbit_shift == 16 )		8671348	28					
ANR	8672375	Condition	pass == 0 && alpha < 0 && vi -> scale16 && vi -> sbit > 8 && vi -> sbit + vi -> isbit_shift == 16	9932:22:311683:311792	8671348	0	True				
ANR	8672376	AndExpression	pass == 0 && alpha < 0 && vi -> scale16 && vi -> sbit > 8 && vi -> sbit + vi -> isbit_shift == 16		8671348	0		&&			
ANR	8672377	EqualityExpression	pass == 0		8671348	0		==			
ANR	8672378	Identifier	pass		8671348	0					
ANR	8672379	PrimaryExpression	0		8671348	1					
ANR	8672380	AndExpression	alpha < 0 && vi -> scale16 && vi -> sbit > 8 && vi -> sbit + vi -> isbit_shift == 16		8671348	1		&&			
ANR	8672381	RelationalExpression	alpha < 0		8671348	0		<			
ANR	8672382	Identifier	alpha		8671348	0					
ANR	8672383	PrimaryExpression	0		8671348	1					
ANR	8672384	AndExpression	vi -> scale16 && vi -> sbit > 8 && vi -> sbit + vi -> isbit_shift == 16		8671348	1		&&			
ANR	8672385	PtrMemberAccess	vi -> scale16		8671348	0					
ANR	8672386	Identifier	vi		8671348	0					
ANR	8672387	Identifier	scale16		8671348	1					
ANR	8672388	AndExpression	vi -> sbit > 8 && vi -> sbit + vi -> isbit_shift == 16		8671348	1		&&			
ANR	8672389	RelationalExpression	vi -> sbit > 8		8671348	0		>			
ANR	8672390	PtrMemberAccess	vi -> sbit		8671348	0					
ANR	8672391	Identifier	vi		8671348	0					
ANR	8672392	Identifier	sbit		8671348	1					
ANR	8672393	PrimaryExpression	8		8671348	1					
ANR	8672394	EqualityExpression	vi -> sbit + vi -> isbit_shift == 16		8671348	1		==			
ANR	8672395	AdditiveExpression	vi -> sbit + vi -> isbit_shift		8671348	0		+			
ANR	8672396	PtrMemberAccess	vi -> sbit		8671348	0					
ANR	8672397	Identifier	vi		8671348	0					
ANR	8672398	Identifier	sbit		8671348	1					
ANR	8672399	PtrMemberAccess	vi -> isbit_shift		8671348	1					
ANR	8672400	Identifier	vi		8671348	0					
ANR	8672401	Identifier	isbit_shift		8671348	1					
ANR	8672402	PrimaryExpression	16		8671348	1					
ANR	8672403	CompoundStatement		341:18:12411:12411	8671348	1					
ANR	8672404	ExpressionStatement	tmp = ( ( id >> 8 ) - .5 ) / 255	9935:21:311836:311862	8671348	0	True				
ANR	8672405	AssignmentExpression	tmp = ( ( id >> 8 ) - .5 ) / 255		8671348	0		=			
ANR	8672406	Identifier	tmp		8671348	0					
ANR	8672407	MultiplicativeExpression	( ( id >> 8 ) - .5 ) / 255		8671348	1		/			
ANR	8672408	AdditiveExpression	( id >> 8 ) - .5		8671348	0		-			
ANR	8672409	ShiftExpression	id >> 8		8671348	0		>>			
ANR	8672410	Identifier	id		8671348	0					
ANR	8672411	PrimaryExpression	8		8671348	1					
ANR	8672412	PrimaryExpression	.5		8671348	1					
ANR	8672413	PrimaryExpression	255		8671348	1					
ANR	8672414	IfStatement	if ( tmp > 0 )		8671348	1					
ANR	8672415	Condition	tmp > 0	9937:25:311890:311896	8671348	0	True				
ANR	8672416	RelationalExpression	tmp > 0		8671348	0		>			
ANR	8672417	Identifier	tmp		8671348	0					
ANR	8672418	PrimaryExpression	0		8671348	1					
ANR	8672419	CompoundStatement		345:21:12518:12518	8671348	1					
ANR	8672420	ExpressionStatement	is_lo = ceil ( outmax * tmp - vi -> maxout_total )	9939:24:311946:311991	8671348	0	True				
ANR	8672421	AssignmentExpression	is_lo = ceil ( outmax * tmp - vi -> maxout_total )		8671348	0		=			
ANR	8672422	Identifier	is_lo		8671348	0					
ANR	8672423	CallExpression	ceil ( outmax * tmp - vi -> maxout_total )		8671348	1					
ANR	8672424	Callee	ceil		8671348	0					
ANR	8672425	Identifier	ceil		8671348	0					
ANR	8672426	ArgumentList	outmax * tmp - vi -> maxout_total		8671348	1					
ANR	8672427	Argument	outmax * tmp - vi -> maxout_total		8671348	0					
ANR	8672428	AdditiveExpression	outmax * tmp - vi -> maxout_total		8671348	0		-			
ANR	8672429	MultiplicativeExpression	outmax * tmp		8671348	0		*			
ANR	8672430	Identifier	outmax		8671348	0					
ANR	8672431	Identifier	tmp		8671348	1					
ANR	8672432	PtrMemberAccess	vi -> maxout_total		8671348	1					
ANR	8672433	Identifier	vi		8671348	0					
ANR	8672434	Identifier	maxout_total		8671348	1					
ANR	8672435	IfStatement	if ( is_lo < 0 )		8671348	1					
ANR	8672436	Condition	is_lo < 0	9940:28:312021:312029	8671348	0	True				
ANR	8672437	RelationalExpression	is_lo < 0		8671348	0		<			
ANR	8672438	Identifier	is_lo		8671348	0					
ANR	8672439	PrimaryExpression	0		8671348	1					
ANR	8672440	ExpressionStatement	is_lo = 0	9940:39:312032:312041	8671348	1	True				
ANR	8672441	AssignmentExpression	is_lo = 0		8671348	0		=			
ANR	8672442	Identifier	is_lo		8671348	0					
ANR	8672443	PrimaryExpression	0		8671348	1					
ANR	8672444	ElseStatement	else		8671348	0					
ANR	8672445	ExpressionStatement	is_lo = 0	9944:24:312117:312126	8671348	0	True				
ANR	8672446	AssignmentExpression	is_lo = 0		8671348	0		=			
ANR	8672447	Identifier	is_lo		8671348	0					
ANR	8672448	PrimaryExpression	0		8671348	1					
ANR	8672449	ExpressionStatement	tmp = ( ( id >> 8 ) + .5 ) / 255	9946:21:312150:312176	8671348	2	True				
ANR	8672450	AssignmentExpression	tmp = ( ( id >> 8 ) + .5 ) / 255		8671348	0		=			
ANR	8672451	Identifier	tmp		8671348	0					
ANR	8672452	MultiplicativeExpression	( ( id >> 8 ) + .5 ) / 255		8671348	1		/			
ANR	8672453	AdditiveExpression	( id >> 8 ) + .5		8671348	0		+			
ANR	8672454	ShiftExpression	id >> 8		8671348	0		>>			
ANR	8672455	Identifier	id		8671348	0					
ANR	8672456	PrimaryExpression	8		8671348	1					
ANR	8672457	PrimaryExpression	.5		8671348	1					
ANR	8672458	PrimaryExpression	255		8671348	1					
ANR	8672459	IfStatement	if ( tmp < 1 )		8671348	3					
ANR	8672460	Condition	tmp < 1	9948:25:312204:312210	8671348	0	True				
ANR	8672461	RelationalExpression	tmp < 1		8671348	0		<			
ANR	8672462	Identifier	tmp		8671348	0					
ANR	8672463	PrimaryExpression	1		8671348	1					
ANR	8672464	CompoundStatement		356:21:12832:12832	8671348	1					
ANR	8672465	ExpressionStatement	is_hi = floor ( outmax * tmp + vi -> maxout_total )	9950:24:312260:312306	8671348	0	True				
ANR	8672466	AssignmentExpression	is_hi = floor ( outmax * tmp + vi -> maxout_total )		8671348	0		=			
ANR	8672467	Identifier	is_hi		8671348	0					
ANR	8672468	CallExpression	floor ( outmax * tmp + vi -> maxout_total )		8671348	1					
ANR	8672469	Callee	floor		8671348	0					
ANR	8672470	Identifier	floor		8671348	0					
ANR	8672471	ArgumentList	outmax * tmp + vi -> maxout_total		8671348	1					
ANR	8672472	Argument	outmax * tmp + vi -> maxout_total		8671348	0					
ANR	8672473	AdditiveExpression	outmax * tmp + vi -> maxout_total		8671348	0		+			
ANR	8672474	MultiplicativeExpression	outmax * tmp		8671348	0		*			
ANR	8672475	Identifier	outmax		8671348	0					
ANR	8672476	Identifier	tmp		8671348	1					
ANR	8672477	PtrMemberAccess	vi -> maxout_total		8671348	1					
ANR	8672478	Identifier	vi		8671348	0					
ANR	8672479	Identifier	maxout_total		8671348	1					
ANR	8672480	IfStatement	if ( is_hi > outmax )		8671348	1					
ANR	8672481	Condition	is_hi > outmax	9951:28:312336:312349	8671348	0	True				
ANR	8672482	RelationalExpression	is_hi > outmax		8671348	0		>			
ANR	8672483	Identifier	is_hi		8671348	0					
ANR	8672484	Identifier	outmax		8671348	1					
ANR	8672485	ExpressionStatement	is_hi = outmax	9951:44:312352:312366	8671348	1	True				
ANR	8672486	AssignmentExpression	is_hi = outmax		8671348	0		=			
ANR	8672487	Identifier	is_hi		8671348	0					
ANR	8672488	Identifier	outmax		8671348	1					
ANR	8672489	ElseStatement	else		8671348	0					
ANR	8672490	ExpressionStatement	is_hi = outmax	9955:24:312442:312456	8671348	0	True				
ANR	8672491	AssignmentExpression	is_hi = outmax		8671348	0		=			
ANR	8672492	Identifier	is_hi		8671348	0					
ANR	8672493	Identifier	outmax		8671348	1					
ANR	8672494	IfStatement	if ( ! ( od < is_lo || od > is_hi ) )		8671348	4					
ANR	8672495	Condition	! ( od < is_lo || od > is_hi )	9957:25:312484:312510	8671348	0	True				
ANR	8672496	UnaryOperationExpression	! ( od < is_lo || od > is_hi )		8671348	0					
ANR	8672497	UnaryOperator	!		8671348	0					
ANR	8672498	OrExpression	od < is_lo || od > is_hi		8671348	1		||			
ANR	8672499	RelationalExpression	od < is_lo		8671348	0		<			
ANR	8672500	Identifier	od		8671348	0					
ANR	8672501	Identifier	is_lo		8671348	1					
ANR	8672502	RelationalExpression	od > is_hi		8671348	1		>			
ANR	8672503	Identifier	od		8671348	0					
ANR	8672504	Identifier	is_hi		8671348	1					
ANR	8672505	CompoundStatement		365:21:13132:13132	8671348	1					
ANR	8672506	IfStatement	if ( encoded_error < vi -> outlog )		8671348	0					
ANR	8672507	Condition	encoded_error < vi -> outlog	9959:28:312564:312589	8671348	0	True				
ANR	8672508	RelationalExpression	encoded_error < vi -> outlog		8671348	0		<			
ANR	8672509	Identifier	encoded_error		8671348	0					
ANR	8672510	PtrMemberAccess	vi -> outlog		8671348	1					
ANR	8672511	Identifier	vi		8671348	0					
ANR	8672512	Identifier	outlog		8671348	1					
ANR	8672513	ReturnStatement	return i ;	9960:27:312619:312627	8671348	1	True				
ANR	8672514	Identifier	i		8671348	0					
ANR	8672515	ExpressionStatement	"pass = ""within 8 bit limits:\\n"""	9962:24:312654:312685	8671348	1	True				
ANR	8672516	AssignmentExpression	"pass = ""within 8 bit limits:\\n"""		8671348	0		=			
ANR	8672517	Identifier	pass		8671348	0					
ANR	8672518	PrimaryExpression	"""within 8 bit limits:\\n"""		8671348	1					
ANR	8672519	Statement	endif	9965:15:312745:312749	8671348	29	True				
ANR	8672520	Statement	endif	9966:12:312763:312767	8671348	30	True				
ANR	8672521	ElseStatement	else		8671348	0					
ANR	8672522	Statement	define	9868:15:309402:309407	8671348	0	True				
ANR	8672523	CompoundStatement		389:12:14025:14038	8671348	2					
ANR	8672524	IdentifierDeclStatement	size_t pos = 0 ;	9976:12:313134:313148	8671348	0	True				
ANR	8672525	IdentifierDecl	pos = 0		8671348	0					
ANR	8672526	IdentifierDeclType	size_t		8671348	0					
ANR	8672527	Identifier	pos		8671348	1					
ANR	8672528	AssignmentExpression	pos = 0		8671348	2		=			
ANR	8672529	Identifier	pos		8671348	0					
ANR	8672530	PrimaryExpression	0		8671348	1					
ANR	8672531	IdentifierDeclStatement	int precision = ( outmax >= 1000 ? 6 : 3 ) ;	9980:12:313312:313352	8671348	1	True				
ANR	8672532	IdentifierDecl	precision = ( outmax >= 1000 ? 6 : 3 )		8671348	0					
ANR	8672533	IdentifierDeclType	int		8671348	0					
ANR	8672534	Identifier	precision		8671348	1					
ANR	8672535	AssignmentExpression	precision = ( outmax >= 1000 ? 6 : 3 )		8671348	2		=			
ANR	8672536	Identifier	precision		8671348	0					
ANR	8672537	ConditionalExpression	outmax >= 1000 ? 6 : 3		8671348	1					
ANR	8672538	Condition	outmax >= 1000		8671348	0					
ANR	8672539	RelationalExpression	outmax >= 1000		8671348	0		>=			
ANR	8672540	Identifier	outmax		8671348	0					
ANR	8672541	PrimaryExpression	1000		8671348	1					
ANR	8672542	PrimaryExpression	6		8671348	1					
ANR	8672543	PrimaryExpression	3		8671348	2					
ANR	8672544	IdentifierDeclStatement	"int use_input = 1 , use_background = 0 , do_compose = 0 ;"	9981:12:313366:313413	8671348	2	True				
ANR	8672545	IdentifierDecl	use_input = 1		8671348	0					
ANR	8672546	IdentifierDeclType	int		8671348	0					
ANR	8672547	Identifier	use_input		8671348	1					
ANR	8672548	AssignmentExpression	use_input = 1		8671348	2		=			
ANR	8672549	Identifier	use_input		8671348	0					
ANR	8672550	PrimaryExpression	1		8671348	1					
ANR	8672551	IdentifierDecl	use_background = 0		8671348	1					
ANR	8672552	IdentifierDeclType	int		8671348	0					
ANR	8672553	Identifier	use_background		8671348	1					
ANR	8672554	AssignmentExpression	use_background = 0		8671348	2		=			
ANR	8672555	Identifier	use_background		8671348	0					
ANR	8672556	PrimaryExpression	0		8671348	1					
ANR	8672557	IdentifierDecl	do_compose = 0		8671348	2					
ANR	8672558	IdentifierDeclType	int		8671348	0					
ANR	8672559	Identifier	do_compose		8671348	1					
ANR	8672560	AssignmentExpression	do_compose = 0		8671348	2		=			
ANR	8672561	Identifier	do_compose		8671348	0					
ANR	8672562	PrimaryExpression	0		8671348	1					
ANR	8672563	IdentifierDeclStatement	char msg [ 256 ] ;	9982:12:313427:313440	8671348	3	True				
ANR	8672564	IdentifierDecl	msg [ 256 ]		8671348	0					
ANR	8672565	IdentifierDeclType	char [ 256 ]		8671348	0					
ANR	8672566	Identifier	msg		8671348	1					
ANR	8672567	PrimaryExpression	256		8671348	2					
ANR	8672568	IfStatement	if ( pass != 0 )		8671348	4					
ANR	8672569	Condition	pass != 0	9984:16:313459:313467	8671348	0	True				
ANR	8672570	EqualityExpression	pass != 0		8671348	0		!=			
ANR	8672571	Identifier	pass		8671348	0					
ANR	8672572	PrimaryExpression	0		8671348	1					
ANR	8672573	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\n\\t"" )"	9985:15:313485:313528	8671348	1	True				
ANR	8672574	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\n\\t"" )"		8671348	0		=			
ANR	8672575	Identifier	pos		8671348	0					
ANR	8672576	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\n\\t"" )"		8671348	1					
ANR	8672577	Callee	safecat		8671348	0					
ANR	8672578	Identifier	safecat		8671348	0					
ANR	8672579	ArgumentList	msg		8671348	1					
ANR	8672580	Argument	msg		8671348	0					
ANR	8672581	Identifier	msg		8671348	0					
ANR	8672582	Argument	sizeof msg		8671348	1					
ANR	8672583	SizeofExpression	sizeof msg		8671348	0					
ANR	8672584	Sizeof	sizeof		8671348	0					
ANR	8672585	Identifier	msg		8671348	1					
ANR	8672586	Argument	pos		8671348	2					
ANR	8672587	Identifier	pos		8671348	0					
ANR	8672588	Argument	"""\\n\\t"""		8671348	3					
ANR	8672589	PrimaryExpression	"""\\n\\t"""		8671348	0					
ANR	8672590	SwitchStatement	switch ( do_background )		8671348	5					
ANR	8672591	Condition	do_background	9990:20:313712:313724	8671348	0	True				
ANR	8672592	Identifier	do_background		8671348	0					
ANR	8672593	CompoundStatement		410:12:14884:14969	8671348	1					
ANR	8672594	Statement	ifdef	9992:12:313753:313757	8671348	0	True				
ANR	8672595	Statement	PNG_READ_BACKGROUND_SUPPORTED	9992:18:313759:313787	8671348	1	True				
ANR	8672596	Label	case PNG_BACKGROUND_GAMMA_SCREEN :	9993:15:313804:313836	8671348	2	True				
ANR	8672597	Identifier	PNG_BACKGROUND_GAMMA_SCREEN		8671348	0					
ANR	8672598	Label	case PNG_BACKGROUND_GAMMA_FILE :	9994:15:313853:313883	8671348	3	True				
ANR	8672599	Identifier	PNG_BACKGROUND_GAMMA_FILE		8671348	0					
ANR	8672600	Label	case PNG_BACKGROUND_GAMMA_UNIQUE :	9995:15:313900:313932	8671348	4	True				
ANR	8672601	Identifier	PNG_BACKGROUND_GAMMA_UNIQUE		8671348	0					
ANR	8672602	ExpressionStatement	use_background = ( alpha >= 0 && alpha < 1 )	9996:18:313952:313994	8671348	5	True				
ANR	8672603	AssignmentExpression	use_background = ( alpha >= 0 && alpha < 1 )		8671348	0		=			
ANR	8672604	Identifier	use_background		8671348	0					
ANR	8672605	AndExpression	alpha >= 0 && alpha < 1		8671348	1		&&			
ANR	8672606	RelationalExpression	alpha >= 0		8671348	0		>=			
ANR	8672607	Identifier	alpha		8671348	0					
ANR	8672608	PrimaryExpression	0		8671348	1					
ANR	8672609	RelationalExpression	alpha < 1		8671348	1		<			
ANR	8672610	Identifier	alpha		8671348	0					
ANR	8672611	PrimaryExpression	1		8671348	1					
ANR	8672612	Statement	endif	9997:12:314008:314012	8671348	6	True				
ANR	8672613	Statement	ifdef	9998:12:314026:314030	8671348	7	True				
ANR	8672614	Statement	PNG_READ_ALPHA_MODE_SUPPORTED	9998:18:314032:314060	8671348	8	True				
ANR	8672615	Statement	case	10000:15:314110:314113	8671348	9	True				
ANR	8672616	Statement	ALPHA_MODE_OFFSET	10000:20:314115:314131	8671348	10	True				
ANR	8672617	Statement	+	10000:38:314133:314133	8671348	11	True				
ANR	8672618	Label	PNG_ALPHA_STANDARD :	10000:40:314135:314153	8671348	12	True				
ANR	8672619	Identifier	PNG_ALPHA_STANDARD		8671348	0					
ANR	8672620	Statement	case	10001:15:314170:314173	8671348	13	True				
ANR	8672621	Statement	ALPHA_MODE_OFFSET	10001:20:314175:314191	8671348	14	True				
ANR	8672622	Statement	+	10001:38:314193:314193	8671348	15	True				
ANR	8672623	Label	PNG_ALPHA_BROKEN :	10001:40:314195:314211	8671348	16	True				
ANR	8672624	Identifier	PNG_ALPHA_BROKEN		8671348	0					
ANR	8672625	Statement	case	10002:15:314228:314231	8671348	17	True				
ANR	8672626	Statement	ALPHA_MODE_OFFSET	10002:20:314233:314249	8671348	18	True				
ANR	8672627	Statement	+	10002:38:314251:314251	8671348	19	True				
ANR	8672628	Label	PNG_ALPHA_OPTIMIZED :	10002:40:314253:314272	8671348	20	True				
ANR	8672629	Identifier	PNG_ALPHA_OPTIMIZED		8671348	0					
ANR	8672630	IdentifierDeclStatement	endif do_compose = ( alpha > 0 && alpha < 1 ) ;	10003:12:314286:314371	8671348	21	True				
ANR	8672631	IdentifierDecl	do_compose = ( alpha > 0 && alpha < 1 )		8671348	0					
ANR	8672632	IdentifierDeclType	endif		8671348	0					
ANR	8672633	Identifier	do_compose		8671348	1					
ANR	8672634	AssignmentExpression	do_compose = ( alpha > 0 && alpha < 1 )		8671348	2		=			
ANR	8672635	Identifier	do_compose		8671348	0					
ANR	8672636	AndExpression	alpha > 0 && alpha < 1		8671348	1		&&			
ANR	8672637	RelationalExpression	alpha > 0		8671348	0		>			
ANR	8672638	Identifier	alpha		8671348	0					
ANR	8672639	PrimaryExpression	0		8671348	1					
ANR	8672640	RelationalExpression	alpha < 1		8671348	1		<			
ANR	8672641	Identifier	alpha		8671348	0					
ANR	8672642	PrimaryExpression	1		8671348	1					
ANR	8672643	ExpressionStatement	use_input = ( alpha != 0 )	10005:15:314388:314412	8671348	22	True				
ANR	8672644	AssignmentExpression	use_input = ( alpha != 0 )		8671348	0		=			
ANR	8672645	Identifier	use_input		8671348	0					
ANR	8672646	EqualityExpression	alpha != 0		8671348	1		!=			
ANR	8672647	Identifier	alpha		8671348	0					
ANR	8672648	PrimaryExpression	0		8671348	1					
ANR	8672649	BreakStatement	break ;	10006:15:314429:314434	8671348	23	True				
ANR	8672650	Label	default :	10008:12:314449:314456	8671348	24	True				
ANR	8672651	Identifier	default		8671348	0					
ANR	8672652	BreakStatement	break ;	10009:15:314473:314478	8671348	25	True				
ANR	8672653	IfStatement	if ( compose != do_compose )		8671348	6					
ANR	8672654	Condition	compose != do_compose	10013:16:314554:314574	8671348	0	True				
ANR	8672655	EqualityExpression	compose != do_compose		8671348	0		!=			
ANR	8672656	Identifier	compose		8671348	0					
ANR	8672657	Identifier	do_compose		8671348	1					
ANR	8672658	ExpressionStatement	"png_error ( vi -> pp , ""internal error (compose)"" )"	10014:15:314592:314637	8671348	1	True				
ANR	8672659	CallExpression	"png_error ( vi -> pp , ""internal error (compose)"" )"		8671348	0					
ANR	8672660	Callee	png_error		8671348	0					
ANR	8672661	Identifier	png_error		8671348	0					
ANR	8672662	ArgumentList	vi -> pp		8671348	1					
ANR	8672663	Argument	vi -> pp		8671348	0					
ANR	8672664	PtrMemberAccess	vi -> pp		8671348	0					
ANR	8672665	Identifier	vi		8671348	0					
ANR	8672666	Identifier	pp		8671348	1					
ANR	8672667	Argument	"""internal error (compose)"""		8671348	1					
ANR	8672668	PrimaryExpression	"""internal error (compose)"""		8671348	0					
ANR	8672669	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , name )"	10017:12:314699:314740	8671348	7	True				
ANR	8672670	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , name )"		8671348	0		=			
ANR	8672671	Identifier	pos		8671348	0					
ANR	8672672	CallExpression	"safecat ( msg , sizeof msg , pos , name )"		8671348	1					
ANR	8672673	Callee	safecat		8671348	0					
ANR	8672674	Identifier	safecat		8671348	0					
ANR	8672675	ArgumentList	msg		8671348	1					
ANR	8672676	Argument	msg		8671348	0					
ANR	8672677	Identifier	msg		8671348	0					
ANR	8672678	Argument	sizeof msg		8671348	1					
ANR	8672679	SizeofExpression	sizeof msg		8671348	0					
ANR	8672680	Sizeof	sizeof		8671348	0					
ANR	8672681	Identifier	msg		8671348	1					
ANR	8672682	Argument	pos		8671348	2					
ANR	8672683	Identifier	pos		8671348	0					
ANR	8672684	Argument	name		8671348	3					
ANR	8672685	Identifier	name		8671348	0					
ANR	8672686	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""("" )"	10018:12:314754:314794	8671348	8	True				
ANR	8672687	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""("" )"		8671348	0		=			
ANR	8672688	Identifier	pos		8671348	0					
ANR	8672689	CallExpression	"safecat ( msg , sizeof msg , pos , ""("" )"		8671348	1					
ANR	8672690	Callee	safecat		8671348	0					
ANR	8672691	Identifier	safecat		8671348	0					
ANR	8672692	ArgumentList	msg		8671348	1					
ANR	8672693	Argument	msg		8671348	0					
ANR	8672694	Identifier	msg		8671348	0					
ANR	8672695	Argument	sizeof msg		8671348	1					
ANR	8672696	SizeofExpression	sizeof msg		8671348	0					
ANR	8672697	Sizeof	sizeof		8671348	0					
ANR	8672698	Identifier	msg		8671348	1					
ANR	8672699	Argument	pos		8671348	2					
ANR	8672700	Identifier	pos		8671348	0					
ANR	8672701	Argument	"""("""		8671348	3					
ANR	8672702	PrimaryExpression	"""("""		8671348	0					
ANR	8672703	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , id )"	10019:12:314808:314848	8671348	9	True				
ANR	8672704	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , id )"		8671348	0		=			
ANR	8672705	Identifier	pos		8671348	0					
ANR	8672706	CallExpression	"safecatn ( msg , sizeof msg , pos , id )"		8671348	1					
ANR	8672707	Callee	safecatn		8671348	0					
ANR	8672708	Identifier	safecatn		8671348	0					
ANR	8672709	ArgumentList	msg		8671348	1					
ANR	8672710	Argument	msg		8671348	0					
ANR	8672711	Identifier	msg		8671348	0					
ANR	8672712	Argument	sizeof msg		8671348	1					
ANR	8672713	SizeofExpression	sizeof msg		8671348	0					
ANR	8672714	Sizeof	sizeof		8671348	0					
ANR	8672715	Identifier	msg		8671348	1					
ANR	8672716	Argument	pos		8671348	2					
ANR	8672717	Identifier	pos		8671348	0					
ANR	8672718	Argument	id		8671348	3					
ANR	8672719	Identifier	id		8671348	0					
ANR	8672720	IfStatement	if ( use_input || pass != 0 )		8671348	10					
ANR	8672721	Condition	use_input || pass != 0	10020:16:314866:314887	8671348	0	True				
ANR	8672722	OrExpression	use_input || pass != 0		8671348	0		||			
ANR	8672723	Identifier	use_input		8671348	0					
ANR	8672724	EqualityExpression	pass != 0		8671348	1		!=			
ANR	8672725	Identifier	pass		8671348	0					
ANR	8672726	PrimaryExpression	0		8671348	1					
ANR	8672727	CompoundStatement		428:12:15511:15511	8671348	1					
ANR	8672728	IfStatement	if ( isbit != id )		8671348	0					
ANR	8672729	Condition	isbit != id	10022:19:314934:314944	8671348	0	True				
ANR	8672730	EqualityExpression	isbit != id		8671348	0		!=			
ANR	8672731	Identifier	isbit		8671348	0					
ANR	8672732	Identifier	id		8671348	1					
ANR	8672733	CompoundStatement		430:15:15560:15560	8671348	1					
ANR	8672734	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "", sbit("" )"	10025:18:315051:315097	8671348	0	True				
ANR	8672735	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "", sbit("" )"		8671348	0		=			
ANR	8672736	Identifier	pos		8671348	0					
ANR	8672737	CallExpression	"safecat ( msg , sizeof msg , pos , "", sbit("" )"		8671348	1					
ANR	8672738	Callee	safecat		8671348	0					
ANR	8672739	Identifier	safecat		8671348	0					
ANR	8672740	ArgumentList	msg		8671348	1					
ANR	8672741	Argument	msg		8671348	0					
ANR	8672742	Identifier	msg		8671348	0					
ANR	8672743	Argument	sizeof msg		8671348	1					
ANR	8672744	SizeofExpression	sizeof msg		8671348	0					
ANR	8672745	Sizeof	sizeof		8671348	0					
ANR	8672746	Identifier	msg		8671348	1					
ANR	8672747	Argument	pos		8671348	2					
ANR	8672748	Identifier	pos		8671348	0					
ANR	8672749	Argument	""", sbit("""		8671348	3					
ANR	8672750	PrimaryExpression	""", sbit("""		8671348	0					
ANR	8672751	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , vi -> sbit )"	10026:18:315117:315163	8671348	1	True				
ANR	8672752	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , vi -> sbit )"		8671348	0		=			
ANR	8672753	Identifier	pos		8671348	0					
ANR	8672754	CallExpression	"safecatn ( msg , sizeof msg , pos , vi -> sbit )"		8671348	1					
ANR	8672755	Callee	safecatn		8671348	0					
ANR	8672756	Identifier	safecatn		8671348	0					
ANR	8672757	ArgumentList	msg		8671348	1					
ANR	8672758	Argument	msg		8671348	0					
ANR	8672759	Identifier	msg		8671348	0					
ANR	8672760	Argument	sizeof msg		8671348	1					
ANR	8672761	SizeofExpression	sizeof msg		8671348	0					
ANR	8672762	Sizeof	sizeof		8671348	0					
ANR	8672763	Identifier	msg		8671348	1					
ANR	8672764	Argument	pos		8671348	2					
ANR	8672765	Identifier	pos		8671348	0					
ANR	8672766	Argument	vi -> sbit		8671348	3					
ANR	8672767	PtrMemberAccess	vi -> sbit		8671348	0					
ANR	8672768	Identifier	vi		8671348	0					
ANR	8672769	Identifier	sbit		8671348	1					
ANR	8672770	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""): "" )"	10027:18:315183:315225	8671348	2	True				
ANR	8672771	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""): "" )"		8671348	0		=			
ANR	8672772	Identifier	pos		8671348	0					
ANR	8672773	CallExpression	"safecat ( msg , sizeof msg , pos , ""): "" )"		8671348	1					
ANR	8672774	Callee	safecat		8671348	0					
ANR	8672775	Identifier	safecat		8671348	0					
ANR	8672776	ArgumentList	msg		8671348	1					
ANR	8672777	Argument	msg		8671348	0					
ANR	8672778	Identifier	msg		8671348	0					
ANR	8672779	Argument	sizeof msg		8671348	1					
ANR	8672780	SizeofExpression	sizeof msg		8671348	0					
ANR	8672781	Sizeof	sizeof		8671348	0					
ANR	8672782	Identifier	msg		8671348	1					
ANR	8672783	Argument	pos		8671348	2					
ANR	8672784	Identifier	pos		8671348	0					
ANR	8672785	Argument	"""): """		8671348	3					
ANR	8672786	PrimaryExpression	"""): """		8671348	0					
ANR	8672787	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , isbit )"	10028:18:315245:315288	8671348	3	True				
ANR	8672788	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , isbit )"		8671348	0		=			
ANR	8672789	Identifier	pos		8671348	0					
ANR	8672790	CallExpression	"safecatn ( msg , sizeof msg , pos , isbit )"		8671348	1					
ANR	8672791	Callee	safecatn		8671348	0					
ANR	8672792	Identifier	safecatn		8671348	0					
ANR	8672793	ArgumentList	msg		8671348	1					
ANR	8672794	Argument	msg		8671348	0					
ANR	8672795	Identifier	msg		8671348	0					
ANR	8672796	Argument	sizeof msg		8671348	1					
ANR	8672797	SizeofExpression	sizeof msg		8671348	0					
ANR	8672798	Sizeof	sizeof		8671348	0					
ANR	8672799	Identifier	msg		8671348	1					
ANR	8672800	Argument	pos		8671348	2					
ANR	8672801	Identifier	pos		8671348	0					
ANR	8672802	Argument	isbit		8671348	3					
ANR	8672803	Identifier	isbit		8671348	0					
ANR	8672804	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""/"" )"	10030:15:315322:315362	8671348	1	True				
ANR	8672805	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""/"" )"		8671348	0		=			
ANR	8672806	Identifier	pos		8671348	0					
ANR	8672807	CallExpression	"safecat ( msg , sizeof msg , pos , ""/"" )"		8671348	1					
ANR	8672808	Callee	safecat		8671348	0					
ANR	8672809	Identifier	safecat		8671348	0					
ANR	8672810	ArgumentList	msg		8671348	1					
ANR	8672811	Argument	msg		8671348	0					
ANR	8672812	Identifier	msg		8671348	0					
ANR	8672813	Argument	sizeof msg		8671348	1					
ANR	8672814	SizeofExpression	sizeof msg		8671348	0					
ANR	8672815	Sizeof	sizeof		8671348	0					
ANR	8672816	Identifier	msg		8671348	1					
ANR	8672817	Argument	pos		8671348	2					
ANR	8672818	Identifier	pos		8671348	0					
ANR	8672819	Argument	"""/"""		8671348	3					
ANR	8672820	PrimaryExpression	"""/"""		8671348	0					
ANR	8672821	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , vi -> sbit_max )"	10032:15:315460:315510	8671348	2	True				
ANR	8672822	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , vi -> sbit_max )"		8671348	0		=			
ANR	8672823	Identifier	pos		8671348	0					
ANR	8672824	CallExpression	"safecatn ( msg , sizeof msg , pos , vi -> sbit_max )"		8671348	1					
ANR	8672825	Callee	safecatn		8671348	0					
ANR	8672826	Identifier	safecatn		8671348	0					
ANR	8672827	ArgumentList	msg		8671348	1					
ANR	8672828	Argument	msg		8671348	0					
ANR	8672829	Identifier	msg		8671348	0					
ANR	8672830	Argument	sizeof msg		8671348	1					
ANR	8672831	SizeofExpression	sizeof msg		8671348	0					
ANR	8672832	Sizeof	sizeof		8671348	0					
ANR	8672833	Identifier	msg		8671348	1					
ANR	8672834	Argument	pos		8671348	2					
ANR	8672835	Identifier	pos		8671348	0					
ANR	8672836	Argument	vi -> sbit_max		8671348	3					
ANR	8672837	PtrMemberAccess	vi -> sbit_max		8671348	0					
ANR	8672838	Identifier	vi		8671348	0					
ANR	8672839	Identifier	sbit_max		8671348	1					
ANR	8672840	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "")"" )"	10034:12:315538:315578	8671348	11	True				
ANR	8672841	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "")"" )"		8671348	0		=			
ANR	8672842	Identifier	pos		8671348	0					
ANR	8672843	CallExpression	"safecat ( msg , sizeof msg , pos , "")"" )"		8671348	1					
ANR	8672844	Callee	safecat		8671348	0					
ANR	8672845	Identifier	safecat		8671348	0					
ANR	8672846	ArgumentList	msg		8671348	1					
ANR	8672847	Argument	msg		8671348	0					
ANR	8672848	Identifier	msg		8671348	0					
ANR	8672849	Argument	sizeof msg		8671348	1					
ANR	8672850	SizeofExpression	sizeof msg		8671348	0					
ANR	8672851	Sizeof	sizeof		8671348	0					
ANR	8672852	Identifier	msg		8671348	1					
ANR	8672853	Argument	pos		8671348	2					
ANR	8672854	Identifier	pos		8671348	0					
ANR	8672855	Argument	""")"""		8671348	3					
ANR	8672856	PrimaryExpression	""")"""		8671348	0					
ANR	8672857	IfStatement	if ( compose || pass != 0 )		8671348	12					
ANR	8672858	Condition	compose || pass != 0	10039:16:315759:315778	8671348	0	True				
ANR	8672859	OrExpression	compose || pass != 0		8671348	0		||			
ANR	8672860	Identifier	compose		8671348	0					
ANR	8672861	EqualityExpression	pass != 0		8671348	1		!=			
ANR	8672862	Identifier	pass		8671348	0					
ANR	8672863	PrimaryExpression	0		8671348	1					
ANR	8672864	CompoundStatement		447:12:16391:16391	8671348	1					
ANR	8672865	IfStatement	if ( use_input || pass != 0 )		8671348	0					
ANR	8672866	Condition	use_input || pass != 0	10046:19:316121:316142	8671348	0	True				
ANR	8672867	OrExpression	use_input || pass != 0		8671348	0		||			
ANR	8672868	Identifier	use_input		8671348	0					
ANR	8672869	EqualityExpression	pass != 0		8671348	1		!=			
ANR	8672870	Identifier	pass		8671348	0					
ANR	8672871	PrimaryExpression	0		8671348	1					
ANR	8672872	CompoundStatement		454:15:16758:16758	8671348	1					
ANR	8672873	IfStatement	if ( vi -> file_inverse > 0 )		8671348	0					
ANR	8672874	Condition	vi -> file_inverse > 0	10048:22:316184:316203	8671348	0	True				
ANR	8672875	RelationalExpression	vi -> file_inverse > 0		8671348	0		>			
ANR	8672876	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8672877	Identifier	vi		8671348	0					
ANR	8672878	Identifier	file_inverse		8671348	1					
ANR	8672879	PrimaryExpression	0		8671348	1					
ANR	8672880	CompoundStatement		456:18:16822:16822	8671348	1					
ANR	8672881	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""^"" )"	10050:21:316247:316287	8671348	0	True				
ANR	8672882	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""^"" )"		8671348	0		=			
ANR	8672883	Identifier	pos		8671348	0					
ANR	8672884	CallExpression	"safecat ( msg , sizeof msg , pos , ""^"" )"		8671348	1					
ANR	8672885	Callee	safecat		8671348	0					
ANR	8672886	Identifier	safecat		8671348	0					
ANR	8672887	ArgumentList	msg		8671348	1					
ANR	8672888	Argument	msg		8671348	0					
ANR	8672889	Identifier	msg		8671348	0					
ANR	8672890	Argument	sizeof msg		8671348	1					
ANR	8672891	SizeofExpression	sizeof msg		8671348	0					
ANR	8672892	Sizeof	sizeof		8671348	0					
ANR	8672893	Identifier	msg		8671348	1					
ANR	8672894	Argument	pos		8671348	2					
ANR	8672895	Identifier	pos		8671348	0					
ANR	8672896	Argument	"""^"""		8671348	3					
ANR	8672897	PrimaryExpression	"""^"""		8671348	0					
ANR	8672898	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , vi -> file_inverse , 2 )"	10051:21:316310:316367	8671348	1	True				
ANR	8672899	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , vi -> file_inverse , 2 )"		8671348	0		=			
ANR	8672900	Identifier	pos		8671348	0					
ANR	8672901	CallExpression	"safecatd ( msg , sizeof msg , pos , vi -> file_inverse , 2 )"		8671348	1					
ANR	8672902	Callee	safecatd		8671348	0					
ANR	8672903	Identifier	safecatd		8671348	0					
ANR	8672904	ArgumentList	msg		8671348	1					
ANR	8672905	Argument	msg		8671348	0					
ANR	8672906	Identifier	msg		8671348	0					
ANR	8672907	Argument	sizeof msg		8671348	1					
ANR	8672908	SizeofExpression	sizeof msg		8671348	0					
ANR	8672909	Sizeof	sizeof		8671348	0					
ANR	8672910	Identifier	msg		8671348	1					
ANR	8672911	Argument	pos		8671348	2					
ANR	8672912	Identifier	pos		8671348	0					
ANR	8672913	Argument	vi -> file_inverse		8671348	3					
ANR	8672914	PtrMemberAccess	vi -> file_inverse		8671348	0					
ANR	8672915	Identifier	vi		8671348	0					
ANR	8672916	Identifier	file_inverse		8671348	1					
ANR	8672917	Argument	2		8671348	4					
ANR	8672918	PrimaryExpression	2		8671348	0					
ANR	8672919	ElseStatement	else		8671348	0					
ANR	8672920	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""[linear]"" )"	10055:21:316434:316481	8671348	0	True				
ANR	8672921	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""[linear]"" )"		8671348	0		=			
ANR	8672922	Identifier	pos		8671348	0					
ANR	8672923	CallExpression	"safecat ( msg , sizeof msg , pos , ""[linear]"" )"		8671348	1					
ANR	8672924	Callee	safecat		8671348	0					
ANR	8672925	Identifier	safecat		8671348	0					
ANR	8672926	ArgumentList	msg		8671348	1					
ANR	8672927	Argument	msg		8671348	0					
ANR	8672928	Identifier	msg		8671348	0					
ANR	8672929	Argument	sizeof msg		8671348	1					
ANR	8672930	SizeofExpression	sizeof msg		8671348	0					
ANR	8672931	Sizeof	sizeof		8671348	0					
ANR	8672932	Identifier	msg		8671348	1					
ANR	8672933	Argument	pos		8671348	2					
ANR	8672934	Identifier	pos		8671348	0					
ANR	8672935	Argument	"""[linear]"""		8671348	3					
ANR	8672936	PrimaryExpression	"""[linear]"""		8671348	0					
ANR	8672937	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""*(alpha)"" )"	10057:18:316502:316549	8671348	1	True				
ANR	8672938	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""*(alpha)"" )"		8671348	0		=			
ANR	8672939	Identifier	pos		8671348	0					
ANR	8672940	CallExpression	"safecat ( msg , sizeof msg , pos , ""*(alpha)"" )"		8671348	1					
ANR	8672941	Callee	safecat		8671348	0					
ANR	8672942	Identifier	safecat		8671348	0					
ANR	8672943	ArgumentList	msg		8671348	1					
ANR	8672944	Argument	msg		8671348	0					
ANR	8672945	Identifier	msg		8671348	0					
ANR	8672946	Argument	sizeof msg		8671348	1					
ANR	8672947	SizeofExpression	sizeof msg		8671348	0					
ANR	8672948	Sizeof	sizeof		8671348	0					
ANR	8672949	Identifier	msg		8671348	1					
ANR	8672950	Argument	pos		8671348	2					
ANR	8672951	Identifier	pos		8671348	0					
ANR	8672952	Argument	"""*(alpha)"""		8671348	3					
ANR	8672953	PrimaryExpression	"""*(alpha)"""		8671348	0					
ANR	8672954	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , alpha , precision )"	10058:18:316569:316623	8671348	2	True				
ANR	8672955	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , alpha , precision )"		8671348	0		=			
ANR	8672956	Identifier	pos		8671348	0					
ANR	8672957	CallExpression	"safecatd ( msg , sizeof msg , pos , alpha , precision )"		8671348	1					
ANR	8672958	Callee	safecatd		8671348	0					
ANR	8672959	Identifier	safecatd		8671348	0					
ANR	8672960	ArgumentList	msg		8671348	1					
ANR	8672961	Argument	msg		8671348	0					
ANR	8672962	Identifier	msg		8671348	0					
ANR	8672963	Argument	sizeof msg		8671348	1					
ANR	8672964	SizeofExpression	sizeof msg		8671348	0					
ANR	8672965	Sizeof	sizeof		8671348	0					
ANR	8672966	Identifier	msg		8671348	1					
ANR	8672967	Argument	pos		8671348	2					
ANR	8672968	Identifier	pos		8671348	0					
ANR	8672969	Argument	alpha		8671348	3					
ANR	8672970	Identifier	alpha		8671348	0					
ANR	8672971	Argument	precision		8671348	4					
ANR	8672972	Identifier	precision		8671348	0					
ANR	8672973	IfStatement	if ( use_background )		8671348	1					
ANR	8672974	Condition	use_background	10065:19:316891:316904	8671348	0	True				
ANR	8672975	Identifier	use_background		8671348	0					
ANR	8672976	CompoundStatement		473:15:17520:17520	8671348	1					
ANR	8672977	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , use_input ? ""+"" : "" "" )"	10067:18:316942:317000	8671348	0	True				
ANR	8672978	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , use_input ? ""+"" : "" "" )"		8671348	0		=			
ANR	8672979	Identifier	pos		8671348	0					
ANR	8672980	CallExpression	"safecat ( msg , sizeof msg , pos , use_input ? ""+"" : "" "" )"		8671348	1					
ANR	8672981	Callee	safecat		8671348	0					
ANR	8672982	Identifier	safecat		8671348	0					
ANR	8672983	ArgumentList	msg		8671348	1					
ANR	8672984	Argument	msg		8671348	0					
ANR	8672985	Identifier	msg		8671348	0					
ANR	8672986	Argument	sizeof msg		8671348	1					
ANR	8672987	SizeofExpression	sizeof msg		8671348	0					
ANR	8672988	Sizeof	sizeof		8671348	0					
ANR	8672989	Identifier	msg		8671348	1					
ANR	8672990	Argument	pos		8671348	2					
ANR	8672991	Identifier	pos		8671348	0					
ANR	8672992	Argument	"use_input ? ""+"" : "" """		8671348	3					
ANR	8672993	ConditionalExpression	"use_input ? ""+"" : "" """		8671348	0					
ANR	8672994	Condition	use_input		8671348	0					
ANR	8672995	Identifier	use_input		8671348	0					
ANR	8672996	PrimaryExpression	"""+"""		8671348	1					
ANR	8672997	PrimaryExpression	""" """		8671348	2					
ANR	8672998	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""(background)"" )"	10068:18:317020:317071	8671348	1	True				
ANR	8672999	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""(background)"" )"		8671348	0		=			
ANR	8673000	Identifier	pos		8671348	0					
ANR	8673001	CallExpression	"safecat ( msg , sizeof msg , pos , ""(background)"" )"		8671348	1					
ANR	8673002	Callee	safecat		8671348	0					
ANR	8673003	Identifier	safecat		8671348	0					
ANR	8673004	ArgumentList	msg		8671348	1					
ANR	8673005	Argument	msg		8671348	0					
ANR	8673006	Identifier	msg		8671348	0					
ANR	8673007	Argument	sizeof msg		8671348	1					
ANR	8673008	SizeofExpression	sizeof msg		8671348	0					
ANR	8673009	Sizeof	sizeof		8671348	0					
ANR	8673010	Identifier	msg		8671348	1					
ANR	8673011	Argument	pos		8671348	2					
ANR	8673012	Identifier	pos		8671348	0					
ANR	8673013	Argument	"""(background)"""		8671348	3					
ANR	8673014	PrimaryExpression	"""(background)"""		8671348	0					
ANR	8673015	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , background , precision )"	10069:18:317091:317150	8671348	2	True				
ANR	8673016	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , background , precision )"		8671348	0		=			
ANR	8673017	Identifier	pos		8671348	0					
ANR	8673018	CallExpression	"safecatd ( msg , sizeof msg , pos , background , precision )"		8671348	1					
ANR	8673019	Callee	safecatd		8671348	0					
ANR	8673020	Identifier	safecatd		8671348	0					
ANR	8673021	ArgumentList	msg		8671348	1					
ANR	8673022	Argument	msg		8671348	0					
ANR	8673023	Identifier	msg		8671348	0					
ANR	8673024	Argument	sizeof msg		8671348	1					
ANR	8673025	SizeofExpression	sizeof msg		8671348	0					
ANR	8673026	Sizeof	sizeof		8671348	0					
ANR	8673027	Identifier	msg		8671348	1					
ANR	8673028	Argument	pos		8671348	2					
ANR	8673029	Identifier	pos		8671348	0					
ANR	8673030	Argument	background		8671348	3					
ANR	8673031	Identifier	background		8671348	0					
ANR	8673032	Argument	precision		8671348	4					
ANR	8673033	Identifier	precision		8671348	0					
ANR	8673034	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""*"" )"	10070:18:317170:317210	8671348	3	True				
ANR	8673035	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""*"" )"		8671348	0		=			
ANR	8673036	Identifier	pos		8671348	0					
ANR	8673037	CallExpression	"safecat ( msg , sizeof msg , pos , ""*"" )"		8671348	1					
ANR	8673038	Callee	safecat		8671348	0					
ANR	8673039	Identifier	safecat		8671348	0					
ANR	8673040	ArgumentList	msg		8671348	1					
ANR	8673041	Argument	msg		8671348	0					
ANR	8673042	Identifier	msg		8671348	0					
ANR	8673043	Argument	sizeof msg		8671348	1					
ANR	8673044	SizeofExpression	sizeof msg		8671348	0					
ANR	8673045	Sizeof	sizeof		8671348	0					
ANR	8673046	Identifier	msg		8671348	1					
ANR	8673047	Argument	pos		8671348	2					
ANR	8673048	Identifier	pos		8671348	0					
ANR	8673049	Argument	"""*"""		8671348	3					
ANR	8673050	PrimaryExpression	"""*"""		8671348	0					
ANR	8673051	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , 1 - alpha , precision )"	10071:18:317230:317286	8671348	4	True				
ANR	8673052	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , 1 - alpha , precision )"		8671348	0		=			
ANR	8673053	Identifier	pos		8671348	0					
ANR	8673054	CallExpression	"safecatd ( msg , sizeof msg , pos , 1 - alpha , precision )"		8671348	1					
ANR	8673055	Callee	safecatd		8671348	0					
ANR	8673056	Identifier	safecatd		8671348	0					
ANR	8673057	ArgumentList	msg		8671348	1					
ANR	8673058	Argument	msg		8671348	0					
ANR	8673059	Identifier	msg		8671348	0					
ANR	8673060	Argument	sizeof msg		8671348	1					
ANR	8673061	SizeofExpression	sizeof msg		8671348	0					
ANR	8673062	Sizeof	sizeof		8671348	0					
ANR	8673063	Identifier	msg		8671348	1					
ANR	8673064	Argument	pos		8671348	2					
ANR	8673065	Identifier	pos		8671348	0					
ANR	8673066	Argument	1 - alpha		8671348	3					
ANR	8673067	AdditiveExpression	1 - alpha		8671348	0		-			
ANR	8673068	PrimaryExpression	1		8671348	0					
ANR	8673069	Identifier	alpha		8671348	1					
ANR	8673070	Argument	precision		8671348	4					
ANR	8673071	Identifier	precision		8671348	0					
ANR	8673072	IfStatement	if ( compose || alpha < 0 || pass != 0 )		8671348	13					
ANR	8673073	Condition	compose || alpha < 0 || pass != 0	10079:16:317531:317563	8671348	0	True				
ANR	8673074	OrExpression	compose || alpha < 0 || pass != 0		8671348	0		||			
ANR	8673075	Identifier	compose		8671348	0					
ANR	8673076	OrExpression	alpha < 0 || pass != 0		8671348	1		||			
ANR	8673077	RelationalExpression	alpha < 0		8671348	0		<			
ANR	8673078	Identifier	alpha		8671348	0					
ANR	8673079	PrimaryExpression	0		8671348	1					
ANR	8673080	EqualityExpression	pass != 0		8671348	1		!=			
ANR	8673081	Identifier	pass		8671348	0					
ANR	8673082	PrimaryExpression	0		8671348	1					
ANR	8673083	CompoundStatement		487:12:18176:18176	8671348	1					
ANR	8673084	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , pass != 0 ? "" =\\n\\t"" : "" = "" )"	10081:15:317595:317678	8671348	0	True				
ANR	8673085	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , pass != 0 ? "" =\\n\\t"" : "" = "" )"		8671348	0		=			
ANR	8673086	Identifier	pos		8671348	0					
ANR	8673087	CallExpression	"safecat ( msg , sizeof msg , pos , pass != 0 ? "" =\\n\\t"" : "" = "" )"		8671348	1					
ANR	8673088	Callee	safecat		8671348	0					
ANR	8673089	Identifier	safecat		8671348	0					
ANR	8673090	ArgumentList	msg		8671348	1					
ANR	8673091	Argument	msg		8671348	0					
ANR	8673092	Identifier	msg		8671348	0					
ANR	8673093	Argument	sizeof msg		8671348	1					
ANR	8673094	SizeofExpression	sizeof msg		8671348	0					
ANR	8673095	Sizeof	sizeof		8671348	0					
ANR	8673096	Identifier	msg		8671348	1					
ANR	8673097	Argument	pos		8671348	2					
ANR	8673098	Identifier	pos		8671348	0					
ANR	8673099	Argument	"pass != 0 ? "" =\\n\\t"" : "" = """		8671348	3					
ANR	8673100	ConditionalExpression	"pass != 0 ? "" =\\n\\t"" : "" = """		8671348	0					
ANR	8673101	Condition	pass != 0		8671348	0					
ANR	8673102	EqualityExpression	pass != 0		8671348	0		!=			
ANR	8673103	Identifier	pass		8671348	0					
ANR	8673104	PrimaryExpression	0		8671348	1					
ANR	8673105	PrimaryExpression	""" =\\n\\t"""		8671348	1					
ANR	8673106	PrimaryExpression	""" = """		8671348	2					
ANR	8673107	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , input_sample , precision )"	10083:15:317695:317756	8671348	1	True				
ANR	8673108	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , input_sample , precision )"		8671348	0		=			
ANR	8673109	Identifier	pos		8671348	0					
ANR	8673110	CallExpression	"safecatd ( msg , sizeof msg , pos , input_sample , precision )"		8671348	1					
ANR	8673111	Callee	safecatd		8671348	0					
ANR	8673112	Identifier	safecatd		8671348	0					
ANR	8673113	ArgumentList	msg		8671348	1					
ANR	8673114	Argument	msg		8671348	0					
ANR	8673115	Identifier	msg		8671348	0					
ANR	8673116	Argument	sizeof msg		8671348	1					
ANR	8673117	SizeofExpression	sizeof msg		8671348	0					
ANR	8673118	Sizeof	sizeof		8671348	0					
ANR	8673119	Identifier	msg		8671348	1					
ANR	8673120	Argument	pos		8671348	2					
ANR	8673121	Identifier	pos		8671348	0					
ANR	8673122	Argument	input_sample		8671348	3					
ANR	8673123	Identifier	input_sample		8671348	0					
ANR	8673124	Argument	precision		8671348	4					
ANR	8673125	Identifier	precision		8671348	0					
ANR	8673126	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" (libpng: "" )"	10084:15:317773:317822	8671348	2	True				
ANR	8673127	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" (libpng: "" )"		8671348	0		=			
ANR	8673128	Identifier	pos		8671348	0					
ANR	8673129	CallExpression	"safecat ( msg , sizeof msg , pos , "" (libpng: "" )"		8671348	1					
ANR	8673130	Callee	safecat		8671348	0					
ANR	8673131	Identifier	safecat		8671348	0					
ANR	8673132	ArgumentList	msg		8671348	1					
ANR	8673133	Argument	msg		8671348	0					
ANR	8673134	Identifier	msg		8671348	0					
ANR	8673135	Argument	sizeof msg		8671348	1					
ANR	8673136	SizeofExpression	sizeof msg		8671348	0					
ANR	8673137	Sizeof	sizeof		8671348	0					
ANR	8673138	Identifier	msg		8671348	1					
ANR	8673139	Argument	pos		8671348	2					
ANR	8673140	Identifier	pos		8671348	0					
ANR	8673141	Argument	""" (libpng: """		8671348	3					
ANR	8673142	PrimaryExpression	""" (libpng: """		8671348	0					
ANR	8673143	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , output , precision )"	10085:15:317839:317894	8671348	3	True				
ANR	8673144	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , output , precision )"		8671348	0		=			
ANR	8673145	Identifier	pos		8671348	0					
ANR	8673146	CallExpression	"safecatd ( msg , sizeof msg , pos , output , precision )"		8671348	1					
ANR	8673147	Callee	safecatd		8671348	0					
ANR	8673148	Identifier	safecatd		8671348	0					
ANR	8673149	ArgumentList	msg		8671348	1					
ANR	8673150	Argument	msg		8671348	0					
ANR	8673151	Identifier	msg		8671348	0					
ANR	8673152	Argument	sizeof msg		8671348	1					
ANR	8673153	SizeofExpression	sizeof msg		8671348	0					
ANR	8673154	Sizeof	sizeof		8671348	0					
ANR	8673155	Identifier	msg		8671348	1					
ANR	8673156	Argument	pos		8671348	2					
ANR	8673157	Identifier	pos		8671348	0					
ANR	8673158	Argument	output		8671348	3					
ANR	8673159	Identifier	output		8671348	0					
ANR	8673160	Argument	precision		8671348	4					
ANR	8673161	Identifier	precision		8671348	0					
ANR	8673162	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "")"" )"	10086:15:317911:317951	8671348	4	True				
ANR	8673163	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "")"" )"		8671348	0		=			
ANR	8673164	Identifier	pos		8671348	0					
ANR	8673165	CallExpression	"safecat ( msg , sizeof msg , pos , "")"" )"		8671348	1					
ANR	8673166	Callee	safecat		8671348	0					
ANR	8673167	Identifier	safecat		8671348	0					
ANR	8673168	ArgumentList	msg		8671348	1					
ANR	8673169	Argument	msg		8671348	0					
ANR	8673170	Identifier	msg		8671348	0					
ANR	8673171	Argument	sizeof msg		8671348	1					
ANR	8673172	SizeofExpression	sizeof msg		8671348	0					
ANR	8673173	Sizeof	sizeof		8671348	0					
ANR	8673174	Identifier	msg		8671348	1					
ANR	8673175	Argument	pos		8671348	2					
ANR	8673176	Identifier	pos		8671348	0					
ANR	8673177	Argument	""")"""		8671348	3					
ANR	8673178	PrimaryExpression	""")"""		8671348	0					
ANR	8673179	IfStatement	if ( output_is_encoded )		8671348	5					
ANR	8673180	Condition	output_is_encoded	10089:19:318044:318060	8671348	0	True				
ANR	8673181	Identifier	output_is_encoded		8671348	0					
ANR	8673182	CompoundStatement		497:15:18676:18676	8671348	1					
ANR	8673183	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" ^"" )"	10091:18:318098:318139	8671348	0	True				
ANR	8673184	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" ^"" )"		8671348	0		=			
ANR	8673185	Identifier	pos		8671348	0					
ANR	8673186	CallExpression	"safecat ( msg , sizeof msg , pos , "" ^"" )"		8671348	1					
ANR	8673187	Callee	safecat		8671348	0					
ANR	8673188	Identifier	safecat		8671348	0					
ANR	8673189	ArgumentList	msg		8671348	1					
ANR	8673190	Argument	msg		8671348	0					
ANR	8673191	Identifier	msg		8671348	0					
ANR	8673192	Argument	sizeof msg		8671348	1					
ANR	8673193	SizeofExpression	sizeof msg		8671348	0					
ANR	8673194	Sizeof	sizeof		8671348	0					
ANR	8673195	Identifier	msg		8671348	1					
ANR	8673196	Argument	pos		8671348	2					
ANR	8673197	Identifier	pos		8671348	0					
ANR	8673198	Argument	""" ^"""		8671348	3					
ANR	8673199	PrimaryExpression	""" ^"""		8671348	0					
ANR	8673200	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , vi -> screen_inverse , 2 )"	10092:18:318159:318218	8671348	1	True				
ANR	8673201	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , vi -> screen_inverse , 2 )"		8671348	0		=			
ANR	8673202	Identifier	pos		8671348	0					
ANR	8673203	CallExpression	"safecatd ( msg , sizeof msg , pos , vi -> screen_inverse , 2 )"		8671348	1					
ANR	8673204	Callee	safecatd		8671348	0					
ANR	8673205	Identifier	safecatd		8671348	0					
ANR	8673206	ArgumentList	msg		8671348	1					
ANR	8673207	Argument	msg		8671348	0					
ANR	8673208	Identifier	msg		8671348	0					
ANR	8673209	Argument	sizeof msg		8671348	1					
ANR	8673210	SizeofExpression	sizeof msg		8671348	0					
ANR	8673211	Sizeof	sizeof		8671348	0					
ANR	8673212	Identifier	msg		8671348	1					
ANR	8673213	Argument	pos		8671348	2					
ANR	8673214	Identifier	pos		8671348	0					
ANR	8673215	Argument	vi -> screen_inverse		8671348	3					
ANR	8673216	PtrMemberAccess	vi -> screen_inverse		8671348	0					
ANR	8673217	Identifier	vi		8671348	0					
ANR	8673218	Identifier	screen_inverse		8671348	1					
ANR	8673219	Argument	2		8671348	4					
ANR	8673220	PrimaryExpression	2		8671348	0					
ANR	8673221	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""(to screen) ="" )"	10093:18:318238:318290	8671348	2	True				
ANR	8673222	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""(to screen) ="" )"		8671348	0		=			
ANR	8673223	Identifier	pos		8671348	0					
ANR	8673224	CallExpression	"safecat ( msg , sizeof msg , pos , ""(to screen) ="" )"		8671348	1					
ANR	8673225	Callee	safecat		8671348	0					
ANR	8673226	Identifier	safecat		8671348	0					
ANR	8673227	ArgumentList	msg		8671348	1					
ANR	8673228	Argument	msg		8671348	0					
ANR	8673229	Identifier	msg		8671348	0					
ANR	8673230	Argument	sizeof msg		8671348	1					
ANR	8673231	SizeofExpression	sizeof msg		8671348	0					
ANR	8673232	Sizeof	sizeof		8671348	0					
ANR	8673233	Identifier	msg		8671348	1					
ANR	8673234	Argument	pos		8671348	2					
ANR	8673235	Identifier	pos		8671348	0					
ANR	8673236	Argument	"""(to screen) ="""		8671348	3					
ANR	8673237	PrimaryExpression	"""(to screen) ="""		8671348	0					
ANR	8673238	ElseStatement	else		8671348	0					
ANR	8673239	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" [screen is linear] ="" )"	10097:18:318348:318408	8671348	0	True				
ANR	8673240	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" [screen is linear] ="" )"		8671348	0		=			
ANR	8673241	Identifier	pos		8671348	0					
ANR	8673242	CallExpression	"safecat ( msg , sizeof msg , pos , "" [screen is linear] ="" )"		8671348	1					
ANR	8673243	Callee	safecat		8671348	0					
ANR	8673244	Identifier	safecat		8671348	0					
ANR	8673245	ArgumentList	msg		8671348	1					
ANR	8673246	Argument	msg		8671348	0					
ANR	8673247	Identifier	msg		8671348	0					
ANR	8673248	Argument	sizeof msg		8671348	1					
ANR	8673249	SizeofExpression	sizeof msg		8671348	0					
ANR	8673250	Sizeof	sizeof		8671348	0					
ANR	8673251	Identifier	msg		8671348	1					
ANR	8673252	Argument	pos		8671348	2					
ANR	8673253	Identifier	pos		8671348	0					
ANR	8673254	Argument	""" [screen is linear] ="""		8671348	3					
ANR	8673255	PrimaryExpression	""" [screen is linear] ="""		8671348	0					
ANR	8673256	IfStatement	if ( ( ! compose && alpha >= 0 ) || pass != 0 )		8671348	14					
ANR	8673257	Condition	( ! compose && alpha >= 0 ) || pass != 0	10100:16:318441:318477	8671348	0	True				
ANR	8673258	OrExpression	( ! compose && alpha >= 0 ) || pass != 0		8671348	0		||			
ANR	8673259	AndExpression	! compose && alpha >= 0		8671348	0		&&			
ANR	8673260	UnaryOperationExpression	! compose		8671348	0					
ANR	8673261	UnaryOperator	!		8671348	0					
ANR	8673262	Identifier	compose		8671348	1					
ANR	8673263	RelationalExpression	alpha >= 0		8671348	1		>=			
ANR	8673264	Identifier	alpha		8671348	0					
ANR	8673265	PrimaryExpression	0		8671348	1					
ANR	8673266	EqualityExpression	pass != 0		8671348	1		!=			
ANR	8673267	Identifier	pass		8671348	0					
ANR	8673268	PrimaryExpression	0		8671348	1					
ANR	8673269	CompoundStatement		508:12:19090:19090	8671348	1					
ANR	8673270	IfStatement	if ( pass != 0 )		8671348	0					
ANR	8673271	Condition	pass != 0	10102:19:318513:318521	8671348	0	True				
ANR	8673272	EqualityExpression	pass != 0		8671348	0		!=			
ANR	8673273	Identifier	pass		8671348	0					
ANR	8673274	PrimaryExpression	0		8671348	1					
ANR	8673275	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""\\n\\t[overall:"" )"	10103:18:318556:318608	8671348	1	True				
ANR	8673276	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""\\n\\t[overall:"" )"		8671348	0		=			
ANR	8673277	Identifier	pos		8671348	0					
ANR	8673278	CallExpression	"safecat ( msg , sizeof msg , pos , ""\\n\\t[overall:"" )"		8671348	1					
ANR	8673279	Callee	safecat		8671348	0					
ANR	8673280	Identifier	safecat		8671348	0					
ANR	8673281	ArgumentList	msg		8671348	1					
ANR	8673282	Argument	msg		8671348	0					
ANR	8673283	Identifier	msg		8671348	0					
ANR	8673284	Argument	sizeof msg		8671348	1					
ANR	8673285	SizeofExpression	sizeof msg		8671348	0					
ANR	8673286	Sizeof	sizeof		8671348	0					
ANR	8673287	Identifier	msg		8671348	1					
ANR	8673288	Argument	pos		8671348	2					
ANR	8673289	Identifier	pos		8671348	0					
ANR	8673290	Argument	"""\\n\\t[overall:"""		8671348	3					
ANR	8673291	PrimaryExpression	"""\\n\\t[overall:"""		8671348	0					
ANR	8673292	IfStatement	if ( vi -> gamma_correction > 0 )		8671348	1					
ANR	8673293	Condition	vi -> gamma_correction > 0	10110:19:318924:318947	8671348	0	True				
ANR	8673294	RelationalExpression	vi -> gamma_correction > 0		8671348	0		>			
ANR	8673295	PtrMemberAccess	vi -> gamma_correction		8671348	0					
ANR	8673296	Identifier	vi		8671348	0					
ANR	8673297	Identifier	gamma_correction		8671348	1					
ANR	8673298	PrimaryExpression	0		8671348	1					
ANR	8673299	CompoundStatement		518:15:19563:19563	8671348	1					
ANR	8673300	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" ^"" )"	10112:18:318985:319026	8671348	0	True				
ANR	8673301	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" ^"" )"		8671348	0		=			
ANR	8673302	Identifier	pos		8671348	0					
ANR	8673303	CallExpression	"safecat ( msg , sizeof msg , pos , "" ^"" )"		8671348	1					
ANR	8673304	Callee	safecat		8671348	0					
ANR	8673305	Identifier	safecat		8671348	0					
ANR	8673306	ArgumentList	msg		8671348	1					
ANR	8673307	Argument	msg		8671348	0					
ANR	8673308	Identifier	msg		8671348	0					
ANR	8673309	Argument	sizeof msg		8671348	1					
ANR	8673310	SizeofExpression	sizeof msg		8671348	0					
ANR	8673311	Sizeof	sizeof		8671348	0					
ANR	8673312	Identifier	msg		8671348	1					
ANR	8673313	Argument	pos		8671348	2					
ANR	8673314	Identifier	pos		8671348	0					
ANR	8673315	Argument	""" ^"""		8671348	3					
ANR	8673316	PrimaryExpression	""" ^"""		8671348	0					
ANR	8673317	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , vi -> gamma_correction , 2 )"	10113:18:319046:319107	8671348	1	True				
ANR	8673318	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , vi -> gamma_correction , 2 )"		8671348	0		=			
ANR	8673319	Identifier	pos		8671348	0					
ANR	8673320	CallExpression	"safecatd ( msg , sizeof msg , pos , vi -> gamma_correction , 2 )"		8671348	1					
ANR	8673321	Callee	safecatd		8671348	0					
ANR	8673322	Identifier	safecatd		8671348	0					
ANR	8673323	ArgumentList	msg		8671348	1					
ANR	8673324	Argument	msg		8671348	0					
ANR	8673325	Identifier	msg		8671348	0					
ANR	8673326	Argument	sizeof msg		8671348	1					
ANR	8673327	SizeofExpression	sizeof msg		8671348	0					
ANR	8673328	Sizeof	sizeof		8671348	0					
ANR	8673329	Identifier	msg		8671348	1					
ANR	8673330	Argument	pos		8671348	2					
ANR	8673331	Identifier	pos		8671348	0					
ANR	8673332	Argument	vi -> gamma_correction		8671348	3					
ANR	8673333	PtrMemberAccess	vi -> gamma_correction		8671348	0					
ANR	8673334	Identifier	vi		8671348	0					
ANR	8673335	Identifier	gamma_correction		8671348	1					
ANR	8673336	Argument	2		8671348	4					
ANR	8673337	PrimaryExpression	2		8671348	0					
ANR	8673338	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""(gamma correction) ="" )"	10114:18:319127:319186	8671348	2	True				
ANR	8673339	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""(gamma correction) ="" )"		8671348	0		=			
ANR	8673340	Identifier	pos		8671348	0					
ANR	8673341	CallExpression	"safecat ( msg , sizeof msg , pos , ""(gamma correction) ="" )"		8671348	1					
ANR	8673342	Callee	safecat		8671348	0					
ANR	8673343	Identifier	safecat		8671348	0					
ANR	8673344	ArgumentList	msg		8671348	1					
ANR	8673345	Argument	msg		8671348	0					
ANR	8673346	Identifier	msg		8671348	0					
ANR	8673347	Argument	sizeof msg		8671348	1					
ANR	8673348	SizeofExpression	sizeof msg		8671348	0					
ANR	8673349	Sizeof	sizeof		8671348	0					
ANR	8673350	Identifier	msg		8671348	1					
ANR	8673351	Argument	pos		8671348	2					
ANR	8673352	Identifier	pos		8671348	0					
ANR	8673353	Argument	"""(gamma correction) ="""		8671348	3					
ANR	8673354	PrimaryExpression	"""(gamma correction) ="""		8671348	0					
ANR	8673355	ElseStatement	else		8671348	0					
ANR	8673356	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" [no gamma correction] ="" )"	10118:18:319244:319328	8671348	0	True				
ANR	8673357	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" [no gamma correction] ="" )"		8671348	0		=			
ANR	8673358	Identifier	pos		8671348	0					
ANR	8673359	CallExpression	"safecat ( msg , sizeof msg , pos , "" [no gamma correction] ="" )"		8671348	1					
ANR	8673360	Callee	safecat		8671348	0					
ANR	8673361	Identifier	safecat		8671348	0					
ANR	8673362	ArgumentList	msg		8671348	1					
ANR	8673363	Argument	msg		8671348	0					
ANR	8673364	Identifier	msg		8671348	0					
ANR	8673365	Argument	sizeof msg		8671348	1					
ANR	8673366	SizeofExpression	sizeof msg		8671348	0					
ANR	8673367	Sizeof	sizeof		8671348	0					
ANR	8673368	Identifier	msg		8671348	1					
ANR	8673369	Argument	pos		8671348	2					
ANR	8673370	Identifier	pos		8671348	0					
ANR	8673371	Argument	""" [no gamma correction] ="""		8671348	3					
ANR	8673372	PrimaryExpression	""" [no gamma correction] ="""		8671348	0					
ANR	8673373	IfStatement	if ( pass != 0 )		8671348	2					
ANR	8673374	Condition	pass != 0	10121:19:319350:319358	8671348	0	True				
ANR	8673375	EqualityExpression	pass != 0		8671348	0		!=			
ANR	8673376	Identifier	pass		8671348	0					
ANR	8673377	PrimaryExpression	0		8671348	1					
ANR	8673378	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""]"" )"	10122:18:319379:319419	8671348	1	True				
ANR	8673379	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""]"" )"		8671348	0		=			
ANR	8673380	Identifier	pos		8671348	0					
ANR	8673381	CallExpression	"safecat ( msg , sizeof msg , pos , ""]"" )"		8671348	1					
ANR	8673382	Callee	safecat		8671348	0					
ANR	8673383	Identifier	safecat		8671348	0					
ANR	8673384	ArgumentList	msg		8671348	1					
ANR	8673385	Argument	msg		8671348	0					
ANR	8673386	Identifier	msg		8671348	0					
ANR	8673387	Argument	sizeof msg		8671348	1					
ANR	8673388	SizeofExpression	sizeof msg		8671348	0					
ANR	8673389	Sizeof	sizeof		8671348	0					
ANR	8673390	Identifier	msg		8671348	1					
ANR	8673391	Argument	pos		8671348	2					
ANR	8673392	Identifier	pos		8671348	0					
ANR	8673393	Argument	"""]"""		8671348	3					
ANR	8673394	PrimaryExpression	"""]"""		8671348	0					
ANR	8673395	ElseStatement	else		8671348	0					
ANR	8673396	ExpressionStatement	"store_verbose ( & vi -> dp -> pm -> this , vi -> pp , pass , msg )"	10150:15:320532:320583	8671348	0	True				
ANR	8673397	CallExpression	"store_verbose ( & vi -> dp -> pm -> this , vi -> pp , pass , msg )"		8671348	0					
ANR	8673398	Callee	store_verbose		8671348	0					
ANR	8673399	Identifier	store_verbose		8671348	0					
ANR	8673400	ArgumentList	& vi -> dp -> pm -> this		8671348	1					
ANR	8673401	Argument	& vi -> dp -> pm -> this		8671348	0					
ANR	8673402	UnaryOperationExpression	& vi -> dp -> pm -> this		8671348	0					
ANR	8673403	UnaryOperator	&		8671348	0					
ANR	8673404	PtrMemberAccess	vi -> dp -> pm -> this		8671348	1					
ANR	8673405	PtrMemberAccess	vi -> dp -> pm		8671348	0					
ANR	8673406	PtrMemberAccess	vi -> dp		8671348	0					
ANR	8673407	Identifier	vi		8671348	0					
ANR	8673408	Identifier	dp		8671348	1					
ANR	8673409	Identifier	pm		8671348	1					
ANR	8673410	Identifier	this		8671348	1					
ANR	8673411	Argument	vi -> pp		8671348	1					
ANR	8673412	PtrMemberAccess	vi -> pp		8671348	0					
ANR	8673413	Identifier	vi		8671348	0					
ANR	8673414	Identifier	pp		8671348	1					
ANR	8673415	Argument	pass		8671348	2					
ANR	8673416	Identifier	pass		8671348	0					
ANR	8673417	Argument	msg		8671348	3					
ANR	8673418	Identifier	msg		8671348	0					
ANR	8673419	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , pass != 0 ? ""\\n\\t"" : "" "" )"	10128:12:319570:319631	8671348	15	True				
ANR	8673420	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , pass != 0 ? ""\\n\\t"" : "" "" )"		8671348	0		=			
ANR	8673421	Identifier	pos		8671348	0					
ANR	8673422	CallExpression	"safecat ( msg , sizeof msg , pos , pass != 0 ? ""\\n\\t"" : "" "" )"		8671348	1					
ANR	8673423	Callee	safecat		8671348	0					
ANR	8673424	Identifier	safecat		8671348	0					
ANR	8673425	ArgumentList	msg		8671348	1					
ANR	8673426	Argument	msg		8671348	0					
ANR	8673427	Identifier	msg		8671348	0					
ANR	8673428	Argument	sizeof msg		8671348	1					
ANR	8673429	SizeofExpression	sizeof msg		8671348	0					
ANR	8673430	Sizeof	sizeof		8671348	0					
ANR	8673431	Identifier	msg		8671348	1					
ANR	8673432	Argument	pos		8671348	2					
ANR	8673433	Identifier	pos		8671348	0					
ANR	8673434	Argument	"pass != 0 ? ""\\n\\t"" : "" """		8671348	3					
ANR	8673435	ConditionalExpression	"pass != 0 ? ""\\n\\t"" : "" """		8671348	0					
ANR	8673436	Condition	pass != 0		8671348	0					
ANR	8673437	EqualityExpression	pass != 0		8671348	0		!=			
ANR	8673438	Identifier	pass		8671348	0					
ANR	8673439	PrimaryExpression	0		8671348	1					
ANR	8673440	PrimaryExpression	"""\\n\\t"""		8671348	1					
ANR	8673441	PrimaryExpression	""" """		8671348	2					
ANR	8673442	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , is_lo , 1 )"	10129:12:319645:319691	8671348	16	True				
ANR	8673443	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , is_lo , 1 )"		8671348	0		=			
ANR	8673444	Identifier	pos		8671348	0					
ANR	8673445	CallExpression	"safecatd ( msg , sizeof msg , pos , is_lo , 1 )"		8671348	1					
ANR	8673446	Callee	safecatd		8671348	0					
ANR	8673447	Identifier	safecatd		8671348	0					
ANR	8673448	ArgumentList	msg		8671348	1					
ANR	8673449	Argument	msg		8671348	0					
ANR	8673450	Identifier	msg		8671348	0					
ANR	8673451	Argument	sizeof msg		8671348	1					
ANR	8673452	SizeofExpression	sizeof msg		8671348	0					
ANR	8673453	Sizeof	sizeof		8671348	0					
ANR	8673454	Identifier	msg		8671348	1					
ANR	8673455	Argument	pos		8671348	2					
ANR	8673456	Identifier	pos		8671348	0					
ANR	8673457	Argument	is_lo		8671348	3					
ANR	8673458	Identifier	is_lo		8671348	0					
ANR	8673459	Argument	1		8671348	4					
ANR	8673460	PrimaryExpression	1		8671348	0					
ANR	8673461	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" < "" )"	10130:12:319705:319747	8671348	17	True				
ANR	8673462	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" < "" )"		8671348	0		=			
ANR	8673463	Identifier	pos		8671348	0					
ANR	8673464	CallExpression	"safecat ( msg , sizeof msg , pos , "" < "" )"		8671348	1					
ANR	8673465	Callee	safecat		8671348	0					
ANR	8673466	Identifier	safecat		8671348	0					
ANR	8673467	ArgumentList	msg		8671348	1					
ANR	8673468	Argument	msg		8671348	0					
ANR	8673469	Identifier	msg		8671348	0					
ANR	8673470	Argument	sizeof msg		8671348	1					
ANR	8673471	SizeofExpression	sizeof msg		8671348	0					
ANR	8673472	Sizeof	sizeof		8671348	0					
ANR	8673473	Identifier	msg		8671348	1					
ANR	8673474	Argument	pos		8671348	2					
ANR	8673475	Identifier	pos		8671348	0					
ANR	8673476	Argument	""" < """		8671348	3					
ANR	8673477	PrimaryExpression	""" < """		8671348	0					
ANR	8673478	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , encoded_sample , 1 )"	10131:12:319761:319816	8671348	18	True				
ANR	8673479	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , encoded_sample , 1 )"		8671348	0		=			
ANR	8673480	Identifier	pos		8671348	0					
ANR	8673481	CallExpression	"safecatd ( msg , sizeof msg , pos , encoded_sample , 1 )"		8671348	1					
ANR	8673482	Callee	safecatd		8671348	0					
ANR	8673483	Identifier	safecatd		8671348	0					
ANR	8673484	ArgumentList	msg		8671348	1					
ANR	8673485	Argument	msg		8671348	0					
ANR	8673486	Identifier	msg		8671348	0					
ANR	8673487	Argument	sizeof msg		8671348	1					
ANR	8673488	SizeofExpression	sizeof msg		8671348	0					
ANR	8673489	Sizeof	sizeof		8671348	0					
ANR	8673490	Identifier	msg		8671348	1					
ANR	8673491	Argument	pos		8671348	2					
ANR	8673492	Identifier	pos		8671348	0					
ANR	8673493	Argument	encoded_sample		8671348	3					
ANR	8673494	Identifier	encoded_sample		8671348	0					
ANR	8673495	Argument	1		8671348	4					
ANR	8673496	PrimaryExpression	1		8671348	0					
ANR	8673497	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" (libpng: "" )"	10132:12:319830:319879	8671348	19	True				
ANR	8673498	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" (libpng: "" )"		8671348	0		=			
ANR	8673499	Identifier	pos		8671348	0					
ANR	8673500	CallExpression	"safecat ( msg , sizeof msg , pos , "" (libpng: "" )"		8671348	1					
ANR	8673501	Callee	safecat		8671348	0					
ANR	8673502	Identifier	safecat		8671348	0					
ANR	8673503	ArgumentList	msg		8671348	1					
ANR	8673504	Argument	msg		8671348	0					
ANR	8673505	Identifier	msg		8671348	0					
ANR	8673506	Argument	sizeof msg		8671348	1					
ANR	8673507	SizeofExpression	sizeof msg		8671348	0					
ANR	8673508	Sizeof	sizeof		8671348	0					
ANR	8673509	Identifier	msg		8671348	1					
ANR	8673510	Argument	pos		8671348	2					
ANR	8673511	Identifier	pos		8671348	0					
ANR	8673512	Argument	""" (libpng: """		8671348	3					
ANR	8673513	PrimaryExpression	""" (libpng: """		8671348	0					
ANR	8673514	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , od )"	10133:12:319893:319933	8671348	20	True				
ANR	8673515	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , od )"		8671348	0		=			
ANR	8673516	Identifier	pos		8671348	0					
ANR	8673517	CallExpression	"safecatn ( msg , sizeof msg , pos , od )"		8671348	1					
ANR	8673518	Callee	safecatn		8671348	0					
ANR	8673519	Identifier	safecatn		8671348	0					
ANR	8673520	ArgumentList	msg		8671348	1					
ANR	8673521	Argument	msg		8671348	0					
ANR	8673522	Identifier	msg		8671348	0					
ANR	8673523	Argument	sizeof msg		8671348	1					
ANR	8673524	SizeofExpression	sizeof msg		8671348	0					
ANR	8673525	Sizeof	sizeof		8671348	0					
ANR	8673526	Identifier	msg		8671348	1					
ANR	8673527	Argument	pos		8671348	2					
ANR	8673528	Identifier	pos		8671348	0					
ANR	8673529	Argument	od		8671348	3					
ANR	8673530	Identifier	od		8671348	0					
ANR	8673531	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "")"" )"	10134:12:319947:319987	8671348	21	True				
ANR	8673532	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "")"" )"		8671348	0		=			
ANR	8673533	Identifier	pos		8671348	0					
ANR	8673534	CallExpression	"safecat ( msg , sizeof msg , pos , "")"" )"		8671348	1					
ANR	8673535	Callee	safecat		8671348	0					
ANR	8673536	Identifier	safecat		8671348	0					
ANR	8673537	ArgumentList	msg		8671348	1					
ANR	8673538	Argument	msg		8671348	0					
ANR	8673539	Identifier	msg		8671348	0					
ANR	8673540	Argument	sizeof msg		8671348	1					
ANR	8673541	SizeofExpression	sizeof msg		8671348	0					
ANR	8673542	Sizeof	sizeof		8671348	0					
ANR	8673543	Identifier	msg		8671348	1					
ANR	8673544	Argument	pos		8671348	2					
ANR	8673545	Identifier	pos		8671348	0					
ANR	8673546	Argument	""")"""		8671348	3					
ANR	8673547	PrimaryExpression	""")"""		8671348	0					
ANR	8673548	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""/"" )"	10135:12:320001:320041	8671348	22	True				
ANR	8673549	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""/"" )"		8671348	0		=			
ANR	8673550	Identifier	pos		8671348	0					
ANR	8673551	CallExpression	"safecat ( msg , sizeof msg , pos , ""/"" )"		8671348	1					
ANR	8673552	Callee	safecat		8671348	0					
ANR	8673553	Identifier	safecat		8671348	0					
ANR	8673554	ArgumentList	msg		8671348	1					
ANR	8673555	Argument	msg		8671348	0					
ANR	8673556	Identifier	msg		8671348	0					
ANR	8673557	Argument	sizeof msg		8671348	1					
ANR	8673558	SizeofExpression	sizeof msg		8671348	0					
ANR	8673559	Sizeof	sizeof		8671348	0					
ANR	8673560	Identifier	msg		8671348	1					
ANR	8673561	Argument	pos		8671348	2					
ANR	8673562	Identifier	pos		8671348	0					
ANR	8673563	Argument	"""/"""		8671348	3					
ANR	8673564	PrimaryExpression	"""/"""		8671348	0					
ANR	8673565	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , outmax )"	10136:12:320055:320099	8671348	23	True				
ANR	8673566	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , outmax )"		8671348	0		=			
ANR	8673567	Identifier	pos		8671348	0					
ANR	8673568	CallExpression	"safecatn ( msg , sizeof msg , pos , outmax )"		8671348	1					
ANR	8673569	Callee	safecatn		8671348	0					
ANR	8673570	Identifier	safecatn		8671348	0					
ANR	8673571	ArgumentList	msg		8671348	1					
ANR	8673572	Argument	msg		8671348	0					
ANR	8673573	Identifier	msg		8671348	0					
ANR	8673574	Argument	sizeof msg		8671348	1					
ANR	8673575	SizeofExpression	sizeof msg		8671348	0					
ANR	8673576	Sizeof	sizeof		8671348	0					
ANR	8673577	Identifier	msg		8671348	1					
ANR	8673578	Argument	pos		8671348	2					
ANR	8673579	Identifier	pos		8671348	0					
ANR	8673580	Argument	outmax		8671348	3					
ANR	8673581	Identifier	outmax		8671348	0					
ANR	8673582	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , "" < "" )"	10137:12:320113:320155	8671348	24	True				
ANR	8673583	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , "" < "" )"		8671348	0		=			
ANR	8673584	Identifier	pos		8671348	0					
ANR	8673585	CallExpression	"safecat ( msg , sizeof msg , pos , "" < "" )"		8671348	1					
ANR	8673586	Callee	safecat		8671348	0					
ANR	8673587	Identifier	safecat		8671348	0					
ANR	8673588	ArgumentList	msg		8671348	1					
ANR	8673589	Argument	msg		8671348	0					
ANR	8673590	Identifier	msg		8671348	0					
ANR	8673591	Argument	sizeof msg		8671348	1					
ANR	8673592	SizeofExpression	sizeof msg		8671348	0					
ANR	8673593	Sizeof	sizeof		8671348	0					
ANR	8673594	Identifier	msg		8671348	1					
ANR	8673595	Argument	pos		8671348	2					
ANR	8673596	Identifier	pos		8671348	0					
ANR	8673597	Argument	""" < """		8671348	3					
ANR	8673598	PrimaryExpression	""" < """		8671348	0					
ANR	8673599	ExpressionStatement	"pos = safecatd ( msg , sizeof msg , pos , is_hi , 1 )"	10138:12:320169:320215	8671348	25	True				
ANR	8673600	AssignmentExpression	"pos = safecatd ( msg , sizeof msg , pos , is_hi , 1 )"		8671348	0		=			
ANR	8673601	Identifier	pos		8671348	0					
ANR	8673602	CallExpression	"safecatd ( msg , sizeof msg , pos , is_hi , 1 )"		8671348	1					
ANR	8673603	Callee	safecatd		8671348	0					
ANR	8673604	Identifier	safecatd		8671348	0					
ANR	8673605	ArgumentList	msg		8671348	1					
ANR	8673606	Argument	msg		8671348	0					
ANR	8673607	Identifier	msg		8671348	0					
ANR	8673608	Argument	sizeof msg		8671348	1					
ANR	8673609	SizeofExpression	sizeof msg		8671348	0					
ANR	8673610	Sizeof	sizeof		8671348	0					
ANR	8673611	Identifier	msg		8671348	1					
ANR	8673612	Argument	pos		8671348	2					
ANR	8673613	Identifier	pos		8671348	0					
ANR	8673614	Argument	is_hi		8671348	3					
ANR	8673615	Identifier	is_hi		8671348	0					
ANR	8673616	Argument	1		8671348	4					
ANR	8673617	PrimaryExpression	1		8671348	0					
ANR	8673618	IfStatement	if ( pass == 0 )		8671348	26					
ANR	8673619	Condition	pass == 0	10140:16:320234:320242	8671348	0	True				
ANR	8673620	EqualityExpression	pass == 0		8671348	0		==			
ANR	8673621	Identifier	pass		8671348	0					
ANR	8673622	PrimaryExpression	0		8671348	1					
ANR	8673623	CompoundStatement		549:15:20898:20969	8671348	1					
ANR	8673624	IdentifierDeclStatement	"ifdef PNG_WARNINGS_SUPPORTED png_warning ( vi -> pp , msg ) ;"	10142:15:320300:320371	8671348	0	True				
ANR	8673625	IdentifierDecl	"png_warning ( vi -> pp , msg )"		8671348	0					
ANR	8673626	IdentifierDeclType	ifdef PNG_WARNINGS_SUPPORTED		8671348	0					
ANR	8673627	Identifier	png_warning		8671348	1					
ANR	8673628	Expression	"vi -> pp , msg"		8671348	2					
ANR	8673629	PtrMemberAccess	vi -> pp		8671348	0					
ANR	8673630	Identifier	vi		8671348	0					
ANR	8673631	Identifier	pp		8671348	1					
ANR	8673632	Identifier	msg		8671348	1					
ANR	8673633	Statement	endif	10146:15:320454:320458	8671348	1	True				
ANR	8673634	ElseStatement	else		8671348	0					
ANR	8673635	ExpressionStatement	"store_warning ( vi -> pp , msg )"	10145:18:320411:320437	8671348	0	True				
ANR	8673636	CallExpression	"store_warning ( vi -> pp , msg )"		8671348	0					
ANR	8673637	Callee	store_warning		8671348	0					
ANR	8673638	Identifier	store_warning		8671348	0					
ANR	8673639	ArgumentList	vi -> pp		8671348	1					
ANR	8673640	Argument	vi -> pp		8671348	0					
ANR	8673641	PtrMemberAccess	vi -> pp		8671348	0					
ANR	8673642	Identifier	vi		8671348	0					
ANR	8673643	Identifier	pp		8671348	1					
ANR	8673644	Argument	msg		8671348	1					
ANR	8673645	Identifier	msg		8671348	0					
ANR	8673646	ReturnStatement	return i ;	10155:3:320613:320621	8671348	36	True				
ANR	8673647	Identifier	i		8671348	0					
ANR	8673648	ReturnType	static double		8671348	1					
ANR	8673649	Identifier	gamma_component_validate		8671348	2					
ANR	8673650	ParameterList	"const char * name , const validate_info * vi , const unsigned int id , const unsigned int od , const double alpha , const double background"		8671348	3					
ANR	8673651	Parameter	const char * name	9590:25:299184:299199	8671348	0	True				
ANR	8673652	ParameterType	const char *		8671348	0					
ANR	8673653	Identifier	name		8671348	1					
ANR	8673654	Parameter	const validate_info * vi	9590:43:299202:299224	8671348	1	True				
ANR	8673655	ParameterType	const validate_info *		8671348	0					
ANR	8673656	Identifier	vi		8671348	1					
ANR	8673657	Parameter	const unsigned int id	9591:4:299231:299251	8671348	2	True				
ANR	8673658	ParameterType	const unsigned int		8671348	0					
ANR	8673659	Identifier	id		8671348	1					
ANR	8673660	Parameter	const unsigned int od	9591:27:299254:299274	8671348	3	True				
ANR	8673661	ParameterType	const unsigned int		8671348	0					
ANR	8673662	Identifier	od		8671348	1					
ANR	8673663	Parameter	const double alpha	9592:4:299281:299298	8671348	4	True				
ANR	8673664	ParameterType	const double		8671348	0					
ANR	8673665	Identifier	alpha		8671348	1					
ANR	8673666	Parameter	const double background	9593:4:299343:299365	8671348	5	True				
ANR	8673667	ParameterType	const double		8671348	0					
ANR	8673668	Identifier	background		8671348	1					
ANR	8673669	CFGEntryNode	ENTRY		8671348		True				
ANR	8673670	CFGExitNode	EXIT		8671348		True				
ANR	8673671	Symbol	msg		8671348						
ANR	8673672	Symbol	vi -> dp -> maxerrabs		8671348						
ANR	8673673	Symbol	vi -> maxcalc		8671348						
ANR	8673674	Symbol	precision		8671348						
ANR	8673675	Symbol	low_value		8671348						
ANR	8673676	Symbol	output		8671348						
ANR	8673677	Symbol	percentage_error		8671348						
ANR	8673678	Symbol	vi -> sbit		8671348						
ANR	8673679	Symbol	tmp		8671348						
ANR	8673680	Symbol	safecat		8671348						
ANR	8673681	Symbol	id		8671348						
ANR	8673682	Symbol	* * vi		8671348						
ANR	8673683	Symbol	vi -> outlog		8671348						
ANR	8673684	Symbol	PNG_ALPHA_OPTIMIZED		8671348						
ANR	8673685	Symbol	vi -> gamma_correction		8671348						
ANR	8673686	Symbol	vi -> outquant		8671348						
ANR	8673687	Symbol	NULL		8671348						
ANR	8673688	Symbol	use_background		8671348						
ANR	8673689	Symbol	encoded_error		8671348						
ANR	8673690	Symbol	pass		8671348						
ANR	8673691	Symbol	ceil		8671348						
ANR	8673692	Symbol	& vi -> dp -> pm -> this		8671348						
ANR	8673693	Symbol	ALPHA_MODE_OFFSET		8671348						
ANR	8673694	Symbol	tcompose		8671348						
ANR	8673695	Symbol	vi		8671348						
ANR	8673696	Symbol	compose		8671348						
ANR	8673697	Symbol	background		8671348						
ANR	8673698	Symbol	vi -> use_input_precision		8671348						
ANR	8673699	Symbol	name		8671348						
ANR	8673700	Symbol	png_warning		8671348						
ANR	8673701	Symbol	vi -> outmax		8671348						
ANR	8673702	Symbol	vi -> sbit_max		8671348						
ANR	8673703	Symbol	vi -> maxpc		8671348						
ANR	8673704	Symbol	vi -> isbit_shift		8671348						
ANR	8673705	Symbol	vi -> dp -> pm		8671348						
ANR	8673706	Symbol	vi -> dp		8671348						
ANR	8673707	Symbol	PNG_ALPHA_BROKEN		8671348						
ANR	8673708	Symbol	vi -> screen_inverse		8671348						
ANR	8673709	Symbol	high_value		8671348						
ANR	8673710	Symbol	is_lo		8671348						
ANR	8673711	Symbol	outmax		8671348						
ANR	8673712	Symbol	vi -> do_background		8671348						
ANR	8673713	Symbol	vi -> maxout		8671348						
ANR	8673714	Symbol	use_input		8671348						
ANR	8673715	Symbol	vi -> pp		8671348						
ANR	8673716	Symbol	do_background		8671348						
ANR	8673717	Symbol	safecatn		8671348						
ANR	8673718	Symbol	is_hi		8671348						
ANR	8673719	Symbol	vi -> dp -> sbit		8671348						
ANR	8673720	Symbol	error		8671348						
ANR	8673721	Symbol	vi -> screen_gamma		8671348						
ANR	8673722	Symbol	do_compose		8671348						
ANR	8673723	Symbol	vi -> file_inverse		8671348						
ANR	8673724	Symbol	vi -> scale16		8671348						
ANR	8673725	Symbol	output_is_encoded		8671348						
ANR	8673726	Symbol	od		8671348						
ANR	8673727	Symbol	pos		8671348						
ANR	8673728	Symbol	alpha		8671348						
ANR	8673729	Symbol	sbit_max		8671348						
ANR	8673730	Symbol	pow		8671348						
ANR	8673731	Symbol	floor		8671348						
ANR	8673732	Symbol	isbit		8671348						
ANR	8673733	Symbol	gamma_component_compose		8671348						
ANR	8673734	Symbol	* vi -> dp		8671348						
ANR	8673735	Symbol	vi -> dp -> maxerrpc		8671348						
ANR	8673736	Symbol	fabs		8671348						
ANR	8673737	Symbol	vi -> dp -> maxerrout		8671348						
ANR	8673738	Symbol	log_max_error		8671348						
ANR	8673739	Symbol	SBIT_ERROR		8671348						
ANR	8673740	Symbol	i		8671348						
ANR	8673741	Symbol	es_lo		8671348						
ANR	8673742	Symbol	vi -> maxout_total		8671348						
ANR	8673743	Symbol	vi -> maxabs		8671348						
ANR	8673744	Symbol	safecatd		8671348						
ANR	8673745	Symbol	input_sample		8671348						
ANR	8673746	Symbol	es_hi		8671348						
ANR	8673747	Symbol	* vi		8671348						
ANR	8673748	Symbol	& tcompose		8671348						
ANR	8673749	Symbol	encoded_sample		8671348						
ANR	8673750	Function	gamma_image_validate	10158:0:320626:329624							
ANR	8673751	FunctionDef	"gamma_image_validate (gamma_display * dp , png_const_structp pp , png_infop pi)"		8673750	0					
ANR	8673752	CompoundStatement		10161:0:320717:329624	8673750	0					
ANR	8673753	Statement	const	10163:3:320798:320802	8673750	0	True				
ANR	8673754	Statement	png_store	10163:9:320804:320812	8673750	1	True				
ANR	8673755	Statement	*	10163:18:320813:320813	8673750	2	True				
ANR	8673756	Statement	const	10163:20:320815:320819	8673750	3	True				
ANR	8673757	ExpressionStatement	ps = dp -> this . ps	10163:26:320821:320837	8673750	4	True				
ANR	8673758	AssignmentExpression	ps = dp -> this . ps		8673750	0		=			
ANR	8673759	Identifier	ps		8673750	0					
ANR	8673760	MemberAccess	dp -> this . ps		8673750	1					
ANR	8673761	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673762	Identifier	dp		8673750	0					
ANR	8673763	Identifier	this		8673750	1					
ANR	8673764	Identifier	ps		8673750	1					
ANR	8673765	IdentifierDeclStatement	const png_byte in_ct = dp -> this . colour_type ;	10164:3:320842:320885	8673750	5	True				
ANR	8673766	IdentifierDecl	in_ct = dp -> this . colour_type		8673750	0					
ANR	8673767	IdentifierDeclType	const png_byte		8673750	0					
ANR	8673768	Identifier	in_ct		8673750	1					
ANR	8673769	AssignmentExpression	in_ct = dp -> this . colour_type		8673750	2		=			
ANR	8673770	Identifier	in_ct		8673750	0					
ANR	8673771	MemberAccess	dp -> this . colour_type		8673750	1					
ANR	8673772	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673773	Identifier	dp		8673750	0					
ANR	8673774	Identifier	this		8673750	1					
ANR	8673775	Identifier	colour_type		8673750	1					
ANR	8673776	IdentifierDeclStatement	const png_byte in_bd = dp -> this . bit_depth ;	10165:3:320890:320931	8673750	6	True				
ANR	8673777	IdentifierDecl	in_bd = dp -> this . bit_depth		8673750	0					
ANR	8673778	IdentifierDeclType	const png_byte		8673750	0					
ANR	8673779	Identifier	in_bd		8673750	1					
ANR	8673780	AssignmentExpression	in_bd = dp -> this . bit_depth		8673750	2		=			
ANR	8673781	Identifier	in_bd		8673750	0					
ANR	8673782	MemberAccess	dp -> this . bit_depth		8673750	1					
ANR	8673783	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673784	Identifier	dp		8673750	0					
ANR	8673785	Identifier	this		8673750	1					
ANR	8673786	Identifier	bit_depth		8673750	1					
ANR	8673787	IdentifierDeclStatement	const png_uint_32 w = dp -> this . w ;	10166:3:320936:320968	8673750	7	True				
ANR	8673788	IdentifierDecl	w = dp -> this . w		8673750	0					
ANR	8673789	IdentifierDeclType	const png_uint_32		8673750	0					
ANR	8673790	Identifier	w		8673750	1					
ANR	8673791	AssignmentExpression	w = dp -> this . w		8673750	2		=			
ANR	8673792	Identifier	w		8673750	0					
ANR	8673793	MemberAccess	dp -> this . w		8673750	1					
ANR	8673794	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673795	Identifier	dp		8673750	0					
ANR	8673796	Identifier	this		8673750	1					
ANR	8673797	Identifier	w		8673750	1					
ANR	8673798	IdentifierDeclStatement	const png_uint_32 h = dp -> this . h ;	10167:3:320973:321005	8673750	8	True				
ANR	8673799	IdentifierDecl	h = dp -> this . h		8673750	0					
ANR	8673800	IdentifierDeclType	const png_uint_32		8673750	0					
ANR	8673801	Identifier	h		8673750	1					
ANR	8673802	AssignmentExpression	h = dp -> this . h		8673750	2		=			
ANR	8673803	Identifier	h		8673750	0					
ANR	8673804	MemberAccess	dp -> this . h		8673750	1					
ANR	8673805	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673806	Identifier	dp		8673750	0					
ANR	8673807	Identifier	this		8673750	1					
ANR	8673808	Identifier	h		8673750	1					
ANR	8673809	IdentifierDeclStatement	const size_t cbRow = dp -> this . cbRow ;	10168:3:321010:321045	8673750	9	True				
ANR	8673810	IdentifierDecl	cbRow = dp -> this . cbRow		8673750	0					
ANR	8673811	IdentifierDeclType	const size_t		8673750	0					
ANR	8673812	Identifier	cbRow		8673750	1					
ANR	8673813	AssignmentExpression	cbRow = dp -> this . cbRow		8673750	2		=			
ANR	8673814	Identifier	cbRow		8673750	0					
ANR	8673815	MemberAccess	dp -> this . cbRow		8673750	1					
ANR	8673816	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673817	Identifier	dp		8673750	0					
ANR	8673818	Identifier	this		8673750	1					
ANR	8673819	Identifier	cbRow		8673750	1					
ANR	8673820	IdentifierDeclStatement	"const png_byte out_ct = png_get_color_type ( pp , pi ) ;"	10169:3:321050:321100	8673750	10	True				
ANR	8673821	IdentifierDecl	"out_ct = png_get_color_type ( pp , pi )"		8673750	0					
ANR	8673822	IdentifierDeclType	const png_byte		8673750	0					
ANR	8673823	Identifier	out_ct		8673750	1					
ANR	8673824	AssignmentExpression	"out_ct = png_get_color_type ( pp , pi )"		8673750	2		=			
ANR	8673825	Identifier	out_ct		8673750	0					
ANR	8673826	CallExpression	"png_get_color_type ( pp , pi )"		8673750	1					
ANR	8673827	Callee	png_get_color_type		8673750	0					
ANR	8673828	Identifier	png_get_color_type		8673750	0					
ANR	8673829	ArgumentList	pp		8673750	1					
ANR	8673830	Argument	pp		8673750	0					
ANR	8673831	Identifier	pp		8673750	0					
ANR	8673832	Argument	pi		8673750	1					
ANR	8673833	Identifier	pi		8673750	0					
ANR	8673834	IdentifierDeclStatement	"const png_byte out_bd = png_get_bit_depth ( pp , pi ) ;"	10170:3:321105:321154	8673750	11	True				
ANR	8673835	IdentifierDecl	"out_bd = png_get_bit_depth ( pp , pi )"		8673750	0					
ANR	8673836	IdentifierDeclType	const png_byte		8673750	0					
ANR	8673837	Identifier	out_bd		8673750	1					
ANR	8673838	AssignmentExpression	"out_bd = png_get_bit_depth ( pp , pi )"		8673750	2		=			
ANR	8673839	Identifier	out_bd		8673750	0					
ANR	8673840	CallExpression	"png_get_bit_depth ( pp , pi )"		8673750	1					
ANR	8673841	Callee	png_get_bit_depth		8673750	0					
ANR	8673842	Identifier	png_get_bit_depth		8673750	0					
ANR	8673843	ArgumentList	pp		8673750	1					
ANR	8673844	Argument	pp		8673750	0					
ANR	8673845	Identifier	pp		8673750	0					
ANR	8673846	Argument	pi		8673750	1					
ANR	8673847	Identifier	pi		8673750	0					
ANR	8673848	IdentifierDeclStatement	const unsigned int samples_per_pixel = ( out_ct & 2U ) ? 3U : 1U ;	10211:3:323193:323255	8673750	12	True				
ANR	8673849	IdentifierDecl	samples_per_pixel = ( out_ct & 2U ) ? 3U : 1U		8673750	0					
ANR	8673850	IdentifierDeclType	const unsigned int		8673750	0					
ANR	8673851	Identifier	samples_per_pixel		8673750	1					
ANR	8673852	AssignmentExpression	samples_per_pixel = ( out_ct & 2U ) ? 3U : 1U		8673750	2		=			
ANR	8673853	Identifier	samples_per_pixel		8673750	0					
ANR	8673854	ConditionalExpression	( out_ct & 2U ) ? 3U : 1U		8673750	1					
ANR	8673855	Condition	out_ct & 2U		8673750	0					
ANR	8673856	BitAndExpression	out_ct & 2U		8673750	0		&			
ANR	8673857	Identifier	out_ct		8673750	0					
ANR	8673858	PrimaryExpression	2U		8673750	1					
ANR	8673859	PrimaryExpression	3U		8673750	1					
ANR	8673860	PrimaryExpression	1U		8673750	2					
ANR	8673861	IdentifierDeclStatement	int processing ;	10212:3:323260:323274	8673750	13	True				
ANR	8673862	IdentifierDecl	processing		8673750	0					
ANR	8673863	IdentifierDeclType	int		8673750	0					
ANR	8673864	Identifier	processing		8673750	1					
ANR	8673865	IdentifierDeclStatement	png_uint_32 y ;	10213:3:323279:323292	8673750	14	True				
ANR	8673866	IdentifierDecl	y		8673750	0					
ANR	8673867	IdentifierDeclType	png_uint_32		8673750	0					
ANR	8673868	Identifier	y		8673750	1					
ANR	8673869	IdentifierDeclStatement	const store_palette_entry * in_palette = dp -> this . palette ;	10214:3:323297:323353	8673750	15	True				
ANR	8673870	IdentifierDecl	* in_palette = dp -> this . palette		8673750	0					
ANR	8673871	IdentifierDeclType	const store_palette_entry *		8673750	0					
ANR	8673872	Identifier	in_palette		8673750	1					
ANR	8673873	AssignmentExpression	* in_palette = dp -> this . palette		8673750	2		=			
ANR	8673874	Identifier	in_palette		8673750	0					
ANR	8673875	MemberAccess	dp -> this . palette		8673750	1					
ANR	8673876	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673877	Identifier	dp		8673750	0					
ANR	8673878	Identifier	this		8673750	1					
ANR	8673879	Identifier	palette		8673750	1					
ANR	8673880	IdentifierDeclStatement	const int in_is_transparent = dp -> this . is_transparent ;	10215:3:323358:323411	8673750	16	True				
ANR	8673881	IdentifierDecl	in_is_transparent = dp -> this . is_transparent		8673750	0					
ANR	8673882	IdentifierDeclType	const int		8673750	0					
ANR	8673883	Identifier	in_is_transparent		8673750	1					
ANR	8673884	AssignmentExpression	in_is_transparent = dp -> this . is_transparent		8673750	2		=			
ANR	8673885	Identifier	in_is_transparent		8673750	0					
ANR	8673886	MemberAccess	dp -> this . is_transparent		8673750	1					
ANR	8673887	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673888	Identifier	dp		8673750	0					
ANR	8673889	Identifier	this		8673750	1					
ANR	8673890	Identifier	is_transparent		8673750	1					
ANR	8673891	IdentifierDeclStatement	int process_tRNS ;	10216:3:323416:323432	8673750	17	True				
ANR	8673892	IdentifierDecl	process_tRNS		8673750	0					
ANR	8673893	IdentifierDeclType	int		8673750	0					
ANR	8673894	Identifier	process_tRNS		8673750	1					
ANR	8673895	IdentifierDeclStatement	int out_npalette = - 1 ;	10217:3:323437:323458	8673750	18	True				
ANR	8673896	IdentifierDecl	out_npalette = - 1		8673750	0					
ANR	8673897	IdentifierDeclType	int		8673750	0					
ANR	8673898	Identifier	out_npalette		8673750	1					
ANR	8673899	AssignmentExpression	out_npalette = - 1		8673750	2		=			
ANR	8673900	Identifier	out_npalette		8673750	0					
ANR	8673901	UnaryOperationExpression	- 1		8673750	1					
ANR	8673902	UnaryOperator	-		8673750	0					
ANR	8673903	PrimaryExpression	1		8673750	1					
ANR	8673904	IdentifierDeclStatement	int out_is_transparent = 0 ;	10218:3:323463:323489	8673750	19	True				
ANR	8673905	IdentifierDecl	out_is_transparent = 0		8673750	0					
ANR	8673906	IdentifierDeclType	int		8673750	0					
ANR	8673907	Identifier	out_is_transparent		8673750	1					
ANR	8673908	AssignmentExpression	out_is_transparent = 0		8673750	2		=			
ANR	8673909	Identifier	out_is_transparent		8673750	0					
ANR	8673910	PrimaryExpression	0		8673750	1					
ANR	8673911	IdentifierDeclStatement	store_palette out_palette ;	10219:3:323532:323557	8673750	20	True				
ANR	8673912	IdentifierDecl	out_palette		8673750	0					
ANR	8673913	IdentifierDeclType	store_palette		8673750	0					
ANR	8673914	Identifier	out_palette		8673750	1					
ANR	8673915	IdentifierDeclStatement	validate_info vi ;	10220:3:323562:323578	8673750	21	True				
ANR	8673916	IdentifierDecl	vi		8673750	0					
ANR	8673917	IdentifierDeclType	validate_info		8673750	0					
ANR	8673918	Identifier	vi		8673750	1					
ANR	8673919	ExpressionStatement	"store_image_check ( dp -> this . ps , pp , 0 )"	10223:3:323624:323661	8673750	22	True				
ANR	8673920	CallExpression	"store_image_check ( dp -> this . ps , pp , 0 )"		8673750	0					
ANR	8673921	Callee	store_image_check		8673750	0					
ANR	8673922	Identifier	store_image_check		8673750	0					
ANR	8673923	ArgumentList	dp -> this . ps		8673750	1					
ANR	8673924	Argument	dp -> this . ps		8673750	0					
ANR	8673925	MemberAccess	dp -> this . ps		8673750	0					
ANR	8673926	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673927	Identifier	dp		8673750	0					
ANR	8673928	Identifier	this		8673750	1					
ANR	8673929	Identifier	ps		8673750	1					
ANR	8673930	Argument	pp		8673750	1					
ANR	8673931	Identifier	pp		8673750	0					
ANR	8673932	Argument	0		8673750	2					
ANR	8673933	PrimaryExpression	0		8673750	0					
ANR	8673934	ExpressionStatement	"init_validate_info ( & vi , dp , pp , in_ct == 3 ? 8 : in_bd , out_ct == 3 ? 8 : out_bd )"	10228:3:323784:323853	8673750	23	True				
ANR	8673935	CallExpression	"init_validate_info ( & vi , dp , pp , in_ct == 3 ? 8 : in_bd , out_ct == 3 ? 8 : out_bd )"		8673750	0					
ANR	8673936	Callee	init_validate_info		8673750	0					
ANR	8673937	Identifier	init_validate_info		8673750	0					
ANR	8673938	ArgumentList	& vi		8673750	1					
ANR	8673939	Argument	& vi		8673750	0					
ANR	8673940	UnaryOperationExpression	& vi		8673750	0					
ANR	8673941	UnaryOperator	&		8673750	0					
ANR	8673942	Identifier	vi		8673750	1					
ANR	8673943	Argument	dp		8673750	1					
ANR	8673944	Identifier	dp		8673750	0					
ANR	8673945	Argument	pp		8673750	2					
ANR	8673946	Identifier	pp		8673750	0					
ANR	8673947	Argument	in_ct == 3 ? 8 : in_bd		8673750	3					
ANR	8673948	ConditionalExpression	in_ct == 3 ? 8 : in_bd		8673750	0					
ANR	8673949	Condition	in_ct == 3		8673750	0					
ANR	8673950	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8673951	Identifier	in_ct		8673750	0					
ANR	8673952	PrimaryExpression	3		8673750	1					
ANR	8673953	PrimaryExpression	8		8673750	1					
ANR	8673954	Identifier	in_bd		8673750	2					
ANR	8673955	Argument	out_ct == 3 ? 8 : out_bd		8673750	4					
ANR	8673956	ConditionalExpression	out_ct == 3 ? 8 : out_bd		8673750	0					
ANR	8673957	Condition	out_ct == 3		8673750	0					
ANR	8673958	EqualityExpression	out_ct == 3		8673750	0		==			
ANR	8673959	Identifier	out_ct		8673750	0					
ANR	8673960	PrimaryExpression	3		8673750	1					
ANR	8673961	PrimaryExpression	8		8673750	1					
ANR	8673962	Identifier	out_bd		8673750	2					
ANR	8673963	ExpressionStatement	processing = ( vi . gamma_correction > 0 && ! dp -> threshold_test ) || in_bd != out_bd || in_ct != out_ct || vi . do_background	10230:3:323859:323984	8673750	24	True				
ANR	8673964	AssignmentExpression	processing = ( vi . gamma_correction > 0 && ! dp -> threshold_test ) || in_bd != out_bd || in_ct != out_ct || vi . do_background		8673750	0		=			
ANR	8673965	Identifier	processing		8673750	0					
ANR	8673966	OrExpression	( vi . gamma_correction > 0 && ! dp -> threshold_test ) || in_bd != out_bd || in_ct != out_ct || vi . do_background		8673750	1		||			
ANR	8673967	AndExpression	vi . gamma_correction > 0 && ! dp -> threshold_test		8673750	0		&&			
ANR	8673968	RelationalExpression	vi . gamma_correction > 0		8673750	0		>			
ANR	8673969	MemberAccess	vi . gamma_correction		8673750	0					
ANR	8673970	Identifier	vi		8673750	0					
ANR	8673971	Identifier	gamma_correction		8673750	1					
ANR	8673972	PrimaryExpression	0		8673750	1					
ANR	8673973	UnaryOperationExpression	! dp -> threshold_test		8673750	1					
ANR	8673974	UnaryOperator	!		8673750	0					
ANR	8673975	PtrMemberAccess	dp -> threshold_test		8673750	1					
ANR	8673976	Identifier	dp		8673750	0					
ANR	8673977	Identifier	threshold_test		8673750	1					
ANR	8673978	OrExpression	in_bd != out_bd || in_ct != out_ct || vi . do_background		8673750	1		||			
ANR	8673979	EqualityExpression	in_bd != out_bd		8673750	0		!=			
ANR	8673980	Identifier	in_bd		8673750	0					
ANR	8673981	Identifier	out_bd		8673750	1					
ANR	8673982	OrExpression	in_ct != out_ct || vi . do_background		8673750	1		||			
ANR	8673983	EqualityExpression	in_ct != out_ct		8673750	0		!=			
ANR	8673984	Identifier	in_ct		8673750	0					
ANR	8673985	Identifier	out_ct		8673750	1					
ANR	8673986	MemberAccess	vi . do_background		8673750	1					
ANR	8673987	Identifier	vi		8673750	0					
ANR	8673988	Identifier	do_background		8673750	1					
ANR	8673989	ExpressionStatement	process_tRNS = dp -> this . has_tRNS && vi . do_background	10232:3:323989:324041	8673750	25	True				
ANR	8673990	AssignmentExpression	process_tRNS = dp -> this . has_tRNS && vi . do_background		8673750	0		=			
ANR	8673991	Identifier	process_tRNS		8673750	0					
ANR	8673992	AndExpression	dp -> this . has_tRNS && vi . do_background		8673750	1		&&			
ANR	8673993	MemberAccess	dp -> this . has_tRNS		8673750	0					
ANR	8673994	PtrMemberAccess	dp -> this		8673750	0					
ANR	8673995	Identifier	dp		8673750	0					
ANR	8673996	Identifier	this		8673750	1					
ANR	8673997	Identifier	has_tRNS		8673750	1					
ANR	8673998	MemberAccess	vi . do_background		8673750	1					
ANR	8673999	Identifier	vi		8673750	0					
ANR	8674000	Identifier	do_background		8673750	1					
ANR	8674001	IfStatement	if ( in_ct == 3 && out_ct == 3 )		8673750	26					
ANR	8674002	Condition	in_ct == 3 && out_ct == 3	10241:7:324454:324478	8673750	0	True				
ANR	8674003	AndExpression	in_ct == 3 && out_ct == 3		8673750	0		&&			
ANR	8674004	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674005	Identifier	in_ct		8673750	0					
ANR	8674006	PrimaryExpression	3		8673750	1					
ANR	8674007	EqualityExpression	out_ct == 3		8673750	1		==			
ANR	8674008	Identifier	out_ct		8673750	0					
ANR	8674009	PrimaryExpression	3		8673750	1					
ANR	8674010	ExpressionStatement	processing = 0	10242:6:324487:324501	8673750	1	True				
ANR	8674011	AssignmentExpression	processing = 0		8673750	0		=			
ANR	8674012	Identifier	processing		8673750	0					
ANR	8674013	PrimaryExpression	0		8673750	1					
ANR	8674014	IfStatement	if ( processing && out_ct == 3 )		8673750	27					
ANR	8674015	Condition	processing && out_ct == 3	10244:7:324511:324535	8673750	0	True				
ANR	8674016	AndExpression	processing && out_ct == 3		8673750	0		&&			
ANR	8674017	Identifier	processing		8673750	0					
ANR	8674018	EqualityExpression	out_ct == 3		8673750	1		==			
ANR	8674019	Identifier	out_ct		8673750	0					
ANR	8674020	PrimaryExpression	3		8673750	1					
ANR	8674021	ExpressionStatement	"out_is_transparent = read_palette ( out_palette , & out_npalette , pp , pi )"	10245:6:324544:324613	8673750	1	True				
ANR	8674022	AssignmentExpression	"out_is_transparent = read_palette ( out_palette , & out_npalette , pp , pi )"		8673750	0		=			
ANR	8674023	Identifier	out_is_transparent		8673750	0					
ANR	8674024	CallExpression	"read_palette ( out_palette , & out_npalette , pp , pi )"		8673750	1					
ANR	8674025	Callee	read_palette		8673750	0					
ANR	8674026	Identifier	read_palette		8673750	0					
ANR	8674027	ArgumentList	out_palette		8673750	1					
ANR	8674028	Argument	out_palette		8673750	0					
ANR	8674029	Identifier	out_palette		8673750	0					
ANR	8674030	Argument	& out_npalette		8673750	1					
ANR	8674031	UnaryOperationExpression	& out_npalette		8673750	0					
ANR	8674032	UnaryOperator	&		8673750	0					
ANR	8674033	Identifier	out_npalette		8673750	1					
ANR	8674034	Argument	pp		8673750	2					
ANR	8674035	Identifier	pp		8673750	0					
ANR	8674036	Argument	pi		8673750	3					
ANR	8674037	Identifier	pi		8673750	0					
ANR	8674038	ForStatement	for ( y = 0 ; y < h ; ++ y )		8673750	28					
ANR	8674039	ForInit	y = 0 ;	10247:8:324624:324627	8673750	0	True				
ANR	8674040	AssignmentExpression	y = 0		8673750	0		=			
ANR	8674041	Identifier	y		8673750	0					
ANR	8674042	PrimaryExpression	0		8673750	1					
ANR	8674043	Condition	y < h	10247:13:324629:324631	8673750	1	True				
ANR	8674044	RelationalExpression	y < h		8673750	0		<			
ANR	8674045	Identifier	y		8673750	0					
ANR	8674046	Identifier	h		8673750	1					
ANR	8674047	UnaryExpression	++ y	10247:18:324634:324636	8673750	2	True				
ANR	8674048	IncDec	++		8673750	0					
ANR	8674049	Identifier	y		8673750	1					
ANR	8674050	CompoundStatement		90:6:3992:4021	8673750	3					
ANR	8674051	IdentifierDeclStatement	"png_const_bytep pRow = store_image_row ( ps , pp , 0 , y ) ;"	10249:6:324650:324702	8673750	0	True				
ANR	8674052	IdentifierDecl	"pRow = store_image_row ( ps , pp , 0 , y )"		8673750	0					
ANR	8674053	IdentifierDeclType	png_const_bytep		8673750	0					
ANR	8674054	Identifier	pRow		8673750	1					
ANR	8674055	AssignmentExpression	"pRow = store_image_row ( ps , pp , 0 , y )"		8673750	2		=			
ANR	8674056	Identifier	pRow		8673750	0					
ANR	8674057	CallExpression	"store_image_row ( ps , pp , 0 , y )"		8673750	1					
ANR	8674058	Callee	store_image_row		8673750	0					
ANR	8674059	Identifier	store_image_row		8673750	0					
ANR	8674060	ArgumentList	ps		8673750	1					
ANR	8674061	Argument	ps		8673750	0					
ANR	8674062	Identifier	ps		8673750	0					
ANR	8674063	Argument	pp		8673750	1					
ANR	8674064	Identifier	pp		8673750	0					
ANR	8674065	Argument	0		8673750	2					
ANR	8674066	PrimaryExpression	0		8673750	0					
ANR	8674067	Argument	y		8673750	3					
ANR	8674068	Identifier	y		8673750	0					
ANR	8674069	IdentifierDeclStatement	png_byte std [ STANDARD_ROWMAX ] ;	10250:6:324710:324739	8673750	1	True				
ANR	8674070	IdentifierDecl	std [ STANDARD_ROWMAX ]		8673750	0					
ANR	8674071	IdentifierDeclType	png_byte [ STANDARD_ROWMAX ]		8673750	0					
ANR	8674072	Identifier	std		8673750	1					
ANR	8674073	Identifier	STANDARD_ROWMAX		8673750	2					
ANR	8674074	ExpressionStatement	"transform_row ( pp , std , in_ct , in_bd , y )"	10252:6:324748:324787	8673750	2	True				
ANR	8674075	CallExpression	"transform_row ( pp , std , in_ct , in_bd , y )"		8673750	0					
ANR	8674076	Callee	transform_row		8673750	0					
ANR	8674077	Identifier	transform_row		8673750	0					
ANR	8674078	ArgumentList	pp		8673750	1					
ANR	8674079	Argument	pp		8673750	0					
ANR	8674080	Identifier	pp		8673750	0					
ANR	8674081	Argument	std		8673750	1					
ANR	8674082	Identifier	std		8673750	0					
ANR	8674083	Argument	in_ct		8673750	2					
ANR	8674084	Identifier	in_ct		8673750	0					
ANR	8674085	Argument	in_bd		8673750	3					
ANR	8674086	Identifier	in_bd		8673750	0					
ANR	8674087	Argument	y		8673750	4					
ANR	8674088	Identifier	y		8673750	0					
ANR	8674089	IfStatement	if ( processing )		8673750	3					
ANR	8674090	Condition	processing	10254:10:324800:324809	8673750	0	True				
ANR	8674091	Identifier	processing		8673750	0					
ANR	8674092	CompoundStatement		96:9:4111:4125	8673750	1					
ANR	8674093	IdentifierDeclStatement	unsigned int x ;	10256:9:324829:324843	8673750	0	True				
ANR	8674094	IdentifierDecl	x		8673750	0					
ANR	8674095	IdentifierDeclType	unsigned int		8673750	0					
ANR	8674096	Identifier	x		8673750	1					
ANR	8674097	ForStatement	for ( x = 0 ; x < w ; ++ x )		8673750	1					
ANR	8674098	ForInit	x = 0 ;	10258:14:324860:324863	8673750	0	True				
ANR	8674099	AssignmentExpression	x = 0		8673750	0		=			
ANR	8674100	Identifier	x		8673750	0					
ANR	8674101	PrimaryExpression	0		8673750	1					
ANR	8674102	Condition	x < w	10258:19:324865:324867	8673750	1	True				
ANR	8674103	RelationalExpression	x < w		8673750	0		<			
ANR	8674104	Identifier	x		8673750	0					
ANR	8674105	Identifier	w		8673750	1					
ANR	8674106	UnaryExpression	++ x	10258:24:324870:324872	8673750	2	True				
ANR	8674107	IncDec	++		8673750	0					
ANR	8674108	Identifier	x		8673750	1					
ANR	8674109	CompoundStatement		105:12:4412:4512	8673750	3					
ANR	8674110	IdentifierDeclStatement	double alpha = 1 ;	10260:12:324898:324914	8673750	0	True				
ANR	8674111	IdentifierDecl	alpha = 1		8673750	0					
ANR	8674112	IdentifierDeclType	double		8673750	0					
ANR	8674113	Identifier	alpha		8673750	1					
ANR	8674114	AssignmentExpression	alpha = 1		8673750	2		=			
ANR	8674115	Identifier	alpha		8673750	0					
ANR	8674116	PrimaryExpression	1		8673750	1					
ANR	8674117	IdentifierDeclStatement	"const unsigned int in_index = in_ct == 3 ? sample ( std , 3 , in_bd , x , 0 , 0 , 0 ) : 256 ;"	10263:12:325019:325116	8673750	1	True				
ANR	8674118	IdentifierDecl	"in_index = in_ct == 3 ? sample ( std , 3 , in_bd , x , 0 , 0 , 0 ) : 256"		8673750	0					
ANR	8674119	IdentifierDeclType	const unsigned int		8673750	0					
ANR	8674120	Identifier	in_index		8673750	1					
ANR	8674121	AssignmentExpression	"in_index = in_ct == 3 ? sample ( std , 3 , in_bd , x , 0 , 0 , 0 ) : 256"		8673750	2		=			
ANR	8674122	Identifier	in_index		8673750	0					
ANR	8674123	ConditionalExpression	"in_ct == 3 ? sample ( std , 3 , in_bd , x , 0 , 0 , 0 ) : 256"		8673750	1					
ANR	8674124	Condition	in_ct == 3		8673750	0					
ANR	8674125	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674126	Identifier	in_ct		8673750	0					
ANR	8674127	PrimaryExpression	3		8673750	1					
ANR	8674128	CallExpression	"sample ( std , 3 , in_bd , x , 0 , 0 , 0 )"		8673750	1					
ANR	8674129	Callee	sample		8673750	0					
ANR	8674130	Identifier	sample		8673750	0					
ANR	8674131	ArgumentList	std		8673750	1					
ANR	8674132	Argument	std		8673750	0					
ANR	8674133	Identifier	std		8673750	0					
ANR	8674134	Argument	3		8673750	1					
ANR	8674135	PrimaryExpression	3		8673750	0					
ANR	8674136	Argument	in_bd		8673750	2					
ANR	8674137	Identifier	in_bd		8673750	0					
ANR	8674138	Argument	x		8673750	3					
ANR	8674139	Identifier	x		8673750	0					
ANR	8674140	Argument	0		8673750	4					
ANR	8674141	PrimaryExpression	0		8673750	0					
ANR	8674142	Argument	0		8673750	5					
ANR	8674143	PrimaryExpression	0		8673750	0					
ANR	8674144	Argument	0		8673750	6					
ANR	8674145	PrimaryExpression	0		8673750	0					
ANR	8674146	PrimaryExpression	256		8673750	2					
ANR	8674147	IdentifierDeclStatement	"const unsigned int out_index = out_ct == 3 ? sample ( std , 3 , out_bd , x , 0 , 0 , 0 ) : 256 ;"	10265:12:325130:325230	8673750	2	True				
ANR	8674148	IdentifierDecl	"out_index = out_ct == 3 ? sample ( std , 3 , out_bd , x , 0 , 0 , 0 ) : 256"		8673750	0					
ANR	8674149	IdentifierDeclType	const unsigned int		8673750	0					
ANR	8674150	Identifier	out_index		8673750	1					
ANR	8674151	AssignmentExpression	"out_index = out_ct == 3 ? sample ( std , 3 , out_bd , x , 0 , 0 , 0 ) : 256"		8673750	2		=			
ANR	8674152	Identifier	out_index		8673750	0					
ANR	8674153	ConditionalExpression	"out_ct == 3 ? sample ( std , 3 , out_bd , x , 0 , 0 , 0 ) : 256"		8673750	1					
ANR	8674154	Condition	out_ct == 3		8673750	0					
ANR	8674155	EqualityExpression	out_ct == 3		8673750	0		==			
ANR	8674156	Identifier	out_ct		8673750	0					
ANR	8674157	PrimaryExpression	3		8673750	1					
ANR	8674158	CallExpression	"sample ( std , 3 , out_bd , x , 0 , 0 , 0 )"		8673750	1					
ANR	8674159	Callee	sample		8673750	0					
ANR	8674160	Identifier	sample		8673750	0					
ANR	8674161	ArgumentList	std		8673750	1					
ANR	8674162	Argument	std		8673750	0					
ANR	8674163	Identifier	std		8673750	0					
ANR	8674164	Argument	3		8673750	1					
ANR	8674165	PrimaryExpression	3		8673750	0					
ANR	8674166	Argument	out_bd		8673750	2					
ANR	8674167	Identifier	out_bd		8673750	0					
ANR	8674168	Argument	x		8673750	3					
ANR	8674169	Identifier	x		8673750	0					
ANR	8674170	Argument	0		8673750	4					
ANR	8674171	PrimaryExpression	0		8673750	0					
ANR	8674172	Argument	0		8673750	5					
ANR	8674173	PrimaryExpression	0		8673750	0					
ANR	8674174	Argument	0		8673750	6					
ANR	8674175	PrimaryExpression	0		8673750	0					
ANR	8674176	PrimaryExpression	256		8673750	2					
ANR	8674177	IfStatement	if ( ( in_ct & PNG_COLOR_MASK_ALPHA ) != 0 || ( in_ct == 3 && in_is_transparent ) )		8673750	3					
ANR	8674178	Condition	( in_ct & PNG_COLOR_MASK_ALPHA ) != 0 || ( in_ct == 3 && in_is_transparent )	10271:16:325406:325493	8673750	0	True				
ANR	8674179	OrExpression	( in_ct & PNG_COLOR_MASK_ALPHA ) != 0 || ( in_ct == 3 && in_is_transparent )		8673750	0		||			
ANR	8674180	EqualityExpression	( in_ct & PNG_COLOR_MASK_ALPHA ) != 0		8673750	0		!=			
ANR	8674181	BitAndExpression	in_ct & PNG_COLOR_MASK_ALPHA		8673750	0		&			
ANR	8674182	Identifier	in_ct		8673750	0					
ANR	8674183	Identifier	PNG_COLOR_MASK_ALPHA		8673750	1					
ANR	8674184	PrimaryExpression	0		8673750	1					
ANR	8674185	AndExpression	in_ct == 3 && in_is_transparent		8673750	1		&&			
ANR	8674186	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674187	Identifier	in_ct		8673750	0					
ANR	8674188	PrimaryExpression	3		8673750	1					
ANR	8674189	Identifier	in_is_transparent		8673750	1					
ANR	8674190	CompoundStatement		118:15:4995:5050	8673750	1					
ANR	8674191	IdentifierDeclStatement	"const unsigned int input_alpha = in_ct == 3 ? dp -> this . palette [ in_index ] . alpha : sample ( std , in_ct , in_bd , x , samples_per_pixel , 0 , 0 ) ;"	10274:15:325525:325695	8673750	0	True				
ANR	8674192	IdentifierDecl	"input_alpha = in_ct == 3 ? dp -> this . palette [ in_index ] . alpha : sample ( std , in_ct , in_bd , x , samples_per_pixel , 0 , 0 )"		8673750	0					
ANR	8674193	IdentifierDeclType	const unsigned int		8673750	0					
ANR	8674194	Identifier	input_alpha		8673750	1					
ANR	8674195	AssignmentExpression	"input_alpha = in_ct == 3 ? dp -> this . palette [ in_index ] . alpha : sample ( std , in_ct , in_bd , x , samples_per_pixel , 0 , 0 )"		8673750	2		=			
ANR	8674196	Identifier	input_alpha		8673750	0					
ANR	8674197	ConditionalExpression	"in_ct == 3 ? dp -> this . palette [ in_index ] . alpha : sample ( std , in_ct , in_bd , x , samples_per_pixel , 0 , 0 )"		8673750	1					
ANR	8674198	Condition	in_ct == 3		8673750	0					
ANR	8674199	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674200	Identifier	in_ct		8673750	0					
ANR	8674201	PrimaryExpression	3		8673750	1					
ANR	8674202	MemberAccess	dp -> this . palette [ in_index ] . alpha		8673750	1					
ANR	8674203	ArrayIndexing	dp -> this . palette [ in_index ]		8673750	0					
ANR	8674204	MemberAccess	dp -> this . palette		8673750	0					
ANR	8674205	PtrMemberAccess	dp -> this		8673750	0					
ANR	8674206	Identifier	dp		8673750	0					
ANR	8674207	Identifier	this		8673750	1					
ANR	8674208	Identifier	palette		8673750	1					
ANR	8674209	Identifier	in_index		8673750	1					
ANR	8674210	Identifier	alpha		8673750	1					
ANR	8674211	CallExpression	"sample ( std , in_ct , in_bd , x , samples_per_pixel , 0 , 0 )"		8673750	2					
ANR	8674212	Callee	sample		8673750	0					
ANR	8674213	Identifier	sample		8673750	0					
ANR	8674214	ArgumentList	std		8673750	1					
ANR	8674215	Argument	std		8673750	0					
ANR	8674216	Identifier	std		8673750	0					
ANR	8674217	Argument	in_ct		8673750	1					
ANR	8674218	Identifier	in_ct		8673750	0					
ANR	8674219	Argument	in_bd		8673750	2					
ANR	8674220	Identifier	in_bd		8673750	0					
ANR	8674221	Argument	x		8673750	3					
ANR	8674222	Identifier	x		8673750	0					
ANR	8674223	Argument	samples_per_pixel		8673750	4					
ANR	8674224	Identifier	samples_per_pixel		8673750	0					
ANR	8674225	Argument	0		8673750	5					
ANR	8674226	PrimaryExpression	0		8673750	0					
ANR	8674227	Argument	0		8673750	6					
ANR	8674228	PrimaryExpression	0		8673750	0					
ANR	8674229	IdentifierDeclStatement	unsigned int output_alpha = 65536 ;	10278:15:325713:325768	8673750	1	True				
ANR	8674230	IdentifierDecl	output_alpha = 65536		8673750	0					
ANR	8674231	IdentifierDeclType	unsigned int		8673750	0					
ANR	8674232	Identifier	output_alpha		8673750	1					
ANR	8674233	AssignmentExpression	output_alpha = 65536		8673750	2		=			
ANR	8674234	Identifier	output_alpha		8673750	0					
ANR	8674235	PrimaryExpression	65536		8673750	1					
ANR	8674236	IfStatement	if ( out_ct == 3 )		8673750	2					
ANR	8674237	Condition	out_ct == 3	10280:19:325790:325800	8673750	0	True				
ANR	8674238	EqualityExpression	out_ct == 3		8673750	0		==			
ANR	8674239	Identifier	out_ct		8673750	0					
ANR	8674240	PrimaryExpression	3		8673750	1					
ANR	8674241	CompoundStatement		121:15:5100:5100	8673750	1					
ANR	8674242	IfStatement	if ( out_is_transparent )		8673750	0					
ANR	8674243	Condition	out_is_transparent	10282:22:325842:325859	8673750	0	True				
ANR	8674244	Identifier	out_is_transparent		8673750	0					
ANR	8674245	ExpressionStatement	output_alpha = out_palette [ out_index ] . alpha	10283:21:325883:325926	8673750	1	True				
ANR	8674246	AssignmentExpression	output_alpha = out_palette [ out_index ] . alpha		8673750	0		=			
ANR	8674247	Identifier	output_alpha		8673750	0					
ANR	8674248	MemberAccess	out_palette [ out_index ] . alpha		8673750	1					
ANR	8674249	ArrayIndexing	out_palette [ out_index ]		8673750	0					
ANR	8674250	Identifier	out_palette		8673750	0					
ANR	8674251	Identifier	out_index		8673750	1					
ANR	8674252	Identifier	alpha		8673750	1					
ANR	8674253	ElseStatement	else		8673750	0					
ANR	8674254	IfStatement	if ( ( out_ct & PNG_COLOR_MASK_ALPHA ) != 0 )		8673750	0					
ANR	8674255	Condition	( out_ct & PNG_COLOR_MASK_ALPHA ) != 0	10286:24:325970:326005	8673750	0	True				
ANR	8674256	EqualityExpression	( out_ct & PNG_COLOR_MASK_ALPHA ) != 0		8673750	0		!=			
ANR	8674257	BitAndExpression	out_ct & PNG_COLOR_MASK_ALPHA		8673750	0		&			
ANR	8674258	Identifier	out_ct		8673750	0					
ANR	8674259	Identifier	PNG_COLOR_MASK_ALPHA		8673750	1					
ANR	8674260	PrimaryExpression	0		8673750	1					
ANR	8674261	ExpressionStatement	"output_alpha = sample ( pRow , out_ct , out_bd , x , samples_per_pixel , 0 , 0 )"	10287:18:326026:326118	8673750	1	True				
ANR	8674262	AssignmentExpression	"output_alpha = sample ( pRow , out_ct , out_bd , x , samples_per_pixel , 0 , 0 )"		8673750	0		=			
ANR	8674263	Identifier	output_alpha		8673750	0					
ANR	8674264	CallExpression	"sample ( pRow , out_ct , out_bd , x , samples_per_pixel , 0 , 0 )"		8673750	1					
ANR	8674265	Callee	sample		8673750	0					
ANR	8674266	Identifier	sample		8673750	0					
ANR	8674267	ArgumentList	pRow		8673750	1					
ANR	8674268	Argument	pRow		8673750	0					
ANR	8674269	Identifier	pRow		8673750	0					
ANR	8674270	Argument	out_ct		8673750	1					
ANR	8674271	Identifier	out_ct		8673750	0					
ANR	8674272	Argument	out_bd		8673750	2					
ANR	8674273	Identifier	out_bd		8673750	0					
ANR	8674274	Argument	x		8673750	3					
ANR	8674275	Identifier	x		8673750	0					
ANR	8674276	Argument	samples_per_pixel		8673750	4					
ANR	8674277	Identifier	samples_per_pixel		8673750	0					
ANR	8674278	Argument	0		8673750	5					
ANR	8674279	PrimaryExpression	0		8673750	0					
ANR	8674280	Argument	0		8673750	6					
ANR	8674281	PrimaryExpression	0		8673750	0					
ANR	8674282	IfStatement	if ( output_alpha != 65536 )		8673750	3					
ANR	8674283	Condition	output_alpha != 65536	10290:19:326140:326160	8673750	0	True				
ANR	8674284	EqualityExpression	output_alpha != 65536		8673750	0		!=			
ANR	8674285	Identifier	output_alpha		8673750	0					
ANR	8674286	PrimaryExpression	65536		8673750	1					
ANR	8674287	ExpressionStatement	"alpha = gamma_component_validate ( ""alpha"" , & vi , input_alpha , output_alpha , - 1 , 0 )"	10291:18:326181:326305	8673750	1	True				
ANR	8674288	AssignmentExpression	"alpha = gamma_component_validate ( ""alpha"" , & vi , input_alpha , output_alpha , - 1 , 0 )"		8673750	0		=			
ANR	8674289	Identifier	alpha		8673750	0					
ANR	8674290	CallExpression	"gamma_component_validate ( ""alpha"" , & vi , input_alpha , output_alpha , - 1 , 0 )"		8673750	1					
ANR	8674291	Callee	gamma_component_validate		8673750	0					
ANR	8674292	Identifier	gamma_component_validate		8673750	0					
ANR	8674293	ArgumentList	"""alpha"""		8673750	1					
ANR	8674294	Argument	"""alpha"""		8673750	0					
ANR	8674295	PrimaryExpression	"""alpha"""		8673750	0					
ANR	8674296	Argument	& vi		8673750	1					
ANR	8674297	UnaryOperationExpression	& vi		8673750	0					
ANR	8674298	UnaryOperator	&		8673750	0					
ANR	8674299	Identifier	vi		8673750	1					
ANR	8674300	Argument	input_alpha		8673750	2					
ANR	8674301	Identifier	input_alpha		8673750	0					
ANR	8674302	Argument	output_alpha		8673750	3					
ANR	8674303	Identifier	output_alpha		8673750	0					
ANR	8674304	Argument	- 1		8673750	4					
ANR	8674305	UnaryOperationExpression	- 1		8673750	0					
ANR	8674306	UnaryOperator	-		8673750	0					
ANR	8674307	PrimaryExpression	1		8673750	1					
ANR	8674308	Argument	0		8673750	5					
ANR	8674309	PrimaryExpression	0		8673750	0					
ANR	8674310	ElseStatement	else		8673750	0					
ANR	8674311	CompoundStatement		135:15:5650:5650	8673750	0					
ANR	8674312	ExpressionStatement	alpha = input_alpha >> vi . isbit_shift	10299:18:326570:326607	8673750	0	True				
ANR	8674313	AssignmentExpression	alpha = input_alpha >> vi . isbit_shift		8673750	0		=			
ANR	8674314	Identifier	alpha		8673750	0					
ANR	8674315	ShiftExpression	input_alpha >> vi . isbit_shift		8673750	1		>>			
ANR	8674316	Identifier	input_alpha		8673750	0					
ANR	8674317	MemberAccess	vi . isbit_shift		8673750	1					
ANR	8674318	Identifier	vi		8673750	0					
ANR	8674319	Identifier	isbit_shift		8673750	1					
ANR	8674320	ExpressionStatement	alpha /= vi . sbit_max	10300:18:326627:326647	8673750	1	True				
ANR	8674321	AssignmentExpression	alpha /= vi . sbit_max		8673750	0		/=			
ANR	8674322	Identifier	alpha		8673750	0					
ANR	8674323	MemberAccess	vi . sbit_max		8673750	1					
ANR	8674324	Identifier	vi		8673750	0					
ANR	8674325	Identifier	sbit_max		8673750	1					
ANR	8674326	ElseStatement	else		8673750	0					
ANR	8674327	IfStatement	if ( process_tRNS )		8673750	0					
ANR	8674328	Condition	process_tRNS	10304:21:326702:326713	8673750	0	True				
ANR	8674329	Identifier	process_tRNS		8673750	0					
ANR	8674330	CompoundStatement		145:12:6010:6010	8673750	1					
ANR	8674331	SwitchStatement	switch ( in_ct )		8673750	0					
ANR	8674332	Condition	in_ct	10310:23:326967:326971	8673750	0	True				
ANR	8674333	Identifier	in_ct		8673750	0					
ANR	8674334	CompoundStatement		151:15:6271:6271	8673750	1					
ANR	8674335	Label	case 0 :	10312:18:327009:327015	8673750	0	True				
ANR	8674336	IfStatement	"if ( sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red )"		8673750	1					
ANR	8674337	Condition	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red"	10313:25:327053:327144	8673750	0	True				
ANR	8674338	EqualityExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red"		8673750	0		==			
ANR	8674339	CallExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	0					
ANR	8674340	Callee	sample		8673750	0					
ANR	8674341	Identifier	sample		8673750	0					
ANR	8674342	ArgumentList	std		8673750	1					
ANR	8674343	Argument	std		8673750	0					
ANR	8674344	Identifier	std		8673750	0					
ANR	8674345	Argument	in_ct		8673750	1					
ANR	8674346	Identifier	in_ct		8673750	0					
ANR	8674347	Argument	in_bd		8673750	2					
ANR	8674348	Identifier	in_bd		8673750	0					
ANR	8674349	Argument	x		8673750	3					
ANR	8674350	Identifier	x		8673750	0					
ANR	8674351	Argument	0		8673750	4					
ANR	8674352	PrimaryExpression	0		8673750	0					
ANR	8674353	Argument	0		8673750	5					
ANR	8674354	PrimaryExpression	0		8673750	0					
ANR	8674355	Argument	0		8673750	6					
ANR	8674356	PrimaryExpression	0		8673750	0					
ANR	8674357	MemberAccess	dp -> this . transparent . red		8673750	1					
ANR	8674358	MemberAccess	dp -> this . transparent		8673750	0					
ANR	8674359	PtrMemberAccess	dp -> this		8673750	0					
ANR	8674360	Identifier	dp		8673750	0					
ANR	8674361	Identifier	this		8673750	1					
ANR	8674362	Identifier	transparent		8673750	1					
ANR	8674363	Identifier	red		8673750	1					
ANR	8674364	ExpressionStatement	alpha = 0	10315:24:327171:327180	8673750	1	True				
ANR	8674365	AssignmentExpression	alpha = 0		8673750	0		=			
ANR	8674366	Identifier	alpha		8673750	0					
ANR	8674367	PrimaryExpression	0		8673750	1					
ANR	8674368	BreakStatement	break ;	10316:21:327203:327208	8673750	2	True				
ANR	8674369	Label	case 2 :	10318:18:327229:327235	8673750	3	True				
ANR	8674370	IfStatement	"if ( sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red && sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) == dp -> this . transparent . green && sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) == dp -> this . transparent . blue )"		8673750	4					
ANR	8674371	Condition	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red && sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) == dp -> this . transparent . green && sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) == dp -> this . transparent . blue"	10319:25:327272:327608	8673750	0	True				
ANR	8674372	AndExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red && sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) == dp -> this . transparent . green && sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) == dp -> this . transparent . blue"		8673750	0		&&			
ANR	8674373	EqualityExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) == dp -> this . transparent . red"		8673750	0		==			
ANR	8674374	CallExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	0					
ANR	8674375	Callee	sample		8673750	0					
ANR	8674376	Identifier	sample		8673750	0					
ANR	8674377	ArgumentList	std		8673750	1					
ANR	8674378	Argument	std		8673750	0					
ANR	8674379	Identifier	std		8673750	0					
ANR	8674380	Argument	in_ct		8673750	1					
ANR	8674381	Identifier	in_ct		8673750	0					
ANR	8674382	Argument	in_bd		8673750	2					
ANR	8674383	Identifier	in_bd		8673750	0					
ANR	8674384	Argument	x		8673750	3					
ANR	8674385	Identifier	x		8673750	0					
ANR	8674386	Argument	0		8673750	4					
ANR	8674387	PrimaryExpression	0		8673750	0					
ANR	8674388	Argument	0		8673750	5					
ANR	8674389	PrimaryExpression	0		8673750	0					
ANR	8674390	Argument	0		8673750	6					
ANR	8674391	PrimaryExpression	0		8673750	0					
ANR	8674392	MemberAccess	dp -> this . transparent . red		8673750	1					
ANR	8674393	MemberAccess	dp -> this . transparent		8673750	0					
ANR	8674394	PtrMemberAccess	dp -> this		8673750	0					
ANR	8674395	Identifier	dp		8673750	0					
ANR	8674396	Identifier	this		8673750	1					
ANR	8674397	Identifier	transparent		8673750	1					
ANR	8674398	Identifier	red		8673750	1					
ANR	8674399	AndExpression	"sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) == dp -> this . transparent . green && sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) == dp -> this . transparent . blue"		8673750	1		&&			
ANR	8674400	EqualityExpression	"sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) == dp -> this . transparent . green"		8673750	0		==			
ANR	8674401	CallExpression	"sample ( std , in_ct , in_bd , x , 1 , 0 , 0 )"		8673750	0					
ANR	8674402	Callee	sample		8673750	0					
ANR	8674403	Identifier	sample		8673750	0					
ANR	8674404	ArgumentList	std		8673750	1					
ANR	8674405	Argument	std		8673750	0					
ANR	8674406	Identifier	std		8673750	0					
ANR	8674407	Argument	in_ct		8673750	1					
ANR	8674408	Identifier	in_ct		8673750	0					
ANR	8674409	Argument	in_bd		8673750	2					
ANR	8674410	Identifier	in_bd		8673750	0					
ANR	8674411	Argument	x		8673750	3					
ANR	8674412	Identifier	x		8673750	0					
ANR	8674413	Argument	1		8673750	4					
ANR	8674414	PrimaryExpression	1		8673750	0					
ANR	8674415	Argument	0		8673750	5					
ANR	8674416	PrimaryExpression	0		8673750	0					
ANR	8674417	Argument	0		8673750	6					
ANR	8674418	PrimaryExpression	0		8673750	0					
ANR	8674419	MemberAccess	dp -> this . transparent . green		8673750	1					
ANR	8674420	MemberAccess	dp -> this . transparent		8673750	0					
ANR	8674421	PtrMemberAccess	dp -> this		8673750	0					
ANR	8674422	Identifier	dp		8673750	0					
ANR	8674423	Identifier	this		8673750	1					
ANR	8674424	Identifier	transparent		8673750	1					
ANR	8674425	Identifier	green		8673750	1					
ANR	8674426	EqualityExpression	"sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) == dp -> this . transparent . blue"		8673750	1		==			
ANR	8674427	CallExpression	"sample ( std , in_ct , in_bd , x , 2 , 0 , 0 )"		8673750	0					
ANR	8674428	Callee	sample		8673750	0					
ANR	8674429	Identifier	sample		8673750	0					
ANR	8674430	ArgumentList	std		8673750	1					
ANR	8674431	Argument	std		8673750	0					
ANR	8674432	Identifier	std		8673750	0					
ANR	8674433	Argument	in_ct		8673750	1					
ANR	8674434	Identifier	in_ct		8673750	0					
ANR	8674435	Argument	in_bd		8673750	2					
ANR	8674436	Identifier	in_bd		8673750	0					
ANR	8674437	Argument	x		8673750	3					
ANR	8674438	Identifier	x		8673750	0					
ANR	8674439	Argument	2		8673750	4					
ANR	8674440	PrimaryExpression	2		8673750	0					
ANR	8674441	Argument	0		8673750	5					
ANR	8674442	PrimaryExpression	0		8673750	0					
ANR	8674443	Argument	0		8673750	6					
ANR	8674444	PrimaryExpression	0		8673750	0					
ANR	8674445	MemberAccess	dp -> this . transparent . blue		8673750	1					
ANR	8674446	MemberAccess	dp -> this . transparent		8673750	0					
ANR	8674447	PtrMemberAccess	dp -> this		8673750	0					
ANR	8674448	Identifier	dp		8673750	0					
ANR	8674449	Identifier	this		8673750	1					
ANR	8674450	Identifier	transparent		8673750	1					
ANR	8674451	Identifier	blue		8673750	1					
ANR	8674452	ExpressionStatement	alpha = 0	10325:24:327635:327644	8673750	1	True				
ANR	8674453	AssignmentExpression	alpha = 0		8673750	0		=			
ANR	8674454	Identifier	alpha		8673750	0					
ANR	8674455	PrimaryExpression	0		8673750	1					
ANR	8674456	BreakStatement	break ;	10326:21:327667:327672	8673750	5	True				
ANR	8674457	Label	default :	10328:18:327693:327700	8673750	6	True				
ANR	8674458	Identifier	default		8673750	0					
ANR	8674459	BreakStatement	break ;	10329:21:327723:327728	8673750	7	True				
ANR	8674460	IfStatement	if ( ( in_ct & PNG_COLOR_MASK_COLOR ) == 0 )		8673750	4					
ANR	8674461	Condition	( in_ct & PNG_COLOR_MASK_COLOR ) == 0	10334:16:327832:327866	8673750	0	True				
ANR	8674462	EqualityExpression	( in_ct & PNG_COLOR_MASK_COLOR ) == 0		8673750	0		==			
ANR	8674463	BitAndExpression	in_ct & PNG_COLOR_MASK_COLOR		8673750	0		&			
ANR	8674464	Identifier	in_ct		8673750	0					
ANR	8674465	Identifier	PNG_COLOR_MASK_COLOR		8673750	1					
ANR	8674466	PrimaryExpression	0		8673750	1					
ANR	8674467	ExpressionStatement	"( void ) gamma_component_validate ( ""gray"" , & vi , sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) , sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 ) , alpha , vi . background_red )"	10335:15:327900:328117	8673750	1	True				
ANR	8674468	CastExpression	"( void ) gamma_component_validate ( ""gray"" , & vi , sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) , sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 ) , alpha , vi . background_red )"		8673750	0					
ANR	8674469	CastTarget	void		8673750	0					
ANR	8674470	CallExpression	"gamma_component_validate ( ""gray"" , & vi , sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) , sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 ) , alpha , vi . background_red )"		8673750	1					
ANR	8674471	Callee	gamma_component_validate		8673750	0					
ANR	8674472	Identifier	gamma_component_validate		8673750	0					
ANR	8674473	ArgumentList	"""gray"""		8673750	1					
ANR	8674474	Argument	"""gray"""		8673750	0					
ANR	8674475	PrimaryExpression	"""gray"""		8673750	0					
ANR	8674476	Argument	& vi		8673750	1					
ANR	8674477	UnaryOperationExpression	& vi		8673750	0					
ANR	8674478	UnaryOperator	&		8673750	0					
ANR	8674479	Identifier	vi		8673750	1					
ANR	8674480	Argument	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	2					
ANR	8674481	CallExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	0					
ANR	8674482	Callee	sample		8673750	0					
ANR	8674483	Identifier	sample		8673750	0					
ANR	8674484	ArgumentList	std		8673750	1					
ANR	8674485	Argument	std		8673750	0					
ANR	8674486	Identifier	std		8673750	0					
ANR	8674487	Argument	in_ct		8673750	1					
ANR	8674488	Identifier	in_ct		8673750	0					
ANR	8674489	Argument	in_bd		8673750	2					
ANR	8674490	Identifier	in_bd		8673750	0					
ANR	8674491	Argument	x		8673750	3					
ANR	8674492	Identifier	x		8673750	0					
ANR	8674493	Argument	0		8673750	4					
ANR	8674494	PrimaryExpression	0		8673750	0					
ANR	8674495	Argument	0		8673750	5					
ANR	8674496	PrimaryExpression	0		8673750	0					
ANR	8674497	Argument	0		8673750	6					
ANR	8674498	PrimaryExpression	0		8673750	0					
ANR	8674499	Argument	"sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 )"		8673750	3					
ANR	8674500	CallExpression	"sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 )"		8673750	0					
ANR	8674501	Callee	sample		8673750	0					
ANR	8674502	Identifier	sample		8673750	0					
ANR	8674503	ArgumentList	pRow		8673750	1					
ANR	8674504	Argument	pRow		8673750	0					
ANR	8674505	Identifier	pRow		8673750	0					
ANR	8674506	Argument	out_ct		8673750	1					
ANR	8674507	Identifier	out_ct		8673750	0					
ANR	8674508	Argument	out_bd		8673750	2					
ANR	8674509	Identifier	out_bd		8673750	0					
ANR	8674510	Argument	x		8673750	3					
ANR	8674511	Identifier	x		8673750	0					
ANR	8674512	Argument	0		8673750	4					
ANR	8674513	PrimaryExpression	0		8673750	0					
ANR	8674514	Argument	0		8673750	5					
ANR	8674515	PrimaryExpression	0		8673750	0					
ANR	8674516	Argument	0		8673750	6					
ANR	8674517	PrimaryExpression	0		8673750	0					
ANR	8674518	Argument	alpha		8673750	4					
ANR	8674519	Identifier	alpha		8673750	0					
ANR	8674520	Argument	vi . background_red		8673750	5					
ANR	8674521	MemberAccess	vi . background_red		8673750	0					
ANR	8674522	Identifier	vi		8673750	0					
ANR	8674523	Identifier	background_red		8673750	1					
ANR	8674524	ElseStatement	else		8673750	0					
ANR	8674525	CompoundStatement		180:12:7451:7451	8673750	0					
ANR	8674526	ExpressionStatement	"( void ) gamma_component_validate ( ""red"" , & vi , in_ct == 3 ? in_palette [ in_index ] . red : sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . red : sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 ) , alpha , vi . background_red )"	10341:15:328186:328527	8673750	0	True				
ANR	8674527	CastExpression	"( void ) gamma_component_validate ( ""red"" , & vi , in_ct == 3 ? in_palette [ in_index ] . red : sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . red : sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 ) , alpha , vi . background_red )"		8673750	0					
ANR	8674528	CastTarget	void		8673750	0					
ANR	8674529	CallExpression	"gamma_component_validate ( ""red"" , & vi , in_ct == 3 ? in_palette [ in_index ] . red : sample ( std , in_ct , in_bd , x , 0 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . red : sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 ) , alpha , vi . background_red )"		8673750	1					
ANR	8674530	Callee	gamma_component_validate		8673750	0					
ANR	8674531	Identifier	gamma_component_validate		8673750	0					
ANR	8674532	ArgumentList	"""red"""		8673750	1					
ANR	8674533	Argument	"""red"""		8673750	0					
ANR	8674534	PrimaryExpression	"""red"""		8673750	0					
ANR	8674535	Argument	& vi		8673750	1					
ANR	8674536	UnaryOperationExpression	& vi		8673750	0					
ANR	8674537	UnaryOperator	&		8673750	0					
ANR	8674538	Identifier	vi		8673750	1					
ANR	8674539	Argument	"in_ct == 3 ? in_palette [ in_index ] . red : sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	2					
ANR	8674540	ConditionalExpression	"in_ct == 3 ? in_palette [ in_index ] . red : sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	0					
ANR	8674541	Condition	in_ct == 3		8673750	0					
ANR	8674542	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674543	Identifier	in_ct		8673750	0					
ANR	8674544	PrimaryExpression	3		8673750	1					
ANR	8674545	MemberAccess	in_palette [ in_index ] . red		8673750	1					
ANR	8674546	ArrayIndexing	in_palette [ in_index ]		8673750	0					
ANR	8674547	Identifier	in_palette		8673750	0					
ANR	8674548	Identifier	in_index		8673750	1					
ANR	8674549	Identifier	red		8673750	1					
ANR	8674550	CallExpression	"sample ( std , in_ct , in_bd , x , 0 , 0 , 0 )"		8673750	2					
ANR	8674551	Callee	sample		8673750	0					
ANR	8674552	Identifier	sample		8673750	0					
ANR	8674553	ArgumentList	std		8673750	1					
ANR	8674554	Argument	std		8673750	0					
ANR	8674555	Identifier	std		8673750	0					
ANR	8674556	Argument	in_ct		8673750	1					
ANR	8674557	Identifier	in_ct		8673750	0					
ANR	8674558	Argument	in_bd		8673750	2					
ANR	8674559	Identifier	in_bd		8673750	0					
ANR	8674560	Argument	x		8673750	3					
ANR	8674561	Identifier	x		8673750	0					
ANR	8674562	Argument	0		8673750	4					
ANR	8674563	PrimaryExpression	0		8673750	0					
ANR	8674564	Argument	0		8673750	5					
ANR	8674565	PrimaryExpression	0		8673750	0					
ANR	8674566	Argument	0		8673750	6					
ANR	8674567	PrimaryExpression	0		8673750	0					
ANR	8674568	Argument	"out_ct == 3 ? out_palette [ out_index ] . red : sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 )"		8673750	3					
ANR	8674569	ConditionalExpression	"out_ct == 3 ? out_palette [ out_index ] . red : sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 )"		8673750	0					
ANR	8674570	Condition	out_ct == 3		8673750	0					
ANR	8674571	EqualityExpression	out_ct == 3		8673750	0		==			
ANR	8674572	Identifier	out_ct		8673750	0					
ANR	8674573	PrimaryExpression	3		8673750	1					
ANR	8674574	MemberAccess	out_palette [ out_index ] . red		8673750	1					
ANR	8674575	ArrayIndexing	out_palette [ out_index ]		8673750	0					
ANR	8674576	Identifier	out_palette		8673750	0					
ANR	8674577	Identifier	out_index		8673750	1					
ANR	8674578	Identifier	red		8673750	1					
ANR	8674579	CallExpression	"sample ( pRow , out_ct , out_bd , x , 0 , 0 , 0 )"		8673750	2					
ANR	8674580	Callee	sample		8673750	0					
ANR	8674581	Identifier	sample		8673750	0					
ANR	8674582	ArgumentList	pRow		8673750	1					
ANR	8674583	Argument	pRow		8673750	0					
ANR	8674584	Identifier	pRow		8673750	0					
ANR	8674585	Argument	out_ct		8673750	1					
ANR	8674586	Identifier	out_ct		8673750	0					
ANR	8674587	Argument	out_bd		8673750	2					
ANR	8674588	Identifier	out_bd		8673750	0					
ANR	8674589	Argument	x		8673750	3					
ANR	8674590	Identifier	x		8673750	0					
ANR	8674591	Argument	0		8673750	4					
ANR	8674592	PrimaryExpression	0		8673750	0					
ANR	8674593	Argument	0		8673750	5					
ANR	8674594	PrimaryExpression	0		8673750	0					
ANR	8674595	Argument	0		8673750	6					
ANR	8674596	PrimaryExpression	0		8673750	0					
ANR	8674597	Argument	alpha		8673750	4					
ANR	8674598	Identifier	alpha		8673750	0					
ANR	8674599	Argument	vi . background_red		8673750	5					
ANR	8674600	MemberAccess	vi . background_red		8673750	0					
ANR	8674601	Identifier	vi		8673750	0					
ANR	8674602	Identifier	background_red		8673750	1					
ANR	8674603	ExpressionStatement	"( void ) gamma_component_validate ( ""green"" , & vi , in_ct == 3 ? in_palette [ in_index ] . green : sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . green : sample ( pRow , out_ct , out_bd , x , 1 , 0 , 0 ) , alpha , vi . background_green )"	10348:15:328545:328894	8673750	1	True				
ANR	8674604	CastExpression	"( void ) gamma_component_validate ( ""green"" , & vi , in_ct == 3 ? in_palette [ in_index ] . green : sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . green : sample ( pRow , out_ct , out_bd , x , 1 , 0 , 0 ) , alpha , vi . background_green )"		8673750	0					
ANR	8674605	CastTarget	void		8673750	0					
ANR	8674606	CallExpression	"gamma_component_validate ( ""green"" , & vi , in_ct == 3 ? in_palette [ in_index ] . green : sample ( std , in_ct , in_bd , x , 1 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . green : sample ( pRow , out_ct , out_bd , x , 1 , 0 , 0 ) , alpha , vi . background_green )"		8673750	1					
ANR	8674607	Callee	gamma_component_validate		8673750	0					
ANR	8674608	Identifier	gamma_component_validate		8673750	0					
ANR	8674609	ArgumentList	"""green"""		8673750	1					
ANR	8674610	Argument	"""green"""		8673750	0					
ANR	8674611	PrimaryExpression	"""green"""		8673750	0					
ANR	8674612	Argument	& vi		8673750	1					
ANR	8674613	UnaryOperationExpression	& vi		8673750	0					
ANR	8674614	UnaryOperator	&		8673750	0					
ANR	8674615	Identifier	vi		8673750	1					
ANR	8674616	Argument	"in_ct == 3 ? in_palette [ in_index ] . green : sample ( std , in_ct , in_bd , x , 1 , 0 , 0 )"		8673750	2					
ANR	8674617	ConditionalExpression	"in_ct == 3 ? in_palette [ in_index ] . green : sample ( std , in_ct , in_bd , x , 1 , 0 , 0 )"		8673750	0					
ANR	8674618	Condition	in_ct == 3		8673750	0					
ANR	8674619	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674620	Identifier	in_ct		8673750	0					
ANR	8674621	PrimaryExpression	3		8673750	1					
ANR	8674622	MemberAccess	in_palette [ in_index ] . green		8673750	1					
ANR	8674623	ArrayIndexing	in_palette [ in_index ]		8673750	0					
ANR	8674624	Identifier	in_palette		8673750	0					
ANR	8674625	Identifier	in_index		8673750	1					
ANR	8674626	Identifier	green		8673750	1					
ANR	8674627	CallExpression	"sample ( std , in_ct , in_bd , x , 1 , 0 , 0 )"		8673750	2					
ANR	8674628	Callee	sample		8673750	0					
ANR	8674629	Identifier	sample		8673750	0					
ANR	8674630	ArgumentList	std		8673750	1					
ANR	8674631	Argument	std		8673750	0					
ANR	8674632	Identifier	std		8673750	0					
ANR	8674633	Argument	in_ct		8673750	1					
ANR	8674634	Identifier	in_ct		8673750	0					
ANR	8674635	Argument	in_bd		8673750	2					
ANR	8674636	Identifier	in_bd		8673750	0					
ANR	8674637	Argument	x		8673750	3					
ANR	8674638	Identifier	x		8673750	0					
ANR	8674639	Argument	1		8673750	4					
ANR	8674640	PrimaryExpression	1		8673750	0					
ANR	8674641	Argument	0		8673750	5					
ANR	8674642	PrimaryExpression	0		8673750	0					
ANR	8674643	Argument	0		8673750	6					
ANR	8674644	PrimaryExpression	0		8673750	0					
ANR	8674645	Argument	"out_ct == 3 ? out_palette [ out_index ] . green : sample ( pRow , out_ct , out_bd , x , 1 , 0 , 0 )"		8673750	3					
ANR	8674646	ConditionalExpression	"out_ct == 3 ? out_palette [ out_index ] . green : sample ( pRow , out_ct , out_bd , x , 1 , 0 , 0 )"		8673750	0					
ANR	8674647	Condition	out_ct == 3		8673750	0					
ANR	8674648	EqualityExpression	out_ct == 3		8673750	0		==			
ANR	8674649	Identifier	out_ct		8673750	0					
ANR	8674650	PrimaryExpression	3		8673750	1					
ANR	8674651	MemberAccess	out_palette [ out_index ] . green		8673750	1					
ANR	8674652	ArrayIndexing	out_palette [ out_index ]		8673750	0					
ANR	8674653	Identifier	out_palette		8673750	0					
ANR	8674654	Identifier	out_index		8673750	1					
ANR	8674655	Identifier	green		8673750	1					
ANR	8674656	CallExpression	"sample ( pRow , out_ct , out_bd , x , 1 , 0 , 0 )"		8673750	2					
ANR	8674657	Callee	sample		8673750	0					
ANR	8674658	Identifier	sample		8673750	0					
ANR	8674659	ArgumentList	pRow		8673750	1					
ANR	8674660	Argument	pRow		8673750	0					
ANR	8674661	Identifier	pRow		8673750	0					
ANR	8674662	Argument	out_ct		8673750	1					
ANR	8674663	Identifier	out_ct		8673750	0					
ANR	8674664	Argument	out_bd		8673750	2					
ANR	8674665	Identifier	out_bd		8673750	0					
ANR	8674666	Argument	x		8673750	3					
ANR	8674667	Identifier	x		8673750	0					
ANR	8674668	Argument	1		8673750	4					
ANR	8674669	PrimaryExpression	1		8673750	0					
ANR	8674670	Argument	0		8673750	5					
ANR	8674671	PrimaryExpression	0		8673750	0					
ANR	8674672	Argument	0		8673750	6					
ANR	8674673	PrimaryExpression	0		8673750	0					
ANR	8674674	Argument	alpha		8673750	4					
ANR	8674675	Identifier	alpha		8673750	0					
ANR	8674676	Argument	vi . background_green		8673750	5					
ANR	8674677	MemberAccess	vi . background_green		8673750	0					
ANR	8674678	Identifier	vi		8673750	0					
ANR	8674679	Identifier	background_green		8673750	1					
ANR	8674680	ExpressionStatement	"( void ) gamma_component_validate ( ""blue"" , & vi , in_ct == 3 ? in_palette [ in_index ] . blue : sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . blue : sample ( pRow , out_ct , out_bd , x , 2 , 0 , 0 ) , alpha , vi . background_blue )"	10355:15:328912:329257	8673750	2	True				
ANR	8674681	CastExpression	"( void ) gamma_component_validate ( ""blue"" , & vi , in_ct == 3 ? in_palette [ in_index ] . blue : sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . blue : sample ( pRow , out_ct , out_bd , x , 2 , 0 , 0 ) , alpha , vi . background_blue )"		8673750	0					
ANR	8674682	CastTarget	void		8673750	0					
ANR	8674683	CallExpression	"gamma_component_validate ( ""blue"" , & vi , in_ct == 3 ? in_palette [ in_index ] . blue : sample ( std , in_ct , in_bd , x , 2 , 0 , 0 ) , out_ct == 3 ? out_palette [ out_index ] . blue : sample ( pRow , out_ct , out_bd , x , 2 , 0 , 0 ) , alpha , vi . background_blue )"		8673750	1					
ANR	8674684	Callee	gamma_component_validate		8673750	0					
ANR	8674685	Identifier	gamma_component_validate		8673750	0					
ANR	8674686	ArgumentList	"""blue"""		8673750	1					
ANR	8674687	Argument	"""blue"""		8673750	0					
ANR	8674688	PrimaryExpression	"""blue"""		8673750	0					
ANR	8674689	Argument	& vi		8673750	1					
ANR	8674690	UnaryOperationExpression	& vi		8673750	0					
ANR	8674691	UnaryOperator	&		8673750	0					
ANR	8674692	Identifier	vi		8673750	1					
ANR	8674693	Argument	"in_ct == 3 ? in_palette [ in_index ] . blue : sample ( std , in_ct , in_bd , x , 2 , 0 , 0 )"		8673750	2					
ANR	8674694	ConditionalExpression	"in_ct == 3 ? in_palette [ in_index ] . blue : sample ( std , in_ct , in_bd , x , 2 , 0 , 0 )"		8673750	0					
ANR	8674695	Condition	in_ct == 3		8673750	0					
ANR	8674696	EqualityExpression	in_ct == 3		8673750	0		==			
ANR	8674697	Identifier	in_ct		8673750	0					
ANR	8674698	PrimaryExpression	3		8673750	1					
ANR	8674699	MemberAccess	in_palette [ in_index ] . blue		8673750	1					
ANR	8674700	ArrayIndexing	in_palette [ in_index ]		8673750	0					
ANR	8674701	Identifier	in_palette		8673750	0					
ANR	8674702	Identifier	in_index		8673750	1					
ANR	8674703	Identifier	blue		8673750	1					
ANR	8674704	CallExpression	"sample ( std , in_ct , in_bd , x , 2 , 0 , 0 )"		8673750	2					
ANR	8674705	Callee	sample		8673750	0					
ANR	8674706	Identifier	sample		8673750	0					
ANR	8674707	ArgumentList	std		8673750	1					
ANR	8674708	Argument	std		8673750	0					
ANR	8674709	Identifier	std		8673750	0					
ANR	8674710	Argument	in_ct		8673750	1					
ANR	8674711	Identifier	in_ct		8673750	0					
ANR	8674712	Argument	in_bd		8673750	2					
ANR	8674713	Identifier	in_bd		8673750	0					
ANR	8674714	Argument	x		8673750	3					
ANR	8674715	Identifier	x		8673750	0					
ANR	8674716	Argument	2		8673750	4					
ANR	8674717	PrimaryExpression	2		8673750	0					
ANR	8674718	Argument	0		8673750	5					
ANR	8674719	PrimaryExpression	0		8673750	0					
ANR	8674720	Argument	0		8673750	6					
ANR	8674721	PrimaryExpression	0		8673750	0					
ANR	8674722	Argument	"out_ct == 3 ? out_palette [ out_index ] . blue : sample ( pRow , out_ct , out_bd , x , 2 , 0 , 0 )"		8673750	3					
ANR	8674723	ConditionalExpression	"out_ct == 3 ? out_palette [ out_index ] . blue : sample ( pRow , out_ct , out_bd , x , 2 , 0 , 0 )"		8673750	0					
ANR	8674724	Condition	out_ct == 3		8673750	0					
ANR	8674725	EqualityExpression	out_ct == 3		8673750	0		==			
ANR	8674726	Identifier	out_ct		8673750	0					
ANR	8674727	PrimaryExpression	3		8673750	1					
ANR	8674728	MemberAccess	out_palette [ out_index ] . blue		8673750	1					
ANR	8674729	ArrayIndexing	out_palette [ out_index ]		8673750	0					
ANR	8674730	Identifier	out_palette		8673750	0					
ANR	8674731	Identifier	out_index		8673750	1					
ANR	8674732	Identifier	blue		8673750	1					
ANR	8674733	CallExpression	"sample ( pRow , out_ct , out_bd , x , 2 , 0 , 0 )"		8673750	2					
ANR	8674734	Callee	sample		8673750	0					
ANR	8674735	Identifier	sample		8673750	0					
ANR	8674736	ArgumentList	pRow		8673750	1					
ANR	8674737	Argument	pRow		8673750	0					
ANR	8674738	Identifier	pRow		8673750	0					
ANR	8674739	Argument	out_ct		8673750	1					
ANR	8674740	Identifier	out_ct		8673750	0					
ANR	8674741	Argument	out_bd		8673750	2					
ANR	8674742	Identifier	out_bd		8673750	0					
ANR	8674743	Argument	x		8673750	3					
ANR	8674744	Identifier	x		8673750	0					
ANR	8674745	Argument	2		8673750	4					
ANR	8674746	PrimaryExpression	2		8673750	0					
ANR	8674747	Argument	0		8673750	5					
ANR	8674748	PrimaryExpression	0		8673750	0					
ANR	8674749	Argument	0		8673750	6					
ANR	8674750	PrimaryExpression	0		8673750	0					
ANR	8674751	Argument	alpha		8673750	4					
ANR	8674752	Identifier	alpha		8673750	0					
ANR	8674753	Argument	vi . background_blue		8673750	5					
ANR	8674754	MemberAccess	vi . background_blue		8673750	0					
ANR	8674755	Identifier	vi		8673750	0					
ANR	8674756	Identifier	background_blue		8673750	1					
ANR	8674757	ElseStatement	else		8673750	0					
ANR	8674758	IfStatement	"if ( memcmp ( std , pRow , cbRow ) != 0 )"		8673750	0					
ANR	8674759	Condition	"memcmp ( std , pRow , cbRow ) != 0"	10365:15:329308:329336	8673750	0	True				
ANR	8674760	EqualityExpression	"memcmp ( std , pRow , cbRow ) != 0"		8673750	0		!=			
ANR	8674761	CallExpression	"memcmp ( std , pRow , cbRow )"		8673750	0					
ANR	8674762	Callee	memcmp		8673750	0					
ANR	8674763	Identifier	memcmp		8673750	0					
ANR	8674764	ArgumentList	std		8673750	1					
ANR	8674765	Argument	std		8673750	0					
ANR	8674766	Identifier	std		8673750	0					
ANR	8674767	Argument	pRow		8673750	1					
ANR	8674768	Identifier	pRow		8673750	0					
ANR	8674769	Argument	cbRow		8673750	2					
ANR	8674770	Identifier	cbRow		8673750	0					
ANR	8674771	PrimaryExpression	0		8673750	1					
ANR	8674772	CompoundStatement		207:9:8638:8650	8673750	1					
ANR	8674773	IdentifierDeclStatement	char msg [ 64 ] ;	10367:9:329356:329368	8673750	0	True				
ANR	8674774	IdentifierDecl	msg [ 64 ]		8673750	0					
ANR	8674775	IdentifierDeclType	char [ 64 ]		8673750	0					
ANR	8674776	Identifier	msg		8673750	1					
ANR	8674777	PrimaryExpression	64		8673750	2					
ANR	8674778	ExpressionStatement	"sprintf ( msg , ""gamma: below threshold row %lu changed"" , ( unsigned long ) y )"	10370:9:329444:329528	8673750	1	True				
ANR	8674779	CallExpression	"sprintf ( msg , ""gamma: below threshold row %lu changed"" , ( unsigned long ) y )"		8673750	0					
ANR	8674780	Callee	sprintf		8673750	0					
ANR	8674781	Identifier	sprintf		8673750	0					
ANR	8674782	ArgumentList	msg		8673750	1					
ANR	8674783	Argument	msg		8673750	0					
ANR	8674784	Identifier	msg		8673750	0					
ANR	8674785	Argument	"""gamma: below threshold row %lu changed"""		8673750	1					
ANR	8674786	PrimaryExpression	"""gamma: below threshold row %lu changed"""		8673750	0					
ANR	8674787	Argument	( unsigned long ) y		8673750	2					
ANR	8674788	CastExpression	( unsigned long ) y		8673750	0					
ANR	8674789	CastTarget	unsigned long		8673750	0					
ANR	8674790	Identifier	y		8673750	1					
ANR	8674791	ExpressionStatement	"png_error ( pp , msg )"	10373:9:329540:329558	8673750	2	True				
ANR	8674792	CallExpression	"png_error ( pp , msg )"		8673750	0					
ANR	8674793	Callee	png_error		8673750	0					
ANR	8674794	Identifier	png_error		8673750	0					
ANR	8674795	ArgumentList	pp		8673750	1					
ANR	8674796	Argument	pp		8673750	0					
ANR	8674797	Identifier	pp		8673750	0					
ANR	8674798	Argument	msg		8673750	1					
ANR	8674799	Identifier	msg		8673750	0					
ANR	8674800	ExpressionStatement	dp -> this . ps -> validated = 1	10377:3:329596:329622	8673750	29	True				
ANR	8674801	AssignmentExpression	dp -> this . ps -> validated = 1		8673750	0		=			
ANR	8674802	PtrMemberAccess	dp -> this . ps -> validated		8673750	0					
ANR	8674803	MemberAccess	dp -> this . ps		8673750	0					
ANR	8674804	PtrMemberAccess	dp -> this		8673750	0					
ANR	8674805	Identifier	dp		8673750	0					
ANR	8674806	Identifier	this		8673750	1					
ANR	8674807	Identifier	ps		8673750	1					
ANR	8674808	Identifier	validated		8673750	1					
ANR	8674809	PrimaryExpression	1		8673750	1					
ANR	8674810	ReturnType	static void		8673750	1					
ANR	8674811	Identifier	gamma_image_validate		8673750	2					
ANR	8674812	ParameterList	"gamma_display * dp , png_const_structp pp , png_infop pi"		8673750	3					
ANR	8674813	Parameter	gamma_display * dp	10159:21:320659:320675	8673750	0	True				
ANR	8674814	ParameterType	gamma_display *		8673750	0					
ANR	8674815	Identifier	dp		8673750	1					
ANR	8674816	Parameter	png_const_structp pp	10159:40:320678:320697	8673750	1	True				
ANR	8674817	ParameterType	png_const_structp		8673750	0					
ANR	8674818	Identifier	pp		8673750	1					
ANR	8674819	Parameter	png_infop pi	10160:3:320703:320714	8673750	2	True				
ANR	8674820	ParameterType	png_infop		8673750	0					
ANR	8674821	Identifier	pi		8673750	1					
ANR	8674822	CFGEntryNode	ENTRY		8673750		True				
ANR	8674823	CFGExitNode	EXIT		8673750		True				
ANR	8674824	Symbol	pp		8673750						
ANR	8674825	Symbol	vi . sbit_max		8673750						
ANR	8674826	Symbol	msg		8673750						
ANR	8674827	Symbol	ps		8673750						
ANR	8674828	Symbol	read_palette		8673750						
ANR	8674829	Symbol	dp -> this . bit_depth		8673750						
ANR	8674830	Symbol	samples_per_pixel		8673750						
ANR	8674831	Symbol	output_alpha		8673750						
ANR	8674832	Symbol	dp -> this . ps -> validated		8673750						
ANR	8674833	Symbol	input_alpha		8673750						
ANR	8674834	Symbol	* dp -> this . palette		8673750						
ANR	8674835	Symbol	vi . gamma_correction		8673750						
ANR	8674836	Symbol	out_is_transparent		8673750						
ANR	8674837	Symbol	dp -> this . transparent . blue		8673750						
ANR	8674838	Symbol	dp		8673750						
ANR	8674839	Symbol	out_ct		8673750						
ANR	8674840	Symbol	memcmp		8673750						
ANR	8674841	Symbol	* in_index		8673750						
ANR	8674842	Symbol	* out_index		8673750						
ANR	8674843	Symbol	in_palette		8673750						
ANR	8674844	Symbol	vi . background_blue		8673750						
ANR	8674845	Symbol	out_palette [ out_index ] . green		8673750						
ANR	8674846	Symbol	dp -> this		8673750						
ANR	8674847	Symbol	out_index		8673750						
ANR	8674848	Symbol	std		8673750						
ANR	8674849	Symbol	png_get_bit_depth		8673750						
ANR	8674850	Symbol	process_tRNS		8673750						
ANR	8674851	Symbol	* in_palette		8673750						
ANR	8674852	Symbol	out_palette		8673750						
ANR	8674853	Symbol	vi . background_red		8673750						
ANR	8674854	Symbol	dp -> this . w		8673750						
ANR	8674855	Symbol	in_ct		8673750						
ANR	8674856	Symbol	vi . background_green		8673750						
ANR	8674857	Symbol	dp -> this . palette [ in_index ] . alpha		8673750						
ANR	8674858	Symbol	dp -> this . palette		8673750						
ANR	8674859	Symbol	vi		8673750						
ANR	8674860	Symbol	dp -> this . cbRow		8673750						
ANR	8674861	Symbol	in_is_transparent		8673750						
ANR	8674862	Symbol	dp -> this . ps		8673750						
ANR	8674863	Symbol	PNG_COLOR_MASK_ALPHA		8673750						
ANR	8674864	Symbol	dp -> this . h		8673750						
ANR	8674865	Symbol	processing		8673750						
ANR	8674866	Symbol	store_image_row		8673750						
ANR	8674867	Symbol	in_palette [ in_index ] . red		8673750						
ANR	8674868	Symbol	out_palette [ out_index ] . blue		8673750						
ANR	8674869	Symbol	out_bd		8673750						
ANR	8674870	Symbol	out_npalette		8673750						
ANR	8674871	Symbol	vi . isbit_shift		8673750						
ANR	8674872	Symbol	dp -> this . colour_type		8673750						
ANR	8674873	Symbol	gamma_component_validate		8673750						
ANR	8674874	Symbol	dp -> this . transparent . red		8673750						
ANR	8674875	Symbol	* dp		8673750						
ANR	8674876	Symbol	alpha		8673750						
ANR	8674877	Symbol	in_index		8673750						
ANR	8674878	Symbol	out_palette [ out_index ] . alpha		8673750						
ANR	8674879	Symbol	cbRow		8673750						
ANR	8674880	Symbol	out_palette [ out_index ] . red		8673750						
ANR	8674881	Symbol	png_get_color_type		8673750						
ANR	8674882	Symbol	* dp -> this . ps		8673750						
ANR	8674883	Symbol	in_bd		8673750						
ANR	8674884	Symbol	dp -> this . transparent		8673750						
ANR	8674885	Symbol	h		8673750						
ANR	8674886	Symbol	dp -> this . transparent . green		8673750						
ANR	8674887	Symbol	PNG_COLOR_MASK_COLOR		8673750						
ANR	8674888	Symbol	dp -> this . is_transparent		8673750						
ANR	8674889	Symbol	dp -> this . has_tRNS		8673750						
ANR	8674890	Symbol	sample		8673750						
ANR	8674891	Symbol	dp -> threshold_test		8673750						
ANR	8674892	Symbol	& out_npalette		8673750						
ANR	8674893	Symbol	* dp -> this		8673750						
ANR	8674894	Symbol	in_palette [ in_index ] . blue		8673750						
ANR	8674895	Symbol	* out_palette		8673750						
ANR	8674896	Symbol	in_palette [ in_index ] . green		8673750						
ANR	8674897	Symbol	w		8673750						
ANR	8674898	Symbol	x		8673750						
ANR	8674899	Symbol	pi		8673750						
ANR	8674900	Symbol	y		8673750						
ANR	8674901	Symbol	* * dp		8673750						
ANR	8674902	Symbol	vi . do_background		8673750						
ANR	8674903	Symbol	& vi		8673750						
ANR	8674904	Symbol	pRow		8673750						
ANR	8674905	Function	gamma_end	10380:0:329627:329909							
ANR	8674906	FunctionDef	"gamma_end (png_structp ppIn , png_infop pi)"		8674905	0					
ANR	8674907	CompoundStatement		10382:0:329690:329909	8674905	0					
ANR	8674908	IdentifierDeclStatement	png_const_structp pp = ppIn ;	10383:3:329695:329722	8674905	0	True				
ANR	8674909	IdentifierDecl	pp = ppIn		8674905	0					
ANR	8674910	IdentifierDeclType	png_const_structp		8674905	0					
ANR	8674911	Identifier	pp		8674905	1					
ANR	8674912	AssignmentExpression	pp = ppIn		8674905	2		=			
ANR	8674913	Identifier	ppIn		8674905	0					
ANR	8674914	Identifier	ppIn		8674905	1					
ANR	8674915	Statement	gamma_display	10384:3:329727:329739	8674905	1	True				
ANR	8674916	Statement	*	10384:17:329741:329741	8674905	2	True				
ANR	8674917	Statement	dp	10384:18:329742:329743	8674905	3	True				
ANR	8674918	Statement	=	10384:21:329745:329745	8674905	4	True				
ANR	8674919	Statement	voidcast	10384:23:329747:329754	8674905	5	True				
ANR	8674920	Statement	(	10384:31:329755:329755	8674905	6	True				
ANR	8674921	Statement	gamma_display	10384:32:329756:329768	8674905	7	True				
ANR	8674922	Statement	*	10384:45:329769:329769	8674905	8	True				
ANR	8674923	Statement	","	10384:46:329770:329770	8674905	9	True				
ANR	8674924	Statement	png_get_progressive_ptr	10384:48:329772:329794	8674905	10	True				
ANR	8674925	Statement	(	10384:71:329795:329795	8674905	11	True				
ANR	8674926	Statement	pp	10384:72:329796:329797	8674905	12	True				
ANR	8674927	Statement	)	10384:74:329798:329798	8674905	13	True				
ANR	8674928	Statement	)	10384:75:329799:329799	8674905	14	True				
ANR	8674929	ExpressionStatement		10384:76:329800:329800	8674905	15	True				
ANR	8674930	IfStatement	if ( ! dp -> this . speed )		8674905	16					
ANR	8674931	Condition	! dp -> this . speed	10386:7:329810:329824	8674905	0	True				
ANR	8674932	UnaryOperationExpression	! dp -> this . speed		8674905	0					
ANR	8674933	UnaryOperator	!		8674905	0					
ANR	8674934	MemberAccess	dp -> this . speed		8674905	1					
ANR	8674935	PtrMemberAccess	dp -> this		8674905	0					
ANR	8674936	Identifier	dp		8674905	0					
ANR	8674937	Identifier	this		8674905	1					
ANR	8674938	Identifier	speed		8674905	1					
ANR	8674939	ExpressionStatement	"gamma_image_validate ( dp , pp , pi )"	10387:6:329833:329865	8674905	1	True				
ANR	8674940	CallExpression	"gamma_image_validate ( dp , pp , pi )"		8674905	0					
ANR	8674941	Callee	gamma_image_validate		8674905	0					
ANR	8674942	Identifier	gamma_image_validate		8674905	0					
ANR	8674943	ArgumentList	dp		8674905	1					
ANR	8674944	Argument	dp		8674905	0					
ANR	8674945	Identifier	dp		8674905	0					
ANR	8674946	Argument	pp		8674905	1					
ANR	8674947	Identifier	pp		8674905	0					
ANR	8674948	Argument	pi		8674905	2					
ANR	8674949	Identifier	pi		8674905	0					
ANR	8674950	ElseStatement	else		8674905	0					
ANR	8674951	ExpressionStatement	dp -> this . ps -> validated = 1	10389:6:329881:329907	8674905	0	True				
ANR	8674952	AssignmentExpression	dp -> this . ps -> validated = 1		8674905	0		=			
ANR	8674953	PtrMemberAccess	dp -> this . ps -> validated		8674905	0					
ANR	8674954	MemberAccess	dp -> this . ps		8674905	0					
ANR	8674955	PtrMemberAccess	dp -> this		8674905	0					
ANR	8674956	Identifier	dp		8674905	0					
ANR	8674957	Identifier	this		8674905	1					
ANR	8674958	Identifier	ps		8674905	1					
ANR	8674959	Identifier	validated		8674905	1					
ANR	8674960	PrimaryExpression	1		8674905	1					
ANR	8674961	ReturnType	static void PNGCBAPI		8674905	1					
ANR	8674962	Identifier	gamma_end		8674905	2					
ANR	8674963	ParameterList	"png_structp ppIn , png_infop pi"		8674905	3					
ANR	8674964	Parameter	png_structp ppIn	10381:10:329658:329673	8674905	0	True				
ANR	8674965	ParameterType	png_structp		8674905	0					
ANR	8674966	Identifier	ppIn		8674905	1					
ANR	8674967	Parameter	png_infop pi	10381:28:329676:329687	8674905	1	True				
ANR	8674968	ParameterType	png_infop		8674905	0					
ANR	8674969	Identifier	pi		8674905	1					
ANR	8674970	CFGEntryNode	ENTRY		8674905		True				
ANR	8674971	CFGExitNode	EXIT		8674905		True				
ANR	8674972	Symbol	pp		8674905						
ANR	8674973	Symbol	* dp -> this		8674905						
ANR	8674974	Symbol	ppIn		8674905						
ANR	8674975	Symbol	dp -> this . speed		8674905						
ANR	8674976	Symbol	* dp		8674905						
ANR	8674977	Symbol	* dp -> this . ps		8674905						
ANR	8674978	Symbol	dp -> this . ps		8674905						
ANR	8674979	Symbol	dp -> this . ps -> validated		8674905						
ANR	8674980	Symbol	pi		8674905						
ANR	8674981	Symbol	* * dp		8674905						
ANR	8674982	Symbol	dp		8674905						
ANR	8674983	Symbol	dp -> this		8674905						
ANR	8674984	Function	gamma_test	10398:0:330127:334640							
ANR	8674985	FunctionDef	"gamma_test (png_modifier * pmIn , const png_byte colour_typeIn , const png_byte bit_depthIn , const int palette_numberIn , const int interlace_typeIn , const double file_gammaIn , const double screen_gammaIn , const png_byte sbitIn , const int threshold_testIn , const char * name , const int use_input_precisionIn , const int scale16In , const int expand16In , const int do_backgroundIn , const png_color_16 * bkgd_colorIn , double bkgd_gammaIn)"		8674984	0					
ANR	8674986	CompoundStatement		10408:0:330599:334640	8674984	0					
ANR	8674987	IdentifierDeclStatement	gamma_display d ;	10409:3:330604:330619	8674984	0	True				
ANR	8674988	IdentifierDecl	d		8674984	0					
ANR	8674989	IdentifierDeclType	gamma_display		8674984	0					
ANR	8674990	Identifier	d		8674984	1					
ANR	8674991	ExpressionStatement	"context ( & pmIn -> this , fault )"	10410:3:330624:330651	8674984	1	True				
ANR	8674992	CallExpression	"context ( & pmIn -> this , fault )"		8674984	0					
ANR	8674993	Callee	context		8674984	0					
ANR	8674994	Identifier	context		8674984	0					
ANR	8674995	ArgumentList	& pmIn -> this		8674984	1					
ANR	8674996	Argument	& pmIn -> this		8674984	0					
ANR	8674997	UnaryOperationExpression	& pmIn -> this		8674984	0					
ANR	8674998	UnaryOperator	&		8674984	0					
ANR	8674999	PtrMemberAccess	pmIn -> this		8674984	1					
ANR	8675000	Identifier	pmIn		8674984	0					
ANR	8675001	Identifier	this		8674984	1					
ANR	8675002	Argument	fault		8674984	1					
ANR	8675003	Identifier	fault		8674984	0					
ANR	8675004	ExpressionStatement	"gamma_display_init ( & d , pmIn , FILEID ( colour_typeIn , bit_depthIn , palette_numberIn , interlace_typeIn , 0 , 0 , 0 ) , file_gammaIn , screen_gammaIn , sbitIn , threshold_testIn , use_input_precisionIn , scale16In , expand16In , do_backgroundIn , bkgd_colorIn , bkgd_gammaIn )"	10412:3:330657:330937	8674984	2	True				
ANR	8675005	CallExpression	"gamma_display_init ( & d , pmIn , FILEID ( colour_typeIn , bit_depthIn , palette_numberIn , interlace_typeIn , 0 , 0 , 0 ) , file_gammaIn , screen_gammaIn , sbitIn , threshold_testIn , use_input_precisionIn , scale16In , expand16In , do_backgroundIn , bkgd_colorIn , bkgd_gammaIn )"		8674984	0					
ANR	8675006	Callee	gamma_display_init		8674984	0					
ANR	8675007	Identifier	gamma_display_init		8674984	0					
ANR	8675008	ArgumentList	& d		8674984	1					
ANR	8675009	Argument	& d		8674984	0					
ANR	8675010	UnaryOperationExpression	& d		8674984	0					
ANR	8675011	UnaryOperator	&		8674984	0					
ANR	8675012	Identifier	d		8674984	1					
ANR	8675013	Argument	pmIn		8674984	1					
ANR	8675014	Identifier	pmIn		8674984	0					
ANR	8675015	Argument	"FILEID ( colour_typeIn , bit_depthIn , palette_numberIn , interlace_typeIn , 0 , 0 , 0 )"		8674984	2					
ANR	8675016	CallExpression	"FILEID ( colour_typeIn , bit_depthIn , palette_numberIn , interlace_typeIn , 0 , 0 , 0 )"		8674984	0					
ANR	8675017	Callee	FILEID		8674984	0					
ANR	8675018	Identifier	FILEID		8674984	0					
ANR	8675019	ArgumentList	colour_typeIn		8674984	1					
ANR	8675020	Argument	colour_typeIn		8674984	0					
ANR	8675021	Identifier	colour_typeIn		8674984	0					
ANR	8675022	Argument	bit_depthIn		8674984	1					
ANR	8675023	Identifier	bit_depthIn		8674984	0					
ANR	8675024	Argument	palette_numberIn		8674984	2					
ANR	8675025	Identifier	palette_numberIn		8674984	0					
ANR	8675026	Argument	interlace_typeIn		8674984	3					
ANR	8675027	Identifier	interlace_typeIn		8674984	0					
ANR	8675028	Argument	0		8674984	4					
ANR	8675029	PrimaryExpression	0		8674984	0					
ANR	8675030	Argument	0		8674984	5					
ANR	8675031	PrimaryExpression	0		8674984	0					
ANR	8675032	Argument	0		8674984	6					
ANR	8675033	PrimaryExpression	0		8674984	0					
ANR	8675034	Argument	file_gammaIn		8674984	3					
ANR	8675035	Identifier	file_gammaIn		8674984	0					
ANR	8675036	Argument	screen_gammaIn		8674984	4					
ANR	8675037	Identifier	screen_gammaIn		8674984	0					
ANR	8675038	Argument	sbitIn		8674984	5					
ANR	8675039	Identifier	sbitIn		8674984	0					
ANR	8675040	Argument	threshold_testIn		8674984	6					
ANR	8675041	Identifier	threshold_testIn		8674984	0					
ANR	8675042	Argument	use_input_precisionIn		8674984	7					
ANR	8675043	Identifier	use_input_precisionIn		8674984	0					
ANR	8675044	Argument	scale16In		8674984	8					
ANR	8675045	Identifier	scale16In		8674984	0					
ANR	8675046	Argument	expand16In		8674984	9					
ANR	8675047	Identifier	expand16In		8674984	0					
ANR	8675048	Argument	do_backgroundIn		8674984	10					
ANR	8675049	Identifier	do_backgroundIn		8674984	0					
ANR	8675050	Argument	bkgd_colorIn		8674984	11					
ANR	8675051	Identifier	bkgd_colorIn		8674984	0					
ANR	8675052	Argument	bkgd_gammaIn		8674984	12					
ANR	8675053	Identifier	bkgd_gammaIn		8674984	0					
ANR	8675054	Statement	Try	10418:3:330943:330945	8674984	3	True				
ANR	8675055	CompoundStatement		17:6:468:494	8674984	4					
ANR	8675056	IdentifierDeclStatement	png_structp pp ;	10420:6:330958:330972	8674984	0	True				
ANR	8675057	IdentifierDecl	pp		8674984	0					
ANR	8675058	IdentifierDeclType	png_structp		8674984	0					
ANR	8675059	Identifier	pp		8674984	1					
ANR	8675060	IdentifierDeclStatement	png_infop pi ;	10421:6:330980:330992	8674984	1	True				
ANR	8675061	IdentifierDecl	pi		8674984	0					
ANR	8675062	IdentifierDeclType	png_infop		8674984	0					
ANR	8675063	Identifier	pi		8674984	1					
ANR	8675064	IdentifierDeclStatement	gama_modification gama_mod ;	10422:6:331000:331026	8674984	2	True				
ANR	8675065	IdentifierDecl	gama_mod		8674984	0					
ANR	8675066	IdentifierDeclType	gama_modification		8674984	0					
ANR	8675067	Identifier	gama_mod		8674984	1					
ANR	8675068	IdentifierDeclStatement	srgb_modification srgb_mod ;	10423:6:331034:331060	8674984	3	True				
ANR	8675069	IdentifierDecl	srgb_mod		8674984	0					
ANR	8675070	IdentifierDeclType	srgb_modification		8674984	0					
ANR	8675071	Identifier	srgb_mod		8674984	1					
ANR	8675072	IdentifierDeclStatement	sbit_modification sbit_mod ;	10424:6:331068:331094	8674984	4	True				
ANR	8675073	IdentifierDecl	sbit_mod		8674984	0					
ANR	8675074	IdentifierDeclType	sbit_modification		8674984	0					
ANR	8675075	Identifier	sbit_mod		8674984	1					
ANR	8675076	ExpressionStatement	d . pm -> encoding_counter = 0	10427:6:331171:331197	8674984	5	True				
ANR	8675077	AssignmentExpression	d . pm -> encoding_counter = 0		8674984	0		=			
ANR	8675078	PtrMemberAccess	d . pm -> encoding_counter		8674984	0					
ANR	8675079	MemberAccess	d . pm		8674984	0					
ANR	8675080	Identifier	d		8674984	0					
ANR	8675081	Identifier	pm		8674984	1					
ANR	8675082	Identifier	encoding_counter		8674984	1					
ANR	8675083	PrimaryExpression	0		8674984	1					
ANR	8675084	ExpressionStatement	modifier_set_encoding ( d . pm )	10428:6:331205:331232	8674984	6	True				
ANR	8675085	CallExpression	modifier_set_encoding ( d . pm )		8674984	0					
ANR	8675086	Callee	modifier_set_encoding		8674984	0					
ANR	8675087	Identifier	modifier_set_encoding		8674984	0					
ANR	8675088	ArgumentList	d . pm		8674984	1					
ANR	8675089	Argument	d . pm		8674984	0					
ANR	8675090	MemberAccess	d . pm		8674984	0					
ANR	8675091	Identifier	d		8674984	0					
ANR	8675092	Identifier	pm		8674984	1					
ANR	8675093	ExpressionStatement	d . pm -> current_gamma = d . file_gamma	10429:6:331269:331303	8674984	7	True				
ANR	8675094	AssignmentExpression	d . pm -> current_gamma = d . file_gamma		8674984	0		=			
ANR	8675095	PtrMemberAccess	d . pm -> current_gamma		8674984	0					
ANR	8675096	MemberAccess	d . pm		8674984	0					
ANR	8675097	Identifier	d		8674984	0					
ANR	8675098	Identifier	pm		8674984	1					
ANR	8675099	Identifier	current_gamma		8674984	1					
ANR	8675100	MemberAccess	d . file_gamma		8674984	1					
ANR	8675101	Identifier	d		8674984	0					
ANR	8675102	Identifier	file_gamma		8674984	1					
ANR	8675103	ExpressionStatement	d . pm -> modifications = NULL	10434:6:331463:331489	8674984	8	True				
ANR	8675104	AssignmentExpression	d . pm -> modifications = NULL		8674984	0		=			
ANR	8675105	PtrMemberAccess	d . pm -> modifications		8674984	0					
ANR	8675106	MemberAccess	d . pm		8674984	0					
ANR	8675107	Identifier	d		8674984	0					
ANR	8675108	Identifier	pm		8674984	1					
ANR	8675109	Identifier	modifications		8674984	1					
ANR	8675110	Identifier	NULL		8674984	1					
ANR	8675111	ExpressionStatement	"gama_modification_init ( & gama_mod , d . pm , d . file_gamma )"	10435:6:331497:331550	8674984	9	True				
ANR	8675112	CallExpression	"gama_modification_init ( & gama_mod , d . pm , d . file_gamma )"		8674984	0					
ANR	8675113	Callee	gama_modification_init		8674984	0					
ANR	8675114	Identifier	gama_modification_init		8674984	0					
ANR	8675115	ArgumentList	& gama_mod		8674984	1					
ANR	8675116	Argument	& gama_mod		8674984	0					
ANR	8675117	UnaryOperationExpression	& gama_mod		8674984	0					
ANR	8675118	UnaryOperator	&		8674984	0					
ANR	8675119	Identifier	gama_mod		8674984	1					
ANR	8675120	Argument	d . pm		8674984	1					
ANR	8675121	MemberAccess	d . pm		8674984	0					
ANR	8675122	Identifier	d		8674984	0					
ANR	8675123	Identifier	pm		8674984	1					
ANR	8675124	Argument	d . file_gamma		8674984	2					
ANR	8675125	MemberAccess	d . file_gamma		8674984	0					
ANR	8675126	Identifier	d		8674984	0					
ANR	8675127	Identifier	file_gamma		8674984	1					
ANR	8675128	ExpressionStatement	"srgb_modification_init ( & srgb_mod , d . pm , 127 )"	10436:6:331558:331613	8674984	10	True				
ANR	8675129	CallExpression	"srgb_modification_init ( & srgb_mod , d . pm , 127 )"		8674984	0					
ANR	8675130	Callee	srgb_modification_init		8674984	0					
ANR	8675131	Identifier	srgb_modification_init		8674984	0					
ANR	8675132	ArgumentList	& srgb_mod		8674984	1					
ANR	8675133	Argument	& srgb_mod		8674984	0					
ANR	8675134	UnaryOperationExpression	& srgb_mod		8674984	0					
ANR	8675135	UnaryOperator	&		8674984	0					
ANR	8675136	Identifier	srgb_mod		8674984	1					
ANR	8675137	Argument	d . pm		8674984	1					
ANR	8675138	MemberAccess	d . pm		8674984	0					
ANR	8675139	Identifier	d		8674984	0					
ANR	8675140	Identifier	pm		8674984	1					
ANR	8675141	Argument	127		8674984	2					
ANR	8675142	PrimaryExpression	127		8674984	0					
ANR	8675143	IfStatement	if ( d . sbit > 0 )		8674984	11					
ANR	8675144	Condition	d . sbit > 0	10437:10:331625:331634	8674984	0	True				
ANR	8675145	RelationalExpression	d . sbit > 0		8674984	0		>			
ANR	8675146	MemberAccess	d . sbit		8674984	0					
ANR	8675147	Identifier	d		8674984	0					
ANR	8675148	Identifier	sbit		8674984	1					
ANR	8675149	PrimaryExpression	0		8674984	1					
ANR	8675150	ExpressionStatement	"sbit_modification_init ( & sbit_mod , d . pm , d . sbit )"	10438:9:331646:331693	8674984	1	True				
ANR	8675151	CallExpression	"sbit_modification_init ( & sbit_mod , d . pm , d . sbit )"		8674984	0					
ANR	8675152	Callee	sbit_modification_init		8674984	0					
ANR	8675153	Identifier	sbit_modification_init		8674984	0					
ANR	8675154	ArgumentList	& sbit_mod		8674984	1					
ANR	8675155	Argument	& sbit_mod		8674984	0					
ANR	8675156	UnaryOperationExpression	& sbit_mod		8674984	0					
ANR	8675157	UnaryOperator	&		8674984	0					
ANR	8675158	Identifier	sbit_mod		8674984	1					
ANR	8675159	Argument	d . pm		8674984	1					
ANR	8675160	MemberAccess	d . pm		8674984	0					
ANR	8675161	Identifier	d		8674984	0					
ANR	8675162	Identifier	pm		8674984	1					
ANR	8675163	Argument	d . sbit		8674984	2					
ANR	8675164	MemberAccess	d . sbit		8674984	0					
ANR	8675165	Identifier	d		8674984	0					
ANR	8675166	Identifier	sbit		8674984	1					
ANR	8675167	ExpressionStatement	modification_reset ( d . pm -> modifications )	10440:6:331702:331741	8674984	12	True				
ANR	8675168	CallExpression	modification_reset ( d . pm -> modifications )		8674984	0					
ANR	8675169	Callee	modification_reset		8674984	0					
ANR	8675170	Identifier	modification_reset		8674984	0					
ANR	8675171	ArgumentList	d . pm -> modifications		8674984	1					
ANR	8675172	Argument	d . pm -> modifications		8674984	0					
ANR	8675173	PtrMemberAccess	d . pm -> modifications		8674984	0					
ANR	8675174	MemberAccess	d . pm		8674984	0					
ANR	8675175	Identifier	d		8674984	0					
ANR	8675176	Identifier	pm		8674984	1					
ANR	8675177	Identifier	modifications		8674984	1					
ANR	8675178	ExpressionStatement	"pp = set_modifier_for_read ( d . pm , & pi , d . this . id , name )"	10443:6:331802:331856	8674984	13	True				
ANR	8675179	AssignmentExpression	"pp = set_modifier_for_read ( d . pm , & pi , d . this . id , name )"		8674984	0		=			
ANR	8675180	Identifier	pp		8674984	0					
ANR	8675181	CallExpression	"set_modifier_for_read ( d . pm , & pi , d . this . id , name )"		8674984	1					
ANR	8675182	Callee	set_modifier_for_read		8674984	0					
ANR	8675183	Identifier	set_modifier_for_read		8674984	0					
ANR	8675184	ArgumentList	d . pm		8674984	1					
ANR	8675185	Argument	d . pm		8674984	0					
ANR	8675186	MemberAccess	d . pm		8674984	0					
ANR	8675187	Identifier	d		8674984	0					
ANR	8675188	Identifier	pm		8674984	1					
ANR	8675189	Argument	& pi		8674984	1					
ANR	8675190	UnaryOperationExpression	& pi		8674984	0					
ANR	8675191	UnaryOperator	&		8674984	0					
ANR	8675192	Identifier	pi		8674984	1					
ANR	8675193	Argument	d . this . id		8674984	2					
ANR	8675194	MemberAccess	d . this . id		8674984	0					
ANR	8675195	MemberAccess	d . this		8674984	0					
ANR	8675196	Identifier	d		8674984	0					
ANR	8675197	Identifier	this		8674984	1					
ANR	8675198	Identifier	id		8674984	1					
ANR	8675199	Argument	name		8674984	3					
ANR	8675200	Identifier	name		8674984	0					
ANR	8675201	ExpressionStatement	standard_palette_init ( & d . this )	10444:6:331864:331894	8674984	14	True				
ANR	8675202	CallExpression	standard_palette_init ( & d . this )		8674984	0					
ANR	8675203	Callee	standard_palette_init		8674984	0					
ANR	8675204	Identifier	standard_palette_init		8674984	0					
ANR	8675205	ArgumentList	& d . this		8674984	1					
ANR	8675206	Argument	& d . this		8674984	0					
ANR	8675207	UnaryOperationExpression	& d . this		8674984	0					
ANR	8675208	UnaryOperator	&		8674984	0					
ANR	8675209	MemberAccess	d . this		8674984	1					
ANR	8675210	Identifier	d		8674984	0					
ANR	8675211	Identifier	this		8674984	1					
ANR	8675212	IfStatement	if ( d . pm -> this . progressive )		8674984	15					
ANR	8675213	Condition	d . pm -> this . progressive	10447:10:331956:331977	8674984	0	True				
ANR	8675214	MemberAccess	d . pm -> this . progressive		8674984	0					
ANR	8675215	PtrMemberAccess	d . pm -> this		8674984	0					
ANR	8675216	MemberAccess	d . pm		8674984	0					
ANR	8675217	Identifier	d		8674984	0					
ANR	8675218	Identifier	pm		8674984	1					
ANR	8675219	Identifier	this		8674984	1					
ANR	8675220	Identifier	progressive		8674984	1					
ANR	8675221	CompoundStatement		41:6:1386:1386	8674984	1					
ANR	8675222	ExpressionStatement	"png_set_progressive_read_fn ( pp , & d , gamma_info , progressive_row , gamma_end )"	10450:9:332069:332156	8674984	0	True				
ANR	8675223	CallExpression	"png_set_progressive_read_fn ( pp , & d , gamma_info , progressive_row , gamma_end )"		8674984	0					
ANR	8675224	Callee	png_set_progressive_read_fn		8674984	0					
ANR	8675225	Identifier	png_set_progressive_read_fn		8674984	0					
ANR	8675226	ArgumentList	pp		8674984	1					
ANR	8675227	Argument	pp		8674984	0					
ANR	8675228	Identifier	pp		8674984	0					
ANR	8675229	Argument	& d		8674984	1					
ANR	8675230	UnaryOperationExpression	& d		8674984	0					
ANR	8675231	UnaryOperator	&		8674984	0					
ANR	8675232	Identifier	d		8674984	1					
ANR	8675233	Argument	gamma_info		8674984	2					
ANR	8675234	Identifier	gamma_info		8674984	0					
ANR	8675235	Argument	progressive_row		8674984	3					
ANR	8675236	Identifier	progressive_row		8674984	0					
ANR	8675237	Argument	gamma_end		8674984	4					
ANR	8675238	Identifier	gamma_end		8674984	0					
ANR	8675239	ExpressionStatement	"modifier_progressive_read ( d . pm , pp , pi )"	10454:9:332237:332276	8674984	1	True				
ANR	8675240	CallExpression	"modifier_progressive_read ( d . pm , pp , pi )"		8674984	0					
ANR	8675241	Callee	modifier_progressive_read		8674984	0					
ANR	8675242	Identifier	modifier_progressive_read		8674984	0					
ANR	8675243	ArgumentList	d . pm		8674984	1					
ANR	8675244	Argument	d . pm		8674984	0					
ANR	8675245	MemberAccess	d . pm		8674984	0					
ANR	8675246	Identifier	d		8674984	0					
ANR	8675247	Identifier	pm		8674984	1					
ANR	8675248	Argument	pp		8674984	1					
ANR	8675249	Identifier	pp		8674984	0					
ANR	8675250	Argument	pi		8674984	2					
ANR	8675251	Identifier	pi		8674984	0					
ANR	8675252	ElseStatement	else		8674984	0					
ANR	8675253	CompoundStatement		50:6:1703:1703	8674984	0					
ANR	8675254	ExpressionStatement	"png_set_read_fn ( pp , d . pm , modifier_read )"	10459:9:332367:332407	8674984	0	True				
ANR	8675255	CallExpression	"png_set_read_fn ( pp , d . pm , modifier_read )"		8674984	0					
ANR	8675256	Callee	png_set_read_fn		8674984	0					
ANR	8675257	Identifier	png_set_read_fn		8674984	0					
ANR	8675258	ArgumentList	pp		8674984	1					
ANR	8675259	Argument	pp		8674984	0					
ANR	8675260	Identifier	pp		8674984	0					
ANR	8675261	Argument	d . pm		8674984	1					
ANR	8675262	MemberAccess	d . pm		8674984	0					
ANR	8675263	Identifier	d		8674984	0					
ANR	8675264	Identifier	pm		8674984	1					
ANR	8675265	Argument	modifier_read		8674984	2					
ANR	8675266	Identifier	modifier_read		8674984	0					
ANR	8675267	ExpressionStatement	"png_read_info ( pp , pi )"	10462:9:332459:332480	8674984	1	True				
ANR	8675268	CallExpression	"png_read_info ( pp , pi )"		8674984	0					
ANR	8675269	Callee	png_read_info		8674984	0					
ANR	8675270	Identifier	png_read_info		8674984	0					
ANR	8675271	ArgumentList	pp		8674984	1					
ANR	8675272	Argument	pp		8674984	0					
ANR	8675273	Identifier	pp		8674984	0					
ANR	8675274	Argument	pi		8674984	1					
ANR	8675275	Identifier	pi		8674984	0					
ANR	8675276	ExpressionStatement	"gamma_info_imp ( & d , pp , pi )"	10465:9:332568:332594	8674984	2	True				
ANR	8675277	CallExpression	"gamma_info_imp ( & d , pp , pi )"		8674984	0					
ANR	8675278	Callee	gamma_info_imp		8674984	0					
ANR	8675279	Identifier	gamma_info_imp		8674984	0					
ANR	8675280	ArgumentList	& d		8674984	1					
ANR	8675281	Argument	& d		8674984	0					
ANR	8675282	UnaryOperationExpression	& d		8674984	0					
ANR	8675283	UnaryOperator	&		8674984	0					
ANR	8675284	Identifier	d		8674984	1					
ANR	8675285	Argument	pp		8674984	1					
ANR	8675286	Identifier	pp		8674984	0					
ANR	8675287	Argument	pi		8674984	2					
ANR	8675288	Identifier	pi		8674984	0					
ANR	8675289	ExpressionStatement	"sequential_row ( & d . this , pp , pi , - 1 , 0 )"	10467:9:332606:332644	8674984	3	True				
ANR	8675290	CallExpression	"sequential_row ( & d . this , pp , pi , - 1 , 0 )"		8674984	0					
ANR	8675291	Callee	sequential_row		8674984	0					
ANR	8675292	Identifier	sequential_row		8674984	0					
ANR	8675293	ArgumentList	& d . this		8674984	1					
ANR	8675294	Argument	& d . this		8674984	0					
ANR	8675295	UnaryOperationExpression	& d . this		8674984	0					
ANR	8675296	UnaryOperator	&		8674984	0					
ANR	8675297	MemberAccess	d . this		8674984	1					
ANR	8675298	Identifier	d		8674984	0					
ANR	8675299	Identifier	this		8674984	1					
ANR	8675300	Argument	pp		8674984	1					
ANR	8675301	Identifier	pp		8674984	0					
ANR	8675302	Argument	pi		8674984	2					
ANR	8675303	Identifier	pi		8674984	0					
ANR	8675304	Argument	- 1		8674984	3					
ANR	8675305	UnaryOperationExpression	- 1		8674984	0					
ANR	8675306	UnaryOperator	-		8674984	0					
ANR	8675307	PrimaryExpression	1		8674984	1					
ANR	8675308	Argument	0		8674984	4					
ANR	8675309	PrimaryExpression	0		8674984	0					
ANR	8675310	IfStatement	if ( ! d . this . speed )		8674984	4					
ANR	8675311	Condition	! d . this . speed	10469:13:332660:332672	8674984	0	True				
ANR	8675312	UnaryOperationExpression	! d . this . speed		8674984	0					
ANR	8675313	UnaryOperator	!		8674984	0					
ANR	8675314	MemberAccess	d . this . speed		8674984	1					
ANR	8675315	MemberAccess	d . this		8674984	0					
ANR	8675316	Identifier	d		8674984	0					
ANR	8675317	Identifier	this		8674984	1					
ANR	8675318	Identifier	speed		8674984	1					
ANR	8675319	ExpressionStatement	"gamma_image_validate ( & d , pp , pi )"	10470:12:332687:332719	8674984	1	True				
ANR	8675320	CallExpression	"gamma_image_validate ( & d , pp , pi )"		8674984	0					
ANR	8675321	Callee	gamma_image_validate		8674984	0					
ANR	8675322	Identifier	gamma_image_validate		8674984	0					
ANR	8675323	ArgumentList	& d		8674984	1					
ANR	8675324	Argument	& d		8674984	0					
ANR	8675325	UnaryOperationExpression	& d		8674984	0					
ANR	8675326	UnaryOperator	&		8674984	0					
ANR	8675327	Identifier	d		8674984	1					
ANR	8675328	Argument	pp		8674984	1					
ANR	8675329	Identifier	pp		8674984	0					
ANR	8675330	Argument	pi		8674984	2					
ANR	8675331	Identifier	pi		8674984	0					
ANR	8675332	ElseStatement	else		8674984	0					
ANR	8675333	ExpressionStatement	d . this . ps -> validated = 1	10472:12:332747:332771	8674984	0	True				
ANR	8675334	AssignmentExpression	d . this . ps -> validated = 1		8674984	0		=			
ANR	8675335	PtrMemberAccess	d . this . ps -> validated		8674984	0					
ANR	8675336	MemberAccess	d . this . ps		8674984	0					
ANR	8675337	MemberAccess	d . this		8674984	0					
ANR	8675338	Identifier	d		8674984	0					
ANR	8675339	Identifier	this		8674984	1					
ANR	8675340	Identifier	ps		8674984	1					
ANR	8675341	Identifier	validated		8674984	1					
ANR	8675342	PrimaryExpression	1		8674984	1					
ANR	8675343	ExpressionStatement	modifier_reset ( d . pm )	10475:6:332788:332808	8674984	16	True				
ANR	8675344	CallExpression	modifier_reset ( d . pm )		8674984	0					
ANR	8675345	Callee	modifier_reset		8674984	0					
ANR	8675346	Identifier	modifier_reset		8674984	0					
ANR	8675347	ArgumentList	d . pm		8674984	1					
ANR	8675348	Argument	d . pm		8674984	0					
ANR	8675349	MemberAccess	d . pm		8674984	0					
ANR	8675350	Identifier	d		8674984	0					
ANR	8675351	Identifier	pm		8674984	1					
ANR	8675352	IfStatement	if ( d . pm -> log && ! d . threshold_test && ! d . this . speed )		8674984	17					
ANR	8675353	Condition	d . pm -> log && ! d . threshold_test && ! d . this . speed	10477:10:332821:332867	8674984	0	True				
ANR	8675354	AndExpression	d . pm -> log && ! d . threshold_test && ! d . this . speed		8674984	0		&&			
ANR	8675355	PtrMemberAccess	d . pm -> log		8674984	0					
ANR	8675356	MemberAccess	d . pm		8674984	0					
ANR	8675357	Identifier	d		8674984	0					
ANR	8675358	Identifier	pm		8674984	1					
ANR	8675359	Identifier	log		8674984	1					
ANR	8675360	AndExpression	! d . threshold_test && ! d . this . speed		8674984	1		&&			
ANR	8675361	UnaryOperationExpression	! d . threshold_test		8674984	0					
ANR	8675362	UnaryOperator	!		8674984	0					
ANR	8675363	MemberAccess	d . threshold_test		8674984	1					
ANR	8675364	Identifier	d		8674984	0					
ANR	8675365	Identifier	threshold_test		8674984	1					
ANR	8675366	UnaryOperationExpression	! d . this . speed		8674984	1					
ANR	8675367	UnaryOperator	!		8674984	0					
ANR	8675368	MemberAccess	d . this . speed		8674984	1					
ANR	8675369	MemberAccess	d . this		8674984	0					
ANR	8675370	Identifier	d		8674984	0					
ANR	8675371	Identifier	this		8674984	1					
ANR	8675372	Identifier	speed		8674984	1					
ANR	8675373	ExpressionStatement	"fprintf ( stderr , ""%d bit %s %s: max error %f (%.2g, %2g%%)\\n"" , d . this . bit_depth , colour_types [ d . this . colour_type ] , name , d . maxerrout , d . maxerrabs , 100 * d . maxerrpc )"	10478:9:332879:333064	8674984	1	True				
ANR	8675374	CallExpression	"fprintf ( stderr , ""%d bit %s %s: max error %f (%.2g, %2g%%)\\n"" , d . this . bit_depth , colour_types [ d . this . colour_type ] , name , d . maxerrout , d . maxerrabs , 100 * d . maxerrpc )"		8674984	0					
ANR	8675375	Callee	fprintf		8674984	0					
ANR	8675376	Identifier	fprintf		8674984	0					
ANR	8675377	ArgumentList	stderr		8674984	1					
ANR	8675378	Argument	stderr		8674984	0					
ANR	8675379	Identifier	stderr		8674984	0					
ANR	8675380	Argument	"""%d bit %s %s: max error %f (%.2g, %2g%%)\\n"""		8674984	1					
ANR	8675381	PrimaryExpression	"""%d bit %s %s: max error %f (%.2g, %2g%%)\\n"""		8674984	0					
ANR	8675382	Argument	d . this . bit_depth		8674984	2					
ANR	8675383	MemberAccess	d . this . bit_depth		8674984	0					
ANR	8675384	MemberAccess	d . this		8674984	0					
ANR	8675385	Identifier	d		8674984	0					
ANR	8675386	Identifier	this		8674984	1					
ANR	8675387	Identifier	bit_depth		8674984	1					
ANR	8675388	Argument	colour_types [ d . this . colour_type ]		8674984	3					
ANR	8675389	ArrayIndexing	colour_types [ d . this . colour_type ]		8674984	0					
ANR	8675390	Identifier	colour_types		8674984	0					
ANR	8675391	MemberAccess	d . this . colour_type		8674984	1					
ANR	8675392	MemberAccess	d . this		8674984	0					
ANR	8675393	Identifier	d		8674984	0					
ANR	8675394	Identifier	this		8674984	1					
ANR	8675395	Identifier	colour_type		8674984	1					
ANR	8675396	Argument	name		8674984	4					
ANR	8675397	Identifier	name		8674984	0					
ANR	8675398	Argument	d . maxerrout		8674984	5					
ANR	8675399	MemberAccess	d . maxerrout		8674984	0					
ANR	8675400	Identifier	d		8674984	0					
ANR	8675401	Identifier	maxerrout		8674984	1					
ANR	8675402	Argument	d . maxerrabs		8674984	6					
ANR	8675403	MemberAccess	d . maxerrabs		8674984	0					
ANR	8675404	Identifier	d		8674984	0					
ANR	8675405	Identifier	maxerrabs		8674984	1					
ANR	8675406	Argument	100 * d . maxerrpc		8674984	7					
ANR	8675407	MultiplicativeExpression	100 * d . maxerrpc		8674984	0		*			
ANR	8675408	PrimaryExpression	100		8674984	0					
ANR	8675409	MemberAccess	d . maxerrpc		8674984	1					
ANR	8675410	Identifier	d		8674984	0					
ANR	8675411	Identifier	maxerrpc		8674984	1					
ANR	8675412	IfStatement	if ( d . this . colour_type == 0 || d . this . colour_type == 4 )		8674984	18					
ANR	8675413	Condition	d . this . colour_type == 0 || d . this . colour_type == 4	10483:10:333117:333166	8674984	0	True				
ANR	8675414	OrExpression	d . this . colour_type == 0 || d . this . colour_type == 4		8674984	0		||			
ANR	8675415	EqualityExpression	d . this . colour_type == 0		8674984	0		==			
ANR	8675416	MemberAccess	d . this . colour_type		8674984	0					
ANR	8675417	MemberAccess	d . this		8674984	0					
ANR	8675418	Identifier	d		8674984	0					
ANR	8675419	Identifier	this		8674984	1					
ANR	8675420	Identifier	colour_type		8674984	1					
ANR	8675421	PrimaryExpression	0		8674984	1					
ANR	8675422	EqualityExpression	d . this . colour_type == 4		8674984	1		==			
ANR	8675423	MemberAccess	d . this . colour_type		8674984	0					
ANR	8675424	MemberAccess	d . this		8674984	0					
ANR	8675425	Identifier	d		8674984	0					
ANR	8675426	Identifier	this		8674984	1					
ANR	8675427	Identifier	colour_type		8674984	1					
ANR	8675428	PrimaryExpression	4		8674984	1					
ANR	8675429	CompoundStatement		77:6:2575:2575	8674984	1					
ANR	8675430	SwitchStatement	switch ( d . this . bit_depth )		8674984	0					
ANR	8675431	Condition	d . this . bit_depth	10485:17:333194:333209	8674984	0	True				
ANR	8675432	MemberAccess	d . this . bit_depth		8674984	0					
ANR	8675433	MemberAccess	d . this		8674984	0					
ANR	8675434	Identifier	d		8674984	0					
ANR	8675435	Identifier	this		8674984	1					
ANR	8675436	Identifier	bit_depth		8674984	1					
ANR	8675437	CompoundStatement		79:9:2621:2621	8674984	1					
ANR	8675438	Label	case 1 :	10487:9:333232:333238	8674984	0	True				
ANR	8675439	BreakStatement	break ;	10488:12:333252:333257	8674984	1	True				
ANR	8675440	Label	case 2 :	10490:9:333269:333275	8674984	2	True				
ANR	8675441	IfStatement	if ( d . maxerrout > d . pm -> error_gray_2 )		8674984	3					
ANR	8675442	Condition	d . maxerrout > d . pm -> error_gray_2	10491:16:333293:333324	8674984	0	True				
ANR	8675443	RelationalExpression	d . maxerrout > d . pm -> error_gray_2		8674984	0		>			
ANR	8675444	MemberAccess	d . maxerrout		8674984	0					
ANR	8675445	Identifier	d		8674984	0					
ANR	8675446	Identifier	maxerrout		8674984	1					
ANR	8675447	PtrMemberAccess	d . pm -> error_gray_2		8674984	1					
ANR	8675448	MemberAccess	d . pm		8674984	0					
ANR	8675449	Identifier	d		8674984	0					
ANR	8675450	Identifier	pm		8674984	1					
ANR	8675451	Identifier	error_gray_2		8674984	1					
ANR	8675452	ExpressionStatement	d . pm -> error_gray_2 = d . maxerrout	10492:15:333342:333374	8674984	1	True				
ANR	8675453	AssignmentExpression	d . pm -> error_gray_2 = d . maxerrout		8674984	0		=			
ANR	8675454	PtrMemberAccess	d . pm -> error_gray_2		8674984	0					
ANR	8675455	MemberAccess	d . pm		8674984	0					
ANR	8675456	Identifier	d		8674984	0					
ANR	8675457	Identifier	pm		8674984	1					
ANR	8675458	Identifier	error_gray_2		8674984	1					
ANR	8675459	MemberAccess	d . maxerrout		8674984	1					
ANR	8675460	Identifier	d		8674984	0					
ANR	8675461	Identifier	maxerrout		8674984	1					
ANR	8675462	BreakStatement	break ;	10494:12:333389:333394	8674984	4	True				
ANR	8675463	Label	case 4 :	10496:9:333406:333412	8674984	5	True				
ANR	8675464	IfStatement	if ( d . maxerrout > d . pm -> error_gray_4 )		8674984	6					
ANR	8675465	Condition	d . maxerrout > d . pm -> error_gray_4	10497:16:333430:333461	8674984	0	True				
ANR	8675466	RelationalExpression	d . maxerrout > d . pm -> error_gray_4		8674984	0		>			
ANR	8675467	MemberAccess	d . maxerrout		8674984	0					
ANR	8675468	Identifier	d		8674984	0					
ANR	8675469	Identifier	maxerrout		8674984	1					
ANR	8675470	PtrMemberAccess	d . pm -> error_gray_4		8674984	1					
ANR	8675471	MemberAccess	d . pm		8674984	0					
ANR	8675472	Identifier	d		8674984	0					
ANR	8675473	Identifier	pm		8674984	1					
ANR	8675474	Identifier	error_gray_4		8674984	1					
ANR	8675475	ExpressionStatement	d . pm -> error_gray_4 = d . maxerrout	10498:15:333479:333511	8674984	1	True				
ANR	8675476	AssignmentExpression	d . pm -> error_gray_4 = d . maxerrout		8674984	0		=			
ANR	8675477	PtrMemberAccess	d . pm -> error_gray_4		8674984	0					
ANR	8675478	MemberAccess	d . pm		8674984	0					
ANR	8675479	Identifier	d		8674984	0					
ANR	8675480	Identifier	pm		8674984	1					
ANR	8675481	Identifier	error_gray_4		8674984	1					
ANR	8675482	MemberAccess	d . maxerrout		8674984	1					
ANR	8675483	Identifier	d		8674984	0					
ANR	8675484	Identifier	maxerrout		8674984	1					
ANR	8675485	BreakStatement	break ;	10500:12:333526:333531	8674984	7	True				
ANR	8675486	Label	case 8 :	10502:9:333543:333549	8674984	8	True				
ANR	8675487	IfStatement	if ( d . maxerrout > d . pm -> error_gray_8 )		8674984	9					
ANR	8675488	Condition	d . maxerrout > d . pm -> error_gray_8	10503:16:333567:333598	8674984	0	True				
ANR	8675489	RelationalExpression	d . maxerrout > d . pm -> error_gray_8		8674984	0		>			
ANR	8675490	MemberAccess	d . maxerrout		8674984	0					
ANR	8675491	Identifier	d		8674984	0					
ANR	8675492	Identifier	maxerrout		8674984	1					
ANR	8675493	PtrMemberAccess	d . pm -> error_gray_8		8674984	1					
ANR	8675494	MemberAccess	d . pm		8674984	0					
ANR	8675495	Identifier	d		8674984	0					
ANR	8675496	Identifier	pm		8674984	1					
ANR	8675497	Identifier	error_gray_8		8674984	1					
ANR	8675498	ExpressionStatement	d . pm -> error_gray_8 = d . maxerrout	10504:15:333616:333648	8674984	1	True				
ANR	8675499	AssignmentExpression	d . pm -> error_gray_8 = d . maxerrout		8674984	0		=			
ANR	8675500	PtrMemberAccess	d . pm -> error_gray_8		8674984	0					
ANR	8675501	MemberAccess	d . pm		8674984	0					
ANR	8675502	Identifier	d		8674984	0					
ANR	8675503	Identifier	pm		8674984	1					
ANR	8675504	Identifier	error_gray_8		8674984	1					
ANR	8675505	MemberAccess	d . maxerrout		8674984	1					
ANR	8675506	Identifier	d		8674984	0					
ANR	8675507	Identifier	maxerrout		8674984	1					
ANR	8675508	BreakStatement	break ;	10506:12:333663:333668	8674984	10	True				
ANR	8675509	Label	case 16 :	10508:9:333680:333687	8674984	11	True				
ANR	8675510	IfStatement	if ( d . maxerrout > d . pm -> error_gray_16 )		8674984	12					
ANR	8675511	Condition	d . maxerrout > d . pm -> error_gray_16	10509:16:333705:333737	8674984	0	True				
ANR	8675512	RelationalExpression	d . maxerrout > d . pm -> error_gray_16		8674984	0		>			
ANR	8675513	MemberAccess	d . maxerrout		8674984	0					
ANR	8675514	Identifier	d		8674984	0					
ANR	8675515	Identifier	maxerrout		8674984	1					
ANR	8675516	PtrMemberAccess	d . pm -> error_gray_16		8674984	1					
ANR	8675517	MemberAccess	d . pm		8674984	0					
ANR	8675518	Identifier	d		8674984	0					
ANR	8675519	Identifier	pm		8674984	1					
ANR	8675520	Identifier	error_gray_16		8674984	1					
ANR	8675521	ExpressionStatement	d . pm -> error_gray_16 = d . maxerrout	10510:15:333755:333788	8674984	1	True				
ANR	8675522	AssignmentExpression	d . pm -> error_gray_16 = d . maxerrout		8674984	0		=			
ANR	8675523	PtrMemberAccess	d . pm -> error_gray_16		8674984	0					
ANR	8675524	MemberAccess	d . pm		8674984	0					
ANR	8675525	Identifier	d		8674984	0					
ANR	8675526	Identifier	pm		8674984	1					
ANR	8675527	Identifier	error_gray_16		8674984	1					
ANR	8675528	MemberAccess	d . maxerrout		8674984	1					
ANR	8675529	Identifier	d		8674984	0					
ANR	8675530	Identifier	maxerrout		8674984	1					
ANR	8675531	BreakStatement	break ;	10512:12:333803:333808	8674984	13	True				
ANR	8675532	Label	default :	10514:9:333820:333827	8674984	14	True				
ANR	8675533	Identifier	default		8674984	0					
ANR	8675534	ExpressionStatement	"png_error ( pp , ""bad bit depth (internal: 1)"" )"	10515:12:333841:333885	8674984	15	True				
ANR	8675535	CallExpression	"png_error ( pp , ""bad bit depth (internal: 1)"" )"		8674984	0					
ANR	8675536	Callee	png_error		8674984	0					
ANR	8675537	Identifier	png_error		8674984	0					
ANR	8675538	ArgumentList	pp		8674984	1					
ANR	8675539	Argument	pp		8674984	0					
ANR	8675540	Identifier	pp		8674984	0					
ANR	8675541	Argument	"""bad bit depth (internal: 1)"""		8674984	1					
ANR	8675542	PrimaryExpression	"""bad bit depth (internal: 1)"""		8674984	0					
ANR	8675543	ElseStatement	else		8674984	0					
ANR	8675544	IfStatement	if ( d . this . colour_type == 2 || d . this . colour_type == 6 )		8674984	0					
ANR	8675545	Condition	d . this . colour_type == 2 || d . this . colour_type == 6	10519:15:333922:333971	8674984	0	True				
ANR	8675546	OrExpression	d . this . colour_type == 2 || d . this . colour_type == 6		8674984	0		||			
ANR	8675547	EqualityExpression	d . this . colour_type == 2		8674984	0		==			
ANR	8675548	MemberAccess	d . this . colour_type		8674984	0					
ANR	8675549	MemberAccess	d . this		8674984	0					
ANR	8675550	Identifier	d		8674984	0					
ANR	8675551	Identifier	this		8674984	1					
ANR	8675552	Identifier	colour_type		8674984	1					
ANR	8675553	PrimaryExpression	2		8674984	1					
ANR	8675554	EqualityExpression	d . this . colour_type == 6		8674984	1		==			
ANR	8675555	MemberAccess	d . this . colour_type		8674984	0					
ANR	8675556	MemberAccess	d . this		8674984	0					
ANR	8675557	Identifier	d		8674984	0					
ANR	8675558	Identifier	this		8674984	1					
ANR	8675559	Identifier	colour_type		8674984	1					
ANR	8675560	PrimaryExpression	6		8674984	1					
ANR	8675561	CompoundStatement		113:6:3380:3380	8674984	1					
ANR	8675562	SwitchStatement	switch ( d . this . bit_depth )		8674984	0					
ANR	8675563	Condition	d . this . bit_depth	10521:17:333999:334014	8674984	0	True				
ANR	8675564	MemberAccess	d . this . bit_depth		8674984	0					
ANR	8675565	MemberAccess	d . this		8674984	0					
ANR	8675566	Identifier	d		8674984	0					
ANR	8675567	Identifier	this		8674984	1					
ANR	8675568	Identifier	bit_depth		8674984	1					
ANR	8675569	CompoundStatement		115:9:3426:3426	8674984	1					
ANR	8675570	Label	case 8 :	10523:9:334037:334043	8674984	0	True				
ANR	8675571	IfStatement	if ( d . maxerrout > d . pm -> error_color_8 )		8674984	1					
ANR	8675572	Condition	d . maxerrout > d . pm -> error_color_8	10525:16:334062:334094	8674984	0	True				
ANR	8675573	RelationalExpression	d . maxerrout > d . pm -> error_color_8		8674984	0		>			
ANR	8675574	MemberAccess	d . maxerrout		8674984	0					
ANR	8675575	Identifier	d		8674984	0					
ANR	8675576	Identifier	maxerrout		8674984	1					
ANR	8675577	PtrMemberAccess	d . pm -> error_color_8		8674984	1					
ANR	8675578	MemberAccess	d . pm		8674984	0					
ANR	8675579	Identifier	d		8674984	0					
ANR	8675580	Identifier	pm		8674984	1					
ANR	8675581	Identifier	error_color_8		8674984	1					
ANR	8675582	ExpressionStatement	d . pm -> error_color_8 = d . maxerrout	10526:15:334112:334145	8674984	1	True				
ANR	8675583	AssignmentExpression	d . pm -> error_color_8 = d . maxerrout		8674984	0		=			
ANR	8675584	PtrMemberAccess	d . pm -> error_color_8		8674984	0					
ANR	8675585	MemberAccess	d . pm		8674984	0					
ANR	8675586	Identifier	d		8674984	0					
ANR	8675587	Identifier	pm		8674984	1					
ANR	8675588	Identifier	error_color_8		8674984	1					
ANR	8675589	MemberAccess	d . maxerrout		8674984	1					
ANR	8675590	Identifier	d		8674984	0					
ANR	8675591	Identifier	maxerrout		8674984	1					
ANR	8675592	BreakStatement	break ;	10528:12:334160:334165	8674984	2	True				
ANR	8675593	Label	case 16 :	10530:9:334177:334184	8674984	3	True				
ANR	8675594	IfStatement	if ( d . maxerrout > d . pm -> error_color_16 )		8674984	4					
ANR	8675595	Condition	d . maxerrout > d . pm -> error_color_16	10532:16:334203:334236	8674984	0	True				
ANR	8675596	RelationalExpression	d . maxerrout > d . pm -> error_color_16		8674984	0		>			
ANR	8675597	MemberAccess	d . maxerrout		8674984	0					
ANR	8675598	Identifier	d		8674984	0					
ANR	8675599	Identifier	maxerrout		8674984	1					
ANR	8675600	PtrMemberAccess	d . pm -> error_color_16		8674984	1					
ANR	8675601	MemberAccess	d . pm		8674984	0					
ANR	8675602	Identifier	d		8674984	0					
ANR	8675603	Identifier	pm		8674984	1					
ANR	8675604	Identifier	error_color_16		8674984	1					
ANR	8675605	ExpressionStatement	d . pm -> error_color_16 = d . maxerrout	10533:15:334254:334288	8674984	1	True				
ANR	8675606	AssignmentExpression	d . pm -> error_color_16 = d . maxerrout		8674984	0		=			
ANR	8675607	PtrMemberAccess	d . pm -> error_color_16		8674984	0					
ANR	8675608	MemberAccess	d . pm		8674984	0					
ANR	8675609	Identifier	d		8674984	0					
ANR	8675610	Identifier	pm		8674984	1					
ANR	8675611	Identifier	error_color_16		8674984	1					
ANR	8675612	MemberAccess	d . maxerrout		8674984	1					
ANR	8675613	Identifier	d		8674984	0					
ANR	8675614	Identifier	maxerrout		8674984	1					
ANR	8675615	BreakStatement	break ;	10535:12:334303:334308	8674984	5	True				
ANR	8675616	Label	default :	10537:9:334320:334327	8674984	6	True				
ANR	8675617	Identifier	default		8674984	0					
ANR	8675618	ExpressionStatement	"png_error ( pp , ""bad bit depth (internal: 2)"" )"	10538:12:334341:334385	8674984	7	True				
ANR	8675619	CallExpression	"png_error ( pp , ""bad bit depth (internal: 2)"" )"		8674984	0					
ANR	8675620	Callee	png_error		8674984	0					
ANR	8675621	Identifier	png_error		8674984	0					
ANR	8675622	ArgumentList	pp		8674984	1					
ANR	8675623	Argument	pp		8674984	0					
ANR	8675624	Identifier	pp		8674984	0					
ANR	8675625	Argument	"""bad bit depth (internal: 2)"""		8674984	1					
ANR	8675626	PrimaryExpression	"""bad bit depth (internal: 2)"""		8674984	0					
ANR	8675627	ElseStatement	else		8674984	0					
ANR	8675628	IfStatement	if ( d . this . colour_type == 3 )		8674984	0					
ANR	8675629	Condition	d . this . colour_type == 3	10542:15:334422:334444	8674984	0	True				
ANR	8675630	EqualityExpression	d . this . colour_type == 3		8674984	0		==			
ANR	8675631	MemberAccess	d . this . colour_type		8674984	0					
ANR	8675632	MemberAccess	d . this		8674984	0					
ANR	8675633	Identifier	d		8674984	0					
ANR	8675634	Identifier	this		8674984	1					
ANR	8675635	Identifier	colour_type		8674984	1					
ANR	8675636	PrimaryExpression	3		8674984	1					
ANR	8675637	CompoundStatement		136:6:3853:3853	8674984	1					
ANR	8675638	IfStatement	if ( d . maxerrout > d . pm -> error_indexed )		8674984	0					
ANR	8675639	Condition	d . maxerrout > d . pm -> error_indexed	10544:13:334468:334500	8674984	0	True				
ANR	8675640	RelationalExpression	d . maxerrout > d . pm -> error_indexed		8674984	0		>			
ANR	8675641	MemberAccess	d . maxerrout		8674984	0					
ANR	8675642	Identifier	d		8674984	0					
ANR	8675643	Identifier	maxerrout		8674984	1					
ANR	8675644	PtrMemberAccess	d . pm -> error_indexed		8674984	1					
ANR	8675645	MemberAccess	d . pm		8674984	0					
ANR	8675646	Identifier	d		8674984	0					
ANR	8675647	Identifier	pm		8674984	1					
ANR	8675648	Identifier	error_indexed		8674984	1					
ANR	8675649	ExpressionStatement	d . pm -> error_indexed = d . maxerrout	10545:12:334515:334548	8674984	1	True				
ANR	8675650	AssignmentExpression	d . pm -> error_indexed = d . maxerrout		8674984	0		=			
ANR	8675651	PtrMemberAccess	d . pm -> error_indexed		8674984	0					
ANR	8675652	MemberAccess	d . pm		8674984	0					
ANR	8675653	Identifier	d		8674984	0					
ANR	8675654	Identifier	pm		8674984	1					
ANR	8675655	Identifier	error_indexed		8674984	1					
ANR	8675656	MemberAccess	d . maxerrout		8674984	1					
ANR	8675657	Identifier	d		8674984	0					
ANR	8675658	Identifier	maxerrout		8674984	1					
ANR	8675659	Statement	Catch	10549:3:334567:334571	8674984	5	True				
ANR	8675660	Statement	(	10549:8:334572:334572	8674984	6	True				
ANR	8675661	Statement	fault	10549:9:334573:334577	8674984	7	True				
ANR	8675662	Statement	)	10549:14:334578:334578	8674984	8	True				
ANR	8675663	Statement	modifier_reset	10550:6:334586:334599	8674984	9	True				
ANR	8675664	Statement	(	10550:20:334600:334600	8674984	10	True				
ANR	8675665	Statement	voidcast	10550:21:334601:334608	8674984	11	True				
ANR	8675666	Statement	(	10550:29:334609:334609	8674984	12	True				
ANR	8675667	Statement	png_modifier	10550:30:334610:334621	8674984	13	True				
ANR	8675668	Statement	*	10550:42:334622:334622	8674984	14	True				
ANR	8675669	Statement	","	10550:43:334623:334623	8674984	15	True				
ANR	8675670	Statement	(	10550:44:334624:334624	8674984	16	True				
ANR	8675671	Statement	void	10550:45:334625:334628	8674984	17	True				
ANR	8675672	Statement	*	10550:49:334629:334629	8674984	18	True				
ANR	8675673	Statement	)	10550:50:334630:334630	8674984	19	True				
ANR	8675674	Statement	fault	10550:51:334631:334635	8674984	20	True				
ANR	8675675	Statement	)	10550:56:334636:334636	8674984	21	True				
ANR	8675676	Statement	)	10550:57:334637:334637	8674984	22	True				
ANR	8675677	ExpressionStatement		10550:58:334638:334638	8674984	23	True				
ANR	8675678	ReturnType	static void		8674984	1					
ANR	8675679	Identifier	gamma_test		8674984	2					
ANR	8675680	ParameterList	"png_modifier * pmIn , const png_byte colour_typeIn , const png_byte bit_depthIn , const int palette_numberIn , const int interlace_typeIn , const double file_gammaIn , const double screen_gammaIn , const png_byte sbitIn , const int threshold_testIn , const char * name , const int use_input_precisionIn , const int scale16In , const int expand16In , const int do_backgroundIn , const png_color_16 * bkgd_colorIn , double bkgd_gammaIn"		8674984	3					
ANR	8675681	Parameter	png_modifier * pmIn	10399:11:330150:330167	8674984	0	True				
ANR	8675682	ParameterType	png_modifier *		8674984	0					
ANR	8675683	Identifier	pmIn		8674984	1					
ANR	8675684	Parameter	const png_byte colour_typeIn	10399:31:330170:330197	8674984	1	True				
ANR	8675685	ParameterType	const png_byte		8674984	0					
ANR	8675686	Identifier	colour_typeIn		8674984	1					
ANR	8675687	Parameter	const png_byte bit_depthIn	10400:4:330204:330229	8674984	2	True				
ANR	8675688	ParameterType	const png_byte		8674984	0					
ANR	8675689	Identifier	bit_depthIn		8674984	1					
ANR	8675690	Parameter	const int palette_numberIn	10400:32:330232:330257	8674984	3	True				
ANR	8675691	ParameterType	const int		8674984	0					
ANR	8675692	Identifier	palette_numberIn		8674984	1					
ANR	8675693	Parameter	const int interlace_typeIn	10401:4:330264:330289	8674984	4	True				
ANR	8675694	ParameterType	const int		8674984	0					
ANR	8675695	Identifier	interlace_typeIn		8674984	1					
ANR	8675696	Parameter	const double file_gammaIn	10402:4:330296:330320	8674984	5	True				
ANR	8675697	ParameterType	const double		8674984	0					
ANR	8675698	Identifier	file_gammaIn		8674984	1					
ANR	8675699	Parameter	const double screen_gammaIn	10402:31:330323:330349	8674984	6	True				
ANR	8675700	ParameterType	const double		8674984	0					
ANR	8675701	Identifier	screen_gammaIn		8674984	1					
ANR	8675702	Parameter	const png_byte sbitIn	10403:4:330356:330376	8674984	7	True				
ANR	8675703	ParameterType	const png_byte		8674984	0					
ANR	8675704	Identifier	sbitIn		8674984	1					
ANR	8675705	Parameter	const int threshold_testIn	10403:27:330379:330404	8674984	8	True				
ANR	8675706	ParameterType	const int		8674984	0					
ANR	8675707	Identifier	threshold_testIn		8674984	1					
ANR	8675708	Parameter	const char * name	10404:4:330411:330426	8674984	9	True				
ANR	8675709	ParameterType	const char *		8674984	0					
ANR	8675710	Identifier	name		8674984	1					
ANR	8675711	Parameter	const int use_input_precisionIn	10405:4:330433:330463	8674984	10	True				
ANR	8675712	ParameterType	const int		8674984	0					
ANR	8675713	Identifier	use_input_precisionIn		8674984	1					
ANR	8675714	Parameter	const int scale16In	10405:37:330466:330484	8674984	11	True				
ANR	8675715	ParameterType	const int		8674984	0					
ANR	8675716	Identifier	scale16In		8674984	1					
ANR	8675717	Parameter	const int expand16In	10406:4:330491:330510	8674984	12	True				
ANR	8675718	ParameterType	const int		8674984	0					
ANR	8675719	Identifier	expand16In		8674984	1					
ANR	8675720	Parameter	const int do_backgroundIn	10406:26:330513:330537	8674984	13	True				
ANR	8675721	ParameterType	const int		8674984	0					
ANR	8675722	Identifier	do_backgroundIn		8674984	1					
ANR	8675723	Parameter	const png_color_16 * bkgd_colorIn	10407:4:330544:330575	8674984	14	True				
ANR	8675724	ParameterType	const png_color_16 *		8674984	0					
ANR	8675725	Identifier	bkgd_colorIn		8674984	1					
ANR	8675726	Parameter	double bkgd_gammaIn	10407:38:330578:330596	8674984	15	True				
ANR	8675727	ParameterType	double		8674984	0					
ANR	8675728	Identifier	bkgd_gammaIn		8674984	1					
ANR	8675729	CFGEntryNode	ENTRY		8674984		True				
ANR	8675730	CFGExitNode	EXIT		8674984		True				
ANR	8675731	Symbol	colour_typeIn		8674984						
ANR	8675732	Symbol	pp		8674984						
ANR	8675733	Symbol	& srgb_mod		8674984						
ANR	8675734	Symbol	d . pm -> modifications		8674984						
ANR	8675735	Symbol	bkgd_colorIn		8674984						
ANR	8675736	Symbol	set_modifier_for_read		8674984						
ANR	8675737	Symbol	FILEID		8674984						
ANR	8675738	Symbol	* d . this		8674984						
ANR	8675739	Symbol	interlace_typeIn		8674984						
ANR	8675740	Symbol	threshold_testIn		8674984						
ANR	8675741	Symbol	file_gammaIn		8674984						
ANR	8675742	Symbol	gamma_info		8674984						
ANR	8675743	Symbol	* colour_types		8674984						
ANR	8675744	Symbol	* d . pm		8674984						
ANR	8675745	Symbol	d . pm		8674984						
ANR	8675746	Symbol	bkgd_gammaIn		8674984						
ANR	8675747	Symbol	d . sbit		8674984						
ANR	8675748	Symbol	d . maxerrout		8674984						
ANR	8675749	Symbol	& pi		8674984						
ANR	8675750	Symbol	NULL		8674984						
ANR	8675751	Symbol	& gama_mod		8674984						
ANR	8675752	Symbol	d . this . bit_depth		8674984						
ANR	8675753	Symbol	gamma_end		8674984						
ANR	8675754	Symbol	sbitIn		8674984						
ANR	8675755	Symbol	stderr		8674984						
ANR	8675756	Symbol	d . pm -> error_indexed		8674984						
ANR	8675757	Symbol	d . pm -> log		8674984						
ANR	8675758	Symbol	* d . this . ps		8674984						
ANR	8675759	Symbol	pmIn		8674984						
ANR	8675760	Symbol	screen_gammaIn		8674984						
ANR	8675761	Symbol	d . file_gamma		8674984						
ANR	8675762	Symbol	name		8674984						
ANR	8675763	Symbol	d . this		8674984						
ANR	8675764	Symbol	srgb_mod		8674984						
ANR	8675765	Symbol	d . pm -> this . progressive		8674984						
ANR	8675766	Symbol	d . maxerrpc		8674984						
ANR	8675767	Symbol	d . pm -> error_gray_16		8674984						
ANR	8675768	Symbol	d . pm -> error_gray_2		8674984						
ANR	8675769	Symbol	d . pm -> encoding_counter		8674984						
ANR	8675770	Symbol	d . this . id		8674984						
ANR	8675771	Symbol	d . pm -> error_gray_4		8674984						
ANR	8675772	Symbol	& sbit_mod		8674984						
ANR	8675773	Symbol	modifier_read		8674984						
ANR	8675774	Symbol	d . pm -> error_gray_8		8674984						
ANR	8675775	Symbol	d . this . speed		8674984						
ANR	8675776	Symbol	* d . this . colour_type		8674984						
ANR	8675777	Symbol	palette_numberIn		8674984						
ANR	8675778	Symbol	d . pm -> this		8674984						
ANR	8675779	Symbol	d . pm -> error_color_16		8674984						
ANR	8675780	Symbol	d . pm -> error_color_8		8674984						
ANR	8675781	Symbol	d . threshold_test		8674984						
ANR	8675782	Symbol	expand16In		8674984						
ANR	8675783	Symbol	d . this . ps		8674984						
ANR	8675784	Symbol	d . this . ps -> validated		8674984						
ANR	8675785	Symbol	use_input_precisionIn		8674984						
ANR	8675786	Symbol	d . pm -> current_gamma		8674984						
ANR	8675787	Symbol	d		8674984						
ANR	8675788	Symbol	& pmIn -> this		8674984						
ANR	8675789	Symbol	gama_mod		8674984						
ANR	8675790	Symbol	fault		8674984						
ANR	8675791	Symbol	& d		8674984						
ANR	8675792	Symbol	colour_types		8674984						
ANR	8675793	Symbol	* d		8674984						
ANR	8675794	Symbol	progressive_row		8674984						
ANR	8675795	Symbol	& d . this		8674984						
ANR	8675796	Symbol	bit_depthIn		8674984						
ANR	8675797	Symbol	do_backgroundIn		8674984						
ANR	8675798	Symbol	d . this . colour_type		8674984						
ANR	8675799	Symbol	scale16In		8674984						
ANR	8675800	Symbol	pi		8674984						
ANR	8675801	Symbol	sbit_mod		8674984						
ANR	8675802	Symbol	d . maxerrabs		8674984						
ANR	8675803	Function	gamma_threshold_test	10553:0:334643:335356							
ANR	8675804	FunctionDef	"gamma_threshold_test (png_modifier * pm , png_byte colour_type , png_byte bit_depth , int interlace_type , double file_gamma , double screen_gamma)"		8675803	0					
ANR	8675805	CompoundStatement		10556:0:334804:335356	8675803	0					
ANR	8675806	IdentifierDeclStatement	size_t pos = 0 ;	10557:3:334809:334823	8675803	0	True				
ANR	8675807	IdentifierDecl	pos = 0		8675803	0					
ANR	8675808	IdentifierDeclType	size_t		8675803	0					
ANR	8675809	Identifier	pos		8675803	1					
ANR	8675810	AssignmentExpression	pos = 0		8675803	2		=			
ANR	8675811	Identifier	pos		8675803	0					
ANR	8675812	PrimaryExpression	0		8675803	1					
ANR	8675813	IdentifierDeclStatement	char name [ 64 ] ;	10558:3:334828:334841	8675803	1	True				
ANR	8675814	IdentifierDecl	name [ 64 ]		8675803	0					
ANR	8675815	IdentifierDeclType	char [ 64 ]		8675803	0					
ANR	8675816	Identifier	name		8675803	1					
ANR	8675817	PrimaryExpression	64		8675803	2					
ANR	8675818	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""threshold "" )"	10559:3:334846:334897	8675803	2	True				
ANR	8675819	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""threshold "" )"		8675803	0		=			
ANR	8675820	Identifier	pos		8675803	0					
ANR	8675821	CallExpression	"safecat ( name , sizeof name , pos , ""threshold "" )"		8675803	1					
ANR	8675822	Callee	safecat		8675803	0					
ANR	8675823	Identifier	safecat		8675803	0					
ANR	8675824	ArgumentList	name		8675803	1					
ANR	8675825	Argument	name		8675803	0					
ANR	8675826	Identifier	name		8675803	0					
ANR	8675827	Argument	sizeof name		8675803	1					
ANR	8675828	SizeofExpression	sizeof name		8675803	0					
ANR	8675829	Sizeof	sizeof		8675803	0					
ANR	8675830	Identifier	name		8675803	1					
ANR	8675831	Argument	pos		8675803	2					
ANR	8675832	Identifier	pos		8675803	0					
ANR	8675833	Argument	"""threshold """		8675803	3					
ANR	8675834	PrimaryExpression	"""threshold """		8675803	0					
ANR	8675835	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , file_gamma , 3 )"	10560:3:334902:334955	8675803	3	True				
ANR	8675836	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , file_gamma , 3 )"		8675803	0		=			
ANR	8675837	Identifier	pos		8675803	0					
ANR	8675838	CallExpression	"safecatd ( name , sizeof name , pos , file_gamma , 3 )"		8675803	1					
ANR	8675839	Callee	safecatd		8675803	0					
ANR	8675840	Identifier	safecatd		8675803	0					
ANR	8675841	ArgumentList	name		8675803	1					
ANR	8675842	Argument	name		8675803	0					
ANR	8675843	Identifier	name		8675803	0					
ANR	8675844	Argument	sizeof name		8675803	1					
ANR	8675845	SizeofExpression	sizeof name		8675803	0					
ANR	8675846	Sizeof	sizeof		8675803	0					
ANR	8675847	Identifier	name		8675803	1					
ANR	8675848	Argument	pos		8675803	2					
ANR	8675849	Identifier	pos		8675803	0					
ANR	8675850	Argument	file_gamma		8675803	3					
ANR	8675851	Identifier	file_gamma		8675803	0					
ANR	8675852	Argument	3		8675803	4					
ANR	8675853	PrimaryExpression	3		8675803	0					
ANR	8675854	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""/"" )"	10561:3:334960:335002	8675803	4	True				
ANR	8675855	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""/"" )"		8675803	0		=			
ANR	8675856	Identifier	pos		8675803	0					
ANR	8675857	CallExpression	"safecat ( name , sizeof name , pos , ""/"" )"		8675803	1					
ANR	8675858	Callee	safecat		8675803	0					
ANR	8675859	Identifier	safecat		8675803	0					
ANR	8675860	ArgumentList	name		8675803	1					
ANR	8675861	Argument	name		8675803	0					
ANR	8675862	Identifier	name		8675803	0					
ANR	8675863	Argument	sizeof name		8675803	1					
ANR	8675864	SizeofExpression	sizeof name		8675803	0					
ANR	8675865	Sizeof	sizeof		8675803	0					
ANR	8675866	Identifier	name		8675803	1					
ANR	8675867	Argument	pos		8675803	2					
ANR	8675868	Identifier	pos		8675803	0					
ANR	8675869	Argument	"""/"""		8675803	3					
ANR	8675870	PrimaryExpression	"""/"""		8675803	0					
ANR	8675871	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , screen_gamma , 3 )"	10562:3:335007:335062	8675803	5	True				
ANR	8675872	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , screen_gamma , 3 )"		8675803	0		=			
ANR	8675873	Identifier	pos		8675803	0					
ANR	8675874	CallExpression	"safecatd ( name , sizeof name , pos , screen_gamma , 3 )"		8675803	1					
ANR	8675875	Callee	safecatd		8675803	0					
ANR	8675876	Identifier	safecatd		8675803	0					
ANR	8675877	ArgumentList	name		8675803	1					
ANR	8675878	Argument	name		8675803	0					
ANR	8675879	Identifier	name		8675803	0					
ANR	8675880	Argument	sizeof name		8675803	1					
ANR	8675881	SizeofExpression	sizeof name		8675803	0					
ANR	8675882	Sizeof	sizeof		8675803	0					
ANR	8675883	Identifier	name		8675803	1					
ANR	8675884	Argument	pos		8675803	2					
ANR	8675885	Identifier	pos		8675803	0					
ANR	8675886	Argument	screen_gamma		8675803	3					
ANR	8675887	Identifier	screen_gamma		8675803	0					
ANR	8675888	Argument	3		8675803	4					
ANR	8675889	PrimaryExpression	3		8675803	0					
ANR	8675890	ExpressionStatement	"( void ) gamma_test ( pm , colour_type , bit_depth , 0 , interlace_type , file_gamma , screen_gamma , 0 , 1 , name , 0 , 0 , 0 , 0 , 0 , 0 )"	10564:3:335068:335354	8675803	6	True				
ANR	8675891	CastExpression	"( void ) gamma_test ( pm , colour_type , bit_depth , 0 , interlace_type , file_gamma , screen_gamma , 0 , 1 , name , 0 , 0 , 0 , 0 , 0 , 0 )"		8675803	0					
ANR	8675892	CastTarget	void		8675803	0					
ANR	8675893	CallExpression	"gamma_test ( pm , colour_type , bit_depth , 0 , interlace_type , file_gamma , screen_gamma , 0 , 1 , name , 0 , 0 , 0 , 0 , 0 , 0 )"		8675803	1					
ANR	8675894	Callee	gamma_test		8675803	0					
ANR	8675895	Identifier	gamma_test		8675803	0					
ANR	8675896	ArgumentList	pm		8675803	1					
ANR	8675897	Argument	pm		8675803	0					
ANR	8675898	Identifier	pm		8675803	0					
ANR	8675899	Argument	colour_type		8675803	1					
ANR	8675900	Identifier	colour_type		8675803	0					
ANR	8675901	Argument	bit_depth		8675803	2					
ANR	8675902	Identifier	bit_depth		8675803	0					
ANR	8675903	Argument	0		8675803	3					
ANR	8675904	PrimaryExpression	0		8675803	0					
ANR	8675905	Argument	interlace_type		8675803	4					
ANR	8675906	Identifier	interlace_type		8675803	0					
ANR	8675907	Argument	file_gamma		8675803	5					
ANR	8675908	Identifier	file_gamma		8675803	0					
ANR	8675909	Argument	screen_gamma		8675803	6					
ANR	8675910	Identifier	screen_gamma		8675803	0					
ANR	8675911	Argument	0		8675803	7					
ANR	8675912	PrimaryExpression	0		8675803	0					
ANR	8675913	Argument	1		8675803	8					
ANR	8675914	PrimaryExpression	1		8675803	0					
ANR	8675915	Argument	name		8675803	9					
ANR	8675916	Identifier	name		8675803	0					
ANR	8675917	Argument	0		8675803	10					
ANR	8675918	PrimaryExpression	0		8675803	0					
ANR	8675919	Argument	0		8675803	11					
ANR	8675920	PrimaryExpression	0		8675803	0					
ANR	8675921	Argument	0		8675803	12					
ANR	8675922	PrimaryExpression	0		8675803	0					
ANR	8675923	Argument	0		8675803	13					
ANR	8675924	PrimaryExpression	0		8675803	0					
ANR	8675925	Argument	0		8675803	14					
ANR	8675926	PrimaryExpression	0		8675803	0					
ANR	8675927	Argument	0		8675803	15					
ANR	8675928	PrimaryExpression	0		8675803	0					
ANR	8675929	ReturnType	static void		8675803	1					
ANR	8675930	Identifier	gamma_threshold_test		8675803	2					
ANR	8675931	ParameterList	"png_modifier * pm , png_byte colour_type , png_byte bit_depth , int interlace_type , double file_gamma , double screen_gamma"		8675803	3					
ANR	8675932	Parameter	png_modifier * pm	10553:33:334676:334691	8675803	0	True				
ANR	8675933	ParameterType	png_modifier *		8675803	0					
ANR	8675934	Identifier	pm		8675803	1					
ANR	8675935	Parameter	png_byte colour_type	10553:51:334694:334713	8675803	1	True				
ANR	8675936	ParameterType	png_byte		8675803	0					
ANR	8675937	Identifier	colour_type		8675803	1					
ANR	8675938	Parameter	png_byte bit_depth	10554:4:334720:334737	8675803	2	True				
ANR	8675939	ParameterType	png_byte		8675803	0					
ANR	8675940	Identifier	bit_depth		8675803	1					
ANR	8675941	Parameter	int interlace_type	10554:24:334740:334757	8675803	3	True				
ANR	8675942	ParameterType	int		8675803	0					
ANR	8675943	Identifier	interlace_type		8675803	1					
ANR	8675944	Parameter	double file_gamma	10554:44:334760:334776	8675803	4	True				
ANR	8675945	ParameterType	double		8675803	0					
ANR	8675946	Identifier	file_gamma		8675803	1					
ANR	8675947	Parameter	double screen_gamma	10555:4:334783:334801	8675803	5	True				
ANR	8675948	ParameterType	double		8675803	0					
ANR	8675949	Identifier	screen_gamma		8675803	1					
ANR	8675950	CFGEntryNode	ENTRY		8675803		True				
ANR	8675951	CFGExitNode	EXIT		8675803		True				
ANR	8675952	Symbol	colour_type		8675803						
ANR	8675953	Symbol	interlace_type		8675803						
ANR	8675954	Symbol	safecatd		8675803						
ANR	8675955	Symbol	pos		8675803						
ANR	8675956	Symbol	safecat		8675803						
ANR	8675957	Symbol	screen_gamma		8675803						
ANR	8675958	Symbol	name		8675803						
ANR	8675959	Symbol	file_gamma		8675803						
ANR	8675960	Symbol	bit_depth		8675803						
ANR	8675961	Symbol	pm		8675803						
ANR	8675962	Function	perform_gamma_threshold_tests	10571:0:335359:336543							
ANR	8675963	FunctionDef	perform_gamma_threshold_tests (png_modifier * pm)		8675962	0					
ANR	8675964	CompoundStatement		10573:0:335419:336543	8675962	0					
ANR	8675965	IdentifierDeclStatement	png_byte colour_type = 0 ;	10574:3:335424:335448	8675962	0	True				
ANR	8675966	IdentifierDecl	colour_type = 0		8675962	0					
ANR	8675967	IdentifierDeclType	png_byte		8675962	0					
ANR	8675968	Identifier	colour_type		8675962	1					
ANR	8675969	AssignmentExpression	colour_type = 0		8675962	2		=			
ANR	8675970	Identifier	colour_type		8675962	0					
ANR	8675971	PrimaryExpression	0		8675962	1					
ANR	8675972	IdentifierDeclStatement	png_byte bit_depth = 0 ;	10575:3:335453:335475	8675962	1	True				
ANR	8675973	IdentifierDecl	bit_depth = 0		8675962	0					
ANR	8675974	IdentifierDeclType	png_byte		8675962	0					
ANR	8675975	Identifier	bit_depth		8675962	1					
ANR	8675976	AssignmentExpression	bit_depth = 0		8675962	2		=			
ANR	8675977	Identifier	bit_depth		8675962	0					
ANR	8675978	PrimaryExpression	0		8675962	1					
ANR	8675979	IdentifierDeclStatement	unsigned int palette_number = 0 ;	10576:3:335480:335511	8675962	2	True				
ANR	8675980	IdentifierDecl	palette_number = 0		8675962	0					
ANR	8675981	IdentifierDeclType	unsigned int		8675962	0					
ANR	8675982	Identifier	palette_number		8675962	1					
ANR	8675983	AssignmentExpression	palette_number = 0		8675962	2		=			
ANR	8675984	Identifier	palette_number		8675962	0					
ANR	8675985	PrimaryExpression	0		8675962	1					
ANR	8675986	WhileStatement	"while ( next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_threshold , pm -> test_tRNS ) )"		8675962	3					
ANR	8675987	Condition	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_threshold , pm -> test_tRNS )"	10585:10:335834:335954	8675962	0	True				
ANR	8675988	CallExpression	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_threshold , pm -> test_tRNS )"		8675962	0					
ANR	8675989	Callee	next_format		8675962	0					
ANR	8675990	Identifier	next_format		8675962	0					
ANR	8675991	ArgumentList	& colour_type		8675962	1					
ANR	8675992	Argument	& colour_type		8675962	0					
ANR	8675993	UnaryOperationExpression	& colour_type		8675962	0					
ANR	8675994	UnaryOperator	&		8675962	0					
ANR	8675995	Identifier	colour_type		8675962	1					
ANR	8675996	Argument	& bit_depth		8675962	1					
ANR	8675997	UnaryOperationExpression	& bit_depth		8675962	0					
ANR	8675998	UnaryOperator	&		8675962	0					
ANR	8675999	Identifier	bit_depth		8675962	1					
ANR	8676000	Argument	& palette_number		8675962	2					
ANR	8676001	UnaryOperationExpression	& palette_number		8675962	0					
ANR	8676002	UnaryOperator	&		8675962	0					
ANR	8676003	Identifier	palette_number		8675962	1					
ANR	8676004	Argument	pm -> test_lbg_gamma_threshold		8675962	3					
ANR	8676005	PtrMemberAccess	pm -> test_lbg_gamma_threshold		8675962	0					
ANR	8676006	Identifier	pm		8675962	0					
ANR	8676007	Identifier	test_lbg_gamma_threshold		8675962	1					
ANR	8676008	Argument	pm -> test_tRNS		8675962	4					
ANR	8676009	PtrMemberAccess	pm -> test_tRNS		8675962	0					
ANR	8676010	Identifier	pm		8675962	0					
ANR	8676011	Identifier	test_tRNS		8675962	1					
ANR	8676012	IfStatement	if ( palette_number < 2 )		8675962	1					
ANR	8676013	Condition	palette_number < 2	10587:10:335967:335984	8675962	0	True				
ANR	8676014	RelationalExpression	palette_number < 2		8675962	0		<			
ANR	8676015	Identifier	palette_number		8675962	0					
ANR	8676016	PrimaryExpression	2		8675962	1					
ANR	8676017	CompoundStatement		17:6:578:601	8675962	1					
ANR	8676018	IdentifierDeclStatement	double test_gamma = 1.0 ;	10589:6:335998:336021	8675962	0	True				
ANR	8676019	IdentifierDecl	test_gamma = 1.0		8675962	0					
ANR	8676020	IdentifierDeclType	double		8675962	0					
ANR	8676021	Identifier	test_gamma		8675962	1					
ANR	8676022	AssignmentExpression	test_gamma = 1.0		8675962	2		=			
ANR	8676023	Identifier	test_gamma		8675962	0					
ANR	8676024	PrimaryExpression	1.0		8675962	1					
ANR	8676025	WhileStatement	while ( test_gamma >= .4 )		8675962	1					
ANR	8676026	Condition	test_gamma >= .4	10590:13:336036:336051	8675962	0	True				
ANR	8676027	RelationalExpression	test_gamma >= .4		8675962	0		>=			
ANR	8676028	Identifier	test_gamma		8675962	0					
ANR	8676029	PrimaryExpression	.4		8675962	1					
ANR	8676030	CompoundStatement		19:6:640:640	8675962	1					
ANR	8676031	ExpressionStatement	"gamma_threshold_test ( pm , colour_type , bit_depth , pm -> interlace_type , test_gamma , 1 / test_gamma )"	10595:9:336216:336322	8675962	0	True				
ANR	8676032	CallExpression	"gamma_threshold_test ( pm , colour_type , bit_depth , pm -> interlace_type , test_gamma , 1 / test_gamma )"		8675962	0					
ANR	8676033	Callee	gamma_threshold_test		8675962	0					
ANR	8676034	Identifier	gamma_threshold_test		8675962	0					
ANR	8676035	ArgumentList	pm		8675962	1					
ANR	8676036	Argument	pm		8675962	0					
ANR	8676037	Identifier	pm		8675962	0					
ANR	8676038	Argument	colour_type		8675962	1					
ANR	8676039	Identifier	colour_type		8675962	0					
ANR	8676040	Argument	bit_depth		8675962	2					
ANR	8676041	Identifier	bit_depth		8675962	0					
ANR	8676042	Argument	pm -> interlace_type		8675962	3					
ANR	8676043	PtrMemberAccess	pm -> interlace_type		8675962	0					
ANR	8676044	Identifier	pm		8675962	0					
ANR	8676045	Identifier	interlace_type		8675962	1					
ANR	8676046	Argument	test_gamma		8675962	4					
ANR	8676047	Identifier	test_gamma		8675962	0					
ANR	8676048	Argument	1 / test_gamma		8675962	5					
ANR	8676049	MultiplicativeExpression	1 / test_gamma		8675962	0		/			
ANR	8676050	PrimaryExpression	1		8675962	0					
ANR	8676051	Identifier	test_gamma		8675962	1					
ANR	8676052	ExpressionStatement	test_gamma *= .95	10597:9:336333:336350	8675962	1	True				
ANR	8676053	AssignmentExpression	test_gamma *= .95		8675962	0		*=			
ANR	8676054	Identifier	test_gamma		8675962	0					
ANR	8676055	PrimaryExpression	.95		8675962	1					
ANR	8676056	ExpressionStatement	"gamma_threshold_test ( pm , colour_type , bit_depth , pm -> interlace_type , .45455 , 2.2 )"	10601:6:336407:336498	8675962	2	True				
ANR	8676057	CallExpression	"gamma_threshold_test ( pm , colour_type , bit_depth , pm -> interlace_type , .45455 , 2.2 )"		8675962	0					
ANR	8676058	Callee	gamma_threshold_test		8675962	0					
ANR	8676059	Identifier	gamma_threshold_test		8675962	0					
ANR	8676060	ArgumentList	pm		8675962	1					
ANR	8676061	Argument	pm		8675962	0					
ANR	8676062	Identifier	pm		8675962	0					
ANR	8676063	Argument	colour_type		8675962	1					
ANR	8676064	Identifier	colour_type		8675962	0					
ANR	8676065	Argument	bit_depth		8675962	2					
ANR	8676066	Identifier	bit_depth		8675962	0					
ANR	8676067	Argument	pm -> interlace_type		8675962	3					
ANR	8676068	PtrMemberAccess	pm -> interlace_type		8675962	0					
ANR	8676069	Identifier	pm		8675962	0					
ANR	8676070	Identifier	interlace_type		8675962	1					
ANR	8676071	Argument	.45455		8675962	4					
ANR	8676072	PrimaryExpression	.45455		8675962	0					
ANR	8676073	Argument	2.2		8675962	5					
ANR	8676074	PrimaryExpression	2.2		8675962	0					
ANR	8676075	IfStatement	if ( fail ( pm ) )		8675962	3					
ANR	8676076	Condition	fail ( pm )	10604:10:336511:336518	8675962	0	True				
ANR	8676077	CallExpression	fail ( pm )		8675962	0					
ANR	8676078	Callee	fail		8675962	0					
ANR	8676079	Identifier	fail		8675962	0					
ANR	8676080	ArgumentList	pm		8675962	1					
ANR	8676081	Argument	pm		8675962	0					
ANR	8676082	Identifier	pm		8675962	0					
ANR	8676083	ReturnStatement	return ;	10605:9:336530:336536	8675962	1	True				
ANR	8676084	ReturnType	static void		8675962	1					
ANR	8676085	Identifier	perform_gamma_threshold_tests		8675962	2					
ANR	8676086	ParameterList	png_modifier * pm		8675962	3					
ANR	8676087	Parameter	png_modifier * pm	10572:30:335401:335416	8675962	0	True				
ANR	8676088	ParameterType	png_modifier *		8675962	0					
ANR	8676089	Identifier	pm		8675962	1					
ANR	8676090	CFGEntryNode	ENTRY		8675962		True				
ANR	8676091	CFGExitNode	EXIT		8675962		True				
ANR	8676092	Symbol	* pm		8675962						
ANR	8676093	Symbol	pm -> test_tRNS		8675962						
ANR	8676094	Symbol	next_format		8675962						
ANR	8676095	Symbol	pm -> test_lbg_gamma_threshold		8675962						
ANR	8676096	Symbol	test_gamma		8675962						
ANR	8676097	Symbol	palette_number		8675962						
ANR	8676098	Symbol	colour_type		8675962						
ANR	8676099	Symbol	& palette_number		8675962						
ANR	8676100	Symbol	fail		8675962						
ANR	8676101	Symbol	& colour_type		8675962						
ANR	8676102	Symbol	& bit_depth		8675962						
ANR	8676103	Symbol	pm -> interlace_type		8675962						
ANR	8676104	Symbol	bit_depth		8675962						
ANR	8676105	Symbol	pm		8675962						
ANR	8676106	Function	gamma_transform_test	10609:0:336546:337584							
ANR	8676107	FunctionDef	"gamma_transform_test (png_modifier * pm , const png_byte colour_type , const png_byte bit_depth , const int palette_number , const int interlace_type , const double file_gamma , const double screen_gamma , const png_byte sbit , const int use_input_precision , const int scale16)"		8676106	0					
ANR	8676108	CompoundStatement		10615:0:336841:337584	8676106	0					
ANR	8676109	IdentifierDeclStatement	size_t pos = 0 ;	10616:3:336846:336860	8676106	0	True				
ANR	8676110	IdentifierDecl	pos = 0		8676106	0					
ANR	8676111	IdentifierDeclType	size_t		8676106	0					
ANR	8676112	Identifier	pos		8676106	1					
ANR	8676113	AssignmentExpression	pos = 0		8676106	2		=			
ANR	8676114	Identifier	pos		8676106	0					
ANR	8676115	PrimaryExpression	0		8676106	1					
ANR	8676116	IdentifierDeclStatement	char name [ 64 ] ;	10617:3:336865:336878	8676106	1	True				
ANR	8676117	IdentifierDecl	name [ 64 ]		8676106	0					
ANR	8676118	IdentifierDeclType	char [ 64 ]		8676106	0					
ANR	8676119	Identifier	name		8676106	1					
ANR	8676120	PrimaryExpression	64		8676106	2					
ANR	8676121	IfStatement	if ( sbit != bit_depth && sbit != 0 )		8676106	2					
ANR	8676122	Condition	sbit != bit_depth && sbit != 0	10619:7:336888:336917	8676106	0	True				
ANR	8676123	AndExpression	sbit != bit_depth && sbit != 0		8676106	0		&&			
ANR	8676124	EqualityExpression	sbit != bit_depth		8676106	0		!=			
ANR	8676125	Identifier	sbit		8676106	0					
ANR	8676126	Identifier	bit_depth		8676106	1					
ANR	8676127	EqualityExpression	sbit != 0		8676106	1		!=			
ANR	8676128	Identifier	sbit		8676106	0					
ANR	8676129	PrimaryExpression	0		8676106	1					
ANR	8676130	CompoundStatement		6:3:81:81	8676106	1					
ANR	8676131	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""sbit("" )"	10621:6:336931:336977	8676106	0	True				
ANR	8676132	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""sbit("" )"		8676106	0		=			
ANR	8676133	Identifier	pos		8676106	0					
ANR	8676134	CallExpression	"safecat ( name , sizeof name , pos , ""sbit("" )"		8676106	1					
ANR	8676135	Callee	safecat		8676106	0					
ANR	8676136	Identifier	safecat		8676106	0					
ANR	8676137	ArgumentList	name		8676106	1					
ANR	8676138	Argument	name		8676106	0					
ANR	8676139	Identifier	name		8676106	0					
ANR	8676140	Argument	sizeof name		8676106	1					
ANR	8676141	SizeofExpression	sizeof name		8676106	0					
ANR	8676142	Sizeof	sizeof		8676106	0					
ANR	8676143	Identifier	name		8676106	1					
ANR	8676144	Argument	pos		8676106	2					
ANR	8676145	Identifier	pos		8676106	0					
ANR	8676146	Argument	"""sbit("""		8676106	3					
ANR	8676147	PrimaryExpression	"""sbit("""		8676106	0					
ANR	8676148	ExpressionStatement	"pos = safecatn ( name , sizeof name , pos , sbit )"	10622:6:336985:337029	8676106	1	True				
ANR	8676149	AssignmentExpression	"pos = safecatn ( name , sizeof name , pos , sbit )"		8676106	0		=			
ANR	8676150	Identifier	pos		8676106	0					
ANR	8676151	CallExpression	"safecatn ( name , sizeof name , pos , sbit )"		8676106	1					
ANR	8676152	Callee	safecatn		8676106	0					
ANR	8676153	Identifier	safecatn		8676106	0					
ANR	8676154	ArgumentList	name		8676106	1					
ANR	8676155	Argument	name		8676106	0					
ANR	8676156	Identifier	name		8676106	0					
ANR	8676157	Argument	sizeof name		8676106	1					
ANR	8676158	SizeofExpression	sizeof name		8676106	0					
ANR	8676159	Sizeof	sizeof		8676106	0					
ANR	8676160	Identifier	name		8676106	1					
ANR	8676161	Argument	pos		8676106	2					
ANR	8676162	Identifier	pos		8676106	0					
ANR	8676163	Argument	sbit		8676106	3					
ANR	8676164	Identifier	sbit		8676106	0					
ANR	8676165	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , "") "" )"	10623:6:337037:337080	8676106	2	True				
ANR	8676166	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , "") "" )"		8676106	0		=			
ANR	8676167	Identifier	pos		8676106	0					
ANR	8676168	CallExpression	"safecat ( name , sizeof name , pos , "") "" )"		8676106	1					
ANR	8676169	Callee	safecat		8676106	0					
ANR	8676170	Identifier	safecat		8676106	0					
ANR	8676171	ArgumentList	name		8676106	1					
ANR	8676172	Argument	name		8676106	0					
ANR	8676173	Identifier	name		8676106	0					
ANR	8676174	Argument	sizeof name		8676106	1					
ANR	8676175	SizeofExpression	sizeof name		8676106	0					
ANR	8676176	Sizeof	sizeof		8676106	0					
ANR	8676177	Identifier	name		8676106	1					
ANR	8676178	Argument	pos		8676106	2					
ANR	8676179	Identifier	pos		8676106	0					
ANR	8676180	Argument	""") """		8676106	3					
ANR	8676181	PrimaryExpression	""") """		8676106	0					
ANR	8676182	ElseStatement	else		8676106	0					
ANR	8676183	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""gamma "" )"	10627:6:337102:337149	8676106	0	True				
ANR	8676184	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""gamma "" )"		8676106	0		=			
ANR	8676185	Identifier	pos		8676106	0					
ANR	8676186	CallExpression	"safecat ( name , sizeof name , pos , ""gamma "" )"		8676106	1					
ANR	8676187	Callee	safecat		8676106	0					
ANR	8676188	Identifier	safecat		8676106	0					
ANR	8676189	ArgumentList	name		8676106	1					
ANR	8676190	Argument	name		8676106	0					
ANR	8676191	Identifier	name		8676106	0					
ANR	8676192	Argument	sizeof name		8676106	1					
ANR	8676193	SizeofExpression	sizeof name		8676106	0					
ANR	8676194	Sizeof	sizeof		8676106	0					
ANR	8676195	Identifier	name		8676106	1					
ANR	8676196	Argument	pos		8676106	2					
ANR	8676197	Identifier	pos		8676106	0					
ANR	8676198	Argument	"""gamma """		8676106	3					
ANR	8676199	PrimaryExpression	"""gamma """		8676106	0					
ANR	8676200	IfStatement	if ( scale16 )		8676106	3					
ANR	8676201	Condition	scale16	10629:7:337159:337165	8676106	0	True				
ANR	8676202	Identifier	scale16		8676106	0					
ANR	8676203	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""16to8 "" )"	10630:6:337174:337221	8676106	1	True				
ANR	8676204	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""16to8 "" )"		8676106	0		=			
ANR	8676205	Identifier	pos		8676106	0					
ANR	8676206	CallExpression	"safecat ( name , sizeof name , pos , ""16to8 "" )"		8676106	1					
ANR	8676207	Callee	safecat		8676106	0					
ANR	8676208	Identifier	safecat		8676106	0					
ANR	8676209	ArgumentList	name		8676106	1					
ANR	8676210	Argument	name		8676106	0					
ANR	8676211	Identifier	name		8676106	0					
ANR	8676212	Argument	sizeof name		8676106	1					
ANR	8676213	SizeofExpression	sizeof name		8676106	0					
ANR	8676214	Sizeof	sizeof		8676106	0					
ANR	8676215	Identifier	name		8676106	1					
ANR	8676216	Argument	pos		8676106	2					
ANR	8676217	Identifier	pos		8676106	0					
ANR	8676218	Argument	"""16to8 """		8676106	3					
ANR	8676219	PrimaryExpression	"""16to8 """		8676106	0					
ANR	8676220	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , file_gamma , 3 )"	10632:3:337227:337280	8676106	4	True				
ANR	8676221	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , file_gamma , 3 )"		8676106	0		=			
ANR	8676222	Identifier	pos		8676106	0					
ANR	8676223	CallExpression	"safecatd ( name , sizeof name , pos , file_gamma , 3 )"		8676106	1					
ANR	8676224	Callee	safecatd		8676106	0					
ANR	8676225	Identifier	safecatd		8676106	0					
ANR	8676226	ArgumentList	name		8676106	1					
ANR	8676227	Argument	name		8676106	0					
ANR	8676228	Identifier	name		8676106	0					
ANR	8676229	Argument	sizeof name		8676106	1					
ANR	8676230	SizeofExpression	sizeof name		8676106	0					
ANR	8676231	Sizeof	sizeof		8676106	0					
ANR	8676232	Identifier	name		8676106	1					
ANR	8676233	Argument	pos		8676106	2					
ANR	8676234	Identifier	pos		8676106	0					
ANR	8676235	Argument	file_gamma		8676106	3					
ANR	8676236	Identifier	file_gamma		8676106	0					
ANR	8676237	Argument	3		8676106	4					
ANR	8676238	PrimaryExpression	3		8676106	0					
ANR	8676239	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""->"" )"	10633:3:337285:337328	8676106	5	True				
ANR	8676240	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""->"" )"		8676106	0		=			
ANR	8676241	Identifier	pos		8676106	0					
ANR	8676242	CallExpression	"safecat ( name , sizeof name , pos , ""->"" )"		8676106	1					
ANR	8676243	Callee	safecat		8676106	0					
ANR	8676244	Identifier	safecat		8676106	0					
ANR	8676245	ArgumentList	name		8676106	1					
ANR	8676246	Argument	name		8676106	0					
ANR	8676247	Identifier	name		8676106	0					
ANR	8676248	Argument	sizeof name		8676106	1					
ANR	8676249	SizeofExpression	sizeof name		8676106	0					
ANR	8676250	Sizeof	sizeof		8676106	0					
ANR	8676251	Identifier	name		8676106	1					
ANR	8676252	Argument	pos		8676106	2					
ANR	8676253	Identifier	pos		8676106	0					
ANR	8676254	Argument	"""->"""		8676106	3					
ANR	8676255	PrimaryExpression	"""->"""		8676106	0					
ANR	8676256	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , screen_gamma , 3 )"	10634:3:337333:337388	8676106	6	True				
ANR	8676257	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , screen_gamma , 3 )"		8676106	0		=			
ANR	8676258	Identifier	pos		8676106	0					
ANR	8676259	CallExpression	"safecatd ( name , sizeof name , pos , screen_gamma , 3 )"		8676106	1					
ANR	8676260	Callee	safecatd		8676106	0					
ANR	8676261	Identifier	safecatd		8676106	0					
ANR	8676262	ArgumentList	name		8676106	1					
ANR	8676263	Argument	name		8676106	0					
ANR	8676264	Identifier	name		8676106	0					
ANR	8676265	Argument	sizeof name		8676106	1					
ANR	8676266	SizeofExpression	sizeof name		8676106	0					
ANR	8676267	Sizeof	sizeof		8676106	0					
ANR	8676268	Identifier	name		8676106	1					
ANR	8676269	Argument	pos		8676106	2					
ANR	8676270	Identifier	pos		8676106	0					
ANR	8676271	Argument	screen_gamma		8676106	3					
ANR	8676272	Identifier	screen_gamma		8676106	0					
ANR	8676273	Argument	3		8676106	4					
ANR	8676274	PrimaryExpression	3		8676106	0					
ANR	8676275	ExpressionStatement	"gamma_test ( pm , colour_type , bit_depth , palette_number , interlace_type , file_gamma , screen_gamma , sbit , 0 , name , use_input_precision , scale16 , pm -> test_gamma_expand16 , 0 , 0 , 0 )"	10636:3:337394:337582	8676106	7	True				
ANR	8676276	CallExpression	"gamma_test ( pm , colour_type , bit_depth , palette_number , interlace_type , file_gamma , screen_gamma , sbit , 0 , name , use_input_precision , scale16 , pm -> test_gamma_expand16 , 0 , 0 , 0 )"		8676106	0					
ANR	8676277	Callee	gamma_test		8676106	0					
ANR	8676278	Identifier	gamma_test		8676106	0					
ANR	8676279	ArgumentList	pm		8676106	1					
ANR	8676280	Argument	pm		8676106	0					
ANR	8676281	Identifier	pm		8676106	0					
ANR	8676282	Argument	colour_type		8676106	1					
ANR	8676283	Identifier	colour_type		8676106	0					
ANR	8676284	Argument	bit_depth		8676106	2					
ANR	8676285	Identifier	bit_depth		8676106	0					
ANR	8676286	Argument	palette_number		8676106	3					
ANR	8676287	Identifier	palette_number		8676106	0					
ANR	8676288	Argument	interlace_type		8676106	4					
ANR	8676289	Identifier	interlace_type		8676106	0					
ANR	8676290	Argument	file_gamma		8676106	5					
ANR	8676291	Identifier	file_gamma		8676106	0					
ANR	8676292	Argument	screen_gamma		8676106	6					
ANR	8676293	Identifier	screen_gamma		8676106	0					
ANR	8676294	Argument	sbit		8676106	7					
ANR	8676295	Identifier	sbit		8676106	0					
ANR	8676296	Argument	0		8676106	8					
ANR	8676297	PrimaryExpression	0		8676106	0					
ANR	8676298	Argument	name		8676106	9					
ANR	8676299	Identifier	name		8676106	0					
ANR	8676300	Argument	use_input_precision		8676106	10					
ANR	8676301	Identifier	use_input_precision		8676106	0					
ANR	8676302	Argument	scale16		8676106	11					
ANR	8676303	Identifier	scale16		8676106	0					
ANR	8676304	Argument	pm -> test_gamma_expand16		8676106	12					
ANR	8676305	PtrMemberAccess	pm -> test_gamma_expand16		8676106	0					
ANR	8676306	Identifier	pm		8676106	0					
ANR	8676307	Identifier	test_gamma_expand16		8676106	1					
ANR	8676308	Argument	0		8676106	13					
ANR	8676309	PrimaryExpression	0		8676106	0					
ANR	8676310	Argument	0		8676106	14					
ANR	8676311	PrimaryExpression	0		8676106	0					
ANR	8676312	Argument	0		8676106	15					
ANR	8676313	PrimaryExpression	0		8676106	0					
ANR	8676314	ReturnType	static void		8676106	1					
ANR	8676315	Identifier	gamma_transform_test		8676106	2					
ANR	8676316	ParameterList	"png_modifier * pm , const png_byte colour_type , const png_byte bit_depth , const int palette_number , const int interlace_type , const double file_gamma , const double screen_gamma , const png_byte sbit , const int use_input_precision , const int scale16"		8676106	3					
ANR	8676317	Parameter	png_modifier * pm	10609:33:336579:336594	8676106	0	True				
ANR	8676318	ParameterType	png_modifier *		8676106	0					
ANR	8676319	Identifier	pm		8676106	1					
ANR	8676320	Parameter	const png_byte colour_type	10610:3:336600:336625	8676106	1	True				
ANR	8676321	ParameterType	const png_byte		8676106	0					
ANR	8676322	Identifier	colour_type		8676106	1					
ANR	8676323	Parameter	const png_byte bit_depth	10610:31:336628:336651	8676106	2	True				
ANR	8676324	ParameterType	const png_byte		8676106	0					
ANR	8676325	Identifier	bit_depth		8676106	1					
ANR	8676326	Parameter	const int palette_number	10611:3:336657:336680	8676106	3	True				
ANR	8676327	ParameterType	const int		8676106	0					
ANR	8676328	Identifier	palette_number		8676106	1					
ANR	8676329	Parameter	const int interlace_type	10612:3:336686:336709	8676106	4	True				
ANR	8676330	ParameterType	const int		8676106	0					
ANR	8676331	Identifier	interlace_type		8676106	1					
ANR	8676332	Parameter	const double file_gamma	10612:29:336712:336734	8676106	5	True				
ANR	8676333	ParameterType	const double		8676106	0					
ANR	8676334	Identifier	file_gamma		8676106	1					
ANR	8676335	Parameter	const double screen_gamma	10613:3:336740:336764	8676106	6	True				
ANR	8676336	ParameterType	const double		8676106	0					
ANR	8676337	Identifier	screen_gamma		8676106	1					
ANR	8676338	Parameter	const png_byte sbit	10613:30:336767:336785	8676106	7	True				
ANR	8676339	ParameterType	const png_byte		8676106	0					
ANR	8676340	Identifier	sbit		8676106	1					
ANR	8676341	Parameter	const int use_input_precision	10614:3:336791:336819	8676106	8	True				
ANR	8676342	ParameterType	const int		8676106	0					
ANR	8676343	Identifier	use_input_precision		8676106	1					
ANR	8676344	Parameter	const int scale16	10614:34:336822:336838	8676106	9	True				
ANR	8676345	ParameterType	const int		8676106	0					
ANR	8676346	Identifier	scale16		8676106	1					
ANR	8676347	CFGEntryNode	ENTRY		8676106		True				
ANR	8676348	CFGExitNode	EXIT		8676106		True				
ANR	8676349	Symbol	* pm		8676106						
ANR	8676350	Symbol	use_input_precision		8676106						
ANR	8676351	Symbol	scale16		8676106						
ANR	8676352	Symbol	safecatn		8676106						
ANR	8676353	Symbol	palette_number		8676106						
ANR	8676354	Symbol	sbit		8676106						
ANR	8676355	Symbol	colour_type		8676106						
ANR	8676356	Symbol	interlace_type		8676106						
ANR	8676357	Symbol	safecatd		8676106						
ANR	8676358	Symbol	pos		8676106						
ANR	8676359	Symbol	safecat		8676106						
ANR	8676360	Symbol	screen_gamma		8676106						
ANR	8676361	Symbol	name		8676106						
ANR	8676362	Symbol	file_gamma		8676106						
ANR	8676363	Symbol	bit_depth		8676106						
ANR	8676364	Symbol	pm		8676106						
ANR	8676365	Symbol	pm -> test_gamma_expand16		8676106						
ANR	8676366	Function	perform_gamma_transform_tests	10641:0:337587:338298							
ANR	8676367	FunctionDef	perform_gamma_transform_tests (png_modifier * pm)		8676366	0					
ANR	8676368	CompoundStatement		10642:0:337647:338298	8676366	0					
ANR	8676369	IdentifierDeclStatement	png_byte colour_type = 0 ;	10643:3:337652:337676	8676366	0	True				
ANR	8676370	IdentifierDecl	colour_type = 0		8676366	0					
ANR	8676371	IdentifierDeclType	png_byte		8676366	0					
ANR	8676372	Identifier	colour_type		8676366	1					
ANR	8676373	AssignmentExpression	colour_type = 0		8676366	2		=			
ANR	8676374	Identifier	colour_type		8676366	0					
ANR	8676375	PrimaryExpression	0		8676366	1					
ANR	8676376	IdentifierDeclStatement	png_byte bit_depth = 0 ;	10644:3:337681:337703	8676366	1	True				
ANR	8676377	IdentifierDecl	bit_depth = 0		8676366	0					
ANR	8676378	IdentifierDeclType	png_byte		8676366	0					
ANR	8676379	Identifier	bit_depth		8676366	1					
ANR	8676380	AssignmentExpression	bit_depth = 0		8676366	2		=			
ANR	8676381	Identifier	bit_depth		8676366	0					
ANR	8676382	PrimaryExpression	0		8676366	1					
ANR	8676383	IdentifierDeclStatement	unsigned int palette_number = 0 ;	10645:3:337708:337739	8676366	2	True				
ANR	8676384	IdentifierDecl	palette_number = 0		8676366	0					
ANR	8676385	IdentifierDeclType	unsigned int		8676366	0					
ANR	8676386	Identifier	palette_number		8676366	1					
ANR	8676387	AssignmentExpression	palette_number = 0		8676366	2		=			
ANR	8676388	Identifier	palette_number		8676366	0					
ANR	8676389	PrimaryExpression	0		8676366	1					
ANR	8676390	WhileStatement	"while ( next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_transform , pm -> test_tRNS ) )"		8676366	3					
ANR	8676391	Condition	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_transform , pm -> test_tRNS )"	10647:10:337752:337872	8676366	0	True				
ANR	8676392	CallExpression	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_transform , pm -> test_tRNS )"		8676366	0					
ANR	8676393	Callee	next_format		8676366	0					
ANR	8676394	Identifier	next_format		8676366	0					
ANR	8676395	ArgumentList	& colour_type		8676366	1					
ANR	8676396	Argument	& colour_type		8676366	0					
ANR	8676397	UnaryOperationExpression	& colour_type		8676366	0					
ANR	8676398	UnaryOperator	&		8676366	0					
ANR	8676399	Identifier	colour_type		8676366	1					
ANR	8676400	Argument	& bit_depth		8676366	1					
ANR	8676401	UnaryOperationExpression	& bit_depth		8676366	0					
ANR	8676402	UnaryOperator	&		8676366	0					
ANR	8676403	Identifier	bit_depth		8676366	1					
ANR	8676404	Argument	& palette_number		8676366	2					
ANR	8676405	UnaryOperationExpression	& palette_number		8676366	0					
ANR	8676406	UnaryOperator	&		8676366	0					
ANR	8676407	Identifier	palette_number		8676366	1					
ANR	8676408	Argument	pm -> test_lbg_gamma_transform		8676366	3					
ANR	8676409	PtrMemberAccess	pm -> test_lbg_gamma_transform		8676366	0					
ANR	8676410	Identifier	pm		8676366	0					
ANR	8676411	Identifier	test_lbg_gamma_transform		8676366	1					
ANR	8676412	Argument	pm -> test_tRNS		8676366	4					
ANR	8676413	PtrMemberAccess	pm -> test_tRNS		8676366	0					
ANR	8676414	Identifier	pm		8676366	0					
ANR	8676415	Identifier	test_tRNS		8676366	1					
ANR	8676416	CompoundStatement		9:6:238:255	8676366	1					
ANR	8676417	IdentifierDeclStatement	"unsigned int i , j ;"	10650:6:337886:337903	8676366	0	True				
ANR	8676418	IdentifierDecl	i		8676366	0					
ANR	8676419	IdentifierDeclType	unsigned int		8676366	0					
ANR	8676420	Identifier	i		8676366	1					
ANR	8676421	IdentifierDecl	j		8676366	1					
ANR	8676422	IdentifierDeclType	unsigned int		8676366	0					
ANR	8676423	Identifier	j		8676366	1					
ANR	8676424	ForStatement	for ( i = 0 ; i < pm -> ngamma_tests ; ++ i )		8676366	1					
ANR	8676425	ForInit	i = 0 ;	10652:11:337917:337920	8676366	0	True				
ANR	8676426	AssignmentExpression	i = 0		8676366	0		=			
ANR	8676427	Identifier	i		8676366	0					
ANR	8676428	PrimaryExpression	0		8676366	1					
ANR	8676429	Condition	i < pm -> ngamma_tests	10652:16:337922:337939	8676366	1	True				
ANR	8676430	RelationalExpression	i < pm -> ngamma_tests		8676366	0		<			
ANR	8676431	Identifier	i		8676366	0					
ANR	8676432	PtrMemberAccess	pm -> ngamma_tests		8676366	1					
ANR	8676433	Identifier	pm		8676366	0					
ANR	8676434	Identifier	ngamma_tests		8676366	1					
ANR	8676435	UnaryExpression	++ i	10652:36:337942:337944	8676366	2	True				
ANR	8676436	IncDec	++		8676366	0					
ANR	8676437	Identifier	i		8676366	1					
ANR	8676438	ForStatement	for ( j = 0 ; j < pm -> ngamma_tests ; ++ j )		8676366	3					
ANR	8676439	ForInit	j = 0 ;	10652:46:337952:337955	8676366	0	True				
ANR	8676440	AssignmentExpression	j = 0		8676366	0		=			
ANR	8676441	Identifier	j		8676366	0					
ANR	8676442	PrimaryExpression	0		8676366	1					
ANR	8676443	Condition	j < pm -> ngamma_tests	10652:51:337957:337974	8676366	1	True				
ANR	8676444	RelationalExpression	j < pm -> ngamma_tests		8676366	0		<			
ANR	8676445	Identifier	j		8676366	0					
ANR	8676446	PtrMemberAccess	pm -> ngamma_tests		8676366	1					
ANR	8676447	Identifier	pm		8676366	0					
ANR	8676448	Identifier	ngamma_tests		8676366	1					
ANR	8676449	UnaryExpression	++ j	10652:71:337977:337979	8676366	2	True				
ANR	8676450	IncDec	++		8676366	0					
ANR	8676451	Identifier	j		8676366	1					
ANR	8676452	IfStatement	if ( i != j )		8676366	3					
ANR	8676453	Condition	i != j	10653:13:337995:338000	8676366	0	True				
ANR	8676454	EqualityExpression	i != j		8676366	0		!=			
ANR	8676455	Identifier	i		8676366	0					
ANR	8676456	Identifier	j		8676366	1					
ANR	8676457	CompoundStatement		13:9:364:364	8676366	1					
ANR	8676458	ExpressionStatement	"gamma_transform_test ( pm , colour_type , bit_depth , palette_number , pm -> interlace_type , 1 / pm -> gammas [ i ] , pm -> gammas [ j ] , 0 , pm -> use_input_precision , 0 )"	10655:12:338026:338230	8676366	0	True				
ANR	8676459	CallExpression	"gamma_transform_test ( pm , colour_type , bit_depth , palette_number , pm -> interlace_type , 1 / pm -> gammas [ i ] , pm -> gammas [ j ] , 0 , pm -> use_input_precision , 0 )"		8676366	0					
ANR	8676460	Callee	gamma_transform_test		8676366	0					
ANR	8676461	Identifier	gamma_transform_test		8676366	0					
ANR	8676462	ArgumentList	pm		8676366	1					
ANR	8676463	Argument	pm		8676366	0					
ANR	8676464	Identifier	pm		8676366	0					
ANR	8676465	Argument	colour_type		8676366	1					
ANR	8676466	Identifier	colour_type		8676366	0					
ANR	8676467	Argument	bit_depth		8676366	2					
ANR	8676468	Identifier	bit_depth		8676366	0					
ANR	8676469	Argument	palette_number		8676366	3					
ANR	8676470	Identifier	palette_number		8676366	0					
ANR	8676471	Argument	pm -> interlace_type		8676366	4					
ANR	8676472	PtrMemberAccess	pm -> interlace_type		8676366	0					
ANR	8676473	Identifier	pm		8676366	0					
ANR	8676474	Identifier	interlace_type		8676366	1					
ANR	8676475	Argument	1 / pm -> gammas [ i ]		8676366	5					
ANR	8676476	MultiplicativeExpression	1 / pm -> gammas [ i ]		8676366	0		/			
ANR	8676477	PrimaryExpression	1		8676366	0					
ANR	8676478	ArrayIndexing	pm -> gammas [ i ]		8676366	1					
ANR	8676479	PtrMemberAccess	pm -> gammas		8676366	0					
ANR	8676480	Identifier	pm		8676366	0					
ANR	8676481	Identifier	gammas		8676366	1					
ANR	8676482	Identifier	i		8676366	1					
ANR	8676483	Argument	pm -> gammas [ j ]		8676366	6					
ANR	8676484	ArrayIndexing	pm -> gammas [ j ]		8676366	0					
ANR	8676485	PtrMemberAccess	pm -> gammas		8676366	0					
ANR	8676486	Identifier	pm		8676366	0					
ANR	8676487	Identifier	gammas		8676366	1					
ANR	8676488	Identifier	j		8676366	1					
ANR	8676489	Argument	0		8676366	7					
ANR	8676490	PrimaryExpression	0		8676366	0					
ANR	8676491	Argument	pm -> use_input_precision		8676366	8					
ANR	8676492	PtrMemberAccess	pm -> use_input_precision		8676366	0					
ANR	8676493	Identifier	pm		8676366	0					
ANR	8676494	Identifier	use_input_precision		8676366	1					
ANR	8676495	Argument	0		8676366	9					
ANR	8676496	PrimaryExpression	0		8676366	0					
ANR	8676497	IfStatement	if ( fail ( pm ) )		8676366	1					
ANR	8676498	Condition	fail ( pm )	10659:16:338249:338256	8676366	0	True				
ANR	8676499	CallExpression	fail ( pm )		8676366	0					
ANR	8676500	Callee	fail		8676366	0					
ANR	8676501	Identifier	fail		8676366	0					
ANR	8676502	ArgumentList	pm		8676366	1					
ANR	8676503	Argument	pm		8676366	0					
ANR	8676504	Identifier	pm		8676366	0					
ANR	8676505	ReturnStatement	return ;	10660:15:338274:338280	8676366	1	True				
ANR	8676506	ReturnType	static void		8676366	1					
ANR	8676507	Identifier	perform_gamma_transform_tests		8676366	2					
ANR	8676508	ParameterList	png_modifier * pm		8676366	3					
ANR	8676509	Parameter	png_modifier * pm	10641:42:337629:337644	8676366	0	True				
ANR	8676510	ParameterType	png_modifier *		8676366	0					
ANR	8676511	Identifier	pm		8676366	1					
ANR	8676512	CFGEntryNode	ENTRY		8676366		True				
ANR	8676513	CFGExitNode	EXIT		8676366		True				
ANR	8676514	Symbol	* pm		8676366						
ANR	8676515	Symbol	pm -> ngamma_tests		8676366						
ANR	8676516	Symbol	* pm -> gammas		8676366						
ANR	8676517	Symbol	pm -> test_tRNS		8676366						
ANR	8676518	Symbol	next_format		8676366						
ANR	8676519	Symbol	i		8676366						
ANR	8676520	Symbol	j		8676366						
ANR	8676521	Symbol	* * pm		8676366						
ANR	8676522	Symbol	palette_number		8676366						
ANR	8676523	Symbol	pm -> test_lbg_gamma_transform		8676366						
ANR	8676524	Symbol	colour_type		8676366						
ANR	8676525	Symbol	& palette_number		8676366						
ANR	8676526	Symbol	fail		8676366						
ANR	8676527	Symbol	pm -> gammas		8676366						
ANR	8676528	Symbol	* i		8676366						
ANR	8676529	Symbol	* j		8676366						
ANR	8676530	Symbol	& colour_type		8676366						
ANR	8676531	Symbol	pm -> use_input_precision		8676366						
ANR	8676532	Symbol	& bit_depth		8676366						
ANR	8676533	Symbol	pm -> interlace_type		8676366						
ANR	8676534	Symbol	bit_depth		8676366						
ANR	8676535	Symbol	pm		8676366						
ANR	8676536	Function	perform_gamma_sbit_tests	10665:0:338301:339489							
ANR	8676537	FunctionDef	perform_gamma_sbit_tests (png_modifier * pm)		8676536	0					
ANR	8676538	CompoundStatement		10666:0:338356:339489	8676536	0					
ANR	8676539	IdentifierDeclStatement	png_byte sbit ;	10667:3:338361:338374	8676536	0	True				
ANR	8676540	IdentifierDecl	sbit		8676536	0					
ANR	8676541	IdentifierDeclType	png_byte		8676536	0					
ANR	8676542	Identifier	sbit		8676536	1					
ANR	8676543	ForStatement	for ( sbit = pm -> sbitlow ; sbit < ( 1 << READ_BDHI ) ; ++ sbit )		8676536	1					
ANR	8676544	ForInit	sbit = pm -> sbitlow ;	10673:8:338571:338587	8676536	0	True				
ANR	8676545	AssignmentExpression	sbit = pm -> sbitlow		8676536	0		=			
ANR	8676546	Identifier	sbit		8676536	0					
ANR	8676547	PtrMemberAccess	pm -> sbitlow		8676536	1					
ANR	8676548	Identifier	pm		8676536	0					
ANR	8676549	Identifier	sbitlow		8676536	1					
ANR	8676550	Condition	sbit < ( 1 << READ_BDHI )	10673:26:338589:338607	8676536	1	True				
ANR	8676551	RelationalExpression	sbit < ( 1 << READ_BDHI )		8676536	0		<			
ANR	8676552	Identifier	sbit		8676536	0					
ANR	8676553	ShiftExpression	1 << READ_BDHI		8676536	1		<<			
ANR	8676554	PrimaryExpression	1		8676536	0					
ANR	8676555	Identifier	READ_BDHI		8676536	1					
ANR	8676556	UnaryExpression	++ sbit	10673:47:338610:338615	8676536	2	True				
ANR	8676557	IncDec	++		8676536	0					
ANR	8676558	Identifier	sbit		8676536	1					
ANR	8676559	CompoundStatement		11:6:319:344	8676536	3					
ANR	8676560	IdentifierDeclStatement	"png_byte colour_type = 0 , bit_depth = 0 ;"	10675:6:338629:338668	8676536	0	True				
ANR	8676561	IdentifierDecl	colour_type = 0		8676536	0					
ANR	8676562	IdentifierDeclType	png_byte		8676536	0					
ANR	8676563	Identifier	colour_type		8676536	1					
ANR	8676564	AssignmentExpression	colour_type = 0		8676536	2		=			
ANR	8676565	Identifier	colour_type		8676536	0					
ANR	8676566	PrimaryExpression	0		8676536	1					
ANR	8676567	IdentifierDecl	bit_depth = 0		8676536	1					
ANR	8676568	IdentifierDeclType	png_byte		8676536	0					
ANR	8676569	Identifier	bit_depth		8676536	1					
ANR	8676570	AssignmentExpression	bit_depth = 0		8676536	2		=			
ANR	8676571	Identifier	bit_depth		8676536	0					
ANR	8676572	PrimaryExpression	0		8676536	1					
ANR	8676573	IdentifierDeclStatement	unsigned int npalette = 0 ;	10676:6:338676:338701	8676536	1	True				
ANR	8676574	IdentifierDecl	npalette = 0		8676536	0					
ANR	8676575	IdentifierDeclType	unsigned int		8676536	0					
ANR	8676576	Identifier	npalette		8676536	1					
ANR	8676577	AssignmentExpression	npalette = 0		8676536	2		=			
ANR	8676578	Identifier	npalette		8676536	0					
ANR	8676579	PrimaryExpression	0		8676536	1					
ANR	8676580	WhileStatement	"while ( next_format ( & colour_type , & bit_depth , & npalette , pm -> test_lbg_gamma_sbit , pm -> test_tRNS ) )"		8676536	2					
ANR	8676581	Condition	"next_format ( & colour_type , & bit_depth , & npalette , pm -> test_lbg_gamma_sbit , pm -> test_tRNS )"	10678:13:338717:338829	8676536	0	True				
ANR	8676582	CallExpression	"next_format ( & colour_type , & bit_depth , & npalette , pm -> test_lbg_gamma_sbit , pm -> test_tRNS )"		8676536	0					
ANR	8676583	Callee	next_format		8676536	0					
ANR	8676584	Identifier	next_format		8676536	0					
ANR	8676585	ArgumentList	& colour_type		8676536	1					
ANR	8676586	Argument	& colour_type		8676536	0					
ANR	8676587	UnaryOperationExpression	& colour_type		8676536	0					
ANR	8676588	UnaryOperator	&		8676536	0					
ANR	8676589	Identifier	colour_type		8676536	1					
ANR	8676590	Argument	& bit_depth		8676536	1					
ANR	8676591	UnaryOperationExpression	& bit_depth		8676536	0					
ANR	8676592	UnaryOperator	&		8676536	0					
ANR	8676593	Identifier	bit_depth		8676536	1					
ANR	8676594	Argument	& npalette		8676536	2					
ANR	8676595	UnaryOperationExpression	& npalette		8676536	0					
ANR	8676596	UnaryOperator	&		8676536	0					
ANR	8676597	Identifier	npalette		8676536	1					
ANR	8676598	Argument	pm -> test_lbg_gamma_sbit		8676536	3					
ANR	8676599	PtrMemberAccess	pm -> test_lbg_gamma_sbit		8676536	0					
ANR	8676600	Identifier	pm		8676536	0					
ANR	8676601	Identifier	test_lbg_gamma_sbit		8676536	1					
ANR	8676602	Argument	pm -> test_tRNS		8676536	4					
ANR	8676603	PtrMemberAccess	pm -> test_tRNS		8676536	0					
ANR	8676604	Identifier	pm		8676536	0					
ANR	8676605	Identifier	test_tRNS		8676536	1					
ANR	8676606	IfStatement	if ( ( colour_type & PNG_COLOR_MASK_ALPHA ) == 0 && ( ( colour_type == 3 && sbit < 8 ) || ( colour_type != 3 && sbit < bit_depth ) ) )		8676536	1					
ANR	8676607	Condition	( colour_type & PNG_COLOR_MASK_ALPHA ) == 0 && ( ( colour_type == 3 && sbit < 8 ) || ( colour_type != 3 && sbit < bit_depth ) )	10680:13:338845:338987	8676536	0	True				
ANR	8676608	AndExpression	( colour_type & PNG_COLOR_MASK_ALPHA ) == 0 && ( ( colour_type == 3 && sbit < 8 ) || ( colour_type != 3 && sbit < bit_depth ) )		8676536	0		&&			
ANR	8676609	EqualityExpression	( colour_type & PNG_COLOR_MASK_ALPHA ) == 0		8676536	0		==			
ANR	8676610	BitAndExpression	colour_type & PNG_COLOR_MASK_ALPHA		8676536	0		&			
ANR	8676611	Identifier	colour_type		8676536	0					
ANR	8676612	Identifier	PNG_COLOR_MASK_ALPHA		8676536	1					
ANR	8676613	PrimaryExpression	0		8676536	1					
ANR	8676614	OrExpression	( colour_type == 3 && sbit < 8 ) || ( colour_type != 3 && sbit < bit_depth )		8676536	1		||			
ANR	8676615	AndExpression	colour_type == 3 && sbit < 8		8676536	0		&&			
ANR	8676616	EqualityExpression	colour_type == 3		8676536	0		==			
ANR	8676617	Identifier	colour_type		8676536	0					
ANR	8676618	PrimaryExpression	3		8676536	1					
ANR	8676619	RelationalExpression	sbit < 8		8676536	1		<			
ANR	8676620	Identifier	sbit		8676536	0					
ANR	8676621	PrimaryExpression	8		8676536	1					
ANR	8676622	AndExpression	colour_type != 3 && sbit < bit_depth		8676536	1		&&			
ANR	8676623	EqualityExpression	colour_type != 3		8676536	0		!=			
ANR	8676624	Identifier	colour_type		8676536	0					
ANR	8676625	PrimaryExpression	3		8676536	1					
ANR	8676626	RelationalExpression	sbit < bit_depth		8676536	1		<			
ANR	8676627	Identifier	sbit		8676536	0					
ANR	8676628	Identifier	bit_depth		8676536	1					
ANR	8676629	CompoundStatement		19:9:650:664	8676536	1					
ANR	8676630	IdentifierDeclStatement	unsigned int i ;	10684:9:339007:339021	8676536	0	True				
ANR	8676631	IdentifierDecl	i		8676536	0					
ANR	8676632	IdentifierDeclType	unsigned int		8676536	0					
ANR	8676633	Identifier	i		8676536	1					
ANR	8676634	ForStatement	for ( i = 0 ; i < pm -> ngamma_tests ; ++ i )		8676536	1					
ANR	8676635	ForInit	i = 0 ;	10686:14:339038:339041	8676536	0	True				
ANR	8676636	AssignmentExpression	i = 0		8676536	0		=			
ANR	8676637	Identifier	i		8676536	0					
ANR	8676638	PrimaryExpression	0		8676536	1					
ANR	8676639	Condition	i < pm -> ngamma_tests	10686:19:339043:339060	8676536	1	True				
ANR	8676640	RelationalExpression	i < pm -> ngamma_tests		8676536	0		<			
ANR	8676641	Identifier	i		8676536	0					
ANR	8676642	PtrMemberAccess	pm -> ngamma_tests		8676536	1					
ANR	8676643	Identifier	pm		8676536	0					
ANR	8676644	Identifier	ngamma_tests		8676536	1					
ANR	8676645	UnaryExpression	++ i	10686:39:339063:339065	8676536	2	True				
ANR	8676646	IncDec	++		8676536	0					
ANR	8676647	Identifier	i		8676536	1					
ANR	8676648	CompoundStatement		23:12:734:748	8676536	3					
ANR	8676649	IdentifierDeclStatement	unsigned int j ;	10688:12:339091:339105	8676536	0	True				
ANR	8676650	IdentifierDecl	j		8676536	0					
ANR	8676651	IdentifierDeclType	unsigned int		8676536	0					
ANR	8676652	Identifier	j		8676536	1					
ANR	8676653	ForStatement	for ( j = 0 ; j < pm -> ngamma_tests ; ++ j )		8676536	1					
ANR	8676654	ForInit	j = 0 ;	10690:17:339125:339128	8676536	0	True				
ANR	8676655	AssignmentExpression	j = 0		8676536	0		=			
ANR	8676656	Identifier	j		8676536	0					
ANR	8676657	PrimaryExpression	0		8676536	1					
ANR	8676658	Condition	j < pm -> ngamma_tests	10690:22:339130:339147	8676536	1	True				
ANR	8676659	RelationalExpression	j < pm -> ngamma_tests		8676536	0		<			
ANR	8676660	Identifier	j		8676536	0					
ANR	8676661	PtrMemberAccess	pm -> ngamma_tests		8676536	1					
ANR	8676662	Identifier	pm		8676536	0					
ANR	8676663	Identifier	ngamma_tests		8676536	1					
ANR	8676664	UnaryExpression	++ j	10690:42:339150:339152	8676536	2	True				
ANR	8676665	IncDec	++		8676536	0					
ANR	8676666	Identifier	j		8676536	1					
ANR	8676667	IfStatement	if ( i != j )		8676536	3					
ANR	8676668	Condition	i != j	10690:51:339159:339164	8676536	0	True				
ANR	8676669	EqualityExpression	i != j		8676536	0		!=			
ANR	8676670	Identifier	i		8676536	0					
ANR	8676671	Identifier	j		8676536	1					
ANR	8676672	CompoundStatement		26:12:822:822	8676536	1					
ANR	8676673	ExpressionStatement	"gamma_transform_test ( pm , colour_type , bit_depth , npalette , pm -> interlace_type , 1 / pm -> gammas [ i ] , pm -> gammas [ j ] , sbit , pm -> use_input_precision_sbit , 0 )"	10692:15:339196:339393	8676536	0	True				
ANR	8676674	CallExpression	"gamma_transform_test ( pm , colour_type , bit_depth , npalette , pm -> interlace_type , 1 / pm -> gammas [ i ] , pm -> gammas [ j ] , sbit , pm -> use_input_precision_sbit , 0 )"		8676536	0					
ANR	8676675	Callee	gamma_transform_test		8676536	0					
ANR	8676676	Identifier	gamma_transform_test		8676536	0					
ANR	8676677	ArgumentList	pm		8676536	1					
ANR	8676678	Argument	pm		8676536	0					
ANR	8676679	Identifier	pm		8676536	0					
ANR	8676680	Argument	colour_type		8676536	1					
ANR	8676681	Identifier	colour_type		8676536	0					
ANR	8676682	Argument	bit_depth		8676536	2					
ANR	8676683	Identifier	bit_depth		8676536	0					
ANR	8676684	Argument	npalette		8676536	3					
ANR	8676685	Identifier	npalette		8676536	0					
ANR	8676686	Argument	pm -> interlace_type		8676536	4					
ANR	8676687	PtrMemberAccess	pm -> interlace_type		8676536	0					
ANR	8676688	Identifier	pm		8676536	0					
ANR	8676689	Identifier	interlace_type		8676536	1					
ANR	8676690	Argument	1 / pm -> gammas [ i ]		8676536	5					
ANR	8676691	MultiplicativeExpression	1 / pm -> gammas [ i ]		8676536	0		/			
ANR	8676692	PrimaryExpression	1		8676536	0					
ANR	8676693	ArrayIndexing	pm -> gammas [ i ]		8676536	1					
ANR	8676694	PtrMemberAccess	pm -> gammas		8676536	0					
ANR	8676695	Identifier	pm		8676536	0					
ANR	8676696	Identifier	gammas		8676536	1					
ANR	8676697	Identifier	i		8676536	1					
ANR	8676698	Argument	pm -> gammas [ j ]		8676536	6					
ANR	8676699	ArrayIndexing	pm -> gammas [ j ]		8676536	0					
ANR	8676700	PtrMemberAccess	pm -> gammas		8676536	0					
ANR	8676701	Identifier	pm		8676536	0					
ANR	8676702	Identifier	gammas		8676536	1					
ANR	8676703	Identifier	j		8676536	1					
ANR	8676704	Argument	sbit		8676536	7					
ANR	8676705	Identifier	sbit		8676536	0					
ANR	8676706	Argument	pm -> use_input_precision_sbit		8676536	8					
ANR	8676707	PtrMemberAccess	pm -> use_input_precision_sbit		8676536	0					
ANR	8676708	Identifier	pm		8676536	0					
ANR	8676709	Identifier	use_input_precision_sbit		8676536	1					
ANR	8676710	Argument	0		8676536	9					
ANR	8676711	PrimaryExpression	0		8676536	0					
ANR	8676712	IfStatement	if ( fail ( pm ) )		8676536	1					
ANR	8676713	Condition	fail ( pm )	10696:19:339415:339422	8676536	0	True				
ANR	8676714	CallExpression	fail ( pm )		8676536	0					
ANR	8676715	Callee	fail		8676536	0					
ANR	8676716	Identifier	fail		8676536	0					
ANR	8676717	ArgumentList	pm		8676536	1					
ANR	8676718	Argument	pm		8676536	0					
ANR	8676719	Identifier	pm		8676536	0					
ANR	8676720	ReturnStatement	return ;	10697:18:339443:339449	8676536	1	True				
ANR	8676721	ReturnType	static void		8676536	1					
ANR	8676722	Identifier	perform_gamma_sbit_tests		8676536	2					
ANR	8676723	ParameterList	png_modifier * pm		8676536	3					
ANR	8676724	Parameter	png_modifier * pm	10665:37:338338:338353	8676536	0	True				
ANR	8676725	ParameterType	png_modifier *		8676536	0					
ANR	8676726	Identifier	pm		8676536	1					
ANR	8676727	CFGEntryNode	ENTRY		8676536		True				
ANR	8676728	CFGExitNode	EXIT		8676536		True				
ANR	8676729	Symbol	pm -> test_tRNS		8676536						
ANR	8676730	Symbol	pm -> test_lbg_gamma_sbit		8676536						
ANR	8676731	Symbol	sbit		8676536						
ANR	8676732	Symbol	& npalette		8676536						
ANR	8676733	Symbol	& bit_depth		8676536						
ANR	8676734	Symbol	pm -> interlace_type		8676536						
ANR	8676735	Symbol	pm -> use_input_precision_sbit		8676536						
ANR	8676736	Symbol	* pm		8676536						
ANR	8676737	Symbol	pm -> ngamma_tests		8676536						
ANR	8676738	Symbol	* pm -> gammas		8676536						
ANR	8676739	Symbol	next_format		8676536						
ANR	8676740	Symbol	i		8676536						
ANR	8676741	Symbol	j		8676536						
ANR	8676742	Symbol	* * pm		8676536						
ANR	8676743	Symbol	npalette		8676536						
ANR	8676744	Symbol	colour_type		8676536						
ANR	8676745	Symbol	fail		8676536						
ANR	8676746	Symbol	pm -> gammas		8676536						
ANR	8676747	Symbol	* i		8676536						
ANR	8676748	Symbol	* j		8676536						
ANR	8676749	Symbol	PNG_COLOR_MASK_ALPHA		8676536						
ANR	8676750	Symbol	& colour_type		8676536						
ANR	8676751	Symbol	READ_BDHI		8676536						
ANR	8676752	Symbol	bit_depth		8676536						
ANR	8676753	Symbol	pm		8676536						
ANR	8676754	Symbol	pm -> sbitlow		8676536						
ANR	8676755	Function	perform_gamma_scale16_tests	10709:0:339700:341620							
ANR	8676756	FunctionDef	perform_gamma_scale16_tests (png_modifier * pm)		8676755	0					
ANR	8676757	CompoundStatement		10710:0:339758:341620	8676755	0					
ANR	8676758	Statement	ifndef	10711:3:339763:339768	8676755	0	True				
ANR	8676759	Statement	PNG_MAX_GAMMA_8	10711:10:339770:339784	8676755	1	True				
ANR	8676760	Statement	define	10712:6:339792:339797	8676755	2	True				
ANR	8676761	Statement	PNG_MAX_GAMMA_8	10712:13:339799:339813	8676755	3	True				
ANR	8676762	Statement	11	10712:29:339815:339816	8676755	4	True				
ANR	8676763	Statement	endif	10713:3:339821:339825	8676755	5	True				
ANR	8676764	Statement	if	10714:3:339830:339831	8676755	6	True				
ANR	8676765	Statement	defined	10714:6:339833:339839	8676755	7	True				
ANR	8676766	Statement	PNG_MAX_GAMMA_8	10714:14:339841:339855	8676755	8	True				
ANR	8676767	Statement	||	10714:30:339857:339858	8676755	9	True				
ANR	8676768	Statement	PNG_LIBPNG_VER	10714:33:339860:339873	8676755	10	True				
ANR	8676769	Statement	<	10714:48:339875:339875	8676755	11	True				
ANR	8676770	Statement	10700	10714:50:339877:339881	8676755	12	True				
ANR	8676771	Statement	define	10715:6:339889:339894	8676755	13	True				
ANR	8676772	Statement	SBIT_16_TO_8	10715:13:339896:339907	8676755	14	True				
ANR	8676773	Statement	PNG_MAX_GAMMA_8	10715:26:339909:339923	8676755	15	True				
ANR	8676774	ReturnType	static void		8676755	1					
ANR	8676775	Identifier	perform_gamma_scale16_tests		8676755	2					
ANR	8676776	ParameterList	png_modifier * pm		8676755	3					
ANR	8676777	Parameter	png_modifier * pm	10709:40:339740:339755	8676755	0	True				
ANR	8676778	ParameterType	png_modifier *		8676755	0					
ANR	8676779	Identifier	pm		8676755	1					
ANR	8676780	CFGEntryNode	ENTRY		8676755		True				
ANR	8676781	CFGExitNode	EXIT		8676755		True				
ANR	8676782	Symbol	pm		8676755						
ANR	8676783	Function	gamma_composition_test	10770:0:341748:347315							
ANR	8676784	FunctionDef	"gamma_composition_test (png_modifier * pm , const png_byte colour_type , const png_byte bit_depth , const int palette_number , const int interlace_type , const double file_gamma , const double screen_gamma , const int use_input_precision , const int do_background , const int expand_16)"		8676783	0					
ANR	8676785	CompoundStatement		10777:0:342054:347315	8676783	0					
ANR	8676786	IdentifierDeclStatement	size_t pos = 0 ;	10778:3:342059:342073	8676783	0	True				
ANR	8676787	IdentifierDecl	pos = 0		8676783	0					
ANR	8676788	IdentifierDeclType	size_t		8676783	0					
ANR	8676789	Identifier	pos		8676783	1					
ANR	8676790	AssignmentExpression	pos = 0		8676783	2		=			
ANR	8676791	Identifier	pos		8676783	0					
ANR	8676792	PrimaryExpression	0		8676783	1					
ANR	8676793	IdentifierDeclStatement	png_const_charp base ;	10779:3:342078:342098	8676783	1	True				
ANR	8676794	IdentifierDecl	base		8676783	0					
ANR	8676795	IdentifierDeclType	png_const_charp		8676783	0					
ANR	8676796	Identifier	base		8676783	1					
ANR	8676797	IdentifierDeclStatement	double bg ;	10780:3:342103:342112	8676783	2	True				
ANR	8676798	IdentifierDecl	bg		8676783	0					
ANR	8676799	IdentifierDeclType	double		8676783	0					
ANR	8676800	Identifier	bg		8676783	1					
ANR	8676801	IdentifierDeclStatement	char name [ 128 ] ;	10781:3:342117:342131	8676783	3	True				
ANR	8676802	IdentifierDecl	name [ 128 ]		8676783	0					
ANR	8676803	IdentifierDeclType	char [ 128 ]		8676783	0					
ANR	8676804	Identifier	name		8676783	1					
ANR	8676805	PrimaryExpression	128		8676783	2					
ANR	8676806	IdentifierDeclStatement	png_color_16 background ;	10782:3:342136:342159	8676783	4	True				
ANR	8676807	IdentifierDecl	background		8676783	0					
ANR	8676808	IdentifierDeclType	png_color_16		8676783	0					
ANR	8676809	Identifier	background		8676783	1					
ANR	8676810	SwitchStatement	switch ( do_background )		8676783	5					
ANR	8676811	Condition	do_background	10785:11:342244:342256	8676783	0	True				
ANR	8676812	Identifier	do_background		8676783	0					
ANR	8676813	CompoundStatement		10:3:207:207	8676783	1					
ANR	8676814	Label	default :	10787:6:342270:342277	8676783	0	True				
ANR	8676815	Identifier	default		8676783	0					
ANR	8676816	ExpressionStatement	"base = """""	10788:9:342288:342297	8676783	1	True				
ANR	8676817	AssignmentExpression	"base = """""		8676783	0		=			
ANR	8676818	Identifier	base		8676783	0					
ANR	8676819	PrimaryExpression	""""""		8676783	1					
ANR	8676820	ExpressionStatement	bg = 4	10789:9:342308:342314	8676783	2	True				
ANR	8676821	AssignmentExpression	bg = 4		8676783	0		=			
ANR	8676822	Identifier	bg		8676783	0					
ANR	8676823	PrimaryExpression	4		8676783	1					
ANR	8676824	BreakStatement	break ;	10790:9:342350:342355	8676783	3	True				
ANR	8676825	Label	case PNG_BACKGROUND_GAMMA_SCREEN :	10791:6:342363:342395	8676783	4	True				
ANR	8676826	Identifier	PNG_BACKGROUND_GAMMA_SCREEN		8676783	0					
ANR	8676827	ExpressionStatement	"base = "" bckg(Screen):"""	10792:9:342406:342429	8676783	5	True				
ANR	8676828	AssignmentExpression	"base = "" bckg(Screen):"""		8676783	0		=			
ANR	8676829	Identifier	base		8676783	0					
ANR	8676830	PrimaryExpression	""" bckg(Screen):"""		8676783	1					
ANR	8676831	ExpressionStatement	bg = 1 / screen_gamma	10793:9:342440:342459	8676783	6	True				
ANR	8676832	AssignmentExpression	bg = 1 / screen_gamma		8676783	0		=			
ANR	8676833	Identifier	bg		8676783	0					
ANR	8676834	MultiplicativeExpression	1 / screen_gamma		8676783	1		/			
ANR	8676835	PrimaryExpression	1		8676783	0					
ANR	8676836	Identifier	screen_gamma		8676783	1					
ANR	8676837	BreakStatement	break ;	10794:9:342470:342475	8676783	7	True				
ANR	8676838	Label	case PNG_BACKGROUND_GAMMA_FILE :	10795:6:342483:342513	8676783	8	True				
ANR	8676839	Identifier	PNG_BACKGROUND_GAMMA_FILE		8676783	0					
ANR	8676840	ExpressionStatement	"base = "" bckg(File):"""	10796:9:342524:342545	8676783	9	True				
ANR	8676841	AssignmentExpression	"base = "" bckg(File):"""		8676783	0		=			
ANR	8676842	Identifier	base		8676783	0					
ANR	8676843	PrimaryExpression	""" bckg(File):"""		8676783	1					
ANR	8676844	ExpressionStatement	bg = file_gamma	10797:9:342556:342571	8676783	10	True				
ANR	8676845	AssignmentExpression	bg = file_gamma		8676783	0		=			
ANR	8676846	Identifier	bg		8676783	0					
ANR	8676847	Identifier	file_gamma		8676783	1					
ANR	8676848	BreakStatement	break ;	10798:9:342582:342587	8676783	11	True				
ANR	8676849	Label	case PNG_BACKGROUND_GAMMA_UNIQUE :	10799:6:342595:342627	8676783	12	True				
ANR	8676850	Identifier	PNG_BACKGROUND_GAMMA_UNIQUE		8676783	0					
ANR	8676851	ExpressionStatement	"base = "" bckg(Unique):"""	10800:9:342638:342661	8676783	13	True				
ANR	8676852	AssignmentExpression	"base = "" bckg(Unique):"""		8676783	0		=			
ANR	8676853	Identifier	base		8676783	0					
ANR	8676854	PrimaryExpression	""" bckg(Unique):"""		8676783	1					
ANR	8676855	ExpressionStatement	bg = ( file_gamma + screen_gamma ) / 3	10805:9:342865:342901	8676783	14	True				
ANR	8676856	AssignmentExpression	bg = ( file_gamma + screen_gamma ) / 3		8676783	0		=			
ANR	8676857	Identifier	bg		8676783	0					
ANR	8676858	MultiplicativeExpression	( file_gamma + screen_gamma ) / 3		8676783	1		/			
ANR	8676859	AdditiveExpression	file_gamma + screen_gamma		8676783	0		+			
ANR	8676860	Identifier	file_gamma		8676783	0					
ANR	8676861	Identifier	screen_gamma		8676783	1					
ANR	8676862	PrimaryExpression	3		8676783	1					
ANR	8676863	BreakStatement	break ;	10806:9:342912:342917	8676783	15	True				
ANR	8676864	Statement	case	10808:6:342962:342965	8676783	16	True				
ANR	8676865	Statement	ALPHA_MODE_OFFSET	10808:11:342967:342983	8676783	17	True				
ANR	8676866	Statement	+	10808:29:342985:342985	8676783	18	True				
ANR	8676867	Label	PNG_ALPHA_PNG :	10808:31:342987:343000	8676783	19	True				
ANR	8676868	Identifier	PNG_ALPHA_PNG		8676783	0					
ANR	8676869	ExpressionStatement	"base = "" alpha(PNG)"""	10809:9:343011:343031	8676783	20	True				
ANR	8676870	AssignmentExpression	"base = "" alpha(PNG)"""		8676783	0		=			
ANR	8676871	Identifier	base		8676783	0					
ANR	8676872	PrimaryExpression	""" alpha(PNG)"""		8676783	1					
ANR	8676873	ExpressionStatement	bg = 4	10810:9:343042:343048	8676783	21	True				
ANR	8676874	AssignmentExpression	bg = 4		8676783	0		=			
ANR	8676875	Identifier	bg		8676783	0					
ANR	8676876	PrimaryExpression	4		8676783	1					
ANR	8676877	BreakStatement	break ;	10811:9:343084:343089	8676783	22	True				
ANR	8676878	Statement	case	10812:6:343097:343100	8676783	23	True				
ANR	8676879	Statement	ALPHA_MODE_OFFSET	10812:11:343102:343118	8676783	24	True				
ANR	8676880	Statement	+	10812:29:343120:343120	8676783	25	True				
ANR	8676881	Label	PNG_ALPHA_STANDARD :	10812:31:343122:343140	8676783	26	True				
ANR	8676882	Identifier	PNG_ALPHA_STANDARD		8676783	0					
ANR	8676883	ExpressionStatement	"base = "" alpha(Porter-Duff)"""	10813:9:343151:343179	8676783	27	True				
ANR	8676884	AssignmentExpression	"base = "" alpha(Porter-Duff)"""		8676783	0		=			
ANR	8676885	Identifier	base		8676783	0					
ANR	8676886	PrimaryExpression	""" alpha(Porter-Duff)"""		8676783	1					
ANR	8676887	ExpressionStatement	bg = 4	10814:9:343190:343196	8676783	28	True				
ANR	8676888	AssignmentExpression	bg = 4		8676783	0		=			
ANR	8676889	Identifier	bg		8676783	0					
ANR	8676890	PrimaryExpression	4		8676783	1					
ANR	8676891	BreakStatement	break ;	10815:9:343232:343237	8676783	29	True				
ANR	8676892	Statement	case	10816:6:343245:343248	8676783	30	True				
ANR	8676893	Statement	ALPHA_MODE_OFFSET	10816:11:343250:343266	8676783	31	True				
ANR	8676894	Statement	+	10816:29:343268:343268	8676783	32	True				
ANR	8676895	Label	PNG_ALPHA_OPTIMIZED :	10816:31:343270:343289	8676783	33	True				
ANR	8676896	Identifier	PNG_ALPHA_OPTIMIZED		8676783	0					
ANR	8676897	ExpressionStatement	"base = "" alpha(Optimized)"""	10817:9:343300:343326	8676783	34	True				
ANR	8676898	AssignmentExpression	"base = "" alpha(Optimized)"""		8676783	0		=			
ANR	8676899	Identifier	base		8676783	0					
ANR	8676900	PrimaryExpression	""" alpha(Optimized)"""		8676783	1					
ANR	8676901	ExpressionStatement	bg = 4	10818:9:343337:343343	8676783	35	True				
ANR	8676902	AssignmentExpression	bg = 4		8676783	0		=			
ANR	8676903	Identifier	bg		8676783	0					
ANR	8676904	PrimaryExpression	4		8676783	1					
ANR	8676905	BreakStatement	break ;	10819:9:343379:343384	8676783	36	True				
ANR	8676906	Statement	case	10820:6:343392:343395	8676783	37	True				
ANR	8676907	Statement	ALPHA_MODE_OFFSET	10820:11:343397:343413	8676783	38	True				
ANR	8676908	Statement	+	10820:29:343415:343415	8676783	39	True				
ANR	8676909	Label	PNG_ALPHA_BROKEN :	10820:31:343417:343433	8676783	40	True				
ANR	8676910	Identifier	PNG_ALPHA_BROKEN		8676783	0					
ANR	8676911	ExpressionStatement	"base = "" alpha(Broken)"""	10821:9:343444:343467	8676783	41	True				
ANR	8676912	AssignmentExpression	"base = "" alpha(Broken)"""		8676783	0		=			
ANR	8676913	Identifier	base		8676783	0					
ANR	8676914	PrimaryExpression	""" alpha(Broken)"""		8676783	1					
ANR	8676915	ExpressionStatement	bg = 4	10822:9:343478:343484	8676783	42	True				
ANR	8676916	AssignmentExpression	bg = 4		8676783	0		=			
ANR	8676917	Identifier	bg		8676783	0					
ANR	8676918	PrimaryExpression	4		8676783	1					
ANR	8676919	BreakStatement	break ;	10823:9:343520:343525	8676783	43	True				
ANR	8676920	IfStatement	if ( expand_16 || bit_depth == 16 )		8676783	6					
ANR	8676921	Condition	expand_16 || bit_depth == 16	10830:7:343678:343705	8676783	0	True				
ANR	8676922	OrExpression	expand_16 || bit_depth == 16		8676783	0		||			
ANR	8676923	Identifier	expand_16		8676783	0					
ANR	8676924	EqualityExpression	bit_depth == 16		8676783	1		==			
ANR	8676925	Identifier	bit_depth		8676783	0					
ANR	8676926	PrimaryExpression	16		8676783	1					
ANR	8676927	CompoundStatement		56:6:1664:1691	8676783	1					
ANR	8676928	IdentifierDeclStatement	png_uint_32 r = random_32 ( ) ;	10832:6:343719:343746	8676783	0	True				
ANR	8676929	IdentifierDecl	r = random_32 ( )		8676783	0					
ANR	8676930	IdentifierDeclType	png_uint_32		8676783	0					
ANR	8676931	Identifier	r		8676783	1					
ANR	8676932	AssignmentExpression	r = random_32 ( )		8676783	2		=			
ANR	8676933	Identifier	r		8676783	0					
ANR	8676934	CallExpression	random_32 ( )		8676783	1					
ANR	8676935	Callee	random_32		8676783	0					
ANR	8676936	Identifier	random_32		8676783	0					
ANR	8676937	ArgumentList			8676783	1					
ANR	8676938	ExpressionStatement	background . red = ( png_uint_16 ) r	10834:6:343755:343786	8676783	1	True				
ANR	8676939	AssignmentExpression	background . red = ( png_uint_16 ) r		8676783	0		=			
ANR	8676940	MemberAccess	background . red		8676783	0					
ANR	8676941	Identifier	background		8676783	0					
ANR	8676942	Identifier	red		8676783	1					
ANR	8676943	CastExpression	( png_uint_16 ) r		8676783	1					
ANR	8676944	CastTarget	png_uint_16		8676783	0					
ANR	8676945	Identifier	r		8676783	1					
ANR	8676946	ExpressionStatement	background . green = ( png_uint_16 ) ( r >> 16 )	10835:6:343794:343835	8676783	2	True				
ANR	8676947	AssignmentExpression	background . green = ( png_uint_16 ) ( r >> 16 )		8676783	0		=			
ANR	8676948	MemberAccess	background . green		8676783	0					
ANR	8676949	Identifier	background		8676783	0					
ANR	8676950	Identifier	green		8676783	1					
ANR	8676951	CastExpression	( png_uint_16 ) ( r >> 16 )		8676783	1					
ANR	8676952	CastTarget	png_uint_16		8676783	0					
ANR	8676953	ShiftExpression	r >> 16		8676783	1		>>			
ANR	8676954	Identifier	r		8676783	0					
ANR	8676955	PrimaryExpression	16		8676783	1					
ANR	8676956	ExpressionStatement	r = random_32 ( )	10836:6:343843:343858	8676783	3	True				
ANR	8676957	AssignmentExpression	r = random_32 ( )		8676783	0		=			
ANR	8676958	Identifier	r		8676783	0					
ANR	8676959	CallExpression	random_32 ( )		8676783	1					
ANR	8676960	Callee	random_32		8676783	0					
ANR	8676961	Identifier	random_32		8676783	0					
ANR	8676962	ArgumentList			8676783	1					
ANR	8676963	ExpressionStatement	background . blue = ( png_uint_16 ) r	10837:6:343866:343898	8676783	4	True				
ANR	8676964	AssignmentExpression	background . blue = ( png_uint_16 ) r		8676783	0		=			
ANR	8676965	MemberAccess	background . blue		8676783	0					
ANR	8676966	Identifier	background		8676783	0					
ANR	8676967	Identifier	blue		8676783	1					
ANR	8676968	CastExpression	( png_uint_16 ) r		8676783	1					
ANR	8676969	CastTarget	png_uint_16		8676783	0					
ANR	8676970	Identifier	r		8676783	1					
ANR	8676971	ExpressionStatement	background . gray = ( png_uint_16 ) ( r >> 16 )	10838:6:343906:343946	8676783	5	True				
ANR	8676972	AssignmentExpression	background . gray = ( png_uint_16 ) ( r >> 16 )		8676783	0		=			
ANR	8676973	MemberAccess	background . gray		8676783	0					
ANR	8676974	Identifier	background		8676783	0					
ANR	8676975	Identifier	gray		8676783	1					
ANR	8676976	CastExpression	( png_uint_16 ) ( r >> 16 )		8676783	1					
ANR	8676977	CastTarget	png_uint_16		8676783	0					
ANR	8676978	ShiftExpression	r >> 16		8676783	1		>>			
ANR	8676979	Identifier	r		8676783	0					
ANR	8676980	PrimaryExpression	16		8676783	1					
ANR	8676981	Statement	if	10846:6:344291:344292	8676783	6	True				
ANR	8676982	Statement	DIGITIZE	10846:9:344294:344301	8676783	7	True				
ANR	8676983	IfStatement	if ( expand_16 && ( do_background == PNG_BACKGROUND_GAMMA_UNIQUE || do_background == PNG_BACKGROUND_GAMMA_FILE ) && fabs ( bg * screen_gamma - 1 ) > PNG_GAMMA_THRESHOLD )		8676783	8					
ANR	8676984	Condition	expand_16 && ( do_background == PNG_BACKGROUND_GAMMA_UNIQUE || do_background == PNG_BACKGROUND_GAMMA_FILE ) && fabs ( bg * screen_gamma - 1 ) > PNG_GAMMA_THRESHOLD	10847:13:344316:344508	8676783	0	True				
ANR	8676985	AndExpression	expand_16 && ( do_background == PNG_BACKGROUND_GAMMA_UNIQUE || do_background == PNG_BACKGROUND_GAMMA_FILE ) && fabs ( bg * screen_gamma - 1 ) > PNG_GAMMA_THRESHOLD		8676783	0		&&			
ANR	8676986	Identifier	expand_16		8676783	0					
ANR	8676987	AndExpression	( do_background == PNG_BACKGROUND_GAMMA_UNIQUE || do_background == PNG_BACKGROUND_GAMMA_FILE ) && fabs ( bg * screen_gamma - 1 ) > PNG_GAMMA_THRESHOLD		8676783	1		&&			
ANR	8676988	OrExpression	do_background == PNG_BACKGROUND_GAMMA_UNIQUE || do_background == PNG_BACKGROUND_GAMMA_FILE		8676783	0		||			
ANR	8676989	EqualityExpression	do_background == PNG_BACKGROUND_GAMMA_UNIQUE		8676783	0		==			
ANR	8676990	Identifier	do_background		8676783	0					
ANR	8676991	Identifier	PNG_BACKGROUND_GAMMA_UNIQUE		8676783	1					
ANR	8676992	EqualityExpression	do_background == PNG_BACKGROUND_GAMMA_FILE		8676783	1		==			
ANR	8676993	Identifier	do_background		8676783	0					
ANR	8676994	Identifier	PNG_BACKGROUND_GAMMA_FILE		8676783	1					
ANR	8676995	RelationalExpression	fabs ( bg * screen_gamma - 1 ) > PNG_GAMMA_THRESHOLD		8676783	1		>			
ANR	8676996	CallExpression	fabs ( bg * screen_gamma - 1 )		8676783	0					
ANR	8676997	Callee	fabs		8676783	0					
ANR	8676998	Identifier	fabs		8676783	0					
ANR	8676999	ArgumentList	bg * screen_gamma - 1		8676783	1					
ANR	8677000	Argument	bg * screen_gamma - 1		8676783	0					
ANR	8677001	AdditiveExpression	bg * screen_gamma - 1		8676783	0		-			
ANR	8677002	MultiplicativeExpression	bg * screen_gamma		8676783	0		*			
ANR	8677003	Identifier	bg		8676783	0					
ANR	8677004	Identifier	screen_gamma		8676783	1					
ANR	8677005	PrimaryExpression	1		8676783	1					
ANR	8677006	Identifier	PNG_GAMMA_THRESHOLD		8676783	1					
ANR	8677007	CompoundStatement		74:9:2465:2465	8676783	1					
ANR	8677008	ExpressionStatement	background . red = ( png_uint_16 ) ( ( background . red >> 8 ) * 257 )	10855:12:344757:344816	8676783	0	True				
ANR	8677009	AssignmentExpression	background . red = ( png_uint_16 ) ( ( background . red >> 8 ) * 257 )		8676783	0		=			
ANR	8677010	MemberAccess	background . red		8676783	0					
ANR	8677011	Identifier	background		8676783	0					
ANR	8677012	Identifier	red		8676783	1					
ANR	8677013	CastExpression	( png_uint_16 ) ( ( background . red >> 8 ) * 257 )		8676783	1					
ANR	8677014	CastTarget	png_uint_16		8676783	0					
ANR	8677015	MultiplicativeExpression	( background . red >> 8 ) * 257		8676783	1		*			
ANR	8677016	ShiftExpression	background . red >> 8		8676783	0		>>			
ANR	8677017	MemberAccess	background . red		8676783	0					
ANR	8677018	Identifier	background		8676783	0					
ANR	8677019	Identifier	red		8676783	1					
ANR	8677020	PrimaryExpression	8		8676783	1					
ANR	8677021	PrimaryExpression	257		8676783	1					
ANR	8677022	ExpressionStatement	background . green = ( png_uint_16 ) ( ( background . green >> 8 ) * 257 )	10856:12:344830:344893	8676783	1	True				
ANR	8677023	AssignmentExpression	background . green = ( png_uint_16 ) ( ( background . green >> 8 ) * 257 )		8676783	0		=			
ANR	8677024	MemberAccess	background . green		8676783	0					
ANR	8677025	Identifier	background		8676783	0					
ANR	8677026	Identifier	green		8676783	1					
ANR	8677027	CastExpression	( png_uint_16 ) ( ( background . green >> 8 ) * 257 )		8676783	1					
ANR	8677028	CastTarget	png_uint_16		8676783	0					
ANR	8677029	MultiplicativeExpression	( background . green >> 8 ) * 257		8676783	1		*			
ANR	8677030	ShiftExpression	background . green >> 8		8676783	0		>>			
ANR	8677031	MemberAccess	background . green		8676783	0					
ANR	8677032	Identifier	background		8676783	0					
ANR	8677033	Identifier	green		8676783	1					
ANR	8677034	PrimaryExpression	8		8676783	1					
ANR	8677035	PrimaryExpression	257		8676783	1					
ANR	8677036	ExpressionStatement	background . blue = ( png_uint_16 ) ( ( background . blue >> 8 ) * 257 )	10857:12:344907:344968	8676783	2	True				
ANR	8677037	AssignmentExpression	background . blue = ( png_uint_16 ) ( ( background . blue >> 8 ) * 257 )		8676783	0		=			
ANR	8677038	MemberAccess	background . blue		8676783	0					
ANR	8677039	Identifier	background		8676783	0					
ANR	8677040	Identifier	blue		8676783	1					
ANR	8677041	CastExpression	( png_uint_16 ) ( ( background . blue >> 8 ) * 257 )		8676783	1					
ANR	8677042	CastTarget	png_uint_16		8676783	0					
ANR	8677043	MultiplicativeExpression	( background . blue >> 8 ) * 257		8676783	1		*			
ANR	8677044	ShiftExpression	background . blue >> 8		8676783	0		>>			
ANR	8677045	MemberAccess	background . blue		8676783	0					
ANR	8677046	Identifier	background		8676783	0					
ANR	8677047	Identifier	blue		8676783	1					
ANR	8677048	PrimaryExpression	8		8676783	1					
ANR	8677049	PrimaryExpression	257		8676783	1					
ANR	8677050	ExpressionStatement	background . gray = ( png_uint_16 ) ( ( background . gray >> 8 ) * 257 )	10858:12:344982:345043	8676783	3	True				
ANR	8677051	AssignmentExpression	background . gray = ( png_uint_16 ) ( ( background . gray >> 8 ) * 257 )		8676783	0		=			
ANR	8677052	MemberAccess	background . gray		8676783	0					
ANR	8677053	Identifier	background		8676783	0					
ANR	8677054	Identifier	gray		8676783	1					
ANR	8677055	CastExpression	( png_uint_16 ) ( ( background . gray >> 8 ) * 257 )		8676783	1					
ANR	8677056	CastTarget	png_uint_16		8676783	0					
ANR	8677057	MultiplicativeExpression	( background . gray >> 8 ) * 257		8676783	1		*			
ANR	8677058	ShiftExpression	background . gray >> 8		8676783	0		>>			
ANR	8677059	MemberAccess	background . gray		8676783	0					
ANR	8677060	Identifier	background		8676783	0					
ANR	8677061	Identifier	gray		8676783	1					
ANR	8677062	PrimaryExpression	8		8676783	1					
ANR	8677063	PrimaryExpression	257		8676783	1					
ANR	8677064	Statement	endif	10860:6:345062:345066	8676783	9	True				
ANR	8677065	ElseStatement	else		8676783	0					
ANR	8677066	CompoundStatement		89:6:3057:3084	8676783	0					
ANR	8677067	IdentifierDeclStatement	png_uint_32 r = random_32 ( ) ;	10865:6:345112:345139	8676783	0	True				
ANR	8677068	IdentifierDecl	r = random_32 ( )		8676783	0					
ANR	8677069	IdentifierDeclType	png_uint_32		8676783	0					
ANR	8677070	Identifier	r		8676783	1					
ANR	8677071	AssignmentExpression	r = random_32 ( )		8676783	2		=			
ANR	8677072	Identifier	r		8676783	0					
ANR	8677073	CallExpression	random_32 ( )		8676783	1					
ANR	8677074	Callee	random_32		8676783	0					
ANR	8677075	Identifier	random_32		8676783	0					
ANR	8677076	ArgumentList			8676783	1					
ANR	8677077	ExpressionStatement	background . red = ( png_byte ) r	10867:6:345148:345176	8676783	1	True				
ANR	8677078	AssignmentExpression	background . red = ( png_byte ) r		8676783	0		=			
ANR	8677079	MemberAccess	background . red		8676783	0					
ANR	8677080	Identifier	background		8676783	0					
ANR	8677081	Identifier	red		8676783	1					
ANR	8677082	CastExpression	( png_byte ) r		8676783	1					
ANR	8677083	CastTarget	png_byte		8676783	0					
ANR	8677084	Identifier	r		8676783	1					
ANR	8677085	ExpressionStatement	background . green = ( png_byte ) ( r >> 8 )	10868:6:345184:345221	8676783	2	True				
ANR	8677086	AssignmentExpression	background . green = ( png_byte ) ( r >> 8 )		8676783	0		=			
ANR	8677087	MemberAccess	background . green		8676783	0					
ANR	8677088	Identifier	background		8676783	0					
ANR	8677089	Identifier	green		8676783	1					
ANR	8677090	CastExpression	( png_byte ) ( r >> 8 )		8676783	1					
ANR	8677091	CastTarget	png_byte		8676783	0					
ANR	8677092	ShiftExpression	r >> 8		8676783	1		>>			
ANR	8677093	Identifier	r		8676783	0					
ANR	8677094	PrimaryExpression	8		8676783	1					
ANR	8677095	ExpressionStatement	background . blue = ( png_byte ) ( r >> 16 )	10869:6:345229:345266	8676783	3	True				
ANR	8677096	AssignmentExpression	background . blue = ( png_byte ) ( r >> 16 )		8676783	0		=			
ANR	8677097	MemberAccess	background . blue		8676783	0					
ANR	8677098	Identifier	background		8676783	0					
ANR	8677099	Identifier	blue		8676783	1					
ANR	8677100	CastExpression	( png_byte ) ( r >> 16 )		8676783	1					
ANR	8677101	CastTarget	png_byte		8676783	0					
ANR	8677102	ShiftExpression	r >> 16		8676783	1		>>			
ANR	8677103	Identifier	r		8676783	0					
ANR	8677104	PrimaryExpression	16		8676783	1					
ANR	8677105	ExpressionStatement	background . gray = ( png_byte ) ( r >> 24 )	10870:6:345274:345311	8676783	4	True				
ANR	8677106	AssignmentExpression	background . gray = ( png_byte ) ( r >> 24 )		8676783	0		=			
ANR	8677107	MemberAccess	background . gray		8676783	0					
ANR	8677108	Identifier	background		8676783	0					
ANR	8677109	Identifier	gray		8676783	1					
ANR	8677110	CastExpression	( png_byte ) ( r >> 24 )		8676783	1					
ANR	8677111	CastTarget	png_byte		8676783	0					
ANR	8677112	ShiftExpression	r >> 24		8676783	1		>>			
ANR	8677113	Identifier	r		8676783	0					
ANR	8677114	PrimaryExpression	24		8676783	1					
ANR	8677115	ExpressionStatement	background . index = 193	10873:3:345322:345344	8676783	7	True				
ANR	8677116	AssignmentExpression	background . index = 193		8676783	0		=			
ANR	8677117	MemberAccess	background . index		8676783	0					
ANR	8677118	Identifier	background		8676783	0					
ANR	8677119	Identifier	index		8676783	1					
ANR	8677120	PrimaryExpression	193		8676783	1					
ANR	8677121	IfStatement	if ( ! ( colour_type & PNG_COLOR_MASK_COLOR ) )		8676783	8					
ANR	8677122	Condition	! ( colour_type & PNG_COLOR_MASK_COLOR )	10875:7:345394:345430	8676783	0	True				
ANR	8677123	UnaryOperationExpression	! ( colour_type & PNG_COLOR_MASK_COLOR )		8676783	0					
ANR	8677124	UnaryOperator	!		8676783	0					
ANR	8677125	BitAndExpression	colour_type & PNG_COLOR_MASK_COLOR		8676783	1		&			
ANR	8677126	Identifier	colour_type		8676783	0					
ANR	8677127	Identifier	PNG_COLOR_MASK_COLOR		8676783	1					
ANR	8677128	CompoundStatement		100:3:3381:3381	8676783	1					
ANR	8677129	IfStatement	if ( bit_depth < 8 )		8676783	0					
ANR	8677130	Condition	bit_depth < 8	10882:10:345725:345737	8676783	0	True				
ANR	8677131	RelationalExpression	bit_depth < 8		8676783	0		<			
ANR	8677132	Identifier	bit_depth		8676783	0					
ANR	8677133	PrimaryExpression	8		8676783	1					
ANR	8677134	ExpressionStatement	background . gray &= ( png_uint_16 ) ( ( 1U << bit_depth ) - 1 )	10883:9:345749:345802	8676783	1	True				
ANR	8677135	AssignmentExpression	background . gray &= ( png_uint_16 ) ( ( 1U << bit_depth ) - 1 )		8676783	0		&=			
ANR	8677136	MemberAccess	background . gray		8676783	0					
ANR	8677137	Identifier	background		8676783	0					
ANR	8677138	Identifier	gray		8676783	1					
ANR	8677139	CastExpression	( png_uint_16 ) ( ( 1U << bit_depth ) - 1 )		8676783	1					
ANR	8677140	CastTarget	png_uint_16		8676783	0					
ANR	8677141	AdditiveExpression	( 1U << bit_depth ) - 1		8676783	1		-			
ANR	8677142	ShiftExpression	1U << bit_depth		8676783	0		<<			
ANR	8677143	PrimaryExpression	1U		8676783	0					
ANR	8677144	Identifier	bit_depth		8676783	1					
ANR	8677145	PrimaryExpression	1		8676783	1					
ANR	8677146	ExpressionStatement	background . red = background . green = background . blue = background . gray	10888:6:345955:346024	8676783	1	True				
ANR	8677147	AssignmentExpression	background . red = background . green = background . blue = background . gray		8676783	0		=			
ANR	8677148	MemberAccess	background . red		8676783	0					
ANR	8677149	Identifier	background		8676783	0					
ANR	8677150	Identifier	red		8676783	1					
ANR	8677151	AssignmentExpression	background . green = background . blue = background . gray		8676783	1		=			
ANR	8677152	MemberAccess	background . green		8676783	0					
ANR	8677153	Identifier	background		8676783	0					
ANR	8677154	Identifier	green		8676783	1					
ANR	8677155	AssignmentExpression	background . blue = background . gray		8676783	1		=			
ANR	8677156	MemberAccess	background . blue		8676783	0					
ANR	8677157	Identifier	background		8676783	0					
ANR	8677158	Identifier	blue		8676783	1					
ANR	8677159	MemberAccess	background . gray		8676783	1					
ANR	8677160	Identifier	background		8676783	0					
ANR	8677161	Identifier	gray		8676783	1					
ANR	8677162	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""gamma "" )"	10891:3:346035:346082	8676783	9	True				
ANR	8677163	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""gamma "" )"		8676783	0		=			
ANR	8677164	Identifier	pos		8676783	0					
ANR	8677165	CallExpression	"safecat ( name , sizeof name , pos , ""gamma "" )"		8676783	1					
ANR	8677166	Callee	safecat		8676783	0					
ANR	8677167	Identifier	safecat		8676783	0					
ANR	8677168	ArgumentList	name		8676783	1					
ANR	8677169	Argument	name		8676783	0					
ANR	8677170	Identifier	name		8676783	0					
ANR	8677171	Argument	sizeof name		8676783	1					
ANR	8677172	SizeofExpression	sizeof name		8676783	0					
ANR	8677173	Sizeof	sizeof		8676783	0					
ANR	8677174	Identifier	name		8676783	1					
ANR	8677175	Argument	pos		8676783	2					
ANR	8677176	Identifier	pos		8676783	0					
ANR	8677177	Argument	"""gamma """		8676783	3					
ANR	8677178	PrimaryExpression	"""gamma """		8676783	0					
ANR	8677179	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , file_gamma , 3 )"	10892:3:346087:346140	8676783	10	True				
ANR	8677180	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , file_gamma , 3 )"		8676783	0		=			
ANR	8677181	Identifier	pos		8676783	0					
ANR	8677182	CallExpression	"safecatd ( name , sizeof name , pos , file_gamma , 3 )"		8676783	1					
ANR	8677183	Callee	safecatd		8676783	0					
ANR	8677184	Identifier	safecatd		8676783	0					
ANR	8677185	ArgumentList	name		8676783	1					
ANR	8677186	Argument	name		8676783	0					
ANR	8677187	Identifier	name		8676783	0					
ANR	8677188	Argument	sizeof name		8676783	1					
ANR	8677189	SizeofExpression	sizeof name		8676783	0					
ANR	8677190	Sizeof	sizeof		8676783	0					
ANR	8677191	Identifier	name		8676783	1					
ANR	8677192	Argument	pos		8676783	2					
ANR	8677193	Identifier	pos		8676783	0					
ANR	8677194	Argument	file_gamma		8676783	3					
ANR	8677195	Identifier	file_gamma		8676783	0					
ANR	8677196	Argument	3		8676783	4					
ANR	8677197	PrimaryExpression	3		8676783	0					
ANR	8677198	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""->"" )"	10893:3:346145:346188	8676783	11	True				
ANR	8677199	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""->"" )"		8676783	0		=			
ANR	8677200	Identifier	pos		8676783	0					
ANR	8677201	CallExpression	"safecat ( name , sizeof name , pos , ""->"" )"		8676783	1					
ANR	8677202	Callee	safecat		8676783	0					
ANR	8677203	Identifier	safecat		8676783	0					
ANR	8677204	ArgumentList	name		8676783	1					
ANR	8677205	Argument	name		8676783	0					
ANR	8677206	Identifier	name		8676783	0					
ANR	8677207	Argument	sizeof name		8676783	1					
ANR	8677208	SizeofExpression	sizeof name		8676783	0					
ANR	8677209	Sizeof	sizeof		8676783	0					
ANR	8677210	Identifier	name		8676783	1					
ANR	8677211	Argument	pos		8676783	2					
ANR	8677212	Identifier	pos		8676783	0					
ANR	8677213	Argument	"""->"""		8676783	3					
ANR	8677214	PrimaryExpression	"""->"""		8676783	0					
ANR	8677215	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , screen_gamma , 3 )"	10894:3:346193:346248	8676783	12	True				
ANR	8677216	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , screen_gamma , 3 )"		8676783	0		=			
ANR	8677217	Identifier	pos		8676783	0					
ANR	8677218	CallExpression	"safecatd ( name , sizeof name , pos , screen_gamma , 3 )"		8676783	1					
ANR	8677219	Callee	safecatd		8676783	0					
ANR	8677220	Identifier	safecatd		8676783	0					
ANR	8677221	ArgumentList	name		8676783	1					
ANR	8677222	Argument	name		8676783	0					
ANR	8677223	Identifier	name		8676783	0					
ANR	8677224	Argument	sizeof name		8676783	1					
ANR	8677225	SizeofExpression	sizeof name		8676783	0					
ANR	8677226	Sizeof	sizeof		8676783	0					
ANR	8677227	Identifier	name		8676783	1					
ANR	8677228	Argument	pos		8676783	2					
ANR	8677229	Identifier	pos		8676783	0					
ANR	8677230	Argument	screen_gamma		8676783	3					
ANR	8677231	Identifier	screen_gamma		8676783	0					
ANR	8677232	Argument	3		8676783	4					
ANR	8677233	PrimaryExpression	3		8676783	0					
ANR	8677234	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , base )"	10896:3:346254:346297	8676783	13	True				
ANR	8677235	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , base )"		8676783	0		=			
ANR	8677236	Identifier	pos		8676783	0					
ANR	8677237	CallExpression	"safecat ( name , sizeof name , pos , base )"		8676783	1					
ANR	8677238	Callee	safecat		8676783	0					
ANR	8677239	Identifier	safecat		8676783	0					
ANR	8677240	ArgumentList	name		8676783	1					
ANR	8677241	Argument	name		8676783	0					
ANR	8677242	Identifier	name		8676783	0					
ANR	8677243	Argument	sizeof name		8676783	1					
ANR	8677244	SizeofExpression	sizeof name		8676783	0					
ANR	8677245	Sizeof	sizeof		8676783	0					
ANR	8677246	Identifier	name		8676783	1					
ANR	8677247	Argument	pos		8676783	2					
ANR	8677248	Identifier	pos		8676783	0					
ANR	8677249	Argument	base		8676783	3					
ANR	8677250	Identifier	base		8676783	0					
ANR	8677251	IfStatement	if ( do_background < ALPHA_MODE_OFFSET )		8676783	14					
ANR	8677252	Condition	do_background < ALPHA_MODE_OFFSET	10897:7:346306:346338	8676783	0	True				
ANR	8677253	RelationalExpression	do_background < ALPHA_MODE_OFFSET		8676783	0		<			
ANR	8677254	Identifier	do_background		8676783	0					
ANR	8677255	Identifier	ALPHA_MODE_OFFSET		8676783	1					
ANR	8677256	CompoundStatement		122:3:4289:4289	8676783	1					
ANR	8677257	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , ""("" )"	10900:6:346416:346458	8676783	0	True				
ANR	8677258	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , ""("" )"		8676783	0		=			
ANR	8677259	Identifier	pos		8676783	0					
ANR	8677260	CallExpression	"safecat ( name , sizeof name , pos , ""("" )"		8676783	1					
ANR	8677261	Callee	safecat		8676783	0					
ANR	8677262	Identifier	safecat		8676783	0					
ANR	8677263	ArgumentList	name		8676783	1					
ANR	8677264	Argument	name		8676783	0					
ANR	8677265	Identifier	name		8676783	0					
ANR	8677266	Argument	sizeof name		8676783	1					
ANR	8677267	SizeofExpression	sizeof name		8676783	0					
ANR	8677268	Sizeof	sizeof		8676783	0					
ANR	8677269	Identifier	name		8676783	1					
ANR	8677270	Argument	pos		8676783	2					
ANR	8677271	Identifier	pos		8676783	0					
ANR	8677272	Argument	"""("""		8676783	3					
ANR	8677273	PrimaryExpression	"""("""		8676783	0					
ANR	8677274	IfStatement	if ( colour_type & PNG_COLOR_MASK_COLOR )		8676783	1					
ANR	8677275	Condition	colour_type & PNG_COLOR_MASK_COLOR	10903:10:346560:346593	8676783	0	True				
ANR	8677276	BitAndExpression	colour_type & PNG_COLOR_MASK_COLOR		8676783	0		&			
ANR	8677277	Identifier	colour_type		8676783	0					
ANR	8677278	Identifier	PNG_COLOR_MASK_COLOR		8676783	1					
ANR	8677279	CompoundStatement		128:6:4547:4547	8676783	1					
ANR	8677280	ExpressionStatement	"pos = safecatn ( name , sizeof name , pos , background . red )"	10905:9:346613:346667	8676783	0	True				
ANR	8677281	AssignmentExpression	"pos = safecatn ( name , sizeof name , pos , background . red )"		8676783	0		=			
ANR	8677282	Identifier	pos		8676783	0					
ANR	8677283	CallExpression	"safecatn ( name , sizeof name , pos , background . red )"		8676783	1					
ANR	8677284	Callee	safecatn		8676783	0					
ANR	8677285	Identifier	safecatn		8676783	0					
ANR	8677286	ArgumentList	name		8676783	1					
ANR	8677287	Argument	name		8676783	0					
ANR	8677288	Identifier	name		8676783	0					
ANR	8677289	Argument	sizeof name		8676783	1					
ANR	8677290	SizeofExpression	sizeof name		8676783	0					
ANR	8677291	Sizeof	sizeof		8676783	0					
ANR	8677292	Identifier	name		8676783	1					
ANR	8677293	Argument	pos		8676783	2					
ANR	8677294	Identifier	pos		8676783	0					
ANR	8677295	Argument	background . red		8676783	3					
ANR	8677296	MemberAccess	background . red		8676783	0					
ANR	8677297	Identifier	background		8676783	0					
ANR	8677298	Identifier	red		8676783	1					
ANR	8677299	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , "","" )"	10906:9:346678:346720	8676783	1	True				
ANR	8677300	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , "","" )"		8676783	0		=			
ANR	8677301	Identifier	pos		8676783	0					
ANR	8677302	CallExpression	"safecat ( name , sizeof name , pos , "","" )"		8676783	1					
ANR	8677303	Callee	safecat		8676783	0					
ANR	8677304	Identifier	safecat		8676783	0					
ANR	8677305	ArgumentList	name		8676783	1					
ANR	8677306	Argument	name		8676783	0					
ANR	8677307	Identifier	name		8676783	0					
ANR	8677308	Argument	sizeof name		8676783	1					
ANR	8677309	SizeofExpression	sizeof name		8676783	0					
ANR	8677310	Sizeof	sizeof		8676783	0					
ANR	8677311	Identifier	name		8676783	1					
ANR	8677312	Argument	pos		8676783	2					
ANR	8677313	Identifier	pos		8676783	0					
ANR	8677314	Argument	""","""		8676783	3					
ANR	8677315	PrimaryExpression	""","""		8676783	0					
ANR	8677316	ExpressionStatement	"pos = safecatn ( name , sizeof name , pos , background . green )"	10907:9:346731:346787	8676783	2	True				
ANR	8677317	AssignmentExpression	"pos = safecatn ( name , sizeof name , pos , background . green )"		8676783	0		=			
ANR	8677318	Identifier	pos		8676783	0					
ANR	8677319	CallExpression	"safecatn ( name , sizeof name , pos , background . green )"		8676783	1					
ANR	8677320	Callee	safecatn		8676783	0					
ANR	8677321	Identifier	safecatn		8676783	0					
ANR	8677322	ArgumentList	name		8676783	1					
ANR	8677323	Argument	name		8676783	0					
ANR	8677324	Identifier	name		8676783	0					
ANR	8677325	Argument	sizeof name		8676783	1					
ANR	8677326	SizeofExpression	sizeof name		8676783	0					
ANR	8677327	Sizeof	sizeof		8676783	0					
ANR	8677328	Identifier	name		8676783	1					
ANR	8677329	Argument	pos		8676783	2					
ANR	8677330	Identifier	pos		8676783	0					
ANR	8677331	Argument	background . green		8676783	3					
ANR	8677332	MemberAccess	background . green		8676783	0					
ANR	8677333	Identifier	background		8676783	0					
ANR	8677334	Identifier	green		8676783	1					
ANR	8677335	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , "","" )"	10908:9:346798:346840	8676783	3	True				
ANR	8677336	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , "","" )"		8676783	0		=			
ANR	8677337	Identifier	pos		8676783	0					
ANR	8677338	CallExpression	"safecat ( name , sizeof name , pos , "","" )"		8676783	1					
ANR	8677339	Callee	safecat		8676783	0					
ANR	8677340	Identifier	safecat		8676783	0					
ANR	8677341	ArgumentList	name		8676783	1					
ANR	8677342	Argument	name		8676783	0					
ANR	8677343	Identifier	name		8676783	0					
ANR	8677344	Argument	sizeof name		8676783	1					
ANR	8677345	SizeofExpression	sizeof name		8676783	0					
ANR	8677346	Sizeof	sizeof		8676783	0					
ANR	8677347	Identifier	name		8676783	1					
ANR	8677348	Argument	pos		8676783	2					
ANR	8677349	Identifier	pos		8676783	0					
ANR	8677350	Argument	""","""		8676783	3					
ANR	8677351	PrimaryExpression	""","""		8676783	0					
ANR	8677352	ExpressionStatement	"pos = safecatn ( name , sizeof name , pos , background . blue )"	10909:9:346851:346906	8676783	4	True				
ANR	8677353	AssignmentExpression	"pos = safecatn ( name , sizeof name , pos , background . blue )"		8676783	0		=			
ANR	8677354	Identifier	pos		8676783	0					
ANR	8677355	CallExpression	"safecatn ( name , sizeof name , pos , background . blue )"		8676783	1					
ANR	8677356	Callee	safecatn		8676783	0					
ANR	8677357	Identifier	safecatn		8676783	0					
ANR	8677358	ArgumentList	name		8676783	1					
ANR	8677359	Argument	name		8676783	0					
ANR	8677360	Identifier	name		8676783	0					
ANR	8677361	Argument	sizeof name		8676783	1					
ANR	8677362	SizeofExpression	sizeof name		8676783	0					
ANR	8677363	Sizeof	sizeof		8676783	0					
ANR	8677364	Identifier	name		8676783	1					
ANR	8677365	Argument	pos		8676783	2					
ANR	8677366	Identifier	pos		8676783	0					
ANR	8677367	Argument	background . blue		8676783	3					
ANR	8677368	MemberAccess	background . blue		8676783	0					
ANR	8677369	Identifier	background		8676783	0					
ANR	8677370	Identifier	blue		8676783	1					
ANR	8677371	ElseStatement	else		8676783	0					
ANR	8677372	ExpressionStatement	"pos = safecatn ( name , sizeof name , pos , background . gray )"	10912:9:346936:346991	8676783	0	True				
ANR	8677373	AssignmentExpression	"pos = safecatn ( name , sizeof name , pos , background . gray )"		8676783	0		=			
ANR	8677374	Identifier	pos		8676783	0					
ANR	8677375	CallExpression	"safecatn ( name , sizeof name , pos , background . gray )"		8676783	1					
ANR	8677376	Callee	safecatn		8676783	0					
ANR	8677377	Identifier	safecatn		8676783	0					
ANR	8677378	ArgumentList	name		8676783	1					
ANR	8677379	Argument	name		8676783	0					
ANR	8677380	Identifier	name		8676783	0					
ANR	8677381	Argument	sizeof name		8676783	1					
ANR	8677382	SizeofExpression	sizeof name		8676783	0					
ANR	8677383	Sizeof	sizeof		8676783	0					
ANR	8677384	Identifier	name		8676783	1					
ANR	8677385	Argument	pos		8676783	2					
ANR	8677386	Identifier	pos		8676783	0					
ANR	8677387	Argument	background . gray		8676783	3					
ANR	8677388	MemberAccess	background . gray		8676783	0					
ANR	8677389	Identifier	background		8676783	0					
ANR	8677390	Identifier	gray		8676783	1					
ANR	8677391	ExpressionStatement	"pos = safecat ( name , sizeof name , pos , "")^"" )"	10913:6:346999:347042	8676783	2	True				
ANR	8677392	AssignmentExpression	"pos = safecat ( name , sizeof name , pos , "")^"" )"		8676783	0		=			
ANR	8677393	Identifier	pos		8676783	0					
ANR	8677394	CallExpression	"safecat ( name , sizeof name , pos , "")^"" )"		8676783	1					
ANR	8677395	Callee	safecat		8676783	0					
ANR	8677396	Identifier	safecat		8676783	0					
ANR	8677397	ArgumentList	name		8676783	1					
ANR	8677398	Argument	name		8676783	0					
ANR	8677399	Identifier	name		8676783	0					
ANR	8677400	Argument	sizeof name		8676783	1					
ANR	8677401	SizeofExpression	sizeof name		8676783	0					
ANR	8677402	Sizeof	sizeof		8676783	0					
ANR	8677403	Identifier	name		8676783	1					
ANR	8677404	Argument	pos		8676783	2					
ANR	8677405	Identifier	pos		8676783	0					
ANR	8677406	Argument	""")^"""		8676783	3					
ANR	8677407	PrimaryExpression	""")^"""		8676783	0					
ANR	8677408	ExpressionStatement	"pos = safecatd ( name , sizeof name , pos , bg , 3 )"	10914:6:347050:347095	8676783	3	True				
ANR	8677409	AssignmentExpression	"pos = safecatd ( name , sizeof name , pos , bg , 3 )"		8676783	0		=			
ANR	8677410	Identifier	pos		8676783	0					
ANR	8677411	CallExpression	"safecatd ( name , sizeof name , pos , bg , 3 )"		8676783	1					
ANR	8677412	Callee	safecatd		8676783	0					
ANR	8677413	Identifier	safecatd		8676783	0					
ANR	8677414	ArgumentList	name		8676783	1					
ANR	8677415	Argument	name		8676783	0					
ANR	8677416	Identifier	name		8676783	0					
ANR	8677417	Argument	sizeof name		8676783	1					
ANR	8677418	SizeofExpression	sizeof name		8676783	0					
ANR	8677419	Sizeof	sizeof		8676783	0					
ANR	8677420	Identifier	name		8676783	1					
ANR	8677421	Argument	pos		8676783	2					
ANR	8677422	Identifier	pos		8676783	0					
ANR	8677423	Argument	bg		8676783	3					
ANR	8677424	Identifier	bg		8676783	0					
ANR	8677425	Argument	3		8676783	4					
ANR	8677426	PrimaryExpression	3		8676783	0					
ANR	8677427	ExpressionStatement	"gamma_test ( pm , colour_type , bit_depth , palette_number , interlace_type , file_gamma , screen_gamma , 0 , 0 , name , use_input_precision , 0 , expand_16 , do_background , & background , bg )"	10917:3:347106:347313	8676783	15	True				
ANR	8677428	CallExpression	"gamma_test ( pm , colour_type , bit_depth , palette_number , interlace_type , file_gamma , screen_gamma , 0 , 0 , name , use_input_precision , 0 , expand_16 , do_background , & background , bg )"		8676783	0					
ANR	8677429	Callee	gamma_test		8676783	0					
ANR	8677430	Identifier	gamma_test		8676783	0					
ANR	8677431	ArgumentList	pm		8676783	1					
ANR	8677432	Argument	pm		8676783	0					
ANR	8677433	Identifier	pm		8676783	0					
ANR	8677434	Argument	colour_type		8676783	1					
ANR	8677435	Identifier	colour_type		8676783	0					
ANR	8677436	Argument	bit_depth		8676783	2					
ANR	8677437	Identifier	bit_depth		8676783	0					
ANR	8677438	Argument	palette_number		8676783	3					
ANR	8677439	Identifier	palette_number		8676783	0					
ANR	8677440	Argument	interlace_type		8676783	4					
ANR	8677441	Identifier	interlace_type		8676783	0					
ANR	8677442	Argument	file_gamma		8676783	5					
ANR	8677443	Identifier	file_gamma		8676783	0					
ANR	8677444	Argument	screen_gamma		8676783	6					
ANR	8677445	Identifier	screen_gamma		8676783	0					
ANR	8677446	Argument	0		8676783	7					
ANR	8677447	PrimaryExpression	0		8676783	0					
ANR	8677448	Argument	0		8676783	8					
ANR	8677449	PrimaryExpression	0		8676783	0					
ANR	8677450	Argument	name		8676783	9					
ANR	8677451	Identifier	name		8676783	0					
ANR	8677452	Argument	use_input_precision		8676783	10					
ANR	8677453	Identifier	use_input_precision		8676783	0					
ANR	8677454	Argument	0		8676783	11					
ANR	8677455	PrimaryExpression	0		8676783	0					
ANR	8677456	Argument	expand_16		8676783	12					
ANR	8677457	Identifier	expand_16		8676783	0					
ANR	8677458	Argument	do_background		8676783	13					
ANR	8677459	Identifier	do_background		8676783	0					
ANR	8677460	Argument	& background		8676783	14					
ANR	8677461	UnaryOperationExpression	& background		8676783	0					
ANR	8677462	UnaryOperator	&		8676783	0					
ANR	8677463	Identifier	background		8676783	1					
ANR	8677464	Argument	bg		8676783	15					
ANR	8677465	Identifier	bg		8676783	0					
ANR	8677466	ReturnType	static void		8676783	1					
ANR	8677467	Identifier	gamma_composition_test		8676783	2					
ANR	8677468	ParameterList	"png_modifier * pm , const png_byte colour_type , const png_byte bit_depth , const int palette_number , const int interlace_type , const double file_gamma , const double screen_gamma , const int use_input_precision , const int do_background , const int expand_16"		8676783	3					
ANR	8677469	Parameter	png_modifier * pm	10770:35:341783:341798	8676783	0	True				
ANR	8677470	ParameterType	png_modifier *		8676783	0					
ANR	8677471	Identifier	pm		8676783	1					
ANR	8677472	Parameter	const png_byte colour_type	10771:3:341804:341829	8676783	1	True				
ANR	8677473	ParameterType	const png_byte		8676783	0					
ANR	8677474	Identifier	colour_type		8676783	1					
ANR	8677475	Parameter	const png_byte bit_depth	10771:31:341832:341855	8676783	2	True				
ANR	8677476	ParameterType	const png_byte		8676783	0					
ANR	8677477	Identifier	bit_depth		8676783	1					
ANR	8677478	Parameter	const int palette_number	10772:3:341861:341884	8676783	3	True				
ANR	8677479	ParameterType	const int		8676783	0					
ANR	8677480	Identifier	palette_number		8676783	1					
ANR	8677481	Parameter	const int interlace_type	10773:3:341890:341913	8676783	4	True				
ANR	8677482	ParameterType	const int		8676783	0					
ANR	8677483	Identifier	interlace_type		8676783	1					
ANR	8677484	Parameter	const double file_gamma	10773:29:341916:341938	8676783	5	True				
ANR	8677485	ParameterType	const double		8676783	0					
ANR	8677486	Identifier	file_gamma		8676783	1					
ANR	8677487	Parameter	const double screen_gamma	10774:3:341944:341968	8676783	6	True				
ANR	8677488	ParameterType	const double		8676783	0					
ANR	8677489	Identifier	screen_gamma		8676783	1					
ANR	8677490	Parameter	const int use_input_precision	10775:3:341974:342002	8676783	7	True				
ANR	8677491	ParameterType	const int		8676783	0					
ANR	8677492	Identifier	use_input_precision		8676783	1					
ANR	8677493	Parameter	const int do_background	10775:34:342005:342027	8676783	8	True				
ANR	8677494	ParameterType	const int		8676783	0					
ANR	8677495	Identifier	do_background		8676783	1					
ANR	8677496	Parameter	const int expand_16	10776:3:342033:342051	8676783	9	True				
ANR	8677497	ParameterType	const int		8676783	0					
ANR	8677498	Identifier	expand_16		8676783	1					
ANR	8677499	CFGEntryNode	ENTRY		8676783		True				
ANR	8677500	CFGExitNode	EXIT		8676783		True				
ANR	8677501	Symbol	PNG_BACKGROUND_GAMMA_UNIQUE		8676783						
ANR	8677502	Symbol	bg		8676783						
ANR	8677503	Symbol	background . blue		8676783						
ANR	8677504	Symbol	do_background		8676783						
ANR	8677505	Symbol	safecatn		8676783						
ANR	8677506	Symbol	palette_number		8676783						
ANR	8677507	Symbol	pos		8676783						
ANR	8677508	Symbol	safecat		8676783						
ANR	8677509	Symbol	PNG_BACKGROUND_GAMMA_FILE		8676783						
ANR	8677510	Symbol	background . green		8676783						
ANR	8677511	Symbol	expand_16		8676783						
ANR	8677512	Symbol	PNG_GAMMA_THRESHOLD		8676783						
ANR	8677513	Symbol	fabs		8676783						
ANR	8677514	Symbol	& background		8676783						
ANR	8677515	Symbol	use_input_precision		8676783						
ANR	8677516	Symbol	PNG_COLOR_MASK_COLOR		8676783						
ANR	8677517	Symbol	colour_type		8676783						
ANR	8677518	Symbol	interlace_type		8676783						
ANR	8677519	Symbol	ALPHA_MODE_OFFSET		8676783						
ANR	8677520	Symbol	r		8676783						
ANR	8677521	Symbol	safecatd		8676783						
ANR	8677522	Symbol	background		8676783						
ANR	8677523	Symbol	random_32		8676783						
ANR	8677524	Symbol	background . index		8676783						
ANR	8677525	Symbol	screen_gamma		8676783						
ANR	8677526	Symbol	name		8676783						
ANR	8677527	Symbol	file_gamma		8676783						
ANR	8677528	Symbol	background . gray		8676783						
ANR	8677529	Symbol	background . red		8676783						
ANR	8677530	Symbol	bit_depth		8676783						
ANR	8677531	Symbol	pm		8676783						
ANR	8677532	Symbol	base		8676783						
ANR	8677533	Function	perform_gamma_composition_tests	10923:0:347319:348556							
ANR	8677534	FunctionDef	"perform_gamma_composition_tests (png_modifier * pm , int do_background , int expand_16)"		8677533	0					
ANR	8677535	CompoundStatement		10926:0:347418:348556	8677533	0					
ANR	8677536	IdentifierDeclStatement	png_byte colour_type = 0 ;	10927:3:347423:347447	8677533	0	True				
ANR	8677537	IdentifierDecl	colour_type = 0		8677533	0					
ANR	8677538	IdentifierDeclType	png_byte		8677533	0					
ANR	8677539	Identifier	colour_type		8677533	1					
ANR	8677540	AssignmentExpression	colour_type = 0		8677533	2		=			
ANR	8677541	Identifier	colour_type		8677533	0					
ANR	8677542	PrimaryExpression	0		8677533	1					
ANR	8677543	IdentifierDeclStatement	png_byte bit_depth = 0 ;	10928:3:347452:347474	8677533	1	True				
ANR	8677544	IdentifierDecl	bit_depth = 0		8677533	0					
ANR	8677545	IdentifierDeclType	png_byte		8677533	0					
ANR	8677546	Identifier	bit_depth		8677533	1					
ANR	8677547	AssignmentExpression	bit_depth = 0		8677533	2		=			
ANR	8677548	Identifier	bit_depth		8677533	0					
ANR	8677549	PrimaryExpression	0		8677533	1					
ANR	8677550	IdentifierDeclStatement	unsigned int palette_number = 0 ;	10929:3:347479:347510	8677533	2	True				
ANR	8677551	IdentifierDecl	palette_number = 0		8677533	0					
ANR	8677552	IdentifierDeclType	unsigned int		8677533	0					
ANR	8677553	Identifier	palette_number		8677533	1					
ANR	8677554	AssignmentExpression	palette_number = 0		8677533	2		=			
ANR	8677555	Identifier	palette_number		8677533	0					
ANR	8677556	PrimaryExpression	0		8677533	1					
ANR	8677557	WhileStatement	"while ( next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_composition , pm -> test_tRNS ) )"		8677533	3					
ANR	8677558	Condition	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_composition , pm -> test_tRNS )"	10937:10:347782:347904	8677533	0	True				
ANR	8677559	CallExpression	"next_format ( & colour_type , & bit_depth , & palette_number , pm -> test_lbg_gamma_composition , pm -> test_tRNS )"		8677533	0					
ANR	8677560	Callee	next_format		8677533	0					
ANR	8677561	Identifier	next_format		8677533	0					
ANR	8677562	ArgumentList	& colour_type		8677533	1					
ANR	8677563	Argument	& colour_type		8677533	0					
ANR	8677564	UnaryOperationExpression	& colour_type		8677533	0					
ANR	8677565	UnaryOperator	&		8677533	0					
ANR	8677566	Identifier	colour_type		8677533	1					
ANR	8677567	Argument	& bit_depth		8677533	1					
ANR	8677568	UnaryOperationExpression	& bit_depth		8677533	0					
ANR	8677569	UnaryOperator	&		8677533	0					
ANR	8677570	Identifier	bit_depth		8677533	1					
ANR	8677571	Argument	& palette_number		8677533	2					
ANR	8677572	UnaryOperationExpression	& palette_number		8677533	0					
ANR	8677573	UnaryOperator	&		8677533	0					
ANR	8677574	Identifier	palette_number		8677533	1					
ANR	8677575	Argument	pm -> test_lbg_gamma_composition		8677533	3					
ANR	8677576	PtrMemberAccess	pm -> test_lbg_gamma_composition		8677533	0					
ANR	8677577	Identifier	pm		8677533	0					
ANR	8677578	Identifier	test_lbg_gamma_composition		8677533	1					
ANR	8677579	Argument	pm -> test_tRNS		8677533	4					
ANR	8677580	PtrMemberAccess	pm -> test_tRNS		8677533	0					
ANR	8677581	Identifier	pm		8677533	0					
ANR	8677582	Identifier	test_tRNS		8677533	1					
ANR	8677583	Statement	if	10939:6:347913:347914	8677533	1	True				
ANR	8677584	Statement	(	10939:9:347916:347916	8677533	4	True				
ANR	8677585	Statement	(	10939:10:347917:347917	8677533	5	True				
ANR	8677586	Statement	colour_type	10939:11:347918:347928	8677533	6	True				
ANR	8677587	Statement	&	10939:23:347930:347930	8677533	7	True				
ANR	8677588	Statement	PNG_COLOR_MASK_ALPHA	10939:25:347932:347951	8677533	8	True				
ANR	8677589	Statement	)	10939:45:347952:347952	8677533	9	True				
ANR	8677590	Statement	!=	10939:47:347954:347955	8677533	10	True				
ANR	8677591	Statement	0	10939:50:347957:347957	8677533	11	True				
ANR	8677592	Statement	||	10942:10:348038:348039	8677533	12	True				
ANR	8677593	Statement	colour_type	10942:13:348041:348051	8677533	13	True				
ANR	8677594	Statement	==	10942:25:348053:348054	8677533	14	True				
ANR	8677595	Statement	3	10942:28:348056:348056	8677533	15	True				
ANR	8677596	Statement	||	10944:10:348075:348076	8677533	16	True				
ANR	8677597	Statement	(	10944:13:348078:348078	8677533	17	True				
ANR	8677598	Statement	colour_type	10944:14:348079:348089	8677533	18	True				
ANR	8677599	Statement	!=	10944:26:348091:348092	8677533	19	True				
ANR	8677600	Statement	3	10944:29:348094:348094	8677533	20	True				
ANR	8677601	Statement	&&	10944:31:348096:348097	8677533	21	True				
ANR	8677602	Statement	palette_number	10944:34:348099:348112	8677533	22	True				
ANR	8677603	Statement	!=	10944:49:348114:348115	8677533	23	True				
ANR	8677604	Statement	0	10944:52:348117:348117	8677533	24	True				
ANR	8677605	Statement	)	10944:53:348118:348118	8677533	25	True				
ANR	8677606	Statement	)	10944:54:348119:348119	8677533	26	True				
ANR	8677607	CompoundStatement		21:6:713:730	8677533	27					
ANR	8677608	IdentifierDeclStatement	"unsigned int i , j ;"	10946:6:348132:348149	8677533	0	True				
ANR	8677609	IdentifierDecl	i		8677533	0					
ANR	8677610	IdentifierDeclType	unsigned int		8677533	0					
ANR	8677611	Identifier	i		8677533	1					
ANR	8677612	IdentifierDecl	j		8677533	1					
ANR	8677613	IdentifierDeclType	unsigned int		8677533	0					
ANR	8677614	Identifier	j		8677533	1					
ANR	8677615	ForStatement	for ( i = 0 ; i < pm -> ngamma_tests ; ++ i )		8677533	1					
ANR	8677616	ForInit	i = 0 ;	10949:11:348222:348225	8677533	0	True				
ANR	8677617	AssignmentExpression	i = 0		8677533	0		=			
ANR	8677618	Identifier	i		8677533	0					
ANR	8677619	PrimaryExpression	0		8677533	1					
ANR	8677620	Condition	i < pm -> ngamma_tests	10949:16:348227:348244	8677533	1	True				
ANR	8677621	RelationalExpression	i < pm -> ngamma_tests		8677533	0		<			
ANR	8677622	Identifier	i		8677533	0					
ANR	8677623	PtrMemberAccess	pm -> ngamma_tests		8677533	1					
ANR	8677624	Identifier	pm		8677533	0					
ANR	8677625	Identifier	ngamma_tests		8677533	1					
ANR	8677626	UnaryExpression	++ i	10949:36:348247:348249	8677533	2	True				
ANR	8677627	IncDec	++		8677533	0					
ANR	8677628	Identifier	i		8677533	1					
ANR	8677629	ForStatement	for ( j = 0 ; j < pm -> ngamma_tests ; ++ j )		8677533	3					
ANR	8677630	ForInit	j = 0 ;	10949:46:348257:348260	8677533	0	True				
ANR	8677631	AssignmentExpression	j = 0		8677533	0		=			
ANR	8677632	Identifier	j		8677533	0					
ANR	8677633	PrimaryExpression	0		8677533	1					
ANR	8677634	Condition	j < pm -> ngamma_tests	10949:51:348262:348279	8677533	1	True				
ANR	8677635	RelationalExpression	j < pm -> ngamma_tests		8677533	0		<			
ANR	8677636	Identifier	j		8677533	0					
ANR	8677637	PtrMemberAccess	pm -> ngamma_tests		8677533	1					
ANR	8677638	Identifier	pm		8677533	0					
ANR	8677639	Identifier	ngamma_tests		8677533	1					
ANR	8677640	UnaryExpression	++ j	10949:71:348282:348284	8677533	2	True				
ANR	8677641	IncDec	++		8677533	0					
ANR	8677642	Identifier	j		8677533	1					
ANR	8677643	CompoundStatement		25:6:874:874	8677533	3					
ANR	8677644	ExpressionStatement	"gamma_composition_test ( pm , colour_type , bit_depth , palette_number , pm -> interlace_type , 1 / pm -> gammas [ i ] , pm -> gammas [ j ] , pm -> use_input_precision , do_background , expand_16 )"	10951:9:348304:348497	8677533	0	True				
ANR	8677645	CallExpression	"gamma_composition_test ( pm , colour_type , bit_depth , palette_number , pm -> interlace_type , 1 / pm -> gammas [ i ] , pm -> gammas [ j ] , pm -> use_input_precision , do_background , expand_16 )"		8677533	0					
ANR	8677646	Callee	gamma_composition_test		8677533	0					
ANR	8677647	Identifier	gamma_composition_test		8677533	0					
ANR	8677648	ArgumentList	pm		8677533	1					
ANR	8677649	Argument	pm		8677533	0					
ANR	8677650	Identifier	pm		8677533	0					
ANR	8677651	Argument	colour_type		8677533	1					
ANR	8677652	Identifier	colour_type		8677533	0					
ANR	8677653	Argument	bit_depth		8677533	2					
ANR	8677654	Identifier	bit_depth		8677533	0					
ANR	8677655	Argument	palette_number		8677533	3					
ANR	8677656	Identifier	palette_number		8677533	0					
ANR	8677657	Argument	pm -> interlace_type		8677533	4					
ANR	8677658	PtrMemberAccess	pm -> interlace_type		8677533	0					
ANR	8677659	Identifier	pm		8677533	0					
ANR	8677660	Identifier	interlace_type		8677533	1					
ANR	8677661	Argument	1 / pm -> gammas [ i ]		8677533	5					
ANR	8677662	MultiplicativeExpression	1 / pm -> gammas [ i ]		8677533	0		/			
ANR	8677663	PrimaryExpression	1		8677533	0					
ANR	8677664	ArrayIndexing	pm -> gammas [ i ]		8677533	1					
ANR	8677665	PtrMemberAccess	pm -> gammas		8677533	0					
ANR	8677666	Identifier	pm		8677533	0					
ANR	8677667	Identifier	gammas		8677533	1					
ANR	8677668	Identifier	i		8677533	1					
ANR	8677669	Argument	pm -> gammas [ j ]		8677533	6					
ANR	8677670	ArrayIndexing	pm -> gammas [ j ]		8677533	0					
ANR	8677671	PtrMemberAccess	pm -> gammas		8677533	0					
ANR	8677672	Identifier	pm		8677533	0					
ANR	8677673	Identifier	gammas		8677533	1					
ANR	8677674	Identifier	j		8677533	1					
ANR	8677675	Argument	pm -> use_input_precision		8677533	7					
ANR	8677676	PtrMemberAccess	pm -> use_input_precision		8677533	0					
ANR	8677677	Identifier	pm		8677533	0					
ANR	8677678	Identifier	use_input_precision		8677533	1					
ANR	8677679	Argument	do_background		8677533	8					
ANR	8677680	Identifier	do_background		8677533	0					
ANR	8677681	Argument	expand_16		8677533	9					
ANR	8677682	Identifier	expand_16		8677533	0					
ANR	8677683	IfStatement	if ( fail ( pm ) )		8677533	1					
ANR	8677684	Condition	fail ( pm )	10955:13:348513:348520	8677533	0	True				
ANR	8677685	CallExpression	fail ( pm )		8677533	0					
ANR	8677686	Callee	fail		8677533	0					
ANR	8677687	Identifier	fail		8677533	0					
ANR	8677688	ArgumentList	pm		8677533	1					
ANR	8677689	Argument	pm		8677533	0					
ANR	8677690	Identifier	pm		8677533	0					
ANR	8677691	ReturnStatement	return ;	10956:12:348535:348541	8677533	1	True				
ANR	8677692	ReturnType	static void		8677533	1					
ANR	8677693	Identifier	perform_gamma_composition_tests		8677533	2					
ANR	8677694	ParameterList	"png_modifier * pm , int do_background , int expand_16"		8677533	3					
ANR	8677695	Parameter	png_modifier * pm	10924:32:347363:347378	8677533	0	True				
ANR	8677696	ParameterType	png_modifier *		8677533	0					
ANR	8677697	Identifier	pm		8677533	1					
ANR	8677698	Parameter	int do_background	10924:50:347381:347397	8677533	1	True				
ANR	8677699	ParameterType	int		8677533	0					
ANR	8677700	Identifier	do_background		8677533	1					
ANR	8677701	Parameter	int expand_16	10925:3:347403:347415	8677533	2	True				
ANR	8677702	ParameterType	int		8677533	0					
ANR	8677703	Identifier	expand_16		8677533	1					
ANR	8677704	CFGEntryNode	ENTRY		8677533		True				
ANR	8677705	CFGExitNode	EXIT		8677533		True				
ANR	8677706	Symbol	* pm		8677533						
ANR	8677707	Symbol	pm -> ngamma_tests		8677533						
ANR	8677708	Symbol	* pm -> gammas		8677533						
ANR	8677709	Symbol	expand_16		8677533						
ANR	8677710	Symbol	pm -> test_lbg_gamma_composition		8677533						
ANR	8677711	Symbol	pm -> test_tRNS		8677533						
ANR	8677712	Symbol	do_background		8677533						
ANR	8677713	Symbol	next_format		8677533						
ANR	8677714	Symbol	i		8677533						
ANR	8677715	Symbol	j		8677533						
ANR	8677716	Symbol	* * pm		8677533						
ANR	8677717	Symbol	palette_number		8677533						
ANR	8677718	Symbol	colour_type		8677533						
ANR	8677719	Symbol	& palette_number		8677533						
ANR	8677720	Symbol	fail		8677533						
ANR	8677721	Symbol	pm -> gammas		8677533						
ANR	8677722	Symbol	* i		8677533						
ANR	8677723	Symbol	* j		8677533						
ANR	8677724	Symbol	& colour_type		8677533						
ANR	8677725	Symbol	pm -> use_input_precision		8677533						
ANR	8677726	Symbol	& bit_depth		8677533						
ANR	8677727	Symbol	pm -> interlace_type		8677533						
ANR	8677728	Symbol	bit_depth		8677533						
ANR	8677729	Symbol	pm		8677533						
ANR	8677730	Function	init_gamma_errors	10962:0:348607:348885							
ANR	8677731	FunctionDef	init_gamma_errors (png_modifier * pm)		8677730	0					
ANR	8677732	CompoundStatement		10964:0:348655:348885	8677730	0					
ANR	8677733	ExpressionStatement	pm -> error_gray_2 = pm -> error_gray_4 = pm -> error_gray_8 = - 1.	10966:3:348718:348778	8677730	0	True				
ANR	8677734	AssignmentExpression	pm -> error_gray_2 = pm -> error_gray_4 = pm -> error_gray_8 = - 1.		8677730	0		=			
ANR	8677735	PtrMemberAccess	pm -> error_gray_2		8677730	0					
ANR	8677736	Identifier	pm		8677730	0					
ANR	8677737	Identifier	error_gray_2		8677730	1					
ANR	8677738	AssignmentExpression	pm -> error_gray_4 = pm -> error_gray_8 = - 1.		8677730	1		=			
ANR	8677739	PtrMemberAccess	pm -> error_gray_4		8677730	0					
ANR	8677740	Identifier	pm		8677730	0					
ANR	8677741	Identifier	error_gray_4		8677730	1					
ANR	8677742	AssignmentExpression	pm -> error_gray_8 = - 1.		8677730	1		=			
ANR	8677743	PtrMemberAccess	pm -> error_gray_8		8677730	0					
ANR	8677744	Identifier	pm		8677730	0					
ANR	8677745	Identifier	error_gray_8		8677730	1					
ANR	8677746	UnaryOperationExpression	- 1.		8677730	1					
ANR	8677747	UnaryOperator	-		8677730	0					
ANR	8677748	PrimaryExpression	1.		8677730	1					
ANR	8677749	ExpressionStatement	pm -> error_color_8 = - 1.	10967:3:348783:348806	8677730	1	True				
ANR	8677750	AssignmentExpression	pm -> error_color_8 = - 1.		8677730	0		=			
ANR	8677751	PtrMemberAccess	pm -> error_color_8		8677730	0					
ANR	8677752	Identifier	pm		8677730	0					
ANR	8677753	Identifier	error_color_8		8677730	1					
ANR	8677754	UnaryOperationExpression	- 1.		8677730	1					
ANR	8677755	UnaryOperator	-		8677730	0					
ANR	8677756	PrimaryExpression	1.		8677730	1					
ANR	8677757	ExpressionStatement	pm -> error_indexed = - 1.	10968:3:348811:348834	8677730	2	True				
ANR	8677758	AssignmentExpression	pm -> error_indexed = - 1.		8677730	0		=			
ANR	8677759	PtrMemberAccess	pm -> error_indexed		8677730	0					
ANR	8677760	Identifier	pm		8677730	0					
ANR	8677761	Identifier	error_indexed		8677730	1					
ANR	8677762	UnaryOperationExpression	- 1.		8677730	1					
ANR	8677763	UnaryOperator	-		8677730	0					
ANR	8677764	PrimaryExpression	1.		8677730	1					
ANR	8677765	ExpressionStatement	pm -> error_gray_16 = pm -> error_color_16 = - 1.	10969:3:348839:348883	8677730	3	True				
ANR	8677766	AssignmentExpression	pm -> error_gray_16 = pm -> error_color_16 = - 1.		8677730	0		=			
ANR	8677767	PtrMemberAccess	pm -> error_gray_16		8677730	0					
ANR	8677768	Identifier	pm		8677730	0					
ANR	8677769	Identifier	error_gray_16		8677730	1					
ANR	8677770	AssignmentExpression	pm -> error_color_16 = - 1.		8677730	1		=			
ANR	8677771	PtrMemberAccess	pm -> error_color_16		8677730	0					
ANR	8677772	Identifier	pm		8677730	0					
ANR	8677773	Identifier	error_color_16		8677730	1					
ANR	8677774	UnaryOperationExpression	- 1.		8677730	1					
ANR	8677775	UnaryOperator	-		8677730	0					
ANR	8677776	PrimaryExpression	1.		8677730	1					
ANR	8677777	ReturnType	static void		8677730	1					
ANR	8677778	Identifier	init_gamma_errors		8677730	2					
ANR	8677779	ParameterList	png_modifier * pm		8677730	3					
ANR	8677780	Parameter	png_modifier * pm	10963:18:348637:348652	8677730	0	True				
ANR	8677781	ParameterType	png_modifier *		8677730	0					
ANR	8677782	Identifier	pm		8677730	1					
ANR	8677783	CFGEntryNode	ENTRY		8677730		True				
ANR	8677784	CFGExitNode	EXIT		8677730		True				
ANR	8677785	Symbol	* pm		8677730						
ANR	8677786	Symbol	pm -> error_indexed		8677730						
ANR	8677787	Symbol	pm -> error_gray_8		8677730						
ANR	8677788	Symbol	pm -> error_color_8		8677730						
ANR	8677789	Symbol	pm -> error_gray_16		8677730						
ANR	8677790	Symbol	pm -> error_color_16		8677730						
ANR	8677791	Symbol	pm -> error_gray_4		8677730						
ANR	8677792	Symbol	pm		8677730						
ANR	8677793	Symbol	pm -> error_gray_2		8677730						
ANR	8677794	Function	print_one	10972:0:348888:349004							
ANR	8677795	FunctionDef	"print_one (const char * leader , double err)"		8677794	0					
ANR	8677796	CompoundStatement		10974:0:348942:349004	8677794	0					
ANR	8677797	IfStatement	if ( err != - 1. )		8677794	0					
ANR	8677798	Condition	err != - 1.	10975:7:348951:348960	8677794	0	True				
ANR	8677799	EqualityExpression	err != - 1.		8677794	0		!=			
ANR	8677800	Identifier	err		8677794	0					
ANR	8677801	UnaryOperationExpression	- 1.		8677794	1					
ANR	8677802	UnaryOperator	-		8677794	0					
ANR	8677803	PrimaryExpression	1.		8677794	1					
ANR	8677804	ExpressionStatement	"printf ( "" %s %.5f\\n"" , leader , err )"	10976:6:348969:349002	8677794	1	True				
ANR	8677805	CallExpression	"printf ( "" %s %.5f\\n"" , leader , err )"		8677794	0					
ANR	8677806	Callee	printf		8677794	0					
ANR	8677807	Identifier	printf		8677794	0					
ANR	8677808	ArgumentList	""" %s %.5f\\n"""		8677794	1					
ANR	8677809	Argument	""" %s %.5f\\n"""		8677794	0					
ANR	8677810	PrimaryExpression	""" %s %.5f\\n"""		8677794	0					
ANR	8677811	Argument	leader		8677794	1					
ANR	8677812	Identifier	leader		8677794	0					
ANR	8677813	Argument	err		8677794	2					
ANR	8677814	Identifier	err		8677794	0					
ANR	8677815	ReturnType	static void		8677794	1					
ANR	8677816	Identifier	print_one		8677794	2					
ANR	8677817	ParameterList	"const char * leader , double err"		8677794	3					
ANR	8677818	Parameter	const char * leader	10973:10:348910:348927	8677794	0	True				
ANR	8677819	ParameterType	const char *		8677794	0					
ANR	8677820	Identifier	leader		8677794	1					
ANR	8677821	Parameter	double err	10973:30:348930:348939	8677794	1	True				
ANR	8677822	ParameterType	double		8677794	0					
ANR	8677823	Identifier	err		8677794	1					
ANR	8677824	CFGEntryNode	ENTRY		8677794		True				
ANR	8677825	CFGExitNode	EXIT		8677794		True				
ANR	8677826	Symbol	leader		8677794						
ANR	8677827	Symbol	err		8677794						
ANR	8677828	Function	summarize_gamma_errors	10979:0:349007:349695							
ANR	8677829	FunctionDef	"summarize_gamma_errors (png_modifier * pm , png_const_charp who , int low_bit_depth , int indexed)"		8677828	0					
ANR	8677830	CompoundStatement		10982:0:349116:349695	8677828	0					
ANR	8677831	ExpressionStatement	fflush ( stderr )	10983:3:349121:349135	8677828	0	True				
ANR	8677832	CallExpression	fflush ( stderr )		8677828	0					
ANR	8677833	Callee	fflush		8677828	0					
ANR	8677834	Identifier	fflush		8677828	0					
ANR	8677835	ArgumentList	stderr		8677828	1					
ANR	8677836	Argument	stderr		8677828	0					
ANR	8677837	Identifier	stderr		8677828	0					
ANR	8677838	IfStatement	if ( who )		8677828	1					
ANR	8677839	Condition	who	10985:7:349145:349147	8677828	0	True				
ANR	8677840	Identifier	who		8677828	0					
ANR	8677841	ExpressionStatement	"printf ( ""\\nGamma correction with %s:\\n"" , who )"	10986:6:349156:349200	8677828	1	True				
ANR	8677842	CallExpression	"printf ( ""\\nGamma correction with %s:\\n"" , who )"		8677828	0					
ANR	8677843	Callee	printf		8677828	0					
ANR	8677844	Identifier	printf		8677828	0					
ANR	8677845	ArgumentList	"""\\nGamma correction with %s:\\n"""		8677828	1					
ANR	8677846	Argument	"""\\nGamma correction with %s:\\n"""		8677828	0					
ANR	8677847	PrimaryExpression	"""\\nGamma correction with %s:\\n"""		8677828	0					
ANR	8677848	Argument	who		8677828	1					
ANR	8677849	Identifier	who		8677828	0					
ANR	8677850	ElseStatement	else		8677828	0					
ANR	8677851	ExpressionStatement	"printf ( ""\\nBasic gamma correction:\\n"" )"	10989:6:349217:349254	8677828	0	True				
ANR	8677852	CallExpression	"printf ( ""\\nBasic gamma correction:\\n"" )"		8677828	0					
ANR	8677853	Callee	printf		8677828	0					
ANR	8677854	Identifier	printf		8677828	0					
ANR	8677855	ArgumentList	"""\\nBasic gamma correction:\\n"""		8677828	1					
ANR	8677856	Argument	"""\\nBasic gamma correction:\\n"""		8677828	0					
ANR	8677857	PrimaryExpression	"""\\nBasic gamma correction:\\n"""		8677828	0					
ANR	8677858	IfStatement	if ( low_bit_depth )		8677828	2					
ANR	8677859	Condition	low_bit_depth	10991:7:349264:349276	8677828	0	True				
ANR	8677860	Identifier	low_bit_depth		8677828	0					
ANR	8677861	CompoundStatement		11:3:165:165	8677828	1					
ANR	8677862	ExpressionStatement	"print_one ( "" 2 bit gray: "" , pm -> error_gray_2 )"	10993:6:349290:349334	8677828	0	True				
ANR	8677863	CallExpression	"print_one ( "" 2 bit gray: "" , pm -> error_gray_2 )"		8677828	0					
ANR	8677864	Callee	print_one		8677828	0					
ANR	8677865	Identifier	print_one		8677828	0					
ANR	8677866	ArgumentList	""" 2 bit gray: """		8677828	1					
ANR	8677867	Argument	""" 2 bit gray: """		8677828	0					
ANR	8677868	PrimaryExpression	""" 2 bit gray: """		8677828	0					
ANR	8677869	Argument	pm -> error_gray_2		8677828	1					
ANR	8677870	PtrMemberAccess	pm -> error_gray_2		8677828	0					
ANR	8677871	Identifier	pm		8677828	0					
ANR	8677872	Identifier	error_gray_2		8677828	1					
ANR	8677873	ExpressionStatement	"print_one ( "" 4 bit gray: "" , pm -> error_gray_4 )"	10994:6:349342:349386	8677828	1	True				
ANR	8677874	CallExpression	"print_one ( "" 4 bit gray: "" , pm -> error_gray_4 )"		8677828	0					
ANR	8677875	Callee	print_one		8677828	0					
ANR	8677876	Identifier	print_one		8677828	0					
ANR	8677877	ArgumentList	""" 4 bit gray: """		8677828	1					
ANR	8677878	Argument	""" 4 bit gray: """		8677828	0					
ANR	8677879	PrimaryExpression	""" 4 bit gray: """		8677828	0					
ANR	8677880	Argument	pm -> error_gray_4		8677828	1					
ANR	8677881	PtrMemberAccess	pm -> error_gray_4		8677828	0					
ANR	8677882	Identifier	pm		8677828	0					
ANR	8677883	Identifier	error_gray_4		8677828	1					
ANR	8677884	ExpressionStatement	"print_one ( "" 8 bit gray: "" , pm -> error_gray_8 )"	10995:6:349394:349438	8677828	2	True				
ANR	8677885	CallExpression	"print_one ( "" 8 bit gray: "" , pm -> error_gray_8 )"		8677828	0					
ANR	8677886	Callee	print_one		8677828	0					
ANR	8677887	Identifier	print_one		8677828	0					
ANR	8677888	ArgumentList	""" 8 bit gray: """		8677828	1					
ANR	8677889	Argument	""" 8 bit gray: """		8677828	0					
ANR	8677890	PrimaryExpression	""" 8 bit gray: """		8677828	0					
ANR	8677891	Argument	pm -> error_gray_8		8677828	1					
ANR	8677892	PtrMemberAccess	pm -> error_gray_8		8677828	0					
ANR	8677893	Identifier	pm		8677828	0					
ANR	8677894	Identifier	error_gray_8		8677828	1					
ANR	8677895	ExpressionStatement	"print_one ( "" 8 bit color:"" , pm -> error_color_8 )"	10996:6:349446:349491	8677828	3	True				
ANR	8677896	CallExpression	"print_one ( "" 8 bit color:"" , pm -> error_color_8 )"		8677828	0					
ANR	8677897	Callee	print_one		8677828	0					
ANR	8677898	Identifier	print_one		8677828	0					
ANR	8677899	ArgumentList	""" 8 bit color:"""		8677828	1					
ANR	8677900	Argument	""" 8 bit color:"""		8677828	0					
ANR	8677901	PrimaryExpression	""" 8 bit color:"""		8677828	0					
ANR	8677902	Argument	pm -> error_color_8		8677828	1					
ANR	8677903	PtrMemberAccess	pm -> error_color_8		8677828	0					
ANR	8677904	Identifier	pm		8677828	0					
ANR	8677905	Identifier	error_color_8		8677828	1					
ANR	8677906	IfStatement	if ( indexed )		8677828	4					
ANR	8677907	Condition	indexed	10997:10:349503:349509	8677828	0	True				
ANR	8677908	Identifier	indexed		8677828	0					
ANR	8677909	ExpressionStatement	"print_one ( "" indexed:    "" , pm -> error_indexed )"	10998:9:349521:349566	8677828	1	True				
ANR	8677910	CallExpression	"print_one ( "" indexed:    "" , pm -> error_indexed )"		8677828	0					
ANR	8677911	Callee	print_one		8677828	0					
ANR	8677912	Identifier	print_one		8677828	0					
ANR	8677913	ArgumentList	""" indexed:    """		8677828	1					
ANR	8677914	Argument	""" indexed:    """		8677828	0					
ANR	8677915	PrimaryExpression	""" indexed:    """		8677828	0					
ANR	8677916	Argument	pm -> error_indexed		8677828	1					
ANR	8677917	PtrMemberAccess	pm -> error_indexed		8677828	0					
ANR	8677918	Identifier	pm		8677828	0					
ANR	8677919	Identifier	error_indexed		8677828	1					
ANR	8677920	ExpressionStatement	"print_one ( ""16 bit gray: "" , pm -> error_gray_16 )"	11001:3:349577:349622	8677828	3	True				
ANR	8677921	CallExpression	"print_one ( ""16 bit gray: "" , pm -> error_gray_16 )"		8677828	0					
ANR	8677922	Callee	print_one		8677828	0					
ANR	8677923	Identifier	print_one		8677828	0					
ANR	8677924	ArgumentList	"""16 bit gray: """		8677828	1					
ANR	8677925	Argument	"""16 bit gray: """		8677828	0					
ANR	8677926	PrimaryExpression	"""16 bit gray: """		8677828	0					
ANR	8677927	Argument	pm -> error_gray_16		8677828	1					
ANR	8677928	PtrMemberAccess	pm -> error_gray_16		8677828	0					
ANR	8677929	Identifier	pm		8677828	0					
ANR	8677930	Identifier	error_gray_16		8677828	1					
ANR	8677931	ExpressionStatement	"print_one ( ""16 bit color:"" , pm -> error_color_16 )"	11002:3:349627:349673	8677828	4	True				
ANR	8677932	CallExpression	"print_one ( ""16 bit color:"" , pm -> error_color_16 )"		8677828	0					
ANR	8677933	Callee	print_one		8677828	0					
ANR	8677934	Identifier	print_one		8677828	0					
ANR	8677935	ArgumentList	"""16 bit color:"""		8677828	1					
ANR	8677936	Argument	"""16 bit color:"""		8677828	0					
ANR	8677937	PrimaryExpression	"""16 bit color:"""		8677828	0					
ANR	8677938	Argument	pm -> error_color_16		8677828	1					
ANR	8677939	PtrMemberAccess	pm -> error_color_16		8677828	0					
ANR	8677940	Identifier	pm		8677828	0					
ANR	8677941	Identifier	error_color_16		8677828	1					
ANR	8677942	ExpressionStatement	fflush ( stdout )	11004:3:349679:349693	8677828	5	True				
ANR	8677943	CallExpression	fflush ( stdout )		8677828	0					
ANR	8677944	Callee	fflush		8677828	0					
ANR	8677945	Identifier	fflush		8677828	0					
ANR	8677946	ArgumentList	stdout		8677828	1					
ANR	8677947	Argument	stdout		8677828	0					
ANR	8677948	Identifier	stdout		8677828	0					
ANR	8677949	ReturnType	static void		8677828	1					
ANR	8677950	Identifier	summarize_gamma_errors		8677828	2					
ANR	8677951	ParameterList	"png_modifier * pm , png_const_charp who , int low_bit_depth , int indexed"		8677828	3					
ANR	8677952	Parameter	png_modifier * pm	10980:23:349042:349057	8677828	0	True				
ANR	8677953	ParameterType	png_modifier *		8677828	0					
ANR	8677954	Identifier	pm		8677828	1					
ANR	8677955	Parameter	png_const_charp who	10980:41:349060:349078	8677828	1	True				
ANR	8677956	ParameterType	png_const_charp		8677828	0					
ANR	8677957	Identifier	who		8677828	1					
ANR	8677958	Parameter	int low_bit_depth	10980:62:349081:349097	8677828	2	True				
ANR	8677959	ParameterType	int		8677828	0					
ANR	8677960	Identifier	low_bit_depth		8677828	1					
ANR	8677961	Parameter	int indexed	10981:3:349103:349113	8677828	3	True				
ANR	8677962	ParameterType	int		8677828	0					
ANR	8677963	Identifier	indexed		8677828	1					
ANR	8677964	CFGEntryNode	ENTRY		8677828		True				
ANR	8677965	CFGExitNode	EXIT		8677828		True				
ANR	8677966	Symbol	* pm		8677828						
ANR	8677967	Symbol	stdout		8677828						
ANR	8677968	Symbol	indexed		8677828						
ANR	8677969	Symbol	pm -> error_color_16		8677828						
ANR	8677970	Symbol	stderr		8677828						
ANR	8677971	Symbol	low_bit_depth		8677828						
ANR	8677972	Symbol	pm -> error_indexed		8677828						
ANR	8677973	Symbol	pm -> error_gray_8		8677828						
ANR	8677974	Symbol	pm -> error_color_8		8677828						
ANR	8677975	Symbol	pm -> error_gray_16		8677828						
ANR	8677976	Symbol	pm -> error_gray_4		8677828						
ANR	8677977	Symbol	pm		8677828						
ANR	8677978	Symbol	pm -> error_gray_2		8677828						
ANR	8677979	Symbol	who		8677828						
ANR	8677980	Function	perform_gamma_test	11007:0:349698:354158							
ANR	8677981	FunctionDef	"perform_gamma_test (png_modifier * pm , int summary)"		8677980	0					
ANR	8677982	CompoundStatement		11009:0:349760:354158	8677980	0					
ANR	8677983	IdentifierDeclStatement	unsigned int calculations_use_input_precision = pm -> calculations_use_input_precision ;	11012:3:349854:349944	8677980	0	True				
ANR	8677984	IdentifierDecl	calculations_use_input_precision = pm -> calculations_use_input_precision		8677980	0					
ANR	8677985	IdentifierDeclType	unsigned int		8677980	0					
ANR	8677986	Identifier	calculations_use_input_precision		8677980	1					
ANR	8677987	AssignmentExpression	calculations_use_input_precision = pm -> calculations_use_input_precision		8677980	2		=			
ANR	8677988	Identifier	calculations_use_input_precision		8677980	0					
ANR	8677989	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	1					
ANR	8677990	Identifier	pm		8677980	0					
ANR	8677991	Identifier	calculations_use_input_precision		8677980	1					
ANR	8677992	IdentifierDeclStatement	ifdef PNG_READ_BACKGROUND_SUPPORTED double maxout8 = pm -> maxout8 ;	11014:3:349949:350019	8677980	1	True				
ANR	8677993	IdentifierDecl	maxout8 = pm -> maxout8		8677980	0					
ANR	8677994	IdentifierDeclType	ifdef PNG_READ_BACKGROUND_SUPPORTED double		8677980	0					
ANR	8677995	Identifier	maxout8		8677980	1					
ANR	8677996	AssignmentExpression	maxout8 = pm -> maxout8		8677980	2		=			
ANR	8677997	Identifier	maxout8		8677980	0					
ANR	8677998	PtrMemberAccess	pm -> maxout8		8677980	1					
ANR	8677999	Identifier	pm		8677980	0					
ANR	8678000	Identifier	maxout8		8677980	1					
ANR	8678001	Statement	endif	11016:3:350024:350028	8677980	2	True				
ANR	8678002	IfStatement	if ( ! pm -> this . speed && pm -> test_gamma_threshold )		8677980	3					
ANR	8678003	Condition	! pm -> this . speed && pm -> test_gamma_threshold	11019:7:350088:350130	8677980	0	True				
ANR	8678004	AndExpression	! pm -> this . speed && pm -> test_gamma_threshold		8677980	0		&&			
ANR	8678005	UnaryOperationExpression	! pm -> this . speed		8677980	0					
ANR	8678006	UnaryOperator	!		8677980	0					
ANR	8678007	MemberAccess	pm -> this . speed		8677980	1					
ANR	8678008	PtrMemberAccess	pm -> this		8677980	0					
ANR	8678009	Identifier	pm		8677980	0					
ANR	8678010	Identifier	this		8677980	1					
ANR	8678011	Identifier	speed		8677980	1					
ANR	8678012	PtrMemberAccess	pm -> test_gamma_threshold		8677980	1					
ANR	8678013	Identifier	pm		8677980	0					
ANR	8678014	Identifier	test_gamma_threshold		8677980	1					
ANR	8678015	CompoundStatement		12:3:375:375	8677980	1					
ANR	8678016	ExpressionStatement	perform_gamma_threshold_tests ( pm )	11021:6:350144:350177	8677980	0	True				
ANR	8678017	CallExpression	perform_gamma_threshold_tests ( pm )		8677980	0					
ANR	8678018	Callee	perform_gamma_threshold_tests		8677980	0					
ANR	8678019	Identifier	perform_gamma_threshold_tests		8677980	0					
ANR	8678020	ArgumentList	pm		8677980	1					
ANR	8678021	Argument	pm		8677980	0					
ANR	8678022	Identifier	pm		8677980	0					
ANR	8678023	IfStatement	if ( fail ( pm ) )		8677980	1					
ANR	8678024	Condition	fail ( pm )	11023:10:350190:350197	8677980	0	True				
ANR	8678025	CallExpression	fail ( pm )		8677980	0					
ANR	8678026	Callee	fail		8677980	0					
ANR	8678027	Identifier	fail		8677980	0					
ANR	8678028	ArgumentList	pm		8677980	1					
ANR	8678029	Argument	pm		8677980	0					
ANR	8678030	Identifier	pm		8677980	0					
ANR	8678031	ReturnStatement	return ;	11024:9:350209:350215	8677980	1	True				
ANR	8678032	IfStatement	if ( pm -> test_gamma_transform )		8677980	4					
ANR	8678033	Condition	pm -> test_gamma_transform	11028:7:350265:350288	8677980	0	True				
ANR	8678034	PtrMemberAccess	pm -> test_gamma_transform		8677980	0					
ANR	8678035	Identifier	pm		8677980	0					
ANR	8678036	Identifier	test_gamma_transform		8677980	1					
ANR	8678037	CompoundStatement		21:3:533:533	8677980	1					
ANR	8678038	IfStatement	if ( summary )		8677980	0					
ANR	8678039	Condition	summary	11030:10:350306:350312	8677980	0	True				
ANR	8678040	Identifier	summary		8677980	0					
ANR	8678041	CompoundStatement		23:6:560:560	8677980	1					
ANR	8678042	ExpressionStatement	fflush ( stderr )	11032:9:350332:350346	8677980	0	True				
ANR	8678043	CallExpression	fflush ( stderr )		8677980	0					
ANR	8678044	Callee	fflush		8677980	0					
ANR	8678045	Identifier	fflush		8677980	0					
ANR	8678046	ArgumentList	stderr		8677980	1					
ANR	8678047	Argument	stderr		8677980	0					
ANR	8678048	Identifier	stderr		8677980	0					
ANR	8678049	ExpressionStatement	"printf ( ""Gamma correction error summary\\n\\n"" )"	11033:9:350357:350401	8677980	1	True				
ANR	8678050	CallExpression	"printf ( ""Gamma correction error summary\\n\\n"" )"		8677980	0					
ANR	8678051	Callee	printf		8677980	0					
ANR	8678052	Identifier	printf		8677980	0					
ANR	8678053	ArgumentList	"""Gamma correction error summary\\n\\n"""		8677980	1					
ANR	8678054	Argument	"""Gamma correction error summary\\n\\n"""		8677980	0					
ANR	8678055	PrimaryExpression	"""Gamma correction error summary\\n\\n"""		8677980	0					
ANR	8678056	ExpressionStatement	"printf ( ""The printed value is the maximum error in the pixel values\\n"" )"	11034:9:350412:350482	8677980	2	True				
ANR	8678057	CallExpression	"printf ( ""The printed value is the maximum error in the pixel values\\n"" )"		8677980	0					
ANR	8678058	Callee	printf		8677980	0					
ANR	8678059	Identifier	printf		8677980	0					
ANR	8678060	ArgumentList	"""The printed value is the maximum error in the pixel values\\n"""		8677980	1					
ANR	8678061	Argument	"""The printed value is the maximum error in the pixel values\\n"""		8677980	0					
ANR	8678062	PrimaryExpression	"""The printed value is the maximum error in the pixel values\\n"""		8677980	0					
ANR	8678063	ExpressionStatement	"printf ( ""calculated by the libpng gamma correction code.  The error\\n"" )"	11035:9:350493:350563	8677980	3	True				
ANR	8678064	CallExpression	"printf ( ""calculated by the libpng gamma correction code.  The error\\n"" )"		8677980	0					
ANR	8678065	Callee	printf		8677980	0					
ANR	8678066	Identifier	printf		8677980	0					
ANR	8678067	ArgumentList	"""calculated by the libpng gamma correction code.  The error\\n"""		8677980	1					
ANR	8678068	Argument	"""calculated by the libpng gamma correction code.  The error\\n"""		8677980	0					
ANR	8678069	PrimaryExpression	"""calculated by the libpng gamma correction code.  The error\\n"""		8677980	0					
ANR	8678070	ExpressionStatement	"printf ( ""is calculated as the difference between the output pixel\\n"" )"	11036:9:350574:350642	8677980	4	True				
ANR	8678071	CallExpression	"printf ( ""is calculated as the difference between the output pixel\\n"" )"		8677980	0					
ANR	8678072	Callee	printf		8677980	0					
ANR	8678073	Identifier	printf		8677980	0					
ANR	8678074	ArgumentList	"""is calculated as the difference between the output pixel\\n"""		8677980	1					
ANR	8678075	Argument	"""is calculated as the difference between the output pixel\\n"""		8677980	0					
ANR	8678076	PrimaryExpression	"""is calculated as the difference between the output pixel\\n"""		8677980	0					
ANR	8678077	ExpressionStatement	"printf ( ""value (always an integer) and the ideal value from the\\n"" )"	11037:9:350653:350719	8677980	5	True				
ANR	8678078	CallExpression	"printf ( ""value (always an integer) and the ideal value from the\\n"" )"		8677980	0					
ANR	8678079	Callee	printf		8677980	0					
ANR	8678080	Identifier	printf		8677980	0					
ANR	8678081	ArgumentList	"""value (always an integer) and the ideal value from the\\n"""		8677980	1					
ANR	8678082	Argument	"""value (always an integer) and the ideal value from the\\n"""		8677980	0					
ANR	8678083	PrimaryExpression	"""value (always an integer) and the ideal value from the\\n"""		8677980	0					
ANR	8678084	ExpressionStatement	"printf ( ""libpng specification (typically not an integer).\\n\\n"" )"	11038:9:350730:350792	8677980	6	True				
ANR	8678085	CallExpression	"printf ( ""libpng specification (typically not an integer).\\n\\n"" )"		8677980	0					
ANR	8678086	Callee	printf		8677980	0					
ANR	8678087	Identifier	printf		8677980	0					
ANR	8678088	ArgumentList	"""libpng specification (typically not an integer).\\n\\n"""		8677980	1					
ANR	8678089	Argument	"""libpng specification (typically not an integer).\\n\\n"""		8677980	0					
ANR	8678090	PrimaryExpression	"""libpng specification (typically not an integer).\\n\\n"""		8677980	0					
ANR	8678091	ExpressionStatement	"printf ( ""Expect this value to be less than .5 for 8 bit formats,\\n"" )"	11040:9:350804:350871	8677980	7	True				
ANR	8678092	CallExpression	"printf ( ""Expect this value to be less than .5 for 8 bit formats,\\n"" )"		8677980	0					
ANR	8678093	Callee	printf		8677980	0					
ANR	8678094	Identifier	printf		8677980	0					
ANR	8678095	ArgumentList	"""Expect this value to be less than .5 for 8 bit formats,\\n"""		8677980	1					
ANR	8678096	Argument	"""Expect this value to be less than .5 for 8 bit formats,\\n"""		8677980	0					
ANR	8678097	PrimaryExpression	"""Expect this value to be less than .5 for 8 bit formats,\\n"""		8677980	0					
ANR	8678098	ExpressionStatement	"printf ( ""less than 1 for formats with fewer than 8 bits and a small\\n"" )"	11041:9:350882:350952	8677980	8	True				
ANR	8678099	CallExpression	"printf ( ""less than 1 for formats with fewer than 8 bits and a small\\n"" )"		8677980	0					
ANR	8678100	Callee	printf		8677980	0					
ANR	8678101	Identifier	printf		8677980	0					
ANR	8678102	ArgumentList	"""less than 1 for formats with fewer than 8 bits and a small\\n"""		8677980	1					
ANR	8678103	Argument	"""less than 1 for formats with fewer than 8 bits and a small\\n"""		8677980	0					
ANR	8678104	PrimaryExpression	"""less than 1 for formats with fewer than 8 bits and a small\\n"""		8677980	0					
ANR	8678105	ExpressionStatement	"printf ( ""number (typically less than 5) for the 16 bit formats.\\n"" )"	11042:9:350963:351029	8677980	9	True				
ANR	8678106	CallExpression	"printf ( ""number (typically less than 5) for the 16 bit formats.\\n"" )"		8677980	0					
ANR	8678107	Callee	printf		8677980	0					
ANR	8678108	Identifier	printf		8677980	0					
ANR	8678109	ArgumentList	"""number (typically less than 5) for the 16 bit formats.\\n"""		8677980	1					
ANR	8678110	Argument	"""number (typically less than 5) for the 16 bit formats.\\n"""		8677980	0					
ANR	8678111	PrimaryExpression	"""number (typically less than 5) for the 16 bit formats.\\n"""		8677980	0					
ANR	8678112	ExpressionStatement	"printf ( ""For performance reasons the value for 16 bit formats\\n"" )"	11043:9:351040:351104	8677980	10	True				
ANR	8678113	CallExpression	"printf ( ""For performance reasons the value for 16 bit formats\\n"" )"		8677980	0					
ANR	8678114	Callee	printf		8677980	0					
ANR	8678115	Identifier	printf		8677980	0					
ANR	8678116	ArgumentList	"""For performance reasons the value for 16 bit formats\\n"""		8677980	1					
ANR	8678117	Argument	"""For performance reasons the value for 16 bit formats\\n"""		8677980	0					
ANR	8678118	PrimaryExpression	"""For performance reasons the value for 16 bit formats\\n"""		8677980	0					
ANR	8678119	ExpressionStatement	"printf ( ""increases when the image file includes an sBIT chunk.\\n"" )"	11044:9:351115:351180	8677980	11	True				
ANR	8678120	CallExpression	"printf ( ""increases when the image file includes an sBIT chunk.\\n"" )"		8677980	0					
ANR	8678121	Callee	printf		8677980	0					
ANR	8678122	Identifier	printf		8677980	0					
ANR	8678123	ArgumentList	"""increases when the image file includes an sBIT chunk.\\n"""		8677980	1					
ANR	8678124	Argument	"""increases when the image file includes an sBIT chunk.\\n"""		8677980	0					
ANR	8678125	PrimaryExpression	"""increases when the image file includes an sBIT chunk.\\n"""		8677980	0					
ANR	8678126	ExpressionStatement	fflush ( stdout )	11045:9:351191:351205	8677980	12	True				
ANR	8678127	CallExpression	fflush ( stdout )		8677980	0					
ANR	8678128	Callee	fflush		8677980	0					
ANR	8678129	Identifier	fflush		8677980	0					
ANR	8678130	ArgumentList	stdout		8677980	1					
ANR	8678131	Argument	stdout		8677980	0					
ANR	8678132	Identifier	stdout		8677980	0					
ANR	8678133	ExpressionStatement	init_gamma_errors ( pm )	11048:6:351222:351243	8677980	1	True				
ANR	8678134	CallExpression	init_gamma_errors ( pm )		8677980	0					
ANR	8678135	Callee	init_gamma_errors		8677980	0					
ANR	8678136	Identifier	init_gamma_errors		8677980	0					
ANR	8678137	ArgumentList	pm		8677980	1					
ANR	8678138	Argument	pm		8677980	0					
ANR	8678139	Identifier	pm		8677980	0					
ANR	8678140	IfStatement	if ( pm -> test_gamma_expand16 )		8677980	2					
ANR	8678141	Condition	pm -> test_gamma_expand16	11052:10:351371:351393	8677980	0	True				
ANR	8678142	PtrMemberAccess	pm -> test_gamma_expand16		8677980	0					
ANR	8678143	Identifier	pm		8677980	0					
ANR	8678144	Identifier	test_gamma_expand16		8677980	1					
ANR	8678145	ExpressionStatement	pm -> calculations_use_input_precision = 1	11053:9:351405:351445	8677980	1	True				
ANR	8678146	AssignmentExpression	pm -> calculations_use_input_precision = 1		8677980	0		=			
ANR	8678147	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	0					
ANR	8678148	Identifier	pm		8677980	0					
ANR	8678149	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678150	PrimaryExpression	1		8677980	1					
ANR	8678151	ExpressionStatement	perform_gamma_transform_tests ( pm )	11054:6:351453:351486	8677980	3	True				
ANR	8678152	CallExpression	perform_gamma_transform_tests ( pm )		8677980	0					
ANR	8678153	Callee	perform_gamma_transform_tests		8677980	0					
ANR	8678154	Identifier	perform_gamma_transform_tests		8677980	0					
ANR	8678155	ArgumentList	pm		8677980	1					
ANR	8678156	Argument	pm		8677980	0					
ANR	8678157	Identifier	pm		8677980	0					
ANR	8678158	IfStatement	if ( ! calculations_use_input_precision )		8677980	4					
ANR	8678159	Condition	! calculations_use_input_precision	11055:10:351498:351530	8677980	0	True				
ANR	8678160	UnaryOperationExpression	! calculations_use_input_precision		8677980	0					
ANR	8678161	UnaryOperator	!		8677980	0					
ANR	8678162	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678163	ExpressionStatement	pm -> calculations_use_input_precision = 0	11056:9:351542:351582	8677980	1	True				
ANR	8678164	AssignmentExpression	pm -> calculations_use_input_precision = 0		8677980	0		=			
ANR	8678165	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	0					
ANR	8678166	Identifier	pm		8677980	0					
ANR	8678167	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678168	PrimaryExpression	0		8677980	1					
ANR	8678169	IfStatement	if ( summary )		8677980	5					
ANR	8678170	Condition	summary	11058:10:351595:351601	8677980	0	True				
ANR	8678171	Identifier	summary		8677980	0					
ANR	8678172	ExpressionStatement	"summarize_gamma_errors ( pm , 0 , 1 , 1 )"	11059:9:351613:351683	8677980	1	True				
ANR	8678173	CallExpression	"summarize_gamma_errors ( pm , 0 , 1 , 1 )"		8677980	0					
ANR	8678174	Callee	summarize_gamma_errors		8677980	0					
ANR	8678175	Identifier	summarize_gamma_errors		8677980	0					
ANR	8678176	ArgumentList	pm		8677980	1					
ANR	8678177	Argument	pm		8677980	0					
ANR	8678178	Identifier	pm		8677980	0					
ANR	8678179	Argument	0		8677980	1					
ANR	8678180	PrimaryExpression	0		8677980	0					
ANR	8678181	Argument	1		8677980	2					
ANR	8678182	PrimaryExpression	1		8677980	0					
ANR	8678183	Argument	1		8677980	3					
ANR	8678184	PrimaryExpression	1		8677980	0					
ANR	8678185	IfStatement	if ( fail ( pm ) )		8677980	6					
ANR	8678186	Condition	fail ( pm )	11061:10:351696:351703	8677980	0	True				
ANR	8678187	CallExpression	fail ( pm )		8677980	0					
ANR	8678188	Callee	fail		8677980	0					
ANR	8678189	Identifier	fail		8677980	0					
ANR	8678190	ArgumentList	pm		8677980	1					
ANR	8678191	Argument	pm		8677980	0					
ANR	8678192	Identifier	pm		8677980	0					
ANR	8678193	ReturnStatement	return ;	11062:9:351715:351721	8677980	1	True				
ANR	8678194	IfStatement	if ( pm -> test_gamma_sbit )		8677980	5					
ANR	8678195	Condition	pm -> test_gamma_sbit	11066:7:351788:351806	8677980	0	True				
ANR	8678196	PtrMemberAccess	pm -> test_gamma_sbit		8677980	0					
ANR	8678197	Identifier	pm		8677980	0					
ANR	8678198	Identifier	test_gamma_sbit		8677980	1					
ANR	8678199	CompoundStatement		59:3:2051:2051	8677980	1					
ANR	8678200	ExpressionStatement	init_gamma_errors ( pm )	11068:6:351820:351841	8677980	0	True				
ANR	8678201	CallExpression	init_gamma_errors ( pm )		8677980	0					
ANR	8678202	Callee	init_gamma_errors		8677980	0					
ANR	8678203	Identifier	init_gamma_errors		8677980	0					
ANR	8678204	ArgumentList	pm		8677980	1					
ANR	8678205	Argument	pm		8677980	0					
ANR	8678206	Identifier	pm		8677980	0					
ANR	8678207	ExpressionStatement	perform_gamma_sbit_tests ( pm )	11069:6:351849:351877	8677980	1	True				
ANR	8678208	CallExpression	perform_gamma_sbit_tests ( pm )		8677980	0					
ANR	8678209	Callee	perform_gamma_sbit_tests		8677980	0					
ANR	8678210	Identifier	perform_gamma_sbit_tests		8677980	0					
ANR	8678211	ArgumentList	pm		8677980	1					
ANR	8678212	Argument	pm		8677980	0					
ANR	8678213	Identifier	pm		8677980	0					
ANR	8678214	IfStatement	if ( summary )		8677980	2					
ANR	8678215	Condition	summary	11071:10:351890:351896	8677980	0	True				
ANR	8678216	Identifier	summary		8677980	0					
ANR	8678217	ExpressionStatement	"summarize_gamma_errors ( pm , ""sBIT"" , pm -> sbitlow < 8U , 1 )"	11072:9:351908:351974	8677980	1	True				
ANR	8678218	CallExpression	"summarize_gamma_errors ( pm , ""sBIT"" , pm -> sbitlow < 8U , 1 )"		8677980	0					
ANR	8678219	Callee	summarize_gamma_errors		8677980	0					
ANR	8678220	Identifier	summarize_gamma_errors		8677980	0					
ANR	8678221	ArgumentList	pm		8677980	1					
ANR	8678222	Argument	pm		8677980	0					
ANR	8678223	Identifier	pm		8677980	0					
ANR	8678224	Argument	"""sBIT"""		8677980	1					
ANR	8678225	PrimaryExpression	"""sBIT"""		8677980	0					
ANR	8678226	Argument	pm -> sbitlow < 8U		8677980	2					
ANR	8678227	RelationalExpression	pm -> sbitlow < 8U		8677980	0		<			
ANR	8678228	PtrMemberAccess	pm -> sbitlow		8677980	0					
ANR	8678229	Identifier	pm		8677980	0					
ANR	8678230	Identifier	sbitlow		8677980	1					
ANR	8678231	PrimaryExpression	8U		8677980	1					
ANR	8678232	Argument	1		8677980	3					
ANR	8678233	PrimaryExpression	1		8677980	0					
ANR	8678234	IfStatement	if ( fail ( pm ) )		8677980	3					
ANR	8678235	Condition	fail ( pm )	11074:10:351987:351994	8677980	0	True				
ANR	8678236	CallExpression	fail ( pm )		8677980	0					
ANR	8678237	Callee	fail		8677980	0					
ANR	8678238	Identifier	fail		8677980	0					
ANR	8678239	ArgumentList	pm		8677980	1					
ANR	8678240	Argument	pm		8677980	0					
ANR	8678241	Identifier	pm		8677980	0					
ANR	8678242	ReturnStatement	return ;	11075:9:352006:352012	8677980	1	True				
ANR	8678243	IfStatement	if ( pm -> test_gamma_scale16 )		8677980	6					
ANR	8678244	Condition	pm -> test_gamma_scale16	11079:7:352080:352101	8677980	0	True				
ANR	8678245	PtrMemberAccess	pm -> test_gamma_scale16		8677980	0					
ANR	8678246	Identifier	pm		8677980	0					
ANR	8678247	Identifier	test_gamma_scale16		8677980	1					
ANR	8678248	CompoundStatement		72:3:2346:2346	8677980	1					
ANR	8678249	ExpressionStatement	init_gamma_errors ( pm )	11082:6:352161:352182	8677980	0	True				
ANR	8678250	CallExpression	init_gamma_errors ( pm )		8677980	0					
ANR	8678251	Callee	init_gamma_errors		8677980	0					
ANR	8678252	Identifier	init_gamma_errors		8677980	0					
ANR	8678253	ArgumentList	pm		8677980	1					
ANR	8678254	Argument	pm		8677980	0					
ANR	8678255	Identifier	pm		8677980	0					
ANR	8678256	ExpressionStatement	perform_gamma_scale16_tests ( pm )	11083:6:352190:352221	8677980	1	True				
ANR	8678257	CallExpression	perform_gamma_scale16_tests ( pm )		8677980	0					
ANR	8678258	Callee	perform_gamma_scale16_tests		8677980	0					
ANR	8678259	Identifier	perform_gamma_scale16_tests		8677980	0					
ANR	8678260	ArgumentList	pm		8677980	1					
ANR	8678261	Argument	pm		8677980	0					
ANR	8678262	Identifier	pm		8677980	0					
ANR	8678263	IfStatement	if ( summary )		8677980	2					
ANR	8678264	Condition	summary	11085:10:352234:352240	8677980	0	True				
ANR	8678265	Identifier	summary		8677980	0					
ANR	8678266	CompoundStatement		78:6:2488:2488	8677980	1					
ANR	8678267	ExpressionStatement	fflush ( stderr )	11087:9:352260:352274	8677980	0	True				
ANR	8678268	CallExpression	fflush ( stderr )		8677980	0					
ANR	8678269	Callee	fflush		8677980	0					
ANR	8678270	Identifier	fflush		8677980	0					
ANR	8678271	ArgumentList	stderr		8677980	1					
ANR	8678272	Argument	stderr		8677980	0					
ANR	8678273	Identifier	stderr		8677980	0					
ANR	8678274	ExpressionStatement	"printf ( ""\\nGamma correction with 16 to 8 bit reduction:\\n"" )"	11088:9:352285:352343	8677980	1	True				
ANR	8678275	CallExpression	"printf ( ""\\nGamma correction with 16 to 8 bit reduction:\\n"" )"		8677980	0					
ANR	8678276	Callee	printf		8677980	0					
ANR	8678277	Identifier	printf		8677980	0					
ANR	8678278	ArgumentList	"""\\nGamma correction with 16 to 8 bit reduction:\\n"""		8677980	1					
ANR	8678279	Argument	"""\\nGamma correction with 16 to 8 bit reduction:\\n"""		8677980	0					
ANR	8678280	PrimaryExpression	"""\\nGamma correction with 16 to 8 bit reduction:\\n"""		8677980	0					
ANR	8678281	ExpressionStatement	"printf ( "" 16 bit gray:  %.5f\\n"" , pm -> error_gray_16 )"	11089:9:352354:352404	8677980	2	True				
ANR	8678282	CallExpression	"printf ( "" 16 bit gray:  %.5f\\n"" , pm -> error_gray_16 )"		8677980	0					
ANR	8678283	Callee	printf		8677980	0					
ANR	8678284	Identifier	printf		8677980	0					
ANR	8678285	ArgumentList	""" 16 bit gray:  %.5f\\n"""		8677980	1					
ANR	8678286	Argument	""" 16 bit gray:  %.5f\\n"""		8677980	0					
ANR	8678287	PrimaryExpression	""" 16 bit gray:  %.5f\\n"""		8677980	0					
ANR	8678288	Argument	pm -> error_gray_16		8677980	1					
ANR	8678289	PtrMemberAccess	pm -> error_gray_16		8677980	0					
ANR	8678290	Identifier	pm		8677980	0					
ANR	8678291	Identifier	error_gray_16		8677980	1					
ANR	8678292	ExpressionStatement	"printf ( "" 16 bit color: %.5f\\n"" , pm -> error_color_16 )"	11090:9:352415:352466	8677980	3	True				
ANR	8678293	CallExpression	"printf ( "" 16 bit color: %.5f\\n"" , pm -> error_color_16 )"		8677980	0					
ANR	8678294	Callee	printf		8677980	0					
ANR	8678295	Identifier	printf		8677980	0					
ANR	8678296	ArgumentList	""" 16 bit color: %.5f\\n"""		8677980	1					
ANR	8678297	Argument	""" 16 bit color: %.5f\\n"""		8677980	0					
ANR	8678298	PrimaryExpression	""" 16 bit color: %.5f\\n"""		8677980	0					
ANR	8678299	Argument	pm -> error_color_16		8677980	1					
ANR	8678300	PtrMemberAccess	pm -> error_color_16		8677980	0					
ANR	8678301	Identifier	pm		8677980	0					
ANR	8678302	Identifier	error_color_16		8677980	1					
ANR	8678303	ExpressionStatement	fflush ( stdout )	11091:9:352477:352491	8677980	4	True				
ANR	8678304	CallExpression	fflush ( stdout )		8677980	0					
ANR	8678305	Callee	fflush		8677980	0					
ANR	8678306	Identifier	fflush		8677980	0					
ANR	8678307	ArgumentList	stdout		8677980	1					
ANR	8678308	Argument	stdout		8677980	0					
ANR	8678309	Identifier	stdout		8677980	0					
ANR	8678310	IfStatement	if ( fail ( pm ) )		8677980	3					
ANR	8678311	Condition	fail ( pm )	11094:10:352512:352519	8677980	0	True				
ANR	8678312	CallExpression	fail ( pm )		8677980	0					
ANR	8678313	Callee	fail		8677980	0					
ANR	8678314	Identifier	fail		8677980	0					
ANR	8678315	ArgumentList	pm		8677980	1					
ANR	8678316	Argument	pm		8677980	0					
ANR	8678317	Identifier	pm		8677980	0					
ANR	8678318	ReturnStatement	return ;	11095:9:352531:352537	8677980	1	True				
ANR	8678319	IfStatement	if ( pm -> test_gamma_background )		8677980	7					
ANR	8678320	Condition	pm -> test_gamma_background	11100:7:352596:352620	8677980	0	True				
ANR	8678321	PtrMemberAccess	pm -> test_gamma_background		8677980	0					
ANR	8678322	Identifier	pm		8677980	0					
ANR	8678323	Identifier	test_gamma_background		8677980	1					
ANR	8678324	CompoundStatement		93:3:2865:2865	8677980	1					
ANR	8678325	ExpressionStatement	init_gamma_errors ( pm )	11102:6:352634:352655	8677980	0	True				
ANR	8678326	CallExpression	init_gamma_errors ( pm )		8677980	0					
ANR	8678327	Callee	init_gamma_errors		8677980	0					
ANR	8678328	Identifier	init_gamma_errors		8677980	0					
ANR	8678329	ArgumentList	pm		8677980	1					
ANR	8678330	Argument	pm		8677980	0					
ANR	8678331	Identifier	pm		8677980	0					
ANR	8678332	IfStatement	if ( pm -> test_gamma_expand16 )		8677980	1					
ANR	8678333	Condition	pm -> test_gamma_expand16	11107:10:352784:352806	8677980	0	True				
ANR	8678334	PtrMemberAccess	pm -> test_gamma_expand16		8677980	0					
ANR	8678335	Identifier	pm		8677980	0					
ANR	8678336	Identifier	test_gamma_expand16		8677980	1					
ANR	8678337	CompoundStatement		100:6:3054:3054	8677980	1					
ANR	8678338	ExpressionStatement	pm -> calculations_use_input_precision = 1	11109:9:352826:352866	8677980	0	True				
ANR	8678339	AssignmentExpression	pm -> calculations_use_input_precision = 1		8677980	0		=			
ANR	8678340	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	0					
ANR	8678341	Identifier	pm		8677980	0					
ANR	8678342	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678343	PrimaryExpression	1		8677980	1					
ANR	8678344	ExpressionStatement	pm -> maxout8 = .499	11110:9:352877:352895	8677980	1	True				
ANR	8678345	AssignmentExpression	pm -> maxout8 = .499		8677980	0		=			
ANR	8678346	PtrMemberAccess	pm -> maxout8		8677980	0					
ANR	8678347	Identifier	pm		8677980	0					
ANR	8678348	Identifier	maxout8		8677980	1					
ANR	8678349	PrimaryExpression	.499		8677980	1					
ANR	8678350	ExpressionStatement	"perform_gamma_composition_tests ( pm , PNG_BACKGROUND_GAMMA_UNIQUE , pm -> test_gamma_expand16 )"	11112:6:352958:353056	8677980	2	True				
ANR	8678351	CallExpression	"perform_gamma_composition_tests ( pm , PNG_BACKGROUND_GAMMA_UNIQUE , pm -> test_gamma_expand16 )"		8677980	0					
ANR	8678352	Callee	perform_gamma_composition_tests		8677980	0					
ANR	8678353	Identifier	perform_gamma_composition_tests		8677980	0					
ANR	8678354	ArgumentList	pm		8677980	1					
ANR	8678355	Argument	pm		8677980	0					
ANR	8678356	Identifier	pm		8677980	0					
ANR	8678357	Argument	PNG_BACKGROUND_GAMMA_UNIQUE		8677980	1					
ANR	8678358	Identifier	PNG_BACKGROUND_GAMMA_UNIQUE		8677980	0					
ANR	8678359	Argument	pm -> test_gamma_expand16		8677980	2					
ANR	8678360	PtrMemberAccess	pm -> test_gamma_expand16		8677980	0					
ANR	8678361	Identifier	pm		8677980	0					
ANR	8678362	Identifier	test_gamma_expand16		8677980	1					
ANR	8678363	IfStatement	if ( ! calculations_use_input_precision )		8677980	3					
ANR	8678364	Condition	! calculations_use_input_precision	11114:10:353068:353100	8677980	0	True				
ANR	8678365	UnaryOperationExpression	! calculations_use_input_precision		8677980	0					
ANR	8678366	UnaryOperator	!		8677980	0					
ANR	8678367	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678368	ExpressionStatement	pm -> calculations_use_input_precision = 0	11115:9:353112:353152	8677980	1	True				
ANR	8678369	AssignmentExpression	pm -> calculations_use_input_precision = 0		8677980	0		=			
ANR	8678370	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	0					
ANR	8678371	Identifier	pm		8677980	0					
ANR	8678372	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678373	PrimaryExpression	0		8677980	1					
ANR	8678374	ExpressionStatement	pm -> maxout8 = maxout8	11116:6:353160:353181	8677980	4	True				
ANR	8678375	AssignmentExpression	pm -> maxout8 = maxout8		8677980	0		=			
ANR	8678376	PtrMemberAccess	pm -> maxout8		8677980	0					
ANR	8678377	Identifier	pm		8677980	0					
ANR	8678378	Identifier	maxout8		8677980	1					
ANR	8678379	Identifier	maxout8		8677980	1					
ANR	8678380	IfStatement	if ( summary )		8677980	5					
ANR	8678381	Condition	summary	11118:10:353194:353200	8677980	0	True				
ANR	8678382	Identifier	summary		8677980	0					
ANR	8678383	ExpressionStatement	"summarize_gamma_errors ( pm , ""background"" , 1 , 0 )"	11119:9:353212:353269	8677980	1	True				
ANR	8678384	CallExpression	"summarize_gamma_errors ( pm , ""background"" , 1 , 0 )"		8677980	0					
ANR	8678385	Callee	summarize_gamma_errors		8677980	0					
ANR	8678386	Identifier	summarize_gamma_errors		8677980	0					
ANR	8678387	ArgumentList	pm		8677980	1					
ANR	8678388	Argument	pm		8677980	0					
ANR	8678389	Identifier	pm		8677980	0					
ANR	8678390	Argument	"""background"""		8677980	1					
ANR	8678391	PrimaryExpression	"""background"""		8677980	0					
ANR	8678392	Argument	1		8677980	2					
ANR	8678393	PrimaryExpression	1		8677980	0					
ANR	8678394	Argument	0		8677980	3					
ANR	8678395	PrimaryExpression	0		8677980	0					
ANR	8678396	IfStatement	if ( fail ( pm ) )		8677980	6					
ANR	8678397	Condition	fail ( pm )	11121:10:353282:353289	8677980	0	True				
ANR	8678398	CallExpression	fail ( pm )		8677980	0					
ANR	8678399	Callee	fail		8677980	0					
ANR	8678400	Identifier	fail		8677980	0					
ANR	8678401	ArgumentList	pm		8677980	1					
ANR	8678402	Argument	pm		8677980	0					
ANR	8678403	Identifier	pm		8677980	0					
ANR	8678404	ReturnStatement	return ;	11122:9:353301:353307	8677980	1	True				
ANR	8678405	IfStatement	if ( pm -> test_gamma_alpha_mode )		8677980	8					
ANR	8678406	Condition	pm -> test_gamma_alpha_mode	11127:7:353366:353390	8677980	0	True				
ANR	8678407	PtrMemberAccess	pm -> test_gamma_alpha_mode		8677980	0					
ANR	8678408	Identifier	pm		8677980	0					
ANR	8678409	Identifier	test_gamma_alpha_mode		8677980	1					
ANR	8678410	CompoundStatement		121:6:3643:3660	8677980	1					
ANR	8678411	IdentifierDeclStatement	int do_background ;	11129:6:353404:353421	8677980	0	True				
ANR	8678412	IdentifierDecl	do_background		8677980	0					
ANR	8678413	IdentifierDeclType	int		8677980	0					
ANR	8678414	Identifier	do_background		8677980	1					
ANR	8678415	ExpressionStatement	init_gamma_errors ( pm )	11131:6:353430:353451	8677980	1	True				
ANR	8678416	CallExpression	init_gamma_errors ( pm )		8677980	0					
ANR	8678417	Callee	init_gamma_errors		8677980	0					
ANR	8678418	Identifier	init_gamma_errors		8677980	0					
ANR	8678419	ArgumentList	pm		8677980	1					
ANR	8678420	Argument	pm		8677980	0					
ANR	8678421	Identifier	pm		8677980	0					
ANR	8678422	IfStatement	if ( pm -> test_gamma_expand16 )		8677980	2					
ANR	8678423	Condition	pm -> test_gamma_expand16	11136:10:353580:353602	8677980	0	True				
ANR	8678424	PtrMemberAccess	pm -> test_gamma_expand16		8677980	0					
ANR	8678425	Identifier	pm		8677980	0					
ANR	8678426	Identifier	test_gamma_expand16		8677980	1					
ANR	8678427	ExpressionStatement	pm -> calculations_use_input_precision = 1	11137:9:353614:353654	8677980	1	True				
ANR	8678428	AssignmentExpression	pm -> calculations_use_input_precision = 1		8677980	0		=			
ANR	8678429	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	0					
ANR	8678430	Identifier	pm		8677980	0					
ANR	8678431	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678432	PrimaryExpression	1		8677980	1					
ANR	8678433	ForStatement	for ( do_background = ALPHA_MODE_OFFSET + PNG_ALPHA_STANDARD ; do_background <= ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN && ! fail ( pm ) ; ++ do_background )		8677980	3					
ANR	8678434	ForInit	do_background = ALPHA_MODE_OFFSET + PNG_ALPHA_STANDARD ;	11138:11:353667:353721	8677980	0	True				
ANR	8678435	AssignmentExpression	do_background = ALPHA_MODE_OFFSET + PNG_ALPHA_STANDARD		8677980	0		=			
ANR	8678436	Identifier	do_background		8677980	0					
ANR	8678437	AdditiveExpression	ALPHA_MODE_OFFSET + PNG_ALPHA_STANDARD		8677980	1		+			
ANR	8678438	Identifier	ALPHA_MODE_OFFSET		8677980	0					
ANR	8678439	Identifier	PNG_ALPHA_STANDARD		8677980	1					
ANR	8678440	Condition	do_background <= ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN && ! fail ( pm )	11139:9:353732:353797	8677980	1	True				
ANR	8678441	AndExpression	do_background <= ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN && ! fail ( pm )		8677980	0		&&			
ANR	8678442	RelationalExpression	do_background <= ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN		8677980	0		<=			
ANR	8678443	Identifier	do_background		8677980	0					
ANR	8678444	AdditiveExpression	ALPHA_MODE_OFFSET + PNG_ALPHA_BROKEN		8677980	1		+			
ANR	8678445	Identifier	ALPHA_MODE_OFFSET		8677980	0					
ANR	8678446	Identifier	PNG_ALPHA_BROKEN		8677980	1					
ANR	8678447	UnaryOperationExpression	! fail ( pm )		8677980	1					
ANR	8678448	UnaryOperator	!		8677980	0					
ANR	8678449	CallExpression	fail ( pm )		8677980	1					
ANR	8678450	Callee	fail		8677980	0					
ANR	8678451	Identifier	fail		8677980	0					
ANR	8678452	ArgumentList	pm		8677980	1					
ANR	8678453	Argument	pm		8677980	0					
ANR	8678454	Identifier	pm		8677980	0					
ANR	8678455	UnaryExpression	++ do_background	11140:9:353809:353823	8677980	2	True				
ANR	8678456	IncDec	++		8677980	0					
ANR	8678457	Identifier	do_background		8677980	1					
ANR	8678458	ExpressionStatement	"perform_gamma_composition_tests ( pm , do_background , pm -> test_gamma_expand16 )"	11141:9:353835:353922	8677980	3	True				
ANR	8678459	CallExpression	"perform_gamma_composition_tests ( pm , do_background , pm -> test_gamma_expand16 )"		8677980	0					
ANR	8678460	Callee	perform_gamma_composition_tests		8677980	0					
ANR	8678461	Identifier	perform_gamma_composition_tests		8677980	0					
ANR	8678462	ArgumentList	pm		8677980	1					
ANR	8678463	Argument	pm		8677980	0					
ANR	8678464	Identifier	pm		8677980	0					
ANR	8678465	Argument	do_background		8677980	1					
ANR	8678466	Identifier	do_background		8677980	0					
ANR	8678467	Argument	pm -> test_gamma_expand16		8677980	2					
ANR	8678468	PtrMemberAccess	pm -> test_gamma_expand16		8677980	0					
ANR	8678469	Identifier	pm		8677980	0					
ANR	8678470	Identifier	test_gamma_expand16		8677980	1					
ANR	8678471	IfStatement	if ( ! calculations_use_input_precision )		8677980	4					
ANR	8678472	Condition	! calculations_use_input_precision	11143:10:353934:353966	8677980	0	True				
ANR	8678473	UnaryOperationExpression	! calculations_use_input_precision		8677980	0					
ANR	8678474	UnaryOperator	!		8677980	0					
ANR	8678475	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678476	ExpressionStatement	pm -> calculations_use_input_precision = 0	11144:9:353978:354018	8677980	1	True				
ANR	8678477	AssignmentExpression	pm -> calculations_use_input_precision = 0		8677980	0		=			
ANR	8678478	PtrMemberAccess	pm -> calculations_use_input_precision		8677980	0					
ANR	8678479	Identifier	pm		8677980	0					
ANR	8678480	Identifier	calculations_use_input_precision		8677980	1					
ANR	8678481	PrimaryExpression	0		8677980	1					
ANR	8678482	IfStatement	if ( summary )		8677980	5					
ANR	8678483	Condition	summary	11146:10:354031:354037	8677980	0	True				
ANR	8678484	Identifier	summary		8677980	0					
ANR	8678485	ExpressionStatement	"summarize_gamma_errors ( pm , ""alpha mode"" , 1 , 0 )"	11147:9:354049:354106	8677980	1	True				
ANR	8678486	CallExpression	"summarize_gamma_errors ( pm , ""alpha mode"" , 1 , 0 )"		8677980	0					
ANR	8678487	Callee	summarize_gamma_errors		8677980	0					
ANR	8678488	Identifier	summarize_gamma_errors		8677980	0					
ANR	8678489	ArgumentList	pm		8677980	1					
ANR	8678490	Argument	pm		8677980	0					
ANR	8678491	Identifier	pm		8677980	0					
ANR	8678492	Argument	"""alpha mode"""		8677980	1					
ANR	8678493	PrimaryExpression	"""alpha mode"""		8677980	0					
ANR	8678494	Argument	1		8677980	2					
ANR	8678495	PrimaryExpression	1		8677980	0					
ANR	8678496	Argument	0		8677980	3					
ANR	8678497	PrimaryExpression	0		8677980	0					
ANR	8678498	IfStatement	if ( fail ( pm ) )		8677980	6					
ANR	8678499	Condition	fail ( pm )	11149:10:354119:354126	8677980	0	True				
ANR	8678500	CallExpression	fail ( pm )		8677980	0					
ANR	8678501	Callee	fail		8677980	0					
ANR	8678502	Identifier	fail		8677980	0					
ANR	8678503	ArgumentList	pm		8677980	1					
ANR	8678504	Argument	pm		8677980	0					
ANR	8678505	Identifier	pm		8677980	0					
ANR	8678506	ReturnStatement	return ;	11150:9:354138:354144	8677980	1	True				
ANR	8678507	ReturnType	static void		8677980	1					
ANR	8678508	Identifier	perform_gamma_test		8677980	2					
ANR	8678509	ParameterList	"png_modifier * pm , int summary"		8677980	3					
ANR	8678510	Parameter	png_modifier * pm	11008:19:349729:349744	8677980	0	True				
ANR	8678511	ParameterType	png_modifier *		8677980	0					
ANR	8678512	Identifier	pm		8677980	1					
ANR	8678513	Parameter	int summary	11008:37:349747:349757	8677980	1	True				
ANR	8678514	ParameterType	int		8677980	0					
ANR	8678515	Identifier	summary		8677980	1					
ANR	8678516	CFGEntryNode	ENTRY		8677980		True				
ANR	8678517	CFGExitNode	EXIT		8677980		True				
ANR	8678518	Symbol	pm -> test_gamma_scale16		8677980						
ANR	8678519	Symbol	PNG_BACKGROUND_GAMMA_UNIQUE		8677980						
ANR	8678520	Symbol	stdout		8677980						
ANR	8678521	Symbol	PNG_ALPHA_BROKEN		8677980						
ANR	8678522	Symbol	pm -> this . speed		8677980						
ANR	8678523	Symbol	do_background		8677980						
ANR	8678524	Symbol	pm -> test_gamma_alpha_mode		8677980						
ANR	8678525	Symbol	pm -> test_gamma_sbit		8677980						
ANR	8678526	Symbol	maxout8		8677980						
ANR	8678527	Symbol	pm -> test_gamma_background		8677980						
ANR	8678528	Symbol	pm -> test_gamma_threshold		8677980						
ANR	8678529	Symbol	pm -> test_gamma_expand16		8677980						
ANR	8678530	Symbol	summary		8677980						
ANR	8678531	Symbol	* pm		8677980						
ANR	8678532	Symbol	pm -> this		8677980						
ANR	8678533	Symbol	pm -> calculations_use_input_precision		8677980						
ANR	8678534	Symbol	PNG_ALPHA_STANDARD		8677980						
ANR	8678535	Symbol	pm -> maxout8		8677980						
ANR	8678536	Symbol	pm -> error_color_16		8677980						
ANR	8678537	Symbol	stderr		8677980						
ANR	8678538	Symbol	ALPHA_MODE_OFFSET		8677980						
ANR	8678539	Symbol	fail		8677980						
ANR	8678540	Symbol	calculations_use_input_precision		8677980						
ANR	8678541	Symbol	pm -> test_gamma_transform		8677980						
ANR	8678542	Symbol	pm -> error_gray_16		8677980						
ANR	8678543	Symbol	pm		8677980						
ANR	8678544	Symbol	pm -> sbitlow		8677980						
ANR	8678545	Function	png_pass_start_row	11180:0:354965:355138							
ANR	8678546	FunctionDef	png_pass_start_row (int pass)		8678545	0					
ANR	8678547	CompoundStatement		11182:0:355013:355138	8678545	0					
ANR	8678548	IdentifierDeclStatement	"int x , y ;"	11183:3:355018:355026	8678545	0	True				
ANR	8678549	IdentifierDecl	x		8678545	0					
ANR	8678550	IdentifierDeclType	int		8678545	0					
ANR	8678551	Identifier	x		8678545	1					
ANR	8678552	IdentifierDecl	y		8678545	1					
ANR	8678553	IdentifierDeclType	int		8678545	0					
ANR	8678554	Identifier	y		8678545	1					
ANR	8678555	ExpressionStatement	++ pass	11184:3:355031:355037	8678545	1	True				
ANR	8678556	UnaryExpression	++ pass		8678545	0					
ANR	8678557	IncDec	++		8678545	0					
ANR	8678558	Identifier	pass		8678545	1					
ANR	8678559	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8678545	2					
ANR	8678560	ForInit	y = 0 ;	11185:8:355047:355050	8678545	0	True				
ANR	8678561	AssignmentExpression	y = 0		8678545	0		=			
ANR	8678562	Identifier	y		8678545	0					
ANR	8678563	PrimaryExpression	0		8678545	1					
ANR	8678564	Condition	y < 8	11185:13:355052:355054	8678545	1	True				
ANR	8678565	RelationalExpression	y < 8		8678545	0		<			
ANR	8678566	Identifier	y		8678545	0					
ANR	8678567	PrimaryExpression	8		8678545	1					
ANR	8678568	UnaryExpression	++ y	11185:18:355057:355059	8678545	2	True				
ANR	8678569	IncDec	++		8678545	0					
ANR	8678570	Identifier	y		8678545	1					
ANR	8678571	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8678545	3					
ANR	8678572	ForInit	x = 0 ;	11185:28:355067:355070	8678545	0	True				
ANR	8678573	AssignmentExpression	x = 0		8678545	0		=			
ANR	8678574	Identifier	x		8678545	0					
ANR	8678575	PrimaryExpression	0		8678545	1					
ANR	8678576	Condition	x < 8	11185:33:355072:355074	8678545	1	True				
ANR	8678577	RelationalExpression	x < 8		8678545	0		<			
ANR	8678578	Identifier	x		8678545	0					
ANR	8678579	PrimaryExpression	8		8678545	1					
ANR	8678580	UnaryExpression	++ x	11185:38:355077:355079	8678545	2	True				
ANR	8678581	IncDec	++		8678545	0					
ANR	8678582	Identifier	x		8678545	1					
ANR	8678583	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8678545	3					
ANR	8678584	Condition	adam7 [ y ] [ x ] == pass	11185:47:355086:355104	8678545	0	True				
ANR	8678585	EqualityExpression	adam7 [ y ] [ x ] == pass		8678545	0		==			
ANR	8678586	ArrayIndexing	adam7 [ y ] [ x ]		8678545	0					
ANR	8678587	ArrayIndexing	adam7 [ y ]		8678545	0					
ANR	8678588	Identifier	adam7		8678545	0					
ANR	8678589	Identifier	y		8678545	1					
ANR	8678590	Identifier	x		8678545	1					
ANR	8678591	Identifier	pass		8678545	1					
ANR	8678592	ReturnStatement	return y ;	11186:6:355113:355121	8678545	1	True				
ANR	8678593	Identifier	y		8678545	0					
ANR	8678594	ReturnStatement	return 0xf ;	11187:3:355126:355136	8678545	3	True				
ANR	8678595	PrimaryExpression	0xf		8678545	0					
ANR	8678596	ReturnType	static png_uint_32		8678545	1					
ANR	8678597	Identifier	png_pass_start_row		8678545	2					
ANR	8678598	ParameterList	int pass		8678545	3					
ANR	8678599	Parameter	int pass	11181:19:355003:355010	8678545	0	True				
ANR	8678600	ParameterType	int		8678545	0					
ANR	8678601	Identifier	pass		8678545	1					
ANR	8678602	CFGEntryNode	ENTRY		8678545		True				
ANR	8678603	CFGExitNode	EXIT		8678545		True				
ANR	8678604	Symbol	* * y		8678545						
ANR	8678605	Symbol	* x		8678545						
ANR	8678606	Symbol	* y		8678545						
ANR	8678607	Symbol	* adam7		8678545						
ANR	8678608	Symbol	pass		8678545						
ANR	8678609	Symbol	x		8678545						
ANR	8678610	Symbol	y		8678545						
ANR	8678611	Symbol	* * adam7		8678545						
ANR	8678612	Symbol	adam7		8678545						
ANR	8678613	Function	png_pass_start_col	11190:0:355141:355314							
ANR	8678614	FunctionDef	png_pass_start_col (int pass)		8678613	0					
ANR	8678615	CompoundStatement		11192:0:355189:355314	8678613	0					
ANR	8678616	IdentifierDeclStatement	"int x , y ;"	11193:3:355194:355202	8678613	0	True				
ANR	8678617	IdentifierDecl	x		8678613	0					
ANR	8678618	IdentifierDeclType	int		8678613	0					
ANR	8678619	Identifier	x		8678613	1					
ANR	8678620	IdentifierDecl	y		8678613	1					
ANR	8678621	IdentifierDeclType	int		8678613	0					
ANR	8678622	Identifier	y		8678613	1					
ANR	8678623	ExpressionStatement	++ pass	11194:3:355207:355213	8678613	1	True				
ANR	8678624	UnaryExpression	++ pass		8678613	0					
ANR	8678625	IncDec	++		8678613	0					
ANR	8678626	Identifier	pass		8678613	1					
ANR	8678627	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8678613	2					
ANR	8678628	ForInit	x = 0 ;	11195:8:355223:355226	8678613	0	True				
ANR	8678629	AssignmentExpression	x = 0		8678613	0		=			
ANR	8678630	Identifier	x		8678613	0					
ANR	8678631	PrimaryExpression	0		8678613	1					
ANR	8678632	Condition	x < 8	11195:13:355228:355230	8678613	1	True				
ANR	8678633	RelationalExpression	x < 8		8678613	0		<			
ANR	8678634	Identifier	x		8678613	0					
ANR	8678635	PrimaryExpression	8		8678613	1					
ANR	8678636	UnaryExpression	++ x	11195:18:355233:355235	8678613	2	True				
ANR	8678637	IncDec	++		8678613	0					
ANR	8678638	Identifier	x		8678613	1					
ANR	8678639	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8678613	3					
ANR	8678640	ForInit	y = 0 ;	11195:28:355243:355246	8678613	0	True				
ANR	8678641	AssignmentExpression	y = 0		8678613	0		=			
ANR	8678642	Identifier	y		8678613	0					
ANR	8678643	PrimaryExpression	0		8678613	1					
ANR	8678644	Condition	y < 8	11195:33:355248:355250	8678613	1	True				
ANR	8678645	RelationalExpression	y < 8		8678613	0		<			
ANR	8678646	Identifier	y		8678613	0					
ANR	8678647	PrimaryExpression	8		8678613	1					
ANR	8678648	UnaryExpression	++ y	11195:38:355253:355255	8678613	2	True				
ANR	8678649	IncDec	++		8678613	0					
ANR	8678650	Identifier	y		8678613	1					
ANR	8678651	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8678613	3					
ANR	8678652	Condition	adam7 [ y ] [ x ] == pass	11195:47:355262:355280	8678613	0	True				
ANR	8678653	EqualityExpression	adam7 [ y ] [ x ] == pass		8678613	0		==			
ANR	8678654	ArrayIndexing	adam7 [ y ] [ x ]		8678613	0					
ANR	8678655	ArrayIndexing	adam7 [ y ]		8678613	0					
ANR	8678656	Identifier	adam7		8678613	0					
ANR	8678657	Identifier	y		8678613	1					
ANR	8678658	Identifier	x		8678613	1					
ANR	8678659	Identifier	pass		8678613	1					
ANR	8678660	ReturnStatement	return x ;	11196:6:355289:355297	8678613	1	True				
ANR	8678661	Identifier	x		8678613	0					
ANR	8678662	ReturnStatement	return 0xf ;	11197:3:355302:355312	8678613	3	True				
ANR	8678663	PrimaryExpression	0xf		8678613	0					
ANR	8678664	ReturnType	static png_uint_32		8678613	1					
ANR	8678665	Identifier	png_pass_start_col		8678613	2					
ANR	8678666	ParameterList	int pass		8678613	3					
ANR	8678667	Parameter	int pass	11191:19:355179:355186	8678613	0	True				
ANR	8678668	ParameterType	int		8678613	0					
ANR	8678669	Identifier	pass		8678613	1					
ANR	8678670	CFGEntryNode	ENTRY		8678613		True				
ANR	8678671	CFGExitNode	EXIT		8678613		True				
ANR	8678672	Symbol	* x		8678613						
ANR	8678673	Symbol	* * y		8678613						
ANR	8678674	Symbol	* y		8678613						
ANR	8678675	Symbol	* adam7		8678613						
ANR	8678676	Symbol	pass		8678613						
ANR	8678677	Symbol	x		8678613						
ANR	8678678	Symbol	y		8678613						
ANR	8678679	Symbol	* * adam7		8678613						
ANR	8678680	Symbol	adam7		8678613						
ANR	8678681	Function	png_pass_row_shift	11200:0:355317:356051							
ANR	8678682	FunctionDef	png_pass_row_shift (int pass)		8678681	0					
ANR	8678683	CompoundStatement		11202:0:355357:356051	8678681	0					
ANR	8678684	IdentifierDeclStatement	"int x , y , base = ( - 1 ) , inc = 8 ;"	11203:3:355362:355388	8678681	0	True				
ANR	8678685	IdentifierDecl	x		8678681	0					
ANR	8678686	IdentifierDeclType	int		8678681	0					
ANR	8678687	Identifier	x		8678681	1					
ANR	8678688	IdentifierDecl	y		8678681	1					
ANR	8678689	IdentifierDeclType	int		8678681	0					
ANR	8678690	Identifier	y		8678681	1					
ANR	8678691	IdentifierDecl	base = ( - 1 )		8678681	2					
ANR	8678692	IdentifierDeclType	int		8678681	0					
ANR	8678693	Identifier	base		8678681	1					
ANR	8678694	AssignmentExpression	base = ( - 1 )		8678681	2		=			
ANR	8678695	Identifier	base		8678681	0					
ANR	8678696	UnaryOperationExpression	- 1		8678681	1					
ANR	8678697	UnaryOperator	-		8678681	0					
ANR	8678698	PrimaryExpression	1		8678681	1					
ANR	8678699	IdentifierDecl	inc = 8		8678681	3					
ANR	8678700	IdentifierDeclType	int		8678681	0					
ANR	8678701	Identifier	inc		8678681	1					
ANR	8678702	AssignmentExpression	inc = 8		8678681	2		=			
ANR	8678703	Identifier	inc		8678681	0					
ANR	8678704	PrimaryExpression	8		8678681	1					
ANR	8678705	ExpressionStatement	++ pass	11204:3:355393:355399	8678681	1	True				
ANR	8678706	UnaryExpression	++ pass		8678681	0					
ANR	8678707	IncDec	++		8678681	0					
ANR	8678708	Identifier	pass		8678681	1					
ANR	8678709	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8678681	2					
ANR	8678710	ForInit	y = 0 ;	11205:8:355409:355412	8678681	0	True				
ANR	8678711	AssignmentExpression	y = 0		8678681	0		=			
ANR	8678712	Identifier	y		8678681	0					
ANR	8678713	PrimaryExpression	0		8678681	1					
ANR	8678714	Condition	y < 8	11205:13:355414:355416	8678681	1	True				
ANR	8678715	RelationalExpression	y < 8		8678681	0		<			
ANR	8678716	Identifier	y		8678681	0					
ANR	8678717	PrimaryExpression	8		8678681	1					
ANR	8678718	UnaryExpression	++ y	11205:18:355419:355421	8678681	2	True				
ANR	8678719	IncDec	++		8678681	0					
ANR	8678720	Identifier	y		8678681	1					
ANR	8678721	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8678681	3					
ANR	8678722	ForInit	x = 0 ;	11205:28:355429:355432	8678681	0	True				
ANR	8678723	AssignmentExpression	x = 0		8678681	0		=			
ANR	8678724	Identifier	x		8678681	0					
ANR	8678725	PrimaryExpression	0		8678681	1					
ANR	8678726	Condition	x < 8	11205:33:355434:355436	8678681	1	True				
ANR	8678727	RelationalExpression	x < 8		8678681	0		<			
ANR	8678728	Identifier	x		8678681	0					
ANR	8678729	PrimaryExpression	8		8678681	1					
ANR	8678730	UnaryExpression	++ x	11205:38:355439:355441	8678681	2	True				
ANR	8678731	IncDec	++		8678681	0					
ANR	8678732	Identifier	x		8678681	1					
ANR	8678733	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8678681	3					
ANR	8678734	Condition	adam7 [ y ] [ x ] == pass	11205:47:355448:355466	8678681	0	True				
ANR	8678735	EqualityExpression	adam7 [ y ] [ x ] == pass		8678681	0		==			
ANR	8678736	ArrayIndexing	adam7 [ y ] [ x ]		8678681	0					
ANR	8678737	ArrayIndexing	adam7 [ y ]		8678681	0					
ANR	8678738	Identifier	adam7		8678681	0					
ANR	8678739	Identifier	y		8678681	1					
ANR	8678740	Identifier	x		8678681	1					
ANR	8678741	Identifier	pass		8678681	1					
ANR	8678742	CompoundStatement		5:3:114:114	8678681	1					
ANR	8678743	IfStatement	if ( base == ( - 1 ) )		8678681	0					
ANR	8678744	Condition	base == ( - 1 )	11207:10:355484:355495	8678681	0	True				
ANR	8678745	EqualityExpression	base == ( - 1 )		8678681	0		==			
ANR	8678746	Identifier	base		8678681	0					
ANR	8678747	UnaryOperationExpression	- 1		8678681	1					
ANR	8678748	UnaryOperator	-		8678681	0					
ANR	8678749	PrimaryExpression	1		8678681	1					
ANR	8678750	ExpressionStatement	base = y	11208:9:355507:355515	8678681	1	True				
ANR	8678751	AssignmentExpression	base = y		8678681	0		=			
ANR	8678752	Identifier	base		8678681	0					
ANR	8678753	Identifier	y		8678681	1					
ANR	8678754	ElseStatement	else		8678681	0					
ANR	8678755	IfStatement	if ( base == y )		8678681	0					
ANR	8678756	Condition	base == y	11209:15:355532:355540	8678681	0	True				
ANR	8678757	EqualityExpression	base == y		8678681	0		==			
ANR	8678758	Identifier	base		8678681	0					
ANR	8678759	Identifier	y		8678681	1					
ANR	8678760	CompoundStatement		9:9:194:194	8678681	1					
ANR	8678761	ElseStatement	else		8678681	0					
ANR	8678762	IfStatement	if ( inc == y - base )		8678681	0					
ANR	8678763	Condition	inc == y - base	11211:15:355570:355582	8678681	0	True				
ANR	8678764	EqualityExpression	inc == y - base		8678681	0		==			
ANR	8678765	Identifier	inc		8678681	0					
ANR	8678766	AdditiveExpression	y - base		8678681	1		-			
ANR	8678767	Identifier	y		8678681	0					
ANR	8678768	Identifier	base		8678681	1					
ANR	8678769	ExpressionStatement	base = y	11212:9:355594:355600	8678681	1	True				
ANR	8678770	AssignmentExpression	base = y		8678681	0		=			
ANR	8678771	Identifier	base		8678681	0					
ANR	8678772	Identifier	y		8678681	1					
ANR	8678773	ElseStatement	else		8678681	0					
ANR	8678774	IfStatement	if ( inc == 8 )		8678681	0					
ANR	8678775	Condition	inc == 8	11213:15:355617:355624	8678681	0	True				
ANR	8678776	EqualityExpression	inc == 8		8678681	0		==			
ANR	8678777	Identifier	inc		8678681	0					
ANR	8678778	PrimaryExpression	8		8678681	1					
ANR	8678779	ExpressionStatement	"inc = y - base , base = y"	11214:9:355636:355656	8678681	1	True				
ANR	8678780	Expression	"inc = y - base , base = y"		8678681	0					
ANR	8678781	AssignmentExpression	inc = y - base		8678681	0		=			
ANR	8678782	Identifier	inc		8678681	0					
ANR	8678783	AdditiveExpression	y - base		8678681	1		-			
ANR	8678784	Identifier	y		8678681	0					
ANR	8678785	Identifier	base		8678681	1					
ANR	8678786	AssignmentExpression	base = y		8678681	1		=			
ANR	8678787	Identifier	base		8678681	0					
ANR	8678788	Identifier	y		8678681	1					
ANR	8678789	ElseStatement	else		8678681	0					
ANR	8678790	IfStatement	if ( inc != y - base )		8678681	0					
ANR	8678791	Condition	inc != y - base	11215:15:355673:355685	8678681	0	True				
ANR	8678792	EqualityExpression	inc != y - base		8678681	0		!=			
ANR	8678793	Identifier	inc		8678681	0					
ANR	8678794	AdditiveExpression	y - base		8678681	1		-			
ANR	8678795	Identifier	y		8678681	0					
ANR	8678796	Identifier	base		8678681	1					
ANR	8678797	ReturnStatement	return 0xff ;	11216:9:355697:355708	8678681	1	True				
ANR	8678798	PrimaryExpression	0xff		8678681	0					
ANR	8678799	IfStatement	if ( base == ( - 1 ) )		8678681	3					
ANR	8678800	Condition	base == ( - 1 )	11219:7:355764:355775	8678681	0	True				
ANR	8678801	EqualityExpression	base == ( - 1 )		8678681	0		==			
ANR	8678802	Identifier	base		8678681	0					
ANR	8678803	UnaryOperationExpression	- 1		8678681	1					
ANR	8678804	UnaryOperator	-		8678681	0					
ANR	8678805	PrimaryExpression	1		8678681	1					
ANR	8678806	ReturnStatement	return 0xfe ;	11219:21:355778:355789	8678681	1	True				
ANR	8678807	PrimaryExpression	0xfe		8678681	0					
ANR	8678808	SwitchStatement	switch ( inc )		8678681	4					
ANR	8678809	Condition	inc	11222:11:355900:355902	8678681	0	True				
ANR	8678810	Identifier	inc		8678681	0					
ANR	8678811	CompoundStatement		22:3:550:550	8678681	1					
ANR	8678812	Label	case 2 :	11224:0:355910:355916	8678681	0	True				
ANR	8678813	ReturnStatement	return 1 ;	11224:8:355918:355926	8678681	1	True				
ANR	8678814	PrimaryExpression	1		8678681	0					
ANR	8678815	Label	case 4 :	11225:0:355928:355934	8678681	2	True				
ANR	8678816	ReturnStatement	return 2 ;	11225:8:355936:355944	8678681	3	True				
ANR	8678817	PrimaryExpression	2		8678681	0					
ANR	8678818	Label	case 8 :	11226:0:355946:355952	8678681	4	True				
ANR	8678819	ReturnStatement	return 3 ;	11226:8:355954:355962	8678681	5	True				
ANR	8678820	PrimaryExpression	3		8678681	0					
ANR	8678821	Label	default :	11227:0:355964:355971	8678681	6	True				
ANR	8678822	Identifier	default		8678681	0					
ANR	8678823	BreakStatement	break ;	11227:9:355973:355978	8678681	7	True				
ANR	8678824	ReturnStatement	return ( inc << 8 ) + 0xfd ;	11231:3:356025:356049	8678681	5	True				
ANR	8678825	AdditiveExpression	( inc << 8 ) + 0xfd		8678681	0		+			
ANR	8678826	ShiftExpression	inc << 8		8678681	0		<<			
ANR	8678827	Identifier	inc		8678681	0					
ANR	8678828	PrimaryExpression	8		8678681	1					
ANR	8678829	PrimaryExpression	0xfd		8678681	1					
ANR	8678830	ReturnType	static int		8678681	1					
ANR	8678831	Identifier	png_pass_row_shift		8678681	2					
ANR	8678832	ParameterList	int pass		8678681	3					
ANR	8678833	Parameter	int pass	11201:19:355347:355354	8678681	0	True				
ANR	8678834	ParameterType	int		8678681	0					
ANR	8678835	Identifier	pass		8678681	1					
ANR	8678836	CFGEntryNode	ENTRY		8678681		True				
ANR	8678837	CFGExitNode	EXIT		8678681		True				
ANR	8678838	Symbol	* x		8678681						
ANR	8678839	Symbol	* * y		8678681						
ANR	8678840	Symbol	* y		8678681						
ANR	8678841	Symbol	* adam7		8678681						
ANR	8678842	Symbol	pass		8678681						
ANR	8678843	Symbol	x		8678681						
ANR	8678844	Symbol	y		8678681						
ANR	8678845	Symbol	* * adam7		8678681						
ANR	8678846	Symbol	adam7		8678681						
ANR	8678847	Symbol	base		8678681						
ANR	8678848	Symbol	inc		8678681						
ANR	8678849	Function	png_pass_col_shift	11234:0:356054:356839							
ANR	8678850	FunctionDef	png_pass_col_shift (int pass)		8678849	0					
ANR	8678851	CompoundStatement		11236:0:356094:356839	8678849	0					
ANR	8678852	IdentifierDeclStatement	"int x , y , base = ( - 1 ) , inc = 8 ;"	11237:3:356099:356125	8678849	0	True				
ANR	8678853	IdentifierDecl	x		8678849	0					
ANR	8678854	IdentifierDeclType	int		8678849	0					
ANR	8678855	Identifier	x		8678849	1					
ANR	8678856	IdentifierDecl	y		8678849	1					
ANR	8678857	IdentifierDeclType	int		8678849	0					
ANR	8678858	Identifier	y		8678849	1					
ANR	8678859	IdentifierDecl	base = ( - 1 )		8678849	2					
ANR	8678860	IdentifierDeclType	int		8678849	0					
ANR	8678861	Identifier	base		8678849	1					
ANR	8678862	AssignmentExpression	base = ( - 1 )		8678849	2		=			
ANR	8678863	Identifier	base		8678849	0					
ANR	8678864	UnaryOperationExpression	- 1		8678849	1					
ANR	8678865	UnaryOperator	-		8678849	0					
ANR	8678866	PrimaryExpression	1		8678849	1					
ANR	8678867	IdentifierDecl	inc = 8		8678849	3					
ANR	8678868	IdentifierDeclType	int		8678849	0					
ANR	8678869	Identifier	inc		8678849	1					
ANR	8678870	AssignmentExpression	inc = 8		8678849	2		=			
ANR	8678871	Identifier	inc		8678849	0					
ANR	8678872	PrimaryExpression	8		8678849	1					
ANR	8678873	ExpressionStatement	++ pass	11238:3:356130:356136	8678849	1	True				
ANR	8678874	UnaryExpression	++ pass		8678849	0					
ANR	8678875	IncDec	++		8678849	0					
ANR	8678876	Identifier	pass		8678849	1					
ANR	8678877	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8678849	2					
ANR	8678878	ForInit	x = 0 ;	11239:8:356146:356149	8678849	0	True				
ANR	8678879	AssignmentExpression	x = 0		8678849	0		=			
ANR	8678880	Identifier	x		8678849	0					
ANR	8678881	PrimaryExpression	0		8678849	1					
ANR	8678882	Condition	x < 8	11239:13:356151:356153	8678849	1	True				
ANR	8678883	RelationalExpression	x < 8		8678849	0		<			
ANR	8678884	Identifier	x		8678849	0					
ANR	8678885	PrimaryExpression	8		8678849	1					
ANR	8678886	UnaryExpression	++ x	11239:18:356156:356158	8678849	2	True				
ANR	8678887	IncDec	++		8678849	0					
ANR	8678888	Identifier	x		8678849	1					
ANR	8678889	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8678849	3					
ANR	8678890	ForInit	y = 0 ;	11239:28:356166:356169	8678849	0	True				
ANR	8678891	AssignmentExpression	y = 0		8678849	0		=			
ANR	8678892	Identifier	y		8678849	0					
ANR	8678893	PrimaryExpression	0		8678849	1					
ANR	8678894	Condition	y < 8	11239:33:356171:356173	8678849	1	True				
ANR	8678895	RelationalExpression	y < 8		8678849	0		<			
ANR	8678896	Identifier	y		8678849	0					
ANR	8678897	PrimaryExpression	8		8678849	1					
ANR	8678898	UnaryExpression	++ y	11239:38:356176:356178	8678849	2	True				
ANR	8678899	IncDec	++		8678849	0					
ANR	8678900	Identifier	y		8678849	1					
ANR	8678901	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8678849	3					
ANR	8678902	Condition	adam7 [ y ] [ x ] == pass	11239:47:356185:356203	8678849	0	True				
ANR	8678903	EqualityExpression	adam7 [ y ] [ x ] == pass		8678849	0		==			
ANR	8678904	ArrayIndexing	adam7 [ y ] [ x ]		8678849	0					
ANR	8678905	ArrayIndexing	adam7 [ y ]		8678849	0					
ANR	8678906	Identifier	adam7		8678849	0					
ANR	8678907	Identifier	y		8678849	1					
ANR	8678908	Identifier	x		8678849	1					
ANR	8678909	Identifier	pass		8678849	1					
ANR	8678910	CompoundStatement		5:3:114:114	8678849	1					
ANR	8678911	IfStatement	if ( base == ( - 1 ) )		8678849	0					
ANR	8678912	Condition	base == ( - 1 )	11241:10:356221:356232	8678849	0	True				
ANR	8678913	EqualityExpression	base == ( - 1 )		8678849	0		==			
ANR	8678914	Identifier	base		8678849	0					
ANR	8678915	UnaryOperationExpression	- 1		8678849	1					
ANR	8678916	UnaryOperator	-		8678849	0					
ANR	8678917	PrimaryExpression	1		8678849	1					
ANR	8678918	ExpressionStatement	base = x	11242:9:356244:356252	8678849	1	True				
ANR	8678919	AssignmentExpression	base = x		8678849	0		=			
ANR	8678920	Identifier	base		8678849	0					
ANR	8678921	Identifier	x		8678849	1					
ANR	8678922	ElseStatement	else		8678849	0					
ANR	8678923	IfStatement	if ( base == x )		8678849	0					
ANR	8678924	Condition	base == x	11243:15:356269:356277	8678849	0	True				
ANR	8678925	EqualityExpression	base == x		8678849	0		==			
ANR	8678926	Identifier	base		8678849	0					
ANR	8678927	Identifier	x		8678849	1					
ANR	8678928	CompoundStatement		9:9:194:194	8678849	1					
ANR	8678929	ElseStatement	else		8678849	0					
ANR	8678930	IfStatement	if ( inc == x - base )		8678849	0					
ANR	8678931	Condition	inc == x - base	11245:15:356307:356319	8678849	0	True				
ANR	8678932	EqualityExpression	inc == x - base		8678849	0		==			
ANR	8678933	Identifier	inc		8678849	0					
ANR	8678934	AdditiveExpression	x - base		8678849	1		-			
ANR	8678935	Identifier	x		8678849	0					
ANR	8678936	Identifier	base		8678849	1					
ANR	8678937	ExpressionStatement	base = x	11246:9:356331:356337	8678849	1	True				
ANR	8678938	AssignmentExpression	base = x		8678849	0		=			
ANR	8678939	Identifier	base		8678849	0					
ANR	8678940	Identifier	x		8678849	1					
ANR	8678941	ElseStatement	else		8678849	0					
ANR	8678942	IfStatement	if ( inc == 8 )		8678849	0					
ANR	8678943	Condition	inc == 8	11247:15:356354:356361	8678849	0	True				
ANR	8678944	EqualityExpression	inc == 8		8678849	0		==			
ANR	8678945	Identifier	inc		8678849	0					
ANR	8678946	PrimaryExpression	8		8678849	1					
ANR	8678947	ExpressionStatement	"inc = x - base , base = x"	11248:9:356373:356393	8678849	1	True				
ANR	8678948	Expression	"inc = x - base , base = x"		8678849	0					
ANR	8678949	AssignmentExpression	inc = x - base		8678849	0		=			
ANR	8678950	Identifier	inc		8678849	0					
ANR	8678951	AdditiveExpression	x - base		8678849	1		-			
ANR	8678952	Identifier	x		8678849	0					
ANR	8678953	Identifier	base		8678849	1					
ANR	8678954	AssignmentExpression	base = x		8678849	1		=			
ANR	8678955	Identifier	base		8678849	0					
ANR	8678956	Identifier	x		8678849	1					
ANR	8678957	ElseStatement	else		8678849	0					
ANR	8678958	IfStatement	if ( inc != x - base )		8678849	0					
ANR	8678959	Condition	inc != x - base	11249:15:356410:356422	8678849	0	True				
ANR	8678960	EqualityExpression	inc != x - base		8678849	0		!=			
ANR	8678961	Identifier	inc		8678849	0					
ANR	8678962	AdditiveExpression	x - base		8678849	1		-			
ANR	8678963	Identifier	x		8678849	0					
ANR	8678964	Identifier	base		8678849	1					
ANR	8678965	ReturnStatement	return 0xff ;	11250:9:356434:356445	8678849	1	True				
ANR	8678966	PrimaryExpression	0xff		8678849	0					
ANR	8678967	IfStatement	if ( base == ( - 1 ) )		8678849	3					
ANR	8678968	Condition	base == ( - 1 )	11253:7:356501:356512	8678849	0	True				
ANR	8678969	EqualityExpression	base == ( - 1 )		8678849	0		==			
ANR	8678970	Identifier	base		8678849	0					
ANR	8678971	UnaryOperationExpression	- 1		8678849	1					
ANR	8678972	UnaryOperator	-		8678849	0					
ANR	8678973	PrimaryExpression	1		8678849	1					
ANR	8678974	ReturnStatement	return 0xfe ;	11253:21:356515:356526	8678849	1	True				
ANR	8678975	PrimaryExpression	0xfe		8678849	0					
ANR	8678976	SwitchStatement	switch ( inc )		8678849	4					
ANR	8678977	Condition	inc	11256:11:356637:356639	8678849	0	True				
ANR	8678978	Identifier	inc		8678849	0					
ANR	8678979	CompoundStatement		22:3:550:550	8678849	1					
ANR	8678980	Label	case 1 :	11258:0:356647:356653	8678849	0	True				
ANR	8678981	ReturnStatement	return 0 ;	11258:8:356655:356663	8678849	1	True				
ANR	8678982	PrimaryExpression	0		8678849	0					
ANR	8678983	Label	case 2 :	11259:0:356698:356704	8678849	2	True				
ANR	8678984	ReturnStatement	return 1 ;	11259:8:356706:356714	8678849	3	True				
ANR	8678985	PrimaryExpression	1		8678849	0					
ANR	8678986	Label	case 4 :	11260:0:356716:356722	8678849	4	True				
ANR	8678987	ReturnStatement	return 2 ;	11260:8:356724:356732	8678849	5	True				
ANR	8678988	PrimaryExpression	2		8678849	0					
ANR	8678989	Label	case 8 :	11261:0:356734:356740	8678849	6	True				
ANR	8678990	ReturnStatement	return 3 ;	11261:8:356742:356750	8678849	7	True				
ANR	8678991	PrimaryExpression	3		8678849	0					
ANR	8678992	Label	default :	11262:0:356752:356759	8678849	8	True				
ANR	8678993	Identifier	default		8678849	0					
ANR	8678994	BreakStatement	break ;	11262:9:356761:356766	8678849	9	True				
ANR	8678995	ReturnStatement	return ( inc << 8 ) + 0xfd ;	11266:3:356813:356837	8678849	5	True				
ANR	8678996	AdditiveExpression	( inc << 8 ) + 0xfd		8678849	0		+			
ANR	8678997	ShiftExpression	inc << 8		8678849	0		<<			
ANR	8678998	Identifier	inc		8678849	0					
ANR	8678999	PrimaryExpression	8		8678849	1					
ANR	8679000	PrimaryExpression	0xfd		8678849	1					
ANR	8679001	ReturnType	static int		8678849	1					
ANR	8679002	Identifier	png_pass_col_shift		8678849	2					
ANR	8679003	ParameterList	int pass		8678849	3					
ANR	8679004	Parameter	int pass	11235:19:356084:356091	8678849	0	True				
ANR	8679005	ParameterType	int		8678849	0					
ANR	8679006	Identifier	pass		8678849	1					
ANR	8679007	CFGEntryNode	ENTRY		8678849		True				
ANR	8679008	CFGExitNode	EXIT		8678849		True				
ANR	8679009	Symbol	* x		8678849						
ANR	8679010	Symbol	* * y		8678849						
ANR	8679011	Symbol	* y		8678849						
ANR	8679012	Symbol	* adam7		8678849						
ANR	8679013	Symbol	pass		8678849						
ANR	8679014	Symbol	x		8678849						
ANR	8679015	Symbol	y		8678849						
ANR	8679016	Symbol	* * adam7		8678849						
ANR	8679017	Symbol	adam7		8678849						
ANR	8679018	Symbol	base		8678849						
ANR	8679019	Symbol	inc		8678849						
ANR	8679020	Function	png_row_from_pass_row	11269:0:356842:357212							
ANR	8679021	FunctionDef	"png_row_from_pass_row (png_uint_32 yIn , int pass)"		8679020	0					
ANR	8679022	CompoundStatement		11271:0:356910:357212	8679020	0					
ANR	8679023	SwitchStatement	switch ( pass )		8679020	0					
ANR	8679024	Condition	pass	11273:11:356961:356964	8679020	0	True				
ANR	8679025	Identifier	pass		8679020	0					
ANR	8679026	CompoundStatement		4:3:59:59	8679020	1					
ANR	8679027	Label	case 0 :	11275:0:356972:356978	8679020	0	True				
ANR	8679028	ReturnStatement	return yIn * 8 ;	11275:8:356980:356994	8679020	1	True				
ANR	8679029	MultiplicativeExpression	yIn * 8		8679020	0		*			
ANR	8679030	Identifier	yIn		8679020	0					
ANR	8679031	PrimaryExpression	8		8679020	1					
ANR	8679032	Label	case 1 :	11276:0:356996:357002	8679020	2	True				
ANR	8679033	ReturnStatement	return yIn * 8 ;	11276:8:357004:357018	8679020	3	True				
ANR	8679034	MultiplicativeExpression	yIn * 8		8679020	0		*			
ANR	8679035	Identifier	yIn		8679020	0					
ANR	8679036	PrimaryExpression	8		8679020	1					
ANR	8679037	Label	case 2 :	11277:0:357020:357026	8679020	4	True				
ANR	8679038	ReturnStatement	return yIn * 8 + 4 ;	11277:8:357028:357046	8679020	5	True				
ANR	8679039	AdditiveExpression	yIn * 8 + 4		8679020	0		+			
ANR	8679040	MultiplicativeExpression	yIn * 8		8679020	0		*			
ANR	8679041	Identifier	yIn		8679020	0					
ANR	8679042	PrimaryExpression	8		8679020	1					
ANR	8679043	PrimaryExpression	4		8679020	1					
ANR	8679044	Label	case 3 :	11278:0:357048:357054	8679020	6	True				
ANR	8679045	ReturnStatement	return yIn * 4 ;	11278:8:357056:357070	8679020	7	True				
ANR	8679046	MultiplicativeExpression	yIn * 4		8679020	0		*			
ANR	8679047	Identifier	yIn		8679020	0					
ANR	8679048	PrimaryExpression	4		8679020	1					
ANR	8679049	Label	case 4 :	11279:0:357072:357078	8679020	8	True				
ANR	8679050	ReturnStatement	return yIn * 4 + 2 ;	11279:8:357080:357098	8679020	9	True				
ANR	8679051	AdditiveExpression	yIn * 4 + 2		8679020	0		+			
ANR	8679052	MultiplicativeExpression	yIn * 4		8679020	0		*			
ANR	8679053	Identifier	yIn		8679020	0					
ANR	8679054	PrimaryExpression	4		8679020	1					
ANR	8679055	PrimaryExpression	2		8679020	1					
ANR	8679056	Label	case 5 :	11280:0:357100:357106	8679020	10	True				
ANR	8679057	ReturnStatement	return yIn * 2 ;	11280:8:357108:357122	8679020	11	True				
ANR	8679058	MultiplicativeExpression	yIn * 2		8679020	0		*			
ANR	8679059	Identifier	yIn		8679020	0					
ANR	8679060	PrimaryExpression	2		8679020	1					
ANR	8679061	Label	case 6 :	11281:0:357124:357130	8679020	12	True				
ANR	8679062	ReturnStatement	return yIn * 2 + 1 ;	11281:8:357132:357150	8679020	13	True				
ANR	8679063	AdditiveExpression	yIn * 2 + 1		8679020	0		+			
ANR	8679064	MultiplicativeExpression	yIn * 2		8679020	0		*			
ANR	8679065	Identifier	yIn		8679020	0					
ANR	8679066	PrimaryExpression	2		8679020	1					
ANR	8679067	PrimaryExpression	1		8679020	1					
ANR	8679068	Label	default :	11282:0:357152:357159	8679020	14	True				
ANR	8679069	Identifier	default		8679020	0					
ANR	8679070	BreakStatement	break ;	11282:9:357161:357166	8679020	15	True				
ANR	8679071	ReturnStatement	return 0xff ;	11285:3:357177:357188	8679020	1	True				
ANR	8679072	PrimaryExpression	0xff		8679020	0					
ANR	8679073	ReturnType	static png_uint_32		8679020	1					
ANR	8679074	Identifier	png_row_from_pass_row		8679020	2					
ANR	8679075	ParameterList	"png_uint_32 yIn , int pass"		8679020	3					
ANR	8679076	Parameter	png_uint_32 yIn	11270:22:356883:356897	8679020	0	True				
ANR	8679077	ParameterType	png_uint_32		8679020	0					
ANR	8679078	Identifier	yIn		8679020	1					
ANR	8679079	Parameter	int pass	11270:39:356900:356907	8679020	1	True				
ANR	8679080	ParameterType	int		8679020	0					
ANR	8679081	Identifier	pass		8679020	1					
ANR	8679082	CFGEntryNode	ENTRY		8679020		True				
ANR	8679083	CFGExitNode	EXIT		8679020		True				
ANR	8679084	Symbol	pass		8679020						
ANR	8679085	Symbol	yIn		8679020						
ANR	8679086	Function	png_col_from_pass_col	11288:0:357215:357581							
ANR	8679087	FunctionDef	"png_col_from_pass_col (png_uint_32 xIn , int pass)"		8679086	0					
ANR	8679088	CompoundStatement		11290:0:357283:357581	8679086	0					
ANR	8679089	SwitchStatement	switch ( pass )		8679086	0					
ANR	8679090	Condition	pass	11292:11:357334:357337	8679086	0	True				
ANR	8679091	Identifier	pass		8679086	0					
ANR	8679092	CompoundStatement		4:3:59:59	8679086	1					
ANR	8679093	Label	case 0 :	11294:0:357345:357351	8679086	0	True				
ANR	8679094	ReturnStatement	return xIn * 8 ;	11294:8:357353:357367	8679086	1	True				
ANR	8679095	MultiplicativeExpression	xIn * 8		8679086	0		*			
ANR	8679096	Identifier	xIn		8679086	0					
ANR	8679097	PrimaryExpression	8		8679086	1					
ANR	8679098	Label	case 1 :	11295:0:357369:357375	8679086	2	True				
ANR	8679099	ReturnStatement	return xIn * 8 + 4 ;	11295:8:357377:357395	8679086	3	True				
ANR	8679100	AdditiveExpression	xIn * 8 + 4		8679086	0		+			
ANR	8679101	MultiplicativeExpression	xIn * 8		8679086	0		*			
ANR	8679102	Identifier	xIn		8679086	0					
ANR	8679103	PrimaryExpression	8		8679086	1					
ANR	8679104	PrimaryExpression	4		8679086	1					
ANR	8679105	Label	case 2 :	11296:0:357397:357403	8679086	4	True				
ANR	8679106	ReturnStatement	return xIn * 4 ;	11296:8:357405:357419	8679086	5	True				
ANR	8679107	MultiplicativeExpression	xIn * 4		8679086	0		*			
ANR	8679108	Identifier	xIn		8679086	0					
ANR	8679109	PrimaryExpression	4		8679086	1					
ANR	8679110	Label	case 3 :	11297:0:357421:357427	8679086	6	True				
ANR	8679111	ReturnStatement	return xIn * 4 + 2 ;	11297:8:357429:357447	8679086	7	True				
ANR	8679112	AdditiveExpression	xIn * 4 + 2		8679086	0		+			
ANR	8679113	MultiplicativeExpression	xIn * 4		8679086	0		*			
ANR	8679114	Identifier	xIn		8679086	0					
ANR	8679115	PrimaryExpression	4		8679086	1					
ANR	8679116	PrimaryExpression	2		8679086	1					
ANR	8679117	Label	case 4 :	11298:0:357449:357455	8679086	8	True				
ANR	8679118	ReturnStatement	return xIn * 2 ;	11298:8:357457:357471	8679086	9	True				
ANR	8679119	MultiplicativeExpression	xIn * 2		8679086	0		*			
ANR	8679120	Identifier	xIn		8679086	0					
ANR	8679121	PrimaryExpression	2		8679086	1					
ANR	8679122	Label	case 5 :	11299:0:357473:357479	8679086	10	True				
ANR	8679123	ReturnStatement	return xIn * 2 + 1 ;	11299:8:357481:357499	8679086	11	True				
ANR	8679124	AdditiveExpression	xIn * 2 + 1		8679086	0		+			
ANR	8679125	MultiplicativeExpression	xIn * 2		8679086	0		*			
ANR	8679126	Identifier	xIn		8679086	0					
ANR	8679127	PrimaryExpression	2		8679086	1					
ANR	8679128	PrimaryExpression	1		8679086	1					
ANR	8679129	Label	case 6 :	11300:0:357501:357507	8679086	12	True				
ANR	8679130	ReturnStatement	return xIn ;	11300:8:357509:357519	8679086	13	True				
ANR	8679131	Identifier	xIn		8679086	0					
ANR	8679132	Label	default :	11301:0:357521:357528	8679086	14	True				
ANR	8679133	Identifier	default		8679086	0					
ANR	8679134	BreakStatement	break ;	11301:9:357530:357535	8679086	15	True				
ANR	8679135	ReturnStatement	return 0xff ;	11304:3:357546:357557	8679086	1	True				
ANR	8679136	PrimaryExpression	0xff		8679086	0					
ANR	8679137	ReturnType	static png_uint_32		8679086	1					
ANR	8679138	Identifier	png_col_from_pass_col		8679086	2					
ANR	8679139	ParameterList	"png_uint_32 xIn , int pass"		8679086	3					
ANR	8679140	Parameter	png_uint_32 xIn	11289:22:357256:357270	8679086	0	True				
ANR	8679141	ParameterType	png_uint_32		8679086	0					
ANR	8679142	Identifier	xIn		8679086	1					
ANR	8679143	Parameter	int pass	11289:39:357273:357280	8679086	1	True				
ANR	8679144	ParameterType	int		8679086	0					
ANR	8679145	Identifier	pass		8679086	1					
ANR	8679146	CFGEntryNode	ENTRY		8679086		True				
ANR	8679147	CFGExitNode	EXIT		8679086		True				
ANR	8679148	Symbol	pass		8679086						
ANR	8679149	Symbol	xIn		8679086						
ANR	8679150	Function	png_row_in_interlace_pass	11307:0:357584:357794							
ANR	8679151	FunctionDef	"png_row_in_interlace_pass (png_uint_32 y , int pass)"		8679150	0					
ANR	8679152	CompoundStatement		11309:0:357646:357794	8679150	0					
ANR	8679153	IdentifierDeclStatement	int x ;	11311:3:357687:357692	8679150	0	True				
ANR	8679154	IdentifierDecl	x		8679150	0					
ANR	8679155	IdentifierDeclType	int		8679150	0					
ANR	8679156	Identifier	x		8679150	1					
ANR	8679157	ExpressionStatement	y &= 7	11312:3:357697:357703	8679150	1	True				
ANR	8679158	AssignmentExpression	y &= 7		8679150	0		&=			
ANR	8679159	Identifier	y		8679150	0					
ANR	8679160	PrimaryExpression	7		8679150	1					
ANR	8679161	ExpressionStatement	++ pass	11313:3:357708:357714	8679150	2	True				
ANR	8679162	UnaryExpression	++ pass		8679150	0					
ANR	8679163	IncDec	++		8679150	0					
ANR	8679164	Identifier	pass		8679150	1					
ANR	8679165	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8679150	3					
ANR	8679166	ForInit	x = 0 ;	11314:8:357724:357727	8679150	0	True				
ANR	8679167	AssignmentExpression	x = 0		8679150	0		=			
ANR	8679168	Identifier	x		8679150	0					
ANR	8679169	PrimaryExpression	0		8679150	1					
ANR	8679170	Condition	x < 8	11314:13:357729:357731	8679150	1	True				
ANR	8679171	RelationalExpression	x < 8		8679150	0		<			
ANR	8679172	Identifier	x		8679150	0					
ANR	8679173	PrimaryExpression	8		8679150	1					
ANR	8679174	UnaryExpression	++ x	11314:18:357734:357736	8679150	2	True				
ANR	8679175	IncDec	++		8679150	0					
ANR	8679176	Identifier	x		8679150	1					
ANR	8679177	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8679150	3					
ANR	8679178	Condition	adam7 [ y ] [ x ] == pass	11314:27:357743:357761	8679150	0	True				
ANR	8679179	EqualityExpression	adam7 [ y ] [ x ] == pass		8679150	0		==			
ANR	8679180	ArrayIndexing	adam7 [ y ] [ x ]		8679150	0					
ANR	8679181	ArrayIndexing	adam7 [ y ]		8679150	0					
ANR	8679182	Identifier	adam7		8679150	0					
ANR	8679183	Identifier	y		8679150	1					
ANR	8679184	Identifier	x		8679150	1					
ANR	8679185	Identifier	pass		8679150	1					
ANR	8679186	ReturnStatement	return 1 ;	11315:6:357770:357778	8679150	1	True				
ANR	8679187	PrimaryExpression	1		8679150	0					
ANR	8679188	ReturnStatement	return 0 ;	11317:3:357784:357792	8679150	4	True				
ANR	8679189	PrimaryExpression	0		8679150	0					
ANR	8679190	ReturnType	static int		8679150	1					
ANR	8679191	Identifier	png_row_in_interlace_pass		8679150	2					
ANR	8679192	ParameterList	"png_uint_32 y , int pass"		8679150	3					
ANR	8679193	Parameter	png_uint_32 y	11308:26:357621:357633	8679150	0	True				
ANR	8679194	ParameterType	png_uint_32		8679150	0					
ANR	8679195	Identifier	y		8679150	1					
ANR	8679196	Parameter	int pass	11308:41:357636:357643	8679150	1	True				
ANR	8679197	ParameterType	int		8679150	0					
ANR	8679198	Identifier	pass		8679150	1					
ANR	8679199	CFGEntryNode	ENTRY		8679150		True				
ANR	8679200	CFGExitNode	EXIT		8679150		True				
ANR	8679201	Symbol	* * y		8679150						
ANR	8679202	Symbol	* x		8679150						
ANR	8679203	Symbol	* y		8679150						
ANR	8679204	Symbol	* adam7		8679150						
ANR	8679205	Symbol	pass		8679150						
ANR	8679206	Symbol	x		8679150						
ANR	8679207	Symbol	y		8679150						
ANR	8679208	Symbol	* * adam7		8679150						
ANR	8679209	Symbol	adam7		8679150						
ANR	8679210	Function	png_col_in_interlace_pass	11320:0:357797:358010							
ANR	8679211	FunctionDef	"png_col_in_interlace_pass (png_uint_32 x , int pass)"		8679210	0					
ANR	8679212	CompoundStatement		11322:0:357859:358010	8679210	0					
ANR	8679213	IdentifierDeclStatement	int y ;	11324:3:357903:357908	8679210	0	True				
ANR	8679214	IdentifierDecl	y		8679210	0					
ANR	8679215	IdentifierDeclType	int		8679210	0					
ANR	8679216	Identifier	y		8679210	1					
ANR	8679217	ExpressionStatement	x &= 7	11325:3:357913:357919	8679210	1	True				
ANR	8679218	AssignmentExpression	x &= 7		8679210	0		&=			
ANR	8679219	Identifier	x		8679210	0					
ANR	8679220	PrimaryExpression	7		8679210	1					
ANR	8679221	ExpressionStatement	++ pass	11326:3:357924:357930	8679210	2	True				
ANR	8679222	UnaryExpression	++ pass		8679210	0					
ANR	8679223	IncDec	++		8679210	0					
ANR	8679224	Identifier	pass		8679210	1					
ANR	8679225	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8679210	3					
ANR	8679226	ForInit	y = 0 ;	11327:8:357940:357943	8679210	0	True				
ANR	8679227	AssignmentExpression	y = 0		8679210	0		=			
ANR	8679228	Identifier	y		8679210	0					
ANR	8679229	PrimaryExpression	0		8679210	1					
ANR	8679230	Condition	y < 8	11327:13:357945:357947	8679210	1	True				
ANR	8679231	RelationalExpression	y < 8		8679210	0		<			
ANR	8679232	Identifier	y		8679210	0					
ANR	8679233	PrimaryExpression	8		8679210	1					
ANR	8679234	UnaryExpression	++ y	11327:18:357950:357952	8679210	2	True				
ANR	8679235	IncDec	++		8679210	0					
ANR	8679236	Identifier	y		8679210	1					
ANR	8679237	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8679210	3					
ANR	8679238	Condition	adam7 [ y ] [ x ] == pass	11327:27:357959:357977	8679210	0	True				
ANR	8679239	EqualityExpression	adam7 [ y ] [ x ] == pass		8679210	0		==			
ANR	8679240	ArrayIndexing	adam7 [ y ] [ x ]		8679210	0					
ANR	8679241	ArrayIndexing	adam7 [ y ]		8679210	0					
ANR	8679242	Identifier	adam7		8679210	0					
ANR	8679243	Identifier	y		8679210	1					
ANR	8679244	Identifier	x		8679210	1					
ANR	8679245	Identifier	pass		8679210	1					
ANR	8679246	ReturnStatement	return 1 ;	11328:6:357986:357994	8679210	1	True				
ANR	8679247	PrimaryExpression	1		8679210	0					
ANR	8679248	ReturnStatement	return 0 ;	11330:3:358000:358008	8679210	4	True				
ANR	8679249	PrimaryExpression	0		8679210	0					
ANR	8679250	ReturnType	static int		8679210	1					
ANR	8679251	Identifier	png_col_in_interlace_pass		8679210	2					
ANR	8679252	ParameterList	"png_uint_32 x , int pass"		8679210	3					
ANR	8679253	Parameter	png_uint_32 x	11321:26:357834:357846	8679210	0	True				
ANR	8679254	ParameterType	png_uint_32		8679210	0					
ANR	8679255	Identifier	x		8679210	1					
ANR	8679256	Parameter	int pass	11321:41:357849:357856	8679210	1	True				
ANR	8679257	ParameterType	int		8679210	0					
ANR	8679258	Identifier	pass		8679210	1					
ANR	8679259	CFGEntryNode	ENTRY		8679210		True				
ANR	8679260	CFGExitNode	EXIT		8679210		True				
ANR	8679261	Symbol	* x		8679210						
ANR	8679262	Symbol	* * y		8679210						
ANR	8679263	Symbol	* y		8679210						
ANR	8679264	Symbol	* adam7		8679210						
ANR	8679265	Symbol	pass		8679210						
ANR	8679266	Symbol	x		8679210						
ANR	8679267	Symbol	y		8679210						
ANR	8679268	Symbol	* * adam7		8679210						
ANR	8679269	Symbol	adam7		8679210						
ANR	8679270	Function	png_pass_rows	11333:0:358013:358386							
ANR	8679271	FunctionDef	"png_pass_rows (png_uint_32 height , int pass)"		8679270	0					
ANR	8679272	CompoundStatement		11335:0:358076:358386	8679270	0					
ANR	8679273	IdentifierDeclStatement	png_uint_32 tiles = height >> 3 ;	11336:3:358081:358110	8679270	0	True				
ANR	8679274	IdentifierDecl	tiles = height >> 3		8679270	0					
ANR	8679275	IdentifierDeclType	png_uint_32		8679270	0					
ANR	8679276	Identifier	tiles		8679270	1					
ANR	8679277	AssignmentExpression	tiles = height >> 3		8679270	2		=			
ANR	8679278	Identifier	tiles		8679270	0					
ANR	8679279	ShiftExpression	height >> 3		8679270	1		>>			
ANR	8679280	Identifier	height		8679270	0					
ANR	8679281	PrimaryExpression	3		8679270	1					
ANR	8679282	IdentifierDeclStatement	png_uint_32 rows = 0 ;	11337:3:358115:358135	8679270	1	True				
ANR	8679283	IdentifierDecl	rows = 0		8679270	0					
ANR	8679284	IdentifierDeclType	png_uint_32		8679270	0					
ANR	8679285	Identifier	rows		8679270	1					
ANR	8679286	AssignmentExpression	rows = 0		8679270	2		=			
ANR	8679287	Identifier	rows		8679270	0					
ANR	8679288	PrimaryExpression	0		8679270	1					
ANR	8679289	IdentifierDeclStatement	"unsigned int x , y ;"	11338:3:358140:358157	8679270	2	True				
ANR	8679290	IdentifierDecl	x		8679270	0					
ANR	8679291	IdentifierDeclType	unsigned int		8679270	0					
ANR	8679292	Identifier	x		8679270	1					
ANR	8679293	IdentifierDecl	y		8679270	1					
ANR	8679294	IdentifierDeclType	unsigned int		8679270	0					
ANR	8679295	Identifier	y		8679270	1					
ANR	8679296	ExpressionStatement	height &= 7	11340:3:358163:358174	8679270	3	True				
ANR	8679297	AssignmentExpression	height &= 7		8679270	0		&=			
ANR	8679298	Identifier	height		8679270	0					
ANR	8679299	PrimaryExpression	7		8679270	1					
ANR	8679300	ExpressionStatement	++ pass	11341:3:358179:358185	8679270	4	True				
ANR	8679301	UnaryExpression	++ pass		8679270	0					
ANR	8679302	IncDec	++		8679270	0					
ANR	8679303	Identifier	pass		8679270	1					
ANR	8679304	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8679270	5					
ANR	8679305	ForInit	y = 0 ;	11342:8:358195:358198	8679270	0	True				
ANR	8679306	AssignmentExpression	y = 0		8679270	0		=			
ANR	8679307	Identifier	y		8679270	0					
ANR	8679308	PrimaryExpression	0		8679270	1					
ANR	8679309	Condition	y < 8	11342:13:358200:358202	8679270	1	True				
ANR	8679310	RelationalExpression	y < 8		8679270	0		<			
ANR	8679311	Identifier	y		8679270	0					
ANR	8679312	PrimaryExpression	8		8679270	1					
ANR	8679313	UnaryExpression	++ y	11342:18:358205:358207	8679270	2	True				
ANR	8679314	IncDec	++		8679270	0					
ANR	8679315	Identifier	y		8679270	1					
ANR	8679316	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8679270	3					
ANR	8679317	ForInit	x = 0 ;	11342:28:358215:358218	8679270	0	True				
ANR	8679318	AssignmentExpression	x = 0		8679270	0		=			
ANR	8679319	Identifier	x		8679270	0					
ANR	8679320	PrimaryExpression	0		8679270	1					
ANR	8679321	Condition	x < 8	11342:33:358220:358222	8679270	1	True				
ANR	8679322	RelationalExpression	x < 8		8679270	0		<			
ANR	8679323	Identifier	x		8679270	0					
ANR	8679324	PrimaryExpression	8		8679270	1					
ANR	8679325	UnaryExpression	++ x	11342:38:358225:358227	8679270	2	True				
ANR	8679326	IncDec	++		8679270	0					
ANR	8679327	Identifier	x		8679270	1					
ANR	8679328	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8679270	3					
ANR	8679329	Condition	adam7 [ y ] [ x ] == pass	11342:47:358234:358252	8679270	0	True				
ANR	8679330	EqualityExpression	adam7 [ y ] [ x ] == pass		8679270	0		==			
ANR	8679331	ArrayIndexing	adam7 [ y ] [ x ]		8679270	0					
ANR	8679332	ArrayIndexing	adam7 [ y ]		8679270	0					
ANR	8679333	Identifier	adam7		8679270	0					
ANR	8679334	Identifier	y		8679270	1					
ANR	8679335	Identifier	x		8679270	1					
ANR	8679336	Identifier	pass		8679270	1					
ANR	8679337	CompoundStatement		9:3:181:181	8679270	1					
ANR	8679338	ExpressionStatement	rows += tiles	11344:6:358266:358279	8679270	0	True				
ANR	8679339	AssignmentExpression	rows += tiles		8679270	0		+=			
ANR	8679340	Identifier	rows		8679270	0					
ANR	8679341	Identifier	tiles		8679270	1					
ANR	8679342	IfStatement	if ( y < height )		8679270	1					
ANR	8679343	Condition	y < height	11345:10:358291:358300	8679270	0	True				
ANR	8679344	RelationalExpression	y < height		8679270	0		<			
ANR	8679345	Identifier	y		8679270	0					
ANR	8679346	Identifier	height		8679270	1					
ANR	8679347	ExpressionStatement	++ rows	11345:22:358303:358309	8679270	1	True				
ANR	8679348	UnaryExpression	++ rows		8679270	0					
ANR	8679349	IncDec	++		8679270	0					
ANR	8679350	Identifier	rows		8679270	1					
ANR	8679351	BreakStatement	break ;	11346:6:358317:358322	8679270	2	True				
ANR	8679352	ReturnStatement	return rows ;	11349:3:358373:358384	8679270	6	True				
ANR	8679353	Identifier	rows		8679270	0					
ANR	8679354	ReturnType	static png_uint_32		8679270	1					
ANR	8679355	Identifier	png_pass_rows		8679270	2					
ANR	8679356	ParameterList	"png_uint_32 height , int pass"		8679270	3					
ANR	8679357	Parameter	png_uint_32 height	11334:14:358046:358063	8679270	0	True				
ANR	8679358	ParameterType	png_uint_32		8679270	0					
ANR	8679359	Identifier	height		8679270	1					
ANR	8679360	Parameter	int pass	11334:34:358066:358073	8679270	1	True				
ANR	8679361	ParameterType	int		8679270	0					
ANR	8679362	Identifier	pass		8679270	1					
ANR	8679363	CFGEntryNode	ENTRY		8679270		True				
ANR	8679364	CFGExitNode	EXIT		8679270		True				
ANR	8679365	Symbol	tiles		8679270						
ANR	8679366	Symbol	* * y		8679270						
ANR	8679367	Symbol	* x		8679270						
ANR	8679368	Symbol	* y		8679270						
ANR	8679369	Symbol	* adam7		8679270						
ANR	8679370	Symbol	pass		8679270						
ANR	8679371	Symbol	x		8679270						
ANR	8679372	Symbol	y		8679270						
ANR	8679373	Symbol	* * adam7		8679270						
ANR	8679374	Symbol	rows		8679270						
ANR	8679375	Symbol	adam7		8679270						
ANR	8679376	Symbol	height		8679270						
ANR	8679377	Function	png_pass_cols	11352:0:358389:358755							
ANR	8679378	FunctionDef	"png_pass_cols (png_uint_32 width , int pass)"		8679377	0					
ANR	8679379	CompoundStatement		11354:0:358451:358755	8679377	0					
ANR	8679380	IdentifierDeclStatement	png_uint_32 tiles = width >> 3 ;	11355:3:358456:358484	8679377	0	True				
ANR	8679381	IdentifierDecl	tiles = width >> 3		8679377	0					
ANR	8679382	IdentifierDeclType	png_uint_32		8679377	0					
ANR	8679383	Identifier	tiles		8679377	1					
ANR	8679384	AssignmentExpression	tiles = width >> 3		8679377	2		=			
ANR	8679385	Identifier	tiles		8679377	0					
ANR	8679386	ShiftExpression	width >> 3		8679377	1		>>			
ANR	8679387	Identifier	width		8679377	0					
ANR	8679388	PrimaryExpression	3		8679377	1					
ANR	8679389	IdentifierDeclStatement	png_uint_32 cols = 0 ;	11356:3:358489:358509	8679377	1	True				
ANR	8679390	IdentifierDecl	cols = 0		8679377	0					
ANR	8679391	IdentifierDeclType	png_uint_32		8679377	0					
ANR	8679392	Identifier	cols		8679377	1					
ANR	8679393	AssignmentExpression	cols = 0		8679377	2		=			
ANR	8679394	Identifier	cols		8679377	0					
ANR	8679395	PrimaryExpression	0		8679377	1					
ANR	8679396	IdentifierDeclStatement	"unsigned int x , y ;"	11357:3:358514:358531	8679377	2	True				
ANR	8679397	IdentifierDecl	x		8679377	0					
ANR	8679398	IdentifierDeclType	unsigned int		8679377	0					
ANR	8679399	Identifier	x		8679377	1					
ANR	8679400	IdentifierDecl	y		8679377	1					
ANR	8679401	IdentifierDeclType	unsigned int		8679377	0					
ANR	8679402	Identifier	y		8679377	1					
ANR	8679403	ExpressionStatement	width &= 7	11359:3:358537:358547	8679377	3	True				
ANR	8679404	AssignmentExpression	width &= 7		8679377	0		&=			
ANR	8679405	Identifier	width		8679377	0					
ANR	8679406	PrimaryExpression	7		8679377	1					
ANR	8679407	ExpressionStatement	++ pass	11360:3:358552:358558	8679377	4	True				
ANR	8679408	UnaryExpression	++ pass		8679377	0					
ANR	8679409	IncDec	++		8679377	0					
ANR	8679410	Identifier	pass		8679377	1					
ANR	8679411	ForStatement	for ( x = 0 ; x < 8 ; ++ x )		8679377	5					
ANR	8679412	ForInit	x = 0 ;	11361:8:358568:358571	8679377	0	True				
ANR	8679413	AssignmentExpression	x = 0		8679377	0		=			
ANR	8679414	Identifier	x		8679377	0					
ANR	8679415	PrimaryExpression	0		8679377	1					
ANR	8679416	Condition	x < 8	11361:13:358573:358575	8679377	1	True				
ANR	8679417	RelationalExpression	x < 8		8679377	0		<			
ANR	8679418	Identifier	x		8679377	0					
ANR	8679419	PrimaryExpression	8		8679377	1					
ANR	8679420	UnaryExpression	++ x	11361:18:358578:358580	8679377	2	True				
ANR	8679421	IncDec	++		8679377	0					
ANR	8679422	Identifier	x		8679377	1					
ANR	8679423	ForStatement	for ( y = 0 ; y < 8 ; ++ y )		8679377	3					
ANR	8679424	ForInit	y = 0 ;	11361:28:358588:358591	8679377	0	True				
ANR	8679425	AssignmentExpression	y = 0		8679377	0		=			
ANR	8679426	Identifier	y		8679377	0					
ANR	8679427	PrimaryExpression	0		8679377	1					
ANR	8679428	Condition	y < 8	11361:33:358593:358595	8679377	1	True				
ANR	8679429	RelationalExpression	y < 8		8679377	0		<			
ANR	8679430	Identifier	y		8679377	0					
ANR	8679431	PrimaryExpression	8		8679377	1					
ANR	8679432	UnaryExpression	++ y	11361:38:358598:358600	8679377	2	True				
ANR	8679433	IncDec	++		8679377	0					
ANR	8679434	Identifier	y		8679377	1					
ANR	8679435	IfStatement	if ( adam7 [ y ] [ x ] == pass )		8679377	3					
ANR	8679436	Condition	adam7 [ y ] [ x ] == pass	11361:47:358607:358625	8679377	0	True				
ANR	8679437	EqualityExpression	adam7 [ y ] [ x ] == pass		8679377	0		==			
ANR	8679438	ArrayIndexing	adam7 [ y ] [ x ]		8679377	0					
ANR	8679439	ArrayIndexing	adam7 [ y ]		8679377	0					
ANR	8679440	Identifier	adam7		8679377	0					
ANR	8679441	Identifier	y		8679377	1					
ANR	8679442	Identifier	x		8679377	1					
ANR	8679443	Identifier	pass		8679377	1					
ANR	8679444	CompoundStatement		9:3:179:179	8679377	1					
ANR	8679445	ExpressionStatement	cols += tiles	11363:6:358639:358652	8679377	0	True				
ANR	8679446	AssignmentExpression	cols += tiles		8679377	0		+=			
ANR	8679447	Identifier	cols		8679377	0					
ANR	8679448	Identifier	tiles		8679377	1					
ANR	8679449	IfStatement	if ( x < width )		8679377	1					
ANR	8679450	Condition	x < width	11364:10:358664:358672	8679377	0	True				
ANR	8679451	RelationalExpression	x < width		8679377	0		<			
ANR	8679452	Identifier	x		8679377	0					
ANR	8679453	Identifier	width		8679377	1					
ANR	8679454	ExpressionStatement	++ cols	11364:21:358675:358681	8679377	1	True				
ANR	8679455	UnaryExpression	++ cols		8679377	0					
ANR	8679456	IncDec	++		8679377	0					
ANR	8679457	Identifier	cols		8679377	1					
ANR	8679458	BreakStatement	break ;	11365:6:358689:358694	8679377	2	True				
ANR	8679459	ReturnStatement	return cols ;	11368:3:358742:358753	8679377	6	True				
ANR	8679460	Identifier	cols		8679377	0					
ANR	8679461	ReturnType	static png_uint_32		8679377	1					
ANR	8679462	Identifier	png_pass_cols		8679377	2					
ANR	8679463	ParameterList	"png_uint_32 width , int pass"		8679377	3					
ANR	8679464	Parameter	png_uint_32 width	11353:14:358422:358438	8679377	0	True				
ANR	8679465	ParameterType	png_uint_32		8679377	0					
ANR	8679466	Identifier	width		8679377	1					
ANR	8679467	Parameter	int pass	11353:33:358441:358448	8679377	1	True				
ANR	8679468	ParameterType	int		8679377	0					
ANR	8679469	Identifier	pass		8679377	1					
ANR	8679470	CFGEntryNode	ENTRY		8679377		True				
ANR	8679471	CFGExitNode	EXIT		8679377		True				
ANR	8679472	Symbol	tiles		8679377						
ANR	8679473	Symbol	* * y		8679377						
ANR	8679474	Symbol	* x		8679377						
ANR	8679475	Symbol	* y		8679377						
ANR	8679476	Symbol	* adam7		8679377						
ANR	8679477	Symbol	pass		8679377						
ANR	8679478	Symbol	width		8679377						
ANR	8679479	Symbol	x		8679377						
ANR	8679480	Symbol	y		8679377						
ANR	8679481	Symbol	* * adam7		8679377						
ANR	8679482	Symbol	cols		8679377						
ANR	8679483	Symbol	adam7		8679377						
ANR	8679484	Function	perform_interlace_macro_validation	11371:0:358758:362874							
ANR	8679485	FunctionDef	perform_interlace_macro_validation ()		8679484	0					
ANR	8679486	CompoundStatement		11373:0:358811:362874	8679484	0					
ANR	8679487	IdentifierDeclStatement	int pass ;	11381:3:359021:359029	8679484	0	True				
ANR	8679488	IdentifierDecl	pass		8679484	0					
ANR	8679489	IdentifierDeclType	int		8679484	0					
ANR	8679490	Identifier	pass		8679484	1					
ANR	8679491	ForStatement	for ( pass = 0 ; pass < 7 ; ++ pass )		8679484	1					
ANR	8679492	ForInit	pass = 0 ;	11383:8:359040:359046	8679484	0	True				
ANR	8679493	AssignmentExpression	pass = 0		8679484	0		=			
ANR	8679494	Identifier	pass		8679484	0					
ANR	8679495	PrimaryExpression	0		8679484	1					
ANR	8679496	Condition	pass < 7	11383:16:359048:359053	8679484	1	True				
ANR	8679497	RelationalExpression	pass < 7		8679484	0		<			
ANR	8679498	Identifier	pass		8679484	0					
ANR	8679499	PrimaryExpression	7		8679484	1					
ANR	8679500	UnaryExpression	++ pass	11383:24:359056:359061	8679484	2	True				
ANR	8679501	IncDec	++		8679484	0					
ANR	8679502	Identifier	pass		8679484	1					
ANR	8679503	CompoundStatement		13:6:263:282	8679484	3					
ANR	8679504	IdentifierDeclStatement	"png_uint_32 m , f , v ;"	11385:6:359075:359094	8679484	0	True				
ANR	8679505	IdentifierDecl	m		8679484	0					
ANR	8679506	IdentifierDeclType	png_uint_32		8679484	0					
ANR	8679507	Identifier	m		8679484	1					
ANR	8679508	IdentifierDecl	f		8679484	1					
ANR	8679509	IdentifierDeclType	png_uint_32		8679484	0					
ANR	8679510	Identifier	f		8679484	1					
ANR	8679511	IdentifierDecl	v		8679484	2					
ANR	8679512	IdentifierDeclType	png_uint_32		8679484	0					
ANR	8679513	Identifier	v		8679484	1					
ANR	8679514	ExpressionStatement	m = PNG_PASS_START_ROW ( pass )	11387:6:359103:359131	8679484	1	True				
ANR	8679515	AssignmentExpression	m = PNG_PASS_START_ROW ( pass )		8679484	0		=			
ANR	8679516	Identifier	m		8679484	0					
ANR	8679517	CallExpression	PNG_PASS_START_ROW ( pass )		8679484	1					
ANR	8679518	Callee	PNG_PASS_START_ROW		8679484	0					
ANR	8679519	Identifier	PNG_PASS_START_ROW		8679484	0					
ANR	8679520	ArgumentList	pass		8679484	1					
ANR	8679521	Argument	pass		8679484	0					
ANR	8679522	Identifier	pass		8679484	0					
ANR	8679523	ExpressionStatement	f = png_pass_start_row ( pass )	11388:6:359139:359167	8679484	2	True				
ANR	8679524	AssignmentExpression	f = png_pass_start_row ( pass )		8679484	0		=			
ANR	8679525	Identifier	f		8679484	0					
ANR	8679526	CallExpression	png_pass_start_row ( pass )		8679484	1					
ANR	8679527	Callee	png_pass_start_row		8679484	0					
ANR	8679528	Identifier	png_pass_start_row		8679484	0					
ANR	8679529	ArgumentList	pass		8679484	1					
ANR	8679530	Argument	pass		8679484	0					
ANR	8679531	Identifier	pass		8679484	0					
ANR	8679532	IfStatement	if ( m != f )		8679484	3					
ANR	8679533	Condition	m != f	11389:10:359179:359184	8679484	0	True				
ANR	8679534	EqualityExpression	m != f		8679484	0		!=			
ANR	8679535	Identifier	m		8679484	0					
ANR	8679536	Identifier	f		8679484	1					
ANR	8679537	CompoundStatement		18:6:381:381	8679484	1					
ANR	8679538	ExpressionStatement	"fprintf ( stderr , ""PNG_PASS_START_ROW(%d) = %u != %x\\n"" , pass , m , f )"	11391:9:359204:359270	8679484	0	True				
ANR	8679539	CallExpression	"fprintf ( stderr , ""PNG_PASS_START_ROW(%d) = %u != %x\\n"" , pass , m , f )"		8679484	0					
ANR	8679540	Callee	fprintf		8679484	0					
ANR	8679541	Identifier	fprintf		8679484	0					
ANR	8679542	ArgumentList	stderr		8679484	1					
ANR	8679543	Argument	stderr		8679484	0					
ANR	8679544	Identifier	stderr		8679484	0					
ANR	8679545	Argument	"""PNG_PASS_START_ROW(%d) = %u != %x\\n"""		8679484	1					
ANR	8679546	PrimaryExpression	"""PNG_PASS_START_ROW(%d) = %u != %x\\n"""		8679484	0					
ANR	8679547	Argument	pass		8679484	2					
ANR	8679548	Identifier	pass		8679484	0					
ANR	8679549	Argument	m		8679484	3					
ANR	8679550	Identifier	m		8679484	0					
ANR	8679551	Argument	f		8679484	4					
ANR	8679552	Identifier	f		8679484	0					
ANR	8679553	ExpressionStatement	exit ( 99 )	11392:9:359281:359289	8679484	1	True				
ANR	8679554	CallExpression	exit ( 99 )		8679484	0					
ANR	8679555	Callee	exit		8679484	0					
ANR	8679556	Identifier	exit		8679484	0					
ANR	8679557	ArgumentList	99		8679484	1					
ANR	8679558	Argument	99		8679484	0					
ANR	8679559	PrimaryExpression	99		8679484	0					
ANR	8679560	ExpressionStatement	m = PNG_PASS_START_COL ( pass )	11395:6:359306:359334	8679484	4	True				
ANR	8679561	AssignmentExpression	m = PNG_PASS_START_COL ( pass )		8679484	0		=			
ANR	8679562	Identifier	m		8679484	0					
ANR	8679563	CallExpression	PNG_PASS_START_COL ( pass )		8679484	1					
ANR	8679564	Callee	PNG_PASS_START_COL		8679484	0					
ANR	8679565	Identifier	PNG_PASS_START_COL		8679484	0					
ANR	8679566	ArgumentList	pass		8679484	1					
ANR	8679567	Argument	pass		8679484	0					
ANR	8679568	Identifier	pass		8679484	0					
ANR	8679569	ExpressionStatement	f = png_pass_start_col ( pass )	11396:6:359342:359370	8679484	5	True				
ANR	8679570	AssignmentExpression	f = png_pass_start_col ( pass )		8679484	0		=			
ANR	8679571	Identifier	f		8679484	0					
ANR	8679572	CallExpression	png_pass_start_col ( pass )		8679484	1					
ANR	8679573	Callee	png_pass_start_col		8679484	0					
ANR	8679574	Identifier	png_pass_start_col		8679484	0					
ANR	8679575	ArgumentList	pass		8679484	1					
ANR	8679576	Argument	pass		8679484	0					
ANR	8679577	Identifier	pass		8679484	0					
ANR	8679578	IfStatement	if ( m != f )		8679484	6					
ANR	8679579	Condition	m != f	11397:10:359382:359387	8679484	0	True				
ANR	8679580	EqualityExpression	m != f		8679484	0		!=			
ANR	8679581	Identifier	m		8679484	0					
ANR	8679582	Identifier	f		8679484	1					
ANR	8679583	CompoundStatement		26:6:584:584	8679484	1					
ANR	8679584	ExpressionStatement	"fprintf ( stderr , ""PNG_PASS_START_COL(%d) = %u != %x\\n"" , pass , m , f )"	11399:9:359407:359473	8679484	0	True				
ANR	8679585	CallExpression	"fprintf ( stderr , ""PNG_PASS_START_COL(%d) = %u != %x\\n"" , pass , m , f )"		8679484	0					
ANR	8679586	Callee	fprintf		8679484	0					
ANR	8679587	Identifier	fprintf		8679484	0					
ANR	8679588	ArgumentList	stderr		8679484	1					
ANR	8679589	Argument	stderr		8679484	0					
ANR	8679590	Identifier	stderr		8679484	0					
ANR	8679591	Argument	"""PNG_PASS_START_COL(%d) = %u != %x\\n"""		8679484	1					
ANR	8679592	PrimaryExpression	"""PNG_PASS_START_COL(%d) = %u != %x\\n"""		8679484	0					
ANR	8679593	Argument	pass		8679484	2					
ANR	8679594	Identifier	pass		8679484	0					
ANR	8679595	Argument	m		8679484	3					
ANR	8679596	Identifier	m		8679484	0					
ANR	8679597	Argument	f		8679484	4					
ANR	8679598	Identifier	f		8679484	0					
ANR	8679599	ExpressionStatement	exit ( 99 )	11400:9:359484:359492	8679484	1	True				
ANR	8679600	CallExpression	exit ( 99 )		8679484	0					
ANR	8679601	Callee	exit		8679484	0					
ANR	8679602	Identifier	exit		8679484	0					
ANR	8679603	ArgumentList	99		8679484	1					
ANR	8679604	Argument	99		8679484	0					
ANR	8679605	PrimaryExpression	99		8679484	0					
ANR	8679606	ExpressionStatement	m = PNG_PASS_ROW_SHIFT ( pass )	11403:6:359509:359537	8679484	7	True				
ANR	8679607	AssignmentExpression	m = PNG_PASS_ROW_SHIFT ( pass )		8679484	0		=			
ANR	8679608	Identifier	m		8679484	0					
ANR	8679609	CallExpression	PNG_PASS_ROW_SHIFT ( pass )		8679484	1					
ANR	8679610	Callee	PNG_PASS_ROW_SHIFT		8679484	0					
ANR	8679611	Identifier	PNG_PASS_ROW_SHIFT		8679484	0					
ANR	8679612	ArgumentList	pass		8679484	1					
ANR	8679613	Argument	pass		8679484	0					
ANR	8679614	Identifier	pass		8679484	0					
ANR	8679615	ExpressionStatement	f = png_pass_row_shift ( pass )	11404:6:359545:359573	8679484	8	True				
ANR	8679616	AssignmentExpression	f = png_pass_row_shift ( pass )		8679484	0		=			
ANR	8679617	Identifier	f		8679484	0					
ANR	8679618	CallExpression	png_pass_row_shift ( pass )		8679484	1					
ANR	8679619	Callee	png_pass_row_shift		8679484	0					
ANR	8679620	Identifier	png_pass_row_shift		8679484	0					
ANR	8679621	ArgumentList	pass		8679484	1					
ANR	8679622	Argument	pass		8679484	0					
ANR	8679623	Identifier	pass		8679484	0					
ANR	8679624	IfStatement	if ( m != f )		8679484	9					
ANR	8679625	Condition	m != f	11405:10:359585:359590	8679484	0	True				
ANR	8679626	EqualityExpression	m != f		8679484	0		!=			
ANR	8679627	Identifier	m		8679484	0					
ANR	8679628	Identifier	f		8679484	1					
ANR	8679629	CompoundStatement		34:6:787:787	8679484	1					
ANR	8679630	ExpressionStatement	"fprintf ( stderr , ""PNG_PASS_ROW_SHIFT(%d) = %u != %x\\n"" , pass , m , f )"	11407:9:359610:359676	8679484	0	True				
ANR	8679631	CallExpression	"fprintf ( stderr , ""PNG_PASS_ROW_SHIFT(%d) = %u != %x\\n"" , pass , m , f )"		8679484	0					
ANR	8679632	Callee	fprintf		8679484	0					
ANR	8679633	Identifier	fprintf		8679484	0					
ANR	8679634	ArgumentList	stderr		8679484	1					
ANR	8679635	Argument	stderr		8679484	0					
ANR	8679636	Identifier	stderr		8679484	0					
ANR	8679637	Argument	"""PNG_PASS_ROW_SHIFT(%d) = %u != %x\\n"""		8679484	1					
ANR	8679638	PrimaryExpression	"""PNG_PASS_ROW_SHIFT(%d) = %u != %x\\n"""		8679484	0					
ANR	8679639	Argument	pass		8679484	2					
ANR	8679640	Identifier	pass		8679484	0					
ANR	8679641	Argument	m		8679484	3					
ANR	8679642	Identifier	m		8679484	0					
ANR	8679643	Argument	f		8679484	4					
ANR	8679644	Identifier	f		8679484	0					
ANR	8679645	ExpressionStatement	exit ( 99 )	11408:9:359687:359695	8679484	1	True				
ANR	8679646	CallExpression	exit ( 99 )		8679484	0					
ANR	8679647	Callee	exit		8679484	0					
ANR	8679648	Identifier	exit		8679484	0					
ANR	8679649	ArgumentList	99		8679484	1					
ANR	8679650	Argument	99		8679484	0					
ANR	8679651	PrimaryExpression	99		8679484	0					
ANR	8679652	ExpressionStatement	m = PNG_PASS_COL_SHIFT ( pass )	11411:6:359712:359740	8679484	10	True				
ANR	8679653	AssignmentExpression	m = PNG_PASS_COL_SHIFT ( pass )		8679484	0		=			
ANR	8679654	Identifier	m		8679484	0					
ANR	8679655	CallExpression	PNG_PASS_COL_SHIFT ( pass )		8679484	1					
ANR	8679656	Callee	PNG_PASS_COL_SHIFT		8679484	0					
ANR	8679657	Identifier	PNG_PASS_COL_SHIFT		8679484	0					
ANR	8679658	ArgumentList	pass		8679484	1					
ANR	8679659	Argument	pass		8679484	0					
ANR	8679660	Identifier	pass		8679484	0					
ANR	8679661	ExpressionStatement	f = png_pass_col_shift ( pass )	11412:6:359748:359776	8679484	11	True				
ANR	8679662	AssignmentExpression	f = png_pass_col_shift ( pass )		8679484	0		=			
ANR	8679663	Identifier	f		8679484	0					
ANR	8679664	CallExpression	png_pass_col_shift ( pass )		8679484	1					
ANR	8679665	Callee	png_pass_col_shift		8679484	0					
ANR	8679666	Identifier	png_pass_col_shift		8679484	0					
ANR	8679667	ArgumentList	pass		8679484	1					
ANR	8679668	Argument	pass		8679484	0					
ANR	8679669	Identifier	pass		8679484	0					
ANR	8679670	IfStatement	if ( m != f )		8679484	12					
ANR	8679671	Condition	m != f	11413:10:359788:359793	8679484	0	True				
ANR	8679672	EqualityExpression	m != f		8679484	0		!=			
ANR	8679673	Identifier	m		8679484	0					
ANR	8679674	Identifier	f		8679484	1					
ANR	8679675	CompoundStatement		42:6:990:990	8679484	1					
ANR	8679676	ExpressionStatement	"fprintf ( stderr , ""PNG_PASS_COL_SHIFT(%d) = %u != %x\\n"" , pass , m , f )"	11415:9:359813:359879	8679484	0	True				
ANR	8679677	CallExpression	"fprintf ( stderr , ""PNG_PASS_COL_SHIFT(%d) = %u != %x\\n"" , pass , m , f )"		8679484	0					
ANR	8679678	Callee	fprintf		8679484	0					
ANR	8679679	Identifier	fprintf		8679484	0					
ANR	8679680	ArgumentList	stderr		8679484	1					
ANR	8679681	Argument	stderr		8679484	0					
ANR	8679682	Identifier	stderr		8679484	0					
ANR	8679683	Argument	"""PNG_PASS_COL_SHIFT(%d) = %u != %x\\n"""		8679484	1					
ANR	8679684	PrimaryExpression	"""PNG_PASS_COL_SHIFT(%d) = %u != %x\\n"""		8679484	0					
ANR	8679685	Argument	pass		8679484	2					
ANR	8679686	Identifier	pass		8679484	0					
ANR	8679687	Argument	m		8679484	3					
ANR	8679688	Identifier	m		8679484	0					
ANR	8679689	Argument	f		8679484	4					
ANR	8679690	Identifier	f		8679484	0					
ANR	8679691	ExpressionStatement	exit ( 99 )	11416:9:359890:359898	8679484	1	True				
ANR	8679692	CallExpression	exit ( 99 )		8679484	0					
ANR	8679693	Callee	exit		8679484	0					
ANR	8679694	Identifier	exit		8679484	0					
ANR	8679695	ArgumentList	99		8679484	1					
ANR	8679696	Argument	99		8679484	0					
ANR	8679697	PrimaryExpression	99		8679484	0					
ANR	8679698	ForStatement	for ( v = 0 ; ; )		8679484	13					
ANR	8679699	ForInit	v = 0 ;	11428:11:360250:360253	8679484	0	True				
ANR	8679700	AssignmentExpression	v = 0		8679484	0		=			
ANR	8679701	Identifier	v		8679484	0					
ANR	8679702	PrimaryExpression	0		8679484	1					
ANR	8679703	CompoundStatement		57:6:1451:1451	8679484	1					
ANR	8679704	IfStatement	"if ( v < png_pass_rows ( 0xFFFFFFFFU , pass ) )"		8679484	0					
ANR	8679705	Condition	"v < png_pass_rows ( 0xFFFFFFFFU , pass )"	11438:13:360758:360793	8679484	0	True				
ANR	8679706	RelationalExpression	"v < png_pass_rows ( 0xFFFFFFFFU , pass )"		8679484	0		<			
ANR	8679707	Identifier	v		8679484	0					
ANR	8679708	CallExpression	"png_pass_rows ( 0xFFFFFFFFU , pass )"		8679484	1					
ANR	8679709	Callee	png_pass_rows		8679484	0					
ANR	8679710	Identifier	png_pass_rows		8679484	0					
ANR	8679711	ArgumentList	0xFFFFFFFFU		8679484	1					
ANR	8679712	Argument	0xFFFFFFFFU		8679484	0					
ANR	8679713	PrimaryExpression	0xFFFFFFFFU		8679484	0					
ANR	8679714	Argument	pass		8679484	1					
ANR	8679715	Identifier	pass		8679484	0					
ANR	8679716	CompoundStatement		67:9:1993:1993	8679484	1					
ANR	8679717	ExpressionStatement	"m = PNG_ROW_FROM_PASS_ROW ( v , pass )"	11440:12:360819:360853	8679484	0	True				
ANR	8679718	AssignmentExpression	"m = PNG_ROW_FROM_PASS_ROW ( v , pass )"		8679484	0		=			
ANR	8679719	Identifier	m		8679484	0					
ANR	8679720	CallExpression	"PNG_ROW_FROM_PASS_ROW ( v , pass )"		8679484	1					
ANR	8679721	Callee	PNG_ROW_FROM_PASS_ROW		8679484	0					
ANR	8679722	Identifier	PNG_ROW_FROM_PASS_ROW		8679484	0					
ANR	8679723	ArgumentList	v		8679484	1					
ANR	8679724	Argument	v		8679484	0					
ANR	8679725	Identifier	v		8679484	0					
ANR	8679726	Argument	pass		8679484	1					
ANR	8679727	Identifier	pass		8679484	0					
ANR	8679728	ExpressionStatement	"f = png_row_from_pass_row ( v , pass )"	11441:12:360867:360901	8679484	1	True				
ANR	8679729	AssignmentExpression	"f = png_row_from_pass_row ( v , pass )"		8679484	0		=			
ANR	8679730	Identifier	f		8679484	0					
ANR	8679731	CallExpression	"png_row_from_pass_row ( v , pass )"		8679484	1					
ANR	8679732	Callee	png_row_from_pass_row		8679484	0					
ANR	8679733	Identifier	png_row_from_pass_row		8679484	0					
ANR	8679734	ArgumentList	v		8679484	1					
ANR	8679735	Argument	v		8679484	0					
ANR	8679736	Identifier	v		8679484	0					
ANR	8679737	Argument	pass		8679484	1					
ANR	8679738	Identifier	pass		8679484	0					
ANR	8679739	IfStatement	if ( m != f )		8679484	2					
ANR	8679740	Condition	m != f	11442:16:360919:360924	8679484	0	True				
ANR	8679741	EqualityExpression	m != f		8679484	0		!=			
ANR	8679742	Identifier	m		8679484	0					
ANR	8679743	Identifier	f		8679484	1					
ANR	8679744	CompoundStatement		71:12:2127:2127	8679484	1					
ANR	8679745	ExpressionStatement	"fprintf ( stderr , ""PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\\n"" , v , pass , m , f )"	11444:15:360956:361050	8679484	0	True				
ANR	8679746	CallExpression	"fprintf ( stderr , ""PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\\n"" , v , pass , m , f )"		8679484	0					
ANR	8679747	Callee	fprintf		8679484	0					
ANR	8679748	Identifier	fprintf		8679484	0					
ANR	8679749	ArgumentList	stderr		8679484	1					
ANR	8679750	Argument	stderr		8679484	0					
ANR	8679751	Identifier	stderr		8679484	0					
ANR	8679752	Argument	"""PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\\n"""		8679484	1					
ANR	8679753	PrimaryExpression	"""PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\\n"""		8679484	0					
ANR	8679754	Argument	v		8679484	2					
ANR	8679755	Identifier	v		8679484	0					
ANR	8679756	Argument	pass		8679484	3					
ANR	8679757	Identifier	pass		8679484	0					
ANR	8679758	Argument	m		8679484	4					
ANR	8679759	Identifier	m		8679484	0					
ANR	8679760	Argument	f		8679484	5					
ANR	8679761	Identifier	f		8679484	0					
ANR	8679762	ExpressionStatement	exit ( 99 )	11446:15:361067:361075	8679484	1	True				
ANR	8679763	CallExpression	exit ( 99 )		8679484	0					
ANR	8679764	Callee	exit		8679484	0					
ANR	8679765	Identifier	exit		8679484	0					
ANR	8679766	ArgumentList	99		8679484	1					
ANR	8679767	Argument	99		8679484	0					
ANR	8679768	PrimaryExpression	99		8679484	0					
ANR	8679769	IfStatement	"if ( v < png_pass_cols ( 0xFFFFFFFFU , pass ) )"		8679484	1					
ANR	8679770	Condition	"v < png_pass_cols ( 0xFFFFFFFFU , pass )"	11450:13:361116:361151	8679484	0	True				
ANR	8679771	RelationalExpression	"v < png_pass_cols ( 0xFFFFFFFFU , pass )"		8679484	0		<			
ANR	8679772	Identifier	v		8679484	0					
ANR	8679773	CallExpression	"png_pass_cols ( 0xFFFFFFFFU , pass )"		8679484	1					
ANR	8679774	Callee	png_pass_cols		8679484	0					
ANR	8679775	Identifier	png_pass_cols		8679484	0					
ANR	8679776	ArgumentList	0xFFFFFFFFU		8679484	1					
ANR	8679777	Argument	0xFFFFFFFFU		8679484	0					
ANR	8679778	PrimaryExpression	0xFFFFFFFFU		8679484	0					
ANR	8679779	Argument	pass		8679484	1					
ANR	8679780	Identifier	pass		8679484	0					
ANR	8679781	CompoundStatement		79:9:2351:2351	8679484	1					
ANR	8679782	ExpressionStatement	"m = PNG_COL_FROM_PASS_COL ( v , pass )"	11452:12:361177:361211	8679484	0	True				
ANR	8679783	AssignmentExpression	"m = PNG_COL_FROM_PASS_COL ( v , pass )"		8679484	0		=			
ANR	8679784	Identifier	m		8679484	0					
ANR	8679785	CallExpression	"PNG_COL_FROM_PASS_COL ( v , pass )"		8679484	1					
ANR	8679786	Callee	PNG_COL_FROM_PASS_COL		8679484	0					
ANR	8679787	Identifier	PNG_COL_FROM_PASS_COL		8679484	0					
ANR	8679788	ArgumentList	v		8679484	1					
ANR	8679789	Argument	v		8679484	0					
ANR	8679790	Identifier	v		8679484	0					
ANR	8679791	Argument	pass		8679484	1					
ANR	8679792	Identifier	pass		8679484	0					
ANR	8679793	ExpressionStatement	"f = png_col_from_pass_col ( v , pass )"	11453:12:361225:361259	8679484	1	True				
ANR	8679794	AssignmentExpression	"f = png_col_from_pass_col ( v , pass )"		8679484	0		=			
ANR	8679795	Identifier	f		8679484	0					
ANR	8679796	CallExpression	"png_col_from_pass_col ( v , pass )"		8679484	1					
ANR	8679797	Callee	png_col_from_pass_col		8679484	0					
ANR	8679798	Identifier	png_col_from_pass_col		8679484	0					
ANR	8679799	ArgumentList	v		8679484	1					
ANR	8679800	Argument	v		8679484	0					
ANR	8679801	Identifier	v		8679484	0					
ANR	8679802	Argument	pass		8679484	1					
ANR	8679803	Identifier	pass		8679484	0					
ANR	8679804	IfStatement	if ( m != f )		8679484	2					
ANR	8679805	Condition	m != f	11454:16:361277:361282	8679484	0	True				
ANR	8679806	EqualityExpression	m != f		8679484	0		!=			
ANR	8679807	Identifier	m		8679484	0					
ANR	8679808	Identifier	f		8679484	1					
ANR	8679809	CompoundStatement		83:12:2485:2485	8679484	1					
ANR	8679810	ExpressionStatement	"fprintf ( stderr , ""PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\\n"" , v , pass , m , f )"	11456:15:361314:361408	8679484	0	True				
ANR	8679811	CallExpression	"fprintf ( stderr , ""PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\\n"" , v , pass , m , f )"		8679484	0					
ANR	8679812	Callee	fprintf		8679484	0					
ANR	8679813	Identifier	fprintf		8679484	0					
ANR	8679814	ArgumentList	stderr		8679484	1					
ANR	8679815	Argument	stderr		8679484	0					
ANR	8679816	Identifier	stderr		8679484	0					
ANR	8679817	Argument	"""PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\\n"""		8679484	1					
ANR	8679818	PrimaryExpression	"""PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\\n"""		8679484	0					
ANR	8679819	Argument	v		8679484	2					
ANR	8679820	Identifier	v		8679484	0					
ANR	8679821	Argument	pass		8679484	3					
ANR	8679822	Identifier	pass		8679484	0					
ANR	8679823	Argument	m		8679484	4					
ANR	8679824	Identifier	m		8679484	0					
ANR	8679825	Argument	f		8679484	5					
ANR	8679826	Identifier	f		8679484	0					
ANR	8679827	ExpressionStatement	exit ( 99 )	11458:15:361425:361433	8679484	1	True				
ANR	8679828	CallExpression	exit ( 99 )		8679484	0					
ANR	8679829	Callee	exit		8679484	0					
ANR	8679830	Identifier	exit		8679484	0					
ANR	8679831	ArgumentList	99		8679484	1					
ANR	8679832	Argument	99		8679484	0					
ANR	8679833	PrimaryExpression	99		8679484	0					
ANR	8679834	ExpressionStatement	"m = PNG_ROW_IN_INTERLACE_PASS ( v , pass )"	11462:9:361470:361508	8679484	2	True				
ANR	8679835	AssignmentExpression	"m = PNG_ROW_IN_INTERLACE_PASS ( v , pass )"		8679484	0		=			
ANR	8679836	Identifier	m		8679484	0					
ANR	8679837	CallExpression	"PNG_ROW_IN_INTERLACE_PASS ( v , pass )"		8679484	1					
ANR	8679838	Callee	PNG_ROW_IN_INTERLACE_PASS		8679484	0					
ANR	8679839	Identifier	PNG_ROW_IN_INTERLACE_PASS		8679484	0					
ANR	8679840	ArgumentList	v		8679484	1					
ANR	8679841	Argument	v		8679484	0					
ANR	8679842	Identifier	v		8679484	0					
ANR	8679843	Argument	pass		8679484	1					
ANR	8679844	Identifier	pass		8679484	0					
ANR	8679845	ExpressionStatement	"f = png_row_in_interlace_pass ( v , pass )"	11463:9:361519:361557	8679484	3	True				
ANR	8679846	AssignmentExpression	"f = png_row_in_interlace_pass ( v , pass )"		8679484	0		=			
ANR	8679847	Identifier	f		8679484	0					
ANR	8679848	CallExpression	"png_row_in_interlace_pass ( v , pass )"		8679484	1					
ANR	8679849	Callee	png_row_in_interlace_pass		8679484	0					
ANR	8679850	Identifier	png_row_in_interlace_pass		8679484	0					
ANR	8679851	ArgumentList	v		8679484	1					
ANR	8679852	Argument	v		8679484	0					
ANR	8679853	Identifier	v		8679484	0					
ANR	8679854	Argument	pass		8679484	1					
ANR	8679855	Identifier	pass		8679484	0					
ANR	8679856	IfStatement	if ( m != f )		8679484	4					
ANR	8679857	Condition	m != f	11464:13:361572:361577	8679484	0	True				
ANR	8679858	EqualityExpression	m != f		8679484	0		!=			
ANR	8679859	Identifier	m		8679484	0					
ANR	8679860	Identifier	f		8679484	1					
ANR	8679861	CompoundStatement		93:9:2777:2777	8679484	1					
ANR	8679862	ExpressionStatement	"fprintf ( stderr , ""PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"	11466:12:361603:361698	8679484	0	True				
ANR	8679863	CallExpression	"fprintf ( stderr , ""PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"		8679484	0					
ANR	8679864	Callee	fprintf		8679484	0					
ANR	8679865	Identifier	fprintf		8679484	0					
ANR	8679866	ArgumentList	stderr		8679484	1					
ANR	8679867	Argument	stderr		8679484	0					
ANR	8679868	Identifier	stderr		8679484	0					
ANR	8679869	Argument	"""PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"""		8679484	1					
ANR	8679870	PrimaryExpression	"""PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"""		8679484	0					
ANR	8679871	Argument	v		8679484	2					
ANR	8679872	Identifier	v		8679484	0					
ANR	8679873	Argument	pass		8679484	3					
ANR	8679874	Identifier	pass		8679484	0					
ANR	8679875	Argument	m		8679484	4					
ANR	8679876	Identifier	m		8679484	0					
ANR	8679877	Argument	f		8679484	5					
ANR	8679878	Identifier	f		8679484	0					
ANR	8679879	ExpressionStatement	exit ( 99 )	11468:12:361712:361720	8679484	1	True				
ANR	8679880	CallExpression	exit ( 99 )		8679484	0					
ANR	8679881	Callee	exit		8679484	0					
ANR	8679882	Identifier	exit		8679484	0					
ANR	8679883	ArgumentList	99		8679484	1					
ANR	8679884	Argument	99		8679484	0					
ANR	8679885	PrimaryExpression	99		8679484	0					
ANR	8679886	ExpressionStatement	"m = PNG_COL_IN_INTERLACE_PASS ( v , pass )"	11471:9:361743:361781	8679484	5	True				
ANR	8679887	AssignmentExpression	"m = PNG_COL_IN_INTERLACE_PASS ( v , pass )"		8679484	0		=			
ANR	8679888	Identifier	m		8679484	0					
ANR	8679889	CallExpression	"PNG_COL_IN_INTERLACE_PASS ( v , pass )"		8679484	1					
ANR	8679890	Callee	PNG_COL_IN_INTERLACE_PASS		8679484	0					
ANR	8679891	Identifier	PNG_COL_IN_INTERLACE_PASS		8679484	0					
ANR	8679892	ArgumentList	v		8679484	1					
ANR	8679893	Argument	v		8679484	0					
ANR	8679894	Identifier	v		8679484	0					
ANR	8679895	Argument	pass		8679484	1					
ANR	8679896	Identifier	pass		8679484	0					
ANR	8679897	ExpressionStatement	"f = png_col_in_interlace_pass ( v , pass )"	11472:9:361792:361830	8679484	6	True				
ANR	8679898	AssignmentExpression	"f = png_col_in_interlace_pass ( v , pass )"		8679484	0		=			
ANR	8679899	Identifier	f		8679484	0					
ANR	8679900	CallExpression	"png_col_in_interlace_pass ( v , pass )"		8679484	1					
ANR	8679901	Callee	png_col_in_interlace_pass		8679484	0					
ANR	8679902	Identifier	png_col_in_interlace_pass		8679484	0					
ANR	8679903	ArgumentList	v		8679484	1					
ANR	8679904	Argument	v		8679484	0					
ANR	8679905	Identifier	v		8679484	0					
ANR	8679906	Argument	pass		8679484	1					
ANR	8679907	Identifier	pass		8679484	0					
ANR	8679908	IfStatement	if ( m != f )		8679484	7					
ANR	8679909	Condition	m != f	11473:13:361845:361850	8679484	0	True				
ANR	8679910	EqualityExpression	m != f		8679484	0		!=			
ANR	8679911	Identifier	m		8679484	0					
ANR	8679912	Identifier	f		8679484	1					
ANR	8679913	CompoundStatement		102:9:3050:3050	8679484	1					
ANR	8679914	ExpressionStatement	"fprintf ( stderr , ""PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"	11475:12:361876:361971	8679484	0	True				
ANR	8679915	CallExpression	"fprintf ( stderr , ""PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"		8679484	0					
ANR	8679916	Callee	fprintf		8679484	0					
ANR	8679917	Identifier	fprintf		8679484	0					
ANR	8679918	ArgumentList	stderr		8679484	1					
ANR	8679919	Argument	stderr		8679484	0					
ANR	8679920	Identifier	stderr		8679484	0					
ANR	8679921	Argument	"""PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"""		8679484	1					
ANR	8679922	PrimaryExpression	"""PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\\n"""		8679484	0					
ANR	8679923	Argument	v		8679484	2					
ANR	8679924	Identifier	v		8679484	0					
ANR	8679925	Argument	pass		8679484	3					
ANR	8679926	Identifier	pass		8679484	0					
ANR	8679927	Argument	m		8679484	4					
ANR	8679928	Identifier	m		8679484	0					
ANR	8679929	Argument	f		8679484	5					
ANR	8679930	Identifier	f		8679484	0					
ANR	8679931	ExpressionStatement	exit ( 99 )	11477:12:361985:361993	8679484	1	True				
ANR	8679932	CallExpression	exit ( 99 )		8679484	0					
ANR	8679933	Callee	exit		8679484	0					
ANR	8679934	Identifier	exit		8679484	0					
ANR	8679935	ArgumentList	99		8679484	1					
ANR	8679936	Argument	99		8679484	0					
ANR	8679937	PrimaryExpression	99		8679484	0					
ANR	8679938	ExpressionStatement	++ v	11481:9:362054:362057	8679484	8	True				
ANR	8679939	UnaryExpression	++ v		8679484	0					
ANR	8679940	IncDec	++		8679484	0					
ANR	8679941	Identifier	v		8679484	1					
ANR	8679942	ExpressionStatement	"m = PNG_PASS_ROWS ( v , pass )"	11482:9:362068:362094	8679484	9	True				
ANR	8679943	AssignmentExpression	"m = PNG_PASS_ROWS ( v , pass )"		8679484	0		=			
ANR	8679944	Identifier	m		8679484	0					
ANR	8679945	CallExpression	"PNG_PASS_ROWS ( v , pass )"		8679484	1					
ANR	8679946	Callee	PNG_PASS_ROWS		8679484	0					
ANR	8679947	Identifier	PNG_PASS_ROWS		8679484	0					
ANR	8679948	ArgumentList	v		8679484	1					
ANR	8679949	Argument	v		8679484	0					
ANR	8679950	Identifier	v		8679484	0					
ANR	8679951	Argument	pass		8679484	1					
ANR	8679952	Identifier	pass		8679484	0					
ANR	8679953	ExpressionStatement	"f = png_pass_rows ( v , pass )"	11483:9:362105:362131	8679484	10	True				
ANR	8679954	AssignmentExpression	"f = png_pass_rows ( v , pass )"		8679484	0		=			
ANR	8679955	Identifier	f		8679484	0					
ANR	8679956	CallExpression	"png_pass_rows ( v , pass )"		8679484	1					
ANR	8679957	Callee	png_pass_rows		8679484	0					
ANR	8679958	Identifier	png_pass_rows		8679484	0					
ANR	8679959	ArgumentList	v		8679484	1					
ANR	8679960	Argument	v		8679484	0					
ANR	8679961	Identifier	v		8679484	0					
ANR	8679962	Argument	pass		8679484	1					
ANR	8679963	Identifier	pass		8679484	0					
ANR	8679964	IfStatement	if ( m != f )		8679484	11					
ANR	8679965	Condition	m != f	11484:13:362146:362151	8679484	0	True				
ANR	8679966	EqualityExpression	m != f		8679484	0		!=			
ANR	8679967	Identifier	m		8679484	0					
ANR	8679968	Identifier	f		8679484	1					
ANR	8679969	CompoundStatement		113:9:3351:3351	8679484	1					
ANR	8679970	ExpressionStatement	"fprintf ( stderr , ""PNG_PASS_ROWS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"	11486:12:362177:362260	8679484	0	True				
ANR	8679971	CallExpression	"fprintf ( stderr , ""PNG_PASS_ROWS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"		8679484	0					
ANR	8679972	Callee	fprintf		8679484	0					
ANR	8679973	Identifier	fprintf		8679484	0					
ANR	8679974	ArgumentList	stderr		8679484	1					
ANR	8679975	Argument	stderr		8679484	0					
ANR	8679976	Identifier	stderr		8679484	0					
ANR	8679977	Argument	"""PNG_PASS_ROWS(%u, %d) = %u != %x\\n"""		8679484	1					
ANR	8679978	PrimaryExpression	"""PNG_PASS_ROWS(%u, %d) = %u != %x\\n"""		8679484	0					
ANR	8679979	Argument	v		8679484	2					
ANR	8679980	Identifier	v		8679484	0					
ANR	8679981	Argument	pass		8679484	3					
ANR	8679982	Identifier	pass		8679484	0					
ANR	8679983	Argument	m		8679484	4					
ANR	8679984	Identifier	m		8679484	0					
ANR	8679985	Argument	f		8679484	5					
ANR	8679986	Identifier	f		8679484	0					
ANR	8679987	ExpressionStatement	exit ( 99 )	11488:12:362274:362282	8679484	1	True				
ANR	8679988	CallExpression	exit ( 99 )		8679484	0					
ANR	8679989	Callee	exit		8679484	0					
ANR	8679990	Identifier	exit		8679484	0					
ANR	8679991	ArgumentList	99		8679484	1					
ANR	8679992	Argument	99		8679484	0					
ANR	8679993	PrimaryExpression	99		8679484	0					
ANR	8679994	ExpressionStatement	"m = PNG_PASS_COLS ( v , pass )"	11491:9:362305:362331	8679484	12	True				
ANR	8679995	AssignmentExpression	"m = PNG_PASS_COLS ( v , pass )"		8679484	0		=			
ANR	8679996	Identifier	m		8679484	0					
ANR	8679997	CallExpression	"PNG_PASS_COLS ( v , pass )"		8679484	1					
ANR	8679998	Callee	PNG_PASS_COLS		8679484	0					
ANR	8679999	Identifier	PNG_PASS_COLS		8679484	0					
ANR	8680000	ArgumentList	v		8679484	1					
ANR	8680001	Argument	v		8679484	0					
ANR	8680002	Identifier	v		8679484	0					
ANR	8680003	Argument	pass		8679484	1					
ANR	8680004	Identifier	pass		8679484	0					
ANR	8680005	ExpressionStatement	"f = png_pass_cols ( v , pass )"	11492:9:362342:362368	8679484	13	True				
ANR	8680006	AssignmentExpression	"f = png_pass_cols ( v , pass )"		8679484	0		=			
ANR	8680007	Identifier	f		8679484	0					
ANR	8680008	CallExpression	"png_pass_cols ( v , pass )"		8679484	1					
ANR	8680009	Callee	png_pass_cols		8679484	0					
ANR	8680010	Identifier	png_pass_cols		8679484	0					
ANR	8680011	ArgumentList	v		8679484	1					
ANR	8680012	Argument	v		8679484	0					
ANR	8680013	Identifier	v		8679484	0					
ANR	8680014	Argument	pass		8679484	1					
ANR	8680015	Identifier	pass		8679484	0					
ANR	8680016	IfStatement	if ( m != f )		8679484	14					
ANR	8680017	Condition	m != f	11493:13:362383:362388	8679484	0	True				
ANR	8680018	EqualityExpression	m != f		8679484	0		!=			
ANR	8680019	Identifier	m		8679484	0					
ANR	8680020	Identifier	f		8679484	1					
ANR	8680021	CompoundStatement		122:9:3588:3588	8679484	1					
ANR	8680022	ExpressionStatement	"fprintf ( stderr , ""PNG_PASS_COLS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"	11495:12:362414:362497	8679484	0	True				
ANR	8680023	CallExpression	"fprintf ( stderr , ""PNG_PASS_COLS(%u, %d) = %u != %x\\n"" , v , pass , m , f )"		8679484	0					
ANR	8680024	Callee	fprintf		8679484	0					
ANR	8680025	Identifier	fprintf		8679484	0					
ANR	8680026	ArgumentList	stderr		8679484	1					
ANR	8680027	Argument	stderr		8679484	0					
ANR	8680028	Identifier	stderr		8679484	0					
ANR	8680029	Argument	"""PNG_PASS_COLS(%u, %d) = %u != %x\\n"""		8679484	1					
ANR	8680030	PrimaryExpression	"""PNG_PASS_COLS(%u, %d) = %u != %x\\n"""		8679484	0					
ANR	8680031	Argument	v		8679484	2					
ANR	8680032	Identifier	v		8679484	0					
ANR	8680033	Argument	pass		8679484	3					
ANR	8680034	Identifier	pass		8679484	0					
ANR	8680035	Argument	m		8679484	4					
ANR	8680036	Identifier	m		8679484	0					
ANR	8680037	Argument	f		8679484	5					
ANR	8680038	Identifier	f		8679484	0					
ANR	8680039	ExpressionStatement	exit ( 99 )	11497:12:362511:362519	8679484	1	True				
ANR	8680040	CallExpression	exit ( 99 )		8679484	0					
ANR	8680041	Callee	exit		8679484	0					
ANR	8680042	Identifier	exit		8679484	0					
ANR	8680043	ArgumentList	99		8679484	1					
ANR	8680044	Argument	99		8679484	0					
ANR	8680045	PrimaryExpression	99		8679484	0					
ANR	8680046	IfStatement	if ( v > 1024 )		8679484	15					
ANR	8680047	Condition	v > 1024	11503:13:362662:362669	8679484	0	True				
ANR	8680048	RelationalExpression	v > 1024		8679484	0		>			
ANR	8680049	Identifier	v		8679484	0					
ANR	8680050	PrimaryExpression	1024		8679484	1					
ANR	8680051	CompoundStatement		132:9:3869:3869	8679484	1					
ANR	8680052	IfStatement	if ( v == PNG_UINT_31_MAX )		8679484	0					
ANR	8680053	Condition	v == PNG_UINT_31_MAX	11505:16:362699:362718	8679484	0	True				
ANR	8680054	EqualityExpression	v == PNG_UINT_31_MAX		8679484	0		==			
ANR	8680055	Identifier	v		8679484	0					
ANR	8680056	Identifier	PNG_UINT_31_MAX		8679484	1					
ANR	8680057	BreakStatement	break ;	11506:15:362736:362741	8679484	1	True				
ANR	8680058	ExpressionStatement	v = ( v << 1 ) ^ v	11508:12:362756:362772	8679484	1	True				
ANR	8680059	AssignmentExpression	v = ( v << 1 ) ^ v		8679484	0		=			
ANR	8680060	Identifier	v		8679484	0					
ANR	8680061	ExclusiveOrExpression	( v << 1 ) ^ v		8679484	1		^			
ANR	8680062	ShiftExpression	v << 1		8679484	0		<<			
ANR	8680063	Identifier	v		8679484	0					
ANR	8680064	PrimaryExpression	1		8679484	1					
ANR	8680065	Identifier	v		8679484	1					
ANR	8680066	IfStatement	if ( v >= PNG_UINT_31_MAX )		8679484	2					
ANR	8680067	Condition	v >= PNG_UINT_31_MAX	11509:16:362790:362809	8679484	0	True				
ANR	8680068	RelationalExpression	v >= PNG_UINT_31_MAX		8679484	0		>=			
ANR	8680069	Identifier	v		8679484	0					
ANR	8680070	Identifier	PNG_UINT_31_MAX		8679484	1					
ANR	8680071	ExpressionStatement	v = PNG_UINT_31_MAX - 1	11510:15:362827:362848	8679484	1	True				
ANR	8680072	AssignmentExpression	v = PNG_UINT_31_MAX - 1		8679484	0		=			
ANR	8680073	Identifier	v		8679484	0					
ANR	8680074	AdditiveExpression	PNG_UINT_31_MAX - 1		8679484	1		-			
ANR	8680075	Identifier	PNG_UINT_31_MAX		8679484	0					
ANR	8680076	PrimaryExpression	1		8679484	1					
ANR	8680077	ReturnType	static void		8679484	1					
ANR	8680078	Identifier	perform_interlace_macro_validation		8679484	2					
ANR	8680079	ParameterList			8679484	3					
ANR	8680080	CFGEntryNode	ENTRY		8679484		True				
ANR	8680081	CFGExitNode	EXIT		8679484		True				
ANR	8680082	InfiniteForNode	true		8679484		True				
ANR	8680083	Symbol	png_row_in_interlace_pass		8679484						
ANR	8680084	Symbol	PNG_PASS_START_ROW		8679484						
ANR	8680085	Symbol	png_pass_cols		8679484						
ANR	8680086	Symbol	PNG_ROW_FROM_PASS_ROW		8679484						
ANR	8680087	Symbol	PNG_PASS_COL_SHIFT		8679484						
ANR	8680088	Symbol	png_col_in_interlace_pass		8679484						
ANR	8680089	Symbol	png_pass_start_row		8679484						
ANR	8680090	Symbol	PNG_PASS_COLS		8679484						
ANR	8680091	Symbol	png_row_from_pass_row		8679484						
ANR	8680092	Symbol	PNG_ROW_IN_INTERLACE_PASS		8679484						
ANR	8680093	Symbol	pass		8679484						
ANR	8680094	Symbol	png_col_from_pass_col		8679484						
ANR	8680095	Symbol	f		8679484						
ANR	8680096	Symbol	PNG_PASS_START_COL		8679484						
ANR	8680097	Symbol	PNG_PASS_ROW_SHIFT		8679484						
ANR	8680098	Symbol	PNG_UINT_31_MAX		8679484						
ANR	8680099	Symbol	PNG_PASS_ROWS		8679484						
ANR	8680100	Symbol	png_pass_col_shift		8679484						
ANR	8680101	Symbol	stderr		8679484						
ANR	8680102	Symbol	m		8679484						
ANR	8680103	Symbol	png_pass_row_shift		8679484						
ANR	8680104	Symbol	PNG_COL_IN_INTERLACE_PASS		8679484						
ANR	8680105	Symbol	png_pass_start_col		8679484						
ANR	8680106	Symbol	PNG_COL_FROM_PASS_COL		8679484						
ANR	8680107	Symbol	v		8679484						
ANR	8680108	Symbol	png_pass_rows		8679484						
ANR	8680109	DeclStmt									
ANR	8680110	Decl							const color_encoding	const color_encoding [ ]	test_encodings
ANR	8680111	DeclStmt									
ANR	8680112	Decl							png_modifier	png_modifier	pm
ANR	8680113	Function	signal_handler	11565:0:365325:366612							
ANR	8680114	FunctionDef	signal_handler (int signum)		8680113	0					
ANR	8680115	CompoundStatement		11566:0:365364:366612	8680113	0					
ANR	8680116	IdentifierDeclStatement	size_t pos = 0 ;	11568:3:365370:365384	8680113	0	True				
ANR	8680117	IdentifierDecl	pos = 0		8680113	0					
ANR	8680118	IdentifierDeclType	size_t		8680113	0					
ANR	8680119	Identifier	pos		8680113	1					
ANR	8680120	AssignmentExpression	pos = 0		8680113	2		=			
ANR	8680121	Identifier	pos		8680113	0					
ANR	8680122	PrimaryExpression	0		8680113	1					
ANR	8680123	IdentifierDeclStatement	char msg [ 64 ] ;	11569:3:365389:365401	8680113	1	True				
ANR	8680124	IdentifierDecl	msg [ 64 ]		8680113	0					
ANR	8680125	IdentifierDeclType	char [ 64 ]		8680113	0					
ANR	8680126	Identifier	msg		8680113	1					
ANR	8680127	PrimaryExpression	64		8680113	2					
ANR	8680128	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""caught signal: "" )"	11571:3:365407:365461	8680113	2	True				
ANR	8680129	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""caught signal: "" )"		8680113	0		=			
ANR	8680130	Identifier	pos		8680113	0					
ANR	8680131	CallExpression	"safecat ( msg , sizeof msg , pos , ""caught signal: "" )"		8680113	1					
ANR	8680132	Callee	safecat		8680113	0					
ANR	8680133	Identifier	safecat		8680113	0					
ANR	8680134	ArgumentList	msg		8680113	1					
ANR	8680135	Argument	msg		8680113	0					
ANR	8680136	Identifier	msg		8680113	0					
ANR	8680137	Argument	sizeof msg		8680113	1					
ANR	8680138	SizeofExpression	sizeof msg		8680113	0					
ANR	8680139	Sizeof	sizeof		8680113	0					
ANR	8680140	Identifier	msg		8680113	1					
ANR	8680141	Argument	pos		8680113	2					
ANR	8680142	Identifier	pos		8680113	0					
ANR	8680143	Argument	"""caught signal: """		8680113	3					
ANR	8680144	PrimaryExpression	"""caught signal: """		8680113	0					
ANR	8680145	SwitchStatement	switch ( signum )		8680113	3					
ANR	8680146	Condition	signum	11573:11:365475:365480	8680113	0	True				
ANR	8680147	Identifier	signum		8680113	0					
ANR	8680148	CompoundStatement		9:3:121:121	8680113	1					
ANR	8680149	Label	case SIGABRT :	11575:6:365494:365506	8680113	0	True				
ANR	8680150	Identifier	SIGABRT		8680113	0					
ANR	8680151	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""abort"" )"	11576:9:365517:365561	8680113	1	True				
ANR	8680152	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""abort"" )"		8680113	0		=			
ANR	8680153	Identifier	pos		8680113	0					
ANR	8680154	CallExpression	"safecat ( msg , sizeof msg , pos , ""abort"" )"		8680113	1					
ANR	8680155	Callee	safecat		8680113	0					
ANR	8680156	Identifier	safecat		8680113	0					
ANR	8680157	ArgumentList	msg		8680113	1					
ANR	8680158	Argument	msg		8680113	0					
ANR	8680159	Identifier	msg		8680113	0					
ANR	8680160	Argument	sizeof msg		8680113	1					
ANR	8680161	SizeofExpression	sizeof msg		8680113	0					
ANR	8680162	Sizeof	sizeof		8680113	0					
ANR	8680163	Identifier	msg		8680113	1					
ANR	8680164	Argument	pos		8680113	2					
ANR	8680165	Identifier	pos		8680113	0					
ANR	8680166	Argument	"""abort"""		8680113	3					
ANR	8680167	PrimaryExpression	"""abort"""		8680113	0					
ANR	8680168	BreakStatement	break ;	11577:9:365572:365577	8680113	2	True				
ANR	8680169	Label	case SIGFPE :	11579:6:365586:365597	8680113	3	True				
ANR	8680170	Identifier	SIGFPE		8680113	0					
ANR	8680171	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""floating point exception"" )"	11580:9:365608:365671	8680113	4	True				
ANR	8680172	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""floating point exception"" )"		8680113	0		=			
ANR	8680173	Identifier	pos		8680113	0					
ANR	8680174	CallExpression	"safecat ( msg , sizeof msg , pos , ""floating point exception"" )"		8680113	1					
ANR	8680175	Callee	safecat		8680113	0					
ANR	8680176	Identifier	safecat		8680113	0					
ANR	8680177	ArgumentList	msg		8680113	1					
ANR	8680178	Argument	msg		8680113	0					
ANR	8680179	Identifier	msg		8680113	0					
ANR	8680180	Argument	sizeof msg		8680113	1					
ANR	8680181	SizeofExpression	sizeof msg		8680113	0					
ANR	8680182	Sizeof	sizeof		8680113	0					
ANR	8680183	Identifier	msg		8680113	1					
ANR	8680184	Argument	pos		8680113	2					
ANR	8680185	Identifier	pos		8680113	0					
ANR	8680186	Argument	"""floating point exception"""		8680113	3					
ANR	8680187	PrimaryExpression	"""floating point exception"""		8680113	0					
ANR	8680188	BreakStatement	break ;	11581:9:365682:365687	8680113	5	True				
ANR	8680189	Label	case SIGILL :	11583:6:365696:365707	8680113	6	True				
ANR	8680190	Identifier	SIGILL		8680113	0					
ANR	8680191	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""illegal instruction"" )"	11584:9:365718:365776	8680113	7	True				
ANR	8680192	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""illegal instruction"" )"		8680113	0		=			
ANR	8680193	Identifier	pos		8680113	0					
ANR	8680194	CallExpression	"safecat ( msg , sizeof msg , pos , ""illegal instruction"" )"		8680113	1					
ANR	8680195	Callee	safecat		8680113	0					
ANR	8680196	Identifier	safecat		8680113	0					
ANR	8680197	ArgumentList	msg		8680113	1					
ANR	8680198	Argument	msg		8680113	0					
ANR	8680199	Identifier	msg		8680113	0					
ANR	8680200	Argument	sizeof msg		8680113	1					
ANR	8680201	SizeofExpression	sizeof msg		8680113	0					
ANR	8680202	Sizeof	sizeof		8680113	0					
ANR	8680203	Identifier	msg		8680113	1					
ANR	8680204	Argument	pos		8680113	2					
ANR	8680205	Identifier	pos		8680113	0					
ANR	8680206	Argument	"""illegal instruction"""		8680113	3					
ANR	8680207	PrimaryExpression	"""illegal instruction"""		8680113	0					
ANR	8680208	BreakStatement	break ;	11585:9:365787:365792	8680113	8	True				
ANR	8680209	Label	case SIGINT :	11587:6:365801:365812	8680113	9	True				
ANR	8680210	Identifier	SIGINT		8680113	0					
ANR	8680211	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""interrupt"" )"	11588:9:365823:365871	8680113	10	True				
ANR	8680212	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""interrupt"" )"		8680113	0		=			
ANR	8680213	Identifier	pos		8680113	0					
ANR	8680214	CallExpression	"safecat ( msg , sizeof msg , pos , ""interrupt"" )"		8680113	1					
ANR	8680215	Callee	safecat		8680113	0					
ANR	8680216	Identifier	safecat		8680113	0					
ANR	8680217	ArgumentList	msg		8680113	1					
ANR	8680218	Argument	msg		8680113	0					
ANR	8680219	Identifier	msg		8680113	0					
ANR	8680220	Argument	sizeof msg		8680113	1					
ANR	8680221	SizeofExpression	sizeof msg		8680113	0					
ANR	8680222	Sizeof	sizeof		8680113	0					
ANR	8680223	Identifier	msg		8680113	1					
ANR	8680224	Argument	pos		8680113	2					
ANR	8680225	Identifier	pos		8680113	0					
ANR	8680226	Argument	"""interrupt"""		8680113	3					
ANR	8680227	PrimaryExpression	"""interrupt"""		8680113	0					
ANR	8680228	BreakStatement	break ;	11589:9:365882:365887	8680113	11	True				
ANR	8680229	Label	case SIGSEGV :	11591:6:365896:365908	8680113	12	True				
ANR	8680230	Identifier	SIGSEGV		8680113	0					
ANR	8680231	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""invalid memory access"" )"	11592:9:365919:365979	8680113	13	True				
ANR	8680232	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""invalid memory access"" )"		8680113	0		=			
ANR	8680233	Identifier	pos		8680113	0					
ANR	8680234	CallExpression	"safecat ( msg , sizeof msg , pos , ""invalid memory access"" )"		8680113	1					
ANR	8680235	Callee	safecat		8680113	0					
ANR	8680236	Identifier	safecat		8680113	0					
ANR	8680237	ArgumentList	msg		8680113	1					
ANR	8680238	Argument	msg		8680113	0					
ANR	8680239	Identifier	msg		8680113	0					
ANR	8680240	Argument	sizeof msg		8680113	1					
ANR	8680241	SizeofExpression	sizeof msg		8680113	0					
ANR	8680242	Sizeof	sizeof		8680113	0					
ANR	8680243	Identifier	msg		8680113	1					
ANR	8680244	Argument	pos		8680113	2					
ANR	8680245	Identifier	pos		8680113	0					
ANR	8680246	Argument	"""invalid memory access"""		8680113	3					
ANR	8680247	PrimaryExpression	"""invalid memory access"""		8680113	0					
ANR	8680248	BreakStatement	break ;	11593:9:365990:365995	8680113	14	True				
ANR	8680249	Label	case SIGTERM :	11595:6:366004:366016	8680113	15	True				
ANR	8680250	Identifier	SIGTERM		8680113	0					
ANR	8680251	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""termination request"" )"	11596:9:366027:366085	8680113	16	True				
ANR	8680252	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""termination request"" )"		8680113	0		=			
ANR	8680253	Identifier	pos		8680113	0					
ANR	8680254	CallExpression	"safecat ( msg , sizeof msg , pos , ""termination request"" )"		8680113	1					
ANR	8680255	Callee	safecat		8680113	0					
ANR	8680256	Identifier	safecat		8680113	0					
ANR	8680257	ArgumentList	msg		8680113	1					
ANR	8680258	Argument	msg		8680113	0					
ANR	8680259	Identifier	msg		8680113	0					
ANR	8680260	Argument	sizeof msg		8680113	1					
ANR	8680261	SizeofExpression	sizeof msg		8680113	0					
ANR	8680262	Sizeof	sizeof		8680113	0					
ANR	8680263	Identifier	msg		8680113	1					
ANR	8680264	Argument	pos		8680113	2					
ANR	8680265	Identifier	pos		8680113	0					
ANR	8680266	Argument	"""termination request"""		8680113	3					
ANR	8680267	PrimaryExpression	"""termination request"""		8680113	0					
ANR	8680268	BreakStatement	break ;	11597:9:366096:366101	8680113	17	True				
ANR	8680269	Label	default :	11599:6:366110:366117	8680113	18	True				
ANR	8680270	Identifier	default		8680113	0					
ANR	8680271	ExpressionStatement	"pos = safecat ( msg , sizeof msg , pos , ""unknown "" )"	11600:9:366128:366175	8680113	19	True				
ANR	8680272	AssignmentExpression	"pos = safecat ( msg , sizeof msg , pos , ""unknown "" )"		8680113	0		=			
ANR	8680273	Identifier	pos		8680113	0					
ANR	8680274	CallExpression	"safecat ( msg , sizeof msg , pos , ""unknown "" )"		8680113	1					
ANR	8680275	Callee	safecat		8680113	0					
ANR	8680276	Identifier	safecat		8680113	0					
ANR	8680277	ArgumentList	msg		8680113	1					
ANR	8680278	Argument	msg		8680113	0					
ANR	8680279	Identifier	msg		8680113	0					
ANR	8680280	Argument	sizeof msg		8680113	1					
ANR	8680281	SizeofExpression	sizeof msg		8680113	0					
ANR	8680282	Sizeof	sizeof		8680113	0					
ANR	8680283	Identifier	msg		8680113	1					
ANR	8680284	Argument	pos		8680113	2					
ANR	8680285	Identifier	pos		8680113	0					
ANR	8680286	Argument	"""unknown """		8680113	3					
ANR	8680287	PrimaryExpression	"""unknown """		8680113	0					
ANR	8680288	ExpressionStatement	"pos = safecatn ( msg , sizeof msg , pos , signum )"	11601:9:366186:366230	8680113	20	True				
ANR	8680289	AssignmentExpression	"pos = safecatn ( msg , sizeof msg , pos , signum )"		8680113	0		=			
ANR	8680290	Identifier	pos		8680113	0					
ANR	8680291	CallExpression	"safecatn ( msg , sizeof msg , pos , signum )"		8680113	1					
ANR	8680292	Callee	safecatn		8680113	0					
ANR	8680293	Identifier	safecatn		8680113	0					
ANR	8680294	ArgumentList	msg		8680113	1					
ANR	8680295	Argument	msg		8680113	0					
ANR	8680296	Identifier	msg		8680113	0					
ANR	8680297	Argument	sizeof msg		8680113	1					
ANR	8680298	SizeofExpression	sizeof msg		8680113	0					
ANR	8680299	Sizeof	sizeof		8680113	0					
ANR	8680300	Identifier	msg		8680113	1					
ANR	8680301	Argument	pos		8680113	2					
ANR	8680302	Identifier	pos		8680113	0					
ANR	8680303	Argument	signum		8680113	3					
ANR	8680304	Identifier	signum		8680113	0					
ANR	8680305	BreakStatement	break ;	11602:9:366241:366246	8680113	21	True				
ANR	8680306	ExpressionStatement	"store_log ( & pm . this , NULL , msg , 1 )"	11605:3:366257:366314	8680113	4	True				
ANR	8680307	CallExpression	"store_log ( & pm . this , NULL , msg , 1 )"		8680113	0					
ANR	8680308	Callee	store_log		8680113	0					
ANR	8680309	Identifier	store_log		8680113	0					
ANR	8680310	ArgumentList	& pm . this		8680113	1					
ANR	8680311	Argument	& pm . this		8680113	0					
ANR	8680312	UnaryOperationExpression	& pm . this		8680113	0					
ANR	8680313	UnaryOperator	&		8680113	0					
ANR	8680314	MemberAccess	pm . this		8680113	1					
ANR	8680315	Identifier	pm		8680113	0					
ANR	8680316	Identifier	this		8680113	1					
ANR	8680317	Argument	NULL		8680113	1					
ANR	8680318	Identifier	NULL		8680113	0					
ANR	8680319	Argument	msg		8680113	2					
ANR	8680320	Identifier	msg		8680113	0					
ANR	8680321	Argument	1		8680113	3					
ANR	8680322	PrimaryExpression	1		8680113	0					
ANR	8680323	IfStatement	if ( signum != SIGTERM )		8680113	5					
ANR	8680324	Condition	signum != SIGTERM	11610:7:366443:366459	8680113	0	True				
ANR	8680325	EqualityExpression	signum != SIGTERM		8680113	0		!=			
ANR	8680326	Identifier	signum		8680113	0					
ANR	8680327	Identifier	SIGTERM		8680113	1					
ANR	8680328	CompoundStatement		47:6:1108:1193	8680113	1					
ANR	8680329	IdentifierDeclStatement	struct exception_context * the_exception_context = & pm . this . exception_context ;	11612:6:366473:366558	8680113	0	True				
ANR	8680330	IdentifierDecl	* the_exception_context = & pm . this . exception_context		8680113	0					
ANR	8680331	IdentifierDeclType	struct exception_context *		8680113	0					
ANR	8680332	Identifier	the_exception_context		8680113	1					
ANR	8680333	AssignmentExpression	* the_exception_context = & pm . this . exception_context		8680113	2		=			
ANR	8680334	Identifier	the_exception_context		8680113	0					
ANR	8680335	UnaryOperationExpression	& pm . this . exception_context		8680113	1					
ANR	8680336	UnaryOperator	&		8680113	0					
ANR	8680337	MemberAccess	pm . this . exception_context		8680113	1					
ANR	8680338	MemberAccess	pm . this		8680113	0					
ANR	8680339	Identifier	pm		8680113	0					
ANR	8680340	Identifier	this		8680113	1					
ANR	8680341	Identifier	exception_context		8680113	1					
ANR	8680342	ExpressionStatement	Throw & pm . this	11615:6:366567:366581	8680113	1	True				
ANR	8680343	BitAndExpression	Throw & pm . this		8680113	0		&			
ANR	8680344	Identifier	Throw		8680113	0					
ANR	8680345	MemberAccess	pm . this		8680113	1					
ANR	8680346	Identifier	pm		8680113	0					
ANR	8680347	Identifier	this		8680113	1					
ANR	8680348	ElseStatement	else		8680113	0					
ANR	8680349	ExpressionStatement	exit ( 1 )	11619:6:366603:366610	8680113	0	True				
ANR	8680350	CallExpression	exit ( 1 )		8680113	0					
ANR	8680351	Callee	exit		8680113	0					
ANR	8680352	Identifier	exit		8680113	0					
ANR	8680353	ArgumentList	1		8680113	1					
ANR	8680354	Argument	1		8680113	0					
ANR	8680355	PrimaryExpression	1		8680113	0					
ANR	8680356	ReturnType	static void		8680113	1					
ANR	8680357	Identifier	signal_handler		8680113	2					
ANR	8680358	ParameterList	int signum		8680113	3					
ANR	8680359	Parameter	int signum	11565:27:365352:365361	8680113	0	True				
ANR	8680360	ParameterType	int		8680113	0					
ANR	8680361	Identifier	signum		8680113	1					
ANR	8680362	CFGEntryNode	ENTRY		8680113		True				
ANR	8680363	CFGExitNode	EXIT		8680113		True				
ANR	8680364	Symbol	signum		8680113						
ANR	8680365	Symbol	msg		8680113						
ANR	8680366	Symbol	NULL		8680113						
ANR	8680367	Symbol	pm . this		8680113						
ANR	8680368	Symbol	& pm		8680113						
ANR	8680369	Symbol	& pm . this		8680113						
ANR	8680370	Symbol	safecatn		8680113						
ANR	8680371	Symbol	& pm . this . exception_context		8680113						
ANR	8680372	Symbol	pos		8680113						
ANR	8680373	Symbol	safecat		8680113						
ANR	8680374	Symbol	SIGTERM		8680113						
ANR	8680375	Symbol	pm		8680113						
ANR	8680376	Symbol	the_exception_context		8680113						
ANR	8680377	Function	main	11623:0:366634:385625							
ANR	8680378	FunctionDef	"main (int argc , char * * argv)"		8680377	0					
ANR	8680379	CompoundStatement		11624:0:366666:385625	8680377	0					
ANR	8680380	IdentifierDeclStatement	int summary = 1 ;	11625:3:366671:366686	8680377	0	True				
ANR	8680381	IdentifierDecl	summary = 1		8680377	0					
ANR	8680382	IdentifierDeclType	int		8680377	0					
ANR	8680383	Identifier	summary		8680377	1					
ANR	8680384	AssignmentExpression	summary = 1		8680377	2		=			
ANR	8680385	Identifier	summary		8680377	0					
ANR	8680386	PrimaryExpression	1		8680377	1					
ANR	8680387	IdentifierDeclStatement	int memstats = 0 ;	11626:3:366733:366749	8680377	1	True				
ANR	8680388	IdentifierDecl	memstats = 0		8680377	0					
ANR	8680389	IdentifierDeclType	int		8680377	0					
ANR	8680390	Identifier	memstats		8680377	1					
ANR	8680391	AssignmentExpression	memstats = 0		8680377	2		=			
ANR	8680392	Identifier	memstats		8680377	0					
ANR	8680393	PrimaryExpression	0		8680377	1					
ANR	8680394	IdentifierDeclStatement	const char * touch = NULL ;	11629:3:366846:366870	8680377	2	True				
ANR	8680395	IdentifierDecl	* touch = NULL		8680377	0					
ANR	8680396	IdentifierDeclType	const char *		8680377	0					
ANR	8680397	Identifier	touch		8680377	1					
ANR	8680398	AssignmentExpression	* touch = NULL		8680377	2		=			
ANR	8680399	Identifier	NULL		8680377	0					
ANR	8680400	Identifier	NULL		8680377	1					
ANR	8680401	Statement	static	11636:3:367075:367080	8680377	3	True				
ANR	8680402	IdentifierDeclStatement	"double gammas [ ] = { 2.2 , 1.0 , 2.2 / 1.45 , 1.8 , 1.5 , 2.4 , 2.5 , 2.62 , 2.9 } ;"	11636:10:367082:367155	8680377	4	True				
ANR	8680403	IdentifierDecl	"gammas [ ] = { 2.2 , 1.0 , 2.2 / 1.45 , 1.8 , 1.5 , 2.4 , 2.5 , 2.62 , 2.9 }"		8680377	0					
ANR	8680404	IdentifierDeclType	double [ ]		8680377	0					
ANR	8680405	Identifier	gammas		8680377	1					
ANR	8680406	AssignmentExpression	"gammas [ ] = { 2.2 , 1.0 , 2.2 / 1.45 , 1.8 , 1.5 , 2.4 , 2.5 , 2.62 , 2.9 }"		8680377	2		=			
ANR	8680407	Identifier	gammas		8680377	0					
ANR	8680408	InitializerList	2.2		8680377	1					
ANR	8680409	PrimaryExpression	2.2		8680377	0					
ANR	8680410	PrimaryExpression	1.0		8680377	1					
ANR	8680411	MultiplicativeExpression	2.2 / 1.45		8680377	2		/			
ANR	8680412	PrimaryExpression	2.2		8680377	0					
ANR	8680413	PrimaryExpression	1.45		8680377	1					
ANR	8680414	PrimaryExpression	1.8		8680377	3					
ANR	8680415	PrimaryExpression	1.5		8680377	4					
ANR	8680416	PrimaryExpression	2.4		8680377	5					
ANR	8680417	PrimaryExpression	2.5		8680377	6					
ANR	8680418	PrimaryExpression	2.62		8680377	7					
ANR	8680419	PrimaryExpression	2.9		8680377	8					
ANR	8680420	IdentifierDeclStatement	size_t cp = 0 ;	11640:3:367210:367223	8680377	5	True				
ANR	8680421	IdentifierDecl	cp = 0		8680377	0					
ANR	8680422	IdentifierDeclType	size_t		8680377	0					
ANR	8680423	Identifier	cp		8680377	1					
ANR	8680424	AssignmentExpression	cp = 0		8680377	2		=			
ANR	8680425	Identifier	cp		8680377	0					
ANR	8680426	PrimaryExpression	0		8680377	1					
ANR	8680427	IdentifierDeclStatement	char command [ 1024 ] ;	11641:3:367228:367246	8680377	6	True				
ANR	8680428	IdentifierDecl	command [ 1024 ]		8680377	0					
ANR	8680429	IdentifierDeclType	char [ 1024 ]		8680377	0					
ANR	8680430	Identifier	command		8680377	1					
ANR	8680431	PrimaryExpression	1024		8680377	2					
ANR	8680432	ExpressionStatement	anon_context ( & pm . this )	11643:3:367252:367274	8680377	7	True				
ANR	8680433	CallExpression	anon_context ( & pm . this )		8680377	0					
ANR	8680434	Callee	anon_context		8680377	0					
ANR	8680435	Identifier	anon_context		8680377	0					
ANR	8680436	ArgumentList	& pm . this		8680377	1					
ANR	8680437	Argument	& pm . this		8680377	0					
ANR	8680438	UnaryOperationExpression	& pm . this		8680377	0					
ANR	8680439	UnaryOperator	&		8680377	0					
ANR	8680440	MemberAccess	pm . this		8680377	1					
ANR	8680441	Identifier	pm		8680377	0					
ANR	8680442	Identifier	this		8680377	1					
ANR	8680443	Statement	gnu_volatile	11645:3:367280:367291	8680377	8	True				
ANR	8680444	Statement	(	11645:15:367292:367292	8680377	9	True				
ANR	8680445	Statement	summary	11645:16:367293:367299	8680377	10	True				
ANR	8680446	Statement	)	11645:23:367300:367300	8680377	11	True				
ANR	8680447	Statement	gnu_volatile	11646:3:367305:367316	8680377	12	True				
ANR	8680448	Statement	(	11646:15:367317:367317	8680377	13	True				
ANR	8680449	Statement	memstats	11646:16:367318:367325	8680377	14	True				
ANR	8680450	Statement	)	11646:24:367326:367326	8680377	15	True				
ANR	8680451	Statement	gnu_volatile	11647:3:367331:367342	8680377	16	True				
ANR	8680452	ExpressionStatement	"( touch ) signal ( SIGABRT , signal_handler )"	11647:15:367343:367458	8680377	17	True				
ANR	8680453	CastExpression	"( touch ) signal ( SIGABRT , signal_handler )"		8680377	0					
ANR	8680454	CastTarget	touch		8680377	0					
ANR	8680455	CallExpression	"signal ( SIGABRT , signal_handler )"		8680377	1					
ANR	8680456	Callee	signal		8680377	0					
ANR	8680457	Identifier	signal		8680377	0					
ANR	8680458	ArgumentList	SIGABRT		8680377	1					
ANR	8680459	Argument	SIGABRT		8680377	0					
ANR	8680460	Identifier	SIGABRT		8680377	0					
ANR	8680461	Argument	signal_handler		8680377	1					
ANR	8680462	Identifier	signal_handler		8680377	0					
ANR	8680463	ExpressionStatement	"signal ( SIGFPE , signal_handler )"	11651:3:367463:367493	8680377	18	True				
ANR	8680464	CallExpression	"signal ( SIGFPE , signal_handler )"		8680377	0					
ANR	8680465	Callee	signal		8680377	0					
ANR	8680466	Identifier	signal		8680377	0					
ANR	8680467	ArgumentList	SIGFPE		8680377	1					
ANR	8680468	Argument	SIGFPE		8680377	0					
ANR	8680469	Identifier	SIGFPE		8680377	0					
ANR	8680470	Argument	signal_handler		8680377	1					
ANR	8680471	Identifier	signal_handler		8680377	0					
ANR	8680472	ExpressionStatement	"signal ( SIGILL , signal_handler )"	11652:3:367498:367528	8680377	19	True				
ANR	8680473	CallExpression	"signal ( SIGILL , signal_handler )"		8680377	0					
ANR	8680474	Callee	signal		8680377	0					
ANR	8680475	Identifier	signal		8680377	0					
ANR	8680476	ArgumentList	SIGILL		8680377	1					
ANR	8680477	Argument	SIGILL		8680377	0					
ANR	8680478	Identifier	SIGILL		8680377	0					
ANR	8680479	Argument	signal_handler		8680377	1					
ANR	8680480	Identifier	signal_handler		8680377	0					
ANR	8680481	ExpressionStatement	"signal ( SIGINT , signal_handler )"	11653:3:367533:367563	8680377	20	True				
ANR	8680482	CallExpression	"signal ( SIGINT , signal_handler )"		8680377	0					
ANR	8680483	Callee	signal		8680377	0					
ANR	8680484	Identifier	signal		8680377	0					
ANR	8680485	ArgumentList	SIGINT		8680377	1					
ANR	8680486	Argument	SIGINT		8680377	0					
ANR	8680487	Identifier	SIGINT		8680377	0					
ANR	8680488	Argument	signal_handler		8680377	1					
ANR	8680489	Identifier	signal_handler		8680377	0					
ANR	8680490	ExpressionStatement	"signal ( SIGSEGV , signal_handler )"	11654:3:367568:367599	8680377	21	True				
ANR	8680491	CallExpression	"signal ( SIGSEGV , signal_handler )"		8680377	0					
ANR	8680492	Callee	signal		8680377	0					
ANR	8680493	Identifier	signal		8680377	0					
ANR	8680494	ArgumentList	SIGSEGV		8680377	1					
ANR	8680495	Argument	SIGSEGV		8680377	0					
ANR	8680496	Identifier	SIGSEGV		8680377	0					
ANR	8680497	Argument	signal_handler		8680377	1					
ANR	8680498	Identifier	signal_handler		8680377	0					
ANR	8680499	ExpressionStatement	"signal ( SIGTERM , signal_handler )"	11655:3:367604:367635	8680377	22	True				
ANR	8680500	CallExpression	"signal ( SIGTERM , signal_handler )"		8680377	0					
ANR	8680501	Callee	signal		8680377	0					
ANR	8680502	Identifier	signal		8680377	0					
ANR	8680503	ArgumentList	SIGTERM		8680377	1					
ANR	8680504	Argument	SIGTERM		8680377	0					
ANR	8680505	Identifier	SIGTERM		8680377	0					
ANR	8680506	Argument	signal_handler		8680377	1					
ANR	8680507	Identifier	signal_handler		8680377	0					
ANR	8680508	ExpressionStatement	feenableexcept ( FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW )	11662:3:367898:367953	8680377	23	True				
ANR	8680509	CallExpression	feenableexcept ( FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW )		8680377	0					
ANR	8680510	Callee	feenableexcept		8680377	0					
ANR	8680511	Identifier	feenableexcept		8680377	0					
ANR	8680512	ArgumentList	FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW		8680377	1					
ANR	8680513	Argument	FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW		8680377	0					
ANR	8680514	InclusiveOrExpression	FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW		8680377	0		|			
ANR	8680515	Identifier	FE_DIVBYZERO		8680377	0					
ANR	8680516	InclusiveOrExpression	FE_INVALID | FE_OVERFLOW		8680377	1		|			
ANR	8680517	Identifier	FE_INVALID		8680377	0					
ANR	8680518	Identifier	FE_OVERFLOW		8680377	1					
ANR	8680519	ExpressionStatement	modifier_init ( & pm )	11665:3:367966:367984	8680377	24	True				
ANR	8680520	CallExpression	modifier_init ( & pm )		8680377	0					
ANR	8680521	Callee	modifier_init		8680377	0					
ANR	8680522	Identifier	modifier_init		8680377	0					
ANR	8680523	ArgumentList	& pm		8680377	1					
ANR	8680524	Argument	& pm		8680377	0					
ANR	8680525	UnaryOperationExpression	& pm		8680377	0					
ANR	8680526	UnaryOperator	&		8680377	0					
ANR	8680527	Identifier	pm		8680377	1					
ANR	8680528	ExpressionStatement	"store_ensure_image ( & pm . this , NULL , 2 , TRANSFORM_ROWMAX , TRANSFORM_HEIGHTMAX )"	11672:3:368256:368332	8680377	25	True				
ANR	8680529	CallExpression	"store_ensure_image ( & pm . this , NULL , 2 , TRANSFORM_ROWMAX , TRANSFORM_HEIGHTMAX )"		8680377	0					
ANR	8680530	Callee	store_ensure_image		8680377	0					
ANR	8680531	Identifier	store_ensure_image		8680377	0					
ANR	8680532	ArgumentList	& pm . this		8680377	1					
ANR	8680533	Argument	& pm . this		8680377	0					
ANR	8680534	UnaryOperationExpression	& pm . this		8680377	0					
ANR	8680535	UnaryOperator	&		8680377	0					
ANR	8680536	MemberAccess	pm . this		8680377	1					
ANR	8680537	Identifier	pm		8680377	0					
ANR	8680538	Identifier	this		8680377	1					
ANR	8680539	Argument	NULL		8680377	1					
ANR	8680540	Identifier	NULL		8680377	0					
ANR	8680541	Argument	2		8680377	2					
ANR	8680542	PrimaryExpression	2		8680377	0					
ANR	8680543	Argument	TRANSFORM_ROWMAX		8680377	3					
ANR	8680544	Identifier	TRANSFORM_ROWMAX		8680377	0					
ANR	8680545	Argument	TRANSFORM_HEIGHTMAX		8680377	4					
ANR	8680546	Identifier	TRANSFORM_HEIGHTMAX		8680377	0					
ANR	8680547	ExpressionStatement	"cp = safecat ( command , sizeof command , cp , ""pngvalid"" )"	11675:3:368411:368464	8680377	26	True				
ANR	8680548	AssignmentExpression	"cp = safecat ( command , sizeof command , cp , ""pngvalid"" )"		8680377	0		=			
ANR	8680549	Identifier	cp		8680377	0					
ANR	8680550	CallExpression	"safecat ( command , sizeof command , cp , ""pngvalid"" )"		8680377	1					
ANR	8680551	Callee	safecat		8680377	0					
ANR	8680552	Identifier	safecat		8680377	0					
ANR	8680553	ArgumentList	command		8680377	1					
ANR	8680554	Argument	command		8680377	0					
ANR	8680555	Identifier	command		8680377	0					
ANR	8680556	Argument	sizeof command		8680377	1					
ANR	8680557	SizeofExpression	sizeof command		8680377	0					
ANR	8680558	Sizeof	sizeof		8680377	0					
ANR	8680559	Identifier	command		8680377	1					
ANR	8680560	Argument	cp		8680377	2					
ANR	8680561	Identifier	cp		8680377	0					
ANR	8680562	Argument	"""pngvalid"""		8680377	3					
ANR	8680563	PrimaryExpression	"""pngvalid"""		8680377	0					
ANR	8680564	ExpressionStatement	pm . this . treat_warnings_as_errors = 1	11678:3:368508:368544	8680377	27	True				
ANR	8680565	AssignmentExpression	pm . this . treat_warnings_as_errors = 1		8680377	0		=			
ANR	8680566	MemberAccess	pm . this . treat_warnings_as_errors		8680377	0					
ANR	8680567	MemberAccess	pm . this		8680377	0					
ANR	8680568	Identifier	pm		8680377	0					
ANR	8680569	Identifier	this		8680377	1					
ANR	8680570	Identifier	treat_warnings_as_errors		8680377	1					
ANR	8680571	PrimaryExpression	1		8680377	1					
ANR	8680572	ExpressionStatement	pm . assume_16_bit_calculations = PNG_LIBPNG_VER >= 10700	11684:3:368736:368791	8680377	28	True				
ANR	8680573	AssignmentExpression	pm . assume_16_bit_calculations = PNG_LIBPNG_VER >= 10700		8680377	0		=			
ANR	8680574	MemberAccess	pm . assume_16_bit_calculations		8680377	0					
ANR	8680575	Identifier	pm		8680377	0					
ANR	8680576	Identifier	assume_16_bit_calculations		8680377	1					
ANR	8680577	RelationalExpression	PNG_LIBPNG_VER >= 10700		8680377	1		>=			
ANR	8680578	Identifier	PNG_LIBPNG_VER		8680377	0					
ANR	8680579	PrimaryExpression	10700		8680377	1					
ANR	8680580	ExpressionStatement	pm . calculations_use_input_precision = 1U	11691:3:368974:369014	8680377	29	True				
ANR	8680581	AssignmentExpression	pm . calculations_use_input_precision = 1U		8680377	0		=			
ANR	8680582	MemberAccess	pm . calculations_use_input_precision		8680377	0					
ANR	8680583	Identifier	pm		8680377	0					
ANR	8680584	Identifier	calculations_use_input_precision		8680377	1					
ANR	8680585	PrimaryExpression	1U		8680377	1					
ANR	8680586	ExpressionStatement	pm . gammas = gammas	11694:3:369051:369069	8680377	30	True				
ANR	8680587	AssignmentExpression	pm . gammas = gammas		8680377	0		=			
ANR	8680588	MemberAccess	pm . gammas		8680377	0					
ANR	8680589	Identifier	pm		8680377	0					
ANR	8680590	Identifier	gammas		8680377	1					
ANR	8680591	Identifier	gammas		8680377	1					
ANR	8680592	ExpressionStatement	pm . ngammas = ARRAY_SIZE ( gammas )	11695:3:369074:369105	8680377	31	True				
ANR	8680593	AssignmentExpression	pm . ngammas = ARRAY_SIZE ( gammas )		8680377	0		=			
ANR	8680594	MemberAccess	pm . ngammas		8680377	0					
ANR	8680595	Identifier	pm		8680377	0					
ANR	8680596	Identifier	ngammas		8680377	1					
ANR	8680597	CallExpression	ARRAY_SIZE ( gammas )		8680377	1					
ANR	8680598	Callee	ARRAY_SIZE		8680377	0					
ANR	8680599	Identifier	ARRAY_SIZE		8680377	0					
ANR	8680600	ArgumentList	gammas		8680377	1					
ANR	8680601	Argument	gammas		8680377	0					
ANR	8680602	Identifier	gammas		8680377	0					
ANR	8680603	ExpressionStatement	pm . ngamma_tests = 0	11696:3:369110:369129	8680377	32	True				
ANR	8680604	AssignmentExpression	pm . ngamma_tests = 0		8680377	0		=			
ANR	8680605	MemberAccess	pm . ngamma_tests		8680377	0					
ANR	8680606	Identifier	pm		8680377	0					
ANR	8680607	Identifier	ngamma_tests		8680377	1					
ANR	8680608	PrimaryExpression	0		8680377	1					
ANR	8680609	Statement	ifdef	11701:3:369291:369295	8680377	33	True				
ANR	8680610	Statement	PNG_WRITE_tRNS_SUPPORTED	11701:9:369297:369320	8680377	34	True				
ANR	8680611	ExpressionStatement	pm . test_tRNS = 1	11702:6:369328:369344	8680377	35	True				
ANR	8680612	AssignmentExpression	pm . test_tRNS = 1		8680377	0		=			
ANR	8680613	MemberAccess	pm . test_tRNS		8680377	0					
ANR	8680614	Identifier	pm		8680377	0					
ANR	8680615	Identifier	test_tRNS		8680377	1					
ANR	8680616	PrimaryExpression	1		8680377	1					
ANR	8680617	Statement	endif	11703:3:369349:369353	8680377	36	True				
ANR	8680618	ExpressionStatement	pm . test_lbg = PNG_LIBPNG_VER >= 10600	11704:3:369358:369395	8680377	37	True				
ANR	8680619	AssignmentExpression	pm . test_lbg = PNG_LIBPNG_VER >= 10600		8680377	0		=			
ANR	8680620	MemberAccess	pm . test_lbg		8680377	0					
ANR	8680621	Identifier	pm		8680377	0					
ANR	8680622	Identifier	test_lbg		8680377	1					
ANR	8680623	RelationalExpression	PNG_LIBPNG_VER >= 10600		8680377	1		>=			
ANR	8680624	Identifier	PNG_LIBPNG_VER		8680377	0					
ANR	8680625	PrimaryExpression	10600		8680377	1					
ANR	8680626	ExpressionStatement	pm . test_lbg_gamma_threshold = 1	11705:3:369400:369431	8680377	38	True				
ANR	8680627	AssignmentExpression	pm . test_lbg_gamma_threshold = 1		8680377	0		=			
ANR	8680628	MemberAccess	pm . test_lbg_gamma_threshold		8680377	0					
ANR	8680629	Identifier	pm		8680377	0					
ANR	8680630	Identifier	test_lbg_gamma_threshold		8680377	1					
ANR	8680631	PrimaryExpression	1		8680377	1					
ANR	8680632	ExpressionStatement	pm . test_lbg_gamma_transform = PNG_LIBPNG_VER >= 10600	11706:3:369436:369489	8680377	39	True				
ANR	8680633	AssignmentExpression	pm . test_lbg_gamma_transform = PNG_LIBPNG_VER >= 10600		8680377	0		=			
ANR	8680634	MemberAccess	pm . test_lbg_gamma_transform		8680377	0					
ANR	8680635	Identifier	pm		8680377	0					
ANR	8680636	Identifier	test_lbg_gamma_transform		8680377	1					
ANR	8680637	RelationalExpression	PNG_LIBPNG_VER >= 10600		8680377	1		>=			
ANR	8680638	Identifier	PNG_LIBPNG_VER		8680377	0					
ANR	8680639	PrimaryExpression	10600		8680377	1					
ANR	8680640	ExpressionStatement	pm . test_lbg_gamma_sbit = 1	11707:3:369494:369520	8680377	40	True				
ANR	8680641	AssignmentExpression	pm . test_lbg_gamma_sbit = 1		8680377	0		=			
ANR	8680642	MemberAccess	pm . test_lbg_gamma_sbit		8680377	0					
ANR	8680643	Identifier	pm		8680377	0					
ANR	8680644	Identifier	test_lbg_gamma_sbit		8680377	1					
ANR	8680645	PrimaryExpression	1		8680377	1					
ANR	8680646	ExpressionStatement	pm . test_lbg_gamma_composition = PNG_LIBPNG_VER >= 10700	11708:3:369525:369580	8680377	41	True				
ANR	8680647	AssignmentExpression	pm . test_lbg_gamma_composition = PNG_LIBPNG_VER >= 10700		8680377	0		=			
ANR	8680648	MemberAccess	pm . test_lbg_gamma_composition		8680377	0					
ANR	8680649	Identifier	pm		8680377	0					
ANR	8680650	Identifier	test_lbg_gamma_composition		8680377	1					
ANR	8680651	RelationalExpression	PNG_LIBPNG_VER >= 10700		8680377	1		>=			
ANR	8680652	Identifier	PNG_LIBPNG_VER		8680377	0					
ANR	8680653	PrimaryExpression	10700		8680377	1					
ANR	8680654	ExpressionStatement	pm . encodings = test_encodings	11711:3:369618:369647	8680377	42	True				
ANR	8680655	AssignmentExpression	pm . encodings = test_encodings		8680377	0		=			
ANR	8680656	MemberAccess	pm . encodings		8680377	0					
ANR	8680657	Identifier	pm		8680377	0					
ANR	8680658	Identifier	encodings		8680377	1					
ANR	8680659	Identifier	test_encodings		8680377	1					
ANR	8680660	ExpressionStatement	pm . nencodings = ARRAY_SIZE ( test_encodings )	11712:3:369652:369694	8680377	43	True				
ANR	8680661	AssignmentExpression	pm . nencodings = ARRAY_SIZE ( test_encodings )		8680377	0		=			
ANR	8680662	MemberAccess	pm . nencodings		8680377	0					
ANR	8680663	Identifier	pm		8680377	0					
ANR	8680664	Identifier	nencodings		8680377	1					
ANR	8680665	CallExpression	ARRAY_SIZE ( test_encodings )		8680377	1					
ANR	8680666	Callee	ARRAY_SIZE		8680377	0					
ANR	8680667	Identifier	ARRAY_SIZE		8680377	0					
ANR	8680668	ArgumentList	test_encodings		8680377	1					
ANR	8680669	Argument	test_encodings		8680377	0					
ANR	8680670	Identifier	test_encodings		8680377	0					
ANR	8680671	Statement	if	11714:3:369700:369701	8680377	44	True				
ANR	8680672	Statement	PNG_LIBPNG_VER	11714:6:369703:369716	8680377	45	True				
ANR	8680673	Statement	<	11714:21:369718:369718	8680377	46	True				
ANR	8680674	Statement	10700	11714:23:369720:369724	8680377	47	True				
ANR	8680675	ExpressionStatement	pm . sbitlow = 8U	11715:6:369732:369747	8680377	48	True				
ANR	8680676	AssignmentExpression	pm . sbitlow = 8U		8680377	0		=			
ANR	8680677	MemberAccess	pm . sbitlow		8680377	0					
ANR	8680678	Identifier	pm		8680377	0					
ANR	8680679	Identifier	sbitlow		8680377	1					
ANR	8680680	PrimaryExpression	8U		8680377	1					
ANR	8680681	ReturnType	int		8680377	1					
ANR	8680682	Identifier	main		8680377	2					
ANR	8680683	ParameterList	"int argc , char * * argv"		8680377	3					
ANR	8680684	Parameter	int argc	11623:9:366643:366650	8680377	0	True				
ANR	8680685	ParameterType	int		8680377	0					
ANR	8680686	Identifier	argc		8680377	1					
ANR	8680687	Parameter	char * * argv	11623:19:366653:366663	8680377	1	True				
ANR	8680688	ParameterType	char * *		8680377	0					
ANR	8680689	Identifier	argv		8680377	1					
ANR	8680690	CFGEntryNode	ENTRY		8680377		True				
ANR	8680691	CFGExitNode	EXIT		8680377		True				
ANR	8680692	Symbol	pm . nencodings		8680377						
ANR	8680693	Symbol	pm . this		8680377						
ANR	8680694	Symbol	pm . gammas		8680377						
ANR	8680695	Symbol	argv		8680377						
ANR	8680696	Symbol	pm . test_lbg		8680377						
ANR	8680697	Symbol	pm . test_lbg_gamma_threshold		8680377						
ANR	8680698	Symbol	FE_DIVBYZERO		8680377						
ANR	8680699	Symbol	pm . calculations_use_input_precision		8680377						
ANR	8680700	Symbol	test_encodings		8680377						
ANR	8680701	Symbol	safecat		8680377						
ANR	8680702	Symbol	signal_handler		8680377						
ANR	8680703	Symbol	pm . this . treat_warnings_as_errors		8680377						
ANR	8680704	Symbol	pm . test_lbg_gamma_composition		8680377						
ANR	8680705	Symbol	pm . encodings		8680377						
ANR	8680706	Symbol	pm . sbitlow		8680377						
ANR	8680707	Symbol	SIGTERM		8680377						
ANR	8680708	Symbol	argc		8680377						
ANR	8680709	Symbol	summary		8680377						
ANR	8680710	Symbol	PNG_LIBPNG_VER		8680377						
ANR	8680711	Symbol	ARRAY_SIZE		8680377						
ANR	8680712	Symbol	pm . ngamma_tests		8680377						
ANR	8680713	Symbol	gammas		8680377						
ANR	8680714	Symbol	SIGFPE		8680377						
ANR	8680715	Symbol	NULL		8680377						
ANR	8680716	Symbol	pm . test_lbg_gamma_sbit		8680377						
ANR	8680717	Symbol	pm . assume_16_bit_calculations		8680377						
ANR	8680718	Symbol	& pm		8680377						
ANR	8680719	Symbol	FE_INVALID		8680377						
ANR	8680720	Symbol	touch		8680377						
ANR	8680721	Symbol	& pm . this		8680377						
ANR	8680722	Symbol	memstats		8680377						
ANR	8680723	Symbol	SIGABRT		8680377						
ANR	8680724	Symbol	TRANSFORM_ROWMAX		8680377						
ANR	8680725	Symbol	cp		8680377						
ANR	8680726	Symbol	command		8680377						
ANR	8680727	Symbol	pm . test_tRNS		8680377						
ANR	8680728	Symbol	SIGILL		8680377						
ANR	8680729	Symbol	pm . test_lbg_gamma_transform		8680377						
ANR	8680730	Symbol	FE_OVERFLOW		8680377						
ANR	8680731	Symbol	SIGSEGV		8680377						
ANR	8680732	Symbol	SIGINT		8680377						
ANR	8680733	Symbol	TRANSFORM_HEIGHTMAX		8680377						
ANR	8680734	Symbol	pm . ngammas		8680377						
ANR	8680735	Symbol	pm		8680377						
ANR	8680736	Function	main	12223:0:385677:385840							
ANR	8680737	FunctionDef	main ()		8680736	0					
ANR	8680738	CompoundStatement		12224:0:385692:385840	8680736	0					
ANR	8680739	ExpressionStatement	"fprintf ( stderr , ""pngvalid: no low level write support in libpng, all tests skipped\\n"" )"	12225:3:385697:385789	8680736	0	True				
ANR	8680740	CallExpression	"fprintf ( stderr , ""pngvalid: no low level write support in libpng, all tests skipped\\n"" )"		8680736	0					
ANR	8680741	Callee	fprintf		8680736	0					
ANR	8680742	Identifier	fprintf		8680736	0					
ANR	8680743	ArgumentList	stderr		8680736	1					
ANR	8680744	Argument	stderr		8680736	0					
ANR	8680745	Identifier	stderr		8680736	0					
ANR	8680746	Argument	"""pngvalid: no low level write support in libpng, all tests skipped\\n"""		8680736	1					
ANR	8680747	PrimaryExpression	"""pngvalid: no low level write support in libpng, all tests skipped\\n"""		8680736	0					
ANR	8680748	ReturnStatement	return SKIP ;	12228:3:385827:385838	8680736	1	True				
ANR	8680749	Identifier	SKIP		8680736	0					
ANR	8680750	ReturnType	int		8680736	1					
ANR	8680751	Identifier	main		8680736	2					
ANR	8680752	ParameterList			8680736	3					
ANR	8680753	CFGEntryNode	ENTRY		8680736		True				
ANR	8680754	CFGExitNode	EXIT		8680736		True				
ANR	8680755	Symbol	SKIP		8680736						
ANR	8680756	Symbol	stderr		8680736						
