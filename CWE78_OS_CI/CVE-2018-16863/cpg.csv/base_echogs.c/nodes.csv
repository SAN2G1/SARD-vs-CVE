command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	138019	File	data/converged/CVE-2018-16863_ghostpdl/base_echogs.c								
ANR	138020	DeclStmt									
ANR	138021	Decl							extern int	"extern int ( int , FILE * )"	fputc
ANR	138022	Decl							extern int	"extern int ( const char * , FILE * )"	fputs
ANR	138023	DeclStmt									
ANR	138024	Decl							int	"int ( int , FILE * )"	hputc
ANR	138025	Decl							int	"int ( const char * , FILE * )"	hputs
ANR	138026	Function	main	84:0:3267:11286							
ANR	138027	FunctionDef	"main (int argc , char * argv [ ])"		138026	0					
ANR	138028	CompoundStatement		86:0:3300:11286	138026	0					
ANR	138029	IdentifierDeclStatement	FILE * out = stdout ;	87:4:3306:3324	138026	0	True				
ANR	138030	IdentifierDecl	* out = stdout		138026	0					
ANR	138031	IdentifierDeclType	FILE *		138026	0					
ANR	138032	Identifier	out		138026	1					
ANR	138033	AssignmentExpression	* out = stdout		138026	2		=			
ANR	138034	Identifier	stdout		138026	0					
ANR	138035	Identifier	stdout		138026	1					
ANR	138036	IdentifierDeclStatement	FILE * in = 0 ;	93:4:3549:3561	138026	1	True				
ANR	138037	IdentifierDecl	* in = 0		138026	0					
ANR	138038	IdentifierDeclType	FILE *		138026	0					
ANR	138039	Identifier	in		138026	1					
ANR	138040	AssignmentExpression	* in = 0		138026	2		=			
ANR	138041	Identifier	in		138026	0					
ANR	138042	PrimaryExpression	0		138026	1					
ANR	138043	IdentifierDeclStatement	"const char * extn = """" ;"	94:4:3567:3588	138026	2	True				
ANR	138044	IdentifierDecl	"* extn = """""		138026	0					
ANR	138045	IdentifierDeclType	const char *		138026	0					
ANR	138046	Identifier	extn		138026	1					
ANR	138047	AssignmentExpression	"* extn = """""		138026	2		=			
ANR	138048	Identifier	extn		138026	0					
ANR	138049	PrimaryExpression	""""""		138026	1					
ANR	138050	IdentifierDeclStatement	char fmode [ 5 ] = { 0 } ;	95:4:3594:3613	138026	3	True				
ANR	138051	IdentifierDecl	fmode [ 5 ] = { 0 }		138026	0					
ANR	138052	IdentifierDeclType	char [ 5 ]		138026	0					
ANR	138053	Identifier	fmode		138026	1					
ANR	138054	PrimaryExpression	5		138026	2					
ANR	138055	AssignmentExpression	fmode [ 5 ] = { 0 }		138026	3		=			
ANR	138056	Identifier	fmode		138026	0					
ANR	138057	InitializerList	0		138026	1					
ANR	138058	PrimaryExpression	0		138026	0					
ANR	138059	Statement	define	96:1:3616:3621	138026	4	True				
ANR	138060	Statement	FNSIZE	96:8:3623:3628	138026	5	True				
ANR	138061	Statement	4096	96:15:3630:3633	138026	6	True				
ANR	138062	IdentifierDeclStatement	char * fnparam = NULL ;	97:4:3639:3659	138026	7	True				
ANR	138063	IdentifierDecl	* fnparam = NULL		138026	0					
ANR	138064	IdentifierDeclType	char *		138026	0					
ANR	138065	Identifier	fnparam		138026	1					
ANR	138066	AssignmentExpression	* fnparam = NULL		138026	2		=			
ANR	138067	Identifier	NULL		138026	0					
ANR	138068	Identifier	NULL		138026	1					
ANR	138069	IdentifierDeclStatement	char fname [ FNSIZE ] ;	98:4:3707:3725	138026	8	True				
ANR	138070	IdentifierDecl	fname [ FNSIZE ]		138026	0					
ANR	138071	IdentifierDeclType	char [ FNSIZE ]		138026	0					
ANR	138072	Identifier	fname		138026	1					
ANR	138073	Identifier	FNSIZE		138026	2					
ANR	138074	IdentifierDeclStatement	int newline = 1 ;	99:4:3731:3746	138026	9	True				
ANR	138075	IdentifierDecl	newline = 1		138026	0					
ANR	138076	IdentifierDeclType	int		138026	0					
ANR	138077	Identifier	newline		138026	1					
ANR	138078	AssignmentExpression	newline = 1		138026	2		=			
ANR	138079	Identifier	newline		138026	0					
ANR	138080	PrimaryExpression	1		138026	1					
ANR	138081	IdentifierDeclStatement	int interact = 0 ;	100:4:3752:3768	138026	10	True				
ANR	138082	IdentifierDecl	interact = 0		138026	0					
ANR	138083	IdentifierDeclType	int		138026	0					
ANR	138084	Identifier	interact		138026	1					
ANR	138085	AssignmentExpression	interact = 0		138026	2		=			
ANR	138086	Identifier	interact		138026	0					
ANR	138087	PrimaryExpression	0		138026	1					
ANR	138088	IdentifierDeclStatement	"int ( * eputc ) ( int , FILE * ) = fputc ;"	101:4:3774:3807	138026	11	True				
ANR	138089	IdentifierDecl	"( * eputc ) ( int , FILE * ) = fputc"		138026	0					
ANR	138090	IdentifierDeclType	"int ( * ) ( int , FILE * )"		138026	0					
ANR	138091	Identifier	eputc		138026	1					
ANR	138092	AssignmentExpression	"( * eputc ) ( int , FILE * ) = fputc"		138026	2		=			
ANR	138093	Identifier	fputc		138026	0					
ANR	138094	Identifier	fputc		138026	1					
ANR	138095	IdentifierDeclStatement	"int ( * eputs ) ( const char * , FILE * ) = fputs ;"	102:4:3813:3855	138026	12	True				
ANR	138096	IdentifierDecl	"( * eputs ) ( const char * , FILE * ) = fputs"		138026	0					
ANR	138097	IdentifierDeclType	"int ( * ) ( const char * , FILE * )"		138026	0					
ANR	138098	Identifier	eputs		138026	1					
ANR	138099	AssignmentExpression	"( * eputs ) ( const char * , FILE * ) = fputs"		138026	2		=			
ANR	138100	Identifier	fputs		138026	0					
ANR	138101	Identifier	fputs		138026	1					
ANR	138102	Statement	define	103:1:3858:3863	138026	13	True				
ANR	138103	Statement	LINESIZE	103:8:3865:3872	138026	14	True				
ANR	138104	Statement	1000	103:17:3874:3877	138026	15	True				
ANR	138105	Statement	+	103:21:3878:3878	138026	16	True				
ANR	138106	Statement	FNSIZE	103:22:3879:3884	138026	17	True				
ANR	138107	Statement	define	104:1:3887:3892	138026	18	True				
ANR	138108	Statement	LINESIZESLOP	104:8:3894:3905	138026	19	True				
ANR	138109	Statement	LINESIZE	104:21:3907:3914	138026	20	True				
ANR	138110	Statement	+	104:30:3916:3916	138026	21	True				
ANR	138111	Statement	10	104:32:3918:3919	138026	22	True				
ANR	138112	IdentifierDeclStatement	char line [ LINESIZESLOP ] ;	105:4:3925:3948	138026	23	True				
ANR	138113	IdentifierDecl	line [ LINESIZESLOP ]		138026	0					
ANR	138114	IdentifierDeclType	char [ LINESIZESLOP ]		138026	0					
ANR	138115	Identifier	line		138026	1					
ANR	138116	Identifier	LINESIZESLOP		138026	2					
ANR	138117	IdentifierDeclStatement	"char sw = 0 , sp = 0 , hexx = 0 ;"	106:4:3954:3983	138026	24	True				
ANR	138118	IdentifierDecl	sw = 0		138026	0					
ANR	138119	IdentifierDeclType	char		138026	0					
ANR	138120	Identifier	sw		138026	1					
ANR	138121	AssignmentExpression	sw = 0		138026	2		=			
ANR	138122	Identifier	sw		138026	0					
ANR	138123	PrimaryExpression	0		138026	1					
ANR	138124	IdentifierDecl	sp = 0		138026	1					
ANR	138125	IdentifierDeclType	char		138026	0					
ANR	138126	Identifier	sp		138026	1					
ANR	138127	AssignmentExpression	sp = 0		138026	2		=			
ANR	138128	Identifier	sp		138026	0					
ANR	138129	PrimaryExpression	0		138026	1					
ANR	138130	IdentifierDecl	hexx = 0		138026	2					
ANR	138131	IdentifierDeclType	char		138026	0					
ANR	138132	Identifier	hexx		138026	1					
ANR	138133	AssignmentExpression	hexx = 0		138026	2		=			
ANR	138134	Identifier	hexx		138026	0					
ANR	138135	PrimaryExpression	0		138026	1					
ANR	138136	IdentifierDeclStatement	char * * argp = argv + 1 ;	107:4:3989:4011	138026	25	True				
ANR	138137	IdentifierDecl	* * argp = argv + 1		138026	0					
ANR	138138	IdentifierDeclType	char * *		138026	0					
ANR	138139	Identifier	argp		138026	1					
ANR	138140	AssignmentExpression	* * argp = argv + 1		138026	2		=			
ANR	138141	Identifier	argp		138026	0					
ANR	138142	AdditiveExpression	argv + 1		138026	1		+			
ANR	138143	Identifier	argv		138026	0					
ANR	138144	PrimaryExpression	1		138026	1					
ANR	138145	IdentifierDeclStatement	int nargs = argc - 1 ;	108:4:4017:4037	138026	26	True				
ANR	138146	IdentifierDecl	nargs = argc - 1		138026	0					
ANR	138147	IdentifierDeclType	int		138026	0					
ANR	138148	Identifier	nargs		138026	1					
ANR	138149	AssignmentExpression	nargs = argc - 1		138026	2		=			
ANR	138150	Identifier	nargs		138026	0					
ANR	138151	AdditiveExpression	argc - 1		138026	1		-			
ANR	138152	Identifier	argc		138026	0					
ANR	138153	PrimaryExpression	1		138026	1					
ANR	138154	IfStatement	"if ( nargs > 0 && ! strcmp ( * argp , ""-e"" ) )"		138026	27					
ANR	138155	Condition	"nargs > 0 && ! strcmp ( * argp , ""-e"" )"	110:8:4048:4080	138026	0	True				
ANR	138156	AndExpression	"nargs > 0 && ! strcmp ( * argp , ""-e"" )"		138026	0		&&			
ANR	138157	RelationalExpression	nargs > 0		138026	0		>			
ANR	138158	Identifier	nargs		138026	0					
ANR	138159	PrimaryExpression	0		138026	1					
ANR	138160	UnaryOperationExpression	"! strcmp ( * argp , ""-e"" )"		138026	1					
ANR	138161	UnaryOperator	!		138026	0					
ANR	138162	CallExpression	"strcmp ( * argp , ""-e"" )"		138026	1					
ANR	138163	Callee	strcmp		138026	0					
ANR	138164	Identifier	strcmp		138026	0					
ANR	138165	ArgumentList	* argp		138026	1					
ANR	138166	Argument	* argp		138026	0					
ANR	138167	UnaryOperationExpression	* argp		138026	0					
ANR	138168	UnaryOperator	*		138026	0					
ANR	138169	Identifier	argp		138026	1					
ANR	138170	Argument	"""-e"""		138026	1					
ANR	138171	PrimaryExpression	"""-e"""		138026	0					
ANR	138172	CompoundStatement		25:43:782:782	138026	1					
ANR	138173	IfStatement	if ( nargs < 2 )		138026	0					
ANR	138174	Condition	nargs < 2	111:12:4097:4105	138026	0	True				
ANR	138175	RelationalExpression	nargs < 2		138026	0		<			
ANR	138176	Identifier	nargs		138026	0					
ANR	138177	PrimaryExpression	2		138026	1					
ANR	138178	ReturnStatement	return 1 ;	112:12:4120:4128	138026	1	True				
ANR	138179	PrimaryExpression	1		138026	0					
ANR	138180	ExpressionStatement	extn = argp [ 1 ]	113:8:4138:4152	138026	1	True				
ANR	138181	AssignmentExpression	extn = argp [ 1 ]		138026	0		=			
ANR	138182	Identifier	extn		138026	0					
ANR	138183	ArrayIndexing	argp [ 1 ]		138026	1					
ANR	138184	Identifier	argp		138026	0					
ANR	138185	PrimaryExpression	1		138026	1					
ANR	138186	ExpressionStatement	"argp += 2 , nargs -= 2"	114:8:4162:4183	138026	2	True				
ANR	138187	Expression	"argp += 2 , nargs -= 2"		138026	0					
ANR	138188	AssignmentExpression	argp += 2		138026	0		+=			
ANR	138189	Identifier	argp		138026	0					
ANR	138190	PrimaryExpression	2		138026	1					
ANR	138191	AssignmentExpression	nargs -= 2		138026	1		-=			
ANR	138192	Identifier	nargs		138026	0					
ANR	138193	PrimaryExpression	2		138026	1					
ANR	138194	IfStatement	if ( nargs > 0 && ( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' ) )		138026	28					
ANR	138195	Condition	nargs > 0 && ( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' )	116:8:4199:4280	138026	0	True				
ANR	138196	AndExpression	nargs > 0 && ( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' )		138026	0		&&			
ANR	138197	RelationalExpression	nargs > 0		138026	0		>			
ANR	138198	Identifier	nargs		138026	0					
ANR	138199	PrimaryExpression	0		138026	1					
ANR	138200	AndExpression	( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' )		138026	1		&&			
ANR	138201	EqualityExpression	( * argp ) [ 0 ] == '-'		138026	0		==			
ANR	138202	ArrayIndexing	( * argp ) [ 0 ]		138026	0					
ANR	138203	UnaryOperationExpression	* argp		138026	0					
ANR	138204	UnaryOperator	*		138026	0					
ANR	138205	Identifier	argp		138026	1					
ANR	138206	PrimaryExpression	0		138026	1					
ANR	138207	PrimaryExpression	'-'		138026	1					
ANR	138208	OrExpression	( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a'		138026	1		||			
ANR	138209	EqualityExpression	( * argp ) [ 1 ] == 'w'		138026	0		==			
ANR	138210	ArrayIndexing	( * argp ) [ 1 ]		138026	0					
ANR	138211	UnaryOperationExpression	* argp		138026	0					
ANR	138212	UnaryOperator	*		138026	0					
ANR	138213	Identifier	argp		138026	1					
ANR	138214	PrimaryExpression	1		138026	1					
ANR	138215	PrimaryExpression	'w'		138026	1					
ANR	138216	EqualityExpression	( * argp ) [ 1 ] == 'a'		138026	1		==			
ANR	138217	ArrayIndexing	( * argp ) [ 1 ]		138026	0					
ANR	138218	UnaryOperationExpression	* argp		138026	0					
ANR	138219	UnaryOperator	*		138026	0					
ANR	138220	Identifier	argp		138026	1					
ANR	138221	PrimaryExpression	1		138026	1					
ANR	138222	PrimaryExpression	'a'		138026	1					
ANR	138223	CompoundStatement		35:8:1037:1042	138026	1					
ANR	138224	IdentifierDeclStatement	size_t len = strlen ( * argp ) ;	119:8:4302:4328	138026	0	True				
ANR	138225	IdentifierDecl	len = strlen ( * argp )		138026	0					
ANR	138226	IdentifierDeclType	size_t		138026	0					
ANR	138227	Identifier	len		138026	1					
ANR	138228	AssignmentExpression	len = strlen ( * argp )		138026	2		=			
ANR	138229	Identifier	len		138026	0					
ANR	138230	CallExpression	strlen ( * argp )		138026	1					
ANR	138231	Callee	strlen		138026	0					
ANR	138232	Identifier	strlen		138026	0					
ANR	138233	ArgumentList	* argp		138026	1					
ANR	138234	Argument	* argp		138026	0					
ANR	138235	UnaryOperationExpression	* argp		138026	0					
ANR	138236	UnaryOperator	*		138026	0					
ANR	138237	Identifier	argp		138026	1					
ANR	138238	IdentifierDeclStatement	int i ;	120:8:4338:4343	138026	1	True				
ANR	138239	IdentifierDecl	i		138026	0					
ANR	138240	IdentifierDeclType	int		138026	0					
ANR	138241	Identifier	i		138026	1					
ANR	138242	IfStatement	if ( len > 4 )		138026	2					
ANR	138243	Condition	len > 4	122:12:4358:4364	138026	0	True				
ANR	138244	RelationalExpression	len > 4		138026	0		>			
ANR	138245	Identifier	len		138026	0					
ANR	138246	PrimaryExpression	4		138026	1					
ANR	138247	ReturnStatement	return 1 ;	123:12:4379:4387	138026	1	True				
ANR	138248	PrimaryExpression	1		138026	0					
ANR	138249	ForStatement	for ( i = 1 ; i < nargs ; i ++ )		138026	3					
ANR	138250	ForInit	i = 1 ;	124:13:4402:4407	138026	0	True				
ANR	138251	AssignmentExpression	i = 1		138026	0		=			
ANR	138252	Identifier	i		138026	0					
ANR	138253	PrimaryExpression	1		138026	1					
ANR	138254	Condition	i < nargs	124:20:4409:4417	138026	1	True				
ANR	138255	RelationalExpression	i < nargs		138026	0		<			
ANR	138256	Identifier	i		138026	0					
ANR	138257	Identifier	nargs		138026	1					
ANR	138258	PostIncDecOperationExpression	i ++	124:31:4420:4422	138026	2	True				
ANR	138259	Identifier	i		138026	0					
ANR	138260	IncDec	++		138026	1					
ANR	138261	IfStatement	if ( argp [ i ] [ 0 ] != '-' )		138026	3					
ANR	138262	Condition	argp [ i ] [ 0 ] != '-'	125:16:4441:4457	138026	0	True				
ANR	138263	EqualityExpression	argp [ i ] [ 0 ] != '-'		138026	0		!=			
ANR	138264	ArrayIndexing	argp [ i ] [ 0 ]		138026	0					
ANR	138265	ArrayIndexing	argp [ i ]		138026	0					
ANR	138266	Identifier	argp		138026	0					
ANR	138267	Identifier	i		138026	1					
ANR	138268	PrimaryExpression	0		138026	1					
ANR	138269	PrimaryExpression	'-'		138026	1					
ANR	138270	BreakStatement	break ;	126:16:4476:4481	138026	1	True				
ANR	138271	IfStatement	if ( i == nargs )		138026	4					
ANR	138272	Condition	i == nargs	127:12:4495:4504	138026	0	True				
ANR	138273	EqualityExpression	i == nargs		138026	0		==			
ANR	138274	Identifier	i		138026	0					
ANR	138275	Identifier	nargs		138026	1					
ANR	138276	ReturnStatement	return 1 ;	128:12:4519:4527	138026	1	True				
ANR	138277	PrimaryExpression	1		138026	0					
ANR	138278	ExpressionStatement	fnparam = argp [ i ]	129:8:4537:4554	138026	5	True				
ANR	138279	AssignmentExpression	fnparam = argp [ i ]		138026	0		=			
ANR	138280	Identifier	fnparam		138026	0					
ANR	138281	ArrayIndexing	argp [ i ]		138026	1					
ANR	138282	Identifier	argp		138026	0					
ANR	138283	Identifier	i		138026	1					
ANR	138284	ExpressionStatement	"strncpy ( fmode , * argp + 1 , 4 )"	130:8:4564:4592	138026	6	True				
ANR	138285	CallExpression	"strncpy ( fmode , * argp + 1 , 4 )"		138026	0					
ANR	138286	Callee	strncpy		138026	0					
ANR	138287	Identifier	strncpy		138026	0					
ANR	138288	ArgumentList	fmode		138026	1					
ANR	138289	Argument	fmode		138026	0					
ANR	138290	Identifier	fmode		138026	0					
ANR	138291	Argument	* argp + 1		138026	1					
ANR	138292	AdditiveExpression	* argp + 1		138026	0		+			
ANR	138293	UnaryOperationExpression	* argp		138026	0					
ANR	138294	UnaryOperator	*		138026	0					
ANR	138295	Identifier	argp		138026	1					
ANR	138296	PrimaryExpression	1		138026	1					
ANR	138297	Argument	4		138026	2					
ANR	138298	PrimaryExpression	4		138026	0					
ANR	138299	IfStatement	if ( strlen ( fnparam ) + strlen ( extn ) >= FNSIZE )		138026	7					
ANR	138300	Condition	strlen ( fnparam ) + strlen ( extn ) >= FNSIZE	131:12:4606:4645	138026	0	True				
ANR	138301	RelationalExpression	strlen ( fnparam ) + strlen ( extn ) >= FNSIZE		138026	0		>=			
ANR	138302	AdditiveExpression	strlen ( fnparam ) + strlen ( extn )		138026	0		+			
ANR	138303	CallExpression	strlen ( fnparam )		138026	0					
ANR	138304	Callee	strlen		138026	0					
ANR	138305	Identifier	strlen		138026	0					
ANR	138306	ArgumentList	fnparam		138026	1					
ANR	138307	Argument	fnparam		138026	0					
ANR	138308	Identifier	fnparam		138026	0					
ANR	138309	CallExpression	strlen ( extn )		138026	1					
ANR	138310	Callee	strlen		138026	0					
ANR	138311	Identifier	strlen		138026	0					
ANR	138312	ArgumentList	extn		138026	1					
ANR	138313	Argument	extn		138026	0					
ANR	138314	Identifier	extn		138026	0					
ANR	138315	Identifier	FNSIZE		138026	1					
ANR	138316	CompoundStatement		46:54:1347:1347	138026	1					
ANR	138317	ExpressionStatement	"fputs ( ""File param size exceeded\\n"" , stderr )"	132:12:4662:4705	138026	0	True				
ANR	138318	CallExpression	"fputs ( ""File param size exceeded\\n"" , stderr )"		138026	0					
ANR	138319	Callee	fputs		138026	0					
ANR	138320	Identifier	fputs		138026	0					
ANR	138321	ArgumentList	"""File param size exceeded\\n"""		138026	1					
ANR	138322	Argument	"""File param size exceeded\\n"""		138026	0					
ANR	138323	PrimaryExpression	"""File param size exceeded\\n"""		138026	0					
ANR	138324	Argument	stderr		138026	1					
ANR	138325	Identifier	stderr		138026	0					
ANR	138326	ReturnStatement	return 1 ;	133:12:4719:4727	138026	1	True				
ANR	138327	PrimaryExpression	1		138026	0					
ANR	138328	ExpressionStatement	"strcpy ( fname , fnparam )"	135:8:4747:4769	138026	8	True				
ANR	138329	CallExpression	"strcpy ( fname , fnparam )"		138026	0					
ANR	138330	Callee	strcpy		138026	0					
ANR	138331	Identifier	strcpy		138026	0					
ANR	138332	ArgumentList	fname		138026	1					
ANR	138333	Argument	fname		138026	0					
ANR	138334	Identifier	fname		138026	0					
ANR	138335	Argument	fnparam		138026	1					
ANR	138336	Identifier	fnparam		138026	0					
ANR	138337	ExpressionStatement	"strcat ( fname , extn )"	136:8:4779:4798	138026	9	True				
ANR	138338	CallExpression	"strcat ( fname , extn )"		138026	0					
ANR	138339	Callee	strcat		138026	0					
ANR	138340	Identifier	strcat		138026	0					
ANR	138341	ArgumentList	fname		138026	1					
ANR	138342	Argument	fname		138026	0					
ANR	138343	Identifier	fname		138026	0					
ANR	138344	Argument	extn		138026	1					
ANR	138345	Identifier	extn		138026	0					
ANR	138346	IfStatement	if ( fmode [ len - 2 ] == '-' )		138026	10					
ANR	138347	Condition	fmode [ len - 2 ] == '-'	137:12:4812:4832	138026	0	True				
ANR	138348	EqualityExpression	fmode [ len - 2 ] == '-'		138026	0		==			
ANR	138349	ArrayIndexing	fmode [ len - 2 ]		138026	0					
ANR	138350	Identifier	fmode		138026	0					
ANR	138351	AdditiveExpression	len - 2		138026	1		-			
ANR	138352	Identifier	len		138026	0					
ANR	138353	PrimaryExpression	2		138026	1					
ANR	138354	PrimaryExpression	'-'		138026	1					
ANR	138355	CompoundStatement		57:19:1735:1760	138026	1					
ANR	138356	Statement	static	142:12:5029:5034	138026	0	True				
ANR	138357	IdentifierDeclStatement	"char dash [ 2 ] = { '-' , 0 } ;"	142:19:5036:5061	138026	1	True				
ANR	138358	IdentifierDecl	"dash [ 2 ] = { '-' , 0 }"		138026	0					
ANR	138359	IdentifierDeclType	char [ 2 ]		138026	0					
ANR	138360	Identifier	dash		138026	1					
ANR	138361	PrimaryExpression	2		138026	2					
ANR	138362	AssignmentExpression	"dash [ 2 ] = { '-' , 0 }"		138026	3		=			
ANR	138363	Identifier	dash		138026	0					
ANR	138364	InitializerList	'-'		138026	1					
ANR	138365	PrimaryExpression	'-'		138026	0					
ANR	138366	PrimaryExpression	0		138026	1					
ANR	138367	ExpressionStatement	fmode [ len - 2 ] = 0	144:12:5076:5094	138026	2	True				
ANR	138368	AssignmentExpression	fmode [ len - 2 ] = 0		138026	0		=			
ANR	138369	ArrayIndexing	fmode [ len - 2 ]		138026	0					
ANR	138370	Identifier	fmode		138026	0					
ANR	138371	AdditiveExpression	len - 2		138026	1		-			
ANR	138372	Identifier	len		138026	0					
ANR	138373	PrimaryExpression	2		138026	1					
ANR	138374	PrimaryExpression	0		138026	1					
ANR	138375	ExpressionStatement	argp [ i ] = dash	145:12:5108:5122	138026	3	True				
ANR	138376	AssignmentExpression	argp [ i ] = dash		138026	0		=			
ANR	138377	ArrayIndexing	argp [ i ]		138026	0					
ANR	138378	Identifier	argp		138026	0					
ANR	138379	Identifier	i		138026	1					
ANR	138380	Identifier	dash		138026	1					
ANR	138381	ExpressionStatement	"argp ++ , nargs --"	146:12:5136:5151	138026	4	True				
ANR	138382	Expression	"argp ++ , nargs --"		138026	0					
ANR	138383	PostIncDecOperationExpression	argp ++		138026	0					
ANR	138384	Identifier	argp		138026	0					
ANR	138385	IncDec	++		138026	1					
ANR	138386	PostIncDecOperationExpression	nargs --		138026	1					
ANR	138387	Identifier	nargs		138026	0					
ANR	138388	IncDec	--		138026	1					
ANR	138389	ElseStatement	else		138026	0					
ANR	138390	CompoundStatement		62:15:1867:1867	138026	0					
ANR	138391	ForStatement	for ( ; i > 1 ; i -- )		138026	0					
ANR	138392	Condition	i > 1	148:19:5189:5193	138026	0	True				
ANR	138393	RelationalExpression	i > 1		138026	0		>			
ANR	138394	Identifier	i		138026	0					
ANR	138395	PrimaryExpression	1		138026	1					
ANR	138396	PostIncDecOperationExpression	i --	148:26:5196:5198	138026	1	True				
ANR	138397	Identifier	i		138026	0					
ANR	138398	IncDec	--		138026	1					
ANR	138399	ExpressionStatement	argp [ i ] = argp [ i - 1 ]	149:16:5217:5238	138026	2	True				
ANR	138400	AssignmentExpression	argp [ i ] = argp [ i - 1 ]		138026	0		=			
ANR	138401	ArrayIndexing	argp [ i ]		138026	0					
ANR	138402	Identifier	argp		138026	0					
ANR	138403	Identifier	i		138026	1					
ANR	138404	ArrayIndexing	argp [ i - 1 ]		138026	1					
ANR	138405	Identifier	argp		138026	0					
ANR	138406	AdditiveExpression	i - 1		138026	1		-			
ANR	138407	Identifier	i		138026	0					
ANR	138408	PrimaryExpression	1		138026	1					
ANR	138409	ExpressionStatement	"argp += 2 , nargs -= 2"	150:12:5252:5273	138026	1	True				
ANR	138410	Expression	"argp += 2 , nargs -= 2"		138026	0					
ANR	138411	AssignmentExpression	argp += 2		138026	0		+=			
ANR	138412	Identifier	argp		138026	0					
ANR	138413	PrimaryExpression	2		138026	1					
ANR	138414	AssignmentExpression	nargs -= 2		138026	1		-=			
ANR	138415	Identifier	nargs		138026	0					
ANR	138416	PrimaryExpression	2		138026	1					
ANR	138417	ElseStatement	else		138026	0					
ANR	138418	CompoundStatement		67:11:1995:1995	138026	0					
ANR	138419	ExpressionStatement	"strcpy ( fname , """" )"	153:8:5306:5323	138026	0	True				
ANR	138420	CallExpression	"strcpy ( fname , """" )"		138026	0					
ANR	138421	Callee	strcpy		138026	0					
ANR	138422	Identifier	strcpy		138026	0					
ANR	138423	ArgumentList	fname		138026	1					
ANR	138424	Argument	fname		138026	0					
ANR	138425	Identifier	fname		138026	0					
ANR	138426	Argument	""""""		138026	1					
ANR	138427	PrimaryExpression	""""""		138026	0					
ANR	138428	ExpressionStatement	fnparam = fname	154:8:5333:5348	138026	1	True				
ANR	138429	AssignmentExpression	fnparam = fname		138026	0		=			
ANR	138430	Identifier	fnparam		138026	0					
ANR	138431	Identifier	fname		138026	1					
ANR	138432	IfStatement	"if ( nargs > 0 && ! strcmp ( * argp , ""-h"" ) )"		138026	29					
ANR	138433	Condition	"nargs > 0 && ! strcmp ( * argp , ""-h"" )"	156:8:5394:5426	138026	0	True				
ANR	138434	AndExpression	"nargs > 0 && ! strcmp ( * argp , ""-h"" )"		138026	0		&&			
ANR	138435	RelationalExpression	nargs > 0		138026	0		>			
ANR	138436	Identifier	nargs		138026	0					
ANR	138437	PrimaryExpression	0		138026	1					
ANR	138438	UnaryOperationExpression	"! strcmp ( * argp , ""-h"" )"		138026	1					
ANR	138439	UnaryOperator	!		138026	0					
ANR	138440	CallExpression	"strcmp ( * argp , ""-h"" )"		138026	1					
ANR	138441	Callee	strcmp		138026	0					
ANR	138442	Identifier	strcmp		138026	0					
ANR	138443	ArgumentList	* argp		138026	1					
ANR	138444	Argument	* argp		138026	0					
ANR	138445	UnaryOperationExpression	* argp		138026	0					
ANR	138446	UnaryOperator	*		138026	0					
ANR	138447	Identifier	argp		138026	1					
ANR	138448	Argument	"""-h"""		138026	1					
ANR	138449	PrimaryExpression	"""-h"""		138026	0					
ANR	138450	CompoundStatement		71:43:2128:2128	138026	1					
ANR	138451	ExpressionStatement	"eputc = hputc , eputs = hputs"	157:8:5439:5467	138026	0	True				
ANR	138452	Expression	"eputc = hputc , eputs = hputs"		138026	0					
ANR	138453	AssignmentExpression	eputc = hputc		138026	0		=			
ANR	138454	Identifier	eputc		138026	0					
ANR	138455	Identifier	hputc		138026	1					
ANR	138456	AssignmentExpression	eputs = hputs		138026	1		=			
ANR	138457	Identifier	eputs		138026	0					
ANR	138458	Identifier	hputs		138026	1					
ANR	138459	ExpressionStatement	"argp ++ , nargs --"	158:8:5477:5492	138026	1	True				
ANR	138460	Expression	"argp ++ , nargs --"		138026	0					
ANR	138461	PostIncDecOperationExpression	argp ++		138026	0					
ANR	138462	Identifier	argp		138026	0					
ANR	138463	IncDec	++		138026	1					
ANR	138464	PostIncDecOperationExpression	nargs --		138026	1					
ANR	138465	Identifier	nargs		138026	0					
ANR	138466	IncDec	--		138026	1					
ANR	138467	IfStatement	"if ( nargs > 0 && ! strcmp ( * argp , ""-n"" ) )"		138026	30					
ANR	138468	Condition	"nargs > 0 && ! strcmp ( * argp , ""-n"" )"	160:8:5508:5540	138026	0	True				
ANR	138469	AndExpression	"nargs > 0 && ! strcmp ( * argp , ""-n"" )"		138026	0		&&			
ANR	138470	RelationalExpression	nargs > 0		138026	0		>			
ANR	138471	Identifier	nargs		138026	0					
ANR	138472	PrimaryExpression	0		138026	1					
ANR	138473	UnaryOperationExpression	"! strcmp ( * argp , ""-n"" )"		138026	1					
ANR	138474	UnaryOperator	!		138026	0					
ANR	138475	CallExpression	"strcmp ( * argp , ""-n"" )"		138026	1					
ANR	138476	Callee	strcmp		138026	0					
ANR	138477	Identifier	strcmp		138026	0					
ANR	138478	ArgumentList	* argp		138026	1					
ANR	138479	Argument	* argp		138026	0					
ANR	138480	UnaryOperationExpression	* argp		138026	0					
ANR	138481	UnaryOperator	*		138026	0					
ANR	138482	Identifier	argp		138026	1					
ANR	138483	Argument	"""-n"""		138026	1					
ANR	138484	PrimaryExpression	"""-n"""		138026	0					
ANR	138485	CompoundStatement		75:43:2242:2242	138026	1					
ANR	138486	ExpressionStatement	newline = 0	161:8:5553:5564	138026	0	True				
ANR	138487	AssignmentExpression	newline = 0		138026	0		=			
ANR	138488	Identifier	newline		138026	0					
ANR	138489	PrimaryExpression	0		138026	1					
ANR	138490	ExpressionStatement	"argp ++ , nargs --"	162:8:5574:5589	138026	1	True				
ANR	138491	Expression	"argp ++ , nargs --"		138026	0					
ANR	138492	PostIncDecOperationExpression	argp ++		138026	0					
ANR	138493	Identifier	argp		138026	0					
ANR	138494	IncDec	++		138026	1					
ANR	138495	PostIncDecOperationExpression	nargs --		138026	1					
ANR	138496	Identifier	nargs		138026	0					
ANR	138497	IncDec	--		138026	1					
ANR	138498	IfStatement	if ( strlen ( fname ) != 0 )		138026	31					
ANR	138499	Condition	strlen ( fname ) != 0	164:8:5605:5622	138026	0	True				
ANR	138500	EqualityExpression	strlen ( fname ) != 0		138026	0		!=			
ANR	138501	CallExpression	strlen ( fname )		138026	0					
ANR	138502	Callee	strlen		138026	0					
ANR	138503	Identifier	strlen		138026	0					
ANR	138504	ArgumentList	fname		138026	1					
ANR	138505	Argument	fname		138026	0					
ANR	138506	Identifier	fname		138026	0					
ANR	138507	PrimaryExpression	0		138026	1					
ANR	138508	CompoundStatement		79:28:2324:2324	138026	1					
ANR	138509	ExpressionStatement	"out = fopen ( fname , fmode )"	165:8:5635:5660	138026	0	True				
ANR	138510	AssignmentExpression	"out = fopen ( fname , fmode )"		138026	0		=			
ANR	138511	Identifier	out		138026	0					
ANR	138512	CallExpression	"fopen ( fname , fmode )"		138026	1					
ANR	138513	Callee	fopen		138026	0					
ANR	138514	Identifier	fopen		138026	0					
ANR	138515	ArgumentList	fname		138026	1					
ANR	138516	Argument	fname		138026	0					
ANR	138517	Identifier	fname		138026	0					
ANR	138518	Argument	fmode		138026	1					
ANR	138519	Identifier	fmode		138026	0					
ANR	138520	IfStatement	if ( out == 0 )		138026	1					
ANR	138521	Condition	out == 0	166:12:5674:5681	138026	0	True				
ANR	138522	EqualityExpression	out == 0		138026	0		==			
ANR	138523	Identifier	out		138026	0					
ANR	138524	PrimaryExpression	0		138026	1					
ANR	138525	ReturnStatement	return 1 ;	167:12:5696:5704	138026	1	True				
ANR	138526	PrimaryExpression	1		138026	0					
ANR	138527	WhileStatement	while ( 1 )		138026	32					
ANR	138528	Condition	1	169:11:5723:5723	138026	0	True				
ANR	138529	PrimaryExpression	1		138026	0					
ANR	138530	CompoundStatement		86:8:2454:2459	138026	1					
ANR	138531	IdentifierDeclStatement	char * arg ;	170:8:5736:5745	138026	0	True				
ANR	138532	IdentifierDecl	* arg		138026	0					
ANR	138533	IdentifierDeclType	char *		138026	0					
ANR	138534	Identifier	arg		138026	1					
ANR	138535	IdentifierDeclStatement	int i ;	171:8:5755:5760	138026	1	True				
ANR	138536	IdentifierDecl	i		138026	0					
ANR	138537	IdentifierDeclType	int		138026	0					
ANR	138538	Identifier	i		138026	1					
ANR	138539	IfStatement	if ( interact )		138026	2					
ANR	138540	Condition	interact	173:12:5775:5782	138026	0	True				
ANR	138541	Identifier	interact		138026	0					
ANR	138542	CompoundStatement		88:22:2484:2484	138026	1					
ANR	138543	IfStatement	"if ( fgets ( line , LINESIZESLOP , in ) == NULL )"		138026	0					
ANR	138544	Condition	"fgets ( line , LINESIZESLOP , in ) == NULL"	174:16:5803:5839	138026	0	True				
ANR	138545	EqualityExpression	"fgets ( line , LINESIZESLOP , in ) == NULL"		138026	0		==			
ANR	138546	CallExpression	"fgets ( line , LINESIZESLOP , in )"		138026	0					
ANR	138547	Callee	fgets		138026	0					
ANR	138548	Identifier	fgets		138026	0					
ANR	138549	ArgumentList	line		138026	1					
ANR	138550	Argument	line		138026	0					
ANR	138551	Identifier	line		138026	0					
ANR	138552	Argument	LINESIZESLOP		138026	1					
ANR	138553	Identifier	LINESIZESLOP		138026	0					
ANR	138554	Argument	in		138026	2					
ANR	138555	Identifier	in		138026	0					
ANR	138556	Identifier	NULL		138026	1					
ANR	138557	CompoundStatement		89:55:2541:2541	138026	1					
ANR	138558	ExpressionStatement	interact = 0	175:16:5860:5872	138026	0	True				
ANR	138559	AssignmentExpression	interact = 0		138026	0		=			
ANR	138560	Identifier	interact		138026	0					
ANR	138561	PrimaryExpression	0		138026	1					
ANR	138562	IfStatement	if ( in != stdin )		138026	1					
ANR	138563	Condition	in != stdin	176:20:5894:5904	138026	0	True				
ANR	138564	EqualityExpression	in != stdin		138026	0		!=			
ANR	138565	Identifier	in		138026	0					
ANR	138566	Identifier	stdin		138026	1					
ANR	138567	ExpressionStatement	fclose ( in )	177:20:5927:5937	138026	1	True				
ANR	138568	CallExpression	fclose ( in )		138026	0					
ANR	138569	Callee	fclose		138026	0					
ANR	138570	Identifier	fclose		138026	0					
ANR	138571	ArgumentList	in		138026	1					
ANR	138572	Argument	in		138026	0					
ANR	138573	Identifier	in		138026	0					
ANR	138574	ContinueStatement	continue ;	178:16:5955:5963	138026	2	True				
ANR	138575	IfStatement	if ( strlen ( line ) > LINESIZE )		138026	1					
ANR	138576	Condition	strlen ( line ) > LINESIZE	181:16:6040:6062	138026	0	True				
ANR	138577	RelationalExpression	strlen ( line ) > LINESIZE		138026	0		>			
ANR	138578	CallExpression	strlen ( line )		138026	0					
ANR	138579	Callee	strlen		138026	0					
ANR	138580	Identifier	strlen		138026	0					
ANR	138581	ArgumentList	line		138026	1					
ANR	138582	Argument	line		138026	0					
ANR	138583	Identifier	line		138026	0					
ANR	138584	Identifier	LINESIZE		138026	1					
ANR	138585	CompoundStatement		96:41:2764:2764	138026	1					
ANR	138586	ExpressionStatement	"fputs ( ""Line limit exceeded\\n"" , stderr )"	182:16:6083:6121	138026	0	True				
ANR	138587	CallExpression	"fputs ( ""Line limit exceeded\\n"" , stderr )"		138026	0					
ANR	138588	Callee	fputs		138026	0					
ANR	138589	Identifier	fputs		138026	0					
ANR	138590	ArgumentList	"""Line limit exceeded\\n"""		138026	1					
ANR	138591	Argument	"""Line limit exceeded\\n"""		138026	0					
ANR	138592	PrimaryExpression	"""Line limit exceeded\\n"""		138026	0					
ANR	138593	Argument	stderr		138026	1					
ANR	138594	Identifier	stderr		138026	0					
ANR	138595	ReturnStatement	return 1 ;	183:16:6139:6147	138026	1	True				
ANR	138596	PrimaryExpression	1		138026	0					
ANR	138597	ForStatement	for ( i = strlen ( line ) - 1 ; i < LINESIZESLOP ; i ++ )		138026	2					
ANR	138598	ForInit	i = strlen ( line ) - 1 ;	185:17:6180:6200	138026	0	True				
ANR	138599	AssignmentExpression	i = strlen ( line ) - 1		138026	0		=			
ANR	138600	Identifier	i		138026	0					
ANR	138601	AdditiveExpression	strlen ( line ) - 1		138026	1		-			
ANR	138602	CallExpression	strlen ( line )		138026	0					
ANR	138603	Callee	strlen		138026	0					
ANR	138604	Identifier	strlen		138026	0					
ANR	138605	ArgumentList	line		138026	1					
ANR	138606	Argument	line		138026	0					
ANR	138607	Identifier	line		138026	0					
ANR	138608	PrimaryExpression	1		138026	1					
ANR	138609	Condition	i < LINESIZESLOP	185:39:6202:6217	138026	1	True				
ANR	138610	RelationalExpression	i < LINESIZESLOP		138026	0		<			
ANR	138611	Identifier	i		138026	0					
ANR	138612	Identifier	LINESIZESLOP		138026	1					
ANR	138613	PostIncDecOperationExpression	i ++	185:57:6220:6222	138026	2	True				
ANR	138614	Identifier	i		138026	0					
ANR	138615	IncDec	++		138026	1					
ANR	138616	CompoundStatement		100:62:2924:2924	138026	3					
ANR	138617	ExpressionStatement	line [ i ] = 0	186:16:6243:6254	138026	0	True				
ANR	138618	AssignmentExpression	line [ i ] = 0		138026	0		=			
ANR	138619	ArrayIndexing	line [ i ]		138026	0					
ANR	138620	Identifier	line		138026	0					
ANR	138621	Identifier	i		138026	1					
ANR	138622	PrimaryExpression	0		138026	1					
ANR	138623	ExpressionStatement	arg = line	188:12:6282:6292	138026	3	True				
ANR	138624	AssignmentExpression	arg = line		138026	0		=			
ANR	138625	Identifier	arg		138026	0					
ANR	138626	Identifier	line		138026	1					
ANR	138627	ElseStatement	else		138026	0					
ANR	138628	CompoundStatement		104:15:3008:3008	138026	0					
ANR	138629	IfStatement	if ( nargs == 0 )		138026	0					
ANR	138630	Condition	nargs == 0	190:16:6327:6336	138026	0	True				
ANR	138631	EqualityExpression	nargs == 0		138026	0		==			
ANR	138632	Identifier	nargs		138026	0					
ANR	138633	PrimaryExpression	0		138026	1					
ANR	138634	BreakStatement	break ;	191:16:6355:6360	138026	1	True				
ANR	138635	ExpressionStatement	arg = * argp	192:12:6374:6385	138026	1	True				
ANR	138636	AssignmentExpression	arg = * argp		138026	0		=			
ANR	138637	Identifier	arg		138026	0					
ANR	138638	UnaryOperationExpression	* argp		138026	1					
ANR	138639	UnaryOperator	*		138026	0					
ANR	138640	Identifier	argp		138026	1					
ANR	138641	ExpressionStatement	"argp ++ , nargs --"	193:12:6399:6414	138026	2	True				
ANR	138642	Expression	"argp ++ , nargs --"		138026	0					
ANR	138643	PostIncDecOperationExpression	argp ++		138026	0					
ANR	138644	Identifier	argp		138026	0					
ANR	138645	IncDec	++		138026	1					
ANR	138646	PostIncDecOperationExpression	nargs --		138026	1					
ANR	138647	Identifier	nargs		138026	0					
ANR	138648	IncDec	--		138026	1					
ANR	138649	IfStatement	if ( sw == 0 && arg [ 0 ] == '-' )		138026	3					
ANR	138650	Condition	sw == 0 && arg [ 0 ] == '-'	195:12:6438:6461	138026	0	True				
ANR	138651	AndExpression	sw == 0 && arg [ 0 ] == '-'		138026	0		&&			
ANR	138652	EqualityExpression	sw == 0		138026	0		==			
ANR	138653	Identifier	sw		138026	0					
ANR	138654	PrimaryExpression	0		138026	1					
ANR	138655	EqualityExpression	arg [ 0 ] == '-'		138026	1		==			
ANR	138656	ArrayIndexing	arg [ 0 ]		138026	0					
ANR	138657	Identifier	arg		138026	0					
ANR	138658	PrimaryExpression	0		138026	1					
ANR	138659	PrimaryExpression	'-'		138026	1					
ANR	138660	CompoundStatement		111:12:3177:3194	138026	1					
ANR	138661	IdentifierDeclStatement	char chr = arg [ 1 ] ;	196:12:6478:6495	138026	0	True				
ANR	138662	IdentifierDecl	chr = arg [ 1 ]		138026	0					
ANR	138663	IdentifierDeclType	char		138026	0					
ANR	138664	Identifier	chr		138026	1					
ANR	138665	AssignmentExpression	chr = arg [ 1 ]		138026	2		=			
ANR	138666	Identifier	chr		138026	0					
ANR	138667	ArrayIndexing	arg [ 1 ]		138026	1					
ANR	138668	Identifier	arg		138026	0					
ANR	138669	PrimaryExpression	1		138026	1					
ANR	138670	ExpressionStatement	sp = 0	198:12:6510:6516	138026	1	True				
ANR	138671	AssignmentExpression	sp = 0		138026	0		=			
ANR	138672	Identifier	sp		138026	0					
ANR	138673	PrimaryExpression	0		138026	1					
ANR	138674	Label	swc :	199:10:6528:6531	138026	2	True				
ANR	138675	Identifier	swc		138026	0					
ANR	138676	SwitchStatement	switch ( chr )		138026	3					
ANR	138677	Condition	chr	199:22:6540:6542	138026	0	True				
ANR	138678	Identifier	chr		138026	0					
ANR	138679	CompoundStatement		114:27:3244:3244	138026	1					
ANR	138680	Label	case 'l' :	200:16:6563:6571	138026	0	True				
ANR	138681	ExpressionStatement	chr = 'Q'	201:20:6623:6632	138026	1	True				
ANR	138682	AssignmentExpression	chr = 'Q'		138026	0		=			
ANR	138683	Identifier	chr		138026	0					
ANR	138684	PrimaryExpression	'Q'		138026	1					
ANR	138685	Label	case 'q' :	203:16:6690:6698	138026	2	True				
ANR	138686	Label	case 'Q' :	204:16:6737:6745	138026	3	True				
ANR	138687	IfStatement	if ( arg [ 2 ] != 0 )		138026	4					
ANR	138688	Condition	arg [ 2 ] != 0	205:24:6801:6811	138026	0	True				
ANR	138689	EqualityExpression	arg [ 2 ] != 0		138026	0		!=			
ANR	138690	ArrayIndexing	arg [ 2 ]		138026	0					
ANR	138691	Identifier	arg		138026	0					
ANR	138692	PrimaryExpression	2		138026	1					
ANR	138693	PrimaryExpression	0		138026	1					
ANR	138694	CompoundStatement		120:37:3513:3513	138026	1					
ANR	138695	ExpressionStatement	"( * eputs ) ( arg + 2 , out )"	206:24:6840:6863	138026	0	True				
ANR	138696	CallExpression	"( * eputs ) ( arg + 2 , out )"		138026	0					
ANR	138697	Callee	* eputs		138026	0					
ANR	138698	UnaryOperationExpression	* eputs		138026	0					
ANR	138699	UnaryOperator	*		138026	0					
ANR	138700	Identifier	eputs		138026	1					
ANR	138701	ArgumentList	arg + 2		138026	1					
ANR	138702	Argument	arg + 2		138026	0					
ANR	138703	AdditiveExpression	arg + 2		138026	0		+			
ANR	138704	Identifier	arg		138026	0					
ANR	138705	PrimaryExpression	2		138026	1					
ANR	138706	Argument	out		138026	1					
ANR	138707	Identifier	out		138026	0					
ANR	138708	IfStatement	if ( chr == 'Q' )		138026	1					
ANR	138709	Condition	chr == 'Q'	207:28:6893:6902	138026	0	True				
ANR	138710	EqualityExpression	chr == 'Q'		138026	0		==			
ANR	138711	Identifier	chr		138026	0					
ANR	138712	PrimaryExpression	'Q'		138026	1					
ANR	138713	ExpressionStatement	"( * eputc ) ( ' ' , out )"	208:28:6933:6952	138026	1	True				
ANR	138714	CallExpression	"( * eputc ) ( ' ' , out )"		138026	0					
ANR	138715	Callee	* eputc		138026	0					
ANR	138716	UnaryOperationExpression	* eputc		138026	0					
ANR	138717	UnaryOperator	*		138026	0					
ANR	138718	Identifier	eputc		138026	1					
ANR	138719	ArgumentList	' '		138026	1					
ANR	138720	Argument	' '		138026	0					
ANR	138721	PrimaryExpression	' '		138026	0					
ANR	138722	Argument	out		138026	1					
ANR	138723	Identifier	out		138026	0					
ANR	138724	BreakStatement	break ;	209:24:6978:6983	138026	2	True				
ANR	138725	Label	case 'r' :	212:16:7063:7071	138026	5	True				
ANR	138726	Label	case 'R' :	213:16:7112:7120	138026	6	True				
ANR	138727	Label	case 'u' :	214:16:7138:7146	138026	7	True				
ANR	138728	Label	case 'x' :	215:16:7188:7196	138026	8	True				
ANR	138729	ExpressionStatement	sw = chr	216:20:7235:7243	138026	9	True				
ANR	138730	AssignmentExpression	sw = chr		138026	0		=			
ANR	138731	Identifier	sw		138026	0					
ANR	138732	Identifier	chr		138026	1					
ANR	138733	BreakStatement	break ;	217:20:7265:7270	138026	10	True				
ANR	138734	Label	case 's' :	218:16:7288:7296	138026	11	True				
ANR	138735	ExpressionStatement	"( * eputc ) ( ' ' , out )"	219:20:7338:7357	138026	12	True				
ANR	138736	CallExpression	"( * eputc ) ( ' ' , out )"		138026	0					
ANR	138737	Callee	* eputc		138026	0					
ANR	138738	UnaryOperationExpression	* eputc		138026	0					
ANR	138739	UnaryOperator	*		138026	0					
ANR	138740	Identifier	eputc		138026	1					
ANR	138741	ArgumentList	' '		138026	1					
ANR	138742	Argument	' '		138026	0					
ANR	138743	PrimaryExpression	' '		138026	0					
ANR	138744	Argument	out		138026	1					
ANR	138745	Identifier	out		138026	0					
ANR	138746	BreakStatement	break ;	220:20:7379:7384	138026	13	True				
ANR	138747	Label	case 'i' :	221:16:7402:7410	138026	14	True				
ANR	138748	ExpressionStatement	interact = 1	222:20:7457:7469	138026	15	True				
ANR	138749	AssignmentExpression	interact = 1		138026	0		=			
ANR	138750	Identifier	interact		138026	0					
ANR	138751	PrimaryExpression	1		138026	1					
ANR	138752	ExpressionStatement	in = stdin	223:20:7491:7501	138026	16	True				
ANR	138753	AssignmentExpression	in = stdin		138026	0		=			
ANR	138754	Identifier	in		138026	0					
ANR	138755	Identifier	stdin		138026	1					
ANR	138756	BreakStatement	break ;	224:20:7523:7528	138026	17	True				
ANR	138757	Label	case 'b' :	225:16:7546:7554	138026	18	True				
ANR	138758	Label	case 'B' :	226:16:7600:7608	138026	19	True				
ANR	138759	ExpressionStatement	arg = fnparam + strlen ( fnparam )	227:20:7630:7661	138026	20	True				
ANR	138760	AssignmentExpression	arg = fnparam + strlen ( fnparam )		138026	0		=			
ANR	138761	Identifier	arg		138026	0					
ANR	138762	AdditiveExpression	fnparam + strlen ( fnparam )		138026	1		+			
ANR	138763	Identifier	fnparam		138026	0					
ANR	138764	CallExpression	strlen ( fnparam )		138026	1					
ANR	138765	Callee	strlen		138026	0					
ANR	138766	Identifier	strlen		138026	0					
ANR	138767	ArgumentList	fnparam		138026	1					
ANR	138768	Argument	fnparam		138026	0					
ANR	138769	Identifier	fnparam		138026	0					
ANR	138770	WhileStatement	while ( arg > fnparam && ( isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_' ) )		138026	21					
ANR	138771	Condition	arg > fnparam && ( isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_' )	228:27:7690:7769	138026	0	True				
ANR	138772	AndExpression	arg > fnparam && ( isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_' )		138026	0		&&			
ANR	138773	RelationalExpression	arg > fnparam		138026	0		>			
ANR	138774	Identifier	arg		138026	0					
ANR	138775	Identifier	fnparam		138026	1					
ANR	138776	OrExpression	isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_'		138026	1		||			
ANR	138777	CallExpression	isalnum ( arg [ - 1 ] )		138026	0					
ANR	138778	Callee	isalnum		138026	0					
ANR	138779	Identifier	isalnum		138026	0					
ANR	138780	ArgumentList	arg [ - 1 ]		138026	1					
ANR	138781	Argument	arg [ - 1 ]		138026	0					
ANR	138782	ArrayIndexing	arg [ - 1 ]		138026	0					
ANR	138783	Identifier	arg		138026	0					
ANR	138784	UnaryOperationExpression	- 1		138026	1					
ANR	138785	UnaryOperator	-		138026	0					
ANR	138786	PrimaryExpression	1		138026	1					
ANR	138787	EqualityExpression	arg [ - 1 ] == '_'		138026	1		==			
ANR	138788	ArrayIndexing	arg [ - 1 ]		138026	0					
ANR	138789	Identifier	arg		138026	0					
ANR	138790	UnaryOperationExpression	- 1		138026	1					
ANR	138791	UnaryOperator	-		138026	0					
ANR	138792	PrimaryExpression	1		138026	1					
ANR	138793	PrimaryExpression	'_'		138026	1					
ANR	138794	ExpressionStatement	-- arg	230:24:7796:7801	138026	1	True				
ANR	138795	UnaryExpression	-- arg		138026	0					
ANR	138796	IncDec	--		138026	0					
ANR	138797	Identifier	arg		138026	1					
ANR	138798	ExpressionStatement	"( * eputs ) ( arg , out )"	231:20:7823:7842	138026	22	True				
ANR	138799	CallExpression	"( * eputs ) ( arg , out )"		138026	0					
ANR	138800	Callee	* eputs		138026	0					
ANR	138801	UnaryOperationExpression	* eputs		138026	0					
ANR	138802	UnaryOperator	*		138026	0					
ANR	138803	Identifier	eputs		138026	1					
ANR	138804	ArgumentList	arg		138026	1					
ANR	138805	Argument	arg		138026	0					
ANR	138806	Identifier	arg		138026	0					
ANR	138807	Argument	out		138026	1					
ANR	138808	Identifier	out		138026	0					
ANR	138809	BreakStatement	break ;	232:20:7864:7869	138026	23	True				
ANR	138810	Label	case 'd' :	233:16:7887:7895	138026	24	True				
ANR	138811	Label	case 'D' :	234:16:7936:7944	138026	25	True				
ANR	138812	CompoundStatement		152:24:4725:4737	138026	26					
ANR	138813	IdentifierDeclStatement	time_t t ;	236:24:7992:8000	138026	0	True				
ANR	138814	IdentifierDecl	t		138026	0					
ANR	138815	IdentifierDeclType	time_t		138026	0					
ANR	138816	Identifier	t		138026	1					
ANR	138817	IdentifierDeclStatement	char str [ 26 ] ;	237:24:8026:8038	138026	1	True				
ANR	138818	IdentifierDecl	str [ 26 ]		138026	0					
ANR	138819	IdentifierDeclType	char [ 26 ]		138026	0					
ANR	138820	Identifier	str		138026	1					
ANR	138821	PrimaryExpression	26		138026	2					
ANR	138822	ExpressionStatement	time ( & t )	239:24:8065:8073	138026	2	True				
ANR	138823	CallExpression	time ( & t )		138026	0					
ANR	138824	Callee	time		138026	0					
ANR	138825	Identifier	time		138026	0					
ANR	138826	ArgumentList	& t		138026	1					
ANR	138827	Argument	& t		138026	0					
ANR	138828	UnaryOperationExpression	& t		138026	0					
ANR	138829	UnaryOperator	&		138026	0					
ANR	138830	Identifier	t		138026	1					
ANR	138831	ExpressionStatement	"strncpy ( str , ctime ( & t ) , 25 )"	240:24:8099:8126	138026	3	True				
ANR	138832	CallExpression	"strncpy ( str , ctime ( & t ) , 25 )"		138026	0					
ANR	138833	Callee	strncpy		138026	0					
ANR	138834	Identifier	strncpy		138026	0					
ANR	138835	ArgumentList	str		138026	1					
ANR	138836	Argument	str		138026	0					
ANR	138837	Identifier	str		138026	0					
ANR	138838	Argument	ctime ( & t )		138026	1					
ANR	138839	CallExpression	ctime ( & t )		138026	0					
ANR	138840	Callee	ctime		138026	0					
ANR	138841	Identifier	ctime		138026	0					
ANR	138842	ArgumentList	& t		138026	1					
ANR	138843	Argument	& t		138026	0					
ANR	138844	UnaryOperationExpression	& t		138026	0					
ANR	138845	UnaryOperator	&		138026	0					
ANR	138846	Identifier	t		138026	1					
ANR	138847	Argument	25		138026	2					
ANR	138848	PrimaryExpression	25		138026	0					
ANR	138849	ExpressionStatement	str [ 24 ] = 0	241:24:8152:8163	138026	4	True				
ANR	138850	AssignmentExpression	str [ 24 ] = 0		138026	0		=			
ANR	138851	ArrayIndexing	str [ 24 ]		138026	0					
ANR	138852	Identifier	str		138026	0					
ANR	138853	PrimaryExpression	24		138026	1					
ANR	138854	PrimaryExpression	0		138026	1					
ANR	138855	ExpressionStatement	"( * eputs ) ( str , out )"	242:24:8205:8224	138026	5	True				
ANR	138856	CallExpression	"( * eputs ) ( str , out )"		138026	0					
ANR	138857	Callee	* eputs		138026	0					
ANR	138858	UnaryOperationExpression	* eputs		138026	0					
ANR	138859	UnaryOperator	*		138026	0					
ANR	138860	Identifier	eputs		138026	1					
ANR	138861	ArgumentList	str		138026	1					
ANR	138862	Argument	str		138026	0					
ANR	138863	Identifier	str		138026	0					
ANR	138864	Argument	out		138026	1					
ANR	138865	Identifier	out		138026	0					
ANR	138866	BreakStatement	break ;	243:22:8248:8253	138026	27	True				
ANR	138867	Label	case 'f' :	244:16:8271:8279	138026	28	True				
ANR	138868	Label	case 'F' :	245:16:8320:8328	138026	29	True				
ANR	138869	ExpressionStatement	"( * eputs ) ( fnparam , out )"	246:20:8350:8373	138026	30	True				
ANR	138870	CallExpression	"( * eputs ) ( fnparam , out )"		138026	0					
ANR	138871	Callee	* eputs		138026	0					
ANR	138872	UnaryOperationExpression	* eputs		138026	0					
ANR	138873	UnaryOperator	*		138026	0					
ANR	138874	Identifier	eputs		138026	1					
ANR	138875	ArgumentList	fnparam		138026	1					
ANR	138876	Argument	fnparam		138026	0					
ANR	138877	Identifier	fnparam		138026	0					
ANR	138878	Argument	out		138026	1					
ANR	138879	Identifier	out		138026	0					
ANR	138880	BreakStatement	break ;	247:20:8395:8400	138026	31	True				
ANR	138881	Label	case 'X' :	248:16:8418:8426	138026	32	True				
ANR	138882	ExpressionStatement	hexx = 1	249:20:8476:8484	138026	33	True				
ANR	138883	AssignmentExpression	hexx = 1		138026	0		=			
ANR	138884	Identifier	hexx		138026	0					
ANR	138885	PrimaryExpression	1		138026	1					
ANR	138886	BreakStatement	break ;	250:20:8506:8511	138026	34	True				
ANR	138887	Label	case '+' :	251:16:8529:8537	138026	35	True				
ANR	138888	IfStatement	if ( arg [ 1 ] )		138026	36					
ANR	138889	Condition	arg [ 1 ]	252:24:8588:8593	138026	0	True				
ANR	138890	ArrayIndexing	arg [ 1 ]		138026	0					
ANR	138891	Identifier	arg		138026	0					
ANR	138892	PrimaryExpression	1		138026	1					
ANR	138893	CompoundStatement		167:32:5295:5295	138026	1					
ANR	138894	ExpressionStatement	++ arg	253:24:8622:8627	138026	0	True				
ANR	138895	UnaryExpression	++ arg		138026	0					
ANR	138896	IncDec	++		138026	0					
ANR	138897	Identifier	arg		138026	1					
ANR	138898	ExpressionStatement	chr = toupper ( arg [ 1 ] )	254:24:8653:8674	138026	1	True				
ANR	138899	AssignmentExpression	chr = toupper ( arg [ 1 ] )		138026	0		=			
ANR	138900	Identifier	chr		138026	0					
ANR	138901	CallExpression	toupper ( arg [ 1 ] )		138026	1					
ANR	138902	Callee	toupper		138026	0					
ANR	138903	Identifier	toupper		138026	0					
ANR	138904	ArgumentList	arg [ 1 ]		138026	1					
ANR	138905	Argument	arg [ 1 ]		138026	0					
ANR	138906	ArrayIndexing	arg [ 1 ]		138026	0					
ANR	138907	Identifier	arg		138026	0					
ANR	138908	PrimaryExpression	1		138026	1					
ANR	138909	GotoStatement	goto swc ;	255:24:8700:8708	138026	2	True				
ANR	138910	Identifier	swc		138026	0					
ANR	138911	Label	case 0 :	258:16:8788:8794	138026	37	True				
ANR	138912	ExpressionStatement	sw = '-'	259:20:8832:8840	138026	38	True				
ANR	138913	AssignmentExpression	sw = '-'		138026	0		=			
ANR	138914	Identifier	sw		138026	0					
ANR	138915	PrimaryExpression	'-'		138026	1					
ANR	138916	BreakStatement	break ;	260:20:8862:8867	138026	39	True				
ANR	138917	ElseStatement	else		138026	0					
ANR	138918	SwitchStatement	switch ( sw )		138026	0					
ANR	138919	Condition	sw	263:20:8918:8919	138026	0	True				
ANR	138920	Identifier	sw		138026	0					
ANR	138921	CompoundStatement		178:24:5621:5621	138026	1					
ANR	138922	Label	case 0 :	264:16:8940:8946	138026	0	True				
ANR	138923	Label	case '-' :	265:16:8964:8972	138026	1	True				
ANR	138924	IfStatement	if ( hexx )		138026	2					
ANR	138925	Condition	hexx	266:24:8998:9001	138026	0	True				
ANR	138926	Identifier	hexx		138026	0					
ANR	138927	GotoStatement	goto xx ;	267:24:9028:9035	138026	1	True				
ANR	138928	Identifier	xx		138026	0					
ANR	138929	IfStatement	if ( sp )		138026	3					
ANR	138930	Condition	sp	268:24:9061:9062	138026	0	True				
ANR	138931	Identifier	sp		138026	0					
ANR	138932	ExpressionStatement	"( * eputc ) ( ' ' , out )"	269:24:9089:9108	138026	1	True				
ANR	138933	CallExpression	"( * eputc ) ( ' ' , out )"		138026	0					
ANR	138934	Callee	* eputc		138026	0					
ANR	138935	UnaryOperationExpression	* eputc		138026	0					
ANR	138936	UnaryOperator	*		138026	0					
ANR	138937	Identifier	eputc		138026	1					
ANR	138938	ArgumentList	' '		138026	1					
ANR	138939	Argument	' '		138026	0					
ANR	138940	PrimaryExpression	' '		138026	0					
ANR	138941	Argument	out		138026	1					
ANR	138942	Identifier	out		138026	0					
ANR	138943	ExpressionStatement	"( * eputs ) ( arg , out )"	270:20:9130:9149	138026	4	True				
ANR	138944	CallExpression	"( * eputs ) ( arg , out )"		138026	0					
ANR	138945	Callee	* eputs		138026	0					
ANR	138946	UnaryOperationExpression	* eputs		138026	0					
ANR	138947	UnaryOperator	*		138026	0					
ANR	138948	Identifier	eputs		138026	1					
ANR	138949	ArgumentList	arg		138026	1					
ANR	138950	Argument	arg		138026	0					
ANR	138951	Identifier	arg		138026	0					
ANR	138952	Argument	out		138026	1					
ANR	138953	Identifier	out		138026	0					
ANR	138954	ExpressionStatement	sp = 1	271:20:9171:9177	138026	5	True				
ANR	138955	AssignmentExpression	sp = 1		138026	0		=			
ANR	138956	Identifier	sp		138026	0					
ANR	138957	PrimaryExpression	1		138026	1					
ANR	138958	BreakStatement	break ;	272:20:9199:9204	138026	6	True				
ANR	138959	Label	case 'q' :	273:16:9222:9230	138026	7	True				
ANR	138960	ExpressionStatement	sw = 0	274:20:9252:9258	138026	8	True				
ANR	138961	AssignmentExpression	sw = 0		138026	0		=			
ANR	138962	Identifier	sw		138026	0					
ANR	138963	PrimaryExpression	0		138026	1					
ANR	138964	ExpressionStatement	"( * eputs ) ( arg , out )"	275:20:9280:9299	138026	9	True				
ANR	138965	CallExpression	"( * eputs ) ( arg , out )"		138026	0					
ANR	138966	Callee	* eputs		138026	0					
ANR	138967	UnaryOperationExpression	* eputs		138026	0					
ANR	138968	UnaryOperator	*		138026	0					
ANR	138969	Identifier	eputs		138026	1					
ANR	138970	ArgumentList	arg		138026	1					
ANR	138971	Argument	arg		138026	0					
ANR	138972	Identifier	arg		138026	0					
ANR	138973	Argument	out		138026	1					
ANR	138974	Identifier	out		138026	0					
ANR	138975	BreakStatement	break ;	276:20:9321:9326	138026	10	True				
ANR	138976	Label	case 'Q' :	277:16:9344:9352	138026	11	True				
ANR	138977	ExpressionStatement	sw = 0	278:20:9374:9380	138026	12	True				
ANR	138978	AssignmentExpression	sw = 0		138026	0		=			
ANR	138979	Identifier	sw		138026	0					
ANR	138980	PrimaryExpression	0		138026	1					
ANR	138981	ExpressionStatement	"( * eputs ) ( arg , out )"	279:20:9402:9421	138026	13	True				
ANR	138982	CallExpression	"( * eputs ) ( arg , out )"		138026	0					
ANR	138983	Callee	* eputs		138026	0					
ANR	138984	UnaryOperationExpression	* eputs		138026	0					
ANR	138985	UnaryOperator	*		138026	0					
ANR	138986	Identifier	eputs		138026	1					
ANR	138987	ArgumentList	arg		138026	1					
ANR	138988	Argument	arg		138026	0					
ANR	138989	Identifier	arg		138026	0					
ANR	138990	Argument	out		138026	1					
ANR	138991	Identifier	out		138026	0					
ANR	138992	ExpressionStatement	"( * eputc ) ( ' ' , out )"	280:20:9443:9462	138026	14	True				
ANR	138993	CallExpression	"( * eputc ) ( ' ' , out )"		138026	0					
ANR	138994	Callee	* eputc		138026	0					
ANR	138995	UnaryOperationExpression	* eputc		138026	0					
ANR	138996	UnaryOperator	*		138026	0					
ANR	138997	Identifier	eputc		138026	1					
ANR	138998	ArgumentList	' '		138026	1					
ANR	138999	Argument	' '		138026	0					
ANR	139000	PrimaryExpression	' '		138026	0					
ANR	139001	Argument	out		138026	1					
ANR	139002	Identifier	out		138026	0					
ANR	139003	BreakStatement	break ;	281:20:9484:9489	138026	15	True				
ANR	139004	Label	case 'r' :	282:16:9507:9515	138026	16	True				
ANR	139005	ExpressionStatement	sw = 0	283:20:9537:9543	138026	17	True				
ANR	139006	AssignmentExpression	sw = 0		138026	0		=			
ANR	139007	Identifier	sw		138026	0					
ANR	139008	PrimaryExpression	0		138026	1					
ANR	139009	ExpressionStatement	"in = fopen ( arg , ""r"" )"	284:20:9565:9585	138026	18	True				
ANR	139010	AssignmentExpression	"in = fopen ( arg , ""r"" )"		138026	0		=			
ANR	139011	Identifier	in		138026	0					
ANR	139012	CallExpression	"fopen ( arg , ""r"" )"		138026	1					
ANR	139013	Callee	fopen		138026	0					
ANR	139014	Identifier	fopen		138026	0					
ANR	139015	ArgumentList	arg		138026	1					
ANR	139016	Argument	arg		138026	0					
ANR	139017	Identifier	arg		138026	0					
ANR	139018	Argument	"""r"""		138026	1					
ANR	139019	PrimaryExpression	"""r"""		138026	0					
ANR	139020	IfStatement	if ( in == NULL )		138026	19					
ANR	139021	Condition	in == NULL	285:24:9611:9620	138026	0	True				
ANR	139022	EqualityExpression	in == NULL		138026	0		==			
ANR	139023	Identifier	in		138026	0					
ANR	139024	Identifier	NULL		138026	1					
ANR	139025	ExpressionStatement	exit ( exit_FAILED )	286:24:9647:9664	138026	1	True				
ANR	139026	CallExpression	exit ( exit_FAILED )		138026	0					
ANR	139027	Callee	exit		138026	0					
ANR	139028	Identifier	exit		138026	0					
ANR	139029	ArgumentList	exit_FAILED		138026	1					
ANR	139030	Argument	exit_FAILED		138026	0					
ANR	139031	Identifier	exit_FAILED		138026	0					
ANR	139032	ExpressionStatement	interact = 1	287:20:9686:9698	138026	20	True				
ANR	139033	AssignmentExpression	interact = 1		138026	0		=			
ANR	139034	Identifier	interact		138026	0					
ANR	139035	PrimaryExpression	1		138026	1					
ANR	139036	BreakStatement	break ;	288:20:9720:9725	138026	21	True				
ANR	139037	Label	case 'R' :	289:16:9743:9751	138026	22	True				
ANR	139038	ExpressionStatement	sw = 0	290:20:9773:9779	138026	23	True				
ANR	139039	AssignmentExpression	sw = 0		138026	0		=			
ANR	139040	Identifier	sw		138026	0					
ANR	139041	PrimaryExpression	0		138026	1					
ANR	139042	ExpressionStatement	"in = fopen ( arg , ""r"" )"	291:20:9801:9821	138026	24	True				
ANR	139043	AssignmentExpression	"in = fopen ( arg , ""r"" )"		138026	0		=			
ANR	139044	Identifier	in		138026	0					
ANR	139045	CallExpression	"fopen ( arg , ""r"" )"		138026	1					
ANR	139046	Callee	fopen		138026	0					
ANR	139047	Identifier	fopen		138026	0					
ANR	139048	ArgumentList	arg		138026	1					
ANR	139049	Argument	arg		138026	0					
ANR	139050	Identifier	arg		138026	0					
ANR	139051	Argument	"""r"""		138026	1					
ANR	139052	PrimaryExpression	"""r"""		138026	0					
ANR	139053	IfStatement	if ( in == NULL )		138026	25					
ANR	139054	Condition	in == NULL	292:24:9847:9856	138026	0	True				
ANR	139055	EqualityExpression	in == NULL		138026	0		==			
ANR	139056	Identifier	in		138026	0					
ANR	139057	Identifier	NULL		138026	1					
ANR	139058	ExpressionStatement	exit ( exit_FAILED )	293:24:9883:9900	138026	1	True				
ANR	139059	CallExpression	exit ( exit_FAILED )		138026	0					
ANR	139060	Callee	exit		138026	0					
ANR	139061	Identifier	exit		138026	0					
ANR	139062	ArgumentList	exit_FAILED		138026	1					
ANR	139063	Argument	exit_FAILED		138026	0					
ANR	139064	Identifier	exit_FAILED		138026	0					
ANR	139065	WhileStatement	"while ( fread ( line , 1 , 1 , in ) > 0 )"		138026	26					
ANR	139066	Condition	"fread ( line , 1 , 1 , in ) > 0"	294:27:9929:9953	138026	0	True				
ANR	139067	RelationalExpression	"fread ( line , 1 , 1 , in ) > 0"		138026	0		>			
ANR	139068	CallExpression	"fread ( line , 1 , 1 , in )"		138026	0					
ANR	139069	Callee	fread		138026	0					
ANR	139070	Identifier	fread		138026	0					
ANR	139071	ArgumentList	line		138026	1					
ANR	139072	Argument	line		138026	0					
ANR	139073	Identifier	line		138026	0					
ANR	139074	Argument	1		138026	1					
ANR	139075	PrimaryExpression	1		138026	0					
ANR	139076	Argument	1		138026	2					
ANR	139077	PrimaryExpression	1		138026	0					
ANR	139078	Argument	in		138026	3					
ANR	139079	Identifier	in		138026	0					
ANR	139080	PrimaryExpression	0		138026	1					
ANR	139081	ExpressionStatement	"( * eputc ) ( line [ 0 ] , out )"	295:24:9980:10003	138026	1	True				
ANR	139082	CallExpression	"( * eputc ) ( line [ 0 ] , out )"		138026	0					
ANR	139083	Callee	* eputc		138026	0					
ANR	139084	UnaryOperationExpression	* eputc		138026	0					
ANR	139085	UnaryOperator	*		138026	0					
ANR	139086	Identifier	eputc		138026	1					
ANR	139087	ArgumentList	line [ 0 ]		138026	1					
ANR	139088	Argument	line [ 0 ]		138026	0					
ANR	139089	ArrayIndexing	line [ 0 ]		138026	0					
ANR	139090	Identifier	line		138026	0					
ANR	139091	PrimaryExpression	0		138026	1					
ANR	139092	Argument	out		138026	1					
ANR	139093	Identifier	out		138026	0					
ANR	139094	ExpressionStatement	fclose ( in )	296:20:10025:10035	138026	27	True				
ANR	139095	CallExpression	fclose ( in )		138026	0					
ANR	139096	Callee	fclose		138026	0					
ANR	139097	Identifier	fclose		138026	0					
ANR	139098	ArgumentList	in		138026	1					
ANR	139099	Argument	in		138026	0					
ANR	139100	Identifier	in		138026	0					
ANR	139101	BreakStatement	break ;	297:20:10057:10062	138026	28	True				
ANR	139102	Label	case 'u' :	298:16:10080:10088	138026	29	True				
ANR	139103	CompoundStatement		215:24:6835:6843	138026	30					
ANR	139104	IdentifierDeclStatement	char * up ;	300:24:10136:10144	138026	0	True				
ANR	139105	IdentifierDecl	* up		138026	0					
ANR	139106	IdentifierDeclType	char *		138026	0					
ANR	139107	Identifier	up		138026	1					
ANR	139108	ForStatement	for ( up = arg ; * up ; up ++ )		138026	1					
ANR	139109	ForInit	up = arg ;	302:29:10176:10184	138026	0	True				
ANR	139110	AssignmentExpression	up = arg		138026	0		=			
ANR	139111	Identifier	up		138026	0					
ANR	139112	Identifier	arg		138026	1					
ANR	139113	Condition	* up	302:39:10186:10188	138026	1	True				
ANR	139114	UnaryOperationExpression	* up		138026	0					
ANR	139115	UnaryOperator	*		138026	0					
ANR	139116	Identifier	up		138026	1					
ANR	139117	PostIncDecOperationExpression	up ++	302:44:10191:10194	138026	2	True				
ANR	139118	Identifier	up		138026	0					
ANR	139119	IncDec	++		138026	1					
ANR	139120	ExpressionStatement	"( * eputc ) ( toupper ( * up ) , out )"	303:28:10225:10253	138026	3	True				
ANR	139121	CallExpression	"( * eputc ) ( toupper ( * up ) , out )"		138026	0					
ANR	139122	Callee	* eputc		138026	0					
ANR	139123	UnaryOperationExpression	* eputc		138026	0					
ANR	139124	UnaryOperator	*		138026	0					
ANR	139125	Identifier	eputc		138026	1					
ANR	139126	ArgumentList	toupper ( * up )		138026	1					
ANR	139127	Argument	toupper ( * up )		138026	0					
ANR	139128	CallExpression	toupper ( * up )		138026	0					
ANR	139129	Callee	toupper		138026	0					
ANR	139130	Identifier	toupper		138026	0					
ANR	139131	ArgumentList	* up		138026	1					
ANR	139132	Argument	* up		138026	0					
ANR	139133	UnaryOperationExpression	* up		138026	0					
ANR	139134	UnaryOperator	*		138026	0					
ANR	139135	Identifier	up		138026	1					
ANR	139136	Argument	out		138026	1					
ANR	139137	Identifier	out		138026	0					
ANR	139138	ExpressionStatement	sw = 0	305:20:10297:10303	138026	31	True				
ANR	139139	AssignmentExpression	sw = 0		138026	0		=			
ANR	139140	Identifier	sw		138026	0					
ANR	139141	PrimaryExpression	0		138026	1					
ANR	139142	BreakStatement	break ;	306:20:10325:10330	138026	32	True				
ANR	139143	Label	case 'x' :	307:16:10348:10356	138026	33	True				
ANR	139144	Label	xx :	308:18:10376:10378	138026	34	True				
ANR	139145	Identifier	xx		138026	0					
ANR	139146	CompoundStatement		225:24:7138:7159	138026	35					
ANR	139147	IdentifierDeclStatement	char * xp ;	309:24:10405:10413	138026	0	True				
ANR	139148	IdentifierDecl	* xp		138026	0					
ANR	139149	IdentifierDeclType	char *		138026	0					
ANR	139150	Identifier	xp		138026	1					
ANR	139151	IdentifierDeclStatement	unsigned int xchr = 1 ;	310:24:10439:10460	138026	1	True				
ANR	139152	IdentifierDecl	xchr = 1		138026	0					
ANR	139153	IdentifierDeclType	unsigned int		138026	0					
ANR	139154	Identifier	xchr		138026	1					
ANR	139155	AssignmentExpression	xchr = 1		138026	2		=			
ANR	139156	Identifier	xchr		138026	0					
ANR	139157	PrimaryExpression	1		138026	1					
ANR	139158	ForStatement	for ( xp = arg ; * xp ; xp ++ )		138026	2					
ANR	139159	ForInit	xp = arg ;	312:29:10492:10500	138026	0	True				
ANR	139160	AssignmentExpression	xp = arg		138026	0		=			
ANR	139161	Identifier	xp		138026	0					
ANR	139162	Identifier	arg		138026	1					
ANR	139163	Condition	* xp	312:39:10502:10504	138026	1	True				
ANR	139164	UnaryOperationExpression	* xp		138026	0					
ANR	139165	UnaryOperator	*		138026	0					
ANR	139166	Identifier	xp		138026	1					
ANR	139167	PostIncDecOperationExpression	xp ++	312:44:10507:10510	138026	2	True				
ANR	139168	Identifier	xp		138026	0					
ANR	139169	IncDec	++		138026	1					
ANR	139170	CompoundStatement		228:28:7242:7255	138026	3					
ANR	139171	IdentifierDeclStatement	char ch = * xp ;	313:28:10543:10556	138026	0	True				
ANR	139172	IdentifierDecl	ch = * xp		138026	0					
ANR	139173	IdentifierDeclType	char		138026	0					
ANR	139174	Identifier	ch		138026	1					
ANR	139175	AssignmentExpression	ch = * xp		138026	2		=			
ANR	139176	Identifier	ch		138026	0					
ANR	139177	UnaryOperationExpression	* xp		138026	1					
ANR	139178	UnaryOperator	*		138026	0					
ANR	139179	Identifier	xp		138026	1					
ANR	139180	IfStatement	if ( ! isxdigit ( ch ) )		138026	1					
ANR	139181	Condition	! isxdigit ( ch )	315:32:10591:10603	138026	0	True				
ANR	139182	UnaryOperationExpression	! isxdigit ( ch )		138026	0					
ANR	139183	UnaryOperator	!		138026	0					
ANR	139184	CallExpression	isxdigit ( ch )		138026	1					
ANR	139185	Callee	isxdigit		138026	0					
ANR	139186	Identifier	isxdigit		138026	0					
ANR	139187	ArgumentList	ch		138026	1					
ANR	139188	Argument	ch		138026	0					
ANR	139189	Identifier	ch		138026	0					
ANR	139190	ReturnStatement	return 1 ;	316:32:10638:10646	138026	1	True				
ANR	139191	PrimaryExpression	1		138026	0					
ANR	139192	ExpressionStatement	xchr <<= 4	317:28:10676:10686	138026	2	True				
ANR	139193	AssignmentExpression	xchr <<= 4		138026	0		<<=			
ANR	139194	Identifier	xchr		138026	0					
ANR	139195	PrimaryExpression	4		138026	1					
ANR	139196	ExpressionStatement	xchr += ( isdigit ( ch ) ? ch - '0' : ( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10 )	318:28:10716:10868	138026	3	True				
ANR	139197	AssignmentExpression	xchr += ( isdigit ( ch ) ? ch - '0' : ( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10 )		138026	0		+=			
ANR	139198	Identifier	xchr		138026	0					
ANR	139199	ConditionalExpression	isdigit ( ch ) ? ch - '0' : ( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10		138026	1					
ANR	139200	Condition	isdigit ( ch )		138026	0					
ANR	139201	CallExpression	isdigit ( ch )		138026	0					
ANR	139202	Callee	isdigit		138026	0					
ANR	139203	Identifier	isdigit		138026	0					
ANR	139204	ArgumentList	ch		138026	1					
ANR	139205	Argument	ch		138026	0					
ANR	139206	Identifier	ch		138026	0					
ANR	139207	AdditiveExpression	ch - '0'		138026	1		-			
ANR	139208	Identifier	ch		138026	0					
ANR	139209	PrimaryExpression	'0'		138026	1					
ANR	139210	AdditiveExpression	( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10		138026	2		-			
ANR	139211	ConditionalExpression	isupper ( ch ) ? tolower ( ch ) : ch		138026	0					
ANR	139212	Condition	isupper ( ch )		138026	0					
ANR	139213	CallExpression	isupper ( ch )		138026	0					
ANR	139214	Callee	isupper		138026	0					
ANR	139215	Identifier	isupper		138026	0					
ANR	139216	ArgumentList	ch		138026	1					
ANR	139217	Argument	ch		138026	0					
ANR	139218	Identifier	ch		138026	0					
ANR	139219	CallExpression	tolower ( ch )		138026	1					
ANR	139220	Callee	tolower		138026	0					
ANR	139221	Identifier	tolower		138026	0					
ANR	139222	ArgumentList	ch		138026	1					
ANR	139223	Argument	ch		138026	0					
ANR	139224	Identifier	ch		138026	0					
ANR	139225	Identifier	ch		138026	2					
ANR	139226	AdditiveExpression	'a' + 10		138026	1		+			
ANR	139227	PrimaryExpression	'a'		138026	0					
ANR	139228	PrimaryExpression	10		138026	1					
ANR	139229	IfStatement	if ( xchr >= 0x100 )		138026	4					
ANR	139230	Condition	xchr >= 0x100	321:32:10902:10914	138026	0	True				
ANR	139231	RelationalExpression	xchr >= 0x100		138026	0		>=			
ANR	139232	Identifier	xchr		138026	0					
ANR	139233	PrimaryExpression	0x100		138026	1					
ANR	139234	CompoundStatement		236:47:7616:7616	138026	1					
ANR	139235	ExpressionStatement	"( * eputc ) ( xchr & 0xff , out )"	322:32:10951:10978	138026	0	True				
ANR	139236	CallExpression	"( * eputc ) ( xchr & 0xff , out )"		138026	0					
ANR	139237	Callee	* eputc		138026	0					
ANR	139238	UnaryOperationExpression	* eputc		138026	0					
ANR	139239	UnaryOperator	*		138026	0					
ANR	139240	Identifier	eputc		138026	1					
ANR	139241	ArgumentList	xchr & 0xff		138026	1					
ANR	139242	Argument	xchr & 0xff		138026	0					
ANR	139243	BitAndExpression	xchr & 0xff		138026	0		&			
ANR	139244	Identifier	xchr		138026	0					
ANR	139245	PrimaryExpression	0xff		138026	1					
ANR	139246	Argument	out		138026	1					
ANR	139247	Identifier	out		138026	0					
ANR	139248	ExpressionStatement	xchr = 1	323:32:11012:11020	138026	1	True				
ANR	139249	AssignmentExpression	xchr = 1		138026	0		=			
ANR	139250	Identifier	xchr		138026	0					
ANR	139251	PrimaryExpression	1		138026	1					
ANR	139252	ExpressionStatement	sw = 0	327:20:11120:11126	138026	36	True				
ANR	139253	AssignmentExpression	sw = 0		138026	0		=			
ANR	139254	Identifier	sw		138026	0					
ANR	139255	PrimaryExpression	0		138026	1					
ANR	139256	BreakStatement	break ;	328:20:11148:11153	138026	37	True				
ANR	139257	IfStatement	if ( newline )		138026	33					
ANR	139258	Condition	newline	331:8:11183:11189	138026	0	True				
ANR	139259	Identifier	newline		138026	0					
ANR	139260	ExpressionStatement	"( * eputc ) ( '\\n' , out )"	332:8:11200:11220	138026	1	True				
ANR	139261	CallExpression	"( * eputc ) ( '\\n' , out )"		138026	0					
ANR	139262	Callee	* eputc		138026	0					
ANR	139263	UnaryOperationExpression	* eputc		138026	0					
ANR	139264	UnaryOperator	*		138026	0					
ANR	139265	Identifier	eputc		138026	1					
ANR	139266	ArgumentList	'\\n'		138026	1					
ANR	139267	Argument	'\\n'		138026	0					
ANR	139268	PrimaryExpression	'\\n'		138026	0					
ANR	139269	Argument	out		138026	1					
ANR	139270	Identifier	out		138026	0					
ANR	139271	IfStatement	if ( out != stdout )		138026	34					
ANR	139272	Condition	out != stdout	333:8:11230:11242	138026	0	True				
ANR	139273	EqualityExpression	out != stdout		138026	0		!=			
ANR	139274	Identifier	out		138026	0					
ANR	139275	Identifier	stdout		138026	1					
ANR	139276	ExpressionStatement	fclose ( out )	334:8:11253:11264	138026	1	True				
ANR	139277	CallExpression	fclose ( out )		138026	0					
ANR	139278	Callee	fclose		138026	0					
ANR	139279	Identifier	fclose		138026	0					
ANR	139280	ArgumentList	out		138026	1					
ANR	139281	Argument	out		138026	0					
ANR	139282	Identifier	out		138026	0					
ANR	139283	ReturnStatement	return exit_OK ;	335:4:11270:11284	138026	35	True				
ANR	139284	Identifier	exit_OK		138026	0					
ANR	139285	ReturnType	int		138026	1					
ANR	139286	Identifier	main		138026	2					
ANR	139287	ParameterList	"int argc , char * argv [ ]"		138026	3					
ANR	139288	Parameter	int argc	85:5:3276:3283	138026	0	True				
ANR	139289	ParameterType	int		138026	0					
ANR	139290	Identifier	argc		138026	1					
ANR	139291	Parameter	char * argv [ ]	85:15:3286:3297	138026	1	True				
ANR	139292	ParameterType	char * [ ]		138026	0					
ANR	139293	Identifier	argv		138026	1					
ANR	139294	CFGEntryNode	ENTRY		138026		True				
ANR	139295	CFGExitNode	EXIT		138026		True				
ANR	139296	Symbol	stdin		138026						
ANR	139297	Symbol	stdout		138026						
ANR	139298	Symbol	tolower		138026						
ANR	139299	Symbol	exit_OK		138026						
ANR	139300	Symbol	* line		138026						
ANR	139301	Symbol	* argp		138026						
ANR	139302	Symbol	fnparam		138026						
ANR	139303	Symbol	hexx		138026						
ANR	139304	Symbol	xchr		138026						
ANR	139305	Symbol	fgets		138026						
ANR	139306	Symbol	strlen		138026						
ANR	139307	Symbol	newline		138026						
ANR	139308	Symbol	* * argp		138026						
ANR	139309	Symbol	len		138026						
ANR	139310	Symbol	LINESIZESLOP		138026						
ANR	139311	Symbol	ctime		138026						
ANR	139312	Symbol	up		138026						
ANR	139313	Symbol	isdigit		138026						
ANR	139314	Symbol	isxdigit		138026						
ANR	139315	Symbol	strcmp		138026						
ANR	139316	Symbol	fname		138026						
ANR	139317	Symbol	* * i		138026						
ANR	139318	Symbol	* fmode		138026						
ANR	139319	Symbol	NULL		138026						
ANR	139320	Symbol	isalnum		138026						
ANR	139321	Symbol	exit_FAILED		138026						
ANR	139322	Symbol	in		138026						
ANR	139323	Symbol	FNSIZE		138026						
ANR	139324	Symbol	stderr		138026						
ANR	139325	Symbol	chr		138026						
ANR	139326	Symbol	fread		138026						
ANR	139327	Symbol	str		138026						
ANR	139328	Symbol	dash		138026						
ANR	139329	Symbol	* xp		138026						
ANR	139330	Symbol	* arg		138026						
ANR	139331	Symbol	extn		138026						
ANR	139332	Symbol	hputs		138026						
ANR	139333	Symbol	* up		138026						
ANR	139334	Symbol	line		138026						
ANR	139335	Symbol	fputc		138026						
ANR	139336	Symbol	interact		138026						
ANR	139337	Symbol	argv		138026						
ANR	139338	Symbol	out		138026						
ANR	139339	Symbol	arg		138026						
ANR	139340	Symbol	fmode		138026						
ANR	139341	Symbol	eputc		138026						
ANR	139342	Symbol	* str		138026						
ANR	139343	Symbol	sp		138026						
ANR	139344	Symbol	argc		138026						
ANR	139345	Symbol	fopen		138026						
ANR	139346	Symbol	sw		138026						
ANR	139347	Symbol	toupper		138026						
ANR	139348	Symbol	ch		138026						
ANR	139349	Symbol	isupper		138026						
ANR	139350	Symbol	i		138026						
ANR	139351	Symbol	eputs		138026						
ANR	139352	Symbol	nargs		138026						
ANR	139353	Symbol	hputc		138026						
ANR	139354	Symbol	* i		138026						
ANR	139355	Symbol	t		138026						
ANR	139356	Symbol	argp		138026						
ANR	139357	Symbol	fputs		138026						
ANR	139358	Symbol	LINESIZE		138026						
ANR	139359	Symbol	xp		138026						
ANR	139360	Symbol	& t		138026						
ANR	139361	Symbol	* len		138026						
ANR	139362	Function	hputc	338:0:11289:11531							
ANR	139363	FunctionDef	"hputc (int ch , FILE * out)"		139362	0					
ANR	139364	CompoundStatement		340:0:11326:11531	139362	0					
ANR	139365	Statement	static	341:4:11332:11337	139362	0	True				
ANR	139366	IdentifierDeclStatement	"const char * hex = ""0123456789abcdef"" ;"	341:11:11339:11375	139362	1	True				
ANR	139367	IdentifierDecl	"* hex = ""0123456789abcdef"""		139362	0					
ANR	139368	IdentifierDeclType	const char *		139362	0					
ANR	139369	Identifier	hex		139362	1					
ANR	139370	AssignmentExpression	"* hex = ""0123456789abcdef"""		139362	2		=			
ANR	139371	Identifier	hex		139362	0					
ANR	139372	PrimaryExpression	"""0123456789abcdef"""		139362	1					
ANR	139373	ExpressionStatement	"putc ( hex [ ( ch >> 4 ) & 0xf ] , out )"	344:4:11454:11485	139362	2	True				
ANR	139374	CallExpression	"putc ( hex [ ( ch >> 4 ) & 0xf ] , out )"		139362	0					
ANR	139375	Callee	putc		139362	0					
ANR	139376	Identifier	putc		139362	0					
ANR	139377	ArgumentList	hex [ ( ch >> 4 ) & 0xf ]		139362	1					
ANR	139378	Argument	hex [ ( ch >> 4 ) & 0xf ]		139362	0					
ANR	139379	ArrayIndexing	hex [ ( ch >> 4 ) & 0xf ]		139362	0					
ANR	139380	Identifier	hex		139362	0					
ANR	139381	BitAndExpression	( ch >> 4 ) & 0xf		139362	1		&			
ANR	139382	ShiftExpression	ch >> 4		139362	0		>>			
ANR	139383	Identifier	ch		139362	0					
ANR	139384	PrimaryExpression	4		139362	1					
ANR	139385	PrimaryExpression	0xf		139362	1					
ANR	139386	Argument	out		139362	1					
ANR	139387	Identifier	out		139362	0					
ANR	139388	ExpressionStatement	"putc ( hex [ ch & 0xf ] , out )"	345:4:11491:11515	139362	3	True				
ANR	139389	CallExpression	"putc ( hex [ ch & 0xf ] , out )"		139362	0					
ANR	139390	Callee	putc		139362	0					
ANR	139391	Identifier	putc		139362	0					
ANR	139392	ArgumentList	hex [ ch & 0xf ]		139362	1					
ANR	139393	Argument	hex [ ch & 0xf ]		139362	0					
ANR	139394	ArrayIndexing	hex [ ch & 0xf ]		139362	0					
ANR	139395	Identifier	hex		139362	0					
ANR	139396	BitAndExpression	ch & 0xf		139362	1		&			
ANR	139397	Identifier	ch		139362	0					
ANR	139398	PrimaryExpression	0xf		139362	1					
ANR	139399	Argument	out		139362	1					
ANR	139400	Identifier	out		139362	0					
ANR	139401	ReturnStatement	return 0 ;	346:4:11521:11529	139362	4	True				
ANR	139402	PrimaryExpression	0		139362	0					
ANR	139403	ReturnType	static int		139362	1					
ANR	139404	Identifier	hputc		139362	2					
ANR	139405	ParameterList	"int ch , FILE * out"		139362	3					
ANR	139406	Parameter	int ch	339:6:11306:11311	139362	0	True				
ANR	139407	ParameterType	int		139362	0					
ANR	139408	Identifier	ch		139362	1					
ANR	139409	Parameter	FILE * out	339:14:11314:11323	139362	1	True				
ANR	139410	ParameterType	FILE *		139362	0					
ANR	139411	Identifier	out		139362	1					
ANR	139412	CFGEntryNode	ENTRY		139362		True				
ANR	139413	CFGExitNode	EXIT		139362		True				
ANR	139414	Symbol	ch		139362						
ANR	139415	Symbol	* ch		139362						
ANR	139416	Symbol	hex		139362						
ANR	139417	Symbol	* hex		139362						
ANR	139418	Symbol	out		139362						
ANR	139419	Function	hputs	349:0:11534:11648							
ANR	139420	FunctionDef	"hputs (const char * str , FILE * out)"		139419	0					
ANR	139421	CompoundStatement		351:0:11580:11648	139419	0					
ANR	139422	WhileStatement	while ( * str )		139419	0					
ANR	139423	Condition	* str	352:11:11593:11596	139419	0	True				
ANR	139424	UnaryOperationExpression	* str		139419	0					
ANR	139425	UnaryOperator	*		139419	0					
ANR	139426	Identifier	str		139419	1					
ANR	139427	ExpressionStatement	"hputc ( * str ++ & 0xff , out )"	353:8:11607:11632	139419	1	True				
ANR	139428	CallExpression	"hputc ( * str ++ & 0xff , out )"		139419	0					
ANR	139429	Callee	hputc		139419	0					
ANR	139430	Identifier	hputc		139419	0					
ANR	139431	ArgumentList	* str ++ & 0xff		139419	1					
ANR	139432	Argument	* str ++ & 0xff		139419	0					
ANR	139433	BitAndExpression	* str ++ & 0xff		139419	0		&			
ANR	139434	UnaryOperationExpression	* str ++		139419	0					
ANR	139435	UnaryOperator	*		139419	0					
ANR	139436	PostIncDecOperationExpression	str ++		139419	1					
ANR	139437	Identifier	str		139419	0					
ANR	139438	IncDec	++		139419	1					
ANR	139439	PrimaryExpression	0xff		139419	1					
ANR	139440	Argument	out		139419	1					
ANR	139441	Identifier	out		139419	0					
ANR	139442	ReturnStatement	return 0 ;	354:4:11638:11646	139419	1	True				
ANR	139443	PrimaryExpression	0		139419	0					
ANR	139444	ReturnType	static int		139419	1					
ANR	139445	Identifier	hputs		139419	2					
ANR	139446	ParameterList	"const char * str , FILE * out"		139419	3					
ANR	139447	Parameter	const char * str	350:6:11551:11565	139419	0	True				
ANR	139448	ParameterType	const char *		139419	0					
ANR	139449	Identifier	str		139419	1					
ANR	139450	Parameter	FILE * out	350:23:11568:11577	139419	1	True				
ANR	139451	ParameterType	FILE *		139419	0					
ANR	139452	Identifier	out		139419	1					
ANR	139453	CFGEntryNode	ENTRY		139419		True				
ANR	139454	CFGExitNode	EXIT		139419		True				
ANR	139455	Symbol	str		139419						
ANR	139456	Symbol	* str ++		139419						
ANR	139457	Symbol	* str		139419						
ANR	139458	Symbol	out		139419						
