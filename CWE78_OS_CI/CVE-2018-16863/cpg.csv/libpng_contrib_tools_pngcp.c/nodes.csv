command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7324405	File	data/converged/CVE-2018-16863_ghostpdl/libpng_contrib_tools_pngcp.c								
ANR	7324406	ClassDef	<unnamed>	117:8:3695:4245							
ANR	7324407	DeclStmt									
ANR	7324408	Decl									error_level
ANR	7324409	DeclStmt									
ANR	7324410	Decl							const char	const char [ ]	range_lo
ANR	7324411	DeclStmt									
ANR	7324412	Decl							const char	const char [ ]	range_hi
ANR	7324413	DeclStmt									
ANR	7324414	Decl							const char	const char [ ]	all
ANR	7324415	ClassDef	value_list	162:8:5692:5840							
ANR	7324416	DeclStmt									
ANR	7324417	Decl							const char	const char *	name
ANR	7324418	DeclStmt									
ANR	7324419	Decl							int	int	value
ANR	7324420	DeclStmt									
ANR	7324421	Decl							value_list	value_list	value_list
ANR	7324422	DeclStmt									
ANR	7324423	Decl							value_list	value_list [ ]	vl_windowBits_IDAT
ANR	7324424	ClassDef	option	279:8:9046:9399							
ANR	7324425	DeclStmt									
ANR	7324426	Decl							const char	const char *	name
ANR	7324427	DeclStmt									
ANR	7324428	Decl							png_uint_32	png_uint_32	opt
ANR	7324429	DeclStmt									
ANR	7324430	Decl							png_byte	png_byte	search
ANR	7324431	DeclStmt									
ANR	7324432	Decl							png_byte	png_byte	value_count
ANR	7324433	DeclStmt									
ANR	7324434	Decl							const value_list	const value_list *	values
ANR	7324435	DeclStmt									
ANR	7324436	Decl							option	option	option
ANR	7324437	DeclStmt									
ANR	7324438	Decl							const option	const option [ ]	options
ANR	7324439	DeclStmt									
ANR	7324440	Decl							const size_t	const size_t	option_count
ANR	7324441	Function	cts	377:0:12147:12524							
ANR	7324442	FunctionDef	cts (int ct)		7324441	0					
ANR	7324443	CompoundStatement		379:0:12179:12524	7324441	0					
ANR	7324444	SwitchStatement	switch ( ct )		7324441	0					
ANR	7324445	Condition	ct	380:11:12192:12193	7324441	0	True				
ANR	7324446	Identifier	ct		7324441	0					
ANR	7324447	CompoundStatement		3:3:19:19	7324441	1					
ANR	7324448	Label	case PNG_COLOR_TYPE_PALETTE :	382:6:12207:12234	7324441	0	True				
ANR	7324449	Identifier	PNG_COLOR_TYPE_PALETTE		7324441	0					
ANR	7324450	ReturnStatement	"return ""P"" ;"	382:39:12240:12250	7324441	1	True				
ANR	7324451	PrimaryExpression	"""P"""		7324441	0					
ANR	7324452	Label	case PNG_COLOR_TYPE_GRAY :	383:6:12258:12282	7324441	2	True				
ANR	7324453	Identifier	PNG_COLOR_TYPE_GRAY		7324441	0					
ANR	7324454	ReturnStatement	"return ""G"" ;"	383:39:12291:12301	7324441	3	True				
ANR	7324455	PrimaryExpression	"""G"""		7324441	0					
ANR	7324456	Label	case PNG_COLOR_TYPE_GRAY_ALPHA :	384:6:12309:12339	7324441	4	True				
ANR	7324457	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		7324441	0					
ANR	7324458	ReturnStatement	"return ""GA"" ;"	384:39:12342:12353	7324441	5	True				
ANR	7324459	PrimaryExpression	"""GA"""		7324441	0					
ANR	7324460	Label	case PNG_COLOR_TYPE_RGB :	385:6:12361:12384	7324441	6	True				
ANR	7324461	Identifier	PNG_COLOR_TYPE_RGB		7324441	0					
ANR	7324462	ReturnStatement	"return ""RGB"" ;"	385:39:12394:12406	7324441	7	True				
ANR	7324463	PrimaryExpression	"""RGB"""		7324441	0					
ANR	7324464	Label	case PNG_COLOR_TYPE_RGB_ALPHA :	386:6:12414:12443	7324441	8	True				
ANR	7324465	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		7324441	0					
ANR	7324466	ReturnStatement	"return ""RGBA"" ;"	386:39:12447:12460	7324441	9	True				
ANR	7324467	PrimaryExpression	"""RGBA"""		7324441	0					
ANR	7324468	Label	default :	387:6:12468:12475	7324441	10	True				
ANR	7324469	Identifier	default		7324441	0					
ANR	7324470	ReturnStatement	"return ""INVALID"" ;"	387:39:12501:12517	7324441	11	True				
ANR	7324471	PrimaryExpression	"""INVALID"""		7324441	0					
ANR	7324472	ReturnType	static const char *		7324441	1					
ANR	7324473	Identifier	cts		7324441	2					
ANR	7324474	ParameterList	int ct		7324441	3					
ANR	7324475	Parameter	int ct	378:4:12171:12176	7324441	0	True				
ANR	7324476	ParameterType	int		7324441	0					
ANR	7324477	Identifier	ct		7324441	1					
ANR	7324478	CFGEntryNode	ENTRY		7324441		True				
ANR	7324479	CFGExitNode	EXIT		7324441		True				
ANR	7324480	Symbol	ct		7324441						
ANR	7324481	ClassDef	display	391:0:12527:16346							
ANR	7324482	DeclStmt									
ANR	7324483	Decl							jmp_buf	jmp_buf	error_return
ANR	7324484	DeclStmt									
ANR	7324485	Decl							unsigned int	unsigned int	errset
ANR	7324486	DeclStmt									
ANR	7324487	Decl							const char	const char *	operation
ANR	7324488	DeclStmt									
ANR	7324489	Decl							const char	const char *	filename
ANR	7324490	DeclStmt									
ANR	7324491	Decl							const char	const char *	output_file
ANR	7324492	DeclStmt									
ANR	7324493	Decl							FILE	FILE *	fp
ANR	7324494	DeclStmt									
ANR	7324495	Decl							png_alloc_size_t	png_alloc_size_t	read_size
ANR	7324496	DeclStmt									
ANR	7324497	Decl							png_structp	png_structp	read_pp
ANR	7324498	DeclStmt									
ANR	7324499	Decl							png_infop	png_infop	ip
ANR	7324500	DeclStmt									
ANR	7324501	Decl							defined PNG_TEXT_SUPPORTED png_textp	defined PNG_TEXT_SUPPORTED png_textp	text_ptr
ANR	7324502	DeclStmt									
ANR	7324503	Decl							int	int	num_text
ANR	7324504	DeclStmt									
ANR	7324505	Decl							int	int	text_stashed
ANR	7324506	DeclStmt									
ANR	7324507	Decl							struct timespec	struct timespec	read_time
ANR	7324508	DeclStmt									
ANR	7324509	Decl							struct timespec	struct timespec	read_time_total
ANR	7324510	DeclStmt									
ANR	7324511	Decl							struct timespec	struct timespec	write_time
ANR	7324512	DeclStmt									
ANR	7324513	Decl							struct timespec	struct timespec	write_time_total
ANR	7324514	DeclStmt									
ANR	7324515	Decl							png_alloc_size_t	png_alloc_size_t	write_size
ANR	7324516	DeclStmt									
ANR	7324517	Decl							png_alloc_size_t	png_alloc_size_t	best_size
ANR	7324518	DeclStmt									
ANR	7324519	Decl							png_structp	png_structp	write_pp
ANR	7324520	DeclStmt									
ANR	7324521	Decl							png_alloc_size_t	png_alloc_size_t	size
ANR	7324522	DeclStmt									
ANR	7324523	Decl							png_uint_32	png_uint_32	w
ANR	7324524	DeclStmt									
ANR	7324525	Decl							png_uint_32	png_uint_32	h
ANR	7324526	DeclStmt									
ANR	7324527	Decl							int	int	bpp
ANR	7324528	DeclStmt									
ANR	7324529	Decl							png_byte	png_byte	ct
ANR	7324530	DeclStmt									
ANR	7324531	Decl							int	int	no_warnings
ANR	7324532	DeclStmt									
ANR	7324533	Decl							int	int	min_windowBits
ANR	7324534	DeclStmt									
ANR	7324535	Decl							png_uint_32	png_uint_32	results
ANR	7324536	DeclStmt									
ANR	7324537	Decl							png_uint_32	png_uint_32	options
ANR	7324538	DeclStmt									
ANR	7324539	Decl							png_byte	png_byte [ option_count ]	entry
ANR	7324540	DeclStmt									
ANR	7324541	Decl							int	int [ option_count ]	value
ANR	7324542	DeclStmt									
ANR	7324543	Decl							unsigned int	unsigned int	csp
ANR	7324544	DeclStmt									
ANR	7324545	Decl							unsigned int	unsigned int	nsp
ANR	7324546	DeclStmt									
ANR	7324547	Decl							unsigned int	unsigned int	tsp
ANR	7324548	DeclStmt									
ANR	7324549	Decl							int	int	opt_string_start
ANR	7324550	ClassDef	stack	463:3:15480:16101							
ANR	7324551	DeclStmt									
ANR	7324552	Decl							png_alloc_size_t	png_alloc_size_t	best_size
ANR	7324553	DeclStmt									
ANR	7324554	Decl							png_alloc_size_t	png_alloc_size_t	lo_size
ANR	7324555	DeclStmt									
ANR	7324556	Decl							png_alloc_size_t	png_alloc_size_t	hi_size
ANR	7324557	DeclStmt									
ANR	7324558	Decl							int	int	lo
ANR	7324559	Decl							int	int	hi
ANR	7324560	DeclStmt									
ANR	7324561	Decl							int	int	best_val
ANR	7324562	DeclStmt									
ANR	7324563	Decl							int	int	opt_string_end
ANR	7324564	DeclStmt									
ANR	7324565	Decl							png_byte	png_byte	opt
ANR	7324566	DeclStmt									
ANR	7324567	Decl							png_byte	png_byte	entry
ANR	7324568	DeclStmt									
ANR	7324569	Decl							png_byte	png_byte	end
ANR	7324570	DeclStmt									
ANR	7324571	Decl							stack	stack [ SL ]	stack
ANR	7324572	DeclStmt									
ANR	7324573	Decl							char	char [ 32 * SL ]	curr
ANR	7324574	DeclStmt									
ANR	7324575	Decl							char	char [ 32 * SL ]	best
ANR	7324576	DeclStmt									
ANR	7324577	Decl							char	char [ FILENAME_MAX ]	namebuf
ANR	7324578	Function	display_init	481:0:16350:17104							
ANR	7324579	FunctionDef	display_init (struct display * dp)		7324578	0					
ANR	7324580	CompoundStatement		487:0:16577:17104	7324578	0					
ANR	7324581	ExpressionStatement	"memset ( dp , 0 , sizeof * dp )"	488:3:16582:16607	7324578	0	True				
ANR	7324582	CallExpression	"memset ( dp , 0 , sizeof * dp )"		7324578	0					
ANR	7324583	Callee	memset		7324578	0					
ANR	7324584	Identifier	memset		7324578	0					
ANR	7324585	ArgumentList	dp		7324578	1					
ANR	7324586	Argument	dp		7324578	0					
ANR	7324587	Identifier	dp		7324578	0					
ANR	7324588	Argument	0		7324578	1					
ANR	7324589	PrimaryExpression	0		7324578	0					
ANR	7324590	Argument	sizeof * dp		7324578	2					
ANR	7324591	SizeofExpression	sizeof * dp		7324578	0					
ANR	7324592	Sizeof	sizeof		7324578	0					
ANR	7324593	UnaryOperationExpression	* dp		7324578	1					
ANR	7324594	UnaryOperator	*		7324578	0					
ANR	7324595	Identifier	dp		7324578	1					
ANR	7324596	ExpressionStatement	"dp -> operation = ""internal error"""	489:3:16612:16644	7324578	1	True				
ANR	7324597	AssignmentExpression	"dp -> operation = ""internal error"""		7324578	0		=			
ANR	7324598	PtrMemberAccess	dp -> operation		7324578	0					
ANR	7324599	Identifier	dp		7324578	0					
ANR	7324600	Identifier	operation		7324578	1					
ANR	7324601	PrimaryExpression	"""internal error"""		7324578	1					
ANR	7324602	ExpressionStatement	"dp -> filename = ""command line"""	490:3:16649:16678	7324578	2	True				
ANR	7324603	AssignmentExpression	"dp -> filename = ""command line"""		7324578	0		=			
ANR	7324604	PtrMemberAccess	dp -> filename		7324578	0					
ANR	7324605	Identifier	dp		7324578	0					
ANR	7324606	Identifier	filename		7324578	1					
ANR	7324607	PrimaryExpression	"""command line"""		7324578	1					
ANR	7324608	ExpressionStatement	"dp -> output_file = ""no output file"""	491:3:16683:16717	7324578	3	True				
ANR	7324609	AssignmentExpression	"dp -> output_file = ""no output file"""		7324578	0		=			
ANR	7324610	PtrMemberAccess	dp -> output_file		7324578	0					
ANR	7324611	Identifier	dp		7324578	0					
ANR	7324612	Identifier	output_file		7324578	1					
ANR	7324613	PrimaryExpression	"""no output file"""		7324578	1					
ANR	7324614	ExpressionStatement	dp -> options = WARNINGS	492:3:16722:16744	7324578	4	True				
ANR	7324615	AssignmentExpression	dp -> options = WARNINGS		7324578	0		=			
ANR	7324616	PtrMemberAccess	dp -> options		7324578	0					
ANR	7324617	Identifier	dp		7324578	0					
ANR	7324618	Identifier	options		7324578	1					
ANR	7324619	Identifier	WARNINGS		7324578	1					
ANR	7324620	ExpressionStatement	dp -> fp = NULL	493:3:16783:16796	7324578	5	True				
ANR	7324621	AssignmentExpression	dp -> fp = NULL		7324578	0		=			
ANR	7324622	PtrMemberAccess	dp -> fp		7324578	0					
ANR	7324623	Identifier	dp		7324578	0					
ANR	7324624	Identifier	fp		7324578	1					
ANR	7324625	Identifier	NULL		7324578	1					
ANR	7324626	ExpressionStatement	dp -> read_pp = NULL	494:3:16801:16819	7324578	6	True				
ANR	7324627	AssignmentExpression	dp -> read_pp = NULL		7324578	0		=			
ANR	7324628	PtrMemberAccess	dp -> read_pp		7324578	0					
ANR	7324629	Identifier	dp		7324578	0					
ANR	7324630	Identifier	read_pp		7324578	1					
ANR	7324631	Identifier	NULL		7324578	1					
ANR	7324632	ExpressionStatement	dp -> ip = NULL	495:3:16824:16837	7324578	7	True				
ANR	7324633	AssignmentExpression	dp -> ip = NULL		7324578	0		=			
ANR	7324634	PtrMemberAccess	dp -> ip		7324578	0					
ANR	7324635	Identifier	dp		7324578	0					
ANR	7324636	Identifier	ip		7324578	1					
ANR	7324637	Identifier	NULL		7324578	1					
ANR	7324638	ExpressionStatement	dp -> write_pp = NULL	496:3:16842:16861	7324578	8	True				
ANR	7324639	AssignmentExpression	dp -> write_pp = NULL		7324578	0		=			
ANR	7324640	PtrMemberAccess	dp -> write_pp		7324578	0					
ANR	7324641	Identifier	dp		7324578	0					
ANR	7324642	Identifier	write_pp		7324578	1					
ANR	7324643	Identifier	NULL		7324578	1					
ANR	7324644	ExpressionStatement	dp -> min_windowBits = - 1	497:3:16866:16889	7324578	9	True				
ANR	7324645	AssignmentExpression	dp -> min_windowBits = - 1		7324578	0		=			
ANR	7324646	PtrMemberAccess	dp -> min_windowBits		7324578	0					
ANR	7324647	Identifier	dp		7324578	0					
ANR	7324648	Identifier	min_windowBits		7324578	1					
ANR	7324649	UnaryOperationExpression	- 1		7324578	1					
ANR	7324650	UnaryOperator	-		7324578	0					
ANR	7324651	PrimaryExpression	1		7324578	1					
ANR	7324652	Statement	if	498:3:16946:16947	7324578	10	True				
ANR	7324653	Statement	PNG_LIBPNG_VER	498:6:16949:16962	7324578	11	True				
ANR	7324654	Statement	<	498:21:16964:16964	7324578	12	True				
ANR	7324655	Statement	10700	498:23:16966:16970	7324578	13	True				
ANR	7324656	Statement	&&	498:29:16972:16973	7324578	14	True				
ANR	7324657	Statement	defined	498:32:16975:16981	7324578	15	True				
ANR	7324658	Statement	PNG_TEXT_SUPPORTED	498:40:16983:17000	7324578	16	True				
ANR	7324659	ExpressionStatement	dp -> text_ptr = NULL	499:6:17008:17027	7324578	17	True				
ANR	7324660	AssignmentExpression	dp -> text_ptr = NULL		7324578	0		=			
ANR	7324661	PtrMemberAccess	dp -> text_ptr		7324578	0					
ANR	7324662	Identifier	dp		7324578	0					
ANR	7324663	Identifier	text_ptr		7324578	1					
ANR	7324664	Identifier	NULL		7324578	1					
ANR	7324665	ExpressionStatement	dp -> num_text = 0	500:6:17035:17051	7324578	18	True				
ANR	7324666	AssignmentExpression	dp -> num_text = 0		7324578	0		=			
ANR	7324667	PtrMemberAccess	dp -> num_text		7324578	0					
ANR	7324668	Identifier	dp		7324578	0					
ANR	7324669	Identifier	num_text		7324578	1					
ANR	7324670	PrimaryExpression	0		7324578	1					
ANR	7324671	ExpressionStatement	dp -> text_stashed = 0	501:6:17059:17079	7324578	19	True				
ANR	7324672	AssignmentExpression	dp -> text_stashed = 0		7324578	0		=			
ANR	7324673	PtrMemberAccess	dp -> text_stashed		7324578	0					
ANR	7324674	Identifier	dp		7324578	0					
ANR	7324675	Identifier	text_stashed		7324578	1					
ANR	7324676	PrimaryExpression	0		7324578	1					
ANR	7324677	Statement	endif	502:3:17084:17088	7324578	20	True				
ANR	7324678	ReturnType	static void		7324578	1					
ANR	7324679	Identifier	display_init		7324578	2					
ANR	7324680	ParameterList	struct display * dp		7324578	3					
ANR	7324681	Parameter	struct display * dp	482:13:16375:16392	7324578	0	True				
ANR	7324682	ParameterType	struct display *		7324578	0					
ANR	7324683	Identifier	dp		7324578	1					
ANR	7324684	CFGEntryNode	ENTRY		7324578		True				
ANR	7324685	CFGExitNode	EXIT		7324578		True				
ANR	7324686	Symbol	WARNINGS		7324578						
ANR	7324687	Symbol	dp -> num_text		7324578						
ANR	7324688	Symbol	NULL		7324578						
ANR	7324689	Symbol	dp -> ip		7324578						
ANR	7324690	Symbol	dp -> output_file		7324578						
ANR	7324691	Symbol	dp -> fp		7324578						
ANR	7324692	Symbol	dp -> options		7324578						
ANR	7324693	Symbol	dp -> operation		7324578						
ANR	7324694	Symbol	dp -> min_windowBits		7324578						
ANR	7324695	Symbol	dp -> read_pp		7324578						
ANR	7324696	Symbol	dp -> filename		7324578						
ANR	7324697	Symbol	dp -> text_stashed		7324578						
ANR	7324698	Symbol	dp		7324578						
ANR	7324699	Symbol	dp -> text_ptr		7324578						
ANR	7324700	Symbol	* dp		7324578						
ANR	7324701	Symbol	dp -> write_pp		7324578						
ANR	7324702	Function	display_clean_read	505:0:17107:17349							
ANR	7324703	FunctionDef	display_clean_read (struct display * dp)		7324702	0					
ANR	7324704	CompoundStatement		507:0:17158:17349	7324702	0					
ANR	7324705	IfStatement	if ( dp -> read_pp != NULL )		7324702	0					
ANR	7324706	Condition	dp -> read_pp != NULL	508:7:17167:17185	7324702	0	True				
ANR	7324707	EqualityExpression	dp -> read_pp != NULL		7324702	0		!=			
ANR	7324708	PtrMemberAccess	dp -> read_pp		7324702	0					
ANR	7324709	Identifier	dp		7324702	0					
ANR	7324710	Identifier	read_pp		7324702	1					
ANR	7324711	Identifier	NULL		7324702	1					
ANR	7324712	ExpressionStatement	"png_destroy_read_struct ( & dp -> read_pp , NULL , NULL )"	509:6:17194:17243	7324702	1	True				
ANR	7324713	CallExpression	"png_destroy_read_struct ( & dp -> read_pp , NULL , NULL )"		7324702	0					
ANR	7324714	Callee	png_destroy_read_struct		7324702	0					
ANR	7324715	Identifier	png_destroy_read_struct		7324702	0					
ANR	7324716	ArgumentList	& dp -> read_pp		7324702	1					
ANR	7324717	Argument	& dp -> read_pp		7324702	0					
ANR	7324718	UnaryOperationExpression	& dp -> read_pp		7324702	0					
ANR	7324719	UnaryOperator	&		7324702	0					
ANR	7324720	PtrMemberAccess	dp -> read_pp		7324702	1					
ANR	7324721	Identifier	dp		7324702	0					
ANR	7324722	Identifier	read_pp		7324702	1					
ANR	7324723	Argument	NULL		7324702	1					
ANR	7324724	Identifier	NULL		7324702	0					
ANR	7324725	Argument	NULL		7324702	2					
ANR	7324726	Identifier	NULL		7324702	0					
ANR	7324727	IfStatement	if ( dp -> fp != NULL )		7324702	1					
ANR	7324728	Condition	dp -> fp != NULL	511:7:17253:17266	7324702	0	True				
ANR	7324729	EqualityExpression	dp -> fp != NULL		7324702	0		!=			
ANR	7324730	PtrMemberAccess	dp -> fp		7324702	0					
ANR	7324731	Identifier	dp		7324702	0					
ANR	7324732	Identifier	fp		7324702	1					
ANR	7324733	Identifier	NULL		7324702	1					
ANR	7324734	CompoundStatement		7:6:121:138	7324702	1					
ANR	7324735	IdentifierDeclStatement	FILE * fp = dp -> fp ;	513:6:17280:17297	7324702	0	True				
ANR	7324736	IdentifierDecl	* fp = dp -> fp		7324702	0					
ANR	7324737	IdentifierDeclType	FILE *		7324702	0					
ANR	7324738	Identifier	fp		7324702	1					
ANR	7324739	AssignmentExpression	* fp = dp -> fp		7324702	2		=			
ANR	7324740	Identifier	fp		7324702	0					
ANR	7324741	PtrMemberAccess	dp -> fp		7324702	1					
ANR	7324742	Identifier	dp		7324702	0					
ANR	7324743	Identifier	fp		7324702	1					
ANR	7324744	ExpressionStatement	dp -> fp = NULL	514:6:17305:17318	7324702	1	True				
ANR	7324745	AssignmentExpression	dp -> fp = NULL		7324702	0		=			
ANR	7324746	PtrMemberAccess	dp -> fp		7324702	0					
ANR	7324747	Identifier	dp		7324702	0					
ANR	7324748	Identifier	fp		7324702	1					
ANR	7324749	Identifier	NULL		7324702	1					
ANR	7324750	ExpressionStatement	( void ) fclose ( fp )	515:6:17326:17342	7324702	2	True				
ANR	7324751	CastExpression	( void ) fclose ( fp )		7324702	0					
ANR	7324752	CastTarget	void		7324702	0					
ANR	7324753	CallExpression	fclose ( fp )		7324702	1					
ANR	7324754	Callee	fclose		7324702	0					
ANR	7324755	Identifier	fclose		7324702	0					
ANR	7324756	ArgumentList	fp		7324702	1					
ANR	7324757	Argument	fp		7324702	0					
ANR	7324758	Identifier	fp		7324702	0					
ANR	7324759	ReturnType	static void		7324702	1					
ANR	7324760	Identifier	display_clean_read		7324702	2					
ANR	7324761	ParameterList	struct display * dp		7324702	3					
ANR	7324762	Parameter	struct display * dp	506:19:17138:17155	7324702	0	True				
ANR	7324763	ParameterType	struct display *		7324702	0					
ANR	7324764	Identifier	dp		7324702	1					
ANR	7324765	CFGEntryNode	ENTRY		7324702		True				
ANR	7324766	CFGExitNode	EXIT		7324702		True				
ANR	7324767	Symbol	* dp		7324702						
ANR	7324768	Symbol	NULL		7324702						
ANR	7324769	Symbol	dp -> fp		7324702						
ANR	7324770	Symbol	dp -> read_pp		7324702						
ANR	7324771	Symbol	fp		7324702						
ANR	7324772	Symbol	& dp -> read_pp		7324702						
ANR	7324773	Symbol	dp		7324702						
ANR	7324774	Function	display_clean_write	519:0:17352:17616							
ANR	7324775	FunctionDef	display_clean_write (struct display * dp)		7324774	0					
ANR	7324776	CompoundStatement		521:0:17404:17616	7324774	0					
ANR	7324777	IfStatement	if ( dp -> fp != NULL )		7324774	0					
ANR	7324778	Condition	dp -> fp != NULL	522:7:17413:17426	7324774	0	True				
ANR	7324779	EqualityExpression	dp -> fp != NULL		7324774	0		!=			
ANR	7324780	PtrMemberAccess	dp -> fp		7324774	0					
ANR	7324781	Identifier	dp		7324774	0					
ANR	7324782	Identifier	fp		7324774	1					
ANR	7324783	Identifier	NULL		7324774	1					
ANR	7324784	CompoundStatement		4:6:35:52	7324774	1					
ANR	7324785	IdentifierDeclStatement	FILE * fp = dp -> fp ;	524:6:17440:17457	7324774	0	True				
ANR	7324786	IdentifierDecl	* fp = dp -> fp		7324774	0					
ANR	7324787	IdentifierDeclType	FILE *		7324774	0					
ANR	7324788	Identifier	fp		7324774	1					
ANR	7324789	AssignmentExpression	* fp = dp -> fp		7324774	2		=			
ANR	7324790	Identifier	fp		7324774	0					
ANR	7324791	PtrMemberAccess	dp -> fp		7324774	1					
ANR	7324792	Identifier	dp		7324774	0					
ANR	7324793	Identifier	fp		7324774	1					
ANR	7324794	ExpressionStatement	dp -> fp = NULL	525:6:17465:17478	7324774	1	True				
ANR	7324795	AssignmentExpression	dp -> fp = NULL		7324774	0		=			
ANR	7324796	PtrMemberAccess	dp -> fp		7324774	0					
ANR	7324797	Identifier	dp		7324774	0					
ANR	7324798	Identifier	fp		7324774	1					
ANR	7324799	Identifier	NULL		7324774	1					
ANR	7324800	ExpressionStatement	( void ) fclose ( fp )	526:6:17486:17502	7324774	2	True				
ANR	7324801	CastExpression	( void ) fclose ( fp )		7324774	0					
ANR	7324802	CastTarget	void		7324774	0					
ANR	7324803	CallExpression	fclose ( fp )		7324774	1					
ANR	7324804	Callee	fclose		7324774	0					
ANR	7324805	Identifier	fclose		7324774	0					
ANR	7324806	ArgumentList	fp		7324774	1					
ANR	7324807	Argument	fp		7324774	0					
ANR	7324808	Identifier	fp		7324774	0					
ANR	7324809	IfStatement	if ( dp -> write_pp != NULL )		7324774	1					
ANR	7324810	Condition	dp -> write_pp != NULL	529:7:17517:17536	7324774	0	True				
ANR	7324811	EqualityExpression	dp -> write_pp != NULL		7324774	0		!=			
ANR	7324812	PtrMemberAccess	dp -> write_pp		7324774	0					
ANR	7324813	Identifier	dp		7324774	0					
ANR	7324814	Identifier	write_pp		7324774	1					
ANR	7324815	Identifier	NULL		7324774	1					
ANR	7324816	ExpressionStatement	"png_destroy_write_struct ( & dp -> write_pp , dp -> tsp > 0 ? NULL : & dp -> ip )"	530:6:17545:17614	7324774	1	True				
ANR	7324817	CallExpression	"png_destroy_write_struct ( & dp -> write_pp , dp -> tsp > 0 ? NULL : & dp -> ip )"		7324774	0					
ANR	7324818	Callee	png_destroy_write_struct		7324774	0					
ANR	7324819	Identifier	png_destroy_write_struct		7324774	0					
ANR	7324820	ArgumentList	& dp -> write_pp		7324774	1					
ANR	7324821	Argument	& dp -> write_pp		7324774	0					
ANR	7324822	UnaryOperationExpression	& dp -> write_pp		7324774	0					
ANR	7324823	UnaryOperator	&		7324774	0					
ANR	7324824	PtrMemberAccess	dp -> write_pp		7324774	1					
ANR	7324825	Identifier	dp		7324774	0					
ANR	7324826	Identifier	write_pp		7324774	1					
ANR	7324827	Argument	dp -> tsp > 0 ? NULL : & dp -> ip		7324774	1					
ANR	7324828	ConditionalExpression	dp -> tsp > 0 ? NULL : & dp -> ip		7324774	0					
ANR	7324829	Condition	dp -> tsp > 0		7324774	0					
ANR	7324830	RelationalExpression	dp -> tsp > 0		7324774	0		>			
ANR	7324831	PtrMemberAccess	dp -> tsp		7324774	0					
ANR	7324832	Identifier	dp		7324774	0					
ANR	7324833	Identifier	tsp		7324774	1					
ANR	7324834	PrimaryExpression	0		7324774	1					
ANR	7324835	Identifier	NULL		7324774	1					
ANR	7324836	UnaryOperationExpression	& dp -> ip		7324774	2					
ANR	7324837	UnaryOperator	&		7324774	0					
ANR	7324838	PtrMemberAccess	dp -> ip		7324774	1					
ANR	7324839	Identifier	dp		7324774	0					
ANR	7324840	Identifier	ip		7324774	1					
ANR	7324841	ReturnType	static void		7324774	1					
ANR	7324842	Identifier	display_clean_write		7324774	2					
ANR	7324843	ParameterList	struct display * dp		7324774	3					
ANR	7324844	Parameter	struct display * dp	520:20:17384:17401	7324774	0	True				
ANR	7324845	ParameterType	struct display *		7324774	0					
ANR	7324846	Identifier	dp		7324774	1					
ANR	7324847	CFGEntryNode	ENTRY		7324774		True				
ANR	7324848	CFGExitNode	EXIT		7324774		True				
ANR	7324849	Symbol	* dp		7324774						
ANR	7324850	Symbol	NULL		7324774						
ANR	7324851	Symbol	dp -> fp		7324774						
ANR	7324852	Symbol	fp		7324774						
ANR	7324853	Symbol	& dp -> ip		7324774						
ANR	7324854	Symbol	dp		7324774						
ANR	7324855	Symbol	dp -> tsp		7324774						
ANR	7324856	Symbol	dp -> write_pp		7324774						
ANR	7324857	Symbol	& dp -> write_pp		7324774						
ANR	7324858	Function	display_clean	533:0:17619:18246							
ANR	7324859	FunctionDef	display_clean (struct display * dp)		7324858	0					
ANR	7324860	CompoundStatement		535:0:17665:18246	7324858	0					
ANR	7324861	ExpressionStatement	display_clean_read ( dp )	536:3:17670:17692	7324858	0	True				
ANR	7324862	CallExpression	display_clean_read ( dp )		7324858	0					
ANR	7324863	Callee	display_clean_read		7324858	0					
ANR	7324864	Identifier	display_clean_read		7324858	0					
ANR	7324865	ArgumentList	dp		7324858	1					
ANR	7324866	Argument	dp		7324858	0					
ANR	7324867	Identifier	dp		7324858	0					
ANR	7324868	ExpressionStatement	display_clean_write ( dp )	537:3:17697:17720	7324858	1	True				
ANR	7324869	CallExpression	display_clean_write ( dp )		7324858	0					
ANR	7324870	Callee	display_clean_write		7324858	0					
ANR	7324871	Identifier	display_clean_write		7324858	0					
ANR	7324872	ArgumentList	dp		7324858	1					
ANR	7324873	Argument	dp		7324858	0					
ANR	7324874	Identifier	dp		7324858	0					
ANR	7324875	ExpressionStatement	dp -> output_file = NULL	538:3:17725:17747	7324858	2	True				
ANR	7324876	AssignmentExpression	dp -> output_file = NULL		7324858	0		=			
ANR	7324877	PtrMemberAccess	dp -> output_file		7324858	0					
ANR	7324878	Identifier	dp		7324858	0					
ANR	7324879	Identifier	output_file		7324858	1					
ANR	7324880	Identifier	NULL		7324858	1					
ANR	7324881	Statement	if	540:3:17753:17754	7324858	3	True				
ANR	7324882	Statement	PNG_LIBPNG_VER	540:6:17756:17769	7324858	4	True				
ANR	7324883	Statement	<	540:21:17771:17771	7324858	5	True				
ANR	7324884	Statement	10700	540:23:17773:17777	7324858	6	True				
ANR	7324885	Statement	&&	540:29:17779:17780	7324858	7	True				
ANR	7324886	Statement	defined	540:32:17782:17788	7324858	8	True				
ANR	7324887	Statement	PNG_TEXT_SUPPORTED	540:40:17790:17807	7324858	9	True				
ANR	7324888	IfStatement	if ( dp -> text_stashed )		7324858	10					
ANR	7324889	Condition	dp -> text_stashed	544:10:17977:17992	7324858	0	True				
ANR	7324890	PtrMemberAccess	dp -> text_stashed		7324858	0					
ANR	7324891	Identifier	dp		7324858	0					
ANR	7324892	Identifier	text_stashed		7324858	1					
ANR	7324893	CompoundStatement		11:6:335:335	7324858	1					
ANR	7324894	ExpressionStatement	dp -> text_stashed = 0	546:9:18012:18032	7324858	0	True				
ANR	7324895	AssignmentExpression	dp -> text_stashed = 0		7324858	0		=			
ANR	7324896	PtrMemberAccess	dp -> text_stashed		7324858	0					
ANR	7324897	Identifier	dp		7324858	0					
ANR	7324898	Identifier	text_stashed		7324858	1					
ANR	7324899	PrimaryExpression	0		7324858	1					
ANR	7324900	ExpressionStatement	dp -> num_text = 0	547:9:18043:18059	7324858	1	True				
ANR	7324901	AssignmentExpression	dp -> num_text = 0		7324858	0		=			
ANR	7324902	PtrMemberAccess	dp -> num_text		7324858	0					
ANR	7324903	Identifier	dp		7324858	0					
ANR	7324904	Identifier	num_text		7324858	1					
ANR	7324905	PrimaryExpression	0		7324858	1					
ANR	7324906	ExpressionStatement	free ( dp -> text_ptr )	548:9:18070:18088	7324858	2	True				
ANR	7324907	CallExpression	free ( dp -> text_ptr )		7324858	0					
ANR	7324908	Callee	free		7324858	0					
ANR	7324909	Identifier	free		7324858	0					
ANR	7324910	ArgumentList	dp -> text_ptr		7324858	1					
ANR	7324911	Argument	dp -> text_ptr		7324858	0					
ANR	7324912	PtrMemberAccess	dp -> text_ptr		7324858	0					
ANR	7324913	Identifier	dp		7324858	0					
ANR	7324914	Identifier	text_ptr		7324858	1					
ANR	7324915	ExpressionStatement	dp -> text_ptr = NULL	549:9:18099:18118	7324858	3	True				
ANR	7324916	AssignmentExpression	dp -> text_ptr = NULL		7324858	0		=			
ANR	7324917	PtrMemberAccess	dp -> text_ptr		7324858	0					
ANR	7324918	Identifier	dp		7324858	0					
ANR	7324919	Identifier	text_ptr		7324858	1					
ANR	7324920	Identifier	NULL		7324858	1					
ANR	7324921	Statement	endif	551:3:18131:18135	7324858	11	True				
ANR	7324922	ExpressionStatement	dp -> results = 0	554:3:18203:18218	7324858	12	True				
ANR	7324923	AssignmentExpression	dp -> results = 0		7324858	0		=			
ANR	7324924	PtrMemberAccess	dp -> results		7324858	0					
ANR	7324925	Identifier	dp		7324858	0					
ANR	7324926	Identifier	results		7324858	1					
ANR	7324927	PrimaryExpression	0		7324858	1					
ANR	7324928	ReturnType	static void		7324858	1					
ANR	7324929	Identifier	display_clean		7324858	2					
ANR	7324930	ParameterList	struct display * dp		7324858	3					
ANR	7324931	Parameter	struct display * dp	534:14:17645:17662	7324858	0	True				
ANR	7324932	ParameterType	struct display *		7324858	0					
ANR	7324933	Identifier	dp		7324858	1					
ANR	7324934	CFGEntryNode	ENTRY		7324858		True				
ANR	7324935	CFGExitNode	EXIT		7324858		True				
ANR	7324936	Symbol	dp -> text_ptr		7324858						
ANR	7324937	Symbol	* dp		7324858						
ANR	7324938	Symbol	dp -> num_text		7324858						
ANR	7324939	Symbol	dp -> results		7324858						
ANR	7324940	Symbol	NULL		7324858						
ANR	7324941	Symbol	dp -> output_file		7324858						
ANR	7324942	Symbol	dp -> text_stashed		7324858						
ANR	7324943	Symbol	dp		7324858						
ANR	7324944	Function	display_destroy	557:0:18249:18370							
ANR	7324945	FunctionDef	display_destroy (struct display * dp)		7324944	0					
ANR	7324946	CompoundStatement		559:0:18297:18370	7324944	0					
ANR	7324947	ExpressionStatement	display_clean ( dp )	561:3:18351:18368	7324944	0	True				
ANR	7324948	CallExpression	display_clean ( dp )		7324944	0					
ANR	7324949	Callee	display_clean		7324944	0					
ANR	7324950	Identifier	display_clean		7324944	0					
ANR	7324951	ArgumentList	dp		7324944	1					
ANR	7324952	Argument	dp		7324944	0					
ANR	7324953	Identifier	dp		7324944	0					
ANR	7324954	ReturnType	static void		7324944	1					
ANR	7324955	Identifier	display_destroy		7324944	2					
ANR	7324956	ParameterList	struct display * dp		7324944	3					
ANR	7324957	Parameter	struct display * dp	558:16:18277:18294	7324944	0	True				
ANR	7324958	ParameterType	struct display *		7324944	0					
ANR	7324959	Identifier	dp		7324944	1					
ANR	7324960	CFGEntryNode	ENTRY		7324944		True				
ANR	7324961	CFGExitNode	EXIT		7324944		True				
ANR	7324962	Symbol	dp		7324944						
ANR	7324963	Function	get_dp	564:0:18373:18711							
ANR	7324964	FunctionDef	get_dp (png_structp pp)		7324963	0					
ANR	7324965	CompoundStatement		567:0:18498:18711	7324963	0					
ANR	7324966	IdentifierDeclStatement	struct display * dp = ( struct display * ) png_get_error_ptr ( pp ) ;	568:3:18503:18562	7324963	0	True				
ANR	7324967	IdentifierDecl	* dp = ( struct display * ) png_get_error_ptr ( pp )		7324963	0					
ANR	7324968	IdentifierDeclType	struct display *		7324963	0					
ANR	7324969	Identifier	dp		7324963	1					
ANR	7324970	AssignmentExpression	* dp = ( struct display * ) png_get_error_ptr ( pp )		7324963	2		=			
ANR	7324971	Identifier	dp		7324963	0					
ANR	7324972	CastExpression	( struct display * ) png_get_error_ptr ( pp )		7324963	1					
ANR	7324973	CastTarget	struct display *		7324963	0					
ANR	7324974	CallExpression	png_get_error_ptr ( pp )		7324963	1					
ANR	7324975	Callee	png_get_error_ptr		7324963	0					
ANR	7324976	Identifier	png_get_error_ptr		7324963	0					
ANR	7324977	ArgumentList	pp		7324963	1					
ANR	7324978	Argument	pp		7324963	0					
ANR	7324979	Identifier	pp		7324963	0					
ANR	7324980	IfStatement	if ( dp == NULL )		7324963	1					
ANR	7324981	Condition	dp == NULL	570:7:18572:18581	7324963	0	True				
ANR	7324982	EqualityExpression	dp == NULL		7324963	0		==			
ANR	7324983	Identifier	dp		7324963	0					
ANR	7324984	Identifier	NULL		7324963	1					
ANR	7324985	CompoundStatement		5:3:88:88	7324963	1					
ANR	7324986	ExpressionStatement	"fprintf ( stderr , ""pngcp: internal error (no display)\\n"" )"	572:6:18595:18650	7324963	0	True				
ANR	7324987	CallExpression	"fprintf ( stderr , ""pngcp: internal error (no display)\\n"" )"		7324963	0					
ANR	7324988	Callee	fprintf		7324963	0					
ANR	7324989	Identifier	fprintf		7324963	0					
ANR	7324990	ArgumentList	stderr		7324963	1					
ANR	7324991	Argument	stderr		7324963	0					
ANR	7324992	Identifier	stderr		7324963	0					
ANR	7324993	Argument	"""pngcp: internal error (no display)\\n"""		7324963	1					
ANR	7324994	PrimaryExpression	"""pngcp: internal error (no display)\\n"""		7324963	0					
ANR	7324995	ExpressionStatement	exit ( 99 )	573:6:18658:18666	7324963	1	True				
ANR	7324996	CallExpression	exit ( 99 )		7324963	0					
ANR	7324997	Callee	exit		7324963	0					
ANR	7324998	Identifier	exit		7324963	0					
ANR	7324999	ArgumentList	99		7324963	1					
ANR	7325000	Argument	99		7324963	0					
ANR	7325001	PrimaryExpression	99		7324963	0					
ANR	7325002	ReturnStatement	return dp ;	576:3:18700:18709	7324963	2	True				
ANR	7325003	Identifier	dp		7324963	0					
ANR	7325004	ReturnType	static struct display *		7324963	1					
ANR	7325005	Identifier	get_dp		7324963	2					
ANR	7325006	ParameterList	png_structp pp		7324963	3					
ANR	7325007	Parameter	png_structp pp	565:7:18404:18417	7324963	0	True				
ANR	7325008	ParameterType	png_structp		7324963	0					
ANR	7325009	Identifier	pp		7324963	1					
ANR	7325010	CFGEntryNode	ENTRY		7324963		True				
ANR	7325011	CFGExitNode	EXIT		7324963		True				
ANR	7325012	Symbol	pp		7324963						
ANR	7325013	Symbol	NULL		7324963						
ANR	7325014	Symbol	png_get_error_ptr		7324963						
ANR	7325015	Symbol	dp		7324963						
ANR	7325016	Symbol	stderr		7324963						
ANR	7325017	Function	display_log	588:0:18971:20582							
ANR	7325018	FunctionDef	"display_log (struct display * dp , error_level level , const char * fmt)"		7325017	0					
ANR	7325019	CompoundStatement		593:0:19202:20582	7325017	0					
ANR	7325020	ExpressionStatement	dp -> results |= 1U << level	594:3:19207:19233	7325017	0	True				
ANR	7325021	AssignmentExpression	dp -> results |= 1U << level		7325017	0		|=			
ANR	7325022	PtrMemberAccess	dp -> results		7325017	0					
ANR	7325023	Identifier	dp		7325017	0					
ANR	7325024	Identifier	results		7325017	1					
ANR	7325025	ShiftExpression	1U << level		7325017	1		<<			
ANR	7325026	PrimaryExpression	1U		7325017	0					
ANR	7325027	Identifier	level		7325017	1					
ANR	7325028	IfStatement	if ( level > ( error_level ) ( dp -> options & LEVEL_MASK ) )		7325017	1					
ANR	7325029	Condition	level > ( error_level ) ( dp -> options & LEVEL_MASK )	596:7:19243:19289	7325017	0	True				
ANR	7325030	RelationalExpression	level > ( error_level ) ( dp -> options & LEVEL_MASK )		7325017	0		>			
ANR	7325031	Identifier	level		7325017	0					
ANR	7325032	CastExpression	( error_level ) ( dp -> options & LEVEL_MASK )		7325017	1					
ANR	7325033	CastTarget	error_level		7325017	0					
ANR	7325034	BitAndExpression	dp -> options & LEVEL_MASK		7325017	1		&			
ANR	7325035	PtrMemberAccess	dp -> options		7325017	0					
ANR	7325036	Identifier	dp		7325017	0					
ANR	7325037	Identifier	options		7325017	1					
ANR	7325038	Identifier	LEVEL_MASK		7325017	1					
ANR	7325039	CompoundStatement		7:6:122:132	7325017	1					
ANR	7325040	IdentifierDeclStatement	const char * lp ;	598:6:19303:19317	7325017	0	True				
ANR	7325041	IdentifierDecl	* lp		7325017	0					
ANR	7325042	IdentifierDeclType	const char *		7325017	0					
ANR	7325043	Identifier	lp		7325017	1					
ANR	7325044	IdentifierDeclStatement	va_list ap ;	599:6:19325:19335	7325017	1	True				
ANR	7325045	IdentifierDecl	ap		7325017	0					
ANR	7325046	IdentifierDeclType	va_list		7325017	0					
ANR	7325047	Identifier	ap		7325017	1					
ANR	7325048	SwitchStatement	switch ( level )		7325017	2					
ANR	7325049	Condition	level	601:14:19352:19356	7325017	0	True				
ANR	7325050	Identifier	level		7325017	0					
ANR	7325051	CompoundStatement		10:6:162:162	7325017	1					
ANR	7325052	Label	case INFORMATION :	603:9:19376:19392	7325017	0	True				
ANR	7325053	Identifier	INFORMATION		7325017	0					
ANR	7325054	ExpressionStatement	"lp = ""information"""	603:30:19397:19415	7325017	1	True				
ANR	7325055	AssignmentExpression	"lp = ""information"""		7325017	0		=			
ANR	7325056	Identifier	lp		7325017	0					
ANR	7325057	PrimaryExpression	"""information"""		7325017	1					
ANR	7325058	BreakStatement	break ;	603:50:19417:19422	7325017	2	True				
ANR	7325059	Label	case LIBPNG_WARNING :	604:9:19433:19452	7325017	3	True				
ANR	7325060	Identifier	LIBPNG_WARNING		7325017	0					
ANR	7325061	ExpressionStatement	"lp = ""warning(libpng)"""	604:30:19454:19476	7325017	4	True				
ANR	7325062	AssignmentExpression	"lp = ""warning(libpng)"""		7325017	0		=			
ANR	7325063	Identifier	lp		7325017	0					
ANR	7325064	PrimaryExpression	"""warning(libpng)"""		7325017	1					
ANR	7325065	BreakStatement	break ;	604:54:19478:19483	7325017	5	True				
ANR	7325066	Label	case APP_WARNING :	605:9:19494:19510	7325017	6	True				
ANR	7325067	Identifier	APP_WARNING		7325017	0					
ANR	7325068	ExpressionStatement	"lp = ""warning(pngcp)"""	605:30:19515:19536	7325017	7	True				
ANR	7325069	AssignmentExpression	"lp = ""warning(pngcp)"""		7325017	0		=			
ANR	7325070	Identifier	lp		7325017	0					
ANR	7325071	PrimaryExpression	"""warning(pngcp)"""		7325017	1					
ANR	7325072	BreakStatement	break ;	605:53:19538:19543	7325017	8	True				
ANR	7325073	Label	case APP_FAIL :	606:9:19554:19567	7325017	9	True				
ANR	7325074	Identifier	APP_FAIL		7325017	0					
ANR	7325075	ExpressionStatement	"lp = ""error(continuable)"""	606:30:19575:19600	7325017	10	True				
ANR	7325076	AssignmentExpression	"lp = ""error(continuable)"""		7325017	0		=			
ANR	7325077	Identifier	lp		7325017	0					
ANR	7325078	PrimaryExpression	"""error(continuable)"""		7325017	1					
ANR	7325079	BreakStatement	break ;	606:57:19602:19607	7325017	11	True				
ANR	7325080	Label	case LIBPNG_ERROR :	607:9:19618:19635	7325017	12	True				
ANR	7325081	Identifier	LIBPNG_ERROR		7325017	0					
ANR	7325082	ExpressionStatement	"lp = ""error(libpng)"""	607:30:19639:19659	7325017	13	True				
ANR	7325083	AssignmentExpression	"lp = ""error(libpng)"""		7325017	0		=			
ANR	7325084	Identifier	lp		7325017	0					
ANR	7325085	PrimaryExpression	"""error(libpng)"""		7325017	1					
ANR	7325086	BreakStatement	break ;	607:52:19661:19666	7325017	14	True				
ANR	7325087	Label	case LIBPNG_BUG :	608:9:19677:19692	7325017	15	True				
ANR	7325088	Identifier	LIBPNG_BUG		7325017	0					
ANR	7325089	ExpressionStatement	"lp = ""bug(libpng)"""	608:30:19698:19716	7325017	16	True				
ANR	7325090	AssignmentExpression	"lp = ""bug(libpng)"""		7325017	0		=			
ANR	7325091	Identifier	lp		7325017	0					
ANR	7325092	PrimaryExpression	"""bug(libpng)"""		7325017	1					
ANR	7325093	BreakStatement	break ;	608:50:19718:19723	7325017	17	True				
ANR	7325094	Label	case APP_ERROR :	609:9:19734:19748	7325017	18	True				
ANR	7325095	Identifier	APP_ERROR		7325017	0					
ANR	7325096	ExpressionStatement	"lp = ""error(pngcp)"""	609:30:19755:19774	7325017	19	True				
ANR	7325097	AssignmentExpression	"lp = ""error(pngcp)"""		7325017	0		=			
ANR	7325098	Identifier	lp		7325017	0					
ANR	7325099	PrimaryExpression	"""error(pngcp)"""		7325017	1					
ANR	7325100	BreakStatement	break ;	609:51:19776:19781	7325017	20	True				
ANR	7325101	Label	case USER_ERROR :	610:9:19792:19807	7325017	21	True				
ANR	7325102	Identifier	USER_ERROR		7325017	0					
ANR	7325103	ExpressionStatement	"lp = ""error(user)"""	610:30:19813:19831	7325017	22	True				
ANR	7325104	AssignmentExpression	"lp = ""error(user)"""		7325017	0		=			
ANR	7325105	Identifier	lp		7325017	0					
ANR	7325106	PrimaryExpression	"""error(user)"""		7325017	1					
ANR	7325107	BreakStatement	break ;	610:50:19833:19838	7325017	23	True				
ANR	7325108	Label	case INTERNAL_ERROR :	612:9:19850:19869	7325017	24	True				
ANR	7325109	Identifier	INTERNAL_ERROR		7325017	0					
ANR	7325110	Label	case VERBOSE :	613:9:19928:19940	7325017	25	True				
ANR	7325111	Identifier	VERBOSE		7325017	0					
ANR	7325112	Label	case WARNINGS :	613:23:19942:19955	7325017	26	True				
ANR	7325113	Identifier	WARNINGS		7325017	0					
ANR	7325114	Label	case ERRORS :	613:38:19957:19968	7325017	27	True				
ANR	7325115	Identifier	ERRORS		7325017	0					
ANR	7325116	Label	case QUIET :	613:51:19970:19980	7325017	28	True				
ANR	7325117	Identifier	QUIET		7325017	0					
ANR	7325118	Label	default :	614:9:19991:19998	7325017	29	True				
ANR	7325119	Identifier	default		7325017	0					
ANR	7325120	ExpressionStatement	"lp = ""bug(pngcp)"""	614:30:20012:20029	7325017	30	True				
ANR	7325121	AssignmentExpression	"lp = ""bug(pngcp)"""		7325017	0		=			
ANR	7325122	Identifier	lp		7325017	0					
ANR	7325123	PrimaryExpression	"""bug(pngcp)"""		7325017	1					
ANR	7325124	BreakStatement	break ;	614:49:20031:20036	7325017	31	True				
ANR	7325125	ExpressionStatement	"fprintf ( stderr , ""%s: %s: %s"" , dp -> filename != NULL ? dp -> filename : ""<stdin>"" , lp , dp -> operation )"	617:6:20053:20159	7325017	3	True				
ANR	7325126	CallExpression	"fprintf ( stderr , ""%s: %s: %s"" , dp -> filename != NULL ? dp -> filename : ""<stdin>"" , lp , dp -> operation )"		7325017	0					
ANR	7325127	Callee	fprintf		7325017	0					
ANR	7325128	Identifier	fprintf		7325017	0					
ANR	7325129	ArgumentList	stderr		7325017	1					
ANR	7325130	Argument	stderr		7325017	0					
ANR	7325131	Identifier	stderr		7325017	0					
ANR	7325132	Argument	"""%s: %s: %s"""		7325017	1					
ANR	7325133	PrimaryExpression	"""%s: %s: %s"""		7325017	0					
ANR	7325134	Argument	"dp -> filename != NULL ? dp -> filename : ""<stdin>"""		7325017	2					
ANR	7325135	ConditionalExpression	"dp -> filename != NULL ? dp -> filename : ""<stdin>"""		7325017	0					
ANR	7325136	Condition	dp -> filename != NULL		7325017	0					
ANR	7325137	EqualityExpression	dp -> filename != NULL		7325017	0		!=			
ANR	7325138	PtrMemberAccess	dp -> filename		7325017	0					
ANR	7325139	Identifier	dp		7325017	0					
ANR	7325140	Identifier	filename		7325017	1					
ANR	7325141	Identifier	NULL		7325017	1					
ANR	7325142	PtrMemberAccess	dp -> filename		7325017	1					
ANR	7325143	Identifier	dp		7325017	0					
ANR	7325144	Identifier	filename		7325017	1					
ANR	7325145	PrimaryExpression	"""<stdin>"""		7325017	2					
ANR	7325146	Argument	lp		7325017	3					
ANR	7325147	Identifier	lp		7325017	0					
ANR	7325148	Argument	dp -> operation		7325017	4					
ANR	7325149	PtrMemberAccess	dp -> operation		7325017	0					
ANR	7325150	Identifier	dp		7325017	0					
ANR	7325151	Identifier	operation		7325017	1					
ANR	7325152	ExpressionStatement	"fprintf ( stderr , "": "" )"	620:6:20168:20189	7325017	4	True				
ANR	7325153	CallExpression	"fprintf ( stderr , "": "" )"		7325017	0					
ANR	7325154	Callee	fprintf		7325017	0					
ANR	7325155	Identifier	fprintf		7325017	0					
ANR	7325156	ArgumentList	stderr		7325017	1					
ANR	7325157	Argument	stderr		7325017	0					
ANR	7325158	Identifier	stderr		7325017	0					
ANR	7325159	Argument	""": """		7325017	1					
ANR	7325160	PrimaryExpression	""": """		7325017	0					
ANR	7325161	ExpressionStatement	"va_start ( ap , fmt )"	622:6:20198:20215	7325017	5	True				
ANR	7325162	CallExpression	"va_start ( ap , fmt )"		7325017	0					
ANR	7325163	Callee	va_start		7325017	0					
ANR	7325164	Identifier	va_start		7325017	0					
ANR	7325165	ArgumentList	ap		7325017	1					
ANR	7325166	Argument	ap		7325017	0					
ANR	7325167	Identifier	ap		7325017	0					
ANR	7325168	Argument	fmt		7325017	1					
ANR	7325169	Identifier	fmt		7325017	0					
ANR	7325170	ExpressionStatement	"vfprintf ( stderr , fmt , ap )"	623:6:20223:20248	7325017	6	True				
ANR	7325171	CallExpression	"vfprintf ( stderr , fmt , ap )"		7325017	0					
ANR	7325172	Callee	vfprintf		7325017	0					
ANR	7325173	Identifier	vfprintf		7325017	0					
ANR	7325174	ArgumentList	stderr		7325017	1					
ANR	7325175	Argument	stderr		7325017	0					
ANR	7325176	Identifier	stderr		7325017	0					
ANR	7325177	Argument	fmt		7325017	1					
ANR	7325178	Identifier	fmt		7325017	0					
ANR	7325179	Argument	ap		7325017	2					
ANR	7325180	Identifier	ap		7325017	0					
ANR	7325181	ExpressionStatement	va_end ( ap )	624:6:20256:20266	7325017	7	True				
ANR	7325182	CallExpression	va_end ( ap )		7325017	0					
ANR	7325183	Callee	va_end		7325017	0					
ANR	7325184	Identifier	va_end		7325017	0					
ANR	7325185	ArgumentList	ap		7325017	1					
ANR	7325186	Argument	ap		7325017	0					
ANR	7325187	Identifier	ap		7325017	0					
ANR	7325188	ExpressionStatement	"fputc ( '\\n' , stderr )"	626:6:20275:20294	7325017	8	True				
ANR	7325189	CallExpression	"fputc ( '\\n' , stderr )"		7325017	0					
ANR	7325190	Callee	fputc		7325017	0					
ANR	7325191	Identifier	fputc		7325017	0					
ANR	7325192	ArgumentList	'\\n'		7325017	1					
ANR	7325193	Argument	'\\n'		7325017	0					
ANR	7325194	PrimaryExpression	'\\n'		7325017	0					
ANR	7325195	Argument	stderr		7325017	1					
ANR	7325196	Identifier	stderr		7325017	0					
ANR	7325197	IfStatement	if ( level > APP_FAIL || ( level > ERRORS && ! ( dp -> options & CONTINUE ) ) )		7325017	2					
ANR	7325198	Condition	level > APP_FAIL || ( level > ERRORS && ! ( dp -> options & CONTINUE ) )	631:7:20409:20473	7325017	0	True				
ANR	7325199	OrExpression	level > APP_FAIL || ( level > ERRORS && ! ( dp -> options & CONTINUE ) )		7325017	0		||			
ANR	7325200	RelationalExpression	level > APP_FAIL		7325017	0		>			
ANR	7325201	Identifier	level		7325017	0					
ANR	7325202	Identifier	APP_FAIL		7325017	1					
ANR	7325203	AndExpression	level > ERRORS && ! ( dp -> options & CONTINUE )		7325017	1		&&			
ANR	7325204	RelationalExpression	level > ERRORS		7325017	0		>			
ANR	7325205	Identifier	level		7325017	0					
ANR	7325206	Identifier	ERRORS		7325017	1					
ANR	7325207	UnaryOperationExpression	! ( dp -> options & CONTINUE )		7325017	1					
ANR	7325208	UnaryOperator	!		7325017	0					
ANR	7325209	BitAndExpression	dp -> options & CONTINUE		7325017	1		&			
ANR	7325210	PtrMemberAccess	dp -> options		7325017	0					
ANR	7325211	Identifier	dp		7325017	0					
ANR	7325212	Identifier	options		7325017	1					
ANR	7325213	Identifier	CONTINUE		7325017	1					
ANR	7325214	CompoundStatement		40:3:1276:1276	7325017	1					
ANR	7325215	IfStatement	if ( dp -> errset )		7325017	0					
ANR	7325216	Condition	dp -> errset	633:10:20491:20500	7325017	0	True				
ANR	7325217	PtrMemberAccess	dp -> errset		7325017	0					
ANR	7325218	Identifier	dp		7325017	0					
ANR	7325219	Identifier	errset		7325017	1					
ANR	7325220	ExpressionStatement	"longjmp ( dp -> error_return , level )"	634:9:20512:20544	7325017	1	True				
ANR	7325221	CallExpression	"longjmp ( dp -> error_return , level )"		7325017	0					
ANR	7325222	Callee	longjmp		7325017	0					
ANR	7325223	Identifier	longjmp		7325017	0					
ANR	7325224	ArgumentList	dp -> error_return		7325017	1					
ANR	7325225	Argument	dp -> error_return		7325017	0					
ANR	7325226	PtrMemberAccess	dp -> error_return		7325017	0					
ANR	7325227	Identifier	dp		7325017	0					
ANR	7325228	Identifier	error_return		7325017	1					
ANR	7325229	Argument	level		7325017	1					
ANR	7325230	Identifier	level		7325017	0					
ANR	7325231	ElseStatement	else		7325017	0					
ANR	7325232	ExpressionStatement	exit ( 99 )	637:9:20567:20575	7325017	0	True				
ANR	7325233	CallExpression	exit ( 99 )		7325017	0					
ANR	7325234	Callee	exit		7325017	0					
ANR	7325235	Identifier	exit		7325017	0					
ANR	7325236	ArgumentList	99		7325017	1					
ANR	7325237	Argument	99		7325017	0					
ANR	7325238	PrimaryExpression	99		7325017	0					
ANR	7325239	ReturnType	static void VGATTR		7325017	1					
ANR	7325240	Identifier	display_log		7325017	2					
ANR	7325241	ParameterList	"struct display * dp , error_level level , const char * fmt"		7325017	3					
ANR	7325242	Parameter	struct display * dp	589:12:19002:19019	7325017	0	True				
ANR	7325243	ParameterType	struct display *		7325017	0					
ANR	7325244	Identifier	dp		7325017	1					
ANR	7325245	Parameter	error_level level	589:32:19022:19038	7325017	1	True				
ANR	7325246	ParameterType	error_level		7325017	0					
ANR	7325247	Identifier	level		7325017	1					
ANR	7325248	Parameter	const char * fmt	589:51:19041:19055	7325017	2	True				
ANR	7325249	ParameterType	const char *		7325017	0					
ANR	7325250	Identifier	fmt		7325017	1					
ANR	7325251	CFGEntryNode	ENTRY		7325017		True				
ANR	7325252	CFGExitNode	EXIT		7325017		True				
ANR	7325253	Symbol	APP_FAIL		7325017						
ANR	7325254	Symbol	NULL		7325017						
ANR	7325255	Symbol	ERRORS		7325017						
ANR	7325256	Symbol	lp		7325017						
ANR	7325257	Symbol	level		7325017						
ANR	7325258	Symbol	dp -> options		7325017						
ANR	7325259	Symbol	LEVEL_MASK		7325017						
ANR	7325260	Symbol	dp -> error_return		7325017						
ANR	7325261	Symbol	dp -> operation		7325017						
ANR	7325262	Symbol	dp -> filename		7325017						
ANR	7325263	Symbol	dp		7325017						
ANR	7325264	Symbol	fmt		7325017						
ANR	7325265	Symbol	stderr		7325017						
ANR	7325266	Symbol	ap		7325017						
ANR	7325267	Symbol	CONTINUE		7325017						
ANR	7325268	Symbol	* dp		7325017						
ANR	7325269	Symbol	dp -> results		7325017						
ANR	7325270	Symbol	dp -> errset		7325017						
ANR	7325271	Function	text_stash	642:0:20642:22209							
ANR	7325272	FunctionDef	text_stash (struct display * dp)		7325271	0					
ANR	7325273	CompoundStatement		644:0:20685:22209	7325271	0					
ANR	7325274	IdentifierDeclStatement	png_textp chunks = NULL ;	663:3:21731:21754	7325271	0	True				
ANR	7325275	IdentifierDecl	chunks = NULL		7325271	0					
ANR	7325276	IdentifierDeclType	png_textp		7325271	0					
ANR	7325277	Identifier	chunks		7325271	1					
ANR	7325278	AssignmentExpression	chunks = NULL		7325271	2		=			
ANR	7325279	Identifier	NULL		7325271	0					
ANR	7325280	Identifier	NULL		7325271	1					
ANR	7325281	ExpressionStatement	"dp -> num_text = png_get_text ( dp -> write_pp , dp -> ip , & chunks , NULL )"	665:3:21760:21824	7325271	1	True				
ANR	7325282	AssignmentExpression	"dp -> num_text = png_get_text ( dp -> write_pp , dp -> ip , & chunks , NULL )"		7325271	0		=			
ANR	7325283	PtrMemberAccess	dp -> num_text		7325271	0					
ANR	7325284	Identifier	dp		7325271	0					
ANR	7325285	Identifier	num_text		7325271	1					
ANR	7325286	CallExpression	"png_get_text ( dp -> write_pp , dp -> ip , & chunks , NULL )"		7325271	1					
ANR	7325287	Callee	png_get_text		7325271	0					
ANR	7325288	Identifier	png_get_text		7325271	0					
ANR	7325289	ArgumentList	dp -> write_pp		7325271	1					
ANR	7325290	Argument	dp -> write_pp		7325271	0					
ANR	7325291	PtrMemberAccess	dp -> write_pp		7325271	0					
ANR	7325292	Identifier	dp		7325271	0					
ANR	7325293	Identifier	write_pp		7325271	1					
ANR	7325294	Argument	dp -> ip		7325271	1					
ANR	7325295	PtrMemberAccess	dp -> ip		7325271	0					
ANR	7325296	Identifier	dp		7325271	0					
ANR	7325297	Identifier	ip		7325271	1					
ANR	7325298	Argument	& chunks		7325271	2					
ANR	7325299	UnaryOperationExpression	& chunks		7325271	0					
ANR	7325300	UnaryOperator	&		7325271	0					
ANR	7325301	Identifier	chunks		7325271	1					
ANR	7325302	Argument	NULL		7325271	3					
ANR	7325303	Identifier	NULL		7325271	0					
ANR	7325304	IfStatement	if ( dp -> num_text > 0 )		7325271	2					
ANR	7325305	Condition	dp -> num_text > 0	667:7:21834:21849	7325271	0	True				
ANR	7325306	RelationalExpression	dp -> num_text > 0		7325271	0		>			
ANR	7325307	PtrMemberAccess	dp -> num_text		7325271	0					
ANR	7325308	Identifier	dp		7325271	0					
ANR	7325309	Identifier	num_text		7325271	1					
ANR	7325310	PrimaryExpression	0		7325271	1					
ANR	7325311	CompoundStatement		25:3:1169:1169	7325271	1					
ANR	7325312	ExpressionStatement	"dp -> text_ptr = voidcast ( png_textp , malloc ( dp -> num_text * sizeof * chunks ) )"	669:6:21863:21936	7325271	0	True				
ANR	7325313	AssignmentExpression	"dp -> text_ptr = voidcast ( png_textp , malloc ( dp -> num_text * sizeof * chunks ) )"		7325271	0		=			
ANR	7325314	PtrMemberAccess	dp -> text_ptr		7325271	0					
ANR	7325315	Identifier	dp		7325271	0					
ANR	7325316	Identifier	text_ptr		7325271	1					
ANR	7325317	CallExpression	"voidcast ( png_textp , malloc ( dp -> num_text * sizeof * chunks ) )"		7325271	1					
ANR	7325318	Callee	voidcast		7325271	0					
ANR	7325319	Identifier	voidcast		7325271	0					
ANR	7325320	ArgumentList	png_textp		7325271	1					
ANR	7325321	Argument	png_textp		7325271	0					
ANR	7325322	Identifier	png_textp		7325271	0					
ANR	7325323	Argument	malloc ( dp -> num_text * sizeof * chunks )		7325271	1					
ANR	7325324	CallExpression	malloc ( dp -> num_text * sizeof * chunks )		7325271	0					
ANR	7325325	Callee	malloc		7325271	0					
ANR	7325326	Identifier	malloc		7325271	0					
ANR	7325327	ArgumentList	dp -> num_text * sizeof * chunks		7325271	1					
ANR	7325328	Argument	dp -> num_text * sizeof * chunks		7325271	0					
ANR	7325329	MultiplicativeExpression	dp -> num_text * sizeof * chunks		7325271	0		*			
ANR	7325330	PtrMemberAccess	dp -> num_text		7325271	0					
ANR	7325331	Identifier	dp		7325271	0					
ANR	7325332	Identifier	num_text		7325271	1					
ANR	7325333	SizeofExpression	sizeof * chunks		7325271	1					
ANR	7325334	Sizeof	sizeof		7325271	0					
ANR	7325335	UnaryOperationExpression	* chunks		7325271	1					
ANR	7325336	UnaryOperator	*		7325271	0					
ANR	7325337	Identifier	chunks		7325271	1					
ANR	7325338	IfStatement	if ( dp -> text_ptr == NULL )		7325271	1					
ANR	7325339	Condition	dp -> text_ptr == NULL	671:10:21949:21968	7325271	0	True				
ANR	7325340	EqualityExpression	dp -> text_ptr == NULL		7325271	0		==			
ANR	7325341	PtrMemberAccess	dp -> text_ptr		7325271	0					
ANR	7325342	Identifier	dp		7325271	0					
ANR	7325343	Identifier	text_ptr		7325271	1					
ANR	7325344	Identifier	NULL		7325271	1					
ANR	7325345	ExpressionStatement	"display_log ( dp , APP_ERROR , ""text chunks: stash malloc failed"" )"	672:9:21980:22042	7325271	1	True				
ANR	7325346	CallExpression	"display_log ( dp , APP_ERROR , ""text chunks: stash malloc failed"" )"		7325271	0					
ANR	7325347	Callee	display_log		7325271	0					
ANR	7325348	Identifier	display_log		7325271	0					
ANR	7325349	ArgumentList	dp		7325271	1					
ANR	7325350	Argument	dp		7325271	0					
ANR	7325351	Identifier	dp		7325271	0					
ANR	7325352	Argument	APP_ERROR		7325271	1					
ANR	7325353	Identifier	APP_ERROR		7325271	0					
ANR	7325354	Argument	"""text chunks: stash malloc failed"""		7325271	2					
ANR	7325355	PrimaryExpression	"""text chunks: stash malloc failed"""		7325271	0					
ANR	7325356	ElseStatement	else		7325271	0					
ANR	7325357	ExpressionStatement	"memcpy ( dp -> text_ptr , chunks , dp -> num_text * sizeof * chunks )"	675:9:22065:22124	7325271	0	True				
ANR	7325358	CallExpression	"memcpy ( dp -> text_ptr , chunks , dp -> num_text * sizeof * chunks )"		7325271	0					
ANR	7325359	Callee	memcpy		7325271	0					
ANR	7325360	Identifier	memcpy		7325271	0					
ANR	7325361	ArgumentList	dp -> text_ptr		7325271	1					
ANR	7325362	Argument	dp -> text_ptr		7325271	0					
ANR	7325363	PtrMemberAccess	dp -> text_ptr		7325271	0					
ANR	7325364	Identifier	dp		7325271	0					
ANR	7325365	Identifier	text_ptr		7325271	1					
ANR	7325366	Argument	chunks		7325271	1					
ANR	7325367	Identifier	chunks		7325271	0					
ANR	7325368	Argument	dp -> num_text * sizeof * chunks		7325271	2					
ANR	7325369	MultiplicativeExpression	dp -> num_text * sizeof * chunks		7325271	0		*			
ANR	7325370	PtrMemberAccess	dp -> num_text		7325271	0					
ANR	7325371	Identifier	dp		7325271	0					
ANR	7325372	Identifier	num_text		7325271	1					
ANR	7325373	SizeofExpression	sizeof * chunks		7325271	1					
ANR	7325374	Sizeof	sizeof		7325271	0					
ANR	7325375	UnaryOperationExpression	* chunks		7325271	1					
ANR	7325376	UnaryOperator	*		7325271	0					
ANR	7325377	Identifier	chunks		7325271	1					
ANR	7325378	ExpressionStatement	dp -> text_stashed = 1	678:3:22135:22155	7325271	3	True				
ANR	7325379	AssignmentExpression	dp -> text_stashed = 1		7325271	0		=			
ANR	7325380	PtrMemberAccess	dp -> text_stashed		7325271	0					
ANR	7325381	Identifier	dp		7325271	0					
ANR	7325382	Identifier	text_stashed		7325271	1					
ANR	7325383	PrimaryExpression	1		7325271	1					
ANR	7325384	ReturnType	static void		7325271	1					
ANR	7325385	Identifier	text_stash		7325271	2					
ANR	7325386	ParameterList	struct display * dp		7325271	3					
ANR	7325387	Parameter	struct display * dp	643:11:20665:20682	7325271	0	True				
ANR	7325388	ParameterType	struct display *		7325271	0					
ANR	7325389	Identifier	dp		7325271	1					
ANR	7325390	CFGEntryNode	ENTRY		7325271		True				
ANR	7325391	CFGExitNode	EXIT		7325271		True				
ANR	7325392	Symbol	dp -> num_text		7325271						
ANR	7325393	Symbol	malloc		7325271						
ANR	7325394	Symbol	NULL		7325271						
ANR	7325395	Symbol	dp -> ip		7325271						
ANR	7325396	Symbol	* chunks		7325271						
ANR	7325397	Symbol	chunks		7325271						
ANR	7325398	Symbol	voidcast		7325271						
ANR	7325399	Symbol	dp -> text_stashed		7325271						
ANR	7325400	Symbol	dp		7325271						
ANR	7325401	Symbol	png_get_text		7325271						
ANR	7325402	Symbol	png_textp		7325271						
ANR	7325403	Symbol	dp -> text_ptr		7325271						
ANR	7325404	Symbol	* dp		7325271						
ANR	7325405	Symbol	& chunks		7325271						
ANR	7325406	Symbol	APP_ERROR		7325271						
ANR	7325407	Symbol	dp -> write_pp		7325271						
ANR	7325408	Function	text_restore	683:0:22274:22467							
ANR	7325409	FunctionDef	text_restore (struct display * dp)		7325408	0					
ANR	7325410	CompoundStatement		685:0:22319:22467	7325408	0					
ANR	7325411	IfStatement	if ( dp -> text_ptr != NULL )		7325408	0					
ANR	7325412	Condition	dp -> text_ptr != NULL	687:7:22375:22394	7325408	0	True				
ANR	7325413	EqualityExpression	dp -> text_ptr != NULL		7325408	0		!=			
ANR	7325414	PtrMemberAccess	dp -> text_ptr		7325408	0					
ANR	7325415	Identifier	dp		7325408	0					
ANR	7325416	Identifier	text_ptr		7325408	1					
ANR	7325417	Identifier	NULL		7325408	1					
ANR	7325418	ExpressionStatement	"png_set_text ( dp -> write_pp , dp -> ip , dp -> text_ptr , dp -> num_text )"	688:6:22403:22465	7325408	1	True				
ANR	7325419	CallExpression	"png_set_text ( dp -> write_pp , dp -> ip , dp -> text_ptr , dp -> num_text )"		7325408	0					
ANR	7325420	Callee	png_set_text		7325408	0					
ANR	7325421	Identifier	png_set_text		7325408	0					
ANR	7325422	ArgumentList	dp -> write_pp		7325408	1					
ANR	7325423	Argument	dp -> write_pp		7325408	0					
ANR	7325424	PtrMemberAccess	dp -> write_pp		7325408	0					
ANR	7325425	Identifier	dp		7325408	0					
ANR	7325426	Identifier	write_pp		7325408	1					
ANR	7325427	Argument	dp -> ip		7325408	1					
ANR	7325428	PtrMemberAccess	dp -> ip		7325408	0					
ANR	7325429	Identifier	dp		7325408	0					
ANR	7325430	Identifier	ip		7325408	1					
ANR	7325431	Argument	dp -> text_ptr		7325408	2					
ANR	7325432	PtrMemberAccess	dp -> text_ptr		7325408	0					
ANR	7325433	Identifier	dp		7325408	0					
ANR	7325434	Identifier	text_ptr		7325408	1					
ANR	7325435	Argument	dp -> num_text		7325408	3					
ANR	7325436	PtrMemberAccess	dp -> num_text		7325408	0					
ANR	7325437	Identifier	dp		7325408	0					
ANR	7325438	Identifier	num_text		7325408	1					
ANR	7325439	ReturnType	static void		7325408	1					
ANR	7325440	Identifier	text_restore		7325408	2					
ANR	7325441	ParameterList	struct display * dp		7325408	3					
ANR	7325442	Parameter	struct display * dp	684:13:22299:22316	7325408	0	True				
ANR	7325443	ParameterType	struct display *		7325408	0					
ANR	7325444	Identifier	dp		7325408	1					
ANR	7325445	CFGEntryNode	ENTRY		7325408		True				
ANR	7325446	CFGExitNode	EXIT		7325408		True				
ANR	7325447	Symbol	dp -> text_ptr		7325408						
ANR	7325448	Symbol	* dp		7325408						
ANR	7325449	Symbol	dp -> num_text		7325408						
ANR	7325450	Symbol	NULL		7325408						
ANR	7325451	Symbol	dp -> ip		7325408						
ANR	7325452	Symbol	dp		7325408						
ANR	7325453	Symbol	dp -> write_pp		7325408						
ANR	7325454	Function	option_index	711:0:22968:23694							
ANR	7325455	FunctionDef	"option_index (struct display * dp , const char * opt , size_t len)"		7325454	0					
ANR	7325456	CompoundStatement		717:0:23242:23694	7325454	0					
ANR	7325457	IdentifierDeclStatement	png_byte j ;	718:3:23247:23257	7325454	0	True				
ANR	7325458	IdentifierDecl	j		7325454	0					
ANR	7325459	IdentifierDeclType	png_byte		7325454	0					
ANR	7325460	Identifier	j		7325454	1					
ANR	7325461	ForStatement	for ( j = 0 ; j < option_count ; ++ j )		7325454	1					
ANR	7325462	ForInit	j = 0 ;	720:8:23268:23271	7325454	0	True				
ANR	7325463	AssignmentExpression	j = 0		7325454	0		=			
ANR	7325464	Identifier	j		7325454	0					
ANR	7325465	PrimaryExpression	0		7325454	1					
ANR	7325466	Condition	j < option_count	720:13:23273:23286	7325454	1	True				
ANR	7325467	RelationalExpression	j < option_count		7325454	0		<			
ANR	7325468	Identifier	j		7325454	0					
ANR	7325469	Identifier	option_count		7325454	1					
ANR	7325470	UnaryExpression	++ j	720:29:23289:23291	7325454	2	True				
ANR	7325471	IncDec	++		7325454	0					
ANR	7325472	Identifier	j		7325454	1					
ANR	7325473	IfStatement	"if ( strncmp ( options [ j ] . name , opt , len ) == 0 && options [ j ] . name [ len ] == 0 )"		7325454	3					
ANR	7325474	Condition	"strncmp ( options [ j ] . name , opt , len ) == 0 && options [ j ] . name [ len ] == 0"	721:10:23304:23371	7325454	0	True				
ANR	7325475	AndExpression	"strncmp ( options [ j ] . name , opt , len ) == 0 && options [ j ] . name [ len ] == 0"		7325454	0		&&			
ANR	7325476	EqualityExpression	"strncmp ( options [ j ] . name , opt , len ) == 0"		7325454	0		==			
ANR	7325477	CallExpression	"strncmp ( options [ j ] . name , opt , len )"		7325454	0					
ANR	7325478	Callee	strncmp		7325454	0					
ANR	7325479	Identifier	strncmp		7325454	0					
ANR	7325480	ArgumentList	options [ j ] . name		7325454	1					
ANR	7325481	Argument	options [ j ] . name		7325454	0					
ANR	7325482	MemberAccess	options [ j ] . name		7325454	0					
ANR	7325483	ArrayIndexing	options [ j ]		7325454	0					
ANR	7325484	Identifier	options		7325454	0					
ANR	7325485	Identifier	j		7325454	1					
ANR	7325486	Identifier	name		7325454	1					
ANR	7325487	Argument	opt		7325454	1					
ANR	7325488	Identifier	opt		7325454	0					
ANR	7325489	Argument	len		7325454	2					
ANR	7325490	Identifier	len		7325454	0					
ANR	7325491	PrimaryExpression	0		7325454	1					
ANR	7325492	EqualityExpression	options [ j ] . name [ len ] == 0		7325454	1		==			
ANR	7325493	ArrayIndexing	options [ j ] . name [ len ]		7325454	0					
ANR	7325494	MemberAccess	options [ j ] . name		7325454	0					
ANR	7325495	ArrayIndexing	options [ j ]		7325454	0					
ANR	7325496	Identifier	options		7325454	0					
ANR	7325497	Identifier	j		7325454	1					
ANR	7325498	Identifier	name		7325454	1					
ANR	7325499	Identifier	len		7325454	1					
ANR	7325500	PrimaryExpression	0		7325454	1					
ANR	7325501	ReturnStatement	return j ;	722:9:23383:23391	7325454	1	True				
ANR	7325502	Identifier	j		7325454	0					
ANR	7325503	ExpressionStatement	"display_log ( dp , dp -> errset ? INTERNAL_ERROR : USER_ERROR , ""%.*s: unknown option"" , ( int ) len , opt )"	727:3:23549:23662	7325454	2	True				
ANR	7325504	CallExpression	"display_log ( dp , dp -> errset ? INTERNAL_ERROR : USER_ERROR , ""%.*s: unknown option"" , ( int ) len , opt )"		7325454	0					
ANR	7325505	Callee	display_log		7325454	0					
ANR	7325506	Identifier	display_log		7325454	0					
ANR	7325507	ArgumentList	dp		7325454	1					
ANR	7325508	Argument	dp		7325454	0					
ANR	7325509	Identifier	dp		7325454	0					
ANR	7325510	Argument	dp -> errset ? INTERNAL_ERROR : USER_ERROR		7325454	1					
ANR	7325511	ConditionalExpression	dp -> errset ? INTERNAL_ERROR : USER_ERROR		7325454	0					
ANR	7325512	Condition	dp -> errset		7325454	0					
ANR	7325513	PtrMemberAccess	dp -> errset		7325454	0					
ANR	7325514	Identifier	dp		7325454	0					
ANR	7325515	Identifier	errset		7325454	1					
ANR	7325516	Identifier	INTERNAL_ERROR		7325454	1					
ANR	7325517	Identifier	USER_ERROR		7325454	2					
ANR	7325518	Argument	"""%.*s: unknown option"""		7325454	2					
ANR	7325519	PrimaryExpression	"""%.*s: unknown option"""		7325454	0					
ANR	7325520	Argument	( int ) len		7325454	3					
ANR	7325521	CastExpression	( int ) len		7325454	0					
ANR	7325522	CastTarget	int		7325454	0					
ANR	7325523	Identifier	len		7325454	1					
ANR	7325524	Argument	opt		7325454	4					
ANR	7325525	Identifier	opt		7325454	0					
ANR	7325526	ExpressionStatement	abort ( )	729:3:23667:23674	7325454	3	True				
ANR	7325527	CallExpression	abort ( )		7325454	0					
ANR	7325528	Callee	abort		7325454	0					
ANR	7325529	Identifier	abort		7325454	0					
ANR	7325530	ArgumentList			7325454	1					
ANR	7325531	ReturnType	static png_byte		7325454	1					
ANR	7325532	Identifier	option_index		7325454	2					
ANR	7325533	ParameterList	"struct display * dp , const char * opt , size_t len"		7325454	3					
ANR	7325534	Parameter	struct display * dp	712:13:22997:23014	7325454	0	True				
ANR	7325535	ParameterType	struct display *		7325454	0					
ANR	7325536	Identifier	dp		7325454	1					
ANR	7325537	Parameter	const char * opt	712:33:23017:23031	7325454	1	True				
ANR	7325538	ParameterType	const char *		7325454	0					
ANR	7325539	Identifier	opt		7325454	1					
ANR	7325540	Parameter	size_t len	712:50:23034:23043	7325454	2	True				
ANR	7325541	ParameterType	size_t		7325454	0					
ANR	7325542	Identifier	len		7325454	1					
ANR	7325543	CFGEntryNode	ENTRY		7325454		True				
ANR	7325544	CFGExitNode	EXIT		7325454		True				
ANR	7325545	Symbol	* * j		7325454						
ANR	7325546	Symbol	* options [ j ] . name		7325454						
ANR	7325547	Symbol	option_count		7325454						
ANR	7325548	Symbol	USER_ERROR		7325454						
ANR	7325549	Symbol	INTERNAL_ERROR		7325454						
ANR	7325550	Symbol	j		7325454						
ANR	7325551	Symbol	* * options		7325454						
ANR	7325552	Symbol	dp		7325454						
ANR	7325553	Symbol	* options		7325454						
ANR	7325554	Symbol	strncmp		7325454						
ANR	7325555	Symbol	* dp		7325454						
ANR	7325556	Symbol	opt		7325454						
ANR	7325557	Symbol	len		7325454						
ANR	7325558	Symbol	* j		7325454						
ANR	7325559	Symbol	dp -> errset		7325454						
ANR	7325560	Symbol	options		7325454						
ANR	7325561	Symbol	options [ j ] . name		7325454						
ANR	7325562	Symbol	* len		7325454						
ANR	7325563	Function	get_option	735:0:23814:24084							
ANR	7325564	FunctionDef	"get_option (struct display * dp , const char * opt , int * value)"		7325563	0					
ANR	7325565	CompoundStatement		737:0:23885:24084	7325563	0					
ANR	7325566	IdentifierDeclStatement	"const png_byte i = option_index ( dp , opt , strlen ( opt ) ) ;"	738:3:23890:23943	7325563	0	True				
ANR	7325567	IdentifierDecl	"i = option_index ( dp , opt , strlen ( opt ) )"		7325563	0					
ANR	7325568	IdentifierDeclType	const png_byte		7325563	0					
ANR	7325569	Identifier	i		7325563	1					
ANR	7325570	AssignmentExpression	"i = option_index ( dp , opt , strlen ( opt ) )"		7325563	2		=			
ANR	7325571	Identifier	i		7325563	0					
ANR	7325572	CallExpression	"option_index ( dp , opt , strlen ( opt ) )"		7325563	1					
ANR	7325573	Callee	option_index		7325563	0					
ANR	7325574	Identifier	option_index		7325563	0					
ANR	7325575	ArgumentList	dp		7325563	1					
ANR	7325576	Argument	dp		7325563	0					
ANR	7325577	Identifier	dp		7325563	0					
ANR	7325578	Argument	opt		7325563	1					
ANR	7325579	Identifier	opt		7325563	0					
ANR	7325580	Argument	strlen ( opt )		7325563	2					
ANR	7325581	CallExpression	strlen ( opt )		7325563	0					
ANR	7325582	Callee	strlen		7325563	0					
ANR	7325583	Identifier	strlen		7325563	0					
ANR	7325584	ArgumentList	opt		7325563	1					
ANR	7325585	Argument	opt		7325563	0					
ANR	7325586	Identifier	opt		7325563	0					
ANR	7325587	IfStatement	if ( dp -> entry [ i ] )		7325563	1					
ANR	7325588	Condition	dp -> entry [ i ]	740:7:23953:23964	7325563	0	True				
ANR	7325589	ArrayIndexing	dp -> entry [ i ]		7325563	0					
ANR	7325590	PtrMemberAccess	dp -> entry		7325563	0					
ANR	7325591	Identifier	dp		7325563	0					
ANR	7325592	Identifier	entry		7325563	1					
ANR	7325593	Identifier	i		7325563	1					
ANR	7325594	CompoundStatement		5:3:121:121	7325563	1					
ANR	7325595	ExpressionStatement	* value = dp -> value [ i ]	742:6:24015:24036	7325563	0	True				
ANR	7325596	AssignmentExpression	* value = dp -> value [ i ]		7325563	0		=			
ANR	7325597	UnaryOperationExpression	* value		7325563	0					
ANR	7325598	UnaryOperator	*		7325563	0					
ANR	7325599	Identifier	value		7325563	1					
ANR	7325600	ArrayIndexing	dp -> value [ i ]		7325563	1					
ANR	7325601	PtrMemberAccess	dp -> value		7325563	0					
ANR	7325602	Identifier	dp		7325563	0					
ANR	7325603	Identifier	value		7325563	1					
ANR	7325604	Identifier	i		7325563	1					
ANR	7325605	ReturnStatement	return 1 ;	743:6:24044:24052	7325563	1	True				
ANR	7325606	PrimaryExpression	1		7325563	0					
ANR	7325607	ElseStatement	else		7325563	0					
ANR	7325608	ReturnStatement	return 0 ;	747:6:24074:24082	7325563	0	True				
ANR	7325609	PrimaryExpression	0		7325563	0					
ANR	7325610	ReturnType	static int		7325563	1					
ANR	7325611	Identifier	get_option		7325563	2					
ANR	7325612	ParameterList	"struct display * dp , const char * opt , int * value"		7325563	3					
ANR	7325613	Parameter	struct display * dp	736:11:23836:23853	7325563	0	True				
ANR	7325614	ParameterType	struct display *		7325563	0					
ANR	7325615	Identifier	dp		7325563	1					
ANR	7325616	Parameter	const char * opt	736:31:23856:23870	7325563	1	True				
ANR	7325617	ParameterType	const char *		7325563	0					
ANR	7325618	Identifier	opt		7325563	1					
ANR	7325619	Parameter	int * value	736:48:23873:23882	7325563	2	True				
ANR	7325620	ParameterType	int *		7325563	0					
ANR	7325621	Identifier	value		7325563	1					
ANR	7325622	CFGEntryNode	ENTRY		7325563		True				
ANR	7325623	CFGExitNode	EXIT		7325563		True				
ANR	7325624	Symbol	i		7325563						
ANR	7325625	Symbol	dp		7325563						
ANR	7325626	Symbol	dp -> entry		7325563						
ANR	7325627	Symbol	* dp -> entry		7325563						
ANR	7325628	Symbol	strlen		7325563						
ANR	7325629	Symbol	* dp		7325563						
ANR	7325630	Symbol	opt		7325563						
ANR	7325631	Symbol	dp -> value		7325563						
ANR	7325632	Symbol	* i		7325563						
ANR	7325633	Symbol	* value		7325563						
ANR	7325634	Symbol	* dp -> value		7325563						
ANR	7325635	Symbol	* * dp		7325563						
ANR	7325636	Symbol	value		7325563						
ANR	7325637	Symbol	option_index		7325563						
ANR	7325638	Function	set_opt_string_	750:0:24087:24752							
ANR	7325639	FunctionDef	"set_opt_string_ (struct display * dp , unsigned int sp , png_byte opt , const char * entry_name)"		7325638	0					
ANR	7325640	CompoundStatement		754:0:24251:24752	7325638	0					
ANR	7325641	IdentifierDeclStatement	"int offset , add ;"	755:3:24256:24271	7325638	0	True				
ANR	7325642	IdentifierDecl	offset		7325638	0					
ANR	7325643	IdentifierDeclType	int		7325638	0					
ANR	7325644	Identifier	offset		7325638	1					
ANR	7325645	IdentifierDecl	add		7325638	1					
ANR	7325646	IdentifierDeclType	int		7325638	0					
ANR	7325647	Identifier	add		7325638	1					
ANR	7325648	IfStatement	if ( sp > 0 )		7325638	1					
ANR	7325649	Condition	sp > 0	757:7:24281:24286	7325638	0	True				
ANR	7325650	RelationalExpression	sp > 0		7325638	0		>			
ANR	7325651	Identifier	sp		7325638	0					
ANR	7325652	PrimaryExpression	0		7325638	1					
ANR	7325653	ExpressionStatement	offset = dp -> stack [ sp - 1 ] . opt_string_end	758:6:24295:24334	7325638	1	True				
ANR	7325654	AssignmentExpression	offset = dp -> stack [ sp - 1 ] . opt_string_end		7325638	0		=			
ANR	7325655	Identifier	offset		7325638	0					
ANR	7325656	MemberAccess	dp -> stack [ sp - 1 ] . opt_string_end		7325638	1					
ANR	7325657	ArrayIndexing	dp -> stack [ sp - 1 ]		7325638	0					
ANR	7325658	PtrMemberAccess	dp -> stack		7325638	0					
ANR	7325659	Identifier	dp		7325638	0					
ANR	7325660	Identifier	stack		7325638	1					
ANR	7325661	AdditiveExpression	sp - 1		7325638	1		-			
ANR	7325662	Identifier	sp		7325638	0					
ANR	7325663	PrimaryExpression	1		7325638	1					
ANR	7325664	Identifier	opt_string_end		7325638	1					
ANR	7325665	ElseStatement	else		7325638	0					
ANR	7325666	ExpressionStatement	offset = dp -> opt_string_start	761:6:24351:24380	7325638	0	True				
ANR	7325667	AssignmentExpression	offset = dp -> opt_string_start		7325638	0		=			
ANR	7325668	Identifier	offset		7325638	0					
ANR	7325669	PtrMemberAccess	dp -> opt_string_start		7325638	1					
ANR	7325670	Identifier	dp		7325638	0					
ANR	7325671	Identifier	opt_string_start		7325638	1					
ANR	7325672	IfStatement	if ( entry_name == range_lo )		7325638	2					
ANR	7325673	Condition	entry_name == range_lo	763:7:24390:24411	7325638	0	True				
ANR	7325674	EqualityExpression	entry_name == range_lo		7325638	0		==			
ANR	7325675	Identifier	entry_name		7325638	0					
ANR	7325676	Identifier	range_lo		7325638	1					
ANR	7325677	ExpressionStatement	"add = sprintf ( dp -> curr + offset , "" --%s=%d"" , options [ opt ] . name , dp -> value [ opt ] )"	764:6:24420:24509	7325638	1	True				
ANR	7325678	AssignmentExpression	"add = sprintf ( dp -> curr + offset , "" --%s=%d"" , options [ opt ] . name , dp -> value [ opt ] )"		7325638	0		=			
ANR	7325679	Identifier	add		7325638	0					
ANR	7325680	CallExpression	"sprintf ( dp -> curr + offset , "" --%s=%d"" , options [ opt ] . name , dp -> value [ opt ] )"		7325638	1					
ANR	7325681	Callee	sprintf		7325638	0					
ANR	7325682	Identifier	sprintf		7325638	0					
ANR	7325683	ArgumentList	dp -> curr + offset		7325638	1					
ANR	7325684	Argument	dp -> curr + offset		7325638	0					
ANR	7325685	AdditiveExpression	dp -> curr + offset		7325638	0		+			
ANR	7325686	PtrMemberAccess	dp -> curr		7325638	0					
ANR	7325687	Identifier	dp		7325638	0					
ANR	7325688	Identifier	curr		7325638	1					
ANR	7325689	Identifier	offset		7325638	1					
ANR	7325690	Argument	""" --%s=%d"""		7325638	1					
ANR	7325691	PrimaryExpression	""" --%s=%d"""		7325638	0					
ANR	7325692	Argument	options [ opt ] . name		7325638	2					
ANR	7325693	MemberAccess	options [ opt ] . name		7325638	0					
ANR	7325694	ArrayIndexing	options [ opt ]		7325638	0					
ANR	7325695	Identifier	options		7325638	0					
ANR	7325696	Identifier	opt		7325638	1					
ANR	7325697	Identifier	name		7325638	1					
ANR	7325698	Argument	dp -> value [ opt ]		7325638	3					
ANR	7325699	ArrayIndexing	dp -> value [ opt ]		7325638	0					
ANR	7325700	PtrMemberAccess	dp -> value		7325638	0					
ANR	7325701	Identifier	dp		7325638	0					
ANR	7325702	Identifier	value		7325638	1					
ANR	7325703	Identifier	opt		7325638	1					
ANR	7325704	ElseStatement	else		7325638	0					
ANR	7325705	ExpressionStatement	"add = sprintf ( dp -> curr + offset , "" --%s=%s"" , options [ opt ] . name , entry_name )"	768:6:24526:24599	7325638	0	True				
ANR	7325706	AssignmentExpression	"add = sprintf ( dp -> curr + offset , "" --%s=%s"" , options [ opt ] . name , entry_name )"		7325638	0		=			
ANR	7325707	Identifier	add		7325638	0					
ANR	7325708	CallExpression	"sprintf ( dp -> curr + offset , "" --%s=%s"" , options [ opt ] . name , entry_name )"		7325638	1					
ANR	7325709	Callee	sprintf		7325638	0					
ANR	7325710	Identifier	sprintf		7325638	0					
ANR	7325711	ArgumentList	dp -> curr + offset		7325638	1					
ANR	7325712	Argument	dp -> curr + offset		7325638	0					
ANR	7325713	AdditiveExpression	dp -> curr + offset		7325638	0		+			
ANR	7325714	PtrMemberAccess	dp -> curr		7325638	0					
ANR	7325715	Identifier	dp		7325638	0					
ANR	7325716	Identifier	curr		7325638	1					
ANR	7325717	Identifier	offset		7325638	1					
ANR	7325718	Argument	""" --%s=%s"""		7325638	1					
ANR	7325719	PrimaryExpression	""" --%s=%s"""		7325638	0					
ANR	7325720	Argument	options [ opt ] . name		7325638	2					
ANR	7325721	MemberAccess	options [ opt ] . name		7325638	0					
ANR	7325722	ArrayIndexing	options [ opt ]		7325638	0					
ANR	7325723	Identifier	options		7325638	0					
ANR	7325724	Identifier	opt		7325638	1					
ANR	7325725	Identifier	name		7325638	1					
ANR	7325726	Argument	entry_name		7325638	3					
ANR	7325727	Identifier	entry_name		7325638	0					
ANR	7325728	IfStatement	if ( add < 0 )		7325638	3					
ANR	7325729	Condition	add < 0	770:7:24609:24615	7325638	0	True				
ANR	7325730	RelationalExpression	add < 0		7325638	0		<			
ANR	7325731	Identifier	add		7325638	0					
ANR	7325732	PrimaryExpression	0		7325638	1					
ANR	7325733	ExpressionStatement	"display_log ( dp , INTERNAL_ERROR , ""sprintf failed"" )"	771:6:24624:24673	7325638	1	True				
ANR	7325734	CallExpression	"display_log ( dp , INTERNAL_ERROR , ""sprintf failed"" )"		7325638	0					
ANR	7325735	Callee	display_log		7325638	0					
ANR	7325736	Identifier	display_log		7325638	0					
ANR	7325737	ArgumentList	dp		7325638	1					
ANR	7325738	Argument	dp		7325638	0					
ANR	7325739	Identifier	dp		7325638	0					
ANR	7325740	Argument	INTERNAL_ERROR		7325638	1					
ANR	7325741	Identifier	INTERNAL_ERROR		7325638	0					
ANR	7325742	Argument	"""sprintf failed"""		7325638	2					
ANR	7325743	PrimaryExpression	"""sprintf failed"""		7325638	0					
ANR	7325744	ExpressionStatement	assert ( offset + add < ( int ) sizeof dp -> curr )	773:3:24679:24728	7325638	4	True				
ANR	7325745	CallExpression	assert ( offset + add < ( int ) sizeof dp -> curr )		7325638	0					
ANR	7325746	Callee	assert		7325638	0					
ANR	7325747	Identifier	assert		7325638	0					
ANR	7325748	ArgumentList	offset + add < ( int ) sizeof dp -> curr		7325638	1					
ANR	7325749	Argument	offset + add < ( int ) sizeof dp -> curr		7325638	0					
ANR	7325750	RelationalExpression	offset + add < ( int ) sizeof dp -> curr		7325638	0		<			
ANR	7325751	AdditiveExpression	offset + add		7325638	0		+			
ANR	7325752	Identifier	offset		7325638	0					
ANR	7325753	Identifier	add		7325638	1					
ANR	7325754	CastExpression	( int ) sizeof dp -> curr		7325638	1					
ANR	7325755	CastTarget	int		7325638	0					
ANR	7325756	SizeofExpression	sizeof dp -> curr		7325638	1					
ANR	7325757	Sizeof	sizeof		7325638	0					
ANR	7325758	PtrMemberAccess	dp -> curr		7325638	1					
ANR	7325759	Identifier	dp		7325638	0					
ANR	7325760	Identifier	curr		7325638	1					
ANR	7325761	ReturnStatement	return offset + add ;	774:3:24733:24750	7325638	5	True				
ANR	7325762	AdditiveExpression	offset + add		7325638	0		+			
ANR	7325763	Identifier	offset		7325638	0					
ANR	7325764	Identifier	add		7325638	1					
ANR	7325765	ReturnType	static int		7325638	1					
ANR	7325766	Identifier	set_opt_string_		7325638	2					
ANR	7325767	ParameterList	"struct display * dp , unsigned int sp , png_byte opt , const char * entry_name"		7325638	3					
ANR	7325768	Parameter	struct display * dp	751:16:24114:24131	7325638	0	True				
ANR	7325769	ParameterType	struct display *		7325638	0					
ANR	7325770	Identifier	dp		7325638	1					
ANR	7325771	Parameter	unsigned int sp	751:36:24134:24148	7325638	1	True				
ANR	7325772	ParameterType	unsigned int		7325638	0					
ANR	7325773	Identifier	sp		7325638	1					
ANR	7325774	Parameter	png_byte opt	751:53:24151:24162	7325638	2	True				
ANR	7325775	ParameterType	png_byte		7325638	0					
ANR	7325776	Identifier	opt		7325638	1					
ANR	7325777	Parameter	const char * entry_name	752:6:24171:24192	7325638	3	True				
ANR	7325778	ParameterType	const char *		7325638	0					
ANR	7325779	Identifier	entry_name		7325638	1					
ANR	7325780	CFGEntryNode	ENTRY		7325638		True				
ANR	7325781	CFGExitNode	EXIT		7325638		True				
ANR	7325782	Symbol	entry_name		7325638						
ANR	7325783	Symbol	add		7325638						
ANR	7325784	Symbol	* sp		7325638						
ANR	7325785	Symbol	* dp -> stack		7325638						
ANR	7325786	Symbol	offset		7325638						
ANR	7325787	Symbol	options [ opt ] . name		7325638						
ANR	7325788	Symbol	INTERNAL_ERROR		7325638						
ANR	7325789	Symbol	dp		7325638						
ANR	7325790	Symbol	* options		7325638						
ANR	7325791	Symbol	dp -> stack		7325638						
ANR	7325792	Symbol	sprintf		7325638						
ANR	7325793	Symbol	* dp		7325638						
ANR	7325794	Symbol	dp -> stack [ sp - 1 ] . opt_string_end		7325638						
ANR	7325795	Symbol	dp -> curr		7325638						
ANR	7325796	Symbol	opt		7325638						
ANR	7325797	Symbol	dp -> value		7325638						
ANR	7325798	Symbol	range_lo		7325638						
ANR	7325799	Symbol	* dp -> value		7325638						
ANR	7325800	Symbol	options		7325638						
ANR	7325801	Symbol	* * dp		7325638						
ANR	7325802	Symbol	dp -> opt_string_start		7325638						
ANR	7325803	Symbol	sp		7325638						
ANR	7325804	Symbol	* opt		7325638						
ANR	7325805	Function	set_opt_string	777:0:24755:25023							
ANR	7325806	FunctionDef	"set_opt_string (struct display * dp , unsigned int sp)"		7325805	0					
ANR	7325807	CompoundStatement		780:0:24875:25023	7325805	0					
ANR	7325808	ExpressionStatement	"dp -> stack [ sp ] . opt_string_end = set_opt_string_ ( dp , sp , dp -> stack [ sp ] . opt , options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ] . name )"	781:3:24880:25021	7325805	0	True				
ANR	7325809	AssignmentExpression	"dp -> stack [ sp ] . opt_string_end = set_opt_string_ ( dp , sp , dp -> stack [ sp ] . opt , options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ] . name )"		7325805	0		=			
ANR	7325810	MemberAccess	dp -> stack [ sp ] . opt_string_end		7325805	0					
ANR	7325811	ArrayIndexing	dp -> stack [ sp ]		7325805	0					
ANR	7325812	PtrMemberAccess	dp -> stack		7325805	0					
ANR	7325813	Identifier	dp		7325805	0					
ANR	7325814	Identifier	stack		7325805	1					
ANR	7325815	Identifier	sp		7325805	1					
ANR	7325816	Identifier	opt_string_end		7325805	1					
ANR	7325817	CallExpression	"set_opt_string_ ( dp , sp , dp -> stack [ sp ] . opt , options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ] . name )"		7325805	1					
ANR	7325818	Callee	set_opt_string_		7325805	0					
ANR	7325819	Identifier	set_opt_string_		7325805	0					
ANR	7325820	ArgumentList	dp		7325805	1					
ANR	7325821	Argument	dp		7325805	0					
ANR	7325822	Identifier	dp		7325805	0					
ANR	7325823	Argument	sp		7325805	1					
ANR	7325824	Identifier	sp		7325805	0					
ANR	7325825	Argument	dp -> stack [ sp ] . opt		7325805	2					
ANR	7325826	MemberAccess	dp -> stack [ sp ] . opt		7325805	0					
ANR	7325827	ArrayIndexing	dp -> stack [ sp ]		7325805	0					
ANR	7325828	PtrMemberAccess	dp -> stack		7325805	0					
ANR	7325829	Identifier	dp		7325805	0					
ANR	7325830	Identifier	stack		7325805	1					
ANR	7325831	Identifier	sp		7325805	1					
ANR	7325832	Identifier	opt		7325805	1					
ANR	7325833	Argument	options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ] . name		7325805	3					
ANR	7325834	MemberAccess	options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ] . name		7325805	0					
ANR	7325835	ArrayIndexing	options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ]		7325805	0					
ANR	7325836	MemberAccess	options [ dp -> stack [ sp ] . opt ] . values		7325805	0					
ANR	7325837	ArrayIndexing	options [ dp -> stack [ sp ] . opt ]		7325805	0					
ANR	7325838	Identifier	options		7325805	0					
ANR	7325839	MemberAccess	dp -> stack [ sp ] . opt		7325805	1					
ANR	7325840	ArrayIndexing	dp -> stack [ sp ]		7325805	0					
ANR	7325841	PtrMemberAccess	dp -> stack		7325805	0					
ANR	7325842	Identifier	dp		7325805	0					
ANR	7325843	Identifier	stack		7325805	1					
ANR	7325844	Identifier	sp		7325805	1					
ANR	7325845	Identifier	opt		7325805	1					
ANR	7325846	Identifier	values		7325805	1					
ANR	7325847	MemberAccess	dp -> stack [ sp ] . entry		7325805	1					
ANR	7325848	ArrayIndexing	dp -> stack [ sp ]		7325805	0					
ANR	7325849	PtrMemberAccess	dp -> stack		7325805	0					
ANR	7325850	Identifier	dp		7325805	0					
ANR	7325851	Identifier	stack		7325805	1					
ANR	7325852	Identifier	sp		7325805	1					
ANR	7325853	Identifier	entry		7325805	1					
ANR	7325854	Identifier	name		7325805	1					
ANR	7325855	ReturnType	static void		7325805	1					
ANR	7325856	Identifier	set_opt_string		7325805	2					
ANR	7325857	ParameterList	"struct display * dp , unsigned int sp"		7325805	3					
ANR	7325858	Parameter	struct display * dp	778:15:24782:24799	7325805	0	True				
ANR	7325859	ParameterType	struct display *		7325805	0					
ANR	7325860	Identifier	dp		7325805	1					
ANR	7325861	Parameter	unsigned int sp	778:35:24802:24816	7325805	1	True				
ANR	7325862	ParameterType	unsigned int		7325805	0					
ANR	7325863	Identifier	sp		7325805	1					
ANR	7325864	CFGEntryNode	ENTRY		7325805		True				
ANR	7325865	CFGExitNode	EXIT		7325805		True				
ANR	7325866	Symbol	* sp		7325805						
ANR	7325867	Symbol	* dp -> stack		7325805						
ANR	7325868	Symbol	* * * dp -> stack		7325805						
ANR	7325869	Symbol	* * * sp		7325805						
ANR	7325870	Symbol	dp -> stack [ sp ] . entry		7325805						
ANR	7325871	Symbol	* * sp		7325805						
ANR	7325872	Symbol	* dp -> stack [ sp ] . entry		7325805						
ANR	7325873	Symbol	dp		7325805						
ANR	7325874	Symbol	* options		7325805						
ANR	7325875	Symbol	* dp		7325805						
ANR	7325876	Symbol	options [ dp -> stack [ sp ] . opt ] . values [ dp -> stack [ sp ] . entry ] . name		7325805						
ANR	7325877	Symbol	* * * dp		7325805						
ANR	7325878	Symbol	set_opt_string_		7325805						
ANR	7325879	Symbol	options		7325805						
ANR	7325880	Symbol	* options [ dp -> stack [ sp ] . opt ] . values		7325805						
ANR	7325881	Symbol	sp		7325805						
ANR	7325882	Symbol	* dp -> stack [ sp ] . opt		7325805						
ANR	7325883	Symbol	options [ dp -> stack [ sp ] . opt ] . values		7325805						
ANR	7325884	Symbol	dp -> stack [ sp ] . opt_string_end		7325805						
ANR	7325885	Symbol	* * options		7325805						
ANR	7325886	Symbol	* * dp -> stack		7325805						
ANR	7325887	Symbol	dp -> stack		7325805						
ANR	7325888	Symbol	dp -> stack [ sp ] . opt		7325805						
ANR	7325889	Symbol	* * * * dp		7325805						
ANR	7325890	Symbol	* * dp		7325805						
ANR	7325891	Symbol	* * dp -> stack [ sp ] . opt		7325805						
ANR	7325892	Function	record_opt	785:0:25026:25844							
ANR	7325893	FunctionDef	"record_opt (struct display * dp , png_byte opt , const char * entry_name)"		7325892	0					
ANR	7325894	CompoundStatement		791:0:25289:25844	7325892	0					
ANR	7325895	IdentifierDeclStatement	const unsigned int sp = dp -> csp ;	792:3:25294:25325	7325892	0	True				
ANR	7325896	IdentifierDecl	sp = dp -> csp		7325892	0					
ANR	7325897	IdentifierDeclType	const unsigned int		7325892	0					
ANR	7325898	Identifier	sp		7325892	1					
ANR	7325899	AssignmentExpression	sp = dp -> csp		7325892	2		=			
ANR	7325900	Identifier	sp		7325892	0					
ANR	7325901	PtrMemberAccess	dp -> csp		7325892	1					
ANR	7325902	Identifier	dp		7325892	0					
ANR	7325903	Identifier	csp		7325892	1					
ANR	7325904	IfStatement	if ( sp >= dp -> tsp )		7325892	1					
ANR	7325905	Condition	sp >= dp -> tsp	794:7:25377:25389	7325892	0	True				
ANR	7325906	RelationalExpression	sp >= dp -> tsp		7325892	0		>=			
ANR	7325907	Identifier	sp		7325892	0					
ANR	7325908	PtrMemberAccess	dp -> tsp		7325892	1					
ANR	7325909	Identifier	dp		7325892	0					
ANR	7325910	Identifier	tsp		7325892	1					
ANR	7325911	CompoundStatement		10:6:316:375	7325892	1					
ANR	7325912	IdentifierDeclStatement	"const int offset = set_opt_string_ ( dp , sp , opt , entry_name ) ;"	800:6:25606:25665	7325892	0	True				
ANR	7325913	IdentifierDecl	"offset = set_opt_string_ ( dp , sp , opt , entry_name )"		7325892	0					
ANR	7325914	IdentifierDeclType	const int		7325892	0					
ANR	7325915	Identifier	offset		7325892	1					
ANR	7325916	AssignmentExpression	"offset = set_opt_string_ ( dp , sp , opt , entry_name )"		7325892	2		=			
ANR	7325917	Identifier	offset		7325892	0					
ANR	7325918	CallExpression	"set_opt_string_ ( dp , sp , opt , entry_name )"		7325892	1					
ANR	7325919	Callee	set_opt_string_		7325892	0					
ANR	7325920	Identifier	set_opt_string_		7325892	0					
ANR	7325921	ArgumentList	dp		7325892	1					
ANR	7325922	Argument	dp		7325892	0					
ANR	7325923	Identifier	dp		7325892	0					
ANR	7325924	Argument	sp		7325892	1					
ANR	7325925	Identifier	sp		7325892	0					
ANR	7325926	Argument	opt		7325892	2					
ANR	7325927	Identifier	opt		7325892	0					
ANR	7325928	Argument	entry_name		7325892	3					
ANR	7325929	Identifier	entry_name		7325892	0					
ANR	7325930	IfStatement	if ( sp > 0 )		7325892	1					
ANR	7325931	Condition	sp > 0	802:10:25678:25683	7325892	0	True				
ANR	7325932	RelationalExpression	sp > 0		7325892	0		>			
ANR	7325933	Identifier	sp		7325892	0					
ANR	7325934	PrimaryExpression	0		7325892	1					
ANR	7325935	ExpressionStatement	dp -> stack [ sp - 1 ] . opt_string_end = offset	803:9:25695:25734	7325892	1	True				
ANR	7325936	AssignmentExpression	dp -> stack [ sp - 1 ] . opt_string_end = offset		7325892	0		=			
ANR	7325937	MemberAccess	dp -> stack [ sp - 1 ] . opt_string_end		7325892	0					
ANR	7325938	ArrayIndexing	dp -> stack [ sp - 1 ]		7325892	0					
ANR	7325939	PtrMemberAccess	dp -> stack		7325892	0					
ANR	7325940	Identifier	dp		7325892	0					
ANR	7325941	Identifier	stack		7325892	1					
ANR	7325942	AdditiveExpression	sp - 1		7325892	1		-			
ANR	7325943	Identifier	sp		7325892	0					
ANR	7325944	PrimaryExpression	1		7325892	1					
ANR	7325945	Identifier	opt_string_end		7325892	1					
ANR	7325946	Identifier	offset		7325892	1					
ANR	7325947	ElseStatement	else		7325892	0					
ANR	7325948	ExpressionStatement	dp -> opt_string_start = offset	806:9:25757:25786	7325892	0	True				
ANR	7325949	AssignmentExpression	dp -> opt_string_start = offset		7325892	0		=			
ANR	7325950	PtrMemberAccess	dp -> opt_string_start		7325892	0					
ANR	7325951	Identifier	dp		7325892	0					
ANR	7325952	Identifier	opt_string_start		7325892	1					
ANR	7325953	Identifier	offset		7325892	1					
ANR	7325954	ReturnType	static void		7325892	1					
ANR	7325955	Identifier	record_opt		7325892	2					
ANR	7325956	ParameterList	"struct display * dp , png_byte opt , const char * entry_name"		7325892	3					
ANR	7325957	Parameter	struct display * dp	786:11:25049:25066	7325892	0	True				
ANR	7325958	ParameterType	struct display *		7325892	0					
ANR	7325959	Identifier	dp		7325892	1					
ANR	7325960	Parameter	png_byte opt	786:31:25069:25080	7325892	1	True				
ANR	7325961	ParameterType	png_byte		7325892	0					
ANR	7325962	Identifier	opt		7325892	1					
ANR	7325963	Parameter	const char * entry_name	786:45:25083:25104	7325892	2	True				
ANR	7325964	ParameterType	const char *		7325892	0					
ANR	7325965	Identifier	entry_name		7325892	1					
ANR	7325966	CFGEntryNode	ENTRY		7325892		True				
ANR	7325967	CFGExitNode	EXIT		7325892		True				
ANR	7325968	Symbol	entry_name		7325892						
ANR	7325969	Symbol	* sp		7325892						
ANR	7325970	Symbol	* dp -> stack		7325892						
ANR	7325971	Symbol	offset		7325892						
ANR	7325972	Symbol	dp		7325892						
ANR	7325973	Symbol	dp -> csp		7325892						
ANR	7325974	Symbol	dp -> stack		7325892						
ANR	7325975	Symbol	* dp		7325892						
ANR	7325976	Symbol	dp -> stack [ sp - 1 ] . opt_string_end		7325892						
ANR	7325977	Symbol	opt		7325892						
ANR	7325978	Symbol	set_opt_string_		7325892						
ANR	7325979	Symbol	* * dp		7325892						
ANR	7325980	Symbol	dp -> opt_string_start		7325892						
ANR	7325981	Symbol	dp -> tsp		7325892						
ANR	7325982	Symbol	sp		7325892						
ANR	7325983	Function	opt_list_end	812:0:25847:26356							
ANR	7325984	FunctionDef	"opt_list_end (struct display * dp , png_byte opt , png_byte entry)"		7325983	0					
ANR	7325985	CompoundStatement		814:0:25921:26356	7325983	0					
ANR	7325986	IfStatement	if ( options [ opt ] . values [ entry ] . name == range_lo )		7325983	0					
ANR	7325987	Condition	options [ opt ] . values [ entry ] . name == range_lo	815:7:25930:25972	7325983	0	True				
ANR	7325988	EqualityExpression	options [ opt ] . values [ entry ] . name == range_lo		7325983	0		==			
ANR	7325989	MemberAccess	options [ opt ] . values [ entry ] . name		7325983	0					
ANR	7325990	ArrayIndexing	options [ opt ] . values [ entry ]		7325983	0					
ANR	7325991	MemberAccess	options [ opt ] . values		7325983	0					
ANR	7325992	ArrayIndexing	options [ opt ]		7325983	0					
ANR	7325993	Identifier	options		7325983	0					
ANR	7325994	Identifier	opt		7325983	1					
ANR	7325995	Identifier	values		7325983	1					
ANR	7325996	Identifier	entry		7325983	1					
ANR	7325997	Identifier	name		7325983	1					
ANR	7325998	Identifier	range_lo		7325983	1					
ANR	7325999	ReturnStatement	return entry + 1U >= options [ opt ] . value_count || options [ opt ] . values [ entry + 1U ] . name != range_hi || options [ opt ] . values [ entry + 1U ] . value <= dp -> value [ opt ] ;	816:6:25981:26203	7325983	1	True				
ANR	7326000	OrExpression	entry + 1U >= options [ opt ] . value_count || options [ opt ] . values [ entry + 1U ] . name != range_hi || options [ opt ] . values [ entry + 1U ] . value <= dp -> value [ opt ]		7325983	0		||			
ANR	7326001	RelationalExpression	entry + 1U >= options [ opt ] . value_count		7325983	0		>=			
ANR	7326002	AdditiveExpression	entry + 1U		7325983	0		+			
ANR	7326003	Identifier	entry		7325983	0					
ANR	7326004	PrimaryExpression	1U		7325983	1					
ANR	7326005	MemberAccess	options [ opt ] . value_count		7325983	1					
ANR	7326006	ArrayIndexing	options [ opt ]		7325983	0					
ANR	7326007	Identifier	options		7325983	0					
ANR	7326008	Identifier	opt		7325983	1					
ANR	7326009	Identifier	value_count		7325983	1					
ANR	7326010	OrExpression	options [ opt ] . values [ entry + 1U ] . name != range_hi || options [ opt ] . values [ entry + 1U ] . value <= dp -> value [ opt ]		7325983	1		||			
ANR	7326011	EqualityExpression	options [ opt ] . values [ entry + 1U ] . name != range_hi		7325983	0		!=			
ANR	7326012	MemberAccess	options [ opt ] . values [ entry + 1U ] . name		7325983	0					
ANR	7326013	ArrayIndexing	options [ opt ] . values [ entry + 1U ]		7325983	0					
ANR	7326014	MemberAccess	options [ opt ] . values		7325983	0					
ANR	7326015	ArrayIndexing	options [ opt ]		7325983	0					
ANR	7326016	Identifier	options		7325983	0					
ANR	7326017	Identifier	opt		7325983	1					
ANR	7326018	Identifier	values		7325983	1					
ANR	7326019	AdditiveExpression	entry + 1U		7325983	1		+			
ANR	7326020	Identifier	entry		7325983	0					
ANR	7326021	PrimaryExpression	1U		7325983	1					
ANR	7326022	Identifier	name		7325983	1					
ANR	7326023	Identifier	range_hi		7325983	1					
ANR	7326024	RelationalExpression	options [ opt ] . values [ entry + 1U ] . value <= dp -> value [ opt ]		7325983	1		<=			
ANR	7326025	MemberAccess	options [ opt ] . values [ entry + 1U ] . value		7325983	0					
ANR	7326026	ArrayIndexing	options [ opt ] . values [ entry + 1U ]		7325983	0					
ANR	7326027	MemberAccess	options [ opt ] . values		7325983	0					
ANR	7326028	ArrayIndexing	options [ opt ]		7325983	0					
ANR	7326029	Identifier	options		7325983	0					
ANR	7326030	Identifier	opt		7325983	1					
ANR	7326031	Identifier	values		7325983	1					
ANR	7326032	AdditiveExpression	entry + 1U		7325983	1		+			
ANR	7326033	Identifier	entry		7325983	0					
ANR	7326034	PrimaryExpression	1U		7325983	1					
ANR	7326035	Identifier	value		7325983	1					
ANR	7326036	ArrayIndexing	dp -> value [ opt ]		7325983	1					
ANR	7326037	PtrMemberAccess	dp -> value		7325983	0					
ANR	7326038	Identifier	dp		7325983	0					
ANR	7326039	Identifier	value		7325983	1					
ANR	7326040	Identifier	opt		7325983	1					
ANR	7326041	ElseStatement	else		7325983	0					
ANR	7326042	ReturnStatement	return entry + 1U >= options [ opt ] . value_count || options [ opt ] . values [ entry + 1U ] . name == all ;	821:6:26220:26354	7325983	0	True				
ANR	7326043	OrExpression	entry + 1U >= options [ opt ] . value_count || options [ opt ] . values [ entry + 1U ] . name == all		7325983	0		||			
ANR	7326044	RelationalExpression	entry + 1U >= options [ opt ] . value_count		7325983	0		>=			
ANR	7326045	AdditiveExpression	entry + 1U		7325983	0		+			
ANR	7326046	Identifier	entry		7325983	0					
ANR	7326047	PrimaryExpression	1U		7325983	1					
ANR	7326048	MemberAccess	options [ opt ] . value_count		7325983	1					
ANR	7326049	ArrayIndexing	options [ opt ]		7325983	0					
ANR	7326050	Identifier	options		7325983	0					
ANR	7326051	Identifier	opt		7325983	1					
ANR	7326052	Identifier	value_count		7325983	1					
ANR	7326053	EqualityExpression	options [ opt ] . values [ entry + 1U ] . name == all		7325983	1		==			
ANR	7326054	MemberAccess	options [ opt ] . values [ entry + 1U ] . name		7325983	0					
ANR	7326055	ArrayIndexing	options [ opt ] . values [ entry + 1U ]		7325983	0					
ANR	7326056	MemberAccess	options [ opt ] . values		7325983	0					
ANR	7326057	ArrayIndexing	options [ opt ]		7325983	0					
ANR	7326058	Identifier	options		7325983	0					
ANR	7326059	Identifier	opt		7325983	1					
ANR	7326060	Identifier	values		7325983	1					
ANR	7326061	AdditiveExpression	entry + 1U		7325983	1		+			
ANR	7326062	Identifier	entry		7325983	0					
ANR	7326063	PrimaryExpression	1U		7325983	1					
ANR	7326064	Identifier	name		7325983	1					
ANR	7326065	Identifier	all		7325983	1					
ANR	7326066	ReturnType	static int		7325983	1					
ANR	7326067	Identifier	opt_list_end		7325983	2					
ANR	7326068	ParameterList	"struct display * dp , png_byte opt , png_byte entry"		7325983	3					
ANR	7326069	Parameter	struct display * dp	813:13:25871:25888	7325983	0	True				
ANR	7326070	ParameterType	struct display *		7325983	0					
ANR	7326071	Identifier	dp		7325983	1					
ANR	7326072	Parameter	png_byte opt	813:33:25891:25902	7325983	1	True				
ANR	7326073	ParameterType	png_byte		7325983	0					
ANR	7326074	Identifier	opt		7325983	1					
ANR	7326075	Parameter	png_byte entry	813:47:25905:25918	7325983	2	True				
ANR	7326076	ParameterType	png_byte		7325983	0					
ANR	7326077	Identifier	entry		7325983	1					
ANR	7326078	CFGEntryNode	ENTRY		7325983		True				
ANR	7326079	CFGExitNode	EXIT		7325983		True				
ANR	7326080	Symbol	all		7325983						
ANR	7326081	Symbol	* options [ opt ] . values		7325983						
ANR	7326082	Symbol	* * opt		7325983						
ANR	7326083	Symbol	options [ opt ] . values [ entry + 1U ] . value		7325983						
ANR	7326084	Symbol	* * options		7325983						
ANR	7326085	Symbol	dp		7325983						
ANR	7326086	Symbol	options [ opt ] . values [ entry ] . name		7325983						
ANR	7326087	Symbol	* options		7325983						
ANR	7326088	Symbol	entry		7325983						
ANR	7326089	Symbol	* dp		7325983						
ANR	7326090	Symbol	range_hi		7325983						
ANR	7326091	Symbol	opt		7325983						
ANR	7326092	Symbol	dp -> value		7325983						
ANR	7326093	Symbol	range_lo		7325983						
ANR	7326094	Symbol	* dp -> value		7325983						
ANR	7326095	Symbol	options		7325983						
ANR	7326096	Symbol	options [ opt ] . value_count		7325983						
ANR	7326097	Symbol	* * dp		7325983						
ANR	7326098	Symbol	* opt		7325983						
ANR	7326099	Symbol	options [ opt ] . values [ entry + 1U ] . name		7325983						
ANR	7326100	Symbol	* entry		7325983						
ANR	7326101	Symbol	options [ opt ] . values		7325983						
ANR	7326102	Function	push_opt	825:0:26359:28594							
ANR	7326103	FunctionDef	"push_opt (struct display * dp , unsigned int sp , png_byte opt , int search)"		7326102	0					
ANR	7326104	CompoundStatement		831:0:26636:28594	7326102	0					
ANR	7326105	IdentifierDeclStatement	png_byte entry ;	832:3:26641:26655	7326102	0	True				
ANR	7326106	IdentifierDecl	entry		7326102	0					
ANR	7326107	IdentifierDeclType	png_byte		7326102	0					
ANR	7326108	Identifier	entry		7326102	1					
ANR	7326109	IdentifierDeclStatement	const char * entry_name ;	833:3:26660:26682	7326102	1	True				
ANR	7326110	IdentifierDecl	* entry_name		7326102	0					
ANR	7326111	IdentifierDeclType	const char *		7326102	0					
ANR	7326112	Identifier	entry_name		7326102	1					
ANR	7326113	ExpressionStatement	assert ( sp == dp -> tsp && sp < SL )	835:3:26688:26720	7326102	2	True				
ANR	7326114	CallExpression	assert ( sp == dp -> tsp && sp < SL )		7326102	0					
ANR	7326115	Callee	assert		7326102	0					
ANR	7326116	Identifier	assert		7326102	0					
ANR	7326117	ArgumentList	sp == dp -> tsp && sp < SL		7326102	1					
ANR	7326118	Argument	sp == dp -> tsp && sp < SL		7326102	0					
ANR	7326119	AndExpression	sp == dp -> tsp && sp < SL		7326102	0		&&			
ANR	7326120	EqualityExpression	sp == dp -> tsp		7326102	0		==			
ANR	7326121	Identifier	sp		7326102	0					
ANR	7326122	PtrMemberAccess	dp -> tsp		7326102	1					
ANR	7326123	Identifier	dp		7326102	0					
ANR	7326124	Identifier	tsp		7326102	1					
ANR	7326125	RelationalExpression	sp < SL		7326102	1		<			
ANR	7326126	Identifier	sp		7326102	0					
ANR	7326127	Identifier	SL		7326102	1					
ANR	7326128	ExpressionStatement	entry = options [ opt ] . value_count	840:3:26856:26888	7326102	3	True				
ANR	7326129	AssignmentExpression	entry = options [ opt ] . value_count		7326102	0		=			
ANR	7326130	Identifier	entry		7326102	0					
ANR	7326131	MemberAccess	options [ opt ] . value_count		7326102	1					
ANR	7326132	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326133	Identifier	options		7326102	0					
ANR	7326134	Identifier	opt		7326102	1					
ANR	7326135	Identifier	value_count		7326102	1					
ANR	7326136	ExpressionStatement	assert ( entry > 0U )	841:3:26893:26911	7326102	4	True				
ANR	7326137	CallExpression	assert ( entry > 0U )		7326102	0					
ANR	7326138	Callee	assert		7326102	0					
ANR	7326139	Identifier	assert		7326102	0					
ANR	7326140	ArgumentList	entry > 0U		7326102	1					
ANR	7326141	Argument	entry > 0U		7326102	0					
ANR	7326142	RelationalExpression	entry > 0U		7326102	0		>			
ANR	7326143	Identifier	entry		7326102	0					
ANR	7326144	PrimaryExpression	0U		7326102	1					
ANR	7326145	DoStatement	do		7326102	5					
ANR	7326146	CompoundStatement		14:3:286:286	7326102	0					
ANR	7326147	ExpressionStatement	entry_name = options [ opt ] . values [ -- entry ] . name	845:6:26931:26977	7326102	0	True				
ANR	7326148	AssignmentExpression	entry_name = options [ opt ] . values [ -- entry ] . name		7326102	0		=			
ANR	7326149	Identifier	entry_name		7326102	0					
ANR	7326150	MemberAccess	options [ opt ] . values [ -- entry ] . name		7326102	1					
ANR	7326151	ArrayIndexing	options [ opt ] . values [ -- entry ]		7326102	0					
ANR	7326152	MemberAccess	options [ opt ] . values		7326102	0					
ANR	7326153	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326154	Identifier	options		7326102	0					
ANR	7326155	Identifier	opt		7326102	1					
ANR	7326156	Identifier	values		7326102	1					
ANR	7326157	UnaryExpression	-- entry		7326102	1					
ANR	7326158	IncDec	--		7326102	0					
ANR	7326159	Identifier	entry		7326102	1					
ANR	7326160	Identifier	name		7326102	1					
ANR	7326161	IfStatement	if ( entry_name == range_lo )		7326102	1					
ANR	7326162	Condition	entry_name == range_lo	846:10:26989:27010	7326102	0	True				
ANR	7326163	EqualityExpression	entry_name == range_lo		7326102	0		==			
ANR	7326164	Identifier	entry_name		7326102	0					
ANR	7326165	Identifier	range_lo		7326102	1					
ANR	7326166	BreakStatement	break ;	847:9:27022:27027	7326102	1	True				
ANR	7326167	Condition	entry > 0U	849:10:27044:27053	7326102	1	True				
ANR	7326168	RelationalExpression	entry > 0U		7326102	0		>			
ANR	7326169	Identifier	entry		7326102	0					
ANR	7326170	PrimaryExpression	0U		7326102	1					
ANR	7326171	ExpressionStatement	dp -> tsp = sp + 1U	851:3:27061:27076	7326102	6	True				
ANR	7326172	AssignmentExpression	dp -> tsp = sp + 1U		7326102	0		=			
ANR	7326173	PtrMemberAccess	dp -> tsp		7326102	0					
ANR	7326174	Identifier	dp		7326102	0					
ANR	7326175	Identifier	tsp		7326102	1					
ANR	7326176	AdditiveExpression	sp + 1U		7326102	1		+			
ANR	7326177	Identifier	sp		7326102	0					
ANR	7326178	PrimaryExpression	1U		7326102	1					
ANR	7326179	ExpressionStatement	dp -> stack [ sp ] . best_size = dp -> stack [ sp ] . lo_size = dp -> stack [ sp ] . hi_size = MAX_SIZE	852:3:27081:27175	7326102	7	True				
ANR	7326180	AssignmentExpression	dp -> stack [ sp ] . best_size = dp -> stack [ sp ] . lo_size = dp -> stack [ sp ] . hi_size = MAX_SIZE		7326102	0		=			
ANR	7326181	MemberAccess	dp -> stack [ sp ] . best_size		7326102	0					
ANR	7326182	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326183	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326184	Identifier	dp		7326102	0					
ANR	7326185	Identifier	stack		7326102	1					
ANR	7326186	Identifier	sp		7326102	1					
ANR	7326187	Identifier	best_size		7326102	1					
ANR	7326188	AssignmentExpression	dp -> stack [ sp ] . lo_size = dp -> stack [ sp ] . hi_size = MAX_SIZE		7326102	1		=			
ANR	7326189	MemberAccess	dp -> stack [ sp ] . lo_size		7326102	0					
ANR	7326190	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326191	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326192	Identifier	dp		7326102	0					
ANR	7326193	Identifier	stack		7326102	1					
ANR	7326194	Identifier	sp		7326102	1					
ANR	7326195	Identifier	lo_size		7326102	1					
ANR	7326196	AssignmentExpression	dp -> stack [ sp ] . hi_size = MAX_SIZE		7326102	1		=			
ANR	7326197	MemberAccess	dp -> stack [ sp ] . hi_size		7326102	0					
ANR	7326198	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326199	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326200	Identifier	dp		7326102	0					
ANR	7326201	Identifier	stack		7326102	1					
ANR	7326202	Identifier	sp		7326102	1					
ANR	7326203	Identifier	hi_size		7326102	1					
ANR	7326204	Identifier	MAX_SIZE		7326102	1					
ANR	7326205	IfStatement	if ( search && entry_name == range_lo )		7326102	8					
ANR	7326206	Condition	search && entry_name == range_lo	856:7:27185:27216	7326102	0	True				
ANR	7326207	AndExpression	search && entry_name == range_lo		7326102	0		&&			
ANR	7326208	Identifier	search		7326102	0					
ANR	7326209	EqualityExpression	entry_name == range_lo		7326102	1		==			
ANR	7326210	Identifier	entry_name		7326102	0					
ANR	7326211	Identifier	range_lo		7326102	1					
ANR	7326212	CompoundStatement		27:3:609:609	7326102	1					
ANR	7326213	ExpressionStatement	dp -> stack [ sp ] . lo = options [ opt ] . values [ entry ] . value	858:6:27254:27305	7326102	0	True				
ANR	7326214	AssignmentExpression	dp -> stack [ sp ] . lo = options [ opt ] . values [ entry ] . value		7326102	0		=			
ANR	7326215	MemberAccess	dp -> stack [ sp ] . lo		7326102	0					
ANR	7326216	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326217	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326218	Identifier	dp		7326102	0					
ANR	7326219	Identifier	stack		7326102	1					
ANR	7326220	Identifier	sp		7326102	1					
ANR	7326221	Identifier	lo		7326102	1					
ANR	7326222	MemberAccess	options [ opt ] . values [ entry ] . value		7326102	1					
ANR	7326223	ArrayIndexing	options [ opt ] . values [ entry ]		7326102	0					
ANR	7326224	MemberAccess	options [ opt ] . values		7326102	0					
ANR	7326225	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326226	Identifier	options		7326102	0					
ANR	7326227	Identifier	opt		7326102	1					
ANR	7326228	Identifier	values		7326102	1					
ANR	7326229	Identifier	entry		7326102	1					
ANR	7326230	Identifier	value		7326102	1					
ANR	7326231	ExpressionStatement	assert ( entry + 1 < options [ opt ] . value_count && options [ opt ] . values [ entry + 1 ] . name == range_hi )	860:6:27361:27465	7326102	1	True				
ANR	7326232	CallExpression	assert ( entry + 1 < options [ opt ] . value_count && options [ opt ] . values [ entry + 1 ] . name == range_hi )		7326102	0					
ANR	7326233	Callee	assert		7326102	0					
ANR	7326234	Identifier	assert		7326102	0					
ANR	7326235	ArgumentList	entry + 1 < options [ opt ] . value_count && options [ opt ] . values [ entry + 1 ] . name == range_hi		7326102	1					
ANR	7326236	Argument	entry + 1 < options [ opt ] . value_count && options [ opt ] . values [ entry + 1 ] . name == range_hi		7326102	0					
ANR	7326237	AndExpression	entry + 1 < options [ opt ] . value_count && options [ opt ] . values [ entry + 1 ] . name == range_hi		7326102	0		&&			
ANR	7326238	RelationalExpression	entry + 1 < options [ opt ] . value_count		7326102	0		<			
ANR	7326239	AdditiveExpression	entry + 1		7326102	0		+			
ANR	7326240	Identifier	entry		7326102	0					
ANR	7326241	PrimaryExpression	1		7326102	1					
ANR	7326242	MemberAccess	options [ opt ] . value_count		7326102	1					
ANR	7326243	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326244	Identifier	options		7326102	0					
ANR	7326245	Identifier	opt		7326102	1					
ANR	7326246	Identifier	value_count		7326102	1					
ANR	7326247	EqualityExpression	options [ opt ] . values [ entry + 1 ] . name == range_hi		7326102	1		==			
ANR	7326248	MemberAccess	options [ opt ] . values [ entry + 1 ] . name		7326102	0					
ANR	7326249	ArrayIndexing	options [ opt ] . values [ entry + 1 ]		7326102	0					
ANR	7326250	MemberAccess	options [ opt ] . values		7326102	0					
ANR	7326251	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326252	Identifier	options		7326102	0					
ANR	7326253	Identifier	opt		7326102	1					
ANR	7326254	Identifier	values		7326102	1					
ANR	7326255	AdditiveExpression	entry + 1		7326102	1		+			
ANR	7326256	Identifier	entry		7326102	0					
ANR	7326257	PrimaryExpression	1		7326102	1					
ANR	7326258	Identifier	name		7326102	1					
ANR	7326259	Identifier	range_hi		7326102	1					
ANR	7326260	ExpressionStatement	dp -> stack [ sp ] . hi = options [ opt ] . values [ entry + 1 ] . value	862:6:27473:27526	7326102	2	True				
ANR	7326261	AssignmentExpression	dp -> stack [ sp ] . hi = options [ opt ] . values [ entry + 1 ] . value		7326102	0		=			
ANR	7326262	MemberAccess	dp -> stack [ sp ] . hi		7326102	0					
ANR	7326263	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326264	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326265	Identifier	dp		7326102	0					
ANR	7326266	Identifier	stack		7326102	1					
ANR	7326267	Identifier	sp		7326102	1					
ANR	7326268	Identifier	hi		7326102	1					
ANR	7326269	MemberAccess	options [ opt ] . values [ entry + 1 ] . value		7326102	1					
ANR	7326270	ArrayIndexing	options [ opt ] . values [ entry + 1 ]		7326102	0					
ANR	7326271	MemberAccess	options [ opt ] . values		7326102	0					
ANR	7326272	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326273	Identifier	options		7326102	0					
ANR	7326274	Identifier	opt		7326102	1					
ANR	7326275	Identifier	values		7326102	1					
ANR	7326276	AdditiveExpression	entry + 1		7326102	1		+			
ANR	7326277	Identifier	entry		7326102	0					
ANR	7326278	PrimaryExpression	1		7326102	1					
ANR	7326279	Identifier	value		7326102	1					
ANR	7326280	ElseStatement	else		7326102	0					
ANR	7326281	CompoundStatement		36:3:908:908	7326102	0					
ANR	7326282	ExpressionStatement	dp -> stack [ sp ] . lo = INT_MAX	868:6:27608:27634	7326102	0	True				
ANR	7326283	AssignmentExpression	dp -> stack [ sp ] . lo = INT_MAX		7326102	0		=			
ANR	7326284	MemberAccess	dp -> stack [ sp ] . lo		7326102	0					
ANR	7326285	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326286	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326287	Identifier	dp		7326102	0					
ANR	7326288	Identifier	stack		7326102	1					
ANR	7326289	Identifier	sp		7326102	1					
ANR	7326290	Identifier	lo		7326102	1					
ANR	7326291	Identifier	INT_MAX		7326102	1					
ANR	7326292	ExpressionStatement	dp -> stack [ sp ] . hi = INT_MIN	869:6:27642:27668	7326102	1	True				
ANR	7326293	AssignmentExpression	dp -> stack [ sp ] . hi = INT_MIN		7326102	0		=			
ANR	7326294	MemberAccess	dp -> stack [ sp ] . hi		7326102	0					
ANR	7326295	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326296	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326297	Identifier	dp		7326102	0					
ANR	7326298	Identifier	stack		7326102	1					
ANR	7326299	Identifier	sp		7326102	1					
ANR	7326300	Identifier	hi		7326102	1					
ANR	7326301	Identifier	INT_MIN		7326102	1					
ANR	7326302	ExpressionStatement	dp -> stack [ sp ] . opt = opt	872:3:27704:27727	7326102	9	True				
ANR	7326303	AssignmentExpression	dp -> stack [ sp ] . opt = opt		7326102	0		=			
ANR	7326304	MemberAccess	dp -> stack [ sp ] . opt		7326102	0					
ANR	7326305	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326306	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326307	Identifier	dp		7326102	0					
ANR	7326308	Identifier	stack		7326102	1					
ANR	7326309	Identifier	sp		7326102	1					
ANR	7326310	Identifier	opt		7326102	1					
ANR	7326311	Identifier	opt		7326102	1					
ANR	7326312	ExpressionStatement	dp -> stack [ sp ] . entry = entry	873:3:27732:27759	7326102	10	True				
ANR	7326313	AssignmentExpression	dp -> stack [ sp ] . entry = entry		7326102	0		=			
ANR	7326314	MemberAccess	dp -> stack [ sp ] . entry		7326102	0					
ANR	7326315	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326316	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326317	Identifier	dp		7326102	0					
ANR	7326318	Identifier	stack		7326102	1					
ANR	7326319	Identifier	sp		7326102	1					
ANR	7326320	Identifier	entry		7326102	1					
ANR	7326321	Identifier	entry		7326102	1					
ANR	7326322	ExpressionStatement	dp -> stack [ sp ] . best_val = dp -> value [ opt ] = options [ opt ] . values [ entry ] . value	874:3:27764:27838	7326102	11	True				
ANR	7326323	AssignmentExpression	dp -> stack [ sp ] . best_val = dp -> value [ opt ] = options [ opt ] . values [ entry ] . value		7326102	0		=			
ANR	7326324	MemberAccess	dp -> stack [ sp ] . best_val		7326102	0					
ANR	7326325	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326326	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326327	Identifier	dp		7326102	0					
ANR	7326328	Identifier	stack		7326102	1					
ANR	7326329	Identifier	sp		7326102	1					
ANR	7326330	Identifier	best_val		7326102	1					
ANR	7326331	AssignmentExpression	dp -> value [ opt ] = options [ opt ] . values [ entry ] . value		7326102	1		=			
ANR	7326332	ArrayIndexing	dp -> value [ opt ]		7326102	0					
ANR	7326333	PtrMemberAccess	dp -> value		7326102	0					
ANR	7326334	Identifier	dp		7326102	0					
ANR	7326335	Identifier	value		7326102	1					
ANR	7326336	Identifier	opt		7326102	1					
ANR	7326337	MemberAccess	options [ opt ] . values [ entry ] . value		7326102	1					
ANR	7326338	ArrayIndexing	options [ opt ] . values [ entry ]		7326102	0					
ANR	7326339	MemberAccess	options [ opt ] . values		7326102	0					
ANR	7326340	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326341	Identifier	options		7326102	0					
ANR	7326342	Identifier	opt		7326102	1					
ANR	7326343	Identifier	values		7326102	1					
ANR	7326344	Identifier	entry		7326102	1					
ANR	7326345	Identifier	value		7326102	1					
ANR	7326346	ExpressionStatement	"set_opt_string ( dp , sp )"	876:3:27844:27866	7326102	12	True				
ANR	7326347	CallExpression	"set_opt_string ( dp , sp )"		7326102	0					
ANR	7326348	Callee	set_opt_string		7326102	0					
ANR	7326349	Identifier	set_opt_string		7326102	0					
ANR	7326350	ArgumentList	dp		7326102	1					
ANR	7326351	Argument	dp		7326102	0					
ANR	7326352	Identifier	dp		7326102	0					
ANR	7326353	Argument	sp		7326102	1					
ANR	7326354	Identifier	sp		7326102	0					
ANR	7326355	IfStatement	"if ( opt_list_end ( dp , opt , entry ) )"		7326102	13					
ANR	7326356	Condition	"opt_list_end ( dp , opt , entry )"	881:7:27990:28017	7326102	0	True				
ANR	7326357	CallExpression	"opt_list_end ( dp , opt , entry )"		7326102	0					
ANR	7326358	Callee	opt_list_end		7326102	0					
ANR	7326359	Identifier	opt_list_end		7326102	0					
ANR	7326360	ArgumentList	dp		7326102	1					
ANR	7326361	Argument	dp		7326102	0					
ANR	7326362	Identifier	dp		7326102	0					
ANR	7326363	Argument	opt		7326102	1					
ANR	7326364	Identifier	opt		7326102	0					
ANR	7326365	Argument	entry		7326102	2					
ANR	7326366	Identifier	entry		7326102	0					
ANR	7326367	CompoundStatement		52:3:1386:1386	7326102	1					
ANR	7326368	ExpressionStatement	dp -> stack [ sp ] . end = 1	883:6:28031:28052	7326102	0	True				
ANR	7326369	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326102	0		=			
ANR	7326370	MemberAccess	dp -> stack [ sp ] . end		7326102	0					
ANR	7326371	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326372	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326373	Identifier	dp		7326102	0					
ANR	7326374	Identifier	stack		7326102	1					
ANR	7326375	Identifier	sp		7326102	1					
ANR	7326376	Identifier	end		7326102	1					
ANR	7326377	PrimaryExpression	1		7326102	1					
ANR	7326378	IfStatement	if ( opt != dp -> min_windowBits )		7326102	1					
ANR	7326379	Condition	opt != dp -> min_windowBits	887:10:28171:28195	7326102	0	True				
ANR	7326380	EqualityExpression	opt != dp -> min_windowBits		7326102	0		!=			
ANR	7326381	Identifier	opt		7326102	0					
ANR	7326382	PtrMemberAccess	dp -> min_windowBits		7326102	1					
ANR	7326383	Identifier	dp		7326102	0					
ANR	7326384	Identifier	min_windowBits		7326102	1					
ANR	7326385	ExpressionStatement	"display_log ( dp , APP_WARNING , ""%s: only testing one value"" , options [ opt ] . name )"	888:9:28207:28299	7326102	1	True				
ANR	7326386	CallExpression	"display_log ( dp , APP_WARNING , ""%s: only testing one value"" , options [ opt ] . name )"		7326102	0					
ANR	7326387	Callee	display_log		7326102	0					
ANR	7326388	Identifier	display_log		7326102	0					
ANR	7326389	ArgumentList	dp		7326102	1					
ANR	7326390	Argument	dp		7326102	0					
ANR	7326391	Identifier	dp		7326102	0					
ANR	7326392	Argument	APP_WARNING		7326102	1					
ANR	7326393	Identifier	APP_WARNING		7326102	0					
ANR	7326394	Argument	"""%s: only testing one value"""		7326102	2					
ANR	7326395	PrimaryExpression	"""%s: only testing one value"""		7326102	0					
ANR	7326396	Argument	options [ opt ] . name		7326102	3					
ANR	7326397	MemberAccess	options [ opt ] . name		7326102	0					
ANR	7326398	ArrayIndexing	options [ opt ]		7326102	0					
ANR	7326399	Identifier	options		7326102	0					
ANR	7326400	Identifier	opt		7326102	1					
ANR	7326401	Identifier	name		7326102	1					
ANR	7326402	ElseStatement	else		7326102	0					
ANR	7326403	CompoundStatement		63:3:1681:1681	7326102	0					
ANR	7326404	ExpressionStatement	dp -> stack [ sp ] . end = 0	894:6:28326:28347	7326102	0	True				
ANR	7326405	AssignmentExpression	dp -> stack [ sp ] . end = 0		7326102	0		=			
ANR	7326406	MemberAccess	dp -> stack [ sp ] . end		7326102	0					
ANR	7326407	ArrayIndexing	dp -> stack [ sp ]		7326102	0					
ANR	7326408	PtrMemberAccess	dp -> stack		7326102	0					
ANR	7326409	Identifier	dp		7326102	0					
ANR	7326410	Identifier	stack		7326102	1					
ANR	7326411	Identifier	sp		7326102	1					
ANR	7326412	Identifier	end		7326102	1					
ANR	7326413	PrimaryExpression	0		7326102	1					
ANR	7326414	ExpressionStatement	dp -> nsp = dp -> tsp	895:6:28355:28372	7326102	1	True				
ANR	7326415	AssignmentExpression	dp -> nsp = dp -> tsp		7326102	0		=			
ANR	7326416	PtrMemberAccess	dp -> nsp		7326102	0					
ANR	7326417	Identifier	dp		7326102	0					
ANR	7326418	Identifier	nsp		7326102	1					
ANR	7326419	PtrMemberAccess	dp -> tsp		7326102	1					
ANR	7326420	Identifier	dp		7326102	0					
ANR	7326421	Identifier	tsp		7326102	1					
ANR	7326422	ExpressionStatement	text_stash ( dp )	902:3:28578:28592	7326102	14	True				
ANR	7326423	CallExpression	text_stash ( dp )		7326102	0					
ANR	7326424	Callee	text_stash		7326102	0					
ANR	7326425	Identifier	text_stash		7326102	0					
ANR	7326426	ArgumentList	dp		7326102	1					
ANR	7326427	Argument	dp		7326102	0					
ANR	7326428	Identifier	dp		7326102	0					
ANR	7326429	ReturnType	static void		7326102	1					
ANR	7326430	Identifier	push_opt		7326102	2					
ANR	7326431	ParameterList	"struct display * dp , unsigned int sp , png_byte opt , int search"		7326102	3					
ANR	7326432	Parameter	struct display * dp	826:9:26380:26397	7326102	0	True				
ANR	7326433	ParameterType	struct display *		7326102	0					
ANR	7326434	Identifier	dp		7326102	1					
ANR	7326435	Parameter	unsigned int sp	826:29:26400:26414	7326102	1	True				
ANR	7326436	ParameterType	unsigned int		7326102	0					
ANR	7326437	Identifier	sp		7326102	1					
ANR	7326438	Parameter	png_byte opt	826:46:26417:26428	7326102	2	True				
ANR	7326439	ParameterType	png_byte		7326102	0					
ANR	7326440	Identifier	opt		7326102	1					
ANR	7326441	Parameter	int search	826:60:26431:26440	7326102	3	True				
ANR	7326442	ParameterType	int		7326102	0					
ANR	7326443	Identifier	search		7326102	1					
ANR	7326444	CFGEntryNode	ENTRY		7326102		True				
ANR	7326445	CFGExitNode	EXIT		7326102		True				
ANR	7326446	Symbol	* sp		7326102						
ANR	7326447	Symbol	* dp -> stack		7326102						
ANR	7326448	Symbol	* * opt		7326102						
ANR	7326449	Symbol	dp -> stack [ sp ] . entry		7326102						
ANR	7326450	Symbol	dp -> stack [ sp ] . hi		7326102						
ANR	7326451	Symbol	dp -> stack [ sp ] . lo		7326102						
ANR	7326452	Symbol	dp -> stack [ sp ] . best_val		7326102						
ANR	7326453	Symbol	dp		7326102						
ANR	7326454	Symbol	* options		7326102						
ANR	7326455	Symbol	dp -> stack [ sp ] . hi_size		7326102						
ANR	7326456	Symbol	options [ opt ] . values [ entry ] . value		7326102						
ANR	7326457	Symbol	INT_MIN		7326102						
ANR	7326458	Symbol	* dp		7326102						
ANR	7326459	Symbol	range_hi		7326102						
ANR	7326460	Symbol	search		7326102						
ANR	7326461	Symbol	options [ opt ] . values [ entry + 1 ] . name		7326102						
ANR	7326462	Symbol	range_lo		7326102						
ANR	7326463	Symbol	options		7326102						
ANR	7326464	Symbol	INT_MAX		7326102						
ANR	7326465	Symbol	SL		7326102						
ANR	7326466	Symbol	dp -> stack [ sp ] . end		7326102						
ANR	7326467	Symbol	dp -> stack [ sp ] . best_size		7326102						
ANR	7326468	Symbol	sp		7326102						
ANR	7326469	Symbol	* opt		7326102						
ANR	7326470	Symbol	* entry		7326102						
ANR	7326471	Symbol	entry_name		7326102						
ANR	7326472	Symbol	* options [ opt ] . values		7326102						
ANR	7326473	Symbol	options [ opt ] . values [ -- entry ] . name		7326102						
ANR	7326474	Symbol	MAX_SIZE		7326102						
ANR	7326475	Symbol	options [ opt ] . name		7326102						
ANR	7326476	Symbol	dp -> min_windowBits		7326102						
ANR	7326477	Symbol	* * options		7326102						
ANR	7326478	Symbol	options [ opt ] . values [ entry + 1 ] . value		7326102						
ANR	7326479	Symbol	dp -> stack		7326102						
ANR	7326480	Symbol	dp -> stack [ sp ] . opt		7326102						
ANR	7326481	Symbol	entry		7326102						
ANR	7326482	Symbol	opt		7326102						
ANR	7326483	Symbol	dp -> value		7326102						
ANR	7326484	Symbol	APP_WARNING		7326102						
ANR	7326485	Symbol	* dp -> value		7326102						
ANR	7326486	Symbol	options [ opt ] . value_count		7326102						
ANR	7326487	Symbol	* * dp		7326102						
ANR	7326488	Symbol	dp -> stack [ sp ] . lo_size		7326102						
ANR	7326489	Symbol	dp -> nsp		7326102						
ANR	7326490	Symbol	dp -> tsp		7326102						
ANR	7326491	Symbol	opt_list_end		7326102						
ANR	7326492	Symbol	options [ opt ] . values		7326102						
ANR	7326493	Function	next_opt	905:0:28597:36435							
ANR	7326494	FunctionDef	"next_opt (struct display * dp , unsigned int sp)"		7326493	0					
ANR	7326495	CompoundStatement		913:0:29017:36435	7326493	0					
ANR	7326496	IdentifierDeclStatement	int search = 0 ;	914:3:29022:29036	7326493	0	True				
ANR	7326497	IdentifierDecl	search = 0		7326493	0					
ANR	7326498	IdentifierDeclType	int		7326493	0					
ANR	7326499	Identifier	search		7326493	1					
ANR	7326500	AssignmentExpression	search = 0		7326493	2		=			
ANR	7326501	Identifier	search		7326493	0					
ANR	7326502	PrimaryExpression	0		7326493	1					
ANR	7326503	IdentifierDeclStatement	"png_byte entry , opt ;"	915:3:29041:29060	7326493	1	True				
ANR	7326504	IdentifierDecl	entry		7326493	0					
ANR	7326505	IdentifierDeclType	png_byte		7326493	0					
ANR	7326506	Identifier	entry		7326493	1					
ANR	7326507	IdentifierDecl	opt		7326493	1					
ANR	7326508	IdentifierDeclType	png_byte		7326493	0					
ANR	7326509	Identifier	opt		7326493	1					
ANR	7326510	IdentifierDeclStatement	const char * entry_name ;	916:3:29065:29087	7326493	2	True				
ANR	7326511	IdentifierDecl	* entry_name		7326493	0					
ANR	7326512	IdentifierDeclType	const char *		7326493	0					
ANR	7326513	Identifier	entry_name		7326493	1					
ANR	7326514	ExpressionStatement	assert ( sp + 1U == dp -> tsp && ! dp -> stack [ sp ] . end )	919:3:29167:29213	7326493	3	True				
ANR	7326515	CallExpression	assert ( sp + 1U == dp -> tsp && ! dp -> stack [ sp ] . end )		7326493	0					
ANR	7326516	Callee	assert		7326493	0					
ANR	7326517	Identifier	assert		7326493	0					
ANR	7326518	ArgumentList	sp + 1U == dp -> tsp && ! dp -> stack [ sp ] . end		7326493	1					
ANR	7326519	Argument	sp + 1U == dp -> tsp && ! dp -> stack [ sp ] . end		7326493	0					
ANR	7326520	AndExpression	sp + 1U == dp -> tsp && ! dp -> stack [ sp ] . end		7326493	0		&&			
ANR	7326521	EqualityExpression	sp + 1U == dp -> tsp		7326493	0		==			
ANR	7326522	AdditiveExpression	sp + 1U		7326493	0		+			
ANR	7326523	Identifier	sp		7326493	0					
ANR	7326524	PrimaryExpression	1U		7326493	1					
ANR	7326525	PtrMemberAccess	dp -> tsp		7326493	1					
ANR	7326526	Identifier	dp		7326493	0					
ANR	7326527	Identifier	tsp		7326493	1					
ANR	7326528	UnaryOperationExpression	! dp -> stack [ sp ] . end		7326493	1					
ANR	7326529	UnaryOperator	!		7326493	0					
ANR	7326530	MemberAccess	dp -> stack [ sp ] . end		7326493	1					
ANR	7326531	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326532	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326533	Identifier	dp		7326493	0					
ANR	7326534	Identifier	stack		7326493	1					
ANR	7326535	Identifier	sp		7326493	1					
ANR	7326536	Identifier	end		7326493	1					
ANR	7326537	ExpressionStatement	opt = dp -> stack [ sp ] . opt	921:3:29219:29242	7326493	4	True				
ANR	7326538	AssignmentExpression	opt = dp -> stack [ sp ] . opt		7326493	0		=			
ANR	7326539	Identifier	opt		7326493	0					
ANR	7326540	MemberAccess	dp -> stack [ sp ] . opt		7326493	1					
ANR	7326541	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326542	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326543	Identifier	dp		7326493	0					
ANR	7326544	Identifier	stack		7326493	1					
ANR	7326545	Identifier	sp		7326493	1					
ANR	7326546	Identifier	opt		7326493	1					
ANR	7326547	ExpressionStatement	entry = dp -> stack [ sp ] . entry	922:3:29247:29274	7326493	5	True				
ANR	7326548	AssignmentExpression	entry = dp -> stack [ sp ] . entry		7326493	0		=			
ANR	7326549	Identifier	entry		7326493	0					
ANR	7326550	MemberAccess	dp -> stack [ sp ] . entry		7326493	1					
ANR	7326551	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326552	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326553	Identifier	dp		7326493	0					
ANR	7326554	Identifier	stack		7326493	1					
ANR	7326555	Identifier	sp		7326493	1					
ANR	7326556	Identifier	entry		7326493	1					
ANR	7326557	ExpressionStatement	assert ( entry + 1U < options [ opt ] . value_count )	923:3:29279:29322	7326493	6	True				
ANR	7326558	CallExpression	assert ( entry + 1U < options [ opt ] . value_count )		7326493	0					
ANR	7326559	Callee	assert		7326493	0					
ANR	7326560	Identifier	assert		7326493	0					
ANR	7326561	ArgumentList	entry + 1U < options [ opt ] . value_count		7326493	1					
ANR	7326562	Argument	entry + 1U < options [ opt ] . value_count		7326493	0					
ANR	7326563	RelationalExpression	entry + 1U < options [ opt ] . value_count		7326493	0		<			
ANR	7326564	AdditiveExpression	entry + 1U		7326493	0		+			
ANR	7326565	Identifier	entry		7326493	0					
ANR	7326566	PrimaryExpression	1U		7326493	1					
ANR	7326567	MemberAccess	options [ opt ] . value_count		7326493	1					
ANR	7326568	ArrayIndexing	options [ opt ]		7326493	0					
ANR	7326569	Identifier	options		7326493	0					
ANR	7326570	Identifier	opt		7326493	1					
ANR	7326571	Identifier	value_count		7326493	1					
ANR	7326572	ExpressionStatement	entry_name = options [ opt ] . values [ entry ] . name	924:3:29327:29371	7326493	7	True				
ANR	7326573	AssignmentExpression	entry_name = options [ opt ] . values [ entry ] . name		7326493	0		=			
ANR	7326574	Identifier	entry_name		7326493	0					
ANR	7326575	MemberAccess	options [ opt ] . values [ entry ] . name		7326493	1					
ANR	7326576	ArrayIndexing	options [ opt ] . values [ entry ]		7326493	0					
ANR	7326577	MemberAccess	options [ opt ] . values		7326493	0					
ANR	7326578	ArrayIndexing	options [ opt ]		7326493	0					
ANR	7326579	Identifier	options		7326493	0					
ANR	7326580	Identifier	opt		7326493	1					
ANR	7326581	Identifier	values		7326493	1					
ANR	7326582	Identifier	entry		7326493	1					
ANR	7326583	Identifier	name		7326493	1					
ANR	7326584	ExpressionStatement	assert ( entry_name != NULL )	925:3:29376:29402	7326493	8	True				
ANR	7326585	CallExpression	assert ( entry_name != NULL )		7326493	0					
ANR	7326586	Callee	assert		7326493	0					
ANR	7326587	Identifier	assert		7326493	0					
ANR	7326588	ArgumentList	entry_name != NULL		7326493	1					
ANR	7326589	Argument	entry_name != NULL		7326493	0					
ANR	7326590	EqualityExpression	entry_name != NULL		7326493	0		!=			
ANR	7326591	Identifier	entry_name		7326493	0					
ANR	7326592	Identifier	NULL		7326493	1					
ANR	7326593	IfStatement	if ( entry_name == range_lo )		7326493	9					
ANR	7326594	Condition	entry_name == range_lo	930:7:29553:29574	7326493	0	True				
ANR	7326595	EqualityExpression	entry_name == range_lo		7326493	0		==			
ANR	7326596	Identifier	entry_name		7326493	0					
ANR	7326597	Identifier	range_lo		7326493	1					
ANR	7326598	CompoundStatement		19:3:576:576	7326493	1					
ANR	7326599	IfStatement	if ( dp -> stack [ sp ] . lo > dp -> stack [ sp ] . hi )		7326493	0					
ANR	7326600	Condition	dp -> stack [ sp ] . lo > dp -> stack [ sp ] . hi	936:10:29811:29845	7326493	0	True				
ANR	7326601	RelationalExpression	dp -> stack [ sp ] . lo > dp -> stack [ sp ] . hi		7326493	0		>			
ANR	7326602	MemberAccess	dp -> stack [ sp ] . lo		7326493	0					
ANR	7326603	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326604	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326605	Identifier	dp		7326493	0					
ANR	7326606	Identifier	stack		7326493	1					
ANR	7326607	Identifier	sp		7326493	1					
ANR	7326608	Identifier	lo		7326493	1					
ANR	7326609	MemberAccess	dp -> stack [ sp ] . hi		7326493	1					
ANR	7326610	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326611	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326612	Identifier	dp		7326493	0					
ANR	7326613	Identifier	stack		7326493	1					
ANR	7326614	Identifier	sp		7326493	1					
ANR	7326615	Identifier	hi		7326493	1					
ANR	7326616	ExpressionStatement	dp -> value [ opt ] ++	937:9:29857:29873	7326493	1	True				
ANR	7326617	PostIncDecOperationExpression	dp -> value [ opt ] ++		7326493	0					
ANR	7326618	ArrayIndexing	dp -> value [ opt ]		7326493	0					
ANR	7326619	PtrMemberAccess	dp -> value		7326493	0					
ANR	7326620	Identifier	dp		7326493	0					
ANR	7326621	Identifier	value		7326493	1					
ANR	7326622	Identifier	opt		7326493	1					
ANR	7326623	IncDec	++		7326493	1					
ANR	7326624	ElseStatement	else		7326493	0					
ANR	7326625	CompoundStatement		33:9:1087:1111	7326493	0					
ANR	7326626	IdentifierDeclStatement	png_alloc_size_t best_size = dp -> stack [ sp ] . best_size ;	942:9:29970:30022	7326493	0	True				
ANR	7326627	IdentifierDecl	best_size = dp -> stack [ sp ] . best_size		7326493	0					
ANR	7326628	IdentifierDeclType	png_alloc_size_t		7326493	0					
ANR	7326629	Identifier	best_size		7326493	1					
ANR	7326630	AssignmentExpression	best_size = dp -> stack [ sp ] . best_size		7326493	2		=			
ANR	7326631	Identifier	best_size		7326493	0					
ANR	7326632	MemberAccess	dp -> stack [ sp ] . best_size		7326493	1					
ANR	7326633	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326634	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326635	Identifier	dp		7326493	0					
ANR	7326636	Identifier	stack		7326493	1					
ANR	7326637	Identifier	sp		7326493	1					
ANR	7326638	Identifier	best_size		7326493	1					
ANR	7326639	IdentifierDeclStatement	int lo = dp -> stack [ sp ] . lo ;	943:9:30033:30058	7326493	1	True				
ANR	7326640	IdentifierDecl	lo = dp -> stack [ sp ] . lo		7326493	0					
ANR	7326641	IdentifierDeclType	int		7326493	0					
ANR	7326642	Identifier	lo		7326493	1					
ANR	7326643	AssignmentExpression	lo = dp -> stack [ sp ] . lo		7326493	2		=			
ANR	7326644	Identifier	lo		7326493	0					
ANR	7326645	MemberAccess	dp -> stack [ sp ] . lo		7326493	1					
ANR	7326646	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326647	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326648	Identifier	dp		7326493	0					
ANR	7326649	Identifier	stack		7326493	1					
ANR	7326650	Identifier	sp		7326493	1					
ANR	7326651	Identifier	lo		7326493	1					
ANR	7326652	IdentifierDeclStatement	int hi = dp -> stack [ sp ] . hi ;	944:9:30069:30094	7326493	2	True				
ANR	7326653	IdentifierDecl	hi = dp -> stack [ sp ] . hi		7326493	0					
ANR	7326654	IdentifierDeclType	int		7326493	0					
ANR	7326655	Identifier	hi		7326493	1					
ANR	7326656	AssignmentExpression	hi = dp -> stack [ sp ] . hi		7326493	2		=			
ANR	7326657	Identifier	hi		7326493	0					
ANR	7326658	MemberAccess	dp -> stack [ sp ] . hi		7326493	1					
ANR	7326659	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326660	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326661	Identifier	dp		7326493	0					
ANR	7326662	Identifier	stack		7326493	1					
ANR	7326663	Identifier	sp		7326493	1					
ANR	7326664	Identifier	hi		7326493	1					
ANR	7326665	IdentifierDeclStatement	int val = dp -> value [ opt ] ;	945:9:30105:30129	7326493	3	True				
ANR	7326666	IdentifierDecl	val = dp -> value [ opt ]		7326493	0					
ANR	7326667	IdentifierDeclType	int		7326493	0					
ANR	7326668	Identifier	val		7326493	1					
ANR	7326669	AssignmentExpression	val = dp -> value [ opt ]		7326493	2		=			
ANR	7326670	Identifier	val		7326493	0					
ANR	7326671	ArrayIndexing	dp -> value [ opt ]		7326493	1					
ANR	7326672	PtrMemberAccess	dp -> value		7326493	0					
ANR	7326673	Identifier	dp		7326493	0					
ANR	7326674	Identifier	value		7326493	1					
ANR	7326675	Identifier	opt		7326493	1					
ANR	7326676	ExpressionStatement	search = 1	947:9:30141:30151	7326493	4	True				
ANR	7326677	AssignmentExpression	search = 1		7326493	0		=			
ANR	7326678	Identifier	search		7326493	0					
ANR	7326679	PrimaryExpression	1		7326493	1					
ANR	7326680	ExpressionStatement	assert ( best_size < MAX_SIZE )	948:9:30191:30219	7326493	5	True				
ANR	7326681	CallExpression	assert ( best_size < MAX_SIZE )		7326493	0					
ANR	7326682	Callee	assert		7326493	0					
ANR	7326683	Identifier	assert		7326493	0					
ANR	7326684	ArgumentList	best_size < MAX_SIZE		7326493	1					
ANR	7326685	Argument	best_size < MAX_SIZE		7326493	0					
ANR	7326686	RelationalExpression	best_size < MAX_SIZE		7326493	0		<			
ANR	7326687	Identifier	best_size		7326493	0					
ANR	7326688	Identifier	MAX_SIZE		7326493	1					
ANR	7326689	IfStatement	if ( val == lo )		7326493	6					
ANR	7326690	Condition	val == lo	950:13:30235:30243	7326493	0	True				
ANR	7326691	EqualityExpression	val == lo		7326493	0		==			
ANR	7326692	Identifier	val		7326493	0					
ANR	7326693	Identifier	lo		7326493	1					
ANR	7326694	CompoundStatement		39:9:1237:1237	7326493	1					
ANR	7326695	ExpressionStatement	dp -> stack [ sp ] . lo_size = best_size	953:12:30334:30367	7326493	0	True				
ANR	7326696	AssignmentExpression	dp -> stack [ sp ] . lo_size = best_size		7326493	0		=			
ANR	7326697	MemberAccess	dp -> stack [ sp ] . lo_size		7326493	0					
ANR	7326698	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326699	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326700	Identifier	dp		7326493	0					
ANR	7326701	Identifier	stack		7326493	1					
ANR	7326702	Identifier	sp		7326493	1					
ANR	7326703	Identifier	lo_size		7326493	1					
ANR	7326704	Identifier	best_size		7326493	1					
ANR	7326705	ExpressionStatement	assert ( hi > val )	954:12:30381:30397	7326493	1	True				
ANR	7326706	CallExpression	assert ( hi > val )		7326493	0					
ANR	7326707	Callee	assert		7326493	0					
ANR	7326708	Identifier	assert		7326493	0					
ANR	7326709	ArgumentList	hi > val		7326493	1					
ANR	7326710	Argument	hi > val		7326493	0					
ANR	7326711	RelationalExpression	hi > val		7326493	0		>			
ANR	7326712	Identifier	hi		7326493	0					
ANR	7326713	Identifier	val		7326493	1					
ANR	7326714	IfStatement	if ( hi == val + 1 )		7326493	2					
ANR	7326715	Condition	hi == val + 1	956:16:30416:30426	7326493	0	True				
ANR	7326716	EqualityExpression	hi == val + 1		7326493	0		==			
ANR	7326717	Identifier	hi		7326493	0					
ANR	7326718	AdditiveExpression	val + 1		7326493	1		+			
ANR	7326719	Identifier	val		7326493	0					
ANR	7326720	PrimaryExpression	1		7326493	1					
ANR	7326721	ExpressionStatement	dp -> stack [ sp ] . end = 1	957:15:30465:30486	7326493	1	True				
ANR	7326722	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7326723	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7326724	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326725	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326726	Identifier	dp		7326493	0					
ANR	7326727	Identifier	stack		7326493	1					
ANR	7326728	Identifier	sp		7326493	1					
ANR	7326729	Identifier	end		7326493	1					
ANR	7326730	PrimaryExpression	1		7326493	1					
ANR	7326731	ExpressionStatement	val = hi	959:12:30501:30509	7326493	3	True				
ANR	7326732	AssignmentExpression	val = hi		7326493	0		=			
ANR	7326733	Identifier	val		7326493	0					
ANR	7326734	Identifier	hi		7326493	1					
ANR	7326735	ElseStatement	else		7326493	0					
ANR	7326736	IfStatement	if ( val == hi )		7326493	0					
ANR	7326737	Condition	val == hi	962:18:30541:30549	7326493	0	True				
ANR	7326738	EqualityExpression	val == hi		7326493	0		==			
ANR	7326739	Identifier	val		7326493	0					
ANR	7326740	Identifier	hi		7326493	1					
ANR	7326741	CompoundStatement		51:9:1543:1543	7326493	1					
ANR	7326742	ExpressionStatement	dp -> stack [ sp ] . hi_size = best_size	964:12:30575:30608	7326493	0	True				
ANR	7326743	AssignmentExpression	dp -> stack [ sp ] . hi_size = best_size		7326493	0		=			
ANR	7326744	MemberAccess	dp -> stack [ sp ] . hi_size		7326493	0					
ANR	7326745	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326746	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326747	Identifier	dp		7326493	0					
ANR	7326748	Identifier	stack		7326493	1					
ANR	7326749	Identifier	sp		7326493	1					
ANR	7326750	Identifier	hi_size		7326493	1					
ANR	7326751	Identifier	best_size		7326493	1					
ANR	7326752	ExpressionStatement	assert ( val > lo + 1 )	965:12:30622:30640	7326493	1	True				
ANR	7326753	CallExpression	assert ( val > lo + 1 )		7326493	0					
ANR	7326754	Callee	assert		7326493	0					
ANR	7326755	Identifier	assert		7326493	0					
ANR	7326756	ArgumentList	val > lo + 1		7326493	1					
ANR	7326757	Argument	val > lo + 1		7326493	0					
ANR	7326758	RelationalExpression	val > lo + 1		7326493	0		>			
ANR	7326759	Identifier	val		7326493	0					
ANR	7326760	AdditiveExpression	lo + 1		7326493	1		+			
ANR	7326761	Identifier	lo		7326493	0					
ANR	7326762	PrimaryExpression	1		7326493	1					
ANR	7326763	IfStatement	if ( val == lo + 2 )		7326493	2					
ANR	7326764	Condition	val == lo + 2	967:16:30686:30696	7326493	0	True				
ANR	7326765	EqualityExpression	val == lo + 2		7326493	0		==			
ANR	7326766	Identifier	val		7326493	0					
ANR	7326767	AdditiveExpression	lo + 2		7326493	1		+			
ANR	7326768	Identifier	lo		7326493	0					
ANR	7326769	PrimaryExpression	2		7326493	1					
ANR	7326770	ExpressionStatement	dp -> stack [ sp ] . end = 1	968:15:30747:30768	7326493	1	True				
ANR	7326771	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7326772	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7326773	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326774	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326775	Identifier	dp		7326493	0					
ANR	7326776	Identifier	stack		7326493	1					
ANR	7326777	Identifier	sp		7326493	1					
ANR	7326778	Identifier	end		7326493	1					
ANR	7326779	PrimaryExpression	1		7326493	1					
ANR	7326780	ExpressionStatement	val = ( lo + val ) / 2	970:12:30783:30801	7326493	3	True				
ANR	7326781	AssignmentExpression	val = ( lo + val ) / 2		7326493	0		=			
ANR	7326782	Identifier	val		7326493	0					
ANR	7326783	MultiplicativeExpression	( lo + val ) / 2		7326493	1		/			
ANR	7326784	AdditiveExpression	lo + val		7326493	0		+			
ANR	7326785	Identifier	lo		7326493	0					
ANR	7326786	Identifier	val		7326493	1					
ANR	7326787	PrimaryExpression	2		7326493	1					
ANR	7326788	ElseStatement	else		7326493	0					
ANR	7326789	CompoundStatement		64:12:1896:1944	7326493	0					
ANR	7326790	IdentifierDeclStatement	png_alloc_size_t lo_size = dp -> stack [ sp ] . lo_size ;	975:12:30852:30900	7326493	0	True				
ANR	7326791	IdentifierDecl	lo_size = dp -> stack [ sp ] . lo_size		7326493	0					
ANR	7326792	IdentifierDeclType	png_alloc_size_t		7326493	0					
ANR	7326793	Identifier	lo_size		7326493	1					
ANR	7326794	AssignmentExpression	lo_size = dp -> stack [ sp ] . lo_size		7326493	2		=			
ANR	7326795	Identifier	lo_size		7326493	0					
ANR	7326796	MemberAccess	dp -> stack [ sp ] . lo_size		7326493	1					
ANR	7326797	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326798	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326799	Identifier	dp		7326493	0					
ANR	7326800	Identifier	stack		7326493	1					
ANR	7326801	Identifier	sp		7326493	1					
ANR	7326802	Identifier	lo_size		7326493	1					
ANR	7326803	IdentifierDeclStatement	png_alloc_size_t hi_size = dp -> stack [ sp ] . hi_size ;	976:12:30914:30962	7326493	1	True				
ANR	7326804	IdentifierDecl	hi_size = dp -> stack [ sp ] . hi_size		7326493	0					
ANR	7326805	IdentifierDeclType	png_alloc_size_t		7326493	0					
ANR	7326806	Identifier	hi_size		7326493	1					
ANR	7326807	AssignmentExpression	hi_size = dp -> stack [ sp ] . hi_size		7326493	2		=			
ANR	7326808	Identifier	hi_size		7326493	0					
ANR	7326809	MemberAccess	dp -> stack [ sp ] . hi_size		7326493	1					
ANR	7326810	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326811	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326812	Identifier	dp		7326493	0					
ANR	7326813	Identifier	stack		7326493	1					
ANR	7326814	Identifier	sp		7326493	1					
ANR	7326815	Identifier	hi_size		7326493	1					
ANR	7326816	ExpressionStatement	assert ( lo_size < MAX_SIZE && hi_size < MAX_SIZE )	979:12:31030:31078	7326493	2	True				
ANR	7326817	CallExpression	assert ( lo_size < MAX_SIZE && hi_size < MAX_SIZE )		7326493	0					
ANR	7326818	Callee	assert		7326493	0					
ANR	7326819	Identifier	assert		7326493	0					
ANR	7326820	ArgumentList	lo_size < MAX_SIZE && hi_size < MAX_SIZE		7326493	1					
ANR	7326821	Argument	lo_size < MAX_SIZE && hi_size < MAX_SIZE		7326493	0					
ANR	7326822	AndExpression	lo_size < MAX_SIZE && hi_size < MAX_SIZE		7326493	0		&&			
ANR	7326823	RelationalExpression	lo_size < MAX_SIZE		7326493	0		<			
ANR	7326824	Identifier	lo_size		7326493	0					
ANR	7326825	Identifier	MAX_SIZE		7326493	1					
ANR	7326826	RelationalExpression	hi_size < MAX_SIZE		7326493	1		<			
ANR	7326827	Identifier	hi_size		7326493	0					
ANR	7326828	Identifier	MAX_SIZE		7326493	1					
ANR	7326829	IfStatement	if ( val < lo )		7326493	3					
ANR	7326830	Condition	val < lo	984:16:31240:31247	7326493	0	True				
ANR	7326831	RelationalExpression	val < lo		7326493	0		<			
ANR	7326832	Identifier	val		7326493	0					
ANR	7326833	Identifier	lo		7326493	1					
ANR	7326834	CompoundStatement		73:12:2267:2267	7326493	1					
ANR	7326835	ExpressionStatement	dp -> stack [ sp ] . lo = val	987:15:31340:31362	7326493	0	True				
ANR	7326836	AssignmentExpression	dp -> stack [ sp ] . lo = val		7326493	0		=			
ANR	7326837	MemberAccess	dp -> stack [ sp ] . lo		7326493	0					
ANR	7326838	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326839	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326840	Identifier	dp		7326493	0					
ANR	7326841	Identifier	stack		7326493	1					
ANR	7326842	Identifier	sp		7326493	1					
ANR	7326843	Identifier	lo		7326493	1					
ANR	7326844	Identifier	val		7326493	1					
ANR	7326845	ExpressionStatement	dp -> stack [ sp ] . lo_size = best_size	988:15:31379:31412	7326493	1	True				
ANR	7326846	AssignmentExpression	dp -> stack [ sp ] . lo_size = best_size		7326493	0		=			
ANR	7326847	MemberAccess	dp -> stack [ sp ] . lo_size		7326493	0					
ANR	7326848	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326849	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326850	Identifier	dp		7326493	0					
ANR	7326851	Identifier	stack		7326493	1					
ANR	7326852	Identifier	sp		7326493	1					
ANR	7326853	Identifier	lo_size		7326493	1					
ANR	7326854	Identifier	best_size		7326493	1					
ANR	7326855	ExpressionStatement	val = lo	989:15:31429:31437	7326493	2	True				
ANR	7326856	AssignmentExpression	val = lo		7326493	0		=			
ANR	7326857	Identifier	val		7326493	0					
ANR	7326858	Identifier	lo		7326493	1					
ANR	7326859	ExpressionStatement	best_size = lo_size	990:15:31454:31473	7326493	3	True				
ANR	7326860	AssignmentExpression	best_size = lo_size		7326493	0		=			
ANR	7326861	Identifier	best_size		7326493	0					
ANR	7326862	Identifier	lo_size		7326493	1					
ANR	7326863	ExpressionStatement	lo = dp -> stack [ sp ] . lo	991:15:31490:31511	7326493	4	True				
ANR	7326864	AssignmentExpression	lo = dp -> stack [ sp ] . lo		7326493	0		=			
ANR	7326865	Identifier	lo		7326493	0					
ANR	7326866	MemberAccess	dp -> stack [ sp ] . lo		7326493	1					
ANR	7326867	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326868	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326869	Identifier	dp		7326493	0					
ANR	7326870	Identifier	stack		7326493	1					
ANR	7326871	Identifier	sp		7326493	1					
ANR	7326872	Identifier	lo		7326493	1					
ANR	7326873	ExpressionStatement	lo_size = dp -> stack [ sp ] . lo_size	992:15:31528:31559	7326493	5	True				
ANR	7326874	AssignmentExpression	lo_size = dp -> stack [ sp ] . lo_size		7326493	0		=			
ANR	7326875	Identifier	lo_size		7326493	0					
ANR	7326876	MemberAccess	dp -> stack [ sp ] . lo_size		7326493	1					
ANR	7326877	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326878	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326879	Identifier	dp		7326493	0					
ANR	7326880	Identifier	stack		7326493	1					
ANR	7326881	Identifier	sp		7326493	1					
ANR	7326882	Identifier	lo_size		7326493	1					
ANR	7326883	ElseStatement	else		7326493	0					
ANR	7326884	IfStatement	if ( val > hi )		7326493	0					
ANR	7326885	Condition	val > hi	995:21:31597:31604	7326493	0	True				
ANR	7326886	RelationalExpression	val > hi		7326493	0		>			
ANR	7326887	Identifier	val		7326493	0					
ANR	7326888	Identifier	hi		7326493	1					
ANR	7326889	CompoundStatement		84:12:2624:2624	7326493	1					
ANR	7326890	ExpressionStatement	dp -> stack [ sp ] . hi = val	998:15:31697:31719	7326493	0	True				
ANR	7326891	AssignmentExpression	dp -> stack [ sp ] . hi = val		7326493	0		=			
ANR	7326892	MemberAccess	dp -> stack [ sp ] . hi		7326493	0					
ANR	7326893	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326894	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326895	Identifier	dp		7326493	0					
ANR	7326896	Identifier	stack		7326493	1					
ANR	7326897	Identifier	sp		7326493	1					
ANR	7326898	Identifier	hi		7326493	1					
ANR	7326899	Identifier	val		7326493	1					
ANR	7326900	ExpressionStatement	dp -> stack [ sp ] . hi_size = best_size	999:15:31736:31769	7326493	1	True				
ANR	7326901	AssignmentExpression	dp -> stack [ sp ] . hi_size = best_size		7326493	0		=			
ANR	7326902	MemberAccess	dp -> stack [ sp ] . hi_size		7326493	0					
ANR	7326903	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326904	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326905	Identifier	dp		7326493	0					
ANR	7326906	Identifier	stack		7326493	1					
ANR	7326907	Identifier	sp		7326493	1					
ANR	7326908	Identifier	hi_size		7326493	1					
ANR	7326909	Identifier	best_size		7326493	1					
ANR	7326910	ExpressionStatement	val = hi	1000:15:31786:31794	7326493	2	True				
ANR	7326911	AssignmentExpression	val = hi		7326493	0		=			
ANR	7326912	Identifier	val		7326493	0					
ANR	7326913	Identifier	hi		7326493	1					
ANR	7326914	ExpressionStatement	best_size = hi_size	1001:15:31811:31830	7326493	3	True				
ANR	7326915	AssignmentExpression	best_size = hi_size		7326493	0		=			
ANR	7326916	Identifier	best_size		7326493	0					
ANR	7326917	Identifier	hi_size		7326493	1					
ANR	7326918	ExpressionStatement	hi = dp -> stack [ sp ] . hi	1002:15:31847:31868	7326493	4	True				
ANR	7326919	AssignmentExpression	hi = dp -> stack [ sp ] . hi		7326493	0		=			
ANR	7326920	Identifier	hi		7326493	0					
ANR	7326921	MemberAccess	dp -> stack [ sp ] . hi		7326493	1					
ANR	7326922	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326923	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326924	Identifier	dp		7326493	0					
ANR	7326925	Identifier	stack		7326493	1					
ANR	7326926	Identifier	sp		7326493	1					
ANR	7326927	Identifier	hi		7326493	1					
ANR	7326928	ExpressionStatement	hi_size = dp -> stack [ sp ] . hi_size	1003:15:31885:31916	7326493	5	True				
ANR	7326929	AssignmentExpression	hi_size = dp -> stack [ sp ] . hi_size		7326493	0		=			
ANR	7326930	Identifier	hi_size		7326493	0					
ANR	7326931	MemberAccess	dp -> stack [ sp ] . hi_size		7326493	1					
ANR	7326932	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326933	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326934	Identifier	dp		7326493	0					
ANR	7326935	Identifier	stack		7326493	1					
ANR	7326936	Identifier	sp		7326493	1					
ANR	7326937	Identifier	hi_size		7326493	1					
ANR	7326938	ExpressionStatement	assert ( lo < val && val < hi )	1007:12:32026:32054	7326493	4	True				
ANR	7326939	CallExpression	assert ( lo < val && val < hi )		7326493	0					
ANR	7326940	Callee	assert		7326493	0					
ANR	7326941	Identifier	assert		7326493	0					
ANR	7326942	ArgumentList	lo < val && val < hi		7326493	1					
ANR	7326943	Argument	lo < val && val < hi		7326493	0					
ANR	7326944	AndExpression	lo < val && val < hi		7326493	0		&&			
ANR	7326945	RelationalExpression	lo < val		7326493	0		<			
ANR	7326946	Identifier	lo		7326493	0					
ANR	7326947	Identifier	val		7326493	1					
ANR	7326948	RelationalExpression	val < hi		7326493	1		<			
ANR	7326949	Identifier	val		7326493	0					
ANR	7326950	Identifier	hi		7326493	1					
ANR	7326951	IfStatement	if ( hi == lo + 3 )		7326493	5					
ANR	7326952	Condition	hi == lo + 3	1012:16:32209:32218	7326493	0	True				
ANR	7326953	EqualityExpression	hi == lo + 3		7326493	0		==			
ANR	7326954	Identifier	hi		7326493	0					
ANR	7326955	AdditiveExpression	lo + 3		7326493	1		+			
ANR	7326956	Identifier	lo		7326493	0					
ANR	7326957	PrimaryExpression	3		7326493	1					
ANR	7326958	CompoundStatement		101:12:3215:3215	7326493	1					
ANR	7326959	ExpressionStatement	val = lo + ( ( val == lo + 1 ) ? 2 : 1 )	1017:15:32392:32426	7326493	0	True				
ANR	7326960	AssignmentExpression	val = lo + ( ( val == lo + 1 ) ? 2 : 1 )		7326493	0		=			
ANR	7326961	Identifier	val		7326493	0					
ANR	7326962	AdditiveExpression	lo + ( ( val == lo + 1 ) ? 2 : 1 )		7326493	1		+			
ANR	7326963	Identifier	lo		7326493	0					
ANR	7326964	ConditionalExpression	( val == lo + 1 ) ? 2 : 1		7326493	1					
ANR	7326965	Condition	val == lo + 1		7326493	0					
ANR	7326966	EqualityExpression	val == lo + 1		7326493	0		==			
ANR	7326967	Identifier	val		7326493	0					
ANR	7326968	AdditiveExpression	lo + 1		7326493	1		+			
ANR	7326969	Identifier	lo		7326493	0					
ANR	7326970	PrimaryExpression	1		7326493	1					
ANR	7326971	PrimaryExpression	2		7326493	1					
ANR	7326972	PrimaryExpression	1		7326493	2					
ANR	7326973	ExpressionStatement	assert ( lo < val && val < hi )	1018:15:32443:32471	7326493	1	True				
ANR	7326974	CallExpression	assert ( lo < val && val < hi )		7326493	0					
ANR	7326975	Callee	assert		7326493	0					
ANR	7326976	Identifier	assert		7326493	0					
ANR	7326977	ArgumentList	lo < val && val < hi		7326493	1					
ANR	7326978	Argument	lo < val && val < hi		7326493	0					
ANR	7326979	AndExpression	lo < val && val < hi		7326493	0		&&			
ANR	7326980	RelationalExpression	lo < val		7326493	0		<			
ANR	7326981	Identifier	lo		7326493	0					
ANR	7326982	Identifier	val		7326493	1					
ANR	7326983	RelationalExpression	val < hi		7326493	1		<			
ANR	7326984	Identifier	val		7326493	0					
ANR	7326985	Identifier	hi		7326493	1					
ANR	7326986	ExpressionStatement	dp -> stack [ sp ] . end = 1	1019:15:32488:32509	7326493	2	True				
ANR	7326987	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7326988	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7326989	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7326990	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7326991	Identifier	dp		7326493	0					
ANR	7326992	Identifier	stack		7326493	1					
ANR	7326993	Identifier	sp		7326493	1					
ANR	7326994	Identifier	end		7326493	1					
ANR	7326995	PrimaryExpression	1		7326493	1					
ANR	7326996	ElseStatement	else		7326493	0					
ANR	7326997	CompoundStatement		111:12:3537:3537	7326493	0					
ANR	7326998	ExpressionStatement	assert ( hi > lo + 3 )	1030:15:32898:32915	7326493	0	True				
ANR	7326999	CallExpression	assert ( hi > lo + 3 )		7326493	0					
ANR	7327000	Callee	assert		7326493	0					
ANR	7327001	Identifier	assert		7326493	0					
ANR	7327002	ArgumentList	hi > lo + 3		7326493	1					
ANR	7327003	Argument	hi > lo + 3		7326493	0					
ANR	7327004	RelationalExpression	hi > lo + 3		7326493	0		>			
ANR	7327005	Identifier	hi		7326493	0					
ANR	7327006	AdditiveExpression	lo + 3		7326493	1		+			
ANR	7327007	Identifier	lo		7326493	0					
ANR	7327008	PrimaryExpression	3		7326493	1					
ANR	7327009	IfStatement	if ( lo_size <= best_size && best_size <= hi_size )		7326493	1					
ANR	7327010	Condition	lo_size <= best_size && best_size <= hi_size	1032:19:32937:32980	7326493	0	True				
ANR	7327011	AndExpression	lo_size <= best_size && best_size <= hi_size		7326493	0		&&			
ANR	7327012	RelationalExpression	lo_size <= best_size		7326493	0		<=			
ANR	7327013	Identifier	lo_size		7326493	0					
ANR	7327014	Identifier	best_size		7326493	1					
ANR	7327015	RelationalExpression	best_size <= hi_size		7326493	1		<=			
ANR	7327016	Identifier	best_size		7326493	0					
ANR	7327017	Identifier	hi_size		7326493	1					
ANR	7327018	CompoundStatement		121:15:3980:3980	7326493	1					
ANR	7327019	IfStatement	if ( val == lo + 1 )		7326493	0					
ANR	7327020	Condition	val == lo + 1	1039:22:33338:33348	7326493	0	True				
ANR	7327021	EqualityExpression	val == lo + 1		7326493	0		==			
ANR	7327022	Identifier	val		7326493	0					
ANR	7327023	AdditiveExpression	lo + 1		7326493	1		+			
ANR	7327024	Identifier	lo		7326493	0					
ANR	7327025	PrimaryExpression	1		7326493	1					
ANR	7327026	CompoundStatement		128:18:4351:4351	7326493	1					
ANR	7327027	ExpressionStatement	++ val	1041:21:33392:33397	7326493	0	True				
ANR	7327028	UnaryExpression	++ val		7326493	0					
ANR	7327029	IncDec	++		7326493	0					
ANR	7327030	Identifier	val		7326493	1					
ANR	7327031	ExpressionStatement	dp -> stack [ sp ] . end = 1	1042:21:33420:33441	7326493	1	True				
ANR	7327032	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7327033	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7327034	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327035	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327036	Identifier	dp		7326493	0					
ANR	7327037	Identifier	stack		7326493	1					
ANR	7327038	Identifier	sp		7326493	1					
ANR	7327039	Identifier	end		7326493	1					
ANR	7327040	PrimaryExpression	1		7326493	1					
ANR	7327041	ElseStatement	else		7326493	0					
ANR	7327042	CompoundStatement		134:18:4487:4487	7326493	0					
ANR	7327043	ExpressionStatement	dp -> stack [ sp ] . hi = hi = val	1047:21:33528:33555	7326493	0	True				
ANR	7327044	AssignmentExpression	dp -> stack [ sp ] . hi = hi = val		7326493	0		=			
ANR	7327045	MemberAccess	dp -> stack [ sp ] . hi		7326493	0					
ANR	7327046	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327047	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327048	Identifier	dp		7326493	0					
ANR	7327049	Identifier	stack		7326493	1					
ANR	7327050	Identifier	sp		7326493	1					
ANR	7327051	Identifier	hi		7326493	1					
ANR	7327052	AssignmentExpression	hi = val		7326493	1		=			
ANR	7327053	Identifier	hi		7326493	0					
ANR	7327054	Identifier	val		7326493	1					
ANR	7327055	ExpressionStatement	dp -> stack [ sp ] . hi_size = best_size	1048:21:33578:33611	7326493	1	True				
ANR	7327056	AssignmentExpression	dp -> stack [ sp ] . hi_size = best_size		7326493	0		=			
ANR	7327057	MemberAccess	dp -> stack [ sp ] . hi_size		7326493	0					
ANR	7327058	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327059	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327060	Identifier	dp		7326493	0					
ANR	7327061	Identifier	stack		7326493	1					
ANR	7327062	Identifier	sp		7326493	1					
ANR	7327063	Identifier	hi_size		7326493	1					
ANR	7327064	Identifier	best_size		7326493	1					
ANR	7327065	ExpressionStatement	val = ( lo + val ) / 2	1049:21:33634:33654	7326493	2	True				
ANR	7327066	AssignmentExpression	val = ( lo + val ) / 2		7326493	0		=			
ANR	7327067	Identifier	val		7326493	0					
ANR	7327068	MultiplicativeExpression	( lo + val ) / 2		7326493	1		/			
ANR	7327069	AdditiveExpression	lo + val		7326493	0		+			
ANR	7327070	Identifier	lo		7326493	0					
ANR	7327071	Identifier	val		7326493	1					
ANR	7327072	PrimaryExpression	2		7326493	1					
ANR	7327073	ElseStatement	else		7326493	0					
ANR	7327074	IfStatement	if ( lo_size >= best_size && best_size >= hi_size )		7326493	0					
ANR	7327075	Condition	lo_size >= best_size && best_size >= hi_size	1053:24:33718:33761	7326493	0	True				
ANR	7327076	AndExpression	lo_size >= best_size && best_size >= hi_size		7326493	0		&&			
ANR	7327077	RelationalExpression	lo_size >= best_size		7326493	0		>=			
ANR	7327078	Identifier	lo_size		7326493	0					
ANR	7327079	Identifier	best_size		7326493	1					
ANR	7327080	RelationalExpression	best_size >= hi_size		7326493	1		>=			
ANR	7327081	Identifier	best_size		7326493	0					
ANR	7327082	Identifier	hi_size		7326493	1					
ANR	7327083	CompoundStatement		142:15:4761:4761	7326493	1					
ANR	7327084	IfStatement	if ( val == hi - 1 )		7326493	0					
ANR	7327085	Condition	val == hi - 1	1059:22:34008:34018	7326493	0	True				
ANR	7327086	EqualityExpression	val == hi - 1		7326493	0		==			
ANR	7327087	Identifier	val		7326493	0					
ANR	7327088	AdditiveExpression	hi - 1		7326493	1		-			
ANR	7327089	Identifier	hi		7326493	0					
ANR	7327090	PrimaryExpression	1		7326493	1					
ANR	7327091	CompoundStatement		148:18:5021:5021	7326493	1					
ANR	7327092	ExpressionStatement	-- val	1061:21:34062:34067	7326493	0	True				
ANR	7327093	UnaryExpression	-- val		7326493	0					
ANR	7327094	IncDec	--		7326493	0					
ANR	7327095	Identifier	val		7326493	1					
ANR	7327096	ExpressionStatement	dp -> stack [ sp ] . end = 1	1062:21:34090:34111	7326493	1	True				
ANR	7327097	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7327098	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7327099	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327100	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327101	Identifier	dp		7326493	0					
ANR	7327102	Identifier	stack		7326493	1					
ANR	7327103	Identifier	sp		7326493	1					
ANR	7327104	Identifier	end		7326493	1					
ANR	7327105	PrimaryExpression	1		7326493	1					
ANR	7327106	ElseStatement	else		7326493	0					
ANR	7327107	CompoundStatement		154:18:5157:5157	7326493	0					
ANR	7327108	ExpressionStatement	dp -> stack [ sp ] . lo = lo = val	1067:21:34198:34225	7326493	0	True				
ANR	7327109	AssignmentExpression	dp -> stack [ sp ] . lo = lo = val		7326493	0		=			
ANR	7327110	MemberAccess	dp -> stack [ sp ] . lo		7326493	0					
ANR	7327111	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327112	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327113	Identifier	dp		7326493	0					
ANR	7327114	Identifier	stack		7326493	1					
ANR	7327115	Identifier	sp		7326493	1					
ANR	7327116	Identifier	lo		7326493	1					
ANR	7327117	AssignmentExpression	lo = val		7326493	1		=			
ANR	7327118	Identifier	lo		7326493	0					
ANR	7327119	Identifier	val		7326493	1					
ANR	7327120	ExpressionStatement	dp -> stack [ sp ] . lo_size = best_size	1068:21:34248:34281	7326493	1	True				
ANR	7327121	AssignmentExpression	dp -> stack [ sp ] . lo_size = best_size		7326493	0		=			
ANR	7327122	MemberAccess	dp -> stack [ sp ] . lo_size		7326493	0					
ANR	7327123	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327124	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327125	Identifier	dp		7326493	0					
ANR	7327126	Identifier	stack		7326493	1					
ANR	7327127	Identifier	sp		7326493	1					
ANR	7327128	Identifier	lo_size		7326493	1					
ANR	7327129	Identifier	best_size		7326493	1					
ANR	7327130	ExpressionStatement	val = ( val + hi ) / 2	1069:21:34304:34324	7326493	2	True				
ANR	7327131	AssignmentExpression	val = ( val + hi ) / 2		7326493	0		=			
ANR	7327132	Identifier	val		7326493	0					
ANR	7327133	MultiplicativeExpression	( val + hi ) / 2		7326493	1		/			
ANR	7327134	AdditiveExpression	val + hi		7326493	0		+			
ANR	7327135	Identifier	val		7326493	0					
ANR	7327136	Identifier	hi		7326493	1					
ANR	7327137	PrimaryExpression	2		7326493	1					
ANR	7327138	ElseStatement	else		7326493	0					
ANR	7327139	IfStatement	if ( lo_size <= hi_size )		7326493	0					
ANR	7327140	Condition	lo_size <= hi_size	1088:24:35248:35265	7326493	0	True				
ANR	7327141	RelationalExpression	lo_size <= hi_size		7326493	0		<=			
ANR	7327142	Identifier	lo_size		7326493	0					
ANR	7327143	Identifier	hi_size		7326493	1					
ANR	7327144	CompoundStatement		177:15:6284:6284	7326493	1					
ANR	7327145	ExpressionStatement	dp -> stack [ sp ] . hi = val	1090:18:35322:35344	7326493	0	True				
ANR	7327146	AssignmentExpression	dp -> stack [ sp ] . hi = val		7326493	0		=			
ANR	7327147	MemberAccess	dp -> stack [ sp ] . hi		7326493	0					
ANR	7327148	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327149	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327150	Identifier	dp		7326493	0					
ANR	7327151	Identifier	stack		7326493	1					
ANR	7327152	Identifier	sp		7326493	1					
ANR	7327153	Identifier	hi		7326493	1					
ANR	7327154	Identifier	val		7326493	1					
ANR	7327155	ExpressionStatement	dp -> stack [ sp ] . hi_size = best_size	1091:18:35364:35397	7326493	1	True				
ANR	7327156	AssignmentExpression	dp -> stack [ sp ] . hi_size = best_size		7326493	0		=			
ANR	7327157	MemberAccess	dp -> stack [ sp ] . hi_size		7326493	0					
ANR	7327158	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327159	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327160	Identifier	dp		7326493	0					
ANR	7327161	Identifier	stack		7326493	1					
ANR	7327162	Identifier	sp		7326493	1					
ANR	7327163	Identifier	hi_size		7326493	1					
ANR	7327164	Identifier	best_size		7326493	1					
ANR	7327165	ExpressionStatement	val = -- hi	1092:18:35417:35427	7326493	2	True				
ANR	7327166	AssignmentExpression	val = -- hi		7326493	0		=			
ANR	7327167	Identifier	val		7326493	0					
ANR	7327168	UnaryExpression	-- hi		7326493	1					
ANR	7327169	IncDec	--		7326493	0					
ANR	7327170	Identifier	hi		7326493	1					
ANR	7327171	ElseStatement	else		7326493	0					
ANR	7327172	CompoundStatement		184:15:6482:6482	7326493	0					
ANR	7327173	ExpressionStatement	dp -> stack [ sp ] . lo = val	1097:18:35520:35542	7326493	0	True				
ANR	7327174	AssignmentExpression	dp -> stack [ sp ] . lo = val		7326493	0		=			
ANR	7327175	MemberAccess	dp -> stack [ sp ] . lo		7326493	0					
ANR	7327176	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327177	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327178	Identifier	dp		7326493	0					
ANR	7327179	Identifier	stack		7326493	1					
ANR	7327180	Identifier	sp		7326493	1					
ANR	7327181	Identifier	lo		7326493	1					
ANR	7327182	Identifier	val		7326493	1					
ANR	7327183	ExpressionStatement	dp -> stack [ sp ] . lo_size = best_size	1098:18:35562:35595	7326493	1	True				
ANR	7327184	AssignmentExpression	dp -> stack [ sp ] . lo_size = best_size		7326493	0		=			
ANR	7327185	MemberAccess	dp -> stack [ sp ] . lo_size		7326493	0					
ANR	7327186	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327187	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327188	Identifier	dp		7326493	0					
ANR	7327189	Identifier	stack		7326493	1					
ANR	7327190	Identifier	sp		7326493	1					
ANR	7327191	Identifier	lo_size		7326493	1					
ANR	7327192	Identifier	best_size		7326493	1					
ANR	7327193	ExpressionStatement	val = ++ lo	1099:18:35615:35625	7326493	2	True				
ANR	7327194	AssignmentExpression	val = ++ lo		7326493	0		=			
ANR	7327195	Identifier	val		7326493	0					
ANR	7327196	UnaryExpression	++ lo		7326493	1					
ANR	7327197	IncDec	++		7326493	0					
ANR	7327198	Identifier	lo		7326493	1					
ANR	7327199	ExpressionStatement	assert ( hi > lo + 1 )	1105:15:35787:35804	7326493	2	True				
ANR	7327200	CallExpression	assert ( hi > lo + 1 )		7326493	0					
ANR	7327201	Callee	assert		7326493	0					
ANR	7327202	Identifier	assert		7326493	0					
ANR	7327203	ArgumentList	hi > lo + 1		7326493	1					
ANR	7327204	Argument	hi > lo + 1		7326493	0					
ANR	7327205	RelationalExpression	hi > lo + 1		7326493	0		>			
ANR	7327206	Identifier	hi		7326493	0					
ANR	7327207	AdditiveExpression	lo + 1		7326493	1		+			
ANR	7327208	Identifier	lo		7326493	0					
ANR	7327209	PrimaryExpression	1		7326493	1					
ANR	7327210	IfStatement	if ( hi <= lo + 2 )		7326493	3					
ANR	7327211	Condition	hi <= lo + 2	1106:19:35825:35834	7326493	0	True				
ANR	7327212	RelationalExpression	hi <= lo + 2		7326493	0		<=			
ANR	7327213	Identifier	hi		7326493	0					
ANR	7327214	AdditiveExpression	lo + 2		7326493	1		+			
ANR	7327215	Identifier	lo		7326493	0					
ANR	7327216	PrimaryExpression	2		7326493	1					
ANR	7327217	ExpressionStatement	dp -> stack [ sp ] . end = 1	1107:18:35855:35876	7326493	1	True				
ANR	7327218	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7327219	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7327220	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327221	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327222	Identifier	dp		7326493	0					
ANR	7327223	Identifier	stack		7326493	1					
ANR	7327224	Identifier	sp		7326493	1					
ANR	7327225	Identifier	end		7326493	1					
ANR	7327226	PrimaryExpression	1		7326493	1					
ANR	7327227	ExpressionStatement	assert ( val != dp -> stack [ sp ] . best_val )	1111:9:35913:35950	7326493	7	True				
ANR	7327228	CallExpression	assert ( val != dp -> stack [ sp ] . best_val )		7326493	0					
ANR	7327229	Callee	assert		7326493	0					
ANR	7327230	Identifier	assert		7326493	0					
ANR	7327231	ArgumentList	val != dp -> stack [ sp ] . best_val		7326493	1					
ANR	7327232	Argument	val != dp -> stack [ sp ] . best_val		7326493	0					
ANR	7327233	EqualityExpression	val != dp -> stack [ sp ] . best_val		7326493	0		!=			
ANR	7327234	Identifier	val		7326493	0					
ANR	7327235	MemberAccess	dp -> stack [ sp ] . best_val		7326493	1					
ANR	7327236	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327237	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327238	Identifier	dp		7326493	0					
ANR	7327239	Identifier	stack		7326493	1					
ANR	7327240	Identifier	sp		7326493	1					
ANR	7327241	Identifier	best_val		7326493	1					
ANR	7327242	ExpressionStatement	dp -> value [ opt ] = val	1112:9:35989:36009	7326493	8	True				
ANR	7327243	AssignmentExpression	dp -> value [ opt ] = val		7326493	0		=			
ANR	7327244	ArrayIndexing	dp -> value [ opt ]		7326493	0					
ANR	7327245	PtrMemberAccess	dp -> value		7326493	0					
ANR	7327246	Identifier	dp		7326493	0					
ANR	7327247	Identifier	value		7326493	1					
ANR	7327248	Identifier	opt		7326493	1					
ANR	7327249	Identifier	val		7326493	1					
ANR	7327250	ExpressionStatement	dp -> stack [ sp ] . best_size = MAX_SIZE	1113:9:36020:36054	7326493	9	True				
ANR	7327251	AssignmentExpression	dp -> stack [ sp ] . best_size = MAX_SIZE		7326493	0		=			
ANR	7327252	MemberAccess	dp -> stack [ sp ] . best_size		7326493	0					
ANR	7327253	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327254	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327255	Identifier	dp		7326493	0					
ANR	7327256	Identifier	stack		7326493	1					
ANR	7327257	Identifier	sp		7326493	1					
ANR	7327258	Identifier	best_size		7326493	1					
ANR	7327259	Identifier	MAX_SIZE		7326493	1					
ANR	7327260	ElseStatement	else		7326493	0					
ANR	7327261	CompoundStatement		206:3:7063:7063	7326493	0					
ANR	7327262	ExpressionStatement	dp -> value [ opt ] = options [ opt ] . values [ ++ entry ] . value	1120:6:36119:36170	7326493	0	True				
ANR	7327263	AssignmentExpression	dp -> value [ opt ] = options [ opt ] . values [ ++ entry ] . value		7326493	0		=			
ANR	7327264	ArrayIndexing	dp -> value [ opt ]		7326493	0					
ANR	7327265	PtrMemberAccess	dp -> value		7326493	0					
ANR	7327266	Identifier	dp		7326493	0					
ANR	7327267	Identifier	value		7326493	1					
ANR	7327268	Identifier	opt		7326493	1					
ANR	7327269	MemberAccess	options [ opt ] . values [ ++ entry ] . value		7326493	1					
ANR	7327270	ArrayIndexing	options [ opt ] . values [ ++ entry ]		7326493	0					
ANR	7327271	MemberAccess	options [ opt ] . values		7326493	0					
ANR	7327272	ArrayIndexing	options [ opt ]		7326493	0					
ANR	7327273	Identifier	options		7326493	0					
ANR	7327274	Identifier	opt		7326493	1					
ANR	7327275	Identifier	values		7326493	1					
ANR	7327276	UnaryExpression	++ entry		7326493	1					
ANR	7327277	IncDec	++		7326493	0					
ANR	7327278	Identifier	entry		7326493	1					
ANR	7327279	Identifier	value		7326493	1					
ANR	7327280	ExpressionStatement	dp -> stack [ sp ] . entry = entry	1121:6:36178:36205	7326493	1	True				
ANR	7327281	AssignmentExpression	dp -> stack [ sp ] . entry = entry		7326493	0		=			
ANR	7327282	MemberAccess	dp -> stack [ sp ] . entry		7326493	0					
ANR	7327283	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327284	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327285	Identifier	dp		7326493	0					
ANR	7327286	Identifier	stack		7326493	1					
ANR	7327287	Identifier	sp		7326493	1					
ANR	7327288	Identifier	entry		7326493	1					
ANR	7327289	Identifier	entry		7326493	1					
ANR	7327290	ExpressionStatement	"set_opt_string ( dp , sp )"	1124:3:36216:36238	7326493	10	True				
ANR	7327291	CallExpression	"set_opt_string ( dp , sp )"		7326493	0					
ANR	7327292	Callee	set_opt_string		7326493	0					
ANR	7327293	Identifier	set_opt_string		7326493	0					
ANR	7327294	ArgumentList	dp		7326493	1					
ANR	7327295	Argument	dp		7326493	0					
ANR	7327296	Identifier	dp		7326493	0					
ANR	7327297	Argument	sp		7326493	1					
ANR	7327298	Identifier	sp		7326493	0					
ANR	7327299	IfStatement	"if ( ! search && opt_list_end ( dp , opt , entry ) )"		7326493	11					
ANR	7327300	Condition	"! search && opt_list_end ( dp , opt , entry )"	1126:7:36248:36286	7326493	0	True				
ANR	7327301	AndExpression	"! search && opt_list_end ( dp , opt , entry )"		7326493	0		&&			
ANR	7327302	UnaryOperationExpression	! search		7326493	0					
ANR	7327303	UnaryOperator	!		7326493	0					
ANR	7327304	Identifier	search		7326493	1					
ANR	7327305	CallExpression	"opt_list_end ( dp , opt , entry )"		7326493	1					
ANR	7327306	Callee	opt_list_end		7326493	0					
ANR	7327307	Identifier	opt_list_end		7326493	0					
ANR	7327308	ArgumentList	dp		7326493	1					
ANR	7327309	Argument	dp		7326493	0					
ANR	7327310	Identifier	dp		7326493	0					
ANR	7327311	Argument	opt		7326493	1					
ANR	7327312	Identifier	opt		7326493	0					
ANR	7327313	Argument	entry		7326493	2					
ANR	7327314	Identifier	entry		7326493	0					
ANR	7327315	ExpressionStatement	dp -> stack [ sp ] . end = 1	1127:6:36313:36334	7326493	1	True				
ANR	7327316	AssignmentExpression	dp -> stack [ sp ] . end = 1		7326493	0		=			
ANR	7327317	MemberAccess	dp -> stack [ sp ] . end		7326493	0					
ANR	7327318	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327319	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327320	Identifier	dp		7326493	0					
ANR	7327321	Identifier	stack		7326493	1					
ANR	7327322	Identifier	sp		7326493	1					
ANR	7327323	Identifier	end		7326493	1					
ANR	7327324	PrimaryExpression	1		7326493	1					
ANR	7327325	ElseStatement	else		7326493	0					
ANR	7327326	IfStatement	if ( ! dp -> stack [ sp ] . end )		7326493	0					
ANR	7327327	Condition	! dp -> stack [ sp ] . end	1129:12:36349:36366	7326493	0	True				
ANR	7327328	UnaryOperationExpression	! dp -> stack [ sp ] . end		7326493	0					
ANR	7327329	UnaryOperator	!		7326493	0					
ANR	7327330	MemberAccess	dp -> stack [ sp ] . end		7326493	1					
ANR	7327331	ArrayIndexing	dp -> stack [ sp ]		7326493	0					
ANR	7327332	PtrMemberAccess	dp -> stack		7326493	0					
ANR	7327333	Identifier	dp		7326493	0					
ANR	7327334	Identifier	stack		7326493	1					
ANR	7327335	Identifier	sp		7326493	1					
ANR	7327336	Identifier	end		7326493	1					
ANR	7327337	ExpressionStatement	dp -> nsp = dp -> tsp	1130:6:36416:36433	7326493	1	True				
ANR	7327338	AssignmentExpression	dp -> nsp = dp -> tsp		7326493	0		=			
ANR	7327339	PtrMemberAccess	dp -> nsp		7326493	0					
ANR	7327340	Identifier	dp		7326493	0					
ANR	7327341	Identifier	nsp		7326493	1					
ANR	7327342	PtrMemberAccess	dp -> tsp		7326493	1					
ANR	7327343	Identifier	dp		7326493	0					
ANR	7327344	Identifier	tsp		7326493	1					
ANR	7327345	ReturnType	static void		7326493	1					
ANR	7327346	Identifier	next_opt		7326493	2					
ANR	7327347	ParameterList	"struct display * dp , unsigned int sp"		7326493	3					
ANR	7327348	Parameter	struct display * dp	906:9:28618:28635	7326493	0	True				
ANR	7327349	ParameterType	struct display *		7326493	0					
ANR	7327350	Identifier	dp		7326493	1					
ANR	7327351	Parameter	unsigned int sp	906:29:28638:28652	7326493	1	True				
ANR	7327352	ParameterType	unsigned int		7326493	0					
ANR	7327353	Identifier	sp		7326493	1					
ANR	7327354	CFGEntryNode	ENTRY		7326493		True				
ANR	7327355	CFGExitNode	EXIT		7326493		True				
ANR	7327356	Symbol	* sp		7326493						
ANR	7327357	Symbol	* dp -> stack		7326493						
ANR	7327358	Symbol	hi		7326493						
ANR	7327359	Symbol	lo		7326493						
ANR	7327360	Symbol	lo_size		7326493						
ANR	7327361	Symbol	dp -> stack [ sp ] . entry		7326493						
ANR	7327362	Symbol	* * opt		7326493						
ANR	7327363	Symbol	dp -> stack [ sp ] . hi		7326493						
ANR	7327364	Symbol	dp -> stack [ sp ] . lo		7326493						
ANR	7327365	Symbol	dp -> stack [ sp ] . best_val		7326493						
ANR	7327366	Symbol	dp		7326493						
ANR	7327367	Symbol	* options		7326493						
ANR	7327368	Symbol	dp -> stack [ sp ] . hi_size		7326493						
ANR	7327369	Symbol	* dp		7326493						
ANR	7327370	Symbol	search		7326493						
ANR	7327371	Symbol	range_lo		7326493						
ANR	7327372	Symbol	options		7326493						
ANR	7327373	Symbol	dp -> stack [ sp ] . end		7326493						
ANR	7327374	Symbol	dp -> stack [ sp ] . best_size		7326493						
ANR	7327375	Symbol	hi_size		7326493						
ANR	7327376	Symbol	sp		7326493						
ANR	7327377	Symbol	* opt		7326493						
ANR	7327378	Symbol	* entry		7326493						
ANR	7327379	Symbol	entry_name		7326493						
ANR	7327380	Symbol	val		7326493						
ANR	7327381	Symbol	options [ opt ] . values [ ++ entry ] . value		7326493						
ANR	7327382	Symbol	NULL		7326493						
ANR	7327383	Symbol	* options [ opt ] . values		7326493						
ANR	7327384	Symbol	best_size		7326493						
ANR	7327385	Symbol	MAX_SIZE		7326493						
ANR	7327386	Symbol	* * options		7326493						
ANR	7327387	Symbol	options [ opt ] . values [ entry ] . name		7326493						
ANR	7327388	Symbol	dp -> stack		7326493						
ANR	7327389	Symbol	dp -> stack [ sp ] . opt		7326493						
ANR	7327390	Symbol	entry		7326493						
ANR	7327391	Symbol	opt		7326493						
ANR	7327392	Symbol	dp -> value		7326493						
ANR	7327393	Symbol	* dp -> value		7326493						
ANR	7327394	Symbol	options [ opt ] . value_count		7326493						
ANR	7327395	Symbol	* * dp		7326493						
ANR	7327396	Symbol	dp -> stack [ sp ] . lo_size		7326493						
ANR	7327397	Symbol	dp -> nsp		7326493						
ANR	7327398	Symbol	dp -> tsp		7326493						
ANR	7327399	Symbol	opt_list_end		7326493						
ANR	7327400	Symbol	options [ opt ] . values		7326493						
ANR	7327401	Function	compare_option	1133:0:36438:37135							
ANR	7327402	FunctionDef	"compare_option (const struct display * dp , unsigned int sp)"		7327401	0					
ANR	7327403	CompoundStatement		1135:0:36507:37135	7327401	0					
ANR	7327404	IdentifierDeclStatement	int opt = dp -> stack [ sp ] . opt ;	1136:3:36512:36539	7327401	0	True				
ANR	7327405	IdentifierDecl	opt = dp -> stack [ sp ] . opt		7327401	0					
ANR	7327406	IdentifierDeclType	int		7327401	0					
ANR	7327407	Identifier	opt		7327401	1					
ANR	7327408	AssignmentExpression	opt = dp -> stack [ sp ] . opt		7327401	2		=			
ANR	7327409	Identifier	opt		7327401	0					
ANR	7327410	MemberAccess	dp -> stack [ sp ] . opt		7327401	1					
ANR	7327411	ArrayIndexing	dp -> stack [ sp ]		7327401	0					
ANR	7327412	PtrMemberAccess	dp -> stack		7327401	0					
ANR	7327413	Identifier	dp		7327401	0					
ANR	7327414	Identifier	stack		7327401	1					
ANR	7327415	Identifier	sp		7327401	1					
ANR	7327416	Identifier	opt		7327401	1					
ANR	7327417	IfStatement	if ( dp -> stack [ sp ] . best_val < dp -> value [ opt ] )		7327401	1					
ANR	7327418	Condition	dp -> stack [ sp ] . best_val < dp -> value [ opt ]	1141:7:36678:36716	7327401	0	True				
ANR	7327419	RelationalExpression	dp -> stack [ sp ] . best_val < dp -> value [ opt ]		7327401	0		<			
ANR	7327420	MemberAccess	dp -> stack [ sp ] . best_val		7327401	0					
ANR	7327421	ArrayIndexing	dp -> stack [ sp ]		7327401	0					
ANR	7327422	PtrMemberAccess	dp -> stack		7327401	0					
ANR	7327423	Identifier	dp		7327401	0					
ANR	7327424	Identifier	stack		7327401	1					
ANR	7327425	Identifier	sp		7327401	1					
ANR	7327426	Identifier	best_val		7327401	1					
ANR	7327427	ArrayIndexing	dp -> value [ opt ]		7327401	1					
ANR	7327428	PtrMemberAccess	dp -> value		7327401	0					
ANR	7327429	Identifier	dp		7327401	0					
ANR	7327430	Identifier	value		7327401	1					
ANR	7327431	Identifier	opt		7327401	1					
ANR	7327432	ReturnStatement	return - 1 ;	1142:6:36725:36734	7327401	1	True				
ANR	7327433	UnaryOperationExpression	- 1		7327401	0					
ANR	7327434	UnaryOperator	-		7327401	0					
ANR	7327435	PrimaryExpression	1		7327401	1					
ANR	7327436	ElseStatement	else		7327401	0					
ANR	7327437	IfStatement	if ( dp -> stack [ sp ] . best_val > dp -> value [ opt ] )		7327401	0					
ANR	7327438	Condition	dp -> stack [ sp ] . best_val > dp -> value [ opt ]	1147:12:36903:36941	7327401	0	True				
ANR	7327439	RelationalExpression	dp -> stack [ sp ] . best_val > dp -> value [ opt ]		7327401	0		>			
ANR	7327440	MemberAccess	dp -> stack [ sp ] . best_val		7327401	0					
ANR	7327441	ArrayIndexing	dp -> stack [ sp ]		7327401	0					
ANR	7327442	PtrMemberAccess	dp -> stack		7327401	0					
ANR	7327443	Identifier	dp		7327401	0					
ANR	7327444	Identifier	stack		7327401	1					
ANR	7327445	Identifier	sp		7327401	1					
ANR	7327446	Identifier	best_val		7327401	1					
ANR	7327447	ArrayIndexing	dp -> value [ opt ]		7327401	1					
ANR	7327448	PtrMemberAccess	dp -> value		7327401	0					
ANR	7327449	Identifier	dp		7327401	0					
ANR	7327450	Identifier	value		7327401	1					
ANR	7327451	Identifier	opt		7327401	1					
ANR	7327452	CompoundStatement		14:3:439:439	7327401	1					
ANR	7327453	IfStatement	if ( dp -> stack [ sp ] . lo <= dp -> stack [ sp ] . hi )		7327401	0					
ANR	7327454	Condition	dp -> stack [ sp ] . lo <= dp -> stack [ sp ] . hi	1149:10:36959:36994	7327401	0	True				
ANR	7327455	RelationalExpression	dp -> stack [ sp ] . lo <= dp -> stack [ sp ] . hi		7327401	0		<=			
ANR	7327456	MemberAccess	dp -> stack [ sp ] . lo		7327401	0					
ANR	7327457	ArrayIndexing	dp -> stack [ sp ]		7327401	0					
ANR	7327458	PtrMemberAccess	dp -> stack		7327401	0					
ANR	7327459	Identifier	dp		7327401	0					
ANR	7327460	Identifier	stack		7327401	1					
ANR	7327461	Identifier	sp		7327401	1					
ANR	7327462	Identifier	lo		7327401	1					
ANR	7327463	MemberAccess	dp -> stack [ sp ] . hi		7327401	1					
ANR	7327464	ArrayIndexing	dp -> stack [ sp ]		7327401	0					
ANR	7327465	PtrMemberAccess	dp -> stack		7327401	0					
ANR	7327466	Identifier	dp		7327401	0					
ANR	7327467	Identifier	stack		7327401	1					
ANR	7327468	Identifier	sp		7327401	1					
ANR	7327469	Identifier	hi		7327401	1					
ANR	7327470	ReturnStatement	return 1 ;	1150:9:37020:37028	7327401	1	True				
ANR	7327471	PrimaryExpression	1		7327401	0					
ANR	7327472	ElseStatement	else		7327401	0					
ANR	7327473	ReturnStatement	return - 1 ;	1153:9:37051:37060	7327401	0	True				
ANR	7327474	UnaryOperationExpression	- 1		7327401	0					
ANR	7327475	UnaryOperator	-		7327401	0					
ANR	7327476	PrimaryExpression	1		7327401	1					
ANR	7327477	ElseStatement	else		7327401	0					
ANR	7327478	ReturnStatement	return 0 ;	1157:6:37082:37090	7327401	0	True				
ANR	7327479	PrimaryExpression	0		7327401	0					
ANR	7327480	ReturnType	static int		7327401	1					
ANR	7327481	Identifier	compare_option		7327401	2					
ANR	7327482	ParameterList	"const struct display * dp , unsigned int sp"		7327401	3					
ANR	7327483	Parameter	const struct display * dp	1134:15:36464:36487	7327401	0	True				
ANR	7327484	ParameterType	const struct display *		7327401	0					
ANR	7327485	Identifier	dp		7327401	1					
ANR	7327486	Parameter	unsigned int sp	1134:41:36490:36504	7327401	1	True				
ANR	7327487	ParameterType	unsigned int		7327401	0					
ANR	7327488	Identifier	sp		7327401	1					
ANR	7327489	CFGEntryNode	ENTRY		7327401		True				
ANR	7327490	CFGExitNode	EXIT		7327401		True				
ANR	7327491	Symbol	* sp		7327401						
ANR	7327492	Symbol	* dp -> stack		7327401						
ANR	7327493	Symbol	dp -> stack [ sp ] . hi		7327401						
ANR	7327494	Symbol	dp -> stack [ sp ] . best_val		7327401						
ANR	7327495	Symbol	dp -> stack [ sp ] . lo		7327401						
ANR	7327496	Symbol	dp		7327401						
ANR	7327497	Symbol	dp -> stack		7327401						
ANR	7327498	Symbol	dp -> stack [ sp ] . opt		7327401						
ANR	7327499	Symbol	* dp		7327401						
ANR	7327500	Symbol	opt		7327401						
ANR	7327501	Symbol	dp -> value		7327401						
ANR	7327502	Symbol	* dp -> value		7327401						
ANR	7327503	Symbol	* * dp		7327401						
ANR	7327504	Symbol	sp		7327401						
ANR	7327505	Symbol	* opt		7327401						
ANR	7327506	Function	advance_opt	1160:0:37138:39199							
ANR	7327507	FunctionDef	"advance_opt (struct display * dp , png_byte opt , int search)"		7327506	0					
ANR	7327508	CompoundStatement		1162:0:37207:39199	7327506	0					
ANR	7327509	IdentifierDeclStatement	unsigned int sp = dp -> csp ++ ;	1163:3:37212:37239	7327506	0	True				
ANR	7327510	IdentifierDecl	sp = dp -> csp ++		7327506	0					
ANR	7327511	IdentifierDeclType	unsigned int		7327506	0					
ANR	7327512	Identifier	sp		7327506	1					
ANR	7327513	AssignmentExpression	sp = dp -> csp ++		7327506	2		=			
ANR	7327514	Identifier	sp		7327506	0					
ANR	7327515	PostIncDecOperationExpression	dp -> csp ++		7327506	1					
ANR	7327516	PtrMemberAccess	dp -> csp		7327506	0					
ANR	7327517	Identifier	dp		7327506	0					
ANR	7327518	Identifier	csp		7327506	1					
ANR	7327519	IncDec	++		7327506	1					
ANR	7327520	ExpressionStatement	assert ( sp >= dp -> nsp )	1165:3:37266:37287	7327506	1	True				
ANR	7327521	CallExpression	assert ( sp >= dp -> nsp )		7327506	0					
ANR	7327522	Callee	assert		7327506	0					
ANR	7327523	Identifier	assert		7327506	0					
ANR	7327524	ArgumentList	sp >= dp -> nsp		7327506	1					
ANR	7327525	Argument	sp >= dp -> nsp		7327506	0					
ANR	7327526	RelationalExpression	sp >= dp -> nsp		7327506	0		>=			
ANR	7327527	Identifier	sp		7327506	0					
ANR	7327528	PtrMemberAccess	dp -> nsp		7327506	1					
ANR	7327529	Identifier	dp		7327506	0					
ANR	7327530	Identifier	nsp		7327506	1					
ANR	7327531	IfStatement	if ( sp >= dp -> tsp )		7327506	2					
ANR	7327532	Condition	sp >= dp -> tsp	1186:7:38174:38186	7327506	0	True				
ANR	7327533	RelationalExpression	sp >= dp -> tsp		7327506	0		>=			
ANR	7327534	Identifier	sp		7327506	0					
ANR	7327535	PtrMemberAccess	dp -> tsp		7327506	1					
ANR	7327536	Identifier	dp		7327506	0					
ANR	7327537	Identifier	tsp		7327506	1					
ANR	7327538	CompoundStatement		26:3:984:984	7327506	1					
ANR	7327539	ExpressionStatement	"push_opt ( dp , sp , opt , search )"	1188:6:38200:38229	7327506	0	True				
ANR	7327540	CallExpression	"push_opt ( dp , sp , opt , search )"		7327506	0					
ANR	7327541	Callee	push_opt		7327506	0					
ANR	7327542	Identifier	push_opt		7327506	0					
ANR	7327543	ArgumentList	dp		7327506	1					
ANR	7327544	Argument	dp		7327506	0					
ANR	7327545	Identifier	dp		7327506	0					
ANR	7327546	Argument	sp		7327506	1					
ANR	7327547	Identifier	sp		7327506	0					
ANR	7327548	Argument	opt		7327506	2					
ANR	7327549	Identifier	opt		7327506	0					
ANR	7327550	Argument	search		7327506	3					
ANR	7327551	Identifier	search		7327506	0					
ANR	7327552	ReturnStatement	return 1 ;	1189:6:38265:38273	7327506	1	True				
ANR	7327553	PrimaryExpression	1		7327506	0					
ANR	7327554	ElseStatement	else		7327506	0					
ANR	7327555	CompoundStatement		33:6:1110:1121	7327506	0					
ANR	7327556	IdentifierDeclStatement	int ret = 0 ;	1194:6:38318:38329	7327506	0	True				
ANR	7327557	IdentifierDecl	ret = 0		7327506	0					
ANR	7327558	IdentifierDeclType	int		7327506	0					
ANR	7327559	Identifier	ret		7327506	1					
ANR	7327560	AssignmentExpression	ret = 0		7327506	2		=			
ANR	7327561	Identifier	ret		7327506	0					
ANR	7327562	PrimaryExpression	0		7327506	1					
ANR	7327563	ExpressionStatement	assert ( dp -> write_size > 0U && dp -> write_size < MAX_SIZE )	1201:6:38620:38676	7327506	1	True				
ANR	7327564	CallExpression	assert ( dp -> write_size > 0U && dp -> write_size < MAX_SIZE )		7327506	0					
ANR	7327565	Callee	assert		7327506	0					
ANR	7327566	Identifier	assert		7327506	0					
ANR	7327567	ArgumentList	dp -> write_size > 0U && dp -> write_size < MAX_SIZE		7327506	1					
ANR	7327568	Argument	dp -> write_size > 0U && dp -> write_size < MAX_SIZE		7327506	0					
ANR	7327569	AndExpression	dp -> write_size > 0U && dp -> write_size < MAX_SIZE		7327506	0		&&			
ANR	7327570	RelationalExpression	dp -> write_size > 0U		7327506	0		>			
ANR	7327571	PtrMemberAccess	dp -> write_size		7327506	0					
ANR	7327572	Identifier	dp		7327506	0					
ANR	7327573	Identifier	write_size		7327506	1					
ANR	7327574	PrimaryExpression	0U		7327506	1					
ANR	7327575	RelationalExpression	dp -> write_size < MAX_SIZE		7327506	1		<			
ANR	7327576	PtrMemberAccess	dp -> write_size		7327506	0					
ANR	7327577	Identifier	dp		7327506	0					
ANR	7327578	Identifier	write_size		7327506	1					
ANR	7327579	Identifier	MAX_SIZE		7327506	1					
ANR	7327580	IfStatement	"if ( dp -> stack [ sp ] . best_size > dp -> write_size || ( dp -> stack [ sp ] . best_size == dp -> write_size && compare_option ( dp , sp ) > 0 ) )"		7327506	2					
ANR	7327581	Condition	"dp -> stack [ sp ] . best_size > dp -> write_size || ( dp -> stack [ sp ] . best_size == dp -> write_size && compare_option ( dp , sp ) > 0 )"	1203:10:38689:38826	7327506	0	True				
ANR	7327582	OrExpression	"dp -> stack [ sp ] . best_size > dp -> write_size || ( dp -> stack [ sp ] . best_size == dp -> write_size && compare_option ( dp , sp ) > 0 )"		7327506	0		||			
ANR	7327583	RelationalExpression	dp -> stack [ sp ] . best_size > dp -> write_size		7327506	0		>			
ANR	7327584	MemberAccess	dp -> stack [ sp ] . best_size		7327506	0					
ANR	7327585	ArrayIndexing	dp -> stack [ sp ]		7327506	0					
ANR	7327586	PtrMemberAccess	dp -> stack		7327506	0					
ANR	7327587	Identifier	dp		7327506	0					
ANR	7327588	Identifier	stack		7327506	1					
ANR	7327589	Identifier	sp		7327506	1					
ANR	7327590	Identifier	best_size		7327506	1					
ANR	7327591	PtrMemberAccess	dp -> write_size		7327506	1					
ANR	7327592	Identifier	dp		7327506	0					
ANR	7327593	Identifier	write_size		7327506	1					
ANR	7327594	AndExpression	"dp -> stack [ sp ] . best_size == dp -> write_size && compare_option ( dp , sp ) > 0"		7327506	1		&&			
ANR	7327595	EqualityExpression	dp -> stack [ sp ] . best_size == dp -> write_size		7327506	0		==			
ANR	7327596	MemberAccess	dp -> stack [ sp ] . best_size		7327506	0					
ANR	7327597	ArrayIndexing	dp -> stack [ sp ]		7327506	0					
ANR	7327598	PtrMemberAccess	dp -> stack		7327506	0					
ANR	7327599	Identifier	dp		7327506	0					
ANR	7327600	Identifier	stack		7327506	1					
ANR	7327601	Identifier	sp		7327506	1					
ANR	7327602	Identifier	best_size		7327506	1					
ANR	7327603	PtrMemberAccess	dp -> write_size		7327506	1					
ANR	7327604	Identifier	dp		7327506	0					
ANR	7327605	Identifier	write_size		7327506	1					
ANR	7327606	RelationalExpression	"compare_option ( dp , sp ) > 0"		7327506	1		>			
ANR	7327607	CallExpression	"compare_option ( dp , sp )"		7327506	0					
ANR	7327608	Callee	compare_option		7327506	0					
ANR	7327609	Identifier	compare_option		7327506	0					
ANR	7327610	ArgumentList	dp		7327506	1					
ANR	7327611	Argument	dp		7327506	0					
ANR	7327612	Identifier	dp		7327506	0					
ANR	7327613	Argument	sp		7327506	1					
ANR	7327614	Identifier	sp		7327506	0					
ANR	7327615	PrimaryExpression	0		7327506	1					
ANR	7327616	CompoundStatement		45:6:1627:1627	7327506	1					
ANR	7327617	ExpressionStatement	dp -> stack [ sp ] . best_size = dp -> write_size	1207:9:38846:38886	7327506	0	True				
ANR	7327618	AssignmentExpression	dp -> stack [ sp ] . best_size = dp -> write_size		7327506	0		=			
ANR	7327619	MemberAccess	dp -> stack [ sp ] . best_size		7327506	0					
ANR	7327620	ArrayIndexing	dp -> stack [ sp ]		7327506	0					
ANR	7327621	PtrMemberAccess	dp -> stack		7327506	0					
ANR	7327622	Identifier	dp		7327506	0					
ANR	7327623	Identifier	stack		7327506	1					
ANR	7327624	Identifier	sp		7327506	1					
ANR	7327625	Identifier	best_size		7327506	1					
ANR	7327626	PtrMemberAccess	dp -> write_size		7327506	1					
ANR	7327627	Identifier	dp		7327506	0					
ANR	7327628	Identifier	write_size		7327506	1					
ANR	7327629	ExpressionStatement	dp -> stack [ sp ] . best_val = dp -> value [ opt ]	1208:9:38897:38936	7327506	1	True				
ANR	7327630	AssignmentExpression	dp -> stack [ sp ] . best_val = dp -> value [ opt ]		7327506	0		=			
ANR	7327631	MemberAccess	dp -> stack [ sp ] . best_val		7327506	0					
ANR	7327632	ArrayIndexing	dp -> stack [ sp ]		7327506	0					
ANR	7327633	PtrMemberAccess	dp -> stack		7327506	0					
ANR	7327634	Identifier	dp		7327506	0					
ANR	7327635	Identifier	stack		7327506	1					
ANR	7327636	Identifier	sp		7327506	1					
ANR	7327637	Identifier	best_val		7327506	1					
ANR	7327638	ArrayIndexing	dp -> value [ opt ]		7327506	1					
ANR	7327639	PtrMemberAccess	dp -> value		7327506	0					
ANR	7327640	Identifier	dp		7327506	0					
ANR	7327641	Identifier	value		7327506	1					
ANR	7327642	Identifier	opt		7327506	1					
ANR	7327643	IfStatement	if ( sp + 1U >= dp -> tsp )		7327506	3					
ANR	7327644	Condition	sp + 1U >= dp -> tsp	1211:10:38957:38972	7327506	0	True				
ANR	7327645	RelationalExpression	sp + 1U >= dp -> tsp		7327506	0		>=			
ANR	7327646	AdditiveExpression	sp + 1U		7327506	0		+			
ANR	7327647	Identifier	sp		7327506	0					
ANR	7327648	PrimaryExpression	1U		7327506	1					
ANR	7327649	PtrMemberAccess	dp -> tsp		7327506	1					
ANR	7327650	Identifier	dp		7327506	0					
ANR	7327651	Identifier	tsp		7327506	1					
ANR	7327652	CompoundStatement		51:6:1773:1773	7327506	1					
ANR	7327653	ExpressionStatement	"next_opt ( dp , sp )"	1213:9:38992:39008	7327506	0	True				
ANR	7327654	CallExpression	"next_opt ( dp , sp )"		7327506	0					
ANR	7327655	Callee	next_opt		7327506	0					
ANR	7327656	Identifier	next_opt		7327506	0					
ANR	7327657	ArgumentList	dp		7327506	1					
ANR	7327658	Argument	dp		7327506	0					
ANR	7327659	Identifier	dp		7327506	0					
ANR	7327660	Argument	sp		7327506	1					
ANR	7327661	Identifier	sp		7327506	0					
ANR	7327662	ExpressionStatement	ret = 1	1214:9:39019:39026	7327506	1	True				
ANR	7327663	AssignmentExpression	ret = 1		7327506	0		=			
ANR	7327664	Identifier	ret		7327506	0					
ANR	7327665	PrimaryExpression	1		7327506	1					
ANR	7327666	ElseStatement	else		7327506	0					
ANR	7327667	IfStatement	if ( ! dp -> stack [ sp ] . end )		7327506	0					
ANR	7327668	Condition	! dp -> stack [ sp ] . end	1217:15:39067:39084	7327506	0	True				
ANR	7327669	UnaryOperationExpression	! dp -> stack [ sp ] . end		7327506	0					
ANR	7327670	UnaryOperator	!		7327506	0					
ANR	7327671	MemberAccess	dp -> stack [ sp ] . end		7327506	1					
ANR	7327672	ArrayIndexing	dp -> stack [ sp ]		7327506	0					
ANR	7327673	PtrMemberAccess	dp -> stack		7327506	0					
ANR	7327674	Identifier	dp		7327506	0					
ANR	7327675	Identifier	stack		7327506	1					
ANR	7327676	Identifier	sp		7327506	1					
ANR	7327677	Identifier	end		7327506	1					
ANR	7327678	ExpressionStatement	dp -> nsp = sp + 1U	1218:9:39130:39145	7327506	1	True				
ANR	7327679	AssignmentExpression	dp -> nsp = sp + 1U		7327506	0		=			
ANR	7327680	PtrMemberAccess	dp -> nsp		7327506	0					
ANR	7327681	Identifier	dp		7327506	0					
ANR	7327682	Identifier	nsp		7327506	1					
ANR	7327683	AdditiveExpression	sp + 1U		7327506	1		+			
ANR	7327684	Identifier	sp		7327506	0					
ANR	7327685	PrimaryExpression	1U		7327506	1					
ANR	7327686	ReturnStatement	return ret ;	1220:6:39154:39164	7327506	4	True				
ANR	7327687	Identifier	ret		7327506	0					
ANR	7327688	ReturnType	static int		7327506	1					
ANR	7327689	Identifier	advance_opt		7327506	2					
ANR	7327690	ParameterList	"struct display * dp , png_byte opt , int search"		7327506	3					
ANR	7327691	Parameter	struct display * dp	1161:12:37161:37178	7327506	0	True				
ANR	7327692	ParameterType	struct display *		7327506	0					
ANR	7327693	Identifier	dp		7327506	1					
ANR	7327694	Parameter	png_byte opt	1161:32:37181:37192	7327506	1	True				
ANR	7327695	ParameterType	png_byte		7327506	0					
ANR	7327696	Identifier	opt		7327506	1					
ANR	7327697	Parameter	int search	1161:46:37195:37204	7327506	2	True				
ANR	7327698	ParameterType	int		7327506	0					
ANR	7327699	Identifier	search		7327506	1					
ANR	7327700	CFGEntryNode	ENTRY		7327506		True				
ANR	7327701	CFGExitNode	EXIT		7327506		True				
ANR	7327702	Symbol	ret		7327506						
ANR	7327703	Symbol	* sp		7327506						
ANR	7327704	Symbol	* dp -> stack		7327506						
ANR	7327705	Symbol	MAX_SIZE		7327506						
ANR	7327706	Symbol	compare_option		7327506						
ANR	7327707	Symbol	dp -> stack [ sp ] . best_val		7327506						
ANR	7327708	Symbol	dp		7327506						
ANR	7327709	Symbol	dp -> csp		7327506						
ANR	7327710	Symbol	dp -> stack		7327506						
ANR	7327711	Symbol	dp -> write_size		7327506						
ANR	7327712	Symbol	* dp		7327506						
ANR	7327713	Symbol	opt		7327506						
ANR	7327714	Symbol	search		7327506						
ANR	7327715	Symbol	dp -> value		7327506						
ANR	7327716	Symbol	* dp -> value		7327506						
ANR	7327717	Symbol	dp -> stack [ sp ] . end		7327506						
ANR	7327718	Symbol	dp -> nsp		7327506						
ANR	7327719	Symbol	* * dp		7327506						
ANR	7327720	Symbol	dp -> stack [ sp ] . best_size		7327506						
ANR	7327721	Symbol	dp -> tsp		7327506						
ANR	7327722	Symbol	sp		7327506						
ANR	7327723	Symbol	* opt		7327506						
ANR	7327724	Function	getallopts_	1224:0:39202:40018							
ANR	7327725	FunctionDef	"getallopts_ (struct display * dp , const png_byte opt , int * value , int record)"		7327724	0					
ANR	7327726	CompoundStatement		1228:0:39377:40018	7327724	0					
ANR	7327727	IfStatement	if ( dp -> entry [ opt ] )		7327724	0					
ANR	7327728	Condition	dp -> entry [ opt ]	1229:7:39386:39399	7327724	0	True				
ANR	7327729	ArrayIndexing	dp -> entry [ opt ]		7327724	0					
ANR	7327730	PtrMemberAccess	dp -> entry		7327724	0					
ANR	7327731	Identifier	dp		7327724	0					
ANR	7327732	Identifier	entry		7327724	1					
ANR	7327733	Identifier	opt		7327724	1					
ANR	7327734	CompoundStatement		8:6:307:374	7327724	1					
ANR	7327735	IdentifierDeclStatement	const char * entry_name = options [ opt ] . values [ dp -> entry [ opt ] - 1 ] . name ;	1235:6:39685:39752	7327724	0	True				
ANR	7327736	IdentifierDecl	* entry_name = options [ opt ] . values [ dp -> entry [ opt ] - 1 ] . name		7327724	0					
ANR	7327737	IdentifierDeclType	const char *		7327724	0					
ANR	7327738	Identifier	entry_name		7327724	1					
ANR	7327739	AssignmentExpression	* entry_name = options [ opt ] . values [ dp -> entry [ opt ] - 1 ] . name		7327724	2		=			
ANR	7327740	Identifier	entry_name		7327724	0					
ANR	7327741	MemberAccess	options [ opt ] . values [ dp -> entry [ opt ] - 1 ] . name		7327724	1					
ANR	7327742	ArrayIndexing	options [ opt ] . values [ dp -> entry [ opt ] - 1 ]		7327724	0					
ANR	7327743	MemberAccess	options [ opt ] . values		7327724	0					
ANR	7327744	ArrayIndexing	options [ opt ]		7327724	0					
ANR	7327745	Identifier	options		7327724	0					
ANR	7327746	Identifier	opt		7327724	1					
ANR	7327747	Identifier	values		7327724	1					
ANR	7327748	AdditiveExpression	dp -> entry [ opt ] - 1		7327724	1		-			
ANR	7327749	ArrayIndexing	dp -> entry [ opt ]		7327724	0					
ANR	7327750	PtrMemberAccess	dp -> entry		7327724	0					
ANR	7327751	Identifier	dp		7327724	0					
ANR	7327752	Identifier	entry		7327724	1					
ANR	7327753	Identifier	opt		7327724	1					
ANR	7327754	PrimaryExpression	1		7327724	1					
ANR	7327755	Identifier	name		7327724	1					
ANR	7327756	IfStatement	if ( entry_name == all )		7327724	1					
ANR	7327757	Condition	entry_name == all	1237:10:39765:39781	7327724	0	True				
ANR	7327758	EqualityExpression	entry_name == all		7327724	0		==			
ANR	7327759	Identifier	entry_name		7327724	0					
ANR	7327760	Identifier	all		7327724	1					
ANR	7327761	ExpressionStatement	"( void ) advance_opt ( dp , opt , 0 )"	1238:9:39793:39848	7327724	1	True				
ANR	7327762	CastExpression	"( void ) advance_opt ( dp , opt , 0 )"		7327724	0					
ANR	7327763	CastTarget	void		7327724	0					
ANR	7327764	CallExpression	"advance_opt ( dp , opt , 0 )"		7327724	1					
ANR	7327765	Callee	advance_opt		7327724	0					
ANR	7327766	Identifier	advance_opt		7327724	0					
ANR	7327767	ArgumentList	dp		7327724	1					
ANR	7327768	Argument	dp		7327724	0					
ANR	7327769	Identifier	dp		7327724	0					
ANR	7327770	Argument	opt		7327724	1					
ANR	7327771	Identifier	opt		7327724	0					
ANR	7327772	Argument	0		7327724	2					
ANR	7327773	PrimaryExpression	0		7327724	0					
ANR	7327774	ElseStatement	else		7327724	0					
ANR	7327775	IfStatement	if ( record )		7327724	0					
ANR	7327776	Condition	record	1240:15:39866:39871	7327724	0	True				
ANR	7327777	Identifier	record		7327724	0					
ANR	7327778	ExpressionStatement	"record_opt ( dp , opt , entry_name )"	1241:9:39883:39914	7327724	1	True				
ANR	7327779	CallExpression	"record_opt ( dp , opt , entry_name )"		7327724	0					
ANR	7327780	Callee	record_opt		7327724	0					
ANR	7327781	Identifier	record_opt		7327724	0					
ANR	7327782	ArgumentList	dp		7327724	1					
ANR	7327783	Argument	dp		7327724	0					
ANR	7327784	Identifier	dp		7327724	0					
ANR	7327785	Argument	opt		7327724	1					
ANR	7327786	Identifier	opt		7327724	0					
ANR	7327787	Argument	entry_name		7327724	2					
ANR	7327788	Identifier	entry_name		7327724	0					
ANR	7327789	ExpressionStatement	* value = dp -> value [ opt ]	1243:6:39923:39946	7327724	2	True				
ANR	7327790	AssignmentExpression	* value = dp -> value [ opt ]		7327724	0		=			
ANR	7327791	UnaryOperationExpression	* value		7327724	0					
ANR	7327792	UnaryOperator	*		7327724	0					
ANR	7327793	Identifier	value		7327724	1					
ANR	7327794	ArrayIndexing	dp -> value [ opt ]		7327724	1					
ANR	7327795	PtrMemberAccess	dp -> value		7327724	0					
ANR	7327796	Identifier	dp		7327724	0					
ANR	7327797	Identifier	value		7327724	1					
ANR	7327798	Identifier	opt		7327724	1					
ANR	7327799	ReturnStatement	return 1 ;	1244:6:39954:39962	7327724	3	True				
ANR	7327800	PrimaryExpression	1		7327724	0					
ANR	7327801	ElseStatement	else		7327724	0					
ANR	7327802	ReturnStatement	return 0 ;	1248:6:39994:40002	7327724	0	True				
ANR	7327803	PrimaryExpression	0		7327724	0					
ANR	7327804	ReturnType	static int		7327724	1					
ANR	7327805	Identifier	getallopts_		7327724	2					
ANR	7327806	ParameterList	"struct display * dp , const png_byte opt , int * value , int record"		7327724	3					
ANR	7327807	Parameter	struct display * dp	1225:12:39225:39242	7327724	0	True				
ANR	7327808	ParameterType	struct display *		7327724	0					
ANR	7327809	Identifier	dp		7327724	1					
ANR	7327810	Parameter	const png_byte opt	1225:32:39245:39262	7327724	1	True				
ANR	7327811	ParameterType	const png_byte		7327724	0					
ANR	7327812	Identifier	opt		7327724	1					
ANR	7327813	Parameter	int * value	1225:52:39265:39274	7327724	2	True				
ANR	7327814	ParameterType	int *		7327724	0					
ANR	7327815	Identifier	value		7327724	1					
ANR	7327816	Parameter	int record	1225:64:39277:39286	7327724	3	True				
ANR	7327817	ParameterType	int		7327724	0					
ANR	7327818	Identifier	record		7327724	1					
ANR	7327819	CFGEntryNode	ENTRY		7327724		True				
ANR	7327820	CFGExitNode	EXIT		7327724		True				
ANR	7327821	Symbol	entry_name		7327724						
ANR	7327822	Symbol	all		7327724						
ANR	7327823	Symbol	* options [ opt ] . values		7327724						
ANR	7327824	Symbol	* * opt		7327724						
ANR	7327825	Symbol	* * options		7327724						
ANR	7327826	Symbol	dp		7327724						
ANR	7327827	Symbol	dp -> entry		7327724						
ANR	7327828	Symbol	* * dp -> entry		7327724						
ANR	7327829	Symbol	* options		7327724						
ANR	7327830	Symbol	* dp -> entry		7327724						
ANR	7327831	Symbol	* dp		7327724						
ANR	7327832	Symbol	opt		7327724						
ANR	7327833	Symbol	dp -> value		7327724						
ANR	7327834	Symbol	* * * dp		7327724						
ANR	7327835	Symbol	options [ opt ] . values [ dp -> entry [ opt ] - 1 ] . name		7327724						
ANR	7327836	Symbol	* value		7327724						
ANR	7327837	Symbol	record		7327724						
ANR	7327838	Symbol	* dp -> value		7327724						
ANR	7327839	Symbol	options		7327724						
ANR	7327840	Symbol	* * dp		7327724						
ANR	7327841	Symbol	value		7327724						
ANR	7327842	Symbol	* opt		7327724						
ANR	7327843	Symbol	options [ opt ] . values		7327724						
ANR	7327844	Function	getallopts	1251:0:40021:40179							
ANR	7327845	FunctionDef	"getallopts (struct display * dp , const char * opt_str , int * value)"		7327844	0					
ANR	7327846	CompoundStatement		1253:0:40096:40179	7327844	0					
ANR	7327847	ReturnStatement	"return getallopts_ ( dp , option_index ( dp , opt_str , strlen ( opt_str ) ) , value , 0 ) ;"	1254:3:40101:40177	7327844	0	True				
ANR	7327848	CallExpression	"getallopts_ ( dp , option_index ( dp , opt_str , strlen ( opt_str ) ) , value , 0 )"		7327844	0					
ANR	7327849	Callee	getallopts_		7327844	0					
ANR	7327850	Identifier	getallopts_		7327844	0					
ANR	7327851	ArgumentList	dp		7327844	1					
ANR	7327852	Argument	dp		7327844	0					
ANR	7327853	Identifier	dp		7327844	0					
ANR	7327854	Argument	"option_index ( dp , opt_str , strlen ( opt_str ) )"		7327844	1					
ANR	7327855	CallExpression	"option_index ( dp , opt_str , strlen ( opt_str ) )"		7327844	0					
ANR	7327856	Callee	option_index		7327844	0					
ANR	7327857	Identifier	option_index		7327844	0					
ANR	7327858	ArgumentList	dp		7327844	1					
ANR	7327859	Argument	dp		7327844	0					
ANR	7327860	Identifier	dp		7327844	0					
ANR	7327861	Argument	opt_str		7327844	1					
ANR	7327862	Identifier	opt_str		7327844	0					
ANR	7327863	Argument	strlen ( opt_str )		7327844	2					
ANR	7327864	CallExpression	strlen ( opt_str )		7327844	0					
ANR	7327865	Callee	strlen		7327844	0					
ANR	7327866	Identifier	strlen		7327844	0					
ANR	7327867	ArgumentList	opt_str		7327844	1					
ANR	7327868	Argument	opt_str		7327844	0					
ANR	7327869	Identifier	opt_str		7327844	0					
ANR	7327870	Argument	value		7327844	2					
ANR	7327871	Identifier	value		7327844	0					
ANR	7327872	Argument	0		7327844	3					
ANR	7327873	PrimaryExpression	0		7327844	0					
ANR	7327874	ReturnType	static int		7327844	1					
ANR	7327875	Identifier	getallopts		7327844	2					
ANR	7327876	ParameterList	"struct display * dp , const char * opt_str , int * value"		7327844	3					
ANR	7327877	Parameter	struct display * dp	1252:11:40043:40060	7327844	0	True				
ANR	7327878	ParameterType	struct display *		7327844	0					
ANR	7327879	Identifier	dp		7327844	1					
ANR	7327880	Parameter	const char * opt_str	1252:31:40063:40081	7327844	1	True				
ANR	7327881	ParameterType	const char *		7327844	0					
ANR	7327882	Identifier	opt_str		7327844	1					
ANR	7327883	Parameter	int * value	1252:52:40084:40093	7327844	2	True				
ANR	7327884	ParameterType	int *		7327844	0					
ANR	7327885	Identifier	value		7327844	1					
ANR	7327886	CFGEntryNode	ENTRY		7327844		True				
ANR	7327887	CFGExitNode	EXIT		7327844		True				
ANR	7327888	Symbol	strlen		7327844						
ANR	7327889	Symbol	opt_str		7327844						
ANR	7327890	Symbol	getallopts_		7327844						
ANR	7327891	Symbol	dp		7327844						
ANR	7327892	Symbol	value		7327844						
ANR	7327893	Symbol	option_index		7327844						
ANR	7327894	Function	getsearchopts	1257:0:40182:42318							
ANR	7327895	FunctionDef	"getsearchopts (struct display * dp , const char * opt_str , int * value)"		7327894	0					
ANR	7327896	CompoundStatement		1260:0:40329:42318	7327894	0					
ANR	7327897	IdentifierDeclStatement	png_byte istrat ;	1261:3:40334:40349	7327894	0	True				
ANR	7327898	IdentifierDecl	istrat		7327894	0					
ANR	7327899	IdentifierDeclType	png_byte		7327894	0					
ANR	7327900	Identifier	istrat		7327894	1					
ANR	7327901	IdentifierDeclStatement	"const png_byte opt = option_index ( dp , opt_str , strlen ( opt_str ) ) ;"	1262:3:40354:40417	7327894	1	True				
ANR	7327902	IdentifierDecl	"opt = option_index ( dp , opt_str , strlen ( opt_str ) )"		7327894	0					
ANR	7327903	IdentifierDeclType	const png_byte		7327894	0					
ANR	7327904	Identifier	opt		7327894	1					
ANR	7327905	AssignmentExpression	"opt = option_index ( dp , opt_str , strlen ( opt_str ) )"		7327894	2		=			
ANR	7327906	Identifier	opt		7327894	0					
ANR	7327907	CallExpression	"option_index ( dp , opt_str , strlen ( opt_str ) )"		7327894	1					
ANR	7327908	Callee	option_index		7327894	0					
ANR	7327909	Identifier	option_index		7327894	0					
ANR	7327910	ArgumentList	dp		7327894	1					
ANR	7327911	Argument	dp		7327894	0					
ANR	7327912	Identifier	dp		7327894	0					
ANR	7327913	Argument	opt_str		7327894	1					
ANR	7327914	Identifier	opt_str		7327894	0					
ANR	7327915	Argument	strlen ( opt_str )		7327894	2					
ANR	7327916	CallExpression	strlen ( opt_str )		7327894	0					
ANR	7327917	Callee	strlen		7327894	0					
ANR	7327918	Identifier	strlen		7327894	0					
ANR	7327919	ArgumentList	opt_str		7327894	1					
ANR	7327920	Argument	opt_str		7327894	0					
ANR	7327921	Identifier	opt_str		7327894	0					
ANR	7327922	IdentifierDeclStatement	int record = options [ opt ] . search ;	1263:3:40422:40454	7327894	2	True				
ANR	7327923	IdentifierDecl	record = options [ opt ] . search		7327894	0					
ANR	7327924	IdentifierDeclType	int		7327894	0					
ANR	7327925	Identifier	record		7327894	1					
ANR	7327926	AssignmentExpression	record = options [ opt ] . search		7327894	2		=			
ANR	7327927	Identifier	record		7327894	0					
ANR	7327928	MemberAccess	options [ opt ] . search		7327894	1					
ANR	7327929	ArrayIndexing	options [ opt ]		7327894	0					
ANR	7327930	Identifier	options		7327894	0					
ANR	7327931	Identifier	opt		7327894	1					
ANR	7327932	Identifier	search		7327894	1					
ANR	7327933	IdentifierDeclStatement	const char * entry_name ;	1264:3:40459:40481	7327894	3	True				
ANR	7327934	IdentifierDecl	* entry_name		7327894	0					
ANR	7327935	IdentifierDeclType	const char *		7327894	0					
ANR	7327936	Identifier	entry_name		7327894	1					
ANR	7327937	IfStatement	"if ( getallopts_ ( dp , opt , value , record ) )"		7327894	4					
ANR	7327938	Condition	"getallopts_ ( dp , opt , value , record )"	1269:7:40621:40655	7327894	0	True				
ANR	7327939	CallExpression	"getallopts_ ( dp , opt , value , record )"		7327894	0					
ANR	7327940	Callee	getallopts_		7327894	0					
ANR	7327941	Identifier	getallopts_		7327894	0					
ANR	7327942	ArgumentList	dp		7327894	1					
ANR	7327943	Argument	dp		7327894	0					
ANR	7327944	Identifier	dp		7327894	0					
ANR	7327945	Argument	opt		7327894	1					
ANR	7327946	Identifier	opt		7327894	0					
ANR	7327947	Argument	value		7327894	2					
ANR	7327948	Identifier	value		7327894	0					
ANR	7327949	Argument	record		7327894	3					
ANR	7327950	Identifier	record		7327894	0					
ANR	7327951	ReturnStatement	return 1 ;	1270:6:40664:40672	7327894	1	True				
ANR	7327952	PrimaryExpression	1		7327894	0					
ANR	7327953	ElseStatement	else		7327894	0					
ANR	7327954	IfStatement	if ( ! record )		7327894	0					
ANR	7327955	Condition	! record	1272:12:40687:40693	7327894	0	True				
ANR	7327956	UnaryOperationExpression	! record		7327894	0					
ANR	7327957	UnaryOperator	!		7327894	0					
ANR	7327958	Identifier	record		7327894	1					
ANR	7327959	ReturnStatement	return 0 ;	1273:6:40728:40736	7327894	1	True				
ANR	7327960	PrimaryExpression	0		7327894	0					
ANR	7327961	ElseStatement	else		7327894	0					
ANR	7327962	IfStatement	"if ( opt == OPTIND ( dp , memLevel ) )"		7327894	0					
ANR	7327963	Condition	"opt == OPTIND ( dp , memLevel )"	1309:12:41948:41974	7327894	0	True				
ANR	7327964	EqualityExpression	"opt == OPTIND ( dp , memLevel )"		7327894	0		==			
ANR	7327965	Identifier	opt		7327894	0					
ANR	7327966	CallExpression	"OPTIND ( dp , memLevel )"		7327894	1					
ANR	7327967	Callee	OPTIND		7327894	0					
ANR	7327968	Identifier	OPTIND		7327894	0					
ANR	7327969	ArgumentList	dp		7327894	1					
ANR	7327970	Argument	dp		7327894	0					
ANR	7327971	Identifier	dp		7327894	0					
ANR	7327972	Argument	memLevel		7327894	1					
ANR	7327973	Identifier	memLevel		7327894	0					
ANR	7327974	CompoundStatement		51:3:1650:1650	7327894	1					
ANR	7327975	Statement	if	1311:6:41988:41989	7327894	0	True				
ANR	7327976	Statement	0	1311:9:41991:41991	7327894	1	True				
ANR	7327977	ExpressionStatement	"( void ) advance_opt ( dp , opt , 0 ) , record = 0"	1312:9:42002:42048	7327894	2	True				
ANR	7327978	Expression	"( void ) advance_opt ( dp , opt , 0 ) , record = 0"		7327894	0					
ANR	7327979	CastExpression	"( void ) advance_opt ( dp , opt , 0 )"		7327894	0					
ANR	7327980	CastTarget	void		7327894	0					
ANR	7327981	CallExpression	"advance_opt ( dp , opt , 0 )"		7327894	1					
ANR	7327982	Callee	advance_opt		7327894	0					
ANR	7327983	Identifier	advance_opt		7327894	0					
ANR	7327984	ArgumentList	dp		7327894	1					
ANR	7327985	Argument	dp		7327894	0					
ANR	7327986	Identifier	dp		7327894	0					
ANR	7327987	Argument	opt		7327894	1					
ANR	7327988	Identifier	opt		7327894	0					
ANR	7327989	Argument	0		7327894	2					
ANR	7327990	PrimaryExpression	0		7327894	0					
ANR	7327991	AssignmentExpression	record = 0		7327894	1		=			
ANR	7327992	Identifier	record		7327894	0					
ANR	7327993	PrimaryExpression	0		7327894	1					
ANR	7327994	Statement	endif	1315:6:42108:42112	7327894	3	True				
ANR	7327995	ElseStatement	else		7327894	0					
ANR	7327996	ExpressionStatement	dp -> value [ opt ] = MAX_MEM_LEVEL	1314:9:42070:42100	7327894	0	True				
ANR	7327997	AssignmentExpression	dp -> value [ opt ] = MAX_MEM_LEVEL		7327894	0		=			
ANR	7327998	ArrayIndexing	dp -> value [ opt ]		7327894	0					
ANR	7327999	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328000	Identifier	dp		7327894	0					
ANR	7328001	Identifier	value		7327894	1					
ANR	7328002	Identifier	opt		7327894	1					
ANR	7328003	Identifier	MAX_MEM_LEVEL		7327894	1					
ANR	7328004	ExpressionStatement	"istrat = OPTIND ( dp , strategy )"	1276:3:40814:40843	7327894	5	True				
ANR	7328005	AssignmentExpression	"istrat = OPTIND ( dp , strategy )"		7327894	0		=			
ANR	7328006	Identifier	istrat		7327894	0					
ANR	7328007	CallExpression	"OPTIND ( dp , strategy )"		7327894	1					
ANR	7328008	Callee	OPTIND		7327894	0					
ANR	7328009	Identifier	OPTIND		7327894	0					
ANR	7328010	ArgumentList	dp		7327894	1					
ANR	7328011	Argument	dp		7327894	0					
ANR	7328012	Identifier	dp		7327894	0					
ANR	7328013	Argument	strategy		7327894	1					
ANR	7328014	Identifier	strategy		7327894	0					
ANR	7328015	ExpressionStatement	entry_name = range_lo	1277:3:40848:40869	7327894	6	True				
ANR	7328016	AssignmentExpression	entry_name = range_lo		7327894	0		=			
ANR	7328017	Identifier	entry_name		7327894	0					
ANR	7328018	Identifier	range_lo		7327894	1					
ANR	7328019	IfStatement	if ( opt == istrat )		7327894	7					
ANR	7328020	Condition	opt == istrat	1279:7:40916:40928	7327894	0	True				
ANR	7328021	EqualityExpression	opt == istrat		7327894	0		==			
ANR	7328022	Identifier	opt		7327894	0					
ANR	7328023	Identifier	istrat		7327894	1					
ANR	7328024	ExpressionStatement	"( void ) advance_opt ( dp , opt , 0 ) , record = 0"	1280:6:40965:41015	7327894	1	True				
ANR	7328025	Expression	"( void ) advance_opt ( dp , opt , 0 ) , record = 0"		7327894	0					
ANR	7328026	CastExpression	"( void ) advance_opt ( dp , opt , 0 )"		7327894	0					
ANR	7328027	CastTarget	void		7327894	0					
ANR	7328028	CallExpression	"advance_opt ( dp , opt , 0 )"		7327894	1					
ANR	7328029	Callee	advance_opt		7327894	0					
ANR	7328030	Identifier	advance_opt		7327894	0					
ANR	7328031	ArgumentList	dp		7327894	1					
ANR	7328032	Argument	dp		7327894	0					
ANR	7328033	Identifier	dp		7327894	0					
ANR	7328034	Argument	opt		7327894	1					
ANR	7328035	Identifier	opt		7327894	0					
ANR	7328036	Argument	0		7327894	2					
ANR	7328037	PrimaryExpression	0		7327894	0					
ANR	7328038	AssignmentExpression	record = 0		7327894	1		=			
ANR	7328039	Identifier	record		7327894	0					
ANR	7328040	PrimaryExpression	0		7327894	1					
ANR	7328041	ElseStatement	else		7327894	0					
ANR	7328042	IfStatement	"if ( opt == OPTIND ( dp , level ) )"		7327894	0					
ANR	7328043	Condition	"opt == OPTIND ( dp , level )"	1282:12:41030:41053	7327894	0	True				
ANR	7328044	EqualityExpression	"opt == OPTIND ( dp , level )"		7327894	0		==			
ANR	7328045	Identifier	opt		7327894	0					
ANR	7328046	CallExpression	"OPTIND ( dp , level )"		7327894	1					
ANR	7328047	Callee	OPTIND		7327894	0					
ANR	7328048	Identifier	OPTIND		7327894	0					
ANR	7328049	ArgumentList	dp		7327894	1					
ANR	7328050	Argument	dp		7327894	0					
ANR	7328051	Identifier	dp		7327894	0					
ANR	7328052	Argument	level		7327894	1					
ANR	7328053	Identifier	level		7327894	0					
ANR	7328054	CompoundStatement		24:3:729:729	7327894	1					
ANR	7328055	IfStatement	if ( dp -> value [ istrat ] == Z_RLE || dp -> value [ istrat ] == Z_HUFFMAN_ONLY )		7327894	0					
ANR	7328056	Condition	dp -> value [ istrat ] == Z_RLE || dp -> value [ istrat ] == Z_HUFFMAN_ONLY	1285:10:41139:41203	7327894	0	True				
ANR	7328057	OrExpression	dp -> value [ istrat ] == Z_RLE || dp -> value [ istrat ] == Z_HUFFMAN_ONLY		7327894	0		||			
ANR	7328058	EqualityExpression	dp -> value [ istrat ] == Z_RLE		7327894	0		==			
ANR	7328059	ArrayIndexing	dp -> value [ istrat ]		7327894	0					
ANR	7328060	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328061	Identifier	dp		7327894	0					
ANR	7328062	Identifier	value		7327894	1					
ANR	7328063	Identifier	istrat		7327894	1					
ANR	7328064	Identifier	Z_RLE		7327894	1					
ANR	7328065	EqualityExpression	dp -> value [ istrat ] == Z_HUFFMAN_ONLY		7327894	1		==			
ANR	7328066	ArrayIndexing	dp -> value [ istrat ]		7327894	0					
ANR	7328067	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328068	Identifier	dp		7327894	0					
ANR	7328069	Identifier	value		7327894	1					
ANR	7328070	Identifier	istrat		7327894	1					
ANR	7328071	Identifier	Z_HUFFMAN_ONLY		7327894	1					
ANR	7328072	ExpressionStatement	dp -> value [ opt ] = 1	1286:9:41215:41233	7327894	1	True				
ANR	7328073	AssignmentExpression	dp -> value [ opt ] = 1		7327894	0		=			
ANR	7328074	ArrayIndexing	dp -> value [ opt ]		7327894	0					
ANR	7328075	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328076	Identifier	dp		7327894	0					
ANR	7328077	Identifier	value		7327894	1					
ANR	7328078	Identifier	opt		7327894	1					
ANR	7328079	PrimaryExpression	1		7327894	1					
ANR	7328080	ElseStatement	else		7327894	0					
ANR	7328081	ExpressionStatement	"( void ) advance_opt ( dp , opt , 1 ) , record = 0"	1289:9:41289:41338	7327894	0	True				
ANR	7328082	Expression	"( void ) advance_opt ( dp , opt , 1 ) , record = 0"		7327894	0					
ANR	7328083	CastExpression	"( void ) advance_opt ( dp , opt , 1 )"		7327894	0					
ANR	7328084	CastTarget	void		7327894	0					
ANR	7328085	CallExpression	"advance_opt ( dp , opt , 1 )"		7327894	1					
ANR	7328086	Callee	advance_opt		7327894	0					
ANR	7328087	Identifier	advance_opt		7327894	0					
ANR	7328088	ArgumentList	dp		7327894	1					
ANR	7328089	Argument	dp		7327894	0					
ANR	7328090	Identifier	dp		7327894	0					
ANR	7328091	Argument	opt		7327894	1					
ANR	7328092	Identifier	opt		7327894	0					
ANR	7328093	Argument	1		7327894	2					
ANR	7328094	PrimaryExpression	1		7327894	0					
ANR	7328095	AssignmentExpression	record = 0		7327894	1		=			
ANR	7328096	Identifier	record		7327894	0					
ANR	7328097	PrimaryExpression	0		7327894	1					
ANR	7328098	ElseStatement	else		7327894	0					
ANR	7328099	IfStatement	"if ( opt == OPTIND ( dp , windowBits ) )"		7327894	0					
ANR	7328100	Condition	"opt == OPTIND ( dp , windowBits )"	1292:12:41358:41386	7327894	0	True				
ANR	7328101	EqualityExpression	"opt == OPTIND ( dp , windowBits )"		7327894	0		==			
ANR	7328102	Identifier	opt		7327894	0					
ANR	7328103	CallExpression	"OPTIND ( dp , windowBits )"		7327894	1					
ANR	7328104	Callee	OPTIND		7327894	0					
ANR	7328105	Identifier	OPTIND		7327894	0					
ANR	7328106	ArgumentList	dp		7327894	1					
ANR	7328107	Argument	dp		7327894	0					
ANR	7328108	Identifier	dp		7327894	0					
ANR	7328109	Argument	windowBits		7327894	1					
ANR	7328110	Identifier	windowBits		7327894	0					
ANR	7328111	CompoundStatement		34:3:1062:1062	7327894	1					
ANR	7328112	IfStatement	if ( dp -> value [ istrat ] == Z_HUFFMAN_ONLY )		7327894	0					
ANR	7328113	Condition	dp -> value [ istrat ] == Z_HUFFMAN_ONLY	1299:10:41686:41720	7327894	0	True				
ANR	7328114	EqualityExpression	dp -> value [ istrat ] == Z_HUFFMAN_ONLY		7327894	0		==			
ANR	7328115	ArrayIndexing	dp -> value [ istrat ]		7327894	0					
ANR	7328116	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328117	Identifier	dp		7327894	0					
ANR	7328118	Identifier	value		7327894	1					
ANR	7328119	Identifier	istrat		7327894	1					
ANR	7328120	Identifier	Z_HUFFMAN_ONLY		7327894	1					
ANR	7328121	ExpressionStatement	dp -> value [ opt ] = 8	1300:9:41732:41750	7327894	1	True				
ANR	7328122	AssignmentExpression	dp -> value [ opt ] = 8		7327894	0		=			
ANR	7328123	ArrayIndexing	dp -> value [ opt ]		7327894	0					
ANR	7328124	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328125	Identifier	dp		7327894	0					
ANR	7328126	Identifier	value		7327894	1					
ANR	7328127	Identifier	opt		7327894	1					
ANR	7328128	PrimaryExpression	8		7327894	1					
ANR	7328129	ElseStatement	else		7327894	0					
ANR	7328130	IfStatement	if ( dp -> value [ istrat ] == Z_RLE )		7327894	0					
ANR	7328131	Condition	dp -> value [ istrat ] == Z_RLE	1302:15:41768:41793	7327894	0	True				
ANR	7328132	EqualityExpression	dp -> value [ istrat ] == Z_RLE		7327894	0		==			
ANR	7328133	ArrayIndexing	dp -> value [ istrat ]		7327894	0					
ANR	7328134	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328135	Identifier	dp		7327894	0					
ANR	7328136	Identifier	value		7327894	1					
ANR	7328137	Identifier	istrat		7327894	1					
ANR	7328138	Identifier	Z_RLE		7327894	1					
ANR	7328139	ExpressionStatement	dp -> value [ opt ] = 9	1303:9:41805:41823	7327894	1	True				
ANR	7328140	AssignmentExpression	dp -> value [ opt ] = 9		7327894	0		=			
ANR	7328141	ArrayIndexing	dp -> value [ opt ]		7327894	0					
ANR	7328142	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328143	Identifier	dp		7327894	0					
ANR	7328144	Identifier	value		7327894	1					
ANR	7328145	Identifier	opt		7327894	1					
ANR	7328146	PrimaryExpression	9		7327894	1					
ANR	7328147	ElseStatement	else		7327894	0					
ANR	7328148	ExpressionStatement	"( void ) advance_opt ( dp , opt , 1 ) , record = 0"	1306:9:41879:41928	7327894	0	True				
ANR	7328149	Expression	"( void ) advance_opt ( dp , opt , 1 ) , record = 0"		7327894	0					
ANR	7328150	CastExpression	"( void ) advance_opt ( dp , opt , 1 )"		7327894	0					
ANR	7328151	CastTarget	void		7327894	0					
ANR	7328152	CallExpression	"advance_opt ( dp , opt , 1 )"		7327894	1					
ANR	7328153	Callee	advance_opt		7327894	0					
ANR	7328154	Identifier	advance_opt		7327894	0					
ANR	7328155	ArgumentList	dp		7327894	1					
ANR	7328156	Argument	dp		7327894	0					
ANR	7328157	Identifier	dp		7327894	0					
ANR	7328158	Argument	opt		7327894	1					
ANR	7328159	Identifier	opt		7327894	0					
ANR	7328160	Argument	1		7327894	2					
ANR	7328161	PrimaryExpression	1		7327894	0					
ANR	7328162	AssignmentExpression	record = 0		7327894	1		=			
ANR	7328163	Identifier	record		7327894	0					
ANR	7328164	PrimaryExpression	0		7327894	1					
ANR	7328165	ElseStatement	else		7327894	0					
ANR	7328166	ExpressionStatement	"assert ( 0 == ""reached"" )"	1319:6:42155:42175	7327894	0	True				
ANR	7328167	CallExpression	"assert ( 0 == ""reached"" )"		7327894	0					
ANR	7328168	Callee	assert		7327894	0					
ANR	7328169	Identifier	assert		7327894	0					
ANR	7328170	ArgumentList	"0 == ""reached"""		7327894	1					
ANR	7328171	Argument	"0 == ""reached"""		7327894	0					
ANR	7328172	EqualityExpression	"0 == ""reached"""		7327894	0		==			
ANR	7328173	PrimaryExpression	0		7327894	0					
ANR	7328174	PrimaryExpression	"""reached"""		7327894	1					
ANR	7328175	IfStatement	if ( record )		7327894	8					
ANR	7328176	Condition	record	1321:7:42185:42190	7327894	0	True				
ANR	7328177	Identifier	record		7327894	0					
ANR	7328178	ExpressionStatement	"record_opt ( dp , opt , entry_name )"	1322:6:42199:42230	7327894	1	True				
ANR	7328179	CallExpression	"record_opt ( dp , opt , entry_name )"		7327894	0					
ANR	7328180	Callee	record_opt		7327894	0					
ANR	7328181	Identifier	record_opt		7327894	0					
ANR	7328182	ArgumentList	dp		7327894	1					
ANR	7328183	Argument	dp		7327894	0					
ANR	7328184	Identifier	dp		7327894	0					
ANR	7328185	Argument	opt		7327894	1					
ANR	7328186	Identifier	opt		7327894	0					
ANR	7328187	Argument	entry_name		7327894	2					
ANR	7328188	Identifier	entry_name		7327894	0					
ANR	7328189	ExpressionStatement	* value = dp -> value [ opt ]	1325:3:42280:42303	7327894	9	True				
ANR	7328190	AssignmentExpression	* value = dp -> value [ opt ]		7327894	0		=			
ANR	7328191	UnaryOperationExpression	* value		7327894	0					
ANR	7328192	UnaryOperator	*		7327894	0					
ANR	7328193	Identifier	value		7327894	1					
ANR	7328194	ArrayIndexing	dp -> value [ opt ]		7327894	1					
ANR	7328195	PtrMemberAccess	dp -> value		7327894	0					
ANR	7328196	Identifier	dp		7327894	0					
ANR	7328197	Identifier	value		7327894	1					
ANR	7328198	Identifier	opt		7327894	1					
ANR	7328199	ReturnStatement	return 1 ;	1326:3:42308:42316	7327894	10	True				
ANR	7328200	PrimaryExpression	1		7327894	0					
ANR	7328201	ReturnType	static int		7327894	1					
ANR	7328202	Identifier	getsearchopts		7327894	2					
ANR	7328203	ParameterList	"struct display * dp , const char * opt_str , int * value"		7327894	3					
ANR	7328204	Parameter	struct display * dp	1258:14:40207:40224	7327894	0	True				
ANR	7328205	ParameterType	struct display *		7327894	0					
ANR	7328206	Identifier	dp		7327894	1					
ANR	7328207	Parameter	const char * opt_str	1258:34:40227:40245	7327894	1	True				
ANR	7328208	ParameterType	const char *		7327894	0					
ANR	7328209	Identifier	opt_str		7327894	1					
ANR	7328210	Parameter	int * value	1258:55:40248:40257	7327894	2	True				
ANR	7328211	ParameterType	int *		7327894	0					
ANR	7328212	Identifier	value		7327894	1					
ANR	7328213	CFGEntryNode	ENTRY		7327894		True				
ANR	7328214	CFGExitNode	EXIT		7327894		True				
ANR	7328215	Symbol	Z_RLE		7327894						
ANR	7328216	Symbol	MAX_MEM_LEVEL		7327894						
ANR	7328217	Symbol	dp		7327894						
ANR	7328218	Symbol	* options		7327894						
ANR	7328219	Symbol	strlen		7327894						
ANR	7328220	Symbol	OPTIND		7327894						
ANR	7328221	Symbol	* dp		7327894						
ANR	7328222	Symbol	Z_HUFFMAN_ONLY		7327894						
ANR	7328223	Symbol	record		7327894						
ANR	7328224	Symbol	range_lo		7327894						
ANR	7328225	Symbol	options		7327894						
ANR	7328226	Symbol	options [ opt ] . search		7327894						
ANR	7328227	Symbol	getallopts_		7327894						
ANR	7328228	Symbol	value		7327894						
ANR	7328229	Symbol	option_index		7327894						
ANR	7328230	Symbol	* opt		7327894						
ANR	7328231	Symbol	entry_name		7327894						
ANR	7328232	Symbol	* istrat		7327894						
ANR	7328233	Symbol	level		7327894						
ANR	7328234	Symbol	opt_str		7327894						
ANR	7328235	Symbol	istrat		7327894						
ANR	7328236	Symbol	windowBits		7327894						
ANR	7328237	Symbol	opt		7327894						
ANR	7328238	Symbol	dp -> value		7327894						
ANR	7328239	Symbol	* value		7327894						
ANR	7328240	Symbol	* dp -> value		7327894						
ANR	7328241	Symbol	* * dp		7327894						
ANR	7328242	Symbol	memLevel		7327894						
ANR	7328243	Symbol	strategy		7327894						
ANR	7328244	Function	find_val	1329:0:42321:43628							
ANR	7328245	FunctionDef	"find_val (struct display * dp , png_byte opt , const char * str , size_t len)"		7328244	0					
ANR	7328246	CompoundStatement		1335:0:42581:43628	7328244	0					
ANR	7328247	IdentifierDeclStatement	"int rlo = INT_MAX , rhi = INT_MIN ;"	1336:3:42586:42618	7328244	0	True				
ANR	7328248	IdentifierDecl	rlo = INT_MAX		7328244	0					
ANR	7328249	IdentifierDeclType	int		7328244	0					
ANR	7328250	Identifier	rlo		7328244	1					
ANR	7328251	AssignmentExpression	rlo = INT_MAX		7328244	2		=			
ANR	7328252	Identifier	INT_MAX		7328244	0					
ANR	7328253	Identifier	INT_MAX		7328244	1					
ANR	7328254	IdentifierDecl	rhi = INT_MIN		7328244	1					
ANR	7328255	IdentifierDeclType	int		7328244	0					
ANR	7328256	Identifier	rhi		7328244	1					
ANR	7328257	AssignmentExpression	rhi = INT_MIN		7328244	2		=			
ANR	7328258	Identifier	INT_MIN		7328244	0					
ANR	7328259	Identifier	INT_MIN		7328244	1					
ANR	7328260	IdentifierDeclStatement	"png_byte j , irange = 0 ;"	1337:3:42623:42645	7328244	1	True				
ANR	7328261	IdentifierDecl	j		7328244	0					
ANR	7328262	IdentifierDeclType	png_byte		7328244	0					
ANR	7328263	Identifier	j		7328244	1					
ANR	7328264	IdentifierDecl	irange = 0		7328244	1					
ANR	7328265	IdentifierDeclType	png_byte		7328244	0					
ANR	7328266	Identifier	irange		7328244	1					
ANR	7328267	AssignmentExpression	irange = 0		7328244	2		=			
ANR	7328268	Identifier	irange		7328244	0					
ANR	7328269	PrimaryExpression	0		7328244	1					
ANR	7328270	ForStatement	for ( j = 1U ; j <= options [ opt ] . value_count ; ++ j )		7328244	2					
ANR	7328271	ForInit	j = 1U ;	1339:8:42656:42660	7328244	0	True				
ANR	7328272	AssignmentExpression	j = 1U		7328244	0		=			
ANR	7328273	Identifier	j		7328244	0					
ANR	7328274	PrimaryExpression	1U		7328244	1					
ANR	7328275	Condition	j <= options [ opt ] . value_count	1339:14:42662:42688	7328244	1	True				
ANR	7328276	RelationalExpression	j <= options [ opt ] . value_count		7328244	0		<=			
ANR	7328277	Identifier	j		7328244	0					
ANR	7328278	MemberAccess	options [ opt ] . value_count		7328244	1					
ANR	7328279	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328280	Identifier	options		7328244	0					
ANR	7328281	Identifier	opt		7328244	1					
ANR	7328282	Identifier	value_count		7328244	1					
ANR	7328283	UnaryExpression	++ j	1339:43:42691:42693	7328244	2	True				
ANR	7328284	IncDec	++		7328244	0					
ANR	7328285	Identifier	j		7328244	1					
ANR	7328286	CompoundStatement		6:3:117:117	7328244	3					
ANR	7328287	IfStatement	"if ( strncmp ( options [ opt ] . values [ j - 1U ] . name , str , len ) == 0 && options [ opt ] . values [ j - 1U ] . name [ len ] == 0 )"		7328244	0					
ANR	7328288	Condition	"strncmp ( options [ opt ] . values [ j - 1U ] . name , str , len ) == 0 && options [ opt ] . values [ j - 1U ] . name [ len ] == 0"	1341:10:42711:42818	7328244	0	True				
ANR	7328289	AndExpression	"strncmp ( options [ opt ] . values [ j - 1U ] . name , str , len ) == 0 && options [ opt ] . values [ j - 1U ] . name [ len ] == 0"		7328244	0		&&			
ANR	7328290	EqualityExpression	"strncmp ( options [ opt ] . values [ j - 1U ] . name , str , len ) == 0"		7328244	0		==			
ANR	7328291	CallExpression	"strncmp ( options [ opt ] . values [ j - 1U ] . name , str , len )"		7328244	0					
ANR	7328292	Callee	strncmp		7328244	0					
ANR	7328293	Identifier	strncmp		7328244	0					
ANR	7328294	ArgumentList	options [ opt ] . values [ j - 1U ] . name		7328244	1					
ANR	7328295	Argument	options [ opt ] . values [ j - 1U ] . name		7328244	0					
ANR	7328296	MemberAccess	options [ opt ] . values [ j - 1U ] . name		7328244	0					
ANR	7328297	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328298	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328299	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328300	Identifier	options		7328244	0					
ANR	7328301	Identifier	opt		7328244	1					
ANR	7328302	Identifier	values		7328244	1					
ANR	7328303	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328304	Identifier	j		7328244	0					
ANR	7328305	PrimaryExpression	1U		7328244	1					
ANR	7328306	Identifier	name		7328244	1					
ANR	7328307	Argument	str		7328244	1					
ANR	7328308	Identifier	str		7328244	0					
ANR	7328309	Argument	len		7328244	2					
ANR	7328310	Identifier	len		7328244	0					
ANR	7328311	PrimaryExpression	0		7328244	1					
ANR	7328312	EqualityExpression	options [ opt ] . values [ j - 1U ] . name [ len ] == 0		7328244	1		==			
ANR	7328313	ArrayIndexing	options [ opt ] . values [ j - 1U ] . name [ len ]		7328244	0					
ANR	7328314	MemberAccess	options [ opt ] . values [ j - 1U ] . name		7328244	0					
ANR	7328315	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328316	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328317	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328318	Identifier	options		7328244	0					
ANR	7328319	Identifier	opt		7328244	1					
ANR	7328320	Identifier	values		7328244	1					
ANR	7328321	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328322	Identifier	j		7328244	0					
ANR	7328323	PrimaryExpression	1U		7328244	1					
ANR	7328324	Identifier	name		7328244	1					
ANR	7328325	Identifier	len		7328244	1					
ANR	7328326	PrimaryExpression	0		7328244	1					
ANR	7328327	CompoundStatement		9:6:245:245	7328244	1					
ANR	7328328	ExpressionStatement	dp -> entry [ opt ] = j	1344:9:42838:42856	7328244	0	True				
ANR	7328329	AssignmentExpression	dp -> entry [ opt ] = j		7328244	0		=			
ANR	7328330	ArrayIndexing	dp -> entry [ opt ]		7328244	0					
ANR	7328331	PtrMemberAccess	dp -> entry		7328244	0					
ANR	7328332	Identifier	dp		7328244	0					
ANR	7328333	Identifier	entry		7328244	1					
ANR	7328334	Identifier	opt		7328244	1					
ANR	7328335	Identifier	j		7328244	1					
ANR	7328336	ReturnStatement	return options [ opt ] . values [ j - 1U ] . value ;	1345:9:42867:42905	7328244	1	True				
ANR	7328337	MemberAccess	options [ opt ] . values [ j - 1U ] . value		7328244	0					
ANR	7328338	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328339	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328340	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328341	Identifier	options		7328244	0					
ANR	7328342	Identifier	opt		7328244	1					
ANR	7328343	Identifier	values		7328244	1					
ANR	7328344	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328345	Identifier	j		7328244	0					
ANR	7328346	PrimaryExpression	1U		7328244	1					
ANR	7328347	Identifier	value		7328244	1					
ANR	7328348	ElseStatement	else		7328244	0					
ANR	7328349	IfStatement	if ( options [ opt ] . values [ j - 1U ] . name == range_lo )		7328244	0					
ANR	7328350	Condition	options [ opt ] . values [ j - 1U ] . name == range_lo	1347:15:42930:42971	7328244	0	True				
ANR	7328351	EqualityExpression	options [ opt ] . values [ j - 1U ] . name == range_lo		7328244	0		==			
ANR	7328352	MemberAccess	options [ opt ] . values [ j - 1U ] . name		7328244	0					
ANR	7328353	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328354	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328355	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328356	Identifier	options		7328244	0					
ANR	7328357	Identifier	opt		7328244	1					
ANR	7328358	Identifier	values		7328244	1					
ANR	7328359	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328360	Identifier	j		7328244	0					
ANR	7328361	PrimaryExpression	1U		7328244	1					
ANR	7328362	Identifier	name		7328244	1					
ANR	7328363	Identifier	range_lo		7328244	1					
ANR	7328364	ExpressionStatement	"rlo = options [ opt ] . values [ j - 1U ] . value , irange = j"	1348:9:42983:43032	7328244	1	True				
ANR	7328365	Expression	"rlo = options [ opt ] . values [ j - 1U ] . value , irange = j"		7328244	0					
ANR	7328366	AssignmentExpression	rlo = options [ opt ] . values [ j - 1U ] . value		7328244	0		=			
ANR	7328367	Identifier	rlo		7328244	0					
ANR	7328368	MemberAccess	options [ opt ] . values [ j - 1U ] . value		7328244	1					
ANR	7328369	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328370	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328371	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328372	Identifier	options		7328244	0					
ANR	7328373	Identifier	opt		7328244	1					
ANR	7328374	Identifier	values		7328244	1					
ANR	7328375	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328376	Identifier	j		7328244	0					
ANR	7328377	PrimaryExpression	1U		7328244	1					
ANR	7328378	Identifier	value		7328244	1					
ANR	7328379	AssignmentExpression	irange = j		7328244	1		=			
ANR	7328380	Identifier	irange		7328244	0					
ANR	7328381	Identifier	j		7328244	1					
ANR	7328382	ElseStatement	else		7328244	0					
ANR	7328383	IfStatement	if ( options [ opt ] . values [ j - 1U ] . name == range_hi )		7328244	0					
ANR	7328384	Condition	options [ opt ] . values [ j - 1U ] . name == range_hi	1349:15:43049:43090	7328244	0	True				
ANR	7328385	EqualityExpression	options [ opt ] . values [ j - 1U ] . name == range_hi		7328244	0		==			
ANR	7328386	MemberAccess	options [ opt ] . values [ j - 1U ] . name		7328244	0					
ANR	7328387	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328388	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328389	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328390	Identifier	options		7328244	0					
ANR	7328391	Identifier	opt		7328244	1					
ANR	7328392	Identifier	values		7328244	1					
ANR	7328393	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328394	Identifier	j		7328244	0					
ANR	7328395	PrimaryExpression	1U		7328244	1					
ANR	7328396	Identifier	name		7328244	1					
ANR	7328397	Identifier	range_hi		7328244	1					
ANR	7328398	ExpressionStatement	rhi = options [ opt ] . values [ j - 1U ] . value	1350:9:43102:43139	7328244	1	True				
ANR	7328399	AssignmentExpression	rhi = options [ opt ] . values [ j - 1U ] . value		7328244	0		=			
ANR	7328400	Identifier	rhi		7328244	0					
ANR	7328401	MemberAccess	options [ opt ] . values [ j - 1U ] . value		7328244	1					
ANR	7328402	ArrayIndexing	options [ opt ] . values [ j - 1U ]		7328244	0					
ANR	7328403	MemberAccess	options [ opt ] . values		7328244	0					
ANR	7328404	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328405	Identifier	options		7328244	0					
ANR	7328406	Identifier	opt		7328244	1					
ANR	7328407	Identifier	values		7328244	1					
ANR	7328408	AdditiveExpression	j - 1U		7328244	1		-			
ANR	7328409	Identifier	j		7328244	0					
ANR	7328410	PrimaryExpression	1U		7328244	1					
ANR	7328411	Identifier	value		7328244	1					
ANR	7328412	IfStatement	if ( irange > 0 )		7328244	3					
ANR	7328413	Condition	irange > 0	1354:7:43211:43220	7328244	0	True				
ANR	7328414	RelationalExpression	irange > 0		7328244	0		>			
ANR	7328415	Identifier	irange		7328244	0					
ANR	7328416	PrimaryExpression	0		7328244	1					
ANR	7328417	CompoundStatement		23:6:675:703	7328244	1					
ANR	7328418	IdentifierDeclStatement	char * ep = NULL ;	1356:6:43234:43249	7328244	0	True				
ANR	7328419	IdentifierDecl	* ep = NULL		7328244	0					
ANR	7328420	IdentifierDeclType	char *		7328244	0					
ANR	7328421	Identifier	ep		7328244	1					
ANR	7328422	AssignmentExpression	* ep = NULL		7328244	2		=			
ANR	7328423	Identifier	NULL		7328244	0					
ANR	7328424	Identifier	NULL		7328244	1					
ANR	7328425	IdentifierDeclStatement	"long l = strtol ( str , & ep , 0 ) ;"	1357:6:43257:43285	7328244	1	True				
ANR	7328426	IdentifierDecl	"l = strtol ( str , & ep , 0 )"		7328244	0					
ANR	7328427	IdentifierDeclType	long		7328244	0					
ANR	7328428	Identifier	l		7328244	1					
ANR	7328429	AssignmentExpression	"l = strtol ( str , & ep , 0 )"		7328244	2		=			
ANR	7328430	Identifier	l		7328244	0					
ANR	7328431	CallExpression	"strtol ( str , & ep , 0 )"		7328244	1					
ANR	7328432	Callee	strtol		7328244	0					
ANR	7328433	Identifier	strtol		7328244	0					
ANR	7328434	ArgumentList	str		7328244	1					
ANR	7328435	Argument	str		7328244	0					
ANR	7328436	Identifier	str		7328244	0					
ANR	7328437	Argument	& ep		7328244	1					
ANR	7328438	UnaryOperationExpression	& ep		7328244	0					
ANR	7328439	UnaryOperator	&		7328244	0					
ANR	7328440	Identifier	ep		7328244	1					
ANR	7328441	Argument	0		7328244	2					
ANR	7328442	PrimaryExpression	0		7328244	0					
ANR	7328443	IfStatement	if ( ep == str + len && l >= rlo && l <= rhi )		7328244	2					
ANR	7328444	Condition	ep == str + len && l >= rlo && l <= rhi	1359:10:43298:43334	7328244	0	True				
ANR	7328445	AndExpression	ep == str + len && l >= rlo && l <= rhi		7328244	0		&&			
ANR	7328446	EqualityExpression	ep == str + len		7328244	0		==			
ANR	7328447	Identifier	ep		7328244	0					
ANR	7328448	AdditiveExpression	str + len		7328244	1		+			
ANR	7328449	Identifier	str		7328244	0					
ANR	7328450	Identifier	len		7328244	1					
ANR	7328451	AndExpression	l >= rlo && l <= rhi		7328244	1		&&			
ANR	7328452	RelationalExpression	l >= rlo		7328244	0		>=			
ANR	7328453	Identifier	l		7328244	0					
ANR	7328454	Identifier	rlo		7328244	1					
ANR	7328455	RelationalExpression	l <= rhi		7328244	1		<=			
ANR	7328456	Identifier	l		7328244	0					
ANR	7328457	Identifier	rhi		7328244	1					
ANR	7328458	CompoundStatement		26:6:761:761	7328244	1					
ANR	7328459	ExpressionStatement	dp -> entry [ opt ] = irange	1361:9:43354:43377	7328244	0	True				
ANR	7328460	AssignmentExpression	dp -> entry [ opt ] = irange		7328244	0		=			
ANR	7328461	ArrayIndexing	dp -> entry [ opt ]		7328244	0					
ANR	7328462	PtrMemberAccess	dp -> entry		7328244	0					
ANR	7328463	Identifier	dp		7328244	0					
ANR	7328464	Identifier	entry		7328244	1					
ANR	7328465	Identifier	opt		7328244	1					
ANR	7328466	Identifier	irange		7328244	1					
ANR	7328467	ReturnStatement	return ( int ) l ;	1362:9:43403:43424	7328244	1	True				
ANR	7328468	CastExpression	( int ) l		7328244	0					
ANR	7328469	CastTarget	int		7328244	0					
ANR	7328470	Identifier	l		7328244	1					
ANR	7328471	ExpressionStatement	"display_log ( dp , dp -> errset ? INTERNAL_ERROR : USER_ERROR , ""%s: unknown value setting '%.*s'"" , options [ opt ] . name , ( int ) len , str )"	1366:3:43443:43596	7328244	4	True				
ANR	7328472	CallExpression	"display_log ( dp , dp -> errset ? INTERNAL_ERROR : USER_ERROR , ""%s: unknown value setting '%.*s'"" , options [ opt ] . name , ( int ) len , str )"		7328244	0					
ANR	7328473	Callee	display_log		7328244	0					
ANR	7328474	Identifier	display_log		7328244	0					
ANR	7328475	ArgumentList	dp		7328244	1					
ANR	7328476	Argument	dp		7328244	0					
ANR	7328477	Identifier	dp		7328244	0					
ANR	7328478	Argument	dp -> errset ? INTERNAL_ERROR : USER_ERROR		7328244	1					
ANR	7328479	ConditionalExpression	dp -> errset ? INTERNAL_ERROR : USER_ERROR		7328244	0					
ANR	7328480	Condition	dp -> errset		7328244	0					
ANR	7328481	PtrMemberAccess	dp -> errset		7328244	0					
ANR	7328482	Identifier	dp		7328244	0					
ANR	7328483	Identifier	errset		7328244	1					
ANR	7328484	Identifier	INTERNAL_ERROR		7328244	1					
ANR	7328485	Identifier	USER_ERROR		7328244	2					
ANR	7328486	Argument	"""%s: unknown value setting '%.*s'"""		7328244	2					
ANR	7328487	PrimaryExpression	"""%s: unknown value setting '%.*s'"""		7328244	0					
ANR	7328488	Argument	options [ opt ] . name		7328244	3					
ANR	7328489	MemberAccess	options [ opt ] . name		7328244	0					
ANR	7328490	ArrayIndexing	options [ opt ]		7328244	0					
ANR	7328491	Identifier	options		7328244	0					
ANR	7328492	Identifier	opt		7328244	1					
ANR	7328493	Identifier	name		7328244	1					
ANR	7328494	Argument	( int ) len		7328244	4					
ANR	7328495	CastExpression	( int ) len		7328244	0					
ANR	7328496	CastTarget	int		7328244	0					
ANR	7328497	Identifier	len		7328244	1					
ANR	7328498	Argument	str		7328244	5					
ANR	7328499	Identifier	str		7328244	0					
ANR	7328500	ExpressionStatement	abort ( )	1369:3:43601:43608	7328244	5	True				
ANR	7328501	CallExpression	abort ( )		7328244	0					
ANR	7328502	Callee	abort		7328244	0					
ANR	7328503	Identifier	abort		7328244	0					
ANR	7328504	ArgumentList			7328244	1					
ANR	7328505	ReturnType	static int		7328244	1					
ANR	7328506	Identifier	find_val		7328244	2					
ANR	7328507	ParameterList	"struct display * dp , png_byte opt , const char * str , size_t len"		7328244	3					
ANR	7328508	Parameter	struct display * dp	1330:9:42341:42358	7328244	0	True				
ANR	7328509	ParameterType	struct display *		7328244	0					
ANR	7328510	Identifier	dp		7328244	1					
ANR	7328511	Parameter	png_byte opt	1330:29:42361:42372	7328244	1	True				
ANR	7328512	ParameterType	png_byte		7328244	0					
ANR	7328513	Identifier	opt		7328244	1					
ANR	7328514	Parameter	const char * str	1330:43:42375:42389	7328244	2	True				
ANR	7328515	ParameterType	const char *		7328244	0					
ANR	7328516	Identifier	str		7328244	1					
ANR	7328517	Parameter	size_t len	1330:60:42392:42401	7328244	3	True				
ANR	7328518	ParameterType	size_t		7328244	0					
ANR	7328519	Identifier	len		7328244	1					
ANR	7328520	CFGEntryNode	ENTRY		7328244		True				
ANR	7328521	CFGExitNode	EXIT		7328244		True				
ANR	7328522	Symbol	options [ opt ] . values [ j - 1U ] . value		7328244						
ANR	7328523	Symbol	* * opt		7328244						
ANR	7328524	Symbol	dp		7328244						
ANR	7328525	Symbol	INT_MIN		7328244						
ANR	7328526	Symbol	* options		7328244						
ANR	7328527	Symbol	* dp -> entry		7328244						
ANR	7328528	Symbol	strncmp		7328244						
ANR	7328529	Symbol	* dp		7328244						
ANR	7328530	Symbol	range_hi		7328244						
ANR	7328531	Symbol	len		7328244						
ANR	7328532	Symbol	* options [ opt ] . values [ j - 1U ] . name		7328244						
ANR	7328533	Symbol	irange		7328244						
ANR	7328534	Symbol	strtol		7328244						
ANR	7328535	Symbol	dp -> errset		7328244						
ANR	7328536	Symbol	range_lo		7328244						
ANR	7328537	Symbol	INT_MAX		7328244						
ANR	7328538	Symbol	options		7328244						
ANR	7328539	Symbol	* opt		7328244						
ANR	7328540	Symbol	* * j		7328244						
ANR	7328541	Symbol	NULL		7328244						
ANR	7328542	Symbol	* options [ opt ] . values		7328244						
ANR	7328543	Symbol	* * options [ opt ] . values		7328244						
ANR	7328544	Symbol	USER_ERROR		7328244						
ANR	7328545	Symbol	options [ opt ] . name		7328244						
ANR	7328546	Symbol	INTERNAL_ERROR		7328244						
ANR	7328547	Symbol	j		7328244						
ANR	7328548	Symbol	* * options		7328244						
ANR	7328549	Symbol	ep		7328244						
ANR	7328550	Symbol	l		7328244						
ANR	7328551	Symbol	dp -> entry		7328244						
ANR	7328552	Symbol	str		7328244						
ANR	7328553	Symbol	* * * options		7328244						
ANR	7328554	Symbol	* * * opt		7328244						
ANR	7328555	Symbol	opt		7328244						
ANR	7328556	Symbol	rhi		7328244						
ANR	7328557	Symbol	rlo		7328244						
ANR	7328558	Symbol	* j		7328244						
ANR	7328559	Symbol	& ep		7328244						
ANR	7328560	Symbol	options [ opt ] . value_count		7328244						
ANR	7328561	Symbol	* * dp		7328244						
ANR	7328562	Symbol	options [ opt ] . values [ j - 1U ] . name		7328244						
ANR	7328563	Symbol	options [ opt ] . values		7328244						
ANR	7328564	Symbol	* len		7328244						
ANR	7328565	Function	opt_check	1372:0:43631:47043							
ANR	7328566	FunctionDef	"opt_check (struct display * dp , const char * arg)"		7328565	0					
ANR	7328567	CompoundStatement		1374:0:43689:47043	7328565	0					
ANR	7328568	ExpressionStatement	assert ( dp -> errset == 0 )	1375:3:43694:43717	7328565	0	True				
ANR	7328569	CallExpression	assert ( dp -> errset == 0 )		7328565	0					
ANR	7328570	Callee	assert		7328565	0					
ANR	7328571	Identifier	assert		7328565	0					
ANR	7328572	ArgumentList	dp -> errset == 0		7328565	1					
ANR	7328573	Argument	dp -> errset == 0		7328565	0					
ANR	7328574	EqualityExpression	dp -> errset == 0		7328565	0		==			
ANR	7328575	PtrMemberAccess	dp -> errset		7328565	0					
ANR	7328576	Identifier	dp		7328565	0					
ANR	7328577	Identifier	errset		7328565	1					
ANR	7328578	PrimaryExpression	0		7328565	1					
ANR	7328579	IfStatement	if ( arg != NULL && arg [ 0 ] == '-' && arg [ 1 ] == '-' )		7328565	1					
ANR	7328580	Condition	arg != NULL && arg [ 0 ] == '-' && arg [ 1 ] == '-'	1377:7:43727:43771	7328565	0	True				
ANR	7328581	AndExpression	arg != NULL && arg [ 0 ] == '-' && arg [ 1 ] == '-'		7328565	0		&&			
ANR	7328582	EqualityExpression	arg != NULL		7328565	0		!=			
ANR	7328583	Identifier	arg		7328565	0					
ANR	7328584	Identifier	NULL		7328565	1					
ANR	7328585	AndExpression	arg [ 0 ] == '-' && arg [ 1 ] == '-'		7328565	1		&&			
ANR	7328586	EqualityExpression	arg [ 0 ] == '-'		7328565	0		==			
ANR	7328587	ArrayIndexing	arg [ 0 ]		7328565	0					
ANR	7328588	Identifier	arg		7328565	0					
ANR	7328589	PrimaryExpression	0		7328565	1					
ANR	7328590	PrimaryExpression	'-'		7328565	1					
ANR	7328591	EqualityExpression	arg [ 1 ] == '-'		7328565	1		==			
ANR	7328592	ArrayIndexing	arg [ 1 ]		7328565	0					
ANR	7328593	Identifier	arg		7328565	0					
ANR	7328594	PrimaryExpression	1		7328565	1					
ANR	7328595	PrimaryExpression	'-'		7328565	1					
ANR	7328596	CompoundStatement		7:6:159:169	7328565	1					
ANR	7328597	IdentifierDeclStatement	"int i = 0 , negate = ( strncmp ( arg + 2 , ""no-"" , 3 ) == 0 ) , val ;"	1379:6:43785:43841	7328565	0	True				
ANR	7328598	IdentifierDecl	i = 0		7328565	0					
ANR	7328599	IdentifierDeclType	int		7328565	0					
ANR	7328600	Identifier	i		7328565	1					
ANR	7328601	AssignmentExpression	i = 0		7328565	2		=			
ANR	7328602	Identifier	i		7328565	0					
ANR	7328603	PrimaryExpression	0		7328565	1					
ANR	7328604	IdentifierDecl	"negate = ( strncmp ( arg + 2 , ""no-"" , 3 ) == 0 )"		7328565	1					
ANR	7328605	IdentifierDeclType	int		7328565	0					
ANR	7328606	Identifier	negate		7328565	1					
ANR	7328607	AssignmentExpression	"negate = ( strncmp ( arg + 2 , ""no-"" , 3 ) == 0 )"		7328565	2		=			
ANR	7328608	Identifier	negate		7328565	0					
ANR	7328609	EqualityExpression	"strncmp ( arg + 2 , ""no-"" , 3 ) == 0"		7328565	1		==			
ANR	7328610	CallExpression	"strncmp ( arg + 2 , ""no-"" , 3 )"		7328565	0					
ANR	7328611	Callee	strncmp		7328565	0					
ANR	7328612	Identifier	strncmp		7328565	0					
ANR	7328613	ArgumentList	arg + 2		7328565	1					
ANR	7328614	Argument	arg + 2		7328565	0					
ANR	7328615	AdditiveExpression	arg + 2		7328565	0		+			
ANR	7328616	Identifier	arg		7328565	0					
ANR	7328617	PrimaryExpression	2		7328565	1					
ANR	7328618	Argument	"""no-"""		7328565	1					
ANR	7328619	PrimaryExpression	"""no-"""		7328565	0					
ANR	7328620	Argument	3		7328565	2					
ANR	7328621	PrimaryExpression	3		7328565	0					
ANR	7328622	PrimaryExpression	0		7328565	1					
ANR	7328623	IdentifierDecl	val		7328565	2					
ANR	7328624	IdentifierDeclType	int		7328565	0					
ANR	7328625	Identifier	val		7328565	1					
ANR	7328626	IdentifierDeclStatement	png_byte j ;	1380:6:43849:43859	7328565	1	True				
ANR	7328627	IdentifierDecl	j		7328565	0					
ANR	7328628	IdentifierDeclType	png_byte		7328565	0					
ANR	7328629	Identifier	j		7328565	1					
ANR	7328630	IfStatement	if ( negate )		7328565	2					
ANR	7328631	Condition	negate	1382:10:43872:43877	7328565	0	True				
ANR	7328632	Identifier	negate		7328565	0					
ANR	7328633	ExpressionStatement	arg += 5	1383:9:43889:43897	7328565	1	True				
ANR	7328634	AssignmentExpression	arg += 5		7328565	0		+=			
ANR	7328635	Identifier	arg		7328565	0					
ANR	7328636	PrimaryExpression	5		7328565	1					
ANR	7328637	ElseStatement	else		7328565	0					
ANR	7328638	ExpressionStatement	arg += 2	1386:9:43932:43940	7328565	0	True				
ANR	7328639	AssignmentExpression	arg += 2		7328565	0		+=			
ANR	7328640	Identifier	arg		7328565	0					
ANR	7328641	PrimaryExpression	2		7328565	1					
ANR	7328642	WhileStatement	while ( arg [ i ] != 0 && arg [ i ] != '=' )		7328565	3					
ANR	7328643	Condition	arg [ i ] != 0 && arg [ i ] != '='	1389:13:44016:44043	7328565	0	True				
ANR	7328644	AndExpression	arg [ i ] != 0 && arg [ i ] != '='		7328565	0		&&			
ANR	7328645	EqualityExpression	arg [ i ] != 0		7328565	0		!=			
ANR	7328646	ArrayIndexing	arg [ i ]		7328565	0					
ANR	7328647	Identifier	arg		7328565	0					
ANR	7328648	Identifier	i		7328565	1					
ANR	7328649	PrimaryExpression	0		7328565	1					
ANR	7328650	EqualityExpression	arg [ i ] != '='		7328565	1		!=			
ANR	7328651	ArrayIndexing	arg [ i ]		7328565	0					
ANR	7328652	Identifier	arg		7328565	0					
ANR	7328653	Identifier	i		7328565	1					
ANR	7328654	PrimaryExpression	'='		7328565	1					
ANR	7328655	ExpressionStatement	++ i	1389:43:44046:44049	7328565	1	True				
ANR	7328656	UnaryExpression	++ i		7328565	0					
ANR	7328657	IncDec	++		7328565	0					
ANR	7328658	Identifier	i		7328565	1					
ANR	7328659	ExpressionStatement	"j = option_index ( dp , arg , i )"	1394:6:44179:44207	7328565	4	True				
ANR	7328660	AssignmentExpression	"j = option_index ( dp , arg , i )"		7328565	0		=			
ANR	7328661	Identifier	j		7328565	0					
ANR	7328662	CallExpression	"option_index ( dp , arg , i )"		7328565	1					
ANR	7328663	Callee	option_index		7328565	0					
ANR	7328664	Identifier	option_index		7328565	0					
ANR	7328665	ArgumentList	dp		7328565	1					
ANR	7328666	Argument	dp		7328565	0					
ANR	7328667	Identifier	dp		7328565	0					
ANR	7328668	Argument	arg		7328565	1					
ANR	7328669	Identifier	arg		7328565	0					
ANR	7328670	Argument	i		7328565	2					
ANR	7328671	Identifier	i		7328565	0					
ANR	7328672	IfStatement	if ( arg [ i ] == 0 )		7328565	5					
ANR	7328673	Condition	arg [ i ] == 0	1397:10:44276:44286	7328565	0	True				
ANR	7328674	EqualityExpression	arg [ i ] == 0		7328565	0		==			
ANR	7328675	ArrayIndexing	arg [ i ]		7328565	0					
ANR	7328676	Identifier	arg		7328565	0					
ANR	7328677	Identifier	i		7328565	1					
ANR	7328678	PrimaryExpression	0		7328565	1					
ANR	7328679	CompoundStatement		25:6:647:647	7328565	1					
ANR	7328680	ExpressionStatement	val = options [ j ] . values [ negate ] . value	1399:9:44348:44385	7328565	0	True				
ANR	7328681	AssignmentExpression	val = options [ j ] . values [ negate ] . value		7328565	0		=			
ANR	7328682	Identifier	val		7328565	0					
ANR	7328683	MemberAccess	options [ j ] . values [ negate ] . value		7328565	1					
ANR	7328684	ArrayIndexing	options [ j ] . values [ negate ]		7328565	0					
ANR	7328685	MemberAccess	options [ j ] . values		7328565	0					
ANR	7328686	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328687	Identifier	options		7328565	0					
ANR	7328688	Identifier	j		7328565	1					
ANR	7328689	Identifier	values		7328565	1					
ANR	7328690	Identifier	negate		7328565	1					
ANR	7328691	Identifier	value		7328565	1					
ANR	7328692	ExpressionStatement	dp -> entry [ j ] = ( png_byte ) ( negate + 1U )	1400:9:44396:44442	7328565	1	True				
ANR	7328693	AssignmentExpression	dp -> entry [ j ] = ( png_byte ) ( negate + 1U )		7328565	0		=			
ANR	7328694	ArrayIndexing	dp -> entry [ j ]		7328565	0					
ANR	7328695	PtrMemberAccess	dp -> entry		7328565	0					
ANR	7328696	Identifier	dp		7328565	0					
ANR	7328697	Identifier	entry		7328565	1					
ANR	7328698	Identifier	j		7328565	1					
ANR	7328699	CastExpression	( png_byte ) ( negate + 1U )		7328565	1					
ANR	7328700	CastTarget	png_byte		7328565	0					
ANR	7328701	AdditiveExpression	negate + 1U		7328565	1		+			
ANR	7328702	Identifier	negate		7328565	0					
ANR	7328703	PrimaryExpression	1U		7328565	1					
ANR	7328704	ElseStatement	else		7328565	0					
ANR	7328705	CompoundStatement		32:9:791:821	7328565	0					
ANR	7328706	IdentifierDeclStatement	const char * list = arg + ( i + 1 ) ;	1405:9:44481:44511	7328565	0	True				
ANR	7328707	IdentifierDecl	* list = arg + ( i + 1 )		7328565	0					
ANR	7328708	IdentifierDeclType	const char *		7328565	0					
ANR	7328709	Identifier	list		7328565	1					
ANR	7328710	AssignmentExpression	* list = arg + ( i + 1 )		7328565	2		=			
ANR	7328711	Identifier	list		7328565	0					
ANR	7328712	AdditiveExpression	arg + ( i + 1 )		7328565	1		+			
ANR	7328713	Identifier	arg		7328565	0					
ANR	7328714	AdditiveExpression	i + 1		7328565	1		+			
ANR	7328715	Identifier	i		7328565	0					
ANR	7328716	PrimaryExpression	1		7328565	1					
ANR	7328717	IfStatement	if ( options [ j ] . opt != LIST )		7328565	1					
ANR	7328718	Condition	options [ j ] . opt != LIST	1410:13:44658:44679	7328565	0	True				
ANR	7328719	EqualityExpression	options [ j ] . opt != LIST		7328565	0		!=			
ANR	7328720	MemberAccess	options [ j ] . opt		7328565	0					
ANR	7328721	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328722	Identifier	options		7328565	0					
ANR	7328723	Identifier	j		7328565	1					
ANR	7328724	Identifier	opt		7328565	1					
ANR	7328725	Identifier	LIST		7328565	1					
ANR	7328726	CompoundStatement		38:9:1001:1001	7328565	1					
ANR	7328727	ExpressionStatement	"val = find_val ( dp , j , list , strlen ( list ) )"	1413:12:44773:44814	7328565	0	True				
ANR	7328728	AssignmentExpression	"val = find_val ( dp , j , list , strlen ( list ) )"		7328565	0		=			
ANR	7328729	Identifier	val		7328565	0					
ANR	7328730	CallExpression	"find_val ( dp , j , list , strlen ( list ) )"		7328565	1					
ANR	7328731	Callee	find_val		7328565	0					
ANR	7328732	Identifier	find_val		7328565	0					
ANR	7328733	ArgumentList	dp		7328565	1					
ANR	7328734	Argument	dp		7328565	0					
ANR	7328735	Identifier	dp		7328565	0					
ANR	7328736	Argument	j		7328565	1					
ANR	7328737	Identifier	j		7328565	0					
ANR	7328738	Argument	list		7328565	2					
ANR	7328739	Identifier	list		7328565	0					
ANR	7328740	Argument	strlen ( list )		7328565	3					
ANR	7328741	CallExpression	strlen ( list )		7328565	0					
ANR	7328742	Callee	strlen		7328565	0					
ANR	7328743	Identifier	strlen		7328565	0					
ANR	7328744	ArgumentList	list		7328565	1					
ANR	7328745	Argument	list		7328565	0					
ANR	7328746	Identifier	list		7328565	0					
ANR	7328747	IfStatement	if ( negate )		7328565	1					
ANR	7328748	Condition	negate	1415:16:44833:44838	7328565	0	True				
ANR	7328749	Identifier	negate		7328565	0					
ANR	7328750	CompoundStatement		43:12:1163:1163	7328565	1					
ANR	7328751	IfStatement	if ( options [ j ] . opt < OPTION )		7328565	0					
ANR	7328752	Condition	options [ j ] . opt < OPTION	1417:19:44874:44896	7328565	0	True				
ANR	7328753	RelationalExpression	options [ j ] . opt < OPTION		7328565	0		<			
ANR	7328754	MemberAccess	options [ j ] . opt		7328565	0					
ANR	7328755	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328756	Identifier	options		7328565	0					
ANR	7328757	Identifier	j		7328565	1					
ANR	7328758	Identifier	opt		7328565	1					
ANR	7328759	Identifier	OPTION		7328565	1					
ANR	7328760	ExpressionStatement	val = ! val	1418:18:44917:44927	7328565	1	True				
ANR	7328761	AssignmentExpression	val = ! val		7328565	0		=			
ANR	7328762	Identifier	val		7328565	0					
ANR	7328763	UnaryOperationExpression	! val		7328565	1					
ANR	7328764	UnaryOperator	!		7328565	0					
ANR	7328765	Identifier	val		7328565	1					
ANR	7328766	ElseStatement	else		7328565	0					
ANR	7328767	CompoundStatement		48:15:1275:1275	7328565	0					
ANR	7328768	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%.*s: option=arg cannot be negated"" , i , arg )"	1422:18:44985:45082	7328565	0	True				
ANR	7328769	CallExpression	"display_log ( dp , USER_ERROR , ""%.*s: option=arg cannot be negated"" , i , arg )"		7328565	0					
ANR	7328770	Callee	display_log		7328565	0					
ANR	7328771	Identifier	display_log		7328565	0					
ANR	7328772	ArgumentList	dp		7328565	1					
ANR	7328773	Argument	dp		7328565	0					
ANR	7328774	Identifier	dp		7328565	0					
ANR	7328775	Argument	USER_ERROR		7328565	1					
ANR	7328776	Identifier	USER_ERROR		7328565	0					
ANR	7328777	Argument	"""%.*s: option=arg cannot be negated"""		7328565	2					
ANR	7328778	PrimaryExpression	"""%.*s: option=arg cannot be negated"""		7328565	0					
ANR	7328779	Argument	i		7328565	3					
ANR	7328780	Identifier	i		7328565	0					
ANR	7328781	Argument	arg		7328565	4					
ANR	7328782	Identifier	arg		7328565	0					
ANR	7328783	ExpressionStatement	abort ( )	1424:18:45102:45109	7328565	1	True				
ANR	7328784	CallExpression	abort ( )		7328565	0					
ANR	7328785	Callee	abort		7328565	0					
ANR	7328786	Identifier	abort		7328565	0					
ANR	7328787	ArgumentList			7328565	1					
ANR	7328788	ElseStatement	else		7328565	0					
ANR	7328789	CompoundStatement		57:9:1556:1556	7328565	0					
ANR	7328790	IfStatement	if ( negate )		7328565	0					
ANR	7328791	Condition	negate	1436:16:45553:45558	7328565	0	True				
ANR	7328792	Identifier	negate		7328565	0					
ANR	7328793	ExpressionStatement	val = options [ j ] . values [ 0 ] . value	1437:15:45576:45608	7328565	1	True				
ANR	7328794	AssignmentExpression	val = options [ j ] . values [ 0 ] . value		7328565	0		=			
ANR	7328795	Identifier	val		7328565	0					
ANR	7328796	MemberAccess	options [ j ] . values [ 0 ] . value		7328565	1					
ANR	7328797	ArrayIndexing	options [ j ] . values [ 0 ]		7328565	0					
ANR	7328798	MemberAccess	options [ j ] . values		7328565	0					
ANR	7328799	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328800	Identifier	options		7328565	0					
ANR	7328801	Identifier	j		7328565	1					
ANR	7328802	Identifier	values		7328565	1					
ANR	7328803	PrimaryExpression	0		7328565	1					
ANR	7328804	Identifier	value		7328565	1					
ANR	7328805	ElseStatement	else		7328565	0					
ANR	7328806	ExpressionStatement	val = 0	1440:15:45643:45650	7328565	0	True				
ANR	7328807	AssignmentExpression	val = 0		7328565	0		=			
ANR	7328808	Identifier	val		7328565	0					
ANR	7328809	PrimaryExpression	0		7328565	1					
ANR	7328810	WhileStatement	while ( * list != 0 )		7328565	1					
ANR	7328811	Condition	* list != 0	1442:19:45672:45681	7328565	0	True				
ANR	7328812	EqualityExpression	* list != 0		7328565	0		!=			
ANR	7328813	UnaryOperationExpression	* list		7328565	0					
ANR	7328814	UnaryOperator	*		7328565	0					
ANR	7328815	Identifier	list		7328565	1					
ANR	7328816	PrimaryExpression	0		7328565	1					
ANR	7328817	CompoundStatement		74:15:2177:2186	7328565	1					
ANR	7328818	IdentifierDeclStatement	"int v , iv ;"	1447:15:45867:45876	7328565	0	True				
ANR	7328819	IdentifierDecl	v		7328565	0					
ANR	7328820	IdentifierDeclType	int		7328565	0					
ANR	7328821	Identifier	v		7328565	1					
ANR	7328822	IdentifierDecl	iv		7328565	1					
ANR	7328823	IdentifierDeclType	int		7328565	0					
ANR	7328824	Identifier	iv		7328565	1					
ANR	7328825	ExpressionStatement	iv = 0	1449:15:45894:45900	7328565	1	True				
ANR	7328826	AssignmentExpression	iv = 0		7328565	0		=			
ANR	7328827	Identifier	iv		7328565	0					
ANR	7328828	PrimaryExpression	0		7328565	1					
ANR	7328829	WhileStatement	"while ( list [ ++ iv ] != 0 && list [ iv ] != ',' )"		7328565	2					
ANR	7328830	Condition	"list [ ++ iv ] != 0 && list [ iv ] != ','"	1450:22:45951:45984	7328565	0	True				
ANR	7328831	AndExpression	"list [ ++ iv ] != 0 && list [ iv ] != ','"		7328565	0		&&			
ANR	7328832	EqualityExpression	list [ ++ iv ] != 0		7328565	0		!=			
ANR	7328833	ArrayIndexing	list [ ++ iv ]		7328565	0					
ANR	7328834	Identifier	list		7328565	0					
ANR	7328835	UnaryExpression	++ iv		7328565	1					
ANR	7328836	IncDec	++		7328565	0					
ANR	7328837	Identifier	iv		7328565	1					
ANR	7328838	PrimaryExpression	0		7328565	1					
ANR	7328839	EqualityExpression	"list [ iv ] != ','"		7328565	1		!=			
ANR	7328840	ArrayIndexing	list [ iv ]		7328565	0					
ANR	7328841	Identifier	list		7328565	0					
ANR	7328842	Identifier	iv		7328565	1					
ANR	7328843	PrimaryExpression	"','"		7328565	1					
ANR	7328844	CompoundStatement		77:58:2297:2297	7328565	1					
ANR	7328845	ExpressionStatement	"v = find_val ( dp , j , list , iv )"	1452:15:46006:46035	7328565	3	True				
ANR	7328846	AssignmentExpression	"v = find_val ( dp , j , list , iv )"		7328565	0		=			
ANR	7328847	Identifier	v		7328565	0					
ANR	7328848	CallExpression	"find_val ( dp , j , list , iv )"		7328565	1					
ANR	7328849	Callee	find_val		7328565	0					
ANR	7328850	Identifier	find_val		7328565	0					
ANR	7328851	ArgumentList	dp		7328565	1					
ANR	7328852	Argument	dp		7328565	0					
ANR	7328853	Identifier	dp		7328565	0					
ANR	7328854	Argument	j		7328565	1					
ANR	7328855	Identifier	j		7328565	0					
ANR	7328856	Argument	list		7328565	2					
ANR	7328857	Identifier	list		7328565	0					
ANR	7328858	Argument	iv		7328565	3					
ANR	7328859	Identifier	iv		7328565	0					
ANR	7328860	IfStatement	if ( negate )		7328565	4					
ANR	7328861	Condition	negate	1454:19:46057:46062	7328565	0	True				
ANR	7328862	Identifier	negate		7328565	0					
ANR	7328863	ExpressionStatement	val &= ~v	1455:18:46083:46092	7328565	1	True				
ANR	7328864	AssignmentExpression	val &= ~v		7328565	0		&=			
ANR	7328865	Identifier	val		7328565	0					
ANR	7328866	Identifier	~v		7328565	1					
ANR	7328867	ElseStatement	else		7328565	0					
ANR	7328868	ExpressionStatement	val |= v	1458:18:46133:46141	7328565	0	True				
ANR	7328869	AssignmentExpression	val |= v		7328565	0		|=			
ANR	7328870	Identifier	val		7328565	0					
ANR	7328871	Identifier	v		7328565	1					
ANR	7328872	ExpressionStatement	list += iv	1460:15:46159:46169	7328565	5	True				
ANR	7328873	AssignmentExpression	list += iv		7328565	0		+=			
ANR	7328874	Identifier	list		7328565	0					
ANR	7328875	Identifier	iv		7328565	1					
ANR	7328876	IfStatement	if ( * list != 0 )		7328565	6					
ANR	7328877	Condition	* list != 0	1461:19:46190:46199	7328565	0	True				
ANR	7328878	EqualityExpression	* list != 0		7328565	0		!=			
ANR	7328879	UnaryOperationExpression	* list		7328565	0					
ANR	7328880	UnaryOperator	*		7328565	0					
ANR	7328881	Identifier	list		7328565	1					
ANR	7328882	PrimaryExpression	0		7328565	1					
ANR	7328883	ExpressionStatement	++ list	1462:18:46220:46226	7328565	1	True				
ANR	7328884	UnaryExpression	++ list		7328565	0					
ANR	7328885	IncDec	++		7328565	0					
ANR	7328886	Identifier	list		7328565	1					
ANR	7328887	ExpressionStatement	dp -> value [ j ] = val	1468:6:46361:46379	7328565	6	True				
ANR	7328888	AssignmentExpression	dp -> value [ j ] = val		7328565	0		=			
ANR	7328889	ArrayIndexing	dp -> value [ j ]		7328565	0					
ANR	7328890	PtrMemberAccess	dp -> value		7328565	0					
ANR	7328891	Identifier	dp		7328565	0					
ANR	7328892	Identifier	value		7328565	1					
ANR	7328893	Identifier	j		7328565	1					
ANR	7328894	Identifier	val		7328565	1					
ANR	7328895	IfStatement	if ( options [ j ] . opt < LEVEL_MASK )		7328565	7					
ANR	7328896	Condition	options [ j ] . opt < LEVEL_MASK	1470:10:46392:46418	7328565	0	True				
ANR	7328897	RelationalExpression	options [ j ] . opt < LEVEL_MASK		7328565	0		<			
ANR	7328898	MemberAccess	options [ j ] . opt		7328565	0					
ANR	7328899	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328900	Identifier	options		7328565	0					
ANR	7328901	Identifier	j		7328565	1					
ANR	7328902	Identifier	opt		7328565	1					
ANR	7328903	Identifier	LEVEL_MASK		7328565	1					
ANR	7328904	CompoundStatement		98:6:2737:2737	7328565	1					
ANR	7328905	IfStatement	if ( val )		7328565	0					
ANR	7328906	Condition	val	1473:13:46508:46510	7328565	0	True				
ANR	7328907	Identifier	val		7328565	0					
ANR	7328908	ExpressionStatement	dp -> options = ( dp -> options & ~LEVEL_MASK ) | options [ j ] . opt	1474:12:46546:46604	7328565	1	True				
ANR	7328909	AssignmentExpression	dp -> options = ( dp -> options & ~LEVEL_MASK ) | options [ j ] . opt		7328565	0		=			
ANR	7328910	PtrMemberAccess	dp -> options		7328565	0					
ANR	7328911	Identifier	dp		7328565	0					
ANR	7328912	Identifier	options		7328565	1					
ANR	7328913	InclusiveOrExpression	( dp -> options & ~LEVEL_MASK ) | options [ j ] . opt		7328565	1		|			
ANR	7328914	BitAndExpression	dp -> options & ~LEVEL_MASK		7328565	0		&			
ANR	7328915	PtrMemberAccess	dp -> options		7328565	0					
ANR	7328916	Identifier	dp		7328565	0					
ANR	7328917	Identifier	options		7328565	1					
ANR	7328918	Identifier	~LEVEL_MASK		7328565	1					
ANR	7328919	MemberAccess	options [ j ] . opt		7328565	1					
ANR	7328920	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328921	Identifier	options		7328565	0					
ANR	7328922	Identifier	j		7328565	1					
ANR	7328923	Identifier	opt		7328565	1					
ANR	7328924	ElseStatement	else		7328565	0					
ANR	7328925	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%.*s: messages cannot be turned off individually; set a message level"" , i , arg )"	1477:12:46633:46765	7328565	0	True				
ANR	7328926	CallExpression	"display_log ( dp , USER_ERROR , ""%.*s: messages cannot be turned off individually; set a message level"" , i , arg )"		7328565	0					
ANR	7328927	Callee	display_log		7328565	0					
ANR	7328928	Identifier	display_log		7328565	0					
ANR	7328929	ArgumentList	dp		7328565	1					
ANR	7328930	Argument	dp		7328565	0					
ANR	7328931	Identifier	dp		7328565	0					
ANR	7328932	Argument	USER_ERROR		7328565	1					
ANR	7328933	Identifier	USER_ERROR		7328565	0					
ANR	7328934	Argument	"""%.*s: messages cannot be turned off individually; set a message level"""		7328565	2					
ANR	7328935	PrimaryExpression	"""%.*s: messages cannot be turned off individually; set a message level"""		7328565	0					
ANR	7328936	Argument	i		7328565	3					
ANR	7328937	Identifier	i		7328565	0					
ANR	7328938	Argument	arg		7328565	4					
ANR	7328939	Identifier	arg		7328565	0					
ANR	7328940	ElseStatement	else		7328565	0					
ANR	7328941	IfStatement	if ( options [ j ] . opt < OPTION )		7328565	0					
ANR	7328942	Condition	options [ j ] . opt < OPTION	1482:15:46791:46813	7328565	0	True				
ANR	7328943	RelationalExpression	options [ j ] . opt < OPTION		7328565	0		<			
ANR	7328944	MemberAccess	options [ j ] . opt		7328565	0					
ANR	7328945	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328946	Identifier	options		7328565	0					
ANR	7328947	Identifier	j		7328565	1					
ANR	7328948	Identifier	opt		7328565	1					
ANR	7328949	Identifier	OPTION		7328565	1					
ANR	7328950	CompoundStatement		110:6:3132:3132	7328565	1					
ANR	7328951	IfStatement	if ( val )		7328565	0					
ANR	7328952	Condition	val	1484:13:46837:46839	7328565	0	True				
ANR	7328953	Identifier	val		7328565	0					
ANR	7328954	ExpressionStatement	dp -> options |= options [ j ] . opt	1485:12:46854:46883	7328565	1	True				
ANR	7328955	AssignmentExpression	dp -> options |= options [ j ] . opt		7328565	0		|=			
ANR	7328956	PtrMemberAccess	dp -> options		7328565	0					
ANR	7328957	Identifier	dp		7328565	0					
ANR	7328958	Identifier	options		7328565	1					
ANR	7328959	MemberAccess	options [ j ] . opt		7328565	1					
ANR	7328960	ArrayIndexing	options [ j ]		7328565	0					
ANR	7328961	Identifier	options		7328565	0					
ANR	7328962	Identifier	j		7328565	1					
ANR	7328963	Identifier	opt		7328565	1					
ANR	7328964	ElseStatement	else		7328565	0					
ANR	7328965	ExpressionStatement	dp -> options &= ~options [ j ] . opt	1488:12:46912:46942	7328565	0	True				
ANR	7328966	AssignmentExpression	dp -> options &= ~options [ j ] . opt		7328565	0		&=			
ANR	7328967	PtrMemberAccess	dp -> options		7328565	0					
ANR	7328968	Identifier	dp		7328565	0					
ANR	7328969	Identifier	options		7328565	1					
ANR	7328970	MemberAccess	~options [ j ] . opt		7328565	1					
ANR	7328971	ArrayIndexing	~options [ j ]		7328565	0					
ANR	7328972	Identifier	~options		7328565	0					
ANR	7328973	Identifier	j		7328565	1					
ANR	7328974	Identifier	opt		7328565	1					
ANR	7328975	ReturnStatement	return 1 ;	1491:6:46959:46967	7328565	8	True				
ANR	7328976	PrimaryExpression	1		7328565	0					
ANR	7328977	ElseStatement	else		7328565	0					
ANR	7328978	ReturnStatement	return 0 ;	1495:6:47013:47021	7328565	0	True				
ANR	7328979	PrimaryExpression	0		7328565	0					
ANR	7328980	ReturnType	static int		7328565	1					
ANR	7328981	Identifier	opt_check		7328565	2					
ANR	7328982	ParameterList	"struct display * dp , const char * arg"		7328565	3					
ANR	7328983	Parameter	struct display * dp	1373:10:43652:43669	7328565	0	True				
ANR	7328984	ParameterType	struct display *		7328565	0					
ANR	7328985	Identifier	dp		7328565	1					
ANR	7328986	Parameter	const char * arg	1373:30:43672:43686	7328565	1	True				
ANR	7328987	ParameterType	const char *		7328565	0					
ANR	7328988	Identifier	arg		7328565	1					
ANR	7328989	CFGEntryNode	ENTRY		7328565		True				
ANR	7328990	CFGExitNode	EXIT		7328565		True				
ANR	7328991	Symbol	* options [ j ] . values		7328565						
ANR	7328992	Symbol	dp		7328565						
ANR	7328993	Symbol	options [ j ] . opt		7328565						
ANR	7328994	Symbol	* options		7328565						
ANR	7328995	Symbol	* dp -> entry		7328565						
ANR	7328996	Symbol	* dp		7328565						
ANR	7328997	Symbol	strncmp		7328565						
ANR	7328998	Symbol	strlen		7328565						
ANR	7328999	Symbol	find_val		7328565						
ANR	7329000	Symbol	options [ j ] . values [ 0 ] . value		7328565						
ANR	7329001	Symbol	* negate		7328565						
ANR	7329002	Symbol	dp -> errset		7328565						
ANR	7329003	Symbol	arg		7328565						
ANR	7329004	Symbol	options		7328565						
ANR	7329005	Symbol	options [ j ] . values		7328565						
ANR	7329006	Symbol	option_index		7328565						
ANR	7329007	Symbol	val		7328565						
ANR	7329008	Symbol	* * j		7328565						
ANR	7329009	Symbol	NULL		7328565						
ANR	7329010	Symbol	* ~options		7328565						
ANR	7329011	Symbol	USER_ERROR		7328565						
ANR	7329012	Symbol	LEVEL_MASK		7328565						
ANR	7329013	Symbol	dp -> options		7328565						
ANR	7329014	Symbol	OPTION		7328565						
ANR	7329015	Symbol	i		7328565						
ANR	7329016	Symbol	j		7328565						
ANR	7329017	Symbol	* * options		7328565						
ANR	7329018	Symbol	list		7328565						
ANR	7329019	Symbol	dp -> entry		7328565						
ANR	7329020	Symbol	iv		7328565						
ANR	7329021	Symbol	* iv		7328565						
ANR	7329022	Symbol	dp -> value		7328565						
ANR	7329023	Symbol	* i		7328565						
ANR	7329024	Symbol	* j		7328565						
ANR	7329025	Symbol	options [ j ] . values [ negate ] . value		7328565						
ANR	7329026	Symbol	~LEVEL_MASK		7328565						
ANR	7329027	Symbol	* list		7328565						
ANR	7329028	Symbol	negate		7328565						
ANR	7329029	Symbol	v		7328565						
ANR	7329030	Symbol	* dp -> value		7328565						
ANR	7329031	Symbol	~options [ j ] . opt		7328565						
ANR	7329032	Symbol	~v		7328565						
ANR	7329033	Symbol	* * dp		7328565						
ANR	7329034	Symbol	~options		7328565						
ANR	7329035	Symbol	LIST		7328565						
ANR	7329036	Symbol	* arg		7328565						
ANR	7329037	Function	set_timer	1499:0:47080:47450							
ANR	7329038	FunctionDef	"set_timer (struct display * dp , struct timespec * timer)"		7329037	0					
ANR	7329039	CompoundStatement		1501:0:47146:47450	7329037	0					
ANR	7329040	IfStatement	"if ( clock_gettime ( CLOCK_PROCESS_CPUTIME_ID , timer ) )"		7329037	0					
ANR	7329041	Condition	"clock_gettime ( CLOCK_PROCESS_CPUTIME_ID , timer )"	1503:7:47225:47270	7329037	0	True				
ANR	7329042	CallExpression	"clock_gettime ( CLOCK_PROCESS_CPUTIME_ID , timer )"		7329037	0					
ANR	7329043	Callee	clock_gettime		7329037	0					
ANR	7329044	Identifier	clock_gettime		7329037	0					
ANR	7329045	ArgumentList	CLOCK_PROCESS_CPUTIME_ID		7329037	1					
ANR	7329046	Argument	CLOCK_PROCESS_CPUTIME_ID		7329037	0					
ANR	7329047	Identifier	CLOCK_PROCESS_CPUTIME_ID		7329037	0					
ANR	7329048	Argument	timer		7329037	1					
ANR	7329049	Identifier	timer		7329037	0					
ANR	7329050	CompoundStatement		4:3:129:129	7329037	1					
ANR	7329051	ExpressionStatement	"display_log ( dp , APP_ERROR , ""CLOCK_PROCESS_CPUTIME_ID: %s: timing disabled\\n"" , strerror ( errno ) )"	1505:6:47284:47390	7329037	0	True				
ANR	7329052	CallExpression	"display_log ( dp , APP_ERROR , ""CLOCK_PROCESS_CPUTIME_ID: %s: timing disabled\\n"" , strerror ( errno ) )"		7329037	0					
ANR	7329053	Callee	display_log		7329037	0					
ANR	7329054	Identifier	display_log		7329037	0					
ANR	7329055	ArgumentList	dp		7329037	1					
ANR	7329056	Argument	dp		7329037	0					
ANR	7329057	Identifier	dp		7329037	0					
ANR	7329058	Argument	APP_ERROR		7329037	1					
ANR	7329059	Identifier	APP_ERROR		7329037	0					
ANR	7329060	Argument	"""CLOCK_PROCESS_CPUTIME_ID: %s: timing disabled\\n"""		7329037	2					
ANR	7329061	PrimaryExpression	"""CLOCK_PROCESS_CPUTIME_ID: %s: timing disabled\\n"""		7329037	0					
ANR	7329062	Argument	strerror ( errno )		7329037	3					
ANR	7329063	CallExpression	strerror ( errno )		7329037	0					
ANR	7329064	Callee	strerror		7329037	0					
ANR	7329065	Identifier	strerror		7329037	0					
ANR	7329066	ArgumentList	errno		7329037	1					
ANR	7329067	Argument	errno		7329037	0					
ANR	7329068	Identifier	errno		7329037	0					
ANR	7329069	ExpressionStatement	"dp -> value [ OPTIND ( dp , time ) ] = 0"	1507:6:47398:47428	7329037	1	True				
ANR	7329070	AssignmentExpression	"dp -> value [ OPTIND ( dp , time ) ] = 0"		7329037	0		=			
ANR	7329071	ArrayIndexing	"dp -> value [ OPTIND ( dp , time ) ]"		7329037	0					
ANR	7329072	PtrMemberAccess	dp -> value		7329037	0					
ANR	7329073	Identifier	dp		7329037	0					
ANR	7329074	Identifier	value		7329037	1					
ANR	7329075	CallExpression	"OPTIND ( dp , time )"		7329037	1					
ANR	7329076	Callee	OPTIND		7329037	0					
ANR	7329077	Identifier	OPTIND		7329037	0					
ANR	7329078	ArgumentList	dp		7329037	1					
ANR	7329079	Argument	dp		7329037	0					
ANR	7329080	Identifier	dp		7329037	0					
ANR	7329081	Argument	time		7329037	1					
ANR	7329082	Identifier	time		7329037	0					
ANR	7329083	PrimaryExpression	0		7329037	1					
ANR	7329084	ReturnType	static void		7329037	1					
ANR	7329085	Identifier	set_timer		7329037	2					
ANR	7329086	ParameterList	"struct display * dp , struct timespec * timer"		7329037	3					
ANR	7329087	Parameter	struct display * dp	1500:10:47102:47119	7329037	0	True				
ANR	7329088	ParameterType	struct display *		7329037	0					
ANR	7329089	Identifier	dp		7329037	1					
ANR	7329090	Parameter	struct timespec * timer	1500:30:47122:47143	7329037	1	True				
ANR	7329091	ParameterType	struct timespec *		7329037	0					
ANR	7329092	Identifier	timer		7329037	1					
ANR	7329093	CFGEntryNode	ENTRY		7329037		True				
ANR	7329094	CFGExitNode	EXIT		7329037		True				
ANR	7329095	Symbol	errno		7329037						
ANR	7329096	Symbol	dp		7329037						
ANR	7329097	Symbol	CLOCK_PROCESS_CPUTIME_ID		7329037						
ANR	7329098	Symbol	strerror		7329037						
ANR	7329099	Symbol	timer		7329037						
ANR	7329100	Symbol	OPTIND		7329037						
ANR	7329101	Symbol	* dp		7329037						
ANR	7329102	Symbol	dp -> value		7329037						
ANR	7329103	Symbol	* OPTIND		7329037						
ANR	7329104	Symbol	APP_ERROR		7329037						
ANR	7329105	Symbol	* dp -> value		7329037						
ANR	7329106	Symbol	clock_gettime		7329037						
ANR	7329107	Symbol	* * dp		7329037						
ANR	7329108	Symbol	time		7329037						
ANR	7329109	Function	start_timer	1511:0:47453:47639							
ANR	7329110	FunctionDef	"start_timer (struct display * dp , int what)"		7329109	0					
ANR	7329111	CompoundStatement		1513:0:47507:47639	7329109	0					
ANR	7329112	IfStatement	"if ( ( dp -> value [ OPTIND ( dp , time ) ] & what ) != 0 )"		7329109	0					
ANR	7329113	Condition	"( dp -> value [ OPTIND ( dp , time ) ] & what ) != 0"	1514:7:47516:47555	7329109	0	True				
ANR	7329114	EqualityExpression	"( dp -> value [ OPTIND ( dp , time ) ] & what ) != 0"		7329109	0		!=			
ANR	7329115	BitAndExpression	"dp -> value [ OPTIND ( dp , time ) ] & what"		7329109	0		&			
ANR	7329116	ArrayIndexing	"dp -> value [ OPTIND ( dp , time ) ]"		7329109	0					
ANR	7329117	PtrMemberAccess	dp -> value		7329109	0					
ANR	7329118	Identifier	dp		7329109	0					
ANR	7329119	Identifier	value		7329109	1					
ANR	7329120	CallExpression	"OPTIND ( dp , time )"		7329109	1					
ANR	7329121	Callee	OPTIND		7329109	0					
ANR	7329122	Identifier	OPTIND		7329109	0					
ANR	7329123	ArgumentList	dp		7329109	1					
ANR	7329124	Argument	dp		7329109	0					
ANR	7329125	Identifier	dp		7329109	0					
ANR	7329126	Argument	time		7329109	1					
ANR	7329127	Identifier	time		7329109	0					
ANR	7329128	Identifier	what		7329109	1					
ANR	7329129	PrimaryExpression	0		7329109	1					
ANR	7329130	ExpressionStatement	"set_timer ( dp , what == PNGCP_TIME_READ ? & dp -> read_time : & dp -> write_time )"	1515:6:47564:47637	7329109	1	True				
ANR	7329131	CallExpression	"set_timer ( dp , what == PNGCP_TIME_READ ? & dp -> read_time : & dp -> write_time )"		7329109	0					
ANR	7329132	Callee	set_timer		7329109	0					
ANR	7329133	Identifier	set_timer		7329109	0					
ANR	7329134	ArgumentList	dp		7329109	1					
ANR	7329135	Argument	dp		7329109	0					
ANR	7329136	Identifier	dp		7329109	0					
ANR	7329137	Argument	what == PNGCP_TIME_READ ? & dp -> read_time : & dp -> write_time		7329109	1					
ANR	7329138	ConditionalExpression	what == PNGCP_TIME_READ ? & dp -> read_time : & dp -> write_time		7329109	0					
ANR	7329139	Condition	what == PNGCP_TIME_READ		7329109	0					
ANR	7329140	EqualityExpression	what == PNGCP_TIME_READ		7329109	0		==			
ANR	7329141	Identifier	what		7329109	0					
ANR	7329142	Identifier	PNGCP_TIME_READ		7329109	1					
ANR	7329143	UnaryOperationExpression	& dp -> read_time		7329109	1					
ANR	7329144	UnaryOperator	&		7329109	0					
ANR	7329145	PtrMemberAccess	dp -> read_time		7329109	1					
ANR	7329146	Identifier	dp		7329109	0					
ANR	7329147	Identifier	read_time		7329109	1					
ANR	7329148	UnaryOperationExpression	& dp -> write_time		7329109	2					
ANR	7329149	UnaryOperator	&		7329109	0					
ANR	7329150	PtrMemberAccess	dp -> write_time		7329109	1					
ANR	7329151	Identifier	dp		7329109	0					
ANR	7329152	Identifier	write_time		7329109	1					
ANR	7329153	ReturnType	static void		7329109	1					
ANR	7329154	Identifier	start_timer		7329109	2					
ANR	7329155	ParameterList	"struct display * dp , int what"		7329109	3					
ANR	7329156	Parameter	struct display * dp	1512:12:47477:47494	7329109	0	True				
ANR	7329157	ParameterType	struct display *		7329109	0					
ANR	7329158	Identifier	dp		7329109	1					
ANR	7329159	Parameter	int what	1512:32:47497:47504	7329109	1	True				
ANR	7329160	ParameterType	int		7329109	0					
ANR	7329161	Identifier	what		7329109	1					
ANR	7329162	CFGEntryNode	ENTRY		7329109		True				
ANR	7329163	CFGExitNode	EXIT		7329109		True				
ANR	7329164	Symbol	* dp		7329109						
ANR	7329165	Symbol	OPTIND		7329109						
ANR	7329166	Symbol	dp -> value		7329109						
ANR	7329167	Symbol	what		7329109						
ANR	7329168	Symbol	PNGCP_TIME_READ		7329109						
ANR	7329169	Symbol	* OPTIND		7329109						
ANR	7329170	Symbol	* dp -> value		7329109						
ANR	7329171	Symbol	* * dp		7329109						
ANR	7329172	Symbol	time		7329109						
ANR	7329173	Symbol	dp		7329109						
ANR	7329174	Symbol	& dp -> write_time		7329109						
ANR	7329175	Symbol	& dp -> read_time		7329109						
ANR	7329176	Function	end_timer	1518:0:47642:48544							
ANR	7329177	FunctionDef	"end_timer (struct display * dp , int what)"		7329176	0					
ANR	7329178	CompoundStatement		1520:0:47694:48544	7329176	0					
ANR	7329179	IfStatement	"if ( ( dp -> value [ OPTIND ( dp , time ) ] & what ) != 0 )"		7329176	0					
ANR	7329180	Condition	"( dp -> value [ OPTIND ( dp , time ) ] & what ) != 0"	1521:7:47703:47742	7329176	0	True				
ANR	7329181	EqualityExpression	"( dp -> value [ OPTIND ( dp , time ) ] & what ) != 0"		7329176	0		!=			
ANR	7329182	BitAndExpression	"dp -> value [ OPTIND ( dp , time ) ] & what"		7329176	0		&			
ANR	7329183	ArrayIndexing	"dp -> value [ OPTIND ( dp , time ) ]"		7329176	0					
ANR	7329184	PtrMemberAccess	dp -> value		7329176	0					
ANR	7329185	Identifier	dp		7329176	0					
ANR	7329186	Identifier	value		7329176	1					
ANR	7329187	CallExpression	"OPTIND ( dp , time )"		7329176	1					
ANR	7329188	Callee	OPTIND		7329176	0					
ANR	7329189	Identifier	OPTIND		7329176	0					
ANR	7329190	ArgumentList	dp		7329176	1					
ANR	7329191	Argument	dp		7329176	0					
ANR	7329192	Identifier	dp		7329176	0					
ANR	7329193	Argument	time		7329176	1					
ANR	7329194	Identifier	time		7329176	0					
ANR	7329195	Identifier	what		7329176	1					
ANR	7329196	PrimaryExpression	0		7329176	1					
ANR	7329197	CompoundStatement		4:6:61:83	7329176	1					
ANR	7329198	IdentifierDeclStatement	"struct timespec t , tmp ;"	1523:6:47756:47778	7329176	0	True				
ANR	7329199	IdentifierDecl	t		7329176	0					
ANR	7329200	IdentifierDeclType	struct timespec		7329176	0					
ANR	7329201	Identifier	t		7329176	1					
ANR	7329202	IdentifierDecl	tmp		7329176	1					
ANR	7329203	IdentifierDeclType	struct timespec		7329176	0					
ANR	7329204	Identifier	tmp		7329176	1					
ANR	7329205	ExpressionStatement	"set_timer ( dp , & t )"	1525:6:47787:47804	7329176	1	True				
ANR	7329206	CallExpression	"set_timer ( dp , & t )"		7329176	0					
ANR	7329207	Callee	set_timer		7329176	0					
ANR	7329208	Identifier	set_timer		7329176	0					
ANR	7329209	ArgumentList	dp		7329176	1					
ANR	7329210	Argument	dp		7329176	0					
ANR	7329211	Identifier	dp		7329176	0					
ANR	7329212	Argument	& t		7329176	1					
ANR	7329213	UnaryOperationExpression	& t		7329176	0					
ANR	7329214	UnaryOperator	&		7329176	0					
ANR	7329215	Identifier	t		7329176	1					
ANR	7329216	IfStatement	if ( what == PNGCP_TIME_READ )		7329176	2					
ANR	7329217	Condition	what == PNGCP_TIME_READ	1527:10:47817:47839	7329176	0	True				
ANR	7329218	EqualityExpression	what == PNGCP_TIME_READ		7329176	0		==			
ANR	7329219	Identifier	what		7329176	0					
ANR	7329220	Identifier	PNGCP_TIME_READ		7329176	1					
ANR	7329221	ExpressionStatement	tmp = dp -> read_time	1528:9:47851:47870	7329176	1	True				
ANR	7329222	AssignmentExpression	tmp = dp -> read_time		7329176	0		=			
ANR	7329223	Identifier	tmp		7329176	0					
ANR	7329224	PtrMemberAccess	dp -> read_time		7329176	1					
ANR	7329225	Identifier	dp		7329176	0					
ANR	7329226	Identifier	read_time		7329176	1					
ANR	7329227	ElseStatement	else		7329176	0					
ANR	7329228	ExpressionStatement	tmp = dp -> write_time	1531:9:47893:47913	7329176	0	True				
ANR	7329229	AssignmentExpression	tmp = dp -> write_time		7329176	0		=			
ANR	7329230	Identifier	tmp		7329176	0					
ANR	7329231	PtrMemberAccess	dp -> write_time		7329176	1					
ANR	7329232	Identifier	dp		7329176	0					
ANR	7329233	Identifier	write_time		7329176	1					
ANR	7329234	ExpressionStatement	t . tv_sec -= tmp . tv_sec	1533:6:47922:47944	7329176	3	True				
ANR	7329235	AssignmentExpression	t . tv_sec -= tmp . tv_sec		7329176	0		-=			
ANR	7329236	MemberAccess	t . tv_sec		7329176	0					
ANR	7329237	Identifier	t		7329176	0					
ANR	7329238	Identifier	tv_sec		7329176	1					
ANR	7329239	MemberAccess	tmp . tv_sec		7329176	1					
ANR	7329240	Identifier	tmp		7329176	0					
ANR	7329241	Identifier	tv_sec		7329176	1					
ANR	7329242	ExpressionStatement	t . tv_nsec -= tmp . tv_nsec	1534:6:47952:47976	7329176	4	True				
ANR	7329243	AssignmentExpression	t . tv_nsec -= tmp . tv_nsec		7329176	0		-=			
ANR	7329244	MemberAccess	t . tv_nsec		7329176	0					
ANR	7329245	Identifier	t		7329176	0					
ANR	7329246	Identifier	tv_nsec		7329176	1					
ANR	7329247	MemberAccess	tmp . tv_nsec		7329176	1					
ANR	7329248	Identifier	tmp		7329176	0					
ANR	7329249	Identifier	tv_nsec		7329176	1					
ANR	7329250	IfStatement	if ( t . tv_nsec < 0 )		7329176	5					
ANR	7329251	Condition	t . tv_nsec < 0	1536:10:47989:48001	7329176	0	True				
ANR	7329252	RelationalExpression	t . tv_nsec < 0		7329176	0		<			
ANR	7329253	MemberAccess	t . tv_nsec		7329176	0					
ANR	7329254	Identifier	t		7329176	0					
ANR	7329255	Identifier	tv_nsec		7329176	1					
ANR	7329256	PrimaryExpression	0		7329176	1					
ANR	7329257	CompoundStatement		18:6:315:315	7329176	1					
ANR	7329258	ExpressionStatement	-- ( t . tv_sec )	1538:9:48021:48033	7329176	0	True				
ANR	7329259	UnaryExpression	-- ( t . tv_sec )		7329176	0					
ANR	7329260	IncDec	--		7329176	0					
ANR	7329261	MemberAccess	t . tv_sec		7329176	1					
ANR	7329262	Identifier	t		7329176	0					
ANR	7329263	Identifier	tv_sec		7329176	1					
ANR	7329264	ExpressionStatement	t . tv_nsec += 1000000000L	1539:9:48044:48068	7329176	1	True				
ANR	7329265	AssignmentExpression	t . tv_nsec += 1000000000L		7329176	0		+=			
ANR	7329266	MemberAccess	t . tv_nsec		7329176	0					
ANR	7329267	Identifier	t		7329176	0					
ANR	7329268	Identifier	tv_nsec		7329176	1					
ANR	7329269	PrimaryExpression	1000000000L		7329176	1					
ANR	7329270	IfStatement	if ( what == PNGCP_TIME_READ )		7329176	6					
ANR	7329271	Condition	what == PNGCP_TIME_READ	1542:10:48089:48111	7329176	0	True				
ANR	7329272	EqualityExpression	what == PNGCP_TIME_READ		7329176	0		==			
ANR	7329273	Identifier	what		7329176	0					
ANR	7329274	Identifier	PNGCP_TIME_READ		7329176	1					
ANR	7329275	ExpressionStatement	"dp -> read_time = t , tmp = dp -> read_time_total"	1543:9:48123:48167	7329176	1	True				
ANR	7329276	Expression	"dp -> read_time = t , tmp = dp -> read_time_total"		7329176	0					
ANR	7329277	AssignmentExpression	dp -> read_time = t		7329176	0		=			
ANR	7329278	PtrMemberAccess	dp -> read_time		7329176	0					
ANR	7329279	Identifier	dp		7329176	0					
ANR	7329280	Identifier	read_time		7329176	1					
ANR	7329281	Identifier	t		7329176	1					
ANR	7329282	AssignmentExpression	tmp = dp -> read_time_total		7329176	1		=			
ANR	7329283	Identifier	tmp		7329176	0					
ANR	7329284	PtrMemberAccess	dp -> read_time_total		7329176	1					
ANR	7329285	Identifier	dp		7329176	0					
ANR	7329286	Identifier	read_time_total		7329176	1					
ANR	7329287	ElseStatement	else		7329176	0					
ANR	7329288	ExpressionStatement	"dp -> write_time = t , tmp = dp -> write_time_total"	1546:9:48190:48236	7329176	0	True				
ANR	7329289	Expression	"dp -> write_time = t , tmp = dp -> write_time_total"		7329176	0					
ANR	7329290	AssignmentExpression	dp -> write_time = t		7329176	0		=			
ANR	7329291	PtrMemberAccess	dp -> write_time		7329176	0					
ANR	7329292	Identifier	dp		7329176	0					
ANR	7329293	Identifier	write_time		7329176	1					
ANR	7329294	Identifier	t		7329176	1					
ANR	7329295	AssignmentExpression	tmp = dp -> write_time_total		7329176	1		=			
ANR	7329296	Identifier	tmp		7329176	0					
ANR	7329297	PtrMemberAccess	dp -> write_time_total		7329176	1					
ANR	7329298	Identifier	dp		7329176	0					
ANR	7329299	Identifier	write_time_total		7329176	1					
ANR	7329300	ExpressionStatement	tmp . tv_sec += t . tv_sec	1548:6:48245:48267	7329176	7	True				
ANR	7329301	AssignmentExpression	tmp . tv_sec += t . tv_sec		7329176	0		+=			
ANR	7329302	MemberAccess	tmp . tv_sec		7329176	0					
ANR	7329303	Identifier	tmp		7329176	0					
ANR	7329304	Identifier	tv_sec		7329176	1					
ANR	7329305	MemberAccess	t . tv_sec		7329176	1					
ANR	7329306	Identifier	t		7329176	0					
ANR	7329307	Identifier	tv_sec		7329176	1					
ANR	7329308	ExpressionStatement	tmp . tv_nsec += t . tv_nsec	1549:6:48275:48299	7329176	8	True				
ANR	7329309	AssignmentExpression	tmp . tv_nsec += t . tv_nsec		7329176	0		+=			
ANR	7329310	MemberAccess	tmp . tv_nsec		7329176	0					
ANR	7329311	Identifier	tmp		7329176	0					
ANR	7329312	Identifier	tv_nsec		7329176	1					
ANR	7329313	MemberAccess	t . tv_nsec		7329176	1					
ANR	7329314	Identifier	t		7329176	0					
ANR	7329315	Identifier	tv_nsec		7329176	1					
ANR	7329316	IfStatement	if ( tmp . tv_nsec >= 1000000000L )		7329176	9					
ANR	7329317	Condition	tmp . tv_nsec >= 1000000000L	1551:10:48312:48337	7329176	0	True				
ANR	7329318	RelationalExpression	tmp . tv_nsec >= 1000000000L		7329176	0		>=			
ANR	7329319	MemberAccess	tmp . tv_nsec		7329176	0					
ANR	7329320	Identifier	tmp		7329176	0					
ANR	7329321	Identifier	tv_nsec		7329176	1					
ANR	7329322	PrimaryExpression	1000000000L		7329176	1					
ANR	7329323	CompoundStatement		33:6:651:651	7329176	1					
ANR	7329324	ExpressionStatement	++ ( tmp . tv_sec )	1553:9:48357:48371	7329176	0	True				
ANR	7329325	UnaryExpression	++ ( tmp . tv_sec )		7329176	0					
ANR	7329326	IncDec	++		7329176	0					
ANR	7329327	MemberAccess	tmp . tv_sec		7329176	1					
ANR	7329328	Identifier	tmp		7329176	0					
ANR	7329329	Identifier	tv_sec		7329176	1					
ANR	7329330	ExpressionStatement	tmp . tv_nsec -= 1000000000L	1554:9:48382:48408	7329176	1	True				
ANR	7329331	AssignmentExpression	tmp . tv_nsec -= 1000000000L		7329176	0		-=			
ANR	7329332	MemberAccess	tmp . tv_nsec		7329176	0					
ANR	7329333	Identifier	tmp		7329176	0					
ANR	7329334	Identifier	tv_nsec		7329176	1					
ANR	7329335	PrimaryExpression	1000000000L		7329176	1					
ANR	7329336	IfStatement	if ( what == PNGCP_TIME_READ )		7329176	10					
ANR	7329337	Condition	what == PNGCP_TIME_READ	1557:10:48429:48451	7329176	0	True				
ANR	7329338	EqualityExpression	what == PNGCP_TIME_READ		7329176	0		==			
ANR	7329339	Identifier	what		7329176	0					
ANR	7329340	Identifier	PNGCP_TIME_READ		7329176	1					
ANR	7329341	ExpressionStatement	dp -> read_time_total = tmp	1558:9:48463:48488	7329176	1	True				
ANR	7329342	AssignmentExpression	dp -> read_time_total = tmp		7329176	0		=			
ANR	7329343	PtrMemberAccess	dp -> read_time_total		7329176	0					
ANR	7329344	Identifier	dp		7329176	0					
ANR	7329345	Identifier	read_time_total		7329176	1					
ANR	7329346	Identifier	tmp		7329176	1					
ANR	7329347	ElseStatement	else		7329176	0					
ANR	7329348	ExpressionStatement	dp -> write_time_total = tmp	1561:9:48511:48537	7329176	0	True				
ANR	7329349	AssignmentExpression	dp -> write_time_total = tmp		7329176	0		=			
ANR	7329350	PtrMemberAccess	dp -> write_time_total		7329176	0					
ANR	7329351	Identifier	dp		7329176	0					
ANR	7329352	Identifier	write_time_total		7329176	1					
ANR	7329353	Identifier	tmp		7329176	1					
ANR	7329354	ReturnType	static void		7329176	1					
ANR	7329355	Identifier	end_timer		7329176	2					
ANR	7329356	ParameterList	"struct display * dp , int what"		7329176	3					
ANR	7329357	Parameter	struct display * dp	1519:10:47664:47681	7329176	0	True				
ANR	7329358	ParameterType	struct display *		7329176	0					
ANR	7329359	Identifier	dp		7329176	1					
ANR	7329360	Parameter	int what	1519:30:47684:47691	7329176	1	True				
ANR	7329361	ParameterType	int		7329176	0					
ANR	7329362	Identifier	what		7329176	1					
ANR	7329363	CFGEntryNode	ENTRY		7329176		True				
ANR	7329364	CFGExitNode	EXIT		7329176		True				
ANR	7329365	Symbol	t . tv_sec		7329176						
ANR	7329366	Symbol	PNGCP_TIME_READ		7329176						
ANR	7329367	Symbol	dp -> write_time		7329176						
ANR	7329368	Symbol	tmp . tv_sec		7329176						
ANR	7329369	Symbol	tmp . tv_nsec		7329176						
ANR	7329370	Symbol	dp		7329176						
ANR	7329371	Symbol	* dp		7329176						
ANR	7329372	Symbol	OPTIND		7329176						
ANR	7329373	Symbol	dp -> value		7329176						
ANR	7329374	Symbol	what		7329176						
ANR	7329375	Symbol	* OPTIND		7329176						
ANR	7329376	Symbol	t		7329176						
ANR	7329377	Symbol	tmp		7329176						
ANR	7329378	Symbol	* dp -> value		7329176						
ANR	7329379	Symbol	dp -> read_time		7329176						
ANR	7329380	Symbol	* * dp		7329176						
ANR	7329381	Symbol	& t		7329176						
ANR	7329382	Symbol	time		7329176						
ANR	7329383	Symbol	dp -> write_time_total		7329176						
ANR	7329384	Symbol	dp -> read_time_total		7329176						
ANR	7329385	Symbol	t . tv_nsec		7329176						
ANR	7329386	Function	print_time	1565:0:48547:48680							
ANR	7329387	FunctionDef	"print_time (const char * what , struct timespec t)"		7329386	0					
ANR	7329388	CompoundStatement		1567:0:48607:48680	7329386	0					
ANR	7329389	ExpressionStatement	"printf ( ""%s %.2lu.%.9ld"" , what , ( unsigned long ) t . tv_sec , t . tv_nsec )"	1568:3:48612:48678	7329386	0	True				
ANR	7329390	CallExpression	"printf ( ""%s %.2lu.%.9ld"" , what , ( unsigned long ) t . tv_sec , t . tv_nsec )"		7329386	0					
ANR	7329391	Callee	printf		7329386	0					
ANR	7329392	Identifier	printf		7329386	0					
ANR	7329393	ArgumentList	"""%s %.2lu.%.9ld"""		7329386	1					
ANR	7329394	Argument	"""%s %.2lu.%.9ld"""		7329386	0					
ANR	7329395	PrimaryExpression	"""%s %.2lu.%.9ld"""		7329386	0					
ANR	7329396	Argument	what		7329386	1					
ANR	7329397	Identifier	what		7329386	0					
ANR	7329398	Argument	( unsigned long ) t . tv_sec		7329386	2					
ANR	7329399	CastExpression	( unsigned long ) t . tv_sec		7329386	0					
ANR	7329400	CastTarget	unsigned long		7329386	0					
ANR	7329401	MemberAccess	t . tv_sec		7329386	1					
ANR	7329402	Identifier	t		7329386	0					
ANR	7329403	Identifier	tv_sec		7329386	1					
ANR	7329404	Argument	t . tv_nsec		7329386	3					
ANR	7329405	MemberAccess	t . tv_nsec		7329386	0					
ANR	7329406	Identifier	t		7329386	0					
ANR	7329407	Identifier	tv_nsec		7329386	1					
ANR	7329408	ReturnType	static void		7329386	1					
ANR	7329409	Identifier	print_time		7329386	2					
ANR	7329410	ParameterList	"const char * what , struct timespec t"		7329386	3					
ANR	7329411	Parameter	const char * what	1566:11:48570:48585	7329386	0	True				
ANR	7329412	ParameterType	const char *		7329386	0					
ANR	7329413	Identifier	what		7329386	1					
ANR	7329414	Parameter	struct timespec t	1566:29:48588:48604	7329386	1	True				
ANR	7329415	ParameterType	struct timespec		7329386	0					
ANR	7329416	Identifier	t		7329386	1					
ANR	7329417	CFGEntryNode	ENTRY		7329386		True				
ANR	7329418	CFGExitNode	EXIT		7329386		True				
ANR	7329419	Symbol	t . tv_sec		7329386						
ANR	7329420	Symbol	what		7329386						
ANR	7329421	Symbol	t		7329386						
ANR	7329422	Symbol	t . tv_nsec		7329386						
ANR	7329423	Function	checkdir	1578:0:48904:49029							
ANR	7329424	FunctionDef	checkdir (const char * pathname)		7329423	0					
ANR	7329425	CompoundStatement		1580:0:48946:49029	7329423	0					
ANR	7329426	IdentifierDeclStatement	struct stat buf ;	1581:3:48951:48966	7329423	0	True				
ANR	7329427	IdentifierDecl	buf		7329423	0					
ANR	7329428	IdentifierDeclType	struct stat		7329423	0					
ANR	7329429	Identifier	buf		7329423	1					
ANR	7329430	ReturnStatement	"return stat ( pathname , & buf ) == 0 && S_ISDIR ( buf . st_mode ) ;"	1582:3:48971:49027	7329423	1	True				
ANR	7329431	AndExpression	"stat ( pathname , & buf ) == 0 && S_ISDIR ( buf . st_mode )"		7329423	0		&&			
ANR	7329432	EqualityExpression	"stat ( pathname , & buf ) == 0"		7329423	0		==			
ANR	7329433	CallExpression	"stat ( pathname , & buf )"		7329423	0					
ANR	7329434	Callee	stat		7329423	0					
ANR	7329435	Identifier	stat		7329423	0					
ANR	7329436	ArgumentList	pathname		7329423	1					
ANR	7329437	Argument	pathname		7329423	0					
ANR	7329438	Identifier	pathname		7329423	0					
ANR	7329439	Argument	& buf		7329423	1					
ANR	7329440	UnaryOperationExpression	& buf		7329423	0					
ANR	7329441	UnaryOperator	&		7329423	0					
ANR	7329442	Identifier	buf		7329423	1					
ANR	7329443	PrimaryExpression	0		7329423	1					
ANR	7329444	CallExpression	S_ISDIR ( buf . st_mode )		7329423	1					
ANR	7329445	Callee	S_ISDIR		7329423	0					
ANR	7329446	Identifier	S_ISDIR		7329423	0					
ANR	7329447	ArgumentList	buf . st_mode		7329423	1					
ANR	7329448	Argument	buf . st_mode		7329423	0					
ANR	7329449	MemberAccess	buf . st_mode		7329423	0					
ANR	7329450	Identifier	buf		7329423	0					
ANR	7329451	Identifier	st_mode		7329423	1					
ANR	7329452	ReturnType	static int		7329423	1					
ANR	7329453	Identifier	checkdir		7329423	2					
ANR	7329454	ParameterList	const char * pathname		7329423	3					
ANR	7329455	Parameter	const char * pathname	1579:9:48924:48943	7329423	0	True				
ANR	7329456	ParameterType	const char *		7329423	0					
ANR	7329457	Identifier	pathname		7329423	1					
ANR	7329458	CFGEntryNode	ENTRY		7329423		True				
ANR	7329459	CFGExitNode	EXIT		7329423		True				
ANR	7329460	Symbol	buf		7329423						
ANR	7329461	Symbol	stat		7329423						
ANR	7329462	Symbol	buf . st_mode		7329423						
ANR	7329463	Symbol	S_ISDIR		7329423						
ANR	7329464	Symbol	& buf		7329423						
ANR	7329465	Symbol	pathname		7329423						
ANR	7329466	Function	isdir	1590:0:49208:50169							
ANR	7329467	FunctionDef	"isdir (struct display * dp , const char * pathname)"		7329466	0					
ANR	7329468	CompoundStatement		1592:0:49267:50169	7329466	0					
ANR	7329469	IfStatement	if ( pathname == NULL )		7329466	0					
ANR	7329470	Condition	pathname == NULL	1593:7:49276:49291	7329466	0	True				
ANR	7329471	EqualityExpression	pathname == NULL		7329466	0		==			
ANR	7329472	Identifier	pathname		7329466	0					
ANR	7329473	Identifier	NULL		7329466	1					
ANR	7329474	ReturnStatement	return 0 ;	1594:6:49300:49308	7329466	1	True				
ANR	7329475	PrimaryExpression	0		7329466	0					
ANR	7329476	ElseStatement	else		7329466	0					
ANR	7329477	IfStatement	if ( pathname [ 0 ] == 0 )		7329466	0					
ANR	7329478	Condition	pathname [ 0 ] == 0	1596:12:49336:49351	7329466	0	True				
ANR	7329479	EqualityExpression	pathname [ 0 ] == 0		7329466	0		==			
ANR	7329480	ArrayIndexing	pathname [ 0 ]		7329466	0					
ANR	7329481	Identifier	pathname		7329466	0					
ANR	7329482	PrimaryExpression	0		7329466	1					
ANR	7329483	PrimaryExpression	0		7329466	1					
ANR	7329484	ReturnStatement	return 1 ;	1597:6:49360:49368	7329466	1	True				
ANR	7329485	PrimaryExpression	1		7329466	0					
ANR	7329486	ElseStatement	else		7329466	0					
ANR	7329487	CompoundStatement		11:6:164:194	7329466	0					
ANR	7329488	IdentifierDeclStatement	struct stat buf ;	1601:6:49409:49424	7329466	0	True				
ANR	7329489	IdentifierDecl	buf		7329466	0					
ANR	7329490	IdentifierDeclType	struct stat		7329466	0					
ANR	7329491	Identifier	buf		7329466	1					
ANR	7329492	IdentifierDeclStatement	"int ret = stat ( pathname , & buf ) ;"	1602:6:49432:49462	7329466	1	True				
ANR	7329493	IdentifierDecl	"ret = stat ( pathname , & buf )"		7329466	0					
ANR	7329494	IdentifierDeclType	int		7329466	0					
ANR	7329495	Identifier	ret		7329466	1					
ANR	7329496	AssignmentExpression	"ret = stat ( pathname , & buf )"		7329466	2		=			
ANR	7329497	Identifier	ret		7329466	0					
ANR	7329498	CallExpression	"stat ( pathname , & buf )"		7329466	1					
ANR	7329499	Callee	stat		7329466	0					
ANR	7329500	Identifier	stat		7329466	0					
ANR	7329501	ArgumentList	pathname		7329466	1					
ANR	7329502	Argument	pathname		7329466	0					
ANR	7329503	Identifier	pathname		7329466	0					
ANR	7329504	Argument	& buf		7329466	1					
ANR	7329505	UnaryOperationExpression	& buf		7329466	0					
ANR	7329506	UnaryOperator	&		7329466	0					
ANR	7329507	Identifier	buf		7329466	1					
ANR	7329508	IfStatement	if ( ret == 0 )		7329466	2					
ANR	7329509	Condition	ret == 0	1604:10:49475:49482	7329466	0	True				
ANR	7329510	EqualityExpression	ret == 0		7329466	0		==			
ANR	7329511	Identifier	ret		7329466	0					
ANR	7329512	PrimaryExpression	0		7329466	1					
ANR	7329513	CompoundStatement		14:6:246:246	7329466	1					
ANR	7329514	IfStatement	if ( S_ISDIR ( buf . st_mode ) )		7329466	0					
ANR	7329515	Condition	S_ISDIR ( buf . st_mode )	1606:13:49529:49548	7329466	0	True				
ANR	7329516	CallExpression	S_ISDIR ( buf . st_mode )		7329466	0					
ANR	7329517	Callee	S_ISDIR		7329466	0					
ANR	7329518	Identifier	S_ISDIR		7329466	0					
ANR	7329519	ArgumentList	buf . st_mode		7329466	1					
ANR	7329520	Argument	buf . st_mode		7329466	0					
ANR	7329521	MemberAccess	buf . st_mode		7329466	0					
ANR	7329522	Identifier	buf		7329466	0					
ANR	7329523	Identifier	st_mode		7329466	1					
ANR	7329524	ReturnStatement	return 1 ;	1607:12:49563:49571	7329466	1	True				
ANR	7329525	PrimaryExpression	1		7329466	0					
ANR	7329526	IfStatement	"if ( access ( pathname , W_OK ) != 0 )"		7329466	1					
ANR	7329527	Condition	"access ( pathname , W_OK ) != 0"	1610:13:49656:49682	7329466	0	True				
ANR	7329528	EqualityExpression	"access ( pathname , W_OK ) != 0"		7329466	0		!=			
ANR	7329529	CallExpression	"access ( pathname , W_OK )"		7329466	0					
ANR	7329530	Callee	access		7329466	0					
ANR	7329531	Identifier	access		7329466	0					
ANR	7329532	ArgumentList	pathname		7329466	1					
ANR	7329533	Argument	pathname		7329466	0					
ANR	7329534	Identifier	pathname		7329466	0					
ANR	7329535	Argument	W_OK		7329466	1					
ANR	7329536	Identifier	W_OK		7329466	0					
ANR	7329537	PrimaryExpression	0		7329466	1					
ANR	7329538	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: cannot be written (%s)"" , pathname , strerror ( errno ) )"	1611:12:49697:49799	7329466	1	True				
ANR	7329539	CallExpression	"display_log ( dp , USER_ERROR , ""%s: cannot be written (%s)"" , pathname , strerror ( errno ) )"		7329466	0					
ANR	7329540	Callee	display_log		7329466	0					
ANR	7329541	Identifier	display_log		7329466	0					
ANR	7329542	ArgumentList	dp		7329466	1					
ANR	7329543	Argument	dp		7329466	0					
ANR	7329544	Identifier	dp		7329466	0					
ANR	7329545	Argument	USER_ERROR		7329466	1					
ANR	7329546	Identifier	USER_ERROR		7329466	0					
ANR	7329547	Argument	"""%s: cannot be written (%s)"""		7329466	2					
ANR	7329548	PrimaryExpression	"""%s: cannot be written (%s)"""		7329466	0					
ANR	7329549	Argument	pathname		7329466	3					
ANR	7329550	Identifier	pathname		7329466	0					
ANR	7329551	Argument	strerror ( errno )		7329466	4					
ANR	7329552	CallExpression	strerror ( errno )		7329466	0					
ANR	7329553	Callee	strerror		7329466	0					
ANR	7329554	Identifier	strerror		7329466	0					
ANR	7329555	ArgumentList	errno		7329466	1					
ANR	7329556	Argument	errno		7329466	0					
ANR	7329557	Identifier	errno		7329466	0					
ANR	7329558	ReturnStatement	return 0 ;	1614:9:49811:49819	7329466	2	True				
ANR	7329559	PrimaryExpression	0		7329466	0					
ANR	7329560	ElseStatement	else		7329466	0					
ANR	7329561	CompoundStatement		27:6:630:630	7329466	0					
ANR	7329562	IfStatement	if ( errno != ENOENT )		7329466	0					
ANR	7329563	Condition	errno != ENOENT	1620:13:49973:49987	7329466	0	True				
ANR	7329564	EqualityExpression	errno != ENOENT		7329466	0		!=			
ANR	7329565	Identifier	errno		7329466	0					
ANR	7329566	Identifier	ENOENT		7329466	1					
ANR	7329567	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: invalid output name (%s)"" , pathname , strerror ( errno ) )"	1621:12:50002:50106	7329466	1	True				
ANR	7329568	CallExpression	"display_log ( dp , USER_ERROR , ""%s: invalid output name (%s)"" , pathname , strerror ( errno ) )"		7329466	0					
ANR	7329569	Callee	display_log		7329466	0					
ANR	7329570	Identifier	display_log		7329466	0					
ANR	7329571	ArgumentList	dp		7329466	1					
ANR	7329572	Argument	dp		7329466	0					
ANR	7329573	Identifier	dp		7329466	0					
ANR	7329574	Argument	USER_ERROR		7329466	1					
ANR	7329575	Identifier	USER_ERROR		7329466	0					
ANR	7329576	Argument	"""%s: invalid output name (%s)"""		7329466	2					
ANR	7329577	PrimaryExpression	"""%s: invalid output name (%s)"""		7329466	0					
ANR	7329578	Argument	pathname		7329466	3					
ANR	7329579	Identifier	pathname		7329466	0					
ANR	7329580	Argument	strerror ( errno )		7329466	4					
ANR	7329581	CallExpression	strerror ( errno )		7329466	0					
ANR	7329582	Callee	strerror		7329466	0					
ANR	7329583	Identifier	strerror		7329466	0					
ANR	7329584	ArgumentList	errno		7329466	1					
ANR	7329585	Argument	errno		7329466	0					
ANR	7329586	Identifier	errno		7329466	0					
ANR	7329587	ReturnStatement	return 0 ;	1624:9:50118:50126	7329466	1	True				
ANR	7329588	PrimaryExpression	0		7329466	0					
ANR	7329589	ReturnType	static int		7329466	1					
ANR	7329590	Identifier	isdir		7329466	2					
ANR	7329591	ParameterList	"struct display * dp , const char * pathname"		7329466	3					
ANR	7329592	Parameter	struct display * dp	1591:6:49225:49242	7329466	0	True				
ANR	7329593	ParameterType	struct display *		7329466	0					
ANR	7329594	Identifier	dp		7329466	1					
ANR	7329595	Parameter	const char * pathname	1591:26:49245:49264	7329466	1	True				
ANR	7329596	ParameterType	const char *		7329466	0					
ANR	7329597	Identifier	pathname		7329466	1					
ANR	7329598	CFGEntryNode	ENTRY		7329466		True				
ANR	7329599	CFGExitNode	EXIT		7329466		True				
ANR	7329600	Symbol	ret		7329466						
ANR	7329601	Symbol	stat		7329466						
ANR	7329602	Symbol	errno		7329466						
ANR	7329603	Symbol	NULL		7329466						
ANR	7329604	Symbol	access		7329466						
ANR	7329605	Symbol	USER_ERROR		7329466						
ANR	7329606	Symbol	buf . st_mode		7329466						
ANR	7329607	Symbol	ENOENT		7329466						
ANR	7329608	Symbol	dp		7329466						
ANR	7329609	Symbol	W_OK		7329466						
ANR	7329610	Symbol	pathname		7329466						
ANR	7329611	Symbol	strerror		7329466						
ANR	7329612	Symbol	buf		7329466						
ANR	7329613	Symbol	S_ISDIR		7329466						
ANR	7329614	Symbol	& buf		7329466						
ANR	7329615	Symbol	* pathname		7329466						
ANR	7329616	Function	makename	1629:0:50172:51750							
ANR	7329617	FunctionDef	"makename (struct display * dp , const char * dir , const char * infile)"		7329616	0					
ANR	7329618	CompoundStatement		1631:0:50250:51750	7329616	0					
ANR	7329619	ExpressionStatement	dp -> namebuf [ 0 ] = 0	1633:3:50311:50329	7329616	0	True				
ANR	7329620	AssignmentExpression	dp -> namebuf [ 0 ] = 0		7329616	0		=			
ANR	7329621	ArrayIndexing	dp -> namebuf [ 0 ]		7329616	0					
ANR	7329622	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329623	Identifier	dp		7329616	0					
ANR	7329624	Identifier	namebuf		7329616	1					
ANR	7329625	PrimaryExpression	0		7329616	1					
ANR	7329626	PrimaryExpression	0		7329616	1					
ANR	7329627	IfStatement	if ( dir == NULL || infile == NULL )		7329616	1					
ANR	7329628	Condition	dir == NULL || infile == NULL	1635:7:50339:50367	7329616	0	True				
ANR	7329629	OrExpression	dir == NULL || infile == NULL		7329616	0		||			
ANR	7329630	EqualityExpression	dir == NULL		7329616	0		==			
ANR	7329631	Identifier	dir		7329616	0					
ANR	7329632	Identifier	NULL		7329616	1					
ANR	7329633	EqualityExpression	infile == NULL		7329616	1		==			
ANR	7329634	Identifier	infile		7329616	0					
ANR	7329635	Identifier	NULL		7329616	1					
ANR	7329636	ExpressionStatement	"display_log ( dp , INTERNAL_ERROR , ""NULL name to makename"" )"	1636:6:50376:50432	7329616	1	True				
ANR	7329637	CallExpression	"display_log ( dp , INTERNAL_ERROR , ""NULL name to makename"" )"		7329616	0					
ANR	7329638	Callee	display_log		7329616	0					
ANR	7329639	Identifier	display_log		7329616	0					
ANR	7329640	ArgumentList	dp		7329616	1					
ANR	7329641	Argument	dp		7329616	0					
ANR	7329642	Identifier	dp		7329616	0					
ANR	7329643	Argument	INTERNAL_ERROR		7329616	1					
ANR	7329644	Identifier	INTERNAL_ERROR		7329616	0					
ANR	7329645	Argument	"""NULL name to makename"""		7329616	2					
ANR	7329646	PrimaryExpression	"""NULL name to makename"""		7329616	0					
ANR	7329647	ElseStatement	else		7329616	0					
ANR	7329648	CompoundStatement		10:6:203:229	7329616	0					
ANR	7329649	IdentifierDeclStatement	size_t dsize = strlen ( dir ) ;	1640:6:50454:50480	7329616	0	True				
ANR	7329650	IdentifierDecl	dsize = strlen ( dir )		7329616	0					
ANR	7329651	IdentifierDeclType	size_t		7329616	0					
ANR	7329652	Identifier	dsize		7329616	1					
ANR	7329653	AssignmentExpression	dsize = strlen ( dir )		7329616	2		=			
ANR	7329654	Identifier	dsize		7329616	0					
ANR	7329655	CallExpression	strlen ( dir )		7329616	1					
ANR	7329656	Callee	strlen		7329616	0					
ANR	7329657	Identifier	strlen		7329616	0					
ANR	7329658	ArgumentList	dir		7329616	1					
ANR	7329659	Argument	dir		7329616	0					
ANR	7329660	Identifier	dir		7329616	0					
ANR	7329661	IfStatement	if ( dsize <= ( sizeof dp -> namebuf ) - 2 )		7329616	1					
ANR	7329662	Condition	dsize <= ( sizeof dp -> namebuf ) - 2	1642:10:50493:50523	7329616	0	True				
ANR	7329663	RelationalExpression	dsize <= ( sizeof dp -> namebuf ) - 2		7329616	0		<=			
ANR	7329664	Identifier	dsize		7329616	0					
ANR	7329665	AdditiveExpression	( sizeof dp -> namebuf ) - 2		7329616	1		-			
ANR	7329666	SizeofExpression	sizeof dp -> namebuf		7329616	0					
ANR	7329667	Sizeof	sizeof		7329616	0					
ANR	7329668	PtrMemberAccess	dp -> namebuf		7329616	1					
ANR	7329669	Identifier	dp		7329616	0					
ANR	7329670	Identifier	namebuf		7329616	1					
ANR	7329671	PrimaryExpression	2		7329616	1					
ANR	7329672	CompoundStatement		15:9:366:389	7329616	1					
ANR	7329673	IdentifierDeclStatement	size_t isize = strlen ( infile ) ;	1644:9:50577:50606	7329616	0	True				
ANR	7329674	IdentifierDecl	isize = strlen ( infile )		7329616	0					
ANR	7329675	IdentifierDeclType	size_t		7329616	0					
ANR	7329676	Identifier	isize		7329616	1					
ANR	7329677	AssignmentExpression	isize = strlen ( infile )		7329616	2		=			
ANR	7329678	Identifier	isize		7329616	0					
ANR	7329679	CallExpression	strlen ( infile )		7329616	1					
ANR	7329680	Callee	strlen		7329616	0					
ANR	7329681	Identifier	strlen		7329616	0					
ANR	7329682	ArgumentList	infile		7329616	1					
ANR	7329683	Argument	infile		7329616	0					
ANR	7329684	Identifier	infile		7329616	0					
ANR	7329685	IdentifierDeclStatement	size_t istart = isize - 1 ;	1645:9:50617:50640	7329616	1	True				
ANR	7329686	IdentifierDecl	istart = isize - 1		7329616	0					
ANR	7329687	IdentifierDeclType	size_t		7329616	0					
ANR	7329688	Identifier	istart		7329616	1					
ANR	7329689	AssignmentExpression	istart = isize - 1		7329616	2		=			
ANR	7329690	Identifier	istart		7329616	0					
ANR	7329691	AdditiveExpression	isize - 1		7329616	1		-			
ANR	7329692	Identifier	isize		7329616	0					
ANR	7329693	PrimaryExpression	1		7329616	1					
ANR	7329694	IfStatement	if ( infile [ istart ] == '/' )		7329616	2					
ANR	7329695	Condition	infile [ istart ] == '/'	1648:13:50701:50721	7329616	0	True				
ANR	7329696	EqualityExpression	infile [ istart ] == '/'		7329616	0		==			
ANR	7329697	ArrayIndexing	infile [ istart ]		7329616	0					
ANR	7329698	Identifier	infile		7329616	0					
ANR	7329699	Identifier	istart		7329616	1					
ANR	7329700	PrimaryExpression	'/'		7329616	1					
ANR	7329701	ExpressionStatement	"display_log ( dp , INTERNAL_ERROR , ""infile with trailing /"" )"	1649:12:50736:50793	7329616	1	True				
ANR	7329702	CallExpression	"display_log ( dp , INTERNAL_ERROR , ""infile with trailing /"" )"		7329616	0					
ANR	7329703	Callee	display_log		7329616	0					
ANR	7329704	Identifier	display_log		7329616	0					
ANR	7329705	ArgumentList	dp		7329616	1					
ANR	7329706	Argument	dp		7329616	0					
ANR	7329707	Identifier	dp		7329616	0					
ANR	7329708	Argument	INTERNAL_ERROR		7329616	1					
ANR	7329709	Identifier	INTERNAL_ERROR		7329616	0					
ANR	7329710	Argument	"""infile with trailing /"""		7329616	2					
ANR	7329711	PrimaryExpression	"""infile with trailing /"""		7329616	0					
ANR	7329712	ExpressionStatement	"memcpy ( dp -> namebuf , dir , dsize )"	1651:9:50805:50836	7329616	3	True				
ANR	7329713	CallExpression	"memcpy ( dp -> namebuf , dir , dsize )"		7329616	0					
ANR	7329714	Callee	memcpy		7329616	0					
ANR	7329715	Identifier	memcpy		7329616	0					
ANR	7329716	ArgumentList	dp -> namebuf		7329616	1					
ANR	7329717	Argument	dp -> namebuf		7329616	0					
ANR	7329718	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329719	Identifier	dp		7329616	0					
ANR	7329720	Identifier	namebuf		7329616	1					
ANR	7329721	Argument	dir		7329616	1					
ANR	7329722	Identifier	dir		7329616	0					
ANR	7329723	Argument	dsize		7329616	2					
ANR	7329724	Identifier	dsize		7329616	0					
ANR	7329725	IfStatement	if ( dsize > 0 && dp -> namebuf [ dsize - 1 ] != '/' )		7329616	4					
ANR	7329726	Condition	dsize > 0 && dp -> namebuf [ dsize - 1 ] != '/'	1652:13:50851:50890	7329616	0	True				
ANR	7329727	AndExpression	dsize > 0 && dp -> namebuf [ dsize - 1 ] != '/'		7329616	0		&&			
ANR	7329728	RelationalExpression	dsize > 0		7329616	0		>			
ANR	7329729	Identifier	dsize		7329616	0					
ANR	7329730	PrimaryExpression	0		7329616	1					
ANR	7329731	EqualityExpression	dp -> namebuf [ dsize - 1 ] != '/'		7329616	1		!=			
ANR	7329732	ArrayIndexing	dp -> namebuf [ dsize - 1 ]		7329616	0					
ANR	7329733	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329734	Identifier	dp		7329616	0					
ANR	7329735	Identifier	namebuf		7329616	1					
ANR	7329736	AdditiveExpression	dsize - 1		7329616	1		-			
ANR	7329737	Identifier	dsize		7329616	0					
ANR	7329738	PrimaryExpression	1		7329616	1					
ANR	7329739	PrimaryExpression	'/'		7329616	1					
ANR	7329740	ExpressionStatement	dp -> namebuf [ dsize ++ ] = '/'	1653:12:50905:50931	7329616	1	True				
ANR	7329741	AssignmentExpression	dp -> namebuf [ dsize ++ ] = '/'		7329616	0		=			
ANR	7329742	ArrayIndexing	dp -> namebuf [ dsize ++ ]		7329616	0					
ANR	7329743	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329744	Identifier	dp		7329616	0					
ANR	7329745	Identifier	namebuf		7329616	1					
ANR	7329746	PostIncDecOperationExpression	dsize ++		7329616	1					
ANR	7329747	Identifier	dsize		7329616	0					
ANR	7329748	IncDec	++		7329616	1					
ANR	7329749	PrimaryExpression	'/'		7329616	1					
ANR	7329750	WhileStatement	while ( istart > 0 && infile [ istart - 1 ] != '/' )		7329616	5					
ANR	7329751	Condition	istart > 0 && infile [ istart - 1 ] != '/'	1656:16:51001:51037	7329616	0	True				
ANR	7329752	AndExpression	istart > 0 && infile [ istart - 1 ] != '/'		7329616	0		&&			
ANR	7329753	RelationalExpression	istart > 0		7329616	0		>			
ANR	7329754	Identifier	istart		7329616	0					
ANR	7329755	PrimaryExpression	0		7329616	1					
ANR	7329756	EqualityExpression	infile [ istart - 1 ] != '/'		7329616	1		!=			
ANR	7329757	ArrayIndexing	infile [ istart - 1 ]		7329616	0					
ANR	7329758	Identifier	infile		7329616	0					
ANR	7329759	AdditiveExpression	istart - 1		7329616	1		-			
ANR	7329760	Identifier	istart		7329616	0					
ANR	7329761	PrimaryExpression	1		7329616	1					
ANR	7329762	PrimaryExpression	'/'		7329616	1					
ANR	7329763	ExpressionStatement	-- istart	1657:12:51052:51060	7329616	1	True				
ANR	7329764	UnaryExpression	-- istart		7329616	0					
ANR	7329765	IncDec	--		7329616	0					
ANR	7329766	Identifier	istart		7329616	1					
ANR	7329767	ExpressionStatement	isize -= istart	1659:9:51072:51087	7329616	6	True				
ANR	7329768	AssignmentExpression	isize -= istart		7329616	0		-=			
ANR	7329769	Identifier	isize		7329616	0					
ANR	7329770	Identifier	istart		7329616	1					
ANR	7329771	ExpressionStatement	infile += istart	1660:9:51098:51114	7329616	7	True				
ANR	7329772	AssignmentExpression	infile += istart		7329616	0		+=			
ANR	7329773	Identifier	infile		7329616	0					
ANR	7329774	Identifier	istart		7329616	1					
ANR	7329775	IfStatement	if ( dsize + isize < ( sizeof dp -> namebuf ) )		7329616	8					
ANR	7329776	Condition	dsize + isize < ( sizeof dp -> namebuf )	1662:13:51130:51163	7329616	0	True				
ANR	7329777	RelationalExpression	dsize + isize < ( sizeof dp -> namebuf )		7329616	0		<			
ANR	7329778	AdditiveExpression	dsize + isize		7329616	0		+			
ANR	7329779	Identifier	dsize		7329616	0					
ANR	7329780	Identifier	isize		7329616	1					
ANR	7329781	SizeofExpression	sizeof dp -> namebuf		7329616	1					
ANR	7329782	Sizeof	sizeof		7329616	0					
ANR	7329783	PtrMemberAccess	dp -> namebuf		7329616	1					
ANR	7329784	Identifier	dp		7329616	0					
ANR	7329785	Identifier	namebuf		7329616	1					
ANR	7329786	CompoundStatement		33:9:952:952	7329616	1					
ANR	7329787	ExpressionStatement	"memcpy ( dp -> namebuf + dsize , infile , isize + 1 )"	1664:12:51217:51259	7329616	0	True				
ANR	7329788	CallExpression	"memcpy ( dp -> namebuf + dsize , infile , isize + 1 )"		7329616	0					
ANR	7329789	Callee	memcpy		7329616	0					
ANR	7329790	Identifier	memcpy		7329616	0					
ANR	7329791	ArgumentList	dp -> namebuf + dsize		7329616	1					
ANR	7329792	Argument	dp -> namebuf + dsize		7329616	0					
ANR	7329793	AdditiveExpression	dp -> namebuf + dsize		7329616	0		+			
ANR	7329794	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329795	Identifier	dp		7329616	0					
ANR	7329796	Identifier	namebuf		7329616	1					
ANR	7329797	Identifier	dsize		7329616	1					
ANR	7329798	Argument	infile		7329616	1					
ANR	7329799	Identifier	infile		7329616	0					
ANR	7329800	Argument	isize + 1		7329616	2					
ANR	7329801	AdditiveExpression	isize + 1		7329616	0		+			
ANR	7329802	Identifier	isize		7329616	0					
ANR	7329803	PrimaryExpression	1		7329616	1					
ANR	7329804	IfStatement	"if ( isdir ( dp , dp -> namebuf ) )"		7329616	1					
ANR	7329805	Condition	"isdir ( dp , dp -> namebuf )"	1666:16:51278:51299	7329616	0	True				
ANR	7329806	CallExpression	"isdir ( dp , dp -> namebuf )"		7329616	0					
ANR	7329807	Callee	isdir		7329616	0					
ANR	7329808	Identifier	isdir		7329616	0					
ANR	7329809	ArgumentList	dp		7329616	1					
ANR	7329810	Argument	dp		7329616	0					
ANR	7329811	Identifier	dp		7329616	0					
ANR	7329812	Argument	dp -> namebuf		7329616	1					
ANR	7329813	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329814	Identifier	dp		7329616	0					
ANR	7329815	Identifier	namebuf		7329616	1					
ANR	7329816	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: output file is a directory"" , dp -> namebuf )"	1667:15:51317:51412	7329616	1	True				
ANR	7329817	CallExpression	"display_log ( dp , USER_ERROR , ""%s: output file is a directory"" , dp -> namebuf )"		7329616	0					
ANR	7329818	Callee	display_log		7329616	0					
ANR	7329819	Identifier	display_log		7329616	0					
ANR	7329820	ArgumentList	dp		7329616	1					
ANR	7329821	Argument	dp		7329616	0					
ANR	7329822	Identifier	dp		7329616	0					
ANR	7329823	Argument	USER_ERROR		7329616	1					
ANR	7329824	Identifier	USER_ERROR		7329616	0					
ANR	7329825	Argument	"""%s: output file is a directory"""		7329616	2					
ANR	7329826	PrimaryExpression	"""%s: output file is a directory"""		7329616	0					
ANR	7329827	Argument	dp -> namebuf		7329616	3					
ANR	7329828	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329829	Identifier	dp		7329616	0					
ANR	7329830	Identifier	namebuf		7329616	1					
ANR	7329831	ElseStatement	else		7329616	0					
ANR	7329832	CompoundStatement		42:9:1198:1198	7329616	0					
ANR	7329833	ExpressionStatement	dp -> namebuf [ dsize ] = 0	1673:12:51463:51485	7329616	0	True				
ANR	7329834	AssignmentExpression	dp -> namebuf [ dsize ] = 0		7329616	0		=			
ANR	7329835	ArrayIndexing	dp -> namebuf [ dsize ]		7329616	0					
ANR	7329836	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329837	Identifier	dp		7329616	0					
ANR	7329838	Identifier	namebuf		7329616	1					
ANR	7329839	Identifier	dsize		7329616	1					
ANR	7329840	PrimaryExpression	0		7329616	1					
ANR	7329841	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s%s: output file name too long"" , dp -> namebuf , infile )"	1674:12:51530:51631	7329616	1	True				
ANR	7329842	CallExpression	"display_log ( dp , USER_ERROR , ""%s%s: output file name too long"" , dp -> namebuf , infile )"		7329616	0					
ANR	7329843	Callee	display_log		7329616	0					
ANR	7329844	Identifier	display_log		7329616	0					
ANR	7329845	ArgumentList	dp		7329616	1					
ANR	7329846	Argument	dp		7329616	0					
ANR	7329847	Identifier	dp		7329616	0					
ANR	7329848	Argument	USER_ERROR		7329616	1					
ANR	7329849	Identifier	USER_ERROR		7329616	0					
ANR	7329850	Argument	"""%s%s: output file name too long"""		7329616	2					
ANR	7329851	PrimaryExpression	"""%s%s: output file name too long"""		7329616	0					
ANR	7329852	Argument	dp -> namebuf		7329616	3					
ANR	7329853	PtrMemberAccess	dp -> namebuf		7329616	0					
ANR	7329854	Identifier	dp		7329616	0					
ANR	7329855	Identifier	namebuf		7329616	1					
ANR	7329856	Argument	infile		7329616	4					
ANR	7329857	Identifier	infile		7329616	0					
ANR	7329858	ElseStatement	else		7329616	0					
ANR	7329859	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: output directory name too long"" , dir )"	1680:9:51673:51743	7329616	0	True				
ANR	7329860	CallExpression	"display_log ( dp , USER_ERROR , ""%s: output directory name too long"" , dir )"		7329616	0					
ANR	7329861	Callee	display_log		7329616	0					
ANR	7329862	Identifier	display_log		7329616	0					
ANR	7329863	ArgumentList	dp		7329616	1					
ANR	7329864	Argument	dp		7329616	0					
ANR	7329865	Identifier	dp		7329616	0					
ANR	7329866	Argument	USER_ERROR		7329616	1					
ANR	7329867	Identifier	USER_ERROR		7329616	0					
ANR	7329868	Argument	"""%s: output directory name too long"""		7329616	2					
ANR	7329869	PrimaryExpression	"""%s: output directory name too long"""		7329616	0					
ANR	7329870	Argument	dir		7329616	3					
ANR	7329871	Identifier	dir		7329616	0					
ANR	7329872	ReturnType	static void		7329616	1					
ANR	7329873	Identifier	makename		7329616	2					
ANR	7329874	ParameterList	"struct display * dp , const char * dir , const char * infile"		7329616	3					
ANR	7329875	Parameter	struct display * dp	1630:9:50193:50210	7329616	0	True				
ANR	7329876	ParameterType	struct display *		7329616	0					
ANR	7329877	Identifier	dp		7329616	1					
ANR	7329878	Parameter	const char * dir	1630:29:50213:50227	7329616	1	True				
ANR	7329879	ParameterType	const char *		7329616	0					
ANR	7329880	Identifier	dir		7329616	1					
ANR	7329881	Parameter	const char * infile	1630:46:50230:50247	7329616	2	True				
ANR	7329882	ParameterType	const char *		7329616	0					
ANR	7329883	Identifier	infile		7329616	1					
ANR	7329884	CFGEntryNode	ENTRY		7329616		True				
ANR	7329885	CFGExitNode	EXIT		7329616		True				
ANR	7329886	Symbol	NULL		7329616						
ANR	7329887	Symbol	USER_ERROR		7329616						
ANR	7329888	Symbol	INTERNAL_ERROR		7329616						
ANR	7329889	Symbol	infile		7329616						
ANR	7329890	Symbol	dp		7329616						
ANR	7329891	Symbol	dir		7329616						
ANR	7329892	Symbol	dp -> namebuf		7329616						
ANR	7329893	Symbol	* dp -> namebuf		7329616						
ANR	7329894	Symbol	istart		7329616						
ANR	7329895	Symbol	* dp		7329616						
ANR	7329896	Symbol	strlen		7329616						
ANR	7329897	Symbol	dsize		7329616						
ANR	7329898	Symbol	* infile		7329616						
ANR	7329899	Symbol	isize		7329616						
ANR	7329900	Symbol	* dsize		7329616						
ANR	7329901	Symbol	* * dp		7329616						
ANR	7329902	Symbol	isdir		7329616						
ANR	7329903	Symbol	* istart		7329616						
ANR	7329904	Function	display_warning	1685:0:51794:52065							
ANR	7329905	FunctionDef	"display_warning (png_structp pp , png_const_charp warning)"		7329904	0					
ANR	7329906	CompoundStatement		1687:0:51872:52065	7329904	0					
ANR	7329907	IdentifierDeclStatement	struct display * dp = get_dp ( pp ) ;	1688:3:51877:51908	7329904	0	True				
ANR	7329908	IdentifierDecl	* dp = get_dp ( pp )		7329904	0					
ANR	7329909	IdentifierDeclType	struct display *		7329904	0					
ANR	7329910	Identifier	dp		7329904	1					
ANR	7329911	AssignmentExpression	* dp = get_dp ( pp )		7329904	2		=			
ANR	7329912	Identifier	dp		7329904	0					
ANR	7329913	CallExpression	get_dp ( pp )		7329904	1					
ANR	7329914	Callee	get_dp		7329904	0					
ANR	7329915	Identifier	get_dp		7329904	0					
ANR	7329916	ArgumentList	pp		7329904	1					
ANR	7329917	Argument	pp		7329904	0					
ANR	7329918	Identifier	pp		7329904	0					
ANR	7329919	IfStatement	if ( ! dp -> no_warnings )		7329904	1					
ANR	7329920	Condition	! dp -> no_warnings	1691:7:51985:52000	7329904	0	True				
ANR	7329921	UnaryOperationExpression	! dp -> no_warnings		7329904	0					
ANR	7329922	UnaryOperator	!		7329904	0					
ANR	7329923	PtrMemberAccess	dp -> no_warnings		7329904	1					
ANR	7329924	Identifier	dp		7329904	0					
ANR	7329925	Identifier	no_warnings		7329904	1					
ANR	7329926	ExpressionStatement	"display_log ( get_dp ( pp ) , LIBPNG_WARNING , ""%s"" , warning )"	1692:6:52009:52063	7329904	1	True				
ANR	7329927	CallExpression	"display_log ( get_dp ( pp ) , LIBPNG_WARNING , ""%s"" , warning )"		7329904	0					
ANR	7329928	Callee	display_log		7329904	0					
ANR	7329929	Identifier	display_log		7329904	0					
ANR	7329930	ArgumentList	get_dp ( pp )		7329904	1					
ANR	7329931	Argument	get_dp ( pp )		7329904	0					
ANR	7329932	CallExpression	get_dp ( pp )		7329904	0					
ANR	7329933	Callee	get_dp		7329904	0					
ANR	7329934	Identifier	get_dp		7329904	0					
ANR	7329935	ArgumentList	pp		7329904	1					
ANR	7329936	Argument	pp		7329904	0					
ANR	7329937	Identifier	pp		7329904	0					
ANR	7329938	Argument	LIBPNG_WARNING		7329904	1					
ANR	7329939	Identifier	LIBPNG_WARNING		7329904	0					
ANR	7329940	Argument	"""%s"""		7329904	2					
ANR	7329941	PrimaryExpression	"""%s"""		7329904	0					
ANR	7329942	Argument	warning		7329904	3					
ANR	7329943	Identifier	warning		7329904	0					
ANR	7329944	ReturnType	static void PNGCBAPI		7329904	1					
ANR	7329945	Identifier	display_warning		7329904	2					
ANR	7329946	ParameterList	"png_structp pp , png_const_charp warning"		7329904	3					
ANR	7329947	Parameter	png_structp pp	1686:16:51831:51844	7329904	0	True				
ANR	7329948	ParameterType	png_structp		7329904	0					
ANR	7329949	Identifier	pp		7329904	1					
ANR	7329950	Parameter	png_const_charp warning	1686:32:51847:51869	7329904	1	True				
ANR	7329951	ParameterType	png_const_charp		7329904	0					
ANR	7329952	Identifier	warning		7329904	1					
ANR	7329953	CFGEntryNode	ENTRY		7329904		True				
ANR	7329954	CFGExitNode	EXIT		7329904		True				
ANR	7329955	Symbol	pp		7329904						
ANR	7329956	Symbol	* dp		7329904						
ANR	7329957	Symbol	dp -> no_warnings		7329904						
ANR	7329958	Symbol	LIBPNG_WARNING		7329904						
ANR	7329959	Symbol	warning		7329904						
ANR	7329960	Symbol	dp		7329904						
ANR	7329961	Symbol	get_dp		7329904						
ANR	7329962	Function	display_error	1695:0:52068:52228							
ANR	7329963	FunctionDef	"display_error (png_structp pp , png_const_charp error)"		7329962	0					
ANR	7329964	CompoundStatement		1697:0:52142:52228	7329962	0					
ANR	7329965	IdentifierDeclStatement	struct display * dp = get_dp ( pp ) ;	1698:3:52147:52178	7329962	0	True				
ANR	7329966	IdentifierDecl	* dp = get_dp ( pp )		7329962	0					
ANR	7329967	IdentifierDeclType	struct display *		7329962	0					
ANR	7329968	Identifier	dp		7329962	1					
ANR	7329969	AssignmentExpression	* dp = get_dp ( pp )		7329962	2		=			
ANR	7329970	Identifier	dp		7329962	0					
ANR	7329971	CallExpression	get_dp ( pp )		7329962	1					
ANR	7329972	Callee	get_dp		7329962	0					
ANR	7329973	Identifier	get_dp		7329962	0					
ANR	7329974	ArgumentList	pp		7329962	1					
ANR	7329975	Argument	pp		7329962	0					
ANR	7329976	Identifier	pp		7329962	0					
ANR	7329977	ExpressionStatement	"display_log ( dp , LIBPNG_ERROR , ""%s"" , error )"	1700:3:52184:52226	7329962	1	True				
ANR	7329978	CallExpression	"display_log ( dp , LIBPNG_ERROR , ""%s"" , error )"		7329962	0					
ANR	7329979	Callee	display_log		7329962	0					
ANR	7329980	Identifier	display_log		7329962	0					
ANR	7329981	ArgumentList	dp		7329962	1					
ANR	7329982	Argument	dp		7329962	0					
ANR	7329983	Identifier	dp		7329962	0					
ANR	7329984	Argument	LIBPNG_ERROR		7329962	1					
ANR	7329985	Identifier	LIBPNG_ERROR		7329962	0					
ANR	7329986	Argument	"""%s"""		7329962	2					
ANR	7329987	PrimaryExpression	"""%s"""		7329962	0					
ANR	7329988	Argument	error		7329962	3					
ANR	7329989	Identifier	error		7329962	0					
ANR	7329990	ReturnType	static void PNGCBAPI		7329962	1					
ANR	7329991	Identifier	display_error		7329962	2					
ANR	7329992	ParameterList	"png_structp pp , png_const_charp error"		7329962	3					
ANR	7329993	Parameter	png_structp pp	1696:14:52103:52116	7329962	0	True				
ANR	7329994	ParameterType	png_structp		7329962	0					
ANR	7329995	Identifier	pp		7329962	1					
ANR	7329996	Parameter	png_const_charp error	1696:30:52119:52139	7329962	1	True				
ANR	7329997	ParameterType	png_const_charp		7329962	0					
ANR	7329998	Identifier	error		7329962	1					
ANR	7329999	CFGEntryNode	ENTRY		7329962		True				
ANR	7330000	CFGExitNode	EXIT		7329962		True				
ANR	7330001	Symbol	pp		7329962						
ANR	7330002	Symbol	LIBPNG_ERROR		7329962						
ANR	7330003	Symbol	error		7329962						
ANR	7330004	Symbol	dp		7329962						
ANR	7330005	Symbol	get_dp		7329962						
ANR	7330006	Function	display_start_read	1703:0:52231:52666							
ANR	7330007	FunctionDef	"display_start_read (struct display * dp , const char * filename)"		7330006	0					
ANR	7330008	CompoundStatement		1705:0:52304:52666	7330006	0					
ANR	7330009	IfStatement	if ( filename != NULL )		7330006	0					
ANR	7330010	Condition	filename != NULL	1706:7:52313:52328	7330006	0	True				
ANR	7330011	EqualityExpression	filename != NULL		7330006	0		!=			
ANR	7330012	Identifier	filename		7330006	0					
ANR	7330013	Identifier	NULL		7330006	1					
ANR	7330014	CompoundStatement		3:3:29:29	7330006	1					
ANR	7330015	ExpressionStatement	dp -> filename = filename	1708:6:52342:52365	7330006	0	True				
ANR	7330016	AssignmentExpression	dp -> filename = filename		7330006	0		=			
ANR	7330017	PtrMemberAccess	dp -> filename		7330006	0					
ANR	7330018	Identifier	dp		7330006	0					
ANR	7330019	Identifier	filename		7330006	1					
ANR	7330020	Identifier	filename		7330006	1					
ANR	7330021	ExpressionStatement	"dp -> fp = fopen ( filename , ""rb"" )"	1709:6:52373:52403	7330006	1	True				
ANR	7330022	AssignmentExpression	"dp -> fp = fopen ( filename , ""rb"" )"		7330006	0		=			
ANR	7330023	PtrMemberAccess	dp -> fp		7330006	0					
ANR	7330024	Identifier	dp		7330006	0					
ANR	7330025	Identifier	fp		7330006	1					
ANR	7330026	CallExpression	"fopen ( filename , ""rb"" )"		7330006	1					
ANR	7330027	Callee	fopen		7330006	0					
ANR	7330028	Identifier	fopen		7330006	0					
ANR	7330029	ArgumentList	filename		7330006	1					
ANR	7330030	Argument	filename		7330006	0					
ANR	7330031	Identifier	filename		7330006	0					
ANR	7330032	Argument	"""rb"""		7330006	1					
ANR	7330033	PrimaryExpression	"""rb"""		7330006	0					
ANR	7330034	ElseStatement	else		7330006	0					
ANR	7330035	CompoundStatement		9:3:117:117	7330006	0					
ANR	7330036	ExpressionStatement	"dp -> filename = ""<stdin>"""	1714:6:52430:52454	7330006	0	True				
ANR	7330037	AssignmentExpression	"dp -> filename = ""<stdin>"""		7330006	0		=			
ANR	7330038	PtrMemberAccess	dp -> filename		7330006	0					
ANR	7330039	Identifier	dp		7330006	0					
ANR	7330040	Identifier	filename		7330006	1					
ANR	7330041	PrimaryExpression	"""<stdin>"""		7330006	1					
ANR	7330042	ExpressionStatement	dp -> fp = stdin	1715:6:52462:52476	7330006	1	True				
ANR	7330043	AssignmentExpression	dp -> fp = stdin		7330006	0		=			
ANR	7330044	PtrMemberAccess	dp -> fp		7330006	0					
ANR	7330045	Identifier	dp		7330006	0					
ANR	7330046	Identifier	fp		7330006	1					
ANR	7330047	Identifier	stdin		7330006	1					
ANR	7330048	ExpressionStatement	dp -> w = dp -> h = 0U	1718:3:52487:52505	7330006	1	True				
ANR	7330049	AssignmentExpression	dp -> w = dp -> h = 0U		7330006	0		=			
ANR	7330050	PtrMemberAccess	dp -> w		7330006	0					
ANR	7330051	Identifier	dp		7330006	0					
ANR	7330052	Identifier	w		7330006	1					
ANR	7330053	AssignmentExpression	dp -> h = 0U		7330006	1		=			
ANR	7330054	PtrMemberAccess	dp -> h		7330006	0					
ANR	7330055	Identifier	dp		7330006	0					
ANR	7330056	Identifier	h		7330006	1					
ANR	7330057	PrimaryExpression	0U		7330006	1					
ANR	7330058	ExpressionStatement	dp -> bpp = 0U	1719:3:52510:52522	7330006	2	True				
ANR	7330059	AssignmentExpression	dp -> bpp = 0U		7330006	0		=			
ANR	7330060	PtrMemberAccess	dp -> bpp		7330006	0					
ANR	7330061	Identifier	dp		7330006	0					
ANR	7330062	Identifier	bpp		7330006	1					
ANR	7330063	PrimaryExpression	0U		7330006	1					
ANR	7330064	ExpressionStatement	dp -> size = 0U	1720:3:52527:52540	7330006	3	True				
ANR	7330065	AssignmentExpression	dp -> size = 0U		7330006	0		=			
ANR	7330066	PtrMemberAccess	dp -> size		7330006	0					
ANR	7330067	Identifier	dp		7330006	0					
ANR	7330068	Identifier	size		7330006	1					
ANR	7330069	PrimaryExpression	0U		7330006	1					
ANR	7330070	ExpressionStatement	dp -> read_size = 0U	1721:3:52545:52563	7330006	4	True				
ANR	7330071	AssignmentExpression	dp -> read_size = 0U		7330006	0		=			
ANR	7330072	PtrMemberAccess	dp -> read_size		7330006	0					
ANR	7330073	Identifier	dp		7330006	0					
ANR	7330074	Identifier	read_size		7330006	1					
ANR	7330075	PrimaryExpression	0U		7330006	1					
ANR	7330076	IfStatement	if ( dp -> fp == NULL )		7330006	5					
ANR	7330077	Condition	dp -> fp == NULL	1723:7:52573:52586	7330006	0	True				
ANR	7330078	EqualityExpression	dp -> fp == NULL		7330006	0		==			
ANR	7330079	PtrMemberAccess	dp -> fp		7330006	0					
ANR	7330080	Identifier	dp		7330006	0					
ANR	7330081	Identifier	fp		7330006	1					
ANR	7330082	Identifier	NULL		7330006	1					
ANR	7330083	ExpressionStatement	"display_log ( dp , USER_ERROR , ""file open failed (%s)"" , strerror ( errno ) )"	1724:6:52595:52664	7330006	1	True				
ANR	7330084	CallExpression	"display_log ( dp , USER_ERROR , ""file open failed (%s)"" , strerror ( errno ) )"		7330006	0					
ANR	7330085	Callee	display_log		7330006	0					
ANR	7330086	Identifier	display_log		7330006	0					
ANR	7330087	ArgumentList	dp		7330006	1					
ANR	7330088	Argument	dp		7330006	0					
ANR	7330089	Identifier	dp		7330006	0					
ANR	7330090	Argument	USER_ERROR		7330006	1					
ANR	7330091	Identifier	USER_ERROR		7330006	0					
ANR	7330092	Argument	"""file open failed (%s)"""		7330006	2					
ANR	7330093	PrimaryExpression	"""file open failed (%s)"""		7330006	0					
ANR	7330094	Argument	strerror ( errno )		7330006	3					
ANR	7330095	CallExpression	strerror ( errno )		7330006	0					
ANR	7330096	Callee	strerror		7330006	0					
ANR	7330097	Identifier	strerror		7330006	0					
ANR	7330098	ArgumentList	errno		7330006	1					
ANR	7330099	Argument	errno		7330006	0					
ANR	7330100	Identifier	errno		7330006	0					
ANR	7330101	ReturnType	static void		7330006	1					
ANR	7330102	Identifier	display_start_read		7330006	2					
ANR	7330103	ParameterList	"struct display * dp , const char * filename"		7330006	3					
ANR	7330104	Parameter	struct display * dp	1704:19:52262:52279	7330006	0	True				
ANR	7330105	ParameterType	struct display *		7330006	0					
ANR	7330106	Identifier	dp		7330006	1					
ANR	7330107	Parameter	const char * filename	1704:39:52282:52301	7330006	1	True				
ANR	7330108	ParameterType	const char *		7330006	0					
ANR	7330109	Identifier	filename		7330006	1					
ANR	7330110	CFGEntryNode	ENTRY		7330006		True				
ANR	7330111	CFGExitNode	EXIT		7330006		True				
ANR	7330112	Symbol	fopen		7330006						
ANR	7330113	Symbol	stdin		7330006						
ANR	7330114	Symbol	errno		7330006						
ANR	7330115	Symbol	NULL		7330006						
ANR	7330116	Symbol	dp -> fp		7330006						
ANR	7330117	Symbol	dp -> read_size		7330006						
ANR	7330118	Symbol	USER_ERROR		7330006						
ANR	7330119	Symbol	dp -> filename		7330006						
ANR	7330120	Symbol	dp -> h		7330006						
ANR	7330121	Symbol	dp		7330006						
ANR	7330122	Symbol	dp -> bpp		7330006						
ANR	7330123	Symbol	strerror		7330006						
ANR	7330124	Symbol	* dp		7330006						
ANR	7330125	Symbol	filename		7330006						
ANR	7330126	Symbol	dp -> size		7330006						
ANR	7330127	Symbol	dp -> w		7330006						
ANR	7330128	Function	read_function	1727:0:52669:53096							
ANR	7330129	FunctionDef	"read_function (png_structp pp , png_bytep data , png_size_t size)"		7330128	0					
ANR	7330130	CompoundStatement		1729:0:52753:53096	7330128	0					
ANR	7330131	IdentifierDeclStatement	struct display * dp = get_dp ( pp ) ;	1730:3:52758:52789	7330128	0	True				
ANR	7330132	IdentifierDecl	* dp = get_dp ( pp )		7330128	0					
ANR	7330133	IdentifierDeclType	struct display *		7330128	0					
ANR	7330134	Identifier	dp		7330128	1					
ANR	7330135	AssignmentExpression	* dp = get_dp ( pp )		7330128	2		=			
ANR	7330136	Identifier	dp		7330128	0					
ANR	7330137	CallExpression	get_dp ( pp )		7330128	1					
ANR	7330138	Callee	get_dp		7330128	0					
ANR	7330139	Identifier	get_dp		7330128	0					
ANR	7330140	ArgumentList	pp		7330128	1					
ANR	7330141	Argument	pp		7330128	0					
ANR	7330142	Identifier	pp		7330128	0					
ANR	7330143	IfStatement	"if ( size == 0U || fread ( data , size , 1U , dp -> fp ) == 1U )"		7330128	1					
ANR	7330144	Condition	"size == 0U || fread ( data , size , 1U , dp -> fp ) == 1U"	1732:7:52799:52847	7330128	0	True				
ANR	7330145	OrExpression	"size == 0U || fread ( data , size , 1U , dp -> fp ) == 1U"		7330128	0		||			
ANR	7330146	EqualityExpression	size == 0U		7330128	0		==			
ANR	7330147	Identifier	size		7330128	0					
ANR	7330148	PrimaryExpression	0U		7330128	1					
ANR	7330149	EqualityExpression	"fread ( data , size , 1U , dp -> fp ) == 1U"		7330128	1		==			
ANR	7330150	CallExpression	"fread ( data , size , 1U , dp -> fp )"		7330128	0					
ANR	7330151	Callee	fread		7330128	0					
ANR	7330152	Identifier	fread		7330128	0					
ANR	7330153	ArgumentList	data		7330128	1					
ANR	7330154	Argument	data		7330128	0					
ANR	7330155	Identifier	data		7330128	0					
ANR	7330156	Argument	size		7330128	1					
ANR	7330157	Identifier	size		7330128	0					
ANR	7330158	Argument	1U		7330128	2					
ANR	7330159	PrimaryExpression	1U		7330128	0					
ANR	7330160	Argument	dp -> fp		7330128	3					
ANR	7330161	PtrMemberAccess	dp -> fp		7330128	0					
ANR	7330162	Identifier	dp		7330128	0					
ANR	7330163	Identifier	fp		7330128	1					
ANR	7330164	PrimaryExpression	1U		7330128	1					
ANR	7330165	ExpressionStatement	dp -> read_size += size	1733:6:52856:52877	7330128	1	True				
ANR	7330166	AssignmentExpression	dp -> read_size += size		7330128	0		+=			
ANR	7330167	PtrMemberAccess	dp -> read_size		7330128	0					
ANR	7330168	Identifier	dp		7330128	0					
ANR	7330169	Identifier	read_size		7330128	1					
ANR	7330170	Identifier	size		7330128	1					
ANR	7330171	ElseStatement	else		7330128	0					
ANR	7330172	CompoundStatement		8:3:137:137	7330128	0					
ANR	7330173	IfStatement	if ( feof ( dp -> fp ) )		7330128	0					
ANR	7330174	Condition	feof ( dp -> fp )	1737:10:52903:52914	7330128	0	True				
ANR	7330175	CallExpression	feof ( dp -> fp )		7330128	0					
ANR	7330176	Callee	feof		7330128	0					
ANR	7330177	Identifier	feof		7330128	0					
ANR	7330178	ArgumentList	dp -> fp		7330128	1					
ANR	7330179	Argument	dp -> fp		7330128	0					
ANR	7330180	PtrMemberAccess	dp -> fp		7330128	0					
ANR	7330181	Identifier	dp		7330128	0					
ANR	7330182	Identifier	fp		7330128	1					
ANR	7330183	ExpressionStatement	"display_log ( dp , LIBPNG_ERROR , ""PNG file truncated"" )"	1738:9:52926:52977	7330128	1	True				
ANR	7330184	CallExpression	"display_log ( dp , LIBPNG_ERROR , ""PNG file truncated"" )"		7330128	0					
ANR	7330185	Callee	display_log		7330128	0					
ANR	7330186	Identifier	display_log		7330128	0					
ANR	7330187	ArgumentList	dp		7330128	1					
ANR	7330188	Argument	dp		7330128	0					
ANR	7330189	Identifier	dp		7330128	0					
ANR	7330190	Argument	LIBPNG_ERROR		7330128	1					
ANR	7330191	Identifier	LIBPNG_ERROR		7330128	0					
ANR	7330192	Argument	"""PNG file truncated"""		7330128	2					
ANR	7330193	PrimaryExpression	"""PNG file truncated"""		7330128	0					
ANR	7330194	ElseStatement	else		7330128	0					
ANR	7330195	ExpressionStatement	"display_log ( dp , LIBPNG_ERROR , ""PNG file read failed (%s)"" , strerror ( errno ) )"	1740:9:52999:53089	7330128	0	True				
ANR	7330196	CallExpression	"display_log ( dp , LIBPNG_ERROR , ""PNG file read failed (%s)"" , strerror ( errno ) )"		7330128	0					
ANR	7330197	Callee	display_log		7330128	0					
ANR	7330198	Identifier	display_log		7330128	0					
ANR	7330199	ArgumentList	dp		7330128	1					
ANR	7330200	Argument	dp		7330128	0					
ANR	7330201	Identifier	dp		7330128	0					
ANR	7330202	Argument	LIBPNG_ERROR		7330128	1					
ANR	7330203	Identifier	LIBPNG_ERROR		7330128	0					
ANR	7330204	Argument	"""PNG file read failed (%s)"""		7330128	2					
ANR	7330205	PrimaryExpression	"""PNG file read failed (%s)"""		7330128	0					
ANR	7330206	Argument	strerror ( errno )		7330128	3					
ANR	7330207	CallExpression	strerror ( errno )		7330128	0					
ANR	7330208	Callee	strerror		7330128	0					
ANR	7330209	Identifier	strerror		7330128	0					
ANR	7330210	ArgumentList	errno		7330128	1					
ANR	7330211	Argument	errno		7330128	0					
ANR	7330212	Identifier	errno		7330128	0					
ANR	7330213	ReturnType	static void PNGCBAPI		7330128	1					
ANR	7330214	Identifier	read_function		7330128	2					
ANR	7330215	ParameterList	"png_structp pp , png_bytep data , png_size_t size"		7330128	3					
ANR	7330216	Parameter	png_structp pp	1728:14:52704:52717	7330128	0	True				
ANR	7330217	ParameterType	png_structp		7330128	0					
ANR	7330218	Identifier	pp		7330128	1					
ANR	7330219	Parameter	png_bytep data	1728:30:52720:52733	7330128	1	True				
ANR	7330220	ParameterType	png_bytep		7330128	0					
ANR	7330221	Identifier	data		7330128	1					
ANR	7330222	Parameter	png_size_t size	1728:46:52736:52750	7330128	2	True				
ANR	7330223	ParameterType	png_size_t		7330128	0					
ANR	7330224	Identifier	size		7330128	1					
ANR	7330225	CFGEntryNode	ENTRY		7330128		True				
ANR	7330226	CFGExitNode	EXIT		7330128		True				
ANR	7330227	Symbol	pp		7330128						
ANR	7330228	Symbol	errno		7330128						
ANR	7330229	Symbol	data		7330128						
ANR	7330230	Symbol	dp -> fp		7330128						
ANR	7330231	Symbol	dp -> read_size		7330128						
ANR	7330232	Symbol	LIBPNG_ERROR		7330128						
ANR	7330233	Symbol	dp		7330128						
ANR	7330234	Symbol	fread		7330128						
ANR	7330235	Symbol	strerror		7330128						
ANR	7330236	Symbol	* dp		7330128						
ANR	7330237	Symbol	size		7330128						
ANR	7330238	Symbol	feof		7330128						
ANR	7330239	Symbol	get_dp		7330128						
ANR	7330240	Function	read_png	1745:0:53099:56604							
ANR	7330241	FunctionDef	"read_png (struct display * dp , const char * filename)"		7330240	0					
ANR	7330242	CompoundStatement		1747:0:53162:56604	7330240	0					
ANR	7330243	ExpressionStatement	display_clean_read ( dp )	1748:3:53167:53189	7330240	0	True				
ANR	7330244	CallExpression	display_clean_read ( dp )		7330240	0					
ANR	7330245	Callee	display_clean_read		7330240	0					
ANR	7330246	Identifier	display_clean_read		7330240	0					
ANR	7330247	ArgumentList	dp		7330240	1					
ANR	7330248	Argument	dp		7330240	0					
ANR	7330249	Identifier	dp		7330240	0					
ANR	7330250	ExpressionStatement	"display_start_read ( dp , filename )"	1749:3:53207:53239	7330240	1	True				
ANR	7330251	CallExpression	"display_start_read ( dp , filename )"		7330240	0					
ANR	7330252	Callee	display_start_read		7330240	0					
ANR	7330253	Identifier	display_start_read		7330240	0					
ANR	7330254	ArgumentList	dp		7330240	1					
ANR	7330255	Argument	dp		7330240	0					
ANR	7330256	Identifier	dp		7330240	0					
ANR	7330257	Argument	filename		7330240	1					
ANR	7330258	Identifier	filename		7330240	0					
ANR	7330259	ExpressionStatement	"dp -> read_pp = png_create_read_struct ( PNG_LIBPNG_VER_STRING , dp , display_error , display_warning )"	1751:3:53245:53346	7330240	2	True				
ANR	7330260	AssignmentExpression	"dp -> read_pp = png_create_read_struct ( PNG_LIBPNG_VER_STRING , dp , display_error , display_warning )"		7330240	0		=			
ANR	7330261	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330262	Identifier	dp		7330240	0					
ANR	7330263	Identifier	read_pp		7330240	1					
ANR	7330264	CallExpression	"png_create_read_struct ( PNG_LIBPNG_VER_STRING , dp , display_error , display_warning )"		7330240	1					
ANR	7330265	Callee	png_create_read_struct		7330240	0					
ANR	7330266	Identifier	png_create_read_struct		7330240	0					
ANR	7330267	ArgumentList	PNG_LIBPNG_VER_STRING		7330240	1					
ANR	7330268	Argument	PNG_LIBPNG_VER_STRING		7330240	0					
ANR	7330269	Identifier	PNG_LIBPNG_VER_STRING		7330240	0					
ANR	7330270	Argument	dp		7330240	1					
ANR	7330271	Identifier	dp		7330240	0					
ANR	7330272	Argument	display_error		7330240	2					
ANR	7330273	Identifier	display_error		7330240	0					
ANR	7330274	Argument	display_warning		7330240	3					
ANR	7330275	Identifier	display_warning		7330240	0					
ANR	7330276	IfStatement	if ( dp -> read_pp == NULL )		7330240	3					
ANR	7330277	Condition	dp -> read_pp == NULL	1753:7:53355:53373	7330240	0	True				
ANR	7330278	EqualityExpression	dp -> read_pp == NULL		7330240	0		==			
ANR	7330279	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330280	Identifier	dp		7330240	0					
ANR	7330281	Identifier	read_pp		7330240	1					
ANR	7330282	Identifier	NULL		7330240	1					
ANR	7330283	ExpressionStatement	"display_log ( dp , LIBPNG_ERROR , ""failed to create read struct"" )"	1754:6:53382:53443	7330240	1	True				
ANR	7330284	CallExpression	"display_log ( dp , LIBPNG_ERROR , ""failed to create read struct"" )"		7330240	0					
ANR	7330285	Callee	display_log		7330240	0					
ANR	7330286	Identifier	display_log		7330240	0					
ANR	7330287	ArgumentList	dp		7330240	1					
ANR	7330288	Argument	dp		7330240	0					
ANR	7330289	Identifier	dp		7330240	0					
ANR	7330290	Argument	LIBPNG_ERROR		7330240	1					
ANR	7330291	Identifier	LIBPNG_ERROR		7330240	0					
ANR	7330292	Argument	"""failed to create read struct"""		7330240	2					
ANR	7330293	PrimaryExpression	"""failed to create read struct"""		7330240	0					
ANR	7330294	IdentifierDeclStatement	"ifdef PNG_BENIGN_ERRORS_SUPPORTED png_set_benign_errors ( dp -> read_pp , 1 ) ;"	1756:3:53449:53537	7330240	4	True				
ANR	7330295	IdentifierDecl	"png_set_benign_errors ( dp -> read_pp , 1 )"		7330240	0					
ANR	7330296	IdentifierDeclType	ifdef PNG_BENIGN_ERRORS_SUPPORTED		7330240	0					
ANR	7330297	Identifier	png_set_benign_errors		7330240	1					
ANR	7330298	Expression	"dp -> read_pp , 1"		7330240	2					
ANR	7330299	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330300	Identifier	dp		7330240	0					
ANR	7330301	Identifier	read_pp		7330240	1					
ANR	7330302	PrimaryExpression	1		7330240	1					
ANR	7330303	Statement	endif	1758:3:53542:53546	7330240	5	True				
ANR	7330304	Statement	ifdef	1760:3:53572:53576	7330240	6	True				
ANR	7330305	Statement	FIX_INDEX	1760:9:53578:53586	7330240	7	True				
ANR	7330306	IfStatement	if ( ( dp -> options & FIX_INDEX ) != 0 )		7330240	8					
ANR	7330307	Condition	( dp -> options & FIX_INDEX ) != 0	1761:10:53598:53627	7330240	0	True				
ANR	7330308	EqualityExpression	( dp -> options & FIX_INDEX ) != 0		7330240	0		!=			
ANR	7330309	BitAndExpression	dp -> options & FIX_INDEX		7330240	0		&			
ANR	7330310	PtrMemberAccess	dp -> options		7330240	0					
ANR	7330311	Identifier	dp		7330240	0					
ANR	7330312	Identifier	options		7330240	1					
ANR	7330313	Identifier	FIX_INDEX		7330240	1					
ANR	7330314	PrimaryExpression	0		7330240	1					
ANR	7330315	ExpressionStatement	"png_set_check_for_invalid_index ( dp -> read_pp , 1 )"	1762:9:53639:53704	7330240	1	True				
ANR	7330316	CallExpression	"png_set_check_for_invalid_index ( dp -> read_pp , 1 )"		7330240	0					
ANR	7330317	Callee	png_set_check_for_invalid_index		7330240	0					
ANR	7330318	Identifier	png_set_check_for_invalid_index		7330240	0					
ANR	7330319	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330320	Argument	dp -> read_pp		7330240	0					
ANR	7330321	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330322	Identifier	dp		7330240	0					
ANR	7330323	Identifier	read_pp		7330240	1					
ANR	7330324	Argument	1		7330240	1					
ANR	7330325	PrimaryExpression	1		7330240	0					
ANR	7330326	ElseStatement	else		7330240	0					
ANR	7330327	Statement	endif	1765:6:53751:53755	7330240	0	True				
ANR	7330328	Statement	ifdef	1763:6:53712:53716	7330240	9	True				
ANR	7330329	Statement	IGNORE_INDEX	1763:12:53718:53729	7330240	10	True				
ANR	7330330	Statement	endif	1766:3:53779:53783	7330240	11	True				
ANR	7330331	Statement	ifdef	1767:3:53804:53808	7330240	12	True				
ANR	7330332	Statement	IGNORE_INDEX	1767:9:53810:53821	7330240	13	True				
ANR	7330333	IfStatement	if ( ( dp -> options & IGNORE_INDEX ) != 0 )		7330240	14					
ANR	7330334	Condition	( dp -> options & IGNORE_INDEX ) != 0	1768:10:53833:53865	7330240	0	True				
ANR	7330335	EqualityExpression	( dp -> options & IGNORE_INDEX ) != 0		7330240	0		!=			
ANR	7330336	BitAndExpression	dp -> options & IGNORE_INDEX		7330240	0		&			
ANR	7330337	PtrMemberAccess	dp -> options		7330240	0					
ANR	7330338	Identifier	dp		7330240	0					
ANR	7330339	Identifier	options		7330240	1					
ANR	7330340	Identifier	IGNORE_INDEX		7330240	1					
ANR	7330341	PrimaryExpression	0		7330240	1					
ANR	7330342	ExpressionStatement	"png_set_check_for_invalid_index ( dp -> read_pp , - 1 )"	1769:9:53893:53959	7330240	1	True				
ANR	7330343	CallExpression	"png_set_check_for_invalid_index ( dp -> read_pp , - 1 )"		7330240	0					
ANR	7330344	Callee	png_set_check_for_invalid_index		7330240	0					
ANR	7330345	Identifier	png_set_check_for_invalid_index		7330240	0					
ANR	7330346	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330347	Argument	dp -> read_pp		7330240	0					
ANR	7330348	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330349	Identifier	dp		7330240	0					
ANR	7330350	Identifier	read_pp		7330240	1					
ANR	7330351	Argument	- 1		7330240	1					
ANR	7330352	UnaryOperationExpression	- 1		7330240	0					
ANR	7330353	UnaryOperator	-		7330240	0					
ANR	7330354	PrimaryExpression	1		7330240	1					
ANR	7330355	Statement	endif	1770:3:53964:53968	7330240	15	True				
ANR	7330356	ExpressionStatement	dp -> ip = png_create_info_struct ( dp -> read_pp )	1775:3:54109:54153	7330240	16	True				
ANR	7330357	AssignmentExpression	dp -> ip = png_create_info_struct ( dp -> read_pp )		7330240	0		=			
ANR	7330358	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330359	Identifier	dp		7330240	0					
ANR	7330360	Identifier	ip		7330240	1					
ANR	7330361	CallExpression	png_create_info_struct ( dp -> read_pp )		7330240	1					
ANR	7330362	Callee	png_create_info_struct		7330240	0					
ANR	7330363	Identifier	png_create_info_struct		7330240	0					
ANR	7330364	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330365	Argument	dp -> read_pp		7330240	0					
ANR	7330366	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330367	Identifier	dp		7330240	0					
ANR	7330368	Identifier	read_pp		7330240	1					
ANR	7330369	IfStatement	if ( dp -> ip == NULL )		7330240	17					
ANR	7330370	Condition	dp -> ip == NULL	1776:7:54162:54175	7330240	0	True				
ANR	7330371	EqualityExpression	dp -> ip == NULL		7330240	0		==			
ANR	7330372	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330373	Identifier	dp		7330240	0					
ANR	7330374	Identifier	ip		7330240	1					
ANR	7330375	Identifier	NULL		7330240	1					
ANR	7330376	ExpressionStatement	"png_error ( dp -> read_pp , ""failed to create info struct"" )"	1777:6:54184:54238	7330240	1	True				
ANR	7330377	CallExpression	"png_error ( dp -> read_pp , ""failed to create info struct"" )"		7330240	0					
ANR	7330378	Callee	png_error		7330240	0					
ANR	7330379	Identifier	png_error		7330240	0					
ANR	7330380	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330381	Argument	dp -> read_pp		7330240	0					
ANR	7330382	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330383	Identifier	dp		7330240	0					
ANR	7330384	Identifier	read_pp		7330240	1					
ANR	7330385	Argument	"""failed to create info struct"""		7330240	1					
ANR	7330386	PrimaryExpression	"""failed to create info struct"""		7330240	0					
ANR	7330387	ExpressionStatement	"png_set_read_fn ( dp -> read_pp , dp , read_function )"	1780:3:54273:54320	7330240	18	True				
ANR	7330388	CallExpression	"png_set_read_fn ( dp -> read_pp , dp , read_function )"		7330240	0					
ANR	7330389	Callee	png_set_read_fn		7330240	0					
ANR	7330390	Identifier	png_set_read_fn		7330240	0					
ANR	7330391	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330392	Argument	dp -> read_pp		7330240	0					
ANR	7330393	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330394	Identifier	dp		7330240	0					
ANR	7330395	Identifier	read_pp		7330240	1					
ANR	7330396	Argument	dp		7330240	1					
ANR	7330397	Identifier	dp		7330240	0					
ANR	7330398	Argument	read_function		7330240	2					
ANR	7330399	Identifier	read_function		7330240	0					
ANR	7330400	IdentifierDeclStatement	"ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED png_set_keep_unknown_chunks ( dp -> read_pp , PNG_HANDLE_CHUNK_ALWAYS , NULL , 0 ) ;"	1782:3:54326:54456	7330240	19	True				
ANR	7330401	IdentifierDecl	"png_set_keep_unknown_chunks ( dp -> read_pp , PNG_HANDLE_CHUNK_ALWAYS , NULL , 0 )"		7330240	0					
ANR	7330402	IdentifierDeclType	ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED		7330240	0					
ANR	7330403	Identifier	png_set_keep_unknown_chunks		7330240	1					
ANR	7330404	Expression	"dp -> read_pp , PNG_HANDLE_CHUNK_ALWAYS , NULL , 0"		7330240	2					
ANR	7330405	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330406	Identifier	dp		7330240	0					
ANR	7330407	Identifier	read_pp		7330240	1					
ANR	7330408	Expression	"PNG_HANDLE_CHUNK_ALWAYS , NULL , 0"		7330240	1					
ANR	7330409	Identifier	PNG_HANDLE_CHUNK_ALWAYS		7330240	0					
ANR	7330410	Expression	"NULL , 0"		7330240	1					
ANR	7330411	Identifier	NULL		7330240	0					
ANR	7330412	PrimaryExpression	0		7330240	1					
ANR	7330413	IdentifierDeclStatement	"endif ifdef PNG_SET_USER_LIMITS_SUPPORTED png_set_user_limits ( dp -> read_pp , 0x7fffffff , 0x7fffffff ) ;"	1785:3:54461:54636	7330240	20	True				
ANR	7330414	IdentifierDecl	"png_set_user_limits ( dp -> read_pp , 0x7fffffff , 0x7fffffff )"		7330240	0					
ANR	7330415	IdentifierDeclType	endif ifdef PNG_SET_USER_LIMITS_SUPPORTED		7330240	0					
ANR	7330416	Identifier	png_set_user_limits		7330240	1					
ANR	7330417	Expression	"dp -> read_pp , 0x7fffffff , 0x7fffffff"		7330240	2					
ANR	7330418	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330419	Identifier	dp		7330240	0					
ANR	7330420	Identifier	read_pp		7330240	1					
ANR	7330421	Expression	"0x7fffffff , 0x7fffffff"		7330240	1					
ANR	7330422	PrimaryExpression	0x7fffffff		7330240	0					
ANR	7330423	PrimaryExpression	0x7fffffff		7330240	1					
ANR	7330424	IdentifierDeclStatement	"endif start_timer ( dp , PNGCP_TIME_READ ) ;"	1790:3:54641:54732	7330240	21	True				
ANR	7330425	IdentifierDecl	"start_timer ( dp , PNGCP_TIME_READ )"		7330240	0					
ANR	7330426	IdentifierDeclType	endif		7330240	0					
ANR	7330427	Identifier	start_timer		7330240	1					
ANR	7330428	Expression	"dp , PNGCP_TIME_READ"		7330240	2					
ANR	7330429	Identifier	dp		7330240	0					
ANR	7330430	Identifier	PNGCP_TIME_READ		7330240	1					
ANR	7330431	ExpressionStatement	"png_read_png ( dp -> read_pp , dp -> ip , 0U , NULL )"	1794:3:54737:54804	7330240	22	True				
ANR	7330432	CallExpression	"png_read_png ( dp -> read_pp , dp -> ip , 0U , NULL )"		7330240	0					
ANR	7330433	Callee	png_read_png		7330240	0					
ANR	7330434	Identifier	png_read_png		7330240	0					
ANR	7330435	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330436	Argument	dp -> read_pp		7330240	0					
ANR	7330437	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330438	Identifier	dp		7330240	0					
ANR	7330439	Identifier	read_pp		7330240	1					
ANR	7330440	Argument	dp -> ip		7330240	1					
ANR	7330441	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330442	Identifier	dp		7330240	0					
ANR	7330443	Identifier	ip		7330240	1					
ANR	7330444	Argument	0U		7330240	2					
ANR	7330445	PrimaryExpression	0U		7330240	0					
ANR	7330446	Argument	NULL		7330240	3					
ANR	7330447	Identifier	NULL		7330240	0					
ANR	7330448	ExpressionStatement	"end_timer ( dp , PNGCP_TIME_READ )"	1795:3:54809:54839	7330240	23	True				
ANR	7330449	CallExpression	"end_timer ( dp , PNGCP_TIME_READ )"		7330240	0					
ANR	7330450	Callee	end_timer		7330240	0					
ANR	7330451	Identifier	end_timer		7330240	0					
ANR	7330452	ArgumentList	dp		7330240	1					
ANR	7330453	Argument	dp		7330240	0					
ANR	7330454	Identifier	dp		7330240	0					
ANR	7330455	Argument	PNGCP_TIME_READ		7330240	1					
ANR	7330456	Identifier	PNGCP_TIME_READ		7330240	0					
ANR	7330457	ExpressionStatement	"dp -> w = png_get_image_width ( dp -> read_pp , dp -> ip )"	1796:3:54844:54892	7330240	24	True				
ANR	7330458	AssignmentExpression	"dp -> w = png_get_image_width ( dp -> read_pp , dp -> ip )"		7330240	0		=			
ANR	7330459	PtrMemberAccess	dp -> w		7330240	0					
ANR	7330460	Identifier	dp		7330240	0					
ANR	7330461	Identifier	w		7330240	1					
ANR	7330462	CallExpression	"png_get_image_width ( dp -> read_pp , dp -> ip )"		7330240	1					
ANR	7330463	Callee	png_get_image_width		7330240	0					
ANR	7330464	Identifier	png_get_image_width		7330240	0					
ANR	7330465	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330466	Argument	dp -> read_pp		7330240	0					
ANR	7330467	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330468	Identifier	dp		7330240	0					
ANR	7330469	Identifier	read_pp		7330240	1					
ANR	7330470	Argument	dp -> ip		7330240	1					
ANR	7330471	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330472	Identifier	dp		7330240	0					
ANR	7330473	Identifier	ip		7330240	1					
ANR	7330474	ExpressionStatement	"dp -> h = png_get_image_height ( dp -> read_pp , dp -> ip )"	1797:3:54897:54946	7330240	25	True				
ANR	7330475	AssignmentExpression	"dp -> h = png_get_image_height ( dp -> read_pp , dp -> ip )"		7330240	0		=			
ANR	7330476	PtrMemberAccess	dp -> h		7330240	0					
ANR	7330477	Identifier	dp		7330240	0					
ANR	7330478	Identifier	h		7330240	1					
ANR	7330479	CallExpression	"png_get_image_height ( dp -> read_pp , dp -> ip )"		7330240	1					
ANR	7330480	Callee	png_get_image_height		7330240	0					
ANR	7330481	Identifier	png_get_image_height		7330240	0					
ANR	7330482	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330483	Argument	dp -> read_pp		7330240	0					
ANR	7330484	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330485	Identifier	dp		7330240	0					
ANR	7330486	Identifier	read_pp		7330240	1					
ANR	7330487	Argument	dp -> ip		7330240	1					
ANR	7330488	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330489	Identifier	dp		7330240	0					
ANR	7330490	Identifier	ip		7330240	1					
ANR	7330491	ExpressionStatement	"dp -> ct = png_get_color_type ( dp -> read_pp , dp -> ip )"	1798:3:54951:54999	7330240	26	True				
ANR	7330492	AssignmentExpression	"dp -> ct = png_get_color_type ( dp -> read_pp , dp -> ip )"		7330240	0		=			
ANR	7330493	PtrMemberAccess	dp -> ct		7330240	0					
ANR	7330494	Identifier	dp		7330240	0					
ANR	7330495	Identifier	ct		7330240	1					
ANR	7330496	CallExpression	"png_get_color_type ( dp -> read_pp , dp -> ip )"		7330240	1					
ANR	7330497	Callee	png_get_color_type		7330240	0					
ANR	7330498	Identifier	png_get_color_type		7330240	0					
ANR	7330499	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330500	Argument	dp -> read_pp		7330240	0					
ANR	7330501	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330502	Identifier	dp		7330240	0					
ANR	7330503	Identifier	read_pp		7330240	1					
ANR	7330504	Argument	dp -> ip		7330240	1					
ANR	7330505	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330506	Identifier	dp		7330240	0					
ANR	7330507	Identifier	ip		7330240	1					
ANR	7330508	ExpressionStatement	"dp -> bpp = png_get_bit_depth ( dp -> read_pp , dp -> ip ) * png_get_channels ( dp -> read_pp , dp -> ip )"	1799:3:55004:55105	7330240	27	True				
ANR	7330509	AssignmentExpression	"dp -> bpp = png_get_bit_depth ( dp -> read_pp , dp -> ip ) * png_get_channels ( dp -> read_pp , dp -> ip )"		7330240	0		=			
ANR	7330510	PtrMemberAccess	dp -> bpp		7330240	0					
ANR	7330511	Identifier	dp		7330240	0					
ANR	7330512	Identifier	bpp		7330240	1					
ANR	7330513	MultiplicativeExpression	"png_get_bit_depth ( dp -> read_pp , dp -> ip ) * png_get_channels ( dp -> read_pp , dp -> ip )"		7330240	1		*			
ANR	7330514	CallExpression	"png_get_bit_depth ( dp -> read_pp , dp -> ip )"		7330240	0					
ANR	7330515	Callee	png_get_bit_depth		7330240	0					
ANR	7330516	Identifier	png_get_bit_depth		7330240	0					
ANR	7330517	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330518	Argument	dp -> read_pp		7330240	0					
ANR	7330519	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330520	Identifier	dp		7330240	0					
ANR	7330521	Identifier	read_pp		7330240	1					
ANR	7330522	Argument	dp -> ip		7330240	1					
ANR	7330523	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330524	Identifier	dp		7330240	0					
ANR	7330525	Identifier	ip		7330240	1					
ANR	7330526	CallExpression	"png_get_channels ( dp -> read_pp , dp -> ip )"		7330240	1					
ANR	7330527	Callee	png_get_channels		7330240	0					
ANR	7330528	Identifier	png_get_channels		7330240	0					
ANR	7330529	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330530	Argument	dp -> read_pp		7330240	0					
ANR	7330531	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330532	Identifier	dp		7330240	0					
ANR	7330533	Identifier	read_pp		7330240	1					
ANR	7330534	Argument	dp -> ip		7330240	1					
ANR	7330535	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330536	Identifier	dp		7330240	0					
ANR	7330537	Identifier	ip		7330240	1					
ANR	7330538	CompoundStatement		60:6:2144:2203	7330240	28					
ANR	7330539	IdentifierDeclStatement	"png_alloc_size_t rb = png_get_rowbytes ( dp -> read_pp , dp -> ip ) ;"	1806:6:55307:55366	7330240	0	True				
ANR	7330540	IdentifierDecl	"rb = png_get_rowbytes ( dp -> read_pp , dp -> ip )"		7330240	0					
ANR	7330541	IdentifierDeclType	png_alloc_size_t		7330240	0					
ANR	7330542	Identifier	rb		7330240	1					
ANR	7330543	AssignmentExpression	"rb = png_get_rowbytes ( dp -> read_pp , dp -> ip )"		7330240	2		=			
ANR	7330544	Identifier	rb		7330240	0					
ANR	7330545	CallExpression	"png_get_rowbytes ( dp -> read_pp , dp -> ip )"		7330240	1					
ANR	7330546	Callee	png_get_rowbytes		7330240	0					
ANR	7330547	Identifier	png_get_rowbytes		7330240	0					
ANR	7330548	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330549	Argument	dp -> read_pp		7330240	0					
ANR	7330550	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330551	Identifier	dp		7330240	0					
ANR	7330552	Identifier	read_pp		7330240	1					
ANR	7330553	Argument	dp -> ip		7330240	1					
ANR	7330554	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330555	Identifier	dp		7330240	0					
ANR	7330556	Identifier	ip		7330240	1					
ANR	7330557	IfStatement	if ( rb == 0 )		7330240	1					
ANR	7330558	Condition	rb == 0	1808:10:55379:55385	7330240	0	True				
ANR	7330559	EqualityExpression	rb == 0		7330240	0		==			
ANR	7330560	Identifier	rb		7330240	0					
ANR	7330561	PrimaryExpression	0		7330240	1					
ANR	7330562	ExpressionStatement	"png_error ( dp -> read_pp , ""invalid row byte count from libpng"" )"	1809:9:55397:55457	7330240	1	True				
ANR	7330563	CallExpression	"png_error ( dp -> read_pp , ""invalid row byte count from libpng"" )"		7330240	0					
ANR	7330564	Callee	png_error		7330240	0					
ANR	7330565	Identifier	png_error		7330240	0					
ANR	7330566	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330567	Argument	dp -> read_pp		7330240	0					
ANR	7330568	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330569	Identifier	dp		7330240	0					
ANR	7330570	Identifier	read_pp		7330240	1					
ANR	7330571	Argument	"""invalid row byte count from libpng"""		7330240	1					
ANR	7330572	PrimaryExpression	"""invalid row byte count from libpng"""		7330240	0					
ANR	7330573	IfStatement	if ( ( MAX_SIZE - dp -> h ) / rb < dp -> h )		7330240	2					
ANR	7330574	Condition	( MAX_SIZE - dp -> h ) / rb < dp -> h	1812:10:55510:55536	7330240	0	True				
ANR	7330575	RelationalExpression	( MAX_SIZE - dp -> h ) / rb < dp -> h		7330240	0		<			
ANR	7330576	MultiplicativeExpression	( MAX_SIZE - dp -> h ) / rb		7330240	0		/			
ANR	7330577	AdditiveExpression	MAX_SIZE - dp -> h		7330240	0		-			
ANR	7330578	Identifier	MAX_SIZE		7330240	0					
ANR	7330579	PtrMemberAccess	dp -> h		7330240	1					
ANR	7330580	Identifier	dp		7330240	0					
ANR	7330581	Identifier	h		7330240	1					
ANR	7330582	Identifier	rb		7330240	1					
ANR	7330583	PtrMemberAccess	dp -> h		7330240	1					
ANR	7330584	Identifier	dp		7330240	0					
ANR	7330585	Identifier	h		7330240	1					
ANR	7330586	ExpressionStatement	"png_error ( dp -> read_pp , ""image too large"" )"	1813:9:55548:55589	7330240	1	True				
ANR	7330587	CallExpression	"png_error ( dp -> read_pp , ""image too large"" )"		7330240	0					
ANR	7330588	Callee	png_error		7330240	0					
ANR	7330589	Identifier	png_error		7330240	0					
ANR	7330590	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330591	Argument	dp -> read_pp		7330240	0					
ANR	7330592	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330593	Identifier	dp		7330240	0					
ANR	7330594	Identifier	read_pp		7330240	1					
ANR	7330595	Argument	"""image too large"""		7330240	1					
ANR	7330596	PrimaryExpression	"""image too large"""		7330240	0					
ANR	7330597	ExpressionStatement	dp -> size = rb * dp -> h + dp -> h	1815:6:55598:55642	7330240	3	True				
ANR	7330598	AssignmentExpression	dp -> size = rb * dp -> h + dp -> h		7330240	0		=			
ANR	7330599	PtrMemberAccess	dp -> size		7330240	0					
ANR	7330600	Identifier	dp		7330240	0					
ANR	7330601	Identifier	size		7330240	1					
ANR	7330602	AdditiveExpression	rb * dp -> h + dp -> h		7330240	1		+			
ANR	7330603	MultiplicativeExpression	rb * dp -> h		7330240	0		*			
ANR	7330604	Identifier	rb		7330240	0					
ANR	7330605	PtrMemberAccess	dp -> h		7330240	1					
ANR	7330606	Identifier	dp		7330240	0					
ANR	7330607	Identifier	h		7330240	1					
ANR	7330608	PtrMemberAccess	dp -> h		7330240	1					
ANR	7330609	Identifier	dp		7330240	0					
ANR	7330610	Identifier	h		7330240	1					
ANR	7330611	IfStatement	if ( dp -> ct == PNG_COLOR_TYPE_PALETTE && ( dp -> options & FIX_INDEX ) != 0 )		7330240	29					
ANR	7330612	Condition	dp -> ct == PNG_COLOR_TYPE_PALETTE && ( dp -> options & FIX_INDEX ) != 0	1819:7:55674:55739	7330240	0	True				
ANR	7330613	AndExpression	dp -> ct == PNG_COLOR_TYPE_PALETTE && ( dp -> options & FIX_INDEX ) != 0		7330240	0		&&			
ANR	7330614	EqualityExpression	dp -> ct == PNG_COLOR_TYPE_PALETTE		7330240	0		==			
ANR	7330615	PtrMemberAccess	dp -> ct		7330240	0					
ANR	7330616	Identifier	dp		7330240	0					
ANR	7330617	Identifier	ct		7330240	1					
ANR	7330618	Identifier	PNG_COLOR_TYPE_PALETTE		7330240	1					
ANR	7330619	EqualityExpression	( dp -> options & FIX_INDEX ) != 0		7330240	1		!=			
ANR	7330620	BitAndExpression	dp -> options & FIX_INDEX		7330240	0		&			
ANR	7330621	PtrMemberAccess	dp -> options		7330240	0					
ANR	7330622	Identifier	dp		7330240	0					
ANR	7330623	Identifier	options		7330240	1					
ANR	7330624	Identifier	FIX_INDEX		7330240	1					
ANR	7330625	PrimaryExpression	0		7330240	1					
ANR	7330626	CompoundStatement		77:6:2681:2693	7330240	1					
ANR	7330627	IdentifierDeclStatement	"int max = png_get_palette_max ( dp -> read_pp , dp -> ip ) ;"	1821:6:55753:55803	7330240	0	True				
ANR	7330628	IdentifierDecl	"max = png_get_palette_max ( dp -> read_pp , dp -> ip )"		7330240	0					
ANR	7330629	IdentifierDeclType	int		7330240	0					
ANR	7330630	Identifier	max		7330240	1					
ANR	7330631	AssignmentExpression	"max = png_get_palette_max ( dp -> read_pp , dp -> ip )"		7330240	2		=			
ANR	7330632	Identifier	max		7330240	0					
ANR	7330633	CallExpression	"png_get_palette_max ( dp -> read_pp , dp -> ip )"		7330240	1					
ANR	7330634	Callee	png_get_palette_max		7330240	0					
ANR	7330635	Identifier	png_get_palette_max		7330240	0					
ANR	7330636	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330637	Argument	dp -> read_pp		7330240	0					
ANR	7330638	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330639	Identifier	dp		7330240	0					
ANR	7330640	Identifier	read_pp		7330240	1					
ANR	7330641	Argument	dp -> ip		7330240	1					
ANR	7330642	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330643	Identifier	dp		7330240	0					
ANR	7330644	Identifier	ip		7330240	1					
ANR	7330645	IdentifierDeclStatement	png_colorp palette = NULL ;	1822:6:55811:55836	7330240	1	True				
ANR	7330646	IdentifierDecl	palette = NULL		7330240	0					
ANR	7330647	IdentifierDeclType	png_colorp		7330240	0					
ANR	7330648	Identifier	palette		7330240	1					
ANR	7330649	AssignmentExpression	palette = NULL		7330240	2		=			
ANR	7330650	Identifier	NULL		7330240	0					
ANR	7330651	Identifier	NULL		7330240	1					
ANR	7330652	IdentifierDeclStatement	int num = - 1 ;	1823:6:55844:55856	7330240	2	True				
ANR	7330653	IdentifierDecl	num = - 1		7330240	0					
ANR	7330654	IdentifierDeclType	int		7330240	0					
ANR	7330655	Identifier	num		7330240	1					
ANR	7330656	AssignmentExpression	num = - 1		7330240	2		=			
ANR	7330657	Identifier	num		7330240	0					
ANR	7330658	UnaryOperationExpression	- 1		7330240	1					
ANR	7330659	UnaryOperator	-		7330240	0					
ANR	7330660	PrimaryExpression	1		7330240	1					
ANR	7330661	IfStatement	"if ( png_get_PLTE ( dp -> read_pp , dp -> ip , & palette , & num ) != PNG_INFO_PLTE || max < 0 || num <= 0 || palette == NULL )"		7330240	3					
ANR	7330662	Condition	"png_get_PLTE ( dp -> read_pp , dp -> ip , & palette , & num ) != PNG_INFO_PLTE || max < 0 || num <= 0 || palette == NULL"	1825:10:55869:55986	7330240	0	True				
ANR	7330663	OrExpression	"png_get_PLTE ( dp -> read_pp , dp -> ip , & palette , & num ) != PNG_INFO_PLTE || max < 0 || num <= 0 || palette == NULL"		7330240	0		||			
ANR	7330664	EqualityExpression	"png_get_PLTE ( dp -> read_pp , dp -> ip , & palette , & num ) != PNG_INFO_PLTE"		7330240	0		!=			
ANR	7330665	CallExpression	"png_get_PLTE ( dp -> read_pp , dp -> ip , & palette , & num )"		7330240	0					
ANR	7330666	Callee	png_get_PLTE		7330240	0					
ANR	7330667	Identifier	png_get_PLTE		7330240	0					
ANR	7330668	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330669	Argument	dp -> read_pp		7330240	0					
ANR	7330670	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330671	Identifier	dp		7330240	0					
ANR	7330672	Identifier	read_pp		7330240	1					
ANR	7330673	Argument	dp -> ip		7330240	1					
ANR	7330674	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330675	Identifier	dp		7330240	0					
ANR	7330676	Identifier	ip		7330240	1					
ANR	7330677	Argument	& palette		7330240	2					
ANR	7330678	UnaryOperationExpression	& palette		7330240	0					
ANR	7330679	UnaryOperator	&		7330240	0					
ANR	7330680	Identifier	palette		7330240	1					
ANR	7330681	Argument	& num		7330240	3					
ANR	7330682	UnaryOperationExpression	& num		7330240	0					
ANR	7330683	UnaryOperator	&		7330240	0					
ANR	7330684	Identifier	num		7330240	1					
ANR	7330685	Identifier	PNG_INFO_PLTE		7330240	1					
ANR	7330686	OrExpression	max < 0 || num <= 0 || palette == NULL		7330240	1		||			
ANR	7330687	RelationalExpression	max < 0		7330240	0		<			
ANR	7330688	Identifier	max		7330240	0					
ANR	7330689	PrimaryExpression	0		7330240	1					
ANR	7330690	OrExpression	num <= 0 || palette == NULL		7330240	1		||			
ANR	7330691	RelationalExpression	num <= 0		7330240	0		<=			
ANR	7330692	Identifier	num		7330240	0					
ANR	7330693	PrimaryExpression	0		7330240	1					
ANR	7330694	EqualityExpression	palette == NULL		7330240	1		==			
ANR	7330695	Identifier	palette		7330240	0					
ANR	7330696	Identifier	NULL		7330240	1					
ANR	7330697	ExpressionStatement	"display_log ( dp , LIBPNG_ERROR , ""invalid png_get_PLTE result"" )"	1827:9:55998:56058	7330240	1	True				
ANR	7330698	CallExpression	"display_log ( dp , LIBPNG_ERROR , ""invalid png_get_PLTE result"" )"		7330240	0					
ANR	7330699	Callee	display_log		7330240	0					
ANR	7330700	Identifier	display_log		7330240	0					
ANR	7330701	ArgumentList	dp		7330240	1					
ANR	7330702	Argument	dp		7330240	0					
ANR	7330703	Identifier	dp		7330240	0					
ANR	7330704	Argument	LIBPNG_ERROR		7330240	1					
ANR	7330705	Identifier	LIBPNG_ERROR		7330240	0					
ANR	7330706	Argument	"""invalid png_get_PLTE result"""		7330240	2					
ANR	7330707	PrimaryExpression	"""invalid png_get_PLTE result"""		7330240	0					
ANR	7330708	IfStatement	if ( max >= num )		7330240	4					
ANR	7330709	Condition	max >= num	1829:10:56071:56080	7330240	0	True				
ANR	7330710	RelationalExpression	max >= num		7330240	0		>=			
ANR	7330711	Identifier	max		7330240	0					
ANR	7330712	Identifier	num		7330240	1					
ANR	7330713	CompoundStatement		87:9:2987:3008	7330240	1					
ANR	7330714	IdentifierDeclStatement	int i ;	1832:9:56134:56139	7330240	0	True				
ANR	7330715	IdentifierDecl	i		7330240	0					
ANR	7330716	IdentifierDeclType	int		7330240	0					
ANR	7330717	Identifier	i		7330240	1					
ANR	7330718	IdentifierDeclStatement	png_color newpal [ 256 ] ;	1833:9:56150:56171	7330240	1	True				
ANR	7330719	IdentifierDecl	newpal [ 256 ]		7330240	0					
ANR	7330720	IdentifierDeclType	png_color [ 256 ]		7330240	0					
ANR	7330721	Identifier	newpal		7330240	1					
ANR	7330722	PrimaryExpression	256		7330240	2					
ANR	7330723	ForStatement	for ( i = 0 ; i < num ; ++ i )		7330240	2					
ANR	7330724	ForInit	i = 0 ;	1835:14:56188:56191	7330240	0	True				
ANR	7330725	AssignmentExpression	i = 0		7330240	0		=			
ANR	7330726	Identifier	i		7330240	0					
ANR	7330727	PrimaryExpression	0		7330240	1					
ANR	7330728	Condition	i < num	1835:19:56193:56197	7330240	1	True				
ANR	7330729	RelationalExpression	i < num		7330240	0		<			
ANR	7330730	Identifier	i		7330240	0					
ANR	7330731	Identifier	num		7330240	1					
ANR	7330732	UnaryExpression	++ i	1835:26:56200:56202	7330240	2	True				
ANR	7330733	IncDec	++		7330240	0					
ANR	7330734	Identifier	i		7330240	1					
ANR	7330735	ExpressionStatement	newpal [ i ] = palette [ i ]	1836:12:56217:56239	7330240	3	True				
ANR	7330736	AssignmentExpression	newpal [ i ] = palette [ i ]		7330240	0		=			
ANR	7330737	ArrayIndexing	newpal [ i ]		7330240	0					
ANR	7330738	Identifier	newpal		7330240	0					
ANR	7330739	Identifier	i		7330240	1					
ANR	7330740	ArrayIndexing	palette [ i ]		7330240	1					
ANR	7330741	Identifier	palette		7330240	0					
ANR	7330742	Identifier	i		7330240	1					
ANR	7330743	ForStatement	for ( ; i <= max ; ++ i )		7330240	3					
ANR	7330744	Condition	i <= max	1839:16:56317:56322	7330240	0	True				
ANR	7330745	RelationalExpression	i <= max		7330240	0		<=			
ANR	7330746	Identifier	i		7330240	0					
ANR	7330747	Identifier	max		7330240	1					
ANR	7330748	UnaryExpression	++ i	1839:24:56325:56327	7330240	1	True				
ANR	7330749	IncDec	++		7330240	0					
ANR	7330750	Identifier	i		7330240	1					
ANR	7330751	CompoundStatement		94:9:3176:3176	7330240	2					
ANR	7330752	ExpressionStatement	newpal [ i ] . red = 0xbe	1841:12:56353:56373	7330240	0	True				
ANR	7330753	AssignmentExpression	newpal [ i ] . red = 0xbe		7330240	0		=			
ANR	7330754	MemberAccess	newpal [ i ] . red		7330240	0					
ANR	7330755	ArrayIndexing	newpal [ i ]		7330240	0					
ANR	7330756	Identifier	newpal		7330240	0					
ANR	7330757	Identifier	i		7330240	1					
ANR	7330758	Identifier	red		7330240	1					
ANR	7330759	PrimaryExpression	0xbe		7330240	1					
ANR	7330760	ExpressionStatement	newpal [ i ] . green = 0xad	1842:12:56387:56409	7330240	1	True				
ANR	7330761	AssignmentExpression	newpal [ i ] . green = 0xad		7330240	0		=			
ANR	7330762	MemberAccess	newpal [ i ] . green		7330240	0					
ANR	7330763	ArrayIndexing	newpal [ i ]		7330240	0					
ANR	7330764	Identifier	newpal		7330240	0					
ANR	7330765	Identifier	i		7330240	1					
ANR	7330766	Identifier	green		7330240	1					
ANR	7330767	PrimaryExpression	0xad		7330240	1					
ANR	7330768	ExpressionStatement	newpal [ i ] . blue = 0xed	1843:12:56423:56444	7330240	2	True				
ANR	7330769	AssignmentExpression	newpal [ i ] . blue = 0xed		7330240	0		=			
ANR	7330770	MemberAccess	newpal [ i ] . blue		7330240	0					
ANR	7330771	ArrayIndexing	newpal [ i ]		7330240	0					
ANR	7330772	Identifier	newpal		7330240	0					
ANR	7330773	Identifier	i		7330240	1					
ANR	7330774	Identifier	blue		7330240	1					
ANR	7330775	PrimaryExpression	0xed		7330240	1					
ANR	7330776	ExpressionStatement	"png_set_PLTE ( dp -> read_pp , dp -> ip , newpal , i )"	1846:9:56467:56511	7330240	4	True				
ANR	7330777	CallExpression	"png_set_PLTE ( dp -> read_pp , dp -> ip , newpal , i )"		7330240	0					
ANR	7330778	Callee	png_set_PLTE		7330240	0					
ANR	7330779	Identifier	png_set_PLTE		7330240	0					
ANR	7330780	ArgumentList	dp -> read_pp		7330240	1					
ANR	7330781	Argument	dp -> read_pp		7330240	0					
ANR	7330782	PtrMemberAccess	dp -> read_pp		7330240	0					
ANR	7330783	Identifier	dp		7330240	0					
ANR	7330784	Identifier	read_pp		7330240	1					
ANR	7330785	Argument	dp -> ip		7330240	1					
ANR	7330786	PtrMemberAccess	dp -> ip		7330240	0					
ANR	7330787	Identifier	dp		7330240	0					
ANR	7330788	Identifier	ip		7330240	1					
ANR	7330789	Argument	newpal		7330240	2					
ANR	7330790	Identifier	newpal		7330240	0					
ANR	7330791	Argument	i		7330240	3					
ANR	7330792	Identifier	i		7330240	0					
ANR	7330793	ExpressionStatement	display_clean_read ( dp )	1851:3:56553:56575	7330240	30	True				
ANR	7330794	CallExpression	display_clean_read ( dp )		7330240	0					
ANR	7330795	Callee	display_clean_read		7330240	0					
ANR	7330796	Identifier	display_clean_read		7330240	0					
ANR	7330797	ArgumentList	dp		7330240	1					
ANR	7330798	Argument	dp		7330240	0					
ANR	7330799	Identifier	dp		7330240	0					
ANR	7330800	ExpressionStatement	"dp -> operation = ""none"""	1852:3:56580:56602	7330240	31	True				
ANR	7330801	AssignmentExpression	"dp -> operation = ""none"""		7330240	0		=			
ANR	7330802	PtrMemberAccess	dp -> operation		7330240	0					
ANR	7330803	Identifier	dp		7330240	0					
ANR	7330804	Identifier	operation		7330240	1					
ANR	7330805	PrimaryExpression	"""none"""		7330240	1					
ANR	7330806	ReturnType	static void		7330240	1					
ANR	7330807	Identifier	read_png		7330240	2					
ANR	7330808	ParameterList	"struct display * dp , const char * filename"		7330240	3					
ANR	7330809	Parameter	struct display * dp	1746:9:53120:53137	7330240	0	True				
ANR	7330810	ParameterType	struct display *		7330240	0					
ANR	7330811	Identifier	dp		7330240	1					
ANR	7330812	Parameter	const char * filename	1746:29:53140:53159	7330240	1	True				
ANR	7330813	ParameterType	const char *		7330240	0					
ANR	7330814	Identifier	filename		7330240	1					
ANR	7330815	CFGEntryNode	ENTRY		7330240		True				
ANR	7330816	CFGExitNode	EXIT		7330240		True				
ANR	7330817	Symbol	dp -> ip		7330240						
ANR	7330818	Symbol	* newpal		7330240						
ANR	7330819	Symbol	display_error		7330240						
ANR	7330820	Symbol	num		7330240						
ANR	7330821	Symbol	newpal		7330240						
ANR	7330822	Symbol	dp		7330240						
ANR	7330823	Symbol	IGNORE_INDEX		7330240						
ANR	7330824	Symbol	start_timer		7330240						
ANR	7330825	Symbol	png_set_user_limits		7330240						
ANR	7330826	Symbol	read_function		7330240						
ANR	7330827	Symbol	palette		7330240						
ANR	7330828	Symbol	png_get_image_height		7330240						
ANR	7330829	Symbol	NULL		7330240						
ANR	7330830	Symbol	png_get_bit_depth		7330240						
ANR	7330831	Symbol	png_get_PLTE		7330240						
ANR	7330832	Symbol	LIBPNG_ERROR		7330240						
ANR	7330833	Symbol	MAX_SIZE		7330240						
ANR	7330834	Symbol	dp -> h		7330240						
ANR	7330835	Symbol	PNG_INFO_PLTE		7330240						
ANR	7330836	Symbol	& num		7330240						
ANR	7330837	Symbol	& palette		7330240						
ANR	7330838	Symbol	rb		7330240						
ANR	7330839	Symbol	filename		7330240						
ANR	7330840	Symbol	newpal [ i ] . red		7330240						
ANR	7330841	Symbol	dp -> w		7330240						
ANR	7330842	Symbol	PNG_LIBPNG_VER_STRING		7330240						
ANR	7330843	Symbol	FIX_INDEX		7330240						
ANR	7330844	Symbol	newpal [ i ] . green		7330240						
ANR	7330845	Symbol	PNGCP_TIME_READ		7330240						
ANR	7330846	Symbol	* palette		7330240						
ANR	7330847	Symbol	dp -> operation		7330240						
ANR	7330848	Symbol	dp -> ct		7330240						
ANR	7330849	Symbol	dp -> bpp		7330240						
ANR	7330850	Symbol	* dp		7330240						
ANR	7330851	Symbol	png_get_channels		7330240						
ANR	7330852	Symbol	png_create_read_struct		7330240						
ANR	7330853	Symbol	display_warning		7330240						
ANR	7330854	Symbol	png_get_color_type		7330240						
ANR	7330855	Symbol	max		7330240						
ANR	7330856	Symbol	dp -> options		7330240						
ANR	7330857	Symbol	i		7330240						
ANR	7330858	Symbol	dp -> read_pp		7330240						
ANR	7330859	Symbol	png_get_rowbytes		7330240						
ANR	7330860	Symbol	png_create_info_struct		7330240						
ANR	7330861	Symbol	png_set_keep_unknown_chunks		7330240						
ANR	7330862	Symbol	png_get_image_width		7330240						
ANR	7330863	Symbol	* i		7330240						
ANR	7330864	Symbol	dp -> size		7330240						
ANR	7330865	Symbol	png_get_palette_max		7330240						
ANR	7330866	Symbol	newpal [ i ] . blue		7330240						
ANR	7330867	Symbol	png_set_benign_errors		7330240						
ANR	7330868	Symbol	PNG_COLOR_TYPE_PALETTE		7330240						
ANR	7330869	Function	display_start_write	1855:0:56607:57163							
ANR	7330870	FunctionDef	"display_start_write (struct display * dp , const char * filename)"		7330869	0					
ANR	7330871	CompoundStatement		1857:0:56681:57163	7330869	0					
ANR	7330872	ExpressionStatement	assert ( dp -> fp == NULL )	1858:3:56686:56708	7330869	0	True				
ANR	7330873	CallExpression	assert ( dp -> fp == NULL )		7330869	0					
ANR	7330874	Callee	assert		7330869	0					
ANR	7330875	Identifier	assert		7330869	0					
ANR	7330876	ArgumentList	dp -> fp == NULL		7330869	1					
ANR	7330877	Argument	dp -> fp == NULL		7330869	0					
ANR	7330878	EqualityExpression	dp -> fp == NULL		7330869	0		==			
ANR	7330879	PtrMemberAccess	dp -> fp		7330869	0					
ANR	7330880	Identifier	dp		7330869	0					
ANR	7330881	Identifier	fp		7330869	1					
ANR	7330882	Identifier	NULL		7330869	1					
ANR	7330883	IfStatement	if ( ( dp -> options & NOWRITE ) != 0 )		7330869	1					
ANR	7330884	Condition	( dp -> options & NOWRITE ) != 0	1860:7:56718:56745	7330869	0	True				
ANR	7330885	EqualityExpression	( dp -> options & NOWRITE ) != 0		7330869	0		!=			
ANR	7330886	BitAndExpression	dp -> options & NOWRITE		7330869	0		&			
ANR	7330887	PtrMemberAccess	dp -> options		7330869	0					
ANR	7330888	Identifier	dp		7330869	0					
ANR	7330889	Identifier	options		7330869	1					
ANR	7330890	Identifier	NOWRITE		7330869	1					
ANR	7330891	PrimaryExpression	0		7330869	1					
ANR	7330892	ExpressionStatement	"dp -> output_file = ""<no write>"""	1861:6:56754:56784	7330869	1	True				
ANR	7330893	AssignmentExpression	"dp -> output_file = ""<no write>"""		7330869	0		=			
ANR	7330894	PtrMemberAccess	dp -> output_file		7330869	0					
ANR	7330895	Identifier	dp		7330869	0					
ANR	7330896	Identifier	output_file		7330869	1					
ANR	7330897	PrimaryExpression	"""<no write>"""		7330869	1					
ANR	7330898	ElseStatement	else		7330869	0					
ANR	7330899	CompoundStatement		8:3:116:116	7330869	0					
ANR	7330900	IfStatement	if ( filename != NULL )		7330869	0					
ANR	7330901	Condition	filename != NULL	1865:10:56810:56825	7330869	0	True				
ANR	7330902	EqualityExpression	filename != NULL		7330869	0		!=			
ANR	7330903	Identifier	filename		7330869	0					
ANR	7330904	Identifier	NULL		7330869	1					
ANR	7330905	CompoundStatement		10:6:152:152	7330869	1					
ANR	7330906	ExpressionStatement	dp -> output_file = filename	1867:9:56845:56871	7330869	0	True				
ANR	7330907	AssignmentExpression	dp -> output_file = filename		7330869	0		=			
ANR	7330908	PtrMemberAccess	dp -> output_file		7330869	0					
ANR	7330909	Identifier	dp		7330869	0					
ANR	7330910	Identifier	output_file		7330869	1					
ANR	7330911	Identifier	filename		7330869	1					
ANR	7330912	ExpressionStatement	"dp -> fp = fopen ( filename , ""wb"" )"	1868:9:56882:56912	7330869	1	True				
ANR	7330913	AssignmentExpression	"dp -> fp = fopen ( filename , ""wb"" )"		7330869	0		=			
ANR	7330914	PtrMemberAccess	dp -> fp		7330869	0					
ANR	7330915	Identifier	dp		7330869	0					
ANR	7330916	Identifier	fp		7330869	1					
ANR	7330917	CallExpression	"fopen ( filename , ""wb"" )"		7330869	1					
ANR	7330918	Callee	fopen		7330869	0					
ANR	7330919	Identifier	fopen		7330869	0					
ANR	7330920	ArgumentList	filename		7330869	1					
ANR	7330921	Argument	filename		7330869	0					
ANR	7330922	Identifier	filename		7330869	0					
ANR	7330923	Argument	"""wb"""		7330869	1					
ANR	7330924	PrimaryExpression	"""wb"""		7330869	0					
ANR	7330925	ElseStatement	else		7330869	0					
ANR	7330926	CompoundStatement		16:6:258:258	7330869	0					
ANR	7330927	ExpressionStatement	"dp -> output_file = ""<stdout>"""	1873:9:56951:56979	7330869	0	True				
ANR	7330928	AssignmentExpression	"dp -> output_file = ""<stdout>"""		7330869	0		=			
ANR	7330929	PtrMemberAccess	dp -> output_file		7330869	0					
ANR	7330930	Identifier	dp		7330869	0					
ANR	7330931	Identifier	output_file		7330869	1					
ANR	7330932	PrimaryExpression	"""<stdout>"""		7330869	1					
ANR	7330933	ExpressionStatement	dp -> fp = stdout	1874:9:56990:57005	7330869	1	True				
ANR	7330934	AssignmentExpression	dp -> fp = stdout		7330869	0		=			
ANR	7330935	PtrMemberAccess	dp -> fp		7330869	0					
ANR	7330936	Identifier	dp		7330869	0					
ANR	7330937	Identifier	fp		7330869	1					
ANR	7330938	Identifier	stdout		7330869	1					
ANR	7330939	IfStatement	if ( dp -> fp == NULL )		7330869	1					
ANR	7330940	Condition	dp -> fp == NULL	1877:10:57026:57039	7330869	0	True				
ANR	7330941	EqualityExpression	dp -> fp == NULL		7330869	0		==			
ANR	7330942	PtrMemberAccess	dp -> fp		7330869	0					
ANR	7330943	Identifier	dp		7330869	0					
ANR	7330944	Identifier	fp		7330869	1					
ANR	7330945	Identifier	NULL		7330869	1					
ANR	7330946	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: file open failed (%s)"" , dp -> output_file , strerror ( errno ) )"	1878:9:57051:57156	7330869	1	True				
ANR	7330947	CallExpression	"display_log ( dp , USER_ERROR , ""%s: file open failed (%s)"" , dp -> output_file , strerror ( errno ) )"		7330869	0					
ANR	7330948	Callee	display_log		7330869	0					
ANR	7330949	Identifier	display_log		7330869	0					
ANR	7330950	ArgumentList	dp		7330869	1					
ANR	7330951	Argument	dp		7330869	0					
ANR	7330952	Identifier	dp		7330869	0					
ANR	7330953	Argument	USER_ERROR		7330869	1					
ANR	7330954	Identifier	USER_ERROR		7330869	0					
ANR	7330955	Argument	"""%s: file open failed (%s)"""		7330869	2					
ANR	7330956	PrimaryExpression	"""%s: file open failed (%s)"""		7330869	0					
ANR	7330957	Argument	dp -> output_file		7330869	3					
ANR	7330958	PtrMemberAccess	dp -> output_file		7330869	0					
ANR	7330959	Identifier	dp		7330869	0					
ANR	7330960	Identifier	output_file		7330869	1					
ANR	7330961	Argument	strerror ( errno )		7330869	4					
ANR	7330962	CallExpression	strerror ( errno )		7330869	0					
ANR	7330963	Callee	strerror		7330869	0					
ANR	7330964	Identifier	strerror		7330869	0					
ANR	7330965	ArgumentList	errno		7330869	1					
ANR	7330966	Argument	errno		7330869	0					
ANR	7330967	Identifier	errno		7330869	0					
ANR	7330968	ReturnType	static void		7330869	1					
ANR	7330969	Identifier	display_start_write		7330869	2					
ANR	7330970	ParameterList	"struct display * dp , const char * filename"		7330869	3					
ANR	7330971	Parameter	struct display * dp	1856:20:56639:56656	7330869	0	True				
ANR	7330972	ParameterType	struct display *		7330869	0					
ANR	7330973	Identifier	dp		7330869	1					
ANR	7330974	Parameter	const char * filename	1856:40:56659:56678	7330869	1	True				
ANR	7330975	ParameterType	const char *		7330869	0					
ANR	7330976	Identifier	filename		7330869	1					
ANR	7330977	CFGEntryNode	ENTRY		7330869		True				
ANR	7330978	CFGExitNode	EXIT		7330869		True				
ANR	7330979	Symbol	fopen		7330869						
ANR	7330980	Symbol	errno		7330869						
ANR	7330981	Symbol	NULL		7330869						
ANR	7330982	Symbol	dp -> fp		7330869						
ANR	7330983	Symbol	dp -> output_file		7330869						
ANR	7330984	Symbol	stdout		7330869						
ANR	7330985	Symbol	USER_ERROR		7330869						
ANR	7330986	Symbol	dp -> options		7330869						
ANR	7330987	Symbol	dp		7330869						
ANR	7330988	Symbol	strerror		7330869						
ANR	7330989	Symbol	* dp		7330869						
ANR	7330990	Symbol	filename		7330869						
ANR	7330991	Symbol	NOWRITE		7330869						
ANR	7330992	Function	write_function	1883:0:57166:57759							
ANR	7330993	FunctionDef	"write_function (png_structp pp , png_bytep data , png_size_t size)"		7330992	0					
ANR	7330994	CompoundStatement		1885:0:57251:57759	7330992	0					
ANR	7330995	IdentifierDeclStatement	struct display * dp = get_dp ( pp ) ;	1886:3:57256:57287	7330992	0	True				
ANR	7330996	IdentifierDecl	* dp = get_dp ( pp )		7330992	0					
ANR	7330997	IdentifierDeclType	struct display *		7330992	0					
ANR	7330998	Identifier	dp		7330992	1					
ANR	7330999	AssignmentExpression	* dp = get_dp ( pp )		7330992	2		=			
ANR	7331000	Identifier	dp		7330992	0					
ANR	7331001	CallExpression	get_dp ( pp )		7330992	1					
ANR	7331002	Callee	get_dp		7330992	0					
ANR	7331003	Identifier	get_dp		7330992	0					
ANR	7331004	ArgumentList	pp		7330992	1					
ANR	7331005	Argument	pp		7330992	0					
ANR	7331006	Identifier	pp		7330992	0					
ANR	7331007	IfStatement	"if ( dp -> fp == NULL || fwrite ( data , size , 1U , dp -> fp ) == 1U )"		7330992	1					
ANR	7331008	Condition	"dp -> fp == NULL || fwrite ( data , size , 1U , dp -> fp ) == 1U"	1891:7:57430:57483	7330992	0	True				
ANR	7331009	OrExpression	"dp -> fp == NULL || fwrite ( data , size , 1U , dp -> fp ) == 1U"		7330992	0		||			
ANR	7331010	EqualityExpression	dp -> fp == NULL		7330992	0		==			
ANR	7331011	PtrMemberAccess	dp -> fp		7330992	0					
ANR	7331012	Identifier	dp		7330992	0					
ANR	7331013	Identifier	fp		7330992	1					
ANR	7331014	Identifier	NULL		7330992	1					
ANR	7331015	EqualityExpression	"fwrite ( data , size , 1U , dp -> fp ) == 1U"		7330992	1		==			
ANR	7331016	CallExpression	"fwrite ( data , size , 1U , dp -> fp )"		7330992	0					
ANR	7331017	Callee	fwrite		7330992	0					
ANR	7331018	Identifier	fwrite		7330992	0					
ANR	7331019	ArgumentList	data		7330992	1					
ANR	7331020	Argument	data		7330992	0					
ANR	7331021	Identifier	data		7330992	0					
ANR	7331022	Argument	size		7330992	1					
ANR	7331023	Identifier	size		7330992	0					
ANR	7331024	Argument	1U		7330992	2					
ANR	7331025	PrimaryExpression	1U		7330992	0					
ANR	7331026	Argument	dp -> fp		7330992	3					
ANR	7331027	PtrMemberAccess	dp -> fp		7330992	0					
ANR	7331028	Identifier	dp		7330992	0					
ANR	7331029	Identifier	fp		7330992	1					
ANR	7331030	PrimaryExpression	1U		7330992	1					
ANR	7331031	CompoundStatement		8:3:237:237	7330992	1					
ANR	7331032	ExpressionStatement	dp -> write_size += size	1893:6:57497:57519	7330992	0	True				
ANR	7331033	AssignmentExpression	dp -> write_size += size		7330992	0		+=			
ANR	7331034	PtrMemberAccess	dp -> write_size		7330992	0					
ANR	7331035	Identifier	dp		7330992	0					
ANR	7331036	Identifier	write_size		7330992	1					
ANR	7331037	Identifier	size		7330992	1					
ANR	7331038	IfStatement	if ( dp -> write_size < size || dp -> write_size == MAX_SIZE )		7330992	1					
ANR	7331039	Condition	dp -> write_size < size || dp -> write_size == MAX_SIZE	1894:10:57531:57581	7330992	0	True				
ANR	7331040	OrExpression	dp -> write_size < size || dp -> write_size == MAX_SIZE		7330992	0		||			
ANR	7331041	RelationalExpression	dp -> write_size < size		7330992	0		<			
ANR	7331042	PtrMemberAccess	dp -> write_size		7330992	0					
ANR	7331043	Identifier	dp		7330992	0					
ANR	7331044	Identifier	write_size		7330992	1					
ANR	7331045	Identifier	size		7330992	1					
ANR	7331046	EqualityExpression	dp -> write_size == MAX_SIZE		7330992	1		==			
ANR	7331047	PtrMemberAccess	dp -> write_size		7330992	0					
ANR	7331048	Identifier	dp		7330992	0					
ANR	7331049	Identifier	write_size		7330992	1					
ANR	7331050	Identifier	MAX_SIZE		7330992	1					
ANR	7331051	ExpressionStatement	"png_error ( pp , ""IDAT size overflow"" )"	1895:9:57593:57628	7330992	1	True				
ANR	7331052	CallExpression	"png_error ( pp , ""IDAT size overflow"" )"		7330992	0					
ANR	7331053	Callee	png_error		7330992	0					
ANR	7331054	Identifier	png_error		7330992	0					
ANR	7331055	ArgumentList	pp		7330992	1					
ANR	7331056	Argument	pp		7330992	0					
ANR	7331057	Identifier	pp		7330992	0					
ANR	7331058	Argument	"""IDAT size overflow"""		7330992	1					
ANR	7331059	PrimaryExpression	"""IDAT size overflow"""		7330992	0					
ANR	7331060	ElseStatement	else		7330992	0					
ANR	7331061	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: PNG file write failed (%s)"" , dp -> output_file , strerror ( errno ) )"	1899:6:57650:57757	7330992	0	True				
ANR	7331062	CallExpression	"display_log ( dp , USER_ERROR , ""%s: PNG file write failed (%s)"" , dp -> output_file , strerror ( errno ) )"		7330992	0					
ANR	7331063	Callee	display_log		7330992	0					
ANR	7331064	Identifier	display_log		7330992	0					
ANR	7331065	ArgumentList	dp		7330992	1					
ANR	7331066	Argument	dp		7330992	0					
ANR	7331067	Identifier	dp		7330992	0					
ANR	7331068	Argument	USER_ERROR		7330992	1					
ANR	7331069	Identifier	USER_ERROR		7330992	0					
ANR	7331070	Argument	"""%s: PNG file write failed (%s)"""		7330992	2					
ANR	7331071	PrimaryExpression	"""%s: PNG file write failed (%s)"""		7330992	0					
ANR	7331072	Argument	dp -> output_file		7330992	3					
ANR	7331073	PtrMemberAccess	dp -> output_file		7330992	0					
ANR	7331074	Identifier	dp		7330992	0					
ANR	7331075	Identifier	output_file		7330992	1					
ANR	7331076	Argument	strerror ( errno )		7330992	4					
ANR	7331077	CallExpression	strerror ( errno )		7330992	0					
ANR	7331078	Callee	strerror		7330992	0					
ANR	7331079	Identifier	strerror		7330992	0					
ANR	7331080	ArgumentList	errno		7330992	1					
ANR	7331081	Argument	errno		7330992	0					
ANR	7331082	Identifier	errno		7330992	0					
ANR	7331083	ReturnType	static void PNGCBAPI		7330992	1					
ANR	7331084	Identifier	write_function		7330992	2					
ANR	7331085	ParameterList	"png_structp pp , png_bytep data , png_size_t size"		7330992	3					
ANR	7331086	Parameter	png_structp pp	1884:15:57202:57215	7330992	0	True				
ANR	7331087	ParameterType	png_structp		7330992	0					
ANR	7331088	Identifier	pp		7330992	1					
ANR	7331089	Parameter	png_bytep data	1884:31:57218:57231	7330992	1	True				
ANR	7331090	ParameterType	png_bytep		7330992	0					
ANR	7331091	Identifier	data		7330992	1					
ANR	7331092	Parameter	png_size_t size	1884:47:57234:57248	7330992	2	True				
ANR	7331093	ParameterType	png_size_t		7330992	0					
ANR	7331094	Identifier	size		7330992	1					
ANR	7331095	CFGEntryNode	ENTRY		7330992		True				
ANR	7331096	CFGExitNode	EXIT		7330992		True				
ANR	7331097	Symbol	pp		7330992						
ANR	7331098	Symbol	errno		7330992						
ANR	7331099	Symbol	NULL		7330992						
ANR	7331100	Symbol	data		7330992						
ANR	7331101	Symbol	dp -> fp		7330992						
ANR	7331102	Symbol	dp -> output_file		7330992						
ANR	7331103	Symbol	USER_ERROR		7330992						
ANR	7331104	Symbol	MAX_SIZE		7330992						
ANR	7331105	Symbol	fwrite		7330992						
ANR	7331106	Symbol	dp		7330992						
ANR	7331107	Symbol	dp -> write_size		7330992						
ANR	7331108	Symbol	strerror		7330992						
ANR	7331109	Symbol	* dp		7330992						
ANR	7331110	Symbol	size		7330992						
ANR	7331111	Symbol	get_dp		7330992						
ANR	7331112	DeclStmt									
ANR	7331113	Decl							define SET_COMPRESSION	"define SET_COMPRESSION ( strategy , strategy )"	SET
ANR	7331114	Function	search_compression	1917:0:58337:58633							
ANR	7331115	FunctionDef	search_compression (struct display * dp)		7331114	0					
ANR	7331116	CompoundStatement		1919:0:58388:58633	7331114	0					
ANR	7331117	IdentifierDeclStatement	int val ;	1921:3:58473:58480	7331114	0	True				
ANR	7331118	IdentifierDecl	val		7331114	0					
ANR	7331119	IdentifierDeclType	int		7331114	0					
ANR	7331120	Identifier	val		7331114	1					
ANR	7331121	Statement	define	1923:3:58486:58491	7331114	1	True				
ANR	7331122	Statement	SET	1923:10:58493:58495	7331114	2	True				
ANR	7331123	Statement	(	1923:13:58496:58496	7331114	3	True				
ANR	7331124	Statement	name	1923:14:58497:58500	7331114	4	True				
ANR	7331125	Statement	","	1923:18:58501:58501	7331114	5	True				
ANR	7331126	Statement	func	1923:20:58503:58506	7331114	6	True				
ANR	7331127	Statement	)	1923:24:58507:58507	7331114	7	True				
ANR	7331128	IfStatement	"if ( getsearchopts ( dp , name , & val ) )"		7331114	8					
ANR	7331129	Condition	"getsearchopts ( dp , name , & val )"	1923:30:58513:58542	7331114	0	True				
ANR	7331130	CallExpression	"getsearchopts ( dp , name , & val )"		7331114	0					
ANR	7331131	Callee	getsearchopts		7331114	0					
ANR	7331132	Identifier	getsearchopts		7331114	0					
ANR	7331133	ArgumentList	dp		7331114	1					
ANR	7331134	Argument	dp		7331114	0					
ANR	7331135	Identifier	dp		7331114	0					
ANR	7331136	Argument	name		7331114	1					
ANR	7331137	Identifier	name		7331114	0					
ANR	7331138	Argument	& val		7331114	2					
ANR	7331139	UnaryOperationExpression	& val		7331114	0					
ANR	7331140	UnaryOperator	&		7331114	0					
ANR	7331141	Identifier	val		7331114	1					
ANR	7331142	IdentifierDeclStatement	"png_set_compression_ func ( dp -> write_pp , val ) ;"	1924:6:58552:58599	7331114	1	True				
ANR	7331143	IdentifierDecl	"func ( dp -> write_pp , val )"		7331114	0					
ANR	7331144	IdentifierDeclType	png_set_compression_		7331114	0					
ANR	7331145	Identifier	func		7331114	1					
ANR	7331146	Expression	"dp -> write_pp , val"		7331114	2					
ANR	7331147	PtrMemberAccess	dp -> write_pp		7331114	0					
ANR	7331148	Identifier	dp		7331114	0					
ANR	7331149	Identifier	write_pp		7331114	1					
ANR	7331150	Identifier	val		7331114	1					
ANR	7331151	Statement	SET_COMPRESSION	1925:3:58604:58618	7331114	9	True				
ANR	7331152	Statement	undef	1926:3:58623:58627	7331114	10	True				
ANR	7331153	Statement	SET	1926:9:58629:58631	7331114	11	True				
ANR	7331154	ReturnType	static void		7331114	1					
ANR	7331155	Identifier	search_compression		7331114	2					
ANR	7331156	ParameterList	struct display * dp		7331114	3					
ANR	7331157	Parameter	struct display * dp	1918:19:58368:58385	7331114	0	True				
ANR	7331158	ParameterType	struct display *		7331114	0					
ANR	7331159	Identifier	dp		7331114	1					
ANR	7331160	CFGEntryNode	ENTRY		7331114		True				
ANR	7331161	CFGExitNode	EXIT		7331114		True				
ANR	7331162	Symbol	val		7331114						
ANR	7331163	Symbol	& val		7331114						
ANR	7331164	Symbol	func		7331114						
ANR	7331165	Symbol	name		7331114						
ANR	7331166	Symbol	dp		7331114						
ANR	7331167	Symbol	getsearchopts		7331114						
ANR	7331168	Function	set_compression	1929:0:58636:58846							
ANR	7331169	FunctionDef	set_compression (struct display * dp)		7331168	0					
ANR	7331170	CompoundStatement		1931:0:58684:58846	7331168	0					
ANR	7331171	IdentifierDeclStatement	int val ;	1932:3:58689:58696	7331168	0	True				
ANR	7331172	IdentifierDecl	val		7331168	0					
ANR	7331173	IdentifierDeclType	int		7331168	0					
ANR	7331174	Identifier	val		7331168	1					
ANR	7331175	Statement	define	1934:3:58702:58707	7331168	1	True				
ANR	7331176	Statement	SET	1934:10:58709:58711	7331168	2	True				
ANR	7331177	Statement	(	1934:13:58712:58712	7331168	3	True				
ANR	7331178	Statement	name	1934:14:58713:58716	7331168	4	True				
ANR	7331179	Statement	","	1934:18:58717:58717	7331168	5	True				
ANR	7331180	Statement	func	1934:20:58719:58722	7331168	6	True				
ANR	7331181	Statement	)	1934:24:58723:58723	7331168	7	True				
ANR	7331182	IfStatement	"if ( getallopts ( dp , name , & val ) )"		7331168	8					
ANR	7331183	Condition	"getallopts ( dp , name , & val )"	1934:30:58729:58755	7331168	0	True				
ANR	7331184	CallExpression	"getallopts ( dp , name , & val )"		7331168	0					
ANR	7331185	Callee	getallopts		7331168	0					
ANR	7331186	Identifier	getallopts		7331168	0					
ANR	7331187	ArgumentList	dp		7331168	1					
ANR	7331188	Argument	dp		7331168	0					
ANR	7331189	Identifier	dp		7331168	0					
ANR	7331190	Argument	name		7331168	1					
ANR	7331191	Identifier	name		7331168	0					
ANR	7331192	Argument	& val		7331168	2					
ANR	7331193	UnaryOperationExpression	& val		7331168	0					
ANR	7331194	UnaryOperator	&		7331168	0					
ANR	7331195	Identifier	val		7331168	1					
ANR	7331196	IdentifierDeclStatement	"png_set_compression_ func ( dp -> write_pp , val ) ;"	1935:6:58765:58812	7331168	1	True				
ANR	7331197	IdentifierDecl	"func ( dp -> write_pp , val )"		7331168	0					
ANR	7331198	IdentifierDeclType	png_set_compression_		7331168	0					
ANR	7331199	Identifier	func		7331168	1					
ANR	7331200	Expression	"dp -> write_pp , val"		7331168	2					
ANR	7331201	PtrMemberAccess	dp -> write_pp		7331168	0					
ANR	7331202	Identifier	dp		7331168	0					
ANR	7331203	Identifier	write_pp		7331168	1					
ANR	7331204	Identifier	val		7331168	1					
ANR	7331205	Statement	SET_COMPRESSION	1936:3:58817:58831	7331168	9	True				
ANR	7331206	Statement	undef	1937:3:58836:58840	7331168	10	True				
ANR	7331207	Statement	SET	1937:9:58842:58844	7331168	11	True				
ANR	7331208	ReturnType	static void		7331168	1					
ANR	7331209	Identifier	set_compression		7331168	2					
ANR	7331210	ParameterList	struct display * dp		7331168	3					
ANR	7331211	Parameter	struct display * dp	1930:16:58664:58681	7331168	0	True				
ANR	7331212	ParameterType	struct display *		7331168	0					
ANR	7331213	Identifier	dp		7331168	1					
ANR	7331214	CFGEntryNode	ENTRY		7331168		True				
ANR	7331215	CFGExitNode	EXIT		7331168		True				
ANR	7331216	Symbol	val		7331168						
ANR	7331217	Symbol	& val		7331168						
ANR	7331218	Symbol	func		7331168						
ANR	7331219	Symbol	name		7331168						
ANR	7331220	Symbol	getallopts		7331168						
ANR	7331221	Symbol	dp		7331168						
ANR	7331222	Function	set_ICC_profile_compression	1941:0:58891:59140							
ANR	7331223	FunctionDef	set_ICC_profile_compression (struct display * dp)		7331222	0					
ANR	7331224	CompoundStatement		1943:0:58951:59140	7331222	0					
ANR	7331225	IdentifierDeclStatement	int val ;	1944:3:58956:58963	7331222	0	True				
ANR	7331226	IdentifierDecl	val		7331222	0					
ANR	7331227	IdentifierDeclType	int		7331222	0					
ANR	7331228	Identifier	val		7331222	1					
ANR	7331229	Statement	define	1946:3:58969:58974	7331222	1	True				
ANR	7331230	Statement	SET	1946:10:58976:58978	7331222	2	True				
ANR	7331231	Statement	(	1946:13:58979:58979	7331222	3	True				
ANR	7331232	Statement	name	1946:14:58980:58983	7331222	4	True				
ANR	7331233	Statement	","	1946:18:58984:58984	7331222	5	True				
ANR	7331234	Statement	func	1946:20:58986:58989	7331222	6	True				
ANR	7331235	Statement	)	1946:24:58990:58990	7331222	7	True				
ANR	7331236	Statement	if	1946:26:58992:58993	7331222	8	True				
ANR	7331237	Statement	(	1946:29:58995:58995	7331222	9	True				
ANR	7331238	Statement	getallopts	1946:30:58996:59005	7331222	10	True				
ANR	7331239	Statement	(	1946:40:59006:59006	7331222	11	True				
ANR	7331240	Statement	dp	1946:41:59007:59008	7331222	12	True				
ANR	7331241	Statement	","	1946:43:59009:59009	7331222	13	True				
ANR	7331242	Statement	"""ICC-profile-"""	1946:45:59011:59024	7331222	14	True				
ANR	7331243	Statement	name	1946:61:59027:59030	7331222	15	True				
ANR	7331244	Statement	","	1946:65:59031:59031	7331222	16	True				
ANR	7331245	Statement	&	1946:67:59033:59033	7331222	17	True				
ANR	7331246	Statement	val	1946:68:59034:59036	7331222	18	True				
ANR	7331247	Statement	)	1946:71:59037:59037	7331222	19	True				
ANR	7331248	Statement	)	1946:72:59038:59038	7331222	20	True				
ANR	7331249	IdentifierDeclStatement	"png_set_ICC_profile_compression_ func ( dp -> write_pp , val ) ;"	1947:6:59047:59106	7331222	21	True				
ANR	7331250	IdentifierDecl	"func ( dp -> write_pp , val )"		7331222	0					
ANR	7331251	IdentifierDeclType	png_set_ICC_profile_compression_		7331222	0					
ANR	7331252	Identifier	func		7331222	1					
ANR	7331253	Expression	"dp -> write_pp , val"		7331222	2					
ANR	7331254	PtrMemberAccess	dp -> write_pp		7331222	0					
ANR	7331255	Identifier	dp		7331222	0					
ANR	7331256	Identifier	write_pp		7331222	1					
ANR	7331257	Identifier	val		7331222	1					
ANR	7331258	Statement	SET_COMPRESSION	1948:3:59111:59125	7331222	22	True				
ANR	7331259	Statement	undef	1949:3:59130:59134	7331222	23	True				
ANR	7331260	Statement	SET	1949:9:59136:59138	7331222	24	True				
ANR	7331261	ReturnType	static void		7331222	1					
ANR	7331262	Identifier	set_ICC_profile_compression		7331222	2					
ANR	7331263	ParameterList	struct display * dp		7331222	3					
ANR	7331264	Parameter	struct display * dp	1942:28:58931:58948	7331222	0	True				
ANR	7331265	ParameterType	struct display *		7331222	0					
ANR	7331266	Identifier	dp		7331222	1					
ANR	7331267	CFGEntryNode	ENTRY		7331222		True				
ANR	7331268	CFGExitNode	EXIT		7331222		True				
ANR	7331269	Symbol	val		7331222						
ANR	7331270	Symbol	func		7331222						
ANR	7331271	Symbol	dp		7331222						
ANR	7331272	Function	set_text_compression	1961:0:59444:59672							
ANR	7331273	FunctionDef	set_text_compression (struct display * dp)		7331272	0					
ANR	7331274	CompoundStatement		1963:0:59497:59672	7331272	0					
ANR	7331275	IdentifierDeclStatement	int val ;	1964:3:59502:59509	7331272	0	True				
ANR	7331276	IdentifierDecl	val		7331272	0					
ANR	7331277	IdentifierDeclType	int		7331272	0					
ANR	7331278	Identifier	val		7331272	1					
ANR	7331279	Statement	define	1966:3:59515:59520	7331272	1	True				
ANR	7331280	Statement	SET	1966:10:59522:59524	7331272	2	True				
ANR	7331281	Statement	(	1966:13:59525:59525	7331272	3	True				
ANR	7331282	Statement	name	1966:14:59526:59529	7331272	4	True				
ANR	7331283	Statement	","	1966:18:59530:59530	7331272	5	True				
ANR	7331284	Statement	func	1966:20:59532:59535	7331272	6	True				
ANR	7331285	Statement	)	1966:24:59536:59536	7331272	7	True				
ANR	7331286	Statement	if	1966:26:59538:59539	7331272	8	True				
ANR	7331287	Statement	(	1966:29:59541:59541	7331272	9	True				
ANR	7331288	Statement	getallopts	1966:30:59542:59551	7331272	10	True				
ANR	7331289	Statement	(	1966:40:59552:59552	7331272	11	True				
ANR	7331290	Statement	dp	1966:41:59553:59554	7331272	12	True				
ANR	7331291	Statement	","	1966:43:59555:59555	7331272	13	True				
ANR	7331292	Statement	"""text-"""	1966:45:59557:59563	7331272	14	True				
ANR	7331293	Statement	name	1966:54:59566:59569	7331272	15	True				
ANR	7331294	Statement	","	1966:58:59570:59570	7331272	16	True				
ANR	7331295	Statement	&	1966:60:59572:59572	7331272	17	True				
ANR	7331296	Statement	val	1966:61:59573:59575	7331272	18	True				
ANR	7331297	Statement	)	1966:64:59576:59576	7331272	19	True				
ANR	7331298	Statement	)	1966:65:59577:59577	7331272	20	True				
ANR	7331299	IdentifierDeclStatement	"png_set_text_compression_ func ( dp -> write_pp , val ) ;"	1967:6:59586:59638	7331272	21	True				
ANR	7331300	IdentifierDecl	"func ( dp -> write_pp , val )"		7331272	0					
ANR	7331301	IdentifierDeclType	png_set_text_compression_		7331272	0					
ANR	7331302	Identifier	func		7331272	1					
ANR	7331303	Expression	"dp -> write_pp , val"		7331272	2					
ANR	7331304	PtrMemberAccess	dp -> write_pp		7331272	0					
ANR	7331305	Identifier	dp		7331272	0					
ANR	7331306	Identifier	write_pp		7331272	1					
ANR	7331307	Identifier	val		7331272	1					
ANR	7331308	Statement	SET_COMPRESSION	1968:3:59643:59657	7331272	22	True				
ANR	7331309	Statement	undef	1969:3:59662:59666	7331272	23	True				
ANR	7331310	Statement	SET	1969:9:59668:59670	7331272	24	True				
ANR	7331311	ReturnType	static void		7331272	1					
ANR	7331312	Identifier	set_text_compression		7331272	2					
ANR	7331313	ParameterList	struct display * dp		7331272	3					
ANR	7331314	Parameter	struct display * dp	1962:21:59477:59494	7331272	0	True				
ANR	7331315	ParameterType	struct display *		7331272	0					
ANR	7331316	Identifier	dp		7331272	1					
ANR	7331317	CFGEntryNode	ENTRY		7331272		True				
ANR	7331318	CFGExitNode	EXIT		7331272		True				
ANR	7331319	Symbol	val		7331272						
ANR	7331320	Symbol	func		7331272						
ANR	7331321	Symbol	dp		7331272						
ANR	7331322	Function	write_png	1975:0:59772:63108							
ANR	7331323	FunctionDef	"write_png (struct display * dp , const char * destname)"		7331322	0					
ANR	7331324	CompoundStatement		1977:0:59836:63108	7331322	0					
ANR	7331325	ExpressionStatement	display_clean_write ( dp )	1978:3:59841:59864	7331322	0	True				
ANR	7331326	CallExpression	display_clean_write ( dp )		7331322	0					
ANR	7331327	Callee	display_clean_write		7331322	0					
ANR	7331328	Identifier	display_clean_write		7331322	0					
ANR	7331329	ArgumentList	dp		7331322	1					
ANR	7331330	Argument	dp		7331322	0					
ANR	7331331	Identifier	dp		7331322	0					
ANR	7331332	ExpressionStatement	"display_start_write ( dp , destname )"	1979:3:59882:59915	7331322	1	True				
ANR	7331333	CallExpression	"display_start_write ( dp , destname )"		7331322	0					
ANR	7331334	Callee	display_start_write		7331322	0					
ANR	7331335	Identifier	display_start_write		7331322	0					
ANR	7331336	ArgumentList	dp		7331322	1					
ANR	7331337	Argument	dp		7331322	0					
ANR	7331338	Identifier	dp		7331322	0					
ANR	7331339	Argument	destname		7331322	1					
ANR	7331340	Identifier	destname		7331322	0					
ANR	7331341	ExpressionStatement	"dp -> write_pp = png_create_write_struct ( PNG_LIBPNG_VER_STRING , dp , display_error , display_warning )"	1981:3:59921:60024	7331322	2	True				
ANR	7331342	AssignmentExpression	"dp -> write_pp = png_create_write_struct ( PNG_LIBPNG_VER_STRING , dp , display_error , display_warning )"		7331322	0		=			
ANR	7331343	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331344	Identifier	dp		7331322	0					
ANR	7331345	Identifier	write_pp		7331322	1					
ANR	7331346	CallExpression	"png_create_write_struct ( PNG_LIBPNG_VER_STRING , dp , display_error , display_warning )"		7331322	1					
ANR	7331347	Callee	png_create_write_struct		7331322	0					
ANR	7331348	Identifier	png_create_write_struct		7331322	0					
ANR	7331349	ArgumentList	PNG_LIBPNG_VER_STRING		7331322	1					
ANR	7331350	Argument	PNG_LIBPNG_VER_STRING		7331322	0					
ANR	7331351	Identifier	PNG_LIBPNG_VER_STRING		7331322	0					
ANR	7331352	Argument	dp		7331322	1					
ANR	7331353	Identifier	dp		7331322	0					
ANR	7331354	Argument	display_error		7331322	2					
ANR	7331355	Identifier	display_error		7331322	0					
ANR	7331356	Argument	display_warning		7331322	3					
ANR	7331357	Identifier	display_warning		7331322	0					
ANR	7331358	IfStatement	if ( dp -> write_pp == NULL )		7331322	3					
ANR	7331359	Condition	dp -> write_pp == NULL	1984:7:60034:60053	7331322	0	True				
ANR	7331360	EqualityExpression	dp -> write_pp == NULL		7331322	0		==			
ANR	7331361	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331362	Identifier	dp		7331322	0					
ANR	7331363	Identifier	write_pp		7331322	1					
ANR	7331364	Identifier	NULL		7331322	1					
ANR	7331365	ExpressionStatement	"display_log ( dp , LIBPNG_ERROR , ""failed to create write png_struct"" )"	1985:6:60062:60128	7331322	1	True				
ANR	7331366	CallExpression	"display_log ( dp , LIBPNG_ERROR , ""failed to create write png_struct"" )"		7331322	0					
ANR	7331367	Callee	display_log		7331322	0					
ANR	7331368	Identifier	display_log		7331322	0					
ANR	7331369	ArgumentList	dp		7331322	1					
ANR	7331370	Argument	dp		7331322	0					
ANR	7331371	Identifier	dp		7331322	0					
ANR	7331372	Argument	LIBPNG_ERROR		7331322	1					
ANR	7331373	Identifier	LIBPNG_ERROR		7331322	0					
ANR	7331374	Argument	"""failed to create write png_struct"""		7331322	2					
ANR	7331375	PrimaryExpression	"""failed to create write png_struct"""		7331322	0					
ANR	7331376	IdentifierDeclStatement	"ifdef PNG_BENIGN_ERRORS_SUPPORTED png_set_benign_errors ( dp -> write_pp , 1 ) ;"	1987:3:60134:60223	7331322	4	True				
ANR	7331377	IdentifierDecl	"png_set_benign_errors ( dp -> write_pp , 1 )"		7331322	0					
ANR	7331378	IdentifierDeclType	ifdef PNG_BENIGN_ERRORS_SUPPORTED		7331322	0					
ANR	7331379	Identifier	png_set_benign_errors		7331322	1					
ANR	7331380	Expression	"dp -> write_pp , 1"		7331322	2					
ANR	7331381	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331382	Identifier	dp		7331322	0					
ANR	7331383	Identifier	write_pp		7331322	1					
ANR	7331384	PrimaryExpression	1		7331322	1					
ANR	7331385	IdentifierDeclStatement	"endif png_set_write_fn ( dp -> write_pp , dp , write_function , NULL ) ;"	1989:3:60228:60323	7331322	5	True				
ANR	7331386	IdentifierDecl	"png_set_write_fn ( dp -> write_pp , dp , write_function , NULL )"		7331322	0					
ANR	7331387	IdentifierDeclType	endif		7331322	0					
ANR	7331388	Identifier	png_set_write_fn		7331322	1					
ANR	7331389	Expression	"dp -> write_pp , dp , write_function , NULL"		7331322	2					
ANR	7331390	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331391	Identifier	dp		7331322	0					
ANR	7331392	Identifier	write_pp		7331322	1					
ANR	7331393	Expression	"dp , write_function , NULL"		7331322	1					
ANR	7331394	Identifier	dp		7331322	0					
ANR	7331395	Expression	"write_function , NULL"		7331322	1					
ANR	7331396	Identifier	write_function		7331322	0					
ANR	7331397	Identifier	NULL		7331322	1					
ANR	7331398	IfStatement	if ( ( dp -> options & IGNORE_INDEX ) != 0 )		7331322	6					
ANR	7331399	Condition	( dp -> options & IGNORE_INDEX ) != 0	1994:7:60353:60385	7331322	0	True				
ANR	7331400	EqualityExpression	( dp -> options & IGNORE_INDEX ) != 0		7331322	0		!=			
ANR	7331401	BitAndExpression	dp -> options & IGNORE_INDEX		7331322	0		&			
ANR	7331402	PtrMemberAccess	dp -> options		7331322	0					
ANR	7331403	Identifier	dp		7331322	0					
ANR	7331404	Identifier	options		7331322	1					
ANR	7331405	Identifier	IGNORE_INDEX		7331322	1					
ANR	7331406	PrimaryExpression	0		7331322	1					
ANR	7331407	ExpressionStatement	"png_set_check_for_invalid_index ( dp -> write_pp , - 1 )"	1995:6:60410:60477	7331322	1	True				
ANR	7331408	CallExpression	"png_set_check_for_invalid_index ( dp -> write_pp , - 1 )"		7331322	0					
ANR	7331409	Callee	png_set_check_for_invalid_index		7331322	0					
ANR	7331410	Identifier	png_set_check_for_invalid_index		7331322	0					
ANR	7331411	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331412	Argument	dp -> write_pp		7331322	0					
ANR	7331413	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331414	Identifier	dp		7331322	0					
ANR	7331415	Identifier	write_pp		7331322	1					
ANR	7331416	Argument	- 1		7331322	1					
ANR	7331417	UnaryOperationExpression	- 1		7331322	0					
ANR	7331418	UnaryOperator	-		7331322	0					
ANR	7331419	PrimaryExpression	1		7331322	1					
ANR	7331420	ExpressionStatement	text_restore ( dp )	2002:3:60737:60753	7331322	7	True				
ANR	7331421	CallExpression	text_restore ( dp )		7331322	0					
ANR	7331422	Callee	text_restore		7331322	0					
ANR	7331423	Identifier	text_restore		7331322	0					
ANR	7331424	ArgumentList	dp		7331322	1					
ANR	7331425	Argument	dp		7331322	0					
ANR	7331426	Identifier	dp		7331322	0					
ANR	7331427	IdentifierDeclStatement	"ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED png_set_keep_unknown_chunks ( dp -> write_pp , PNG_HANDLE_CHUNK_ALWAYS , NULL , 0 ) ;"	2004:3:60759:60890	7331322	8	True				
ANR	7331428	IdentifierDecl	"png_set_keep_unknown_chunks ( dp -> write_pp , PNG_HANDLE_CHUNK_ALWAYS , NULL , 0 )"		7331322	0					
ANR	7331429	IdentifierDeclType	ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED		7331322	0					
ANR	7331430	Identifier	png_set_keep_unknown_chunks		7331322	1					
ANR	7331431	Expression	"dp -> write_pp , PNG_HANDLE_CHUNK_ALWAYS , NULL , 0"		7331322	2					
ANR	7331432	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331433	Identifier	dp		7331322	0					
ANR	7331434	Identifier	write_pp		7331322	1					
ANR	7331435	Expression	"PNG_HANDLE_CHUNK_ALWAYS , NULL , 0"		7331322	1					
ANR	7331436	Identifier	PNG_HANDLE_CHUNK_ALWAYS		7331322	0					
ANR	7331437	Expression	"NULL , 0"		7331322	1					
ANR	7331438	Identifier	NULL		7331322	0					
ANR	7331439	PrimaryExpression	0		7331322	1					
ANR	7331440	IdentifierDeclStatement	"endif ifdef PNG_SET_USER_LIMITS_SUPPORTED png_set_user_limits ( dp -> write_pp , 0x7fffffff , 0x7fffffff ) ;"	2007:3:60895:61071	7331322	9	True				
ANR	7331441	IdentifierDecl	"png_set_user_limits ( dp -> write_pp , 0x7fffffff , 0x7fffffff )"		7331322	0					
ANR	7331442	IdentifierDeclType	endif ifdef PNG_SET_USER_LIMITS_SUPPORTED		7331322	0					
ANR	7331443	Identifier	png_set_user_limits		7331322	1					
ANR	7331444	Expression	"dp -> write_pp , 0x7fffffff , 0x7fffffff"		7331322	2					
ANR	7331445	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331446	Identifier	dp		7331322	0					
ANR	7331447	Identifier	write_pp		7331322	1					
ANR	7331448	Expression	"0x7fffffff , 0x7fffffff"		7331322	1					
ANR	7331449	PrimaryExpression	0x7fffffff		7331322	0					
ANR	7331450	PrimaryExpression	0x7fffffff		7331322	1					
ANR	7331451	Statement	endif	2012:3:61076:61080	7331322	10	True				
ANR	7331452	ExpressionStatement	dp -> tsp = dp -> nsp	2016:3:61161:61178	7331322	11	True				
ANR	7331453	AssignmentExpression	dp -> tsp = dp -> nsp		7331322	0		=			
ANR	7331454	PtrMemberAccess	dp -> tsp		7331322	0					
ANR	7331455	Identifier	dp		7331322	0					
ANR	7331456	Identifier	tsp		7331322	1					
ANR	7331457	PtrMemberAccess	dp -> nsp		7331322	1					
ANR	7331458	Identifier	dp		7331322	0					
ANR	7331459	Identifier	nsp		7331322	1					
ANR	7331460	ExpressionStatement	dp -> nsp = dp -> csp = 0	2017:3:61183:61204	7331322	12	True				
ANR	7331461	AssignmentExpression	dp -> nsp = dp -> csp = 0		7331322	0		=			
ANR	7331462	PtrMemberAccess	dp -> nsp		7331322	0					
ANR	7331463	Identifier	dp		7331322	0					
ANR	7331464	Identifier	nsp		7331322	1					
ANR	7331465	AssignmentExpression	dp -> csp = 0		7331322	1		=			
ANR	7331466	PtrMemberAccess	dp -> csp		7331322	0					
ANR	7331467	Identifier	dp		7331322	0					
ANR	7331468	Identifier	csp		7331322	1					
ANR	7331469	PrimaryExpression	0		7331322	1					
ANR	7331470	Statement	ifdef	2018:3:61209:61213	7331322	13	True				
ANR	7331471	Statement	PNG_SW_COMPRESS_png_level	2018:9:61215:61239	7331322	14	True				
ANR	7331472	CompoundStatement		44:9:1421:1428	7331322	15					
ANR	7331473	IdentifierDeclStatement	int val ;	2020:9:61258:61265	7331322	0	True				
ANR	7331474	IdentifierDecl	val		7331322	0					
ANR	7331475	IdentifierDeclType	int		7331322	0					
ANR	7331476	Identifier	val		7331322	1					
ANR	7331477	IfStatement	"if ( getallopts ( dp , ""compression"" , & val ) )"		7331322	1					
ANR	7331478	Condition	"getallopts ( dp , ""compression"" , & val )"	2025:13:61434:61468	7331322	0	True				
ANR	7331479	CallExpression	"getallopts ( dp , ""compression"" , & val )"		7331322	0					
ANR	7331480	Callee	getallopts		7331322	0					
ANR	7331481	Identifier	getallopts		7331322	0					
ANR	7331482	ArgumentList	dp		7331322	1					
ANR	7331483	Argument	dp		7331322	0					
ANR	7331484	Identifier	dp		7331322	0					
ANR	7331485	Argument	"""compression"""		7331322	1					
ANR	7331486	PrimaryExpression	"""compression"""		7331322	0					
ANR	7331487	Argument	& val		7331322	2					
ANR	7331488	UnaryOperationExpression	& val		7331322	0					
ANR	7331489	UnaryOperator	&		7331322	0					
ANR	7331490	Identifier	val		7331322	1					
ANR	7331491	ExpressionStatement	"png_set_compression ( dp -> write_pp , val )"	2026:12:61483:61521	7331322	1	True				
ANR	7331492	CallExpression	"png_set_compression ( dp -> write_pp , val )"		7331322	0					
ANR	7331493	Callee	png_set_compression		7331322	0					
ANR	7331494	Identifier	png_set_compression		7331322	0					
ANR	7331495	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331496	Argument	dp -> write_pp		7331322	0					
ANR	7331497	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331498	Identifier	dp		7331322	0					
ANR	7331499	Identifier	write_pp		7331322	1					
ANR	7331500	Argument	val		7331322	1					
ANR	7331501	Identifier	val		7331322	0					
ANR	7331502	IfStatement	"if ( getallopts ( dp , ""ICC-profile-compression"" , & val ) )"		7331322	2					
ANR	7331503	Condition	"getallopts ( dp , ""ICC-profile-compression"" , & val )"	2028:13:61537:61583	7331322	0	True				
ANR	7331504	CallExpression	"getallopts ( dp , ""ICC-profile-compression"" , & val )"		7331322	0					
ANR	7331505	Callee	getallopts		7331322	0					
ANR	7331506	Identifier	getallopts		7331322	0					
ANR	7331507	ArgumentList	dp		7331322	1					
ANR	7331508	Argument	dp		7331322	0					
ANR	7331509	Identifier	dp		7331322	0					
ANR	7331510	Argument	"""ICC-profile-compression"""		7331322	1					
ANR	7331511	PrimaryExpression	"""ICC-profile-compression"""		7331322	0					
ANR	7331512	Argument	& val		7331322	2					
ANR	7331513	UnaryOperationExpression	& val		7331322	0					
ANR	7331514	UnaryOperator	&		7331322	0					
ANR	7331515	Identifier	val		7331322	1					
ANR	7331516	ExpressionStatement	"png_set_ICC_profile_compression ( dp -> write_pp , val )"	2029:12:61598:61648	7331322	1	True				
ANR	7331517	CallExpression	"png_set_ICC_profile_compression ( dp -> write_pp , val )"		7331322	0					
ANR	7331518	Callee	png_set_ICC_profile_compression		7331322	0					
ANR	7331519	Identifier	png_set_ICC_profile_compression		7331322	0					
ANR	7331520	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331521	Argument	dp -> write_pp		7331322	0					
ANR	7331522	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331523	Identifier	dp		7331322	0					
ANR	7331524	Identifier	write_pp		7331322	1					
ANR	7331525	Argument	val		7331322	1					
ANR	7331526	Identifier	val		7331322	0					
ANR	7331527	IfStatement	"if ( getallopts ( dp , ""text-compression"" , & val ) )"		7331322	3					
ANR	7331528	Condition	"getallopts ( dp , ""text-compression"" , & val )"	2031:13:61664:61703	7331322	0	True				
ANR	7331529	CallExpression	"getallopts ( dp , ""text-compression"" , & val )"		7331322	0					
ANR	7331530	Callee	getallopts		7331322	0					
ANR	7331531	Identifier	getallopts		7331322	0					
ANR	7331532	ArgumentList	dp		7331322	1					
ANR	7331533	Argument	dp		7331322	0					
ANR	7331534	Identifier	dp		7331322	0					
ANR	7331535	Argument	"""text-compression"""		7331322	1					
ANR	7331536	PrimaryExpression	"""text-compression"""		7331322	0					
ANR	7331537	Argument	& val		7331322	2					
ANR	7331538	UnaryOperationExpression	& val		7331322	0					
ANR	7331539	UnaryOperator	&		7331322	0					
ANR	7331540	Identifier	val		7331322	1					
ANR	7331541	ExpressionStatement	"png_set_text_compression ( dp -> write_pp , val )"	2032:12:61718:61761	7331322	1	True				
ANR	7331542	CallExpression	"png_set_text_compression ( dp -> write_pp , val )"		7331322	0					
ANR	7331543	Callee	png_set_text_compression		7331322	0					
ANR	7331544	Identifier	png_set_text_compression		7331322	0					
ANR	7331545	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331546	Argument	dp -> write_pp		7331322	0					
ANR	7331547	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331548	Identifier	dp		7331322	0					
ANR	7331549	Identifier	write_pp		7331322	1					
ANR	7331550	Argument	val		7331322	1					
ANR	7331551	Identifier	val		7331322	0					
ANR	7331552	Statement	endif	2034:3:61774:61778	7331322	16	True				
ANR	7331553	IfStatement	if ( dp -> options & SEARCH )		7331322	17					
ANR	7331554	Condition	dp -> options & SEARCH	2035:7:61811:61830	7331322	0	True				
ANR	7331555	BitAndExpression	dp -> options & SEARCH		7331322	0		&			
ANR	7331556	PtrMemberAccess	dp -> options		7331322	0					
ANR	7331557	Identifier	dp		7331322	0					
ANR	7331558	Identifier	options		7331322	1					
ANR	7331559	Identifier	SEARCH		7331322	1					
ANR	7331560	ExpressionStatement	search_compression ( dp )	2036:6:61839:61861	7331322	1	True				
ANR	7331561	CallExpression	search_compression ( dp )		7331322	0					
ANR	7331562	Callee	search_compression		7331322	0					
ANR	7331563	Identifier	search_compression		7331322	0					
ANR	7331564	ArgumentList	dp		7331322	1					
ANR	7331565	Argument	dp		7331322	0					
ANR	7331566	Identifier	dp		7331322	0					
ANR	7331567	ElseStatement	else		7331322	0					
ANR	7331568	ExpressionStatement	set_compression ( dp )	2038:6:61877:61896	7331322	0	True				
ANR	7331569	CallExpression	set_compression ( dp )		7331322	0					
ANR	7331570	Callee	set_compression		7331322	0					
ANR	7331571	Identifier	set_compression		7331322	0					
ANR	7331572	ArgumentList	dp		7331322	1					
ANR	7331573	Argument	dp		7331322	0					
ANR	7331574	Identifier	dp		7331322	0					
ANR	7331575	ExpressionStatement	set_ICC_profile_compression ( dp )	2039:3:61901:61932	7331322	18	True				
ANR	7331576	CallExpression	set_ICC_profile_compression ( dp )		7331322	0					
ANR	7331577	Callee	set_ICC_profile_compression		7331322	0					
ANR	7331578	Identifier	set_ICC_profile_compression		7331322	0					
ANR	7331579	ArgumentList	dp		7331322	1					
ANR	7331580	Argument	dp		7331322	0					
ANR	7331581	Identifier	dp		7331322	0					
ANR	7331582	ExpressionStatement	set_text_compression ( dp )	2040:3:61937:61961	7331322	19	True				
ANR	7331583	CallExpression	set_text_compression ( dp )		7331322	0					
ANR	7331584	Callee	set_text_compression		7331322	0					
ANR	7331585	Identifier	set_text_compression		7331322	0					
ANR	7331586	ArgumentList	dp		7331322	1					
ANR	7331587	Argument	dp		7331322	0					
ANR	7331588	Identifier	dp		7331322	0					
ANR	7331589	CompoundStatement		67:6:2138:2145	7331322	20					
ANR	7331590	IdentifierDeclStatement	int val ;	2043:6:61975:61982	7331322	0	True				
ANR	7331591	IdentifierDecl	val		7331322	0					
ANR	7331592	IdentifierDeclType	int		7331322	0					
ANR	7331593	Identifier	val		7331322	1					
ANR	7331594	IfStatement	"if ( get_option ( dp , ""IDAT-size"" , & val ) )"		7331322	1					
ANR	7331595	Condition	"get_option ( dp , ""IDAT-size"" , & val )"	2046:10:62065:62097	7331322	0	True				
ANR	7331596	CallExpression	"get_option ( dp , ""IDAT-size"" , & val )"		7331322	0					
ANR	7331597	Callee	get_option		7331322	0					
ANR	7331598	Identifier	get_option		7331322	0					
ANR	7331599	ArgumentList	dp		7331322	1					
ANR	7331600	Argument	dp		7331322	0					
ANR	7331601	Identifier	dp		7331322	0					
ANR	7331602	Argument	"""IDAT-size"""		7331322	1					
ANR	7331603	PrimaryExpression	"""IDAT-size"""		7331322	0					
ANR	7331604	Argument	& val		7331322	2					
ANR	7331605	UnaryOperationExpression	& val		7331322	0					
ANR	7331606	UnaryOperator	&		7331322	0					
ANR	7331607	Identifier	val		7331322	1					
ANR	7331608	ExpressionStatement	"png_set_IDAT_size ( dp -> write_pp , val )"	2047:9:62109:62145	7331322	1	True				
ANR	7331609	CallExpression	"png_set_IDAT_size ( dp -> write_pp , val )"		7331322	0					
ANR	7331610	Callee	png_set_IDAT_size		7331322	0					
ANR	7331611	Identifier	png_set_IDAT_size		7331322	0					
ANR	7331612	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331613	Argument	dp -> write_pp		7331322	0					
ANR	7331614	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331615	Identifier	dp		7331322	0					
ANR	7331616	Identifier	write_pp		7331322	1					
ANR	7331617	Argument	val		7331322	1					
ANR	7331618	Identifier	val		7331322	0					
ANR	7331619	Statement	ifdef	2051:3:62181:62185	7331322	21	True				
ANR	7331620	Statement	PNG_WRITE_FILTER_SUPPORTED	2051:9:62187:62212	7331322	22	True				
ANR	7331621	CompoundStatement		77:9:2394:2401	7331322	23					
ANR	7331622	IdentifierDeclStatement	int val ;	2053:9:62231:62238	7331322	0	True				
ANR	7331623	IdentifierDecl	val		7331322	0					
ANR	7331624	IdentifierDeclType	int		7331322	0					
ANR	7331625	Identifier	val		7331322	1					
ANR	7331626	IfStatement	"if ( get_option ( dp , ""filter"" , & val ) )"		7331322	1					
ANR	7331627	Condition	"get_option ( dp , ""filter"" , & val )"	2055:13:62254:62283	7331322	0	True				
ANR	7331628	CallExpression	"get_option ( dp , ""filter"" , & val )"		7331322	0					
ANR	7331629	Callee	get_option		7331322	0					
ANR	7331630	Identifier	get_option		7331322	0					
ANR	7331631	ArgumentList	dp		7331322	1					
ANR	7331632	Argument	dp		7331322	0					
ANR	7331633	Identifier	dp		7331322	0					
ANR	7331634	Argument	"""filter"""		7331322	1					
ANR	7331635	PrimaryExpression	"""filter"""		7331322	0					
ANR	7331636	Argument	& val		7331322	2					
ANR	7331637	UnaryOperationExpression	& val		7331322	0					
ANR	7331638	UnaryOperator	&		7331322	0					
ANR	7331639	Identifier	val		7331322	1					
ANR	7331640	ExpressionStatement	"png_set_filter ( dp -> write_pp , PNG_FILTER_TYPE_BASE , val )"	2056:12:62298:62353	7331322	1	True				
ANR	7331641	CallExpression	"png_set_filter ( dp -> write_pp , PNG_FILTER_TYPE_BASE , val )"		7331322	0					
ANR	7331642	Callee	png_set_filter		7331322	0					
ANR	7331643	Identifier	png_set_filter		7331322	0					
ANR	7331644	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331645	Argument	dp -> write_pp		7331322	0					
ANR	7331646	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331647	Identifier	dp		7331322	0					
ANR	7331648	Identifier	write_pp		7331322	1					
ANR	7331649	Argument	PNG_FILTER_TYPE_BASE		7331322	1					
ANR	7331650	Identifier	PNG_FILTER_TYPE_BASE		7331322	0					
ANR	7331651	Argument	val		7331322	2					
ANR	7331652	Identifier	val		7331322	0					
ANR	7331653	Statement	endif	2058:3:62366:62370	7331322	24	True				
ANR	7331654	ExpressionStatement	dp -> write_size = 0U	2061:3:62475:62494	7331322	25	True				
ANR	7331655	AssignmentExpression	dp -> write_size = 0U		7331322	0		=			
ANR	7331656	PtrMemberAccess	dp -> write_size		7331322	0					
ANR	7331657	Identifier	dp		7331322	0					
ANR	7331658	Identifier	write_size		7331322	1					
ANR	7331659	PrimaryExpression	0U		7331322	1					
ANR	7331660	ExpressionStatement	"start_timer ( dp , PNGCP_TIME_WRITE )"	2062:3:62499:62532	7331322	26	True				
ANR	7331661	CallExpression	"start_timer ( dp , PNGCP_TIME_WRITE )"		7331322	0					
ANR	7331662	Callee	start_timer		7331322	0					
ANR	7331663	Identifier	start_timer		7331322	0					
ANR	7331664	ArgumentList	dp		7331322	1					
ANR	7331665	Argument	dp		7331322	0					
ANR	7331666	Identifier	dp		7331322	0					
ANR	7331667	Argument	PNGCP_TIME_WRITE		7331322	1					
ANR	7331668	Identifier	PNGCP_TIME_WRITE		7331322	0					
ANR	7331669	ExpressionStatement	"png_write_png ( dp -> write_pp , dp -> ip , 0U , NULL )"	2063:3:62537:62606	7331322	27	True				
ANR	7331670	CallExpression	"png_write_png ( dp -> write_pp , dp -> ip , 0U , NULL )"		7331322	0					
ANR	7331671	Callee	png_write_png		7331322	0					
ANR	7331672	Identifier	png_write_png		7331322	0					
ANR	7331673	ArgumentList	dp -> write_pp		7331322	1					
ANR	7331674	Argument	dp -> write_pp		7331322	0					
ANR	7331675	PtrMemberAccess	dp -> write_pp		7331322	0					
ANR	7331676	Identifier	dp		7331322	0					
ANR	7331677	Identifier	write_pp		7331322	1					
ANR	7331678	Argument	dp -> ip		7331322	1					
ANR	7331679	PtrMemberAccess	dp -> ip		7331322	0					
ANR	7331680	Identifier	dp		7331322	0					
ANR	7331681	Identifier	ip		7331322	1					
ANR	7331682	Argument	0U		7331322	2					
ANR	7331683	PrimaryExpression	0U		7331322	0					
ANR	7331684	Argument	NULL		7331322	3					
ANR	7331685	Identifier	NULL		7331322	0					
ANR	7331686	ExpressionStatement	"end_timer ( dp , PNGCP_TIME_WRITE )"	2064:3:62611:62642	7331322	28	True				
ANR	7331687	CallExpression	"end_timer ( dp , PNGCP_TIME_WRITE )"		7331322	0					
ANR	7331688	Callee	end_timer		7331322	0					
ANR	7331689	Identifier	end_timer		7331322	0					
ANR	7331690	ArgumentList	dp		7331322	1					
ANR	7331691	Argument	dp		7331322	0					
ANR	7331692	Identifier	dp		7331322	0					
ANR	7331693	Argument	PNGCP_TIME_WRITE		7331322	1					
ANR	7331694	Identifier	PNGCP_TIME_WRITE		7331322	0					
ANR	7331695	IfStatement	if ( dp -> fp != NULL )		7331322	29					
ANR	7331696	Condition	dp -> fp != NULL	2067:7:62696:62709	7331322	0	True				
ANR	7331697	EqualityExpression	dp -> fp != NULL		7331322	0		!=			
ANR	7331698	PtrMemberAccess	dp -> fp		7331322	0					
ANR	7331699	Identifier	dp		7331322	0					
ANR	7331700	Identifier	fp		7331322	1					
ANR	7331701	Identifier	NULL		7331322	1					
ANR	7331702	CompoundStatement		93:6:2886:2903	7331322	1					
ANR	7331703	IdentifierDeclStatement	FILE * fp = dp -> fp ;	2069:6:62723:62740	7331322	0	True				
ANR	7331704	IdentifierDecl	* fp = dp -> fp		7331322	0					
ANR	7331705	IdentifierDeclType	FILE *		7331322	0					
ANR	7331706	Identifier	fp		7331322	1					
ANR	7331707	AssignmentExpression	* fp = dp -> fp		7331322	2		=			
ANR	7331708	Identifier	fp		7331322	0					
ANR	7331709	PtrMemberAccess	dp -> fp		7331322	1					
ANR	7331710	Identifier	dp		7331322	0					
ANR	7331711	Identifier	fp		7331322	1					
ANR	7331712	ExpressionStatement	dp -> fp = NULL	2070:6:62748:62761	7331322	1	True				
ANR	7331713	AssignmentExpression	dp -> fp = NULL		7331322	0		=			
ANR	7331714	PtrMemberAccess	dp -> fp		7331322	0					
ANR	7331715	Identifier	dp		7331322	0					
ANR	7331716	Identifier	fp		7331322	1					
ANR	7331717	Identifier	NULL		7331322	1					
ANR	7331718	IfStatement	if ( fclose ( fp ) )		7331322	2					
ANR	7331719	Condition	fclose ( fp )	2071:10:62773:62782	7331322	0	True				
ANR	7331720	CallExpression	fclose ( fp )		7331322	0					
ANR	7331721	Callee	fclose		7331322	0					
ANR	7331722	Identifier	fclose		7331322	0					
ANR	7331723	ArgumentList	fp		7331322	1					
ANR	7331724	Argument	fp		7331322	0					
ANR	7331725	Identifier	fp		7331322	0					
ANR	7331726	ExpressionStatement	"display_log ( dp , APP_ERROR , ""%s: write failed (%s)"" , destname == NULL ? ""stdout"" : destname , strerror ( errno ) )"	2072:9:62794:62917	7331322	1	True				
ANR	7331727	CallExpression	"display_log ( dp , APP_ERROR , ""%s: write failed (%s)"" , destname == NULL ? ""stdout"" : destname , strerror ( errno ) )"		7331322	0					
ANR	7331728	Callee	display_log		7331322	0					
ANR	7331729	Identifier	display_log		7331322	0					
ANR	7331730	ArgumentList	dp		7331322	1					
ANR	7331731	Argument	dp		7331322	0					
ANR	7331732	Identifier	dp		7331322	0					
ANR	7331733	Argument	APP_ERROR		7331322	1					
ANR	7331734	Identifier	APP_ERROR		7331322	0					
ANR	7331735	Argument	"""%s: write failed (%s)"""		7331322	2					
ANR	7331736	PrimaryExpression	"""%s: write failed (%s)"""		7331322	0					
ANR	7331737	Argument	"destname == NULL ? ""stdout"" : destname"		7331322	3					
ANR	7331738	ConditionalExpression	"destname == NULL ? ""stdout"" : destname"		7331322	0					
ANR	7331739	Condition	destname == NULL		7331322	0					
ANR	7331740	EqualityExpression	destname == NULL		7331322	0		==			
ANR	7331741	Identifier	destname		7331322	0					
ANR	7331742	Identifier	NULL		7331322	1					
ANR	7331743	PrimaryExpression	"""stdout"""		7331322	1					
ANR	7331744	Identifier	destname		7331322	2					
ANR	7331745	Argument	strerror ( errno )		7331322	4					
ANR	7331746	CallExpression	strerror ( errno )		7331322	0					
ANR	7331747	Callee	strerror		7331322	0					
ANR	7331748	Identifier	strerror		7331322	0					
ANR	7331749	ArgumentList	errno		7331322	1					
ANR	7331750	Argument	errno		7331322	0					
ANR	7331751	Identifier	errno		7331322	0					
ANR	7331752	ExpressionStatement	display_clean_write ( dp )	2079:3:63056:63079	7331322	30	True				
ANR	7331753	CallExpression	display_clean_write ( dp )		7331322	0					
ANR	7331754	Callee	display_clean_write		7331322	0					
ANR	7331755	Identifier	display_clean_write		7331322	0					
ANR	7331756	ArgumentList	dp		7331322	1					
ANR	7331757	Argument	dp		7331322	0					
ANR	7331758	Identifier	dp		7331322	0					
ANR	7331759	ExpressionStatement	"dp -> operation = ""none"""	2080:3:63084:63106	7331322	31	True				
ANR	7331760	AssignmentExpression	"dp -> operation = ""none"""		7331322	0		=			
ANR	7331761	PtrMemberAccess	dp -> operation		7331322	0					
ANR	7331762	Identifier	dp		7331322	0					
ANR	7331763	Identifier	operation		7331322	1					
ANR	7331764	PrimaryExpression	"""none"""		7331322	1					
ANR	7331765	ReturnType	static void		7331322	1					
ANR	7331766	Identifier	write_png		7331322	2					
ANR	7331767	ParameterList	"struct display * dp , const char * destname"		7331322	3					
ANR	7331768	Parameter	struct display * dp	1976:10:59794:59811	7331322	0	True				
ANR	7331769	ParameterType	struct display *		7331322	0					
ANR	7331770	Identifier	dp		7331322	1					
ANR	7331771	Parameter	const char * destname	1976:30:59814:59833	7331322	1	True				
ANR	7331772	ParameterType	const char *		7331322	0					
ANR	7331773	Identifier	destname		7331322	1					
ANR	7331774	CFGEntryNode	ENTRY		7331322		True				
ANR	7331775	CFGExitNode	EXIT		7331322		True				
ANR	7331776	Symbol	& val		7331322						
ANR	7331777	Symbol	dp -> ip		7331322						
ANR	7331778	Symbol	display_error		7331322						
ANR	7331779	Symbol	dp -> operation		7331322						
ANR	7331780	Symbol	fp		7331322						
ANR	7331781	Symbol	dp		7331322						
ANR	7331782	Symbol	IGNORE_INDEX		7331322						
ANR	7331783	Symbol	* dp		7331322						
ANR	7331784	Symbol	PNG_FILTER_TYPE_BASE		7331322						
ANR	7331785	Symbol	APP_ERROR		7331322						
ANR	7331786	Symbol	png_set_user_limits		7331322						
ANR	7331787	Symbol	png_create_write_struct		7331322						
ANR	7331788	Symbol	val		7331322						
ANR	7331789	Symbol	display_warning		7331322						
ANR	7331790	Symbol	png_set_write_fn		7331322						
ANR	7331791	Symbol	errno		7331322						
ANR	7331792	Symbol	NULL		7331322						
ANR	7331793	Symbol	dp -> fp		7331322						
ANR	7331794	Symbol	SEARCH		7331322						
ANR	7331795	Symbol	LIBPNG_ERROR		7331322						
ANR	7331796	Symbol	dp -> options		7331322						
ANR	7331797	Symbol	fclose		7331322						
ANR	7331798	Symbol	PNGCP_TIME_WRITE		7331322						
ANR	7331799	Symbol	getallopts		7331322						
ANR	7331800	Symbol	dp -> csp		7331322						
ANR	7331801	Symbol	dp -> write_size		7331322						
ANR	7331802	Symbol	strerror		7331322						
ANR	7331803	Symbol	png_set_keep_unknown_chunks		7331322						
ANR	7331804	Symbol	get_option		7331322						
ANR	7331805	Symbol	destname		7331322						
ANR	7331806	Symbol	dp -> nsp		7331322						
ANR	7331807	Symbol	dp -> tsp		7331322						
ANR	7331808	Symbol	dp -> write_pp		7331322						
ANR	7331809	Symbol	PNG_LIBPNG_VER_STRING		7331322						
ANR	7331810	Symbol	png_set_benign_errors		7331322						
ANR	7331811	Function	set_windowBits_hi	2083:0:63111:63977							
ANR	7331812	FunctionDef	set_windowBits_hi (struct display * dp)		7331811	0					
ANR	7331813	CompoundStatement		2085:0:63161:63977	7331811	0					
ANR	7331814	IdentifierDeclStatement	int wb = MAX_WBITS ;	2089:3:63307:63325	7331811	0	True				
ANR	7331815	IdentifierDecl	wb = MAX_WBITS		7331811	0					
ANR	7331816	IdentifierDeclType	int		7331811	0					
ANR	7331817	Identifier	wb		7331811	1					
ANR	7331818	AssignmentExpression	wb = MAX_WBITS		7331811	2		=			
ANR	7331819	Identifier	MAX_WBITS		7331811	0					
ANR	7331820	Identifier	MAX_WBITS		7331811	1					
ANR	7331821	IdentifierDeclStatement	int i = VLSIZE ( windowBits_IDAT ) ;	2090:3:63353:63384	7331811	1	True				
ANR	7331822	IdentifierDecl	i = VLSIZE ( windowBits_IDAT )		7331811	0					
ANR	7331823	IdentifierDeclType	int		7331811	0					
ANR	7331824	Identifier	i		7331811	1					
ANR	7331825	AssignmentExpression	i = VLSIZE ( windowBits_IDAT )		7331811	2		=			
ANR	7331826	Identifier	i		7331811	0					
ANR	7331827	CallExpression	VLSIZE ( windowBits_IDAT )		7331811	1					
ANR	7331828	Callee	VLSIZE		7331811	0					
ANR	7331829	Identifier	VLSIZE		7331811	0					
ANR	7331830	ArgumentList	windowBits_IDAT		7331811	1					
ANR	7331831	Argument	windowBits_IDAT		7331811	0					
ANR	7331832	Identifier	windowBits_IDAT		7331811	0					
ANR	7331833	WhileStatement	while ( wb > 8 && dp -> size <= 1U << ( wb - 1 ) )		7331811	2					
ANR	7331834	Condition	wb > 8 && dp -> size <= 1U << ( wb - 1 )	2092:10:63397:63428	7331811	0	True				
ANR	7331835	AndExpression	wb > 8 && dp -> size <= 1U << ( wb - 1 )		7331811	0		&&			
ANR	7331836	RelationalExpression	wb > 8		7331811	0		>			
ANR	7331837	Identifier	wb		7331811	0					
ANR	7331838	PrimaryExpression	8		7331811	1					
ANR	7331839	RelationalExpression	dp -> size <= 1U << ( wb - 1 )		7331811	1		<=			
ANR	7331840	PtrMemberAccess	dp -> size		7331811	0					
ANR	7331841	Identifier	dp		7331811	0					
ANR	7331842	Identifier	size		7331811	1					
ANR	7331843	ShiftExpression	1U << ( wb - 1 )		7331811	1		<<			
ANR	7331844	PrimaryExpression	1U		7331811	0					
ANR	7331845	AdditiveExpression	wb - 1		7331811	1		-			
ANR	7331846	Identifier	wb		7331811	0					
ANR	7331847	PrimaryExpression	1		7331811	1					
ANR	7331848	ExpressionStatement	-- wb	2092:44:63431:63435	7331811	1	True				
ANR	7331849	UnaryExpression	-- wb		7331811	0					
ANR	7331850	IncDec	--		7331811	0					
ANR	7331851	Identifier	wb		7331811	1					
ANR	7331852	WhileStatement	while ( -- i >= 0 )		7331811	3					
ANR	7331853	Condition	-- i >= 0	2094:10:63448:63455	7331811	0	True				
ANR	7331854	RelationalExpression	-- i >= 0		7331811	0		>=			
ANR	7331855	UnaryExpression	-- i		7331811	0					
ANR	7331856	IncDec	--		7331811	0					
ANR	7331857	Identifier	i		7331811	1					
ANR	7331858	PrimaryExpression	0		7331811	1					
ANR	7331859	IfStatement	if ( VLNAME ( windowBits_IDAT ) [ i ] . name == range_hi )		7331811	1					
ANR	7331860	Condition	VLNAME ( windowBits_IDAT ) [ i ] . name == range_hi	2094:24:63462:63504	7331811	0	True				
ANR	7331861	EqualityExpression	VLNAME ( windowBits_IDAT ) [ i ] . name == range_hi		7331811	0		==			
ANR	7331862	MemberAccess	VLNAME ( windowBits_IDAT ) [ i ] . name		7331811	0					
ANR	7331863	ArrayIndexing	VLNAME ( windowBits_IDAT ) [ i ]		7331811	0					
ANR	7331864	CallExpression	VLNAME ( windowBits_IDAT )		7331811	0					
ANR	7331865	Callee	VLNAME		7331811	0					
ANR	7331866	Identifier	VLNAME		7331811	0					
ANR	7331867	ArgumentList	windowBits_IDAT		7331811	1					
ANR	7331868	Argument	windowBits_IDAT		7331811	0					
ANR	7331869	Identifier	windowBits_IDAT		7331811	0					
ANR	7331870	Identifier	i		7331811	1					
ANR	7331871	Identifier	name		7331811	1					
ANR	7331872	Identifier	range_hi		7331811	1					
ANR	7331873	BreakStatement	break ;	2094:69:63507:63512	7331811	1	True				
ANR	7331874	ExpressionStatement	assert ( i > 1 )	2096:3:63518:63531	7331811	4	True				
ANR	7331875	CallExpression	assert ( i > 1 )		7331811	0					
ANR	7331876	Callee	assert		7331811	0					
ANR	7331877	Identifier	assert		7331811	0					
ANR	7331878	ArgumentList	i > 1		7331811	1					
ANR	7331879	Argument	i > 1		7331811	0					
ANR	7331880	RelationalExpression	i > 1		7331811	0		>			
ANR	7331881	Identifier	i		7331811	0					
ANR	7331882	PrimaryExpression	1		7331811	1					
ANR	7331883	ExpressionStatement	VLNAME ( windowBits_IDAT ) [ i ] . value = wb	2097:3:63582:63619	7331811	5	True				
ANR	7331884	AssignmentExpression	VLNAME ( windowBits_IDAT ) [ i ] . value = wb		7331811	0		=			
ANR	7331885	MemberAccess	VLNAME ( windowBits_IDAT ) [ i ] . value		7331811	0					
ANR	7331886	ArrayIndexing	VLNAME ( windowBits_IDAT ) [ i ]		7331811	0					
ANR	7331887	CallExpression	VLNAME ( windowBits_IDAT )		7331811	0					
ANR	7331888	Callee	VLNAME		7331811	0					
ANR	7331889	Identifier	VLNAME		7331811	0					
ANR	7331890	ArgumentList	windowBits_IDAT		7331811	1					
ANR	7331891	Argument	windowBits_IDAT		7331811	0					
ANR	7331892	Identifier	windowBits_IDAT		7331811	0					
ANR	7331893	Identifier	i		7331811	1					
ANR	7331894	Identifier	value		7331811	1					
ANR	7331895	Identifier	wb		7331811	1					
ANR	7331896	ExpressionStatement	assert ( VLNAME ( windowBits_IDAT ) [ -- i ] . name == range_lo )	2099:3:63625:63678	7331811	6	True				
ANR	7331897	CallExpression	assert ( VLNAME ( windowBits_IDAT ) [ -- i ] . name == range_lo )		7331811	0					
ANR	7331898	Callee	assert		7331811	0					
ANR	7331899	Identifier	assert		7331811	0					
ANR	7331900	ArgumentList	VLNAME ( windowBits_IDAT ) [ -- i ] . name == range_lo		7331811	1					
ANR	7331901	Argument	VLNAME ( windowBits_IDAT ) [ -- i ] . name == range_lo		7331811	0					
ANR	7331902	EqualityExpression	VLNAME ( windowBits_IDAT ) [ -- i ] . name == range_lo		7331811	0		==			
ANR	7331903	MemberAccess	VLNAME ( windowBits_IDAT ) [ -- i ] . name		7331811	0					
ANR	7331904	ArrayIndexing	VLNAME ( windowBits_IDAT ) [ -- i ]		7331811	0					
ANR	7331905	CallExpression	VLNAME ( windowBits_IDAT )		7331811	0					
ANR	7331906	Callee	VLNAME		7331811	0					
ANR	7331907	Identifier	VLNAME		7331811	0					
ANR	7331908	ArgumentList	windowBits_IDAT		7331811	1					
ANR	7331909	Argument	windowBits_IDAT		7331811	0					
ANR	7331910	Identifier	windowBits_IDAT		7331811	0					
ANR	7331911	UnaryExpression	-- i		7331811	1					
ANR	7331912	IncDec	--		7331811	0					
ANR	7331913	Identifier	i		7331811	1					
ANR	7331914	Identifier	name		7331811	1					
ANR	7331915	Identifier	range_lo		7331811	1					
ANR	7331916	ExpressionStatement	VLNAME ( windowBits_IDAT ) [ i ] . value = wb > 8 ? 9 : 8	2100:3:63683:63732	7331811	7	True				
ANR	7331917	AssignmentExpression	VLNAME ( windowBits_IDAT ) [ i ] . value = wb > 8 ? 9 : 8		7331811	0		=			
ANR	7331918	MemberAccess	VLNAME ( windowBits_IDAT ) [ i ] . value		7331811	0					
ANR	7331919	ArrayIndexing	VLNAME ( windowBits_IDAT ) [ i ]		7331811	0					
ANR	7331920	CallExpression	VLNAME ( windowBits_IDAT )		7331811	0					
ANR	7331921	Callee	VLNAME		7331811	0					
ANR	7331922	Identifier	VLNAME		7331811	0					
ANR	7331923	ArgumentList	windowBits_IDAT		7331811	1					
ANR	7331924	Argument	windowBits_IDAT		7331811	0					
ANR	7331925	Identifier	windowBits_IDAT		7331811	0					
ANR	7331926	Identifier	i		7331811	1					
ANR	7331927	Identifier	value		7331811	1					
ANR	7331928	ConditionalExpression	wb > 8 ? 9 : 8		7331811	1					
ANR	7331929	Condition	wb > 8		7331811	0					
ANR	7331930	RelationalExpression	wb > 8		7331811	0		>			
ANR	7331931	Identifier	wb		7331811	0					
ANR	7331932	PrimaryExpression	8		7331811	1					
ANR	7331933	PrimaryExpression	9		7331811	1					
ANR	7331934	PrimaryExpression	8		7331811	2					
ANR	7331935	IfStatement	if ( wb == 8 )		7331811	8					
ANR	7331936	Condition	wb == 8	2106:7:63917:63923	7331811	0	True				
ANR	7331937	EqualityExpression	wb == 8		7331811	0		==			
ANR	7331938	Identifier	wb		7331811	0					
ANR	7331939	PrimaryExpression	8		7331811	1					
ANR	7331940	ExpressionStatement	"dp -> min_windowBits = OPTIND ( dp , windowBits )"	2107:6:63932:63975	7331811	1	True				
ANR	7331941	AssignmentExpression	"dp -> min_windowBits = OPTIND ( dp , windowBits )"		7331811	0		=			
ANR	7331942	PtrMemberAccess	dp -> min_windowBits		7331811	0					
ANR	7331943	Identifier	dp		7331811	0					
ANR	7331944	Identifier	min_windowBits		7331811	1					
ANR	7331945	CallExpression	"OPTIND ( dp , windowBits )"		7331811	1					
ANR	7331946	Callee	OPTIND		7331811	0					
ANR	7331947	Identifier	OPTIND		7331811	0					
ANR	7331948	ArgumentList	dp		7331811	1					
ANR	7331949	Argument	dp		7331811	0					
ANR	7331950	Identifier	dp		7331811	0					
ANR	7331951	Argument	windowBits		7331811	1					
ANR	7331952	Identifier	windowBits		7331811	0					
ANR	7331953	ReturnType	static void		7331811	1					
ANR	7331954	Identifier	set_windowBits_hi		7331811	2					
ANR	7331955	ParameterList	struct display * dp		7331811	3					
ANR	7331956	Parameter	struct display * dp	2084:18:63141:63158	7331811	0	True				
ANR	7331957	ParameterType	struct display *		7331811	0					
ANR	7331958	Identifier	dp		7331811	1					
ANR	7331959	CFGEntryNode	ENTRY		7331811		True				
ANR	7331960	CFGExitNode	EXIT		7331811		True				
ANR	7331961	Symbol	VLSIZE		7331811						
ANR	7331962	Symbol	VLNAME ( windowBits_IDAT ) [ i ] . value		7331811						
ANR	7331963	Symbol	MAX_WBITS		7331811						
ANR	7331964	Symbol	i		7331811						
ANR	7331965	Symbol	dp -> min_windowBits		7331811						
ANR	7331966	Symbol	wb		7331811						
ANR	7331967	Symbol	dp		7331811						
ANR	7331968	Symbol	VLNAME ( windowBits_IDAT ) [ -- i ] . name		7331811						
ANR	7331969	Symbol	windowBits		7331811						
ANR	7331970	Symbol	* dp		7331811						
ANR	7331971	Symbol	range_hi		7331811						
ANR	7331972	Symbol	OPTIND		7331811						
ANR	7331973	Symbol	* i		7331811						
ANR	7331974	Symbol	VLNAME		7331811						
ANR	7331975	Symbol	windowBits_IDAT		7331811						
ANR	7331976	Symbol	range_lo		7331811						
ANR	7331977	Symbol	dp -> size		7331811						
ANR	7331978	Symbol	* VLNAME		7331811						
ANR	7331979	Symbol	VLNAME ( windowBits_IDAT ) [ i ] . name		7331811						
ANR	7331980	Function	better_options	2110:0:63980:65004							
ANR	7331981	FunctionDef	better_options (const struct display * dp)		7331980	0					
ANR	7331982	CompoundStatement		2112:0:64032:65004	7331980	0					
ANR	7331983	IdentifierDeclStatement	unsigned int sp ;	2127:3:64772:64787	7331980	0	True				
ANR	7331984	IdentifierDecl	sp		7331980	0					
ANR	7331985	IdentifierDeclType	unsigned int		7331980	0					
ANR	7331986	Identifier	sp		7331980	1					
ANR	7331987	ForStatement	for ( sp = 0 ; sp < dp -> csp ; ++ sp )		7331980	1					
ANR	7331988	ForInit	sp = 0 ;	2129:8:64798:64802	7331980	0	True				
ANR	7331989	AssignmentExpression	sp = 0		7331980	0		=			
ANR	7331990	Identifier	sp		7331980	0					
ANR	7331991	PrimaryExpression	0		7331980	1					
ANR	7331992	Condition	sp < dp -> csp	2129:14:64804:64813	7331980	1	True				
ANR	7331993	RelationalExpression	sp < dp -> csp		7331980	0		<			
ANR	7331994	Identifier	sp		7331980	0					
ANR	7331995	PtrMemberAccess	dp -> csp		7331980	1					
ANR	7331996	Identifier	dp		7331980	0					
ANR	7331997	Identifier	csp		7331980	1					
ANR	7331998	UnaryExpression	++ sp	2129:26:64816:64819	7331980	2	True				
ANR	7331999	IncDec	++		7331980	0					
ANR	7332000	Identifier	sp		7331980	1					
ANR	7332001	CompoundStatement		20:6:800:830	7331980	3					
ANR	7332002	IdentifierDeclStatement	"int c = compare_option ( dp , sp ) ;"	2131:6:64833:64863	7331980	0	True				
ANR	7332003	IdentifierDecl	"c = compare_option ( dp , sp )"		7331980	0					
ANR	7332004	IdentifierDeclType	int		7331980	0					
ANR	7332005	Identifier	c		7331980	1					
ANR	7332006	AssignmentExpression	"c = compare_option ( dp , sp )"		7331980	2		=			
ANR	7332007	Identifier	c		7331980	0					
ANR	7332008	CallExpression	"compare_option ( dp , sp )"		7331980	1					
ANR	7332009	Callee	compare_option		7331980	0					
ANR	7332010	Identifier	compare_option		7331980	0					
ANR	7332011	ArgumentList	dp		7331980	1					
ANR	7332012	Argument	dp		7331980	0					
ANR	7332013	Identifier	dp		7331980	0					
ANR	7332014	Argument	sp		7331980	1					
ANR	7332015	Identifier	sp		7331980	0					
ANR	7332016	IfStatement	if ( c < 0 )		7331980	1					
ANR	7332017	Condition	c < 0	2133:10:64876:64880	7331980	0	True				
ANR	7332018	RelationalExpression	c < 0		7331980	0		<			
ANR	7332019	Identifier	c		7331980	0					
ANR	7332020	PrimaryExpression	0		7331980	1					
ANR	7332021	ReturnStatement	return 0 ;	2134:9:64892:64900	7331980	1	True				
ANR	7332022	PrimaryExpression	0		7331980	0					
ANR	7332023	ElseStatement	else		7331980	0					
ANR	7332024	IfStatement	if ( c > 0 )		7331980	0					
ANR	7332025	Condition	c > 0	2136:15:64930:64934	7331980	0	True				
ANR	7332026	RelationalExpression	c > 0		7331980	0		>			
ANR	7332027	Identifier	c		7331980	0					
ANR	7332028	PrimaryExpression	0		7331980	1					
ANR	7332029	ReturnStatement	return 1 ;	2137:9:64946:64954	7331980	1	True				
ANR	7332030	PrimaryExpression	1		7331980	0					
ANR	7332031	ExpressionStatement	"assert ( 0 && ""unreached"" )"	2140:3:64978:65002	7331980	2	True				
ANR	7332032	CallExpression	"assert ( 0 && ""unreached"" )"		7331980	0					
ANR	7332033	Callee	assert		7331980	0					
ANR	7332034	Identifier	assert		7331980	0					
ANR	7332035	ArgumentList	"0 && ""unreached"""		7331980	1					
ANR	7332036	Argument	"0 && ""unreached"""		7331980	0					
ANR	7332037	AndExpression	"0 && ""unreached"""		7331980	0		&&			
ANR	7332038	PrimaryExpression	0		7331980	0					
ANR	7332039	PrimaryExpression	"""unreached"""		7331980	1					
ANR	7332040	ReturnType	static int		7331980	1					
ANR	7332041	Identifier	better_options		7331980	2					
ANR	7332042	ParameterList	const struct display * dp		7331980	3					
ANR	7332043	Parameter	const struct display * dp	2111:15:64006:64029	7331980	0	True				
ANR	7332044	ParameterType	const struct display *		7331980	0					
ANR	7332045	Identifier	dp		7331980	1					
ANR	7332046	CFGEntryNode	ENTRY		7331980		True				
ANR	7332047	CFGExitNode	EXIT		7331980		True				
ANR	7332048	Symbol	* dp		7331980						
ANR	7332049	Symbol	c		7331980						
ANR	7332050	Symbol	compare_option		7331980						
ANR	7332051	Symbol	dp		7331980						
ANR	7332052	Symbol	sp		7331980						
ANR	7332053	Symbol	dp -> csp		7331980						
ANR	7332054	Function	print_search_results	2143:0:65007:65380							
ANR	7332055	FunctionDef	print_search_results (struct display * dp)		7332054	0					
ANR	7332056	CompoundStatement		2145:0:65060:65380	7332054	0					
ANR	7332057	ExpressionStatement	assert ( dp -> filename != NULL )	2146:3:65065:65093	7332054	0	True				
ANR	7332058	CallExpression	assert ( dp -> filename != NULL )		7332054	0					
ANR	7332059	Callee	assert		7332054	0					
ANR	7332060	Identifier	assert		7332054	0					
ANR	7332061	ArgumentList	dp -> filename != NULL		7332054	1					
ANR	7332062	Argument	dp -> filename != NULL		7332054	0					
ANR	7332063	EqualityExpression	dp -> filename != NULL		7332054	0		!=			
ANR	7332064	PtrMemberAccess	dp -> filename		7332054	0					
ANR	7332065	Identifier	dp		7332054	0					
ANR	7332066	Identifier	filename		7332054	1					
ANR	7332067	Identifier	NULL		7332054	1					
ANR	7332068	ExpressionStatement	"printf ( ""%s [%ld x %ld %d bpp %s, %lu bytes] %lu -> %lu with '%s'\\n"" , dp -> filename , ( unsigned long ) dp -> w , ( unsigned long ) dp -> h , dp -> bpp , cts ( dp -> ct ) , ( unsigned long ) dp -> size , ( unsigned long ) dp -> read_size , ( unsigned long ) dp -> best_size , dp -> best )"	2147:3:65098:65359	7332054	1	True				
ANR	7332069	CallExpression	"printf ( ""%s [%ld x %ld %d bpp %s, %lu bytes] %lu -> %lu with '%s'\\n"" , dp -> filename , ( unsigned long ) dp -> w , ( unsigned long ) dp -> h , dp -> bpp , cts ( dp -> ct ) , ( unsigned long ) dp -> size , ( unsigned long ) dp -> read_size , ( unsigned long ) dp -> best_size , dp -> best )"		7332054	0					
ANR	7332070	Callee	printf		7332054	0					
ANR	7332071	Identifier	printf		7332054	0					
ANR	7332072	ArgumentList	"""%s [%ld x %ld %d bpp %s, %lu bytes] %lu -> %lu with '%s'\\n"""		7332054	1					
ANR	7332073	Argument	"""%s [%ld x %ld %d bpp %s, %lu bytes] %lu -> %lu with '%s'\\n"""		7332054	0					
ANR	7332074	PrimaryExpression	"""%s [%ld x %ld %d bpp %s, %lu bytes] %lu -> %lu with '%s'\\n"""		7332054	0					
ANR	7332075	Argument	dp -> filename		7332054	1					
ANR	7332076	PtrMemberAccess	dp -> filename		7332054	0					
ANR	7332077	Identifier	dp		7332054	0					
ANR	7332078	Identifier	filename		7332054	1					
ANR	7332079	Argument	( unsigned long ) dp -> w		7332054	2					
ANR	7332080	CastExpression	( unsigned long ) dp -> w		7332054	0					
ANR	7332081	CastTarget	unsigned long		7332054	0					
ANR	7332082	PtrMemberAccess	dp -> w		7332054	1					
ANR	7332083	Identifier	dp		7332054	0					
ANR	7332084	Identifier	w		7332054	1					
ANR	7332085	Argument	( unsigned long ) dp -> h		7332054	3					
ANR	7332086	CastExpression	( unsigned long ) dp -> h		7332054	0					
ANR	7332087	CastTarget	unsigned long		7332054	0					
ANR	7332088	PtrMemberAccess	dp -> h		7332054	1					
ANR	7332089	Identifier	dp		7332054	0					
ANR	7332090	Identifier	h		7332054	1					
ANR	7332091	Argument	dp -> bpp		7332054	4					
ANR	7332092	PtrMemberAccess	dp -> bpp		7332054	0					
ANR	7332093	Identifier	dp		7332054	0					
ANR	7332094	Identifier	bpp		7332054	1					
ANR	7332095	Argument	cts ( dp -> ct )		7332054	5					
ANR	7332096	CallExpression	cts ( dp -> ct )		7332054	0					
ANR	7332097	Callee	cts		7332054	0					
ANR	7332098	Identifier	cts		7332054	0					
ANR	7332099	ArgumentList	dp -> ct		7332054	1					
ANR	7332100	Argument	dp -> ct		7332054	0					
ANR	7332101	PtrMemberAccess	dp -> ct		7332054	0					
ANR	7332102	Identifier	dp		7332054	0					
ANR	7332103	Identifier	ct		7332054	1					
ANR	7332104	Argument	( unsigned long ) dp -> size		7332054	6					
ANR	7332105	CastExpression	( unsigned long ) dp -> size		7332054	0					
ANR	7332106	CastTarget	unsigned long		7332054	0					
ANR	7332107	PtrMemberAccess	dp -> size		7332054	1					
ANR	7332108	Identifier	dp		7332054	0					
ANR	7332109	Identifier	size		7332054	1					
ANR	7332110	Argument	( unsigned long ) dp -> read_size		7332054	7					
ANR	7332111	CastExpression	( unsigned long ) dp -> read_size		7332054	0					
ANR	7332112	CastTarget	unsigned long		7332054	0					
ANR	7332113	PtrMemberAccess	dp -> read_size		7332054	1					
ANR	7332114	Identifier	dp		7332054	0					
ANR	7332115	Identifier	read_size		7332054	1					
ANR	7332116	Argument	( unsigned long ) dp -> best_size		7332054	8					
ANR	7332117	CastExpression	( unsigned long ) dp -> best_size		7332054	0					
ANR	7332118	CastTarget	unsigned long		7332054	0					
ANR	7332119	PtrMemberAccess	dp -> best_size		7332054	1					
ANR	7332120	Identifier	dp		7332054	0					
ANR	7332121	Identifier	best_size		7332054	1					
ANR	7332122	Argument	dp -> best		7332054	9					
ANR	7332123	PtrMemberAccess	dp -> best		7332054	0					
ANR	7332124	Identifier	dp		7332054	0					
ANR	7332125	Identifier	best		7332054	1					
ANR	7332126	ExpressionStatement	fflush ( stdout )	2151:3:65364:65378	7332054	2	True				
ANR	7332127	CallExpression	fflush ( stdout )		7332054	0					
ANR	7332128	Callee	fflush		7332054	0					
ANR	7332129	Identifier	fflush		7332054	0					
ANR	7332130	ArgumentList	stdout		7332054	1					
ANR	7332131	Argument	stdout		7332054	0					
ANR	7332132	Identifier	stdout		7332054	0					
ANR	7332133	ReturnType	static void		7332054	1					
ANR	7332134	Identifier	print_search_results		7332054	2					
ANR	7332135	ParameterList	struct display * dp		7332054	3					
ANR	7332136	Parameter	struct display * dp	2144:21:65040:65057	7332054	0	True				
ANR	7332137	ParameterType	struct display *		7332054	0					
ANR	7332138	Identifier	dp		7332054	1					
ANR	7332139	CFGEntryNode	ENTRY		7332054		True				
ANR	7332140	CFGExitNode	EXIT		7332054		True				
ANR	7332141	Symbol	NULL		7332054						
ANR	7332142	Symbol	cts		7332054						
ANR	7332143	Symbol	dp -> best_size		7332054						
ANR	7332144	Symbol	dp -> best		7332054						
ANR	7332145	Symbol	dp -> read_size		7332054						
ANR	7332146	Symbol	stdout		7332054						
ANR	7332147	Symbol	dp -> filename		7332054						
ANR	7332148	Symbol	dp -> h		7332054						
ANR	7332149	Symbol	dp		7332054						
ANR	7332150	Symbol	dp -> bpp		7332054						
ANR	7332151	Symbol	dp -> ct		7332054						
ANR	7332152	Symbol	* dp		7332054						
ANR	7332153	Symbol	dp -> size		7332054						
ANR	7332154	Symbol	dp -> w		7332054						
ANR	7332155	Function	log_search	2154:0:65383:65664							
ANR	7332156	FunctionDef	"log_search (struct display * dp , unsigned int log_depth)"		7332155	0					
ANR	7332157	CompoundStatement		2156:0:65450:65664	7332155	0					
ANR	7332158	IfStatement	if ( dp -> nsp <= log_depth )		7332155	0					
ANR	7332159	Condition	dp -> nsp <= log_depth	2158:7:65503:65546	7332155	0	True				
ANR	7332160	RelationalExpression	dp -> nsp <= log_depth		7332155	0		<=			
ANR	7332161	PtrMemberAccess	dp -> nsp		7332155	0					
ANR	7332162	Identifier	dp		7332155	0					
ANR	7332163	Identifier	nsp		7332155	1					
ANR	7332164	Identifier	log_depth		7332155	1					
ANR	7332165	CompoundStatement		4:3:101:101	7332155	1					
ANR	7332166	ExpressionStatement	print_search_results ( dp )	2160:6:65560:65584	7332155	0	True				
ANR	7332167	CallExpression	print_search_results ( dp )		7332155	0					
ANR	7332168	Callee	print_search_results		7332155	0					
ANR	7332169	Identifier	print_search_results		7332155	0					
ANR	7332170	ArgumentList	dp		7332155	1					
ANR	7332171	Argument	dp		7332155	0					
ANR	7332172	Identifier	dp		7332155	0					
ANR	7332173	ExpressionStatement	dp -> best_size = MAX_SIZE	2162:6:65633:65657	7332155	1	True				
ANR	7332174	AssignmentExpression	dp -> best_size = MAX_SIZE		7332155	0		=			
ANR	7332175	PtrMemberAccess	dp -> best_size		7332155	0					
ANR	7332176	Identifier	dp		7332155	0					
ANR	7332177	Identifier	best_size		7332155	1					
ANR	7332178	Identifier	MAX_SIZE		7332155	1					
ANR	7332179	ReturnType	static void		7332155	1					
ANR	7332180	Identifier	log_search		7332155	2					
ANR	7332181	ParameterList	"struct display * dp , unsigned int log_depth"		7332155	3					
ANR	7332182	Parameter	struct display * dp	2155:11:65406:65423	7332155	0	True				
ANR	7332183	ParameterType	struct display *		7332155	0					
ANR	7332184	Identifier	dp		7332155	1					
ANR	7332185	Parameter	unsigned int log_depth	2155:31:65426:65447	7332155	1	True				
ANR	7332186	ParameterType	unsigned int		7332155	0					
ANR	7332187	Identifier	log_depth		7332155	1					
ANR	7332188	CFGEntryNode	ENTRY		7332155		True				
ANR	7332189	CFGExitNode	EXIT		7332155		True				
ANR	7332190	Symbol	* dp		7332155						
ANR	7332191	Symbol	dp -> best_size		7332155						
ANR	7332192	Symbol	MAX_SIZE		7332155						
ANR	7332193	Symbol	log_depth		7332155						
ANR	7332194	Symbol	dp -> nsp		7332155						
ANR	7332195	Symbol	dp		7332155						
ANR	7332196	Function	cp_one_file	2166:0:65667:68695							
ANR	7332197	FunctionDef	"cp_one_file (struct display * dp , const char * filename , const char * destname)"		7332196	0					
ANR	7332198	CompoundStatement		2168:0:65755:68695	7332196	0					
ANR	7332199	IdentifierDeclStatement	unsigned int log_depth ;	2169:3:65760:65782	7332196	0	True				
ANR	7332200	IdentifierDecl	log_depth		7332196	0					
ANR	7332201	IdentifierDeclType	unsigned int		7332196	0					
ANR	7332202	Identifier	log_depth		7332196	1					
ANR	7332203	ExpressionStatement	dp -> filename = filename	2171:3:65788:65811	7332196	1	True				
ANR	7332204	AssignmentExpression	dp -> filename = filename		7332196	0		=			
ANR	7332205	PtrMemberAccess	dp -> filename		7332196	0					
ANR	7332206	Identifier	dp		7332196	0					
ANR	7332207	Identifier	filename		7332196	1					
ANR	7332208	Identifier	filename		7332196	1					
ANR	7332209	ExpressionStatement	"dp -> operation = ""read"""	2172:3:65816:65838	7332196	2	True				
ANR	7332210	AssignmentExpression	"dp -> operation = ""read"""		7332196	0		=			
ANR	7332211	PtrMemberAccess	dp -> operation		7332196	0					
ANR	7332212	Identifier	dp		7332196	0					
ANR	7332213	Identifier	operation		7332196	1					
ANR	7332214	PrimaryExpression	"""read"""		7332196	1					
ANR	7332215	ExpressionStatement	dp -> no_warnings = 0	2173:3:65843:65862	7332196	3	True				
ANR	7332216	AssignmentExpression	dp -> no_warnings = 0		7332196	0		=			
ANR	7332217	PtrMemberAccess	dp -> no_warnings		7332196	0					
ANR	7332218	Identifier	dp		7332196	0					
ANR	7332219	Identifier	no_warnings		7332196	1					
ANR	7332220	PrimaryExpression	0		7332196	1					
ANR	7332221	IfStatement	"if ( filename != NULL && access ( filename , R_OK ) != 0 )"		7332196	4					
ANR	7332222	Condition	"filename != NULL && access ( filename , R_OK ) != 0"	2176:7:65904:65950	7332196	0	True				
ANR	7332223	AndExpression	"filename != NULL && access ( filename , R_OK ) != 0"		7332196	0		&&			
ANR	7332224	EqualityExpression	filename != NULL		7332196	0		!=			
ANR	7332225	Identifier	filename		7332196	0					
ANR	7332226	Identifier	NULL		7332196	1					
ANR	7332227	EqualityExpression	"access ( filename , R_OK ) != 0"		7332196	1		!=			
ANR	7332228	CallExpression	"access ( filename , R_OK )"		7332196	0					
ANR	7332229	Callee	access		7332196	0					
ANR	7332230	Identifier	access		7332196	0					
ANR	7332231	ArgumentList	filename		7332196	1					
ANR	7332232	Argument	filename		7332196	0					
ANR	7332233	Identifier	filename		7332196	0					
ANR	7332234	Argument	R_OK		7332196	1					
ANR	7332235	Identifier	R_OK		7332196	0					
ANR	7332236	PrimaryExpression	0		7332196	1					
ANR	7332237	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: invalid file name (%s)"" , filename , strerror ( errno ) )"	2177:6:65959:66055	7332196	1	True				
ANR	7332238	CallExpression	"display_log ( dp , USER_ERROR , ""%s: invalid file name (%s)"" , filename , strerror ( errno ) )"		7332196	0					
ANR	7332239	Callee	display_log		7332196	0					
ANR	7332240	Identifier	display_log		7332196	0					
ANR	7332241	ArgumentList	dp		7332196	1					
ANR	7332242	Argument	dp		7332196	0					
ANR	7332243	Identifier	dp		7332196	0					
ANR	7332244	Argument	USER_ERROR		7332196	1					
ANR	7332245	Identifier	USER_ERROR		7332196	0					
ANR	7332246	Argument	"""%s: invalid file name (%s)"""		7332196	2					
ANR	7332247	PrimaryExpression	"""%s: invalid file name (%s)"""		7332196	0					
ANR	7332248	Argument	filename		7332196	3					
ANR	7332249	Identifier	filename		7332196	0					
ANR	7332250	Argument	strerror ( errno )		7332196	4					
ANR	7332251	CallExpression	strerror ( errno )		7332196	0					
ANR	7332252	Callee	strerror		7332196	0					
ANR	7332253	Identifier	strerror		7332196	0					
ANR	7332254	ArgumentList	errno		7332196	1					
ANR	7332255	Argument	errno		7332196	0					
ANR	7332256	Identifier	errno		7332196	0					
ANR	7332257	ExpressionStatement	"read_png ( dp , filename )"	2180:3:66061:66083	7332196	5	True				
ANR	7332258	CallExpression	"read_png ( dp , filename )"		7332196	0					
ANR	7332259	Callee	read_png		7332196	0					
ANR	7332260	Identifier	read_png		7332196	0					
ANR	7332261	ArgumentList	dp		7332196	1					
ANR	7332262	Argument	dp		7332196	0					
ANR	7332263	Identifier	dp		7332196	0					
ANR	7332264	Argument	filename		7332196	1					
ANR	7332265	Identifier	filename		7332196	0					
ANR	7332266	ExpressionStatement	"dp -> operation = ""write"""	2183:3:66133:66156	7332196	6	True				
ANR	7332267	AssignmentExpression	"dp -> operation = ""write"""		7332196	0		=			
ANR	7332268	PtrMemberAccess	dp -> operation		7332196	0					
ANR	7332269	Identifier	dp		7332196	0					
ANR	7332270	Identifier	operation		7332196	1					
ANR	7332271	PrimaryExpression	"""write"""		7332196	1					
ANR	7332272	ExpressionStatement	set_windowBits_hi ( dp )	2186:3:66229:66250	7332196	7	True				
ANR	7332273	CallExpression	set_windowBits_hi ( dp )		7332196	0					
ANR	7332274	Callee	set_windowBits_hi		7332196	0					
ANR	7332275	Identifier	set_windowBits_hi		7332196	0					
ANR	7332276	ArgumentList	dp		7332196	1					
ANR	7332277	Argument	dp		7332196	0					
ANR	7332278	Identifier	dp		7332196	0					
ANR	7332279	CompoundStatement		23:6:544:551	7332196	8					
ANR	7332280	IdentifierDeclStatement	int val ;	2190:6:66300:66307	7332196	0	True				
ANR	7332281	IdentifierDecl	val		7332196	0					
ANR	7332282	IdentifierDeclType	int		7332196	0					
ANR	7332283	Identifier	val		7332196	1					
ANR	7332284	IfStatement	"if ( get_option ( dp , ""log-depth"" , & val ) && val >= 0 )"		7332196	1					
ANR	7332285	Condition	"get_option ( dp , ""log-depth"" , & val ) && val >= 0"	2192:10:66320:66364	7332196	0	True				
ANR	7332286	AndExpression	"get_option ( dp , ""log-depth"" , & val ) && val >= 0"		7332196	0		&&			
ANR	7332287	CallExpression	"get_option ( dp , ""log-depth"" , & val )"		7332196	0					
ANR	7332288	Callee	get_option		7332196	0					
ANR	7332289	Identifier	get_option		7332196	0					
ANR	7332290	ArgumentList	dp		7332196	1					
ANR	7332291	Argument	dp		7332196	0					
ANR	7332292	Identifier	dp		7332196	0					
ANR	7332293	Argument	"""log-depth"""		7332196	1					
ANR	7332294	PrimaryExpression	"""log-depth"""		7332196	0					
ANR	7332295	Argument	& val		7332196	2					
ANR	7332296	UnaryOperationExpression	& val		7332196	0					
ANR	7332297	UnaryOperator	&		7332196	0					
ANR	7332298	Identifier	val		7332196	1					
ANR	7332299	RelationalExpression	val >= 0		7332196	1		>=			
ANR	7332300	Identifier	val		7332196	0					
ANR	7332301	PrimaryExpression	0		7332196	1					
ANR	7332302	ExpressionStatement	log_depth = ( unsigned int ) val	2193:9:66376:66413	7332196	1	True				
ANR	7332303	AssignmentExpression	log_depth = ( unsigned int ) val		7332196	0		=			
ANR	7332304	Identifier	log_depth		7332196	0					
ANR	7332305	CastExpression	( unsigned int ) val		7332196	1					
ANR	7332306	CastTarget	unsigned int		7332196	0					
ANR	7332307	Identifier	val		7332196	1					
ANR	7332308	ElseStatement	else		7332196	0					
ANR	7332309	ExpressionStatement	log_depth = 0U	2196:9:66436:66450	7332196	0	True				
ANR	7332310	AssignmentExpression	log_depth = 0U		7332196	0		=			
ANR	7332311	Identifier	log_depth		7332196	0					
ANR	7332312	PrimaryExpression	0U		7332196	1					
ANR	7332313	IfStatement	if ( destname != NULL )		7332196	9					
ANR	7332314	Condition	destname != NULL	2199:7:66465:66480	7332196	0	True				
ANR	7332315	EqualityExpression	destname != NULL		7332196	0		!=			
ANR	7332316	Identifier	destname		7332196	0					
ANR	7332317	Identifier	NULL		7332196	1					
ANR	7332318	CompoundStatement		33:3:748:748	7332196	1					
ANR	7332319	IfStatement	"if ( isdir ( dp , destname ) )"		7332196	0					
ANR	7332320	Condition	"isdir ( dp , destname )"	2201:10:66516:66534	7332196	0	True				
ANR	7332321	CallExpression	"isdir ( dp , destname )"		7332196	0					
ANR	7332322	Callee	isdir		7332196	0					
ANR	7332323	Identifier	isdir		7332196	0					
ANR	7332324	ArgumentList	dp		7332196	1					
ANR	7332325	Argument	dp		7332196	0					
ANR	7332326	Identifier	dp		7332196	0					
ANR	7332327	Argument	destname		7332196	1					
ANR	7332328	Identifier	destname		7332196	0					
ANR	7332329	CompoundStatement		35:6:787:787	7332196	1					
ANR	7332330	ExpressionStatement	"makename ( dp , destname , filename )"	2203:9:66554:66586	7332196	0	True				
ANR	7332331	CallExpression	"makename ( dp , destname , filename )"		7332196	0					
ANR	7332332	Callee	makename		7332196	0					
ANR	7332333	Identifier	makename		7332196	0					
ANR	7332334	ArgumentList	dp		7332196	1					
ANR	7332335	Argument	dp		7332196	0					
ANR	7332336	Identifier	dp		7332196	0					
ANR	7332337	Argument	destname		7332196	1					
ANR	7332338	Identifier	destname		7332196	0					
ANR	7332339	Argument	filename		7332196	2					
ANR	7332340	Identifier	filename		7332196	0					
ANR	7332341	ExpressionStatement	destname = dp -> namebuf	2204:9:66597:66619	7332196	1	True				
ANR	7332342	AssignmentExpression	destname = dp -> namebuf		7332196	0		=			
ANR	7332343	Identifier	destname		7332196	0					
ANR	7332344	PtrMemberAccess	dp -> namebuf		7332196	1					
ANR	7332345	Identifier	dp		7332196	0					
ANR	7332346	Identifier	namebuf		7332196	1					
ANR	7332347	ElseStatement	else		7332196	0					
ANR	7332348	IfStatement	"if ( access ( destname , W_OK ) != 0 && errno != ENOENT )"		7332196	0					
ANR	7332349	Condition	"access ( destname , W_OK ) != 0 && errno != ENOENT"	2207:15:66645:66690	7332196	0	True				
ANR	7332350	AndExpression	"access ( destname , W_OK ) != 0 && errno != ENOENT"		7332196	0		&&			
ANR	7332351	EqualityExpression	"access ( destname , W_OK ) != 0"		7332196	0		!=			
ANR	7332352	CallExpression	"access ( destname , W_OK )"		7332196	0					
ANR	7332353	Callee	access		7332196	0					
ANR	7332354	Identifier	access		7332196	0					
ANR	7332355	ArgumentList	destname		7332196	1					
ANR	7332356	Argument	destname		7332196	0					
ANR	7332357	Identifier	destname		7332196	0					
ANR	7332358	Argument	W_OK		7332196	1					
ANR	7332359	Identifier	W_OK		7332196	0					
ANR	7332360	PrimaryExpression	0		7332196	1					
ANR	7332361	EqualityExpression	errno != ENOENT		7332196	1		!=			
ANR	7332362	Identifier	errno		7332196	0					
ANR	7332363	Identifier	ENOENT		7332196	1					
ANR	7332364	ExpressionStatement	"display_log ( dp , USER_ERROR , ""%s: invalid output name (%s)"" , destname , strerror ( errno ) )"	2208:9:66702:66803	7332196	1	True				
ANR	7332365	CallExpression	"display_log ( dp , USER_ERROR , ""%s: invalid output name (%s)"" , destname , strerror ( errno ) )"		7332196	0					
ANR	7332366	Callee	display_log		7332196	0					
ANR	7332367	Identifier	display_log		7332196	0					
ANR	7332368	ArgumentList	dp		7332196	1					
ANR	7332369	Argument	dp		7332196	0					
ANR	7332370	Identifier	dp		7332196	0					
ANR	7332371	Argument	USER_ERROR		7332196	1					
ANR	7332372	Identifier	USER_ERROR		7332196	0					
ANR	7332373	Argument	"""%s: invalid output name (%s)"""		7332196	2					
ANR	7332374	PrimaryExpression	"""%s: invalid output name (%s)"""		7332196	0					
ANR	7332375	Argument	destname		7332196	3					
ANR	7332376	Identifier	destname		7332196	0					
ANR	7332377	Argument	strerror ( errno )		7332196	4					
ANR	7332378	CallExpression	strerror ( errno )		7332196	0					
ANR	7332379	Callee	strerror		7332196	0					
ANR	7332380	Identifier	strerror		7332196	0					
ANR	7332381	ArgumentList	errno		7332196	1					
ANR	7332382	Argument	errno		7332196	0					
ANR	7332383	Identifier	errno		7332196	0					
ANR	7332384	ExpressionStatement	dp -> nsp = 0	2212:3:66814:66825	7332196	10	True				
ANR	7332385	AssignmentExpression	dp -> nsp = 0		7332196	0		=			
ANR	7332386	PtrMemberAccess	dp -> nsp		7332196	0					
ANR	7332387	Identifier	dp		7332196	0					
ANR	7332388	Identifier	nsp		7332196	1					
ANR	7332389	PrimaryExpression	0		7332196	1					
ANR	7332390	ExpressionStatement	dp -> curr [ 0 ] = 0	2213:3:66830:66845	7332196	11	True				
ANR	7332391	AssignmentExpression	dp -> curr [ 0 ] = 0		7332196	0		=			
ANR	7332392	ArrayIndexing	dp -> curr [ 0 ]		7332196	0					
ANR	7332393	PtrMemberAccess	dp -> curr		7332196	0					
ANR	7332394	Identifier	dp		7332196	0					
ANR	7332395	Identifier	curr		7332196	1					
ANR	7332396	PrimaryExpression	0		7332196	1					
ANR	7332397	PrimaryExpression	0		7332196	1					
ANR	7332398	ExpressionStatement	dp -> opt_string_start = 0	2214:3:66886:66910	7332196	12	True				
ANR	7332399	AssignmentExpression	dp -> opt_string_start = 0		7332196	0		=			
ANR	7332400	PtrMemberAccess	dp -> opt_string_start		7332196	0					
ANR	7332401	Identifier	dp		7332196	0					
ANR	7332402	Identifier	opt_string_start		7332196	1					
ANR	7332403	PrimaryExpression	0		7332196	1					
ANR	7332404	ExpressionStatement	dp -> best [ 0 ] = 0	2215:3:66915:66930	7332196	13	True				
ANR	7332405	AssignmentExpression	dp -> best [ 0 ] = 0		7332196	0		=			
ANR	7332406	ArrayIndexing	dp -> best [ 0 ]		7332196	0					
ANR	7332407	PtrMemberAccess	dp -> best		7332196	0					
ANR	7332408	Identifier	dp		7332196	0					
ANR	7332409	Identifier	best		7332196	1					
ANR	7332410	PrimaryExpression	0		7332196	1					
ANR	7332411	PrimaryExpression	0		7332196	1					
ANR	7332412	ExpressionStatement	dp -> best_size = MAX_SIZE	2216:3:66948:66972	7332196	14	True				
ANR	7332413	AssignmentExpression	dp -> best_size = MAX_SIZE		7332196	0		=			
ANR	7332414	PtrMemberAccess	dp -> best_size		7332196	0					
ANR	7332415	Identifier	dp		7332196	0					
ANR	7332416	Identifier	best_size		7332196	1					
ANR	7332417	Identifier	MAX_SIZE		7332196	1					
ANR	7332418	ExpressionStatement	"write_png ( dp , destname )"	2217:3:66977:67000	7332196	15	True				
ANR	7332419	CallExpression	"write_png ( dp , destname )"		7332196	0					
ANR	7332420	Callee	write_png		7332196	0					
ANR	7332421	Identifier	write_png		7332196	0					
ANR	7332422	ArgumentList	dp		7332196	1					
ANR	7332423	Argument	dp		7332196	0					
ANR	7332424	Identifier	dp		7332196	0					
ANR	7332425	Argument	destname		7332196	1					
ANR	7332426	Identifier	destname		7332196	0					
ANR	7332427	ExpressionStatement	"strcpy ( dp -> best , dp -> curr )"	2220:3:67045:67071	7332196	16	True				
ANR	7332428	CallExpression	"strcpy ( dp -> best , dp -> curr )"		7332196	0					
ANR	7332429	Callee	strcpy		7332196	0					
ANR	7332430	Identifier	strcpy		7332196	0					
ANR	7332431	ArgumentList	dp -> best		7332196	1					
ANR	7332432	Argument	dp -> best		7332196	0					
ANR	7332433	PtrMemberAccess	dp -> best		7332196	0					
ANR	7332434	Identifier	dp		7332196	0					
ANR	7332435	Identifier	best		7332196	1					
ANR	7332436	Argument	dp -> curr		7332196	1					
ANR	7332437	PtrMemberAccess	dp -> curr		7332196	0					
ANR	7332438	Identifier	dp		7332196	0					
ANR	7332439	Identifier	curr		7332196	1					
ANR	7332440	ExpressionStatement	dp -> best_size = dp -> write_size	2221:3:67076:67106	7332196	17	True				
ANR	7332441	AssignmentExpression	dp -> best_size = dp -> write_size		7332196	0		=			
ANR	7332442	PtrMemberAccess	dp -> best_size		7332196	0					
ANR	7332443	Identifier	dp		7332196	0					
ANR	7332444	Identifier	best_size		7332196	1					
ANR	7332445	PtrMemberAccess	dp -> write_size		7332196	1					
ANR	7332446	Identifier	dp		7332196	0					
ANR	7332447	Identifier	write_size		7332196	1					
ANR	7332448	IfStatement	if ( dp -> nsp > 0 )		7332196	18					
ANR	7332449	Condition	dp -> nsp > 0	2223:7:67116:67126	7332196	0	True				
ANR	7332450	RelationalExpression	dp -> nsp > 0		7332196	0		>			
ANR	7332451	PtrMemberAccess	dp -> nsp		7332196	0					
ANR	7332452	Identifier	dp		7332196	0					
ANR	7332453	Identifier	nsp		7332196	1					
ANR	7332454	PrimaryExpression	0		7332196	1					
ANR	7332455	CompoundStatement		58:6:1412:1459	7332196	1					
ANR	7332456	IdentifierDeclStatement	"char * tmpname , tmpbuf [ ( sizeof dp -> namebuf ) + 4 ] ;"	2225:6:67168:67215	7332196	0	True				
ANR	7332457	IdentifierDecl	* tmpname		7332196	0					
ANR	7332458	IdentifierDeclType	char *		7332196	0					
ANR	7332459	Identifier	tmpname		7332196	1					
ANR	7332460	IdentifierDecl	tmpbuf [ ( sizeof dp -> namebuf ) + 4 ]		7332196	1					
ANR	7332461	IdentifierDeclType	char [ ( sizeof dp -> namebuf ) + 4 ]		7332196	0					
ANR	7332462	Identifier	tmpbuf		7332196	1					
ANR	7332463	AdditiveExpression	( sizeof dp -> namebuf ) + 4		7332196	2		+			
ANR	7332464	SizeofExpression	sizeof dp -> namebuf		7332196	0					
ANR	7332465	Sizeof	sizeof		7332196	0					
ANR	7332466	PtrMemberAccess	dp -> namebuf		7332196	1					
ANR	7332467	Identifier	dp		7332196	0					
ANR	7332468	Identifier	namebuf		7332196	1					
ANR	7332469	PrimaryExpression	4		7332196	1					
ANR	7332470	ExpressionStatement	assert ( dp -> curr [ 0 ] == ' ' && dp -> tsp > 0 )	2226:6:67223:67264	7332196	1	True				
ANR	7332471	CallExpression	assert ( dp -> curr [ 0 ] == ' ' && dp -> tsp > 0 )		7332196	0					
ANR	7332472	Callee	assert		7332196	0					
ANR	7332473	Identifier	assert		7332196	0					
ANR	7332474	ArgumentList	dp -> curr [ 0 ] == ' ' && dp -> tsp > 0		7332196	1					
ANR	7332475	Argument	dp -> curr [ 0 ] == ' ' && dp -> tsp > 0		7332196	0					
ANR	7332476	AndExpression	dp -> curr [ 0 ] == ' ' && dp -> tsp > 0		7332196	0		&&			
ANR	7332477	EqualityExpression	dp -> curr [ 0 ] == ' '		7332196	0		==			
ANR	7332478	ArrayIndexing	dp -> curr [ 0 ]		7332196	0					
ANR	7332479	PtrMemberAccess	dp -> curr		7332196	0					
ANR	7332480	Identifier	dp		7332196	0					
ANR	7332481	Identifier	curr		7332196	1					
ANR	7332482	PrimaryExpression	0		7332196	1					
ANR	7332483	PrimaryExpression	' '		7332196	1					
ANR	7332484	RelationalExpression	dp -> tsp > 0		7332196	1		>			
ANR	7332485	PtrMemberAccess	dp -> tsp		7332196	0					
ANR	7332486	Identifier	dp		7332196	0					
ANR	7332487	Identifier	tsp		7332196	1					
ANR	7332488	PrimaryExpression	0		7332196	1					
ANR	7332489	ExpressionStatement	"log_search ( dp , log_depth )"	2229:6:67322:67347	7332196	2	True				
ANR	7332490	CallExpression	"log_search ( dp , log_depth )"		7332196	0					
ANR	7332491	Callee	log_search		7332196	0					
ANR	7332492	Identifier	log_search		7332196	0					
ANR	7332493	ArgumentList	dp		7332196	1					
ANR	7332494	Argument	dp		7332196	0					
ANR	7332495	Identifier	dp		7332196	0					
ANR	7332496	Argument	log_depth		7332196	1					
ANR	7332497	Identifier	log_depth		7332196	0					
ANR	7332498	ExpressionStatement	dp -> no_warnings = 1	2230:6:67355:67374	7332196	3	True				
ANR	7332499	AssignmentExpression	dp -> no_warnings = 1		7332196	0		=			
ANR	7332500	PtrMemberAccess	dp -> no_warnings		7332196	0					
ANR	7332501	Identifier	dp		7332196	0					
ANR	7332502	Identifier	no_warnings		7332196	1					
ANR	7332503	PrimaryExpression	1		7332196	1					
ANR	7332504	IfStatement	if ( destname != NULL )		7332196	4					
ANR	7332505	Condition	destname != NULL	2233:10:67447:67462	7332196	0	True				
ANR	7332506	EqualityExpression	destname != NULL		7332196	0		!=			
ANR	7332507	Identifier	destname		7332196	0					
ANR	7332508	Identifier	NULL		7332196	1					
ANR	7332509	CompoundStatement		67:6:1715:1715	7332196	1					
ANR	7332510	ExpressionStatement	"strcpy ( tmpbuf , destname )"	2235:9:67482:67506	7332196	0	True				
ANR	7332511	CallExpression	"strcpy ( tmpbuf , destname )"		7332196	0					
ANR	7332512	Callee	strcpy		7332196	0					
ANR	7332513	Identifier	strcpy		7332196	0					
ANR	7332514	ArgumentList	tmpbuf		7332196	1					
ANR	7332515	Argument	tmpbuf		7332196	0					
ANR	7332516	Identifier	tmpbuf		7332196	0					
ANR	7332517	Argument	destname		7332196	1					
ANR	7332518	Identifier	destname		7332196	0					
ANR	7332519	ExpressionStatement	"strcat ( tmpbuf , "".tmp"" )"	2236:9:67517:67539	7332196	1	True				
ANR	7332520	CallExpression	"strcat ( tmpbuf , "".tmp"" )"		7332196	0					
ANR	7332521	Callee	strcat		7332196	0					
ANR	7332522	Identifier	strcat		7332196	0					
ANR	7332523	ArgumentList	tmpbuf		7332196	1					
ANR	7332524	Argument	tmpbuf		7332196	0					
ANR	7332525	Identifier	tmpbuf		7332196	0					
ANR	7332526	Argument	""".tmp"""		7332196	1					
ANR	7332527	PrimaryExpression	""".tmp"""		7332196	0					
ANR	7332528	ExpressionStatement	tmpname = tmpbuf	2237:9:67587:67603	7332196	2	True				
ANR	7332529	AssignmentExpression	tmpname = tmpbuf		7332196	0		=			
ANR	7332530	Identifier	tmpname		7332196	0					
ANR	7332531	Identifier	tmpbuf		7332196	1					
ANR	7332532	ElseStatement	else		7332196	0					
ANR	7332533	ExpressionStatement	tmpname = NULL	2241:9:67634:67648	7332196	0	True				
ANR	7332534	AssignmentExpression	tmpname = NULL		7332196	0		=			
ANR	7332535	Identifier	tmpname		7332196	0					
ANR	7332536	Identifier	NULL		7332196	1					
ANR	7332537	DoStatement	do		7332196	5					
ANR	7332538	CompoundStatement		78:6:1965:1965	7332196	0					
ANR	7332539	ExpressionStatement	"write_png ( dp , tmpname )"	2246:9:67732:67754	7332196	0	True				
ANR	7332540	CallExpression	"write_png ( dp , tmpname )"		7332196	0					
ANR	7332541	Callee	write_png		7332196	0					
ANR	7332542	Identifier	write_png		7332196	0					
ANR	7332543	ArgumentList	dp		7332196	1					
ANR	7332544	Argument	dp		7332196	0					
ANR	7332545	Identifier	dp		7332196	0					
ANR	7332546	Argument	tmpname		7332196	1					
ANR	7332547	Identifier	tmpname		7332196	0					
ANR	7332548	ExpressionStatement	assert ( dp -> csp > 0 )	2251:9:67886:67905	7332196	1	True				
ANR	7332549	CallExpression	assert ( dp -> csp > 0 )		7332196	0					
ANR	7332550	Callee	assert		7332196	0					
ANR	7332551	Identifier	assert		7332196	0					
ANR	7332552	ArgumentList	dp -> csp > 0		7332196	1					
ANR	7332553	Argument	dp -> csp > 0		7332196	0					
ANR	7332554	RelationalExpression	dp -> csp > 0		7332196	0		>			
ANR	7332555	PtrMemberAccess	dp -> csp		7332196	0					
ANR	7332556	Identifier	dp		7332196	0					
ANR	7332557	Identifier	csp		7332196	1					
ANR	7332558	PrimaryExpression	0		7332196	1					
ANR	7332559	IfStatement	if ( dp -> write_size < dp -> best_size || ( dp -> write_size == dp -> best_size && better_options ( dp ) ) )		7332196	2					
ANR	7332560	Condition	dp -> write_size < dp -> best_size || ( dp -> write_size == dp -> best_size && better_options ( dp ) )	2253:13:67921:68022	7332196	0	True				
ANR	7332561	OrExpression	dp -> write_size < dp -> best_size || ( dp -> write_size == dp -> best_size && better_options ( dp ) )		7332196	0		||			
ANR	7332562	RelationalExpression	dp -> write_size < dp -> best_size		7332196	0		<			
ANR	7332563	PtrMemberAccess	dp -> write_size		7332196	0					
ANR	7332564	Identifier	dp		7332196	0					
ANR	7332565	Identifier	write_size		7332196	1					
ANR	7332566	PtrMemberAccess	dp -> best_size		7332196	1					
ANR	7332567	Identifier	dp		7332196	0					
ANR	7332568	Identifier	best_size		7332196	1					
ANR	7332569	AndExpression	dp -> write_size == dp -> best_size && better_options ( dp )		7332196	1		&&			
ANR	7332570	EqualityExpression	dp -> write_size == dp -> best_size		7332196	0		==			
ANR	7332571	PtrMemberAccess	dp -> write_size		7332196	0					
ANR	7332572	Identifier	dp		7332196	0					
ANR	7332573	Identifier	write_size		7332196	1					
ANR	7332574	PtrMemberAccess	dp -> best_size		7332196	1					
ANR	7332575	Identifier	dp		7332196	0					
ANR	7332576	Identifier	best_size		7332196	1					
ANR	7332577	CallExpression	better_options ( dp )		7332196	1					
ANR	7332578	Callee	better_options		7332196	0					
ANR	7332579	Identifier	better_options		7332196	0					
ANR	7332580	ArgumentList	dp		7332196	1					
ANR	7332581	Argument	dp		7332196	0					
ANR	7332582	Identifier	dp		7332196	0					
ANR	7332583	CompoundStatement		88:9:2278:2278	7332196	1					
ANR	7332584	IfStatement	"if ( destname != NULL && rename ( tmpname , destname ) != 0 )"		7332196	0					
ANR	7332585	Condition	"destname != NULL && rename ( tmpname , destname ) != 0"	2256:16:68052:68101	7332196	0	True				
ANR	7332586	AndExpression	"destname != NULL && rename ( tmpname , destname ) != 0"		7332196	0		&&			
ANR	7332587	EqualityExpression	destname != NULL		7332196	0		!=			
ANR	7332588	Identifier	destname		7332196	0					
ANR	7332589	Identifier	NULL		7332196	1					
ANR	7332590	EqualityExpression	"rename ( tmpname , destname ) != 0"		7332196	1		!=			
ANR	7332591	CallExpression	"rename ( tmpname , destname )"		7332196	0					
ANR	7332592	Callee	rename		7332196	0					
ANR	7332593	Identifier	rename		7332196	0					
ANR	7332594	ArgumentList	tmpname		7332196	1					
ANR	7332595	Argument	tmpname		7332196	0					
ANR	7332596	Identifier	tmpname		7332196	0					
ANR	7332597	Argument	destname		7332196	1					
ANR	7332598	Identifier	destname		7332196	0					
ANR	7332599	PrimaryExpression	0		7332196	1					
ANR	7332600	ExpressionStatement	"display_log ( dp , APP_ERROR , ""rename %s %s failed (%s)"" , tmpname , destname , strerror ( errno ) )"	2257:15:68119:68230	7332196	1	True				
ANR	7332601	CallExpression	"display_log ( dp , APP_ERROR , ""rename %s %s failed (%s)"" , tmpname , destname , strerror ( errno ) )"		7332196	0					
ANR	7332602	Callee	display_log		7332196	0					
ANR	7332603	Identifier	display_log		7332196	0					
ANR	7332604	ArgumentList	dp		7332196	1					
ANR	7332605	Argument	dp		7332196	0					
ANR	7332606	Identifier	dp		7332196	0					
ANR	7332607	Argument	APP_ERROR		7332196	1					
ANR	7332608	Identifier	APP_ERROR		7332196	0					
ANR	7332609	Argument	"""rename %s %s failed (%s)"""		7332196	2					
ANR	7332610	PrimaryExpression	"""rename %s %s failed (%s)"""		7332196	0					
ANR	7332611	Argument	tmpname		7332196	3					
ANR	7332612	Identifier	tmpname		7332196	0					
ANR	7332613	Argument	destname		7332196	4					
ANR	7332614	Identifier	destname		7332196	0					
ANR	7332615	Argument	strerror ( errno )		7332196	5					
ANR	7332616	CallExpression	strerror ( errno )		7332196	0					
ANR	7332617	Callee	strerror		7332196	0					
ANR	7332618	Identifier	strerror		7332196	0					
ANR	7332619	ArgumentList	errno		7332196	1					
ANR	7332620	Argument	errno		7332196	0					
ANR	7332621	Identifier	errno		7332196	0					
ANR	7332622	ExpressionStatement	"strcpy ( dp -> best , dp -> curr )"	2260:12:68245:68271	7332196	1	True				
ANR	7332623	CallExpression	"strcpy ( dp -> best , dp -> curr )"		7332196	0					
ANR	7332624	Callee	strcpy		7332196	0					
ANR	7332625	Identifier	strcpy		7332196	0					
ANR	7332626	ArgumentList	dp -> best		7332196	1					
ANR	7332627	Argument	dp -> best		7332196	0					
ANR	7332628	PtrMemberAccess	dp -> best		7332196	0					
ANR	7332629	Identifier	dp		7332196	0					
ANR	7332630	Identifier	best		7332196	1					
ANR	7332631	Argument	dp -> curr		7332196	1					
ANR	7332632	PtrMemberAccess	dp -> curr		7332196	0					
ANR	7332633	Identifier	dp		7332196	0					
ANR	7332634	Identifier	curr		7332196	1					
ANR	7332635	ExpressionStatement	dp -> best_size = dp -> write_size	2261:12:68285:68315	7332196	2	True				
ANR	7332636	AssignmentExpression	dp -> best_size = dp -> write_size		7332196	0		=			
ANR	7332637	PtrMemberAccess	dp -> best_size		7332196	0					
ANR	7332638	Identifier	dp		7332196	0					
ANR	7332639	Identifier	best_size		7332196	1					
ANR	7332640	PtrMemberAccess	dp -> write_size		7332196	1					
ANR	7332641	Identifier	dp		7332196	0					
ANR	7332642	Identifier	write_size		7332196	1					
ANR	7332643	ElseStatement	else		7332196	0					
ANR	7332644	IfStatement	if ( tmpname != NULL && unlink ( tmpname ) != 0 )		7332196	0					
ANR	7332645	Condition	tmpname != NULL && unlink ( tmpname ) != 0	2264:18:68347:68385	7332196	0	True				
ANR	7332646	AndExpression	tmpname != NULL && unlink ( tmpname ) != 0		7332196	0		&&			
ANR	7332647	EqualityExpression	tmpname != NULL		7332196	0		!=			
ANR	7332648	Identifier	tmpname		7332196	0					
ANR	7332649	Identifier	NULL		7332196	1					
ANR	7332650	EqualityExpression	unlink ( tmpname ) != 0		7332196	1		!=			
ANR	7332651	CallExpression	unlink ( tmpname )		7332196	0					
ANR	7332652	Callee	unlink		7332196	0					
ANR	7332653	Identifier	unlink		7332196	0					
ANR	7332654	ArgumentList	tmpname		7332196	1					
ANR	7332655	Argument	tmpname		7332196	0					
ANR	7332656	Identifier	tmpname		7332196	0					
ANR	7332657	PrimaryExpression	0		7332196	1					
ANR	7332658	ExpressionStatement	"display_log ( dp , APP_WARNING , ""unlink %s failed (%s)"" , tmpname , strerror ( errno ) )"	2265:12:68400:68497	7332196	1	True				
ANR	7332659	CallExpression	"display_log ( dp , APP_WARNING , ""unlink %s failed (%s)"" , tmpname , strerror ( errno ) )"		7332196	0					
ANR	7332660	Callee	display_log		7332196	0					
ANR	7332661	Identifier	display_log		7332196	0					
ANR	7332662	ArgumentList	dp		7332196	1					
ANR	7332663	Argument	dp		7332196	0					
ANR	7332664	Identifier	dp		7332196	0					
ANR	7332665	Argument	APP_WARNING		7332196	1					
ANR	7332666	Identifier	APP_WARNING		7332196	0					
ANR	7332667	Argument	"""unlink %s failed (%s)"""		7332196	2					
ANR	7332668	PrimaryExpression	"""unlink %s failed (%s)"""		7332196	0					
ANR	7332669	Argument	tmpname		7332196	3					
ANR	7332670	Identifier	tmpname		7332196	0					
ANR	7332671	Argument	strerror ( errno )		7332196	4					
ANR	7332672	CallExpression	strerror ( errno )		7332196	0					
ANR	7332673	Callee	strerror		7332196	0					
ANR	7332674	Identifier	strerror		7332196	0					
ANR	7332675	ArgumentList	errno		7332196	1					
ANR	7332676	Argument	errno		7332196	0					
ANR	7332677	Identifier	errno		7332196	0					
ANR	7332678	ExpressionStatement	"log_search ( dp , log_depth )"	2268:9:68509:68534	7332196	3	True				
ANR	7332679	CallExpression	"log_search ( dp , log_depth )"		7332196	0					
ANR	7332680	Callee	log_search		7332196	0					
ANR	7332681	Identifier	log_search		7332196	0					
ANR	7332682	ArgumentList	dp		7332196	1					
ANR	7332683	Argument	dp		7332196	0					
ANR	7332684	Identifier	dp		7332196	0					
ANR	7332685	Argument	log_depth		7332196	1					
ANR	7332686	Identifier	log_depth		7332196	0					
ANR	7332687	Condition	dp -> nsp > 0	2270:13:68557:68567	7332196	1	True				
ANR	7332688	RelationalExpression	dp -> nsp > 0		7332196	0		>			
ANR	7332689	PtrMemberAccess	dp -> nsp		7332196	0					
ANR	7332690	Identifier	dp		7332196	0					
ANR	7332691	Identifier	nsp		7332196	1					
ANR	7332692	PrimaryExpression	0		7332196	1					
ANR	7332693	ExpressionStatement	dp -> write_size = dp -> best_size	2273:6:68658:68688	7332196	6	True				
ANR	7332694	AssignmentExpression	dp -> write_size = dp -> best_size		7332196	0		=			
ANR	7332695	PtrMemberAccess	dp -> write_size		7332196	0					
ANR	7332696	Identifier	dp		7332196	0					
ANR	7332697	Identifier	write_size		7332196	1					
ANR	7332698	PtrMemberAccess	dp -> best_size		7332196	1					
ANR	7332699	Identifier	dp		7332196	0					
ANR	7332700	Identifier	best_size		7332196	1					
ANR	7332701	ReturnType	static void		7332196	1					
ANR	7332702	Identifier	cp_one_file		7332196	2					
ANR	7332703	ParameterList	"struct display * dp , const char * filename , const char * destname"		7332196	3					
ANR	7332704	Parameter	struct display * dp	2167:12:65691:65708	7332196	0	True				
ANR	7332705	ParameterType	struct display *		7332196	0					
ANR	7332706	Identifier	dp		7332196	1					
ANR	7332707	Parameter	const char * filename	2167:32:65711:65730	7332196	1	True				
ANR	7332708	ParameterType	const char *		7332196	0					
ANR	7332709	Identifier	filename		7332196	1					
ANR	7332710	Parameter	const char * destname	2167:54:65733:65752	7332196	2	True				
ANR	7332711	ParameterType	const char *		7332196	0					
ANR	7332712	Identifier	destname		7332196	1					
ANR	7332713	CFGEntryNode	ENTRY		7332196		True				
ANR	7332714	CFGExitNode	EXIT		7332196		True				
ANR	7332715	Symbol	& val		7332196						
ANR	7332716	Symbol	dp -> no_warnings		7332196						
ANR	7332717	Symbol	access		7332196						
ANR	7332718	Symbol	dp -> operation		7332196						
ANR	7332719	Symbol	dp		7332196						
ANR	7332720	Symbol	better_options		7332196						
ANR	7332721	Symbol	R_OK		7332196						
ANR	7332722	Symbol	* dp		7332196						
ANR	7332723	Symbol	dp -> curr		7332196						
ANR	7332724	Symbol	tmpname		7332196						
ANR	7332725	Symbol	APP_ERROR		7332196						
ANR	7332726	Symbol	tmpbuf		7332196						
ANR	7332727	Symbol	* dp -> curr		7332196						
ANR	7332728	Symbol	isdir		7332196						
ANR	7332729	Symbol	val		7332196						
ANR	7332730	Symbol	errno		7332196						
ANR	7332731	Symbol	* dp -> best		7332196						
ANR	7332732	Symbol	NULL		7332196						
ANR	7332733	Symbol	dp -> best		7332196						
ANR	7332734	Symbol	dp -> best_size		7332196						
ANR	7332735	Symbol	USER_ERROR		7332196						
ANR	7332736	Symbol	MAX_SIZE		7332196						
ANR	7332737	Symbol	dp -> filename		7332196						
ANR	7332738	Symbol	ENOENT		7332196						
ANR	7332739	Symbol	dp -> namebuf		7332196						
ANR	7332740	Symbol	W_OK		7332196						
ANR	7332741	Symbol	dp -> csp		7332196						
ANR	7332742	Symbol	strerror		7332196						
ANR	7332743	Symbol	dp -> write_size		7332196						
ANR	7332744	Symbol	get_option		7332196						
ANR	7332745	Symbol	filename		7332196						
ANR	7332746	Symbol	destname		7332196						
ANR	7332747	Symbol	unlink		7332196						
ANR	7332748	Symbol	rename		7332196						
ANR	7332749	Symbol	APP_WARNING		7332196						
ANR	7332750	Symbol	log_depth		7332196						
ANR	7332751	Symbol	dp -> nsp		7332196						
ANR	7332752	Symbol	* * dp		7332196						
ANR	7332753	Symbol	dp -> opt_string_start		7332196						
ANR	7332754	Symbol	dp -> tsp		7332196						
ANR	7332755	DeclStmt									
ANR	7332756	Decl							int	int	ret
ANR	7332757	DeclStmt									
ANR	7332758	Decl							int	int	option_end
ANR	7332759	DeclStmt									
ANR	7332760	Decl							struct display	struct display	d
ANR	7332761	DeclStmt									
ANR	7332762	Decl							int	int	errors
ANR	7332763	DeclStmt									
ANR	7332764	Decl							int	int	i
ANR	7332765	DeclStmt									
ANR	7332766	Decl							const char	const char *	infile
ANR	7332767	DeclStmt									
ANR	7332768	Decl							const char	const char *	outfile
ANR	7332769	DeclStmt									
ANR	7332770	Decl							int	int	ret
ANR	7332771	DeclStmt									
ANR	7332772	Decl							const int	const int	pass
ANR	7332773	DeclStmt									
ANR	7332774	Decl							int	int	j
ANR	7332775	DeclStmt									
ANR	7332776	Decl							endif	endif	printf
ANR	7332777	DeclStmt									
ANR	7332778	Decl							int	int	output
ANR	7332779	Function	main	2447:0:73358:73457							
ANR	7332780	FunctionDef	main ()		7332779	0					
ANR	7332781	CompoundStatement		2449:0:73373:73457	7332779	0					
ANR	7332782	ExpressionStatement	"fprintf ( stderr , ""pngcp: no support for png_read/write_image\\n"" )"	2450:3:73378:73441	7332779	0	True				
ANR	7332783	CallExpression	"fprintf ( stderr , ""pngcp: no support for png_read/write_image\\n"" )"		7332779	0					
ANR	7332784	Callee	fprintf		7332779	0					
ANR	7332785	Identifier	fprintf		7332779	0					
ANR	7332786	ArgumentList	stderr		7332779	1					
ANR	7332787	Argument	stderr		7332779	0					
ANR	7332788	Identifier	stderr		7332779	0					
ANR	7332789	Argument	"""pngcp: no support for png_read/write_image\\n"""		7332779	1					
ANR	7332790	PrimaryExpression	"""pngcp: no support for png_read/write_image\\n"""		7332779	0					
ANR	7332791	ReturnStatement	return 77 ;	2451:3:73446:73455	7332779	1	True				
ANR	7332792	PrimaryExpression	77		7332779	0					
ANR	7332793	ReturnType	int		7332779	1					
ANR	7332794	Identifier	main		7332779	2					
ANR	7332795	ParameterList			7332779	3					
ANR	7332796	CFGEntryNode	ENTRY		7332779		True				
ANR	7332797	CFGExitNode	EXIT		7332779		True				
ANR	7332798	Symbol	stderr		7332779						
