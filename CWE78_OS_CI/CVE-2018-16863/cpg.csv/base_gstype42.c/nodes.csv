command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	803293	File	data/converged/CVE-2018-16863_ghostpdl/base_gstype42.c								
ANR	803294	DeclStmt									
ANR	803295	Decl							int	"int ( uint glyph_index , const gs_matrix * pmat , gx_path * ppath , cached_fm_pair * pair , const gs_log2_scale_point * pscale , bool design_grid )"	append_outline_fitted
ANR	803296	DeclStmt									
ANR	803297	Decl							uint	"uint ( gs_font_type42 * pfont , gs_glyph glyph )"	default_get_glyph_index
ANR	803298	DeclStmt									
ANR	803299	Decl							int	"int ( gs_font_type42 * pfont , uint glyph_index , gs_glyph_data_t * pgd )"	default_get_outline
ANR	803300	Function	gs_type42_read_data	78:0:2370:2910							
ANR	803301	FunctionDef	"gs_type42_read_data (gs_font_type42 * pfont , ulong pos , uint length , byte * buf)"		803300	0					
ANR	803302	CompoundStatement		80:0:2453:2910	803300	0					
ANR	803303	IdentifierDeclStatement	"int ( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc ;"	81:4:2459:2557	803300	0	True				
ANR	803304	IdentifierDecl	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		803300	0					
ANR	803305	IdentifierDeclType	"int ( * ) ( gs_font_type42 * , ulong , uint , const byte * * )"		803300	0					
ANR	803306	Identifier	string_proc		803300	1					
ANR	803307	AssignmentExpression	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		803300	2		=			
ANR	803308	Identifier	string_proc		803300	0					
ANR	803309	MemberAccess	pfont -> data . string_proc		803300	1					
ANR	803310	PtrMemberAccess	pfont -> data		803300	0					
ANR	803311	Identifier	pfont		803300	0					
ANR	803312	Identifier	data		803300	1					
ANR	803313	Identifier	string_proc		803300	1					
ANR	803314	IdentifierDeclStatement	uint left = length ;	83:4:2563:2581	803300	1	True				
ANR	803315	IdentifierDecl	left = length		803300	0					
ANR	803316	IdentifierDeclType	uint		803300	0					
ANR	803317	Identifier	left		803300	1					
ANR	803318	AssignmentExpression	left = length		803300	2		=			
ANR	803319	Identifier	length		803300	0					
ANR	803320	Identifier	length		803300	1					
ANR	803321	IdentifierDeclStatement	const byte * data ;	84:4:2587:2603	803300	2	True				
ANR	803322	IdentifierDecl	* data		803300	0					
ANR	803323	IdentifierDeclType	const byte *		803300	0					
ANR	803324	Identifier	data		803300	1					
ANR	803325	IdentifierDeclStatement	int code ;	85:4:2609:2617	803300	3	True				
ANR	803326	IdentifierDecl	code		803300	0					
ANR	803327	IdentifierDeclType	int		803300	0					
ANR	803328	Identifier	code		803300	1					
ANR	803329	DoStatement	do		803300	4					
ANR	803330	CompoundStatement		8:7:173:173	803300	0					
ANR	803331	ExpressionStatement	"code = ( * string_proc ) ( pfont , ( ulong ) ( pos + length - left ) , left , & data )"	88:8:2637:2708	803300	0	True				
ANR	803332	AssignmentExpression	"code = ( * string_proc ) ( pfont , ( ulong ) ( pos + length - left ) , left , & data )"		803300	0		=			
ANR	803333	Identifier	code		803300	0					
ANR	803334	CallExpression	"( * string_proc ) ( pfont , ( ulong ) ( pos + length - left ) , left , & data )"		803300	1					
ANR	803335	Callee	* string_proc		803300	0					
ANR	803336	UnaryOperationExpression	* string_proc		803300	0					
ANR	803337	UnaryOperator	*		803300	0					
ANR	803338	Identifier	string_proc		803300	1					
ANR	803339	ArgumentList	pfont		803300	1					
ANR	803340	Argument	pfont		803300	0					
ANR	803341	Identifier	pfont		803300	0					
ANR	803342	Argument	( ulong ) ( pos + length - left )		803300	1					
ANR	803343	CastExpression	( ulong ) ( pos + length - left )		803300	0					
ANR	803344	CastTarget	ulong		803300	0					
ANR	803345	AdditiveExpression	pos + length - left		803300	1		+			
ANR	803346	Identifier	pos		803300	0					
ANR	803347	AdditiveExpression	length - left		803300	1		-			
ANR	803348	Identifier	length		803300	0					
ANR	803349	Identifier	left		803300	1					
ANR	803350	Argument	left		803300	2					
ANR	803351	Identifier	left		803300	0					
ANR	803352	Argument	& data		803300	3					
ANR	803353	UnaryOperationExpression	& data		803300	0					
ANR	803354	UnaryOperator	&		803300	0					
ANR	803355	Identifier	data		803300	1					
ANR	803356	IfStatement	if ( code < 0 )		803300	1					
ANR	803357	Condition	code < 0	89:12:2722:2729	803300	0	True				
ANR	803358	RelationalExpression	code < 0		803300	0		<			
ANR	803359	Identifier	code		803300	0					
ANR	803360	PrimaryExpression	0		803300	1					
ANR	803361	ReturnStatement	return code ;	90:12:2744:2755	803300	1	True				
ANR	803362	Identifier	code		803300	0					
ANR	803363	IfStatement	if ( code == 0 )		803300	2					
ANR	803364	Condition	code == 0	91:12:2769:2777	803300	0	True				
ANR	803365	EqualityExpression	code == 0		803300	0		==			
ANR	803366	Identifier	code		803300	0					
ANR	803367	PrimaryExpression	0		803300	1					
ANR	803368	ExpressionStatement	code = left	92:12:2792:2803	803300	1	True				
ANR	803369	AssignmentExpression	code = left		803300	0		=			
ANR	803370	Identifier	code		803300	0					
ANR	803371	Identifier	left		803300	1					
ANR	803372	ExpressionStatement	"memcpy ( buf + length - left , data , code )"	93:8:2813:2852	803300	3	True				
ANR	803373	CallExpression	"memcpy ( buf + length - left , data , code )"		803300	0					
ANR	803374	Callee	memcpy		803300	0					
ANR	803375	Identifier	memcpy		803300	0					
ANR	803376	ArgumentList	buf + length - left		803300	1					
ANR	803377	Argument	buf + length - left		803300	0					
ANR	803378	AdditiveExpression	buf + length - left		803300	0		+			
ANR	803379	Identifier	buf		803300	0					
ANR	803380	AdditiveExpression	length - left		803300	1		-			
ANR	803381	Identifier	length		803300	0					
ANR	803382	Identifier	left		803300	1					
ANR	803383	Argument	data		803300	1					
ANR	803384	Identifier	data		803300	0					
ANR	803385	Argument	code		803300	2					
ANR	803386	Identifier	code		803300	0					
ANR	803387	ExpressionStatement	left -= code	94:8:2862:2874	803300	4	True				
ANR	803388	AssignmentExpression	left -= code		803300	0		-=			
ANR	803389	Identifier	left		803300	0					
ANR	803390	Identifier	code		803300	1					
ANR	803391	Condition	left	95:13:2889:2892	803300	1	True				
ANR	803392	Identifier	left		803300	0					
ANR	803393	ReturnStatement	return 0 ;	96:4:2900:2908	803300	5	True				
ANR	803394	PrimaryExpression	0		803300	0					
ANR	803395	ReturnType	int		803300	1					
ANR	803396	Identifier	gs_type42_read_data		803300	2					
ANR	803397	ParameterList	"gs_font_type42 * pfont , ulong pos , uint length , byte * buf"		803300	3					
ANR	803398	Parameter	gs_font_type42 * pfont	79:20:2394:2415	803300	0	True				
ANR	803399	ParameterType	gs_font_type42 *		803300	0					
ANR	803400	Identifier	pfont		803300	1					
ANR	803401	Parameter	ulong pos	79:44:2418:2426	803300	1	True				
ANR	803402	ParameterType	ulong		803300	0					
ANR	803403	Identifier	pos		803300	1					
ANR	803404	Parameter	uint length	79:55:2429:2439	803300	2	True				
ANR	803405	ParameterType	uint		803300	0					
ANR	803406	Identifier	length		803300	1					
ANR	803407	Parameter	byte * buf	79:68:2442:2450	803300	3	True				
ANR	803408	ParameterType	byte *		803300	0					
ANR	803409	Identifier	buf		803300	1					
ANR	803410	CFGEntryNode	ENTRY		803300		True				
ANR	803411	CFGExitNode	EXIT		803300		True				
ANR	803412	Symbol	* string_proc		803300						
ANR	803413	Symbol	code		803300						
ANR	803414	Symbol	data		803300						
ANR	803415	Symbol	pfont		803300						
ANR	803416	Symbol	length		803300						
ANR	803417	Symbol	pfont -> data . string_proc		803300						
ANR	803418	Symbol	pfont -> data		803300						
ANR	803419	Symbol	& data		803300						
ANR	803420	Symbol	buf		803300						
ANR	803421	Symbol	* pfont		803300						
ANR	803422	Symbol	pos		803300						
ANR	803423	Symbol	left		803300						
ANR	803424	Symbol	string_proc		803300						
ANR	803425	Function	get_glyph_offset	100:0:2966:3676							
ANR	803426	FunctionDef	"get_glyph_offset (gs_font_type42 * pfont , uint glyph_index)"		803425	0					
ANR	803427	CompoundStatement		102:0:3044:3676	803425	0					
ANR	803428	IdentifierDeclStatement	ulong result ;	103:4:3050:3062	803425	0	True				
ANR	803429	IdentifierDecl	result		803425	0					
ANR	803430	IdentifierDeclType	ulong		803425	0					
ANR	803431	Identifier	result		803425	1					
ANR	803432	IdentifierDeclStatement	byte buf [ 4 ] ;	104:4:3068:3079	803425	1	True				
ANR	803433	IdentifierDecl	buf [ 4 ]		803425	0					
ANR	803434	IdentifierDeclType	byte [ 4 ]		803425	0					
ANR	803435	Identifier	buf		803425	1					
ANR	803436	PrimaryExpression	4		803425	2					
ANR	803437	IdentifierDeclStatement	int code ;	105:4:3085:3093	803425	2	True				
ANR	803438	IdentifierDecl	code		803425	0					
ANR	803439	IdentifierDeclType	int		803425	0					
ANR	803440	Identifier	code		803425	1					
ANR	803441	IfStatement	if ( pfont -> data . indexToLocFormat )		803425	3					
ANR	803442	Condition	pfont -> data . indexToLocFormat	111:8:3313:3340	803425	0	True				
ANR	803443	MemberAccess	pfont -> data . indexToLocFormat		803425	0					
ANR	803444	PtrMemberAccess	pfont -> data		803425	0					
ANR	803445	Identifier	pfont		803425	0					
ANR	803446	Identifier	data		803425	1					
ANR	803447	Identifier	indexToLocFormat		803425	1					
ANR	803448	CompoundStatement		10:38:298:298	803425	1					
ANR	803449	ExpressionStatement	"code = gs_type42_read_data ( pfont , pfont -> data . loca + glyph_index * 4 , 4 , buf )"	112:8:3353:3430	803425	0	True				
ANR	803450	AssignmentExpression	"code = gs_type42_read_data ( pfont , pfont -> data . loca + glyph_index * 4 , 4 , buf )"		803425	0		=			
ANR	803451	Identifier	code		803425	0					
ANR	803452	CallExpression	"gs_type42_read_data ( pfont , pfont -> data . loca + glyph_index * 4 , 4 , buf )"		803425	1					
ANR	803453	Callee	gs_type42_read_data		803425	0					
ANR	803454	Identifier	gs_type42_read_data		803425	0					
ANR	803455	ArgumentList	pfont		803425	1					
ANR	803456	Argument	pfont		803425	0					
ANR	803457	Identifier	pfont		803425	0					
ANR	803458	Argument	pfont -> data . loca + glyph_index * 4		803425	1					
ANR	803459	AdditiveExpression	pfont -> data . loca + glyph_index * 4		803425	0		+			
ANR	803460	MemberAccess	pfont -> data . loca		803425	0					
ANR	803461	PtrMemberAccess	pfont -> data		803425	0					
ANR	803462	Identifier	pfont		803425	0					
ANR	803463	Identifier	data		803425	1					
ANR	803464	Identifier	loca		803425	1					
ANR	803465	MultiplicativeExpression	glyph_index * 4		803425	1		*			
ANR	803466	Identifier	glyph_index		803425	0					
ANR	803467	PrimaryExpression	4		803425	1					
ANR	803468	Argument	4		803425	2					
ANR	803469	PrimaryExpression	4		803425	0					
ANR	803470	Argument	buf		803425	3					
ANR	803471	Identifier	buf		803425	0					
ANR	803472	ExpressionStatement	result = ( code < 0 ? 0xffffffff : u32 ( buf ) )	113:8:3440:3483	803425	1	True				
ANR	803473	AssignmentExpression	result = ( code < 0 ? 0xffffffff : u32 ( buf ) )		803425	0		=			
ANR	803474	Identifier	result		803425	0					
ANR	803475	ConditionalExpression	code < 0 ? 0xffffffff : u32 ( buf )		803425	1					
ANR	803476	Condition	code < 0		803425	0					
ANR	803477	RelationalExpression	code < 0		803425	0		<			
ANR	803478	Identifier	code		803425	0					
ANR	803479	PrimaryExpression	0		803425	1					
ANR	803480	PrimaryExpression	0xffffffff		803425	1					
ANR	803481	CallExpression	u32 ( buf )		803425	2					
ANR	803482	Callee	u32		803425	0					
ANR	803483	Identifier	u32		803425	0					
ANR	803484	ArgumentList	buf		803425	1					
ANR	803485	Argument	buf		803425	0					
ANR	803486	Identifier	buf		803425	0					
ANR	803487	ElseStatement	else		803425	0					
ANR	803488	CompoundStatement		13:11:451:451	803425	0					
ANR	803489	ExpressionStatement	"code = gs_type42_read_data ( pfont , pfont -> data . loca + glyph_index * 2 , 2 , buf )"	115:8:3506:3583	803425	0	True				
ANR	803490	AssignmentExpression	"code = gs_type42_read_data ( pfont , pfont -> data . loca + glyph_index * 2 , 2 , buf )"		803425	0		=			
ANR	803491	Identifier	code		803425	0					
ANR	803492	CallExpression	"gs_type42_read_data ( pfont , pfont -> data . loca + glyph_index * 2 , 2 , buf )"		803425	1					
ANR	803493	Callee	gs_type42_read_data		803425	0					
ANR	803494	Identifier	gs_type42_read_data		803425	0					
ANR	803495	ArgumentList	pfont		803425	1					
ANR	803496	Argument	pfont		803425	0					
ANR	803497	Identifier	pfont		803425	0					
ANR	803498	Argument	pfont -> data . loca + glyph_index * 2		803425	1					
ANR	803499	AdditiveExpression	pfont -> data . loca + glyph_index * 2		803425	0		+			
ANR	803500	MemberAccess	pfont -> data . loca		803425	0					
ANR	803501	PtrMemberAccess	pfont -> data		803425	0					
ANR	803502	Identifier	pfont		803425	0					
ANR	803503	Identifier	data		803425	1					
ANR	803504	Identifier	loca		803425	1					
ANR	803505	MultiplicativeExpression	glyph_index * 2		803425	1		*			
ANR	803506	Identifier	glyph_index		803425	0					
ANR	803507	PrimaryExpression	2		803425	1					
ANR	803508	Argument	2		803425	2					
ANR	803509	PrimaryExpression	2		803425	0					
ANR	803510	Argument	buf		803425	3					
ANR	803511	Identifier	buf		803425	0					
ANR	803512	ExpressionStatement	result = ( code < 0 ? 0xffffffff : ( ulong ) U16 ( buf ) << 1 )	116:8:3593:3649	803425	1	True				
ANR	803513	AssignmentExpression	result = ( code < 0 ? 0xffffffff : ( ulong ) U16 ( buf ) << 1 )		803425	0		=			
ANR	803514	Identifier	result		803425	0					
ANR	803515	ConditionalExpression	code < 0 ? 0xffffffff : ( ulong ) U16 ( buf ) << 1		803425	1					
ANR	803516	Condition	code < 0		803425	0					
ANR	803517	RelationalExpression	code < 0		803425	0		<			
ANR	803518	Identifier	code		803425	0					
ANR	803519	PrimaryExpression	0		803425	1					
ANR	803520	PrimaryExpression	0xffffffff		803425	1					
ANR	803521	ShiftExpression	( ulong ) U16 ( buf ) << 1		803425	2		<<			
ANR	803522	CastExpression	( ulong ) U16 ( buf )		803425	0					
ANR	803523	CastTarget	ulong		803425	0					
ANR	803524	CallExpression	U16 ( buf )		803425	1					
ANR	803525	Callee	U16		803425	0					
ANR	803526	Identifier	U16		803425	0					
ANR	803527	ArgumentList	buf		803425	1					
ANR	803528	Argument	buf		803425	0					
ANR	803529	Identifier	buf		803425	0					
ANR	803530	PrimaryExpression	1		803425	1					
ANR	803531	ReturnStatement	return result ;	118:4:3661:3674	803425	4	True				
ANR	803532	Identifier	result		803425	0					
ANR	803533	ReturnType	static inline ulong		803425	1					
ANR	803534	Identifier	get_glyph_offset		803425	2					
ANR	803535	ParameterList	"gs_font_type42 * pfont , uint glyph_index"		803425	3					
ANR	803536	Parameter	gs_font_type42 * pfont	101:17:3003:3023	803425	0	True				
ANR	803537	ParameterType	gs_font_type42 *		803425	0					
ANR	803538	Identifier	pfont		803425	1					
ANR	803539	Parameter	uint glyph_index	101:40:3026:3041	803425	1	True				
ANR	803540	ParameterType	uint		803425	0					
ANR	803541	Identifier	glyph_index		803425	1					
ANR	803542	CFGEntryNode	ENTRY		803425		True				
ANR	803543	CFGExitNode	EXIT		803425		True				
ANR	803544	Symbol	result		803425						
ANR	803545	Symbol	pfont -> data . indexToLocFormat		803425						
ANR	803546	Symbol	pfont -> data . loca		803425						
ANR	803547	Symbol	buf		803425						
ANR	803548	Symbol	* pfont		803425						
ANR	803549	Symbol	code		803425						
ANR	803550	Symbol	glyph_index		803425						
ANR	803551	Symbol	pfont		803425						
ANR	803552	Symbol	u32		803425						
ANR	803553	Symbol	pfont -> data		803425						
ANR	803554	Symbol	U16		803425						
ANR	803555	Symbol	gs_type42_read_data		803425						
ANR	803556	ClassDef	gs_type42_font_init_sort_s	122:8:3763:3892							
ANR	803557	DeclStmt									
ANR	803558	Decl							ulong	ulong	glyph_offset
ANR	803559	DeclStmt									
ANR	803560	Decl							int	int	glyph_num
ANR	803561	DeclStmt									
ANR	803562	Decl							int	int	glyph_length
ANR	803563	DeclStmt									
ANR	803564	Decl							gs_type42_font_init_sort_s	gs_type42_font_init_sort_s	gs_type42_font_init_sort_t
ANR	803565	Function	gs_type42_font_init_compare	127:0:3894:4398							
ANR	803566	FunctionDef	"gs_type42_font_init_compare (const void * a , const void * b)"		803565	0					
ANR	803567	CompoundStatement		129:0:3964:4398	803565	0					
ANR	803568	IdentifierDeclStatement	ulong a_offset = ( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_offset ;	130:4:3970:4040	803565	0	True				
ANR	803569	IdentifierDecl	a_offset = ( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_offset		803565	0					
ANR	803570	IdentifierDeclType	ulong		803565	0					
ANR	803571	Identifier	a_offset		803565	1					
ANR	803572	AssignmentExpression	a_offset = ( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_offset		803565	2		=			
ANR	803573	Identifier	a_offset		803565	0					
ANR	803574	PtrMemberAccess	( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_offset		803565	1					
ANR	803575	CastExpression	( const gs_type42_font_init_sort_t * ) a		803565	0					
ANR	803576	CastTarget	const gs_type42_font_init_sort_t *		803565	0					
ANR	803577	Identifier	a		803565	1					
ANR	803578	Identifier	glyph_offset		803565	1					
ANR	803579	IdentifierDeclStatement	ulong b_offset = ( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_offset ;	131:4:4046:4116	803565	1	True				
ANR	803580	IdentifierDecl	b_offset = ( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_offset		803565	0					
ANR	803581	IdentifierDeclType	ulong		803565	0					
ANR	803582	Identifier	b_offset		803565	1					
ANR	803583	AssignmentExpression	b_offset = ( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_offset		803565	2		=			
ANR	803584	Identifier	b_offset		803565	0					
ANR	803585	PtrMemberAccess	( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_offset		803565	1					
ANR	803586	CastExpression	( const gs_type42_font_init_sort_t * ) b		803565	0					
ANR	803587	CastTarget	const gs_type42_font_init_sort_t *		803565	0					
ANR	803588	Identifier	b		803565	1					
ANR	803589	Identifier	glyph_offset		803565	1					
ANR	803590	IfStatement	if ( a_offset < b_offset )		803565	2					
ANR	803591	Condition	a_offset < b_offset	132:8:4126:4144	803565	0	True				
ANR	803592	RelationalExpression	a_offset < b_offset		803565	0		<			
ANR	803593	Identifier	a_offset		803565	0					
ANR	803594	Identifier	b_offset		803565	1					
ANR	803595	ReturnStatement	return - 1 ;	133:8:4155:4164	803565	1	True				
ANR	803596	UnaryOperationExpression	- 1		803565	0					
ANR	803597	UnaryOperator	-		803565	0					
ANR	803598	PrimaryExpression	1		803565	1					
ANR	803599	ElseStatement	else		803565	0					
ANR	803600	IfStatement	if ( a_offset > b_offset )		803565	0					
ANR	803601	Condition	a_offset > b_offset	134:13:4179:4197	803565	0	True				
ANR	803602	RelationalExpression	a_offset > b_offset		803565	0		>			
ANR	803603	Identifier	a_offset		803565	0					
ANR	803604	Identifier	b_offset		803565	1					
ANR	803605	ReturnStatement	return + 1 ;	135:8:4208:4217	803565	1	True				
ANR	803606	UnaryOperationExpression	+ 1		803565	0					
ANR	803607	UnaryOperator	+		803565	0					
ANR	803608	PrimaryExpression	1		803565	1					
ANR	803609	ElseStatement	else		803565	0					
ANR	803610	ReturnStatement	return ( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_num - ( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_num ;	138:8:4271:4396	803565	0	True				
ANR	803611	AdditiveExpression	( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_num - ( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_num		803565	0		-			
ANR	803612	PtrMemberAccess	( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_num		803565	0					
ANR	803613	CastExpression	( const gs_type42_font_init_sort_t * ) a		803565	0					
ANR	803614	CastTarget	const gs_type42_font_init_sort_t *		803565	0					
ANR	803615	Identifier	a		803565	1					
ANR	803616	Identifier	glyph_num		803565	1					
ANR	803617	PtrMemberAccess	( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_num		803565	1					
ANR	803618	CastExpression	( const gs_type42_font_init_sort_t * ) b		803565	0					
ANR	803619	CastTarget	const gs_type42_font_init_sort_t *		803565	0					
ANR	803620	Identifier	b		803565	1					
ANR	803621	Identifier	glyph_num		803565	1					
ANR	803622	ReturnType	static int		803565	1					
ANR	803623	Identifier	gs_type42_font_init_compare		803565	2					
ANR	803624	ParameterList	"const void * a , const void * b"		803565	3					
ANR	803625	Parameter	const void * a	128:29:3934:3946	803565	0	True				
ANR	803626	ParameterType	const void *		803565	0					
ANR	803627	Identifier	a		803565	1					
ANR	803628	Parameter	const void * b	128:44:3949:3961	803565	1	True				
ANR	803629	ParameterType	const void *		803565	0					
ANR	803630	Identifier	b		803565	1					
ANR	803631	CFGEntryNode	ENTRY		803565		True				
ANR	803632	CFGExitNode	EXIT		803565		True				
ANR	803633	Symbol	( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_offset		803565						
ANR	803634	Symbol	a		803565						
ANR	803635	Symbol	b		803565						
ANR	803636	Symbol	a_offset		803565						
ANR	803637	Symbol	( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_num		803565						
ANR	803638	Symbol	( ( const gs_type42_font_init_sort_t * ) a ) -> glyph_offset		803565						
ANR	803639	Symbol	b_offset		803565						
ANR	803640	Symbol	* a		803565						
ANR	803641	Symbol	* b		803565						
ANR	803642	Symbol	( ( const gs_type42_font_init_sort_t * ) b ) -> glyph_num		803565						
ANR	803643	Function	gs_type42_font_init	148:0:4577:18191							
ANR	803644	FunctionDef	"gs_type42_font_init (gs_font_type42 * pfont , int subfontID)"		803643	0					
ANR	803645	CompoundStatement		150:0:4640:18191	803643	0					
ANR	803646	IdentifierDeclStatement	"int ( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc ;"	151:4:4646:4744	803643	0	True				
ANR	803647	IdentifierDecl	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		803643	0					
ANR	803648	IdentifierDeclType	"int ( * ) ( gs_font_type42 * , ulong , uint , const byte * * )"		803643	0					
ANR	803649	Identifier	string_proc		803643	1					
ANR	803650	AssignmentExpression	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		803643	2		=			
ANR	803651	Identifier	string_proc		803643	0					
ANR	803652	MemberAccess	pfont -> data . string_proc		803643	1					
ANR	803653	PtrMemberAccess	pfont -> data		803643	0					
ANR	803654	Identifier	pfont		803643	0					
ANR	803655	Identifier	data		803643	1					
ANR	803656	Identifier	string_proc		803643	1					
ANR	803657	IdentifierDeclStatement	byte OffsetTable [ 12 ] ;	153:4:4750:4770	803643	1	True				
ANR	803658	IdentifierDecl	OffsetTable [ 12 ]		803643	0					
ANR	803659	IdentifierDeclType	byte [ 12 ]		803643	0					
ANR	803660	Identifier	OffsetTable		803643	1					
ANR	803661	PrimaryExpression	12		803643	2					
ANR	803662	IdentifierDeclStatement	uint numTables ;	154:4:4776:4790	803643	2	True				
ANR	803663	IdentifierDecl	numTables		803643	0					
ANR	803664	IdentifierDeclType	uint		803643	0					
ANR	803665	Identifier	numTables		803643	1					
ANR	803666	IdentifierDeclStatement	byte TableDirectory [ MAX_NUM_TT_TABLES * 16 ] ;	155:4:4796:4839	803643	3	True				
ANR	803667	IdentifierDecl	TableDirectory [ MAX_NUM_TT_TABLES * 16 ]		803643	0					
ANR	803668	IdentifierDeclType	byte [ MAX_NUM_TT_TABLES * 16 ]		803643	0					
ANR	803669	Identifier	TableDirectory		803643	1					
ANR	803670	MultiplicativeExpression	MAX_NUM_TT_TABLES * 16		803643	2		*			
ANR	803671	Identifier	MAX_NUM_TT_TABLES		803643	0					
ANR	803672	PrimaryExpression	16		803643	1					
ANR	803673	IdentifierDeclStatement	uint i ;	156:4:4845:4851	803643	4	True				
ANR	803674	IdentifierDecl	i		803643	0					
ANR	803675	IdentifierDeclType	uint		803643	0					
ANR	803676	Identifier	i		803643	1					
ANR	803677	IdentifierDeclStatement	int code ;	157:4:4857:4865	803643	5	True				
ANR	803678	IdentifierDecl	code		803643	0					
ANR	803679	IdentifierDeclType	int		803643	0					
ANR	803680	Identifier	code		803643	1					
ANR	803681	IdentifierDeclStatement	byte head_box [ 8 ] = { 0 } ;	158:4:4871:4893	803643	6	True				
ANR	803682	IdentifierDecl	head_box [ 8 ] = { 0 }		803643	0					
ANR	803683	IdentifierDeclType	byte [ 8 ]		803643	0					
ANR	803684	Identifier	head_box		803643	1					
ANR	803685	PrimaryExpression	8		803643	2					
ANR	803686	AssignmentExpression	head_box [ 8 ] = { 0 }		803643	3		=			
ANR	803687	Identifier	head_box		803643	0					
ANR	803688	InitializerList	0		803643	1					
ANR	803689	PrimaryExpression	0		803643	0					
ANR	803690	IdentifierDeclStatement	ulong loca_size = 0 ;	159:4:4899:4918	803643	7	True				
ANR	803691	IdentifierDecl	loca_size = 0		803643	0					
ANR	803692	IdentifierDeclType	ulong		803643	0					
ANR	803693	Identifier	loca_size		803643	1					
ANR	803694	AssignmentExpression	loca_size = 0		803643	2		=			
ANR	803695	Identifier	loca_size		803643	0					
ANR	803696	PrimaryExpression	0		803643	1					
ANR	803697	IdentifierDeclStatement	"ulong glyph_start , glyph_offset , glyph_length , glyph_size = 0 ;"	160:4:4924:4985	803643	8	True				
ANR	803698	IdentifierDecl	glyph_start		803643	0					
ANR	803699	IdentifierDeclType	ulong		803643	0					
ANR	803700	Identifier	glyph_start		803643	1					
ANR	803701	IdentifierDecl	glyph_offset		803643	1					
ANR	803702	IdentifierDeclType	ulong		803643	0					
ANR	803703	Identifier	glyph_offset		803643	1					
ANR	803704	IdentifierDecl	glyph_length		803643	2					
ANR	803705	IdentifierDeclType	ulong		803643	0					
ANR	803706	Identifier	glyph_length		803643	1					
ANR	803707	IdentifierDecl	glyph_size = 0		803643	3					
ANR	803708	IdentifierDeclType	ulong		803643	0					
ANR	803709	Identifier	glyph_size		803643	1					
ANR	803710	AssignmentExpression	glyph_size = 0		803643	2		=			
ANR	803711	Identifier	glyph_size		803643	0					
ANR	803712	PrimaryExpression	0		803643	1					
ANR	803713	IdentifierDeclStatement	"uint numFonts , version ;"	161:4:4991:5013	803643	9	True				
ANR	803714	IdentifierDecl	numFonts		803643	0					
ANR	803715	IdentifierDeclType	uint		803643	0					
ANR	803716	Identifier	numFonts		803643	1					
ANR	803717	IdentifierDecl	version		803643	1					
ANR	803718	IdentifierDeclType	uint		803643	0					
ANR	803719	Identifier	version		803643	1					
ANR	803720	IdentifierDeclStatement	uint OffsetTableOffset ;	162:4:5019:5041	803643	10	True				
ANR	803721	IdentifierDecl	OffsetTableOffset		803643	0					
ANR	803722	IdentifierDeclType	uint		803643	0					
ANR	803723	Identifier	OffsetTableOffset		803643	1					
ANR	803724	Statement	static	164:4:5048:5053	803643	11	True				
ANR	803725	IdentifierDeclStatement	"const byte version1_0 [ 4 ] = { 0 , 1 , 0 , 0 } ;"	164:11:5055:5094	803643	12	True				
ANR	803726	IdentifierDecl	"version1_0 [ 4 ] = { 0 , 1 , 0 , 0 }"		803643	0					
ANR	803727	IdentifierDeclType	const byte [ 4 ]		803643	0					
ANR	803728	Identifier	version1_0		803643	1					
ANR	803729	PrimaryExpression	4		803643	2					
ANR	803730	AssignmentExpression	"version1_0 [ 4 ] = { 0 , 1 , 0 , 0 }"		803643	3		=			
ANR	803731	Identifier	version1_0		803643	0					
ANR	803732	InitializerList	0		803643	1					
ANR	803733	PrimaryExpression	0		803643	0					
ANR	803734	PrimaryExpression	1		803643	1					
ANR	803735	PrimaryExpression	0		803643	2					
ANR	803736	PrimaryExpression	0		803643	3					
ANR	803737	Statement	static	165:4:5100:5105	803643	13	True				
ANR	803738	IdentifierDeclStatement	"const byte version_true [ 4 ] = { 't' , 'r' , 'u' , 'e' } ;"	165:11:5107:5156	803643	14	True				
ANR	803739	IdentifierDecl	"version_true [ 4 ] = { 't' , 'r' , 'u' , 'e' }"		803643	0					
ANR	803740	IdentifierDeclType	const byte [ 4 ]		803643	0					
ANR	803741	Identifier	version_true		803643	1					
ANR	803742	PrimaryExpression	4		803643	2					
ANR	803743	AssignmentExpression	"version_true [ 4 ] = { 't' , 'r' , 'u' , 'e' }"		803643	3		=			
ANR	803744	Identifier	version_true		803643	0					
ANR	803745	InitializerList	't'		803643	1					
ANR	803746	PrimaryExpression	't'		803643	0					
ANR	803747	PrimaryExpression	'r'		803643	1					
ANR	803748	PrimaryExpression	'u'		803643	2					
ANR	803749	PrimaryExpression	'e'		803643	3					
ANR	803750	Statement	static	166:4:5162:5167	803643	15	True				
ANR	803751	IdentifierDeclStatement	"const byte version_ttcf [ 4 ] = { 't' , 't' , 'c' , 'f' } ;"	166:11:5169:5218	803643	16	True				
ANR	803752	IdentifierDecl	"version_ttcf [ 4 ] = { 't' , 't' , 'c' , 'f' }"		803643	0					
ANR	803753	IdentifierDeclType	const byte [ 4 ]		803643	0					
ANR	803754	Identifier	version_ttcf		803643	1					
ANR	803755	PrimaryExpression	4		803643	2					
ANR	803756	AssignmentExpression	"version_ttcf [ 4 ] = { 't' , 't' , 'c' , 'f' }"		803643	3		=			
ANR	803757	Identifier	version_ttcf		803643	0					
ANR	803758	InitializerList	't'		803643	1					
ANR	803759	PrimaryExpression	't'		803643	0					
ANR	803760	PrimaryExpression	't'		803643	1					
ANR	803761	PrimaryExpression	'c'		803643	2					
ANR	803762	PrimaryExpression	'f'		803643	3					
ANR	803763	ExpressionStatement	"READ_SFNTS ( pfont , 0 , 12 , OffsetTable )"	168:4:5225:5262	803643	17	True				
ANR	803764	CallExpression	"READ_SFNTS ( pfont , 0 , 12 , OffsetTable )"		803643	0					
ANR	803765	Callee	READ_SFNTS		803643	0					
ANR	803766	Identifier	READ_SFNTS		803643	0					
ANR	803767	ArgumentList	pfont		803643	1					
ANR	803768	Argument	pfont		803643	0					
ANR	803769	Identifier	pfont		803643	0					
ANR	803770	Argument	0		803643	1					
ANR	803771	PrimaryExpression	0		803643	0					
ANR	803772	Argument	12		803643	2					
ANR	803773	PrimaryExpression	12		803643	0					
ANR	803774	Argument	OffsetTable		803643	3					
ANR	803775	Identifier	OffsetTable		803643	0					
ANR	803776	IfStatement	"if ( ! memcmp ( OffsetTable , version_ttcf , 4 ) )"		803643	18					
ANR	803777	Condition	"! memcmp ( OffsetTable , version_ttcf , 4 )"	169:8:5272:5308	803643	0	True				
ANR	803778	UnaryOperationExpression	"! memcmp ( OffsetTable , version_ttcf , 4 )"		803643	0					
ANR	803779	UnaryOperator	!		803643	0					
ANR	803780	CallExpression	"memcmp ( OffsetTable , version_ttcf , 4 )"		803643	1					
ANR	803781	Callee	memcmp		803643	0					
ANR	803782	Identifier	memcmp		803643	0					
ANR	803783	ArgumentList	OffsetTable		803643	1					
ANR	803784	Argument	OffsetTable		803643	0					
ANR	803785	Identifier	OffsetTable		803643	0					
ANR	803786	Argument	version_ttcf		803643	1					
ANR	803787	Identifier	version_ttcf		803643	0					
ANR	803788	Argument	4		803643	2					
ANR	803789	PrimaryExpression	4		803643	0					
ANR	803790	CompoundStatement		20:47:670:670	803643	1					
ANR	803791	ExpressionStatement	version = u32 ( OffsetTable + 4 )	170:8:5321:5351	803643	0	True				
ANR	803792	AssignmentExpression	version = u32 ( OffsetTable + 4 )		803643	0		=			
ANR	803793	Identifier	version		803643	0					
ANR	803794	CallExpression	u32 ( OffsetTable + 4 )		803643	1					
ANR	803795	Callee	u32		803643	0					
ANR	803796	Identifier	u32		803643	0					
ANR	803797	ArgumentList	OffsetTable + 4		803643	1					
ANR	803798	Argument	OffsetTable + 4		803643	0					
ANR	803799	AdditiveExpression	OffsetTable + 4		803643	0		+			
ANR	803800	Identifier	OffsetTable		803643	0					
ANR	803801	PrimaryExpression	4		803643	1					
ANR	803802	IfStatement	if ( version != 0x00010000 && version != 0x00020000 )		803643	1					
ANR	803803	Condition	version != 0x00010000 && version != 0x00020000	171:12:5365:5409	803643	0	True				
ANR	803804	AndExpression	version != 0x00010000 && version != 0x00020000		803643	0		&&			
ANR	803805	EqualityExpression	version != 0x00010000		803643	0		!=			
ANR	803806	Identifier	version		803643	0					
ANR	803807	PrimaryExpression	0x00010000		803643	1					
ANR	803808	EqualityExpression	version != 0x00020000		803643	1		!=			
ANR	803809	Identifier	version		803643	0					
ANR	803810	PrimaryExpression	0x00020000		803643	1					
ANR	803811	CompoundStatement		22:59:771:771	803643	1					
ANR	803812	ExpressionStatement	"emprintf2 ( pfont -> memory , ""Unknown TTC header version %08X in the font %s.\\n"" , version , pfont -> key_name . chars )"	172:12:5426:5579	803643	0	True				
ANR	803813	CallExpression	"emprintf2 ( pfont -> memory , ""Unknown TTC header version %08X in the font %s.\\n"" , version , pfont -> key_name . chars )"		803643	0					
ANR	803814	Callee	emprintf2		803643	0					
ANR	803815	Identifier	emprintf2		803643	0					
ANR	803816	ArgumentList	pfont -> memory		803643	1					
ANR	803817	Argument	pfont -> memory		803643	0					
ANR	803818	PtrMemberAccess	pfont -> memory		803643	0					
ANR	803819	Identifier	pfont		803643	0					
ANR	803820	Identifier	memory		803643	1					
ANR	803821	Argument	"""Unknown TTC header version %08X in the font %s.\\n"""		803643	1					
ANR	803822	PrimaryExpression	"""Unknown TTC header version %08X in the font %s.\\n"""		803643	0					
ANR	803823	Argument	version		803643	2					
ANR	803824	Identifier	version		803643	0					
ANR	803825	Argument	pfont -> key_name . chars		803643	3					
ANR	803826	MemberAccess	pfont -> key_name . chars		803643	0					
ANR	803827	PtrMemberAccess	pfont -> key_name		803643	0					
ANR	803828	Identifier	pfont		803643	0					
ANR	803829	Identifier	key_name		803643	1					
ANR	803830	Identifier	chars		803643	1					
ANR	803831	ExpressionStatement	return_error ( gs_error_invalidfont )	175:12:5593:5627	803643	1	True				
ANR	803832	CallExpression	return_error ( gs_error_invalidfont )		803643	0					
ANR	803833	Callee	return_error		803643	0					
ANR	803834	Identifier	return_error		803643	0					
ANR	803835	ArgumentList	gs_error_invalidfont		803643	1					
ANR	803836	Argument	gs_error_invalidfont		803643	0					
ANR	803837	Identifier	gs_error_invalidfont		803643	0					
ANR	803838	ExpressionStatement	numFonts = u32 ( OffsetTable + 8 )	177:8:5647:5678	803643	2	True				
ANR	803839	AssignmentExpression	numFonts = u32 ( OffsetTable + 8 )		803643	0		=			
ANR	803840	Identifier	numFonts		803643	0					
ANR	803841	CallExpression	u32 ( OffsetTable + 8 )		803643	1					
ANR	803842	Callee	u32		803643	0					
ANR	803843	Identifier	u32		803643	0					
ANR	803844	ArgumentList	OffsetTable + 8		803643	1					
ANR	803845	Argument	OffsetTable + 8		803643	0					
ANR	803846	AdditiveExpression	OffsetTable + 8		803643	0		+			
ANR	803847	Identifier	OffsetTable		803643	0					
ANR	803848	PrimaryExpression	8		803643	1					
ANR	803849	IfStatement	if ( subfontID < 0 || subfontID >= numFonts )		803643	3					
ANR	803850	Condition	subfontID < 0 || subfontID >= numFonts	178:12:5692:5729	803643	0	True				
ANR	803851	OrExpression	subfontID < 0 || subfontID >= numFonts		803643	0		||			
ANR	803852	RelationalExpression	subfontID < 0		803643	0		<			
ANR	803853	Identifier	subfontID		803643	0					
ANR	803854	PrimaryExpression	0		803643	1					
ANR	803855	RelationalExpression	subfontID >= numFonts		803643	1		>=			
ANR	803856	Identifier	subfontID		803643	0					
ANR	803857	Identifier	numFonts		803643	1					
ANR	803858	ExpressionStatement	return_error ( gs_error_rangecheck )	179:12:5744:5777	803643	1	True				
ANR	803859	CallExpression	return_error ( gs_error_rangecheck )		803643	0					
ANR	803860	Callee	return_error		803643	0					
ANR	803861	Identifier	return_error		803643	0					
ANR	803862	ArgumentList	gs_error_rangecheck		803643	1					
ANR	803863	Argument	gs_error_rangecheck		803643	0					
ANR	803864	Identifier	gs_error_rangecheck		803643	0					
ANR	803865	ExpressionStatement	"READ_SFNTS ( pfont , 12 + subfontID * 4 , 4 , OffsetTable )"	180:8:5787:5840	803643	4	True				
ANR	803866	CallExpression	"READ_SFNTS ( pfont , 12 + subfontID * 4 , 4 , OffsetTable )"		803643	0					
ANR	803867	Callee	READ_SFNTS		803643	0					
ANR	803868	Identifier	READ_SFNTS		803643	0					
ANR	803869	ArgumentList	pfont		803643	1					
ANR	803870	Argument	pfont		803643	0					
ANR	803871	Identifier	pfont		803643	0					
ANR	803872	Argument	12 + subfontID * 4		803643	1					
ANR	803873	AdditiveExpression	12 + subfontID * 4		803643	0		+			
ANR	803874	PrimaryExpression	12		803643	0					
ANR	803875	MultiplicativeExpression	subfontID * 4		803643	1		*			
ANR	803876	Identifier	subfontID		803643	0					
ANR	803877	PrimaryExpression	4		803643	1					
ANR	803878	Argument	4		803643	2					
ANR	803879	PrimaryExpression	4		803643	0					
ANR	803880	Argument	OffsetTable		803643	3					
ANR	803881	Identifier	OffsetTable		803643	0					
ANR	803882	ExpressionStatement	OffsetTableOffset = u32 ( OffsetTable )	181:8:5850:5886	803643	5	True				
ANR	803883	AssignmentExpression	OffsetTableOffset = u32 ( OffsetTable )		803643	0		=			
ANR	803884	Identifier	OffsetTableOffset		803643	0					
ANR	803885	CallExpression	u32 ( OffsetTable )		803643	1					
ANR	803886	Callee	u32		803643	0					
ANR	803887	Identifier	u32		803643	0					
ANR	803888	ArgumentList	OffsetTable		803643	1					
ANR	803889	Argument	OffsetTable		803643	0					
ANR	803890	Identifier	OffsetTable		803643	0					
ANR	803891	ExpressionStatement	"READ_SFNTS ( pfont , OffsetTableOffset , 12 , OffsetTable )"	182:8:5896:5949	803643	6	True				
ANR	803892	CallExpression	"READ_SFNTS ( pfont , OffsetTableOffset , 12 , OffsetTable )"		803643	0					
ANR	803893	Callee	READ_SFNTS		803643	0					
ANR	803894	Identifier	READ_SFNTS		803643	0					
ANR	803895	ArgumentList	pfont		803643	1					
ANR	803896	Argument	pfont		803643	0					
ANR	803897	Identifier	pfont		803643	0					
ANR	803898	Argument	OffsetTableOffset		803643	1					
ANR	803899	Identifier	OffsetTableOffset		803643	0					
ANR	803900	Argument	12		803643	2					
ANR	803901	PrimaryExpression	12		803643	0					
ANR	803902	Argument	OffsetTable		803643	3					
ANR	803903	Identifier	OffsetTable		803643	0					
ANR	803904	ElseStatement	else		803643	0					
ANR	803905	CompoundStatement		34:11:1321:1321	803643	0					
ANR	803906	ExpressionStatement	OffsetTableOffset = 0	184:8:5972:5993	803643	0	True				
ANR	803907	AssignmentExpression	OffsetTableOffset = 0		803643	0		=			
ANR	803908	Identifier	OffsetTableOffset		803643	0					
ANR	803909	PrimaryExpression	0		803643	1					
ANR	803910	IfStatement	"if ( memcmp ( OffsetTable , version1_0 , 4 ) && memcmp ( OffsetTable , version_true , 4 ) )"		803643	19					
ANR	803911	Condition	"memcmp ( OffsetTable , version1_0 , 4 ) && memcmp ( OffsetTable , version_true , 4 )"	187:8:6010:6095	803643	0	True				
ANR	803912	AndExpression	"memcmp ( OffsetTable , version1_0 , 4 ) && memcmp ( OffsetTable , version_true , 4 )"		803643	0		&&			
ANR	803913	CallExpression	"memcmp ( OffsetTable , version1_0 , 4 )"		803643	0					
ANR	803914	Callee	memcmp		803643	0					
ANR	803915	Identifier	memcmp		803643	0					
ANR	803916	ArgumentList	OffsetTable		803643	1					
ANR	803917	Argument	OffsetTable		803643	0					
ANR	803918	Identifier	OffsetTable		803643	0					
ANR	803919	Argument	version1_0		803643	1					
ANR	803920	Identifier	version1_0		803643	0					
ANR	803921	Argument	4		803643	2					
ANR	803922	PrimaryExpression	4		803643	0					
ANR	803923	CallExpression	"memcmp ( OffsetTable , version_true , 4 )"		803643	1					
ANR	803924	Callee	memcmp		803643	0					
ANR	803925	Identifier	memcmp		803643	0					
ANR	803926	ArgumentList	OffsetTable		803643	1					
ANR	803927	Argument	OffsetTable		803643	0					
ANR	803928	Identifier	OffsetTable		803643	0					
ANR	803929	Argument	version_true		803643	1					
ANR	803930	Identifier	version_true		803643	0					
ANR	803931	Argument	4		803643	2					
ANR	803932	PrimaryExpression	4		803643	0					
ANR	803933	ExpressionStatement	return_error ( gs_error_invalidfont )	189:8:6106:6140	803643	1	True				
ANR	803934	CallExpression	return_error ( gs_error_invalidfont )		803643	0					
ANR	803935	Callee	return_error		803643	0					
ANR	803936	Identifier	return_error		803643	0					
ANR	803937	ArgumentList	gs_error_invalidfont		803643	1					
ANR	803938	Argument	gs_error_invalidfont		803643	0					
ANR	803939	Identifier	gs_error_invalidfont		803643	0					
ANR	803940	ExpressionStatement	numTables = U16 ( OffsetTable + 4 )	191:4:6147:6179	803643	20	True				
ANR	803941	AssignmentExpression	numTables = U16 ( OffsetTable + 4 )		803643	0		=			
ANR	803942	Identifier	numTables		803643	0					
ANR	803943	CallExpression	U16 ( OffsetTable + 4 )		803643	1					
ANR	803944	Callee	U16		803643	0					
ANR	803945	Identifier	U16		803643	0					
ANR	803946	ArgumentList	OffsetTable + 4		803643	1					
ANR	803947	Argument	OffsetTable + 4		803643	0					
ANR	803948	AdditiveExpression	OffsetTable + 4		803643	0		+			
ANR	803949	Identifier	OffsetTable		803643	0					
ANR	803950	PrimaryExpression	4		803643	1					
ANR	803951	IfStatement	if ( numTables > MAX_NUM_TT_TABLES )		803643	21					
ANR	803952	Condition	numTables > MAX_NUM_TT_TABLES	192:8:6189:6217	803643	0	True				
ANR	803953	RelationalExpression	numTables > MAX_NUM_TT_TABLES		803643	0		>			
ANR	803954	Identifier	numTables		803643	0					
ANR	803955	Identifier	MAX_NUM_TT_TABLES		803643	1					
ANR	803956	ExpressionStatement	return_error ( gs_error_invalidfont )	193:8:6228:6262	803643	1	True				
ANR	803957	CallExpression	return_error ( gs_error_invalidfont )		803643	0					
ANR	803958	Callee	return_error		803643	0					
ANR	803959	Identifier	return_error		803643	0					
ANR	803960	ArgumentList	gs_error_invalidfont		803643	1					
ANR	803961	Argument	gs_error_invalidfont		803643	0					
ANR	803962	Identifier	gs_error_invalidfont		803643	0					
ANR	803963	ExpressionStatement	"READ_SFNTS ( pfont , OffsetTableOffset + 12 , numTables * 16 , TableDirectory )"	194:4:6268:6341	803643	22	True				
ANR	803964	CallExpression	"READ_SFNTS ( pfont , OffsetTableOffset + 12 , numTables * 16 , TableDirectory )"		803643	0					
ANR	803965	Callee	READ_SFNTS		803643	0					
ANR	803966	Identifier	READ_SFNTS		803643	0					
ANR	803967	ArgumentList	pfont		803643	1					
ANR	803968	Argument	pfont		803643	0					
ANR	803969	Identifier	pfont		803643	0					
ANR	803970	Argument	OffsetTableOffset + 12		803643	1					
ANR	803971	AdditiveExpression	OffsetTableOffset + 12		803643	0		+			
ANR	803972	Identifier	OffsetTableOffset		803643	0					
ANR	803973	PrimaryExpression	12		803643	1					
ANR	803974	Argument	numTables * 16		803643	2					
ANR	803975	MultiplicativeExpression	numTables * 16		803643	0		*			
ANR	803976	Identifier	numTables		803643	0					
ANR	803977	PrimaryExpression	16		803643	1					
ANR	803978	Argument	TableDirectory		803643	3					
ANR	803979	Identifier	TableDirectory		803643	0					
ANR	803980	CompoundStatement		48:8:1762:1801	803643	23					
ANR	803981	IdentifierDeclStatement	void * proc_data = pfont -> data . proc_data ;	197:8:6403:6442	803643	0	True				
ANR	803982	IdentifierDecl	* proc_data = pfont -> data . proc_data		803643	0					
ANR	803983	IdentifierDeclType	void *		803643	0					
ANR	803984	Identifier	proc_data		803643	1					
ANR	803985	AssignmentExpression	* proc_data = pfont -> data . proc_data		803643	2		=			
ANR	803986	Identifier	proc_data		803643	0					
ANR	803987	MemberAccess	pfont -> data . proc_data		803643	1					
ANR	803988	PtrMemberAccess	pfont -> data		803643	0					
ANR	803989	Identifier	pfont		803643	0					
ANR	803990	Identifier	data		803643	1					
ANR	803991	Identifier	proc_data		803643	1					
ANR	803992	ExpressionStatement	"memset ( & pfont -> data , 0 , sizeof ( pfont -> data ) )"	199:8:6453:6497	803643	1	True				
ANR	803993	CallExpression	"memset ( & pfont -> data , 0 , sizeof ( pfont -> data ) )"		803643	0					
ANR	803994	Callee	memset		803643	0					
ANR	803995	Identifier	memset		803643	0					
ANR	803996	ArgumentList	& pfont -> data		803643	1					
ANR	803997	Argument	& pfont -> data		803643	0					
ANR	803998	UnaryOperationExpression	& pfont -> data		803643	0					
ANR	803999	UnaryOperator	&		803643	0					
ANR	804000	PtrMemberAccess	pfont -> data		803643	1					
ANR	804001	Identifier	pfont		803643	0					
ANR	804002	Identifier	data		803643	1					
ANR	804003	Argument	0		803643	1					
ANR	804004	PrimaryExpression	0		803643	0					
ANR	804005	Argument	sizeof ( pfont -> data )		803643	2					
ANR	804006	SizeofExpression	sizeof ( pfont -> data )		803643	0					
ANR	804007	Sizeof	sizeof		803643	0					
ANR	804008	PtrMemberAccess	pfont -> data		803643	1					
ANR	804009	Identifier	pfont		803643	0					
ANR	804010	Identifier	data		803643	1					
ANR	804011	ExpressionStatement	pfont -> data . string_proc = string_proc	200:8:6507:6544	803643	2	True				
ANR	804012	AssignmentExpression	pfont -> data . string_proc = string_proc		803643	0		=			
ANR	804013	MemberAccess	pfont -> data . string_proc		803643	0					
ANR	804014	PtrMemberAccess	pfont -> data		803643	0					
ANR	804015	Identifier	pfont		803643	0					
ANR	804016	Identifier	data		803643	1					
ANR	804017	Identifier	string_proc		803643	1					
ANR	804018	Identifier	string_proc		803643	1					
ANR	804019	ExpressionStatement	pfont -> data . proc_data = proc_data	201:8:6554:6587	803643	3	True				
ANR	804020	AssignmentExpression	pfont -> data . proc_data = proc_data		803643	0		=			
ANR	804021	MemberAccess	pfont -> data . proc_data		803643	0					
ANR	804022	PtrMemberAccess	pfont -> data		803643	0					
ANR	804023	Identifier	pfont		803643	0					
ANR	804024	Identifier	data		803643	1					
ANR	804025	Identifier	proc_data		803643	1					
ANR	804026	Identifier	proc_data		803643	1					
ANR	804027	ForStatement	for ( i = 0 ; i < numTables ; ++ i )		803643	24					
ANR	804028	ForInit	i = 0 ;	203:9:6604:6609	803643	0	True				
ANR	804029	AssignmentExpression	i = 0		803643	0		=			
ANR	804030	Identifier	i		803643	0					
ANR	804031	PrimaryExpression	0		803643	1					
ANR	804032	Condition	i < numTables	203:16:6611:6623	803643	1	True				
ANR	804033	RelationalExpression	i < numTables		803643	0		<			
ANR	804034	Identifier	i		803643	0					
ANR	804035	Identifier	numTables		803643	1					
ANR	804036	UnaryExpression	++ i	203:31:6626:6628	803643	2	True				
ANR	804037	IncDec	++		803643	0					
ANR	804038	Identifier	i		803643	1					
ANR	804039	CompoundStatement		56:8:2051:2078	803643	3					
ANR	804040	IdentifierDeclStatement	const byte * tab = TableDirectory + i * 16 ;	204:8:6641:6682	803643	0	True				
ANR	804041	IdentifierDecl	* tab = TableDirectory + i * 16		803643	0					
ANR	804042	IdentifierDeclType	const byte *		803643	0					
ANR	804043	Identifier	tab		803643	1					
ANR	804044	AssignmentExpression	* tab = TableDirectory + i * 16		803643	2		=			
ANR	804045	Identifier	tab		803643	0					
ANR	804046	AdditiveExpression	TableDirectory + i * 16		803643	1		+			
ANR	804047	Identifier	TableDirectory		803643	0					
ANR	804048	MultiplicativeExpression	i * 16		803643	1		*			
ANR	804049	Identifier	i		803643	0					
ANR	804050	PrimaryExpression	16		803643	1					
ANR	804051	IdentifierDeclStatement	ulong offset = u32 ( tab + 8 ) ;	205:8:6692:6719	803643	1	True				
ANR	804052	IdentifierDecl	offset = u32 ( tab + 8 )		803643	0					
ANR	804053	IdentifierDeclType	ulong		803643	0					
ANR	804054	Identifier	offset		803643	1					
ANR	804055	AssignmentExpression	offset = u32 ( tab + 8 )		803643	2		=			
ANR	804056	Identifier	offset		803643	0					
ANR	804057	CallExpression	u32 ( tab + 8 )		803643	1					
ANR	804058	Callee	u32		803643	0					
ANR	804059	Identifier	u32		803643	0					
ANR	804060	ArgumentList	tab + 8		803643	1					
ANR	804061	Argument	tab + 8		803643	0					
ANR	804062	AdditiveExpression	tab + 8		803643	0		+			
ANR	804063	Identifier	tab		803643	0					
ANR	804064	PrimaryExpression	8		803643	1					
ANR	804065	IfStatement	"if ( ! memcmp ( tab , ""cmap"" , 4 ) )"		803643	2					
ANR	804066	Condition	"! memcmp ( tab , ""cmap"" , 4 )"	207:12:6734:6756	803643	0	True				
ANR	804067	UnaryOperationExpression	"! memcmp ( tab , ""cmap"" , 4 )"		803643	0					
ANR	804068	UnaryOperator	!		803643	0					
ANR	804069	CallExpression	"memcmp ( tab , ""cmap"" , 4 )"		803643	1					
ANR	804070	Callee	memcmp		803643	0					
ANR	804071	Identifier	memcmp		803643	0					
ANR	804072	ArgumentList	tab		803643	1					
ANR	804073	Argument	tab		803643	0					
ANR	804074	Identifier	tab		803643	0					
ANR	804075	Argument	"""cmap"""		803643	1					
ANR	804076	PrimaryExpression	"""cmap"""		803643	0					
ANR	804077	Argument	4		803643	2					
ANR	804078	PrimaryExpression	4		803643	0					
ANR	804079	ExpressionStatement	pfont -> data . cmap = offset	208:12:6771:6796	803643	1	True				
ANR	804080	AssignmentExpression	pfont -> data . cmap = offset		803643	0		=			
ANR	804081	MemberAccess	pfont -> data . cmap		803643	0					
ANR	804082	PtrMemberAccess	pfont -> data		803643	0					
ANR	804083	Identifier	pfont		803643	0					
ANR	804084	Identifier	data		803643	1					
ANR	804085	Identifier	cmap		803643	1					
ANR	804086	Identifier	offset		803643	1					
ANR	804087	ElseStatement	else		803643	0					
ANR	804088	IfStatement	"if ( ! memcmp ( tab , ""glyf"" , 4 ) )"		803643	0					
ANR	804089	Condition	"! memcmp ( tab , ""glyf"" , 4 )"	209:17:6815:6837	803643	0	True				
ANR	804090	UnaryOperationExpression	"! memcmp ( tab , ""glyf"" , 4 )"		803643	0					
ANR	804091	UnaryOperator	!		803643	0					
ANR	804092	CallExpression	"memcmp ( tab , ""glyf"" , 4 )"		803643	1					
ANR	804093	Callee	memcmp		803643	0					
ANR	804094	Identifier	memcmp		803643	0					
ANR	804095	ArgumentList	tab		803643	1					
ANR	804096	Argument	tab		803643	0					
ANR	804097	Identifier	tab		803643	0					
ANR	804098	Argument	"""glyf"""		803643	1					
ANR	804099	PrimaryExpression	"""glyf"""		803643	0					
ANR	804100	Argument	4		803643	2					
ANR	804101	PrimaryExpression	4		803643	0					
ANR	804102	CompoundStatement		60:42:2199:2199	803643	1					
ANR	804103	ExpressionStatement	pfont -> data . glyf = offset	210:12:6854:6879	803643	0	True				
ANR	804104	AssignmentExpression	pfont -> data . glyf = offset		803643	0		=			
ANR	804105	MemberAccess	pfont -> data . glyf		803643	0					
ANR	804106	PtrMemberAccess	pfont -> data		803643	0					
ANR	804107	Identifier	pfont		803643	0					
ANR	804108	Identifier	data		803643	1					
ANR	804109	Identifier	glyf		803643	1					
ANR	804110	Identifier	offset		803643	1					
ANR	804111	ExpressionStatement	glyph_size = ( uint ) u32 ( tab + 12 )	211:12:6893:6925	803643	1	True				
ANR	804112	AssignmentExpression	glyph_size = ( uint ) u32 ( tab + 12 )		803643	0		=			
ANR	804113	Identifier	glyph_size		803643	0					
ANR	804114	CastExpression	( uint ) u32 ( tab + 12 )		803643	1					
ANR	804115	CastTarget	uint		803643	0					
ANR	804116	CallExpression	u32 ( tab + 12 )		803643	1					
ANR	804117	Callee	u32		803643	0					
ANR	804118	Identifier	u32		803643	0					
ANR	804119	ArgumentList	tab + 12		803643	1					
ANR	804120	Argument	tab + 12		803643	0					
ANR	804121	AdditiveExpression	tab + 12		803643	0		+			
ANR	804122	Identifier	tab		803643	0					
ANR	804123	PrimaryExpression	12		803643	1					
ANR	804124	ElseStatement	else		803643	0					
ANR	804125	IfStatement	"if ( ! memcmp ( tab , ""GSUB"" , 4 ) )"		803643	0					
ANR	804126	Condition	"! memcmp ( tab , ""GSUB"" , 4 )"	212:19:6946:6968	803643	0	True				
ANR	804127	UnaryOperationExpression	"! memcmp ( tab , ""GSUB"" , 4 )"		803643	0					
ANR	804128	UnaryOperator	!		803643	0					
ANR	804129	CallExpression	"memcmp ( tab , ""GSUB"" , 4 )"		803643	1					
ANR	804130	Callee	memcmp		803643	0					
ANR	804131	Identifier	memcmp		803643	0					
ANR	804132	ArgumentList	tab		803643	1					
ANR	804133	Argument	tab		803643	0					
ANR	804134	Identifier	tab		803643	0					
ANR	804135	Argument	"""GSUB"""		803643	1					
ANR	804136	PrimaryExpression	"""GSUB"""		803643	0					
ANR	804137	Argument	4		803643	2					
ANR	804138	PrimaryExpression	4		803643	0					
ANR	804139	CompoundStatement		63:44:2330:2330	803643	1					
ANR	804140	IfStatement	if ( pfont -> data . gsub_size != 0 )		803643	0					
ANR	804141	Condition	pfont -> data . gsub_size != 0	213:16:6989:7014	803643	0	True				
ANR	804142	EqualityExpression	pfont -> data . gsub_size != 0		803643	0		!=			
ANR	804143	MemberAccess	pfont -> data . gsub_size		803643	0					
ANR	804144	PtrMemberAccess	pfont -> data		803643	0					
ANR	804145	Identifier	pfont		803643	0					
ANR	804146	Identifier	data		803643	1					
ANR	804147	Identifier	gsub_size		803643	1					
ANR	804148	PrimaryExpression	0		803643	1					
ANR	804149	ExpressionStatement	return_error ( gs_error_invalidfont )	214:16:7033:7067	803643	1	True				
ANR	804150	CallExpression	return_error ( gs_error_invalidfont )		803643	0					
ANR	804151	Callee	return_error		803643	0					
ANR	804152	Identifier	return_error		803643	0					
ANR	804153	ArgumentList	gs_error_invalidfont		803643	1					
ANR	804154	Argument	gs_error_invalidfont		803643	0					
ANR	804155	Identifier	gs_error_invalidfont		803643	0					
ANR	804156	ExpressionStatement	pfont -> data . gsub_size = u32 ( tab + 12 )	215:12:7081:7118	803643	1	True				
ANR	804157	AssignmentExpression	pfont -> data . gsub_size = u32 ( tab + 12 )		803643	0		=			
ANR	804158	MemberAccess	pfont -> data . gsub_size		803643	0					
ANR	804159	PtrMemberAccess	pfont -> data		803643	0					
ANR	804160	Identifier	pfont		803643	0					
ANR	804161	Identifier	data		803643	1					
ANR	804162	Identifier	gsub_size		803643	1					
ANR	804163	CallExpression	u32 ( tab + 12 )		803643	1					
ANR	804164	Callee	u32		803643	0					
ANR	804165	Identifier	u32		803643	0					
ANR	804166	ArgumentList	tab + 12		803643	1					
ANR	804167	Argument	tab + 12		803643	0					
ANR	804168	AdditiveExpression	tab + 12		803643	0		+			
ANR	804169	Identifier	tab		803643	0					
ANR	804170	PrimaryExpression	12		803643	1					
ANR	804171	ExpressionStatement	"pfont -> data . gsub = gs_alloc_byte_array ( pfont -> memory , pfont -> data . gsub_size , 1 , ""gs_type42_font_init(GSUB)"" )"	216:12:7132:7296	803643	2	True				
ANR	804172	AssignmentExpression	"pfont -> data . gsub = gs_alloc_byte_array ( pfont -> memory , pfont -> data . gsub_size , 1 , ""gs_type42_font_init(GSUB)"" )"		803643	0		=			
ANR	804173	MemberAccess	pfont -> data . gsub		803643	0					
ANR	804174	PtrMemberAccess	pfont -> data		803643	0					
ANR	804175	Identifier	pfont		803643	0					
ANR	804176	Identifier	data		803643	1					
ANR	804177	Identifier	gsub		803643	1					
ANR	804178	CallExpression	"gs_alloc_byte_array ( pfont -> memory , pfont -> data . gsub_size , 1 , ""gs_type42_font_init(GSUB)"" )"		803643	1					
ANR	804179	Callee	gs_alloc_byte_array		803643	0					
ANR	804180	Identifier	gs_alloc_byte_array		803643	0					
ANR	804181	ArgumentList	pfont -> memory		803643	1					
ANR	804182	Argument	pfont -> memory		803643	0					
ANR	804183	PtrMemberAccess	pfont -> memory		803643	0					
ANR	804184	Identifier	pfont		803643	0					
ANR	804185	Identifier	memory		803643	1					
ANR	804186	Argument	pfont -> data . gsub_size		803643	1					
ANR	804187	MemberAccess	pfont -> data . gsub_size		803643	0					
ANR	804188	PtrMemberAccess	pfont -> data		803643	0					
ANR	804189	Identifier	pfont		803643	0					
ANR	804190	Identifier	data		803643	1					
ANR	804191	Identifier	gsub_size		803643	1					
ANR	804192	Argument	1		803643	2					
ANR	804193	PrimaryExpression	1		803643	0					
ANR	804194	Argument	"""gs_type42_font_init(GSUB)"""		803643	3					
ANR	804195	PrimaryExpression	"""gs_type42_font_init(GSUB)"""		803643	0					
ANR	804196	IfStatement	if ( pfont -> data . gsub == 0 )		803643	3					
ANR	804197	Condition	pfont -> data . gsub == 0	218:16:7314:7334	803643	0	True				
ANR	804198	EqualityExpression	pfont -> data . gsub == 0		803643	0		==			
ANR	804199	MemberAccess	pfont -> data . gsub		803643	0					
ANR	804200	PtrMemberAccess	pfont -> data		803643	0					
ANR	804201	Identifier	pfont		803643	0					
ANR	804202	Identifier	data		803643	1					
ANR	804203	Identifier	gsub		803643	1					
ANR	804204	PrimaryExpression	0		803643	1					
ANR	804205	ExpressionStatement	return_error ( gs_error_VMerror )	219:16:7353:7383	803643	1	True				
ANR	804206	CallExpression	return_error ( gs_error_VMerror )		803643	0					
ANR	804207	Callee	return_error		803643	0					
ANR	804208	Identifier	return_error		803643	0					
ANR	804209	ArgumentList	gs_error_VMerror		803643	1					
ANR	804210	Argument	gs_error_VMerror		803643	0					
ANR	804211	Identifier	gs_error_VMerror		803643	0					
ANR	804212	ExpressionStatement	"code = gs_font_notify_register ( ( gs_font * ) pfont , gs_gsub_release , ( void * ) pfont )"	221:12:7398:7478	803643	4	True				
ANR	804213	AssignmentExpression	"code = gs_font_notify_register ( ( gs_font * ) pfont , gs_gsub_release , ( void * ) pfont )"		803643	0		=			
ANR	804214	Identifier	code		803643	0					
ANR	804215	CallExpression	"gs_font_notify_register ( ( gs_font * ) pfont , gs_gsub_release , ( void * ) pfont )"		803643	1					
ANR	804216	Callee	gs_font_notify_register		803643	0					
ANR	804217	Identifier	gs_font_notify_register		803643	0					
ANR	804218	ArgumentList	( gs_font * ) pfont		803643	1					
ANR	804219	Argument	( gs_font * ) pfont		803643	0					
ANR	804220	CastExpression	( gs_font * ) pfont		803643	0					
ANR	804221	CastTarget	gs_font *		803643	0					
ANR	804222	Identifier	pfont		803643	1					
ANR	804223	Argument	gs_gsub_release		803643	1					
ANR	804224	Identifier	gs_gsub_release		803643	0					
ANR	804225	Argument	( void * ) pfont		803643	2					
ANR	804226	CastExpression	( void * ) pfont		803643	0					
ANR	804227	CastTarget	void *		803643	0					
ANR	804228	Identifier	pfont		803643	1					
ANR	804229	IfStatement	if ( code < 0 )		803643	5					
ANR	804230	Condition	code < 0	222:16:7496:7503	803643	0	True				
ANR	804231	RelationalExpression	code < 0		803643	0		<			
ANR	804232	Identifier	code		803643	0					
ANR	804233	PrimaryExpression	0		803643	1					
ANR	804234	ReturnStatement	return code ;	223:16:7522:7533	803643	1	True				
ANR	804235	Identifier	code		803643	0					
ANR	804236	ExpressionStatement	"code = gs_type42_read_data ( pfont , offset , pfont -> data . gsub_size , pfont -> data . gsub )"	225:12:7548:7630	803643	6	True				
ANR	804237	AssignmentExpression	"code = gs_type42_read_data ( pfont , offset , pfont -> data . gsub_size , pfont -> data . gsub )"		803643	0		=			
ANR	804238	Identifier	code		803643	0					
ANR	804239	CallExpression	"gs_type42_read_data ( pfont , offset , pfont -> data . gsub_size , pfont -> data . gsub )"		803643	1					
ANR	804240	Callee	gs_type42_read_data		803643	0					
ANR	804241	Identifier	gs_type42_read_data		803643	0					
ANR	804242	ArgumentList	pfont		803643	1					
ANR	804243	Argument	pfont		803643	0					
ANR	804244	Identifier	pfont		803643	0					
ANR	804245	Argument	offset		803643	1					
ANR	804246	Identifier	offset		803643	0					
ANR	804247	Argument	pfont -> data . gsub_size		803643	2					
ANR	804248	MemberAccess	pfont -> data . gsub_size		803643	0					
ANR	804249	PtrMemberAccess	pfont -> data		803643	0					
ANR	804250	Identifier	pfont		803643	0					
ANR	804251	Identifier	data		803643	1					
ANR	804252	Identifier	gsub_size		803643	1					
ANR	804253	Argument	pfont -> data . gsub		803643	3					
ANR	804254	MemberAccess	pfont -> data . gsub		803643	0					
ANR	804255	PtrMemberAccess	pfont -> data		803643	0					
ANR	804256	Identifier	pfont		803643	0					
ANR	804257	Identifier	data		803643	1					
ANR	804258	Identifier	gsub		803643	1					
ANR	804259	IfStatement	if ( code < 0 )		803643	7					
ANR	804260	Condition	code < 0	226:17:7649:7656	803643	0	True				
ANR	804261	RelationalExpression	code < 0		803643	0		<			
ANR	804262	Identifier	code		803643	0					
ANR	804263	PrimaryExpression	0		803643	1					
ANR	804264	ReturnStatement	return code ;	227:16:7676:7687	803643	1	True				
ANR	804265	Identifier	code		803643	0					
ANR	804266	ElseStatement	else		803643	0					
ANR	804267	IfStatement	"if ( ! memcmp ( tab , ""head"" , 4 ) )"		803643	0					
ANR	804268	Condition	"! memcmp ( tab , ""head"" , 4 )"	228:19:7708:7730	803643	0	True				
ANR	804269	UnaryOperationExpression	"! memcmp ( tab , ""head"" , 4 )"		803643	0					
ANR	804270	UnaryOperator	!		803643	0					
ANR	804271	CallExpression	"memcmp ( tab , ""head"" , 4 )"		803643	1					
ANR	804272	Callee	memcmp		803643	0					
ANR	804273	Identifier	memcmp		803643	0					
ANR	804274	ArgumentList	tab		803643	1					
ANR	804275	Argument	tab		803643	0					
ANR	804276	Identifier	tab		803643	0					
ANR	804277	Argument	"""head"""		803643	1					
ANR	804278	PrimaryExpression	"""head"""		803643	0					
ANR	804279	Argument	4		803643	2					
ANR	804280	PrimaryExpression	4		803643	0					
ANR	804281	CompoundStatement		80:12:3106:3119	803643	1					
ANR	804282	IdentifierDeclStatement	byte head [ 54 ] ;	229:12:7747:7760	803643	0	True				
ANR	804283	IdentifierDecl	head [ 54 ]		803643	0					
ANR	804284	IdentifierDeclType	byte [ 54 ]		803643	0					
ANR	804285	Identifier	head		803643	1					
ANR	804286	PrimaryExpression	54		803643	2					
ANR	804287	ExpressionStatement	"READ_SFNTS ( pfont , offset , 54 , head )"	231:12:7775:7810	803643	1	True				
ANR	804288	CallExpression	"READ_SFNTS ( pfont , offset , 54 , head )"		803643	0					
ANR	804289	Callee	READ_SFNTS		803643	0					
ANR	804290	Identifier	READ_SFNTS		803643	0					
ANR	804291	ArgumentList	pfont		803643	1					
ANR	804292	Argument	pfont		803643	0					
ANR	804293	Identifier	pfont		803643	0					
ANR	804294	Argument	offset		803643	1					
ANR	804295	Identifier	offset		803643	0					
ANR	804296	Argument	54		803643	2					
ANR	804297	PrimaryExpression	54		803643	0					
ANR	804298	Argument	head		803643	3					
ANR	804299	Identifier	head		803643	0					
ANR	804300	ExpressionStatement	pfont -> data . unitsPerEm = U16 ( head + 18 )	232:12:7824:7863	803643	2	True				
ANR	804301	AssignmentExpression	pfont -> data . unitsPerEm = U16 ( head + 18 )		803643	0		=			
ANR	804302	MemberAccess	pfont -> data . unitsPerEm		803643	0					
ANR	804303	PtrMemberAccess	pfont -> data		803643	0					
ANR	804304	Identifier	pfont		803643	0					
ANR	804305	Identifier	data		803643	1					
ANR	804306	Identifier	unitsPerEm		803643	1					
ANR	804307	CallExpression	U16 ( head + 18 )		803643	1					
ANR	804308	Callee	U16		803643	0					
ANR	804309	Identifier	U16		803643	0					
ANR	804310	ArgumentList	head + 18		803643	1					
ANR	804311	Argument	head + 18		803643	0					
ANR	804312	AdditiveExpression	head + 18		803643	0		+			
ANR	804313	Identifier	head		803643	0					
ANR	804314	PrimaryExpression	18		803643	1					
ANR	804315	ExpressionStatement	"memcpy ( head_box , head + 36 , 8 )"	233:12:7877:7907	803643	3	True				
ANR	804316	CallExpression	"memcpy ( head_box , head + 36 , 8 )"		803643	0					
ANR	804317	Callee	memcpy		803643	0					
ANR	804318	Identifier	memcpy		803643	0					
ANR	804319	ArgumentList	head_box		803643	1					
ANR	804320	Argument	head_box		803643	0					
ANR	804321	Identifier	head_box		803643	0					
ANR	804322	Argument	head + 36		803643	1					
ANR	804323	AdditiveExpression	head + 36		803643	0		+			
ANR	804324	Identifier	head		803643	0					
ANR	804325	PrimaryExpression	36		803643	1					
ANR	804326	Argument	8		803643	2					
ANR	804327	PrimaryExpression	8		803643	0					
ANR	804328	ExpressionStatement	pfont -> data . indexToLocFormat = U16 ( head + 50 )	234:12:7921:7966	803643	4	True				
ANR	804329	AssignmentExpression	pfont -> data . indexToLocFormat = U16 ( head + 50 )		803643	0		=			
ANR	804330	MemberAccess	pfont -> data . indexToLocFormat		803643	0					
ANR	804331	PtrMemberAccess	pfont -> data		803643	0					
ANR	804332	Identifier	pfont		803643	0					
ANR	804333	Identifier	data		803643	1					
ANR	804334	Identifier	indexToLocFormat		803643	1					
ANR	804335	CallExpression	U16 ( head + 50 )		803643	1					
ANR	804336	Callee	U16		803643	0					
ANR	804337	Identifier	U16		803643	0					
ANR	804338	ArgumentList	head + 50		803643	1					
ANR	804339	Argument	head + 50		803643	0					
ANR	804340	AdditiveExpression	head + 50		803643	0		+			
ANR	804341	Identifier	head		803643	0					
ANR	804342	PrimaryExpression	50		803643	1					
ANR	804343	ElseStatement	else		803643	0					
ANR	804344	IfStatement	"if ( ! memcmp ( tab , ""hhea"" , 4 ) )"		803643	0					
ANR	804345	Condition	"! memcmp ( tab , ""hhea"" , 4 )"	235:19:7987:8009	803643	0	True				
ANR	804346	UnaryOperationExpression	"! memcmp ( tab , ""hhea"" , 4 )"		803643	0					
ANR	804347	UnaryOperator	!		803643	0					
ANR	804348	CallExpression	"memcmp ( tab , ""hhea"" , 4 )"		803643	1					
ANR	804349	Callee	memcmp		803643	0					
ANR	804350	Identifier	memcmp		803643	0					
ANR	804351	ArgumentList	tab		803643	1					
ANR	804352	Argument	tab		803643	0					
ANR	804353	Identifier	tab		803643	0					
ANR	804354	Argument	"""hhea"""		803643	1					
ANR	804355	PrimaryExpression	"""hhea"""		803643	0					
ANR	804356	Argument	4		803643	2					
ANR	804357	PrimaryExpression	4		803643	0					
ANR	804358	CompoundStatement		87:12:3385:3398	803643	1					
ANR	804359	IdentifierDeclStatement	byte hhea [ 36 ] ;	236:12:8026:8039	803643	0	True				
ANR	804360	IdentifierDecl	hhea [ 36 ]		803643	0					
ANR	804361	IdentifierDeclType	byte [ 36 ]		803643	0					
ANR	804362	Identifier	hhea		803643	1					
ANR	804363	PrimaryExpression	36		803643	2					
ANR	804364	ExpressionStatement	"READ_SFNTS ( pfont , offset , 36 , hhea )"	238:12:8054:8089	803643	1	True				
ANR	804365	CallExpression	"READ_SFNTS ( pfont , offset , 36 , hhea )"		803643	0					
ANR	804366	Callee	READ_SFNTS		803643	0					
ANR	804367	Identifier	READ_SFNTS		803643	0					
ANR	804368	ArgumentList	pfont		803643	1					
ANR	804369	Argument	pfont		803643	0					
ANR	804370	Identifier	pfont		803643	0					
ANR	804371	Argument	offset		803643	1					
ANR	804372	Identifier	offset		803643	0					
ANR	804373	Argument	36		803643	2					
ANR	804374	PrimaryExpression	36		803643	0					
ANR	804375	Argument	hhea		803643	3					
ANR	804376	Identifier	hhea		803643	0					
ANR	804377	ExpressionStatement	pfont -> data . metrics [ 0 ] . numMetrics = U16 ( hhea + 34 )	239:12:8103:8153	803643	2	True				
ANR	804378	AssignmentExpression	pfont -> data . metrics [ 0 ] . numMetrics = U16 ( hhea + 34 )		803643	0		=			
ANR	804379	MemberAccess	pfont -> data . metrics [ 0 ] . numMetrics		803643	0					
ANR	804380	ArrayIndexing	pfont -> data . metrics [ 0 ]		803643	0					
ANR	804381	MemberAccess	pfont -> data . metrics		803643	0					
ANR	804382	PtrMemberAccess	pfont -> data		803643	0					
ANR	804383	Identifier	pfont		803643	0					
ANR	804384	Identifier	data		803643	1					
ANR	804385	Identifier	metrics		803643	1					
ANR	804386	PrimaryExpression	0		803643	1					
ANR	804387	Identifier	numMetrics		803643	1					
ANR	804388	CallExpression	U16 ( hhea + 34 )		803643	1					
ANR	804389	Callee	U16		803643	0					
ANR	804390	Identifier	U16		803643	0					
ANR	804391	ArgumentList	hhea + 34		803643	1					
ANR	804392	Argument	hhea + 34		803643	0					
ANR	804393	AdditiveExpression	hhea + 34		803643	0		+			
ANR	804394	Identifier	hhea		803643	0					
ANR	804395	PrimaryExpression	34		803643	1					
ANR	804396	ElseStatement	else		803643	0					
ANR	804397	IfStatement	"if ( ! memcmp ( tab , ""hmtx"" , 4 ) )"		803643	0					
ANR	804398	Condition	"! memcmp ( tab , ""hmtx"" , 4 )"	240:19:8174:8196	803643	0	True				
ANR	804399	UnaryOperationExpression	"! memcmp ( tab , ""hmtx"" , 4 )"		803643	0					
ANR	804400	UnaryOperator	!		803643	0					
ANR	804401	CallExpression	"memcmp ( tab , ""hmtx"" , 4 )"		803643	1					
ANR	804402	Callee	memcmp		803643	0					
ANR	804403	Identifier	memcmp		803643	0					
ANR	804404	ArgumentList	tab		803643	1					
ANR	804405	Argument	tab		803643	0					
ANR	804406	Identifier	tab		803643	0					
ANR	804407	Argument	"""hmtx"""		803643	1					
ANR	804408	PrimaryExpression	"""hmtx"""		803643	0					
ANR	804409	Argument	4		803643	2					
ANR	804410	PrimaryExpression	4		803643	0					
ANR	804411	CompoundStatement		91:44:3558:3558	803643	1					
ANR	804412	ExpressionStatement	pfont -> data . metrics [ 0 ] . offset = offset	241:12:8213:8251	803643	0	True				
ANR	804413	AssignmentExpression	pfont -> data . metrics [ 0 ] . offset = offset		803643	0		=			
ANR	804414	MemberAccess	pfont -> data . metrics [ 0 ] . offset		803643	0					
ANR	804415	ArrayIndexing	pfont -> data . metrics [ 0 ]		803643	0					
ANR	804416	MemberAccess	pfont -> data . metrics		803643	0					
ANR	804417	PtrMemberAccess	pfont -> data		803643	0					
ANR	804418	Identifier	pfont		803643	0					
ANR	804419	Identifier	data		803643	1					
ANR	804420	Identifier	metrics		803643	1					
ANR	804421	PrimaryExpression	0		803643	1					
ANR	804422	Identifier	offset		803643	1					
ANR	804423	Identifier	offset		803643	1					
ANR	804424	ExpressionStatement	pfont -> data . metrics [ 0 ] . length = ( uint ) u32 ( tab + 12 )	242:12:8265:8316	803643	1	True				
ANR	804425	AssignmentExpression	pfont -> data . metrics [ 0 ] . length = ( uint ) u32 ( tab + 12 )		803643	0		=			
ANR	804426	MemberAccess	pfont -> data . metrics [ 0 ] . length		803643	0					
ANR	804427	ArrayIndexing	pfont -> data . metrics [ 0 ]		803643	0					
ANR	804428	MemberAccess	pfont -> data . metrics		803643	0					
ANR	804429	PtrMemberAccess	pfont -> data		803643	0					
ANR	804430	Identifier	pfont		803643	0					
ANR	804431	Identifier	data		803643	1					
ANR	804432	Identifier	metrics		803643	1					
ANR	804433	PrimaryExpression	0		803643	1					
ANR	804434	Identifier	length		803643	1					
ANR	804435	CastExpression	( uint ) u32 ( tab + 12 )		803643	1					
ANR	804436	CastTarget	uint		803643	0					
ANR	804437	CallExpression	u32 ( tab + 12 )		803643	1					
ANR	804438	Callee	u32		803643	0					
ANR	804439	Identifier	u32		803643	0					
ANR	804440	ArgumentList	tab + 12		803643	1					
ANR	804441	Argument	tab + 12		803643	0					
ANR	804442	AdditiveExpression	tab + 12		803643	0		+			
ANR	804443	Identifier	tab		803643	0					
ANR	804444	PrimaryExpression	12		803643	1					
ANR	804445	ElseStatement	else		803643	0					
ANR	804446	IfStatement	"if ( ! memcmp ( tab , ""loca"" , 4 ) )"		803643	0					
ANR	804447	Condition	"! memcmp ( tab , ""loca"" , 4 )"	243:19:8337:8359	803643	0	True				
ANR	804448	UnaryOperationExpression	"! memcmp ( tab , ""loca"" , 4 )"		803643	0					
ANR	804449	UnaryOperator	!		803643	0					
ANR	804450	CallExpression	"memcmp ( tab , ""loca"" , 4 )"		803643	1					
ANR	804451	Callee	memcmp		803643	0					
ANR	804452	Identifier	memcmp		803643	0					
ANR	804453	ArgumentList	tab		803643	1					
ANR	804454	Argument	tab		803643	0					
ANR	804455	Identifier	tab		803643	0					
ANR	804456	Argument	"""loca"""		803643	1					
ANR	804457	PrimaryExpression	"""loca"""		803643	0					
ANR	804458	Argument	4		803643	2					
ANR	804459	PrimaryExpression	4		803643	0					
ANR	804460	CompoundStatement		94:44:3721:3721	803643	1					
ANR	804461	ExpressionStatement	pfont -> data . loca = offset	244:12:8376:8401	803643	0	True				
ANR	804462	AssignmentExpression	pfont -> data . loca = offset		803643	0		=			
ANR	804463	MemberAccess	pfont -> data . loca		803643	0					
ANR	804464	PtrMemberAccess	pfont -> data		803643	0					
ANR	804465	Identifier	pfont		803643	0					
ANR	804466	Identifier	data		803643	1					
ANR	804467	Identifier	loca		803643	1					
ANR	804468	Identifier	offset		803643	1					
ANR	804469	ExpressionStatement	loca_size = u32 ( tab + 12 )	245:12:8415:8440	803643	1	True				
ANR	804470	AssignmentExpression	loca_size = u32 ( tab + 12 )		803643	0		=			
ANR	804471	Identifier	loca_size		803643	0					
ANR	804472	CallExpression	u32 ( tab + 12 )		803643	1					
ANR	804473	Callee	u32		803643	0					
ANR	804474	Identifier	u32		803643	0					
ANR	804475	ArgumentList	tab + 12		803643	1					
ANR	804476	Argument	tab + 12		803643	0					
ANR	804477	AdditiveExpression	tab + 12		803643	0		+			
ANR	804478	Identifier	tab		803643	0					
ANR	804479	PrimaryExpression	12		803643	1					
ANR	804480	ElseStatement	else		803643	0					
ANR	804481	IfStatement	"if ( ! memcmp ( tab , ""maxp"" , 4 ) )"		803643	0					
ANR	804482	Condition	"! memcmp ( tab , ""maxp"" , 4 )"	246:19:8461:8483	803643	0	True				
ANR	804483	UnaryOperationExpression	"! memcmp ( tab , ""maxp"" , 4 )"		803643	0					
ANR	804484	UnaryOperator	!		803643	0					
ANR	804485	CallExpression	"memcmp ( tab , ""maxp"" , 4 )"		803643	1					
ANR	804486	Callee	memcmp		803643	0					
ANR	804487	Identifier	memcmp		803643	0					
ANR	804488	ArgumentList	tab		803643	1					
ANR	804489	Argument	tab		803643	0					
ANR	804490	Identifier	tab		803643	0					
ANR	804491	Argument	"""maxp"""		803643	1					
ANR	804492	PrimaryExpression	"""maxp"""		803643	0					
ANR	804493	Argument	4		803643	2					
ANR	804494	PrimaryExpression	4		803643	0					
ANR	804495	CompoundStatement		98:12:3859:3872	803643	1					
ANR	804496	IdentifierDeclStatement	byte maxp [ 30 ] ;	247:12:8500:8513	803643	0	True				
ANR	804497	IdentifierDecl	maxp [ 30 ]		803643	0					
ANR	804498	IdentifierDeclType	byte [ 30 ]		803643	0					
ANR	804499	Identifier	maxp		803643	1					
ANR	804500	PrimaryExpression	30		803643	2					
ANR	804501	ExpressionStatement	"READ_SFNTS ( pfont , offset , 30 , maxp )"	249:12:8528:8563	803643	1	True				
ANR	804502	CallExpression	"READ_SFNTS ( pfont , offset , 30 , maxp )"		803643	0					
ANR	804503	Callee	READ_SFNTS		803643	0					
ANR	804504	Identifier	READ_SFNTS		803643	0					
ANR	804505	ArgumentList	pfont		803643	1					
ANR	804506	Argument	pfont		803643	0					
ANR	804507	Identifier	pfont		803643	0					
ANR	804508	Argument	offset		803643	1					
ANR	804509	Identifier	offset		803643	0					
ANR	804510	Argument	30		803643	2					
ANR	804511	PrimaryExpression	30		803643	0					
ANR	804512	Argument	maxp		803643	3					
ANR	804513	Identifier	maxp		803643	0					
ANR	804514	ExpressionStatement	pfont -> data . trueNumGlyphs = U16 ( maxp + 4 )	250:12:8577:8618	803643	2	True				
ANR	804515	AssignmentExpression	pfont -> data . trueNumGlyphs = U16 ( maxp + 4 )		803643	0		=			
ANR	804516	MemberAccess	pfont -> data . trueNumGlyphs		803643	0					
ANR	804517	PtrMemberAccess	pfont -> data		803643	0					
ANR	804518	Identifier	pfont		803643	0					
ANR	804519	Identifier	data		803643	1					
ANR	804520	Identifier	trueNumGlyphs		803643	1					
ANR	804521	CallExpression	U16 ( maxp + 4 )		803643	1					
ANR	804522	Callee	U16		803643	0					
ANR	804523	Identifier	U16		803643	0					
ANR	804524	ArgumentList	maxp + 4		803643	1					
ANR	804525	Argument	maxp + 4		803643	0					
ANR	804526	AdditiveExpression	maxp + 4		803643	0		+			
ANR	804527	Identifier	maxp		803643	0					
ANR	804528	PrimaryExpression	4		803643	1					
ANR	804529	ExpressionStatement	pfont -> data . maxPoints = U16 ( maxp + 6 )	251:12:8632:8669	803643	3	True				
ANR	804530	AssignmentExpression	pfont -> data . maxPoints = U16 ( maxp + 6 )		803643	0		=			
ANR	804531	MemberAccess	pfont -> data . maxPoints		803643	0					
ANR	804532	PtrMemberAccess	pfont -> data		803643	0					
ANR	804533	Identifier	pfont		803643	0					
ANR	804534	Identifier	data		803643	1					
ANR	804535	Identifier	maxPoints		803643	1					
ANR	804536	CallExpression	U16 ( maxp + 6 )		803643	1					
ANR	804537	Callee	U16		803643	0					
ANR	804538	Identifier	U16		803643	0					
ANR	804539	ArgumentList	maxp + 6		803643	1					
ANR	804540	Argument	maxp + 6		803643	0					
ANR	804541	AdditiveExpression	maxp + 6		803643	0		+			
ANR	804542	Identifier	maxp		803643	0					
ANR	804543	PrimaryExpression	6		803643	1					
ANR	804544	ExpressionStatement	pfont -> data . maxContours = U16 ( maxp + 8 )	252:12:8683:8722	803643	4	True				
ANR	804545	AssignmentExpression	pfont -> data . maxContours = U16 ( maxp + 8 )		803643	0		=			
ANR	804546	MemberAccess	pfont -> data . maxContours		803643	0					
ANR	804547	PtrMemberAccess	pfont -> data		803643	0					
ANR	804548	Identifier	pfont		803643	0					
ANR	804549	Identifier	data		803643	1					
ANR	804550	Identifier	maxContours		803643	1					
ANR	804551	CallExpression	U16 ( maxp + 8 )		803643	1					
ANR	804552	Callee	U16		803643	0					
ANR	804553	Identifier	U16		803643	0					
ANR	804554	ArgumentList	maxp + 8		803643	1					
ANR	804555	Argument	maxp + 8		803643	0					
ANR	804556	AdditiveExpression	maxp + 8		803643	0		+			
ANR	804557	Identifier	maxp		803643	0					
ANR	804558	PrimaryExpression	8		803643	1					
ANR	804559	ExpressionStatement	pfont -> data . maxCPoints = U16 ( maxp + 10 )	253:12:8736:8775	803643	5	True				
ANR	804560	AssignmentExpression	pfont -> data . maxCPoints = U16 ( maxp + 10 )		803643	0		=			
ANR	804561	MemberAccess	pfont -> data . maxCPoints		803643	0					
ANR	804562	PtrMemberAccess	pfont -> data		803643	0					
ANR	804563	Identifier	pfont		803643	0					
ANR	804564	Identifier	data		803643	1					
ANR	804565	Identifier	maxCPoints		803643	1					
ANR	804566	CallExpression	U16 ( maxp + 10 )		803643	1					
ANR	804567	Callee	U16		803643	0					
ANR	804568	Identifier	U16		803643	0					
ANR	804569	ArgumentList	maxp + 10		803643	1					
ANR	804570	Argument	maxp + 10		803643	0					
ANR	804571	AdditiveExpression	maxp + 10		803643	0		+			
ANR	804572	Identifier	maxp		803643	0					
ANR	804573	PrimaryExpression	10		803643	1					
ANR	804574	ExpressionStatement	pfont -> data . maxCContours = U16 ( maxp + 12 )	254:12:8789:8830	803643	6	True				
ANR	804575	AssignmentExpression	pfont -> data . maxCContours = U16 ( maxp + 12 )		803643	0		=			
ANR	804576	MemberAccess	pfont -> data . maxCContours		803643	0					
ANR	804577	PtrMemberAccess	pfont -> data		803643	0					
ANR	804578	Identifier	pfont		803643	0					
ANR	804579	Identifier	data		803643	1					
ANR	804580	Identifier	maxCContours		803643	1					
ANR	804581	CallExpression	U16 ( maxp + 12 )		803643	1					
ANR	804582	Callee	U16		803643	0					
ANR	804583	Identifier	U16		803643	0					
ANR	804584	ArgumentList	maxp + 12		803643	1					
ANR	804585	Argument	maxp + 12		803643	0					
ANR	804586	AdditiveExpression	maxp + 12		803643	0		+			
ANR	804587	Identifier	maxp		803643	0					
ANR	804588	PrimaryExpression	12		803643	1					
ANR	804589	ElseStatement	else		803643	0					
ANR	804590	IfStatement	"if ( ! memcmp ( tab , ""name"" , 4 ) )"		803643	0					
ANR	804591	Condition	"! memcmp ( tab , ""name"" , 4 )"	255:19:8851:8873	803643	0	True				
ANR	804592	UnaryOperationExpression	"! memcmp ( tab , ""name"" , 4 )"		803643	0					
ANR	804593	UnaryOperator	!		803643	0					
ANR	804594	CallExpression	"memcmp ( tab , ""name"" , 4 )"		803643	1					
ANR	804595	Callee	memcmp		803643	0					
ANR	804596	Identifier	memcmp		803643	0					
ANR	804597	ArgumentList	tab		803643	1					
ANR	804598	Argument	tab		803643	0					
ANR	804599	Identifier	tab		803643	0					
ANR	804600	Argument	"""name"""		803643	1					
ANR	804601	PrimaryExpression	"""name"""		803643	0					
ANR	804602	Argument	4		803643	2					
ANR	804603	PrimaryExpression	4		803643	0					
ANR	804604	CompoundStatement		106:44:4235:4235	803643	1					
ANR	804605	ExpressionStatement	pfont -> data . name_offset = offset	256:12:8890:8922	803643	0	True				
ANR	804606	AssignmentExpression	pfont -> data . name_offset = offset		803643	0		=			
ANR	804607	MemberAccess	pfont -> data . name_offset		803643	0					
ANR	804608	PtrMemberAccess	pfont -> data		803643	0					
ANR	804609	Identifier	pfont		803643	0					
ANR	804610	Identifier	data		803643	1					
ANR	804611	Identifier	name_offset		803643	1					
ANR	804612	Identifier	offset		803643	1					
ANR	804613	ElseStatement	else		803643	0					
ANR	804614	IfStatement	"if ( ! memcmp ( tab , ""vhea"" , 4 ) )"		803643	0					
ANR	804615	Condition	"! memcmp ( tab , ""vhea"" , 4 )"	257:19:8943:8965	803643	0	True				
ANR	804616	UnaryOperationExpression	"! memcmp ( tab , ""vhea"" , 4 )"		803643	0					
ANR	804617	UnaryOperator	!		803643	0					
ANR	804618	CallExpression	"memcmp ( tab , ""vhea"" , 4 )"		803643	1					
ANR	804619	Callee	memcmp		803643	0					
ANR	804620	Identifier	memcmp		803643	0					
ANR	804621	ArgumentList	tab		803643	1					
ANR	804622	Argument	tab		803643	0					
ANR	804623	Identifier	tab		803643	0					
ANR	804624	Argument	"""vhea"""		803643	1					
ANR	804625	PrimaryExpression	"""vhea"""		803643	0					
ANR	804626	Argument	4		803643	2					
ANR	804627	PrimaryExpression	4		803643	0					
ANR	804628	CompoundStatement		109:12:4341:4354	803643	1					
ANR	804629	IdentifierDeclStatement	byte vhea [ 36 ] ;	258:12:8982:8995	803643	0	True				
ANR	804630	IdentifierDecl	vhea [ 36 ]		803643	0					
ANR	804631	IdentifierDeclType	byte [ 36 ]		803643	0					
ANR	804632	Identifier	vhea		803643	1					
ANR	804633	PrimaryExpression	36		803643	2					
ANR	804634	ExpressionStatement	"READ_SFNTS ( pfont , offset , 36 , vhea )"	260:12:9010:9045	803643	1	True				
ANR	804635	CallExpression	"READ_SFNTS ( pfont , offset , 36 , vhea )"		803643	0					
ANR	804636	Callee	READ_SFNTS		803643	0					
ANR	804637	Identifier	READ_SFNTS		803643	0					
ANR	804638	ArgumentList	pfont		803643	1					
ANR	804639	Argument	pfont		803643	0					
ANR	804640	Identifier	pfont		803643	0					
ANR	804641	Argument	offset		803643	1					
ANR	804642	Identifier	offset		803643	0					
ANR	804643	Argument	36		803643	2					
ANR	804644	PrimaryExpression	36		803643	0					
ANR	804645	Argument	vhea		803643	3					
ANR	804646	Identifier	vhea		803643	0					
ANR	804647	ExpressionStatement	pfont -> data . metrics [ 1 ] . numMetrics = U16 ( vhea + 34 )	261:12:9059:9109	803643	2	True				
ANR	804648	AssignmentExpression	pfont -> data . metrics [ 1 ] . numMetrics = U16 ( vhea + 34 )		803643	0		=			
ANR	804649	MemberAccess	pfont -> data . metrics [ 1 ] . numMetrics		803643	0					
ANR	804650	ArrayIndexing	pfont -> data . metrics [ 1 ]		803643	0					
ANR	804651	MemberAccess	pfont -> data . metrics		803643	0					
ANR	804652	PtrMemberAccess	pfont -> data		803643	0					
ANR	804653	Identifier	pfont		803643	0					
ANR	804654	Identifier	data		803643	1					
ANR	804655	Identifier	metrics		803643	1					
ANR	804656	PrimaryExpression	1		803643	1					
ANR	804657	Identifier	numMetrics		803643	1					
ANR	804658	CallExpression	U16 ( vhea + 34 )		803643	1					
ANR	804659	Callee	U16		803643	0					
ANR	804660	Identifier	U16		803643	0					
ANR	804661	ArgumentList	vhea + 34		803643	1					
ANR	804662	Argument	vhea + 34		803643	0					
ANR	804663	AdditiveExpression	vhea + 34		803643	0		+			
ANR	804664	Identifier	vhea		803643	0					
ANR	804665	PrimaryExpression	34		803643	1					
ANR	804666	ElseStatement	else		803643	0					
ANR	804667	IfStatement	"if ( ! memcmp ( tab , ""vmtx"" , 4 ) )"		803643	0					
ANR	804668	Condition	"! memcmp ( tab , ""vmtx"" , 4 )"	262:19:9130:9152	803643	0	True				
ANR	804669	UnaryOperationExpression	"! memcmp ( tab , ""vmtx"" , 4 )"		803643	0					
ANR	804670	UnaryOperator	!		803643	0					
ANR	804671	CallExpression	"memcmp ( tab , ""vmtx"" , 4 )"		803643	1					
ANR	804672	Callee	memcmp		803643	0					
ANR	804673	Identifier	memcmp		803643	0					
ANR	804674	ArgumentList	tab		803643	1					
ANR	804675	Argument	tab		803643	0					
ANR	804676	Identifier	tab		803643	0					
ANR	804677	Argument	"""vmtx"""		803643	1					
ANR	804678	PrimaryExpression	"""vmtx"""		803643	0					
ANR	804679	Argument	4		803643	2					
ANR	804680	PrimaryExpression	4		803643	0					
ANR	804681	CompoundStatement		113:44:4514:4514	803643	1					
ANR	804682	ExpressionStatement	pfont -> data . metrics [ 1 ] . offset = offset	263:12:9169:9207	803643	0	True				
ANR	804683	AssignmentExpression	pfont -> data . metrics [ 1 ] . offset = offset		803643	0		=			
ANR	804684	MemberAccess	pfont -> data . metrics [ 1 ] . offset		803643	0					
ANR	804685	ArrayIndexing	pfont -> data . metrics [ 1 ]		803643	0					
ANR	804686	MemberAccess	pfont -> data . metrics		803643	0					
ANR	804687	PtrMemberAccess	pfont -> data		803643	0					
ANR	804688	Identifier	pfont		803643	0					
ANR	804689	Identifier	data		803643	1					
ANR	804690	Identifier	metrics		803643	1					
ANR	804691	PrimaryExpression	1		803643	1					
ANR	804692	Identifier	offset		803643	1					
ANR	804693	Identifier	offset		803643	1					
ANR	804694	ExpressionStatement	pfont -> data . metrics [ 1 ] . length = ( uint ) u32 ( tab + 12 )	264:12:9221:9272	803643	1	True				
ANR	804695	AssignmentExpression	pfont -> data . metrics [ 1 ] . length = ( uint ) u32 ( tab + 12 )		803643	0		=			
ANR	804696	MemberAccess	pfont -> data . metrics [ 1 ] . length		803643	0					
ANR	804697	ArrayIndexing	pfont -> data . metrics [ 1 ]		803643	0					
ANR	804698	MemberAccess	pfont -> data . metrics		803643	0					
ANR	804699	PtrMemberAccess	pfont -> data		803643	0					
ANR	804700	Identifier	pfont		803643	0					
ANR	804701	Identifier	data		803643	1					
ANR	804702	Identifier	metrics		803643	1					
ANR	804703	PrimaryExpression	1		803643	1					
ANR	804704	Identifier	length		803643	1					
ANR	804705	CastExpression	( uint ) u32 ( tab + 12 )		803643	1					
ANR	804706	CastTarget	uint		803643	0					
ANR	804707	CallExpression	u32 ( tab + 12 )		803643	1					
ANR	804708	Callee	u32		803643	0					
ANR	804709	Identifier	u32		803643	0					
ANR	804710	ArgumentList	tab + 12		803643	1					
ANR	804711	Argument	tab + 12		803643	0					
ANR	804712	AdditiveExpression	tab + 12		803643	0		+			
ANR	804713	Identifier	tab		803643	0					
ANR	804714	PrimaryExpression	12		803643	1					
ANR	804715	ElseStatement	else		803643	0					
ANR	804716	IfStatement	"if ( ! memcmp ( tab , ""OS/2"" , 4 ) )"		803643	0					
ANR	804717	Condition	"! memcmp ( tab , ""OS/2"" , 4 )"	265:19:9293:9315	803643	0	True				
ANR	804718	UnaryOperationExpression	"! memcmp ( tab , ""OS/2"" , 4 )"		803643	0					
ANR	804719	UnaryOperator	!		803643	0					
ANR	804720	CallExpression	"memcmp ( tab , ""OS/2"" , 4 )"		803643	1					
ANR	804721	Callee	memcmp		803643	0					
ANR	804722	Identifier	memcmp		803643	0					
ANR	804723	ArgumentList	tab		803643	1					
ANR	804724	Argument	tab		803643	0					
ANR	804725	Identifier	tab		803643	0					
ANR	804726	Argument	"""OS/2"""		803643	1					
ANR	804727	PrimaryExpression	"""OS/2"""		803643	0					
ANR	804728	Argument	4		803643	2					
ANR	804729	PrimaryExpression	4		803643	0					
ANR	804730	CompoundStatement		116:44:4677:4677	803643	1					
ANR	804731	ExpressionStatement	pfont -> data . os2_offset = offset	266:12:9332:9363	803643	0	True				
ANR	804732	AssignmentExpression	pfont -> data . os2_offset = offset		803643	0		=			
ANR	804733	MemberAccess	pfont -> data . os2_offset		803643	0					
ANR	804734	PtrMemberAccess	pfont -> data		803643	0					
ANR	804735	Identifier	pfont		803643	0					
ANR	804736	Identifier	data		803643	1					
ANR	804737	Identifier	os2_offset		803643	1					
ANR	804738	Identifier	offset		803643	1					
ANR	804739	ExpressionStatement	loca_size >>= pfont -> data . indexToLocFormat + 1	269:4:9385:9431	803643	25	True				
ANR	804740	AssignmentExpression	loca_size >>= pfont -> data . indexToLocFormat + 1		803643	0		>>=			
ANR	804741	Identifier	loca_size		803643	0					
ANR	804742	AdditiveExpression	pfont -> data . indexToLocFormat + 1		803643	1		+			
ANR	804743	MemberAccess	pfont -> data . indexToLocFormat		803643	0					
ANR	804744	PtrMemberAccess	pfont -> data		803643	0					
ANR	804745	Identifier	pfont		803643	0					
ANR	804746	Identifier	data		803643	1					
ANR	804747	Identifier	indexToLocFormat		803643	1					
ANR	804748	PrimaryExpression	1		803643	1					
ANR	804749	ExpressionStatement	pfont -> data . numGlyphs = ( loca_size == 0 ? 0 : loca_size - 1 )	270:4:9437:9497	803643	26	True				
ANR	804750	AssignmentExpression	pfont -> data . numGlyphs = ( loca_size == 0 ? 0 : loca_size - 1 )		803643	0		=			
ANR	804751	MemberAccess	pfont -> data . numGlyphs		803643	0					
ANR	804752	PtrMemberAccess	pfont -> data		803643	0					
ANR	804753	Identifier	pfont		803643	0					
ANR	804754	Identifier	data		803643	1					
ANR	804755	Identifier	numGlyphs		803643	1					
ANR	804756	ConditionalExpression	loca_size == 0 ? 0 : loca_size - 1		803643	1					
ANR	804757	Condition	loca_size == 0		803643	0					
ANR	804758	EqualityExpression	loca_size == 0		803643	0		==			
ANR	804759	Identifier	loca_size		803643	0					
ANR	804760	PrimaryExpression	0		803643	1					
ANR	804761	PrimaryExpression	0		803643	1					
ANR	804762	AdditiveExpression	loca_size - 1		803643	2		-			
ANR	804763	Identifier	loca_size		803643	0					
ANR	804764	PrimaryExpression	1		803643	1					
ANR	804765	IfStatement	if ( pfont -> data . numGlyphs > pfont -> data . trueNumGlyphs )		803643	27					
ANR	804766	Condition	pfont -> data . numGlyphs > pfont -> data . trueNumGlyphs	271:8:9507:9555	803643	0	True				
ANR	804767	RelationalExpression	pfont -> data . numGlyphs > pfont -> data . trueNumGlyphs		803643	0		>			
ANR	804768	MemberAccess	pfont -> data . numGlyphs		803643	0					
ANR	804769	PtrMemberAccess	pfont -> data		803643	0					
ANR	804770	Identifier	pfont		803643	0					
ANR	804771	Identifier	data		803643	1					
ANR	804772	Identifier	numGlyphs		803643	1					
ANR	804773	MemberAccess	pfont -> data . trueNumGlyphs		803643	1					
ANR	804774	PtrMemberAccess	pfont -> data		803643	0					
ANR	804775	Identifier	pfont		803643	0					
ANR	804776	Identifier	data		803643	1					
ANR	804777	Identifier	trueNumGlyphs		803643	1					
ANR	804778	CompoundStatement		124:8:4996:5026	803643	1					
ANR	804779	IdentifierDeclStatement	char buf [ gs_font_name_max + 2 ] ;	273:8:9637:9667	803643	0	True				
ANR	804780	IdentifierDecl	buf [ gs_font_name_max + 2 ]		803643	0					
ANR	804781	IdentifierDeclType	char [ gs_font_name_max + 2 ]		803643	0					
ANR	804782	Identifier	buf		803643	1					
ANR	804783	AdditiveExpression	gs_font_name_max + 2		803643	2		+			
ANR	804784	Identifier	gs_font_name_max		803643	0					
ANR	804785	PrimaryExpression	2		803643	1					
ANR	804786	IfStatement	if ( pfont -> key_name . size )		803643	1					
ANR	804787	Condition	pfont -> key_name . size	275:12:9682:9701	803643	0	True				
ANR	804788	MemberAccess	pfont -> key_name . size		803643	0					
ANR	804789	PtrMemberAccess	pfont -> key_name		803643	0					
ANR	804790	Identifier	pfont		803643	0					
ANR	804791	Identifier	key_name		803643	1					
ANR	804792	Identifier	size		803643	1					
ANR	804793	CompoundStatement		127:12:5077:5127	803643	1					
ANR	804794	IdentifierDeclStatement	"int l = min ( sizeof ( buf ) - 1 , pfont -> key_name . size ) ;"	276:12:9718:9768	803643	0	True				
ANR	804795	IdentifierDecl	"l = min ( sizeof ( buf ) - 1 , pfont -> key_name . size )"		803643	0					
ANR	804796	IdentifierDeclType	int		803643	0					
ANR	804797	Identifier	l		803643	1					
ANR	804798	AssignmentExpression	"l = min ( sizeof ( buf ) - 1 , pfont -> key_name . size )"		803643	2		=			
ANR	804799	Identifier	l		803643	0					
ANR	804800	CallExpression	"min ( sizeof ( buf ) - 1 , pfont -> key_name . size )"		803643	1					
ANR	804801	Callee	min		803643	0					
ANR	804802	Identifier	min		803643	0					
ANR	804803	ArgumentList	sizeof ( buf ) - 1		803643	1					
ANR	804804	Argument	sizeof ( buf ) - 1		803643	0					
ANR	804805	AdditiveExpression	sizeof ( buf ) - 1		803643	0		-			
ANR	804806	SizeofExpression	sizeof ( buf )		803643	0					
ANR	804807	Sizeof	sizeof		803643	0					
ANR	804808	SizeofOperand	buf		803643	1					
ANR	804809	PrimaryExpression	1		803643	1					
ANR	804810	Argument	pfont -> key_name . size		803643	1					
ANR	804811	MemberAccess	pfont -> key_name . size		803643	0					
ANR	804812	PtrMemberAccess	pfont -> key_name		803643	0					
ANR	804813	Identifier	pfont		803643	0					
ANR	804814	Identifier	key_name		803643	1					
ANR	804815	Identifier	size		803643	1					
ANR	804816	ExpressionStatement	"memcpy ( buf , pfont -> key_name . chars , l )"	278:12:9783:9820	803643	1	True				
ANR	804817	CallExpression	"memcpy ( buf , pfont -> key_name . chars , l )"		803643	0					
ANR	804818	Callee	memcpy		803643	0					
ANR	804819	Identifier	memcpy		803643	0					
ANR	804820	ArgumentList	buf		803643	1					
ANR	804821	Argument	buf		803643	0					
ANR	804822	Identifier	buf		803643	0					
ANR	804823	Argument	pfont -> key_name . chars		803643	1					
ANR	804824	MemberAccess	pfont -> key_name . chars		803643	0					
ANR	804825	PtrMemberAccess	pfont -> key_name		803643	0					
ANR	804826	Identifier	pfont		803643	0					
ANR	804827	Identifier	key_name		803643	1					
ANR	804828	Identifier	chars		803643	1					
ANR	804829	Argument	l		803643	2					
ANR	804830	Identifier	l		803643	0					
ANR	804831	ExpressionStatement	buf [ l ] = 0	279:12:9834:9844	803643	2	True				
ANR	804832	AssignmentExpression	buf [ l ] = 0		803643	0		=			
ANR	804833	ArrayIndexing	buf [ l ]		803643	0					
ANR	804834	Identifier	buf		803643	0					
ANR	804835	Identifier	l		803643	1					
ANR	804836	PrimaryExpression	0		803643	1					
ANR	804837	ElseStatement	else		803643	0					
ANR	804838	IfStatement	if ( pfont -> font_name . size )		803643	0					
ANR	804839	Condition	pfont -> font_name . size	280:19:9865:9885	803643	0	True				
ANR	804840	MemberAccess	pfont -> font_name . size		803643	0					
ANR	804841	PtrMemberAccess	pfont -> font_name		803643	0					
ANR	804842	Identifier	pfont		803643	0					
ANR	804843	Identifier	font_name		803643	1					
ANR	804844	Identifier	size		803643	1					
ANR	804845	CompoundStatement		132:12:5261:5312	803643	1					
ANR	804846	IdentifierDeclStatement	"int l = min ( sizeof ( buf ) - 1 , pfont -> font_name . size ) ;"	281:12:9902:9953	803643	0	True				
ANR	804847	IdentifierDecl	"l = min ( sizeof ( buf ) - 1 , pfont -> font_name . size )"		803643	0					
ANR	804848	IdentifierDeclType	int		803643	0					
ANR	804849	Identifier	l		803643	1					
ANR	804850	AssignmentExpression	"l = min ( sizeof ( buf ) - 1 , pfont -> font_name . size )"		803643	2		=			
ANR	804851	Identifier	l		803643	0					
ANR	804852	CallExpression	"min ( sizeof ( buf ) - 1 , pfont -> font_name . size )"		803643	1					
ANR	804853	Callee	min		803643	0					
ANR	804854	Identifier	min		803643	0					
ANR	804855	ArgumentList	sizeof ( buf ) - 1		803643	1					
ANR	804856	Argument	sizeof ( buf ) - 1		803643	0					
ANR	804857	AdditiveExpression	sizeof ( buf ) - 1		803643	0		-			
ANR	804858	SizeofExpression	sizeof ( buf )		803643	0					
ANR	804859	Sizeof	sizeof		803643	0					
ANR	804860	SizeofOperand	buf		803643	1					
ANR	804861	PrimaryExpression	1		803643	1					
ANR	804862	Argument	pfont -> font_name . size		803643	1					
ANR	804863	MemberAccess	pfont -> font_name . size		803643	0					
ANR	804864	PtrMemberAccess	pfont -> font_name		803643	0					
ANR	804865	Identifier	pfont		803643	0					
ANR	804866	Identifier	font_name		803643	1					
ANR	804867	Identifier	size		803643	1					
ANR	804868	ExpressionStatement	"memcpy ( buf , pfont -> font_name . chars , l )"	283:12:9968:10006	803643	1	True				
ANR	804869	CallExpression	"memcpy ( buf , pfont -> font_name . chars , l )"		803643	0					
ANR	804870	Callee	memcpy		803643	0					
ANR	804871	Identifier	memcpy		803643	0					
ANR	804872	ArgumentList	buf		803643	1					
ANR	804873	Argument	buf		803643	0					
ANR	804874	Identifier	buf		803643	0					
ANR	804875	Argument	pfont -> font_name . chars		803643	1					
ANR	804876	MemberAccess	pfont -> font_name . chars		803643	0					
ANR	804877	PtrMemberAccess	pfont -> font_name		803643	0					
ANR	804878	Identifier	pfont		803643	0					
ANR	804879	Identifier	font_name		803643	1					
ANR	804880	Identifier	chars		803643	1					
ANR	804881	Argument	l		803643	2					
ANR	804882	Identifier	l		803643	0					
ANR	804883	ExpressionStatement	buf [ l ] = 0	284:12:10020:10030	803643	2	True				
ANR	804884	AssignmentExpression	buf [ l ] = 0		803643	0		=			
ANR	804885	ArrayIndexing	buf [ l ]		803643	0					
ANR	804886	Identifier	buf		803643	0					
ANR	804887	Identifier	l		803643	1					
ANR	804888	PrimaryExpression	0		803643	1					
ANR	804889	ElseStatement	else		803643	0					
ANR	804890	ExpressionStatement	buf [ 0 ] = 0	286:12:10059:10069	803643	0	True				
ANR	804891	AssignmentExpression	buf [ 0 ] = 0		803643	0		=			
ANR	804892	ArrayIndexing	buf [ 0 ]		803643	0					
ANR	804893	Identifier	buf		803643	0					
ANR	804894	PrimaryExpression	0		803643	1					
ANR	804895	PrimaryExpression	0		803643	1					
ANR	804896	ExpressionStatement	"emprintf3 ( pfont -> memory , ""Warning: 'loca' length %d is greater than numGlyphs %d in the font %s.\\n"" , pfont -> data . numGlyphs + 1 , pfont -> data . trueNumGlyphs , buf )"	288:8:10080:10275	803643	2	True				
ANR	804897	CallExpression	"emprintf3 ( pfont -> memory , ""Warning: 'loca' length %d is greater than numGlyphs %d in the font %s.\\n"" , pfont -> data . numGlyphs + 1 , pfont -> data . trueNumGlyphs , buf )"		803643	0					
ANR	804898	Callee	emprintf3		803643	0					
ANR	804899	Identifier	emprintf3		803643	0					
ANR	804900	ArgumentList	pfont -> memory		803643	1					
ANR	804901	Argument	pfont -> memory		803643	0					
ANR	804902	PtrMemberAccess	pfont -> memory		803643	0					
ANR	804903	Identifier	pfont		803643	0					
ANR	804904	Identifier	memory		803643	1					
ANR	804905	Argument	"""Warning: 'loca' length %d is greater than numGlyphs %d in the font %s.\\n"""		803643	1					
ANR	804906	PrimaryExpression	"""Warning: 'loca' length %d is greater than numGlyphs %d in the font %s.\\n"""		803643	0					
ANR	804907	Argument	pfont -> data . numGlyphs + 1		803643	2					
ANR	804908	AdditiveExpression	pfont -> data . numGlyphs + 1		803643	0		+			
ANR	804909	MemberAccess	pfont -> data . numGlyphs		803643	0					
ANR	804910	PtrMemberAccess	pfont -> data		803643	0					
ANR	804911	Identifier	pfont		803643	0					
ANR	804912	Identifier	data		803643	1					
ANR	804913	Identifier	numGlyphs		803643	1					
ANR	804914	PrimaryExpression	1		803643	1					
ANR	804915	Argument	pfont -> data . trueNumGlyphs		803643	3					
ANR	804916	MemberAccess	pfont -> data . trueNumGlyphs		803643	0					
ANR	804917	PtrMemberAccess	pfont -> data		803643	0					
ANR	804918	Identifier	pfont		803643	0					
ANR	804919	Identifier	data		803643	1					
ANR	804920	Identifier	trueNumGlyphs		803643	1					
ANR	804921	Argument	buf		803643	4					
ANR	804922	Identifier	buf		803643	0					
ANR	804923	IfStatement	if ( loca_size > pfont -> data . trueNumGlyphs + 1 )		803643	3					
ANR	804924	Condition	loca_size > pfont -> data . trueNumGlyphs + 1	291:12:10289:10329	803643	0	True				
ANR	804925	RelationalExpression	loca_size > pfont -> data . trueNumGlyphs + 1		803643	0		>			
ANR	804926	Identifier	loca_size		803643	0					
ANR	804927	AdditiveExpression	pfont -> data . trueNumGlyphs + 1		803643	1		+			
ANR	804928	MemberAccess	pfont -> data . trueNumGlyphs		803643	0					
ANR	804929	PtrMemberAccess	pfont -> data		803643	0					
ANR	804930	Identifier	pfont		803643	0					
ANR	804931	Identifier	data		803643	1					
ANR	804932	Identifier	trueNumGlyphs		803643	1					
ANR	804933	PrimaryExpression	1		803643	1					
ANR	804934	CompoundStatement		142:55:5691:5691	803643	1					
ANR	804935	ForStatement	for ( i = loca_size - 1 ; i > pfont -> data . trueNumGlyphs ; i -- )		803643	0					
ANR	804936	ForInit	i = loca_size - 1 ;	294:17:10512:10529	803643	0	True				
ANR	804937	AssignmentExpression	i = loca_size - 1		803643	0		=			
ANR	804938	Identifier	i		803643	0					
ANR	804939	AdditiveExpression	loca_size - 1		803643	1		-			
ANR	804940	Identifier	loca_size		803643	0					
ANR	804941	PrimaryExpression	1		803643	1					
ANR	804942	Condition	i > pfont -> data . trueNumGlyphs	294:37:10532:10560	803643	1	True				
ANR	804943	RelationalExpression	i > pfont -> data . trueNumGlyphs		803643	0		>			
ANR	804944	Identifier	i		803643	0					
ANR	804945	MemberAccess	pfont -> data . trueNumGlyphs		803643	1					
ANR	804946	PtrMemberAccess	pfont -> data		803643	0					
ANR	804947	Identifier	pfont		803643	0					
ANR	804948	Identifier	data		803643	1					
ANR	804949	Identifier	trueNumGlyphs		803643	1					
ANR	804950	PostIncDecOperationExpression	i --	294:68:10563:10565	803643	2	True				
ANR	804951	Identifier	i		803643	0					
ANR	804952	IncDec	--		803643	1					
ANR	804953	CompoundStatement		145:73:5927:5927	803643	3					
ANR	804954	ExpressionStatement	"glyph_offset = get_glyph_offset ( pfont , i )"	295:16:10586:10627	803643	0	True				
ANR	804955	AssignmentExpression	"glyph_offset = get_glyph_offset ( pfont , i )"		803643	0		=			
ANR	804956	Identifier	glyph_offset		803643	0					
ANR	804957	CallExpression	"get_glyph_offset ( pfont , i )"		803643	1					
ANR	804958	Callee	get_glyph_offset		803643	0					
ANR	804959	Identifier	get_glyph_offset		803643	0					
ANR	804960	ArgumentList	pfont		803643	1					
ANR	804961	Argument	pfont		803643	0					
ANR	804962	Identifier	pfont		803643	0					
ANR	804963	Argument	i		803643	1					
ANR	804964	Identifier	i		803643	0					
ANR	804965	IfStatement	if ( glyph_offset < glyph_size )		803643	1					
ANR	804966	Condition	glyph_offset < glyph_size	296:20:10649:10673	803643	0	True				
ANR	804967	RelationalExpression	glyph_offset < glyph_size		803643	0		<			
ANR	804968	Identifier	glyph_offset		803643	0					
ANR	804969	Identifier	glyph_size		803643	1					
ANR	804970	BreakStatement	break ;	297:20:10696:10701	803643	1	True				
ANR	804971	IfStatement	if ( i > pfont -> data . numGlyphs )		803643	1					
ANR	804972	Condition	i > pfont -> data . numGlyphs	299:16:10733:10757	803643	0	True				
ANR	804973	RelationalExpression	i > pfont -> data . numGlyphs		803643	0		>			
ANR	804974	Identifier	i		803643	0					
ANR	804975	MemberAccess	pfont -> data . numGlyphs		803643	1					
ANR	804976	PtrMemberAccess	pfont -> data		803643	0					
ANR	804977	Identifier	pfont		803643	0					
ANR	804978	Identifier	data		803643	1					
ANR	804979	Identifier	numGlyphs		803643	1					
ANR	804980	CompoundStatement		150:43:6119:6119	803643	1					
ANR	804981	ExpressionStatement	pfont -> data . numGlyphs = loca_size - 1	302:17:10901:10938	803643	0	True				
ANR	804982	AssignmentExpression	pfont -> data . numGlyphs = loca_size - 1		803643	0		=			
ANR	804983	MemberAccess	pfont -> data . numGlyphs		803643	0					
ANR	804984	PtrMemberAccess	pfont -> data		803643	0					
ANR	804985	Identifier	pfont		803643	0					
ANR	804986	Identifier	data		803643	1					
ANR	804987	Identifier	numGlyphs		803643	1					
ANR	804988	AdditiveExpression	loca_size - 1		803643	1		-			
ANR	804989	Identifier	loca_size		803643	0					
ANR	804990	PrimaryExpression	1		803643	1					
ANR	804991	ExpressionStatement	loca_size = pfont -> data . numGlyphs + 1	305:8:10972:11009	803643	4	True				
ANR	804992	AssignmentExpression	loca_size = pfont -> data . numGlyphs + 1		803643	0		=			
ANR	804993	Identifier	loca_size		803643	0					
ANR	804994	AdditiveExpression	pfont -> data . numGlyphs + 1		803643	1		+			
ANR	804995	MemberAccess	pfont -> data . numGlyphs		803643	0					
ANR	804996	PtrMemberAccess	pfont -> data		803643	0					
ANR	804997	Identifier	pfont		803643	0					
ANR	804998	Identifier	data		803643	1					
ANR	804999	Identifier	numGlyphs		803643	1					
ANR	805000	PrimaryExpression	1		803643	1					
ANR	805001	ExpressionStatement	pfont -> data . warning_patented = false	308:4:11022:11058	803643	28	True				
ANR	805002	AssignmentExpression	pfont -> data . warning_patented = false		803643	0		=			
ANR	805003	MemberAccess	pfont -> data . warning_patented		803643	0					
ANR	805004	PtrMemberAccess	pfont -> data		803643	0					
ANR	805005	Identifier	pfont		803643	0					
ANR	805006	Identifier	data		803643	1					
ANR	805007	Identifier	warning_patented		803643	1					
ANR	805008	Identifier	false		803643	1					
ANR	805009	ExpressionStatement	pfont -> data . warning_bad_instruction = false	309:4:11064:11107	803643	29	True				
ANR	805010	AssignmentExpression	pfont -> data . warning_bad_instruction = false		803643	0		=			
ANR	805011	MemberAccess	pfont -> data . warning_bad_instruction		803643	0					
ANR	805012	PtrMemberAccess	pfont -> data		803643	0					
ANR	805013	Identifier	pfont		803643	0					
ANR	805014	Identifier	data		803643	1					
ANR	805015	Identifier	warning_bad_instruction		803643	1					
ANR	805016	Identifier	false		803643	1					
ANR	805017	ExpressionStatement	pfont -> procs . glyph_outline = gs_type42_glyph_outline	310:4:11113:11165	803643	30	True				
ANR	805018	AssignmentExpression	pfont -> procs . glyph_outline = gs_type42_glyph_outline		803643	0		=			
ANR	805019	MemberAccess	pfont -> procs . glyph_outline		803643	0					
ANR	805020	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805021	Identifier	pfont		803643	0					
ANR	805022	Identifier	procs		803643	1					
ANR	805023	Identifier	glyph_outline		803643	1					
ANR	805024	Identifier	gs_type42_glyph_outline		803643	1					
ANR	805025	ExpressionStatement	pfont -> procs . glyph_info = gs_type42_glyph_info	311:4:11171:11217	803643	31	True				
ANR	805026	AssignmentExpression	pfont -> procs . glyph_info = gs_type42_glyph_info		803643	0		=			
ANR	805027	MemberAccess	pfont -> procs . glyph_info		803643	0					
ANR	805028	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805029	Identifier	pfont		803643	0					
ANR	805030	Identifier	procs		803643	1					
ANR	805031	Identifier	glyph_info		803643	1					
ANR	805032	Identifier	gs_type42_glyph_info		803643	1					
ANR	805033	ExpressionStatement	pfont -> procs . enumerate_glyph = gs_type42_enumerate_glyph	312:4:11223:11279	803643	32	True				
ANR	805034	AssignmentExpression	pfont -> procs . enumerate_glyph = gs_type42_enumerate_glyph		803643	0		=			
ANR	805035	MemberAccess	pfont -> procs . enumerate_glyph		803643	0					
ANR	805036	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805037	Identifier	pfont		803643	0					
ANR	805038	Identifier	procs		803643	1					
ANR	805039	Identifier	enumerate_glyph		803643	1					
ANR	805040	Identifier	gs_type42_enumerate_glyph		803643	1					
ANR	805041	ExpressionStatement	pfont -> procs . font_info = gs_type42_font_info	313:4:11285:11329	803643	33	True				
ANR	805042	AssignmentExpression	pfont -> procs . font_info = gs_type42_font_info		803643	0		=			
ANR	805043	MemberAccess	pfont -> procs . font_info		803643	0					
ANR	805044	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805045	Identifier	pfont		803643	0					
ANR	805046	Identifier	procs		803643	1					
ANR	805047	Identifier	font_info		803643	1					
ANR	805048	Identifier	gs_type42_font_info		803643	1					
ANR	805049	ExpressionStatement	pfont -> data . get_glyph_index = default_get_glyph_index	316:4:11408:11461	803643	34	True				
ANR	805050	AssignmentExpression	pfont -> data . get_glyph_index = default_get_glyph_index		803643	0		=			
ANR	805051	MemberAccess	pfont -> data . get_glyph_index		803643	0					
ANR	805052	PtrMemberAccess	pfont -> data		803643	0					
ANR	805053	Identifier	pfont		803643	0					
ANR	805054	Identifier	data		803643	1					
ANR	805055	Identifier	get_glyph_index		803643	1					
ANR	805056	Identifier	default_get_glyph_index		803643	1					
ANR	805057	ExpressionStatement	pfont -> data . get_outline = default_get_outline	317:4:11467:11512	803643	35	True				
ANR	805058	AssignmentExpression	pfont -> data . get_outline = default_get_outline		803643	0		=			
ANR	805059	MemberAccess	pfont -> data . get_outline		803643	0					
ANR	805060	PtrMemberAccess	pfont -> data		803643	0					
ANR	805061	Identifier	pfont		803643	0					
ANR	805062	Identifier	data		803643	1					
ANR	805063	Identifier	get_outline		803643	1					
ANR	805064	Identifier	default_get_outline		803643	1					
ANR	805065	ExpressionStatement	pfont -> data . get_metrics = gs_type42_default_get_metrics	318:4:11518:11573	803643	36	True				
ANR	805066	AssignmentExpression	pfont -> data . get_metrics = gs_type42_default_get_metrics		803643	0		=			
ANR	805067	MemberAccess	pfont -> data . get_metrics		803643	0					
ANR	805068	PtrMemberAccess	pfont -> data		803643	0					
ANR	805069	Identifier	pfont		803643	0					
ANR	805070	Identifier	data		803643	1					
ANR	805071	Identifier	get_metrics		803643	1					
ANR	805072	Identifier	gs_type42_default_get_metrics		803643	1					
ANR	805073	IfStatement	if ( pfont -> FontType == ft_CID_TrueType && pfont -> is_resource )		803643	37					
ANR	805074	Condition	pfont -> FontType == ft_CID_TrueType && pfont -> is_resource	320:8:11584:11639	803643	0	True				
ANR	805075	AndExpression	pfont -> FontType == ft_CID_TrueType && pfont -> is_resource		803643	0		&&			
ANR	805076	EqualityExpression	pfont -> FontType == ft_CID_TrueType		803643	0		==			
ANR	805077	PtrMemberAccess	pfont -> FontType		803643	0					
ANR	805078	Identifier	pfont		803643	0					
ANR	805079	Identifier	FontType		803643	1					
ANR	805080	Identifier	ft_CID_TrueType		803643	1					
ANR	805081	PtrMemberAccess	pfont -> is_resource		803643	1					
ANR	805082	Identifier	pfont		803643	0					
ANR	805083	Identifier	is_resource		803643	1					
ANR	805084	CompoundStatement		171:66:7001:7001	803643	1					
ANR	805085	ExpressionStatement	pfont -> data . len_glyphs = NULL	332:8:12254:12283	803643	0	True				
ANR	805086	AssignmentExpression	pfont -> data . len_glyphs = NULL		803643	0		=			
ANR	805087	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805088	PtrMemberAccess	pfont -> data		803643	0					
ANR	805089	Identifier	pfont		803643	0					
ANR	805090	Identifier	data		803643	1					
ANR	805091	Identifier	len_glyphs		803643	1					
ANR	805092	Identifier	NULL		803643	1					
ANR	805093	ElseStatement	else		803643	0					
ANR	805094	CompoundStatement		184:11:7655:7655	803643	0					
ANR	805095	IfStatement	if ( loca_size == 0 )		803643	0					
ANR	805096	Condition	loca_size == 0	334:12:12310:12323	803643	0	True				
ANR	805097	EqualityExpression	loca_size == 0		803643	0		==			
ANR	805098	Identifier	loca_size		803643	0					
ANR	805099	PrimaryExpression	0		803643	1					
ANR	805100	CompoundStatement		185:28:7685:7685	803643	1					
ANR	805101	ExpressionStatement	pfont -> data . len_glyphs = NULL	335:12:12340:12369	803643	0	True				
ANR	805102	AssignmentExpression	pfont -> data . len_glyphs = NULL		803643	0		=			
ANR	805103	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805104	PtrMemberAccess	pfont -> data		803643	0					
ANR	805105	Identifier	pfont		803643	0					
ANR	805106	Identifier	data		803643	1					
ANR	805107	Identifier	len_glyphs		803643	1					
ANR	805108	Identifier	NULL		803643	1					
ANR	805109	ElseStatement	else		803643	0					
ANR	805110	CompoundStatement		188:13:7753:7753	803643	0					
ANR	805111	ExpressionStatement	"pfont -> data . len_glyphs = ( uint * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( uint ) , ""gs_type42_font_init"" )"	339:12:12497:12672	803643	0	True				
ANR	805112	AssignmentExpression	"pfont -> data . len_glyphs = ( uint * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( uint ) , ""gs_type42_font_init"" )"		803643	0		=			
ANR	805113	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805114	PtrMemberAccess	pfont -> data		803643	0					
ANR	805115	Identifier	pfont		803643	0					
ANR	805116	Identifier	data		803643	1					
ANR	805117	Identifier	len_glyphs		803643	1					
ANR	805118	CastExpression	"( uint * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( uint ) , ""gs_type42_font_init"" )"		803643	1					
ANR	805119	CastTarget	uint *		803643	0					
ANR	805120	CallExpression	"gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( uint ) , ""gs_type42_font_init"" )"		803643	1					
ANR	805121	Callee	gs_alloc_byte_array		803643	0					
ANR	805122	Identifier	gs_alloc_byte_array		803643	0					
ANR	805123	ArgumentList	pfont -> memory		803643	1					
ANR	805124	Argument	pfont -> memory		803643	0					
ANR	805125	PtrMemberAccess	pfont -> memory		803643	0					
ANR	805126	Identifier	pfont		803643	0					
ANR	805127	Identifier	memory		803643	1					
ANR	805128	Argument	loca_size		803643	1					
ANR	805129	Identifier	loca_size		803643	0					
ANR	805130	Argument	sizeof ( uint )		803643	2					
ANR	805131	SizeofExpression	sizeof ( uint )		803643	0					
ANR	805132	Sizeof	sizeof		803643	0					
ANR	805133	SizeofOperand	uint		803643	1					
ANR	805134	Argument	"""gs_type42_font_init"""		803643	3					
ANR	805135	PrimaryExpression	"""gs_type42_font_init"""		803643	0					
ANR	805136	IfStatement	if ( pfont -> data . len_glyphs == 0 )		803643	1					
ANR	805137	Condition	pfont -> data . len_glyphs == 0	341:16:12690:12716	803643	0	True				
ANR	805138	EqualityExpression	pfont -> data . len_glyphs == 0		803643	0		==			
ANR	805139	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805140	PtrMemberAccess	pfont -> data		803643	0					
ANR	805141	Identifier	pfont		803643	0					
ANR	805142	Identifier	data		803643	1					
ANR	805143	Identifier	len_glyphs		803643	1					
ANR	805144	PrimaryExpression	0		803643	1					
ANR	805145	ExpressionStatement	return_error ( gs_error_VMerror )	342:16:12735:12765	803643	1	True				
ANR	805146	CallExpression	return_error ( gs_error_VMerror )		803643	0					
ANR	805147	Callee	return_error		803643	0					
ANR	805148	Identifier	return_error		803643	0					
ANR	805149	ArgumentList	gs_error_VMerror		803643	1					
ANR	805150	Argument	gs_error_VMerror		803643	0					
ANR	805151	Identifier	gs_error_VMerror		803643	0					
ANR	805152	ExpressionStatement	"code = gs_font_notify_register ( ( gs_font * ) pfont , gs_len_glyphs_release , ( void * ) pfont )"	343:12:12779:12865	803643	2	True				
ANR	805153	AssignmentExpression	"code = gs_font_notify_register ( ( gs_font * ) pfont , gs_len_glyphs_release , ( void * ) pfont )"		803643	0		=			
ANR	805154	Identifier	code		803643	0					
ANR	805155	CallExpression	"gs_font_notify_register ( ( gs_font * ) pfont , gs_len_glyphs_release , ( void * ) pfont )"		803643	1					
ANR	805156	Callee	gs_font_notify_register		803643	0					
ANR	805157	Identifier	gs_font_notify_register		803643	0					
ANR	805158	ArgumentList	( gs_font * ) pfont		803643	1					
ANR	805159	Argument	( gs_font * ) pfont		803643	0					
ANR	805160	CastExpression	( gs_font * ) pfont		803643	0					
ANR	805161	CastTarget	gs_font *		803643	0					
ANR	805162	Identifier	pfont		803643	1					
ANR	805163	Argument	gs_len_glyphs_release		803643	1					
ANR	805164	Identifier	gs_len_glyphs_release		803643	0					
ANR	805165	Argument	( void * ) pfont		803643	2					
ANR	805166	CastExpression	( void * ) pfont		803643	0					
ANR	805167	CastTarget	void *		803643	0					
ANR	805168	Identifier	pfont		803643	1					
ANR	805169	IfStatement	if ( code < 0 )		803643	3					
ANR	805170	Condition	code < 0	344:16:12883:12890	803643	0	True				
ANR	805171	RelationalExpression	code < 0		803643	0		<			
ANR	805172	Identifier	code		803643	0					
ANR	805173	PrimaryExpression	0		803643	1					
ANR	805174	CompoundStatement		195:26:8252:8252	803643	1					
ANR	805175	ExpressionStatement	"gs_free_object ( pfont -> memory , pfont -> data . len_glyphs , ""gs_len_glyphs_release"" )"	345:16:12911:12989	803643	0	True				
ANR	805176	CallExpression	"gs_free_object ( pfont -> memory , pfont -> data . len_glyphs , ""gs_len_glyphs_release"" )"		803643	0					
ANR	805177	Callee	gs_free_object		803643	0					
ANR	805178	Identifier	gs_free_object		803643	0					
ANR	805179	ArgumentList	pfont -> memory		803643	1					
ANR	805180	Argument	pfont -> memory		803643	0					
ANR	805181	PtrMemberAccess	pfont -> memory		803643	0					
ANR	805182	Identifier	pfont		803643	0					
ANR	805183	Identifier	memory		803643	1					
ANR	805184	Argument	pfont -> data . len_glyphs		803643	1					
ANR	805185	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805186	PtrMemberAccess	pfont -> data		803643	0					
ANR	805187	Identifier	pfont		803643	0					
ANR	805188	Identifier	data		803643	1					
ANR	805189	Identifier	len_glyphs		803643	1					
ANR	805190	Argument	"""gs_len_glyphs_release"""		803643	2					
ANR	805191	PrimaryExpression	"""gs_len_glyphs_release"""		803643	0					
ANR	805192	ReturnStatement	return code ;	346:16:13007:13018	803643	1	True				
ANR	805193	Identifier	code		803643	0					
ANR	805194	ExpressionStatement	"glyph_start = get_glyph_offset ( pfont , 0 )"	352:12:13305:13345	803643	4	True				
ANR	805195	AssignmentExpression	"glyph_start = get_glyph_offset ( pfont , 0 )"		803643	0		=			
ANR	805196	Identifier	glyph_start		803643	0					
ANR	805197	CallExpression	"get_glyph_offset ( pfont , 0 )"		803643	1					
ANR	805198	Callee	get_glyph_offset		803643	0					
ANR	805199	Identifier	get_glyph_offset		803643	0					
ANR	805200	ArgumentList	pfont		803643	1					
ANR	805201	Argument	pfont		803643	0					
ANR	805202	Identifier	pfont		803643	0					
ANR	805203	Argument	0		803643	1					
ANR	805204	PrimaryExpression	0		803643	0					
ANR	805205	ForStatement	for ( i = 1 ; i < loca_size ; i ++ )		803643	5					
ANR	805206	ForInit	i = 1 ;	353:17:13364:13369	803643	0	True				
ANR	805207	AssignmentExpression	i = 1		803643	0		=			
ANR	805208	Identifier	i		803643	0					
ANR	805209	PrimaryExpression	1		803643	1					
ANR	805210	Condition	i < loca_size	353:24:13371:13383	803643	1	True				
ANR	805211	RelationalExpression	i < loca_size		803643	0		<			
ANR	805212	Identifier	i		803643	0					
ANR	805213	Identifier	loca_size		803643	1					
ANR	805214	PostIncDecOperationExpression	i ++	353:39:13386:13388	803643	2	True				
ANR	805215	Identifier	i		803643	0					
ANR	805216	IncDec	++		803643	1					
ANR	805217	CompoundStatement		204:44:8750:8750	803643	3					
ANR	805218	ExpressionStatement	"glyph_offset = get_glyph_offset ( pfont , i )"	354:16:13409:13450	803643	0	True				
ANR	805219	AssignmentExpression	"glyph_offset = get_glyph_offset ( pfont , i )"		803643	0		=			
ANR	805220	Identifier	glyph_offset		803643	0					
ANR	805221	CallExpression	"get_glyph_offset ( pfont , i )"		803643	1					
ANR	805222	Callee	get_glyph_offset		803643	0					
ANR	805223	Identifier	get_glyph_offset		803643	0					
ANR	805224	ArgumentList	pfont		803643	1					
ANR	805225	Argument	pfont		803643	0					
ANR	805226	Identifier	pfont		803643	0					
ANR	805227	Argument	i		803643	1					
ANR	805228	Identifier	i		803643	0					
ANR	805229	ExpressionStatement	glyph_length = glyph_offset - glyph_start	355:16:13468:13509	803643	1	True				
ANR	805230	AssignmentExpression	glyph_length = glyph_offset - glyph_start		803643	0		=			
ANR	805231	Identifier	glyph_length		803643	0					
ANR	805232	AdditiveExpression	glyph_offset - glyph_start		803643	1		-			
ANR	805233	Identifier	glyph_offset		803643	0					
ANR	805234	Identifier	glyph_start		803643	1					
ANR	805235	IfStatement	if ( glyph_length > 0x80000000 )		803643	2					
ANR	805236	Condition	glyph_length > 0x80000000	356:20:13531:13555	803643	0	True				
ANR	805237	RelationalExpression	glyph_length > 0x80000000		803643	0		>			
ANR	805238	Identifier	glyph_length		803643	0					
ANR	805239	PrimaryExpression	0x80000000		803643	1					
ANR	805240	BreakStatement	break ;	357:20:13578:13583	803643	1	True				
ANR	805241	IfStatement	if ( glyph_offset > glyph_size )		803643	3					
ANR	805242	Condition	glyph_offset > glyph_size	358:20:13605:13629	803643	0	True				
ANR	805243	RelationalExpression	glyph_offset > glyph_size		803643	0		>			
ANR	805244	Identifier	glyph_offset		803643	0					
ANR	805245	Identifier	glyph_size		803643	1					
ANR	805246	BreakStatement	break ;	359:20:13652:13657	803643	1	True				
ANR	805247	ExpressionStatement	pfont -> data . len_glyphs [ i - 1 ] = glyph_length	361:16:13715:13759	803643	4	True				
ANR	805248	AssignmentExpression	pfont -> data . len_glyphs [ i - 1 ] = glyph_length		803643	0		=			
ANR	805249	ArrayIndexing	pfont -> data . len_glyphs [ i - 1 ]		803643	0					
ANR	805250	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805251	PtrMemberAccess	pfont -> data		803643	0					
ANR	805252	Identifier	pfont		803643	0					
ANR	805253	Identifier	data		803643	1					
ANR	805254	Identifier	len_glyphs		803643	1					
ANR	805255	AdditiveExpression	i - 1		803643	1		-			
ANR	805256	Identifier	i		803643	0					
ANR	805257	PrimaryExpression	1		803643	1					
ANR	805258	Identifier	glyph_length		803643	1					
ANR	805259	ExpressionStatement	glyph_start = glyph_offset	362:16:13777:13803	803643	5	True				
ANR	805260	AssignmentExpression	glyph_start = glyph_offset		803643	0		=			
ANR	805261	Identifier	glyph_start		803643	0					
ANR	805262	Identifier	glyph_offset		803643	1					
ANR	805263	IfStatement	if ( i < loca_size )		803643	6					
ANR	805264	Condition	i < loca_size	364:16:13835:13847	803643	0	True				
ANR	805265	RelationalExpression	i < loca_size		803643	0		<			
ANR	805266	Identifier	i		803643	0					
ANR	805267	Identifier	loca_size		803643	1					
ANR	805268	CompoundStatement		226:16:9738:9966	803643	1					
ANR	805269	IdentifierDeclStatement	ulong last_glyph_offset = glyph_size ;	371:16:14182:14218	803643	0	True				
ANR	805270	IdentifierDecl	last_glyph_offset = glyph_size		803643	0					
ANR	805271	IdentifierDeclType	ulong		803643	0					
ANR	805272	Identifier	last_glyph_offset		803643	1					
ANR	805273	AssignmentExpression	last_glyph_offset = glyph_size		803643	2		=			
ANR	805274	Identifier	glyph_size		803643	0					
ANR	805275	Identifier	glyph_size		803643	1					
ANR	805276	IdentifierDeclStatement	ulong num_valid_loca_elm = loca_size ;	372:16:14236:14272	803643	1	True				
ANR	805277	IdentifierDecl	num_valid_loca_elm = loca_size		803643	0					
ANR	805278	IdentifierDeclType	ulong		803643	0					
ANR	805279	Identifier	num_valid_loca_elm		803643	1					
ANR	805280	AssignmentExpression	num_valid_loca_elm = loca_size		803643	2		=			
ANR	805281	Identifier	loca_size		803643	0					
ANR	805282	Identifier	loca_size		803643	1					
ANR	805283	IdentifierDeclStatement	long last_offset = 0 ;	373:16:14290:14310	803643	2	True				
ANR	805284	IdentifierDecl	last_offset = 0		803643	0					
ANR	805285	IdentifierDeclType	long		803643	0					
ANR	805286	Identifier	last_offset		803643	1					
ANR	805287	AssignmentExpression	last_offset = 0		803643	2		=			
ANR	805288	Identifier	last_offset		803643	0					
ANR	805289	PrimaryExpression	0		803643	1					
ANR	805290	IdentifierDeclStatement	gs_type42_font_init_sort_t * psort ;	374:16:14328:14361	803643	3	True				
ANR	805291	IdentifierDecl	* psort		803643	0					
ANR	805292	IdentifierDeclType	gs_type42_font_init_sort_t *		803643	0					
ANR	805293	Identifier	psort		803643	1					
ANR	805294	IdentifierDeclStatement	"gs_type42_font_init_sort_t * psortary = ( gs_type42_font_init_sort_t * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( gs_type42_font_init_sort_t ) , ""gs_type42_font_init(sort loca)"" ) ;"	375:16:14379:14607	803643	4	True				
ANR	805295	IdentifierDecl	"* psortary = ( gs_type42_font_init_sort_t * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( gs_type42_font_init_sort_t ) , ""gs_type42_font_init(sort loca)"" )"		803643	0					
ANR	805296	IdentifierDeclType	gs_type42_font_init_sort_t *		803643	0					
ANR	805297	Identifier	psortary		803643	1					
ANR	805298	AssignmentExpression	"* psortary = ( gs_type42_font_init_sort_t * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( gs_type42_font_init_sort_t ) , ""gs_type42_font_init(sort loca)"" )"		803643	2		=			
ANR	805299	Identifier	psortary		803643	0					
ANR	805300	CastExpression	"( gs_type42_font_init_sort_t * ) gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( gs_type42_font_init_sort_t ) , ""gs_type42_font_init(sort loca)"" )"		803643	1					
ANR	805301	CastTarget	gs_type42_font_init_sort_t *		803643	0					
ANR	805302	CallExpression	"gs_alloc_byte_array ( pfont -> memory , loca_size , sizeof ( gs_type42_font_init_sort_t ) , ""gs_type42_font_init(sort loca)"" )"		803643	1					
ANR	805303	Callee	gs_alloc_byte_array		803643	0					
ANR	805304	Identifier	gs_alloc_byte_array		803643	0					
ANR	805305	ArgumentList	pfont -> memory		803643	1					
ANR	805306	Argument	pfont -> memory		803643	0					
ANR	805307	PtrMemberAccess	pfont -> memory		803643	0					
ANR	805308	Identifier	pfont		803643	0					
ANR	805309	Identifier	memory		803643	1					
ANR	805310	Argument	loca_size		803643	1					
ANR	805311	Identifier	loca_size		803643	0					
ANR	805312	Argument	sizeof ( gs_type42_font_init_sort_t )		803643	2					
ANR	805313	SizeofExpression	sizeof ( gs_type42_font_init_sort_t )		803643	0					
ANR	805314	Sizeof	sizeof		803643	0					
ANR	805315	SizeofOperand	gs_type42_font_init_sort_t		803643	1					
ANR	805316	Argument	"""gs_type42_font_init(sort loca)"""		803643	3					
ANR	805317	PrimaryExpression	"""gs_type42_font_init(sort loca)"""		803643	0					
ANR	805318	IfStatement	if ( psortary == 0 )		803643	5					
ANR	805319	Condition	psortary == 0	379:20:14642:14654	803643	0	True				
ANR	805320	EqualityExpression	psortary == 0		803643	0		==			
ANR	805321	Identifier	psortary		803643	0					
ANR	805322	PrimaryExpression	0		803643	1					
ANR	805323	ExpressionStatement	return_error ( gs_error_VMerror )	380:20:14677:14707	803643	1	True				
ANR	805324	CallExpression	return_error ( gs_error_VMerror )		803643	0					
ANR	805325	Callee	return_error		803643	0					
ANR	805326	Identifier	return_error		803643	0					
ANR	805327	ArgumentList	gs_error_VMerror		803643	1					
ANR	805328	Argument	gs_error_VMerror		803643	0					
ANR	805329	Identifier	gs_error_VMerror		803643	0					
ANR	805330	ExpressionStatement	psortary -> glyph_num = 0	382:16:14820:14843	803643	6	True				
ANR	805331	AssignmentExpression	psortary -> glyph_num = 0		803643	0		=			
ANR	805332	PtrMemberAccess	psortary -> glyph_num		803643	0					
ANR	805333	Identifier	psortary		803643	0					
ANR	805334	Identifier	glyph_num		803643	1					
ANR	805335	PrimaryExpression	0		803643	1					
ANR	805336	ExpressionStatement	"psortary -> glyph_offset = get_glyph_offset ( pfont , 0 )"	383:16:14861:14912	803643	7	True				
ANR	805337	AssignmentExpression	"psortary -> glyph_offset = get_glyph_offset ( pfont , 0 )"		803643	0		=			
ANR	805338	PtrMemberAccess	psortary -> glyph_offset		803643	0					
ANR	805339	Identifier	psortary		803643	0					
ANR	805340	Identifier	glyph_offset		803643	1					
ANR	805341	CallExpression	"get_glyph_offset ( pfont , 0 )"		803643	1					
ANR	805342	Callee	get_glyph_offset		803643	0					
ANR	805343	Identifier	get_glyph_offset		803643	0					
ANR	805344	ArgumentList	pfont		803643	1					
ANR	805345	Argument	pfont		803643	0					
ANR	805346	Identifier	pfont		803643	0					
ANR	805347	Argument	0		803643	1					
ANR	805348	PrimaryExpression	0		803643	0					
ANR	805349	ForStatement	"for ( i = 1 , psort = psortary + 1 ; i < loca_size ; i ++ , psort ++ )"		803643	8					
ANR	805350	ForInit	"i = 1 , psort = psortary + 1 ;"	384:21:14935:14962	803643	0	True				
ANR	805351	Expression	"i = 1 , psort = psortary + 1"		803643	0					
ANR	805352	AssignmentExpression	i = 1		803643	0		=			
ANR	805353	Identifier	i		803643	0					
ANR	805354	PrimaryExpression	1		803643	1					
ANR	805355	AssignmentExpression	psort = psortary + 1		803643	1		=			
ANR	805356	Identifier	psort		803643	0					
ANR	805357	AdditiveExpression	psortary + 1		803643	1		+			
ANR	805358	Identifier	psortary		803643	0					
ANR	805359	PrimaryExpression	1		803643	1					
ANR	805360	Condition	i < loca_size	384:50:14964:14976	803643	1	True				
ANR	805361	RelationalExpression	i < loca_size		803643	0		<			
ANR	805362	Identifier	i		803643	0					
ANR	805363	Identifier	loca_size		803643	1					
ANR	805364	Expression	"i ++ , psort ++"	384:65:14979:14990	803643	2	True				
ANR	805365	PostIncDecOperationExpression	i ++		803643	0					
ANR	805366	Identifier	i		803643	0					
ANR	805367	IncDec	++		803643	1					
ANR	805368	PostIncDecOperationExpression	psort ++		803643	1					
ANR	805369	Identifier	psort		803643	0					
ANR	805370	IncDec	++		803643	1					
ANR	805371	CompoundStatement		235:79:10352:10352	803643	3					
ANR	805372	ExpressionStatement	psort -> glyph_num = i	385:20:15015:15035	803643	0	True				
ANR	805373	AssignmentExpression	psort -> glyph_num = i		803643	0		=			
ANR	805374	PtrMemberAccess	psort -> glyph_num		803643	0					
ANR	805375	Identifier	psort		803643	0					
ANR	805376	Identifier	glyph_num		803643	1					
ANR	805377	Identifier	i		803643	1					
ANR	805378	ExpressionStatement	"psort -> glyph_offset = get_glyph_offset ( pfont , i )"	386:20:15057:15105	803643	1	True				
ANR	805379	AssignmentExpression	"psort -> glyph_offset = get_glyph_offset ( pfont , i )"		803643	0		=			
ANR	805380	PtrMemberAccess	psort -> glyph_offset		803643	0					
ANR	805381	Identifier	psort		803643	0					
ANR	805382	Identifier	glyph_offset		803643	1					
ANR	805383	CallExpression	"get_glyph_offset ( pfont , i )"		803643	1					
ANR	805384	Callee	get_glyph_offset		803643	0					
ANR	805385	Identifier	get_glyph_offset		803643	0					
ANR	805386	ArgumentList	pfont		803643	1					
ANR	805387	Argument	pfont		803643	0					
ANR	805388	Identifier	pfont		803643	0					
ANR	805389	Argument	i		803643	1					
ANR	805390	Identifier	i		803643	0					
ANR	805391	ExpressionStatement	psort [ - 1 ] . glyph_length = psort -> glyph_offset - last_offset	387:20:15127:15185	803643	2	True				
ANR	805392	AssignmentExpression	psort [ - 1 ] . glyph_length = psort -> glyph_offset - last_offset		803643	0		=			
ANR	805393	MemberAccess	psort [ - 1 ] . glyph_length		803643	0					
ANR	805394	ArrayIndexing	psort [ - 1 ]		803643	0					
ANR	805395	Identifier	psort		803643	0					
ANR	805396	UnaryOperationExpression	- 1		803643	1					
ANR	805397	UnaryOperator	-		803643	0					
ANR	805398	PrimaryExpression	1		803643	1					
ANR	805399	Identifier	glyph_length		803643	1					
ANR	805400	AdditiveExpression	psort -> glyph_offset - last_offset		803643	1		-			
ANR	805401	PtrMemberAccess	psort -> glyph_offset		803643	0					
ANR	805402	Identifier	psort		803643	0					
ANR	805403	Identifier	glyph_offset		803643	1					
ANR	805404	Identifier	last_offset		803643	1					
ANR	805405	ExpressionStatement	last_offset = psort -> glyph_offset	388:20:15207:15240	803643	3	True				
ANR	805406	AssignmentExpression	last_offset = psort -> glyph_offset		803643	0		=			
ANR	805407	Identifier	last_offset		803643	0					
ANR	805408	PtrMemberAccess	psort -> glyph_offset		803643	1					
ANR	805409	Identifier	psort		803643	0					
ANR	805410	Identifier	glyph_offset		803643	1					
ANR	805411	ExpressionStatement	psort [ - 1 ] . glyph_length = 0	390:16:15276:15302	803643	9	True				
ANR	805412	AssignmentExpression	psort [ - 1 ] . glyph_length = 0		803643	0		=			
ANR	805413	MemberAccess	psort [ - 1 ] . glyph_length		803643	0					
ANR	805414	ArrayIndexing	psort [ - 1 ]		803643	0					
ANR	805415	Identifier	psort		803643	0					
ANR	805416	UnaryOperationExpression	- 1		803643	1					
ANR	805417	UnaryOperator	-		803643	0					
ANR	805418	PrimaryExpression	1		803643	1					
ANR	805419	Identifier	glyph_length		803643	1					
ANR	805420	PrimaryExpression	0		803643	1					
ANR	805421	ExpressionStatement	"qsort ( psortary , loca_size , sizeof ( gs_type42_font_init_sort_t ) , gs_type42_font_init_compare )"	391:16:15341:15432	803643	10	True				
ANR	805422	CallExpression	"qsort ( psortary , loca_size , sizeof ( gs_type42_font_init_sort_t ) , gs_type42_font_init_compare )"		803643	0					
ANR	805423	Callee	qsort		803643	0					
ANR	805424	Identifier	qsort		803643	0					
ANR	805425	ArgumentList	psortary		803643	1					
ANR	805426	Argument	psortary		803643	0					
ANR	805427	Identifier	psortary		803643	0					
ANR	805428	Argument	loca_size		803643	1					
ANR	805429	Identifier	loca_size		803643	0					
ANR	805430	Argument	sizeof ( gs_type42_font_init_sort_t )		803643	2					
ANR	805431	SizeofExpression	sizeof ( gs_type42_font_init_sort_t )		803643	0					
ANR	805432	Sizeof	sizeof		803643	0					
ANR	805433	SizeofOperand	gs_type42_font_init_sort_t		803643	1					
ANR	805434	Argument	gs_type42_font_init_compare		803643	3					
ANR	805435	Identifier	gs_type42_font_init_compare		803643	0					
ANR	805436	WhileStatement	while ( num_valid_loca_elm > 0 && psortary [ num_valid_loca_elm - 1 ] . glyph_offset > glyph_size )		803643	11					
ANR	805437	Condition	num_valid_loca_elm > 0 && psortary [ num_valid_loca_elm - 1 ] . glyph_offset > glyph_size	392:23:15457:15540	803643	0	True				
ANR	805438	AndExpression	num_valid_loca_elm > 0 && psortary [ num_valid_loca_elm - 1 ] . glyph_offset > glyph_size		803643	0		&&			
ANR	805439	RelationalExpression	num_valid_loca_elm > 0		803643	0		>			
ANR	805440	Identifier	num_valid_loca_elm		803643	0					
ANR	805441	PrimaryExpression	0		803643	1					
ANR	805442	RelationalExpression	psortary [ num_valid_loca_elm - 1 ] . glyph_offset > glyph_size		803643	1		>			
ANR	805443	MemberAccess	psortary [ num_valid_loca_elm - 1 ] . glyph_offset		803643	0					
ANR	805444	ArrayIndexing	psortary [ num_valid_loca_elm - 1 ]		803643	0					
ANR	805445	Identifier	psortary		803643	0					
ANR	805446	AdditiveExpression	num_valid_loca_elm - 1		803643	1		-			
ANR	805447	Identifier	num_valid_loca_elm		803643	0					
ANR	805448	PrimaryExpression	1		803643	1					
ANR	805449	Identifier	glyph_offset		803643	1					
ANR	805450	Identifier	glyph_size		803643	1					
ANR	805451	ExpressionStatement	num_valid_loca_elm --	393:20:15563:15584	803643	1	True				
ANR	805452	PostIncDecOperationExpression	num_valid_loca_elm --		803643	0					
ANR	805453	Identifier	num_valid_loca_elm		803643	0					
ANR	805454	IncDec	--		803643	1					
ANR	805455	IfStatement	if ( 0 == num_valid_loca_elm )		803643	12					
ANR	805456	Condition	0 == num_valid_loca_elm	394:20:15606:15628	803643	0	True				
ANR	805457	EqualityExpression	0 == num_valid_loca_elm		803643	0		==			
ANR	805458	PrimaryExpression	0		803643	0					
ANR	805459	Identifier	num_valid_loca_elm		803643	1					
ANR	805460	ExpressionStatement	return_error ( gs_error_invalidfont )	395:20:15651:15685	803643	1	True				
ANR	805461	CallExpression	return_error ( gs_error_invalidfont )		803643	0					
ANR	805462	Callee	return_error		803643	0					
ANR	805463	Identifier	return_error		803643	0					
ANR	805464	ArgumentList	gs_error_invalidfont		803643	1					
ANR	805465	Argument	gs_error_invalidfont		803643	0					
ANR	805466	Identifier	gs_error_invalidfont		803643	0					
ANR	805467	ForStatement	for ( i = num_valid_loca_elm ; i -- ; )		803643	13					
ANR	805468	ForInit	i = num_valid_loca_elm ;	396:21:15708:15730	803643	0	True				
ANR	805469	AssignmentExpression	i = num_valid_loca_elm		803643	0		=			
ANR	805470	Identifier	i		803643	0					
ANR	805471	Identifier	num_valid_loca_elm		803643	1					
ANR	805472	Condition	i --	396:45:15732:15734	803643	1	True				
ANR	805473	PostIncDecOperationExpression	i --		803643	0					
ANR	805474	Identifier	i		803643	0					
ANR	805475	IncDec	--		803643	1					
ANR	805476	CompoundStatement		248:20:11119:11134	803643	2					
ANR	805477	IdentifierDeclStatement	long old_length ;	397:20:15760:15775	803643	0	True				
ANR	805478	IdentifierDecl	old_length		803643	0					
ANR	805479	IdentifierDeclType	long		803643	0					
ANR	805480	Identifier	old_length		803643	1					
ANR	805481	ExpressionStatement	psort = psortary + i	399:20:15810:15830	803643	1	True				
ANR	805482	AssignmentExpression	psort = psortary + i		803643	0		=			
ANR	805483	Identifier	psort		803643	0					
ANR	805484	AdditiveExpression	psortary + i		803643	1		+			
ANR	805485	Identifier	psortary		803643	0					
ANR	805486	Identifier	i		803643	1					
ANR	805487	ExpressionStatement	old_length = psort -> glyph_length	400:20:15852:15884	803643	2	True				
ANR	805488	AssignmentExpression	old_length = psort -> glyph_length		803643	0		=			
ANR	805489	Identifier	old_length		803643	0					
ANR	805490	PtrMemberAccess	psort -> glyph_length		803643	1					
ANR	805491	Identifier	psort		803643	0					
ANR	805492	Identifier	glyph_length		803643	1					
ANR	805493	IfStatement	if ( old_length < 0 || old_length > 2000 )		803643	3					
ANR	805494	Condition	old_length < 0 || old_length > 2000	401:24:15910:15944	803643	0	True				
ANR	805495	OrExpression	old_length < 0 || old_length > 2000		803643	0		||			
ANR	805496	RelationalExpression	old_length < 0		803643	0		<			
ANR	805497	Identifier	old_length		803643	0					
ANR	805498	PrimaryExpression	0		803643	1					
ANR	805499	RelationalExpression	old_length > 2000		803643	1		>			
ANR	805500	Identifier	old_length		803643	0					
ANR	805501	PrimaryExpression	2000		803643	1					
ANR	805502	CompoundStatement		252:78:11323:11323	803643	1					
ANR	805503	ExpressionStatement	pfont -> data . len_glyphs [ psort -> glyph_num ] = last_glyph_offset - psort -> glyph_offset	402:24:15990:16072	803643	0	True				
ANR	805504	AssignmentExpression	pfont -> data . len_glyphs [ psort -> glyph_num ] = last_glyph_offset - psort -> glyph_offset		803643	0		=			
ANR	805505	ArrayIndexing	pfont -> data . len_glyphs [ psort -> glyph_num ]		803643	0					
ANR	805506	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805507	PtrMemberAccess	pfont -> data		803643	0					
ANR	805508	Identifier	pfont		803643	0					
ANR	805509	Identifier	data		803643	1					
ANR	805510	Identifier	len_glyphs		803643	1					
ANR	805511	PtrMemberAccess	psort -> glyph_num		803643	1					
ANR	805512	Identifier	psort		803643	0					
ANR	805513	Identifier	glyph_num		803643	1					
ANR	805514	AdditiveExpression	last_glyph_offset - psort -> glyph_offset		803643	1		-			
ANR	805515	Identifier	last_glyph_offset		803643	0					
ANR	805516	PtrMemberAccess	psort -> glyph_offset		803643	1					
ANR	805517	Identifier	psort		803643	0					
ANR	805518	Identifier	glyph_offset		803643	1					
ANR	805519	ElseStatement	else		803643	0					
ANR	805520	ExpressionStatement	pfont -> data . len_glyphs [ psort -> glyph_num ] = old_length	405:24:16204:16257	803643	0	True				
ANR	805521	AssignmentExpression	pfont -> data . len_glyphs [ psort -> glyph_num ] = old_length		803643	0		=			
ANR	805522	ArrayIndexing	pfont -> data . len_glyphs [ psort -> glyph_num ]		803643	0					
ANR	805523	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805524	PtrMemberAccess	pfont -> data		803643	0					
ANR	805525	Identifier	pfont		803643	0					
ANR	805526	Identifier	data		803643	1					
ANR	805527	Identifier	len_glyphs		803643	1					
ANR	805528	PtrMemberAccess	psort -> glyph_num		803643	1					
ANR	805529	Identifier	psort		803643	0					
ANR	805530	Identifier	glyph_num		803643	1					
ANR	805531	Identifier	old_length		803643	1					
ANR	805532	ExpressionStatement	last_glyph_offset = psort -> glyph_offset	406:20:16279:16318	803643	4	True				
ANR	805533	AssignmentExpression	last_glyph_offset = psort -> glyph_offset		803643	0		=			
ANR	805534	Identifier	last_glyph_offset		803643	0					
ANR	805535	PtrMemberAccess	psort -> glyph_offset		803643	1					
ANR	805536	Identifier	psort		803643	0					
ANR	805537	Identifier	glyph_offset		803643	1					
ANR	805538	ForStatement	for ( i = num_valid_loca_elm ; i < loca_size ; i ++ )		803643	14					
ANR	805539	ForInit	i = num_valid_loca_elm ;	408:21:16359:16381	803643	0	True				
ANR	805540	AssignmentExpression	i = num_valid_loca_elm		803643	0		=			
ANR	805541	Identifier	i		803643	0					
ANR	805542	Identifier	num_valid_loca_elm		803643	1					
ANR	805543	Condition	i < loca_size	408:45:16383:16395	803643	1	True				
ANR	805544	RelationalExpression	i < loca_size		803643	0		<			
ANR	805545	Identifier	i		803643	0					
ANR	805546	Identifier	loca_size		803643	1					
ANR	805547	PostIncDecOperationExpression	i ++	408:60:16398:16400	803643	2	True				
ANR	805548	Identifier	i		803643	0					
ANR	805549	IncDec	++		803643	1					
ANR	805550	CompoundStatement		259:65:11762:11762	803643	3					
ANR	805551	ExpressionStatement	psort = psortary + i	409:20:16425:16445	803643	0	True				
ANR	805552	AssignmentExpression	psort = psortary + i		803643	0		=			
ANR	805553	Identifier	psort		803643	0					
ANR	805554	AdditiveExpression	psortary + i		803643	1		+			
ANR	805555	Identifier	psortary		803643	0					
ANR	805556	Identifier	i		803643	1					
ANR	805557	ExpressionStatement	pfont -> data . len_glyphs [ psort -> glyph_num ] = 0	410:20:16467:16511	803643	1	True				
ANR	805558	AssignmentExpression	pfont -> data . len_glyphs [ psort -> glyph_num ] = 0		803643	0		=			
ANR	805559	ArrayIndexing	pfont -> data . len_glyphs [ psort -> glyph_num ]		803643	0					
ANR	805560	MemberAccess	pfont -> data . len_glyphs		803643	0					
ANR	805561	PtrMemberAccess	pfont -> data		803643	0					
ANR	805562	Identifier	pfont		803643	0					
ANR	805563	Identifier	data		803643	1					
ANR	805564	Identifier	len_glyphs		803643	1					
ANR	805565	PtrMemberAccess	psort -> glyph_num		803643	1					
ANR	805566	Identifier	psort		803643	0					
ANR	805567	Identifier	glyph_num		803643	1					
ANR	805568	PrimaryExpression	0		803643	1					
ANR	805569	ExpressionStatement	"gs_free_object ( pfont -> memory , psortary , ""gs_type42_font_init(sort loca)"" )"	416:16:16815:16888	803643	15	True				
ANR	805570	CallExpression	"gs_free_object ( pfont -> memory , psortary , ""gs_type42_font_init(sort loca)"" )"		803643	0					
ANR	805571	Callee	gs_free_object		803643	0					
ANR	805572	Identifier	gs_free_object		803643	0					
ANR	805573	ArgumentList	pfont -> memory		803643	1					
ANR	805574	Argument	pfont -> memory		803643	0					
ANR	805575	PtrMemberAccess	pfont -> memory		803643	0					
ANR	805576	Identifier	pfont		803643	0					
ANR	805577	Identifier	memory		803643	1					
ANR	805578	Argument	psortary		803643	1					
ANR	805579	Identifier	psortary		803643	0					
ANR	805580	Argument	"""gs_type42_font_init(sort loca)"""		803643	2					
ANR	805581	PrimaryExpression	"""gs_type42_font_init(sort loca)"""		803643	0					
ANR	805582	IfStatement	if ( pfont -> FontBBox . p . x >= pfont -> FontBBox . q . x || pfont -> FontBBox . p . y >= pfont -> FontBBox . q . y || pfont -> FontBBox . p . x < - 0.5 || pfont -> FontBBox . p . x > 0.5 || pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5 )		803643	38					
ANR	805583	Condition	pfont -> FontBBox . p . x >= pfont -> FontBBox . q . x || pfont -> FontBBox . p . y >= pfont -> FontBBox . q . y || pfont -> FontBBox . p . x < - 0.5 || pfont -> FontBBox . p . x > 0.5 || pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5	426:8:17171:17400	803643	0	True				
ANR	805584	OrExpression	pfont -> FontBBox . p . x >= pfont -> FontBBox . q . x || pfont -> FontBBox . p . y >= pfont -> FontBBox . q . y || pfont -> FontBBox . p . x < - 0.5 || pfont -> FontBBox . p . x > 0.5 || pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5		803643	0		||			
ANR	805585	RelationalExpression	pfont -> FontBBox . p . x >= pfont -> FontBBox . q . x		803643	0		>=			
ANR	805586	MemberAccess	pfont -> FontBBox . p . x		803643	0					
ANR	805587	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805588	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805589	Identifier	pfont		803643	0					
ANR	805590	Identifier	FontBBox		803643	1					
ANR	805591	Identifier	p		803643	1					
ANR	805592	Identifier	x		803643	1					
ANR	805593	MemberAccess	pfont -> FontBBox . q . x		803643	1					
ANR	805594	MemberAccess	pfont -> FontBBox . q		803643	0					
ANR	805595	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805596	Identifier	pfont		803643	0					
ANR	805597	Identifier	FontBBox		803643	1					
ANR	805598	Identifier	q		803643	1					
ANR	805599	Identifier	x		803643	1					
ANR	805600	OrExpression	pfont -> FontBBox . p . y >= pfont -> FontBBox . q . y || pfont -> FontBBox . p . x < - 0.5 || pfont -> FontBBox . p . x > 0.5 || pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5		803643	1		||			
ANR	805601	RelationalExpression	pfont -> FontBBox . p . y >= pfont -> FontBBox . q . y		803643	0		>=			
ANR	805602	MemberAccess	pfont -> FontBBox . p . y		803643	0					
ANR	805603	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805604	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805605	Identifier	pfont		803643	0					
ANR	805606	Identifier	FontBBox		803643	1					
ANR	805607	Identifier	p		803643	1					
ANR	805608	Identifier	y		803643	1					
ANR	805609	MemberAccess	pfont -> FontBBox . q . y		803643	1					
ANR	805610	MemberAccess	pfont -> FontBBox . q		803643	0					
ANR	805611	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805612	Identifier	pfont		803643	0					
ANR	805613	Identifier	FontBBox		803643	1					
ANR	805614	Identifier	q		803643	1					
ANR	805615	Identifier	y		803643	1					
ANR	805616	OrExpression	pfont -> FontBBox . p . x < - 0.5 || pfont -> FontBBox . p . x > 0.5 || pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5		803643	1		||			
ANR	805617	RelationalExpression	pfont -> FontBBox . p . x < - 0.5		803643	0		<			
ANR	805618	MemberAccess	pfont -> FontBBox . p . x		803643	0					
ANR	805619	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805620	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805621	Identifier	pfont		803643	0					
ANR	805622	Identifier	FontBBox		803643	1					
ANR	805623	Identifier	p		803643	1					
ANR	805624	Identifier	x		803643	1					
ANR	805625	UnaryOperationExpression	- 0.5		803643	1					
ANR	805626	UnaryOperator	-		803643	0					
ANR	805627	PrimaryExpression	0.5		803643	1					
ANR	805628	OrExpression	pfont -> FontBBox . p . x > 0.5 || pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5		803643	1		||			
ANR	805629	RelationalExpression	pfont -> FontBBox . p . x > 0.5		803643	0		>			
ANR	805630	MemberAccess	pfont -> FontBBox . p . x		803643	0					
ANR	805631	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805632	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805633	Identifier	pfont		803643	0					
ANR	805634	Identifier	FontBBox		803643	1					
ANR	805635	Identifier	p		803643	1					
ANR	805636	Identifier	x		803643	1					
ANR	805637	PrimaryExpression	0.5		803643	1					
ANR	805638	OrExpression	pfont -> FontBBox . p . y < - 0.5 || pfont -> FontBBox . p . y > 0.5		803643	1		||			
ANR	805639	RelationalExpression	pfont -> FontBBox . p . y < - 0.5		803643	0		<			
ANR	805640	MemberAccess	pfont -> FontBBox . p . y		803643	0					
ANR	805641	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805642	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805643	Identifier	pfont		803643	0					
ANR	805644	Identifier	FontBBox		803643	1					
ANR	805645	Identifier	p		803643	1					
ANR	805646	Identifier	y		803643	1					
ANR	805647	UnaryOperationExpression	- 0.5		803643	1					
ANR	805648	UnaryOperator	-		803643	0					
ANR	805649	PrimaryExpression	0.5		803643	1					
ANR	805650	RelationalExpression	pfont -> FontBBox . p . y > 0.5		803643	1		>			
ANR	805651	MemberAccess	pfont -> FontBBox . p . y		803643	0					
ANR	805652	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805653	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805654	Identifier	pfont		803643	0					
ANR	805655	Identifier	FontBBox		803643	1					
ANR	805656	Identifier	p		803643	1					
ANR	805657	Identifier	y		803643	1					
ANR	805658	PrimaryExpression	0.5		803643	1					
ANR	805659	CompoundStatement		282:8:12781:12823	803643	1					
ANR	805660	IdentifierDeclStatement	float upem = ( float ) pfont -> data . unitsPerEm ;	431:8:17422:17464	803643	0	True				
ANR	805661	IdentifierDecl	upem = ( float ) pfont -> data . unitsPerEm		803643	0					
ANR	805662	IdentifierDeclType	float		803643	0					
ANR	805663	Identifier	upem		803643	1					
ANR	805664	AssignmentExpression	upem = ( float ) pfont -> data . unitsPerEm		803643	2		=			
ANR	805665	Identifier	upem		803643	0					
ANR	805666	CastExpression	( float ) pfont -> data . unitsPerEm		803643	1					
ANR	805667	CastTarget	float		803643	0					
ANR	805668	MemberAccess	pfont -> data . unitsPerEm		803643	1					
ANR	805669	PtrMemberAccess	pfont -> data		803643	0					
ANR	805670	Identifier	pfont		803643	0					
ANR	805671	Identifier	data		803643	1					
ANR	805672	Identifier	unitsPerEm		803643	1					
ANR	805673	ExpressionStatement	pfont -> FontBBox . p . x = S16 ( head_box ) / upem	433:8:17475:17517	803643	1	True				
ANR	805674	AssignmentExpression	pfont -> FontBBox . p . x = S16 ( head_box ) / upem		803643	0		=			
ANR	805675	MemberAccess	pfont -> FontBBox . p . x		803643	0					
ANR	805676	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805677	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805678	Identifier	pfont		803643	0					
ANR	805679	Identifier	FontBBox		803643	1					
ANR	805680	Identifier	p		803643	1					
ANR	805681	Identifier	x		803643	1					
ANR	805682	MultiplicativeExpression	S16 ( head_box ) / upem		803643	1		/			
ANR	805683	CallExpression	S16 ( head_box )		803643	0					
ANR	805684	Callee	S16		803643	0					
ANR	805685	Identifier	S16		803643	0					
ANR	805686	ArgumentList	head_box		803643	1					
ANR	805687	Argument	head_box		803643	0					
ANR	805688	Identifier	head_box		803643	0					
ANR	805689	Identifier	upem		803643	1					
ANR	805690	ExpressionStatement	pfont -> FontBBox . p . y = S16 ( head_box + 2 ) / upem	434:8:17527:17573	803643	2	True				
ANR	805691	AssignmentExpression	pfont -> FontBBox . p . y = S16 ( head_box + 2 ) / upem		803643	0		=			
ANR	805692	MemberAccess	pfont -> FontBBox . p . y		803643	0					
ANR	805693	MemberAccess	pfont -> FontBBox . p		803643	0					
ANR	805694	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805695	Identifier	pfont		803643	0					
ANR	805696	Identifier	FontBBox		803643	1					
ANR	805697	Identifier	p		803643	1					
ANR	805698	Identifier	y		803643	1					
ANR	805699	MultiplicativeExpression	S16 ( head_box + 2 ) / upem		803643	1		/			
ANR	805700	CallExpression	S16 ( head_box + 2 )		803643	0					
ANR	805701	Callee	S16		803643	0					
ANR	805702	Identifier	S16		803643	0					
ANR	805703	ArgumentList	head_box + 2		803643	1					
ANR	805704	Argument	head_box + 2		803643	0					
ANR	805705	AdditiveExpression	head_box + 2		803643	0		+			
ANR	805706	Identifier	head_box		803643	0					
ANR	805707	PrimaryExpression	2		803643	1					
ANR	805708	Identifier	upem		803643	1					
ANR	805709	ExpressionStatement	pfont -> FontBBox . q . x = S16 ( head_box + 4 ) / upem	435:8:17583:17629	803643	3	True				
ANR	805710	AssignmentExpression	pfont -> FontBBox . q . x = S16 ( head_box + 4 ) / upem		803643	0		=			
ANR	805711	MemberAccess	pfont -> FontBBox . q . x		803643	0					
ANR	805712	MemberAccess	pfont -> FontBBox . q		803643	0					
ANR	805713	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805714	Identifier	pfont		803643	0					
ANR	805715	Identifier	FontBBox		803643	1					
ANR	805716	Identifier	q		803643	1					
ANR	805717	Identifier	x		803643	1					
ANR	805718	MultiplicativeExpression	S16 ( head_box + 4 ) / upem		803643	1		/			
ANR	805719	CallExpression	S16 ( head_box + 4 )		803643	0					
ANR	805720	Callee	S16		803643	0					
ANR	805721	Identifier	S16		803643	0					
ANR	805722	ArgumentList	head_box + 4		803643	1					
ANR	805723	Argument	head_box + 4		803643	0					
ANR	805724	AdditiveExpression	head_box + 4		803643	0		+			
ANR	805725	Identifier	head_box		803643	0					
ANR	805726	PrimaryExpression	4		803643	1					
ANR	805727	Identifier	upem		803643	1					
ANR	805728	ExpressionStatement	pfont -> FontBBox . q . y = S16 ( head_box + 6 ) / upem	436:8:17639:17685	803643	4	True				
ANR	805729	AssignmentExpression	pfont -> FontBBox . q . y = S16 ( head_box + 6 ) / upem		803643	0		=			
ANR	805730	MemberAccess	pfont -> FontBBox . q . y		803643	0					
ANR	805731	MemberAccess	pfont -> FontBBox . q		803643	0					
ANR	805732	PtrMemberAccess	pfont -> FontBBox		803643	0					
ANR	805733	Identifier	pfont		803643	0					
ANR	805734	Identifier	FontBBox		803643	1					
ANR	805735	Identifier	q		803643	1					
ANR	805736	Identifier	y		803643	1					
ANR	805737	MultiplicativeExpression	S16 ( head_box + 6 ) / upem		803643	1		/			
ANR	805738	CallExpression	S16 ( head_box + 6 )		803643	0					
ANR	805739	Callee	S16		803643	0					
ANR	805740	Identifier	S16		803643	0					
ANR	805741	ArgumentList	head_box + 6		803643	1					
ANR	805742	Argument	head_box + 6		803643	0					
ANR	805743	AdditiveExpression	head_box + 6		803643	0		+			
ANR	805744	Identifier	head_box		803643	0					
ANR	805745	PrimaryExpression	6		803643	1					
ANR	805746	Identifier	upem		803643	1					
ANR	805747	ExpressionStatement	pfont -> data . warning_patented = false	438:4:17697:17733	803643	39	True				
ANR	805748	AssignmentExpression	pfont -> data . warning_patented = false		803643	0		=			
ANR	805749	MemberAccess	pfont -> data . warning_patented		803643	0					
ANR	805750	PtrMemberAccess	pfont -> data		803643	0					
ANR	805751	Identifier	pfont		803643	0					
ANR	805752	Identifier	data		803643	1					
ANR	805753	Identifier	warning_patented		803643	1					
ANR	805754	Identifier	false		803643	1					
ANR	805755	ExpressionStatement	pfont -> data . warning_bad_instruction = false	439:4:17739:17782	803643	40	True				
ANR	805756	AssignmentExpression	pfont -> data . warning_bad_instruction = false		803643	0		=			
ANR	805757	MemberAccess	pfont -> data . warning_bad_instruction		803643	0					
ANR	805758	PtrMemberAccess	pfont -> data		803643	0					
ANR	805759	Identifier	pfont		803643	0					
ANR	805760	Identifier	data		803643	1					
ANR	805761	Identifier	warning_bad_instruction		803643	1					
ANR	805762	Identifier	false		803643	1					
ANR	805763	ExpressionStatement	pfont -> data . get_glyph_index = default_get_glyph_index	440:4:17788:17841	803643	41	True				
ANR	805764	AssignmentExpression	pfont -> data . get_glyph_index = default_get_glyph_index		803643	0		=			
ANR	805765	MemberAccess	pfont -> data . get_glyph_index		803643	0					
ANR	805766	PtrMemberAccess	pfont -> data		803643	0					
ANR	805767	Identifier	pfont		803643	0					
ANR	805768	Identifier	data		803643	1					
ANR	805769	Identifier	get_glyph_index		803643	1					
ANR	805770	Identifier	default_get_glyph_index		803643	1					
ANR	805771	ExpressionStatement	pfont -> data . get_outline = default_get_outline	441:4:17847:17892	803643	42	True				
ANR	805772	AssignmentExpression	pfont -> data . get_outline = default_get_outline		803643	0		=			
ANR	805773	MemberAccess	pfont -> data . get_outline		803643	0					
ANR	805774	PtrMemberAccess	pfont -> data		803643	0					
ANR	805775	Identifier	pfont		803643	0					
ANR	805776	Identifier	data		803643	1					
ANR	805777	Identifier	get_outline		803643	1					
ANR	805778	Identifier	default_get_outline		803643	1					
ANR	805779	ExpressionStatement	pfont -> data . get_metrics = gs_type42_default_get_metrics	442:4:17898:17953	803643	43	True				
ANR	805780	AssignmentExpression	pfont -> data . get_metrics = gs_type42_default_get_metrics		803643	0		=			
ANR	805781	MemberAccess	pfont -> data . get_metrics		803643	0					
ANR	805782	PtrMemberAccess	pfont -> data		803643	0					
ANR	805783	Identifier	pfont		803643	0					
ANR	805784	Identifier	data		803643	1					
ANR	805785	Identifier	get_metrics		803643	1					
ANR	805786	Identifier	gs_type42_default_get_metrics		803643	1					
ANR	805787	ExpressionStatement	pfont -> procs . glyph_outline = gs_type42_glyph_outline	443:4:17959:18011	803643	44	True				
ANR	805788	AssignmentExpression	pfont -> procs . glyph_outline = gs_type42_glyph_outline		803643	0		=			
ANR	805789	MemberAccess	pfont -> procs . glyph_outline		803643	0					
ANR	805790	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805791	Identifier	pfont		803643	0					
ANR	805792	Identifier	procs		803643	1					
ANR	805793	Identifier	glyph_outline		803643	1					
ANR	805794	Identifier	gs_type42_glyph_outline		803643	1					
ANR	805795	ExpressionStatement	pfont -> procs . glyph_info = gs_type42_glyph_info	444:4:18017:18063	803643	45	True				
ANR	805796	AssignmentExpression	pfont -> procs . glyph_info = gs_type42_glyph_info		803643	0		=			
ANR	805797	MemberAccess	pfont -> procs . glyph_info		803643	0					
ANR	805798	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805799	Identifier	pfont		803643	0					
ANR	805800	Identifier	procs		803643	1					
ANR	805801	Identifier	glyph_info		803643	1					
ANR	805802	Identifier	gs_type42_glyph_info		803643	1					
ANR	805803	ExpressionStatement	pfont -> procs . enumerate_glyph = gs_type42_enumerate_glyph	445:4:18069:18125	803643	46	True				
ANR	805804	AssignmentExpression	pfont -> procs . enumerate_glyph = gs_type42_enumerate_glyph		803643	0		=			
ANR	805805	MemberAccess	pfont -> procs . enumerate_glyph		803643	0					
ANR	805806	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805807	Identifier	pfont		803643	0					
ANR	805808	Identifier	procs		803643	1					
ANR	805809	Identifier	enumerate_glyph		803643	1					
ANR	805810	Identifier	gs_type42_enumerate_glyph		803643	1					
ANR	805811	ExpressionStatement	pfont -> procs . font_info = gs_type42_font_info	446:4:18131:18175	803643	47	True				
ANR	805812	AssignmentExpression	pfont -> procs . font_info = gs_type42_font_info		803643	0		=			
ANR	805813	MemberAccess	pfont -> procs . font_info		803643	0					
ANR	805814	PtrMemberAccess	pfont -> procs		803643	0					
ANR	805815	Identifier	pfont		803643	0					
ANR	805816	Identifier	procs		803643	1					
ANR	805817	Identifier	font_info		803643	1					
ANR	805818	Identifier	gs_type42_font_info		803643	1					
ANR	805819	ReturnStatement	return 0 ;	447:4:18181:18189	803643	48	True				
ANR	805820	PrimaryExpression	0		803643	0					
ANR	805821	ReturnType	int		803643	1					
ANR	805822	Identifier	gs_type42_font_init		803643	2					
ANR	805823	ParameterList	"gs_font_type42 * pfont , int subfontID"		803643	3					
ANR	805824	Parameter	gs_font_type42 * pfont	149:20:4601:4622	803643	0	True				
ANR	805825	ParameterType	gs_font_type42 *		803643	0					
ANR	805826	Identifier	pfont		803643	1					
ANR	805827	Parameter	int subfontID	149:44:4625:4637	803643	1	True				
ANR	805828	ParameterType	int		803643	0					
ANR	805829	Identifier	subfontID		803643	1					
ANR	805830	CFGEntryNode	ENTRY		803643		True				
ANR	805831	CFGExitNode	EXIT		803643		True				
ANR	805832	Symbol	pfont -> data . maxContours		803643						
ANR	805833	Symbol	pfont -> data . maxCContours		803643						
ANR	805834	Symbol	OffsetTableOffset		803643						
ANR	805835	Symbol	* pfont -> data		803643						
ANR	805836	Symbol	pfont -> data . name_offset		803643						
ANR	805837	Symbol	gs_type42_default_get_metrics		803643						
ANR	805838	Symbol	OffsetTable		803643						
ANR	805839	Symbol	version_ttcf		803643						
ANR	805840	Symbol	pfont -> data . trueNumGlyphs		803643						
ANR	805841	Symbol	pfont -> data . metrics [ 1 ] . numMetrics		803643						
ANR	805842	Symbol	gs_type42_font_init_compare		803643						
ANR	805843	Symbol	psort -> glyph_offset		803643						
ANR	805844	Symbol	pfont -> data . warning_bad_instruction		803643						
ANR	805845	Symbol	numFonts		803643						
ANR	805846	Symbol	* pfont -> data . metrics		803643						
ANR	805847	Symbol	gs_type42_read_data		803643						
ANR	805848	Symbol	pfont -> data . unitsPerEm		803643						
ANR	805849	Symbol	* buf		803643						
ANR	805850	Symbol	pfont -> data . len_glyphs		803643						
ANR	805851	Symbol	pfont -> is_resource		803643						
ANR	805852	Symbol	version		803643						
ANR	805853	Symbol	MAX_NUM_TT_TABLES		803643						
ANR	805854	Symbol	pfont -> procs . glyph_outline		803643						
ANR	805855	Symbol	pfont -> data . warning_patented		803643						
ANR	805856	Symbol	pfont -> data . glyf		803643						
ANR	805857	Symbol	psort -> glyph_num		803643						
ANR	805858	Symbol	* psort -> glyph_num		803643						
ANR	805859	Symbol	pfont -> data . os2_offset		803643						
ANR	805860	Symbol	pfont -> FontBBox . p		803643						
ANR	805861	Symbol	U16		803643						
ANR	805862	Symbol	pfont -> FontBBox . q		803643						
ANR	805863	Symbol	string_proc		803643						
ANR	805864	Symbol	pfont -> procs		803643						
ANR	805865	Symbol	gs_type42_enumerate_glyph		803643						
ANR	805866	Symbol	gs_type42_glyph_outline		803643						
ANR	805867	Symbol	pfont -> memory		803643						
ANR	805868	Symbol	glyph_size		803643						
ANR	805869	Symbol	pfont -> data . string_proc		803643						
ANR	805870	Symbol	* * pfont		803643						
ANR	805871	Symbol	psort [ - 1 ] . glyph_length		803643						
ANR	805872	Symbol	psortary		803643						
ANR	805873	Symbol	get_glyph_offset		803643						
ANR	805874	Symbol	min		803643						
ANR	805875	Symbol	pfont -> FontType		803643						
ANR	805876	Symbol	last_glyph_offset		803643						
ANR	805877	Symbol	pfont -> font_name . size		803643						
ANR	805878	Symbol	* num_valid_loca_elm		803643						
ANR	805879	Symbol	psortary -> glyph_offset		803643						
ANR	805880	Symbol	* psort		803643						
ANR	805881	Symbol	gs_error_invalidfont		803643						
ANR	805882	Symbol	pfont -> FontBBox		803643						
ANR	805883	Symbol	pfont -> data . proc_data		803643						
ANR	805884	Symbol	pfont -> font_name		803643						
ANR	805885	Symbol	pfont -> procs . enumerate_glyph		803643						
ANR	805886	Symbol	pfont -> data		803643						
ANR	805887	Symbol	i		803643						
ANR	805888	Symbol	l		803643						
ANR	805889	Symbol	gs_type42_glyph_info		803643						
ANR	805890	Symbol	pfont -> procs . glyph_info		803643						
ANR	805891	Symbol	psort		803643						
ANR	805892	Symbol	head_box		803643						
ANR	805893	Symbol	pfont -> data . get_glyph_index		803643						
ANR	805894	Symbol	version_true		803643						
ANR	805895	Symbol	buf		803643						
ANR	805896	Symbol	pfont -> data . get_outline		803643						
ANR	805897	Symbol	gs_alloc_byte_array		803643						
ANR	805898	Symbol	pfont -> data . loca		803643						
ANR	805899	Symbol	pfont -> FontBBox . q . y		803643						
ANR	805900	Symbol	* * psort		803643						
ANR	805901	Symbol	gs_error_rangecheck		803643						
ANR	805902	Symbol	pfont -> data . cmap		803643						
ANR	805903	Symbol	glyph_start		803643						
ANR	805904	Symbol	pfont -> FontBBox . q . x		803643						
ANR	805905	Symbol	default_get_outline		803643						
ANR	805906	Symbol	pfont -> font_name . chars		803643						
ANR	805907	Symbol	proc_data		803643						
ANR	805908	Symbol	gs_type42_font_info		803643						
ANR	805909	Symbol	num_valid_loca_elm		803643						
ANR	805910	Symbol	memcmp		803643						
ANR	805911	Symbol	tab		803643						
ANR	805912	Symbol	u32		803643						
ANR	805913	Symbol	pfont -> data . metrics [ 0 ] . offset		803643						
ANR	805914	Symbol	* pfont -> data . len_glyphs		803643						
ANR	805915	Symbol	pfont -> data . maxPoints		803643						
ANR	805916	Symbol	pfont -> data . numGlyphs		803643						
ANR	805917	Symbol	pfont -> data . indexToLocFormat		803643						
ANR	805918	Symbol	* psortary		803643						
ANR	805919	Symbol	& pfont -> data		803643						
ANR	805920	Symbol	pfont -> key_name . chars		803643						
ANR	805921	Symbol	NULL		803643						
ANR	805922	Symbol	offset		803643						
ANR	805923	Symbol	gs_gsub_release		803643						
ANR	805924	Symbol	TableDirectory		803643						
ANR	805925	Symbol	hhea		803643						
ANR	805926	Symbol	psort -> glyph_length		803643						
ANR	805927	Symbol	pfont -> key_name . size		803643						
ANR	805928	Symbol	ft_CID_TrueType		803643						
ANR	805929	Symbol	upem		803643						
ANR	805930	Symbol	S16		803643						
ANR	805931	Symbol	glyph_offset		803643						
ANR	805932	Symbol	numTables		803643						
ANR	805933	Symbol	maxp		803643						
ANR	805934	Symbol	pfont -> key_name		803643						
ANR	805935	Symbol	subfontID		803643						
ANR	805936	Symbol	version1_0		803643						
ANR	805937	Symbol	psortary -> glyph_num		803643						
ANR	805938	Symbol	code		803643						
ANR	805939	Symbol	pfont -> data . metrics [ 0 ] . numMetrics		803643						
ANR	805940	Symbol	pfont -> data . metrics [ 1 ] . offset		803643						
ANR	805941	Symbol	pfont -> data . metrics [ 1 ] . length		803643						
ANR	805942	Symbol	pfont -> procs . font_info		803643						
ANR	805943	Symbol	glyph_length		803643						
ANR	805944	Symbol	head		803643						
ANR	805945	Symbol	old_length		803643						
ANR	805946	Symbol	pfont -> data . gsub_size		803643						
ANR	805947	Symbol	psortary [ num_valid_loca_elm - 1 ] . glyph_offset		803643						
ANR	805948	Symbol	pfont -> data . maxCPoints		803643						
ANR	805949	Symbol	loca_size		803643						
ANR	805950	Symbol	last_offset		803643						
ANR	805951	Symbol	default_get_glyph_index		803643						
ANR	805952	Symbol	gs_len_glyphs_release		803643						
ANR	805953	Symbol	pfont		803643						
ANR	805954	Symbol	pfont -> data . metrics		803643						
ANR	805955	Symbol	gs_font_notify_register		803643						
ANR	805956	Symbol	false		803643						
ANR	805957	Symbol	pfont -> data . gsub		803643						
ANR	805958	Symbol	gs_error_VMerror		803643						
ANR	805959	Symbol	* pfont		803643						
ANR	805960	Symbol	pfont -> data . get_metrics		803643						
ANR	805961	Symbol	* i		803643						
ANR	805962	Symbol	pfont -> FontBBox . p . x		803643						
ANR	805963	Symbol	pfont -> FontBBox . p . y		803643						
ANR	805964	Symbol	* l		803643						
ANR	805965	Symbol	vhea		803643						
ANR	805966	Symbol	pfont -> data . metrics [ 0 ] . length		803643						
ANR	805967	Function	gs_len_glyphs_release	450:0:18194:18484							
ANR	805968	FunctionDef	"gs_len_glyphs_release (void * data , void * event)"		805967	0					
ANR	805969	CompoundStatement		452:0:18245:18484	805967	0					
ANR	805970	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) data ;	453:4:18251:18297	805967	0	True				
ANR	805971	IdentifierDecl	* pfont = ( gs_font_type42 * ) data		805967	0					
ANR	805972	IdentifierDeclType	gs_font_type42 *		805967	0					
ANR	805973	Identifier	pfont		805967	1					
ANR	805974	AssignmentExpression	* pfont = ( gs_font_type42 * ) data		805967	2		=			
ANR	805975	Identifier	pfont		805967	0					
ANR	805976	CastExpression	( gs_font_type42 * ) data		805967	1					
ANR	805977	CastTarget	gs_font_type42 *		805967	0					
ANR	805978	Identifier	data		805967	1					
ANR	805979	ExpressionStatement	"gs_font_notify_unregister ( ( gs_font * ) pfont , gs_len_glyphs_release , ( void * ) data )"	455:4:18304:18384	805967	1	True				
ANR	805980	CallExpression	"gs_font_notify_unregister ( ( gs_font * ) pfont , gs_len_glyphs_release , ( void * ) data )"		805967	0					
ANR	805981	Callee	gs_font_notify_unregister		805967	0					
ANR	805982	Identifier	gs_font_notify_unregister		805967	0					
ANR	805983	ArgumentList	( gs_font * ) pfont		805967	1					
ANR	805984	Argument	( gs_font * ) pfont		805967	0					
ANR	805985	CastExpression	( gs_font * ) pfont		805967	0					
ANR	805986	CastTarget	gs_font *		805967	0					
ANR	805987	Identifier	pfont		805967	1					
ANR	805988	Argument	gs_len_glyphs_release		805967	1					
ANR	805989	Identifier	gs_len_glyphs_release		805967	0					
ANR	805990	Argument	( void * ) data		805967	2					
ANR	805991	CastExpression	( void * ) data		805967	0					
ANR	805992	CastTarget	void *		805967	0					
ANR	805993	Identifier	data		805967	1					
ANR	805994	ExpressionStatement	"gs_free_object ( pfont -> memory , pfont -> data . len_glyphs , ""gs_len_glyphs_release"" )"	456:4:18390:18468	805967	2	True				
ANR	805995	CallExpression	"gs_free_object ( pfont -> memory , pfont -> data . len_glyphs , ""gs_len_glyphs_release"" )"		805967	0					
ANR	805996	Callee	gs_free_object		805967	0					
ANR	805997	Identifier	gs_free_object		805967	0					
ANR	805998	ArgumentList	pfont -> memory		805967	1					
ANR	805999	Argument	pfont -> memory		805967	0					
ANR	806000	PtrMemberAccess	pfont -> memory		805967	0					
ANR	806001	Identifier	pfont		805967	0					
ANR	806002	Identifier	memory		805967	1					
ANR	806003	Argument	pfont -> data . len_glyphs		805967	1					
ANR	806004	MemberAccess	pfont -> data . len_glyphs		805967	0					
ANR	806005	PtrMemberAccess	pfont -> data		805967	0					
ANR	806006	Identifier	pfont		805967	0					
ANR	806007	Identifier	data		805967	1					
ANR	806008	Identifier	len_glyphs		805967	1					
ANR	806009	Argument	"""gs_len_glyphs_release"""		805967	2					
ANR	806010	PrimaryExpression	"""gs_len_glyphs_release"""		805967	0					
ANR	806011	ReturnStatement	return 0 ;	457:4:18474:18482	805967	3	True				
ANR	806012	PrimaryExpression	0		805967	0					
ANR	806013	ReturnType	int		805967	1					
ANR	806014	Identifier	gs_len_glyphs_release		805967	2					
ANR	806015	ParameterList	"void * data , void * event"		805967	3					
ANR	806016	Parameter	void * data	451:22:18220:18229	805967	0	True				
ANR	806017	ParameterType	void *		805967	0					
ANR	806018	Identifier	data		805967	1					
ANR	806019	Parameter	void * event	451:34:18232:18242	805967	1	True				
ANR	806020	ParameterType	void *		805967	0					
ANR	806021	Identifier	event		805967	1					
ANR	806022	CFGEntryNode	ENTRY		805967		True				
ANR	806023	CFGExitNode	EXIT		805967		True				
ANR	806024	Symbol	gs_len_glyphs_release		805967						
ANR	806025	Symbol	* pfont		805967						
ANR	806026	Symbol	data		805967						
ANR	806027	Symbol	pfont -> memory		805967						
ANR	806028	Symbol	pfont		805967						
ANR	806029	Symbol	pfont -> data . len_glyphs		805967						
ANR	806030	Symbol	pfont -> data		805967						
ANR	806031	Symbol	event		805967						
ANR	806032	Function	gs_gsub_release	460:0:18487:18753							
ANR	806033	FunctionDef	"gs_gsub_release (void * data , void * event)"		806032	0					
ANR	806034	CompoundStatement		462:0:18532:18753	806032	0					
ANR	806035	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) data ;	463:4:18538:18584	806032	0	True				
ANR	806036	IdentifierDecl	* pfont = ( gs_font_type42 * ) data		806032	0					
ANR	806037	IdentifierDeclType	gs_font_type42 *		806032	0					
ANR	806038	Identifier	pfont		806032	1					
ANR	806039	AssignmentExpression	* pfont = ( gs_font_type42 * ) data		806032	2		=			
ANR	806040	Identifier	pfont		806032	0					
ANR	806041	CastExpression	( gs_font_type42 * ) data		806032	1					
ANR	806042	CastTarget	gs_font_type42 *		806032	0					
ANR	806043	Identifier	data		806032	1					
ANR	806044	ExpressionStatement	"gs_font_notify_unregister ( ( gs_font * ) pfont , gs_gsub_release , ( void * ) data )"	465:4:18591:18665	806032	1	True				
ANR	806045	CallExpression	"gs_font_notify_unregister ( ( gs_font * ) pfont , gs_gsub_release , ( void * ) data )"		806032	0					
ANR	806046	Callee	gs_font_notify_unregister		806032	0					
ANR	806047	Identifier	gs_font_notify_unregister		806032	0					
ANR	806048	ArgumentList	( gs_font * ) pfont		806032	1					
ANR	806049	Argument	( gs_font * ) pfont		806032	0					
ANR	806050	CastExpression	( gs_font * ) pfont		806032	0					
ANR	806051	CastTarget	gs_font *		806032	0					
ANR	806052	Identifier	pfont		806032	1					
ANR	806053	Argument	gs_gsub_release		806032	1					
ANR	806054	Identifier	gs_gsub_release		806032	0					
ANR	806055	Argument	( void * ) data		806032	2					
ANR	806056	CastExpression	( void * ) data		806032	0					
ANR	806057	CastTarget	void *		806032	0					
ANR	806058	Identifier	data		806032	1					
ANR	806059	ExpressionStatement	"gs_free_object ( pfont -> memory , pfont -> data . gsub , ""gs_gsub_release"" )"	466:4:18671:18737	806032	2	True				
ANR	806060	CallExpression	"gs_free_object ( pfont -> memory , pfont -> data . gsub , ""gs_gsub_release"" )"		806032	0					
ANR	806061	Callee	gs_free_object		806032	0					
ANR	806062	Identifier	gs_free_object		806032	0					
ANR	806063	ArgumentList	pfont -> memory		806032	1					
ANR	806064	Argument	pfont -> memory		806032	0					
ANR	806065	PtrMemberAccess	pfont -> memory		806032	0					
ANR	806066	Identifier	pfont		806032	0					
ANR	806067	Identifier	memory		806032	1					
ANR	806068	Argument	pfont -> data . gsub		806032	1					
ANR	806069	MemberAccess	pfont -> data . gsub		806032	0					
ANR	806070	PtrMemberAccess	pfont -> data		806032	0					
ANR	806071	Identifier	pfont		806032	0					
ANR	806072	Identifier	data		806032	1					
ANR	806073	Identifier	gsub		806032	1					
ANR	806074	Argument	"""gs_gsub_release"""		806032	2					
ANR	806075	PrimaryExpression	"""gs_gsub_release"""		806032	0					
ANR	806076	ReturnStatement	return 0 ;	467:4:18743:18751	806032	3	True				
ANR	806077	PrimaryExpression	0		806032	0					
ANR	806078	ReturnType	int		806032	1					
ANR	806079	Identifier	gs_gsub_release		806032	2					
ANR	806080	ParameterList	"void * data , void * event"		806032	3					
ANR	806081	Parameter	void * data	461:16:18507:18516	806032	0	True				
ANR	806082	ParameterType	void *		806032	0					
ANR	806083	Identifier	data		806032	1					
ANR	806084	Parameter	void * event	461:28:18519:18529	806032	1	True				
ANR	806085	ParameterType	void *		806032	0					
ANR	806086	Identifier	event		806032	1					
ANR	806087	CFGEntryNode	ENTRY		806032		True				
ANR	806088	CFGExitNode	EXIT		806032		True				
ANR	806089	Symbol	* pfont		806032						
ANR	806090	Symbol	data		806032						
ANR	806091	Symbol	pfont -> memory		806032						
ANR	806092	Symbol	pfont		806032						
ANR	806093	Symbol	gs_gsub_release		806032						
ANR	806094	Symbol	pfont -> data		806032						
ANR	806095	Symbol	pfont -> data . gsub		806032						
ANR	806096	Symbol	event		806032						
ANR	806097	Function	gs_type42_parse_component	477:0:18972:21390							
ANR	806098	FunctionDef	"gs_type42_parse_component (const byte * * pdata , uint * pflags , gs_matrix_fixed * psmat , int * pmp , const gs_font_type42 * pfont , const gs_matrix_fixed * pmat)"		806097	0					
ANR	806099	CompoundStatement		481:0:19202:21390	806097	0					
ANR	806100	IdentifierDeclStatement	const byte * gdata = * pdata ;	482:4:19208:19234	806097	0	True				
ANR	806101	IdentifierDecl	* gdata = * pdata		806097	0					
ANR	806102	IdentifierDeclType	const byte *		806097	0					
ANR	806103	Identifier	gdata		806097	1					
ANR	806104	AssignmentExpression	* gdata = * pdata		806097	2		=			
ANR	806105	Identifier	gdata		806097	0					
ANR	806106	UnaryOperationExpression	* pdata		806097	1					
ANR	806107	UnaryOperator	*		806097	0					
ANR	806108	Identifier	pdata		806097	1					
ANR	806109	IdentifierDeclStatement	uint flags ;	483:4:19240:19250	806097	1	True				
ANR	806110	IdentifierDecl	flags		806097	0					
ANR	806111	IdentifierDeclType	uint		806097	0					
ANR	806112	Identifier	flags		806097	1					
ANR	806113	IdentifierDeclStatement	double factor = 1.0 / pfont -> data . unitsPerEm ;	484:4:19256:19300	806097	2	True				
ANR	806114	IdentifierDecl	factor = 1.0 / pfont -> data . unitsPerEm		806097	0					
ANR	806115	IdentifierDeclType	double		806097	0					
ANR	806116	Identifier	factor		806097	1					
ANR	806117	AssignmentExpression	factor = 1.0 / pfont -> data . unitsPerEm		806097	2		=			
ANR	806118	Identifier	factor		806097	0					
ANR	806119	MultiplicativeExpression	1.0 / pfont -> data . unitsPerEm		806097	1		/			
ANR	806120	PrimaryExpression	1.0		806097	0					
ANR	806121	MemberAccess	pfont -> data . unitsPerEm		806097	1					
ANR	806122	PtrMemberAccess	pfont -> data		806097	0					
ANR	806123	Identifier	pfont		806097	0					
ANR	806124	Identifier	data		806097	1					
ANR	806125	Identifier	unitsPerEm		806097	1					
ANR	806126	IdentifierDeclStatement	gs_matrix_fixed mat ;	485:4:19306:19325	806097	3	True				
ANR	806127	IdentifierDecl	mat		806097	0					
ANR	806128	IdentifierDeclType	gs_matrix_fixed		806097	0					
ANR	806129	Identifier	mat		806097	1					
ANR	806130	IdentifierDeclStatement	gs_matrix scale_mat ;	486:4:19331:19350	806097	4	True				
ANR	806131	IdentifierDecl	scale_mat		806097	0					
ANR	806132	IdentifierDeclType	gs_matrix		806097	0					
ANR	806133	Identifier	scale_mat		806097	1					
ANR	806134	ExpressionStatement	flags = U16 ( gdata )	488:4:19357:19375	806097	5	True				
ANR	806135	AssignmentExpression	flags = U16 ( gdata )		806097	0		=			
ANR	806136	Identifier	flags		806097	0					
ANR	806137	CallExpression	U16 ( gdata )		806097	1					
ANR	806138	Callee	U16		806097	0					
ANR	806139	Identifier	U16		806097	0					
ANR	806140	ArgumentList	gdata		806097	1					
ANR	806141	Argument	gdata		806097	0					
ANR	806142	Identifier	gdata		806097	0					
ANR	806143	ExpressionStatement	gdata += 4	489:4:19381:19391	806097	6	True				
ANR	806144	AssignmentExpression	gdata += 4		806097	0		+=			
ANR	806145	Identifier	gdata		806097	0					
ANR	806146	PrimaryExpression	4		806097	1					
ANR	806147	ExpressionStatement	mat = * pmat	490:4:19397:19408	806097	7	True				
ANR	806148	AssignmentExpression	mat = * pmat		806097	0		=			
ANR	806149	Identifier	mat		806097	0					
ANR	806150	UnaryOperationExpression	* pmat		806097	1					
ANR	806151	UnaryOperator	*		806097	0					
ANR	806152	Identifier	pmat		806097	1					
ANR	806153	IfStatement	if ( flags & TT_CG_ARGS_ARE_XY_VALUES )		806097	8					
ANR	806154	Condition	flags & TT_CG_ARGS_ARE_XY_VALUES	491:8:19418:19449	806097	0	True				
ANR	806155	BitAndExpression	flags & TT_CG_ARGS_ARE_XY_VALUES		806097	0		&			
ANR	806156	Identifier	flags		806097	0					
ANR	806157	Identifier	TT_CG_ARGS_ARE_XY_VALUES		806097	1					
ANR	806158	CompoundStatement		13:8:283:300	806097	1					
ANR	806159	IdentifierDeclStatement	"int arg1 , arg2 ;"	492:8:19462:19476	806097	0	True				
ANR	806160	IdentifierDecl	arg1		806097	0					
ANR	806161	IdentifierDeclType	int		806097	0					
ANR	806162	Identifier	arg1		806097	1					
ANR	806163	IdentifierDecl	arg2		806097	1					
ANR	806164	IdentifierDeclType	int		806097	0					
ANR	806165	Identifier	arg2		806097	1					
ANR	806166	IdentifierDeclStatement	gs_fixed_point pt ;	493:8:19486:19503	806097	1	True				
ANR	806167	IdentifierDecl	pt		806097	0					
ANR	806168	IdentifierDeclType	gs_fixed_point		806097	0					
ANR	806169	Identifier	pt		806097	1					
ANR	806170	IfStatement	if ( flags & TT_CG_ARGS_ARE_WORDS )		806097	2					
ANR	806171	Condition	flags & TT_CG_ARGS_ARE_WORDS	495:12:19518:19545	806097	0	True				
ANR	806172	BitAndExpression	flags & TT_CG_ARGS_ARE_WORDS		806097	0		&			
ANR	806173	Identifier	flags		806097	0					
ANR	806174	Identifier	TT_CG_ARGS_ARE_WORDS		806097	1					
ANR	806175	ExpressionStatement	"arg1 = S16 ( gdata ) , arg2 = S16 ( gdata + 2 ) , gdata += 4"	496:12:19560:19612	806097	1	True				
ANR	806176	Expression	"arg1 = S16 ( gdata ) , arg2 = S16 ( gdata + 2 ) , gdata += 4"		806097	0					
ANR	806177	AssignmentExpression	arg1 = S16 ( gdata )		806097	0		=			
ANR	806178	Identifier	arg1		806097	0					
ANR	806179	CallExpression	S16 ( gdata )		806097	1					
ANR	806180	Callee	S16		806097	0					
ANR	806181	Identifier	S16		806097	0					
ANR	806182	ArgumentList	gdata		806097	1					
ANR	806183	Argument	gdata		806097	0					
ANR	806184	Identifier	gdata		806097	0					
ANR	806185	Expression	"arg2 = S16 ( gdata + 2 ) , gdata += 4"		806097	1					
ANR	806186	AssignmentExpression	arg2 = S16 ( gdata + 2 )		806097	0		=			
ANR	806187	Identifier	arg2		806097	0					
ANR	806188	CallExpression	S16 ( gdata + 2 )		806097	1					
ANR	806189	Callee	S16		806097	0					
ANR	806190	Identifier	S16		806097	0					
ANR	806191	ArgumentList	gdata + 2		806097	1					
ANR	806192	Argument	gdata + 2		806097	0					
ANR	806193	AdditiveExpression	gdata + 2		806097	0		+			
ANR	806194	Identifier	gdata		806097	0					
ANR	806195	PrimaryExpression	2		806097	1					
ANR	806196	AssignmentExpression	gdata += 4		806097	1		+=			
ANR	806197	Identifier	gdata		806097	0					
ANR	806198	PrimaryExpression	4		806097	1					
ANR	806199	ElseStatement	else		806097	0					
ANR	806200	ExpressionStatement	"arg1 = S8 ( gdata ) , arg2 = S8 ( gdata + 1 ) , gdata += 2"	498:12:19639:19689	806097	0	True				
ANR	806201	Expression	"arg1 = S8 ( gdata ) , arg2 = S8 ( gdata + 1 ) , gdata += 2"		806097	0					
ANR	806202	AssignmentExpression	arg1 = S8 ( gdata )		806097	0		=			
ANR	806203	Identifier	arg1		806097	0					
ANR	806204	CallExpression	S8 ( gdata )		806097	1					
ANR	806205	Callee	S8		806097	0					
ANR	806206	Identifier	S8		806097	0					
ANR	806207	ArgumentList	gdata		806097	1					
ANR	806208	Argument	gdata		806097	0					
ANR	806209	Identifier	gdata		806097	0					
ANR	806210	Expression	"arg2 = S8 ( gdata + 1 ) , gdata += 2"		806097	1					
ANR	806211	AssignmentExpression	arg2 = S8 ( gdata + 1 )		806097	0		=			
ANR	806212	Identifier	arg2		806097	0					
ANR	806213	CallExpression	S8 ( gdata + 1 )		806097	1					
ANR	806214	Callee	S8		806097	0					
ANR	806215	Identifier	S8		806097	0					
ANR	806216	ArgumentList	gdata + 1		806097	1					
ANR	806217	Argument	gdata + 1		806097	0					
ANR	806218	AdditiveExpression	gdata + 1		806097	0		+			
ANR	806219	Identifier	gdata		806097	0					
ANR	806220	PrimaryExpression	1		806097	1					
ANR	806221	AssignmentExpression	gdata += 2		806097	1		+=			
ANR	806222	Identifier	gdata		806097	0					
ANR	806223	PrimaryExpression	2		806097	1					
ANR	806224	IfStatement	if ( flags & TT_CG_ROUND_XY_TO_GRID )		806097	3					
ANR	806225	Condition	flags & TT_CG_ROUND_XY_TO_GRID	499:12:19703:19732	806097	0	True				
ANR	806226	BitAndExpression	flags & TT_CG_ROUND_XY_TO_GRID		806097	0		&			
ANR	806227	Identifier	flags		806097	0					
ANR	806228	Identifier	TT_CG_ROUND_XY_TO_GRID		806097	1					
ANR	806229	CompoundStatement		19:44:532:532	806097	1					
ANR	806230	ExpressionStatement	"gs_point_transform2fixed ( pmat , arg1 * factor , arg2 * factor , & pt )"	502:8:19816:19914	806097	4	True				
ANR	806231	CallExpression	"gs_point_transform2fixed ( pmat , arg1 * factor , arg2 * factor , & pt )"		806097	0					
ANR	806232	Callee	gs_point_transform2fixed		806097	0					
ANR	806233	Identifier	gs_point_transform2fixed		806097	0					
ANR	806234	ArgumentList	pmat		806097	1					
ANR	806235	Argument	pmat		806097	0					
ANR	806236	Identifier	pmat		806097	0					
ANR	806237	Argument	arg1 * factor		806097	1					
ANR	806238	MultiplicativeExpression	arg1 * factor		806097	0		*			
ANR	806239	Identifier	arg1		806097	0					
ANR	806240	Identifier	factor		806097	1					
ANR	806241	Argument	arg2 * factor		806097	2					
ANR	806242	MultiplicativeExpression	arg2 * factor		806097	0		*			
ANR	806243	Identifier	arg2		806097	0					
ANR	806244	Identifier	factor		806097	1					
ANR	806245	Argument	& pt		806097	3					
ANR	806246	UnaryOperationExpression	& pt		806097	0					
ANR	806247	UnaryOperator	&		806097	0					
ANR	806248	Identifier	pt		806097	1					
ANR	806249	ExpressionStatement	mat . tx = fixed2float ( mat . tx_fixed = pt . x )	505:8:19983:20024	806097	5	True				
ANR	806250	AssignmentExpression	mat . tx = fixed2float ( mat . tx_fixed = pt . x )		806097	0		=			
ANR	806251	MemberAccess	mat . tx		806097	0					
ANR	806252	Identifier	mat		806097	0					
ANR	806253	Identifier	tx		806097	1					
ANR	806254	CallExpression	fixed2float ( mat . tx_fixed = pt . x )		806097	1					
ANR	806255	Callee	fixed2float		806097	0					
ANR	806256	Identifier	fixed2float		806097	0					
ANR	806257	ArgumentList	mat . tx_fixed = pt . x		806097	1					
ANR	806258	Argument	mat . tx_fixed = pt . x		806097	0					
ANR	806259	AssignmentExpression	mat . tx_fixed = pt . x		806097	0		=			
ANR	806260	MemberAccess	mat . tx_fixed		806097	0					
ANR	806261	Identifier	mat		806097	0					
ANR	806262	Identifier	tx_fixed		806097	1					
ANR	806263	MemberAccess	pt . x		806097	1					
ANR	806264	Identifier	pt		806097	0					
ANR	806265	Identifier	x		806097	1					
ANR	806266	ExpressionStatement	mat . ty = fixed2float ( mat . ty_fixed = pt . y )	506:8:20034:20075	806097	6	True				
ANR	806267	AssignmentExpression	mat . ty = fixed2float ( mat . ty_fixed = pt . y )		806097	0		=			
ANR	806268	MemberAccess	mat . ty		806097	0					
ANR	806269	Identifier	mat		806097	0					
ANR	806270	Identifier	ty		806097	1					
ANR	806271	CallExpression	fixed2float ( mat . ty_fixed = pt . y )		806097	1					
ANR	806272	Callee	fixed2float		806097	0					
ANR	806273	Identifier	fixed2float		806097	0					
ANR	806274	ArgumentList	mat . ty_fixed = pt . y		806097	1					
ANR	806275	Argument	mat . ty_fixed = pt . y		806097	0					
ANR	806276	AssignmentExpression	mat . ty_fixed = pt . y		806097	0		=			
ANR	806277	MemberAccess	mat . ty_fixed		806097	0					
ANR	806278	Identifier	mat		806097	0					
ANR	806279	Identifier	ty_fixed		806097	1					
ANR	806280	MemberAccess	pt . y		806097	1					
ANR	806281	Identifier	pt		806097	0					
ANR	806282	Identifier	y		806097	1					
ANR	806283	IfStatement	if ( pmp )		806097	7					
ANR	806284	Condition	pmp	507:12:20089:20091	806097	0	True				
ANR	806285	Identifier	pmp		806097	0					
ANR	806286	ExpressionStatement	pmp [ 0 ] = pmp [ 1 ] = - 1	508:12:20106:20126	806097	1	True				
ANR	806287	AssignmentExpression	pmp [ 0 ] = pmp [ 1 ] = - 1		806097	0		=			
ANR	806288	ArrayIndexing	pmp [ 0 ]		806097	0					
ANR	806289	Identifier	pmp		806097	0					
ANR	806290	PrimaryExpression	0		806097	1					
ANR	806291	AssignmentExpression	pmp [ 1 ] = - 1		806097	1		=			
ANR	806292	ArrayIndexing	pmp [ 1 ]		806097	0					
ANR	806293	Identifier	pmp		806097	0					
ANR	806294	PrimaryExpression	1		806097	1					
ANR	806295	UnaryOperationExpression	- 1		806097	1					
ANR	806296	UnaryOperator	-		806097	0					
ANR	806297	PrimaryExpression	1		806097	1					
ANR	806298	ElseStatement	else		806097	0					
ANR	806299	CompoundStatement		29:11:936:936	806097	0					
ANR	806300	IfStatement	if ( flags & TT_CG_ARGS_ARE_WORDS )		806097	0					
ANR	806301	Condition	flags & TT_CG_ARGS_ARE_WORDS	510:12:20153:20180	806097	0	True				
ANR	806302	BitAndExpression	flags & TT_CG_ARGS_ARE_WORDS		806097	0		&			
ANR	806303	Identifier	flags		806097	0					
ANR	806304	Identifier	TT_CG_ARGS_ARE_WORDS		806097	1					
ANR	806305	CompoundStatement		30:42:980:980	806097	1					
ANR	806306	IfStatement	if ( pmp )		806097	0					
ANR	806307	Condition	pmp	511:16:20201:20203	806097	0	True				
ANR	806308	Identifier	pmp		806097	0					
ANR	806309	ExpressionStatement	"pmp [ 0 ] = U16 ( gdata ) , pmp [ 1 ] = S16 ( gdata + 2 )"	512:16:20222:20266	806097	1	True				
ANR	806310	Expression	"pmp [ 0 ] = U16 ( gdata ) , pmp [ 1 ] = S16 ( gdata + 2 )"		806097	0					
ANR	806311	AssignmentExpression	pmp [ 0 ] = U16 ( gdata )		806097	0		=			
ANR	806312	ArrayIndexing	pmp [ 0 ]		806097	0					
ANR	806313	Identifier	pmp		806097	0					
ANR	806314	PrimaryExpression	0		806097	1					
ANR	806315	CallExpression	U16 ( gdata )		806097	1					
ANR	806316	Callee	U16		806097	0					
ANR	806317	Identifier	U16		806097	0					
ANR	806318	ArgumentList	gdata		806097	1					
ANR	806319	Argument	gdata		806097	0					
ANR	806320	Identifier	gdata		806097	0					
ANR	806321	AssignmentExpression	pmp [ 1 ] = S16 ( gdata + 2 )		806097	1		=			
ANR	806322	ArrayIndexing	pmp [ 1 ]		806097	0					
ANR	806323	Identifier	pmp		806097	0					
ANR	806324	PrimaryExpression	1		806097	1					
ANR	806325	CallExpression	S16 ( gdata + 2 )		806097	1					
ANR	806326	Callee	S16		806097	0					
ANR	806327	Identifier	S16		806097	0					
ANR	806328	ArgumentList	gdata + 2		806097	1					
ANR	806329	Argument	gdata + 2		806097	0					
ANR	806330	AdditiveExpression	gdata + 2		806097	0		+			
ANR	806331	Identifier	gdata		806097	0					
ANR	806332	PrimaryExpression	2		806097	1					
ANR	806333	ExpressionStatement	gdata += 4	513:12:20280:20290	806097	1	True				
ANR	806334	AssignmentExpression	gdata += 4		806097	0		+=			
ANR	806335	Identifier	gdata		806097	0					
ANR	806336	PrimaryExpression	4		806097	1					
ANR	806337	ElseStatement	else		806097	0					
ANR	806338	CompoundStatement		34:15:1104:1104	806097	0					
ANR	806339	IfStatement	if ( pmp )		806097	0					
ANR	806340	Condition	pmp	515:16:20325:20327	806097	0	True				
ANR	806341	Identifier	pmp		806097	0					
ANR	806342	ExpressionStatement	"pmp [ 0 ] = U8 ( gdata ) , pmp [ 1 ] = U8 ( gdata + 1 )"	516:16:20346:20388	806097	1	True				
ANR	806343	Expression	"pmp [ 0 ] = U8 ( gdata ) , pmp [ 1 ] = U8 ( gdata + 1 )"		806097	0					
ANR	806344	AssignmentExpression	pmp [ 0 ] = U8 ( gdata )		806097	0		=			
ANR	806345	ArrayIndexing	pmp [ 0 ]		806097	0					
ANR	806346	Identifier	pmp		806097	0					
ANR	806347	PrimaryExpression	0		806097	1					
ANR	806348	CallExpression	U8 ( gdata )		806097	1					
ANR	806349	Callee	U8		806097	0					
ANR	806350	Identifier	U8		806097	0					
ANR	806351	ArgumentList	gdata		806097	1					
ANR	806352	Argument	gdata		806097	0					
ANR	806353	Identifier	gdata		806097	0					
ANR	806354	AssignmentExpression	pmp [ 1 ] = U8 ( gdata + 1 )		806097	1		=			
ANR	806355	ArrayIndexing	pmp [ 1 ]		806097	0					
ANR	806356	Identifier	pmp		806097	0					
ANR	806357	PrimaryExpression	1		806097	1					
ANR	806358	CallExpression	U8 ( gdata + 1 )		806097	1					
ANR	806359	Callee	U8		806097	0					
ANR	806360	Identifier	U8		806097	0					
ANR	806361	ArgumentList	gdata + 1		806097	1					
ANR	806362	Argument	gdata + 1		806097	0					
ANR	806363	AdditiveExpression	gdata + 1		806097	0		+			
ANR	806364	Identifier	gdata		806097	0					
ANR	806365	PrimaryExpression	1		806097	1					
ANR	806366	ExpressionStatement	gdata += 2	517:12:20402:20412	806097	1	True				
ANR	806367	AssignmentExpression	gdata += 2		806097	0		+=			
ANR	806368	Identifier	gdata		806097	0					
ANR	806369	PrimaryExpression	2		806097	1					
ANR	806370	Statement	define	520:1:20431:20436	806097	9	True				
ANR	806371	Statement	S2_14	520:8:20438:20442	806097	10	True				
ANR	806372	Statement	(	520:13:20443:20443	806097	11	True				
ANR	806373	Statement	p	520:14:20444:20444	806097	12	True				
ANR	806374	Statement	)	520:15:20445:20445	806097	13	True				
ANR	806375	Statement	(	520:17:20447:20447	806097	14	True				
ANR	806376	Statement	S16	520:18:20448:20450	806097	15	True				
ANR	806377	Statement	(	520:21:20451:20451	806097	16	True				
ANR	806378	Statement	p	520:22:20452:20452	806097	17	True				
ANR	806379	Statement	)	520:23:20453:20453	806097	18	True				
ANR	806380	Statement	/	520:25:20455:20455	806097	19	True				
ANR	806381	Statement	16384.0	520:27:20457:20463	806097	20	True				
ANR	806382	Statement	)	520:34:20464:20464	806097	21	True				
ANR	806383	IfStatement	if ( flags & TT_CG_HAVE_SCALE )		806097	22					
ANR	806384	Condition	flags & TT_CG_HAVE_SCALE	521:8:20474:20497	806097	0	True				
ANR	806385	BitAndExpression	flags & TT_CG_HAVE_SCALE		806097	0		&			
ANR	806386	Identifier	flags		806097	0					
ANR	806387	Identifier	TT_CG_HAVE_SCALE		806097	1					
ANR	806388	CompoundStatement		41:34:1297:1297	806097	1					
ANR	806389	ExpressionStatement	scale_mat . xx = scale_mat . yy = S2_14 ( gdata )	522:8:20510:20552	806097	0	True				
ANR	806390	AssignmentExpression	scale_mat . xx = scale_mat . yy = S2_14 ( gdata )		806097	0		=			
ANR	806391	MemberAccess	scale_mat . xx		806097	0					
ANR	806392	Identifier	scale_mat		806097	0					
ANR	806393	Identifier	xx		806097	1					
ANR	806394	AssignmentExpression	scale_mat . yy = S2_14 ( gdata )		806097	1		=			
ANR	806395	MemberAccess	scale_mat . yy		806097	0					
ANR	806396	Identifier	scale_mat		806097	0					
ANR	806397	Identifier	yy		806097	1					
ANR	806398	CallExpression	S2_14 ( gdata )		806097	1					
ANR	806399	Callee	S2_14		806097	0					
ANR	806400	Identifier	S2_14		806097	0					
ANR	806401	ArgumentList	gdata		806097	1					
ANR	806402	Argument	gdata		806097	0					
ANR	806403	Identifier	gdata		806097	0					
ANR	806404	ExpressionStatement	scale_mat . xy = scale_mat . yx = 0	523:8:20562:20593	806097	1	True				
ANR	806405	AssignmentExpression	scale_mat . xy = scale_mat . yx = 0		806097	0		=			
ANR	806406	MemberAccess	scale_mat . xy		806097	0					
ANR	806407	Identifier	scale_mat		806097	0					
ANR	806408	Identifier	xy		806097	1					
ANR	806409	AssignmentExpression	scale_mat . yx = 0		806097	1		=			
ANR	806410	MemberAccess	scale_mat . yx		806097	0					
ANR	806411	Identifier	scale_mat		806097	0					
ANR	806412	Identifier	yx		806097	1					
ANR	806413	PrimaryExpression	0		806097	1					
ANR	806414	ExpressionStatement	gdata += 2	524:8:20603:20613	806097	2	True				
ANR	806415	AssignmentExpression	gdata += 2		806097	0		+=			
ANR	806416	Identifier	gdata		806097	0					
ANR	806417	PrimaryExpression	2		806097	1					
ANR	806418	ElseStatement	else		806097	0					
ANR	806419	IfStatement	if ( flags & TT_CG_HAVE_XY_SCALE )		806097	0					
ANR	806420	Condition	flags & TT_CG_HAVE_XY_SCALE	525:15:20630:20656	806097	0	True				
ANR	806421	BitAndExpression	flags & TT_CG_HAVE_XY_SCALE		806097	0		&			
ANR	806422	Identifier	flags		806097	0					
ANR	806423	Identifier	TT_CG_HAVE_XY_SCALE		806097	1					
ANR	806424	CompoundStatement		45:44:1456:1456	806097	1					
ANR	806425	ExpressionStatement	scale_mat . xx = S2_14 ( gdata )	526:8:20669:20696	806097	0	True				
ANR	806426	AssignmentExpression	scale_mat . xx = S2_14 ( gdata )		806097	0		=			
ANR	806427	MemberAccess	scale_mat . xx		806097	0					
ANR	806428	Identifier	scale_mat		806097	0					
ANR	806429	Identifier	xx		806097	1					
ANR	806430	CallExpression	S2_14 ( gdata )		806097	1					
ANR	806431	Callee	S2_14		806097	0					
ANR	806432	Identifier	S2_14		806097	0					
ANR	806433	ArgumentList	gdata		806097	1					
ANR	806434	Argument	gdata		806097	0					
ANR	806435	Identifier	gdata		806097	0					
ANR	806436	ExpressionStatement	scale_mat . yy = S2_14 ( gdata + 2 )	527:8:20706:20737	806097	1	True				
ANR	806437	AssignmentExpression	scale_mat . yy = S2_14 ( gdata + 2 )		806097	0		=			
ANR	806438	MemberAccess	scale_mat . yy		806097	0					
ANR	806439	Identifier	scale_mat		806097	0					
ANR	806440	Identifier	yy		806097	1					
ANR	806441	CallExpression	S2_14 ( gdata + 2 )		806097	1					
ANR	806442	Callee	S2_14		806097	0					
ANR	806443	Identifier	S2_14		806097	0					
ANR	806444	ArgumentList	gdata + 2		806097	1					
ANR	806445	Argument	gdata + 2		806097	0					
ANR	806446	AdditiveExpression	gdata + 2		806097	0		+			
ANR	806447	Identifier	gdata		806097	0					
ANR	806448	PrimaryExpression	2		806097	1					
ANR	806449	ExpressionStatement	scale_mat . xy = scale_mat . yx = 0	528:8:20747:20778	806097	2	True				
ANR	806450	AssignmentExpression	scale_mat . xy = scale_mat . yx = 0		806097	0		=			
ANR	806451	MemberAccess	scale_mat . xy		806097	0					
ANR	806452	Identifier	scale_mat		806097	0					
ANR	806453	Identifier	xy		806097	1					
ANR	806454	AssignmentExpression	scale_mat . yx = 0		806097	1		=			
ANR	806455	MemberAccess	scale_mat . yx		806097	0					
ANR	806456	Identifier	scale_mat		806097	0					
ANR	806457	Identifier	yx		806097	1					
ANR	806458	PrimaryExpression	0		806097	1					
ANR	806459	ExpressionStatement	gdata += 4	529:8:20788:20798	806097	3	True				
ANR	806460	AssignmentExpression	gdata += 4		806097	0		+=			
ANR	806461	Identifier	gdata		806097	0					
ANR	806462	PrimaryExpression	4		806097	1					
ANR	806463	ElseStatement	else		806097	0					
ANR	806464	IfStatement	if ( flags & TT_CG_HAVE_2X2 )		806097	0					
ANR	806465	Condition	flags & TT_CG_HAVE_2X2	530:15:20815:20836	806097	0	True				
ANR	806466	BitAndExpression	flags & TT_CG_HAVE_2X2		806097	0		&			
ANR	806467	Identifier	flags		806097	0					
ANR	806468	Identifier	TT_CG_HAVE_2X2		806097	1					
ANR	806469	CompoundStatement		50:39:1636:1636	806097	1					
ANR	806470	ExpressionStatement	scale_mat . xx = S2_14 ( gdata )	531:8:20849:20876	806097	0	True				
ANR	806471	AssignmentExpression	scale_mat . xx = S2_14 ( gdata )		806097	0		=			
ANR	806472	MemberAccess	scale_mat . xx		806097	0					
ANR	806473	Identifier	scale_mat		806097	0					
ANR	806474	Identifier	xx		806097	1					
ANR	806475	CallExpression	S2_14 ( gdata )		806097	1					
ANR	806476	Callee	S2_14		806097	0					
ANR	806477	Identifier	S2_14		806097	0					
ANR	806478	ArgumentList	gdata		806097	1					
ANR	806479	Argument	gdata		806097	0					
ANR	806480	Identifier	gdata		806097	0					
ANR	806481	ExpressionStatement	scale_mat . xy = S2_14 ( gdata + 2 )	532:8:20886:20917	806097	1	True				
ANR	806482	AssignmentExpression	scale_mat . xy = S2_14 ( gdata + 2 )		806097	0		=			
ANR	806483	MemberAccess	scale_mat . xy		806097	0					
ANR	806484	Identifier	scale_mat		806097	0					
ANR	806485	Identifier	xy		806097	1					
ANR	806486	CallExpression	S2_14 ( gdata + 2 )		806097	1					
ANR	806487	Callee	S2_14		806097	0					
ANR	806488	Identifier	S2_14		806097	0					
ANR	806489	ArgumentList	gdata + 2		806097	1					
ANR	806490	Argument	gdata + 2		806097	0					
ANR	806491	AdditiveExpression	gdata + 2		806097	0		+			
ANR	806492	Identifier	gdata		806097	0					
ANR	806493	PrimaryExpression	2		806097	1					
ANR	806494	ExpressionStatement	scale_mat . yx = S2_14 ( gdata + 4 )	533:8:20927:20958	806097	2	True				
ANR	806495	AssignmentExpression	scale_mat . yx = S2_14 ( gdata + 4 )		806097	0		=			
ANR	806496	MemberAccess	scale_mat . yx		806097	0					
ANR	806497	Identifier	scale_mat		806097	0					
ANR	806498	Identifier	yx		806097	1					
ANR	806499	CallExpression	S2_14 ( gdata + 4 )		806097	1					
ANR	806500	Callee	S2_14		806097	0					
ANR	806501	Identifier	S2_14		806097	0					
ANR	806502	ArgumentList	gdata + 4		806097	1					
ANR	806503	Argument	gdata + 4		806097	0					
ANR	806504	AdditiveExpression	gdata + 4		806097	0		+			
ANR	806505	Identifier	gdata		806097	0					
ANR	806506	PrimaryExpression	4		806097	1					
ANR	806507	ExpressionStatement	scale_mat . yy = S2_14 ( gdata + 6 )	534:8:20968:20999	806097	3	True				
ANR	806508	AssignmentExpression	scale_mat . yy = S2_14 ( gdata + 6 )		806097	0		=			
ANR	806509	MemberAccess	scale_mat . yy		806097	0					
ANR	806510	Identifier	scale_mat		806097	0					
ANR	806511	Identifier	yy		806097	1					
ANR	806512	CallExpression	S2_14 ( gdata + 6 )		806097	1					
ANR	806513	Callee	S2_14		806097	0					
ANR	806514	Identifier	S2_14		806097	0					
ANR	806515	ArgumentList	gdata + 6		806097	1					
ANR	806516	Argument	gdata + 6		806097	0					
ANR	806517	AdditiveExpression	gdata + 6		806097	0		+			
ANR	806518	Identifier	gdata		806097	0					
ANR	806519	PrimaryExpression	6		806097	1					
ANR	806520	ExpressionStatement	gdata += 8	535:8:21009:21019	806097	4	True				
ANR	806521	AssignmentExpression	gdata += 8		806097	0		+=			
ANR	806522	Identifier	gdata		806097	0					
ANR	806523	PrimaryExpression	8		806097	1					
ANR	806524	ElseStatement	else		806097	0					
ANR	806525	GotoStatement	goto no_scale ;	537:8:21040:21053	806097	0	True				
ANR	806526	Identifier	no_scale		806097	0					
ANR	806527	Statement	undef	538:1:21056:21060	806097	23	True				
ANR	806528	Statement	S2_14	538:7:21062:21066	806097	24	True				
ANR	806529	ExpressionStatement	scale_mat . tx = 0	539:4:21072:21088	806097	25	True				
ANR	806530	AssignmentExpression	scale_mat . tx = 0		806097	0		=			
ANR	806531	MemberAccess	scale_mat . tx		806097	0					
ANR	806532	Identifier	scale_mat		806097	0					
ANR	806533	Identifier	tx		806097	1					
ANR	806534	PrimaryExpression	0		806097	1					
ANR	806535	ExpressionStatement	scale_mat . ty = 0	540:4:21094:21110	806097	26	True				
ANR	806536	AssignmentExpression	scale_mat . ty = 0		806097	0		=			
ANR	806537	MemberAccess	scale_mat . ty		806097	0					
ANR	806538	Identifier	scale_mat		806097	0					
ANR	806539	Identifier	ty		806097	1					
ANR	806540	PrimaryExpression	0		806097	1					
ANR	806541	ExpressionStatement	"gs_matrix_multiply ( & scale_mat , ( const gs_matrix * ) & mat , ( gs_matrix * ) & mat )"	543:4:21222:21319	806097	27	True				
ANR	806542	CallExpression	"gs_matrix_multiply ( & scale_mat , ( const gs_matrix * ) & mat , ( gs_matrix * ) & mat )"		806097	0					
ANR	806543	Callee	gs_matrix_multiply		806097	0					
ANR	806544	Identifier	gs_matrix_multiply		806097	0					
ANR	806545	ArgumentList	& scale_mat		806097	1					
ANR	806546	Argument	& scale_mat		806097	0					
ANR	806547	UnaryOperationExpression	& scale_mat		806097	0					
ANR	806548	UnaryOperator	&		806097	0					
ANR	806549	Identifier	scale_mat		806097	1					
ANR	806550	Argument	( const gs_matrix * ) & mat		806097	1					
ANR	806551	CastExpression	( const gs_matrix * ) & mat		806097	0					
ANR	806552	CastTarget	const gs_matrix *		806097	0					
ANR	806553	UnaryOperationExpression	& mat		806097	1					
ANR	806554	UnaryOperator	&		806097	0					
ANR	806555	Identifier	mat		806097	1					
ANR	806556	Argument	( gs_matrix * ) & mat		806097	2					
ANR	806557	CastExpression	( gs_matrix * ) & mat		806097	0					
ANR	806558	CastTarget	gs_matrix *		806097	0					
ANR	806559	UnaryOperationExpression	& mat		806097	1					
ANR	806560	UnaryOperator	&		806097	0					
ANR	806561	Identifier	mat		806097	1					
ANR	806562	Label	no_scale :	545:0:21321:21329	806097	28	True				
ANR	806563	Identifier	no_scale		806097	0					
ANR	806564	ExpressionStatement	* pdata = gdata	546:4:21335:21349	806097	29	True				
ANR	806565	AssignmentExpression	* pdata = gdata		806097	0		=			
ANR	806566	UnaryOperationExpression	* pdata		806097	0					
ANR	806567	UnaryOperator	*		806097	0					
ANR	806568	Identifier	pdata		806097	1					
ANR	806569	Identifier	gdata		806097	1					
ANR	806570	ExpressionStatement	* pflags = flags	547:4:21355:21370	806097	30	True				
ANR	806571	AssignmentExpression	* pflags = flags		806097	0		=			
ANR	806572	UnaryOperationExpression	* pflags		806097	0					
ANR	806573	UnaryOperator	*		806097	0					
ANR	806574	Identifier	pflags		806097	1					
ANR	806575	Identifier	flags		806097	1					
ANR	806576	ExpressionStatement	* psmat = mat	548:4:21376:21388	806097	31	True				
ANR	806577	AssignmentExpression	* psmat = mat		806097	0		=			
ANR	806578	UnaryOperationExpression	* psmat		806097	0					
ANR	806579	UnaryOperator	*		806097	0					
ANR	806580	Identifier	psmat		806097	1					
ANR	806581	Identifier	mat		806097	1					
ANR	806582	ReturnType	void		806097	1					
ANR	806583	Identifier	gs_type42_parse_component		806097	2					
ANR	806584	ParameterList	"const byte * * pdata , uint * pflags , gs_matrix_fixed * psmat , int * pmp , const gs_font_type42 * pfont , const gs_matrix_fixed * pmat"		806097	3					
ANR	806585	Parameter	const byte * * pdata	478:26:19003:19020	806097	0	True				
ANR	806586	ParameterType	const byte * *		806097	0					
ANR	806587	Identifier	pdata		806097	1					
ANR	806588	Parameter	uint * pflags	478:46:19023:19034	806097	1	True				
ANR	806589	ParameterType	uint *		806097	0					
ANR	806590	Identifier	pflags		806097	1					
ANR	806591	Parameter	gs_matrix_fixed * psmat	478:60:19037:19058	806097	2	True				
ANR	806592	ParameterType	gs_matrix_fixed *		806097	0					
ANR	806593	Identifier	psmat		806097	1					
ANR	806594	Parameter	int * pmp	479:26:19087:19094	806097	3	True				
ANR	806595	ParameterType	int *		806097	0					
ANR	806596	Identifier	pmp		806097	1					
ANR	806597	Parameter	const gs_font_type42 * pfont	479:57:19118:19144	806097	4	True				
ANR	806598	ParameterType	const gs_font_type42 *		806097	0					
ANR	806599	Identifier	pfont		806097	1					
ANR	806600	Parameter	const gs_matrix_fixed * pmat	480:26:19173:19199	806097	5	True				
ANR	806601	ParameterType	const gs_matrix_fixed *		806097	0					
ANR	806602	Identifier	pmat		806097	1					
ANR	806603	CFGEntryNode	ENTRY		806097		True				
ANR	806604	CFGExitNode	EXIT		806097		True				
ANR	806605	Symbol	TT_CG_ARGS_ARE_XY_VALUES		806097						
ANR	806606	Symbol	mat . ty_fixed		806097						
ANR	806607	Symbol	U8		806097						
ANR	806608	Symbol	pt		806097						
ANR	806609	Symbol	* pmat		806097						
ANR	806610	Symbol	S2_14		806097						
ANR	806611	Symbol	mat . ty		806097						
ANR	806612	Symbol	TT_CG_ARGS_ARE_WORDS		806097						
ANR	806613	Symbol	mat . tx		806097						
ANR	806614	Symbol	pmp		806097						
ANR	806615	Symbol	scale_mat . ty		806097						
ANR	806616	Symbol	scale_mat . tx		806097						
ANR	806617	Symbol	scale_mat . xy		806097						
ANR	806618	Symbol	scale_mat . xx		806097						
ANR	806619	Symbol	pfont -> data . unitsPerEm		806097						
ANR	806620	Symbol	psmat		806097						
ANR	806621	Symbol	* pdata		806097						
ANR	806622	Symbol	TT_CG_HAVE_2X2		806097						
ANR	806623	Symbol	mat . tx_fixed		806097						
ANR	806624	Symbol	& pt		806097						
ANR	806625	Symbol	arg2		806097						
ANR	806626	Symbol	arg1		806097						
ANR	806627	Symbol	scale_mat . yx		806097						
ANR	806628	Symbol	S16		806097						
ANR	806629	Symbol	scale_mat . yy		806097						
ANR	806630	Symbol	U16		806097						
ANR	806631	Symbol	& mat		806097						
ANR	806632	Symbol	pdata		806097						
ANR	806633	Symbol	pmat		806097						
ANR	806634	Symbol	S8		806097						
ANR	806635	Symbol	* psmat		806097						
ANR	806636	Symbol	& scale_mat		806097						
ANR	806637	Symbol	flags		806097						
ANR	806638	Symbol	gdata		806097						
ANR	806639	Symbol	TT_CG_HAVE_SCALE		806097						
ANR	806640	Symbol	factor		806097						
ANR	806641	Symbol	mat		806097						
ANR	806642	Symbol	fixed2float		806097						
ANR	806643	Symbol	pfont		806097						
ANR	806644	Symbol	pfont -> data		806097						
ANR	806645	Symbol	TT_CG_ROUND_XY_TO_GRID		806097						
ANR	806646	Symbol	* pflags		806097						
ANR	806647	Symbol	* pfont		806097						
ANR	806648	Symbol	pflags		806097						
ANR	806649	Symbol	TT_CG_HAVE_XY_SCALE		806097						
ANR	806650	Symbol	pt . x		806097						
ANR	806651	Symbol	pt . y		806097						
ANR	806652	Symbol	scale_mat		806097						
ANR	806653	Symbol	* pmp		806097						
ANR	806654	Function	total_points	553:0:21490:22742							
ANR	806655	FunctionDef	"total_points (gs_font_type42 * pfont , uint glyph_index)"		806654	0					
ANR	806656	CompoundStatement		555:0:21555:22742	806654	0					
ANR	806657	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	556:4:21561:21587	806654	0	True				
ANR	806658	IdentifierDecl	glyph_data		806654	0					
ANR	806659	IdentifierDeclType	gs_glyph_data_t		806654	0					
ANR	806660	Identifier	glyph_data		806654	1					
ANR	806661	IdentifierDeclStatement	int code ;	557:4:21593:21601	806654	1	True				
ANR	806662	IdentifierDecl	code		806654	0					
ANR	806663	IdentifierDeclType	int		806654	0					
ANR	806664	Identifier	code		806654	1					
ANR	806665	IdentifierDeclStatement	int ocode ;	558:4:21607:21616	806654	2	True				
ANR	806666	IdentifierDecl	ocode		806654	0					
ANR	806667	IdentifierDeclType	int		806654	0					
ANR	806668	Identifier	ocode		806654	1					
ANR	806669	IdentifierDeclStatement	const byte * gdata ;	559:4:21622:21639	806654	3	True				
ANR	806670	IdentifierDecl	* gdata		806654	0					
ANR	806671	IdentifierDeclType	const byte *		806654	0					
ANR	806672	Identifier	gdata		806654	1					
ANR	806673	IdentifierDeclStatement	int total ;	560:4:21645:21654	806654	4	True				
ANR	806674	IdentifierDecl	total		806654	0					
ANR	806675	IdentifierDeclType	int		806654	0					
ANR	806676	Identifier	total		806654	1					
ANR	806677	ExpressionStatement	glyph_data . memory = pfont -> memory	562:4:21661:21694	806654	5	True				
ANR	806678	AssignmentExpression	glyph_data . memory = pfont -> memory		806654	0		=			
ANR	806679	MemberAccess	glyph_data . memory		806654	0					
ANR	806680	Identifier	glyph_data		806654	0					
ANR	806681	Identifier	memory		806654	1					
ANR	806682	PtrMemberAccess	pfont -> memory		806654	1					
ANR	806683	Identifier	pfont		806654	0					
ANR	806684	Identifier	memory		806654	1					
ANR	806685	ExpressionStatement	"ocode = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"	563:4:21700:21764	806654	6	True				
ANR	806686	AssignmentExpression	"ocode = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		806654	0		=			
ANR	806687	Identifier	ocode		806654	0					
ANR	806688	CallExpression	"pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		806654	1					
ANR	806689	Callee	pfont -> data . get_outline		806654	0					
ANR	806690	MemberAccess	pfont -> data . get_outline		806654	0					
ANR	806691	PtrMemberAccess	pfont -> data		806654	0					
ANR	806692	Identifier	pfont		806654	0					
ANR	806693	Identifier	data		806654	1					
ANR	806694	Identifier	get_outline		806654	1					
ANR	806695	ArgumentList	pfont		806654	1					
ANR	806696	Argument	pfont		806654	0					
ANR	806697	Identifier	pfont		806654	0					
ANR	806698	Argument	glyph_index		806654	1					
ANR	806699	Identifier	glyph_index		806654	0					
ANR	806700	Argument	& glyph_data		806654	2					
ANR	806701	UnaryOperationExpression	& glyph_data		806654	0					
ANR	806702	UnaryOperator	&		806654	0					
ANR	806703	Identifier	glyph_data		806654	1					
ANR	806704	IfStatement	if ( ocode < 0 )		806654	7					
ANR	806705	Condition	ocode < 0	564:8:21774:21782	806654	0	True				
ANR	806706	RelationalExpression	ocode < 0		806654	0		<			
ANR	806707	Identifier	ocode		806654	0					
ANR	806708	PrimaryExpression	0		806654	1					
ANR	806709	ReturnStatement	return ocode ;	565:8:21793:21805	806654	1	True				
ANR	806710	Identifier	ocode		806654	0					
ANR	806711	IfStatement	if ( glyph_data . bits . size == 0 )		806654	8					
ANR	806712	Condition	glyph_data . bits . size == 0	566:8:21815:21839	806654	0	True				
ANR	806713	EqualityExpression	glyph_data . bits . size == 0		806654	0		==			
ANR	806714	MemberAccess	glyph_data . bits . size		806654	0					
ANR	806715	MemberAccess	glyph_data . bits		806654	0					
ANR	806716	Identifier	glyph_data		806654	0					
ANR	806717	Identifier	bits		806654	1					
ANR	806718	Identifier	size		806654	1					
ANR	806719	PrimaryExpression	0		806654	1					
ANR	806720	ReturnStatement	return 0 ;	567:8:21850:21858	806654	1	True				
ANR	806721	PrimaryExpression	0		806654	0					
ANR	806722	ExpressionStatement	gdata = glyph_data . bits . data	568:4:21864:21892	806654	9	True				
ANR	806723	AssignmentExpression	gdata = glyph_data . bits . data		806654	0		=			
ANR	806724	Identifier	gdata		806654	0					
ANR	806725	MemberAccess	glyph_data . bits . data		806654	1					
ANR	806726	MemberAccess	glyph_data . bits		806654	0					
ANR	806727	Identifier	glyph_data		806654	0					
ANR	806728	Identifier	bits		806654	1					
ANR	806729	Identifier	data		806654	1					
ANR	806730	IfStatement	if ( S16 ( gdata ) != - 1 )		806654	10					
ANR	806731	Condition	S16 ( gdata ) != - 1	569:8:21902:21917	806654	0	True				
ANR	806732	EqualityExpression	S16 ( gdata ) != - 1		806654	0		!=			
ANR	806733	CallExpression	S16 ( gdata )		806654	0					
ANR	806734	Callee	S16		806654	0					
ANR	806735	Identifier	S16		806654	0					
ANR	806736	ArgumentList	gdata		806654	1					
ANR	806737	Argument	gdata		806654	0					
ANR	806738	Identifier	gdata		806654	0					
ANR	806739	UnaryOperationExpression	- 1		806654	1					
ANR	806740	UnaryOperator	-		806654	0					
ANR	806741	PrimaryExpression	1		806654	1					
ANR	806742	CompoundStatement		19:8:490:534	806654	1					
ANR	806743	IdentifierDeclStatement	int numContours = S16 ( gdata ) ;	571:8:21968:21996	806654	0	True				
ANR	806744	IdentifierDecl	numContours = S16 ( gdata )		806654	0					
ANR	806745	IdentifierDeclType	int		806654	0					
ANR	806746	Identifier	numContours		806654	1					
ANR	806747	AssignmentExpression	numContours = S16 ( gdata )		806654	2		=			
ANR	806748	Identifier	numContours		806654	0					
ANR	806749	CallExpression	S16 ( gdata )		806654	1					
ANR	806750	Callee	S16		806654	0					
ANR	806751	Identifier	S16		806654	0					
ANR	806752	ArgumentList	gdata		806654	1					
ANR	806753	Argument	gdata		806654	0					
ANR	806754	Identifier	gdata		806654	0					
ANR	806755	IdentifierDeclStatement	const byte * pends = gdata + 10 ;	572:8:22006:22036	806654	1	True				
ANR	806756	IdentifierDecl	* pends = gdata + 10		806654	0					
ANR	806757	IdentifierDeclType	const byte *		806654	0					
ANR	806758	Identifier	pends		806654	1					
ANR	806759	AssignmentExpression	* pends = gdata + 10		806654	2		=			
ANR	806760	Identifier	pends		806654	0					
ANR	806761	AdditiveExpression	gdata + 10		806654	1		+			
ANR	806762	Identifier	gdata		806654	0					
ANR	806763	PrimaryExpression	10		806654	1					
ANR	806764	IdentifierDeclStatement	const byte * pinstr = pends + numContours * 2 ;	573:8:22046:22090	806654	2	True				
ANR	806765	IdentifierDecl	* pinstr = pends + numContours * 2		806654	0					
ANR	806766	IdentifierDeclType	const byte *		806654	0					
ANR	806767	Identifier	pinstr		806654	1					
ANR	806768	AssignmentExpression	* pinstr = pends + numContours * 2		806654	2		=			
ANR	806769	Identifier	pinstr		806654	0					
ANR	806770	AdditiveExpression	pends + numContours * 2		806654	1		+			
ANR	806771	Identifier	pends		806654	0					
ANR	806772	MultiplicativeExpression	numContours * 2		806654	1		*			
ANR	806773	Identifier	numContours		806654	0					
ANR	806774	PrimaryExpression	2		806654	1					
ANR	806775	ExpressionStatement	total = ( numContours == 0 ? 0 : U16 ( pinstr - 2 ) + 1 )	575:8:22101:22153	806654	3	True				
ANR	806776	AssignmentExpression	total = ( numContours == 0 ? 0 : U16 ( pinstr - 2 ) + 1 )		806654	0		=			
ANR	806777	Identifier	total		806654	0					
ANR	806778	ConditionalExpression	numContours == 0 ? 0 : U16 ( pinstr - 2 ) + 1		806654	1					
ANR	806779	Condition	numContours == 0		806654	0					
ANR	806780	EqualityExpression	numContours == 0		806654	0		==			
ANR	806781	Identifier	numContours		806654	0					
ANR	806782	PrimaryExpression	0		806654	1					
ANR	806783	PrimaryExpression	0		806654	1					
ANR	806784	AdditiveExpression	U16 ( pinstr - 2 ) + 1		806654	2		+			
ANR	806785	CallExpression	U16 ( pinstr - 2 )		806654	0					
ANR	806786	Callee	U16		806654	0					
ANR	806787	Identifier	U16		806654	0					
ANR	806788	ArgumentList	pinstr - 2		806654	1					
ANR	806789	Argument	pinstr - 2		806654	0					
ANR	806790	AdditiveExpression	pinstr - 2		806654	0		-			
ANR	806791	Identifier	pinstr		806654	0					
ANR	806792	PrimaryExpression	2		806654	1					
ANR	806793	PrimaryExpression	1		806654	1					
ANR	806794	ElseStatement	else		806654	0					
ANR	806795	CompoundStatement		25:8:705:724	806654	0					
ANR	806796	IdentifierDeclStatement	uint flags ;	578:8:22241:22251	806654	0	True				
ANR	806797	IdentifierDecl	flags		806654	0					
ANR	806798	IdentifierDeclType	uint		806654	0					
ANR	806799	Identifier	flags		806654	1					
ANR	806800	IdentifierDeclStatement	gs_matrix_fixed mat ;	579:8:22261:22280	806654	1	True				
ANR	806801	IdentifierDecl	mat		806654	0					
ANR	806802	IdentifierDeclType	gs_matrix_fixed		806654	0					
ANR	806803	Identifier	mat		806654	1					
ANR	806804	ExpressionStatement	gdata += 10	581:8:22291:22302	806654	2	True				
ANR	806805	AssignmentExpression	gdata += 10		806654	0		+=			
ANR	806806	Identifier	gdata		806654	0					
ANR	806807	PrimaryExpression	10		806654	1					
ANR	806808	ExpressionStatement	"memset ( & mat , 0 , sizeof ( mat ) )"	582:8:22312:22340	806654	3	True				
ANR	806809	CallExpression	"memset ( & mat , 0 , sizeof ( mat ) )"		806654	0					
ANR	806810	Callee	memset		806654	0					
ANR	806811	Identifier	memset		806654	0					
ANR	806812	ArgumentList	& mat		806654	1					
ANR	806813	Argument	& mat		806654	0					
ANR	806814	UnaryOperationExpression	& mat		806654	0					
ANR	806815	UnaryOperator	&		806654	0					
ANR	806816	Identifier	mat		806654	1					
ANR	806817	Argument	0		806654	1					
ANR	806818	PrimaryExpression	0		806654	0					
ANR	806819	Argument	sizeof ( mat )		806654	2					
ANR	806820	SizeofExpression	sizeof ( mat )		806654	0					
ANR	806821	Sizeof	sizeof		806654	0					
ANR	806822	SizeofOperand	mat		806654	1					
ANR	806823	ExpressionStatement	total = 0	583:8:22366:22375	806654	4	True				
ANR	806824	AssignmentExpression	total = 0		806654	0		=			
ANR	806825	Identifier	total		806654	0					
ANR	806826	PrimaryExpression	0		806654	1					
ANR	806827	DoStatement	do		806654	5					
ANR	806828	CompoundStatement		30:11:832:832	806654	0					
ANR	806829	ExpressionStatement	"code = total_points ( pfont , U16 ( gdata + 2 ) )"	585:12:22402:22444	806654	0	True				
ANR	806830	AssignmentExpression	"code = total_points ( pfont , U16 ( gdata + 2 ) )"		806654	0		=			
ANR	806831	Identifier	code		806654	0					
ANR	806832	CallExpression	"total_points ( pfont , U16 ( gdata + 2 ) )"		806654	1					
ANR	806833	Callee	total_points		806654	0					
ANR	806834	Identifier	total_points		806654	0					
ANR	806835	ArgumentList	pfont		806654	1					
ANR	806836	Argument	pfont		806654	0					
ANR	806837	Identifier	pfont		806654	0					
ANR	806838	Argument	U16 ( gdata + 2 )		806654	1					
ANR	806839	CallExpression	U16 ( gdata + 2 )		806654	0					
ANR	806840	Callee	U16		806654	0					
ANR	806841	Identifier	U16		806654	0					
ANR	806842	ArgumentList	gdata + 2		806654	1					
ANR	806843	Argument	gdata + 2		806654	0					
ANR	806844	AdditiveExpression	gdata + 2		806654	0		+			
ANR	806845	Identifier	gdata		806654	0					
ANR	806846	PrimaryExpression	2		806654	1					
ANR	806847	IfStatement	if ( code < 0 )		806654	1					
ANR	806848	Condition	code < 0	586:16:22462:22469	806654	0	True				
ANR	806849	RelationalExpression	code < 0		806654	0		<			
ANR	806850	Identifier	code		806654	0					
ANR	806851	PrimaryExpression	0		806654	1					
ANR	806852	ReturnStatement	return code ;	587:16:22488:22499	806654	1	True				
ANR	806853	Identifier	code		806654	0					
ANR	806854	ExpressionStatement	total += code	588:12:22513:22526	806654	2	True				
ANR	806855	AssignmentExpression	total += code		806654	0		+=			
ANR	806856	Identifier	total		806654	0					
ANR	806857	Identifier	code		806654	1					
ANR	806858	ExpressionStatement	"gs_type42_parse_component ( & gdata , & flags , & mat , NULL , pfont , & mat )"	589:12:22540:22606	806654	3	True				
ANR	806859	CallExpression	"gs_type42_parse_component ( & gdata , & flags , & mat , NULL , pfont , & mat )"		806654	0					
ANR	806860	Callee	gs_type42_parse_component		806654	0					
ANR	806861	Identifier	gs_type42_parse_component		806654	0					
ANR	806862	ArgumentList	& gdata		806654	1					
ANR	806863	Argument	& gdata		806654	0					
ANR	806864	UnaryOperationExpression	& gdata		806654	0					
ANR	806865	UnaryOperator	&		806654	0					
ANR	806866	Identifier	gdata		806654	1					
ANR	806867	Argument	& flags		806654	1					
ANR	806868	UnaryOperationExpression	& flags		806654	0					
ANR	806869	UnaryOperator	&		806654	0					
ANR	806870	Identifier	flags		806654	1					
ANR	806871	Argument	& mat		806654	2					
ANR	806872	UnaryOperationExpression	& mat		806654	0					
ANR	806873	UnaryOperator	&		806654	0					
ANR	806874	Identifier	mat		806654	1					
ANR	806875	Argument	NULL		806654	3					
ANR	806876	Identifier	NULL		806654	0					
ANR	806877	Argument	pfont		806654	4					
ANR	806878	Identifier	pfont		806654	0					
ANR	806879	Argument	& mat		806654	5					
ANR	806880	UnaryOperationExpression	& mat		806654	0					
ANR	806881	UnaryOperator	&		806654	0					
ANR	806882	Identifier	mat		806654	1					
ANR	806883	Condition	flags & TT_CG_MORE_COMPONENTS	591:15:22633:22661	806654	1	True				
ANR	806884	BitAndExpression	flags & TT_CG_MORE_COMPONENTS		806654	0		&			
ANR	806885	Identifier	flags		806654	0					
ANR	806886	Identifier	TT_CG_MORE_COMPONENTS		806654	1					
ANR	806887	ExpressionStatement	"gs_glyph_data_free ( & glyph_data , ""total_points"" )"	593:4:22675:22722	806654	11	True				
ANR	806888	CallExpression	"gs_glyph_data_free ( & glyph_data , ""total_points"" )"		806654	0					
ANR	806889	Callee	gs_glyph_data_free		806654	0					
ANR	806890	Identifier	gs_glyph_data_free		806654	0					
ANR	806891	ArgumentList	& glyph_data		806654	1					
ANR	806892	Argument	& glyph_data		806654	0					
ANR	806893	UnaryOperationExpression	& glyph_data		806654	0					
ANR	806894	UnaryOperator	&		806654	0					
ANR	806895	Identifier	glyph_data		806654	1					
ANR	806896	Argument	"""total_points"""		806654	1					
ANR	806897	PrimaryExpression	"""total_points"""		806654	0					
ANR	806898	ReturnStatement	return total ;	594:4:22728:22740	806654	12	True				
ANR	806899	Identifier	total		806654	0					
ANR	806900	ReturnType	static int		806654	1					
ANR	806901	Identifier	total_points		806654	2					
ANR	806902	ParameterList	"gs_font_type42 * pfont , uint glyph_index"		806654	3					
ANR	806903	Parameter	gs_font_type42 * pfont	554:13:21514:21534	806654	0	True				
ANR	806904	ParameterType	gs_font_type42 *		806654	0					
ANR	806905	Identifier	pfont		806654	1					
ANR	806906	Parameter	uint glyph_index	554:36:21537:21552	806654	1	True				
ANR	806907	ParameterType	uint		806654	0					
ANR	806908	Identifier	glyph_index		806654	1					
ANR	806909	CFGEntryNode	ENTRY		806654		True				
ANR	806910	CFGExitNode	EXIT		806654		True				
ANR	806911	Symbol	& mat		806654						
ANR	806912	Symbol	code		806654						
ANR	806913	Symbol	glyph_data . bits . data		806654						
ANR	806914	Symbol	glyph_index		806654						
ANR	806915	Symbol	pfont -> memory		806654						
ANR	806916	Symbol	total_points		806654						
ANR	806917	Symbol	flags		806654						
ANR	806918	Symbol	gdata		806654						
ANR	806919	Symbol	glyph_data . bits . size		806654						
ANR	806920	Symbol	total		806654						
ANR	806921	Symbol	TT_CG_MORE_COMPONENTS		806654						
ANR	806922	Symbol	ocode		806654						
ANR	806923	Symbol	& flags		806654						
ANR	806924	Symbol	glyph_data . bits		806654						
ANR	806925	Symbol	mat		806654						
ANR	806926	Symbol	NULL		806654						
ANR	806927	Symbol	pfont		806654						
ANR	806928	Symbol	pinstr		806654						
ANR	806929	Symbol	glyph_data		806654						
ANR	806930	Symbol	pfont -> data		806654						
ANR	806931	Symbol	pends		806654						
ANR	806932	Symbol	* pfont		806654						
ANR	806933	Symbol	glyph_data . memory		806654						
ANR	806934	Symbol	pfont -> data . get_outline		806654						
ANR	806935	Symbol	& gdata		806654						
ANR	806936	Symbol	numContours		806654						
ANR	806937	Symbol	S16		806654						
ANR	806938	Symbol	U16		806654						
ANR	806939	Symbol	& glyph_data		806654						
ANR	806940	Function	default_get_glyph_index	603:0:22978:23153							
ANR	806941	FunctionDef	"default_get_glyph_index (gs_font_type42 * pfont , gs_glyph glyph)"		806940	0					
ANR	806942	CompoundStatement		605:0:23053:23153	806940	0					
ANR	806943	ReturnStatement	return ( glyph < GS_MIN_CID_GLYPH ? 0 : glyph - GS_MIN_CID_GLYPH ) ;	606:4:23059:23151	806940	0	True				
ANR	806944	ConditionalExpression	glyph < GS_MIN_CID_GLYPH ? 0 : glyph - GS_MIN_CID_GLYPH		806940	0					
ANR	806945	Condition	glyph < GS_MIN_CID_GLYPH		806940	0					
ANR	806946	RelationalExpression	glyph < GS_MIN_CID_GLYPH		806940	0		<			
ANR	806947	Identifier	glyph		806940	0					
ANR	806948	Identifier	GS_MIN_CID_GLYPH		806940	1					
ANR	806949	PrimaryExpression	0		806940	1					
ANR	806950	AdditiveExpression	glyph - GS_MIN_CID_GLYPH		806940	2		-			
ANR	806951	Identifier	glyph		806940	0					
ANR	806952	Identifier	GS_MIN_CID_GLYPH		806940	1					
ANR	806953	ReturnType	static uint		806940	1					
ANR	806954	Identifier	default_get_glyph_index		806940	2					
ANR	806955	ParameterList	"gs_font_type42 * pfont , gs_glyph glyph"		806940	3					
ANR	806956	Parameter	gs_font_type42 * pfont	604:24:23014:23034	806940	0	True				
ANR	806957	ParameterType	gs_font_type42 *		806940	0					
ANR	806958	Identifier	pfont		806940	1					
ANR	806959	Parameter	gs_glyph glyph	604:47:23037:23050	806940	1	True				
ANR	806960	ParameterType	gs_glyph		806940	0					
ANR	806961	Identifier	glyph		806940	1					
ANR	806962	CFGEntryNode	ENTRY		806940		True				
ANR	806963	CFGExitNode	EXIT		806940		True				
ANR	806964	Symbol	glyph		806940						
ANR	806965	Symbol	pfont		806940						
ANR	806966	Symbol	GS_MIN_CID_GLYPH		806940						
ANR	806967	Function	default_get_outline	613:0:23347:25080							
ANR	806968	FunctionDef	"default_get_outline (gs_font_type42 * pfont , uint glyph_index , gs_glyph_data_t * pgd)"		806967	0					
ANR	806969	CompoundStatement		616:0:23462:25080	806967	0					
ANR	806970	IdentifierDeclStatement	"int ( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc ;"	617:4:23468:23567	806967	0	True				
ANR	806971	IdentifierDecl	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		806967	0					
ANR	806972	IdentifierDeclType	"int ( * ) ( gs_font_type42 * , ulong , uint , const byte * * )"		806967	0					
ANR	806973	Identifier	string_proc		806967	1					
ANR	806974	AssignmentExpression	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		806967	2		=			
ANR	806975	Identifier	string_proc		806967	0					
ANR	806976	MemberAccess	pfont -> data . string_proc		806967	1					
ANR	806977	PtrMemberAccess	pfont -> data		806967	0					
ANR	806978	Identifier	pfont		806967	0					
ANR	806979	Identifier	data		806967	1					
ANR	806980	Identifier	string_proc		806967	1					
ANR	806981	IdentifierDeclStatement	ulong glyph_start ;	619:4:23573:23590	806967	1	True				
ANR	806982	IdentifierDecl	glyph_start		806967	0					
ANR	806983	IdentifierDeclType	ulong		806967	0					
ANR	806984	Identifier	glyph_start		806967	1					
ANR	806985	IdentifierDeclStatement	uint glyph_length ;	620:4:23596:23613	806967	2	True				
ANR	806986	IdentifierDecl	glyph_length		806967	0					
ANR	806987	IdentifierDeclType	uint		806967	0					
ANR	806988	Identifier	glyph_length		806967	1					
ANR	806989	IdentifierDeclStatement	int code ;	621:4:23619:23627	806967	3	True				
ANR	806990	IdentifierDecl	code		806967	0					
ANR	806991	IdentifierDeclType	int		806967	0					
ANR	806992	Identifier	code		806967	1					
ANR	806993	IfStatement	if ( glyph_index >= pfont -> data . numGlyphs )		806967	4					
ANR	806994	Condition	glyph_index >= pfont -> data . numGlyphs	623:9:23639:23674	806967	0	True				
ANR	806995	RelationalExpression	glyph_index >= pfont -> data . numGlyphs		806967	0		>=			
ANR	806996	Identifier	glyph_index		806967	0					
ANR	806997	MemberAccess	pfont -> data . numGlyphs		806967	1					
ANR	806998	PtrMemberAccess	pfont -> data		806967	0					
ANR	806999	Identifier	pfont		806967	0					
ANR	807000	Identifier	data		806967	1					
ANR	807001	Identifier	numGlyphs		806967	1					
ANR	807002	ExpressionStatement	return_error ( gs_error_invalidfont )	624:8:23685:23719	806967	1	True				
ANR	807003	CallExpression	return_error ( gs_error_invalidfont )		806967	0					
ANR	807004	Callee	return_error		806967	0					
ANR	807005	Identifier	return_error		806967	0					
ANR	807006	ArgumentList	gs_error_invalidfont		806967	1					
ANR	807007	Argument	gs_error_invalidfont		806967	0					
ANR	807008	Identifier	gs_error_invalidfont		806967	0					
ANR	807009	ExpressionStatement	"glyph_start = get_glyph_offset ( pfont , glyph_index )"	625:4:23725:23775	806967	5	True				
ANR	807010	AssignmentExpression	"glyph_start = get_glyph_offset ( pfont , glyph_index )"		806967	0		=			
ANR	807011	Identifier	glyph_start		806967	0					
ANR	807012	CallExpression	"get_glyph_offset ( pfont , glyph_index )"		806967	1					
ANR	807013	Callee	get_glyph_offset		806967	0					
ANR	807014	Identifier	get_glyph_offset		806967	0					
ANR	807015	ArgumentList	pfont		806967	1					
ANR	807016	Argument	pfont		806967	0					
ANR	807017	Identifier	pfont		806967	0					
ANR	807018	Argument	glyph_index		806967	1					
ANR	807019	Identifier	glyph_index		806967	0					
ANR	807020	IfStatement	if ( pfont -> data . len_glyphs )		806967	6					
ANR	807021	Condition	pfont -> data . len_glyphs	626:8:23785:23806	806967	0	True				
ANR	807022	MemberAccess	pfont -> data . len_glyphs		806967	0					
ANR	807023	PtrMemberAccess	pfont -> data		806967	0					
ANR	807024	Identifier	pfont		806967	0					
ANR	807025	Identifier	data		806967	1					
ANR	807026	Identifier	len_glyphs		806967	1					
ANR	807027	ExpressionStatement	glyph_length = pfont -> data . len_glyphs [ glyph_index ]	627:8:23817:23867	806967	1	True				
ANR	807028	AssignmentExpression	glyph_length = pfont -> data . len_glyphs [ glyph_index ]		806967	0		=			
ANR	807029	Identifier	glyph_length		806967	0					
ANR	807030	ArrayIndexing	pfont -> data . len_glyphs [ glyph_index ]		806967	1					
ANR	807031	MemberAccess	pfont -> data . len_glyphs		806967	0					
ANR	807032	PtrMemberAccess	pfont -> data		806967	0					
ANR	807033	Identifier	pfont		806967	0					
ANR	807034	Identifier	data		806967	1					
ANR	807035	Identifier	len_glyphs		806967	1					
ANR	807036	Identifier	glyph_index		806967	1					
ANR	807037	ElseStatement	else		806967	0					
ANR	807038	ExpressionStatement	glyph_length = 0	629:8:23886:23902	806967	0	True				
ANR	807039	AssignmentExpression	glyph_length = 0		806967	0		=			
ANR	807040	Identifier	glyph_length		806967	0					
ANR	807041	PrimaryExpression	0		806967	1					
ANR	807042	IfStatement	if ( glyph_length == 0 )		806967	7					
ANR	807043	Condition	glyph_length == 0	630:8:23912:23928	806967	0	True				
ANR	807044	EqualityExpression	glyph_length == 0		806967	0		==			
ANR	807045	Identifier	glyph_length		806967	0					
ANR	807046	PrimaryExpression	0		806967	1					
ANR	807047	ExpressionStatement	gs_glyph_data_from_null ( pgd )	631:8:23939:23967	806967	1	True				
ANR	807048	CallExpression	gs_glyph_data_from_null ( pgd )		806967	0					
ANR	807049	Callee	gs_glyph_data_from_null		806967	0					
ANR	807050	Identifier	gs_glyph_data_from_null		806967	0					
ANR	807051	ArgumentList	pgd		806967	1					
ANR	807052	Argument	pgd		806967	0					
ANR	807053	Identifier	pgd		806967	0					
ANR	807054	ElseStatement	else		806967	0					
ANR	807055	CompoundStatement		19:8:551:560	806967	0					
ANR	807056	IdentifierDeclStatement	const byte * data ;	633:8:23988:24004	806967	0	True				
ANR	807057	IdentifierDecl	* data		806967	0					
ANR	807058	IdentifierDeclType	const byte *		806967	0					
ANR	807059	Identifier	data		806967	1					
ANR	807060	IdentifierDeclStatement	byte * buf ;	634:8:24014:24023	806967	1	True				
ANR	807061	IdentifierDecl	* buf		806967	0					
ANR	807062	IdentifierDeclType	byte *		806967	0					
ANR	807063	Identifier	buf		806967	1					
ANR	807064	ExpressionStatement	"code = ( * string_proc ) ( pfont , ( ulong ) ( pfont -> data . glyf + glyph_start ) , glyph_length , & data )"	636:8:24034:24154	806967	2	True				
ANR	807065	AssignmentExpression	"code = ( * string_proc ) ( pfont , ( ulong ) ( pfont -> data . glyf + glyph_start ) , glyph_length , & data )"		806967	0		=			
ANR	807066	Identifier	code		806967	0					
ANR	807067	CallExpression	"( * string_proc ) ( pfont , ( ulong ) ( pfont -> data . glyf + glyph_start ) , glyph_length , & data )"		806967	1					
ANR	807068	Callee	* string_proc		806967	0					
ANR	807069	UnaryOperationExpression	* string_proc		806967	0					
ANR	807070	UnaryOperator	*		806967	0					
ANR	807071	Identifier	string_proc		806967	1					
ANR	807072	ArgumentList	pfont		806967	1					
ANR	807073	Argument	pfont		806967	0					
ANR	807074	Identifier	pfont		806967	0					
ANR	807075	Argument	( ulong ) ( pfont -> data . glyf + glyph_start )		806967	1					
ANR	807076	CastExpression	( ulong ) ( pfont -> data . glyf + glyph_start )		806967	0					
ANR	807077	CastTarget	ulong		806967	0					
ANR	807078	AdditiveExpression	pfont -> data . glyf + glyph_start		806967	1		+			
ANR	807079	MemberAccess	pfont -> data . glyf		806967	0					
ANR	807080	PtrMemberAccess	pfont -> data		806967	0					
ANR	807081	Identifier	pfont		806967	0					
ANR	807082	Identifier	data		806967	1					
ANR	807083	Identifier	glyf		806967	1					
ANR	807084	Identifier	glyph_start		806967	1					
ANR	807085	Argument	glyph_length		806967	2					
ANR	807086	Identifier	glyph_length		806967	0					
ANR	807087	Argument	& data		806967	3					
ANR	807088	UnaryOperationExpression	& data		806967	0					
ANR	807089	UnaryOperator	&		806967	0					
ANR	807090	Identifier	data		806967	1					
ANR	807091	IfStatement	if ( code < 0 )		806967	3					
ANR	807092	Condition	code < 0	638:12:24168:24175	806967	0	True				
ANR	807093	RelationalExpression	code < 0		806967	0		<			
ANR	807094	Identifier	code		806967	0					
ANR	807095	PrimaryExpression	0		806967	1					
ANR	807096	ReturnStatement	return code ;	639:12:24190:24201	806967	1	True				
ANR	807097	Identifier	code		806967	0					
ANR	807098	IfStatement	if ( code == 0 )		806967	4					
ANR	807099	Condition	code == 0	640:12:24215:24223	806967	0	True				
ANR	807100	EqualityExpression	code == 0		806967	0		==			
ANR	807101	Identifier	code		806967	0					
ANR	807102	PrimaryExpression	0		806967	1					
ANR	807103	ExpressionStatement	"gs_glyph_data_from_string ( pgd , data , glyph_length , NULL )"	641:12:24238:24294	806967	1	True				
ANR	807104	CallExpression	"gs_glyph_data_from_string ( pgd , data , glyph_length , NULL )"		806967	0					
ANR	807105	Callee	gs_glyph_data_from_string		806967	0					
ANR	807106	Identifier	gs_glyph_data_from_string		806967	0					
ANR	807107	ArgumentList	pgd		806967	1					
ANR	807108	Argument	pgd		806967	0					
ANR	807109	Identifier	pgd		806967	0					
ANR	807110	Argument	data		806967	1					
ANR	807111	Identifier	data		806967	0					
ANR	807112	Argument	glyph_length		806967	2					
ANR	807113	Identifier	glyph_length		806967	0					
ANR	807114	Argument	NULL		806967	3					
ANR	807115	Identifier	NULL		806967	0					
ANR	807116	ElseStatement	else		806967	0					
ANR	807117	CompoundStatement		27:13:846:846	806967	0					
ANR	807118	ExpressionStatement	"buf = ( byte * ) gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"	651:12:24619:24698	806967	0	True				
ANR	807119	AssignmentExpression	"buf = ( byte * ) gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"		806967	0		=			
ANR	807120	Identifier	buf		806967	0					
ANR	807121	CastExpression	"( byte * ) gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"		806967	1					
ANR	807122	CastTarget	byte *		806967	0					
ANR	807123	CallExpression	"gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"		806967	1					
ANR	807124	Callee	gs_alloc_string		806967	0					
ANR	807125	Identifier	gs_alloc_string		806967	0					
ANR	807126	ArgumentList	pgd -> memory		806967	1					
ANR	807127	Argument	pgd -> memory		806967	0					
ANR	807128	PtrMemberAccess	pgd -> memory		806967	0					
ANR	807129	Identifier	pgd		806967	0					
ANR	807130	Identifier	memory		806967	1					
ANR	807131	Argument	glyph_length		806967	1					
ANR	807132	Identifier	glyph_length		806967	0					
ANR	807133	Argument	"""default_get_outline"""		806967	2					
ANR	807134	PrimaryExpression	"""default_get_outline"""		806967	0					
ANR	807135	IfStatement	if ( buf == 0 )		806967	1					
ANR	807136	Condition	buf == 0	652:16:24716:24723	806967	0	True				
ANR	807137	EqualityExpression	buf == 0		806967	0		==			
ANR	807138	Identifier	buf		806967	0					
ANR	807139	PrimaryExpression	0		806967	1					
ANR	807140	ExpressionStatement	return_error ( gs_error_VMerror )	653:16:24742:24772	806967	1	True				
ANR	807141	CallExpression	return_error ( gs_error_VMerror )		806967	0					
ANR	807142	Callee	return_error		806967	0					
ANR	807143	Identifier	return_error		806967	0					
ANR	807144	ArgumentList	gs_error_VMerror		806967	1					
ANR	807145	Argument	gs_error_VMerror		806967	0					
ANR	807146	Identifier	gs_error_VMerror		806967	0					
ANR	807147	ExpressionStatement	"gs_glyph_data_from_string ( pgd , buf , glyph_length , ( gs_font * ) pfont )"	654:12:24786:24853	806967	2	True				
ANR	807148	CallExpression	"gs_glyph_data_from_string ( pgd , buf , glyph_length , ( gs_font * ) pfont )"		806967	0					
ANR	807149	Callee	gs_glyph_data_from_string		806967	0					
ANR	807150	Identifier	gs_glyph_data_from_string		806967	0					
ANR	807151	ArgumentList	pgd		806967	1					
ANR	807152	Argument	pgd		806967	0					
ANR	807153	Identifier	pgd		806967	0					
ANR	807154	Argument	buf		806967	1					
ANR	807155	Identifier	buf		806967	0					
ANR	807156	Argument	glyph_length		806967	2					
ANR	807157	Identifier	glyph_length		806967	0					
ANR	807158	Argument	( gs_font * ) pfont		806967	3					
ANR	807159	CastExpression	( gs_font * ) pfont		806967	0					
ANR	807160	CastTarget	gs_font *		806967	0					
ANR	807161	Identifier	pfont		806967	1					
ANR	807162	ExpressionStatement	"memcpy ( buf , data , code )"	655:12:24867:24890	806967	3	True				
ANR	807163	CallExpression	"memcpy ( buf , data , code )"		806967	0					
ANR	807164	Callee	memcpy		806967	0					
ANR	807165	Identifier	memcpy		806967	0					
ANR	807166	ArgumentList	buf		806967	1					
ANR	807167	Argument	buf		806967	0					
ANR	807168	Identifier	buf		806967	0					
ANR	807169	Argument	data		806967	1					
ANR	807170	Identifier	data		806967	0					
ANR	807171	Argument	code		806967	2					
ANR	807172	Identifier	code		806967	0					
ANR	807173	ReturnStatement	"return gs_type42_read_data ( pfont , pfont -> data . glyf + glyph_start + code , glyph_length - code , buf + code ) ;"	656:12:24904:25048	806967	4	True				
ANR	807174	CallExpression	"gs_type42_read_data ( pfont , pfont -> data . glyf + glyph_start + code , glyph_length - code , buf + code )"		806967	0					
ANR	807175	Callee	gs_type42_read_data		806967	0					
ANR	807176	Identifier	gs_type42_read_data		806967	0					
ANR	807177	ArgumentList	pfont		806967	1					
ANR	807178	Argument	pfont		806967	0					
ANR	807179	Identifier	pfont		806967	0					
ANR	807180	Argument	pfont -> data . glyf + glyph_start + code		806967	1					
ANR	807181	AdditiveExpression	pfont -> data . glyf + glyph_start + code		806967	0		+			
ANR	807182	MemberAccess	pfont -> data . glyf		806967	0					
ANR	807183	PtrMemberAccess	pfont -> data		806967	0					
ANR	807184	Identifier	pfont		806967	0					
ANR	807185	Identifier	data		806967	1					
ANR	807186	Identifier	glyf		806967	1					
ANR	807187	AdditiveExpression	glyph_start + code		806967	1		+			
ANR	807188	Identifier	glyph_start		806967	0					
ANR	807189	Identifier	code		806967	1					
ANR	807190	Argument	glyph_length - code		806967	2					
ANR	807191	AdditiveExpression	glyph_length - code		806967	0		-			
ANR	807192	Identifier	glyph_length		806967	0					
ANR	807193	Identifier	code		806967	1					
ANR	807194	Argument	buf + code		806967	3					
ANR	807195	AdditiveExpression	buf + code		806967	0		+			
ANR	807196	Identifier	buf		806967	0					
ANR	807197	Identifier	code		806967	1					
ANR	807198	ReturnStatement	return 0 ;	660:4:25070:25078	806967	8	True				
ANR	807199	PrimaryExpression	0		806967	0					
ANR	807200	ReturnType	static int		806967	1					
ANR	807201	Identifier	default_get_outline		806967	2					
ANR	807202	ParameterList	"gs_font_type42 * pfont , uint glyph_index , gs_glyph_data_t * pgd"		806967	3					
ANR	807203	Parameter	gs_font_type42 * pfont	614:20:23378:23399	806967	0	True				
ANR	807204	ParameterType	gs_font_type42 *		806967	0					
ANR	807205	Identifier	pfont		806967	1					
ANR	807206	Parameter	uint glyph_index	614:44:23402:23417	806967	1	True				
ANR	807207	ParameterType	uint		806967	0					
ANR	807208	Identifier	glyph_index		806967	1					
ANR	807209	Parameter	gs_glyph_data_t * pgd	615:20:23440:23459	806967	2	True				
ANR	807210	ParameterType	gs_glyph_data_t *		806967	0					
ANR	807211	Identifier	pgd		806967	1					
ANR	807212	CFGEntryNode	ENTRY		806967		True				
ANR	807213	CFGExitNode	EXIT		806967		True				
ANR	807214	Symbol	code		806967						
ANR	807215	Symbol	glyph_index		806967						
ANR	807216	Symbol	data		806967						
ANR	807217	Symbol	glyph_start		806967						
ANR	807218	Symbol	* pfont -> data		806967						
ANR	807219	Symbol	pfont -> data . string_proc		806967						
ANR	807220	Symbol	* * pfont		806967						
ANR	807221	Symbol	pgd		806967						
ANR	807222	Symbol	glyph_length		806967						
ANR	807223	Symbol	get_glyph_offset		806967						
ANR	807224	Symbol	pgd -> memory		806967						
ANR	807225	Symbol	* pfont -> data . len_glyphs		806967						
ANR	807226	Symbol	gs_alloc_string		806967						
ANR	807227	Symbol	gs_error_invalidfont		806967						
ANR	807228	Symbol	gs_type42_read_data		806967						
ANR	807229	Symbol	pfont -> data . numGlyphs		806967						
ANR	807230	Symbol	* string_proc		806967						
ANR	807231	Symbol	NULL		806967						
ANR	807232	Symbol	pfont		806967						
ANR	807233	Symbol	* glyph_index		806967						
ANR	807234	Symbol	pfont -> data . len_glyphs		806967						
ANR	807235	Symbol	pfont -> data		806967						
ANR	807236	Symbol	& data		806967						
ANR	807237	Symbol	gs_error_VMerror		806967						
ANR	807238	Symbol	* pfont		806967						
ANR	807239	Symbol	buf		806967						
ANR	807240	Symbol	pfont -> data . glyf		806967						
ANR	807241	Symbol	* pgd		806967						
ANR	807242	Symbol	string_proc		806967						
ANR	807243	Function	gs_type42_get_outline_from_TT_file	664:0:25135:26598							
ANR	807244	FunctionDef	"gs_type42_get_outline_from_TT_file (gs_font_type42 * pfont , stream * s , uint glyph_index , gs_glyph_data_t * pgd)"		807243	0					
ANR	807245	CompoundStatement		667:0:25265:26598	807243	0					
ANR	807246	IdentifierDeclStatement	uchar lbuf [ 8 ] ;	668:4:25271:25284	807243	0	True				
ANR	807247	IdentifierDecl	lbuf [ 8 ]		807243	0					
ANR	807248	IdentifierDeclType	uchar [ 8 ]		807243	0					
ANR	807249	Identifier	lbuf		807243	1					
ANR	807250	PrimaryExpression	8		807243	2					
ANR	807251	IdentifierDeclStatement	ulong glyph_start ;	669:4:25290:25307	807243	1	True				
ANR	807252	IdentifierDecl	glyph_start		807243	0					
ANR	807253	IdentifierDeclType	ulong		807243	0					
ANR	807254	Identifier	glyph_start		807243	1					
ANR	807255	IdentifierDeclStatement	"uint glyph_length , count ;"	670:4:25313:25337	807243	2	True				
ANR	807256	IdentifierDecl	glyph_length		807243	0					
ANR	807257	IdentifierDeclType	uint		807243	0					
ANR	807258	Identifier	glyph_length		807243	1					
ANR	807259	IdentifierDecl	count		807243	1					
ANR	807260	IdentifierDeclType	uint		807243	0					
ANR	807261	Identifier	count		807243	1					
ANR	807262	IfStatement	if ( pfont -> data . indexToLocFormat )		807243	3					
ANR	807263	Condition	pfont -> data . indexToLocFormat	675:8:25504:25531	807243	0	True				
ANR	807264	MemberAccess	pfont -> data . indexToLocFormat		807243	0					
ANR	807265	PtrMemberAccess	pfont -> data		807243	0					
ANR	807266	Identifier	pfont		807243	0					
ANR	807267	Identifier	data		807243	1					
ANR	807268	Identifier	indexToLocFormat		807243	1					
ANR	807269	CompoundStatement		9:38:268:268	807243	1					
ANR	807270	ExpressionStatement	"sseek ( s , pfont -> data . loca + glyph_index * 4 )"	676:8:25544:25588	807243	0	True				
ANR	807271	CallExpression	"sseek ( s , pfont -> data . loca + glyph_index * 4 )"		807243	0					
ANR	807272	Callee	sseek		807243	0					
ANR	807273	Identifier	sseek		807243	0					
ANR	807274	ArgumentList	s		807243	1					
ANR	807275	Argument	s		807243	0					
ANR	807276	Identifier	s		807243	0					
ANR	807277	Argument	pfont -> data . loca + glyph_index * 4		807243	1					
ANR	807278	AdditiveExpression	pfont -> data . loca + glyph_index * 4		807243	0		+			
ANR	807279	MemberAccess	pfont -> data . loca		807243	0					
ANR	807280	PtrMemberAccess	pfont -> data		807243	0					
ANR	807281	Identifier	pfont		807243	0					
ANR	807282	Identifier	data		807243	1					
ANR	807283	Identifier	loca		807243	1					
ANR	807284	MultiplicativeExpression	glyph_index * 4		807243	1		*			
ANR	807285	Identifier	glyph_index		807243	0					
ANR	807286	PrimaryExpression	4		807243	1					
ANR	807287	ExpressionStatement	"sgets ( s , lbuf , 8 , & count )"	677:8:25598:25623	807243	1	True				
ANR	807288	CallExpression	"sgets ( s , lbuf , 8 , & count )"		807243	0					
ANR	807289	Callee	sgets		807243	0					
ANR	807290	Identifier	sgets		807243	0					
ANR	807291	ArgumentList	s		807243	1					
ANR	807292	Argument	s		807243	0					
ANR	807293	Identifier	s		807243	0					
ANR	807294	Argument	lbuf		807243	1					
ANR	807295	Identifier	lbuf		807243	0					
ANR	807296	Argument	8		807243	2					
ANR	807297	PrimaryExpression	8		807243	0					
ANR	807298	Argument	& count		807243	3					
ANR	807299	UnaryOperationExpression	& count		807243	0					
ANR	807300	UnaryOperator	&		807243	0					
ANR	807301	Identifier	count		807243	1					
ANR	807302	IfStatement	if ( count < 8 )		807243	2					
ANR	807303	Condition	count < 8	678:12:25637:25645	807243	0	True				
ANR	807304	RelationalExpression	count < 8		807243	0		<			
ANR	807305	Identifier	count		807243	0					
ANR	807306	PrimaryExpression	8		807243	1					
ANR	807307	ExpressionStatement	return_error ( gs_error_invalidfont )	679:12:25660:25694	807243	1	True				
ANR	807308	CallExpression	return_error ( gs_error_invalidfont )		807243	0					
ANR	807309	Callee	return_error		807243	0					
ANR	807310	Identifier	return_error		807243	0					
ANR	807311	ArgumentList	gs_error_invalidfont		807243	1					
ANR	807312	Argument	gs_error_invalidfont		807243	0					
ANR	807313	Identifier	gs_error_invalidfont		807243	0					
ANR	807314	ExpressionStatement	glyph_start = u32 ( lbuf )	680:8:25704:25727	807243	3	True				
ANR	807315	AssignmentExpression	glyph_start = u32 ( lbuf )		807243	0		=			
ANR	807316	Identifier	glyph_start		807243	0					
ANR	807317	CallExpression	u32 ( lbuf )		807243	1					
ANR	807318	Callee	u32		807243	0					
ANR	807319	Identifier	u32		807243	0					
ANR	807320	ArgumentList	lbuf		807243	1					
ANR	807321	Argument	lbuf		807243	0					
ANR	807322	Identifier	lbuf		807243	0					
ANR	807323	ExpressionStatement	glyph_length = u32 ( lbuf + 4 ) - glyph_start	681:8:25737:25779	807243	4	True				
ANR	807324	AssignmentExpression	glyph_length = u32 ( lbuf + 4 ) - glyph_start		807243	0		=			
ANR	807325	Identifier	glyph_length		807243	0					
ANR	807326	AdditiveExpression	u32 ( lbuf + 4 ) - glyph_start		807243	1		-			
ANR	807327	CallExpression	u32 ( lbuf + 4 )		807243	0					
ANR	807328	Callee	u32		807243	0					
ANR	807329	Identifier	u32		807243	0					
ANR	807330	ArgumentList	lbuf + 4		807243	1					
ANR	807331	Argument	lbuf + 4		807243	0					
ANR	807332	AdditiveExpression	lbuf + 4		807243	0		+			
ANR	807333	Identifier	lbuf		807243	0					
ANR	807334	PrimaryExpression	4		807243	1					
ANR	807335	Identifier	glyph_start		807243	1					
ANR	807336	ElseStatement	else		807243	0					
ANR	807337	CompoundStatement		16:11:526:526	807243	0					
ANR	807338	ExpressionStatement	"sseek ( s , pfont -> data . loca + glyph_index * 2 )"	683:8:25802:25846	807243	0	True				
ANR	807339	CallExpression	"sseek ( s , pfont -> data . loca + glyph_index * 2 )"		807243	0					
ANR	807340	Callee	sseek		807243	0					
ANR	807341	Identifier	sseek		807243	0					
ANR	807342	ArgumentList	s		807243	1					
ANR	807343	Argument	s		807243	0					
ANR	807344	Identifier	s		807243	0					
ANR	807345	Argument	pfont -> data . loca + glyph_index * 2		807243	1					
ANR	807346	AdditiveExpression	pfont -> data . loca + glyph_index * 2		807243	0		+			
ANR	807347	MemberAccess	pfont -> data . loca		807243	0					
ANR	807348	PtrMemberAccess	pfont -> data		807243	0					
ANR	807349	Identifier	pfont		807243	0					
ANR	807350	Identifier	data		807243	1					
ANR	807351	Identifier	loca		807243	1					
ANR	807352	MultiplicativeExpression	glyph_index * 2		807243	1		*			
ANR	807353	Identifier	glyph_index		807243	0					
ANR	807354	PrimaryExpression	2		807243	1					
ANR	807355	ExpressionStatement	"sgets ( s , lbuf , 4 , & count )"	684:8:25856:25881	807243	1	True				
ANR	807356	CallExpression	"sgets ( s , lbuf , 4 , & count )"		807243	0					
ANR	807357	Callee	sgets		807243	0					
ANR	807358	Identifier	sgets		807243	0					
ANR	807359	ArgumentList	s		807243	1					
ANR	807360	Argument	s		807243	0					
ANR	807361	Identifier	s		807243	0					
ANR	807362	Argument	lbuf		807243	1					
ANR	807363	Identifier	lbuf		807243	0					
ANR	807364	Argument	4		807243	2					
ANR	807365	PrimaryExpression	4		807243	0					
ANR	807366	Argument	& count		807243	3					
ANR	807367	UnaryOperationExpression	& count		807243	0					
ANR	807368	UnaryOperator	&		807243	0					
ANR	807369	Identifier	count		807243	1					
ANR	807370	IfStatement	if ( count < 4 )		807243	2					
ANR	807371	Condition	count < 4	685:12:25895:25903	807243	0	True				
ANR	807372	RelationalExpression	count < 4		807243	0		<			
ANR	807373	Identifier	count		807243	0					
ANR	807374	PrimaryExpression	4		807243	1					
ANR	807375	ExpressionStatement	return_error ( gs_error_invalidfont )	686:12:25918:25952	807243	1	True				
ANR	807376	CallExpression	return_error ( gs_error_invalidfont )		807243	0					
ANR	807377	Callee	return_error		807243	0					
ANR	807378	Identifier	return_error		807243	0					
ANR	807379	ArgumentList	gs_error_invalidfont		807243	1					
ANR	807380	Argument	gs_error_invalidfont		807243	0					
ANR	807381	Identifier	gs_error_invalidfont		807243	0					
ANR	807382	ExpressionStatement	glyph_start = ( ulong ) U16 ( lbuf ) << 1	687:8:25962:25998	807243	3	True				
ANR	807383	AssignmentExpression	glyph_start = ( ulong ) U16 ( lbuf ) << 1		807243	0		=			
ANR	807384	Identifier	glyph_start		807243	0					
ANR	807385	ShiftExpression	( ulong ) U16 ( lbuf ) << 1		807243	1		<<			
ANR	807386	CastExpression	( ulong ) U16 ( lbuf )		807243	0					
ANR	807387	CastTarget	ulong		807243	0					
ANR	807388	CallExpression	U16 ( lbuf )		807243	1					
ANR	807389	Callee	U16		807243	0					
ANR	807390	Identifier	U16		807243	0					
ANR	807391	ArgumentList	lbuf		807243	1					
ANR	807392	Argument	lbuf		807243	0					
ANR	807393	Identifier	lbuf		807243	0					
ANR	807394	PrimaryExpression	1		807243	1					
ANR	807395	ExpressionStatement	glyph_length = ( ( ulong ) U16 ( lbuf + 2 ) << 1 ) - glyph_start	688:8:26008:26065	807243	4	True				
ANR	807396	AssignmentExpression	glyph_length = ( ( ulong ) U16 ( lbuf + 2 ) << 1 ) - glyph_start		807243	0		=			
ANR	807397	Identifier	glyph_length		807243	0					
ANR	807398	AdditiveExpression	( ( ulong ) U16 ( lbuf + 2 ) << 1 ) - glyph_start		807243	1		-			
ANR	807399	ShiftExpression	( ulong ) U16 ( lbuf + 2 ) << 1		807243	0		<<			
ANR	807400	CastExpression	( ulong ) U16 ( lbuf + 2 )		807243	0					
ANR	807401	CastTarget	ulong		807243	0					
ANR	807402	CallExpression	U16 ( lbuf + 2 )		807243	1					
ANR	807403	Callee	U16		807243	0					
ANR	807404	Identifier	U16		807243	0					
ANR	807405	ArgumentList	lbuf + 2		807243	1					
ANR	807406	Argument	lbuf + 2		807243	0					
ANR	807407	AdditiveExpression	lbuf + 2		807243	0		+			
ANR	807408	Identifier	lbuf		807243	0					
ANR	807409	PrimaryExpression	2		807243	1					
ANR	807410	PrimaryExpression	1		807243	1					
ANR	807411	Identifier	glyph_start		807243	1					
ANR	807412	IfStatement	if ( glyph_length == 0 )		807243	4					
ANR	807413	Condition	glyph_length == 0	690:8:26081:26097	807243	0	True				
ANR	807414	EqualityExpression	glyph_length == 0		807243	0		==			
ANR	807415	Identifier	glyph_length		807243	0					
ANR	807416	PrimaryExpression	0		807243	1					
ANR	807417	ExpressionStatement	gs_glyph_data_from_null ( pgd )	691:8:26108:26136	807243	1	True				
ANR	807418	CallExpression	gs_glyph_data_from_null ( pgd )		807243	0					
ANR	807419	Callee	gs_glyph_data_from_null		807243	0					
ANR	807420	Identifier	gs_glyph_data_from_null		807243	0					
ANR	807421	ArgumentList	pgd		807243	1					
ANR	807422	Argument	pgd		807243	0					
ANR	807423	Identifier	pgd		807243	0					
ANR	807424	ElseStatement	else		807243	0					
ANR	807425	CompoundStatement		27:8:891:900	807243	0					
ANR	807426	IdentifierDeclStatement	byte * buf ;	693:8:26157:26166	807243	0	True				
ANR	807427	IdentifierDecl	* buf		807243	0					
ANR	807428	IdentifierDeclType	byte *		807243	0					
ANR	807429	Identifier	buf		807243	1					
ANR	807430	ExpressionStatement	"sseek ( s , pfont -> data . glyf + glyph_start )"	695:8:26177:26217	807243	1	True				
ANR	807431	CallExpression	"sseek ( s , pfont -> data . glyf + glyph_start )"		807243	0					
ANR	807432	Callee	sseek		807243	0					
ANR	807433	Identifier	sseek		807243	0					
ANR	807434	ArgumentList	s		807243	1					
ANR	807435	Argument	s		807243	0					
ANR	807436	Identifier	s		807243	0					
ANR	807437	Argument	pfont -> data . glyf + glyph_start		807243	1					
ANR	807438	AdditiveExpression	pfont -> data . glyf + glyph_start		807243	0		+			
ANR	807439	MemberAccess	pfont -> data . glyf		807243	0					
ANR	807440	PtrMemberAccess	pfont -> data		807243	0					
ANR	807441	Identifier	pfont		807243	0					
ANR	807442	Identifier	data		807243	1					
ANR	807443	Identifier	glyf		807243	1					
ANR	807444	Identifier	glyph_start		807243	1					
ANR	807445	ExpressionStatement	"buf = ( byte * ) gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"	696:8:26227:26306	807243	2	True				
ANR	807446	AssignmentExpression	"buf = ( byte * ) gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"		807243	0		=			
ANR	807447	Identifier	buf		807243	0					
ANR	807448	CastExpression	"( byte * ) gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"		807243	1					
ANR	807449	CastTarget	byte *		807243	0					
ANR	807450	CallExpression	"gs_alloc_string ( pgd -> memory , glyph_length , ""default_get_outline"" )"		807243	1					
ANR	807451	Callee	gs_alloc_string		807243	0					
ANR	807452	Identifier	gs_alloc_string		807243	0					
ANR	807453	ArgumentList	pgd -> memory		807243	1					
ANR	807454	Argument	pgd -> memory		807243	0					
ANR	807455	PtrMemberAccess	pgd -> memory		807243	0					
ANR	807456	Identifier	pgd		807243	0					
ANR	807457	Identifier	memory		807243	1					
ANR	807458	Argument	glyph_length		807243	1					
ANR	807459	Identifier	glyph_length		807243	0					
ANR	807460	Argument	"""default_get_outline"""		807243	2					
ANR	807461	PrimaryExpression	"""default_get_outline"""		807243	0					
ANR	807462	IfStatement	if ( buf == 0 )		807243	3					
ANR	807463	Condition	buf == 0	697:12:26320:26327	807243	0	True				
ANR	807464	EqualityExpression	buf == 0		807243	0		==			
ANR	807465	Identifier	buf		807243	0					
ANR	807466	PrimaryExpression	0		807243	1					
ANR	807467	ExpressionStatement	return_error ( gs_error_VMerror )	698:12:26342:26372	807243	1	True				
ANR	807468	CallExpression	return_error ( gs_error_VMerror )		807243	0					
ANR	807469	Callee	return_error		807243	0					
ANR	807470	Identifier	return_error		807243	0					
ANR	807471	ArgumentList	gs_error_VMerror		807243	1					
ANR	807472	Argument	gs_error_VMerror		807243	0					
ANR	807473	Identifier	gs_error_VMerror		807243	0					
ANR	807474	ExpressionStatement	"gs_glyph_data_from_string ( pgd , buf , glyph_length , ( gs_font * ) pfont )"	699:8:26382:26449	807243	4	True				
ANR	807475	CallExpression	"gs_glyph_data_from_string ( pgd , buf , glyph_length , ( gs_font * ) pfont )"		807243	0					
ANR	807476	Callee	gs_glyph_data_from_string		807243	0					
ANR	807477	Identifier	gs_glyph_data_from_string		807243	0					
ANR	807478	ArgumentList	pgd		807243	1					
ANR	807479	Argument	pgd		807243	0					
ANR	807480	Identifier	pgd		807243	0					
ANR	807481	Argument	buf		807243	1					
ANR	807482	Identifier	buf		807243	0					
ANR	807483	Argument	glyph_length		807243	2					
ANR	807484	Identifier	glyph_length		807243	0					
ANR	807485	Argument	( gs_font * ) pfont		807243	3					
ANR	807486	CastExpression	( gs_font * ) pfont		807243	0					
ANR	807487	CastTarget	gs_font *		807243	0					
ANR	807488	Identifier	pfont		807243	1					
ANR	807489	ExpressionStatement	"sgets ( s , buf , glyph_length , & count )"	700:8:26459:26494	807243	5	True				
ANR	807490	CallExpression	"sgets ( s , buf , glyph_length , & count )"		807243	0					
ANR	807491	Callee	sgets		807243	0					
ANR	807492	Identifier	sgets		807243	0					
ANR	807493	ArgumentList	s		807243	1					
ANR	807494	Argument	s		807243	0					
ANR	807495	Identifier	s		807243	0					
ANR	807496	Argument	buf		807243	1					
ANR	807497	Identifier	buf		807243	0					
ANR	807498	Argument	glyph_length		807243	2					
ANR	807499	Identifier	glyph_length		807243	0					
ANR	807500	Argument	& count		807243	3					
ANR	807501	UnaryOperationExpression	& count		807243	0					
ANR	807502	UnaryOperator	&		807243	0					
ANR	807503	Identifier	count		807243	1					
ANR	807504	IfStatement	if ( count < glyph_length )		807243	6					
ANR	807505	Condition	count < glyph_length	701:12:26508:26527	807243	0	True				
ANR	807506	RelationalExpression	count < glyph_length		807243	0		<			
ANR	807507	Identifier	count		807243	0					
ANR	807508	Identifier	glyph_length		807243	1					
ANR	807509	ExpressionStatement	return_error ( gs_error_invalidfont )	702:12:26542:26576	807243	1	True				
ANR	807510	CallExpression	return_error ( gs_error_invalidfont )		807243	0					
ANR	807511	Callee	return_error		807243	0					
ANR	807512	Identifier	return_error		807243	0					
ANR	807513	ArgumentList	gs_error_invalidfont		807243	1					
ANR	807514	Argument	gs_error_invalidfont		807243	0					
ANR	807515	Identifier	gs_error_invalidfont		807243	0					
ANR	807516	ReturnStatement	return 0 ;	704:4:26588:26596	807243	5	True				
ANR	807517	PrimaryExpression	0		807243	0					
ANR	807518	ReturnType	int		807243	1					
ANR	807519	Identifier	gs_type42_get_outline_from_TT_file		807243	2					
ANR	807520	ParameterList	"gs_font_type42 * pfont , stream * s , uint glyph_index , gs_glyph_data_t * pgd"		807243	3					
ANR	807521	Parameter	gs_font_type42 * pfont	665:35:25174:25195	807243	0	True				
ANR	807522	ParameterType	gs_font_type42 *		807243	0					
ANR	807523	Identifier	pfont		807243	1					
ANR	807524	Parameter	stream * s	665:59:25198:25206	807243	1	True				
ANR	807525	ParameterType	stream *		807243	0					
ANR	807526	Identifier	s		807243	1					
ANR	807527	Parameter	uint glyph_index	665:70:25209:25224	807243	2	True				
ANR	807528	ParameterType	uint		807243	0					
ANR	807529	Identifier	glyph_index		807243	1					
ANR	807530	Parameter	gs_glyph_data_t * pgd	666:16:25243:25262	807243	3	True				
ANR	807531	ParameterType	gs_glyph_data_t *		807243	0					
ANR	807532	Identifier	pgd		807243	1					
ANR	807533	CFGEntryNode	ENTRY		807243		True				
ANR	807534	CFGExitNode	EXIT		807243		True				
ANR	807535	Symbol	pfont -> data . indexToLocFormat		807243						
ANR	807536	Symbol	pfont -> data . loca		807243						
ANR	807537	Symbol	glyph_index		807243						
ANR	807538	Symbol	pfont		807243						
ANR	807539	Symbol	glyph_start		807243						
ANR	807540	Symbol	count		807243						
ANR	807541	Symbol	pfont -> data		807243						
ANR	807542	Symbol	pgd		807243						
ANR	807543	Symbol	glyph_length		807243						
ANR	807544	Symbol	gs_error_VMerror		807243						
ANR	807545	Symbol	* pfont		807243						
ANR	807546	Symbol	buf		807243						
ANR	807547	Symbol	s		807243						
ANR	807548	Symbol	lbuf		807243						
ANR	807549	Symbol	u32		807243						
ANR	807550	Symbol	pfont -> data . glyf		807243						
ANR	807551	Symbol	* pgd		807243						
ANR	807552	Symbol	pgd -> memory		807243						
ANR	807553	Symbol	& count		807243						
ANR	807554	Symbol	U16		807243						
ANR	807555	Symbol	gs_alloc_string		807243						
ANR	807556	Symbol	gs_error_invalidfont		807243						
ANR	807557	Function	gs_type42_substitute_glyph_index_vertical	707:0:26601:37039							
ANR	807558	FunctionDef	"gs_type42_substitute_glyph_index_vertical (gs_font_type42 * pfont , uint glyph_index , int WMode , gs_glyph cid)"		807557	0					
ANR	807559	CompoundStatement		710:0:26756:37039	807557	0					
ANR	807560	IdentifierDeclStatement	byte * gsub_ptr = pfont -> data . gsub ;	712:4:26923:26956	807557	0	True				
ANR	807561	IdentifierDecl	* gsub_ptr = pfont -> data . gsub		807557	0					
ANR	807562	IdentifierDeclType	byte *		807557	0					
ANR	807563	Identifier	gsub_ptr		807557	1					
ANR	807564	AssignmentExpression	* gsub_ptr = pfont -> data . gsub		807557	2		=			
ANR	807565	Identifier	gsub_ptr		807557	0					
ANR	807566	MemberAccess	pfont -> data . gsub		807557	1					
ANR	807567	PtrMemberAccess	pfont -> data		807557	0					
ANR	807568	Identifier	pfont		807557	0					
ANR	807569	Identifier	data		807557	1					
ANR	807570	Identifier	gsub		807557	1					
ANR	807571	ClassDefStatement	struct GSUB_s { uint32_t Version ; uint16_t ScriptList ; uint16_t FeatureList ; uint16_t LookupList ; } GSUB ;	713:12:26970:27110	807557	1	True				
ANR	807572	Identifier	GSUB_s		807557	0					
ANR	807573	IdentifierDecl	GSUB		807557	1					
ANR	807574	IdentifierDeclType	GSUB_s		807557	0					
ANR	807575	Identifier	GSUB		807557	1					
ANR	807576	IdentifierDeclStatement	ulong gsub_size = pfont -> data . gsub_size ;	720:4:27175:27214	807557	2	True				
ANR	807577	IdentifierDecl	gsub_size = pfont -> data . gsub_size		807557	0					
ANR	807578	IdentifierDeclType	ulong		807557	0					
ANR	807579	Identifier	gsub_size		807557	1					
ANR	807580	AssignmentExpression	gsub_size = pfont -> data . gsub_size		807557	2		=			
ANR	807581	Identifier	gsub_size		807557	0					
ANR	807582	MemberAccess	pfont -> data . gsub_size		807557	1					
ANR	807583	PtrMemberAccess	pfont -> data		807557	0					
ANR	807584	Identifier	pfont		807557	0					
ANR	807585	Identifier	data		807557	1					
ANR	807586	Identifier	gsub_size		807557	1					
ANR	807587	ClassDefStatement	struct ScriptRecord_s { byte Tag [ 4 ] ; uint16_t Offset ; } ScriptRecord ;	721:12:27228:27374	807557	3	True				
ANR	807588	Identifier	ScriptRecord_s		807557	0					
ANR	807589	IdentifierDecl	ScriptRecord		807557	1					
ANR	807590	IdentifierDeclType	ScriptRecord_s		807557	0					
ANR	807591	Identifier	ScriptRecord		807557	1					
ANR	807592	ClassDefStatement	struct ScriptList_s { uint16_t ScriptCount ; ScriptRecord records [ 1 ] ; } ScriptList ;	725:12:27388:27507	807557	4	True				
ANR	807593	Identifier	ScriptList_s		807557	0					
ANR	807594	IdentifierDecl	ScriptList		807557	1					
ANR	807595	IdentifierDeclType	ScriptList_s		807557	0					
ANR	807596	Identifier	ScriptList		807557	1					
ANR	807597	ClassDefStatement	struct LangSysRecord_s { byte Tag [ 4 ] ; uint16_t Offset ; } LangSysRecord ;	729:12:27521:27673	807557	5	True				
ANR	807598	Identifier	LangSysRecord_s		807557	0					
ANR	807599	IdentifierDecl	LangSysRecord		807557	1					
ANR	807600	IdentifierDeclType	LangSysRecord_s		807557	0					
ANR	807601	Identifier	LangSysRecord		807557	1					
ANR	807602	ClassDefStatement	struct ScriptTable_s { uint16_t DefaultLangSys ; uint16_t LangSysCount ; LangSysRecord records [ 1 ] ; } ScriptTable ;	733:12:27687:27843	807557	6	True				
ANR	807603	Identifier	ScriptTable_s		807557	0					
ANR	807604	IdentifierDecl	ScriptTable		807557	1					
ANR	807605	IdentifierDeclType	ScriptTable_s		807557	0					
ANR	807606	Identifier	ScriptTable		807557	1					
ANR	807607	ClassDefStatement	struct LangSysTable_s { uint16_t LookupOrder ; uint16_t ReqFeatureIndex ; uint16_t FeatureCount ; uint16_t FeatureIndex [ 1 ] ; } LangSysTable ;	738:12:27857:28046	807557	7	True				
ANR	807608	Identifier	LangSysTable_s		807557	0					
ANR	807609	IdentifierDecl	LangSysTable		807557	1					
ANR	807610	IdentifierDeclType	LangSysTable_s		807557	0					
ANR	807611	Identifier	LangSysTable		807557	1					
ANR	807612	ClassDefStatement	struct FeatureRecord_s { byte Tag [ 4 ] ; uint16_t Feature ; } FeatureRecord ;	744:12:28060:28211	807557	8	True				
ANR	807613	Identifier	FeatureRecord_s		807557	0					
ANR	807614	IdentifierDecl	FeatureRecord		807557	1					
ANR	807615	IdentifierDeclType	FeatureRecord_s		807557	0					
ANR	807616	Identifier	FeatureRecord		807557	1					
ANR	807617	ClassDefStatement	struct FeatureListTable_s { uint16_t FeatureCount ; FeatureRecord records [ 1 ] ; } FeatureListTable ;	748:12:28225:28358	807557	9	True				
ANR	807618	Identifier	FeatureListTable_s		807557	0					
ANR	807619	IdentifierDecl	FeatureListTable		807557	1					
ANR	807620	IdentifierDeclType	FeatureListTable_s		807557	0					
ANR	807621	Identifier	FeatureListTable		807557	1					
ANR	807622	ClassDefStatement	struct LookupListTable_s { uint16_t LookupCount ; uint16_t Lookup [ 1 ] ; } LookupListTable ;	753:12:28379:28562	807557	10	True				
ANR	807623	Identifier	LookupListTable_s		807557	0					
ANR	807624	IdentifierDecl	LookupListTable		807557	1					
ANR	807625	IdentifierDeclType	LookupListTable_s		807557	0					
ANR	807626	Identifier	LookupListTable		807557	1					
ANR	807627	ClassDefStatement	struct LookupTable_s { uint16_t LookupType ; uint16_t LookupFlag ; uint16_t SubTableCount ; uint16_t SubTable [ 1 ] ; } LookupTable ;	757:12:28576:28815	807557	11	True				
ANR	807628	Identifier	LookupTable_s		807557	0					
ANR	807629	IdentifierDecl	LookupTable		807557	1					
ANR	807630	IdentifierDeclType	LookupTable_s		807557	0					
ANR	807631	Identifier	LookupTable		807557	1					
ANR	807632	ClassDefStatement	struct SingleSubstFormat1_s { uint16_t SubstFormat ; uint16_t Coverage ; uint16_t DeltaGlyphId ; } SingleSubstFormat1 ;	763:12:28829:29049	807557	12	True				
ANR	807633	Identifier	SingleSubstFormat1_s		807557	0					
ANR	807634	IdentifierDecl	SingleSubstFormat1		807557	1					
ANR	807635	IdentifierDeclType	SingleSubstFormat1_s		807557	0					
ANR	807636	Identifier	SingleSubstFormat1		807557	1					
ANR	807637	IdentifierDeclStatement	uint16_t GlyphID ;	768:12:29063:29079	807557	13	True				
ANR	807638	IdentifierDecl	GlyphID		807557	0					
ANR	807639	IdentifierDeclType	uint16_t		807557	0					
ANR	807640	Identifier	GlyphID		807557	1					
ANR	807641	ClassDefStatement	struct SingleSubstFormat2_s { uint16_t SubstFormat ; uint16_t Coverage ; uint16_t GlyphCount ; GlyphID Substitute [ 1 ] ; } SingleSubstFormat2 ;	769:12:29093:29358	807557	14	True				
ANR	807642	Identifier	SingleSubstFormat2_s		807557	0					
ANR	807643	IdentifierDecl	SingleSubstFormat2		807557	1					
ANR	807644	IdentifierDeclType	SingleSubstFormat2_s		807557	0					
ANR	807645	Identifier	SingleSubstFormat2		807557	1					
ANR	807646	ClassDefStatement	struct CoverageFormat1_s { uint16_t CoverageFormat ; uint16_t GlyphCount ; GlyphID GlyphArray [ 1 ] ; } CoverageFormat1 ;	775:12:29372:29580	807557	15	True				
ANR	807647	Identifier	CoverageFormat1_s		807557	0					
ANR	807648	IdentifierDecl	CoverageFormat1		807557	1					
ANR	807649	IdentifierDeclType	CoverageFormat1_s		807557	0					
ANR	807650	Identifier	CoverageFormat1		807557	1					
ANR	807651	ClassDefStatement	struct RangeRecord_s { GlyphID Start ; GlyphID End ; uint16_t StartCoverageIndex ; } RangeRecord ;	780:12:29594:29827	807557	16	True				
ANR	807652	Identifier	RangeRecord_s		807557	0					
ANR	807653	IdentifierDecl	RangeRecord		807557	1					
ANR	807654	IdentifierDeclType	RangeRecord_s		807557	0					
ANR	807655	Identifier	RangeRecord		807557	1					
ANR	807656	ClassDefStatement	struct CoverageFormat2_s { uint16_t CoverageFormat ; uint16_t RangeCount ; RangeRecord RangeArray [ 1 ] ; } CoverageFormat2 ;	785:12:29841:30053	807557	17	True				
ANR	807657	Identifier	CoverageFormat2_s		807557	0					
ANR	807658	IdentifierDecl	CoverageFormat2		807557	1					
ANR	807659	IdentifierDeclType	CoverageFormat2_s		807557	0					
ANR	807660	Identifier	CoverageFormat2		807557	1					
ANR	807661	IdentifierDeclStatement	"int i , j ;"	790:4:30059:30067	807557	18	True				
ANR	807662	IdentifierDecl	i		807557	0					
ANR	807663	IdentifierDeclType	int		807557	0					
ANR	807664	Identifier	i		807557	1					
ANR	807665	IdentifierDecl	j		807557	1					
ANR	807666	IdentifierDeclType	int		807557	0					
ANR	807667	Identifier	j		807557	1					
ANR	807668	IdentifierDeclStatement	GSUB gsub ;	791:4:30073:30082	807557	19	True				
ANR	807669	IdentifierDecl	gsub		807557	0					
ANR	807670	IdentifierDeclType	GSUB		807557	0					
ANR	807671	Identifier	gsub		807557	1					
ANR	807672	IdentifierDeclStatement	LookupListTable lookup_list_table ;	792:4:30088:30121	807557	20	True				
ANR	807673	IdentifierDecl	lookup_list_table		807557	0					
ANR	807674	IdentifierDeclType	LookupListTable		807557	0					
ANR	807675	Identifier	lookup_list_table		807557	1					
ANR	807676	IdentifierDeclStatement	byte * lookup_list_ptr ;	793:4:30127:30148	807557	21	True				
ANR	807677	IdentifierDecl	* lookup_list_ptr		807557	0					
ANR	807678	IdentifierDeclType	byte *		807557	0					
ANR	807679	Identifier	lookup_list_ptr		807557	1					
ANR	807680	IfStatement	if ( WMode == 0 || gsub_ptr == NULL )		807557	22					
ANR	807681	Condition	WMode == 0 || gsub_ptr == NULL	795:8:30159:30188	807557	0	True				
ANR	807682	OrExpression	WMode == 0 || gsub_ptr == NULL		807557	0		||			
ANR	807683	EqualityExpression	WMode == 0		807557	0		==			
ANR	807684	Identifier	WMode		807557	0					
ANR	807685	PrimaryExpression	0		807557	1					
ANR	807686	EqualityExpression	gsub_ptr == NULL		807557	1		==			
ANR	807687	Identifier	gsub_ptr		807557	0					
ANR	807688	Identifier	NULL		807557	1					
ANR	807689	ReturnStatement	return glyph_index ;	796:8:30199:30217	807557	1	True				
ANR	807690	Identifier	glyph_index		807557	0					
ANR	807691	ExpressionStatement	"gsub . Version = u32 ( gsub_ptr + offset_of ( GSUB , Version ) )"	799:4:30246:30301	807557	23	True				
ANR	807692	AssignmentExpression	"gsub . Version = u32 ( gsub_ptr + offset_of ( GSUB , Version ) )"		807557	0		=			
ANR	807693	MemberAccess	gsub . Version		807557	0					
ANR	807694	Identifier	gsub		807557	0					
ANR	807695	Identifier	Version		807557	1					
ANR	807696	CallExpression	"u32 ( gsub_ptr + offset_of ( GSUB , Version ) )"		807557	1					
ANR	807697	Callee	u32		807557	0					
ANR	807698	Identifier	u32		807557	0					
ANR	807699	ArgumentList	"gsub_ptr + offset_of ( GSUB , Version )"		807557	1					
ANR	807700	Argument	"gsub_ptr + offset_of ( GSUB , Version )"		807557	0					
ANR	807701	AdditiveExpression	"gsub_ptr + offset_of ( GSUB , Version )"		807557	0		+			
ANR	807702	Identifier	gsub_ptr		807557	0					
ANR	807703	CallExpression	"offset_of ( GSUB , Version )"		807557	1					
ANR	807704	Callee	offset_of		807557	0					
ANR	807705	Identifier	offset_of		807557	0					
ANR	807706	ArgumentList	GSUB		807557	1					
ANR	807707	Argument	GSUB		807557	0					
ANR	807708	Identifier	GSUB		807557	0					
ANR	807709	Argument	Version		807557	1					
ANR	807710	Identifier	Version		807557	0					
ANR	807711	ExpressionStatement	"gsub . ScriptList = U16 ( gsub_ptr + offset_of ( GSUB , ScriptList ) )"	800:4:30307:30368	807557	24	True				
ANR	807712	AssignmentExpression	"gsub . ScriptList = U16 ( gsub_ptr + offset_of ( GSUB , ScriptList ) )"		807557	0		=			
ANR	807713	MemberAccess	gsub . ScriptList		807557	0					
ANR	807714	Identifier	gsub		807557	0					
ANR	807715	Identifier	ScriptList		807557	1					
ANR	807716	CallExpression	"U16 ( gsub_ptr + offset_of ( GSUB , ScriptList ) )"		807557	1					
ANR	807717	Callee	U16		807557	0					
ANR	807718	Identifier	U16		807557	0					
ANR	807719	ArgumentList	"gsub_ptr + offset_of ( GSUB , ScriptList )"		807557	1					
ANR	807720	Argument	"gsub_ptr + offset_of ( GSUB , ScriptList )"		807557	0					
ANR	807721	AdditiveExpression	"gsub_ptr + offset_of ( GSUB , ScriptList )"		807557	0		+			
ANR	807722	Identifier	gsub_ptr		807557	0					
ANR	807723	CallExpression	"offset_of ( GSUB , ScriptList )"		807557	1					
ANR	807724	Callee	offset_of		807557	0					
ANR	807725	Identifier	offset_of		807557	0					
ANR	807726	ArgumentList	GSUB		807557	1					
ANR	807727	Argument	GSUB		807557	0					
ANR	807728	Identifier	GSUB		807557	0					
ANR	807729	Argument	ScriptList		807557	1					
ANR	807730	Identifier	ScriptList		807557	0					
ANR	807731	ExpressionStatement	"gsub . FeatureList = U16 ( gsub_ptr + offset_of ( GSUB , FeatureList ) )"	801:4:30374:30437	807557	25	True				
ANR	807732	AssignmentExpression	"gsub . FeatureList = U16 ( gsub_ptr + offset_of ( GSUB , FeatureList ) )"		807557	0		=			
ANR	807733	MemberAccess	gsub . FeatureList		807557	0					
ANR	807734	Identifier	gsub		807557	0					
ANR	807735	Identifier	FeatureList		807557	1					
ANR	807736	CallExpression	"U16 ( gsub_ptr + offset_of ( GSUB , FeatureList ) )"		807557	1					
ANR	807737	Callee	U16		807557	0					
ANR	807738	Identifier	U16		807557	0					
ANR	807739	ArgumentList	"gsub_ptr + offset_of ( GSUB , FeatureList )"		807557	1					
ANR	807740	Argument	"gsub_ptr + offset_of ( GSUB , FeatureList )"		807557	0					
ANR	807741	AdditiveExpression	"gsub_ptr + offset_of ( GSUB , FeatureList )"		807557	0		+			
ANR	807742	Identifier	gsub_ptr		807557	0					
ANR	807743	CallExpression	"offset_of ( GSUB , FeatureList )"		807557	1					
ANR	807744	Callee	offset_of		807557	0					
ANR	807745	Identifier	offset_of		807557	0					
ANR	807746	ArgumentList	GSUB		807557	1					
ANR	807747	Argument	GSUB		807557	0					
ANR	807748	Identifier	GSUB		807557	0					
ANR	807749	Argument	FeatureList		807557	1					
ANR	807750	Identifier	FeatureList		807557	0					
ANR	807751	ExpressionStatement	"gsub . LookupList = U16 ( gsub_ptr + offset_of ( GSUB , LookupList ) )"	802:4:30443:30504	807557	26	True				
ANR	807752	AssignmentExpression	"gsub . LookupList = U16 ( gsub_ptr + offset_of ( GSUB , LookupList ) )"		807557	0		=			
ANR	807753	MemberAccess	gsub . LookupList		807557	0					
ANR	807754	Identifier	gsub		807557	0					
ANR	807755	Identifier	LookupList		807557	1					
ANR	807756	CallExpression	"U16 ( gsub_ptr + offset_of ( GSUB , LookupList ) )"		807557	1					
ANR	807757	Callee	U16		807557	0					
ANR	807758	Identifier	U16		807557	0					
ANR	807759	ArgumentList	"gsub_ptr + offset_of ( GSUB , LookupList )"		807557	1					
ANR	807760	Argument	"gsub_ptr + offset_of ( GSUB , LookupList )"		807557	0					
ANR	807761	AdditiveExpression	"gsub_ptr + offset_of ( GSUB , LookupList )"		807557	0		+			
ANR	807762	Identifier	gsub_ptr		807557	0					
ANR	807763	CallExpression	"offset_of ( GSUB , LookupList )"		807557	1					
ANR	807764	Callee	offset_of		807557	0					
ANR	807765	Identifier	offset_of		807557	0					
ANR	807766	ArgumentList	GSUB		807557	1					
ANR	807767	Argument	GSUB		807557	0					
ANR	807768	Identifier	GSUB		807557	0					
ANR	807769	Argument	LookupList		807557	1					
ANR	807770	Identifier	LookupList		807557	0					
ANR	807771	ExpressionStatement	lookup_list_ptr = gsub_ptr + gsub . LookupList	804:4:30537:30581	807557	27	True				
ANR	807772	AssignmentExpression	lookup_list_ptr = gsub_ptr + gsub . LookupList		807557	0		=			
ANR	807773	Identifier	lookup_list_ptr		807557	0					
ANR	807774	AdditiveExpression	gsub_ptr + gsub . LookupList		807557	1		+			
ANR	807775	Identifier	gsub_ptr		807557	0					
ANR	807776	MemberAccess	gsub . LookupList		807557	1					
ANR	807777	Identifier	gsub		807557	0					
ANR	807778	Identifier	LookupList		807557	1					
ANR	807779	ExpressionStatement	"lookup_list_table . LookupCount = U16 ( lookup_list_ptr + offset_of ( LookupListTable , LookupCount ) )"	805:4:30587:30681	807557	28	True				
ANR	807780	AssignmentExpression	"lookup_list_table . LookupCount = U16 ( lookup_list_ptr + offset_of ( LookupListTable , LookupCount ) )"		807557	0		=			
ANR	807781	MemberAccess	lookup_list_table . LookupCount		807557	0					
ANR	807782	Identifier	lookup_list_table		807557	0					
ANR	807783	Identifier	LookupCount		807557	1					
ANR	807784	CallExpression	"U16 ( lookup_list_ptr + offset_of ( LookupListTable , LookupCount ) )"		807557	1					
ANR	807785	Callee	U16		807557	0					
ANR	807786	Identifier	U16		807557	0					
ANR	807787	ArgumentList	"lookup_list_ptr + offset_of ( LookupListTable , LookupCount )"		807557	1					
ANR	807788	Argument	"lookup_list_ptr + offset_of ( LookupListTable , LookupCount )"		807557	0					
ANR	807789	AdditiveExpression	"lookup_list_ptr + offset_of ( LookupListTable , LookupCount )"		807557	0		+			
ANR	807790	Identifier	lookup_list_ptr		807557	0					
ANR	807791	CallExpression	"offset_of ( LookupListTable , LookupCount )"		807557	1					
ANR	807792	Callee	offset_of		807557	0					
ANR	807793	Identifier	offset_of		807557	0					
ANR	807794	ArgumentList	LookupListTable		807557	1					
ANR	807795	Argument	LookupListTable		807557	0					
ANR	807796	Identifier	LookupListTable		807557	0					
ANR	807797	Argument	LookupCount		807557	1					
ANR	807798	Identifier	LookupCount		807557	0					
ANR	807799	ForStatement	for ( i = 0 ; i < lookup_list_table . LookupCount ; i ++ )		807557	29					
ANR	807800	ForInit	i = 0 ;	806:9:30692:30697	807557	0	True				
ANR	807801	AssignmentExpression	i = 0		807557	0		=			
ANR	807802	Identifier	i		807557	0					
ANR	807803	PrimaryExpression	0		807557	1					
ANR	807804	Condition	i < lookup_list_table . LookupCount	806:16:30699:30731	807557	1	True				
ANR	807805	RelationalExpression	i < lookup_list_table . LookupCount		807557	0		<			
ANR	807806	Identifier	i		807557	0					
ANR	807807	MemberAccess	lookup_list_table . LookupCount		807557	1					
ANR	807808	Identifier	lookup_list_table		807557	0					
ANR	807809	Identifier	LookupCount		807557	1					
ANR	807810	PostIncDecOperationExpression	i ++	806:51:30734:30736	807557	2	True				
ANR	807811	Identifier	i		807557	0					
ANR	807812	IncDec	++		807557	1					
ANR	807813	CompoundStatement		101:8:4221:4245	807557	3					
ANR	807814	IdentifierDeclStatement	"byte * lookup_table_offset_ptr = lookup_list_ptr + offset_of ( LookupListTable , Lookup ) + i * sizeof ( uint16_t ) ;"	807:8:30749:30887	807557	0	True				
ANR	807815	IdentifierDecl	"* lookup_table_offset_ptr = lookup_list_ptr + offset_of ( LookupListTable , Lookup ) + i * sizeof ( uint16_t )"		807557	0					
ANR	807816	IdentifierDeclType	byte *		807557	0					
ANR	807817	Identifier	lookup_table_offset_ptr		807557	1					
ANR	807818	AssignmentExpression	"* lookup_table_offset_ptr = lookup_list_ptr + offset_of ( LookupListTable , Lookup ) + i * sizeof ( uint16_t )"		807557	2		=			
ANR	807819	Identifier	lookup_table_offset_ptr		807557	0					
ANR	807820	AdditiveExpression	"lookup_list_ptr + offset_of ( LookupListTable , Lookup ) + i * sizeof ( uint16_t )"		807557	1		+			
ANR	807821	Identifier	lookup_list_ptr		807557	0					
ANR	807822	AdditiveExpression	"offset_of ( LookupListTable , Lookup ) + i * sizeof ( uint16_t )"		807557	1		+			
ANR	807823	CallExpression	"offset_of ( LookupListTable , Lookup )"		807557	0					
ANR	807824	Callee	offset_of		807557	0					
ANR	807825	Identifier	offset_of		807557	0					
ANR	807826	ArgumentList	LookupListTable		807557	1					
ANR	807827	Argument	LookupListTable		807557	0					
ANR	807828	Identifier	LookupListTable		807557	0					
ANR	807829	Argument	Lookup		807557	1					
ANR	807830	Identifier	Lookup		807557	0					
ANR	807831	MultiplicativeExpression	i * sizeof ( uint16_t )		807557	1		*			
ANR	807832	Identifier	i		807557	0					
ANR	807833	SizeofExpression	sizeof ( uint16_t )		807557	1					
ANR	807834	Sizeof	sizeof		807557	0					
ANR	807835	SizeofOperand	uint16_t		807557	1					
ANR	807836	IdentifierDeclStatement	byte * lookup_table_ptr = lookup_list_ptr + U16 ( lookup_table_offset_ptr ) ;	809:8:30897:30968	807557	1	True				
ANR	807837	IdentifierDecl	* lookup_table_ptr = lookup_list_ptr + U16 ( lookup_table_offset_ptr )		807557	0					
ANR	807838	IdentifierDeclType	byte *		807557	0					
ANR	807839	Identifier	lookup_table_ptr		807557	1					
ANR	807840	AssignmentExpression	* lookup_table_ptr = lookup_list_ptr + U16 ( lookup_table_offset_ptr )		807557	2		=			
ANR	807841	Identifier	lookup_table_ptr		807557	0					
ANR	807842	AdditiveExpression	lookup_list_ptr + U16 ( lookup_table_offset_ptr )		807557	1		+			
ANR	807843	Identifier	lookup_list_ptr		807557	0					
ANR	807844	CallExpression	U16 ( lookup_table_offset_ptr )		807557	1					
ANR	807845	Callee	U16		807557	0					
ANR	807846	Identifier	U16		807557	0					
ANR	807847	ArgumentList	lookup_table_offset_ptr		807557	1					
ANR	807848	Argument	lookup_table_offset_ptr		807557	0					
ANR	807849	Identifier	lookup_table_offset_ptr		807557	0					
ANR	807850	IdentifierDeclStatement	LookupTable lookup_table ;	810:8:30978:31002	807557	2	True				
ANR	807851	IdentifierDecl	lookup_table		807557	0					
ANR	807852	IdentifierDeclType	LookupTable		807557	0					
ANR	807853	Identifier	lookup_table		807557	1					
ANR	807854	ExpressionStatement	"lookup_table . LookupType = U16 ( lookup_table_ptr + offset_of ( LookupTable , LookupType ) )"	812:8:31013:31097	807557	3	True				
ANR	807855	AssignmentExpression	"lookup_table . LookupType = U16 ( lookup_table_ptr + offset_of ( LookupTable , LookupType ) )"		807557	0		=			
ANR	807856	MemberAccess	lookup_table . LookupType		807557	0					
ANR	807857	Identifier	lookup_table		807557	0					
ANR	807858	Identifier	LookupType		807557	1					
ANR	807859	CallExpression	"U16 ( lookup_table_ptr + offset_of ( LookupTable , LookupType ) )"		807557	1					
ANR	807860	Callee	U16		807557	0					
ANR	807861	Identifier	U16		807557	0					
ANR	807862	ArgumentList	"lookup_table_ptr + offset_of ( LookupTable , LookupType )"		807557	1					
ANR	807863	Argument	"lookup_table_ptr + offset_of ( LookupTable , LookupType )"		807557	0					
ANR	807864	AdditiveExpression	"lookup_table_ptr + offset_of ( LookupTable , LookupType )"		807557	0		+			
ANR	807865	Identifier	lookup_table_ptr		807557	0					
ANR	807866	CallExpression	"offset_of ( LookupTable , LookupType )"		807557	1					
ANR	807867	Callee	offset_of		807557	0					
ANR	807868	Identifier	offset_of		807557	0					
ANR	807869	ArgumentList	LookupTable		807557	1					
ANR	807870	Argument	LookupTable		807557	0					
ANR	807871	Identifier	LookupTable		807557	0					
ANR	807872	Argument	LookupType		807557	1					
ANR	807873	Identifier	LookupType		807557	0					
ANR	807874	ExpressionStatement	"lookup_table . LookupFlag = U16 ( lookup_table_ptr + offset_of ( LookupTable , LookupFlag ) )"	813:8:31107:31191	807557	4	True				
ANR	807875	AssignmentExpression	"lookup_table . LookupFlag = U16 ( lookup_table_ptr + offset_of ( LookupTable , LookupFlag ) )"		807557	0		=			
ANR	807876	MemberAccess	lookup_table . LookupFlag		807557	0					
ANR	807877	Identifier	lookup_table		807557	0					
ANR	807878	Identifier	LookupFlag		807557	1					
ANR	807879	CallExpression	"U16 ( lookup_table_ptr + offset_of ( LookupTable , LookupFlag ) )"		807557	1					
ANR	807880	Callee	U16		807557	0					
ANR	807881	Identifier	U16		807557	0					
ANR	807882	ArgumentList	"lookup_table_ptr + offset_of ( LookupTable , LookupFlag )"		807557	1					
ANR	807883	Argument	"lookup_table_ptr + offset_of ( LookupTable , LookupFlag )"		807557	0					
ANR	807884	AdditiveExpression	"lookup_table_ptr + offset_of ( LookupTable , LookupFlag )"		807557	0		+			
ANR	807885	Identifier	lookup_table_ptr		807557	0					
ANR	807886	CallExpression	"offset_of ( LookupTable , LookupFlag )"		807557	1					
ANR	807887	Callee	offset_of		807557	0					
ANR	807888	Identifier	offset_of		807557	0					
ANR	807889	ArgumentList	LookupTable		807557	1					
ANR	807890	Argument	LookupTable		807557	0					
ANR	807891	Identifier	LookupTable		807557	0					
ANR	807892	Argument	LookupFlag		807557	1					
ANR	807893	Identifier	LookupFlag		807557	0					
ANR	807894	ExpressionStatement	"lookup_table . SubTableCount = U16 ( lookup_table_ptr + offset_of ( LookupTable , SubTableCount ) )"	814:8:31201:31291	807557	5	True				
ANR	807895	AssignmentExpression	"lookup_table . SubTableCount = U16 ( lookup_table_ptr + offset_of ( LookupTable , SubTableCount ) )"		807557	0		=			
ANR	807896	MemberAccess	lookup_table . SubTableCount		807557	0					
ANR	807897	Identifier	lookup_table		807557	0					
ANR	807898	Identifier	SubTableCount		807557	1					
ANR	807899	CallExpression	"U16 ( lookup_table_ptr + offset_of ( LookupTable , SubTableCount ) )"		807557	1					
ANR	807900	Callee	U16		807557	0					
ANR	807901	Identifier	U16		807557	0					
ANR	807902	ArgumentList	"lookup_table_ptr + offset_of ( LookupTable , SubTableCount )"		807557	1					
ANR	807903	Argument	"lookup_table_ptr + offset_of ( LookupTable , SubTableCount )"		807557	0					
ANR	807904	AdditiveExpression	"lookup_table_ptr + offset_of ( LookupTable , SubTableCount )"		807557	0		+			
ANR	807905	Identifier	lookup_table_ptr		807557	0					
ANR	807906	CallExpression	"offset_of ( LookupTable , SubTableCount )"		807557	1					
ANR	807907	Callee	offset_of		807557	0					
ANR	807908	Identifier	offset_of		807557	0					
ANR	807909	ArgumentList	LookupTable		807557	1					
ANR	807910	Argument	LookupTable		807557	0					
ANR	807911	Identifier	LookupTable		807557	0					
ANR	807912	Argument	SubTableCount		807557	1					
ANR	807913	Identifier	SubTableCount		807557	0					
ANR	807914	IfStatement	if ( lookup_table . LookupType == 1 )		807557	6					
ANR	807915	Condition	lookup_table . LookupType == 1	816:12:31306:31333	807557	0	True				
ANR	807916	EqualityExpression	lookup_table . LookupType == 1		807557	0		==			
ANR	807917	MemberAccess	lookup_table . LookupType		807557	0					
ANR	807918	Identifier	lookup_table		807557	0					
ANR	807919	Identifier	LookupType		807557	1					
ANR	807920	PrimaryExpression	1		807557	1					
ANR	807921	CompoundStatement		112:12:4904:4983	807557	1					
ANR	807922	IdentifierDeclStatement	"byte * subtable_offset_ptr = lookup_table_ptr + offset_of ( LookupTable , SubTable ) ;"	821:12:31661:31740	807557	0	True				
ANR	807923	IdentifierDecl	"* subtable_offset_ptr = lookup_table_ptr + offset_of ( LookupTable , SubTable )"		807557	0					
ANR	807924	IdentifierDeclType	byte *		807557	0					
ANR	807925	Identifier	subtable_offset_ptr		807557	1					
ANR	807926	AssignmentExpression	"* subtable_offset_ptr = lookup_table_ptr + offset_of ( LookupTable , SubTable )"		807557	2		=			
ANR	807927	Identifier	subtable_offset_ptr		807557	0					
ANR	807928	AdditiveExpression	"lookup_table_ptr + offset_of ( LookupTable , SubTable )"		807557	1		+			
ANR	807929	Identifier	lookup_table_ptr		807557	0					
ANR	807930	CallExpression	"offset_of ( LookupTable , SubTable )"		807557	1					
ANR	807931	Callee	offset_of		807557	0					
ANR	807932	Identifier	offset_of		807557	0					
ANR	807933	ArgumentList	LookupTable		807557	1					
ANR	807934	Argument	LookupTable		807557	0					
ANR	807935	Identifier	LookupTable		807557	0					
ANR	807936	Argument	SubTable		807557	1					
ANR	807937	Identifier	SubTable		807557	0					
ANR	807938	ForStatement	for ( j = 0 ; j < lookup_table . SubTableCount ; j ++ )		807557	1					
ANR	807939	ForInit	j = 0 ;	822:17:31759:31764	807557	0	True				
ANR	807940	AssignmentExpression	j = 0		807557	0		=			
ANR	807941	Identifier	j		807557	0					
ANR	807942	PrimaryExpression	0		807557	1					
ANR	807943	Condition	j < lookup_table . SubTableCount	822:24:31766:31795	807557	1	True				
ANR	807944	RelationalExpression	j < lookup_table . SubTableCount		807557	0		<			
ANR	807945	Identifier	j		807557	0					
ANR	807946	MemberAccess	lookup_table . SubTableCount		807557	1					
ANR	807947	Identifier	lookup_table		807557	0					
ANR	807948	Identifier	SubTableCount		807557	1					
ANR	807949	PostIncDecOperationExpression	j ++	822:56:31798:31800	807557	2	True				
ANR	807950	Identifier	j		807557	0					
ANR	807951	IncDec	++		807557	1					
ANR	807952	CompoundStatement		115:16:5169:5204	807557	3					
ANR	807953	IdentifierDeclStatement	byte * subtable_ptr = lookup_table_ptr + U16 ( subtable_offset_ptr + j * sizeof ( uint16_t ) ) ;	823:16:31821:31908	807557	0	True				
ANR	807954	IdentifierDecl	* subtable_ptr = lookup_table_ptr + U16 ( subtable_offset_ptr + j * sizeof ( uint16_t ) )		807557	0					
ANR	807955	IdentifierDeclType	byte *		807557	0					
ANR	807956	Identifier	subtable_ptr		807557	1					
ANR	807957	AssignmentExpression	* subtable_ptr = lookup_table_ptr + U16 ( subtable_offset_ptr + j * sizeof ( uint16_t ) )		807557	2		=			
ANR	807958	Identifier	subtable_ptr		807557	0					
ANR	807959	AdditiveExpression	lookup_table_ptr + U16 ( subtable_offset_ptr + j * sizeof ( uint16_t ) )		807557	1		+			
ANR	807960	Identifier	lookup_table_ptr		807557	0					
ANR	807961	CallExpression	U16 ( subtable_offset_ptr + j * sizeof ( uint16_t ) )		807557	1					
ANR	807962	Callee	U16		807557	0					
ANR	807963	Identifier	U16		807557	0					
ANR	807964	ArgumentList	subtable_offset_ptr + j * sizeof ( uint16_t )		807557	1					
ANR	807965	Argument	subtable_offset_ptr + j * sizeof ( uint16_t )		807557	0					
ANR	807966	AdditiveExpression	subtable_offset_ptr + j * sizeof ( uint16_t )		807557	0		+			
ANR	807967	Identifier	subtable_offset_ptr		807557	0					
ANR	807968	MultiplicativeExpression	j * sizeof ( uint16_t )		807557	1		*			
ANR	807969	Identifier	j		807557	0					
ANR	807970	SizeofExpression	sizeof ( uint16_t )		807557	1					
ANR	807971	Sizeof	sizeof		807557	0					
ANR	807972	SizeofOperand	uint16_t		807557	1					
ANR	807973	IdentifierDeclStatement	uint16_t format = U16 ( subtable_ptr ) ;	824:16:31926:31961	807557	1	True				
ANR	807974	IdentifierDecl	format = U16 ( subtable_ptr )		807557	0					
ANR	807975	IdentifierDeclType	uint16_t		807557	0					
ANR	807976	Identifier	format		807557	1					
ANR	807977	AssignmentExpression	format = U16 ( subtable_ptr )		807557	2		=			
ANR	807978	Identifier	format		807557	0					
ANR	807979	CallExpression	U16 ( subtable_ptr )		807557	1					
ANR	807980	Callee	U16		807557	0					
ANR	807981	Identifier	U16		807557	0					
ANR	807982	ArgumentList	subtable_ptr		807557	1					
ANR	807983	Argument	subtable_ptr		807557	0					
ANR	807984	Identifier	subtable_ptr		807557	0					
ANR	807985	IfStatement	if ( format == 1 )		807557	2					
ANR	807986	Condition	format == 1	826:20:31984:31994	807557	0	True				
ANR	807987	EqualityExpression	format == 1		807557	0		==			
ANR	807988	Identifier	format		807557	0					
ANR	807989	PrimaryExpression	1		807557	1					
ANR	807990	CompoundStatement		118:20:5262:5286	807557	1					
ANR	807991	IdentifierDeclStatement	SingleSubstFormat1 subst ;	827:20:32019:32043	807557	0	True				
ANR	807992	IdentifierDecl	subst		807557	0					
ANR	807993	IdentifierDeclType	SingleSubstFormat1		807557	0					
ANR	807994	Identifier	subst		807557	1					
ANR	807995	ExpressionStatement	subst . SubstFormat = format	829:20:32066:32092	807557	1	True				
ANR	807996	AssignmentExpression	subst . SubstFormat = format		807557	0		=			
ANR	807997	MemberAccess	subst . SubstFormat		807557	0					
ANR	807998	Identifier	subst		807557	0					
ANR	807999	Identifier	SubstFormat		807557	1					
ANR	808000	Identifier	format		807557	1					
ANR	808001	ExpressionStatement	"subst . Coverage = U16 ( subtable_ptr + offset_of ( SingleSubstFormat1 , Coverage ) )"	830:20:32135:32211	807557	2	True				
ANR	808002	AssignmentExpression	"subst . Coverage = U16 ( subtable_ptr + offset_of ( SingleSubstFormat1 , Coverage ) )"		807557	0		=			
ANR	808003	MemberAccess	subst . Coverage		807557	0					
ANR	808004	Identifier	subst		807557	0					
ANR	808005	Identifier	Coverage		807557	1					
ANR	808006	CallExpression	"U16 ( subtable_ptr + offset_of ( SingleSubstFormat1 , Coverage ) )"		807557	1					
ANR	808007	Callee	U16		807557	0					
ANR	808008	Identifier	U16		807557	0					
ANR	808009	ArgumentList	"subtable_ptr + offset_of ( SingleSubstFormat1 , Coverage )"		807557	1					
ANR	808010	Argument	"subtable_ptr + offset_of ( SingleSubstFormat1 , Coverage )"		807557	0					
ANR	808011	AdditiveExpression	"subtable_ptr + offset_of ( SingleSubstFormat1 , Coverage )"		807557	0		+			
ANR	808012	Identifier	subtable_ptr		807557	0					
ANR	808013	CallExpression	"offset_of ( SingleSubstFormat1 , Coverage )"		807557	1					
ANR	808014	Callee	offset_of		807557	0					
ANR	808015	Identifier	offset_of		807557	0					
ANR	808016	ArgumentList	SingleSubstFormat1		807557	1					
ANR	808017	Argument	SingleSubstFormat1		807557	0					
ANR	808018	Identifier	SingleSubstFormat1		807557	0					
ANR	808019	Argument	Coverage		807557	1					
ANR	808020	Identifier	Coverage		807557	0					
ANR	808021	ExpressionStatement	"subst . DeltaGlyphId = U16 ( subtable_ptr + offset_of ( SingleSubstFormat1 , DeltaGlyphId ) )"	831:20:32233:32317	807557	3	True				
ANR	808022	AssignmentExpression	"subst . DeltaGlyphId = U16 ( subtable_ptr + offset_of ( SingleSubstFormat1 , DeltaGlyphId ) )"		807557	0		=			
ANR	808023	MemberAccess	subst . DeltaGlyphId		807557	0					
ANR	808024	Identifier	subst		807557	0					
ANR	808025	Identifier	DeltaGlyphId		807557	1					
ANR	808026	CallExpression	"U16 ( subtable_ptr + offset_of ( SingleSubstFormat1 , DeltaGlyphId ) )"		807557	1					
ANR	808027	Callee	U16		807557	0					
ANR	808028	Identifier	U16		807557	0					
ANR	808029	ArgumentList	"subtable_ptr + offset_of ( SingleSubstFormat1 , DeltaGlyphId )"		807557	1					
ANR	808030	Argument	"subtable_ptr + offset_of ( SingleSubstFormat1 , DeltaGlyphId )"		807557	0					
ANR	808031	AdditiveExpression	"subtable_ptr + offset_of ( SingleSubstFormat1 , DeltaGlyphId )"		807557	0		+			
ANR	808032	Identifier	subtable_ptr		807557	0					
ANR	808033	CallExpression	"offset_of ( SingleSubstFormat1 , DeltaGlyphId )"		807557	1					
ANR	808034	Callee	offset_of		807557	0					
ANR	808035	Identifier	offset_of		807557	0					
ANR	808036	ArgumentList	SingleSubstFormat1		807557	1					
ANR	808037	Argument	SingleSubstFormat1		807557	0					
ANR	808038	Identifier	SingleSubstFormat1		807557	0					
ANR	808039	Argument	DeltaGlyphId		807557	1					
ANR	808040	Identifier	DeltaGlyphId		807557	0					
ANR	808041	ExpressionStatement	format = subst . SubstFormat	832:20:32339:32365	807557	4	True				
ANR	808042	AssignmentExpression	format = subst . SubstFormat		807557	0		=			
ANR	808043	Identifier	format		807557	0					
ANR	808044	MemberAccess	subst . SubstFormat		807557	1					
ANR	808045	Identifier	subst		807557	0					
ANR	808046	Identifier	SubstFormat		807557	1					
ANR	808047	ElseStatement	else		807557	0					
ANR	808048	CompoundStatement		127:20:5765:5789	807557	0					
ANR	808049	IdentifierDeclStatement	SingleSubstFormat2 subst ;	834:20:32436:32460	807557	0	True				
ANR	808050	IdentifierDecl	subst		807557	0					
ANR	808051	IdentifierDeclType	SingleSubstFormat2		807557	0					
ANR	808052	Identifier	subst		807557	1					
ANR	808053	IdentifierDeclStatement	byte * coverage_ptr ;	835:20:32482:32500	807557	1	True				
ANR	808054	IdentifierDecl	* coverage_ptr		807557	0					
ANR	808055	IdentifierDeclType	byte *		807557	0					
ANR	808056	Identifier	coverage_ptr		807557	1					
ANR	808057	IdentifierDeclStatement	uint16_t coverage_format ;	836:20:32522:32546	807557	2	True				
ANR	808058	IdentifierDecl	coverage_format		807557	0					
ANR	808059	IdentifierDeclType	uint16_t		807557	0					
ANR	808060	Identifier	coverage_format		807557	1					
ANR	808061	ExpressionStatement	subst . SubstFormat = format	838:20:32569:32595	807557	3	True				
ANR	808062	AssignmentExpression	subst . SubstFormat = format		807557	0		=			
ANR	808063	MemberAccess	subst . SubstFormat		807557	0					
ANR	808064	Identifier	subst		807557	0					
ANR	808065	Identifier	SubstFormat		807557	1					
ANR	808066	Identifier	format		807557	1					
ANR	808067	ExpressionStatement	"subst . Coverage = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Coverage ) )"	839:20:32638:32714	807557	4	True				
ANR	808068	AssignmentExpression	"subst . Coverage = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Coverage ) )"		807557	0		=			
ANR	808069	MemberAccess	subst . Coverage		807557	0					
ANR	808070	Identifier	subst		807557	0					
ANR	808071	Identifier	Coverage		807557	1					
ANR	808072	CallExpression	"U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Coverage ) )"		807557	1					
ANR	808073	Callee	U16		807557	0					
ANR	808074	Identifier	U16		807557	0					
ANR	808075	ArgumentList	"subtable_ptr + offset_of ( SingleSubstFormat2 , Coverage )"		807557	1					
ANR	808076	Argument	"subtable_ptr + offset_of ( SingleSubstFormat2 , Coverage )"		807557	0					
ANR	808077	AdditiveExpression	"subtable_ptr + offset_of ( SingleSubstFormat2 , Coverage )"		807557	0		+			
ANR	808078	Identifier	subtable_ptr		807557	0					
ANR	808079	CallExpression	"offset_of ( SingleSubstFormat2 , Coverage )"		807557	1					
ANR	808080	Callee	offset_of		807557	0					
ANR	808081	Identifier	offset_of		807557	0					
ANR	808082	ArgumentList	SingleSubstFormat2		807557	1					
ANR	808083	Argument	SingleSubstFormat2		807557	0					
ANR	808084	Identifier	SingleSubstFormat2		807557	0					
ANR	808085	Argument	Coverage		807557	1					
ANR	808086	Identifier	Coverage		807557	0					
ANR	808087	ExpressionStatement	"subst . GlyphCount = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , GlyphCount ) )"	840:20:32736:32816	807557	5	True				
ANR	808088	AssignmentExpression	"subst . GlyphCount = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , GlyphCount ) )"		807557	0		=			
ANR	808089	MemberAccess	subst . GlyphCount		807557	0					
ANR	808090	Identifier	subst		807557	0					
ANR	808091	Identifier	GlyphCount		807557	1					
ANR	808092	CallExpression	"U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , GlyphCount ) )"		807557	1					
ANR	808093	Callee	U16		807557	0					
ANR	808094	Identifier	U16		807557	0					
ANR	808095	ArgumentList	"subtable_ptr + offset_of ( SingleSubstFormat2 , GlyphCount )"		807557	1					
ANR	808096	Argument	"subtable_ptr + offset_of ( SingleSubstFormat2 , GlyphCount )"		807557	0					
ANR	808097	AdditiveExpression	"subtable_ptr + offset_of ( SingleSubstFormat2 , GlyphCount )"		807557	0		+			
ANR	808098	Identifier	subtable_ptr		807557	0					
ANR	808099	CallExpression	"offset_of ( SingleSubstFormat2 , GlyphCount )"		807557	1					
ANR	808100	Callee	offset_of		807557	0					
ANR	808101	Identifier	offset_of		807557	0					
ANR	808102	ArgumentList	SingleSubstFormat2		807557	1					
ANR	808103	Argument	SingleSubstFormat2		807557	0					
ANR	808104	Identifier	SingleSubstFormat2		807557	0					
ANR	808105	Argument	GlyphCount		807557	1					
ANR	808106	Identifier	GlyphCount		807557	0					
ANR	808107	ExpressionStatement	coverage_ptr = subtable_ptr + subst . Coverage	841:20:32838:32882	807557	6	True				
ANR	808108	AssignmentExpression	coverage_ptr = subtable_ptr + subst . Coverage		807557	0		=			
ANR	808109	Identifier	coverage_ptr		807557	0					
ANR	808110	AdditiveExpression	subtable_ptr + subst . Coverage		807557	1		+			
ANR	808111	Identifier	subtable_ptr		807557	0					
ANR	808112	MemberAccess	subst . Coverage		807557	1					
ANR	808113	Identifier	subst		807557	0					
ANR	808114	Identifier	Coverage		807557	1					
ANR	808115	ExpressionStatement	coverage_format = U16 ( coverage_ptr )	842:20:32904:32939	807557	7	True				
ANR	808116	AssignmentExpression	coverage_format = U16 ( coverage_ptr )		807557	0		=			
ANR	808117	Identifier	coverage_format		807557	0					
ANR	808118	CallExpression	U16 ( coverage_ptr )		807557	1					
ANR	808119	Callee	U16		807557	0					
ANR	808120	Identifier	U16		807557	0					
ANR	808121	ArgumentList	coverage_ptr		807557	1					
ANR	808122	Argument	coverage_ptr		807557	0					
ANR	808123	Identifier	coverage_ptr		807557	0					
ANR	808124	IfStatement	if ( coverage_format == 1 )		807557	8					
ANR	808125	Condition	coverage_format == 1	843:24:32965:32984	807557	0	True				
ANR	808126	EqualityExpression	coverage_format == 1		807557	0		==			
ANR	808127	Identifier	coverage_format		807557	0					
ANR	808128	PrimaryExpression	1		807557	1					
ANR	808129	CompoundStatement		135:24:6256:6275	807557	1					
ANR	808130	IdentifierDeclStatement	CoverageFormat1 cov ;	844:24:33013:33032	807557	0	True				
ANR	808131	IdentifierDecl	cov		807557	0					
ANR	808132	IdentifierDeclType	CoverageFormat1		807557	0					
ANR	808133	Identifier	cov		807557	1					
ANR	808134	ExpressionStatement	cov . CoverageFormat = coverage_format	846:24:33059:33095	807557	1	True				
ANR	808135	AssignmentExpression	cov . CoverageFormat = coverage_format		807557	0		=			
ANR	808136	MemberAccess	cov . CoverageFormat		807557	0					
ANR	808137	Identifier	cov		807557	0					
ANR	808138	Identifier	CoverageFormat		807557	1					
ANR	808139	Identifier	coverage_format		807557	1					
ANR	808140	ExpressionStatement	"cov . GlyphCount = U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphCount ) )"	847:24:33147:33222	807557	2	True				
ANR	808141	AssignmentExpression	"cov . GlyphCount = U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphCount ) )"		807557	0		=			
ANR	808142	MemberAccess	cov . GlyphCount		807557	0					
ANR	808143	Identifier	cov		807557	0					
ANR	808144	Identifier	GlyphCount		807557	1					
ANR	808145	CallExpression	"U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphCount ) )"		807557	1					
ANR	808146	Callee	U16		807557	0					
ANR	808147	Identifier	U16		807557	0					
ANR	808148	ArgumentList	"coverage_ptr + offset_of ( CoverageFormat1 , GlyphCount )"		807557	1					
ANR	808149	Argument	"coverage_ptr + offset_of ( CoverageFormat1 , GlyphCount )"		807557	0					
ANR	808150	AdditiveExpression	"coverage_ptr + offset_of ( CoverageFormat1 , GlyphCount )"		807557	0		+			
ANR	808151	Identifier	coverage_ptr		807557	0					
ANR	808152	CallExpression	"offset_of ( CoverageFormat1 , GlyphCount )"		807557	1					
ANR	808153	Callee	offset_of		807557	0					
ANR	808154	Identifier	offset_of		807557	0					
ANR	808155	ArgumentList	CoverageFormat1		807557	1					
ANR	808156	Argument	CoverageFormat1		807557	0					
ANR	808157	Identifier	CoverageFormat1		807557	0					
ANR	808158	Argument	GlyphCount		807557	1					
ANR	808159	Identifier	GlyphCount		807557	0					
ANR	808160	CompoundStatement		140:28:6544:6575	807557	3					
ANR	808161	IdentifierDeclStatement	"int k0 = 0 , k1 = cov . GlyphCount ;"	849:28:33301:33332	807557	0	True				
ANR	808162	IdentifierDecl	k0 = 0		807557	0					
ANR	808163	IdentifierDeclType	int		807557	0					
ANR	808164	Identifier	k0		807557	1					
ANR	808165	AssignmentExpression	k0 = 0		807557	2		=			
ANR	808166	Identifier	k0		807557	0					
ANR	808167	PrimaryExpression	0		807557	1					
ANR	808168	IdentifierDecl	k1 = cov . GlyphCount		807557	1					
ANR	808169	IdentifierDeclType	int		807557	0					
ANR	808170	Identifier	k1		807557	1					
ANR	808171	AssignmentExpression	k1 = cov . GlyphCount		807557	2		=			
ANR	808172	Identifier	k1		807557	0					
ANR	808173	MemberAccess	cov . GlyphCount		807557	1					
ANR	808174	Identifier	cov		807557	0					
ANR	808175	Identifier	GlyphCount		807557	1					
ANR	808176	ForStatement	for ( ; ; )		807557	1					
ANR	808177	CompoundStatement		144:32:6704:6857	807557	0					
ANR	808178	IdentifierDeclStatement	int k = ( k0 + k1 ) / 2 ;	852:32:33406:33427	807557	0	True				
ANR	808179	IdentifierDecl	k = ( k0 + k1 ) / 2		807557	0					
ANR	808180	IdentifierDeclType	int		807557	0					
ANR	808181	Identifier	k		807557	1					
ANR	808182	AssignmentExpression	k = ( k0 + k1 ) / 2		807557	2		=			
ANR	808183	Identifier	k		807557	0					
ANR	808184	MultiplicativeExpression	( k0 + k1 ) / 2		807557	1		/			
ANR	808185	AdditiveExpression	k0 + k1		807557	0		+			
ANR	808186	Identifier	k0		807557	0					
ANR	808187	Identifier	k1		807557	1					
ANR	808188	PrimaryExpression	2		807557	1					
ANR	808189	IdentifierDeclStatement	"GlyphID glyph = U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k ) ;"	853:32:33461:33614	807557	1	True				
ANR	808190	IdentifierDecl	"glyph = U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k )"		807557	0					
ANR	808191	IdentifierDeclType	GlyphID		807557	0					
ANR	808192	Identifier	glyph		807557	1					
ANR	808193	AssignmentExpression	"glyph = U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k )"		807557	2		=			
ANR	808194	Identifier	glyph		807557	0					
ANR	808195	CallExpression	"U16 ( coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k )"		807557	1					
ANR	808196	Callee	U16		807557	0					
ANR	808197	Identifier	U16		807557	0					
ANR	808198	ArgumentList	"coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k"		807557	1					
ANR	808199	Argument	"coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k"		807557	0					
ANR	808200	AdditiveExpression	"coverage_ptr + offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k"		807557	0		+			
ANR	808201	Identifier	coverage_ptr		807557	0					
ANR	808202	AdditiveExpression	"offset_of ( CoverageFormat1 , GlyphArray ) + sizeof ( GlyphID ) * k"		807557	1		+			
ANR	808203	CallExpression	"offset_of ( CoverageFormat1 , GlyphArray )"		807557	0					
ANR	808204	Callee	offset_of		807557	0					
ANR	808205	Identifier	offset_of		807557	0					
ANR	808206	ArgumentList	CoverageFormat1		807557	1					
ANR	808207	Argument	CoverageFormat1		807557	0					
ANR	808208	Identifier	CoverageFormat1		807557	0					
ANR	808209	Argument	GlyphArray		807557	1					
ANR	808210	Identifier	GlyphArray		807557	0					
ANR	808211	MultiplicativeExpression	sizeof ( GlyphID ) * k		807557	1		*			
ANR	808212	SizeofExpression	sizeof ( GlyphID )		807557	0					
ANR	808213	Sizeof	sizeof		807557	0					
ANR	808214	SizeofOperand	GlyphID		807557	1					
ANR	808215	Identifier	k		807557	1					
ANR	808216	IfStatement	if ( glyph_index == glyph )		807557	2					
ANR	808217	Condition	glyph_index == glyph	855:36:33652:33671	807557	0	True				
ANR	808218	EqualityExpression	glyph_index == glyph		807557	0		==			
ANR	808219	Identifier	glyph_index		807557	0					
ANR	808220	Identifier	glyph		807557	1					
ANR	808221	CompoundStatement		146:58:6917:6917	807557	1					
ANR	808222	IfStatement	if ( k >= cov . GlyphCount )		807557	0					
ANR	808223	Condition	k >= cov . GlyphCount	857:40:33765:33783	807557	0	True				
ANR	808224	RelationalExpression	k >= cov . GlyphCount		807557	0		>=			
ANR	808225	Identifier	k		807557	0					
ANR	808226	MemberAccess	cov . GlyphCount		807557	1					
ANR	808227	Identifier	cov		807557	0					
ANR	808228	Identifier	GlyphCount		807557	1					
ANR	808229	BreakStatement	break ;	858:40:33826:33831	807557	1	True				
ANR	808230	ElseStatement	else		807557	0					
ANR	808231	CompoundStatement		151:40:7190:7353	807557	0					
ANR	808232	IdentifierDeclStatement	"GlyphID new_glyph = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k ) ;"	860:40:33947:34110	807557	0	True				
ANR	808233	IdentifierDecl	"new_glyph = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k )"		807557	0					
ANR	808234	IdentifierDeclType	GlyphID		807557	0					
ANR	808235	Identifier	new_glyph		807557	1					
ANR	808236	AssignmentExpression	"new_glyph = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k )"		807557	2		=			
ANR	808237	Identifier	new_glyph		807557	0					
ANR	808238	CallExpression	"U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k )"		807557	1					
ANR	808239	Callee	U16		807557	0					
ANR	808240	Identifier	U16		807557	0					
ANR	808241	ArgumentList	"subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k"		807557	1					
ANR	808242	Argument	"subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k"		807557	0					
ANR	808243	AdditiveExpression	"subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k"		807557	0		+			
ANR	808244	Identifier	subtable_ptr		807557	0					
ANR	808245	AdditiveExpression	"offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * k"		807557	1		+			
ANR	808246	CallExpression	"offset_of ( SingleSubstFormat2 , Substitute )"		807557	0					
ANR	808247	Callee	offset_of		807557	0					
ANR	808248	Identifier	offset_of		807557	0					
ANR	808249	ArgumentList	SingleSubstFormat2		807557	1					
ANR	808250	Argument	SingleSubstFormat2		807557	0					
ANR	808251	Identifier	SingleSubstFormat2		807557	0					
ANR	808252	Argument	Substitute		807557	1					
ANR	808253	Identifier	Substitute		807557	0					
ANR	808254	MultiplicativeExpression	sizeof ( GlyphID ) * k		807557	1		*			
ANR	808255	SizeofExpression	sizeof ( GlyphID )		807557	0					
ANR	808256	Sizeof	sizeof		807557	0					
ANR	808257	SizeofOperand	GlyphID		807557	1					
ANR	808258	Identifier	k		807557	1					
ANR	808259	ReturnStatement	return new_glyph ;	863:40:34153:34169	807557	1	True				
ANR	808260	Identifier	new_glyph		807557	0					
ANR	808261	ElseStatement	else		807557	0					
ANR	808262	IfStatement	if ( k0 >= k1 - 1 )		807557	0					
ANR	808263	Condition	k0 >= k1 - 1	865:43:34252:34263	807557	0	True				
ANR	808264	RelationalExpression	k0 >= k1 - 1		807557	0		>=			
ANR	808265	Identifier	k0		807557	0					
ANR	808266	AdditiveExpression	k1 - 1		807557	1		-			
ANR	808267	Identifier	k1		807557	0					
ANR	808268	PrimaryExpression	1		807557	1					
ANR	808269	CompoundStatement		156:57:7509:7509	807557	1					
ANR	808270	BreakStatement	break ;	866:36:34304:34309	807557	0	True				
ANR	808271	ElseStatement	else		807557	0					
ANR	808272	IfStatement	if ( glyph_index < glyph )		807557	0					
ANR	808273	Condition	glyph_index < glyph	867:43:34371:34389	807557	0	True				
ANR	808274	RelationalExpression	glyph_index < glyph		807557	0		<			
ANR	808275	Identifier	glyph_index		807557	0					
ANR	808276	Identifier	glyph		807557	1					
ANR	808277	ExpressionStatement	k1 = k	868:36:34428:34434	807557	1	True				
ANR	808278	AssignmentExpression	k1 = k		807557	0		=			
ANR	808279	Identifier	k1		807557	0					
ANR	808280	Identifier	k		807557	1					
ANR	808281	ElseStatement	else		807557	0					
ANR	808282	ExpressionStatement	k0 = k + 1	870:36:34509:34519	807557	0	True				
ANR	808283	AssignmentExpression	k0 = k + 1		807557	0		=			
ANR	808284	Identifier	k0		807557	0					
ANR	808285	AdditiveExpression	k + 1		807557	1		+			
ANR	808286	Identifier	k		807557	0					
ANR	808287	PrimaryExpression	1		807557	1					
ANR	808288	ElseStatement	else		807557	0					
ANR	808289	IfStatement	if ( coverage_format == 2 )		807557	0					
ANR	808290	Condition	coverage_format == 2	873:31:34608:34627	807557	0	True				
ANR	808291	EqualityExpression	coverage_format == 2		807557	0		==			
ANR	808292	Identifier	coverage_format		807557	0					
ANR	808293	PrimaryExpression	2		807557	1					
ANR	808294	CompoundStatement		165:24:7899:7918	807557	1					
ANR	808295	IdentifierDeclStatement	CoverageFormat2 cov ;	874:24:34656:34675	807557	0	True				
ANR	808296	IdentifierDecl	cov		807557	0					
ANR	808297	IdentifierDeclType	CoverageFormat2		807557	0					
ANR	808298	Identifier	cov		807557	1					
ANR	808299	ExpressionStatement	cov . CoverageFormat = coverage_format	876:24:34702:34738	807557	1	True				
ANR	808300	AssignmentExpression	cov . CoverageFormat = coverage_format		807557	0		=			
ANR	808301	MemberAccess	cov . CoverageFormat		807557	0					
ANR	808302	Identifier	cov		807557	0					
ANR	808303	Identifier	CoverageFormat		807557	1					
ANR	808304	Identifier	coverage_format		807557	1					
ANR	808305	ExpressionStatement	"cov . RangeCount = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeCount ) )"	877:24:34790:34865	807557	2	True				
ANR	808306	AssignmentExpression	"cov . RangeCount = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeCount ) )"		807557	0		=			
ANR	808307	MemberAccess	cov . RangeCount		807557	0					
ANR	808308	Identifier	cov		807557	0					
ANR	808309	Identifier	RangeCount		807557	1					
ANR	808310	CallExpression	"U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeCount ) )"		807557	1					
ANR	808311	Callee	U16		807557	0					
ANR	808312	Identifier	U16		807557	0					
ANR	808313	ArgumentList	"coverage_ptr + offset_of ( CoverageFormat2 , RangeCount )"		807557	1					
ANR	808314	Argument	"coverage_ptr + offset_of ( CoverageFormat2 , RangeCount )"		807557	0					
ANR	808315	AdditiveExpression	"coverage_ptr + offset_of ( CoverageFormat2 , RangeCount )"		807557	0		+			
ANR	808316	Identifier	coverage_ptr		807557	0					
ANR	808317	CallExpression	"offset_of ( CoverageFormat2 , RangeCount )"		807557	1					
ANR	808318	Callee	offset_of		807557	0					
ANR	808319	Identifier	offset_of		807557	0					
ANR	808320	ArgumentList	CoverageFormat2		807557	1					
ANR	808321	Argument	CoverageFormat2		807557	0					
ANR	808322	Identifier	CoverageFormat2		807557	0					
ANR	808323	Argument	RangeCount		807557	1					
ANR	808324	Identifier	RangeCount		807557	0					
ANR	808325	CompoundStatement		170:28:8187:8218	807557	3					
ANR	808326	IdentifierDeclStatement	"int k0 = 0 , k1 = cov . RangeCount ;"	879:28:34944:34975	807557	0	True				
ANR	808327	IdentifierDecl	k0 = 0		807557	0					
ANR	808328	IdentifierDeclType	int		807557	0					
ANR	808329	Identifier	k0		807557	1					
ANR	808330	AssignmentExpression	k0 = 0		807557	2		=			
ANR	808331	Identifier	k0		807557	0					
ANR	808332	PrimaryExpression	0		807557	1					
ANR	808333	IdentifierDecl	k1 = cov . RangeCount		807557	1					
ANR	808334	IdentifierDeclType	int		807557	0					
ANR	808335	Identifier	k1		807557	1					
ANR	808336	AssignmentExpression	k1 = cov . RangeCount		807557	2		=			
ANR	808337	Identifier	k1		807557	0					
ANR	808338	MemberAccess	cov . RangeCount		807557	1					
ANR	808339	Identifier	cov		807557	0					
ANR	808340	Identifier	RangeCount		807557	1					
ANR	808341	ForStatement	for ( ; ; )		807557	1					
ANR	808342	CompoundStatement		174:32:8347:8361	807557	0					
ANR	808343	IdentifierDeclStatement	int k = ( k0 + k1 ) / 2 ;	882:32:35049:35070	807557	0	True				
ANR	808344	IdentifierDecl	k = ( k0 + k1 ) / 2		807557	0					
ANR	808345	IdentifierDeclType	int		807557	0					
ANR	808346	Identifier	k		807557	1					
ANR	808347	AssignmentExpression	k = ( k0 + k1 ) / 2		807557	2		=			
ANR	808348	Identifier	k		807557	0					
ANR	808349	MultiplicativeExpression	( k0 + k1 ) / 2		807557	1		/			
ANR	808350	AdditiveExpression	k0 + k1		807557	0		+			
ANR	808351	Identifier	k0		807557	0					
ANR	808352	Identifier	k1		807557	1					
ANR	808353	PrimaryExpression	2		807557	1					
ANR	808354	IdentifierDeclStatement	RangeRecord rr ;	883:32:35104:35118	807557	1	True				
ANR	808355	IdentifierDecl	rr		807557	0					
ANR	808356	IdentifierDeclType	RangeRecord		807557	0					
ANR	808357	Identifier	rr		807557	1					
ANR	808358	ExpressionStatement	"rr . Start = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start ) )"	885:32:35153:35321	807557	2	True				
ANR	808359	AssignmentExpression	"rr . Start = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start ) )"		807557	0		=			
ANR	808360	MemberAccess	rr . Start		807557	0					
ANR	808361	Identifier	rr		807557	0					
ANR	808362	Identifier	Start		807557	1					
ANR	808363	CallExpression	"U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start ) )"		807557	1					
ANR	808364	Callee	U16		807557	0					
ANR	808365	Identifier	U16		807557	0					
ANR	808366	ArgumentList	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start )"		807557	1					
ANR	808367	Argument	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start )"		807557	0					
ANR	808368	AdditiveExpression	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start )"		807557	0		+			
ANR	808369	Identifier	coverage_ptr		807557	0					
ANR	808370	AdditiveExpression	"offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start )"		807557	1		+			
ANR	808371	CallExpression	"offset_of ( CoverageFormat2 , RangeArray )"		807557	0					
ANR	808372	Callee	offset_of		807557	0					
ANR	808373	Identifier	offset_of		807557	0					
ANR	808374	ArgumentList	CoverageFormat2		807557	1					
ANR	808375	Argument	CoverageFormat2		807557	0					
ANR	808376	Identifier	CoverageFormat2		807557	0					
ANR	808377	Argument	RangeArray		807557	1					
ANR	808378	Identifier	RangeArray		807557	0					
ANR	808379	AdditiveExpression	"sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , Start )"		807557	1		+			
ANR	808380	MultiplicativeExpression	sizeof ( RangeRecord ) * k		807557	0		*			
ANR	808381	SizeofExpression	sizeof ( RangeRecord )		807557	0					
ANR	808382	Sizeof	sizeof		807557	0					
ANR	808383	SizeofOperand	RangeRecord		807557	1					
ANR	808384	Identifier	k		807557	1					
ANR	808385	CallExpression	"offset_of ( RangeRecord , Start )"		807557	1					
ANR	808386	Callee	offset_of		807557	0					
ANR	808387	Identifier	offset_of		807557	0					
ANR	808388	ArgumentList	RangeRecord		807557	1					
ANR	808389	Argument	RangeRecord		807557	0					
ANR	808390	Identifier	RangeRecord		807557	0					
ANR	808391	Argument	Start		807557	1					
ANR	808392	Identifier	Start		807557	0					
ANR	808393	ExpressionStatement	"rr . End = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End ) )"	887:32:35355:35519	807557	3	True				
ANR	808394	AssignmentExpression	"rr . End = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End ) )"		807557	0		=			
ANR	808395	MemberAccess	rr . End		807557	0					
ANR	808396	Identifier	rr		807557	0					
ANR	808397	Identifier	End		807557	1					
ANR	808398	CallExpression	"U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End ) )"		807557	1					
ANR	808399	Callee	U16		807557	0					
ANR	808400	Identifier	U16		807557	0					
ANR	808401	ArgumentList	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End )"		807557	1					
ANR	808402	Argument	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End )"		807557	0					
ANR	808403	AdditiveExpression	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End )"		807557	0		+			
ANR	808404	Identifier	coverage_ptr		807557	0					
ANR	808405	AdditiveExpression	"offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End )"		807557	1		+			
ANR	808406	CallExpression	"offset_of ( CoverageFormat2 , RangeArray )"		807557	0					
ANR	808407	Callee	offset_of		807557	0					
ANR	808408	Identifier	offset_of		807557	0					
ANR	808409	ArgumentList	CoverageFormat2		807557	1					
ANR	808410	Argument	CoverageFormat2		807557	0					
ANR	808411	Identifier	CoverageFormat2		807557	0					
ANR	808412	Argument	RangeArray		807557	1					
ANR	808413	Identifier	RangeArray		807557	0					
ANR	808414	AdditiveExpression	"sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , End )"		807557	1		+			
ANR	808415	MultiplicativeExpression	sizeof ( RangeRecord ) * k		807557	0		*			
ANR	808416	SizeofExpression	sizeof ( RangeRecord )		807557	0					
ANR	808417	Sizeof	sizeof		807557	0					
ANR	808418	SizeofOperand	RangeRecord		807557	1					
ANR	808419	Identifier	k		807557	1					
ANR	808420	CallExpression	"offset_of ( RangeRecord , End )"		807557	1					
ANR	808421	Callee	offset_of		807557	0					
ANR	808422	Identifier	offset_of		807557	0					
ANR	808423	ArgumentList	RangeRecord		807557	1					
ANR	808424	Argument	RangeRecord		807557	0					
ANR	808425	Identifier	RangeRecord		807557	0					
ANR	808426	Argument	End		807557	1					
ANR	808427	Identifier	End		807557	0					
ANR	808428	ExpressionStatement	"rr . StartCoverageIndex = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex ) )"	889:32:35553:35747	807557	4	True				
ANR	808429	AssignmentExpression	"rr . StartCoverageIndex = U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex ) )"		807557	0		=			
ANR	808430	MemberAccess	rr . StartCoverageIndex		807557	0					
ANR	808431	Identifier	rr		807557	0					
ANR	808432	Identifier	StartCoverageIndex		807557	1					
ANR	808433	CallExpression	"U16 ( coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex ) )"		807557	1					
ANR	808434	Callee	U16		807557	0					
ANR	808435	Identifier	U16		807557	0					
ANR	808436	ArgumentList	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex )"		807557	1					
ANR	808437	Argument	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex )"		807557	0					
ANR	808438	AdditiveExpression	"coverage_ptr + offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex )"		807557	0		+			
ANR	808439	Identifier	coverage_ptr		807557	0					
ANR	808440	AdditiveExpression	"offset_of ( CoverageFormat2 , RangeArray ) + sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex )"		807557	1		+			
ANR	808441	CallExpression	"offset_of ( CoverageFormat2 , RangeArray )"		807557	0					
ANR	808442	Callee	offset_of		807557	0					
ANR	808443	Identifier	offset_of		807557	0					
ANR	808444	ArgumentList	CoverageFormat2		807557	1					
ANR	808445	Argument	CoverageFormat2		807557	0					
ANR	808446	Identifier	CoverageFormat2		807557	0					
ANR	808447	Argument	RangeArray		807557	1					
ANR	808448	Identifier	RangeArray		807557	0					
ANR	808449	AdditiveExpression	"sizeof ( RangeRecord ) * k + offset_of ( RangeRecord , StartCoverageIndex )"		807557	1		+			
ANR	808450	MultiplicativeExpression	sizeof ( RangeRecord ) * k		807557	0		*			
ANR	808451	SizeofExpression	sizeof ( RangeRecord )		807557	0					
ANR	808452	Sizeof	sizeof		807557	0					
ANR	808453	SizeofOperand	RangeRecord		807557	1					
ANR	808454	Identifier	k		807557	1					
ANR	808455	CallExpression	"offset_of ( RangeRecord , StartCoverageIndex )"		807557	1					
ANR	808456	Callee	offset_of		807557	0					
ANR	808457	Identifier	offset_of		807557	0					
ANR	808458	ArgumentList	RangeRecord		807557	1					
ANR	808459	Argument	RangeRecord		807557	0					
ANR	808460	Identifier	RangeRecord		807557	0					
ANR	808461	Argument	StartCoverageIndex		807557	1					
ANR	808462	Identifier	StartCoverageIndex		807557	0					
ANR	808463	IfStatement	if ( rr . Start <= glyph_index && glyph_index <= rr . End )		807557	5					
ANR	808464	Condition	rr . Start <= glyph_index && glyph_index <= rr . End	892:36:35786:35833	807557	0	True				
ANR	808465	AndExpression	rr . Start <= glyph_index && glyph_index <= rr . End		807557	0		&&			
ANR	808466	RelationalExpression	rr . Start <= glyph_index		807557	0		<=			
ANR	808467	MemberAccess	rr . Start		807557	0					
ANR	808468	Identifier	rr		807557	0					
ANR	808469	Identifier	Start		807557	1					
ANR	808470	Identifier	glyph_index		807557	1					
ANR	808471	RelationalExpression	glyph_index <= rr . End		807557	1		<=			
ANR	808472	Identifier	glyph_index		807557	0					
ANR	808473	MemberAccess	rr . End		807557	1					
ANR	808474	Identifier	rr		807557	0					
ANR	808475	Identifier	End		807557	1					
ANR	808476	CompoundStatement		183:86:9079:9079	807557	1					
ANR	808477	IfStatement	if ( k >= cov . RangeCount )		807557	0					
ANR	808478	Condition	k >= cov . RangeCount	894:40:35927:35945	807557	0	True				
ANR	808479	RelationalExpression	k >= cov . RangeCount		807557	0		>=			
ANR	808480	Identifier	k		807557	0					
ANR	808481	MemberAccess	cov . RangeCount		807557	1					
ANR	808482	Identifier	cov		807557	0					
ANR	808483	Identifier	RangeCount		807557	1					
ANR	808484	BreakStatement	break ;	895:40:35988:35993	807557	1	True				
ANR	808485	ElseStatement	else		807557	0					
ANR	808486	CompoundStatement		189:40:9465:9638	807557	0					
ANR	808487	IdentifierDeclStatement	uint16_t subst_index = rr . StartCoverageIndex + ( glyph_index - rr . Start ) ;	897:40:36109:36180	807557	0	True				
ANR	808488	IdentifierDecl	subst_index = rr . StartCoverageIndex + ( glyph_index - rr . Start )		807557	0					
ANR	808489	IdentifierDeclType	uint16_t		807557	0					
ANR	808490	Identifier	subst_index		807557	1					
ANR	808491	AssignmentExpression	subst_index = rr . StartCoverageIndex + ( glyph_index - rr . Start )		807557	2		=			
ANR	808492	Identifier	subst_index		807557	0					
ANR	808493	AdditiveExpression	rr . StartCoverageIndex + ( glyph_index - rr . Start )		807557	1		+			
ANR	808494	MemberAccess	rr . StartCoverageIndex		807557	0					
ANR	808495	Identifier	rr		807557	0					
ANR	808496	Identifier	StartCoverageIndex		807557	1					
ANR	808497	AdditiveExpression	glyph_index - rr . Start		807557	1		-			
ANR	808498	Identifier	glyph_index		807557	0					
ANR	808499	MemberAccess	rr . Start		807557	1					
ANR	808500	Identifier	rr		807557	0					
ANR	808501	Identifier	Start		807557	1					
ANR	808502	IdentifierDeclStatement	"GlyphID new_glyph = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index ) ;"	898:40:36222:36395	807557	1	True				
ANR	808503	IdentifierDecl	"new_glyph = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index )"		807557	0					
ANR	808504	IdentifierDeclType	GlyphID		807557	0					
ANR	808505	Identifier	new_glyph		807557	1					
ANR	808506	AssignmentExpression	"new_glyph = U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index )"		807557	2		=			
ANR	808507	Identifier	new_glyph		807557	0					
ANR	808508	CallExpression	"U16 ( subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index )"		807557	1					
ANR	808509	Callee	U16		807557	0					
ANR	808510	Identifier	U16		807557	0					
ANR	808511	ArgumentList	"subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index"		807557	1					
ANR	808512	Argument	"subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index"		807557	0					
ANR	808513	AdditiveExpression	"subtable_ptr + offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index"		807557	0		+			
ANR	808514	Identifier	subtable_ptr		807557	0					
ANR	808515	AdditiveExpression	"offset_of ( SingleSubstFormat2 , Substitute ) + sizeof ( GlyphID ) * subst_index"		807557	1		+			
ANR	808516	CallExpression	"offset_of ( SingleSubstFormat2 , Substitute )"		807557	0					
ANR	808517	Callee	offset_of		807557	0					
ANR	808518	Identifier	offset_of		807557	0					
ANR	808519	ArgumentList	SingleSubstFormat2		807557	1					
ANR	808520	Argument	SingleSubstFormat2		807557	0					
ANR	808521	Identifier	SingleSubstFormat2		807557	0					
ANR	808522	Argument	Substitute		807557	1					
ANR	808523	Identifier	Substitute		807557	0					
ANR	808524	MultiplicativeExpression	sizeof ( GlyphID ) * subst_index		807557	1		*			
ANR	808525	SizeofExpression	sizeof ( GlyphID )		807557	0					
ANR	808526	Sizeof	sizeof		807557	0					
ANR	808527	SizeofOperand	GlyphID		807557	1					
ANR	808528	Identifier	subst_index		807557	1					
ANR	808529	ReturnStatement	return new_glyph ;	901:40:36438:36454	807557	2	True				
ANR	808530	Identifier	new_glyph		807557	0					
ANR	808531	ElseStatement	else		807557	0					
ANR	808532	IfStatement	if ( k0 >= k1 - 1 )		807557	0					
ANR	808533	Condition	k0 >= k1 - 1	903:43:36537:36548	807557	0	True				
ANR	808534	RelationalExpression	k0 >= k1 - 1		807557	0		>=			
ANR	808535	Identifier	k0		807557	0					
ANR	808536	AdditiveExpression	k1 - 1		807557	1		-			
ANR	808537	Identifier	k1		807557	0					
ANR	808538	PrimaryExpression	1		807557	1					
ANR	808539	CompoundStatement		194:57:9794:9794	807557	1					
ANR	808540	BreakStatement	break ;	904:36:36589:36594	807557	0	True				
ANR	808541	ElseStatement	else		807557	0					
ANR	808542	IfStatement	if ( glyph_index < rr . Start )		807557	0					
ANR	808543	Condition	glyph_index < rr . Start	905:43:36656:36677	807557	0	True				
ANR	808544	RelationalExpression	glyph_index < rr . Start		807557	0		<			
ANR	808545	Identifier	glyph_index		807557	0					
ANR	808546	MemberAccess	rr . Start		807557	1					
ANR	808547	Identifier	rr		807557	0					
ANR	808548	Identifier	Start		807557	1					
ANR	808549	ExpressionStatement	k1 = k	906:36:36716:36722	807557	1	True				
ANR	808550	AssignmentExpression	k1 = k		807557	0		=			
ANR	808551	Identifier	k1		807557	0					
ANR	808552	Identifier	k		807557	1					
ANR	808553	ElseStatement	else		807557	0					
ANR	808554	ExpressionStatement	k0 = k + 1	908:36:36797:36807	807557	0	True				
ANR	808555	AssignmentExpression	k0 = k + 1		807557	0		=			
ANR	808556	Identifier	k0		807557	0					
ANR	808557	AdditiveExpression	k + 1		807557	1		+			
ANR	808558	Identifier	k		807557	0					
ANR	808559	PrimaryExpression	1		807557	1					
ANR	808560	ElseStatement	else		807557	0					
ANR	808561	CompoundStatement		202:27:10135:10135	807557	0					
ANR	808562	ReturnStatement	return glyph_index ;	918:4:37019:37037	807557	30	True				
ANR	808563	Identifier	glyph_index		807557	0					
ANR	808564	ReturnType	uint		807557	1					
ANR	808565	Identifier	gs_type42_substitute_glyph_index_vertical		807557	2					
ANR	808566	ParameterList	"gs_font_type42 * pfont , uint glyph_index , int WMode , gs_glyph cid"		807557	3					
ANR	808567	Parameter	gs_font_type42 * pfont	708:42:26648:26668	807557	0	True				
ANR	808568	ParameterType	gs_font_type42 *		807557	0					
ANR	808569	Identifier	pfont		807557	1					
ANR	808570	Parameter	uint glyph_index	708:65:26671:26686	807557	1	True				
ANR	808571	ParameterType	uint		807557	0					
ANR	808572	Identifier	glyph_index		807557	1					
ANR	808573	Parameter	int WMode	709:42:26731:26739	807557	2	True				
ANR	808574	ParameterType	int		807557	0					
ANR	808575	Identifier	WMode		807557	1					
ANR	808576	Parameter	gs_glyph cid	709:53:26742:26753	807557	3	True				
ANR	808577	ParameterType	gs_glyph		807557	0					
ANR	808578	Identifier	cid		807557	1					
ANR	808579	CFGEntryNode	ENTRY		807557		True				
ANR	808580	CFGExitNode	EXIT		807557		True				
ANR	808581	InfiniteForNode	true		807557		True				
ANR	808582	InfiniteForNode	true		807557		True				
ANR	808583	Symbol	cov . GlyphCount		807557						
ANR	808584	Symbol	subst . GlyphCount		807557						
ANR	808585	Symbol	glyph_index		807557						
ANR	808586	Symbol	Start		807557						
ANR	808587	Symbol	CoverageFormat1		807557						
ANR	808588	Symbol	CoverageFormat2		807557						
ANR	808589	Symbol	ScriptList		807557						
ANR	808590	Symbol	LookupListTable		807557						
ANR	808591	Symbol	cov		807557						
ANR	808592	Symbol	GlyphArray		807557						
ANR	808593	Symbol	DeltaGlyphId		807557						
ANR	808594	Symbol	gsub_size		807557						
ANR	808595	Symbol	LookupList		807557						
ANR	808596	Symbol	lookup_table		807557						
ANR	808597	Symbol	u32		807557						
ANR	808598	Symbol	Version		807557						
ANR	808599	Symbol	gsub_ptr		807557						
ANR	808600	Symbol	rr . End		807557						
ANR	808601	Symbol	Lookup		807557						
ANR	808602	Symbol	Substitute		807557						
ANR	808603	Symbol	FeatureRecord		807557						
ANR	808604	Symbol	offset_of		807557						
ANR	808605	Symbol	GlyphCount		807557						
ANR	808606	Symbol	NULL		807557						
ANR	808607	Symbol	GlyphID		807557						
ANR	808608	Symbol	LookupType		807557						
ANR	808609	Symbol	k0		807557						
ANR	808610	Symbol	subst_index		807557						
ANR	808611	Symbol	k1		807557						
ANR	808612	Symbol	format		807557						
ANR	808613	Symbol	subst		807557						
ANR	808614	Symbol	gsub . FeatureList		807557						
ANR	808615	Symbol	FeatureListTable		807557						
ANR	808616	Symbol	LangSysRecord		807557						
ANR	808617	Symbol	coverage_ptr		807557						
ANR	808618	Symbol	rr . StartCoverageIndex		807557						
ANR	808619	Symbol	lookup_table . SubTableCount		807557						
ANR	808620	Symbol	gsub . ScriptList		807557						
ANR	808621	Symbol	lookup_list_table		807557						
ANR	808622	Symbol	lookup_list_table . LookupCount		807557						
ANR	808623	Symbol	End		807557						
ANR	808624	Symbol	U16		807557						
ANR	808625	Symbol	cid		807557						
ANR	808626	Symbol	lookup_table . LookupFlag		807557						
ANR	808627	Symbol	rr		807557						
ANR	808628	Symbol	cov . RangeCount		807557						
ANR	808629	Symbol	cov . CoverageFormat		807557						
ANR	808630	Symbol	RangeArray		807557						
ANR	808631	Symbol	SingleSubstFormat1		807557						
ANR	808632	Symbol	gsub		807557						
ANR	808633	Symbol	SingleSubstFormat2		807557						
ANR	808634	Symbol	SubTable		807557						
ANR	808635	Symbol	ScriptRecord		807557						
ANR	808636	Symbol	subst . Coverage		807557						
ANR	808637	Symbol	subtable_ptr		807557						
ANR	808638	Symbol	pfont -> data . gsub_size		807557						
ANR	808639	Symbol	LookupCount		807557						
ANR	808640	Symbol	subtable_offset_ptr		807557						
ANR	808641	Symbol	GSUB		807557						
ANR	808642	Symbol	RangeRecord		807557						
ANR	808643	Symbol	lookup_table_offset_ptr		807557						
ANR	808644	Symbol	StartCoverageIndex		807557						
ANR	808645	Symbol	lookup_table_ptr		807557						
ANR	808646	Symbol	lookup_list_ptr		807557						
ANR	808647	Symbol	rr . Start		807557						
ANR	808648	Symbol	pfont		807557						
ANR	808649	Symbol	RangeCount		807557						
ANR	808650	Symbol	pfont -> data		807557						
ANR	808651	Symbol	i		807557						
ANR	808652	Symbol	pfont -> data . gsub		807557						
ANR	808653	Symbol	j		807557						
ANR	808654	Symbol	lookup_table . LookupType		807557						
ANR	808655	Symbol	Coverage		807557						
ANR	808656	Symbol	k		807557						
ANR	808657	Symbol	gsub . LookupList		807557						
ANR	808658	Symbol	LookupFlag		807557						
ANR	808659	Symbol	SubTableCount		807557						
ANR	808660	Symbol	* pfont		807557						
ANR	808661	Symbol	glyph		807557						
ANR	808662	Symbol	new_glyph		807557						
ANR	808663	Symbol	WMode		807557						
ANR	808664	Symbol	coverage_format		807557						
ANR	808665	Symbol	LangSysTable		807557						
ANR	808666	Symbol	subst . SubstFormat		807557						
ANR	808667	Symbol	LookupTable		807557						
ANR	808668	Symbol	subst . DeltaGlyphId		807557						
ANR	808669	Symbol	ScriptTable		807557						
ANR	808670	Symbol	FeatureList		807557						
ANR	808671	Symbol	gsub . Version		807557						
ANR	808672	Function	parse_pieces	922:0:37083:38248							
ANR	808673	FunctionDef	"parse_pieces (gs_font_type42 * pfont , gs_glyph glyph , gs_glyph * pieces , int * pnum_pieces)"		808672	0					
ANR	808674	CompoundStatement		925:0:37195:38248	808672	0					
ANR	808675	IdentifierDeclStatement	"uint glyph_index = ( glyph >= GS_MIN_GLYPH_INDEX ? glyph - GS_MIN_GLYPH_INDEX : pfont -> data . get_glyph_index ( pfont , glyph ) ) ;"	926:4:37201:37370	808672	0	True				
ANR	808676	IdentifierDecl	"glyph_index = ( glyph >= GS_MIN_GLYPH_INDEX ? glyph - GS_MIN_GLYPH_INDEX : pfont -> data . get_glyph_index ( pfont , glyph ) )"		808672	0					
ANR	808677	IdentifierDeclType	uint		808672	0					
ANR	808678	Identifier	glyph_index		808672	1					
ANR	808679	AssignmentExpression	"glyph_index = ( glyph >= GS_MIN_GLYPH_INDEX ? glyph - GS_MIN_GLYPH_INDEX : pfont -> data . get_glyph_index ( pfont , glyph ) )"		808672	2		=			
ANR	808680	Identifier	glyph_index		808672	0					
ANR	808681	ConditionalExpression	"glyph >= GS_MIN_GLYPH_INDEX ? glyph - GS_MIN_GLYPH_INDEX : pfont -> data . get_glyph_index ( pfont , glyph )"		808672	1					
ANR	808682	Condition	glyph >= GS_MIN_GLYPH_INDEX		808672	0					
ANR	808683	RelationalExpression	glyph >= GS_MIN_GLYPH_INDEX		808672	0		>=			
ANR	808684	Identifier	glyph		808672	0					
ANR	808685	Identifier	GS_MIN_GLYPH_INDEX		808672	1					
ANR	808686	AdditiveExpression	glyph - GS_MIN_GLYPH_INDEX		808672	1		-			
ANR	808687	Identifier	glyph		808672	0					
ANR	808688	Identifier	GS_MIN_GLYPH_INDEX		808672	1					
ANR	808689	CallExpression	"pfont -> data . get_glyph_index ( pfont , glyph )"		808672	2					
ANR	808690	Callee	pfont -> data . get_glyph_index		808672	0					
ANR	808691	MemberAccess	pfont -> data . get_glyph_index		808672	0					
ANR	808692	PtrMemberAccess	pfont -> data		808672	0					
ANR	808693	Identifier	pfont		808672	0					
ANR	808694	Identifier	data		808672	1					
ANR	808695	Identifier	get_glyph_index		808672	1					
ANR	808696	ArgumentList	pfont		808672	1					
ANR	808697	Argument	pfont		808672	0					
ANR	808698	Identifier	pfont		808672	0					
ANR	808699	Argument	glyph		808672	1					
ANR	808700	Identifier	glyph		808672	0					
ANR	808701	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	929:4:37376:37402	808672	1	True				
ANR	808702	IdentifierDecl	glyph_data		808672	0					
ANR	808703	IdentifierDeclType	gs_glyph_data_t		808672	0					
ANR	808704	Identifier	glyph_data		808672	1					
ANR	808705	IdentifierDeclStatement	int code ;	930:4:37408:37416	808672	2	True				
ANR	808706	IdentifierDecl	code		808672	0					
ANR	808707	IdentifierDeclType	int		808672	0					
ANR	808708	Identifier	code		808672	1					
ANR	808709	ExpressionStatement	glyph_data . memory = pfont -> memory	932:4:37423:37456	808672	3	True				
ANR	808710	AssignmentExpression	glyph_data . memory = pfont -> memory		808672	0		=			
ANR	808711	MemberAccess	glyph_data . memory		808672	0					
ANR	808712	Identifier	glyph_data		808672	0					
ANR	808713	Identifier	memory		808672	1					
ANR	808714	PtrMemberAccess	pfont -> memory		808672	1					
ANR	808715	Identifier	pfont		808672	0					
ANR	808716	Identifier	memory		808672	1					
ANR	808717	ExpressionStatement	"code = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"	933:4:37462:37525	808672	4	True				
ANR	808718	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		808672	0		=			
ANR	808719	Identifier	code		808672	0					
ANR	808720	CallExpression	"pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		808672	1					
ANR	808721	Callee	pfont -> data . get_outline		808672	0					
ANR	808722	MemberAccess	pfont -> data . get_outline		808672	0					
ANR	808723	PtrMemberAccess	pfont -> data		808672	0					
ANR	808724	Identifier	pfont		808672	0					
ANR	808725	Identifier	data		808672	1					
ANR	808726	Identifier	get_outline		808672	1					
ANR	808727	ArgumentList	pfont		808672	1					
ANR	808728	Argument	pfont		808672	0					
ANR	808729	Identifier	pfont		808672	0					
ANR	808730	Argument	glyph_index		808672	1					
ANR	808731	Identifier	glyph_index		808672	0					
ANR	808732	Argument	& glyph_data		808672	2					
ANR	808733	UnaryOperationExpression	& glyph_data		808672	0					
ANR	808734	UnaryOperator	&		808672	0					
ANR	808735	Identifier	glyph_data		808672	1					
ANR	808736	IfStatement	if ( code < 0 )		808672	5					
ANR	808737	Condition	code < 0	934:8:37535:37542	808672	0	True				
ANR	808738	RelationalExpression	code < 0		808672	0		<			
ANR	808739	Identifier	code		808672	0					
ANR	808740	PrimaryExpression	0		808672	1					
ANR	808741	ReturnStatement	return code ;	935:8:37553:37564	808672	1	True				
ANR	808742	Identifier	code		808672	0					
ANR	808743	IfStatement	if ( glyph_data . bits . size != 0 && S16 ( glyph_data . bits . data ) == - 1 )		808672	6					
ANR	808744	Condition	glyph_data . bits . size != 0 && S16 ( glyph_data . bits . data ) == - 1	936:8:37574:37633	808672	0	True				
ANR	808745	AndExpression	glyph_data . bits . size != 0 && S16 ( glyph_data . bits . data ) == - 1		808672	0		&&			
ANR	808746	EqualityExpression	glyph_data . bits . size != 0		808672	0		!=			
ANR	808747	MemberAccess	glyph_data . bits . size		808672	0					
ANR	808748	MemberAccess	glyph_data . bits		808672	0					
ANR	808749	Identifier	glyph_data		808672	0					
ANR	808750	Identifier	bits		808672	1					
ANR	808751	Identifier	size		808672	1					
ANR	808752	PrimaryExpression	0		808672	1					
ANR	808753	EqualityExpression	S16 ( glyph_data . bits . data ) == - 1		808672	1		==			
ANR	808754	CallExpression	S16 ( glyph_data . bits . data )		808672	0					
ANR	808755	Callee	S16		808672	0					
ANR	808756	Identifier	S16		808672	0					
ANR	808757	ArgumentList	glyph_data . bits . data		808672	1					
ANR	808758	Argument	glyph_data . bits . data		808672	0					
ANR	808759	MemberAccess	glyph_data . bits . data		808672	0					
ANR	808760	MemberAccess	glyph_data . bits		808672	0					
ANR	808761	Identifier	glyph_data		808672	0					
ANR	808762	Identifier	bits		808672	1					
ANR	808763	Identifier	data		808672	1					
ANR	808764	UnaryOperationExpression	- 1		808672	1					
ANR	808765	UnaryOperator	-		808672	0					
ANR	808766	PrimaryExpression	1		808672	1					
ANR	808767	CompoundStatement		17:8:609:628	808672	1					
ANR	808768	IdentifierDeclStatement	int i = 0 ;	938:8:37687:37696	808672	0	True				
ANR	808769	IdentifierDecl	i = 0		808672	0					
ANR	808770	IdentifierDeclType	int		808672	0					
ANR	808771	Identifier	i		808672	1					
ANR	808772	AssignmentExpression	i = 0		808672	2		=			
ANR	808773	Identifier	i		808672	0					
ANR	808774	PrimaryExpression	0		808672	1					
ANR	808775	IdentifierDeclStatement	uint flags = TT_CG_MORE_COMPONENTS ;	939:8:37706:37740	808672	1	True				
ANR	808776	IdentifierDecl	flags = TT_CG_MORE_COMPONENTS		808672	0					
ANR	808777	IdentifierDeclType	uint		808672	0					
ANR	808778	Identifier	flags		808672	1					
ANR	808779	AssignmentExpression	flags = TT_CG_MORE_COMPONENTS		808672	2		=			
ANR	808780	Identifier	TT_CG_MORE_COMPONENTS		808672	0					
ANR	808781	Identifier	TT_CG_MORE_COMPONENTS		808672	1					
ANR	808782	IdentifierDeclStatement	const byte * gdata = glyph_data . bits . data + 10 ;	940:8:37750:37795	808672	2	True				
ANR	808783	IdentifierDecl	* gdata = glyph_data . bits . data + 10		808672	0					
ANR	808784	IdentifierDeclType	const byte *		808672	0					
ANR	808785	Identifier	gdata		808672	1					
ANR	808786	AssignmentExpression	* gdata = glyph_data . bits . data + 10		808672	2		=			
ANR	808787	Identifier	gdata		808672	0					
ANR	808788	AdditiveExpression	glyph_data . bits . data + 10		808672	1		+			
ANR	808789	MemberAccess	glyph_data . bits . data		808672	0					
ANR	808790	MemberAccess	glyph_data . bits		808672	0					
ANR	808791	Identifier	glyph_data		808672	0					
ANR	808792	Identifier	bits		808672	1					
ANR	808793	Identifier	data		808672	1					
ANR	808794	PrimaryExpression	10		808672	1					
ANR	808795	IdentifierDeclStatement	gs_matrix_fixed mat ;	941:8:37805:37824	808672	3	True				
ANR	808796	IdentifierDecl	mat		808672	0					
ANR	808797	IdentifierDeclType	gs_matrix_fixed		808672	0					
ANR	808798	Identifier	mat		808672	1					
ANR	808799	ExpressionStatement	"memset ( & mat , 0 , sizeof ( mat ) )"	943:8:37835:37863	808672	4	True				
ANR	808800	CallExpression	"memset ( & mat , 0 , sizeof ( mat ) )"		808672	0					
ANR	808801	Callee	memset		808672	0					
ANR	808802	Identifier	memset		808672	0					
ANR	808803	ArgumentList	& mat		808672	1					
ANR	808804	Argument	& mat		808672	0					
ANR	808805	UnaryOperationExpression	& mat		808672	0					
ANR	808806	UnaryOperator	&		808672	0					
ANR	808807	Identifier	mat		808672	1					
ANR	808808	Argument	0		808672	1					
ANR	808809	PrimaryExpression	0		808672	0					
ANR	808810	Argument	sizeof ( mat )		808672	2					
ANR	808811	SizeofExpression	sizeof ( mat )		808672	0					
ANR	808812	Sizeof	sizeof		808672	0					
ANR	808813	SizeofOperand	mat		808672	1					
ANR	808814	ForStatement	for ( i = 0 ; flags & TT_CG_MORE_COMPONENTS ; ++ i )		808672	5					
ANR	808815	ForInit	i = 0 ;	944:13:37894:37899	808672	0	True				
ANR	808816	AssignmentExpression	i = 0		808672	0		=			
ANR	808817	Identifier	i		808672	0					
ANR	808818	PrimaryExpression	0		808672	1					
ANR	808819	Condition	flags & TT_CG_MORE_COMPONENTS	944:20:37901:37929	808672	1	True				
ANR	808820	BitAndExpression	flags & TT_CG_MORE_COMPONENTS		808672	0		&			
ANR	808821	Identifier	flags		808672	0					
ANR	808822	Identifier	TT_CG_MORE_COMPONENTS		808672	1					
ANR	808823	UnaryExpression	++ i	944:51:37932:37934	808672	2	True				
ANR	808824	IncDec	++		808672	0					
ANR	808825	Identifier	i		808672	1					
ANR	808826	CompoundStatement		20:56:741:741	808672	3					
ANR	808827	IfStatement	if ( pieces )		808672	0					
ANR	808828	Condition	pieces	945:16:37955:37960	808672	0	True				
ANR	808829	Identifier	pieces		808672	0					
ANR	808830	ExpressionStatement	pieces [ i ] = U16 ( gdata + 2 ) + GS_MIN_GLYPH_INDEX	946:16:37979:38026	808672	1	True				
ANR	808831	AssignmentExpression	pieces [ i ] = U16 ( gdata + 2 ) + GS_MIN_GLYPH_INDEX		808672	0		=			
ANR	808832	ArrayIndexing	pieces [ i ]		808672	0					
ANR	808833	Identifier	pieces		808672	0					
ANR	808834	Identifier	i		808672	1					
ANR	808835	AdditiveExpression	U16 ( gdata + 2 ) + GS_MIN_GLYPH_INDEX		808672	1		+			
ANR	808836	CallExpression	U16 ( gdata + 2 )		808672	0					
ANR	808837	Callee	U16		808672	0					
ANR	808838	Identifier	U16		808672	0					
ANR	808839	ArgumentList	gdata + 2		808672	1					
ANR	808840	Argument	gdata + 2		808672	0					
ANR	808841	AdditiveExpression	gdata + 2		808672	0		+			
ANR	808842	Identifier	gdata		808672	0					
ANR	808843	PrimaryExpression	2		808672	1					
ANR	808844	Identifier	GS_MIN_GLYPH_INDEX		808672	1					
ANR	808845	ExpressionStatement	"gs_type42_parse_component ( & gdata , & flags , & mat , NULL , pfont , & mat )"	947:12:38040:38106	808672	1	True				
ANR	808846	CallExpression	"gs_type42_parse_component ( & gdata , & flags , & mat , NULL , pfont , & mat )"		808672	0					
ANR	808847	Callee	gs_type42_parse_component		808672	0					
ANR	808848	Identifier	gs_type42_parse_component		808672	0					
ANR	808849	ArgumentList	& gdata		808672	1					
ANR	808850	Argument	& gdata		808672	0					
ANR	808851	UnaryOperationExpression	& gdata		808672	0					
ANR	808852	UnaryOperator	&		808672	0					
ANR	808853	Identifier	gdata		808672	1					
ANR	808854	Argument	& flags		808672	1					
ANR	808855	UnaryOperationExpression	& flags		808672	0					
ANR	808856	UnaryOperator	&		808672	0					
ANR	808857	Identifier	flags		808672	1					
ANR	808858	Argument	& mat		808672	2					
ANR	808859	UnaryOperationExpression	& mat		808672	0					
ANR	808860	UnaryOperator	&		808672	0					
ANR	808861	Identifier	mat		808672	1					
ANR	808862	Argument	NULL		808672	3					
ANR	808863	Identifier	NULL		808672	0					
ANR	808864	Argument	pfont		808672	4					
ANR	808865	Identifier	pfont		808672	0					
ANR	808866	Argument	& mat		808672	5					
ANR	808867	UnaryOperationExpression	& mat		808672	0					
ANR	808868	UnaryOperator	&		808672	0					
ANR	808869	Identifier	mat		808672	1					
ANR	808870	ExpressionStatement	* pnum_pieces = i	949:8:38126:38142	808672	6	True				
ANR	808871	AssignmentExpression	* pnum_pieces = i		808672	0		=			
ANR	808872	UnaryOperationExpression	* pnum_pieces		808672	0					
ANR	808873	UnaryOperator	*		808672	0					
ANR	808874	Identifier	pnum_pieces		808672	1					
ANR	808875	Identifier	i		808672	1					
ANR	808876	ElseStatement	else		808672	0					
ANR	808877	ExpressionStatement	* pnum_pieces = 0	951:8:38163:38179	808672	0	True				
ANR	808878	AssignmentExpression	* pnum_pieces = 0		808672	0		=			
ANR	808879	UnaryOperationExpression	* pnum_pieces		808672	0					
ANR	808880	UnaryOperator	*		808672	0					
ANR	808881	Identifier	pnum_pieces		808672	1					
ANR	808882	PrimaryExpression	0		808672	1					
ANR	808883	ExpressionStatement	"gs_glyph_data_free ( & glyph_data , ""parse_pieces"" )"	952:4:38185:38232	808672	7	True				
ANR	808884	CallExpression	"gs_glyph_data_free ( & glyph_data , ""parse_pieces"" )"		808672	0					
ANR	808885	Callee	gs_glyph_data_free		808672	0					
ANR	808886	Identifier	gs_glyph_data_free		808672	0					
ANR	808887	ArgumentList	& glyph_data		808672	1					
ANR	808888	Argument	& glyph_data		808672	0					
ANR	808889	UnaryOperationExpression	& glyph_data		808672	0					
ANR	808890	UnaryOperator	&		808672	0					
ANR	808891	Identifier	glyph_data		808672	1					
ANR	808892	Argument	"""parse_pieces"""		808672	1					
ANR	808893	PrimaryExpression	"""parse_pieces"""		808672	0					
ANR	808894	ReturnStatement	return 0 ;	953:4:38238:38246	808672	8	True				
ANR	808895	PrimaryExpression	0		808672	0					
ANR	808896	ReturnType	static int		808672	1					
ANR	808897	Identifier	parse_pieces		808672	2					
ANR	808898	ParameterList	"gs_font_type42 * pfont , gs_glyph glyph , gs_glyph * pieces , int * pnum_pieces"		808672	3					
ANR	808899	Parameter	gs_font_type42 * pfont	923:13:37107:37127	808672	0	True				
ANR	808900	ParameterType	gs_font_type42 *		808672	0					
ANR	808901	Identifier	pfont		808672	1					
ANR	808902	Parameter	gs_glyph glyph	923:36:37130:37143	808672	1	True				
ANR	808903	ParameterType	gs_glyph		808672	0					
ANR	808904	Identifier	glyph		808672	1					
ANR	808905	Parameter	gs_glyph * pieces	923:52:37146:37161	808672	2	True				
ANR	808906	ParameterType	gs_glyph *		808672	0					
ANR	808907	Identifier	pieces		808672	1					
ANR	808908	Parameter	int * pnum_pieces	924:13:37177:37192	808672	3	True				
ANR	808909	ParameterType	int *		808672	0					
ANR	808910	Identifier	pnum_pieces		808672	1					
ANR	808911	CFGEntryNode	ENTRY		808672		True				
ANR	808912	CFGExitNode	EXIT		808672		True				
ANR	808913	Symbol	& mat		808672						
ANR	808914	Symbol	code		808672						
ANR	808915	Symbol	glyph_data . bits . data		808672						
ANR	808916	Symbol	glyph_index		808672						
ANR	808917	Symbol	pfont -> memory		808672						
ANR	808918	Symbol	pnum_pieces		808672						
ANR	808919	Symbol	flags		808672						
ANR	808920	Symbol	gdata		808672						
ANR	808921	Symbol	pieces		808672						
ANR	808922	Symbol	glyph_data . bits . size		808672						
ANR	808923	Symbol	TT_CG_MORE_COMPONENTS		808672						
ANR	808924	Symbol	& flags		808672						
ANR	808925	Symbol	glyph_data . bits		808672						
ANR	808926	Symbol	mat		808672						
ANR	808927	Symbol	NULL		808672						
ANR	808928	Symbol	pfont		808672						
ANR	808929	Symbol	* pnum_pieces		808672						
ANR	808930	Symbol	glyph_data		808672						
ANR	808931	Symbol	pfont -> data		808672						
ANR	808932	Symbol	i		808672						
ANR	808933	Symbol	pfont -> data . get_glyph_index		808672						
ANR	808934	Symbol	glyph		808672						
ANR	808935	Symbol	* pfont		808672						
ANR	808936	Symbol	glyph_data . memory		808672						
ANR	808937	Symbol	* i		808672						
ANR	808938	Symbol	pfont -> data . get_outline		808672						
ANR	808939	Symbol	* pieces		808672						
ANR	808940	Symbol	& gdata		808672						
ANR	808941	Symbol	GS_MIN_GLYPH_INDEX		808672						
ANR	808942	Symbol	S16		808672						
ANR	808943	Symbol	U16		808672						
ANR	808944	Symbol	& glyph_data		808672						
ANR	808945	Function	gs_type42_glyph_outline	957:0:38304:40600							
ANR	808946	FunctionDef	"gs_type42_glyph_outline (gs_font * font , int WMode , gs_glyph glyph , const gs_matrix * pmat , gx_path * ppath , double sbw [ 4 ])"		808945	0					
ANR	808947	CompoundStatement		960:0:38452:40600	808945	0					
ANR	808948	Statement	gs_font_type42	961:4:38458:38471	808945	0	True				
ANR	808949	Statement	*	961:19:38473:38473	808945	1	True				
ANR	808950	Statement	const	961:20:38474:38478	808945	2	True				
ANR	808951	ExpressionStatement	pfont = ( gs_font_type42 * ) font	961:26:38480:38510	808945	3	True				
ANR	808952	AssignmentExpression	pfont = ( gs_font_type42 * ) font		808945	0		=			
ANR	808953	Identifier	pfont		808945	0					
ANR	808954	CastExpression	( gs_font_type42 * ) font		808945	1					
ANR	808955	CastTarget	gs_font_type42 *		808945	0					
ANR	808956	Identifier	font		808945	1					
ANR	808957	IdentifierDeclStatement	uint glyph_index ;	962:4:38516:38532	808945	4	True				
ANR	808958	IdentifierDecl	glyph_index		808945	0					
ANR	808959	IdentifierDeclType	uint		808945	0					
ANR	808960	Identifier	glyph_index		808945	1					
ANR	808961	IdentifierDeclStatement	gs_fixed_point origin ;	963:4:38538:38559	808945	5	True				
ANR	808962	IdentifierDecl	origin		808945	0					
ANR	808963	IdentifierDeclType	gs_fixed_point		808945	0					
ANR	808964	Identifier	origin		808945	1					
ANR	808965	IdentifierDeclStatement	int code ;	964:4:38565:38573	808945	6	True				
ANR	808966	IdentifierDecl	code		808945	0					
ANR	808967	IdentifierDeclType	int		808945	0					
ANR	808968	Identifier	code		808945	1					
ANR	808969	IdentifierDeclStatement	gs_glyph_info_t info ;	965:4:38579:38599	808945	7	True				
ANR	808970	IdentifierDecl	info		808945	0					
ANR	808971	IdentifierDeclType	gs_glyph_info_t		808945	0					
ANR	808972	Identifier	info		808945	1					
ANR	808973	Statement	static	966:4:38605:38610	808945	8	True				
ANR	808974	IdentifierDeclStatement	const gs_matrix imat = { identity_matrix_body } ;	966:11:38612:38659	808945	9	True				
ANR	808975	IdentifierDecl	imat = { identity_matrix_body }		808945	0					
ANR	808976	IdentifierDeclType	const gs_matrix		808945	0					
ANR	808977	Identifier	imat		808945	1					
ANR	808978	AssignmentExpression	imat = { identity_matrix_body }		808945	2		=			
ANR	808979	Identifier	imat		808945	0					
ANR	808980	InitializerList	identity_matrix_body		808945	1					
ANR	808981	Identifier	identity_matrix_body		808945	0					
ANR	808982	IdentifierDeclStatement	bool design_grid = true ;	967:4:38665:38688	808945	10	True				
ANR	808983	IdentifierDecl	design_grid = true		808945	0					
ANR	808984	IdentifierDeclType	bool		808945	0					
ANR	808985	Identifier	design_grid		808945	1					
ANR	808986	AssignmentExpression	design_grid = true		808945	2		=			
ANR	808987	Identifier	true		808945	0					
ANR	808988	Identifier	true		808945	1					
ANR	808989	IdentifierDeclStatement	"const gs_log2_scale_point log2_scale = { 0 , 0 } ;"	968:4:38694:38739	808945	11	True				
ANR	808990	IdentifierDecl	"log2_scale = { 0 , 0 }"		808945	0					
ANR	808991	IdentifierDeclType	const gs_log2_scale_point		808945	0					
ANR	808992	Identifier	log2_scale		808945	1					
ANR	808993	AssignmentExpression	"log2_scale = { 0 , 0 }"		808945	2		=			
ANR	808994	Identifier	log2_scale		808945	0					
ANR	808995	InitializerList	0		808945	1					
ANR	808996	PrimaryExpression	0		808945	0					
ANR	808997	PrimaryExpression	0		808945	1					
ANR	808998	IdentifierDeclStatement	cached_fm_pair * pair ;	975:4:39105:39125	808945	12	True				
ANR	808999	IdentifierDecl	* pair		808945	0					
ANR	809000	IdentifierDeclType	cached_fm_pair *		808945	0					
ANR	809001	Identifier	pair		808945	1					
ANR	809002	IfStatement	if ( glyph >= GS_MIN_GLYPH_INDEX )		808945	13					
ANR	809003	Condition	glyph >= GS_MIN_GLYPH_INDEX	977:8:39136:39162	808945	0	True				
ANR	809004	RelationalExpression	glyph >= GS_MIN_GLYPH_INDEX		808945	0		>=			
ANR	809005	Identifier	glyph		808945	0					
ANR	809006	Identifier	GS_MIN_GLYPH_INDEX		808945	1					
ANR	809007	ExpressionStatement	glyph_index = glyph - GS_MIN_GLYPH_INDEX	978:8:39173:39213	808945	1	True				
ANR	809008	AssignmentExpression	glyph_index = glyph - GS_MIN_GLYPH_INDEX		808945	0		=			
ANR	809009	Identifier	glyph_index		808945	0					
ANR	809010	AdditiveExpression	glyph - GS_MIN_GLYPH_INDEX		808945	1		-			
ANR	809011	Identifier	glyph		808945	0					
ANR	809012	Identifier	GS_MIN_GLYPH_INDEX		808945	1					
ANR	809013	ElseStatement	else		808945	0					
ANR	809014	CompoundStatement		20:9:771:771	808945	0					
ANR	809015	ExpressionStatement	"glyph_index = pfont -> data . get_glyph_index ( pfont , glyph )"	980:8:39234:39289	808945	0	True				
ANR	809016	AssignmentExpression	"glyph_index = pfont -> data . get_glyph_index ( pfont , glyph )"		808945	0		=			
ANR	809017	Identifier	glyph_index		808945	0					
ANR	809018	CallExpression	"pfont -> data . get_glyph_index ( pfont , glyph )"		808945	1					
ANR	809019	Callee	pfont -> data . get_glyph_index		808945	0					
ANR	809020	MemberAccess	pfont -> data . get_glyph_index		808945	0					
ANR	809021	PtrMemberAccess	pfont -> data		808945	0					
ANR	809022	Identifier	pfont		808945	0					
ANR	809023	Identifier	data		808945	1					
ANR	809024	Identifier	get_glyph_index		808945	1					
ANR	809025	ArgumentList	pfont		808945	1					
ANR	809026	Argument	pfont		808945	0					
ANR	809027	Identifier	pfont		808945	0					
ANR	809028	Argument	glyph		808945	1					
ANR	809029	Identifier	glyph		808945	0					
ANR	809030	IfStatement	if ( pfont -> data . gsub_size )		808945	1					
ANR	809031	Condition	pfont -> data . gsub_size	981:12:39303:39323	808945	0	True				
ANR	809032	MemberAccess	pfont -> data . gsub_size		808945	0					
ANR	809033	PtrMemberAccess	pfont -> data		808945	0					
ANR	809034	Identifier	pfont		808945	0					
ANR	809035	Identifier	data		808945	1					
ANR	809036	Identifier	gsub_size		808945	1					
ANR	809037	CompoundStatement		22:35:873:873	808945	1					
ANR	809038	IfStatement	if ( pfont -> data . substitute_glyph_index_vertical != NULL )		808945	0					
ANR	809039	Condition	pfont -> data . substitute_glyph_index_vertical != NULL	982:16:39344:39394	808945	0	True				
ANR	809040	EqualityExpression	pfont -> data . substitute_glyph_index_vertical != NULL		808945	0		!=			
ANR	809041	MemberAccess	pfont -> data . substitute_glyph_index_vertical		808945	0					
ANR	809042	PtrMemberAccess	pfont -> data		808945	0					
ANR	809043	Identifier	pfont		808945	0					
ANR	809044	Identifier	data		808945	1					
ANR	809045	Identifier	substitute_glyph_index_vertical		808945	1					
ANR	809046	Identifier	NULL		808945	1					
ANR	809047	ExpressionStatement	"glyph_index = pfont -> data . substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"	983:16:39413:39504	808945	1	True				
ANR	809048	AssignmentExpression	"glyph_index = pfont -> data . substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		808945	0		=			
ANR	809049	Identifier	glyph_index		808945	0					
ANR	809050	CallExpression	"pfont -> data . substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		808945	1					
ANR	809051	Callee	pfont -> data . substitute_glyph_index_vertical		808945	0					
ANR	809052	MemberAccess	pfont -> data . substitute_glyph_index_vertical		808945	0					
ANR	809053	PtrMemberAccess	pfont -> data		808945	0					
ANR	809054	Identifier	pfont		808945	0					
ANR	809055	Identifier	data		808945	1					
ANR	809056	Identifier	substitute_glyph_index_vertical		808945	1					
ANR	809057	ArgumentList	pfont		808945	1					
ANR	809058	Argument	pfont		808945	0					
ANR	809059	Identifier	pfont		808945	0					
ANR	809060	Argument	glyph_index		808945	1					
ANR	809061	Identifier	glyph_index		808945	0					
ANR	809062	Argument	WMode		808945	2					
ANR	809063	Identifier	WMode		808945	0					
ANR	809064	Argument	glyph		808945	3					
ANR	809065	Identifier	glyph		808945	0					
ANR	809066	ElseStatement	else		808945	0					
ANR	809067	ExpressionStatement	"glyph_index = gs_type42_substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"	985:16:39539:39628	808945	0	True				
ANR	809068	AssignmentExpression	"glyph_index = gs_type42_substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		808945	0		=			
ANR	809069	Identifier	glyph_index		808945	0					
ANR	809070	CallExpression	"gs_type42_substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		808945	1					
ANR	809071	Callee	gs_type42_substitute_glyph_index_vertical		808945	0					
ANR	809072	Identifier	gs_type42_substitute_glyph_index_vertical		808945	0					
ANR	809073	ArgumentList	pfont		808945	1					
ANR	809074	Argument	pfont		808945	0					
ANR	809075	Identifier	pfont		808945	0					
ANR	809076	Argument	glyph_index		808945	1					
ANR	809077	Identifier	glyph_index		808945	0					
ANR	809078	Argument	WMode		808945	2					
ANR	809079	Identifier	WMode		808945	0					
ANR	809080	Argument	glyph		808945	3					
ANR	809081	Identifier	glyph		808945	0					
ANR	809082	ExpressionStatement	"code = gx_lookup_fm_pair ( font , pmat , & log2_scale , design_grid , & pair )"	988:4:39650:39719	808945	14	True				
ANR	809083	AssignmentExpression	"code = gx_lookup_fm_pair ( font , pmat , & log2_scale , design_grid , & pair )"		808945	0		=			
ANR	809084	Identifier	code		808945	0					
ANR	809085	CallExpression	"gx_lookup_fm_pair ( font , pmat , & log2_scale , design_grid , & pair )"		808945	1					
ANR	809086	Callee	gx_lookup_fm_pair		808945	0					
ANR	809087	Identifier	gx_lookup_fm_pair		808945	0					
ANR	809088	ArgumentList	font		808945	1					
ANR	809089	Argument	font		808945	0					
ANR	809090	Identifier	font		808945	0					
ANR	809091	Argument	pmat		808945	1					
ANR	809092	Identifier	pmat		808945	0					
ANR	809093	Argument	& log2_scale		808945	2					
ANR	809094	UnaryOperationExpression	& log2_scale		808945	0					
ANR	809095	UnaryOperator	&		808945	0					
ANR	809096	Identifier	log2_scale		808945	1					
ANR	809097	Argument	design_grid		808945	3					
ANR	809098	Identifier	design_grid		808945	0					
ANR	809099	Argument	& pair		808945	4					
ANR	809100	UnaryOperationExpression	& pair		808945	0					
ANR	809101	UnaryOperator	&		808945	0					
ANR	809102	Identifier	pair		808945	1					
ANR	809103	IfStatement	if ( code < 0 )		808945	15					
ANR	809104	Condition	code < 0	989:8:39729:39736	808945	0	True				
ANR	809105	RelationalExpression	code < 0		808945	0		<			
ANR	809106	Identifier	code		808945	0					
ANR	809107	PrimaryExpression	0		808945	1					
ANR	809108	ReturnStatement	return code ;	990:8:39747:39758	808945	1	True				
ANR	809109	Identifier	code		808945	0					
ANR	809110	IfStatement	if ( pmat == 0 )		808945	16					
ANR	809111	Condition	pmat == 0	991:8:39768:39776	808945	0	True				
ANR	809112	EqualityExpression	pmat == 0		808945	0		==			
ANR	809113	Identifier	pmat		808945	0					
ANR	809114	PrimaryExpression	0		808945	1					
ANR	809115	ExpressionStatement	pmat = & imat	992:8:39787:39799	808945	1	True				
ANR	809116	AssignmentExpression	pmat = & imat		808945	0		=			
ANR	809117	Identifier	pmat		808945	0					
ANR	809118	UnaryOperationExpression	& imat		808945	1					
ANR	809119	UnaryOperator	&		808945	0					
ANR	809120	Identifier	imat		808945	1					
ANR	809121	IfStatement	if ( ! pair -> ttf )		808945	17					
ANR	809122	Condition	! pair -> ttf	993:8:39809:39818	808945	0	True				
ANR	809123	UnaryOperationExpression	! pair -> ttf		808945	0					
ANR	809124	UnaryOperator	!		808945	0					
ANR	809125	PtrMemberAccess	pair -> ttf		808945	1					
ANR	809126	Identifier	pair		808945	0					
ANR	809127	Identifier	ttf		808945	1					
ANR	809128	CompoundStatement		35:8:1378:1425	808945	1					
ANR	809129	IdentifierDeclStatement	void * FAPI_store = ( ( gs_font_base * ) font ) -> FAPI ;	994:8:39831:39878	808945	0	True				
ANR	809130	IdentifierDecl	* FAPI_store = ( ( gs_font_base * ) font ) -> FAPI		808945	0					
ANR	809131	IdentifierDeclType	void *		808945	0					
ANR	809132	Identifier	FAPI_store		808945	1					
ANR	809133	AssignmentExpression	* FAPI_store = ( ( gs_font_base * ) font ) -> FAPI		808945	2		=			
ANR	809134	Identifier	FAPI_store		808945	0					
ANR	809135	PtrMemberAccess	( ( gs_font_base * ) font ) -> FAPI		808945	1					
ANR	809136	CastExpression	( gs_font_base * ) font		808945	0					
ANR	809137	CastTarget	gs_font_base *		808945	0					
ANR	809138	Identifier	font		808945	1					
ANR	809139	Identifier	FAPI		808945	1					
ANR	809140	ExpressionStatement	( ( gs_font_base * ) font ) -> FAPI = NULL	995:8:39888:39923	808945	1	True				
ANR	809141	AssignmentExpression	( ( gs_font_base * ) font ) -> FAPI = NULL		808945	0		=			
ANR	809142	PtrMemberAccess	( ( gs_font_base * ) font ) -> FAPI		808945	0					
ANR	809143	CastExpression	( gs_font_base * ) font		808945	0					
ANR	809144	CastTarget	gs_font_base *		808945	0					
ANR	809145	Identifier	font		808945	1					
ANR	809146	Identifier	FAPI		808945	1					
ANR	809147	Identifier	NULL		808945	1					
ANR	809148	ExpressionStatement	"gx_provide_fm_pair_attributes ( font -> dir , font , pair , pmat , & log2_scale , false )"	996:8:39933:40011	808945	2	True				
ANR	809149	CallExpression	"gx_provide_fm_pair_attributes ( font -> dir , font , pair , pmat , & log2_scale , false )"		808945	0					
ANR	809150	Callee	gx_provide_fm_pair_attributes		808945	0					
ANR	809151	Identifier	gx_provide_fm_pair_attributes		808945	0					
ANR	809152	ArgumentList	font -> dir		808945	1					
ANR	809153	Argument	font -> dir		808945	0					
ANR	809154	PtrMemberAccess	font -> dir		808945	0					
ANR	809155	Identifier	font		808945	0					
ANR	809156	Identifier	dir		808945	1					
ANR	809157	Argument	font		808945	1					
ANR	809158	Identifier	font		808945	0					
ANR	809159	Argument	pair		808945	2					
ANR	809160	Identifier	pair		808945	0					
ANR	809161	Argument	pmat		808945	3					
ANR	809162	Identifier	pmat		808945	0					
ANR	809163	Argument	& log2_scale		808945	4					
ANR	809164	UnaryOperationExpression	& log2_scale		808945	0					
ANR	809165	UnaryOperator	&		808945	0					
ANR	809166	Identifier	log2_scale		808945	1					
ANR	809167	Argument	false		808945	5					
ANR	809168	Identifier	false		808945	0					
ANR	809169	ExpressionStatement	( ( gs_font_base * ) font ) -> FAPI = FAPI_store	997:8:40021:40062	808945	3	True				
ANR	809170	AssignmentExpression	( ( gs_font_base * ) font ) -> FAPI = FAPI_store		808945	0		=			
ANR	809171	PtrMemberAccess	( ( gs_font_base * ) font ) -> FAPI		808945	0					
ANR	809172	CastExpression	( gs_font_base * ) font		808945	0					
ANR	809173	CastTarget	gs_font_base *		808945	0					
ANR	809174	Identifier	font		808945	1					
ANR	809175	Identifier	FAPI		808945	1					
ANR	809176	Identifier	FAPI_store		808945	1					
ANR	809177	IfStatement	"if ( ( code = gx_path_current_point ( ppath , & origin ) ) < 0 || ( code = append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid ) ) < 0 || ( code = font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info ) ) < 0 )"		808945	18					
ANR	809178	Condition	"( code = gx_path_current_point ( ppath , & origin ) ) < 0 || ( code = append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid ) ) < 0 || ( code = font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info ) ) < 0"	999:8:40078:40411	808945	0	True				
ANR	809179	OrExpression	"( code = gx_path_current_point ( ppath , & origin ) ) < 0 || ( code = append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid ) ) < 0 || ( code = font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info ) ) < 0"		808945	0		||			
ANR	809180	RelationalExpression	"( code = gx_path_current_point ( ppath , & origin ) ) < 0"		808945	0		<			
ANR	809181	AssignmentExpression	"code = gx_path_current_point ( ppath , & origin )"		808945	0		=			
ANR	809182	Identifier	code		808945	0					
ANR	809183	CallExpression	"gx_path_current_point ( ppath , & origin )"		808945	1					
ANR	809184	Callee	gx_path_current_point		808945	0					
ANR	809185	Identifier	gx_path_current_point		808945	0					
ANR	809186	ArgumentList	ppath		808945	1					
ANR	809187	Argument	ppath		808945	0					
ANR	809188	Identifier	ppath		808945	0					
ANR	809189	Argument	& origin		808945	1					
ANR	809190	UnaryOperationExpression	& origin		808945	0					
ANR	809191	UnaryOperator	&		808945	0					
ANR	809192	Identifier	origin		808945	1					
ANR	809193	PrimaryExpression	0		808945	1					
ANR	809194	OrExpression	"( code = append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid ) ) < 0 || ( code = font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info ) ) < 0"		808945	1		||			
ANR	809195	RelationalExpression	"( code = append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid ) ) < 0"		808945	0		<			
ANR	809196	AssignmentExpression	"code = append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid )"		808945	0		=			
ANR	809197	Identifier	code		808945	0					
ANR	809198	CallExpression	"append_outline_fitted ( glyph_index , pmat , ppath , pair , & log2_scale , design_grid )"		808945	1					
ANR	809199	Callee	append_outline_fitted		808945	0					
ANR	809200	Identifier	append_outline_fitted		808945	0					
ANR	809201	ArgumentList	glyph_index		808945	1					
ANR	809202	Argument	glyph_index		808945	0					
ANR	809203	Identifier	glyph_index		808945	0					
ANR	809204	Argument	pmat		808945	1					
ANR	809205	Identifier	pmat		808945	0					
ANR	809206	Argument	ppath		808945	2					
ANR	809207	Identifier	ppath		808945	0					
ANR	809208	Argument	pair		808945	3					
ANR	809209	Identifier	pair		808945	0					
ANR	809210	Argument	& log2_scale		808945	4					
ANR	809211	UnaryOperationExpression	& log2_scale		808945	0					
ANR	809212	UnaryOperator	&		808945	0					
ANR	809213	Identifier	log2_scale		808945	1					
ANR	809214	Argument	design_grid		808945	5					
ANR	809215	Identifier	design_grid		808945	0					
ANR	809216	PrimaryExpression	0		808945	1					
ANR	809217	RelationalExpression	"( code = font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info ) ) < 0"		808945	1		<			
ANR	809218	AssignmentExpression	"code = font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info )"		808945	0		=			
ANR	809219	Identifier	code		808945	0					
ANR	809220	CallExpression	"font -> procs . glyph_info ( font , glyph , pmat , GLYPH_INFO_WIDTH0 << WMode , & info )"		808945	1					
ANR	809221	Callee	font -> procs . glyph_info		808945	0					
ANR	809222	MemberAccess	font -> procs . glyph_info		808945	0					
ANR	809223	PtrMemberAccess	font -> procs		808945	0					
ANR	809224	Identifier	font		808945	0					
ANR	809225	Identifier	procs		808945	1					
ANR	809226	Identifier	glyph_info		808945	1					
ANR	809227	ArgumentList	font		808945	1					
ANR	809228	Argument	font		808945	0					
ANR	809229	Identifier	font		808945	0					
ANR	809230	Argument	glyph		808945	1					
ANR	809231	Identifier	glyph		808945	0					
ANR	809232	Argument	pmat		808945	2					
ANR	809233	Identifier	pmat		808945	0					
ANR	809234	Argument	GLYPH_INFO_WIDTH0 << WMode		808945	3					
ANR	809235	ShiftExpression	GLYPH_INFO_WIDTH0 << WMode		808945	0		<<			
ANR	809236	Identifier	GLYPH_INFO_WIDTH0		808945	0					
ANR	809237	Identifier	WMode		808945	1					
ANR	809238	Argument	& info		808945	4					
ANR	809239	UnaryOperationExpression	& info		808945	0					
ANR	809240	UnaryOperator	&		808945	0					
ANR	809241	Identifier	info		808945	1					
ANR	809242	PrimaryExpression	0		808945	1					
ANR	809243	ReturnStatement	return code ;	1005:8:40431:40442	808945	1	True				
ANR	809244	Identifier	code		808945	0					
ANR	809245	ReturnStatement	"return gx_path_add_point ( ppath , origin . x + float2fixed ( info . width [ WMode ] . x ) , origin . y + float2fixed ( info . width [ WMode ] . y ) ) ;"	1006:4:40448:40598	808945	19	True				
ANR	809246	CallExpression	"gx_path_add_point ( ppath , origin . x + float2fixed ( info . width [ WMode ] . x ) , origin . y + float2fixed ( info . width [ WMode ] . y ) )"		808945	0					
ANR	809247	Callee	gx_path_add_point		808945	0					
ANR	809248	Identifier	gx_path_add_point		808945	0					
ANR	809249	ArgumentList	ppath		808945	1					
ANR	809250	Argument	ppath		808945	0					
ANR	809251	Identifier	ppath		808945	0					
ANR	809252	Argument	origin . x + float2fixed ( info . width [ WMode ] . x )		808945	1					
ANR	809253	AdditiveExpression	origin . x + float2fixed ( info . width [ WMode ] . x )		808945	0		+			
ANR	809254	MemberAccess	origin . x		808945	0					
ANR	809255	Identifier	origin		808945	0					
ANR	809256	Identifier	x		808945	1					
ANR	809257	CallExpression	float2fixed ( info . width [ WMode ] . x )		808945	1					
ANR	809258	Callee	float2fixed		808945	0					
ANR	809259	Identifier	float2fixed		808945	0					
ANR	809260	ArgumentList	info . width [ WMode ] . x		808945	1					
ANR	809261	Argument	info . width [ WMode ] . x		808945	0					
ANR	809262	MemberAccess	info . width [ WMode ] . x		808945	0					
ANR	809263	ArrayIndexing	info . width [ WMode ]		808945	0					
ANR	809264	MemberAccess	info . width		808945	0					
ANR	809265	Identifier	info		808945	0					
ANR	809266	Identifier	width		808945	1					
ANR	809267	Identifier	WMode		808945	1					
ANR	809268	Identifier	x		808945	1					
ANR	809269	Argument	origin . y + float2fixed ( info . width [ WMode ] . y )		808945	2					
ANR	809270	AdditiveExpression	origin . y + float2fixed ( info . width [ WMode ] . y )		808945	0		+			
ANR	809271	MemberAccess	origin . y		808945	0					
ANR	809272	Identifier	origin		808945	0					
ANR	809273	Identifier	y		808945	1					
ANR	809274	CallExpression	float2fixed ( info . width [ WMode ] . y )		808945	1					
ANR	809275	Callee	float2fixed		808945	0					
ANR	809276	Identifier	float2fixed		808945	0					
ANR	809277	ArgumentList	info . width [ WMode ] . y		808945	1					
ANR	809278	Argument	info . width [ WMode ] . y		808945	0					
ANR	809279	MemberAccess	info . width [ WMode ] . y		808945	0					
ANR	809280	ArrayIndexing	info . width [ WMode ]		808945	0					
ANR	809281	MemberAccess	info . width		808945	0					
ANR	809282	Identifier	info		808945	0					
ANR	809283	Identifier	width		808945	1					
ANR	809284	Identifier	WMode		808945	1					
ANR	809285	Identifier	y		808945	1					
ANR	809286	ReturnType	int		808945	1					
ANR	809287	Identifier	gs_type42_glyph_outline		808945	2					
ANR	809288	ParameterList	"gs_font * font , int WMode , gs_glyph glyph , const gs_matrix * pmat , gx_path * ppath , double sbw [ 4 ]"		808945	3					
ANR	809289	Parameter	gs_font * font	958:24:38332:38344	808945	0	True				
ANR	809290	ParameterType	gs_font *		808945	0					
ANR	809291	Identifier	font		808945	1					
ANR	809292	Parameter	int WMode	958:39:38347:38355	808945	1	True				
ANR	809293	ParameterType	int		808945	0					
ANR	809294	Identifier	WMode		808945	1					
ANR	809295	Parameter	gs_glyph glyph	958:50:38358:38371	808945	2	True				
ANR	809296	ParameterType	gs_glyph		808945	0					
ANR	809297	Identifier	glyph		808945	1					
ANR	809298	Parameter	const gs_matrix * pmat	958:66:38374:38394	808945	3	True				
ANR	809299	ParameterType	const gs_matrix *		808945	0					
ANR	809300	Identifier	pmat		808945	1					
ANR	809301	Parameter	gx_path * ppath	959:24:38421:38434	808945	4	True				
ANR	809302	ParameterType	gx_path *		808945	0					
ANR	809303	Identifier	ppath		808945	1					
ANR	809304	Parameter	double sbw [ 4 ]	959:40:38437:38449	808945	5	True				
ANR	809305	ParameterType	double [ 4 ]		808945	0					
ANR	809306	Identifier	sbw		808945	1					
ANR	809307	CFGEntryNode	ENTRY		808945		True				
ANR	809308	CFGExitNode	EXIT		808945		True				
ANR	809309	Symbol	( ( gs_font_base * ) font ) -> FAPI		808945						
ANR	809310	Symbol	glyph_index		808945						
ANR	809311	Symbol	sbw		808945						
ANR	809312	Symbol	info . width		808945						
ANR	809313	Symbol	design_grid		808945						
ANR	809314	Symbol	origin . x		808945						
ANR	809315	Symbol	origin . y		808945						
ANR	809316	Symbol	info . width [ WMode ] . y		808945						
ANR	809317	Symbol	info . width [ WMode ] . x		808945						
ANR	809318	Symbol	* font		808945						
ANR	809319	Symbol	info		808945						
ANR	809320	Symbol	NULL		808945						
ANR	809321	Symbol	& info		808945						
ANR	809322	Symbol	* info . width		808945						
ANR	809323	Symbol	gx_path_add_point		808945						
ANR	809324	Symbol	* pair		808945						
ANR	809325	Symbol	true		808945						
ANR	809326	Symbol	pair -> ttf		808945						
ANR	809327	Symbol	& log2_scale		808945						
ANR	809328	Symbol	code		808945						
ANR	809329	Symbol	pmat		808945						
ANR	809330	Symbol	gx_lookup_fm_pair		808945						
ANR	809331	Symbol	origin		808945						
ANR	809332	Symbol	ppath		808945						
ANR	809333	Symbol	float2fixed		808945						
ANR	809334	Symbol	GLYPH_INFO_WIDTH0		808945						
ANR	809335	Symbol	pfont -> data . gsub_size		808945						
ANR	809336	Symbol	identity_matrix_body		808945						
ANR	809337	Symbol	& pair		808945						
ANR	809338	Symbol	& imat		808945						
ANR	809339	Symbol	pfont		808945						
ANR	809340	Symbol	append_outline_fitted		808945						
ANR	809341	Symbol	imat		808945						
ANR	809342	Symbol	gs_type42_substitute_glyph_index_vertical		808945						
ANR	809343	Symbol	font -> procs . glyph_info		808945						
ANR	809344	Symbol	false		808945						
ANR	809345	Symbol	pfont -> data		808945						
ANR	809346	Symbol	pfont -> data . substitute_glyph_index_vertical		808945						
ANR	809347	Symbol	* WMode		808945						
ANR	809348	Symbol	log2_scale		808945						
ANR	809349	Symbol	pair		808945						
ANR	809350	Symbol	pfont -> data . get_glyph_index		808945						
ANR	809351	Symbol	gx_path_current_point		808945						
ANR	809352	Symbol	glyph		808945						
ANR	809353	Symbol	* pfont		808945						
ANR	809354	Symbol	WMode		808945						
ANR	809355	Symbol	& origin		808945						
ANR	809356	Symbol	GS_MIN_GLYPH_INDEX		808945						
ANR	809357	Symbol	FAPI_store		808945						
ANR	809358	Symbol	font -> procs		808945						
ANR	809359	Symbol	* info		808945						
ANR	809360	Symbol	font -> dir		808945						
ANR	809361	Symbol	font		808945						
ANR	809362	Function	gs_type42_glyph_info_by_gid	1011:0:40640:42980							
ANR	809363	FunctionDef	"gs_type42_glyph_info_by_gid (gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info , uint glyph_index)"		809362	0					
ANR	809364	CompoundStatement		1014:0:40801:42980	809362	0					
ANR	809365	Statement	gs_font_type42	1015:4:40807:40820	809362	0	True				
ANR	809366	Statement	*	1015:19:40822:40822	809362	1	True				
ANR	809367	Statement	const	1015:20:40823:40827	809362	2	True				
ANR	809368	ExpressionStatement	pfont = ( gs_font_type42 * ) font	1015:26:40829:40859	809362	3	True				
ANR	809369	AssignmentExpression	pfont = ( gs_font_type42 * ) font		809362	0		=			
ANR	809370	Identifier	pfont		809362	0					
ANR	809371	CastExpression	( gs_font_type42 * ) font		809362	1					
ANR	809372	CastTarget	gs_font_type42 *		809362	0					
ANR	809373	Identifier	font		809362	1					
ANR	809374	IdentifierDeclStatement	int default_members = members & ~ ( GLYPH_INFO_WIDTHS | GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 ) ;	1016:4:40865:41081	809362	4	True				
ANR	809375	IdentifierDecl	default_members = members & ~ ( GLYPH_INFO_WIDTHS | GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 )		809362	0					
ANR	809376	IdentifierDeclType	int		809362	0					
ANR	809377	Identifier	default_members		809362	1					
ANR	809378	AssignmentExpression	default_members = members & ~ ( GLYPH_INFO_WIDTHS | GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 )		809362	2		=			
ANR	809379	Identifier	default_members		809362	0					
ANR	809380	BitAndExpression	members & ~ ( GLYPH_INFO_WIDTHS | GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 )		809362	1		&			
ANR	809381	Identifier	members		809362	0					
ANR	809382	UnaryOperationExpression	~ ( GLYPH_INFO_WIDTHS | GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1 )		809362	1					
ANR	809383	UnaryOperator	~		809362	0					
ANR	809384	InclusiveOrExpression	GLYPH_INFO_WIDTHS | GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1		809362	1		|			
ANR	809385	Identifier	GLYPH_INFO_WIDTHS		809362	0					
ANR	809386	InclusiveOrExpression	GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1		809362	1		|			
ANR	809387	Identifier	GLYPH_INFO_NUM_PIECES		809362	0					
ANR	809388	InclusiveOrExpression	GLYPH_INFO_PIECES | GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1		809362	1		|			
ANR	809389	Identifier	GLYPH_INFO_PIECES		809362	0					
ANR	809390	InclusiveOrExpression	GLYPH_INFO_OUTLINE_WIDTHS | GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1		809362	1		|			
ANR	809391	Identifier	GLYPH_INFO_OUTLINE_WIDTHS		809362	0					
ANR	809392	InclusiveOrExpression	GLYPH_INFO_VVECTOR0 | GLYPH_INFO_VVECTOR1		809362	1		|			
ANR	809393	Identifier	GLYPH_INFO_VVECTOR0		809362	0					
ANR	809394	Identifier	GLYPH_INFO_VVECTOR1		809362	1					
ANR	809395	IdentifierDeclStatement	gs_glyph_data_t outline ;	1020:4:41087:41110	809362	5	True				
ANR	809396	IdentifierDecl	outline		809362	0					
ANR	809397	IdentifierDeclType	gs_glyph_data_t		809362	0					
ANR	809398	Identifier	outline		809362	1					
ANR	809399	IdentifierDeclStatement	int code = 0 ;	1021:4:41116:41128	809362	6	True				
ANR	809400	IdentifierDecl	code = 0		809362	0					
ANR	809401	IdentifierDeclType	int		809362	0					
ANR	809402	Identifier	code		809362	1					
ANR	809403	AssignmentExpression	code = 0		809362	2		=			
ANR	809404	Identifier	code		809362	0					
ANR	809405	PrimaryExpression	0		809362	1					
ANR	809406	ExpressionStatement	outline . memory = pfont -> memory	1023:4:41135:41165	809362	7	True				
ANR	809407	AssignmentExpression	outline . memory = pfont -> memory		809362	0		=			
ANR	809408	MemberAccess	outline . memory		809362	0					
ANR	809409	Identifier	outline		809362	0					
ANR	809410	Identifier	memory		809362	1					
ANR	809411	PtrMemberAccess	pfont -> memory		809362	1					
ANR	809412	Identifier	pfont		809362	0					
ANR	809413	Identifier	memory		809362	1					
ANR	809414	IfStatement	if ( default_members )		809362	8					
ANR	809415	Condition	default_members	1024:8:41175:41189	809362	0	True				
ANR	809416	Identifier	default_members		809362	0					
ANR	809417	CompoundStatement		11:25:390:390	809362	1					
ANR	809418	ExpressionStatement	"code = gs_default_glyph_info ( font , glyph , pmat , default_members , info )"	1025:8:41202:41272	809362	0	True				
ANR	809419	AssignmentExpression	"code = gs_default_glyph_info ( font , glyph , pmat , default_members , info )"		809362	0		=			
ANR	809420	Identifier	code		809362	0					
ANR	809421	CallExpression	"gs_default_glyph_info ( font , glyph , pmat , default_members , info )"		809362	1					
ANR	809422	Callee	gs_default_glyph_info		809362	0					
ANR	809423	Identifier	gs_default_glyph_info		809362	0					
ANR	809424	ArgumentList	font		809362	1					
ANR	809425	Argument	font		809362	0					
ANR	809426	Identifier	font		809362	0					
ANR	809427	Argument	glyph		809362	1					
ANR	809428	Identifier	glyph		809362	0					
ANR	809429	Argument	pmat		809362	2					
ANR	809430	Identifier	pmat		809362	0					
ANR	809431	Argument	default_members		809362	3					
ANR	809432	Identifier	default_members		809362	0					
ANR	809433	Argument	info		809362	4					
ANR	809434	Identifier	info		809362	0					
ANR	809435	IfStatement	if ( code < 0 )		809362	1					
ANR	809436	Condition	code < 0	1027:12:41287:41294	809362	0	True				
ANR	809437	RelationalExpression	code < 0		809362	0		<			
ANR	809438	Identifier	code		809362	0					
ANR	809439	PrimaryExpression	0		809362	1					
ANR	809440	ReturnStatement	return code ;	1028:12:41309:41320	809362	1	True				
ANR	809441	Identifier	code		809362	0					
ANR	809442	ElseStatement	else		809362	0					
ANR	809443	IfStatement	"if ( ( code = pfont -> data . get_outline ( pfont , glyph_index , & outline ) ) < 0 )"		809362	0					
ANR	809444	Condition	"( code = pfont -> data . get_outline ( pfont , glyph_index , & outline ) ) < 0"	1029:15:41337:41402	809362	0	True				
ANR	809445	RelationalExpression	"( code = pfont -> data . get_outline ( pfont , glyph_index , & outline ) ) < 0"		809362	0		<			
ANR	809446	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , glyph_index , & outline )"		809362	0		=			
ANR	809447	Identifier	code		809362	0					
ANR	809448	CallExpression	"pfont -> data . get_outline ( pfont , glyph_index , & outline )"		809362	1					
ANR	809449	Callee	pfont -> data . get_outline		809362	0					
ANR	809450	MemberAccess	pfont -> data . get_outline		809362	0					
ANR	809451	PtrMemberAccess	pfont -> data		809362	0					
ANR	809452	Identifier	pfont		809362	0					
ANR	809453	Identifier	data		809362	1					
ANR	809454	Identifier	get_outline		809362	1					
ANR	809455	ArgumentList	pfont		809362	1					
ANR	809456	Argument	pfont		809362	0					
ANR	809457	Identifier	pfont		809362	0					
ANR	809458	Argument	glyph_index		809362	1					
ANR	809459	Identifier	glyph_index		809362	0					
ANR	809460	Argument	& outline		809362	2					
ANR	809461	UnaryOperationExpression	& outline		809362	0					
ANR	809462	UnaryOperator	&		809362	0					
ANR	809463	Identifier	outline		809362	1					
ANR	809464	PrimaryExpression	0		809362	1					
ANR	809465	ReturnStatement	return code ;	1030:8:41413:41424	809362	1	True				
ANR	809466	Identifier	code		809362	0					
ANR	809467	ElseStatement	else		809362	0					
ANR	809468	CompoundStatement		18:9:659:659	809362	0					
ANR	809469	ExpressionStatement	"gs_glyph_data_free ( & outline , ""gs_type42_glyph_info"" )"	1032:8:41471:41523	809362	0	True				
ANR	809470	CallExpression	"gs_glyph_data_free ( & outline , ""gs_type42_glyph_info"" )"		809362	0					
ANR	809471	Callee	gs_glyph_data_free		809362	0					
ANR	809472	Identifier	gs_glyph_data_free		809362	0					
ANR	809473	ArgumentList	& outline		809362	1					
ANR	809474	Argument	& outline		809362	0					
ANR	809475	UnaryOperationExpression	& outline		809362	0					
ANR	809476	UnaryOperator	&		809362	0					
ANR	809477	Identifier	outline		809362	1					
ANR	809478	Argument	"""gs_type42_glyph_info"""		809362	1					
ANR	809479	PrimaryExpression	"""gs_type42_glyph_info"""		809362	0					
ANR	809480	ExpressionStatement	info -> members = 0	1033:8:41533:41550	809362	1	True				
ANR	809481	AssignmentExpression	info -> members = 0		809362	0		=			
ANR	809482	PtrMemberAccess	info -> members		809362	0					
ANR	809483	Identifier	info		809362	0					
ANR	809484	Identifier	members		809362	1					
ANR	809485	PrimaryExpression	0		809362	1					
ANR	809486	IfStatement	if ( members & GLYPH_INFO_WIDTHS )		809362	9					
ANR	809487	Condition	members & GLYPH_INFO_WIDTHS	1035:8:41566:41592	809362	0	True				
ANR	809488	BitAndExpression	members & GLYPH_INFO_WIDTHS		809362	0		&			
ANR	809489	Identifier	members		809362	0					
ANR	809490	Identifier	GLYPH_INFO_WIDTHS		809362	1					
ANR	809491	CompoundStatement		23:8:803:808	809362	1					
ANR	809492	IdentifierDeclStatement	int i ;	1036:8:41605:41610	809362	0	True				
ANR	809493	IdentifierDecl	i		809362	0					
ANR	809494	IdentifierDeclType	int		809362	0					
ANR	809495	Identifier	i		809362	1					
ANR	809496	ForStatement	for ( i = 0 ; i < 2 ; ++ i )		809362	1					
ANR	809497	ForInit	i = 0 ;	1038:13:41626:41631	809362	0	True				
ANR	809498	AssignmentExpression	i = 0		809362	0		=			
ANR	809499	Identifier	i		809362	0					
ANR	809500	PrimaryExpression	0		809362	1					
ANR	809501	Condition	i < 2	1038:20:41633:41637	809362	1	True				
ANR	809502	RelationalExpression	i < 2		809362	0		<			
ANR	809503	Identifier	i		809362	0					
ANR	809504	PrimaryExpression	2		809362	1					
ANR	809505	UnaryExpression	++ i	1038:27:41640:41642	809362	2	True				
ANR	809506	IncDec	++		809362	0					
ANR	809507	Identifier	i		809362	1					
ANR	809508	IfStatement	if ( members & ( GLYPH_INFO_WIDTH0 << i ) )		809362	3					
ANR	809509	Condition	members & ( GLYPH_INFO_WIDTH0 << i )	1039:16:41661:41694	809362	0	True				
ANR	809510	BitAndExpression	members & ( GLYPH_INFO_WIDTH0 << i )		809362	0		&			
ANR	809511	Identifier	members		809362	0					
ANR	809512	ShiftExpression	GLYPH_INFO_WIDTH0 << i		809362	1		<<			
ANR	809513	Identifier	GLYPH_INFO_WIDTH0		809362	0					
ANR	809514	Identifier	i		809362	1					
ANR	809515	CompoundStatement		27:16:913:925	809362	1					
ANR	809516	IdentifierDeclStatement	float sbw [ 4 ] ;	1040:16:41715:41727	809362	0	True				
ANR	809517	IdentifierDecl	sbw [ 4 ]		809362	0					
ANR	809518	IdentifierDeclType	float [ 4 ]		809362	0					
ANR	809519	Identifier	sbw		809362	1					
ANR	809520	PrimaryExpression	4		809362	2					
ANR	809521	ExpressionStatement	"code = pfont -> data . get_metrics ( pfont , glyph_index , i , sbw )"	1042:16:41746:41804	809362	1	True				
ANR	809522	AssignmentExpression	"code = pfont -> data . get_metrics ( pfont , glyph_index , i , sbw )"		809362	0		=			
ANR	809523	Identifier	code		809362	0					
ANR	809524	CallExpression	"pfont -> data . get_metrics ( pfont , glyph_index , i , sbw )"		809362	1					
ANR	809525	Callee	pfont -> data . get_metrics		809362	0					
ANR	809526	MemberAccess	pfont -> data . get_metrics		809362	0					
ANR	809527	PtrMemberAccess	pfont -> data		809362	0					
ANR	809528	Identifier	pfont		809362	0					
ANR	809529	Identifier	data		809362	1					
ANR	809530	Identifier	get_metrics		809362	1					
ANR	809531	ArgumentList	pfont		809362	1					
ANR	809532	Argument	pfont		809362	0					
ANR	809533	Identifier	pfont		809362	0					
ANR	809534	Argument	glyph_index		809362	1					
ANR	809535	Identifier	glyph_index		809362	0					
ANR	809536	Argument	i		809362	2					
ANR	809537	Identifier	i		809362	0					
ANR	809538	Argument	sbw		809362	3					
ANR	809539	Identifier	sbw		809362	0					
ANR	809540	IfStatement	if ( code < 0 )		809362	2					
ANR	809541	Condition	code < 0	1043:20:41826:41833	809362	0	True				
ANR	809542	RelationalExpression	code < 0		809362	0		<			
ANR	809543	Identifier	code		809362	0					
ANR	809544	PrimaryExpression	0		809362	1					
ANR	809545	CompoundStatement		30:30:1034:1034	809362	1					
ANR	809546	ExpressionStatement	code = 0	1044:20:41858:41866	809362	0	True				
ANR	809547	AssignmentExpression	code = 0		809362	0		=			
ANR	809548	Identifier	code		809362	0					
ANR	809549	PrimaryExpression	0		809362	1					
ANR	809550	ContinueStatement	continue ;	1045:20:41888:41896	809362	1	True				
ANR	809551	IfStatement	if ( pmat )		809362	3					
ANR	809552	Condition	pmat	1047:20:41936:41939	809362	0	True				
ANR	809553	Identifier	pmat		809362	0					
ANR	809554	CompoundStatement		34:26:1140:1140	809362	1					
ANR	809555	ExpressionStatement	"code = gs_point_transform ( sbw [ 2 ] , sbw [ 3 ] , pmat , & info -> width [ i ] )"	1048:20:41964:42074	809362	0	True				
ANR	809556	AssignmentExpression	"code = gs_point_transform ( sbw [ 2 ] , sbw [ 3 ] , pmat , & info -> width [ i ] )"		809362	0		=			
ANR	809557	Identifier	code		809362	0					
ANR	809558	CallExpression	"gs_point_transform ( sbw [ 2 ] , sbw [ 3 ] , pmat , & info -> width [ i ] )"		809362	1					
ANR	809559	Callee	gs_point_transform		809362	0					
ANR	809560	Identifier	gs_point_transform		809362	0					
ANR	809561	ArgumentList	sbw [ 2 ]		809362	1					
ANR	809562	Argument	sbw [ 2 ]		809362	0					
ANR	809563	ArrayIndexing	sbw [ 2 ]		809362	0					
ANR	809564	Identifier	sbw		809362	0					
ANR	809565	PrimaryExpression	2		809362	1					
ANR	809566	Argument	sbw [ 3 ]		809362	1					
ANR	809567	ArrayIndexing	sbw [ 3 ]		809362	0					
ANR	809568	Identifier	sbw		809362	0					
ANR	809569	PrimaryExpression	3		809362	1					
ANR	809570	Argument	pmat		809362	2					
ANR	809571	Identifier	pmat		809362	0					
ANR	809572	Argument	& info -> width [ i ]		809362	3					
ANR	809573	UnaryOperationExpression	& info -> width [ i ]		809362	0					
ANR	809574	UnaryOperator	&		809362	0					
ANR	809575	ArrayIndexing	info -> width [ i ]		809362	1					
ANR	809576	PtrMemberAccess	info -> width		809362	0					
ANR	809577	Identifier	info		809362	0					
ANR	809578	Identifier	width		809362	1					
ANR	809579	Identifier	i		809362	1					
ANR	809580	IfStatement	if ( code < 0 )		809362	1					
ANR	809581	Condition	code < 0	1050:24:42100:42107	809362	0	True				
ANR	809582	RelationalExpression	code < 0		809362	0		<			
ANR	809583	Identifier	code		809362	0					
ANR	809584	PrimaryExpression	0		809362	1					
ANR	809585	ReturnStatement	return code ;	1051:24:42134:42145	809362	1	True				
ANR	809586	Identifier	code		809362	0					
ANR	809587	ExpressionStatement	"code = gs_point_transform ( sbw [ 0 ] , sbw [ 1 ] , pmat , & info -> v )"	1052:20:42167:42270	809362	2	True				
ANR	809588	AssignmentExpression	"code = gs_point_transform ( sbw [ 0 ] , sbw [ 1 ] , pmat , & info -> v )"		809362	0		=			
ANR	809589	Identifier	code		809362	0					
ANR	809590	CallExpression	"gs_point_transform ( sbw [ 0 ] , sbw [ 1 ] , pmat , & info -> v )"		809362	1					
ANR	809591	Callee	gs_point_transform		809362	0					
ANR	809592	Identifier	gs_point_transform		809362	0					
ANR	809593	ArgumentList	sbw [ 0 ]		809362	1					
ANR	809594	Argument	sbw [ 0 ]		809362	0					
ANR	809595	ArrayIndexing	sbw [ 0 ]		809362	0					
ANR	809596	Identifier	sbw		809362	0					
ANR	809597	PrimaryExpression	0		809362	1					
ANR	809598	Argument	sbw [ 1 ]		809362	1					
ANR	809599	ArrayIndexing	sbw [ 1 ]		809362	0					
ANR	809600	Identifier	sbw		809362	0					
ANR	809601	PrimaryExpression	1		809362	1					
ANR	809602	Argument	pmat		809362	2					
ANR	809603	Identifier	pmat		809362	0					
ANR	809604	Argument	& info -> v		809362	3					
ANR	809605	UnaryOperationExpression	& info -> v		809362	0					
ANR	809606	UnaryOperator	&		809362	0					
ANR	809607	PtrMemberAccess	info -> v		809362	1					
ANR	809608	Identifier	info		809362	0					
ANR	809609	Identifier	v		809362	1					
ANR	809610	ElseStatement	else		809362	0					
ANR	809611	CompoundStatement		41:23:1493:1493	809362	0					
ANR	809612	ExpressionStatement	"info -> width [ i ] . x = sbw [ 2 ] , info -> width [ i ] . y = sbw [ 3 ]"	1055:20:42317:42369	809362	0	True				
ANR	809613	Expression	"info -> width [ i ] . x = sbw [ 2 ] , info -> width [ i ] . y = sbw [ 3 ]"		809362	0					
ANR	809614	AssignmentExpression	info -> width [ i ] . x = sbw [ 2 ]		809362	0		=			
ANR	809615	MemberAccess	info -> width [ i ] . x		809362	0					
ANR	809616	ArrayIndexing	info -> width [ i ]		809362	0					
ANR	809617	PtrMemberAccess	info -> width		809362	0					
ANR	809618	Identifier	info		809362	0					
ANR	809619	Identifier	width		809362	1					
ANR	809620	Identifier	i		809362	1					
ANR	809621	Identifier	x		809362	1					
ANR	809622	ArrayIndexing	sbw [ 2 ]		809362	1					
ANR	809623	Identifier	sbw		809362	0					
ANR	809624	PrimaryExpression	2		809362	1					
ANR	809625	AssignmentExpression	info -> width [ i ] . y = sbw [ 3 ]		809362	1		=			
ANR	809626	MemberAccess	info -> width [ i ] . y		809362	0					
ANR	809627	ArrayIndexing	info -> width [ i ]		809362	0					
ANR	809628	PtrMemberAccess	info -> width		809362	0					
ANR	809629	Identifier	info		809362	0					
ANR	809630	Identifier	width		809362	1					
ANR	809631	Identifier	i		809362	1					
ANR	809632	Identifier	y		809362	1					
ANR	809633	ArrayIndexing	sbw [ 3 ]		809362	1					
ANR	809634	Identifier	sbw		809362	0					
ANR	809635	PrimaryExpression	3		809362	1					
ANR	809636	ExpressionStatement	"info -> v . x = sbw [ 0 ] , info -> v . y = sbw [ 1 ]"	1056:20:42391:42429	809362	1	True				
ANR	809637	Expression	"info -> v . x = sbw [ 0 ] , info -> v . y = sbw [ 1 ]"		809362	0					
ANR	809638	AssignmentExpression	info -> v . x = sbw [ 0 ]		809362	0		=			
ANR	809639	MemberAccess	info -> v . x		809362	0					
ANR	809640	PtrMemberAccess	info -> v		809362	0					
ANR	809641	Identifier	info		809362	0					
ANR	809642	Identifier	v		809362	1					
ANR	809643	Identifier	x		809362	1					
ANR	809644	ArrayIndexing	sbw [ 0 ]		809362	1					
ANR	809645	Identifier	sbw		809362	0					
ANR	809646	PrimaryExpression	0		809362	1					
ANR	809647	AssignmentExpression	info -> v . y = sbw [ 1 ]		809362	1		=			
ANR	809648	MemberAccess	info -> v . y		809362	0					
ANR	809649	PtrMemberAccess	info -> v		809362	0					
ANR	809650	Identifier	info		809362	0					
ANR	809651	Identifier	v		809362	1					
ANR	809652	Identifier	y		809362	1					
ANR	809653	ArrayIndexing	sbw [ 1 ]		809362	1					
ANR	809654	Identifier	sbw		809362	0					
ANR	809655	PrimaryExpression	1		809362	1					
ANR	809656	ExpressionStatement	info -> members |= ( GLYPH_INFO_VVECTOR0 << i )	1058:16:42465:42508	809362	4	True				
ANR	809657	AssignmentExpression	info -> members |= ( GLYPH_INFO_VVECTOR0 << i )		809362	0		|=			
ANR	809658	PtrMemberAccess	info -> members		809362	0					
ANR	809659	Identifier	info		809362	0					
ANR	809660	Identifier	members		809362	1					
ANR	809661	ShiftExpression	GLYPH_INFO_VVECTOR0 << i		809362	1		<<			
ANR	809662	Identifier	GLYPH_INFO_VVECTOR0		809362	0					
ANR	809663	Identifier	i		809362	1					
ANR	809664	ExpressionStatement	info -> members |= ( GLYPH_INFO_WIDTH << i )	1059:16:42526:42566	809362	5	True				
ANR	809665	AssignmentExpression	info -> members |= ( GLYPH_INFO_WIDTH << i )		809362	0		|=			
ANR	809666	PtrMemberAccess	info -> members		809362	0					
ANR	809667	Identifier	info		809362	0					
ANR	809668	Identifier	members		809362	1					
ANR	809669	ShiftExpression	GLYPH_INFO_WIDTH << i		809362	1		<<			
ANR	809670	Identifier	GLYPH_INFO_WIDTH		809362	0					
ANR	809671	Identifier	i		809362	1					
ANR	809672	IfStatement	if ( members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES ) )		809362	10					
ANR	809673	Condition	members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )	1063:8:42597:42649	809362	0	True				
ANR	809674	BitAndExpression	members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )		809362	0		&			
ANR	809675	Identifier	members		809362	0					
ANR	809676	InclusiveOrExpression	GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES		809362	1		|			
ANR	809677	Identifier	GLYPH_INFO_NUM_PIECES		809362	0					
ANR	809678	Identifier	GLYPH_INFO_PIECES		809362	1					
ANR	809679	CompoundStatement		53:8:1961:2025	809362	1					
ANR	809680	IdentifierDeclStatement	gs_glyph * pieces = ( members & GLYPH_INFO_PIECES ? info -> pieces : ( gs_glyph * ) 0 ) ;	1064:8:42662:42753	809362	0	True				
ANR	809681	IdentifierDecl	* pieces = ( members & GLYPH_INFO_PIECES ? info -> pieces : ( gs_glyph * ) 0 )		809362	0					
ANR	809682	IdentifierDeclType	gs_glyph *		809362	0					
ANR	809683	Identifier	pieces		809362	1					
ANR	809684	AssignmentExpression	* pieces = ( members & GLYPH_INFO_PIECES ? info -> pieces : ( gs_glyph * ) 0 )		809362	2		=			
ANR	809685	Identifier	pieces		809362	0					
ANR	809686	ConditionalExpression	members & GLYPH_INFO_PIECES ? info -> pieces : ( gs_glyph * ) 0		809362	1					
ANR	809687	Condition	members & GLYPH_INFO_PIECES		809362	0					
ANR	809688	BitAndExpression	members & GLYPH_INFO_PIECES		809362	0		&			
ANR	809689	Identifier	members		809362	0					
ANR	809690	Identifier	GLYPH_INFO_PIECES		809362	1					
ANR	809691	PtrMemberAccess	info -> pieces		809362	1					
ANR	809692	Identifier	info		809362	0					
ANR	809693	Identifier	pieces		809362	1					
ANR	809694	CastExpression	( gs_glyph * ) 0		809362	2					
ANR	809695	CastTarget	gs_glyph *		809362	0					
ANR	809696	PrimaryExpression	0		809362	1					
ANR	809697	IdentifierDeclStatement	"int code = parse_pieces ( pfont , glyph , pieces , & info -> num_pieces ) ;"	1066:8:42763:42827	809362	1	True				
ANR	809698	IdentifierDecl	"code = parse_pieces ( pfont , glyph , pieces , & info -> num_pieces )"		809362	0					
ANR	809699	IdentifierDeclType	int		809362	0					
ANR	809700	Identifier	code		809362	1					
ANR	809701	AssignmentExpression	"code = parse_pieces ( pfont , glyph , pieces , & info -> num_pieces )"		809362	2		=			
ANR	809702	Identifier	code		809362	0					
ANR	809703	CallExpression	"parse_pieces ( pfont , glyph , pieces , & info -> num_pieces )"		809362	1					
ANR	809704	Callee	parse_pieces		809362	0					
ANR	809705	Identifier	parse_pieces		809362	0					
ANR	809706	ArgumentList	pfont		809362	1					
ANR	809707	Argument	pfont		809362	0					
ANR	809708	Identifier	pfont		809362	0					
ANR	809709	Argument	glyph		809362	1					
ANR	809710	Identifier	glyph		809362	0					
ANR	809711	Argument	pieces		809362	2					
ANR	809712	Identifier	pieces		809362	0					
ANR	809713	Argument	& info -> num_pieces		809362	3					
ANR	809714	UnaryOperationExpression	& info -> num_pieces		809362	0					
ANR	809715	UnaryOperator	&		809362	0					
ANR	809716	PtrMemberAccess	info -> num_pieces		809362	1					
ANR	809717	Identifier	info		809362	0					
ANR	809718	Identifier	num_pieces		809362	1					
ANR	809719	IfStatement	if ( code < 0 )		809362	2					
ANR	809720	Condition	code < 0	1068:12:42842:42849	809362	0	True				
ANR	809721	RelationalExpression	code < 0		809362	0		<			
ANR	809722	Identifier	code		809362	0					
ANR	809723	PrimaryExpression	0		809362	1					
ANR	809724	ReturnStatement	return code ;	1069:12:42864:42875	809362	1	True				
ANR	809725	Identifier	code		809362	0					
ANR	809726	ExpressionStatement	info -> members |= members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )	1070:8:42885:42955	809362	3	True				
ANR	809727	AssignmentExpression	info -> members |= members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )		809362	0		|=			
ANR	809728	PtrMemberAccess	info -> members		809362	0					
ANR	809729	Identifier	info		809362	0					
ANR	809730	Identifier	members		809362	1					
ANR	809731	BitAndExpression	members & ( GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES )		809362	1		&			
ANR	809732	Identifier	members		809362	0					
ANR	809733	InclusiveOrExpression	GLYPH_INFO_NUM_PIECES | GLYPH_INFO_PIECES		809362	1		|			
ANR	809734	Identifier	GLYPH_INFO_NUM_PIECES		809362	0					
ANR	809735	Identifier	GLYPH_INFO_PIECES		809362	1					
ANR	809736	ReturnStatement	return code ;	1072:4:42967:42978	809362	11	True				
ANR	809737	Identifier	code		809362	0					
ANR	809738	ReturnType	int		809362	1					
ANR	809739	Identifier	gs_type42_glyph_info_by_gid		809362	2					
ANR	809740	ParameterList	"gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info , uint glyph_index"		809362	3					
ANR	809741	Parameter	gs_font * font	1012:28:40672:40684	809362	0	True				
ANR	809742	ParameterType	gs_font *		809362	0					
ANR	809743	Identifier	font		809362	1					
ANR	809744	Parameter	gs_glyph glyph	1012:43:40687:40700	809362	1	True				
ANR	809745	ParameterType	gs_glyph		809362	0					
ANR	809746	Identifier	glyph		809362	1					
ANR	809747	Parameter	const gs_matrix * pmat	1012:59:40703:40723	809362	2	True				
ANR	809748	ParameterType	const gs_matrix *		809362	0					
ANR	809749	Identifier	pmat		809362	1					
ANR	809750	Parameter	int members	1013:21:40747:40757	809362	3	True				
ANR	809751	ParameterType	int		809362	0					
ANR	809752	Identifier	members		809362	1					
ANR	809753	Parameter	gs_glyph_info_t * info	1013:34:40760:40780	809362	4	True				
ANR	809754	ParameterType	gs_glyph_info_t *		809362	0					
ANR	809755	Identifier	info		809362	1					
ANR	809756	Parameter	uint glyph_index	1013:57:40783:40798	809362	5	True				
ANR	809757	ParameterType	uint		809362	0					
ANR	809758	Identifier	glyph_index		809362	1					
ANR	809759	CFGEntryNode	ENTRY		809362		True				
ANR	809760	CFGExitNode	EXIT		809362		True				
ANR	809761	Symbol	info -> width		809362						
ANR	809762	Symbol	* * info		809362						
ANR	809763	Symbol	code		809362						
ANR	809764	Symbol	pmat		809362						
ANR	809765	Symbol	glyph_index		809362						
ANR	809766	Symbol	pfont -> memory		809362						
ANR	809767	Symbol	GLYPH_INFO_WIDTH		809362						
ANR	809768	Symbol	default_members		809362						
ANR	809769	Symbol	info -> v . x		809362						
ANR	809770	Symbol	sbw		809362						
ANR	809771	Symbol	& info -> num_pieces		809362						
ANR	809772	Symbol	& info -> v		809362						
ANR	809773	Symbol	pieces		809362						
ANR	809774	Symbol	info -> members		809362						
ANR	809775	Symbol	outline		809362						
ANR	809776	Symbol	* info -> width		809362						
ANR	809777	Symbol	GLYPH_INFO_WIDTH0		809362						
ANR	809778	Symbol	gs_point_transform		809362						
ANR	809779	Symbol	& outline		809362						
ANR	809780	Symbol	info -> width [ i ] . x		809362						
ANR	809781	Symbol	members		809362						
ANR	809782	Symbol	info -> width [ i ] . y		809362						
ANR	809783	Symbol	info		809362						
ANR	809784	Symbol	gs_default_glyph_info		809362						
ANR	809785	Symbol	GLYPH_INFO_OUTLINE_WIDTHS		809362						
ANR	809786	Symbol	pfont		809362						
ANR	809787	Symbol	outline . memory		809362						
ANR	809788	Symbol	GLYPH_INFO_VVECTOR1		809362						
ANR	809789	Symbol	GLYPH_INFO_PIECES		809362						
ANR	809790	Symbol	pfont -> data		809362						
ANR	809791	Symbol	i		809362						
ANR	809792	Symbol	info -> v		809362						
ANR	809793	Symbol	GLYPH_INFO_VVECTOR0		809362						
ANR	809794	Symbol	glyph		809362						
ANR	809795	Symbol	* pfont		809362						
ANR	809796	Symbol	* sbw		809362						
ANR	809797	Symbol	pfont -> data . get_metrics		809362						
ANR	809798	Symbol	* i		809362						
ANR	809799	Symbol	info -> pieces		809362						
ANR	809800	Symbol	pfont -> data . get_outline		809362						
ANR	809801	Symbol	GLYPH_INFO_WIDTHS		809362						
ANR	809802	Symbol	info -> v . y		809362						
ANR	809803	Symbol	GLYPH_INFO_NUM_PIECES		809362						
ANR	809804	Symbol	* info		809362						
ANR	809805	Symbol	font		809362						
ANR	809806	Symbol	parse_pieces		809362						
ANR	809807	Function	gs_type42_glyph_info	1074:0:42982:43983							
ANR	809808	FunctionDef	"gs_type42_glyph_info (gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info)"		809807	0					
ANR	809809	CompoundStatement		1077:0:43118:43983	809807	0					
ANR	809810	Statement	gs_font_type42	1078:4:43124:43137	809807	0	True				
ANR	809811	Statement	*	1078:19:43139:43139	809807	1	True				
ANR	809812	Statement	const	1078:20:43140:43144	809807	2	True				
ANR	809813	ExpressionStatement	pfont = ( gs_font_type42 * ) font	1078:26:43146:43176	809807	3	True				
ANR	809814	AssignmentExpression	pfont = ( gs_font_type42 * ) font		809807	0		=			
ANR	809815	Identifier	pfont		809807	0					
ANR	809816	CastExpression	( gs_font_type42 * ) font		809807	1					
ANR	809817	CastTarget	gs_font_type42 *		809807	0					
ANR	809818	Identifier	font		809807	1					
ANR	809819	IdentifierDeclStatement	uint glyph_index ;	1079:4:43182:43198	809807	4	True				
ANR	809820	IdentifierDecl	glyph_index		809807	0					
ANR	809821	IdentifierDeclType	uint		809807	0					
ANR	809822	Identifier	glyph_index		809807	1					
ANR	809823	IfStatement	if ( glyph >= GS_MIN_GLYPH_INDEX )		809807	5					
ANR	809824	Condition	glyph >= GS_MIN_GLYPH_INDEX	1081:8:43209:43235	809807	0	True				
ANR	809825	RelationalExpression	glyph >= GS_MIN_GLYPH_INDEX		809807	0		>=			
ANR	809826	Identifier	glyph		809807	0					
ANR	809827	Identifier	GS_MIN_GLYPH_INDEX		809807	1					
ANR	809828	ExpressionStatement	glyph_index = glyph - GS_MIN_GLYPH_INDEX	1082:8:43246:43286	809807	1	True				
ANR	809829	AssignmentExpression	glyph_index = glyph - GS_MIN_GLYPH_INDEX		809807	0		=			
ANR	809830	Identifier	glyph_index		809807	0					
ANR	809831	AdditiveExpression	glyph - GS_MIN_GLYPH_INDEX		809807	1		-			
ANR	809832	Identifier	glyph		809807	0					
ANR	809833	Identifier	GS_MIN_GLYPH_INDEX		809807	1					
ANR	809834	ElseStatement	else		809807	0					
ANR	809835	CompoundStatement		7:9:178:178	809807	0					
ANR	809836	ExpressionStatement	"glyph_index = pfont -> data . get_glyph_index ( pfont , glyph )"	1084:8:43307:43362	809807	0	True				
ANR	809837	AssignmentExpression	"glyph_index = pfont -> data . get_glyph_index ( pfont , glyph )"		809807	0		=			
ANR	809838	Identifier	glyph_index		809807	0					
ANR	809839	CallExpression	"pfont -> data . get_glyph_index ( pfont , glyph )"		809807	1					
ANR	809840	Callee	pfont -> data . get_glyph_index		809807	0					
ANR	809841	MemberAccess	pfont -> data . get_glyph_index		809807	0					
ANR	809842	PtrMemberAccess	pfont -> data		809807	0					
ANR	809843	Identifier	pfont		809807	0					
ANR	809844	Identifier	data		809807	1					
ANR	809845	Identifier	get_glyph_index		809807	1					
ANR	809846	ArgumentList	pfont		809807	1					
ANR	809847	Argument	pfont		809807	0					
ANR	809848	Identifier	pfont		809807	0					
ANR	809849	Argument	glyph		809807	1					
ANR	809850	Identifier	glyph		809807	0					
ANR	809851	IfStatement	if ( glyph_index == GS_NO_GLYPH )		809807	1					
ANR	809852	Condition	glyph_index == GS_NO_GLYPH	1085:12:43376:43401	809807	0	True				
ANR	809853	EqualityExpression	glyph_index == GS_NO_GLYPH		809807	0		==			
ANR	809854	Identifier	glyph_index		809807	0					
ANR	809855	Identifier	GS_NO_GLYPH		809807	1					
ANR	809856	ExpressionStatement	return_error ( gs_error_undefined )	1086:12:43416:43448	809807	1	True				
ANR	809857	CallExpression	return_error ( gs_error_undefined )		809807	0					
ANR	809858	Callee	return_error		809807	0					
ANR	809859	Identifier	return_error		809807	0					
ANR	809860	ArgumentList	gs_error_undefined		809807	1					
ANR	809861	Argument	gs_error_undefined		809807	0					
ANR	809862	Identifier	gs_error_undefined		809807	0					
ANR	809863	IfStatement	if ( pfont -> data . gsub_size )		809807	2					
ANR	809864	Condition	pfont -> data . gsub_size	1087:12:43462:43482	809807	0	True				
ANR	809865	MemberAccess	pfont -> data . gsub_size		809807	0					
ANR	809866	PtrMemberAccess	pfont -> data		809807	0					
ANR	809867	Identifier	pfont		809807	0					
ANR	809868	Identifier	data		809807	1					
ANR	809869	Identifier	gsub_size		809807	1					
ANR	809870	CompoundStatement		12:12:380:455	809807	1					
ANR	809871	IdentifierDeclStatement	int WMode = ( ( members & ( GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1 ) ) ? 1 : 0 ) ;	1088:12:43499:43574	809807	0	True				
ANR	809872	IdentifierDecl	WMode = ( ( members & ( GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1 ) ) ? 1 : 0 )		809807	0					
ANR	809873	IdentifierDeclType	int		809807	0					
ANR	809874	Identifier	WMode		809807	1					
ANR	809875	AssignmentExpression	WMode = ( ( members & ( GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1 ) ) ? 1 : 0 )		809807	2		=			
ANR	809876	Identifier	WMode		809807	0					
ANR	809877	ConditionalExpression	( members & ( GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1 ) ) ? 1 : 0		809807	1					
ANR	809878	Condition	members & ( GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1 )		809807	0					
ANR	809879	BitAndExpression	members & ( GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1 )		809807	0		&			
ANR	809880	Identifier	members		809807	0					
ANR	809881	InclusiveOrExpression	GLYPH_INFO_WIDTH1 | GLYPH_INFO_VVECTOR1		809807	1		|			
ANR	809882	Identifier	GLYPH_INFO_WIDTH1		809807	0					
ANR	809883	Identifier	GLYPH_INFO_VVECTOR1		809807	1					
ANR	809884	PrimaryExpression	1		809807	1					
ANR	809885	PrimaryExpression	0		809807	2					
ANR	809886	IfStatement	if ( pfont -> data . substitute_glyph_index_vertical != NULL )		809807	1					
ANR	809887	Condition	pfont -> data . substitute_glyph_index_vertical != NULL	1090:16:43593:43643	809807	0	True				
ANR	809888	EqualityExpression	pfont -> data . substitute_glyph_index_vertical != NULL		809807	0		!=			
ANR	809889	MemberAccess	pfont -> data . substitute_glyph_index_vertical		809807	0					
ANR	809890	PtrMemberAccess	pfont -> data		809807	0					
ANR	809891	Identifier	pfont		809807	0					
ANR	809892	Identifier	data		809807	1					
ANR	809893	Identifier	substitute_glyph_index_vertical		809807	1					
ANR	809894	Identifier	NULL		809807	1					
ANR	809895	ExpressionStatement	"glyph_index = pfont -> data . substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"	1091:16:43662:43753	809807	1	True				
ANR	809896	AssignmentExpression	"glyph_index = pfont -> data . substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		809807	0		=			
ANR	809897	Identifier	glyph_index		809807	0					
ANR	809898	CallExpression	"pfont -> data . substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		809807	1					
ANR	809899	Callee	pfont -> data . substitute_glyph_index_vertical		809807	0					
ANR	809900	MemberAccess	pfont -> data . substitute_glyph_index_vertical		809807	0					
ANR	809901	PtrMemberAccess	pfont -> data		809807	0					
ANR	809902	Identifier	pfont		809807	0					
ANR	809903	Identifier	data		809807	1					
ANR	809904	Identifier	substitute_glyph_index_vertical		809807	1					
ANR	809905	ArgumentList	pfont		809807	1					
ANR	809906	Argument	pfont		809807	0					
ANR	809907	Identifier	pfont		809807	0					
ANR	809908	Argument	glyph_index		809807	1					
ANR	809909	Identifier	glyph_index		809807	0					
ANR	809910	Argument	WMode		809807	2					
ANR	809911	Identifier	WMode		809807	0					
ANR	809912	Argument	glyph		809807	3					
ANR	809913	Identifier	glyph		809807	0					
ANR	809914	ElseStatement	else		809807	0					
ANR	809915	ExpressionStatement	"glyph_index = gs_type42_substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"	1093:16:43788:43877	809807	0	True				
ANR	809916	AssignmentExpression	"glyph_index = gs_type42_substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		809807	0		=			
ANR	809917	Identifier	glyph_index		809807	0					
ANR	809918	CallExpression	"gs_type42_substitute_glyph_index_vertical ( pfont , glyph_index , WMode , glyph )"		809807	1					
ANR	809919	Callee	gs_type42_substitute_glyph_index_vertical		809807	0					
ANR	809920	Identifier	gs_type42_substitute_glyph_index_vertical		809807	0					
ANR	809921	ArgumentList	pfont		809807	1					
ANR	809922	Argument	pfont		809807	0					
ANR	809923	Identifier	pfont		809807	0					
ANR	809924	Argument	glyph_index		809807	1					
ANR	809925	Identifier	glyph_index		809807	0					
ANR	809926	Argument	WMode		809807	2					
ANR	809927	Identifier	WMode		809807	0					
ANR	809928	Argument	glyph		809807	3					
ANR	809929	Identifier	glyph		809807	0					
ANR	809930	ReturnStatement	"return gs_type42_glyph_info_by_gid ( font , glyph , pmat , members , info , glyph_index ) ;"	1096:4:43899:43980	809807	6	True				
ANR	809931	CallExpression	"gs_type42_glyph_info_by_gid ( font , glyph , pmat , members , info , glyph_index )"		809807	0					
ANR	809932	Callee	gs_type42_glyph_info_by_gid		809807	0					
ANR	809933	Identifier	gs_type42_glyph_info_by_gid		809807	0					
ANR	809934	ArgumentList	font		809807	1					
ANR	809935	Argument	font		809807	0					
ANR	809936	Identifier	font		809807	0					
ANR	809937	Argument	glyph		809807	1					
ANR	809938	Identifier	glyph		809807	0					
ANR	809939	Argument	pmat		809807	2					
ANR	809940	Identifier	pmat		809807	0					
ANR	809941	Argument	members		809807	3					
ANR	809942	Identifier	members		809807	0					
ANR	809943	Argument	info		809807	4					
ANR	809944	Identifier	info		809807	0					
ANR	809945	Argument	glyph_index		809807	5					
ANR	809946	Identifier	glyph_index		809807	0					
ANR	809947	ReturnType	int		809807	1					
ANR	809948	Identifier	gs_type42_glyph_info		809807	2					
ANR	809949	ParameterList	"gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info"		809807	3					
ANR	809950	Parameter	gs_font * font	1075:21:43007:43019	809807	0	True				
ANR	809951	ParameterType	gs_font *		809807	0					
ANR	809952	Identifier	font		809807	1					
ANR	809953	Parameter	gs_glyph glyph	1075:36:43022:43035	809807	1	True				
ANR	809954	ParameterType	gs_glyph		809807	0					
ANR	809955	Identifier	glyph		809807	1					
ANR	809956	Parameter	const gs_matrix * pmat	1075:52:43038:43058	809807	2	True				
ANR	809957	ParameterType	const gs_matrix *		809807	0					
ANR	809958	Identifier	pmat		809807	1					
ANR	809959	Parameter	int members	1076:21:43082:43092	809807	3	True				
ANR	809960	ParameterType	int		809807	0					
ANR	809961	Identifier	members		809807	1					
ANR	809962	Parameter	gs_glyph_info_t * info	1076:34:43095:43115	809807	4	True				
ANR	809963	ParameterType	gs_glyph_info_t *		809807	0					
ANR	809964	Identifier	info		809807	1					
ANR	809965	CFGEntryNode	ENTRY		809807		True				
ANR	809966	CFGExitNode	EXIT		809807		True				
ANR	809967	Symbol	NULL		809807						
ANR	809968	Symbol	pmat		809807						
ANR	809969	Symbol	glyph_index		809807						
ANR	809970	Symbol	pfont		809807						
ANR	809971	Symbol	gs_type42_substitute_glyph_index_vertical		809807						
ANR	809972	Symbol	gs_error_undefined		809807						
ANR	809973	Symbol	pfont -> data		809807						
ANR	809974	Symbol	GLYPH_INFO_VVECTOR1		809807						
ANR	809975	Symbol	pfont -> data . substitute_glyph_index_vertical		809807						
ANR	809976	Symbol	pfont -> data . get_glyph_index		809807						
ANR	809977	Symbol	glyph		809807						
ANR	809978	Symbol	* pfont		809807						
ANR	809979	Symbol	GS_NO_GLYPH		809807						
ANR	809980	Symbol	WMode		809807						
ANR	809981	Symbol	pfont -> data . gsub_size		809807						
ANR	809982	Symbol	GLYPH_INFO_WIDTH1		809807						
ANR	809983	Symbol	GS_MIN_GLYPH_INDEX		809807						
ANR	809984	Symbol	members		809807						
ANR	809985	Symbol	gs_type42_glyph_info_by_gid		809807						
ANR	809986	Symbol	font		809807						
ANR	809987	Symbol	info		809807						
ANR	809988	Function	gs_type42_enumerate_glyph	1099:0:43985:44762							
ANR	809989	FunctionDef	"gs_type42_enumerate_glyph (gs_font * font , int * pindex , gs_glyph_space_t glyph_space , gs_glyph * pglyph)"		809988	0					
ANR	809990	CompoundStatement		1102:0:44117:44762	809988	0					
ANR	809991	Statement	gs_font_type42	1103:4:44123:44136	809988	0	True				
ANR	809992	Statement	*	1103:19:44138:44138	809988	1	True				
ANR	809993	Statement	const	1103:20:44139:44143	809988	2	True				
ANR	809994	ExpressionStatement	pfont = ( gs_font_type42 * ) font	1103:26:44145:44175	809988	3	True				
ANR	809995	AssignmentExpression	pfont = ( gs_font_type42 * ) font		809988	0		=			
ANR	809996	Identifier	pfont		809988	0					
ANR	809997	CastExpression	( gs_font_type42 * ) font		809988	1					
ANR	809998	CastTarget	gs_font_type42 *		809988	0					
ANR	809999	Identifier	font		809988	1					
ANR	810000	WhileStatement	while ( ++ * pindex <= pfont -> data . numGlyphs )		809988	4					
ANR	810001	Condition	++ * pindex <= pfont -> data . numGlyphs	1105:11:44189:44222	809988	0	True				
ANR	810002	RelationalExpression	++ * pindex <= pfont -> data . numGlyphs		809988	0		<=			
ANR	810003	UnaryExpression	++ * pindex		809988	0					
ANR	810004	IncDec	++		809988	0					
ANR	810005	UnaryOperationExpression	* pindex		809988	1					
ANR	810006	UnaryOperator	*		809988	0					
ANR	810007	Identifier	pindex		809988	1					
ANR	810008	MemberAccess	pfont -> data . numGlyphs		809988	1					
ANR	810009	PtrMemberAccess	pfont -> data		809988	0					
ANR	810010	Identifier	pfont		809988	0					
ANR	810011	Identifier	data		809988	1					
ANR	810012	Identifier	numGlyphs		809988	1					
ANR	810013	CompoundStatement		7:8:190:198	809988	1					
ANR	810014	IdentifierDeclStatement	gs_glyph_data_t outline ;	1106:8:44235:44258	809988	0	True				
ANR	810015	IdentifierDecl	outline		809988	0					
ANR	810016	IdentifierDeclType	gs_glyph_data_t		809988	0					
ANR	810017	Identifier	outline		809988	1					
ANR	810018	IdentifierDeclStatement	uint glyph_index = * pindex - 1 ;	1107:8:44268:44298	809988	1	True				
ANR	810019	IdentifierDecl	glyph_index = * pindex - 1		809988	0					
ANR	810020	IdentifierDeclType	uint		809988	0					
ANR	810021	Identifier	glyph_index		809988	1					
ANR	810022	AssignmentExpression	glyph_index = * pindex - 1		809988	2		=			
ANR	810023	Identifier	glyph_index		809988	0					
ANR	810024	AdditiveExpression	* pindex - 1		809988	1		-			
ANR	810025	UnaryOperationExpression	* pindex		809988	0					
ANR	810026	UnaryOperator	*		809988	0					
ANR	810027	Identifier	pindex		809988	1					
ANR	810028	PrimaryExpression	1		809988	1					
ANR	810029	IdentifierDeclStatement	int code ;	1108:8:44308:44316	809988	2	True				
ANR	810030	IdentifierDecl	code		809988	0					
ANR	810031	IdentifierDeclType	int		809988	0					
ANR	810032	Identifier	code		809988	1					
ANR	810033	ExpressionStatement	outline . memory = pfont -> memory	1110:8:44327:44357	809988	3	True				
ANR	810034	AssignmentExpression	outline . memory = pfont -> memory		809988	0		=			
ANR	810035	MemberAccess	outline . memory		809988	0					
ANR	810036	Identifier	outline		809988	0					
ANR	810037	Identifier	memory		809988	1					
ANR	810038	PtrMemberAccess	pfont -> memory		809988	1					
ANR	810039	Identifier	pfont		809988	0					
ANR	810040	Identifier	memory		809988	1					
ANR	810041	ExpressionStatement	"code = pfont -> data . get_outline ( pfont , glyph_index , & outline )"	1111:8:44367:44427	809988	4	True				
ANR	810042	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , glyph_index , & outline )"		809988	0		=			
ANR	810043	Identifier	code		809988	0					
ANR	810044	CallExpression	"pfont -> data . get_outline ( pfont , glyph_index , & outline )"		809988	1					
ANR	810045	Callee	pfont -> data . get_outline		809988	0					
ANR	810046	MemberAccess	pfont -> data . get_outline		809988	0					
ANR	810047	PtrMemberAccess	pfont -> data		809988	0					
ANR	810048	Identifier	pfont		809988	0					
ANR	810049	Identifier	data		809988	1					
ANR	810050	Identifier	get_outline		809988	1					
ANR	810051	ArgumentList	pfont		809988	1					
ANR	810052	Argument	pfont		809988	0					
ANR	810053	Identifier	pfont		809988	0					
ANR	810054	Argument	glyph_index		809988	1					
ANR	810055	Identifier	glyph_index		809988	0					
ANR	810056	Argument	& outline		809988	2					
ANR	810057	UnaryOperationExpression	& outline		809988	0					
ANR	810058	UnaryOperator	&		809988	0					
ANR	810059	Identifier	outline		809988	1					
ANR	810060	IfStatement	if ( code < 0 )		809988	5					
ANR	810061	Condition	code < 0	1112:12:44441:44448	809988	0	True				
ANR	810062	RelationalExpression	code < 0		809988	0		<			
ANR	810063	Identifier	code		809988	0					
ANR	810064	PrimaryExpression	0		809988	1					
ANR	810065	ReturnStatement	return code ;	1113:12:44463:44474	809988	1	True				
ANR	810066	Identifier	code		809988	0					
ANR	810067	IfStatement	if ( outline . bits . data == 0 )		809988	6					
ANR	810068	Condition	outline . bits . data == 0	1114:12:44488:44509	809988	0	True				
ANR	810069	EqualityExpression	outline . bits . data == 0		809988	0		==			
ANR	810070	MemberAccess	outline . bits . data		809988	0					
ANR	810071	MemberAccess	outline . bits		809988	0					
ANR	810072	Identifier	outline		809988	0					
ANR	810073	Identifier	bits		809988	1					
ANR	810074	Identifier	data		809988	1					
ANR	810075	PrimaryExpression	0		809988	1					
ANR	810076	ContinueStatement	continue ;	1115:12:44524:44532	809988	1	True				
ANR	810077	ExpressionStatement	* pglyph = glyph_index + GS_MIN_GLYPH_INDEX	1116:8:44573:44615	809988	7	True				
ANR	810078	AssignmentExpression	* pglyph = glyph_index + GS_MIN_GLYPH_INDEX		809988	0		=			
ANR	810079	UnaryOperationExpression	* pglyph		809988	0					
ANR	810080	UnaryOperator	*		809988	0					
ANR	810081	Identifier	pglyph		809988	1					
ANR	810082	AdditiveExpression	glyph_index + GS_MIN_GLYPH_INDEX		809988	1		+			
ANR	810083	Identifier	glyph_index		809988	0					
ANR	810084	Identifier	GS_MIN_GLYPH_INDEX		809988	1					
ANR	810085	ExpressionStatement	"gs_glyph_data_free ( & outline , ""gs_type42_enumerate_glyph"" )"	1117:8:44625:44682	809988	8	True				
ANR	810086	CallExpression	"gs_glyph_data_free ( & outline , ""gs_type42_enumerate_glyph"" )"		809988	0					
ANR	810087	Callee	gs_glyph_data_free		809988	0					
ANR	810088	Identifier	gs_glyph_data_free		809988	0					
ANR	810089	ArgumentList	& outline		809988	1					
ANR	810090	Argument	& outline		809988	0					
ANR	810091	UnaryOperationExpression	& outline		809988	0					
ANR	810092	UnaryOperator	&		809988	0					
ANR	810093	Identifier	outline		809988	1					
ANR	810094	Argument	"""gs_type42_enumerate_glyph"""		809988	1					
ANR	810095	PrimaryExpression	"""gs_type42_enumerate_glyph"""		809988	0					
ANR	810096	ReturnStatement	return 0 ;	1118:8:44692:44700	809988	9	True				
ANR	810097	PrimaryExpression	0		809988	0					
ANR	810098	ExpressionStatement	* pindex = 0	1121:4:44735:44746	809988	5	True				
ANR	810099	AssignmentExpression	* pindex = 0		809988	0		=			
ANR	810100	UnaryOperationExpression	* pindex		809988	0					
ANR	810101	UnaryOperator	*		809988	0					
ANR	810102	Identifier	pindex		809988	1					
ANR	810103	PrimaryExpression	0		809988	1					
ANR	810104	ReturnStatement	return 0 ;	1122:4:44752:44760	809988	6	True				
ANR	810105	PrimaryExpression	0		809988	0					
ANR	810106	ReturnType	int		809988	1					
ANR	810107	Identifier	gs_type42_enumerate_glyph		809988	2					
ANR	810108	ParameterList	"gs_font * font , int * pindex , gs_glyph_space_t glyph_space , gs_glyph * pglyph"		809988	3					
ANR	810109	Parameter	gs_font * font	1100:26:44015:44027	809988	0	True				
ANR	810110	ParameterType	gs_font *		809988	0					
ANR	810111	Identifier	font		809988	1					
ANR	810112	Parameter	int * pindex	1100:41:44030:44040	809988	1	True				
ANR	810113	ParameterType	int *		809988	0					
ANR	810114	Identifier	pindex		809988	1					
ANR	810115	Parameter	gs_glyph_space_t glyph_space	1101:26:44069:44096	809988	2	True				
ANR	810116	ParameterType	gs_glyph_space_t		809988	0					
ANR	810117	Identifier	glyph_space		809988	1					
ANR	810118	Parameter	gs_glyph * pglyph	1101:56:44099:44114	809988	3	True				
ANR	810119	ParameterType	gs_glyph *		809988	0					
ANR	810120	Identifier	pglyph		809988	1					
ANR	810121	CFGEntryNode	ENTRY		809988		True				
ANR	810122	CFGExitNode	EXIT		809988		True				
ANR	810123	Symbol	pglyph		809988						
ANR	810124	Symbol	code		809988						
ANR	810125	Symbol	glyph_index		809988						
ANR	810126	Symbol	pfont -> memory		809988						
ANR	810127	Symbol	pfont		809988						
ANR	810128	Symbol	outline . memory		809988						
ANR	810129	Symbol	* pglyph		809988						
ANR	810130	Symbol	pfont -> data		809988						
ANR	810131	Symbol	* pindex		809988						
ANR	810132	Symbol	outline . bits		809988						
ANR	810133	Symbol	* pfont		809988						
ANR	810134	Symbol	outline		809988						
ANR	810135	Symbol	pfont -> data . get_outline		809988						
ANR	810136	Symbol	& outline		809988						
ANR	810137	Symbol	GS_MIN_GLYPH_INDEX		809988						
ANR	810138	Symbol	glyph_space		809988						
ANR	810139	Symbol	pindex		809988						
ANR	810140	Symbol	pfont -> data . numGlyphs		809988						
ANR	810141	Symbol	font		809988						
ANR	810142	Symbol	outline . bits . data		809988						
ANR	810143	Function	simple_glyph_metrics	1126:0:44806:46184							
ANR	810144	FunctionDef	"simple_glyph_metrics (gs_font_type42 * pfont , uint glyph_index , int wmode , float sbw [ 4 ])"		810143	0					
ANR	810145	CompoundStatement		1129:0:44926:46184	810143	0					
ANR	810146	IdentifierDeclStatement	double factor = 1.0 / pfont -> data . unitsPerEm ;	1130:4:44932:44976	810143	0	True				
ANR	810147	IdentifierDecl	factor = 1.0 / pfont -> data . unitsPerEm		810143	0					
ANR	810148	IdentifierDeclType	double		810143	0					
ANR	810149	Identifier	factor		810143	1					
ANR	810150	AssignmentExpression	factor = 1.0 / pfont -> data . unitsPerEm		810143	2		=			
ANR	810151	Identifier	factor		810143	0					
ANR	810152	MultiplicativeExpression	1.0 / pfont -> data . unitsPerEm		810143	1		/			
ANR	810153	PrimaryExpression	1.0		810143	0					
ANR	810154	MemberAccess	pfont -> data . unitsPerEm		810143	1					
ANR	810155	PtrMemberAccess	pfont -> data		810143	0					
ANR	810156	Identifier	pfont		810143	0					
ANR	810157	Identifier	data		810143	1					
ANR	810158	Identifier	unitsPerEm		810143	1					
ANR	810159	IdentifierDeclStatement	uint width ;	1131:4:44982:44992	810143	1	True				
ANR	810160	IdentifierDecl	width		810143	0					
ANR	810161	IdentifierDeclType	uint		810143	0					
ANR	810162	Identifier	width		810143	1					
ANR	810163	IdentifierDeclStatement	int lsb ;	1132:4:44998:45005	810143	2	True				
ANR	810164	IdentifierDecl	lsb		810143	0					
ANR	810165	IdentifierDeclType	int		810143	0					
ANR	810166	Identifier	lsb		810143	1					
ANR	810167	IdentifierDeclStatement	int code ;	1133:4:45011:45019	810143	3	True				
ANR	810168	IdentifierDecl	code		810143	0					
ANR	810169	IdentifierDeclType	int		810143	0					
ANR	810170	Identifier	code		810143	1					
ANR	810171	CompoundStatement		10:8:221:237	810143	4					
ANR	810172	IdentifierDeclStatement	const gs_type42_mtx_t * pmtx = & pfont -> data . metrics [ wmode ] ;	1136:8:45036:45093	810143	0	True				
ANR	810173	IdentifierDecl	* pmtx = & pfont -> data . metrics [ wmode ]		810143	0					
ANR	810174	IdentifierDeclType	const gs_type42_mtx_t *		810143	0					
ANR	810175	Identifier	pmtx		810143	1					
ANR	810176	AssignmentExpression	* pmtx = & pfont -> data . metrics [ wmode ]		810143	2		=			
ANR	810177	Identifier	pmtx		810143	0					
ANR	810178	UnaryOperationExpression	& pfont -> data . metrics [ wmode ]		810143	1					
ANR	810179	UnaryOperator	&		810143	0					
ANR	810180	ArrayIndexing	pfont -> data . metrics [ wmode ]		810143	1					
ANR	810181	MemberAccess	pfont -> data . metrics		810143	0					
ANR	810182	PtrMemberAccess	pfont -> data		810143	0					
ANR	810183	Identifier	pfont		810143	0					
ANR	810184	Identifier	data		810143	1					
ANR	810185	Identifier	metrics		810143	1					
ANR	810186	Identifier	wmode		810143	1					
ANR	810187	IdentifierDeclStatement	uint num_metrics = pmtx -> numMetrics ;	1137:8:45103:45138	810143	1	True				
ANR	810188	IdentifierDecl	num_metrics = pmtx -> numMetrics		810143	0					
ANR	810189	IdentifierDeclType	uint		810143	0					
ANR	810190	Identifier	num_metrics		810143	1					
ANR	810191	AssignmentExpression	num_metrics = pmtx -> numMetrics		810143	2		=			
ANR	810192	Identifier	num_metrics		810143	0					
ANR	810193	PtrMemberAccess	pmtx -> numMetrics		810143	1					
ANR	810194	Identifier	pmtx		810143	0					
ANR	810195	Identifier	numMetrics		810143	1					
ANR	810196	IdentifierDeclStatement	byte pmetrics [ 4 ] ;	1138:8:45148:45164	810143	2	True				
ANR	810197	IdentifierDecl	pmetrics [ 4 ]		810143	0					
ANR	810198	IdentifierDeclType	byte [ 4 ]		810143	0					
ANR	810199	Identifier	pmetrics		810143	1					
ANR	810200	PrimaryExpression	4		810143	2					
ANR	810201	IfStatement	if ( pmtx -> length == 0 )		810143	3					
ANR	810202	Condition	pmtx -> length == 0	1140:12:45179:45195	810143	0	True				
ANR	810203	EqualityExpression	pmtx -> length == 0		810143	0		==			
ANR	810204	PtrMemberAccess	pmtx -> length		810143	0					
ANR	810205	Identifier	pmtx		810143	0					
ANR	810206	Identifier	length		810143	1					
ANR	810207	PrimaryExpression	0		810143	1					
ANR	810208	ExpressionStatement	return_error ( gs_error_rangecheck )	1141:12:45210:45243	810143	1	True				
ANR	810209	CallExpression	return_error ( gs_error_rangecheck )		810143	0					
ANR	810210	Callee	return_error		810143	0					
ANR	810211	Identifier	return_error		810143	0					
ANR	810212	ArgumentList	gs_error_rangecheck		810143	1					
ANR	810213	Argument	gs_error_rangecheck		810143	0					
ANR	810214	Identifier	gs_error_rangecheck		810143	0					
ANR	810215	IfStatement	if ( glyph_index < num_metrics )		810143	4					
ANR	810216	Condition	glyph_index < num_metrics	1142:12:45257:45281	810143	0	True				
ANR	810217	RelationalExpression	glyph_index < num_metrics		810143	0		<			
ANR	810218	Identifier	glyph_index		810143	0					
ANR	810219	Identifier	num_metrics		810143	1					
ANR	810220	CompoundStatement		14:39:357:357	810143	1					
ANR	810221	ExpressionStatement	"READ_SFNTS ( pfont , pmtx -> offset + glyph_index * 4 , 4 , pmetrics )"	1143:12:45298:45360	810143	0	True				
ANR	810222	CallExpression	"READ_SFNTS ( pfont , pmtx -> offset + glyph_index * 4 , 4 , pmetrics )"		810143	0					
ANR	810223	Callee	READ_SFNTS		810143	0					
ANR	810224	Identifier	READ_SFNTS		810143	0					
ANR	810225	ArgumentList	pfont		810143	1					
ANR	810226	Argument	pfont		810143	0					
ANR	810227	Identifier	pfont		810143	0					
ANR	810228	Argument	pmtx -> offset + glyph_index * 4		810143	1					
ANR	810229	AdditiveExpression	pmtx -> offset + glyph_index * 4		810143	0		+			
ANR	810230	PtrMemberAccess	pmtx -> offset		810143	0					
ANR	810231	Identifier	pmtx		810143	0					
ANR	810232	Identifier	offset		810143	1					
ANR	810233	MultiplicativeExpression	glyph_index * 4		810143	1		*			
ANR	810234	Identifier	glyph_index		810143	0					
ANR	810235	PrimaryExpression	4		810143	1					
ANR	810236	Argument	4		810143	2					
ANR	810237	PrimaryExpression	4		810143	0					
ANR	810238	Argument	pmetrics		810143	3					
ANR	810239	Identifier	pmetrics		810143	0					
ANR	810240	ExpressionStatement	width = U16 ( pmetrics )	1144:12:45374:45395	810143	1	True				
ANR	810241	AssignmentExpression	width = U16 ( pmetrics )		810143	0		=			
ANR	810242	Identifier	width		810143	0					
ANR	810243	CallExpression	U16 ( pmetrics )		810143	1					
ANR	810244	Callee	U16		810143	0					
ANR	810245	Identifier	U16		810143	0					
ANR	810246	ArgumentList	pmetrics		810143	1					
ANR	810247	Argument	pmetrics		810143	0					
ANR	810248	Identifier	pmetrics		810143	0					
ANR	810249	ExpressionStatement	lsb = S16 ( pmetrics + 2 )	1145:12:45409:45432	810143	2	True				
ANR	810250	AssignmentExpression	lsb = S16 ( pmetrics + 2 )		810143	0		=			
ANR	810251	Identifier	lsb		810143	0					
ANR	810252	CallExpression	S16 ( pmetrics + 2 )		810143	1					
ANR	810253	Callee	S16		810143	0					
ANR	810254	Identifier	S16		810143	0					
ANR	810255	ArgumentList	pmetrics + 2		810143	1					
ANR	810256	Argument	pmetrics + 2		810143	0					
ANR	810257	AdditiveExpression	pmetrics + 2		810143	0		+			
ANR	810258	Identifier	pmetrics		810143	0					
ANR	810259	PrimaryExpression	2		810143	1					
ANR	810260	ElseStatement	else		810143	0					
ANR	810261	CompoundStatement		21:12:659:671	810143	0					
ANR	810262	IdentifierDeclStatement	uint offset = pmtx -> offset + num_metrics * 4 ;	1147:12:45463:45507	810143	0	True				
ANR	810263	IdentifierDecl	offset = pmtx -> offset + num_metrics * 4		810143	0					
ANR	810264	IdentifierDeclType	uint		810143	0					
ANR	810265	Identifier	offset		810143	1					
ANR	810266	AssignmentExpression	offset = pmtx -> offset + num_metrics * 4		810143	2		=			
ANR	810267	Identifier	offset		810143	0					
ANR	810268	AdditiveExpression	pmtx -> offset + num_metrics * 4		810143	1		+			
ANR	810269	PtrMemberAccess	pmtx -> offset		810143	0					
ANR	810270	Identifier	pmtx		810143	0					
ANR	810271	Identifier	offset		810143	1					
ANR	810272	MultiplicativeExpression	num_metrics * 4		810143	1		*			
ANR	810273	Identifier	num_metrics		810143	0					
ANR	810274	PrimaryExpression	4		810143	1					
ANR	810275	IdentifierDeclStatement	uint glyph_offset = ( glyph_index - num_metrics ) * 2 ;	1148:12:45521:45572	810143	1	True				
ANR	810276	IdentifierDecl	glyph_offset = ( glyph_index - num_metrics ) * 2		810143	0					
ANR	810277	IdentifierDeclType	uint		810143	0					
ANR	810278	Identifier	glyph_offset		810143	1					
ANR	810279	AssignmentExpression	glyph_offset = ( glyph_index - num_metrics ) * 2		810143	2		=			
ANR	810280	Identifier	glyph_offset		810143	0					
ANR	810281	MultiplicativeExpression	( glyph_index - num_metrics ) * 2		810143	1		*			
ANR	810282	AdditiveExpression	glyph_index - num_metrics		810143	0		-			
ANR	810283	Identifier	glyph_index		810143	0					
ANR	810284	Identifier	num_metrics		810143	1					
ANR	810285	PrimaryExpression	2		810143	1					
ANR	810286	IdentifierDeclStatement	byte plsb [ 2 ] ;	1149:12:45586:45598	810143	2	True				
ANR	810287	IdentifierDecl	plsb [ 2 ]		810143	0					
ANR	810288	IdentifierDeclType	byte [ 2 ]		810143	0					
ANR	810289	Identifier	plsb		810143	1					
ANR	810290	PrimaryExpression	2		810143	2					
ANR	810291	ExpressionStatement	"READ_SFNTS ( pfont , offset - 4 , 4 , pmetrics )"	1151:12:45613:45655	810143	3	True				
ANR	810292	CallExpression	"READ_SFNTS ( pfont , offset - 4 , 4 , pmetrics )"		810143	0					
ANR	810293	Callee	READ_SFNTS		810143	0					
ANR	810294	Identifier	READ_SFNTS		810143	0					
ANR	810295	ArgumentList	pfont		810143	1					
ANR	810296	Argument	pfont		810143	0					
ANR	810297	Identifier	pfont		810143	0					
ANR	810298	Argument	offset - 4		810143	1					
ANR	810299	AdditiveExpression	offset - 4		810143	0		-			
ANR	810300	Identifier	offset		810143	0					
ANR	810301	PrimaryExpression	4		810143	1					
ANR	810302	Argument	4		810143	2					
ANR	810303	PrimaryExpression	4		810143	0					
ANR	810304	Argument	pmetrics		810143	3					
ANR	810305	Identifier	pmetrics		810143	0					
ANR	810306	ExpressionStatement	width = U16 ( pmetrics )	1152:12:45669:45690	810143	4	True				
ANR	810307	AssignmentExpression	width = U16 ( pmetrics )		810143	0		=			
ANR	810308	Identifier	width		810143	0					
ANR	810309	CallExpression	U16 ( pmetrics )		810143	1					
ANR	810310	Callee	U16		810143	0					
ANR	810311	Identifier	U16		810143	0					
ANR	810312	ArgumentList	pmetrics		810143	1					
ANR	810313	Argument	pmetrics		810143	0					
ANR	810314	Identifier	pmetrics		810143	0					
ANR	810315	IfStatement	if ( glyph_offset >= pmtx -> length )		810143	5					
ANR	810316	Condition	glyph_offset >= pmtx -> length	1153:16:45708:45735	810143	0	True				
ANR	810317	RelationalExpression	glyph_offset >= pmtx -> length		810143	0		>=			
ANR	810318	Identifier	glyph_offset		810143	0					
ANR	810319	PtrMemberAccess	pmtx -> length		810143	1					
ANR	810320	Identifier	pmtx		810143	0					
ANR	810321	Identifier	length		810143	1					
ANR	810322	ExpressionStatement	glyph_offset = pmtx -> length - 2	1154:16:45754:45785	810143	1	True				
ANR	810323	AssignmentExpression	glyph_offset = pmtx -> length - 2		810143	0		=			
ANR	810324	Identifier	glyph_offset		810143	0					
ANR	810325	AdditiveExpression	pmtx -> length - 2		810143	1		-			
ANR	810326	PtrMemberAccess	pmtx -> length		810143	0					
ANR	810327	Identifier	pmtx		810143	0					
ANR	810328	Identifier	length		810143	1					
ANR	810329	PrimaryExpression	2		810143	1					
ANR	810330	ExpressionStatement	"READ_SFNTS ( pfont , offset + glyph_offset , 2 , plsb )"	1155:12:45799:45848	810143	6	True				
ANR	810331	CallExpression	"READ_SFNTS ( pfont , offset + glyph_offset , 2 , plsb )"		810143	0					
ANR	810332	Callee	READ_SFNTS		810143	0					
ANR	810333	Identifier	READ_SFNTS		810143	0					
ANR	810334	ArgumentList	pfont		810143	1					
ANR	810335	Argument	pfont		810143	0					
ANR	810336	Identifier	pfont		810143	0					
ANR	810337	Argument	offset + glyph_offset		810143	1					
ANR	810338	AdditiveExpression	offset + glyph_offset		810143	0		+			
ANR	810339	Identifier	offset		810143	0					
ANR	810340	Identifier	glyph_offset		810143	1					
ANR	810341	Argument	2		810143	2					
ANR	810342	PrimaryExpression	2		810143	0					
ANR	810343	Argument	plsb		810143	3					
ANR	810344	Identifier	plsb		810143	0					
ANR	810345	ExpressionStatement	lsb = S16 ( plsb )	1156:12:45862:45877	810143	7	True				
ANR	810346	AssignmentExpression	lsb = S16 ( plsb )		810143	0		=			
ANR	810347	Identifier	lsb		810143	0					
ANR	810348	CallExpression	S16 ( plsb )		810143	1					
ANR	810349	Callee	S16		810143	0					
ANR	810350	Identifier	S16		810143	0					
ANR	810351	ArgumentList	plsb		810143	1					
ANR	810352	Argument	plsb		810143	0					
ANR	810353	Identifier	plsb		810143	0					
ANR	810354	IfStatement	if ( wmode )		810143	5					
ANR	810355	Condition	wmode	1159:8:45903:45907	810143	0	True				
ANR	810356	Identifier	wmode		810143	0					
ANR	810357	CompoundStatement		31:15:983:983	810143	1					
ANR	810358	ExpressionStatement	factor = - factor	1160:8:45920:45936	810143	0	True				
ANR	810359	AssignmentExpression	factor = - factor		810143	0		=			
ANR	810360	Identifier	factor		810143	0					
ANR	810361	UnaryOperationExpression	- factor		810143	1					
ANR	810362	UnaryOperator	-		810143	0					
ANR	810363	Identifier	factor		810143	1					
ANR	810364	ExpressionStatement	"sbw [ 0 ] = 0 , sbw [ 1 ] = lsb * factor"	1161:8:45983:46016	810143	1	True				
ANR	810365	Expression	"sbw [ 0 ] = 0 , sbw [ 1 ] = lsb * factor"		810143	0					
ANR	810366	AssignmentExpression	sbw [ 0 ] = 0		810143	0		=			
ANR	810367	ArrayIndexing	sbw [ 0 ]		810143	0					
ANR	810368	Identifier	sbw		810143	0					
ANR	810369	PrimaryExpression	0		810143	1					
ANR	810370	PrimaryExpression	0		810143	1					
ANR	810371	AssignmentExpression	sbw [ 1 ] = lsb * factor		810143	1		=			
ANR	810372	ArrayIndexing	sbw [ 1 ]		810143	0					
ANR	810373	Identifier	sbw		810143	0					
ANR	810374	PrimaryExpression	1		810143	1					
ANR	810375	MultiplicativeExpression	lsb * factor		810143	1		*			
ANR	810376	Identifier	lsb		810143	0					
ANR	810377	Identifier	factor		810143	1					
ANR	810378	ExpressionStatement	"sbw [ 2 ] = 0 , sbw [ 3 ] = width * factor"	1162:8:46026:46061	810143	2	True				
ANR	810379	Expression	"sbw [ 2 ] = 0 , sbw [ 3 ] = width * factor"		810143	0					
ANR	810380	AssignmentExpression	sbw [ 2 ] = 0		810143	0		=			
ANR	810381	ArrayIndexing	sbw [ 2 ]		810143	0					
ANR	810382	Identifier	sbw		810143	0					
ANR	810383	PrimaryExpression	2		810143	1					
ANR	810384	PrimaryExpression	0		810143	1					
ANR	810385	AssignmentExpression	sbw [ 3 ] = width * factor		810143	1		=			
ANR	810386	ArrayIndexing	sbw [ 3 ]		810143	0					
ANR	810387	Identifier	sbw		810143	0					
ANR	810388	PrimaryExpression	3		810143	1					
ANR	810389	MultiplicativeExpression	width * factor		810143	1		*			
ANR	810390	Identifier	width		810143	0					
ANR	810391	Identifier	factor		810143	1					
ANR	810392	ElseStatement	else		810143	0					
ANR	810393	CompoundStatement		35:11:1147:1147	810143	0					
ANR	810394	ExpressionStatement	"sbw [ 0 ] = lsb * factor , sbw [ 1 ] = 0"	1164:8:46084:46117	810143	0	True				
ANR	810395	Expression	"sbw [ 0 ] = lsb * factor , sbw [ 1 ] = 0"		810143	0					
ANR	810396	AssignmentExpression	sbw [ 0 ] = lsb * factor		810143	0		=			
ANR	810397	ArrayIndexing	sbw [ 0 ]		810143	0					
ANR	810398	Identifier	sbw		810143	0					
ANR	810399	PrimaryExpression	0		810143	1					
ANR	810400	MultiplicativeExpression	lsb * factor		810143	1		*			
ANR	810401	Identifier	lsb		810143	0					
ANR	810402	Identifier	factor		810143	1					
ANR	810403	AssignmentExpression	sbw [ 1 ] = 0		810143	1		=			
ANR	810404	ArrayIndexing	sbw [ 1 ]		810143	0					
ANR	810405	Identifier	sbw		810143	0					
ANR	810406	PrimaryExpression	1		810143	1					
ANR	810407	PrimaryExpression	0		810143	1					
ANR	810408	ExpressionStatement	"sbw [ 2 ] = width * factor , sbw [ 3 ] = 0"	1165:8:46127:46162	810143	1	True				
ANR	810409	Expression	"sbw [ 2 ] = width * factor , sbw [ 3 ] = 0"		810143	0					
ANR	810410	AssignmentExpression	sbw [ 2 ] = width * factor		810143	0		=			
ANR	810411	ArrayIndexing	sbw [ 2 ]		810143	0					
ANR	810412	Identifier	sbw		810143	0					
ANR	810413	PrimaryExpression	2		810143	1					
ANR	810414	MultiplicativeExpression	width * factor		810143	1		*			
ANR	810415	Identifier	width		810143	0					
ANR	810416	Identifier	factor		810143	1					
ANR	810417	AssignmentExpression	sbw [ 3 ] = 0		810143	1		=			
ANR	810418	ArrayIndexing	sbw [ 3 ]		810143	0					
ANR	810419	Identifier	sbw		810143	0					
ANR	810420	PrimaryExpression	3		810143	1					
ANR	810421	PrimaryExpression	0		810143	1					
ANR	810422	ReturnStatement	return 0 ;	1167:4:46174:46182	810143	6	True				
ANR	810423	PrimaryExpression	0		810143	0					
ANR	810424	ReturnType	static int		810143	1					
ANR	810425	Identifier	simple_glyph_metrics		810143	2					
ANR	810426	ParameterList	"gs_font_type42 * pfont , uint glyph_index , int wmode , float sbw [ 4 ]"		810143	3					
ANR	810427	Parameter	gs_font_type42 * pfont	1127:21:44838:44859	810143	0	True				
ANR	810428	ParameterType	gs_font_type42 *		810143	0					
ANR	810429	Identifier	pfont		810143	1					
ANR	810430	Parameter	uint glyph_index	1127:45:44862:44877	810143	1	True				
ANR	810431	ParameterType	uint		810143	0					
ANR	810432	Identifier	glyph_index		810143	1					
ANR	810433	Parameter	int wmode	1127:63:44880:44888	810143	2	True				
ANR	810434	ParameterType	int		810143	0					
ANR	810435	Identifier	wmode		810143	1					
ANR	810436	Parameter	float sbw [ 4 ]	1128:21:44912:44923	810143	3	True				
ANR	810437	ParameterType	float [ 4 ]		810143	0					
ANR	810438	Identifier	sbw		810143	1					
ANR	810439	CFGEntryNode	ENTRY		810143		True				
ANR	810440	CFGExitNode	EXIT		810143		True				
ANR	810441	Symbol	pmtx -> offset		810143						
ANR	810442	Symbol	code		810143						
ANR	810443	Symbol	glyph_index		810143						
ANR	810444	Symbol	gs_error_rangecheck		810143						
ANR	810445	Symbol	sbw		810143						
ANR	810446	Symbol	num_metrics		810143						
ANR	810447	Symbol	pmtx -> length		810143						
ANR	810448	Symbol	pmtx -> numMetrics		810143						
ANR	810449	Symbol	* pmtx		810143						
ANR	810450	Symbol	wmode		810143						
ANR	810451	Symbol	factor		810143						
ANR	810452	Symbol	pfont -> data . unitsPerEm		810143						
ANR	810453	Symbol	offset		810143						
ANR	810454	Symbol	pfont		810143						
ANR	810455	Symbol	pfont -> data . metrics		810143						
ANR	810456	Symbol	pfont -> data		810143						
ANR	810457	Symbol	pmetrics		810143						
ANR	810458	Symbol	* pfont		810143						
ANR	810459	Symbol	* sbw		810143						
ANR	810460	Symbol	pmtx		810143						
ANR	810461	Symbol	width		810143						
ANR	810462	Symbol	S16		810143						
ANR	810463	Symbol	lsb		810143						
ANR	810464	Symbol	U16		810143						
ANR	810465	Symbol	glyph_offset		810143						
ANR	810466	Symbol	plsb		810143						
ANR	810467	Function	gs_type42_default_get_metrics	1174:0:46312:48594							
ANR	810468	FunctionDef	"gs_type42_default_get_metrics (gs_font_type42 * pfont , uint glyph_index , gs_type42_metrics_options_t options , float * sbw)"		810467	0					
ANR	810469	CompoundStatement		1177:0:46467:48594	810467	0					
ANR	810470	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	1178:4:46473:46499	810467	0	True				
ANR	810471	IdentifierDecl	glyph_data		810467	0					
ANR	810472	IdentifierDeclType	gs_glyph_data_t		810467	0					
ANR	810473	Identifier	glyph_data		810467	1					
ANR	810474	IdentifierDeclStatement	int code ;	1179:4:46505:46513	810467	1	True				
ANR	810475	IdentifierDecl	code		810467	0					
ANR	810476	IdentifierDeclType	int		810467	0					
ANR	810477	Identifier	code		810467	1					
ANR	810478	IdentifierDeclStatement	int result = 0 ;	1180:4:46519:46533	810467	2	True				
ANR	810479	IdentifierDecl	result = 0		810467	0					
ANR	810480	IdentifierDeclType	int		810467	0					
ANR	810481	Identifier	result		810467	1					
ANR	810482	AssignmentExpression	result = 0		810467	2		=			
ANR	810483	Identifier	result		810467	0					
ANR	810484	PrimaryExpression	0		810467	1					
ANR	810485	IdentifierDeclStatement	int wmode = gs_type42_metrics_options_wmode ( options ) ;	1181:4:46539:46591	810467	3	True				
ANR	810486	IdentifierDecl	wmode = gs_type42_metrics_options_wmode ( options )		810467	0					
ANR	810487	IdentifierDeclType	int		810467	0					
ANR	810488	Identifier	wmode		810467	1					
ANR	810489	AssignmentExpression	wmode = gs_type42_metrics_options_wmode ( options )		810467	2		=			
ANR	810490	Identifier	wmode		810467	0					
ANR	810491	CallExpression	gs_type42_metrics_options_wmode ( options )		810467	1					
ANR	810492	Callee	gs_type42_metrics_options_wmode		810467	0					
ANR	810493	Identifier	gs_type42_metrics_options_wmode		810467	0					
ANR	810494	ArgumentList	options		810467	1					
ANR	810495	Argument	options		810467	0					
ANR	810496	Identifier	options		810467	0					
ANR	810497	IdentifierDeclStatement	int sbw_requested = gs_type42_metrics_options_sbw_requested ( options ) ;	1182:4:46597:46666	810467	4	True				
ANR	810498	IdentifierDecl	sbw_requested = gs_type42_metrics_options_sbw_requested ( options )		810467	0					
ANR	810499	IdentifierDeclType	int		810467	0					
ANR	810500	Identifier	sbw_requested		810467	1					
ANR	810501	AssignmentExpression	sbw_requested = gs_type42_metrics_options_sbw_requested ( options )		810467	2		=			
ANR	810502	Identifier	sbw_requested		810467	0					
ANR	810503	CallExpression	gs_type42_metrics_options_sbw_requested ( options )		810467	1					
ANR	810504	Callee	gs_type42_metrics_options_sbw_requested		810467	0					
ANR	810505	Identifier	gs_type42_metrics_options_sbw_requested		810467	0					
ANR	810506	ArgumentList	options		810467	1					
ANR	810507	Argument	options		810467	0					
ANR	810508	Identifier	options		810467	0					
ANR	810509	IdentifierDeclStatement	int bbox_requested = gs_type42_metrics_options_bbox_requested ( options ) ;	1183:4:46672:46742	810467	5	True				
ANR	810510	IdentifierDecl	bbox_requested = gs_type42_metrics_options_bbox_requested ( options )		810467	0					
ANR	810511	IdentifierDeclType	int		810467	0					
ANR	810512	Identifier	bbox_requested		810467	1					
ANR	810513	AssignmentExpression	bbox_requested = gs_type42_metrics_options_bbox_requested ( options )		810467	2		=			
ANR	810514	Identifier	bbox_requested		810467	0					
ANR	810515	CallExpression	gs_type42_metrics_options_bbox_requested ( options )		810467	1					
ANR	810516	Callee	gs_type42_metrics_options_bbox_requested		810467	0					
ANR	810517	Identifier	gs_type42_metrics_options_bbox_requested		810467	0					
ANR	810518	ArgumentList	options		810467	1					
ANR	810519	Argument	options		810467	0					
ANR	810520	Identifier	options		810467	0					
ANR	810521	ExpressionStatement	glyph_data . memory = pfont -> memory	1185:4:46749:46782	810467	6	True				
ANR	810522	AssignmentExpression	glyph_data . memory = pfont -> memory		810467	0		=			
ANR	810523	MemberAccess	glyph_data . memory		810467	0					
ANR	810524	Identifier	glyph_data		810467	0					
ANR	810525	Identifier	memory		810467	1					
ANR	810526	PtrMemberAccess	pfont -> memory		810467	1					
ANR	810527	Identifier	pfont		810467	0					
ANR	810528	Identifier	memory		810467	1					
ANR	810529	ExpressionStatement	"code = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"	1186:4:46788:46851	810467	7	True				
ANR	810530	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		810467	0		=			
ANR	810531	Identifier	code		810467	0					
ANR	810532	CallExpression	"pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		810467	1					
ANR	810533	Callee	pfont -> data . get_outline		810467	0					
ANR	810534	MemberAccess	pfont -> data . get_outline		810467	0					
ANR	810535	PtrMemberAccess	pfont -> data		810467	0					
ANR	810536	Identifier	pfont		810467	0					
ANR	810537	Identifier	data		810467	1					
ANR	810538	Identifier	get_outline		810467	1					
ANR	810539	ArgumentList	pfont		810467	1					
ANR	810540	Argument	pfont		810467	0					
ANR	810541	Identifier	pfont		810467	0					
ANR	810542	Argument	glyph_index		810467	1					
ANR	810543	Identifier	glyph_index		810467	0					
ANR	810544	Argument	& glyph_data		810467	2					
ANR	810545	UnaryOperationExpression	& glyph_data		810467	0					
ANR	810546	UnaryOperator	&		810467	0					
ANR	810547	Identifier	glyph_data		810467	1					
ANR	810548	IfStatement	if ( code < 0 )		810467	8					
ANR	810549	Condition	code < 0	1187:8:46861:46868	810467	0	True				
ANR	810550	RelationalExpression	code < 0		810467	0		<			
ANR	810551	Identifier	code		810467	0					
ANR	810552	PrimaryExpression	0		810467	1					
ANR	810553	ReturnStatement	return code ;	1188:8:46879:46890	810467	1	True				
ANR	810554	Identifier	code		810467	0					
ANR	810555	IfStatement	if ( bbox_requested )		810467	9					
ANR	810556	Condition	bbox_requested	1189:8:46900:46913	810467	0	True				
ANR	810557	Identifier	bbox_requested		810467	0					
ANR	810558	CompoundStatement		13:24:448:448	810467	1					
ANR	810559	IfStatement	if ( glyph_data . bits . size >= 10 && bbox_requested )		810467	0					
ANR	810560	Condition	glyph_data . bits . size >= 10 && bbox_requested	1190:12:46930:46973	810467	0	True				
ANR	810561	AndExpression	glyph_data . bits . size >= 10 && bbox_requested		810467	0		&&			
ANR	810562	RelationalExpression	glyph_data . bits . size >= 10		810467	0		>=			
ANR	810563	MemberAccess	glyph_data . bits . size		810467	0					
ANR	810564	MemberAccess	glyph_data . bits		810467	0					
ANR	810565	Identifier	glyph_data		810467	0					
ANR	810566	Identifier	bits		810467	1					
ANR	810567	Identifier	size		810467	1					
ANR	810568	PrimaryExpression	10		810467	1					
ANR	810569	Identifier	bbox_requested		810467	1					
ANR	810570	CompoundStatement		18:12:691:735	810467	1					
ANR	810571	IdentifierDeclStatement	double factor = 1.0 / pfont -> data . unitsPerEm ;	1194:12:47159:47203	810467	0	True				
ANR	810572	IdentifierDecl	factor = 1.0 / pfont -> data . unitsPerEm		810467	0					
ANR	810573	IdentifierDeclType	double		810467	0					
ANR	810574	Identifier	factor		810467	1					
ANR	810575	AssignmentExpression	factor = 1.0 / pfont -> data . unitsPerEm		810467	2		=			
ANR	810576	Identifier	factor		810467	0					
ANR	810577	MultiplicativeExpression	1.0 / pfont -> data . unitsPerEm		810467	1		/			
ANR	810578	PrimaryExpression	1.0		810467	0					
ANR	810579	MemberAccess	pfont -> data . unitsPerEm		810467	1					
ANR	810580	PtrMemberAccess	pfont -> data		810467	0					
ANR	810581	Identifier	pfont		810467	0					
ANR	810582	Identifier	data		810467	1					
ANR	810583	Identifier	unitsPerEm		810467	1					
ANR	810584	ExpressionStatement	sbw [ 4 ] = S16 ( glyph_data . bits . data + 2 ) * factor	1196:12:47218:47265	810467	1	True				
ANR	810585	AssignmentExpression	sbw [ 4 ] = S16 ( glyph_data . bits . data + 2 ) * factor		810467	0		=			
ANR	810586	ArrayIndexing	sbw [ 4 ]		810467	0					
ANR	810587	Identifier	sbw		810467	0					
ANR	810588	PrimaryExpression	4		810467	1					
ANR	810589	MultiplicativeExpression	S16 ( glyph_data . bits . data + 2 ) * factor		810467	1		*			
ANR	810590	CallExpression	S16 ( glyph_data . bits . data + 2 )		810467	0					
ANR	810591	Callee	S16		810467	0					
ANR	810592	Identifier	S16		810467	0					
ANR	810593	ArgumentList	glyph_data . bits . data + 2		810467	1					
ANR	810594	Argument	glyph_data . bits . data + 2		810467	0					
ANR	810595	AdditiveExpression	glyph_data . bits . data + 2		810467	0		+			
ANR	810596	MemberAccess	glyph_data . bits . data		810467	0					
ANR	810597	MemberAccess	glyph_data . bits		810467	0					
ANR	810598	Identifier	glyph_data		810467	0					
ANR	810599	Identifier	bits		810467	1					
ANR	810600	Identifier	data		810467	1					
ANR	810601	PrimaryExpression	2		810467	1					
ANR	810602	Identifier	factor		810467	1					
ANR	810603	ExpressionStatement	sbw [ 5 ] = S16 ( glyph_data . bits . data + 4 ) * factor	1197:12:47279:47326	810467	2	True				
ANR	810604	AssignmentExpression	sbw [ 5 ] = S16 ( glyph_data . bits . data + 4 ) * factor		810467	0		=			
ANR	810605	ArrayIndexing	sbw [ 5 ]		810467	0					
ANR	810606	Identifier	sbw		810467	0					
ANR	810607	PrimaryExpression	5		810467	1					
ANR	810608	MultiplicativeExpression	S16 ( glyph_data . bits . data + 4 ) * factor		810467	1		*			
ANR	810609	CallExpression	S16 ( glyph_data . bits . data + 4 )		810467	0					
ANR	810610	Callee	S16		810467	0					
ANR	810611	Identifier	S16		810467	0					
ANR	810612	ArgumentList	glyph_data . bits . data + 4		810467	1					
ANR	810613	Argument	glyph_data . bits . data + 4		810467	0					
ANR	810614	AdditiveExpression	glyph_data . bits . data + 4		810467	0		+			
ANR	810615	MemberAccess	glyph_data . bits . data		810467	0					
ANR	810616	MemberAccess	glyph_data . bits		810467	0					
ANR	810617	Identifier	glyph_data		810467	0					
ANR	810618	Identifier	bits		810467	1					
ANR	810619	Identifier	data		810467	1					
ANR	810620	PrimaryExpression	4		810467	1					
ANR	810621	Identifier	factor		810467	1					
ANR	810622	ExpressionStatement	sbw [ 6 ] = S16 ( glyph_data . bits . data + 6 ) * factor	1198:12:47340:47387	810467	3	True				
ANR	810623	AssignmentExpression	sbw [ 6 ] = S16 ( glyph_data . bits . data + 6 ) * factor		810467	0		=			
ANR	810624	ArrayIndexing	sbw [ 6 ]		810467	0					
ANR	810625	Identifier	sbw		810467	0					
ANR	810626	PrimaryExpression	6		810467	1					
ANR	810627	MultiplicativeExpression	S16 ( glyph_data . bits . data + 6 ) * factor		810467	1		*			
ANR	810628	CallExpression	S16 ( glyph_data . bits . data + 6 )		810467	0					
ANR	810629	Callee	S16		810467	0					
ANR	810630	Identifier	S16		810467	0					
ANR	810631	ArgumentList	glyph_data . bits . data + 6		810467	1					
ANR	810632	Argument	glyph_data . bits . data + 6		810467	0					
ANR	810633	AdditiveExpression	glyph_data . bits . data + 6		810467	0		+			
ANR	810634	MemberAccess	glyph_data . bits . data		810467	0					
ANR	810635	MemberAccess	glyph_data . bits		810467	0					
ANR	810636	Identifier	glyph_data		810467	0					
ANR	810637	Identifier	bits		810467	1					
ANR	810638	Identifier	data		810467	1					
ANR	810639	PrimaryExpression	6		810467	1					
ANR	810640	Identifier	factor		810467	1					
ANR	810641	ExpressionStatement	sbw [ 7 ] = S16 ( glyph_data . bits . data + 8 ) * factor	1199:12:47401:47448	810467	4	True				
ANR	810642	AssignmentExpression	sbw [ 7 ] = S16 ( glyph_data . bits . data + 8 ) * factor		810467	0		=			
ANR	810643	ArrayIndexing	sbw [ 7 ]		810467	0					
ANR	810644	Identifier	sbw		810467	0					
ANR	810645	PrimaryExpression	7		810467	1					
ANR	810646	MultiplicativeExpression	S16 ( glyph_data . bits . data + 8 ) * factor		810467	1		*			
ANR	810647	CallExpression	S16 ( glyph_data . bits . data + 8 )		810467	0					
ANR	810648	Callee	S16		810467	0					
ANR	810649	Identifier	S16		810467	0					
ANR	810650	ArgumentList	glyph_data . bits . data + 8		810467	1					
ANR	810651	Argument	glyph_data . bits . data + 8		810467	0					
ANR	810652	AdditiveExpression	glyph_data . bits . data + 8		810467	0		+			
ANR	810653	MemberAccess	glyph_data . bits . data		810467	0					
ANR	810654	MemberAccess	glyph_data . bits		810467	0					
ANR	810655	Identifier	glyph_data		810467	0					
ANR	810656	Identifier	bits		810467	1					
ANR	810657	Identifier	data		810467	1					
ANR	810658	PrimaryExpression	8		810467	1					
ANR	810659	Identifier	factor		810467	1					
ANR	810660	ElseStatement	else		810467	0					
ANR	810661	ExpressionStatement	sbw [ 4 ] = sbw [ 5 ] = sbw [ 6 ] = sbw [ 7 ] = 0	1201:12:47477:47514	810467	0	True				
ANR	810662	AssignmentExpression	sbw [ 4 ] = sbw [ 5 ] = sbw [ 6 ] = sbw [ 7 ] = 0		810467	0		=			
ANR	810663	ArrayIndexing	sbw [ 4 ]		810467	0					
ANR	810664	Identifier	sbw		810467	0					
ANR	810665	PrimaryExpression	4		810467	1					
ANR	810666	AssignmentExpression	sbw [ 5 ] = sbw [ 6 ] = sbw [ 7 ] = 0		810467	1		=			
ANR	810667	ArrayIndexing	sbw [ 5 ]		810467	0					
ANR	810668	Identifier	sbw		810467	0					
ANR	810669	PrimaryExpression	5		810467	1					
ANR	810670	AssignmentExpression	sbw [ 6 ] = sbw [ 7 ] = 0		810467	1		=			
ANR	810671	ArrayIndexing	sbw [ 6 ]		810467	0					
ANR	810672	Identifier	sbw		810467	0					
ANR	810673	PrimaryExpression	6		810467	1					
ANR	810674	AssignmentExpression	sbw [ 7 ] = 0		810467	1		=			
ANR	810675	ArrayIndexing	sbw [ 7 ]		810467	0					
ANR	810676	Identifier	sbw		810467	0					
ANR	810677	PrimaryExpression	7		810467	1					
ANR	810678	PrimaryExpression	0		810467	1					
ANR	810679	IfStatement	if ( sbw_requested )		810467	10					
ANR	810680	Condition	sbw_requested	1203:8:47530:47542	810467	0	True				
ANR	810681	Identifier	sbw_requested		810467	0					
ANR	810682	CompoundStatement		27:23:1077:1077	810467	1					
ANR	810683	IfStatement	if ( glyph_data . bits . size != 0 && S16 ( glyph_data . bits . data ) == - 1 )		810467	0					
ANR	810684	Condition	glyph_data . bits . size != 0 && S16 ( glyph_data . bits . data ) == - 1	1204:12:47559:47618	810467	0	True				
ANR	810685	AndExpression	glyph_data . bits . size != 0 && S16 ( glyph_data . bits . data ) == - 1		810467	0		&&			
ANR	810686	EqualityExpression	glyph_data . bits . size != 0		810467	0		!=			
ANR	810687	MemberAccess	glyph_data . bits . size		810467	0					
ANR	810688	MemberAccess	glyph_data . bits		810467	0					
ANR	810689	Identifier	glyph_data		810467	0					
ANR	810690	Identifier	bits		810467	1					
ANR	810691	Identifier	size		810467	1					
ANR	810692	PrimaryExpression	0		810467	1					
ANR	810693	EqualityExpression	S16 ( glyph_data . bits . data ) == - 1		810467	1		==			
ANR	810694	CallExpression	S16 ( glyph_data . bits . data )		810467	0					
ANR	810695	Callee	S16		810467	0					
ANR	810696	Identifier	S16		810467	0					
ANR	810697	ArgumentList	glyph_data . bits . data		810467	1					
ANR	810698	Argument	glyph_data . bits . data		810467	0					
ANR	810699	MemberAccess	glyph_data . bits . data		810467	0					
ANR	810700	MemberAccess	glyph_data . bits		810467	0					
ANR	810701	Identifier	glyph_data		810467	0					
ANR	810702	Identifier	bits		810467	1					
ANR	810703	Identifier	data		810467	1					
ANR	810704	UnaryOperationExpression	- 1		810467	1					
ANR	810705	UnaryOperator	-		810467	0					
ANR	810706	PrimaryExpression	1		810467	1					
ANR	810707	CompoundStatement		32:12:1295:1314	810467	1					
ANR	810708	IdentifierDeclStatement	uint flags ;	1206:12:47680:47690	810467	0	True				
ANR	810709	IdentifierDecl	flags		810467	0					
ANR	810710	IdentifierDeclType	uint		810467	0					
ANR	810711	Identifier	flags		810467	1					
ANR	810712	IdentifierDeclStatement	const byte * gdata = glyph_data . bits . data + 10 ;	1207:12:47704:47749	810467	1	True				
ANR	810713	IdentifierDecl	* gdata = glyph_data . bits . data + 10		810467	0					
ANR	810714	IdentifierDeclType	const byte *		810467	0					
ANR	810715	Identifier	gdata		810467	1					
ANR	810716	AssignmentExpression	* gdata = glyph_data . bits . data + 10		810467	2		=			
ANR	810717	Identifier	gdata		810467	0					
ANR	810718	AdditiveExpression	glyph_data . bits . data + 10		810467	1		+			
ANR	810719	MemberAccess	glyph_data . bits . data		810467	0					
ANR	810720	MemberAccess	glyph_data . bits		810467	0					
ANR	810721	Identifier	glyph_data		810467	0					
ANR	810722	Identifier	bits		810467	1					
ANR	810723	Identifier	data		810467	1					
ANR	810724	PrimaryExpression	10		810467	1					
ANR	810725	IdentifierDeclStatement	gs_matrix_fixed mat ;	1208:12:47763:47782	810467	2	True				
ANR	810726	IdentifierDecl	mat		810467	0					
ANR	810727	IdentifierDeclType	gs_matrix_fixed		810467	0					
ANR	810728	Identifier	mat		810467	1					
ANR	810729	ExpressionStatement	"memset ( & mat , 0 , sizeof ( mat ) )"	1210:12:47797:47825	810467	3	True				
ANR	810730	CallExpression	"memset ( & mat , 0 , sizeof ( mat ) )"		810467	0					
ANR	810731	Callee	memset		810467	0					
ANR	810732	Identifier	memset		810467	0					
ANR	810733	ArgumentList	& mat		810467	1					
ANR	810734	Argument	& mat		810467	0					
ANR	810735	UnaryOperationExpression	& mat		810467	0					
ANR	810736	UnaryOperator	&		810467	0					
ANR	810737	Identifier	mat		810467	1					
ANR	810738	Argument	0		810467	1					
ANR	810739	PrimaryExpression	0		810467	0					
ANR	810740	Argument	sizeof ( mat )		810467	2					
ANR	810741	SizeofExpression	sizeof ( mat )		810467	0					
ANR	810742	Sizeof	sizeof		810467	0					
ANR	810743	SizeofOperand	mat		810467	1					
ANR	810744	DoStatement	do		810467	4					
ANR	810745	CompoundStatement		36:16:1408:1440	810467	0					
ANR	810746	IdentifierDeclStatement	uint comp_index = U16 ( gdata + 2 ) ;	1212:16:47876:47908	810467	0	True				
ANR	810747	IdentifierDecl	comp_index = U16 ( gdata + 2 )		810467	0					
ANR	810748	IdentifierDeclType	uint		810467	0					
ANR	810749	Identifier	comp_index		810467	1					
ANR	810750	AssignmentExpression	comp_index = U16 ( gdata + 2 )		810467	2		=			
ANR	810751	Identifier	comp_index		810467	0					
ANR	810752	CallExpression	U16 ( gdata + 2 )		810467	1					
ANR	810753	Callee	U16		810467	0					
ANR	810754	Identifier	U16		810467	0					
ANR	810755	ArgumentList	gdata + 2		810467	1					
ANR	810756	Argument	gdata + 2		810467	0					
ANR	810757	AdditiveExpression	gdata + 2		810467	0		+			
ANR	810758	Identifier	gdata		810467	0					
ANR	810759	PrimaryExpression	2		810467	1					
ANR	810760	IfStatement	if ( comp_index == glyph_index )		810467	1					
ANR	810761	Condition	comp_index == glyph_index	1214:20:47931:47955	810467	0	True				
ANR	810762	EqualityExpression	comp_index == glyph_index		810467	0		==			
ANR	810763	Identifier	comp_index		810467	0					
ANR	810764	Identifier	glyph_index		810467	1					
ANR	810765	CompoundStatement		38:47:1490:1490	810467	1					
ANR	810766	ExpressionStatement	result = gs_note_error ( gs_error_invalidfont )	1215:20:47980:48024	810467	0	True				
ANR	810767	AssignmentExpression	result = gs_note_error ( gs_error_invalidfont )		810467	0		=			
ANR	810768	Identifier	result		810467	0					
ANR	810769	CallExpression	gs_note_error ( gs_error_invalidfont )		810467	1					
ANR	810770	Callee	gs_note_error		810467	0					
ANR	810771	Identifier	gs_note_error		810467	0					
ANR	810772	ArgumentList	gs_error_invalidfont		810467	1					
ANR	810773	Argument	gs_error_invalidfont		810467	0					
ANR	810774	Identifier	gs_error_invalidfont		810467	0					
ANR	810775	GotoStatement	goto done ;	1216:20:48046:48055	810467	1	True				
ANR	810776	Identifier	done		810467	0					
ANR	810777	ExpressionStatement	"gs_type42_parse_component ( & gdata , & flags , & mat , NULL , pfont , & mat )"	1219:16:48092:48158	810467	2	True				
ANR	810778	CallExpression	"gs_type42_parse_component ( & gdata , & flags , & mat , NULL , pfont , & mat )"		810467	0					
ANR	810779	Callee	gs_type42_parse_component		810467	0					
ANR	810780	Identifier	gs_type42_parse_component		810467	0					
ANR	810781	ArgumentList	& gdata		810467	1					
ANR	810782	Argument	& gdata		810467	0					
ANR	810783	UnaryOperationExpression	& gdata		810467	0					
ANR	810784	UnaryOperator	&		810467	0					
ANR	810785	Identifier	gdata		810467	1					
ANR	810786	Argument	& flags		810467	1					
ANR	810787	UnaryOperationExpression	& flags		810467	0					
ANR	810788	UnaryOperator	&		810467	0					
ANR	810789	Identifier	flags		810467	1					
ANR	810790	Argument	& mat		810467	2					
ANR	810791	UnaryOperationExpression	& mat		810467	0					
ANR	810792	UnaryOperator	&		810467	0					
ANR	810793	Identifier	mat		810467	1					
ANR	810794	Argument	NULL		810467	3					
ANR	810795	Identifier	NULL		810467	0					
ANR	810796	Argument	pfont		810467	4					
ANR	810797	Identifier	pfont		810467	0					
ANR	810798	Argument	& mat		810467	5					
ANR	810799	UnaryOperationExpression	& mat		810467	0					
ANR	810800	UnaryOperator	&		810467	0					
ANR	810801	Identifier	mat		810467	1					
ANR	810802	IfStatement	if ( flags & TT_CG_USE_MY_METRICS )		810467	3					
ANR	810803	Condition	flags & TT_CG_USE_MY_METRICS	1220:20:48180:48207	810467	0	True				
ANR	810804	BitAndExpression	flags & TT_CG_USE_MY_METRICS		810467	0		&			
ANR	810805	Identifier	flags		810467	0					
ANR	810806	Identifier	TT_CG_USE_MY_METRICS		810467	1					
ANR	810807	CompoundStatement		44:50:1742:1742	810467	1					
ANR	810808	ExpressionStatement	"result = pfont -> data . get_metrics ( pfont , comp_index , wmode , sbw )"	1221:20:48232:48295	810467	0	True				
ANR	810809	AssignmentExpression	"result = pfont -> data . get_metrics ( pfont , comp_index , wmode , sbw )"		810467	0		=			
ANR	810810	Identifier	result		810467	0					
ANR	810811	CallExpression	"pfont -> data . get_metrics ( pfont , comp_index , wmode , sbw )"		810467	1					
ANR	810812	Callee	pfont -> data . get_metrics		810467	0					
ANR	810813	MemberAccess	pfont -> data . get_metrics		810467	0					
ANR	810814	PtrMemberAccess	pfont -> data		810467	0					
ANR	810815	Identifier	pfont		810467	0					
ANR	810816	Identifier	data		810467	1					
ANR	810817	Identifier	get_metrics		810467	1					
ANR	810818	ArgumentList	pfont		810467	1					
ANR	810819	Argument	pfont		810467	0					
ANR	810820	Identifier	pfont		810467	0					
ANR	810821	Argument	comp_index		810467	1					
ANR	810822	Identifier	comp_index		810467	0					
ANR	810823	Argument	wmode		810467	2					
ANR	810824	Identifier	wmode		810467	0					
ANR	810825	Argument	sbw		810467	3					
ANR	810826	Identifier	sbw		810467	0					
ANR	810827	GotoStatement	goto done ;	1222:20:48317:48326	810467	1	True				
ANR	810828	Identifier	done		810467	0					
ANR	810829	Condition	flags & TT_CG_MORE_COMPONENTS	1225:19:48379:48407	810467	1	True				
ANR	810830	BitAndExpression	flags & TT_CG_MORE_COMPONENTS		810467	0		&			
ANR	810831	Identifier	flags		810467	0					
ANR	810832	Identifier	TT_CG_MORE_COMPONENTS		810467	1					
ANR	810833	ExpressionStatement	"result = simple_glyph_metrics ( pfont , glyph_index , wmode , sbw )"	1227:8:48429:48490	810467	1	True				
ANR	810834	AssignmentExpression	"result = simple_glyph_metrics ( pfont , glyph_index , wmode , sbw )"		810467	0		=			
ANR	810835	Identifier	result		810467	0					
ANR	810836	CallExpression	"simple_glyph_metrics ( pfont , glyph_index , wmode , sbw )"		810467	1					
ANR	810837	Callee	simple_glyph_metrics		810467	0					
ANR	810838	Identifier	simple_glyph_metrics		810467	0					
ANR	810839	ArgumentList	pfont		810467	1					
ANR	810840	Argument	pfont		810467	0					
ANR	810841	Identifier	pfont		810467	0					
ANR	810842	Argument	glyph_index		810467	1					
ANR	810843	Identifier	glyph_index		810467	0					
ANR	810844	Argument	wmode		810467	2					
ANR	810845	Identifier	wmode		810467	0					
ANR	810846	Argument	sbw		810467	3					
ANR	810847	Identifier	sbw		810467	0					
ANR	810848	Label	done :	1229:1:48499:48503	810467	11	True				
ANR	810849	Identifier	done		810467	0					
ANR	810850	ExpressionStatement	"gs_glyph_data_free ( & glyph_data , ""gs_type42_default_get_metrics"" )"	1230:4:48509:48573	810467	12	True				
ANR	810851	CallExpression	"gs_glyph_data_free ( & glyph_data , ""gs_type42_default_get_metrics"" )"		810467	0					
ANR	810852	Callee	gs_glyph_data_free		810467	0					
ANR	810853	Identifier	gs_glyph_data_free		810467	0					
ANR	810854	ArgumentList	& glyph_data		810467	1					
ANR	810855	Argument	& glyph_data		810467	0					
ANR	810856	UnaryOperationExpression	& glyph_data		810467	0					
ANR	810857	UnaryOperator	&		810467	0					
ANR	810858	Identifier	glyph_data		810467	1					
ANR	810859	Argument	"""gs_type42_default_get_metrics"""		810467	1					
ANR	810860	PrimaryExpression	"""gs_type42_default_get_metrics"""		810467	0					
ANR	810861	ReturnStatement	return result ;	1231:4:48579:48592	810467	13	True				
ANR	810862	Identifier	result		810467	0					
ANR	810863	ReturnType	int		810467	1					
ANR	810864	Identifier	gs_type42_default_get_metrics		810467	2					
ANR	810865	ParameterList	"gs_font_type42 * pfont , uint glyph_index , gs_type42_metrics_options_t options , float * sbw"		810467	3					
ANR	810866	Parameter	gs_font_type42 * pfont	1175:30:46346:46367	810467	0	True				
ANR	810867	ParameterType	gs_font_type42 *		810467	0					
ANR	810868	Identifier	pfont		810467	1					
ANR	810869	Parameter	uint glyph_index	1175:54:46370:46385	810467	1	True				
ANR	810870	ParameterType	uint		810467	0					
ANR	810871	Identifier	glyph_index		810467	1					
ANR	810872	Parameter	gs_type42_metrics_options_t options	1176:30:46418:46452	810467	2	True				
ANR	810873	ParameterType	gs_type42_metrics_options_t		810467	0					
ANR	810874	Identifier	options		810467	1					
ANR	810875	Parameter	float * sbw	1176:67:46455:46464	810467	3	True				
ANR	810876	ParameterType	float *		810467	0					
ANR	810877	Identifier	sbw		810467	1					
ANR	810878	CFGEntryNode	ENTRY		810467		True				
ANR	810879	CFGExitNode	EXIT		810467		True				
ANR	810880	Symbol	& mat		810467						
ANR	810881	Symbol	code		810467						
ANR	810882	Symbol	glyph_data . bits . data		810467						
ANR	810883	Symbol	glyph_index		810467						
ANR	810884	Symbol	pfont -> memory		810467						
ANR	810885	Symbol	simple_glyph_metrics		810467						
ANR	810886	Symbol	flags		810467						
ANR	810887	Symbol	sbw		810467						
ANR	810888	Symbol	gdata		810467						
ANR	810889	Symbol	result		810467						
ANR	810890	Symbol	glyph_data . bits . size		810467						
ANR	810891	Symbol	TT_CG_MORE_COMPONENTS		810467						
ANR	810892	Symbol	options		810467						
ANR	810893	Symbol	wmode		810467						
ANR	810894	Symbol	& flags		810467						
ANR	810895	Symbol	factor		810467						
ANR	810896	Symbol	pfont -> data . unitsPerEm		810467						
ANR	810897	Symbol	gs_error_invalidfont		810467						
ANR	810898	Symbol	glyph_data . bits		810467						
ANR	810899	Symbol	mat		810467						
ANR	810900	Symbol	NULL		810467						
ANR	810901	Symbol	pfont		810467						
ANR	810902	Symbol	gs_type42_metrics_options_bbox_requested		810467						
ANR	810903	Symbol	comp_index		810467						
ANR	810904	Symbol	glyph_data		810467						
ANR	810905	Symbol	pfont -> data		810467						
ANR	810906	Symbol	gs_type42_metrics_options_wmode		810467						
ANR	810907	Symbol	TT_CG_USE_MY_METRICS		810467						
ANR	810908	Symbol	* pfont		810467						
ANR	810909	Symbol	* sbw		810467						
ANR	810910	Symbol	gs_note_error		810467						
ANR	810911	Symbol	glyph_data . memory		810467						
ANR	810912	Symbol	pfont -> data . get_metrics		810467						
ANR	810913	Symbol	gs_type42_metrics_options_sbw_requested		810467						
ANR	810914	Symbol	pfont -> data . get_outline		810467						
ANR	810915	Symbol	& gdata		810467						
ANR	810916	Symbol	S16		810467						
ANR	810917	Symbol	U16		810467						
ANR	810918	Symbol	& glyph_data		810467						
ANR	810919	Symbol	sbw_requested		810467						
ANR	810920	Symbol	bbox_requested		810467						
ANR	810921	Function	gs_type42_get_metrics	1233:0:48596:48777							
ANR	810922	FunctionDef	"gs_type42_get_metrics (gs_font_type42 * pfont , uint glyph_index , float sbw [ 4 ])"		810921	0					
ANR	810923	CompoundStatement		1236:0:48700:48777	810921	0					
ANR	810924	ReturnStatement	"return pfont -> data . get_metrics ( pfont , glyph_index , pfont -> WMode , sbw ) ;"	1237:4:48706:48775	810921	0	True				
ANR	810925	CallExpression	"pfont -> data . get_metrics ( pfont , glyph_index , pfont -> WMode , sbw )"		810921	0					
ANR	810926	Callee	pfont -> data . get_metrics		810921	0					
ANR	810927	MemberAccess	pfont -> data . get_metrics		810921	0					
ANR	810928	PtrMemberAccess	pfont -> data		810921	0					
ANR	810929	Identifier	pfont		810921	0					
ANR	810930	Identifier	data		810921	1					
ANR	810931	Identifier	get_metrics		810921	1					
ANR	810932	ArgumentList	pfont		810921	1					
ANR	810933	Argument	pfont		810921	0					
ANR	810934	Identifier	pfont		810921	0					
ANR	810935	Argument	glyph_index		810921	1					
ANR	810936	Identifier	glyph_index		810921	0					
ANR	810937	Argument	pfont -> WMode		810921	2					
ANR	810938	PtrMemberAccess	pfont -> WMode		810921	0					
ANR	810939	Identifier	pfont		810921	0					
ANR	810940	Identifier	WMode		810921	1					
ANR	810941	Argument	sbw		810921	3					
ANR	810942	Identifier	sbw		810921	0					
ANR	810943	ReturnType	int		810921	1					
ANR	810944	Identifier	gs_type42_get_metrics		810921	2					
ANR	810945	ParameterList	"gs_font_type42 * pfont , uint glyph_index , float sbw [ 4 ]"		810921	3					
ANR	810946	Parameter	gs_font_type42 * pfont	1234:22:48622:48643	810921	0	True				
ANR	810947	ParameterType	gs_font_type42 *		810921	0					
ANR	810948	Identifier	pfont		810921	1					
ANR	810949	Parameter	uint glyph_index	1234:46:48646:48661	810921	1	True				
ANR	810950	ParameterType	uint		810921	0					
ANR	810951	Identifier	glyph_index		810921	1					
ANR	810952	Parameter	float sbw [ 4 ]	1235:22:48686:48697	810921	2	True				
ANR	810953	ParameterType	float [ 4 ]		810921	0					
ANR	810954	Identifier	sbw		810921	1					
ANR	810955	CFGEntryNode	ENTRY		810921		True				
ANR	810956	CFGExitNode	EXIT		810921		True				
ANR	810957	Symbol	* pfont		810921						
ANR	810958	Symbol	pfont -> WMode		810921						
ANR	810959	Symbol	pfont -> data . get_metrics		810921						
ANR	810960	Symbol	glyph_index		810921						
ANR	810961	Symbol	pfont		810921						
ANR	810962	Symbol	sbw		810921						
ANR	810963	Symbol	pfont -> data		810921						
ANR	810964	Function	gs_type42_append	1252:0:49152:50373							
ANR	810965	FunctionDef	"gs_type42_append (uint glyph_index , gs_gstate * pgs , gx_path * ppath , gs_text_enum_t * penum , gs_font * pfont , bool charpath_flag)"		810964	0					
ANR	810966	CompoundStatement		1256:0:49318:50373	810964	0					
ANR	810967	IdentifierDeclStatement	const gs_log2_scale_point * pscale = & penum -> log2_scale ;	1257:4:49324:49379	810964	0	True				
ANR	810968	IdentifierDecl	* pscale = & penum -> log2_scale		810964	0					
ANR	810969	IdentifierDeclType	const gs_log2_scale_point *		810964	0					
ANR	810970	Identifier	pscale		810964	1					
ANR	810971	AssignmentExpression	* pscale = & penum -> log2_scale		810964	2		=			
ANR	810972	Identifier	pscale		810964	0					
ANR	810973	UnaryOperationExpression	& penum -> log2_scale		810964	1					
ANR	810974	UnaryOperator	&		810964	0					
ANR	810975	PtrMemberAccess	penum -> log2_scale		810964	1					
ANR	810976	Identifier	penum		810964	0					
ANR	810977	Identifier	log2_scale		810964	1					
ANR	810978	IdentifierDeclStatement	cached_fm_pair * pair = penum -> pair ;	1258:4:49385:49419	810964	1	True				
ANR	810979	IdentifierDecl	* pair = penum -> pair		810964	0					
ANR	810980	IdentifierDeclType	cached_fm_pair *		810964	0					
ANR	810981	Identifier	pair		810964	1					
ANR	810982	AssignmentExpression	* pair = penum -> pair		810964	2		=			
ANR	810983	Identifier	pair		810964	0					
ANR	810984	PtrMemberAccess	penum -> pair		810964	1					
ANR	810985	Identifier	penum		810964	0					
ANR	810986	Identifier	pair		810964	1					
ANR	810987	IdentifierDeclStatement	"int code = append_outline_fitted ( glyph_index , & ctm_only ( pgs ) , ppath , pair , pscale , charpath_flag ) ;"	1259:4:49425:49546	810964	2	True				
ANR	810988	IdentifierDecl	"code = append_outline_fitted ( glyph_index , & ctm_only ( pgs ) , ppath , pair , pscale , charpath_flag )"		810964	0					
ANR	810989	IdentifierDeclType	int		810964	0					
ANR	810990	Identifier	code		810964	1					
ANR	810991	AssignmentExpression	"code = append_outline_fitted ( glyph_index , & ctm_only ( pgs ) , ppath , pair , pscale , charpath_flag )"		810964	2		=			
ANR	810992	Identifier	code		810964	0					
ANR	810993	CallExpression	"append_outline_fitted ( glyph_index , & ctm_only ( pgs ) , ppath , pair , pscale , charpath_flag )"		810964	1					
ANR	810994	Callee	append_outline_fitted		810964	0					
ANR	810995	Identifier	append_outline_fitted		810964	0					
ANR	810996	ArgumentList	glyph_index		810964	1					
ANR	810997	Argument	glyph_index		810964	0					
ANR	810998	Identifier	glyph_index		810964	0					
ANR	810999	Argument	& ctm_only ( pgs )		810964	1					
ANR	811000	UnaryOperationExpression	& ctm_only ( pgs )		810964	0					
ANR	811001	UnaryOperator	&		810964	0					
ANR	811002	CallExpression	ctm_only ( pgs )		810964	1					
ANR	811003	Callee	ctm_only		810964	0					
ANR	811004	Identifier	ctm_only		810964	0					
ANR	811005	ArgumentList	pgs		810964	1					
ANR	811006	Argument	pgs		810964	0					
ANR	811007	Identifier	pgs		810964	0					
ANR	811008	Argument	ppath		810964	2					
ANR	811009	Identifier	ppath		810964	0					
ANR	811010	Argument	pair		810964	3					
ANR	811011	Identifier	pair		810964	0					
ANR	811012	Argument	pscale		810964	4					
ANR	811013	Identifier	pscale		810964	0					
ANR	811014	Argument	charpath_flag		810964	5					
ANR	811015	Identifier	charpath_flag		810964	0					
ANR	811016	IfStatement	if ( code < 0 )		810964	3					
ANR	811017	Condition	code < 0	1262:8:49557:49564	810964	0	True				
ANR	811018	RelationalExpression	code < 0		810964	0		<			
ANR	811019	Identifier	code		810964	0					
ANR	811020	PrimaryExpression	0		810964	1					
ANR	811021	CompoundStatement		7:18:248:248	810964	1					
ANR	811022	IfStatement	if ( pgs -> in_cachedevice == CACHE_DEVICE_CACHING )		810964	0					
ANR	811023	Condition	pgs -> in_cachedevice == CACHE_DEVICE_CACHING	1263:12:49581:49623	810964	0	True				
ANR	811024	EqualityExpression	pgs -> in_cachedevice == CACHE_DEVICE_CACHING		810964	0		==			
ANR	811025	PtrMemberAccess	pgs -> in_cachedevice		810964	0					
ANR	811026	Identifier	pgs		810964	0					
ANR	811027	Identifier	in_cachedevice		810964	1					
ANR	811028	Identifier	CACHE_DEVICE_CACHING		810964	1					
ANR	811029	CompoundStatement		8:57:307:307	810964	1					
ANR	811030	Statement	gs_show_enum	1269:12:49928:49939	810964	0	True				
ANR	811031	Statement	*	1269:25:49941:49941	810964	1	True				
ANR	811032	Statement	const	1269:26:49942:49946	810964	2	True				
ANR	811033	ExpressionStatement	penum_s = ( gs_show_enum * ) penum	1269:32:49948:49979	810964	3	True				
ANR	811034	AssignmentExpression	penum_s = ( gs_show_enum * ) penum		810964	0		=			
ANR	811035	Identifier	penum_s		810964	0					
ANR	811036	CastExpression	( gs_show_enum * ) penum		810964	1					
ANR	811037	CastTarget	gs_show_enum *		810964	0					
ANR	811038	Identifier	penum		810964	1					
ANR	811039	IfStatement	if ( penum_s -> cc != NULL )		810964	4					
ANR	811040	Condition	penum_s -> cc != NULL	1271:16:49998:50016	810964	0	True				
ANR	811041	EqualityExpression	penum_s -> cc != NULL		810964	0		!=			
ANR	811042	PtrMemberAccess	penum_s -> cc		810964	0					
ANR	811043	Identifier	penum_s		810964	0					
ANR	811044	Identifier	cc		810964	1					
ANR	811045	Identifier	NULL		810964	1					
ANR	811046	CompoundStatement		16:37:700:700	810964	1					
ANR	811047	ExpressionStatement	"gx_free_cached_char ( pfont -> dir , penum_s -> cc )"	1272:16:50037:50081	810964	0	True				
ANR	811048	CallExpression	"gx_free_cached_char ( pfont -> dir , penum_s -> cc )"		810964	0					
ANR	811049	Callee	gx_free_cached_char		810964	0					
ANR	811050	Identifier	gx_free_cached_char		810964	0					
ANR	811051	ArgumentList	pfont -> dir		810964	1					
ANR	811052	Argument	pfont -> dir		810964	0					
ANR	811053	PtrMemberAccess	pfont -> dir		810964	0					
ANR	811054	Identifier	pfont		810964	0					
ANR	811055	Identifier	dir		810964	1					
ANR	811056	Argument	penum_s -> cc		810964	1					
ANR	811057	PtrMemberAccess	penum_s -> cc		810964	0					
ANR	811058	Identifier	penum_s		810964	0					
ANR	811059	Identifier	cc		810964	1					
ANR	811060	ExpressionStatement	penum_s -> cc = NULL	1273:16:50099:50117	810964	1	True				
ANR	811061	AssignmentExpression	penum_s -> cc = NULL		810964	0		=			
ANR	811062	PtrMemberAccess	penum_s -> cc		810964	0					
ANR	811063	Identifier	penum_s		810964	0					
ANR	811064	Identifier	cc		810964	1					
ANR	811065	Identifier	NULL		810964	1					
ANR	811066	ReturnStatement	return code ;	1276:8:50151:50162	810964	1	True				
ANR	811067	Identifier	code		810964	0					
ANR	811068	ExpressionStatement	"code = gx_setcurrentpoint_from_path ( pgs , ppath )"	1278:4:50174:50221	810964	4	True				
ANR	811069	AssignmentExpression	"code = gx_setcurrentpoint_from_path ( pgs , ppath )"		810964	0		=			
ANR	811070	Identifier	code		810964	0					
ANR	811071	CallExpression	"gx_setcurrentpoint_from_path ( pgs , ppath )"		810964	1					
ANR	811072	Callee	gx_setcurrentpoint_from_path		810964	0					
ANR	811073	Identifier	gx_setcurrentpoint_from_path		810964	0					
ANR	811074	ArgumentList	pgs		810964	1					
ANR	811075	Argument	pgs		810964	0					
ANR	811076	Identifier	pgs		810964	0					
ANR	811077	Argument	ppath		810964	1					
ANR	811078	Identifier	ppath		810964	0					
ANR	811079	IfStatement	if ( code < 0 )		810964	5					
ANR	811080	Condition	code < 0	1279:8:50231:50238	810964	0	True				
ANR	811081	RelationalExpression	code < 0		810964	0		<			
ANR	811082	Identifier	code		810964	0					
ANR	811083	PrimaryExpression	0		810964	1					
ANR	811084	ReturnStatement	return code ;	1280:8:50249:50260	810964	1	True				
ANR	811085	Identifier	code		810964	0					
ANR	811086	ReturnStatement	"return gs_gstate_setflat ( pgs , gs_char_flatness ( pgs , 1.0 ) ) ;"	1282:4:50314:50371	810964	6	True				
ANR	811087	CallExpression	"gs_gstate_setflat ( pgs , gs_char_flatness ( pgs , 1.0 ) )"		810964	0					
ANR	811088	Callee	gs_gstate_setflat		810964	0					
ANR	811089	Identifier	gs_gstate_setflat		810964	0					
ANR	811090	ArgumentList	pgs		810964	1					
ANR	811091	Argument	pgs		810964	0					
ANR	811092	Identifier	pgs		810964	0					
ANR	811093	Argument	"gs_char_flatness ( pgs , 1.0 )"		810964	1					
ANR	811094	CallExpression	"gs_char_flatness ( pgs , 1.0 )"		810964	0					
ANR	811095	Callee	gs_char_flatness		810964	0					
ANR	811096	Identifier	gs_char_flatness		810964	0					
ANR	811097	ArgumentList	pgs		810964	1					
ANR	811098	Argument	pgs		810964	0					
ANR	811099	Identifier	pgs		810964	0					
ANR	811100	Argument	1.0		810964	1					
ANR	811101	PrimaryExpression	1.0		810964	0					
ANR	811102	ReturnType	int		810964	1					
ANR	811103	Identifier	gs_type42_append		810964	2					
ANR	811104	ParameterList	"uint glyph_index , gs_gstate * pgs , gx_path * ppath , gs_text_enum_t * penum , gs_font * pfont , bool charpath_flag"		810964	3					
ANR	811105	Parameter	uint glyph_index	1253:17:49173:49188	810964	0	True				
ANR	811106	ParameterType	uint		810964	0					
ANR	811107	Identifier	glyph_index		810964	1					
ANR	811108	Parameter	gs_gstate * pgs	1253:35:49191:49205	810964	1	True				
ANR	811109	ParameterType	gs_gstate *		810964	0					
ANR	811110	Identifier	pgs		810964	1					
ANR	811111	Parameter	gx_path * ppath	1254:17:49225:49239	810964	2	True				
ANR	811112	ParameterType	gx_path *		810964	0					
ANR	811113	Identifier	ppath		810964	1					
ANR	811114	Parameter	gs_text_enum_t * penum	1254:34:49242:49262	810964	3	True				
ANR	811115	ParameterType	gs_text_enum_t *		810964	0					
ANR	811116	Identifier	penum		810964	1					
ANR	811117	Parameter	gs_font * pfont	1254:57:49265:49278	810964	4	True				
ANR	811118	ParameterType	gs_font *		810964	0					
ANR	811119	Identifier	pfont		810964	1					
ANR	811120	Parameter	bool charpath_flag	1255:17:49298:49315	810964	5	True				
ANR	811121	ParameterType	bool		810964	0					
ANR	811122	Identifier	charpath_flag		810964	1					
ANR	811123	CFGEntryNode	ENTRY		810964		True				
ANR	811124	CFGExitNode	EXIT		810964		True				
ANR	811125	Symbol	* penum		810964						
ANR	811126	Symbol	code		810964						
ANR	811127	Symbol	glyph_index		810964						
ANR	811128	Symbol	* pgs		810964						
ANR	811129	Symbol	ppath		810964						
ANR	811130	Symbol	& penum -> log2_scale		810964						
ANR	811131	Symbol	gx_setcurrentpoint_from_path		810964						
ANR	811132	Symbol	CACHE_DEVICE_CACHING		810964						
ANR	811133	Symbol	* penum_s		810964						
ANR	811134	Symbol	charpath_flag		810964						
ANR	811135	Symbol	pgs -> in_cachedevice		810964						
ANR	811136	Symbol	pgs		810964						
ANR	811137	Symbol	gs_char_flatness		810964						
ANR	811138	Symbol	gs_gstate_setflat		810964						
ANR	811139	Symbol	& ctm_only		810964						
ANR	811140	Symbol	NULL		810964						
ANR	811141	Symbol	penum_s -> cc		810964						
ANR	811142	Symbol	pfont		810964						
ANR	811143	Symbol	append_outline_fitted		810964						
ANR	811144	Symbol	penum		810964						
ANR	811145	Symbol	pair		810964						
ANR	811146	Symbol	* pfont		810964						
ANR	811147	Symbol	pfont -> dir		810964						
ANR	811148	Symbol	penum -> pair		810964						
ANR	811149	Symbol	pscale		810964						
ANR	811150	Symbol	penum_s		810964						
ANR	811151	Function	append_simple	1301:0:50980:58225							
ANR	811152	FunctionDef	"append_simple (const byte * gdata , float sbw [ 4 ] , const gs_matrix_fixed * pmat , gx_path * ppath , gs_fixed_point * ppts , gs_font_type42 * pfont , bool subglyph)"		811151	0					
ANR	811153	CompoundStatement		1305:0:51172:58225	811151	0					
ANR	811154	IdentifierDeclStatement	int numContours = S16 ( gdata ) ;	1306:4:51178:51206	811151	0	True				
ANR	811155	IdentifierDecl	numContours = S16 ( gdata )		811151	0					
ANR	811156	IdentifierDeclType	int		811151	0					
ANR	811157	Identifier	numContours		811151	1					
ANR	811158	AssignmentExpression	numContours = S16 ( gdata )		811151	2		=			
ANR	811159	Identifier	numContours		811151	0					
ANR	811160	CallExpression	S16 ( gdata )		811151	1					
ANR	811161	Callee	S16		811151	0					
ANR	811162	Identifier	S16		811151	0					
ANR	811163	ArgumentList	gdata		811151	1					
ANR	811164	Argument	gdata		811151	0					
ANR	811165	Identifier	gdata		811151	0					
ANR	811166	IdentifierDeclStatement	const byte * pends = gdata + 10 ;	1307:4:51212:51242	811151	1	True				
ANR	811167	IdentifierDecl	* pends = gdata + 10		811151	0					
ANR	811168	IdentifierDeclType	const byte *		811151	0					
ANR	811169	Identifier	pends		811151	1					
ANR	811170	AssignmentExpression	* pends = gdata + 10		811151	2		=			
ANR	811171	Identifier	pends		811151	0					
ANR	811172	AdditiveExpression	gdata + 10		811151	1		+			
ANR	811173	Identifier	gdata		811151	0					
ANR	811174	PrimaryExpression	10		811151	1					
ANR	811175	IdentifierDeclStatement	const byte * pinstr = pends + numContours * 2 ;	1308:4:51248:51292	811151	2	True				
ANR	811176	IdentifierDecl	* pinstr = pends + numContours * 2		811151	0					
ANR	811177	IdentifierDeclType	const byte *		811151	0					
ANR	811178	Identifier	pinstr		811151	1					
ANR	811179	AssignmentExpression	* pinstr = pends + numContours * 2		811151	2		=			
ANR	811180	Identifier	pinstr		811151	0					
ANR	811181	AdditiveExpression	pends + numContours * 2		811151	1		+			
ANR	811182	Identifier	pends		811151	0					
ANR	811183	MultiplicativeExpression	numContours * 2		811151	1		*			
ANR	811184	Identifier	numContours		811151	0					
ANR	811185	PrimaryExpression	2		811151	1					
ANR	811186	IdentifierDeclStatement	const byte * pflags ;	1309:4:51298:51316	811151	3	True				
ANR	811187	IdentifierDecl	* pflags		811151	0					
ANR	811188	IdentifierDeclType	const byte *		811151	0					
ANR	811189	Identifier	pflags		811151	1					
ANR	811190	IdentifierDeclStatement	uint npoints ;	1310:4:51322:51334	811151	4	True				
ANR	811191	IdentifierDecl	npoints		811151	0					
ANR	811192	IdentifierDeclType	uint		811151	0					
ANR	811193	Identifier	npoints		811151	1					
ANR	811194	IdentifierDeclStatement	"const byte * pxc , * pyc ;"	1311:4:51340:51361	811151	5	True				
ANR	811195	IdentifierDecl	* pxc		811151	0					
ANR	811196	IdentifierDeclType	const byte *		811151	0					
ANR	811197	Identifier	pxc		811151	1					
ANR	811198	IdentifierDecl	* pyc		811151	1					
ANR	811199	IdentifierDeclType	const byte *		811151	0					
ANR	811200	Identifier	pyc		811151	1					
ANR	811201	IdentifierDeclStatement	int code ;	1312:4:51367:51375	811151	6	True				
ANR	811202	IdentifierDecl	code		811151	0					
ANR	811203	IdentifierDeclType	int		811151	0					
ANR	811204	Identifier	code		811151	1					
ANR	811205	IfStatement	if ( numContours == 0 )		811151	7					
ANR	811206	Condition	numContours == 0	1314:8:51386:51401	811151	0	True				
ANR	811207	EqualityExpression	numContours == 0		811151	0		==			
ANR	811208	Identifier	numContours		811151	0					
ANR	811209	PrimaryExpression	0		811151	1					
ANR	811210	ReturnStatement	return 0 ;	1315:8:51412:51420	811151	1	True				
ANR	811211	PrimaryExpression	0		811151	0					
ANR	811212	CompoundStatement		20:8:561:578	811151	8					
ANR	811213	IdentifierDeclStatement	const byte * pf = pflags = pinstr + 2 + U16 ( pinstr ) ;	1322:8:51621:51671	811151	0	True				
ANR	811214	IdentifierDecl	* pf = pflags = pinstr + 2 + U16 ( pinstr )		811151	0					
ANR	811215	IdentifierDeclType	const byte *		811151	0					
ANR	811216	Identifier	pf		811151	1					
ANR	811217	AssignmentExpression	* pf = pflags = pinstr + 2 + U16 ( pinstr )		811151	2		=			
ANR	811218	Identifier	pf		811151	0					
ANR	811219	AssignmentExpression	pflags = pinstr + 2 + U16 ( pinstr )		811151	1		=			
ANR	811220	Identifier	pflags		811151	0					
ANR	811221	AdditiveExpression	pinstr + 2 + U16 ( pinstr )		811151	1		+			
ANR	811222	Identifier	pinstr		811151	0					
ANR	811223	AdditiveExpression	2 + U16 ( pinstr )		811151	1		+			
ANR	811224	PrimaryExpression	2		811151	0					
ANR	811225	CallExpression	U16 ( pinstr )		811151	1					
ANR	811226	Callee	U16		811151	0					
ANR	811227	Identifier	U16		811151	0					
ANR	811228	ArgumentList	pinstr		811151	1					
ANR	811229	Argument	pinstr		811151	0					
ANR	811230	Identifier	pinstr		811151	0					
ANR	811231	IdentifierDeclStatement	uint xbytes = npoints = U16 ( pinstr - 2 ) + 1 ;	1323:8:51681:51724	811151	1	True				
ANR	811232	IdentifierDecl	xbytes = npoints = U16 ( pinstr - 2 ) + 1		811151	0					
ANR	811233	IdentifierDeclType	uint		811151	0					
ANR	811234	Identifier	xbytes		811151	1					
ANR	811235	AssignmentExpression	xbytes = npoints = U16 ( pinstr - 2 ) + 1		811151	2		=			
ANR	811236	Identifier	xbytes		811151	0					
ANR	811237	AssignmentExpression	npoints = U16 ( pinstr - 2 ) + 1		811151	1		=			
ANR	811238	Identifier	npoints		811151	0					
ANR	811239	AdditiveExpression	U16 ( pinstr - 2 ) + 1		811151	1		+			
ANR	811240	CallExpression	U16 ( pinstr - 2 )		811151	0					
ANR	811241	Callee	U16		811151	0					
ANR	811242	Identifier	U16		811151	0					
ANR	811243	ArgumentList	pinstr - 2		811151	1					
ANR	811244	Argument	pinstr - 2		811151	0					
ANR	811245	AdditiveExpression	pinstr - 2		811151	0		-			
ANR	811246	Identifier	pinstr		811151	0					
ANR	811247	PrimaryExpression	2		811151	1					
ANR	811248	PrimaryExpression	1		811151	1					
ANR	811249	IdentifierDeclStatement	uint np = npoints ;	1324:8:51734:51751	811151	2	True				
ANR	811250	IdentifierDecl	np = npoints		811151	0					
ANR	811251	IdentifierDeclType	uint		811151	0					
ANR	811252	Identifier	np		811151	1					
ANR	811253	AssignmentExpression	np = npoints		811151	2		=			
ANR	811254	Identifier	npoints		811151	0					
ANR	811255	Identifier	npoints		811151	1					
ANR	811256	WhileStatement	while ( np > 0 )		811151	3					
ANR	811257	Condition	np > 0	1326:15:51769:51774	811151	0	True				
ANR	811258	RelationalExpression	np > 0		811151	0		>			
ANR	811259	Identifier	np		811151	0					
ANR	811260	PrimaryExpression	0		811151	1					
ANR	811261	CompoundStatement		24:12:650:697	811151	1					
ANR	811262	IdentifierDeclStatement	byte flags = * pf ++ ;	1327:12:51791:51809	811151	0	True				
ANR	811263	IdentifierDecl	flags = * pf ++		811151	0					
ANR	811264	IdentifierDeclType	byte		811151	0					
ANR	811265	Identifier	flags		811151	1					
ANR	811266	AssignmentExpression	flags = * pf ++		811151	2		=			
ANR	811267	Identifier	flags		811151	0					
ANR	811268	UnaryOperationExpression	* pf ++		811151	1					
ANR	811269	UnaryOperator	*		811151	0					
ANR	811270	PostIncDecOperationExpression	pf ++		811151	1					
ANR	811271	Identifier	pf		811151	0					
ANR	811272	IncDec	++		811151	1					
ANR	811273	IdentifierDeclStatement	uint reps = ( flags & gf_Repeat ? * pf ++ + 1 : 1 ) ;	1328:12:51823:51870	811151	1	True				
ANR	811274	IdentifierDecl	reps = ( flags & gf_Repeat ? * pf ++ + 1 : 1 )		811151	0					
ANR	811275	IdentifierDeclType	uint		811151	0					
ANR	811276	Identifier	reps		811151	1					
ANR	811277	AssignmentExpression	reps = ( flags & gf_Repeat ? * pf ++ + 1 : 1 )		811151	2		=			
ANR	811278	Identifier	reps		811151	0					
ANR	811279	ConditionalExpression	flags & gf_Repeat ? * pf ++ + 1 : 1		811151	1					
ANR	811280	Condition	flags & gf_Repeat		811151	0					
ANR	811281	BitAndExpression	flags & gf_Repeat		811151	0		&			
ANR	811282	Identifier	flags		811151	0					
ANR	811283	Identifier	gf_Repeat		811151	1					
ANR	811284	AdditiveExpression	* pf ++ + 1		811151	1		+			
ANR	811285	UnaryOperationExpression	* pf ++		811151	0					
ANR	811286	UnaryOperator	*		811151	0					
ANR	811287	PostIncDecOperationExpression	pf ++		811151	1					
ANR	811288	Identifier	pf		811151	0					
ANR	811289	IncDec	++		811151	1					
ANR	811290	PrimaryExpression	1		811151	1					
ANR	811291	PrimaryExpression	1		811151	2					
ANR	811292	IfStatement	if ( ! ( flags & gf_xShort ) )		811151	2					
ANR	811293	Condition	! ( flags & gf_xShort )	1330:16:51889:51908	811151	0	True				
ANR	811294	UnaryOperationExpression	! ( flags & gf_xShort )		811151	0					
ANR	811295	UnaryOperator	!		811151	0					
ANR	811296	BitAndExpression	flags & gf_xShort		811151	1		&			
ANR	811297	Identifier	flags		811151	0					
ANR	811298	Identifier	gf_xShort		811151	1					
ANR	811299	CompoundStatement		26:38:738:738	811151	1					
ANR	811300	IfStatement	if ( flags & gf_xSame )		811151	0					
ANR	811301	Condition	flags & gf_xSame	1331:20:51933:51948	811151	0	True				
ANR	811302	BitAndExpression	flags & gf_xSame		811151	0		&			
ANR	811303	Identifier	flags		811151	0					
ANR	811304	Identifier	gf_xSame		811151	1					
ANR	811305	ExpressionStatement	xbytes -= reps	1332:20:51971:51985	811151	1	True				
ANR	811306	AssignmentExpression	xbytes -= reps		811151	0		-=			
ANR	811307	Identifier	xbytes		811151	0					
ANR	811308	Identifier	reps		811151	1					
ANR	811309	ElseStatement	else		811151	0					
ANR	811310	ExpressionStatement	xbytes += reps	1334:20:52028:52042	811151	0	True				
ANR	811311	AssignmentExpression	xbytes += reps		811151	0		+=			
ANR	811312	Identifier	xbytes		811151	0					
ANR	811313	Identifier	reps		811151	1					
ANR	811314	ExpressionStatement	np -= reps	1336:12:52070:52080	811151	3	True				
ANR	811315	AssignmentExpression	np -= reps		811151	0		-=			
ANR	811316	Identifier	np		811151	0					
ANR	811317	Identifier	reps		811151	1					
ANR	811318	ExpressionStatement	pxc = pf	1338:8:52100:52108	811151	4	True				
ANR	811319	AssignmentExpression	pxc = pf		811151	0		=			
ANR	811320	Identifier	pxc		811151	0					
ANR	811321	Identifier	pf		811151	1					
ANR	811322	ExpressionStatement	pyc = pxc + xbytes	1339:8:52118:52136	811151	5	True				
ANR	811323	AssignmentExpression	pyc = pxc + xbytes		811151	0		=			
ANR	811324	Identifier	pyc		811151	0					
ANR	811325	AdditiveExpression	pxc + xbytes		811151	1		+			
ANR	811326	Identifier	pxc		811151	0					
ANR	811327	Identifier	xbytes		811151	1					
ANR	811328	CompoundStatement		50:8:1329:1380	811151	9					
ANR	811329	IdentifierDeclStatement	"uint i , np ;"	1345:8:52194:52204	811151	0	True				
ANR	811330	IdentifierDecl	i		811151	0					
ANR	811331	IdentifierDeclType	uint		811151	0					
ANR	811332	Identifier	i		811151	1					
ANR	811333	IdentifierDecl	np		811151	1					
ANR	811334	IdentifierDeclType	uint		811151	0					
ANR	811335	Identifier	np		811151	1					
ANR	811336	IdentifierDeclStatement	float offset = 0 ;	1346:8:52214:52230	811151	1	True				
ANR	811337	IdentifierDecl	offset = 0		811151	0					
ANR	811338	IdentifierDeclType	float		811151	0					
ANR	811339	Identifier	offset		811151	1					
ANR	811340	AssignmentExpression	offset = 0		811151	2		=			
ANR	811341	Identifier	offset		811151	0					
ANR	811342	PrimaryExpression	0		811151	1					
ANR	811343	IdentifierDeclStatement	gs_fixed_point pt ;	1347:8:52240:52257	811151	2	True				
ANR	811344	IdentifierDecl	pt		811151	0					
ANR	811345	IdentifierDeclType	gs_fixed_point		811151	0					
ANR	811346	Identifier	pt		811151	1					
ANR	811347	IdentifierDeclStatement	double factor = 1.0 / pfont -> data . unitsPerEm ;	1348:8:52267:52311	811151	3	True				
ANR	811348	IdentifierDecl	factor = 1.0 / pfont -> data . unitsPerEm		811151	0					
ANR	811349	IdentifierDeclType	double		811151	0					
ANR	811350	Identifier	factor		811151	1					
ANR	811351	AssignmentExpression	factor = 1.0 / pfont -> data . unitsPerEm		811151	2		=			
ANR	811352	Identifier	factor		811151	0					
ANR	811353	MultiplicativeExpression	1.0 / pfont -> data . unitsPerEm		811151	1		/			
ANR	811354	PrimaryExpression	1.0		811151	0					
ANR	811355	MemberAccess	pfont -> data . unitsPerEm		811151	1					
ANR	811356	PtrMemberAccess	pfont -> data		811151	0					
ANR	811357	Identifier	pfont		811151	0					
ANR	811358	Identifier	data		811151	1					
ANR	811359	Identifier	unitsPerEm		811151	1					
ANR	811360	IdentifierDeclStatement	byte flags = * pflags ++ ;	1353:8:52470:52492	811151	4	True				
ANR	811361	IdentifierDecl	flags = * pflags ++		811151	0					
ANR	811362	IdentifierDeclType	byte		811151	0					
ANR	811363	Identifier	flags		811151	1					
ANR	811364	AssignmentExpression	flags = * pflags ++		811151	2		=			
ANR	811365	Identifier	flags		811151	0					
ANR	811366	UnaryOperationExpression	* pflags ++		811151	1					
ANR	811367	UnaryOperator	*		811151	0					
ANR	811368	PostIncDecOperationExpression	pflags ++		811151	1					
ANR	811369	Identifier	pflags		811151	0					
ANR	811370	IncDec	++		811151	1					
ANR	811371	IdentifierDeclStatement	uint reps = ( flags & gf_Repeat ? * pflags ++ + 1 : 1 ) ;	1354:8:52502:52553	811151	5	True				
ANR	811372	IdentifierDecl	reps = ( flags & gf_Repeat ? * pflags ++ + 1 : 1 )		811151	0					
ANR	811373	IdentifierDeclType	uint		811151	0					
ANR	811374	Identifier	reps		811151	1					
ANR	811375	AssignmentExpression	reps = ( flags & gf_Repeat ? * pflags ++ + 1 : 1 )		811151	2		=			
ANR	811376	Identifier	reps		811151	0					
ANR	811377	ConditionalExpression	flags & gf_Repeat ? * pflags ++ + 1 : 1		811151	1					
ANR	811378	Condition	flags & gf_Repeat		811151	0					
ANR	811379	BitAndExpression	flags & gf_Repeat		811151	0		&			
ANR	811380	Identifier	flags		811151	0					
ANR	811381	Identifier	gf_Repeat		811151	1					
ANR	811382	AdditiveExpression	* pflags ++ + 1		811151	1		+			
ANR	811383	UnaryOperationExpression	* pflags ++		811151	0					
ANR	811384	UnaryOperator	*		811151	0					
ANR	811385	PostIncDecOperationExpression	pflags ++		811151	1					
ANR	811386	Identifier	pflags		811151	0					
ANR	811387	IncDec	++		811151	1					
ANR	811388	PrimaryExpression	1		811151	1					
ANR	811389	PrimaryExpression	1		811151	2					
ANR	811390	IfStatement	if ( ! subglyph )		811151	6					
ANR	811391	Condition	! subglyph	1356:12:52568:52576	811151	0	True				
ANR	811392	UnaryOperationExpression	! subglyph		811151	0					
ANR	811393	UnaryOperator	!		811151	0					
ANR	811394	Identifier	subglyph		811151	1					
ANR	811395	CompoundStatement		53:12:1420:1445	811151	1					
ANR	811396	IdentifierDeclStatement	int xmin = S16 ( gdata + 2 ) ;	1357:12:52593:52618	811151	0	True				
ANR	811397	IdentifierDecl	xmin = S16 ( gdata + 2 )		811151	0					
ANR	811398	IdentifierDeclType	int		811151	0					
ANR	811399	Identifier	xmin		811151	1					
ANR	811400	AssignmentExpression	xmin = S16 ( gdata + 2 )		811151	2		=			
ANR	811401	Identifier	xmin		811151	0					
ANR	811402	CallExpression	S16 ( gdata + 2 )		811151	1					
ANR	811403	Callee	S16		811151	0					
ANR	811404	Identifier	S16		811151	0					
ANR	811405	ArgumentList	gdata + 2		811151	1					
ANR	811406	Argument	gdata + 2		811151	0					
ANR	811407	AdditiveExpression	gdata + 2		811151	0		+			
ANR	811408	Identifier	gdata		811151	0					
ANR	811409	PrimaryExpression	2		811151	1					
ANR	811410	ExpressionStatement	offset = sbw [ 0 ] - xmin * factor	1359:12:52672:52703	811151	1	True				
ANR	811411	AssignmentExpression	offset = sbw [ 0 ] - xmin * factor		811151	0		=			
ANR	811412	Identifier	offset		811151	0					
ANR	811413	AdditiveExpression	sbw [ 0 ] - xmin * factor		811151	1		-			
ANR	811414	ArrayIndexing	sbw [ 0 ]		811151	0					
ANR	811415	Identifier	sbw		811151	0					
ANR	811416	PrimaryExpression	0		811151	1					
ANR	811417	MultiplicativeExpression	xmin * factor		811151	1		*			
ANR	811418	Identifier	xmin		811151	0					
ANR	811419	Identifier	factor		811151	1					
ANR	811420	ExpressionStatement	"gs_point_transform2fixed ( pmat , offset , 0.0 , & pt )"	1361:8:52723:52771	811151	7	True				
ANR	811421	CallExpression	"gs_point_transform2fixed ( pmat , offset , 0.0 , & pt )"		811151	0					
ANR	811422	Callee	gs_point_transform2fixed		811151	0					
ANR	811423	Identifier	gs_point_transform2fixed		811151	0					
ANR	811424	ArgumentList	pmat		811151	1					
ANR	811425	Argument	pmat		811151	0					
ANR	811426	Identifier	pmat		811151	0					
ANR	811427	Argument	offset		811151	1					
ANR	811428	Identifier	offset		811151	0					
ANR	811429	Argument	0.0		811151	2					
ANR	811430	PrimaryExpression	0.0		811151	0					
ANR	811431	Argument	& pt		811151	3					
ANR	811432	UnaryOperationExpression	& pt		811151	0					
ANR	811433	UnaryOperator	&		811151	0					
ANR	811434	Identifier	pt		811151	1					
ANR	811435	ForStatement	"for ( i = 0 , np = 0 ; i < numContours ; ++ i )"		811151	8					
ANR	811436	ForInit	"i = 0 , np = 0 ;"	1362:13:52786:52799	811151	0	True				
ANR	811437	Expression	"i = 0 , np = 0"		811151	0					
ANR	811438	AssignmentExpression	i = 0		811151	0		=			
ANR	811439	Identifier	i		811151	0					
ANR	811440	PrimaryExpression	0		811151	1					
ANR	811441	AssignmentExpression	np = 0		811151	1		=			
ANR	811442	Identifier	np		811151	0					
ANR	811443	PrimaryExpression	0		811151	1					
ANR	811444	Condition	i < numContours	1362:28:52801:52815	811151	1	True				
ANR	811445	RelationalExpression	i < numContours		811151	0		<			
ANR	811446	Identifier	i		811151	0					
ANR	811447	Identifier	numContours		811151	1					
ANR	811448	UnaryExpression	++ i	1362:45:52818:52820	811151	2	True				
ANR	811449	IncDec	++		811151	0					
ANR	811450	Identifier	i		811151	1					
ANR	811451	CompoundStatement		65:12:1892:1917	811151	3					
ANR	811452	IdentifierDeclStatement	bool move = true ;	1363:12:52837:52853	811151	0	True				
ANR	811453	IdentifierDecl	move = true		811151	0					
ANR	811454	IdentifierDeclType	bool		811151	0					
ANR	811455	Identifier	move		811151	1					
ANR	811456	AssignmentExpression	move = true		811151	2		=			
ANR	811457	Identifier	true		811151	0					
ANR	811458	Identifier	true		811151	1					
ANR	811459	IdentifierDeclStatement	bool off_curve = false ;	1364:12:52867:52889	811151	1	True				
ANR	811460	IdentifierDecl	off_curve = false		811151	0					
ANR	811461	IdentifierDeclType	bool		811151	0					
ANR	811462	Identifier	off_curve		811151	1					
ANR	811463	AssignmentExpression	off_curve = false		811151	2		=			
ANR	811464	Identifier	false		811151	0					
ANR	811465	Identifier	false		811151	1					
ANR	811466	IdentifierDeclStatement	bool is_start_off = false ;	1365:12:52903:52928	811151	2	True				
ANR	811467	IdentifierDecl	is_start_off = false		811151	0					
ANR	811468	IdentifierDeclType	bool		811151	0					
ANR	811469	Identifier	is_start_off		811151	1					
ANR	811470	AssignmentExpression	is_start_off = false		811151	2		=			
ANR	811471	Identifier	false		811151	0					
ANR	811472	Identifier	false		811151	1					
ANR	811473	IdentifierDeclStatement	uint last_point = U16 ( pends + i * 2 ) ;	1366:12:52942:52978	811151	3	True				
ANR	811474	IdentifierDecl	last_point = U16 ( pends + i * 2 )		811151	0					
ANR	811475	IdentifierDeclType	uint		811151	0					
ANR	811476	Identifier	last_point		811151	1					
ANR	811477	AssignmentExpression	last_point = U16 ( pends + i * 2 )		811151	2		=			
ANR	811478	Identifier	last_point		811151	0					
ANR	811479	CallExpression	U16 ( pends + i * 2 )		811151	1					
ANR	811480	Callee	U16		811151	0					
ANR	811481	Identifier	U16		811151	0					
ANR	811482	ArgumentList	pends + i * 2		811151	1					
ANR	811483	Argument	pends + i * 2		811151	0					
ANR	811484	AdditiveExpression	pends + i * 2		811151	0		+			
ANR	811485	Identifier	pends		811151	0					
ANR	811486	MultiplicativeExpression	i * 2		811151	1		*			
ANR	811487	Identifier	i		811151	0					
ANR	811488	PrimaryExpression	2		811151	1					
ANR	811489	IdentifierDeclStatement	"float dx , dy ;"	1367:12:52992:53004	811151	4	True				
ANR	811490	IdentifierDecl	dx		811151	0					
ANR	811491	IdentifierDeclType	float		811151	0					
ANR	811492	Identifier	dx		811151	1					
ANR	811493	IdentifierDecl	dy		811151	1					
ANR	811494	IdentifierDeclType	float		811151	0					
ANR	811495	Identifier	dy		811151	1					
ANR	811496	IdentifierDeclStatement	"gs_fixed_point start , pt_start_off ;"	1368:12:53018:53051	811151	5	True				
ANR	811497	IdentifierDecl	start		811151	0					
ANR	811498	IdentifierDeclType	gs_fixed_point		811151	0					
ANR	811499	Identifier	start		811151	1					
ANR	811500	IdentifierDecl	pt_start_off		811151	1					
ANR	811501	IdentifierDeclType	gs_fixed_point		811151	0					
ANR	811502	Identifier	pt_start_off		811151	1					
ANR	811503	IdentifierDeclStatement	gs_fixed_point cpoints [ 2 ] ;	1369:12:53065:53090	811151	6	True				
ANR	811504	IdentifierDecl	cpoints [ 2 ]		811151	0					
ANR	811505	IdentifierDeclType	gs_fixed_point [ 2 ]		811151	0					
ANR	811506	Identifier	cpoints		811151	1					
ANR	811507	PrimaryExpression	2		811151	2					
ANR	811508	ExpressionStatement	"if_debug1m ( '1' , pfont -> memory , ""[1t]start %d\\n"" , i )"	1371:12:53105:53156	811151	7	True				
ANR	811509	CallExpression	"if_debug1m ( '1' , pfont -> memory , ""[1t]start %d\\n"" , i )"		811151	0					
ANR	811510	Callee	if_debug1m		811151	0					
ANR	811511	Identifier	if_debug1m		811151	0					
ANR	811512	ArgumentList	'1'		811151	1					
ANR	811513	Argument	'1'		811151	0					
ANR	811514	PrimaryExpression	'1'		811151	0					
ANR	811515	Argument	pfont -> memory		811151	1					
ANR	811516	PtrMemberAccess	pfont -> memory		811151	0					
ANR	811517	Identifier	pfont		811151	0					
ANR	811518	Identifier	memory		811151	1					
ANR	811519	Argument	"""[1t]start %d\\n"""		811151	2					
ANR	811520	PrimaryExpression	"""[1t]start %d\\n"""		811151	0					
ANR	811521	Argument	i		811151	3					
ANR	811522	Identifier	i		811151	0					
ANR	811523	ForStatement	"for ( ; np <= last_point ; -- reps , ++ np )"		811151	8					
ANR	811524	Condition	np <= last_point	1373:19:53178:53193	811151	0	True				
ANR	811525	RelationalExpression	np <= last_point		811151	0		<=			
ANR	811526	Identifier	np		811151	0					
ANR	811527	Identifier	last_point		811151	1					
ANR	811528	Expression	"-- reps , ++ np"	1373:37:53196:53207	811151	1	True				
ANR	811529	UnaryExpression	-- reps		811151	0					
ANR	811530	IncDec	--		811151	0					
ANR	811531	Identifier	reps		811151	1					
ANR	811532	UnaryExpression	++ np		811151	1					
ANR	811533	IncDec	++		811151	0					
ANR	811534	Identifier	np		811151	1					
ANR	811535	CompoundStatement		70:16:2055:2073	811151	2					
ANR	811536	IdentifierDeclStatement	gs_fixed_point dpt ;	1374:16:53228:53246	811151	0	True				
ANR	811537	IdentifierDecl	dpt		811151	0					
ANR	811538	IdentifierDeclType	gs_fixed_point		811151	0					
ANR	811539	Identifier	dpt		811151	1					
ANR	811540	IfStatement	if ( reps == 0 )		811151	1					
ANR	811541	Condition	reps == 0	1376:20:53269:53277	811151	0	True				
ANR	811542	EqualityExpression	reps == 0		811151	0		==			
ANR	811543	Identifier	reps		811151	0					
ANR	811544	PrimaryExpression	0		811151	1					
ANR	811545	CompoundStatement		72:31:2107:2107	811151	1					
ANR	811546	ExpressionStatement	flags = * pflags ++	1377:20:53302:53319	811151	0	True				
ANR	811547	AssignmentExpression	flags = * pflags ++		811151	0		=			
ANR	811548	Identifier	flags		811151	0					
ANR	811549	UnaryOperationExpression	* pflags ++		811151	1					
ANR	811550	UnaryOperator	*		811151	0					
ANR	811551	PostIncDecOperationExpression	pflags ++		811151	1					
ANR	811552	Identifier	pflags		811151	0					
ANR	811553	IncDec	++		811151	1					
ANR	811554	ExpressionStatement	reps = ( flags & gf_Repeat ? * pflags ++ + 1 : 1 )	1378:20:53341:53387	811151	1	True				
ANR	811555	AssignmentExpression	reps = ( flags & gf_Repeat ? * pflags ++ + 1 : 1 )		811151	0		=			
ANR	811556	Identifier	reps		811151	0					
ANR	811557	ConditionalExpression	flags & gf_Repeat ? * pflags ++ + 1 : 1		811151	1					
ANR	811558	Condition	flags & gf_Repeat		811151	0					
ANR	811559	BitAndExpression	flags & gf_Repeat		811151	0		&			
ANR	811560	Identifier	flags		811151	0					
ANR	811561	Identifier	gf_Repeat		811151	1					
ANR	811562	AdditiveExpression	* pflags ++ + 1		811151	1		+			
ANR	811563	UnaryOperationExpression	* pflags ++		811151	0					
ANR	811564	UnaryOperator	*		811151	0					
ANR	811565	PostIncDecOperationExpression	pflags ++		811151	1					
ANR	811566	Identifier	pflags		811151	0					
ANR	811567	IncDec	++		811151	1					
ANR	811568	PrimaryExpression	1		811151	1					
ANR	811569	PrimaryExpression	1		811151	2					
ANR	811570	IfStatement	if ( flags & gf_xShort )		811151	2					
ANR	811571	Condition	flags & gf_xShort	1380:20:53427:53443	811151	0	True				
ANR	811572	BitAndExpression	flags & gf_xShort		811151	0		&			
ANR	811573	Identifier	flags		811151	0					
ANR	811574	Identifier	gf_xShort		811151	1					
ANR	811575	CompoundStatement		76:39:2273:2273	811151	1					
ANR	811576	IfStatement	if ( flags & gf_xPos )		811151	0					
ANR	811577	Condition	flags & gf_xPos	1385:24:53672:53686	811151	0	True				
ANR	811578	BitAndExpression	flags & gf_xPos		811151	0		&			
ANR	811579	Identifier	flags		811151	0					
ANR	811580	Identifier	gf_xPos		811151	1					
ANR	811581	ExpressionStatement	dx = * pxc ++ * factor	1386:24:53713:53733	811151	1	True				
ANR	811582	AssignmentExpression	dx = * pxc ++ * factor		811151	0		=			
ANR	811583	Identifier	dx		811151	0					
ANR	811584	MultiplicativeExpression	* pxc ++ * factor		811151	1		*			
ANR	811585	UnaryOperationExpression	* pxc ++		811151	0					
ANR	811586	UnaryOperator	*		811151	0					
ANR	811587	PostIncDecOperationExpression	pxc ++		811151	1					
ANR	811588	Identifier	pxc		811151	0					
ANR	811589	IncDec	++		811151	1					
ANR	811590	Identifier	factor		811151	1					
ANR	811591	ElseStatement	else		811151	0					
ANR	811592	ExpressionStatement	dx = - ( int ) * pxc ++ * factor	1388:24:53784:53810	811151	0	True				
ANR	811593	AssignmentExpression	dx = - ( int ) * pxc ++ * factor		811151	0		=			
ANR	811594	Identifier	dx		811151	0					
ANR	811595	MultiplicativeExpression	- ( int ) * pxc ++ * factor		811151	1		*			
ANR	811596	UnaryOperationExpression	- ( int ) * pxc ++		811151	0					
ANR	811597	UnaryOperator	-		811151	0					
ANR	811598	CastExpression	( int ) * pxc ++		811151	1					
ANR	811599	CastTarget	int		811151	0					
ANR	811600	UnaryOperationExpression	* pxc ++		811151	1					
ANR	811601	UnaryOperator	*		811151	0					
ANR	811602	PostIncDecOperationExpression	pxc ++		811151	1					
ANR	811603	Identifier	pxc		811151	0					
ANR	811604	IncDec	++		811151	1					
ANR	811605	Identifier	factor		811151	1					
ANR	811606	ElseStatement	else		811151	0					
ANR	811607	IfStatement	if ( ! ( flags & gf_xSame ) )		811151	0					
ANR	811608	Condition	! ( flags & gf_xSame )	1389:27:53839:53857	811151	0	True				
ANR	811609	UnaryOperationExpression	! ( flags & gf_xSame )		811151	0					
ANR	811610	UnaryOperator	!		811151	0					
ANR	811611	BitAndExpression	flags & gf_xSame		811151	1		&			
ANR	811612	Identifier	flags		811151	0					
ANR	811613	Identifier	gf_xSame		811151	1					
ANR	811614	ExpressionStatement	"dx = S16 ( pxc ) * factor , pxc += 2"	1390:20:53880:53912	811151	1	True				
ANR	811615	Expression	"dx = S16 ( pxc ) * factor , pxc += 2"		811151	0					
ANR	811616	AssignmentExpression	dx = S16 ( pxc ) * factor		811151	0		=			
ANR	811617	Identifier	dx		811151	0					
ANR	811618	MultiplicativeExpression	S16 ( pxc ) * factor		811151	1		*			
ANR	811619	CallExpression	S16 ( pxc )		811151	0					
ANR	811620	Callee	S16		811151	0					
ANR	811621	Identifier	S16		811151	0					
ANR	811622	ArgumentList	pxc		811151	1					
ANR	811623	Argument	pxc		811151	0					
ANR	811624	Identifier	pxc		811151	0					
ANR	811625	Identifier	factor		811151	1					
ANR	811626	AssignmentExpression	pxc += 2		811151	1		+=			
ANR	811627	Identifier	pxc		811151	0					
ANR	811628	PrimaryExpression	2		811151	1					
ANR	811629	ElseStatement	else		811151	0					
ANR	811630	ExpressionStatement	dx = 0	1392:20:53955:53961	811151	0	True				
ANR	811631	AssignmentExpression	dx = 0		811151	0		=			
ANR	811632	Identifier	dx		811151	0					
ANR	811633	PrimaryExpression	0		811151	1					
ANR	811634	IfStatement	if ( flags & gf_yShort )		811151	3					
ANR	811635	Condition	flags & gf_yShort	1393:20:53983:53999	811151	0	True				
ANR	811636	BitAndExpression	flags & gf_yShort		811151	0		&			
ANR	811637	Identifier	flags		811151	0					
ANR	811638	Identifier	gf_yShort		811151	1					
ANR	811639	CompoundStatement		89:39:2829:2829	811151	1					
ANR	811640	IfStatement	if ( flags & gf_yPos )		811151	0					
ANR	811641	Condition	flags & gf_yPos	1395:24:54074:54088	811151	0	True				
ANR	811642	BitAndExpression	flags & gf_yPos		811151	0		&			
ANR	811643	Identifier	flags		811151	0					
ANR	811644	Identifier	gf_yPos		811151	1					
ANR	811645	ExpressionStatement	dy = * pyc ++ * factor	1396:24:54115:54135	811151	1	True				
ANR	811646	AssignmentExpression	dy = * pyc ++ * factor		811151	0		=			
ANR	811647	Identifier	dy		811151	0					
ANR	811648	MultiplicativeExpression	* pyc ++ * factor		811151	1		*			
ANR	811649	UnaryOperationExpression	* pyc ++		811151	0					
ANR	811650	UnaryOperator	*		811151	0					
ANR	811651	PostIncDecOperationExpression	pyc ++		811151	1					
ANR	811652	Identifier	pyc		811151	0					
ANR	811653	IncDec	++		811151	1					
ANR	811654	Identifier	factor		811151	1					
ANR	811655	ElseStatement	else		811151	0					
ANR	811656	ExpressionStatement	dy = - ( int ) * pyc ++ * factor	1398:24:54186:54212	811151	0	True				
ANR	811657	AssignmentExpression	dy = - ( int ) * pyc ++ * factor		811151	0		=			
ANR	811658	Identifier	dy		811151	0					
ANR	811659	MultiplicativeExpression	- ( int ) * pyc ++ * factor		811151	1		*			
ANR	811660	UnaryOperationExpression	- ( int ) * pyc ++		811151	0					
ANR	811661	UnaryOperator	-		811151	0					
ANR	811662	CastExpression	( int ) * pyc ++		811151	1					
ANR	811663	CastTarget	int		811151	0					
ANR	811664	UnaryOperationExpression	* pyc ++		811151	1					
ANR	811665	UnaryOperator	*		811151	0					
ANR	811666	PostIncDecOperationExpression	pyc ++		811151	1					
ANR	811667	Identifier	pyc		811151	0					
ANR	811668	IncDec	++		811151	1					
ANR	811669	Identifier	factor		811151	1					
ANR	811670	ElseStatement	else		811151	0					
ANR	811671	IfStatement	if ( ! ( flags & gf_ySame ) )		811151	0					
ANR	811672	Condition	! ( flags & gf_ySame )	1399:27:54241:54259	811151	0	True				
ANR	811673	UnaryOperationExpression	! ( flags & gf_ySame )		811151	0					
ANR	811674	UnaryOperator	!		811151	0					
ANR	811675	BitAndExpression	flags & gf_ySame		811151	1		&			
ANR	811676	Identifier	flags		811151	0					
ANR	811677	Identifier	gf_ySame		811151	1					
ANR	811678	ExpressionStatement	"dy = S16 ( pyc ) * factor , pyc += 2"	1400:20:54282:54314	811151	1	True				
ANR	811679	Expression	"dy = S16 ( pyc ) * factor , pyc += 2"		811151	0					
ANR	811680	AssignmentExpression	dy = S16 ( pyc ) * factor		811151	0		=			
ANR	811681	Identifier	dy		811151	0					
ANR	811682	MultiplicativeExpression	S16 ( pyc ) * factor		811151	1		*			
ANR	811683	CallExpression	S16 ( pyc )		811151	0					
ANR	811684	Callee	S16		811151	0					
ANR	811685	Identifier	S16		811151	0					
ANR	811686	ArgumentList	pyc		811151	1					
ANR	811687	Argument	pyc		811151	0					
ANR	811688	Identifier	pyc		811151	0					
ANR	811689	Identifier	factor		811151	1					
ANR	811690	AssignmentExpression	pyc += 2		811151	1		+=			
ANR	811691	Identifier	pyc		811151	0					
ANR	811692	PrimaryExpression	2		811151	1					
ANR	811693	ElseStatement	else		811151	0					
ANR	811694	ExpressionStatement	dy = 0	1402:20:54357:54363	811151	0	True				
ANR	811695	AssignmentExpression	dy = 0		811151	0		=			
ANR	811696	Identifier	dy		811151	0					
ANR	811697	PrimaryExpression	0		811151	1					
ANR	811698	ExpressionStatement	"code = gs_distance_transform2fixed ( pmat , dx , dy , & dpt )"	1403:16:54381:54435	811151	4	True				
ANR	811699	AssignmentExpression	"code = gs_distance_transform2fixed ( pmat , dx , dy , & dpt )"		811151	0		=			
ANR	811700	Identifier	code		811151	0					
ANR	811701	CallExpression	"gs_distance_transform2fixed ( pmat , dx , dy , & dpt )"		811151	1					
ANR	811702	Callee	gs_distance_transform2fixed		811151	0					
ANR	811703	Identifier	gs_distance_transform2fixed		811151	0					
ANR	811704	ArgumentList	pmat		811151	1					
ANR	811705	Argument	pmat		811151	0					
ANR	811706	Identifier	pmat		811151	0					
ANR	811707	Argument	dx		811151	1					
ANR	811708	Identifier	dx		811151	0					
ANR	811709	Argument	dy		811151	2					
ANR	811710	Identifier	dy		811151	0					
ANR	811711	Argument	& dpt		811151	3					
ANR	811712	UnaryOperationExpression	& dpt		811151	0					
ANR	811713	UnaryOperator	&		811151	0					
ANR	811714	Identifier	dpt		811151	1					
ANR	811715	IfStatement	if ( code < 0 )		811151	5					
ANR	811716	Condition	code < 0	1404:20:54457:54464	811151	0	True				
ANR	811717	RelationalExpression	code < 0		811151	0		<			
ANR	811718	Identifier	code		811151	0					
ANR	811719	PrimaryExpression	0		811151	1					
ANR	811720	ReturnStatement	return code ;	1405:20:54487:54498	811151	1	True				
ANR	811721	Identifier	code		811151	0					
ANR	811722	ExpressionStatement	"pt . x += dpt . x , pt . y += dpt . y"	1406:16:54516:54544	811151	6	True				
ANR	811723	Expression	"pt . x += dpt . x , pt . y += dpt . y"		811151	0					
ANR	811724	AssignmentExpression	pt . x += dpt . x		811151	0		+=			
ANR	811725	MemberAccess	pt . x		811151	0					
ANR	811726	Identifier	pt		811151	0					
ANR	811727	Identifier	x		811151	1					
ANR	811728	MemberAccess	dpt . x		811151	1					
ANR	811729	Identifier	dpt		811151	0					
ANR	811730	Identifier	x		811151	1					
ANR	811731	AssignmentExpression	pt . y += dpt . y		811151	1		+=			
ANR	811732	MemberAccess	pt . y		811151	0					
ANR	811733	Identifier	pt		811151	0					
ANR	811734	Identifier	y		811151	1					
ANR	811735	MemberAccess	dpt . y		811151	1					
ANR	811736	Identifier	dpt		811151	0					
ANR	811737	Identifier	y		811151	1					
ANR	811738	IfStatement	if ( ppts )		811151	7					
ANR	811739	Condition	ppts	1408:20:54567:54570	811151	0	True				
ANR	811740	Identifier	ppts		811151	0					
ANR	811741	ExpressionStatement	ppts [ np ] = pt	1409:20:54617:54630	811151	1	True				
ANR	811742	AssignmentExpression	ppts [ np ] = pt		811151	0		=			
ANR	811743	ArrayIndexing	ppts [ np ]		811151	0					
ANR	811744	Identifier	ppts		811151	0					
ANR	811745	Identifier	np		811151	1					
ANR	811746	Identifier	pt		811151	1					
ANR	811747	IfStatement	if ( ppath )		811151	8					
ANR	811748	Condition	ppath	1411:20:54653:54657	811151	0	True				
ANR	811749	Identifier	ppath		811151	0					
ANR	811750	CompoundStatement		107:27:3487:3487	811151	1					
ANR	811751	ExpressionStatement	"if_debug3m ( '1' , pfont -> memory , ""[1t]%s (%g %g)\\n"" , ( flags & gf_OnCurve ? ""on "" : ""off"" ) , fixed2float ( pt . x ) , fixed2float ( pt . y ) )"	1413:20:54725:54913	811151	0	True				
ANR	811752	CallExpression	"if_debug3m ( '1' , pfont -> memory , ""[1t]%s (%g %g)\\n"" , ( flags & gf_OnCurve ? ""on "" : ""off"" ) , fixed2float ( pt . x ) , fixed2float ( pt . y ) )"		811151	0					
ANR	811753	Callee	if_debug3m		811151	0					
ANR	811754	Identifier	if_debug3m		811151	0					
ANR	811755	ArgumentList	'1'		811151	1					
ANR	811756	Argument	'1'		811151	0					
ANR	811757	PrimaryExpression	'1'		811151	0					
ANR	811758	Argument	pfont -> memory		811151	1					
ANR	811759	PtrMemberAccess	pfont -> memory		811151	0					
ANR	811760	Identifier	pfont		811151	0					
ANR	811761	Identifier	memory		811151	1					
ANR	811762	Argument	"""[1t]%s (%g %g)\\n"""		811151	2					
ANR	811763	PrimaryExpression	"""[1t]%s (%g %g)\\n"""		811151	0					
ANR	811764	Argument	"flags & gf_OnCurve ? ""on "" : ""off"""		811151	3					
ANR	811765	ConditionalExpression	"flags & gf_OnCurve ? ""on "" : ""off"""		811151	0					
ANR	811766	Condition	flags & gf_OnCurve		811151	0					
ANR	811767	BitAndExpression	flags & gf_OnCurve		811151	0		&			
ANR	811768	Identifier	flags		811151	0					
ANR	811769	Identifier	gf_OnCurve		811151	1					
ANR	811770	PrimaryExpression	"""on """		811151	1					
ANR	811771	PrimaryExpression	"""off"""		811151	2					
ANR	811772	Argument	fixed2float ( pt . x )		811151	4					
ANR	811773	CallExpression	fixed2float ( pt . x )		811151	0					
ANR	811774	Callee	fixed2float		811151	0					
ANR	811775	Identifier	fixed2float		811151	0					
ANR	811776	ArgumentList	pt . x		811151	1					
ANR	811777	Argument	pt . x		811151	0					
ANR	811778	MemberAccess	pt . x		811151	0					
ANR	811779	Identifier	pt		811151	0					
ANR	811780	Identifier	x		811151	1					
ANR	811781	Argument	fixed2float ( pt . y )		811151	5					
ANR	811782	CallExpression	fixed2float ( pt . y )		811151	0					
ANR	811783	Callee	fixed2float		811151	0					
ANR	811784	Identifier	fixed2float		811151	0					
ANR	811785	ArgumentList	pt . y		811151	1					
ANR	811786	Argument	pt . y		811151	0					
ANR	811787	MemberAccess	pt . y		811151	0					
ANR	811788	Identifier	pt		811151	0					
ANR	811789	Identifier	y		811151	1					
ANR	811790	IfStatement	if ( move )		811151	1					
ANR	811791	Condition	move	1417:24:54940:54943	811151	0	True				
ANR	811792	Identifier	move		811151	0					
ANR	811793	CompoundStatement		113:30:3773:3773	811151	1					
ANR	811794	IfStatement	if ( is_start_off )		811151	0					
ANR	811795	Condition	is_start_off	1418:27:54975:54986	811151	0	True				
ANR	811796	Identifier	is_start_off		811151	0					
ANR	811797	CompoundStatement		114:41:3816:3816	811151	1					
ANR	811798	IfStatement	if ( flags & gf_OnCurve )		811151	0					
ANR	811799	Condition	flags & gf_OnCurve	1419:31:55022:55039	811151	0	True				
ANR	811800	BitAndExpression	flags & gf_OnCurve		811151	0		&			
ANR	811801	Identifier	flags		811151	0					
ANR	811802	Identifier	gf_OnCurve		811151	1					
ANR	811803	ExpressionStatement	start = pt	1420:32:55074:55084	811151	1	True				
ANR	811804	AssignmentExpression	start = pt		811151	0		=			
ANR	811805	Identifier	start		811151	0					
ANR	811806	Identifier	pt		811151	1					
ANR	811807	ElseStatement	else		811151	0					
ANR	811808	CompoundStatement		117:33:3946:3946	811151	0					
ANR	811809	ExpressionStatement	start . x = ( pt_start_off . x + pt . x ) / 2	1422:32:55153:55188	811151	0	True				
ANR	811810	AssignmentExpression	start . x = ( pt_start_off . x + pt . x ) / 2		811151	0		=			
ANR	811811	MemberAccess	start . x		811151	0					
ANR	811812	Identifier	start		811151	0					
ANR	811813	Identifier	x		811151	1					
ANR	811814	MultiplicativeExpression	( pt_start_off . x + pt . x ) / 2		811151	1		/			
ANR	811815	AdditiveExpression	pt_start_off . x + pt . x		811151	0		+			
ANR	811816	MemberAccess	pt_start_off . x		811151	0					
ANR	811817	Identifier	pt_start_off		811151	0					
ANR	811818	Identifier	x		811151	1					
ANR	811819	MemberAccess	pt . x		811151	1					
ANR	811820	Identifier	pt		811151	0					
ANR	811821	Identifier	x		811151	1					
ANR	811822	PrimaryExpression	2		811151	1					
ANR	811823	ExpressionStatement	start . y = ( pt_start_off . y + pt . y ) / 2	1423:32:55222:55257	811151	1	True				
ANR	811824	AssignmentExpression	start . y = ( pt_start_off . y + pt . y ) / 2		811151	0		=			
ANR	811825	MemberAccess	start . y		811151	0					
ANR	811826	Identifier	start		811151	0					
ANR	811827	Identifier	y		811151	1					
ANR	811828	MultiplicativeExpression	( pt_start_off . y + pt . y ) / 2		811151	1		/			
ANR	811829	AdditiveExpression	pt_start_off . y + pt . y		811151	0		+			
ANR	811830	MemberAccess	pt_start_off . y		811151	0					
ANR	811831	Identifier	pt_start_off		811151	0					
ANR	811832	Identifier	y		811151	1					
ANR	811833	MemberAccess	pt . y		811151	1					
ANR	811834	Identifier	pt		811151	0					
ANR	811835	Identifier	y		811151	1					
ANR	811836	PrimaryExpression	2		811151	1					
ANR	811837	ExpressionStatement	cpoints [ 1 ] = pt	1424:32:55291:55304	811151	2	True				
ANR	811838	AssignmentExpression	cpoints [ 1 ] = pt		811151	0		=			
ANR	811839	ArrayIndexing	cpoints [ 1 ]		811151	0					
ANR	811840	Identifier	cpoints		811151	0					
ANR	811841	PrimaryExpression	1		811151	1					
ANR	811842	Identifier	pt		811151	1					
ANR	811843	ExpressionStatement	off_curve = true	1425:32:55338:55352	811151	3	True				
ANR	811844	AssignmentExpression	off_curve = true		811151	0		=			
ANR	811845	Identifier	off_curve		811151	0					
ANR	811846	Identifier	true		811151	1					
ANR	811847	ExpressionStatement	move = false	1427:28:55412:55424	811151	1	True				
ANR	811848	AssignmentExpression	move = false		811151	0		=			
ANR	811849	Identifier	move		811151	0					
ANR	811850	Identifier	false		811151	1					
ANR	811851	ExpressionStatement	cpoints [ 0 ] = start	1428:28:55454:55472	811151	2	True				
ANR	811852	AssignmentExpression	cpoints [ 0 ] = start		811151	0		=			
ANR	811853	ArrayIndexing	cpoints [ 0 ]		811151	0					
ANR	811854	Identifier	cpoints		811151	0					
ANR	811855	PrimaryExpression	0		811151	1					
ANR	811856	Identifier	start		811151	1					
ANR	811857	ExpressionStatement	"code = gx_path_add_point ( ppath , start . x , start . y )"	1429:28:55502:55551	811151	3	True				
ANR	811858	AssignmentExpression	"code = gx_path_add_point ( ppath , start . x , start . y )"		811151	0		=			
ANR	811859	Identifier	code		811151	0					
ANR	811860	CallExpression	"gx_path_add_point ( ppath , start . x , start . y )"		811151	1					
ANR	811861	Callee	gx_path_add_point		811151	0					
ANR	811862	Identifier	gx_path_add_point		811151	0					
ANR	811863	ArgumentList	ppath		811151	1					
ANR	811864	Argument	ppath		811151	0					
ANR	811865	Identifier	ppath		811151	0					
ANR	811866	Argument	start . x		811151	1					
ANR	811867	MemberAccess	start . x		811151	0					
ANR	811868	Identifier	start		811151	0					
ANR	811869	Identifier	x		811151	1					
ANR	811870	Argument	start . y		811151	2					
ANR	811871	MemberAccess	start . y		811151	0					
ANR	811872	Identifier	start		811151	0					
ANR	811873	Identifier	y		811151	1					
ANR	811874	ElseStatement	else		811151	0					
ANR	811875	CompoundStatement		126:31:4411:4411	811151	0					
ANR	811876	IfStatement	if ( flags & gf_OnCurve )		811151	0					
ANR	811877	Condition	flags & gf_OnCurve	1431:31:55617:55634	811151	0	True				
ANR	811878	BitAndExpression	flags & gf_OnCurve		811151	0		&			
ANR	811879	Identifier	flags		811151	0					
ANR	811880	Identifier	gf_OnCurve		811151	1					
ANR	811881	CompoundStatement		127:51:4464:4464	811151	1					
ANR	811882	ExpressionStatement	cpoints [ 0 ] = start = pt	1432:32:55671:55694	811151	0	True				
ANR	811883	AssignmentExpression	cpoints [ 0 ] = start = pt		811151	0		=			
ANR	811884	ArrayIndexing	cpoints [ 0 ]		811151	0					
ANR	811885	Identifier	cpoints		811151	0					
ANR	811886	PrimaryExpression	0		811151	1					
ANR	811887	AssignmentExpression	start = pt		811151	1		=			
ANR	811888	Identifier	start		811151	0					
ANR	811889	Identifier	pt		811151	1					
ANR	811890	ExpressionStatement	"code = gx_path_add_point ( ppath , pt . x , pt . y )"	1433:32:55728:55771	811151	1	True				
ANR	811891	AssignmentExpression	"code = gx_path_add_point ( ppath , pt . x , pt . y )"		811151	0		=			
ANR	811892	Identifier	code		811151	0					
ANR	811893	CallExpression	"gx_path_add_point ( ppath , pt . x , pt . y )"		811151	1					
ANR	811894	Callee	gx_path_add_point		811151	0					
ANR	811895	Identifier	gx_path_add_point		811151	0					
ANR	811896	ArgumentList	ppath		811151	1					
ANR	811897	Argument	ppath		811151	0					
ANR	811898	Identifier	ppath		811151	0					
ANR	811899	Argument	pt . x		811151	1					
ANR	811900	MemberAccess	pt . x		811151	0					
ANR	811901	Identifier	pt		811151	0					
ANR	811902	Identifier	x		811151	1					
ANR	811903	Argument	pt . y		811151	2					
ANR	811904	MemberAccess	pt . y		811151	0					
ANR	811905	Identifier	pt		811151	0					
ANR	811906	Identifier	y		811151	1					
ANR	811907	ExpressionStatement	move = false	1434:32:55805:55817	811151	2	True				
ANR	811908	AssignmentExpression	move = false		811151	0		=			
ANR	811909	Identifier	move		811151	0					
ANR	811910	Identifier	false		811151	1					
ANR	811911	ElseStatement	else		811151	0					
ANR	811912	CompoundStatement		131:35:4681:4681	811151	0					
ANR	811913	ExpressionStatement	is_start_off = true	1436:32:55888:55907	811151	0	True				
ANR	811914	AssignmentExpression	is_start_off = true		811151	0		=			
ANR	811915	Identifier	is_start_off		811151	0					
ANR	811916	Identifier	true		811151	1					
ANR	811917	ExpressionStatement	pt_start_off = pt	1437:32:55941:55958	811151	1	True				
ANR	811918	AssignmentExpression	pt_start_off = pt		811151	0		=			
ANR	811919	Identifier	pt_start_off		811151	0					
ANR	811920	Identifier	pt		811151	1					
ANR	811921	ElseStatement	else		811151	0					
ANR	811922	IfStatement	if ( flags & gf_OnCurve )		811151	0					
ANR	811923	Condition	flags & gf_OnCurve	1440:31:56047:56064	811151	0	True				
ANR	811924	BitAndExpression	flags & gf_OnCurve		811151	0		&			
ANR	811925	Identifier	flags		811151	0					
ANR	811926	Identifier	gf_OnCurve		811151	1					
ANR	811927	CompoundStatement		136:51:4894:4894	811151	1					
ANR	811928	IfStatement	if ( off_curve )		811151	0					
ANR	811929	Condition	off_curve	1441:28:56097:56105	811151	0	True				
ANR	811930	Identifier	off_curve		811151	0					
ANR	811931	ExpressionStatement	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & pt )"	1442:28:56136:56194	811151	1	True				
ANR	811932	AssignmentExpression	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & pt )"		811151	0		=			
ANR	811933	Identifier	code		811151	0					
ANR	811934	CallExpression	"add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & pt )"		811151	1					
ANR	811935	Callee	add_quadratic_curve		811151	0					
ANR	811936	Identifier	add_quadratic_curve		811151	0					
ANR	811937	ArgumentList	ppath		811151	1					
ANR	811938	Argument	ppath		811151	0					
ANR	811939	Identifier	ppath		811151	0					
ANR	811940	Argument	cpoints		811151	1					
ANR	811941	Identifier	cpoints		811151	0					
ANR	811942	Argument	cpoints + 1		811151	2					
ANR	811943	AdditiveExpression	cpoints + 1		811151	0		+			
ANR	811944	Identifier	cpoints		811151	0					
ANR	811945	PrimaryExpression	1		811151	1					
ANR	811946	Argument	& pt		811151	3					
ANR	811947	UnaryOperationExpression	& pt		811151	0					
ANR	811948	UnaryOperator	&		811151	0					
ANR	811949	Identifier	pt		811151	1					
ANR	811950	ElseStatement	else		811151	0					
ANR	811951	ExpressionStatement	"code = gx_path_add_line ( ppath , pt . x , pt . y )"	1444:28:56253:56295	811151	0	True				
ANR	811952	AssignmentExpression	"code = gx_path_add_line ( ppath , pt . x , pt . y )"		811151	0		=			
ANR	811953	Identifier	code		811151	0					
ANR	811954	CallExpression	"gx_path_add_line ( ppath , pt . x , pt . y )"		811151	1					
ANR	811955	Callee	gx_path_add_line		811151	0					
ANR	811956	Identifier	gx_path_add_line		811151	0					
ANR	811957	ArgumentList	ppath		811151	1					
ANR	811958	Argument	ppath		811151	0					
ANR	811959	Identifier	ppath		811151	0					
ANR	811960	Argument	pt . x		811151	1					
ANR	811961	MemberAccess	pt . x		811151	0					
ANR	811962	Identifier	pt		811151	0					
ANR	811963	Identifier	x		811151	1					
ANR	811964	Argument	pt . y		811151	2					
ANR	811965	MemberAccess	pt . y		811151	0					
ANR	811966	Identifier	pt		811151	0					
ANR	811967	Identifier	y		811151	1					
ANR	811968	ExpressionStatement	cpoints [ 0 ] = pt	1445:24:56321:56336	811151	1	True				
ANR	811969	AssignmentExpression	cpoints [ 0 ] = pt		811151	0		=			
ANR	811970	ArrayIndexing	cpoints [ 0 ]		811151	0					
ANR	811971	Identifier	cpoints		811151	0					
ANR	811972	PrimaryExpression	0		811151	1					
ANR	811973	Identifier	pt		811151	1					
ANR	811974	ExpressionStatement	off_curve = false	1446:24:56362:56379	811151	2	True				
ANR	811975	AssignmentExpression	off_curve = false		811151	0		=			
ANR	811976	Identifier	off_curve		811151	0					
ANR	811977	Identifier	false		811151	1					
ANR	811978	ElseStatement	else		811151	0					
ANR	811979	CompoundStatement		143:27:5235:5235	811151	0					
ANR	811980	IfStatement	if ( off_curve )		811151	0					
ANR	811981	Condition	off_curve	1448:27:56437:56445	811151	0	True				
ANR	811982	Identifier	off_curve		811151	0					
ANR	811983	CompoundStatement		145:28:5305:5321	811151	1					
ANR	811984	IdentifierDeclStatement	gs_fixed_point p ;	1449:28:56478:56494	811151	0	True				
ANR	811985	IdentifierDecl	p		811151	0					
ANR	811986	IdentifierDeclType	gs_fixed_point		811151	0					
ANR	811987	Identifier	p		811151	1					
ANR	811988	ExpressionStatement	p . x = ( cpoints [ 1 ] . x + pt . x ) / 2	1450:28:56524:56553	811151	1	True				
ANR	811989	AssignmentExpression	p . x = ( cpoints [ 1 ] . x + pt . x ) / 2		811151	0		=			
ANR	811990	MemberAccess	p . x		811151	0					
ANR	811991	Identifier	p		811151	0					
ANR	811992	Identifier	x		811151	1					
ANR	811993	MultiplicativeExpression	( cpoints [ 1 ] . x + pt . x ) / 2		811151	1		/			
ANR	811994	AdditiveExpression	cpoints [ 1 ] . x + pt . x		811151	0		+			
ANR	811995	MemberAccess	cpoints [ 1 ] . x		811151	0					
ANR	811996	ArrayIndexing	cpoints [ 1 ]		811151	0					
ANR	811997	Identifier	cpoints		811151	0					
ANR	811998	PrimaryExpression	1		811151	1					
ANR	811999	Identifier	x		811151	1					
ANR	812000	MemberAccess	pt . x		811151	1					
ANR	812001	Identifier	pt		811151	0					
ANR	812002	Identifier	x		811151	1					
ANR	812003	PrimaryExpression	2		811151	1					
ANR	812004	ExpressionStatement	p . y = ( cpoints [ 1 ] . y + pt . y ) / 2	1451:28:56583:56612	811151	2	True				
ANR	812005	AssignmentExpression	p . y = ( cpoints [ 1 ] . y + pt . y ) / 2		811151	0		=			
ANR	812006	MemberAccess	p . y		811151	0					
ANR	812007	Identifier	p		811151	0					
ANR	812008	Identifier	y		811151	1					
ANR	812009	MultiplicativeExpression	( cpoints [ 1 ] . y + pt . y ) / 2		811151	1		/			
ANR	812010	AdditiveExpression	cpoints [ 1 ] . y + pt . y		811151	0		+			
ANR	812011	MemberAccess	cpoints [ 1 ] . y		811151	0					
ANR	812012	ArrayIndexing	cpoints [ 1 ]		811151	0					
ANR	812013	Identifier	cpoints		811151	0					
ANR	812014	PrimaryExpression	1		811151	1					
ANR	812015	Identifier	y		811151	1					
ANR	812016	MemberAccess	pt . y		811151	1					
ANR	812017	Identifier	pt		811151	0					
ANR	812018	Identifier	y		811151	1					
ANR	812019	PrimaryExpression	2		811151	1					
ANR	812020	ExpressionStatement	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & p )"	1452:28:56642:56699	811151	3	True				
ANR	812021	AssignmentExpression	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & p )"		811151	0		=			
ANR	812022	Identifier	code		811151	0					
ANR	812023	CallExpression	"add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & p )"		811151	1					
ANR	812024	Callee	add_quadratic_curve		811151	0					
ANR	812025	Identifier	add_quadratic_curve		811151	0					
ANR	812026	ArgumentList	ppath		811151	1					
ANR	812027	Argument	ppath		811151	0					
ANR	812028	Identifier	ppath		811151	0					
ANR	812029	Argument	cpoints		811151	1					
ANR	812030	Identifier	cpoints		811151	0					
ANR	812031	Argument	cpoints + 1		811151	2					
ANR	812032	AdditiveExpression	cpoints + 1		811151	0		+			
ANR	812033	Identifier	cpoints		811151	0					
ANR	812034	PrimaryExpression	1		811151	1					
ANR	812035	Argument	& p		811151	3					
ANR	812036	UnaryOperationExpression	& p		811151	0					
ANR	812037	UnaryOperator	&		811151	0					
ANR	812038	Identifier	p		811151	1					
ANR	812039	ExpressionStatement	cpoints [ 0 ] = p	1453:28:56729:56743	811151	4	True				
ANR	812040	AssignmentExpression	cpoints [ 0 ] = p		811151	0		=			
ANR	812041	ArrayIndexing	cpoints [ 0 ]		811151	0					
ANR	812042	Identifier	cpoints		811151	0					
ANR	812043	PrimaryExpression	0		811151	1					
ANR	812044	Identifier	p		811151	1					
ANR	812045	ExpressionStatement	off_curve = true	1455:24:56795:56811	811151	1	True				
ANR	812046	AssignmentExpression	off_curve = true		811151	0		=			
ANR	812047	Identifier	off_curve		811151	0					
ANR	812048	Identifier	true		811151	1					
ANR	812049	ExpressionStatement	cpoints [ 1 ] = pt	1456:24:56837:56852	811151	2	True				
ANR	812050	AssignmentExpression	cpoints [ 1 ] = pt		811151	0		=			
ANR	812051	ArrayIndexing	cpoints [ 1 ]		811151	0					
ANR	812052	Identifier	cpoints		811151	0					
ANR	812053	PrimaryExpression	1		811151	1					
ANR	812054	Identifier	pt		811151	1					
ANR	812055	IfStatement	if ( code < 0 )		811151	2					
ANR	812056	Condition	code < 0	1458:24:56900:56907	811151	0	True				
ANR	812057	RelationalExpression	code < 0		811151	0		<			
ANR	812058	Identifier	code		811151	0					
ANR	812059	PrimaryExpression	0		811151	1					
ANR	812060	ReturnStatement	return code ;	1459:24:56934:56945	811151	1	True				
ANR	812061	Identifier	code		811151	0					
ANR	812062	IfStatement	if ( ppath )		811151	9					
ANR	812063	Condition	ppath	1462:16:56995:56999	811151	0	True				
ANR	812064	Identifier	ppath		811151	0					
ANR	812065	CompoundStatement		158:23:5829:5829	811151	1					
ANR	812066	IfStatement	if ( is_start_off )		811151	0					
ANR	812067	Condition	is_start_off	1463:20:57024:57035	811151	0	True				
ANR	812068	Identifier	is_start_off		811151	0					
ANR	812069	CompoundStatement		159:34:5865:5865	811151	1					
ANR	812070	IfStatement	if ( off_curve )		811151	0					
ANR	812071	Condition	off_curve	1464:24:57064:57072	811151	0	True				
ANR	812072	Identifier	off_curve		811151	0					
ANR	812073	CompoundStatement		161:24:5928:5944	811151	1					
ANR	812074	IdentifierDeclStatement	gs_fixed_point p ;	1465:24:57101:57117	811151	0	True				
ANR	812075	IdentifierDecl	p		811151	0					
ANR	812076	IdentifierDeclType	gs_fixed_point		811151	0					
ANR	812077	Identifier	p		811151	1					
ANR	812078	ExpressionStatement	p . x = ( cpoints [ 1 ] . x + pt_start_off . x ) / 2	1466:24:57143:57182	811151	1	True				
ANR	812079	AssignmentExpression	p . x = ( cpoints [ 1 ] . x + pt_start_off . x ) / 2		811151	0		=			
ANR	812080	MemberAccess	p . x		811151	0					
ANR	812081	Identifier	p		811151	0					
ANR	812082	Identifier	x		811151	1					
ANR	812083	MultiplicativeExpression	( cpoints [ 1 ] . x + pt_start_off . x ) / 2		811151	1		/			
ANR	812084	AdditiveExpression	cpoints [ 1 ] . x + pt_start_off . x		811151	0		+			
ANR	812085	MemberAccess	cpoints [ 1 ] . x		811151	0					
ANR	812086	ArrayIndexing	cpoints [ 1 ]		811151	0					
ANR	812087	Identifier	cpoints		811151	0					
ANR	812088	PrimaryExpression	1		811151	1					
ANR	812089	Identifier	x		811151	1					
ANR	812090	MemberAccess	pt_start_off . x		811151	1					
ANR	812091	Identifier	pt_start_off		811151	0					
ANR	812092	Identifier	x		811151	1					
ANR	812093	PrimaryExpression	2		811151	1					
ANR	812094	ExpressionStatement	p . y = ( cpoints [ 1 ] . y + pt_start_off . y ) / 2	1467:24:57208:57247	811151	2	True				
ANR	812095	AssignmentExpression	p . y = ( cpoints [ 1 ] . y + pt_start_off . y ) / 2		811151	0		=			
ANR	812096	MemberAccess	p . y		811151	0					
ANR	812097	Identifier	p		811151	0					
ANR	812098	Identifier	y		811151	1					
ANR	812099	MultiplicativeExpression	( cpoints [ 1 ] . y + pt_start_off . y ) / 2		811151	1		/			
ANR	812100	AdditiveExpression	cpoints [ 1 ] . y + pt_start_off . y		811151	0		+			
ANR	812101	MemberAccess	cpoints [ 1 ] . y		811151	0					
ANR	812102	ArrayIndexing	cpoints [ 1 ]		811151	0					
ANR	812103	Identifier	cpoints		811151	0					
ANR	812104	PrimaryExpression	1		811151	1					
ANR	812105	Identifier	y		811151	1					
ANR	812106	MemberAccess	pt_start_off . y		811151	1					
ANR	812107	Identifier	pt_start_off		811151	0					
ANR	812108	Identifier	y		811151	1					
ANR	812109	PrimaryExpression	2		811151	1					
ANR	812110	ExpressionStatement	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & p )"	1468:24:57273:57330	811151	3	True				
ANR	812111	AssignmentExpression	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & p )"		811151	0		=			
ANR	812112	Identifier	code		811151	0					
ANR	812113	CallExpression	"add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & p )"		811151	1					
ANR	812114	Callee	add_quadratic_curve		811151	0					
ANR	812115	Identifier	add_quadratic_curve		811151	0					
ANR	812116	ArgumentList	ppath		811151	1					
ANR	812117	Argument	ppath		811151	0					
ANR	812118	Identifier	ppath		811151	0					
ANR	812119	Argument	cpoints		811151	1					
ANR	812120	Identifier	cpoints		811151	0					
ANR	812121	Argument	cpoints + 1		811151	2					
ANR	812122	AdditiveExpression	cpoints + 1		811151	0		+			
ANR	812123	Identifier	cpoints		811151	0					
ANR	812124	PrimaryExpression	1		811151	1					
ANR	812125	Argument	& p		811151	3					
ANR	812126	UnaryOperationExpression	& p		811151	0					
ANR	812127	UnaryOperator	&		811151	0					
ANR	812128	Identifier	p		811151	1					
ANR	812129	IfStatement	if ( code < 0 )		811151	4					
ANR	812130	Condition	code < 0	1469:28:57360:57367	811151	0	True				
ANR	812131	RelationalExpression	code < 0		811151	0		<			
ANR	812132	Identifier	code		811151	0					
ANR	812133	PrimaryExpression	0		811151	1					
ANR	812134	ReturnStatement	return code ;	1470:28:57398:57409	811151	1	True				
ANR	812135	Identifier	code		811151	0					
ANR	812136	ExpressionStatement	"code = add_quadratic_curve ( ppath , & p , & pt_start_off , & start )"	1471:24:57435:57495	811151	5	True				
ANR	812137	AssignmentExpression	"code = add_quadratic_curve ( ppath , & p , & pt_start_off , & start )"		811151	0		=			
ANR	812138	Identifier	code		811151	0					
ANR	812139	CallExpression	"add_quadratic_curve ( ppath , & p , & pt_start_off , & start )"		811151	1					
ANR	812140	Callee	add_quadratic_curve		811151	0					
ANR	812141	Identifier	add_quadratic_curve		811151	0					
ANR	812142	ArgumentList	ppath		811151	1					
ANR	812143	Argument	ppath		811151	0					
ANR	812144	Identifier	ppath		811151	0					
ANR	812145	Argument	& p		811151	1					
ANR	812146	UnaryOperationExpression	& p		811151	0					
ANR	812147	UnaryOperator	&		811151	0					
ANR	812148	Identifier	p		811151	1					
ANR	812149	Argument	& pt_start_off		811151	2					
ANR	812150	UnaryOperationExpression	& pt_start_off		811151	0					
ANR	812151	UnaryOperator	&		811151	0					
ANR	812152	Identifier	pt_start_off		811151	1					
ANR	812153	Argument	& start		811151	3					
ANR	812154	UnaryOperationExpression	& start		811151	0					
ANR	812155	UnaryOperator	&		811151	0					
ANR	812156	Identifier	start		811151	1					
ANR	812157	IfStatement	if ( code < 0 )		811151	6					
ANR	812158	Condition	code < 0	1472:28:57525:57532	811151	0	True				
ANR	812159	RelationalExpression	code < 0		811151	0		<			
ANR	812160	Identifier	code		811151	0					
ANR	812161	PrimaryExpression	0		811151	1					
ANR	812162	ReturnStatement	return code ;	1473:28:57563:57574	811151	1	True				
ANR	812163	Identifier	code		811151	0					
ANR	812164	ElseStatement	else		811151	0					
ANR	812165	CompoundStatement		170:27:6430:6430	811151	0					
ANR	812166	ExpressionStatement	"code = add_quadratic_curve ( ppath , cpoints , & pt_start_off , & start )"	1475:24:57629:57694	811151	0	True				
ANR	812167	AssignmentExpression	"code = add_quadratic_curve ( ppath , cpoints , & pt_start_off , & start )"		811151	0		=			
ANR	812168	Identifier	code		811151	0					
ANR	812169	CallExpression	"add_quadratic_curve ( ppath , cpoints , & pt_start_off , & start )"		811151	1					
ANR	812170	Callee	add_quadratic_curve		811151	0					
ANR	812171	Identifier	add_quadratic_curve		811151	0					
ANR	812172	ArgumentList	ppath		811151	1					
ANR	812173	Argument	ppath		811151	0					
ANR	812174	Identifier	ppath		811151	0					
ANR	812175	Argument	cpoints		811151	1					
ANR	812176	Identifier	cpoints		811151	0					
ANR	812177	Argument	& pt_start_off		811151	2					
ANR	812178	UnaryOperationExpression	& pt_start_off		811151	0					
ANR	812179	UnaryOperator	&		811151	0					
ANR	812180	Identifier	pt_start_off		811151	1					
ANR	812181	Argument	& start		811151	3					
ANR	812182	UnaryOperationExpression	& start		811151	0					
ANR	812183	UnaryOperator	&		811151	0					
ANR	812184	Identifier	start		811151	1					
ANR	812185	IfStatement	if ( code < 0 )		811151	1					
ANR	812186	Condition	code < 0	1476:28:57724:57731	811151	0	True				
ANR	812187	RelationalExpression	code < 0		811151	0		<			
ANR	812188	Identifier	code		811151	0					
ANR	812189	PrimaryExpression	0		811151	1					
ANR	812190	ReturnStatement	return code ;	1477:28:57762:57773	811151	1	True				
ANR	812191	Identifier	code		811151	0					
ANR	812192	ElseStatement	else		811151	0					
ANR	812193	CompoundStatement		175:23:6647:6647	811151	0					
ANR	812194	IfStatement	if ( off_curve )		811151	0					
ANR	812195	Condition	off_curve	1480:24:57846:57854	811151	0	True				
ANR	812196	Identifier	off_curve		811151	0					
ANR	812197	CompoundStatement		176:35:6684:6684	811151	1					
ANR	812198	ExpressionStatement	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & start )"	1481:24:57883:57944	811151	0	True				
ANR	812199	AssignmentExpression	"code = add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & start )"		811151	0		=			
ANR	812200	Identifier	code		811151	0					
ANR	812201	CallExpression	"add_quadratic_curve ( ppath , cpoints , cpoints + 1 , & start )"		811151	1					
ANR	812202	Callee	add_quadratic_curve		811151	0					
ANR	812203	Identifier	add_quadratic_curve		811151	0					
ANR	812204	ArgumentList	ppath		811151	1					
ANR	812205	Argument	ppath		811151	0					
ANR	812206	Identifier	ppath		811151	0					
ANR	812207	Argument	cpoints		811151	1					
ANR	812208	Identifier	cpoints		811151	0					
ANR	812209	Argument	cpoints + 1		811151	2					
ANR	812210	AdditiveExpression	cpoints + 1		811151	0		+			
ANR	812211	Identifier	cpoints		811151	0					
ANR	812212	PrimaryExpression	1		811151	1					
ANR	812213	Argument	& start		811151	3					
ANR	812214	UnaryOperationExpression	& start		811151	0					
ANR	812215	UnaryOperator	&		811151	0					
ANR	812216	Identifier	start		811151	1					
ANR	812217	IfStatement	if ( code < 0 )		811151	1					
ANR	812218	Condition	code < 0	1482:28:57974:57981	811151	0	True				
ANR	812219	RelationalExpression	code < 0		811151	0		<			
ANR	812220	Identifier	code		811151	0					
ANR	812221	PrimaryExpression	0		811151	1					
ANR	812222	ReturnStatement	return code ;	1483:28:58012:58023	811151	1	True				
ANR	812223	Identifier	code		811151	0					
ANR	812224	ExpressionStatement	code = gx_path_close_subpath ( ppath )	1486:16:58081:58116	811151	1	True				
ANR	812225	AssignmentExpression	code = gx_path_close_subpath ( ppath )		811151	0		=			
ANR	812226	Identifier	code		811151	0					
ANR	812227	CallExpression	gx_path_close_subpath ( ppath )		811151	1					
ANR	812228	Callee	gx_path_close_subpath		811151	0					
ANR	812229	Identifier	gx_path_close_subpath		811151	0					
ANR	812230	ArgumentList	ppath		811151	1					
ANR	812231	Argument	ppath		811151	0					
ANR	812232	Identifier	ppath		811151	0					
ANR	812233	IfStatement	if ( code < 0 )		811151	2					
ANR	812234	Condition	code < 0	1487:20:58138:58145	811151	0	True				
ANR	812235	RelationalExpression	code < 0		811151	0		<			
ANR	812236	Identifier	code		811151	0					
ANR	812237	PrimaryExpression	0		811151	1					
ANR	812238	ReturnStatement	return code ;	1488:20:58168:58179	811151	1	True				
ANR	812239	Identifier	code		811151	0					
ANR	812240	ReturnStatement	return 0 ;	1492:4:58215:58223	811151	10	True				
ANR	812241	PrimaryExpression	0		811151	0					
ANR	812242	ReturnType	static int		811151	1					
ANR	812243	Identifier	append_simple		811151	2					
ANR	812244	ParameterList	"const byte * gdata , float sbw [ 4 ] , const gs_matrix_fixed * pmat , gx_path * ppath , gs_fixed_point * ppts , gs_font_type42 * pfont , bool subglyph"		811151	3					
ANR	812245	Parameter	const byte * gdata	1302:14:51005:51021	811151	0	True				
ANR	812246	ParameterType	const byte *		811151	0					
ANR	812247	Identifier	gdata		811151	1					
ANR	812248	Parameter	float sbw [ 4 ]	1302:33:51024:51035	811151	1	True				
ANR	812249	ParameterType	float [ 4 ]		811151	0					
ANR	812250	Identifier	sbw		811151	1					
ANR	812251	Parameter	const gs_matrix_fixed * pmat	1302:47:51038:51064	811151	2	True				
ANR	812252	ParameterType	const gs_matrix_fixed *		811151	0					
ANR	812253	Identifier	pmat		811151	1					
ANR	812254	Parameter	gx_path * ppath	1303:14:51081:51094	811151	3	True				
ANR	812255	ParameterType	gx_path *		811151	0					
ANR	812256	Identifier	ppath		811151	1					
ANR	812257	Parameter	gs_fixed_point * ppts	1303:30:51097:51116	811151	4	True				
ANR	812258	ParameterType	gs_fixed_point *		811151	0					
ANR	812259	Identifier	ppts		811151	1					
ANR	812260	Parameter	gs_font_type42 * pfont	1303:52:51119:51140	811151	5	True				
ANR	812261	ParameterType	gs_font_type42 *		811151	0					
ANR	812262	Identifier	pfont		811151	1					
ANR	812263	Parameter	bool subglyph	1304:14:51157:51169	811151	6	True				
ANR	812264	ParameterType	bool		811151	0					
ANR	812265	Identifier	subglyph		811151	1					
ANR	812266	CFGEntryNode	ENTRY		811151		True				
ANR	812267	CFGExitNode	EXIT		811151		True				
ANR	812268	Symbol	pt		811151						
ANR	812269	Symbol	npoints		811151						
ANR	812270	Symbol	sbw		811151						
ANR	812271	Symbol	gf_yShort		811151						
ANR	812272	Symbol	xbytes		811151						
ANR	812273	Symbol	cpoints [ 1 ] . y		811151						
ANR	812274	Symbol	cpoints [ 1 ] . x		811151						
ANR	812275	Symbol	dx		811151						
ANR	812276	Symbol	subglyph		811151						
ANR	812277	Symbol	dy		811151						
ANR	812278	Symbol	* ppts		811151						
ANR	812279	Symbol	pfont -> data . unitsPerEm		811151						
ANR	812280	Symbol	pt_start_off . y		811151						
ANR	812281	Symbol	pt_start_off . x		811151						
ANR	812282	Symbol	pt_start_off		811151						
ANR	812283	Symbol	offset		811151						
ANR	812284	Symbol	gf_xSame		811151						
ANR	812285	Symbol	gx_path_add_point		811151						
ANR	812286	Symbol	& pt		811151						
ANR	812287	Symbol	dpt . y		811151						
ANR	812288	Symbol	pends		811151						
ANR	812289	Symbol	dpt . x		811151						
ANR	812290	Symbol	start . y		811151						
ANR	812291	Symbol	start . x		811151						
ANR	812292	Symbol	true		811151						
ANR	812293	Symbol	S16		811151						
ANR	812294	Symbol	& start		811151						
ANR	812295	Symbol	U16		811151						
ANR	812296	Symbol	gf_xPos		811151						
ANR	812297	Symbol	np		811151						
ANR	812298	Symbol	code		811151						
ANR	812299	Symbol	reps		811151						
ANR	812300	Symbol	pmat		811151						
ANR	812301	Symbol	pfont -> memory		811151						
ANR	812302	Symbol	* cpoints		811151						
ANR	812303	Symbol	flags		811151						
ANR	812304	Symbol	is_start_off		811151						
ANR	812305	Symbol	& dpt		811151						
ANR	812306	Symbol	gs_distance_transform2fixed		811151						
ANR	812307	Symbol	gdata		811151						
ANR	812308	Symbol	ppath		811151						
ANR	812309	Symbol	ppts		811151						
ANR	812310	Symbol	add_quadratic_curve		811151						
ANR	812311	Symbol	gx_path_close_subpath		811151						
ANR	812312	Symbol	& pt_start_off		811151						
ANR	812313	Symbol	* pyc ++		811151						
ANR	812314	Symbol	gf_yPos		811151						
ANR	812315	Symbol	gf_OnCurve		811151						
ANR	812316	Symbol	pxc		811151						
ANR	812317	Symbol	* pxc ++		811151						
ANR	812318	Symbol	factor		811151						
ANR	812319	Symbol	gf_ySame		811151						
ANR	812320	Symbol	xmin		811151						
ANR	812321	Symbol	move		811151						
ANR	812322	Symbol	fixed2float		811151						
ANR	812323	Symbol	pfont		811151						
ANR	812324	Symbol	pinstr		811151						
ANR	812325	Symbol	false		811151						
ANR	812326	Symbol	start		811151						
ANR	812327	Symbol	i		811151						
ANR	812328	Symbol	pfont -> data		811151						
ANR	812329	Symbol	dpt		811151						
ANR	812330	Symbol	* np		811151						
ANR	812331	Symbol	* pf ++		811151						
ANR	812332	Symbol	p . y		811151						
ANR	812333	Symbol	p . x		811151						
ANR	812334	Symbol	* pflags ++		811151						
ANR	812335	Symbol	p		811151						
ANR	812336	Symbol	* pfont		811151						
ANR	812337	Symbol	* sbw		811151						
ANR	812338	Symbol	cpoints		811151						
ANR	812339	Symbol	pf		811151						
ANR	812340	Symbol	& p		811151						
ANR	812341	Symbol	gx_path_add_line		811151						
ANR	812342	Symbol	numContours		811151						
ANR	812343	Symbol	pflags		811151						
ANR	812344	Symbol	off_curve		811151						
ANR	812345	Symbol	last_point		811151						
ANR	812346	Symbol	gf_Repeat		811151						
ANR	812347	Symbol	pt . x		811151						
ANR	812348	Symbol	pyc		811151						
ANR	812349	Symbol	pt . y		811151						
ANR	812350	Symbol	gf_xShort		811151						
ANR	812351	Function	check_component	1500:0:58372:59387							
ANR	812352	FunctionDef	"check_component (uint glyph_index , const gs_matrix_fixed * pmat , gx_path * ppath , gs_font_type42 * pfont , gs_fixed_point * ppts , gs_glyph_data_t * pgd , bool subglyph)"		812351	0					
ANR	812353	CompoundStatement		1504:0:58576:59387	812351	0					
ANR	812354	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	1505:4:58582:58608	812351	0	True				
ANR	812355	IdentifierDecl	glyph_data		812351	0					
ANR	812356	IdentifierDeclType	gs_glyph_data_t		812351	0					
ANR	812357	Identifier	glyph_data		812351	1					
ANR	812358	IdentifierDeclStatement	const byte * gdata ;	1506:4:58614:58631	812351	1	True				
ANR	812359	IdentifierDecl	* gdata		812351	0					
ANR	812360	IdentifierDeclType	const byte *		812351	0					
ANR	812361	Identifier	gdata		812351	1					
ANR	812362	IdentifierDeclStatement	float sbw [ 4 ] ;	1507:4:58637:58649	812351	2	True				
ANR	812363	IdentifierDecl	sbw [ 4 ]		812351	0					
ANR	812364	IdentifierDeclType	float [ 4 ]		812351	0					
ANR	812365	Identifier	sbw		812351	1					
ANR	812366	PrimaryExpression	4		812351	2					
ANR	812367	IdentifierDeclStatement	int numContours ;	1508:4:58655:58670	812351	3	True				
ANR	812368	IdentifierDecl	numContours		812351	0					
ANR	812369	IdentifierDeclType	int		812351	0					
ANR	812370	Identifier	numContours		812351	1					
ANR	812371	IdentifierDeclStatement	int code ;	1509:4:58676:58684	812351	4	True				
ANR	812372	IdentifierDecl	code		812351	0					
ANR	812373	IdentifierDeclType	int		812351	0					
ANR	812374	Identifier	code		812351	1					
ANR	812375	ExpressionStatement	glyph_data . memory = pfont -> memory	1511:4:58691:58724	812351	5	True				
ANR	812376	AssignmentExpression	glyph_data . memory = pfont -> memory		812351	0		=			
ANR	812377	MemberAccess	glyph_data . memory		812351	0					
ANR	812378	Identifier	glyph_data		812351	0					
ANR	812379	Identifier	memory		812351	1					
ANR	812380	PtrMemberAccess	pfont -> memory		812351	1					
ANR	812381	Identifier	pfont		812351	0					
ANR	812382	Identifier	memory		812351	1					
ANR	812383	ExpressionStatement	"code = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"	1512:4:58730:58793	812351	6	True				
ANR	812384	AssignmentExpression	"code = pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		812351	0		=			
ANR	812385	Identifier	code		812351	0					
ANR	812386	CallExpression	"pfont -> data . get_outline ( pfont , glyph_index , & glyph_data )"		812351	1					
ANR	812387	Callee	pfont -> data . get_outline		812351	0					
ANR	812388	MemberAccess	pfont -> data . get_outline		812351	0					
ANR	812389	PtrMemberAccess	pfont -> data		812351	0					
ANR	812390	Identifier	pfont		812351	0					
ANR	812391	Identifier	data		812351	1					
ANR	812392	Identifier	get_outline		812351	1					
ANR	812393	ArgumentList	pfont		812351	1					
ANR	812394	Argument	pfont		812351	0					
ANR	812395	Identifier	pfont		812351	0					
ANR	812396	Argument	glyph_index		812351	1					
ANR	812397	Identifier	glyph_index		812351	0					
ANR	812398	Argument	& glyph_data		812351	2					
ANR	812399	UnaryOperationExpression	& glyph_data		812351	0					
ANR	812400	UnaryOperator	&		812351	0					
ANR	812401	Identifier	glyph_data		812351	1					
ANR	812402	IfStatement	if ( code < 0 )		812351	7					
ANR	812403	Condition	code < 0	1513:8:58803:58810	812351	0	True				
ANR	812404	RelationalExpression	code < 0		812351	0		<			
ANR	812405	Identifier	code		812351	0					
ANR	812406	PrimaryExpression	0		812351	1					
ANR	812407	ReturnStatement	return code ;	1514:8:58821:58832	812351	1	True				
ANR	812408	Identifier	code		812351	0					
ANR	812409	ExpressionStatement	gdata = glyph_data . bits . data	1515:4:58838:58866	812351	8	True				
ANR	812410	AssignmentExpression	gdata = glyph_data . bits . data		812351	0		=			
ANR	812411	Identifier	gdata		812351	0					
ANR	812412	MemberAccess	glyph_data . bits . data		812351	1					
ANR	812413	MemberAccess	glyph_data . bits		812351	0					
ANR	812414	Identifier	glyph_data		812351	0					
ANR	812415	Identifier	bits		812351	1					
ANR	812416	Identifier	data		812351	1					
ANR	812417	IfStatement	if ( gdata == 0 || glyph_data . bits . size == 0 )		812351	9					
ANR	812418	Condition	gdata == 0 || glyph_data . bits . size == 0	1516:8:58876:58914	812351	0	True				
ANR	812419	OrExpression	gdata == 0 || glyph_data . bits . size == 0		812351	0		||			
ANR	812420	EqualityExpression	gdata == 0		812351	0		==			
ANR	812421	Identifier	gdata		812351	0					
ANR	812422	PrimaryExpression	0		812351	1					
ANR	812423	EqualityExpression	glyph_data . bits . size == 0		812351	1		==			
ANR	812424	MemberAccess	glyph_data . bits . size		812351	0					
ANR	812425	MemberAccess	glyph_data . bits		812351	0					
ANR	812426	Identifier	glyph_data		812351	0					
ANR	812427	Identifier	bits		812351	1					
ANR	812428	Identifier	size		812351	1					
ANR	812429	PrimaryExpression	0		812351	1					
ANR	812430	ReturnStatement	return 0 ;	1517:8:58943:58951	812351	1	True				
ANR	812431	PrimaryExpression	0		812351	0					
ANR	812432	ExpressionStatement	numContours = S16 ( gdata )	1518:4:58957:58981	812351	10	True				
ANR	812433	AssignmentExpression	numContours = S16 ( gdata )		812351	0		=			
ANR	812434	Identifier	numContours		812351	0					
ANR	812435	CallExpression	S16 ( gdata )		812351	1					
ANR	812436	Callee	S16		812351	0					
ANR	812437	Identifier	S16		812351	0					
ANR	812438	ArgumentList	gdata		812351	1					
ANR	812439	Argument	gdata		812351	0					
ANR	812440	Identifier	gdata		812351	0					
ANR	812441	IfStatement	if ( numContours >= 0 )		812351	11					
ANR	812442	Condition	numContours >= 0	1519:8:58991:59006	812351	0	True				
ANR	812443	RelationalExpression	numContours >= 0		812351	0		>=			
ANR	812444	Identifier	numContours		812351	0					
ANR	812445	PrimaryExpression	0		812351	1					
ANR	812446	CompoundStatement		16:26:432:432	812351	1					
ANR	812447	ExpressionStatement	"gs_type42_get_metrics ( pfont , glyph_index , sbw )"	1520:8:59019:59065	812351	0	True				
ANR	812448	CallExpression	"gs_type42_get_metrics ( pfont , glyph_index , sbw )"		812351	0					
ANR	812449	Callee	gs_type42_get_metrics		812351	0					
ANR	812450	Identifier	gs_type42_get_metrics		812351	0					
ANR	812451	ArgumentList	pfont		812351	1					
ANR	812452	Argument	pfont		812351	0					
ANR	812453	Identifier	pfont		812351	0					
ANR	812454	Argument	glyph_index		812351	1					
ANR	812455	Identifier	glyph_index		812351	0					
ANR	812456	Argument	sbw		812351	2					
ANR	812457	Identifier	sbw		812351	0					
ANR	812458	ExpressionStatement	"code = append_simple ( gdata , sbw , pmat , ppath , ppts , pfont , subglyph )"	1521:8:59075:59143	812351	1	True				
ANR	812459	AssignmentExpression	"code = append_simple ( gdata , sbw , pmat , ppath , ppts , pfont , subglyph )"		812351	0		=			
ANR	812460	Identifier	code		812351	0					
ANR	812461	CallExpression	"append_simple ( gdata , sbw , pmat , ppath , ppts , pfont , subglyph )"		812351	1					
ANR	812462	Callee	append_simple		812351	0					
ANR	812463	Identifier	append_simple		812351	0					
ANR	812464	ArgumentList	gdata		812351	1					
ANR	812465	Argument	gdata		812351	0					
ANR	812466	Identifier	gdata		812351	0					
ANR	812467	Argument	sbw		812351	1					
ANR	812468	Identifier	sbw		812351	0					
ANR	812469	Argument	pmat		812351	2					
ANR	812470	Identifier	pmat		812351	0					
ANR	812471	Argument	ppath		812351	3					
ANR	812472	Identifier	ppath		812351	0					
ANR	812473	Argument	ppts		812351	4					
ANR	812474	Identifier	ppts		812351	0					
ANR	812475	Argument	pfont		812351	5					
ANR	812476	Identifier	pfont		812351	0					
ANR	812477	Argument	subglyph		812351	6					
ANR	812478	Identifier	subglyph		812351	0					
ANR	812479	ExpressionStatement	"gs_glyph_data_free ( & glyph_data , ""check_component"" )"	1522:8:59153:59203	812351	2	True				
ANR	812480	CallExpression	"gs_glyph_data_free ( & glyph_data , ""check_component"" )"		812351	0					
ANR	812481	Callee	gs_glyph_data_free		812351	0					
ANR	812482	Identifier	gs_glyph_data_free		812351	0					
ANR	812483	ArgumentList	& glyph_data		812351	1					
ANR	812484	Argument	& glyph_data		812351	0					
ANR	812485	UnaryOperationExpression	& glyph_data		812351	0					
ANR	812486	UnaryOperator	&		812351	0					
ANR	812487	Identifier	glyph_data		812351	1					
ANR	812488	Argument	"""check_component"""		812351	1					
ANR	812489	PrimaryExpression	"""check_component"""		812351	0					
ANR	812490	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1523:8:59213:59241	812351	3	True				
ANR	812491	ConditionalExpression	code < 0 ? code : 0		812351	0					
ANR	812492	Condition	code < 0		812351	0					
ANR	812493	RelationalExpression	code < 0		812351	0		<			
ANR	812494	Identifier	code		812351	0					
ANR	812495	PrimaryExpression	0		812351	1					
ANR	812496	Identifier	code		812351	1					
ANR	812497	PrimaryExpression	0		812351	2					
ANR	812498	IfStatement	if ( numContours != - 1 )		812351	12					
ANR	812499	Condition	numContours != - 1	1525:8:59270:59286	812351	0	True				
ANR	812500	EqualityExpression	numContours != - 1		812351	0		!=			
ANR	812501	Identifier	numContours		812351	0					
ANR	812502	UnaryOperationExpression	- 1		812351	1					
ANR	812503	UnaryOperator	-		812351	0					
ANR	812504	PrimaryExpression	1		812351	1					
ANR	812505	ExpressionStatement	return_error ( gs_error_rangecheck )	1526:8:59297:59330	812351	1	True				
ANR	812506	CallExpression	return_error ( gs_error_rangecheck )		812351	0					
ANR	812507	Callee	return_error		812351	0					
ANR	812508	Identifier	return_error		812351	0					
ANR	812509	ArgumentList	gs_error_rangecheck		812351	1					
ANR	812510	Argument	gs_error_rangecheck		812351	0					
ANR	812511	Identifier	gs_error_rangecheck		812351	0					
ANR	812512	ExpressionStatement	* pgd = glyph_data	1527:4:59336:59353	812351	13	True				
ANR	812513	AssignmentExpression	* pgd = glyph_data		812351	0		=			
ANR	812514	UnaryOperationExpression	* pgd		812351	0					
ANR	812515	UnaryOperator	*		812351	0					
ANR	812516	Identifier	pgd		812351	1					
ANR	812517	Identifier	glyph_data		812351	1					
ANR	812518	ReturnStatement	return 1 ;	1528:4:59359:59367	812351	14	True				
ANR	812519	PrimaryExpression	1		812351	0					
ANR	812520	ReturnType	static int		812351	1					
ANR	812521	Identifier	check_component		812351	2					
ANR	812522	ParameterList	"uint glyph_index , const gs_matrix_fixed * pmat , gx_path * ppath , gs_font_type42 * pfont , gs_fixed_point * ppts , gs_glyph_data_t * pgd , bool subglyph"		812351	3					
ANR	812523	Parameter	uint glyph_index	1501:16:58399:58414	812351	0	True				
ANR	812524	ParameterType	uint		812351	0					
ANR	812525	Identifier	glyph_index		812351	1					
ANR	812526	Parameter	const gs_matrix_fixed * pmat	1501:34:58417:58443	812351	1	True				
ANR	812527	ParameterType	const gs_matrix_fixed *		812351	0					
ANR	812528	Identifier	pmat		812351	1					
ANR	812529	Parameter	gx_path * ppath	1502:16:58462:58475	812351	2	True				
ANR	812530	ParameterType	gx_path *		812351	0					
ANR	812531	Identifier	ppath		812351	1					
ANR	812532	Parameter	gs_font_type42 * pfont	1502:32:58478:58498	812351	3	True				
ANR	812533	ParameterType	gs_font_type42 *		812351	0					
ANR	812534	Identifier	pfont		812351	1					
ANR	812535	Parameter	gs_fixed_point * ppts	1502:55:58501:58520	812351	4	True				
ANR	812536	ParameterType	gs_fixed_point *		812351	0					
ANR	812537	Identifier	ppts		812351	1					
ANR	812538	Parameter	gs_glyph_data_t * pgd	1503:16:58539:58558	812351	5	True				
ANR	812539	ParameterType	gs_glyph_data_t *		812351	0					
ANR	812540	Identifier	pgd		812351	1					
ANR	812541	Parameter	bool subglyph	1503:38:58561:58573	812351	6	True				
ANR	812542	ParameterType	bool		812351	0					
ANR	812543	Identifier	subglyph		812351	1					
ANR	812544	CFGEntryNode	ENTRY		812351		True				
ANR	812545	CFGExitNode	EXIT		812351		True				
ANR	812546	Symbol	code		812351						
ANR	812547	Symbol	glyph_data . bits . data		812351						
ANR	812548	Symbol	glyph_index		812351						
ANR	812549	Symbol	pmat		812351						
ANR	812550	Symbol	pfont -> memory		812351						
ANR	812551	Symbol	gs_error_rangecheck		812351						
ANR	812552	Symbol	sbw		812351						
ANR	812553	Symbol	ppath		812351						
ANR	812554	Symbol	ppts		812351						
ANR	812555	Symbol	gdata		812351						
ANR	812556	Symbol	pgd		812351						
ANR	812557	Symbol	glyph_data . bits . size		812351						
ANR	812558	Symbol	subglyph		812351						
ANR	812559	Symbol	append_simple		812351						
ANR	812560	Symbol	glyph_data . bits		812351						
ANR	812561	Symbol	pfont		812351						
ANR	812562	Symbol	glyph_data		812351						
ANR	812563	Symbol	pfont -> data		812351						
ANR	812564	Symbol	* pfont		812351						
ANR	812565	Symbol	glyph_data . memory		812351						
ANR	812566	Symbol	pfont -> data . get_outline		812351						
ANR	812567	Symbol	* pgd		812351						
ANR	812568	Symbol	numContours		812351						
ANR	812569	Symbol	S16		812351						
ANR	812570	Symbol	& glyph_data		812351						
ANR	812571	Function	append_component	1533:0:59440:61671							
ANR	812572	FunctionDef	"append_component (uint glyph_index , const gs_matrix_fixed * pmat , gx_path * ppath , gs_fixed_point * ppts , int point_index , gs_font_type42 * pfont , bool subglyph)"		812571	0					
ANR	812573	CompoundStatement		1537:0:59645:61671	812571	0					
ANR	812574	IdentifierDeclStatement	gs_glyph_data_t glyph_data ;	1538:4:59651:59677	812571	0	True				
ANR	812575	IdentifierDecl	glyph_data		812571	0					
ANR	812576	IdentifierDeclType	gs_glyph_data_t		812571	0					
ANR	812577	Identifier	glyph_data		812571	1					
ANR	812578	IdentifierDeclStatement	int code ;	1539:4:59683:59691	812571	1	True				
ANR	812579	IdentifierDecl	code		812571	0					
ANR	812580	IdentifierDeclType	int		812571	0					
ANR	812581	Identifier	code		812571	1					
ANR	812582	ExpressionStatement	glyph_data . memory = pfont -> memory	1541:4:59698:59731	812571	2	True				
ANR	812583	AssignmentExpression	glyph_data . memory = pfont -> memory		812571	0		=			
ANR	812584	MemberAccess	glyph_data . memory		812571	0					
ANR	812585	Identifier	glyph_data		812571	0					
ANR	812586	Identifier	memory		812571	1					
ANR	812587	PtrMemberAccess	pfont -> memory		812571	1					
ANR	812588	Identifier	pfont		812571	0					
ANR	812589	Identifier	memory		812571	1					
ANR	812590	ExpressionStatement	"code = check_component ( glyph_index , pmat , ppath , pfont , ppts + point_index , & glyph_data , subglyph )"	1542:4:59737:59862	812571	3	True				
ANR	812591	AssignmentExpression	"code = check_component ( glyph_index , pmat , ppath , pfont , ppts + point_index , & glyph_data , subglyph )"		812571	0		=			
ANR	812592	Identifier	code		812571	0					
ANR	812593	CallExpression	"check_component ( glyph_index , pmat , ppath , pfont , ppts + point_index , & glyph_data , subglyph )"		812571	1					
ANR	812594	Callee	check_component		812571	0					
ANR	812595	Identifier	check_component		812571	0					
ANR	812596	ArgumentList	glyph_index		812571	1					
ANR	812597	Argument	glyph_index		812571	0					
ANR	812598	Identifier	glyph_index		812571	0					
ANR	812599	Argument	pmat		812571	1					
ANR	812600	Identifier	pmat		812571	0					
ANR	812601	Argument	ppath		812571	2					
ANR	812602	Identifier	ppath		812571	0					
ANR	812603	Argument	pfont		812571	3					
ANR	812604	Identifier	pfont		812571	0					
ANR	812605	Argument	ppts + point_index		812571	4					
ANR	812606	AdditiveExpression	ppts + point_index		812571	0		+			
ANR	812607	Identifier	ppts		812571	0					
ANR	812608	Identifier	point_index		812571	1					
ANR	812609	Argument	& glyph_data		812571	5					
ANR	812610	UnaryOperationExpression	& glyph_data		812571	0					
ANR	812611	UnaryOperator	&		812571	0					
ANR	812612	Identifier	glyph_data		812571	1					
ANR	812613	Argument	subglyph		812571	6					
ANR	812614	Identifier	subglyph		812571	0					
ANR	812615	IfStatement	if ( code != 1 )		812571	4					
ANR	812616	Condition	code != 1	1544:8:59872:59880	812571	0	True				
ANR	812617	EqualityExpression	code != 1		812571	0		!=			
ANR	812618	Identifier	code		812571	0					
ANR	812619	PrimaryExpression	1		812571	1					
ANR	812620	ReturnStatement	return code ;	1545:8:59891:59902	812571	1	True				
ANR	812621	Identifier	code		812571	0					
ANR	812622	CompoundStatement		17:8:477:522	812571	5					
ANR	812623	IdentifierDeclStatement	uint flags ;	1552:8:60103:60113	812571	0	True				
ANR	812624	IdentifierDecl	flags		812571	0					
ANR	812625	IdentifierDeclType	uint		812571	0					
ANR	812626	Identifier	flags		812571	1					
ANR	812627	IdentifierDeclStatement	const byte * gdata = glyph_data . bits . data + 10 ;	1553:8:60123:60168	812571	1	True				
ANR	812628	IdentifierDecl	* gdata = glyph_data . bits . data + 10		812571	0					
ANR	812629	IdentifierDeclType	const byte *		812571	0					
ANR	812630	Identifier	gdata		812571	1					
ANR	812631	AssignmentExpression	* gdata = glyph_data . bits . data + 10		812571	2		=			
ANR	812632	Identifier	gdata		812571	0					
ANR	812633	AdditiveExpression	glyph_data . bits . data + 10		812571	1		+			
ANR	812634	MemberAccess	glyph_data . bits . data		812571	0					
ANR	812635	MemberAccess	glyph_data . bits		812571	0					
ANR	812636	Identifier	glyph_data		812571	0					
ANR	812637	Identifier	bits		812571	1					
ANR	812638	Identifier	data		812571	1					
ANR	812639	PrimaryExpression	10		812571	1					
ANR	812640	DoStatement	do		812571	2					
ANR	812641	CompoundStatement		22:12:629:638	812571	0					
ANR	812642	IdentifierDeclStatement	uint comp_index = U16 ( gdata + 2 ) ;	1556:12:60196:60228	812571	0	True				
ANR	812643	IdentifierDecl	comp_index = U16 ( gdata + 2 )		812571	0					
ANR	812644	IdentifierDeclType	uint		812571	0					
ANR	812645	Identifier	comp_index		812571	1					
ANR	812646	AssignmentExpression	comp_index = U16 ( gdata + 2 )		812571	2		=			
ANR	812647	Identifier	comp_index		812571	0					
ANR	812648	CallExpression	U16 ( gdata + 2 )		812571	1					
ANR	812649	Callee	U16		812571	0					
ANR	812650	Identifier	U16		812571	0					
ANR	812651	ArgumentList	gdata + 2		812571	1					
ANR	812652	Argument	gdata + 2		812571	0					
ANR	812653	AdditiveExpression	gdata + 2		812571	0		+			
ANR	812654	Identifier	gdata		812571	0					
ANR	812655	PrimaryExpression	2		812571	1					
ANR	812656	IdentifierDeclStatement	gs_matrix_fixed mat ;	1557:12:60242:60261	812571	1	True				
ANR	812657	IdentifierDecl	mat		812571	0					
ANR	812658	IdentifierDeclType	gs_matrix_fixed		812571	0					
ANR	812659	Identifier	mat		812571	1					
ANR	812660	IdentifierDeclStatement	int mp [ 2 ] ;	1558:12:60275:60284	812571	2	True				
ANR	812661	IdentifierDecl	mp [ 2 ]		812571	0					
ANR	812662	IdentifierDeclType	int [ 2 ]		812571	0					
ANR	812663	Identifier	mp		812571	1					
ANR	812664	PrimaryExpression	2		812571	2					
ANR	812665	ExpressionStatement	"gs_type42_parse_component ( & gdata , & flags , & mat , mp , pfont , pmat )"	1560:12:60299:60363	812571	3	True				
ANR	812666	CallExpression	"gs_type42_parse_component ( & gdata , & flags , & mat , mp , pfont , pmat )"		812571	0					
ANR	812667	Callee	gs_type42_parse_component		812571	0					
ANR	812668	Identifier	gs_type42_parse_component		812571	0					
ANR	812669	ArgumentList	& gdata		812571	1					
ANR	812670	Argument	& gdata		812571	0					
ANR	812671	UnaryOperationExpression	& gdata		812571	0					
ANR	812672	UnaryOperator	&		812571	0					
ANR	812673	Identifier	gdata		812571	1					
ANR	812674	Argument	& flags		812571	1					
ANR	812675	UnaryOperationExpression	& flags		812571	0					
ANR	812676	UnaryOperator	&		812571	0					
ANR	812677	Identifier	flags		812571	1					
ANR	812678	Argument	& mat		812571	2					
ANR	812679	UnaryOperationExpression	& mat		812571	0					
ANR	812680	UnaryOperator	&		812571	0					
ANR	812681	Identifier	mat		812571	1					
ANR	812682	Argument	mp		812571	3					
ANR	812683	Identifier	mp		812571	0					
ANR	812684	Argument	pfont		812571	4					
ANR	812685	Identifier	pfont		812571	0					
ANR	812686	Argument	pmat		812571	5					
ANR	812687	Identifier	pmat		812571	0					
ANR	812688	IfStatement	if ( mp [ 0 ] >= 0 )		812571	4					
ANR	812689	Condition	mp [ 0 ] >= 0	1561:16:60381:60390	812571	0	True				
ANR	812690	RelationalExpression	mp [ 0 ] >= 0		812571	0		>=			
ANR	812691	ArrayIndexing	mp [ 0 ]		812571	0					
ANR	812692	Identifier	mp		812571	0					
ANR	812693	PrimaryExpression	0		812571	1					
ANR	812694	PrimaryExpression	0		812571	1					
ANR	812695	CompoundStatement		34:16:1207:1226	812571	1					
ANR	812696	Statement	const	1563:16:60468:60472	812571	0	True				
ANR	812697	Statement	gs_fixed_point	1563:22:60474:60487	812571	1	True				
ANR	812698	Statement	*	1563:37:60489:60489	812571	2	True				
ANR	812699	Statement	const	1563:38:60490:60494	812571	3	True				
ANR	812700	ExpressionStatement	pfrom = ppts + mp [ 0 ]	1563:44:60496:60516	812571	4	True				
ANR	812701	AssignmentExpression	pfrom = ppts + mp [ 0 ]		812571	0		=			
ANR	812702	Identifier	pfrom		812571	0					
ANR	812703	AdditiveExpression	ppts + mp [ 0 ]		812571	1		+			
ANR	812704	Identifier	ppts		812571	0					
ANR	812705	ArrayIndexing	mp [ 0 ]		812571	1					
ANR	812706	Identifier	mp		812571	0					
ANR	812707	PrimaryExpression	0		812571	1					
ANR	812708	Statement	const	1569:16:60775:60779	812571	5	True				
ANR	812709	Statement	gs_fixed_point	1569:22:60781:60794	812571	6	True				
ANR	812710	Statement	*	1569:37:60796:60796	812571	7	True				
ANR	812711	Statement	const	1569:38:60797:60801	812571	8	True				
ANR	812712	ExpressionStatement	pto = ppts + point_index + mp [ 1 ]	1569:44:60803:60835	812571	9	True				
ANR	812713	AssignmentExpression	pto = ppts + point_index + mp [ 1 ]		812571	0		=			
ANR	812714	Identifier	pto		812571	0					
ANR	812715	AdditiveExpression	ppts + point_index + mp [ 1 ]		812571	1		+			
ANR	812716	Identifier	ppts		812571	0					
ANR	812717	AdditiveExpression	point_index + mp [ 1 ]		812571	1		+			
ANR	812718	Identifier	point_index		812571	0					
ANR	812719	ArrayIndexing	mp [ 1 ]		812571	1					
ANR	812720	Identifier	mp		812571	0					
ANR	812721	PrimaryExpression	1		812571	1					
ANR	812722	IdentifierDeclStatement	gs_fixed_point diff ;	1570:16:60853:60872	812571	10	True				
ANR	812723	IdentifierDecl	diff		812571	0					
ANR	812724	IdentifierDeclType	gs_fixed_point		812571	0					
ANR	812725	Identifier	diff		812571	1					
ANR	812726	ExpressionStatement	"code = append_component ( comp_index , & mat , NULL , ppts , point_index , pfont , true )"	1572:16:60891:61010	812571	11	True				
ANR	812727	AssignmentExpression	"code = append_component ( comp_index , & mat , NULL , ppts , point_index , pfont , true )"		812571	0		=			
ANR	812728	Identifier	code		812571	0					
ANR	812729	CallExpression	"append_component ( comp_index , & mat , NULL , ppts , point_index , pfont , true )"		812571	1					
ANR	812730	Callee	append_component		812571	0					
ANR	812731	Identifier	append_component		812571	0					
ANR	812732	ArgumentList	comp_index		812571	1					
ANR	812733	Argument	comp_index		812571	0					
ANR	812734	Identifier	comp_index		812571	0					
ANR	812735	Argument	& mat		812571	1					
ANR	812736	UnaryOperationExpression	& mat		812571	0					
ANR	812737	UnaryOperator	&		812571	0					
ANR	812738	Identifier	mat		812571	1					
ANR	812739	Argument	NULL		812571	2					
ANR	812740	Identifier	NULL		812571	0					
ANR	812741	Argument	ppts		812571	3					
ANR	812742	Identifier	ppts		812571	0					
ANR	812743	Argument	point_index		812571	4					
ANR	812744	Identifier	point_index		812571	0					
ANR	812745	Argument	pfont		812571	5					
ANR	812746	Identifier	pfont		812571	0					
ANR	812747	Argument	true		812571	6					
ANR	812748	Identifier	true		812571	0					
ANR	812749	IfStatement	if ( code < 0 )		812571	12					
ANR	812750	Condition	code < 0	1574:20:61032:61039	812571	0	True				
ANR	812751	RelationalExpression	code < 0		812571	0		<			
ANR	812752	Identifier	code		812571	0					
ANR	812753	PrimaryExpression	0		812571	1					
ANR	812754	BreakStatement	break ;	1575:20:61062:61067	812571	1	True				
ANR	812755	ExpressionStatement	diff . x = pfrom -> x - pto -> x	1576:16:61085:61111	812571	13	True				
ANR	812756	AssignmentExpression	diff . x = pfrom -> x - pto -> x		812571	0		=			
ANR	812757	MemberAccess	diff . x		812571	0					
ANR	812758	Identifier	diff		812571	0					
ANR	812759	Identifier	x		812571	1					
ANR	812760	AdditiveExpression	pfrom -> x - pto -> x		812571	1		-			
ANR	812761	PtrMemberAccess	pfrom -> x		812571	0					
ANR	812762	Identifier	pfrom		812571	0					
ANR	812763	Identifier	x		812571	1					
ANR	812764	PtrMemberAccess	pto -> x		812571	1					
ANR	812765	Identifier	pto		812571	0					
ANR	812766	Identifier	x		812571	1					
ANR	812767	ExpressionStatement	diff . y = pfrom -> y - pto -> y	1577:16:61129:61155	812571	14	True				
ANR	812768	AssignmentExpression	diff . y = pfrom -> y - pto -> y		812571	0		=			
ANR	812769	MemberAccess	diff . y		812571	0					
ANR	812770	Identifier	diff		812571	0					
ANR	812771	Identifier	y		812571	1					
ANR	812772	AdditiveExpression	pfrom -> y - pto -> y		812571	1		-			
ANR	812773	PtrMemberAccess	pfrom -> y		812571	0					
ANR	812774	Identifier	pfrom		812571	0					
ANR	812775	Identifier	y		812571	1					
ANR	812776	PtrMemberAccess	pto -> y		812571	1					
ANR	812777	Identifier	pto		812571	0					
ANR	812778	Identifier	y		812571	1					
ANR	812779	ExpressionStatement	mat . tx = fixed2float ( mat . tx_fixed += diff . x )	1578:16:61173:61217	812571	15	True				
ANR	812780	AssignmentExpression	mat . tx = fixed2float ( mat . tx_fixed += diff . x )		812571	0		=			
ANR	812781	MemberAccess	mat . tx		812571	0					
ANR	812782	Identifier	mat		812571	0					
ANR	812783	Identifier	tx		812571	1					
ANR	812784	CallExpression	fixed2float ( mat . tx_fixed += diff . x )		812571	1					
ANR	812785	Callee	fixed2float		812571	0					
ANR	812786	Identifier	fixed2float		812571	0					
ANR	812787	ArgumentList	mat . tx_fixed += diff . x		812571	1					
ANR	812788	Argument	mat . tx_fixed += diff . x		812571	0					
ANR	812789	AssignmentExpression	mat . tx_fixed += diff . x		812571	0		+=			
ANR	812790	MemberAccess	mat . tx_fixed		812571	0					
ANR	812791	Identifier	mat		812571	0					
ANR	812792	Identifier	tx_fixed		812571	1					
ANR	812793	MemberAccess	diff . x		812571	1					
ANR	812794	Identifier	diff		812571	0					
ANR	812795	Identifier	x		812571	1					
ANR	812796	ExpressionStatement	mat . ty = fixed2float ( mat . ty_fixed += diff . y )	1579:16:61235:61279	812571	16	True				
ANR	812797	AssignmentExpression	mat . ty = fixed2float ( mat . ty_fixed += diff . y )		812571	0		=			
ANR	812798	MemberAccess	mat . ty		812571	0					
ANR	812799	Identifier	mat		812571	0					
ANR	812800	Identifier	ty		812571	1					
ANR	812801	CallExpression	fixed2float ( mat . ty_fixed += diff . y )		812571	1					
ANR	812802	Callee	fixed2float		812571	0					
ANR	812803	Identifier	fixed2float		812571	0					
ANR	812804	ArgumentList	mat . ty_fixed += diff . y		812571	1					
ANR	812805	Argument	mat . ty_fixed += diff . y		812571	0					
ANR	812806	AssignmentExpression	mat . ty_fixed += diff . y		812571	0		+=			
ANR	812807	MemberAccess	mat . ty_fixed		812571	0					
ANR	812808	Identifier	mat		812571	0					
ANR	812809	Identifier	ty_fixed		812571	1					
ANR	812810	MemberAccess	diff . y		812571	1					
ANR	812811	Identifier	diff		812571	0					
ANR	812812	Identifier	y		812571	1					
ANR	812813	ExpressionStatement	"code = append_component ( comp_index , & mat , ppath , ppts , point_index , pfont , true )"	1581:12:61307:61423	812571	5	True				
ANR	812814	AssignmentExpression	"code = append_component ( comp_index , & mat , ppath , ppts , point_index , pfont , true )"		812571	0		=			
ANR	812815	Identifier	code		812571	0					
ANR	812816	CallExpression	"append_component ( comp_index , & mat , ppath , ppts , point_index , pfont , true )"		812571	1					
ANR	812817	Callee	append_component		812571	0					
ANR	812818	Identifier	append_component		812571	0					
ANR	812819	ArgumentList	comp_index		812571	1					
ANR	812820	Argument	comp_index		812571	0					
ANR	812821	Identifier	comp_index		812571	0					
ANR	812822	Argument	& mat		812571	1					
ANR	812823	UnaryOperationExpression	& mat		812571	0					
ANR	812824	UnaryOperator	&		812571	0					
ANR	812825	Identifier	mat		812571	1					
ANR	812826	Argument	ppath		812571	2					
ANR	812827	Identifier	ppath		812571	0					
ANR	812828	Argument	ppts		812571	3					
ANR	812829	Identifier	ppts		812571	0					
ANR	812830	Argument	point_index		812571	4					
ANR	812831	Identifier	point_index		812571	0					
ANR	812832	Argument	pfont		812571	5					
ANR	812833	Identifier	pfont		812571	0					
ANR	812834	Argument	true		812571	6					
ANR	812835	Identifier	true		812571	0					
ANR	812836	IfStatement	if ( code < 0 )		812571	6					
ANR	812837	Condition	code < 0	1583:16:61441:61448	812571	0	True				
ANR	812838	RelationalExpression	code < 0		812571	0		<			
ANR	812839	Identifier	code		812571	0					
ANR	812840	PrimaryExpression	0		812571	1					
ANR	812841	BreakStatement	break ;	1584:16:61467:61472	812571	1	True				
ANR	812842	ExpressionStatement	"point_index += total_points ( pfont , comp_index )"	1585:12:61486:61532	812571	7	True				
ANR	812843	AssignmentExpression	"point_index += total_points ( pfont , comp_index )"		812571	0		+=			
ANR	812844	Identifier	point_index		812571	0					
ANR	812845	CallExpression	"total_points ( pfont , comp_index )"		812571	1					
ANR	812846	Callee	total_points		812571	0					
ANR	812847	Identifier	total_points		812571	0					
ANR	812848	ArgumentList	pfont		812571	1					
ANR	812849	Argument	pfont		812571	0					
ANR	812850	Identifier	pfont		812571	0					
ANR	812851	Argument	comp_index		812571	1					
ANR	812852	Identifier	comp_index		812571	0					
ANR	812853	Condition	flags & TT_CG_MORE_COMPONENTS	1587:15:61559:61587	812571	1	True				
ANR	812854	BitAndExpression	flags & TT_CG_MORE_COMPONENTS		812571	0		&			
ANR	812855	Identifier	flags		812571	0					
ANR	812856	Identifier	TT_CG_MORE_COMPONENTS		812571	1					
ANR	812857	ExpressionStatement	"gs_glyph_data_free ( & glyph_data , ""append_component"" )"	1589:4:61601:61652	812571	6	True				
ANR	812858	CallExpression	"gs_glyph_data_free ( & glyph_data , ""append_component"" )"		812571	0					
ANR	812859	Callee	gs_glyph_data_free		812571	0					
ANR	812860	Identifier	gs_glyph_data_free		812571	0					
ANR	812861	ArgumentList	& glyph_data		812571	1					
ANR	812862	Argument	& glyph_data		812571	0					
ANR	812863	UnaryOperationExpression	& glyph_data		812571	0					
ANR	812864	UnaryOperator	&		812571	0					
ANR	812865	Identifier	glyph_data		812571	1					
ANR	812866	Argument	"""append_component"""		812571	1					
ANR	812867	PrimaryExpression	"""append_component"""		812571	0					
ANR	812868	ReturnStatement	return code ;	1590:4:61658:61669	812571	7	True				
ANR	812869	Identifier	code		812571	0					
ANR	812870	ReturnType	static int		812571	1					
ANR	812871	Identifier	append_component		812571	2					
ANR	812872	ParameterList	"uint glyph_index , const gs_matrix_fixed * pmat , gx_path * ppath , gs_fixed_point * ppts , int point_index , gs_font_type42 * pfont , bool subglyph"		812571	3					
ANR	812873	Parameter	uint glyph_index	1534:17:59468:59483	812571	0	True				
ANR	812874	ParameterType	uint		812571	0					
ANR	812875	Identifier	glyph_index		812571	1					
ANR	812876	Parameter	const gs_matrix_fixed * pmat	1534:35:59486:59513	812571	1	True				
ANR	812877	ParameterType	const gs_matrix_fixed *		812571	0					
ANR	812878	Identifier	pmat		812571	1					
ANR	812879	Parameter	gx_path * ppath	1535:17:59533:59547	812571	2	True				
ANR	812880	ParameterType	gx_path *		812571	0					
ANR	812881	Identifier	ppath		812571	1					
ANR	812882	Parameter	gs_fixed_point * ppts	1535:34:59550:59569	812571	3	True				
ANR	812883	ParameterType	gs_fixed_point *		812571	0					
ANR	812884	Identifier	ppts		812571	1					
ANR	812885	Parameter	int point_index	1535:56:59572:59586	812571	4	True				
ANR	812886	ParameterType	int		812571	0					
ANR	812887	Identifier	point_index		812571	1					
ANR	812888	Parameter	gs_font_type42 * pfont	1536:17:59606:59627	812571	5	True				
ANR	812889	ParameterType	gs_font_type42 *		812571	0					
ANR	812890	Identifier	pfont		812571	1					
ANR	812891	Parameter	bool subglyph	1536:41:59630:59642	812571	6	True				
ANR	812892	ParameterType	bool		812571	0					
ANR	812893	Identifier	subglyph		812571	1					
ANR	812894	CFGEntryNode	ENTRY		812571		True				
ANR	812895	CFGExitNode	EXIT		812571		True				
ANR	812896	Symbol	point_index		812571						
ANR	812897	Symbol	pfrom		812571						
ANR	812898	Symbol	& mat		812571						
ANR	812899	Symbol	code		812571						
ANR	812900	Symbol	glyph_data . bits . data		812571						
ANR	812901	Symbol	mat . ty_fixed		812571						
ANR	812902	Symbol	glyph_index		812571						
ANR	812903	Symbol	pmat		812571						
ANR	812904	Symbol	pfont -> memory		812571						
ANR	812905	Symbol	pto -> x		812571						
ANR	812906	Symbol	pto -> y		812571						
ANR	812907	Symbol	pfrom -> y		812571						
ANR	812908	Symbol	total_points		812571						
ANR	812909	Symbol	flags		812571						
ANR	812910	Symbol	* mp		812571						
ANR	812911	Symbol	ppath		812571						
ANR	812912	Symbol	ppts		812571						
ANR	812913	Symbol	gdata		812571						
ANR	812914	Symbol	mat . ty		812571						
ANR	812915	Symbol	mat . tx		812571						
ANR	812916	Symbol	TT_CG_MORE_COMPONENTS		812571						
ANR	812917	Symbol	subglyph		812571						
ANR	812918	Symbol	* pto		812571						
ANR	812919	Symbol	pfrom -> x		812571						
ANR	812920	Symbol	& flags		812571						
ANR	812921	Symbol	* pfrom		812571						
ANR	812922	Symbol	glyph_data . bits		812571						
ANR	812923	Symbol	append_component		812571						
ANR	812924	Symbol	mat		812571						
ANR	812925	Symbol	mat . tx_fixed		812571						
ANR	812926	Symbol	mp		812571						
ANR	812927	Symbol	NULL		812571						
ANR	812928	Symbol	fixed2float		812571						
ANR	812929	Symbol	pfont		812571						
ANR	812930	Symbol	comp_index		812571						
ANR	812931	Symbol	glyph_data		812571						
ANR	812932	Symbol	pto		812571						
ANR	812933	Symbol	diff		812571						
ANR	812934	Symbol	* pfont		812571						
ANR	812935	Symbol	diff . y		812571						
ANR	812936	Symbol	glyph_data . memory		812571						
ANR	812937	Symbol	& gdata		812571						
ANR	812938	Symbol	diff . x		812571						
ANR	812939	Symbol	true		812571						
ANR	812940	Symbol	check_component		812571						
ANR	812941	Symbol	U16		812571						
ANR	812942	Symbol	& glyph_data		812571						
ANR	812943	Function	append_outline_fitted	1594:0:61681:62180							
ANR	812944	FunctionDef	"append_outline_fitted (uint glyph_index , const gs_matrix * pmat , gx_path * ppath , cached_fm_pair * pair , const gs_log2_scale_point * pscale , bool design_grid)"		812943	0					
ANR	812945	CompoundStatement		1598:0:61880:62180	812943	0					
ANR	812946	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) pair -> font ;	1599:4:61886:61938	812943	0	True				
ANR	812947	IdentifierDecl	* pfont = ( gs_font_type42 * ) pair -> font		812943	0					
ANR	812948	IdentifierDeclType	gs_font_type42 *		812943	0					
ANR	812949	Identifier	pfont		812943	1					
ANR	812950	AssignmentExpression	* pfont = ( gs_font_type42 * ) pair -> font		812943	2		=			
ANR	812951	Identifier	pfont		812943	0					
ANR	812952	CastExpression	( gs_font_type42 * ) pair -> font		812943	1					
ANR	812953	CastTarget	gs_font_type42 *		812943	0					
ANR	812954	PtrMemberAccess	pair -> font		812943	1					
ANR	812955	Identifier	pair		812943	0					
ANR	812956	Identifier	font		812943	1					
ANR	812957	IdentifierDeclStatement	int code ;	1600:4:61944:61952	812943	1	True				
ANR	812958	IdentifierDecl	code		812943	0					
ANR	812959	IdentifierDeclType	int		812943	0					
ANR	812960	Identifier	code		812943	1					
ANR	812961	ExpressionStatement	"gx_ttfReader__set_font ( pair -> ttr , pfont )"	1602:4:61959:61999	812943	2	True				
ANR	812962	CallExpression	"gx_ttfReader__set_font ( pair -> ttr , pfont )"		812943	0					
ANR	812963	Callee	gx_ttfReader__set_font		812943	0					
ANR	812964	Identifier	gx_ttfReader__set_font		812943	0					
ANR	812965	ArgumentList	pair -> ttr		812943	1					
ANR	812966	Argument	pair -> ttr		812943	0					
ANR	812967	PtrMemberAccess	pair -> ttr		812943	0					
ANR	812968	Identifier	pair		812943	0					
ANR	812969	Identifier	ttr		812943	1					
ANR	812970	Argument	pfont		812943	1					
ANR	812971	Identifier	pfont		812943	0					
ANR	812972	ExpressionStatement	"code = gx_ttf_outline ( pair -> ttf , pair -> ttr , pfont , ( uint ) glyph_index , pmat , pscale , ppath , design_grid )"	1603:4:62005:62116	812943	3	True				
ANR	812973	AssignmentExpression	"code = gx_ttf_outline ( pair -> ttf , pair -> ttr , pfont , ( uint ) glyph_index , pmat , pscale , ppath , design_grid )"		812943	0		=			
ANR	812974	Identifier	code		812943	0					
ANR	812975	CallExpression	"gx_ttf_outline ( pair -> ttf , pair -> ttr , pfont , ( uint ) glyph_index , pmat , pscale , ppath , design_grid )"		812943	1					
ANR	812976	Callee	gx_ttf_outline		812943	0					
ANR	812977	Identifier	gx_ttf_outline		812943	0					
ANR	812978	ArgumentList	pair -> ttf		812943	1					
ANR	812979	Argument	pair -> ttf		812943	0					
ANR	812980	PtrMemberAccess	pair -> ttf		812943	0					
ANR	812981	Identifier	pair		812943	0					
ANR	812982	Identifier	ttf		812943	1					
ANR	812983	Argument	pair -> ttr		812943	1					
ANR	812984	PtrMemberAccess	pair -> ttr		812943	0					
ANR	812985	Identifier	pair		812943	0					
ANR	812986	Identifier	ttr		812943	1					
ANR	812987	Argument	pfont		812943	2					
ANR	812988	Identifier	pfont		812943	0					
ANR	812989	Argument	( uint ) glyph_index		812943	3					
ANR	812990	CastExpression	( uint ) glyph_index		812943	0					
ANR	812991	CastTarget	uint		812943	0					
ANR	812992	Identifier	glyph_index		812943	1					
ANR	812993	Argument	pmat		812943	4					
ANR	812994	Identifier	pmat		812943	0					
ANR	812995	Argument	pscale		812943	5					
ANR	812996	Identifier	pscale		812943	0					
ANR	812997	Argument	ppath		812943	6					
ANR	812998	Identifier	ppath		812943	0					
ANR	812999	Argument	design_grid		812943	7					
ANR	813000	Identifier	design_grid		812943	0					
ANR	813001	ExpressionStatement	"gx_ttfReader__set_font ( pair -> ttr , NULL )"	1605:4:62122:62161	812943	4	True				
ANR	813002	CallExpression	"gx_ttfReader__set_font ( pair -> ttr , NULL )"		812943	0					
ANR	813003	Callee	gx_ttfReader__set_font		812943	0					
ANR	813004	Identifier	gx_ttfReader__set_font		812943	0					
ANR	813005	ArgumentList	pair -> ttr		812943	1					
ANR	813006	Argument	pair -> ttr		812943	0					
ANR	813007	PtrMemberAccess	pair -> ttr		812943	0					
ANR	813008	Identifier	pair		812943	0					
ANR	813009	Identifier	ttr		812943	1					
ANR	813010	Argument	NULL		812943	1					
ANR	813011	Identifier	NULL		812943	0					
ANR	813012	ReturnStatement	return code ;	1606:4:62167:62178	812943	5	True				
ANR	813013	Identifier	code		812943	0					
ANR	813014	ReturnType	static int		812943	1					
ANR	813015	Identifier	append_outline_fitted		812943	2					
ANR	813016	ParameterList	"uint glyph_index , const gs_matrix * pmat , gx_path * ppath , cached_fm_pair * pair , const gs_log2_scale_point * pscale , bool design_grid"		812943	3					
ANR	813017	Parameter	uint glyph_index	1595:22:61714:61729	812943	0	True				
ANR	813018	ParameterType	uint		812943	0					
ANR	813019	Identifier	glyph_index		812943	1					
ANR	813020	Parameter	const gs_matrix * pmat	1595:40:61732:61753	812943	1	True				
ANR	813021	ParameterType	const gs_matrix *		812943	0					
ANR	813022	Identifier	pmat		812943	1					
ANR	813023	Parameter	gx_path * ppath	1596:15:61771:61785	812943	2	True				
ANR	813024	ParameterType	gx_path *		812943	0					
ANR	813025	Identifier	ppath		812943	1					
ANR	813026	Parameter	cached_fm_pair * pair	1596:32:61788:61808	812943	3	True				
ANR	813027	ParameterType	cached_fm_pair *		812943	0					
ANR	813028	Identifier	pair		812943	1					
ANR	813029	Parameter	const gs_log2_scale_point * pscale	1597:15:61826:61859	812943	4	True				
ANR	813030	ParameterType	const gs_log2_scale_point *		812943	0					
ANR	813031	Identifier	pscale		812943	1					
ANR	813032	Parameter	bool design_grid	1597:51:61862:61877	812943	5	True				
ANR	813033	ParameterType	bool		812943	0					
ANR	813034	Identifier	design_grid		812943	1					
ANR	813035	CFGEntryNode	ENTRY		812943		True				
ANR	813036	CFGExitNode	EXIT		812943		True				
ANR	813037	Symbol	code		812943						
ANR	813038	Symbol	NULL		812943						
ANR	813039	Symbol	glyph_index		812943						
ANR	813040	Symbol	pmat		812943						
ANR	813041	Symbol	gx_ttf_outline		812943						
ANR	813042	Symbol	pfont		812943						
ANR	813043	Symbol	ppath		812943						
ANR	813044	Symbol	pair -> ttr		812943						
ANR	813045	Symbol	design_grid		812943						
ANR	813046	Symbol	pair		812943						
ANR	813047	Symbol	pair -> font		812943						
ANR	813048	Symbol	* pair		812943						
ANR	813049	Symbol	pair -> ttf		812943						
ANR	813050	Symbol	pscale		812943						
ANR	813051	Function	get_from_names_table	1611:0:62237:63763							
ANR	813052	FunctionDef	"get_from_names_table (gs_font_type42 * pfont , gs_font_info_t * info , gs_const_string * pmember , int member , uint name_id)"		813051	0					
ANR	813053	CompoundStatement		1613:0:62393:63763	813051	0					
ANR	813054	IdentifierDeclStatement	"int ( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc ;"	1614:4:62399:62497	813051	0	True				
ANR	813055	IdentifierDecl	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		813051	0					
ANR	813056	IdentifierDeclType	"int ( * ) ( gs_font_type42 * , ulong , uint , const byte * * )"		813051	0					
ANR	813057	Identifier	string_proc		813051	1					
ANR	813058	AssignmentExpression	"( * string_proc ) ( gs_font_type42 * , ulong , uint , const byte * * ) = pfont -> data . string_proc"		813051	2		=			
ANR	813059	Identifier	string_proc		813051	0					
ANR	813060	MemberAccess	pfont -> data . string_proc		813051	1					
ANR	813061	PtrMemberAccess	pfont -> data		813051	0					
ANR	813062	Identifier	pfont		813051	0					
ANR	813063	Identifier	data		813051	1					
ANR	813064	Identifier	string_proc		813051	1					
ANR	813065	IdentifierDeclStatement	byte t [ 12 ] ;	1616:4:62503:62513	813051	1	True				
ANR	813066	IdentifierDecl	t [ 12 ]		813051	0					
ANR	813067	IdentifierDeclType	byte [ 12 ]		813051	0					
ANR	813068	Identifier	t		813051	1					
ANR	813069	PrimaryExpression	12		813051	2					
ANR	813070	IdentifierDeclStatement	"ushort num_records , strings_offset , i , language_id = 0xffff , length0 = 0 , offset0 = 0 ;"	1617:4:62519:62604	813051	2	True				
ANR	813071	IdentifierDecl	num_records		813051	0					
ANR	813072	IdentifierDeclType	ushort		813051	0					
ANR	813073	Identifier	num_records		813051	1					
ANR	813074	IdentifierDecl	strings_offset		813051	1					
ANR	813075	IdentifierDeclType	ushort		813051	0					
ANR	813076	Identifier	strings_offset		813051	1					
ANR	813077	IdentifierDecl	i		813051	2					
ANR	813078	IdentifierDeclType	ushort		813051	0					
ANR	813079	Identifier	i		813051	1					
ANR	813080	IdentifierDecl	language_id = 0xffff		813051	3					
ANR	813081	IdentifierDeclType	ushort		813051	0					
ANR	813082	Identifier	language_id		813051	1					
ANR	813083	AssignmentExpression	language_id = 0xffff		813051	2		=			
ANR	813084	Identifier	language_id		813051	0					
ANR	813085	PrimaryExpression	0xffff		813051	1					
ANR	813086	IdentifierDecl	length0 = 0		813051	4					
ANR	813087	IdentifierDeclType	ushort		813051	0					
ANR	813088	Identifier	length0		813051	1					
ANR	813089	AssignmentExpression	length0 = 0		813051	2		=			
ANR	813090	Identifier	length0		813051	0					
ANR	813091	PrimaryExpression	0		813051	1					
ANR	813092	IdentifierDecl	offset0 = 0		813051	5					
ANR	813093	IdentifierDeclType	ushort		813051	0					
ANR	813094	Identifier	offset0		813051	1					
ANR	813095	AssignmentExpression	offset0 = 0		813051	2		=			
ANR	813096	Identifier	offset0		813051	0					
ANR	813097	PrimaryExpression	0		813051	1					
ANR	813098	IdentifierDeclStatement	int code ;	1618:4:62610:62618	813051	3	True				
ANR	813099	IdentifierDecl	code		813051	0					
ANR	813100	IdentifierDeclType	int		813051	0					
ANR	813101	Identifier	code		813051	1					
ANR	813102	ExpressionStatement	"READ_SFNTS ( pfont , pfont -> data . name_offset + 2 , 4 , t )"	1620:4:62625:62677	813051	4	True				
ANR	813103	CallExpression	"READ_SFNTS ( pfont , pfont -> data . name_offset + 2 , 4 , t )"		813051	0					
ANR	813104	Callee	READ_SFNTS		813051	0					
ANR	813105	Identifier	READ_SFNTS		813051	0					
ANR	813106	ArgumentList	pfont		813051	1					
ANR	813107	Argument	pfont		813051	0					
ANR	813108	Identifier	pfont		813051	0					
ANR	813109	Argument	pfont -> data . name_offset + 2		813051	1					
ANR	813110	AdditiveExpression	pfont -> data . name_offset + 2		813051	0		+			
ANR	813111	MemberAccess	pfont -> data . name_offset		813051	0					
ANR	813112	PtrMemberAccess	pfont -> data		813051	0					
ANR	813113	Identifier	pfont		813051	0					
ANR	813114	Identifier	data		813051	1					
ANR	813115	Identifier	name_offset		813051	1					
ANR	813116	PrimaryExpression	2		813051	1					
ANR	813117	Argument	4		813051	2					
ANR	813118	PrimaryExpression	4		813051	0					
ANR	813119	Argument	t		813051	3					
ANR	813120	Identifier	t		813051	0					
ANR	813121	ExpressionStatement	num_records = U16 ( t )	1621:4:62683:62703	813051	5	True				
ANR	813122	AssignmentExpression	num_records = U16 ( t )		813051	0		=			
ANR	813123	Identifier	num_records		813051	0					
ANR	813124	CallExpression	U16 ( t )		813051	1					
ANR	813125	Callee	U16		813051	0					
ANR	813126	Identifier	U16		813051	0					
ANR	813127	ArgumentList	t		813051	1					
ANR	813128	Argument	t		813051	0					
ANR	813129	Identifier	t		813051	0					
ANR	813130	ExpressionStatement	strings_offset = U16 ( t + 2 )	1622:4:62709:62736	813051	6	True				
ANR	813131	AssignmentExpression	strings_offset = U16 ( t + 2 )		813051	0		=			
ANR	813132	Identifier	strings_offset		813051	0					
ANR	813133	CallExpression	U16 ( t + 2 )		813051	1					
ANR	813134	Callee	U16		813051	0					
ANR	813135	Identifier	U16		813051	0					
ANR	813136	ArgumentList	t + 2		813051	1					
ANR	813137	Argument	t + 2		813051	0					
ANR	813138	AdditiveExpression	t + 2		813051	0		+			
ANR	813139	Identifier	t		813051	0					
ANR	813140	PrimaryExpression	2		813051	1					
ANR	813141	ForStatement	for ( i = 0 ; i < num_records ; i ++ )		813051	7					
ANR	813142	ForInit	i = 0 ;	1623:9:62747:62752	813051	0	True				
ANR	813143	AssignmentExpression	i = 0		813051	0		=			
ANR	813144	Identifier	i		813051	0					
ANR	813145	PrimaryExpression	0		813051	1					
ANR	813146	Condition	i < num_records	1623:16:62754:62768	813051	1	True				
ANR	813147	RelationalExpression	i < num_records		813051	0		<			
ANR	813148	Identifier	i		813051	0					
ANR	813149	Identifier	num_records		813051	1					
ANR	813150	PostIncDecOperationExpression	i ++	1623:33:62771:62773	813051	2	True				
ANR	813151	Identifier	i		813051	0					
ANR	813152	IncDec	++		813051	1					
ANR	813153	CompoundStatement		12:8:392:457	813051	3					
ANR	813154	IdentifierDeclStatement	"ushort platformID , specificID , languageID , nameID , length , offset ;"	1624:8:62786:62851	813051	0	True				
ANR	813155	IdentifierDecl	platformID		813051	0					
ANR	813156	IdentifierDeclType	ushort		813051	0					
ANR	813157	Identifier	platformID		813051	1					
ANR	813158	IdentifierDecl	specificID		813051	1					
ANR	813159	IdentifierDeclType	ushort		813051	0					
ANR	813160	Identifier	specificID		813051	1					
ANR	813161	IdentifierDecl	languageID		813051	2					
ANR	813162	IdentifierDeclType	ushort		813051	0					
ANR	813163	Identifier	languageID		813051	1					
ANR	813164	IdentifierDecl	nameID		813051	3					
ANR	813165	IdentifierDeclType	ushort		813051	0					
ANR	813166	Identifier	nameID		813051	1					
ANR	813167	IdentifierDecl	length		813051	4					
ANR	813168	IdentifierDeclType	ushort		813051	0					
ANR	813169	Identifier	length		813051	1					
ANR	813170	IdentifierDecl	offset		813051	5					
ANR	813171	IdentifierDeclType	ushort		813051	0					
ANR	813172	Identifier	offset		813051	1					
ANR	813173	ExpressionStatement	"READ_SFNTS ( pfont , pfont -> data . name_offset + 6 + i * 12 , 12 , t )"	1626:8:62862:62924	813051	1	True				
ANR	813174	CallExpression	"READ_SFNTS ( pfont , pfont -> data . name_offset + 6 + i * 12 , 12 , t )"		813051	0					
ANR	813175	Callee	READ_SFNTS		813051	0					
ANR	813176	Identifier	READ_SFNTS		813051	0					
ANR	813177	ArgumentList	pfont		813051	1					
ANR	813178	Argument	pfont		813051	0					
ANR	813179	Identifier	pfont		813051	0					
ANR	813180	Argument	pfont -> data . name_offset + 6 + i * 12		813051	1					
ANR	813181	AdditiveExpression	pfont -> data . name_offset + 6 + i * 12		813051	0		+			
ANR	813182	MemberAccess	pfont -> data . name_offset		813051	0					
ANR	813183	PtrMemberAccess	pfont -> data		813051	0					
ANR	813184	Identifier	pfont		813051	0					
ANR	813185	Identifier	data		813051	1					
ANR	813186	Identifier	name_offset		813051	1					
ANR	813187	AdditiveExpression	6 + i * 12		813051	1		+			
ANR	813188	PrimaryExpression	6		813051	0					
ANR	813189	MultiplicativeExpression	i * 12		813051	1		*			
ANR	813190	Identifier	i		813051	0					
ANR	813191	PrimaryExpression	12		813051	1					
ANR	813192	Argument	12		813051	2					
ANR	813193	PrimaryExpression	12		813051	0					
ANR	813194	Argument	t		813051	3					
ANR	813195	Identifier	t		813051	0					
ANR	813196	ExpressionStatement	platformID = U16 ( t + 0 )	1627:8:62934:62957	813051	2	True				
ANR	813197	AssignmentExpression	platformID = U16 ( t + 0 )		813051	0		=			
ANR	813198	Identifier	platformID		813051	0					
ANR	813199	CallExpression	U16 ( t + 0 )		813051	1					
ANR	813200	Callee	U16		813051	0					
ANR	813201	Identifier	U16		813051	0					
ANR	813202	ArgumentList	t + 0		813051	1					
ANR	813203	Argument	t + 0		813051	0					
ANR	813204	AdditiveExpression	t + 0		813051	0		+			
ANR	813205	Identifier	t		813051	0					
ANR	813206	PrimaryExpression	0		813051	1					
ANR	813207	ExpressionStatement	specificID = U16 ( t + 2 )	1628:8:62967:62990	813051	3	True				
ANR	813208	AssignmentExpression	specificID = U16 ( t + 2 )		813051	0		=			
ANR	813209	Identifier	specificID		813051	0					
ANR	813210	CallExpression	U16 ( t + 2 )		813051	1					
ANR	813211	Callee	U16		813051	0					
ANR	813212	Identifier	U16		813051	0					
ANR	813213	ArgumentList	t + 2		813051	1					
ANR	813214	Argument	t + 2		813051	0					
ANR	813215	AdditiveExpression	t + 2		813051	0		+			
ANR	813216	Identifier	t		813051	0					
ANR	813217	PrimaryExpression	2		813051	1					
ANR	813218	ExpressionStatement	languageID = U16 ( t + 4 )	1629:8:63000:63023	813051	4	True				
ANR	813219	AssignmentExpression	languageID = U16 ( t + 4 )		813051	0		=			
ANR	813220	Identifier	languageID		813051	0					
ANR	813221	CallExpression	U16 ( t + 4 )		813051	1					
ANR	813222	Callee	U16		813051	0					
ANR	813223	Identifier	U16		813051	0					
ANR	813224	ArgumentList	t + 4		813051	1					
ANR	813225	Argument	t + 4		813051	0					
ANR	813226	AdditiveExpression	t + 4		813051	0		+			
ANR	813227	Identifier	t		813051	0					
ANR	813228	PrimaryExpression	4		813051	1					
ANR	813229	ExpressionStatement	nameID = U16 ( t + 6 )	1630:8:63033:63052	813051	5	True				
ANR	813230	AssignmentExpression	nameID = U16 ( t + 6 )		813051	0		=			
ANR	813231	Identifier	nameID		813051	0					
ANR	813232	CallExpression	U16 ( t + 6 )		813051	1					
ANR	813233	Callee	U16		813051	0					
ANR	813234	Identifier	U16		813051	0					
ANR	813235	ArgumentList	t + 6		813051	1					
ANR	813236	Argument	t + 6		813051	0					
ANR	813237	AdditiveExpression	t + 6		813051	0		+			
ANR	813238	Identifier	t		813051	0					
ANR	813239	PrimaryExpression	6		813051	1					
ANR	813240	ExpressionStatement	length = U16 ( t + 8 )	1631:8:63062:63081	813051	6	True				
ANR	813241	AssignmentExpression	length = U16 ( t + 8 )		813051	0		=			
ANR	813242	Identifier	length		813051	0					
ANR	813243	CallExpression	U16 ( t + 8 )		813051	1					
ANR	813244	Callee	U16		813051	0					
ANR	813245	Identifier	U16		813051	0					
ANR	813246	ArgumentList	t + 8		813051	1					
ANR	813247	Argument	t + 8		813051	0					
ANR	813248	AdditiveExpression	t + 8		813051	0		+			
ANR	813249	Identifier	t		813051	0					
ANR	813250	PrimaryExpression	8		813051	1					
ANR	813251	ExpressionStatement	offset = U16 ( t + 10 )	1632:8:63091:63111	813051	7	True				
ANR	813252	AssignmentExpression	offset = U16 ( t + 10 )		813051	0		=			
ANR	813253	Identifier	offset		813051	0					
ANR	813254	CallExpression	U16 ( t + 10 )		813051	1					
ANR	813255	Callee	U16		813051	0					
ANR	813256	Identifier	U16		813051	0					
ANR	813257	ArgumentList	t + 10		813051	1					
ANR	813258	Argument	t + 10		813051	0					
ANR	813259	AdditiveExpression	t + 10		813051	0		+			
ANR	813260	Identifier	t		813051	0					
ANR	813261	PrimaryExpression	10		813051	1					
ANR	813262	IfStatement	if ( nameID == name_id )		813051	8					
ANR	813263	Condition	nameID == name_id	1633:12:63125:63141	813051	0	True				
ANR	813264	EqualityExpression	nameID == name_id		813051	0		==			
ANR	813265	Identifier	nameID		813051	0					
ANR	813266	Identifier	name_id		813051	1					
ANR	813267	CompoundStatement		21:31:750:750	813051	1					
ANR	813268	ExpressionStatement	DISCARD ( platformID )	1634:12:63158:63177	813051	0	True				
ANR	813269	CallExpression	DISCARD ( platformID )		813051	0					
ANR	813270	Callee	DISCARD		813051	0					
ANR	813271	Identifier	DISCARD		813051	0					
ANR	813272	ArgumentList	platformID		813051	1					
ANR	813273	Argument	platformID		813051	0					
ANR	813274	Identifier	platformID		813051	0					
ANR	813275	ExpressionStatement	DISCARD ( specificID )	1635:12:63191:63210	813051	1	True				
ANR	813276	CallExpression	DISCARD ( specificID )		813051	0					
ANR	813277	Callee	DISCARD		813051	0					
ANR	813278	Identifier	DISCARD		813051	0					
ANR	813279	ArgumentList	specificID		813051	1					
ANR	813280	Argument	specificID		813051	0					
ANR	813281	Identifier	specificID		813051	0					
ANR	813282	IfStatement	if ( language_id > languageID )		813051	2					
ANR	813283	Condition	language_id > languageID	1637:16:63285:63308	813051	0	True				
ANR	813284	RelationalExpression	language_id > languageID		813051	0		>			
ANR	813285	Identifier	language_id		813051	0					
ANR	813286	Identifier	languageID		813051	1					
ANR	813287	CompoundStatement		25:42:917:917	813051	1					
ANR	813288	ExpressionStatement	language_id = languageID	1638:16:63329:63353	813051	0	True				
ANR	813289	AssignmentExpression	language_id = languageID		813051	0		=			
ANR	813290	Identifier	language_id		813051	0					
ANR	813291	Identifier	languageID		813051	1					
ANR	813292	ExpressionStatement	length0 = length	1639:16:63371:63387	813051	1	True				
ANR	813293	AssignmentExpression	length0 = length		813051	0		=			
ANR	813294	Identifier	length0		813051	0					
ANR	813295	Identifier	length		813051	1					
ANR	813296	ExpressionStatement	offset0 = offset	1640:16:63405:63421	813051	2	True				
ANR	813297	AssignmentExpression	offset0 = offset		813051	0		=			
ANR	813298	Identifier	offset0		813051	0					
ANR	813299	Identifier	offset		813051	1					
ANR	813300	IfStatement	if ( language_id == 0xffff )		813051	8					
ANR	813301	Condition	language_id == 0xffff	1644:8:63461:63481	813051	0	True				
ANR	813302	EqualityExpression	language_id == 0xffff		813051	0		==			
ANR	813303	Identifier	language_id		813051	0					
ANR	813304	PrimaryExpression	0xffff		813051	1					
ANR	813305	ReturnStatement	return 0 ;	1645:8:63492:63500	813051	1	True				
ANR	813306	PrimaryExpression	0		813051	0					
ANR	813307	IfStatement	"if ( ( * string_proc ) ( pfont , pfont -> data . name_offset + strings_offset + offset0 , length0 , & pmember -> data ) != 0 )"		813051	9					
ANR	813308	Condition	"( * string_proc ) ( pfont , pfont -> data . name_offset + strings_offset + offset0 , length0 , & pmember -> data ) != 0"	1646:8:63510:63644	813051	0	True				
ANR	813309	EqualityExpression	"( * string_proc ) ( pfont , pfont -> data . name_offset + strings_offset + offset0 , length0 , & pmember -> data ) != 0"		813051	0		!=			
ANR	813310	CallExpression	"( * string_proc ) ( pfont , pfont -> data . name_offset + strings_offset + offset0 , length0 , & pmember -> data )"		813051	0					
ANR	813311	Callee	* string_proc		813051	0					
ANR	813312	UnaryOperationExpression	* string_proc		813051	0					
ANR	813313	UnaryOperator	*		813051	0					
ANR	813314	Identifier	string_proc		813051	1					
ANR	813315	ArgumentList	pfont		813051	1					
ANR	813316	Argument	pfont		813051	0					
ANR	813317	Identifier	pfont		813051	0					
ANR	813318	Argument	pfont -> data . name_offset + strings_offset + offset0		813051	1					
ANR	813319	AdditiveExpression	pfont -> data . name_offset + strings_offset + offset0		813051	0		+			
ANR	813320	MemberAccess	pfont -> data . name_offset		813051	0					
ANR	813321	PtrMemberAccess	pfont -> data		813051	0					
ANR	813322	Identifier	pfont		813051	0					
ANR	813323	Identifier	data		813051	1					
ANR	813324	Identifier	name_offset		813051	1					
ANR	813325	AdditiveExpression	strings_offset + offset0		813051	1		+			
ANR	813326	Identifier	strings_offset		813051	0					
ANR	813327	Identifier	offset0		813051	1					
ANR	813328	Argument	length0		813051	2					
ANR	813329	Identifier	length0		813051	0					
ANR	813330	Argument	& pmember -> data		813051	3					
ANR	813331	UnaryOperationExpression	& pmember -> data		813051	0					
ANR	813332	UnaryOperator	&		813051	0					
ANR	813333	PtrMemberAccess	pmember -> data		813051	1					
ANR	813334	Identifier	pmember		813051	0					
ANR	813335	Identifier	data		813051	1					
ANR	813336	PrimaryExpression	0		813051	1					
ANR	813337	ExpressionStatement	return_error ( gs_error_invalidfont )	1648:8:63655:63689	813051	1	True				
ANR	813338	CallExpression	return_error ( gs_error_invalidfont )		813051	0					
ANR	813339	Callee	return_error		813051	0					
ANR	813340	Identifier	return_error		813051	0					
ANR	813341	ArgumentList	gs_error_invalidfont		813051	1					
ANR	813342	Argument	gs_error_invalidfont		813051	0					
ANR	813343	Identifier	gs_error_invalidfont		813051	0					
ANR	813344	ExpressionStatement	pmember -> size = length0	1649:4:63695:63718	813051	10	True				
ANR	813345	AssignmentExpression	pmember -> size = length0		813051	0		=			
ANR	813346	PtrMemberAccess	pmember -> size		813051	0					
ANR	813347	Identifier	pmember		813051	0					
ANR	813348	Identifier	size		813051	1					
ANR	813349	Identifier	length0		813051	1					
ANR	813350	ExpressionStatement	info -> members |= member	1650:4:63724:63747	813051	11	True				
ANR	813351	AssignmentExpression	info -> members |= member		813051	0		|=			
ANR	813352	PtrMemberAccess	info -> members		813051	0					
ANR	813353	Identifier	info		813051	0					
ANR	813354	Identifier	members		813051	1					
ANR	813355	Identifier	member		813051	1					
ANR	813356	ReturnStatement	return 0 ;	1651:4:63753:63761	813051	12	True				
ANR	813357	PrimaryExpression	0		813051	0					
ANR	813358	ReturnType	static int		813051	1					
ANR	813359	Identifier	get_from_names_table		813051	2					
ANR	813360	ParameterList	"gs_font_type42 * pfont , gs_font_info_t * info , gs_const_string * pmember , int member , uint name_id"		813051	3					
ANR	813361	Parameter	gs_font_type42 * pfont	1611:32:62269:62289	813051	0	True				
ANR	813362	ParameterType	gs_font_type42 *		813051	0					
ANR	813363	Identifier	pfont		813051	1					
ANR	813364	Parameter	gs_font_info_t * info	1611:55:62292:62311	813051	1	True				
ANR	813365	ParameterType	gs_font_info_t *		813051	0					
ANR	813366	Identifier	info		813051	1					
ANR	813367	Parameter	gs_const_string * pmember	1612:27:62341:62364	813051	2	True				
ANR	813368	ParameterType	gs_const_string *		813051	0					
ANR	813369	Identifier	pmember		813051	1					
ANR	813370	Parameter	int member	1612:53:62367:62376	813051	3	True				
ANR	813371	ParameterType	int		813051	0					
ANR	813372	Identifier	member		813051	1					
ANR	813373	Parameter	uint name_id	1612:65:62379:62390	813051	4	True				
ANR	813374	ParameterType	uint		813051	0					
ANR	813375	Identifier	name_id		813051	1					
ANR	813376	CFGEntryNode	ENTRY		813051		True				
ANR	813377	CFGExitNode	EXIT		813051		True				
ANR	813378	Symbol	code		813051						
ANR	813379	Symbol	specificID		813051						
ANR	813380	Symbol	num_records		813051						
ANR	813381	Symbol	offset0		813051						
ANR	813382	Symbol	pfont -> data . name_offset		813051						
ANR	813383	Symbol	languageID		813051						
ANR	813384	Symbol	* pmember		813051						
ANR	813385	Symbol	pfont -> data . string_proc		813051						
ANR	813386	Symbol	language_id		813051						
ANR	813387	Symbol	platformID		813051						
ANR	813388	Symbol	info -> members		813051						
ANR	813389	Symbol	member		813051						
ANR	813390	Symbol	nameID		813051						
ANR	813391	Symbol	gs_error_invalidfont		813051						
ANR	813392	Symbol	info		813051						
ANR	813393	Symbol	pmember -> size		813051						
ANR	813394	Symbol	* string_proc		813051						
ANR	813395	Symbol	offset		813051						
ANR	813396	Symbol	pfont		813051						
ANR	813397	Symbol	length		813051						
ANR	813398	Symbol	pfont -> data		813051						
ANR	813399	Symbol	i		813051						
ANR	813400	Symbol	name_id		813051						
ANR	813401	Symbol	* pfont		813051						
ANR	813402	Symbol	length0		813051						
ANR	813403	Symbol	t		813051						
ANR	813404	Symbol	pmember		813051						
ANR	813405	Symbol	& pmember -> data		813051						
ANR	813406	Symbol	U16		813051						
ANR	813407	Symbol	* info		813051						
ANR	813408	Symbol	string_proc		813051						
ANR	813409	Symbol	strings_offset		813051						
ANR	813410	Function	gs_truetype_font_info	1654:0:63766:65412							
ANR	813411	FunctionDef	"gs_truetype_font_info (gs_font * font , const gs_point * pscale , int members , gs_font_info_t * info)"		813410	0					
ANR	813412	CompoundStatement		1657:0:63877:65412	813410	0					
ANR	813413	IdentifierDeclStatement	gs_font_type42 * pfont = ( gs_font_type42 * ) font ;	1658:4:63883:63929	813410	0	True				
ANR	813414	IdentifierDecl	* pfont = ( gs_font_type42 * ) font		813410	0					
ANR	813415	IdentifierDeclType	gs_font_type42 *		813410	0					
ANR	813416	Identifier	pfont		813410	1					
ANR	813417	AssignmentExpression	* pfont = ( gs_font_type42 * ) font		813410	2		=			
ANR	813418	Identifier	pfont		813410	0					
ANR	813419	CastExpression	( gs_font_type42 * ) font		813410	1					
ANR	813420	CastTarget	gs_font_type42 *		813410	0					
ANR	813421	Identifier	font		813410	1					
ANR	813422	IdentifierDeclStatement	int code ;	1659:4:63935:63943	813410	1	True				
ANR	813423	IdentifierDecl	code		813410	0					
ANR	813424	IdentifierDeclType	int		813410	0					
ANR	813425	Identifier	code		813410	1					
ANR	813426	IfStatement	if ( ! ( info -> members & FONT_INFO_EMBEDDING_RIGHTS ) && ( members & FONT_INFO_EMBEDDING_RIGHTS ) )		813410	2					
ANR	813427	Condition	! ( info -> members & FONT_INFO_EMBEDDING_RIGHTS ) && ( members & FONT_INFO_EMBEDDING_RIGHTS )	1661:8:63954:64040	813410	0	True				
ANR	813428	AndExpression	! ( info -> members & FONT_INFO_EMBEDDING_RIGHTS ) && ( members & FONT_INFO_EMBEDDING_RIGHTS )		813410	0		&&			
ANR	813429	UnaryOperationExpression	! ( info -> members & FONT_INFO_EMBEDDING_RIGHTS )		813410	0					
ANR	813430	UnaryOperator	!		813410	0					
ANR	813431	BitAndExpression	info -> members & FONT_INFO_EMBEDDING_RIGHTS		813410	1		&			
ANR	813432	PtrMemberAccess	info -> members		813410	0					
ANR	813433	Identifier	info		813410	0					
ANR	813434	Identifier	members		813410	1					
ANR	813435	Identifier	FONT_INFO_EMBEDDING_RIGHTS		813410	1					
ANR	813436	BitAndExpression	members & FONT_INFO_EMBEDDING_RIGHTS		813410	1		&			
ANR	813437	Identifier	members		813410	0					
ANR	813438	Identifier	FONT_INFO_EMBEDDING_RIGHTS		813410	1					
ANR	813439	CompoundStatement		5:97:165:165	813410	1					
ANR	813440	IfStatement	if ( pfont -> data . os2_offset != 0 )		813410	0					
ANR	813441	Condition	pfont -> data . os2_offset != 0	1662:11:64056:64082	813410	0	True				
ANR	813442	EqualityExpression	pfont -> data . os2_offset != 0		813410	0		!=			
ANR	813443	MemberAccess	pfont -> data . os2_offset		813410	0					
ANR	813444	PtrMemberAccess	pfont -> data		813410	0					
ANR	813445	Identifier	pfont		813410	0					
ANR	813446	Identifier	data		813410	1					
ANR	813447	Identifier	os2_offset		813410	1					
ANR	813448	PrimaryExpression	0		813410	1					
ANR	813449	CompoundStatement		7:12:221:244	813410	1					
ANR	813450	IdentifierDeclStatement	unsigned char fstype [ 2 ] ;	1663:12:64099:64122	813410	0	True				
ANR	813451	IdentifierDecl	fstype [ 2 ]		813410	0					
ANR	813452	IdentifierDeclType	unsigned char [ 2 ]		813410	0					
ANR	813453	Identifier	fstype		813410	1					
ANR	813454	PrimaryExpression	2		813410	2					
ANR	813455	ExpressionStatement	"READ_SFNTS ( pfont , pfont -> data . os2_offset + 8 , 2 , fstype )"	1665:12:64137:64193	813410	1	True				
ANR	813456	CallExpression	"READ_SFNTS ( pfont , pfont -> data . os2_offset + 8 , 2 , fstype )"		813410	0					
ANR	813457	Callee	READ_SFNTS		813410	0					
ANR	813458	Identifier	READ_SFNTS		813410	0					
ANR	813459	ArgumentList	pfont		813410	1					
ANR	813460	Argument	pfont		813410	0					
ANR	813461	Identifier	pfont		813410	0					
ANR	813462	Argument	pfont -> data . os2_offset + 8		813410	1					
ANR	813463	AdditiveExpression	pfont -> data . os2_offset + 8		813410	0		+			
ANR	813464	MemberAccess	pfont -> data . os2_offset		813410	0					
ANR	813465	PtrMemberAccess	pfont -> data		813410	0					
ANR	813466	Identifier	pfont		813410	0					
ANR	813467	Identifier	data		813410	1					
ANR	813468	Identifier	os2_offset		813410	1					
ANR	813469	PrimaryExpression	8		813410	1					
ANR	813470	Argument	2		813410	2					
ANR	813471	PrimaryExpression	2		813410	0					
ANR	813472	Argument	fstype		813410	3					
ANR	813473	Identifier	fstype		813410	0					
ANR	813474	ExpressionStatement	info -> EmbeddingRights = U16 ( fstype )	1666:12:64207:64242	813410	2	True				
ANR	813475	AssignmentExpression	info -> EmbeddingRights = U16 ( fstype )		813410	0		=			
ANR	813476	PtrMemberAccess	info -> EmbeddingRights		813410	0					
ANR	813477	Identifier	info		813410	0					
ANR	813478	Identifier	EmbeddingRights		813410	1					
ANR	813479	CallExpression	U16 ( fstype )		813410	1					
ANR	813480	Callee	U16		813410	0					
ANR	813481	Identifier	U16		813410	0					
ANR	813482	ArgumentList	fstype		813410	1					
ANR	813483	Argument	fstype		813410	0					
ANR	813484	Identifier	fstype		813410	0					
ANR	813485	ExpressionStatement	info -> members |= FONT_INFO_EMBEDDING_RIGHTS	1667:12:64256:64299	813410	3	True				
ANR	813486	AssignmentExpression	info -> members |= FONT_INFO_EMBEDDING_RIGHTS		813410	0		|=			
ANR	813487	PtrMemberAccess	info -> members		813410	0					
ANR	813488	Identifier	info		813410	0					
ANR	813489	Identifier	members		813410	1					
ANR	813490	Identifier	FONT_INFO_EMBEDDING_RIGHTS		813410	1					
ANR	813491	IfStatement	if ( pfont -> data . name_offset == 0 )		813410	3					
ANR	813492	Condition	pfont -> data . name_offset == 0	1670:8:64325:64352	813410	0	True				
ANR	813493	EqualityExpression	pfont -> data . name_offset == 0		813410	0		==			
ANR	813494	MemberAccess	pfont -> data . name_offset		813410	0					
ANR	813495	PtrMemberAccess	pfont -> data		813410	0					
ANR	813496	Identifier	pfont		813410	0					
ANR	813497	Identifier	data		813410	1					
ANR	813498	Identifier	name_offset		813410	1					
ANR	813499	PrimaryExpression	0		813410	1					
ANR	813500	ReturnStatement	return 0 ;	1671:8:64363:64371	813410	1	True				
ANR	813501	PrimaryExpression	0		813410	0					
ANR	813502	IfStatement	if ( ! ( info -> members & FONT_INFO_COPYRIGHT ) && ( members & FONT_INFO_COPYRIGHT ) )		813410	4					
ANR	813503	Condition	! ( info -> members & FONT_INFO_COPYRIGHT ) && ( members & FONT_INFO_COPYRIGHT )	1672:8:64381:64453	813410	0	True				
ANR	813504	AndExpression	! ( info -> members & FONT_INFO_COPYRIGHT ) && ( members & FONT_INFO_COPYRIGHT )		813410	0		&&			
ANR	813505	UnaryOperationExpression	! ( info -> members & FONT_INFO_COPYRIGHT )		813410	0					
ANR	813506	UnaryOperator	!		813410	0					
ANR	813507	BitAndExpression	info -> members & FONT_INFO_COPYRIGHT		813410	1		&			
ANR	813508	PtrMemberAccess	info -> members		813410	0					
ANR	813509	Identifier	info		813410	0					
ANR	813510	Identifier	members		813410	1					
ANR	813511	Identifier	FONT_INFO_COPYRIGHT		813410	1					
ANR	813512	BitAndExpression	members & FONT_INFO_COPYRIGHT		813410	1		&			
ANR	813513	Identifier	members		813410	0					
ANR	813514	Identifier	FONT_INFO_COPYRIGHT		813410	1					
ANR	813515	CompoundStatement		16:83:578:578	813410	1					
ANR	813516	ExpressionStatement	"get_from_names_table ( pfont , info , & info -> Copyright , FONT_INFO_COPYRIGHT , 0 )"	1679:8:64848:64923	813410	0	True				
ANR	813517	CallExpression	"get_from_names_table ( pfont , info , & info -> Copyright , FONT_INFO_COPYRIGHT , 0 )"		813410	0					
ANR	813518	Callee	get_from_names_table		813410	0					
ANR	813519	Identifier	get_from_names_table		813410	0					
ANR	813520	ArgumentList	pfont		813410	1					
ANR	813521	Argument	pfont		813410	0					
ANR	813522	Identifier	pfont		813410	0					
ANR	813523	Argument	info		813410	1					
ANR	813524	Identifier	info		813410	0					
ANR	813525	Argument	& info -> Copyright		813410	2					
ANR	813526	UnaryOperationExpression	& info -> Copyright		813410	0					
ANR	813527	UnaryOperator	&		813410	0					
ANR	813528	PtrMemberAccess	info -> Copyright		813410	1					
ANR	813529	Identifier	info		813410	0					
ANR	813530	Identifier	Copyright		813410	1					
ANR	813531	Argument	FONT_INFO_COPYRIGHT		813410	3					
ANR	813532	Identifier	FONT_INFO_COPYRIGHT		813410	0					
ANR	813533	Argument	0		813410	4					
ANR	813534	PrimaryExpression	0		813410	0					
ANR	813535	IfStatement	if ( ! ( info -> members & FONT_INFO_FAMILY_NAME ) && ( members & FONT_INFO_FAMILY_NAME ) )		813410	5					
ANR	813536	Condition	! ( info -> members & FONT_INFO_FAMILY_NAME ) && ( members & FONT_INFO_FAMILY_NAME )	1681:8:64939:65015	813410	0	True				
ANR	813537	AndExpression	! ( info -> members & FONT_INFO_FAMILY_NAME ) && ( members & FONT_INFO_FAMILY_NAME )		813410	0		&&			
ANR	813538	UnaryOperationExpression	! ( info -> members & FONT_INFO_FAMILY_NAME )		813410	0					
ANR	813539	UnaryOperator	!		813410	0					
ANR	813540	BitAndExpression	info -> members & FONT_INFO_FAMILY_NAME		813410	1		&			
ANR	813541	PtrMemberAccess	info -> members		813410	0					
ANR	813542	Identifier	info		813410	0					
ANR	813543	Identifier	members		813410	1					
ANR	813544	Identifier	FONT_INFO_FAMILY_NAME		813410	1					
ANR	813545	BitAndExpression	members & FONT_INFO_FAMILY_NAME		813410	1		&			
ANR	813546	Identifier	members		813410	0					
ANR	813547	Identifier	FONT_INFO_FAMILY_NAME		813410	1					
ANR	813548	CompoundStatement		25:87:1140:1140	813410	1					
ANR	813549	ExpressionStatement	"code = get_from_names_table ( pfont , info , & info -> FamilyName , FONT_INFO_FAMILY_NAME , 1 )"	1682:8:65028:65113	813410	0	True				
ANR	813550	AssignmentExpression	"code = get_from_names_table ( pfont , info , & info -> FamilyName , FONT_INFO_FAMILY_NAME , 1 )"		813410	0		=			
ANR	813551	Identifier	code		813410	0					
ANR	813552	CallExpression	"get_from_names_table ( pfont , info , & info -> FamilyName , FONT_INFO_FAMILY_NAME , 1 )"		813410	1					
ANR	813553	Callee	get_from_names_table		813410	0					
ANR	813554	Identifier	get_from_names_table		813410	0					
ANR	813555	ArgumentList	pfont		813410	1					
ANR	813556	Argument	pfont		813410	0					
ANR	813557	Identifier	pfont		813410	0					
ANR	813558	Argument	info		813410	1					
ANR	813559	Identifier	info		813410	0					
ANR	813560	Argument	& info -> FamilyName		813410	2					
ANR	813561	UnaryOperationExpression	& info -> FamilyName		813410	0					
ANR	813562	UnaryOperator	&		813410	0					
ANR	813563	PtrMemberAccess	info -> FamilyName		813410	1					
ANR	813564	Identifier	info		813410	0					
ANR	813565	Identifier	FamilyName		813410	1					
ANR	813566	Argument	FONT_INFO_FAMILY_NAME		813410	3					
ANR	813567	Identifier	FONT_INFO_FAMILY_NAME		813410	0					
ANR	813568	Argument	1		813410	4					
ANR	813569	PrimaryExpression	1		813410	0					
ANR	813570	IfStatement	if ( code < 0 )		813410	1					
ANR	813571	Condition	code < 0	1683:12:65127:65134	813410	0	True				
ANR	813572	RelationalExpression	code < 0		813410	0		<			
ANR	813573	Identifier	code		813410	0					
ANR	813574	PrimaryExpression	0		813410	1					
ANR	813575	ReturnStatement	return code ;	1684:12:65149:65160	813410	1	True				
ANR	813576	Identifier	code		813410	0					
ANR	813577	IfStatement	if ( ! ( info -> members & FONT_INFO_FULL_NAME ) && ( members & FONT_INFO_FULL_NAME ) )		813410	6					
ANR	813578	Condition	! ( info -> members & FONT_INFO_FULL_NAME ) && ( members & FONT_INFO_FULL_NAME )	1686:8:65176:65248	813410	0	True				
ANR	813579	AndExpression	! ( info -> members & FONT_INFO_FULL_NAME ) && ( members & FONT_INFO_FULL_NAME )		813410	0		&&			
ANR	813580	UnaryOperationExpression	! ( info -> members & FONT_INFO_FULL_NAME )		813410	0					
ANR	813581	UnaryOperator	!		813410	0					
ANR	813582	BitAndExpression	info -> members & FONT_INFO_FULL_NAME		813410	1		&			
ANR	813583	PtrMemberAccess	info -> members		813410	0					
ANR	813584	Identifier	info		813410	0					
ANR	813585	Identifier	members		813410	1					
ANR	813586	Identifier	FONT_INFO_FULL_NAME		813410	1					
ANR	813587	BitAndExpression	members & FONT_INFO_FULL_NAME		813410	1		&			
ANR	813588	Identifier	members		813410	0					
ANR	813589	Identifier	FONT_INFO_FULL_NAME		813410	1					
ANR	813590	CompoundStatement		30:83:1373:1373	813410	1					
ANR	813591	ExpressionStatement	"code = get_from_names_table ( pfont , info , & info -> FullName , FONT_INFO_FULL_NAME , 4 )"	1687:8:65261:65342	813410	0	True				
ANR	813592	AssignmentExpression	"code = get_from_names_table ( pfont , info , & info -> FullName , FONT_INFO_FULL_NAME , 4 )"		813410	0		=			
ANR	813593	Identifier	code		813410	0					
ANR	813594	CallExpression	"get_from_names_table ( pfont , info , & info -> FullName , FONT_INFO_FULL_NAME , 4 )"		813410	1					
ANR	813595	Callee	get_from_names_table		813410	0					
ANR	813596	Identifier	get_from_names_table		813410	0					
ANR	813597	ArgumentList	pfont		813410	1					
ANR	813598	Argument	pfont		813410	0					
ANR	813599	Identifier	pfont		813410	0					
ANR	813600	Argument	info		813410	1					
ANR	813601	Identifier	info		813410	0					
ANR	813602	Argument	& info -> FullName		813410	2					
ANR	813603	UnaryOperationExpression	& info -> FullName		813410	0					
ANR	813604	UnaryOperator	&		813410	0					
ANR	813605	PtrMemberAccess	info -> FullName		813410	1					
ANR	813606	Identifier	info		813410	0					
ANR	813607	Identifier	FullName		813410	1					
ANR	813608	Argument	FONT_INFO_FULL_NAME		813410	3					
ANR	813609	Identifier	FONT_INFO_FULL_NAME		813410	0					
ANR	813610	Argument	4		813410	4					
ANR	813611	PrimaryExpression	4		813410	0					
ANR	813612	IfStatement	if ( code < 0 )		813410	1					
ANR	813613	Condition	code < 0	1688:12:65356:65363	813410	0	True				
ANR	813614	RelationalExpression	code < 0		813410	0		<			
ANR	813615	Identifier	code		813410	0					
ANR	813616	PrimaryExpression	0		813410	1					
ANR	813617	ReturnStatement	return code ;	1689:12:65378:65389	813410	1	True				
ANR	813618	Identifier	code		813410	0					
ANR	813619	ReturnStatement	return 0 ;	1692:4:65402:65410	813410	7	True				
ANR	813620	PrimaryExpression	0		813410	0					
ANR	813621	ReturnType	int		813410	1					
ANR	813622	Identifier	gs_truetype_font_info		813410	2					
ANR	813623	ParameterList	"gs_font * font , const gs_point * pscale , int members , gs_font_info_t * info"		813410	3					
ANR	813624	Parameter	gs_font * font	1655:22:63792:63804	813410	0	True				
ANR	813625	ParameterType	gs_font *		813410	0					
ANR	813626	Identifier	font		813410	1					
ANR	813627	Parameter	const gs_point * pscale	1655:37:63807:63828	813410	1	True				
ANR	813628	ParameterType	const gs_point *		813410	0					
ANR	813629	Identifier	pscale		813410	1					
ANR	813630	Parameter	int members	1655:61:63831:63841	813410	2	True				
ANR	813631	ParameterType	int		813410	0					
ANR	813632	Identifier	members		813410	1					
ANR	813633	Parameter	gs_font_info_t * info	1656:11:63855:63874	813410	3	True				
ANR	813634	ParameterType	gs_font_info_t *		813410	0					
ANR	813635	Identifier	info		813410	1					
ANR	813636	CFGEntryNode	ENTRY		813410		True				
ANR	813637	CFGExitNode	EXIT		813410		True				
ANR	813638	Symbol	FONT_INFO_FULL_NAME		813410						
ANR	813639	Symbol	code		813410						
ANR	813640	Symbol	pfont		813410						
ANR	813641	Symbol	FONT_INFO_EMBEDDING_RIGHTS		813410						
ANR	813642	Symbol	pfont -> data . name_offset		813410						
ANR	813643	Symbol	pfont -> data		813410						
ANR	813644	Symbol	& info -> FamilyName		813410						
ANR	813645	Symbol	& info -> Copyright		813410						
ANR	813646	Symbol	& info -> FullName		813410						
ANR	813647	Symbol	info -> members		813410						
ANR	813648	Symbol	* pfont		813410						
ANR	813649	Symbol	get_from_names_table		813410						
ANR	813650	Symbol	FONT_INFO_COPYRIGHT		813410						
ANR	813651	Symbol	members		813410						
ANR	813652	Symbol	pfont -> data . os2_offset		813410						
ANR	813653	Symbol	pscale		813410						
ANR	813654	Symbol	* info		813410						
ANR	813655	Symbol	U16		813410						
ANR	813656	Symbol	info -> EmbeddingRights		813410						
ANR	813657	Symbol	fstype		813410						
ANR	813658	Symbol	font		813410						
ANR	813659	Symbol	info		813410						
ANR	813660	Symbol	FONT_INFO_FAMILY_NAME		813410						
ANR	813661	Function	gs_type42_font_info	1695:0:65415:65695							
ANR	813662	FunctionDef	"gs_type42_font_info (gs_font * font , const gs_point * pscale , int members , gs_font_info_t * info)"		813661	0					
ANR	813663	CompoundStatement		1698:0:65524:65695	813661	0					
ANR	813664	IdentifierDeclStatement	"int code = gs_default_font_info ( font , pscale , members , info ) ;"	1699:4:65530:65590	813661	0	True				
ANR	813665	IdentifierDecl	"code = gs_default_font_info ( font , pscale , members , info )"		813661	0					
ANR	813666	IdentifierDeclType	int		813661	0					
ANR	813667	Identifier	code		813661	1					
ANR	813668	AssignmentExpression	"code = gs_default_font_info ( font , pscale , members , info )"		813661	2		=			
ANR	813669	Identifier	code		813661	0					
ANR	813670	CallExpression	"gs_default_font_info ( font , pscale , members , info )"		813661	1					
ANR	813671	Callee	gs_default_font_info		813661	0					
ANR	813672	Identifier	gs_default_font_info		813661	0					
ANR	813673	ArgumentList	font		813661	1					
ANR	813674	Argument	font		813661	0					
ANR	813675	Identifier	font		813661	0					
ANR	813676	Argument	pscale		813661	1					
ANR	813677	Identifier	pscale		813661	0					
ANR	813678	Argument	members		813661	2					
ANR	813679	Identifier	members		813661	0					
ANR	813680	Argument	info		813661	3					
ANR	813681	Identifier	info		813661	0					
ANR	813682	IfStatement	if ( code < 0 )		813661	1					
ANR	813683	Condition	code < 0	1701:8:65601:65608	813661	0	True				
ANR	813684	RelationalExpression	code < 0		813661	0		<			
ANR	813685	Identifier	code		813661	0					
ANR	813686	PrimaryExpression	0		813661	1					
ANR	813687	ReturnStatement	return code ;	1702:8:65619:65630	813661	1	True				
ANR	813688	Identifier	code		813661	0					
ANR	813689	ReturnStatement	"return gs_truetype_font_info ( font , pscale , members , info ) ;"	1703:4:65636:65693	813661	2	True				
ANR	813690	CallExpression	"gs_truetype_font_info ( font , pscale , members , info )"		813661	0					
ANR	813691	Callee	gs_truetype_font_info		813661	0					
ANR	813692	Identifier	gs_truetype_font_info		813661	0					
ANR	813693	ArgumentList	font		813661	1					
ANR	813694	Argument	font		813661	0					
ANR	813695	Identifier	font		813661	0					
ANR	813696	Argument	pscale		813661	1					
ANR	813697	Identifier	pscale		813661	0					
ANR	813698	Argument	members		813661	2					
ANR	813699	Identifier	members		813661	0					
ANR	813700	Argument	info		813661	3					
ANR	813701	Identifier	info		813661	0					
ANR	813702	ReturnType	int		813661	1					
ANR	813703	Identifier	gs_type42_font_info		813661	2					
ANR	813704	ParameterList	"gs_font * font , const gs_point * pscale , int members , gs_font_info_t * info"		813661	3					
ANR	813705	Parameter	gs_font * font	1696:20:65439:65451	813661	0	True				
ANR	813706	ParameterType	gs_font *		813661	0					
ANR	813707	Identifier	font		813661	1					
ANR	813708	Parameter	const gs_point * pscale	1696:35:65454:65475	813661	1	True				
ANR	813709	ParameterType	const gs_point *		813661	0					
ANR	813710	Identifier	pscale		813661	1					
ANR	813711	Parameter	int members	1696:59:65478:65488	813661	2	True				
ANR	813712	ParameterType	int		813661	0					
ANR	813713	Identifier	members		813661	1					
ANR	813714	Parameter	gs_font_info_t * info	1697:11:65502:65521	813661	3	True				
ANR	813715	ParameterType	gs_font_info_t *		813661	0					
ANR	813716	Identifier	info		813661	1					
ANR	813717	CFGEntryNode	ENTRY		813661		True				
ANR	813718	CFGExitNode	EXIT		813661		True				
ANR	813719	Symbol	gs_default_font_info		813661						
ANR	813720	Symbol	code		813661						
ANR	813721	Symbol	members		813661						
ANR	813722	Symbol	pscale		813661						
ANR	813723	Symbol	gs_truetype_font_info		813661						
ANR	813724	Symbol	font		813661						
ANR	813725	Symbol	info		813661						
ANR	813726	Function	gs_woff_tabdir_compare	1707:0:65760:65983							
ANR	813727	FunctionDef	"gs_woff_tabdir_compare (const void * a , const void * b)"		813726	0					
ANR	813728	CompoundStatement		1709:0:65825:65983	813726	0					
ANR	813729	IdentifierDeclStatement	"uint32_t poffs , qoffs ;"	1710:4:65831:65852	813726	0	True				
ANR	813730	IdentifierDecl	poffs		813726	0					
ANR	813731	IdentifierDeclType	uint32_t		813726	0					
ANR	813732	Identifier	poffs		813726	1					
ANR	813733	IdentifierDecl	qoffs		813726	1					
ANR	813734	IdentifierDeclType	uint32_t		813726	0					
ANR	813735	Identifier	qoffs		813726	1					
ANR	813736	ExpressionStatement	poffs = u32 ( ( * ( byte * * ) a ) + 4 )	1712:4:65859:65889	813726	1	True				
ANR	813737	AssignmentExpression	poffs = u32 ( ( * ( byte * * ) a ) + 4 )		813726	0		=			
ANR	813738	Identifier	poffs		813726	0					
ANR	813739	CallExpression	u32 ( ( * ( byte * * ) a ) + 4 )		813726	1					
ANR	813740	Callee	u32		813726	0					
ANR	813741	Identifier	u32		813726	0					
ANR	813742	ArgumentList	( * ( byte * * ) a ) + 4		813726	1					
ANR	813743	Argument	( * ( byte * * ) a ) + 4		813726	0					
ANR	813744	AdditiveExpression	( * ( byte * * ) a ) + 4		813726	0		+			
ANR	813745	UnaryOperationExpression	* ( byte * * ) a		813726	0					
ANR	813746	UnaryOperator	*		813726	0					
ANR	813747	CastExpression	( byte * * ) a		813726	1					
ANR	813748	CastTarget	byte * *		813726	0					
ANR	813749	Identifier	a		813726	1					
ANR	813750	PrimaryExpression	4		813726	1					
ANR	813751	ExpressionStatement	qoffs = u32 ( ( * ( byte * * ) b ) + 4 )	1713:4:65895:65925	813726	2	True				
ANR	813752	AssignmentExpression	qoffs = u32 ( ( * ( byte * * ) b ) + 4 )		813726	0		=			
ANR	813753	Identifier	qoffs		813726	0					
ANR	813754	CallExpression	u32 ( ( * ( byte * * ) b ) + 4 )		813726	1					
ANR	813755	Callee	u32		813726	0					
ANR	813756	Identifier	u32		813726	0					
ANR	813757	ArgumentList	( * ( byte * * ) b ) + 4		813726	1					
ANR	813758	Argument	( * ( byte * * ) b ) + 4		813726	0					
ANR	813759	AdditiveExpression	( * ( byte * * ) b ) + 4		813726	0		+			
ANR	813760	UnaryOperationExpression	* ( byte * * ) b		813726	0					
ANR	813761	UnaryOperator	*		813726	0					
ANR	813762	CastExpression	( byte * * ) b		813726	1					
ANR	813763	CastTarget	byte * *		813726	0					
ANR	813764	Identifier	b		813726	1					
ANR	813765	PrimaryExpression	4		813726	1					
ANR	813766	ReturnStatement	return poffs > qoffs ? 1 : poffs < qoffs ? - 1 : 0 ;	1715:4:65932:65981	813726	3	True				
ANR	813767	ConditionalExpression	poffs > qoffs ? 1 : poffs < qoffs ? - 1 : 0		813726	0					
ANR	813768	Condition	poffs > qoffs		813726	0					
ANR	813769	RelationalExpression	poffs > qoffs		813726	0		>			
ANR	813770	Identifier	poffs		813726	0					
ANR	813771	Identifier	qoffs		813726	1					
ANR	813772	PrimaryExpression	1		813726	1					
ANR	813773	ConditionalExpression	poffs < qoffs ? - 1 : 0		813726	2					
ANR	813774	Condition	poffs < qoffs		813726	0					
ANR	813775	RelationalExpression	poffs < qoffs		813726	0		<			
ANR	813776	Identifier	poffs		813726	0					
ANR	813777	Identifier	qoffs		813726	1					
ANR	813778	UnaryOperationExpression	- 1		813726	1					
ANR	813779	UnaryOperator	-		813726	0					
ANR	813780	PrimaryExpression	1		813726	1					
ANR	813781	PrimaryExpression	0		813726	2					
ANR	813782	ReturnType	static int		813726	1					
ANR	813783	Identifier	gs_woff_tabdir_compare		813726	2					
ANR	813784	ParameterList	"const void * a , const void * b"		813726	3					
ANR	813785	Parameter	const void * a	1708:24:65795:65807	813726	0	True				
ANR	813786	ParameterType	const void *		813726	0					
ANR	813787	Identifier	a		813726	1					
ANR	813788	Parameter	const void * b	1708:39:65810:65822	813726	1	True				
ANR	813789	ParameterType	const void *		813726	0					
ANR	813790	Identifier	b		813726	1					
ANR	813791	CFGEntryNode	ENTRY		813726		True				
ANR	813792	CFGExitNode	EXIT		813726		True				
ANR	813793	Symbol	a		813726						
ANR	813794	Symbol	b		813726						
ANR	813795	Symbol	u32		813726						
ANR	813796	Symbol	qoffs		813726						
ANR	813797	Symbol	poffs		813726						
ANR	813798	Symbol	* a		813726						
ANR	813799	Symbol	* b		813726						
ANR	813800	Symbol	* ( byte * * ) a		813726						
ANR	813801	Symbol	* ( byte * * ) b		813726						
ANR	813802	Function	gs_woff_push_flate_filter	1718:0:65986:67026							
ANR	813803	FunctionDef	gs_woff_push_flate_filter (stream * s)		813802	0					
ANR	813804	CompoundStatement		1720:0:66039:67026	813802	0					
ANR	813805	IdentifierDeclStatement	gs_memory_t * mem = s -> memory ;	1721:4:66045:66073	813802	0	True				
ANR	813806	IdentifierDecl	* mem = s -> memory		813802	0					
ANR	813807	IdentifierDeclType	gs_memory_t *		813802	0					
ANR	813808	Identifier	mem		813802	1					
ANR	813809	AssignmentExpression	* mem = s -> memory		813802	2		=			
ANR	813810	Identifier	mem		813802	0					
ANR	813811	PtrMemberAccess	s -> memory		813802	1					
ANR	813812	Identifier	s		813802	0					
ANR	813813	Identifier	memory		813802	1					
ANR	813814	IdentifierDeclStatement	"stream * fs , * ffs = NULL ;"	1722:4:66079:66102	813802	1	True				
ANR	813815	IdentifierDecl	* fs		813802	0					
ANR	813816	IdentifierDeclType	stream *		813802	0					
ANR	813817	Identifier	fs		813802	1					
ANR	813818	IdentifierDecl	* ffs = NULL		813802	1					
ANR	813819	IdentifierDeclType	stream *		813802	0					
ANR	813820	Identifier	ffs		813802	1					
ANR	813821	AssignmentExpression	* ffs = NULL		813802	2		=			
ANR	813822	Identifier	NULL		813802	0					
ANR	813823	Identifier	NULL		813802	1					
ANR	813824	IdentifierDeclStatement	byte * buf ;	1723:4:66108:66117	813802	2	True				
ANR	813825	IdentifierDecl	* buf		813802	0					
ANR	813826	IdentifierDeclType	byte *		813802	0					
ANR	813827	Identifier	buf		813802	1					
ANR	813828	IdentifierDeclStatement	stream_zlib_state * st ;	1724:4:66123:66144	813802	3	True				
ANR	813829	IdentifierDecl	* st		813802	0					
ANR	813830	IdentifierDeclType	stream_zlib_state *		813802	0					
ANR	813831	Identifier	st		813802	1					
ANR	813832	ExpressionStatement	"fs = s_alloc ( mem , ""gs_woff_push_flate_filter(fs)"" )"	1726:4:66151:66201	813802	4	True				
ANR	813833	AssignmentExpression	"fs = s_alloc ( mem , ""gs_woff_push_flate_filter(fs)"" )"		813802	0		=			
ANR	813834	Identifier	fs		813802	0					
ANR	813835	CallExpression	"s_alloc ( mem , ""gs_woff_push_flate_filter(fs)"" )"		813802	1					
ANR	813836	Callee	s_alloc		813802	0					
ANR	813837	Identifier	s_alloc		813802	0					
ANR	813838	ArgumentList	mem		813802	1					
ANR	813839	Argument	mem		813802	0					
ANR	813840	Identifier	mem		813802	0					
ANR	813841	Argument	"""gs_woff_push_flate_filter(fs)"""		813802	1					
ANR	813842	PrimaryExpression	"""gs_woff_push_flate_filter(fs)"""		813802	0					
ANR	813843	ExpressionStatement	"buf = gs_alloc_bytes ( mem , 4096 , ""gs_woff_push_flate_filter(buf)"" )"	1727:4:66207:66272	813802	5	True				
ANR	813844	AssignmentExpression	"buf = gs_alloc_bytes ( mem , 4096 , ""gs_woff_push_flate_filter(buf)"" )"		813802	0		=			
ANR	813845	Identifier	buf		813802	0					
ANR	813846	CallExpression	"gs_alloc_bytes ( mem , 4096 , ""gs_woff_push_flate_filter(buf)"" )"		813802	1					
ANR	813847	Callee	gs_alloc_bytes		813802	0					
ANR	813848	Identifier	gs_alloc_bytes		813802	0					
ANR	813849	ArgumentList	mem		813802	1					
ANR	813850	Argument	mem		813802	0					
ANR	813851	Identifier	mem		813802	0					
ANR	813852	Argument	4096		813802	1					
ANR	813853	PrimaryExpression	4096		813802	0					
ANR	813854	Argument	"""gs_woff_push_flate_filter(buf)"""		813802	2					
ANR	813855	PrimaryExpression	"""gs_woff_push_flate_filter(buf)"""		813802	0					
ANR	813856	ExpressionStatement	"st = gs_alloc_struct ( mem , stream_zlib_state , s_zlibD_template . stype , ""gs_woff_push_flate_filter(st)"" )"	1728:4:66278:66379	813802	6	True				
ANR	813857	AssignmentExpression	"st = gs_alloc_struct ( mem , stream_zlib_state , s_zlibD_template . stype , ""gs_woff_push_flate_filter(st)"" )"		813802	0		=			
ANR	813858	Identifier	st		813802	0					
ANR	813859	CallExpression	"gs_alloc_struct ( mem , stream_zlib_state , s_zlibD_template . stype , ""gs_woff_push_flate_filter(st)"" )"		813802	1					
ANR	813860	Callee	gs_alloc_struct		813802	0					
ANR	813861	Identifier	gs_alloc_struct		813802	0					
ANR	813862	ArgumentList	mem		813802	1					
ANR	813863	Argument	mem		813802	0					
ANR	813864	Identifier	mem		813802	0					
ANR	813865	Argument	stream_zlib_state		813802	1					
ANR	813866	Identifier	stream_zlib_state		813802	0					
ANR	813867	Argument	s_zlibD_template . stype		813802	2					
ANR	813868	MemberAccess	s_zlibD_template . stype		813802	0					
ANR	813869	Identifier	s_zlibD_template		813802	0					
ANR	813870	Identifier	stype		813802	1					
ANR	813871	Argument	"""gs_woff_push_flate_filter(st)"""		813802	3					
ANR	813872	PrimaryExpression	"""gs_woff_push_flate_filter(st)"""		813802	0					
ANR	813873	IfStatement	if ( fs == 0 || st == 0 || buf == 0 )		813802	7					
ANR	813874	Condition	fs == 0 || st == 0 || buf == 0	1729:8:66389:66418	813802	0	True				
ANR	813875	OrExpression	fs == 0 || st == 0 || buf == 0		813802	0		||			
ANR	813876	EqualityExpression	fs == 0		813802	0		==			
ANR	813877	Identifier	fs		813802	0					
ANR	813878	PrimaryExpression	0		813802	1					
ANR	813879	OrExpression	st == 0 || buf == 0		813802	1		||			
ANR	813880	EqualityExpression	st == 0		813802	0		==			
ANR	813881	Identifier	st		813802	0					
ANR	813882	PrimaryExpression	0		813802	1					
ANR	813883	EqualityExpression	buf == 0		813802	1		==			
ANR	813884	Identifier	buf		813802	0					
ANR	813885	PrimaryExpression	0		813802	1					
ANR	813886	CompoundStatement		10:40:381:381	813802	1					
ANR	813887	ExpressionStatement	"gs_free_object ( mem , fs , ""gs_woff_push_flate_filter(fs)"" )"	1730:8:66431:66487	813802	0	True				
ANR	813888	CallExpression	"gs_free_object ( mem , fs , ""gs_woff_push_flate_filter(fs)"" )"		813802	0					
ANR	813889	Callee	gs_free_object		813802	0					
ANR	813890	Identifier	gs_free_object		813802	0					
ANR	813891	ArgumentList	mem		813802	1					
ANR	813892	Argument	mem		813802	0					
ANR	813893	Identifier	mem		813802	0					
ANR	813894	Argument	fs		813802	1					
ANR	813895	Identifier	fs		813802	0					
ANR	813896	Argument	"""gs_woff_push_flate_filter(fs)"""		813802	2					
ANR	813897	PrimaryExpression	"""gs_woff_push_flate_filter(fs)"""		813802	0					
ANR	813898	ExpressionStatement	"gs_free_object ( mem , buf , ""gs_woff_push_flate_filter(buf)"" )"	1731:8:66497:66555	813802	1	True				
ANR	813899	CallExpression	"gs_free_object ( mem , buf , ""gs_woff_push_flate_filter(buf)"" )"		813802	0					
ANR	813900	Callee	gs_free_object		813802	0					
ANR	813901	Identifier	gs_free_object		813802	0					
ANR	813902	ArgumentList	mem		813802	1					
ANR	813903	Argument	mem		813802	0					
ANR	813904	Identifier	mem		813802	0					
ANR	813905	Argument	buf		813802	1					
ANR	813906	Identifier	buf		813802	0					
ANR	813907	Argument	"""gs_woff_push_flate_filter(buf)"""		813802	2					
ANR	813908	PrimaryExpression	"""gs_woff_push_flate_filter(buf)"""		813802	0					
ANR	813909	ExpressionStatement	"gs_free_object ( mem , st , ""gs_woff_push_flate_filter(st)"" )"	1732:8:66565:66621	813802	2	True				
ANR	813910	CallExpression	"gs_free_object ( mem , st , ""gs_woff_push_flate_filter(st)"" )"		813802	0					
ANR	813911	Callee	gs_free_object		813802	0					
ANR	813912	Identifier	gs_free_object		813802	0					
ANR	813913	ArgumentList	mem		813802	1					
ANR	813914	Argument	mem		813802	0					
ANR	813915	Identifier	mem		813802	0					
ANR	813916	Argument	st		813802	1					
ANR	813917	Identifier	st		813802	0					
ANR	813918	Argument	"""gs_woff_push_flate_filter(st)"""		813802	2					
ANR	813919	PrimaryExpression	"""gs_woff_push_flate_filter(st)"""		813802	0					
ANR	813920	GotoStatement	goto done ;	1733:8:66631:66640	813802	3	True				
ANR	813921	Identifier	done		813802	0					
ANR	813922	ExpressionStatement	"s_std_init ( fs , buf , 4096 , & s_filter_read_procs , s_mode_read )"	1735:4:66652:66712	813802	8	True				
ANR	813923	CallExpression	"s_std_init ( fs , buf , 4096 , & s_filter_read_procs , s_mode_read )"		813802	0					
ANR	813924	Callee	s_std_init		813802	0					
ANR	813925	Identifier	s_std_init		813802	0					
ANR	813926	ArgumentList	fs		813802	1					
ANR	813927	Argument	fs		813802	0					
ANR	813928	Identifier	fs		813802	0					
ANR	813929	Argument	buf		813802	1					
ANR	813930	Identifier	buf		813802	0					
ANR	813931	Argument	4096		813802	2					
ANR	813932	PrimaryExpression	4096		813802	0					
ANR	813933	Argument	& s_filter_read_procs		813802	3					
ANR	813934	UnaryOperationExpression	& s_filter_read_procs		813802	0					
ANR	813935	UnaryOperator	&		813802	0					
ANR	813936	Identifier	s_filter_read_procs		813802	1					
ANR	813937	Argument	s_mode_read		813802	4					
ANR	813938	Identifier	s_mode_read		813802	0					
ANR	813939	ExpressionStatement	st -> memory = mem	1736:4:66718:66734	813802	9	True				
ANR	813940	AssignmentExpression	st -> memory = mem		813802	0		=			
ANR	813941	PtrMemberAccess	st -> memory		813802	0					
ANR	813942	Identifier	st		813802	0					
ANR	813943	Identifier	memory		813802	1					
ANR	813944	Identifier	mem		813802	1					
ANR	813945	ExpressionStatement	st -> templat = & s_zlibD_template	1737:4:66740:66771	813802	10	True				
ANR	813946	AssignmentExpression	st -> templat = & s_zlibD_template		813802	0		=			
ANR	813947	PtrMemberAccess	st -> templat		813802	0					
ANR	813948	Identifier	st		813802	0					
ANR	813949	Identifier	templat		813802	1					
ANR	813950	UnaryOperationExpression	& s_zlibD_template		813802	1					
ANR	813951	UnaryOperator	&		813802	0					
ANR	813952	Identifier	s_zlibD_template		813802	1					
ANR	813953	ExpressionStatement	fs -> state = ( stream_state * ) st	1738:4:66777:66808	813802	11	True				
ANR	813954	AssignmentExpression	fs -> state = ( stream_state * ) st		813802	0		=			
ANR	813955	PtrMemberAccess	fs -> state		813802	0					
ANR	813956	Identifier	fs		813802	0					
ANR	813957	Identifier	state		813802	1					
ANR	813958	CastExpression	( stream_state * ) st		813802	1					
ANR	813959	CastTarget	stream_state *		813802	0					
ANR	813960	Identifier	st		813802	1					
ANR	813961	ExpressionStatement	fs -> procs . process = s_zlibD_template . process	1739:4:66814:66858	813802	12	True				
ANR	813962	AssignmentExpression	fs -> procs . process = s_zlibD_template . process		813802	0		=			
ANR	813963	MemberAccess	fs -> procs . process		813802	0					
ANR	813964	PtrMemberAccess	fs -> procs		813802	0					
ANR	813965	Identifier	fs		813802	0					
ANR	813966	Identifier	procs		813802	1					
ANR	813967	Identifier	process		813802	1					
ANR	813968	MemberAccess	s_zlibD_template . process		813802	1					
ANR	813969	Identifier	s_zlibD_template		813802	0					
ANR	813970	Identifier	process		813802	1					
ANR	813971	ExpressionStatement	fs -> strm = s	1740:4:66864:66876	813802	13	True				
ANR	813972	AssignmentExpression	fs -> strm = s		813802	0		=			
ANR	813973	PtrMemberAccess	fs -> strm		813802	0					
ANR	813974	Identifier	fs		813802	0					
ANR	813975	Identifier	strm		813802	1					
ANR	813976	Identifier	s		813802	1					
ANR	813977	ExpressionStatement	( * s_zlibD_template . set_defaults ) ( ( stream_state * ) st )	1741:4:66882:66936	813802	14	True				
ANR	813978	CallExpression	( * s_zlibD_template . set_defaults ) ( ( stream_state * ) st )		813802	0					
ANR	813979	Callee	* s_zlibD_template . set_defaults		813802	0					
ANR	813980	UnaryOperationExpression	* s_zlibD_template . set_defaults		813802	0					
ANR	813981	UnaryOperator	*		813802	0					
ANR	813982	MemberAccess	s_zlibD_template . set_defaults		813802	1					
ANR	813983	Identifier	s_zlibD_template		813802	0					
ANR	813984	Identifier	set_defaults		813802	1					
ANR	813985	ArgumentList	( stream_state * ) st		813802	1					
ANR	813986	Argument	( stream_state * ) st		813802	0					
ANR	813987	CastExpression	( stream_state * ) st		813802	0					
ANR	813988	CastTarget	stream_state *		813802	0					
ANR	813989	Identifier	st		813802	1					
ANR	813990	ExpressionStatement	( * s_zlibD_template . init ) ( ( stream_state * ) st )	1742:4:66942:66988	813802	15	True				
ANR	813991	CallExpression	( * s_zlibD_template . init ) ( ( stream_state * ) st )		813802	0					
ANR	813992	Callee	* s_zlibD_template . init		813802	0					
ANR	813993	UnaryOperationExpression	* s_zlibD_template . init		813802	0					
ANR	813994	UnaryOperator	*		813802	0					
ANR	813995	MemberAccess	s_zlibD_template . init		813802	1					
ANR	813996	Identifier	s_zlibD_template		813802	0					
ANR	813997	Identifier	init		813802	1					
ANR	813998	ArgumentList	( stream_state * ) st		813802	1					
ANR	813999	Argument	( stream_state * ) st		813802	0					
ANR	814000	CastExpression	( stream_state * ) st		813802	0					
ANR	814001	CastTarget	stream_state *		813802	0					
ANR	814002	Identifier	st		813802	1					
ANR	814003	ExpressionStatement	ffs = fs	1743:4:66994:67002	813802	16	True				
ANR	814004	AssignmentExpression	ffs = fs		813802	0		=			
ANR	814005	Identifier	ffs		813802	0					
ANR	814006	Identifier	fs		813802	1					
ANR	814007	Label	done :	1744:0:67004:67008	813802	17	True				
ANR	814008	Identifier	done		813802	0					
ANR	814009	ReturnStatement	return ffs ;	1745:4:67014:67024	813802	18	True				
ANR	814010	Identifier	ffs		813802	0					
ANR	814011	ReturnType	static stream *		813802	1					
ANR	814012	Identifier	gs_woff_push_flate_filter		813802	2					
ANR	814013	ParameterList	stream * s		813802	3					
ANR	814014	Parameter	stream * s	1719:26:66028:66036	813802	0	True				
ANR	814015	ParameterType	stream *		813802	0					
ANR	814016	Identifier	s		813802	1					
ANR	814017	CFGEntryNode	ENTRY		813802		True				
ANR	814018	CFGExitNode	EXIT		813802		True				
ANR	814019	Symbol	* st		813802						
ANR	814020	Symbol	gs_alloc_struct		813802						
ANR	814021	Symbol	st -> templat		813802						
ANR	814022	Symbol	fs		813802						
ANR	814023	Symbol	* fs		813802						
ANR	814024	Symbol	mem		813802						
ANR	814025	Symbol	s_zlibD_template . init		813802						
ANR	814026	Symbol	s_zlibD_template		813802						
ANR	814027	Symbol	fs -> procs		813802						
ANR	814028	Symbol	s_mode_read		813802						
ANR	814029	Symbol	fs -> procs . process		813802						
ANR	814030	Symbol	& s_filter_read_procs		813802						
ANR	814031	Symbol	st		813802						
ANR	814032	Symbol	gs_alloc_bytes		813802						
ANR	814033	Symbol	NULL		813802						
ANR	814034	Symbol	s_zlibD_template . process		813802						
ANR	814035	Symbol	s -> memory		813802						
ANR	814036	Symbol	st -> memory		813802						
ANR	814037	Symbol	s_zlibD_template . set_defaults		813802						
ANR	814038	Symbol	s_zlibD_template . stype		813802						
ANR	814039	Symbol	ffs		813802						
ANR	814040	Symbol	buf		813802						
ANR	814041	Symbol	fs -> state		813802						
ANR	814042	Symbol	s		813802						
ANR	814043	Symbol	stream_zlib_state		813802						
ANR	814044	Symbol	s_alloc		813802						
ANR	814045	Symbol	& s_zlibD_template		813802						
ANR	814046	Symbol	fs -> strm		813802						
ANR	814047	Symbol	* s		813802						
ANR	814048	Function	gs_woff_pop_flate_filter	1748:0:67029:67326							
ANR	814049	FunctionDef	gs_woff_pop_flate_filter (stream * s)		814048	0					
ANR	814050	CompoundStatement		1750:0:67081:67326	814048	0					
ANR	814051	IdentifierDeclStatement	gs_memory_t * mem = s -> memory ;	1751:4:67087:67115	814048	0	True				
ANR	814052	IdentifierDecl	* mem = s -> memory		814048	0					
ANR	814053	IdentifierDeclType	gs_memory_t *		814048	0					
ANR	814054	Identifier	mem		814048	1					
ANR	814055	AssignmentExpression	* mem = s -> memory		814048	2		=			
ANR	814056	Identifier	mem		814048	0					
ANR	814057	PtrMemberAccess	s -> memory		814048	1					
ANR	814058	Identifier	s		814048	0					
ANR	814059	Identifier	memory		814048	1					
ANR	814060	IdentifierDeclStatement	stream * strm = s -> strm ;	1752:4:67121:67143	814048	1	True				
ANR	814061	IdentifierDecl	* strm = s -> strm		814048	0					
ANR	814062	IdentifierDeclType	stream *		814048	0					
ANR	814063	Identifier	strm		814048	1					
ANR	814064	AssignmentExpression	* strm = s -> strm		814048	2		=			
ANR	814065	Identifier	strm		814048	0					
ANR	814066	PtrMemberAccess	s -> strm		814048	1					
ANR	814067	Identifier	s		814048	0					
ANR	814068	Identifier	strm		814048	1					
ANR	814069	IdentifierDeclStatement	byte * buf = s -> cbuf ;	1753:4:67149:67168	814048	2	True				
ANR	814070	IdentifierDecl	* buf = s -> cbuf		814048	0					
ANR	814071	IdentifierDeclType	byte *		814048	0					
ANR	814072	Identifier	buf		814048	1					
ANR	814073	AssignmentExpression	* buf = s -> cbuf		814048	2		=			
ANR	814074	Identifier	buf		814048	0					
ANR	814075	PtrMemberAccess	s -> cbuf		814048	1					
ANR	814076	Identifier	s		814048	0					
ANR	814077	Identifier	cbuf		814048	1					
ANR	814078	ExpressionStatement	sclose ( s )	1755:4:67175:67184	814048	3	True				
ANR	814079	CallExpression	sclose ( s )		814048	0					
ANR	814080	Callee	sclose		814048	0					
ANR	814081	Identifier	sclose		814048	0					
ANR	814082	ArgumentList	s		814048	1					
ANR	814083	Argument	s		814048	0					
ANR	814084	Identifier	s		814048	0					
ANR	814085	ExpressionStatement	"gs_free_object ( mem , s , ""gs_woff_pop_flate_filter(s)"" )"	1756:4:67190:67243	814048	4	True				
ANR	814086	CallExpression	"gs_free_object ( mem , s , ""gs_woff_pop_flate_filter(s)"" )"		814048	0					
ANR	814087	Callee	gs_free_object		814048	0					
ANR	814088	Identifier	gs_free_object		814048	0					
ANR	814089	ArgumentList	mem		814048	1					
ANR	814090	Argument	mem		814048	0					
ANR	814091	Identifier	mem		814048	0					
ANR	814092	Argument	s		814048	1					
ANR	814093	Identifier	s		814048	0					
ANR	814094	Argument	"""gs_woff_pop_flate_filter(s)"""		814048	2					
ANR	814095	PrimaryExpression	"""gs_woff_pop_flate_filter(s)"""		814048	0					
ANR	814096	ExpressionStatement	"gs_free_object ( mem , buf , ""gs_woff_pop_flate_filter(buf)"" )"	1757:4:67249:67306	814048	5	True				
ANR	814097	CallExpression	"gs_free_object ( mem , buf , ""gs_woff_pop_flate_filter(buf)"" )"		814048	0					
ANR	814098	Callee	gs_free_object		814048	0					
ANR	814099	Identifier	gs_free_object		814048	0					
ANR	814100	ArgumentList	mem		814048	1					
ANR	814101	Argument	mem		814048	0					
ANR	814102	Identifier	mem		814048	0					
ANR	814103	Argument	buf		814048	1					
ANR	814104	Identifier	buf		814048	0					
ANR	814105	Argument	"""gs_woff_pop_flate_filter(buf)"""		814048	2					
ANR	814106	PrimaryExpression	"""gs_woff_pop_flate_filter(buf)"""		814048	0					
ANR	814107	ReturnStatement	return strm ;	1759:4:67313:67324	814048	6	True				
ANR	814108	Identifier	strm		814048	0					
ANR	814109	ReturnType	static stream *		814048	1					
ANR	814110	Identifier	gs_woff_pop_flate_filter		814048	2					
ANR	814111	ParameterList	stream * s		814048	3					
ANR	814112	Parameter	stream * s	1749:25:67070:67078	814048	0	True				
ANR	814113	ParameterType	stream *		814048	0					
ANR	814114	Identifier	s		814048	1					
ANR	814115	CFGEntryNode	ENTRY		814048		True				
ANR	814116	CFGExitNode	EXIT		814048		True				
ANR	814117	Symbol	buf		814048						
ANR	814118	Symbol	s		814048						
ANR	814119	Symbol	mem		814048						
ANR	814120	Symbol	s -> memory		814048						
ANR	814121	Symbol	strm		814048						
ANR	814122	Symbol	s -> cbuf		814048						
ANR	814123	Symbol	* s		814048						
ANR	814124	Symbol	s -> strm		814048						
ANR	814125	Function	gs_woff2sfnt	1782:0:67817:71702							
ANR	814126	FunctionDef	"gs_woff2sfnt (gs_memory_t * mem , stream * s , byte * outbuf , int * outbuflen)"		814125	0					
ANR	814127	CompoundStatement		1784:0:67900:71702	814125	0					
ANR	814128	IdentifierDeclStatement	int code = 0 ;	1785:4:67906:67918	814125	0	True				
ANR	814129	IdentifierDecl	code = 0		814125	0					
ANR	814130	IdentifierDeclType	int		814125	0					
ANR	814131	Identifier	code		814125	1					
ANR	814132	AssignmentExpression	code = 0		814125	2		=			
ANR	814133	Identifier	code		814125	0					
ANR	814134	PrimaryExpression	0		814125	1					
ANR	814135	IdentifierDeclStatement	gs_offset_t start ;	1786:4:67924:67941	814125	1	True				
ANR	814136	IdentifierDecl	start		814125	0					
ANR	814137	IdentifierDeclType	gs_offset_t		814125	0					
ANR	814138	Identifier	start		814125	1					
ANR	814139	IdentifierDeclStatement	"uint32_t sfntlen , ntables , sr , es , rs , i ;"	1787:4:67947:67987	814125	2	True				
ANR	814140	IdentifierDecl	sfntlen		814125	0					
ANR	814141	IdentifierDeclType	uint32_t		814125	0					
ANR	814142	Identifier	sfntlen		814125	1					
ANR	814143	IdentifierDecl	ntables		814125	1					
ANR	814144	IdentifierDeclType	uint32_t		814125	0					
ANR	814145	Identifier	ntables		814125	1					
ANR	814146	IdentifierDecl	sr		814125	2					
ANR	814147	IdentifierDeclType	uint32_t		814125	0					
ANR	814148	Identifier	sr		814125	1					
ANR	814149	IdentifierDecl	es		814125	3					
ANR	814150	IdentifierDeclType	uint32_t		814125	0					
ANR	814151	Identifier	es		814125	1					
ANR	814152	IdentifierDecl	rs		814125	4					
ANR	814153	IdentifierDeclType	uint32_t		814125	0					
ANR	814154	Identifier	rs		814125	1					
ANR	814155	IdentifierDecl	i		814125	5					
ANR	814156	IdentifierDeclType	uint32_t		814125	0					
ANR	814157	Identifier	i		814125	1					
ANR	814158	IdentifierDeclStatement	"byte woffhdr [ 44 ] , * tabbuf = NULL ;"	1788:4:67993:68025	814125	3	True				
ANR	814159	IdentifierDecl	woffhdr [ 44 ]		814125	0					
ANR	814160	IdentifierDeclType	byte [ 44 ]		814125	0					
ANR	814161	Identifier	woffhdr		814125	1					
ANR	814162	PrimaryExpression	44		814125	2					
ANR	814163	IdentifierDecl	* tabbuf = NULL		814125	1					
ANR	814164	IdentifierDeclType	byte *		814125	0					
ANR	814165	Identifier	tabbuf		814125	1					
ANR	814166	AssignmentExpression	* tabbuf = NULL		814125	2		=			
ANR	814167	Identifier	NULL		814125	0					
ANR	814168	Identifier	NULL		814125	1					
ANR	814169	IdentifierDeclStatement	byte * * tabbufptrs = NULL ;	1789:4:68031:68055	814125	4	True				
ANR	814170	IdentifierDecl	* * tabbufptrs = NULL		814125	0					
ANR	814171	IdentifierDeclType	byte * *		814125	0					
ANR	814172	Identifier	tabbufptrs		814125	1					
ANR	814173	AssignmentExpression	* * tabbufptrs = NULL		814125	2		=			
ANR	814174	Identifier	NULL		814125	0					
ANR	814175	Identifier	NULL		814125	1					
ANR	814176	IdentifierDeclStatement	"byte * obuf = outbuf , * tdir ;"	1790:4:68061:68087	814125	5	True				
ANR	814177	IdentifierDecl	* obuf = outbuf		814125	0					
ANR	814178	IdentifierDeclType	byte *		814125	0					
ANR	814179	Identifier	obuf		814125	1					
ANR	814180	AssignmentExpression	* obuf = outbuf		814125	2		=			
ANR	814181	Identifier	outbuf		814125	0					
ANR	814182	Identifier	outbuf		814125	1					
ANR	814183	IdentifierDecl	* tdir		814125	1					
ANR	814184	IdentifierDeclType	byte *		814125	0					
ANR	814185	Identifier	tdir		814125	1					
ANR	814186	IfStatement	if ( ! sseekable ( s ) )		814125	6					
ANR	814187	Condition	! sseekable ( s )	1792:8:68098:68110	814125	0	True				
ANR	814188	UnaryOperationExpression	! sseekable ( s )		814125	0					
ANR	814189	UnaryOperator	!		814125	0					
ANR	814190	CallExpression	sseekable ( s )		814125	1					
ANR	814191	Callee	sseekable		814125	0					
ANR	814192	Identifier	sseekable		814125	0					
ANR	814193	ArgumentList	s		814125	1					
ANR	814194	Argument	s		814125	0					
ANR	814195	Identifier	s		814125	0					
ANR	814196	CompoundStatement		9:23:212:212	814125	1					
ANR	814197	ExpressionStatement	code = gs_note_error ( gs_error_ioerror )	1793:8:68123:68161	814125	0	True				
ANR	814198	AssignmentExpression	code = gs_note_error ( gs_error_ioerror )		814125	0		=			
ANR	814199	Identifier	code		814125	0					
ANR	814200	CallExpression	gs_note_error ( gs_error_ioerror )		814125	1					
ANR	814201	Callee	gs_note_error		814125	0					
ANR	814202	Identifier	gs_note_error		814125	0					
ANR	814203	ArgumentList	gs_error_ioerror		814125	1					
ANR	814204	Argument	gs_error_ioerror		814125	0					
ANR	814205	Identifier	gs_error_ioerror		814125	0					
ANR	814206	GotoStatement	goto done ;	1794:8:68171:68180	814125	1	True				
ANR	814207	Identifier	done		814125	0					
ANR	814208	ExpressionStatement	start = stell ( s )	1796:4:68192:68208	814125	7	True				
ANR	814209	AssignmentExpression	start = stell ( s )		814125	0		=			
ANR	814210	Identifier	start		814125	0					
ANR	814211	CallExpression	stell ( s )		814125	1					
ANR	814212	Callee	stell		814125	0					
ANR	814213	Identifier	stell		814125	0					
ANR	814214	ArgumentList	s		814125	1					
ANR	814215	Argument	s		814125	0					
ANR	814216	Identifier	s		814125	0					
ANR	814217	IfStatement	if ( s -> bsize < 44 )		814125	8					
ANR	814218	Condition	s -> bsize < 44	1797:8:68218:68230	814125	0	True				
ANR	814219	RelationalExpression	s -> bsize < 44		814125	0		<			
ANR	814220	PtrMemberAccess	s -> bsize		814125	0					
ANR	814221	Identifier	s		814125	0					
ANR	814222	Identifier	bsize		814125	1					
ANR	814223	PrimaryExpression	44		814125	1					
ANR	814224	CompoundStatement		14:22:331:331	814125	1					
ANR	814225	ExpressionStatement	code = gs_note_error ( gs_error_invalidfont )	1798:8:68242:68284	814125	0	True				
ANR	814226	AssignmentExpression	code = gs_note_error ( gs_error_invalidfont )		814125	0		=			
ANR	814227	Identifier	code		814125	0					
ANR	814228	CallExpression	gs_note_error ( gs_error_invalidfont )		814125	1					
ANR	814229	Callee	gs_note_error		814125	0					
ANR	814230	Identifier	gs_note_error		814125	0					
ANR	814231	ArgumentList	gs_error_invalidfont		814125	1					
ANR	814232	Argument	gs_error_invalidfont		814125	0					
ANR	814233	Identifier	gs_error_invalidfont		814125	0					
ANR	814234	GotoStatement	goto done ;	1799:8:68294:68303	814125	1	True				
ANR	814235	Identifier	done		814125	0					
ANR	814236	IfStatement	"if ( ( code = sfread ( woffhdr , WOFFHDR_LEN , 1 , s ) ) < 0 )"		814125	9					
ANR	814237	Condition	"( code = sfread ( woffhdr , WOFFHDR_LEN , 1 , s ) ) < 0"	1802:8:68320:68366	814125	0	True				
ANR	814238	RelationalExpression	"( code = sfread ( woffhdr , WOFFHDR_LEN , 1 , s ) ) < 0"		814125	0		<			
ANR	814239	AssignmentExpression	"code = sfread ( woffhdr , WOFFHDR_LEN , 1 , s )"		814125	0		=			
ANR	814240	Identifier	code		814125	0					
ANR	814241	CallExpression	"sfread ( woffhdr , WOFFHDR_LEN , 1 , s )"		814125	1					
ANR	814242	Callee	sfread		814125	0					
ANR	814243	Identifier	sfread		814125	0					
ANR	814244	ArgumentList	woffhdr		814125	1					
ANR	814245	Argument	woffhdr		814125	0					
ANR	814246	Identifier	woffhdr		814125	0					
ANR	814247	Argument	WOFFHDR_LEN		814125	1					
ANR	814248	Identifier	WOFFHDR_LEN		814125	0					
ANR	814249	Argument	1		814125	2					
ANR	814250	PrimaryExpression	1		814125	0					
ANR	814251	Argument	s		814125	3					
ANR	814252	Identifier	s		814125	0					
ANR	814253	PrimaryExpression	0		814125	1					
ANR	814254	GotoStatement	goto done ;	1803:8:68377:68386	814125	1	True				
ANR	814255	Identifier	done		814125	0					
ANR	814256	IfStatement	"if ( memcmp ( woffhdr , ""wOFF"" , 4 ) != 0 || memcmp ( woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , ""OTTO"" , 4 ) == 0 )"		814125	10					
ANR	814257	Condition	"memcmp ( woffhdr , ""wOFF"" , 4 ) != 0 || memcmp ( woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , ""OTTO"" , 4 ) == 0"	1805:8:68397:68494	814125	0	True				
ANR	814258	OrExpression	"memcmp ( woffhdr , ""wOFF"" , 4 ) != 0 || memcmp ( woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , ""OTTO"" , 4 ) == 0"		814125	0		||			
ANR	814259	EqualityExpression	"memcmp ( woffhdr , ""wOFF"" , 4 ) != 0"		814125	0		!=			
ANR	814260	CallExpression	"memcmp ( woffhdr , ""wOFF"" , 4 )"		814125	0					
ANR	814261	Callee	memcmp		814125	0					
ANR	814262	Identifier	memcmp		814125	0					
ANR	814263	ArgumentList	woffhdr		814125	1					
ANR	814264	Argument	woffhdr		814125	0					
ANR	814265	Identifier	woffhdr		814125	0					
ANR	814266	Argument	"""wOFF"""		814125	1					
ANR	814267	PrimaryExpression	"""wOFF"""		814125	0					
ANR	814268	Argument	4		814125	2					
ANR	814269	PrimaryExpression	4		814125	0					
ANR	814270	PrimaryExpression	0		814125	1					
ANR	814271	EqualityExpression	"memcmp ( woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , ""OTTO"" , 4 ) == 0"		814125	1		==			
ANR	814272	CallExpression	"memcmp ( woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , ""OTTO"" , 4 )"		814125	0					
ANR	814273	Callee	memcmp		814125	0					
ANR	814274	Identifier	memcmp		814125	0					
ANR	814275	ArgumentList	woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS		814125	1					
ANR	814276	Argument	woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS		814125	0					
ANR	814277	AdditiveExpression	woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS		814125	0		+			
ANR	814278	Identifier	woffhdr		814125	0					
ANR	814279	Identifier	WOFFHDR_SFNT_FLAVOR_OFFS		814125	1					
ANR	814280	Argument	"""OTTO"""		814125	1					
ANR	814281	PrimaryExpression	"""OTTO"""		814125	0					
ANR	814282	Argument	4		814125	2					
ANR	814283	PrimaryExpression	4		814125	0					
ANR	814284	PrimaryExpression	0		814125	1					
ANR	814285	CompoundStatement		23:68:596:596	814125	1					
ANR	814286	ExpressionStatement	"( void ) sseek ( s , start )"	1807:8:68507:68528	814125	0	True				
ANR	814287	CastExpression	"( void ) sseek ( s , start )"		814125	0					
ANR	814288	CastTarget	void		814125	0					
ANR	814289	CallExpression	"sseek ( s , start )"		814125	1					
ANR	814290	Callee	sseek		814125	0					
ANR	814291	Identifier	sseek		814125	0					
ANR	814292	ArgumentList	s		814125	1					
ANR	814293	Argument	s		814125	0					
ANR	814294	Identifier	s		814125	0					
ANR	814295	Argument	start		814125	1					
ANR	814296	Identifier	start		814125	0					
ANR	814297	ExpressionStatement	code = gs_note_error ( gs_error_invalidfont )	1808:8:68538:68580	814125	1	True				
ANR	814298	AssignmentExpression	code = gs_note_error ( gs_error_invalidfont )		814125	0		=			
ANR	814299	Identifier	code		814125	0					
ANR	814300	CallExpression	gs_note_error ( gs_error_invalidfont )		814125	1					
ANR	814301	Callee	gs_note_error		814125	0					
ANR	814302	Identifier	gs_note_error		814125	0					
ANR	814303	ArgumentList	gs_error_invalidfont		814125	1					
ANR	814304	Argument	gs_error_invalidfont		814125	0					
ANR	814305	Identifier	gs_error_invalidfont		814125	0					
ANR	814306	GotoStatement	goto done ;	1809:8:68590:68599	814125	2	True				
ANR	814307	Identifier	done		814125	0					
ANR	814308	ExpressionStatement	sfntlen = u32 ( woffhdr + WOFFHDR_SFNT_LEN_OFFS )	1811:4:68611:68657	814125	11	True				
ANR	814309	AssignmentExpression	sfntlen = u32 ( woffhdr + WOFFHDR_SFNT_LEN_OFFS )		814125	0		=			
ANR	814310	Identifier	sfntlen		814125	0					
ANR	814311	CallExpression	u32 ( woffhdr + WOFFHDR_SFNT_LEN_OFFS )		814125	1					
ANR	814312	Callee	u32		814125	0					
ANR	814313	Identifier	u32		814125	0					
ANR	814314	ArgumentList	woffhdr + WOFFHDR_SFNT_LEN_OFFS		814125	1					
ANR	814315	Argument	woffhdr + WOFFHDR_SFNT_LEN_OFFS		814125	0					
ANR	814316	AdditiveExpression	woffhdr + WOFFHDR_SFNT_LEN_OFFS		814125	0		+			
ANR	814317	Identifier	woffhdr		814125	0					
ANR	814318	Identifier	WOFFHDR_SFNT_LEN_OFFS		814125	1					
ANR	814319	IfStatement	if ( ! outbuf || * outbuflen < sfntlen )		814125	12					
ANR	814320	Condition	! outbuf || * outbuflen < sfntlen	1812:8:68667:68697	814125	0	True				
ANR	814321	OrExpression	! outbuf || * outbuflen < sfntlen		814125	0		||			
ANR	814322	UnaryOperationExpression	! outbuf		814125	0					
ANR	814323	UnaryOperator	!		814125	0					
ANR	814324	Identifier	outbuf		814125	1					
ANR	814325	RelationalExpression	* outbuflen < sfntlen		814125	1		<			
ANR	814326	UnaryOperationExpression	* outbuflen		814125	0					
ANR	814327	UnaryOperator	*		814125	0					
ANR	814328	Identifier	outbuflen		814125	1					
ANR	814329	Identifier	sfntlen		814125	1					
ANR	814330	CompoundStatement		29:41:799:799	814125	1					
ANR	814331	ExpressionStatement	* outbuflen = sfntlen	1813:8:68710:68730	814125	0	True				
ANR	814332	AssignmentExpression	* outbuflen = sfntlen		814125	0		=			
ANR	814333	UnaryOperationExpression	* outbuflen		814125	0					
ANR	814334	UnaryOperator	*		814125	0					
ANR	814335	Identifier	outbuflen		814125	1					
ANR	814336	Identifier	sfntlen		814125	1					
ANR	814337	ExpressionStatement	"( void ) sseek ( s , start )"	1814:8:68740:68761	814125	1	True				
ANR	814338	CastExpression	"( void ) sseek ( s , start )"		814125	0					
ANR	814339	CastTarget	void		814125	0					
ANR	814340	CallExpression	"sseek ( s , start )"		814125	1					
ANR	814341	Callee	sseek		814125	0					
ANR	814342	Identifier	sseek		814125	0					
ANR	814343	ArgumentList	s		814125	1					
ANR	814344	Argument	s		814125	0					
ANR	814345	Identifier	s		814125	0					
ANR	814346	Argument	start		814125	1					
ANR	814347	Identifier	start		814125	0					
ANR	814348	GotoStatement	goto done ;	1815:8:68771:68780	814125	2	True				
ANR	814349	Identifier	done		814125	0					
ANR	814350	ExpressionStatement	ntables = U16 ( woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS )	1817:4:68792:68842	814125	13	True				
ANR	814351	AssignmentExpression	ntables = U16 ( woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS )		814125	0		=			
ANR	814352	Identifier	ntables		814125	0					
ANR	814353	CallExpression	U16 ( woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS )		814125	1					
ANR	814354	Callee	U16		814125	0					
ANR	814355	Identifier	U16		814125	0					
ANR	814356	ArgumentList	woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS		814125	1					
ANR	814357	Argument	woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS		814125	0					
ANR	814358	AdditiveExpression	woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS		814125	0		+			
ANR	814359	Identifier	woffhdr		814125	0					
ANR	814360	Identifier	WOFFHDR_SFNT_NUMTABS_OFFS		814125	1					
ANR	814361	ExpressionStatement	"memcpy ( obuf , woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , 4 )"	1818:4:68848:68899	814125	14	True				
ANR	814362	CallExpression	"memcpy ( obuf , woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS , 4 )"		814125	0					
ANR	814363	Callee	memcpy		814125	0					
ANR	814364	Identifier	memcpy		814125	0					
ANR	814365	ArgumentList	obuf		814125	1					
ANR	814366	Argument	obuf		814125	0					
ANR	814367	Identifier	obuf		814125	0					
ANR	814368	Argument	woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS		814125	1					
ANR	814369	AdditiveExpression	woffhdr + WOFFHDR_SFNT_FLAVOR_OFFS		814125	0		+			
ANR	814370	Identifier	woffhdr		814125	0					
ANR	814371	Identifier	WOFFHDR_SFNT_FLAVOR_OFFS		814125	1					
ANR	814372	Argument	4		814125	2					
ANR	814373	PrimaryExpression	4		814125	0					
ANR	814374	ExpressionStatement	obuf += 4	1819:4:68905:68914	814125	15	True				
ANR	814375	AssignmentExpression	obuf += 4		814125	0		+=			
ANR	814376	Identifier	obuf		814125	0					
ANR	814377	PrimaryExpression	4		814125	1					
ANR	814378	ExpressionStatement	"memcpy ( obuf , woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS , 2 )"	1820:4:68920:68972	814125	16	True				
ANR	814379	CallExpression	"memcpy ( obuf , woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS , 2 )"		814125	0					
ANR	814380	Callee	memcpy		814125	0					
ANR	814381	Identifier	memcpy		814125	0					
ANR	814382	ArgumentList	obuf		814125	1					
ANR	814383	Argument	obuf		814125	0					
ANR	814384	Identifier	obuf		814125	0					
ANR	814385	Argument	woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS		814125	1					
ANR	814386	AdditiveExpression	woffhdr + WOFFHDR_SFNT_NUMTABS_OFFS		814125	0		+			
ANR	814387	Identifier	woffhdr		814125	0					
ANR	814388	Identifier	WOFFHDR_SFNT_NUMTABS_OFFS		814125	1					
ANR	814389	Argument	2		814125	2					
ANR	814390	PrimaryExpression	2		814125	0					
ANR	814391	ExpressionStatement	obuf += 2	1821:4:68978:68987	814125	17	True				
ANR	814392	AssignmentExpression	obuf += 2		814125	0		+=			
ANR	814393	Identifier	obuf		814125	0					
ANR	814394	PrimaryExpression	2		814125	1					
ANR	814395	ExpressionStatement	sr = ntables	1822:4:68993:69005	814125	18	True				
ANR	814396	AssignmentExpression	sr = ntables		814125	0		=			
ANR	814397	Identifier	sr		814125	0					
ANR	814398	Identifier	ntables		814125	1					
ANR	814399	ExpressionStatement	sr |= ( sr >> 1 )	1823:4:69011:69026	814125	19	True				
ANR	814400	AssignmentExpression	sr |= ( sr >> 1 )		814125	0		|=			
ANR	814401	Identifier	sr		814125	0					
ANR	814402	ShiftExpression	sr >> 1		814125	1		>>			
ANR	814403	Identifier	sr		814125	0					
ANR	814404	PrimaryExpression	1		814125	1					
ANR	814405	ExpressionStatement	sr |= ( sr >> 2 )	1824:4:69032:69047	814125	20	True				
ANR	814406	AssignmentExpression	sr |= ( sr >> 2 )		814125	0		|=			
ANR	814407	Identifier	sr		814125	0					
ANR	814408	ShiftExpression	sr >> 2		814125	1		>>			
ANR	814409	Identifier	sr		814125	0					
ANR	814410	PrimaryExpression	2		814125	1					
ANR	814411	ExpressionStatement	sr |= ( sr >> 4 )	1825:4:69053:69068	814125	21	True				
ANR	814412	AssignmentExpression	sr |= ( sr >> 4 )		814125	0		|=			
ANR	814413	Identifier	sr		814125	0					
ANR	814414	ShiftExpression	sr >> 4		814125	1		>>			
ANR	814415	Identifier	sr		814125	0					
ANR	814416	PrimaryExpression	4		814125	1					
ANR	814417	ExpressionStatement	sr |= ( sr >> 8 )	1826:4:69074:69089	814125	22	True				
ANR	814418	AssignmentExpression	sr |= ( sr >> 8 )		814125	0		|=			
ANR	814419	Identifier	sr		814125	0					
ANR	814420	ShiftExpression	sr >> 8		814125	1		>>			
ANR	814421	Identifier	sr		814125	0					
ANR	814422	PrimaryExpression	8		814125	1					
ANR	814423	ExpressionStatement	sr &= ~ ( sr >> 1 )	1827:4:69095:69111	814125	23	True				
ANR	814424	AssignmentExpression	sr &= ~ ( sr >> 1 )		814125	0		&=			
ANR	814425	Identifier	sr		814125	0					
ANR	814426	UnaryOperationExpression	~ ( sr >> 1 )		814125	1					
ANR	814427	UnaryOperator	~		814125	0					
ANR	814428	ShiftExpression	sr >> 1		814125	1		>>			
ANR	814429	Identifier	sr		814125	0					
ANR	814430	PrimaryExpression	1		814125	1					
ANR	814431	ExpressionStatement	sr *= 16	1828:4:69117:69125	814125	24	True				
ANR	814432	AssignmentExpression	sr *= 16		814125	0		*=			
ANR	814433	Identifier	sr		814125	0					
ANR	814434	PrimaryExpression	16		814125	1					
ANR	814435	Statement	PUTU16	1829:4:69131:69136	814125	25	True				
ANR	814436	Statement	(	1829:10:69137:69137	814125	26	True				
ANR	814437	Statement	obuf	1829:11:69138:69141	814125	27	True				
ANR	814438	Statement	","	1829:15:69142:69142	814125	28	True				
ANR	814439	Statement	(	1829:17:69144:69144	814125	29	True				
ANR	814440	Statement	ushort	1829:18:69145:69150	814125	30	True				
ANR	814441	Statement	)	1829:24:69151:69151	814125	31	True				
ANR	814442	Statement	sr	1829:25:69152:69153	814125	32	True				
ANR	814443	Statement	","	1829:27:69154:69154	814125	33	True				
ANR	814444	Statement	0	1829:29:69156:69156	814125	34	True				
ANR	814445	Statement	)	1829:30:69157:69157	814125	35	True				
ANR	814446	ExpressionStatement	rs = ntables * 16 - sr	1830:4:69163:69185	814125	36	True				
ANR	814447	AssignmentExpression	rs = ntables * 16 - sr		814125	0		=			
ANR	814448	Identifier	rs		814125	0					
ANR	814449	AdditiveExpression	ntables * 16 - sr		814125	1		-			
ANR	814450	MultiplicativeExpression	ntables * 16		814125	0		*			
ANR	814451	Identifier	ntables		814125	0					
ANR	814452	PrimaryExpression	16		814125	1					
ANR	814453	Identifier	sr		814125	1					
ANR	814454	ExpressionStatement	es = 0	1831:4:69191:69197	814125	37	True				
ANR	814455	AssignmentExpression	es = 0		814125	0		=			
ANR	814456	Identifier	es		814125	0					
ANR	814457	PrimaryExpression	0		814125	1					
ANR	814458	WhileStatement	while ( sr > 16 )		814125	38					
ANR	814459	Condition	sr > 16	1832:11:69210:69216	814125	0	True				
ANR	814460	RelationalExpression	sr > 16		814125	0		>			
ANR	814461	Identifier	sr		814125	0					
ANR	814462	PrimaryExpression	16		814125	1					
ANR	814463	CompoundStatement		49:20:1318:1318	814125	1					
ANR	814464	ExpressionStatement	es ++	1833:8:69229:69233	814125	0	True				
ANR	814465	PostIncDecOperationExpression	es ++		814125	0					
ANR	814466	Identifier	es		814125	0					
ANR	814467	IncDec	++		814125	1					
ANR	814468	ExpressionStatement	sr >>= 1	1834:8:69243:69251	814125	1	True				
ANR	814469	AssignmentExpression	sr >>= 1		814125	0		>>=			
ANR	814470	Identifier	sr		814125	0					
ANR	814471	PrimaryExpression	1		814125	1					
ANR	814472	Statement	PUTU16	1836:4:69263:69268	814125	39	True				
ANR	814473	Statement	(	1836:10:69269:69269	814125	40	True				
ANR	814474	Statement	obuf	1836:11:69270:69273	814125	41	True				
ANR	814475	Statement	","	1836:15:69274:69274	814125	42	True				
ANR	814476	Statement	(	1836:17:69276:69276	814125	43	True				
ANR	814477	Statement	ushort	1836:18:69277:69282	814125	44	True				
ANR	814478	Statement	)	1836:24:69283:69283	814125	45	True				
ANR	814479	Statement	es	1836:25:69284:69285	814125	46	True				
ANR	814480	Statement	","	1836:27:69286:69286	814125	47	True				
ANR	814481	Statement	2	1836:29:69288:69288	814125	48	True				
ANR	814482	Statement	)	1836:30:69289:69289	814125	49	True				
ANR	814483	ExpressionStatement	"PUTU16 ( obuf , ( ushort ) rs , 4 )"	1837:4:69295:69322	814125	50	True				
ANR	814484	CallExpression	"PUTU16 ( obuf , ( ushort ) rs , 4 )"		814125	0					
ANR	814485	Callee	PUTU16		814125	0					
ANR	814486	Identifier	PUTU16		814125	0					
ANR	814487	ArgumentList	obuf		814125	1					
ANR	814488	Argument	obuf		814125	0					
ANR	814489	Identifier	obuf		814125	0					
ANR	814490	Argument	( ushort ) rs		814125	1					
ANR	814491	CastExpression	( ushort ) rs		814125	0					
ANR	814492	CastTarget	ushort		814125	0					
ANR	814493	Identifier	rs		814125	1					
ANR	814494	Argument	4		814125	2					
ANR	814495	PrimaryExpression	4		814125	0					
ANR	814496	ExpressionStatement	obuf += 6	1838:4:69328:69337	814125	51	True				
ANR	814497	AssignmentExpression	obuf += 6		814125	0		+=			
ANR	814498	Identifier	obuf		814125	0					
ANR	814499	PrimaryExpression	6		814125	1					
ANR	814500	ExpressionStatement	"tabbuf = gs_alloc_bytes ( mem , WOFF_TABDIR_ENT_LEN * ntables , ""gs_woff2sfnt(tabbuf)"" )"	1840:4:69344:69427	814125	52	True				
ANR	814501	AssignmentExpression	"tabbuf = gs_alloc_bytes ( mem , WOFF_TABDIR_ENT_LEN * ntables , ""gs_woff2sfnt(tabbuf)"" )"		814125	0		=			
ANR	814502	Identifier	tabbuf		814125	0					
ANR	814503	CallExpression	"gs_alloc_bytes ( mem , WOFF_TABDIR_ENT_LEN * ntables , ""gs_woff2sfnt(tabbuf)"" )"		814125	1					
ANR	814504	Callee	gs_alloc_bytes		814125	0					
ANR	814505	Identifier	gs_alloc_bytes		814125	0					
ANR	814506	ArgumentList	mem		814125	1					
ANR	814507	Argument	mem		814125	0					
ANR	814508	Identifier	mem		814125	0					
ANR	814509	Argument	WOFF_TABDIR_ENT_LEN * ntables		814125	1					
ANR	814510	MultiplicativeExpression	WOFF_TABDIR_ENT_LEN * ntables		814125	0		*			
ANR	814511	Identifier	WOFF_TABDIR_ENT_LEN		814125	0					
ANR	814512	Identifier	ntables		814125	1					
ANR	814513	Argument	"""gs_woff2sfnt(tabbuf)"""		814125	2					
ANR	814514	PrimaryExpression	"""gs_woff2sfnt(tabbuf)"""		814125	0					
ANR	814515	ExpressionStatement	"tabbufptrs = ( byte * * ) gs_alloc_bytes ( mem , ( ntables + 1 ) * sizeof ( byte * ) , ""gs_woff2sfnt(tabbufptrs)"" )"	1841:4:69433:69534	814125	53	True				
ANR	814516	AssignmentExpression	"tabbufptrs = ( byte * * ) gs_alloc_bytes ( mem , ( ntables + 1 ) * sizeof ( byte * ) , ""gs_woff2sfnt(tabbufptrs)"" )"		814125	0		=			
ANR	814517	Identifier	tabbufptrs		814125	0					
ANR	814518	CastExpression	"( byte * * ) gs_alloc_bytes ( mem , ( ntables + 1 ) * sizeof ( byte * ) , ""gs_woff2sfnt(tabbufptrs)"" )"		814125	1					
ANR	814519	CastTarget	byte * *		814125	0					
ANR	814520	CallExpression	"gs_alloc_bytes ( mem , ( ntables + 1 ) * sizeof ( byte * ) , ""gs_woff2sfnt(tabbufptrs)"" )"		814125	1					
ANR	814521	Callee	gs_alloc_bytes		814125	0					
ANR	814522	Identifier	gs_alloc_bytes		814125	0					
ANR	814523	ArgumentList	mem		814125	1					
ANR	814524	Argument	mem		814125	0					
ANR	814525	Identifier	mem		814125	0					
ANR	814526	Argument	( ntables + 1 ) * sizeof ( byte * )		814125	1					
ANR	814527	MultiplicativeExpression	( ntables + 1 ) * sizeof ( byte * )		814125	0		*			
ANR	814528	AdditiveExpression	ntables + 1		814125	0		+			
ANR	814529	Identifier	ntables		814125	0					
ANR	814530	PrimaryExpression	1		814125	1					
ANR	814531	SizeofExpression	sizeof ( byte * )		814125	1					
ANR	814532	Sizeof	sizeof		814125	0					
ANR	814533	SizeofOperand	byte *		814125	1					
ANR	814534	Argument	"""gs_woff2sfnt(tabbufptrs)"""		814125	2					
ANR	814535	PrimaryExpression	"""gs_woff2sfnt(tabbufptrs)"""		814125	0					
ANR	814536	IfStatement	if ( ! tabbuf || ! tabbufptrs )		814125	54					
ANR	814537	Condition	! tabbuf || ! tabbufptrs	1842:8:69544:69565	814125	0	True				
ANR	814538	OrExpression	! tabbuf || ! tabbufptrs		814125	0		||			
ANR	814539	UnaryOperationExpression	! tabbuf		814125	0					
ANR	814540	UnaryOperator	!		814125	0					
ANR	814541	Identifier	tabbuf		814125	1					
ANR	814542	UnaryOperationExpression	! tabbufptrs		814125	1					
ANR	814543	UnaryOperator	!		814125	0					
ANR	814544	Identifier	tabbufptrs		814125	1					
ANR	814545	CompoundStatement		59:32:1667:1667	814125	1					
ANR	814546	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1843:8:69578:69616	814125	0	True				
ANR	814547	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		814125	0		=			
ANR	814548	Identifier	code		814125	0					
ANR	814549	CallExpression	gs_note_error ( gs_error_VMerror )		814125	1					
ANR	814550	Callee	gs_note_error		814125	0					
ANR	814551	Identifier	gs_note_error		814125	0					
ANR	814552	ArgumentList	gs_error_VMerror		814125	1					
ANR	814553	Argument	gs_error_VMerror		814125	0					
ANR	814554	Identifier	gs_error_VMerror		814125	0					
ANR	814555	GotoStatement	goto done ;	1844:8:69626:69635	814125	1	True				
ANR	814556	Identifier	done		814125	0					
ANR	814557	IfStatement	"if ( ( code = sfread ( tabbuf , WOFF_TABDIR_ENT_LEN * ntables , 1 , s ) ) < 0 )"		814125	55					
ANR	814558	Condition	"( code = sfread ( tabbuf , WOFF_TABDIR_ENT_LEN * ntables , 1 , s ) ) < 0"	1846:8:69651:69714	814125	0	True				
ANR	814559	RelationalExpression	"( code = sfread ( tabbuf , WOFF_TABDIR_ENT_LEN * ntables , 1 , s ) ) < 0"		814125	0		<			
ANR	814560	AssignmentExpression	"code = sfread ( tabbuf , WOFF_TABDIR_ENT_LEN * ntables , 1 , s )"		814125	0		=			
ANR	814561	Identifier	code		814125	0					
ANR	814562	CallExpression	"sfread ( tabbuf , WOFF_TABDIR_ENT_LEN * ntables , 1 , s )"		814125	1					
ANR	814563	Callee	sfread		814125	0					
ANR	814564	Identifier	sfread		814125	0					
ANR	814565	ArgumentList	tabbuf		814125	1					
ANR	814566	Argument	tabbuf		814125	0					
ANR	814567	Identifier	tabbuf		814125	0					
ANR	814568	Argument	WOFF_TABDIR_ENT_LEN * ntables		814125	1					
ANR	814569	MultiplicativeExpression	WOFF_TABDIR_ENT_LEN * ntables		814125	0		*			
ANR	814570	Identifier	WOFF_TABDIR_ENT_LEN		814125	0					
ANR	814571	Identifier	ntables		814125	1					
ANR	814572	Argument	1		814125	2					
ANR	814573	PrimaryExpression	1		814125	0					
ANR	814574	Argument	s		814125	3					
ANR	814575	Identifier	s		814125	0					
ANR	814576	PrimaryExpression	0		814125	1					
ANR	814577	GotoStatement	goto done ;	1847:8:69725:69734	814125	1	True				
ANR	814578	Identifier	done		814125	0					
ANR	814579	ForStatement	for ( i = 0 ; i < ntables ; i ++ )		814125	56					
ANR	814580	ForInit	i = 0 ;	1849:9:69746:69751	814125	0	True				
ANR	814581	AssignmentExpression	i = 0		814125	0		=			
ANR	814582	Identifier	i		814125	0					
ANR	814583	PrimaryExpression	0		814125	1					
ANR	814584	Condition	i < ntables	1849:16:69753:69763	814125	1	True				
ANR	814585	RelationalExpression	i < ntables		814125	0		<			
ANR	814586	Identifier	i		814125	0					
ANR	814587	Identifier	ntables		814125	1					
ANR	814588	PostIncDecOperationExpression	i ++	1849:29:69766:69768	814125	2	True				
ANR	814589	Identifier	i		814125	0					
ANR	814590	IncDec	++		814125	1					
ANR	814591	ExpressionStatement	tabbufptrs [ i ] = tabbuf + ( i * WOFF_TABDIR_ENT_LEN )	1850:8:69779:69829	814125	3	True				
ANR	814592	AssignmentExpression	tabbufptrs [ i ] = tabbuf + ( i * WOFF_TABDIR_ENT_LEN )		814125	0		=			
ANR	814593	ArrayIndexing	tabbufptrs [ i ]		814125	0					
ANR	814594	Identifier	tabbufptrs		814125	0					
ANR	814595	Identifier	i		814125	1					
ANR	814596	AdditiveExpression	tabbuf + ( i * WOFF_TABDIR_ENT_LEN )		814125	1		+			
ANR	814597	Identifier	tabbuf		814125	0					
ANR	814598	MultiplicativeExpression	i * WOFF_TABDIR_ENT_LEN		814125	1		*			
ANR	814599	Identifier	i		814125	0					
ANR	814600	Identifier	WOFF_TABDIR_ENT_LEN		814125	1					
ANR	814601	ExpressionStatement	tabbufptrs [ i ] = NULL	1851:4:69835:69855	814125	57	True				
ANR	814602	AssignmentExpression	tabbufptrs [ i ] = NULL		814125	0		=			
ANR	814603	ArrayIndexing	tabbufptrs [ i ]		814125	0					
ANR	814604	Identifier	tabbufptrs		814125	0					
ANR	814605	Identifier	i		814125	1					
ANR	814606	Identifier	NULL		814125	1					
ANR	814607	ExpressionStatement	"qsort ( tabbufptrs , ntables , sizeof ( byte * ) , gs_woff_tabdir_compare )"	1852:4:69861:69927	814125	58	True				
ANR	814608	CallExpression	"qsort ( tabbufptrs , ntables , sizeof ( byte * ) , gs_woff_tabdir_compare )"		814125	0					
ANR	814609	Callee	qsort		814125	0					
ANR	814610	Identifier	qsort		814125	0					
ANR	814611	ArgumentList	tabbufptrs		814125	1					
ANR	814612	Argument	tabbufptrs		814125	0					
ANR	814613	Identifier	tabbufptrs		814125	0					
ANR	814614	Argument	ntables		814125	1					
ANR	814615	Identifier	ntables		814125	0					
ANR	814616	Argument	sizeof ( byte * )		814125	2					
ANR	814617	SizeofExpression	sizeof ( byte * )		814125	0					
ANR	814618	Sizeof	sizeof		814125	0					
ANR	814619	SizeofOperand	byte *		814125	1					
ANR	814620	Argument	gs_woff_tabdir_compare		814125	3					
ANR	814621	Identifier	gs_woff_tabdir_compare		814125	0					
ANR	814622	ExpressionStatement	tdir = obuf	1858:4:70129:70140	814125	59	True				
ANR	814623	AssignmentExpression	tdir = obuf		814125	0		=			
ANR	814624	Identifier	tdir		814125	0					
ANR	814625	Identifier	obuf		814125	1					
ANR	814626	ExpressionStatement	obuf += ( 16 * ntables )	1859:4:70146:70168	814125	60	True				
ANR	814627	AssignmentExpression	obuf += ( 16 * ntables )		814125	0		+=			
ANR	814628	Identifier	obuf		814125	0					
ANR	814629	MultiplicativeExpression	16 * ntables		814125	1		*			
ANR	814630	PrimaryExpression	16		814125	0					
ANR	814631	Identifier	ntables		814125	1					
ANR	814632	ForStatement	for ( i = 0 ; i < ntables ; i ++ )		814125	61					
ANR	814633	ForInit	i = 0 ;	1860:9:70179:70184	814125	0	True				
ANR	814634	AssignmentExpression	i = 0		814125	0		=			
ANR	814635	Identifier	i		814125	0					
ANR	814636	PrimaryExpression	0		814125	1					
ANR	814637	Condition	i < ntables	1860:16:70186:70196	814125	1	True				
ANR	814638	RelationalExpression	i < ntables		814125	0		<			
ANR	814639	Identifier	i		814125	0					
ANR	814640	Identifier	ntables		814125	1					
ANR	814641	PostIncDecOperationExpression	i ++	1860:29:70199:70201	814125	2	True				
ANR	814642	Identifier	i		814125	0					
ANR	814643	IncDec	++		814125	1					
ANR	814644	CompoundStatement		79:8:2352:2375	814125	3					
ANR	814645	IdentifierDeclStatement	byte * tdirent = tabbufptrs [ i ] ;	1861:8:70214:70243	814125	0	True				
ANR	814646	IdentifierDecl	* tdirent = tabbufptrs [ i ]		814125	0					
ANR	814647	IdentifierDeclType	byte *		814125	0					
ANR	814648	Identifier	tdirent		814125	1					
ANR	814649	AssignmentExpression	* tdirent = tabbufptrs [ i ]		814125	2		=			
ANR	814650	Identifier	tdirent		814125	0					
ANR	814651	ArrayIndexing	tabbufptrs [ i ]		814125	1					
ANR	814652	Identifier	tabbufptrs		814125	0					
ANR	814653	Identifier	i		814125	1					
ANR	814654	IdentifierDeclStatement	"uint32_t len , clen , pad ;"	1862:8:70253:70276	814125	1	True				
ANR	814655	IdentifierDecl	len		814125	0					
ANR	814656	IdentifierDeclType	uint32_t		814125	0					
ANR	814657	Identifier	len		814125	1					
ANR	814658	IdentifierDecl	clen		814125	1					
ANR	814659	IdentifierDeclType	uint32_t		814125	0					
ANR	814660	Identifier	clen		814125	1					
ANR	814661	IdentifierDecl	pad		814125	2					
ANR	814662	IdentifierDeclType	uint32_t		814125	0					
ANR	814663	Identifier	pad		814125	1					
ANR	814664	ExpressionStatement	len = u32 ( tdirent + WOFF_TABDIR_OLEN_OFFS )	1863:8:70286:70328	814125	2	True				
ANR	814665	AssignmentExpression	len = u32 ( tdirent + WOFF_TABDIR_OLEN_OFFS )		814125	0		=			
ANR	814666	Identifier	len		814125	0					
ANR	814667	CallExpression	u32 ( tdirent + WOFF_TABDIR_OLEN_OFFS )		814125	1					
ANR	814668	Callee	u32		814125	0					
ANR	814669	Identifier	u32		814125	0					
ANR	814670	ArgumentList	tdirent + WOFF_TABDIR_OLEN_OFFS		814125	1					
ANR	814671	Argument	tdirent + WOFF_TABDIR_OLEN_OFFS		814125	0					
ANR	814672	AdditiveExpression	tdirent + WOFF_TABDIR_OLEN_OFFS		814125	0		+			
ANR	814673	Identifier	tdirent		814125	0					
ANR	814674	Identifier	WOFF_TABDIR_OLEN_OFFS		814125	1					
ANR	814675	ExpressionStatement	clen = u32 ( tdirent + WOFF_TABDIR_CLEN_OFFS )	1864:8:70338:70381	814125	3	True				
ANR	814676	AssignmentExpression	clen = u32 ( tdirent + WOFF_TABDIR_CLEN_OFFS )		814125	0		=			
ANR	814677	Identifier	clen		814125	0					
ANR	814678	CallExpression	u32 ( tdirent + WOFF_TABDIR_CLEN_OFFS )		814125	1					
ANR	814679	Callee	u32		814125	0					
ANR	814680	Identifier	u32		814125	0					
ANR	814681	ArgumentList	tdirent + WOFF_TABDIR_CLEN_OFFS		814125	1					
ANR	814682	Argument	tdirent + WOFF_TABDIR_CLEN_OFFS		814125	0					
ANR	814683	AdditiveExpression	tdirent + WOFF_TABDIR_CLEN_OFFS		814125	0		+			
ANR	814684	Identifier	tdirent		814125	0					
ANR	814685	Identifier	WOFF_TABDIR_CLEN_OFFS		814125	1					
ANR	814686	ExpressionStatement	"memcpy ( tdir , tdirent , WOFF_TABDIR_FIELD_LEN )"	1869:8:70571:70615	814125	4	True				
ANR	814687	CallExpression	"memcpy ( tdir , tdirent , WOFF_TABDIR_FIELD_LEN )"		814125	0					
ANR	814688	Callee	memcpy		814125	0					
ANR	814689	Identifier	memcpy		814125	0					
ANR	814690	ArgumentList	tdir		814125	1					
ANR	814691	Argument	tdir		814125	0					
ANR	814692	Identifier	tdir		814125	0					
ANR	814693	Argument	tdirent		814125	1					
ANR	814694	Identifier	tdirent		814125	0					
ANR	814695	Argument	WOFF_TABDIR_FIELD_LEN		814125	2					
ANR	814696	Identifier	WOFF_TABDIR_FIELD_LEN		814125	0					
ANR	814697	ExpressionStatement	"memcpy ( tdir + SFNT_TABDIR_CSUM_OFFS , tdirent + WOFF_TABDIR_CSUM_OFFS , WOFF_TABDIR_FIELD_LEN )"	1870:8:70625:70717	814125	5	True				
ANR	814698	CallExpression	"memcpy ( tdir + SFNT_TABDIR_CSUM_OFFS , tdirent + WOFF_TABDIR_CSUM_OFFS , WOFF_TABDIR_FIELD_LEN )"		814125	0					
ANR	814699	Callee	memcpy		814125	0					
ANR	814700	Identifier	memcpy		814125	0					
ANR	814701	ArgumentList	tdir + SFNT_TABDIR_CSUM_OFFS		814125	1					
ANR	814702	Argument	tdir + SFNT_TABDIR_CSUM_OFFS		814125	0					
ANR	814703	AdditiveExpression	tdir + SFNT_TABDIR_CSUM_OFFS		814125	0		+			
ANR	814704	Identifier	tdir		814125	0					
ANR	814705	Identifier	SFNT_TABDIR_CSUM_OFFS		814125	1					
ANR	814706	Argument	tdirent + WOFF_TABDIR_CSUM_OFFS		814125	1					
ANR	814707	AdditiveExpression	tdirent + WOFF_TABDIR_CSUM_OFFS		814125	0		+			
ANR	814708	Identifier	tdirent		814125	0					
ANR	814709	Identifier	WOFF_TABDIR_CSUM_OFFS		814125	1					
ANR	814710	Argument	WOFF_TABDIR_FIELD_LEN		814125	2					
ANR	814711	Identifier	WOFF_TABDIR_FIELD_LEN		814125	0					
ANR	814712	ExpressionStatement	"memcpy ( tdir + SFNT_TABDIR_LEN_OFFS , tdirent + WOFF_TABDIR_OLEN_OFFS , WOFF_TABDIR_FIELD_LEN )"	1871:8:70727:70818	814125	6	True				
ANR	814713	CallExpression	"memcpy ( tdir + SFNT_TABDIR_LEN_OFFS , tdirent + WOFF_TABDIR_OLEN_OFFS , WOFF_TABDIR_FIELD_LEN )"		814125	0					
ANR	814714	Callee	memcpy		814125	0					
ANR	814715	Identifier	memcpy		814125	0					
ANR	814716	ArgumentList	tdir + SFNT_TABDIR_LEN_OFFS		814125	1					
ANR	814717	Argument	tdir + SFNT_TABDIR_LEN_OFFS		814125	0					
ANR	814718	AdditiveExpression	tdir + SFNT_TABDIR_LEN_OFFS		814125	0		+			
ANR	814719	Identifier	tdir		814125	0					
ANR	814720	Identifier	SFNT_TABDIR_LEN_OFFS		814125	1					
ANR	814721	Argument	tdirent + WOFF_TABDIR_OLEN_OFFS		814125	1					
ANR	814722	AdditiveExpression	tdirent + WOFF_TABDIR_OLEN_OFFS		814125	0		+			
ANR	814723	Identifier	tdirent		814125	0					
ANR	814724	Identifier	WOFF_TABDIR_OLEN_OFFS		814125	1					
ANR	814725	Argument	WOFF_TABDIR_FIELD_LEN		814125	2					
ANR	814726	Identifier	WOFF_TABDIR_FIELD_LEN		814125	0					
ANR	814727	ExpressionStatement	"put_u32_msb ( tdir , ( uint32_t ) ( obuf - outbuf ) , SFNT_TABDIR_OFFSET_OFFS )"	1872:8:70828:70897	814125	7	True				
ANR	814728	CallExpression	"put_u32_msb ( tdir , ( uint32_t ) ( obuf - outbuf ) , SFNT_TABDIR_OFFSET_OFFS )"		814125	0					
ANR	814729	Callee	put_u32_msb		814125	0					
ANR	814730	Identifier	put_u32_msb		814125	0					
ANR	814731	ArgumentList	tdir		814125	1					
ANR	814732	Argument	tdir		814125	0					
ANR	814733	Identifier	tdir		814125	0					
ANR	814734	Argument	( uint32_t ) ( obuf - outbuf )		814125	1					
ANR	814735	CastExpression	( uint32_t ) ( obuf - outbuf )		814125	0					
ANR	814736	CastTarget	uint32_t		814125	0					
ANR	814737	AdditiveExpression	obuf - outbuf		814125	1		-			
ANR	814738	Identifier	obuf		814125	0					
ANR	814739	Identifier	outbuf		814125	1					
ANR	814740	Argument	SFNT_TABDIR_OFFSET_OFFS		814125	2					
ANR	814741	Identifier	SFNT_TABDIR_OFFSET_OFFS		814125	0					
ANR	814742	ExpressionStatement	tdir += SFNT_TABDIR_ENT_LEN	1873:8:70907:70934	814125	8	True				
ANR	814743	AssignmentExpression	tdir += SFNT_TABDIR_ENT_LEN		814125	0		+=			
ANR	814744	Identifier	tdir		814125	0					
ANR	814745	Identifier	SFNT_TABDIR_ENT_LEN		814125	1					
ANR	814746	ExpressionStatement	"sseek ( s , u32 ( tdirent + WOFF_TABDIR_OFFSET_OFFS ) )"	1875:8:70991:71039	814125	9	True				
ANR	814747	CallExpression	"sseek ( s , u32 ( tdirent + WOFF_TABDIR_OFFSET_OFFS ) )"		814125	0					
ANR	814748	Callee	sseek		814125	0					
ANR	814749	Identifier	sseek		814125	0					
ANR	814750	ArgumentList	s		814125	1					
ANR	814751	Argument	s		814125	0					
ANR	814752	Identifier	s		814125	0					
ANR	814753	Argument	u32 ( tdirent + WOFF_TABDIR_OFFSET_OFFS )		814125	1					
ANR	814754	CallExpression	u32 ( tdirent + WOFF_TABDIR_OFFSET_OFFS )		814125	0					
ANR	814755	Callee	u32		814125	0					
ANR	814756	Identifier	u32		814125	0					
ANR	814757	ArgumentList	tdirent + WOFF_TABDIR_OFFSET_OFFS		814125	1					
ANR	814758	Argument	tdirent + WOFF_TABDIR_OFFSET_OFFS		814125	0					
ANR	814759	AdditiveExpression	tdirent + WOFF_TABDIR_OFFSET_OFFS		814125	0		+			
ANR	814760	Identifier	tdirent		814125	0					
ANR	814761	Identifier	WOFF_TABDIR_OFFSET_OFFS		814125	1					
ANR	814762	IfStatement	if ( clen != len )		814125	10					
ANR	814763	Condition	clen != len	1876:12:71053:71063	814125	0	True				
ANR	814764	EqualityExpression	clen != len		814125	0		!=			
ANR	814765	Identifier	clen		814125	0					
ANR	814766	Identifier	len		814125	1					
ANR	814767	ExpressionStatement	s = gs_woff_push_flate_filter ( s )	1877:12:71078:71110	814125	1	True				
ANR	814768	AssignmentExpression	s = gs_woff_push_flate_filter ( s )		814125	0		=			
ANR	814769	Identifier	s		814125	0					
ANR	814770	CallExpression	gs_woff_push_flate_filter ( s )		814125	1					
ANR	814771	Callee	gs_woff_push_flate_filter		814125	0					
ANR	814772	Identifier	gs_woff_push_flate_filter		814125	0					
ANR	814773	ArgumentList	s		814125	1					
ANR	814774	Argument	s		814125	0					
ANR	814775	Identifier	s		814125	0					
ANR	814776	ExpressionStatement	"code = sfread ( obuf , 1 , len , s )"	1878:8:71120:71150	814125	11	True				
ANR	814777	AssignmentExpression	"code = sfread ( obuf , 1 , len , s )"		814125	0		=			
ANR	814778	Identifier	code		814125	0					
ANR	814779	CallExpression	"sfread ( obuf , 1 , len , s )"		814125	1					
ANR	814780	Callee	sfread		814125	0					
ANR	814781	Identifier	sfread		814125	0					
ANR	814782	ArgumentList	obuf		814125	1					
ANR	814783	Argument	obuf		814125	0					
ANR	814784	Identifier	obuf		814125	0					
ANR	814785	Argument	1		814125	1					
ANR	814786	PrimaryExpression	1		814125	0					
ANR	814787	Argument	len		814125	2					
ANR	814788	Identifier	len		814125	0					
ANR	814789	Argument	s		814125	3					
ANR	814790	Identifier	s		814125	0					
ANR	814791	IfStatement	if ( clen != len )		814125	12					
ANR	814792	Condition	clen != len	1879:12:71164:71174	814125	0	True				
ANR	814793	EqualityExpression	clen != len		814125	0		!=			
ANR	814794	Identifier	clen		814125	0					
ANR	814795	Identifier	len		814125	1					
ANR	814796	ExpressionStatement	s = gs_woff_pop_flate_filter ( s )	1880:12:71189:71220	814125	1	True				
ANR	814797	AssignmentExpression	s = gs_woff_pop_flate_filter ( s )		814125	0		=			
ANR	814798	Identifier	s		814125	0					
ANR	814799	CallExpression	gs_woff_pop_flate_filter ( s )		814125	1					
ANR	814800	Callee	gs_woff_pop_flate_filter		814125	0					
ANR	814801	Identifier	gs_woff_pop_flate_filter		814125	0					
ANR	814802	ArgumentList	s		814125	1					
ANR	814803	Argument	s		814125	0					
ANR	814804	Identifier	s		814125	0					
ANR	814805	IfStatement	if ( code < 0 )		814125	13					
ANR	814806	Condition	code < 0	1881:12:71234:71241	814125	0	True				
ANR	814807	RelationalExpression	code < 0		814125	0		<			
ANR	814808	Identifier	code		814125	0					
ANR	814809	PrimaryExpression	0		814125	1					
ANR	814810	GotoStatement	goto done ;	1882:12:71256:71265	814125	1	True				
ANR	814811	Identifier	done		814125	0					
ANR	814812	ExpressionStatement	obuf += len	1883:8:71275:71286	814125	14	True				
ANR	814813	AssignmentExpression	obuf += len		814125	0		+=			
ANR	814814	Identifier	obuf		814125	0					
ANR	814815	Identifier	len		814125	1					
ANR	814816	ExpressionStatement	pad = ( ( len + 3 ) & ~3 ) - len	1887:8:71417:71445	814125	15	True				
ANR	814817	AssignmentExpression	pad = ( ( len + 3 ) & ~3 ) - len		814125	0		=			
ANR	814818	Identifier	pad		814125	0					
ANR	814819	AdditiveExpression	( ( len + 3 ) & ~3 ) - len		814125	1		-			
ANR	814820	BitAndExpression	( len + 3 ) & ~3		814125	0		&			
ANR	814821	AdditiveExpression	len + 3		814125	0		+			
ANR	814822	Identifier	len		814125	0					
ANR	814823	PrimaryExpression	3		814125	1					
ANR	814824	Identifier	~3		814125	1					
ANR	814825	Identifier	len		814125	1					
ANR	814826	WhileStatement	while ( pad > 0 )		814125	16					
ANR	814827	Condition	pad > 0	1888:15:71462:71468	814125	0	True				
ANR	814828	RelationalExpression	pad > 0		814125	0		>			
ANR	814829	Identifier	pad		814125	0					
ANR	814830	PrimaryExpression	0		814125	1					
ANR	814831	CompoundStatement		105:24:3570:3570	814125	1					
ANR	814832	ExpressionStatement	* obuf = ( byte ) 0	1889:12:71485:71500	814125	0	True				
ANR	814833	AssignmentExpression	* obuf = ( byte ) 0		814125	0		=			
ANR	814834	UnaryOperationExpression	* obuf		814125	0					
ANR	814835	UnaryOperator	*		814125	0					
ANR	814836	Identifier	obuf		814125	1					
ANR	814837	CastExpression	( byte ) 0		814125	1					
ANR	814838	CastTarget	byte		814125	0					
ANR	814839	PrimaryExpression	0		814125	1					
ANR	814840	ExpressionStatement	obuf ++	1890:12:71514:71520	814125	1	True				
ANR	814841	PostIncDecOperationExpression	obuf ++		814125	0					
ANR	814842	Identifier	obuf		814125	0					
ANR	814843	IncDec	++		814125	1					
ANR	814844	ExpressionStatement	pad --	1891:12:71534:71539	814125	2	True				
ANR	814845	PostIncDecOperationExpression	pad --		814125	0					
ANR	814846	Identifier	pad		814125	0					
ANR	814847	IncDec	--		814125	1					
ANR	814848	Label	done :	1894:0:71557:71561	814125	62	True				
ANR	814849	Identifier	done		814125	0					
ANR	814850	ExpressionStatement	"gs_free_object ( mem , tabbuf , ""gs_woff2sfnt(tabbuf)"" )"	1895:4:71567:71618	814125	63	True				
ANR	814851	CallExpression	"gs_free_object ( mem , tabbuf , ""gs_woff2sfnt(tabbuf)"" )"		814125	0					
ANR	814852	Callee	gs_free_object		814125	0					
ANR	814853	Identifier	gs_free_object		814125	0					
ANR	814854	ArgumentList	mem		814125	1					
ANR	814855	Argument	mem		814125	0					
ANR	814856	Identifier	mem		814125	0					
ANR	814857	Argument	tabbuf		814125	1					
ANR	814858	Identifier	tabbuf		814125	0					
ANR	814859	Argument	"""gs_woff2sfnt(tabbuf)"""		814125	2					
ANR	814860	PrimaryExpression	"""gs_woff2sfnt(tabbuf)"""		814125	0					
ANR	814861	ExpressionStatement	"gs_free_object ( mem , tabbufptrs , ""gs_woff2sfnt(tabbufptrs)"" )"	1896:4:71624:71683	814125	64	True				
ANR	814862	CallExpression	"gs_free_object ( mem , tabbufptrs , ""gs_woff2sfnt(tabbufptrs)"" )"		814125	0					
ANR	814863	Callee	gs_free_object		814125	0					
ANR	814864	Identifier	gs_free_object		814125	0					
ANR	814865	ArgumentList	mem		814125	1					
ANR	814866	Argument	mem		814125	0					
ANR	814867	Identifier	mem		814125	0					
ANR	814868	Argument	tabbufptrs		814125	1					
ANR	814869	Identifier	tabbufptrs		814125	0					
ANR	814870	Argument	"""gs_woff2sfnt(tabbufptrs)"""		814125	2					
ANR	814871	PrimaryExpression	"""gs_woff2sfnt(tabbufptrs)"""		814125	0					
ANR	814872	ReturnStatement	return code ;	1897:4:71689:71700	814125	65	True				
ANR	814873	Identifier	code		814125	0					
ANR	814874	ReturnType	static int		814125	1					
ANR	814875	Identifier	gs_woff2sfnt		814125	2					
ANR	814876	ParameterList	"gs_memory_t * mem , stream * s , byte * outbuf , int * outbuflen"		814125	3					
ANR	814877	Parameter	gs_memory_t * mem	1783:13:67841:67856	814125	0	True				
ANR	814878	ParameterType	gs_memory_t *		814125	0					
ANR	814879	Identifier	mem		814125	1					
ANR	814880	Parameter	stream * s	1783:31:67859:67867	814125	1	True				
ANR	814881	ParameterType	stream *		814125	0					
ANR	814882	Identifier	s		814125	1					
ANR	814883	Parameter	byte * outbuf	1783:42:67870:67881	814125	2	True				
ANR	814884	ParameterType	byte *		814125	0					
ANR	814885	Identifier	outbuf		814125	1					
ANR	814886	Parameter	int * outbuflen	1783:56:67884:67897	814125	3	True				
ANR	814887	ParameterType	int *		814125	0					
ANR	814888	Identifier	outbuflen		814125	1					
ANR	814889	CFGEntryNode	ENTRY		814125		True				
ANR	814890	CFGExitNode	EXIT		814125		True				
ANR	814891	Symbol	WOFF_TABDIR_ENT_LEN		814125						
ANR	814892	Symbol	* tabbufptrs		814125						
ANR	814893	Symbol	tabbufptrs		814125						
ANR	814894	Symbol	WOFF_TABDIR_FIELD_LEN		814125						
ANR	814895	Symbol	WOFF_TABDIR_CSUM_OFFS		814125						
ANR	814896	Symbol	pad		814125						
ANR	814897	Symbol	memcmp		814125						
ANR	814898	Symbol	len		814125						
ANR	814899	Symbol	u32		814125						
ANR	814900	Symbol	obuf		814125						
ANR	814901	Symbol	WOFFHDR_SFNT_FLAVOR_OFFS		814125						
ANR	814902	Symbol	WOFF_TABDIR_CLEN_OFFS		814125						
ANR	814903	Symbol	sfntlen		814125						
ANR	814904	Symbol	NULL		814125						
ANR	814905	Symbol	SFNT_TABDIR_LEN_OFFS		814125						
ANR	814906	Symbol	WOFF_TABDIR_OFFSET_OFFS		814125						
ANR	814907	Symbol	es		814125						
ANR	814908	Symbol	stell		814125						
ANR	814909	Symbol	tdir		814125						
ANR	814910	Symbol	gs_woff_pop_flate_filter		814125						
ANR	814911	Symbol	ntables		814125						
ANR	814912	Symbol	SFNT_TABDIR_CSUM_OFFS		814125						
ANR	814913	Symbol	U16		814125						
ANR	814914	Symbol	gs_woff_tabdir_compare		814125						
ANR	814915	Symbol	rs		814125						
ANR	814916	Symbol	code		814125						
ANR	814917	Symbol	tdirent		814125						
ANR	814918	Symbol	tabbuf		814125						
ANR	814919	Symbol	WOFFHDR_SFNT_LEN_OFFS		814125						
ANR	814920	Symbol	WOFFHDR_LEN		814125						
ANR	814921	Symbol	mem		814125						
ANR	814922	Symbol	outbuflen		814125						
ANR	814923	Symbol	s -> bsize		814125						
ANR	814924	Symbol	gs_error_invalidfont		814125						
ANR	814925	Symbol	WOFFHDR_SFNT_NUMTABS_OFFS		814125						
ANR	814926	Symbol	sr		814125						
ANR	814927	Symbol	sseekable		814125						
ANR	814928	Symbol	woffhdr		814125						
ANR	814929	Symbol	gs_alloc_bytes		814125						
ANR	814930	Symbol	SFNT_TABDIR_ENT_LEN		814125						
ANR	814931	Symbol	start		814125						
ANR	814932	Symbol	i		814125						
ANR	814933	Symbol	gs_error_ioerror		814125						
ANR	814934	Symbol	gs_woff_push_flate_filter		814125						
ANR	814935	Symbol	* outbuflen		814125						
ANR	814936	Symbol	SFNT_TABDIR_OFFSET_OFFS		814125						
ANR	814937	Symbol	gs_error_VMerror		814125						
ANR	814938	Symbol	gs_note_error		814125						
ANR	814939	Symbol	s		814125						
ANR	814940	Symbol	* i		814125						
ANR	814941	Symbol	outbuf		814125						
ANR	814942	Symbol	WOFF_TABDIR_OLEN_OFFS		814125						
ANR	814943	Symbol	~3		814125						
ANR	814944	Symbol	* obuf		814125						
ANR	814945	Symbol	sfread		814125						
ANR	814946	Symbol	clen		814125						
ANR	814947	Symbol	* s		814125						
ANR	814948	Function	gs_woff2sfnt_stream	1900:0:71705:71842							
ANR	814949	FunctionDef	"gs_woff2sfnt_stream (gs_memory_t * mem , stream * s , byte * outbuf , int * outbuflen)"		814948	0					
ANR	814950	CompoundStatement		1902:0:71788:71842	814948	0					
ANR	814951	ReturnStatement	"return gs_woff2sfnt ( mem , s , outbuf , outbuflen ) ;"	1903:4:71794:71840	814948	0	True				
ANR	814952	CallExpression	"gs_woff2sfnt ( mem , s , outbuf , outbuflen )"		814948	0					
ANR	814953	Callee	gs_woff2sfnt		814948	0					
ANR	814954	Identifier	gs_woff2sfnt		814948	0					
ANR	814955	ArgumentList	mem		814948	1					
ANR	814956	Argument	mem		814948	0					
ANR	814957	Identifier	mem		814948	0					
ANR	814958	Argument	s		814948	1					
ANR	814959	Identifier	s		814948	0					
ANR	814960	Argument	outbuf		814948	2					
ANR	814961	Identifier	outbuf		814948	0					
ANR	814962	Argument	outbuflen		814948	3					
ANR	814963	Identifier	outbuflen		814948	0					
ANR	814964	ReturnType	int		814948	1					
ANR	814965	Identifier	gs_woff2sfnt_stream		814948	2					
ANR	814966	ParameterList	"gs_memory_t * mem , stream * s , byte * outbuf , int * outbuflen"		814948	3					
ANR	814967	Parameter	gs_memory_t * mem	1901:20:71729:71744	814948	0	True				
ANR	814968	ParameterType	gs_memory_t *		814948	0					
ANR	814969	Identifier	mem		814948	1					
ANR	814970	Parameter	stream * s	1901:38:71747:71755	814948	1	True				
ANR	814971	ParameterType	stream *		814948	0					
ANR	814972	Identifier	s		814948	1					
ANR	814973	Parameter	byte * outbuf	1901:49:71758:71769	814948	2	True				
ANR	814974	ParameterType	byte *		814948	0					
ANR	814975	Identifier	outbuf		814948	1					
ANR	814976	Parameter	int * outbuflen	1901:63:71772:71785	814948	3	True				
ANR	814977	ParameterType	int *		814948	0					
ANR	814978	Identifier	outbuflen		814948	1					
ANR	814979	CFGEntryNode	ENTRY		814948		True				
ANR	814980	CFGExitNode	EXIT		814948		True				
ANR	814981	Symbol	s		814948						
ANR	814982	Symbol	mem		814948						
ANR	814983	Symbol	outbuflen		814948						
ANR	814984	Symbol	outbuf		814948						
ANR	814985	Symbol	gs_woff2sfnt		814948						
ANR	814986	Function	gs_woff2sfnt_buffer	1906:0:71845:72359							
ANR	814987	FunctionDef	"gs_woff2sfnt_buffer (gs_memory_t * mem , byte * inbuf , int inbuflen , byte * outbuf , int * outbuflen)"		814986	0					
ANR	814988	CompoundStatement		1908:0:71944:72359	814986	0					
ANR	814989	IdentifierDeclStatement	stream * sstrm ;	1909:4:71950:71963	814986	0	True				
ANR	814990	IdentifierDecl	* sstrm		814986	0					
ANR	814991	IdentifierDeclType	stream *		814986	0					
ANR	814992	Identifier	sstrm		814986	1					
ANR	814993	IdentifierDeclStatement	int code = 0 ;	1910:4:71969:71981	814986	1	True				
ANR	814994	IdentifierDecl	code = 0		814986	0					
ANR	814995	IdentifierDeclType	int		814986	0					
ANR	814996	Identifier	code		814986	1					
ANR	814997	AssignmentExpression	code = 0		814986	2		=			
ANR	814998	Identifier	code		814986	0					
ANR	814999	PrimaryExpression	0		814986	1					
ANR	815000	ExpressionStatement	"sstrm = file_alloc_stream ( mem , ""gs_woff2sfnt_buffer(buf stream)"" )"	1911:4:71987:72052	814986	2	True				
ANR	815001	AssignmentExpression	"sstrm = file_alloc_stream ( mem , ""gs_woff2sfnt_buffer(buf stream)"" )"		814986	0		=			
ANR	815002	Identifier	sstrm		814986	0					
ANR	815003	CallExpression	"file_alloc_stream ( mem , ""gs_woff2sfnt_buffer(buf stream)"" )"		814986	1					
ANR	815004	Callee	file_alloc_stream		814986	0					
ANR	815005	Identifier	file_alloc_stream		814986	0					
ANR	815006	ArgumentList	mem		814986	1					
ANR	815007	Argument	mem		814986	0					
ANR	815008	Identifier	mem		814986	0					
ANR	815009	Argument	"""gs_woff2sfnt_buffer(buf stream)"""		814986	1					
ANR	815010	PrimaryExpression	"""gs_woff2sfnt_buffer(buf stream)"""		814986	0					
ANR	815011	IfStatement	if ( sstrm )		814986	3					
ANR	815012	Condition	sstrm	1912:8:72062:72066	814986	0	True				
ANR	815013	Identifier	sstrm		814986	0					
ANR	815014	CompoundStatement		5:15:124:124	814986	1					
ANR	815015	ExpressionStatement	"sread_string ( sstrm , inbuf , inbuflen )"	1913:8:72079:72115	814986	0	True				
ANR	815016	CallExpression	"sread_string ( sstrm , inbuf , inbuflen )"		814986	0					
ANR	815017	Callee	sread_string		814986	0					
ANR	815018	Identifier	sread_string		814986	0					
ANR	815019	ArgumentList	sstrm		814986	1					
ANR	815020	Argument	sstrm		814986	0					
ANR	815021	Identifier	sstrm		814986	0					
ANR	815022	Argument	inbuf		814986	1					
ANR	815023	Identifier	inbuf		814986	0					
ANR	815024	Argument	inbuflen		814986	2					
ANR	815025	Identifier	inbuflen		814986	0					
ANR	815026	ExpressionStatement	"code = gs_woff2sfnt ( mem , sstrm , outbuf , outbuflen )"	1914:8:72125:72175	814986	1	True				
ANR	815027	AssignmentExpression	"code = gs_woff2sfnt ( mem , sstrm , outbuf , outbuflen )"		814986	0		=			
ANR	815028	Identifier	code		814986	0					
ANR	815029	CallExpression	"gs_woff2sfnt ( mem , sstrm , outbuf , outbuflen )"		814986	1					
ANR	815030	Callee	gs_woff2sfnt		814986	0					
ANR	815031	Identifier	gs_woff2sfnt		814986	0					
ANR	815032	ArgumentList	mem		814986	1					
ANR	815033	Argument	mem		814986	0					
ANR	815034	Identifier	mem		814986	0					
ANR	815035	Argument	sstrm		814986	1					
ANR	815036	Identifier	sstrm		814986	0					
ANR	815037	Argument	outbuf		814986	2					
ANR	815038	Identifier	outbuf		814986	0					
ANR	815039	Argument	outbuflen		814986	3					
ANR	815040	Identifier	outbuflen		814986	0					
ANR	815041	ExpressionStatement	sclose ( sstrm )	1915:8:72185:72198	814986	2	True				
ANR	815042	CallExpression	sclose ( sstrm )		814986	0					
ANR	815043	Callee	sclose		814986	0					
ANR	815044	Identifier	sclose		814986	0					
ANR	815045	ArgumentList	sstrm		814986	1					
ANR	815046	Argument	sstrm		814986	0					
ANR	815047	Identifier	sstrm		814986	0					
ANR	815048	ExpressionStatement	"gs_free_object ( mem , sstrm , ""gs_woff2sfnt_buffer(buf stream)"" )"	1916:8:72208:72269	814986	3	True				
ANR	815049	CallExpression	"gs_free_object ( mem , sstrm , ""gs_woff2sfnt_buffer(buf stream)"" )"		814986	0					
ANR	815050	Callee	gs_free_object		814986	0					
ANR	815051	Identifier	gs_free_object		814986	0					
ANR	815052	ArgumentList	mem		814986	1					
ANR	815053	Argument	mem		814986	0					
ANR	815054	Identifier	mem		814986	0					
ANR	815055	Argument	sstrm		814986	1					
ANR	815056	Identifier	sstrm		814986	0					
ANR	815057	Argument	"""gs_woff2sfnt_buffer(buf stream)"""		814986	2					
ANR	815058	PrimaryExpression	"""gs_woff2sfnt_buffer(buf stream)"""		814986	0					
ANR	815059	ElseStatement	else		814986	0					
ANR	815060	CompoundStatement		11:9:341:341	814986	0					
ANR	815061	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1919:8:72296:72334	814986	0	True				
ANR	815062	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		814986	0		=			
ANR	815063	Identifier	code		814986	0					
ANR	815064	CallExpression	gs_note_error ( gs_error_VMerror )		814986	1					
ANR	815065	Callee	gs_note_error		814986	0					
ANR	815066	Identifier	gs_note_error		814986	0					
ANR	815067	ArgumentList	gs_error_VMerror		814986	1					
ANR	815068	Argument	gs_error_VMerror		814986	0					
ANR	815069	Identifier	gs_error_VMerror		814986	0					
ANR	815070	ReturnStatement	return code ;	1921:4:72346:72357	814986	4	True				
ANR	815071	Identifier	code		814986	0					
ANR	815072	ReturnType	int		814986	1					
ANR	815073	Identifier	gs_woff2sfnt_buffer		814986	2					
ANR	815074	ParameterList	"gs_memory_t * mem , byte * inbuf , int inbuflen , byte * outbuf , int * outbuflen"		814986	3					
ANR	815075	Parameter	gs_memory_t * mem	1907:20:71869:71884	814986	0	True				
ANR	815076	ParameterType	gs_memory_t *		814986	0					
ANR	815077	Identifier	mem		814986	1					
ANR	815078	Parameter	byte * inbuf	1907:38:71887:71897	814986	1	True				
ANR	815079	ParameterType	byte *		814986	0					
ANR	815080	Identifier	inbuf		814986	1					
ANR	815081	Parameter	int inbuflen	1907:51:71900:71911	814986	2	True				
ANR	815082	ParameterType	int		814986	0					
ANR	815083	Identifier	inbuflen		814986	1					
ANR	815084	Parameter	byte * outbuf	1907:65:71914:71925	814986	3	True				
ANR	815085	ParameterType	byte *		814986	0					
ANR	815086	Identifier	outbuf		814986	1					
ANR	815087	Parameter	int * outbuflen	1907:79:71928:71941	814986	4	True				
ANR	815088	ParameterType	int *		814986	0					
ANR	815089	Identifier	outbuflen		814986	1					
ANR	815090	CFGEntryNode	ENTRY		814986		True				
ANR	815091	CFGExitNode	EXIT		814986		True				
ANR	815092	Symbol	gs_error_VMerror		814986						
ANR	815093	Symbol	file_alloc_stream		814986						
ANR	815094	Symbol	gs_note_error		814986						
ANR	815095	Symbol	inbuflen		814986						
ANR	815096	Symbol	code		814986						
ANR	815097	Symbol	mem		814986						
ANR	815098	Symbol	outbuflen		814986						
ANR	815099	Symbol	inbuf		814986						
ANR	815100	Symbol	outbuf		814986						
ANR	815101	Symbol	sstrm		814986						
ANR	815102	Symbol	gs_woff2sfnt		814986						
