command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	975054	File	data/converged/CVE-2018-16863_ghostpdl/base_gxcmap.c								
ANR	975055	Function	gx_default_encode_color	52:0:1392:2126							
ANR	975056	FunctionDef	"gx_default_encode_color (gx_device * dev , const gx_color_value cv [ ])"		975055	0					
ANR	975057	CompoundStatement		56:0:1491:2126	975055	0					
ANR	975058	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	57:4:1497:1554	975055	0	True				
ANR	975059	IdentifierDecl	ncomps = dev -> color_info . num_components		975055	0					
ANR	975060	IdentifierDeclType	uchar		975055	0					
ANR	975061	Identifier	ncomps		975055	1					
ANR	975062	AssignmentExpression	ncomps = dev -> color_info . num_components		975055	2		=			
ANR	975063	Identifier	ncomps		975055	0					
ANR	975064	MemberAccess	dev -> color_info . num_components		975055	1					
ANR	975065	PtrMemberAccess	dev -> color_info		975055	0					
ANR	975066	Identifier	dev		975055	0					
ANR	975067	Identifier	color_info		975055	1					
ANR	975068	Identifier	num_components		975055	1					
ANR	975069	IdentifierDeclStatement	uchar i ;	58:4:1560:1579	975055	1	True				
ANR	975070	IdentifierDecl	i		975055	0					
ANR	975071	IdentifierDeclType	uchar		975055	0					
ANR	975072	Identifier	i		975055	1					
ANR	975073	IdentifierDeclStatement	const byte * comp_shift = dev -> color_info . comp_shift ;	59:4:1585:1640	975055	2	True				
ANR	975074	IdentifierDecl	* comp_shift = dev -> color_info . comp_shift		975055	0					
ANR	975075	IdentifierDeclType	const byte *		975055	0					
ANR	975076	Identifier	comp_shift		975055	1					
ANR	975077	AssignmentExpression	* comp_shift = dev -> color_info . comp_shift		975055	2		=			
ANR	975078	Identifier	comp_shift		975055	0					
ANR	975079	MemberAccess	dev -> color_info . comp_shift		975055	1					
ANR	975080	PtrMemberAccess	dev -> color_info		975055	0					
ANR	975081	Identifier	dev		975055	0					
ANR	975082	Identifier	color_info		975055	1					
ANR	975083	Identifier	comp_shift		975055	1					
ANR	975084	IdentifierDeclStatement	const byte * comp_bits = dev -> color_info . comp_bits ;	60:4:1646:1699	975055	3	True				
ANR	975085	IdentifierDecl	* comp_bits = dev -> color_info . comp_bits		975055	0					
ANR	975086	IdentifierDeclType	const byte *		975055	0					
ANR	975087	Identifier	comp_bits		975055	1					
ANR	975088	AssignmentExpression	* comp_bits = dev -> color_info . comp_bits		975055	2		=			
ANR	975089	Identifier	comp_bits		975055	0					
ANR	975090	MemberAccess	dev -> color_info . comp_bits		975055	1					
ANR	975091	PtrMemberAccess	dev -> color_info		975055	0					
ANR	975092	Identifier	dev		975055	0					
ANR	975093	Identifier	color_info		975055	1					
ANR	975094	Identifier	comp_bits		975055	1					
ANR	975095	IdentifierDeclStatement	gx_color_index color = 0 ;	61:4:1705:1730	975055	4	True				
ANR	975096	IdentifierDecl	color = 0		975055	0					
ANR	975097	IdentifierDeclType	gx_color_index		975055	0					
ANR	975098	Identifier	color		975055	1					
ANR	975099	AssignmentExpression	color = 0		975055	2		=			
ANR	975100	Identifier	color		975055	0					
ANR	975101	PrimaryExpression	0		975055	1					
ANR	975102	IfStatement	if ( ! colors_are_separable_and_linear ( & dev -> color_info ) )		975055	5					
ANR	975103	Condition	! colors_are_separable_and_linear ( & dev -> color_info )	64:8:1754:1803	975055	0	True				
ANR	975104	UnaryOperationExpression	! colors_are_separable_and_linear ( & dev -> color_info )		975055	0					
ANR	975105	UnaryOperator	!		975055	0					
ANR	975106	CallExpression	colors_are_separable_and_linear ( & dev -> color_info )		975055	1					
ANR	975107	Callee	colors_are_separable_and_linear		975055	0					
ANR	975108	Identifier	colors_are_separable_and_linear		975055	0					
ANR	975109	ArgumentList	& dev -> color_info		975055	1					
ANR	975110	Argument	& dev -> color_info		975055	0					
ANR	975111	UnaryOperationExpression	& dev -> color_info		975055	0					
ANR	975112	UnaryOperator	&		975055	0					
ANR	975113	PtrMemberAccess	dev -> color_info		975055	1					
ANR	975114	Identifier	dev		975055	0					
ANR	975115	Identifier	color_info		975055	1					
ANR	975116	CompoundStatement		9:60:314:314	975055	1					
ANR	975117	ExpressionStatement	"dmprintf ( dev -> memory , ""gx_default_encode_color() requires separable and linear\\n"" )"	65:8:1816:1899	975055	0	True				
ANR	975118	CallExpression	"dmprintf ( dev -> memory , ""gx_default_encode_color() requires separable and linear\\n"" )"		975055	0					
ANR	975119	Callee	dmprintf		975055	0					
ANR	975120	Identifier	dmprintf		975055	0					
ANR	975121	ArgumentList	dev -> memory		975055	1					
ANR	975122	Argument	dev -> memory		975055	0					
ANR	975123	PtrMemberAccess	dev -> memory		975055	0					
ANR	975124	Identifier	dev		975055	0					
ANR	975125	Identifier	memory		975055	1					
ANR	975126	Argument	"""gx_default_encode_color() requires separable and linear\\n"""		975055	1					
ANR	975127	PrimaryExpression	"""gx_default_encode_color() requires separable and linear\\n"""		975055	0					
ANR	975128	ReturnStatement	return gx_no_color_index ;	66:8:1909:1933	975055	1	True				
ANR	975129	Identifier	gx_no_color_index		975055	0					
ANR	975130	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		975055	6					
ANR	975131	ForInit	i = 0 ;	69:9:1957:1962	975055	0	True				
ANR	975132	AssignmentExpression	i = 0		975055	0		=			
ANR	975133	Identifier	i		975055	0					
ANR	975134	PrimaryExpression	0		975055	1					
ANR	975135	Condition	i < ncomps	69:16:1964:1973	975055	1	True				
ANR	975136	RelationalExpression	i < ncomps		975055	0		<			
ANR	975137	Identifier	i		975055	0					
ANR	975138	Identifier	ncomps		975055	1					
ANR	975139	PostIncDecOperationExpression	i ++	69:28:1976:1978	975055	2	True				
ANR	975140	Identifier	i		975055	0					
ANR	975141	IncDec	++		975055	1					
ANR	975142	CompoundStatement		14:33:489:489	975055	3					
ANR	975143	ExpressionStatement	COLROUND_VARS	70:8:1991:2004	975055	0	True				
ANR	975144	Identifier	COLROUND_VARS		975055	0					
ANR	975145	ExpressionStatement	COLROUND_SETUP ( comp_bits [ i ] )	71:8:2014:2042	975055	1	True				
ANR	975146	CallExpression	COLROUND_SETUP ( comp_bits [ i ] )		975055	0					
ANR	975147	Callee	COLROUND_SETUP		975055	0					
ANR	975148	Identifier	COLROUND_SETUP		975055	0					
ANR	975149	ArgumentList	comp_bits [ i ]		975055	1					
ANR	975150	Argument	comp_bits [ i ]		975055	0					
ANR	975151	ArrayIndexing	comp_bits [ i ]		975055	0					
ANR	975152	Identifier	comp_bits		975055	0					
ANR	975153	Identifier	i		975055	1					
ANR	975154	ExpressionStatement	color |= COLROUND_ROUND ( cv [ i ] ) << comp_shift [ i ]	72:8:2052:2099	975055	2	True				
ANR	975155	AssignmentExpression	color |= COLROUND_ROUND ( cv [ i ] ) << comp_shift [ i ]		975055	0		|=			
ANR	975156	Identifier	color		975055	0					
ANR	975157	ShiftExpression	COLROUND_ROUND ( cv [ i ] ) << comp_shift [ i ]		975055	1		<<			
ANR	975158	CallExpression	COLROUND_ROUND ( cv [ i ] )		975055	0					
ANR	975159	Callee	COLROUND_ROUND		975055	0					
ANR	975160	Identifier	COLROUND_ROUND		975055	0					
ANR	975161	ArgumentList	cv [ i ]		975055	1					
ANR	975162	Argument	cv [ i ]		975055	0					
ANR	975163	ArrayIndexing	cv [ i ]		975055	0					
ANR	975164	Identifier	cv		975055	0					
ANR	975165	Identifier	i		975055	1					
ANR	975166	ArrayIndexing	comp_shift [ i ]		975055	1					
ANR	975167	Identifier	comp_shift		975055	0					
ANR	975168	Identifier	i		975055	1					
ANR	975169	ReturnStatement	return color ;	75:4:2112:2124	975055	7	True				
ANR	975170	Identifier	color		975055	0					
ANR	975171	ReturnType	RELOC_PTRS_END gx_color_index		975055	1					
ANR	975172	Identifier	gx_default_encode_color		975055	2					
ANR	975173	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		975055	3					
ANR	975174	Parameter	gx_device * dev	55:24:1447:1461	975055	0	True				
ANR	975175	ParameterType	gx_device *		975055	0					
ANR	975176	Identifier	dev		975055	1					
ANR	975177	Parameter	const gx_color_value cv [ ]	55:41:1464:1488	975055	1	True				
ANR	975178	ParameterType	const gx_color_value [ ]		975055	0					
ANR	975179	Identifier	cv		975055	1					
ANR	975180	CFGEntryNode	ENTRY		975055		True				
ANR	975181	CFGExitNode	EXIT		975055		True				
ANR	975182	Symbol	* dev		975055						
ANR	975183	Symbol	* comp_shift		975055						
ANR	975184	Symbol	dev -> color_info . num_components		975055						
ANR	975185	Symbol	color		975055						
ANR	975186	Symbol	i		975055						
ANR	975187	Symbol	ncomps		975055						
ANR	975188	Symbol	dev -> color_info		975055						
ANR	975189	Symbol	colors_are_separable_and_linear		975055						
ANR	975190	Symbol	dev -> memory		975055						
ANR	975191	Symbol	cv		975055						
ANR	975192	Symbol	gx_no_color_index		975055						
ANR	975193	Symbol	* i		975055						
ANR	975194	Symbol	dev		975055						
ANR	975195	Symbol	dev -> color_info . comp_bits		975055						
ANR	975196	Symbol	COLROUND_ROUND		975055						
ANR	975197	Symbol	* cv		975055						
ANR	975198	Symbol	dev -> color_info . comp_shift		975055						
ANR	975199	Symbol	* comp_bits		975055						
ANR	975200	Symbol	comp_shift		975055						
ANR	975201	Symbol	& dev -> color_info		975055						
ANR	975202	Symbol	comp_bits		975055						
ANR	975203	Function	gx_default_decode_color	82:0:2260:3746							
ANR	975204	FunctionDef	"gx_default_decode_color (gx_device * dev , gx_color_index color , gx_color_value cv [ ])"		975203	0					
ANR	975205	CompoundStatement		84:0:2348:3746	975203	0					
ANR	975206	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	85:4:2354:2417	975203	0	True				
ANR	975207	IdentifierDecl	ncomps = dev -> color_info . num_components		975203	0					
ANR	975208	IdentifierDeclType	uchar		975203	0					
ANR	975209	Identifier	ncomps		975203	1					
ANR	975210	AssignmentExpression	ncomps = dev -> color_info . num_components		975203	2		=			
ANR	975211	Identifier	ncomps		975203	0					
ANR	975212	MemberAccess	dev -> color_info . num_components		975203	1					
ANR	975213	PtrMemberAccess	dev -> color_info		975203	0					
ANR	975214	Identifier	dev		975203	0					
ANR	975215	Identifier	color_info		975203	1					
ANR	975216	Identifier	num_components		975203	1					
ANR	975217	IdentifierDeclStatement	uchar i ;	86:4:2423:2448	975203	1	True				
ANR	975218	IdentifierDecl	i		975203	0					
ANR	975219	IdentifierDeclType	uchar		975203	0					
ANR	975220	Identifier	i		975203	1					
ANR	975221	IdentifierDeclStatement	const byte * comp_shift = dev -> color_info . comp_shift ;	87:4:2454:2517	975203	2	True				
ANR	975222	IdentifierDecl	* comp_shift = dev -> color_info . comp_shift		975203	0					
ANR	975223	IdentifierDeclType	const byte *		975203	0					
ANR	975224	Identifier	comp_shift		975203	1					
ANR	975225	AssignmentExpression	* comp_shift = dev -> color_info . comp_shift		975203	2		=			
ANR	975226	Identifier	comp_shift		975203	0					
ANR	975227	MemberAccess	dev -> color_info . comp_shift		975203	1					
ANR	975228	PtrMemberAccess	dev -> color_info		975203	0					
ANR	975229	Identifier	dev		975203	0					
ANR	975230	Identifier	color_info		975203	1					
ANR	975231	Identifier	comp_shift		975203	1					
ANR	975232	IdentifierDeclStatement	const byte * comp_bits = dev -> color_info . comp_bits ;	88:4:2523:2584	975203	3	True				
ANR	975233	IdentifierDecl	* comp_bits = dev -> color_info . comp_bits		975203	0					
ANR	975234	IdentifierDeclType	const byte *		975203	0					
ANR	975235	Identifier	comp_bits		975203	1					
ANR	975236	AssignmentExpression	* comp_bits = dev -> color_info . comp_bits		975203	2		=			
ANR	975237	Identifier	comp_bits		975203	0					
ANR	975238	MemberAccess	dev -> color_info . comp_bits		975203	1					
ANR	975239	PtrMemberAccess	dev -> color_info		975203	0					
ANR	975240	Identifier	dev		975203	0					
ANR	975241	Identifier	color_info		975203	1					
ANR	975242	Identifier	comp_bits		975203	1					
ANR	975243	IdentifierDeclStatement	const gx_color_index * comp_mask = dev -> color_info . comp_mask ;	89:4:2590:2651	975203	4	True				
ANR	975244	IdentifierDecl	* comp_mask = dev -> color_info . comp_mask		975203	0					
ANR	975245	IdentifierDeclType	const gx_color_index *		975203	0					
ANR	975246	Identifier	comp_mask		975203	1					
ANR	975247	AssignmentExpression	* comp_mask = dev -> color_info . comp_mask		975203	2		=			
ANR	975248	Identifier	comp_mask		975203	0					
ANR	975249	MemberAccess	dev -> color_info . comp_mask		975203	1					
ANR	975250	PtrMemberAccess	dev -> color_info		975203	0					
ANR	975251	Identifier	dev		975203	0					
ANR	975252	Identifier	color_info		975203	1					
ANR	975253	Identifier	comp_mask		975203	1					
ANR	975254	IdentifierDeclStatement	"uint shift , ivalue , nbits , scale ;"	90:4:2657:2689	975203	5	True				
ANR	975255	IdentifierDecl	shift		975203	0					
ANR	975256	IdentifierDeclType	uint		975203	0					
ANR	975257	Identifier	shift		975203	1					
ANR	975258	IdentifierDecl	ivalue		975203	1					
ANR	975259	IdentifierDeclType	uint		975203	0					
ANR	975260	Identifier	ivalue		975203	1					
ANR	975261	IdentifierDecl	nbits		975203	2					
ANR	975262	IdentifierDeclType	uint		975203	0					
ANR	975263	Identifier	nbits		975203	1					
ANR	975264	IdentifierDecl	scale		975203	3					
ANR	975265	IdentifierDeclType	uint		975203	0					
ANR	975266	Identifier	scale		975203	1					
ANR	975267	IfStatement	if ( ! colors_are_separable_and_linear ( & dev -> color_info ) )		975203	6					
ANR	975268	Condition	! colors_are_separable_and_linear ( & dev -> color_info )	93:8:2713:2762	975203	0	True				
ANR	975269	UnaryOperationExpression	! colors_are_separable_and_linear ( & dev -> color_info )		975203	0					
ANR	975270	UnaryOperator	!		975203	0					
ANR	975271	CallExpression	colors_are_separable_and_linear ( & dev -> color_info )		975203	1					
ANR	975272	Callee	colors_are_separable_and_linear		975203	0					
ANR	975273	Identifier	colors_are_separable_and_linear		975203	0					
ANR	975274	ArgumentList	& dev -> color_info		975203	1					
ANR	975275	Argument	& dev -> color_info		975203	0					
ANR	975276	UnaryOperationExpression	& dev -> color_info		975203	0					
ANR	975277	UnaryOperator	&		975203	0					
ANR	975278	PtrMemberAccess	dev -> color_info		975203	1					
ANR	975279	Identifier	dev		975203	0					
ANR	975280	Identifier	color_info		975203	1					
ANR	975281	CompoundStatement		10:60:416:416	975203	1					
ANR	975282	ExpressionStatement	"dmprintf ( dev -> memory , ""gx_default_decode_color() requires separable and linear\\n"" )"	94:8:2775:2858	975203	0	True				
ANR	975283	CallExpression	"dmprintf ( dev -> memory , ""gx_default_decode_color() requires separable and linear\\n"" )"		975203	0					
ANR	975284	Callee	dmprintf		975203	0					
ANR	975285	Identifier	dmprintf		975203	0					
ANR	975286	ArgumentList	dev -> memory		975203	1					
ANR	975287	Argument	dev -> memory		975203	0					
ANR	975288	PtrMemberAccess	dev -> memory		975203	0					
ANR	975289	Identifier	dev		975203	0					
ANR	975290	Identifier	memory		975203	1					
ANR	975291	Argument	"""gx_default_decode_color() requires separable and linear\\n"""		975203	1					
ANR	975292	PrimaryExpression	"""gx_default_decode_color() requires separable and linear\\n"""		975203	0					
ANR	975293	ExpressionStatement	return_error ( gs_error_rangecheck )	95:8:2868:2901	975203	1	True				
ANR	975294	CallExpression	return_error ( gs_error_rangecheck )		975203	0					
ANR	975295	Callee	return_error		975203	0					
ANR	975296	Identifier	return_error		975203	0					
ANR	975297	ArgumentList	gs_error_rangecheck		975203	1					
ANR	975298	Argument	gs_error_rangecheck		975203	0					
ANR	975299	Identifier	gs_error_rangecheck		975203	0					
ANR	975300	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		975203	7					
ANR	975301	ForInit	i = 0 ;	99:9:2926:2931	975203	0	True				
ANR	975302	AssignmentExpression	i = 0		975203	0		=			
ANR	975303	Identifier	i		975203	0					
ANR	975304	PrimaryExpression	0		975203	1					
ANR	975305	Condition	i < ncomps	99:16:2933:2942	975203	1	True				
ANR	975306	RelationalExpression	i < ncomps		975203	0		<			
ANR	975307	Identifier	i		975203	0					
ANR	975308	Identifier	ncomps		975203	1					
ANR	975309	PostIncDecOperationExpression	i ++	99:28:2945:2947	975203	2	True				
ANR	975310	Identifier	i		975203	0					
ANR	975311	IncDec	++		975203	1					
ANR	975312	CompoundStatement		16:33:601:601	975203	3					
ANR	975313	ExpressionStatement	nbits = comp_bits [ i ]	106:8:3265:3285	975203	0	True				
ANR	975314	AssignmentExpression	nbits = comp_bits [ i ]		975203	0		=			
ANR	975315	Identifier	nbits		975203	0					
ANR	975316	ArrayIndexing	comp_bits [ i ]		975203	1					
ANR	975317	Identifier	comp_bits		975203	0					
ANR	975318	Identifier	i		975203	1					
ANR	975319	ExpressionStatement	scale = gx_max_color_value / ( ( 1 << nbits ) - 1 )	107:8:3295:3342	975203	1	True				
ANR	975320	AssignmentExpression	scale = gx_max_color_value / ( ( 1 << nbits ) - 1 )		975203	0		=			
ANR	975321	Identifier	scale		975203	0					
ANR	975322	MultiplicativeExpression	gx_max_color_value / ( ( 1 << nbits ) - 1 )		975203	1		/			
ANR	975323	Identifier	gx_max_color_value		975203	0					
ANR	975324	AdditiveExpression	( 1 << nbits ) - 1		975203	1		-			
ANR	975325	ShiftExpression	1 << nbits		975203	0		<<			
ANR	975326	PrimaryExpression	1		975203	0					
ANR	975327	Identifier	nbits		975203	1					
ANR	975328	PrimaryExpression	1		975203	1					
ANR	975329	ExpressionStatement	ivalue = ( color & comp_mask [ i ] ) >> comp_shift [ i ]	108:8:3352:3400	975203	2	True				
ANR	975330	AssignmentExpression	ivalue = ( color & comp_mask [ i ] ) >> comp_shift [ i ]		975203	0		=			
ANR	975331	Identifier	ivalue		975203	0					
ANR	975332	ShiftExpression	( color & comp_mask [ i ] ) >> comp_shift [ i ]		975203	1		>>			
ANR	975333	BitAndExpression	color & comp_mask [ i ]		975203	0		&			
ANR	975334	Identifier	color		975203	0					
ANR	975335	ArrayIndexing	comp_mask [ i ]		975203	1					
ANR	975336	Identifier	comp_mask		975203	0					
ANR	975337	Identifier	i		975203	1					
ANR	975338	ArrayIndexing	comp_shift [ i ]		975203	1					
ANR	975339	Identifier	comp_shift		975203	0					
ANR	975340	Identifier	i		975203	1					
ANR	975341	ExpressionStatement	cv [ i ] = ivalue * scale	109:8:3410:3432	975203	3	True				
ANR	975342	AssignmentExpression	cv [ i ] = ivalue * scale		975203	0		=			
ANR	975343	ArrayIndexing	cv [ i ]		975203	0					
ANR	975344	Identifier	cv		975203	0					
ANR	975345	Identifier	i		975203	1					
ANR	975346	MultiplicativeExpression	ivalue * scale		975203	1		*			
ANR	975347	Identifier	ivalue		975203	0					
ANR	975348	Identifier	scale		975203	1					
ANR	975349	ExpressionStatement	shift = nbits - ( gx_color_value_bits % nbits )	115:8:3645:3690	975203	4	True				
ANR	975350	AssignmentExpression	shift = nbits - ( gx_color_value_bits % nbits )		975203	0		=			
ANR	975351	Identifier	shift		975203	0					
ANR	975352	AdditiveExpression	nbits - ( gx_color_value_bits % nbits )		975203	1		-			
ANR	975353	Identifier	nbits		975203	0					
ANR	975354	MultiplicativeExpression	gx_color_value_bits % nbits		975203	1		%			
ANR	975355	Identifier	gx_color_value_bits		975203	0					
ANR	975356	Identifier	nbits		975203	1					
ANR	975357	ExpressionStatement	cv [ i ] += ivalue >> shift	116:8:3700:3724	975203	5	True				
ANR	975358	AssignmentExpression	cv [ i ] += ivalue >> shift		975203	0		+=			
ANR	975359	ArrayIndexing	cv [ i ]		975203	0					
ANR	975360	Identifier	cv		975203	0					
ANR	975361	Identifier	i		975203	1					
ANR	975362	ShiftExpression	ivalue >> shift		975203	1		>>			
ANR	975363	Identifier	ivalue		975203	0					
ANR	975364	Identifier	shift		975203	1					
ANR	975365	ReturnStatement	return 0 ;	118:4:3736:3744	975203	8	True				
ANR	975366	PrimaryExpression	0		975203	0					
ANR	975367	ReturnType	int		975203	1					
ANR	975368	Identifier	gx_default_decode_color		975203	2					
ANR	975369	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value cv [ ]"		975203	3					
ANR	975370	Parameter	gx_device * dev	83:24:2288:2302	975203	0	True				
ANR	975371	ParameterType	gx_device *		975203	0					
ANR	975372	Identifier	dev		975203	1					
ANR	975373	Parameter	gx_color_index color	83:41:2305:2324	975203	1	True				
ANR	975374	ParameterType	gx_color_index		975203	0					
ANR	975375	Identifier	color		975203	1					
ANR	975376	Parameter	gx_color_value cv [ ]	83:63:2327:2345	975203	2	True				
ANR	975377	ParameterType	gx_color_value [ ]		975203	0					
ANR	975378	Identifier	cv		975203	1					
ANR	975379	CFGEntryNode	ENTRY		975203		True				
ANR	975380	CFGExitNode	EXIT		975203		True				
ANR	975381	Symbol	* dev		975203						
ANR	975382	Symbol	* comp_shift		975203						
ANR	975383	Symbol	color		975203						
ANR	975384	Symbol	gs_error_rangecheck		975203						
ANR	975385	Symbol	* comp_mask		975203						
ANR	975386	Symbol	shift		975203						
ANR	975387	Symbol	nbits		975203						
ANR	975388	Symbol	scale		975203						
ANR	975389	Symbol	ncomps		975203						
ANR	975390	Symbol	dev -> color_info		975203						
ANR	975391	Symbol	colors_are_separable_and_linear		975203						
ANR	975392	Symbol	dev		975203						
ANR	975393	Symbol	dev -> color_info . comp_bits		975203						
ANR	975394	Symbol	dev -> color_info . comp_shift		975203						
ANR	975395	Symbol	* comp_bits		975203						
ANR	975396	Symbol	comp_shift		975203						
ANR	975397	Symbol	& dev -> color_info		975203						
ANR	975398	Symbol	comp_bits		975203						
ANR	975399	Symbol	gx_color_value_bits		975203						
ANR	975400	Symbol	dev -> color_info . num_components		975203						
ANR	975401	Symbol	i		975203						
ANR	975402	Symbol	dev -> color_info . comp_mask		975203						
ANR	975403	Symbol	comp_mask		975203						
ANR	975404	Symbol	ivalue		975203						
ANR	975405	Symbol	dev -> memory		975203						
ANR	975406	Symbol	cv		975203						
ANR	975407	Symbol	* i		975203						
ANR	975408	Symbol	gx_max_color_value		975203						
ANR	975409	Symbol	* cv		975203						
ANR	975410	Function	gx_error_encode_color	121:0:3749:4071							
ANR	975411	FunctionDef	"gx_error_encode_color (gx_device * dev , const gx_color_value colors [ ])"		975410	0					
ANR	975412	CompoundStatement		123:0:3834:4071	975410	0					
ANR	975413	IfStatement	"if ( strcmp ( dev -> dname , ""null"" ) != 0 )"		975410	0					
ANR	975414	Condition	"strcmp ( dev -> dname , ""null"" ) != 0"	126:8:3924:3954	975410	0	True				
ANR	975415	EqualityExpression	"strcmp ( dev -> dname , ""null"" ) != 0"		975410	0		!=			
ANR	975416	CallExpression	"strcmp ( dev -> dname , ""null"" )"		975410	0					
ANR	975417	Callee	strcmp		975410	0					
ANR	975418	Identifier	strcmp		975410	0					
ANR	975419	ArgumentList	dev -> dname		975410	1					
ANR	975420	Argument	dev -> dname		975410	0					
ANR	975421	PtrMemberAccess	dev -> dname		975410	0					
ANR	975422	Identifier	dev		975410	0					
ANR	975423	Identifier	dname		975410	1					
ANR	975424	Argument	"""null"""		975410	1					
ANR	975425	PrimaryExpression	"""null"""		975410	0					
ANR	975426	PrimaryExpression	0		975410	1					
ANR	975427	ExpressionStatement	"dmprintf ( dev -> memory , ""No encode_color proc defined for device.\\n"" )"	127:8:3965:4032	975410	1	True				
ANR	975428	CallExpression	"dmprintf ( dev -> memory , ""No encode_color proc defined for device.\\n"" )"		975410	0					
ANR	975429	Callee	dmprintf		975410	0					
ANR	975430	Identifier	dmprintf		975410	0					
ANR	975431	ArgumentList	dev -> memory		975410	1					
ANR	975432	Argument	dev -> memory		975410	0					
ANR	975433	PtrMemberAccess	dev -> memory		975410	0					
ANR	975434	Identifier	dev		975410	0					
ANR	975435	Identifier	memory		975410	1					
ANR	975436	Argument	"""No encode_color proc defined for device.\\n"""		975410	1					
ANR	975437	PrimaryExpression	"""No encode_color proc defined for device.\\n"""		975410	0					
ANR	975438	ReturnStatement	return gx_no_color_index ;	129:4:4045:4069	975410	1	True				
ANR	975439	Identifier	gx_no_color_index		975410	0					
ANR	975440	ReturnType	gx_color_index		975410	1					
ANR	975441	Identifier	gx_error_encode_color		975410	2					
ANR	975442	ParameterList	"gx_device * dev , const gx_color_value colors [ ]"		975410	3					
ANR	975443	Parameter	gx_device * dev	122:22:3786:3800	975410	0	True				
ANR	975444	ParameterType	gx_device *		975410	0					
ANR	975445	Identifier	dev		975410	1					
ANR	975446	Parameter	const gx_color_value colors [ ]	122:39:3803:3831	975410	1	True				
ANR	975447	ParameterType	const gx_color_value [ ]		975410	0					
ANR	975448	Identifier	colors		975410	1					
ANR	975449	CFGEntryNode	ENTRY		975410		True				
ANR	975450	CFGExitNode	EXIT		975410		True				
ANR	975451	Symbol	* dev		975410						
ANR	975452	Symbol	strcmp		975410						
ANR	975453	Symbol	dev -> memory		975410						
ANR	975454	Symbol	gx_no_color_index		975410						
ANR	975455	Symbol	dev		975410						
ANR	975456	Symbol	dev -> dname		975410						
ANR	975457	Symbol	colors		975410						
ANR	975458	Function	gx_error_decode_color	132:0:4074:4390							
ANR	975459	FunctionDef	"gx_error_decode_color (gx_device * dev , gx_color_index cindex , gx_color_value colors [ ])"		975458	0					
ANR	975460	CompoundStatement		134:0:4165:4390	975458	0					
ANR	975461	IdentifierDeclStatement	int i = dev -> color_info . num_components ;	135:5:4172:4208	975458	0	True				
ANR	975462	IdentifierDecl	i = dev -> color_info . num_components		975458	0					
ANR	975463	IdentifierDeclType	int		975458	0					
ANR	975464	Identifier	i		975458	1					
ANR	975465	AssignmentExpression	i = dev -> color_info . num_components		975458	2		=			
ANR	975466	Identifier	i		975458	0					
ANR	975467	MemberAccess	dev -> color_info . num_components		975458	1					
ANR	975468	PtrMemberAccess	dev -> color_info		975458	0					
ANR	975469	Identifier	dev		975458	0					
ANR	975470	Identifier	color_info		975458	1					
ANR	975471	Identifier	num_components		975458	1					
ANR	975472	ExpressionStatement	"dmprintf ( dev -> memory , ""No decode_color proc defined for device.\\n"" )"	138:5:4229:4296	975458	1	True				
ANR	975473	CallExpression	"dmprintf ( dev -> memory , ""No decode_color proc defined for device.\\n"" )"		975458	0					
ANR	975474	Callee	dmprintf		975458	0					
ANR	975475	Identifier	dmprintf		975458	0					
ANR	975476	ArgumentList	dev -> memory		975458	1					
ANR	975477	Argument	dev -> memory		975458	0					
ANR	975478	PtrMemberAccess	dev -> memory		975458	0					
ANR	975479	Identifier	dev		975458	0					
ANR	975480	Identifier	memory		975458	1					
ANR	975481	Argument	"""No decode_color proc defined for device.\\n"""		975458	1					
ANR	975482	PrimaryExpression	"""No decode_color proc defined for device.\\n"""		975458	0					
ANR	975483	ForStatement	for ( ; i >= 0 ; i -- )		975458	2					
ANR	975484	Condition	i >= 0	140:11:4316:4319	975458	0	True				
ANR	975485	RelationalExpression	i >= 0		975458	0		>=			
ANR	975486	Identifier	i		975458	0					
ANR	975487	PrimaryExpression	0		975458	1					
ANR	975488	PostIncDecOperationExpression	i --	140:17:4322:4324	975458	1	True				
ANR	975489	Identifier	i		975458	0					
ANR	975490	IncDec	--		975458	1					
ANR	975491	ExpressionStatement	colors [ i ] = 0	141:8:4335:4348	975458	2	True				
ANR	975492	AssignmentExpression	colors [ i ] = 0		975458	0		=			
ANR	975493	ArrayIndexing	colors [ i ]		975458	0					
ANR	975494	Identifier	colors		975458	0					
ANR	975495	Identifier	i		975458	1					
ANR	975496	PrimaryExpression	0		975458	1					
ANR	975497	ExpressionStatement	return_error ( gs_error_rangecheck )	142:5:4355:4388	975458	3	True				
ANR	975498	CallExpression	return_error ( gs_error_rangecheck )		975458	0					
ANR	975499	Callee	return_error		975458	0					
ANR	975500	Identifier	return_error		975458	0					
ANR	975501	ArgumentList	gs_error_rangecheck		975458	1					
ANR	975502	Argument	gs_error_rangecheck		975458	0					
ANR	975503	Identifier	gs_error_rangecheck		975458	0					
ANR	975504	ReturnType	int		975458	1					
ANR	975505	Identifier	gx_error_decode_color		975458	2					
ANR	975506	ParameterList	"gx_device * dev , gx_color_index cindex , gx_color_value colors [ ]"		975458	3					
ANR	975507	Parameter	gx_device * dev	133:22:4100:4114	975458	0	True				
ANR	975508	ParameterType	gx_device *		975458	0					
ANR	975509	Identifier	dev		975458	1					
ANR	975510	Parameter	gx_color_index cindex	133:39:4117:4137	975458	1	True				
ANR	975511	ParameterType	gx_color_index		975458	0					
ANR	975512	Identifier	cindex		975458	1					
ANR	975513	Parameter	gx_color_value colors [ ]	133:62:4140:4162	975458	2	True				
ANR	975514	ParameterType	gx_color_value [ ]		975458	0					
ANR	975515	Identifier	colors		975458	1					
ANR	975516	CFGEntryNode	ENTRY		975458		True				
ANR	975517	CFGExitNode	EXIT		975458		True				
ANR	975518	Symbol	* dev		975458						
ANR	975519	Symbol	* colors		975458						
ANR	975520	Symbol	dev -> memory		975458						
ANR	975521	Symbol	* i		975458						
ANR	975522	Symbol	dev		975458						
ANR	975523	Symbol	dev -> color_info . num_components		975458						
ANR	975524	Symbol	gs_error_rangecheck		975458						
ANR	975525	Symbol	cindex		975458						
ANR	975526	Symbol	i		975458						
ANR	975527	Symbol	dev -> color_info		975458						
ANR	975528	Symbol	colors		975458						
ANR	975529	Function	gx_default_gray_fast_encode	167:0:5590:5775							
ANR	975530	FunctionDef	"gx_default_gray_fast_encode (gx_device * dev , const gx_color_value cv [ ])"		975529	0					
ANR	975531	CompoundStatement		169:0:5677:5775	975529	0					
ANR	975532	ExpressionStatement	COLROUND_VARS	170:4:5683:5696	975529	0	True				
ANR	975533	Identifier	COLROUND_VARS		975529	0					
ANR	975534	ExpressionStatement	COLROUND_SETUP ( dev -> color_info . depth )	171:4:5702:5739	975529	1	True				
ANR	975535	CallExpression	COLROUND_SETUP ( dev -> color_info . depth )		975529	0					
ANR	975536	Callee	COLROUND_SETUP		975529	0					
ANR	975537	Identifier	COLROUND_SETUP		975529	0					
ANR	975538	ArgumentList	dev -> color_info . depth		975529	1					
ANR	975539	Argument	dev -> color_info . depth		975529	0					
ANR	975540	MemberAccess	dev -> color_info . depth		975529	0					
ANR	975541	PtrMemberAccess	dev -> color_info		975529	0					
ANR	975542	Identifier	dev		975529	0					
ANR	975543	Identifier	color_info		975529	1					
ANR	975544	Identifier	depth		975529	1					
ANR	975545	ReturnStatement	return COLROUND_ROUND ( cv [ 0 ] ) ;	172:4:5745:5773	975529	2	True				
ANR	975546	CallExpression	COLROUND_ROUND ( cv [ 0 ] )		975529	0					
ANR	975547	Callee	COLROUND_ROUND		975529	0					
ANR	975548	Identifier	COLROUND_ROUND		975529	0					
ANR	975549	ArgumentList	cv [ 0 ]		975529	1					
ANR	975550	Argument	cv [ 0 ]		975529	0					
ANR	975551	ArrayIndexing	cv [ 0 ]		975529	0					
ANR	975552	Identifier	cv		975529	0					
ANR	975553	PrimaryExpression	0		975529	1					
ANR	975554	ReturnType	gx_color_index		975529	1					
ANR	975555	Identifier	gx_default_gray_fast_encode		975529	2					
ANR	975556	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		975529	3					
ANR	975557	Parameter	gx_device * dev	168:28:5633:5647	975529	0	True				
ANR	975558	ParameterType	gx_device *		975529	0					
ANR	975559	Identifier	dev		975529	1					
ANR	975560	Parameter	const gx_color_value cv [ ]	168:45:5650:5674	975529	1	True				
ANR	975561	ParameterType	const gx_color_value [ ]		975529	0					
ANR	975562	Identifier	cv		975529	1					
ANR	975563	CFGEntryNode	ENTRY		975529		True				
ANR	975564	CFGExitNode	EXIT		975529		True				
ANR	975565	Symbol	* dev		975529						
ANR	975566	Symbol	cv		975529						
ANR	975567	Symbol	dev		975529						
ANR	975568	Symbol	COLROUND_ROUND		975529						
ANR	975569	Symbol	* cv		975529						
ANR	975570	Symbol	dev -> color_info		975529						
ANR	975571	Symbol	dev -> color_info . depth		975529						
ANR	975572	Function	gx_default_gray_encode	175:0:5778:5958							
ANR	975573	FunctionDef	"gx_default_gray_encode (gx_device * dev , const gx_color_value cv [ ])"		975572	0					
ANR	975574	CompoundStatement		177:0:5860:5958	975572	0					
ANR	975575	ReturnStatement	return ( gx_color_index ) ( cv [ 0 ] ) * ( dev -> color_info . max_gray + 1 ) / ( gx_max_color_value + 1 ) ;	178:4:5866:5956	975572	0	True				
ANR	975576	MultiplicativeExpression	( gx_color_index ) ( cv [ 0 ] ) * ( dev -> color_info . max_gray + 1 ) / ( gx_max_color_value + 1 )		975572	0		*			
ANR	975577	CastExpression	( gx_color_index ) ( cv [ 0 ] )		975572	0					
ANR	975578	CastTarget	gx_color_index		975572	0					
ANR	975579	ArrayIndexing	cv [ 0 ]		975572	1					
ANR	975580	Identifier	cv		975572	0					
ANR	975581	PrimaryExpression	0		975572	1					
ANR	975582	MultiplicativeExpression	( dev -> color_info . max_gray + 1 ) / ( gx_max_color_value + 1 )		975572	1		/			
ANR	975583	AdditiveExpression	dev -> color_info . max_gray + 1		975572	0		+			
ANR	975584	MemberAccess	dev -> color_info . max_gray		975572	0					
ANR	975585	PtrMemberAccess	dev -> color_info		975572	0					
ANR	975586	Identifier	dev		975572	0					
ANR	975587	Identifier	color_info		975572	1					
ANR	975588	Identifier	max_gray		975572	1					
ANR	975589	PrimaryExpression	1		975572	1					
ANR	975590	AdditiveExpression	gx_max_color_value + 1		975572	1		+			
ANR	975591	Identifier	gx_max_color_value		975572	0					
ANR	975592	PrimaryExpression	1		975572	1					
ANR	975593	ReturnType	gx_color_index		975572	1					
ANR	975594	Identifier	gx_default_gray_encode		975572	2					
ANR	975595	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		975572	3					
ANR	975596	Parameter	gx_device * dev	176:23:5816:5830	975572	0	True				
ANR	975597	ParameterType	gx_device *		975572	0					
ANR	975598	Identifier	dev		975572	1					
ANR	975599	Parameter	const gx_color_value cv [ ]	176:40:5833:5857	975572	1	True				
ANR	975600	ParameterType	const gx_color_value [ ]		975572	0					
ANR	975601	Identifier	cv		975572	1					
ANR	975602	CFGEntryNode	ENTRY		975572		True				
ANR	975603	CFGExitNode	EXIT		975572		True				
ANR	975604	Symbol	* dev		975572						
ANR	975605	Symbol	cv		975572						
ANR	975606	Symbol	dev		975572						
ANR	975607	Symbol	gx_max_color_value		975572						
ANR	975608	Symbol	* cv		975572						
ANR	975609	Symbol	dev -> color_info		975572						
ANR	975610	Symbol	dev -> color_info . max_gray		975572						
ANR	975611	Function	gx_backwards_compatible_gray_encode	187:0:6187:6522							
ANR	975612	FunctionDef	"gx_backwards_compatible_gray_encode (gx_device * dev , const gx_color_value cv [ ])"		975611	0					
ANR	975613	CompoundStatement		190:0:6317:6522	975611	0					
ANR	975614	IdentifierDeclStatement	gx_color_value gray_val = cv [ 0 ] ;	191:4:6323:6354	975611	0	True				
ANR	975615	IdentifierDecl	gray_val = cv [ 0 ]		975611	0					
ANR	975616	IdentifierDeclType	gx_color_value		975611	0					
ANR	975617	Identifier	gray_val		975611	1					
ANR	975618	AssignmentExpression	gray_val = cv [ 0 ]		975611	2		=			
ANR	975619	Identifier	gray_val		975611	0					
ANR	975620	ArrayIndexing	cv [ 0 ]		975611	1					
ANR	975621	Identifier	cv		975611	0					
ANR	975622	PrimaryExpression	0		975611	1					
ANR	975623	IdentifierDeclStatement	gx_color_value rgb_cv [ 3 ] ;	192:4:6360:6384	975611	1	True				
ANR	975624	IdentifierDecl	rgb_cv [ 3 ]		975611	0					
ANR	975625	IdentifierDeclType	gx_color_value [ 3 ]		975611	0					
ANR	975626	Identifier	rgb_cv		975611	1					
ANR	975627	PrimaryExpression	3		975611	2					
ANR	975628	ExpressionStatement	rgb_cv [ 0 ] = gray_val	194:4:6391:6411	975611	2	True				
ANR	975629	AssignmentExpression	rgb_cv [ 0 ] = gray_val		975611	0		=			
ANR	975630	ArrayIndexing	rgb_cv [ 0 ]		975611	0					
ANR	975631	Identifier	rgb_cv		975611	0					
ANR	975632	PrimaryExpression	0		975611	1					
ANR	975633	Identifier	gray_val		975611	1					
ANR	975634	ExpressionStatement	rgb_cv [ 1 ] = gray_val	195:4:6417:6437	975611	3	True				
ANR	975635	AssignmentExpression	rgb_cv [ 1 ] = gray_val		975611	0		=			
ANR	975636	ArrayIndexing	rgb_cv [ 1 ]		975611	0					
ANR	975637	Identifier	rgb_cv		975611	0					
ANR	975638	PrimaryExpression	1		975611	1					
ANR	975639	Identifier	gray_val		975611	1					
ANR	975640	ExpressionStatement	rgb_cv [ 2 ] = gray_val	196:4:6443:6463	975611	4	True				
ANR	975641	AssignmentExpression	rgb_cv [ 2 ] = gray_val		975611	0		=			
ANR	975642	ArrayIndexing	rgb_cv [ 2 ]		975611	0					
ANR	975643	Identifier	rgb_cv		975611	0					
ANR	975644	PrimaryExpression	2		975611	1					
ANR	975645	Identifier	gray_val		975611	1					
ANR	975646	ReturnStatement	"return ( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb_cv ) ;"	197:4:6469:6520	975611	5	True				
ANR	975647	CallExpression	"( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb_cv )"		975611	0					
ANR	975648	Callee	"* dev_proc ( dev , map_rgb_color )"		975611	0					
ANR	975649	UnaryOperationExpression	"* dev_proc ( dev , map_rgb_color )"		975611	0					
ANR	975650	UnaryOperator	*		975611	0					
ANR	975651	CallExpression	"dev_proc ( dev , map_rgb_color )"		975611	1					
ANR	975652	Callee	dev_proc		975611	0					
ANR	975653	Identifier	dev_proc		975611	0					
ANR	975654	ArgumentList	dev		975611	1					
ANR	975655	Argument	dev		975611	0					
ANR	975656	Identifier	dev		975611	0					
ANR	975657	Argument	map_rgb_color		975611	1					
ANR	975658	Identifier	map_rgb_color		975611	0					
ANR	975659	ArgumentList	dev		975611	1					
ANR	975660	Argument	dev		975611	0					
ANR	975661	Identifier	dev		975611	0					
ANR	975662	Argument	rgb_cv		975611	1					
ANR	975663	Identifier	rgb_cv		975611	0					
ANR	975664	ReturnType	gx_color_index		975611	1					
ANR	975665	Identifier	gx_backwards_compatible_gray_encode		975611	2					
ANR	975666	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		975611	3					
ANR	975667	Parameter	gx_device * dev	188:36:6238:6251	975611	0	True				
ANR	975668	ParameterType	gx_device *		975611	0					
ANR	975669	Identifier	dev		975611	1					
ANR	975670	Parameter	const gx_color_value cv [ ]	189:36:6290:6314	975611	1	True				
ANR	975671	ParameterType	const gx_color_value [ ]		975611	0					
ANR	975672	Identifier	cv		975611	1					
ANR	975673	CFGEntryNode	ENTRY		975611		True				
ANR	975674	CFGExitNode	EXIT		975611		True				
ANR	975675	Symbol	* rgb_cv		975611						
ANR	975676	Symbol	cv		975611						
ANR	975677	Symbol	dev		975611						
ANR	975678	Symbol	rgb_cv		975611						
ANR	975679	Symbol	* dev_proc		975611						
ANR	975680	Symbol	dev_proc		975611						
ANR	975681	Symbol	* cv		975611						
ANR	975682	Symbol	gray_val		975611						
ANR	975683	Symbol	map_rgb_color		975611						
ANR	975684	Symbol	"* dev_proc ( dev , map_rgb_color )"		975611						
ANR	975685	Function	gray_cs_to_gray_cm	202:0:6605:6690							
ANR	975686	FunctionDef	"gray_cs_to_gray_cm (gx_device * dev , frac gray , frac out [ ])"		975685	0					
ANR	975687	CompoundStatement		204:0:6669:6690	975685	0					
ANR	975688	ExpressionStatement	out [ 0 ] = gray	205:4:6675:6688	975685	0	True				
ANR	975689	AssignmentExpression	out [ 0 ] = gray		975685	0		=			
ANR	975690	ArrayIndexing	out [ 0 ]		975685	0					
ANR	975691	Identifier	out		975685	0					
ANR	975692	PrimaryExpression	0		975685	1					
ANR	975693	Identifier	gray		975685	1					
ANR	975694	ReturnType	void		975685	1					
ANR	975695	Identifier	gray_cs_to_gray_cm		975685	2					
ANR	975696	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		975685	3					
ANR	975697	Parameter	gx_device * dev	203:19:6629:6643	975685	0	True				
ANR	975698	ParameterType	gx_device *		975685	0					
ANR	975699	Identifier	dev		975685	1					
ANR	975700	Parameter	frac gray	203:36:6646:6654	975685	1	True				
ANR	975701	ParameterType	frac		975685	0					
ANR	975702	Identifier	gray		975685	1					
ANR	975703	Parameter	frac out [ ]	203:47:6657:6666	975685	2	True				
ANR	975704	ParameterType	frac [ ]		975685	0					
ANR	975705	Identifier	out		975685	1					
ANR	975706	CFGEntryNode	ENTRY		975685		True				
ANR	975707	CFGExitNode	EXIT		975685		True				
ANR	975708	Symbol	gray		975685						
ANR	975709	Symbol	dev		975685						
ANR	975710	Symbol	* out		975685						
ANR	975711	Symbol	out		975685						
ANR	975712	Function	rgb_cs_to_gray_cm	208:0:6693:6882							
ANR	975713	FunctionDef	"rgb_cs_to_gray_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		975712	0					
ANR	975714	CompoundStatement		211:0:6833:6882	975712	0					
ANR	975715	ExpressionStatement	"out [ 0 ] = color_rgb_to_gray ( r , g , b , NULL )"	212:4:6839:6880	975712	0	True				
ANR	975716	AssignmentExpression	"out [ 0 ] = color_rgb_to_gray ( r , g , b , NULL )"		975712	0		=			
ANR	975717	ArrayIndexing	out [ 0 ]		975712	0					
ANR	975718	Identifier	out		975712	0					
ANR	975719	PrimaryExpression	0		975712	1					
ANR	975720	CallExpression	"color_rgb_to_gray ( r , g , b , NULL )"		975712	1					
ANR	975721	Callee	color_rgb_to_gray		975712	0					
ANR	975722	Identifier	color_rgb_to_gray		975712	0					
ANR	975723	ArgumentList	r		975712	1					
ANR	975724	Argument	r		975712	0					
ANR	975725	Identifier	r		975712	0					
ANR	975726	Argument	g		975712	1					
ANR	975727	Identifier	g		975712	0					
ANR	975728	Argument	b		975712	2					
ANR	975729	Identifier	b		975712	0					
ANR	975730	Argument	NULL		975712	3					
ANR	975731	Identifier	NULL		975712	0					
ANR	975732	ReturnType	static void		975712	1					
ANR	975733	Identifier	rgb_cs_to_gray_cm		975712	2					
ANR	975734	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		975712	3					
ANR	975735	Parameter	gx_device * dev	209:18:6723:6737	975712	0	True				
ANR	975736	ParameterType	gx_device *		975712	0					
ANR	975737	Identifier	dev		975712	1					
ANR	975738	Parameter	const gs_gstate * pgs	209:35:6740:6759	975712	1	True				
ANR	975739	ParameterType	const gs_gstate *		975712	0					
ANR	975740	Identifier	pgs		975712	1					
ANR	975741	Parameter	frac r	210:35:6797:6802	975712	2	True				
ANR	975742	ParameterType	frac		975712	0					
ANR	975743	Identifier	r		975712	1					
ANR	975744	Parameter	frac g	210:43:6805:6810	975712	3	True				
ANR	975745	ParameterType	frac		975712	0					
ANR	975746	Identifier	g		975712	1					
ANR	975747	Parameter	frac b	210:51:6813:6818	975712	4	True				
ANR	975748	ParameterType	frac		975712	0					
ANR	975749	Identifier	b		975712	1					
ANR	975750	Parameter	frac out [ ]	210:59:6821:6830	975712	5	True				
ANR	975751	ParameterType	frac [ ]		975712	0					
ANR	975752	Identifier	out		975712	1					
ANR	975753	CFGEntryNode	ENTRY		975712		True				
ANR	975754	CFGExitNode	EXIT		975712		True				
ANR	975755	Symbol	r		975712						
ANR	975756	Symbol	b		975712						
ANR	975757	Symbol	NULL		975712						
ANR	975758	Symbol	dev		975712						
ANR	975759	Symbol	g		975712						
ANR	975760	Symbol	color_rgb_to_gray		975712						
ANR	975761	Symbol	* out		975712						
ANR	975762	Symbol	pgs		975712						
ANR	975763	Symbol	out		975712						
ANR	975764	Function	cmyk_cs_to_gray_cm	215:0:6885:7030							
ANR	975765	FunctionDef	"cmyk_cs_to_gray_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		975764	0					
ANR	975766	CompoundStatement		217:0:6977:7030	975764	0					
ANR	975767	ExpressionStatement	"out [ 0 ] = color_cmyk_to_gray ( c , m , y , k , NULL )"	218:4:6983:7028	975764	0	True				
ANR	975768	AssignmentExpression	"out [ 0 ] = color_cmyk_to_gray ( c , m , y , k , NULL )"		975764	0		=			
ANR	975769	ArrayIndexing	out [ 0 ]		975764	0					
ANR	975770	Identifier	out		975764	0					
ANR	975771	PrimaryExpression	0		975764	1					
ANR	975772	CallExpression	"color_cmyk_to_gray ( c , m , y , k , NULL )"		975764	1					
ANR	975773	Callee	color_cmyk_to_gray		975764	0					
ANR	975774	Identifier	color_cmyk_to_gray		975764	0					
ANR	975775	ArgumentList	c		975764	1					
ANR	975776	Argument	c		975764	0					
ANR	975777	Identifier	c		975764	0					
ANR	975778	Argument	m		975764	1					
ANR	975779	Identifier	m		975764	0					
ANR	975780	Argument	y		975764	2					
ANR	975781	Identifier	y		975764	0					
ANR	975782	Argument	k		975764	3					
ANR	975783	Identifier	k		975764	0					
ANR	975784	Argument	NULL		975764	4					
ANR	975785	Identifier	NULL		975764	0					
ANR	975786	ReturnType	static void		975764	1					
ANR	975787	Identifier	cmyk_cs_to_gray_cm		975764	2					
ANR	975788	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		975764	3					
ANR	975789	Parameter	gx_device * dev	216:19:6916:6930	975764	0	True				
ANR	975790	ParameterType	gx_device *		975764	0					
ANR	975791	Identifier	dev		975764	1					
ANR	975792	Parameter	frac c	216:36:6933:6938	975764	1	True				
ANR	975793	ParameterType	frac		975764	0					
ANR	975794	Identifier	c		975764	1					
ANR	975795	Parameter	frac m	216:44:6941:6946	975764	2	True				
ANR	975796	ParameterType	frac		975764	0					
ANR	975797	Identifier	m		975764	1					
ANR	975798	Parameter	frac y	216:52:6949:6954	975764	3	True				
ANR	975799	ParameterType	frac		975764	0					
ANR	975800	Identifier	y		975764	1					
ANR	975801	Parameter	frac k	216:60:6957:6962	975764	4	True				
ANR	975802	ParameterType	frac		975764	0					
ANR	975803	Identifier	k		975764	1					
ANR	975804	Parameter	frac out [ ]	216:68:6965:6974	975764	5	True				
ANR	975805	ParameterType	frac [ ]		975764	0					
ANR	975806	Identifier	out		975764	1					
ANR	975807	CFGEntryNode	ENTRY		975764		True				
ANR	975808	CFGExitNode	EXIT		975764		True				
ANR	975809	Symbol	c		975764						
ANR	975810	Symbol	NULL		975764						
ANR	975811	Symbol	dev		975764						
ANR	975812	Symbol	* out		975764						
ANR	975813	Symbol	y		975764						
ANR	975814	Symbol	k		975764						
ANR	975815	Symbol	m		975764						
ANR	975816	Symbol	color_cmyk_to_gray		975764						
ANR	975817	Symbol	out		975764						
ANR	975818	Function	gray_cs_to_rgb_cm	221:0:7033:7142							
ANR	975819	FunctionDef	"gray_cs_to_rgb_cm (gx_device * dev , frac gray , frac out [ ])"		975818	0					
ANR	975820	CompoundStatement		223:0:7103:7142	975818	0					
ANR	975821	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = gray	224:4:7109:7140	975818	0	True				
ANR	975822	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = gray		975818	0		=			
ANR	975823	ArrayIndexing	out [ 0 ]		975818	0					
ANR	975824	Identifier	out		975818	0					
ANR	975825	PrimaryExpression	0		975818	1					
ANR	975826	AssignmentExpression	out [ 1 ] = out [ 2 ] = gray		975818	1		=			
ANR	975827	ArrayIndexing	out [ 1 ]		975818	0					
ANR	975828	Identifier	out		975818	0					
ANR	975829	PrimaryExpression	1		975818	1					
ANR	975830	AssignmentExpression	out [ 2 ] = gray		975818	1		=			
ANR	975831	ArrayIndexing	out [ 2 ]		975818	0					
ANR	975832	Identifier	out		975818	0					
ANR	975833	PrimaryExpression	2		975818	1					
ANR	975834	Identifier	gray		975818	1					
ANR	975835	ReturnType	static void		975818	1					
ANR	975836	Identifier	gray_cs_to_rgb_cm		975818	2					
ANR	975837	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		975818	3					
ANR	975838	Parameter	gx_device * dev	222:18:7063:7077	975818	0	True				
ANR	975839	ParameterType	gx_device *		975818	0					
ANR	975840	Identifier	dev		975818	1					
ANR	975841	Parameter	frac gray	222:35:7080:7088	975818	1	True				
ANR	975842	ParameterType	frac		975818	0					
ANR	975843	Identifier	gray		975818	1					
ANR	975844	Parameter	frac out [ ]	222:46:7091:7100	975818	2	True				
ANR	975845	ParameterType	frac [ ]		975818	0					
ANR	975846	Identifier	out		975818	1					
ANR	975847	CFGEntryNode	ENTRY		975818		True				
ANR	975848	CFGExitNode	EXIT		975818		True				
ANR	975849	Symbol	gray		975818						
ANR	975850	Symbol	dev		975818						
ANR	975851	Symbol	* out		975818						
ANR	975852	Symbol	out		975818						
ANR	975853	Function	rgb_cs_to_rgb_cm	227:0:7145:7326							
ANR	975854	FunctionDef	"rgb_cs_to_rgb_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		975853	0					
ANR	975855	CompoundStatement		230:0:7276:7326	975853	0					
ANR	975856	ExpressionStatement	out [ 0 ] = r	231:4:7282:7292	975853	0	True				
ANR	975857	AssignmentExpression	out [ 0 ] = r		975853	0		=			
ANR	975858	ArrayIndexing	out [ 0 ]		975853	0					
ANR	975859	Identifier	out		975853	0					
ANR	975860	PrimaryExpression	0		975853	1					
ANR	975861	Identifier	r		975853	1					
ANR	975862	ExpressionStatement	out [ 1 ] = g	232:4:7298:7308	975853	1	True				
ANR	975863	AssignmentExpression	out [ 1 ] = g		975853	0		=			
ANR	975864	ArrayIndexing	out [ 1 ]		975853	0					
ANR	975865	Identifier	out		975853	0					
ANR	975866	PrimaryExpression	1		975853	1					
ANR	975867	Identifier	g		975853	1					
ANR	975868	ExpressionStatement	out [ 2 ] = b	233:4:7314:7324	975853	2	True				
ANR	975869	AssignmentExpression	out [ 2 ] = b		975853	0		=			
ANR	975870	ArrayIndexing	out [ 2 ]		975853	0					
ANR	975871	Identifier	out		975853	0					
ANR	975872	PrimaryExpression	2		975853	1					
ANR	975873	Identifier	b		975853	1					
ANR	975874	ReturnType	void		975853	1					
ANR	975875	Identifier	rgb_cs_to_rgb_cm		975853	2					
ANR	975876	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		975853	3					
ANR	975877	Parameter	gx_device * dev	228:17:7167:7181	975853	0	True				
ANR	975878	ParameterType	gx_device *		975853	0					
ANR	975879	Identifier	dev		975853	1					
ANR	975880	Parameter	const gs_gstate * pgs	228:34:7184:7203	975853	1	True				
ANR	975881	ParameterType	const gs_gstate *		975853	0					
ANR	975882	Identifier	pgs		975853	1					
ANR	975883	Parameter	frac r	229:34:7240:7245	975853	2	True				
ANR	975884	ParameterType	frac		975853	0					
ANR	975885	Identifier	r		975853	1					
ANR	975886	Parameter	frac g	229:42:7248:7253	975853	3	True				
ANR	975887	ParameterType	frac		975853	0					
ANR	975888	Identifier	g		975853	1					
ANR	975889	Parameter	frac b	229:50:7256:7261	975853	4	True				
ANR	975890	ParameterType	frac		975853	0					
ANR	975891	Identifier	b		975853	1					
ANR	975892	Parameter	frac out [ ]	229:58:7264:7273	975853	5	True				
ANR	975893	ParameterType	frac [ ]		975853	0					
ANR	975894	Identifier	out		975853	1					
ANR	975895	CFGEntryNode	ENTRY		975853		True				
ANR	975896	CFGExitNode	EXIT		975853		True				
ANR	975897	Symbol	r		975853						
ANR	975898	Symbol	b		975853						
ANR	975899	Symbol	dev		975853						
ANR	975900	Symbol	g		975853						
ANR	975901	Symbol	* out		975853						
ANR	975902	Symbol	pgs		975853						
ANR	975903	Symbol	out		975853						
ANR	975904	Function	cmyk_cs_to_rgb_cm	236:0:7329:7481							
ANR	975905	FunctionDef	"cmyk_cs_to_rgb_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		975904	0					
ANR	975906	CompoundStatement		238:0:7420:7481	975904	0					
ANR	975907	ExpressionStatement	"color_cmyk_to_rgb ( c , m , y , k , NULL , out , dev -> memory )"	239:4:7426:7479	975904	0	True				
ANR	975908	CallExpression	"color_cmyk_to_rgb ( c , m , y , k , NULL , out , dev -> memory )"		975904	0					
ANR	975909	Callee	color_cmyk_to_rgb		975904	0					
ANR	975910	Identifier	color_cmyk_to_rgb		975904	0					
ANR	975911	ArgumentList	c		975904	1					
ANR	975912	Argument	c		975904	0					
ANR	975913	Identifier	c		975904	0					
ANR	975914	Argument	m		975904	1					
ANR	975915	Identifier	m		975904	0					
ANR	975916	Argument	y		975904	2					
ANR	975917	Identifier	y		975904	0					
ANR	975918	Argument	k		975904	3					
ANR	975919	Identifier	k		975904	0					
ANR	975920	Argument	NULL		975904	4					
ANR	975921	Identifier	NULL		975904	0					
ANR	975922	Argument	out		975904	5					
ANR	975923	Identifier	out		975904	0					
ANR	975924	Argument	dev -> memory		975904	6					
ANR	975925	PtrMemberAccess	dev -> memory		975904	0					
ANR	975926	Identifier	dev		975904	0					
ANR	975927	Identifier	memory		975904	1					
ANR	975928	ReturnType	static void		975904	1					
ANR	975929	Identifier	cmyk_cs_to_rgb_cm		975904	2					
ANR	975930	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		975904	3					
ANR	975931	Parameter	gx_device * dev	237:18:7359:7373	975904	0	True				
ANR	975932	ParameterType	gx_device *		975904	0					
ANR	975933	Identifier	dev		975904	1					
ANR	975934	Parameter	frac c	237:35:7376:7381	975904	1	True				
ANR	975935	ParameterType	frac		975904	0					
ANR	975936	Identifier	c		975904	1					
ANR	975937	Parameter	frac m	237:43:7384:7389	975904	2	True				
ANR	975938	ParameterType	frac		975904	0					
ANR	975939	Identifier	m		975904	1					
ANR	975940	Parameter	frac y	237:51:7392:7397	975904	3	True				
ANR	975941	ParameterType	frac		975904	0					
ANR	975942	Identifier	y		975904	1					
ANR	975943	Parameter	frac k	237:59:7400:7405	975904	4	True				
ANR	975944	ParameterType	frac		975904	0					
ANR	975945	Identifier	k		975904	1					
ANR	975946	Parameter	frac out [ ]	237:67:7408:7417	975904	5	True				
ANR	975947	ParameterType	frac [ ]		975904	0					
ANR	975948	Identifier	out		975904	1					
ANR	975949	CFGEntryNode	ENTRY		975904		True				
ANR	975950	CFGExitNode	EXIT		975904		True				
ANR	975951	Symbol	* dev		975904						
ANR	975952	Symbol	dev -> memory		975904						
ANR	975953	Symbol	c		975904						
ANR	975954	Symbol	NULL		975904						
ANR	975955	Symbol	dev		975904						
ANR	975956	Symbol	y		975904						
ANR	975957	Symbol	k		975904						
ANR	975958	Symbol	m		975904						
ANR	975959	Symbol	out		975904						
ANR	975960	Function	gray_cs_to_rgbk_cm	242:0:7484:7615							
ANR	975961	FunctionDef	"gray_cs_to_rgbk_cm (gx_device * dev , frac gray , frac out [ ])"		975960	0					
ANR	975962	CompoundStatement		244:0:7555:7615	975960	0					
ANR	975963	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0	245:4:7561:7594	975960	0	True				
ANR	975964	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0		975960	0		=			
ANR	975965	ArrayIndexing	out [ 0 ]		975960	0					
ANR	975966	Identifier	out		975960	0					
ANR	975967	PrimaryExpression	0		975960	1					
ANR	975968	AssignmentExpression	out [ 1 ] = out [ 2 ] = frac_0		975960	1		=			
ANR	975969	ArrayIndexing	out [ 1 ]		975960	0					
ANR	975970	Identifier	out		975960	0					
ANR	975971	PrimaryExpression	1		975960	1					
ANR	975972	AssignmentExpression	out [ 2 ] = frac_0		975960	1		=			
ANR	975973	ArrayIndexing	out [ 2 ]		975960	0					
ANR	975974	Identifier	out		975960	0					
ANR	975975	PrimaryExpression	2		975960	1					
ANR	975976	Identifier	frac_0		975960	1					
ANR	975977	ExpressionStatement	out [ 3 ] = gray	246:4:7600:7613	975960	1	True				
ANR	975978	AssignmentExpression	out [ 3 ] = gray		975960	0		=			
ANR	975979	ArrayIndexing	out [ 3 ]		975960	0					
ANR	975980	Identifier	out		975960	0					
ANR	975981	PrimaryExpression	3		975960	1					
ANR	975982	Identifier	gray		975960	1					
ANR	975983	ReturnType	static void		975960	1					
ANR	975984	Identifier	gray_cs_to_rgbk_cm		975960	2					
ANR	975985	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		975960	3					
ANR	975986	Parameter	gx_device * dev	243:19:7515:7529	975960	0	True				
ANR	975987	ParameterType	gx_device *		975960	0					
ANR	975988	Identifier	dev		975960	1					
ANR	975989	Parameter	frac gray	243:36:7532:7540	975960	1	True				
ANR	975990	ParameterType	frac		975960	0					
ANR	975991	Identifier	gray		975960	1					
ANR	975992	Parameter	frac out [ ]	243:47:7543:7552	975960	2	True				
ANR	975993	ParameterType	frac [ ]		975960	0					
ANR	975994	Identifier	out		975960	1					
ANR	975995	CFGEntryNode	ENTRY		975960		True				
ANR	975996	CFGExitNode	EXIT		975960		True				
ANR	975997	Symbol	gray		975960						
ANR	975998	Symbol	dev		975960						
ANR	975999	Symbol	* out		975960						
ANR	976000	Symbol	frac_0		975960						
ANR	976001	Symbol	out		975960						
ANR	976002	Function	rgb_cs_to_rgbk_cm	249:0:7618:7962							
ANR	976003	FunctionDef	"rgb_cs_to_rgbk_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		976002	0					
ANR	976004	CompoundStatement		252:0:7757:7962	976002	0					
ANR	976005	IfStatement	if ( ( r == g ) && ( g == b ) )		976002	0					
ANR	976006	Condition	( r == g ) && ( g == b )	253:8:7767:7786	976002	0	True				
ANR	976007	AndExpression	( r == g ) && ( g == b )		976002	0		&&			
ANR	976008	EqualityExpression	r == g		976002	0		==			
ANR	976009	Identifier	r		976002	0					
ANR	976010	Identifier	g		976002	1					
ANR	976011	EqualityExpression	g == b		976002	1		==			
ANR	976012	Identifier	g		976002	0					
ANR	976013	Identifier	b		976002	1					
ANR	976014	CompoundStatement		2:30:31:31	976002	1					
ANR	976015	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0	254:8:7799:7832	976002	0	True				
ANR	976016	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0		976002	0		=			
ANR	976017	ArrayIndexing	out [ 0 ]		976002	0					
ANR	976018	Identifier	out		976002	0					
ANR	976019	PrimaryExpression	0		976002	1					
ANR	976020	AssignmentExpression	out [ 1 ] = out [ 2 ] = frac_0		976002	1		=			
ANR	976021	ArrayIndexing	out [ 1 ]		976002	0					
ANR	976022	Identifier	out		976002	0					
ANR	976023	PrimaryExpression	1		976002	1					
ANR	976024	AssignmentExpression	out [ 2 ] = frac_0		976002	1		=			
ANR	976025	ArrayIndexing	out [ 2 ]		976002	0					
ANR	976026	Identifier	out		976002	0					
ANR	976027	PrimaryExpression	2		976002	1					
ANR	976028	Identifier	frac_0		976002	1					
ANR	976029	ExpressionStatement	out [ 3 ] = r	255:8:7842:7852	976002	1	True				
ANR	976030	AssignmentExpression	out [ 3 ] = r		976002	0		=			
ANR	976031	ArrayIndexing	out [ 3 ]		976002	0					
ANR	976032	Identifier	out		976002	0					
ANR	976033	PrimaryExpression	3		976002	1					
ANR	976034	Identifier	r		976002	1					
ANR	976035	ElseStatement	else		976002	0					
ANR	976036	CompoundStatement		6:9:111:111	976002	0					
ANR	976037	ExpressionStatement	out [ 0 ] = r	258:8:7879:7889	976002	0	True				
ANR	976038	AssignmentExpression	out [ 0 ] = r		976002	0		=			
ANR	976039	ArrayIndexing	out [ 0 ]		976002	0					
ANR	976040	Identifier	out		976002	0					
ANR	976041	PrimaryExpression	0		976002	1					
ANR	976042	Identifier	r		976002	1					
ANR	976043	ExpressionStatement	out [ 1 ] = g	259:8:7899:7909	976002	1	True				
ANR	976044	AssignmentExpression	out [ 1 ] = g		976002	0		=			
ANR	976045	ArrayIndexing	out [ 1 ]		976002	0					
ANR	976046	Identifier	out		976002	0					
ANR	976047	PrimaryExpression	1		976002	1					
ANR	976048	Identifier	g		976002	1					
ANR	976049	ExpressionStatement	out [ 2 ] = b	260:8:7919:7929	976002	2	True				
ANR	976050	AssignmentExpression	out [ 2 ] = b		976002	0		=			
ANR	976051	ArrayIndexing	out [ 2 ]		976002	0					
ANR	976052	Identifier	out		976002	0					
ANR	976053	PrimaryExpression	2		976002	1					
ANR	976054	Identifier	b		976002	1					
ANR	976055	ExpressionStatement	out [ 3 ] = frac_0	261:8:7939:7954	976002	3	True				
ANR	976056	AssignmentExpression	out [ 3 ] = frac_0		976002	0		=			
ANR	976057	ArrayIndexing	out [ 3 ]		976002	0					
ANR	976058	Identifier	out		976002	0					
ANR	976059	PrimaryExpression	3		976002	1					
ANR	976060	Identifier	frac_0		976002	1					
ANR	976061	ReturnType	static void		976002	1					
ANR	976062	Identifier	rgb_cs_to_rgbk_cm		976002	2					
ANR	976063	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		976002	3					
ANR	976064	Parameter	gx_device * dev	250:18:7648:7662	976002	0	True				
ANR	976065	ParameterType	gx_device *		976002	0					
ANR	976066	Identifier	dev		976002	1					
ANR	976067	Parameter	const gs_gstate * pgs	250:35:7665:7684	976002	1	True				
ANR	976068	ParameterType	const gs_gstate *		976002	0					
ANR	976069	Identifier	pgs		976002	1					
ANR	976070	Parameter	frac r	251:34:7721:7726	976002	2	True				
ANR	976071	ParameterType	frac		976002	0					
ANR	976072	Identifier	r		976002	1					
ANR	976073	Parameter	frac g	251:42:7729:7734	976002	3	True				
ANR	976074	ParameterType	frac		976002	0					
ANR	976075	Identifier	g		976002	1					
ANR	976076	Parameter	frac b	251:50:7737:7742	976002	4	True				
ANR	976077	ParameterType	frac		976002	0					
ANR	976078	Identifier	b		976002	1					
ANR	976079	Parameter	frac out [ ]	251:58:7745:7754	976002	5	True				
ANR	976080	ParameterType	frac [ ]		976002	0					
ANR	976081	Identifier	out		976002	1					
ANR	976082	CFGEntryNode	ENTRY		976002		True				
ANR	976083	CFGExitNode	EXIT		976002		True				
ANR	976084	Symbol	r		976002						
ANR	976085	Symbol	b		976002						
ANR	976086	Symbol	dev		976002						
ANR	976087	Symbol	g		976002						
ANR	976088	Symbol	* out		976002						
ANR	976089	Symbol	pgs		976002						
ANR	976090	Symbol	frac_0		976002						
ANR	976091	Symbol	out		976002						
ANR	976092	Function	cmyk_cs_to_rgbk_cm	265:0:7965:8360							
ANR	976093	FunctionDef	"cmyk_cs_to_rgbk_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		976092	0					
ANR	976094	CompoundStatement		267:0:8057:8360	976092	0					
ANR	976095	IdentifierDeclStatement	frac rgb [ 3 ] ;	268:4:8063:8074	976092	0	True				
ANR	976096	IdentifierDecl	rgb [ 3 ]		976092	0					
ANR	976097	IdentifierDeclType	frac [ 3 ]		976092	0					
ANR	976098	Identifier	rgb		976092	1					
ANR	976099	PrimaryExpression	3		976092	2					
ANR	976100	IfStatement	if ( ( c == frac_0 ) && ( m == frac_0 ) && ( y == frac_0 ) )		976092	1					
ANR	976101	Condition	( c == frac_0 ) && ( m == frac_0 ) && ( y == frac_0 )	269:8:8084:8130	976092	0	True				
ANR	976102	AndExpression	( c == frac_0 ) && ( m == frac_0 ) && ( y == frac_0 )		976092	0		&&			
ANR	976103	EqualityExpression	c == frac_0		976092	0		==			
ANR	976104	Identifier	c		976092	0					
ANR	976105	Identifier	frac_0		976092	1					
ANR	976106	AndExpression	( m == frac_0 ) && ( y == frac_0 )		976092	1		&&			
ANR	976107	EqualityExpression	m == frac_0		976092	0		==			
ANR	976108	Identifier	m		976092	0					
ANR	976109	Identifier	frac_0		976092	1					
ANR	976110	EqualityExpression	y == frac_0		976092	1		==			
ANR	976111	Identifier	y		976092	0					
ANR	976112	Identifier	frac_0		976092	1					
ANR	976113	CompoundStatement		3:57:75:75	976092	1					
ANR	976114	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0	270:8:8143:8176	976092	0	True				
ANR	976115	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0		976092	0		=			
ANR	976116	ArrayIndexing	out [ 0 ]		976092	0					
ANR	976117	Identifier	out		976092	0					
ANR	976118	PrimaryExpression	0		976092	1					
ANR	976119	AssignmentExpression	out [ 1 ] = out [ 2 ] = frac_0		976092	1		=			
ANR	976120	ArrayIndexing	out [ 1 ]		976092	0					
ANR	976121	Identifier	out		976092	0					
ANR	976122	PrimaryExpression	1		976092	1					
ANR	976123	AssignmentExpression	out [ 2 ] = frac_0		976092	1		=			
ANR	976124	ArrayIndexing	out [ 2 ]		976092	0					
ANR	976125	Identifier	out		976092	0					
ANR	976126	PrimaryExpression	2		976092	1					
ANR	976127	Identifier	frac_0		976092	1					
ANR	976128	ExpressionStatement	out [ 3 ] = frac_1 - k	271:8:8186:8205	976092	1	True				
ANR	976129	AssignmentExpression	out [ 3 ] = frac_1 - k		976092	0		=			
ANR	976130	ArrayIndexing	out [ 3 ]		976092	0					
ANR	976131	Identifier	out		976092	0					
ANR	976132	PrimaryExpression	3		976092	1					
ANR	976133	AdditiveExpression	frac_1 - k		976092	1		-			
ANR	976134	Identifier	frac_1		976092	0					
ANR	976135	Identifier	k		976092	1					
ANR	976136	ElseStatement	else		976092	0					
ANR	976137	CompoundStatement		7:9:164:164	976092	0					
ANR	976138	ExpressionStatement	"color_cmyk_to_rgb ( c , m , y , k , NULL , rgb , dev -> memory )"	274:8:8232:8285	976092	0	True				
ANR	976139	CallExpression	"color_cmyk_to_rgb ( c , m , y , k , NULL , rgb , dev -> memory )"		976092	0					
ANR	976140	Callee	color_cmyk_to_rgb		976092	0					
ANR	976141	Identifier	color_cmyk_to_rgb		976092	0					
ANR	976142	ArgumentList	c		976092	1					
ANR	976143	Argument	c		976092	0					
ANR	976144	Identifier	c		976092	0					
ANR	976145	Argument	m		976092	1					
ANR	976146	Identifier	m		976092	0					
ANR	976147	Argument	y		976092	2					
ANR	976148	Identifier	y		976092	0					
ANR	976149	Argument	k		976092	3					
ANR	976150	Identifier	k		976092	0					
ANR	976151	Argument	NULL		976092	4					
ANR	976152	Identifier	NULL		976092	0					
ANR	976153	Argument	rgb		976092	5					
ANR	976154	Identifier	rgb		976092	0					
ANR	976155	Argument	dev -> memory		976092	6					
ANR	976156	PtrMemberAccess	dev -> memory		976092	0					
ANR	976157	Identifier	dev		976092	0					
ANR	976158	Identifier	memory		976092	1					
ANR	976159	ExpressionStatement	"rgb_cs_to_rgbk_cm ( dev , NULL , rgb [ 0 ] , rgb [ 1 ] , rgb [ 2 ] , out )"	275:8:8295:8352	976092	1	True				
ANR	976160	CallExpression	"rgb_cs_to_rgbk_cm ( dev , NULL , rgb [ 0 ] , rgb [ 1 ] , rgb [ 2 ] , out )"		976092	0					
ANR	976161	Callee	rgb_cs_to_rgbk_cm		976092	0					
ANR	976162	Identifier	rgb_cs_to_rgbk_cm		976092	0					
ANR	976163	ArgumentList	dev		976092	1					
ANR	976164	Argument	dev		976092	0					
ANR	976165	Identifier	dev		976092	0					
ANR	976166	Argument	NULL		976092	1					
ANR	976167	Identifier	NULL		976092	0					
ANR	976168	Argument	rgb [ 0 ]		976092	2					
ANR	976169	ArrayIndexing	rgb [ 0 ]		976092	0					
ANR	976170	Identifier	rgb		976092	0					
ANR	976171	PrimaryExpression	0		976092	1					
ANR	976172	Argument	rgb [ 1 ]		976092	3					
ANR	976173	ArrayIndexing	rgb [ 1 ]		976092	0					
ANR	976174	Identifier	rgb		976092	0					
ANR	976175	PrimaryExpression	1		976092	1					
ANR	976176	Argument	rgb [ 2 ]		976092	4					
ANR	976177	ArrayIndexing	rgb [ 2 ]		976092	0					
ANR	976178	Identifier	rgb		976092	0					
ANR	976179	PrimaryExpression	2		976092	1					
ANR	976180	Argument	out		976092	5					
ANR	976181	Identifier	out		976092	0					
ANR	976182	ReturnType	static void		976092	1					
ANR	976183	Identifier	cmyk_cs_to_rgbk_cm		976092	2					
ANR	976184	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		976092	3					
ANR	976185	Parameter	gx_device * dev	266:19:7996:8010	976092	0	True				
ANR	976186	ParameterType	gx_device *		976092	0					
ANR	976187	Identifier	dev		976092	1					
ANR	976188	Parameter	frac c	266:36:8013:8018	976092	1	True				
ANR	976189	ParameterType	frac		976092	0					
ANR	976190	Identifier	c		976092	1					
ANR	976191	Parameter	frac m	266:44:8021:8026	976092	2	True				
ANR	976192	ParameterType	frac		976092	0					
ANR	976193	Identifier	m		976092	1					
ANR	976194	Parameter	frac y	266:52:8029:8034	976092	3	True				
ANR	976195	ParameterType	frac		976092	0					
ANR	976196	Identifier	y		976092	1					
ANR	976197	Parameter	frac k	266:60:8037:8042	976092	4	True				
ANR	976198	ParameterType	frac		976092	0					
ANR	976199	Identifier	k		976092	1					
ANR	976200	Parameter	frac out [ ]	266:68:8045:8054	976092	5	True				
ANR	976201	ParameterType	frac [ ]		976092	0					
ANR	976202	Identifier	out		976092	1					
ANR	976203	CFGEntryNode	ENTRY		976092		True				
ANR	976204	CFGExitNode	EXIT		976092		True				
ANR	976205	Symbol	* dev		976092						
ANR	976206	Symbol	frac_1		976092						
ANR	976207	Symbol	c		976092						
ANR	976208	Symbol	NULL		976092						
ANR	976209	Symbol	k		976092						
ANR	976210	Symbol	rgb		976092						
ANR	976211	Symbol	m		976092						
ANR	976212	Symbol	out		976092						
ANR	976213	Symbol	dev -> memory		976092						
ANR	976214	Symbol	dev		976092						
ANR	976215	Symbol	* rgb		976092						
ANR	976216	Symbol	* out		976092						
ANR	976217	Symbol	y		976092						
ANR	976218	Symbol	frac_0		976092						
ANR	976219	Function	gray_cs_to_cmyk_cm	279:0:8363:8503							
ANR	976220	FunctionDef	"gray_cs_to_cmyk_cm (gx_device * dev , frac gray , frac out [ ])"		976219	0					
ANR	976221	CompoundStatement		281:0:8434:8503	976219	0					
ANR	976222	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0	282:4:8440:8473	976219	0	True				
ANR	976223	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = frac_0		976219	0		=			
ANR	976224	ArrayIndexing	out [ 0 ]		976219	0					
ANR	976225	Identifier	out		976219	0					
ANR	976226	PrimaryExpression	0		976219	1					
ANR	976227	AssignmentExpression	out [ 1 ] = out [ 2 ] = frac_0		976219	1		=			
ANR	976228	ArrayIndexing	out [ 1 ]		976219	0					
ANR	976229	Identifier	out		976219	0					
ANR	976230	PrimaryExpression	1		976219	1					
ANR	976231	AssignmentExpression	out [ 2 ] = frac_0		976219	1		=			
ANR	976232	ArrayIndexing	out [ 2 ]		976219	0					
ANR	976233	Identifier	out		976219	0					
ANR	976234	PrimaryExpression	2		976219	1					
ANR	976235	Identifier	frac_0		976219	1					
ANR	976236	ExpressionStatement	out [ 3 ] = frac_1 - gray	283:4:8479:8501	976219	1	True				
ANR	976237	AssignmentExpression	out [ 3 ] = frac_1 - gray		976219	0		=			
ANR	976238	ArrayIndexing	out [ 3 ]		976219	0					
ANR	976239	Identifier	out		976219	0					
ANR	976240	PrimaryExpression	3		976219	1					
ANR	976241	AdditiveExpression	frac_1 - gray		976219	1		-			
ANR	976242	Identifier	frac_1		976219	0					
ANR	976243	Identifier	gray		976219	1					
ANR	976244	ReturnType	static void		976219	1					
ANR	976245	Identifier	gray_cs_to_cmyk_cm		976219	2					
ANR	976246	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		976219	3					
ANR	976247	Parameter	gx_device * dev	280:19:8394:8408	976219	0	True				
ANR	976248	ParameterType	gx_device *		976219	0					
ANR	976249	Identifier	dev		976219	1					
ANR	976250	Parameter	frac gray	280:36:8411:8419	976219	1	True				
ANR	976251	ParameterType	frac		976219	0					
ANR	976252	Identifier	gray		976219	1					
ANR	976253	Parameter	frac out [ ]	280:47:8422:8431	976219	2	True				
ANR	976254	ParameterType	frac [ ]		976219	0					
ANR	976255	Identifier	out		976219	1					
ANR	976256	CFGEntryNode	ENTRY		976219		True				
ANR	976257	CFGExitNode	EXIT		976219		True				
ANR	976258	Symbol	frac_1		976219						
ANR	976259	Symbol	gray		976219						
ANR	976260	Symbol	dev		976219						
ANR	976261	Symbol	* out		976219						
ANR	976262	Symbol	frac_0		976219						
ANR	976263	Symbol	out		976219						
ANR	976264	Function	rgb_cs_to_cmyk_cm	301:0:9212:9636							
ANR	976265	FunctionDef	"rgb_cs_to_cmyk_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		976264	0					
ANR	976266	CompoundStatement		304:0:9344:9636	976264	0					
ANR	976267	IfStatement	if ( pgs != 0 )		976264	0					
ANR	976268	Condition	pgs != 0	305:8:9354:9361	976264	0	True				
ANR	976269	EqualityExpression	pgs != 0		976264	0		!=			
ANR	976270	Identifier	pgs		976264	0					
ANR	976271	PrimaryExpression	0		976264	1					
ANR	976272	ExpressionStatement	"color_rgb_to_cmyk ( r , g , b , pgs , out , dev -> memory )"	306:8:9372:9421	976264	1	True				
ANR	976273	CallExpression	"color_rgb_to_cmyk ( r , g , b , pgs , out , dev -> memory )"		976264	0					
ANR	976274	Callee	color_rgb_to_cmyk		976264	0					
ANR	976275	Identifier	color_rgb_to_cmyk		976264	0					
ANR	976276	ArgumentList	r		976264	1					
ANR	976277	Argument	r		976264	0					
ANR	976278	Identifier	r		976264	0					
ANR	976279	Argument	g		976264	1					
ANR	976280	Identifier	g		976264	0					
ANR	976281	Argument	b		976264	2					
ANR	976282	Identifier	b		976264	0					
ANR	976283	Argument	pgs		976264	3					
ANR	976284	Identifier	pgs		976264	0					
ANR	976285	Argument	out		976264	4					
ANR	976286	Identifier	out		976264	0					
ANR	976287	Argument	dev -> memory		976264	5					
ANR	976288	PtrMemberAccess	dev -> memory		976264	0					
ANR	976289	Identifier	dev		976264	0					
ANR	976290	Identifier	memory		976264	1					
ANR	976291	ElseStatement	else		976264	0					
ANR	976292	CompoundStatement		6:8:161:190	976264	0					
ANR	976293	IdentifierDeclStatement	"frac c = frac_1 - r , m = frac_1 - g , y = frac_1 - b ;"	308:8:9442:9496	976264	0	True				
ANR	976294	IdentifierDecl	c = frac_1 - r		976264	0					
ANR	976295	IdentifierDeclType	frac		976264	0					
ANR	976296	Identifier	c		976264	1					
ANR	976297	AssignmentExpression	c = frac_1 - r		976264	2		=			
ANR	976298	Identifier	c		976264	0					
ANR	976299	AdditiveExpression	frac_1 - r		976264	1		-			
ANR	976300	Identifier	frac_1		976264	0					
ANR	976301	Identifier	r		976264	1					
ANR	976302	IdentifierDecl	m = frac_1 - g		976264	1					
ANR	976303	IdentifierDeclType	frac		976264	0					
ANR	976304	Identifier	m		976264	1					
ANR	976305	AssignmentExpression	m = frac_1 - g		976264	2		=			
ANR	976306	Identifier	m		976264	0					
ANR	976307	AdditiveExpression	frac_1 - g		976264	1		-			
ANR	976308	Identifier	frac_1		976264	0					
ANR	976309	Identifier	g		976264	1					
ANR	976310	IdentifierDecl	y = frac_1 - b		976264	2					
ANR	976311	IdentifierDeclType	frac		976264	0					
ANR	976312	Identifier	y		976264	1					
ANR	976313	AssignmentExpression	y = frac_1 - b		976264	2		=			
ANR	976314	Identifier	y		976264	0					
ANR	976315	AdditiveExpression	frac_1 - b		976264	1		-			
ANR	976316	Identifier	frac_1		976264	0					
ANR	976317	Identifier	b		976264	1					
ANR	976318	IdentifierDeclStatement	"frac k = min ( c , min ( m , y ) ) ;"	309:8:9506:9535	976264	1	True				
ANR	976319	IdentifierDecl	"k = min ( c , min ( m , y ) )"		976264	0					
ANR	976320	IdentifierDeclType	frac		976264	0					
ANR	976321	Identifier	k		976264	1					
ANR	976322	AssignmentExpression	"k = min ( c , min ( m , y ) )"		976264	2		=			
ANR	976323	Identifier	k		976264	0					
ANR	976324	CallExpression	"min ( c , min ( m , y ) )"		976264	1					
ANR	976325	Callee	min		976264	0					
ANR	976326	Identifier	min		976264	0					
ANR	976327	ArgumentList	c		976264	1					
ANR	976328	Argument	c		976264	0					
ANR	976329	Identifier	c		976264	0					
ANR	976330	Argument	"min ( m , y )"		976264	1					
ANR	976331	CallExpression	"min ( m , y )"		976264	0					
ANR	976332	Callee	min		976264	0					
ANR	976333	Identifier	min		976264	0					
ANR	976334	ArgumentList	m		976264	1					
ANR	976335	Argument	m		976264	0					
ANR	976336	Identifier	m		976264	0					
ANR	976337	Argument	y		976264	1					
ANR	976338	Identifier	y		976264	0					
ANR	976339	ExpressionStatement	out [ 0 ] = c - k	311:8:9546:9560	976264	2	True				
ANR	976340	AssignmentExpression	out [ 0 ] = c - k		976264	0		=			
ANR	976341	ArrayIndexing	out [ 0 ]		976264	0					
ANR	976342	Identifier	out		976264	0					
ANR	976343	PrimaryExpression	0		976264	1					
ANR	976344	AdditiveExpression	c - k		976264	1		-			
ANR	976345	Identifier	c		976264	0					
ANR	976346	Identifier	k		976264	1					
ANR	976347	ExpressionStatement	out [ 1 ] = m - k	312:8:9570:9584	976264	3	True				
ANR	976348	AssignmentExpression	out [ 1 ] = m - k		976264	0		=			
ANR	976349	ArrayIndexing	out [ 1 ]		976264	0					
ANR	976350	Identifier	out		976264	0					
ANR	976351	PrimaryExpression	1		976264	1					
ANR	976352	AdditiveExpression	m - k		976264	1		-			
ANR	976353	Identifier	m		976264	0					
ANR	976354	Identifier	k		976264	1					
ANR	976355	ExpressionStatement	out [ 2 ] = y - k	313:8:9594:9608	976264	4	True				
ANR	976356	AssignmentExpression	out [ 2 ] = y - k		976264	0		=			
ANR	976357	ArrayIndexing	out [ 2 ]		976264	0					
ANR	976358	Identifier	out		976264	0					
ANR	976359	PrimaryExpression	2		976264	1					
ANR	976360	AdditiveExpression	y - k		976264	1		-			
ANR	976361	Identifier	y		976264	0					
ANR	976362	Identifier	k		976264	1					
ANR	976363	ExpressionStatement	out [ 3 ] = k	314:8:9618:9628	976264	5	True				
ANR	976364	AssignmentExpression	out [ 3 ] = k		976264	0		=			
ANR	976365	ArrayIndexing	out [ 3 ]		976264	0					
ANR	976366	Identifier	out		976264	0					
ANR	976367	PrimaryExpression	3		976264	1					
ANR	976368	Identifier	k		976264	1					
ANR	976369	ReturnType	static void		976264	1					
ANR	976370	Identifier	rgb_cs_to_cmyk_cm		976264	2					
ANR	976371	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		976264	3					
ANR	976372	Parameter	gx_device * dev	302:18:9242:9256	976264	0	True				
ANR	976373	ParameterType	gx_device *		976264	0					
ANR	976374	Identifier	dev		976264	1					
ANR	976375	Parameter	const gs_gstate * pgs	302:35:9259:9278	976264	1	True				
ANR	976376	ParameterType	const gs_gstate *		976264	0					
ANR	976377	Identifier	pgs		976264	1					
ANR	976378	Parameter	frac r	303:27:9308:9313	976264	2	True				
ANR	976379	ParameterType	frac		976264	0					
ANR	976380	Identifier	r		976264	1					
ANR	976381	Parameter	frac g	303:35:9316:9321	976264	3	True				
ANR	976382	ParameterType	frac		976264	0					
ANR	976383	Identifier	g		976264	1					
ANR	976384	Parameter	frac b	303:43:9324:9329	976264	4	True				
ANR	976385	ParameterType	frac		976264	0					
ANR	976386	Identifier	b		976264	1					
ANR	976387	Parameter	frac out [ ]	303:51:9332:9341	976264	5	True				
ANR	976388	ParameterType	frac [ ]		976264	0					
ANR	976389	Identifier	out		976264	1					
ANR	976390	CFGEntryNode	ENTRY		976264		True				
ANR	976391	CFGExitNode	EXIT		976264		True				
ANR	976392	Symbol	* dev		976264						
ANR	976393	Symbol	b		976264						
ANR	976394	Symbol	frac_1		976264						
ANR	976395	Symbol	c		976264						
ANR	976396	Symbol	g		976264						
ANR	976397	Symbol	k		976264						
ANR	976398	Symbol	m		976264						
ANR	976399	Symbol	out		976264						
ANR	976400	Symbol	r		976264						
ANR	976401	Symbol	dev -> memory		976264						
ANR	976402	Symbol	min		976264						
ANR	976403	Symbol	dev		976264						
ANR	976404	Symbol	* out		976264						
ANR	976405	Symbol	y		976264						
ANR	976406	Symbol	pgs		976264						
ANR	976407	Function	cmyk_cs_to_cmyk_cm	318:0:9639:9790							
ANR	976408	FunctionDef	"cmyk_cs_to_cmyk_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		976407	0					
ANR	976409	CompoundStatement		320:0:9724:9790	976407	0					
ANR	976410	ExpressionStatement	out [ 0 ] = c	321:4:9730:9740	976407	0	True				
ANR	976411	AssignmentExpression	out [ 0 ] = c		976407	0		=			
ANR	976412	ArrayIndexing	out [ 0 ]		976407	0					
ANR	976413	Identifier	out		976407	0					
ANR	976414	PrimaryExpression	0		976407	1					
ANR	976415	Identifier	c		976407	1					
ANR	976416	ExpressionStatement	out [ 1 ] = m	322:4:9746:9756	976407	1	True				
ANR	976417	AssignmentExpression	out [ 1 ] = m		976407	0		=			
ANR	976418	ArrayIndexing	out [ 1 ]		976407	0					
ANR	976419	Identifier	out		976407	0					
ANR	976420	PrimaryExpression	1		976407	1					
ANR	976421	Identifier	m		976407	1					
ANR	976422	ExpressionStatement	out [ 2 ] = y	323:4:9762:9772	976407	2	True				
ANR	976423	AssignmentExpression	out [ 2 ] = y		976407	0		=			
ANR	976424	ArrayIndexing	out [ 2 ]		976407	0					
ANR	976425	Identifier	out		976407	0					
ANR	976426	PrimaryExpression	2		976407	1					
ANR	976427	Identifier	y		976407	1					
ANR	976428	ExpressionStatement	out [ 3 ] = k	324:4:9778:9788	976407	3	True				
ANR	976429	AssignmentExpression	out [ 3 ] = k		976407	0		=			
ANR	976430	ArrayIndexing	out [ 3 ]		976407	0					
ANR	976431	Identifier	out		976407	0					
ANR	976432	PrimaryExpression	3		976407	1					
ANR	976433	Identifier	k		976407	1					
ANR	976434	ReturnType	void		976407	1					
ANR	976435	Identifier	cmyk_cs_to_cmyk_cm		976407	2					
ANR	976436	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		976407	3					
ANR	976437	Parameter	gx_device * dev	319:19:9663:9677	976407	0	True				
ANR	976438	ParameterType	gx_device *		976407	0					
ANR	976439	Identifier	dev		976407	1					
ANR	976440	Parameter	frac c	319:36:9680:9685	976407	1	True				
ANR	976441	ParameterType	frac		976407	0					
ANR	976442	Identifier	c		976407	1					
ANR	976443	Parameter	frac m	319:44:9688:9693	976407	2	True				
ANR	976444	ParameterType	frac		976407	0					
ANR	976445	Identifier	m		976407	1					
ANR	976446	Parameter	frac y	319:52:9696:9701	976407	3	True				
ANR	976447	ParameterType	frac		976407	0					
ANR	976448	Identifier	y		976407	1					
ANR	976449	Parameter	frac k	319:60:9704:9709	976407	4	True				
ANR	976450	ParameterType	frac		976407	0					
ANR	976451	Identifier	k		976407	1					
ANR	976452	Parameter	frac out [ ]	319:68:9712:9721	976407	5	True				
ANR	976453	ParameterType	frac [ ]		976407	0					
ANR	976454	Identifier	out		976407	1					
ANR	976455	CFGEntryNode	ENTRY		976407		True				
ANR	976456	CFGExitNode	EXIT		976407		True				
ANR	976457	Symbol	c		976407						
ANR	976458	Symbol	dev		976407						
ANR	976459	Symbol	* out		976407						
ANR	976460	Symbol	y		976407						
ANR	976461	Symbol	k		976407						
ANR	976462	Symbol	m		976407						
ANR	976463	Symbol	out		976407						
ANR	976464	DeclStmt									
ANR	976465	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	DeviceGray_procs
ANR	976466	DeclStmt									
ANR	976467	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	DeviceRGB_procs
ANR	976468	DeclStmt									
ANR	976469	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	DeviceCMYK_procs
ANR	976470	DeclStmt									
ANR	976471	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	DeviceRGBK_procs
ANR	976472	Function	gx_default_DevGray_get_color_mapping_procs	349:0:10470:10598							
ANR	976473	FunctionDef	gx_default_DevGray_get_color_mapping_procs (const gx_device * dev)		976472	0					
ANR	976474	CompoundStatement		351:0:10566:10598	976472	0					
ANR	976475	ReturnStatement	return & DeviceGray_procs ;	352:4:10572:10596	976472	0	True				
ANR	976476	UnaryOperationExpression	& DeviceGray_procs		976472	0					
ANR	976477	UnaryOperator	&		976472	0					
ANR	976478	Identifier	DeviceGray_procs		976472	1					
ANR	976479	ReturnType	const gx_cm_color_map_procs *		976472	1					
ANR	976480	Identifier	gx_default_DevGray_get_color_mapping_procs		976472	2					
ANR	976481	ParameterList	const gx_device * dev		976472	3					
ANR	976482	Parameter	const gx_device * dev	350:43:10543:10563	976472	0	True				
ANR	976483	ParameterType	const gx_device *		976472	0					
ANR	976484	Identifier	dev		976472	1					
ANR	976485	CFGEntryNode	ENTRY		976472		True				
ANR	976486	CFGExitNode	EXIT		976472		True				
ANR	976487	Symbol	& DeviceGray_procs		976472						
ANR	976488	Symbol	dev		976472						
ANR	976489	Function	gx_default_DevRGB_get_color_mapping_procs	355:0:10601:10727							
ANR	976490	FunctionDef	gx_default_DevRGB_get_color_mapping_procs (const gx_device * dev)		976489	0					
ANR	976491	CompoundStatement		357:0:10696:10727	976489	0					
ANR	976492	ReturnStatement	return & DeviceRGB_procs ;	358:4:10702:10725	976489	0	True				
ANR	976493	UnaryOperationExpression	& DeviceRGB_procs		976489	0					
ANR	976494	UnaryOperator	&		976489	0					
ANR	976495	Identifier	DeviceRGB_procs		976489	1					
ANR	976496	ReturnType	const gx_cm_color_map_procs *		976489	1					
ANR	976497	Identifier	gx_default_DevRGB_get_color_mapping_procs		976489	2					
ANR	976498	ParameterList	const gx_device * dev		976489	3					
ANR	976499	Parameter	const gx_device * dev	356:42:10673:10693	976489	0	True				
ANR	976500	ParameterType	const gx_device *		976489	0					
ANR	976501	Identifier	dev		976489	1					
ANR	976502	CFGEntryNode	ENTRY		976489		True				
ANR	976503	CFGExitNode	EXIT		976489		True				
ANR	976504	Symbol	dev		976489						
ANR	976505	Symbol	& DeviceRGB_procs		976489						
ANR	976506	Function	gx_default_DevCMYK_get_color_mapping_procs	361:0:10730:10858							
ANR	976507	FunctionDef	gx_default_DevCMYK_get_color_mapping_procs (const gx_device * dev)		976506	0					
ANR	976508	CompoundStatement		363:0:10826:10858	976506	0					
ANR	976509	ReturnStatement	return & DeviceCMYK_procs ;	364:4:10832:10856	976506	0	True				
ANR	976510	UnaryOperationExpression	& DeviceCMYK_procs		976506	0					
ANR	976511	UnaryOperator	&		976506	0					
ANR	976512	Identifier	DeviceCMYK_procs		976506	1					
ANR	976513	ReturnType	const gx_cm_color_map_procs *		976506	1					
ANR	976514	Identifier	gx_default_DevCMYK_get_color_mapping_procs		976506	2					
ANR	976515	ParameterList	const gx_device * dev		976506	3					
ANR	976516	Parameter	const gx_device * dev	362:43:10803:10823	976506	0	True				
ANR	976517	ParameterType	const gx_device *		976506	0					
ANR	976518	Identifier	dev		976506	1					
ANR	976519	CFGEntryNode	ENTRY		976506		True				
ANR	976520	CFGExitNode	EXIT		976506		True				
ANR	976521	Symbol	dev		976506						
ANR	976522	Symbol	& DeviceCMYK_procs		976506						
ANR	976523	Function	gx_default_DevRGBK_get_color_mapping_procs	367:0:10861:10989							
ANR	976524	FunctionDef	gx_default_DevRGBK_get_color_mapping_procs (const gx_device * dev)		976523	0					
ANR	976525	CompoundStatement		369:0:10957:10989	976523	0					
ANR	976526	ReturnStatement	return & DeviceRGBK_procs ;	370:4:10963:10987	976523	0	True				
ANR	976527	UnaryOperationExpression	& DeviceRGBK_procs		976523	0					
ANR	976528	UnaryOperator	&		976523	0					
ANR	976529	Identifier	DeviceRGBK_procs		976523	1					
ANR	976530	ReturnType	const gx_cm_color_map_procs *		976523	1					
ANR	976531	Identifier	gx_default_DevRGBK_get_color_mapping_procs		976523	2					
ANR	976532	ParameterList	const gx_device * dev		976523	3					
ANR	976533	Parameter	const gx_device * dev	368:43:10934:10954	976523	0	True				
ANR	976534	ParameterType	const gx_device *		976523	0					
ANR	976535	Identifier	dev		976523	1					
ANR	976536	CFGEntryNode	ENTRY		976523		True				
ANR	976537	CFGExitNode	EXIT		976523		True				
ANR	976538	Symbol	dev		976523						
ANR	976539	Symbol	& DeviceRGBK_procs		976523						
ANR	976540	Function	gx_error_get_color_mapping_procs	373:0:10992:11863							
ANR	976541	FunctionDef	gx_error_get_color_mapping_procs (const gx_device * dev)		976540	0					
ANR	976542	CompoundStatement		375:0:11078:11863	976540	0					
ANR	976543	ExpressionStatement	"emprintf1 ( dev -> memory , ""No get_color_mapping_procs proc defined for device '%s'\\n"" , dev -> dname )"	381:4:11351:11474	976540	0	True				
ANR	976544	CallExpression	"emprintf1 ( dev -> memory , ""No get_color_mapping_procs proc defined for device '%s'\\n"" , dev -> dname )"		976540	0					
ANR	976545	Callee	emprintf1		976540	0					
ANR	976546	Identifier	emprintf1		976540	0					
ANR	976547	ArgumentList	dev -> memory		976540	1					
ANR	976548	Argument	dev -> memory		976540	0					
ANR	976549	PtrMemberAccess	dev -> memory		976540	0					
ANR	976550	Identifier	dev		976540	0					
ANR	976551	Identifier	memory		976540	1					
ANR	976552	Argument	"""No get_color_mapping_procs proc defined for device '%s'\\n"""		976540	1					
ANR	976553	PrimaryExpression	"""No get_color_mapping_procs proc defined for device '%s'\\n"""		976540	0					
ANR	976554	Argument	dev -> dname		976540	2					
ANR	976555	PtrMemberAccess	dev -> dname		976540	0					
ANR	976556	Identifier	dev		976540	0					
ANR	976557	Identifier	dname		976540	1					
ANR	976558	SwitchStatement	switch ( dev -> color_info . num_components )		976540	1					
ANR	976559	Condition	dev -> color_info . num_components	384:12:11488:11517	976540	0	True				
ANR	976560	MemberAccess	dev -> color_info . num_components		976540	0					
ANR	976561	PtrMemberAccess	dev -> color_info		976540	0					
ANR	976562	Identifier	dev		976540	0					
ANR	976563	Identifier	color_info		976540	1					
ANR	976564	Identifier	num_components		976540	1					
ANR	976565	CompoundStatement		10:44:441:441	976540	1					
ANR	976566	Label	case 1 :	385:6:11528:11534	976540	0	True				
ANR	976567	ReturnStatement	return gx_default_DevGray_get_color_mapping_procs ( dev ) ;	386:8:11585:11639	976540	1	True				
ANR	976568	CallExpression	gx_default_DevGray_get_color_mapping_procs ( dev )		976540	0					
ANR	976569	Callee	gx_default_DevGray_get_color_mapping_procs		976540	0					
ANR	976570	Identifier	gx_default_DevGray_get_color_mapping_procs		976540	0					
ANR	976571	ArgumentList	dev		976540	1					
ANR	976572	Argument	dev		976540	0					
ANR	976573	Identifier	dev		976540	0					
ANR	976574	Label	case 3 :	388:6:11648:11654	976540	2	True				
ANR	976575	ReturnStatement	return gx_default_DevRGB_get_color_mapping_procs ( dev ) ;	389:8:11664:11717	976540	3	True				
ANR	976576	CallExpression	gx_default_DevRGB_get_color_mapping_procs ( dev )		976540	0					
ANR	976577	Callee	gx_default_DevRGB_get_color_mapping_procs		976540	0					
ANR	976578	Identifier	gx_default_DevRGB_get_color_mapping_procs		976540	0					
ANR	976579	ArgumentList	dev		976540	1					
ANR	976580	Argument	dev		976540	0					
ANR	976581	Identifier	dev		976540	0					
ANR	976582	Label	case 4 :	391:6:11726:11732	976540	4	True				
ANR	976583	Label	default :	392:6:11740:11747	976540	5	True				
ANR	976584	Identifier	default		976540	0					
ANR	976585	ReturnStatement	return gx_default_DevCMYK_get_color_mapping_procs ( dev ) ;	393:8:11801:11855	976540	6	True				
ANR	976586	CallExpression	gx_default_DevCMYK_get_color_mapping_procs ( dev )		976540	0					
ANR	976587	Callee	gx_default_DevCMYK_get_color_mapping_procs		976540	0					
ANR	976588	Identifier	gx_default_DevCMYK_get_color_mapping_procs		976540	0					
ANR	976589	ArgumentList	dev		976540	1					
ANR	976590	Argument	dev		976540	0					
ANR	976591	Identifier	dev		976540	0					
ANR	976592	ReturnType	const gx_cm_color_map_procs *		976540	1					
ANR	976593	Identifier	gx_error_get_color_mapping_procs		976540	2					
ANR	976594	ParameterList	const gx_device * dev		976540	3					
ANR	976595	Parameter	const gx_device * dev	374:33:11055:11075	976540	0	True				
ANR	976596	ParameterType	const gx_device *		976540	0					
ANR	976597	Identifier	dev		976540	1					
ANR	976598	CFGEntryNode	ENTRY		976540		True				
ANR	976599	CFGExitNode	EXIT		976540		True				
ANR	976600	Symbol	* dev		976540						
ANR	976601	Symbol	dev -> memory		976540						
ANR	976602	Symbol	dev		976540						
ANR	976603	Symbol	dev -> color_info . num_components		976540						
ANR	976604	Symbol	dev -> dname		976540						
ANR	976605	Symbol	gx_default_DevRGB_get_color_mapping_procs		976540						
ANR	976606	Symbol	gx_default_DevCMYK_get_color_mapping_procs		976540						
ANR	976607	Symbol	gx_default_DevGray_get_color_mapping_procs		976540						
ANR	976608	Symbol	dev -> color_info		976540						
ANR	976609	Function	gx_default_DevGray_get_color_comp_index	403:0:12165:12540							
ANR	976610	FunctionDef	"gx_default_DevGray_get_color_comp_index (gx_device * dev , const char * pname , int name_size , int component_type)"		976609	0					
ANR	976611	CompoundStatement		406:0:12323:12540	976609	0					
ANR	976612	IfStatement	"if ( compare_color_names ( pname , name_size , ""Gray"" ) || compare_color_names ( pname , name_size , ""Grey"" ) )"		976609	0					
ANR	976613	Condition	"compare_color_names ( pname , name_size , ""Gray"" ) || compare_color_names ( pname , name_size , ""Grey"" )"	407:8:12333:12434	976609	0	True				
ANR	976614	OrExpression	"compare_color_names ( pname , name_size , ""Gray"" ) || compare_color_names ( pname , name_size , ""Grey"" )"		976609	0		||			
ANR	976615	CallExpression	"compare_color_names ( pname , name_size , ""Gray"" )"		976609	0					
ANR	976616	Callee	compare_color_names		976609	0					
ANR	976617	Identifier	compare_color_names		976609	0					
ANR	976618	ArgumentList	pname		976609	1					
ANR	976619	Argument	pname		976609	0					
ANR	976620	Identifier	pname		976609	0					
ANR	976621	Argument	name_size		976609	1					
ANR	976622	Identifier	name_size		976609	0					
ANR	976623	Argument	"""Gray"""		976609	2					
ANR	976624	PrimaryExpression	"""Gray"""		976609	0					
ANR	976625	CallExpression	"compare_color_names ( pname , name_size , ""Grey"" )"		976609	1					
ANR	976626	Callee	compare_color_names		976609	0					
ANR	976627	Identifier	compare_color_names		976609	0					
ANR	976628	ArgumentList	pname		976609	1					
ANR	976629	Argument	pname		976609	0					
ANR	976630	Identifier	pname		976609	0					
ANR	976631	Argument	name_size		976609	1					
ANR	976632	Identifier	name_size		976609	0					
ANR	976633	Argument	"""Grey"""		976609	2					
ANR	976634	PrimaryExpression	"""Grey"""		976609	0					
ANR	976635	ReturnStatement	return 0 ;	409:8:12445:12453	976609	1	True				
ANR	976636	PrimaryExpression	0		976609	0					
ANR	976637	ElseStatement	else		976609	0					
ANR	976638	ReturnStatement	return - 1 ;	411:8:12472:12481	976609	0	True				
ANR	976639	UnaryOperationExpression	- 1		976609	0					
ANR	976640	UnaryOperator	-		976609	0					
ANR	976641	PrimaryExpression	1		976609	1					
ANR	976642	ReturnType	int		976609	1					
ANR	976643	Identifier	gx_default_DevGray_get_color_comp_index		976609	2					
ANR	976644	ParameterList	"gx_device * dev , const char * pname , int name_size , int component_type"		976609	3					
ANR	976645	Parameter	gx_device * dev	404:40:12209:12223	976609	0	True				
ANR	976646	ParameterType	gx_device *		976609	0					
ANR	976647	Identifier	dev		976609	1					
ANR	976648	Parameter	const char * pname	404:57:12226:12243	976609	1	True				
ANR	976649	ParameterType	const char *		976609	0					
ANR	976650	Identifier	pname		976609	1					
ANR	976651	Parameter	int name_size	405:42:12288:12300	976609	2	True				
ANR	976652	ParameterType	int		976609	0					
ANR	976653	Identifier	name_size		976609	1					
ANR	976654	Parameter	int component_type	405:57:12303:12320	976609	3	True				
ANR	976655	ParameterType	int		976609	0					
ANR	976656	Identifier	component_type		976609	1					
ANR	976657	CFGEntryNode	ENTRY		976609		True				
ANR	976658	CFGExitNode	EXIT		976609		True				
ANR	976659	Symbol	component_type		976609						
ANR	976660	Symbol	dev		976609						
ANR	976661	Symbol	compare_color_names		976609						
ANR	976662	Symbol	pname		976609						
ANR	976663	Symbol	name_size		976609						
ANR	976664	Function	gx_default_DevRGB_get_color_comp_index	415:0:12610:13074							
ANR	976665	FunctionDef	"gx_default_DevRGB_get_color_comp_index (gx_device * dev , const char * pname , int name_size , int component_type)"		976664	0					
ANR	976666	CompoundStatement		418:0:12768:13074	976664	0					
ANR	976667	IfStatement	"if ( compare_color_names ( pname , name_size , ""Red"" ) )"		976664	0					
ANR	976668	Condition	"compare_color_names ( pname , name_size , ""Red"" )"	419:8:12778:12821	976664	0	True				
ANR	976669	CallExpression	"compare_color_names ( pname , name_size , ""Red"" )"		976664	0					
ANR	976670	Callee	compare_color_names		976664	0					
ANR	976671	Identifier	compare_color_names		976664	0					
ANR	976672	ArgumentList	pname		976664	1					
ANR	976673	Argument	pname		976664	0					
ANR	976674	Identifier	pname		976664	0					
ANR	976675	Argument	name_size		976664	1					
ANR	976676	Identifier	name_size		976664	0					
ANR	976677	Argument	"""Red"""		976664	2					
ANR	976678	PrimaryExpression	"""Red"""		976664	0					
ANR	976679	ReturnStatement	return 0 ;	420:8:12832:12840	976664	1	True				
ANR	976680	PrimaryExpression	0		976664	0					
ANR	976681	IfStatement	"if ( compare_color_names ( pname , name_size , ""Green"" ) )"		976664	1					
ANR	976682	Condition	"compare_color_names ( pname , name_size , ""Green"" )"	421:8:12850:12895	976664	0	True				
ANR	976683	CallExpression	"compare_color_names ( pname , name_size , ""Green"" )"		976664	0					
ANR	976684	Callee	compare_color_names		976664	0					
ANR	976685	Identifier	compare_color_names		976664	0					
ANR	976686	ArgumentList	pname		976664	1					
ANR	976687	Argument	pname		976664	0					
ANR	976688	Identifier	pname		976664	0					
ANR	976689	Argument	name_size		976664	1					
ANR	976690	Identifier	name_size		976664	0					
ANR	976691	Argument	"""Green"""		976664	2					
ANR	976692	PrimaryExpression	"""Green"""		976664	0					
ANR	976693	ReturnStatement	return 1 ;	422:8:12906:12914	976664	1	True				
ANR	976694	PrimaryExpression	1		976664	0					
ANR	976695	IfStatement	"if ( compare_color_names ( pname , name_size , ""Blue"" ) )"		976664	2					
ANR	976696	Condition	"compare_color_names ( pname , name_size , ""Blue"" )"	423:8:12924:12968	976664	0	True				
ANR	976697	CallExpression	"compare_color_names ( pname , name_size , ""Blue"" )"		976664	0					
ANR	976698	Callee	compare_color_names		976664	0					
ANR	976699	Identifier	compare_color_names		976664	0					
ANR	976700	ArgumentList	pname		976664	1					
ANR	976701	Argument	pname		976664	0					
ANR	976702	Identifier	pname		976664	0					
ANR	976703	Argument	name_size		976664	1					
ANR	976704	Identifier	name_size		976664	0					
ANR	976705	Argument	"""Blue"""		976664	2					
ANR	976706	PrimaryExpression	"""Blue"""		976664	0					
ANR	976707	ReturnStatement	return 2 ;	424:8:12979:12987	976664	1	True				
ANR	976708	PrimaryExpression	2		976664	0					
ANR	976709	ElseStatement	else		976664	0					
ANR	976710	ReturnStatement	return - 1 ;	426:8:13006:13015	976664	0	True				
ANR	976711	UnaryOperationExpression	- 1		976664	0					
ANR	976712	UnaryOperator	-		976664	0					
ANR	976713	PrimaryExpression	1		976664	1					
ANR	976714	ReturnType	int		976664	1					
ANR	976715	Identifier	gx_default_DevRGB_get_color_comp_index		976664	2					
ANR	976716	ParameterList	"gx_device * dev , const char * pname , int name_size , int component_type"		976664	3					
ANR	976717	Parameter	gx_device * dev	416:39:12653:12667	976664	0	True				
ANR	976718	ParameterType	gx_device *		976664	0					
ANR	976719	Identifier	dev		976664	1					
ANR	976720	Parameter	const char * pname	416:56:12670:12687	976664	1	True				
ANR	976721	ParameterType	const char *		976664	0					
ANR	976722	Identifier	pname		976664	1					
ANR	976723	Parameter	int name_size	417:43:12733:12745	976664	2	True				
ANR	976724	ParameterType	int		976664	0					
ANR	976725	Identifier	name_size		976664	1					
ANR	976726	Parameter	int component_type	417:58:12748:12765	976664	3	True				
ANR	976727	ParameterType	int		976664	0					
ANR	976728	Identifier	component_type		976664	1					
ANR	976729	CFGEntryNode	ENTRY		976664		True				
ANR	976730	CFGExitNode	EXIT		976664		True				
ANR	976731	Symbol	component_type		976664						
ANR	976732	Symbol	dev		976664						
ANR	976733	Symbol	compare_color_names		976664						
ANR	976734	Symbol	pname		976664						
ANR	976735	Symbol	name_size		976664						
ANR	976736	Function	gx_default_DevCMYK_get_color_comp_index	430:0:13145:13690							
ANR	976737	FunctionDef	"gx_default_DevCMYK_get_color_comp_index (gx_device * dev , const char * pname , int name_size , int component_type)"		976736	0					
ANR	976738	CompoundStatement		433:0:13305:13690	976736	0					
ANR	976739	IfStatement	"if ( compare_color_names ( pname , name_size , ""Cyan"" ) )"		976736	0					
ANR	976740	Condition	"compare_color_names ( pname , name_size , ""Cyan"" )"	434:8:13315:13359	976736	0	True				
ANR	976741	CallExpression	"compare_color_names ( pname , name_size , ""Cyan"" )"		976736	0					
ANR	976742	Callee	compare_color_names		976736	0					
ANR	976743	Identifier	compare_color_names		976736	0					
ANR	976744	ArgumentList	pname		976736	1					
ANR	976745	Argument	pname		976736	0					
ANR	976746	Identifier	pname		976736	0					
ANR	976747	Argument	name_size		976736	1					
ANR	976748	Identifier	name_size		976736	0					
ANR	976749	Argument	"""Cyan"""		976736	2					
ANR	976750	PrimaryExpression	"""Cyan"""		976736	0					
ANR	976751	ReturnStatement	return 0 ;	435:8:13370:13378	976736	1	True				
ANR	976752	PrimaryExpression	0		976736	0					
ANR	976753	IfStatement	"if ( compare_color_names ( pname , name_size , ""Magenta"" ) )"		976736	1					
ANR	976754	Condition	"compare_color_names ( pname , name_size , ""Magenta"" )"	436:8:13388:13435	976736	0	True				
ANR	976755	CallExpression	"compare_color_names ( pname , name_size , ""Magenta"" )"		976736	0					
ANR	976756	Callee	compare_color_names		976736	0					
ANR	976757	Identifier	compare_color_names		976736	0					
ANR	976758	ArgumentList	pname		976736	1					
ANR	976759	Argument	pname		976736	0					
ANR	976760	Identifier	pname		976736	0					
ANR	976761	Argument	name_size		976736	1					
ANR	976762	Identifier	name_size		976736	0					
ANR	976763	Argument	"""Magenta"""		976736	2					
ANR	976764	PrimaryExpression	"""Magenta"""		976736	0					
ANR	976765	ReturnStatement	return 1 ;	437:8:13446:13454	976736	1	True				
ANR	976766	PrimaryExpression	1		976736	0					
ANR	976767	IfStatement	"if ( compare_color_names ( pname , name_size , ""Yellow"" ) )"		976736	2					
ANR	976768	Condition	"compare_color_names ( pname , name_size , ""Yellow"" )"	438:8:13464:13510	976736	0	True				
ANR	976769	CallExpression	"compare_color_names ( pname , name_size , ""Yellow"" )"		976736	0					
ANR	976770	Callee	compare_color_names		976736	0					
ANR	976771	Identifier	compare_color_names		976736	0					
ANR	976772	ArgumentList	pname		976736	1					
ANR	976773	Argument	pname		976736	0					
ANR	976774	Identifier	pname		976736	0					
ANR	976775	Argument	name_size		976736	1					
ANR	976776	Identifier	name_size		976736	0					
ANR	976777	Argument	"""Yellow"""		976736	2					
ANR	976778	PrimaryExpression	"""Yellow"""		976736	0					
ANR	976779	ReturnStatement	return 2 ;	439:8:13521:13529	976736	1	True				
ANR	976780	PrimaryExpression	2		976736	0					
ANR	976781	IfStatement	"if ( compare_color_names ( pname , name_size , ""Black"" ) )"		976736	3					
ANR	976782	Condition	"compare_color_names ( pname , name_size , ""Black"" )"	440:8:13539:13584	976736	0	True				
ANR	976783	CallExpression	"compare_color_names ( pname , name_size , ""Black"" )"		976736	0					
ANR	976784	Callee	compare_color_names		976736	0					
ANR	976785	Identifier	compare_color_names		976736	0					
ANR	976786	ArgumentList	pname		976736	1					
ANR	976787	Argument	pname		976736	0					
ANR	976788	Identifier	pname		976736	0					
ANR	976789	Argument	name_size		976736	1					
ANR	976790	Identifier	name_size		976736	0					
ANR	976791	Argument	"""Black"""		976736	2					
ANR	976792	PrimaryExpression	"""Black"""		976736	0					
ANR	976793	ReturnStatement	return 3 ;	441:8:13595:13603	976736	1	True				
ANR	976794	PrimaryExpression	3		976736	0					
ANR	976795	ElseStatement	else		976736	0					
ANR	976796	ReturnStatement	return - 1 ;	443:8:13622:13631	976736	0	True				
ANR	976797	UnaryOperationExpression	- 1		976736	0					
ANR	976798	UnaryOperator	-		976736	0					
ANR	976799	PrimaryExpression	1		976736	1					
ANR	976800	ReturnType	int		976736	1					
ANR	976801	Identifier	gx_default_DevCMYK_get_color_comp_index		976736	2					
ANR	976802	ParameterList	"gx_device * dev , const char * pname , int name_size , int component_type"		976736	3					
ANR	976803	Parameter	gx_device * dev	431:40:13189:13203	976736	0	True				
ANR	976804	ParameterType	gx_device *		976736	0					
ANR	976805	Identifier	dev		976736	1					
ANR	976806	Parameter	const char * pname	431:57:13206:13223	976736	1	True				
ANR	976807	ParameterType	const char *		976736	0					
ANR	976808	Identifier	pname		976736	1					
ANR	976809	Parameter	int name_size	432:44:13270:13282	976736	2	True				
ANR	976810	ParameterType	int		976736	0					
ANR	976811	Identifier	name_size		976736	1					
ANR	976812	Parameter	int component_type	432:59:13285:13302	976736	3	True				
ANR	976813	ParameterType	int		976736	0					
ANR	976814	Identifier	component_type		976736	1					
ANR	976815	CFGEntryNode	ENTRY		976736		True				
ANR	976816	CFGExitNode	EXIT		976736		True				
ANR	976817	Symbol	component_type		976736						
ANR	976818	Symbol	dev		976736						
ANR	976819	Symbol	compare_color_names		976736						
ANR	976820	Symbol	pname		976736						
ANR	976821	Symbol	name_size		976736						
ANR	976822	Function	gx_default_DevRGBK_get_color_comp_index	447:0:13761:14301							
ANR	976823	FunctionDef	"gx_default_DevRGBK_get_color_comp_index (gx_device * dev , const char * pname , int name_size , int component_type)"		976822	0					
ANR	976824	CompoundStatement		450:0:13921:14301	976822	0					
ANR	976825	IfStatement	"if ( compare_color_names ( pname , name_size , ""Red"" ) )"		976822	0					
ANR	976826	Condition	"compare_color_names ( pname , name_size , ""Red"" )"	451:8:13931:13974	976822	0	True				
ANR	976827	CallExpression	"compare_color_names ( pname , name_size , ""Red"" )"		976822	0					
ANR	976828	Callee	compare_color_names		976822	0					
ANR	976829	Identifier	compare_color_names		976822	0					
ANR	976830	ArgumentList	pname		976822	1					
ANR	976831	Argument	pname		976822	0					
ANR	976832	Identifier	pname		976822	0					
ANR	976833	Argument	name_size		976822	1					
ANR	976834	Identifier	name_size		976822	0					
ANR	976835	Argument	"""Red"""		976822	2					
ANR	976836	PrimaryExpression	"""Red"""		976822	0					
ANR	976837	ReturnStatement	return 0 ;	452:8:13985:13993	976822	1	True				
ANR	976838	PrimaryExpression	0		976822	0					
ANR	976839	IfStatement	"if ( compare_color_names ( pname , name_size , ""Green"" ) )"		976822	1					
ANR	976840	Condition	"compare_color_names ( pname , name_size , ""Green"" )"	453:8:14003:14048	976822	0	True				
ANR	976841	CallExpression	"compare_color_names ( pname , name_size , ""Green"" )"		976822	0					
ANR	976842	Callee	compare_color_names		976822	0					
ANR	976843	Identifier	compare_color_names		976822	0					
ANR	976844	ArgumentList	pname		976822	1					
ANR	976845	Argument	pname		976822	0					
ANR	976846	Identifier	pname		976822	0					
ANR	976847	Argument	name_size		976822	1					
ANR	976848	Identifier	name_size		976822	0					
ANR	976849	Argument	"""Green"""		976822	2					
ANR	976850	PrimaryExpression	"""Green"""		976822	0					
ANR	976851	ReturnStatement	return 1 ;	454:8:14059:14067	976822	1	True				
ANR	976852	PrimaryExpression	1		976822	0					
ANR	976853	IfStatement	"if ( compare_color_names ( pname , name_size , ""Blue"" ) )"		976822	2					
ANR	976854	Condition	"compare_color_names ( pname , name_size , ""Blue"" )"	455:8:14077:14121	976822	0	True				
ANR	976855	CallExpression	"compare_color_names ( pname , name_size , ""Blue"" )"		976822	0					
ANR	976856	Callee	compare_color_names		976822	0					
ANR	976857	Identifier	compare_color_names		976822	0					
ANR	976858	ArgumentList	pname		976822	1					
ANR	976859	Argument	pname		976822	0					
ANR	976860	Identifier	pname		976822	0					
ANR	976861	Argument	name_size		976822	1					
ANR	976862	Identifier	name_size		976822	0					
ANR	976863	Argument	"""Blue"""		976822	2					
ANR	976864	PrimaryExpression	"""Blue"""		976822	0					
ANR	976865	ReturnStatement	return 2 ;	456:8:14132:14140	976822	1	True				
ANR	976866	PrimaryExpression	2		976822	0					
ANR	976867	IfStatement	"if ( compare_color_names ( pname , name_size , ""Black"" ) )"		976822	3					
ANR	976868	Condition	"compare_color_names ( pname , name_size , ""Black"" )"	457:8:14150:14195	976822	0	True				
ANR	976869	CallExpression	"compare_color_names ( pname , name_size , ""Black"" )"		976822	0					
ANR	976870	Callee	compare_color_names		976822	0					
ANR	976871	Identifier	compare_color_names		976822	0					
ANR	976872	ArgumentList	pname		976822	1					
ANR	976873	Argument	pname		976822	0					
ANR	976874	Identifier	pname		976822	0					
ANR	976875	Argument	name_size		976822	1					
ANR	976876	Identifier	name_size		976822	0					
ANR	976877	Argument	"""Black"""		976822	2					
ANR	976878	PrimaryExpression	"""Black"""		976822	0					
ANR	976879	ReturnStatement	return 3 ;	458:8:14206:14214	976822	1	True				
ANR	976880	PrimaryExpression	3		976822	0					
ANR	976881	ElseStatement	else		976822	0					
ANR	976882	ReturnStatement	return - 1 ;	460:8:14233:14242	976822	0	True				
ANR	976883	UnaryOperationExpression	- 1		976822	0					
ANR	976884	UnaryOperator	-		976822	0					
ANR	976885	PrimaryExpression	1		976822	1					
ANR	976886	ReturnType	int		976822	1					
ANR	976887	Identifier	gx_default_DevRGBK_get_color_comp_index		976822	2					
ANR	976888	ParameterList	"gx_device * dev , const char * pname , int name_size , int component_type"		976822	3					
ANR	976889	Parameter	gx_device * dev	448:40:13805:13819	976822	0	True				
ANR	976890	ParameterType	gx_device *		976822	0					
ANR	976891	Identifier	dev		976822	1					
ANR	976892	Parameter	const char * pname	448:57:13822:13839	976822	1	True				
ANR	976893	ParameterType	const char *		976822	0					
ANR	976894	Identifier	pname		976822	1					
ANR	976895	Parameter	int name_size	449:44:13886:13898	976822	2	True				
ANR	976896	ParameterType	int		976822	0					
ANR	976897	Identifier	name_size		976822	1					
ANR	976898	Parameter	int component_type	449:59:13901:13918	976822	3	True				
ANR	976899	ParameterType	int		976822	0					
ANR	976900	Identifier	component_type		976822	1					
ANR	976901	CFGEntryNode	ENTRY		976822		True				
ANR	976902	CFGExitNode	EXIT		976822		True				
ANR	976903	Symbol	component_type		976822						
ANR	976904	Symbol	dev		976822						
ANR	976905	Symbol	compare_color_names		976822						
ANR	976906	Symbol	pname		976822						
ANR	976907	Symbol	name_size		976822						
ANR	976908	Function	gx_error_get_color_comp_index	464:0:14370:14819							
ANR	976909	FunctionDef	"gx_error_get_color_comp_index (gx_device * dev , const char * pname , int name_size , int component_type)"		976908	0					
ANR	976910	CompoundStatement		467:0:14516:14819	976908	0					
ANR	976911	ExpressionStatement	"dmprintf ( dev -> memory , ""No get_color_comp_index proc defined for device.\\n"" )"	473:4:14669:14744	976908	0	True				
ANR	976912	CallExpression	"dmprintf ( dev -> memory , ""No get_color_comp_index proc defined for device.\\n"" )"		976908	0					
ANR	976913	Callee	dmprintf		976908	0					
ANR	976914	Identifier	dmprintf		976908	0					
ANR	976915	ArgumentList	dev -> memory		976908	1					
ANR	976916	Argument	dev -> memory		976908	0					
ANR	976917	PtrMemberAccess	dev -> memory		976908	0					
ANR	976918	Identifier	dev		976908	0					
ANR	976919	Identifier	memory		976908	1					
ANR	976920	Argument	"""No get_color_comp_index proc defined for device.\\n"""		976908	1					
ANR	976921	PrimaryExpression	"""No get_color_comp_index proc defined for device.\\n"""		976908	0					
ANR	976922	ReturnStatement	return - 1 ;	475:4:14757:14766	976908	1	True				
ANR	976923	UnaryOperationExpression	- 1		976908	0					
ANR	976924	UnaryOperator	-		976908	0					
ANR	976925	PrimaryExpression	1		976908	1					
ANR	976926	ReturnType	int		976908	1					
ANR	976927	Identifier	gx_error_get_color_comp_index		976908	2					
ANR	976928	ParameterList	"gx_device * dev , const char * pname , int name_size , int component_type"		976908	3					
ANR	976929	Parameter	gx_device * dev	465:30:14404:14418	976908	0	True				
ANR	976930	ParameterType	gx_device *		976908	0					
ANR	976931	Identifier	dev		976908	1					
ANR	976932	Parameter	const char * pname	465:47:14421:14438	976908	1	True				
ANR	976933	ParameterType	const char *		976908	0					
ANR	976934	Identifier	pname		976908	1					
ANR	976935	Parameter	int name_size	466:40:14481:14493	976908	2	True				
ANR	976936	ParameterType	int		976908	0					
ANR	976937	Identifier	name_size		976908	1					
ANR	976938	Parameter	int component_type	466:55:14496:14513	976908	3	True				
ANR	976939	ParameterType	int		976908	0					
ANR	976940	Identifier	component_type		976908	1					
ANR	976941	CFGEntryNode	ENTRY		976908		True				
ANR	976942	CFGExitNode	EXIT		976908		True				
ANR	976943	Symbol	* dev		976908						
ANR	976944	Symbol	component_type		976908						
ANR	976945	Symbol	dev -> memory		976908						
ANR	976946	Symbol	dev		976908						
ANR	976947	Symbol	pname		976908						
ANR	976948	Symbol	name_size		976908						
ANR	976949	DeclStmt									
ANR	976950	Decl							const gx_color_map_procs	const gx_color_map_procs	cmap_few
ANR	976951	DeclStmt									
ANR	976952	Decl							const gx_color_map_procs	const gx_color_map_procs	cmap_many
ANR	976953	Function	gx_get_cmap_procs	530:0:16460:16596							
ANR	976954	FunctionDef	"gx_get_cmap_procs (const gs_gstate * pgs , const gx_device * dev)"		976953	0					
ANR	976955	CompoundStatement		532:0:16550:16596	976953	0					
ANR	976956	ReturnStatement	"return ( pgs -> get_cmap_procs ) ( pgs , dev ) ;"	533:4:16556:16594	976953	0	True				
ANR	976957	CallExpression	"( pgs -> get_cmap_procs ) ( pgs , dev )"		976953	0					
ANR	976958	Callee	pgs -> get_cmap_procs		976953	0					
ANR	976959	PtrMemberAccess	pgs -> get_cmap_procs		976953	0					
ANR	976960	Identifier	pgs		976953	0					
ANR	976961	Identifier	get_cmap_procs		976953	1					
ANR	976962	ArgumentList	pgs		976953	1					
ANR	976963	Argument	pgs		976953	0					
ANR	976964	Identifier	pgs		976953	0					
ANR	976965	Argument	dev		976953	1					
ANR	976966	Identifier	dev		976953	0					
ANR	976967	ReturnType	const gx_color_map_procs *		976953	1					
ANR	976968	Identifier	gx_get_cmap_procs		976953	2					
ANR	976969	ParameterList	"const gs_gstate * pgs , const gx_device * dev"		976953	3					
ANR	976970	Parameter	const gs_gstate * pgs	531:18:16505:16524	976953	0	True				
ANR	976971	ParameterType	const gs_gstate *		976953	0					
ANR	976972	Identifier	pgs		976953	1					
ANR	976973	Parameter	const gx_device * dev	531:40:16527:16547	976953	1	True				
ANR	976974	ParameterType	const gx_device *		976953	0					
ANR	976975	Identifier	dev		976953	1					
ANR	976976	CFGEntryNode	ENTRY		976953		True				
ANR	976977	CFGExitNode	EXIT		976953		True				
ANR	976978	Symbol	pgs -> get_cmap_procs		976953						
ANR	976979	Symbol	dev		976953						
ANR	976980	Symbol	* pgs		976953						
ANR	976981	Symbol	pgs		976953						
ANR	976982	Function	gx_default_get_cmap_procs	536:0:16599:16767							
ANR	976983	FunctionDef	"gx_default_get_cmap_procs (const gs_gstate * pgs , const gx_device * dev)"		976982	0					
ANR	976984	CompoundStatement		538:0:16697:16767	976982	0					
ANR	976985	ReturnStatement	return ( gx_device_must_halftone ( dev ) ? & cmap_few : & cmap_many ) ;	539:4:16703:16765	976982	0	True				
ANR	976986	ConditionalExpression	gx_device_must_halftone ( dev ) ? & cmap_few : & cmap_many		976982	0					
ANR	976987	Condition	gx_device_must_halftone ( dev )		976982	0					
ANR	976988	CallExpression	gx_device_must_halftone ( dev )		976982	0					
ANR	976989	Callee	gx_device_must_halftone		976982	0					
ANR	976990	Identifier	gx_device_must_halftone		976982	0					
ANR	976991	ArgumentList	dev		976982	1					
ANR	976992	Argument	dev		976982	0					
ANR	976993	Identifier	dev		976982	0					
ANR	976994	UnaryOperationExpression	& cmap_few		976982	1					
ANR	976995	UnaryOperator	&		976982	0					
ANR	976996	Identifier	cmap_few		976982	1					
ANR	976997	UnaryOperationExpression	& cmap_many		976982	2					
ANR	976998	UnaryOperator	&		976982	0					
ANR	976999	Identifier	cmap_many		976982	1					
ANR	977000	ReturnType	const gx_color_map_procs *		976982	1					
ANR	977001	Identifier	gx_default_get_cmap_procs		976982	2					
ANR	977002	ParameterList	"const gs_gstate * pgs , const gx_device * dev"		976982	3					
ANR	977003	Parameter	const gs_gstate * pgs	537:26:16652:16671	976982	0	True				
ANR	977004	ParameterType	const gs_gstate *		976982	0					
ANR	977005	Identifier	pgs		976982	1					
ANR	977006	Parameter	const gx_device * dev	537:48:16674:16694	976982	1	True				
ANR	977007	ParameterType	const gx_device *		976982	0					
ANR	977008	Identifier	dev		976982	1					
ANR	977009	CFGEntryNode	ENTRY		976982		True				
ANR	977010	CFGExitNode	EXIT		976982		True				
ANR	977011	Symbol	& cmap_few		976982						
ANR	977012	Symbol	gx_device_must_halftone		976982						
ANR	977013	Symbol	dev		976982						
ANR	977014	Symbol	& cmap_many		976982						
ANR	977015	Symbol	pgs		976982						
ANR	977016	Function	gx_set_cmap_procs	543:0:16832:16948							
ANR	977017	FunctionDef	"gx_set_cmap_procs (gs_gstate * pgs , const gx_device * dev)"		977016	0					
ANR	977018	CompoundStatement		545:0:16895:16948	977016	0					
ANR	977019	ExpressionStatement	"pgs -> cmap_procs = gx_get_cmap_procs ( pgs , dev )"	546:4:16901:16946	977016	0	True				
ANR	977020	AssignmentExpression	"pgs -> cmap_procs = gx_get_cmap_procs ( pgs , dev )"		977016	0		=			
ANR	977021	PtrMemberAccess	pgs -> cmap_procs		977016	0					
ANR	977022	Identifier	pgs		977016	0					
ANR	977023	Identifier	cmap_procs		977016	1					
ANR	977024	CallExpression	"gx_get_cmap_procs ( pgs , dev )"		977016	1					
ANR	977025	Callee	gx_get_cmap_procs		977016	0					
ANR	977026	Identifier	gx_get_cmap_procs		977016	0					
ANR	977027	ArgumentList	pgs		977016	1					
ANR	977028	Argument	pgs		977016	0					
ANR	977029	Identifier	pgs		977016	0					
ANR	977030	Argument	dev		977016	1					
ANR	977031	Identifier	dev		977016	0					
ANR	977032	ReturnType	void		977016	1					
ANR	977033	Identifier	gx_set_cmap_procs		977016	2					
ANR	977034	ParameterList	"gs_gstate * pgs , const gx_device * dev"		977016	3					
ANR	977035	Parameter	gs_gstate * pgs	544:18:16855:16869	977016	0	True				
ANR	977036	ParameterType	gs_gstate *		977016	0					
ANR	977037	Identifier	pgs		977016	1					
ANR	977038	Parameter	const gx_device * dev	544:35:16872:16892	977016	1	True				
ANR	977039	ParameterType	const gx_device *		977016	0					
ANR	977040	Identifier	dev		977016	1					
ANR	977041	CFGEntryNode	ENTRY		977016		True				
ANR	977042	CFGExitNode	EXIT		977016		True				
ANR	977043	Symbol	pgs -> cmap_procs		977016						
ANR	977044	Symbol	dev		977016						
ANR	977045	Symbol	* pgs		977016						
ANR	977046	Symbol	pgs		977016						
ANR	977047	Symbol	gx_get_cmap_procs		977016						
ANR	977048	Function	gx_remap_color	550:0:16996:17862							
ANR	977049	FunctionDef	gx_remap_color (gs_gstate * pgs)		977048	0					
ANR	977050	CompoundStatement		552:0:17032:17862	977048	0					
ANR	977051	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace_inline ( pgs ) ;	553:4:17038:17098	977048	0	True				
ANR	977052	IdentifierDecl	* pcs = gs_currentcolorspace_inline ( pgs )		977048	0					
ANR	977053	IdentifierDeclType	const gs_color_space *		977048	0					
ANR	977054	Identifier	pcs		977048	1					
ANR	977055	AssignmentExpression	* pcs = gs_currentcolorspace_inline ( pgs )		977048	2		=			
ANR	977056	Identifier	pcs		977048	0					
ANR	977057	CallExpression	gs_currentcolorspace_inline ( pgs )		977048	1					
ANR	977058	Callee	gs_currentcolorspace_inline		977048	0					
ANR	977059	Identifier	gs_currentcolorspace_inline		977048	0					
ANR	977060	ArgumentList	pgs		977048	1					
ANR	977061	Argument	pgs		977048	0					
ANR	977062	Identifier	pgs		977048	0					
ANR	977063	IdentifierDeclStatement	int code = 0 ;	554:4:17104:17134	977048	1	True				
ANR	977064	IdentifierDecl	code = 0		977048	0					
ANR	977065	IdentifierDeclType	int		977048	0					
ANR	977066	Identifier	code		977048	1					
ANR	977067	AssignmentExpression	code = 0		977048	2		=			
ANR	977068	Identifier	code		977048	0					
ANR	977069	PrimaryExpression	0		977048	1					
ANR	977070	IfStatement	if ( ! gx_dc_is_pure ( gs_currentdevicecolor_inline ( pgs ) ) )		977048	2					
ANR	977071	Condition	! gx_dc_is_pure ( gs_currentdevicecolor_inline ( pgs ) )	559:8:17347:17395	977048	0	True				
ANR	977072	UnaryOperationExpression	! gx_dc_is_pure ( gs_currentdevicecolor_inline ( pgs ) )		977048	0					
ANR	977073	UnaryOperator	!		977048	0					
ANR	977074	CallExpression	gx_dc_is_pure ( gs_currentdevicecolor_inline ( pgs ) )		977048	1					
ANR	977075	Callee	gx_dc_is_pure		977048	0					
ANR	977076	Identifier	gx_dc_is_pure		977048	0					
ANR	977077	ArgumentList	gs_currentdevicecolor_inline ( pgs )		977048	1					
ANR	977078	Argument	gs_currentdevicecolor_inline ( pgs )		977048	0					
ANR	977079	CallExpression	gs_currentdevicecolor_inline ( pgs )		977048	0					
ANR	977080	Callee	gs_currentdevicecolor_inline		977048	0					
ANR	977081	Identifier	gs_currentdevicecolor_inline		977048	0					
ANR	977082	ArgumentList	pgs		977048	1					
ANR	977083	Argument	pgs		977048	0					
ANR	977084	Identifier	pgs		977048	0					
ANR	977085	ExpressionStatement	"code = ( * pcs -> type -> remap_color ) ( gs_currentcolor_inline ( pgs ) , pcs , gs_currentdevicecolor_inline ( pgs ) , ( gs_gstate * ) pgs , pgs -> device , gs_color_select_texture )"	560:8:17406:17691	977048	1	True				
ANR	977086	AssignmentExpression	"code = ( * pcs -> type -> remap_color ) ( gs_currentcolor_inline ( pgs ) , pcs , gs_currentdevicecolor_inline ( pgs ) , ( gs_gstate * ) pgs , pgs -> device , gs_color_select_texture )"		977048	0		=			
ANR	977087	Identifier	code		977048	0					
ANR	977088	CallExpression	"( * pcs -> type -> remap_color ) ( gs_currentcolor_inline ( pgs ) , pcs , gs_currentdevicecolor_inline ( pgs ) , ( gs_gstate * ) pgs , pgs -> device , gs_color_select_texture )"		977048	1					
ANR	977089	Callee	* pcs -> type -> remap_color		977048	0					
ANR	977090	UnaryOperationExpression	* pcs -> type -> remap_color		977048	0					
ANR	977091	UnaryOperator	*		977048	0					
ANR	977092	PtrMemberAccess	pcs -> type -> remap_color		977048	1					
ANR	977093	PtrMemberAccess	pcs -> type		977048	0					
ANR	977094	Identifier	pcs		977048	0					
ANR	977095	Identifier	type		977048	1					
ANR	977096	Identifier	remap_color		977048	1					
ANR	977097	ArgumentList	gs_currentcolor_inline ( pgs )		977048	1					
ANR	977098	Argument	gs_currentcolor_inline ( pgs )		977048	0					
ANR	977099	CallExpression	gs_currentcolor_inline ( pgs )		977048	0					
ANR	977100	Callee	gs_currentcolor_inline		977048	0					
ANR	977101	Identifier	gs_currentcolor_inline		977048	0					
ANR	977102	ArgumentList	pgs		977048	1					
ANR	977103	Argument	pgs		977048	0					
ANR	977104	Identifier	pgs		977048	0					
ANR	977105	Argument	pcs		977048	1					
ANR	977106	Identifier	pcs		977048	0					
ANR	977107	Argument	gs_currentdevicecolor_inline ( pgs )		977048	2					
ANR	977108	CallExpression	gs_currentdevicecolor_inline ( pgs )		977048	0					
ANR	977109	Callee	gs_currentdevicecolor_inline		977048	0					
ANR	977110	Identifier	gs_currentdevicecolor_inline		977048	0					
ANR	977111	ArgumentList	pgs		977048	1					
ANR	977112	Argument	pgs		977048	0					
ANR	977113	Identifier	pgs		977048	0					
ANR	977114	Argument	( gs_gstate * ) pgs		977048	3					
ANR	977115	CastExpression	( gs_gstate * ) pgs		977048	0					
ANR	977116	CastTarget	gs_gstate *		977048	0					
ANR	977117	Identifier	pgs		977048	1					
ANR	977118	Argument	pgs -> device		977048	4					
ANR	977119	PtrMemberAccess	pgs -> device		977048	0					
ANR	977120	Identifier	pgs		977048	0					
ANR	977121	Identifier	device		977048	1					
ANR	977122	Argument	gs_color_select_texture		977048	5					
ANR	977123	Identifier	gs_color_select_texture		977048	0					
ANR	977124	IfStatement	if ( code >= 0 && pgs -> overprint )		977048	3					
ANR	977125	Condition	code >= 0 && pgs -> overprint	565:7:17775:17801	977048	0	True				
ANR	977126	AndExpression	code >= 0 && pgs -> overprint		977048	0		&&			
ANR	977127	RelationalExpression	code >= 0		977048	0		>=			
ANR	977128	Identifier	code		977048	0					
ANR	977129	PrimaryExpression	0		977048	1					
ANR	977130	PtrMemberAccess	pgs -> overprint		977048	1					
ANR	977131	Identifier	pgs		977048	0					
ANR	977132	Identifier	overprint		977048	1					
ANR	977133	ExpressionStatement	code = gs_do_set_overprint ( pgs )	566:8:17812:17843	977048	1	True				
ANR	977134	AssignmentExpression	code = gs_do_set_overprint ( pgs )		977048	0		=			
ANR	977135	Identifier	code		977048	0					
ANR	977136	CallExpression	gs_do_set_overprint ( pgs )		977048	1					
ANR	977137	Callee	gs_do_set_overprint		977048	0					
ANR	977138	Identifier	gs_do_set_overprint		977048	0					
ANR	977139	ArgumentList	pgs		977048	1					
ANR	977140	Argument	pgs		977048	0					
ANR	977141	Identifier	pgs		977048	0					
ANR	977142	ReturnStatement	return code ;	567:4:17849:17860	977048	4	True				
ANR	977143	Identifier	code		977048	0					
ANR	977144	ReturnType	int		977048	1					
ANR	977145	Identifier	gx_remap_color		977048	2					
ANR	977146	ParameterList	gs_gstate * pgs		977048	3					
ANR	977147	Parameter	gs_gstate * pgs	551:15:17015:17029	977048	0	True				
ANR	977148	ParameterType	gs_gstate *		977048	0					
ANR	977149	Identifier	pgs		977048	1					
ANR	977150	CFGEntryNode	ENTRY		977048		True				
ANR	977151	CFGExitNode	EXIT		977048		True				
ANR	977152	Symbol	pcs		977048						
ANR	977153	Symbol	pcs -> type -> remap_color		977048						
ANR	977154	Symbol	code		977048						
ANR	977155	Symbol	* pgs		977048						
ANR	977156	Symbol	gs_do_set_overprint		977048						
ANR	977157	Symbol	* pcs		977048						
ANR	977158	Symbol	* pcs -> type -> remap_color		977048						
ANR	977159	Symbol	gs_currentcolorspace_inline		977048						
ANR	977160	Symbol	gs_color_select_texture		977048						
ANR	977161	Symbol	gs_currentdevicecolor_inline		977048						
ANR	977162	Symbol	* * pcs		977048						
ANR	977163	Symbol	pgs -> overprint		977048						
ANR	977164	Symbol	gx_dc_is_pure		977048						
ANR	977165	Symbol	pgs -> device		977048						
ANR	977166	Symbol	* pcs -> type		977048						
ANR	977167	Symbol	gs_currentcolor_inline		977048						
ANR	977168	Symbol	pgs		977048						
ANR	977169	Symbol	* * pcs -> type		977048						
ANR	977170	Symbol	* * * pcs		977048						
ANR	977171	Symbol	pcs -> type		977048						
ANR	977172	Function	gx_no_concrete_space	571:0:17933:18047							
ANR	977173	FunctionDef	"gx_no_concrete_space (const gs_color_space * pcs , const gs_gstate * pgs)"		977172	0					
ANR	977174	CompoundStatement		573:0:18028:18047	977172	0					
ANR	977175	ReturnStatement	return NULL ;	574:4:18034:18045	977172	0	True				
ANR	977176	Identifier	NULL		977172	0					
ANR	977177	ReturnType	const gs_color_space *		977172	1					
ANR	977178	Identifier	gx_no_concrete_space		977172	2					
ANR	977179	ParameterList	"const gs_color_space * pcs , const gs_gstate * pgs"		977172	3					
ANR	977180	Parameter	const gs_color_space * pcs	572:21:17977:18002	977172	0	True				
ANR	977181	ParameterType	const gs_color_space *		977172	0					
ANR	977182	Identifier	pcs		977172	1					
ANR	977183	Parameter	const gs_gstate * pgs	572:49:18005:18025	977172	1	True				
ANR	977184	ParameterType	const gs_gstate *		977172	0					
ANR	977185	Identifier	pgs		977172	1					
ANR	977186	CFGEntryNode	ENTRY		977172		True				
ANR	977187	CFGExitNode	EXIT		977172		True				
ANR	977188	Symbol	pcs		977172						
ANR	977189	Symbol	NULL		977172						
ANR	977190	Symbol	pgs		977172						
ANR	977191	Function	gx_same_concrete_space	578:0:18097:18212							
ANR	977192	FunctionDef	"gx_same_concrete_space (const gs_color_space * pcs , const gs_gstate * pgs)"		977191	0					
ANR	977193	CompoundStatement		580:0:18194:18212	977191	0					
ANR	977194	ReturnStatement	return pcs ;	581:4:18200:18210	977191	0	True				
ANR	977195	Identifier	pcs		977191	0					
ANR	977196	ReturnType	const gs_color_space *		977191	1					
ANR	977197	Identifier	gx_same_concrete_space		977191	2					
ANR	977198	ParameterList	"const gs_color_space * pcs , const gs_gstate * pgs"		977191	3					
ANR	977199	Parameter	const gs_color_space * pcs	579:23:18143:18168	977191	0	True				
ANR	977200	ParameterType	const gs_color_space *		977191	0					
ANR	977201	Identifier	pcs		977191	1					
ANR	977202	Parameter	const gs_gstate * pgs	579:51:18171:18191	977191	1	True				
ANR	977203	ParameterType	const gs_gstate *		977191	0					
ANR	977204	Identifier	pgs		977191	1					
ANR	977205	CFGEntryNode	ENTRY		977191		True				
ANR	977206	CFGExitNode	EXIT		977191		True				
ANR	977207	Symbol	pcs		977191						
ANR	977208	Symbol	pgs		977191						
ANR	977209	Function	gx_no_concretize_color	585:0:18266:18467							
ANR	977210	FunctionDef	"gx_no_concretize_color (const gs_client_color * pcc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		977209	0					
ANR	977211	CompoundStatement		588:0:18426:18467	977209	0					
ANR	977212	ExpressionStatement	return_error ( gs_error_rangecheck )	589:4:18432:18465	977209	0	True				
ANR	977213	CallExpression	return_error ( gs_error_rangecheck )		977209	0					
ANR	977214	Callee	return_error		977209	0					
ANR	977215	Identifier	return_error		977209	0					
ANR	977216	ArgumentList	gs_error_rangecheck		977209	1					
ANR	977217	Argument	gs_error_rangecheck		977209	0					
ANR	977218	Identifier	gs_error_rangecheck		977209	0					
ANR	977219	ReturnType	int		977209	1					
ANR	977220	Identifier	gx_no_concretize_color		977209	2					
ANR	977221	ParameterList	"const gs_client_color * pcc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev"		977209	3					
ANR	977222	Parameter	const gs_client_color * pcc	586:23:18293:18319	977209	0	True				
ANR	977223	ParameterType	const gs_client_color *		977209	0					
ANR	977224	Identifier	pcc		977209	1					
ANR	977225	Parameter	const gs_color_space * pcs	586:52:18322:18347	977209	1	True				
ANR	977226	ParameterType	const gs_color_space *		977209	0					
ANR	977227	Identifier	pcs		977209	1					
ANR	977228	Parameter	frac * pconc	587:23:18373:18384	977209	2	True				
ANR	977229	ParameterType	frac *		977209	0					
ANR	977230	Identifier	pconc		977209	1					
ANR	977231	Parameter	const gs_gstate * pgs	587:37:18387:18407	977209	3	True				
ANR	977232	ParameterType	const gs_gstate *		977209	0					
ANR	977233	Identifier	pgs		977209	1					
ANR	977234	Parameter	gx_device * dev	587:60:18410:18423	977209	4	True				
ANR	977235	ParameterType	gx_device *		977209	0					
ANR	977236	Identifier	dev		977209	1					
ANR	977237	CFGEntryNode	ENTRY		977209		True				
ANR	977238	CFGExitNode	EXIT		977209		True				
ANR	977239	Symbol	pcc		977209						
ANR	977240	Symbol	pcs		977209						
ANR	977241	Symbol	dev		977209						
ANR	977242	Symbol	gs_error_rangecheck		977209						
ANR	977243	Symbol	pconc		977209						
ANR	977244	Symbol	pgs		977209						
ANR	977245	Function	gx_remap_named_color	595:0:18641:24704							
ANR	977246	FunctionDef	"gx_remap_named_color (const gs_client_color * pcc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		977245	0					
ANR	977247	CompoundStatement		599:0:18813:24704	977245	0					
ANR	977248	IdentifierDeclStatement	gx_color_value device_values [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	600:4:18819:18879	977245	0	True				
ANR	977249	IdentifierDecl	device_values [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		977245	0					
ANR	977250	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		977245	0					
ANR	977251	Identifier	device_values		977245	1					
ANR	977252	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		977245	2					
ANR	977253	IdentifierDeclStatement	const gs_separation_name name = pcs -> params . separation . sep_name ;	601:4:18885:18948	977245	1	True				
ANR	977254	IdentifierDecl	name = pcs -> params . separation . sep_name		977245	0					
ANR	977255	IdentifierDeclType	const gs_separation_name		977245	0					
ANR	977256	Identifier	name		977245	1					
ANR	977257	AssignmentExpression	name = pcs -> params . separation . sep_name		977245	2		=			
ANR	977258	Identifier	name		977245	0					
ANR	977259	MemberAccess	pcs -> params . separation . sep_name		977245	1					
ANR	977260	MemberAccess	pcs -> params . separation		977245	0					
ANR	977261	PtrMemberAccess	pcs -> params		977245	0					
ANR	977262	Identifier	pcs		977245	0					
ANR	977263	Identifier	params		977245	1					
ANR	977264	Identifier	separation		977245	1					
ANR	977265	Identifier	sep_name		977245	1					
ANR	977266	IdentifierDeclStatement	byte * pname ;	602:4:18954:18965	977245	2	True				
ANR	977267	IdentifierDecl	* pname		977245	0					
ANR	977268	IdentifierDeclType	byte *		977245	0					
ANR	977269	Identifier	pname		977245	1					
ANR	977270	IdentifierDeclStatement	uint name_size ;	603:4:18971:18985	977245	3	True				
ANR	977271	IdentifierDecl	name_size		977245	0					
ANR	977272	IdentifierDeclType	uint		977245	0					
ANR	977273	Identifier	name_size		977245	1					
ANR	977274	IdentifierDeclStatement	gsicc_rendering_param_t rendering_params ;	604:4:18991:19031	977245	4	True				
ANR	977275	IdentifierDecl	rendering_params		977245	0					
ANR	977276	IdentifierDeclType	gsicc_rendering_param_t		977245	0					
ANR	977277	Identifier	rendering_params		977245	1					
ANR	977278	IdentifierDeclStatement	int code ;	605:4:19037:19045	977245	5	True				
ANR	977279	IdentifierDecl	code		977245	0					
ANR	977280	IdentifierDeclType	int		977245	0					
ANR	977281	Identifier	code		977245	1					
ANR	977282	IdentifierDeclStatement	gsicc_namedcolor_t named_color_sep ;	606:4:19051:19085	977245	6	True				
ANR	977283	IdentifierDecl	named_color_sep		977245	0					
ANR	977284	IdentifierDeclType	gsicc_namedcolor_t		977245	0					
ANR	977285	Identifier	named_color_sep		977245	1					
ANR	977286	IdentifierDeclStatement	gsicc_namedcolor_t * named_color_devn = NULL ;	607:4:19091:19134	977245	7	True				
ANR	977287	IdentifierDecl	* named_color_devn = NULL		977245	0					
ANR	977288	IdentifierDeclType	gsicc_namedcolor_t *		977245	0					
ANR	977289	Identifier	named_color_devn		977245	1					
ANR	977290	AssignmentExpression	* named_color_devn = NULL		977245	2		=			
ANR	977291	Identifier	NULL		977245	0					
ANR	977292	Identifier	NULL		977245	1					
ANR	977293	IdentifierDeclStatement	gsicc_namedcolor_t * named_color_ptr = NULL ;	608:4:19140:19182	977245	8	True				
ANR	977294	IdentifierDecl	* named_color_ptr = NULL		977245	0					
ANR	977295	IdentifierDeclType	gsicc_namedcolor_t *		977245	0					
ANR	977296	Identifier	named_color_ptr		977245	1					
ANR	977297	AssignmentExpression	* named_color_ptr = NULL		977245	2		=			
ANR	977298	Identifier	NULL		977245	0					
ANR	977299	Identifier	NULL		977245	1					
ANR	977300	IdentifierDeclStatement	uchar num_des_comps = dev -> color_info . num_components ;	609:4:19188:19240	977245	9	True				
ANR	977301	IdentifierDecl	num_des_comps = dev -> color_info . num_components		977245	0					
ANR	977302	IdentifierDeclType	uchar		977245	0					
ANR	977303	Identifier	num_des_comps		977245	1					
ANR	977304	AssignmentExpression	num_des_comps = dev -> color_info . num_components		977245	2		=			
ANR	977305	Identifier	num_des_comps		977245	0					
ANR	977306	MemberAccess	dev -> color_info . num_components		977245	1					
ANR	977307	PtrMemberAccess	dev -> color_info		977245	0					
ANR	977308	Identifier	dev		977245	0					
ANR	977309	Identifier	color_info		977245	1					
ANR	977310	Identifier	num_components		977245	1					
ANR	977311	IdentifierDeclStatement	uchar k ;	610:4:19246:19253	977245	10	True				
ANR	977312	IdentifierDecl	k		977245	0					
ANR	977313	IdentifierDeclType	uchar		977245	0					
ANR	977314	Identifier	k		977245	1					
ANR	977315	IdentifierDeclStatement	frac conc [ GS_CLIENT_COLOR_MAX_COMPONENTS ] ;	611:4:19259:19300	977245	11	True				
ANR	977316	IdentifierDecl	conc [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		977245	0					
ANR	977317	IdentifierDeclType	frac [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		977245	0					
ANR	977318	Identifier	conc		977245	1					
ANR	977319	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		977245	2					
ANR	977320	IdentifierDeclStatement	int i = pcs -> type -> num_components ( pcs ) ;	612:4:19306:19344	977245	12	True				
ANR	977321	IdentifierDecl	i = pcs -> type -> num_components ( pcs )		977245	0					
ANR	977322	IdentifierDeclType	int		977245	0					
ANR	977323	Identifier	i		977245	1					
ANR	977324	AssignmentExpression	i = pcs -> type -> num_components ( pcs )		977245	2		=			
ANR	977325	Identifier	i		977245	0					
ANR	977326	CallExpression	pcs -> type -> num_components ( pcs )		977245	1					
ANR	977327	Callee	pcs -> type -> num_components		977245	0					
ANR	977328	PtrMemberAccess	pcs -> type -> num_components		977245	0					
ANR	977329	PtrMemberAccess	pcs -> type		977245	0					
ANR	977330	Identifier	pcs		977245	0					
ANR	977331	Identifier	type		977245	1					
ANR	977332	Identifier	num_components		977245	1					
ANR	977333	ArgumentList	pcs		977245	1					
ANR	977334	Argument	pcs		977245	0					
ANR	977335	Identifier	pcs		977245	0					
ANR	977336	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile = NULL ;	613:4:19350:19387	977245	13	True				
ANR	977337	IdentifierDecl	* dev_profile = NULL		977245	0					
ANR	977338	IdentifierDeclType	cmm_dev_profile_t *		977245	0					
ANR	977339	Identifier	dev_profile		977245	1					
ANR	977340	AssignmentExpression	* dev_profile = NULL		977245	2		=			
ANR	977341	Identifier	NULL		977245	0					
ANR	977342	Identifier	NULL		977245	1					
ANR	977343	IdentifierDeclStatement	gs_color_space_index type = gs_color_space_get_index ( pcs ) ;	614:4:19393:19450	977245	14	True				
ANR	977344	IdentifierDecl	type = gs_color_space_get_index ( pcs )		977245	0					
ANR	977345	IdentifierDeclType	gs_color_space_index		977245	0					
ANR	977346	Identifier	type		977245	1					
ANR	977347	AssignmentExpression	type = gs_color_space_get_index ( pcs )		977245	2		=			
ANR	977348	Identifier	type		977245	0					
ANR	977349	CallExpression	gs_color_space_get_index ( pcs )		977245	1					
ANR	977350	Callee	gs_color_space_get_index		977245	0					
ANR	977351	Identifier	gs_color_space_get_index		977245	0					
ANR	977352	ArgumentList	pcs		977245	1					
ANR	977353	Argument	pcs		977245	0					
ANR	977354	Identifier	pcs		977245	0					
ANR	977355	IdentifierDeclStatement	int num_src_comps = 1 ;	615:4:19456:19477	977245	15	True				
ANR	977356	IdentifierDecl	num_src_comps = 1		977245	0					
ANR	977357	IdentifierDeclType	int		977245	0					
ANR	977358	Identifier	num_src_comps		977245	1					
ANR	977359	AssignmentExpression	num_src_comps = 1		977245	2		=			
ANR	977360	Identifier	num_src_comps		977245	0					
ANR	977361	PrimaryExpression	1		977245	1					
ANR	977362	ExpressionStatement	rendering_params . black_point_comp = pgs -> blackptcomp	618:4:19524:19576	977245	16	True				
ANR	977363	AssignmentExpression	rendering_params . black_point_comp = pgs -> blackptcomp		977245	0		=			
ANR	977364	MemberAccess	rendering_params . black_point_comp		977245	0					
ANR	977365	Identifier	rendering_params		977245	0					
ANR	977366	Identifier	black_point_comp		977245	1					
ANR	977367	PtrMemberAccess	pgs -> blackptcomp		977245	1					
ANR	977368	Identifier	pgs		977245	0					
ANR	977369	Identifier	blackptcomp		977245	1					
ANR	977370	ExpressionStatement	rendering_params . graphics_type_tag = dev -> graphics_type_tag	619:4:19582:19641	977245	17	True				
ANR	977371	AssignmentExpression	rendering_params . graphics_type_tag = dev -> graphics_type_tag		977245	0		=			
ANR	977372	MemberAccess	rendering_params . graphics_type_tag		977245	0					
ANR	977373	Identifier	rendering_params		977245	0					
ANR	977374	Identifier	graphics_type_tag		977245	1					
ANR	977375	PtrMemberAccess	dev -> graphics_type_tag		977245	1					
ANR	977376	Identifier	dev		977245	0					
ANR	977377	Identifier	graphics_type_tag		977245	1					
ANR	977378	ExpressionStatement	rendering_params . override_icc = false	620:4:19647:19684	977245	18	True				
ANR	977379	AssignmentExpression	rendering_params . override_icc = false		977245	0		=			
ANR	977380	MemberAccess	rendering_params . override_icc		977245	0					
ANR	977381	Identifier	rendering_params		977245	0					
ANR	977382	Identifier	override_icc		977245	1					
ANR	977383	Identifier	false		977245	1					
ANR	977384	ExpressionStatement	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED	621:4:19690:19744	977245	19	True				
ANR	977385	AssignmentExpression	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED		977245	0		=			
ANR	977386	MemberAccess	rendering_params . preserve_black		977245	0					
ANR	977387	Identifier	rendering_params		977245	0					
ANR	977388	Identifier	preserve_black		977245	1					
ANR	977389	Identifier	gsBKPRESNOTSPECIFIED		977245	1					
ANR	977390	ExpressionStatement	rendering_params . rendering_intent = pgs -> renderingintent	622:4:19750:19806	977245	20	True				
ANR	977391	AssignmentExpression	rendering_params . rendering_intent = pgs -> renderingintent		977245	0		=			
ANR	977392	MemberAccess	rendering_params . rendering_intent		977245	0					
ANR	977393	Identifier	rendering_params		977245	0					
ANR	977394	Identifier	rendering_intent		977245	1					
ANR	977395	PtrMemberAccess	pgs -> renderingintent		977245	1					
ANR	977396	Identifier	pgs		977245	0					
ANR	977397	Identifier	renderingintent		977245	1					
ANR	977398	ExpressionStatement	rendering_params . cmm = gsCMM_DEFAULT	623:4:19812:19848	977245	21	True				
ANR	977399	AssignmentExpression	rendering_params . cmm = gsCMM_DEFAULT		977245	0		=			
ANR	977400	MemberAccess	rendering_params . cmm		977245	0					
ANR	977401	Identifier	rendering_params		977245	0					
ANR	977402	Identifier	cmm		977245	1					
ANR	977403	Identifier	gsCMM_DEFAULT		977245	1					
ANR	977404	IfStatement	if ( type == gs_color_space_index_Separation )		977245	22					
ANR	977405	Condition	type == gs_color_space_index_Separation	625:8:19859:19897	977245	0	True				
ANR	977406	EqualityExpression	type == gs_color_space_index_Separation		977245	0		==			
ANR	977407	Identifier	type		977245	0					
ANR	977408	Identifier	gs_color_space_index_Separation		977245	1					
ANR	977409	CompoundStatement		27:49:1086:1086	977245	1					
ANR	977410	ExpressionStatement	"pcs -> params . separation . get_colorname_string ( pgs -> memory , name , & pname , & name_size )"	626:8:19910:20004	977245	0	True				
ANR	977411	CallExpression	"pcs -> params . separation . get_colorname_string ( pgs -> memory , name , & pname , & name_size )"		977245	0					
ANR	977412	Callee	pcs -> params . separation . get_colorname_string		977245	0					
ANR	977413	MemberAccess	pcs -> params . separation . get_colorname_string		977245	0					
ANR	977414	MemberAccess	pcs -> params . separation		977245	0					
ANR	977415	PtrMemberAccess	pcs -> params		977245	0					
ANR	977416	Identifier	pcs		977245	0					
ANR	977417	Identifier	params		977245	1					
ANR	977418	Identifier	separation		977245	1					
ANR	977419	Identifier	get_colorname_string		977245	1					
ANR	977420	ArgumentList	pgs -> memory		977245	1					
ANR	977421	Argument	pgs -> memory		977245	0					
ANR	977422	PtrMemberAccess	pgs -> memory		977245	0					
ANR	977423	Identifier	pgs		977245	0					
ANR	977424	Identifier	memory		977245	1					
ANR	977425	Argument	name		977245	1					
ANR	977426	Identifier	name		977245	0					
ANR	977427	Argument	& pname		977245	2					
ANR	977428	UnaryOperationExpression	& pname		977245	0					
ANR	977429	UnaryOperator	&		977245	0					
ANR	977430	Identifier	pname		977245	1					
ANR	977431	Argument	& name_size		977245	3					
ANR	977432	UnaryOperationExpression	& name_size		977245	0					
ANR	977433	UnaryOperator	&		977245	0					
ANR	977434	Identifier	name_size		977245	1					
ANR	977435	ExpressionStatement	named_color_sep . colorant_name = ( char * ) pname	628:8:20014:20058	977245	1	True				
ANR	977436	AssignmentExpression	named_color_sep . colorant_name = ( char * ) pname		977245	0		=			
ANR	977437	MemberAccess	named_color_sep . colorant_name		977245	0					
ANR	977438	Identifier	named_color_sep		977245	0					
ANR	977439	Identifier	colorant_name		977245	1					
ANR	977440	CastExpression	( char * ) pname		977245	1					
ANR	977441	CastTarget	char *		977245	0					
ANR	977442	Identifier	pname		977245	1					
ANR	977443	ExpressionStatement	named_color_sep . name_size = name_size	629:8:20068:20105	977245	2	True				
ANR	977444	AssignmentExpression	named_color_sep . name_size = name_size		977245	0		=			
ANR	977445	MemberAccess	named_color_sep . name_size		977245	0					
ANR	977446	Identifier	named_color_sep		977245	0					
ANR	977447	Identifier	name_size		977245	1					
ANR	977448	Identifier	name_size		977245	1					
ANR	977449	ExpressionStatement	named_color_ptr = & named_color_sep	630:8:20115:20149	977245	3	True				
ANR	977450	AssignmentExpression	named_color_ptr = & named_color_sep		977245	0		=			
ANR	977451	Identifier	named_color_ptr		977245	0					
ANR	977452	UnaryOperationExpression	& named_color_sep		977245	1					
ANR	977453	UnaryOperator	&		977245	0					
ANR	977454	Identifier	named_color_sep		977245	1					
ANR	977455	ElseStatement	else		977245	0					
ANR	977456	IfStatement	if ( type == gs_color_space_index_DeviceN )		977245	0					
ANR	977457	Condition	type == gs_color_space_index_DeviceN	631:15:20166:20201	977245	0	True				
ANR	977458	EqualityExpression	type == gs_color_space_index_DeviceN		977245	0		==			
ANR	977459	Identifier	type		977245	0					
ANR	977460	Identifier	gs_color_space_index_DeviceN		977245	1					
ANR	977461	CompoundStatement		34:8:1400:1460	977245	1					
ANR	977462	IdentifierDeclStatement	const gs_separation_name * names = pcs -> params . device_n . names ;	632:8:20214:20274	977245	0	True				
ANR	977463	IdentifierDecl	* names = pcs -> params . device_n . names		977245	0					
ANR	977464	IdentifierDeclType	const gs_separation_name *		977245	0					
ANR	977465	Identifier	names		977245	1					
ANR	977466	AssignmentExpression	* names = pcs -> params . device_n . names		977245	2		=			
ANR	977467	Identifier	names		977245	0					
ANR	977468	MemberAccess	pcs -> params . device_n . names		977245	1					
ANR	977469	MemberAccess	pcs -> params . device_n		977245	0					
ANR	977470	PtrMemberAccess	pcs -> params		977245	0					
ANR	977471	Identifier	pcs		977245	0					
ANR	977472	Identifier	params		977245	1					
ANR	977473	Identifier	device_n		977245	1					
ANR	977474	Identifier	names		977245	1					
ANR	977475	ExpressionStatement	num_src_comps = pcs -> params . device_n . num_components	633:8:20284:20335	977245	1	True				
ANR	977476	AssignmentExpression	num_src_comps = pcs -> params . device_n . num_components		977245	0		=			
ANR	977477	Identifier	num_src_comps		977245	0					
ANR	977478	MemberAccess	pcs -> params . device_n . num_components		977245	1					
ANR	977479	MemberAccess	pcs -> params . device_n		977245	0					
ANR	977480	PtrMemberAccess	pcs -> params		977245	0					
ANR	977481	Identifier	pcs		977245	0					
ANR	977482	Identifier	params		977245	1					
ANR	977483	Identifier	device_n		977245	1					
ANR	977484	Identifier	num_components		977245	1					
ANR	977485	ExpressionStatement	"named_color_devn = ( gsicc_namedcolor_t * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , num_src_comps * sizeof ( gsicc_namedcolor_t ) , ""gx_remap_named_color"" )"	635:8:20398:20584	977245	2	True				
ANR	977486	AssignmentExpression	"named_color_devn = ( gsicc_namedcolor_t * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , num_src_comps * sizeof ( gsicc_namedcolor_t ) , ""gx_remap_named_color"" )"		977245	0		=			
ANR	977487	Identifier	named_color_devn		977245	0					
ANR	977488	CastExpression	"( gsicc_namedcolor_t * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , num_src_comps * sizeof ( gsicc_namedcolor_t ) , ""gx_remap_named_color"" )"		977245	1					
ANR	977489	CastTarget	gsicc_namedcolor_t *		977245	0					
ANR	977490	CallExpression	"gs_alloc_bytes ( dev -> memory -> non_gc_memory , num_src_comps * sizeof ( gsicc_namedcolor_t ) , ""gx_remap_named_color"" )"		977245	1					
ANR	977491	Callee	gs_alloc_bytes		977245	0					
ANR	977492	Identifier	gs_alloc_bytes		977245	0					
ANR	977493	ArgumentList	dev -> memory -> non_gc_memory		977245	1					
ANR	977494	Argument	dev -> memory -> non_gc_memory		977245	0					
ANR	977495	PtrMemberAccess	dev -> memory -> non_gc_memory		977245	0					
ANR	977496	PtrMemberAccess	dev -> memory		977245	0					
ANR	977497	Identifier	dev		977245	0					
ANR	977498	Identifier	memory		977245	1					
ANR	977499	Identifier	non_gc_memory		977245	1					
ANR	977500	Argument	num_src_comps * sizeof ( gsicc_namedcolor_t )		977245	1					
ANR	977501	MultiplicativeExpression	num_src_comps * sizeof ( gsicc_namedcolor_t )		977245	0		*			
ANR	977502	Identifier	num_src_comps		977245	0					
ANR	977503	SizeofExpression	sizeof ( gsicc_namedcolor_t )		977245	1					
ANR	977504	Sizeof	sizeof		977245	0					
ANR	977505	SizeofOperand	gsicc_namedcolor_t		977245	1					
ANR	977506	Argument	"""gx_remap_named_color"""		977245	2					
ANR	977507	PrimaryExpression	"""gx_remap_named_color"""		977245	0					
ANR	977508	IfStatement	if ( named_color_devn == NULL )		977245	3					
ANR	977509	Condition	named_color_devn == NULL	639:12:20598:20621	977245	0	True				
ANR	977510	EqualityExpression	named_color_devn == NULL		977245	0		==			
ANR	977511	Identifier	named_color_devn		977245	0					
ANR	977512	Identifier	NULL		977245	1					
ANR	977513	ReturnStatement	return false ;	640:12:20636:20648	977245	1	True				
ANR	977514	Identifier	false		977245	0					
ANR	977515	ForStatement	for ( k = 0 ; k < num_src_comps ; k ++ )		977245	4					
ANR	977516	ForInit	k = 0 ;	641:13:20715:20720	977245	0	True				
ANR	977517	AssignmentExpression	k = 0		977245	0		=			
ANR	977518	Identifier	k		977245	0					
ANR	977519	PrimaryExpression	0		977245	1					
ANR	977520	Condition	k < num_src_comps	641:20:20722:20738	977245	1	True				
ANR	977521	RelationalExpression	k < num_src_comps		977245	0		<			
ANR	977522	Identifier	k		977245	0					
ANR	977523	Identifier	num_src_comps		977245	1					
ANR	977524	PostIncDecOperationExpression	k ++	641:39:20741:20743	977245	2	True				
ANR	977525	Identifier	k		977245	0					
ANR	977526	IncDec	++		977245	1					
ANR	977527	CompoundStatement		43:44:1932:1932	977245	3					
ANR	977528	ExpressionStatement	"pcs -> params . device_n . get_colorname_string ( dev -> memory , names [ k ] , & pname , & name_size )"	642:12:20760:20860	977245	0	True				
ANR	977529	CallExpression	"pcs -> params . device_n . get_colorname_string ( dev -> memory , names [ k ] , & pname , & name_size )"		977245	0					
ANR	977530	Callee	pcs -> params . device_n . get_colorname_string		977245	0					
ANR	977531	MemberAccess	pcs -> params . device_n . get_colorname_string		977245	0					
ANR	977532	MemberAccess	pcs -> params . device_n		977245	0					
ANR	977533	PtrMemberAccess	pcs -> params		977245	0					
ANR	977534	Identifier	pcs		977245	0					
ANR	977535	Identifier	params		977245	1					
ANR	977536	Identifier	device_n		977245	1					
ANR	977537	Identifier	get_colorname_string		977245	1					
ANR	977538	ArgumentList	dev -> memory		977245	1					
ANR	977539	Argument	dev -> memory		977245	0					
ANR	977540	PtrMemberAccess	dev -> memory		977245	0					
ANR	977541	Identifier	dev		977245	0					
ANR	977542	Identifier	memory		977245	1					
ANR	977543	Argument	names [ k ]		977245	1					
ANR	977544	ArrayIndexing	names [ k ]		977245	0					
ANR	977545	Identifier	names		977245	0					
ANR	977546	Identifier	k		977245	1					
ANR	977547	Argument	& pname		977245	2					
ANR	977548	UnaryOperationExpression	& pname		977245	0					
ANR	977549	UnaryOperator	&		977245	0					
ANR	977550	Identifier	pname		977245	1					
ANR	977551	Argument	& name_size		977245	3					
ANR	977552	UnaryOperationExpression	& name_size		977245	0					
ANR	977553	UnaryOperator	&		977245	0					
ANR	977554	Identifier	name_size		977245	1					
ANR	977555	ExpressionStatement	named_color_devn [ k ] . colorant_name = ( char * ) pname	644:12:20874:20922	977245	1	True				
ANR	977556	AssignmentExpression	named_color_devn [ k ] . colorant_name = ( char * ) pname		977245	0		=			
ANR	977557	MemberAccess	named_color_devn [ k ] . colorant_name		977245	0					
ANR	977558	ArrayIndexing	named_color_devn [ k ]		977245	0					
ANR	977559	Identifier	named_color_devn		977245	0					
ANR	977560	Identifier	k		977245	1					
ANR	977561	Identifier	colorant_name		977245	1					
ANR	977562	CastExpression	( char * ) pname		977245	1					
ANR	977563	CastTarget	char *		977245	0					
ANR	977564	Identifier	pname		977245	1					
ANR	977565	ExpressionStatement	named_color_devn [ k ] . name_size = name_size	645:12:20936:20977	977245	2	True				
ANR	977566	AssignmentExpression	named_color_devn [ k ] . name_size = name_size		977245	0		=			
ANR	977567	MemberAccess	named_color_devn [ k ] . name_size		977245	0					
ANR	977568	ArrayIndexing	named_color_devn [ k ]		977245	0					
ANR	977569	Identifier	named_color_devn		977245	0					
ANR	977570	Identifier	k		977245	1					
ANR	977571	Identifier	name_size		977245	1					
ANR	977572	Identifier	name_size		977245	1					
ANR	977573	ExpressionStatement	named_color_ptr = named_color_devn	647:8:20997:21031	977245	5	True				
ANR	977574	AssignmentExpression	named_color_ptr = named_color_devn		977245	0		=			
ANR	977575	Identifier	named_color_ptr		977245	0					
ANR	977576	Identifier	named_color_devn		977245	1					
ANR	977577	ElseStatement	else		977245	0					
ANR	977578	ReturnStatement	return false ;	649:8:21052:21064	977245	0	True				
ANR	977579	Identifier	false		977245	0					
ANR	977580	ExpressionStatement	"code = gsicc_transform_named_color ( pcc -> paint . values , named_color_ptr , num_src_comps , device_values , pgs , dev , NULL , & rendering_params )"	651:4:21126:21269	977245	23	True				
ANR	977581	AssignmentExpression	"code = gsicc_transform_named_color ( pcc -> paint . values , named_color_ptr , num_src_comps , device_values , pgs , dev , NULL , & rendering_params )"		977245	0		=			
ANR	977582	Identifier	code		977245	0					
ANR	977583	CallExpression	"gsicc_transform_named_color ( pcc -> paint . values , named_color_ptr , num_src_comps , device_values , pgs , dev , NULL , & rendering_params )"		977245	1					
ANR	977584	Callee	gsicc_transform_named_color		977245	0					
ANR	977585	Identifier	gsicc_transform_named_color		977245	0					
ANR	977586	ArgumentList	pcc -> paint . values		977245	1					
ANR	977587	Argument	pcc -> paint . values		977245	0					
ANR	977588	MemberAccess	pcc -> paint . values		977245	0					
ANR	977589	PtrMemberAccess	pcc -> paint		977245	0					
ANR	977590	Identifier	pcc		977245	0					
ANR	977591	Identifier	paint		977245	1					
ANR	977592	Identifier	values		977245	1					
ANR	977593	Argument	named_color_ptr		977245	1					
ANR	977594	Identifier	named_color_ptr		977245	0					
ANR	977595	Argument	num_src_comps		977245	2					
ANR	977596	Identifier	num_src_comps		977245	0					
ANR	977597	Argument	device_values		977245	3					
ANR	977598	Identifier	device_values		977245	0					
ANR	977599	Argument	pgs		977245	4					
ANR	977600	Identifier	pgs		977245	0					
ANR	977601	Argument	dev		977245	5					
ANR	977602	Identifier	dev		977245	0					
ANR	977603	Argument	NULL		977245	6					
ANR	977604	Identifier	NULL		977245	0					
ANR	977605	Argument	& rendering_params		977245	7					
ANR	977606	UnaryOperationExpression	& rendering_params		977245	0					
ANR	977607	UnaryOperator	&		977245	0					
ANR	977608	Identifier	rendering_params		977245	1					
ANR	977609	IfStatement	if ( named_color_devn != NULL )		977245	24					
ANR	977610	Condition	named_color_devn != NULL	653:8:21279:21302	977245	0	True				
ANR	977611	EqualityExpression	named_color_devn != NULL		977245	0		!=			
ANR	977612	Identifier	named_color_devn		977245	0					
ANR	977613	Identifier	NULL		977245	1					
ANR	977614	ExpressionStatement	"gs_free_object ( dev -> memory -> non_gc_memory , named_color_devn , ""gx_remap_named_color"" )"	654:8:21313:21409	977245	1	True				
ANR	977615	CallExpression	"gs_free_object ( dev -> memory -> non_gc_memory , named_color_devn , ""gx_remap_named_color"" )"		977245	0					
ANR	977616	Callee	gs_free_object		977245	0					
ANR	977617	Identifier	gs_free_object		977245	0					
ANR	977618	ArgumentList	dev -> memory -> non_gc_memory		977245	1					
ANR	977619	Argument	dev -> memory -> non_gc_memory		977245	0					
ANR	977620	PtrMemberAccess	dev -> memory -> non_gc_memory		977245	0					
ANR	977621	PtrMemberAccess	dev -> memory		977245	0					
ANR	977622	Identifier	dev		977245	0					
ANR	977623	Identifier	memory		977245	1					
ANR	977624	Identifier	non_gc_memory		977245	1					
ANR	977625	Argument	named_color_devn		977245	1					
ANR	977626	Identifier	named_color_devn		977245	0					
ANR	977627	Argument	"""gx_remap_named_color"""		977245	2					
ANR	977628	PrimaryExpression	"""gx_remap_named_color"""		977245	0					
ANR	977629	IfStatement	if ( code == 0 )		977245	25					
ANR	977630	Condition	code == 0	657:8:21420:21428	977245	0	True				
ANR	977631	EqualityExpression	code == 0		977245	0		==			
ANR	977632	Identifier	code		977245	0					
ANR	977633	PrimaryExpression	0		977245	1					
ANR	977634	CompoundStatement		59:19:2617:2617	977245	1					
ANR	977635	ForStatement	for ( k = 0 ; k < num_des_comps ; k ++ )		977245	0					
ANR	977636	ForInit	k = 0 ;	666:13:22060:22065	977245	0	True				
ANR	977637	AssignmentExpression	k = 0		977245	0		=			
ANR	977638	Identifier	k		977245	0					
ANR	977639	PrimaryExpression	0		977245	1					
ANR	977640	Condition	k < num_des_comps	666:20:22067:22083	977245	1	True				
ANR	977641	RelationalExpression	k < num_des_comps		977245	0		<			
ANR	977642	Identifier	k		977245	0					
ANR	977643	Identifier	num_des_comps		977245	1					
ANR	977644	PostIncDecOperationExpression	k ++	666:39:22086:22088	977245	2	True				
ANR	977645	Identifier	k		977245	0					
ANR	977646	IncDec	++		977245	1					
ANR	977647	ExpressionStatement	conc [ k ] = float2frac ( ( ( float ) device_values [ k ] ) / 65535.0 )	667:12:22103:22160	977245	3	True				
ANR	977648	AssignmentExpression	conc [ k ] = float2frac ( ( ( float ) device_values [ k ] ) / 65535.0 )		977245	0		=			
ANR	977649	ArrayIndexing	conc [ k ]		977245	0					
ANR	977650	Identifier	conc		977245	0					
ANR	977651	Identifier	k		977245	1					
ANR	977652	CallExpression	float2frac ( ( ( float ) device_values [ k ] ) / 65535.0 )		977245	1					
ANR	977653	Callee	float2frac		977245	0					
ANR	977654	Identifier	float2frac		977245	0					
ANR	977655	ArgumentList	( ( float ) device_values [ k ] ) / 65535.0		977245	1					
ANR	977656	Argument	( ( float ) device_values [ k ] ) / 65535.0		977245	0					
ANR	977657	MultiplicativeExpression	( ( float ) device_values [ k ] ) / 65535.0		977245	0		/			
ANR	977658	CastExpression	( float ) device_values [ k ]		977245	0					
ANR	977659	CastTarget	float		977245	0					
ANR	977660	ArrayIndexing	device_values [ k ]		977245	1					
ANR	977661	Identifier	device_values		977245	0					
ANR	977662	Identifier	k		977245	1					
ANR	977663	PrimaryExpression	65535.0		977245	1					
ANR	977664	IfStatement	if ( ! named_color_equivalent_cmyk_colors ( pgs ) )		977245	1					
ANR	977665	Condition	! named_color_equivalent_cmyk_colors ( pgs )	671:12:22331:22370	977245	0	True				
ANR	977666	UnaryOperationExpression	! named_color_equivalent_cmyk_colors ( pgs )		977245	0					
ANR	977667	UnaryOperator	!		977245	0					
ANR	977668	CallExpression	named_color_equivalent_cmyk_colors ( pgs )		977245	1					
ANR	977669	Callee	named_color_equivalent_cmyk_colors		977245	0					
ANR	977670	Identifier	named_color_equivalent_cmyk_colors		977245	0					
ANR	977671	ArgumentList	pgs		977245	1					
ANR	977672	Argument	pgs		977245	0					
ANR	977673	Identifier	pgs		977245	0					
ANR	977674	CompoundStatement		73:54:3559:3559	977245	1					
ANR	977675	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	678:12:22819:22871	977245	0	True				
ANR	977676	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		977245	0		=			
ANR	977677	Identifier	code		977245	0					
ANR	977678	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		977245	1					
ANR	977679	Callee	"dev_proc ( dev , get_profile )"		977245	0					
ANR	977680	CallExpression	"dev_proc ( dev , get_profile )"		977245	0					
ANR	977681	Callee	dev_proc		977245	0					
ANR	977682	Identifier	dev_proc		977245	0					
ANR	977683	ArgumentList	dev		977245	1					
ANR	977684	Argument	dev		977245	0					
ANR	977685	Identifier	dev		977245	0					
ANR	977686	Argument	get_profile		977245	1					
ANR	977687	Identifier	get_profile		977245	0					
ANR	977688	ArgumentList	dev		977245	1					
ANR	977689	Argument	dev		977245	0					
ANR	977690	Identifier	dev		977245	0					
ANR	977691	Argument	& dev_profile		977245	1					
ANR	977692	UnaryOperationExpression	& dev_profile		977245	0					
ANR	977693	UnaryOperator	&		977245	0					
ANR	977694	Identifier	dev_profile		977245	1					
ANR	977695	IfStatement	if ( code < 0 )		977245	1					
ANR	977696	Condition	code < 0	679:16:22889:22896	977245	0	True				
ANR	977697	RelationalExpression	code < 0		977245	0		<			
ANR	977698	Identifier	code		977245	0					
ANR	977699	PrimaryExpression	0		977245	1					
ANR	977700	ReturnStatement	return false ;	680:16:22915:22927	977245	1	True				
ANR	977701	Identifier	false		977245	0					
ANR	977702	IfStatement	if ( dev_profile -> device_profile [ 0 ] -> data_cs == gsNCHANNEL )		977245	2					
ANR	977703	Condition	dev_profile -> device_profile [ 0 ] -> data_cs == gsNCHANNEL	683:16:23003:23055	977245	0	True				
ANR	977704	EqualityExpression	dev_profile -> device_profile [ 0 ] -> data_cs == gsNCHANNEL		977245	0		==			
ANR	977705	PtrMemberAccess	dev_profile -> device_profile [ 0 ] -> data_cs		977245	0					
ANR	977706	ArrayIndexing	dev_profile -> device_profile [ 0 ]		977245	0					
ANR	977707	PtrMemberAccess	dev_profile -> device_profile		977245	0					
ANR	977708	Identifier	dev_profile		977245	0					
ANR	977709	Identifier	device_profile		977245	1					
ANR	977710	PrimaryExpression	0		977245	1					
ANR	977711	Identifier	data_cs		977245	1					
ANR	977712	Identifier	gsNCHANNEL		977245	1					
ANR	977713	CompoundStatement		85:71:4244:4244	977245	1					
ANR	977714	IfStatement	if ( dev_profile -> spotnames == NULL )		977245	0					
ANR	977715	Condition	dev_profile -> spotnames == NULL	684:20:23080:23109	977245	0	True				
ANR	977716	EqualityExpression	dev_profile -> spotnames == NULL		977245	0		==			
ANR	977717	PtrMemberAccess	dev_profile -> spotnames		977245	0					
ANR	977718	Identifier	dev_profile		977245	0					
ANR	977719	Identifier	spotnames		977245	1					
ANR	977720	Identifier	NULL		977245	1					
ANR	977721	ReturnStatement	return false ;	685:20:23132:23144	977245	1	True				
ANR	977722	Identifier	false		977245	0					
ANR	977723	IfStatement	if ( ! dev_profile -> spotnames -> equiv_cmyk_set )		977245	1					
ANR	977724	Condition	! dev_profile -> spotnames -> equiv_cmyk_set	686:20:23166:23204	977245	0	True				
ANR	977725	UnaryOperationExpression	! dev_profile -> spotnames -> equiv_cmyk_set		977245	0					
ANR	977726	UnaryOperator	!		977245	0					
ANR	977727	PtrMemberAccess	dev_profile -> spotnames -> equiv_cmyk_set		977245	1					
ANR	977728	PtrMemberAccess	dev_profile -> spotnames		977245	0					
ANR	977729	Identifier	dev_profile		977245	0					
ANR	977730	Identifier	spotnames		977245	1					
ANR	977731	Identifier	equiv_cmyk_set		977245	1					
ANR	977732	CompoundStatement		88:61:4393:4393	977245	1					
ANR	977733	ExpressionStatement	"code = gsicc_set_devicen_equiv_colors ( dev , pgs , dev_profile -> device_profile [ 0 ] )"	689:20:23368:23447	977245	0	True				
ANR	977734	AssignmentExpression	"code = gsicc_set_devicen_equiv_colors ( dev , pgs , dev_profile -> device_profile [ 0 ] )"		977245	0		=			
ANR	977735	Identifier	code		977245	0					
ANR	977736	CallExpression	"gsicc_set_devicen_equiv_colors ( dev , pgs , dev_profile -> device_profile [ 0 ] )"		977245	1					
ANR	977737	Callee	gsicc_set_devicen_equiv_colors		977245	0					
ANR	977738	Identifier	gsicc_set_devicen_equiv_colors		977245	0					
ANR	977739	ArgumentList	dev		977245	1					
ANR	977740	Argument	dev		977245	0					
ANR	977741	Identifier	dev		977245	0					
ANR	977742	Argument	pgs		977245	1					
ANR	977743	Identifier	pgs		977245	0					
ANR	977744	Argument	dev_profile -> device_profile [ 0 ]		977245	2					
ANR	977745	ArrayIndexing	dev_profile -> device_profile [ 0 ]		977245	0					
ANR	977746	PtrMemberAccess	dev_profile -> device_profile		977245	0					
ANR	977747	Identifier	dev_profile		977245	0					
ANR	977748	Identifier	device_profile		977245	1					
ANR	977749	PrimaryExpression	0		977245	1					
ANR	977750	IfStatement	if ( code < 0 )		977245	1					
ANR	977751	Condition	code < 0	690:24:23473:23480	977245	0	True				
ANR	977752	RelationalExpression	code < 0		977245	0		<			
ANR	977753	Identifier	code		977245	0					
ANR	977754	PrimaryExpression	0		977245	1					
ANR	977755	ReturnStatement	return false ;	691:24:23507:23519	977245	1	True				
ANR	977756	Identifier	false		977245	0					
ANR	977757	ExpressionStatement	dev_profile -> spotnames -> equiv_cmyk_set = true	692:20:23541:23586	977245	2	True				
ANR	977758	AssignmentExpression	dev_profile -> spotnames -> equiv_cmyk_set = true		977245	0		=			
ANR	977759	PtrMemberAccess	dev_profile -> spotnames -> equiv_cmyk_set		977245	0					
ANR	977760	PtrMemberAccess	dev_profile -> spotnames		977245	0					
ANR	977761	Identifier	dev_profile		977245	0					
ANR	977762	Identifier	spotnames		977245	1					
ANR	977763	Identifier	equiv_cmyk_set		977245	1					
ANR	977764	Identifier	true		977245	1					
ANR	977765	ExpressionStatement	"gx_remap_concrete_devicen ( conc , pdc , pgs , dev , select )"	694:16:23622:23676	977245	2	True				
ANR	977766	CallExpression	"gx_remap_concrete_devicen ( conc , pdc , pgs , dev , select )"		977245	0					
ANR	977767	Callee	gx_remap_concrete_devicen		977245	0					
ANR	977768	Identifier	gx_remap_concrete_devicen		977245	0					
ANR	977769	ArgumentList	conc		977245	1					
ANR	977770	Argument	conc		977245	0					
ANR	977771	Identifier	conc		977245	0					
ANR	977772	Argument	pdc		977245	1					
ANR	977773	Identifier	pdc		977245	0					
ANR	977774	Argument	pgs		977245	2					
ANR	977775	Identifier	pgs		977245	0					
ANR	977776	Argument	dev		977245	3					
ANR	977777	Identifier	dev		977245	0					
ANR	977778	Argument	select		977245	4					
ANR	977779	Identifier	select		977245	0					
ANR	977780	ElseStatement	else		977245	0					
ANR	977781	CompoundStatement		98:16:4901:4949	977245	0					
ANR	977782	IdentifierDeclStatement	gs_gstate temp_state = * ( ( const gs_gstate * ) pgs ) ;	696:16:23715:23763	977245	0	True				
ANR	977783	IdentifierDecl	temp_state = * ( ( const gs_gstate * ) pgs )		977245	0					
ANR	977784	IdentifierDeclType	gs_gstate		977245	0					
ANR	977785	Identifier	temp_state		977245	1					
ANR	977786	AssignmentExpression	temp_state = * ( ( const gs_gstate * ) pgs )		977245	2		=			
ANR	977787	Identifier	temp_state		977245	0					
ANR	977788	UnaryOperationExpression	* ( ( const gs_gstate * ) pgs )		977245	1					
ANR	977789	UnaryOperator	*		977245	0					
ANR	977790	CastExpression	( const gs_gstate * ) pgs		977245	1					
ANR	977791	CastTarget	const gs_gstate *		977245	0					
ANR	977792	Identifier	pgs		977245	1					
ANR	977793	ForStatement	for ( k = 0 ; k < dev -> color_info . num_components ; k ++ )		977245	1					
ANR	977794	ForInit	k = 0 ;	702:21:24034:24039	977245	0	True				
ANR	977795	AssignmentExpression	k = 0		977245	0		=			
ANR	977796	Identifier	k		977245	0					
ANR	977797	PrimaryExpression	0		977245	1					
ANR	977798	Condition	k < dev -> color_info . num_components	702:28:24041:24074	977245	1	True				
ANR	977799	RelationalExpression	k < dev -> color_info . num_components		977245	0		<			
ANR	977800	Identifier	k		977245	0					
ANR	977801	MemberAccess	dev -> color_info . num_components		977245	1					
ANR	977802	PtrMemberAccess	dev -> color_info		977245	0					
ANR	977803	Identifier	dev		977245	0					
ANR	977804	Identifier	color_info		977245	1					
ANR	977805	Identifier	num_components		977245	1					
ANR	977806	PostIncDecOperationExpression	k ++	702:64:24077:24079	977245	2	True				
ANR	977807	Identifier	k		977245	0					
ANR	977808	IncDec	++		977245	1					
ANR	977809	ExpressionStatement	temp_state . color_component_map . color_map [ k ] = k	703:20:24102:24149	977245	3	True				
ANR	977810	AssignmentExpression	temp_state . color_component_map . color_map [ k ] = k		977245	0		=			
ANR	977811	ArrayIndexing	temp_state . color_component_map . color_map [ k ]		977245	0					
ANR	977812	MemberAccess	temp_state . color_component_map . color_map		977245	0					
ANR	977813	MemberAccess	temp_state . color_component_map		977245	0					
ANR	977814	Identifier	temp_state		977245	0					
ANR	977815	Identifier	color_component_map		977245	1					
ANR	977816	Identifier	color_map		977245	1					
ANR	977817	Identifier	k		977245	1					
ANR	977818	Identifier	k		977245	1					
ANR	977819	ExpressionStatement	temp_state . color_component_map . num_components = dev -> color_info . num_components	704:16:24167:24245	977245	2	True				
ANR	977820	AssignmentExpression	temp_state . color_component_map . num_components = dev -> color_info . num_components		977245	0		=			
ANR	977821	MemberAccess	temp_state . color_component_map . num_components		977245	0					
ANR	977822	MemberAccess	temp_state . color_component_map		977245	0					
ANR	977823	Identifier	temp_state		977245	0					
ANR	977824	Identifier	color_component_map		977245	1					
ANR	977825	Identifier	num_components		977245	1					
ANR	977826	MemberAccess	dev -> color_info . num_components		977245	1					
ANR	977827	PtrMemberAccess	dev -> color_info		977245	0					
ANR	977828	Identifier	dev		977245	0					
ANR	977829	Identifier	color_info		977245	1					
ANR	977830	Identifier	num_components		977245	1					
ANR	977831	ExpressionStatement	"gx_remap_concrete_devicen ( conc , pdc , & temp_state , dev , select )"	705:16:24263:24325	977245	3	True				
ANR	977832	CallExpression	"gx_remap_concrete_devicen ( conc , pdc , & temp_state , dev , select )"		977245	0					
ANR	977833	Callee	gx_remap_concrete_devicen		977245	0					
ANR	977834	Identifier	gx_remap_concrete_devicen		977245	0					
ANR	977835	ArgumentList	conc		977245	1					
ANR	977836	Argument	conc		977245	0					
ANR	977837	Identifier	conc		977245	0					
ANR	977838	Argument	pdc		977245	1					
ANR	977839	Identifier	pdc		977245	0					
ANR	977840	Argument	& temp_state		977245	2					
ANR	977841	UnaryOperationExpression	& temp_state		977245	0					
ANR	977842	UnaryOperator	&		977245	0					
ANR	977843	Identifier	temp_state		977245	1					
ANR	977844	Argument	dev		977245	3					
ANR	977845	Identifier	dev		977245	0					
ANR	977846	Argument	select		977245	4					
ANR	977847	Identifier	select		977245	0					
ANR	977848	ElseStatement	else		977245	0					
ANR	977849	CompoundStatement		109:15:5542:5542	977245	0					
ANR	977850	ExpressionStatement	"gx_remap_concrete_devicen ( conc , pdc , pgs , dev , select )"	708:12:24370:24424	977245	0	True				
ANR	977851	CallExpression	"gx_remap_concrete_devicen ( conc , pdc , pgs , dev , select )"		977245	0					
ANR	977852	Callee	gx_remap_concrete_devicen		977245	0					
ANR	977853	Identifier	gx_remap_concrete_devicen		977245	0					
ANR	977854	ArgumentList	conc		977245	1					
ANR	977855	Argument	conc		977245	0					
ANR	977856	Identifier	conc		977245	0					
ANR	977857	Argument	pdc		977245	1					
ANR	977858	Identifier	pdc		977245	0					
ANR	977859	Argument	pgs		977245	2					
ANR	977860	Identifier	pgs		977245	0					
ANR	977861	Argument	dev		977245	3					
ANR	977862	Identifier	dev		977245	0					
ANR	977863	Argument	select		977245	4					
ANR	977864	Identifier	select		977245	0					
ANR	977865	ExpressionStatement	i = any_abs ( i )	711:8:24514:24528	977245	2	True				
ANR	977866	AssignmentExpression	i = any_abs ( i )		977245	0		=			
ANR	977867	Identifier	i		977245	0					
ANR	977868	CallExpression	any_abs ( i )		977245	1					
ANR	977869	Callee	any_abs		977245	0					
ANR	977870	Identifier	any_abs		977245	0					
ANR	977871	ArgumentList	i		977245	1					
ANR	977872	Argument	i		977245	0					
ANR	977873	Identifier	i		977245	0					
ANR	977874	ForStatement	for ( i -- ; i >= 0 ; i -- )		977245	3					
ANR	977875	ForInit	i -- ;	712:13:24543:24546	977245	0	True				
ANR	977876	PostIncDecOperationExpression	i --		977245	0					
ANR	977877	Identifier	i		977245	0					
ANR	977878	IncDec	--		977245	1					
ANR	977879	Condition	i >= 0	712:18:24548:24553	977245	1	True				
ANR	977880	RelationalExpression	i >= 0		977245	0		>=			
ANR	977881	Identifier	i		977245	0					
ANR	977882	PrimaryExpression	0		977245	1					
ANR	977883	PostIncDecOperationExpression	i --	712:26:24556:24558	977245	2	True				
ANR	977884	Identifier	i		977245	0					
ANR	977885	IncDec	--		977245	1					
ANR	977886	ExpressionStatement	pdc -> ccolor . paint . values [ i ] = pcc -> paint . values [ i ]	713:12:24573:24623	977245	3	True				
ANR	977887	AssignmentExpression	pdc -> ccolor . paint . values [ i ] = pcc -> paint . values [ i ]		977245	0		=			
ANR	977888	ArrayIndexing	pdc -> ccolor . paint . values [ i ]		977245	0					
ANR	977889	MemberAccess	pdc -> ccolor . paint . values		977245	0					
ANR	977890	MemberAccess	pdc -> ccolor . paint		977245	0					
ANR	977891	PtrMemberAccess	pdc -> ccolor		977245	0					
ANR	977892	Identifier	pdc		977245	0					
ANR	977893	Identifier	ccolor		977245	1					
ANR	977894	Identifier	paint		977245	1					
ANR	977895	Identifier	values		977245	1					
ANR	977896	Identifier	i		977245	1					
ANR	977897	ArrayIndexing	pcc -> paint . values [ i ]		977245	1					
ANR	977898	MemberAccess	pcc -> paint . values		977245	0					
ANR	977899	PtrMemberAccess	pcc -> paint		977245	0					
ANR	977900	Identifier	pcc		977245	0					
ANR	977901	Identifier	paint		977245	1					
ANR	977902	Identifier	values		977245	1					
ANR	977903	Identifier	i		977245	1					
ANR	977904	ExpressionStatement	pdc -> ccolor_valid = true	714:8:24633:24657	977245	4	True				
ANR	977905	AssignmentExpression	pdc -> ccolor_valid = true		977245	0		=			
ANR	977906	PtrMemberAccess	pdc -> ccolor_valid		977245	0					
ANR	977907	Identifier	pdc		977245	0					
ANR	977908	Identifier	ccolor_valid		977245	1					
ANR	977909	Identifier	true		977245	1					
ANR	977910	ReturnStatement	return true ;	715:8:24667:24678	977245	5	True				
ANR	977911	Identifier	true		977245	0					
ANR	977912	ReturnStatement	return false ;	717:4:24690:24702	977245	26	True				
ANR	977913	Identifier	false		977245	0					
ANR	977914	ReturnType	bool		977245	1					
ANR	977915	Identifier	gx_remap_named_color		977245	2					
ANR	977916	ParameterList	"const gs_client_color * pcc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		977245	3					
ANR	977917	Parameter	const gs_client_color * pcc	596:21:18667:18693	977245	0	True				
ANR	977918	ParameterType	const gs_client_color *		977245	0					
ANR	977919	Identifier	pcc		977245	1					
ANR	977920	Parameter	const gs_color_space * pcs	596:50:18696:18721	977245	1	True				
ANR	977921	ParameterType	const gs_color_space *		977245	0					
ANR	977922	Identifier	pcs		977245	1					
ANR	977923	Parameter	gx_device_color * pdc	597:0:18724:18744	977245	2	True				
ANR	977924	ParameterType	gx_device_color *		977245	0					
ANR	977925	Identifier	pdc		977245	1					
ANR	977926	Parameter	const gs_gstate * pgs	597:23:18747:18767	977245	3	True				
ANR	977927	ParameterType	const gs_gstate *		977245	0					
ANR	977928	Identifier	pgs		977245	1					
ANR	977929	Parameter	gx_device * dev	597:46:18770:18784	977245	4	True				
ANR	977930	ParameterType	gx_device *		977245	0					
ANR	977931	Identifier	dev		977245	1					
ANR	977932	Parameter	gs_color_select_t select	598:0:18787:18810	977245	5	True				
ANR	977933	ParameterType	gs_color_select_t		977245	0					
ANR	977934	Identifier	select		977245	1					
ANR	977935	CFGEntryNode	ENTRY		977245		True				
ANR	977936	CFGExitNode	EXIT		977245		True				
ANR	977937	Symbol	select		977245						
ANR	977938	Symbol	* pgs		977245						
ANR	977939	Symbol	type		977245						
ANR	977940	Symbol	gsicc_transform_named_color		977245						
ANR	977941	Symbol	conc		977245						
ANR	977942	Symbol	named_color_devn		977245						
ANR	977943	Symbol	& name_size		977245						
ANR	977944	Symbol	dev		977245						
ANR	977945	Symbol	pcc -> paint		977245						
ANR	977946	Symbol	named_color_devn [ k ] . colorant_name		977245						
ANR	977947	Symbol	named_color_sep		977245						
ANR	977948	Symbol	dev -> color_info . num_components		977245						
ANR	977949	Symbol	pcs -> params . device_n . names		977245						
ANR	977950	Symbol	& dev_profile		977245						
ANR	977951	Symbol	* dev_profile		977245						
ANR	977952	Symbol	named_color_sep . colorant_name		977245						
ANR	977953	Symbol	pgs -> renderingintent		977245						
ANR	977954	Symbol	* pdc -> ccolor		977245						
ANR	977955	Symbol	dev -> graphics_type_tag		977245						
ANR	977956	Symbol	* dev_profile -> spotnames		977245						
ANR	977957	Symbol	gs_color_space_get_index		977245						
ANR	977958	Symbol	* dev -> memory		977245						
ANR	977959	Symbol	* dev		977245						
ANR	977960	Symbol	gs_color_space_index_Separation		977245						
ANR	977961	Symbol	* * pdc		977245						
ANR	977962	Symbol	dev_profile -> device_profile		977245						
ANR	977963	Symbol	* temp_state . color_component_map . color_map		977245						
ANR	977964	Symbol	dev -> color_info		977245						
ANR	977965	Symbol	* names		977245						
ANR	977966	Symbol	& named_color_sep		977245						
ANR	977967	Symbol	gsicc_set_devicen_equiv_colors		977245						
ANR	977968	Symbol	pdc -> ccolor_valid		977245						
ANR	977969	Symbol	named_color_ptr		977245						
ANR	977970	Symbol	any_abs		977245						
ANR	977971	Symbol	* pcs -> type		977245						
ANR	977972	Symbol	device_values		977245						
ANR	977973	Symbol	* * dev_profile -> device_profile		977245						
ANR	977974	Symbol	pgs		977245						
ANR	977975	Symbol	pgs -> memory		977245						
ANR	977976	Symbol	pcs -> type -> num_components		977245						
ANR	977977	Symbol	num_src_comps		977245						
ANR	977978	Symbol	& rendering_params		977245						
ANR	977979	Symbol	dev_profile -> spotnames		977245						
ANR	977980	Symbol	* temp_state		977245						
ANR	977981	Symbol	* * * dev_profile		977245						
ANR	977982	Symbol	temp_state . color_component_map		977245						
ANR	977983	Symbol	rendering_params . rendering_intent		977245						
ANR	977984	Symbol	pdc -> ccolor . paint . values		977245						
ANR	977985	Symbol	pcs -> params		977245						
ANR	977986	Symbol	* named_color_devn		977245						
ANR	977987	Symbol	i		977245						
ANR	977988	Symbol	* * dev		977245						
ANR	977989	Symbol	k		977245						
ANR	977990	Symbol	names		977245						
ANR	977991	Symbol	* * dev_profile		977245						
ANR	977992	Symbol	pdc -> ccolor		977245						
ANR	977993	Symbol	gsNCHANNEL		977245						
ANR	977994	Symbol	rendering_params . graphics_type_tag		977245						
ANR	977995	Symbol	pcs -> params . device_n		977245						
ANR	977996	Symbol	dev_profile		977245						
ANR	977997	Symbol	* dev_profile -> device_profile		977245						
ANR	977998	Symbol	* pcs		977245						
ANR	977999	Symbol	gs_color_space_index_DeviceN		977245						
ANR	978000	Symbol	pdc -> ccolor . paint		977245						
ANR	978001	Symbol	* pdc		977245						
ANR	978002	Symbol	* pcc -> paint		977245						
ANR	978003	Symbol	named_color_sep . name_size		977245						
ANR	978004	Symbol	pcs -> type		977245						
ANR	978005	Symbol	* device_values		977245						
ANR	978006	Symbol	rendering_params . cmm		977245						
ANR	978007	Symbol	NULL		977245						
ANR	978008	Symbol	& pname		977245						
ANR	978009	Symbol	* * pcc		977245						
ANR	978010	Symbol	pname		977245						
ANR	978011	Symbol	pgs -> blackptcomp		977245						
ANR	978012	Symbol	float2frac		977245						
ANR	978013	Symbol	gsBKPRESNOTSPECIFIED		977245						
ANR	978014	Symbol	rendering_params . preserve_black		977245						
ANR	978015	Symbol	dev -> memory -> non_gc_memory		977245						
ANR	978016	Symbol	* pdc -> ccolor . paint . values		977245						
ANR	978017	Symbol	rendering_params		977245						
ANR	978018	Symbol	temp_state . color_component_map . num_components		977245						
ANR	978019	Symbol	dev_profile -> device_profile [ 0 ] -> data_cs		977245						
ANR	978020	Symbol	* * pcs		977245						
ANR	978021	Symbol	name		977245						
ANR	978022	Symbol	true		977245						
ANR	978023	Symbol	* pcc		977245						
ANR	978024	Symbol	num_des_comps		977245						
ANR	978025	Symbol	named_color_equivalent_cmyk_colors		977245						
ANR	978026	Symbol	name_size		977245						
ANR	978027	Symbol	* pcc -> paint . values		977245						
ANR	978028	Symbol	code		977245						
ANR	978029	Symbol	temp_state . color_component_map . color_map		977245						
ANR	978030	Symbol	* conc		977245						
ANR	978031	Symbol	pcs -> params . separation		977245						
ANR	978032	Symbol	dev_profile -> spotnames -> equiv_cmyk_set		977245						
ANR	978033	Symbol	pcc -> paint . values		977245						
ANR	978034	Symbol	pcc		977245						
ANR	978035	Symbol	pcs -> params . separation . sep_name		977245						
ANR	978036	Symbol	* ( ( const gs_gstate * ) pgs )		977245						
ANR	978037	Symbol	dev_proc		977245						
ANR	978038	Symbol	* temp_state . color_component_map		977245						
ANR	978039	Symbol	rendering_params . override_icc		977245						
ANR	978040	Symbol	& temp_state		977245						
ANR	978041	Symbol	get_profile		977245						
ANR	978042	Symbol	rendering_params . black_point_comp		977245						
ANR	978043	Symbol	named_color_devn [ k ] . name_size		977245						
ANR	978044	Symbol	pcs		977245						
ANR	978045	Symbol	gsCMM_DEFAULT		977245						
ANR	978046	Symbol	gs_alloc_bytes		977245						
ANR	978047	Symbol	* pdc -> ccolor . paint		977245						
ANR	978048	Symbol	false		977245						
ANR	978049	Symbol	pdc		977245						
ANR	978050	Symbol	temp_state		977245						
ANR	978051	Symbol	dev -> memory		977245						
ANR	978052	Symbol	* i		977245						
ANR	978053	Symbol	pcs -> params . device_n . num_components		977245						
ANR	978054	Symbol	* k		977245						
ANR	978055	Function	gx_default_remap_color	722:0:24800:25807							
ANR	978056	FunctionDef	"gx_default_remap_color (const gs_client_color * pcc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		978055	0					
ANR	978057	CompoundStatement		726:0:25004:25807	978055	0					
ANR	978058	IdentifierDeclStatement	frac conc [ GS_CLIENT_COLOR_MAX_COMPONENTS ] ;	727:4:25010:25051	978055	0	True				
ANR	978059	IdentifierDecl	conc [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		978055	0					
ANR	978060	IdentifierDeclType	frac [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		978055	0					
ANR	978061	Identifier	conc		978055	1					
ANR	978062	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		978055	2					
ANR	978063	IdentifierDeclStatement	const gs_color_space * pconcs ;	728:4:25057:25085	978055	1	True				
ANR	978064	IdentifierDecl	* pconcs		978055	0					
ANR	978065	IdentifierDeclType	const gs_color_space *		978055	0					
ANR	978066	Identifier	pconcs		978055	1					
ANR	978067	IdentifierDeclStatement	int i = pcs -> type -> num_components ( pcs ) ;	729:4:25091:25129	978055	2	True				
ANR	978068	IdentifierDecl	i = pcs -> type -> num_components ( pcs )		978055	0					
ANR	978069	IdentifierDeclType	int		978055	0					
ANR	978070	Identifier	i		978055	1					
ANR	978071	AssignmentExpression	i = pcs -> type -> num_components ( pcs )		978055	2		=			
ANR	978072	Identifier	i		978055	0					
ANR	978073	CallExpression	pcs -> type -> num_components ( pcs )		978055	1					
ANR	978074	Callee	pcs -> type -> num_components		978055	0					
ANR	978075	PtrMemberAccess	pcs -> type -> num_components		978055	0					
ANR	978076	PtrMemberAccess	pcs -> type		978055	0					
ANR	978077	Identifier	pcs		978055	0					
ANR	978078	Identifier	type		978055	1					
ANR	978079	Identifier	num_components		978055	1					
ANR	978080	ArgumentList	pcs		978055	1					
ANR	978081	Argument	pcs		978055	0					
ANR	978082	Identifier	pcs		978055	0					
ANR	978083	IdentifierDeclStatement	"int code = ( * pcs -> type -> concretize_color ) ( pcc , pcs , conc , pgs , dev ) ;"	730:4:25135:25202	978055	3	True				
ANR	978084	IdentifierDecl	"code = ( * pcs -> type -> concretize_color ) ( pcc , pcs , conc , pgs , dev )"		978055	0					
ANR	978085	IdentifierDeclType	int		978055	0					
ANR	978086	Identifier	code		978055	1					
ANR	978087	AssignmentExpression	"code = ( * pcs -> type -> concretize_color ) ( pcc , pcs , conc , pgs , dev )"		978055	2		=			
ANR	978088	Identifier	code		978055	0					
ANR	978089	CallExpression	"( * pcs -> type -> concretize_color ) ( pcc , pcs , conc , pgs , dev )"		978055	1					
ANR	978090	Callee	* pcs -> type -> concretize_color		978055	0					
ANR	978091	UnaryOperationExpression	* pcs -> type -> concretize_color		978055	0					
ANR	978092	UnaryOperator	*		978055	0					
ANR	978093	PtrMemberAccess	pcs -> type -> concretize_color		978055	1					
ANR	978094	PtrMemberAccess	pcs -> type		978055	0					
ANR	978095	Identifier	pcs		978055	0					
ANR	978096	Identifier	type		978055	1					
ANR	978097	Identifier	concretize_color		978055	1					
ANR	978098	ArgumentList	pcc		978055	1					
ANR	978099	Argument	pcc		978055	0					
ANR	978100	Identifier	pcc		978055	0					
ANR	978101	Argument	pcs		978055	1					
ANR	978102	Identifier	pcs		978055	0					
ANR	978103	Argument	conc		978055	2					
ANR	978104	Identifier	conc		978055	0					
ANR	978105	Argument	pgs		978055	3					
ANR	978106	Identifier	pgs		978055	0					
ANR	978107	Argument	dev		978055	4					
ANR	978108	Identifier	dev		978055	0					
ANR	978109	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	731:4:25208:25238	978055	4	True				
ANR	978110	IdentifierDecl	* dev_profile		978055	0					
ANR	978111	IdentifierDeclType	cmm_dev_profile_t *		978055	0					
ANR	978112	Identifier	dev_profile		978055	1					
ANR	978113	IfStatement	if ( code < 0 )		978055	5					
ANR	978114	Condition	code < 0	733:8:25249:25256	978055	0	True				
ANR	978115	RelationalExpression	code < 0		978055	0		<			
ANR	978116	Identifier	code		978055	0					
ANR	978117	PrimaryExpression	0		978055	1					
ANR	978118	ReturnStatement	return code ;	734:8:25267:25278	978055	1	True				
ANR	978119	Identifier	code		978055	0					
ANR	978120	ExpressionStatement	"pconcs = cs_concrete_space ( pcs , pgs )"	735:4:25284:25320	978055	6	True				
ANR	978121	AssignmentExpression	"pconcs = cs_concrete_space ( pcs , pgs )"		978055	0		=			
ANR	978122	Identifier	pconcs		978055	0					
ANR	978123	CallExpression	"cs_concrete_space ( pcs , pgs )"		978055	1					
ANR	978124	Callee	cs_concrete_space		978055	0					
ANR	978125	Identifier	cs_concrete_space		978055	0					
ANR	978126	ArgumentList	pcs		978055	1					
ANR	978127	Argument	pcs		978055	0					
ANR	978128	Identifier	pcs		978055	0					
ANR	978129	Argument	pgs		978055	1					
ANR	978130	Identifier	pgs		978055	0					
ANR	978131	IfStatement	if ( ! pconcs )		978055	7					
ANR	978132	Condition	! pconcs	736:8:25330:25336	978055	0	True				
ANR	978133	UnaryOperationExpression	! pconcs		978055	0					
ANR	978134	UnaryOperator	!		978055	0					
ANR	978135	Identifier	pconcs		978055	1					
ANR	978136	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	737:8:25347:25387	978055	1	True				
ANR	978137	CallExpression	gs_note_error ( gs_error_undefined )		978055	0					
ANR	978138	Callee	gs_note_error		978055	0					
ANR	978139	Identifier	gs_note_error		978055	0					
ANR	978140	ArgumentList	gs_error_undefined		978055	1					
ANR	978141	Argument	gs_error_undefined		978055	0					
ANR	978142	Identifier	gs_error_undefined		978055	0					
ANR	978143	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	738:4:25393:25445	978055	8	True				
ANR	978144	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		978055	0		=			
ANR	978145	Identifier	code		978055	0					
ANR	978146	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		978055	1					
ANR	978147	Callee	"dev_proc ( dev , get_profile )"		978055	0					
ANR	978148	CallExpression	"dev_proc ( dev , get_profile )"		978055	0					
ANR	978149	Callee	dev_proc		978055	0					
ANR	978150	Identifier	dev_proc		978055	0					
ANR	978151	ArgumentList	dev		978055	1					
ANR	978152	Argument	dev		978055	0					
ANR	978153	Identifier	dev		978055	0					
ANR	978154	Argument	get_profile		978055	1					
ANR	978155	Identifier	get_profile		978055	0					
ANR	978156	ArgumentList	dev		978055	1					
ANR	978157	Argument	dev		978055	0					
ANR	978158	Identifier	dev		978055	0					
ANR	978159	Argument	& dev_profile		978055	1					
ANR	978160	UnaryOperationExpression	& dev_profile		978055	0					
ANR	978161	UnaryOperator	&		978055	0					
ANR	978162	Identifier	dev_profile		978055	1					
ANR	978163	IfStatement	if ( code < 0 )		978055	9					
ANR	978164	Condition	code < 0	739:8:25455:25462	978055	0	True				
ANR	978165	RelationalExpression	code < 0		978055	0		<			
ANR	978166	Identifier	code		978055	0					
ANR	978167	PrimaryExpression	0		978055	1					
ANR	978168	ReturnStatement	return code ;	740:8:25473:25484	978055	1	True				
ANR	978169	Identifier	code		978055	0					
ANR	978170	ExpressionStatement	"code = ( * pconcs -> type -> remap_concrete_color ) ( pconcs , conc , pdc , pgs , dev , select , dev_profile )"	741:4:25490:25584	978055	10	True				
ANR	978171	AssignmentExpression	"code = ( * pconcs -> type -> remap_concrete_color ) ( pconcs , conc , pdc , pgs , dev , select , dev_profile )"		978055	0		=			
ANR	978172	Identifier	code		978055	0					
ANR	978173	CallExpression	"( * pconcs -> type -> remap_concrete_color ) ( pconcs , conc , pdc , pgs , dev , select , dev_profile )"		978055	1					
ANR	978174	Callee	* pconcs -> type -> remap_concrete_color		978055	0					
ANR	978175	UnaryOperationExpression	* pconcs -> type -> remap_concrete_color		978055	0					
ANR	978176	UnaryOperator	*		978055	0					
ANR	978177	PtrMemberAccess	pconcs -> type -> remap_concrete_color		978055	1					
ANR	978178	PtrMemberAccess	pconcs -> type		978055	0					
ANR	978179	Identifier	pconcs		978055	0					
ANR	978180	Identifier	type		978055	1					
ANR	978181	Identifier	remap_concrete_color		978055	1					
ANR	978182	ArgumentList	pconcs		978055	1					
ANR	978183	Argument	pconcs		978055	0					
ANR	978184	Identifier	pconcs		978055	0					
ANR	978185	Argument	conc		978055	1					
ANR	978186	Identifier	conc		978055	0					
ANR	978187	Argument	pdc		978055	2					
ANR	978188	Identifier	pdc		978055	0					
ANR	978189	Argument	pgs		978055	3					
ANR	978190	Identifier	pgs		978055	0					
ANR	978191	Argument	dev		978055	4					
ANR	978192	Identifier	dev		978055	0					
ANR	978193	Argument	select		978055	5					
ANR	978194	Identifier	select		978055	0					
ANR	978195	Argument	dev_profile		978055	6					
ANR	978196	Identifier	dev_profile		978055	0					
ANR	978197	ExpressionStatement	i = any_abs ( i )	744:4:25657:25671	978055	11	True				
ANR	978198	AssignmentExpression	i = any_abs ( i )		978055	0		=			
ANR	978199	Identifier	i		978055	0					
ANR	978200	CallExpression	any_abs ( i )		978055	1					
ANR	978201	Callee	any_abs		978055	0					
ANR	978202	Identifier	any_abs		978055	0					
ANR	978203	ArgumentList	i		978055	1					
ANR	978204	Argument	i		978055	0					
ANR	978205	Identifier	i		978055	0					
ANR	978206	ForStatement	for ( i -- ; i >= 0 ; i -- )		978055	12					
ANR	978207	ForInit	i -- ;	745:9:25682:25685	978055	0	True				
ANR	978208	PostIncDecOperationExpression	i --		978055	0					
ANR	978209	Identifier	i		978055	0					
ANR	978210	IncDec	--		978055	1					
ANR	978211	Condition	i >= 0	745:14:25687:25692	978055	1	True				
ANR	978212	RelationalExpression	i >= 0		978055	0		>=			
ANR	978213	Identifier	i		978055	0					
ANR	978214	PrimaryExpression	0		978055	1					
ANR	978215	PostIncDecOperationExpression	i --	745:22:25695:25697	978055	2	True				
ANR	978216	Identifier	i		978055	0					
ANR	978217	IncDec	--		978055	1					
ANR	978218	ExpressionStatement	pdc -> ccolor . paint . values [ i ] = pcc -> paint . values [ i ]	746:8:25708:25758	978055	3	True				
ANR	978219	AssignmentExpression	pdc -> ccolor . paint . values [ i ] = pcc -> paint . values [ i ]		978055	0		=			
ANR	978220	ArrayIndexing	pdc -> ccolor . paint . values [ i ]		978055	0					
ANR	978221	MemberAccess	pdc -> ccolor . paint . values		978055	0					
ANR	978222	MemberAccess	pdc -> ccolor . paint		978055	0					
ANR	978223	PtrMemberAccess	pdc -> ccolor		978055	0					
ANR	978224	Identifier	pdc		978055	0					
ANR	978225	Identifier	ccolor		978055	1					
ANR	978226	Identifier	paint		978055	1					
ANR	978227	Identifier	values		978055	1					
ANR	978228	Identifier	i		978055	1					
ANR	978229	ArrayIndexing	pcc -> paint . values [ i ]		978055	1					
ANR	978230	MemberAccess	pcc -> paint . values		978055	0					
ANR	978231	PtrMemberAccess	pcc -> paint		978055	0					
ANR	978232	Identifier	pcc		978055	0					
ANR	978233	Identifier	paint		978055	1					
ANR	978234	Identifier	values		978055	1					
ANR	978235	Identifier	i		978055	1					
ANR	978236	ExpressionStatement	pdc -> ccolor_valid = true	747:4:25764:25788	978055	13	True				
ANR	978237	AssignmentExpression	pdc -> ccolor_valid = true		978055	0		=			
ANR	978238	PtrMemberAccess	pdc -> ccolor_valid		978055	0					
ANR	978239	Identifier	pdc		978055	0					
ANR	978240	Identifier	ccolor_valid		978055	1					
ANR	978241	Identifier	true		978055	1					
ANR	978242	ReturnStatement	return code ;	748:4:25794:25805	978055	14	True				
ANR	978243	Identifier	code		978055	0					
ANR	978244	ReturnType	int		978055	1					
ANR	978245	Identifier	gx_default_remap_color		978055	2					
ANR	978246	ParameterList	"const gs_client_color * pcc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		978055	3					
ANR	978247	Parameter	const gs_client_color * pcc	723:23:24827:24853	978055	0	True				
ANR	978248	ParameterType	const gs_client_color *		978055	0					
ANR	978249	Identifier	pcc		978055	1					
ANR	978250	Parameter	const gs_color_space * pcs	723:52:24856:24881	978055	1	True				
ANR	978251	ParameterType	const gs_color_space *		978055	0					
ANR	978252	Identifier	pcs		978055	1					
ANR	978253	Parameter	gx_device_color * pdc	724:8:24892:24912	978055	2	True				
ANR	978254	ParameterType	gx_device_color *		978055	0					
ANR	978255	Identifier	pdc		978055	1					
ANR	978256	Parameter	const gs_gstate * pgs	724:31:24915:24935	978055	3	True				
ANR	978257	ParameterType	const gs_gstate *		978055	0					
ANR	978258	Identifier	pgs		978055	1					
ANR	978259	Parameter	gx_device * dev	724:54:24938:24952	978055	4	True				
ANR	978260	ParameterType	gx_device *		978055	0					
ANR	978261	Identifier	dev		978055	1					
ANR	978262	Parameter	gs_color_select_t select	725:23:24978:25001	978055	5	True				
ANR	978263	ParameterType	gs_color_select_t		978055	0					
ANR	978264	Identifier	select		978055	1					
ANR	978265	CFGEntryNode	ENTRY		978055		True				
ANR	978266	CFGExitNode	EXIT		978055		True				
ANR	978267	Symbol	* pconcs -> type		978055						
ANR	978268	Symbol	select		978055						
ANR	978269	Symbol	dev_profile		978055						
ANR	978270	Symbol	gs_error_undefined		978055						
ANR	978271	Symbol	* pcs		978055						
ANR	978272	Symbol	conc		978055						
ANR	978273	Symbol	* pcs -> type -> concretize_color		978055						
ANR	978274	Symbol	pdc -> ccolor . paint		978055						
ANR	978275	Symbol	dev		978055						
ANR	978276	Symbol	pcc -> paint		978055						
ANR	978277	Symbol	* * pconcs -> type		978055						
ANR	978278	Symbol	* pcc -> paint		978055						
ANR	978279	Symbol	* pdc		978055						
ANR	978280	Symbol	* * pcs -> type		978055						
ANR	978281	Symbol	pcs -> type		978055						
ANR	978282	Symbol	* * pcc		978055						
ANR	978283	Symbol	& dev_profile		978055						
ANR	978284	Symbol	pconcs -> type -> remap_concrete_color		978055						
ANR	978285	Symbol	pconcs -> type		978055						
ANR	978286	Symbol	* pdc -> ccolor . paint . values		978055						
ANR	978287	Symbol	* * pcs		978055						
ANR	978288	Symbol	* pdc -> ccolor		978055						
ANR	978289	Symbol	pcs -> type -> concretize_color		978055						
ANR	978290	Symbol	true		978055						
ANR	978291	Symbol	* pcc		978055						
ANR	978292	Symbol	* pcc -> paint . values		978055						
ANR	978293	Symbol	code		978055						
ANR	978294	Symbol	* * pdc		978055						
ANR	978295	Symbol	* pconcs		978055						
ANR	978296	Symbol	pconcs		978055						
ANR	978297	Symbol	cs_concrete_space		978055						
ANR	978298	Symbol	pcc -> paint . values		978055						
ANR	978299	Symbol	pcc		978055						
ANR	978300	Symbol	pdc -> ccolor_valid		978055						
ANR	978301	Symbol	dev_proc		978055						
ANR	978302	Symbol	any_abs		978055						
ANR	978303	Symbol	* pcs -> type		978055						
ANR	978304	Symbol	pgs		978055						
ANR	978305	Symbol	pcs -> type -> num_components		978055						
ANR	978306	Symbol	* * * pcs		978055						
ANR	978307	Symbol	get_profile		978055						
ANR	978308	Symbol	pcs		978055						
ANR	978309	Symbol	* pdc -> ccolor . paint		978055						
ANR	978310	Symbol	pdc -> ccolor . paint . values		978055						
ANR	978311	Symbol	i		978055						
ANR	978312	Symbol	pdc		978055						
ANR	978313	Symbol	* * * pconcs		978055						
ANR	978314	Symbol	gs_note_error		978055						
ANR	978315	Symbol	* pconcs -> type -> remap_concrete_color		978055						
ANR	978316	Symbol	* i		978055						
ANR	978317	Symbol	* * pconcs		978055						
ANR	978318	Symbol	pdc -> ccolor		978055						
ANR	978319	Function	gx_concretize_DeviceGray	756:0:26020:26249							
ANR	978320	FunctionDef	"gx_concretize_DeviceGray (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		978319	0					
ANR	978321	CompoundStatement		759:0:26183:26249	978319	0					
ANR	978322	ExpressionStatement	pconc [ 0 ] = gx_unit_frac ( pc -> paint . values [ 0 ] )	760:4:26189:26233	978319	0	True				
ANR	978323	AssignmentExpression	pconc [ 0 ] = gx_unit_frac ( pc -> paint . values [ 0 ] )		978319	0		=			
ANR	978324	ArrayIndexing	pconc [ 0 ]		978319	0					
ANR	978325	Identifier	pconc		978319	0					
ANR	978326	PrimaryExpression	0		978319	1					
ANR	978327	CallExpression	gx_unit_frac ( pc -> paint . values [ 0 ] )		978319	1					
ANR	978328	Callee	gx_unit_frac		978319	0					
ANR	978329	Identifier	gx_unit_frac		978319	0					
ANR	978330	ArgumentList	pc -> paint . values [ 0 ]		978319	1					
ANR	978331	Argument	pc -> paint . values [ 0 ]		978319	0					
ANR	978332	ArrayIndexing	pc -> paint . values [ 0 ]		978319	0					
ANR	978333	MemberAccess	pc -> paint . values		978319	0					
ANR	978334	PtrMemberAccess	pc -> paint		978319	0					
ANR	978335	Identifier	pc		978319	0					
ANR	978336	Identifier	paint		978319	1					
ANR	978337	Identifier	values		978319	1					
ANR	978338	PrimaryExpression	0		978319	1					
ANR	978339	ReturnStatement	return 0 ;	761:4:26239:26247	978319	1	True				
ANR	978340	PrimaryExpression	0		978319	0					
ANR	978341	ReturnType	int		978319	1					
ANR	978342	Identifier	gx_concretize_DeviceGray		978319	2					
ANR	978343	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev"		978319	3					
ANR	978344	Parameter	const gs_client_color * pc	757:25:26049:26074	978319	0	True				
ANR	978345	ParameterType	const gs_client_color *		978319	0					
ANR	978346	Identifier	pc		978319	1					
ANR	978347	Parameter	const gs_color_space * pcs	757:53:26077:26102	978319	1	True				
ANR	978348	ParameterType	const gs_color_space *		978319	0					
ANR	978349	Identifier	pcs		978319	1					
ANR	978350	Parameter	frac * pconc	758:25:26130:26141	978319	2	True				
ANR	978351	ParameterType	frac *		978319	0					
ANR	978352	Identifier	pconc		978319	1					
ANR	978353	Parameter	const gs_gstate * pgs	758:39:26144:26164	978319	3	True				
ANR	978354	ParameterType	const gs_gstate *		978319	0					
ANR	978355	Identifier	pgs		978319	1					
ANR	978356	Parameter	gx_device * dev	758:62:26167:26180	978319	4	True				
ANR	978357	ParameterType	gx_device *		978319	0					
ANR	978358	Identifier	dev		978319	1					
ANR	978359	CFGEntryNode	ENTRY		978319		True				
ANR	978360	CFGExitNode	EXIT		978319		True				
ANR	978361	Symbol	pcs		978319						
ANR	978362	Symbol	* pconc		978319						
ANR	978363	Symbol	* pc -> paint		978319						
ANR	978364	Symbol	pconc		978319						
ANR	978365	Symbol	pc -> paint . values		978319						
ANR	978366	Symbol	* pc -> paint . values		978319						
ANR	978367	Symbol	pc -> paint		978319						
ANR	978368	Symbol	pc		978319						
ANR	978369	Symbol	dev		978319						
ANR	978370	Symbol	* pc		978319						
ANR	978371	Symbol	gx_unit_frac		978319						
ANR	978372	Symbol	pgs		978319						
ANR	978373	Symbol	* * pc		978319						
ANR	978374	Function	gx_remap_concrete_DGray	763:0:26251:26820							
ANR	978375	FunctionDef	"gx_remap_concrete_DGray (const gs_color_space * pcs , const frac * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const cmm_dev_profile_t * dev_profile)"		978374	0					
ANR	978376	CompoundStatement		768:0:26526:26820	978374	0					
ANR	978377	IfStatement	if ( pgs -> alpha == gx_max_color_value )		978374	0					
ANR	978378	Condition	pgs -> alpha == gx_max_color_value	769:8:26536:26567	978374	0	True				
ANR	978379	EqualityExpression	pgs -> alpha == gx_max_color_value		978374	0		==			
ANR	978380	PtrMemberAccess	pgs -> alpha		978374	0					
ANR	978381	Identifier	pgs		978374	0					
ANR	978382	Identifier	alpha		978374	1					
ANR	978383	Identifier	gx_max_color_value		978374	1					
ANR	978384	ExpressionStatement	"( * pgs -> cmap_procs -> map_gray ) ( pconc [ 0 ] , pdc , pgs , dev , select )"	770:8:26578:26652	978374	1	True				
ANR	978385	CallExpression	"( * pgs -> cmap_procs -> map_gray ) ( pconc [ 0 ] , pdc , pgs , dev , select )"		978374	0					
ANR	978386	Callee	* pgs -> cmap_procs -> map_gray		978374	0					
ANR	978387	UnaryOperationExpression	* pgs -> cmap_procs -> map_gray		978374	0					
ANR	978388	UnaryOperator	*		978374	0					
ANR	978389	PtrMemberAccess	pgs -> cmap_procs -> map_gray		978374	1					
ANR	978390	PtrMemberAccess	pgs -> cmap_procs		978374	0					
ANR	978391	Identifier	pgs		978374	0					
ANR	978392	Identifier	cmap_procs		978374	1					
ANR	978393	Identifier	map_gray		978374	1					
ANR	978394	ArgumentList	pconc [ 0 ]		978374	1					
ANR	978395	Argument	pconc [ 0 ]		978374	0					
ANR	978396	ArrayIndexing	pconc [ 0 ]		978374	0					
ANR	978397	Identifier	pconc		978374	0					
ANR	978398	PrimaryExpression	0		978374	1					
ANR	978399	Argument	pdc		978374	1					
ANR	978400	Identifier	pdc		978374	0					
ANR	978401	Argument	pgs		978374	2					
ANR	978402	Identifier	pgs		978374	0					
ANR	978403	Argument	dev		978374	3					
ANR	978404	Identifier	dev		978374	0					
ANR	978405	Argument	select		978374	4					
ANR	978406	Identifier	select		978374	0					
ANR	978407	ElseStatement	else		978374	0					
ANR	978408	ExpressionStatement	"( * pgs -> cmap_procs -> map_rgb_alpha ) ( pconc [ 0 ] , pconc [ 0 ] , pconc [ 0 ] , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"	773:8:26671:26804	978374	0	True				
ANR	978409	CallExpression	"( * pgs -> cmap_procs -> map_rgb_alpha ) ( pconc [ 0 ] , pconc [ 0 ] , pconc [ 0 ] , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"		978374	0					
ANR	978410	Callee	* pgs -> cmap_procs -> map_rgb_alpha		978374	0					
ANR	978411	UnaryOperationExpression	* pgs -> cmap_procs -> map_rgb_alpha		978374	0					
ANR	978412	UnaryOperator	*		978374	0					
ANR	978413	PtrMemberAccess	pgs -> cmap_procs -> map_rgb_alpha		978374	1					
ANR	978414	PtrMemberAccess	pgs -> cmap_procs		978374	0					
ANR	978415	Identifier	pgs		978374	0					
ANR	978416	Identifier	cmap_procs		978374	1					
ANR	978417	Identifier	map_rgb_alpha		978374	1					
ANR	978418	ArgumentList	pconc [ 0 ]		978374	1					
ANR	978419	Argument	pconc [ 0 ]		978374	0					
ANR	978420	ArrayIndexing	pconc [ 0 ]		978374	0					
ANR	978421	Identifier	pconc		978374	0					
ANR	978422	PrimaryExpression	0		978374	1					
ANR	978423	Argument	pconc [ 0 ]		978374	1					
ANR	978424	ArrayIndexing	pconc [ 0 ]		978374	0					
ANR	978425	Identifier	pconc		978374	0					
ANR	978426	PrimaryExpression	0		978374	1					
ANR	978427	Argument	pconc [ 0 ]		978374	2					
ANR	978428	ArrayIndexing	pconc [ 0 ]		978374	0					
ANR	978429	Identifier	pconc		978374	0					
ANR	978430	PrimaryExpression	0		978374	1					
ANR	978431	Argument	cv2frac ( pgs -> alpha )		978374	3					
ANR	978432	CallExpression	cv2frac ( pgs -> alpha )		978374	0					
ANR	978433	Callee	cv2frac		978374	0					
ANR	978434	Identifier	cv2frac		978374	0					
ANR	978435	ArgumentList	pgs -> alpha		978374	1					
ANR	978436	Argument	pgs -> alpha		978374	0					
ANR	978437	PtrMemberAccess	pgs -> alpha		978374	0					
ANR	978438	Identifier	pgs		978374	0					
ANR	978439	Identifier	alpha		978374	1					
ANR	978440	Argument	pdc		978374	4					
ANR	978441	Identifier	pdc		978374	0					
ANR	978442	Argument	pgs		978374	5					
ANR	978443	Identifier	pgs		978374	0					
ANR	978444	Argument	dev		978374	6					
ANR	978445	Identifier	dev		978374	0					
ANR	978446	Argument	select		978374	7					
ANR	978447	Identifier	select		978374	0					
ANR	978448	ReturnStatement	return 0 ;	776:4:26810:26818	978374	1	True				
ANR	978449	PrimaryExpression	0		978374	0					
ANR	978450	ReturnType	int		978374	1					
ANR	978451	Identifier	gx_remap_concrete_DGray		978374	2					
ANR	978452	ParameterList	"const gs_color_space * pcs , const frac * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const cmm_dev_profile_t * dev_profile"		978374	3					
ANR	978453	Parameter	const gs_color_space * pcs	764:24:26279:26304	978374	0	True				
ANR	978454	ParameterType	const gs_color_space *		978374	0					
ANR	978455	Identifier	pcs		978374	1					
ANR	978456	Parameter	const frac * pconc	764:52:26307:26324	978374	1	True				
ANR	978457	ParameterType	const frac *		978374	0					
ANR	978458	Identifier	pconc		978374	1					
ANR	978459	Parameter	gx_device_color * pdc	765:24:26351:26371	978374	2	True				
ANR	978460	ParameterType	gx_device_color *		978374	0					
ANR	978461	Identifier	pdc		978374	1					
ANR	978462	Parameter	const gs_gstate * pgs	765:47:26374:26394	978374	3	True				
ANR	978463	ParameterType	const gs_gstate *		978374	0					
ANR	978464	Identifier	pgs		978374	1					
ANR	978465	Parameter	gx_device * dev	766:24:26421:26435	978374	4	True				
ANR	978466	ParameterType	gx_device *		978374	0					
ANR	978467	Identifier	dev		978374	1					
ANR	978468	Parameter	gs_color_select_t select	766:41:26438:26461	978374	5	True				
ANR	978469	ParameterType	gs_color_select_t		978374	0					
ANR	978470	Identifier	select		978374	1					
ANR	978471	Parameter	const cmm_dev_profile_t * dev_profile	767:24:26488:26523	978374	6	True				
ANR	978472	ParameterType	const cmm_dev_profile_t *		978374	0					
ANR	978473	Identifier	dev_profile		978374	1					
ANR	978474	CFGEntryNode	ENTRY		978374		True				
ANR	978475	CFGExitNode	EXIT		978374		True				
ANR	978476	Symbol	pcs		978374						
ANR	978477	Symbol	* pconc		978374						
ANR	978478	Symbol	select		978374						
ANR	978479	Symbol	pgs -> cmap_procs		978374						
ANR	978480	Symbol	* pgs		978374						
ANR	978481	Symbol	dev_profile		978374						
ANR	978482	Symbol	pconc		978374						
ANR	978483	Symbol	pgs -> cmap_procs -> map_gray		978374						
ANR	978484	Symbol	pdc		978374						
ANR	978485	Symbol	pgs -> alpha		978374						
ANR	978486	Symbol	* * pgs		978374						
ANR	978487	Symbol	pgs -> cmap_procs -> map_rgb_alpha		978374						
ANR	978488	Symbol	dev		978374						
ANR	978489	Symbol	gx_max_color_value		978374						
ANR	978490	Symbol	cv2frac		978374						
ANR	978491	Symbol	pgs		978374						
ANR	978492	Symbol	* pgs -> cmap_procs		978374						
ANR	978493	Function	gx_remap_DeviceGray	778:0:26822:28575							
ANR	978494	FunctionDef	"gx_remap_DeviceGray (const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		978493	0					
ANR	978495	CompoundStatement		782:0:27031:28575	978493	0					
ANR	978496	IdentifierDeclStatement	frac fgray = gx_unit_frac ( pc -> paint . values [ 0 ] ) ;	783:4:27037:27083	978493	0	True				
ANR	978497	IdentifierDecl	fgray = gx_unit_frac ( pc -> paint . values [ 0 ] )		978493	0					
ANR	978498	IdentifierDeclType	frac		978493	0					
ANR	978499	Identifier	fgray		978493	1					
ANR	978500	AssignmentExpression	fgray = gx_unit_frac ( pc -> paint . values [ 0 ] )		978493	2		=			
ANR	978501	Identifier	fgray		978493	0					
ANR	978502	CallExpression	gx_unit_frac ( pc -> paint . values [ 0 ] )		978493	1					
ANR	978503	Callee	gx_unit_frac		978493	0					
ANR	978504	Identifier	gx_unit_frac		978493	0					
ANR	978505	ArgumentList	pc -> paint . values [ 0 ]		978493	1					
ANR	978506	Argument	pc -> paint . values [ 0 ]		978493	0					
ANR	978507	ArrayIndexing	pc -> paint . values [ 0 ]		978493	0					
ANR	978508	MemberAccess	pc -> paint . values		978493	0					
ANR	978509	PtrMemberAccess	pc -> paint		978493	0					
ANR	978510	Identifier	pc		978493	0					
ANR	978511	Identifier	paint		978493	1					
ANR	978512	Identifier	values		978493	1					
ANR	978513	PrimaryExpression	0		978493	1					
ANR	978514	IdentifierDeclStatement	int code ;	784:4:27089:27097	978493	1	True				
ANR	978515	IdentifierDecl	code		978493	0					
ANR	978516	IdentifierDeclType	int		978493	0					
ANR	978517	Identifier	code		978493	1					
ANR	978518	IfStatement	if ( pgs -> icc_manager -> default_gray != NULL )		978493	2					
ANR	978519	Condition	pgs -> icc_manager -> default_gray != NULL	791:8:27430:27467	978493	0	True				
ANR	978520	EqualityExpression	pgs -> icc_manager -> default_gray != NULL		978493	0		!=			
ANR	978521	PtrMemberAccess	pgs -> icc_manager -> default_gray		978493	0					
ANR	978522	PtrMemberAccess	pgs -> icc_manager		978493	0					
ANR	978523	Identifier	pgs		978493	0					
ANR	978524	Identifier	icc_manager		978493	1					
ANR	978525	Identifier	default_gray		978493	1					
ANR	978526	Identifier	NULL		978493	1					
ANR	978527	CompoundStatement		11:8:448:500	978493	1					
ANR	978528	IdentifierDeclStatement	gs_color_space * pcs_notconst = ( gs_color_space * ) pcs ;	792:8:27480:27532	978493	0	True				
ANR	978529	IdentifierDecl	* pcs_notconst = ( gs_color_space * ) pcs		978493	0					
ANR	978530	IdentifierDeclType	gs_color_space *		978493	0					
ANR	978531	Identifier	pcs_notconst		978493	1					
ANR	978532	AssignmentExpression	* pcs_notconst = ( gs_color_space * ) pcs		978493	2		=			
ANR	978533	Identifier	pcs_notconst		978493	0					
ANR	978534	CastExpression	( gs_color_space * ) pcs		978493	1					
ANR	978535	CastTarget	gs_color_space *		978493	0					
ANR	978536	Identifier	pcs		978493	1					
ANR	978537	ExpressionStatement	pcs_notconst -> cmm_icc_profile_data = pgs -> icc_manager -> default_gray	793:8:27542:27609	978493	1	True				
ANR	978538	AssignmentExpression	pcs_notconst -> cmm_icc_profile_data = pgs -> icc_manager -> default_gray		978493	0		=			
ANR	978539	PtrMemberAccess	pcs_notconst -> cmm_icc_profile_data		978493	0					
ANR	978540	Identifier	pcs_notconst		978493	0					
ANR	978541	Identifier	cmm_icc_profile_data		978493	1					
ANR	978542	PtrMemberAccess	pgs -> icc_manager -> default_gray		978493	1					
ANR	978543	PtrMemberAccess	pgs -> icc_manager		978493	0					
ANR	978544	Identifier	pgs		978493	0					
ANR	978545	Identifier	icc_manager		978493	1					
ANR	978546	Identifier	default_gray		978493	1					
ANR	978547	ExpressionStatement	"gsicc_adjust_profile_rc ( pgs -> icc_manager -> default_gray , 1 , ""gx_remap_DeviceGray"" )"	794:8:27619:27700	978493	2	True				
ANR	978548	CallExpression	"gsicc_adjust_profile_rc ( pgs -> icc_manager -> default_gray , 1 , ""gx_remap_DeviceGray"" )"		978493	0					
ANR	978549	Callee	gsicc_adjust_profile_rc		978493	0					
ANR	978550	Identifier	gsicc_adjust_profile_rc		978493	0					
ANR	978551	ArgumentList	pgs -> icc_manager -> default_gray		978493	1					
ANR	978552	Argument	pgs -> icc_manager -> default_gray		978493	0					
ANR	978553	PtrMemberAccess	pgs -> icc_manager -> default_gray		978493	0					
ANR	978554	PtrMemberAccess	pgs -> icc_manager		978493	0					
ANR	978555	Identifier	pgs		978493	0					
ANR	978556	Identifier	icc_manager		978493	1					
ANR	978557	Identifier	default_gray		978493	1					
ANR	978558	Argument	1		978493	1					
ANR	978559	PrimaryExpression	1		978493	0					
ANR	978560	Argument	"""gx_remap_DeviceGray"""		978493	2					
ANR	978561	PrimaryExpression	"""gx_remap_DeviceGray"""		978493	0					
ANR	978562	ExpressionStatement	pcs_notconst -> type = & gs_color_space_type_ICC	795:8:27710:27755	978493	3	True				
ANR	978563	AssignmentExpression	pcs_notconst -> type = & gs_color_space_type_ICC		978493	0		=			
ANR	978564	PtrMemberAccess	pcs_notconst -> type		978493	0					
ANR	978565	Identifier	pcs_notconst		978493	0					
ANR	978566	Identifier	type		978493	1					
ANR	978567	UnaryOperationExpression	& gs_color_space_type_ICC		978493	1					
ANR	978568	UnaryOperator	&		978493	0					
ANR	978569	Identifier	gs_color_space_type_ICC		978493	1					
ANR	978570	ExpressionStatement	"code = ( * pcs_notconst -> type -> remap_color ) ( gs_currentcolor_inline ( pgs ) , pcs_notconst , gs_currentdevicecolor_inline ( pgs ) , pgs , pgs -> device , gs_color_select_texture )"	796:8:27765:28127	978493	4	True				
ANR	978571	AssignmentExpression	"code = ( * pcs_notconst -> type -> remap_color ) ( gs_currentcolor_inline ( pgs ) , pcs_notconst , gs_currentdevicecolor_inline ( pgs ) , pgs , pgs -> device , gs_color_select_texture )"		978493	0		=			
ANR	978572	Identifier	code		978493	0					
ANR	978573	CallExpression	"( * pcs_notconst -> type -> remap_color ) ( gs_currentcolor_inline ( pgs ) , pcs_notconst , gs_currentdevicecolor_inline ( pgs ) , pgs , pgs -> device , gs_color_select_texture )"		978493	1					
ANR	978574	Callee	* pcs_notconst -> type -> remap_color		978493	0					
ANR	978575	UnaryOperationExpression	* pcs_notconst -> type -> remap_color		978493	0					
ANR	978576	UnaryOperator	*		978493	0					
ANR	978577	PtrMemberAccess	pcs_notconst -> type -> remap_color		978493	1					
ANR	978578	PtrMemberAccess	pcs_notconst -> type		978493	0					
ANR	978579	Identifier	pcs_notconst		978493	0					
ANR	978580	Identifier	type		978493	1					
ANR	978581	Identifier	remap_color		978493	1					
ANR	978582	ArgumentList	gs_currentcolor_inline ( pgs )		978493	1					
ANR	978583	Argument	gs_currentcolor_inline ( pgs )		978493	0					
ANR	978584	CallExpression	gs_currentcolor_inline ( pgs )		978493	0					
ANR	978585	Callee	gs_currentcolor_inline		978493	0					
ANR	978586	Identifier	gs_currentcolor_inline		978493	0					
ANR	978587	ArgumentList	pgs		978493	1					
ANR	978588	Argument	pgs		978493	0					
ANR	978589	Identifier	pgs		978493	0					
ANR	978590	Argument	pcs_notconst		978493	1					
ANR	978591	Identifier	pcs_notconst		978493	0					
ANR	978592	Argument	gs_currentdevicecolor_inline ( pgs )		978493	2					
ANR	978593	CallExpression	gs_currentdevicecolor_inline ( pgs )		978493	0					
ANR	978594	Callee	gs_currentdevicecolor_inline		978493	0					
ANR	978595	Identifier	gs_currentdevicecolor_inline		978493	0					
ANR	978596	ArgumentList	pgs		978493	1					
ANR	978597	Argument	pgs		978493	0					
ANR	978598	Identifier	pgs		978493	0					
ANR	978599	Argument	pgs		978493	3					
ANR	978600	Identifier	pgs		978493	0					
ANR	978601	Argument	pgs -> device		978493	4					
ANR	978602	PtrMemberAccess	pgs -> device		978493	0					
ANR	978603	Identifier	pgs		978493	0					
ANR	978604	Identifier	device		978493	1					
ANR	978605	Argument	gs_color_select_texture		978493	5					
ANR	978606	Identifier	gs_color_select_texture		978493	0					
ANR	978607	ReturnStatement	return code ;	802:8:28137:28148	978493	5	True				
ANR	978608	Identifier	code		978493	0					
ANR	978609	ExpressionStatement	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]	806:4:28227:28276	978493	3	True				
ANR	978610	AssignmentExpression	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]		978493	0		=			
ANR	978611	ArrayIndexing	pdc -> ccolor . paint . values [ 0 ]		978493	0					
ANR	978612	MemberAccess	pdc -> ccolor . paint . values		978493	0					
ANR	978613	MemberAccess	pdc -> ccolor . paint		978493	0					
ANR	978614	PtrMemberAccess	pdc -> ccolor		978493	0					
ANR	978615	Identifier	pdc		978493	0					
ANR	978616	Identifier	ccolor		978493	1					
ANR	978617	Identifier	paint		978493	1					
ANR	978618	Identifier	values		978493	1					
ANR	978619	PrimaryExpression	0		978493	1					
ANR	978620	ArrayIndexing	pc -> paint . values [ 0 ]		978493	1					
ANR	978621	MemberAccess	pc -> paint . values		978493	0					
ANR	978622	PtrMemberAccess	pc -> paint		978493	0					
ANR	978623	Identifier	pc		978493	0					
ANR	978624	Identifier	paint		978493	1					
ANR	978625	Identifier	values		978493	1					
ANR	978626	PrimaryExpression	0		978493	1					
ANR	978627	ExpressionStatement	pdc -> ccolor_valid = true	807:4:28282:28306	978493	4	True				
ANR	978628	AssignmentExpression	pdc -> ccolor_valid = true		978493	0		=			
ANR	978629	PtrMemberAccess	pdc -> ccolor_valid		978493	0					
ANR	978630	Identifier	pdc		978493	0					
ANR	978631	Identifier	ccolor_valid		978493	1					
ANR	978632	Identifier	true		978493	1					
ANR	978633	IfStatement	if ( pgs -> alpha == gx_max_color_value )		978493	5					
ANR	978634	Condition	pgs -> alpha == gx_max_color_value	808:8:28316:28347	978493	0	True				
ANR	978635	EqualityExpression	pgs -> alpha == gx_max_color_value		978493	0		==			
ANR	978636	PtrMemberAccess	pgs -> alpha		978493	0					
ANR	978637	Identifier	pgs		978493	0					
ANR	978638	Identifier	alpha		978493	1					
ANR	978639	Identifier	gx_max_color_value		978493	1					
ANR	978640	ExpressionStatement	"( * pgs -> cmap_procs -> map_gray ) ( fgray , pdc , pgs , dev , select )"	809:8:28358:28429	978493	1	True				
ANR	978641	CallExpression	"( * pgs -> cmap_procs -> map_gray ) ( fgray , pdc , pgs , dev , select )"		978493	0					
ANR	978642	Callee	* pgs -> cmap_procs -> map_gray		978493	0					
ANR	978643	UnaryOperationExpression	* pgs -> cmap_procs -> map_gray		978493	0					
ANR	978644	UnaryOperator	*		978493	0					
ANR	978645	PtrMemberAccess	pgs -> cmap_procs -> map_gray		978493	1					
ANR	978646	PtrMemberAccess	pgs -> cmap_procs		978493	0					
ANR	978647	Identifier	pgs		978493	0					
ANR	978648	Identifier	cmap_procs		978493	1					
ANR	978649	Identifier	map_gray		978493	1					
ANR	978650	ArgumentList	fgray		978493	1					
ANR	978651	Argument	fgray		978493	0					
ANR	978652	Identifier	fgray		978493	0					
ANR	978653	Argument	pdc		978493	1					
ANR	978654	Identifier	pdc		978493	0					
ANR	978655	Argument	pgs		978493	2					
ANR	978656	Identifier	pgs		978493	0					
ANR	978657	Argument	dev		978493	3					
ANR	978658	Identifier	dev		978493	0					
ANR	978659	Argument	select		978493	4					
ANR	978660	Identifier	select		978493	0					
ANR	978661	ElseStatement	else		978493	0					
ANR	978662	ExpressionStatement	"( * pgs -> cmap_procs -> map_rgb_alpha ) ( fgray , fgray , fgray , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"	812:8:28448:28559	978493	0	True				
ANR	978663	CallExpression	"( * pgs -> cmap_procs -> map_rgb_alpha ) ( fgray , fgray , fgray , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"		978493	0					
ANR	978664	Callee	* pgs -> cmap_procs -> map_rgb_alpha		978493	0					
ANR	978665	UnaryOperationExpression	* pgs -> cmap_procs -> map_rgb_alpha		978493	0					
ANR	978666	UnaryOperator	*		978493	0					
ANR	978667	PtrMemberAccess	pgs -> cmap_procs -> map_rgb_alpha		978493	1					
ANR	978668	PtrMemberAccess	pgs -> cmap_procs		978493	0					
ANR	978669	Identifier	pgs		978493	0					
ANR	978670	Identifier	cmap_procs		978493	1					
ANR	978671	Identifier	map_rgb_alpha		978493	1					
ANR	978672	ArgumentList	fgray		978493	1					
ANR	978673	Argument	fgray		978493	0					
ANR	978674	Identifier	fgray		978493	0					
ANR	978675	Argument	fgray		978493	1					
ANR	978676	Identifier	fgray		978493	0					
ANR	978677	Argument	fgray		978493	2					
ANR	978678	Identifier	fgray		978493	0					
ANR	978679	Argument	cv2frac ( pgs -> alpha )		978493	3					
ANR	978680	CallExpression	cv2frac ( pgs -> alpha )		978493	0					
ANR	978681	Callee	cv2frac		978493	0					
ANR	978682	Identifier	cv2frac		978493	0					
ANR	978683	ArgumentList	pgs -> alpha		978493	1					
ANR	978684	Argument	pgs -> alpha		978493	0					
ANR	978685	PtrMemberAccess	pgs -> alpha		978493	0					
ANR	978686	Identifier	pgs		978493	0					
ANR	978687	Identifier	alpha		978493	1					
ANR	978688	Argument	pdc		978493	4					
ANR	978689	Identifier	pdc		978493	0					
ANR	978690	Argument	pgs		978493	5					
ANR	978691	Identifier	pgs		978493	0					
ANR	978692	Argument	dev		978493	6					
ANR	978693	Identifier	dev		978493	0					
ANR	978694	Argument	select		978493	7					
ANR	978695	Identifier	select		978493	0					
ANR	978696	ReturnStatement	return 0 ;	814:4:28565:28573	978493	6	True				
ANR	978697	PrimaryExpression	0		978493	0					
ANR	978698	ReturnType	int		978493	1					
ANR	978699	Identifier	gx_remap_DeviceGray		978493	2					
ANR	978700	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		978493	3					
ANR	978701	Parameter	const gs_client_color * pc	779:20:26846:26871	978493	0	True				
ANR	978702	ParameterType	const gs_client_color *		978493	0					
ANR	978703	Identifier	pc		978493	1					
ANR	978704	Parameter	const gs_color_space * pcs	779:48:26874:26899	978493	1	True				
ANR	978705	ParameterType	const gs_color_space *		978493	0					
ANR	978706	Identifier	pcs		978493	1					
ANR	978707	Parameter	gx_device_color * pdc	780:20:26922:26942	978493	2	True				
ANR	978708	ParameterType	gx_device_color *		978493	0					
ANR	978709	Identifier	pdc		978493	1					
ANR	978710	Parameter	const gs_gstate * pgs	780:43:26945:26965	978493	3	True				
ANR	978711	ParameterType	const gs_gstate *		978493	0					
ANR	978712	Identifier	pgs		978493	1					
ANR	978713	Parameter	gx_device * dev	781:20:26988:27002	978493	4	True				
ANR	978714	ParameterType	gx_device *		978493	0					
ANR	978715	Identifier	dev		978493	1					
ANR	978716	Parameter	gs_color_select_t select	781:37:27005:27028	978493	5	True				
ANR	978717	ParameterType	gs_color_select_t		978493	0					
ANR	978718	Identifier	select		978493	1					
ANR	978719	CFGEntryNode	ENTRY		978493		True				
ANR	978720	CFGExitNode	EXIT		978493		True				
ANR	978721	Symbol	* * pcs_notconst		978493						
ANR	978722	Symbol	select		978493						
ANR	978723	Symbol	fgray		978493						
ANR	978724	Symbol	* pgs		978493						
ANR	978725	Symbol	* pc -> paint . values		978493						
ANR	978726	Symbol	pdc -> ccolor . paint		978493						
ANR	978727	Symbol	dev		978493						
ANR	978728	Symbol	* * * pcs_notconst		978493						
ANR	978729	Symbol	pcs_notconst -> cmm_icc_profile_data		978493						
ANR	978730	Symbol	pgs -> device		978493						
ANR	978731	Symbol	* pdc		978493						
ANR	978732	Symbol	NULL		978493						
ANR	978733	Symbol	& gs_color_space_type_ICC		978493						
ANR	978734	Symbol	* pdc -> ccolor . paint . values		978493						
ANR	978735	Symbol	* * pgs		978493						
ANR	978736	Symbol	pgs -> alpha		978493						
ANR	978737	Symbol	* pcs_notconst -> type		978493						
ANR	978738	Symbol	* pdc -> ccolor		978493						
ANR	978739	Symbol	gx_max_color_value		978493						
ANR	978740	Symbol	true		978493						
ANR	978741	Symbol	* pc		978493						
ANR	978742	Symbol	gx_unit_frac		978493						
ANR	978743	Symbol	gs_currentcolor_inline		978493						
ANR	978744	Symbol	code		978493						
ANR	978745	Symbol	pgs -> icc_manager		978493						
ANR	978746	Symbol	* * pdc		978493						
ANR	978747	Symbol	pgs -> cmap_procs		978493						
ANR	978748	Symbol	* pc -> paint		978493						
ANR	978749	Symbol	* pcs_notconst -> type -> remap_color		978493						
ANR	978750	Symbol	pgs -> icc_manager -> default_gray		978493						
ANR	978751	Symbol	gs_currentdevicecolor_inline		978493						
ANR	978752	Symbol	pdc -> ccolor_valid		978493						
ANR	978753	Symbol	pcs_notconst		978493						
ANR	978754	Symbol	cv2frac		978493						
ANR	978755	Symbol	* pcs_notconst		978493						
ANR	978756	Symbol	pgs		978493						
ANR	978757	Symbol	* * pc		978493						
ANR	978758	Symbol	pcs		978493						
ANR	978759	Symbol	* pdc -> ccolor . paint		978493						
ANR	978760	Symbol	pdc -> ccolor . paint . values		978493						
ANR	978761	Symbol	pc -> paint . values		978493						
ANR	978762	Symbol	* pgs -> icc_manager		978493						
ANR	978763	Symbol	pcs_notconst -> type -> remap_color		978493						
ANR	978764	Symbol	pgs -> cmap_procs -> map_gray		978493						
ANR	978765	Symbol	gs_color_select_texture		978493						
ANR	978766	Symbol	pdc		978493						
ANR	978767	Symbol	pc -> paint		978493						
ANR	978768	Symbol	pgs -> cmap_procs -> map_rgb_alpha		978493						
ANR	978769	Symbol	pc		978493						
ANR	978770	Symbol	pcs_notconst -> type		978493						
ANR	978771	Symbol	* * pcs_notconst -> type		978493						
ANR	978772	Symbol	pdc -> ccolor		978493						
ANR	978773	Symbol	* pgs -> cmap_procs		978493						
ANR	978774	Function	gx_concretize_DeviceRGB	818:0:28594:28921							
ANR	978775	FunctionDef	"gx_concretize_DeviceRGB (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		978774	0					
ANR	978776	CompoundStatement		821:0:28755:28921	978774	0					
ANR	978777	ExpressionStatement	pconc [ 0 ] = gx_unit_frac ( pc -> paint . values [ 0 ] )	822:4:28761:28805	978774	0	True				
ANR	978778	AssignmentExpression	pconc [ 0 ] = gx_unit_frac ( pc -> paint . values [ 0 ] )		978774	0		=			
ANR	978779	ArrayIndexing	pconc [ 0 ]		978774	0					
ANR	978780	Identifier	pconc		978774	0					
ANR	978781	PrimaryExpression	0		978774	1					
ANR	978782	CallExpression	gx_unit_frac ( pc -> paint . values [ 0 ] )		978774	1					
ANR	978783	Callee	gx_unit_frac		978774	0					
ANR	978784	Identifier	gx_unit_frac		978774	0					
ANR	978785	ArgumentList	pc -> paint . values [ 0 ]		978774	1					
ANR	978786	Argument	pc -> paint . values [ 0 ]		978774	0					
ANR	978787	ArrayIndexing	pc -> paint . values [ 0 ]		978774	0					
ANR	978788	MemberAccess	pc -> paint . values		978774	0					
ANR	978789	PtrMemberAccess	pc -> paint		978774	0					
ANR	978790	Identifier	pc		978774	0					
ANR	978791	Identifier	paint		978774	1					
ANR	978792	Identifier	values		978774	1					
ANR	978793	PrimaryExpression	0		978774	1					
ANR	978794	ExpressionStatement	pconc [ 1 ] = gx_unit_frac ( pc -> paint . values [ 1 ] )	823:4:28811:28855	978774	1	True				
ANR	978795	AssignmentExpression	pconc [ 1 ] = gx_unit_frac ( pc -> paint . values [ 1 ] )		978774	0		=			
ANR	978796	ArrayIndexing	pconc [ 1 ]		978774	0					
ANR	978797	Identifier	pconc		978774	0					
ANR	978798	PrimaryExpression	1		978774	1					
ANR	978799	CallExpression	gx_unit_frac ( pc -> paint . values [ 1 ] )		978774	1					
ANR	978800	Callee	gx_unit_frac		978774	0					
ANR	978801	Identifier	gx_unit_frac		978774	0					
ANR	978802	ArgumentList	pc -> paint . values [ 1 ]		978774	1					
ANR	978803	Argument	pc -> paint . values [ 1 ]		978774	0					
ANR	978804	ArrayIndexing	pc -> paint . values [ 1 ]		978774	0					
ANR	978805	MemberAccess	pc -> paint . values		978774	0					
ANR	978806	PtrMemberAccess	pc -> paint		978774	0					
ANR	978807	Identifier	pc		978774	0					
ANR	978808	Identifier	paint		978774	1					
ANR	978809	Identifier	values		978774	1					
ANR	978810	PrimaryExpression	1		978774	1					
ANR	978811	ExpressionStatement	pconc [ 2 ] = gx_unit_frac ( pc -> paint . values [ 2 ] )	824:4:28861:28905	978774	2	True				
ANR	978812	AssignmentExpression	pconc [ 2 ] = gx_unit_frac ( pc -> paint . values [ 2 ] )		978774	0		=			
ANR	978813	ArrayIndexing	pconc [ 2 ]		978774	0					
ANR	978814	Identifier	pconc		978774	0					
ANR	978815	PrimaryExpression	2		978774	1					
ANR	978816	CallExpression	gx_unit_frac ( pc -> paint . values [ 2 ] )		978774	1					
ANR	978817	Callee	gx_unit_frac		978774	0					
ANR	978818	Identifier	gx_unit_frac		978774	0					
ANR	978819	ArgumentList	pc -> paint . values [ 2 ]		978774	1					
ANR	978820	Argument	pc -> paint . values [ 2 ]		978774	0					
ANR	978821	ArrayIndexing	pc -> paint . values [ 2 ]		978774	0					
ANR	978822	MemberAccess	pc -> paint . values		978774	0					
ANR	978823	PtrMemberAccess	pc -> paint		978774	0					
ANR	978824	Identifier	pc		978774	0					
ANR	978825	Identifier	paint		978774	1					
ANR	978826	Identifier	values		978774	1					
ANR	978827	PrimaryExpression	2		978774	1					
ANR	978828	ReturnStatement	return 0 ;	825:4:28911:28919	978774	3	True				
ANR	978829	PrimaryExpression	0		978774	0					
ANR	978830	ReturnType	int		978774	1					
ANR	978831	Identifier	gx_concretize_DeviceRGB		978774	2					
ANR	978832	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev"		978774	3					
ANR	978833	Parameter	const gs_client_color * pc	819:24:28622:28647	978774	0	True				
ANR	978834	ParameterType	const gs_client_color *		978774	0					
ANR	978835	Identifier	pc		978774	1					
ANR	978836	Parameter	const gs_color_space * pcs	819:52:28650:28675	978774	1	True				
ANR	978837	ParameterType	const gs_color_space *		978774	0					
ANR	978838	Identifier	pcs		978774	1					
ANR	978839	Parameter	frac * pconc	820:24:28702:28713	978774	2	True				
ANR	978840	ParameterType	frac *		978774	0					
ANR	978841	Identifier	pconc		978774	1					
ANR	978842	Parameter	const gs_gstate * pgs	820:38:28716:28736	978774	3	True				
ANR	978843	ParameterType	const gs_gstate *		978774	0					
ANR	978844	Identifier	pgs		978774	1					
ANR	978845	Parameter	gx_device * dev	820:61:28739:28752	978774	4	True				
ANR	978846	ParameterType	gx_device *		978774	0					
ANR	978847	Identifier	dev		978774	1					
ANR	978848	CFGEntryNode	ENTRY		978774		True				
ANR	978849	CFGExitNode	EXIT		978774		True				
ANR	978850	Symbol	pcs		978774						
ANR	978851	Symbol	* pconc		978774						
ANR	978852	Symbol	* pc -> paint		978774						
ANR	978853	Symbol	pconc		978774						
ANR	978854	Symbol	pc -> paint . values		978774						
ANR	978855	Symbol	* pc -> paint . values		978774						
ANR	978856	Symbol	pc -> paint		978774						
ANR	978857	Symbol	pc		978774						
ANR	978858	Symbol	dev		978774						
ANR	978859	Symbol	* pc		978774						
ANR	978860	Symbol	gx_unit_frac		978774						
ANR	978861	Symbol	pgs		978774						
ANR	978862	Symbol	* * pc		978774						
ANR	978863	Function	gx_remap_concrete_DRGB	827:0:28923:29558							
ANR	978864	FunctionDef	"gx_remap_concrete_DRGB (const gs_color_space * pcs , const frac * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const cmm_dev_profile_t * dev_profile)"		978863	0					
ANR	978865	CompoundStatement		832:0:29194:29558	978863	0					
ANR	978866	IfStatement	if ( pgs -> alpha == gx_max_color_value )		978863	0					
ANR	978867	Condition	pgs -> alpha == gx_max_color_value	833:8:29204:29235	978863	0	True				
ANR	978868	EqualityExpression	pgs -> alpha == gx_max_color_value		978863	0		==			
ANR	978869	PtrMemberAccess	pgs -> alpha		978863	0					
ANR	978870	Identifier	pgs		978863	0					
ANR	978871	Identifier	alpha		978863	1					
ANR	978872	Identifier	gx_max_color_value		978863	1					
ANR	978873	ExpressionStatement	"gx_remap_concrete_rgb ( pconc [ 0 ] , pconc [ 1 ] , pconc [ 2 ] , pdc , pgs , dev , select )"	834:8:29246:29350	978863	1	True				
ANR	978874	CallExpression	"gx_remap_concrete_rgb ( pconc [ 0 ] , pconc [ 1 ] , pconc [ 2 ] , pdc , pgs , dev , select )"		978863	0					
ANR	978875	Callee	gx_remap_concrete_rgb		978863	0					
ANR	978876	Identifier	gx_remap_concrete_rgb		978863	0					
ANR	978877	ArgumentList	pconc [ 0 ]		978863	1					
ANR	978878	Argument	pconc [ 0 ]		978863	0					
ANR	978879	ArrayIndexing	pconc [ 0 ]		978863	0					
ANR	978880	Identifier	pconc		978863	0					
ANR	978881	PrimaryExpression	0		978863	1					
ANR	978882	Argument	pconc [ 1 ]		978863	1					
ANR	978883	ArrayIndexing	pconc [ 1 ]		978863	0					
ANR	978884	Identifier	pconc		978863	0					
ANR	978885	PrimaryExpression	1		978863	1					
ANR	978886	Argument	pconc [ 2 ]		978863	2					
ANR	978887	ArrayIndexing	pconc [ 2 ]		978863	0					
ANR	978888	Identifier	pconc		978863	0					
ANR	978889	PrimaryExpression	2		978863	1					
ANR	978890	Argument	pdc		978863	3					
ANR	978891	Identifier	pdc		978863	0					
ANR	978892	Argument	pgs		978863	4					
ANR	978893	Identifier	pgs		978863	0					
ANR	978894	Argument	dev		978863	5					
ANR	978895	Identifier	dev		978863	0					
ANR	978896	Argument	select		978863	6					
ANR	978897	Identifier	select		978863	0					
ANR	978898	ElseStatement	else		978863	0					
ANR	978899	ExpressionStatement	"gx_remap_concrete_rgb_alpha ( pconc [ 0 ] , pconc [ 1 ] , pconc [ 2 ] , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"	837:8:29369:29542	978863	0	True				
ANR	978900	CallExpression	"gx_remap_concrete_rgb_alpha ( pconc [ 0 ] , pconc [ 1 ] , pconc [ 2 ] , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"		978863	0					
ANR	978901	Callee	gx_remap_concrete_rgb_alpha		978863	0					
ANR	978902	Identifier	gx_remap_concrete_rgb_alpha		978863	0					
ANR	978903	ArgumentList	pconc [ 0 ]		978863	1					
ANR	978904	Argument	pconc [ 0 ]		978863	0					
ANR	978905	ArrayIndexing	pconc [ 0 ]		978863	0					
ANR	978906	Identifier	pconc		978863	0					
ANR	978907	PrimaryExpression	0		978863	1					
ANR	978908	Argument	pconc [ 1 ]		978863	1					
ANR	978909	ArrayIndexing	pconc [ 1 ]		978863	0					
ANR	978910	Identifier	pconc		978863	0					
ANR	978911	PrimaryExpression	1		978863	1					
ANR	978912	Argument	pconc [ 2 ]		978863	2					
ANR	978913	ArrayIndexing	pconc [ 2 ]		978863	0					
ANR	978914	Identifier	pconc		978863	0					
ANR	978915	PrimaryExpression	2		978863	1					
ANR	978916	Argument	cv2frac ( pgs -> alpha )		978863	3					
ANR	978917	CallExpression	cv2frac ( pgs -> alpha )		978863	0					
ANR	978918	Callee	cv2frac		978863	0					
ANR	978919	Identifier	cv2frac		978863	0					
ANR	978920	ArgumentList	pgs -> alpha		978863	1					
ANR	978921	Argument	pgs -> alpha		978863	0					
ANR	978922	PtrMemberAccess	pgs -> alpha		978863	0					
ANR	978923	Identifier	pgs		978863	0					
ANR	978924	Identifier	alpha		978863	1					
ANR	978925	Argument	pdc		978863	4					
ANR	978926	Identifier	pdc		978863	0					
ANR	978927	Argument	pgs		978863	5					
ANR	978928	Identifier	pgs		978863	0					
ANR	978929	Argument	dev		978863	6					
ANR	978930	Identifier	dev		978863	0					
ANR	978931	Argument	select		978863	7					
ANR	978932	Identifier	select		978863	0					
ANR	978933	ReturnStatement	return 0 ;	840:4:29548:29556	978863	1	True				
ANR	978934	PrimaryExpression	0		978863	0					
ANR	978935	ReturnType	int		978863	1					
ANR	978936	Identifier	gx_remap_concrete_DRGB		978863	2					
ANR	978937	ParameterList	"const gs_color_space * pcs , const frac * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const cmm_dev_profile_t * dev_profile"		978863	3					
ANR	978938	Parameter	const gs_color_space * pcs	828:23:28950:28975	978863	0	True				
ANR	978939	ParameterType	const gs_color_space *		978863	0					
ANR	978940	Identifier	pcs		978863	1					
ANR	978941	Parameter	const frac * pconc	828:51:28978:28995	978863	1	True				
ANR	978942	ParameterType	const frac *		978863	0					
ANR	978943	Identifier	pconc		978863	1					
ANR	978944	Parameter	gx_device_color * pdc	829:23:29021:29041	978863	2	True				
ANR	978945	ParameterType	gx_device_color *		978863	0					
ANR	978946	Identifier	pdc		978863	1					
ANR	978947	Parameter	const gs_gstate * pgs	829:46:29044:29064	978863	3	True				
ANR	978948	ParameterType	const gs_gstate *		978863	0					
ANR	978949	Identifier	pgs		978863	1					
ANR	978950	Parameter	gx_device * dev	830:23:29090:29104	978863	4	True				
ANR	978951	ParameterType	gx_device *		978863	0					
ANR	978952	Identifier	dev		978863	1					
ANR	978953	Parameter	gs_color_select_t select	830:40:29107:29130	978863	5	True				
ANR	978954	ParameterType	gs_color_select_t		978863	0					
ANR	978955	Identifier	select		978863	1					
ANR	978956	Parameter	const cmm_dev_profile_t * dev_profile	831:23:29156:29191	978863	6	True				
ANR	978957	ParameterType	const cmm_dev_profile_t *		978863	0					
ANR	978958	Identifier	dev_profile		978863	1					
ANR	978959	CFGEntryNode	ENTRY		978863		True				
ANR	978960	CFGExitNode	EXIT		978863		True				
ANR	978961	Symbol	pgs -> alpha		978863						
ANR	978962	Symbol	pcs		978863						
ANR	978963	Symbol	* pconc		978863						
ANR	978964	Symbol	select		978863						
ANR	978965	Symbol	dev		978863						
ANR	978966	Symbol	* pgs		978863						
ANR	978967	Symbol	gx_max_color_value		978863						
ANR	978968	Symbol	dev_profile		978863						
ANR	978969	Symbol	cv2frac		978863						
ANR	978970	Symbol	pconc		978863						
ANR	978971	Symbol	pgs		978863						
ANR	978972	Symbol	pdc		978863						
ANR	978973	Function	gx_remap_DeviceRGB	842:0:29560:30474							
ANR	978974	FunctionDef	"gx_remap_DeviceRGB (const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		978973	0					
ANR	978975	CompoundStatement		846:0:29755:30474	978973	0					
ANR	978976	IdentifierDeclStatement	"frac fred = gx_unit_frac ( pc -> paint . values [ 0 ] ) , fgreen = gx_unit_frac ( pc -> paint . values [ 1 ] ) , fblue = gx_unit_frac ( pc -> paint . values [ 2 ] ) ;"	847:4:29761:29902	978973	0	True				
ANR	978977	IdentifierDecl	fred = gx_unit_frac ( pc -> paint . values [ 0 ] )		978973	0					
ANR	978978	IdentifierDeclType	frac		978973	0					
ANR	978979	Identifier	fred		978973	1					
ANR	978980	AssignmentExpression	fred = gx_unit_frac ( pc -> paint . values [ 0 ] )		978973	2		=			
ANR	978981	Identifier	fred		978973	0					
ANR	978982	CallExpression	gx_unit_frac ( pc -> paint . values [ 0 ] )		978973	1					
ANR	978983	Callee	gx_unit_frac		978973	0					
ANR	978984	Identifier	gx_unit_frac		978973	0					
ANR	978985	ArgumentList	pc -> paint . values [ 0 ]		978973	1					
ANR	978986	Argument	pc -> paint . values [ 0 ]		978973	0					
ANR	978987	ArrayIndexing	pc -> paint . values [ 0 ]		978973	0					
ANR	978988	MemberAccess	pc -> paint . values		978973	0					
ANR	978989	PtrMemberAccess	pc -> paint		978973	0					
ANR	978990	Identifier	pc		978973	0					
ANR	978991	Identifier	paint		978973	1					
ANR	978992	Identifier	values		978973	1					
ANR	978993	PrimaryExpression	0		978973	1					
ANR	978994	IdentifierDecl	fgreen = gx_unit_frac ( pc -> paint . values [ 1 ] )		978973	1					
ANR	978995	IdentifierDeclType	frac		978973	0					
ANR	978996	Identifier	fgreen		978973	1					
ANR	978997	AssignmentExpression	fgreen = gx_unit_frac ( pc -> paint . values [ 1 ] )		978973	2		=			
ANR	978998	Identifier	fgreen		978973	0					
ANR	978999	CallExpression	gx_unit_frac ( pc -> paint . values [ 1 ] )		978973	1					
ANR	979000	Callee	gx_unit_frac		978973	0					
ANR	979001	Identifier	gx_unit_frac		978973	0					
ANR	979002	ArgumentList	pc -> paint . values [ 1 ]		978973	1					
ANR	979003	Argument	pc -> paint . values [ 1 ]		978973	0					
ANR	979004	ArrayIndexing	pc -> paint . values [ 1 ]		978973	0					
ANR	979005	MemberAccess	pc -> paint . values		978973	0					
ANR	979006	PtrMemberAccess	pc -> paint		978973	0					
ANR	979007	Identifier	pc		978973	0					
ANR	979008	Identifier	paint		978973	1					
ANR	979009	Identifier	values		978973	1					
ANR	979010	PrimaryExpression	1		978973	1					
ANR	979011	IdentifierDecl	fblue = gx_unit_frac ( pc -> paint . values [ 2 ] )		978973	2					
ANR	979012	IdentifierDeclType	frac		978973	0					
ANR	979013	Identifier	fblue		978973	1					
ANR	979014	AssignmentExpression	fblue = gx_unit_frac ( pc -> paint . values [ 2 ] )		978973	2		=			
ANR	979015	Identifier	fblue		978973	0					
ANR	979016	CallExpression	gx_unit_frac ( pc -> paint . values [ 2 ] )		978973	1					
ANR	979017	Callee	gx_unit_frac		978973	0					
ANR	979018	Identifier	gx_unit_frac		978973	0					
ANR	979019	ArgumentList	pc -> paint . values [ 2 ]		978973	1					
ANR	979020	Argument	pc -> paint . values [ 2 ]		978973	0					
ANR	979021	ArrayIndexing	pc -> paint . values [ 2 ]		978973	0					
ANR	979022	MemberAccess	pc -> paint . values		978973	0					
ANR	979023	PtrMemberAccess	pc -> paint		978973	0					
ANR	979024	Identifier	pc		978973	0					
ANR	979025	Identifier	paint		978973	1					
ANR	979026	Identifier	values		978973	1					
ANR	979027	PrimaryExpression	2		978973	1					
ANR	979028	ExpressionStatement	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]	851:4:29975:30024	978973	1	True				
ANR	979029	AssignmentExpression	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]		978973	0		=			
ANR	979030	ArrayIndexing	pdc -> ccolor . paint . values [ 0 ]		978973	0					
ANR	979031	MemberAccess	pdc -> ccolor . paint . values		978973	0					
ANR	979032	MemberAccess	pdc -> ccolor . paint		978973	0					
ANR	979033	PtrMemberAccess	pdc -> ccolor		978973	0					
ANR	979034	Identifier	pdc		978973	0					
ANR	979035	Identifier	ccolor		978973	1					
ANR	979036	Identifier	paint		978973	1					
ANR	979037	Identifier	values		978973	1					
ANR	979038	PrimaryExpression	0		978973	1					
ANR	979039	ArrayIndexing	pc -> paint . values [ 0 ]		978973	1					
ANR	979040	MemberAccess	pc -> paint . values		978973	0					
ANR	979041	PtrMemberAccess	pc -> paint		978973	0					
ANR	979042	Identifier	pc		978973	0					
ANR	979043	Identifier	paint		978973	1					
ANR	979044	Identifier	values		978973	1					
ANR	979045	PrimaryExpression	0		978973	1					
ANR	979046	ExpressionStatement	pdc -> ccolor . paint . values [ 1 ] = pc -> paint . values [ 1 ]	852:4:30030:30079	978973	2	True				
ANR	979047	AssignmentExpression	pdc -> ccolor . paint . values [ 1 ] = pc -> paint . values [ 1 ]		978973	0		=			
ANR	979048	ArrayIndexing	pdc -> ccolor . paint . values [ 1 ]		978973	0					
ANR	979049	MemberAccess	pdc -> ccolor . paint . values		978973	0					
ANR	979050	MemberAccess	pdc -> ccolor . paint		978973	0					
ANR	979051	PtrMemberAccess	pdc -> ccolor		978973	0					
ANR	979052	Identifier	pdc		978973	0					
ANR	979053	Identifier	ccolor		978973	1					
ANR	979054	Identifier	paint		978973	1					
ANR	979055	Identifier	values		978973	1					
ANR	979056	PrimaryExpression	1		978973	1					
ANR	979057	ArrayIndexing	pc -> paint . values [ 1 ]		978973	1					
ANR	979058	MemberAccess	pc -> paint . values		978973	0					
ANR	979059	PtrMemberAccess	pc -> paint		978973	0					
ANR	979060	Identifier	pc		978973	0					
ANR	979061	Identifier	paint		978973	1					
ANR	979062	Identifier	values		978973	1					
ANR	979063	PrimaryExpression	1		978973	1					
ANR	979064	ExpressionStatement	pdc -> ccolor . paint . values [ 2 ] = pc -> paint . values [ 2 ]	853:4:30085:30134	978973	3	True				
ANR	979065	AssignmentExpression	pdc -> ccolor . paint . values [ 2 ] = pc -> paint . values [ 2 ]		978973	0		=			
ANR	979066	ArrayIndexing	pdc -> ccolor . paint . values [ 2 ]		978973	0					
ANR	979067	MemberAccess	pdc -> ccolor . paint . values		978973	0					
ANR	979068	MemberAccess	pdc -> ccolor . paint		978973	0					
ANR	979069	PtrMemberAccess	pdc -> ccolor		978973	0					
ANR	979070	Identifier	pdc		978973	0					
ANR	979071	Identifier	ccolor		978973	1					
ANR	979072	Identifier	paint		978973	1					
ANR	979073	Identifier	values		978973	1					
ANR	979074	PrimaryExpression	2		978973	1					
ANR	979075	ArrayIndexing	pc -> paint . values [ 2 ]		978973	1					
ANR	979076	MemberAccess	pc -> paint . values		978973	0					
ANR	979077	PtrMemberAccess	pc -> paint		978973	0					
ANR	979078	Identifier	pc		978973	0					
ANR	979079	Identifier	paint		978973	1					
ANR	979080	Identifier	values		978973	1					
ANR	979081	PrimaryExpression	2		978973	1					
ANR	979082	ExpressionStatement	pdc -> ccolor_valid = true	854:4:30140:30164	978973	4	True				
ANR	979083	AssignmentExpression	pdc -> ccolor_valid = true		978973	0		=			
ANR	979084	PtrMemberAccess	pdc -> ccolor_valid		978973	0					
ANR	979085	Identifier	pdc		978973	0					
ANR	979086	Identifier	ccolor_valid		978973	1					
ANR	979087	Identifier	true		978973	1					
ANR	979088	IfStatement	if ( pgs -> alpha == gx_max_color_value )		978973	5					
ANR	979089	Condition	pgs -> alpha == gx_max_color_value	855:8:30174:30205	978973	0	True				
ANR	979090	EqualityExpression	pgs -> alpha == gx_max_color_value		978973	0		==			
ANR	979091	PtrMemberAccess	pgs -> alpha		978973	0					
ANR	979092	Identifier	pgs		978973	0					
ANR	979093	Identifier	alpha		978973	1					
ANR	979094	Identifier	gx_max_color_value		978973	1					
ANR	979095	ExpressionStatement	"gx_remap_concrete_rgb ( fred , fgreen , fblue , pdc , pgs , dev , select )"	856:8:30216:30311	978973	1	True				
ANR	979096	CallExpression	"gx_remap_concrete_rgb ( fred , fgreen , fblue , pdc , pgs , dev , select )"		978973	0					
ANR	979097	Callee	gx_remap_concrete_rgb		978973	0					
ANR	979098	Identifier	gx_remap_concrete_rgb		978973	0					
ANR	979099	ArgumentList	fred		978973	1					
ANR	979100	Argument	fred		978973	0					
ANR	979101	Identifier	fred		978973	0					
ANR	979102	Argument	fgreen		978973	1					
ANR	979103	Identifier	fgreen		978973	0					
ANR	979104	Argument	fblue		978973	2					
ANR	979105	Identifier	fblue		978973	0					
ANR	979106	Argument	pdc		978973	3					
ANR	979107	Identifier	pdc		978973	0					
ANR	979108	Argument	pgs		978973	4					
ANR	979109	Identifier	pgs		978973	0					
ANR	979110	Argument	dev		978973	5					
ANR	979111	Identifier	dev		978973	0					
ANR	979112	Argument	select		978973	6					
ANR	979113	Identifier	select		978973	0					
ANR	979114	ElseStatement	else		978973	0					
ANR	979115	ExpressionStatement	"gx_remap_concrete_rgb_alpha ( fred , fgreen , fblue , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"	859:8:30330:30458	978973	0	True				
ANR	979116	CallExpression	"gx_remap_concrete_rgb_alpha ( fred , fgreen , fblue , cv2frac ( pgs -> alpha ) , pdc , pgs , dev , select )"		978973	0					
ANR	979117	Callee	gx_remap_concrete_rgb_alpha		978973	0					
ANR	979118	Identifier	gx_remap_concrete_rgb_alpha		978973	0					
ANR	979119	ArgumentList	fred		978973	1					
ANR	979120	Argument	fred		978973	0					
ANR	979121	Identifier	fred		978973	0					
ANR	979122	Argument	fgreen		978973	1					
ANR	979123	Identifier	fgreen		978973	0					
ANR	979124	Argument	fblue		978973	2					
ANR	979125	Identifier	fblue		978973	0					
ANR	979126	Argument	cv2frac ( pgs -> alpha )		978973	3					
ANR	979127	CallExpression	cv2frac ( pgs -> alpha )		978973	0					
ANR	979128	Callee	cv2frac		978973	0					
ANR	979129	Identifier	cv2frac		978973	0					
ANR	979130	ArgumentList	pgs -> alpha		978973	1					
ANR	979131	Argument	pgs -> alpha		978973	0					
ANR	979132	PtrMemberAccess	pgs -> alpha		978973	0					
ANR	979133	Identifier	pgs		978973	0					
ANR	979134	Identifier	alpha		978973	1					
ANR	979135	Argument	pdc		978973	4					
ANR	979136	Identifier	pdc		978973	0					
ANR	979137	Argument	pgs		978973	5					
ANR	979138	Identifier	pgs		978973	0					
ANR	979139	Argument	dev		978973	6					
ANR	979140	Identifier	dev		978973	0					
ANR	979141	Argument	select		978973	7					
ANR	979142	Identifier	select		978973	0					
ANR	979143	ReturnStatement	return 0 ;	861:4:30464:30472	978973	6	True				
ANR	979144	PrimaryExpression	0		978973	0					
ANR	979145	ReturnType	int		978973	1					
ANR	979146	Identifier	gx_remap_DeviceRGB		978973	2					
ANR	979147	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		978973	3					
ANR	979148	Parameter	const gs_client_color * pc	843:19:29583:29608	978973	0	True				
ANR	979149	ParameterType	const gs_client_color *		978973	0					
ANR	979150	Identifier	pc		978973	1					
ANR	979151	Parameter	const gs_color_space * pcs	843:47:29611:29636	978973	1	True				
ANR	979152	ParameterType	const gs_color_space *		978973	0					
ANR	979153	Identifier	pcs		978973	1					
ANR	979154	Parameter	gx_device_color * pdc	844:8:29647:29667	978973	2	True				
ANR	979155	ParameterType	gx_device_color *		978973	0					
ANR	979156	Identifier	pdc		978973	1					
ANR	979157	Parameter	const gs_gstate * pgs	844:31:29670:29690	978973	3	True				
ANR	979158	ParameterType	const gs_gstate *		978973	0					
ANR	979159	Identifier	pgs		978973	1					
ANR	979160	Parameter	gx_device * dev	844:54:29693:29707	978973	4	True				
ANR	979161	ParameterType	gx_device *		978973	0					
ANR	979162	Identifier	dev		978973	1					
ANR	979163	Parameter	gs_color_select_t select	845:19:29729:29752	978973	5	True				
ANR	979164	ParameterType	gs_color_select_t		978973	0					
ANR	979165	Identifier	select		978973	1					
ANR	979166	CFGEntryNode	ENTRY		978973		True				
ANR	979167	CFGExitNode	EXIT		978973		True				
ANR	979168	Symbol	select		978973						
ANR	979169	Symbol	* * pdc		978973						
ANR	979170	Symbol	* pc -> paint		978973						
ANR	979171	Symbol	* pgs		978973						
ANR	979172	Symbol	fblue		978973						
ANR	979173	Symbol	* pc -> paint . values		978973						
ANR	979174	Symbol	pdc -> ccolor . paint		978973						
ANR	979175	Symbol	pdc -> ccolor_valid		978973						
ANR	979176	Symbol	dev		978973						
ANR	979177	Symbol	cv2frac		978973						
ANR	979178	Symbol	* pdc		978973						
ANR	979179	Symbol	fred		978973						
ANR	979180	Symbol	pgs		978973						
ANR	979181	Symbol	* * pc		978973						
ANR	979182	Symbol	pcs		978973						
ANR	979183	Symbol	* pdc -> ccolor . paint		978973						
ANR	979184	Symbol	pdc -> ccolor . paint . values		978973						
ANR	979185	Symbol	pc -> paint . values		978973						
ANR	979186	Symbol	pdc		978973						
ANR	979187	Symbol	* pdc -> ccolor . paint . values		978973						
ANR	979188	Symbol	pgs -> alpha		978973						
ANR	979189	Symbol	pc -> paint		978973						
ANR	979190	Symbol	fgreen		978973						
ANR	979191	Symbol	pc		978973						
ANR	979192	Symbol	* pdc -> ccolor		978973						
ANR	979193	Symbol	gx_max_color_value		978973						
ANR	979194	Symbol	true		978973						
ANR	979195	Symbol	* pc		978973						
ANR	979196	Symbol	gx_unit_frac		978973						
ANR	979197	Symbol	pdc -> ccolor		978973						
ANR	979198	Function	gx_concretize_DeviceCMYK	865:0:30494:30873							
ANR	979199	FunctionDef	"gx_concretize_DeviceCMYK (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		979198	0					
ANR	979200	CompoundStatement		868:0:30657:30873	979198	0					
ANR	979201	ExpressionStatement	pconc [ 0 ] = gx_unit_frac ( pc -> paint . values [ 0 ] )	869:4:30663:30707	979198	0	True				
ANR	979202	AssignmentExpression	pconc [ 0 ] = gx_unit_frac ( pc -> paint . values [ 0 ] )		979198	0		=			
ANR	979203	ArrayIndexing	pconc [ 0 ]		979198	0					
ANR	979204	Identifier	pconc		979198	0					
ANR	979205	PrimaryExpression	0		979198	1					
ANR	979206	CallExpression	gx_unit_frac ( pc -> paint . values [ 0 ] )		979198	1					
ANR	979207	Callee	gx_unit_frac		979198	0					
ANR	979208	Identifier	gx_unit_frac		979198	0					
ANR	979209	ArgumentList	pc -> paint . values [ 0 ]		979198	1					
ANR	979210	Argument	pc -> paint . values [ 0 ]		979198	0					
ANR	979211	ArrayIndexing	pc -> paint . values [ 0 ]		979198	0					
ANR	979212	MemberAccess	pc -> paint . values		979198	0					
ANR	979213	PtrMemberAccess	pc -> paint		979198	0					
ANR	979214	Identifier	pc		979198	0					
ANR	979215	Identifier	paint		979198	1					
ANR	979216	Identifier	values		979198	1					
ANR	979217	PrimaryExpression	0		979198	1					
ANR	979218	ExpressionStatement	pconc [ 1 ] = gx_unit_frac ( pc -> paint . values [ 1 ] )	870:4:30713:30757	979198	1	True				
ANR	979219	AssignmentExpression	pconc [ 1 ] = gx_unit_frac ( pc -> paint . values [ 1 ] )		979198	0		=			
ANR	979220	ArrayIndexing	pconc [ 1 ]		979198	0					
ANR	979221	Identifier	pconc		979198	0					
ANR	979222	PrimaryExpression	1		979198	1					
ANR	979223	CallExpression	gx_unit_frac ( pc -> paint . values [ 1 ] )		979198	1					
ANR	979224	Callee	gx_unit_frac		979198	0					
ANR	979225	Identifier	gx_unit_frac		979198	0					
ANR	979226	ArgumentList	pc -> paint . values [ 1 ]		979198	1					
ANR	979227	Argument	pc -> paint . values [ 1 ]		979198	0					
ANR	979228	ArrayIndexing	pc -> paint . values [ 1 ]		979198	0					
ANR	979229	MemberAccess	pc -> paint . values		979198	0					
ANR	979230	PtrMemberAccess	pc -> paint		979198	0					
ANR	979231	Identifier	pc		979198	0					
ANR	979232	Identifier	paint		979198	1					
ANR	979233	Identifier	values		979198	1					
ANR	979234	PrimaryExpression	1		979198	1					
ANR	979235	ExpressionStatement	pconc [ 2 ] = gx_unit_frac ( pc -> paint . values [ 2 ] )	871:4:30763:30807	979198	2	True				
ANR	979236	AssignmentExpression	pconc [ 2 ] = gx_unit_frac ( pc -> paint . values [ 2 ] )		979198	0		=			
ANR	979237	ArrayIndexing	pconc [ 2 ]		979198	0					
ANR	979238	Identifier	pconc		979198	0					
ANR	979239	PrimaryExpression	2		979198	1					
ANR	979240	CallExpression	gx_unit_frac ( pc -> paint . values [ 2 ] )		979198	1					
ANR	979241	Callee	gx_unit_frac		979198	0					
ANR	979242	Identifier	gx_unit_frac		979198	0					
ANR	979243	ArgumentList	pc -> paint . values [ 2 ]		979198	1					
ANR	979244	Argument	pc -> paint . values [ 2 ]		979198	0					
ANR	979245	ArrayIndexing	pc -> paint . values [ 2 ]		979198	0					
ANR	979246	MemberAccess	pc -> paint . values		979198	0					
ANR	979247	PtrMemberAccess	pc -> paint		979198	0					
ANR	979248	Identifier	pc		979198	0					
ANR	979249	Identifier	paint		979198	1					
ANR	979250	Identifier	values		979198	1					
ANR	979251	PrimaryExpression	2		979198	1					
ANR	979252	ExpressionStatement	pconc [ 3 ] = gx_unit_frac ( pc -> paint . values [ 3 ] )	872:4:30813:30857	979198	3	True				
ANR	979253	AssignmentExpression	pconc [ 3 ] = gx_unit_frac ( pc -> paint . values [ 3 ] )		979198	0		=			
ANR	979254	ArrayIndexing	pconc [ 3 ]		979198	0					
ANR	979255	Identifier	pconc		979198	0					
ANR	979256	PrimaryExpression	3		979198	1					
ANR	979257	CallExpression	gx_unit_frac ( pc -> paint . values [ 3 ] )		979198	1					
ANR	979258	Callee	gx_unit_frac		979198	0					
ANR	979259	Identifier	gx_unit_frac		979198	0					
ANR	979260	ArgumentList	pc -> paint . values [ 3 ]		979198	1					
ANR	979261	Argument	pc -> paint . values [ 3 ]		979198	0					
ANR	979262	ArrayIndexing	pc -> paint . values [ 3 ]		979198	0					
ANR	979263	MemberAccess	pc -> paint . values		979198	0					
ANR	979264	PtrMemberAccess	pc -> paint		979198	0					
ANR	979265	Identifier	pc		979198	0					
ANR	979266	Identifier	paint		979198	1					
ANR	979267	Identifier	values		979198	1					
ANR	979268	PrimaryExpression	3		979198	1					
ANR	979269	ReturnStatement	return 0 ;	873:4:30863:30871	979198	4	True				
ANR	979270	PrimaryExpression	0		979198	0					
ANR	979271	ReturnType	int		979198	1					
ANR	979272	Identifier	gx_concretize_DeviceCMYK		979198	2					
ANR	979273	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs , gx_device * dev"		979198	3					
ANR	979274	Parameter	const gs_client_color * pc	866:25:30523:30548	979198	0	True				
ANR	979275	ParameterType	const gs_client_color *		979198	0					
ANR	979276	Identifier	pc		979198	1					
ANR	979277	Parameter	const gs_color_space * pcs	866:53:30551:30576	979198	1	True				
ANR	979278	ParameterType	const gs_color_space *		979198	0					
ANR	979279	Identifier	pcs		979198	1					
ANR	979280	Parameter	frac * pconc	867:25:30604:30615	979198	2	True				
ANR	979281	ParameterType	frac *		979198	0					
ANR	979282	Identifier	pconc		979198	1					
ANR	979283	Parameter	const gs_gstate * pgs	867:39:30618:30638	979198	3	True				
ANR	979284	ParameterType	const gs_gstate *		979198	0					
ANR	979285	Identifier	pgs		979198	1					
ANR	979286	Parameter	gx_device * dev	867:62:30641:30654	979198	4	True				
ANR	979287	ParameterType	gx_device *		979198	0					
ANR	979288	Identifier	dev		979198	1					
ANR	979289	CFGEntryNode	ENTRY		979198		True				
ANR	979290	CFGExitNode	EXIT		979198		True				
ANR	979291	Symbol	pcs		979198						
ANR	979292	Symbol	* pconc		979198						
ANR	979293	Symbol	* pc -> paint		979198						
ANR	979294	Symbol	pconc		979198						
ANR	979295	Symbol	pc -> paint . values		979198						
ANR	979296	Symbol	* pc -> paint . values		979198						
ANR	979297	Symbol	pc -> paint		979198						
ANR	979298	Symbol	pc		979198						
ANR	979299	Symbol	dev		979198						
ANR	979300	Symbol	gx_unit_frac		979198						
ANR	979301	Symbol	* pc		979198						
ANR	979302	Symbol	pgs		979198						
ANR	979303	Symbol	* * pc		979198						
ANR	979304	Function	gx_remap_concrete_DCMYK	875:0:30875:31318							
ANR	979305	FunctionDef	"gx_remap_concrete_DCMYK (const gs_color_space * pcs , const frac * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const cmm_dev_profile_t * dev_profile)"		979304	0					
ANR	979306	CompoundStatement		880:0:31150:31318	979304	0					
ANR	979307	ExpressionStatement	"gx_remap_concrete_cmyk ( pconc [ 0 ] , pconc [ 1 ] , pconc [ 2 ] , pconc [ 3 ] , pdc , pgs , dev , select , pcs )"	882:4:31185:31302	979304	0	True				
ANR	979308	CallExpression	"gx_remap_concrete_cmyk ( pconc [ 0 ] , pconc [ 1 ] , pconc [ 2 ] , pconc [ 3 ] , pdc , pgs , dev , select , pcs )"		979304	0					
ANR	979309	Callee	gx_remap_concrete_cmyk		979304	0					
ANR	979310	Identifier	gx_remap_concrete_cmyk		979304	0					
ANR	979311	ArgumentList	pconc [ 0 ]		979304	1					
ANR	979312	Argument	pconc [ 0 ]		979304	0					
ANR	979313	ArrayIndexing	pconc [ 0 ]		979304	0					
ANR	979314	Identifier	pconc		979304	0					
ANR	979315	PrimaryExpression	0		979304	1					
ANR	979316	Argument	pconc [ 1 ]		979304	1					
ANR	979317	ArrayIndexing	pconc [ 1 ]		979304	0					
ANR	979318	Identifier	pconc		979304	0					
ANR	979319	PrimaryExpression	1		979304	1					
ANR	979320	Argument	pconc [ 2 ]		979304	2					
ANR	979321	ArrayIndexing	pconc [ 2 ]		979304	0					
ANR	979322	Identifier	pconc		979304	0					
ANR	979323	PrimaryExpression	2		979304	1					
ANR	979324	Argument	pconc [ 3 ]		979304	3					
ANR	979325	ArrayIndexing	pconc [ 3 ]		979304	0					
ANR	979326	Identifier	pconc		979304	0					
ANR	979327	PrimaryExpression	3		979304	1					
ANR	979328	Argument	pdc		979304	4					
ANR	979329	Identifier	pdc		979304	0					
ANR	979330	Argument	pgs		979304	5					
ANR	979331	Identifier	pgs		979304	0					
ANR	979332	Argument	dev		979304	6					
ANR	979333	Identifier	dev		979304	0					
ANR	979334	Argument	select		979304	7					
ANR	979335	Identifier	select		979304	0					
ANR	979336	Argument	pcs		979304	8					
ANR	979337	Identifier	pcs		979304	0					
ANR	979338	ReturnStatement	return 0 ;	884:4:31308:31316	979304	1	True				
ANR	979339	PrimaryExpression	0		979304	0					
ANR	979340	ReturnType	int		979304	1					
ANR	979341	Identifier	gx_remap_concrete_DCMYK		979304	2					
ANR	979342	ParameterList	"const gs_color_space * pcs , const frac * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const cmm_dev_profile_t * dev_profile"		979304	3					
ANR	979343	Parameter	const gs_color_space * pcs	876:24:30903:30928	979304	0	True				
ANR	979344	ParameterType	const gs_color_space *		979304	0					
ANR	979345	Identifier	pcs		979304	1					
ANR	979346	Parameter	const frac * pconc	876:52:30931:30948	979304	1	True				
ANR	979347	ParameterType	const frac *		979304	0					
ANR	979348	Identifier	pconc		979304	1					
ANR	979349	Parameter	gx_device_color * pdc	877:24:30975:30995	979304	2	True				
ANR	979350	ParameterType	gx_device_color *		979304	0					
ANR	979351	Identifier	pdc		979304	1					
ANR	979352	Parameter	const gs_gstate * pgs	877:47:30998:31018	979304	3	True				
ANR	979353	ParameterType	const gs_gstate *		979304	0					
ANR	979354	Identifier	pgs		979304	1					
ANR	979355	Parameter	gx_device * dev	878:24:31045:31059	979304	4	True				
ANR	979356	ParameterType	gx_device *		979304	0					
ANR	979357	Identifier	dev		979304	1					
ANR	979358	Parameter	gs_color_select_t select	878:41:31062:31085	979304	5	True				
ANR	979359	ParameterType	gs_color_select_t		979304	0					
ANR	979360	Identifier	select		979304	1					
ANR	979361	Parameter	const cmm_dev_profile_t * dev_profile	879:24:31112:31147	979304	6	True				
ANR	979362	ParameterType	const cmm_dev_profile_t *		979304	0					
ANR	979363	Identifier	dev_profile		979304	1					
ANR	979364	CFGEntryNode	ENTRY		979304		True				
ANR	979365	CFGExitNode	EXIT		979304		True				
ANR	979366	Symbol	pcs		979304						
ANR	979367	Symbol	* pconc		979304						
ANR	979368	Symbol	select		979304						
ANR	979369	Symbol	dev		979304						
ANR	979370	Symbol	dev_profile		979304						
ANR	979371	Symbol	pconc		979304						
ANR	979372	Symbol	pgs		979304						
ANR	979373	Symbol	pdc		979304						
ANR	979374	Function	gx_remap_DeviceCMYK	886:0:31320:32182							
ANR	979375	FunctionDef	"gx_remap_DeviceCMYK (const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		979374	0					
ANR	979376	CompoundStatement		890:0:31517:32182	979374	0					
ANR	979377	ExpressionStatement	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]	893:4:31618:31667	979374	0	True				
ANR	979378	AssignmentExpression	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]		979374	0		=			
ANR	979379	ArrayIndexing	pdc -> ccolor . paint . values [ 0 ]		979374	0					
ANR	979380	MemberAccess	pdc -> ccolor . paint . values		979374	0					
ANR	979381	MemberAccess	pdc -> ccolor . paint		979374	0					
ANR	979382	PtrMemberAccess	pdc -> ccolor		979374	0					
ANR	979383	Identifier	pdc		979374	0					
ANR	979384	Identifier	ccolor		979374	1					
ANR	979385	Identifier	paint		979374	1					
ANR	979386	Identifier	values		979374	1					
ANR	979387	PrimaryExpression	0		979374	1					
ANR	979388	ArrayIndexing	pc -> paint . values [ 0 ]		979374	1					
ANR	979389	MemberAccess	pc -> paint . values		979374	0					
ANR	979390	PtrMemberAccess	pc -> paint		979374	0					
ANR	979391	Identifier	pc		979374	0					
ANR	979392	Identifier	paint		979374	1					
ANR	979393	Identifier	values		979374	1					
ANR	979394	PrimaryExpression	0		979374	1					
ANR	979395	ExpressionStatement	pdc -> ccolor . paint . values [ 1 ] = pc -> paint . values [ 1 ]	894:4:31673:31722	979374	1	True				
ANR	979396	AssignmentExpression	pdc -> ccolor . paint . values [ 1 ] = pc -> paint . values [ 1 ]		979374	0		=			
ANR	979397	ArrayIndexing	pdc -> ccolor . paint . values [ 1 ]		979374	0					
ANR	979398	MemberAccess	pdc -> ccolor . paint . values		979374	0					
ANR	979399	MemberAccess	pdc -> ccolor . paint		979374	0					
ANR	979400	PtrMemberAccess	pdc -> ccolor		979374	0					
ANR	979401	Identifier	pdc		979374	0					
ANR	979402	Identifier	ccolor		979374	1					
ANR	979403	Identifier	paint		979374	1					
ANR	979404	Identifier	values		979374	1					
ANR	979405	PrimaryExpression	1		979374	1					
ANR	979406	ArrayIndexing	pc -> paint . values [ 1 ]		979374	1					
ANR	979407	MemberAccess	pc -> paint . values		979374	0					
ANR	979408	PtrMemberAccess	pc -> paint		979374	0					
ANR	979409	Identifier	pc		979374	0					
ANR	979410	Identifier	paint		979374	1					
ANR	979411	Identifier	values		979374	1					
ANR	979412	PrimaryExpression	1		979374	1					
ANR	979413	ExpressionStatement	pdc -> ccolor . paint . values [ 2 ] = pc -> paint . values [ 2 ]	895:4:31728:31777	979374	2	True				
ANR	979414	AssignmentExpression	pdc -> ccolor . paint . values [ 2 ] = pc -> paint . values [ 2 ]		979374	0		=			
ANR	979415	ArrayIndexing	pdc -> ccolor . paint . values [ 2 ]		979374	0					
ANR	979416	MemberAccess	pdc -> ccolor . paint . values		979374	0					
ANR	979417	MemberAccess	pdc -> ccolor . paint		979374	0					
ANR	979418	PtrMemberAccess	pdc -> ccolor		979374	0					
ANR	979419	Identifier	pdc		979374	0					
ANR	979420	Identifier	ccolor		979374	1					
ANR	979421	Identifier	paint		979374	1					
ANR	979422	Identifier	values		979374	1					
ANR	979423	PrimaryExpression	2		979374	1					
ANR	979424	ArrayIndexing	pc -> paint . values [ 2 ]		979374	1					
ANR	979425	MemberAccess	pc -> paint . values		979374	0					
ANR	979426	PtrMemberAccess	pc -> paint		979374	0					
ANR	979427	Identifier	pc		979374	0					
ANR	979428	Identifier	paint		979374	1					
ANR	979429	Identifier	values		979374	1					
ANR	979430	PrimaryExpression	2		979374	1					
ANR	979431	ExpressionStatement	pdc -> ccolor . paint . values [ 3 ] = pc -> paint . values [ 3 ]	896:4:31783:31832	979374	3	True				
ANR	979432	AssignmentExpression	pdc -> ccolor . paint . values [ 3 ] = pc -> paint . values [ 3 ]		979374	0		=			
ANR	979433	ArrayIndexing	pdc -> ccolor . paint . values [ 3 ]		979374	0					
ANR	979434	MemberAccess	pdc -> ccolor . paint . values		979374	0					
ANR	979435	MemberAccess	pdc -> ccolor . paint		979374	0					
ANR	979436	PtrMemberAccess	pdc -> ccolor		979374	0					
ANR	979437	Identifier	pdc		979374	0					
ANR	979438	Identifier	ccolor		979374	1					
ANR	979439	Identifier	paint		979374	1					
ANR	979440	Identifier	values		979374	1					
ANR	979441	PrimaryExpression	3		979374	1					
ANR	979442	ArrayIndexing	pc -> paint . values [ 3 ]		979374	1					
ANR	979443	MemberAccess	pc -> paint . values		979374	0					
ANR	979444	PtrMemberAccess	pc -> paint		979374	0					
ANR	979445	Identifier	pc		979374	0					
ANR	979446	Identifier	paint		979374	1					
ANR	979447	Identifier	values		979374	1					
ANR	979448	PrimaryExpression	3		979374	1					
ANR	979449	ExpressionStatement	pdc -> ccolor_valid = true	897:4:31838:31862	979374	4	True				
ANR	979450	AssignmentExpression	pdc -> ccolor_valid = true		979374	0		=			
ANR	979451	PtrMemberAccess	pdc -> ccolor_valid		979374	0					
ANR	979452	Identifier	pdc		979374	0					
ANR	979453	Identifier	ccolor_valid		979374	1					
ANR	979454	Identifier	true		979374	1					
ANR	979455	ExpressionStatement	"gx_remap_concrete_cmyk ( gx_unit_frac ( pc -> paint . values [ 0 ] ) , gx_unit_frac ( pc -> paint . values [ 1 ] ) , gx_unit_frac ( pc -> paint . values [ 2 ] ) , gx_unit_frac ( pc -> paint . values [ 3 ] ) , pdc , pgs , dev , select , pcs )"	898:4:31868:32166	979374	5	True				
ANR	979456	CallExpression	"gx_remap_concrete_cmyk ( gx_unit_frac ( pc -> paint . values [ 0 ] ) , gx_unit_frac ( pc -> paint . values [ 1 ] ) , gx_unit_frac ( pc -> paint . values [ 2 ] ) , gx_unit_frac ( pc -> paint . values [ 3 ] ) , pdc , pgs , dev , select , pcs )"		979374	0					
ANR	979457	Callee	gx_remap_concrete_cmyk		979374	0					
ANR	979458	Identifier	gx_remap_concrete_cmyk		979374	0					
ANR	979459	ArgumentList	gx_unit_frac ( pc -> paint . values [ 0 ] )		979374	1					
ANR	979460	Argument	gx_unit_frac ( pc -> paint . values [ 0 ] )		979374	0					
ANR	979461	CallExpression	gx_unit_frac ( pc -> paint . values [ 0 ] )		979374	0					
ANR	979462	Callee	gx_unit_frac		979374	0					
ANR	979463	Identifier	gx_unit_frac		979374	0					
ANR	979464	ArgumentList	pc -> paint . values [ 0 ]		979374	1					
ANR	979465	Argument	pc -> paint . values [ 0 ]		979374	0					
ANR	979466	ArrayIndexing	pc -> paint . values [ 0 ]		979374	0					
ANR	979467	MemberAccess	pc -> paint . values		979374	0					
ANR	979468	PtrMemberAccess	pc -> paint		979374	0					
ANR	979469	Identifier	pc		979374	0					
ANR	979470	Identifier	paint		979374	1					
ANR	979471	Identifier	values		979374	1					
ANR	979472	PrimaryExpression	0		979374	1					
ANR	979473	Argument	gx_unit_frac ( pc -> paint . values [ 1 ] )		979374	1					
ANR	979474	CallExpression	gx_unit_frac ( pc -> paint . values [ 1 ] )		979374	0					
ANR	979475	Callee	gx_unit_frac		979374	0					
ANR	979476	Identifier	gx_unit_frac		979374	0					
ANR	979477	ArgumentList	pc -> paint . values [ 1 ]		979374	1					
ANR	979478	Argument	pc -> paint . values [ 1 ]		979374	0					
ANR	979479	ArrayIndexing	pc -> paint . values [ 1 ]		979374	0					
ANR	979480	MemberAccess	pc -> paint . values		979374	0					
ANR	979481	PtrMemberAccess	pc -> paint		979374	0					
ANR	979482	Identifier	pc		979374	0					
ANR	979483	Identifier	paint		979374	1					
ANR	979484	Identifier	values		979374	1					
ANR	979485	PrimaryExpression	1		979374	1					
ANR	979486	Argument	gx_unit_frac ( pc -> paint . values [ 2 ] )		979374	2					
ANR	979487	CallExpression	gx_unit_frac ( pc -> paint . values [ 2 ] )		979374	0					
ANR	979488	Callee	gx_unit_frac		979374	0					
ANR	979489	Identifier	gx_unit_frac		979374	0					
ANR	979490	ArgumentList	pc -> paint . values [ 2 ]		979374	1					
ANR	979491	Argument	pc -> paint . values [ 2 ]		979374	0					
ANR	979492	ArrayIndexing	pc -> paint . values [ 2 ]		979374	0					
ANR	979493	MemberAccess	pc -> paint . values		979374	0					
ANR	979494	PtrMemberAccess	pc -> paint		979374	0					
ANR	979495	Identifier	pc		979374	0					
ANR	979496	Identifier	paint		979374	1					
ANR	979497	Identifier	values		979374	1					
ANR	979498	PrimaryExpression	2		979374	1					
ANR	979499	Argument	gx_unit_frac ( pc -> paint . values [ 3 ] )		979374	3					
ANR	979500	CallExpression	gx_unit_frac ( pc -> paint . values [ 3 ] )		979374	0					
ANR	979501	Callee	gx_unit_frac		979374	0					
ANR	979502	Identifier	gx_unit_frac		979374	0					
ANR	979503	ArgumentList	pc -> paint . values [ 3 ]		979374	1					
ANR	979504	Argument	pc -> paint . values [ 3 ]		979374	0					
ANR	979505	ArrayIndexing	pc -> paint . values [ 3 ]		979374	0					
ANR	979506	MemberAccess	pc -> paint . values		979374	0					
ANR	979507	PtrMemberAccess	pc -> paint		979374	0					
ANR	979508	Identifier	pc		979374	0					
ANR	979509	Identifier	paint		979374	1					
ANR	979510	Identifier	values		979374	1					
ANR	979511	PrimaryExpression	3		979374	1					
ANR	979512	Argument	pdc		979374	4					
ANR	979513	Identifier	pdc		979374	0					
ANR	979514	Argument	pgs		979374	5					
ANR	979515	Identifier	pgs		979374	0					
ANR	979516	Argument	dev		979374	6					
ANR	979517	Identifier	dev		979374	0					
ANR	979518	Argument	select		979374	7					
ANR	979519	Identifier	select		979374	0					
ANR	979520	Argument	pcs		979374	8					
ANR	979521	Identifier	pcs		979374	0					
ANR	979522	ReturnStatement	return 0 ;	903:4:32172:32180	979374	6	True				
ANR	979523	PrimaryExpression	0		979374	0					
ANR	979524	ReturnType	int		979374	1					
ANR	979525	Identifier	gx_remap_DeviceCMYK		979374	2					
ANR	979526	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		979374	3					
ANR	979527	Parameter	const gs_client_color * pc	887:20:31344:31369	979374	0	True				
ANR	979528	ParameterType	const gs_client_color *		979374	0					
ANR	979529	Identifier	pc		979374	1					
ANR	979530	Parameter	const gs_color_space * pcs	887:48:31372:31397	979374	1	True				
ANR	979531	ParameterType	const gs_color_space *		979374	0					
ANR	979532	Identifier	pcs		979374	1					
ANR	979533	Parameter	gx_device_color * pdc	888:8:31408:31428	979374	2	True				
ANR	979534	ParameterType	gx_device_color *		979374	0					
ANR	979535	Identifier	pdc		979374	1					
ANR	979536	Parameter	const gs_gstate * pgs	888:31:31431:31451	979374	3	True				
ANR	979537	ParameterType	const gs_gstate *		979374	0					
ANR	979538	Identifier	pgs		979374	1					
ANR	979539	Parameter	gx_device * dev	888:54:31454:31468	979374	4	True				
ANR	979540	ParameterType	gx_device *		979374	0					
ANR	979541	Identifier	dev		979374	1					
ANR	979542	Parameter	gs_color_select_t select	889:20:31491:31514	979374	5	True				
ANR	979543	ParameterType	gs_color_select_t		979374	0					
ANR	979544	Identifier	select		979374	1					
ANR	979545	CFGEntryNode	ENTRY		979374		True				
ANR	979546	CFGExitNode	EXIT		979374		True				
ANR	979547	Symbol	pcs		979374						
ANR	979548	Symbol	* pdc -> ccolor . paint		979374						
ANR	979549	Symbol	select		979374						
ANR	979550	Symbol	* * pdc		979374						
ANR	979551	Symbol	* pc -> paint		979374						
ANR	979552	Symbol	pdc -> ccolor . paint . values		979374						
ANR	979553	Symbol	pc -> paint . values		979374						
ANR	979554	Symbol	pdc		979374						
ANR	979555	Symbol	* pdc -> ccolor . paint . values		979374						
ANR	979556	Symbol	* pc -> paint . values		979374						
ANR	979557	Symbol	pc -> paint		979374						
ANR	979558	Symbol	pdc -> ccolor . paint		979374						
ANR	979559	Symbol	pdc -> ccolor_valid		979374						
ANR	979560	Symbol	pc		979374						
ANR	979561	Symbol	dev		979374						
ANR	979562	Symbol	* pdc -> ccolor		979374						
ANR	979563	Symbol	true		979374						
ANR	979564	Symbol	* pdc		979374						
ANR	979565	Symbol	* pc		979374						
ANR	979566	Symbol	gx_unit_frac		979374						
ANR	979567	Symbol	pdc -> ccolor		979374						
ANR	979568	Symbol	pgs		979374						
ANR	979569	Symbol	* * pc		979374						
ANR	979570	Function	cmap_gray_halftoned	908:0:32225:33988							
ANR	979571	FunctionDef	"cmap_gray_halftoned (frac gray , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		979570	0					
ANR	979572	CompoundStatement		911:0:32362:33988	979570	0					
ANR	979573	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	912:4:32368:32416	979570	0	True				
ANR	979574	IdentifierDecl	i		979570	0					
ANR	979575	IdentifierDeclType	uchar		979570	0					
ANR	979576	Identifier	i		979570	1					
ANR	979577	IdentifierDecl	ncomps = dev -> color_info . num_components		979570	1					
ANR	979578	IdentifierDeclType	uchar		979570	0					
ANR	979579	Identifier	ncomps		979570	1					
ANR	979580	AssignmentExpression	ncomps = dev -> color_info . num_components		979570	2		=			
ANR	979581	Identifier	ncomps		979570	0					
ANR	979582	MemberAccess	dev -> color_info . num_components		979570	1					
ANR	979583	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979584	Identifier	dev		979570	0					
ANR	979585	Identifier	color_info		979570	1					
ANR	979586	Identifier	num_components		979570	1					
ANR	979587	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	913:4:32422:32467	979570	1	True				
ANR	979588	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		979570	0					
ANR	979589	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		979570	0					
ANR	979590	Identifier	cm_comps		979570	1					
ANR	979591	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		979570	2					
ANR	979592	IdentifierDeclStatement	subclass_color_mappings scm ;	914:4:32473:32500	979570	2	True				
ANR	979593	IdentifierDecl	scm		979570	0					
ANR	979594	IdentifierDeclType	subclass_color_mappings		979570	0					
ANR	979595	Identifier	scm		979570	1					
ANR	979596	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	917:4:32540:32583	979570	3	True				
ANR	979597	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		979570	0		=			
ANR	979598	Identifier	scm		979570	0					
ANR	979599	CallExpression	get_color_mapping_procs_subclass ( dev )		979570	1					
ANR	979600	Callee	get_color_mapping_procs_subclass		979570	0					
ANR	979601	Identifier	get_color_mapping_procs_subclass		979570	0					
ANR	979602	ArgumentList	dev		979570	1					
ANR	979603	Argument	dev		979570	0					
ANR	979604	Identifier	dev		979570	0					
ANR	979605	ExpressionStatement	"map_gray_subclass ( scm , gray , cm_comps )"	918:4:32589:32627	979570	4	True				
ANR	979606	CallExpression	"map_gray_subclass ( scm , gray , cm_comps )"		979570	0					
ANR	979607	Callee	map_gray_subclass		979570	0					
ANR	979608	Identifier	map_gray_subclass		979570	0					
ANR	979609	ArgumentList	scm		979570	1					
ANR	979610	Argument	scm		979570	0					
ANR	979611	Identifier	scm		979570	0					
ANR	979612	Argument	gray		979570	1					
ANR	979613	Identifier	gray		979570	0					
ANR	979614	Argument	cm_comps		979570	2					
ANR	979615	Identifier	cm_comps		979570	0					
ANR	979616	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		979570	5					
ANR	979617	Condition	pgs -> effective_transfer_non_identity_count == 0	921:8:32704:32750	979570	0	True				
ANR	979618	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		979570	0		==			
ANR	979619	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		979570	0					
ANR	979620	Identifier	pgs		979570	0					
ANR	979621	Identifier	effective_transfer_non_identity_count		979570	1					
ANR	979622	PrimaryExpression	0		979570	1					
ANR	979623	CompoundStatement		11:57:390:390	979570	1					
ANR	979624	IfStatement	if ( dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		979570	0					
ANR	979625	Condition	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	922:12:32767:32873	979570	0	True				
ANR	979626	AndExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		979570	0		&&			
ANR	979627	EqualityExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE		979570	0		!=			
ANR	979628	MemberAccess	dev -> color_info . polarity		979570	0					
ANR	979629	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979630	Identifier	dev		979570	0					
ANR	979631	Identifier	color_info		979570	1					
ANR	979632	Identifier	polarity		979570	1					
ANR	979633	Identifier	GX_CINFO_POLARITY_ADDITIVE		979570	1					
ANR	979634	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		979570	1		==			
ANR	979635	MemberAccess	dev -> color_info . opmode		979570	0					
ANR	979636	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979637	Identifier	dev		979570	0					
ANR	979638	Identifier	color_info		979570	1					
ANR	979639	Identifier	opmode		979570	1					
ANR	979640	Identifier	GX_CINFO_OPMODE_UNKNOWN		979570	1					
ANR	979641	ExpressionStatement	check_cmyk_color_model_comps ( dev )	923:12:32888:32921	979570	1	True				
ANR	979642	CallExpression	check_cmyk_color_model_comps ( dev )		979570	0					
ANR	979643	Callee	check_cmyk_color_model_comps		979570	0					
ANR	979644	Identifier	check_cmyk_color_model_comps		979570	0					
ANR	979645	ArgumentList	dev		979570	1					
ANR	979646	Argument	dev		979570	0					
ANR	979647	Identifier	dev		979570	0					
ANR	979648	ElseStatement	else		979570	0					
ANR	979649	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		979570	0					
ANR	979650	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	924:15:32938:32991	979570	0	True				
ANR	979651	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		979570	0		==			
ANR	979652	MemberAccess	dev -> color_info . polarity		979570	0					
ANR	979653	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979654	Identifier	dev		979570	0					
ANR	979655	Identifier	color_info		979570	1					
ANR	979656	Identifier	polarity		979570	1					
ANR	979657	Identifier	GX_CINFO_POLARITY_ADDITIVE		979570	1					
ANR	979658	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		979570	1					
ANR	979659	ForInit	i = 0 ;	925:13:33007:33012	979570	0	True				
ANR	979660	AssignmentExpression	i = 0		979570	0		=			
ANR	979661	Identifier	i		979570	0					
ANR	979662	PrimaryExpression	0		979570	1					
ANR	979663	Condition	i < ncomps	925:20:33014:33023	979570	1	True				
ANR	979664	RelationalExpression	i < ncomps		979570	0		<			
ANR	979665	Identifier	i		979570	0					
ANR	979666	Identifier	ncomps		979570	1					
ANR	979667	PostIncDecOperationExpression	i ++	925:32:33026:33028	979570	2	True				
ANR	979668	Identifier	i		979570	0					
ANR	979669	IncDec	++		979570	1					
ANR	979670	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	926:12:33043:33147	979570	3	True				
ANR	979671	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		979570	0		=			
ANR	979672	ArrayIndexing	cm_comps [ i ]		979570	0					
ANR	979673	Identifier	cm_comps		979570	0					
ANR	979674	Identifier	i		979570	1					
ANR	979675	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		979570	1					
ANR	979676	Callee	gx_map_color_frac		979570	0					
ANR	979677	Identifier	gx_map_color_frac		979570	0					
ANR	979678	ArgumentList	pgs		979570	1					
ANR	979679	Argument	pgs		979570	0					
ANR	979680	Identifier	pgs		979570	0					
ANR	979681	Argument	cm_comps [ i ]		979570	1					
ANR	979682	ArrayIndexing	cm_comps [ i ]		979570	0					
ANR	979683	Identifier	cm_comps		979570	0					
ANR	979684	Identifier	i		979570	1					
ANR	979685	Argument	effective_transfer [ i ]		979570	2					
ANR	979686	ArrayIndexing	effective_transfer [ i ]		979570	0					
ANR	979687	Identifier	effective_transfer		979570	0					
ANR	979688	Identifier	i		979570	1					
ANR	979689	ElseStatement	else		979570	0					
ANR	979690	CompoundStatement		18:9:795:795	979570	0					
ANR	979691	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		979570	0					
ANR	979692	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	929:12:33172:33220	979570	0	True				
ANR	979693	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		979570	0		==			
ANR	979694	MemberAccess	dev -> color_info . opmode		979570	0					
ANR	979695	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979696	Identifier	dev		979570	0					
ANR	979697	Identifier	color_info		979570	1					
ANR	979698	Identifier	opmode		979570	1					
ANR	979699	Identifier	GX_CINFO_OPMODE_UNKNOWN		979570	1					
ANR	979700	ExpressionStatement	check_cmyk_color_model_comps ( dev )	930:12:33235:33268	979570	1	True				
ANR	979701	CallExpression	check_cmyk_color_model_comps ( dev )		979570	0					
ANR	979702	Callee	check_cmyk_color_model_comps		979570	0					
ANR	979703	Identifier	check_cmyk_color_model_comps		979570	0					
ANR	979704	ArgumentList	dev		979570	1					
ANR	979705	Argument	dev		979570	0					
ANR	979706	Identifier	dev		979570	0					
ANR	979707	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE )		979570	1					
ANR	979708	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE	931:12:33282:33322	979570	0	True				
ANR	979709	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE		979570	0		==			
ANR	979710	MemberAccess	dev -> color_info . opmode		979570	0					
ANR	979711	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979712	Identifier	dev		979570	0					
ANR	979713	Identifier	color_info		979570	1					
ANR	979714	Identifier	opmode		979570	1					
ANR	979715	Identifier	GX_CINFO_OPMODE		979570	1					
ANR	979716	CompoundStatement		21:55:962:962	979570	1					
ANR	979717	ExpressionStatement	i = dev -> color_info . black_component	932:12:33368:33403	979570	0	True				
ANR	979718	AssignmentExpression	i = dev -> color_info . black_component		979570	0		=			
ANR	979719	Identifier	i		979570	0					
ANR	979720	MemberAccess	dev -> color_info . black_component		979570	1					
ANR	979721	PtrMemberAccess	dev -> color_info		979570	0					
ANR	979722	Identifier	dev		979570	0					
ANR	979723	Identifier	color_info		979570	1					
ANR	979724	Identifier	black_component		979570	1					
ANR	979725	IfStatement	if ( i < ncomps )		979570	1					
ANR	979726	Condition	i < ncomps	933:16:33421:33430	979570	0	True				
ANR	979727	RelationalExpression	i < ncomps		979570	0		<			
ANR	979728	Identifier	i		979570	0					
ANR	979729	Identifier	ncomps		979570	1					
ANR	979730	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	934:16:33449:33571	979570	1	True				
ANR	979731	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979570	0		=			
ANR	979732	ArrayIndexing	cm_comps [ i ]		979570	0					
ANR	979733	Identifier	cm_comps		979570	0					
ANR	979734	Identifier	i		979570	1					
ANR	979735	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979570	1		-			
ANR	979736	Identifier	frac_1		979570	0					
ANR	979737	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979570	1					
ANR	979738	Callee	gx_map_color_frac		979570	0					
ANR	979739	Identifier	gx_map_color_frac		979570	0					
ANR	979740	ArgumentList	pgs		979570	1					
ANR	979741	Argument	pgs		979570	0					
ANR	979742	Identifier	pgs		979570	0					
ANR	979743	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		979570	1					
ANR	979744	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		979570	0					
ANR	979745	CastTarget	frac		979570	0					
ANR	979746	AdditiveExpression	frac_1 - cm_comps [ i ]		979570	1		-			
ANR	979747	Identifier	frac_1		979570	0					
ANR	979748	ArrayIndexing	cm_comps [ i ]		979570	1					
ANR	979749	Identifier	cm_comps		979570	0					
ANR	979750	Identifier	i		979570	1					
ANR	979751	Argument	effective_transfer [ i ]		979570	2					
ANR	979752	ArrayIndexing	effective_transfer [ i ]		979570	0					
ANR	979753	Identifier	effective_transfer		979570	0					
ANR	979754	Identifier	i		979570	1					
ANR	979755	ElseStatement	else		979570	0					
ANR	979756	CompoundStatement		26:15:1225:1225	979570	0					
ANR	979757	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		979570	0					
ANR	979758	ForInit	i = 0 ;	937:17:33607:33612	979570	0	True				
ANR	979759	AssignmentExpression	i = 0		979570	0		=			
ANR	979760	Identifier	i		979570	0					
ANR	979761	PrimaryExpression	0		979570	1					
ANR	979762	Condition	i < ncomps	937:24:33614:33623	979570	1	True				
ANR	979763	RelationalExpression	i < ncomps		979570	0		<			
ANR	979764	Identifier	i		979570	0					
ANR	979765	Identifier	ncomps		979570	1					
ANR	979766	PostIncDecOperationExpression	i ++	937:36:33626:33628	979570	2	True				
ANR	979767	Identifier	i		979570	0					
ANR	979768	IncDec	++		979570	1					
ANR	979769	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	938:20:33651:33777	979570	3	True				
ANR	979770	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979570	0		=			
ANR	979771	ArrayIndexing	cm_comps [ i ]		979570	0					
ANR	979772	Identifier	cm_comps		979570	0					
ANR	979773	Identifier	i		979570	1					
ANR	979774	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979570	1		-			
ANR	979775	Identifier	frac_1		979570	0					
ANR	979776	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979570	1					
ANR	979777	Callee	gx_map_color_frac		979570	0					
ANR	979778	Identifier	gx_map_color_frac		979570	0					
ANR	979779	ArgumentList	pgs		979570	1					
ANR	979780	Argument	pgs		979570	0					
ANR	979781	Identifier	pgs		979570	0					
ANR	979782	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		979570	1					
ANR	979783	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		979570	0					
ANR	979784	CastTarget	frac		979570	0					
ANR	979785	AdditiveExpression	frac_1 - cm_comps [ i ]		979570	1		-			
ANR	979786	Identifier	frac_1		979570	0					
ANR	979787	ArrayIndexing	cm_comps [ i ]		979570	1					
ANR	979788	Identifier	cm_comps		979570	0					
ANR	979789	Identifier	i		979570	1					
ANR	979790	Argument	effective_transfer [ i ]		979570	2					
ANR	979791	ArrayIndexing	effective_transfer [ i ]		979570	0					
ANR	979792	Identifier	effective_transfer		979570	0					
ANR	979793	Identifier	i		979570	1					
ANR	979794	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		979570	6					
ANR	979795	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	942:8:33803:33932	979570	0	True				
ANR	979796	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		979570	0		==			
ANR	979797	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		979570	0					
ANR	979798	Callee	gx_render_device_DeviceN		979570	0					
ANR	979799	Identifier	gx_render_device_DeviceN		979570	0					
ANR	979800	ArgumentList	cm_comps		979570	1					
ANR	979801	Argument	cm_comps		979570	0					
ANR	979802	Identifier	cm_comps		979570	0					
ANR	979803	Argument	pdc		979570	1					
ANR	979804	Identifier	pdc		979570	0					
ANR	979805	Argument	dev		979570	2					
ANR	979806	Identifier	dev		979570	0					
ANR	979807	Argument	pgs -> dev_ht		979570	3					
ANR	979808	PtrMemberAccess	pgs -> dev_ht		979570	0					
ANR	979809	Identifier	pgs		979570	0					
ANR	979810	Identifier	dev_ht		979570	1					
ANR	979811	Argument	& pgs -> screen_phase [ select ]		979570	4					
ANR	979812	UnaryOperationExpression	& pgs -> screen_phase [ select ]		979570	0					
ANR	979813	UnaryOperator	&		979570	0					
ANR	979814	ArrayIndexing	pgs -> screen_phase [ select ]		979570	1					
ANR	979815	PtrMemberAccess	pgs -> screen_phase		979570	0					
ANR	979816	Identifier	pgs		979570	0					
ANR	979817	Identifier	screen_phase		979570	1					
ANR	979818	Identifier	select		979570	1					
ANR	979819	PrimaryExpression	1		979570	1					
ANR	979820	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	944:8:33943:33986	979570	1	True				
ANR	979821	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		979570	0					
ANR	979822	Callee	gx_color_load_select		979570	0					
ANR	979823	Identifier	gx_color_load_select		979570	0					
ANR	979824	ArgumentList	pdc		979570	1					
ANR	979825	Argument	pdc		979570	0					
ANR	979826	Identifier	pdc		979570	0					
ANR	979827	Argument	pgs		979570	1					
ANR	979828	Identifier	pgs		979570	0					
ANR	979829	Argument	dev		979570	2					
ANR	979830	Identifier	dev		979570	0					
ANR	979831	Argument	select		979570	3					
ANR	979832	Identifier	select		979570	0					
ANR	979833	ReturnType	static void		979570	1					
ANR	979834	Identifier	cmap_gray_halftoned		979570	2					
ANR	979835	ParameterList	"frac gray , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		979570	3					
ANR	979836	Parameter	frac gray	909:20:32257:32265	979570	0	True				
ANR	979837	ParameterType	frac		979570	0					
ANR	979838	Identifier	gray		979570	1					
ANR	979839	Parameter	gx_device_color * pdc	909:31:32268:32288	979570	1	True				
ANR	979840	ParameterType	gx_device_color *		979570	0					
ANR	979841	Identifier	pdc		979570	1					
ANR	979842	Parameter	const gs_gstate * pgs	910:5:32296:32316	979570	2	True				
ANR	979843	ParameterType	const gs_gstate *		979570	0					
ANR	979844	Identifier	pgs		979570	1					
ANR	979845	Parameter	gx_device * dev	910:28:32319:32333	979570	3	True				
ANR	979846	ParameterType	gx_device *		979570	0					
ANR	979847	Identifier	dev		979570	1					
ANR	979848	Parameter	gs_color_select_t select	910:45:32336:32359	979570	4	True				
ANR	979849	ParameterType	gs_color_select_t		979570	0					
ANR	979850	Identifier	select		979570	1					
ANR	979851	CFGEntryNode	ENTRY		979570		True				
ANR	979852	CFGExitNode	EXIT		979570		True				
ANR	979853	Symbol	* dev		979570						
ANR	979854	Symbol	select		979570						
ANR	979855	Symbol	* pgs		979570						
ANR	979856	Symbol	ncomps		979570						
ANR	979857	Symbol	dev -> color_info		979570						
ANR	979858	Symbol	GX_CINFO_POLARITY_ADDITIVE		979570						
ANR	979859	Symbol	effective_transfer		979570						
ANR	979860	Symbol	gx_render_device_DeviceN		979570						
ANR	979861	Symbol	* effective_transfer		979570						
ANR	979862	Symbol	gray		979570						
ANR	979863	Symbol	dev		979570						
ANR	979864	Symbol	get_color_mapping_procs_subclass		979570						
ANR	979865	Symbol	dev -> color_info . polarity		979570						
ANR	979866	Symbol	dev -> color_info . opmode		979570						
ANR	979867	Symbol	scm		979570						
ANR	979868	Symbol	* cm_comps		979570						
ANR	979869	Symbol	pgs		979570						
ANR	979870	Symbol	frac_1		979570						
ANR	979871	Symbol	dev -> color_info . num_components		979570						
ANR	979872	Symbol	i		979570						
ANR	979873	Symbol	GX_CINFO_OPMODE		979570						
ANR	979874	Symbol	pgs -> screen_phase		979570						
ANR	979875	Symbol	pdc		979570						
ANR	979876	Symbol	dev -> color_info . black_component		979570						
ANR	979877	Symbol	cm_comps		979570						
ANR	979878	Symbol	gx_map_color_frac		979570						
ANR	979879	Symbol	* i		979570						
ANR	979880	Symbol	pgs -> effective_transfer_non_identity_count		979570						
ANR	979881	Symbol	GX_CINFO_OPMODE_UNKNOWN		979570						
ANR	979882	Symbol	pgs -> dev_ht		979570						
ANR	979883	Function	cmap_gray_direct	947:0:33991:36382							
ANR	979884	FunctionDef	"cmap_gray_direct (frac gray , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		979883	0					
ANR	979885	CompoundStatement		950:0:34137:36382	979883	0					
ANR	979886	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	951:4:34143:34191	979883	0	True				
ANR	979887	IdentifierDecl	i		979883	0					
ANR	979888	IdentifierDeclType	uchar		979883	0					
ANR	979889	Identifier	i		979883	1					
ANR	979890	IdentifierDecl	ncomps = dev -> color_info . num_components		979883	1					
ANR	979891	IdentifierDeclType	uchar		979883	0					
ANR	979892	Identifier	ncomps		979883	1					
ANR	979893	AssignmentExpression	ncomps = dev -> color_info . num_components		979883	2		=			
ANR	979894	Identifier	ncomps		979883	0					
ANR	979895	MemberAccess	dev -> color_info . num_components		979883	1					
ANR	979896	PtrMemberAccess	dev -> color_info		979883	0					
ANR	979897	Identifier	dev		979883	0					
ANR	979898	Identifier	color_info		979883	1					
ANR	979899	Identifier	num_components		979883	1					
ANR	979900	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	952:4:34197:34242	979883	1	True				
ANR	979901	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		979883	0					
ANR	979902	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		979883	0					
ANR	979903	Identifier	cm_comps		979883	1					
ANR	979904	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		979883	2					
ANR	979905	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	953:4:34248:34297	979883	2	True				
ANR	979906	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		979883	0					
ANR	979907	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		979883	0					
ANR	979908	Identifier	cv		979883	1					
ANR	979909	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		979883	2					
ANR	979910	IdentifierDeclStatement	gx_color_index color ;	954:4:34303:34323	979883	3	True				
ANR	979911	IdentifierDecl	color		979883	0					
ANR	979912	IdentifierDeclType	gx_color_index		979883	0					
ANR	979913	Identifier	color		979883	1					
ANR	979914	IdentifierDeclStatement	subclass_color_mappings scm ;	955:4:34329:34356	979883	4	True				
ANR	979915	IdentifierDecl	scm		979883	0					
ANR	979916	IdentifierDeclType	subclass_color_mappings		979883	0					
ANR	979917	Identifier	scm		979883	1					
ANR	979918	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	958:4:34396:34439	979883	5	True				
ANR	979919	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		979883	0		=			
ANR	979920	Identifier	scm		979883	0					
ANR	979921	CallExpression	get_color_mapping_procs_subclass ( dev )		979883	1					
ANR	979922	Callee	get_color_mapping_procs_subclass		979883	0					
ANR	979923	Identifier	get_color_mapping_procs_subclass		979883	0					
ANR	979924	ArgumentList	dev		979883	1					
ANR	979925	Argument	dev		979883	0					
ANR	979926	Identifier	dev		979883	0					
ANR	979927	ExpressionStatement	"map_gray_subclass ( scm , gray , cm_comps )"	959:4:34445:34483	979883	6	True				
ANR	979928	CallExpression	"map_gray_subclass ( scm , gray , cm_comps )"		979883	0					
ANR	979929	Callee	map_gray_subclass		979883	0					
ANR	979930	Identifier	map_gray_subclass		979883	0					
ANR	979931	ArgumentList	scm		979883	1					
ANR	979932	Argument	scm		979883	0					
ANR	979933	Identifier	scm		979883	0					
ANR	979934	Argument	gray		979883	1					
ANR	979935	Identifier	gray		979883	0					
ANR	979936	Argument	cm_comps		979883	2					
ANR	979937	Identifier	cm_comps		979883	0					
ANR	979938	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		979883	7					
ANR	979939	Condition	pgs -> effective_transfer_non_identity_count == 0	962:8:34560:34606	979883	0	True				
ANR	979940	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		979883	0		==			
ANR	979941	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		979883	0					
ANR	979942	Identifier	pgs		979883	0					
ANR	979943	Identifier	effective_transfer_non_identity_count		979883	1					
ANR	979944	PrimaryExpression	0		979883	1					
ANR	979945	CompoundStatement		13:57:471:471	979883	1					
ANR	979946	IfStatement	if ( dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		979883	0					
ANR	979947	Condition	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	963:12:34623:34729	979883	0	True				
ANR	979948	AndExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		979883	0		&&			
ANR	979949	EqualityExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE		979883	0		!=			
ANR	979950	MemberAccess	dev -> color_info . polarity		979883	0					
ANR	979951	PtrMemberAccess	dev -> color_info		979883	0					
ANR	979952	Identifier	dev		979883	0					
ANR	979953	Identifier	color_info		979883	1					
ANR	979954	Identifier	polarity		979883	1					
ANR	979955	Identifier	GX_CINFO_POLARITY_ADDITIVE		979883	1					
ANR	979956	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		979883	1		==			
ANR	979957	MemberAccess	dev -> color_info . opmode		979883	0					
ANR	979958	PtrMemberAccess	dev -> color_info		979883	0					
ANR	979959	Identifier	dev		979883	0					
ANR	979960	Identifier	color_info		979883	1					
ANR	979961	Identifier	opmode		979883	1					
ANR	979962	Identifier	GX_CINFO_OPMODE_UNKNOWN		979883	1					
ANR	979963	ExpressionStatement	check_cmyk_color_model_comps ( dev )	964:16:34748:34781	979883	1	True				
ANR	979964	CallExpression	check_cmyk_color_model_comps ( dev )		979883	0					
ANR	979965	Callee	check_cmyk_color_model_comps		979883	0					
ANR	979966	Identifier	check_cmyk_color_model_comps		979883	0					
ANR	979967	ArgumentList	dev		979883	1					
ANR	979968	Argument	dev		979883	0					
ANR	979969	Identifier	dev		979883	0					
ANR	979970	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		979883	1					
ANR	979971	ForInit	i = 0 ;	965:13:34796:34801	979883	0	True				
ANR	979972	AssignmentExpression	i = 0		979883	0		=			
ANR	979973	Identifier	i		979883	0					
ANR	979974	PrimaryExpression	0		979883	1					
ANR	979975	Condition	i < ncomps	965:20:34803:34812	979883	1	True				
ANR	979976	RelationalExpression	i < ncomps		979883	0		<			
ANR	979977	Identifier	i		979883	0					
ANR	979978	Identifier	ncomps		979883	1					
ANR	979979	PostIncDecOperationExpression	i ++	965:32:34815:34817	979883	2	True				
ANR	979980	Identifier	i		979883	0					
ANR	979981	IncDec	++		979883	1					
ANR	979982	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	966:12:34832:34860	979883	3	True				
ANR	979983	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		979883	0		=			
ANR	979984	ArrayIndexing	cv [ i ]		979883	0					
ANR	979985	Identifier	cv		979883	0					
ANR	979986	Identifier	i		979883	1					
ANR	979987	CallExpression	frac2cv ( cm_comps [ i ] )		979883	1					
ANR	979988	Callee	frac2cv		979883	0					
ANR	979989	Identifier	frac2cv		979883	0					
ANR	979990	ArgumentList	cm_comps [ i ]		979883	1					
ANR	979991	Argument	cm_comps [ i ]		979883	0					
ANR	979992	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	979993	Identifier	cm_comps		979883	0					
ANR	979994	Identifier	i		979883	1					
ANR	979995	ElseStatement	else		979883	0					
ANR	979996	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		979883	0					
ANR	979997	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	967:15:34877:34930	979883	0	True				
ANR	979998	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		979883	0		==			
ANR	979999	MemberAccess	dev -> color_info . polarity		979883	0					
ANR	980000	PtrMemberAccess	dev -> color_info		979883	0					
ANR	980001	Identifier	dev		979883	0					
ANR	980002	Identifier	color_info		979883	1					
ANR	980003	Identifier	polarity		979883	1					
ANR	980004	Identifier	GX_CINFO_POLARITY_ADDITIVE		979883	1					
ANR	980005	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		979883	1					
ANR	980006	ForInit	i = 0 ;	968:13:34946:34951	979883	0	True				
ANR	980007	AssignmentExpression	i = 0		979883	0		=			
ANR	980008	Identifier	i		979883	0					
ANR	980009	PrimaryExpression	0		979883	1					
ANR	980010	Condition	i < ncomps	968:20:34953:34962	979883	1	True				
ANR	980011	RelationalExpression	i < ncomps		979883	0		<			
ANR	980012	Identifier	i		979883	0					
ANR	980013	Identifier	ncomps		979883	1					
ANR	980014	PostIncDecOperationExpression	i ++	968:32:34965:34967	979883	2	True				
ANR	980015	Identifier	i		979883	0					
ANR	980016	IncDec	++		979883	1					
ANR	980017	CompoundStatement		19:37:832:832	979883	3					
ANR	980018	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	969:12:34984:35088	979883	0	True				
ANR	980019	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		979883	0		=			
ANR	980020	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980021	Identifier	cm_comps		979883	0					
ANR	980022	Identifier	i		979883	1					
ANR	980023	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		979883	1					
ANR	980024	Callee	gx_map_color_frac		979883	0					
ANR	980025	Identifier	gx_map_color_frac		979883	0					
ANR	980026	ArgumentList	pgs		979883	1					
ANR	980027	Argument	pgs		979883	0					
ANR	980028	Identifier	pgs		979883	0					
ANR	980029	Argument	cm_comps [ i ]		979883	1					
ANR	980030	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980031	Identifier	cm_comps		979883	0					
ANR	980032	Identifier	i		979883	1					
ANR	980033	Argument	effective_transfer [ i ]		979883	2					
ANR	980034	ArrayIndexing	effective_transfer [ i ]		979883	0					
ANR	980035	Identifier	effective_transfer		979883	0					
ANR	980036	Identifier	i		979883	1					
ANR	980037	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	971:12:35102:35130	979883	1	True				
ANR	980038	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		979883	0		=			
ANR	980039	ArrayIndexing	cv [ i ]		979883	0					
ANR	980040	Identifier	cv		979883	0					
ANR	980041	Identifier	i		979883	1					
ANR	980042	CallExpression	frac2cv ( cm_comps [ i ] )		979883	1					
ANR	980043	Callee	frac2cv		979883	0					
ANR	980044	Identifier	frac2cv		979883	0					
ANR	980045	ArgumentList	cm_comps [ i ]		979883	1					
ANR	980046	Argument	cm_comps [ i ]		979883	0					
ANR	980047	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980048	Identifier	cm_comps		979883	0					
ANR	980049	Identifier	i		979883	1					
ANR	980050	ElseStatement	else		979883	0					
ANR	980051	CompoundStatement		24:9:1013:1013	979883	0					
ANR	980052	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		979883	0					
ANR	980053	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	974:12:35165:35213	979883	0	True				
ANR	980054	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		979883	0		==			
ANR	980055	MemberAccess	dev -> color_info . opmode		979883	0					
ANR	980056	PtrMemberAccess	dev -> color_info		979883	0					
ANR	980057	Identifier	dev		979883	0					
ANR	980058	Identifier	color_info		979883	1					
ANR	980059	Identifier	opmode		979883	1					
ANR	980060	Identifier	GX_CINFO_OPMODE_UNKNOWN		979883	1					
ANR	980061	ExpressionStatement	check_cmyk_color_model_comps ( dev )	975:12:35228:35261	979883	1	True				
ANR	980062	CallExpression	check_cmyk_color_model_comps ( dev )		979883	0					
ANR	980063	Callee	check_cmyk_color_model_comps		979883	0					
ANR	980064	Identifier	check_cmyk_color_model_comps		979883	0					
ANR	980065	ArgumentList	dev		979883	1					
ANR	980066	Argument	dev		979883	0					
ANR	980067	Identifier	dev		979883	0					
ANR	980068	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE )		979883	1					
ANR	980069	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE	976:12:35275:35315	979883	0	True				
ANR	980070	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE		979883	0		==			
ANR	980071	MemberAccess	dev -> color_info . opmode		979883	0					
ANR	980072	PtrMemberAccess	dev -> color_info		979883	0					
ANR	980073	Identifier	dev		979883	0					
ANR	980074	Identifier	color_info		979883	1					
ANR	980075	Identifier	opmode		979883	1					
ANR	980076	Identifier	GX_CINFO_OPMODE		979883	1					
ANR	980077	CompoundStatement		27:55:1180:1180	979883	1					
ANR	980078	ExpressionStatement	i = dev -> color_info . black_component	977:12:35361:35396	979883	0	True				
ANR	980079	AssignmentExpression	i = dev -> color_info . black_component		979883	0		=			
ANR	980080	Identifier	i		979883	0					
ANR	980081	MemberAccess	dev -> color_info . black_component		979883	1					
ANR	980082	PtrMemberAccess	dev -> color_info		979883	0					
ANR	980083	Identifier	dev		979883	0					
ANR	980084	Identifier	color_info		979883	1					
ANR	980085	Identifier	black_component		979883	1					
ANR	980086	IfStatement	if ( i < ncomps )		979883	1					
ANR	980087	Condition	i < ncomps	978:16:35414:35423	979883	0	True				
ANR	980088	RelationalExpression	i < ncomps		979883	0		<			
ANR	980089	Identifier	i		979883	0					
ANR	980090	Identifier	ncomps		979883	1					
ANR	980091	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	979:16:35442:35564	979883	1	True				
ANR	980092	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979883	0		=			
ANR	980093	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980094	Identifier	cm_comps		979883	0					
ANR	980095	Identifier	i		979883	1					
ANR	980096	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979883	1		-			
ANR	980097	Identifier	frac_1		979883	0					
ANR	980098	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979883	1					
ANR	980099	Callee	gx_map_color_frac		979883	0					
ANR	980100	Identifier	gx_map_color_frac		979883	0					
ANR	980101	ArgumentList	pgs		979883	1					
ANR	980102	Argument	pgs		979883	0					
ANR	980103	Identifier	pgs		979883	0					
ANR	980104	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		979883	1					
ANR	980105	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		979883	0					
ANR	980106	CastTarget	frac		979883	0					
ANR	980107	AdditiveExpression	frac_1 - cm_comps [ i ]		979883	1		-			
ANR	980108	Identifier	frac_1		979883	0					
ANR	980109	ArrayIndexing	cm_comps [ i ]		979883	1					
ANR	980110	Identifier	cm_comps		979883	0					
ANR	980111	Identifier	i		979883	1					
ANR	980112	Argument	effective_transfer [ i ]		979883	2					
ANR	980113	ArrayIndexing	effective_transfer [ i ]		979883	0					
ANR	980114	Identifier	effective_transfer		979883	0					
ANR	980115	Identifier	i		979883	1					
ANR	980116	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		979883	2					
ANR	980117	ForInit	i = 0 ;	981:17:35583:35588	979883	0	True				
ANR	980118	AssignmentExpression	i = 0		979883	0		=			
ANR	980119	Identifier	i		979883	0					
ANR	980120	PrimaryExpression	0		979883	1					
ANR	980121	Condition	i < ncomps	981:24:35590:35599	979883	1	True				
ANR	980122	RelationalExpression	i < ncomps		979883	0		<			
ANR	980123	Identifier	i		979883	0					
ANR	980124	Identifier	ncomps		979883	1					
ANR	980125	PostIncDecOperationExpression	i ++	981:36:35602:35604	979883	2	True				
ANR	980126	Identifier	i		979883	0					
ANR	980127	IncDec	++		979883	1					
ANR	980128	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	982:16:35623:35651	979883	3	True				
ANR	980129	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		979883	0		=			
ANR	980130	ArrayIndexing	cv [ i ]		979883	0					
ANR	980131	Identifier	cv		979883	0					
ANR	980132	Identifier	i		979883	1					
ANR	980133	CallExpression	frac2cv ( cm_comps [ i ] )		979883	1					
ANR	980134	Callee	frac2cv		979883	0					
ANR	980135	Identifier	frac2cv		979883	0					
ANR	980136	ArgumentList	cm_comps [ i ]		979883	1					
ANR	980137	Argument	cm_comps [ i ]		979883	0					
ANR	980138	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980139	Identifier	cm_comps		979883	0					
ANR	980140	Identifier	i		979883	1					
ANR	980141	ElseStatement	else		979883	0					
ANR	980142	CompoundStatement		34:15:1530:1530	979883	0					
ANR	980143	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		979883	0					
ANR	980144	ForInit	i = 0 ;	984:17:35687:35692	979883	0	True				
ANR	980145	AssignmentExpression	i = 0		979883	0		=			
ANR	980146	Identifier	i		979883	0					
ANR	980147	PrimaryExpression	0		979883	1					
ANR	980148	Condition	i < ncomps	984:24:35694:35703	979883	1	True				
ANR	980149	RelationalExpression	i < ncomps		979883	0		<			
ANR	980150	Identifier	i		979883	0					
ANR	980151	Identifier	ncomps		979883	1					
ANR	980152	PostIncDecOperationExpression	i ++	984:36:35706:35708	979883	2	True				
ANR	980153	Identifier	i		979883	0					
ANR	980154	IncDec	++		979883	1					
ANR	980155	CompoundStatement		35:41:1573:1573	979883	3					
ANR	980156	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	985:16:35729:35855	979883	0	True				
ANR	980157	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979883	0		=			
ANR	980158	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980159	Identifier	cm_comps		979883	0					
ANR	980160	Identifier	i		979883	1					
ANR	980161	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979883	1		-			
ANR	980162	Identifier	frac_1		979883	0					
ANR	980163	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		979883	1					
ANR	980164	Callee	gx_map_color_frac		979883	0					
ANR	980165	Identifier	gx_map_color_frac		979883	0					
ANR	980166	ArgumentList	pgs		979883	1					
ANR	980167	Argument	pgs		979883	0					
ANR	980168	Identifier	pgs		979883	0					
ANR	980169	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		979883	1					
ANR	980170	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		979883	0					
ANR	980171	CastTarget	frac		979883	0					
ANR	980172	AdditiveExpression	frac_1 - cm_comps [ i ]		979883	1		-			
ANR	980173	Identifier	frac_1		979883	0					
ANR	980174	ArrayIndexing	cm_comps [ i ]		979883	1					
ANR	980175	Identifier	cm_comps		979883	0					
ANR	980176	Identifier	i		979883	1					
ANR	980177	Argument	effective_transfer [ i ]		979883	2					
ANR	980178	ArrayIndexing	effective_transfer [ i ]		979883	0					
ANR	980179	Identifier	effective_transfer		979883	0					
ANR	980180	Identifier	i		979883	1					
ANR	980181	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	987:16:35873:35901	979883	1	True				
ANR	980182	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		979883	0		=			
ANR	980183	ArrayIndexing	cv [ i ]		979883	0					
ANR	980184	Identifier	cv		979883	0					
ANR	980185	Identifier	i		979883	1					
ANR	980186	CallExpression	frac2cv ( cm_comps [ i ] )		979883	1					
ANR	980187	Callee	frac2cv		979883	0					
ANR	980188	Identifier	frac2cv		979883	0					
ANR	980189	ArgumentList	cm_comps [ i ]		979883	1					
ANR	980190	Argument	cm_comps [ i ]		979883	0					
ANR	980191	ArrayIndexing	cm_comps [ i ]		979883	0					
ANR	980192	Identifier	cm_comps		979883	0					
ANR	980193	Identifier	i		979883	1					
ANR	980194	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , cv )"	992:4:35971:36015	979883	8	True				
ANR	980195	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , cv )"		979883	0		=			
ANR	980196	Identifier	color		979883	0					
ANR	980197	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		979883	1					
ANR	980198	Callee	"dev_proc ( dev , encode_color )"		979883	0					
ANR	980199	CallExpression	"dev_proc ( dev , encode_color )"		979883	0					
ANR	980200	Callee	dev_proc		979883	0					
ANR	980201	Identifier	dev_proc		979883	0					
ANR	980202	ArgumentList	dev		979883	1					
ANR	980203	Argument	dev		979883	0					
ANR	980204	Identifier	dev		979883	0					
ANR	980205	Argument	encode_color		979883	1					
ANR	980206	Identifier	encode_color		979883	0					
ANR	980207	ArgumentList	dev		979883	1					
ANR	980208	Argument	dev		979883	0					
ANR	980209	Identifier	dev		979883	0					
ANR	980210	Argument	cv		979883	1					
ANR	980211	Identifier	cv		979883	0					
ANR	980212	IfStatement	if ( color != gx_no_color_index )		979883	9					
ANR	980213	Condition	color != gx_no_color_index	995:8:36101:36126	979883	0	True				
ANR	980214	EqualityExpression	color != gx_no_color_index		979883	0		!=			
ANR	980215	Identifier	color		979883	0					
ANR	980216	Identifier	gx_no_color_index		979883	1					
ANR	980217	CompoundStatement		46:36:1991:1991	979883	1					
ANR	980218	ExpressionStatement	"color_set_pure ( pdc , color )"	996:8:36139:36165	979883	0	True				
ANR	980219	CallExpression	"color_set_pure ( pdc , color )"		979883	0					
ANR	980220	Callee	color_set_pure		979883	0					
ANR	980221	Identifier	color_set_pure		979883	0					
ANR	980222	ArgumentList	pdc		979883	1					
ANR	980223	Argument	pdc		979883	0					
ANR	980224	Identifier	pdc		979883	0					
ANR	980225	Argument	color		979883	1					
ANR	980226	Identifier	color		979883	0					
ANR	980227	ReturnStatement	return ;	997:8:36175:36181	979883	1	True				
ANR	980228	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		979883	10					
ANR	980229	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	999:8:36197:36326	979883	0	True				
ANR	980230	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		979883	0		==			
ANR	980231	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		979883	0					
ANR	980232	Callee	gx_render_device_DeviceN		979883	0					
ANR	980233	Identifier	gx_render_device_DeviceN		979883	0					
ANR	980234	ArgumentList	cm_comps		979883	1					
ANR	980235	Argument	cm_comps		979883	0					
ANR	980236	Identifier	cm_comps		979883	0					
ANR	980237	Argument	pdc		979883	1					
ANR	980238	Identifier	pdc		979883	0					
ANR	980239	Argument	dev		979883	2					
ANR	980240	Identifier	dev		979883	0					
ANR	980241	Argument	pgs -> dev_ht		979883	3					
ANR	980242	PtrMemberAccess	pgs -> dev_ht		979883	0					
ANR	980243	Identifier	pgs		979883	0					
ANR	980244	Identifier	dev_ht		979883	1					
ANR	980245	Argument	& pgs -> screen_phase [ select ]		979883	4					
ANR	980246	UnaryOperationExpression	& pgs -> screen_phase [ select ]		979883	0					
ANR	980247	UnaryOperator	&		979883	0					
ANR	980248	ArrayIndexing	pgs -> screen_phase [ select ]		979883	1					
ANR	980249	PtrMemberAccess	pgs -> screen_phase		979883	0					
ANR	980250	Identifier	pgs		979883	0					
ANR	980251	Identifier	screen_phase		979883	1					
ANR	980252	Identifier	select		979883	1					
ANR	980253	PrimaryExpression	1		979883	1					
ANR	980254	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1001:8:36337:36380	979883	1	True				
ANR	980255	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		979883	0					
ANR	980256	Callee	gx_color_load_select		979883	0					
ANR	980257	Identifier	gx_color_load_select		979883	0					
ANR	980258	ArgumentList	pdc		979883	1					
ANR	980259	Argument	pdc		979883	0					
ANR	980260	Identifier	pdc		979883	0					
ANR	980261	Argument	pgs		979883	1					
ANR	980262	Identifier	pgs		979883	0					
ANR	980263	Argument	dev		979883	2					
ANR	980264	Identifier	dev		979883	0					
ANR	980265	Argument	select		979883	3					
ANR	980266	Identifier	select		979883	0					
ANR	980267	ReturnType	static void		979883	1					
ANR	980268	Identifier	cmap_gray_direct		979883	2					
ANR	980269	ParameterList	"frac gray , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		979883	3					
ANR	980270	Parameter	frac gray	948:17:34020:34028	979883	0	True				
ANR	980271	ParameterType	frac		979883	0					
ANR	980272	Identifier	gray		979883	1					
ANR	980273	Parameter	gx_device_color * pdc	948:28:34031:34051	979883	1	True				
ANR	980274	ParameterType	gx_device_color *		979883	0					
ANR	980275	Identifier	pdc		979883	1					
ANR	980276	Parameter	const gs_gstate * pgs	948:51:34054:34074	979883	2	True				
ANR	980277	ParameterType	const gs_gstate *		979883	0					
ANR	980278	Identifier	pgs		979883	1					
ANR	980279	Parameter	gx_device * dev	949:17:34094:34108	979883	3	True				
ANR	980280	ParameterType	gx_device *		979883	0					
ANR	980281	Identifier	dev		979883	1					
ANR	980282	Parameter	gs_color_select_t select	949:34:34111:34134	979883	4	True				
ANR	980283	ParameterType	gs_color_select_t		979883	0					
ANR	980284	Identifier	select		979883	1					
ANR	980285	CFGEntryNode	ENTRY		979883		True				
ANR	980286	CFGExitNode	EXIT		979883		True				
ANR	980287	Symbol	* dev		979883						
ANR	980288	Symbol	select		979883						
ANR	980289	Symbol	color		979883						
ANR	980290	Symbol	* pgs		979883						
ANR	980291	Symbol	encode_color		979883						
ANR	980292	Symbol	ncomps		979883						
ANR	980293	Symbol	dev -> color_info		979883						
ANR	980294	Symbol	GX_CINFO_POLARITY_ADDITIVE		979883						
ANR	980295	Symbol	effective_transfer		979883						
ANR	980296	Symbol	gx_render_device_DeviceN		979883						
ANR	980297	Symbol	* effective_transfer		979883						
ANR	980298	Symbol	gray		979883						
ANR	980299	Symbol	gx_no_color_index		979883						
ANR	980300	Symbol	dev		979883						
ANR	980301	Symbol	get_color_mapping_procs_subclass		979883						
ANR	980302	Symbol	dev -> color_info . polarity		979883						
ANR	980303	Symbol	dev_proc		979883						
ANR	980304	Symbol	dev -> color_info . opmode		979883						
ANR	980305	Symbol	scm		979883						
ANR	980306	Symbol	* cm_comps		979883						
ANR	980307	Symbol	pgs		979883						
ANR	980308	Symbol	frac_1		979883						
ANR	980309	Symbol	dev -> color_info . num_components		979883						
ANR	980310	Symbol	i		979883						
ANR	980311	Symbol	GX_CINFO_OPMODE		979883						
ANR	980312	Symbol	pgs -> screen_phase		979883						
ANR	980313	Symbol	pdc		979883						
ANR	980314	Symbol	dev -> color_info . black_component		979883						
ANR	980315	Symbol	cm_comps		979883						
ANR	980316	Symbol	cv		979883						
ANR	980317	Symbol	* i		979883						
ANR	980318	Symbol	gx_map_color_frac		979883						
ANR	980319	Symbol	pgs -> effective_transfer_non_identity_count		979883						
ANR	980320	Symbol	GX_CINFO_OPMODE_UNKNOWN		979883						
ANR	980321	Symbol	pgs -> dev_ht		979883						
ANR	980322	Symbol	* cv		979883						
ANR	980323	Symbol	frac2cv		979883						
ANR	980324	Function	cmap_rgb_halftoned	1006:0:36424:37598							
ANR	980325	FunctionDef	"cmap_rgb_halftoned (frac r , frac g , frac b , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		980324	0					
ANR	980326	CompoundStatement		1009:0:36573:37598	980324	0					
ANR	980327	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1010:4:36579:36627	980324	0	True				
ANR	980328	IdentifierDecl	i		980324	0					
ANR	980329	IdentifierDeclType	uchar		980324	0					
ANR	980330	Identifier	i		980324	1					
ANR	980331	IdentifierDecl	ncomps = dev -> color_info . num_components		980324	1					
ANR	980332	IdentifierDeclType	uchar		980324	0					
ANR	980333	Identifier	ncomps		980324	1					
ANR	980334	AssignmentExpression	ncomps = dev -> color_info . num_components		980324	2		=			
ANR	980335	Identifier	ncomps		980324	0					
ANR	980336	MemberAccess	dev -> color_info . num_components		980324	1					
ANR	980337	PtrMemberAccess	dev -> color_info		980324	0					
ANR	980338	Identifier	dev		980324	0					
ANR	980339	Identifier	color_info		980324	1					
ANR	980340	Identifier	num_components		980324	1					
ANR	980341	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1011:4:36633:36678	980324	1	True				
ANR	980342	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980324	0					
ANR	980343	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980324	0					
ANR	980344	Identifier	cm_comps		980324	1					
ANR	980345	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		980324	2					
ANR	980346	IdentifierDeclStatement	subclass_color_mappings scm ;	1012:4:36684:36711	980324	2	True				
ANR	980347	IdentifierDecl	scm		980324	0					
ANR	980348	IdentifierDeclType	subclass_color_mappings		980324	0					
ANR	980349	Identifier	scm		980324	1					
ANR	980350	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	1015:4:36751:36794	980324	3	True				
ANR	980351	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		980324	0		=			
ANR	980352	Identifier	scm		980324	0					
ANR	980353	CallExpression	get_color_mapping_procs_subclass ( dev )		980324	1					
ANR	980354	Callee	get_color_mapping_procs_subclass		980324	0					
ANR	980355	Identifier	get_color_mapping_procs_subclass		980324	0					
ANR	980356	ArgumentList	dev		980324	1					
ANR	980357	Argument	dev		980324	0					
ANR	980358	Identifier	dev		980324	0					
ANR	980359	ExpressionStatement	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"	1016:4:36800:36845	980324	4	True				
ANR	980360	CallExpression	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"		980324	0					
ANR	980361	Callee	map_rgb_subclass		980324	0					
ANR	980362	Identifier	map_rgb_subclass		980324	0					
ANR	980363	ArgumentList	scm		980324	1					
ANR	980364	Argument	scm		980324	0					
ANR	980365	Identifier	scm		980324	0					
ANR	980366	Argument	pgs		980324	1					
ANR	980367	Identifier	pgs		980324	0					
ANR	980368	Argument	r		980324	2					
ANR	980369	Identifier	r		980324	0					
ANR	980370	Argument	g		980324	3					
ANR	980371	Identifier	g		980324	0					
ANR	980372	Argument	b		980324	4					
ANR	980373	Identifier	b		980324	0					
ANR	980374	Argument	cm_comps		980324	5					
ANR	980375	Identifier	cm_comps		980324	0					
ANR	980376	IfStatement	if ( pgs -> effective_transfer_non_identity_count != 0 )		980324	5					
ANR	980377	Condition	pgs -> effective_transfer_non_identity_count != 0	1019:8:36922:36968	980324	0	True				
ANR	980378	EqualityExpression	pgs -> effective_transfer_non_identity_count != 0		980324	0		!=			
ANR	980379	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		980324	0					
ANR	980380	Identifier	pgs		980324	0					
ANR	980381	Identifier	effective_transfer_non_identity_count		980324	1					
ANR	980382	PrimaryExpression	0		980324	1					
ANR	980383	CompoundStatement		11:57:397:397	980324	1					
ANR	980384	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		980324	0					
ANR	980385	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1020:12:36985:37038	980324	0	True				
ANR	980386	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		980324	0		==			
ANR	980387	MemberAccess	dev -> color_info . polarity		980324	0					
ANR	980388	PtrMemberAccess	dev -> color_info		980324	0					
ANR	980389	Identifier	dev		980324	0					
ANR	980390	Identifier	color_info		980324	1					
ANR	980391	Identifier	polarity		980324	1					
ANR	980392	Identifier	GX_CINFO_POLARITY_ADDITIVE		980324	1					
ANR	980393	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980324	1					
ANR	980394	ForInit	i = 0 ;	1021:17:37058:37063	980324	0	True				
ANR	980395	AssignmentExpression	i = 0		980324	0		=			
ANR	980396	Identifier	i		980324	0					
ANR	980397	PrimaryExpression	0		980324	1					
ANR	980398	Condition	i < ncomps	1021:24:37065:37074	980324	1	True				
ANR	980399	RelationalExpression	i < ncomps		980324	0		<			
ANR	980400	Identifier	i		980324	0					
ANR	980401	Identifier	ncomps		980324	1					
ANR	980402	PostIncDecOperationExpression	i ++	1021:36:37077:37079	980324	2	True				
ANR	980403	Identifier	i		980324	0					
ANR	980404	IncDec	++		980324	1					
ANR	980405	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1022:16:37098:37202	980324	3	True				
ANR	980406	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		980324	0		=			
ANR	980407	ArrayIndexing	cm_comps [ i ]		980324	0					
ANR	980408	Identifier	cm_comps		980324	0					
ANR	980409	Identifier	i		980324	1					
ANR	980410	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		980324	1					
ANR	980411	Callee	gx_map_color_frac		980324	0					
ANR	980412	Identifier	gx_map_color_frac		980324	0					
ANR	980413	ArgumentList	pgs		980324	1					
ANR	980414	Argument	pgs		980324	0					
ANR	980415	Identifier	pgs		980324	0					
ANR	980416	Argument	cm_comps [ i ]		980324	1					
ANR	980417	ArrayIndexing	cm_comps [ i ]		980324	0					
ANR	980418	Identifier	cm_comps		980324	0					
ANR	980419	Identifier	i		980324	1					
ANR	980420	Argument	effective_transfer [ i ]		980324	2					
ANR	980421	ArrayIndexing	effective_transfer [ i ]		980324	0					
ANR	980422	Identifier	effective_transfer		980324	0					
ANR	980423	Identifier	i		980324	1					
ANR	980424	ElseStatement	else		980324	0					
ANR	980425	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980324	0					
ANR	980426	ForInit	i = 0 ;	1025:17:37234:37239	980324	0	True				
ANR	980427	AssignmentExpression	i = 0		980324	0		=			
ANR	980428	Identifier	i		980324	0					
ANR	980429	PrimaryExpression	0		980324	1					
ANR	980430	Condition	i < ncomps	1025:24:37241:37250	980324	1	True				
ANR	980431	RelationalExpression	i < ncomps		980324	0		<			
ANR	980432	Identifier	i		980324	0					
ANR	980433	Identifier	ncomps		980324	1					
ANR	980434	PostIncDecOperationExpression	i ++	1025:36:37253:37255	980324	2	True				
ANR	980435	Identifier	i		980324	0					
ANR	980436	IncDec	++		980324	1					
ANR	980437	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1026:16:37274:37396	980324	3	True				
ANR	980438	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980324	0		=			
ANR	980439	ArrayIndexing	cm_comps [ i ]		980324	0					
ANR	980440	Identifier	cm_comps		980324	0					
ANR	980441	Identifier	i		980324	1					
ANR	980442	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980324	1		-			
ANR	980443	Identifier	frac_1		980324	0					
ANR	980444	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980324	1					
ANR	980445	Callee	gx_map_color_frac		980324	0					
ANR	980446	Identifier	gx_map_color_frac		980324	0					
ANR	980447	ArgumentList	pgs		980324	1					
ANR	980448	Argument	pgs		980324	0					
ANR	980449	Identifier	pgs		980324	0					
ANR	980450	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		980324	1					
ANR	980451	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		980324	0					
ANR	980452	CastTarget	frac		980324	0					
ANR	980453	AdditiveExpression	frac_1 - cm_comps [ i ]		980324	1		-			
ANR	980454	Identifier	frac_1		980324	0					
ANR	980455	ArrayIndexing	cm_comps [ i ]		980324	1					
ANR	980456	Identifier	cm_comps		980324	0					
ANR	980457	Identifier	i		980324	1					
ANR	980458	Argument	effective_transfer [ i ]		980324	2					
ANR	980459	ArrayIndexing	effective_transfer [ i ]		980324	0					
ANR	980460	Identifier	effective_transfer		980324	0					
ANR	980461	Identifier	i		980324	1					
ANR	980462	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		980324	6					
ANR	980463	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1030:8:37413:37542	980324	0	True				
ANR	980464	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		980324	0		==			
ANR	980465	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		980324	0					
ANR	980466	Callee	gx_render_device_DeviceN		980324	0					
ANR	980467	Identifier	gx_render_device_DeviceN		980324	0					
ANR	980468	ArgumentList	cm_comps		980324	1					
ANR	980469	Argument	cm_comps		980324	0					
ANR	980470	Identifier	cm_comps		980324	0					
ANR	980471	Argument	pdc		980324	1					
ANR	980472	Identifier	pdc		980324	0					
ANR	980473	Argument	dev		980324	2					
ANR	980474	Identifier	dev		980324	0					
ANR	980475	Argument	pgs -> dev_ht		980324	3					
ANR	980476	PtrMemberAccess	pgs -> dev_ht		980324	0					
ANR	980477	Identifier	pgs		980324	0					
ANR	980478	Identifier	dev_ht		980324	1					
ANR	980479	Argument	& pgs -> screen_phase [ select ]		980324	4					
ANR	980480	UnaryOperationExpression	& pgs -> screen_phase [ select ]		980324	0					
ANR	980481	UnaryOperator	&		980324	0					
ANR	980482	ArrayIndexing	pgs -> screen_phase [ select ]		980324	1					
ANR	980483	PtrMemberAccess	pgs -> screen_phase		980324	0					
ANR	980484	Identifier	pgs		980324	0					
ANR	980485	Identifier	screen_phase		980324	1					
ANR	980486	Identifier	select		980324	1					
ANR	980487	PrimaryExpression	1		980324	1					
ANR	980488	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1032:8:37553:37596	980324	1	True				
ANR	980489	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		980324	0					
ANR	980490	Callee	gx_color_load_select		980324	0					
ANR	980491	Identifier	gx_color_load_select		980324	0					
ANR	980492	ArgumentList	pdc		980324	1					
ANR	980493	Argument	pdc		980324	0					
ANR	980494	Identifier	pdc		980324	0					
ANR	980495	Argument	pgs		980324	1					
ANR	980496	Identifier	pgs		980324	0					
ANR	980497	Argument	dev		980324	2					
ANR	980498	Identifier	dev		980324	0					
ANR	980499	Argument	select		980324	3					
ANR	980500	Identifier	select		980324	0					
ANR	980501	ReturnType	static void		980324	1					
ANR	980502	Identifier	cmap_rgb_halftoned		980324	2					
ANR	980503	ParameterList	"frac r , frac g , frac b , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		980324	3					
ANR	980504	Parameter	frac r	1007:19:36455:36460	980324	0	True				
ANR	980505	ParameterType	frac		980324	0					
ANR	980506	Identifier	r		980324	1					
ANR	980507	Parameter	frac g	1007:27:36463:36468	980324	1	True				
ANR	980508	ParameterType	frac		980324	0					
ANR	980509	Identifier	g		980324	1					
ANR	980510	Parameter	frac b	1007:35:36471:36476	980324	2	True				
ANR	980511	ParameterType	frac		980324	0					
ANR	980512	Identifier	b		980324	1					
ANR	980513	Parameter	gx_device_color * pdc	1007:43:36479:36499	980324	3	True				
ANR	980514	ParameterType	gx_device_color *		980324	0					
ANR	980515	Identifier	pdc		980324	1					
ANR	980516	Parameter	const gs_gstate * pgs	1008:5:36507:36527	980324	4	True				
ANR	980517	ParameterType	const gs_gstate *		980324	0					
ANR	980518	Identifier	pgs		980324	1					
ANR	980519	Parameter	gx_device * dev	1008:28:36530:36544	980324	5	True				
ANR	980520	ParameterType	gx_device *		980324	0					
ANR	980521	Identifier	dev		980324	1					
ANR	980522	Parameter	gs_color_select_t select	1008:45:36547:36570	980324	6	True				
ANR	980523	ParameterType	gs_color_select_t		980324	0					
ANR	980524	Identifier	select		980324	1					
ANR	980525	CFGEntryNode	ENTRY		980324		True				
ANR	980526	CFGExitNode	EXIT		980324		True				
ANR	980527	Symbol	* dev		980324						
ANR	980528	Symbol	select		980324						
ANR	980529	Symbol	* pgs		980324						
ANR	980530	Symbol	ncomps		980324						
ANR	980531	Symbol	dev -> color_info		980324						
ANR	980532	Symbol	GX_CINFO_POLARITY_ADDITIVE		980324						
ANR	980533	Symbol	effective_transfer		980324						
ANR	980534	Symbol	gx_render_device_DeviceN		980324						
ANR	980535	Symbol	* effective_transfer		980324						
ANR	980536	Symbol	dev		980324						
ANR	980537	Symbol	get_color_mapping_procs_subclass		980324						
ANR	980538	Symbol	dev -> color_info . polarity		980324						
ANR	980539	Symbol	scm		980324						
ANR	980540	Symbol	* cm_comps		980324						
ANR	980541	Symbol	pgs		980324						
ANR	980542	Symbol	b		980324						
ANR	980543	Symbol	frac_1		980324						
ANR	980544	Symbol	dev -> color_info . num_components		980324						
ANR	980545	Symbol	g		980324						
ANR	980546	Symbol	i		980324						
ANR	980547	Symbol	pgs -> screen_phase		980324						
ANR	980548	Symbol	pdc		980324						
ANR	980549	Symbol	cm_comps		980324						
ANR	980550	Symbol	r		980324						
ANR	980551	Symbol	gx_map_color_frac		980324						
ANR	980552	Symbol	* i		980324						
ANR	980553	Symbol	pgs -> effective_transfer_non_identity_count		980324						
ANR	980554	Symbol	pgs -> dev_ht		980324						
ANR	980555	Function	cmap_rgb_direct	1035:0:37601:39273							
ANR	980556	FunctionDef	"cmap_rgb_direct (frac r , frac g , frac b , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		980555	0					
ANR	980557	CompoundStatement		1038:0:37747:39273	980555	0					
ANR	980558	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1039:4:37753:37801	980555	0	True				
ANR	980559	IdentifierDecl	i		980555	0					
ANR	980560	IdentifierDeclType	uchar		980555	0					
ANR	980561	Identifier	i		980555	1					
ANR	980562	IdentifierDecl	ncomps = dev -> color_info . num_components		980555	1					
ANR	980563	IdentifierDeclType	uchar		980555	0					
ANR	980564	Identifier	ncomps		980555	1					
ANR	980565	AssignmentExpression	ncomps = dev -> color_info . num_components		980555	2		=			
ANR	980566	Identifier	ncomps		980555	0					
ANR	980567	MemberAccess	dev -> color_info . num_components		980555	1					
ANR	980568	PtrMemberAccess	dev -> color_info		980555	0					
ANR	980569	Identifier	dev		980555	0					
ANR	980570	Identifier	color_info		980555	1					
ANR	980571	Identifier	num_components		980555	1					
ANR	980572	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1040:4:37807:37852	980555	1	True				
ANR	980573	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980555	0					
ANR	980574	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980555	0					
ANR	980575	Identifier	cm_comps		980555	1					
ANR	980576	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		980555	2					
ANR	980577	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1041:4:37858:37907	980555	2	True				
ANR	980578	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980555	0					
ANR	980579	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980555	0					
ANR	980580	Identifier	cv		980555	1					
ANR	980581	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		980555	2					
ANR	980582	IdentifierDeclStatement	gx_color_index color ;	1042:4:37913:37933	980555	3	True				
ANR	980583	IdentifierDecl	color		980555	0					
ANR	980584	IdentifierDeclType	gx_color_index		980555	0					
ANR	980585	Identifier	color		980555	1					
ANR	980586	IdentifierDeclStatement	subclass_color_mappings scm ;	1043:4:37939:37966	980555	4	True				
ANR	980587	IdentifierDecl	scm		980555	0					
ANR	980588	IdentifierDeclType	subclass_color_mappings		980555	0					
ANR	980589	Identifier	scm		980555	1					
ANR	980590	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	1046:4:38006:38049	980555	5	True				
ANR	980591	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		980555	0		=			
ANR	980592	Identifier	scm		980555	0					
ANR	980593	CallExpression	get_color_mapping_procs_subclass ( dev )		980555	1					
ANR	980594	Callee	get_color_mapping_procs_subclass		980555	0					
ANR	980595	Identifier	get_color_mapping_procs_subclass		980555	0					
ANR	980596	ArgumentList	dev		980555	1					
ANR	980597	Argument	dev		980555	0					
ANR	980598	Identifier	dev		980555	0					
ANR	980599	ExpressionStatement	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"	1047:4:38055:38100	980555	6	True				
ANR	980600	CallExpression	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"		980555	0					
ANR	980601	Callee	map_rgb_subclass		980555	0					
ANR	980602	Identifier	map_rgb_subclass		980555	0					
ANR	980603	ArgumentList	scm		980555	1					
ANR	980604	Argument	scm		980555	0					
ANR	980605	Identifier	scm		980555	0					
ANR	980606	Argument	pgs		980555	1					
ANR	980607	Identifier	pgs		980555	0					
ANR	980608	Argument	r		980555	2					
ANR	980609	Identifier	r		980555	0					
ANR	980610	Argument	g		980555	3					
ANR	980611	Identifier	g		980555	0					
ANR	980612	Argument	b		980555	4					
ANR	980613	Identifier	b		980555	0					
ANR	980614	Argument	cm_comps		980555	5					
ANR	980615	Identifier	cm_comps		980555	0					
ANR	980616	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		980555	7					
ANR	980617	Condition	pgs -> effective_transfer_non_identity_count == 0	1050:8:38177:38223	980555	0	True				
ANR	980618	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		980555	0		==			
ANR	980619	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		980555	0					
ANR	980620	Identifier	pgs		980555	0					
ANR	980621	Identifier	effective_transfer_non_identity_count		980555	1					
ANR	980622	PrimaryExpression	0		980555	1					
ANR	980623	CompoundStatement		13:57:478:478	980555	1					
ANR	980624	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980555	0					
ANR	980625	ForInit	i = 0 ;	1051:13:38241:38246	980555	0	True				
ANR	980626	AssignmentExpression	i = 0		980555	0		=			
ANR	980627	Identifier	i		980555	0					
ANR	980628	PrimaryExpression	0		980555	1					
ANR	980629	Condition	i < ncomps	1051:20:38248:38257	980555	1	True				
ANR	980630	RelationalExpression	i < ncomps		980555	0		<			
ANR	980631	Identifier	i		980555	0					
ANR	980632	Identifier	ncomps		980555	1					
ANR	980633	PostIncDecOperationExpression	i ++	1051:32:38260:38262	980555	2	True				
ANR	980634	Identifier	i		980555	0					
ANR	980635	IncDec	++		980555	1					
ANR	980636	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1052:12:38277:38305	980555	3	True				
ANR	980637	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		980555	0		=			
ANR	980638	ArrayIndexing	cv [ i ]		980555	0					
ANR	980639	Identifier	cv		980555	0					
ANR	980640	Identifier	i		980555	1					
ANR	980641	CallExpression	frac2cv ( cm_comps [ i ] )		980555	1					
ANR	980642	Callee	frac2cv		980555	0					
ANR	980643	Identifier	frac2cv		980555	0					
ANR	980644	ArgumentList	cm_comps [ i ]		980555	1					
ANR	980645	Argument	cm_comps [ i ]		980555	0					
ANR	980646	ArrayIndexing	cm_comps [ i ]		980555	0					
ANR	980647	Identifier	cm_comps		980555	0					
ANR	980648	Identifier	i		980555	1					
ANR	980649	ElseStatement	else		980555	0					
ANR	980650	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		980555	0					
ANR	980651	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1053:15:38322:38375	980555	0	True				
ANR	980652	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		980555	0		==			
ANR	980653	MemberAccess	dev -> color_info . polarity		980555	0					
ANR	980654	PtrMemberAccess	dev -> color_info		980555	0					
ANR	980655	Identifier	dev		980555	0					
ANR	980656	Identifier	color_info		980555	1					
ANR	980657	Identifier	polarity		980555	1					
ANR	980658	Identifier	GX_CINFO_POLARITY_ADDITIVE		980555	1					
ANR	980659	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980555	1					
ANR	980660	ForInit	i = 0 ;	1054:13:38391:38396	980555	0	True				
ANR	980661	AssignmentExpression	i = 0		980555	0		=			
ANR	980662	Identifier	i		980555	0					
ANR	980663	PrimaryExpression	0		980555	1					
ANR	980664	Condition	i < ncomps	1054:20:38398:38407	980555	1	True				
ANR	980665	RelationalExpression	i < ncomps		980555	0		<			
ANR	980666	Identifier	i		980555	0					
ANR	980667	Identifier	ncomps		980555	1					
ANR	980668	PostIncDecOperationExpression	i ++	1054:32:38410:38412	980555	2	True				
ANR	980669	Identifier	i		980555	0					
ANR	980670	IncDec	++		980555	1					
ANR	980671	CompoundStatement		17:37:667:667	980555	3					
ANR	980672	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1055:12:38429:38533	980555	0	True				
ANR	980673	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		980555	0		=			
ANR	980674	ArrayIndexing	cm_comps [ i ]		980555	0					
ANR	980675	Identifier	cm_comps		980555	0					
ANR	980676	Identifier	i		980555	1					
ANR	980677	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		980555	1					
ANR	980678	Callee	gx_map_color_frac		980555	0					
ANR	980679	Identifier	gx_map_color_frac		980555	0					
ANR	980680	ArgumentList	pgs		980555	1					
ANR	980681	Argument	pgs		980555	0					
ANR	980682	Identifier	pgs		980555	0					
ANR	980683	Argument	cm_comps [ i ]		980555	1					
ANR	980684	ArrayIndexing	cm_comps [ i ]		980555	0					
ANR	980685	Identifier	cm_comps		980555	0					
ANR	980686	Identifier	i		980555	1					
ANR	980687	Argument	effective_transfer [ i ]		980555	2					
ANR	980688	ArrayIndexing	effective_transfer [ i ]		980555	0					
ANR	980689	Identifier	effective_transfer		980555	0					
ANR	980690	Identifier	i		980555	1					
ANR	980691	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1057:12:38547:38575	980555	1	True				
ANR	980692	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		980555	0		=			
ANR	980693	ArrayIndexing	cv [ i ]		980555	0					
ANR	980694	Identifier	cv		980555	0					
ANR	980695	Identifier	i		980555	1					
ANR	980696	CallExpression	frac2cv ( cm_comps [ i ] )		980555	1					
ANR	980697	Callee	frac2cv		980555	0					
ANR	980698	Identifier	frac2cv		980555	0					
ANR	980699	ArgumentList	cm_comps [ i ]		980555	1					
ANR	980700	Argument	cm_comps [ i ]		980555	0					
ANR	980701	ArrayIndexing	cm_comps [ i ]		980555	0					
ANR	980702	Identifier	cm_comps		980555	0					
ANR	980703	Identifier	i		980555	1					
ANR	980704	ElseStatement	else		980555	0					
ANR	980705	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980555	0					
ANR	980706	ForInit	i = 0 ;	1060:13:38609:38614	980555	0	True				
ANR	980707	AssignmentExpression	i = 0		980555	0		=			
ANR	980708	Identifier	i		980555	0					
ANR	980709	PrimaryExpression	0		980555	1					
ANR	980710	Condition	i < ncomps	1060:20:38616:38625	980555	1	True				
ANR	980711	RelationalExpression	i < ncomps		980555	0		<			
ANR	980712	Identifier	i		980555	0					
ANR	980713	Identifier	ncomps		980555	1					
ANR	980714	PostIncDecOperationExpression	i ++	1060:32:38628:38630	980555	2	True				
ANR	980715	Identifier	i		980555	0					
ANR	980716	IncDec	++		980555	1					
ANR	980717	CompoundStatement		23:37:885:885	980555	3					
ANR	980718	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1061:12:38647:38769	980555	0	True				
ANR	980719	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980555	0		=			
ANR	980720	ArrayIndexing	cm_comps [ i ]		980555	0					
ANR	980721	Identifier	cm_comps		980555	0					
ANR	980722	Identifier	i		980555	1					
ANR	980723	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980555	1		-			
ANR	980724	Identifier	frac_1		980555	0					
ANR	980725	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980555	1					
ANR	980726	Callee	gx_map_color_frac		980555	0					
ANR	980727	Identifier	gx_map_color_frac		980555	0					
ANR	980728	ArgumentList	pgs		980555	1					
ANR	980729	Argument	pgs		980555	0					
ANR	980730	Identifier	pgs		980555	0					
ANR	980731	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		980555	1					
ANR	980732	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		980555	0					
ANR	980733	CastTarget	frac		980555	0					
ANR	980734	AdditiveExpression	frac_1 - cm_comps [ i ]		980555	1		-			
ANR	980735	Identifier	frac_1		980555	0					
ANR	980736	ArrayIndexing	cm_comps [ i ]		980555	1					
ANR	980737	Identifier	cm_comps		980555	0					
ANR	980738	Identifier	i		980555	1					
ANR	980739	Argument	effective_transfer [ i ]		980555	2					
ANR	980740	ArrayIndexing	effective_transfer [ i ]		980555	0					
ANR	980741	Identifier	effective_transfer		980555	0					
ANR	980742	Identifier	i		980555	1					
ANR	980743	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1063:12:38783:38811	980555	1	True				
ANR	980744	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		980555	0		=			
ANR	980745	ArrayIndexing	cv [ i ]		980555	0					
ANR	980746	Identifier	cv		980555	0					
ANR	980747	Identifier	i		980555	1					
ANR	980748	CallExpression	frac2cv ( cm_comps [ i ] )		980555	1					
ANR	980749	Callee	frac2cv		980555	0					
ANR	980750	Identifier	frac2cv		980555	0					
ANR	980751	ArgumentList	cm_comps [ i ]		980555	1					
ANR	980752	Argument	cm_comps [ i ]		980555	0					
ANR	980753	ArrayIndexing	cm_comps [ i ]		980555	0					
ANR	980754	Identifier	cm_comps		980555	0					
ANR	980755	Identifier	i		980555	1					
ANR	980756	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , cv )"	1067:4:38862:38906	980555	8	True				
ANR	980757	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , cv )"		980555	0		=			
ANR	980758	Identifier	color		980555	0					
ANR	980759	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		980555	1					
ANR	980760	Callee	"dev_proc ( dev , encode_color )"		980555	0					
ANR	980761	CallExpression	"dev_proc ( dev , encode_color )"		980555	0					
ANR	980762	Callee	dev_proc		980555	0					
ANR	980763	Identifier	dev_proc		980555	0					
ANR	980764	ArgumentList	dev		980555	1					
ANR	980765	Argument	dev		980555	0					
ANR	980766	Identifier	dev		980555	0					
ANR	980767	Argument	encode_color		980555	1					
ANR	980768	Identifier	encode_color		980555	0					
ANR	980769	ArgumentList	dev		980555	1					
ANR	980770	Argument	dev		980555	0					
ANR	980771	Identifier	dev		980555	0					
ANR	980772	Argument	cv		980555	1					
ANR	980773	Identifier	cv		980555	0					
ANR	980774	IfStatement	if ( color != gx_no_color_index )		980555	9					
ANR	980775	Condition	color != gx_no_color_index	1070:8:38992:39017	980555	0	True				
ANR	980776	EqualityExpression	color != gx_no_color_index		980555	0		!=			
ANR	980777	Identifier	color		980555	0					
ANR	980778	Identifier	gx_no_color_index		980555	1					
ANR	980779	CompoundStatement		33:36:1272:1272	980555	1					
ANR	980780	ExpressionStatement	"color_set_pure ( pdc , color )"	1071:8:39030:39056	980555	0	True				
ANR	980781	CallExpression	"color_set_pure ( pdc , color )"		980555	0					
ANR	980782	Callee	color_set_pure		980555	0					
ANR	980783	Identifier	color_set_pure		980555	0					
ANR	980784	ArgumentList	pdc		980555	1					
ANR	980785	Argument	pdc		980555	0					
ANR	980786	Identifier	pdc		980555	0					
ANR	980787	Argument	color		980555	1					
ANR	980788	Identifier	color		980555	0					
ANR	980789	ReturnStatement	return ;	1072:8:39066:39072	980555	1	True				
ANR	980790	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		980555	10					
ANR	980791	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1074:8:39088:39217	980555	0	True				
ANR	980792	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		980555	0		==			
ANR	980793	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		980555	0					
ANR	980794	Callee	gx_render_device_DeviceN		980555	0					
ANR	980795	Identifier	gx_render_device_DeviceN		980555	0					
ANR	980796	ArgumentList	cm_comps		980555	1					
ANR	980797	Argument	cm_comps		980555	0					
ANR	980798	Identifier	cm_comps		980555	0					
ANR	980799	Argument	pdc		980555	1					
ANR	980800	Identifier	pdc		980555	0					
ANR	980801	Argument	dev		980555	2					
ANR	980802	Identifier	dev		980555	0					
ANR	980803	Argument	pgs -> dev_ht		980555	3					
ANR	980804	PtrMemberAccess	pgs -> dev_ht		980555	0					
ANR	980805	Identifier	pgs		980555	0					
ANR	980806	Identifier	dev_ht		980555	1					
ANR	980807	Argument	& pgs -> screen_phase [ select ]		980555	4					
ANR	980808	UnaryOperationExpression	& pgs -> screen_phase [ select ]		980555	0					
ANR	980809	UnaryOperator	&		980555	0					
ANR	980810	ArrayIndexing	pgs -> screen_phase [ select ]		980555	1					
ANR	980811	PtrMemberAccess	pgs -> screen_phase		980555	0					
ANR	980812	Identifier	pgs		980555	0					
ANR	980813	Identifier	screen_phase		980555	1					
ANR	980814	Identifier	select		980555	1					
ANR	980815	PrimaryExpression	1		980555	1					
ANR	980816	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1076:8:39228:39271	980555	1	True				
ANR	980817	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		980555	0					
ANR	980818	Callee	gx_color_load_select		980555	0					
ANR	980819	Identifier	gx_color_load_select		980555	0					
ANR	980820	ArgumentList	pdc		980555	1					
ANR	980821	Argument	pdc		980555	0					
ANR	980822	Identifier	pdc		980555	0					
ANR	980823	Argument	pgs		980555	1					
ANR	980824	Identifier	pgs		980555	0					
ANR	980825	Argument	dev		980555	2					
ANR	980826	Identifier	dev		980555	0					
ANR	980827	Argument	select		980555	3					
ANR	980828	Identifier	select		980555	0					
ANR	980829	ReturnType	static void		980555	1					
ANR	980830	Identifier	cmap_rgb_direct		980555	2					
ANR	980831	ParameterList	"frac r , frac g , frac b , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		980555	3					
ANR	980832	Parameter	frac r	1036:16:37629:37634	980555	0	True				
ANR	980833	ParameterType	frac		980555	0					
ANR	980834	Identifier	r		980555	1					
ANR	980835	Parameter	frac g	1036:24:37637:37642	980555	1	True				
ANR	980836	ParameterType	frac		980555	0					
ANR	980837	Identifier	g		980555	1					
ANR	980838	Parameter	frac b	1036:32:37645:37650	980555	2	True				
ANR	980839	ParameterType	frac		980555	0					
ANR	980840	Identifier	b		980555	1					
ANR	980841	Parameter	gx_device_color * pdc	1036:40:37653:37673	980555	3	True				
ANR	980842	ParameterType	gx_device_color *		980555	0					
ANR	980843	Identifier	pdc		980555	1					
ANR	980844	Parameter	const gs_gstate * pgs	1037:5:37681:37701	980555	4	True				
ANR	980845	ParameterType	const gs_gstate *		980555	0					
ANR	980846	Identifier	pgs		980555	1					
ANR	980847	Parameter	gx_device * dev	1037:28:37704:37718	980555	5	True				
ANR	980848	ParameterType	gx_device *		980555	0					
ANR	980849	Identifier	dev		980555	1					
ANR	980850	Parameter	gs_color_select_t select	1037:45:37721:37744	980555	6	True				
ANR	980851	ParameterType	gs_color_select_t		980555	0					
ANR	980852	Identifier	select		980555	1					
ANR	980853	CFGEntryNode	ENTRY		980555		True				
ANR	980854	CFGExitNode	EXIT		980555		True				
ANR	980855	Symbol	* dev		980555						
ANR	980856	Symbol	select		980555						
ANR	980857	Symbol	color		980555						
ANR	980858	Symbol	* pgs		980555						
ANR	980859	Symbol	encode_color		980555						
ANR	980860	Symbol	ncomps		980555						
ANR	980861	Symbol	dev -> color_info		980555						
ANR	980862	Symbol	GX_CINFO_POLARITY_ADDITIVE		980555						
ANR	980863	Symbol	effective_transfer		980555						
ANR	980864	Symbol	gx_render_device_DeviceN		980555						
ANR	980865	Symbol	* effective_transfer		980555						
ANR	980866	Symbol	gx_no_color_index		980555						
ANR	980867	Symbol	dev		980555						
ANR	980868	Symbol	get_color_mapping_procs_subclass		980555						
ANR	980869	Symbol	dev -> color_info . polarity		980555						
ANR	980870	Symbol	dev_proc		980555						
ANR	980871	Symbol	scm		980555						
ANR	980872	Symbol	* cm_comps		980555						
ANR	980873	Symbol	pgs		980555						
ANR	980874	Symbol	b		980555						
ANR	980875	Symbol	frac_1		980555						
ANR	980876	Symbol	dev -> color_info . num_components		980555						
ANR	980877	Symbol	g		980555						
ANR	980878	Symbol	i		980555						
ANR	980879	Symbol	pgs -> screen_phase		980555						
ANR	980880	Symbol	pdc		980555						
ANR	980881	Symbol	cm_comps		980555						
ANR	980882	Symbol	r		980555						
ANR	980883	Symbol	cv		980555						
ANR	980884	Symbol	* i		980555						
ANR	980885	Symbol	gx_map_color_frac		980555						
ANR	980886	Symbol	pgs -> effective_transfer_non_identity_count		980555						
ANR	980887	Symbol	pgs -> dev_ht		980555						
ANR	980888	Symbol	* cv		980555						
ANR	980889	Symbol	frac2cv		980555						
ANR	980890	Function	cmap_cmyk_direct	1081:0:39316:42920							
ANR	980891	FunctionDef	"cmap_cmyk_direct (frac c , frac m , frac y , frac k , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const gs_color_space * source_pcs)"		980890	0					
ANR	980892	CompoundStatement		1085:0:39510:42920	980890	0					
ANR	980893	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1086:4:39516:39564	980890	0	True				
ANR	980894	IdentifierDecl	i		980890	0					
ANR	980895	IdentifierDeclType	uchar		980890	0					
ANR	980896	Identifier	i		980890	1					
ANR	980897	IdentifierDecl	ncomps = dev -> color_info . num_components		980890	1					
ANR	980898	IdentifierDeclType	uchar		980890	0					
ANR	980899	Identifier	ncomps		980890	1					
ANR	980900	AssignmentExpression	ncomps = dev -> color_info . num_components		980890	2		=			
ANR	980901	Identifier	ncomps		980890	0					
ANR	980902	MemberAccess	dev -> color_info . num_components		980890	1					
ANR	980903	PtrMemberAccess	dev -> color_info		980890	0					
ANR	980904	Identifier	dev		980890	0					
ANR	980905	Identifier	color_info		980890	1					
ANR	980906	Identifier	num_components		980890	1					
ANR	980907	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1087:4:39570:39615	980890	1	True				
ANR	980908	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980890	0					
ANR	980909	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980890	0					
ANR	980910	Identifier	cm_comps		980890	1					
ANR	980911	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		980890	2					
ANR	980912	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1088:4:39621:39670	980890	2	True				
ANR	980913	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980890	0					
ANR	980914	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		980890	0					
ANR	980915	Identifier	cv		980890	1					
ANR	980916	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		980890	2					
ANR	980917	IdentifierDeclStatement	gx_color_index color ;	1089:4:39676:39696	980890	3	True				
ANR	980918	IdentifierDecl	color		980890	0					
ANR	980919	IdentifierDeclType	gx_color_index		980890	0					
ANR	980920	Identifier	color		980890	1					
ANR	980921	IdentifierDeclStatement	uint black_index ;	1090:4:39702:39718	980890	4	True				
ANR	980922	IdentifierDecl	black_index		980890	0					
ANR	980923	IdentifierDeclType	uint		980890	0					
ANR	980924	Identifier	black_index		980890	1					
ANR	980925	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	1091:4:39724:39754	980890	5	True				
ANR	980926	IdentifierDecl	* dev_profile		980890	0					
ANR	980927	IdentifierDeclType	cmm_dev_profile_t *		980890	0					
ANR	980928	Identifier	dev_profile		980890	1					
ANR	980929	IdentifierDeclStatement	gsicc_colorbuffer_t src_space = gsUNDEFINED ;	1092:4:39760:39803	980890	6	True				
ANR	980930	IdentifierDecl	src_space = gsUNDEFINED		980890	0					
ANR	980931	IdentifierDeclType	gsicc_colorbuffer_t		980890	0					
ANR	980932	Identifier	src_space		980890	1					
ANR	980933	AssignmentExpression	src_space = gsUNDEFINED		980890	2		=			
ANR	980934	Identifier	gsUNDEFINED		980890	0					
ANR	980935	Identifier	gsUNDEFINED		980890	1					
ANR	980936	IdentifierDeclStatement	bool gray_to_k ;	1093:4:39809:39823	980890	7	True				
ANR	980937	IdentifierDecl	gray_to_k		980890	0					
ANR	980938	IdentifierDeclType	bool		980890	0					
ANR	980939	Identifier	gray_to_k		980890	1					
ANR	980940	IdentifierDeclStatement	subclass_color_mappings scm ;	1094:4:39829:39856	980890	8	True				
ANR	980941	IdentifierDecl	scm		980890	0					
ANR	980942	IdentifierDeclType	subclass_color_mappings		980890	0					
ANR	980943	Identifier	scm		980890	1					
ANR	980944	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	1097:4:39896:39939	980890	9	True				
ANR	980945	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		980890	0		=			
ANR	980946	Identifier	scm		980890	0					
ANR	980947	CallExpression	get_color_mapping_procs_subclass ( dev )		980890	1					
ANR	980948	Callee	get_color_mapping_procs_subclass		980890	0					
ANR	980949	Identifier	get_color_mapping_procs_subclass		980890	0					
ANR	980950	ArgumentList	dev		980890	1					
ANR	980951	Argument	dev		980890	0					
ANR	980952	Identifier	dev		980890	0					
ANR	980953	ExpressionStatement	"map_cmyk_subclass ( scm , c , m , y , k , cm_comps )"	1098:4:39945:39989	980890	10	True				
ANR	980954	CallExpression	"map_cmyk_subclass ( scm , c , m , y , k , cm_comps )"		980890	0					
ANR	980955	Callee	map_cmyk_subclass		980890	0					
ANR	980956	Identifier	map_cmyk_subclass		980890	0					
ANR	980957	ArgumentList	scm		980890	1					
ANR	980958	Argument	scm		980890	0					
ANR	980959	Identifier	scm		980890	0					
ANR	980960	Argument	c		980890	1					
ANR	980961	Identifier	c		980890	0					
ANR	980962	Argument	m		980890	2					
ANR	980963	Identifier	m		980890	0					
ANR	980964	Argument	y		980890	3					
ANR	980965	Identifier	y		980890	0					
ANR	980966	Argument	k		980890	4					
ANR	980967	Identifier	k		980890	0					
ANR	980968	Argument	cm_comps		980890	5					
ANR	980969	Identifier	cm_comps		980890	0					
ANR	980970	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		980890	11					
ANR	980971	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1101:8:40066:40119	980890	0	True				
ANR	980972	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		980890	0		==			
ANR	980973	MemberAccess	dev -> color_info . polarity		980890	0					
ANR	980974	PtrMemberAccess	dev -> color_info		980890	0					
ANR	980975	Identifier	dev		980890	0					
ANR	980976	Identifier	color_info		980890	1					
ANR	980977	Identifier	polarity		980890	1					
ANR	980978	Identifier	GX_CINFO_POLARITY_ADDITIVE		980890	1					
ANR	980979	CompoundStatement		17:64:611:611	980890	1					
ANR	980980	IfStatement	if ( pgs -> effective_transfer_non_identity_count != 0 )		980890	0					
ANR	980981	Condition	pgs -> effective_transfer_non_identity_count != 0	1102:12:40136:40182	980890	0	True				
ANR	980982	EqualityExpression	pgs -> effective_transfer_non_identity_count != 0		980890	0		!=			
ANR	980983	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		980890	0					
ANR	980984	Identifier	pgs		980890	0					
ANR	980985	Identifier	effective_transfer_non_identity_count		980890	1					
ANR	980986	PrimaryExpression	0		980890	1					
ANR	980987	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980890	1					
ANR	980988	ForInit	i = 0 ;	1103:17:40202:40207	980890	0	True				
ANR	980989	AssignmentExpression	i = 0		980890	0		=			
ANR	980990	Identifier	i		980890	0					
ANR	980991	PrimaryExpression	0		980890	1					
ANR	980992	Condition	i < ncomps	1103:24:40209:40218	980890	1	True				
ANR	980993	RelationalExpression	i < ncomps		980890	0		<			
ANR	980994	Identifier	i		980890	0					
ANR	980995	Identifier	ncomps		980890	1					
ANR	980996	PostIncDecOperationExpression	i ++	1103:36:40221:40223	980890	2	True				
ANR	980997	Identifier	i		980890	0					
ANR	980998	IncDec	++		980890	1					
ANR	980999	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1104:16:40242:40346	980890	3	True				
ANR	981000	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		980890	0		=			
ANR	981001	ArrayIndexing	cm_comps [ i ]		980890	0					
ANR	981002	Identifier	cm_comps		980890	0					
ANR	981003	Identifier	i		980890	1					
ANR	981004	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		980890	1					
ANR	981005	Callee	gx_map_color_frac		980890	0					
ANR	981006	Identifier	gx_map_color_frac		980890	0					
ANR	981007	ArgumentList	pgs		980890	1					
ANR	981008	Argument	pgs		980890	0					
ANR	981009	Identifier	pgs		980890	0					
ANR	981010	Argument	cm_comps [ i ]		980890	1					
ANR	981011	ArrayIndexing	cm_comps [ i ]		980890	0					
ANR	981012	Identifier	cm_comps		980890	0					
ANR	981013	Identifier	i		980890	1					
ANR	981014	Argument	effective_transfer [ i ]		980890	2					
ANR	981015	ArrayIndexing	effective_transfer [ i ]		980890	0					
ANR	981016	Identifier	effective_transfer		980890	0					
ANR	981017	Identifier	i		980890	1					
ANR	981018	ElseStatement	else		980890	0					
ANR	981019	CompoundStatement		22:11:848:848	980890	0					
ANR	981020	ExpressionStatement	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	1110:8:40548:40593	980890	0	True				
ANR	981021	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		980890	0					
ANR	981022	Callee	"dev_proc ( dev , get_profile )"		980890	0					
ANR	981023	CallExpression	"dev_proc ( dev , get_profile )"		980890	0					
ANR	981024	Callee	dev_proc		980890	0					
ANR	981025	Identifier	dev_proc		980890	0					
ANR	981026	ArgumentList	dev		980890	1					
ANR	981027	Argument	dev		980890	0					
ANR	981028	Identifier	dev		980890	0					
ANR	981029	Argument	get_profile		980890	1					
ANR	981030	Identifier	get_profile		980890	0					
ANR	981031	ArgumentList	dev		980890	1					
ANR	981032	Argument	dev		980890	0					
ANR	981033	Identifier	dev		980890	0					
ANR	981034	Argument	& dev_profile		980890	1					
ANR	981035	UnaryOperationExpression	& dev_profile		980890	0					
ANR	981036	UnaryOperator	&		980890	0					
ANR	981037	Identifier	dev_profile		980890	1					
ANR	981038	ExpressionStatement	gray_to_k = dev_profile -> devicegraytok	1111:8:40603:40641	980890	1	True				
ANR	981039	AssignmentExpression	gray_to_k = dev_profile -> devicegraytok		980890	0		=			
ANR	981040	Identifier	gray_to_k		980890	0					
ANR	981041	PtrMemberAccess	dev_profile -> devicegraytok		980890	1					
ANR	981042	Identifier	dev_profile		980890	0					
ANR	981043	Identifier	devicegraytok		980890	1					
ANR	981044	IfStatement	if ( source_pcs != NULL && source_pcs -> cmm_icc_profile_data != NULL )		980890	2					
ANR	981045	Condition	source_pcs != NULL && source_pcs -> cmm_icc_profile_data != NULL	1112:12:40655:40716	980890	0	True				
ANR	981046	AndExpression	source_pcs != NULL && source_pcs -> cmm_icc_profile_data != NULL		980890	0		&&			
ANR	981047	EqualityExpression	source_pcs != NULL		980890	0		!=			
ANR	981048	Identifier	source_pcs		980890	0					
ANR	981049	Identifier	NULL		980890	1					
ANR	981050	EqualityExpression	source_pcs -> cmm_icc_profile_data != NULL		980890	1		!=			
ANR	981051	PtrMemberAccess	source_pcs -> cmm_icc_profile_data		980890	0					
ANR	981052	Identifier	source_pcs		980890	0					
ANR	981053	Identifier	cmm_icc_profile_data		980890	1					
ANR	981054	Identifier	NULL		980890	1					
ANR	981055	CompoundStatement		28:76:1208:1208	980890	1					
ANR	981056	ExpressionStatement	src_space = source_pcs -> cmm_icc_profile_data -> data_cs	1113:12:40733:40786	980890	0	True				
ANR	981057	AssignmentExpression	src_space = source_pcs -> cmm_icc_profile_data -> data_cs		980890	0		=			
ANR	981058	Identifier	src_space		980890	0					
ANR	981059	PtrMemberAccess	source_pcs -> cmm_icc_profile_data -> data_cs		980890	1					
ANR	981060	PtrMemberAccess	source_pcs -> cmm_icc_profile_data		980890	0					
ANR	981061	Identifier	source_pcs		980890	0					
ANR	981062	Identifier	cmm_icc_profile_data		980890	1					
ANR	981063	Identifier	data_cs		980890	1					
ANR	981064	ElseStatement	else		980890	0					
ANR	981065	IfStatement	if ( source_pcs != NULL && source_pcs -> icc_equivalent != NULL )		980890	0					
ANR	981066	Condition	source_pcs != NULL && source_pcs -> icc_equivalent != NULL	1114:19:40807:40862	980890	0	True				
ANR	981067	AndExpression	source_pcs != NULL && source_pcs -> icc_equivalent != NULL		980890	0		&&			
ANR	981068	EqualityExpression	source_pcs != NULL		980890	0		!=			
ANR	981069	Identifier	source_pcs		980890	0					
ANR	981070	Identifier	NULL		980890	1					
ANR	981071	EqualityExpression	source_pcs -> icc_equivalent != NULL		980890	1		!=			
ANR	981072	PtrMemberAccess	source_pcs -> icc_equivalent		980890	0					
ANR	981073	Identifier	source_pcs		980890	0					
ANR	981074	Identifier	icc_equivalent		980890	1					
ANR	981075	Identifier	NULL		980890	1					
ANR	981076	CompoundStatement		30:77:1354:1354	980890	1					
ANR	981077	ExpressionStatement	src_space = source_pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs	1115:12:40879:40948	980890	0	True				
ANR	981078	AssignmentExpression	src_space = source_pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		980890	0		=			
ANR	981079	Identifier	src_space		980890	0					
ANR	981080	PtrMemberAccess	source_pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		980890	1					
ANR	981081	PtrMemberAccess	source_pcs -> icc_equivalent -> cmm_icc_profile_data		980890	0					
ANR	981082	PtrMemberAccess	source_pcs -> icc_equivalent		980890	0					
ANR	981083	Identifier	source_pcs		980890	0					
ANR	981084	Identifier	icc_equivalent		980890	1					
ANR	981085	Identifier	cmm_icc_profile_data		980890	1					
ANR	981086	Identifier	data_cs		980890	1					
ANR	981087	IfStatement	if ( src_space == gsGRAY && gray_to_k )		980890	3					
ANR	981088	Condition	src_space == gsGRAY && gray_to_k	1117:12:40972:41003	980890	0	True				
ANR	981089	AndExpression	src_space == gsGRAY && gray_to_k		980890	0		&&			
ANR	981090	EqualityExpression	src_space == gsGRAY		980890	0		==			
ANR	981091	Identifier	src_space		980890	0					
ANR	981092	Identifier	gsGRAY		980890	1					
ANR	981093	Identifier	gray_to_k		980890	1					
ANR	981094	CompoundStatement		33:46:1495:1495	980890	1					
ANR	981095	ExpressionStatement	"black_index = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , strlen ( ""Black"" ) , SEPARATION_NAME )"	1119:12:41070:41203	980890	0	True				
ANR	981096	AssignmentExpression	"black_index = dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , strlen ( ""Black"" ) , SEPARATION_NAME )"		980890	0		=			
ANR	981097	Identifier	black_index		980890	0					
ANR	981098	CallExpression	"dev_proc ( dev , get_color_comp_index ) ( dev , ""Black"" , strlen ( ""Black"" ) , SEPARATION_NAME )"		980890	1					
ANR	981099	Callee	"dev_proc ( dev , get_color_comp_index )"		980890	0					
ANR	981100	CallExpression	"dev_proc ( dev , get_color_comp_index )"		980890	0					
ANR	981101	Callee	dev_proc		980890	0					
ANR	981102	Identifier	dev_proc		980890	0					
ANR	981103	ArgumentList	dev		980890	1					
ANR	981104	Argument	dev		980890	0					
ANR	981105	Identifier	dev		980890	0					
ANR	981106	Argument	get_color_comp_index		980890	1					
ANR	981107	Identifier	get_color_comp_index		980890	0					
ANR	981108	ArgumentList	dev		980890	1					
ANR	981109	Argument	dev		980890	0					
ANR	981110	Identifier	dev		980890	0					
ANR	981111	Argument	"""Black"""		980890	1					
ANR	981112	PrimaryExpression	"""Black"""		980890	0					
ANR	981113	Argument	"strlen ( ""Black"" )"		980890	2					
ANR	981114	CallExpression	"strlen ( ""Black"" )"		980890	0					
ANR	981115	Callee	strlen		980890	0					
ANR	981116	Identifier	strlen		980890	0					
ANR	981117	ArgumentList	"""Black"""		980890	1					
ANR	981118	Argument	"""Black"""		980890	0					
ANR	981119	PrimaryExpression	"""Black"""		980890	0					
ANR	981120	Argument	SEPARATION_NAME		980890	3					
ANR	981121	Identifier	SEPARATION_NAME		980890	0					
ANR	981122	ExpressionStatement	"cm_comps [ black_index ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ black_index ] ) , effective_transfer [ black_index ] )"	1121:12:41217:41417	980890	1	True				
ANR	981123	AssignmentExpression	"cm_comps [ black_index ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ black_index ] ) , effective_transfer [ black_index ] )"		980890	0		=			
ANR	981124	ArrayIndexing	cm_comps [ black_index ]		980890	0					
ANR	981125	Identifier	cm_comps		980890	0					
ANR	981126	Identifier	black_index		980890	1					
ANR	981127	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ black_index ] ) , effective_transfer [ black_index ] )"		980890	1		-			
ANR	981128	Identifier	frac_1		980890	0					
ANR	981129	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ black_index ] ) , effective_transfer [ black_index ] )"		980890	1					
ANR	981130	Callee	gx_map_color_frac		980890	0					
ANR	981131	Identifier	gx_map_color_frac		980890	0					
ANR	981132	ArgumentList	pgs		980890	1					
ANR	981133	Argument	pgs		980890	0					
ANR	981134	Identifier	pgs		980890	0					
ANR	981135	Argument	( frac ) ( frac_1 - cm_comps [ black_index ] )		980890	1					
ANR	981136	CastExpression	( frac ) ( frac_1 - cm_comps [ black_index ] )		980890	0					
ANR	981137	CastTarget	frac		980890	0					
ANR	981138	AdditiveExpression	frac_1 - cm_comps [ black_index ]		980890	1		-			
ANR	981139	Identifier	frac_1		980890	0					
ANR	981140	ArrayIndexing	cm_comps [ black_index ]		980890	1					
ANR	981141	Identifier	cm_comps		980890	0					
ANR	981142	Identifier	black_index		980890	1					
ANR	981143	Argument	effective_transfer [ black_index ]		980890	2					
ANR	981144	ArrayIndexing	effective_transfer [ black_index ]		980890	0					
ANR	981145	Identifier	effective_transfer		980890	0					
ANR	981146	Identifier	black_index		980890	1					
ANR	981147	ElseStatement	else		980890	0					
ANR	981148	IfStatement	if ( pgs -> effective_transfer_non_identity_count != 0 )		980890	0					
ANR	981149	Condition	pgs -> effective_transfer_non_identity_count != 0	1124:19:41438:41484	980890	0	True				
ANR	981150	EqualityExpression	pgs -> effective_transfer_non_identity_count != 0		980890	0		!=			
ANR	981151	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		980890	0					
ANR	981152	Identifier	pgs		980890	0					
ANR	981153	Identifier	effective_transfer_non_identity_count		980890	1					
ANR	981154	PrimaryExpression	0		980890	1					
ANR	981155	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980890	1					
ANR	981156	ForInit	i = 0 ;	1125:17:41504:41509	980890	0	True				
ANR	981157	AssignmentExpression	i = 0		980890	0		=			
ANR	981158	Identifier	i		980890	0					
ANR	981159	PrimaryExpression	0		980890	1					
ANR	981160	Condition	i < ncomps	1125:24:41511:41520	980890	1	True				
ANR	981161	RelationalExpression	i < ncomps		980890	0		<			
ANR	981162	Identifier	i		980890	0					
ANR	981163	Identifier	ncomps		980890	1					
ANR	981164	PostIncDecOperationExpression	i ++	1125:36:41523:41525	980890	2	True				
ANR	981165	Identifier	i		980890	0					
ANR	981166	IncDec	++		980890	1					
ANR	981167	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1126:16:41544:41670	980890	3	True				
ANR	981168	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980890	0		=			
ANR	981169	ArrayIndexing	cm_comps [ i ]		980890	0					
ANR	981170	Identifier	cm_comps		980890	0					
ANR	981171	Identifier	i		980890	1					
ANR	981172	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980890	1		-			
ANR	981173	Identifier	frac_1		980890	0					
ANR	981174	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		980890	1					
ANR	981175	Callee	gx_map_color_frac		980890	0					
ANR	981176	Identifier	gx_map_color_frac		980890	0					
ANR	981177	ArgumentList	pgs		980890	1					
ANR	981178	Argument	pgs		980890	0					
ANR	981179	Identifier	pgs		980890	0					
ANR	981180	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		980890	1					
ANR	981181	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		980890	0					
ANR	981182	CastTarget	frac		980890	0					
ANR	981183	AdditiveExpression	frac_1 - cm_comps [ i ]		980890	1		-			
ANR	981184	Identifier	frac_1		980890	0					
ANR	981185	ArrayIndexing	cm_comps [ i ]		980890	1					
ANR	981186	Identifier	cm_comps		980890	0					
ANR	981187	Identifier	i		980890	1					
ANR	981188	Argument	effective_transfer [ i ]		980890	2					
ANR	981189	ArrayIndexing	effective_transfer [ i ]		980890	0					
ANR	981190	Identifier	effective_transfer		980890	0					
ANR	981191	Identifier	i		980890	1					
ANR	981192	IfStatement	if ( gx_device_must_halftone ( dev ) )		980890	12					
ANR	981193	Condition	gx_device_must_halftone ( dev )	1131:8:41807:41834	980890	0	True				
ANR	981194	CallExpression	gx_device_must_halftone ( dev )		980890	0					
ANR	981195	Callee	gx_device_must_halftone		980890	0					
ANR	981196	Identifier	gx_device_must_halftone		980890	0					
ANR	981197	ArgumentList	dev		980890	1					
ANR	981198	Argument	dev		980890	0					
ANR	981199	Identifier	dev		980890	0					
ANR	981200	CompoundStatement		47:38:2326:2326	980890	1					
ANR	981201	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		980890	0					
ANR	981202	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1132:12:41851:41960	980890	0	True				
ANR	981203	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		980890	0		==			
ANR	981204	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		980890	0					
ANR	981205	Callee	gx_render_device_DeviceN		980890	0					
ANR	981206	Identifier	gx_render_device_DeviceN		980890	0					
ANR	981207	ArgumentList	cm_comps		980890	1					
ANR	981208	Argument	cm_comps		980890	0					
ANR	981209	Identifier	cm_comps		980890	0					
ANR	981210	Argument	pdc		980890	1					
ANR	981211	Identifier	pdc		980890	0					
ANR	981212	Argument	dev		980890	2					
ANR	981213	Identifier	dev		980890	0					
ANR	981214	Argument	pgs -> dev_ht		980890	3					
ANR	981215	PtrMemberAccess	pgs -> dev_ht		980890	0					
ANR	981216	Identifier	pgs		980890	0					
ANR	981217	Identifier	dev_ht		980890	1					
ANR	981218	Argument	& pgs -> screen_phase [ select ]		980890	4					
ANR	981219	UnaryOperationExpression	& pgs -> screen_phase [ select ]		980890	0					
ANR	981220	UnaryOperator	&		980890	0					
ANR	981221	ArrayIndexing	pgs -> screen_phase [ select ]		980890	1					
ANR	981222	PtrMemberAccess	pgs -> screen_phase		980890	0					
ANR	981223	Identifier	pgs		980890	0					
ANR	981224	Identifier	screen_phase		980890	1					
ANR	981225	Identifier	select		980890	1					
ANR	981226	PrimaryExpression	1		980890	1					
ANR	981227	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1134:12:41975:42018	980890	1	True				
ANR	981228	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		980890	0					
ANR	981229	Callee	gx_color_load_select		980890	0					
ANR	981230	Identifier	gx_color_load_select		980890	0					
ANR	981231	ArgumentList	pdc		980890	1					
ANR	981232	Argument	pdc		980890	0					
ANR	981233	Identifier	pdc		980890	0					
ANR	981234	Argument	pgs		980890	1					
ANR	981235	Identifier	pgs		980890	0					
ANR	981236	Argument	dev		980890	2					
ANR	981237	Identifier	dev		980890	0					
ANR	981238	Argument	select		980890	3					
ANR	981239	Identifier	select		980890	0					
ANR	981240	ReturnStatement	return ;	1135:8:42028:42034	980890	1	True				
ANR	981241	IfStatement	"if ( dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 ) )"		980890	13					
ANR	981242	Condition	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"	1141:8:42256:42316	980890	0	True				
ANR	981243	CallExpression	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"		980890	0					
ANR	981244	Callee	"dev_proc ( dev , dev_spec_op )"		980890	0					
ANR	981245	CallExpression	"dev_proc ( dev , dev_spec_op )"		980890	0					
ANR	981246	Callee	dev_proc		980890	0					
ANR	981247	Identifier	dev_proc		980890	0					
ANR	981248	ArgumentList	dev		980890	1					
ANR	981249	Argument	dev		980890	0					
ANR	981250	Identifier	dev		980890	0					
ANR	981251	Argument	dev_spec_op		980890	1					
ANR	981252	Identifier	dev_spec_op		980890	0					
ANR	981253	ArgumentList	dev		980890	1					
ANR	981254	Argument	dev		980890	0					
ANR	981255	Identifier	dev		980890	0					
ANR	981256	Argument	gxdso_supports_devn		980890	1					
ANR	981257	Identifier	gxdso_supports_devn		980890	0					
ANR	981258	Argument	NULL		980890	2					
ANR	981259	Identifier	NULL		980890	0					
ANR	981260	Argument	0		980890	3					
ANR	981261	PrimaryExpression	0		980890	0					
ANR	981262	CompoundStatement		57:71:2808:2808	980890	1					
ANR	981263	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980890	0					
ANR	981264	ForInit	i = 0 ;	1142:13:42334:42339	980890	0	True				
ANR	981265	AssignmentExpression	i = 0		980890	0		=			
ANR	981266	Identifier	i		980890	0					
ANR	981267	PrimaryExpression	0		980890	1					
ANR	981268	Condition	i < ncomps	1142:20:42341:42350	980890	1	True				
ANR	981269	RelationalExpression	i < ncomps		980890	0		<			
ANR	981270	Identifier	i		980890	0					
ANR	981271	Identifier	ncomps		980890	1					
ANR	981272	PostIncDecOperationExpression	i ++	1142:32:42353:42355	980890	2	True				
ANR	981273	Identifier	i		980890	0					
ANR	981274	IncDec	++		980890	1					
ANR	981275	ExpressionStatement	pdc -> colors . devn . values [ i ] = frac2cv ( cm_comps [ i ] )	1143:12:42370:42419	980890	3	True				
ANR	981276	AssignmentExpression	pdc -> colors . devn . values [ i ] = frac2cv ( cm_comps [ i ] )		980890	0		=			
ANR	981277	ArrayIndexing	pdc -> colors . devn . values [ i ]		980890	0					
ANR	981278	MemberAccess	pdc -> colors . devn . values		980890	0					
ANR	981279	MemberAccess	pdc -> colors . devn		980890	0					
ANR	981280	PtrMemberAccess	pdc -> colors		980890	0					
ANR	981281	Identifier	pdc		980890	0					
ANR	981282	Identifier	colors		980890	1					
ANR	981283	Identifier	devn		980890	1					
ANR	981284	Identifier	values		980890	1					
ANR	981285	Identifier	i		980890	1					
ANR	981286	CallExpression	frac2cv ( cm_comps [ i ] )		980890	1					
ANR	981287	Callee	frac2cv		980890	0					
ANR	981288	Identifier	frac2cv		980890	0					
ANR	981289	ArgumentList	cm_comps [ i ]		980890	1					
ANR	981290	Argument	cm_comps [ i ]		980890	0					
ANR	981291	ArrayIndexing	cm_comps [ i ]		980890	0					
ANR	981292	Identifier	cm_comps		980890	0					
ANR	981293	Identifier	i		980890	1					
ANR	981294	ExpressionStatement	pdc -> type = gx_dc_type_devn	1144:8:42429:42456	980890	1	True				
ANR	981295	AssignmentExpression	pdc -> type = gx_dc_type_devn		980890	0		=			
ANR	981296	PtrMemberAccess	pdc -> type		980890	0					
ANR	981297	Identifier	pdc		980890	0					
ANR	981298	Identifier	type		980890	1					
ANR	981299	Identifier	gx_dc_type_devn		980890	1					
ANR	981300	ElseStatement	else		980890	0					
ANR	981301	CompoundStatement		61:11:2958:2958	980890	0					
ANR	981302	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		980890	0					
ANR	981303	ForInit	i = 0 ;	1146:13:42484:42489	980890	0	True				
ANR	981304	AssignmentExpression	i = 0		980890	0		=			
ANR	981305	Identifier	i		980890	0					
ANR	981306	PrimaryExpression	0		980890	1					
ANR	981307	Condition	i < ncomps	1146:20:42491:42500	980890	1	True				
ANR	981308	RelationalExpression	i < ncomps		980890	0		<			
ANR	981309	Identifier	i		980890	0					
ANR	981310	Identifier	ncomps		980890	1					
ANR	981311	PostIncDecOperationExpression	i ++	1146:32:42503:42505	980890	2	True				
ANR	981312	Identifier	i		980890	0					
ANR	981313	IncDec	++		980890	1					
ANR	981314	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1147:12:42520:42548	980890	3	True				
ANR	981315	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		980890	0		=			
ANR	981316	ArrayIndexing	cv [ i ]		980890	0					
ANR	981317	Identifier	cv		980890	0					
ANR	981318	Identifier	i		980890	1					
ANR	981319	CallExpression	frac2cv ( cm_comps [ i ] )		980890	1					
ANR	981320	Callee	frac2cv		980890	0					
ANR	981321	Identifier	frac2cv		980890	0					
ANR	981322	ArgumentList	cm_comps [ i ]		980890	1					
ANR	981323	Argument	cm_comps [ i ]		980890	0					
ANR	981324	ArrayIndexing	cm_comps [ i ]		980890	0					
ANR	981325	Identifier	cm_comps		980890	0					
ANR	981326	Identifier	i		980890	1					
ANR	981327	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , cv )"	1148:8:42558:42602	980890	1	True				
ANR	981328	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , cv )"		980890	0		=			
ANR	981329	Identifier	color		980890	0					
ANR	981330	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		980890	1					
ANR	981331	Callee	"dev_proc ( dev , encode_color )"		980890	0					
ANR	981332	CallExpression	"dev_proc ( dev , encode_color )"		980890	0					
ANR	981333	Callee	dev_proc		980890	0					
ANR	981334	Identifier	dev_proc		980890	0					
ANR	981335	ArgumentList	dev		980890	1					
ANR	981336	Argument	dev		980890	0					
ANR	981337	Identifier	dev		980890	0					
ANR	981338	Argument	encode_color		980890	1					
ANR	981339	Identifier	encode_color		980890	0					
ANR	981340	ArgumentList	dev		980890	1					
ANR	981341	Argument	dev		980890	0					
ANR	981342	Identifier	dev		980890	0					
ANR	981343	Argument	cv		980890	1					
ANR	981344	Identifier	cv		980890	0					
ANR	981345	IfStatement	if ( color != gx_no_color_index )		980890	2					
ANR	981346	Condition	color != gx_no_color_index	1149:12:42616:42641	980890	0	True				
ANR	981347	EqualityExpression	color != gx_no_color_index		980890	0		!=			
ANR	981348	Identifier	color		980890	0					
ANR	981349	Identifier	gx_no_color_index		980890	1					
ANR	981350	ExpressionStatement	"color_set_pure ( pdc , color )"	1150:12:42656:42682	980890	1	True				
ANR	981351	CallExpression	"color_set_pure ( pdc , color )"		980890	0					
ANR	981352	Callee	color_set_pure		980890	0					
ANR	981353	Identifier	color_set_pure		980890	0					
ANR	981354	ArgumentList	pdc		980890	1					
ANR	981355	Argument	pdc		980890	0					
ANR	981356	Identifier	pdc		980890	0					
ANR	981357	Argument	color		980890	1					
ANR	981358	Identifier	color		980890	0					
ANR	981359	ElseStatement	else		980890	0					
ANR	981360	CompoundStatement		67:13:3186:3186	980890	0					
ANR	981361	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		980890	0					
ANR	981362	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1152:16:42715:42828	980890	0	True				
ANR	981363	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		980890	0		==			
ANR	981364	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		980890	0					
ANR	981365	Callee	gx_render_device_DeviceN		980890	0					
ANR	981366	Identifier	gx_render_device_DeviceN		980890	0					
ANR	981367	ArgumentList	cm_comps		980890	1					
ANR	981368	Argument	cm_comps		980890	0					
ANR	981369	Identifier	cm_comps		980890	0					
ANR	981370	Argument	pdc		980890	1					
ANR	981371	Identifier	pdc		980890	0					
ANR	981372	Argument	dev		980890	2					
ANR	981373	Identifier	dev		980890	0					
ANR	981374	Argument	pgs -> dev_ht		980890	3					
ANR	981375	PtrMemberAccess	pgs -> dev_ht		980890	0					
ANR	981376	Identifier	pgs		980890	0					
ANR	981377	Identifier	dev_ht		980890	1					
ANR	981378	Argument	& pgs -> screen_phase [ select ]		980890	4					
ANR	981379	UnaryOperationExpression	& pgs -> screen_phase [ select ]		980890	0					
ANR	981380	UnaryOperator	&		980890	0					
ANR	981381	ArrayIndexing	pgs -> screen_phase [ select ]		980890	1					
ANR	981382	PtrMemberAccess	pgs -> screen_phase		980890	0					
ANR	981383	Identifier	pgs		980890	0					
ANR	981384	Identifier	screen_phase		980890	1					
ANR	981385	Identifier	select		980890	1					
ANR	981386	PrimaryExpression	1		980890	1					
ANR	981387	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1154:16:42847:42890	980890	1	True				
ANR	981388	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		980890	0					
ANR	981389	Callee	gx_color_load_select		980890	0					
ANR	981390	Identifier	gx_color_load_select		980890	0					
ANR	981391	ArgumentList	pdc		980890	1					
ANR	981392	Argument	pdc		980890	0					
ANR	981393	Identifier	pdc		980890	0					
ANR	981394	Argument	pgs		980890	1					
ANR	981395	Identifier	pgs		980890	0					
ANR	981396	Argument	dev		980890	2					
ANR	981397	Identifier	dev		980890	0					
ANR	981398	Argument	select		980890	3					
ANR	981399	Identifier	select		980890	0					
ANR	981400	ReturnStatement	return ;	1157:4:42912:42918	980890	14	True				
ANR	981401	ReturnType	static void		980890	1					
ANR	981402	Identifier	cmap_cmyk_direct		980890	2					
ANR	981403	ParameterList	"frac c , frac m , frac y , frac k , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select , const gs_color_space * source_pcs"		980890	3					
ANR	981404	Parameter	frac c	1082:17:39345:39350	980890	0	True				
ANR	981405	ParameterType	frac		980890	0					
ANR	981406	Identifier	c		980890	1					
ANR	981407	Parameter	frac m	1082:25:39353:39358	980890	1	True				
ANR	981408	ParameterType	frac		980890	0					
ANR	981409	Identifier	m		980890	1					
ANR	981410	Parameter	frac y	1082:33:39361:39366	980890	2	True				
ANR	981411	ParameterType	frac		980890	0					
ANR	981412	Identifier	y		980890	1					
ANR	981413	Parameter	frac k	1082:41:39369:39374	980890	3	True				
ANR	981414	ParameterType	frac		980890	0					
ANR	981415	Identifier	k		980890	1					
ANR	981416	Parameter	gx_device_color * pdc	1082:49:39377:39397	980890	4	True				
ANR	981417	ParameterType	gx_device_color *		980890	0					
ANR	981418	Identifier	pdc		980890	1					
ANR	981419	Parameter	const gs_gstate * pgs	1083:5:39405:39425	980890	5	True				
ANR	981420	ParameterType	const gs_gstate *		980890	0					
ANR	981421	Identifier	pgs		980890	1					
ANR	981422	Parameter	gx_device * dev	1083:28:39428:39442	980890	6	True				
ANR	981423	ParameterType	gx_device *		980890	0					
ANR	981424	Identifier	dev		980890	1					
ANR	981425	Parameter	gs_color_select_t select	1083:45:39445:39468	980890	7	True				
ANR	981426	ParameterType	gs_color_select_t		980890	0					
ANR	981427	Identifier	select		980890	1					
ANR	981428	Parameter	const gs_color_space * source_pcs	1084:5:39476:39507	980890	8	True				
ANR	981429	ParameterType	const gs_color_space *		980890	0					
ANR	981430	Identifier	source_pcs		980890	1					
ANR	981431	CFGEntryNode	ENTRY		980890		True				
ANR	981432	CFGExitNode	EXIT		980890		True				
ANR	981433	Symbol	pdc -> type		980890						
ANR	981434	Symbol	* source_pcs -> icc_equivalent		980890						
ANR	981435	Symbol	select		980890						
ANR	981436	Symbol	* pdc -> colors . devn		980890						
ANR	981437	Symbol	* pgs		980890						
ANR	981438	Symbol	encode_color		980890						
ANR	981439	Symbol	dev_profile		980890						
ANR	981440	Symbol	dev_spec_op		980890						
ANR	981441	Symbol	GX_CINFO_POLARITY_ADDITIVE		980890						
ANR	981442	Symbol	source_pcs -> icc_equivalent -> cmm_icc_profile_data		980890						
ANR	981443	Symbol	* black_index		980890						
ANR	981444	Symbol	effective_transfer		980890						
ANR	981445	Symbol	gx_render_device_DeviceN		980890						
ANR	981446	Symbol	strlen		980890						
ANR	981447	Symbol	* source_pcs -> cmm_icc_profile_data		980890						
ANR	981448	Symbol	gx_no_color_index		980890						
ANR	981449	Symbol	dev		980890						
ANR	981450	Symbol	get_color_mapping_procs_subclass		980890						
ANR	981451	Symbol	dev -> color_info . polarity		980890						
ANR	981452	Symbol	dev_profile -> devicegraytok		980890						
ANR	981453	Symbol	* pdc		980890						
ANR	981454	Symbol	* source_pcs -> icc_equivalent -> cmm_icc_profile_data		980890						
ANR	981455	Symbol	scm		980890						
ANR	981456	Symbol	* cm_comps		980890						
ANR	981457	Symbol	pdc -> colors . devn . values		980890						
ANR	981458	Symbol	frac_1		980890						
ANR	981459	Symbol	NULL		980890						
ANR	981460	Symbol	pdc -> colors		980890						
ANR	981461	Symbol	dev -> color_info . num_components		980890						
ANR	981462	Symbol	& dev_profile		980890						
ANR	981463	Symbol	* dev_profile		980890						
ANR	981464	Symbol	pgs -> screen_phase		980890						
ANR	981465	Symbol	gxdso_supports_devn		980890						
ANR	981466	Symbol	* * source_pcs -> icc_equivalent		980890						
ANR	981467	Symbol	gx_map_color_frac		980890						
ANR	981468	Symbol	pgs -> effective_transfer_non_identity_count		980890						
ANR	981469	Symbol	source_pcs -> cmm_icc_profile_data -> data_cs		980890						
ANR	981470	Symbol	* cv		980890						
ANR	981471	Symbol	frac2cv		980890						
ANR	981472	Symbol	* dev		980890						
ANR	981473	Symbol	gx_device_must_halftone		980890						
ANR	981474	Symbol	* * pdc		980890						
ANR	981475	Symbol	color		980890						
ANR	981476	Symbol	ncomps		980890						
ANR	981477	Symbol	dev -> color_info		980890						
ANR	981478	Symbol	gx_dc_type_devn		980890						
ANR	981479	Symbol	black_index		980890						
ANR	981480	Symbol	* effective_transfer		980890						
ANR	981481	Symbol	dev_proc		980890						
ANR	981482	Symbol	source_pcs -> cmm_icc_profile_data		980890						
ANR	981483	Symbol	src_space		980890						
ANR	981484	Symbol	pdc -> colors . devn		980890						
ANR	981485	Symbol	pgs		980890						
ANR	981486	Symbol	* pdc -> colors . devn . values		980890						
ANR	981487	Symbol	get_profile		980890						
ANR	981488	Symbol	c		980890						
ANR	981489	Symbol	get_color_comp_index		980890						
ANR	981490	Symbol	i		980890						
ANR	981491	Symbol	SEPARATION_NAME		980890						
ANR	981492	Symbol	k		980890						
ANR	981493	Symbol	m		980890						
ANR	981494	Symbol	* * source_pcs		980890						
ANR	981495	Symbol	pdc		980890						
ANR	981496	Symbol	source_pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		980890						
ANR	981497	Symbol	cm_comps		980890						
ANR	981498	Symbol	cv		980890						
ANR	981499	Symbol	* i		980890						
ANR	981500	Symbol	* source_pcs		980890						
ANR	981501	Symbol	gray_to_k		980890						
ANR	981502	Symbol	gsGRAY		980890						
ANR	981503	Symbol	pgs -> dev_ht		980890						
ANR	981504	Symbol	y		980890						
ANR	981505	Symbol	source_pcs		980890						
ANR	981506	Symbol	source_pcs -> icc_equivalent		980890						
ANR	981507	Symbol	gsUNDEFINED		980890						
ANR	981508	Symbol	* pdc -> colors		980890						
ANR	981509	Symbol	* * * source_pcs		980890						
ANR	981510	Function	cmap_rgb_alpha_halftoned	1160:0:42923:44473							
ANR	981511	FunctionDef	"cmap_rgb_alpha_halftoned (frac r , frac g , frac b , frac alpha , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		981510	0					
ANR	981512	CompoundStatement		1164:0:43118:44473	981510	0					
ANR	981513	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1165:4:43124:43172	981510	0	True				
ANR	981514	IdentifierDecl	i		981510	0					
ANR	981515	IdentifierDeclType	uchar		981510	0					
ANR	981516	Identifier	i		981510	1					
ANR	981517	IdentifierDecl	ncomps = dev -> color_info . num_components		981510	1					
ANR	981518	IdentifierDeclType	uchar		981510	0					
ANR	981519	Identifier	ncomps		981510	1					
ANR	981520	AssignmentExpression	ncomps = dev -> color_info . num_components		981510	2		=			
ANR	981521	Identifier	ncomps		981510	0					
ANR	981522	MemberAccess	dev -> color_info . num_components		981510	1					
ANR	981523	PtrMemberAccess	dev -> color_info		981510	0					
ANR	981524	Identifier	dev		981510	0					
ANR	981525	Identifier	color_info		981510	1					
ANR	981526	Identifier	num_components		981510	1					
ANR	981527	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1166:4:43178:43223	981510	1	True				
ANR	981528	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		981510	0					
ANR	981529	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		981510	0					
ANR	981530	Identifier	cm_comps		981510	1					
ANR	981531	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		981510	2					
ANR	981532	IdentifierDeclStatement	subclass_color_mappings scm ;	1167:4:43229:43256	981510	2	True				
ANR	981533	IdentifierDecl	scm		981510	0					
ANR	981534	IdentifierDeclType	subclass_color_mappings		981510	0					
ANR	981535	Identifier	scm		981510	1					
ANR	981536	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	1170:4:43296:43339	981510	3	True				
ANR	981537	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		981510	0		=			
ANR	981538	Identifier	scm		981510	0					
ANR	981539	CallExpression	get_color_mapping_procs_subclass ( dev )		981510	1					
ANR	981540	Callee	get_color_mapping_procs_subclass		981510	0					
ANR	981541	Identifier	get_color_mapping_procs_subclass		981510	0					
ANR	981542	ArgumentList	dev		981510	1					
ANR	981543	Argument	dev		981510	0					
ANR	981544	Identifier	dev		981510	0					
ANR	981545	ExpressionStatement	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"	1171:4:43345:43390	981510	4	True				
ANR	981546	CallExpression	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"		981510	0					
ANR	981547	Callee	map_rgb_subclass		981510	0					
ANR	981548	Identifier	map_rgb_subclass		981510	0					
ANR	981549	ArgumentList	scm		981510	1					
ANR	981550	Argument	scm		981510	0					
ANR	981551	Identifier	scm		981510	0					
ANR	981552	Argument	pgs		981510	1					
ANR	981553	Identifier	pgs		981510	0					
ANR	981554	Argument	r		981510	2					
ANR	981555	Identifier	r		981510	0					
ANR	981556	Argument	g		981510	3					
ANR	981557	Identifier	g		981510	0					
ANR	981558	Argument	b		981510	4					
ANR	981559	Identifier	b		981510	0					
ANR	981560	Argument	cm_comps		981510	5					
ANR	981561	Identifier	cm_comps		981510	0					
ANR	981562	IfStatement	if ( alpha != frac_1 )		981510	5					
ANR	981563	Condition	alpha != frac_1	1174:8:43459:43473	981510	0	True				
ANR	981564	EqualityExpression	alpha != frac_1		981510	0		!=			
ANR	981565	Identifier	alpha		981510	0					
ANR	981566	Identifier	frac_1		981510	1					
ANR	981567	CompoundStatement		13:8:400:432	981510	1					
ANR	981568	IdentifierDeclStatement	frac alpha_bias = frac_1 - alpha ;	1176:8:43519:43551	981510	0	True				
ANR	981569	IdentifierDecl	alpha_bias = frac_1 - alpha		981510	0					
ANR	981570	IdentifierDeclType	frac		981510	0					
ANR	981571	Identifier	alpha_bias		981510	1					
ANR	981572	AssignmentExpression	alpha_bias = frac_1 - alpha		981510	2		=			
ANR	981573	Identifier	alpha_bias		981510	0					
ANR	981574	AdditiveExpression	frac_1 - alpha		981510	1		-			
ANR	981575	Identifier	frac_1		981510	0					
ANR	981576	Identifier	alpha		981510	1					
ANR	981577	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981510	1					
ANR	981578	ForInit	i = 0 ;	1181:13:43609:43614	981510	0	True				
ANR	981579	AssignmentExpression	i = 0		981510	0		=			
ANR	981580	Identifier	i		981510	0					
ANR	981581	PrimaryExpression	0		981510	1					
ANR	981582	Condition	i < ncomps	1181:20:43616:43625	981510	1	True				
ANR	981583	RelationalExpression	i < ncomps		981510	0		<			
ANR	981584	Identifier	i		981510	0					
ANR	981585	Identifier	ncomps		981510	1					
ANR	981586	PostIncDecOperationExpression	i ++	1181:32:43628:43630	981510	2	True				
ANR	981587	Identifier	i		981510	0					
ANR	981588	IncDec	++		981510	1					
ANR	981589	ExpressionStatement	cm_comps [ i ] = ( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1 + alpha_bias	1182:12:43645:43714	981510	3	True				
ANR	981590	AssignmentExpression	cm_comps [ i ] = ( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1 + alpha_bias		981510	0		=			
ANR	981591	ArrayIndexing	cm_comps [ i ]		981510	0					
ANR	981592	Identifier	cm_comps		981510	0					
ANR	981593	Identifier	i		981510	1					
ANR	981594	AdditiveExpression	( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1 + alpha_bias		981510	1		+			
ANR	981595	MultiplicativeExpression	( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1		981510	0		/			
ANR	981596	CastExpression	( frac ) ( ( long ) cm_comps [ i ] * alpha )		981510	0					
ANR	981597	CastTarget	frac		981510	0					
ANR	981598	MultiplicativeExpression	( long ) cm_comps [ i ] * alpha		981510	1		*			
ANR	981599	CastExpression	( long ) cm_comps [ i ]		981510	0					
ANR	981600	CastTarget	long		981510	0					
ANR	981601	ArrayIndexing	cm_comps [ i ]		981510	1					
ANR	981602	Identifier	cm_comps		981510	0					
ANR	981603	Identifier	i		981510	1					
ANR	981604	Identifier	alpha		981510	1					
ANR	981605	Identifier	frac_1		981510	1					
ANR	981606	Identifier	alpha_bias		981510	1					
ANR	981607	IfStatement	if ( pgs -> effective_transfer_non_identity_count != 0 )		981510	6					
ANR	981608	Condition	pgs -> effective_transfer_non_identity_count != 0	1186:8:43797:43843	981510	0	True				
ANR	981609	EqualityExpression	pgs -> effective_transfer_non_identity_count != 0		981510	0		!=			
ANR	981610	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		981510	0					
ANR	981611	Identifier	pgs		981510	0					
ANR	981612	Identifier	effective_transfer_non_identity_count		981510	1					
ANR	981613	PrimaryExpression	0		981510	1					
ANR	981614	CompoundStatement		23:57:727:727	981510	1					
ANR	981615	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		981510	0					
ANR	981616	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1187:12:43860:43913	981510	0	True				
ANR	981617	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		981510	0		==			
ANR	981618	MemberAccess	dev -> color_info . polarity		981510	0					
ANR	981619	PtrMemberAccess	dev -> color_info		981510	0					
ANR	981620	Identifier	dev		981510	0					
ANR	981621	Identifier	color_info		981510	1					
ANR	981622	Identifier	polarity		981510	1					
ANR	981623	Identifier	GX_CINFO_POLARITY_ADDITIVE		981510	1					
ANR	981624	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981510	1					
ANR	981625	ForInit	i = 0 ;	1188:17:43933:43938	981510	0	True				
ANR	981626	AssignmentExpression	i = 0		981510	0		=			
ANR	981627	Identifier	i		981510	0					
ANR	981628	PrimaryExpression	0		981510	1					
ANR	981629	Condition	i < ncomps	1188:24:43940:43949	981510	1	True				
ANR	981630	RelationalExpression	i < ncomps		981510	0		<			
ANR	981631	Identifier	i		981510	0					
ANR	981632	Identifier	ncomps		981510	1					
ANR	981633	PostIncDecOperationExpression	i ++	1188:36:43952:43954	981510	2	True				
ANR	981634	Identifier	i		981510	0					
ANR	981635	IncDec	++		981510	1					
ANR	981636	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1189:16:43973:44077	981510	3	True				
ANR	981637	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		981510	0		=			
ANR	981638	ArrayIndexing	cm_comps [ i ]		981510	0					
ANR	981639	Identifier	cm_comps		981510	0					
ANR	981640	Identifier	i		981510	1					
ANR	981641	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		981510	1					
ANR	981642	Callee	gx_map_color_frac		981510	0					
ANR	981643	Identifier	gx_map_color_frac		981510	0					
ANR	981644	ArgumentList	pgs		981510	1					
ANR	981645	Argument	pgs		981510	0					
ANR	981646	Identifier	pgs		981510	0					
ANR	981647	Argument	cm_comps [ i ]		981510	1					
ANR	981648	ArrayIndexing	cm_comps [ i ]		981510	0					
ANR	981649	Identifier	cm_comps		981510	0					
ANR	981650	Identifier	i		981510	1					
ANR	981651	Argument	effective_transfer [ i ]		981510	2					
ANR	981652	ArrayIndexing	effective_transfer [ i ]		981510	0					
ANR	981653	Identifier	effective_transfer		981510	0					
ANR	981654	Identifier	i		981510	1					
ANR	981655	ElseStatement	else		981510	0					
ANR	981656	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981510	0					
ANR	981657	ForInit	i = 0 ;	1192:17:44109:44114	981510	0	True				
ANR	981658	AssignmentExpression	i = 0		981510	0		=			
ANR	981659	Identifier	i		981510	0					
ANR	981660	PrimaryExpression	0		981510	1					
ANR	981661	Condition	i < ncomps	1192:24:44116:44125	981510	1	True				
ANR	981662	RelationalExpression	i < ncomps		981510	0		<			
ANR	981663	Identifier	i		981510	0					
ANR	981664	Identifier	ncomps		981510	1					
ANR	981665	PostIncDecOperationExpression	i ++	1192:36:44128:44130	981510	2	True				
ANR	981666	Identifier	i		981510	0					
ANR	981667	IncDec	++		981510	1					
ANR	981668	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1193:16:44149:44271	981510	3	True				
ANR	981669	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981510	0		=			
ANR	981670	ArrayIndexing	cm_comps [ i ]		981510	0					
ANR	981671	Identifier	cm_comps		981510	0					
ANR	981672	Identifier	i		981510	1					
ANR	981673	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981510	1		-			
ANR	981674	Identifier	frac_1		981510	0					
ANR	981675	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981510	1					
ANR	981676	Callee	gx_map_color_frac		981510	0					
ANR	981677	Identifier	gx_map_color_frac		981510	0					
ANR	981678	ArgumentList	pgs		981510	1					
ANR	981679	Argument	pgs		981510	0					
ANR	981680	Identifier	pgs		981510	0					
ANR	981681	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		981510	1					
ANR	981682	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		981510	0					
ANR	981683	CastTarget	frac		981510	0					
ANR	981684	AdditiveExpression	frac_1 - cm_comps [ i ]		981510	1		-			
ANR	981685	Identifier	frac_1		981510	0					
ANR	981686	ArrayIndexing	cm_comps [ i ]		981510	1					
ANR	981687	Identifier	cm_comps		981510	0					
ANR	981688	Identifier	i		981510	1					
ANR	981689	Argument	effective_transfer [ i ]		981510	2					
ANR	981690	ArrayIndexing	effective_transfer [ i ]		981510	0					
ANR	981691	Identifier	effective_transfer		981510	0					
ANR	981692	Identifier	i		981510	1					
ANR	981693	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		981510	7					
ANR	981694	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1197:8:44288:44417	981510	0	True				
ANR	981695	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		981510	0		==			
ANR	981696	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		981510	0					
ANR	981697	Callee	gx_render_device_DeviceN		981510	0					
ANR	981698	Identifier	gx_render_device_DeviceN		981510	0					
ANR	981699	ArgumentList	cm_comps		981510	1					
ANR	981700	Argument	cm_comps		981510	0					
ANR	981701	Identifier	cm_comps		981510	0					
ANR	981702	Argument	pdc		981510	1					
ANR	981703	Identifier	pdc		981510	0					
ANR	981704	Argument	dev		981510	2					
ANR	981705	Identifier	dev		981510	0					
ANR	981706	Argument	pgs -> dev_ht		981510	3					
ANR	981707	PtrMemberAccess	pgs -> dev_ht		981510	0					
ANR	981708	Identifier	pgs		981510	0					
ANR	981709	Identifier	dev_ht		981510	1					
ANR	981710	Argument	& pgs -> screen_phase [ select ]		981510	4					
ANR	981711	UnaryOperationExpression	& pgs -> screen_phase [ select ]		981510	0					
ANR	981712	UnaryOperator	&		981510	0					
ANR	981713	ArrayIndexing	pgs -> screen_phase [ select ]		981510	1					
ANR	981714	PtrMemberAccess	pgs -> screen_phase		981510	0					
ANR	981715	Identifier	pgs		981510	0					
ANR	981716	Identifier	screen_phase		981510	1					
ANR	981717	Identifier	select		981510	1					
ANR	981718	PrimaryExpression	1		981510	1					
ANR	981719	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1199:8:44428:44471	981510	1	True				
ANR	981720	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		981510	0					
ANR	981721	Callee	gx_color_load_select		981510	0					
ANR	981722	Identifier	gx_color_load_select		981510	0					
ANR	981723	ArgumentList	pdc		981510	1					
ANR	981724	Argument	pdc		981510	0					
ANR	981725	Identifier	pdc		981510	0					
ANR	981726	Argument	pgs		981510	1					
ANR	981727	Identifier	pgs		981510	0					
ANR	981728	Argument	dev		981510	2					
ANR	981729	Identifier	dev		981510	0					
ANR	981730	Argument	select		981510	3					
ANR	981731	Identifier	select		981510	0					
ANR	981732	ReturnType	static void		981510	1					
ANR	981733	Identifier	cmap_rgb_alpha_halftoned		981510	2					
ANR	981734	ParameterList	"frac r , frac g , frac b , frac alpha , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		981510	3					
ANR	981735	Parameter	frac r	1161:25:42960:42965	981510	0	True				
ANR	981736	ParameterType	frac		981510	0					
ANR	981737	Identifier	r		981510	1					
ANR	981738	Parameter	frac g	1161:33:42968:42973	981510	1	True				
ANR	981739	ParameterType	frac		981510	0					
ANR	981740	Identifier	g		981510	1					
ANR	981741	Parameter	frac b	1161:41:42976:42981	981510	2	True				
ANR	981742	ParameterType	frac		981510	0					
ANR	981743	Identifier	b		981510	1					
ANR	981744	Parameter	frac alpha	1161:49:42984:42993	981510	3	True				
ANR	981745	ParameterType	frac		981510	0					
ANR	981746	Identifier	alpha		981510	1					
ANR	981747	Parameter	gx_device_color * pdc	1162:8:43004:43024	981510	4	True				
ANR	981748	ParameterType	gx_device_color *		981510	0					
ANR	981749	Identifier	pdc		981510	1					
ANR	981750	Parameter	const gs_gstate * pgs	1162:31:43027:43047	981510	5	True				
ANR	981751	ParameterType	const gs_gstate *		981510	0					
ANR	981752	Identifier	pgs		981510	1					
ANR	981753	Parameter	gx_device * dev	1162:54:43050:43064	981510	6	True				
ANR	981754	ParameterType	gx_device *		981510	0					
ANR	981755	Identifier	dev		981510	1					
ANR	981756	Parameter	gs_color_select_t select	1163:25:43092:43115	981510	7	True				
ANR	981757	ParameterType	gs_color_select_t		981510	0					
ANR	981758	Identifier	select		981510	1					
ANR	981759	CFGEntryNode	ENTRY		981510		True				
ANR	981760	CFGExitNode	EXIT		981510		True				
ANR	981761	Symbol	* dev		981510						
ANR	981762	Symbol	select		981510						
ANR	981763	Symbol	* pgs		981510						
ANR	981764	Symbol	ncomps		981510						
ANR	981765	Symbol	dev -> color_info		981510						
ANR	981766	Symbol	GX_CINFO_POLARITY_ADDITIVE		981510						
ANR	981767	Symbol	effective_transfer		981510						
ANR	981768	Symbol	gx_render_device_DeviceN		981510						
ANR	981769	Symbol	* effective_transfer		981510						
ANR	981770	Symbol	dev		981510						
ANR	981771	Symbol	get_color_mapping_procs_subclass		981510						
ANR	981772	Symbol	dev -> color_info . polarity		981510						
ANR	981773	Symbol	alpha		981510						
ANR	981774	Symbol	alpha_bias		981510						
ANR	981775	Symbol	scm		981510						
ANR	981776	Symbol	* cm_comps		981510						
ANR	981777	Symbol	pgs		981510						
ANR	981778	Symbol	b		981510						
ANR	981779	Symbol	frac_1		981510						
ANR	981780	Symbol	dev -> color_info . num_components		981510						
ANR	981781	Symbol	g		981510						
ANR	981782	Symbol	i		981510						
ANR	981783	Symbol	pgs -> screen_phase		981510						
ANR	981784	Symbol	pdc		981510						
ANR	981785	Symbol	cm_comps		981510						
ANR	981786	Symbol	r		981510						
ANR	981787	Symbol	* i		981510						
ANR	981788	Symbol	gx_map_color_frac		981510						
ANR	981789	Symbol	pgs -> effective_transfer_non_identity_count		981510						
ANR	981790	Symbol	pgs -> dev_ht		981510						
ANR	981791	Function	cmap_rgb_alpha_direct	1202:0:44476:46641							
ANR	981792	FunctionDef	"cmap_rgb_alpha_direct (frac r , frac g , frac b , frac alpha , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		981791	0					
ANR	981793	CompoundStatement		1205:0:44640:46641	981791	0					
ANR	981794	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1206:4:44646:44694	981791	0	True				
ANR	981795	IdentifierDecl	i		981791	0					
ANR	981796	IdentifierDeclType	uchar		981791	0					
ANR	981797	Identifier	i		981791	1					
ANR	981798	IdentifierDecl	ncomps = dev -> color_info . num_components		981791	1					
ANR	981799	IdentifierDeclType	uchar		981791	0					
ANR	981800	Identifier	ncomps		981791	1					
ANR	981801	AssignmentExpression	ncomps = dev -> color_info . num_components		981791	2		=			
ANR	981802	Identifier	ncomps		981791	0					
ANR	981803	MemberAccess	dev -> color_info . num_components		981791	1					
ANR	981804	PtrMemberAccess	dev -> color_info		981791	0					
ANR	981805	Identifier	dev		981791	0					
ANR	981806	Identifier	color_info		981791	1					
ANR	981807	Identifier	num_components		981791	1					
ANR	981808	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1207:4:44700:44745	981791	1	True				
ANR	981809	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		981791	0					
ANR	981810	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		981791	0					
ANR	981811	Identifier	cm_comps		981791	1					
ANR	981812	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		981791	2					
ANR	981813	IdentifierDeclStatement	"gx_color_value cv_alpha , cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;"	1208:4:44751:44810	981791	2	True				
ANR	981814	IdentifierDecl	cv_alpha		981791	0					
ANR	981815	IdentifierDeclType	gx_color_value		981791	0					
ANR	981816	Identifier	cv_alpha		981791	1					
ANR	981817	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		981791	1					
ANR	981818	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		981791	0					
ANR	981819	Identifier	cv		981791	1					
ANR	981820	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		981791	2					
ANR	981821	IdentifierDeclStatement	gx_color_index color ;	1209:4:44816:44836	981791	3	True				
ANR	981822	IdentifierDecl	color		981791	0					
ANR	981823	IdentifierDeclType	gx_color_index		981791	0					
ANR	981824	Identifier	color		981791	1					
ANR	981825	IdentifierDeclStatement	subclass_color_mappings scm ;	1210:4:44842:44869	981791	4	True				
ANR	981826	IdentifierDecl	scm		981791	0					
ANR	981827	IdentifierDeclType	subclass_color_mappings		981791	0					
ANR	981828	Identifier	scm		981791	1					
ANR	981829	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	1213:4:44909:44952	981791	5	True				
ANR	981830	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		981791	0		=			
ANR	981831	Identifier	scm		981791	0					
ANR	981832	CallExpression	get_color_mapping_procs_subclass ( dev )		981791	1					
ANR	981833	Callee	get_color_mapping_procs_subclass		981791	0					
ANR	981834	Identifier	get_color_mapping_procs_subclass		981791	0					
ANR	981835	ArgumentList	dev		981791	1					
ANR	981836	Argument	dev		981791	0					
ANR	981837	Identifier	dev		981791	0					
ANR	981838	ExpressionStatement	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"	1214:4:44958:45003	981791	6	True				
ANR	981839	CallExpression	"map_rgb_subclass ( scm , pgs , r , g , b , cm_comps )"		981791	0					
ANR	981840	Callee	map_rgb_subclass		981791	0					
ANR	981841	Identifier	map_rgb_subclass		981791	0					
ANR	981842	ArgumentList	scm		981791	1					
ANR	981843	Argument	scm		981791	0					
ANR	981844	Identifier	scm		981791	0					
ANR	981845	Argument	pgs		981791	1					
ANR	981846	Identifier	pgs		981791	0					
ANR	981847	Argument	r		981791	2					
ANR	981848	Identifier	r		981791	0					
ANR	981849	Argument	g		981791	3					
ANR	981850	Identifier	g		981791	0					
ANR	981851	Argument	b		981791	4					
ANR	981852	Identifier	b		981791	0					
ANR	981853	Argument	cm_comps		981791	5					
ANR	981854	Identifier	cm_comps		981791	0					
ANR	981855	IfStatement	if ( alpha != frac_1 )		981791	7					
ANR	981856	Condition	alpha != frac_1	1217:8:45072:45086	981791	0	True				
ANR	981857	EqualityExpression	alpha != frac_1		981791	0		!=			
ANR	981858	Identifier	alpha		981791	0					
ANR	981859	Identifier	frac_1		981791	1					
ANR	981860	CompoundStatement		15:8:491:523	981791	1					
ANR	981861	IdentifierDeclStatement	frac alpha_bias = frac_1 - alpha ;	1219:8:45132:45164	981791	0	True				
ANR	981862	IdentifierDecl	alpha_bias = frac_1 - alpha		981791	0					
ANR	981863	IdentifierDeclType	frac		981791	0					
ANR	981864	Identifier	alpha_bias		981791	1					
ANR	981865	AssignmentExpression	alpha_bias = frac_1 - alpha		981791	2		=			
ANR	981866	Identifier	alpha_bias		981791	0					
ANR	981867	AdditiveExpression	frac_1 - alpha		981791	1		-			
ANR	981868	Identifier	frac_1		981791	0					
ANR	981869	Identifier	alpha		981791	1					
ANR	981870	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981791	1					
ANR	981871	ForInit	i = 0 ;	1224:13:45222:45227	981791	0	True				
ANR	981872	AssignmentExpression	i = 0		981791	0		=			
ANR	981873	Identifier	i		981791	0					
ANR	981874	PrimaryExpression	0		981791	1					
ANR	981875	Condition	i < ncomps	1224:20:45229:45238	981791	1	True				
ANR	981876	RelationalExpression	i < ncomps		981791	0		<			
ANR	981877	Identifier	i		981791	0					
ANR	981878	Identifier	ncomps		981791	1					
ANR	981879	PostIncDecOperationExpression	i ++	1224:32:45241:45243	981791	2	True				
ANR	981880	Identifier	i		981791	0					
ANR	981881	IncDec	++		981791	1					
ANR	981882	ExpressionStatement	cm_comps [ i ] = ( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1 + alpha_bias	1225:12:45258:45327	981791	3	True				
ANR	981883	AssignmentExpression	cm_comps [ i ] = ( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1 + alpha_bias		981791	0		=			
ANR	981884	ArrayIndexing	cm_comps [ i ]		981791	0					
ANR	981885	Identifier	cm_comps		981791	0					
ANR	981886	Identifier	i		981791	1					
ANR	981887	AdditiveExpression	( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1 + alpha_bias		981791	1		+			
ANR	981888	MultiplicativeExpression	( frac ) ( ( long ) cm_comps [ i ] * alpha ) / frac_1		981791	0		/			
ANR	981889	CastExpression	( frac ) ( ( long ) cm_comps [ i ] * alpha )		981791	0					
ANR	981890	CastTarget	frac		981791	0					
ANR	981891	MultiplicativeExpression	( long ) cm_comps [ i ] * alpha		981791	1		*			
ANR	981892	CastExpression	( long ) cm_comps [ i ]		981791	0					
ANR	981893	CastTarget	long		981791	0					
ANR	981894	ArrayIndexing	cm_comps [ i ]		981791	1					
ANR	981895	Identifier	cm_comps		981791	0					
ANR	981896	Identifier	i		981791	1					
ANR	981897	Identifier	alpha		981791	1					
ANR	981898	Identifier	frac_1		981791	1					
ANR	981899	Identifier	alpha_bias		981791	1					
ANR	981900	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		981791	8					
ANR	981901	Condition	pgs -> effective_transfer_non_identity_count == 0	1229:8:45410:45456	981791	0	True				
ANR	981902	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		981791	0		==			
ANR	981903	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		981791	0					
ANR	981904	Identifier	pgs		981791	0					
ANR	981905	Identifier	effective_transfer_non_identity_count		981791	1					
ANR	981906	PrimaryExpression	0		981791	1					
ANR	981907	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981791	1					
ANR	981908	ForInit	i = 0 ;	1230:13:45472:45477	981791	0	True				
ANR	981909	AssignmentExpression	i = 0		981791	0		=			
ANR	981910	Identifier	i		981791	0					
ANR	981911	PrimaryExpression	0		981791	1					
ANR	981912	Condition	i < ncomps	1230:20:45479:45488	981791	1	True				
ANR	981913	RelationalExpression	i < ncomps		981791	0		<			
ANR	981914	Identifier	i		981791	0					
ANR	981915	Identifier	ncomps		981791	1					
ANR	981916	PostIncDecOperationExpression	i ++	1230:32:45491:45493	981791	2	True				
ANR	981917	Identifier	i		981791	0					
ANR	981918	IncDec	++		981791	1					
ANR	981919	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1231:12:45508:45536	981791	3	True				
ANR	981920	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		981791	0		=			
ANR	981921	ArrayIndexing	cv [ i ]		981791	0					
ANR	981922	Identifier	cv		981791	0					
ANR	981923	Identifier	i		981791	1					
ANR	981924	CallExpression	frac2cv ( cm_comps [ i ] )		981791	1					
ANR	981925	Callee	frac2cv		981791	0					
ANR	981926	Identifier	frac2cv		981791	0					
ANR	981927	ArgumentList	cm_comps [ i ]		981791	1					
ANR	981928	Argument	cm_comps [ i ]		981791	0					
ANR	981929	ArrayIndexing	cm_comps [ i ]		981791	0					
ANR	981930	Identifier	cm_comps		981791	0					
ANR	981931	Identifier	i		981791	1					
ANR	981932	ElseStatement	else		981791	0					
ANR	981933	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		981791	0					
ANR	981934	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1232:13:45551:45604	981791	0	True				
ANR	981935	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		981791	0		==			
ANR	981936	MemberAccess	dev -> color_info . polarity		981791	0					
ANR	981937	PtrMemberAccess	dev -> color_info		981791	0					
ANR	981938	Identifier	dev		981791	0					
ANR	981939	Identifier	color_info		981791	1					
ANR	981940	Identifier	polarity		981791	1					
ANR	981941	Identifier	GX_CINFO_POLARITY_ADDITIVE		981791	1					
ANR	981942	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981791	1					
ANR	981943	ForInit	i = 0 ;	1233:13:45620:45625	981791	0	True				
ANR	981944	AssignmentExpression	i = 0		981791	0		=			
ANR	981945	Identifier	i		981791	0					
ANR	981946	PrimaryExpression	0		981791	1					
ANR	981947	Condition	i < ncomps	1233:20:45627:45636	981791	1	True				
ANR	981948	RelationalExpression	i < ncomps		981791	0		<			
ANR	981949	Identifier	i		981791	0					
ANR	981950	Identifier	ncomps		981791	1					
ANR	981951	PostIncDecOperationExpression	i ++	1233:32:45639:45641	981791	2	True				
ANR	981952	Identifier	i		981791	0					
ANR	981953	IncDec	++		981791	1					
ANR	981954	ExpressionStatement	"cv [ i ] = frac2cv ( gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] ) )"	1234:12:45656:45763	981791	3	True				
ANR	981955	AssignmentExpression	"cv [ i ] = frac2cv ( gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] ) )"		981791	0		=			
ANR	981956	ArrayIndexing	cv [ i ]		981791	0					
ANR	981957	Identifier	cv		981791	0					
ANR	981958	Identifier	i		981791	1					
ANR	981959	CallExpression	"frac2cv ( gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] ) )"		981791	1					
ANR	981960	Callee	frac2cv		981791	0					
ANR	981961	Identifier	frac2cv		981791	0					
ANR	981962	ArgumentList	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		981791	1					
ANR	981963	Argument	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		981791	0					
ANR	981964	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		981791	0					
ANR	981965	Callee	gx_map_color_frac		981791	0					
ANR	981966	Identifier	gx_map_color_frac		981791	0					
ANR	981967	ArgumentList	pgs		981791	1					
ANR	981968	Argument	pgs		981791	0					
ANR	981969	Identifier	pgs		981791	0					
ANR	981970	Argument	cm_comps [ i ]		981791	1					
ANR	981971	ArrayIndexing	cm_comps [ i ]		981791	0					
ANR	981972	Identifier	cm_comps		981791	0					
ANR	981973	Identifier	i		981791	1					
ANR	981974	Argument	effective_transfer [ i ]		981791	2					
ANR	981975	ArrayIndexing	effective_transfer [ i ]		981791	0					
ANR	981976	Identifier	effective_transfer		981791	0					
ANR	981977	Identifier	i		981791	1					
ANR	981978	ElseStatement	else		981791	0					
ANR	981979	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		981791	0					
ANR	981980	ForInit	i = 0 ;	1237:13:45787:45792	981791	0	True				
ANR	981981	AssignmentExpression	i = 0		981791	0		=			
ANR	981982	Identifier	i		981791	0					
ANR	981983	PrimaryExpression	0		981791	1					
ANR	981984	Condition	i < ncomps	1237:20:45794:45803	981791	1	True				
ANR	981985	RelationalExpression	i < ncomps		981791	0		<			
ANR	981986	Identifier	i		981791	0					
ANR	981987	Identifier	ncomps		981791	1					
ANR	981988	PostIncDecOperationExpression	i ++	1237:32:45806:45808	981791	2	True				
ANR	981989	Identifier	i		981791	0					
ANR	981990	IncDec	++		981791	1					
ANR	981991	ExpressionStatement	"cv [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] ) )"	1238:12:45823:45948	981791	3	True				
ANR	981992	AssignmentExpression	"cv [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] ) )"		981791	0		=			
ANR	981993	ArrayIndexing	cv [ i ]		981791	0					
ANR	981994	Identifier	cv		981791	0					
ANR	981995	Identifier	i		981791	1					
ANR	981996	CallExpression	"frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] ) )"		981791	1					
ANR	981997	Callee	frac2cv		981791	0					
ANR	981998	Identifier	frac2cv		981791	0					
ANR	981999	ArgumentList	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981791	1					
ANR	982000	Argument	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981791	0					
ANR	982001	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981791	0		-			
ANR	982002	Identifier	frac_1		981791	0					
ANR	982003	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		981791	1					
ANR	982004	Callee	gx_map_color_frac		981791	0					
ANR	982005	Identifier	gx_map_color_frac		981791	0					
ANR	982006	ArgumentList	pgs		981791	1					
ANR	982007	Argument	pgs		981791	0					
ANR	982008	Identifier	pgs		981791	0					
ANR	982009	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		981791	1					
ANR	982010	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		981791	0					
ANR	982011	CastTarget	frac		981791	0					
ANR	982012	AdditiveExpression	frac_1 - cm_comps [ i ]		981791	1		-			
ANR	982013	Identifier	frac_1		981791	0					
ANR	982014	ArrayIndexing	cm_comps [ i ]		981791	1					
ANR	982015	Identifier	cm_comps		981791	0					
ANR	982016	Identifier	i		981791	1					
ANR	982017	Argument	effective_transfer [ i ]		981791	2					
ANR	982018	ArrayIndexing	effective_transfer [ i ]		981791	0					
ANR	982019	Identifier	effective_transfer		981791	0					
ANR	982020	Identifier	i		981791	1					
ANR	982021	IfStatement	"if ( dev_proc ( dev , map_rgb_alpha_color ) != gx_default_map_rgb_alpha_color && ( cv_alpha = frac2cv ( alpha ) ) != gx_max_color_value )"		981791	9					
ANR	982022	Condition	"dev_proc ( dev , map_rgb_alpha_color ) != gx_default_map_rgb_alpha_color && ( cv_alpha = frac2cv ( alpha ) ) != gx_max_color_value"	1242:8:45993:46122	981791	0	True				
ANR	982023	AndExpression	"dev_proc ( dev , map_rgb_alpha_color ) != gx_default_map_rgb_alpha_color && ( cv_alpha = frac2cv ( alpha ) ) != gx_max_color_value"		981791	0		&&			
ANR	982024	EqualityExpression	"dev_proc ( dev , map_rgb_alpha_color ) != gx_default_map_rgb_alpha_color"		981791	0		!=			
ANR	982025	CallExpression	"dev_proc ( dev , map_rgb_alpha_color )"		981791	0					
ANR	982026	Callee	dev_proc		981791	0					
ANR	982027	Identifier	dev_proc		981791	0					
ANR	982028	ArgumentList	dev		981791	1					
ANR	982029	Argument	dev		981791	0					
ANR	982030	Identifier	dev		981791	0					
ANR	982031	Argument	map_rgb_alpha_color		981791	1					
ANR	982032	Identifier	map_rgb_alpha_color		981791	0					
ANR	982033	Identifier	gx_default_map_rgb_alpha_color		981791	1					
ANR	982034	EqualityExpression	( cv_alpha = frac2cv ( alpha ) ) != gx_max_color_value		981791	1		!=			
ANR	982035	AssignmentExpression	cv_alpha = frac2cv ( alpha )		981791	0		=			
ANR	982036	Identifier	cv_alpha		981791	0					
ANR	982037	CallExpression	frac2cv ( alpha )		981791	1					
ANR	982038	Callee	frac2cv		981791	0					
ANR	982039	Identifier	frac2cv		981791	0					
ANR	982040	ArgumentList	alpha		981791	1					
ANR	982041	Argument	alpha		981791	0					
ANR	982042	Identifier	alpha		981791	0					
ANR	982043	Identifier	gx_max_color_value		981791	1					
ANR	982044	ExpressionStatement	"color = dev_proc ( dev , map_rgb_alpha_color ) ( dev , cv [ 0 ] , cv [ 1 ] , cv [ 2 ] , cv_alpha )"	1244:8:46133:46211	981791	1	True				
ANR	982045	AssignmentExpression	"color = dev_proc ( dev , map_rgb_alpha_color ) ( dev , cv [ 0 ] , cv [ 1 ] , cv [ 2 ] , cv_alpha )"		981791	0		=			
ANR	982046	Identifier	color		981791	0					
ANR	982047	CallExpression	"dev_proc ( dev , map_rgb_alpha_color ) ( dev , cv [ 0 ] , cv [ 1 ] , cv [ 2 ] , cv_alpha )"		981791	1					
ANR	982048	Callee	"dev_proc ( dev , map_rgb_alpha_color )"		981791	0					
ANR	982049	CallExpression	"dev_proc ( dev , map_rgb_alpha_color )"		981791	0					
ANR	982050	Callee	dev_proc		981791	0					
ANR	982051	Identifier	dev_proc		981791	0					
ANR	982052	ArgumentList	dev		981791	1					
ANR	982053	Argument	dev		981791	0					
ANR	982054	Identifier	dev		981791	0					
ANR	982055	Argument	map_rgb_alpha_color		981791	1					
ANR	982056	Identifier	map_rgb_alpha_color		981791	0					
ANR	982057	ArgumentList	dev		981791	1					
ANR	982058	Argument	dev		981791	0					
ANR	982059	Identifier	dev		981791	0					
ANR	982060	Argument	cv [ 0 ]		981791	1					
ANR	982061	ArrayIndexing	cv [ 0 ]		981791	0					
ANR	982062	Identifier	cv		981791	0					
ANR	982063	PrimaryExpression	0		981791	1					
ANR	982064	Argument	cv [ 1 ]		981791	2					
ANR	982065	ArrayIndexing	cv [ 1 ]		981791	0					
ANR	982066	Identifier	cv		981791	0					
ANR	982067	PrimaryExpression	1		981791	1					
ANR	982068	Argument	cv [ 2 ]		981791	3					
ANR	982069	ArrayIndexing	cv [ 2 ]		981791	0					
ANR	982070	Identifier	cv		981791	0					
ANR	982071	PrimaryExpression	2		981791	1					
ANR	982072	Argument	cv_alpha		981791	4					
ANR	982073	Identifier	cv_alpha		981791	0					
ANR	982074	ElseStatement	else		981791	0					
ANR	982075	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , cv )"	1246:8:46230:46274	981791	0	True				
ANR	982076	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , cv )"		981791	0		=			
ANR	982077	Identifier	color		981791	0					
ANR	982078	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		981791	1					
ANR	982079	Callee	"dev_proc ( dev , encode_color )"		981791	0					
ANR	982080	CallExpression	"dev_proc ( dev , encode_color )"		981791	0					
ANR	982081	Callee	dev_proc		981791	0					
ANR	982082	Identifier	dev_proc		981791	0					
ANR	982083	ArgumentList	dev		981791	1					
ANR	982084	Argument	dev		981791	0					
ANR	982085	Identifier	dev		981791	0					
ANR	982086	Argument	encode_color		981791	1					
ANR	982087	Identifier	encode_color		981791	0					
ANR	982088	ArgumentList	dev		981791	1					
ANR	982089	Argument	dev		981791	0					
ANR	982090	Identifier	dev		981791	0					
ANR	982091	Argument	cv		981791	1					
ANR	982092	Identifier	cv		981791	0					
ANR	982093	IfStatement	if ( color != gx_no_color_index )		981791	10					
ANR	982094	Condition	color != gx_no_color_index	1249:8:46360:46385	981791	0	True				
ANR	982095	EqualityExpression	color != gx_no_color_index		981791	0		!=			
ANR	982096	Identifier	color		981791	0					
ANR	982097	Identifier	gx_no_color_index		981791	1					
ANR	982098	CompoundStatement		45:36:1747:1747	981791	1					
ANR	982099	ExpressionStatement	"color_set_pure ( pdc , color )"	1250:8:46398:46424	981791	0	True				
ANR	982100	CallExpression	"color_set_pure ( pdc , color )"		981791	0					
ANR	982101	Callee	color_set_pure		981791	0					
ANR	982102	Identifier	color_set_pure		981791	0					
ANR	982103	ArgumentList	pdc		981791	1					
ANR	982104	Argument	pdc		981791	0					
ANR	982105	Identifier	pdc		981791	0					
ANR	982106	Argument	color		981791	1					
ANR	982107	Identifier	color		981791	0					
ANR	982108	ReturnStatement	return ;	1251:8:46434:46440	981791	1	True				
ANR	982109	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		981791	11					
ANR	982110	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1253:8:46456:46585	981791	0	True				
ANR	982111	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		981791	0		==			
ANR	982112	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		981791	0					
ANR	982113	Callee	gx_render_device_DeviceN		981791	0					
ANR	982114	Identifier	gx_render_device_DeviceN		981791	0					
ANR	982115	ArgumentList	cm_comps		981791	1					
ANR	982116	Argument	cm_comps		981791	0					
ANR	982117	Identifier	cm_comps		981791	0					
ANR	982118	Argument	pdc		981791	1					
ANR	982119	Identifier	pdc		981791	0					
ANR	982120	Argument	dev		981791	2					
ANR	982121	Identifier	dev		981791	0					
ANR	982122	Argument	pgs -> dev_ht		981791	3					
ANR	982123	PtrMemberAccess	pgs -> dev_ht		981791	0					
ANR	982124	Identifier	pgs		981791	0					
ANR	982125	Identifier	dev_ht		981791	1					
ANR	982126	Argument	& pgs -> screen_phase [ select ]		981791	4					
ANR	982127	UnaryOperationExpression	& pgs -> screen_phase [ select ]		981791	0					
ANR	982128	UnaryOperator	&		981791	0					
ANR	982129	ArrayIndexing	pgs -> screen_phase [ select ]		981791	1					
ANR	982130	PtrMemberAccess	pgs -> screen_phase		981791	0					
ANR	982131	Identifier	pgs		981791	0					
ANR	982132	Identifier	screen_phase		981791	1					
ANR	982133	Identifier	select		981791	1					
ANR	982134	PrimaryExpression	1		981791	1					
ANR	982135	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1255:8:46596:46639	981791	1	True				
ANR	982136	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		981791	0					
ANR	982137	Callee	gx_color_load_select		981791	0					
ANR	982138	Identifier	gx_color_load_select		981791	0					
ANR	982139	ArgumentList	pdc		981791	1					
ANR	982140	Argument	pdc		981791	0					
ANR	982141	Identifier	pdc		981791	0					
ANR	982142	Argument	pgs		981791	1					
ANR	982143	Identifier	pgs		981791	0					
ANR	982144	Argument	dev		981791	2					
ANR	982145	Identifier	dev		981791	0					
ANR	982146	Argument	select		981791	3					
ANR	982147	Identifier	select		981791	0					
ANR	982148	ReturnType	static void		981791	1					
ANR	982149	Identifier	cmap_rgb_alpha_direct		981791	2					
ANR	982150	ParameterList	"frac r , frac g , frac b , frac alpha , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		981791	3					
ANR	982151	Parameter	frac r	1203:22:44510:44515	981791	0	True				
ANR	982152	ParameterType	frac		981791	0					
ANR	982153	Identifier	r		981791	1					
ANR	982154	Parameter	frac g	1203:30:44518:44523	981791	1	True				
ANR	982155	ParameterType	frac		981791	0					
ANR	982156	Identifier	g		981791	1					
ANR	982157	Parameter	frac b	1203:38:44526:44531	981791	2	True				
ANR	982158	ParameterType	frac		981791	0					
ANR	982159	Identifier	b		981791	1					
ANR	982160	Parameter	frac alpha	1203:46:44534:44543	981791	3	True				
ANR	982161	ParameterType	frac		981791	0					
ANR	982162	Identifier	alpha		981791	1					
ANR	982163	Parameter	gx_device_color * pdc	1203:58:44546:44566	981791	4	True				
ANR	982164	ParameterType	gx_device_color *		981791	0					
ANR	982165	Identifier	pdc		981791	1					
ANR	982166	Parameter	const gs_gstate * pgs	1204:5:44574:44594	981791	5	True				
ANR	982167	ParameterType	const gs_gstate *		981791	0					
ANR	982168	Identifier	pgs		981791	1					
ANR	982169	Parameter	gx_device * dev	1204:28:44597:44611	981791	6	True				
ANR	982170	ParameterType	gx_device *		981791	0					
ANR	982171	Identifier	dev		981791	1					
ANR	982172	Parameter	gs_color_select_t select	1204:45:44614:44637	981791	7	True				
ANR	982173	ParameterType	gs_color_select_t		981791	0					
ANR	982174	Identifier	select		981791	1					
ANR	982175	CFGEntryNode	ENTRY		981791		True				
ANR	982176	CFGExitNode	EXIT		981791		True				
ANR	982177	Symbol	* dev		981791						
ANR	982178	Symbol	select		981791						
ANR	982179	Symbol	color		981791						
ANR	982180	Symbol	* pgs		981791						
ANR	982181	Symbol	encode_color		981791						
ANR	982182	Symbol	ncomps		981791						
ANR	982183	Symbol	cv_alpha		981791						
ANR	982184	Symbol	dev -> color_info		981791						
ANR	982185	Symbol	GX_CINFO_POLARITY_ADDITIVE		981791						
ANR	982186	Symbol	effective_transfer		981791						
ANR	982187	Symbol	gx_render_device_DeviceN		981791						
ANR	982188	Symbol	* effective_transfer		981791						
ANR	982189	Symbol	gx_no_color_index		981791						
ANR	982190	Symbol	dev		981791						
ANR	982191	Symbol	get_color_mapping_procs_subclass		981791						
ANR	982192	Symbol	dev -> color_info . polarity		981791						
ANR	982193	Symbol	dev_proc		981791						
ANR	982194	Symbol	alpha		981791						
ANR	982195	Symbol	alpha_bias		981791						
ANR	982196	Symbol	scm		981791						
ANR	982197	Symbol	* cm_comps		981791						
ANR	982198	Symbol	pgs		981791						
ANR	982199	Symbol	b		981791						
ANR	982200	Symbol	frac_1		981791						
ANR	982201	Symbol	dev -> color_info . num_components		981791						
ANR	982202	Symbol	g		981791						
ANR	982203	Symbol	i		981791						
ANR	982204	Symbol	gx_default_map_rgb_alpha_color		981791						
ANR	982205	Symbol	pgs -> screen_phase		981791						
ANR	982206	Symbol	pdc		981791						
ANR	982207	Symbol	cm_comps		981791						
ANR	982208	Symbol	r		981791						
ANR	982209	Symbol	cv		981791						
ANR	982210	Symbol	* i		981791						
ANR	982211	Symbol	gx_map_color_frac		981791						
ANR	982212	Symbol	map_rgb_alpha_color		981791						
ANR	982213	Symbol	pgs -> effective_transfer_non_identity_count		981791						
ANR	982214	Symbol	gx_max_color_value		981791						
ANR	982215	Symbol	pgs -> dev_ht		981791						
ANR	982216	Symbol	* cv		981791						
ANR	982217	Symbol	frac2cv		981791						
ANR	982218	Function	map_components_to_colorants	1273:0:47088:47627							
ANR	982219	FunctionDef	"map_components_to_colorants (const frac * pcc , const gs_devicen_color_map * pcolor_component_map , frac * plist)"		982218	0					
ANR	982220	CompoundStatement		1276:0:47226:47627	982218	0					
ANR	982221	IdentifierDeclStatement	int i = pcolor_component_map -> num_colorants - 1 ;	1277:4:47232:47279	982218	0	True				
ANR	982222	IdentifierDecl	i = pcolor_component_map -> num_colorants - 1		982218	0					
ANR	982223	IdentifierDeclType	int		982218	0					
ANR	982224	Identifier	i		982218	1					
ANR	982225	AssignmentExpression	i = pcolor_component_map -> num_colorants - 1		982218	2		=			
ANR	982226	Identifier	i		982218	0					
ANR	982227	AdditiveExpression	pcolor_component_map -> num_colorants - 1		982218	1		-			
ANR	982228	PtrMemberAccess	pcolor_component_map -> num_colorants		982218	0					
ANR	982229	Identifier	pcolor_component_map		982218	0					
ANR	982230	Identifier	num_colorants		982218	1					
ANR	982231	PrimaryExpression	1		982218	1					
ANR	982232	IdentifierDeclStatement	int pos ;	1278:4:47285:47292	982218	1	True				
ANR	982233	IdentifierDecl	pos		982218	0					
ANR	982234	IdentifierDeclType	int		982218	0					
ANR	982235	Identifier	pos		982218	1					
ANR	982236	ForStatement	for ( ; i >= 0 ; i -- )		982218	2					
ANR	982237	Condition	i >= 0	1281:11:47349:47354	982218	0	True				
ANR	982238	RelationalExpression	i >= 0		982218	0		>=			
ANR	982239	Identifier	i		982218	0					
ANR	982240	PrimaryExpression	0		982218	1					
ANR	982241	PostIncDecOperationExpression	i --	1281:19:47357:47359	982218	1	True				
ANR	982242	Identifier	i		982218	0					
ANR	982243	IncDec	--		982218	1					
ANR	982244	CompoundStatement		6:24:135:135	982218	2					
ANR	982245	ExpressionStatement	plist [ i ] = frac_0	1282:8:47372:47389	982218	0	True				
ANR	982246	AssignmentExpression	plist [ i ] = frac_0		982218	0		=			
ANR	982247	ArrayIndexing	plist [ i ]		982218	0					
ANR	982248	Identifier	plist		982218	0					
ANR	982249	Identifier	i		982218	1					
ANR	982250	Identifier	frac_0		982218	1					
ANR	982251	ForStatement	for ( i = pcolor_component_map -> num_components - 1 ; i >= 0 ; i -- )		982218	3					
ANR	982252	ForInit	i = pcolor_component_map -> num_components - 1 ;	1286:9:47455:47499	982218	0	True				
ANR	982253	AssignmentExpression	i = pcolor_component_map -> num_components - 1		982218	0		=			
ANR	982254	Identifier	i		982218	0					
ANR	982255	AdditiveExpression	pcolor_component_map -> num_components - 1		982218	1		-			
ANR	982256	PtrMemberAccess	pcolor_component_map -> num_components		982218	0					
ANR	982257	Identifier	pcolor_component_map		982218	0					
ANR	982258	Identifier	num_components		982218	1					
ANR	982259	PrimaryExpression	1		982218	1					
ANR	982260	Condition	i >= 0	1286:55:47501:47506	982218	1	True				
ANR	982261	RelationalExpression	i >= 0		982218	0		>=			
ANR	982262	Identifier	i		982218	0					
ANR	982263	PrimaryExpression	0		982218	1					
ANR	982264	PostIncDecOperationExpression	i --	1286:63:47509:47511	982218	2	True				
ANR	982265	Identifier	i		982218	0					
ANR	982266	IncDec	--		982218	1					
ANR	982267	CompoundStatement		11:68:287:287	982218	3					
ANR	982268	ExpressionStatement	pos = pcolor_component_map -> color_map [ i ]	1287:8:47524:47564	982218	0	True				
ANR	982269	AssignmentExpression	pos = pcolor_component_map -> color_map [ i ]		982218	0		=			
ANR	982270	Identifier	pos		982218	0					
ANR	982271	ArrayIndexing	pcolor_component_map -> color_map [ i ]		982218	1					
ANR	982272	PtrMemberAccess	pcolor_component_map -> color_map		982218	0					
ANR	982273	Identifier	pcolor_component_map		982218	0					
ANR	982274	Identifier	color_map		982218	1					
ANR	982275	Identifier	i		982218	1					
ANR	982276	IfStatement	if ( pos >= 0 )		982218	1					
ANR	982277	Condition	pos >= 0	1288:12:47578:47585	982218	0	True				
ANR	982278	RelationalExpression	pos >= 0		982218	0		>=			
ANR	982279	Identifier	pos		982218	0					
ANR	982280	PrimaryExpression	0		982218	1					
ANR	982281	ExpressionStatement	plist [ pos ] = pcc [ i ]	1289:12:47600:47619	982218	1	True				
ANR	982282	AssignmentExpression	plist [ pos ] = pcc [ i ]		982218	0		=			
ANR	982283	ArrayIndexing	plist [ pos ]		982218	0					
ANR	982284	Identifier	plist		982218	0					
ANR	982285	Identifier	pos		982218	1					
ANR	982286	ArrayIndexing	pcc [ i ]		982218	1					
ANR	982287	Identifier	pcc		982218	0					
ANR	982288	Identifier	i		982218	1					
ANR	982289	ReturnType	static inline void		982218	1					
ANR	982290	Identifier	map_components_to_colorants		982218	2					
ANR	982291	ParameterList	"const frac * pcc , const gs_devicen_color_map * pcolor_component_map , frac * plist"		982218	3					
ANR	982292	Parameter	const frac * pcc	1274:28:47135:47150	982218	0	True				
ANR	982293	ParameterType	const frac *		982218	0					
ANR	982294	Identifier	pcc		982218	1					
ANR	982295	Parameter	const gs_devicen_color_map * pcolor_component_map	1275:8:47161:47209	982218	1	True				
ANR	982296	ParameterType	const gs_devicen_color_map *		982218	0					
ANR	982297	Identifier	pcolor_component_map		982218	1					
ANR	982298	Parameter	frac * plist	1275:59:47212:47223	982218	2	True				
ANR	982299	ParameterType	frac *		982218	0					
ANR	982300	Identifier	plist		982218	1					
ANR	982301	CFGEntryNode	ENTRY		982218		True				
ANR	982302	CFGExitNode	EXIT		982218		True				
ANR	982303	Symbol	* plist		982218						
ANR	982304	Symbol	* * pcolor_component_map		982218						
ANR	982305	Symbol	i		982218						
ANR	982306	Symbol	* pcolor_component_map		982218						
ANR	982307	Symbol	pcolor_component_map -> color_map		982218						
ANR	982308	Symbol	pcc		982218						
ANR	982309	Symbol	plist		982218						
ANR	982310	Symbol	* i		982218						
ANR	982311	Symbol	pos		982218						
ANR	982312	Symbol	pcolor_component_map -> num_colorants		982218						
ANR	982313	Symbol	pcolor_component_map		982218						
ANR	982314	Symbol	* pcolor_component_map -> color_map		982218						
ANR	982315	Symbol	* pcc		982218						
ANR	982316	Symbol	pcolor_component_map -> num_components		982218						
ANR	982317	Symbol	frac_0		982218						
ANR	982318	Symbol	* pos		982218						
ANR	982319	Function	cmap_separation_halftoned	1293:0:47630:49268							
ANR	982320	FunctionDef	"cmap_separation_halftoned (frac all , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		982319	0					
ANR	982321	CompoundStatement		1296:0:47772:49268	982319	0					
ANR	982322	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1297:4:47778:47826	982319	0	True				
ANR	982323	IdentifierDecl	i		982319	0					
ANR	982324	IdentifierDeclType	uchar		982319	0					
ANR	982325	Identifier	i		982319	1					
ANR	982326	IdentifierDecl	ncomps = dev -> color_info . num_components		982319	1					
ANR	982327	IdentifierDeclType	uchar		982319	0					
ANR	982328	Identifier	ncomps		982319	1					
ANR	982329	AssignmentExpression	ncomps = dev -> color_info . num_components		982319	2		=			
ANR	982330	Identifier	ncomps		982319	0					
ANR	982331	MemberAccess	dev -> color_info . num_components		982319	1					
ANR	982332	PtrMemberAccess	dev -> color_info		982319	0					
ANR	982333	Identifier	dev		982319	0					
ANR	982334	Identifier	color_info		982319	1					
ANR	982335	Identifier	num_components		982319	1					
ANR	982336	IdentifierDeclStatement	bool additive = dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE ;	1298:4:47832:47902	982319	1	True				
ANR	982337	IdentifierDecl	additive = dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		982319	0					
ANR	982338	IdentifierDeclType	bool		982319	0					
ANR	982339	Identifier	additive		982319	1					
ANR	982340	AssignmentExpression	additive = dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		982319	2		=			
ANR	982341	Identifier	additive		982319	0					
ANR	982342	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		982319	1		==			
ANR	982343	MemberAccess	dev -> color_info . polarity		982319	0					
ANR	982344	PtrMemberAccess	dev -> color_info		982319	0					
ANR	982345	Identifier	dev		982319	0					
ANR	982346	Identifier	color_info		982319	1					
ANR	982347	Identifier	polarity		982319	1					
ANR	982348	Identifier	GX_CINFO_POLARITY_ADDITIVE		982319	1					
ANR	982349	IdentifierDeclStatement	frac comp_value = all ;	1299:4:47908:47929	982319	2	True				
ANR	982350	IdentifierDecl	comp_value = all		982319	0					
ANR	982351	IdentifierDeclType	frac		982319	0					
ANR	982352	Identifier	comp_value		982319	1					
ANR	982353	AssignmentExpression	comp_value = all		982319	2		=			
ANR	982354	Identifier	all		982319	0					
ANR	982355	Identifier	all		982319	1					
ANR	982356	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1300:4:47935:47980	982319	3	True				
ANR	982357	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		982319	0					
ANR	982358	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		982319	0					
ANR	982359	Identifier	cm_comps		982319	1					
ANR	982360	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		982319	2					
ANR	982361	IfStatement	if ( pgs -> color_component_map . sep_type == SEP_ALL )		982319	4					
ANR	982362	Condition	pgs -> color_component_map . sep_type == SEP_ALL	1302:8:47991:48034	982319	0	True				
ANR	982363	EqualityExpression	pgs -> color_component_map . sep_type == SEP_ALL		982319	0		==			
ANR	982364	MemberAccess	pgs -> color_component_map . sep_type		982319	0					
ANR	982365	PtrMemberAccess	pgs -> color_component_map		982319	0					
ANR	982366	Identifier	pgs		982319	0					
ANR	982367	Identifier	color_component_map		982319	1					
ANR	982368	Identifier	sep_type		982319	1					
ANR	982369	Identifier	SEP_ALL		982319	1					
ANR	982370	CompoundStatement		7:54:264:264	982319	1					
ANR	982371	IfStatement	if ( additive )		982319	0					
ANR	982372	Condition	additive	1307:12:48204:48211	982319	0	True				
ANR	982373	Identifier	additive		982319	0					
ANR	982374	ExpressionStatement	comp_value = frac_1 - comp_value	1308:12:48226:48258	982319	1	True				
ANR	982375	AssignmentExpression	comp_value = frac_1 - comp_value		982319	0		=			
ANR	982376	Identifier	comp_value		982319	0					
ANR	982377	AdditiveExpression	frac_1 - comp_value		982319	1		-			
ANR	982378	Identifier	frac_1		982319	0					
ANR	982379	Identifier	comp_value		982319	1					
ANR	982380	ForStatement	for ( i = 0 ; i < pgs -> color_component_map . num_colorants ; i ++ )		982319	1					
ANR	982381	ForInit	i = 0 ;	1311:13:48327:48332	982319	0	True				
ANR	982382	AssignmentExpression	i = 0		982319	0		=			
ANR	982383	Identifier	i		982319	0					
ANR	982384	PrimaryExpression	0		982319	1					
ANR	982385	Condition	i < pgs -> color_component_map . num_colorants	1311:20:48334:48375	982319	1	True				
ANR	982386	RelationalExpression	i < pgs -> color_component_map . num_colorants		982319	0		<			
ANR	982387	Identifier	i		982319	0					
ANR	982388	MemberAccess	pgs -> color_component_map . num_colorants		982319	1					
ANR	982389	PtrMemberAccess	pgs -> color_component_map		982319	0					
ANR	982390	Identifier	pgs		982319	0					
ANR	982391	Identifier	color_component_map		982319	1					
ANR	982392	Identifier	num_colorants		982319	1					
ANR	982393	PostIncDecOperationExpression	i ++	1311:64:48378:48380	982319	2	True				
ANR	982394	Identifier	i		982319	0					
ANR	982395	IncDec	++		982319	1					
ANR	982396	ExpressionStatement	cm_comps [ i ] = comp_value	1312:12:48395:48419	982319	3	True				
ANR	982397	AssignmentExpression	cm_comps [ i ] = comp_value		982319	0		=			
ANR	982398	ArrayIndexing	cm_comps [ i ]		982319	0					
ANR	982399	Identifier	cm_comps		982319	0					
ANR	982400	Identifier	i		982319	1					
ANR	982401	Identifier	comp_value		982319	1					
ANR	982402	ElseStatement	else		982319	0					
ANR	982403	CompoundStatement		19:9:663:663	982319	0					
ANR	982404	ExpressionStatement	"map_components_to_colorants ( & all , & ( pgs -> color_component_map ) , cm_comps )"	1316:8:48483:48555	982319	0	True				
ANR	982405	CallExpression	"map_components_to_colorants ( & all , & ( pgs -> color_component_map ) , cm_comps )"		982319	0					
ANR	982406	Callee	map_components_to_colorants		982319	0					
ANR	982407	Identifier	map_components_to_colorants		982319	0					
ANR	982408	ArgumentList	& all		982319	1					
ANR	982409	Argument	& all		982319	0					
ANR	982410	UnaryOperationExpression	& all		982319	0					
ANR	982411	UnaryOperator	&		982319	0					
ANR	982412	Identifier	all		982319	1					
ANR	982413	Argument	& ( pgs -> color_component_map )		982319	1					
ANR	982414	UnaryOperationExpression	& ( pgs -> color_component_map )		982319	0					
ANR	982415	UnaryOperator	&		982319	0					
ANR	982416	PtrMemberAccess	pgs -> color_component_map		982319	1					
ANR	982417	Identifier	pgs		982319	0					
ANR	982418	Identifier	color_component_map		982319	1					
ANR	982419	Argument	cm_comps		982319	2					
ANR	982420	Identifier	cm_comps		982319	0					
ANR	982421	IfStatement	if ( pgs -> effective_transfer_non_identity_count != 0 )		982319	5					
ANR	982422	Condition	pgs -> effective_transfer_non_identity_count != 0	1320:8:48638:48684	982319	0	True				
ANR	982423	EqualityExpression	pgs -> effective_transfer_non_identity_count != 0		982319	0		!=			
ANR	982424	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		982319	0					
ANR	982425	Identifier	pgs		982319	0					
ANR	982426	Identifier	effective_transfer_non_identity_count		982319	1					
ANR	982427	PrimaryExpression	0		982319	1					
ANR	982428	CompoundStatement		25:57:914:914	982319	1					
ANR	982429	IfStatement	if ( additive )		982319	0					
ANR	982430	Condition	additive	1321:12:48701:48708	982319	0	True				
ANR	982431	Identifier	additive		982319	0					
ANR	982432	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982319	1					
ANR	982433	ForInit	i = 0 ;	1322:17:48728:48733	982319	0	True				
ANR	982434	AssignmentExpression	i = 0		982319	0		=			
ANR	982435	Identifier	i		982319	0					
ANR	982436	PrimaryExpression	0		982319	1					
ANR	982437	Condition	i < ncomps	1322:24:48735:48744	982319	1	True				
ANR	982438	RelationalExpression	i < ncomps		982319	0		<			
ANR	982439	Identifier	i		982319	0					
ANR	982440	Identifier	ncomps		982319	1					
ANR	982441	PostIncDecOperationExpression	i ++	1322:36:48747:48749	982319	2	True				
ANR	982442	Identifier	i		982319	0					
ANR	982443	IncDec	++		982319	1					
ANR	982444	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1323:16:48768:48872	982319	3	True				
ANR	982445	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		982319	0		=			
ANR	982446	ArrayIndexing	cm_comps [ i ]		982319	0					
ANR	982447	Identifier	cm_comps		982319	0					
ANR	982448	Identifier	i		982319	1					
ANR	982449	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		982319	1					
ANR	982450	Callee	gx_map_color_frac		982319	0					
ANR	982451	Identifier	gx_map_color_frac		982319	0					
ANR	982452	ArgumentList	pgs		982319	1					
ANR	982453	Argument	pgs		982319	0					
ANR	982454	Identifier	pgs		982319	0					
ANR	982455	Argument	cm_comps [ i ]		982319	1					
ANR	982456	ArrayIndexing	cm_comps [ i ]		982319	0					
ANR	982457	Identifier	cm_comps		982319	0					
ANR	982458	Identifier	i		982319	1					
ANR	982459	Argument	effective_transfer [ i ]		982319	2					
ANR	982460	ArrayIndexing	effective_transfer [ i ]		982319	0					
ANR	982461	Identifier	effective_transfer		982319	0					
ANR	982462	Identifier	i		982319	1					
ANR	982463	ElseStatement	else		982319	0					
ANR	982464	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982319	0					
ANR	982465	ForInit	i = 0 ;	1326:17:48904:48909	982319	0	True				
ANR	982466	AssignmentExpression	i = 0		982319	0		=			
ANR	982467	Identifier	i		982319	0					
ANR	982468	PrimaryExpression	0		982319	1					
ANR	982469	Condition	i < ncomps	1326:24:48911:48920	982319	1	True				
ANR	982470	RelationalExpression	i < ncomps		982319	0		<			
ANR	982471	Identifier	i		982319	0					
ANR	982472	Identifier	ncomps		982319	1					
ANR	982473	PostIncDecOperationExpression	i ++	1326:36:48923:48925	982319	2	True				
ANR	982474	Identifier	i		982319	0					
ANR	982475	IncDec	++		982319	1					
ANR	982476	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1327:16:48944:49066	982319	3	True				
ANR	982477	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		982319	0		=			
ANR	982478	ArrayIndexing	cm_comps [ i ]		982319	0					
ANR	982479	Identifier	cm_comps		982319	0					
ANR	982480	Identifier	i		982319	1					
ANR	982481	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		982319	1		-			
ANR	982482	Identifier	frac_1		982319	0					
ANR	982483	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		982319	1					
ANR	982484	Callee	gx_map_color_frac		982319	0					
ANR	982485	Identifier	gx_map_color_frac		982319	0					
ANR	982486	ArgumentList	pgs		982319	1					
ANR	982487	Argument	pgs		982319	0					
ANR	982488	Identifier	pgs		982319	0					
ANR	982489	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		982319	1					
ANR	982490	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		982319	0					
ANR	982491	CastTarget	frac		982319	0					
ANR	982492	AdditiveExpression	frac_1 - cm_comps [ i ]		982319	1		-			
ANR	982493	Identifier	frac_1		982319	0					
ANR	982494	ArrayIndexing	cm_comps [ i ]		982319	1					
ANR	982495	Identifier	cm_comps		982319	0					
ANR	982496	Identifier	i		982319	1					
ANR	982497	Argument	effective_transfer [ i ]		982319	2					
ANR	982498	ArrayIndexing	effective_transfer [ i ]		982319	0					
ANR	982499	Identifier	effective_transfer		982319	0					
ANR	982500	Identifier	i		982319	1					
ANR	982501	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		982319	6					
ANR	982502	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1331:8:49083:49212	982319	0	True				
ANR	982503	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		982319	0		==			
ANR	982504	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		982319	0					
ANR	982505	Callee	gx_render_device_DeviceN		982319	0					
ANR	982506	Identifier	gx_render_device_DeviceN		982319	0					
ANR	982507	ArgumentList	cm_comps		982319	1					
ANR	982508	Argument	cm_comps		982319	0					
ANR	982509	Identifier	cm_comps		982319	0					
ANR	982510	Argument	pdc		982319	1					
ANR	982511	Identifier	pdc		982319	0					
ANR	982512	Argument	dev		982319	2					
ANR	982513	Identifier	dev		982319	0					
ANR	982514	Argument	pgs -> dev_ht		982319	3					
ANR	982515	PtrMemberAccess	pgs -> dev_ht		982319	0					
ANR	982516	Identifier	pgs		982319	0					
ANR	982517	Identifier	dev_ht		982319	1					
ANR	982518	Argument	& pgs -> screen_phase [ select ]		982319	4					
ANR	982519	UnaryOperationExpression	& pgs -> screen_phase [ select ]		982319	0					
ANR	982520	UnaryOperator	&		982319	0					
ANR	982521	ArrayIndexing	pgs -> screen_phase [ select ]		982319	1					
ANR	982522	PtrMemberAccess	pgs -> screen_phase		982319	0					
ANR	982523	Identifier	pgs		982319	0					
ANR	982524	Identifier	screen_phase		982319	1					
ANR	982525	Identifier	select		982319	1					
ANR	982526	PrimaryExpression	1		982319	1					
ANR	982527	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1333:8:49223:49266	982319	1	True				
ANR	982528	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		982319	0					
ANR	982529	Callee	gx_color_load_select		982319	0					
ANR	982530	Identifier	gx_color_load_select		982319	0					
ANR	982531	ArgumentList	pdc		982319	1					
ANR	982532	Argument	pdc		982319	0					
ANR	982533	Identifier	pdc		982319	0					
ANR	982534	Argument	pgs		982319	1					
ANR	982535	Identifier	pgs		982319	0					
ANR	982536	Argument	dev		982319	2					
ANR	982537	Identifier	dev		982319	0					
ANR	982538	Argument	select		982319	3					
ANR	982539	Identifier	select		982319	0					
ANR	982540	ReturnType	static void		982319	1					
ANR	982541	Identifier	cmap_separation_halftoned		982319	2					
ANR	982542	ParameterList	"frac all , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		982319	3					
ANR	982543	Parameter	frac all	1294:26:47668:47675	982319	0	True				
ANR	982544	ParameterType	frac		982319	0					
ANR	982545	Identifier	all		982319	1					
ANR	982546	Parameter	gx_device_color * pdc	1294:36:47678:47698	982319	1	True				
ANR	982547	ParameterType	gx_device_color *		982319	0					
ANR	982548	Identifier	pdc		982319	1					
ANR	982549	Parameter	const gs_gstate * pgs	1295:5:47706:47726	982319	2	True				
ANR	982550	ParameterType	const gs_gstate *		982319	0					
ANR	982551	Identifier	pgs		982319	1					
ANR	982552	Parameter	gx_device * dev	1295:28:47729:47743	982319	3	True				
ANR	982553	ParameterType	gx_device *		982319	0					
ANR	982554	Identifier	dev		982319	1					
ANR	982555	Parameter	gs_color_select_t select	1295:45:47746:47769	982319	4	True				
ANR	982556	ParameterType	gs_color_select_t		982319	0					
ANR	982557	Identifier	select		982319	1					
ANR	982558	CFGEntryNode	ENTRY		982319		True				
ANR	982559	CFGExitNode	EXIT		982319		True				
ANR	982560	Symbol	* dev		982319						
ANR	982561	Symbol	& all		982319						
ANR	982562	Symbol	select		982319						
ANR	982563	Symbol	* pgs		982319						
ANR	982564	Symbol	ncomps		982319						
ANR	982565	Symbol	dev -> color_info		982319						
ANR	982566	Symbol	GX_CINFO_POLARITY_ADDITIVE		982319						
ANR	982567	Symbol	effective_transfer		982319						
ANR	982568	Symbol	gx_render_device_DeviceN		982319						
ANR	982569	Symbol	* effective_transfer		982319						
ANR	982570	Symbol	dev		982319						
ANR	982571	Symbol	dev -> color_info . polarity		982319						
ANR	982572	Symbol	* cm_comps		982319						
ANR	982573	Symbol	pgs		982319						
ANR	982574	Symbol	all		982319						
ANR	982575	Symbol	frac_1		982319						
ANR	982576	Symbol	dev -> color_info . num_components		982319						
ANR	982577	Symbol	pgs -> color_component_map . num_colorants		982319						
ANR	982578	Symbol	i		982319						
ANR	982579	Symbol	& pgs -> color_component_map		982319						
ANR	982580	Symbol	pgs -> screen_phase		982319						
ANR	982581	Symbol	pdc		982319						
ANR	982582	Symbol	pgs -> color_component_map		982319						
ANR	982583	Symbol	pgs -> color_component_map . sep_type		982319						
ANR	982584	Symbol	additive		982319						
ANR	982585	Symbol	cm_comps		982319						
ANR	982586	Symbol	* i		982319						
ANR	982587	Symbol	gx_map_color_frac		982319						
ANR	982588	Symbol	comp_value		982319						
ANR	982589	Symbol	pgs -> effective_transfer_non_identity_count		982319						
ANR	982590	Symbol	SEP_ALL		982319						
ANR	982591	Symbol	pgs -> dev_ht		982319						
ANR	982592	Function	cmap_separation_direct	1336:0:49271:53879							
ANR	982593	FunctionDef	"cmap_separation_direct (frac all , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		982592	0					
ANR	982594	CompoundStatement		1339:0:49422:53879	982592	0					
ANR	982595	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1340:4:49428:49476	982592	0	True				
ANR	982596	IdentifierDecl	i		982592	0					
ANR	982597	IdentifierDeclType	uchar		982592	0					
ANR	982598	Identifier	i		982592	1					
ANR	982599	IdentifierDecl	ncomps = dev -> color_info . num_components		982592	1					
ANR	982600	IdentifierDeclType	uchar		982592	0					
ANR	982601	Identifier	ncomps		982592	1					
ANR	982602	AssignmentExpression	ncomps = dev -> color_info . num_components		982592	2		=			
ANR	982603	Identifier	ncomps		982592	0					
ANR	982604	MemberAccess	dev -> color_info . num_components		982592	1					
ANR	982605	PtrMemberAccess	dev -> color_info		982592	0					
ANR	982606	Identifier	dev		982592	0					
ANR	982607	Identifier	color_info		982592	1					
ANR	982608	Identifier	num_components		982592	1					
ANR	982609	IdentifierDeclStatement	bool additive = dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE ;	1341:4:49482:49552	982592	1	True				
ANR	982610	IdentifierDecl	additive = dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		982592	0					
ANR	982611	IdentifierDeclType	bool		982592	0					
ANR	982612	Identifier	additive		982592	1					
ANR	982613	AssignmentExpression	additive = dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		982592	2		=			
ANR	982614	Identifier	additive		982592	0					
ANR	982615	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		982592	1		==			
ANR	982616	MemberAccess	dev -> color_info . polarity		982592	0					
ANR	982617	PtrMemberAccess	dev -> color_info		982592	0					
ANR	982618	Identifier	dev		982592	0					
ANR	982619	Identifier	color_info		982592	1					
ANR	982620	Identifier	polarity		982592	1					
ANR	982621	Identifier	GX_CINFO_POLARITY_ADDITIVE		982592	1					
ANR	982622	IdentifierDeclStatement	frac comp_value = all ;	1342:4:49558:49579	982592	2	True				
ANR	982623	IdentifierDecl	comp_value = all		982592	0					
ANR	982624	IdentifierDeclType	frac		982592	0					
ANR	982625	Identifier	comp_value		982592	1					
ANR	982626	AssignmentExpression	comp_value = all		982592	2		=			
ANR	982627	Identifier	all		982592	0					
ANR	982628	Identifier	all		982592	1					
ANR	982629	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1343:4:49585:49630	982592	3	True				
ANR	982630	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982631	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982632	Identifier	cm_comps		982592	1					
ANR	982633	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		982592	2					
ANR	982634	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1344:4:49636:49685	982592	4	True				
ANR	982635	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982636	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982637	Identifier	cv		982592	1					
ANR	982638	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		982592	2					
ANR	982639	IdentifierDeclStatement	gx_color_index color ;	1345:4:49691:49711	982592	5	True				
ANR	982640	IdentifierDecl	color		982592	0					
ANR	982641	IdentifierDeclType	gx_color_index		982592	0					
ANR	982642	Identifier	color		982592	1					
ANR	982643	IdentifierDeclStatement	bool use_rgb2dev_icc = false ;	1346:4:49717:49745	982592	6	True				
ANR	982644	IdentifierDecl	use_rgb2dev_icc = false		982592	0					
ANR	982645	IdentifierDeclType	bool		982592	0					
ANR	982646	Identifier	use_rgb2dev_icc		982592	1					
ANR	982647	AssignmentExpression	use_rgb2dev_icc = false		982592	2		=			
ANR	982648	Identifier	false		982592	0					
ANR	982649	Identifier	false		982592	1					
ANR	982650	IdentifierDeclStatement	gsicc_rendering_param_t render_cond ;	1347:4:49751:49786	982592	7	True				
ANR	982651	IdentifierDecl	render_cond		982592	0					
ANR	982652	IdentifierDeclType	gsicc_rendering_param_t		982592	0					
ANR	982653	Identifier	render_cond		982592	1					
ANR	982654	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile = NULL ;	1348:4:49792:49829	982592	8	True				
ANR	982655	IdentifierDecl	* dev_profile = NULL		982592	0					
ANR	982656	IdentifierDeclType	cmm_dev_profile_t *		982592	0					
ANR	982657	Identifier	dev_profile		982592	1					
ANR	982658	AssignmentExpression	* dev_profile = NULL		982592	2		=			
ANR	982659	Identifier	NULL		982592	0					
ANR	982660	Identifier	NULL		982592	1					
ANR	982661	IdentifierDeclStatement	cmm_profile_t * des_profile = NULL ;	1349:4:49835:49868	982592	9	True				
ANR	982662	IdentifierDecl	* des_profile = NULL		982592	0					
ANR	982663	IdentifierDeclType	cmm_profile_t *		982592	0					
ANR	982664	Identifier	des_profile		982592	1					
ANR	982665	AssignmentExpression	* des_profile = NULL		982592	2		=			
ANR	982666	Identifier	NULL		982592	0					
ANR	982667	Identifier	NULL		982592	1					
ANR	982668	ExpressionStatement	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	1351:4:49875:49921	982592	10	True				
ANR	982669	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		982592	0					
ANR	982670	Callee	"dev_proc ( dev , get_profile )"		982592	0					
ANR	982671	CallExpression	"dev_proc ( dev , get_profile )"		982592	0					
ANR	982672	Callee	dev_proc		982592	0					
ANR	982673	Identifier	dev_proc		982592	0					
ANR	982674	ArgumentList	dev		982592	1					
ANR	982675	Argument	dev		982592	0					
ANR	982676	Identifier	dev		982592	0					
ANR	982677	Argument	get_profile		982592	1					
ANR	982678	Identifier	get_profile		982592	0					
ANR	982679	ArgumentList	dev		982592	1					
ANR	982680	Argument	dev		982592	0					
ANR	982681	Identifier	dev		982592	0					
ANR	982682	Argument	& dev_profile		982592	1					
ANR	982683	UnaryOperationExpression	& dev_profile		982592	0					
ANR	982684	UnaryOperator	&		982592	0					
ANR	982685	Identifier	dev_profile		982592	1					
ANR	982686	ExpressionStatement	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"	1352:4:49927:50039	982592	11	True				
ANR	982687	CallExpression	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"		982592	0					
ANR	982688	Callee	gsicc_extract_profile		982592	0					
ANR	982689	Identifier	gsicc_extract_profile		982592	0					
ANR	982690	ArgumentList	dev -> graphics_type_tag		982592	1					
ANR	982691	Argument	dev -> graphics_type_tag		982592	0					
ANR	982692	PtrMemberAccess	dev -> graphics_type_tag		982592	0					
ANR	982693	Identifier	dev		982592	0					
ANR	982694	Identifier	graphics_type_tag		982592	1					
ANR	982695	Argument	dev_profile		982592	1					
ANR	982696	Identifier	dev_profile		982592	0					
ANR	982697	Argument	& des_profile		982592	2					
ANR	982698	UnaryOperationExpression	& des_profile		982592	0					
ANR	982699	UnaryOperator	&		982592	0					
ANR	982700	Identifier	des_profile		982592	1					
ANR	982701	Argument	& render_cond		982592	3					
ANR	982702	UnaryOperationExpression	& render_cond		982592	0					
ANR	982703	UnaryOperator	&		982592	0					
ANR	982704	Identifier	render_cond		982592	1					
ANR	982705	IfStatement	if ( pgs -> color_component_map . sep_type == SEP_ALL )		982592	12					
ANR	982706	Condition	pgs -> color_component_map . sep_type == SEP_ALL	1354:8:50049:50092	982592	0	True				
ANR	982707	EqualityExpression	pgs -> color_component_map . sep_type == SEP_ALL		982592	0		==			
ANR	982708	MemberAccess	pgs -> color_component_map . sep_type		982592	0					
ANR	982709	PtrMemberAccess	pgs -> color_component_map		982592	0					
ANR	982710	Identifier	pgs		982592	0					
ANR	982711	Identifier	color_component_map		982592	1					
ANR	982712	Identifier	sep_type		982592	1					
ANR	982713	Identifier	SEP_ALL		982592	1					
ANR	982714	CompoundStatement		16:54:672:672	982592	1					
ANR	982715	IfStatement	if ( additive )		982592	0					
ANR	982716	Condition	additive	1359:12:50262:50269	982592	0	True				
ANR	982717	Identifier	additive		982592	0					
ANR	982718	ExpressionStatement	comp_value = frac_1 - comp_value	1360:12:50284:50316	982592	1	True				
ANR	982719	AssignmentExpression	comp_value = frac_1 - comp_value		982592	0		=			
ANR	982720	Identifier	comp_value		982592	0					
ANR	982721	AdditiveExpression	frac_1 - comp_value		982592	1		-			
ANR	982722	Identifier	frac_1		982592	0					
ANR	982723	Identifier	comp_value		982592	1					
ANR	982724	ForStatement	for ( i = 0 ; i < pgs -> color_component_map . num_colorants ; i ++ )		982592	1					
ANR	982725	ForInit	i = 0 ;	1363:13:50385:50390	982592	0	True				
ANR	982726	AssignmentExpression	i = 0		982592	0		=			
ANR	982727	Identifier	i		982592	0					
ANR	982728	PrimaryExpression	0		982592	1					
ANR	982729	Condition	i < pgs -> color_component_map . num_colorants	1363:20:50392:50433	982592	1	True				
ANR	982730	RelationalExpression	i < pgs -> color_component_map . num_colorants		982592	0		<			
ANR	982731	Identifier	i		982592	0					
ANR	982732	MemberAccess	pgs -> color_component_map . num_colorants		982592	1					
ANR	982733	PtrMemberAccess	pgs -> color_component_map		982592	0					
ANR	982734	Identifier	pgs		982592	0					
ANR	982735	Identifier	color_component_map		982592	1					
ANR	982736	Identifier	num_colorants		982592	1					
ANR	982737	PostIncDecOperationExpression	i ++	1363:64:50436:50438	982592	2	True				
ANR	982738	Identifier	i		982592	0					
ANR	982739	IncDec	++		982592	1					
ANR	982740	ExpressionStatement	cm_comps [ i ] = comp_value	1364:12:50453:50477	982592	3	True				
ANR	982741	AssignmentExpression	cm_comps [ i ] = comp_value		982592	0		=			
ANR	982742	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982743	Identifier	cm_comps		982592	0					
ANR	982744	Identifier	i		982592	1					
ANR	982745	Identifier	comp_value		982592	1					
ANR	982746	IfStatement	if ( des_profile -> data_cs == gsCIELAB || des_profile -> islab )		982592	2					
ANR	982747	Condition	des_profile -> data_cs == gsCIELAB || des_profile -> islab	1371:12:50902:50955	982592	0	True				
ANR	982748	OrExpression	des_profile -> data_cs == gsCIELAB || des_profile -> islab		982592	0		||			
ANR	982749	EqualityExpression	des_profile -> data_cs == gsCIELAB		982592	0		==			
ANR	982750	PtrMemberAccess	des_profile -> data_cs		982592	0					
ANR	982751	Identifier	des_profile		982592	0					
ANR	982752	Identifier	data_cs		982592	1					
ANR	982753	Identifier	gsCIELAB		982592	1					
ANR	982754	PtrMemberAccess	des_profile -> islab		982592	1					
ANR	982755	Identifier	des_profile		982592	0					
ANR	982756	Identifier	islab		982592	1					
ANR	982757	CompoundStatement		33:68:1535:1535	982592	1					
ANR	982758	ExpressionStatement	use_rgb2dev_icc = true	1372:12:50972:50994	982592	0	True				
ANR	982759	AssignmentExpression	use_rgb2dev_icc = true		982592	0		=			
ANR	982760	Identifier	use_rgb2dev_icc		982592	0					
ANR	982761	Identifier	true		982592	1					
ANR	982762	ElseStatement	else		982592	0					
ANR	982763	CompoundStatement		37:9:1598:1598	982592	0					
ANR	982764	ExpressionStatement	"map_components_to_colorants ( & comp_value , & ( pgs -> color_component_map ) , cm_comps )"	1377:8:51068:51147	982592	0	True				
ANR	982765	CallExpression	"map_components_to_colorants ( & comp_value , & ( pgs -> color_component_map ) , cm_comps )"		982592	0					
ANR	982766	Callee	map_components_to_colorants		982592	0					
ANR	982767	Identifier	map_components_to_colorants		982592	0					
ANR	982768	ArgumentList	& comp_value		982592	1					
ANR	982769	Argument	& comp_value		982592	0					
ANR	982770	UnaryOperationExpression	& comp_value		982592	0					
ANR	982771	UnaryOperator	&		982592	0					
ANR	982772	Identifier	comp_value		982592	1					
ANR	982773	Argument	& ( pgs -> color_component_map )		982592	1					
ANR	982774	UnaryOperationExpression	& ( pgs -> color_component_map )		982592	0					
ANR	982775	UnaryOperator	&		982592	0					
ANR	982776	PtrMemberAccess	pgs -> color_component_map		982592	1					
ANR	982777	Identifier	pgs		982592	0					
ANR	982778	Identifier	color_component_map		982592	1					
ANR	982779	Argument	cm_comps		982592	2					
ANR	982780	Identifier	cm_comps		982592	0					
ANR	982781	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		982592	13					
ANR	982782	Condition	pgs -> effective_transfer_non_identity_count == 0	1381:8:51230:51276	982592	0	True				
ANR	982783	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		982592	0		==			
ANR	982784	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		982592	0					
ANR	982785	Identifier	pgs		982592	0					
ANR	982786	Identifier	effective_transfer_non_identity_count		982592	1					
ANR	982787	PrimaryExpression	0		982592	1					
ANR	982788	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982592	1					
ANR	982789	ForInit	i = 0 ;	1382:13:51292:51297	982592	0	True				
ANR	982790	AssignmentExpression	i = 0		982592	0		=			
ANR	982791	Identifier	i		982592	0					
ANR	982792	PrimaryExpression	0		982592	1					
ANR	982793	Condition	i < ncomps	1382:20:51299:51308	982592	1	True				
ANR	982794	RelationalExpression	i < ncomps		982592	0		<			
ANR	982795	Identifier	i		982592	0					
ANR	982796	Identifier	ncomps		982592	1					
ANR	982797	PostIncDecOperationExpression	i ++	1382:32:51311:51313	982592	2	True				
ANR	982798	Identifier	i		982592	0					
ANR	982799	IncDec	++		982592	1					
ANR	982800	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1383:12:51328:51356	982592	3	True				
ANR	982801	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		982592	0		=			
ANR	982802	ArrayIndexing	cv [ i ]		982592	0					
ANR	982803	Identifier	cv		982592	0					
ANR	982804	Identifier	i		982592	1					
ANR	982805	CallExpression	frac2cv ( cm_comps [ i ] )		982592	1					
ANR	982806	Callee	frac2cv		982592	0					
ANR	982807	Identifier	frac2cv		982592	0					
ANR	982808	ArgumentList	cm_comps [ i ]		982592	1					
ANR	982809	Argument	cm_comps [ i ]		982592	0					
ANR	982810	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982811	Identifier	cm_comps		982592	0					
ANR	982812	Identifier	i		982592	1					
ANR	982813	ElseStatement	else		982592	0					
ANR	982814	IfStatement	if ( additive )		982592	0					
ANR	982815	Condition	additive	1384:13:51371:51378	982592	0	True				
ANR	982816	Identifier	additive		982592	0					
ANR	982817	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982592	1					
ANR	982818	ForInit	i = 0 ;	1385:13:51394:51399	982592	0	True				
ANR	982819	AssignmentExpression	i = 0		982592	0		=			
ANR	982820	Identifier	i		982592	0					
ANR	982821	PrimaryExpression	0		982592	1					
ANR	982822	Condition	i < ncomps	1385:20:51401:51410	982592	1	True				
ANR	982823	RelationalExpression	i < ncomps		982592	0		<			
ANR	982824	Identifier	i		982592	0					
ANR	982825	Identifier	ncomps		982592	1					
ANR	982826	PostIncDecOperationExpression	i ++	1385:32:51413:51415	982592	2	True				
ANR	982827	Identifier	i		982592	0					
ANR	982828	IncDec	++		982592	1					
ANR	982829	CompoundStatement		47:37:1995:1995	982592	3					
ANR	982830	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1386:12:51432:51536	982592	0	True				
ANR	982831	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		982592	0		=			
ANR	982832	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982833	Identifier	cm_comps		982592	0					
ANR	982834	Identifier	i		982592	1					
ANR	982835	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		982592	1					
ANR	982836	Callee	gx_map_color_frac		982592	0					
ANR	982837	Identifier	gx_map_color_frac		982592	0					
ANR	982838	ArgumentList	pgs		982592	1					
ANR	982839	Argument	pgs		982592	0					
ANR	982840	Identifier	pgs		982592	0					
ANR	982841	Argument	cm_comps [ i ]		982592	1					
ANR	982842	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982843	Identifier	cm_comps		982592	0					
ANR	982844	Identifier	i		982592	1					
ANR	982845	Argument	effective_transfer [ i ]		982592	2					
ANR	982846	ArrayIndexing	effective_transfer [ i ]		982592	0					
ANR	982847	Identifier	effective_transfer		982592	0					
ANR	982848	Identifier	i		982592	1					
ANR	982849	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1388:12:51550:51578	982592	1	True				
ANR	982850	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		982592	0		=			
ANR	982851	ArrayIndexing	cv [ i ]		982592	0					
ANR	982852	Identifier	cv		982592	0					
ANR	982853	Identifier	i		982592	1					
ANR	982854	CallExpression	frac2cv ( cm_comps [ i ] )		982592	1					
ANR	982855	Callee	frac2cv		982592	0					
ANR	982856	Identifier	frac2cv		982592	0					
ANR	982857	ArgumentList	cm_comps [ i ]		982592	1					
ANR	982858	Argument	cm_comps [ i ]		982592	0					
ANR	982859	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982860	Identifier	cm_comps		982592	0					
ANR	982861	Identifier	i		982592	1					
ANR	982862	ElseStatement	else		982592	0					
ANR	982863	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982592	0					
ANR	982864	ForInit	i = 0 ;	1391:13:51612:51617	982592	0	True				
ANR	982865	AssignmentExpression	i = 0		982592	0		=			
ANR	982866	Identifier	i		982592	0					
ANR	982867	PrimaryExpression	0		982592	1					
ANR	982868	Condition	i < ncomps	1391:20:51619:51628	982592	1	True				
ANR	982869	RelationalExpression	i < ncomps		982592	0		<			
ANR	982870	Identifier	i		982592	0					
ANR	982871	Identifier	ncomps		982592	1					
ANR	982872	PostIncDecOperationExpression	i ++	1391:32:51631:51633	982592	2	True				
ANR	982873	Identifier	i		982592	0					
ANR	982874	IncDec	++		982592	1					
ANR	982875	CompoundStatement		53:37:2213:2213	982592	3					
ANR	982876	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1392:12:51650:51772	982592	0	True				
ANR	982877	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		982592	0		=			
ANR	982878	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982879	Identifier	cm_comps		982592	0					
ANR	982880	Identifier	i		982592	1					
ANR	982881	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		982592	1		-			
ANR	982882	Identifier	frac_1		982592	0					
ANR	982883	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		982592	1					
ANR	982884	Callee	gx_map_color_frac		982592	0					
ANR	982885	Identifier	gx_map_color_frac		982592	0					
ANR	982886	ArgumentList	pgs		982592	1					
ANR	982887	Argument	pgs		982592	0					
ANR	982888	Identifier	pgs		982592	0					
ANR	982889	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		982592	1					
ANR	982890	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		982592	0					
ANR	982891	CastTarget	frac		982592	0					
ANR	982892	AdditiveExpression	frac_1 - cm_comps [ i ]		982592	1		-			
ANR	982893	Identifier	frac_1		982592	0					
ANR	982894	ArrayIndexing	cm_comps [ i ]		982592	1					
ANR	982895	Identifier	cm_comps		982592	0					
ANR	982896	Identifier	i		982592	1					
ANR	982897	Argument	effective_transfer [ i ]		982592	2					
ANR	982898	ArrayIndexing	effective_transfer [ i ]		982592	0					
ANR	982899	Identifier	effective_transfer		982592	0					
ANR	982900	Identifier	i		982592	1					
ANR	982901	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1394:12:51786:51814	982592	1	True				
ANR	982902	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		982592	0		=			
ANR	982903	ArrayIndexing	cv [ i ]		982592	0					
ANR	982904	Identifier	cv		982592	0					
ANR	982905	Identifier	i		982592	1					
ANR	982906	CallExpression	frac2cv ( cm_comps [ i ] )		982592	1					
ANR	982907	Callee	frac2cv		982592	0					
ANR	982908	Identifier	frac2cv		982592	0					
ANR	982909	ArgumentList	cm_comps [ i ]		982592	1					
ANR	982910	Argument	cm_comps [ i ]		982592	0					
ANR	982911	ArrayIndexing	cm_comps [ i ]		982592	0					
ANR	982912	Identifier	cm_comps		982592	0					
ANR	982913	Identifier	i		982592	1					
ANR	982914	IfStatement	if ( use_rgb2dev_icc && pgs -> icc_manager -> default_rgb != NULL )		982592	14					
ANR	982915	Condition	use_rgb2dev_icc && pgs -> icc_manager -> default_rgb != NULL	1397:8:51835:51890	982592	0	True				
ANR	982916	AndExpression	use_rgb2dev_icc && pgs -> icc_manager -> default_rgb != NULL		982592	0		&&			
ANR	982917	Identifier	use_rgb2dev_icc		982592	0					
ANR	982918	EqualityExpression	pgs -> icc_manager -> default_rgb != NULL		982592	1		!=			
ANR	982919	PtrMemberAccess	pgs -> icc_manager -> default_rgb		982592	0					
ANR	982920	PtrMemberAccess	pgs -> icc_manager		982592	0					
ANR	982921	Identifier	pgs		982592	0					
ANR	982922	Identifier	icc_manager		982592	1					
ANR	982923	Identifier	default_rgb		982592	1					
ANR	982924	Identifier	NULL		982592	1					
ANR	982925	CompoundStatement		64:8:2675:2767	982592	1					
ANR	982926	IdentifierDeclStatement	gsicc_link_t * icc_link ;	1400:8:52016:52038	982592	0	True				
ANR	982927	IdentifierDecl	* icc_link		982592	0					
ANR	982928	IdentifierDeclType	gsicc_link_t *		982592	0					
ANR	982929	Identifier	icc_link		982592	1					
ANR	982930	IdentifierDeclStatement	gsicc_rendering_param_t rendering_params ;	1401:8:52048:52088	982592	1	True				
ANR	982931	IdentifierDecl	rendering_params		982592	0					
ANR	982932	IdentifierDeclType	gsicc_rendering_param_t		982592	0					
ANR	982933	Identifier	rendering_params		982592	1					
ANR	982934	IdentifierDeclStatement	"unsigned short psrc [ GS_CLIENT_COLOR_MAX_COMPONENTS ] , psrc_cm [ GS_CLIENT_COLOR_MAX_COMPONENTS ] ;"	1402:8:52098:52190	982592	2	True				
ANR	982935	IdentifierDecl	psrc [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982936	IdentifierDeclType	unsigned short [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982937	Identifier	psrc		982592	1					
ANR	982938	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		982592	2					
ANR	982939	IdentifierDecl	psrc_cm [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		982592	1					
ANR	982940	IdentifierDeclType	unsigned short [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		982592	0					
ANR	982941	Identifier	psrc_cm		982592	1					
ANR	982942	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		982592	2					
ANR	982943	ExpressionStatement	rendering_params . black_point_comp = pgs -> blackptcomp	1404:8:52201:52253	982592	3	True				
ANR	982944	AssignmentExpression	rendering_params . black_point_comp = pgs -> blackptcomp		982592	0		=			
ANR	982945	MemberAccess	rendering_params . black_point_comp		982592	0					
ANR	982946	Identifier	rendering_params		982592	0					
ANR	982947	Identifier	black_point_comp		982592	1					
ANR	982948	PtrMemberAccess	pgs -> blackptcomp		982592	1					
ANR	982949	Identifier	pgs		982592	0					
ANR	982950	Identifier	blackptcomp		982592	1					
ANR	982951	ExpressionStatement	rendering_params . graphics_type_tag = dev -> graphics_type_tag	1405:8:52263:52322	982592	4	True				
ANR	982952	AssignmentExpression	rendering_params . graphics_type_tag = dev -> graphics_type_tag		982592	0		=			
ANR	982953	MemberAccess	rendering_params . graphics_type_tag		982592	0					
ANR	982954	Identifier	rendering_params		982592	0					
ANR	982955	Identifier	graphics_type_tag		982592	1					
ANR	982956	PtrMemberAccess	dev -> graphics_type_tag		982592	1					
ANR	982957	Identifier	dev		982592	0					
ANR	982958	Identifier	graphics_type_tag		982592	1					
ANR	982959	ExpressionStatement	rendering_params . override_icc = false	1406:8:52332:52369	982592	5	True				
ANR	982960	AssignmentExpression	rendering_params . override_icc = false		982592	0		=			
ANR	982961	MemberAccess	rendering_params . override_icc		982592	0					
ANR	982962	Identifier	rendering_params		982592	0					
ANR	982963	Identifier	override_icc		982592	1					
ANR	982964	Identifier	false		982592	1					
ANR	982965	ExpressionStatement	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED	1407:8:52379:52433	982592	6	True				
ANR	982966	AssignmentExpression	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED		982592	0		=			
ANR	982967	MemberAccess	rendering_params . preserve_black		982592	0					
ANR	982968	Identifier	rendering_params		982592	0					
ANR	982969	Identifier	preserve_black		982592	1					
ANR	982970	Identifier	gsBKPRESNOTSPECIFIED		982592	1					
ANR	982971	ExpressionStatement	rendering_params . rendering_intent = pgs -> renderingintent	1408:8:52443:52499	982592	7	True				
ANR	982972	AssignmentExpression	rendering_params . rendering_intent = pgs -> renderingintent		982592	0		=			
ANR	982973	MemberAccess	rendering_params . rendering_intent		982592	0					
ANR	982974	Identifier	rendering_params		982592	0					
ANR	982975	Identifier	rendering_intent		982592	1					
ANR	982976	PtrMemberAccess	pgs -> renderingintent		982592	1					
ANR	982977	Identifier	pgs		982592	0					
ANR	982978	Identifier	renderingintent		982592	1					
ANR	982979	ExpressionStatement	rendering_params . cmm = gsCMM_DEFAULT	1409:8:52509:52545	982592	8	True				
ANR	982980	AssignmentExpression	rendering_params . cmm = gsCMM_DEFAULT		982592	0		=			
ANR	982981	MemberAccess	rendering_params . cmm		982592	0					
ANR	982982	Identifier	rendering_params		982592	0					
ANR	982983	Identifier	cmm		982592	1					
ANR	982984	Identifier	gsCMM_DEFAULT		982592	1					
ANR	982985	ExpressionStatement	"icc_link = gsicc_get_link_profile ( pgs , dev , pgs -> icc_manager -> default_rgb , des_profile , & rendering_params , pgs -> memory , dev_profile -> devicegraytok )"	1411:8:52556:52787	982592	9	True				
ANR	982986	AssignmentExpression	"icc_link = gsicc_get_link_profile ( pgs , dev , pgs -> icc_manager -> default_rgb , des_profile , & rendering_params , pgs -> memory , dev_profile -> devicegraytok )"		982592	0		=			
ANR	982987	Identifier	icc_link		982592	0					
ANR	982988	CallExpression	"gsicc_get_link_profile ( pgs , dev , pgs -> icc_manager -> default_rgb , des_profile , & rendering_params , pgs -> memory , dev_profile -> devicegraytok )"		982592	1					
ANR	982989	Callee	gsicc_get_link_profile		982592	0					
ANR	982990	Identifier	gsicc_get_link_profile		982592	0					
ANR	982991	ArgumentList	pgs		982592	1					
ANR	982992	Argument	pgs		982592	0					
ANR	982993	Identifier	pgs		982592	0					
ANR	982994	Argument	dev		982592	1					
ANR	982995	Identifier	dev		982592	0					
ANR	982996	Argument	pgs -> icc_manager -> default_rgb		982592	2					
ANR	982997	PtrMemberAccess	pgs -> icc_manager -> default_rgb		982592	0					
ANR	982998	PtrMemberAccess	pgs -> icc_manager		982592	0					
ANR	982999	Identifier	pgs		982592	0					
ANR	983000	Identifier	icc_manager		982592	1					
ANR	983001	Identifier	default_rgb		982592	1					
ANR	983002	Argument	des_profile		982592	3					
ANR	983003	Identifier	des_profile		982592	0					
ANR	983004	Argument	& rendering_params		982592	4					
ANR	983005	UnaryOperationExpression	& rendering_params		982592	0					
ANR	983006	UnaryOperator	&		982592	0					
ANR	983007	Identifier	rendering_params		982592	1					
ANR	983008	Argument	pgs -> memory		982592	5					
ANR	983009	PtrMemberAccess	pgs -> memory		982592	0					
ANR	983010	Identifier	pgs		982592	0					
ANR	983011	Identifier	memory		982592	1					
ANR	983012	Argument	dev_profile -> devicegraytok		982592	6					
ANR	983013	PtrMemberAccess	dev_profile -> devicegraytok		982592	0					
ANR	983014	Identifier	dev_profile		982592	0					
ANR	983015	Identifier	devicegraytok		982592	1					
ANR	983016	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982592	10					
ANR	983017	ForInit	i = 0 ;	1415:13:52836:52841	982592	0	True				
ANR	983018	AssignmentExpression	i = 0		982592	0		=			
ANR	983019	Identifier	i		982592	0					
ANR	983020	PrimaryExpression	0		982592	1					
ANR	983021	Condition	i < ncomps	1415:20:52843:52852	982592	1	True				
ANR	983022	RelationalExpression	i < ncomps		982592	0		<			
ANR	983023	Identifier	i		982592	0					
ANR	983024	Identifier	ncomps		982592	1					
ANR	983025	PostIncDecOperationExpression	i ++	1415:32:52855:52857	982592	2	True				
ANR	983026	Identifier	i		982592	0					
ANR	983027	IncDec	++		982592	1					
ANR	983028	CompoundStatement		77:37:3437:3437	982592	3					
ANR	983029	ExpressionStatement	psrc [ i ] = cv [ i ]	1416:12:52874:52889	982592	0	True				
ANR	983030	AssignmentExpression	psrc [ i ] = cv [ i ]		982592	0		=			
ANR	983031	ArrayIndexing	psrc [ i ]		982592	0					
ANR	983032	Identifier	psrc		982592	0					
ANR	983033	Identifier	i		982592	1					
ANR	983034	ArrayIndexing	cv [ i ]		982592	1					
ANR	983035	Identifier	cv		982592	0					
ANR	983036	Identifier	i		982592	1					
ANR	983037	ExpressionStatement	"( icc_link -> procs . map_color ) ( dev , icc_link , & ( psrc [ 0 ] ) , & ( psrc_cm [ 0 ] ) , 2 )"	1418:8:52909:52981	982592	11	True				
ANR	983038	CallExpression	"( icc_link -> procs . map_color ) ( dev , icc_link , & ( psrc [ 0 ] ) , & ( psrc_cm [ 0 ] ) , 2 )"		982592	0					
ANR	983039	Callee	icc_link -> procs . map_color		982592	0					
ANR	983040	MemberAccess	icc_link -> procs . map_color		982592	0					
ANR	983041	PtrMemberAccess	icc_link -> procs		982592	0					
ANR	983042	Identifier	icc_link		982592	0					
ANR	983043	Identifier	procs		982592	1					
ANR	983044	Identifier	map_color		982592	1					
ANR	983045	ArgumentList	dev		982592	1					
ANR	983046	Argument	dev		982592	0					
ANR	983047	Identifier	dev		982592	0					
ANR	983048	Argument	icc_link		982592	1					
ANR	983049	Identifier	icc_link		982592	0					
ANR	983050	Argument	& ( psrc [ 0 ] )		982592	2					
ANR	983051	UnaryOperationExpression	& ( psrc [ 0 ] )		982592	0					
ANR	983052	UnaryOperator	&		982592	0					
ANR	983053	ArrayIndexing	psrc [ 0 ]		982592	1					
ANR	983054	Identifier	psrc		982592	0					
ANR	983055	PrimaryExpression	0		982592	1					
ANR	983056	Argument	& ( psrc_cm [ 0 ] )		982592	3					
ANR	983057	UnaryOperationExpression	& ( psrc_cm [ 0 ] )		982592	0					
ANR	983058	UnaryOperator	&		982592	0					
ANR	983059	ArrayIndexing	psrc_cm [ 0 ]		982592	1					
ANR	983060	Identifier	psrc_cm		982592	0					
ANR	983061	PrimaryExpression	0		982592	1					
ANR	983062	Argument	2		982592	4					
ANR	983063	PrimaryExpression	2		982592	0					
ANR	983064	ExpressionStatement	gsicc_release_link ( icc_link )	1419:8:52991:53019	982592	12	True				
ANR	983065	CallExpression	gsicc_release_link ( icc_link )		982592	0					
ANR	983066	Callee	gsicc_release_link		982592	0					
ANR	983067	Identifier	gsicc_release_link		982592	0					
ANR	983068	ArgumentList	icc_link		982592	1					
ANR	983069	Argument	icc_link		982592	0					
ANR	983070	Identifier	icc_link		982592	0					
ANR	983071	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982592	13					
ANR	983072	ForInit	i = 0 ;	1420:13:53034:53039	982592	0	True				
ANR	983073	AssignmentExpression	i = 0		982592	0		=			
ANR	983074	Identifier	i		982592	0					
ANR	983075	PrimaryExpression	0		982592	1					
ANR	983076	Condition	i < ncomps	1420:20:53041:53050	982592	1	True				
ANR	983077	RelationalExpression	i < ncomps		982592	0		<			
ANR	983078	Identifier	i		982592	0					
ANR	983079	Identifier	ncomps		982592	1					
ANR	983080	PostIncDecOperationExpression	i ++	1420:32:53053:53055	982592	2	True				
ANR	983081	Identifier	i		982592	0					
ANR	983082	IncDec	++		982592	1					
ANR	983083	CompoundStatement		82:37:3635:3635	982592	3					
ANR	983084	ExpressionStatement	cv [ i ] = psrc_cm [ i ]	1421:12:53072:53090	982592	0	True				
ANR	983085	AssignmentExpression	cv [ i ] = psrc_cm [ i ]		982592	0		=			
ANR	983086	ArrayIndexing	cv [ i ]		982592	0					
ANR	983087	Identifier	cv		982592	0					
ANR	983088	Identifier	i		982592	1					
ANR	983089	ArrayIndexing	psrc_cm [ i ]		982592	1					
ANR	983090	Identifier	psrc_cm		982592	0					
ANR	983091	Identifier	i		982592	1					
ANR	983092	IfStatement	"if ( dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 ) )"		982592	15					
ANR	983093	Condition	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"	1426:8:53219:53279	982592	0	True				
ANR	983094	CallExpression	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"		982592	0					
ANR	983095	Callee	"dev_proc ( dev , dev_spec_op )"		982592	0					
ANR	983096	CallExpression	"dev_proc ( dev , dev_spec_op )"		982592	0					
ANR	983097	Callee	dev_proc		982592	0					
ANR	983098	Identifier	dev_proc		982592	0					
ANR	983099	ArgumentList	dev		982592	1					
ANR	983100	Argument	dev		982592	0					
ANR	983101	Identifier	dev		982592	0					
ANR	983102	Argument	dev_spec_op		982592	1					
ANR	983103	Identifier	dev_spec_op		982592	0					
ANR	983104	ArgumentList	dev		982592	1					
ANR	983105	Argument	dev		982592	0					
ANR	983106	Identifier	dev		982592	0					
ANR	983107	Argument	gxdso_supports_devn		982592	1					
ANR	983108	Identifier	gxdso_supports_devn		982592	0					
ANR	983109	Argument	NULL		982592	2					
ANR	983110	Identifier	NULL		982592	0					
ANR	983111	Argument	0		982592	3					
ANR	983112	PrimaryExpression	0		982592	0					
ANR	983113	CompoundStatement		88:71:3859:3859	982592	1					
ANR	983114	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		982592	0					
ANR	983115	ForInit	i = 0 ;	1427:13:53297:53302	982592	0	True				
ANR	983116	AssignmentExpression	i = 0		982592	0		=			
ANR	983117	Identifier	i		982592	0					
ANR	983118	PrimaryExpression	0		982592	1					
ANR	983119	Condition	i < ncomps	1427:20:53304:53313	982592	1	True				
ANR	983120	RelationalExpression	i < ncomps		982592	0		<			
ANR	983121	Identifier	i		982592	0					
ANR	983122	Identifier	ncomps		982592	1					
ANR	983123	PostIncDecOperationExpression	i ++	1427:32:53316:53318	982592	2	True				
ANR	983124	Identifier	i		982592	0					
ANR	983125	IncDec	++		982592	1					
ANR	983126	ExpressionStatement	pdc -> colors . devn . values [ i ] = cv [ i ]	1428:12:53333:53367	982592	3	True				
ANR	983127	AssignmentExpression	pdc -> colors . devn . values [ i ] = cv [ i ]		982592	0		=			
ANR	983128	ArrayIndexing	pdc -> colors . devn . values [ i ]		982592	0					
ANR	983129	MemberAccess	pdc -> colors . devn . values		982592	0					
ANR	983130	MemberAccess	pdc -> colors . devn		982592	0					
ANR	983131	PtrMemberAccess	pdc -> colors		982592	0					
ANR	983132	Identifier	pdc		982592	0					
ANR	983133	Identifier	colors		982592	1					
ANR	983134	Identifier	devn		982592	1					
ANR	983135	Identifier	values		982592	1					
ANR	983136	Identifier	i		982592	1					
ANR	983137	ArrayIndexing	cv [ i ]		982592	1					
ANR	983138	Identifier	cv		982592	0					
ANR	983139	Identifier	i		982592	1					
ANR	983140	ExpressionStatement	pdc -> type = gx_dc_type_devn	1429:8:53377:53404	982592	1	True				
ANR	983141	AssignmentExpression	pdc -> type = gx_dc_type_devn		982592	0		=			
ANR	983142	PtrMemberAccess	pdc -> type		982592	0					
ANR	983143	Identifier	pdc		982592	0					
ANR	983144	Identifier	type		982592	1					
ANR	983145	Identifier	gx_dc_type_devn		982592	1					
ANR	983146	ReturnStatement	return ;	1430:8:53414:53420	982592	2	True				
ANR	983147	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , cv )"	1434:4:53467:53511	982592	16	True				
ANR	983148	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , cv )"		982592	0		=			
ANR	983149	Identifier	color		982592	0					
ANR	983150	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		982592	1					
ANR	983151	Callee	"dev_proc ( dev , encode_color )"		982592	0					
ANR	983152	CallExpression	"dev_proc ( dev , encode_color )"		982592	0					
ANR	983153	Callee	dev_proc		982592	0					
ANR	983154	Identifier	dev_proc		982592	0					
ANR	983155	ArgumentList	dev		982592	1					
ANR	983156	Argument	dev		982592	0					
ANR	983157	Identifier	dev		982592	0					
ANR	983158	Argument	encode_color		982592	1					
ANR	983159	Identifier	encode_color		982592	0					
ANR	983160	ArgumentList	dev		982592	1					
ANR	983161	Argument	dev		982592	0					
ANR	983162	Identifier	dev		982592	0					
ANR	983163	Argument	cv		982592	1					
ANR	983164	Identifier	cv		982592	0					
ANR	983165	IfStatement	if ( color != gx_no_color_index )		982592	17					
ANR	983166	Condition	color != gx_no_color_index	1437:8:53597:53622	982592	0	True				
ANR	983167	EqualityExpression	color != gx_no_color_index		982592	0		!=			
ANR	983168	Identifier	color		982592	0					
ANR	983169	Identifier	gx_no_color_index		982592	1					
ANR	983170	CompoundStatement		99:36:4202:4202	982592	1					
ANR	983171	ExpressionStatement	"color_set_pure ( pdc , color )"	1438:8:53635:53661	982592	0	True				
ANR	983172	CallExpression	"color_set_pure ( pdc , color )"		982592	0					
ANR	983173	Callee	color_set_pure		982592	0					
ANR	983174	Identifier	color_set_pure		982592	0					
ANR	983175	ArgumentList	pdc		982592	1					
ANR	983176	Argument	pdc		982592	0					
ANR	983177	Identifier	pdc		982592	0					
ANR	983178	Argument	color		982592	1					
ANR	983179	Identifier	color		982592	0					
ANR	983180	ReturnStatement	return ;	1439:8:53671:53677	982592	1	True				
ANR	983181	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		982592	18					
ANR	983182	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1442:8:53694:53823	982592	0	True				
ANR	983183	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		982592	0		==			
ANR	983184	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		982592	0					
ANR	983185	Callee	gx_render_device_DeviceN		982592	0					
ANR	983186	Identifier	gx_render_device_DeviceN		982592	0					
ANR	983187	ArgumentList	cm_comps		982592	1					
ANR	983188	Argument	cm_comps		982592	0					
ANR	983189	Identifier	cm_comps		982592	0					
ANR	983190	Argument	pdc		982592	1					
ANR	983191	Identifier	pdc		982592	0					
ANR	983192	Argument	dev		982592	2					
ANR	983193	Identifier	dev		982592	0					
ANR	983194	Argument	pgs -> dev_ht		982592	3					
ANR	983195	PtrMemberAccess	pgs -> dev_ht		982592	0					
ANR	983196	Identifier	pgs		982592	0					
ANR	983197	Identifier	dev_ht		982592	1					
ANR	983198	Argument	& pgs -> screen_phase [ select ]		982592	4					
ANR	983199	UnaryOperationExpression	& pgs -> screen_phase [ select ]		982592	0					
ANR	983200	UnaryOperator	&		982592	0					
ANR	983201	ArrayIndexing	pgs -> screen_phase [ select ]		982592	1					
ANR	983202	PtrMemberAccess	pgs -> screen_phase		982592	0					
ANR	983203	Identifier	pgs		982592	0					
ANR	983204	Identifier	screen_phase		982592	1					
ANR	983205	Identifier	select		982592	1					
ANR	983206	PrimaryExpression	1		982592	1					
ANR	983207	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1444:8:53834:53877	982592	1	True				
ANR	983208	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		982592	0					
ANR	983209	Callee	gx_color_load_select		982592	0					
ANR	983210	Identifier	gx_color_load_select		982592	0					
ANR	983211	ArgumentList	pdc		982592	1					
ANR	983212	Argument	pdc		982592	0					
ANR	983213	Identifier	pdc		982592	0					
ANR	983214	Argument	pgs		982592	1					
ANR	983215	Identifier	pgs		982592	0					
ANR	983216	Argument	dev		982592	2					
ANR	983217	Identifier	dev		982592	0					
ANR	983218	Argument	select		982592	3					
ANR	983219	Identifier	select		982592	0					
ANR	983220	ReturnType	static void		982592	1					
ANR	983221	Identifier	cmap_separation_direct		982592	2					
ANR	983222	ParameterList	"frac all , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		982592	3					
ANR	983223	Parameter	frac all	1337:23:49306:49313	982592	0	True				
ANR	983224	ParameterType	frac		982592	0					
ANR	983225	Identifier	all		982592	1					
ANR	983226	Parameter	gx_device_color * pdc	1337:33:49316:49336	982592	1	True				
ANR	983227	ParameterType	gx_device_color *		982592	0					
ANR	983228	Identifier	pdc		982592	1					
ANR	983229	Parameter	const gs_gstate * pgs	1337:56:49339:49359	982592	2	True				
ANR	983230	ParameterType	const gs_gstate *		982592	0					
ANR	983231	Identifier	pgs		982592	1					
ANR	983232	Parameter	gx_device * dev	1338:17:49379:49393	982592	3	True				
ANR	983233	ParameterType	gx_device *		982592	0					
ANR	983234	Identifier	dev		982592	1					
ANR	983235	Parameter	gs_color_select_t select	1338:34:49396:49419	982592	4	True				
ANR	983236	ParameterType	gs_color_select_t		982592	0					
ANR	983237	Identifier	select		982592	1					
ANR	983238	CFGEntryNode	ENTRY		982592		True				
ANR	983239	CFGExitNode	EXIT		982592		True				
ANR	983240	Symbol	rendering_params . graphics_type_tag		982592						
ANR	983241	Symbol	pdc -> type		982592						
ANR	983242	Symbol	select		982592						
ANR	983243	Symbol	* pdc -> colors . devn		982592						
ANR	983244	Symbol	* pgs		982592						
ANR	983245	Symbol	encode_color		982592						
ANR	983246	Symbol	dev_profile		982592						
ANR	983247	Symbol	dev_spec_op		982592						
ANR	983248	Symbol	* psrc		982592						
ANR	983249	Symbol	GX_CINFO_POLARITY_ADDITIVE		982592						
ANR	983250	Symbol	effective_transfer		982592						
ANR	983251	Symbol	use_rgb2dev_icc		982592						
ANR	983252	Symbol	gx_render_device_DeviceN		982592						
ANR	983253	Symbol	& comp_value		982592						
ANR	983254	Symbol	gx_no_color_index		982592						
ANR	983255	Symbol	dev		982592						
ANR	983256	Symbol	dev -> color_info . polarity		982592						
ANR	983257	Symbol	dev_profile -> devicegraytok		982592						
ANR	983258	Symbol	* pdc		982592						
ANR	983259	Symbol	* cm_comps		982592						
ANR	983260	Symbol	all		982592						
ANR	983261	Symbol	rendering_params . cmm		982592						
ANR	983262	Symbol	pdc -> colors . devn . values		982592						
ANR	983263	Symbol	frac_1		982592						
ANR	983264	Symbol	NULL		982592						
ANR	983265	Symbol	pdc -> colors		982592						
ANR	983266	Symbol	dev -> color_info . num_components		982592						
ANR	983267	Symbol	& dev_profile		982592						
ANR	983268	Symbol	gsCIELAB		982592						
ANR	983269	Symbol	pgs -> icc_manager -> default_rgb		982592						
ANR	983270	Symbol	* dev_profile		982592						
ANR	983271	Symbol	pgs -> blackptcomp		982592						
ANR	983272	Symbol	pgs -> color_component_map . num_colorants		982592						
ANR	983273	Symbol	gsBKPRESNOTSPECIFIED		982592						
ANR	983274	Symbol	rendering_params . preserve_black		982592						
ANR	983275	Symbol	& render_cond		982592						
ANR	983276	Symbol	gsicc_get_link_profile		982592						
ANR	983277	Symbol	gxdso_supports_devn		982592						
ANR	983278	Symbol	pgs -> screen_phase		982592						
ANR	983279	Symbol	pgs -> color_component_map . sep_type		982592						
ANR	983280	Symbol	additive		982592						
ANR	983281	Symbol	des_profile -> islab		982592						
ANR	983282	Symbol	* * pgs		982592						
ANR	983283	Symbol	rendering_params		982592						
ANR	983284	Symbol	icc_link		982592						
ANR	983285	Symbol	pgs -> renderingintent		982592						
ANR	983286	Symbol	gx_map_color_frac		982592						
ANR	983287	Symbol	comp_value		982592						
ANR	983288	Symbol	pgs -> effective_transfer_non_identity_count		982592						
ANR	983289	Symbol	true		982592						
ANR	983290	Symbol	dev -> graphics_type_tag		982592						
ANR	983291	Symbol	* cv		982592						
ANR	983292	Symbol	frac2cv		982592						
ANR	983293	Symbol	* dev		982592						
ANR	983294	Symbol	psrc		982592						
ANR	983295	Symbol	pgs -> icc_manager		982592						
ANR	983296	Symbol	* * pdc		982592						
ANR	983297	Symbol	color		982592						
ANR	983298	Symbol	ncomps		982592						
ANR	983299	Symbol	dev -> color_info		982592						
ANR	983300	Symbol	gx_dc_type_devn		982592						
ANR	983301	Symbol	& des_profile		982592						
ANR	983302	Symbol	* effective_transfer		982592						
ANR	983303	Symbol	* psrc_cm		982592						
ANR	983304	Symbol	dev_proc		982592						
ANR	983305	Symbol	des_profile		982592						
ANR	983306	Symbol	* des_profile		982592						
ANR	983307	Symbol	rendering_params . override_icc		982592						
ANR	983308	Symbol	pdc -> colors . devn		982592						
ANR	983309	Symbol	pgs		982592						
ANR	983310	Symbol	pgs -> memory		982592						
ANR	983311	Symbol	* pdc -> colors . devn . values		982592						
ANR	983312	Symbol	render_cond		982592						
ANR	983313	Symbol	get_profile		982592						
ANR	983314	Symbol	& rendering_params		982592						
ANR	983315	Symbol	rendering_params . black_point_comp		982592						
ANR	983316	Symbol	des_profile -> data_cs		982592						
ANR	983317	Symbol	gsCMM_DEFAULT		982592						
ANR	983318	Symbol	rendering_params . rendering_intent		982592						
ANR	983319	Symbol	false		982592						
ANR	983320	Symbol	i		982592						
ANR	983321	Symbol	icc_link -> procs		982592						
ANR	983322	Symbol	* pgs -> icc_manager		982592						
ANR	983323	Symbol	& pgs -> color_component_map		982592						
ANR	983324	Symbol	pdc		982592						
ANR	983325	Symbol	pgs -> color_component_map		982592						
ANR	983326	Symbol	cm_comps		982592						
ANR	983327	Symbol	cv		982592						
ANR	983328	Symbol	* i		982592						
ANR	983329	Symbol	SEP_ALL		982592						
ANR	983330	Symbol	pgs -> dev_ht		982592						
ANR	983331	Symbol	psrc_cm		982592						
ANR	983332	Symbol	* icc_link		982592						
ANR	983333	Symbol	* pdc -> colors		982592						
ANR	983334	Function	devicen_has_cmyk	1448:0:53957:54207							
ANR	983335	FunctionDef	devicen_has_cmyk (gx_device * dev)		983334	0					
ANR	983336	CompoundStatement		1450:0:54003:54207	983334	0					
ANR	983337	IdentifierDeclStatement	gs_devn_params * devn_params ;	1451:4:54009:54036	983334	0	True				
ANR	983338	IdentifierDecl	* devn_params		983334	0					
ANR	983339	IdentifierDeclType	gs_devn_params *		983334	0					
ANR	983340	Identifier	devn_params		983334	1					
ANR	983341	ExpressionStatement	"devn_params = dev_proc ( dev , ret_devn_params ) ( dev )"	1453:4:54043:54092	983334	1	True				
ANR	983342	AssignmentExpression	"devn_params = dev_proc ( dev , ret_devn_params ) ( dev )"		983334	0		=			
ANR	983343	Identifier	devn_params		983334	0					
ANR	983344	CallExpression	"dev_proc ( dev , ret_devn_params ) ( dev )"		983334	1					
ANR	983345	Callee	"dev_proc ( dev , ret_devn_params )"		983334	0					
ANR	983346	CallExpression	"dev_proc ( dev , ret_devn_params )"		983334	0					
ANR	983347	Callee	dev_proc		983334	0					
ANR	983348	Identifier	dev_proc		983334	0					
ANR	983349	ArgumentList	dev		983334	1					
ANR	983350	Argument	dev		983334	0					
ANR	983351	Identifier	dev		983334	0					
ANR	983352	Argument	ret_devn_params		983334	1					
ANR	983353	Identifier	ret_devn_params		983334	0					
ANR	983354	ArgumentList	dev		983334	1					
ANR	983355	Argument	dev		983334	0					
ANR	983356	Identifier	dev		983334	0					
ANR	983357	IfStatement	if ( devn_params == NULL )		983334	2					
ANR	983358	Condition	devn_params == NULL	1454:8:54102:54120	983334	0	True				
ANR	983359	EqualityExpression	devn_params == NULL		983334	0		==			
ANR	983360	Identifier	devn_params		983334	0					
ANR	983361	Identifier	NULL		983334	1					
ANR	983362	CompoundStatement		5:29:119:119	983334	1					
ANR	983363	ReturnStatement	return false ;	1455:8:54133:54145	983334	0	True				
ANR	983364	Identifier	false		983334	0					
ANR	983365	ReturnStatement	return ( devn_params -> num_std_colorant_names == 4 ) ;	1457:4:54157:54205	983334	3	True				
ANR	983366	EqualityExpression	devn_params -> num_std_colorant_names == 4		983334	0		==			
ANR	983367	PtrMemberAccess	devn_params -> num_std_colorant_names		983334	0					
ANR	983368	Identifier	devn_params		983334	0					
ANR	983369	Identifier	num_std_colorant_names		983334	1					
ANR	983370	PrimaryExpression	4		983334	1					
ANR	983371	ReturnType	static bool		983334	1					
ANR	983372	Identifier	devicen_has_cmyk		983334	2					
ANR	983373	ParameterList	gx_device * dev		983334	3					
ANR	983374	Parameter	gx_device * dev	1449:17:53986:54000	983334	0	True				
ANR	983375	ParameterType	gx_device *		983334	0					
ANR	983376	Identifier	dev		983334	1					
ANR	983377	CFGEntryNode	ENTRY		983334		True				
ANR	983378	CFGExitNode	EXIT		983334		True				
ANR	983379	Symbol	NULL		983334						
ANR	983380	Symbol	dev		983334						
ANR	983381	Symbol	dev_proc		983334						
ANR	983382	Symbol	ret_devn_params		983334						
ANR	983383	Symbol	false		983334						
ANR	983384	Symbol	devn_params -> num_std_colorant_names		983334						
ANR	983385	Symbol	devn_params		983334						
ANR	983386	Symbol	* devn_params		983334						
ANR	983387	Function	devicen_icc_cmyk	1460:0:54210:56036							
ANR	983388	FunctionDef	"devicen_icc_cmyk (frac cm_comps [ ] , const gs_gstate * pgs , gx_device * dev)"		983387	0					
ANR	983389	CompoundStatement		1462:0:54294:56036	983387	0					
ANR	983390	IdentifierDeclStatement	gsicc_link_t * icc_link ;	1463:4:54300:54322	983387	0	True				
ANR	983391	IdentifierDecl	* icc_link		983387	0					
ANR	983392	IdentifierDeclType	gsicc_link_t *		983387	0					
ANR	983393	Identifier	icc_link		983387	1					
ANR	983394	IdentifierDeclStatement	gsicc_rendering_param_t rendering_params ;	1464:4:54328:54368	983387	1	True				
ANR	983395	IdentifierDecl	rendering_params		983387	0					
ANR	983396	IdentifierDeclType	gsicc_rendering_param_t		983387	0					
ANR	983397	Identifier	rendering_params		983387	1					
ANR	983398	IdentifierDeclStatement	unsigned short psrc [ GS_CLIENT_COLOR_MAX_COMPONENTS ] ;	1465:4:54374:54425	983387	2	True				
ANR	983399	IdentifierDecl	psrc [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		983387	0					
ANR	983400	IdentifierDeclType	unsigned short [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		983387	0					
ANR	983401	Identifier	psrc		983387	1					
ANR	983402	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		983387	2					
ANR	983403	IdentifierDeclStatement	unsigned short psrc_cm [ GS_CLIENT_COLOR_MAX_COMPONENTS ] ;	1466:4:54431:54485	983387	3	True				
ANR	983404	IdentifierDecl	psrc_cm [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		983387	0					
ANR	983405	IdentifierDeclType	unsigned short [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		983387	0					
ANR	983406	Identifier	psrc_cm		983387	1					
ANR	983407	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		983387	2					
ANR	983408	IdentifierDeclStatement	"int k , code ;"	1467:4:54491:54502	983387	4	True				
ANR	983409	IdentifierDecl	k		983387	0					
ANR	983410	IdentifierDeclType	int		983387	0					
ANR	983411	Identifier	k		983387	1					
ANR	983412	IdentifierDecl	code		983387	1					
ANR	983413	IdentifierDeclType	int		983387	0					
ANR	983414	Identifier	code		983387	1					
ANR	983415	IdentifierDeclStatement	unsigned short * psrc_temp ;	1468:4:54508:54533	983387	5	True				
ANR	983416	IdentifierDecl	* psrc_temp		983387	0					
ANR	983417	IdentifierDeclType	unsigned short *		983387	0					
ANR	983418	Identifier	psrc_temp		983387	1					
ANR	983419	IdentifierDeclStatement	gsicc_rendering_param_t render_cond ;	1469:4:54539:54574	983387	6	True				
ANR	983420	IdentifierDecl	render_cond		983387	0					
ANR	983421	IdentifierDeclType	gsicc_rendering_param_t		983387	0					
ANR	983422	Identifier	render_cond		983387	1					
ANR	983423	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile = NULL ;	1470:4:54580:54617	983387	7	True				
ANR	983424	IdentifierDecl	* dev_profile = NULL		983387	0					
ANR	983425	IdentifierDeclType	cmm_dev_profile_t *		983387	0					
ANR	983426	Identifier	dev_profile		983387	1					
ANR	983427	AssignmentExpression	* dev_profile = NULL		983387	2		=			
ANR	983428	Identifier	NULL		983387	0					
ANR	983429	Identifier	NULL		983387	1					
ANR	983430	IdentifierDeclStatement	cmm_profile_t * des_profile = NULL ;	1471:4:54623:54656	983387	8	True				
ANR	983431	IdentifierDecl	* des_profile = NULL		983387	0					
ANR	983432	IdentifierDeclType	cmm_profile_t *		983387	0					
ANR	983433	Identifier	des_profile		983387	1					
ANR	983434	AssignmentExpression	* des_profile = NULL		983387	2		=			
ANR	983435	Identifier	NULL		983387	0					
ANR	983436	Identifier	NULL		983387	1					
ANR	983437	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	1473:4:54663:54716	983387	9	True				
ANR	983438	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		983387	0		=			
ANR	983439	Identifier	code		983387	0					
ANR	983440	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		983387	1					
ANR	983441	Callee	"dev_proc ( dev , get_profile )"		983387	0					
ANR	983442	CallExpression	"dev_proc ( dev , get_profile )"		983387	0					
ANR	983443	Callee	dev_proc		983387	0					
ANR	983444	Identifier	dev_proc		983387	0					
ANR	983445	ArgumentList	dev		983387	1					
ANR	983446	Argument	dev		983387	0					
ANR	983447	Identifier	dev		983387	0					
ANR	983448	Argument	get_profile		983387	1					
ANR	983449	Identifier	get_profile		983387	0					
ANR	983450	ArgumentList	dev		983387	1					
ANR	983451	Argument	dev		983387	0					
ANR	983452	Identifier	dev		983387	0					
ANR	983453	Argument	& dev_profile		983387	1					
ANR	983454	UnaryOperationExpression	& dev_profile		983387	0					
ANR	983455	UnaryOperator	&		983387	0					
ANR	983456	Identifier	dev_profile		983387	1					
ANR	983457	IfStatement	if ( code < 0 )		983387	10					
ANR	983458	Condition	code < 0	1474:8:54726:54733	983387	0	True				
ANR	983459	RelationalExpression	code < 0		983387	0		<			
ANR	983460	Identifier	code		983387	0					
ANR	983461	PrimaryExpression	0		983387	1					
ANR	983462	ReturnStatement	return code ;	1475:8:54744:54755	983387	1	True				
ANR	983463	Identifier	code		983387	0					
ANR	983464	ExpressionStatement	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"	1477:4:54762:54874	983387	11	True				
ANR	983465	CallExpression	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"		983387	0					
ANR	983466	Callee	gsicc_extract_profile		983387	0					
ANR	983467	Identifier	gsicc_extract_profile		983387	0					
ANR	983468	ArgumentList	dev -> graphics_type_tag		983387	1					
ANR	983469	Argument	dev -> graphics_type_tag		983387	0					
ANR	983470	PtrMemberAccess	dev -> graphics_type_tag		983387	0					
ANR	983471	Identifier	dev		983387	0					
ANR	983472	Identifier	graphics_type_tag		983387	1					
ANR	983473	Argument	dev_profile		983387	1					
ANR	983474	Identifier	dev_profile		983387	0					
ANR	983475	Argument	& des_profile		983387	2					
ANR	983476	UnaryOperationExpression	& des_profile		983387	0					
ANR	983477	UnaryOperator	&		983387	0					
ANR	983478	Identifier	des_profile		983387	1					
ANR	983479	Argument	& render_cond		983387	3					
ANR	983480	UnaryOperationExpression	& render_cond		983387	0					
ANR	983481	UnaryOperator	&		983387	0					
ANR	983482	Identifier	render_cond		983387	1					
ANR	983483	ExpressionStatement	rendering_params . black_point_comp = pgs -> blackptcomp	1480:4:54920:54972	983387	12	True				
ANR	983484	AssignmentExpression	rendering_params . black_point_comp = pgs -> blackptcomp		983387	0		=			
ANR	983485	MemberAccess	rendering_params . black_point_comp		983387	0					
ANR	983486	Identifier	rendering_params		983387	0					
ANR	983487	Identifier	black_point_comp		983387	1					
ANR	983488	PtrMemberAccess	pgs -> blackptcomp		983387	1					
ANR	983489	Identifier	pgs		983387	0					
ANR	983490	Identifier	blackptcomp		983387	1					
ANR	983491	ExpressionStatement	rendering_params . graphics_type_tag = dev -> graphics_type_tag	1481:4:54978:55037	983387	13	True				
ANR	983492	AssignmentExpression	rendering_params . graphics_type_tag = dev -> graphics_type_tag		983387	0		=			
ANR	983493	MemberAccess	rendering_params . graphics_type_tag		983387	0					
ANR	983494	Identifier	rendering_params		983387	0					
ANR	983495	Identifier	graphics_type_tag		983387	1					
ANR	983496	PtrMemberAccess	dev -> graphics_type_tag		983387	1					
ANR	983497	Identifier	dev		983387	0					
ANR	983498	Identifier	graphics_type_tag		983387	1					
ANR	983499	ExpressionStatement	rendering_params . override_icc = false	1482:4:55043:55080	983387	14	True				
ANR	983500	AssignmentExpression	rendering_params . override_icc = false		983387	0		=			
ANR	983501	MemberAccess	rendering_params . override_icc		983387	0					
ANR	983502	Identifier	rendering_params		983387	0					
ANR	983503	Identifier	override_icc		983387	1					
ANR	983504	Identifier	false		983387	1					
ANR	983505	ExpressionStatement	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED	1483:4:55086:55140	983387	15	True				
ANR	983506	AssignmentExpression	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED		983387	0		=			
ANR	983507	MemberAccess	rendering_params . preserve_black		983387	0					
ANR	983508	Identifier	rendering_params		983387	0					
ANR	983509	Identifier	preserve_black		983387	1					
ANR	983510	Identifier	gsBKPRESNOTSPECIFIED		983387	1					
ANR	983511	ExpressionStatement	rendering_params . rendering_intent = pgs -> renderingintent	1484:4:55146:55202	983387	16	True				
ANR	983512	AssignmentExpression	rendering_params . rendering_intent = pgs -> renderingintent		983387	0		=			
ANR	983513	MemberAccess	rendering_params . rendering_intent		983387	0					
ANR	983514	Identifier	rendering_params		983387	0					
ANR	983515	Identifier	rendering_intent		983387	1					
ANR	983516	PtrMemberAccess	pgs -> renderingintent		983387	1					
ANR	983517	Identifier	pgs		983387	0					
ANR	983518	Identifier	renderingintent		983387	1					
ANR	983519	ExpressionStatement	rendering_params . cmm = gsCMM_DEFAULT	1485:4:55208:55244	983387	17	True				
ANR	983520	AssignmentExpression	rendering_params . cmm = gsCMM_DEFAULT		983387	0		=			
ANR	983521	MemberAccess	rendering_params . cmm		983387	0					
ANR	983522	Identifier	rendering_params		983387	0					
ANR	983523	Identifier	cmm		983387	1					
ANR	983524	Identifier	gsCMM_DEFAULT		983387	1					
ANR	983525	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		983387	18					
ANR	983526	ForInit	k = 0 ;	1487:9:55315:55320	983387	0	True				
ANR	983527	AssignmentExpression	k = 0		983387	0		=			
ANR	983528	Identifier	k		983387	0					
ANR	983529	PrimaryExpression	0		983387	1					
ANR	983530	Condition	k < 4	1487:16:55322:55326	983387	1	True				
ANR	983531	RelationalExpression	k < 4		983387	0		<			
ANR	983532	Identifier	k		983387	0					
ANR	983533	PrimaryExpression	4		983387	1					
ANR	983534	PostIncDecOperationExpression	k ++	1487:23:55329:55331	983387	2	True				
ANR	983535	Identifier	k		983387	0					
ANR	983536	IncDec	++		983387	1					
ANR	983537	CompoundStatement		26:27:1038:1038	983387	3					
ANR	983538	ExpressionStatement	psrc [ k ] = frac2cv ( cm_comps [ k ] )	1488:8:55343:55373	983387	0	True				
ANR	983539	AssignmentExpression	psrc [ k ] = frac2cv ( cm_comps [ k ] )		983387	0		=			
ANR	983540	ArrayIndexing	psrc [ k ]		983387	0					
ANR	983541	Identifier	psrc		983387	0					
ANR	983542	Identifier	k		983387	1					
ANR	983543	CallExpression	frac2cv ( cm_comps [ k ] )		983387	1					
ANR	983544	Callee	frac2cv		983387	0					
ANR	983545	Identifier	frac2cv		983387	0					
ANR	983546	ArgumentList	cm_comps [ k ]		983387	1					
ANR	983547	Argument	cm_comps [ k ]		983387	0					
ANR	983548	ArrayIndexing	cm_comps [ k ]		983387	0					
ANR	983549	Identifier	cm_comps		983387	0					
ANR	983550	Identifier	k		983387	1					
ANR	983551	ExpressionStatement	"icc_link = gsicc_get_link_profile ( pgs , dev , pgs -> icc_manager -> default_cmyk , des_profile , & rendering_params , pgs -> memory , dev_profile -> devicegraytok )"	1490:4:55385:55565	983387	19	True				
ANR	983552	AssignmentExpression	"icc_link = gsicc_get_link_profile ( pgs , dev , pgs -> icc_manager -> default_cmyk , des_profile , & rendering_params , pgs -> memory , dev_profile -> devicegraytok )"		983387	0		=			
ANR	983553	Identifier	icc_link		983387	0					
ANR	983554	CallExpression	"gsicc_get_link_profile ( pgs , dev , pgs -> icc_manager -> default_cmyk , des_profile , & rendering_params , pgs -> memory , dev_profile -> devicegraytok )"		983387	1					
ANR	983555	Callee	gsicc_get_link_profile		983387	0					
ANR	983556	Identifier	gsicc_get_link_profile		983387	0					
ANR	983557	ArgumentList	pgs		983387	1					
ANR	983558	Argument	pgs		983387	0					
ANR	983559	Identifier	pgs		983387	0					
ANR	983560	Argument	dev		983387	1					
ANR	983561	Identifier	dev		983387	0					
ANR	983562	Argument	pgs -> icc_manager -> default_cmyk		983387	2					
ANR	983563	PtrMemberAccess	pgs -> icc_manager -> default_cmyk		983387	0					
ANR	983564	PtrMemberAccess	pgs -> icc_manager		983387	0					
ANR	983565	Identifier	pgs		983387	0					
ANR	983566	Identifier	icc_manager		983387	1					
ANR	983567	Identifier	default_cmyk		983387	1					
ANR	983568	Argument	des_profile		983387	3					
ANR	983569	Identifier	des_profile		983387	0					
ANR	983570	Argument	& rendering_params		983387	4					
ANR	983571	UnaryOperationExpression	& rendering_params		983387	0					
ANR	983572	UnaryOperator	&		983387	0					
ANR	983573	Identifier	rendering_params		983387	1					
ANR	983574	Argument	pgs -> memory		983387	5					
ANR	983575	PtrMemberAccess	pgs -> memory		983387	0					
ANR	983576	Identifier	pgs		983387	0					
ANR	983577	Identifier	memory		983387	1					
ANR	983578	Argument	dev_profile -> devicegraytok		983387	6					
ANR	983579	PtrMemberAccess	dev_profile -> devicegraytok		983387	0					
ANR	983580	Identifier	dev_profile		983387	0					
ANR	983581	Identifier	devicegraytok		983387	1					
ANR	983582	IfStatement	if ( icc_link -> is_identity )		983387	20					
ANR	983583	Condition	icc_link -> is_identity	1494:8:55605:55625	983387	0	True				
ANR	983584	PtrMemberAccess	icc_link -> is_identity		983387	0					
ANR	983585	Identifier	icc_link		983387	0					
ANR	983586	Identifier	is_identity		983387	1					
ANR	983587	CompoundStatement		33:31:1333:1333	983387	1					
ANR	983588	ExpressionStatement	psrc_temp = & ( psrc [ 0 ] )	1495:8:55638:55660	983387	0	True				
ANR	983589	AssignmentExpression	psrc_temp = & ( psrc [ 0 ] )		983387	0		=			
ANR	983590	Identifier	psrc_temp		983387	0					
ANR	983591	UnaryOperationExpression	& ( psrc [ 0 ] )		983387	1					
ANR	983592	UnaryOperator	&		983387	0					
ANR	983593	ArrayIndexing	psrc [ 0 ]		983387	1					
ANR	983594	Identifier	psrc		983387	0					
ANR	983595	PrimaryExpression	0		983387	1					
ANR	983596	ElseStatement	else		983387	0					
ANR	983597	CompoundStatement		35:11:1378:1378	983387	0					
ANR	983598	ExpressionStatement	psrc_temp = & ( psrc_cm [ 0 ] )	1498:8:55717:55742	983387	0	True				
ANR	983599	AssignmentExpression	psrc_temp = & ( psrc_cm [ 0 ] )		983387	0		=			
ANR	983600	Identifier	psrc_temp		983387	0					
ANR	983601	UnaryOperationExpression	& ( psrc_cm [ 0 ] )		983387	1					
ANR	983602	UnaryOperator	&		983387	0					
ANR	983603	ArrayIndexing	psrc_cm [ 0 ]		983387	1					
ANR	983604	Identifier	psrc_cm		983387	0					
ANR	983605	PrimaryExpression	0		983387	1					
ANR	983606	ExpressionStatement	"( icc_link -> procs . map_color ) ( dev , icc_link , psrc , psrc_temp , 2 )"	1499:8:55752:55814	983387	1	True				
ANR	983607	CallExpression	"( icc_link -> procs . map_color ) ( dev , icc_link , psrc , psrc_temp , 2 )"		983387	0					
ANR	983608	Callee	icc_link -> procs . map_color		983387	0					
ANR	983609	MemberAccess	icc_link -> procs . map_color		983387	0					
ANR	983610	PtrMemberAccess	icc_link -> procs		983387	0					
ANR	983611	Identifier	icc_link		983387	0					
ANR	983612	Identifier	procs		983387	1					
ANR	983613	Identifier	map_color		983387	1					
ANR	983614	ArgumentList	dev		983387	1					
ANR	983615	Argument	dev		983387	0					
ANR	983616	Identifier	dev		983387	0					
ANR	983617	Argument	icc_link		983387	1					
ANR	983618	Identifier	icc_link		983387	0					
ANR	983619	Argument	psrc		983387	2					
ANR	983620	Identifier	psrc		983387	0					
ANR	983621	Argument	psrc_temp		983387	3					
ANR	983622	Identifier	psrc_temp		983387	0					
ANR	983623	Argument	2		983387	4					
ANR	983624	PrimaryExpression	2		983387	0					
ANR	983625	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		983387	21					
ANR	983626	ForInit	k = 0 ;	1502:9:55868:55873	983387	0	True				
ANR	983627	AssignmentExpression	k = 0		983387	0		=			
ANR	983628	Identifier	k		983387	0					
ANR	983629	PrimaryExpression	0		983387	1					
ANR	983630	Condition	k < 4	1502:16:55875:55879	983387	1	True				
ANR	983631	RelationalExpression	k < 4		983387	0		<			
ANR	983632	Identifier	k		983387	0					
ANR	983633	PrimaryExpression	4		983387	1					
ANR	983634	PostIncDecOperationExpression	k ++	1502:23:55882:55884	983387	2	True				
ANR	983635	Identifier	k		983387	0					
ANR	983636	IncDec	++		983387	1					
ANR	983637	CompoundStatement		41:27:1591:1591	983387	3					
ANR	983638	ExpressionStatement	cm_comps [ k ] = float2frac ( ( ( float ) psrc_temp [ k ] ) / 65535.0 )	1503:8:55896:55952	983387	0	True				
ANR	983639	AssignmentExpression	cm_comps [ k ] = float2frac ( ( ( float ) psrc_temp [ k ] ) / 65535.0 )		983387	0		=			
ANR	983640	ArrayIndexing	cm_comps [ k ]		983387	0					
ANR	983641	Identifier	cm_comps		983387	0					
ANR	983642	Identifier	k		983387	1					
ANR	983643	CallExpression	float2frac ( ( ( float ) psrc_temp [ k ] ) / 65535.0 )		983387	1					
ANR	983644	Callee	float2frac		983387	0					
ANR	983645	Identifier	float2frac		983387	0					
ANR	983646	ArgumentList	( ( float ) psrc_temp [ k ] ) / 65535.0		983387	1					
ANR	983647	Argument	( ( float ) psrc_temp [ k ] ) / 65535.0		983387	0					
ANR	983648	MultiplicativeExpression	( ( float ) psrc_temp [ k ] ) / 65535.0		983387	0		/			
ANR	983649	CastExpression	( float ) psrc_temp [ k ]		983387	0					
ANR	983650	CastTarget	float		983387	0					
ANR	983651	ArrayIndexing	psrc_temp [ k ]		983387	1					
ANR	983652	Identifier	psrc_temp		983387	0					
ANR	983653	Identifier	k		983387	1					
ANR	983654	PrimaryExpression	65535.0		983387	1					
ANR	983655	ExpressionStatement	gsicc_release_link ( icc_link )	1506:4:55991:56019	983387	22	True				
ANR	983656	CallExpression	gsicc_release_link ( icc_link )		983387	0					
ANR	983657	Callee	gsicc_release_link		983387	0					
ANR	983658	Identifier	gsicc_release_link		983387	0					
ANR	983659	ArgumentList	icc_link		983387	1					
ANR	983660	Argument	icc_link		983387	0					
ANR	983661	Identifier	icc_link		983387	0					
ANR	983662	ReturnStatement	return ( 0 ) ;	1507:4:56025:56034	983387	23	True				
ANR	983663	PrimaryExpression	0		983387	0					
ANR	983664	ReturnType	static int		983387	1					
ANR	983665	Identifier	devicen_icc_cmyk		983387	2					
ANR	983666	ParameterList	"frac cm_comps [ ] , const gs_gstate * pgs , gx_device * dev"		983387	3					
ANR	983667	Parameter	frac cm_comps [ ]	1461:17:54238:54252	983387	0	True				
ANR	983668	ParameterType	frac [ ]		983387	0					
ANR	983669	Identifier	cm_comps		983387	1					
ANR	983670	Parameter	const gs_gstate * pgs	1461:34:54255:54275	983387	1	True				
ANR	983671	ParameterType	const gs_gstate *		983387	0					
ANR	983672	Identifier	pgs		983387	1					
ANR	983673	Parameter	gx_device * dev	1461:57:54278:54291	983387	2	True				
ANR	983674	ParameterType	gx_device *		983387	0					
ANR	983675	Identifier	dev		983387	1					
ANR	983676	CFGEntryNode	ENTRY		983387		True				
ANR	983677	CFGExitNode	EXIT		983387		True				
ANR	983678	Symbol	rendering_params . graphics_type_tag		983387						
ANR	983679	Symbol	* pgs		983387						
ANR	983680	Symbol	dev_profile		983387						
ANR	983681	Symbol	* psrc		983387						
ANR	983682	Symbol	dev		983387						
ANR	983683	Symbol	icc_link -> is_identity		983387						
ANR	983684	Symbol	dev_profile -> devicegraytok		983387						
ANR	983685	Symbol	* cm_comps		983387						
ANR	983686	Symbol	rendering_params . cmm		983387						
ANR	983687	Symbol	NULL		983387						
ANR	983688	Symbol	& dev_profile		983387						
ANR	983689	Symbol	* dev_profile		983387						
ANR	983690	Symbol	pgs -> blackptcomp		983387						
ANR	983691	Symbol	float2frac		983387						
ANR	983692	Symbol	gsBKPRESNOTSPECIFIED		983387						
ANR	983693	Symbol	rendering_params . preserve_black		983387						
ANR	983694	Symbol	& render_cond		983387						
ANR	983695	Symbol	gsicc_get_link_profile		983387						
ANR	983696	Symbol	rendering_params		983387						
ANR	983697	Symbol	* * pgs		983387						
ANR	983698	Symbol	icc_link		983387						
ANR	983699	Symbol	pgs -> renderingintent		983387						
ANR	983700	Symbol	dev -> graphics_type_tag		983387						
ANR	983701	Symbol	frac2cv		983387						
ANR	983702	Symbol	psrc		983387						
ANR	983703	Symbol	* dev		983387						
ANR	983704	Symbol	psrc_temp		983387						
ANR	983705	Symbol	code		983387						
ANR	983706	Symbol	pgs -> icc_manager		983387						
ANR	983707	Symbol	& des_profile		983387						
ANR	983708	Symbol	dev_proc		983387						
ANR	983709	Symbol	des_profile		983387						
ANR	983710	Symbol	rendering_params . override_icc		983387						
ANR	983711	Symbol	pgs		983387						
ANR	983712	Symbol	pgs -> memory		983387						
ANR	983713	Symbol	render_cond		983387						
ANR	983714	Symbol	get_profile		983387						
ANR	983715	Symbol	& rendering_params		983387						
ANR	983716	Symbol	rendering_params . black_point_comp		983387						
ANR	983717	Symbol	gsCMM_DEFAULT		983387						
ANR	983718	Symbol	rendering_params . rendering_intent		983387						
ANR	983719	Symbol	false		983387						
ANR	983720	Symbol	icc_link -> procs		983387						
ANR	983721	Symbol	* pgs -> icc_manager		983387						
ANR	983722	Symbol	k		983387						
ANR	983723	Symbol	cm_comps		983387						
ANR	983724	Symbol	* k		983387						
ANR	983725	Symbol	psrc_cm		983387						
ANR	983726	Symbol	* psrc_temp		983387						
ANR	983727	Symbol	* icc_link		983387						
ANR	983728	Symbol	pgs -> icc_manager -> default_cmyk		983387						
ANR	983729	Function	cmap_devicen_halftoned	1516:0:56196:57851							
ANR	983730	FunctionDef	"cmap_devicen_halftoned (const frac * pcc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		983729	0					
ANR	983731	CompoundStatement		1520:0:56346:57851	983729	0					
ANR	983732	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1521:4:56352:56400	983729	0	True				
ANR	983733	IdentifierDecl	i		983729	0					
ANR	983734	IdentifierDeclType	uchar		983729	0					
ANR	983735	Identifier	i		983729	1					
ANR	983736	IdentifierDecl	ncomps = dev -> color_info . num_components		983729	1					
ANR	983737	IdentifierDeclType	uchar		983729	0					
ANR	983738	Identifier	ncomps		983729	1					
ANR	983739	AssignmentExpression	ncomps = dev -> color_info . num_components		983729	2		=			
ANR	983740	Identifier	ncomps		983729	0					
ANR	983741	MemberAccess	dev -> color_info . num_components		983729	1					
ANR	983742	PtrMemberAccess	dev -> color_info		983729	0					
ANR	983743	Identifier	dev		983729	0					
ANR	983744	Identifier	color_info		983729	1					
ANR	983745	Identifier	num_components		983729	1					
ANR	983746	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1522:4:56406:56451	983729	1	True				
ANR	983747	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		983729	0					
ANR	983748	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		983729	0					
ANR	983749	Identifier	cm_comps		983729	1					
ANR	983750	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		983729	2					
ANR	983751	IdentifierDeclStatement	gsicc_rendering_param_t render_cond ;	1523:4:56457:56492	983729	2	True				
ANR	983752	IdentifierDecl	render_cond		983729	0					
ANR	983753	IdentifierDeclType	gsicc_rendering_param_t		983729	0					
ANR	983754	Identifier	render_cond		983729	1					
ANR	983755	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile = NULL ;	1524:4:56498:56535	983729	3	True				
ANR	983756	IdentifierDecl	* dev_profile = NULL		983729	0					
ANR	983757	IdentifierDeclType	cmm_dev_profile_t *		983729	0					
ANR	983758	Identifier	dev_profile		983729	1					
ANR	983759	AssignmentExpression	* dev_profile = NULL		983729	2		=			
ANR	983760	Identifier	NULL		983729	0					
ANR	983761	Identifier	NULL		983729	1					
ANR	983762	IdentifierDeclStatement	cmm_profile_t * des_profile = NULL ;	1525:4:56541:56574	983729	4	True				
ANR	983763	IdentifierDecl	* des_profile = NULL		983729	0					
ANR	983764	IdentifierDeclType	cmm_profile_t *		983729	0					
ANR	983765	Identifier	des_profile		983729	1					
ANR	983766	AssignmentExpression	* des_profile = NULL		983729	2		=			
ANR	983767	Identifier	NULL		983729	0					
ANR	983768	Identifier	NULL		983729	1					
ANR	983769	ExpressionStatement	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	1527:4:56581:56627	983729	5	True				
ANR	983770	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		983729	0					
ANR	983771	Callee	"dev_proc ( dev , get_profile )"		983729	0					
ANR	983772	CallExpression	"dev_proc ( dev , get_profile )"		983729	0					
ANR	983773	Callee	dev_proc		983729	0					
ANR	983774	Identifier	dev_proc		983729	0					
ANR	983775	ArgumentList	dev		983729	1					
ANR	983776	Argument	dev		983729	0					
ANR	983777	Identifier	dev		983729	0					
ANR	983778	Argument	get_profile		983729	1					
ANR	983779	Identifier	get_profile		983729	0					
ANR	983780	ArgumentList	dev		983729	1					
ANR	983781	Argument	dev		983729	0					
ANR	983782	Identifier	dev		983729	0					
ANR	983783	Argument	& dev_profile		983729	1					
ANR	983784	UnaryOperationExpression	& dev_profile		983729	0					
ANR	983785	UnaryOperator	&		983729	0					
ANR	983786	Identifier	dev_profile		983729	1					
ANR	983787	ExpressionStatement	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"	1528:4:56633:56745	983729	6	True				
ANR	983788	CallExpression	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"		983729	0					
ANR	983789	Callee	gsicc_extract_profile		983729	0					
ANR	983790	Identifier	gsicc_extract_profile		983729	0					
ANR	983791	ArgumentList	dev -> graphics_type_tag		983729	1					
ANR	983792	Argument	dev -> graphics_type_tag		983729	0					
ANR	983793	PtrMemberAccess	dev -> graphics_type_tag		983729	0					
ANR	983794	Identifier	dev		983729	0					
ANR	983795	Identifier	graphics_type_tag		983729	1					
ANR	983796	Argument	dev_profile		983729	1					
ANR	983797	Identifier	dev_profile		983729	0					
ANR	983798	Argument	& des_profile		983729	2					
ANR	983799	UnaryOperationExpression	& des_profile		983729	0					
ANR	983800	UnaryOperator	&		983729	0					
ANR	983801	Identifier	des_profile		983729	1					
ANR	983802	Argument	& render_cond		983729	3					
ANR	983803	UnaryOperationExpression	& render_cond		983729	0					
ANR	983804	UnaryOperator	&		983729	0					
ANR	983805	Identifier	render_cond		983729	1					
ANR	983806	ExpressionStatement	"map_components_to_colorants ( pcc , & ( pgs -> color_component_map ) , cm_comps )"	1531:4:56784:56855	983729	7	True				
ANR	983807	CallExpression	"map_components_to_colorants ( pcc , & ( pgs -> color_component_map ) , cm_comps )"		983729	0					
ANR	983808	Callee	map_components_to_colorants		983729	0					
ANR	983809	Identifier	map_components_to_colorants		983729	0					
ANR	983810	ArgumentList	pcc		983729	1					
ANR	983811	Argument	pcc		983729	0					
ANR	983812	Identifier	pcc		983729	0					
ANR	983813	Argument	& ( pgs -> color_component_map )		983729	1					
ANR	983814	UnaryOperationExpression	& ( pgs -> color_component_map )		983729	0					
ANR	983815	UnaryOperator	&		983729	0					
ANR	983816	PtrMemberAccess	pgs -> color_component_map		983729	1					
ANR	983817	Identifier	pgs		983729	0					
ANR	983818	Identifier	color_component_map		983729	1					
ANR	983819	Argument	cm_comps		983729	2					
ANR	983820	Identifier	cm_comps		983729	0					
ANR	983821	IfStatement	if ( devicen_has_cmyk ( dev ) && des_profile -> data_cs == gsCMYK )		983729	8					
ANR	983822	Condition	devicen_has_cmyk ( dev ) && des_profile -> data_cs == gsCMYK	1533:8:56943:57005	983729	0	True				
ANR	983823	AndExpression	devicen_has_cmyk ( dev ) && des_profile -> data_cs == gsCMYK		983729	0		&&			
ANR	983824	CallExpression	devicen_has_cmyk ( dev )		983729	0					
ANR	983825	Callee	devicen_has_cmyk		983729	0					
ANR	983826	Identifier	devicen_has_cmyk		983729	0					
ANR	983827	ArgumentList	dev		983729	1					
ANR	983828	Argument	dev		983729	0					
ANR	983829	Identifier	dev		983729	0					
ANR	983830	EqualityExpression	des_profile -> data_cs == gsCMYK		983729	1		==			
ANR	983831	PtrMemberAccess	des_profile -> data_cs		983729	0					
ANR	983832	Identifier	des_profile		983729	0					
ANR	983833	Identifier	data_cs		983729	1					
ANR	983834	Identifier	gsCMYK		983729	1					
ANR	983835	CompoundStatement		15:40:661:661	983729	1					
ANR	983836	ExpressionStatement	"devicen_icc_cmyk ( cm_comps , pgs , dev )"	1535:8:57018:57054	983729	0	True				
ANR	983837	CallExpression	"devicen_icc_cmyk ( cm_comps , pgs , dev )"		983729	0					
ANR	983838	Callee	devicen_icc_cmyk		983729	0					
ANR	983839	Identifier	devicen_icc_cmyk		983729	0					
ANR	983840	ArgumentList	cm_comps		983729	1					
ANR	983841	Argument	cm_comps		983729	0					
ANR	983842	Identifier	cm_comps		983729	0					
ANR	983843	Argument	pgs		983729	1					
ANR	983844	Identifier	pgs		983729	0					
ANR	983845	Argument	dev		983729	2					
ANR	983846	Identifier	dev		983729	0					
ANR	983847	IfStatement	if ( pgs -> effective_transfer_non_identity_count != 0 )		983729	9					
ANR	983848	Condition	pgs -> effective_transfer_non_identity_count != 0	1538:8:57136:57182	983729	0	True				
ANR	983849	EqualityExpression	pgs -> effective_transfer_non_identity_count != 0		983729	0		!=			
ANR	983850	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		983729	0					
ANR	983851	Identifier	pgs		983729	0					
ANR	983852	Identifier	effective_transfer_non_identity_count		983729	1					
ANR	983853	PrimaryExpression	0		983729	1					
ANR	983854	CompoundStatement		19:57:838:838	983729	1					
ANR	983855	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		983729	0					
ANR	983856	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1539:12:57199:57252	983729	0	True				
ANR	983857	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		983729	0		==			
ANR	983858	MemberAccess	dev -> color_info . polarity		983729	0					
ANR	983859	PtrMemberAccess	dev -> color_info		983729	0					
ANR	983860	Identifier	dev		983729	0					
ANR	983861	Identifier	color_info		983729	1					
ANR	983862	Identifier	polarity		983729	1					
ANR	983863	Identifier	GX_CINFO_POLARITY_ADDITIVE		983729	1					
ANR	983864	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		983729	1					
ANR	983865	ForInit	i = 0 ;	1540:17:57272:57277	983729	0	True				
ANR	983866	AssignmentExpression	i = 0		983729	0		=			
ANR	983867	Identifier	i		983729	0					
ANR	983868	PrimaryExpression	0		983729	1					
ANR	983869	Condition	i < ncomps	1540:24:57279:57288	983729	1	True				
ANR	983870	RelationalExpression	i < ncomps		983729	0		<			
ANR	983871	Identifier	i		983729	0					
ANR	983872	Identifier	ncomps		983729	1					
ANR	983873	PostIncDecOperationExpression	i ++	1540:36:57291:57293	983729	2	True				
ANR	983874	Identifier	i		983729	0					
ANR	983875	IncDec	++		983729	1					
ANR	983876	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1541:16:57312:57416	983729	3	True				
ANR	983877	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		983729	0		=			
ANR	983878	ArrayIndexing	cm_comps [ i ]		983729	0					
ANR	983879	Identifier	cm_comps		983729	0					
ANR	983880	Identifier	i		983729	1					
ANR	983881	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		983729	1					
ANR	983882	Callee	gx_map_color_frac		983729	0					
ANR	983883	Identifier	gx_map_color_frac		983729	0					
ANR	983884	ArgumentList	pgs		983729	1					
ANR	983885	Argument	pgs		983729	0					
ANR	983886	Identifier	pgs		983729	0					
ANR	983887	Argument	cm_comps [ i ]		983729	1					
ANR	983888	ArrayIndexing	cm_comps [ i ]		983729	0					
ANR	983889	Identifier	cm_comps		983729	0					
ANR	983890	Identifier	i		983729	1					
ANR	983891	Argument	effective_transfer [ i ]		983729	2					
ANR	983892	ArrayIndexing	effective_transfer [ i ]		983729	0					
ANR	983893	Identifier	effective_transfer		983729	0					
ANR	983894	Identifier	i		983729	1					
ANR	983895	ElseStatement	else		983729	0					
ANR	983896	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		983729	0					
ANR	983897	ForInit	i = 0 ;	1544:17:57448:57453	983729	0	True				
ANR	983898	AssignmentExpression	i = 0		983729	0		=			
ANR	983899	Identifier	i		983729	0					
ANR	983900	PrimaryExpression	0		983729	1					
ANR	983901	Condition	i < ncomps	1544:24:57455:57464	983729	1	True				
ANR	983902	RelationalExpression	i < ncomps		983729	0		<			
ANR	983903	Identifier	i		983729	0					
ANR	983904	Identifier	ncomps		983729	1					
ANR	983905	PostIncDecOperationExpression	i ++	1544:36:57467:57469	983729	2	True				
ANR	983906	Identifier	i		983729	0					
ANR	983907	IncDec	++		983729	1					
ANR	983908	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1545:16:57488:57610	983729	3	True				
ANR	983909	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		983729	0		=			
ANR	983910	ArrayIndexing	cm_comps [ i ]		983729	0					
ANR	983911	Identifier	cm_comps		983729	0					
ANR	983912	Identifier	i		983729	1					
ANR	983913	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		983729	1		-			
ANR	983914	Identifier	frac_1		983729	0					
ANR	983915	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		983729	1					
ANR	983916	Callee	gx_map_color_frac		983729	0					
ANR	983917	Identifier	gx_map_color_frac		983729	0					
ANR	983918	ArgumentList	pgs		983729	1					
ANR	983919	Argument	pgs		983729	0					
ANR	983920	Identifier	pgs		983729	0					
ANR	983921	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		983729	1					
ANR	983922	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		983729	0					
ANR	983923	CastTarget	frac		983729	0					
ANR	983924	AdditiveExpression	frac_1 - cm_comps [ i ]		983729	1		-			
ANR	983925	Identifier	frac_1		983729	0					
ANR	983926	ArrayIndexing	cm_comps [ i ]		983729	1					
ANR	983927	Identifier	cm_comps		983729	0					
ANR	983928	Identifier	i		983729	1					
ANR	983929	Argument	effective_transfer [ i ]		983729	2					
ANR	983930	ArrayIndexing	effective_transfer [ i ]		983729	0					
ANR	983931	Identifier	effective_transfer		983729	0					
ANR	983932	Identifier	i		983729	1					
ANR	983933	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		983729	10					
ANR	983934	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1550:8:57666:57795	983729	0	True				
ANR	983935	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		983729	0		==			
ANR	983936	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		983729	0					
ANR	983937	Callee	gx_render_device_DeviceN		983729	0					
ANR	983938	Identifier	gx_render_device_DeviceN		983729	0					
ANR	983939	ArgumentList	cm_comps		983729	1					
ANR	983940	Argument	cm_comps		983729	0					
ANR	983941	Identifier	cm_comps		983729	0					
ANR	983942	Argument	pdc		983729	1					
ANR	983943	Identifier	pdc		983729	0					
ANR	983944	Argument	dev		983729	2					
ANR	983945	Identifier	dev		983729	0					
ANR	983946	Argument	pgs -> dev_ht		983729	3					
ANR	983947	PtrMemberAccess	pgs -> dev_ht		983729	0					
ANR	983948	Identifier	pgs		983729	0					
ANR	983949	Identifier	dev_ht		983729	1					
ANR	983950	Argument	& pgs -> screen_phase [ select ]		983729	4					
ANR	983951	UnaryOperationExpression	& pgs -> screen_phase [ select ]		983729	0					
ANR	983952	UnaryOperator	&		983729	0					
ANR	983953	ArrayIndexing	pgs -> screen_phase [ select ]		983729	1					
ANR	983954	PtrMemberAccess	pgs -> screen_phase		983729	0					
ANR	983955	Identifier	pgs		983729	0					
ANR	983956	Identifier	screen_phase		983729	1					
ANR	983957	Identifier	select		983729	1					
ANR	983958	PrimaryExpression	1		983729	1					
ANR	983959	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1552:8:57806:57849	983729	1	True				
ANR	983960	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		983729	0					
ANR	983961	Callee	gx_color_load_select		983729	0					
ANR	983962	Identifier	gx_color_load_select		983729	0					
ANR	983963	ArgumentList	pdc		983729	1					
ANR	983964	Argument	pdc		983729	0					
ANR	983965	Identifier	pdc		983729	0					
ANR	983966	Argument	pgs		983729	1					
ANR	983967	Identifier	pgs		983729	0					
ANR	983968	Argument	dev		983729	2					
ANR	983969	Identifier	dev		983729	0					
ANR	983970	Argument	select		983729	3					
ANR	983971	Identifier	select		983729	0					
ANR	983972	ReturnType	static void		983729	1					
ANR	983973	Identifier	cmap_devicen_halftoned		983729	2					
ANR	983974	ParameterList	"const frac * pcc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		983729	3					
ANR	983975	Parameter	const frac * pcc	1517:23:56231:56246	983729	0	True				
ANR	983976	ParameterType	const frac *		983729	0					
ANR	983977	Identifier	pcc		983729	1					
ANR	983978	Parameter	gx_device_color * pdc	1518:4:56253:56273	983729	1	True				
ANR	983979	ParameterType	gx_device_color *		983729	0					
ANR	983980	Identifier	pdc		983729	1					
ANR	983981	Parameter	const gs_gstate * pgs	1518:27:56276:56296	983729	2	True				
ANR	983982	ParameterType	const gs_gstate *		983729	0					
ANR	983983	Identifier	pgs		983729	1					
ANR	983984	Parameter	gx_device * dev	1518:50:56299:56313	983729	3	True				
ANR	983985	ParameterType	gx_device *		983729	0					
ANR	983986	Identifier	dev		983729	1					
ANR	983987	Parameter	gs_color_select_t select	1519:4:56320:56343	983729	4	True				
ANR	983988	ParameterType	gs_color_select_t		983729	0					
ANR	983989	Identifier	select		983729	1					
ANR	983990	CFGEntryNode	ENTRY		983729		True				
ANR	983991	CFGExitNode	EXIT		983729		True				
ANR	983992	Symbol	* dev		983729						
ANR	983993	Symbol	select		983729						
ANR	983994	Symbol	* pgs		983729						
ANR	983995	Symbol	dev_profile		983729						
ANR	983996	Symbol	ncomps		983729						
ANR	983997	Symbol	devicen_has_cmyk		983729						
ANR	983998	Symbol	dev -> color_info		983729						
ANR	983999	Symbol	GX_CINFO_POLARITY_ADDITIVE		983729						
ANR	984000	Symbol	effective_transfer		983729						
ANR	984001	Symbol	gx_render_device_DeviceN		983729						
ANR	984002	Symbol	pcc		983729						
ANR	984003	Symbol	& des_profile		983729						
ANR	984004	Symbol	* effective_transfer		983729						
ANR	984005	Symbol	dev		983729						
ANR	984006	Symbol	dev -> color_info . polarity		983729						
ANR	984007	Symbol	des_profile		983729						
ANR	984008	Symbol	* des_profile		983729						
ANR	984009	Symbol	* cm_comps		983729						
ANR	984010	Symbol	pgs		983729						
ANR	984011	Symbol	render_cond		983729						
ANR	984012	Symbol	get_profile		983729						
ANR	984013	Symbol	gsCMYK		983729						
ANR	984014	Symbol	des_profile -> data_cs		983729						
ANR	984015	Symbol	frac_1		983729						
ANR	984016	Symbol	NULL		983729						
ANR	984017	Symbol	dev -> color_info . num_components		983729						
ANR	984018	Symbol	& dev_profile		983729						
ANR	984019	Symbol	i		983729						
ANR	984020	Symbol	& pgs -> color_component_map		983729						
ANR	984021	Symbol	& render_cond		983729						
ANR	984022	Symbol	pgs -> screen_phase		983729						
ANR	984023	Symbol	pdc		983729						
ANR	984024	Symbol	cm_comps		983729						
ANR	984025	Symbol	* i		983729						
ANR	984026	Symbol	gx_map_color_frac		983729						
ANR	984027	Symbol	pgs -> effective_transfer_non_identity_count		983729						
ANR	984028	Symbol	pgs -> dev_ht		983729						
ANR	984029	Symbol	dev -> graphics_type_tag		983729						
ANR	984030	Function	cmap_devicen_direct	1559:0:57980:62279							
ANR	984031	FunctionDef	"cmap_devicen_direct (const frac * pcc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		984030	0					
ANR	984032	CompoundStatement		1563:0:58127:62279	984030	0					
ANR	984033	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1564:4:58133:58181	984030	0	True				
ANR	984034	IdentifierDecl	i		984030	0					
ANR	984035	IdentifierDeclType	uchar		984030	0					
ANR	984036	Identifier	i		984030	1					
ANR	984037	IdentifierDecl	ncomps = dev -> color_info . num_components		984030	1					
ANR	984038	IdentifierDeclType	uchar		984030	0					
ANR	984039	Identifier	ncomps		984030	1					
ANR	984040	AssignmentExpression	ncomps = dev -> color_info . num_components		984030	2		=			
ANR	984041	Identifier	ncomps		984030	0					
ANR	984042	MemberAccess	dev -> color_info . num_components		984030	1					
ANR	984043	PtrMemberAccess	dev -> color_info		984030	0					
ANR	984044	Identifier	dev		984030	0					
ANR	984045	Identifier	color_info		984030	1					
ANR	984046	Identifier	num_components		984030	1					
ANR	984047	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1565:4:58187:58232	984030	1	True				
ANR	984048	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		984030	0					
ANR	984049	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		984030	0					
ANR	984050	Identifier	cm_comps		984030	1					
ANR	984051	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		984030	2					
ANR	984052	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	1566:4:58238:58287	984030	2	True				
ANR	984053	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		984030	0					
ANR	984054	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		984030	0					
ANR	984055	Identifier	cv		984030	1					
ANR	984056	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		984030	2					
ANR	984057	IdentifierDeclStatement	gx_color_index color ;	1567:4:58293:58313	984030	3	True				
ANR	984058	IdentifierDecl	color		984030	0					
ANR	984059	IdentifierDeclType	gx_color_index		984030	0					
ANR	984060	Identifier	color		984030	1					
ANR	984061	IdentifierDeclStatement	gsicc_rendering_param_t render_cond ;	1568:4:58319:58354	984030	4	True				
ANR	984062	IdentifierDecl	render_cond		984030	0					
ANR	984063	IdentifierDeclType	gsicc_rendering_param_t		984030	0					
ANR	984064	Identifier	render_cond		984030	1					
ANR	984065	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile = NULL ;	1569:4:58360:58397	984030	5	True				
ANR	984066	IdentifierDecl	* dev_profile = NULL		984030	0					
ANR	984067	IdentifierDeclType	cmm_dev_profile_t *		984030	0					
ANR	984068	Identifier	dev_profile		984030	1					
ANR	984069	AssignmentExpression	* dev_profile = NULL		984030	2		=			
ANR	984070	Identifier	NULL		984030	0					
ANR	984071	Identifier	NULL		984030	1					
ANR	984072	IdentifierDeclStatement	cmm_profile_t * des_profile = NULL ;	1570:4:58403:58436	984030	6	True				
ANR	984073	IdentifierDecl	* des_profile = NULL		984030	0					
ANR	984074	IdentifierDeclType	cmm_profile_t *		984030	0					
ANR	984075	Identifier	des_profile		984030	1					
ANR	984076	AssignmentExpression	* des_profile = NULL		984030	2		=			
ANR	984077	Identifier	NULL		984030	0					
ANR	984078	Identifier	NULL		984030	1					
ANR	984079	ExpressionStatement	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	1572:4:58443:58489	984030	7	True				
ANR	984080	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		984030	0					
ANR	984081	Callee	"dev_proc ( dev , get_profile )"		984030	0					
ANR	984082	CallExpression	"dev_proc ( dev , get_profile )"		984030	0					
ANR	984083	Callee	dev_proc		984030	0					
ANR	984084	Identifier	dev_proc		984030	0					
ANR	984085	ArgumentList	dev		984030	1					
ANR	984086	Argument	dev		984030	0					
ANR	984087	Identifier	dev		984030	0					
ANR	984088	Argument	get_profile		984030	1					
ANR	984089	Identifier	get_profile		984030	0					
ANR	984090	ArgumentList	dev		984030	1					
ANR	984091	Argument	dev		984030	0					
ANR	984092	Identifier	dev		984030	0					
ANR	984093	Argument	& dev_profile		984030	1					
ANR	984094	UnaryOperationExpression	& dev_profile		984030	0					
ANR	984095	UnaryOperator	&		984030	0					
ANR	984096	Identifier	dev_profile		984030	1					
ANR	984097	ExpressionStatement	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"	1573:4:58495:58607	984030	8	True				
ANR	984098	CallExpression	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"		984030	0					
ANR	984099	Callee	gsicc_extract_profile		984030	0					
ANR	984100	Identifier	gsicc_extract_profile		984030	0					
ANR	984101	ArgumentList	dev -> graphics_type_tag		984030	1					
ANR	984102	Argument	dev -> graphics_type_tag		984030	0					
ANR	984103	PtrMemberAccess	dev -> graphics_type_tag		984030	0					
ANR	984104	Identifier	dev		984030	0					
ANR	984105	Identifier	graphics_type_tag		984030	1					
ANR	984106	Argument	dev_profile		984030	1					
ANR	984107	Identifier	dev_profile		984030	0					
ANR	984108	Argument	& des_profile		984030	2					
ANR	984109	UnaryOperationExpression	& des_profile		984030	0					
ANR	984110	UnaryOperator	&		984030	0					
ANR	984111	Identifier	des_profile		984030	1					
ANR	984112	Argument	& render_cond		984030	3					
ANR	984113	UnaryOperationExpression	& render_cond		984030	0					
ANR	984114	UnaryOperator	&		984030	0					
ANR	984115	Identifier	render_cond		984030	1					
ANR	984116	IfStatement	if ( dev_profile -> spotnames != NULL && dev_profile -> spotnames -> equiv_cmyk_set )		984030	9					
ANR	984117	Condition	dev_profile -> spotnames != NULL && dev_profile -> spotnames -> equiv_cmyk_set	1577:8:58684:58755	984030	0	True				
ANR	984118	AndExpression	dev_profile -> spotnames != NULL && dev_profile -> spotnames -> equiv_cmyk_set		984030	0		&&			
ANR	984119	EqualityExpression	dev_profile -> spotnames != NULL		984030	0		!=			
ANR	984120	PtrMemberAccess	dev_profile -> spotnames		984030	0					
ANR	984121	Identifier	dev_profile		984030	0					
ANR	984122	Identifier	spotnames		984030	1					
ANR	984123	Identifier	NULL		984030	1					
ANR	984124	PtrMemberAccess	dev_profile -> spotnames -> equiv_cmyk_set		984030	1					
ANR	984125	PtrMemberAccess	dev_profile -> spotnames		984030	0					
ANR	984126	Identifier	dev_profile		984030	0					
ANR	984127	Identifier	spotnames		984030	1					
ANR	984128	Identifier	equiv_cmyk_set		984030	1					
ANR	984129	CompoundStatement		15:82:630:630	984030	1					
ANR	984130	ExpressionStatement	"map_components_to_colorants ( pcc , dev_profile -> spotnames -> color_map , cm_comps )"	1578:8:58768:58881	984030	0	True				
ANR	984131	CallExpression	"map_components_to_colorants ( pcc , dev_profile -> spotnames -> color_map , cm_comps )"		984030	0					
ANR	984132	Callee	map_components_to_colorants		984030	0					
ANR	984133	Identifier	map_components_to_colorants		984030	0					
ANR	984134	ArgumentList	pcc		984030	1					
ANR	984135	Argument	pcc		984030	0					
ANR	984136	Identifier	pcc		984030	0					
ANR	984137	Argument	dev_profile -> spotnames -> color_map		984030	1					
ANR	984138	PtrMemberAccess	dev_profile -> spotnames -> color_map		984030	0					
ANR	984139	PtrMemberAccess	dev_profile -> spotnames		984030	0					
ANR	984140	Identifier	dev_profile		984030	0					
ANR	984141	Identifier	spotnames		984030	1					
ANR	984142	Identifier	color_map		984030	1					
ANR	984143	Argument	cm_comps		984030	2					
ANR	984144	Identifier	cm_comps		984030	0					
ANR	984145	ElseStatement	else		984030	0					
ANR	984146	CompoundStatement		18:11:766:766	984030	0					
ANR	984147	ExpressionStatement	"map_components_to_colorants ( pcc , & ( pgs -> color_component_map ) , cm_comps )"	1581:8:58904:58975	984030	0	True				
ANR	984148	CallExpression	"map_components_to_colorants ( pcc , & ( pgs -> color_component_map ) , cm_comps )"		984030	0					
ANR	984149	Callee	map_components_to_colorants		984030	0					
ANR	984150	Identifier	map_components_to_colorants		984030	0					
ANR	984151	ArgumentList	pcc		984030	1					
ANR	984152	Argument	pcc		984030	0					
ANR	984153	Identifier	pcc		984030	0					
ANR	984154	Argument	& ( pgs -> color_component_map )		984030	1					
ANR	984155	UnaryOperationExpression	& ( pgs -> color_component_map )		984030	0					
ANR	984156	UnaryOperator	&		984030	0					
ANR	984157	PtrMemberAccess	pgs -> color_component_map		984030	1					
ANR	984158	Identifier	pgs		984030	0					
ANR	984159	Identifier	color_component_map		984030	1					
ANR	984160	Argument	cm_comps		984030	2					
ANR	984161	Identifier	cm_comps		984030	0					
ANR	984162	IfStatement	if ( devicen_has_cmyk ( dev ) && des_profile -> data_cs == gsCMYK )		984030	10					
ANR	984163	Condition	devicen_has_cmyk ( dev ) && des_profile -> data_cs == gsCMYK	1594:8:59764:59818	984030	0	True				
ANR	984164	AndExpression	devicen_has_cmyk ( dev ) && des_profile -> data_cs == gsCMYK		984030	0		&&			
ANR	984165	CallExpression	devicen_has_cmyk ( dev )		984030	0					
ANR	984166	Callee	devicen_has_cmyk		984030	0					
ANR	984167	Identifier	devicen_has_cmyk		984030	0					
ANR	984168	ArgumentList	dev		984030	1					
ANR	984169	Argument	dev		984030	0					
ANR	984170	Identifier	dev		984030	0					
ANR	984171	EqualityExpression	des_profile -> data_cs == gsCMYK		984030	1		==			
ANR	984172	PtrMemberAccess	des_profile -> data_cs		984030	0					
ANR	984173	Identifier	des_profile		984030	0					
ANR	984174	Identifier	data_cs		984030	1					
ANR	984175	Identifier	gsCMYK		984030	1					
ANR	984176	CompoundStatement		32:65:1693:1693	984030	1					
ANR	984177	ExpressionStatement	"devicen_icc_cmyk ( cm_comps , pgs , dev )"	1601:8:60220:60256	984030	0	True				
ANR	984178	CallExpression	"devicen_icc_cmyk ( cm_comps , pgs , dev )"		984030	0					
ANR	984179	Callee	devicen_icc_cmyk		984030	0					
ANR	984180	Identifier	devicen_icc_cmyk		984030	0					
ANR	984181	ArgumentList	cm_comps		984030	1					
ANR	984182	Argument	cm_comps		984030	0					
ANR	984183	Identifier	cm_comps		984030	0					
ANR	984184	Argument	pgs		984030	1					
ANR	984185	Identifier	pgs		984030	0					
ANR	984186	Argument	dev		984030	2					
ANR	984187	Identifier	dev		984030	0					
ANR	984188	IfStatement	"if ( dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 ) )"		984030	11					
ANR	984189	Condition	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"	1605:8:60393:60453	984030	0	True				
ANR	984190	CallExpression	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"		984030	0					
ANR	984191	Callee	"dev_proc ( dev , dev_spec_op )"		984030	0					
ANR	984192	CallExpression	"dev_proc ( dev , dev_spec_op )"		984030	0					
ANR	984193	Callee	dev_proc		984030	0					
ANR	984194	Identifier	dev_proc		984030	0					
ANR	984195	ArgumentList	dev		984030	1					
ANR	984196	Argument	dev		984030	0					
ANR	984197	Identifier	dev		984030	0					
ANR	984198	Argument	dev_spec_op		984030	1					
ANR	984199	Identifier	dev_spec_op		984030	0					
ANR	984200	ArgumentList	dev		984030	1					
ANR	984201	Argument	dev		984030	0					
ANR	984202	Identifier	dev		984030	0					
ANR	984203	Argument	gxdso_supports_devn		984030	1					
ANR	984204	Identifier	gxdso_supports_devn		984030	0					
ANR	984205	Argument	NULL		984030	2					
ANR	984206	Identifier	NULL		984030	0					
ANR	984207	Argument	0		984030	3					
ANR	984208	PrimaryExpression	0		984030	0					
ANR	984209	CompoundStatement		43:71:2328:2328	984030	1					
ANR	984210	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		984030	0					
ANR	984211	Condition	pgs -> effective_transfer_non_identity_count == 0	1606:12:60470:60516	984030	0	True				
ANR	984212	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		984030	0		==			
ANR	984213	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		984030	0					
ANR	984214	Identifier	pgs		984030	0					
ANR	984215	Identifier	effective_transfer_non_identity_count		984030	1					
ANR	984216	PrimaryExpression	0		984030	1					
ANR	984217	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984030	1					
ANR	984218	ForInit	i = 0 ;	1607:17:60536:60541	984030	0	True				
ANR	984219	AssignmentExpression	i = 0		984030	0		=			
ANR	984220	Identifier	i		984030	0					
ANR	984221	PrimaryExpression	0		984030	1					
ANR	984222	Condition	i < ncomps	1607:24:60543:60552	984030	1	True				
ANR	984223	RelationalExpression	i < ncomps		984030	0		<			
ANR	984224	Identifier	i		984030	0					
ANR	984225	Identifier	ncomps		984030	1					
ANR	984226	PostIncDecOperationExpression	i ++	1607:36:60555:60557	984030	2	True				
ANR	984227	Identifier	i		984030	0					
ANR	984228	IncDec	++		984030	1					
ANR	984229	ExpressionStatement	pdc -> colors . devn . values [ i ] = frac2cv ( cm_comps [ i ] )	1608:16:60576:60625	984030	3	True				
ANR	984230	AssignmentExpression	pdc -> colors . devn . values [ i ] = frac2cv ( cm_comps [ i ] )		984030	0		=			
ANR	984231	ArrayIndexing	pdc -> colors . devn . values [ i ]		984030	0					
ANR	984232	MemberAccess	pdc -> colors . devn . values		984030	0					
ANR	984233	MemberAccess	pdc -> colors . devn		984030	0					
ANR	984234	PtrMemberAccess	pdc -> colors		984030	0					
ANR	984235	Identifier	pdc		984030	0					
ANR	984236	Identifier	colors		984030	1					
ANR	984237	Identifier	devn		984030	1					
ANR	984238	Identifier	values		984030	1					
ANR	984239	Identifier	i		984030	1					
ANR	984240	CallExpression	frac2cv ( cm_comps [ i ] )		984030	1					
ANR	984241	Callee	frac2cv		984030	0					
ANR	984242	Identifier	frac2cv		984030	0					
ANR	984243	ArgumentList	cm_comps [ i ]		984030	1					
ANR	984244	Argument	cm_comps [ i ]		984030	0					
ANR	984245	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984246	Identifier	cm_comps		984030	0					
ANR	984247	Identifier	i		984030	1					
ANR	984248	ElseStatement	else		984030	0					
ANR	984249	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		984030	0					
ANR	984250	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1609:17:60644:60697	984030	0	True				
ANR	984251	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		984030	0		==			
ANR	984252	MemberAccess	dev -> color_info . polarity		984030	0					
ANR	984253	PtrMemberAccess	dev -> color_info		984030	0					
ANR	984254	Identifier	dev		984030	0					
ANR	984255	Identifier	color_info		984030	1					
ANR	984256	Identifier	polarity		984030	1					
ANR	984257	Identifier	GX_CINFO_POLARITY_ADDITIVE		984030	1					
ANR	984258	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984030	1					
ANR	984259	ForInit	i = 0 ;	1610:17:60717:60722	984030	0	True				
ANR	984260	AssignmentExpression	i = 0		984030	0		=			
ANR	984261	Identifier	i		984030	0					
ANR	984262	PrimaryExpression	0		984030	1					
ANR	984263	Condition	i < ncomps	1610:24:60724:60733	984030	1	True				
ANR	984264	RelationalExpression	i < ncomps		984030	0		<			
ANR	984265	Identifier	i		984030	0					
ANR	984266	Identifier	ncomps		984030	1					
ANR	984267	PostIncDecOperationExpression	i ++	1610:36:60736:60738	984030	2	True				
ANR	984268	Identifier	i		984030	0					
ANR	984269	IncDec	++		984030	1					
ANR	984270	ExpressionStatement	"pdc -> colors . devn . values [ i ] = frac2cv ( gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] ) )"	1611:16:60757:60889	984030	3	True				
ANR	984271	AssignmentExpression	"pdc -> colors . devn . values [ i ] = frac2cv ( gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] ) )"		984030	0		=			
ANR	984272	ArrayIndexing	pdc -> colors . devn . values [ i ]		984030	0					
ANR	984273	MemberAccess	pdc -> colors . devn . values		984030	0					
ANR	984274	MemberAccess	pdc -> colors . devn		984030	0					
ANR	984275	PtrMemberAccess	pdc -> colors		984030	0					
ANR	984276	Identifier	pdc		984030	0					
ANR	984277	Identifier	colors		984030	1					
ANR	984278	Identifier	devn		984030	1					
ANR	984279	Identifier	values		984030	1					
ANR	984280	Identifier	i		984030	1					
ANR	984281	CallExpression	"frac2cv ( gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] ) )"		984030	1					
ANR	984282	Callee	frac2cv		984030	0					
ANR	984283	Identifier	frac2cv		984030	0					
ANR	984284	ArgumentList	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		984030	1					
ANR	984285	Argument	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		984030	0					
ANR	984286	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		984030	0					
ANR	984287	Callee	gx_map_color_frac		984030	0					
ANR	984288	Identifier	gx_map_color_frac		984030	0					
ANR	984289	ArgumentList	pgs		984030	1					
ANR	984290	Argument	pgs		984030	0					
ANR	984291	Identifier	pgs		984030	0					
ANR	984292	Argument	cm_comps [ i ]		984030	1					
ANR	984293	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984294	Identifier	cm_comps		984030	0					
ANR	984295	Identifier	i		984030	1					
ANR	984296	Argument	effective_transfer [ i ]		984030	2					
ANR	984297	ArrayIndexing	effective_transfer [ i ]		984030	0					
ANR	984298	Identifier	effective_transfer		984030	0					
ANR	984299	Identifier	i		984030	1					
ANR	984300	ElseStatement	else		984030	0					
ANR	984301	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984030	0					
ANR	984302	ForInit	i = 0 ;	1614:17:60921:60926	984030	0	True				
ANR	984303	AssignmentExpression	i = 0		984030	0		=			
ANR	984304	Identifier	i		984030	0					
ANR	984305	PrimaryExpression	0		984030	1					
ANR	984306	Condition	i < ncomps	1614:24:60928:60937	984030	1	True				
ANR	984307	RelationalExpression	i < ncomps		984030	0		<			
ANR	984308	Identifier	i		984030	0					
ANR	984309	Identifier	ncomps		984030	1					
ANR	984310	PostIncDecOperationExpression	i ++	1614:36:60940:60942	984030	2	True				
ANR	984311	Identifier	i		984030	0					
ANR	984312	IncDec	++		984030	1					
ANR	984313	ExpressionStatement	"pdc -> colors . devn . values [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] ) )"	1615:16:60961:61111	984030	3	True				
ANR	984314	AssignmentExpression	"pdc -> colors . devn . values [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] ) )"		984030	0		=			
ANR	984315	ArrayIndexing	pdc -> colors . devn . values [ i ]		984030	0					
ANR	984316	MemberAccess	pdc -> colors . devn . values		984030	0					
ANR	984317	MemberAccess	pdc -> colors . devn		984030	0					
ANR	984318	PtrMemberAccess	pdc -> colors		984030	0					
ANR	984319	Identifier	pdc		984030	0					
ANR	984320	Identifier	colors		984030	1					
ANR	984321	Identifier	devn		984030	1					
ANR	984322	Identifier	values		984030	1					
ANR	984323	Identifier	i		984030	1					
ANR	984324	CallExpression	"frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] ) )"		984030	1					
ANR	984325	Callee	frac2cv		984030	0					
ANR	984326	Identifier	frac2cv		984030	0					
ANR	984327	ArgumentList	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	1					
ANR	984328	Argument	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	0					
ANR	984329	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	0		-			
ANR	984330	Identifier	frac_1		984030	0					
ANR	984331	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	1					
ANR	984332	Callee	gx_map_color_frac		984030	0					
ANR	984333	Identifier	gx_map_color_frac		984030	0					
ANR	984334	ArgumentList	pgs		984030	1					
ANR	984335	Argument	pgs		984030	0					
ANR	984336	Identifier	pgs		984030	0					
ANR	984337	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		984030	1					
ANR	984338	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		984030	0					
ANR	984339	CastTarget	frac		984030	0					
ANR	984340	AdditiveExpression	frac_1 - cm_comps [ i ]		984030	1		-			
ANR	984341	Identifier	frac_1		984030	0					
ANR	984342	ArrayIndexing	cm_comps [ i ]		984030	1					
ANR	984343	Identifier	cm_comps		984030	0					
ANR	984344	Identifier	i		984030	1					
ANR	984345	Argument	effective_transfer [ i ]		984030	2					
ANR	984346	ArrayIndexing	effective_transfer [ i ]		984030	0					
ANR	984347	Identifier	effective_transfer		984030	0					
ANR	984348	Identifier	i		984030	1					
ANR	984349	ExpressionStatement	pdc -> type = gx_dc_type_devn	1617:8:61121:61148	984030	1	True				
ANR	984350	AssignmentExpression	pdc -> type = gx_dc_type_devn		984030	0		=			
ANR	984351	PtrMemberAccess	pdc -> type		984030	0					
ANR	984352	Identifier	pdc		984030	0					
ANR	984353	Identifier	type		984030	1					
ANR	984354	Identifier	gx_dc_type_devn		984030	1					
ANR	984355	ReturnStatement	return ;	1618:8:61158:61164	984030	2	True				
ANR	984356	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		984030	12					
ANR	984357	Condition	pgs -> effective_transfer_non_identity_count == 0	1621:8:61181:61227	984030	0	True				
ANR	984358	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		984030	0		==			
ANR	984359	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		984030	0					
ANR	984360	Identifier	pgs		984030	0					
ANR	984361	Identifier	effective_transfer_non_identity_count		984030	1					
ANR	984362	PrimaryExpression	0		984030	1					
ANR	984363	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984030	1					
ANR	984364	ForInit	i = 0 ;	1622:13:61243:61248	984030	0	True				
ANR	984365	AssignmentExpression	i = 0		984030	0		=			
ANR	984366	Identifier	i		984030	0					
ANR	984367	PrimaryExpression	0		984030	1					
ANR	984368	Condition	i < ncomps	1622:20:61250:61259	984030	1	True				
ANR	984369	RelationalExpression	i < ncomps		984030	0		<			
ANR	984370	Identifier	i		984030	0					
ANR	984371	Identifier	ncomps		984030	1					
ANR	984372	PostIncDecOperationExpression	i ++	1622:32:61262:61264	984030	2	True				
ANR	984373	Identifier	i		984030	0					
ANR	984374	IncDec	++		984030	1					
ANR	984375	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1623:12:61279:61307	984030	3	True				
ANR	984376	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		984030	0		=			
ANR	984377	ArrayIndexing	cv [ i ]		984030	0					
ANR	984378	Identifier	cv		984030	0					
ANR	984379	Identifier	i		984030	1					
ANR	984380	CallExpression	frac2cv ( cm_comps [ i ] )		984030	1					
ANR	984381	Callee	frac2cv		984030	0					
ANR	984382	Identifier	frac2cv		984030	0					
ANR	984383	ArgumentList	cm_comps [ i ]		984030	1					
ANR	984384	Argument	cm_comps [ i ]		984030	0					
ANR	984385	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984386	Identifier	cm_comps		984030	0					
ANR	984387	Identifier	i		984030	1					
ANR	984388	ElseStatement	else		984030	0					
ANR	984389	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		984030	0					
ANR	984390	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	1624:13:61322:61375	984030	0	True				
ANR	984391	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		984030	0		==			
ANR	984392	MemberAccess	dev -> color_info . polarity		984030	0					
ANR	984393	PtrMemberAccess	dev -> color_info		984030	0					
ANR	984394	Identifier	dev		984030	0					
ANR	984395	Identifier	color_info		984030	1					
ANR	984396	Identifier	polarity		984030	1					
ANR	984397	Identifier	GX_CINFO_POLARITY_ADDITIVE		984030	1					
ANR	984398	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984030	1					
ANR	984399	ForInit	i = 0 ;	1625:13:61391:61396	984030	0	True				
ANR	984400	AssignmentExpression	i = 0		984030	0		=			
ANR	984401	Identifier	i		984030	0					
ANR	984402	PrimaryExpression	0		984030	1					
ANR	984403	Condition	i < ncomps	1625:20:61398:61407	984030	1	True				
ANR	984404	RelationalExpression	i < ncomps		984030	0		<			
ANR	984405	Identifier	i		984030	0					
ANR	984406	Identifier	ncomps		984030	1					
ANR	984407	PostIncDecOperationExpression	i ++	1625:32:61410:61412	984030	2	True				
ANR	984408	Identifier	i		984030	0					
ANR	984409	IncDec	++		984030	1					
ANR	984410	CompoundStatement		63:37:3287:3287	984030	3					
ANR	984411	ExpressionStatement	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"	1626:12:61429:61537	984030	0	True				
ANR	984412	AssignmentExpression	"cm_comps [ i ] = gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		984030	0		=			
ANR	984413	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984414	Identifier	cm_comps		984030	0					
ANR	984415	Identifier	i		984030	1					
ANR	984416	CallExpression	"gx_map_color_frac ( pgs , cm_comps [ i ] , effective_transfer [ i ] )"		984030	1					
ANR	984417	Callee	gx_map_color_frac		984030	0					
ANR	984418	Identifier	gx_map_color_frac		984030	0					
ANR	984419	ArgumentList	pgs		984030	1					
ANR	984420	Argument	pgs		984030	0					
ANR	984421	Identifier	pgs		984030	0					
ANR	984422	Argument	cm_comps [ i ]		984030	1					
ANR	984423	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984424	Identifier	cm_comps		984030	0					
ANR	984425	Identifier	i		984030	1					
ANR	984426	Argument	effective_transfer [ i ]		984030	2					
ANR	984427	ArrayIndexing	effective_transfer [ i ]		984030	0					
ANR	984428	Identifier	effective_transfer		984030	0					
ANR	984429	Identifier	i		984030	1					
ANR	984430	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1628:12:61551:61579	984030	1	True				
ANR	984431	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		984030	0		=			
ANR	984432	ArrayIndexing	cv [ i ]		984030	0					
ANR	984433	Identifier	cv		984030	0					
ANR	984434	Identifier	i		984030	1					
ANR	984435	CallExpression	frac2cv ( cm_comps [ i ] )		984030	1					
ANR	984436	Callee	frac2cv		984030	0					
ANR	984437	Identifier	frac2cv		984030	0					
ANR	984438	ArgumentList	cm_comps [ i ]		984030	1					
ANR	984439	Argument	cm_comps [ i ]		984030	0					
ANR	984440	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984441	Identifier	cm_comps		984030	0					
ANR	984442	Identifier	i		984030	1					
ANR	984443	ElseStatement	else		984030	0					
ANR	984444	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984030	0					
ANR	984445	ForInit	i = 0 ;	1631:13:61613:61618	984030	0	True				
ANR	984446	AssignmentExpression	i = 0		984030	0		=			
ANR	984447	Identifier	i		984030	0					
ANR	984448	PrimaryExpression	0		984030	1					
ANR	984449	Condition	i < ncomps	1631:20:61620:61629	984030	1	True				
ANR	984450	RelationalExpression	i < ncomps		984030	0		<			
ANR	984451	Identifier	i		984030	0					
ANR	984452	Identifier	ncomps		984030	1					
ANR	984453	PostIncDecOperationExpression	i ++	1631:32:61632:61634	984030	2	True				
ANR	984454	Identifier	i		984030	0					
ANR	984455	IncDec	++		984030	1					
ANR	984456	CompoundStatement		69:37:3509:3509	984030	3					
ANR	984457	ExpressionStatement	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"	1632:12:61651:61777	984030	0	True				
ANR	984458	AssignmentExpression	"cm_comps [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	0		=			
ANR	984459	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984460	Identifier	cm_comps		984030	0					
ANR	984461	Identifier	i		984030	1					
ANR	984462	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	1		-			
ANR	984463	Identifier	frac_1		984030	0					
ANR	984464	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cm_comps [ i ] ) , effective_transfer [ i ] )"		984030	1					
ANR	984465	Callee	gx_map_color_frac		984030	0					
ANR	984466	Identifier	gx_map_color_frac		984030	0					
ANR	984467	ArgumentList	pgs		984030	1					
ANR	984468	Argument	pgs		984030	0					
ANR	984469	Identifier	pgs		984030	0					
ANR	984470	Argument	( frac ) ( frac_1 - cm_comps [ i ] )		984030	1					
ANR	984471	CastExpression	( frac ) ( frac_1 - cm_comps [ i ] )		984030	0					
ANR	984472	CastTarget	frac		984030	0					
ANR	984473	AdditiveExpression	frac_1 - cm_comps [ i ]		984030	1		-			
ANR	984474	Identifier	frac_1		984030	0					
ANR	984475	ArrayIndexing	cm_comps [ i ]		984030	1					
ANR	984476	Identifier	cm_comps		984030	0					
ANR	984477	Identifier	i		984030	1					
ANR	984478	Argument	effective_transfer [ i ]		984030	2					
ANR	984479	ArrayIndexing	effective_transfer [ i ]		984030	0					
ANR	984480	Identifier	effective_transfer		984030	0					
ANR	984481	Identifier	i		984030	1					
ANR	984482	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	1634:12:61791:61819	984030	1	True				
ANR	984483	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		984030	0		=			
ANR	984484	ArrayIndexing	cv [ i ]		984030	0					
ANR	984485	Identifier	cv		984030	0					
ANR	984486	Identifier	i		984030	1					
ANR	984487	CallExpression	frac2cv ( cm_comps [ i ] )		984030	1					
ANR	984488	Callee	frac2cv		984030	0					
ANR	984489	Identifier	frac2cv		984030	0					
ANR	984490	ArgumentList	cm_comps [ i ]		984030	1					
ANR	984491	Argument	cm_comps [ i ]		984030	0					
ANR	984492	ArrayIndexing	cm_comps [ i ]		984030	0					
ANR	984493	Identifier	cm_comps		984030	0					
ANR	984494	Identifier	i		984030	1					
ANR	984495	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , cv )"	1637:4:61869:61913	984030	13	True				
ANR	984496	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , cv )"		984030	0		=			
ANR	984497	Identifier	color		984030	0					
ANR	984498	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		984030	1					
ANR	984499	Callee	"dev_proc ( dev , encode_color )"		984030	0					
ANR	984500	CallExpression	"dev_proc ( dev , encode_color )"		984030	0					
ANR	984501	Callee	dev_proc		984030	0					
ANR	984502	Identifier	dev_proc		984030	0					
ANR	984503	ArgumentList	dev		984030	1					
ANR	984504	Argument	dev		984030	0					
ANR	984505	Identifier	dev		984030	0					
ANR	984506	Argument	encode_color		984030	1					
ANR	984507	Identifier	encode_color		984030	0					
ANR	984508	ArgumentList	dev		984030	1					
ANR	984509	Argument	dev		984030	0					
ANR	984510	Identifier	dev		984030	0					
ANR	984511	Argument	cv		984030	1					
ANR	984512	Identifier	cv		984030	0					
ANR	984513	IfStatement	if ( color != gx_no_color_index )		984030	14					
ANR	984514	Condition	color != gx_no_color_index	1639:8:61998:62023	984030	0	True				
ANR	984515	EqualityExpression	color != gx_no_color_index		984030	0		!=			
ANR	984516	Identifier	color		984030	0					
ANR	984517	Identifier	gx_no_color_index		984030	1					
ANR	984518	CompoundStatement		77:36:3898:3898	984030	1					
ANR	984519	ExpressionStatement	"color_set_pure ( pdc , color )"	1640:8:62036:62062	984030	0	True				
ANR	984520	CallExpression	"color_set_pure ( pdc , color )"		984030	0					
ANR	984521	Callee	color_set_pure		984030	0					
ANR	984522	Identifier	color_set_pure		984030	0					
ANR	984523	ArgumentList	pdc		984030	1					
ANR	984524	Argument	pdc		984030	0					
ANR	984525	Identifier	pdc		984030	0					
ANR	984526	Argument	color		984030	1					
ANR	984527	Identifier	color		984030	0					
ANR	984528	ReturnStatement	return ;	1641:8:62072:62078	984030	1	True				
ANR	984529	IfStatement	"if ( gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		984030	15					
ANR	984530	Condition	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	1643:8:62094:62223	984030	0	True				
ANR	984531	EqualityExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		984030	0		==			
ANR	984532	CallExpression	"gx_render_device_DeviceN ( cm_comps , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		984030	0					
ANR	984533	Callee	gx_render_device_DeviceN		984030	0					
ANR	984534	Identifier	gx_render_device_DeviceN		984030	0					
ANR	984535	ArgumentList	cm_comps		984030	1					
ANR	984536	Argument	cm_comps		984030	0					
ANR	984537	Identifier	cm_comps		984030	0					
ANR	984538	Argument	pdc		984030	1					
ANR	984539	Identifier	pdc		984030	0					
ANR	984540	Argument	dev		984030	2					
ANR	984541	Identifier	dev		984030	0					
ANR	984542	Argument	pgs -> dev_ht		984030	3					
ANR	984543	PtrMemberAccess	pgs -> dev_ht		984030	0					
ANR	984544	Identifier	pgs		984030	0					
ANR	984545	Identifier	dev_ht		984030	1					
ANR	984546	Argument	& pgs -> screen_phase [ select ]		984030	4					
ANR	984547	UnaryOperationExpression	& pgs -> screen_phase [ select ]		984030	0					
ANR	984548	UnaryOperator	&		984030	0					
ANR	984549	ArrayIndexing	pgs -> screen_phase [ select ]		984030	1					
ANR	984550	PtrMemberAccess	pgs -> screen_phase		984030	0					
ANR	984551	Identifier	pgs		984030	0					
ANR	984552	Identifier	screen_phase		984030	1					
ANR	984553	Identifier	select		984030	1					
ANR	984554	PrimaryExpression	1		984030	1					
ANR	984555	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	1645:8:62234:62277	984030	1	True				
ANR	984556	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		984030	0					
ANR	984557	Callee	gx_color_load_select		984030	0					
ANR	984558	Identifier	gx_color_load_select		984030	0					
ANR	984559	ArgumentList	pdc		984030	1					
ANR	984560	Argument	pdc		984030	0					
ANR	984561	Identifier	pdc		984030	0					
ANR	984562	Argument	pgs		984030	1					
ANR	984563	Identifier	pgs		984030	0					
ANR	984564	Argument	dev		984030	2					
ANR	984565	Identifier	dev		984030	0					
ANR	984566	Argument	select		984030	3					
ANR	984567	Identifier	select		984030	0					
ANR	984568	ReturnType	static void		984030	1					
ANR	984569	Identifier	cmap_devicen_direct		984030	2					
ANR	984570	ParameterList	"const frac * pcc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		984030	3					
ANR	984571	Parameter	const frac * pcc	1560:20:58012:58027	984030	0	True				
ANR	984572	ParameterType	const frac *		984030	0					
ANR	984573	Identifier	pcc		984030	1					
ANR	984574	Parameter	gx_device_color * pdc	1561:4:58034:58054	984030	1	True				
ANR	984575	ParameterType	gx_device_color *		984030	0					
ANR	984576	Identifier	pdc		984030	1					
ANR	984577	Parameter	const gs_gstate * pgs	1561:27:58057:58077	984030	2	True				
ANR	984578	ParameterType	const gs_gstate *		984030	0					
ANR	984579	Identifier	pgs		984030	1					
ANR	984580	Parameter	gx_device * dev	1561:50:58080:58094	984030	3	True				
ANR	984581	ParameterType	gx_device *		984030	0					
ANR	984582	Identifier	dev		984030	1					
ANR	984583	Parameter	gs_color_select_t select	1562:4:58101:58124	984030	4	True				
ANR	984584	ParameterType	gs_color_select_t		984030	0					
ANR	984585	Identifier	select		984030	1					
ANR	984586	CFGEntryNode	ENTRY		984030		True				
ANR	984587	CFGExitNode	EXIT		984030		True				
ANR	984588	Symbol	pdc -> type		984030						
ANR	984589	Symbol	select		984030						
ANR	984590	Symbol	* pdc -> colors . devn		984030						
ANR	984591	Symbol	* pgs		984030						
ANR	984592	Symbol	encode_color		984030						
ANR	984593	Symbol	dev_profile		984030						
ANR	984594	Symbol	dev_spec_op		984030						
ANR	984595	Symbol	GX_CINFO_POLARITY_ADDITIVE		984030						
ANR	984596	Symbol	effective_transfer		984030						
ANR	984597	Symbol	gx_render_device_DeviceN		984030						
ANR	984598	Symbol	gx_no_color_index		984030						
ANR	984599	Symbol	dev		984030						
ANR	984600	Symbol	dev -> color_info . polarity		984030						
ANR	984601	Symbol	* pdc		984030						
ANR	984602	Symbol	* cm_comps		984030						
ANR	984603	Symbol	pdc -> colors . devn . values		984030						
ANR	984604	Symbol	frac_1		984030						
ANR	984605	Symbol	NULL		984030						
ANR	984606	Symbol	pdc -> colors		984030						
ANR	984607	Symbol	dev -> color_info . num_components		984030						
ANR	984608	Symbol	& dev_profile		984030						
ANR	984609	Symbol	* dev_profile		984030						
ANR	984610	Symbol	& render_cond		984030						
ANR	984611	Symbol	gxdso_supports_devn		984030						
ANR	984612	Symbol	pgs -> screen_phase		984030						
ANR	984613	Symbol	gx_map_color_frac		984030						
ANR	984614	Symbol	pgs -> effective_transfer_non_identity_count		984030						
ANR	984615	Symbol	dev -> graphics_type_tag		984030						
ANR	984616	Symbol	* dev_profile -> spotnames		984030						
ANR	984617	Symbol	* cv		984030						
ANR	984618	Symbol	frac2cv		984030						
ANR	984619	Symbol	* dev		984030						
ANR	984620	Symbol	* * pdc		984030						
ANR	984621	Symbol	color		984030						
ANR	984622	Symbol	ncomps		984030						
ANR	984623	Symbol	devicen_has_cmyk		984030						
ANR	984624	Symbol	dev -> color_info		984030						
ANR	984625	Symbol	dev_profile -> spotnames -> equiv_cmyk_set		984030						
ANR	984626	Symbol	gx_dc_type_devn		984030						
ANR	984627	Symbol	pcc		984030						
ANR	984628	Symbol	& des_profile		984030						
ANR	984629	Symbol	* effective_transfer		984030						
ANR	984630	Symbol	dev_proc		984030						
ANR	984631	Symbol	des_profile		984030						
ANR	984632	Symbol	* des_profile		984030						
ANR	984633	Symbol	pdc -> colors . devn		984030						
ANR	984634	Symbol	pgs		984030						
ANR	984635	Symbol	* pdc -> colors . devn . values		984030						
ANR	984636	Symbol	render_cond		984030						
ANR	984637	Symbol	get_profile		984030						
ANR	984638	Symbol	dev_profile -> spotnames		984030						
ANR	984639	Symbol	gsCMYK		984030						
ANR	984640	Symbol	des_profile -> data_cs		984030						
ANR	984641	Symbol	i		984030						
ANR	984642	Symbol	dev_profile -> spotnames -> color_map		984030						
ANR	984643	Symbol	& pgs -> color_component_map		984030						
ANR	984644	Symbol	pdc		984030						
ANR	984645	Symbol	cm_comps		984030						
ANR	984646	Symbol	cv		984030						
ANR	984647	Symbol	* i		984030						
ANR	984648	Symbol	* * dev_profile		984030						
ANR	984649	Symbol	pgs -> dev_ht		984030						
ANR	984650	Symbol	* pdc -> colors		984030						
ANR	984651	Function	cmap_halftoned_is_halftoned	1650:0:62319:62418							
ANR	984652	FunctionDef	"cmap_halftoned_is_halftoned (const gs_gstate * pgs , gx_device * dev)"		984651	0					
ANR	984653	CompoundStatement		1652:0:62399:62418	984651	0					
ANR	984654	ReturnStatement	return true ;	1653:4:62405:62416	984651	0	True				
ANR	984655	Identifier	true		984651	0					
ANR	984656	ReturnType	static bool		984651	1					
ANR	984657	Identifier	cmap_halftoned_is_halftoned		984651	2					
ANR	984658	ParameterList	"const gs_gstate * pgs , gx_device * dev"		984651	3					
ANR	984659	Parameter	const gs_gstate * pgs	1651:28:62359:62379	984651	0	True				
ANR	984660	ParameterType	const gs_gstate *		984651	0					
ANR	984661	Identifier	pgs		984651	1					
ANR	984662	Parameter	gx_device * dev	1651:51:62382:62396	984651	1	True				
ANR	984663	ParameterType	gx_device *		984651	0					
ANR	984664	Identifier	dev		984651	1					
ANR	984665	CFGEntryNode	ENTRY		984651		True				
ANR	984666	CFGExitNode	EXIT		984651		True				
ANR	984667	Symbol	dev		984651						
ANR	984668	Symbol	true		984651						
ANR	984669	Symbol	pgs		984651						
ANR	984670	Function	cmap_direct_is_halftoned	1656:0:62421:62518							
ANR	984671	FunctionDef	"cmap_direct_is_halftoned (const gs_gstate * pgs , gx_device * dev)"		984670	0					
ANR	984672	CompoundStatement		1658:0:62498:62518	984670	0					
ANR	984673	ReturnStatement	return false ;	1659:4:62504:62516	984670	0	True				
ANR	984674	Identifier	false		984670	0					
ANR	984675	ReturnType	static bool		984670	1					
ANR	984676	Identifier	cmap_direct_is_halftoned		984670	2					
ANR	984677	ParameterList	"const gs_gstate * pgs , gx_device * dev"		984670	3					
ANR	984678	Parameter	const gs_gstate * pgs	1657:25:62458:62478	984670	0	True				
ANR	984679	ParameterType	const gs_gstate *		984670	0					
ANR	984680	Identifier	pgs		984670	1					
ANR	984681	Parameter	gx_device * dev	1657:48:62481:62495	984670	1	True				
ANR	984682	ParameterType	gx_device *		984670	0					
ANR	984683	Identifier	dev		984670	1					
ANR	984684	CFGEntryNode	ENTRY		984670		True				
ANR	984685	CFGExitNode	EXIT		984670		True				
ANR	984686	Symbol	dev		984670						
ANR	984687	Symbol	false		984670						
ANR	984688	Symbol	pgs		984670						
ANR	984689	Function	gs_identity_transfer	1665:0:62612:62711							
ANR	984690	FunctionDef	"gs_identity_transfer (double value , const gx_transfer_map * pmap)"		984689	0					
ANR	984691	CompoundStatement		1667:0:62683:62711	984689	0					
ANR	984692	ReturnStatement	return ( float ) value ;	1668:4:62689:62709	984689	0	True				
ANR	984693	CastExpression	( float ) value		984689	0					
ANR	984694	CastTarget	float		984689	0					
ANR	984695	Identifier	value		984689	1					
ANR	984696	ReturnType	float		984689	1					
ANR	984697	Identifier	gs_identity_transfer		984689	2					
ANR	984698	ParameterList	"double value , const gx_transfer_map * pmap"		984689	3					
ANR	984699	Parameter	double value	1666:21:62639:62650	984689	0	True				
ANR	984700	ParameterType	double		984689	0					
ANR	984701	Identifier	value		984689	1					
ANR	984702	Parameter	const gx_transfer_map * pmap	1666:35:62653:62680	984689	1	True				
ANR	984703	ParameterType	const gx_transfer_map *		984689	0					
ANR	984704	Identifier	pmap		984689	1					
ANR	984705	CFGEntryNode	ENTRY		984689		True				
ANR	984706	CFGExitNode	EXIT		984689		True				
ANR	984707	Symbol	pmap		984689						
ANR	984708	Symbol	value		984689						
ANR	984709	Function	gs_mapped_transfer	1673:0:62831:62946							
ANR	984710	FunctionDef	"gs_mapped_transfer (double value , const gx_transfer_map * pmap)"		984709	0					
ANR	984711	CompoundStatement		1675:0:62900:62946	984709	0					
ANR	984712	ReturnStatement	"return gx_map_color_float ( pmap , value ) ;"	1676:4:62906:62944	984709	0	True				
ANR	984713	CallExpression	"gx_map_color_float ( pmap , value )"		984709	0					
ANR	984714	Callee	gx_map_color_float		984709	0					
ANR	984715	Identifier	gx_map_color_float		984709	0					
ANR	984716	ArgumentList	pmap		984709	1					
ANR	984717	Argument	pmap		984709	0					
ANR	984718	Identifier	pmap		984709	0					
ANR	984719	Argument	value		984709	1					
ANR	984720	Identifier	value		984709	0					
ANR	984721	ReturnType	float		984709	1					
ANR	984722	Identifier	gs_mapped_transfer		984709	2					
ANR	984723	ParameterList	"double value , const gx_transfer_map * pmap"		984709	3					
ANR	984724	Parameter	double value	1674:19:62856:62867	984709	0	True				
ANR	984725	ParameterType	double		984709	0					
ANR	984726	Identifier	value		984709	1					
ANR	984727	Parameter	const gx_transfer_map * pmap	1674:33:62870:62897	984709	1	True				
ANR	984728	ParameterType	const gx_transfer_map *		984709	0					
ANR	984729	Identifier	pmap		984709	1					
ANR	984730	CFGEntryNode	ENTRY		984709		True				
ANR	984731	CFGExitNode	EXIT		984709		True				
ANR	984732	Symbol	pmap		984709						
ANR	984733	Symbol	gx_map_color_float		984709						
ANR	984734	Symbol	value		984709						
ANR	984735	Function	gx_set_identity_transfer	1680:0:62995:63263							
ANR	984736	FunctionDef	gx_set_identity_transfer (gx_transfer_map * pmap)		984735	0					
ANR	984737	CompoundStatement		1682:0:63048:63263	984735	0					
ANR	984738	IdentifierDeclStatement	int i ;	1683:4:63054:63059	984735	0	True				
ANR	984739	IdentifierDecl	i		984735	0					
ANR	984740	IdentifierDeclType	int		984735	0					
ANR	984741	Identifier	i		984735	1					
ANR	984742	ExpressionStatement	pmap -> proc = gs_identity_transfer	1685:4:63066:63099	984735	1	True				
ANR	984743	AssignmentExpression	pmap -> proc = gs_identity_transfer		984735	0		=			
ANR	984744	PtrMemberAccess	pmap -> proc		984735	0					
ANR	984745	Identifier	pmap		984735	0					
ANR	984746	Identifier	proc		984735	1					
ANR	984747	Identifier	gs_identity_transfer		984735	1					
ANR	984748	ForStatement	for ( i = 0 ; i < transfer_map_size ; ++ i )		984735	2					
ANR	984749	ForInit	i = 0 ;	1687:9:63164:63169	984735	0	True				
ANR	984750	AssignmentExpression	i = 0		984735	0		=			
ANR	984751	Identifier	i		984735	0					
ANR	984752	PrimaryExpression	0		984735	1					
ANR	984753	Condition	i < transfer_map_size	1687:16:63171:63191	984735	1	True				
ANR	984754	RelationalExpression	i < transfer_map_size		984735	0		<			
ANR	984755	Identifier	i		984735	0					
ANR	984756	Identifier	transfer_map_size		984735	1					
ANR	984757	UnaryExpression	++ i	1687:39:63194:63196	984735	2	True				
ANR	984758	IncDec	++		984735	0					
ANR	984759	Identifier	i		984735	1					
ANR	984760	ExpressionStatement	"pmap -> values [ i ] = bits2frac ( i , log2_transfer_map_size )"	1688:8:63207:63261	984735	3	True				
ANR	984761	AssignmentExpression	"pmap -> values [ i ] = bits2frac ( i , log2_transfer_map_size )"		984735	0		=			
ANR	984762	ArrayIndexing	pmap -> values [ i ]		984735	0					
ANR	984763	PtrMemberAccess	pmap -> values		984735	0					
ANR	984764	Identifier	pmap		984735	0					
ANR	984765	Identifier	values		984735	1					
ANR	984766	Identifier	i		984735	1					
ANR	984767	CallExpression	"bits2frac ( i , log2_transfer_map_size )"		984735	1					
ANR	984768	Callee	bits2frac		984735	0					
ANR	984769	Identifier	bits2frac		984735	0					
ANR	984770	ArgumentList	i		984735	1					
ANR	984771	Argument	i		984735	0					
ANR	984772	Identifier	i		984735	0					
ANR	984773	Argument	log2_transfer_map_size		984735	1					
ANR	984774	Identifier	log2_transfer_map_size		984735	0					
ANR	984775	ReturnType	void		984735	1					
ANR	984776	Identifier	gx_set_identity_transfer		984735	2					
ANR	984777	ParameterList	gx_transfer_map * pmap		984735	3					
ANR	984778	Parameter	gx_transfer_map * pmap	1681:25:63025:63045	984735	0	True				
ANR	984779	ParameterType	gx_transfer_map *		984735	0					
ANR	984780	Identifier	pmap		984735	1					
ANR	984781	CFGEntryNode	ENTRY		984735		True				
ANR	984782	CFGExitNode	EXIT		984735		True				
ANR	984783	Symbol	* pmap		984735						
ANR	984784	Symbol	log2_transfer_map_size		984735						
ANR	984785	Symbol	* * pmap		984735						
ANR	984786	Symbol	* i		984735						
ANR	984787	Symbol	* pmap -> values		984735						
ANR	984788	Symbol	bits2frac		984735						
ANR	984789	Symbol	gs_identity_transfer		984735						
ANR	984790	Symbol	pmap -> values		984735						
ANR	984791	Symbol	pmap		984735						
ANR	984792	Symbol	i		984735						
ANR	984793	Symbol	transfer_map_size		984735						
ANR	984794	Symbol	pmap -> proc		984735						
ANR	984795	Function	gx_color_frac_map	1695:0:63407:64121							
ANR	984796	FunctionDef	"gx_color_frac_map (frac cv , const frac * values)"		984795	0					
ANR	984797	CompoundStatement		1697:0:63460:64121	984795	0					
ANR	984798	Statement	define	1698:1:63463:63468	984795	0	True				
ANR	984799	Statement	cp_frac_bits	1698:8:63470:63481	984795	1	True				
ANR	984800	Statement	(	1698:21:63483:63483	984795	2	True				
ANR	984801	Statement	frac_bits	1698:22:63484:63492	984795	3	True				
ANR	984802	Statement	-	1698:32:63494:63494	984795	4	True				
ANR	984803	Statement	log2_transfer_map_size	1698:34:63496:63517	984795	5	True				
ANR	984804	Statement	)	1698:56:63518:63518	984795	6	True				
ANR	984805	IdentifierDeclStatement	"int cmi = frac2bits_floor ( cv , log2_transfer_map_size ) ;"	1699:4:63524:63577	984795	7	True				
ANR	984806	IdentifierDecl	"cmi = frac2bits_floor ( cv , log2_transfer_map_size )"		984795	0					
ANR	984807	IdentifierDeclType	int		984795	0					
ANR	984808	Identifier	cmi		984795	1					
ANR	984809	AssignmentExpression	"cmi = frac2bits_floor ( cv , log2_transfer_map_size )"		984795	2		=			
ANR	984810	Identifier	cmi		984795	0					
ANR	984811	CallExpression	"frac2bits_floor ( cv , log2_transfer_map_size )"		984795	1					
ANR	984812	Callee	frac2bits_floor		984795	0					
ANR	984813	Identifier	frac2bits_floor		984795	0					
ANR	984814	ArgumentList	cv		984795	1					
ANR	984815	Argument	cv		984795	0					
ANR	984816	Identifier	cv		984795	0					
ANR	984817	Argument	log2_transfer_map_size		984795	1					
ANR	984818	Identifier	log2_transfer_map_size		984795	0					
ANR	984819	IdentifierDeclStatement	frac mv = values [ cmi ] ;	1700:4:63583:63604	984795	8	True				
ANR	984820	IdentifierDecl	mv = values [ cmi ]		984795	0					
ANR	984821	IdentifierDeclType	frac		984795	0					
ANR	984822	Identifier	mv		984795	1					
ANR	984823	AssignmentExpression	mv = values [ cmi ]		984795	2		=			
ANR	984824	Identifier	mv		984795	0					
ANR	984825	ArrayIndexing	values [ cmi ]		984795	1					
ANR	984826	Identifier	values		984795	0					
ANR	984827	Identifier	cmi		984795	1					
ANR	984828	IdentifierDeclStatement	"int rem , mdv ;"	1701:4:63610:63622	984795	9	True				
ANR	984829	IdentifierDecl	rem		984795	0					
ANR	984830	IdentifierDeclType	int		984795	0					
ANR	984831	Identifier	rem		984795	1					
ANR	984832	IdentifierDecl	mdv		984795	1					
ANR	984833	IdentifierDeclType	int		984795	0					
ANR	984834	Identifier	mdv		984795	1					
ANR	984835	ExpressionStatement	"rem = cv - bits2frac ( cmi , log2_transfer_map_size )"	1704:4:63690:63739	984795	10	True				
ANR	984836	AssignmentExpression	"rem = cv - bits2frac ( cmi , log2_transfer_map_size )"		984795	0		=			
ANR	984837	Identifier	rem		984795	0					
ANR	984838	AdditiveExpression	"cv - bits2frac ( cmi , log2_transfer_map_size )"		984795	1		-			
ANR	984839	Identifier	cv		984795	0					
ANR	984840	CallExpression	"bits2frac ( cmi , log2_transfer_map_size )"		984795	1					
ANR	984841	Callee	bits2frac		984795	0					
ANR	984842	Identifier	bits2frac		984795	0					
ANR	984843	ArgumentList	cmi		984795	1					
ANR	984844	Argument	cmi		984795	0					
ANR	984845	Identifier	cmi		984795	0					
ANR	984846	Argument	log2_transfer_map_size		984795	1					
ANR	984847	Identifier	log2_transfer_map_size		984795	0					
ANR	984848	IfStatement	if ( rem == 0 )		984795	11					
ANR	984849	Condition	rem == 0	1705:8:63749:63756	984795	0	True				
ANR	984850	EqualityExpression	rem == 0		984795	0		==			
ANR	984851	Identifier	rem		984795	0					
ANR	984852	PrimaryExpression	0		984795	1					
ANR	984853	ReturnStatement	return mv ;	1706:8:63767:63776	984795	1	True				
ANR	984854	Identifier	mv		984795	0					
ANR	984855	ExpressionStatement	mdv = values [ cmi + 1 ] - mv	1707:4:63782:63808	984795	12	True				
ANR	984856	AssignmentExpression	mdv = values [ cmi + 1 ] - mv		984795	0		=			
ANR	984857	Identifier	mdv		984795	0					
ANR	984858	AdditiveExpression	values [ cmi + 1 ] - mv		984795	1		-			
ANR	984859	ArrayIndexing	values [ cmi + 1 ]		984795	0					
ANR	984860	Identifier	values		984795	0					
ANR	984861	AdditiveExpression	cmi + 1		984795	1		+			
ANR	984862	Identifier	cmi		984795	0					
ANR	984863	PrimaryExpression	1		984795	1					
ANR	984864	Identifier	mv		984795	1					
ANR	984865	IfStatement	if ( mdv < - ( 1 << ( 16 - cp_frac_bits ) ) || mdv > 1 << ( 16 - cp_frac_bits ) )		984795	13					
ANR	984866	Condition	mdv < - ( 1 << ( 16 - cp_frac_bits ) ) || mdv > 1 << ( 16 - cp_frac_bits )	1710:8:63895:63969	984795	0	True				
ANR	984867	OrExpression	mdv < - ( 1 << ( 16 - cp_frac_bits ) ) || mdv > 1 << ( 16 - cp_frac_bits )		984795	0		||			
ANR	984868	RelationalExpression	mdv < - ( 1 << ( 16 - cp_frac_bits ) )		984795	0		<			
ANR	984869	Identifier	mdv		984795	0					
ANR	984870	UnaryOperationExpression	- ( 1 << ( 16 - cp_frac_bits ) )		984795	1					
ANR	984871	UnaryOperator	-		984795	0					
ANR	984872	ShiftExpression	1 << ( 16 - cp_frac_bits )		984795	1		<<			
ANR	984873	PrimaryExpression	1		984795	0					
ANR	984874	AdditiveExpression	16 - cp_frac_bits		984795	1		-			
ANR	984875	PrimaryExpression	16		984795	0					
ANR	984876	Identifier	cp_frac_bits		984795	1					
ANR	984877	RelationalExpression	mdv > 1 << ( 16 - cp_frac_bits )		984795	1		>			
ANR	984878	Identifier	mdv		984795	0					
ANR	984879	ShiftExpression	1 << ( 16 - cp_frac_bits )		984795	1		<<			
ANR	984880	PrimaryExpression	1		984795	0					
ANR	984881	AdditiveExpression	16 - cp_frac_bits		984795	1		-			
ANR	984882	PrimaryExpression	16		984795	0					
ANR	984883	Identifier	cp_frac_bits		984795	1					
ANR	984884	ReturnStatement	return mv + ( uint ) ( ( ( ulong ) rem * mdv ) >> cp_frac_bits ) ;	1713:8:63989:64045	984795	1	True				
ANR	984885	AdditiveExpression	mv + ( uint ) ( ( ( ulong ) rem * mdv ) >> cp_frac_bits )		984795	0		+			
ANR	984886	Identifier	mv		984795	0					
ANR	984887	CastExpression	( uint ) ( ( ( ulong ) rem * mdv ) >> cp_frac_bits )		984795	1					
ANR	984888	CastTarget	uint		984795	0					
ANR	984889	ShiftExpression	( ( ulong ) rem * mdv ) >> cp_frac_bits		984795	1		>>			
ANR	984890	MultiplicativeExpression	( ulong ) rem * mdv		984795	0		*			
ANR	984891	CastExpression	( ulong ) rem		984795	0					
ANR	984892	CastTarget	ulong		984795	0					
ANR	984893	Identifier	rem		984795	1					
ANR	984894	Identifier	mdv		984795	1					
ANR	984895	Identifier	cp_frac_bits		984795	1					
ANR	984896	ReturnStatement	return mv + ( ( rem * mdv ) >> cp_frac_bits ) ;	1715:4:64058:64099	984795	14	True				
ANR	984897	AdditiveExpression	mv + ( ( rem * mdv ) >> cp_frac_bits )		984795	0		+			
ANR	984898	Identifier	mv		984795	0					
ANR	984899	ShiftExpression	( rem * mdv ) >> cp_frac_bits		984795	1		>>			
ANR	984900	MultiplicativeExpression	rem * mdv		984795	0		*			
ANR	984901	Identifier	rem		984795	0					
ANR	984902	Identifier	mdv		984795	1					
ANR	984903	Identifier	cp_frac_bits		984795	1					
ANR	984904	Statement	undef	1716:1:64102:64106	984795	15	True				
ANR	984905	Statement	cp_frac_bits	1716:7:64108:64119	984795	16	True				
ANR	984906	ReturnType	frac		984795	1					
ANR	984907	Identifier	gx_color_frac_map		984795	2					
ANR	984908	ParameterList	"frac cv , const frac * values"		984795	3					
ANR	984909	Parameter	frac cv	1696:18:63430:63436	984795	0	True				
ANR	984910	ParameterType	frac		984795	0					
ANR	984911	Identifier	cv		984795	1					
ANR	984912	Parameter	const frac * values	1696:27:63439:63457	984795	1	True				
ANR	984913	ParameterType	const frac *		984795	0					
ANR	984914	Identifier	values		984795	1					
ANR	984915	CFGEntryNode	ENTRY		984795		True				
ANR	984916	CFGExitNode	EXIT		984795		True				
ANR	984917	Symbol	log2_transfer_map_size		984795						
ANR	984918	Symbol	cv		984795						
ANR	984919	Symbol	frac2bits_floor		984795						
ANR	984920	Symbol	bits2frac		984795						
ANR	984921	Symbol	cp_frac_bits		984795						
ANR	984922	Symbol	* cmi		984795						
ANR	984923	Symbol	* values		984795						
ANR	984924	Symbol	values		984795						
ANR	984925	Symbol	mv		984795						
ANR	984926	Symbol	rem		984795						
ANR	984927	Symbol	cmi		984795						
ANR	984928	Symbol	mdv		984795						
ANR	984929	Function	gx_default_w_b_map_rgb_color	1723:0:64229:64600							
ANR	984930	FunctionDef	"gx_default_w_b_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		984929	0					
ANR	984931	CompoundStatement		1725:0:64317:64600	984929	0					
ANR	984932	IdentifierDeclStatement	"int i , ncomps = dev -> color_info . num_components ;"	1726:4:64368:64414	984929	0	True				
ANR	984933	IdentifierDecl	i		984929	0					
ANR	984934	IdentifierDeclType	int		984929	0					
ANR	984935	Identifier	i		984929	1					
ANR	984936	IdentifierDecl	ncomps = dev -> color_info . num_components		984929	1					
ANR	984937	IdentifierDeclType	int		984929	0					
ANR	984938	Identifier	ncomps		984929	1					
ANR	984939	AssignmentExpression	ncomps = dev -> color_info . num_components		984929	2		=			
ANR	984940	Identifier	ncomps		984929	0					
ANR	984941	MemberAccess	dev -> color_info . num_components		984929	1					
ANR	984942	PtrMemberAccess	dev -> color_info		984929	0					
ANR	984943	Identifier	dev		984929	0					
ANR	984944	Identifier	color_info		984929	1					
ANR	984945	Identifier	num_components		984929	1					
ANR	984946	IdentifierDeclStatement	gx_color_value cv_all = 0 ;	1727:4:64420:64446	984929	1	True				
ANR	984947	IdentifierDecl	cv_all = 0		984929	0					
ANR	984948	IdentifierDeclType	gx_color_value		984929	0					
ANR	984949	Identifier	cv_all		984929	1					
ANR	984950	AssignmentExpression	cv_all = 0		984929	2		=			
ANR	984951	Identifier	cv_all		984929	0					
ANR	984952	PrimaryExpression	0		984929	1					
ANR	984953	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		984929	2					
ANR	984954	ForInit	i = 0 ;	1729:9:64458:64463	984929	0	True				
ANR	984955	AssignmentExpression	i = 0		984929	0		=			
ANR	984956	Identifier	i		984929	0					
ANR	984957	PrimaryExpression	0		984929	1					
ANR	984958	Condition	i < ncomps	1729:16:64465:64474	984929	1	True				
ANR	984959	RelationalExpression	i < ncomps		984929	0		<			
ANR	984960	Identifier	i		984929	0					
ANR	984961	Identifier	ncomps		984929	1					
ANR	984962	PostIncDecOperationExpression	i ++	1729:28:64477:64479	984929	2	True				
ANR	984963	Identifier	i		984929	0					
ANR	984964	IncDec	++		984929	1					
ANR	984965	ExpressionStatement	cv_all |= cv [ i ]	1730:8:64490:64505	984929	3	True				
ANR	984966	AssignmentExpression	cv_all |= cv [ i ]		984929	0		|=			
ANR	984967	Identifier	cv_all		984929	0					
ANR	984968	ArrayIndexing	cv [ i ]		984929	1					
ANR	984969	Identifier	cv		984929	0					
ANR	984970	Identifier	i		984929	1					
ANR	984971	ReturnStatement	return cv_all > gx_max_color_value / 2 ? ( gx_color_index ) 1 : ( gx_color_index ) 0 ;	1731:4:64511:64597	984929	3	True				
ANR	984972	ConditionalExpression	cv_all > gx_max_color_value / 2 ? ( gx_color_index ) 1 : ( gx_color_index ) 0		984929	0					
ANR	984973	Condition	cv_all > gx_max_color_value / 2		984929	0					
ANR	984974	RelationalExpression	cv_all > gx_max_color_value / 2		984929	0		>			
ANR	984975	Identifier	cv_all		984929	0					
ANR	984976	MultiplicativeExpression	gx_max_color_value / 2		984929	1		/			
ANR	984977	Identifier	gx_max_color_value		984929	0					
ANR	984978	PrimaryExpression	2		984929	1					
ANR	984979	CastExpression	( gx_color_index ) 1		984929	1					
ANR	984980	CastTarget	gx_color_index		984929	0					
ANR	984981	PrimaryExpression	1		984929	1					
ANR	984982	CastExpression	( gx_color_index ) 0		984929	2					
ANR	984983	CastTarget	gx_color_index		984929	0					
ANR	984984	PrimaryExpression	0		984929	1					
ANR	984985	ReturnType	gx_color_index		984929	1					
ANR	984986	Identifier	gx_default_w_b_map_rgb_color		984929	2					
ANR	984987	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		984929	3					
ANR	984988	Parameter	gx_device * dev	1724:29:64273:64287	984929	0	True				
ANR	984989	ParameterType	gx_device *		984929	0					
ANR	984990	Identifier	dev		984929	1					
ANR	984991	Parameter	const gx_color_value cv [ ]	1724:46:64290:64314	984929	1	True				
ANR	984992	ParameterType	const gx_color_value [ ]		984929	0					
ANR	984993	Identifier	cv		984929	1					
ANR	984994	CFGEntryNode	ENTRY		984929		True				
ANR	984995	CFGExitNode	EXIT		984929		True				
ANR	984996	Symbol	* dev		984929						
ANR	984997	Symbol	cv		984929						
ANR	984998	Symbol	* i		984929						
ANR	984999	Symbol	dev		984929						
ANR	985000	Symbol	dev -> color_info . num_components		984929						
ANR	985001	Symbol	gx_max_color_value		984929						
ANR	985002	Symbol	i		984929						
ANR	985003	Symbol	ncomps		984929						
ANR	985004	Symbol	* cv		984929						
ANR	985005	Symbol	dev -> color_info		984929						
ANR	985006	Symbol	cv_all		984929						
ANR	985007	Function	gx_default_w_b_map_color_rgb	1736:0:64603:64840							
ANR	985008	FunctionDef	"gx_default_w_b_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		985007	0					
ANR	985009	CompoundStatement		1739:0:64728:64840	985007	0					
ANR	985010	ExpressionStatement	prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = - ( gx_color_value ) color	1740:4:64771:64824	985007	0	True				
ANR	985011	AssignmentExpression	prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = - ( gx_color_value ) color		985007	0		=			
ANR	985012	ArrayIndexing	prgb [ 0 ]		985007	0					
ANR	985013	Identifier	prgb		985007	0					
ANR	985014	PrimaryExpression	0		985007	1					
ANR	985015	AssignmentExpression	prgb [ 1 ] = prgb [ 2 ] = - ( gx_color_value ) color		985007	1		=			
ANR	985016	ArrayIndexing	prgb [ 1 ]		985007	0					
ANR	985017	Identifier	prgb		985007	0					
ANR	985018	PrimaryExpression	1		985007	1					
ANR	985019	AssignmentExpression	prgb [ 2 ] = - ( gx_color_value ) color		985007	1		=			
ANR	985020	ArrayIndexing	prgb [ 2 ]		985007	0					
ANR	985021	Identifier	prgb		985007	0					
ANR	985022	PrimaryExpression	2		985007	1					
ANR	985023	UnaryOperationExpression	- ( gx_color_value ) color		985007	1					
ANR	985024	UnaryOperator	-		985007	0					
ANR	985025	CastExpression	( gx_color_value ) color		985007	1					
ANR	985026	CastTarget	gx_color_value		985007	0					
ANR	985027	Identifier	color		985007	1					
ANR	985028	ReturnStatement	return 0 ;	1741:4:64830:64838	985007	1	True				
ANR	985029	PrimaryExpression	0		985007	0					
ANR	985030	ReturnType	int		985007	1					
ANR	985031	Identifier	gx_default_w_b_map_color_rgb		985007	2					
ANR	985032	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		985007	3					
ANR	985033	Parameter	gx_device * dev	1737:29:64636:64650	985007	0	True				
ANR	985034	ParameterType	gx_device *		985007	0					
ANR	985035	Identifier	dev		985007	1					
ANR	985036	Parameter	gx_color_index color	1737:46:64653:64672	985007	1	True				
ANR	985037	ParameterType	gx_color_index		985007	0					
ANR	985038	Identifier	color		985007	1					
ANR	985039	Parameter	gx_color_value prgb [ 3 ]	1738:29:64704:64725	985007	2	True				
ANR	985040	ParameterType	gx_color_value [ 3 ]		985007	0					
ANR	985041	Identifier	prgb		985007	1					
ANR	985042	CFGEntryNode	ENTRY		985007		True				
ANR	985043	CFGExitNode	EXIT		985007		True				
ANR	985044	Symbol	* prgb		985007						
ANR	985045	Symbol	dev		985007						
ANR	985046	Symbol	color		985007						
ANR	985047	Symbol	prgb		985007						
ANR	985048	Function	gx_default_b_w_map_rgb_color	1745:0:64864:65191							
ANR	985049	FunctionDef	"gx_default_b_w_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		985048	0					
ANR	985050	CompoundStatement		1747:0:64952:65191	985048	0					
ANR	985051	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	1748:4:64958:65006	985048	0	True				
ANR	985052	IdentifierDecl	i		985048	0					
ANR	985053	IdentifierDeclType	uchar		985048	0					
ANR	985054	Identifier	i		985048	1					
ANR	985055	IdentifierDecl	ncomps = dev -> color_info . num_components		985048	1					
ANR	985056	IdentifierDeclType	uchar		985048	0					
ANR	985057	Identifier	ncomps		985048	1					
ANR	985058	AssignmentExpression	ncomps = dev -> color_info . num_components		985048	2		=			
ANR	985059	Identifier	ncomps		985048	0					
ANR	985060	MemberAccess	dev -> color_info . num_components		985048	1					
ANR	985061	PtrMemberAccess	dev -> color_info		985048	0					
ANR	985062	Identifier	dev		985048	0					
ANR	985063	Identifier	color_info		985048	1					
ANR	985064	Identifier	num_components		985048	1					
ANR	985065	IdentifierDeclStatement	gx_color_value cv_all = 0 ;	1749:4:65012:65038	985048	1	True				
ANR	985066	IdentifierDecl	cv_all = 0		985048	0					
ANR	985067	IdentifierDeclType	gx_color_value		985048	0					
ANR	985068	Identifier	cv_all		985048	1					
ANR	985069	AssignmentExpression	cv_all = 0		985048	2		=			
ANR	985070	Identifier	cv_all		985048	0					
ANR	985071	PrimaryExpression	0		985048	1					
ANR	985072	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		985048	2					
ANR	985073	ForInit	i = 0 ;	1751:9:65050:65055	985048	0	True				
ANR	985074	AssignmentExpression	i = 0		985048	0		=			
ANR	985075	Identifier	i		985048	0					
ANR	985076	PrimaryExpression	0		985048	1					
ANR	985077	Condition	i < ncomps	1751:16:65057:65066	985048	1	True				
ANR	985078	RelationalExpression	i < ncomps		985048	0		<			
ANR	985079	Identifier	i		985048	0					
ANR	985080	Identifier	ncomps		985048	1					
ANR	985081	PostIncDecOperationExpression	i ++	1751:28:65069:65071	985048	2	True				
ANR	985082	Identifier	i		985048	0					
ANR	985083	IncDec	++		985048	1					
ANR	985084	ExpressionStatement	cv_all |= cv [ i ]	1752:8:65082:65097	985048	3	True				
ANR	985085	AssignmentExpression	cv_all |= cv [ i ]		985048	0		|=			
ANR	985086	Identifier	cv_all		985048	0					
ANR	985087	ArrayIndexing	cv [ i ]		985048	1					
ANR	985088	Identifier	cv		985048	0					
ANR	985089	Identifier	i		985048	1					
ANR	985090	ReturnStatement	return cv_all > gx_max_color_value / 2 ? ( gx_color_index ) 0 : ( gx_color_index ) 1 ;	1753:4:65103:65189	985048	3	True				
ANR	985091	ConditionalExpression	cv_all > gx_max_color_value / 2 ? ( gx_color_index ) 0 : ( gx_color_index ) 1		985048	0					
ANR	985092	Condition	cv_all > gx_max_color_value / 2		985048	0					
ANR	985093	RelationalExpression	cv_all > gx_max_color_value / 2		985048	0		>			
ANR	985094	Identifier	cv_all		985048	0					
ANR	985095	MultiplicativeExpression	gx_max_color_value / 2		985048	1		/			
ANR	985096	Identifier	gx_max_color_value		985048	0					
ANR	985097	PrimaryExpression	2		985048	1					
ANR	985098	CastExpression	( gx_color_index ) 0		985048	1					
ANR	985099	CastTarget	gx_color_index		985048	0					
ANR	985100	PrimaryExpression	0		985048	1					
ANR	985101	CastExpression	( gx_color_index ) 1		985048	2					
ANR	985102	CastTarget	gx_color_index		985048	0					
ANR	985103	PrimaryExpression	1		985048	1					
ANR	985104	ReturnType	gx_color_index		985048	1					
ANR	985105	Identifier	gx_default_b_w_map_rgb_color		985048	2					
ANR	985106	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		985048	3					
ANR	985107	Parameter	gx_device * dev	1746:29:64908:64922	985048	0	True				
ANR	985108	ParameterType	gx_device *		985048	0					
ANR	985109	Identifier	dev		985048	1					
ANR	985110	Parameter	const gx_color_value cv [ ]	1746:46:64925:64949	985048	1	True				
ANR	985111	ParameterType	const gx_color_value [ ]		985048	0					
ANR	985112	Identifier	cv		985048	1					
ANR	985113	CFGEntryNode	ENTRY		985048		True				
ANR	985114	CFGExitNode	EXIT		985048		True				
ANR	985115	Symbol	* dev		985048						
ANR	985116	Symbol	cv		985048						
ANR	985117	Symbol	* i		985048						
ANR	985118	Symbol	dev		985048						
ANR	985119	Symbol	dev -> color_info . num_components		985048						
ANR	985120	Symbol	gx_max_color_value		985048						
ANR	985121	Symbol	i		985048						
ANR	985122	Symbol	ncomps		985048						
ANR	985123	Symbol	* cv		985048						
ANR	985124	Symbol	dev -> color_info		985048						
ANR	985125	Symbol	cv_all		985048						
ANR	985126	Function	gx_default_b_w_map_color_rgb	1757:0:65194:65437							
ANR	985127	FunctionDef	"gx_default_b_w_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		985126	0					
ANR	985128	CompoundStatement		1760:0:65319:65437	985126	0					
ANR	985129	ExpressionStatement	prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = - ( ( gx_color_value ) color ^ 1 )	1761:4:65362:65421	985126	0	True				
ANR	985130	AssignmentExpression	prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = - ( ( gx_color_value ) color ^ 1 )		985126	0		=			
ANR	985131	ArrayIndexing	prgb [ 0 ]		985126	0					
ANR	985132	Identifier	prgb		985126	0					
ANR	985133	PrimaryExpression	0		985126	1					
ANR	985134	AssignmentExpression	prgb [ 1 ] = prgb [ 2 ] = - ( ( gx_color_value ) color ^ 1 )		985126	1		=			
ANR	985135	ArrayIndexing	prgb [ 1 ]		985126	0					
ANR	985136	Identifier	prgb		985126	0					
ANR	985137	PrimaryExpression	1		985126	1					
ANR	985138	AssignmentExpression	prgb [ 2 ] = - ( ( gx_color_value ) color ^ 1 )		985126	1		=			
ANR	985139	ArrayIndexing	prgb [ 2 ]		985126	0					
ANR	985140	Identifier	prgb		985126	0					
ANR	985141	PrimaryExpression	2		985126	1					
ANR	985142	UnaryOperationExpression	- ( ( gx_color_value ) color ^ 1 )		985126	1					
ANR	985143	UnaryOperator	-		985126	0					
ANR	985144	ExclusiveOrExpression	( gx_color_value ) color ^ 1		985126	1		^			
ANR	985145	CastExpression	( gx_color_value ) color		985126	0					
ANR	985146	CastTarget	gx_color_value		985126	0					
ANR	985147	Identifier	color		985126	1					
ANR	985148	PrimaryExpression	1		985126	1					
ANR	985149	ReturnStatement	return 0 ;	1762:4:65427:65435	985126	1	True				
ANR	985150	PrimaryExpression	0		985126	0					
ANR	985151	ReturnType	int		985126	1					
ANR	985152	Identifier	gx_default_b_w_map_color_rgb		985126	2					
ANR	985153	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		985126	3					
ANR	985154	Parameter	gx_device * dev	1758:29:65227:65241	985126	0	True				
ANR	985155	ParameterType	gx_device *		985126	0					
ANR	985156	Identifier	dev		985126	1					
ANR	985157	Parameter	gx_color_index color	1758:46:65244:65263	985126	1	True				
ANR	985158	ParameterType	gx_color_index		985126	0					
ANR	985159	Identifier	color		985126	1					
ANR	985160	Parameter	gx_color_value prgb [ 3 ]	1759:29:65295:65316	985126	2	True				
ANR	985161	ParameterType	gx_color_value [ 3 ]		985126	0					
ANR	985162	Identifier	prgb		985126	1					
ANR	985163	CFGEntryNode	ENTRY		985126		True				
ANR	985164	CFGExitNode	EXIT		985126		True				
ANR	985165	Symbol	* prgb		985126						
ANR	985166	Symbol	dev		985126						
ANR	985167	Symbol	color		985126						
ANR	985168	Symbol	prgb		985126						
ANR	985169	Function	gx_default_gray_map_rgb_color	1767:0:65482:65932							
ANR	985170	FunctionDef	"gx_default_gray_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		985169	0					
ANR	985171	CompoundStatement		1769:0:65571:65932	985169	0					
ANR	985172	IdentifierDeclStatement	gx_color_value gray = ( ( ( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 ) ) / lum_all_weights * dev -> color_info . max_gray + ( gx_max_color_value / 2 ) ) / gx_max_color_value ;	1770:4:65632:65912	985169	0	True				
ANR	985173	IdentifierDecl	gray = ( ( ( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 ) ) / lum_all_weights * dev -> color_info . max_gray + ( gx_max_color_value / 2 ) ) / gx_max_color_value		985169	0					
ANR	985174	IdentifierDeclType	gx_color_value		985169	0					
ANR	985175	Identifier	gray		985169	1					
ANR	985176	AssignmentExpression	gray = ( ( ( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 ) ) / lum_all_weights * dev -> color_info . max_gray + ( gx_max_color_value / 2 ) ) / gx_max_color_value		985169	2		=			
ANR	985177	Identifier	gray		985169	0					
ANR	985178	MultiplicativeExpression	( ( ( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 ) ) / lum_all_weights * dev -> color_info . max_gray + ( gx_max_color_value / 2 ) ) / gx_max_color_value		985169	1		/			
ANR	985179	AdditiveExpression	( ( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 ) ) / lum_all_weights * dev -> color_info . max_gray + ( gx_max_color_value / 2 )		985169	0		+			
ANR	985180	MultiplicativeExpression	( ( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 ) ) / lum_all_weights * dev -> color_info . max_gray		985169	0		/			
ANR	985181	AdditiveExpression	( cv [ 0 ] * ( ulong ) lum_red_weight ) + ( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 )		985169	0		+			
ANR	985182	MultiplicativeExpression	cv [ 0 ] * ( ulong ) lum_red_weight		985169	0		*			
ANR	985183	ArrayIndexing	cv [ 0 ]		985169	0					
ANR	985184	Identifier	cv		985169	0					
ANR	985185	PrimaryExpression	0		985169	1					
ANR	985186	CastExpression	( ulong ) lum_red_weight		985169	1					
ANR	985187	CastTarget	ulong		985169	0					
ANR	985188	Identifier	lum_red_weight		985169	1					
ANR	985189	AdditiveExpression	( cv [ 1 ] * ( ulong ) lum_green_weight ) + ( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 )		985169	1		+			
ANR	985190	MultiplicativeExpression	cv [ 1 ] * ( ulong ) lum_green_weight		985169	0		*			
ANR	985191	ArrayIndexing	cv [ 1 ]		985169	0					
ANR	985192	Identifier	cv		985169	0					
ANR	985193	PrimaryExpression	1		985169	1					
ANR	985194	CastExpression	( ulong ) lum_green_weight		985169	1					
ANR	985195	CastTarget	ulong		985169	0					
ANR	985196	Identifier	lum_green_weight		985169	1					
ANR	985197	AdditiveExpression	( cv [ 2 ] * ( ulong ) lum_blue_weight ) + ( lum_all_weights / 2 )		985169	1		+			
ANR	985198	MultiplicativeExpression	cv [ 2 ] * ( ulong ) lum_blue_weight		985169	0		*			
ANR	985199	ArrayIndexing	cv [ 2 ]		985169	0					
ANR	985200	Identifier	cv		985169	0					
ANR	985201	PrimaryExpression	2		985169	1					
ANR	985202	CastExpression	( ulong ) lum_blue_weight		985169	1					
ANR	985203	CastTarget	ulong		985169	0					
ANR	985204	Identifier	lum_blue_weight		985169	1					
ANR	985205	MultiplicativeExpression	lum_all_weights / 2		985169	1		/			
ANR	985206	Identifier	lum_all_weights		985169	0					
ANR	985207	PrimaryExpression	2		985169	1					
ANR	985208	MultiplicativeExpression	lum_all_weights * dev -> color_info . max_gray		985169	1		*			
ANR	985209	Identifier	lum_all_weights		985169	0					
ANR	985210	MemberAccess	dev -> color_info . max_gray		985169	1					
ANR	985211	PtrMemberAccess	dev -> color_info		985169	0					
ANR	985212	Identifier	dev		985169	0					
ANR	985213	Identifier	color_info		985169	1					
ANR	985214	Identifier	max_gray		985169	1					
ANR	985215	MultiplicativeExpression	gx_max_color_value / 2		985169	1		/			
ANR	985216	Identifier	gx_max_color_value		985169	0					
ANR	985217	PrimaryExpression	2		985169	1					
ANR	985218	Identifier	gx_max_color_value		985169	1					
ANR	985219	ReturnStatement	return gray ;	1778:4:65919:65930	985169	1	True				
ANR	985220	Identifier	gray		985169	0					
ANR	985221	ReturnType	gx_color_index		985169	1					
ANR	985222	Identifier	gx_default_gray_map_rgb_color		985169	2					
ANR	985223	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		985169	3					
ANR	985224	Parameter	gx_device * dev	1768:30:65527:65541	985169	0	True				
ANR	985225	ParameterType	gx_device *		985169	0					
ANR	985226	Identifier	dev		985169	1					
ANR	985227	Parameter	const gx_color_value cv [ ]	1768:47:65544:65568	985169	1	True				
ANR	985228	ParameterType	const gx_color_value [ ]		985169	0					
ANR	985229	Identifier	cv		985169	1					
ANR	985230	CFGEntryNode	ENTRY		985169		True				
ANR	985231	CFGExitNode	EXIT		985169		True				
ANR	985232	Symbol	* dev		985169						
ANR	985233	Symbol	cv		985169						
ANR	985234	Symbol	gray		985169						
ANR	985235	Symbol	lum_green_weight		985169						
ANR	985236	Symbol	dev		985169						
ANR	985237	Symbol	gx_max_color_value		985169						
ANR	985238	Symbol	lum_blue_weight		985169						
ANR	985239	Symbol	* cv		985169						
ANR	985240	Symbol	dev -> color_info		985169						
ANR	985241	Symbol	dev -> color_info . max_gray		985169						
ANR	985242	Symbol	lum_red_weight		985169						
ANR	985243	Symbol	lum_all_weights		985169						
ANR	985244	Function	gx_default_gray_map_color_rgb	1781:0:65935:66247							
ANR	985245	FunctionDef	"gx_default_gray_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		985244	0					
ANR	985246	CompoundStatement		1784:0:66062:66247	985244	0					
ANR	985247	IdentifierDeclStatement	gx_color_value gray = ( gx_color_value ) ( color * gx_max_color_value / dev -> color_info . max_gray ) ;	1785:4:66068:66170	985244	0	True				
ANR	985248	IdentifierDecl	gray = ( gx_color_value ) ( color * gx_max_color_value / dev -> color_info . max_gray )		985244	0					
ANR	985249	IdentifierDeclType	gx_color_value		985244	0					
ANR	985250	Identifier	gray		985244	1					
ANR	985251	AssignmentExpression	gray = ( gx_color_value ) ( color * gx_max_color_value / dev -> color_info . max_gray )		985244	2		=			
ANR	985252	Identifier	gray		985244	0					
ANR	985253	CastExpression	( gx_color_value ) ( color * gx_max_color_value / dev -> color_info . max_gray )		985244	1					
ANR	985254	CastTarget	gx_color_value		985244	0					
ANR	985255	MultiplicativeExpression	color * gx_max_color_value / dev -> color_info . max_gray		985244	1		*			
ANR	985256	Identifier	color		985244	0					
ANR	985257	MultiplicativeExpression	gx_max_color_value / dev -> color_info . max_gray		985244	1		/			
ANR	985258	Identifier	gx_max_color_value		985244	0					
ANR	985259	MemberAccess	dev -> color_info . max_gray		985244	1					
ANR	985260	PtrMemberAccess	dev -> color_info		985244	0					
ANR	985261	Identifier	dev		985244	0					
ANR	985262	Identifier	color_info		985244	1					
ANR	985263	Identifier	max_gray		985244	1					
ANR	985264	ExpressionStatement	prgb [ 0 ] = gray	1788:4:66177:66191	985244	1	True				
ANR	985265	AssignmentExpression	prgb [ 0 ] = gray		985244	0		=			
ANR	985266	ArrayIndexing	prgb [ 0 ]		985244	0					
ANR	985267	Identifier	prgb		985244	0					
ANR	985268	PrimaryExpression	0		985244	1					
ANR	985269	Identifier	gray		985244	1					
ANR	985270	ExpressionStatement	prgb [ 1 ] = gray	1789:4:66197:66211	985244	2	True				
ANR	985271	AssignmentExpression	prgb [ 1 ] = gray		985244	0		=			
ANR	985272	ArrayIndexing	prgb [ 1 ]		985244	0					
ANR	985273	Identifier	prgb		985244	0					
ANR	985274	PrimaryExpression	1		985244	1					
ANR	985275	Identifier	gray		985244	1					
ANR	985276	ExpressionStatement	prgb [ 2 ] = gray	1790:4:66217:66231	985244	3	True				
ANR	985277	AssignmentExpression	prgb [ 2 ] = gray		985244	0		=			
ANR	985278	ArrayIndexing	prgb [ 2 ]		985244	0					
ANR	985279	Identifier	prgb		985244	0					
ANR	985280	PrimaryExpression	2		985244	1					
ANR	985281	Identifier	gray		985244	1					
ANR	985282	ReturnStatement	return 0 ;	1791:4:66237:66245	985244	4	True				
ANR	985283	PrimaryExpression	0		985244	0					
ANR	985284	ReturnType	int		985244	1					
ANR	985285	Identifier	gx_default_gray_map_color_rgb		985244	2					
ANR	985286	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		985244	3					
ANR	985287	Parameter	gx_device * dev	1782:30:65969:65983	985244	0	True				
ANR	985288	ParameterType	gx_device *		985244	0					
ANR	985289	Identifier	dev		985244	1					
ANR	985290	Parameter	gx_color_index color	1782:47:65986:66005	985244	1	True				
ANR	985291	ParameterType	gx_color_index		985244	0					
ANR	985292	Identifier	color		985244	1					
ANR	985293	Parameter	gx_color_value prgb [ 3 ]	1783:30:66038:66059	985244	2	True				
ANR	985294	ParameterType	gx_color_value [ 3 ]		985244	0					
ANR	985295	Identifier	prgb		985244	1					
ANR	985296	CFGEntryNode	ENTRY		985244		True				
ANR	985297	CFGExitNode	EXIT		985244		True				
ANR	985298	Symbol	* dev		985244						
ANR	985299	Symbol	* prgb		985244						
ANR	985300	Symbol	gray		985244						
ANR	985301	Symbol	dev		985244						
ANR	985302	Symbol	color		985244						
ANR	985303	Symbol	gx_max_color_value		985244						
ANR	985304	Symbol	prgb		985244						
ANR	985305	Symbol	dev -> color_info		985244						
ANR	985306	Symbol	dev -> color_info . max_gray		985244						
ANR	985307	Function	gx_default_8bit_map_gray_color	1794:0:66250:66462							
ANR	985308	FunctionDef	"gx_default_8bit_map_gray_color (gx_device * dev , const gx_color_value cv [ ])"		985307	0					
ANR	985309	CompoundStatement		1796:0:66340:66462	985307	0					
ANR	985310	IdentifierDeclStatement	gx_color_index color = gx_color_value_to_byte ( cv [ 0 ] ) ;	1797:4:66346:66398	985307	0	True				
ANR	985311	IdentifierDecl	color = gx_color_value_to_byte ( cv [ 0 ] )		985307	0					
ANR	985312	IdentifierDeclType	gx_color_index		985307	0					
ANR	985313	Identifier	color		985307	1					
ANR	985314	AssignmentExpression	color = gx_color_value_to_byte ( cv [ 0 ] )		985307	2		=			
ANR	985315	Identifier	color		985307	0					
ANR	985316	CallExpression	gx_color_value_to_byte ( cv [ 0 ] )		985307	1					
ANR	985317	Callee	gx_color_value_to_byte		985307	0					
ANR	985318	Identifier	gx_color_value_to_byte		985307	0					
ANR	985319	ArgumentList	cv [ 0 ]		985307	1					
ANR	985320	Argument	cv [ 0 ]		985307	0					
ANR	985321	ArrayIndexing	cv [ 0 ]		985307	0					
ANR	985322	Identifier	cv		985307	0					
ANR	985323	PrimaryExpression	0		985307	1					
ANR	985324	ReturnStatement	return ( color == gx_no_color_index ? color ^ 1 : color ) ;	1799:4:66405:66460	985307	1	True				
ANR	985325	ConditionalExpression	color == gx_no_color_index ? color ^ 1 : color		985307	0					
ANR	985326	Condition	color == gx_no_color_index		985307	0					
ANR	985327	EqualityExpression	color == gx_no_color_index		985307	0		==			
ANR	985328	Identifier	color		985307	0					
ANR	985329	Identifier	gx_no_color_index		985307	1					
ANR	985330	ExclusiveOrExpression	color ^ 1		985307	1		^			
ANR	985331	Identifier	color		985307	0					
ANR	985332	PrimaryExpression	1		985307	1					
ANR	985333	Identifier	color		985307	2					
ANR	985334	ReturnType	gx_color_index		985307	1					
ANR	985335	Identifier	gx_default_8bit_map_gray_color		985307	2					
ANR	985336	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		985307	3					
ANR	985337	Parameter	gx_device * dev	1795:31:66296:66310	985307	0	True				
ANR	985338	ParameterType	gx_device *		985307	0					
ANR	985339	Identifier	dev		985307	1					
ANR	985340	Parameter	const gx_color_value cv [ ]	1795:48:66313:66337	985307	1	True				
ANR	985341	ParameterType	const gx_color_value [ ]		985307	0					
ANR	985342	Identifier	cv		985307	1					
ANR	985343	CFGEntryNode	ENTRY		985307		True				
ANR	985344	CFGExitNode	EXIT		985307		True				
ANR	985345	Symbol	gx_color_value_to_byte		985307						
ANR	985346	Symbol	cv		985307						
ANR	985347	Symbol	gx_no_color_index		985307						
ANR	985348	Symbol	dev		985307						
ANR	985349	Symbol	color		985307						
ANR	985350	Symbol	* cv		985307						
ANR	985351	Function	gx_default_8bit_map_color_gray	1802:0:66465:66677							
ANR	985352	FunctionDef	"gx_default_8bit_map_color_gray (gx_device * dev , gx_color_index color , gx_color_value pgray [ 1 ])"		985351	0					
ANR	985353	CompoundStatement		1805:0:66594:66677	985351	0					
ANR	985354	ExpressionStatement	pgray [ 0 ] = ( gx_color_value ) ( color * gx_max_color_value / 255 )	1806:4:66600:66661	985351	0	True				
ANR	985355	AssignmentExpression	pgray [ 0 ] = ( gx_color_value ) ( color * gx_max_color_value / 255 )		985351	0		=			
ANR	985356	ArrayIndexing	pgray [ 0 ]		985351	0					
ANR	985357	Identifier	pgray		985351	0					
ANR	985358	PrimaryExpression	0		985351	1					
ANR	985359	CastExpression	( gx_color_value ) ( color * gx_max_color_value / 255 )		985351	1					
ANR	985360	CastTarget	gx_color_value		985351	0					
ANR	985361	MultiplicativeExpression	color * gx_max_color_value / 255		985351	1		*			
ANR	985362	Identifier	color		985351	0					
ANR	985363	MultiplicativeExpression	gx_max_color_value / 255		985351	1		/			
ANR	985364	Identifier	gx_max_color_value		985351	0					
ANR	985365	PrimaryExpression	255		985351	1					
ANR	985366	ReturnStatement	return 0 ;	1807:4:66667:66675	985351	1	True				
ANR	985367	PrimaryExpression	0		985351	0					
ANR	985368	ReturnType	int		985351	1					
ANR	985369	Identifier	gx_default_8bit_map_color_gray		985351	2					
ANR	985370	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value pgray [ 1 ]"		985351	3					
ANR	985371	Parameter	gx_device * dev	1803:31:66500:66514	985351	0	True				
ANR	985372	ParameterType	gx_device *		985351	0					
ANR	985373	Identifier	dev		985351	1					
ANR	985374	Parameter	gx_color_index color	1803:48:66517:66536	985351	1	True				
ANR	985375	ParameterType	gx_color_index		985351	0					
ANR	985376	Identifier	color		985351	1					
ANR	985377	Parameter	gx_color_value pgray [ 1 ]	1804:30:66569:66591	985351	2	True				
ANR	985378	ParameterType	gx_color_value [ 1 ]		985351	0					
ANR	985379	Identifier	pgray		985351	1					
ANR	985380	CFGEntryNode	ENTRY		985351		True				
ANR	985381	CFGExitNode	EXIT		985351		True				
ANR	985382	Symbol	dev		985351						
ANR	985383	Symbol	color		985351						
ANR	985384	Symbol	gx_max_color_value		985351						
ANR	985385	Symbol	* pgray		985351						
ANR	985386	Symbol	pgray		985351						
ANR	985387	Function	gx_default_rgb_map_rgb_color	1812:0:66735:67279							
ANR	985388	FunctionDef	"gx_default_rgb_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		985387	0					
ANR	985389	CompoundStatement		1814:0:66823:67279	985387	0					
ANR	985390	IfStatement	if ( dev -> color_info . depth == 24 )		985387	0					
ANR	985391	Condition	dev -> color_info . depth == 24	1815:8:66833:66859	985387	0	True				
ANR	985392	EqualityExpression	dev -> color_info . depth == 24		985387	0		==			
ANR	985393	MemberAccess	dev -> color_info . depth		985387	0					
ANR	985394	PtrMemberAccess	dev -> color_info		985387	0					
ANR	985395	Identifier	dev		985387	0					
ANR	985396	Identifier	color_info		985387	1					
ANR	985397	Identifier	depth		985387	1					
ANR	985398	PrimaryExpression	24		985387	1					
ANR	985399	ReturnStatement	return gx_color_value_to_byte ( cv [ 2 ] ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 8 ) + ( ( ulong ) gx_color_value_to_byte ( cv [ 0 ] ) << 16 ) ;	1816:8:66870:67024	985387	1	True				
ANR	985400	AdditiveExpression	gx_color_value_to_byte ( cv [ 2 ] ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 8 ) + ( ( ulong ) gx_color_value_to_byte ( cv [ 0 ] ) << 16 )		985387	0		+			
ANR	985401	CallExpression	gx_color_value_to_byte ( cv [ 2 ] )		985387	0					
ANR	985402	Callee	gx_color_value_to_byte		985387	0					
ANR	985403	Identifier	gx_color_value_to_byte		985387	0					
ANR	985404	ArgumentList	cv [ 2 ]		985387	1					
ANR	985405	Argument	cv [ 2 ]		985387	0					
ANR	985406	ArrayIndexing	cv [ 2 ]		985387	0					
ANR	985407	Identifier	cv		985387	0					
ANR	985408	PrimaryExpression	2		985387	1					
ANR	985409	AdditiveExpression	( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 8 ) + ( ( ulong ) gx_color_value_to_byte ( cv [ 0 ] ) << 16 )		985387	1		+			
ANR	985410	ShiftExpression	( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 8		985387	0		<<			
ANR	985411	CastExpression	( uint ) gx_color_value_to_byte ( cv [ 1 ] )		985387	0					
ANR	985412	CastTarget	uint		985387	0					
ANR	985413	CallExpression	gx_color_value_to_byte ( cv [ 1 ] )		985387	1					
ANR	985414	Callee	gx_color_value_to_byte		985387	0					
ANR	985415	Identifier	gx_color_value_to_byte		985387	0					
ANR	985416	ArgumentList	cv [ 1 ]		985387	1					
ANR	985417	Argument	cv [ 1 ]		985387	0					
ANR	985418	ArrayIndexing	cv [ 1 ]		985387	0					
ANR	985419	Identifier	cv		985387	0					
ANR	985420	PrimaryExpression	1		985387	1					
ANR	985421	PrimaryExpression	8		985387	1					
ANR	985422	ShiftExpression	( ulong ) gx_color_value_to_byte ( cv [ 0 ] ) << 16		985387	1		<<			
ANR	985423	CastExpression	( ulong ) gx_color_value_to_byte ( cv [ 0 ] )		985387	0					
ANR	985424	CastTarget	ulong		985387	0					
ANR	985425	CallExpression	gx_color_value_to_byte ( cv [ 0 ] )		985387	1					
ANR	985426	Callee	gx_color_value_to_byte		985387	0					
ANR	985427	Identifier	gx_color_value_to_byte		985387	0					
ANR	985428	ArgumentList	cv [ 0 ]		985387	1					
ANR	985429	Argument	cv [ 0 ]		985387	0					
ANR	985430	ArrayIndexing	cv [ 0 ]		985387	0					
ANR	985431	Identifier	cv		985387	0					
ANR	985432	PrimaryExpression	0		985387	1					
ANR	985433	PrimaryExpression	16		985387	1					
ANR	985434	ElseStatement	else		985387	0					
ANR	985435	CompoundStatement		8:8:244:279	985387	0					
ANR	985436	ExpressionStatement	COLROUND_VARS	1820:8:67045:67058	985387	0	True				
ANR	985437	Identifier	COLROUND_VARS		985387	0					
ANR	985438	IdentifierDeclStatement	int bpc = dev -> color_info . depth / 3 ;	1821:8:67068:67103	985387	1	True				
ANR	985439	IdentifierDecl	bpc = dev -> color_info . depth / 3		985387	0					
ANR	985440	IdentifierDeclType	int		985387	0					
ANR	985441	Identifier	bpc		985387	1					
ANR	985442	AssignmentExpression	bpc = dev -> color_info . depth / 3		985387	2		=			
ANR	985443	Identifier	bpc		985387	0					
ANR	985444	MultiplicativeExpression	dev -> color_info . depth / 3		985387	1		/			
ANR	985445	MemberAccess	dev -> color_info . depth		985387	0					
ANR	985446	PtrMemberAccess	dev -> color_info		985387	0					
ANR	985447	Identifier	dev		985387	0					
ANR	985448	Identifier	color_info		985387	1					
ANR	985449	Identifier	depth		985387	1					
ANR	985450	PrimaryExpression	3		985387	1					
ANR	985451	ExpressionStatement	COLROUND_SETUP ( bpc )	1822:8:67113:67132	985387	2	True				
ANR	985452	CallExpression	COLROUND_SETUP ( bpc )		985387	0					
ANR	985453	Callee	COLROUND_SETUP		985387	0					
ANR	985454	Identifier	COLROUND_SETUP		985387	0					
ANR	985455	ArgumentList	bpc		985387	1					
ANR	985456	Argument	bpc		985387	0					
ANR	985457	Identifier	bpc		985387	0					
ANR	985458	ReturnStatement	return ( ( ( COLROUND_ROUND ( cv [ 0 ] ) << bpc ) + COLROUND_ROUND ( cv [ 1 ] ) ) << bpc ) + COLROUND_ROUND ( cv [ 2 ] ) ;	1824:8:67143:67271	985387	3	True				
ANR	985459	AdditiveExpression	( ( ( COLROUND_ROUND ( cv [ 0 ] ) << bpc ) + COLROUND_ROUND ( cv [ 1 ] ) ) << bpc ) + COLROUND_ROUND ( cv [ 2 ] )		985387	0		+			
ANR	985460	ShiftExpression	( ( COLROUND_ROUND ( cv [ 0 ] ) << bpc ) + COLROUND_ROUND ( cv [ 1 ] ) ) << bpc		985387	0		<<			
ANR	985461	AdditiveExpression	( COLROUND_ROUND ( cv [ 0 ] ) << bpc ) + COLROUND_ROUND ( cv [ 1 ] )		985387	0		+			
ANR	985462	ShiftExpression	COLROUND_ROUND ( cv [ 0 ] ) << bpc		985387	0		<<			
ANR	985463	CallExpression	COLROUND_ROUND ( cv [ 0 ] )		985387	0					
ANR	985464	Callee	COLROUND_ROUND		985387	0					
ANR	985465	Identifier	COLROUND_ROUND		985387	0					
ANR	985466	ArgumentList	cv [ 0 ]		985387	1					
ANR	985467	Argument	cv [ 0 ]		985387	0					
ANR	985468	ArrayIndexing	cv [ 0 ]		985387	0					
ANR	985469	Identifier	cv		985387	0					
ANR	985470	PrimaryExpression	0		985387	1					
ANR	985471	Identifier	bpc		985387	1					
ANR	985472	CallExpression	COLROUND_ROUND ( cv [ 1 ] )		985387	1					
ANR	985473	Callee	COLROUND_ROUND		985387	0					
ANR	985474	Identifier	COLROUND_ROUND		985387	0					
ANR	985475	ArgumentList	cv [ 1 ]		985387	1					
ANR	985476	Argument	cv [ 1 ]		985387	0					
ANR	985477	ArrayIndexing	cv [ 1 ]		985387	0					
ANR	985478	Identifier	cv		985387	0					
ANR	985479	PrimaryExpression	1		985387	1					
ANR	985480	Identifier	bpc		985387	1					
ANR	985481	CallExpression	COLROUND_ROUND ( cv [ 2 ] )		985387	1					
ANR	985482	Callee	COLROUND_ROUND		985387	0					
ANR	985483	Identifier	COLROUND_ROUND		985387	0					
ANR	985484	ArgumentList	cv [ 2 ]		985387	1					
ANR	985485	Argument	cv [ 2 ]		985387	0					
ANR	985486	ArrayIndexing	cv [ 2 ]		985387	0					
ANR	985487	Identifier	cv		985387	0					
ANR	985488	PrimaryExpression	2		985387	1					
ANR	985489	ReturnType	gx_color_index		985387	1					
ANR	985490	Identifier	gx_default_rgb_map_rgb_color		985387	2					
ANR	985491	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		985387	3					
ANR	985492	Parameter	gx_device * dev	1813:29:66779:66793	985387	0	True				
ANR	985493	ParameterType	gx_device *		985387	0					
ANR	985494	Identifier	dev		985387	1					
ANR	985495	Parameter	const gx_color_value cv [ ]	1813:46:66796:66820	985387	1	True				
ANR	985496	ParameterType	const gx_color_value [ ]		985387	0					
ANR	985497	Identifier	cv		985387	1					
ANR	985498	CFGEntryNode	ENTRY		985387		True				
ANR	985499	CFGExitNode	EXIT		985387		True				
ANR	985500	Symbol	* dev		985387						
ANR	985501	Symbol	gx_color_value_to_byte		985387						
ANR	985502	Symbol	cv		985387						
ANR	985503	Symbol	dev		985387						
ANR	985504	Symbol	bpc		985387						
ANR	985505	Symbol	COLROUND_ROUND		985387						
ANR	985506	Symbol	* cv		985387						
ANR	985507	Symbol	dev -> color_info . depth		985387						
ANR	985508	Symbol	dev -> color_info		985387						
ANR	985509	Function	gx_default_rgb_map_color_rgb	1831:0:67324:68144							
ANR	985510	FunctionDef	"gx_default_rgb_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		985509	0					
ANR	985511	CompoundStatement		1834:0:67449:68144	985509	0					
ANR	985512	IfStatement	if ( dev -> color_info . depth == 24 )		985509	0					
ANR	985513	Condition	dev -> color_info . depth == 24	1835:8:67459:67485	985509	0	True				
ANR	985514	EqualityExpression	dev -> color_info . depth == 24		985509	0		==			
ANR	985515	MemberAccess	dev -> color_info . depth		985509	0					
ANR	985516	PtrMemberAccess	dev -> color_info		985509	0					
ANR	985517	Identifier	dev		985509	0					
ANR	985518	Identifier	color_info		985509	1					
ANR	985519	Identifier	depth		985509	1					
ANR	985520	PrimaryExpression	24		985509	1					
ANR	985521	CompoundStatement		2:37:38:38	985509	1					
ANR	985522	ExpressionStatement	prgb [ 0 ] = gx_color_value_from_byte ( color >> 16 )	1836:8:67498:67545	985509	0	True				
ANR	985523	AssignmentExpression	prgb [ 0 ] = gx_color_value_from_byte ( color >> 16 )		985509	0		=			
ANR	985524	ArrayIndexing	prgb [ 0 ]		985509	0					
ANR	985525	Identifier	prgb		985509	0					
ANR	985526	PrimaryExpression	0		985509	1					
ANR	985527	CallExpression	gx_color_value_from_byte ( color >> 16 )		985509	1					
ANR	985528	Callee	gx_color_value_from_byte		985509	0					
ANR	985529	Identifier	gx_color_value_from_byte		985509	0					
ANR	985530	ArgumentList	color >> 16		985509	1					
ANR	985531	Argument	color >> 16		985509	0					
ANR	985532	ShiftExpression	color >> 16		985509	0		>>			
ANR	985533	Identifier	color		985509	0					
ANR	985534	PrimaryExpression	16		985509	1					
ANR	985535	ExpressionStatement	prgb [ 1 ] = gx_color_value_from_byte ( ( color >> 8 ) & 0xff )	1837:8:67555:67610	985509	1	True				
ANR	985536	AssignmentExpression	prgb [ 1 ] = gx_color_value_from_byte ( ( color >> 8 ) & 0xff )		985509	0		=			
ANR	985537	ArrayIndexing	prgb [ 1 ]		985509	0					
ANR	985538	Identifier	prgb		985509	0					
ANR	985539	PrimaryExpression	1		985509	1					
ANR	985540	CallExpression	gx_color_value_from_byte ( ( color >> 8 ) & 0xff )		985509	1					
ANR	985541	Callee	gx_color_value_from_byte		985509	0					
ANR	985542	Identifier	gx_color_value_from_byte		985509	0					
ANR	985543	ArgumentList	( color >> 8 ) & 0xff		985509	1					
ANR	985544	Argument	( color >> 8 ) & 0xff		985509	0					
ANR	985545	BitAndExpression	( color >> 8 ) & 0xff		985509	0		&			
ANR	985546	ShiftExpression	color >> 8		985509	0		>>			
ANR	985547	Identifier	color		985509	0					
ANR	985548	PrimaryExpression	8		985509	1					
ANR	985549	PrimaryExpression	0xff		985509	1					
ANR	985550	ExpressionStatement	prgb [ 2 ] = gx_color_value_from_byte ( color & 0xff )	1838:8:67620:67668	985509	2	True				
ANR	985551	AssignmentExpression	prgb [ 2 ] = gx_color_value_from_byte ( color & 0xff )		985509	0		=			
ANR	985552	ArrayIndexing	prgb [ 2 ]		985509	0					
ANR	985553	Identifier	prgb		985509	0					
ANR	985554	PrimaryExpression	2		985509	1					
ANR	985555	CallExpression	gx_color_value_from_byte ( color & 0xff )		985509	1					
ANR	985556	Callee	gx_color_value_from_byte		985509	0					
ANR	985557	Identifier	gx_color_value_from_byte		985509	0					
ANR	985558	ArgumentList	color & 0xff		985509	1					
ANR	985559	Argument	color & 0xff		985509	0					
ANR	985560	BitAndExpression	color & 0xff		985509	0		&			
ANR	985561	Identifier	color		985509	0					
ANR	985562	PrimaryExpression	0xff		985509	1					
ANR	985563	ElseStatement	else		985509	0					
ANR	985564	CompoundStatement		8:8:298:341	985509	0					
ANR	985565	IdentifierDeclStatement	uint bits_per_color = dev -> color_info . depth / 3 ;	1840:8:67691:67738	985509	0	True				
ANR	985566	IdentifierDecl	bits_per_color = dev -> color_info . depth / 3		985509	0					
ANR	985567	IdentifierDeclType	uint		985509	0					
ANR	985568	Identifier	bits_per_color		985509	1					
ANR	985569	AssignmentExpression	bits_per_color = dev -> color_info . depth / 3		985509	2		=			
ANR	985570	Identifier	bits_per_color		985509	0					
ANR	985571	MultiplicativeExpression	dev -> color_info . depth / 3		985509	1		/			
ANR	985572	MemberAccess	dev -> color_info . depth		985509	0					
ANR	985573	PtrMemberAccess	dev -> color_info		985509	0					
ANR	985574	Identifier	dev		985509	0					
ANR	985575	Identifier	color_info		985509	1					
ANR	985576	Identifier	depth		985509	1					
ANR	985577	PrimaryExpression	3		985509	1					
ANR	985578	IdentifierDeclStatement	uint color_mask = ( 1 << bits_per_color ) - 1 ;	1841:8:67748:67791	985509	1	True				
ANR	985579	IdentifierDecl	color_mask = ( 1 << bits_per_color ) - 1		985509	0					
ANR	985580	IdentifierDeclType	uint		985509	0					
ANR	985581	Identifier	color_mask		985509	1					
ANR	985582	AssignmentExpression	color_mask = ( 1 << bits_per_color ) - 1		985509	2		=			
ANR	985583	Identifier	color_mask		985509	0					
ANR	985584	AdditiveExpression	( 1 << bits_per_color ) - 1		985509	1		-			
ANR	985585	ShiftExpression	1 << bits_per_color		985509	0		<<			
ANR	985586	PrimaryExpression	1		985509	0					
ANR	985587	Identifier	bits_per_color		985509	1					
ANR	985588	PrimaryExpression	1		985509	1					
ANR	985589	ExpressionStatement	prgb [ 0 ] = ( ( color >> ( bits_per_color * 2 ) ) & color_mask ) * ( ulong ) gx_max_color_value / color_mask	1843:8:67802:67912	985509	2	True				
ANR	985590	AssignmentExpression	prgb [ 0 ] = ( ( color >> ( bits_per_color * 2 ) ) & color_mask ) * ( ulong ) gx_max_color_value / color_mask		985509	0		=			
ANR	985591	ArrayIndexing	prgb [ 0 ]		985509	0					
ANR	985592	Identifier	prgb		985509	0					
ANR	985593	PrimaryExpression	0		985509	1					
ANR	985594	MultiplicativeExpression	( ( color >> ( bits_per_color * 2 ) ) & color_mask ) * ( ulong ) gx_max_color_value / color_mask		985509	1		*			
ANR	985595	BitAndExpression	( color >> ( bits_per_color * 2 ) ) & color_mask		985509	0		&			
ANR	985596	ShiftExpression	color >> ( bits_per_color * 2 )		985509	0		>>			
ANR	985597	Identifier	color		985509	0					
ANR	985598	MultiplicativeExpression	bits_per_color * 2		985509	1		*			
ANR	985599	Identifier	bits_per_color		985509	0					
ANR	985600	PrimaryExpression	2		985509	1					
ANR	985601	Identifier	color_mask		985509	1					
ANR	985602	MultiplicativeExpression	( ulong ) gx_max_color_value / color_mask		985509	1		/			
ANR	985603	CastExpression	( ulong ) gx_max_color_value		985509	0					
ANR	985604	CastTarget	ulong		985509	0					
ANR	985605	Identifier	gx_max_color_value		985509	1					
ANR	985606	Identifier	color_mask		985509	1					
ANR	985607	ExpressionStatement	prgb [ 1 ] = ( ( color >> ( bits_per_color ) ) & color_mask ) * ( ulong ) gx_max_color_value / color_mask	1845:8:67922:68028	985509	3	True				
ANR	985608	AssignmentExpression	prgb [ 1 ] = ( ( color >> ( bits_per_color ) ) & color_mask ) * ( ulong ) gx_max_color_value / color_mask		985509	0		=			
ANR	985609	ArrayIndexing	prgb [ 1 ]		985509	0					
ANR	985610	Identifier	prgb		985509	0					
ANR	985611	PrimaryExpression	1		985509	1					
ANR	985612	MultiplicativeExpression	( ( color >> ( bits_per_color ) ) & color_mask ) * ( ulong ) gx_max_color_value / color_mask		985509	1		*			
ANR	985613	BitAndExpression	( color >> ( bits_per_color ) ) & color_mask		985509	0		&			
ANR	985614	ShiftExpression	color >> ( bits_per_color )		985509	0		>>			
ANR	985615	Identifier	color		985509	0					
ANR	985616	Identifier	bits_per_color		985509	1					
ANR	985617	Identifier	color_mask		985509	1					
ANR	985618	MultiplicativeExpression	( ulong ) gx_max_color_value / color_mask		985509	1		/			
ANR	985619	CastExpression	( ulong ) gx_max_color_value		985509	0					
ANR	985620	CastTarget	ulong		985509	0					
ANR	985621	Identifier	gx_max_color_value		985509	1					
ANR	985622	Identifier	color_mask		985509	1					
ANR	985623	ExpressionStatement	prgb [ 2 ] = ( color & color_mask ) * ( ulong ) gx_max_color_value / color_mask	1847:8:68038:68122	985509	4	True				
ANR	985624	AssignmentExpression	prgb [ 2 ] = ( color & color_mask ) * ( ulong ) gx_max_color_value / color_mask		985509	0		=			
ANR	985625	ArrayIndexing	prgb [ 2 ]		985509	0					
ANR	985626	Identifier	prgb		985509	0					
ANR	985627	PrimaryExpression	2		985509	1					
ANR	985628	MultiplicativeExpression	( color & color_mask ) * ( ulong ) gx_max_color_value / color_mask		985509	1		*			
ANR	985629	BitAndExpression	color & color_mask		985509	0		&			
ANR	985630	Identifier	color		985509	0					
ANR	985631	Identifier	color_mask		985509	1					
ANR	985632	MultiplicativeExpression	( ulong ) gx_max_color_value / color_mask		985509	1		/			
ANR	985633	CastExpression	( ulong ) gx_max_color_value		985509	0					
ANR	985634	CastTarget	ulong		985509	0					
ANR	985635	Identifier	gx_max_color_value		985509	1					
ANR	985636	Identifier	color_mask		985509	1					
ANR	985637	ReturnStatement	return 0 ;	1850:4:68134:68142	985509	1	True				
ANR	985638	PrimaryExpression	0		985509	0					
ANR	985639	ReturnType	int		985509	1					
ANR	985640	Identifier	gx_default_rgb_map_color_rgb		985509	2					
ANR	985641	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		985509	3					
ANR	985642	Parameter	gx_device * dev	1832:29:67357:67371	985509	0	True				
ANR	985643	ParameterType	gx_device *		985509	0					
ANR	985644	Identifier	dev		985509	1					
ANR	985645	Parameter	gx_color_index color	1832:46:67374:67393	985509	1	True				
ANR	985646	ParameterType	gx_color_index		985509	0					
ANR	985647	Identifier	color		985509	1					
ANR	985648	Parameter	gx_color_value prgb [ 3 ]	1833:29:67425:67446	985509	2	True				
ANR	985649	ParameterType	gx_color_value [ 3 ]		985509	0					
ANR	985650	Identifier	prgb		985509	1					
ANR	985651	CFGEntryNode	ENTRY		985509		True				
ANR	985652	CFGExitNode	EXIT		985509		True				
ANR	985653	Symbol	* dev		985509						
ANR	985654	Symbol	* prgb		985509						
ANR	985655	Symbol	color_mask		985509						
ANR	985656	Symbol	dev		985509						
ANR	985657	Symbol	color		985509						
ANR	985658	Symbol	gx_max_color_value		985509						
ANR	985659	Symbol	gx_color_value_from_byte		985509						
ANR	985660	Symbol	prgb		985509						
ANR	985661	Symbol	bits_per_color		985509						
ANR	985662	Symbol	dev -> color_info		985509						
ANR	985663	Symbol	dev -> color_info . depth		985509						
ANR	985664	Function	gx_default_map_cmyk_color	1855:0:68209:68657							
ANR	985665	FunctionDef	"gx_default_map_cmyk_color (gx_device * dev , const gx_color_value cv [ ])"		985664	0					
ANR	985666	CompoundStatement		1857:0:68294:68657	985664	0					
ANR	985667	IdentifierDeclStatement	frac rgb [ 3 ] ;	1858:4:68324:68335	985664	0	True				
ANR	985668	IdentifierDecl	rgb [ 3 ]		985664	0					
ANR	985669	IdentifierDeclType	frac [ 3 ]		985664	0					
ANR	985670	Identifier	rgb		985664	1					
ANR	985671	PrimaryExpression	3		985664	2					
ANR	985672	IdentifierDeclStatement	gx_color_value rgb_cv [ 3 ] ;	1859:4:68341:68365	985664	1	True				
ANR	985673	IdentifierDecl	rgb_cv [ 3 ]		985664	0					
ANR	985674	IdentifierDeclType	gx_color_value [ 3 ]		985664	0					
ANR	985675	Identifier	rgb_cv		985664	1					
ANR	985676	PrimaryExpression	3		985664	2					
ANR	985677	ExpressionStatement	"color_cmyk_to_rgb ( cv2frac ( cv [ 0 ] ) , cv2frac ( cv [ 1 ] ) , cv2frac ( cv [ 2 ] ) , cv2frac ( cv [ 3 ] ) , NULL , rgb , dev -> memory )"	1860:4:68371:68498	985664	2	True				
ANR	985678	CallExpression	"color_cmyk_to_rgb ( cv2frac ( cv [ 0 ] ) , cv2frac ( cv [ 1 ] ) , cv2frac ( cv [ 2 ] ) , cv2frac ( cv [ 3 ] ) , NULL , rgb , dev -> memory )"		985664	0					
ANR	985679	Callee	color_cmyk_to_rgb		985664	0					
ANR	985680	Identifier	color_cmyk_to_rgb		985664	0					
ANR	985681	ArgumentList	cv2frac ( cv [ 0 ] )		985664	1					
ANR	985682	Argument	cv2frac ( cv [ 0 ] )		985664	0					
ANR	985683	CallExpression	cv2frac ( cv [ 0 ] )		985664	0					
ANR	985684	Callee	cv2frac		985664	0					
ANR	985685	Identifier	cv2frac		985664	0					
ANR	985686	ArgumentList	cv [ 0 ]		985664	1					
ANR	985687	Argument	cv [ 0 ]		985664	0					
ANR	985688	ArrayIndexing	cv [ 0 ]		985664	0					
ANR	985689	Identifier	cv		985664	0					
ANR	985690	PrimaryExpression	0		985664	1					
ANR	985691	Argument	cv2frac ( cv [ 1 ] )		985664	1					
ANR	985692	CallExpression	cv2frac ( cv [ 1 ] )		985664	0					
ANR	985693	Callee	cv2frac		985664	0					
ANR	985694	Identifier	cv2frac		985664	0					
ANR	985695	ArgumentList	cv [ 1 ]		985664	1					
ANR	985696	Argument	cv [ 1 ]		985664	0					
ANR	985697	ArrayIndexing	cv [ 1 ]		985664	0					
ANR	985698	Identifier	cv		985664	0					
ANR	985699	PrimaryExpression	1		985664	1					
ANR	985700	Argument	cv2frac ( cv [ 2 ] )		985664	2					
ANR	985701	CallExpression	cv2frac ( cv [ 2 ] )		985664	0					
ANR	985702	Callee	cv2frac		985664	0					
ANR	985703	Identifier	cv2frac		985664	0					
ANR	985704	ArgumentList	cv [ 2 ]		985664	1					
ANR	985705	Argument	cv [ 2 ]		985664	0					
ANR	985706	ArrayIndexing	cv [ 2 ]		985664	0					
ANR	985707	Identifier	cv		985664	0					
ANR	985708	PrimaryExpression	2		985664	1					
ANR	985709	Argument	cv2frac ( cv [ 3 ] )		985664	3					
ANR	985710	CallExpression	cv2frac ( cv [ 3 ] )		985664	0					
ANR	985711	Callee	cv2frac		985664	0					
ANR	985712	Identifier	cv2frac		985664	0					
ANR	985713	ArgumentList	cv [ 3 ]		985664	1					
ANR	985714	Argument	cv [ 3 ]		985664	0					
ANR	985715	ArrayIndexing	cv [ 3 ]		985664	0					
ANR	985716	Identifier	cv		985664	0					
ANR	985717	PrimaryExpression	3		985664	1					
ANR	985718	Argument	NULL		985664	4					
ANR	985719	Identifier	NULL		985664	0					
ANR	985720	Argument	rgb		985664	5					
ANR	985721	Identifier	rgb		985664	0					
ANR	985722	Argument	dev -> memory		985664	6					
ANR	985723	PtrMemberAccess	dev -> memory		985664	0					
ANR	985724	Identifier	dev		985664	0					
ANR	985725	Identifier	memory		985664	1					
ANR	985726	ExpressionStatement	rgb_cv [ 0 ] = frac2cv ( rgb [ 0 ] )	1862:4:68504:68531	985664	3	True				
ANR	985727	AssignmentExpression	rgb_cv [ 0 ] = frac2cv ( rgb [ 0 ] )		985664	0		=			
ANR	985728	ArrayIndexing	rgb_cv [ 0 ]		985664	0					
ANR	985729	Identifier	rgb_cv		985664	0					
ANR	985730	PrimaryExpression	0		985664	1					
ANR	985731	CallExpression	frac2cv ( rgb [ 0 ] )		985664	1					
ANR	985732	Callee	frac2cv		985664	0					
ANR	985733	Identifier	frac2cv		985664	0					
ANR	985734	ArgumentList	rgb [ 0 ]		985664	1					
ANR	985735	Argument	rgb [ 0 ]		985664	0					
ANR	985736	ArrayIndexing	rgb [ 0 ]		985664	0					
ANR	985737	Identifier	rgb		985664	0					
ANR	985738	PrimaryExpression	0		985664	1					
ANR	985739	ExpressionStatement	rgb_cv [ 1 ] = frac2cv ( rgb [ 1 ] )	1863:4:68537:68564	985664	4	True				
ANR	985740	AssignmentExpression	rgb_cv [ 1 ] = frac2cv ( rgb [ 1 ] )		985664	0		=			
ANR	985741	ArrayIndexing	rgb_cv [ 1 ]		985664	0					
ANR	985742	Identifier	rgb_cv		985664	0					
ANR	985743	PrimaryExpression	1		985664	1					
ANR	985744	CallExpression	frac2cv ( rgb [ 1 ] )		985664	1					
ANR	985745	Callee	frac2cv		985664	0					
ANR	985746	Identifier	frac2cv		985664	0					
ANR	985747	ArgumentList	rgb [ 1 ]		985664	1					
ANR	985748	Argument	rgb [ 1 ]		985664	0					
ANR	985749	ArrayIndexing	rgb [ 1 ]		985664	0					
ANR	985750	Identifier	rgb		985664	0					
ANR	985751	PrimaryExpression	1		985664	1					
ANR	985752	ExpressionStatement	rgb_cv [ 2 ] = frac2cv ( rgb [ 2 ] )	1864:4:68570:68597	985664	5	True				
ANR	985753	AssignmentExpression	rgb_cv [ 2 ] = frac2cv ( rgb [ 2 ] )		985664	0		=			
ANR	985754	ArrayIndexing	rgb_cv [ 2 ]		985664	0					
ANR	985755	Identifier	rgb_cv		985664	0					
ANR	985756	PrimaryExpression	2		985664	1					
ANR	985757	CallExpression	frac2cv ( rgb [ 2 ] )		985664	1					
ANR	985758	Callee	frac2cv		985664	0					
ANR	985759	Identifier	frac2cv		985664	0					
ANR	985760	ArgumentList	rgb [ 2 ]		985664	1					
ANR	985761	Argument	rgb [ 2 ]		985664	0					
ANR	985762	ArrayIndexing	rgb [ 2 ]		985664	0					
ANR	985763	Identifier	rgb		985664	0					
ANR	985764	PrimaryExpression	2		985664	1					
ANR	985765	ReturnStatement	"return ( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb_cv ) ;"	1865:4:68603:68655	985664	6	True				
ANR	985766	CallExpression	"( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb_cv )"		985664	0					
ANR	985767	Callee	"* dev_proc ( dev , map_rgb_color )"		985664	0					
ANR	985768	UnaryOperationExpression	"* dev_proc ( dev , map_rgb_color )"		985664	0					
ANR	985769	UnaryOperator	*		985664	0					
ANR	985770	CallExpression	"dev_proc ( dev , map_rgb_color )"		985664	1					
ANR	985771	Callee	dev_proc		985664	0					
ANR	985772	Identifier	dev_proc		985664	0					
ANR	985773	ArgumentList	dev		985664	1					
ANR	985774	Argument	dev		985664	0					
ANR	985775	Identifier	dev		985664	0					
ANR	985776	Argument	map_rgb_color		985664	1					
ANR	985777	Identifier	map_rgb_color		985664	0					
ANR	985778	ArgumentList	dev		985664	1					
ANR	985779	Argument	dev		985664	0					
ANR	985780	Identifier	dev		985664	0					
ANR	985781	Argument	rgb_cv		985664	1					
ANR	985782	Identifier	rgb_cv		985664	0					
ANR	985783	ReturnType	gx_color_index		985664	1					
ANR	985784	Identifier	gx_default_map_cmyk_color		985664	2					
ANR	985785	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		985664	3					
ANR	985786	Parameter	gx_device * dev	1856:26:68250:68264	985664	0	True				
ANR	985787	ParameterType	gx_device *		985664	0					
ANR	985788	Identifier	dev		985664	1					
ANR	985789	Parameter	const gx_color_value cv [ ]	1856:43:68267:68291	985664	1	True				
ANR	985790	ParameterType	const gx_color_value [ ]		985664	0					
ANR	985791	Identifier	cv		985664	1					
ANR	985792	CFGEntryNode	ENTRY		985664		True				
ANR	985793	CFGExitNode	EXIT		985664		True				
ANR	985794	Symbol	* dev		985664						
ANR	985795	Symbol	* rgb_cv		985664						
ANR	985796	Symbol	NULL		985664						
ANR	985797	Symbol	rgb_cv		985664						
ANR	985798	Symbol	* dev_proc		985664						
ANR	985799	Symbol	rgb		985664						
ANR	985800	Symbol	"* dev_proc ( dev , map_rgb_color )"		985664						
ANR	985801	Symbol	map_rgb_color		985664						
ANR	985802	Symbol	dev -> memory		985664						
ANR	985803	Symbol	cv		985664						
ANR	985804	Symbol	dev		985664						
ANR	985805	Symbol	dev_proc		985664						
ANR	985806	Symbol	* rgb		985664						
ANR	985807	Symbol	cv2frac		985664						
ANR	985808	Symbol	* cv		985664						
ANR	985809	Symbol	frac2cv		985664						
ANR	985810	Function	cmyk_1bit_map_cmyk_color	1870:0:68692:68967							
ANR	985811	FunctionDef	"cmyk_1bit_map_cmyk_color (gx_device * dev , const gx_color_value cv [ ])"		985810	0					
ANR	985812	CompoundStatement		1872:0:68776:68967	985810	0					
ANR	985813	Statement	define	1873:1:68779:68784	985810	0	True				
ANR	985814	Statement	CV_BIT	1873:8:68786:68791	985810	1	True				
ANR	985815	Statement	(	1873:14:68792:68792	985810	2	True				
ANR	985816	Statement	v	1873:15:68793:68793	985810	3	True				
ANR	985817	Statement	)	1873:16:68794:68794	985810	4	True				
ANR	985818	Statement	(	1873:18:68796:68796	985810	5	True				
ANR	985819	Statement	(	1873:19:68797:68797	985810	6	True				
ANR	985820	Statement	v	1873:20:68798:68798	985810	7	True				
ANR	985821	Statement	)	1873:21:68799:68799	985810	8	True				
ANR	985822	Statement	>>	1873:23:68801:68802	985810	9	True				
ANR	985823	Statement	(	1873:26:68804:68804	985810	10	True				
ANR	985824	Statement	gx_color_value_bits	1873:27:68805:68823	985810	11	True				
ANR	985825	Statement	-	1873:47:68825:68825	985810	12	True				
ANR	985826	Statement	1	1873:49:68827:68827	985810	13	True				
ANR	985827	Statement	)	1873:50:68828:68828	985810	14	True				
ANR	985828	Statement	)	1873:51:68829:68829	985810	15	True				
ANR	985829	ReturnStatement	return ( gx_color_index ) ( CV_BIT ( cv [ 3 ] ) + ( CV_BIT ( cv [ 2 ] ) << 1 ) + ( CV_BIT ( cv [ 1 ] ) << 2 ) + ( CV_BIT ( cv [ 0 ] ) << 3 ) ) ;	1874:4:68835:68951	985810	16	True				
ANR	985830	CastExpression	( gx_color_index ) ( CV_BIT ( cv [ 3 ] ) + ( CV_BIT ( cv [ 2 ] ) << 1 ) + ( CV_BIT ( cv [ 1 ] ) << 2 ) + ( CV_BIT ( cv [ 0 ] ) << 3 ) )		985810	0					
ANR	985831	CastTarget	gx_color_index		985810	0					
ANR	985832	AdditiveExpression	CV_BIT ( cv [ 3 ] ) + ( CV_BIT ( cv [ 2 ] ) << 1 ) + ( CV_BIT ( cv [ 1 ] ) << 2 ) + ( CV_BIT ( cv [ 0 ] ) << 3 )		985810	1		+			
ANR	985833	CallExpression	CV_BIT ( cv [ 3 ] )		985810	0					
ANR	985834	Callee	CV_BIT		985810	0					
ANR	985835	Identifier	CV_BIT		985810	0					
ANR	985836	ArgumentList	cv [ 3 ]		985810	1					
ANR	985837	Argument	cv [ 3 ]		985810	0					
ANR	985838	ArrayIndexing	cv [ 3 ]		985810	0					
ANR	985839	Identifier	cv		985810	0					
ANR	985840	PrimaryExpression	3		985810	1					
ANR	985841	AdditiveExpression	( CV_BIT ( cv [ 2 ] ) << 1 ) + ( CV_BIT ( cv [ 1 ] ) << 2 ) + ( CV_BIT ( cv [ 0 ] ) << 3 )		985810	1		+			
ANR	985842	ShiftExpression	CV_BIT ( cv [ 2 ] ) << 1		985810	0		<<			
ANR	985843	CallExpression	CV_BIT ( cv [ 2 ] )		985810	0					
ANR	985844	Callee	CV_BIT		985810	0					
ANR	985845	Identifier	CV_BIT		985810	0					
ANR	985846	ArgumentList	cv [ 2 ]		985810	1					
ANR	985847	Argument	cv [ 2 ]		985810	0					
ANR	985848	ArrayIndexing	cv [ 2 ]		985810	0					
ANR	985849	Identifier	cv		985810	0					
ANR	985850	PrimaryExpression	2		985810	1					
ANR	985851	PrimaryExpression	1		985810	1					
ANR	985852	AdditiveExpression	( CV_BIT ( cv [ 1 ] ) << 2 ) + ( CV_BIT ( cv [ 0 ] ) << 3 )		985810	1		+			
ANR	985853	ShiftExpression	CV_BIT ( cv [ 1 ] ) << 2		985810	0		<<			
ANR	985854	CallExpression	CV_BIT ( cv [ 1 ] )		985810	0					
ANR	985855	Callee	CV_BIT		985810	0					
ANR	985856	Identifier	CV_BIT		985810	0					
ANR	985857	ArgumentList	cv [ 1 ]		985810	1					
ANR	985858	Argument	cv [ 1 ]		985810	0					
ANR	985859	ArrayIndexing	cv [ 1 ]		985810	0					
ANR	985860	Identifier	cv		985810	0					
ANR	985861	PrimaryExpression	1		985810	1					
ANR	985862	PrimaryExpression	2		985810	1					
ANR	985863	ShiftExpression	CV_BIT ( cv [ 0 ] ) << 3		985810	1		<<			
ANR	985864	CallExpression	CV_BIT ( cv [ 0 ] )		985810	0					
ANR	985865	Callee	CV_BIT		985810	0					
ANR	985866	Identifier	CV_BIT		985810	0					
ANR	985867	ArgumentList	cv [ 0 ]		985810	1					
ANR	985868	Argument	cv [ 0 ]		985810	0					
ANR	985869	ArrayIndexing	cv [ 0 ]		985810	0					
ANR	985870	Identifier	cv		985810	0					
ANR	985871	PrimaryExpression	0		985810	1					
ANR	985872	PrimaryExpression	3		985810	1					
ANR	985873	Statement	undef	1876:1:68954:68958	985810	17	True				
ANR	985874	Statement	CV_BIT	1876:7:68960:68965	985810	18	True				
ANR	985875	ReturnType	gx_color_index		985810	1					
ANR	985876	Identifier	cmyk_1bit_map_cmyk_color		985810	2					
ANR	985877	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		985810	3					
ANR	985878	Parameter	gx_device * dev	1871:25:68732:68746	985810	0	True				
ANR	985879	ParameterType	gx_device *		985810	0					
ANR	985880	Identifier	dev		985810	1					
ANR	985881	Parameter	const gx_color_value cv [ ]	1871:42:68749:68773	985810	1	True				
ANR	985882	ParameterType	const gx_color_value [ ]		985810	0					
ANR	985883	Identifier	cv		985810	1					
ANR	985884	CFGEntryNode	ENTRY		985810		True				
ANR	985885	CFGExitNode	EXIT		985810		True				
ANR	985886	Symbol	cv		985810						
ANR	985887	Symbol	dev		985810						
ANR	985888	Symbol	* cv		985810						
ANR	985889	Symbol	CV_BIT		985810						
ANR	985890	Function	cmyk_1bit_map_color_rgb	1880:0:69045:69421							
ANR	985891	FunctionDef	"cmyk_1bit_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		985890	0					
ANR	985892	CompoundStatement		1883:0:69160:69421	985890	0					
ANR	985893	IfStatement	if ( color & 1 )		985890	0					
ANR	985894	Condition	color & 1	1884:8:69170:69178	985890	0	True				
ANR	985895	BitAndExpression	color & 1		985890	0		&			
ANR	985896	Identifier	color		985890	0					
ANR	985897	PrimaryExpression	1		985890	1					
ANR	985898	ExpressionStatement	prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = 0	1885:8:69189:69220	985890	1	True				
ANR	985899	AssignmentExpression	prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = 0		985890	0		=			
ANR	985900	ArrayIndexing	prgb [ 0 ]		985890	0					
ANR	985901	Identifier	prgb		985890	0					
ANR	985902	PrimaryExpression	0		985890	1					
ANR	985903	AssignmentExpression	prgb [ 1 ] = prgb [ 2 ] = 0		985890	1		=			
ANR	985904	ArrayIndexing	prgb [ 1 ]		985890	0					
ANR	985905	Identifier	prgb		985890	0					
ANR	985906	PrimaryExpression	1		985890	1					
ANR	985907	AssignmentExpression	prgb [ 2 ] = 0		985890	1		=			
ANR	985908	ArrayIndexing	prgb [ 2 ]		985890	0					
ANR	985909	Identifier	prgb		985890	0					
ANR	985910	PrimaryExpression	2		985890	1					
ANR	985911	PrimaryExpression	0		985890	1					
ANR	985912	ElseStatement	else		985890	0					
ANR	985913	CompoundStatement		4:9:70:70	985890	0					
ANR	985914	ExpressionStatement	prgb [ 0 ] = ( color & 8 ? 0 : gx_max_color_value )	1887:8:69241:69287	985890	0	True				
ANR	985915	AssignmentExpression	prgb [ 0 ] = ( color & 8 ? 0 : gx_max_color_value )		985890	0		=			
ANR	985916	ArrayIndexing	prgb [ 0 ]		985890	0					
ANR	985917	Identifier	prgb		985890	0					
ANR	985918	PrimaryExpression	0		985890	1					
ANR	985919	ConditionalExpression	color & 8 ? 0 : gx_max_color_value		985890	1					
ANR	985920	Condition	color & 8		985890	0					
ANR	985921	BitAndExpression	color & 8		985890	0		&			
ANR	985922	Identifier	color		985890	0					
ANR	985923	PrimaryExpression	8		985890	1					
ANR	985924	PrimaryExpression	0		985890	1					
ANR	985925	Identifier	gx_max_color_value		985890	2					
ANR	985926	ExpressionStatement	prgb [ 1 ] = ( color & 4 ? 0 : gx_max_color_value )	1888:8:69297:69343	985890	1	True				
ANR	985927	AssignmentExpression	prgb [ 1 ] = ( color & 4 ? 0 : gx_max_color_value )		985890	0		=			
ANR	985928	ArrayIndexing	prgb [ 1 ]		985890	0					
ANR	985929	Identifier	prgb		985890	0					
ANR	985930	PrimaryExpression	1		985890	1					
ANR	985931	ConditionalExpression	color & 4 ? 0 : gx_max_color_value		985890	1					
ANR	985932	Condition	color & 4		985890	0					
ANR	985933	BitAndExpression	color & 4		985890	0		&			
ANR	985934	Identifier	color		985890	0					
ANR	985935	PrimaryExpression	4		985890	1					
ANR	985936	PrimaryExpression	0		985890	1					
ANR	985937	Identifier	gx_max_color_value		985890	2					
ANR	985938	ExpressionStatement	prgb [ 2 ] = ( color & 2 ? 0 : gx_max_color_value )	1889:8:69353:69399	985890	2	True				
ANR	985939	AssignmentExpression	prgb [ 2 ] = ( color & 2 ? 0 : gx_max_color_value )		985890	0		=			
ANR	985940	ArrayIndexing	prgb [ 2 ]		985890	0					
ANR	985941	Identifier	prgb		985890	0					
ANR	985942	PrimaryExpression	2		985890	1					
ANR	985943	ConditionalExpression	color & 2 ? 0 : gx_max_color_value		985890	1					
ANR	985944	Condition	color & 2		985890	0					
ANR	985945	BitAndExpression	color & 2		985890	0		&			
ANR	985946	Identifier	color		985890	0					
ANR	985947	PrimaryExpression	2		985890	1					
ANR	985948	PrimaryExpression	0		985890	1					
ANR	985949	Identifier	gx_max_color_value		985890	2					
ANR	985950	ReturnStatement	return 0 ;	1891:4:69411:69419	985890	1	True				
ANR	985951	PrimaryExpression	0		985890	0					
ANR	985952	ReturnType	int		985890	1					
ANR	985953	Identifier	cmyk_1bit_map_color_rgb		985890	2					
ANR	985954	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		985890	3					
ANR	985955	Parameter	gx_device * dev	1881:24:69073:69087	985890	0	True				
ANR	985956	ParameterType	gx_device *		985890	0					
ANR	985957	Identifier	dev		985890	1					
ANR	985958	Parameter	gx_color_index color	1881:41:69090:69109	985890	1	True				
ANR	985959	ParameterType	gx_color_index		985890	0					
ANR	985960	Identifier	color		985890	1					
ANR	985961	Parameter	gx_color_value prgb [ 3 ]	1882:24:69136:69157	985890	2	True				
ANR	985962	ParameterType	gx_color_value [ 3 ]		985890	0					
ANR	985963	Identifier	prgb		985890	1					
ANR	985964	CFGEntryNode	ENTRY		985890		True				
ANR	985965	CFGExitNode	EXIT		985890		True				
ANR	985966	Symbol	* prgb		985890						
ANR	985967	Symbol	dev		985890						
ANR	985968	Symbol	color		985890						
ANR	985969	Symbol	gx_max_color_value		985890						
ANR	985970	Symbol	prgb		985890						
ANR	985971	Function	cmyk_1bit_map_color_cmyk	1894:0:69424:69759							
ANR	985972	FunctionDef	"cmyk_1bit_map_color_cmyk (gx_device * dev , gx_color_index color , gx_color_value pcv [ 4 ])"		985971	0					
ANR	985973	CompoundStatement		1897:0:69539:69759	985971	0					
ANR	985974	ExpressionStatement	pcv [ 0 ] = ( color & 8 ? 0 : gx_max_color_value )	1898:4:69545:69590	985971	0	True				
ANR	985975	AssignmentExpression	pcv [ 0 ] = ( color & 8 ? 0 : gx_max_color_value )		985971	0		=			
ANR	985976	ArrayIndexing	pcv [ 0 ]		985971	0					
ANR	985977	Identifier	pcv		985971	0					
ANR	985978	PrimaryExpression	0		985971	1					
ANR	985979	ConditionalExpression	color & 8 ? 0 : gx_max_color_value		985971	1					
ANR	985980	Condition	color & 8		985971	0					
ANR	985981	BitAndExpression	color & 8		985971	0		&			
ANR	985982	Identifier	color		985971	0					
ANR	985983	PrimaryExpression	8		985971	1					
ANR	985984	PrimaryExpression	0		985971	1					
ANR	985985	Identifier	gx_max_color_value		985971	2					
ANR	985986	ExpressionStatement	pcv [ 1 ] = ( color & 4 ? 0 : gx_max_color_value )	1899:4:69596:69641	985971	1	True				
ANR	985987	AssignmentExpression	pcv [ 1 ] = ( color & 4 ? 0 : gx_max_color_value )		985971	0		=			
ANR	985988	ArrayIndexing	pcv [ 1 ]		985971	0					
ANR	985989	Identifier	pcv		985971	0					
ANR	985990	PrimaryExpression	1		985971	1					
ANR	985991	ConditionalExpression	color & 4 ? 0 : gx_max_color_value		985971	1					
ANR	985992	Condition	color & 4		985971	0					
ANR	985993	BitAndExpression	color & 4		985971	0		&			
ANR	985994	Identifier	color		985971	0					
ANR	985995	PrimaryExpression	4		985971	1					
ANR	985996	PrimaryExpression	0		985971	1					
ANR	985997	Identifier	gx_max_color_value		985971	2					
ANR	985998	ExpressionStatement	pcv [ 2 ] = ( color & 2 ? 0 : gx_max_color_value )	1900:4:69647:69692	985971	2	True				
ANR	985999	AssignmentExpression	pcv [ 2 ] = ( color & 2 ? 0 : gx_max_color_value )		985971	0		=			
ANR	986000	ArrayIndexing	pcv [ 2 ]		985971	0					
ANR	986001	Identifier	pcv		985971	0					
ANR	986002	PrimaryExpression	2		985971	1					
ANR	986003	ConditionalExpression	color & 2 ? 0 : gx_max_color_value		985971	1					
ANR	986004	Condition	color & 2		985971	0					
ANR	986005	BitAndExpression	color & 2		985971	0		&			
ANR	986006	Identifier	color		985971	0					
ANR	986007	PrimaryExpression	2		985971	1					
ANR	986008	PrimaryExpression	0		985971	1					
ANR	986009	Identifier	gx_max_color_value		985971	2					
ANR	986010	ExpressionStatement	pcv [ 3 ] = ( color & 1 ? 0 : gx_max_color_value )	1901:4:69698:69743	985971	3	True				
ANR	986011	AssignmentExpression	pcv [ 3 ] = ( color & 1 ? 0 : gx_max_color_value )		985971	0		=			
ANR	986012	ArrayIndexing	pcv [ 3 ]		985971	0					
ANR	986013	Identifier	pcv		985971	0					
ANR	986014	PrimaryExpression	3		985971	1					
ANR	986015	ConditionalExpression	color & 1 ? 0 : gx_max_color_value		985971	1					
ANR	986016	Condition	color & 1		985971	0					
ANR	986017	BitAndExpression	color & 1		985971	0		&			
ANR	986018	Identifier	color		985971	0					
ANR	986019	PrimaryExpression	1		985971	1					
ANR	986020	PrimaryExpression	0		985971	1					
ANR	986021	Identifier	gx_max_color_value		985971	2					
ANR	986022	ReturnStatement	return 0 ;	1902:4:69749:69757	985971	4	True				
ANR	986023	PrimaryExpression	0		985971	0					
ANR	986024	ReturnType	int		985971	1					
ANR	986025	Identifier	cmyk_1bit_map_color_cmyk		985971	2					
ANR	986026	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value pcv [ 4 ]"		985971	3					
ANR	986027	Parameter	gx_device * dev	1895:25:69453:69467	985971	0	True				
ANR	986028	ParameterType	gx_device *		985971	0					
ANR	986029	Identifier	dev		985971	1					
ANR	986030	Parameter	gx_color_index color	1895:42:69470:69489	985971	1	True				
ANR	986031	ParameterType	gx_color_index		985971	0					
ANR	986032	Identifier	color		985971	1					
ANR	986033	Parameter	gx_color_value pcv [ 4 ]	1896:24:69516:69536	985971	2	True				
ANR	986034	ParameterType	gx_color_value [ 4 ]		985971	0					
ANR	986035	Identifier	pcv		985971	1					
ANR	986036	CFGEntryNode	ENTRY		985971		True				
ANR	986037	CFGExitNode	EXIT		985971		True				
ANR	986038	Symbol	pcv		985971						
ANR	986039	Symbol	dev		985971						
ANR	986040	Symbol	color		985971						
ANR	986041	Symbol	gx_max_color_value		985971						
ANR	986042	Symbol	* pcv		985971						
ANR	986043	Function	cmyk_8bit_map_cmyk_color	1905:0:69762:70137							
ANR	986044	FunctionDef	"cmyk_8bit_map_cmyk_color (gx_device * dev , const gx_color_value cv [ ])"		986043	0					
ANR	986045	CompoundStatement		1907:0:69846:70137	986043	0					
ANR	986046	IdentifierDeclStatement	gx_color_index color = gx_color_value_to_byte ( cv [ 3 ] ) + ( ( uint ) gx_color_value_to_byte ( cv [ 2 ] ) << 8 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24 ) ;	1908:4:69852:70073	986043	0	True				
ANR	986047	IdentifierDecl	color = gx_color_value_to_byte ( cv [ 3 ] ) + ( ( uint ) gx_color_value_to_byte ( cv [ 2 ] ) << 8 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24 )		986043	0					
ANR	986048	IdentifierDeclType	gx_color_index		986043	0					
ANR	986049	Identifier	color		986043	1					
ANR	986050	AssignmentExpression	color = gx_color_value_to_byte ( cv [ 3 ] ) + ( ( uint ) gx_color_value_to_byte ( cv [ 2 ] ) << 8 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24 )		986043	2		=			
ANR	986051	Identifier	color		986043	0					
ANR	986052	AdditiveExpression	gx_color_value_to_byte ( cv [ 3 ] ) + ( ( uint ) gx_color_value_to_byte ( cv [ 2 ] ) << 8 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24 )		986043	1		+			
ANR	986053	CallExpression	gx_color_value_to_byte ( cv [ 3 ] )		986043	0					
ANR	986054	Callee	gx_color_value_to_byte		986043	0					
ANR	986055	Identifier	gx_color_value_to_byte		986043	0					
ANR	986056	ArgumentList	cv [ 3 ]		986043	1					
ANR	986057	Argument	cv [ 3 ]		986043	0					
ANR	986058	ArrayIndexing	cv [ 3 ]		986043	0					
ANR	986059	Identifier	cv		986043	0					
ANR	986060	PrimaryExpression	3		986043	1					
ANR	986061	AdditiveExpression	( ( uint ) gx_color_value_to_byte ( cv [ 2 ] ) << 8 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24 )		986043	1		+			
ANR	986062	ShiftExpression	( uint ) gx_color_value_to_byte ( cv [ 2 ] ) << 8		986043	0		<<			
ANR	986063	CastExpression	( uint ) gx_color_value_to_byte ( cv [ 2 ] )		986043	0					
ANR	986064	CastTarget	uint		986043	0					
ANR	986065	CallExpression	gx_color_value_to_byte ( cv [ 2 ] )		986043	1					
ANR	986066	Callee	gx_color_value_to_byte		986043	0					
ANR	986067	Identifier	gx_color_value_to_byte		986043	0					
ANR	986068	ArgumentList	cv [ 2 ]		986043	1					
ANR	986069	Argument	cv [ 2 ]		986043	0					
ANR	986070	ArrayIndexing	cv [ 2 ]		986043	0					
ANR	986071	Identifier	cv		986043	0					
ANR	986072	PrimaryExpression	2		986043	1					
ANR	986073	PrimaryExpression	8		986043	1					
ANR	986074	AdditiveExpression	( ( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16 ) + ( ( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24 )		986043	1		+			
ANR	986075	ShiftExpression	( uint ) gx_color_value_to_byte ( cv [ 1 ] ) << 16		986043	0		<<			
ANR	986076	CastExpression	( uint ) gx_color_value_to_byte ( cv [ 1 ] )		986043	0					
ANR	986077	CastTarget	uint		986043	0					
ANR	986078	CallExpression	gx_color_value_to_byte ( cv [ 1 ] )		986043	1					
ANR	986079	Callee	gx_color_value_to_byte		986043	0					
ANR	986080	Identifier	gx_color_value_to_byte		986043	0					
ANR	986081	ArgumentList	cv [ 1 ]		986043	1					
ANR	986082	Argument	cv [ 1 ]		986043	0					
ANR	986083	ArrayIndexing	cv [ 1 ]		986043	0					
ANR	986084	Identifier	cv		986043	0					
ANR	986085	PrimaryExpression	1		986043	1					
ANR	986086	PrimaryExpression	16		986043	1					
ANR	986087	ShiftExpression	( uint ) gx_color_value_to_byte ( cv [ 0 ] ) << 24		986043	1		<<			
ANR	986088	CastExpression	( uint ) gx_color_value_to_byte ( cv [ 0 ] )		986043	0					
ANR	986089	CastTarget	uint		986043	0					
ANR	986090	CallExpression	gx_color_value_to_byte ( cv [ 0 ] )		986043	1					
ANR	986091	Callee	gx_color_value_to_byte		986043	0					
ANR	986092	Identifier	gx_color_value_to_byte		986043	0					
ANR	986093	ArgumentList	cv [ 0 ]		986043	1					
ANR	986094	Argument	cv [ 0 ]		986043	0					
ANR	986095	ArrayIndexing	cv [ 0 ]		986043	0					
ANR	986096	Identifier	cv		986043	0					
ANR	986097	PrimaryExpression	0		986043	1					
ANR	986098	PrimaryExpression	24		986043	1					
ANR	986099	ReturnStatement	return ( color == gx_no_color_index ? color ^ 1 : color ) ;	1914:4:70080:70135	986043	1	True				
ANR	986100	ConditionalExpression	color == gx_no_color_index ? color ^ 1 : color		986043	0					
ANR	986101	Condition	color == gx_no_color_index		986043	0					
ANR	986102	EqualityExpression	color == gx_no_color_index		986043	0		==			
ANR	986103	Identifier	color		986043	0					
ANR	986104	Identifier	gx_no_color_index		986043	1					
ANR	986105	ExclusiveOrExpression	color ^ 1		986043	1		^			
ANR	986106	Identifier	color		986043	0					
ANR	986107	PrimaryExpression	1		986043	1					
ANR	986108	Identifier	color		986043	2					
ANR	986109	ReturnType	gx_color_index		986043	1					
ANR	986110	Identifier	cmyk_8bit_map_cmyk_color		986043	2					
ANR	986111	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		986043	3					
ANR	986112	Parameter	gx_device * dev	1906:25:69802:69816	986043	0	True				
ANR	986113	ParameterType	gx_device *		986043	0					
ANR	986114	Identifier	dev		986043	1					
ANR	986115	Parameter	const gx_color_value cv [ ]	1906:42:69819:69843	986043	1	True				
ANR	986116	ParameterType	const gx_color_value [ ]		986043	0					
ANR	986117	Identifier	cv		986043	1					
ANR	986118	CFGEntryNode	ENTRY		986043		True				
ANR	986119	CFGExitNode	EXIT		986043		True				
ANR	986120	Symbol	gx_color_value_to_byte		986043						
ANR	986121	Symbol	cv		986043						
ANR	986122	Symbol	gx_no_color_index		986043						
ANR	986123	Symbol	dev		986043						
ANR	986124	Symbol	color		986043						
ANR	986125	Symbol	* cv		986043						
ANR	986126	Function	cmyk_16bit_map_cmyk_color	1917:0:70140:70443							
ANR	986127	FunctionDef	"cmyk_16bit_map_cmyk_color (gx_device * dev , const gx_color_value cv [ ])"		986126	0					
ANR	986128	CompoundStatement		1919:0:70225:70443	986126	0					
ANR	986129	IdentifierDeclStatement	gx_color_index color = ( uint64_t ) cv [ 3 ] + ( ( uint64_t ) cv [ 2 ] << 16 ) + ( ( uint64_t ) cv [ 1 ] << 32 ) + ( ( uint64_t ) cv [ 0 ] << 48 ) ;	1920:4:70231:70379	986126	0	True				
ANR	986130	IdentifierDecl	color = ( uint64_t ) cv [ 3 ] + ( ( uint64_t ) cv [ 2 ] << 16 ) + ( ( uint64_t ) cv [ 1 ] << 32 ) + ( ( uint64_t ) cv [ 0 ] << 48 )		986126	0					
ANR	986131	IdentifierDeclType	gx_color_index		986126	0					
ANR	986132	Identifier	color		986126	1					
ANR	986133	AssignmentExpression	color = ( uint64_t ) cv [ 3 ] + ( ( uint64_t ) cv [ 2 ] << 16 ) + ( ( uint64_t ) cv [ 1 ] << 32 ) + ( ( uint64_t ) cv [ 0 ] << 48 )		986126	2		=			
ANR	986134	Identifier	color		986126	0					
ANR	986135	AdditiveExpression	( uint64_t ) cv [ 3 ] + ( ( uint64_t ) cv [ 2 ] << 16 ) + ( ( uint64_t ) cv [ 1 ] << 32 ) + ( ( uint64_t ) cv [ 0 ] << 48 )		986126	1		+			
ANR	986136	CastExpression	( uint64_t ) cv [ 3 ]		986126	0					
ANR	986137	CastTarget	uint64_t		986126	0					
ANR	986138	ArrayIndexing	cv [ 3 ]		986126	1					
ANR	986139	Identifier	cv		986126	0					
ANR	986140	PrimaryExpression	3		986126	1					
ANR	986141	AdditiveExpression	( ( uint64_t ) cv [ 2 ] << 16 ) + ( ( uint64_t ) cv [ 1 ] << 32 ) + ( ( uint64_t ) cv [ 0 ] << 48 )		986126	1		+			
ANR	986142	ShiftExpression	( uint64_t ) cv [ 2 ] << 16		986126	0		<<			
ANR	986143	CastExpression	( uint64_t ) cv [ 2 ]		986126	0					
ANR	986144	CastTarget	uint64_t		986126	0					
ANR	986145	ArrayIndexing	cv [ 2 ]		986126	1					
ANR	986146	Identifier	cv		986126	0					
ANR	986147	PrimaryExpression	2		986126	1					
ANR	986148	PrimaryExpression	16		986126	1					
ANR	986149	AdditiveExpression	( ( uint64_t ) cv [ 1 ] << 32 ) + ( ( uint64_t ) cv [ 0 ] << 48 )		986126	1		+			
ANR	986150	ShiftExpression	( uint64_t ) cv [ 1 ] << 32		986126	0		<<			
ANR	986151	CastExpression	( uint64_t ) cv [ 1 ]		986126	0					
ANR	986152	CastTarget	uint64_t		986126	0					
ANR	986153	ArrayIndexing	cv [ 1 ]		986126	1					
ANR	986154	Identifier	cv		986126	0					
ANR	986155	PrimaryExpression	1		986126	1					
ANR	986156	PrimaryExpression	32		986126	1					
ANR	986157	ShiftExpression	( uint64_t ) cv [ 0 ] << 48		986126	1		<<			
ANR	986158	CastExpression	( uint64_t ) cv [ 0 ]		986126	0					
ANR	986159	CastTarget	uint64_t		986126	0					
ANR	986160	ArrayIndexing	cv [ 0 ]		986126	1					
ANR	986161	Identifier	cv		986126	0					
ANR	986162	PrimaryExpression	0		986126	1					
ANR	986163	PrimaryExpression	48		986126	1					
ANR	986164	ReturnStatement	return ( color == gx_no_color_index ? color ^ 1 : color ) ;	1926:4:70386:70441	986126	1	True				
ANR	986165	ConditionalExpression	color == gx_no_color_index ? color ^ 1 : color		986126	0					
ANR	986166	Condition	color == gx_no_color_index		986126	0					
ANR	986167	EqualityExpression	color == gx_no_color_index		986126	0		==			
ANR	986168	Identifier	color		986126	0					
ANR	986169	Identifier	gx_no_color_index		986126	1					
ANR	986170	ExclusiveOrExpression	color ^ 1		986126	1		^			
ANR	986171	Identifier	color		986126	0					
ANR	986172	PrimaryExpression	1		986126	1					
ANR	986173	Identifier	color		986126	2					
ANR	986174	ReturnType	gx_color_index		986126	1					
ANR	986175	Identifier	cmyk_16bit_map_cmyk_color		986126	2					
ANR	986176	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		986126	3					
ANR	986177	Parameter	gx_device * dev	1918:26:70181:70195	986126	0	True				
ANR	986178	ParameterType	gx_device *		986126	0					
ANR	986179	Identifier	dev		986126	1					
ANR	986180	Parameter	const gx_color_value cv [ ]	1918:43:70198:70222	986126	1	True				
ANR	986181	ParameterType	const gx_color_value [ ]		986126	0					
ANR	986182	Identifier	cv		986126	1					
ANR	986183	CFGEntryNode	ENTRY		986126		True				
ANR	986184	CFGExitNode	EXIT		986126		True				
ANR	986185	Symbol	cv		986126						
ANR	986186	Symbol	gx_no_color_index		986126						
ANR	986187	Symbol	dev		986126						
ANR	986188	Symbol	color		986126						
ANR	986189	Symbol	* cv		986126						
ANR	986190	Function	cmyk_8bit_map_color_rgb	1930:0:70521:71011							
ANR	986191	FunctionDef	"cmyk_8bit_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		986190	0					
ANR	986192	CompoundStatement		1933:0:70636:71011	986190	0					
ANR	986193	IdentifierDeclStatement	"int not_k = ( int ) ( ~color & 0xff ) , r = not_k - ( int ) ( color >> 24 ) , g = not_k - ( int ) ( ( color >> 16 ) & 0xff ) , b = not_k - ( int ) ( ( color >> 8 ) & 0xff ) ;"	1934:4:70642:70823	986190	0	True				
ANR	986194	IdentifierDecl	not_k = ( int ) ( ~color & 0xff )		986190	0					
ANR	986195	IdentifierDeclType	int		986190	0					
ANR	986196	Identifier	not_k		986190	1					
ANR	986197	AssignmentExpression	not_k = ( int ) ( ~color & 0xff )		986190	2		=			
ANR	986198	Identifier	not_k		986190	0					
ANR	986199	CastExpression	( int ) ( ~color & 0xff )		986190	1					
ANR	986200	CastTarget	int		986190	0					
ANR	986201	BitAndExpression	~color & 0xff		986190	1		&			
ANR	986202	Identifier	~color		986190	0					
ANR	986203	PrimaryExpression	0xff		986190	1					
ANR	986204	IdentifierDecl	r = not_k - ( int ) ( color >> 24 )		986190	1					
ANR	986205	IdentifierDeclType	int		986190	0					
ANR	986206	Identifier	r		986190	1					
ANR	986207	AssignmentExpression	r = not_k - ( int ) ( color >> 24 )		986190	2		=			
ANR	986208	Identifier	r		986190	0					
ANR	986209	AdditiveExpression	not_k - ( int ) ( color >> 24 )		986190	1		-			
ANR	986210	Identifier	not_k		986190	0					
ANR	986211	CastExpression	( int ) ( color >> 24 )		986190	1					
ANR	986212	CastTarget	int		986190	0					
ANR	986213	ShiftExpression	color >> 24		986190	1		>>			
ANR	986214	Identifier	color		986190	0					
ANR	986215	PrimaryExpression	24		986190	1					
ANR	986216	IdentifierDecl	g = not_k - ( int ) ( ( color >> 16 ) & 0xff )		986190	2					
ANR	986217	IdentifierDeclType	int		986190	0					
ANR	986218	Identifier	g		986190	1					
ANR	986219	AssignmentExpression	g = not_k - ( int ) ( ( color >> 16 ) & 0xff )		986190	2		=			
ANR	986220	Identifier	g		986190	0					
ANR	986221	AdditiveExpression	not_k - ( int ) ( ( color >> 16 ) & 0xff )		986190	1		-			
ANR	986222	Identifier	not_k		986190	0					
ANR	986223	CastExpression	( int ) ( ( color >> 16 ) & 0xff )		986190	1					
ANR	986224	CastTarget	int		986190	0					
ANR	986225	BitAndExpression	( color >> 16 ) & 0xff		986190	1		&			
ANR	986226	ShiftExpression	color >> 16		986190	0		>>			
ANR	986227	Identifier	color		986190	0					
ANR	986228	PrimaryExpression	16		986190	1					
ANR	986229	PrimaryExpression	0xff		986190	1					
ANR	986230	IdentifierDecl	b = not_k - ( int ) ( ( color >> 8 ) & 0xff )		986190	3					
ANR	986231	IdentifierDeclType	int		986190	0					
ANR	986232	Identifier	b		986190	1					
ANR	986233	AssignmentExpression	b = not_k - ( int ) ( ( color >> 8 ) & 0xff )		986190	2		=			
ANR	986234	Identifier	b		986190	0					
ANR	986235	AdditiveExpression	not_k - ( int ) ( ( color >> 8 ) & 0xff )		986190	1		-			
ANR	986236	Identifier	not_k		986190	0					
ANR	986237	CastExpression	( int ) ( ( color >> 8 ) & 0xff )		986190	1					
ANR	986238	CastTarget	int		986190	0					
ANR	986239	BitAndExpression	( color >> 8 ) & 0xff		986190	1		&			
ANR	986240	ShiftExpression	color >> 8		986190	0		>>			
ANR	986241	Identifier	color		986190	0					
ANR	986242	PrimaryExpression	8		986190	1					
ANR	986243	PrimaryExpression	0xff		986190	1					
ANR	986244	ExpressionStatement	prgb [ 0 ] = ( r < 0 ? 0 : gx_color_value_from_byte ( r ) )	1940:4:70830:70881	986190	1	True				
ANR	986245	AssignmentExpression	prgb [ 0 ] = ( r < 0 ? 0 : gx_color_value_from_byte ( r ) )		986190	0		=			
ANR	986246	ArrayIndexing	prgb [ 0 ]		986190	0					
ANR	986247	Identifier	prgb		986190	0					
ANR	986248	PrimaryExpression	0		986190	1					
ANR	986249	ConditionalExpression	r < 0 ? 0 : gx_color_value_from_byte ( r )		986190	1					
ANR	986250	Condition	r < 0		986190	0					
ANR	986251	RelationalExpression	r < 0		986190	0		<			
ANR	986252	Identifier	r		986190	0					
ANR	986253	PrimaryExpression	0		986190	1					
ANR	986254	PrimaryExpression	0		986190	1					
ANR	986255	CallExpression	gx_color_value_from_byte ( r )		986190	2					
ANR	986256	Callee	gx_color_value_from_byte		986190	0					
ANR	986257	Identifier	gx_color_value_from_byte		986190	0					
ANR	986258	ArgumentList	r		986190	1					
ANR	986259	Argument	r		986190	0					
ANR	986260	Identifier	r		986190	0					
ANR	986261	ExpressionStatement	prgb [ 1 ] = ( g < 0 ? 0 : gx_color_value_from_byte ( g ) )	1941:4:70887:70938	986190	2	True				
ANR	986262	AssignmentExpression	prgb [ 1 ] = ( g < 0 ? 0 : gx_color_value_from_byte ( g ) )		986190	0		=			
ANR	986263	ArrayIndexing	prgb [ 1 ]		986190	0					
ANR	986264	Identifier	prgb		986190	0					
ANR	986265	PrimaryExpression	1		986190	1					
ANR	986266	ConditionalExpression	g < 0 ? 0 : gx_color_value_from_byte ( g )		986190	1					
ANR	986267	Condition	g < 0		986190	0					
ANR	986268	RelationalExpression	g < 0		986190	0		<			
ANR	986269	Identifier	g		986190	0					
ANR	986270	PrimaryExpression	0		986190	1					
ANR	986271	PrimaryExpression	0		986190	1					
ANR	986272	CallExpression	gx_color_value_from_byte ( g )		986190	2					
ANR	986273	Callee	gx_color_value_from_byte		986190	0					
ANR	986274	Identifier	gx_color_value_from_byte		986190	0					
ANR	986275	ArgumentList	g		986190	1					
ANR	986276	Argument	g		986190	0					
ANR	986277	Identifier	g		986190	0					
ANR	986278	ExpressionStatement	prgb [ 2 ] = ( b < 0 ? 0 : gx_color_value_from_byte ( b ) )	1942:4:70944:70995	986190	3	True				
ANR	986279	AssignmentExpression	prgb [ 2 ] = ( b < 0 ? 0 : gx_color_value_from_byte ( b ) )		986190	0		=			
ANR	986280	ArrayIndexing	prgb [ 2 ]		986190	0					
ANR	986281	Identifier	prgb		986190	0					
ANR	986282	PrimaryExpression	2		986190	1					
ANR	986283	ConditionalExpression	b < 0 ? 0 : gx_color_value_from_byte ( b )		986190	1					
ANR	986284	Condition	b < 0		986190	0					
ANR	986285	RelationalExpression	b < 0		986190	0		<			
ANR	986286	Identifier	b		986190	0					
ANR	986287	PrimaryExpression	0		986190	1					
ANR	986288	PrimaryExpression	0		986190	1					
ANR	986289	CallExpression	gx_color_value_from_byte ( b )		986190	2					
ANR	986290	Callee	gx_color_value_from_byte		986190	0					
ANR	986291	Identifier	gx_color_value_from_byte		986190	0					
ANR	986292	ArgumentList	b		986190	1					
ANR	986293	Argument	b		986190	0					
ANR	986294	Identifier	b		986190	0					
ANR	986295	ReturnStatement	return 0 ;	1943:4:71001:71009	986190	4	True				
ANR	986296	PrimaryExpression	0		986190	0					
ANR	986297	ReturnType	int		986190	1					
ANR	986298	Identifier	cmyk_8bit_map_color_rgb		986190	2					
ANR	986299	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		986190	3					
ANR	986300	Parameter	gx_device * dev	1931:24:70549:70563	986190	0	True				
ANR	986301	ParameterType	gx_device *		986190	0					
ANR	986302	Identifier	dev		986190	1					
ANR	986303	Parameter	gx_color_index color	1931:41:70566:70585	986190	1	True				
ANR	986304	ParameterType	gx_color_index		986190	0					
ANR	986305	Identifier	color		986190	1					
ANR	986306	Parameter	gx_color_value prgb [ 3 ]	1932:24:70612:70633	986190	2	True				
ANR	986307	ParameterType	gx_color_value [ 3 ]		986190	0					
ANR	986308	Identifier	prgb		986190	1					
ANR	986309	CFGEntryNode	ENTRY		986190		True				
ANR	986310	CFGExitNode	EXIT		986190		True				
ANR	986311	Symbol	* prgb		986190						
ANR	986312	Symbol	r		986190						
ANR	986313	Symbol	b		986190						
ANR	986314	Symbol	dev		986190						
ANR	986315	Symbol	color		986190						
ANR	986316	Symbol	g		986190						
ANR	986317	Symbol	gx_color_value_from_byte		986190						
ANR	986318	Symbol	prgb		986190						
ANR	986319	Symbol	~color		986190						
ANR	986320	Symbol	not_k		986190						
ANR	986321	Function	cmyk_8bit_map_color_cmyk	1946:0:71014:71380							
ANR	986322	FunctionDef	"cmyk_8bit_map_color_cmyk (gx_device * dev , gx_color_index color , gx_color_value pcv [ 4 ])"		986321	0					
ANR	986323	CompoundStatement		1949:0:71129:71380	986321	0					
ANR	986324	ExpressionStatement	pcv [ 0 ] = gx_color_value_from_byte ( ( color >> 24 ) & 0xff )	1950:4:71135:71190	986321	0	True				
ANR	986325	AssignmentExpression	pcv [ 0 ] = gx_color_value_from_byte ( ( color >> 24 ) & 0xff )		986321	0		=			
ANR	986326	ArrayIndexing	pcv [ 0 ]		986321	0					
ANR	986327	Identifier	pcv		986321	0					
ANR	986328	PrimaryExpression	0		986321	1					
ANR	986329	CallExpression	gx_color_value_from_byte ( ( color >> 24 ) & 0xff )		986321	1					
ANR	986330	Callee	gx_color_value_from_byte		986321	0					
ANR	986331	Identifier	gx_color_value_from_byte		986321	0					
ANR	986332	ArgumentList	( color >> 24 ) & 0xff		986321	1					
ANR	986333	Argument	( color >> 24 ) & 0xff		986321	0					
ANR	986334	BitAndExpression	( color >> 24 ) & 0xff		986321	0		&			
ANR	986335	ShiftExpression	color >> 24		986321	0		>>			
ANR	986336	Identifier	color		986321	0					
ANR	986337	PrimaryExpression	24		986321	1					
ANR	986338	PrimaryExpression	0xff		986321	1					
ANR	986339	ExpressionStatement	pcv [ 1 ] = gx_color_value_from_byte ( ( color >> 16 ) & 0xff )	1951:4:71196:71251	986321	1	True				
ANR	986340	AssignmentExpression	pcv [ 1 ] = gx_color_value_from_byte ( ( color >> 16 ) & 0xff )		986321	0		=			
ANR	986341	ArrayIndexing	pcv [ 1 ]		986321	0					
ANR	986342	Identifier	pcv		986321	0					
ANR	986343	PrimaryExpression	1		986321	1					
ANR	986344	CallExpression	gx_color_value_from_byte ( ( color >> 16 ) & 0xff )		986321	1					
ANR	986345	Callee	gx_color_value_from_byte		986321	0					
ANR	986346	Identifier	gx_color_value_from_byte		986321	0					
ANR	986347	ArgumentList	( color >> 16 ) & 0xff		986321	1					
ANR	986348	Argument	( color >> 16 ) & 0xff		986321	0					
ANR	986349	BitAndExpression	( color >> 16 ) & 0xff		986321	0		&			
ANR	986350	ShiftExpression	color >> 16		986321	0		>>			
ANR	986351	Identifier	color		986321	0					
ANR	986352	PrimaryExpression	16		986321	1					
ANR	986353	PrimaryExpression	0xff		986321	1					
ANR	986354	ExpressionStatement	pcv [ 2 ] = gx_color_value_from_byte ( ( color >> 8 ) & 0xff )	1952:4:71257:71311	986321	2	True				
ANR	986355	AssignmentExpression	pcv [ 2 ] = gx_color_value_from_byte ( ( color >> 8 ) & 0xff )		986321	0		=			
ANR	986356	ArrayIndexing	pcv [ 2 ]		986321	0					
ANR	986357	Identifier	pcv		986321	0					
ANR	986358	PrimaryExpression	2		986321	1					
ANR	986359	CallExpression	gx_color_value_from_byte ( ( color >> 8 ) & 0xff )		986321	1					
ANR	986360	Callee	gx_color_value_from_byte		986321	0					
ANR	986361	Identifier	gx_color_value_from_byte		986321	0					
ANR	986362	ArgumentList	( color >> 8 ) & 0xff		986321	1					
ANR	986363	Argument	( color >> 8 ) & 0xff		986321	0					
ANR	986364	BitAndExpression	( color >> 8 ) & 0xff		986321	0		&			
ANR	986365	ShiftExpression	color >> 8		986321	0		>>			
ANR	986366	Identifier	color		986321	0					
ANR	986367	PrimaryExpression	8		986321	1					
ANR	986368	PrimaryExpression	0xff		986321	1					
ANR	986369	ExpressionStatement	pcv [ 3 ] = gx_color_value_from_byte ( color & 0xff )	1953:4:71317:71364	986321	3	True				
ANR	986370	AssignmentExpression	pcv [ 3 ] = gx_color_value_from_byte ( color & 0xff )		986321	0		=			
ANR	986371	ArrayIndexing	pcv [ 3 ]		986321	0					
ANR	986372	Identifier	pcv		986321	0					
ANR	986373	PrimaryExpression	3		986321	1					
ANR	986374	CallExpression	gx_color_value_from_byte ( color & 0xff )		986321	1					
ANR	986375	Callee	gx_color_value_from_byte		986321	0					
ANR	986376	Identifier	gx_color_value_from_byte		986321	0					
ANR	986377	ArgumentList	color & 0xff		986321	1					
ANR	986378	Argument	color & 0xff		986321	0					
ANR	986379	BitAndExpression	color & 0xff		986321	0		&			
ANR	986380	Identifier	color		986321	0					
ANR	986381	PrimaryExpression	0xff		986321	1					
ANR	986382	ReturnStatement	return 0 ;	1954:4:71370:71378	986321	4	True				
ANR	986383	PrimaryExpression	0		986321	0					
ANR	986384	ReturnType	int		986321	1					
ANR	986385	Identifier	cmyk_8bit_map_color_cmyk		986321	2					
ANR	986386	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value pcv [ 4 ]"		986321	3					
ANR	986387	Parameter	gx_device * dev	1947:25:71043:71057	986321	0	True				
ANR	986388	ParameterType	gx_device *		986321	0					
ANR	986389	Identifier	dev		986321	1					
ANR	986390	Parameter	gx_color_index color	1947:42:71060:71079	986321	1	True				
ANR	986391	ParameterType	gx_color_index		986321	0					
ANR	986392	Identifier	color		986321	1					
ANR	986393	Parameter	gx_color_value pcv [ 4 ]	1948:24:71106:71126	986321	2	True				
ANR	986394	ParameterType	gx_color_value [ 4 ]		986321	0					
ANR	986395	Identifier	pcv		986321	1					
ANR	986396	CFGEntryNode	ENTRY		986321		True				
ANR	986397	CFGExitNode	EXIT		986321		True				
ANR	986398	Symbol	pcv		986321						
ANR	986399	Symbol	dev		986321						
ANR	986400	Symbol	color		986321						
ANR	986401	Symbol	gx_color_value_from_byte		986321						
ANR	986402	Symbol	* pcv		986321						
ANR	986403	Function	cmyk_16bit_map_color_cmyk	1957:0:71383:71697							
ANR	986404	FunctionDef	"cmyk_16bit_map_color_cmyk (gx_device * dev , gx_color_index color , gx_color_value pcv [ 4 ])"		986403	0					
ANR	986405	CompoundStatement		1960:0:71501:71697	986403	0					
ANR	986406	ExpressionStatement	pcv [ 0 ] = ( ( color >> 24 ) >> 24 ) & 0xffff	1961:4:71507:71546	986403	0	True				
ANR	986407	AssignmentExpression	pcv [ 0 ] = ( ( color >> 24 ) >> 24 ) & 0xffff		986403	0		=			
ANR	986408	ArrayIndexing	pcv [ 0 ]		986403	0					
ANR	986409	Identifier	pcv		986403	0					
ANR	986410	PrimaryExpression	0		986403	1					
ANR	986411	BitAndExpression	( ( color >> 24 ) >> 24 ) & 0xffff		986403	1		&			
ANR	986412	ShiftExpression	( color >> 24 ) >> 24		986403	0		>>			
ANR	986413	ShiftExpression	color >> 24		986403	0		>>			
ANR	986414	Identifier	color		986403	0					
ANR	986415	PrimaryExpression	24		986403	1					
ANR	986416	PrimaryExpression	24		986403	1					
ANR	986417	PrimaryExpression	0xffff		986403	1					
ANR	986418	ExpressionStatement	pcv [ 1 ] = ( ( color >> 16 ) >> 16 ) & 0xffff	1962:4:71552:71591	986403	1	True				
ANR	986419	AssignmentExpression	pcv [ 1 ] = ( ( color >> 16 ) >> 16 ) & 0xffff		986403	0		=			
ANR	986420	ArrayIndexing	pcv [ 1 ]		986403	0					
ANR	986421	Identifier	pcv		986403	0					
ANR	986422	PrimaryExpression	1		986403	1					
ANR	986423	BitAndExpression	( ( color >> 16 ) >> 16 ) & 0xffff		986403	1		&			
ANR	986424	ShiftExpression	( color >> 16 ) >> 16		986403	0		>>			
ANR	986425	ShiftExpression	color >> 16		986403	0		>>			
ANR	986426	Identifier	color		986403	0					
ANR	986427	PrimaryExpression	16		986403	1					
ANR	986428	PrimaryExpression	16		986403	1					
ANR	986429	PrimaryExpression	0xffff		986403	1					
ANR	986430	ExpressionStatement	pcv [ 2 ] = ( color >> 16 ) & 0xffff	1963:4:71597:71636	986403	2	True				
ANR	986431	AssignmentExpression	pcv [ 2 ] = ( color >> 16 ) & 0xffff		986403	0		=			
ANR	986432	ArrayIndexing	pcv [ 2 ]		986403	0					
ANR	986433	Identifier	pcv		986403	0					
ANR	986434	PrimaryExpression	2		986403	1					
ANR	986435	BitAndExpression	( color >> 16 ) & 0xffff		986403	1		&			
ANR	986436	ShiftExpression	color >> 16		986403	0		>>			
ANR	986437	Identifier	color		986403	0					
ANR	986438	PrimaryExpression	16		986403	1					
ANR	986439	PrimaryExpression	0xffff		986403	1					
ANR	986440	ExpressionStatement	pcv [ 3 ] = ( color ) & 0xffff	1964:4:71642:71681	986403	3	True				
ANR	986441	AssignmentExpression	pcv [ 3 ] = ( color ) & 0xffff		986403	0		=			
ANR	986442	ArrayIndexing	pcv [ 3 ]		986403	0					
ANR	986443	Identifier	pcv		986403	0					
ANR	986444	PrimaryExpression	3		986403	1					
ANR	986445	CastExpression	( color ) & 0xffff		986403	1					
ANR	986446	CastTarget	color		986403	0					
ANR	986447	UnaryOperationExpression	& 0xffff		986403	1					
ANR	986448	UnaryOperator	&		986403	0					
ANR	986449	PrimaryExpression	0xffff		986403	1					
ANR	986450	ReturnStatement	return 0 ;	1965:4:71687:71695	986403	4	True				
ANR	986451	PrimaryExpression	0		986403	0					
ANR	986452	ReturnType	int		986403	1					
ANR	986453	Identifier	cmyk_16bit_map_color_cmyk		986403	2					
ANR	986454	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value pcv [ 4 ]"		986403	3					
ANR	986455	Parameter	gx_device * dev	1958:26:71413:71427	986403	0	True				
ANR	986456	ParameterType	gx_device *		986403	0					
ANR	986457	Identifier	dev		986403	1					
ANR	986458	Parameter	gx_color_index color	1958:43:71430:71449	986403	1	True				
ANR	986459	ParameterType	gx_color_index		986403	0					
ANR	986460	Identifier	color		986403	1					
ANR	986461	Parameter	gx_color_value pcv [ 4 ]	1959:26:71478:71498	986403	2	True				
ANR	986462	ParameterType	gx_color_value [ 4 ]		986403	0					
ANR	986463	Identifier	pcv		986403	1					
ANR	986464	CFGEntryNode	ENTRY		986403		True				
ANR	986465	CFGExitNode	EXIT		986403		True				
ANR	986466	Symbol	pcv		986403						
ANR	986467	Symbol	dev		986403						
ANR	986468	Symbol	color		986403						
ANR	986469	Symbol	* pcv		986403						
ANR	986470	Function	gx_default_map_rgb_alpha_color	1970:0:71750:72078							
ANR	986471	FunctionDef	"gx_default_map_rgb_alpha_color (gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha)"		986470	0					
ANR	986472	CompoundStatement		1973:0:71890:72078	986470	0					
ANR	986473	IdentifierDeclStatement	gx_color_value cv [ 3 ] ;	1974:4:71966:71986	986470	0	True				
ANR	986474	IdentifierDecl	cv [ 3 ]		986470	0					
ANR	986475	IdentifierDeclType	gx_color_value [ 3 ]		986470	0					
ANR	986476	Identifier	cv		986470	1					
ANR	986477	PrimaryExpression	3		986470	2					
ANR	986478	ExpressionStatement	cv [ 0 ] = r	1975:4:71992:72001	986470	1	True				
ANR	986479	AssignmentExpression	cv [ 0 ] = r		986470	0		=			
ANR	986480	ArrayIndexing	cv [ 0 ]		986470	0					
ANR	986481	Identifier	cv		986470	0					
ANR	986482	PrimaryExpression	0		986470	1					
ANR	986483	Identifier	r		986470	1					
ANR	986484	ExpressionStatement	cv [ 1 ] = g	1975:15:72003:72012	986470	2	True				
ANR	986485	AssignmentExpression	cv [ 1 ] = g		986470	0		=			
ANR	986486	ArrayIndexing	cv [ 1 ]		986470	0					
ANR	986487	Identifier	cv		986470	0					
ANR	986488	PrimaryExpression	1		986470	1					
ANR	986489	Identifier	g		986470	1					
ANR	986490	ExpressionStatement	cv [ 2 ] = b	1975:26:72014:72023	986470	3	True				
ANR	986491	AssignmentExpression	cv [ 2 ] = b		986470	0		=			
ANR	986492	ArrayIndexing	cv [ 2 ]		986470	0					
ANR	986493	Identifier	cv		986470	0					
ANR	986494	PrimaryExpression	2		986470	1					
ANR	986495	Identifier	b		986470	1					
ANR	986496	ReturnStatement	"return ( * dev_proc ( dev , map_rgb_color ) ) ( dev , cv ) ;"	1976:4:72029:72076	986470	4	True				
ANR	986497	CallExpression	"( * dev_proc ( dev , map_rgb_color ) ) ( dev , cv )"		986470	0					
ANR	986498	Callee	"* dev_proc ( dev , map_rgb_color )"		986470	0					
ANR	986499	UnaryOperationExpression	"* dev_proc ( dev , map_rgb_color )"		986470	0					
ANR	986500	UnaryOperator	*		986470	0					
ANR	986501	CallExpression	"dev_proc ( dev , map_rgb_color )"		986470	1					
ANR	986502	Callee	dev_proc		986470	0					
ANR	986503	Identifier	dev_proc		986470	0					
ANR	986504	ArgumentList	dev		986470	1					
ANR	986505	Argument	dev		986470	0					
ANR	986506	Identifier	dev		986470	0					
ANR	986507	Argument	map_rgb_color		986470	1					
ANR	986508	Identifier	map_rgb_color		986470	0					
ANR	986509	ArgumentList	dev		986470	1					
ANR	986510	Argument	dev		986470	0					
ANR	986511	Identifier	dev		986470	0					
ANR	986512	Argument	cv		986470	1					
ANR	986513	Identifier	cv		986470	0					
ANR	986514	ReturnType	gx_color_index		986470	1					
ANR	986515	Identifier	gx_default_map_rgb_alpha_color		986470	2					
ANR	986516	ParameterList	"gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha"		986470	3					
ANR	986517	Parameter	gx_device * dev	1971:31:71796:71810	986470	0	True				
ANR	986518	ParameterType	gx_device *		986470	0					
ANR	986519	Identifier	dev		986470	1					
ANR	986520	Parameter	gx_color_value r	1972:1:71814:71829	986470	1	True				
ANR	986521	ParameterType	gx_color_value		986470	0					
ANR	986522	Identifier	r		986470	1					
ANR	986523	Parameter	gx_color_value g	1972:19:71832:71847	986470	2	True				
ANR	986524	ParameterType	gx_color_value		986470	0					
ANR	986525	Identifier	g		986470	1					
ANR	986526	Parameter	gx_color_value b	1972:37:71850:71865	986470	3	True				
ANR	986527	ParameterType	gx_color_value		986470	0					
ANR	986528	Identifier	b		986470	1					
ANR	986529	Parameter	gx_color_value alpha	1972:55:71868:71887	986470	4	True				
ANR	986530	ParameterType	gx_color_value		986470	0					
ANR	986531	Identifier	alpha		986470	1					
ANR	986532	CFGEntryNode	ENTRY		986470		True				
ANR	986533	CFGExitNode	EXIT		986470		True				
ANR	986534	Symbol	r		986470						
ANR	986535	Symbol	b		986470						
ANR	986536	Symbol	cv		986470						
ANR	986537	Symbol	dev		986470						
ANR	986538	Symbol	* dev_proc		986470						
ANR	986539	Symbol	dev_proc		986470						
ANR	986540	Symbol	g		986470						
ANR	986541	Symbol	alpha		986470						
ANR	986542	Symbol	* cv		986470						
ANR	986543	Symbol	map_rgb_color		986470						
ANR	986544	Symbol	"* dev_proc ( dev , map_rgb_color )"		986470						
ANR	986545	Function	gx_default_map_color_rgb_alpha	1979:0:72081:72328							
ANR	986546	FunctionDef	"gx_default_map_color_rgb_alpha (gx_device * dev , gx_color_index color , gx_color_value prgba [ 4 ])"		986545	0					
ANR	986547	CompoundStatement		1982:0:72211:72328	986545	0					
ANR	986548	ExpressionStatement	prgba [ 3 ] = gx_max_color_value	1983:4:72217:72246	986545	0	True				
ANR	986549	AssignmentExpression	prgba [ 3 ] = gx_max_color_value		986545	0		=			
ANR	986550	ArrayIndexing	prgba [ 3 ]		986545	0					
ANR	986551	Identifier	prgba		986545	0					
ANR	986552	PrimaryExpression	3		986545	1					
ANR	986553	Identifier	gx_max_color_value		986545	1					
ANR	986554	ReturnStatement	"return ( * dev_proc ( dev , map_color_rgb ) ) ( dev , color , prgba ) ;"	1984:4:72268:72326	986545	1	True				
ANR	986555	CallExpression	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , color , prgba )"		986545	0					
ANR	986556	Callee	"* dev_proc ( dev , map_color_rgb )"		986545	0					
ANR	986557	UnaryOperationExpression	"* dev_proc ( dev , map_color_rgb )"		986545	0					
ANR	986558	UnaryOperator	*		986545	0					
ANR	986559	CallExpression	"dev_proc ( dev , map_color_rgb )"		986545	1					
ANR	986560	Callee	dev_proc		986545	0					
ANR	986561	Identifier	dev_proc		986545	0					
ANR	986562	ArgumentList	dev		986545	1					
ANR	986563	Argument	dev		986545	0					
ANR	986564	Identifier	dev		986545	0					
ANR	986565	Argument	map_color_rgb		986545	1					
ANR	986566	Identifier	map_color_rgb		986545	0					
ANR	986567	ArgumentList	dev		986545	1					
ANR	986568	Argument	dev		986545	0					
ANR	986569	Identifier	dev		986545	0					
ANR	986570	Argument	color		986545	1					
ANR	986571	Identifier	color		986545	0					
ANR	986572	Argument	prgba		986545	2					
ANR	986573	Identifier	prgba		986545	0					
ANR	986574	ReturnType	int		986545	1					
ANR	986575	Identifier	gx_default_map_color_rgb_alpha		986545	2					
ANR	986576	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgba [ 4 ]"		986545	3					
ANR	986577	Parameter	gx_device * dev	1980:31:72116:72130	986545	0	True				
ANR	986578	ParameterType	gx_device *		986545	0					
ANR	986579	Identifier	dev		986545	1					
ANR	986580	Parameter	gx_color_index color	1980:48:72133:72152	986545	1	True				
ANR	986581	ParameterType	gx_color_index		986545	0					
ANR	986582	Identifier	color		986545	1					
ANR	986583	Parameter	gx_color_value prgba [ 4 ]	1981:31:72186:72208	986545	2	True				
ANR	986584	ParameterType	gx_color_value [ 4 ]		986545	0					
ANR	986585	Identifier	prgba		986545	1					
ANR	986586	CFGEntryNode	ENTRY		986545		True				
ANR	986587	CFGExitNode	EXIT		986545		True				
ANR	986588	Symbol	dev		986545						
ANR	986589	Symbol	color		986545						
ANR	986590	Symbol	gx_max_color_value		986545						
ANR	986591	Symbol	* dev_proc		986545						
ANR	986592	Symbol	dev_proc		986545						
ANR	986593	Symbol	"* dev_proc ( dev , map_color_rgb )"		986545						
ANR	986594	Symbol	prgba		986545						
ANR	986595	Symbol	* prgba		986545						
ANR	986596	Symbol	map_color_rgb		986545						
ANR	986597	Function	gx_unit_frac	1987:0:72331:72536							
ANR	986598	FunctionDef	gx_unit_frac (float fvalue)		986597	0					
ANR	986599	CompoundStatement		1989:0:72363:72536	986597	0					
ANR	986600	IdentifierDeclStatement	frac f = frac_0 ;	1990:4:72369:72384	986597	0	True				
ANR	986601	IdentifierDecl	f = frac_0		986597	0					
ANR	986602	IdentifierDeclType	frac		986597	0					
ANR	986603	Identifier	f		986597	1					
ANR	986604	AssignmentExpression	f = frac_0		986597	2		=			
ANR	986605	Identifier	frac_0		986597	0					
ANR	986606	Identifier	frac_0		986597	1					
ANR	986607	IfStatement	if ( is_fneg ( fvalue ) )		986597	1					
ANR	986608	Condition	is_fneg ( fvalue )	1991:8:72394:72408	986597	0	True				
ANR	986609	CallExpression	is_fneg ( fvalue )		986597	0					
ANR	986610	Callee	is_fneg		986597	0					
ANR	986611	Identifier	is_fneg		986597	0					
ANR	986612	ArgumentList	fvalue		986597	1					
ANR	986613	Argument	fvalue		986597	0					
ANR	986614	Identifier	fvalue		986597	0					
ANR	986615	ExpressionStatement	f = frac_0	1992:8:72419:72429	986597	1	True				
ANR	986616	AssignmentExpression	f = frac_0		986597	0		=			
ANR	986617	Identifier	f		986597	0					
ANR	986618	Identifier	frac_0		986597	1					
ANR	986619	ElseStatement	else		986597	0					
ANR	986620	IfStatement	if ( is_fge1 ( fvalue ) )		986597	0					
ANR	986621	Condition	is_fge1 ( fvalue )	1993:13:72444:72458	986597	0	True				
ANR	986622	CallExpression	is_fge1 ( fvalue )		986597	0					
ANR	986623	Callee	is_fge1		986597	0					
ANR	986624	Identifier	is_fge1		986597	0					
ANR	986625	ArgumentList	fvalue		986597	1					
ANR	986626	Argument	fvalue		986597	0					
ANR	986627	Identifier	fvalue		986597	0					
ANR	986628	ExpressionStatement	f = frac_1	1994:8:72469:72479	986597	1	True				
ANR	986629	AssignmentExpression	f = frac_1		986597	0		=			
ANR	986630	Identifier	f		986597	0					
ANR	986631	Identifier	frac_1		986597	1					
ANR	986632	ElseStatement	else		986597	0					
ANR	986633	ExpressionStatement	f = float2frac ( fvalue )	1996:8:72498:72520	986597	0	True				
ANR	986634	AssignmentExpression	f = float2frac ( fvalue )		986597	0		=			
ANR	986635	Identifier	f		986597	0					
ANR	986636	CallExpression	float2frac ( fvalue )		986597	1					
ANR	986637	Callee	float2frac		986597	0					
ANR	986638	Identifier	float2frac		986597	0					
ANR	986639	ArgumentList	fvalue		986597	1					
ANR	986640	Argument	fvalue		986597	0					
ANR	986641	Identifier	fvalue		986597	0					
ANR	986642	ReturnStatement	return f ;	1997:4:72526:72534	986597	2	True				
ANR	986643	Identifier	f		986597	0					
ANR	986644	ReturnType	frac		986597	1					
ANR	986645	Identifier	gx_unit_frac		986597	2					
ANR	986646	ParameterList	float fvalue		986597	3					
ANR	986647	Parameter	float fvalue	1988:13:72349:72360	986597	0	True				
ANR	986648	ParameterType	float		986597	0					
ANR	986649	Identifier	fvalue		986597	1					
ANR	986650	CFGEntryNode	ENTRY		986597		True				
ANR	986651	CFGExitNode	EXIT		986597		True				
ANR	986652	Symbol	fvalue		986597						
ANR	986653	Symbol	frac_1		986597						
ANR	986654	Symbol	is_fge1		986597						
ANR	986655	Symbol	f		986597						
ANR	986656	Symbol	float2frac		986597						
ANR	986657	Symbol	is_fneg		986597						
ANR	986658	Symbol	frac_0		986597						
ANR	986659	Function	cmapper_transfer_halftone_add	2000:0:72539:73320							
ANR	986660	FunctionDef	cmapper_transfer_halftone_add (gx_cmapper_data * data)		986659	0					
ANR	986661	CompoundStatement		2002:0:72604:73320	986659	0					
ANR	986662	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2003:4:72610:72648	986659	0	True				
ANR	986663	IdentifierDecl	* pconc = & data -> conc [ 0 ]		986659	0					
ANR	986664	IdentifierDeclType	gx_color_value *		986659	0					
ANR	986665	Identifier	pconc		986659	1					
ANR	986666	AssignmentExpression	* pconc = & data -> conc [ 0 ]		986659	2		=			
ANR	986667	Identifier	pconc		986659	0					
ANR	986668	UnaryOperationExpression	& data -> conc [ 0 ]		986659	1					
ANR	986669	UnaryOperator	&		986659	0					
ANR	986670	ArrayIndexing	data -> conc [ 0 ]		986659	1					
ANR	986671	PtrMemberAccess	data -> conc		986659	0					
ANR	986672	Identifier	data		986659	0					
ANR	986673	Identifier	conc		986659	1					
ANR	986674	PrimaryExpression	0		986659	1					
ANR	986675	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2004:4:72654:72687	986659	1	True				
ANR	986676	IdentifierDecl	* pgs = data -> pgs		986659	0					
ANR	986677	IdentifierDeclType	const gs_gstate *		986659	0					
ANR	986678	Identifier	pgs		986659	1					
ANR	986679	AssignmentExpression	* pgs = data -> pgs		986659	2		=			
ANR	986680	Identifier	pgs		986659	0					
ANR	986681	PtrMemberAccess	data -> pgs		986659	1					
ANR	986682	Identifier	data		986659	0					
ANR	986683	Identifier	pgs		986659	1					
ANR	986684	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2005:4:72693:72720	986659	2	True				
ANR	986685	IdentifierDecl	* dev = data -> dev		986659	0					
ANR	986686	IdentifierDeclType	gx_device *		986659	0					
ANR	986687	Identifier	dev		986659	1					
ANR	986688	AssignmentExpression	* dev = data -> dev		986659	2		=			
ANR	986689	Identifier	dev		986659	0					
ANR	986690	PtrMemberAccess	data -> dev		986659	1					
ANR	986691	Identifier	data		986659	0					
ANR	986692	Identifier	dev		986659	1					
ANR	986693	IdentifierDeclStatement	gs_color_select_t select = data -> select ;	2006:4:72726:72765	986659	3	True				
ANR	986694	IdentifierDecl	select = data -> select		986659	0					
ANR	986695	IdentifierDeclType	gs_color_select_t		986659	0					
ANR	986696	Identifier	select		986659	1					
ANR	986697	AssignmentExpression	select = data -> select		986659	2		=			
ANR	986698	Identifier	select		986659	0					
ANR	986699	PtrMemberAccess	data -> select		986659	1					
ANR	986700	Identifier	data		986659	0					
ANR	986701	Identifier	select		986659	1					
ANR	986702	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2007:4:72771:72816	986659	4	True				
ANR	986703	IdentifierDecl	ncomps = dev -> color_info . num_components		986659	0					
ANR	986704	IdentifierDeclType	uchar		986659	0					
ANR	986705	Identifier	ncomps		986659	1					
ANR	986706	AssignmentExpression	ncomps = dev -> color_info . num_components		986659	2		=			
ANR	986707	Identifier	ncomps		986659	0					
ANR	986708	MemberAccess	dev -> color_info . num_components		986659	1					
ANR	986709	PtrMemberAccess	dev -> color_info		986659	0					
ANR	986710	Identifier	dev		986659	0					
ANR	986711	Identifier	color_info		986659	1					
ANR	986712	Identifier	num_components		986659	1					
ANR	986713	IdentifierDeclStatement	frac frac_value ;	2008:4:72822:72837	986659	5	True				
ANR	986714	IdentifierDecl	frac_value		986659	0					
ANR	986715	IdentifierDeclType	frac		986659	0					
ANR	986716	Identifier	frac_value		986659	1					
ANR	986717	IdentifierDeclStatement	uchar i ;	2009:4:72843:72850	986659	6	True				
ANR	986718	IdentifierDecl	i		986659	0					
ANR	986719	IdentifierDeclType	uchar		986659	0					
ANR	986720	Identifier	i		986659	1					
ANR	986721	IdentifierDeclStatement	frac cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	2010:4:72856:72900	986659	7	True				
ANR	986722	IdentifierDecl	cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		986659	0					
ANR	986723	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		986659	0					
ANR	986724	Identifier	cv_frac		986659	1					
ANR	986725	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		986659	2					
ANR	986726	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		986659	8					
ANR	986727	ForInit	i = 0 ;	2013:9:72953:72958	986659	0	True				
ANR	986728	AssignmentExpression	i = 0		986659	0		=			
ANR	986729	Identifier	i		986659	0					
ANR	986730	PrimaryExpression	0		986659	1					
ANR	986731	Condition	i < ncomps	2013:16:72960:72969	986659	1	True				
ANR	986732	RelationalExpression	i < ncomps		986659	0		<			
ANR	986733	Identifier	i		986659	0					
ANR	986734	Identifier	ncomps		986659	1					
ANR	986735	PostIncDecOperationExpression	i ++	2013:28:72972:72974	986659	2	True				
ANR	986736	Identifier	i		986659	0					
ANR	986737	IncDec	++		986659	1					
ANR	986738	CompoundStatement		12:33:372:372	986659	3					
ANR	986739	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2014:8:72987:73017	986659	0	True				
ANR	986740	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		986659	0		=			
ANR	986741	Identifier	frac_value		986659	0					
ANR	986742	CallExpression	cv2frac ( pconc [ i ] )		986659	1					
ANR	986743	Callee	cv2frac		986659	0					
ANR	986744	Identifier	cv2frac		986659	0					
ANR	986745	ArgumentList	pconc [ i ]		986659	1					
ANR	986746	Argument	pconc [ i ]		986659	0					
ANR	986747	ArrayIndexing	pconc [ i ]		986659	0					
ANR	986748	Identifier	pconc		986659	0					
ANR	986749	Identifier	i		986659	1					
ANR	986750	ExpressionStatement	"cv_frac [ i ] = gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"	2015:8:73027:73097	986659	1	True				
ANR	986751	AssignmentExpression	"cv_frac [ i ] = gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"		986659	0		=			
ANR	986752	ArrayIndexing	cv_frac [ i ]		986659	0					
ANR	986753	Identifier	cv_frac		986659	0					
ANR	986754	Identifier	i		986659	1					
ANR	986755	CallExpression	"gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"		986659	1					
ANR	986756	Callee	gx_map_color_frac		986659	0					
ANR	986757	Identifier	gx_map_color_frac		986659	0					
ANR	986758	ArgumentList	pgs		986659	1					
ANR	986759	Argument	pgs		986659	0					
ANR	986760	Identifier	pgs		986659	0					
ANR	986761	Argument	frac_value		986659	1					
ANR	986762	Identifier	frac_value		986659	0					
ANR	986763	Argument	effective_transfer [ i ]		986659	2					
ANR	986764	ArrayIndexing	effective_transfer [ i ]		986659	0					
ANR	986765	Identifier	effective_transfer		986659	0					
ANR	986766	Identifier	i		986659	1					
ANR	986767	IfStatement	"if ( gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		986659	9					
ANR	986768	Condition	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	2018:8:73134:73256	986659	0	True				
ANR	986769	EqualityExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		986659	0		==			
ANR	986770	CallExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		986659	0					
ANR	986771	Callee	gx_render_device_DeviceN		986659	0					
ANR	986772	Identifier	gx_render_device_DeviceN		986659	0					
ANR	986773	ArgumentList	& ( cv_frac [ 0 ] )		986659	1					
ANR	986774	Argument	& ( cv_frac [ 0 ] )		986659	0					
ANR	986775	UnaryOperationExpression	& ( cv_frac [ 0 ] )		986659	0					
ANR	986776	UnaryOperator	&		986659	0					
ANR	986777	ArrayIndexing	cv_frac [ 0 ]		986659	1					
ANR	986778	Identifier	cv_frac		986659	0					
ANR	986779	PrimaryExpression	0		986659	1					
ANR	986780	Argument	& data -> devc		986659	1					
ANR	986781	UnaryOperationExpression	& data -> devc		986659	0					
ANR	986782	UnaryOperator	&		986659	0					
ANR	986783	PtrMemberAccess	data -> devc		986659	1					
ANR	986784	Identifier	data		986659	0					
ANR	986785	Identifier	devc		986659	1					
ANR	986786	Argument	dev		986659	2					
ANR	986787	Identifier	dev		986659	0					
ANR	986788	Argument	pgs -> dev_ht		986659	3					
ANR	986789	PtrMemberAccess	pgs -> dev_ht		986659	0					
ANR	986790	Identifier	pgs		986659	0					
ANR	986791	Identifier	dev_ht		986659	1					
ANR	986792	Argument	& pgs -> screen_phase [ select ]		986659	4					
ANR	986793	UnaryOperationExpression	& pgs -> screen_phase [ select ]		986659	0					
ANR	986794	UnaryOperator	&		986659	0					
ANR	986795	ArrayIndexing	pgs -> screen_phase [ select ]		986659	1					
ANR	986796	PtrMemberAccess	pgs -> screen_phase		986659	0					
ANR	986797	Identifier	pgs		986659	0					
ANR	986798	Identifier	screen_phase		986659	1					
ANR	986799	Identifier	select		986659	1					
ANR	986800	PrimaryExpression	1		986659	1					
ANR	986801	ExpressionStatement	"gx_color_load_select ( & data -> devc , pgs , dev , select )"	2020:8:73267:73318	986659	1	True				
ANR	986802	CallExpression	"gx_color_load_select ( & data -> devc , pgs , dev , select )"		986659	0					
ANR	986803	Callee	gx_color_load_select		986659	0					
ANR	986804	Identifier	gx_color_load_select		986659	0					
ANR	986805	ArgumentList	& data -> devc		986659	1					
ANR	986806	Argument	& data -> devc		986659	0					
ANR	986807	UnaryOperationExpression	& data -> devc		986659	0					
ANR	986808	UnaryOperator	&		986659	0					
ANR	986809	PtrMemberAccess	data -> devc		986659	1					
ANR	986810	Identifier	data		986659	0					
ANR	986811	Identifier	devc		986659	1					
ANR	986812	Argument	pgs		986659	1					
ANR	986813	Identifier	pgs		986659	0					
ANR	986814	Argument	dev		986659	2					
ANR	986815	Identifier	dev		986659	0					
ANR	986816	Argument	select		986659	3					
ANR	986817	Identifier	select		986659	0					
ANR	986818	ReturnType	static void		986659	1					
ANR	986819	Identifier	cmapper_transfer_halftone_add		986659	2					
ANR	986820	ParameterList	gx_cmapper_data * data		986659	3					
ANR	986821	Parameter	gx_cmapper_data * data	2001:30:72581:72601	986659	0	True				
ANR	986822	ParameterType	gx_cmapper_data *		986659	0					
ANR	986823	Identifier	data		986659	1					
ANR	986824	CFGEntryNode	ENTRY		986659		True				
ANR	986825	CFGExitNode	EXIT		986659		True				
ANR	986826	Symbol	* dev		986659						
ANR	986827	Symbol	frac_value		986659						
ANR	986828	Symbol	select		986659						
ANR	986829	Symbol	data		986659						
ANR	986830	Symbol	* pgs		986659						
ANR	986831	Symbol	pconc		986659						
ANR	986832	Symbol	ncomps		986659						
ANR	986833	Symbol	dev -> color_info		986659						
ANR	986834	Symbol	effective_transfer		986659						
ANR	986835	Symbol	gx_render_device_DeviceN		986659						
ANR	986836	Symbol	* effective_transfer		986659						
ANR	986837	Symbol	dev		986659						
ANR	986838	Symbol	data -> dev		986659						
ANR	986839	Symbol	cv2frac		986659						
ANR	986840	Symbol	pgs		986659						
ANR	986841	Symbol	data -> select		986659						
ANR	986842	Symbol	* pconc		986659						
ANR	986843	Symbol	dev -> color_info . num_components		986659						
ANR	986844	Symbol	data -> conc		986659						
ANR	986845	Symbol	i		986659						
ANR	986846	Symbol	data -> pgs		986659						
ANR	986847	Symbol	* cv_frac		986659						
ANR	986848	Symbol	& data -> devc		986659						
ANR	986849	Symbol	pgs -> screen_phase		986659						
ANR	986850	Symbol	* i		986659						
ANR	986851	Symbol	gx_map_color_frac		986659						
ANR	986852	Symbol	cv_frac		986659						
ANR	986853	Symbol	pgs -> dev_ht		986659						
ANR	986854	Symbol	* data		986659						
ANR	986855	Function	cmapper_transfer_halftone_op	2023:0:73323:74322							
ANR	986856	FunctionDef	cmapper_transfer_halftone_op (gx_cmapper_data * data)		986855	0					
ANR	986857	CompoundStatement		2025:0:73387:74322	986855	0					
ANR	986858	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2026:4:73393:73431	986855	0	True				
ANR	986859	IdentifierDecl	* pconc = & data -> conc [ 0 ]		986855	0					
ANR	986860	IdentifierDeclType	gx_color_value *		986855	0					
ANR	986861	Identifier	pconc		986855	1					
ANR	986862	AssignmentExpression	* pconc = & data -> conc [ 0 ]		986855	2		=			
ANR	986863	Identifier	pconc		986855	0					
ANR	986864	UnaryOperationExpression	& data -> conc [ 0 ]		986855	1					
ANR	986865	UnaryOperator	&		986855	0					
ANR	986866	ArrayIndexing	data -> conc [ 0 ]		986855	1					
ANR	986867	PtrMemberAccess	data -> conc		986855	0					
ANR	986868	Identifier	data		986855	0					
ANR	986869	Identifier	conc		986855	1					
ANR	986870	PrimaryExpression	0		986855	1					
ANR	986871	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2027:4:73437:73470	986855	1	True				
ANR	986872	IdentifierDecl	* pgs = data -> pgs		986855	0					
ANR	986873	IdentifierDeclType	const gs_gstate *		986855	0					
ANR	986874	Identifier	pgs		986855	1					
ANR	986875	AssignmentExpression	* pgs = data -> pgs		986855	2		=			
ANR	986876	Identifier	pgs		986855	0					
ANR	986877	PtrMemberAccess	data -> pgs		986855	1					
ANR	986878	Identifier	data		986855	0					
ANR	986879	Identifier	pgs		986855	1					
ANR	986880	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2028:4:73476:73503	986855	2	True				
ANR	986881	IdentifierDecl	* dev = data -> dev		986855	0					
ANR	986882	IdentifierDeclType	gx_device *		986855	0					
ANR	986883	Identifier	dev		986855	1					
ANR	986884	AssignmentExpression	* dev = data -> dev		986855	2		=			
ANR	986885	Identifier	dev		986855	0					
ANR	986886	PtrMemberAccess	data -> dev		986855	1					
ANR	986887	Identifier	data		986855	0					
ANR	986888	Identifier	dev		986855	1					
ANR	986889	IdentifierDeclStatement	gs_color_select_t select = data -> select ;	2029:4:73509:73548	986855	3	True				
ANR	986890	IdentifierDecl	select = data -> select		986855	0					
ANR	986891	IdentifierDeclType	gs_color_select_t		986855	0					
ANR	986892	Identifier	select		986855	1					
ANR	986893	AssignmentExpression	select = data -> select		986855	2		=			
ANR	986894	Identifier	select		986855	0					
ANR	986895	PtrMemberAccess	data -> select		986855	1					
ANR	986896	Identifier	data		986855	0					
ANR	986897	Identifier	select		986855	1					
ANR	986898	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2030:4:73554:73599	986855	4	True				
ANR	986899	IdentifierDecl	ncomps = dev -> color_info . num_components		986855	0					
ANR	986900	IdentifierDeclType	uchar		986855	0					
ANR	986901	Identifier	ncomps		986855	1					
ANR	986902	AssignmentExpression	ncomps = dev -> color_info . num_components		986855	2		=			
ANR	986903	Identifier	ncomps		986855	0					
ANR	986904	MemberAccess	dev -> color_info . num_components		986855	1					
ANR	986905	PtrMemberAccess	dev -> color_info		986855	0					
ANR	986906	Identifier	dev		986855	0					
ANR	986907	Identifier	color_info		986855	1					
ANR	986908	Identifier	num_components		986855	1					
ANR	986909	IdentifierDeclStatement	frac frac_value ;	2031:4:73605:73620	986855	5	True				
ANR	986910	IdentifierDecl	frac_value		986855	0					
ANR	986911	IdentifierDeclType	frac		986855	0					
ANR	986912	Identifier	frac_value		986855	1					
ANR	986913	IdentifierDeclStatement	uchar i ;	2032:4:73626:73633	986855	6	True				
ANR	986914	IdentifierDecl	i		986855	0					
ANR	986915	IdentifierDeclType	uchar		986855	0					
ANR	986916	Identifier	i		986855	1					
ANR	986917	IdentifierDeclStatement	frac cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	2033:4:73639:73683	986855	7	True				
ANR	986918	IdentifierDecl	cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		986855	0					
ANR	986919	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		986855	0					
ANR	986920	Identifier	cv_frac		986855	1					
ANR	986921	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		986855	2					
ANR	986922	IdentifierDeclStatement	uint k = dev -> color_info . black_component ;	2036:4:73731:73771	986855	8	True				
ANR	986923	IdentifierDecl	k = dev -> color_info . black_component		986855	0					
ANR	986924	IdentifierDeclType	uint		986855	0					
ANR	986925	Identifier	k		986855	1					
ANR	986926	AssignmentExpression	k = dev -> color_info . black_component		986855	2		=			
ANR	986927	Identifier	k		986855	0					
ANR	986928	MemberAccess	dev -> color_info . black_component		986855	1					
ANR	986929	PtrMemberAccess	dev -> color_info		986855	0					
ANR	986930	Identifier	dev		986855	0					
ANR	986931	Identifier	color_info		986855	1					
ANR	986932	Identifier	black_component		986855	1					
ANR	986933	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		986855	9					
ANR	986934	ForInit	i = 0 ;	2037:9:73782:73787	986855	0	True				
ANR	986935	AssignmentExpression	i = 0		986855	0		=			
ANR	986936	Identifier	i		986855	0					
ANR	986937	PrimaryExpression	0		986855	1					
ANR	986938	Condition	i < ncomps	2037:16:73789:73798	986855	1	True				
ANR	986939	RelationalExpression	i < ncomps		986855	0		<			
ANR	986940	Identifier	i		986855	0					
ANR	986941	Identifier	ncomps		986855	1					
ANR	986942	PostIncDecOperationExpression	i ++	2037:28:73801:73803	986855	2	True				
ANR	986943	Identifier	i		986855	0					
ANR	986944	IncDec	++		986855	1					
ANR	986945	CompoundStatement		13:33:418:418	986855	3					
ANR	986946	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2038:8:73816:73846	986855	0	True				
ANR	986947	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		986855	0		=			
ANR	986948	Identifier	frac_value		986855	0					
ANR	986949	CallExpression	cv2frac ( pconc [ i ] )		986855	1					
ANR	986950	Callee	cv2frac		986855	0					
ANR	986951	Identifier	cv2frac		986855	0					
ANR	986952	ArgumentList	pconc [ i ]		986855	1					
ANR	986953	Argument	pconc [ i ]		986855	0					
ANR	986954	ArrayIndexing	pconc [ i ]		986855	0					
ANR	986955	Identifier	pconc		986855	0					
ANR	986956	Identifier	i		986855	1					
ANR	986957	IfStatement	if ( i == k )		986855	1					
ANR	986958	Condition	i == k	2039:12:73860:73865	986855	0	True				
ANR	986959	EqualityExpression	i == k		986855	0		==			
ANR	986960	Identifier	i		986855	0					
ANR	986961	Identifier	k		986855	1					
ANR	986962	CompoundStatement		15:20:480:480	986855	1					
ANR	986963	ExpressionStatement	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"	2040:12:73882:73994	986855	0	True				
ANR	986964	AssignmentExpression	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		986855	0		=			
ANR	986965	ArrayIndexing	cv_frac [ i ]		986855	0					
ANR	986966	Identifier	cv_frac		986855	0					
ANR	986967	Identifier	i		986855	1					
ANR	986968	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		986855	1		-			
ANR	986969	Identifier	frac_1		986855	0					
ANR	986970	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		986855	1					
ANR	986971	Callee	gx_map_color_frac		986855	0					
ANR	986972	Identifier	gx_map_color_frac		986855	0					
ANR	986973	ArgumentList	pgs		986855	1					
ANR	986974	Argument	pgs		986855	0					
ANR	986975	Identifier	pgs		986855	0					
ANR	986976	Argument	( frac ) ( frac_1 - frac_value )		986855	1					
ANR	986977	CastExpression	( frac ) ( frac_1 - frac_value )		986855	0					
ANR	986978	CastTarget	frac		986855	0					
ANR	986979	AdditiveExpression	frac_1 - frac_value		986855	1		-			
ANR	986980	Identifier	frac_1		986855	0					
ANR	986981	Identifier	frac_value		986855	1					
ANR	986982	Argument	effective_transfer [ i ]		986855	2					
ANR	986983	ArrayIndexing	effective_transfer [ i ]		986855	0					
ANR	986984	Identifier	effective_transfer		986855	0					
ANR	986985	Identifier	i		986855	1					
ANR	986986	ElseStatement	else		986855	0					
ANR	986987	CompoundStatement		18:15:623:623	986855	0					
ANR	986988	ExpressionStatement	cv_frac [ i ] = frac_value	2043:12:74025:74048	986855	0	True				
ANR	986989	AssignmentExpression	cv_frac [ i ] = frac_value		986855	0		=			
ANR	986990	ArrayIndexing	cv_frac [ i ]		986855	0					
ANR	986991	Identifier	cv_frac		986855	0					
ANR	986992	Identifier	i		986855	1					
ANR	986993	Identifier	frac_value		986855	1					
ANR	986994	IfStatement	"if ( gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		986855	10					
ANR	986995	Condition	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	2047:8:74136:74258	986855	0	True				
ANR	986996	EqualityExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		986855	0		==			
ANR	986997	CallExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		986855	0					
ANR	986998	Callee	gx_render_device_DeviceN		986855	0					
ANR	986999	Identifier	gx_render_device_DeviceN		986855	0					
ANR	987000	ArgumentList	& ( cv_frac [ 0 ] )		986855	1					
ANR	987001	Argument	& ( cv_frac [ 0 ] )		986855	0					
ANR	987002	UnaryOperationExpression	& ( cv_frac [ 0 ] )		986855	0					
ANR	987003	UnaryOperator	&		986855	0					
ANR	987004	ArrayIndexing	cv_frac [ 0 ]		986855	1					
ANR	987005	Identifier	cv_frac		986855	0					
ANR	987006	PrimaryExpression	0		986855	1					
ANR	987007	Argument	& data -> devc		986855	1					
ANR	987008	UnaryOperationExpression	& data -> devc		986855	0					
ANR	987009	UnaryOperator	&		986855	0					
ANR	987010	PtrMemberAccess	data -> devc		986855	1					
ANR	987011	Identifier	data		986855	0					
ANR	987012	Identifier	devc		986855	1					
ANR	987013	Argument	dev		986855	2					
ANR	987014	Identifier	dev		986855	0					
ANR	987015	Argument	pgs -> dev_ht		986855	3					
ANR	987016	PtrMemberAccess	pgs -> dev_ht		986855	0					
ANR	987017	Identifier	pgs		986855	0					
ANR	987018	Identifier	dev_ht		986855	1					
ANR	987019	Argument	& pgs -> screen_phase [ select ]		986855	4					
ANR	987020	UnaryOperationExpression	& pgs -> screen_phase [ select ]		986855	0					
ANR	987021	UnaryOperator	&		986855	0					
ANR	987022	ArrayIndexing	pgs -> screen_phase [ select ]		986855	1					
ANR	987023	PtrMemberAccess	pgs -> screen_phase		986855	0					
ANR	987024	Identifier	pgs		986855	0					
ANR	987025	Identifier	screen_phase		986855	1					
ANR	987026	Identifier	select		986855	1					
ANR	987027	PrimaryExpression	1		986855	1					
ANR	987028	ExpressionStatement	"gx_color_load_select ( & data -> devc , pgs , dev , select )"	2049:8:74269:74320	986855	1	True				
ANR	987029	CallExpression	"gx_color_load_select ( & data -> devc , pgs , dev , select )"		986855	0					
ANR	987030	Callee	gx_color_load_select		986855	0					
ANR	987031	Identifier	gx_color_load_select		986855	0					
ANR	987032	ArgumentList	& data -> devc		986855	1					
ANR	987033	Argument	& data -> devc		986855	0					
ANR	987034	UnaryOperationExpression	& data -> devc		986855	0					
ANR	987035	UnaryOperator	&		986855	0					
ANR	987036	PtrMemberAccess	data -> devc		986855	1					
ANR	987037	Identifier	data		986855	0					
ANR	987038	Identifier	devc		986855	1					
ANR	987039	Argument	pgs		986855	1					
ANR	987040	Identifier	pgs		986855	0					
ANR	987041	Argument	dev		986855	2					
ANR	987042	Identifier	dev		986855	0					
ANR	987043	Argument	select		986855	3					
ANR	987044	Identifier	select		986855	0					
ANR	987045	ReturnType	static void		986855	1					
ANR	987046	Identifier	cmapper_transfer_halftone_op		986855	2					
ANR	987047	ParameterList	gx_cmapper_data * data		986855	3					
ANR	987048	Parameter	gx_cmapper_data * data	2024:29:73364:73384	986855	0	True				
ANR	987049	ParameterType	gx_cmapper_data *		986855	0					
ANR	987050	Identifier	data		986855	1					
ANR	987051	CFGEntryNode	ENTRY		986855		True				
ANR	987052	CFGExitNode	EXIT		986855		True				
ANR	987053	Symbol	* dev		986855						
ANR	987054	Symbol	frac_value		986855						
ANR	987055	Symbol	select		986855						
ANR	987056	Symbol	data		986855						
ANR	987057	Symbol	* pgs		986855						
ANR	987058	Symbol	pconc		986855						
ANR	987059	Symbol	ncomps		986855						
ANR	987060	Symbol	dev -> color_info		986855						
ANR	987061	Symbol	effective_transfer		986855						
ANR	987062	Symbol	gx_render_device_DeviceN		986855						
ANR	987063	Symbol	* effective_transfer		986855						
ANR	987064	Symbol	dev		986855						
ANR	987065	Symbol	data -> dev		986855						
ANR	987066	Symbol	cv2frac		986855						
ANR	987067	Symbol	pgs		986855						
ANR	987068	Symbol	data -> select		986855						
ANR	987069	Symbol	* pconc		986855						
ANR	987070	Symbol	frac_1		986855						
ANR	987071	Symbol	dev -> color_info . num_components		986855						
ANR	987072	Symbol	data -> conc		986855						
ANR	987073	Symbol	i		986855						
ANR	987074	Symbol	data -> pgs		986855						
ANR	987075	Symbol	k		986855						
ANR	987076	Symbol	* cv_frac		986855						
ANR	987077	Symbol	& data -> devc		986855						
ANR	987078	Symbol	pgs -> screen_phase		986855						
ANR	987079	Symbol	dev -> color_info . black_component		986855						
ANR	987080	Symbol	* i		986855						
ANR	987081	Symbol	gx_map_color_frac		986855						
ANR	987082	Symbol	cv_frac		986855						
ANR	987083	Symbol	pgs -> dev_ht		986855						
ANR	987084	Symbol	* data		986855						
ANR	987085	Function	cmapper_transfer_halftone_sub	2052:0:74325:75152							
ANR	987086	FunctionDef	cmapper_transfer_halftone_sub (gx_cmapper_data * data)		987085	0					
ANR	987087	CompoundStatement		2054:0:74390:75152	987085	0					
ANR	987088	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2055:4:74396:74434	987085	0	True				
ANR	987089	IdentifierDecl	* pconc = & data -> conc [ 0 ]		987085	0					
ANR	987090	IdentifierDeclType	gx_color_value *		987085	0					
ANR	987091	Identifier	pconc		987085	1					
ANR	987092	AssignmentExpression	* pconc = & data -> conc [ 0 ]		987085	2		=			
ANR	987093	Identifier	pconc		987085	0					
ANR	987094	UnaryOperationExpression	& data -> conc [ 0 ]		987085	1					
ANR	987095	UnaryOperator	&		987085	0					
ANR	987096	ArrayIndexing	data -> conc [ 0 ]		987085	1					
ANR	987097	PtrMemberAccess	data -> conc		987085	0					
ANR	987098	Identifier	data		987085	0					
ANR	987099	Identifier	conc		987085	1					
ANR	987100	PrimaryExpression	0		987085	1					
ANR	987101	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2056:4:74440:74473	987085	1	True				
ANR	987102	IdentifierDecl	* pgs = data -> pgs		987085	0					
ANR	987103	IdentifierDeclType	const gs_gstate *		987085	0					
ANR	987104	Identifier	pgs		987085	1					
ANR	987105	AssignmentExpression	* pgs = data -> pgs		987085	2		=			
ANR	987106	Identifier	pgs		987085	0					
ANR	987107	PtrMemberAccess	data -> pgs		987085	1					
ANR	987108	Identifier	data		987085	0					
ANR	987109	Identifier	pgs		987085	1					
ANR	987110	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2057:4:74479:74506	987085	2	True				
ANR	987111	IdentifierDecl	* dev = data -> dev		987085	0					
ANR	987112	IdentifierDeclType	gx_device *		987085	0					
ANR	987113	Identifier	dev		987085	1					
ANR	987114	AssignmentExpression	* dev = data -> dev		987085	2		=			
ANR	987115	Identifier	dev		987085	0					
ANR	987116	PtrMemberAccess	data -> dev		987085	1					
ANR	987117	Identifier	data		987085	0					
ANR	987118	Identifier	dev		987085	1					
ANR	987119	IdentifierDeclStatement	gs_color_select_t select = data -> select ;	2058:4:74512:74551	987085	3	True				
ANR	987120	IdentifierDecl	select = data -> select		987085	0					
ANR	987121	IdentifierDeclType	gs_color_select_t		987085	0					
ANR	987122	Identifier	select		987085	1					
ANR	987123	AssignmentExpression	select = data -> select		987085	2		=			
ANR	987124	Identifier	select		987085	0					
ANR	987125	PtrMemberAccess	data -> select		987085	1					
ANR	987126	Identifier	data		987085	0					
ANR	987127	Identifier	select		987085	1					
ANR	987128	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2059:4:74557:74602	987085	4	True				
ANR	987129	IdentifierDecl	ncomps = dev -> color_info . num_components		987085	0					
ANR	987130	IdentifierDeclType	uchar		987085	0					
ANR	987131	Identifier	ncomps		987085	1					
ANR	987132	AssignmentExpression	ncomps = dev -> color_info . num_components		987085	2		=			
ANR	987133	Identifier	ncomps		987085	0					
ANR	987134	MemberAccess	dev -> color_info . num_components		987085	1					
ANR	987135	PtrMemberAccess	dev -> color_info		987085	0					
ANR	987136	Identifier	dev		987085	0					
ANR	987137	Identifier	color_info		987085	1					
ANR	987138	Identifier	num_components		987085	1					
ANR	987139	IdentifierDeclStatement	frac frac_value ;	2060:4:74608:74623	987085	5	True				
ANR	987140	IdentifierDecl	frac_value		987085	0					
ANR	987141	IdentifierDeclType	frac		987085	0					
ANR	987142	Identifier	frac_value		987085	1					
ANR	987143	IdentifierDeclStatement	uchar i ;	2061:4:74629:74636	987085	6	True				
ANR	987144	IdentifierDecl	i		987085	0					
ANR	987145	IdentifierDeclType	uchar		987085	0					
ANR	987146	Identifier	i		987085	1					
ANR	987147	IdentifierDeclStatement	frac cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	2062:4:74642:74686	987085	7	True				
ANR	987148	IdentifierDecl	cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		987085	0					
ANR	987149	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		987085	0					
ANR	987150	Identifier	cv_frac		987085	1					
ANR	987151	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		987085	2					
ANR	987152	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		987085	8					
ANR	987153	ForInit	i = 0 ;	2065:9:74739:74744	987085	0	True				
ANR	987154	AssignmentExpression	i = 0		987085	0		=			
ANR	987155	Identifier	i		987085	0					
ANR	987156	PrimaryExpression	0		987085	1					
ANR	987157	Condition	i < ncomps	2065:16:74746:74755	987085	1	True				
ANR	987158	RelationalExpression	i < ncomps		987085	0		<			
ANR	987159	Identifier	i		987085	0					
ANR	987160	Identifier	ncomps		987085	1					
ANR	987161	PostIncDecOperationExpression	i ++	2065:28:74758:74760	987085	2	True				
ANR	987162	Identifier	i		987085	0					
ANR	987163	IncDec	++		987085	1					
ANR	987164	CompoundStatement		12:33:372:372	987085	3					
ANR	987165	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2066:8:74773:74803	987085	0	True				
ANR	987166	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		987085	0		=			
ANR	987167	Identifier	frac_value		987085	0					
ANR	987168	CallExpression	cv2frac ( pconc [ i ] )		987085	1					
ANR	987169	Callee	cv2frac		987085	0					
ANR	987170	Identifier	cv2frac		987085	0					
ANR	987171	ArgumentList	pconc [ i ]		987085	1					
ANR	987172	Argument	pconc [ i ]		987085	0					
ANR	987173	ArrayIndexing	pconc [ i ]		987085	0					
ANR	987174	Identifier	pconc		987085	0					
ANR	987175	Identifier	i		987085	1					
ANR	987176	ExpressionStatement	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"	2067:8:74813:74929	987085	1	True				
ANR	987177	AssignmentExpression	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		987085	0		=			
ANR	987178	ArrayIndexing	cv_frac [ i ]		987085	0					
ANR	987179	Identifier	cv_frac		987085	0					
ANR	987180	Identifier	i		987085	1					
ANR	987181	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		987085	1		-			
ANR	987182	Identifier	frac_1		987085	0					
ANR	987183	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		987085	1					
ANR	987184	Callee	gx_map_color_frac		987085	0					
ANR	987185	Identifier	gx_map_color_frac		987085	0					
ANR	987186	ArgumentList	pgs		987085	1					
ANR	987187	Argument	pgs		987085	0					
ANR	987188	Identifier	pgs		987085	0					
ANR	987189	Argument	( frac ) ( frac_1 - frac_value )		987085	1					
ANR	987190	CastExpression	( frac ) ( frac_1 - frac_value )		987085	0					
ANR	987191	CastTarget	frac		987085	0					
ANR	987192	AdditiveExpression	frac_1 - frac_value		987085	1		-			
ANR	987193	Identifier	frac_1		987085	0					
ANR	987194	Identifier	frac_value		987085	1					
ANR	987195	Argument	effective_transfer [ i ]		987085	2					
ANR	987196	ArrayIndexing	effective_transfer [ i ]		987085	0					
ANR	987197	Identifier	effective_transfer		987085	0					
ANR	987198	Identifier	i		987085	1					
ANR	987199	IfStatement	"if ( gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		987085	9					
ANR	987200	Condition	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	2071:8:74966:75088	987085	0	True				
ANR	987201	EqualityExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		987085	0		==			
ANR	987202	CallExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		987085	0					
ANR	987203	Callee	gx_render_device_DeviceN		987085	0					
ANR	987204	Identifier	gx_render_device_DeviceN		987085	0					
ANR	987205	ArgumentList	& ( cv_frac [ 0 ] )		987085	1					
ANR	987206	Argument	& ( cv_frac [ 0 ] )		987085	0					
ANR	987207	UnaryOperationExpression	& ( cv_frac [ 0 ] )		987085	0					
ANR	987208	UnaryOperator	&		987085	0					
ANR	987209	ArrayIndexing	cv_frac [ 0 ]		987085	1					
ANR	987210	Identifier	cv_frac		987085	0					
ANR	987211	PrimaryExpression	0		987085	1					
ANR	987212	Argument	& data -> devc		987085	1					
ANR	987213	UnaryOperationExpression	& data -> devc		987085	0					
ANR	987214	UnaryOperator	&		987085	0					
ANR	987215	PtrMemberAccess	data -> devc		987085	1					
ANR	987216	Identifier	data		987085	0					
ANR	987217	Identifier	devc		987085	1					
ANR	987218	Argument	dev		987085	2					
ANR	987219	Identifier	dev		987085	0					
ANR	987220	Argument	pgs -> dev_ht		987085	3					
ANR	987221	PtrMemberAccess	pgs -> dev_ht		987085	0					
ANR	987222	Identifier	pgs		987085	0					
ANR	987223	Identifier	dev_ht		987085	1					
ANR	987224	Argument	& pgs -> screen_phase [ select ]		987085	4					
ANR	987225	UnaryOperationExpression	& pgs -> screen_phase [ select ]		987085	0					
ANR	987226	UnaryOperator	&		987085	0					
ANR	987227	ArrayIndexing	pgs -> screen_phase [ select ]		987085	1					
ANR	987228	PtrMemberAccess	pgs -> screen_phase		987085	0					
ANR	987229	Identifier	pgs		987085	0					
ANR	987230	Identifier	screen_phase		987085	1					
ANR	987231	Identifier	select		987085	1					
ANR	987232	PrimaryExpression	1		987085	1					
ANR	987233	ExpressionStatement	"gx_color_load_select ( & data -> devc , pgs , dev , select )"	2073:8:75099:75150	987085	1	True				
ANR	987234	CallExpression	"gx_color_load_select ( & data -> devc , pgs , dev , select )"		987085	0					
ANR	987235	Callee	gx_color_load_select		987085	0					
ANR	987236	Identifier	gx_color_load_select		987085	0					
ANR	987237	ArgumentList	& data -> devc		987085	1					
ANR	987238	Argument	& data -> devc		987085	0					
ANR	987239	UnaryOperationExpression	& data -> devc		987085	0					
ANR	987240	UnaryOperator	&		987085	0					
ANR	987241	PtrMemberAccess	data -> devc		987085	1					
ANR	987242	Identifier	data		987085	0					
ANR	987243	Identifier	devc		987085	1					
ANR	987244	Argument	pgs		987085	1					
ANR	987245	Identifier	pgs		987085	0					
ANR	987246	Argument	dev		987085	2					
ANR	987247	Identifier	dev		987085	0					
ANR	987248	Argument	select		987085	3					
ANR	987249	Identifier	select		987085	0					
ANR	987250	ReturnType	static void		987085	1					
ANR	987251	Identifier	cmapper_transfer_halftone_sub		987085	2					
ANR	987252	ParameterList	gx_cmapper_data * data		987085	3					
ANR	987253	Parameter	gx_cmapper_data * data	2053:30:74367:74387	987085	0	True				
ANR	987254	ParameterType	gx_cmapper_data *		987085	0					
ANR	987255	Identifier	data		987085	1					
ANR	987256	CFGEntryNode	ENTRY		987085		True				
ANR	987257	CFGExitNode	EXIT		987085		True				
ANR	987258	Symbol	* dev		987085						
ANR	987259	Symbol	frac_value		987085						
ANR	987260	Symbol	select		987085						
ANR	987261	Symbol	data		987085						
ANR	987262	Symbol	* pgs		987085						
ANR	987263	Symbol	pconc		987085						
ANR	987264	Symbol	ncomps		987085						
ANR	987265	Symbol	dev -> color_info		987085						
ANR	987266	Symbol	effective_transfer		987085						
ANR	987267	Symbol	gx_render_device_DeviceN		987085						
ANR	987268	Symbol	* effective_transfer		987085						
ANR	987269	Symbol	dev		987085						
ANR	987270	Symbol	data -> dev		987085						
ANR	987271	Symbol	cv2frac		987085						
ANR	987272	Symbol	pgs		987085						
ANR	987273	Symbol	data -> select		987085						
ANR	987274	Symbol	* pconc		987085						
ANR	987275	Symbol	frac_1		987085						
ANR	987276	Symbol	dev -> color_info . num_components		987085						
ANR	987277	Symbol	data -> conc		987085						
ANR	987278	Symbol	i		987085						
ANR	987279	Symbol	data -> pgs		987085						
ANR	987280	Symbol	* cv_frac		987085						
ANR	987281	Symbol	& data -> devc		987085						
ANR	987282	Symbol	pgs -> screen_phase		987085						
ANR	987283	Symbol	* i		987085						
ANR	987284	Symbol	gx_map_color_frac		987085						
ANR	987285	Symbol	cv_frac		987085						
ANR	987286	Symbol	pgs -> dev_ht		987085						
ANR	987287	Symbol	* data		987085						
ANR	987288	Function	cmapper_transfer_add	2076:0:75155:75950							
ANR	987289	FunctionDef	cmapper_transfer_add (gx_cmapper_data * data)		987288	0					
ANR	987290	CompoundStatement		2078:0:75211:75950	987288	0					
ANR	987291	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2079:4:75217:75255	987288	0	True				
ANR	987292	IdentifierDecl	* pconc = & data -> conc [ 0 ]		987288	0					
ANR	987293	IdentifierDeclType	gx_color_value *		987288	0					
ANR	987294	Identifier	pconc		987288	1					
ANR	987295	AssignmentExpression	* pconc = & data -> conc [ 0 ]		987288	2		=			
ANR	987296	Identifier	pconc		987288	0					
ANR	987297	UnaryOperationExpression	& data -> conc [ 0 ]		987288	1					
ANR	987298	UnaryOperator	&		987288	0					
ANR	987299	ArrayIndexing	data -> conc [ 0 ]		987288	1					
ANR	987300	PtrMemberAccess	data -> conc		987288	0					
ANR	987301	Identifier	data		987288	0					
ANR	987302	Identifier	conc		987288	1					
ANR	987303	PrimaryExpression	0		987288	1					
ANR	987304	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2080:4:75261:75294	987288	1	True				
ANR	987305	IdentifierDecl	* pgs = data -> pgs		987288	0					
ANR	987306	IdentifierDeclType	const gs_gstate *		987288	0					
ANR	987307	Identifier	pgs		987288	1					
ANR	987308	AssignmentExpression	* pgs = data -> pgs		987288	2		=			
ANR	987309	Identifier	pgs		987288	0					
ANR	987310	PtrMemberAccess	data -> pgs		987288	1					
ANR	987311	Identifier	data		987288	0					
ANR	987312	Identifier	pgs		987288	1					
ANR	987313	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2081:4:75300:75327	987288	2	True				
ANR	987314	IdentifierDecl	* dev = data -> dev		987288	0					
ANR	987315	IdentifierDeclType	gx_device *		987288	0					
ANR	987316	Identifier	dev		987288	1					
ANR	987317	AssignmentExpression	* dev = data -> dev		987288	2		=			
ANR	987318	Identifier	dev		987288	0					
ANR	987319	PtrMemberAccess	data -> dev		987288	1					
ANR	987320	Identifier	data		987288	0					
ANR	987321	Identifier	dev		987288	1					
ANR	987322	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2082:4:75333:75378	987288	3	True				
ANR	987323	IdentifierDecl	ncomps = dev -> color_info . num_components		987288	0					
ANR	987324	IdentifierDeclType	uchar		987288	0					
ANR	987325	Identifier	ncomps		987288	1					
ANR	987326	AssignmentExpression	ncomps = dev -> color_info . num_components		987288	2		=			
ANR	987327	Identifier	ncomps		987288	0					
ANR	987328	MemberAccess	dev -> color_info . num_components		987288	1					
ANR	987329	PtrMemberAccess	dev -> color_info		987288	0					
ANR	987330	Identifier	dev		987288	0					
ANR	987331	Identifier	color_info		987288	1					
ANR	987332	Identifier	num_components		987288	1					
ANR	987333	IdentifierDeclStatement	frac frac_value ;	2083:4:75384:75399	987288	4	True				
ANR	987334	IdentifierDecl	frac_value		987288	0					
ANR	987335	IdentifierDeclType	frac		987288	0					
ANR	987336	Identifier	frac_value		987288	1					
ANR	987337	IdentifierDeclStatement	uchar i ;	2084:4:75405:75412	987288	5	True				
ANR	987338	IdentifierDecl	i		987288	0					
ANR	987339	IdentifierDeclType	uchar		987288	0					
ANR	987340	Identifier	i		987288	1					
ANR	987341	IdentifierDeclStatement	gx_color_index color ;	2085:4:75418:75438	987288	6	True				
ANR	987342	IdentifierDecl	color		987288	0					
ANR	987343	IdentifierDeclType	gx_color_index		987288	0					
ANR	987344	Identifier	color		987288	1					
ANR	987345	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		987288	7					
ANR	987346	ForInit	i = 0 ;	2088:9:75491:75496	987288	0	True				
ANR	987347	AssignmentExpression	i = 0		987288	0		=			
ANR	987348	Identifier	i		987288	0					
ANR	987349	PrimaryExpression	0		987288	1					
ANR	987350	Condition	i < ncomps	2088:16:75498:75507	987288	1	True				
ANR	987351	RelationalExpression	i < ncomps		987288	0		<			
ANR	987352	Identifier	i		987288	0					
ANR	987353	Identifier	ncomps		987288	1					
ANR	987354	PostIncDecOperationExpression	i ++	2088:28:75510:75512	987288	2	True				
ANR	987355	Identifier	i		987288	0					
ANR	987356	IncDec	++		987288	1					
ANR	987357	CompoundStatement		11:33:303:303	987288	3					
ANR	987358	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2089:8:75525:75555	987288	0	True				
ANR	987359	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		987288	0		=			
ANR	987360	Identifier	frac_value		987288	0					
ANR	987361	CallExpression	cv2frac ( pconc [ i ] )		987288	1					
ANR	987362	Callee	cv2frac		987288	0					
ANR	987363	Identifier	cv2frac		987288	0					
ANR	987364	ArgumentList	pconc [ i ]		987288	1					
ANR	987365	Argument	pconc [ i ]		987288	0					
ANR	987366	ArrayIndexing	pconc [ i ]		987288	0					
ANR	987367	Identifier	pconc		987288	0					
ANR	987368	Identifier	i		987288	1					
ANR	987369	ExpressionStatement	"frac_value = gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"	2090:8:75565:75667	987288	1	True				
ANR	987370	AssignmentExpression	"frac_value = gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"		987288	0		=			
ANR	987371	Identifier	frac_value		987288	0					
ANR	987372	CallExpression	"gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"		987288	1					
ANR	987373	Callee	gx_map_color_frac		987288	0					
ANR	987374	Identifier	gx_map_color_frac		987288	0					
ANR	987375	ArgumentList	pgs		987288	1					
ANR	987376	Argument	pgs		987288	0					
ANR	987377	Identifier	pgs		987288	0					
ANR	987378	Argument	frac_value		987288	1					
ANR	987379	Identifier	frac_value		987288	0					
ANR	987380	Argument	effective_transfer [ i ]		987288	2					
ANR	987381	ArrayIndexing	effective_transfer [ i ]		987288	0					
ANR	987382	Identifier	effective_transfer		987288	0					
ANR	987383	Identifier	i		987288	1					
ANR	987384	ExpressionStatement	pconc [ i ] = frac2cv ( frac_value )	2092:8:75677:75707	987288	2	True				
ANR	987385	AssignmentExpression	pconc [ i ] = frac2cv ( frac_value )		987288	0		=			
ANR	987386	ArrayIndexing	pconc [ i ]		987288	0					
ANR	987387	Identifier	pconc		987288	0					
ANR	987388	Identifier	i		987288	1					
ANR	987389	CallExpression	frac2cv ( frac_value )		987288	1					
ANR	987390	Callee	frac2cv		987288	0					
ANR	987391	Identifier	frac2cv		987288	0					
ANR	987392	ArgumentList	frac_value		987288	1					
ANR	987393	Argument	frac_value		987288	0					
ANR	987394	Identifier	frac_value		987288	0					
ANR	987395	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"	2095:4:75740:75793	987288	8	True				
ANR	987396	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		987288	0		=			
ANR	987397	Identifier	color		987288	0					
ANR	987398	CallExpression	"dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		987288	1					
ANR	987399	Callee	"dev_proc ( dev , encode_color )"		987288	0					
ANR	987400	CallExpression	"dev_proc ( dev , encode_color )"		987288	0					
ANR	987401	Callee	dev_proc		987288	0					
ANR	987402	Identifier	dev_proc		987288	0					
ANR	987403	ArgumentList	dev		987288	1					
ANR	987404	Argument	dev		987288	0					
ANR	987405	Identifier	dev		987288	0					
ANR	987406	Argument	encode_color		987288	1					
ANR	987407	Identifier	encode_color		987288	0					
ANR	987408	ArgumentList	dev		987288	1					
ANR	987409	Argument	dev		987288	0					
ANR	987410	Identifier	dev		987288	0					
ANR	987411	Argument	& ( pconc [ 0 ] )		987288	1					
ANR	987412	UnaryOperationExpression	& ( pconc [ 0 ] )		987288	0					
ANR	987413	UnaryOperator	&		987288	0					
ANR	987414	ArrayIndexing	pconc [ 0 ]		987288	1					
ANR	987415	Identifier	pconc		987288	0					
ANR	987416	PrimaryExpression	0		987288	1					
ANR	987417	IfStatement	if ( color != gx_no_color_index )		987288	9					
ANR	987418	Condition	color != gx_no_color_index	2097:8:75878:75903	987288	0	True				
ANR	987419	EqualityExpression	color != gx_no_color_index		987288	0		!=			
ANR	987420	Identifier	color		987288	0					
ANR	987421	Identifier	gx_no_color_index		987288	1					
ANR	987422	ExpressionStatement	"color_set_pure ( & data -> devc , color )"	2098:8:75914:75948	987288	1	True				
ANR	987423	CallExpression	"color_set_pure ( & data -> devc , color )"		987288	0					
ANR	987424	Callee	color_set_pure		987288	0					
ANR	987425	Identifier	color_set_pure		987288	0					
ANR	987426	ArgumentList	& data -> devc		987288	1					
ANR	987427	Argument	& data -> devc		987288	0					
ANR	987428	UnaryOperationExpression	& data -> devc		987288	0					
ANR	987429	UnaryOperator	&		987288	0					
ANR	987430	PtrMemberAccess	data -> devc		987288	1					
ANR	987431	Identifier	data		987288	0					
ANR	987432	Identifier	devc		987288	1					
ANR	987433	Argument	color		987288	1					
ANR	987434	Identifier	color		987288	0					
ANR	987435	ReturnType	static void		987288	1					
ANR	987436	Identifier	cmapper_transfer_add		987288	2					
ANR	987437	ParameterList	gx_cmapper_data * data		987288	3					
ANR	987438	Parameter	gx_cmapper_data * data	2077:21:75188:75208	987288	0	True				
ANR	987439	ParameterType	gx_cmapper_data *		987288	0					
ANR	987440	Identifier	data		987288	1					
ANR	987441	CFGEntryNode	ENTRY		987288		True				
ANR	987442	CFGExitNode	EXIT		987288		True				
ANR	987443	Symbol	* dev		987288						
ANR	987444	Symbol	frac_value		987288						
ANR	987445	Symbol	data		987288						
ANR	987446	Symbol	color		987288						
ANR	987447	Symbol	encode_color		987288						
ANR	987448	Symbol	pconc		987288						
ANR	987449	Symbol	ncomps		987288						
ANR	987450	Symbol	dev -> color_info		987288						
ANR	987451	Symbol	effective_transfer		987288						
ANR	987452	Symbol	* effective_transfer		987288						
ANR	987453	Symbol	gx_no_color_index		987288						
ANR	987454	Symbol	dev		987288						
ANR	987455	Symbol	data -> dev		987288						
ANR	987456	Symbol	dev_proc		987288						
ANR	987457	Symbol	cv2frac		987288						
ANR	987458	Symbol	pgs		987288						
ANR	987459	Symbol	* pconc		987288						
ANR	987460	Symbol	dev -> color_info . num_components		987288						
ANR	987461	Symbol	data -> conc		987288						
ANR	987462	Symbol	i		987288						
ANR	987463	Symbol	data -> pgs		987288						
ANR	987464	Symbol	& data -> devc		987288						
ANR	987465	Symbol	* i		987288						
ANR	987466	Symbol	gx_map_color_frac		987288						
ANR	987467	Symbol	* data		987288						
ANR	987468	Symbol	frac2cv		987288						
ANR	987469	Function	cmapper_transfer_op	2101:0:75953:76704							
ANR	987470	FunctionDef	cmapper_transfer_op (gx_cmapper_data * data)		987469	0					
ANR	987471	CompoundStatement		2103:0:76008:76704	987469	0					
ANR	987472	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2104:4:76014:76052	987469	0	True				
ANR	987473	IdentifierDecl	* pconc = & data -> conc [ 0 ]		987469	0					
ANR	987474	IdentifierDeclType	gx_color_value *		987469	0					
ANR	987475	Identifier	pconc		987469	1					
ANR	987476	AssignmentExpression	* pconc = & data -> conc [ 0 ]		987469	2		=			
ANR	987477	Identifier	pconc		987469	0					
ANR	987478	UnaryOperationExpression	& data -> conc [ 0 ]		987469	1					
ANR	987479	UnaryOperator	&		987469	0					
ANR	987480	ArrayIndexing	data -> conc [ 0 ]		987469	1					
ANR	987481	PtrMemberAccess	data -> conc		987469	0					
ANR	987482	Identifier	data		987469	0					
ANR	987483	Identifier	conc		987469	1					
ANR	987484	PrimaryExpression	0		987469	1					
ANR	987485	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2105:4:76058:76091	987469	1	True				
ANR	987486	IdentifierDecl	* pgs = data -> pgs		987469	0					
ANR	987487	IdentifierDeclType	const gs_gstate *		987469	0					
ANR	987488	Identifier	pgs		987469	1					
ANR	987489	AssignmentExpression	* pgs = data -> pgs		987469	2		=			
ANR	987490	Identifier	pgs		987469	0					
ANR	987491	PtrMemberAccess	data -> pgs		987469	1					
ANR	987492	Identifier	data		987469	0					
ANR	987493	Identifier	pgs		987469	1					
ANR	987494	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2106:4:76097:76124	987469	2	True				
ANR	987495	IdentifierDecl	* dev = data -> dev		987469	0					
ANR	987496	IdentifierDeclType	gx_device *		987469	0					
ANR	987497	Identifier	dev		987469	1					
ANR	987498	AssignmentExpression	* dev = data -> dev		987469	2		=			
ANR	987499	Identifier	dev		987469	0					
ANR	987500	PtrMemberAccess	data -> dev		987469	1					
ANR	987501	Identifier	data		987469	0					
ANR	987502	Identifier	dev		987469	1					
ANR	987503	IdentifierDeclStatement	frac frac_value ;	2107:4:76130:76145	987469	3	True				
ANR	987504	IdentifierDecl	frac_value		987469	0					
ANR	987505	IdentifierDeclType	frac		987469	0					
ANR	987506	Identifier	frac_value		987469	1					
ANR	987507	IdentifierDeclStatement	gx_color_index color ;	2108:4:76151:76171	987469	4	True				
ANR	987508	IdentifierDecl	color		987469	0					
ANR	987509	IdentifierDeclType	gx_color_index		987469	0					
ANR	987510	Identifier	color		987469	1					
ANR	987511	IdentifierDeclStatement	uint k = dev -> color_info . black_component ;	2110:4:76178:76218	987469	5	True				
ANR	987512	IdentifierDecl	k = dev -> color_info . black_component		987469	0					
ANR	987513	IdentifierDeclType	uint		987469	0					
ANR	987514	Identifier	k		987469	1					
ANR	987515	AssignmentExpression	k = dev -> color_info . black_component		987469	2		=			
ANR	987516	Identifier	k		987469	0					
ANR	987517	MemberAccess	dev -> color_info . black_component		987469	1					
ANR	987518	PtrMemberAccess	dev -> color_info		987469	0					
ANR	987519	Identifier	dev		987469	0					
ANR	987520	Identifier	color_info		987469	1					
ANR	987521	Identifier	black_component		987469	1					
ANR	987522	ExpressionStatement	frac_value = cv2frac ( pconc [ k ] )	2112:4:76283:76313	987469	6	True				
ANR	987523	AssignmentExpression	frac_value = cv2frac ( pconc [ k ] )		987469	0		=			
ANR	987524	Identifier	frac_value		987469	0					
ANR	987525	CallExpression	cv2frac ( pconc [ k ] )		987469	1					
ANR	987526	Callee	cv2frac		987469	0					
ANR	987527	Identifier	cv2frac		987469	0					
ANR	987528	ArgumentList	pconc [ k ]		987469	1					
ANR	987529	Argument	pconc [ k ]		987469	0					
ANR	987530	ArrayIndexing	pconc [ k ]		987469	0					
ANR	987531	Identifier	pconc		987469	0					
ANR	987532	Identifier	k		987469	1					
ANR	987533	ExpressionStatement	"frac_value = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ k ] )"	2113:4:76319:76431	987469	7	True				
ANR	987534	AssignmentExpression	"frac_value = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ k ] )"		987469	0		=			
ANR	987535	Identifier	frac_value		987469	0					
ANR	987536	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ k ] )"		987469	1		-			
ANR	987537	Identifier	frac_1		987469	0					
ANR	987538	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ k ] )"		987469	1					
ANR	987539	Callee	gx_map_color_frac		987469	0					
ANR	987540	Identifier	gx_map_color_frac		987469	0					
ANR	987541	ArgumentList	pgs		987469	1					
ANR	987542	Argument	pgs		987469	0					
ANR	987543	Identifier	pgs		987469	0					
ANR	987544	Argument	( frac ) ( frac_1 - frac_value )		987469	1					
ANR	987545	CastExpression	( frac ) ( frac_1 - frac_value )		987469	0					
ANR	987546	CastTarget	frac		987469	0					
ANR	987547	AdditiveExpression	frac_1 - frac_value		987469	1		-			
ANR	987548	Identifier	frac_1		987469	0					
ANR	987549	Identifier	frac_value		987469	1					
ANR	987550	Argument	effective_transfer [ k ]		987469	2					
ANR	987551	ArrayIndexing	effective_transfer [ k ]		987469	0					
ANR	987552	Identifier	effective_transfer		987469	0					
ANR	987553	Identifier	k		987469	1					
ANR	987554	ExpressionStatement	pconc [ k ] = frac2cv ( frac_value )	2115:4:76437:76467	987469	8	True				
ANR	987555	AssignmentExpression	pconc [ k ] = frac2cv ( frac_value )		987469	0		=			
ANR	987556	ArrayIndexing	pconc [ k ]		987469	0					
ANR	987557	Identifier	pconc		987469	0					
ANR	987558	Identifier	k		987469	1					
ANR	987559	CallExpression	frac2cv ( frac_value )		987469	1					
ANR	987560	Callee	frac2cv		987469	0					
ANR	987561	Identifier	frac2cv		987469	0					
ANR	987562	ArgumentList	frac_value		987469	1					
ANR	987563	Argument	frac_value		987469	0					
ANR	987564	Identifier	frac_value		987469	0					
ANR	987565	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"	2117:4:76494:76547	987469	9	True				
ANR	987566	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		987469	0		=			
ANR	987567	Identifier	color		987469	0					
ANR	987568	CallExpression	"dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		987469	1					
ANR	987569	Callee	"dev_proc ( dev , encode_color )"		987469	0					
ANR	987570	CallExpression	"dev_proc ( dev , encode_color )"		987469	0					
ANR	987571	Callee	dev_proc		987469	0					
ANR	987572	Identifier	dev_proc		987469	0					
ANR	987573	ArgumentList	dev		987469	1					
ANR	987574	Argument	dev		987469	0					
ANR	987575	Identifier	dev		987469	0					
ANR	987576	Argument	encode_color		987469	1					
ANR	987577	Identifier	encode_color		987469	0					
ANR	987578	ArgumentList	dev		987469	1					
ANR	987579	Argument	dev		987469	0					
ANR	987580	Identifier	dev		987469	0					
ANR	987581	Argument	& ( pconc [ 0 ] )		987469	1					
ANR	987582	UnaryOperationExpression	& ( pconc [ 0 ] )		987469	0					
ANR	987583	UnaryOperator	&		987469	0					
ANR	987584	ArrayIndexing	pconc [ 0 ]		987469	1					
ANR	987585	Identifier	pconc		987469	0					
ANR	987586	PrimaryExpression	0		987469	1					
ANR	987587	IfStatement	if ( color != gx_no_color_index )		987469	10					
ANR	987588	Condition	color != gx_no_color_index	2119:8:76632:76657	987469	0	True				
ANR	987589	EqualityExpression	color != gx_no_color_index		987469	0		!=			
ANR	987590	Identifier	color		987469	0					
ANR	987591	Identifier	gx_no_color_index		987469	1					
ANR	987592	ExpressionStatement	"color_set_pure ( & data -> devc , color )"	2120:8:76668:76702	987469	1	True				
ANR	987593	CallExpression	"color_set_pure ( & data -> devc , color )"		987469	0					
ANR	987594	Callee	color_set_pure		987469	0					
ANR	987595	Identifier	color_set_pure		987469	0					
ANR	987596	ArgumentList	& data -> devc		987469	1					
ANR	987597	Argument	& data -> devc		987469	0					
ANR	987598	UnaryOperationExpression	& data -> devc		987469	0					
ANR	987599	UnaryOperator	&		987469	0					
ANR	987600	PtrMemberAccess	data -> devc		987469	1					
ANR	987601	Identifier	data		987469	0					
ANR	987602	Identifier	devc		987469	1					
ANR	987603	Argument	color		987469	1					
ANR	987604	Identifier	color		987469	0					
ANR	987605	ReturnType	static void		987469	1					
ANR	987606	Identifier	cmapper_transfer_op		987469	2					
ANR	987607	ParameterList	gx_cmapper_data * data		987469	3					
ANR	987608	Parameter	gx_cmapper_data * data	2102:20:75985:76005	987469	0	True				
ANR	987609	ParameterType	gx_cmapper_data *		987469	0					
ANR	987610	Identifier	data		987469	1					
ANR	987611	CFGEntryNode	ENTRY		987469		True				
ANR	987612	CFGExitNode	EXIT		987469		True				
ANR	987613	Symbol	frac_value		987469						
ANR	987614	Symbol	* dev		987469						
ANR	987615	Symbol	data		987469						
ANR	987616	Symbol	color		987469						
ANR	987617	Symbol	encode_color		987469						
ANR	987618	Symbol	pconc		987469						
ANR	987619	Symbol	dev -> color_info		987469						
ANR	987620	Symbol	effective_transfer		987469						
ANR	987621	Symbol	* effective_transfer		987469						
ANR	987622	Symbol	gx_no_color_index		987469						
ANR	987623	Symbol	dev		987469						
ANR	987624	Symbol	data -> dev		987469						
ANR	987625	Symbol	dev_proc		987469						
ANR	987626	Symbol	cv2frac		987469						
ANR	987627	Symbol	pgs		987469						
ANR	987628	Symbol	* pconc		987469						
ANR	987629	Symbol	frac_1		987469						
ANR	987630	Symbol	data -> conc		987469						
ANR	987631	Symbol	data -> pgs		987469						
ANR	987632	Symbol	k		987469						
ANR	987633	Symbol	& data -> devc		987469						
ANR	987634	Symbol	dev -> color_info . black_component		987469						
ANR	987635	Symbol	gx_map_color_frac		987469						
ANR	987636	Symbol	* k		987469						
ANR	987637	Symbol	* data		987469						
ANR	987638	Symbol	frac2cv		987469						
ANR	987639	Function	cmapper_transfer_sub	2123:0:76707:77516							
ANR	987640	FunctionDef	cmapper_transfer_sub (gx_cmapper_data * data)		987639	0					
ANR	987641	CompoundStatement		2125:0:76763:77516	987639	0					
ANR	987642	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2126:4:76769:76807	987639	0	True				
ANR	987643	IdentifierDecl	* pconc = & data -> conc [ 0 ]		987639	0					
ANR	987644	IdentifierDeclType	gx_color_value *		987639	0					
ANR	987645	Identifier	pconc		987639	1					
ANR	987646	AssignmentExpression	* pconc = & data -> conc [ 0 ]		987639	2		=			
ANR	987647	Identifier	pconc		987639	0					
ANR	987648	UnaryOperationExpression	& data -> conc [ 0 ]		987639	1					
ANR	987649	UnaryOperator	&		987639	0					
ANR	987650	ArrayIndexing	data -> conc [ 0 ]		987639	1					
ANR	987651	PtrMemberAccess	data -> conc		987639	0					
ANR	987652	Identifier	data		987639	0					
ANR	987653	Identifier	conc		987639	1					
ANR	987654	PrimaryExpression	0		987639	1					
ANR	987655	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2127:4:76813:76846	987639	1	True				
ANR	987656	IdentifierDecl	* pgs = data -> pgs		987639	0					
ANR	987657	IdentifierDeclType	const gs_gstate *		987639	0					
ANR	987658	Identifier	pgs		987639	1					
ANR	987659	AssignmentExpression	* pgs = data -> pgs		987639	2		=			
ANR	987660	Identifier	pgs		987639	0					
ANR	987661	PtrMemberAccess	data -> pgs		987639	1					
ANR	987662	Identifier	data		987639	0					
ANR	987663	Identifier	pgs		987639	1					
ANR	987664	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2128:4:76852:76879	987639	2	True				
ANR	987665	IdentifierDecl	* dev = data -> dev		987639	0					
ANR	987666	IdentifierDeclType	gx_device *		987639	0					
ANR	987667	Identifier	dev		987639	1					
ANR	987668	AssignmentExpression	* dev = data -> dev		987639	2		=			
ANR	987669	Identifier	dev		987639	0					
ANR	987670	PtrMemberAccess	data -> dev		987639	1					
ANR	987671	Identifier	data		987639	0					
ANR	987672	Identifier	dev		987639	1					
ANR	987673	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2129:4:76885:76930	987639	3	True				
ANR	987674	IdentifierDecl	ncomps = dev -> color_info . num_components		987639	0					
ANR	987675	IdentifierDeclType	uchar		987639	0					
ANR	987676	Identifier	ncomps		987639	1					
ANR	987677	AssignmentExpression	ncomps = dev -> color_info . num_components		987639	2		=			
ANR	987678	Identifier	ncomps		987639	0					
ANR	987679	MemberAccess	dev -> color_info . num_components		987639	1					
ANR	987680	PtrMemberAccess	dev -> color_info		987639	0					
ANR	987681	Identifier	dev		987639	0					
ANR	987682	Identifier	color_info		987639	1					
ANR	987683	Identifier	num_components		987639	1					
ANR	987684	IdentifierDeclStatement	frac frac_value ;	2130:4:76936:76951	987639	4	True				
ANR	987685	IdentifierDecl	frac_value		987639	0					
ANR	987686	IdentifierDeclType	frac		987639	0					
ANR	987687	Identifier	frac_value		987639	1					
ANR	987688	IdentifierDeclStatement	uchar i ;	2131:4:76957:76964	987639	5	True				
ANR	987689	IdentifierDecl	i		987639	0					
ANR	987690	IdentifierDeclType	uchar		987639	0					
ANR	987691	Identifier	i		987639	1					
ANR	987692	IdentifierDeclStatement	gx_color_index color ;	2132:4:76970:76990	987639	6	True				
ANR	987693	IdentifierDecl	color		987639	0					
ANR	987694	IdentifierDeclType	gx_color_index		987639	0					
ANR	987695	Identifier	color		987639	1					
ANR	987696	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		987639	7					
ANR	987697	ForInit	i = 0 ;	2135:9:77043:77048	987639	0	True				
ANR	987698	AssignmentExpression	i = 0		987639	0		=			
ANR	987699	Identifier	i		987639	0					
ANR	987700	PrimaryExpression	0		987639	1					
ANR	987701	Condition	i < ncomps	2135:16:77050:77059	987639	1	True				
ANR	987702	RelationalExpression	i < ncomps		987639	0		<			
ANR	987703	Identifier	i		987639	0					
ANR	987704	Identifier	ncomps		987639	1					
ANR	987705	PostIncDecOperationExpression	i ++	2135:28:77062:77064	987639	2	True				
ANR	987706	Identifier	i		987639	0					
ANR	987707	IncDec	++		987639	1					
ANR	987708	CompoundStatement		11:33:303:303	987639	3					
ANR	987709	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2136:8:77077:77107	987639	0	True				
ANR	987710	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		987639	0		=			
ANR	987711	Identifier	frac_value		987639	0					
ANR	987712	CallExpression	cv2frac ( pconc [ i ] )		987639	1					
ANR	987713	Callee	cv2frac		987639	0					
ANR	987714	Identifier	cv2frac		987639	0					
ANR	987715	ArgumentList	pconc [ i ]		987639	1					
ANR	987716	Argument	pconc [ i ]		987639	0					
ANR	987717	ArrayIndexing	pconc [ i ]		987639	0					
ANR	987718	Identifier	pconc		987639	0					
ANR	987719	Identifier	i		987639	1					
ANR	987720	ExpressionStatement	"frac_value = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"	2137:8:77117:77233	987639	1	True				
ANR	987721	AssignmentExpression	"frac_value = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		987639	0		=			
ANR	987722	Identifier	frac_value		987639	0					
ANR	987723	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		987639	1		-			
ANR	987724	Identifier	frac_1		987639	0					
ANR	987725	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		987639	1					
ANR	987726	Callee	gx_map_color_frac		987639	0					
ANR	987727	Identifier	gx_map_color_frac		987639	0					
ANR	987728	ArgumentList	pgs		987639	1					
ANR	987729	Argument	pgs		987639	0					
ANR	987730	Identifier	pgs		987639	0					
ANR	987731	Argument	( frac ) ( frac_1 - frac_value )		987639	1					
ANR	987732	CastExpression	( frac ) ( frac_1 - frac_value )		987639	0					
ANR	987733	CastTarget	frac		987639	0					
ANR	987734	AdditiveExpression	frac_1 - frac_value		987639	1		-			
ANR	987735	Identifier	frac_1		987639	0					
ANR	987736	Identifier	frac_value		987639	1					
ANR	987737	Argument	effective_transfer [ i ]		987639	2					
ANR	987738	ArrayIndexing	effective_transfer [ i ]		987639	0					
ANR	987739	Identifier	effective_transfer		987639	0					
ANR	987740	Identifier	i		987639	1					
ANR	987741	ExpressionStatement	pconc [ i ] = frac2cv ( frac_value )	2139:8:77243:77273	987639	2	True				
ANR	987742	AssignmentExpression	pconc [ i ] = frac2cv ( frac_value )		987639	0		=			
ANR	987743	ArrayIndexing	pconc [ i ]		987639	0					
ANR	987744	Identifier	pconc		987639	0					
ANR	987745	Identifier	i		987639	1					
ANR	987746	CallExpression	frac2cv ( frac_value )		987639	1					
ANR	987747	Callee	frac2cv		987639	0					
ANR	987748	Identifier	frac2cv		987639	0					
ANR	987749	ArgumentList	frac_value		987639	1					
ANR	987750	Argument	frac_value		987639	0					
ANR	987751	Identifier	frac_value		987639	0					
ANR	987752	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"	2142:4:77306:77359	987639	8	True				
ANR	987753	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		987639	0		=			
ANR	987754	Identifier	color		987639	0					
ANR	987755	CallExpression	"dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		987639	1					
ANR	987756	Callee	"dev_proc ( dev , encode_color )"		987639	0					
ANR	987757	CallExpression	"dev_proc ( dev , encode_color )"		987639	0					
ANR	987758	Callee	dev_proc		987639	0					
ANR	987759	Identifier	dev_proc		987639	0					
ANR	987760	ArgumentList	dev		987639	1					
ANR	987761	Argument	dev		987639	0					
ANR	987762	Identifier	dev		987639	0					
ANR	987763	Argument	encode_color		987639	1					
ANR	987764	Identifier	encode_color		987639	0					
ANR	987765	ArgumentList	dev		987639	1					
ANR	987766	Argument	dev		987639	0					
ANR	987767	Identifier	dev		987639	0					
ANR	987768	Argument	& ( pconc [ 0 ] )		987639	1					
ANR	987769	UnaryOperationExpression	& ( pconc [ 0 ] )		987639	0					
ANR	987770	UnaryOperator	&		987639	0					
ANR	987771	ArrayIndexing	pconc [ 0 ]		987639	1					
ANR	987772	Identifier	pconc		987639	0					
ANR	987773	PrimaryExpression	0		987639	1					
ANR	987774	IfStatement	if ( color != gx_no_color_index )		987639	9					
ANR	987775	Condition	color != gx_no_color_index	2144:8:77444:77469	987639	0	True				
ANR	987776	EqualityExpression	color != gx_no_color_index		987639	0		!=			
ANR	987777	Identifier	color		987639	0					
ANR	987778	Identifier	gx_no_color_index		987639	1					
ANR	987779	ExpressionStatement	"color_set_pure ( & data -> devc , color )"	2145:8:77480:77514	987639	1	True				
ANR	987780	CallExpression	"color_set_pure ( & data -> devc , color )"		987639	0					
ANR	987781	Callee	color_set_pure		987639	0					
ANR	987782	Identifier	color_set_pure		987639	0					
ANR	987783	ArgumentList	& data -> devc		987639	1					
ANR	987784	Argument	& data -> devc		987639	0					
ANR	987785	UnaryOperationExpression	& data -> devc		987639	0					
ANR	987786	UnaryOperator	&		987639	0					
ANR	987787	PtrMemberAccess	data -> devc		987639	1					
ANR	987788	Identifier	data		987639	0					
ANR	987789	Identifier	devc		987639	1					
ANR	987790	Argument	color		987639	1					
ANR	987791	Identifier	color		987639	0					
ANR	987792	ReturnType	static void		987639	1					
ANR	987793	Identifier	cmapper_transfer_sub		987639	2					
ANR	987794	ParameterList	gx_cmapper_data * data		987639	3					
ANR	987795	Parameter	gx_cmapper_data * data	2124:21:76740:76760	987639	0	True				
ANR	987796	ParameterType	gx_cmapper_data *		987639	0					
ANR	987797	Identifier	data		987639	1					
ANR	987798	CFGEntryNode	ENTRY		987639		True				
ANR	987799	CFGExitNode	EXIT		987639		True				
ANR	987800	Symbol	* dev		987639						
ANR	987801	Symbol	frac_value		987639						
ANR	987802	Symbol	data		987639						
ANR	987803	Symbol	color		987639						
ANR	987804	Symbol	encode_color		987639						
ANR	987805	Symbol	pconc		987639						
ANR	987806	Symbol	ncomps		987639						
ANR	987807	Symbol	dev -> color_info		987639						
ANR	987808	Symbol	effective_transfer		987639						
ANR	987809	Symbol	* effective_transfer		987639						
ANR	987810	Symbol	gx_no_color_index		987639						
ANR	987811	Symbol	dev		987639						
ANR	987812	Symbol	data -> dev		987639						
ANR	987813	Symbol	dev_proc		987639						
ANR	987814	Symbol	cv2frac		987639						
ANR	987815	Symbol	pgs		987639						
ANR	987816	Symbol	* pconc		987639						
ANR	987817	Symbol	frac_1		987639						
ANR	987818	Symbol	dev -> color_info . num_components		987639						
ANR	987819	Symbol	data -> conc		987639						
ANR	987820	Symbol	i		987639						
ANR	987821	Symbol	data -> pgs		987639						
ANR	987822	Symbol	& data -> devc		987639						
ANR	987823	Symbol	* i		987639						
ANR	987824	Symbol	gx_map_color_frac		987639						
ANR	987825	Symbol	* data		987639						
ANR	987826	Symbol	frac2cv		987639						
ANR	987827	Function	cmapper_halftone	2152:0:77790:78433							
ANR	987828	FunctionDef	cmapper_halftone (gx_cmapper_data * data)		987827	0					
ANR	987829	CompoundStatement		2154:0:77842:78433	987827	0					
ANR	987830	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2155:4:77848:77886	987827	0	True				
ANR	987831	IdentifierDecl	* pconc = & data -> conc [ 0 ]		987827	0					
ANR	987832	IdentifierDeclType	gx_color_value *		987827	0					
ANR	987833	Identifier	pconc		987827	1					
ANR	987834	AssignmentExpression	* pconc = & data -> conc [ 0 ]		987827	2		=			
ANR	987835	Identifier	pconc		987827	0					
ANR	987836	UnaryOperationExpression	& data -> conc [ 0 ]		987827	1					
ANR	987837	UnaryOperator	&		987827	0					
ANR	987838	ArrayIndexing	data -> conc [ 0 ]		987827	1					
ANR	987839	PtrMemberAccess	data -> conc		987827	0					
ANR	987840	Identifier	data		987827	0					
ANR	987841	Identifier	conc		987827	1					
ANR	987842	PrimaryExpression	0		987827	1					
ANR	987843	IdentifierDeclStatement	const gs_gstate * pgs = data -> pgs ;	2156:4:77892:77925	987827	1	True				
ANR	987844	IdentifierDecl	* pgs = data -> pgs		987827	0					
ANR	987845	IdentifierDeclType	const gs_gstate *		987827	0					
ANR	987846	Identifier	pgs		987827	1					
ANR	987847	AssignmentExpression	* pgs = data -> pgs		987827	2		=			
ANR	987848	Identifier	pgs		987827	0					
ANR	987849	PtrMemberAccess	data -> pgs		987827	1					
ANR	987850	Identifier	data		987827	0					
ANR	987851	Identifier	pgs		987827	1					
ANR	987852	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2157:4:77931:77958	987827	2	True				
ANR	987853	IdentifierDecl	* dev = data -> dev		987827	0					
ANR	987854	IdentifierDeclType	gx_device *		987827	0					
ANR	987855	Identifier	dev		987827	1					
ANR	987856	AssignmentExpression	* dev = data -> dev		987827	2		=			
ANR	987857	Identifier	dev		987827	0					
ANR	987858	PtrMemberAccess	data -> dev		987827	1					
ANR	987859	Identifier	data		987827	0					
ANR	987860	Identifier	dev		987827	1					
ANR	987861	IdentifierDeclStatement	gs_color_select_t select = data -> select ;	2158:4:77964:78003	987827	3	True				
ANR	987862	IdentifierDecl	select = data -> select		987827	0					
ANR	987863	IdentifierDeclType	gs_color_select_t		987827	0					
ANR	987864	Identifier	select		987827	1					
ANR	987865	AssignmentExpression	select = data -> select		987827	2		=			
ANR	987866	Identifier	select		987827	0					
ANR	987867	PtrMemberAccess	data -> select		987827	1					
ANR	987868	Identifier	data		987827	0					
ANR	987869	Identifier	select		987827	1					
ANR	987870	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2159:4:78009:78054	987827	4	True				
ANR	987871	IdentifierDecl	ncomps = dev -> color_info . num_components		987827	0					
ANR	987872	IdentifierDeclType	uchar		987827	0					
ANR	987873	Identifier	ncomps		987827	1					
ANR	987874	AssignmentExpression	ncomps = dev -> color_info . num_components		987827	2		=			
ANR	987875	Identifier	ncomps		987827	0					
ANR	987876	MemberAccess	dev -> color_info . num_components		987827	1					
ANR	987877	PtrMemberAccess	dev -> color_info		987827	0					
ANR	987878	Identifier	dev		987827	0					
ANR	987879	Identifier	color_info		987827	1					
ANR	987880	Identifier	num_components		987827	1					
ANR	987881	IdentifierDeclStatement	uchar i ;	2160:4:78060:78067	987827	5	True				
ANR	987882	IdentifierDecl	i		987827	0					
ANR	987883	IdentifierDeclType	uchar		987827	0					
ANR	987884	Identifier	i		987827	1					
ANR	987885	IdentifierDeclStatement	frac cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	2161:4:78073:78117	987827	6	True				
ANR	987886	IdentifierDecl	cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		987827	0					
ANR	987887	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		987827	0					
ANR	987888	Identifier	cv_frac		987827	1					
ANR	987889	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		987827	2					
ANR	987890	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		987827	7					
ANR	987891	ForInit	i = 0 ;	2164:9:78171:78176	987827	0	True				
ANR	987892	AssignmentExpression	i = 0		987827	0		=			
ANR	987893	Identifier	i		987827	0					
ANR	987894	PrimaryExpression	0		987827	1					
ANR	987895	Condition	i < ncomps	2164:16:78178:78187	987827	1	True				
ANR	987896	RelationalExpression	i < ncomps		987827	0		<			
ANR	987897	Identifier	i		987827	0					
ANR	987898	Identifier	ncomps		987827	1					
ANR	987899	PostIncDecOperationExpression	i ++	2164:28:78190:78192	987827	2	True				
ANR	987900	Identifier	i		987827	0					
ANR	987901	IncDec	++		987827	1					
ANR	987902	CompoundStatement		11:33:352:352	987827	3					
ANR	987903	ExpressionStatement	cv_frac [ i ] = cv2frac ( pconc [ i ] )	2165:8:78205:78235	987827	0	True				
ANR	987904	AssignmentExpression	cv_frac [ i ] = cv2frac ( pconc [ i ] )		987827	0		=			
ANR	987905	ArrayIndexing	cv_frac [ i ]		987827	0					
ANR	987906	Identifier	cv_frac		987827	0					
ANR	987907	Identifier	i		987827	1					
ANR	987908	CallExpression	cv2frac ( pconc [ i ] )		987827	1					
ANR	987909	Callee	cv2frac		987827	0					
ANR	987910	Identifier	cv2frac		987827	0					
ANR	987911	ArgumentList	pconc [ i ]		987827	1					
ANR	987912	Argument	pconc [ i ]		987827	0					
ANR	987913	ArrayIndexing	pconc [ i ]		987827	0					
ANR	987914	Identifier	pconc		987827	0					
ANR	987915	Identifier	i		987827	1					
ANR	987916	IfStatement	"if ( gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		987827	8					
ANR	987917	Condition	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	2167:8:78251:78369	987827	0	True				
ANR	987918	EqualityExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		987827	0		==			
ANR	987919	CallExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , & data -> devc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		987827	0					
ANR	987920	Callee	gx_render_device_DeviceN		987827	0					
ANR	987921	Identifier	gx_render_device_DeviceN		987827	0					
ANR	987922	ArgumentList	& ( cv_frac [ 0 ] )		987827	1					
ANR	987923	Argument	& ( cv_frac [ 0 ] )		987827	0					
ANR	987924	UnaryOperationExpression	& ( cv_frac [ 0 ] )		987827	0					
ANR	987925	UnaryOperator	&		987827	0					
ANR	987926	ArrayIndexing	cv_frac [ 0 ]		987827	1					
ANR	987927	Identifier	cv_frac		987827	0					
ANR	987928	PrimaryExpression	0		987827	1					
ANR	987929	Argument	& data -> devc		987827	1					
ANR	987930	UnaryOperationExpression	& data -> devc		987827	0					
ANR	987931	UnaryOperator	&		987827	0					
ANR	987932	PtrMemberAccess	data -> devc		987827	1					
ANR	987933	Identifier	data		987827	0					
ANR	987934	Identifier	devc		987827	1					
ANR	987935	Argument	dev		987827	2					
ANR	987936	Identifier	dev		987827	0					
ANR	987937	Argument	pgs -> dev_ht		987827	3					
ANR	987938	PtrMemberAccess	pgs -> dev_ht		987827	0					
ANR	987939	Identifier	pgs		987827	0					
ANR	987940	Identifier	dev_ht		987827	1					
ANR	987941	Argument	& pgs -> screen_phase [ select ]		987827	4					
ANR	987942	UnaryOperationExpression	& pgs -> screen_phase [ select ]		987827	0					
ANR	987943	UnaryOperator	&		987827	0					
ANR	987944	ArrayIndexing	pgs -> screen_phase [ select ]		987827	1					
ANR	987945	PtrMemberAccess	pgs -> screen_phase		987827	0					
ANR	987946	Identifier	pgs		987827	0					
ANR	987947	Identifier	screen_phase		987827	1					
ANR	987948	Identifier	select		987827	1					
ANR	987949	PrimaryExpression	1		987827	1					
ANR	987950	ExpressionStatement	"gx_color_load_select ( & data -> devc , pgs , dev , select )"	2169:8:78380:78431	987827	1	True				
ANR	987951	CallExpression	"gx_color_load_select ( & data -> devc , pgs , dev , select )"		987827	0					
ANR	987952	Callee	gx_color_load_select		987827	0					
ANR	987953	Identifier	gx_color_load_select		987827	0					
ANR	987954	ArgumentList	& data -> devc		987827	1					
ANR	987955	Argument	& data -> devc		987827	0					
ANR	987956	UnaryOperationExpression	& data -> devc		987827	0					
ANR	987957	UnaryOperator	&		987827	0					
ANR	987958	PtrMemberAccess	data -> devc		987827	1					
ANR	987959	Identifier	data		987827	0					
ANR	987960	Identifier	devc		987827	1					
ANR	987961	Argument	pgs		987827	1					
ANR	987962	Identifier	pgs		987827	0					
ANR	987963	Argument	dev		987827	2					
ANR	987964	Identifier	dev		987827	0					
ANR	987965	Argument	select		987827	3					
ANR	987966	Identifier	select		987827	0					
ANR	987967	ReturnType	static void		987827	1					
ANR	987968	Identifier	cmapper_halftone		987827	2					
ANR	987969	ParameterList	gx_cmapper_data * data		987827	3					
ANR	987970	Parameter	gx_cmapper_data * data	2153:17:77819:77839	987827	0	True				
ANR	987971	ParameterType	gx_cmapper_data *		987827	0					
ANR	987972	Identifier	data		987827	1					
ANR	987973	CFGEntryNode	ENTRY		987827		True				
ANR	987974	CFGExitNode	EXIT		987827		True				
ANR	987975	Symbol	* dev		987827						
ANR	987976	Symbol	select		987827						
ANR	987977	Symbol	data		987827						
ANR	987978	Symbol	* pgs		987827						
ANR	987979	Symbol	pconc		987827						
ANR	987980	Symbol	ncomps		987827						
ANR	987981	Symbol	dev -> color_info		987827						
ANR	987982	Symbol	gx_render_device_DeviceN		987827						
ANR	987983	Symbol	dev		987827						
ANR	987984	Symbol	data -> dev		987827						
ANR	987985	Symbol	cv2frac		987827						
ANR	987986	Symbol	pgs		987827						
ANR	987987	Symbol	data -> select		987827						
ANR	987988	Symbol	* pconc		987827						
ANR	987989	Symbol	dev -> color_info . num_components		987827						
ANR	987990	Symbol	data -> conc		987827						
ANR	987991	Symbol	i		987827						
ANR	987992	Symbol	data -> pgs		987827						
ANR	987993	Symbol	* cv_frac		987827						
ANR	987994	Symbol	& data -> devc		987827						
ANR	987995	Symbol	pgs -> screen_phase		987827						
ANR	987996	Symbol	* i		987827						
ANR	987997	Symbol	cv_frac		987827						
ANR	987998	Symbol	pgs -> dev_ht		987827						
ANR	987999	Symbol	* data		987827						
ANR	988000	Function	cmapper_vanilla	2176:0:78707:79078							
ANR	988001	FunctionDef	cmapper_vanilla (gx_cmapper_data * data)		988000	0					
ANR	988002	CompoundStatement		2178:0:78758:79078	988000	0					
ANR	988003	IdentifierDeclStatement	gx_color_value * pconc = & data -> conc [ 0 ] ;	2179:4:78764:78802	988000	0	True				
ANR	988004	IdentifierDecl	* pconc = & data -> conc [ 0 ]		988000	0					
ANR	988005	IdentifierDeclType	gx_color_value *		988000	0					
ANR	988006	Identifier	pconc		988000	1					
ANR	988007	AssignmentExpression	* pconc = & data -> conc [ 0 ]		988000	2		=			
ANR	988008	Identifier	pconc		988000	0					
ANR	988009	UnaryOperationExpression	& data -> conc [ 0 ]		988000	1					
ANR	988010	UnaryOperator	&		988000	0					
ANR	988011	ArrayIndexing	data -> conc [ 0 ]		988000	1					
ANR	988012	PtrMemberAccess	data -> conc		988000	0					
ANR	988013	Identifier	data		988000	0					
ANR	988014	Identifier	conc		988000	1					
ANR	988015	PrimaryExpression	0		988000	1					
ANR	988016	IdentifierDeclStatement	gx_device * dev = data -> dev ;	2180:4:78808:78835	988000	1	True				
ANR	988017	IdentifierDecl	* dev = data -> dev		988000	0					
ANR	988018	IdentifierDeclType	gx_device *		988000	0					
ANR	988019	Identifier	dev		988000	1					
ANR	988020	AssignmentExpression	* dev = data -> dev		988000	2		=			
ANR	988021	Identifier	dev		988000	0					
ANR	988022	PtrMemberAccess	data -> dev		988000	1					
ANR	988023	Identifier	data		988000	0					
ANR	988024	Identifier	dev		988000	1					
ANR	988025	IdentifierDeclStatement	gx_color_index color ;	2181:4:78841:78861	988000	2	True				
ANR	988026	IdentifierDecl	color		988000	0					
ANR	988027	IdentifierDeclType	gx_color_index		988000	0					
ANR	988028	Identifier	color		988000	1					
ANR	988029	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"	2183:4:78868:78921	988000	3	True				
ANR	988030	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		988000	0		=			
ANR	988031	Identifier	color		988000	0					
ANR	988032	CallExpression	"dev_proc ( dev , encode_color ) ( dev , & ( pconc [ 0 ] ) )"		988000	1					
ANR	988033	Callee	"dev_proc ( dev , encode_color )"		988000	0					
ANR	988034	CallExpression	"dev_proc ( dev , encode_color )"		988000	0					
ANR	988035	Callee	dev_proc		988000	0					
ANR	988036	Identifier	dev_proc		988000	0					
ANR	988037	ArgumentList	dev		988000	1					
ANR	988038	Argument	dev		988000	0					
ANR	988039	Identifier	dev		988000	0					
ANR	988040	Argument	encode_color		988000	1					
ANR	988041	Identifier	encode_color		988000	0					
ANR	988042	ArgumentList	dev		988000	1					
ANR	988043	Argument	dev		988000	0					
ANR	988044	Identifier	dev		988000	0					
ANR	988045	Argument	& ( pconc [ 0 ] )		988000	1					
ANR	988046	UnaryOperationExpression	& ( pconc [ 0 ] )		988000	0					
ANR	988047	UnaryOperator	&		988000	0					
ANR	988048	ArrayIndexing	pconc [ 0 ]		988000	1					
ANR	988049	Identifier	pconc		988000	0					
ANR	988050	PrimaryExpression	0		988000	1					
ANR	988051	IfStatement	if ( color != gx_no_color_index )		988000	4					
ANR	988052	Condition	color != gx_no_color_index	2185:8:79006:79031	988000	0	True				
ANR	988053	EqualityExpression	color != gx_no_color_index		988000	0		!=			
ANR	988054	Identifier	color		988000	0					
ANR	988055	Identifier	gx_no_color_index		988000	1					
ANR	988056	ExpressionStatement	"color_set_pure ( & data -> devc , color )"	2186:8:79042:79076	988000	1	True				
ANR	988057	CallExpression	"color_set_pure ( & data -> devc , color )"		988000	0					
ANR	988058	Callee	color_set_pure		988000	0					
ANR	988059	Identifier	color_set_pure		988000	0					
ANR	988060	ArgumentList	& data -> devc		988000	1					
ANR	988061	Argument	& data -> devc		988000	0					
ANR	988062	UnaryOperationExpression	& data -> devc		988000	0					
ANR	988063	UnaryOperator	&		988000	0					
ANR	988064	PtrMemberAccess	data -> devc		988000	1					
ANR	988065	Identifier	data		988000	0					
ANR	988066	Identifier	devc		988000	1					
ANR	988067	Argument	color		988000	1					
ANR	988068	Identifier	color		988000	0					
ANR	988069	ReturnType	static void		988000	1					
ANR	988070	Identifier	cmapper_vanilla		988000	2					
ANR	988071	ParameterList	gx_cmapper_data * data		988000	3					
ANR	988072	Parameter	gx_cmapper_data * data	2177:16:78735:78755	988000	0	True				
ANR	988073	ParameterType	gx_cmapper_data *		988000	0					
ANR	988074	Identifier	data		988000	1					
ANR	988075	CFGEntryNode	ENTRY		988000		True				
ANR	988076	CFGExitNode	EXIT		988000		True				
ANR	988077	Symbol	gx_no_color_index		988000						
ANR	988078	Symbol	data		988000						
ANR	988079	Symbol	dev		988000						
ANR	988080	Symbol	color		988000						
ANR	988081	Symbol	data -> dev		988000						
ANR	988082	Symbol	dev_proc		988000						
ANR	988083	Symbol	encode_color		988000						
ANR	988084	Symbol	data -> conc		988000						
ANR	988085	Symbol	pconc		988000						
ANR	988086	Symbol	& data -> devc		988000						
ANR	988087	Symbol	* data		988000						
ANR	988088	Function	gx_get_cmapper	2189:0:79081:80535							
ANR	988089	FunctionDef	"gx_get_cmapper (gx_cmapper_data * data , const gs_gstate * pgs , gx_device * dev , bool has_transfer , bool has_halftone , gs_color_select_t select)"		988088	0					
ANR	988090	CompoundStatement		2193:0:79267:80535	988088	0					
ANR	988091	ExpressionStatement	"memset ( & ( data -> conc [ 0 ] ) , 0 , sizeof ( gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ) )"	2194:4:79273:79356	988088	0	True				
ANR	988092	CallExpression	"memset ( & ( data -> conc [ 0 ] ) , 0 , sizeof ( gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ) )"		988088	0					
ANR	988093	Callee	memset		988088	0					
ANR	988094	Identifier	memset		988088	0					
ANR	988095	ArgumentList	& ( data -> conc [ 0 ] )		988088	1					
ANR	988096	Argument	& ( data -> conc [ 0 ] )		988088	0					
ANR	988097	UnaryOperationExpression	& ( data -> conc [ 0 ] )		988088	0					
ANR	988098	UnaryOperator	&		988088	0					
ANR	988099	ArrayIndexing	data -> conc [ 0 ]		988088	1					
ANR	988100	PtrMemberAccess	data -> conc		988088	0					
ANR	988101	Identifier	data		988088	0					
ANR	988102	Identifier	conc		988088	1					
ANR	988103	PrimaryExpression	0		988088	1					
ANR	988104	Argument	0		988088	1					
ANR	988105	PrimaryExpression	0		988088	0					
ANR	988106	Argument	sizeof ( gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ] )		988088	2					
ANR	988107	SizeofExpression	sizeof ( gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ] )		988088	0					
ANR	988108	Sizeof	sizeof		988088	0					
ANR	988109	ArrayIndexing	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		988088	1					
ANR	988110	Identifier	gx_color_value		988088	0					
ANR	988111	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		988088	1					
ANR	988112	ExpressionStatement	data -> pgs = pgs	2195:4:79362:79377	988088	1	True				
ANR	988113	AssignmentExpression	data -> pgs = pgs		988088	0		=			
ANR	988114	PtrMemberAccess	data -> pgs		988088	0					
ANR	988115	Identifier	data		988088	0					
ANR	988116	Identifier	pgs		988088	1					
ANR	988117	Identifier	pgs		988088	1					
ANR	988118	ExpressionStatement	data -> dev = dev	2196:4:79383:79398	988088	2	True				
ANR	988119	AssignmentExpression	data -> dev = dev		988088	0		=			
ANR	988120	PtrMemberAccess	data -> dev		988088	0					
ANR	988121	Identifier	data		988088	0					
ANR	988122	Identifier	dev		988088	1					
ANR	988123	Identifier	dev		988088	1					
ANR	988124	ExpressionStatement	data -> select = select	2197:4:79404:79425	988088	3	True				
ANR	988125	AssignmentExpression	data -> select = select		988088	0		=			
ANR	988126	PtrMemberAccess	data -> select		988088	0					
ANR	988127	Identifier	data		988088	0					
ANR	988128	Identifier	select		988088	1					
ANR	988129	Identifier	select		988088	1					
ANR	988130	ExpressionStatement	data -> devc . type = gx_dc_type_none	2198:4:79431:79464	988088	4	True				
ANR	988131	AssignmentExpression	data -> devc . type = gx_dc_type_none		988088	0		=			
ANR	988132	MemberAccess	data -> devc . type		988088	0					
ANR	988133	PtrMemberAccess	data -> devc		988088	0					
ANR	988134	Identifier	data		988088	0					
ANR	988135	Identifier	devc		988088	1					
ANR	988136	Identifier	type		988088	1					
ANR	988137	Identifier	gx_dc_type_none		988088	1					
ANR	988138	IfStatement	if ( has_transfer && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		988088	5					
ANR	988139	Condition	has_transfer && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	2199:8:79474:79538	988088	0	True				
ANR	988140	AndExpression	has_transfer && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988088	0		&&			
ANR	988141	Identifier	has_transfer		988088	0					
ANR	988142	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988088	1		==			
ANR	988143	MemberAccess	dev -> color_info . opmode		988088	0					
ANR	988144	PtrMemberAccess	dev -> color_info		988088	0					
ANR	988145	Identifier	dev		988088	0					
ANR	988146	Identifier	color_info		988088	1					
ANR	988147	Identifier	opmode		988088	1					
ANR	988148	Identifier	GX_CINFO_OPMODE_UNKNOWN		988088	1					
ANR	988149	ExpressionStatement	check_cmyk_color_model_comps ( dev )	2200:8:79549:79582	988088	1	True				
ANR	988150	CallExpression	check_cmyk_color_model_comps ( dev )		988088	0					
ANR	988151	Callee	check_cmyk_color_model_comps		988088	0					
ANR	988152	Identifier	check_cmyk_color_model_comps		988088	0					
ANR	988153	ArgumentList	dev		988088	1					
ANR	988154	Argument	dev		988088	0					
ANR	988155	Identifier	dev		988088	0					
ANR	988156	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		988088	6					
ANR	988157	Condition	pgs -> effective_transfer_non_identity_count == 0	2201:8:79592:79638	988088	0	True				
ANR	988158	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		988088	0		==			
ANR	988159	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		988088	0					
ANR	988160	Identifier	pgs		988088	0					
ANR	988161	Identifier	effective_transfer_non_identity_count		988088	1					
ANR	988162	PrimaryExpression	0		988088	1					
ANR	988163	ExpressionStatement	has_transfer = 0	2202:8:79649:79665	988088	1	True				
ANR	988164	AssignmentExpression	has_transfer = 0		988088	0		=			
ANR	988165	Identifier	has_transfer		988088	0					
ANR	988166	PrimaryExpression	0		988088	1					
ANR	988167	IfStatement	if ( has_transfer )		988088	7					
ANR	988168	Condition	has_transfer	2203:8:79675:79686	988088	0	True				
ANR	988169	Identifier	has_transfer		988088	0					
ANR	988170	CompoundStatement		11:22:421:421	988088	1					
ANR	988171	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		988088	0					
ANR	988172	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	2204:12:79703:79756	988088	0	True				
ANR	988173	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		988088	0		==			
ANR	988174	MemberAccess	dev -> color_info . polarity		988088	0					
ANR	988175	PtrMemberAccess	dev -> color_info		988088	0					
ANR	988176	Identifier	dev		988088	0					
ANR	988177	Identifier	color_info		988088	1					
ANR	988178	Identifier	polarity		988088	1					
ANR	988179	Identifier	GX_CINFO_POLARITY_ADDITIVE		988088	1					
ANR	988180	CompoundStatement		12:68:491:491	988088	1					
ANR	988181	IfStatement	if ( has_halftone )		988088	0					
ANR	988182	Condition	has_halftone	2205:16:79777:79788	988088	0	True				
ANR	988183	Identifier	has_halftone		988088	0					
ANR	988184	ExpressionStatement	data -> set_color = cmapper_transfer_halftone_add	2206:16:79807:79854	988088	1	True				
ANR	988185	AssignmentExpression	data -> set_color = cmapper_transfer_halftone_add		988088	0		=			
ANR	988186	PtrMemberAccess	data -> set_color		988088	0					
ANR	988187	Identifier	data		988088	0					
ANR	988188	Identifier	set_color		988088	1					
ANR	988189	Identifier	cmapper_transfer_halftone_add		988088	1					
ANR	988190	ElseStatement	else		988088	0					
ANR	988191	ExpressionStatement	data -> set_color = cmapper_transfer_add	2208:16:79889:79927	988088	0	True				
ANR	988192	AssignmentExpression	data -> set_color = cmapper_transfer_add		988088	0		=			
ANR	988193	PtrMemberAccess	data -> set_color		988088	0					
ANR	988194	Identifier	data		988088	0					
ANR	988195	Identifier	set_color		988088	1					
ANR	988196	Identifier	cmapper_transfer_add		988088	1					
ANR	988197	ElseStatement	else		988088	0					
ANR	988198	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE )		988088	0					
ANR	988199	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE	2209:19:79948:79988	988088	0	True				
ANR	988200	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE		988088	0		==			
ANR	988201	MemberAccess	dev -> color_info . opmode		988088	0					
ANR	988202	PtrMemberAccess	dev -> color_info		988088	0					
ANR	988203	Identifier	dev		988088	0					
ANR	988204	Identifier	color_info		988088	1					
ANR	988205	Identifier	opmode		988088	1					
ANR	988206	Identifier	GX_CINFO_OPMODE		988088	1					
ANR	988207	CompoundStatement		17:62:723:723	988088	1					
ANR	988208	IfStatement	if ( has_halftone )		988088	0					
ANR	988209	Condition	has_halftone	2210:16:80009:80020	988088	0	True				
ANR	988210	Identifier	has_halftone		988088	0					
ANR	988211	ExpressionStatement	data -> set_color = cmapper_transfer_halftone_op	2211:16:80039:80085	988088	1	True				
ANR	988212	AssignmentExpression	data -> set_color = cmapper_transfer_halftone_op		988088	0		=			
ANR	988213	PtrMemberAccess	data -> set_color		988088	0					
ANR	988214	Identifier	data		988088	0					
ANR	988215	Identifier	set_color		988088	1					
ANR	988216	Identifier	cmapper_transfer_halftone_op		988088	1					
ANR	988217	ElseStatement	else		988088	0					
ANR	988218	ExpressionStatement	data -> set_color = cmapper_transfer_op	2213:16:80120:80157	988088	0	True				
ANR	988219	AssignmentExpression	data -> set_color = cmapper_transfer_op		988088	0		=			
ANR	988220	PtrMemberAccess	data -> set_color		988088	0					
ANR	988221	Identifier	data		988088	0					
ANR	988222	Identifier	set_color		988088	1					
ANR	988223	Identifier	cmapper_transfer_op		988088	1					
ANR	988224	ElseStatement	else		988088	0					
ANR	988225	CompoundStatement		22:15:906:906	988088	0					
ANR	988226	IfStatement	if ( has_halftone )		988088	0					
ANR	988227	Condition	has_halftone	2215:16:80192:80203	988088	0	True				
ANR	988228	Identifier	has_halftone		988088	0					
ANR	988229	ExpressionStatement	data -> set_color = cmapper_transfer_halftone_sub	2216:16:80222:80269	988088	1	True				
ANR	988230	AssignmentExpression	data -> set_color = cmapper_transfer_halftone_sub		988088	0		=			
ANR	988231	PtrMemberAccess	data -> set_color		988088	0					
ANR	988232	Identifier	data		988088	0					
ANR	988233	Identifier	set_color		988088	1					
ANR	988234	Identifier	cmapper_transfer_halftone_sub		988088	1					
ANR	988235	ElseStatement	else		988088	0					
ANR	988236	ExpressionStatement	data -> set_color = cmapper_transfer_sub	2218:16:80304:80342	988088	0	True				
ANR	988237	AssignmentExpression	data -> set_color = cmapper_transfer_sub		988088	0		=			
ANR	988238	PtrMemberAccess	data -> set_color		988088	0					
ANR	988239	Identifier	data		988088	0					
ANR	988240	Identifier	set_color		988088	1					
ANR	988241	Identifier	cmapper_transfer_sub		988088	1					
ANR	988242	ElseStatement	else		988088	0					
ANR	988243	CompoundStatement		28:11:1097:1097	988088	0					
ANR	988244	IfStatement	if ( has_halftone )		988088	0					
ANR	988245	Condition	has_halftone	2221:12:80379:80390	988088	0	True				
ANR	988246	Identifier	has_halftone		988088	0					
ANR	988247	ExpressionStatement	data -> set_color = cmapper_halftone	2222:12:80405:80439	988088	1	True				
ANR	988248	AssignmentExpression	data -> set_color = cmapper_halftone		988088	0		=			
ANR	988249	PtrMemberAccess	data -> set_color		988088	0					
ANR	988250	Identifier	data		988088	0					
ANR	988251	Identifier	set_color		988088	1					
ANR	988252	Identifier	cmapper_halftone		988088	1					
ANR	988253	ElseStatement	else		988088	0					
ANR	988254	ExpressionStatement	data -> set_color = cmapper_vanilla	2224:12:80466:80499	988088	0	True				
ANR	988255	AssignmentExpression	data -> set_color = cmapper_vanilla		988088	0		=			
ANR	988256	PtrMemberAccess	data -> set_color		988088	0					
ANR	988257	Identifier	data		988088	0					
ANR	988258	Identifier	set_color		988088	1					
ANR	988259	Identifier	cmapper_vanilla		988088	1					
ANR	988260	ReturnStatement	return data -> set_color ;	2226:4:80511:80533	988088	8	True				
ANR	988261	PtrMemberAccess	data -> set_color		988088	0					
ANR	988262	Identifier	data		988088	0					
ANR	988263	Identifier	set_color		988088	1					
ANR	988264	ReturnType	gx_cmapper_fn *		988088	1					
ANR	988265	Identifier	gx_get_cmapper		988088	2					
ANR	988266	ParameterList	"gx_cmapper_data * data , const gs_gstate * pgs , gx_device * dev , bool has_transfer , bool has_halftone , gs_color_select_t select"		988088	3					
ANR	988267	Parameter	gx_cmapper_data * data	2190:15:79112:79132	988088	0	True				
ANR	988268	ParameterType	gx_cmapper_data *		988088	0					
ANR	988269	Identifier	data		988088	1					
ANR	988270	Parameter	const gs_gstate * pgs	2190:38:79135:79154	988088	1	True				
ANR	988271	ParameterType	const gs_gstate *		988088	0					
ANR	988272	Identifier	pgs		988088	1					
ANR	988273	Parameter	gx_device * dev	2191:15:79172:79185	988088	2	True				
ANR	988274	ParameterType	gx_device *		988088	0					
ANR	988275	Identifier	dev		988088	1					
ANR	988276	Parameter	bool has_transfer	2191:31:79188:79204	988088	3	True				
ANR	988277	ParameterType	bool		988088	0					
ANR	988278	Identifier	has_transfer		988088	1					
ANR	988279	Parameter	bool has_halftone	2191:50:79207:79223	988088	4	True				
ANR	988280	ParameterType	bool		988088	0					
ANR	988281	Identifier	has_halftone		988088	1					
ANR	988282	Parameter	gs_color_select_t select	2192:15:79241:79264	988088	5	True				
ANR	988283	ParameterType	gs_color_select_t		988088	0					
ANR	988284	Identifier	select		988088	1					
ANR	988285	CFGEntryNode	ENTRY		988088		True				
ANR	988286	CFGExitNode	EXIT		988088		True				
ANR	988287	Symbol	* dev		988088						
ANR	988288	Symbol	cmapper_transfer_halftone_op		988088						
ANR	988289	Symbol	select		988088						
ANR	988290	Symbol	data		988088						
ANR	988291	Symbol	* pgs		988088						
ANR	988292	Symbol	cmapper_transfer_halftone_add		988088						
ANR	988293	Symbol	dev -> color_info		988088						
ANR	988294	Symbol	GX_CINFO_POLARITY_ADDITIVE		988088						
ANR	988295	Symbol	gx_dc_type_none		988088						
ANR	988296	Symbol	dev		988088						
ANR	988297	Symbol	dev -> color_info . polarity		988088						
ANR	988298	Symbol	data -> dev		988088						
ANR	988299	Symbol	cmapper_transfer_halftone_sub		988088						
ANR	988300	Symbol	data -> devc		988088						
ANR	988301	Symbol	dev -> color_info . opmode		988088						
ANR	988302	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		988088						
ANR	988303	Symbol	pgs		988088						
ANR	988304	Symbol	has_halftone		988088						
ANR	988305	Symbol	data -> select		988088						
ANR	988306	Symbol	data -> set_color		988088						
ANR	988307	Symbol	data -> conc		988088						
ANR	988308	Symbol	cmapper_transfer_sub		988088						
ANR	988309	Symbol	* GX_DEVICE_COLOR_MAX_COMPONENTS		988088						
ANR	988310	Symbol	gx_color_value		988088						
ANR	988311	Symbol	data -> pgs		988088						
ANR	988312	Symbol	GX_CINFO_OPMODE		988088						
ANR	988313	Symbol	cmapper_transfer_op		988088						
ANR	988314	Symbol	cmapper_halftone		988088						
ANR	988315	Symbol	* gx_color_value		988088						
ANR	988316	Symbol	GX_CINFO_OPMODE_UNKNOWN		988088						
ANR	988317	Symbol	pgs -> effective_transfer_non_identity_count		988088						
ANR	988318	Symbol	cmapper_transfer_add		988088						
ANR	988319	Symbol	cmapper_vanilla		988088						
ANR	988320	Symbol	* data		988088						
ANR	988321	Symbol	has_transfer		988088						
ANR	988322	Symbol	data -> devc . type		988088						
ANR	988323	Function	cmap_transfer_halftone	2233:0:80809:83894							
ANR	988324	FunctionDef	"cmap_transfer_halftone (gx_color_value * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , bool has_transfer , bool has_halftone , gs_color_select_t select)"		988323	0					
ANR	988325	CompoundStatement		2237:0:80997:83894	988323	0					
ANR	988326	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2238:4:81003:81048	988323	0	True				
ANR	988327	IdentifierDecl	ncomps = dev -> color_info . num_components		988323	0					
ANR	988328	IdentifierDeclType	uchar		988323	0					
ANR	988329	Identifier	ncomps		988323	1					
ANR	988330	AssignmentExpression	ncomps = dev -> color_info . num_components		988323	2		=			
ANR	988331	Identifier	ncomps		988323	0					
ANR	988332	MemberAccess	dev -> color_info . num_components		988323	1					
ANR	988333	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988334	Identifier	dev		988323	0					
ANR	988335	Identifier	color_info		988323	1					
ANR	988336	Identifier	num_components		988323	1					
ANR	988337	IdentifierDeclStatement	frac frac_value ;	2239:4:81054:81069	988323	1	True				
ANR	988338	IdentifierDecl	frac_value		988323	0					
ANR	988339	IdentifierDeclType	frac		988323	0					
ANR	988340	Identifier	frac_value		988323	1					
ANR	988341	IdentifierDeclStatement	uchar i ;	2240:4:81075:81082	988323	2	True				
ANR	988342	IdentifierDecl	i		988323	0					
ANR	988343	IdentifierDeclType	uchar		988323	0					
ANR	988344	Identifier	i		988323	1					
ANR	988345	IdentifierDeclStatement	frac cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	2241:4:81088:81132	988323	3	True				
ANR	988346	IdentifierDecl	cv_frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		988323	0					
ANR	988347	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		988323	0					
ANR	988348	Identifier	cv_frac		988323	1					
ANR	988349	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		988323	2					
ANR	988350	IdentifierDeclStatement	gx_color_index color ;	2242:4:81138:81158	988323	4	True				
ANR	988351	IdentifierDecl	color		988323	0					
ANR	988352	IdentifierDeclType	gx_color_index		988323	0					
ANR	988353	Identifier	color		988323	1					
ANR	988354	IdentifierDeclStatement	gx_color_value color_val [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	2243:4:81164:81220	988323	5	True				
ANR	988355	IdentifierDecl	color_val [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		988323	0					
ANR	988356	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		988323	0					
ANR	988357	Identifier	color_val		988323	1					
ANR	988358	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		988323	2					
ANR	988359	IfStatement	if ( has_transfer )		988323	6					
ANR	988360	Condition	has_transfer	2246:8:81272:81283	988323	0	True				
ANR	988361	Identifier	has_transfer		988323	0					
ANR	988362	CompoundStatement		10:22:288:288	988323	1					
ANR	988363	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		988323	0					
ANR	988364	Condition	pgs -> effective_transfer_non_identity_count == 0	2247:12:81300:81346	988323	0	True				
ANR	988365	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		988323	0		==			
ANR	988366	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		988323	0					
ANR	988367	Identifier	pgs		988323	0					
ANR	988368	Identifier	effective_transfer_non_identity_count		988323	1					
ANR	988369	PrimaryExpression	0		988323	1					
ANR	988370	CompoundStatement		11:61:351:351	988323	1					
ANR	988371	IfStatement	if ( dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		988323	0					
ANR	988372	Condition	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	2248:16:81367:81473	988323	0	True				
ANR	988373	AndExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988323	0		&&			
ANR	988374	EqualityExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE		988323	0		!=			
ANR	988375	MemberAccess	dev -> color_info . polarity		988323	0					
ANR	988376	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988377	Identifier	dev		988323	0					
ANR	988378	Identifier	color_info		988323	1					
ANR	988379	Identifier	polarity		988323	1					
ANR	988380	Identifier	GX_CINFO_POLARITY_ADDITIVE		988323	1					
ANR	988381	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988323	1		==			
ANR	988382	MemberAccess	dev -> color_info . opmode		988323	0					
ANR	988383	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988384	Identifier	dev		988323	0					
ANR	988385	Identifier	color_info		988323	1					
ANR	988386	Identifier	opmode		988323	1					
ANR	988387	Identifier	GX_CINFO_OPMODE_UNKNOWN		988323	1					
ANR	988388	ExpressionStatement	check_cmyk_color_model_comps ( dev )	2249:16:81492:81525	988323	1	True				
ANR	988389	CallExpression	check_cmyk_color_model_comps ( dev )		988323	0					
ANR	988390	Callee	check_cmyk_color_model_comps		988323	0					
ANR	988391	Identifier	check_cmyk_color_model_comps		988323	0					
ANR	988392	ArgumentList	dev		988323	1					
ANR	988393	Argument	dev		988323	0					
ANR	988394	Identifier	dev		988323	0					
ANR	988395	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988323	1					
ANR	988396	ForInit	i = 0 ;	2250:17:81544:81549	988323	0	True				
ANR	988397	AssignmentExpression	i = 0		988323	0		=			
ANR	988398	Identifier	i		988323	0					
ANR	988399	PrimaryExpression	0		988323	1					
ANR	988400	Condition	i < ncomps	2250:24:81551:81560	988323	1	True				
ANR	988401	RelationalExpression	i < ncomps		988323	0		<			
ANR	988402	Identifier	i		988323	0					
ANR	988403	Identifier	ncomps		988323	1					
ANR	988404	PostIncDecOperationExpression	i ++	2250:36:81563:81565	988323	2	True				
ANR	988405	Identifier	i		988323	0					
ANR	988406	IncDec	++		988323	1					
ANR	988407	ExpressionStatement	cv_frac [ i ] = cv2frac ( pconc [ i ] )	2251:16:81584:81614	988323	3	True				
ANR	988408	AssignmentExpression	cv_frac [ i ] = cv2frac ( pconc [ i ] )		988323	0		=			
ANR	988409	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988410	Identifier	cv_frac		988323	0					
ANR	988411	Identifier	i		988323	1					
ANR	988412	CallExpression	cv2frac ( pconc [ i ] )		988323	1					
ANR	988413	Callee	cv2frac		988323	0					
ANR	988414	Identifier	cv2frac		988323	0					
ANR	988415	ArgumentList	pconc [ i ]		988323	1					
ANR	988416	Argument	pconc [ i ]		988323	0					
ANR	988417	ArrayIndexing	pconc [ i ]		988323	0					
ANR	988418	Identifier	pconc		988323	0					
ANR	988419	Identifier	i		988323	1					
ANR	988420	ElseStatement	else		988323	0					
ANR	988421	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		988323	0					
ANR	988422	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	2252:19:81635:81688	988323	0	True				
ANR	988423	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		988323	0		==			
ANR	988424	MemberAccess	dev -> color_info . polarity		988323	0					
ANR	988425	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988426	Identifier	dev		988323	0					
ANR	988427	Identifier	color_info		988323	1					
ANR	988428	Identifier	polarity		988323	1					
ANR	988429	Identifier	GX_CINFO_POLARITY_ADDITIVE		988323	1					
ANR	988430	CompoundStatement		16:75:693:693	988323	1					
ANR	988431	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988323	0					
ANR	988432	ForInit	i = 0 ;	2253:17:81710:81715	988323	0	True				
ANR	988433	AssignmentExpression	i = 0		988323	0		=			
ANR	988434	Identifier	i		988323	0					
ANR	988435	PrimaryExpression	0		988323	1					
ANR	988436	Condition	i < ncomps	2253:24:81717:81726	988323	1	True				
ANR	988437	RelationalExpression	i < ncomps		988323	0		<			
ANR	988438	Identifier	i		988323	0					
ANR	988439	Identifier	ncomps		988323	1					
ANR	988440	PostIncDecOperationExpression	i ++	2253:36:81729:81731	988323	2	True				
ANR	988441	Identifier	i		988323	0					
ANR	988442	IncDec	++		988323	1					
ANR	988443	CompoundStatement		17:41:736:736	988323	3					
ANR	988444	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2254:16:81752:81782	988323	0	True				
ANR	988445	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		988323	0		=			
ANR	988446	Identifier	frac_value		988323	0					
ANR	988447	CallExpression	cv2frac ( pconc [ i ] )		988323	1					
ANR	988448	Callee	cv2frac		988323	0					
ANR	988449	Identifier	cv2frac		988323	0					
ANR	988450	ArgumentList	pconc [ i ]		988323	1					
ANR	988451	Argument	pconc [ i ]		988323	0					
ANR	988452	ArrayIndexing	pconc [ i ]		988323	0					
ANR	988453	Identifier	pconc		988323	0					
ANR	988454	Identifier	i		988323	1					
ANR	988455	ExpressionStatement	"cv_frac [ i ] = gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"	2255:16:81800:81906	988323	1	True				
ANR	988456	AssignmentExpression	"cv_frac [ i ] = gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"		988323	0		=			
ANR	988457	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988458	Identifier	cv_frac		988323	0					
ANR	988459	Identifier	i		988323	1					
ANR	988460	CallExpression	"gx_map_color_frac ( pgs , frac_value , effective_transfer [ i ] )"		988323	1					
ANR	988461	Callee	gx_map_color_frac		988323	0					
ANR	988462	Identifier	gx_map_color_frac		988323	0					
ANR	988463	ArgumentList	pgs		988323	1					
ANR	988464	Argument	pgs		988323	0					
ANR	988465	Identifier	pgs		988323	0					
ANR	988466	Argument	frac_value		988323	1					
ANR	988467	Identifier	frac_value		988323	0					
ANR	988468	Argument	effective_transfer [ i ]		988323	2					
ANR	988469	ArrayIndexing	effective_transfer [ i ]		988323	0					
ANR	988470	Identifier	effective_transfer		988323	0					
ANR	988471	Identifier	i		988323	1					
ANR	988472	ElseStatement	else		988323	0					
ANR	988473	CompoundStatement		22:15:939:939	988323	0					
ANR	988474	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		988323	0					
ANR	988475	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	2259:16:81955:82003	988323	0	True				
ANR	988476	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988323	0		==			
ANR	988477	MemberAccess	dev -> color_info . opmode		988323	0					
ANR	988478	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988479	Identifier	dev		988323	0					
ANR	988480	Identifier	color_info		988323	1					
ANR	988481	Identifier	opmode		988323	1					
ANR	988482	Identifier	GX_CINFO_OPMODE_UNKNOWN		988323	1					
ANR	988483	CompoundStatement		23:67:1008:1008	988323	1					
ANR	988484	ExpressionStatement	check_cmyk_color_model_comps ( dev )	2260:16:82024:82057	988323	0	True				
ANR	988485	CallExpression	check_cmyk_color_model_comps ( dev )		988323	0					
ANR	988486	Callee	check_cmyk_color_model_comps		988323	0					
ANR	988487	Identifier	check_cmyk_color_model_comps		988323	0					
ANR	988488	ArgumentList	dev		988323	1					
ANR	988489	Argument	dev		988323	0					
ANR	988490	Identifier	dev		988323	0					
ANR	988491	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE )		988323	1					
ANR	988492	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE	2262:16:82089:82129	988323	0	True				
ANR	988493	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE		988323	0		==			
ANR	988494	MemberAccess	dev -> color_info . opmode		988323	0					
ANR	988495	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988496	Identifier	dev		988323	0					
ANR	988497	Identifier	color_info		988323	1					
ANR	988498	Identifier	opmode		988323	1					
ANR	988499	Identifier	GX_CINFO_OPMODE		988323	1					
ANR	988500	CompoundStatement		27:16:1181:1221	988323	1					
ANR	988501	IdentifierDeclStatement	uint k = dev -> color_info . black_component ;	2263:16:82179:82219	988323	0	True				
ANR	988502	IdentifierDecl	k = dev -> color_info . black_component		988323	0					
ANR	988503	IdentifierDeclType	uint		988323	0					
ANR	988504	Identifier	k		988323	1					
ANR	988505	AssignmentExpression	k = dev -> color_info . black_component		988323	2		=			
ANR	988506	Identifier	k		988323	0					
ANR	988507	MemberAccess	dev -> color_info . black_component		988323	1					
ANR	988508	PtrMemberAccess	dev -> color_info		988323	0					
ANR	988509	Identifier	dev		988323	0					
ANR	988510	Identifier	color_info		988323	1					
ANR	988511	Identifier	black_component		988323	1					
ANR	988512	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988323	1					
ANR	988513	ForInit	i = 0 ;	2264:21:82242:82247	988323	0	True				
ANR	988514	AssignmentExpression	i = 0		988323	0		=			
ANR	988515	Identifier	i		988323	0					
ANR	988516	PrimaryExpression	0		988323	1					
ANR	988517	Condition	i < ncomps	2264:28:82249:82258	988323	1	True				
ANR	988518	RelationalExpression	i < ncomps		988323	0		<			
ANR	988519	Identifier	i		988323	0					
ANR	988520	Identifier	ncomps		988323	1					
ANR	988521	PostIncDecOperationExpression	i ++	2264:40:82261:82263	988323	2	True				
ANR	988522	Identifier	i		988323	0					
ANR	988523	IncDec	++		988323	1					
ANR	988524	CompoundStatement		28:45:1268:1268	988323	3					
ANR	988525	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2265:20:82288:82318	988323	0	True				
ANR	988526	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		988323	0		=			
ANR	988527	Identifier	frac_value		988323	0					
ANR	988528	CallExpression	cv2frac ( pconc [ i ] )		988323	1					
ANR	988529	Callee	cv2frac		988323	0					
ANR	988530	Identifier	cv2frac		988323	0					
ANR	988531	ArgumentList	pconc [ i ]		988323	1					
ANR	988532	Argument	pconc [ i ]		988323	0					
ANR	988533	ArrayIndexing	pconc [ i ]		988323	0					
ANR	988534	Identifier	pconc		988323	0					
ANR	988535	Identifier	i		988323	1					
ANR	988536	IfStatement	if ( i == k )		988323	1					
ANR	988537	Condition	i == k	2266:24:82344:82349	988323	0	True				
ANR	988538	EqualityExpression	i == k		988323	0		==			
ANR	988539	Identifier	i		988323	0					
ANR	988540	Identifier	k		988323	1					
ANR	988541	CompoundStatement		30:32:1354:1354	988323	1					
ANR	988542	ExpressionStatement	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"	2267:24:82378:82502	988323	0	True				
ANR	988543	AssignmentExpression	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		988323	0		=			
ANR	988544	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988545	Identifier	cv_frac		988323	0					
ANR	988546	Identifier	i		988323	1					
ANR	988547	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		988323	1		-			
ANR	988548	Identifier	frac_1		988323	0					
ANR	988549	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		988323	1					
ANR	988550	Callee	gx_map_color_frac		988323	0					
ANR	988551	Identifier	gx_map_color_frac		988323	0					
ANR	988552	ArgumentList	pgs		988323	1					
ANR	988553	Argument	pgs		988323	0					
ANR	988554	Identifier	pgs		988323	0					
ANR	988555	Argument	( frac ) ( frac_1 - frac_value )		988323	1					
ANR	988556	CastExpression	( frac ) ( frac_1 - frac_value )		988323	0					
ANR	988557	CastTarget	frac		988323	0					
ANR	988558	AdditiveExpression	frac_1 - frac_value		988323	1		-			
ANR	988559	Identifier	frac_1		988323	0					
ANR	988560	Identifier	frac_value		988323	1					
ANR	988561	Argument	effective_transfer [ i ]		988323	2					
ANR	988562	ArrayIndexing	effective_transfer [ i ]		988323	0					
ANR	988563	Identifier	effective_transfer		988323	0					
ANR	988564	Identifier	i		988323	1					
ANR	988565	ElseStatement	else		988323	0					
ANR	988566	CompoundStatement		33:27:1533:1533	988323	0					
ANR	988567	ExpressionStatement	cv_frac [ i ] = cv2frac ( pconc [ i ] )	2270:24:82557:82587	988323	0	True				
ANR	988568	AssignmentExpression	cv_frac [ i ] = cv2frac ( pconc [ i ] )		988323	0		=			
ANR	988569	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988570	Identifier	cv_frac		988323	0					
ANR	988571	Identifier	i		988323	1					
ANR	988572	CallExpression	cv2frac ( pconc [ i ] )		988323	1					
ANR	988573	Callee	cv2frac		988323	0					
ANR	988574	Identifier	cv2frac		988323	0					
ANR	988575	ArgumentList	pconc [ i ]		988323	1					
ANR	988576	Argument	pconc [ i ]		988323	0					
ANR	988577	ArrayIndexing	pconc [ i ]		988323	0					
ANR	988578	Identifier	pconc		988323	0					
ANR	988579	Identifier	i		988323	1					
ANR	988580	ElseStatement	else		988323	0					
ANR	988581	CompoundStatement		37:19:1691:1691	988323	0					
ANR	988582	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988323	0					
ANR	988583	ForInit	i = 0 ;	2274:21:82712:82717	988323	0	True				
ANR	988584	AssignmentExpression	i = 0		988323	0		=			
ANR	988585	Identifier	i		988323	0					
ANR	988586	PrimaryExpression	0		988323	1					
ANR	988587	Condition	i < ncomps	2274:28:82719:82728	988323	1	True				
ANR	988588	RelationalExpression	i < ncomps		988323	0		<			
ANR	988589	Identifier	i		988323	0					
ANR	988590	Identifier	ncomps		988323	1					
ANR	988591	PostIncDecOperationExpression	i ++	2274:40:82731:82733	988323	2	True				
ANR	988592	Identifier	i		988323	0					
ANR	988593	IncDec	++		988323	1					
ANR	988594	CompoundStatement		38:45:1738:1738	988323	3					
ANR	988595	ExpressionStatement	frac_value = cv2frac ( pconc [ i ] )	2275:20:82758:82788	988323	0	True				
ANR	988596	AssignmentExpression	frac_value = cv2frac ( pconc [ i ] )		988323	0		=			
ANR	988597	Identifier	frac_value		988323	0					
ANR	988598	CallExpression	cv2frac ( pconc [ i ] )		988323	1					
ANR	988599	Callee	cv2frac		988323	0					
ANR	988600	Identifier	cv2frac		988323	0					
ANR	988601	ArgumentList	pconc [ i ]		988323	1					
ANR	988602	Argument	pconc [ i ]		988323	0					
ANR	988603	ArrayIndexing	pconc [ i ]		988323	0					
ANR	988604	Identifier	pconc		988323	0					
ANR	988605	Identifier	i		988323	1					
ANR	988606	ExpressionStatement	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"	2276:20:82810:82938	988323	1	True				
ANR	988607	AssignmentExpression	"cv_frac [ i ] = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		988323	0		=			
ANR	988608	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988609	Identifier	cv_frac		988323	0					
ANR	988610	Identifier	i		988323	1					
ANR	988611	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		988323	1		-			
ANR	988612	Identifier	frac_1		988323	0					
ANR	988613	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ i ] )"		988323	1					
ANR	988614	Callee	gx_map_color_frac		988323	0					
ANR	988615	Identifier	gx_map_color_frac		988323	0					
ANR	988616	ArgumentList	pgs		988323	1					
ANR	988617	Argument	pgs		988323	0					
ANR	988618	Identifier	pgs		988323	0					
ANR	988619	Argument	( frac ) ( frac_1 - frac_value )		988323	1					
ANR	988620	CastExpression	( frac ) ( frac_1 - frac_value )		988323	0					
ANR	988621	CastTarget	frac		988323	0					
ANR	988622	AdditiveExpression	frac_1 - frac_value		988323	1		-			
ANR	988623	Identifier	frac_1		988323	0					
ANR	988624	Identifier	frac_value		988323	1					
ANR	988625	Argument	effective_transfer [ i ]		988323	2					
ANR	988626	ArrayIndexing	effective_transfer [ i ]		988323	0					
ANR	988627	Identifier	effective_transfer		988323	0					
ANR	988628	Identifier	i		988323	1					
ANR	988629	ElseStatement	else		988323	0					
ANR	988630	CompoundStatement		45:11:1995:1995	988323	0					
ANR	988631	IfStatement	if ( has_halftone )		988323	0					
ANR	988632	Condition	has_halftone	2282:12:83007:83018	988323	0	True				
ANR	988633	Identifier	has_halftone		988323	0					
ANR	988634	CompoundStatement		46:26:2023:2023	988323	1					
ANR	988635	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988323	0					
ANR	988636	ForInit	i = 0 ;	2284:17:83090:83095	988323	0	True				
ANR	988637	AssignmentExpression	i = 0		988323	0		=			
ANR	988638	Identifier	i		988323	0					
ANR	988639	PrimaryExpression	0		988323	1					
ANR	988640	Condition	i < ncomps	2284:24:83097:83106	988323	1	True				
ANR	988641	RelationalExpression	i < ncomps		988323	0		<			
ANR	988642	Identifier	i		988323	0					
ANR	988643	Identifier	ncomps		988323	1					
ANR	988644	PostIncDecOperationExpression	i ++	2284:36:83109:83111	988323	2	True				
ANR	988645	Identifier	i		988323	0					
ANR	988646	IncDec	++		988323	1					
ANR	988647	CompoundStatement		48:41:2116:2116	988323	3					
ANR	988648	ExpressionStatement	cv_frac [ i ] = cv2frac ( pconc [ i ] )	2285:16:83132:83162	988323	0	True				
ANR	988649	AssignmentExpression	cv_frac [ i ] = cv2frac ( pconc [ i ] )		988323	0		=			
ANR	988650	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988651	Identifier	cv_frac		988323	0					
ANR	988652	Identifier	i		988323	1					
ANR	988653	CallExpression	cv2frac ( pconc [ i ] )		988323	1					
ANR	988654	Callee	cv2frac		988323	0					
ANR	988655	Identifier	cv2frac		988323	0					
ANR	988656	ArgumentList	pconc [ i ]		988323	1					
ANR	988657	Argument	pconc [ i ]		988323	0					
ANR	988658	ArrayIndexing	pconc [ i ]		988323	0					
ANR	988659	Identifier	pconc		988323	0					
ANR	988660	Identifier	i		988323	1					
ANR	988661	IfStatement	if ( has_halftone )		988323	7					
ANR	988662	Condition	has_halftone	2290:8:83223:83234	988323	0	True				
ANR	988663	Identifier	has_halftone		988323	0					
ANR	988664	CompoundStatement		54:22:2239:2239	988323	1					
ANR	988665	IfStatement	"if ( gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1 )"		988323	0					
ANR	988666	Condition	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"	2291:12:83251:83365	988323	0	True				
ANR	988667	EqualityExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] ) == 1"		988323	0		==			
ANR	988668	CallExpression	"gx_render_device_DeviceN ( & ( cv_frac [ 0 ] ) , pdc , dev , pgs -> dev_ht , & pgs -> screen_phase [ select ] )"		988323	0					
ANR	988669	Callee	gx_render_device_DeviceN		988323	0					
ANR	988670	Identifier	gx_render_device_DeviceN		988323	0					
ANR	988671	ArgumentList	& ( cv_frac [ 0 ] )		988323	1					
ANR	988672	Argument	& ( cv_frac [ 0 ] )		988323	0					
ANR	988673	UnaryOperationExpression	& ( cv_frac [ 0 ] )		988323	0					
ANR	988674	UnaryOperator	&		988323	0					
ANR	988675	ArrayIndexing	cv_frac [ 0 ]		988323	1					
ANR	988676	Identifier	cv_frac		988323	0					
ANR	988677	PrimaryExpression	0		988323	1					
ANR	988678	Argument	pdc		988323	1					
ANR	988679	Identifier	pdc		988323	0					
ANR	988680	Argument	dev		988323	2					
ANR	988681	Identifier	dev		988323	0					
ANR	988682	Argument	pgs -> dev_ht		988323	3					
ANR	988683	PtrMemberAccess	pgs -> dev_ht		988323	0					
ANR	988684	Identifier	pgs		988323	0					
ANR	988685	Identifier	dev_ht		988323	1					
ANR	988686	Argument	& pgs -> screen_phase [ select ]		988323	4					
ANR	988687	UnaryOperationExpression	& pgs -> screen_phase [ select ]		988323	0					
ANR	988688	UnaryOperator	&		988323	0					
ANR	988689	ArrayIndexing	pgs -> screen_phase [ select ]		988323	1					
ANR	988690	PtrMemberAccess	pgs -> screen_phase		988323	0					
ANR	988691	Identifier	pgs		988323	0					
ANR	988692	Identifier	screen_phase		988323	1					
ANR	988693	Identifier	select		988323	1					
ANR	988694	PrimaryExpression	1		988323	1					
ANR	988695	ExpressionStatement	"gx_color_load_select ( pdc , pgs , dev , select )"	2293:12:83380:83423	988323	1	True				
ANR	988696	CallExpression	"gx_color_load_select ( pdc , pgs , dev , select )"		988323	0					
ANR	988697	Callee	gx_color_load_select		988323	0					
ANR	988698	Identifier	gx_color_load_select		988323	0					
ANR	988699	ArgumentList	pdc		988323	1					
ANR	988700	Argument	pdc		988323	0					
ANR	988701	Identifier	pdc		988323	0					
ANR	988702	Argument	pgs		988323	1					
ANR	988703	Identifier	pgs		988323	0					
ANR	988704	Argument	dev		988323	2					
ANR	988705	Identifier	dev		988323	0					
ANR	988706	Argument	select		988323	3					
ANR	988707	Identifier	select		988323	0					
ANR	988708	ElseStatement	else		988323	0					
ANR	988709	CompoundStatement		58:11:2438:2438	988323	0					
ANR	988710	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988323	0					
ANR	988711	ForInit	i = 0 ;	2297:13:83578:83583	988323	0	True				
ANR	988712	AssignmentExpression	i = 0		988323	0		=			
ANR	988713	Identifier	i		988323	0					
ANR	988714	PrimaryExpression	0		988323	1					
ANR	988715	Condition	i < ncomps	2297:20:83585:83594	988323	1	True				
ANR	988716	RelationalExpression	i < ncomps		988323	0		<			
ANR	988717	Identifier	i		988323	0					
ANR	988718	Identifier	ncomps		988323	1					
ANR	988719	PostIncDecOperationExpression	i ++	2297:32:83597:83599	988323	2	True				
ANR	988720	Identifier	i		988323	0					
ANR	988721	IncDec	++		988323	1					
ANR	988722	CompoundStatement		61:37:2604:2604	988323	3					
ANR	988723	ExpressionStatement	color_val [ i ] = frac2cv ( cv_frac [ i ] )	2298:12:83616:83650	988323	0	True				
ANR	988724	AssignmentExpression	color_val [ i ] = frac2cv ( cv_frac [ i ] )		988323	0		=			
ANR	988725	ArrayIndexing	color_val [ i ]		988323	0					
ANR	988726	Identifier	color_val		988323	0					
ANR	988727	Identifier	i		988323	1					
ANR	988728	CallExpression	frac2cv ( cv_frac [ i ] )		988323	1					
ANR	988729	Callee	frac2cv		988323	0					
ANR	988730	Identifier	frac2cv		988323	0					
ANR	988731	ArgumentList	cv_frac [ i ]		988323	1					
ANR	988732	Argument	cv_frac [ i ]		988323	0					
ANR	988733	ArrayIndexing	cv_frac [ i ]		988323	0					
ANR	988734	Identifier	cv_frac		988323	0					
ANR	988735	Identifier	i		988323	1					
ANR	988736	ExpressionStatement	"color = dev_proc ( dev , encode_color ) ( dev , & ( color_val [ 0 ] ) )"	2300:8:83670:83727	988323	1	True				
ANR	988737	AssignmentExpression	"color = dev_proc ( dev , encode_color ) ( dev , & ( color_val [ 0 ] ) )"		988323	0		=			
ANR	988738	Identifier	color		988323	0					
ANR	988739	CallExpression	"dev_proc ( dev , encode_color ) ( dev , & ( color_val [ 0 ] ) )"		988323	1					
ANR	988740	Callee	"dev_proc ( dev , encode_color )"		988323	0					
ANR	988741	CallExpression	"dev_proc ( dev , encode_color )"		988323	0					
ANR	988742	Callee	dev_proc		988323	0					
ANR	988743	Identifier	dev_proc		988323	0					
ANR	988744	ArgumentList	dev		988323	1					
ANR	988745	Argument	dev		988323	0					
ANR	988746	Identifier	dev		988323	0					
ANR	988747	Argument	encode_color		988323	1					
ANR	988748	Identifier	encode_color		988323	0					
ANR	988749	ArgumentList	dev		988323	1					
ANR	988750	Argument	dev		988323	0					
ANR	988751	Identifier	dev		988323	0					
ANR	988752	Argument	& ( color_val [ 0 ] )		988323	1					
ANR	988753	UnaryOperationExpression	& ( color_val [ 0 ] )		988323	0					
ANR	988754	UnaryOperator	&		988323	0					
ANR	988755	ArrayIndexing	color_val [ 0 ]		988323	1					
ANR	988756	Identifier	color_val		988323	0					
ANR	988757	PrimaryExpression	0		988323	1					
ANR	988758	IfStatement	if ( color != gx_no_color_index )		988323	2					
ANR	988759	Condition	color != gx_no_color_index	2302:12:83820:83845	988323	0	True				
ANR	988760	EqualityExpression	color != gx_no_color_index		988323	0		!=			
ANR	988761	Identifier	color		988323	0					
ANR	988762	Identifier	gx_no_color_index		988323	1					
ANR	988763	ExpressionStatement	"color_set_pure ( pdc , color )"	2303:12:83860:83886	988323	1	True				
ANR	988764	CallExpression	"color_set_pure ( pdc , color )"		988323	0					
ANR	988765	Callee	color_set_pure		988323	0					
ANR	988766	Identifier	color_set_pure		988323	0					
ANR	988767	ArgumentList	pdc		988323	1					
ANR	988768	Argument	pdc		988323	0					
ANR	988769	Identifier	pdc		988323	0					
ANR	988770	Argument	color		988323	1					
ANR	988771	Identifier	color		988323	0					
ANR	988772	ReturnType	void		988323	1					
ANR	988773	Identifier	cmap_transfer_halftone		988323	2					
ANR	988774	ParameterList	"gx_color_value * pconc , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , bool has_transfer , bool has_halftone , gs_color_select_t select"		988323	3					
ANR	988775	Parameter	gx_color_value * pconc	2234:23:80837:80857	988323	0	True				
ANR	988776	ParameterType	gx_color_value *		988323	0					
ANR	988777	Identifier	pconc		988323	1					
ANR	988778	Parameter	gx_device_color * pdc	2234:46:80860:80880	988323	1	True				
ANR	988779	ParameterType	gx_device_color *		988323	0					
ANR	988780	Identifier	pdc		988323	1					
ANR	988781	Parameter	const gs_gstate * pgs	2235:5:80888:80908	988323	2	True				
ANR	988782	ParameterType	const gs_gstate *		988323	0					
ANR	988783	Identifier	pgs		988323	1					
ANR	988784	Parameter	gx_device * dev	2235:28:80911:80925	988323	3	True				
ANR	988785	ParameterType	gx_device *		988323	0					
ANR	988786	Identifier	dev		988323	1					
ANR	988787	Parameter	bool has_transfer	2235:45:80928:80944	988323	4	True				
ANR	988788	ParameterType	bool		988323	0					
ANR	988789	Identifier	has_transfer		988323	1					
ANR	988790	Parameter	bool has_halftone	2236:5:80952:80968	988323	5	True				
ANR	988791	ParameterType	bool		988323	0					
ANR	988792	Identifier	has_halftone		988323	1					
ANR	988793	Parameter	gs_color_select_t select	2236:24:80971:80994	988323	6	True				
ANR	988794	ParameterType	gs_color_select_t		988323	0					
ANR	988795	Identifier	select		988323	1					
ANR	988796	CFGEntryNode	ENTRY		988323		True				
ANR	988797	CFGExitNode	EXIT		988323		True				
ANR	988798	Symbol	* dev		988323						
ANR	988799	Symbol	frac_value		988323						
ANR	988800	Symbol	select		988323						
ANR	988801	Symbol	color		988323						
ANR	988802	Symbol	* color_val		988323						
ANR	988803	Symbol	* pgs		988323						
ANR	988804	Symbol	encode_color		988323						
ANR	988805	Symbol	pconc		988323						
ANR	988806	Symbol	ncomps		988323						
ANR	988807	Symbol	dev -> color_info		988323						
ANR	988808	Symbol	GX_CINFO_POLARITY_ADDITIVE		988323						
ANR	988809	Symbol	effective_transfer		988323						
ANR	988810	Symbol	gx_render_device_DeviceN		988323						
ANR	988811	Symbol	* effective_transfer		988323						
ANR	988812	Symbol	color_val		988323						
ANR	988813	Symbol	gx_no_color_index		988323						
ANR	988814	Symbol	dev		988323						
ANR	988815	Symbol	dev -> color_info . polarity		988323						
ANR	988816	Symbol	dev_proc		988323						
ANR	988817	Symbol	cv2frac		988323						
ANR	988818	Symbol	dev -> color_info . opmode		988323						
ANR	988819	Symbol	pgs		988323						
ANR	988820	Symbol	has_halftone		988323						
ANR	988821	Symbol	* pconc		988323						
ANR	988822	Symbol	frac_1		988323						
ANR	988823	Symbol	dev -> color_info . num_components		988323						
ANR	988824	Symbol	i		988323						
ANR	988825	Symbol	GX_CINFO_OPMODE		988323						
ANR	988826	Symbol	* cv_frac		988323						
ANR	988827	Symbol	k		988323						
ANR	988828	Symbol	pgs -> screen_phase		988323						
ANR	988829	Symbol	pdc		988323						
ANR	988830	Symbol	dev -> color_info . black_component		988323						
ANR	988831	Symbol	* i		988323						
ANR	988832	Symbol	gx_map_color_frac		988323						
ANR	988833	Symbol	cv_frac		988323						
ANR	988834	Symbol	pgs -> effective_transfer_non_identity_count		988323						
ANR	988835	Symbol	GX_CINFO_OPMODE_UNKNOWN		988323						
ANR	988836	Symbol	pgs -> dev_ht		988323						
ANR	988837	Symbol	has_transfer		988323						
ANR	988838	Symbol	frac2cv		988323						
ANR	988839	Function	cmap_transfer	2309:0:84022:85361							
ANR	988840	FunctionDef	"cmap_transfer (gx_color_value * pconc , const gs_gstate * pgs , gx_device * dev)"		988839	0					
ANR	988841	CompoundStatement		2311:0:84104:85361	988839	0					
ANR	988842	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	2312:4:84110:84155	988839	0	True				
ANR	988843	IdentifierDecl	ncomps = dev -> color_info . num_components		988839	0					
ANR	988844	IdentifierDeclType	uchar		988839	0					
ANR	988845	Identifier	ncomps		988839	1					
ANR	988846	AssignmentExpression	ncomps = dev -> color_info . num_components		988839	2		=			
ANR	988847	Identifier	ncomps		988839	0					
ANR	988848	MemberAccess	dev -> color_info . num_components		988839	1					
ANR	988849	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988850	Identifier	dev		988839	0					
ANR	988851	Identifier	color_info		988839	1					
ANR	988852	Identifier	num_components		988839	1					
ANR	988853	IdentifierDeclStatement	uchar i ;	2313:4:84161:84168	988839	1	True				
ANR	988854	IdentifierDecl	i		988839	0					
ANR	988855	IdentifierDeclType	uchar		988839	0					
ANR	988856	Identifier	i		988839	1					
ANR	988857	IfStatement	if ( pgs -> effective_transfer_non_identity_count == 0 )		988839	2					
ANR	988858	Condition	pgs -> effective_transfer_non_identity_count == 0	2316:8:84220:84266	988839	0	True				
ANR	988859	EqualityExpression	pgs -> effective_transfer_non_identity_count == 0		988839	0		==			
ANR	988860	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		988839	0					
ANR	988861	Identifier	pgs		988839	0					
ANR	988862	Identifier	effective_transfer_non_identity_count		988839	1					
ANR	988863	PrimaryExpression	0		988839	1					
ANR	988864	CompoundStatement		6:57:164:164	988839	1					
ANR	988865	IfStatement	if ( dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		988839	0					
ANR	988866	Condition	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	2317:12:84283:84389	988839	0	True				
ANR	988867	AndExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE && dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988839	0		&&			
ANR	988868	EqualityExpression	dev -> color_info . polarity != GX_CINFO_POLARITY_ADDITIVE		988839	0		!=			
ANR	988869	MemberAccess	dev -> color_info . polarity		988839	0					
ANR	988870	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988871	Identifier	dev		988839	0					
ANR	988872	Identifier	color_info		988839	1					
ANR	988873	Identifier	polarity		988839	1					
ANR	988874	Identifier	GX_CINFO_POLARITY_ADDITIVE		988839	1					
ANR	988875	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988839	1		==			
ANR	988876	MemberAccess	dev -> color_info . opmode		988839	0					
ANR	988877	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988878	Identifier	dev		988839	0					
ANR	988879	Identifier	color_info		988839	1					
ANR	988880	Identifier	opmode		988839	1					
ANR	988881	Identifier	GX_CINFO_OPMODE_UNKNOWN		988839	1					
ANR	988882	ExpressionStatement	check_cmyk_color_model_comps ( dev )	2318:12:84404:84437	988839	1	True				
ANR	988883	CallExpression	check_cmyk_color_model_comps ( dev )		988839	0					
ANR	988884	Callee	check_cmyk_color_model_comps		988839	0					
ANR	988885	Identifier	check_cmyk_color_model_comps		988839	0					
ANR	988886	ArgumentList	dev		988839	1					
ANR	988887	Argument	dev		988839	0					
ANR	988888	Identifier	dev		988839	0					
ANR	988889	ElseStatement	else		988839	0					
ANR	988890	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		988839	0					
ANR	988891	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	2319:15:84454:84507	988839	0	True				
ANR	988892	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		988839	0		==			
ANR	988893	MemberAccess	dev -> color_info . polarity		988839	0					
ANR	988894	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988895	Identifier	dev		988839	0					
ANR	988896	Identifier	color_info		988839	1					
ANR	988897	Identifier	polarity		988839	1					
ANR	988898	Identifier	GX_CINFO_POLARITY_ADDITIVE		988839	1					
ANR	988899	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988839	1					
ANR	988900	ForInit	i = 0 ;	2320:13:84523:84528	988839	0	True				
ANR	988901	AssignmentExpression	i = 0		988839	0		=			
ANR	988902	Identifier	i		988839	0					
ANR	988903	PrimaryExpression	0		988839	1					
ANR	988904	Condition	i < ncomps	2320:20:84530:84539	988839	1	True				
ANR	988905	RelationalExpression	i < ncomps		988839	0		<			
ANR	988906	Identifier	i		988839	0					
ANR	988907	Identifier	ncomps		988839	1					
ANR	988908	PostIncDecOperationExpression	i ++	2320:32:84542:84544	988839	2	True				
ANR	988909	Identifier	i		988839	0					
ANR	988910	IncDec	++		988839	1					
ANR	988911	ExpressionStatement	"pconc [ i ] = frac2cv ( gx_map_color_frac ( pgs , cv2frac ( pconc [ i ] ) , effective_transfer [ i ] ) )"	2321:12:84559:84674	988839	3	True				
ANR	988912	AssignmentExpression	"pconc [ i ] = frac2cv ( gx_map_color_frac ( pgs , cv2frac ( pconc [ i ] ) , effective_transfer [ i ] ) )"		988839	0		=			
ANR	988913	ArrayIndexing	pconc [ i ]		988839	0					
ANR	988914	Identifier	pconc		988839	0					
ANR	988915	Identifier	i		988839	1					
ANR	988916	CallExpression	"frac2cv ( gx_map_color_frac ( pgs , cv2frac ( pconc [ i ] ) , effective_transfer [ i ] ) )"		988839	1					
ANR	988917	Callee	frac2cv		988839	0					
ANR	988918	Identifier	frac2cv		988839	0					
ANR	988919	ArgumentList	"gx_map_color_frac ( pgs , cv2frac ( pconc [ i ] ) , effective_transfer [ i ] )"		988839	1					
ANR	988920	Argument	"gx_map_color_frac ( pgs , cv2frac ( pconc [ i ] ) , effective_transfer [ i ] )"		988839	0					
ANR	988921	CallExpression	"gx_map_color_frac ( pgs , cv2frac ( pconc [ i ] ) , effective_transfer [ i ] )"		988839	0					
ANR	988922	Callee	gx_map_color_frac		988839	0					
ANR	988923	Identifier	gx_map_color_frac		988839	0					
ANR	988924	ArgumentList	pgs		988839	1					
ANR	988925	Argument	pgs		988839	0					
ANR	988926	Identifier	pgs		988839	0					
ANR	988927	Argument	cv2frac ( pconc [ i ] )		988839	1					
ANR	988928	CallExpression	cv2frac ( pconc [ i ] )		988839	0					
ANR	988929	Callee	cv2frac		988839	0					
ANR	988930	Identifier	cv2frac		988839	0					
ANR	988931	ArgumentList	pconc [ i ]		988839	1					
ANR	988932	Argument	pconc [ i ]		988839	0					
ANR	988933	ArrayIndexing	pconc [ i ]		988839	0					
ANR	988934	Identifier	pconc		988839	0					
ANR	988935	Identifier	i		988839	1					
ANR	988936	Argument	effective_transfer [ i ]		988839	2					
ANR	988937	ArrayIndexing	effective_transfer [ i ]		988839	0					
ANR	988938	Identifier	effective_transfer		988839	0					
ANR	988939	Identifier	i		988839	1					
ANR	988940	ElseStatement	else		988839	0					
ANR	988941	CompoundStatement		13:9:580:580	988839	0					
ANR	988942	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		988839	0					
ANR	988943	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	2324:12:84699:84747	988839	0	True				
ANR	988944	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		988839	0		==			
ANR	988945	MemberAccess	dev -> color_info . opmode		988839	0					
ANR	988946	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988947	Identifier	dev		988839	0					
ANR	988948	Identifier	color_info		988839	1					
ANR	988949	Identifier	opmode		988839	1					
ANR	988950	Identifier	GX_CINFO_OPMODE_UNKNOWN		988839	1					
ANR	988951	CompoundStatement		14:63:645:645	988839	1					
ANR	988952	ExpressionStatement	check_cmyk_color_model_comps ( dev )	2325:12:84764:84797	988839	0	True				
ANR	988953	CallExpression	check_cmyk_color_model_comps ( dev )		988839	0					
ANR	988954	Callee	check_cmyk_color_model_comps		988839	0					
ANR	988955	Identifier	check_cmyk_color_model_comps		988839	0					
ANR	988956	ArgumentList	dev		988839	1					
ANR	988957	Argument	dev		988839	0					
ANR	988958	Identifier	dev		988839	0					
ANR	988959	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE )		988839	1					
ANR	988960	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE	2327:12:84821:84861	988839	0	True				
ANR	988961	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE		988839	0		==			
ANR	988962	MemberAccess	dev -> color_info . opmode		988839	0					
ANR	988963	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988964	Identifier	dev		988839	0					
ANR	988965	Identifier	color_info		988839	1					
ANR	988966	Identifier	opmode		988839	1					
ANR	988967	Identifier	GX_CINFO_OPMODE		988839	1					
ANR	988968	CompoundStatement		17:55:759:759	988839	1					
ANR	988969	ExpressionStatement	i = dev -> color_info . black_component	2328:12:84907:84942	988839	0	True				
ANR	988970	AssignmentExpression	i = dev -> color_info . black_component		988839	0		=			
ANR	988971	Identifier	i		988839	0					
ANR	988972	MemberAccess	dev -> color_info . black_component		988839	1					
ANR	988973	PtrMemberAccess	dev -> color_info		988839	0					
ANR	988974	Identifier	dev		988839	0					
ANR	988975	Identifier	color_info		988839	1					
ANR	988976	Identifier	black_component		988839	1					
ANR	988977	IfStatement	if ( i < ncomps )		988839	1					
ANR	988978	Condition	i < ncomps	2329:16:84960:84969	988839	0	True				
ANR	988979	RelationalExpression	i < ncomps		988839	0		<			
ANR	988980	Identifier	i		988839	0					
ANR	988981	Identifier	ncomps		988839	1					
ANR	988982	ExpressionStatement	"pconc [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] ) )"	2330:16:84988:85133	988839	1	True				
ANR	988983	AssignmentExpression	"pconc [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] ) )"		988839	0		=			
ANR	988984	ArrayIndexing	pconc [ i ]		988839	0					
ANR	988985	Identifier	pconc		988839	0					
ANR	988986	Identifier	i		988839	1					
ANR	988987	CallExpression	"frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] ) )"		988839	1					
ANR	988988	Callee	frac2cv		988839	0					
ANR	988989	Identifier	frac2cv		988839	0					
ANR	988990	ArgumentList	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	1					
ANR	988991	Argument	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	0					
ANR	988992	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	0		-			
ANR	988993	Identifier	frac_1		988839	0					
ANR	988994	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	1					
ANR	988995	Callee	gx_map_color_frac		988839	0					
ANR	988996	Identifier	gx_map_color_frac		988839	0					
ANR	988997	ArgumentList	pgs		988839	1					
ANR	988998	Argument	pgs		988839	0					
ANR	988999	Identifier	pgs		988839	0					
ANR	989000	Argument	( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) )		988839	1					
ANR	989001	CastExpression	( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) )		988839	0					
ANR	989002	CastTarget	frac		988839	0					
ANR	989003	AdditiveExpression	frac_1 - cv2frac ( pconc [ i ] )		988839	1		-			
ANR	989004	Identifier	frac_1		988839	0					
ANR	989005	CallExpression	cv2frac ( pconc [ i ] )		988839	1					
ANR	989006	Callee	cv2frac		988839	0					
ANR	989007	Identifier	cv2frac		988839	0					
ANR	989008	ArgumentList	pconc [ i ]		988839	1					
ANR	989009	Argument	pconc [ i ]		988839	0					
ANR	989010	ArrayIndexing	pconc [ i ]		988839	0					
ANR	989011	Identifier	pconc		988839	0					
ANR	989012	Identifier	i		988839	1					
ANR	989013	Argument	effective_transfer [ i ]		988839	2					
ANR	989014	ArrayIndexing	effective_transfer [ i ]		988839	0					
ANR	989015	Identifier	effective_transfer		988839	0					
ANR	989016	Identifier	i		988839	1					
ANR	989017	ElseStatement	else		988839	0					
ANR	989018	CompoundStatement		22:15:1045:1045	988839	0					
ANR	989019	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		988839	0					
ANR	989020	ForInit	i = 0 ;	2333:17:85169:85174	988839	0	True				
ANR	989021	AssignmentExpression	i = 0		988839	0		=			
ANR	989022	Identifier	i		988839	0					
ANR	989023	PrimaryExpression	0		988839	1					
ANR	989024	Condition	i < ncomps	2333:24:85176:85185	988839	1	True				
ANR	989025	RelationalExpression	i < ncomps		988839	0		<			
ANR	989026	Identifier	i		988839	0					
ANR	989027	Identifier	ncomps		988839	1					
ANR	989028	PostIncDecOperationExpression	i ++	2333:36:85188:85190	988839	2	True				
ANR	989029	Identifier	i		988839	0					
ANR	989030	IncDec	++		988839	1					
ANR	989031	ExpressionStatement	"pconc [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] ) )"	2334:16:85209:85343	988839	3	True				
ANR	989032	AssignmentExpression	"pconc [ i ] = frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] ) )"		988839	0		=			
ANR	989033	ArrayIndexing	pconc [ i ]		988839	0					
ANR	989034	Identifier	pconc		988839	0					
ANR	989035	Identifier	i		988839	1					
ANR	989036	CallExpression	"frac2cv ( frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] ) )"		988839	1					
ANR	989037	Callee	frac2cv		988839	0					
ANR	989038	Identifier	frac2cv		988839	0					
ANR	989039	ArgumentList	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	1					
ANR	989040	Argument	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	0					
ANR	989041	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	0		-			
ANR	989042	Identifier	frac_1		988839	0					
ANR	989043	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) ) , effective_transfer [ i ] )"		988839	1					
ANR	989044	Callee	gx_map_color_frac		988839	0					
ANR	989045	Identifier	gx_map_color_frac		988839	0					
ANR	989046	ArgumentList	pgs		988839	1					
ANR	989047	Argument	pgs		988839	0					
ANR	989048	Identifier	pgs		988839	0					
ANR	989049	Argument	( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) )		988839	1					
ANR	989050	CastExpression	( frac ) ( frac_1 - cv2frac ( pconc [ i ] ) )		988839	0					
ANR	989051	CastTarget	frac		988839	0					
ANR	989052	AdditiveExpression	frac_1 - cv2frac ( pconc [ i ] )		988839	1		-			
ANR	989053	Identifier	frac_1		988839	0					
ANR	989054	CallExpression	cv2frac ( pconc [ i ] )		988839	1					
ANR	989055	Callee	cv2frac		988839	0					
ANR	989056	Identifier	cv2frac		988839	0					
ANR	989057	ArgumentList	pconc [ i ]		988839	1					
ANR	989058	Argument	pconc [ i ]		988839	0					
ANR	989059	ArrayIndexing	pconc [ i ]		988839	0					
ANR	989060	Identifier	pconc		988839	0					
ANR	989061	Identifier	i		988839	1					
ANR	989062	Argument	effective_transfer [ i ]		988839	2					
ANR	989063	ArrayIndexing	effective_transfer [ i ]		988839	0					
ANR	989064	Identifier	effective_transfer		988839	0					
ANR	989065	Identifier	i		988839	1					
ANR	989066	ReturnType	void		988839	1					
ANR	989067	Identifier	cmap_transfer		988839	2					
ANR	989068	ParameterList	"gx_color_value * pconc , const gs_gstate * pgs , gx_device * dev"		988839	3					
ANR	989069	Parameter	gx_color_value * pconc	2310:14:84041:84061	988839	0	True				
ANR	989070	ParameterType	gx_color_value *		988839	0					
ANR	989071	Identifier	pconc		988839	1					
ANR	989072	Parameter	const gs_gstate * pgs	2310:37:84064:84084	988839	1	True				
ANR	989073	ParameterType	const gs_gstate *		988839	0					
ANR	989074	Identifier	pgs		988839	1					
ANR	989075	Parameter	gx_device * dev	2310:60:84087:84101	988839	2	True				
ANR	989076	ParameterType	gx_device *		988839	0					
ANR	989077	Identifier	dev		988839	1					
ANR	989078	CFGEntryNode	ENTRY		988839		True				
ANR	989079	CFGExitNode	EXIT		988839		True				
ANR	989080	Symbol	* dev		988839						
ANR	989081	Symbol	* pconc		988839						
ANR	989082	Symbol	frac_1		988839						
ANR	989083	Symbol	dev -> color_info . num_components		988839						
ANR	989084	Symbol	* pgs		988839						
ANR	989085	Symbol	pconc		988839						
ANR	989086	Symbol	i		988839						
ANR	989087	Symbol	ncomps		988839						
ANR	989088	Symbol	GX_CINFO_OPMODE		988839						
ANR	989089	Symbol	dev -> color_info		988839						
ANR	989090	Symbol	GX_CINFO_POLARITY_ADDITIVE		988839						
ANR	989091	Symbol	effective_transfer		988839						
ANR	989092	Symbol	dev -> color_info . black_component		988839						
ANR	989093	Symbol	* effective_transfer		988839						
ANR	989094	Symbol	* i		988839						
ANR	989095	Symbol	gx_map_color_frac		988839						
ANR	989096	Symbol	dev		988839						
ANR	989097	Symbol	dev -> color_info . polarity		988839						
ANR	989098	Symbol	pgs -> effective_transfer_non_identity_count		988839						
ANR	989099	Symbol	GX_CINFO_OPMODE_UNKNOWN		988839						
ANR	989100	Symbol	cv2frac		988839						
ANR	989101	Symbol	dev -> color_info . opmode		988839						
ANR	989102	Symbol	pgs		988839						
ANR	989103	Symbol	frac2cv		988839						
ANR	989104	Function	cmap_transfer_plane	2341:0:85428:86644							
ANR	989105	FunctionDef	"cmap_transfer_plane (gx_color_value * pconc , const gs_gstate * pgs , gx_device * dev , int plane)"		989104	0					
ANR	989106	CompoundStatement		2344:0:85545:86644	989104	0					
ANR	989107	IdentifierDeclStatement	frac frac_value ;	2345:4:85551:85566	989104	0	True				
ANR	989108	IdentifierDecl	frac_value		989104	0					
ANR	989109	IdentifierDeclType	frac		989104	0					
ANR	989110	Identifier	frac_value		989104	1					
ANR	989111	IdentifierDeclStatement	frac cv_frac ;	2346:4:85572:85584	989104	1	True				
ANR	989112	IdentifierDecl	cv_frac		989104	0					
ANR	989113	IdentifierDeclType	frac		989104	0					
ANR	989114	Identifier	cv_frac		989104	1					
ANR	989115	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		989104	2					
ANR	989116	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	2349:8:85636:85689	989104	0	True				
ANR	989117	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		989104	0		==			
ANR	989118	MemberAccess	dev -> color_info . polarity		989104	0					
ANR	989119	PtrMemberAccess	dev -> color_info		989104	0					
ANR	989120	Identifier	dev		989104	0					
ANR	989121	Identifier	color_info		989104	1					
ANR	989122	Identifier	polarity		989104	1					
ANR	989123	Identifier	GX_CINFO_POLARITY_ADDITIVE		989104	1					
ANR	989124	CompoundStatement		6:64:146:146	989104	1					
ANR	989125	ExpressionStatement	frac_value = cv2frac ( pconc [ 0 ] )	2350:8:85702:85732	989104	0	True				
ANR	989126	AssignmentExpression	frac_value = cv2frac ( pconc [ 0 ] )		989104	0		=			
ANR	989127	Identifier	frac_value		989104	0					
ANR	989128	CallExpression	cv2frac ( pconc [ 0 ] )		989104	1					
ANR	989129	Callee	cv2frac		989104	0					
ANR	989130	Identifier	cv2frac		989104	0					
ANR	989131	ArgumentList	pconc [ 0 ]		989104	1					
ANR	989132	Argument	pconc [ 0 ]		989104	0					
ANR	989133	ArrayIndexing	pconc [ 0 ]		989104	0					
ANR	989134	Identifier	pconc		989104	0					
ANR	989135	PrimaryExpression	0		989104	1					
ANR	989136	ExpressionStatement	"cv_frac = gx_map_color_frac ( pgs , frac_value , effective_transfer [ plane ] )"	2351:8:85742:85813	989104	1	True				
ANR	989137	AssignmentExpression	"cv_frac = gx_map_color_frac ( pgs , frac_value , effective_transfer [ plane ] )"		989104	0		=			
ANR	989138	Identifier	cv_frac		989104	0					
ANR	989139	CallExpression	"gx_map_color_frac ( pgs , frac_value , effective_transfer [ plane ] )"		989104	1					
ANR	989140	Callee	gx_map_color_frac		989104	0					
ANR	989141	Identifier	gx_map_color_frac		989104	0					
ANR	989142	ArgumentList	pgs		989104	1					
ANR	989143	Argument	pgs		989104	0					
ANR	989144	Identifier	pgs		989104	0					
ANR	989145	Argument	frac_value		989104	1					
ANR	989146	Identifier	frac_value		989104	0					
ANR	989147	Argument	effective_transfer [ plane ]		989104	2					
ANR	989148	ArrayIndexing	effective_transfer [ plane ]		989104	0					
ANR	989149	Identifier	effective_transfer		989104	0					
ANR	989150	Identifier	plane		989104	1					
ANR	989151	ExpressionStatement	pconc [ 0 ] = frac2cv ( cv_frac )	2352:8:85823:85850	989104	2	True				
ANR	989152	AssignmentExpression	pconc [ 0 ] = frac2cv ( cv_frac )		989104	0		=			
ANR	989153	ArrayIndexing	pconc [ 0 ]		989104	0					
ANR	989154	Identifier	pconc		989104	0					
ANR	989155	PrimaryExpression	0		989104	1					
ANR	989156	CallExpression	frac2cv ( cv_frac )		989104	1					
ANR	989157	Callee	frac2cv		989104	0					
ANR	989158	Identifier	frac2cv		989104	0					
ANR	989159	ArgumentList	cv_frac		989104	1					
ANR	989160	Argument	cv_frac		989104	0					
ANR	989161	Identifier	cv_frac		989104	0					
ANR	989162	ElseStatement	else		989104	0					
ANR	989163	CompoundStatement		10:11:317:317	989104	0					
ANR	989164	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN )		989104	0					
ANR	989165	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN	2354:12:85877:85925	989104	0	True				
ANR	989166	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE_UNKNOWN		989104	0		==			
ANR	989167	MemberAccess	dev -> color_info . opmode		989104	0					
ANR	989168	PtrMemberAccess	dev -> color_info		989104	0					
ANR	989169	Identifier	dev		989104	0					
ANR	989170	Identifier	color_info		989104	1					
ANR	989171	Identifier	opmode		989104	1					
ANR	989172	Identifier	GX_CINFO_OPMODE_UNKNOWN		989104	1					
ANR	989173	CompoundStatement		11:63:382:382	989104	1					
ANR	989174	ExpressionStatement	check_cmyk_color_model_comps ( dev )	2355:12:85942:85975	989104	0	True				
ANR	989175	CallExpression	check_cmyk_color_model_comps ( dev )		989104	0					
ANR	989176	Callee	check_cmyk_color_model_comps		989104	0					
ANR	989177	Identifier	check_cmyk_color_model_comps		989104	0					
ANR	989178	ArgumentList	dev		989104	1					
ANR	989179	Argument	dev		989104	0					
ANR	989180	Identifier	dev		989104	0					
ANR	989181	IfStatement	if ( dev -> color_info . opmode == GX_CINFO_OPMODE )		989104	1					
ANR	989182	Condition	dev -> color_info . opmode == GX_CINFO_OPMODE	2357:12:85999:86039	989104	0	True				
ANR	989183	EqualityExpression	dev -> color_info . opmode == GX_CINFO_OPMODE		989104	0		==			
ANR	989184	MemberAccess	dev -> color_info . opmode		989104	0					
ANR	989185	PtrMemberAccess	dev -> color_info		989104	0					
ANR	989186	Identifier	dev		989104	0					
ANR	989187	Identifier	color_info		989104	1					
ANR	989188	Identifier	opmode		989104	1					
ANR	989189	Identifier	GX_CINFO_OPMODE		989104	1					
ANR	989190	CompoundStatement		15:12:539:579	989104	1					
ANR	989191	IdentifierDeclStatement	uint k = dev -> color_info . black_component ;	2358:12:86085:86125	989104	0	True				
ANR	989192	IdentifierDecl	k = dev -> color_info . black_component		989104	0					
ANR	989193	IdentifierDeclType	uint		989104	0					
ANR	989194	Identifier	k		989104	1					
ANR	989195	AssignmentExpression	k = dev -> color_info . black_component		989104	2		=			
ANR	989196	Identifier	k		989104	0					
ANR	989197	MemberAccess	dev -> color_info . black_component		989104	1					
ANR	989198	PtrMemberAccess	dev -> color_info		989104	0					
ANR	989199	Identifier	dev		989104	0					
ANR	989200	Identifier	color_info		989104	1					
ANR	989201	Identifier	black_component		989104	1					
ANR	989202	IfStatement	if ( plane == k )		989104	1					
ANR	989203	Condition	plane == k	2359:16:86143:86152	989104	0	True				
ANR	989204	EqualityExpression	plane == k		989104	0		==			
ANR	989205	Identifier	plane		989104	0					
ANR	989206	Identifier	k		989104	1					
ANR	989207	CompoundStatement		16:28:609:609	989104	1					
ANR	989208	ExpressionStatement	frac_value = cv2frac ( pconc [ 0 ] )	2360:16:86173:86203	989104	0	True				
ANR	989209	AssignmentExpression	frac_value = cv2frac ( pconc [ 0 ] )		989104	0		=			
ANR	989210	Identifier	frac_value		989104	0					
ANR	989211	CallExpression	cv2frac ( pconc [ 0 ] )		989104	1					
ANR	989212	Callee	cv2frac		989104	0					
ANR	989213	Identifier	cv2frac		989104	0					
ANR	989214	ArgumentList	pconc [ 0 ]		989104	1					
ANR	989215	Argument	pconc [ 0 ]		989104	0					
ANR	989216	ArrayIndexing	pconc [ 0 ]		989104	0					
ANR	989217	Identifier	pconc		989104	0					
ANR	989218	PrimaryExpression	0		989104	1					
ANR	989219	ExpressionStatement	"cv_frac = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"	2361:16:86221:86334	989104	1	True				
ANR	989220	AssignmentExpression	"cv_frac = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"		989104	0		=			
ANR	989221	Identifier	cv_frac		989104	0					
ANR	989222	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"		989104	1		-			
ANR	989223	Identifier	frac_1		989104	0					
ANR	989224	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"		989104	1					
ANR	989225	Callee	gx_map_color_frac		989104	0					
ANR	989226	Identifier	gx_map_color_frac		989104	0					
ANR	989227	ArgumentList	pgs		989104	1					
ANR	989228	Argument	pgs		989104	0					
ANR	989229	Identifier	pgs		989104	0					
ANR	989230	Argument	( frac ) ( frac_1 - frac_value )		989104	1					
ANR	989231	CastExpression	( frac ) ( frac_1 - frac_value )		989104	0					
ANR	989232	CastTarget	frac		989104	0					
ANR	989233	AdditiveExpression	frac_1 - frac_value		989104	1		-			
ANR	989234	Identifier	frac_1		989104	0					
ANR	989235	Identifier	frac_value		989104	1					
ANR	989236	Argument	effective_transfer [ plane ]		989104	2					
ANR	989237	ArrayIndexing	effective_transfer [ plane ]		989104	0					
ANR	989238	Identifier	effective_transfer		989104	0					
ANR	989239	Identifier	plane		989104	1					
ANR	989240	ExpressionStatement	pconc [ 0 ] = frac2cv ( cv_frac )	2363:16:86352:86379	989104	2	True				
ANR	989241	AssignmentExpression	pconc [ 0 ] = frac2cv ( cv_frac )		989104	0		=			
ANR	989242	ArrayIndexing	pconc [ 0 ]		989104	0					
ANR	989243	Identifier	pconc		989104	0					
ANR	989244	PrimaryExpression	0		989104	1					
ANR	989245	CallExpression	frac2cv ( cv_frac )		989104	1					
ANR	989246	Callee	frac2cv		989104	0					
ANR	989247	Identifier	frac2cv		989104	0					
ANR	989248	ArgumentList	cv_frac		989104	1					
ANR	989249	Argument	cv_frac		989104	0					
ANR	989250	Identifier	cv_frac		989104	0					
ANR	989251	ElseStatement	else		989104	0					
ANR	989252	CompoundStatement		22:15:864:864	989104	0					
ANR	989253	ExpressionStatement	frac_value = cv2frac ( pconc [ 0 ] )	2366:12:86424:86454	989104	0	True				
ANR	989254	AssignmentExpression	frac_value = cv2frac ( pconc [ 0 ] )		989104	0		=			
ANR	989255	Identifier	frac_value		989104	0					
ANR	989256	CallExpression	cv2frac ( pconc [ 0 ] )		989104	1					
ANR	989257	Callee	cv2frac		989104	0					
ANR	989258	Identifier	cv2frac		989104	0					
ANR	989259	ArgumentList	pconc [ 0 ]		989104	1					
ANR	989260	Argument	pconc [ 0 ]		989104	0					
ANR	989261	ArrayIndexing	pconc [ 0 ]		989104	0					
ANR	989262	Identifier	pconc		989104	0					
ANR	989263	PrimaryExpression	0		989104	1					
ANR	989264	ExpressionStatement	"cv_frac = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"	2367:12:86468:86585	989104	1	True				
ANR	989265	AssignmentExpression	"cv_frac = frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"		989104	0		=			
ANR	989266	Identifier	cv_frac		989104	0					
ANR	989267	AdditiveExpression	"frac_1 - gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"		989104	1		-			
ANR	989268	Identifier	frac_1		989104	0					
ANR	989269	CallExpression	"gx_map_color_frac ( pgs , ( frac ) ( frac_1 - frac_value ) , effective_transfer [ plane ] )"		989104	1					
ANR	989270	Callee	gx_map_color_frac		989104	0					
ANR	989271	Identifier	gx_map_color_frac		989104	0					
ANR	989272	ArgumentList	pgs		989104	1					
ANR	989273	Argument	pgs		989104	0					
ANR	989274	Identifier	pgs		989104	0					
ANR	989275	Argument	( frac ) ( frac_1 - frac_value )		989104	1					
ANR	989276	CastExpression	( frac ) ( frac_1 - frac_value )		989104	0					
ANR	989277	CastTarget	frac		989104	0					
ANR	989278	AdditiveExpression	frac_1 - frac_value		989104	1		-			
ANR	989279	Identifier	frac_1		989104	0					
ANR	989280	Identifier	frac_value		989104	1					
ANR	989281	Argument	effective_transfer [ plane ]		989104	2					
ANR	989282	ArrayIndexing	effective_transfer [ plane ]		989104	0					
ANR	989283	Identifier	effective_transfer		989104	0					
ANR	989284	Identifier	plane		989104	1					
ANR	989285	ExpressionStatement	pconc [ 0 ] = frac2cv ( cv_frac )	2369:12:86599:86626	989104	2	True				
ANR	989286	AssignmentExpression	pconc [ 0 ] = frac2cv ( cv_frac )		989104	0		=			
ANR	989287	ArrayIndexing	pconc [ 0 ]		989104	0					
ANR	989288	Identifier	pconc		989104	0					
ANR	989289	PrimaryExpression	0		989104	1					
ANR	989290	CallExpression	frac2cv ( cv_frac )		989104	1					
ANR	989291	Callee	frac2cv		989104	0					
ANR	989292	Identifier	frac2cv		989104	0					
ANR	989293	ArgumentList	cv_frac		989104	1					
ANR	989294	Argument	cv_frac		989104	0					
ANR	989295	Identifier	cv_frac		989104	0					
ANR	989296	ReturnType	void		989104	1					
ANR	989297	Identifier	cmap_transfer_plane		989104	2					
ANR	989298	ParameterList	"gx_color_value * pconc , const gs_gstate * pgs , gx_device * dev , int plane"		989104	3					
ANR	989299	Parameter	gx_color_value * pconc	2342:20:85453:85473	989104	0	True				
ANR	989300	ParameterType	gx_color_value *		989104	0					
ANR	989301	Identifier	pconc		989104	1					
ANR	989302	Parameter	const gs_gstate * pgs	2342:43:85476:85495	989104	1	True				
ANR	989303	ParameterType	const gs_gstate *		989104	0					
ANR	989304	Identifier	pgs		989104	1					
ANR	989305	Parameter	gx_device * dev	2343:20:85518:85531	989104	2	True				
ANR	989306	ParameterType	gx_device *		989104	0					
ANR	989307	Identifier	dev		989104	1					
ANR	989308	Parameter	int plane	2343:36:85534:85542	989104	3	True				
ANR	989309	ParameterType	int		989104	0					
ANR	989310	Identifier	plane		989104	1					
ANR	989311	CFGEntryNode	ENTRY		989104		True				
ANR	989312	CFGExitNode	EXIT		989104		True				
ANR	989313	Symbol	plane		989104						
ANR	989314	Symbol	frac_value		989104						
ANR	989315	Symbol	* dev		989104						
ANR	989316	Symbol	* pconc		989104						
ANR	989317	Symbol	frac_1		989104						
ANR	989318	Symbol	pconc		989104						
ANR	989319	Symbol	GX_CINFO_OPMODE		989104						
ANR	989320	Symbol	k		989104						
ANR	989321	Symbol	GX_CINFO_POLARITY_ADDITIVE		989104						
ANR	989322	Symbol	dev -> color_info		989104						
ANR	989323	Symbol	effective_transfer		989104						
ANR	989324	Symbol	dev -> color_info . black_component		989104						
ANR	989325	Symbol	* effective_transfer		989104						
ANR	989326	Symbol	gx_map_color_frac		989104						
ANR	989327	Symbol	dev		989104						
ANR	989328	Symbol	dev -> color_info . polarity		989104						
ANR	989329	Symbol	cv_frac		989104						
ANR	989330	Symbol	GX_CINFO_OPMODE_UNKNOWN		989104						
ANR	989331	Symbol	cv2frac		989104						
ANR	989332	Symbol	* plane		989104						
ANR	989333	Symbol	dev -> color_info . opmode		989104						
ANR	989334	Symbol	pgs		989104						
ANR	989335	Symbol	frac2cv		989104						
ANR	989336	Function	gx_device_uses_std_cmap_procs	2375:0:86648:88189							
ANR	989337	FunctionDef	"gx_device_uses_std_cmap_procs (gx_device * dev , const gs_gstate * pgs)"		989336	0					
ANR	989338	CompoundStatement		2377:0:86723:88189	989336	0					
ANR	989339	IdentifierDeclStatement	subclass_color_mappings scm ;	2378:4:86729:86756	989336	0	True				
ANR	989340	IdentifierDecl	scm		989336	0					
ANR	989341	IdentifierDeclType	subclass_color_mappings		989336	0					
ANR	989342	Identifier	scm		989336	1					
ANR	989343	IdentifierDeclStatement	const gx_cm_color_map_procs * pprocs ;	2379:4:86762:86797	989336	1	True				
ANR	989344	IdentifierDecl	* pprocs		989336	0					
ANR	989345	IdentifierDeclType	const gx_cm_color_map_procs *		989336	0					
ANR	989346	Identifier	pprocs		989336	1					
ANR	989347	IdentifierDeclStatement	gsicc_rendering_param_t render_cond ;	2380:4:86803:86838	989336	2	True				
ANR	989348	IdentifierDecl	render_cond		989336	0					
ANR	989349	IdentifierDeclType	gsicc_rendering_param_t		989336	0					
ANR	989350	Identifier	render_cond		989336	1					
ANR	989351	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile = NULL ;	2381:4:86844:86881	989336	3	True				
ANR	989352	IdentifierDecl	* dev_profile = NULL		989336	0					
ANR	989353	IdentifierDeclType	cmm_dev_profile_t *		989336	0					
ANR	989354	Identifier	dev_profile		989336	1					
ANR	989355	AssignmentExpression	* dev_profile = NULL		989336	2		=			
ANR	989356	Identifier	NULL		989336	0					
ANR	989357	Identifier	NULL		989336	1					
ANR	989358	IdentifierDeclStatement	cmm_profile_t * des_profile = NULL ;	2382:4:86887:86920	989336	4	True				
ANR	989359	IdentifierDecl	* des_profile = NULL		989336	0					
ANR	989360	IdentifierDeclType	cmm_profile_t *		989336	0					
ANR	989361	Identifier	des_profile		989336	1					
ANR	989362	AssignmentExpression	* des_profile = NULL		989336	2		=			
ANR	989363	Identifier	NULL		989336	0					
ANR	989364	Identifier	NULL		989336	1					
ANR	989365	ExpressionStatement	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	2384:4:86927:86973	989336	5	True				
ANR	989366	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		989336	0					
ANR	989367	Callee	"dev_proc ( dev , get_profile )"		989336	0					
ANR	989368	CallExpression	"dev_proc ( dev , get_profile )"		989336	0					
ANR	989369	Callee	dev_proc		989336	0					
ANR	989370	Identifier	dev_proc		989336	0					
ANR	989371	ArgumentList	dev		989336	1					
ANR	989372	Argument	dev		989336	0					
ANR	989373	Identifier	dev		989336	0					
ANR	989374	Argument	get_profile		989336	1					
ANR	989375	Identifier	get_profile		989336	0					
ANR	989376	ArgumentList	dev		989336	1					
ANR	989377	Argument	dev		989336	0					
ANR	989378	Identifier	dev		989336	0					
ANR	989379	Argument	& dev_profile		989336	1					
ANR	989380	UnaryOperationExpression	& dev_profile		989336	0					
ANR	989381	UnaryOperator	&		989336	0					
ANR	989382	Identifier	dev_profile		989336	1					
ANR	989383	ExpressionStatement	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"	2385:4:86979:87091	989336	6	True				
ANR	989384	CallExpression	"gsicc_extract_profile ( dev -> graphics_type_tag , dev_profile , & des_profile , & render_cond )"		989336	0					
ANR	989385	Callee	gsicc_extract_profile		989336	0					
ANR	989386	Identifier	gsicc_extract_profile		989336	0					
ANR	989387	ArgumentList	dev -> graphics_type_tag		989336	1					
ANR	989388	Argument	dev -> graphics_type_tag		989336	0					
ANR	989389	PtrMemberAccess	dev -> graphics_type_tag		989336	0					
ANR	989390	Identifier	dev		989336	0					
ANR	989391	Identifier	graphics_type_tag		989336	1					
ANR	989392	Argument	dev_profile		989336	1					
ANR	989393	Identifier	dev_profile		989336	0					
ANR	989394	Argument	& des_profile		989336	2					
ANR	989395	UnaryOperationExpression	& des_profile		989336	0					
ANR	989396	UnaryOperator	&		989336	0					
ANR	989397	Identifier	des_profile		989336	1					
ANR	989398	Argument	& render_cond		989336	3					
ANR	989399	UnaryOperationExpression	& render_cond		989336	0					
ANR	989400	UnaryOperator	&		989336	0					
ANR	989401	Identifier	render_cond		989336	1					
ANR	989402	IfStatement	if ( des_profile != NULL )		989336	7					
ANR	989403	Condition	des_profile != NULL	2388:8:87102:87120	989336	0	True				
ANR	989404	EqualityExpression	des_profile != NULL		989336	0		!=			
ANR	989405	Identifier	des_profile		989336	0					
ANR	989406	Identifier	NULL		989336	1					
ANR	989407	CompoundStatement		12:29:399:399	989336	1					
ANR	989408	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	2389:8:87133:87176	989336	0	True				
ANR	989409	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		989336	0		=			
ANR	989410	Identifier	scm		989336	0					
ANR	989411	CallExpression	get_color_mapping_procs_subclass ( dev )		989336	1					
ANR	989412	Callee	get_color_mapping_procs_subclass		989336	0					
ANR	989413	Identifier	get_color_mapping_procs_subclass		989336	0					
ANR	989414	ArgumentList	dev		989336	1					
ANR	989415	Argument	dev		989336	0					
ANR	989416	Identifier	dev		989336	0					
ANR	989417	ExpressionStatement	pprocs = scm . procs	2390:8:87186:87204	989336	1	True				
ANR	989418	AssignmentExpression	pprocs = scm . procs		989336	0		=			
ANR	989419	Identifier	pprocs		989336	0					
ANR	989420	MemberAccess	scm . procs		989336	1					
ANR	989421	Identifier	scm		989336	0					
ANR	989422	Identifier	procs		989336	1					
ANR	989423	IfStatement	if ( fwd_uses_fwd_cmap_procs ( dev ) )		989336	2					
ANR	989424	Condition	fwd_uses_fwd_cmap_procs ( dev )	2396:12:87541:87568	989336	0	True				
ANR	989425	CallExpression	fwd_uses_fwd_cmap_procs ( dev )		989336	0					
ANR	989426	Callee	fwd_uses_fwd_cmap_procs		989336	0					
ANR	989427	Identifier	fwd_uses_fwd_cmap_procs		989336	0					
ANR	989428	ArgumentList	dev		989336	1					
ANR	989429	Argument	dev		989336	0					
ANR	989430	Identifier	dev		989336	0					
ANR	989431	CompoundStatement		20:42:847:847	989336	1					
ANR	989432	ExpressionStatement	pprocs = fwd_get_target_cmap_procs ( dev )	2397:12:87585:87624	989336	0	True				
ANR	989433	AssignmentExpression	pprocs = fwd_get_target_cmap_procs ( dev )		989336	0		=			
ANR	989434	Identifier	pprocs		989336	0					
ANR	989435	CallExpression	fwd_get_target_cmap_procs ( dev )		989336	1					
ANR	989436	Callee	fwd_get_target_cmap_procs		989336	0					
ANR	989437	Identifier	fwd_get_target_cmap_procs		989336	0					
ANR	989438	ArgumentList	dev		989336	1					
ANR	989439	Argument	dev		989336	0					
ANR	989440	Identifier	dev		989336	0					
ANR	989441	SwitchStatement	switch ( des_profile -> num_comps )		989336	3					
ANR	989442	Condition	des_profile -> num_comps	2399:15:87651:87672	989336	0	True				
ANR	989443	PtrMemberAccess	des_profile -> num_comps		989336	0					
ANR	989444	Identifier	des_profile		989336	0					
ANR	989445	Identifier	num_comps		989336	1					
ANR	989446	CompoundStatement		23:39:951:951	989336	1					
ANR	989447	Label	case 1 :	2400:12:87689:87695	989336	0	True				
ANR	989448	IfStatement	if ( pprocs == & DeviceGray_procs )		989336	1					
ANR	989449	Condition	pprocs == & DeviceGray_procs	2401:20:87717:87743	989336	0	True				
ANR	989450	EqualityExpression	pprocs == & DeviceGray_procs		989336	0		==			
ANR	989451	Identifier	pprocs		989336	0					
ANR	989452	UnaryOperationExpression	& DeviceGray_procs		989336	1					
ANR	989453	UnaryOperator	&		989336	0					
ANR	989454	Identifier	DeviceGray_procs		989336	1					
ANR	989455	CompoundStatement		25:49:1022:1022	989336	1					
ANR	989456	ReturnStatement	return true ;	2402:20:87768:87779	989336	0	True				
ANR	989457	Identifier	true		989336	0					
ANR	989458	BreakStatement	break ;	2404:16:87815:87820	989336	2	True				
ANR	989459	Label	case 3 :	2405:12:87834:87840	989336	3	True				
ANR	989460	IfStatement	if ( pprocs == & DeviceRGB_procs )		989336	4					
ANR	989461	Condition	pprocs == & DeviceRGB_procs	2406:20:87862:87887	989336	0	True				
ANR	989462	EqualityExpression	pprocs == & DeviceRGB_procs		989336	0		==			
ANR	989463	Identifier	pprocs		989336	0					
ANR	989464	UnaryOperationExpression	& DeviceRGB_procs		989336	1					
ANR	989465	UnaryOperator	&		989336	0					
ANR	989466	Identifier	DeviceRGB_procs		989336	1					
ANR	989467	CompoundStatement		30:48:1166:1166	989336	1					
ANR	989468	ReturnStatement	return true ;	2407:20:87912:87923	989336	0	True				
ANR	989469	Identifier	true		989336	0					
ANR	989470	BreakStatement	break ;	2409:16:87959:87964	989336	5	True				
ANR	989471	Label	case 4 :	2410:12:87978:87984	989336	6	True				
ANR	989472	IfStatement	if ( pprocs == & DeviceCMYK_procs )		989336	7					
ANR	989473	Condition	pprocs == & DeviceCMYK_procs	2411:20:88006:88032	989336	0	True				
ANR	989474	EqualityExpression	pprocs == & DeviceCMYK_procs		989336	0		==			
ANR	989475	Identifier	pprocs		989336	0					
ANR	989476	UnaryOperationExpression	& DeviceCMYK_procs		989336	1					
ANR	989477	UnaryOperator	&		989336	0					
ANR	989478	Identifier	DeviceCMYK_procs		989336	1					
ANR	989479	CompoundStatement		35:49:1311:1311	989336	1					
ANR	989480	ReturnStatement	return true ;	2412:20:88057:88068	989336	0	True				
ANR	989481	Identifier	true		989336	0					
ANR	989482	BreakStatement	break ;	2414:16:88104:88109	989336	8	True				
ANR	989483	Label	default :	2415:12:88123:88130	989336	9	True				
ANR	989484	Identifier	default		989336	0					
ANR	989485	BreakStatement	break ;	2416:16:88148:88153	989336	10	True				
ANR	989486	ReturnStatement	return false ;	2419:4:88175:88187	989336	8	True				
ANR	989487	Identifier	false		989336	0					
ANR	989488	ReturnType	bool		989336	1					
ANR	989489	Identifier	gx_device_uses_std_cmap_procs		989336	2					
ANR	989490	ParameterList	"gx_device * dev , const gs_gstate * pgs"		989336	3					
ANR	989491	Parameter	gx_device * dev	2376:30:86683:86697	989336	0	True				
ANR	989492	ParameterType	gx_device *		989336	0					
ANR	989493	Identifier	dev		989336	1					
ANR	989494	Parameter	const gs_gstate * pgs	2376:47:86700:86720	989336	1	True				
ANR	989495	ParameterType	const gs_gstate *		989336	0					
ANR	989496	Identifier	pgs		989336	1					
ANR	989497	CFGEntryNode	ENTRY		989336		True				
ANR	989498	CFGExitNode	EXIT		989336		True				
ANR	989499	Symbol	* dev		989336						
ANR	989500	Symbol	& DeviceGray_procs		989336						
ANR	989501	Symbol	& DeviceRGB_procs		989336						
ANR	989502	Symbol	dev_profile		989336						
ANR	989503	Symbol	des_profile -> num_comps		989336						
ANR	989504	Symbol	& des_profile		989336						
ANR	989505	Symbol	pprocs		989336						
ANR	989506	Symbol	dev		989336						
ANR	989507	Symbol	get_color_mapping_procs_subclass		989336						
ANR	989508	Symbol	& DeviceCMYK_procs		989336						
ANR	989509	Symbol	des_profile		989336						
ANR	989510	Symbol	* des_profile		989336						
ANR	989511	Symbol	scm		989336						
ANR	989512	Symbol	pgs		989336						
ANR	989513	Symbol	render_cond		989336						
ANR	989514	Symbol	get_profile		989336						
ANR	989515	Symbol	NULL		989336						
ANR	989516	Symbol	& dev_profile		989336						
ANR	989517	Symbol	false		989336						
ANR	989518	Symbol	& render_cond		989336						
ANR	989519	Symbol	scm . procs		989336						
ANR	989520	Symbol	fwd_get_target_cmap_procs		989336						
ANR	989521	Symbol	true		989336						
ANR	989522	Symbol	dev -> graphics_type_tag		989336						
ANR	989523	Symbol	fwd_uses_fwd_cmap_procs		989336						
