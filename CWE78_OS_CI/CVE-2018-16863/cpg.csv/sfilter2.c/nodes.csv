command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9482040	File	data/converged/CVE-2018-16863_ghostpdl/sfilter2.c								
ANR	9482041	Function	s_A85E_init	31:0:860:1000							
ANR	9482042	FunctionDef	s_A85E_init (stream_state * st)		9482041	0					
ANR	9482043	CompoundStatement		33:0:902:1000	9482041	0					
ANR	9482044	Statement	stream_A85E_state	34:4:908:924	9482041	0	True				
ANR	9482045	Statement	*	34:22:926:926	9482041	1	True				
ANR	9482046	Statement	const	34:23:927:931	9482041	2	True				
ANR	9482047	ExpressionStatement	ss = ( stream_A85E_state * ) st	34:29:933:962	9482041	3	True				
ANR	9482048	AssignmentExpression	ss = ( stream_A85E_state * ) st		9482041	0		=			
ANR	9482049	Identifier	ss		9482041	0					
ANR	9482050	CastExpression	( stream_A85E_state * ) st		9482041	1					
ANR	9482051	CastTarget	stream_A85E_state *		9482041	0					
ANR	9482052	Identifier	st		9482041	1					
ANR	9482053	ReturnStatement	return s_A85E_init_inline ( ss ) ;	36:4:969:998	9482041	4	True				
ANR	9482054	CallExpression	s_A85E_init_inline ( ss )		9482041	0					
ANR	9482055	Callee	s_A85E_init_inline		9482041	0					
ANR	9482056	Identifier	s_A85E_init_inline		9482041	0					
ANR	9482057	ArgumentList	ss		9482041	1					
ANR	9482058	Argument	ss		9482041	0					
ANR	9482059	Identifier	ss		9482041	0					
ANR	9482060	ReturnType	static int		9482041	1					
ANR	9482061	Identifier	s_A85E_init		9482041	2					
ANR	9482062	ParameterList	stream_state * st		9482041	3					
ANR	9482063	Parameter	stream_state * st	32:12:883:899	9482041	0	True				
ANR	9482064	ParameterType	stream_state *		9482041	0					
ANR	9482065	Identifier	st		9482041	1					
ANR	9482066	CFGEntryNode	ENTRY		9482041		True				
ANR	9482067	CFGExitNode	EXIT		9482041		True				
ANR	9482068	Symbol	ss		9482041						
ANR	9482069	Symbol	st		9482041						
ANR	9482070	Symbol	s_A85E_init_inline		9482041						
ANR	9482071	Function	s_A85E_process	41:0:1084:8172							
ANR	9482072	FunctionDef	"s_A85E_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9482071	0					
ANR	9482073	CompoundStatement		44:0:1206:8172	9482071	0					
ANR	9482074	Statement	stream_A85E_state	45:4:1212:1228	9482071	0	True				
ANR	9482075	Statement	*	45:22:1230:1230	9482071	1	True				
ANR	9482076	Statement	const	45:23:1231:1235	9482071	2	True				
ANR	9482077	ExpressionStatement	ss = ( stream_A85E_state * ) st	45:29:1237:1266	9482071	3	True				
ANR	9482078	AssignmentExpression	ss = ( stream_A85E_state * ) st		9482071	0		=			
ANR	9482079	Identifier	ss		9482071	0					
ANR	9482080	CastExpression	( stream_A85E_state * ) st		9482071	1					
ANR	9482081	CastTarget	stream_A85E_state *		9482071	0					
ANR	9482082	Identifier	st		9482071	1					
ANR	9482083	Statement	register	46:4:1272:1279	9482071	4	True				
ANR	9482084	IdentifierDeclStatement	const byte * p = pr -> ptr ;	46:13:1281:1304	9482071	5	True				
ANR	9482085	IdentifierDecl	* p = pr -> ptr		9482071	0					
ANR	9482086	IdentifierDeclType	const byte *		9482071	0					
ANR	9482087	Identifier	p		9482071	1					
ANR	9482088	AssignmentExpression	* p = pr -> ptr		9482071	2		=			
ANR	9482089	Identifier	p		9482071	0					
ANR	9482090	PtrMemberAccess	pr -> ptr		9482071	1					
ANR	9482091	Identifier	pr		9482071	0					
ANR	9482092	Identifier	ptr		9482071	1					
ANR	9482093	Statement	register	47:4:1310:1317	9482071	6	True				
ANR	9482094	IdentifierDeclStatement	byte * q = pw -> ptr ;	47:13:1319:1336	9482071	7	True				
ANR	9482095	IdentifierDecl	* q = pw -> ptr		9482071	0					
ANR	9482096	IdentifierDeclType	byte *		9482071	0					
ANR	9482097	Identifier	q		9482071	1					
ANR	9482098	AssignmentExpression	* q = pw -> ptr		9482071	2		=			
ANR	9482099	Identifier	q		9482071	0					
ANR	9482100	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9482101	Identifier	pw		9482071	0					
ANR	9482102	Identifier	ptr		9482071	1					
ANR	9482103	IdentifierDeclStatement	byte * qn = q + ( LINE_LIMIT - ss -> count ) ;	48:4:1342:1381	9482071	8	True				
ANR	9482104	IdentifierDecl	* qn = q + ( LINE_LIMIT - ss -> count )		9482071	0					
ANR	9482105	IdentifierDeclType	byte *		9482071	0					
ANR	9482106	Identifier	qn		9482071	1					
ANR	9482107	AssignmentExpression	* qn = q + ( LINE_LIMIT - ss -> count )		9482071	2		=			
ANR	9482108	Identifier	qn		9482071	0					
ANR	9482109	AdditiveExpression	q + ( LINE_LIMIT - ss -> count )		9482071	1		+			
ANR	9482110	Identifier	q		9482071	0					
ANR	9482111	AdditiveExpression	LINE_LIMIT - ss -> count		9482071	1		-			
ANR	9482112	Identifier	LINE_LIMIT		9482071	0					
ANR	9482113	PtrMemberAccess	ss -> count		9482071	1					
ANR	9482114	Identifier	ss		9482071	0					
ANR	9482115	Identifier	count		9482071	1					
ANR	9482116	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	49:4:1420:1450	9482071	9	True				
ANR	9482117	IdentifierDecl	* rlimit = pr -> limit		9482071	0					
ANR	9482118	IdentifierDeclType	const byte *		9482071	0					
ANR	9482119	Identifier	rlimit		9482071	1					
ANR	9482120	AssignmentExpression	* rlimit = pr -> limit		9482071	2		=			
ANR	9482121	Identifier	rlimit		9482071	0					
ANR	9482122	PtrMemberAccess	pr -> limit		9482071	1					
ANR	9482123	Identifier	pr		9482071	0					
ANR	9482124	Identifier	limit		9482071	1					
ANR	9482125	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	50:4:1456:1480	9482071	10	True				
ANR	9482126	IdentifierDecl	* wlimit = pw -> limit		9482071	0					
ANR	9482127	IdentifierDeclType	byte *		9482071	0					
ANR	9482128	Identifier	wlimit		9482071	1					
ANR	9482129	AssignmentExpression	* wlimit = pw -> limit		9482071	2		=			
ANR	9482130	Identifier	wlimit		9482071	0					
ANR	9482131	PtrMemberAccess	pw -> limit		9482071	1					
ANR	9482132	Identifier	pw		9482071	0					
ANR	9482133	Identifier	limit		9482071	1					
ANR	9482134	IdentifierDeclStatement	int status = 0 ;	51:4:1486:1500	9482071	11	True				
ANR	9482135	IdentifierDecl	status = 0		9482071	0					
ANR	9482136	IdentifierDeclType	int		9482071	0					
ANR	9482137	Identifier	status		9482071	1					
ANR	9482138	AssignmentExpression	status = 0		9482071	2		=			
ANR	9482139	Identifier	status		9482071	0					
ANR	9482140	PrimaryExpression	0		9482071	1					
ANR	9482141	IdentifierDeclStatement	int prev = ss -> last_char ;	52:4:1506:1530	9482071	12	True				
ANR	9482142	IdentifierDecl	prev = ss -> last_char		9482071	0					
ANR	9482143	IdentifierDeclType	int		9482071	0					
ANR	9482144	Identifier	prev		9482071	1					
ANR	9482145	AssignmentExpression	prev = ss -> last_char		9482071	2		=			
ANR	9482146	Identifier	prev		9482071	0					
ANR	9482147	PtrMemberAccess	ss -> last_char		9482071	1					
ANR	9482148	Identifier	ss		9482071	0					
ANR	9482149	Identifier	last_char		9482071	1					
ANR	9482150	IdentifierDeclStatement	unsigned int count ;	53:4:1536:1554	9482071	13	True				
ANR	9482151	IdentifierDecl	count		9482071	0					
ANR	9482152	IdentifierDeclType	unsigned int		9482071	0					
ANR	9482153	Identifier	count		9482071	1					
ANR	9482154	ExpressionStatement	"if_debug3m ( 'w' , ss -> memory , ""[w85]initial ss->count = %d, rcount = %d, wcount = %d\\n"" , ss -> count , ( int ) ( rlimit - p ) , ( int ) ( wlimit - q ) )"	55:4:1561:1711	9482071	14	True				
ANR	9482155	CallExpression	"if_debug3m ( 'w' , ss -> memory , ""[w85]initial ss->count = %d, rcount = %d, wcount = %d\\n"" , ss -> count , ( int ) ( rlimit - p ) , ( int ) ( wlimit - q ) )"		9482071	0					
ANR	9482156	Callee	if_debug3m		9482071	0					
ANR	9482157	Identifier	if_debug3m		9482071	0					
ANR	9482158	ArgumentList	'w'		9482071	1					
ANR	9482159	Argument	'w'		9482071	0					
ANR	9482160	PrimaryExpression	'w'		9482071	0					
ANR	9482161	Argument	ss -> memory		9482071	1					
ANR	9482162	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482163	Identifier	ss		9482071	0					
ANR	9482164	Identifier	memory		9482071	1					
ANR	9482165	Argument	"""[w85]initial ss->count = %d, rcount = %d, wcount = %d\\n"""		9482071	2					
ANR	9482166	PrimaryExpression	"""[w85]initial ss->count = %d, rcount = %d, wcount = %d\\n"""		9482071	0					
ANR	9482167	Argument	ss -> count		9482071	3					
ANR	9482168	PtrMemberAccess	ss -> count		9482071	0					
ANR	9482169	Identifier	ss		9482071	0					
ANR	9482170	Identifier	count		9482071	1					
ANR	9482171	Argument	( int ) ( rlimit - p )		9482071	4					
ANR	9482172	CastExpression	( int ) ( rlimit - p )		9482071	0					
ANR	9482173	CastTarget	int		9482071	0					
ANR	9482174	AdditiveExpression	rlimit - p		9482071	1		-			
ANR	9482175	Identifier	rlimit		9482071	0					
ANR	9482176	Identifier	p		9482071	1					
ANR	9482177	Argument	( int ) ( wlimit - q )		9482071	5					
ANR	9482178	CastExpression	( int ) ( wlimit - q )		9482071	0					
ANR	9482179	CastTarget	int		9482071	0					
ANR	9482180	AdditiveExpression	wlimit - q		9482071	1		-			
ANR	9482181	Identifier	wlimit		9482071	0					
ANR	9482182	Identifier	q		9482071	1					
ANR	9482183	ForStatement	for ( ; ( count = rlimit - p ) >= 4 ; p += 4 )		9482071	15					
ANR	9482184	Condition	( count = rlimit - p ) >= 4	57:11:1724:1748	9482071	0	True				
ANR	9482185	RelationalExpression	( count = rlimit - p ) >= 4		9482071	0		>=			
ANR	9482186	AssignmentExpression	count = rlimit - p		9482071	0		=			
ANR	9482187	Identifier	count		9482071	0					
ANR	9482188	AdditiveExpression	rlimit - p		9482071	1		-			
ANR	9482189	Identifier	rlimit		9482071	0					
ANR	9482190	Identifier	p		9482071	1					
ANR	9482191	PrimaryExpression	4		9482071	1					
ANR	9482192	AssignmentExpression	p += 4	57:38:1751:1756	9482071	1	True	+=			
ANR	9482193	Identifier	p		9482071	0					
ANR	9482194	PrimaryExpression	4		9482071	1					
ANR	9482195	CompoundStatement		15:8:562:672	9482071	2					
ANR	9482196	IdentifierDeclStatement	ulong word = ( ( ulong ) ( ( ( uint ) p [ 1 ] << 8 ) + p [ 2 ] ) << 16 ) + ( ( ( uint ) p [ 3 ] << 8 ) + p [ 4 ] ) ;	58:8:1769:1879	9482071	0	True				
ANR	9482197	IdentifierDecl	word = ( ( ulong ) ( ( ( uint ) p [ 1 ] << 8 ) + p [ 2 ] ) << 16 ) + ( ( ( uint ) p [ 3 ] << 8 ) + p [ 4 ] )		9482071	0					
ANR	9482198	IdentifierDeclType	ulong		9482071	0					
ANR	9482199	Identifier	word		9482071	1					
ANR	9482200	AssignmentExpression	word = ( ( ulong ) ( ( ( uint ) p [ 1 ] << 8 ) + p [ 2 ] ) << 16 ) + ( ( ( uint ) p [ 3 ] << 8 ) + p [ 4 ] )		9482071	2		=			
ANR	9482201	Identifier	word		9482071	0					
ANR	9482202	AdditiveExpression	( ( ulong ) ( ( ( uint ) p [ 1 ] << 8 ) + p [ 2 ] ) << 16 ) + ( ( ( uint ) p [ 3 ] << 8 ) + p [ 4 ] )		9482071	1		+			
ANR	9482203	ShiftExpression	( ulong ) ( ( ( uint ) p [ 1 ] << 8 ) + p [ 2 ] ) << 16		9482071	0		<<			
ANR	9482204	CastExpression	( ulong ) ( ( ( uint ) p [ 1 ] << 8 ) + p [ 2 ] )		9482071	0					
ANR	9482205	CastTarget	ulong		9482071	0					
ANR	9482206	AdditiveExpression	( ( uint ) p [ 1 ] << 8 ) + p [ 2 ]		9482071	1		+			
ANR	9482207	ShiftExpression	( uint ) p [ 1 ] << 8		9482071	0		<<			
ANR	9482208	CastExpression	( uint ) p [ 1 ]		9482071	0					
ANR	9482209	CastTarget	uint		9482071	0					
ANR	9482210	ArrayIndexing	p [ 1 ]		9482071	1					
ANR	9482211	Identifier	p		9482071	0					
ANR	9482212	PrimaryExpression	1		9482071	1					
ANR	9482213	PrimaryExpression	8		9482071	1					
ANR	9482214	ArrayIndexing	p [ 2 ]		9482071	1					
ANR	9482215	Identifier	p		9482071	0					
ANR	9482216	PrimaryExpression	2		9482071	1					
ANR	9482217	PrimaryExpression	16		9482071	1					
ANR	9482218	AdditiveExpression	( ( uint ) p [ 3 ] << 8 ) + p [ 4 ]		9482071	1		+			
ANR	9482219	ShiftExpression	( uint ) p [ 3 ] << 8		9482071	0		<<			
ANR	9482220	CastExpression	( uint ) p [ 3 ]		9482071	0					
ANR	9482221	CastTarget	uint		9482071	0					
ANR	9482222	ArrayIndexing	p [ 3 ]		9482071	1					
ANR	9482223	Identifier	p		9482071	0					
ANR	9482224	PrimaryExpression	3		9482071	1					
ANR	9482225	PrimaryExpression	8		9482071	1					
ANR	9482226	ArrayIndexing	p [ 4 ]		9482071	1					
ANR	9482227	Identifier	p		9482071	0					
ANR	9482228	PrimaryExpression	4		9482071	1					
ANR	9482229	IfStatement	if ( word == 0 )		9482071	1					
ANR	9482230	Condition	word == 0	62:12:1894:1902	9482071	0	True				
ANR	9482231	EqualityExpression	word == 0		9482071	0		==			
ANR	9482232	Identifier	word		9482071	0					
ANR	9482233	PrimaryExpression	0		9482071	1					
ANR	9482234	CompoundStatement		19:23:698:698	9482071	1					
ANR	9482235	IfStatement	if ( q >= qn )		9482071	0					
ANR	9482236	Condition	q >= qn	63:16:1923:1929	9482071	0	True				
ANR	9482237	RelationalExpression	q >= qn		9482071	0		>=			
ANR	9482238	Identifier	q		9482071	0					
ANR	9482239	Identifier	qn		9482071	1					
ANR	9482240	CompoundStatement		20:25:725:725	9482071	1					
ANR	9482241	IfStatement	if ( wlimit - q < 2 )		9482071	0					
ANR	9482242	Condition	wlimit - q < 2	64:20:1954:1967	9482071	0	True				
ANR	9482243	RelationalExpression	wlimit - q < 2		9482071	0		<			
ANR	9482244	AdditiveExpression	wlimit - q		9482071	0		-			
ANR	9482245	Identifier	wlimit		9482071	0					
ANR	9482246	Identifier	q		9482071	1					
ANR	9482247	PrimaryExpression	2		9482071	1					
ANR	9482248	CompoundStatement		21:36:763:763	9482071	1					
ANR	9482249	ExpressionStatement	status = 1	65:20:1992:2002	9482071	0	True				
ANR	9482250	AssignmentExpression	status = 1		9482071	0		=			
ANR	9482251	Identifier	status		9482071	0					
ANR	9482252	PrimaryExpression	1		9482071	1					
ANR	9482253	BreakStatement	break ;	66:20:2024:2029	9482071	1	True				
ANR	9482254	ExpressionStatement	* ++ q = '\\n'	69:16:2159:2170	9482071	1	True				
ANR	9482255	AssignmentExpression	* ++ q = '\\n'		9482071	0		=			
ANR	9482256	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9482257	UnaryOperator	*		9482071	0					
ANR	9482258	UnaryExpression	++ q		9482071	1					
ANR	9482259	IncDec	++		9482071	0					
ANR	9482260	Identifier	q		9482071	1					
ANR	9482261	PrimaryExpression	'\\n'		9482071	1					
ANR	9482262	ExpressionStatement	qn = q + LINE_LIMIT	70:16:2188:2207	9482071	2	True				
ANR	9482263	AssignmentExpression	qn = q + LINE_LIMIT		9482071	0		=			
ANR	9482264	Identifier	qn		9482071	0					
ANR	9482265	AdditiveExpression	q + LINE_LIMIT		9482071	1		+			
ANR	9482266	Identifier	q		9482071	0					
ANR	9482267	Identifier	LINE_LIMIT		9482071	1					
ANR	9482268	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"	71:16:2225:2332	9482071	3	True				
ANR	9482269	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"		9482071	0					
ANR	9482270	Callee	if_debug1m		9482071	0					
ANR	9482271	Identifier	if_debug1m		9482071	0					
ANR	9482272	ArgumentList	'w'		9482071	1					
ANR	9482273	Argument	'w'		9482071	0					
ANR	9482274	PrimaryExpression	'w'		9482071	0					
ANR	9482275	Argument	ss -> memory		9482071	1					
ANR	9482276	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482277	Identifier	ss		9482071	0					
ANR	9482278	Identifier	memory		9482071	1					
ANR	9482279	Argument	"""[w85]EOL at %d bytes written\\n"""		9482071	2					
ANR	9482280	PrimaryExpression	"""[w85]EOL at %d bytes written\\n"""		9482071	0					
ANR	9482281	Argument	( int ) ( q - pw -> ptr )		9482071	3					
ANR	9482282	CastExpression	( int ) ( q - pw -> ptr )		9482071	0					
ANR	9482283	CastTarget	int		9482071	0					
ANR	9482284	AdditiveExpression	q - pw -> ptr		9482071	1		-			
ANR	9482285	Identifier	q		9482071	0					
ANR	9482286	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9482287	Identifier	pw		9482071	0					
ANR	9482288	Identifier	ptr		9482071	1					
ANR	9482289	ElseStatement	else		9482071	0					
ANR	9482290	CompoundStatement		30:19:1146:1146	9482071	0					
ANR	9482291	IfStatement	if ( q >= wlimit )		9482071	0					
ANR	9482292	Condition	q >= wlimit	74:20:2375:2385	9482071	0	True				
ANR	9482293	RelationalExpression	q >= wlimit		9482071	0		>=			
ANR	9482294	Identifier	q		9482071	0					
ANR	9482295	Identifier	wlimit		9482071	1					
ANR	9482296	CompoundStatement		31:33:1181:1181	9482071	1					
ANR	9482297	ExpressionStatement	status = 1	75:20:2410:2420	9482071	0	True				
ANR	9482298	AssignmentExpression	status = 1		9482071	0		=			
ANR	9482299	Identifier	status		9482071	0					
ANR	9482300	PrimaryExpression	1		9482071	1					
ANR	9482301	BreakStatement	break ;	76:20:2442:2447	9482071	1	True				
ANR	9482302	ExpressionStatement	* ++ q = prev = 'z'	79:12:2493:2510	9482071	1	True				
ANR	9482303	AssignmentExpression	* ++ q = prev = 'z'		9482071	0		=			
ANR	9482304	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9482305	UnaryOperator	*		9482071	0					
ANR	9482306	UnaryExpression	++ q		9482071	1					
ANR	9482307	IncDec	++		9482071	0					
ANR	9482308	Identifier	q		9482071	1					
ANR	9482309	AssignmentExpression	prev = 'z'		9482071	1		=			
ANR	9482310	Identifier	prev		9482071	0					
ANR	9482311	PrimaryExpression	'z'		9482071	1					
ANR	9482312	ElseStatement	else		9482071	0					
ANR	9482313	CompoundStatement		41:12:1476:1493	9482071	0					
ANR	9482314	IdentifierDeclStatement	ulong v4 = word / 85 ;	81:12:2541:2561	9482071	0	True				
ANR	9482315	IdentifierDecl	v4 = word / 85		9482071	0					
ANR	9482316	IdentifierDeclType	ulong		9482071	0					
ANR	9482317	Identifier	v4		9482071	1					
ANR	9482318	AssignmentExpression	v4 = word / 85		9482071	2		=			
ANR	9482319	Identifier	v4		9482071	0					
ANR	9482320	MultiplicativeExpression	word / 85		9482071	1		/			
ANR	9482321	Identifier	word		9482071	0					
ANR	9482322	PrimaryExpression	85		9482071	1					
ANR	9482323	IdentifierDeclStatement	ulong v3 = v4 / 85 ;	82:12:2590:2608	9482071	1	True				
ANR	9482324	IdentifierDecl	v3 = v4 / 85		9482071	0					
ANR	9482325	IdentifierDeclType	ulong		9482071	0					
ANR	9482326	Identifier	v3		9482071	1					
ANR	9482327	AssignmentExpression	v3 = v4 / 85		9482071	2		=			
ANR	9482328	Identifier	v3		9482071	0					
ANR	9482329	MultiplicativeExpression	v4 / 85		9482071	1		/			
ANR	9482330	Identifier	v4		9482071	0					
ANR	9482331	PrimaryExpression	85		9482071	1					
ANR	9482332	IdentifierDeclStatement	uint v2 = v3 / 85 ;	83:12:2637:2654	9482071	2	True				
ANR	9482333	IdentifierDecl	v2 = v3 / 85		9482071	0					
ANR	9482334	IdentifierDeclType	uint		9482071	0					
ANR	9482335	Identifier	v2		9482071	1					
ANR	9482336	AssignmentExpression	v2 = v3 / 85		9482071	2		=			
ANR	9482337	Identifier	v2		9482071	0					
ANR	9482338	MultiplicativeExpression	v3 / 85		9482071	1		/			
ANR	9482339	Identifier	v3		9482071	0					
ANR	9482340	PrimaryExpression	85		9482071	1					
ANR	9482341	IdentifierDeclStatement	uint v1 = v2 / 85 ;	84:12:2683:2700	9482071	3	True				
ANR	9482342	IdentifierDecl	v1 = v2 / 85		9482071	0					
ANR	9482343	IdentifierDeclType	uint		9482071	0					
ANR	9482344	Identifier	v1		9482071	1					
ANR	9482345	AssignmentExpression	v1 = v2 / 85		9482071	2		=			
ANR	9482346	Identifier	v1		9482071	0					
ANR	9482347	MultiplicativeExpression	v2 / 85		9482071	1		/			
ANR	9482348	Identifier	v2		9482071	0					
ANR	9482349	PrimaryExpression	85		9482071	1					
ANR	9482350	Label	put :	86:0:2716:2719	9482071	4	True				
ANR	9482351	Identifier	put		9482071	0					
ANR	9482352	IfStatement	if ( q + 5 > qn )		9482071	5					
ANR	9482353	Condition	q + 5 > qn	86:13:2729:2738	9482071	0	True				
ANR	9482354	RelationalExpression	q + 5 > qn		9482071	0		>			
ANR	9482355	AdditiveExpression	q + 5		9482071	0		+			
ANR	9482356	Identifier	q		9482071	0					
ANR	9482357	PrimaryExpression	5		9482071	1					
ANR	9482358	Identifier	qn		9482071	1					
ANR	9482359	CompoundStatement		43:25:1534:1534	9482071	1					
ANR	9482360	IfStatement	if ( q >= wlimit )		9482071	0					
ANR	9482361	Condition	q >= wlimit	87:20:2763:2773	9482071	0	True				
ANR	9482362	RelationalExpression	q >= wlimit		9482071	0		>=			
ANR	9482363	Identifier	q		9482071	0					
ANR	9482364	Identifier	wlimit		9482071	1					
ANR	9482365	CompoundStatement		44:33:1569:1569	9482071	1					
ANR	9482366	ExpressionStatement	status = 1	88:20:2798:2808	9482071	0	True				
ANR	9482367	AssignmentExpression	status = 1		9482071	0		=			
ANR	9482368	Identifier	status		9482071	0					
ANR	9482369	PrimaryExpression	1		9482071	1					
ANR	9482370	BreakStatement	break ;	89:20:2830:2835	9482071	1	True				
ANR	9482371	ExpressionStatement	* ++ q = prev = '\\n'	91:16:2871:2889	9482071	1	True				
ANR	9482372	AssignmentExpression	* ++ q = prev = '\\n'		9482071	0		=			
ANR	9482373	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9482374	UnaryOperator	*		9482071	0					
ANR	9482375	UnaryExpression	++ q		9482071	1					
ANR	9482376	IncDec	++		9482071	0					
ANR	9482377	Identifier	q		9482071	1					
ANR	9482378	AssignmentExpression	prev = '\\n'		9482071	1		=			
ANR	9482379	Identifier	prev		9482071	0					
ANR	9482380	PrimaryExpression	'\\n'		9482071	1					
ANR	9482381	ExpressionStatement	qn = q + LINE_LIMIT	92:16:2907:2926	9482071	2	True				
ANR	9482382	AssignmentExpression	qn = q + LINE_LIMIT		9482071	0		=			
ANR	9482383	Identifier	qn		9482071	0					
ANR	9482384	AdditiveExpression	q + LINE_LIMIT		9482071	1		+			
ANR	9482385	Identifier	q		9482071	0					
ANR	9482386	Identifier	LINE_LIMIT		9482071	1					
ANR	9482387	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"	93:16:2944:3052	9482071	3	True				
ANR	9482388	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"		9482071	0					
ANR	9482389	Callee	if_debug1m		9482071	0					
ANR	9482390	Identifier	if_debug1m		9482071	0					
ANR	9482391	ArgumentList	'w'		9482071	1					
ANR	9482392	Argument	'w'		9482071	0					
ANR	9482393	PrimaryExpression	'w'		9482071	0					
ANR	9482394	Argument	ss -> memory		9482071	1					
ANR	9482395	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482396	Identifier	ss		9482071	0					
ANR	9482397	Identifier	memory		9482071	1					
ANR	9482398	Argument	"""[w85]EOL at %d bytes written\\n"""		9482071	2					
ANR	9482399	PrimaryExpression	"""[w85]EOL at %d bytes written\\n"""		9482071	0					
ANR	9482400	Argument	( int ) ( q - pw -> ptr )		9482071	3					
ANR	9482401	CastExpression	( int ) ( q - pw -> ptr )		9482071	0					
ANR	9482402	CastTarget	int		9482071	0					
ANR	9482403	AdditiveExpression	q - pw -> ptr		9482071	1		-			
ANR	9482404	Identifier	q		9482071	0					
ANR	9482405	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9482406	Identifier	pw		9482071	0					
ANR	9482407	Identifier	ptr		9482071	1					
ANR	9482408	GotoStatement	goto put ;	95:16:3070:3078	9482071	4	True				
ANR	9482409	Identifier	put		9482071	0					
ANR	9482410	IfStatement	if ( wlimit - q < 5 )		9482071	6					
ANR	9482411	Condition	wlimit - q < 5	97:16:3110:3123	9482071	0	True				
ANR	9482412	RelationalExpression	wlimit - q < 5		9482071	0		<			
ANR	9482413	AdditiveExpression	wlimit - q		9482071	0		-			
ANR	9482414	Identifier	wlimit		9482071	0					
ANR	9482415	Identifier	q		9482071	1					
ANR	9482416	PrimaryExpression	5		9482071	1					
ANR	9482417	CompoundStatement		54:32:1919:1919	9482071	1					
ANR	9482418	ExpressionStatement	status = 1	98:16:3144:3154	9482071	0	True				
ANR	9482419	AssignmentExpression	status = 1		9482071	0		=			
ANR	9482420	Identifier	status		9482071	0					
ANR	9482421	PrimaryExpression	1		9482071	1					
ANR	9482422	BreakStatement	break ;	99:16:3172:3177	9482071	1	True				
ANR	9482423	ExpressionStatement	q [ 1 ] = ( byte ) v1 + '!'	101:12:3205:3227	9482071	7	True				
ANR	9482424	AssignmentExpression	q [ 1 ] = ( byte ) v1 + '!'		9482071	0		=			
ANR	9482425	ArrayIndexing	q [ 1 ]		9482071	0					
ANR	9482426	Identifier	q		9482071	0					
ANR	9482427	PrimaryExpression	1		9482071	1					
ANR	9482428	AdditiveExpression	( byte ) v1 + '!'		9482071	1		+			
ANR	9482429	CastExpression	( byte ) v1		9482071	0					
ANR	9482430	CastTarget	byte		9482071	0					
ANR	9482431	Identifier	v1		9482071	1					
ANR	9482432	PrimaryExpression	'!'		9482071	1					
ANR	9482433	ExpressionStatement	q [ 2 ] = ( byte ) ( v2 - v1 * 85 ) + '!'	102:12:3241:3275	9482071	8	True				
ANR	9482434	AssignmentExpression	q [ 2 ] = ( byte ) ( v2 - v1 * 85 ) + '!'		9482071	0		=			
ANR	9482435	ArrayIndexing	q [ 2 ]		9482071	0					
ANR	9482436	Identifier	q		9482071	0					
ANR	9482437	PrimaryExpression	2		9482071	1					
ANR	9482438	AdditiveExpression	( byte ) ( v2 - v1 * 85 ) + '!'		9482071	1		+			
ANR	9482439	CastExpression	( byte ) ( v2 - v1 * 85 )		9482071	0					
ANR	9482440	CastTarget	byte		9482071	0					
ANR	9482441	AdditiveExpression	v2 - v1 * 85		9482071	1		-			
ANR	9482442	Identifier	v2		9482071	0					
ANR	9482443	MultiplicativeExpression	v1 * 85		9482071	1		*			
ANR	9482444	Identifier	v1		9482071	0					
ANR	9482445	PrimaryExpression	85		9482071	1					
ANR	9482446	PrimaryExpression	'!'		9482071	1					
ANR	9482447	ExpressionStatement	q [ 3 ] = ( byte ) ( ( uint ) v3 - v2 * 85 ) + '!'	103:12:3289:3330	9482071	9	True				
ANR	9482448	AssignmentExpression	q [ 3 ] = ( byte ) ( ( uint ) v3 - v2 * 85 ) + '!'		9482071	0		=			
ANR	9482449	ArrayIndexing	q [ 3 ]		9482071	0					
ANR	9482450	Identifier	q		9482071	0					
ANR	9482451	PrimaryExpression	3		9482071	1					
ANR	9482452	AdditiveExpression	( byte ) ( ( uint ) v3 - v2 * 85 ) + '!'		9482071	1		+			
ANR	9482453	CastExpression	( byte ) ( ( uint ) v3 - v2 * 85 )		9482071	0					
ANR	9482454	CastTarget	byte		9482071	0					
ANR	9482455	AdditiveExpression	( uint ) v3 - v2 * 85		9482071	1		-			
ANR	9482456	CastExpression	( uint ) v3		9482071	0					
ANR	9482457	CastTarget	uint		9482071	0					
ANR	9482458	Identifier	v3		9482071	1					
ANR	9482459	MultiplicativeExpression	v2 * 85		9482071	1		*			
ANR	9482460	Identifier	v2		9482071	0					
ANR	9482461	PrimaryExpression	85		9482071	1					
ANR	9482462	PrimaryExpression	'!'		9482071	1					
ANR	9482463	ExpressionStatement	q [ 4 ] = ( byte ) ( ( uint ) v4 - ( uint ) v3 * 85 ) + '!'	104:12:3344:3392	9482071	10	True				
ANR	9482464	AssignmentExpression	q [ 4 ] = ( byte ) ( ( uint ) v4 - ( uint ) v3 * 85 ) + '!'		9482071	0		=			
ANR	9482465	ArrayIndexing	q [ 4 ]		9482071	0					
ANR	9482466	Identifier	q		9482071	0					
ANR	9482467	PrimaryExpression	4		9482071	1					
ANR	9482468	AdditiveExpression	( byte ) ( ( uint ) v4 - ( uint ) v3 * 85 ) + '!'		9482071	1		+			
ANR	9482469	CastExpression	( byte ) ( ( uint ) v4 - ( uint ) v3 * 85 )		9482071	0					
ANR	9482470	CastTarget	byte		9482071	0					
ANR	9482471	AdditiveExpression	( uint ) v4 - ( uint ) v3 * 85		9482071	1		-			
ANR	9482472	CastExpression	( uint ) v4		9482071	0					
ANR	9482473	CastTarget	uint		9482071	0					
ANR	9482474	Identifier	v4		9482071	1					
ANR	9482475	MultiplicativeExpression	( uint ) v3 * 85		9482071	1		*			
ANR	9482476	CastExpression	( uint ) v3		9482071	0					
ANR	9482477	CastTarget	uint		9482071	0					
ANR	9482478	Identifier	v3		9482071	1					
ANR	9482479	PrimaryExpression	85		9482071	1					
ANR	9482480	PrimaryExpression	'!'		9482071	1					
ANR	9482481	ExpressionStatement	q [ 5 ] = ( byte ) ( ( uint ) word - ( uint ) v4 * 85 ) + '!'	105:12:3406:3456	9482071	11	True				
ANR	9482482	AssignmentExpression	q [ 5 ] = ( byte ) ( ( uint ) word - ( uint ) v4 * 85 ) + '!'		9482071	0		=			
ANR	9482483	ArrayIndexing	q [ 5 ]		9482071	0					
ANR	9482484	Identifier	q		9482071	0					
ANR	9482485	PrimaryExpression	5		9482071	1					
ANR	9482486	AdditiveExpression	( byte ) ( ( uint ) word - ( uint ) v4 * 85 ) + '!'		9482071	1		+			
ANR	9482487	CastExpression	( byte ) ( ( uint ) word - ( uint ) v4 * 85 )		9482071	0					
ANR	9482488	CastTarget	byte		9482071	0					
ANR	9482489	AdditiveExpression	( uint ) word - ( uint ) v4 * 85		9482071	1		-			
ANR	9482490	CastExpression	( uint ) word		9482071	0					
ANR	9482491	CastTarget	uint		9482071	0					
ANR	9482492	Identifier	word		9482071	1					
ANR	9482493	MultiplicativeExpression	( uint ) v4 * 85		9482071	1		*			
ANR	9482494	CastExpression	( uint ) v4		9482071	0					
ANR	9482495	CastTarget	uint		9482071	0					
ANR	9482496	Identifier	v4		9482071	1					
ANR	9482497	PrimaryExpression	85		9482071	1					
ANR	9482498	PrimaryExpression	'!'		9482071	1					
ANR	9482499	IfStatement	if ( q [ 1 ] == '%' )		9482071	12					
ANR	9482500	Condition	q [ 1 ] == '%'	111:16:3678:3688	9482071	0	True				
ANR	9482501	EqualityExpression	q [ 1 ] == '%'		9482071	0		==			
ANR	9482502	ArrayIndexing	q [ 1 ]		9482071	0					
ANR	9482503	Identifier	q		9482071	0					
ANR	9482504	PrimaryExpression	1		9482071	1					
ANR	9482505	PrimaryExpression	'%'		9482071	1					
ANR	9482506	CompoundStatement		68:29:2484:2484	9482071	1					
ANR	9482507	IfStatement	if ( prev == '%' )		9482071	0					
ANR	9482508	Condition	prev == '%'	112:20:3713:3723	9482071	0	True				
ANR	9482509	EqualityExpression	prev == '%'		9482071	0		==			
ANR	9482510	Identifier	prev		9482071	0					
ANR	9482511	PrimaryExpression	'%'		9482071	1					
ANR	9482512	CompoundStatement		69:33:2519:2519	9482071	1					
ANR	9482513	IfStatement	if ( qn - q == LINE_LIMIT - 1 )		9482071	0					
ANR	9482514	Condition	qn - q == LINE_LIMIT - 1	113:24:3752:3775	9482071	0	True				
ANR	9482515	EqualityExpression	qn - q == LINE_LIMIT - 1		9482071	0		==			
ANR	9482516	AdditiveExpression	qn - q		9482071	0		-			
ANR	9482517	Identifier	qn		9482071	0					
ANR	9482518	Identifier	q		9482071	1					
ANR	9482519	AdditiveExpression	LINE_LIMIT - 1		9482071	1		-			
ANR	9482520	Identifier	LINE_LIMIT		9482071	0					
ANR	9482521	PrimaryExpression	1		9482071	1					
ANR	9482522	CompoundStatement		70:50:2571:2571	9482071	1					
ANR	9482523	ExpressionStatement	* ++ q = prev = '\\n'	115:24:3862:3880	9482071	0	True				
ANR	9482524	AssignmentExpression	* ++ q = prev = '\\n'		9482071	0		=			
ANR	9482525	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9482526	UnaryOperator	*		9482071	0					
ANR	9482527	UnaryExpression	++ q		9482071	1					
ANR	9482528	IncDec	++		9482071	0					
ANR	9482529	Identifier	q		9482071	1					
ANR	9482530	AssignmentExpression	prev = '\\n'		9482071	1		=			
ANR	9482531	Identifier	prev		9482071	0					
ANR	9482532	PrimaryExpression	'\\n'		9482071	1					
ANR	9482533	ExpressionStatement	qn = q + LINE_LIMIT	116:24:3906:3925	9482071	1	True				
ANR	9482534	AssignmentExpression	qn = q + LINE_LIMIT		9482071	0		=			
ANR	9482535	Identifier	qn		9482071	0					
ANR	9482536	AdditiveExpression	q + LINE_LIMIT		9482071	1		+			
ANR	9482537	Identifier	q		9482071	0					
ANR	9482538	Identifier	LINE_LIMIT		9482071	1					
ANR	9482539	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL for %%%% at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"	117:24:3951:4111	9482071	2	True				
ANR	9482540	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL for %%%% at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"		9482071	0					
ANR	9482541	Callee	if_debug1m		9482071	0					
ANR	9482542	Identifier	if_debug1m		9482071	0					
ANR	9482543	ArgumentList	'w'		9482071	1					
ANR	9482544	Argument	'w'		9482071	0					
ANR	9482545	PrimaryExpression	'w'		9482071	0					
ANR	9482546	Argument	ss -> memory		9482071	1					
ANR	9482547	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482548	Identifier	ss		9482071	0					
ANR	9482549	Identifier	memory		9482071	1					
ANR	9482550	Argument	"""[w85]EOL for %%%% at %d bytes written\\n"""		9482071	2					
ANR	9482551	PrimaryExpression	"""[w85]EOL for %%%% at %d bytes written\\n"""		9482071	0					
ANR	9482552	Argument	( int ) ( q - pw -> ptr )		9482071	3					
ANR	9482553	CastExpression	( int ) ( q - pw -> ptr )		9482071	0					
ANR	9482554	CastTarget	int		9482071	0					
ANR	9482555	AdditiveExpression	q - pw -> ptr		9482071	1		-			
ANR	9482556	Identifier	q		9482071	0					
ANR	9482557	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9482558	Identifier	pw		9482071	0					
ANR	9482559	Identifier	ptr		9482071	1					
ANR	9482560	GotoStatement	goto put ;	120:24:4137:4145	9482071	3	True				
ANR	9482561	Identifier	put		9482071	0					
ANR	9482562	ElseStatement	else		9482071	0					
ANR	9482563	IfStatement	if ( prev == '\\n' && ( q [ 2 ] == '%' || q [ 2 ] == '!' ) )		9482071	0					
ANR	9482564	Condition	prev == '\\n' && ( q [ 2 ] == '%' || q [ 2 ] == '!' )	122:27:4196:4239	9482071	0	True				
ANR	9482565	AndExpression	prev == '\\n' && ( q [ 2 ] == '%' || q [ 2 ] == '!' )		9482071	0		&&			
ANR	9482566	EqualityExpression	prev == '\\n'		9482071	0		==			
ANR	9482567	Identifier	prev		9482071	0					
ANR	9482568	PrimaryExpression	'\\n'		9482071	1					
ANR	9482569	OrExpression	q [ 2 ] == '%' || q [ 2 ] == '!'		9482071	1		||			
ANR	9482570	EqualityExpression	q [ 2 ] == '%'		9482071	0		==			
ANR	9482571	ArrayIndexing	q [ 2 ]		9482071	0					
ANR	9482572	Identifier	q		9482071	0					
ANR	9482573	PrimaryExpression	2		9482071	1					
ANR	9482574	PrimaryExpression	'%'		9482071	1					
ANR	9482575	EqualityExpression	q [ 2 ] == '!'		9482071	1		==			
ANR	9482576	ArrayIndexing	q [ 2 ]		9482071	0					
ANR	9482577	Identifier	q		9482071	0					
ANR	9482578	PrimaryExpression	2		9482071	1					
ANR	9482579	PrimaryExpression	'!'		9482071	1					
ANR	9482580	CompoundStatement		84:20:3230:3568	9482071	1					
ANR	9482581	IdentifierDeclStatement	int extra = ( q [ 2 ] == '!' ? 1 : q [ 3 ] == '!' ? 2 : q [ 3 ] != '%' ? 1 : q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4 ) ;	127:20:4437:4775	9482071	0	True				
ANR	9482582	IdentifierDecl	extra = ( q [ 2 ] == '!' ? 1 : q [ 3 ] == '!' ? 2 : q [ 3 ] != '%' ? 1 : q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4 )		9482071	0					
ANR	9482583	IdentifierDeclType	int		9482071	0					
ANR	9482584	Identifier	extra		9482071	1					
ANR	9482585	AssignmentExpression	extra = ( q [ 2 ] == '!' ? 1 : q [ 3 ] == '!' ? 2 : q [ 3 ] != '%' ? 1 : q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4 )		9482071	2		=			
ANR	9482586	Identifier	extra		9482071	0					
ANR	9482587	ConditionalExpression	q [ 2 ] == '!' ? 1 : q [ 3 ] == '!' ? 2 : q [ 3 ] != '%' ? 1 : q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4		9482071	1					
ANR	9482588	Condition	q [ 2 ] == '!'		9482071	0					
ANR	9482589	EqualityExpression	q [ 2 ] == '!'		9482071	0		==			
ANR	9482590	ArrayIndexing	q [ 2 ]		9482071	0					
ANR	9482591	Identifier	q		9482071	0					
ANR	9482592	PrimaryExpression	2		9482071	1					
ANR	9482593	PrimaryExpression	'!'		9482071	1					
ANR	9482594	PrimaryExpression	1		9482071	1					
ANR	9482595	ConditionalExpression	q [ 3 ] == '!' ? 2 : q [ 3 ] != '%' ? 1 : q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4		9482071	2					
ANR	9482596	Condition	q [ 3 ] == '!'		9482071	0					
ANR	9482597	EqualityExpression	q [ 3 ] == '!'		9482071	0		==			
ANR	9482598	ArrayIndexing	q [ 3 ]		9482071	0					
ANR	9482599	Identifier	q		9482071	0					
ANR	9482600	PrimaryExpression	3		9482071	1					
ANR	9482601	PrimaryExpression	'!'		9482071	1					
ANR	9482602	PrimaryExpression	2		9482071	1					
ANR	9482603	ConditionalExpression	q [ 3 ] != '%' ? 1 : q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4		9482071	2					
ANR	9482604	Condition	q [ 3 ] != '%'		9482071	0					
ANR	9482605	EqualityExpression	q [ 3 ] != '%'		9482071	0		!=			
ANR	9482606	ArrayIndexing	q [ 3 ]		9482071	0					
ANR	9482607	Identifier	q		9482071	0					
ANR	9482608	PrimaryExpression	3		9482071	1					
ANR	9482609	PrimaryExpression	'%'		9482071	1					
ANR	9482610	PrimaryExpression	1		9482071	1					
ANR	9482611	ConditionalExpression	q [ 4 ] == '!' ? 3 : q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4		9482071	2					
ANR	9482612	Condition	q [ 4 ] == '!'		9482071	0					
ANR	9482613	EqualityExpression	q [ 4 ] == '!'		9482071	0		==			
ANR	9482614	ArrayIndexing	q [ 4 ]		9482071	0					
ANR	9482615	Identifier	q		9482071	0					
ANR	9482616	PrimaryExpression	4		9482071	1					
ANR	9482617	PrimaryExpression	'!'		9482071	1					
ANR	9482618	PrimaryExpression	3		9482071	1					
ANR	9482619	ConditionalExpression	q [ 4 ] != '%' ? 2 : q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4		9482071	2					
ANR	9482620	Condition	q [ 4 ] != '%'		9482071	0					
ANR	9482621	EqualityExpression	q [ 4 ] != '%'		9482071	0		!=			
ANR	9482622	ArrayIndexing	q [ 4 ]		9482071	0					
ANR	9482623	Identifier	q		9482071	0					
ANR	9482624	PrimaryExpression	4		9482071	1					
ANR	9482625	PrimaryExpression	'%'		9482071	1					
ANR	9482626	PrimaryExpression	2		9482071	1					
ANR	9482627	ConditionalExpression	q [ 5 ] == '!' ? 4 : q [ 5 ] != '%' ? 3 : 4		9482071	2					
ANR	9482628	Condition	q [ 5 ] == '!'		9482071	0					
ANR	9482629	EqualityExpression	q [ 5 ] == '!'		9482071	0		==			
ANR	9482630	ArrayIndexing	q [ 5 ]		9482071	0					
ANR	9482631	Identifier	q		9482071	0					
ANR	9482632	PrimaryExpression	5		9482071	1					
ANR	9482633	PrimaryExpression	'!'		9482071	1					
ANR	9482634	PrimaryExpression	4		9482071	1					
ANR	9482635	ConditionalExpression	q [ 5 ] != '%' ? 3 : 4		9482071	2					
ANR	9482636	Condition	q [ 5 ] != '%'		9482071	0					
ANR	9482637	EqualityExpression	q [ 5 ] != '%'		9482071	0		!=			
ANR	9482638	ArrayIndexing	q [ 5 ]		9482071	0					
ANR	9482639	Identifier	q		9482071	0					
ANR	9482640	PrimaryExpression	5		9482071	1					
ANR	9482641	PrimaryExpression	'%'		9482071	1					
ANR	9482642	PrimaryExpression	3		9482071	1					
ANR	9482643	PrimaryExpression	4		9482071	2					
ANR	9482644	IfStatement	if ( wlimit - q < 5 + extra )		9482071	1					
ANR	9482645	Condition	wlimit - q < 5 + extra	136:24:4802:4823	9482071	0	True				
ANR	9482646	RelationalExpression	wlimit - q < 5 + extra		9482071	0		<			
ANR	9482647	AdditiveExpression	wlimit - q		9482071	0		-			
ANR	9482648	Identifier	wlimit		9482071	0					
ANR	9482649	Identifier	q		9482071	1					
ANR	9482650	AdditiveExpression	5 + extra		9482071	1		+			
ANR	9482651	PrimaryExpression	5		9482071	0					
ANR	9482652	Identifier	extra		9482071	1					
ANR	9482653	CompoundStatement		93:48:3619:3619	9482071	1					
ANR	9482654	ExpressionStatement	status = 1	137:24:4852:4862	9482071	0	True				
ANR	9482655	AssignmentExpression	status = 1		9482071	0		=			
ANR	9482656	Identifier	status		9482071	0					
ANR	9482657	PrimaryExpression	1		9482071	1					
ANR	9482658	BreakStatement	break ;	138:24:4888:4893	9482071	1	True				
ANR	9482659	ExpressionStatement	"if_debug6m ( 'w' , ss -> memory , ""[w]%c%c%c%c%c extra = %d\\n"" , q [ 1 ] , q [ 2 ] , q [ 3 ] , q [ 4 ] , q [ 5 ] , extra )"	140:20:4937:5062	9482071	2	True				
ANR	9482660	CallExpression	"if_debug6m ( 'w' , ss -> memory , ""[w]%c%c%c%c%c extra = %d\\n"" , q [ 1 ] , q [ 2 ] , q [ 3 ] , q [ 4 ] , q [ 5 ] , extra )"		9482071	0					
ANR	9482661	Callee	if_debug6m		9482071	0					
ANR	9482662	Identifier	if_debug6m		9482071	0					
ANR	9482663	ArgumentList	'w'		9482071	1					
ANR	9482664	Argument	'w'		9482071	0					
ANR	9482665	PrimaryExpression	'w'		9482071	0					
ANR	9482666	Argument	ss -> memory		9482071	1					
ANR	9482667	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482668	Identifier	ss		9482071	0					
ANR	9482669	Identifier	memory		9482071	1					
ANR	9482670	Argument	"""[w]%c%c%c%c%c extra = %d\\n"""		9482071	2					
ANR	9482671	PrimaryExpression	"""[w]%c%c%c%c%c extra = %d\\n"""		9482071	0					
ANR	9482672	Argument	q [ 1 ]		9482071	3					
ANR	9482673	ArrayIndexing	q [ 1 ]		9482071	0					
ANR	9482674	Identifier	q		9482071	0					
ANR	9482675	PrimaryExpression	1		9482071	1					
ANR	9482676	Argument	q [ 2 ]		9482071	4					
ANR	9482677	ArrayIndexing	q [ 2 ]		9482071	0					
ANR	9482678	Identifier	q		9482071	0					
ANR	9482679	PrimaryExpression	2		9482071	1					
ANR	9482680	Argument	q [ 3 ]		9482071	5					
ANR	9482681	ArrayIndexing	q [ 3 ]		9482071	0					
ANR	9482682	Identifier	q		9482071	0					
ANR	9482683	PrimaryExpression	3		9482071	1					
ANR	9482684	Argument	q [ 4 ]		9482071	6					
ANR	9482685	ArrayIndexing	q [ 4 ]		9482071	0					
ANR	9482686	Identifier	q		9482071	0					
ANR	9482687	PrimaryExpression	4		9482071	1					
ANR	9482688	Argument	q [ 5 ]		9482071	7					
ANR	9482689	ArrayIndexing	q [ 5 ]		9482071	0					
ANR	9482690	Identifier	q		9482071	0					
ANR	9482691	PrimaryExpression	5		9482071	1					
ANR	9482692	Argument	extra		9482071	8					
ANR	9482693	Identifier	extra		9482071	0					
ANR	9482694	SwitchStatement	switch ( extra )		9482071	3					
ANR	9482695	Condition	extra	142:28:5092:5096	9482071	0	True				
ANR	9482696	Identifier	extra		9482071	0					
ANR	9482697	CompoundStatement		99:35:3892:3892	9482071	1					
ANR	9482698	Label	case 4 :	143:24:5125:5131	9482071	0	True				
ANR	9482699	ExpressionStatement	"q [ 9 ] = q [ 5 ] , q [ 8 ] = '\\n'"	144:28:5161:5185	9482071	1	True				
ANR	9482700	Expression	"q [ 9 ] = q [ 5 ] , q [ 8 ] = '\\n'"		9482071	0					
ANR	9482701	AssignmentExpression	q [ 9 ] = q [ 5 ]		9482071	0		=			
ANR	9482702	ArrayIndexing	q [ 9 ]		9482071	0					
ANR	9482703	Identifier	q		9482071	0					
ANR	9482704	PrimaryExpression	9		9482071	1					
ANR	9482705	ArrayIndexing	q [ 5 ]		9482071	1					
ANR	9482706	Identifier	q		9482071	0					
ANR	9482707	PrimaryExpression	5		9482071	1					
ANR	9482708	AssignmentExpression	q [ 8 ] = '\\n'		9482071	1		=			
ANR	9482709	ArrayIndexing	q [ 8 ]		9482071	0					
ANR	9482710	Identifier	q		9482071	0					
ANR	9482711	PrimaryExpression	8		9482071	1					
ANR	9482712	PrimaryExpression	'\\n'		9482071	1					
ANR	9482713	GotoStatement	goto e3 ;	145:28:5215:5222	9482071	2	True				
ANR	9482714	Identifier	e3		9482071	0					
ANR	9482715	Label	case 3 :	146:24:5248:5254	9482071	3	True				
ANR	9482716	ExpressionStatement	q [ 8 ] = q [ 5 ]	147:28:5284:5295	9482071	4	True				
ANR	9482717	AssignmentExpression	q [ 8 ] = q [ 5 ]		9482071	0		=			
ANR	9482718	ArrayIndexing	q [ 8 ]		9482071	0					
ANR	9482719	Identifier	q		9482071	0					
ANR	9482720	PrimaryExpression	8		9482071	1					
ANR	9482721	ArrayIndexing	q [ 5 ]		9482071	1					
ANR	9482722	Identifier	q		9482071	0					
ANR	9482723	PrimaryExpression	5		9482071	1					
ANR	9482724	Label	e3 :	148:26:5323:5325	9482071	5	True				
ANR	9482725	Identifier	e3		9482071	0					
ANR	9482726	ExpressionStatement	"q [ 7 ] = q [ 4 ] , q [ 6 ] = '\\n'"	148:29:5326:5350	9482071	6	True				
ANR	9482727	Expression	"q [ 7 ] = q [ 4 ] , q [ 6 ] = '\\n'"		9482071	0					
ANR	9482728	AssignmentExpression	q [ 7 ] = q [ 4 ]		9482071	0		=			
ANR	9482729	ArrayIndexing	q [ 7 ]		9482071	0					
ANR	9482730	Identifier	q		9482071	0					
ANR	9482731	PrimaryExpression	7		9482071	1					
ANR	9482732	ArrayIndexing	q [ 4 ]		9482071	1					
ANR	9482733	Identifier	q		9482071	0					
ANR	9482734	PrimaryExpression	4		9482071	1					
ANR	9482735	AssignmentExpression	q [ 6 ] = '\\n'		9482071	1		=			
ANR	9482736	ArrayIndexing	q [ 6 ]		9482071	0					
ANR	9482737	Identifier	q		9482071	0					
ANR	9482738	PrimaryExpression	6		9482071	1					
ANR	9482739	PrimaryExpression	'\\n'		9482071	1					
ANR	9482740	GotoStatement	goto e2 ;	149:28:5380:5387	9482071	7	True				
ANR	9482741	Identifier	e2		9482071	0					
ANR	9482742	Label	case 2 :	150:24:5413:5419	9482071	8	True				
ANR	9482743	ExpressionStatement	"q [ 7 ] = q [ 5 ] , q [ 6 ] = q [ 4 ]"	151:28:5449:5473	9482071	9	True				
ANR	9482744	Expression	"q [ 7 ] = q [ 5 ] , q [ 6 ] = q [ 4 ]"		9482071	0					
ANR	9482745	AssignmentExpression	q [ 7 ] = q [ 5 ]		9482071	0		=			
ANR	9482746	ArrayIndexing	q [ 7 ]		9482071	0					
ANR	9482747	Identifier	q		9482071	0					
ANR	9482748	PrimaryExpression	7		9482071	1					
ANR	9482749	ArrayIndexing	q [ 5 ]		9482071	1					
ANR	9482750	Identifier	q		9482071	0					
ANR	9482751	PrimaryExpression	5		9482071	1					
ANR	9482752	AssignmentExpression	q [ 6 ] = q [ 4 ]		9482071	1		=			
ANR	9482753	ArrayIndexing	q [ 6 ]		9482071	0					
ANR	9482754	Identifier	q		9482071	0					
ANR	9482755	PrimaryExpression	6		9482071	1					
ANR	9482756	ArrayIndexing	q [ 4 ]		9482071	1					
ANR	9482757	Identifier	q		9482071	0					
ANR	9482758	PrimaryExpression	4		9482071	1					
ANR	9482759	Label	e2 :	152:26:5501:5503	9482071	10	True				
ANR	9482760	Identifier	e2		9482071	0					
ANR	9482761	ExpressionStatement	"q [ 5 ] = q [ 3 ] , q [ 4 ] = '\\n'"	152:29:5504:5528	9482071	11	True				
ANR	9482762	Expression	"q [ 5 ] = q [ 3 ] , q [ 4 ] = '\\n'"		9482071	0					
ANR	9482763	AssignmentExpression	q [ 5 ] = q [ 3 ]		9482071	0		=			
ANR	9482764	ArrayIndexing	q [ 5 ]		9482071	0					
ANR	9482765	Identifier	q		9482071	0					
ANR	9482766	PrimaryExpression	5		9482071	1					
ANR	9482767	ArrayIndexing	q [ 3 ]		9482071	1					
ANR	9482768	Identifier	q		9482071	0					
ANR	9482769	PrimaryExpression	3		9482071	1					
ANR	9482770	AssignmentExpression	q [ 4 ] = '\\n'		9482071	1		=			
ANR	9482771	ArrayIndexing	q [ 4 ]		9482071	0					
ANR	9482772	Identifier	q		9482071	0					
ANR	9482773	PrimaryExpression	4		9482071	1					
ANR	9482774	PrimaryExpression	'\\n'		9482071	1					
ANR	9482775	GotoStatement	goto e1 ;	153:28:5558:5565	9482071	12	True				
ANR	9482776	Identifier	e1		9482071	0					
ANR	9482777	Label	case 1 :	154:24:5591:5597	9482071	13	True				
ANR	9482778	ExpressionStatement	"q [ 6 ] = q [ 5 ] , q [ 5 ] = q [ 4 ] , q [ 4 ] = q [ 3 ]"	155:28:5627:5664	9482071	14	True				
ANR	9482779	Expression	"q [ 6 ] = q [ 5 ] , q [ 5 ] = q [ 4 ] , q [ 4 ] = q [ 3 ]"		9482071	0					
ANR	9482780	AssignmentExpression	q [ 6 ] = q [ 5 ]		9482071	0		=			
ANR	9482781	ArrayIndexing	q [ 6 ]		9482071	0					
ANR	9482782	Identifier	q		9482071	0					
ANR	9482783	PrimaryExpression	6		9482071	1					
ANR	9482784	ArrayIndexing	q [ 5 ]		9482071	1					
ANR	9482785	Identifier	q		9482071	0					
ANR	9482786	PrimaryExpression	5		9482071	1					
ANR	9482787	Expression	"q [ 5 ] = q [ 4 ] , q [ 4 ] = q [ 3 ]"		9482071	1					
ANR	9482788	AssignmentExpression	q [ 5 ] = q [ 4 ]		9482071	0		=			
ANR	9482789	ArrayIndexing	q [ 5 ]		9482071	0					
ANR	9482790	Identifier	q		9482071	0					
ANR	9482791	PrimaryExpression	5		9482071	1					
ANR	9482792	ArrayIndexing	q [ 4 ]		9482071	1					
ANR	9482793	Identifier	q		9482071	0					
ANR	9482794	PrimaryExpression	4		9482071	1					
ANR	9482795	AssignmentExpression	q [ 4 ] = q [ 3 ]		9482071	1		=			
ANR	9482796	ArrayIndexing	q [ 4 ]		9482071	0					
ANR	9482797	Identifier	q		9482071	0					
ANR	9482798	PrimaryExpression	4		9482071	1					
ANR	9482799	ArrayIndexing	q [ 3 ]		9482071	1					
ANR	9482800	Identifier	q		9482071	0					
ANR	9482801	PrimaryExpression	3		9482071	1					
ANR	9482802	Label	e1 :	156:26:5692:5694	9482071	15	True				
ANR	9482803	Identifier	e1		9482071	0					
ANR	9482804	ExpressionStatement	"q [ 3 ] = q [ 2 ] , q [ 2 ] = '\\n'"	156:29:5695:5719	9482071	16	True				
ANR	9482805	Expression	"q [ 3 ] = q [ 2 ] , q [ 2 ] = '\\n'"		9482071	0					
ANR	9482806	AssignmentExpression	q [ 3 ] = q [ 2 ]		9482071	0		=			
ANR	9482807	ArrayIndexing	q [ 3 ]		9482071	0					
ANR	9482808	Identifier	q		9482071	0					
ANR	9482809	PrimaryExpression	3		9482071	1					
ANR	9482810	ArrayIndexing	q [ 2 ]		9482071	1					
ANR	9482811	Identifier	q		9482071	0					
ANR	9482812	PrimaryExpression	2		9482071	1					
ANR	9482813	AssignmentExpression	q [ 2 ] = '\\n'		9482071	1		=			
ANR	9482814	ArrayIndexing	q [ 2 ]		9482071	0					
ANR	9482815	Identifier	q		9482071	0					
ANR	9482816	PrimaryExpression	2		9482071	1					
ANR	9482817	PrimaryExpression	'\\n'		9482071	1					
ANR	9482818	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL at %d bytes written\\n"" , ( int ) ( q + 2 * extra - pw -> ptr ) )"	158:20:5763:5887	9482071	4	True				
ANR	9482819	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL at %d bytes written\\n"" , ( int ) ( q + 2 * extra - pw -> ptr ) )"		9482071	0					
ANR	9482820	Callee	if_debug1m		9482071	0					
ANR	9482821	Identifier	if_debug1m		9482071	0					
ANR	9482822	ArgumentList	'w'		9482071	1					
ANR	9482823	Argument	'w'		9482071	0					
ANR	9482824	PrimaryExpression	'w'		9482071	0					
ANR	9482825	Argument	ss -> memory		9482071	1					
ANR	9482826	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482827	Identifier	ss		9482071	0					
ANR	9482828	Identifier	memory		9482071	1					
ANR	9482829	Argument	"""[w85]EOL at %d bytes written\\n"""		9482071	2					
ANR	9482830	PrimaryExpression	"""[w85]EOL at %d bytes written\\n"""		9482071	0					
ANR	9482831	Argument	( int ) ( q + 2 * extra - pw -> ptr )		9482071	3					
ANR	9482832	CastExpression	( int ) ( q + 2 * extra - pw -> ptr )		9482071	0					
ANR	9482833	CastTarget	int		9482071	0					
ANR	9482834	AdditiveExpression	q + 2 * extra - pw -> ptr		9482071	1		+			
ANR	9482835	Identifier	q		9482071	0					
ANR	9482836	AdditiveExpression	2 * extra - pw -> ptr		9482071	1		-			
ANR	9482837	MultiplicativeExpression	2 * extra		9482071	0		*			
ANR	9482838	PrimaryExpression	2		9482071	0					
ANR	9482839	Identifier	extra		9482071	1					
ANR	9482840	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9482841	Identifier	pw		9482071	0					
ANR	9482842	Identifier	ptr		9482071	1					
ANR	9482843	ExpressionStatement	qn = q + 2 * extra + LINE_LIMIT	160:20:5909:5940	9482071	5	True				
ANR	9482844	AssignmentExpression	qn = q + 2 * extra + LINE_LIMIT		9482071	0		=			
ANR	9482845	Identifier	qn		9482071	0					
ANR	9482846	AdditiveExpression	q + 2 * extra + LINE_LIMIT		9482071	1		+			
ANR	9482847	Identifier	q		9482071	0					
ANR	9482848	AdditiveExpression	2 * extra + LINE_LIMIT		9482071	1		+			
ANR	9482849	MultiplicativeExpression	2 * extra		9482071	0		*			
ANR	9482850	PrimaryExpression	2		9482071	0					
ANR	9482851	Identifier	extra		9482071	1					
ANR	9482852	Identifier	LINE_LIMIT		9482071	1					
ANR	9482853	ExpressionStatement	q += extra	161:20:5962:5972	9482071	6	True				
ANR	9482854	AssignmentExpression	q += extra		9482071	0		+=			
ANR	9482855	Identifier	q		9482071	0					
ANR	9482856	Identifier	extra		9482071	1					
ANR	9482857	ElseStatement	else		9482071	0					
ANR	9482858	IfStatement	if ( q [ 1 ] == '!' && prev == '%' && qn - q == LINE_LIMIT - 1 )		9482071	0					
ANR	9482859	Condition	q [ 1 ] == '!' && prev == '%' && qn - q == LINE_LIMIT - 1	163:23:6015:6091	9482071	0	True				
ANR	9482860	AndExpression	q [ 1 ] == '!' && prev == '%' && qn - q == LINE_LIMIT - 1		9482071	0		&&			
ANR	9482861	EqualityExpression	q [ 1 ] == '!'		9482071	0		==			
ANR	9482862	ArrayIndexing	q [ 1 ]		9482071	0					
ANR	9482863	Identifier	q		9482071	0					
ANR	9482864	PrimaryExpression	1		9482071	1					
ANR	9482865	PrimaryExpression	'!'		9482071	1					
ANR	9482866	AndExpression	prev == '%' && qn - q == LINE_LIMIT - 1		9482071	1		&&			
ANR	9482867	EqualityExpression	prev == '%'		9482071	0		==			
ANR	9482868	Identifier	prev		9482071	0					
ANR	9482869	PrimaryExpression	'%'		9482071	1					
ANR	9482870	EqualityExpression	qn - q == LINE_LIMIT - 1		9482071	1		==			
ANR	9482871	AdditiveExpression	qn - q		9482071	0		-			
ANR	9482872	Identifier	qn		9482071	0					
ANR	9482873	Identifier	q		9482071	1					
ANR	9482874	AdditiveExpression	LINE_LIMIT - 1		9482071	1		-			
ANR	9482875	Identifier	LINE_LIMIT		9482071	0					
ANR	9482876	PrimaryExpression	1		9482071	1					
ANR	9482877	CompoundStatement		122:25:4911:4911	9482071	1					
ANR	9482878	ExpressionStatement	* ++ q = prev = '\\n'	167:16:6186:6204	9482071	0	True				
ANR	9482879	AssignmentExpression	* ++ q = prev = '\\n'		9482071	0		=			
ANR	9482880	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9482881	UnaryOperator	*		9482071	0					
ANR	9482882	UnaryExpression	++ q		9482071	1					
ANR	9482883	IncDec	++		9482071	0					
ANR	9482884	Identifier	q		9482071	1					
ANR	9482885	AssignmentExpression	prev = '\\n'		9482071	1		=			
ANR	9482886	Identifier	prev		9482071	0					
ANR	9482887	PrimaryExpression	'\\n'		9482071	1					
ANR	9482888	ExpressionStatement	qn = q + LINE_LIMIT	168:16:6222:6241	9482071	1	True				
ANR	9482889	AssignmentExpression	qn = q + LINE_LIMIT		9482071	0		=			
ANR	9482890	Identifier	qn		9482071	0					
ANR	9482891	AdditiveExpression	q + LINE_LIMIT		9482071	1		+			
ANR	9482892	Identifier	q		9482071	0					
ANR	9482893	Identifier	LINE_LIMIT		9482071	1					
ANR	9482894	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL for %%! at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"	169:16:6259:6375	9482071	2	True				
ANR	9482895	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w85]EOL for %%! at %d bytes written\\n"" , ( int ) ( q - pw -> ptr ) )"		9482071	0					
ANR	9482896	Callee	if_debug1m		9482071	0					
ANR	9482897	Identifier	if_debug1m		9482071	0					
ANR	9482898	ArgumentList	'w'		9482071	1					
ANR	9482899	Argument	'w'		9482071	0					
ANR	9482900	PrimaryExpression	'w'		9482071	0					
ANR	9482901	Argument	ss -> memory		9482071	1					
ANR	9482902	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9482903	Identifier	ss		9482071	0					
ANR	9482904	Identifier	memory		9482071	1					
ANR	9482905	Argument	"""[w85]EOL for %%! at %d bytes written\\n"""		9482071	2					
ANR	9482906	PrimaryExpression	"""[w85]EOL for %%! at %d bytes written\\n"""		9482071	0					
ANR	9482907	Argument	( int ) ( q - pw -> ptr )		9482071	3					
ANR	9482908	CastExpression	( int ) ( q - pw -> ptr )		9482071	0					
ANR	9482909	CastTarget	int		9482071	0					
ANR	9482910	AdditiveExpression	q - pw -> ptr		9482071	1		-			
ANR	9482911	Identifier	q		9482071	0					
ANR	9482912	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9482913	Identifier	pw		9482071	0					
ANR	9482914	Identifier	ptr		9482071	1					
ANR	9482915	GotoStatement	goto put ;	171:16:6393:6401	9482071	3	True				
ANR	9482916	Identifier	put		9482071	0					
ANR	9482917	ExpressionStatement	prev = * ( q += 5 )	173:12:6429:6445	9482071	13	True				
ANR	9482918	AssignmentExpression	prev = * ( q += 5 )		9482071	0		=			
ANR	9482919	Identifier	prev		9482071	0					
ANR	9482920	UnaryOperationExpression	* ( q += 5 )		9482071	1					
ANR	9482921	UnaryOperator	*		9482071	0					
ANR	9482922	AssignmentExpression	q += 5		9482071	1		+=			
ANR	9482923	Identifier	q		9482071	0					
ANR	9482924	PrimaryExpression	5		9482071	1					
ANR	9482925	Label	end :	176:1:6464:6467	9482071	16	True				
ANR	9482926	Identifier	end		9482071	0					
ANR	9482927	ExpressionStatement	ss -> count = LINE_LIMIT - ( qn - q )	177:4:6473:6506	9482071	17	True				
ANR	9482928	AssignmentExpression	ss -> count = LINE_LIMIT - ( qn - q )		9482071	0		=			
ANR	9482929	PtrMemberAccess	ss -> count		9482071	0					
ANR	9482930	Identifier	ss		9482071	0					
ANR	9482931	Identifier	count		9482071	1					
ANR	9482932	AdditiveExpression	LINE_LIMIT - ( qn - q )		9482071	1		-			
ANR	9482933	Identifier	LINE_LIMIT		9482071	0					
ANR	9482934	AdditiveExpression	qn - q		9482071	1		-			
ANR	9482935	Identifier	qn		9482071	0					
ANR	9482936	Identifier	q		9482071	1					
ANR	9482937	IfStatement	if ( last && status == 0 && count < 4 )		9482071	18					
ANR	9482938	Condition	last && status == 0 && count < 4	179:8:6556:6587	9482071	0	True				
ANR	9482939	AndExpression	last && status == 0 && count < 4		9482071	0		&&			
ANR	9482940	Identifier	last		9482071	0					
ANR	9482941	AndExpression	status == 0 && count < 4		9482071	1		&&			
ANR	9482942	EqualityExpression	status == 0		9482071	0		==			
ANR	9482943	Identifier	status		9482071	0					
ANR	9482944	PrimaryExpression	0		9482071	1					
ANR	9482945	RelationalExpression	count < 4		9482071	1		<			
ANR	9482946	Identifier	count		9482071	0					
ANR	9482947	PrimaryExpression	4		9482071	1					
ANR	9482948	CompoundStatement		141:8:5533:5545	9482071	1					
ANR	9482949	IdentifierDeclStatement	char buf [ 5 ] ;	180:8:6600:6611	9482071	0	True				
ANR	9482950	IdentifierDecl	buf [ 5 ]		9482071	0					
ANR	9482951	IdentifierDeclType	char [ 5 ]		9482071	0					
ANR	9482952	Identifier	buf		9482071	1					
ANR	9482953	PrimaryExpression	5		9482071	2					
ANR	9482954	IdentifierDeclStatement	int nchars = ( count == 0 ? 2 : count + 3 ) ;	181:8:6621:6662	9482071	1	True				
ANR	9482955	IdentifierDecl	nchars = ( count == 0 ? 2 : count + 3 )		9482071	0					
ANR	9482956	IdentifierDeclType	int		9482071	0					
ANR	9482957	Identifier	nchars		9482071	1					
ANR	9482958	AssignmentExpression	nchars = ( count == 0 ? 2 : count + 3 )		9482071	2		=			
ANR	9482959	Identifier	nchars		9482071	0					
ANR	9482960	ConditionalExpression	count == 0 ? 2 : count + 3		9482071	1					
ANR	9482961	Condition	count == 0		9482071	0					
ANR	9482962	EqualityExpression	count == 0		9482071	0		==			
ANR	9482963	Identifier	count		9482071	0					
ANR	9482964	PrimaryExpression	0		9482071	1					
ANR	9482965	PrimaryExpression	2		9482071	1					
ANR	9482966	AdditiveExpression	count + 3		9482071	2		+			
ANR	9482967	Identifier	count		9482071	0					
ANR	9482968	PrimaryExpression	3		9482071	1					
ANR	9482969	IdentifierDeclStatement	ulong word = 0 ;	182:8:6672:6686	9482071	2	True				
ANR	9482970	IdentifierDecl	word = 0		9482071	0					
ANR	9482971	IdentifierDeclType	ulong		9482071	0					
ANR	9482972	Identifier	word		9482071	1					
ANR	9482973	AssignmentExpression	word = 0		9482071	2		=			
ANR	9482974	Identifier	word		9482071	0					
ANR	9482975	PrimaryExpression	0		9482071	1					
ANR	9482976	IdentifierDeclStatement	ulong divisor = 85L * 85 * 85 * 85 ;	183:8:6696:6730	9482071	3	True				
ANR	9482977	IdentifierDecl	divisor = 85L * 85 * 85 * 85		9482071	0					
ANR	9482978	IdentifierDeclType	ulong		9482071	0					
ANR	9482979	Identifier	divisor		9482071	1					
ANR	9482980	AssignmentExpression	divisor = 85L * 85 * 85 * 85		9482071	2		=			
ANR	9482981	Identifier	divisor		9482071	0					
ANR	9482982	MultiplicativeExpression	85L * 85 * 85 * 85		9482071	1		*			
ANR	9482983	PrimaryExpression	85L		9482071	0					
ANR	9482984	MultiplicativeExpression	85 * 85 * 85		9482071	1		*			
ANR	9482985	PrimaryExpression	85		9482071	0					
ANR	9482986	MultiplicativeExpression	85 * 85		9482071	1		*			
ANR	9482987	PrimaryExpression	85		9482071	0					
ANR	9482988	PrimaryExpression	85		9482071	1					
ANR	9482989	IdentifierDeclStatement	"int i , space ;"	184:8:6740:6752	9482071	4	True				
ANR	9482990	IdentifierDecl	i		9482071	0					
ANR	9482991	IdentifierDeclType	int		9482071	0					
ANR	9482992	Identifier	i		9482071	1					
ANR	9482993	IdentifierDecl	space		9482071	1					
ANR	9482994	IdentifierDeclType	int		9482071	0					
ANR	9482995	Identifier	space		9482071	1					
ANR	9482996	SwitchStatement	switch ( count )		9482071	5					
ANR	9482997	Condition	count	186:16:6771:6775	9482071	0	True				
ANR	9482998	Identifier	count		9482071	0					
ANR	9482999	CompoundStatement		143:23:5571:5571	9482071	1					
ANR	9483000	Label	case 3 :	187:12:6792:6798	9482071	0	True				
ANR	9483001	ExpressionStatement	word += ( uint ) p [ 3 ] << 8	188:16:6816:6840	9482071	1	True				
ANR	9483002	AssignmentExpression	word += ( uint ) p [ 3 ] << 8		9482071	0		+=			
ANR	9483003	Identifier	word		9482071	0					
ANR	9483004	ShiftExpression	( uint ) p [ 3 ] << 8		9482071	1		<<			
ANR	9483005	CastExpression	( uint ) p [ 3 ]		9482071	0					
ANR	9483006	CastTarget	uint		9482071	0					
ANR	9483007	ArrayIndexing	p [ 3 ]		9482071	1					
ANR	9483008	Identifier	p		9482071	0					
ANR	9483009	PrimaryExpression	3		9482071	1					
ANR	9483010	PrimaryExpression	8		9482071	1					
ANR	9483011	Label	case 2 :	189:12:6854:6860	9482071	2	True				
ANR	9483012	ExpressionStatement	word += ( ulong ) p [ 2 ] << 16	190:16:6878:6904	9482071	3	True				
ANR	9483013	AssignmentExpression	word += ( ulong ) p [ 2 ] << 16		9482071	0		+=			
ANR	9483014	Identifier	word		9482071	0					
ANR	9483015	ShiftExpression	( ulong ) p [ 2 ] << 16		9482071	1		<<			
ANR	9483016	CastExpression	( ulong ) p [ 2 ]		9482071	0					
ANR	9483017	CastTarget	ulong		9482071	0					
ANR	9483018	ArrayIndexing	p [ 2 ]		9482071	1					
ANR	9483019	Identifier	p		9482071	0					
ANR	9483020	PrimaryExpression	2		9482071	1					
ANR	9483021	PrimaryExpression	16		9482071	1					
ANR	9483022	Label	case 1 :	191:12:6918:6924	9482071	4	True				
ANR	9483023	ExpressionStatement	word += ( ulong ) p [ 1 ] << 24	192:16:6942:6968	9482071	5	True				
ANR	9483024	AssignmentExpression	word += ( ulong ) p [ 1 ] << 24		9482071	0		+=			
ANR	9483025	Identifier	word		9482071	0					
ANR	9483026	ShiftExpression	( ulong ) p [ 1 ] << 24		9482071	1		<<			
ANR	9483027	CastExpression	( ulong ) p [ 1 ]		9482071	0					
ANR	9483028	CastTarget	ulong		9482071	0					
ANR	9483029	ArrayIndexing	p [ 1 ]		9482071	1					
ANR	9483030	Identifier	p		9482071	0					
ANR	9483031	PrimaryExpression	1		9482071	1					
ANR	9483032	PrimaryExpression	24		9482071	1					
ANR	9483033	ForStatement	for ( i = 0 ; i <= count ; i ++ )		9482071	6					
ANR	9483034	ForInit	i = 0 ;	193:20:6990:6993	9482071	0	True				
ANR	9483035	AssignmentExpression	i = 0		9482071	0		=			
ANR	9483036	Identifier	i		9482071	0					
ANR	9483037	PrimaryExpression	0		9482071	1					
ANR	9483038	Condition	i <= count	193:25:6995:7004	9482071	1	True				
ANR	9483039	RelationalExpression	i <= count		9482071	0		<=			
ANR	9483040	Identifier	i		9482071	0					
ANR	9483041	Identifier	count		9482071	1					
ANR	9483042	PostIncDecOperationExpression	i ++	193:37:7007:7009	9482071	2	True				
ANR	9483043	Identifier	i		9482071	0					
ANR	9483044	IncDec	++		9482071	1					
ANR	9483045	CompoundStatement		151:20:5827:5851	9482071	3					
ANR	9483046	IdentifierDeclStatement	ulong v = word / divisor ;	194:20:7034:7058	9482071	0	True				
ANR	9483047	IdentifierDecl	v = word / divisor		9482071	0					
ANR	9483048	IdentifierDeclType	ulong		9482071	0					
ANR	9483049	Identifier	v		9482071	1					
ANR	9483050	AssignmentExpression	v = word / divisor		9482071	2		=			
ANR	9483051	Identifier	v		9482071	0					
ANR	9483052	MultiplicativeExpression	word / divisor		9482071	1		/			
ANR	9483053	Identifier	word		9482071	0					
ANR	9483054	Identifier	divisor		9482071	1					
ANR	9483055	ExpressionStatement	buf [ i ] = ( byte ) v + '!'	196:20:7109:7132	9482071	1	True				
ANR	9483056	AssignmentExpression	buf [ i ] = ( byte ) v + '!'		9482071	0		=			
ANR	9483057	ArrayIndexing	buf [ i ]		9482071	0					
ANR	9483058	Identifier	buf		9482071	0					
ANR	9483059	Identifier	i		9482071	1					
ANR	9483060	AdditiveExpression	( byte ) v + '!'		9482071	1		+			
ANR	9483061	CastExpression	( byte ) v		9482071	0					
ANR	9483062	CastTarget	byte		9482071	0					
ANR	9483063	Identifier	v		9482071	1					
ANR	9483064	PrimaryExpression	'!'		9482071	1					
ANR	9483065	ExpressionStatement	word -= v * divisor	197:20:7154:7173	9482071	2	True				
ANR	9483066	AssignmentExpression	word -= v * divisor		9482071	0		-=			
ANR	9483067	Identifier	word		9482071	0					
ANR	9483068	MultiplicativeExpression	v * divisor		9482071	1		*			
ANR	9483069	Identifier	v		9482071	0					
ANR	9483070	Identifier	divisor		9482071	1					
ANR	9483071	ExpressionStatement	divisor /= 85	198:20:7195:7208	9482071	3	True				
ANR	9483072	AssignmentExpression	divisor /= 85		9482071	0		/=			
ANR	9483073	Identifier	divisor		9482071	0					
ANR	9483074	PrimaryExpression	85		9482071	1					
ANR	9483075	ExpressionStatement	space = count && buf [ 0 ] == '%' && ( ( prev == '\\n' && ( buf [ 1 ] == '%' || buf [ 1 ] == '!' ) ) || ( prev == '%' && qn - q == LINE_LIMIT - 1 ) )	202:8:7275:7441	9482071	6	True				
ANR	9483076	AssignmentExpression	space = count && buf [ 0 ] == '%' && ( ( prev == '\\n' && ( buf [ 1 ] == '%' || buf [ 1 ] == '!' ) ) || ( prev == '%' && qn - q == LINE_LIMIT - 1 ) )		9482071	0		=			
ANR	9483077	Identifier	space		9482071	0					
ANR	9483078	AndExpression	count && buf [ 0 ] == '%' && ( ( prev == '\\n' && ( buf [ 1 ] == '%' || buf [ 1 ] == '!' ) ) || ( prev == '%' && qn - q == LINE_LIMIT - 1 ) )		9482071	1		&&			
ANR	9483079	Identifier	count		9482071	0					
ANR	9483080	AndExpression	buf [ 0 ] == '%' && ( ( prev == '\\n' && ( buf [ 1 ] == '%' || buf [ 1 ] == '!' ) ) || ( prev == '%' && qn - q == LINE_LIMIT - 1 ) )		9482071	1		&&			
ANR	9483081	EqualityExpression	buf [ 0 ] == '%'		9482071	0		==			
ANR	9483082	ArrayIndexing	buf [ 0 ]		9482071	0					
ANR	9483083	Identifier	buf		9482071	0					
ANR	9483084	PrimaryExpression	0		9482071	1					
ANR	9483085	PrimaryExpression	'%'		9482071	1					
ANR	9483086	OrExpression	( prev == '\\n' && ( buf [ 1 ] == '%' || buf [ 1 ] == '!' ) ) || ( prev == '%' && qn - q == LINE_LIMIT - 1 )		9482071	1		||			
ANR	9483087	AndExpression	prev == '\\n' && ( buf [ 1 ] == '%' || buf [ 1 ] == '!' )		9482071	0		&&			
ANR	9483088	EqualityExpression	prev == '\\n'		9482071	0		==			
ANR	9483089	Identifier	prev		9482071	0					
ANR	9483090	PrimaryExpression	'\\n'		9482071	1					
ANR	9483091	OrExpression	buf [ 1 ] == '%' || buf [ 1 ] == '!'		9482071	1		||			
ANR	9483092	EqualityExpression	buf [ 1 ] == '%'		9482071	0		==			
ANR	9483093	ArrayIndexing	buf [ 1 ]		9482071	0					
ANR	9483094	Identifier	buf		9482071	0					
ANR	9483095	PrimaryExpression	1		9482071	1					
ANR	9483096	PrimaryExpression	'%'		9482071	1					
ANR	9483097	EqualityExpression	buf [ 1 ] == '!'		9482071	1		==			
ANR	9483098	ArrayIndexing	buf [ 1 ]		9482071	0					
ANR	9483099	Identifier	buf		9482071	0					
ANR	9483100	PrimaryExpression	1		9482071	1					
ANR	9483101	PrimaryExpression	'!'		9482071	1					
ANR	9483102	AndExpression	prev == '%' && qn - q == LINE_LIMIT - 1		9482071	1		&&			
ANR	9483103	EqualityExpression	prev == '%'		9482071	0		==			
ANR	9483104	Identifier	prev		9482071	0					
ANR	9483105	PrimaryExpression	'%'		9482071	1					
ANR	9483106	EqualityExpression	qn - q == LINE_LIMIT - 1		9482071	1		==			
ANR	9483107	AdditiveExpression	qn - q		9482071	0		-			
ANR	9483108	Identifier	qn		9482071	0					
ANR	9483109	Identifier	q		9482071	1					
ANR	9483110	AdditiveExpression	LINE_LIMIT - 1		9482071	1		-			
ANR	9483111	Identifier	LINE_LIMIT		9482071	0					
ANR	9483112	PrimaryExpression	1		9482071	1					
ANR	9483113	IfStatement	if ( wlimit - q < nchars + space )		9482071	7					
ANR	9483114	Condition	wlimit - q < nchars + space	206:12:7455:7479	9482071	0	True				
ANR	9483115	RelationalExpression	wlimit - q < nchars + space		9482071	0		<			
ANR	9483116	AdditiveExpression	wlimit - q		9482071	0		-			
ANR	9483117	Identifier	wlimit		9482071	0					
ANR	9483118	Identifier	q		9482071	1					
ANR	9483119	AdditiveExpression	nchars + space		9482071	1		+			
ANR	9483120	Identifier	nchars		9482071	0					
ANR	9483121	Identifier	space		9482071	1					
ANR	9483122	ExpressionStatement	status = 1	207:12:7494:7504	9482071	1	True				
ANR	9483123	AssignmentExpression	status = 1		9482071	0		=			
ANR	9483124	Identifier	status		9482071	0					
ANR	9483125	PrimaryExpression	1		9482071	1					
ANR	9483126	ElseStatement	else		9482071	0					
ANR	9483127	IfStatement	if ( q + nchars + space > qn )		9482071	0					
ANR	9483128	Condition	q + nchars + space > qn	208:17:7523:7543	9482071	0	True				
ANR	9483129	RelationalExpression	q + nchars + space > qn		9482071	0		>			
ANR	9483130	AdditiveExpression	q + nchars + space		9482071	0		+			
ANR	9483131	Identifier	q		9482071	0					
ANR	9483132	AdditiveExpression	nchars + space		9482071	1		+			
ANR	9483133	Identifier	nchars		9482071	0					
ANR	9483134	Identifier	space		9482071	1					
ANR	9483135	Identifier	qn		9482071	1					
ANR	9483136	CompoundStatement		165:40:6339:6339	9482071	1					
ANR	9483137	ExpressionStatement	* ++ q = prev = '\\n'	209:12:7560:7578	9482071	0	True				
ANR	9483138	AssignmentExpression	* ++ q = prev = '\\n'		9482071	0		=			
ANR	9483139	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9483140	UnaryOperator	*		9482071	0					
ANR	9483141	UnaryExpression	++ q		9482071	1					
ANR	9483142	IncDec	++		9482071	0					
ANR	9483143	Identifier	q		9482071	1					
ANR	9483144	AssignmentExpression	prev = '\\n'		9482071	1		=			
ANR	9483145	Identifier	prev		9482071	0					
ANR	9483146	PrimaryExpression	'\\n'		9482071	1					
ANR	9483147	ExpressionStatement	qn = q + LINE_LIMIT	210:12:7592:7611	9482071	1	True				
ANR	9483148	AssignmentExpression	qn = q + LINE_LIMIT		9482071	0		=			
ANR	9483149	Identifier	qn		9482071	0					
ANR	9483150	AdditiveExpression	q + LINE_LIMIT		9482071	1		+			
ANR	9483151	Identifier	q		9482071	0					
ANR	9483152	Identifier	LINE_LIMIT		9482071	1					
ANR	9483153	GotoStatement	goto end ;	211:12:7625:7633	9482071	2	True				
ANR	9483154	Identifier	end		9482071	0					
ANR	9483155	ElseStatement	else		9482071	0					
ANR	9483156	CompoundStatement		169:15:6443:6443	9482071	0					
ANR	9483157	IfStatement	if ( count )		9482071	0					
ANR	9483158	Condition	count	213:16:7668:7672	9482071	0	True				
ANR	9483159	Identifier	count		9482071	0					
ANR	9483160	CompoundStatement		170:23:6468:6468	9482071	1					
ANR	9483161	IfStatement	if ( space )		9482071	0					
ANR	9483162	Condition	space	214:20:7697:7701	9482071	0	True				
ANR	9483163	Identifier	space		9482071	0					
ANR	9483164	ExpressionStatement	* ++ q = ' '	215:18:7722:7732	9482071	1	True				
ANR	9483165	AssignmentExpression	* ++ q = ' '		9482071	0		=			
ANR	9483166	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9483167	UnaryOperator	*		9482071	0					
ANR	9483168	UnaryExpression	++ q		9482071	1					
ANR	9483169	IncDec	++		9482071	0					
ANR	9483170	Identifier	q		9482071	1					
ANR	9483171	PrimaryExpression	' '		9482071	1					
ANR	9483172	ExpressionStatement	"memcpy ( q + 1 , buf , count + 1 )"	216:16:7750:7775	9482071	1	True				
ANR	9483173	CallExpression	"memcpy ( q + 1 , buf , count + 1 )"		9482071	0					
ANR	9483174	Callee	memcpy		9482071	0					
ANR	9483175	Identifier	memcpy		9482071	0					
ANR	9483176	ArgumentList	q + 1		9482071	1					
ANR	9483177	Argument	q + 1		9482071	0					
ANR	9483178	AdditiveExpression	q + 1		9482071	0		+			
ANR	9483179	Identifier	q		9482071	0					
ANR	9483180	PrimaryExpression	1		9482071	1					
ANR	9483181	Argument	buf		9482071	1					
ANR	9483182	Identifier	buf		9482071	0					
ANR	9483183	Argument	count + 1		9482071	2					
ANR	9483184	AdditiveExpression	count + 1		9482071	0		+			
ANR	9483185	Identifier	count		9482071	0					
ANR	9483186	PrimaryExpression	1		9482071	1					
ANR	9483187	ExpressionStatement	q += count + 1	217:16:7793:7805	9482071	2	True				
ANR	9483188	AssignmentExpression	q += count + 1		9482071	0		+=			
ANR	9483189	Identifier	q		9482071	0					
ANR	9483190	AdditiveExpression	count + 1		9482071	1		+			
ANR	9483191	Identifier	count		9482071	0					
ANR	9483192	PrimaryExpression	1		9482071	1					
ANR	9483193	ExpressionStatement	p += count	218:16:7823:7833	9482071	3	True				
ANR	9483194	AssignmentExpression	p += count		9482071	0		+=			
ANR	9483195	Identifier	p		9482071	0					
ANR	9483196	Identifier	count		9482071	1					
ANR	9483197	ExpressionStatement	* ++ q = '~'	220:12:7861:7871	9482071	1	True				
ANR	9483198	AssignmentExpression	* ++ q = '~'		9482071	0		=			
ANR	9483199	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9483200	UnaryOperator	*		9482071	0					
ANR	9483201	UnaryExpression	++ q		9482071	1					
ANR	9483202	IncDec	++		9482071	0					
ANR	9483203	Identifier	q		9482071	1					
ANR	9483204	PrimaryExpression	'~'		9482071	1					
ANR	9483205	ExpressionStatement	* ++ q = '>'	221:12:7885:7895	9482071	2	True				
ANR	9483206	AssignmentExpression	* ++ q = '>'		9482071	0		=			
ANR	9483207	UnaryOperationExpression	* ++ q		9482071	0					
ANR	9483208	UnaryOperator	*		9482071	0					
ANR	9483209	UnaryExpression	++ q		9482071	1					
ANR	9483210	IncDec	++		9482071	0					
ANR	9483211	Identifier	q		9482071	1					
ANR	9483212	PrimaryExpression	'>'		9482071	1					
ANR	9483213	ExpressionStatement	"if_debug3m ( 'w' , ss -> memory , ""[w85]final ss->count = %d, %d bytes read, %d written\\n"" , ss -> count , ( int ) ( p - pr -> ptr ) , ( int ) ( q - pw -> ptr ) )"	224:4:7917:8068	9482071	19	True				
ANR	9483214	CallExpression	"if_debug3m ( 'w' , ss -> memory , ""[w85]final ss->count = %d, %d bytes read, %d written\\n"" , ss -> count , ( int ) ( p - pr -> ptr ) , ( int ) ( q - pw -> ptr ) )"		9482071	0					
ANR	9483215	Callee	if_debug3m		9482071	0					
ANR	9483216	Identifier	if_debug3m		9482071	0					
ANR	9483217	ArgumentList	'w'		9482071	1					
ANR	9483218	Argument	'w'		9482071	0					
ANR	9483219	PrimaryExpression	'w'		9482071	0					
ANR	9483220	Argument	ss -> memory		9482071	1					
ANR	9483221	PtrMemberAccess	ss -> memory		9482071	0					
ANR	9483222	Identifier	ss		9482071	0					
ANR	9483223	Identifier	memory		9482071	1					
ANR	9483224	Argument	"""[w85]final ss->count = %d, %d bytes read, %d written\\n"""		9482071	2					
ANR	9483225	PrimaryExpression	"""[w85]final ss->count = %d, %d bytes read, %d written\\n"""		9482071	0					
ANR	9483226	Argument	ss -> count		9482071	3					
ANR	9483227	PtrMemberAccess	ss -> count		9482071	0					
ANR	9483228	Identifier	ss		9482071	0					
ANR	9483229	Identifier	count		9482071	1					
ANR	9483230	Argument	( int ) ( p - pr -> ptr )		9482071	4					
ANR	9483231	CastExpression	( int ) ( p - pr -> ptr )		9482071	0					
ANR	9483232	CastTarget	int		9482071	0					
ANR	9483233	AdditiveExpression	p - pr -> ptr		9482071	1		-			
ANR	9483234	Identifier	p		9482071	0					
ANR	9483235	PtrMemberAccess	pr -> ptr		9482071	1					
ANR	9483236	Identifier	pr		9482071	0					
ANR	9483237	Identifier	ptr		9482071	1					
ANR	9483238	Argument	( int ) ( q - pw -> ptr )		9482071	5					
ANR	9483239	CastExpression	( int ) ( q - pw -> ptr )		9482071	0					
ANR	9483240	CastTarget	int		9482071	0					
ANR	9483241	AdditiveExpression	q - pw -> ptr		9482071	1		-			
ANR	9483242	Identifier	q		9482071	0					
ANR	9483243	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9483244	Identifier	pw		9482071	0					
ANR	9483245	Identifier	ptr		9482071	1					
ANR	9483246	ExpressionStatement	pr -> ptr = p	226:4:8074:8085	9482071	20	True				
ANR	9483247	AssignmentExpression	pr -> ptr = p		9482071	0		=			
ANR	9483248	PtrMemberAccess	pr -> ptr		9482071	0					
ANR	9483249	Identifier	pr		9482071	0					
ANR	9483250	Identifier	ptr		9482071	1					
ANR	9483251	Identifier	p		9482071	1					
ANR	9483252	IfStatement	if ( q > pw -> ptr )		9482071	21					
ANR	9483253	Condition	q > pw -> ptr	227:8:8095:8105	9482071	0	True				
ANR	9483254	RelationalExpression	q > pw -> ptr		9482071	0		>			
ANR	9483255	Identifier	q		9482071	0					
ANR	9483256	PtrMemberAccess	pw -> ptr		9482071	1					
ANR	9483257	Identifier	pw		9482071	0					
ANR	9483258	Identifier	ptr		9482071	1					
ANR	9483259	ExpressionStatement	ss -> last_char = * q	228:8:8116:8134	9482071	1	True				
ANR	9483260	AssignmentExpression	ss -> last_char = * q		9482071	0		=			
ANR	9483261	PtrMemberAccess	ss -> last_char		9482071	0					
ANR	9483262	Identifier	ss		9482071	0					
ANR	9483263	Identifier	last_char		9482071	1					
ANR	9483264	UnaryOperationExpression	* q		9482071	1					
ANR	9483265	UnaryOperator	*		9482071	0					
ANR	9483266	Identifier	q		9482071	1					
ANR	9483267	ExpressionStatement	pw -> ptr = q	229:4:8140:8151	9482071	22	True				
ANR	9483268	AssignmentExpression	pw -> ptr = q		9482071	0		=			
ANR	9483269	PtrMemberAccess	pw -> ptr		9482071	0					
ANR	9483270	Identifier	pw		9482071	0					
ANR	9483271	Identifier	ptr		9482071	1					
ANR	9483272	Identifier	q		9482071	1					
ANR	9483273	ReturnStatement	return status ;	230:4:8157:8170	9482071	23	True				
ANR	9483274	Identifier	status		9482071	0					
ANR	9483275	ReturnType	static int		9482071	1					
ANR	9483276	Identifier	s_A85E_process		9482071	2					
ANR	9483277	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9482071	3					
ANR	9483278	Parameter	stream_state * st	42:15:1110:1126	9482071	0	True				
ANR	9483279	ParameterType	stream_state *		9482071	0					
ANR	9483280	Identifier	st		9482071	1					
ANR	9483281	Parameter	stream_cursor_read * pr	42:34:1129:1151	9482071	1	True				
ANR	9483282	ParameterType	stream_cursor_read *		9482071	0					
ANR	9483283	Identifier	pr		9482071	1					
ANR	9483284	Parameter	stream_cursor_write * pw	43:15:1169:1192	9482071	2	True				
ANR	9483285	ParameterType	stream_cursor_write *		9482071	0					
ANR	9483286	Identifier	pw		9482071	1					
ANR	9483287	Parameter	bool last	43:41:1195:1203	9482071	3	True				
ANR	9483288	ParameterType	bool		9482071	0					
ANR	9483289	Identifier	last		9482071	1					
ANR	9483290	CFGEntryNode	ENTRY		9482071		True				
ANR	9483291	CFGExitNode	EXIT		9482071		True				
ANR	9483292	Symbol	ss -> count		9482071						
ANR	9483293	Symbol	pr		9482071						
ANR	9483294	Symbol	ss -> memory		9482071						
ANR	9483295	Symbol	* ss		9482071						
ANR	9483296	Symbol	pw		9482071						
ANR	9483297	Symbol	prev		9482071						
ANR	9483298	Symbol	pr -> limit		9482071						
ANR	9483299	Symbol	space		9482071						
ANR	9483300	Symbol	pw -> limit		9482071						
ANR	9483301	Symbol	divisor		9482071						
ANR	9483302	Symbol	wlimit		9482071						
ANR	9483303	Symbol	extra		9482071						
ANR	9483304	Symbol	pr -> ptr		9482071						
ANR	9483305	Symbol	qn		9482071						
ANR	9483306	Symbol	pw -> ptr		9482071						
ANR	9483307	Symbol	ss		9482071						
ANR	9483308	Symbol	st		9482071						
ANR	9483309	Symbol	rlimit		9482071						
ANR	9483310	Symbol	* buf		9482071						
ANR	9483311	Symbol	last		9482071						
ANR	9483312	Symbol	* ++ q		9482071						
ANR	9483313	Symbol	ss -> last_char		9482071						
ANR	9483314	Symbol	count		9482071						
ANR	9483315	Symbol	i		9482071						
ANR	9483316	Symbol	* pr		9482071						
ANR	9483317	Symbol	* pw		9482071						
ANR	9483318	Symbol	p		9482071						
ANR	9483319	Symbol	q		9482071						
ANR	9483320	Symbol	buf		9482071						
ANR	9483321	Symbol	* i		9482071						
ANR	9483322	Symbol	v		9482071						
ANR	9483323	Symbol	* ( q += 5 )		9482071						
ANR	9483324	Symbol	nchars		9482071						
ANR	9483325	Symbol	LINE_LIMIT		9482071						
ANR	9483326	Symbol	* p		9482071						
ANR	9483327	Symbol	* q		9482071						
ANR	9483328	Symbol	v1		9482071						
ANR	9483329	Symbol	v2		9482071						
ANR	9483330	Symbol	word		9482071						
ANR	9483331	Symbol	v3		9482071						
ANR	9483332	Symbol	v4		9482071						
ANR	9483333	Symbol	status		9482071						
ANR	9483334	DeclStmt									
ANR	9483335	Decl							const stream_template	const stream_template	s_A85E_template
ANR	9483336	Function	s_BT_process	244:0:8461:9000							
ANR	9483337	FunctionDef	"s_BT_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9483336	0					
ANR	9483338	CompoundStatement		247:0:8579:9000	9483336	0					
ANR	9483339	Statement	stream_BT_state	248:4:8585:8599	9483336	0	True				
ANR	9483340	Statement	*	248:20:8601:8601	9483336	1	True				
ANR	9483341	Statement	const	248:21:8602:8606	9483336	2	True				
ANR	9483342	ExpressionStatement	ss = ( stream_BT_state * ) st	248:27:8608:8635	9483336	3	True				
ANR	9483343	AssignmentExpression	ss = ( stream_BT_state * ) st		9483336	0		=			
ANR	9483344	Identifier	ss		9483336	0					
ANR	9483345	CastExpression	( stream_BT_state * ) st		9483336	1					
ANR	9483346	CastTarget	stream_BT_state *		9483336	0					
ANR	9483347	Identifier	st		9483336	1					
ANR	9483348	IdentifierDeclStatement	const byte * p = pr -> ptr ;	249:4:8641:8664	9483336	4	True				
ANR	9483349	IdentifierDecl	* p = pr -> ptr		9483336	0					
ANR	9483350	IdentifierDeclType	const byte *		9483336	0					
ANR	9483351	Identifier	p		9483336	1					
ANR	9483352	AssignmentExpression	* p = pr -> ptr		9483336	2		=			
ANR	9483353	Identifier	p		9483336	0					
ANR	9483354	PtrMemberAccess	pr -> ptr		9483336	1					
ANR	9483355	Identifier	pr		9483336	0					
ANR	9483356	Identifier	ptr		9483336	1					
ANR	9483357	IdentifierDeclStatement	byte * q = pw -> ptr ;	250:4:8670:8687	9483336	5	True				
ANR	9483358	IdentifierDecl	* q = pw -> ptr		9483336	0					
ANR	9483359	IdentifierDeclType	byte *		9483336	0					
ANR	9483360	Identifier	q		9483336	1					
ANR	9483361	AssignmentExpression	* q = pw -> ptr		9483336	2		=			
ANR	9483362	Identifier	q		9483336	0					
ANR	9483363	PtrMemberAccess	pw -> ptr		9483336	1					
ANR	9483364	Identifier	pw		9483336	0					
ANR	9483365	Identifier	ptr		9483336	1					
ANR	9483366	IdentifierDeclStatement	uint rcount = pr -> limit - p ;	251:4:8693:8720	9483336	6	True				
ANR	9483367	IdentifierDecl	rcount = pr -> limit - p		9483336	0					
ANR	9483368	IdentifierDeclType	uint		9483336	0					
ANR	9483369	Identifier	rcount		9483336	1					
ANR	9483370	AssignmentExpression	rcount = pr -> limit - p		9483336	2		=			
ANR	9483371	Identifier	rcount		9483336	0					
ANR	9483372	AdditiveExpression	pr -> limit - p		9483336	1		-			
ANR	9483373	PtrMemberAccess	pr -> limit		9483336	0					
ANR	9483374	Identifier	pr		9483336	0					
ANR	9483375	Identifier	limit		9483336	1					
ANR	9483376	Identifier	p		9483336	1					
ANR	9483377	IdentifierDeclStatement	uint wcount = pw -> limit - q ;	252:4:8726:8753	9483336	7	True				
ANR	9483378	IdentifierDecl	wcount = pw -> limit - q		9483336	0					
ANR	9483379	IdentifierDeclType	uint		9483336	0					
ANR	9483380	Identifier	wcount		9483336	1					
ANR	9483381	AssignmentExpression	wcount = pw -> limit - q		9483336	2		=			
ANR	9483382	Identifier	wcount		9483336	0					
ANR	9483383	AdditiveExpression	pw -> limit - q		9483336	1		-			
ANR	9483384	PtrMemberAccess	pw -> limit		9483336	0					
ANR	9483385	Identifier	pw		9483336	0					
ANR	9483386	Identifier	limit		9483336	1					
ANR	9483387	Identifier	q		9483336	1					
ANR	9483388	IdentifierDeclStatement	uint count ;	253:4:8759:8769	9483336	8	True				
ANR	9483389	IdentifierDecl	count		9483336	0					
ANR	9483390	IdentifierDeclType	uint		9483336	0					
ANR	9483391	Identifier	count		9483336	1					
ANR	9483392	IdentifierDeclStatement	int status ;	254:4:8775:8785	9483336	9	True				
ANR	9483393	IdentifierDecl	status		9483336	0					
ANR	9483394	IdentifierDeclType	int		9483336	0					
ANR	9483395	Identifier	status		9483336	1					
ANR	9483396	IfStatement	if ( rcount <= wcount )		9483336	10					
ANR	9483397	Condition	rcount <= wcount	256:8:8796:8811	9483336	0	True				
ANR	9483398	RelationalExpression	rcount <= wcount		9483336	0		<=			
ANR	9483399	Identifier	rcount		9483336	0					
ANR	9483400	Identifier	wcount		9483336	1					
ANR	9483401	ExpressionStatement	"count = rcount , status = 0"	257:8:8822:8848	9483336	1	True				
ANR	9483402	Expression	"count = rcount , status = 0"		9483336	0					
ANR	9483403	AssignmentExpression	count = rcount		9483336	0		=			
ANR	9483404	Identifier	count		9483336	0					
ANR	9483405	Identifier	rcount		9483336	1					
ANR	9483406	AssignmentExpression	status = 0		9483336	1		=			
ANR	9483407	Identifier	status		9483336	0					
ANR	9483408	PrimaryExpression	0		9483336	1					
ANR	9483409	ElseStatement	else		9483336	0					
ANR	9483410	ExpressionStatement	"count = wcount , status = 1"	259:8:8867:8893	9483336	0	True				
ANR	9483411	Expression	"count = wcount , status = 1"		9483336	0					
ANR	9483412	AssignmentExpression	count = wcount		9483336	0		=			
ANR	9483413	Identifier	count		9483336	0					
ANR	9483414	Identifier	wcount		9483336	1					
ANR	9483415	AssignmentExpression	status = 1		9483336	1		=			
ANR	9483416	Identifier	status		9483336	0					
ANR	9483417	PrimaryExpression	1		9483336	1					
ANR	9483418	WhileStatement	while ( count -- )		9483336	11					
ANR	9483419	Condition	count --	260:11:8906:8912	9483336	0	True				
ANR	9483420	PostIncDecOperationExpression	count --		9483336	0					
ANR	9483421	Identifier	count		9483336	0					
ANR	9483422	IncDec	--		9483336	1					
ANR	9483423	ExpressionStatement	* ++ q = ss -> table [ * ++ p ]	261:8:8923:8945	9483336	1	True				
ANR	9483424	AssignmentExpression	* ++ q = ss -> table [ * ++ p ]		9483336	0		=			
ANR	9483425	UnaryOperationExpression	* ++ q		9483336	0					
ANR	9483426	UnaryOperator	*		9483336	0					
ANR	9483427	UnaryExpression	++ q		9483336	1					
ANR	9483428	IncDec	++		9483336	0					
ANR	9483429	Identifier	q		9483336	1					
ANR	9483430	ArrayIndexing	ss -> table [ * ++ p ]		9483336	1					
ANR	9483431	PtrMemberAccess	ss -> table		9483336	0					
ANR	9483432	Identifier	ss		9483336	0					
ANR	9483433	Identifier	table		9483336	1					
ANR	9483434	UnaryOperationExpression	* ++ p		9483336	1					
ANR	9483435	UnaryOperator	*		9483336	0					
ANR	9483436	UnaryExpression	++ p		9483336	1					
ANR	9483437	IncDec	++		9483336	0					
ANR	9483438	Identifier	p		9483336	1					
ANR	9483439	ExpressionStatement	pr -> ptr = p	262:4:8951:8962	9483336	12	True				
ANR	9483440	AssignmentExpression	pr -> ptr = p		9483336	0		=			
ANR	9483441	PtrMemberAccess	pr -> ptr		9483336	0					
ANR	9483442	Identifier	pr		9483336	0					
ANR	9483443	Identifier	ptr		9483336	1					
ANR	9483444	Identifier	p		9483336	1					
ANR	9483445	ExpressionStatement	pw -> ptr = q	263:4:8968:8979	9483336	13	True				
ANR	9483446	AssignmentExpression	pw -> ptr = q		9483336	0		=			
ANR	9483447	PtrMemberAccess	pw -> ptr		9483336	0					
ANR	9483448	Identifier	pw		9483336	0					
ANR	9483449	Identifier	ptr		9483336	1					
ANR	9483450	Identifier	q		9483336	1					
ANR	9483451	ReturnStatement	return status ;	264:4:8985:8998	9483336	14	True				
ANR	9483452	Identifier	status		9483336	0					
ANR	9483453	ReturnType	static int		9483336	1					
ANR	9483454	Identifier	s_BT_process		9483336	2					
ANR	9483455	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9483336	3					
ANR	9483456	Parameter	stream_state * st	245:13:8485:8501	9483336	0	True				
ANR	9483457	ParameterType	stream_state *		9483336	0					
ANR	9483458	Identifier	st		9483336	1					
ANR	9483459	Parameter	stream_cursor_read * pr	245:32:8504:8526	9483336	1	True				
ANR	9483460	ParameterType	stream_cursor_read *		9483336	0					
ANR	9483461	Identifier	pr		9483336	1					
ANR	9483462	Parameter	stream_cursor_write * pw	246:13:8542:8565	9483336	2	True				
ANR	9483463	ParameterType	stream_cursor_write *		9483336	0					
ANR	9483464	Identifier	pw		9483336	1					
ANR	9483465	Parameter	bool last	246:39:8568:8576	9483336	3	True				
ANR	9483466	ParameterType	bool		9483336	0					
ANR	9483467	Identifier	last		9483336	1					
ANR	9483468	CFGEntryNode	ENTRY		9483336		True				
ANR	9483469	CFGExitNode	EXIT		9483336		True				
ANR	9483470	Symbol	wcount		9483336						
ANR	9483471	Symbol	pr		9483336						
ANR	9483472	Symbol	* ss		9483336						
ANR	9483473	Symbol	pw		9483336						
ANR	9483474	Symbol	pr -> limit		9483336						
ANR	9483475	Symbol	* * ss		9483336						
ANR	9483476	Symbol	pw -> limit		9483336						
ANR	9483477	Symbol	ss -> table		9483336						
ANR	9483478	Symbol	* ss -> table		9483336						
ANR	9483479	Symbol	* * p		9483336						
ANR	9483480	Symbol	pr -> ptr		9483336						
ANR	9483481	Symbol	pw -> ptr		9483336						
ANR	9483482	Symbol	ss		9483336						
ANR	9483483	Symbol	st		9483336						
ANR	9483484	Symbol	last		9483336						
ANR	9483485	Symbol	* ++ p		9483336						
ANR	9483486	Symbol	* ++ q		9483336						
ANR	9483487	Symbol	* * ++ p		9483336						
ANR	9483488	Symbol	count		9483336						
ANR	9483489	Symbol	* pr		9483336						
ANR	9483490	Symbol	* pw		9483336						
ANR	9483491	Symbol	p		9483336						
ANR	9483492	Symbol	q		9483336						
ANR	9483493	Symbol	rcount		9483336						
ANR	9483494	Symbol	* p		9483336						
ANR	9483495	Symbol	* q		9483336						
ANR	9483496	Symbol	status		9483336						
ANR	9483497	DeclStmt									
ANR	9483498	Decl							const stream_template	const stream_template	s_BTE_template
ANR	9483499	DeclStmt									
ANR	9483500	Decl							const stream_template	const stream_template	s_BTD_template
