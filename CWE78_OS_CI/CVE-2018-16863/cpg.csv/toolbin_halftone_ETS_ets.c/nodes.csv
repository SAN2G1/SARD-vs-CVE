command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10483940	File	data/converged/CVE-2018-16863_ghostpdl/toolbin_halftone_ETS_ets.c								
ANR	10483941	DeclStmt									
ANR	10483942	Decl							struct _ETS_PlaneCtx	struct _ETS_PlaneCtx	ETS_PlaneCtx
ANR	10483943	DeclStmt									
ANR	10483944	Decl							unsigned int	unsigned int	uint32
ANR	10483945	ClassDef	_ETS_Ctx	31:0:690:1165							
ANR	10483946	DeclStmt									
ANR	10483947	Decl							int	int	width
ANR	10483948	DeclStmt									
ANR	10483949	Decl							int	int	n_planes
ANR	10483950	DeclStmt									
ANR	10483951	Decl							int	int	levels
ANR	10483952	DeclStmt									
ANR	10483953	Decl							ETS_PlaneCtx	ETS_PlaneCtx * *	plane_ctx
ANR	10483954	DeclStmt									
ANR	10483955	Decl							int	int	aspect_x
ANR	10483956	DeclStmt									
ANR	10483957	Decl							int	int	aspect_y
ANR	10483958	DeclStmt									
ANR	10483959	Decl							int	int *	strengths
ANR	10483960	DeclStmt									
ANR	10483961	Decl							int	int	elo
ANR	10483962	DeclStmt									
ANR	10483963	Decl							int	int	ehi
ANR	10483964	DeclStmt									
ANR	10483965	Decl							int	int *	c_line
ANR	10483966	DeclStmt									
ANR	10483967	Decl							int	int	ets_style
ANR	10483968	DeclStmt									
ANR	10483969	Decl							int	int	r_style
ANR	10483970	DeclStmt									
ANR	10483971	Decl							uint32	uint32	seed1
ANR	10483972	DeclStmt									
ANR	10483973	Decl							uint32	uint32	seed2
ANR	10483974	DeclStmt									
ANR	10483975	Decl							FILE	FILE *	dump_file
ANR	10483976	DeclStmt									
ANR	10483977	Decl							ETS_DumpLevel	ETS_DumpLevel	dump_level
ANR	10483978	DeclStmt									
ANR	10483979	Decl							int	int	y
ANR	10483980	DeclStmt									
ANR	10483981	Decl							int	int	tmwid
ANR	10483982	DeclStmt									
ANR	10483983	Decl							int	int	tmheight
ANR	10483984	DeclStmt									
ANR	10483985	Decl							const signed char	const signed char *	tmmat
ANR	10483986	ClassDef	_ETS_PlaneCtx	59:0:1169:2330							
ANR	10483987	DeclStmt									
ANR	10483988	Decl							int	int	width
ANR	10483989	DeclStmt									
ANR	10483990	Decl							int	int *	dst_line
ANR	10483991	DeclStmt									
ANR	10483992	Decl							int	int *	err_line
ANR	10483993	DeclStmt									
ANR	10483994	Decl							int	int *	r_line
ANR	10483995	DeclStmt									
ANR	10483996	Decl							int	int *	a_line
ANR	10483997	DeclStmt									
ANR	10483998	Decl							int	int *	b_line
ANR	10483999	DeclStmt									
ANR	10484000	Decl							int	int *	lut
ANR	10484001	DeclStmt									
ANR	10484002	Decl							int	int *	dist_lut
ANR	10484003	DeclStmt									
ANR	10484004	Decl							char	char *	rs_lut
ANR	10484005	DeclStmt									
ANR	10484006	Decl							int	int	c1
ANR	10484007	DeclStmt									
ANR	10484008	Decl							int	int	tm_offset
ANR	10484009	Function	ets_malloc_aligned	79:0:2334:2635							
ANR	10484010	FunctionDef	"ets_malloc_aligned (int size , int align)"		10484009	0					
ANR	10484011	CompoundStatement		81:0:2381:2635	10484009	0					
ANR	10484012	IdentifierDeclStatement	void * result ;	82:4:2387:2399	10484009	0	True				
ANR	10484013	IdentifierDecl	* result		10484009	0					
ANR	10484014	IdentifierDeclType	void *		10484009	0					
ANR	10484015	Identifier	result		10484009	1					
ANR	10484016	IdentifierDeclStatement	void * alloced = malloc ( size + align ) ;	83:4:2405:2441	10484009	1	True				
ANR	10484017	IdentifierDecl	* alloced = malloc ( size + align )		10484009	0					
ANR	10484018	IdentifierDeclType	void *		10484009	0					
ANR	10484019	Identifier	alloced		10484009	1					
ANR	10484020	AssignmentExpression	* alloced = malloc ( size + align )		10484009	2		=			
ANR	10484021	Identifier	alloced		10484009	0					
ANR	10484022	CallExpression	malloc ( size + align )		10484009	1					
ANR	10484023	Callee	malloc		10484009	0					
ANR	10484024	Identifier	malloc		10484009	0					
ANR	10484025	ArgumentList	size + align		10484009	1					
ANR	10484026	Argument	size + align		10484009	0					
ANR	10484027	AdditiveExpression	size + align		10484009	0		+			
ANR	10484028	Identifier	size		10484009	0					
ANR	10484029	Identifier	align		10484009	1					
ANR	10484030	IdentifierDeclStatement	int pad ;	84:4:2447:2454	10484009	2	True				
ANR	10484031	IdentifierDecl	pad		10484009	0					
ANR	10484032	IdentifierDeclType	int		10484009	0					
ANR	10484033	Identifier	pad		10484009	1					
ANR	10484034	IfStatement	if ( alloced == 0 )		10484009	3					
ANR	10484035	Condition	alloced == 0	86:8:2465:2476	10484009	0	True				
ANR	10484036	EqualityExpression	alloced == 0		10484009	0		==			
ANR	10484037	Identifier	alloced		10484009	0					
ANR	10484038	PrimaryExpression	0		10484009	1					
ANR	10484039	ReturnStatement	return 0 ;	87:8:2487:2495	10484009	1	True				
ANR	10484040	PrimaryExpression	0		10484009	0					
ANR	10484041	ExpressionStatement	pad = ( ( 12 - ( int ) alloced ) & 15 ) + 4	88:4:2501:2537	10484009	4	True				
ANR	10484042	AssignmentExpression	pad = ( ( 12 - ( int ) alloced ) & 15 ) + 4		10484009	0		=			
ANR	10484043	Identifier	pad		10484009	0					
ANR	10484044	AdditiveExpression	( ( 12 - ( int ) alloced ) & 15 ) + 4		10484009	1		+			
ANR	10484045	BitAndExpression	( 12 - ( int ) alloced ) & 15		10484009	0		&			
ANR	10484046	AdditiveExpression	12 - ( int ) alloced		10484009	0		-			
ANR	10484047	PrimaryExpression	12		10484009	0					
ANR	10484048	CastExpression	( int ) alloced		10484009	1					
ANR	10484049	CastTarget	int		10484009	0					
ANR	10484050	Identifier	alloced		10484009	1					
ANR	10484051	PrimaryExpression	15		10484009	1					
ANR	10484052	PrimaryExpression	4		10484009	1					
ANR	10484053	ExpressionStatement	result = ( void * ) ( pad + ( char * ) alloced )	89:4:2543:2583	10484009	5	True				
ANR	10484054	AssignmentExpression	result = ( void * ) ( pad + ( char * ) alloced )		10484009	0		=			
ANR	10484055	Identifier	result		10484009	0					
ANR	10484056	CastExpression	( void * ) ( pad + ( char * ) alloced )		10484009	1					
ANR	10484057	CastTarget	void *		10484009	0					
ANR	10484058	AdditiveExpression	pad + ( char * ) alloced		10484009	1		+			
ANR	10484059	Identifier	pad		10484009	0					
ANR	10484060	CastExpression	( char * ) alloced		10484009	1					
ANR	10484061	CastTarget	char *		10484009	0					
ANR	10484062	Identifier	alloced		10484009	1					
ANR	10484063	ExpressionStatement	( ( int * ) result ) [ - 1 ] = pad	90:4:2589:2614	10484009	6	True				
ANR	10484064	AssignmentExpression	( ( int * ) result ) [ - 1 ] = pad		10484009	0		=			
ANR	10484065	ArrayIndexing	( ( int * ) result ) [ - 1 ]		10484009	0					
ANR	10484066	CastExpression	( int * ) result		10484009	0					
ANR	10484067	CastTarget	int *		10484009	0					
ANR	10484068	Identifier	result		10484009	1					
ANR	10484069	UnaryOperationExpression	- 1		10484009	1					
ANR	10484070	UnaryOperator	-		10484009	0					
ANR	10484071	PrimaryExpression	1		10484009	1					
ANR	10484072	Identifier	pad		10484009	1					
ANR	10484073	ReturnStatement	return result ;	91:4:2620:2633	10484009	7	True				
ANR	10484074	Identifier	result		10484009	0					
ANR	10484075	ReturnType	void *		10484009	1					
ANR	10484076	Identifier	ets_malloc_aligned		10484009	2					
ANR	10484077	ParameterList	"int size , int align"		10484009	3					
ANR	10484078	Parameter	int size	80:19:2360:2367	10484009	0	True				
ANR	10484079	ParameterType	int		10484009	0					
ANR	10484080	Identifier	size		10484009	1					
ANR	10484081	Parameter	int align	80:29:2370:2378	10484009	1	True				
ANR	10484082	ParameterType	int		10484009	0					
ANR	10484083	Identifier	align		10484009	1					
ANR	10484084	CFGEntryNode	ENTRY		10484009		True				
ANR	10484085	CFGExitNode	EXIT		10484009		True				
ANR	10484086	Symbol	result		10484009						
ANR	10484087	Symbol	malloc		10484009						
ANR	10484088	Symbol	pad		10484009						
ANR	10484089	Symbol	size		10484009						
ANR	10484090	Symbol	* result		10484009						
ANR	10484091	Symbol	alloced		10484009						
ANR	10484092	Symbol	align		10484009						
ANR	10484093	Function	ets_free_aligned	94:0:2638:2727							
ANR	10484094	FunctionDef	ets_free_aligned (void * p)		10484093	0					
ANR	10484095	CompoundStatement		96:0:2669:2727	10484093	0					
ANR	10484096	IdentifierDeclStatement	int pad = ( ( int * ) p ) [ - 1 ] ;	97:4:2675:2699	10484093	0	True				
ANR	10484097	IdentifierDecl	pad = ( ( int * ) p ) [ - 1 ]		10484093	0					
ANR	10484098	IdentifierDeclType	int		10484093	0					
ANR	10484099	Identifier	pad		10484093	1					
ANR	10484100	AssignmentExpression	pad = ( ( int * ) p ) [ - 1 ]		10484093	2		=			
ANR	10484101	Identifier	pad		10484093	0					
ANR	10484102	ArrayIndexing	( ( int * ) p ) [ - 1 ]		10484093	1					
ANR	10484103	CastExpression	( int * ) p		10484093	0					
ANR	10484104	CastTarget	int *		10484093	0					
ANR	10484105	Identifier	p		10484093	1					
ANR	10484106	UnaryOperationExpression	- 1		10484093	1					
ANR	10484107	UnaryOperator	-		10484093	0					
ANR	10484108	PrimaryExpression	1		10484093	1					
ANR	10484109	ExpressionStatement	free ( ( char * ) p - pad )	98:4:2705:2725	10484093	1	True				
ANR	10484110	CallExpression	free ( ( char * ) p - pad )		10484093	0					
ANR	10484111	Callee	free		10484093	0					
ANR	10484112	Identifier	free		10484093	0					
ANR	10484113	ArgumentList	( char * ) p - pad		10484093	1					
ANR	10484114	Argument	( char * ) p - pad		10484093	0					
ANR	10484115	AdditiveExpression	( char * ) p - pad		10484093	0		-			
ANR	10484116	CastExpression	( char * ) p		10484093	0					
ANR	10484117	CastTarget	char *		10484093	0					
ANR	10484118	Identifier	p		10484093	1					
ANR	10484119	Identifier	pad		10484093	1					
ANR	10484120	ReturnType	void		10484093	1					
ANR	10484121	Identifier	ets_free_aligned		10484093	2					
ANR	10484122	ParameterList	void * p		10484093	3					
ANR	10484123	Parameter	void * p	95:17:2660:2666	10484093	0	True				
ANR	10484124	ParameterType	void *		10484093	0					
ANR	10484125	Identifier	p		10484093	1					
ANR	10484126	CFGEntryNode	ENTRY		10484093		True				
ANR	10484127	CFGExitNode	EXIT		10484093		True				
ANR	10484128	Symbol	p		10484093						
ANR	10484129	Symbol	pad		10484093						
ANR	10484130	Symbol	* p		10484093						
ANR	10484131	Function	compute_distscale	101:0:2730:4696							
ANR	10484132	FunctionDef	compute_distscale (const ETS_Params * params)		10484131	0					
ANR	10484133	CompoundStatement		103:0:2788:4696	10484131	0					
ANR	10484134	IdentifierDeclStatement	double distscale = params -> distscale ;	104:4:2794:2830	10484131	0	True				
ANR	10484135	IdentifierDecl	distscale = params -> distscale		10484131	0					
ANR	10484136	IdentifierDeclType	double		10484131	0					
ANR	10484137	Identifier	distscale		10484131	1					
ANR	10484138	AssignmentExpression	distscale = params -> distscale		10484131	2		=			
ANR	10484139	Identifier	distscale		10484131	0					
ANR	10484140	PtrMemberAccess	params -> distscale		10484131	1					
ANR	10484141	Identifier	params		10484131	0					
ANR	10484142	Identifier	distscale		10484131	1					
ANR	10484143	IfStatement	if ( distscale == 0.0 )		10484131	1					
ANR	10484144	Condition	distscale == 0.0	106:8:2841:2856	10484131	0	True				
ANR	10484145	EqualityExpression	distscale == 0.0		10484131	0		==			
ANR	10484146	Identifier	distscale		10484131	0					
ANR	10484147	PrimaryExpression	0.0		10484131	1					
ANR	10484148	CompoundStatement		5:4:74:74	10484131	1					
ANR	10484149	ExpressionStatement	distscale = - 1	108:8:2873:2887	10484131	0	True				
ANR	10484150	AssignmentExpression	distscale = - 1		10484131	0		=			
ANR	10484151	Identifier	distscale		10484131	0					
ANR	10484152	UnaryOperationExpression	- 1		10484131	1					
ANR	10484153	UnaryOperator	-		10484131	0					
ANR	10484154	PrimaryExpression	1		10484131	1					
ANR	10484155	SwitchStatement	switch ( params -> aspect_x )		10484131	1					
ANR	10484156	Condition	params -> aspect_x	109:15:2904:2919	10484131	0	True				
ANR	10484157	PtrMemberAccess	params -> aspect_x		10484131	0					
ANR	10484158	Identifier	params		10484131	0					
ANR	10484159	Identifier	aspect_x		10484131	1					
ANR	10484160	CompoundStatement		8:8:141:141	10484131	1					
ANR	10484161	Label	case 1 :	111:8:2940:2946	10484131	0	True				
ANR	10484162	SwitchStatement	switch ( params -> aspect_y )		10484131	1					
ANR	10484163	Condition	params -> aspect_y	112:19:2967:2982	10484131	0	True				
ANR	10484164	PtrMemberAccess	params -> aspect_y		10484131	0					
ANR	10484165	Identifier	params		10484131	0					
ANR	10484166	Identifier	aspect_y		10484131	1					
ANR	10484167	CompoundStatement		11:12:208:208	10484131	1					
ANR	10484168	Label	case 1 :	114:12:3011:3017	10484131	0	True				
ANR	10484169	ExpressionStatement	distscale = 0.95	115:16:3035:3051	10484131	1	True				
ANR	10484170	AssignmentExpression	distscale = 0.95		10484131	0		=			
ANR	10484171	Identifier	distscale		10484131	0					
ANR	10484172	PrimaryExpression	0.95		10484131	1					
ANR	10484173	BreakStatement	break ;	116:16:3069:3074	10484131	2	True				
ANR	10484174	Label	case 2 :	117:12:3088:3094	10484131	3	True				
ANR	10484175	ExpressionStatement	distscale = 1.8	118:16:3112:3127	10484131	4	True				
ANR	10484176	AssignmentExpression	distscale = 1.8		10484131	0		=			
ANR	10484177	Identifier	distscale		10484131	0					
ANR	10484178	PrimaryExpression	1.8		10484131	1					
ANR	10484179	BreakStatement	break ;	119:16:3145:3150	10484131	5	True				
ANR	10484180	Label	case 3 :	120:12:3164:3170	10484131	6	True				
ANR	10484181	ExpressionStatement	distscale = 2.4	121:16:3188:3203	10484131	7	True				
ANR	10484182	AssignmentExpression	distscale = 2.4		10484131	0		=			
ANR	10484183	Identifier	distscale		10484131	0					
ANR	10484184	PrimaryExpression	2.4		10484131	1					
ANR	10484185	BreakStatement	break ;	122:16:3233:3238	10484131	8	True				
ANR	10484186	Label	case 4 :	123:12:3252:3258	10484131	9	True				
ANR	10484187	ExpressionStatement	distscale = 3.6	124:16:3276:3291	10484131	10	True				
ANR	10484188	AssignmentExpression	distscale = 3.6		10484131	0		=			
ANR	10484189	Identifier	distscale		10484131	0					
ANR	10484190	PrimaryExpression	3.6		10484131	1					
ANR	10484191	BreakStatement	break ;	125:16:3309:3314	10484131	11	True				
ANR	10484192	BreakStatement	break ;	127:12:3342:3347	10484131	2	True				
ANR	10484193	Label	case 2 :	128:8:3357:3363	10484131	3	True				
ANR	10484194	SwitchStatement	switch ( params -> aspect_y )		10484131	4					
ANR	10484195	Condition	params -> aspect_y	129:19:3384:3399	10484131	0	True				
ANR	10484196	PtrMemberAccess	params -> aspect_y		10484131	0					
ANR	10484197	Identifier	params		10484131	0					
ANR	10484198	Identifier	aspect_y		10484131	1					
ANR	10484199	CompoundStatement		28:12:625:625	10484131	1					
ANR	10484200	Label	case 1 :	131:12:3428:3434	10484131	0	True				
ANR	10484201	ExpressionStatement	distscale = 1.8	132:16:3452:3467	10484131	1	True				
ANR	10484202	AssignmentExpression	distscale = 1.8		10484131	0		=			
ANR	10484203	Identifier	distscale		10484131	0					
ANR	10484204	PrimaryExpression	1.8		10484131	1					
ANR	10484205	BreakStatement	break ;	133:16:3485:3490	10484131	2	True				
ANR	10484206	Label	case 2 :	134:12:3504:3510	10484131	3	True				
ANR	10484207	BreakStatement	break ;	135:16:3528:3533	10484131	4	True				
ANR	10484208	Label	case 3 :	136:12:3547:3553	10484131	5	True				
ANR	10484209	ExpressionStatement	distscale = 1.35	137:16:3571:3587	10484131	6	True				
ANR	10484210	AssignmentExpression	distscale = 1.35		10484131	0		=			
ANR	10484211	Identifier	distscale		10484131	0					
ANR	10484212	PrimaryExpression	1.35		10484131	1					
ANR	10484213	BreakStatement	break ;	138:16:3617:3622	10484131	7	True				
ANR	10484214	Label	case 4 :	139:12:3636:3642	10484131	8	True				
ANR	10484215	BreakStatement	break ;	140:16:3660:3665	10484131	9	True				
ANR	10484216	BreakStatement	break ;	142:12:3693:3698	10484131	5	True				
ANR	10484217	Label	case 3 :	143:8:3708:3714	10484131	6	True				
ANR	10484218	SwitchStatement	switch ( params -> aspect_y )		10484131	7					
ANR	10484219	Condition	params -> aspect_y	144:19:3735:3750	10484131	0	True				
ANR	10484220	PtrMemberAccess	params -> aspect_y		10484131	0					
ANR	10484221	Identifier	params		10484131	0					
ANR	10484222	Identifier	aspect_y		10484131	1					
ANR	10484223	CompoundStatement		43:12:976:976	10484131	1					
ANR	10484224	Label	case 1 :	146:12:3779:3785	10484131	0	True				
ANR	10484225	ExpressionStatement	distscale = 2.4	147:16:3803:3818	10484131	1	True				
ANR	10484226	AssignmentExpression	distscale = 2.4		10484131	0		=			
ANR	10484227	Identifier	distscale		10484131	0					
ANR	10484228	PrimaryExpression	2.4		10484131	1					
ANR	10484229	BreakStatement	break ;	148:16:3848:3853	10484131	2	True				
ANR	10484230	Label	case 2 :	149:12:3867:3873	10484131	3	True				
ANR	10484231	ExpressionStatement	distscale = 1.35	150:16:3891:3907	10484131	4	True				
ANR	10484232	AssignmentExpression	distscale = 1.35		10484131	0		=			
ANR	10484233	Identifier	distscale		10484131	0					
ANR	10484234	PrimaryExpression	1.35		10484131	1					
ANR	10484235	BreakStatement	break ;	151:16:3937:3942	10484131	5	True				
ANR	10484236	Label	case 3 :	152:12:3956:3962	10484131	6	True				
ANR	10484237	BreakStatement	break ;	153:16:3980:3985	10484131	7	True				
ANR	10484238	Label	case 4 :	154:12:3999:4005	10484131	8	True				
ANR	10484239	ExpressionStatement	distscale = 0.675	155:16:4023:4040	10484131	9	True				
ANR	10484240	AssignmentExpression	distscale = 0.675		10484131	0		=			
ANR	10484241	Identifier	distscale		10484131	0					
ANR	10484242	PrimaryExpression	0.675		10484131	1					
ANR	10484243	BreakStatement	break ;	156:16:4070:4075	10484131	10	True				
ANR	10484244	BreakStatement	break ;	158:12:4103:4108	10484131	8	True				
ANR	10484245	Label	case 4 :	159:8:4118:4124	10484131	9	True				
ANR	10484246	SwitchStatement	switch ( params -> aspect_y )		10484131	10					
ANR	10484247	Condition	params -> aspect_y	160:19:4145:4160	10484131	0	True				
ANR	10484248	PtrMemberAccess	params -> aspect_y		10484131	0					
ANR	10484249	Identifier	params		10484131	0					
ANR	10484250	Identifier	aspect_y		10484131	1					
ANR	10484251	CompoundStatement		59:12:1386:1386	10484131	1					
ANR	10484252	Label	case 1 :	162:12:4189:4195	10484131	0	True				
ANR	10484253	ExpressionStatement	distscale = 3.6	163:16:4213:4228	10484131	1	True				
ANR	10484254	AssignmentExpression	distscale = 3.6		10484131	0		=			
ANR	10484255	Identifier	distscale		10484131	0					
ANR	10484256	PrimaryExpression	3.6		10484131	1					
ANR	10484257	BreakStatement	break ;	164:16:4246:4251	10484131	2	True				
ANR	10484258	Label	case 2 :	165:12:4265:4271	10484131	3	True				
ANR	10484259	BreakStatement	break ;	166:16:4289:4294	10484131	4	True				
ANR	10484260	Label	case 3 :	167:12:4308:4314	10484131	5	True				
ANR	10484261	ExpressionStatement	distscale = 0.675	168:16:4332:4349	10484131	6	True				
ANR	10484262	AssignmentExpression	distscale = 0.675		10484131	0		=			
ANR	10484263	Identifier	distscale		10484131	0					
ANR	10484264	PrimaryExpression	0.675		10484131	1					
ANR	10484265	BreakStatement	break ;	169:16:4379:4384	10484131	7	True				
ANR	10484266	Label	case 4 :	170:12:4398:4404	10484131	8	True				
ANR	10484267	BreakStatement	break ;	171:16:4422:4427	10484131	9	True				
ANR	10484268	BreakStatement	break ;	173:12:4455:4460	10484131	11	True				
ANR	10484269	IfStatement	if ( distscale == - 1 )		10484131	2					
ANR	10484270	Condition	distscale == - 1	175:12:4484:4498	10484131	0	True				
ANR	10484271	EqualityExpression	distscale == - 1		10484131	0		==			
ANR	10484272	Identifier	distscale		10484131	0					
ANR	10484273	UnaryOperationExpression	- 1		10484131	1					
ANR	10484274	UnaryOperator	-		10484131	0					
ANR	10484275	PrimaryExpression	1		10484131	1					
ANR	10484276	CompoundStatement		74:8:1720:1720	10484131	1					
ANR	10484277	ExpressionStatement	"fprintf ( stderr , ""aspect ratio of %d:%d not supported\\n"" , params -> aspect_x , params -> aspect_y )"	177:12:4523:4635	10484131	0	True				
ANR	10484278	CallExpression	"fprintf ( stderr , ""aspect ratio of %d:%d not supported\\n"" , params -> aspect_x , params -> aspect_y )"		10484131	0					
ANR	10484279	Callee	fprintf		10484131	0					
ANR	10484280	Identifier	fprintf		10484131	0					
ANR	10484281	ArgumentList	stderr		10484131	1					
ANR	10484282	Argument	stderr		10484131	0					
ANR	10484283	Identifier	stderr		10484131	0					
ANR	10484284	Argument	"""aspect ratio of %d:%d not supported\\n"""		10484131	1					
ANR	10484285	PrimaryExpression	"""aspect ratio of %d:%d not supported\\n"""		10484131	0					
ANR	10484286	Argument	params -> aspect_x		10484131	2					
ANR	10484287	PtrMemberAccess	params -> aspect_x		10484131	0					
ANR	10484288	Identifier	params		10484131	0					
ANR	10484289	Identifier	aspect_x		10484131	1					
ANR	10484290	Argument	params -> aspect_y		10484131	3					
ANR	10484291	PtrMemberAccess	params -> aspect_y		10484131	0					
ANR	10484292	Identifier	params		10484131	0					
ANR	10484293	Identifier	aspect_y		10484131	1					
ANR	10484294	ExpressionStatement	exit ( 1 )	179:12:4649:4656	10484131	1	True				
ANR	10484295	CallExpression	exit ( 1 )		10484131	0					
ANR	10484296	Callee	exit		10484131	0					
ANR	10484297	Identifier	exit		10484131	0					
ANR	10484298	ArgumentList	1		10484131	1					
ANR	10484299	Argument	1		10484131	0					
ANR	10484300	PrimaryExpression	1		10484131	0					
ANR	10484301	ReturnStatement	return distscale ;	182:4:4678:4694	10484131	2	True				
ANR	10484302	Identifier	distscale		10484131	0					
ANR	10484303	ReturnType	static double		10484131	1					
ANR	10484304	Identifier	compute_distscale		10484131	2					
ANR	10484305	ParameterList	const ETS_Params * params		10484131	3					
ANR	10484306	Parameter	const ETS_Params * params	102:18:2762:2785	10484131	0	True				
ANR	10484307	ParameterType	const ETS_Params *		10484131	0					
ANR	10484308	Identifier	params		10484131	1					
ANR	10484309	CFGEntryNode	ENTRY		10484131		True				
ANR	10484310	CFGExitNode	EXIT		10484131		True				
ANR	10484311	Symbol	params -> distscale		10484131						
ANR	10484312	Symbol	params -> aspect_y		10484131						
ANR	10484313	Symbol	params -> aspect_x		10484131						
ANR	10484314	Symbol	params		10484131						
ANR	10484315	Symbol	distscale		10484131						
ANR	10484316	Symbol	stderr		10484131						
ANR	10484317	Symbol	* params		10484131						
ANR	10484318	Function	ets_log2	185:0:4699:4817							
ANR	10484319	FunctionDef	ets_log2 (int x)		10484318	0					
ANR	10484320	CompoundStatement		187:0:4726:4817	10484318	0					
ANR	10484321	IdentifierDeclStatement	int y = 0 ;	188:4:4732:4741	10484318	0	True				
ANR	10484322	IdentifierDecl	y = 0		10484318	0					
ANR	10484323	IdentifierDeclType	int		10484318	0					
ANR	10484324	Identifier	y		10484318	1					
ANR	10484325	AssignmentExpression	y = 0		10484318	2		=			
ANR	10484326	Identifier	y		10484318	0					
ANR	10484327	PrimaryExpression	0		10484318	1					
ANR	10484328	IdentifierDeclStatement	int z ;	189:4:4747:4752	10484318	1	True				
ANR	10484329	IdentifierDecl	z		10484318	0					
ANR	10484330	IdentifierDeclType	int		10484318	0					
ANR	10484331	Identifier	z		10484318	1					
ANR	10484332	ForStatement	for ( z = x ; z > 1 ; z = z >> 1 )		10484318	2					
ANR	10484333	ForInit	z = x ;	191:9:4764:4769	10484318	0	True				
ANR	10484334	AssignmentExpression	z = x		10484318	0		=			
ANR	10484335	Identifier	z		10484318	0					
ANR	10484336	Identifier	x		10484318	1					
ANR	10484337	Condition	z > 1	191:16:4771:4775	10484318	1	True				
ANR	10484338	RelationalExpression	z > 1		10484318	0		>			
ANR	10484339	Identifier	z		10484318	0					
ANR	10484340	PrimaryExpression	1		10484318	1					
ANR	10484341	AssignmentExpression	z = z >> 1	191:23:4778:4787	10484318	2	True	=			
ANR	10484342	Identifier	z		10484318	0					
ANR	10484343	ShiftExpression	z >> 1		10484318	1		>>			
ANR	10484344	Identifier	z		10484318	0					
ANR	10484345	PrimaryExpression	1		10484318	1					
ANR	10484346	ExpressionStatement	y ++	192:8:4798:4801	10484318	3	True				
ANR	10484347	PostIncDecOperationExpression	y ++		10484318	0					
ANR	10484348	Identifier	y		10484318	0					
ANR	10484349	IncDec	++		10484318	1					
ANR	10484350	ReturnStatement	return y ;	193:4:4807:4815	10484318	3	True				
ANR	10484351	Identifier	y		10484318	0					
ANR	10484352	ReturnType	static int		10484318	1					
ANR	10484353	Identifier	ets_log2		10484318	2					
ANR	10484354	ParameterList	int x		10484318	3					
ANR	10484355	Parameter	int x	186:9:4719:4723	10484318	0	True				
ANR	10484356	ParameterType	int		10484318	0					
ANR	10484357	Identifier	x		10484318	1					
ANR	10484358	CFGEntryNode	ENTRY		10484318		True				
ANR	10484359	CFGExitNode	EXIT		10484318		True				
ANR	10484360	Symbol	x		10484318						
ANR	10484361	Symbol	y		10484318						
ANR	10484362	Symbol	z		10484318						
ANR	10484363	Function	ets_log2up	196:0:4820:4879							
ANR	10484364	FunctionDef	ets_log2up (int x)		10484363	0					
ANR	10484365	CompoundStatement		198:0:4849:4879	10484363	0					
ANR	10484366	ReturnStatement	return ets_log2 ( x - 1 ) + 1 ;	199:4:4855:4877	10484363	0	True				
ANR	10484367	AdditiveExpression	ets_log2 ( x - 1 ) + 1		10484363	0		+			
ANR	10484368	CallExpression	ets_log2 ( x - 1 )		10484363	0					
ANR	10484369	Callee	ets_log2		10484363	0					
ANR	10484370	Identifier	ets_log2		10484363	0					
ANR	10484371	ArgumentList	x - 1		10484363	1					
ANR	10484372	Argument	x - 1		10484363	0					
ANR	10484373	AdditiveExpression	x - 1		10484363	0		-			
ANR	10484374	Identifier	x		10484363	0					
ANR	10484375	PrimaryExpression	1		10484363	1					
ANR	10484376	PrimaryExpression	1		10484363	1					
ANR	10484377	ReturnType	static int		10484363	1					
ANR	10484378	Identifier	ets_log2up		10484363	2					
ANR	10484379	ParameterList	int x		10484363	3					
ANR	10484380	Parameter	int x	197:11:4842:4846	10484363	0	True				
ANR	10484381	ParameterType	int		10484363	0					
ANR	10484382	Identifier	x		10484363	1					
ANR	10484383	CFGEntryNode	ENTRY		10484363		True				
ANR	10484384	CFGExitNode	EXIT		10484363		True				
ANR	10484385	Symbol	x		10484363						
ANR	10484386	Symbol	ets_log2		10484363						
ANR	10484387	Function	compute_randshift	202:0:4882:6205							
ANR	10484388	FunctionDef	"compute_randshift (int nl , int rs_base , int levels)"		10484387	0					
ANR	10484389	CompoundStatement		204:0:4944:6205	10484387	0					
ANR	10484390	IdentifierDeclStatement	int rs = rs_base ;	205:4:4950:4966	10484387	0	True				
ANR	10484391	IdentifierDecl	rs = rs_base		10484387	0					
ANR	10484392	IdentifierDeclType	int		10484387	0					
ANR	10484393	Identifier	rs		10484387	1					
ANR	10484394	AssignmentExpression	rs = rs_base		10484387	2		=			
ANR	10484395	Identifier	rs_base		10484387	0					
ANR	10484396	Identifier	rs_base		10484387	1					
ANR	10484397	IfStatement	if ( ( nl > ( 90 << ( ETS_SHIFT - 10 ) ) && nl < ( 129 << ( ETS_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( ETS_SHIFT - 10 ) ) && nl < ( 180 << ( ETS_SHIFT - 10 ) ) ) )		10484387	1					
ANR	10484398	Condition	( nl > ( 90 << ( ETS_SHIFT - 10 ) ) && nl < ( 129 << ( ETS_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( ETS_SHIFT - 10 ) ) && nl < ( 180 << ( ETS_SHIFT - 10 ) ) )	207:8:4977:5137	10484387	0	True				
ANR	10484399	OrExpression	( nl > ( 90 << ( ETS_SHIFT - 10 ) ) && nl < ( 129 << ( ETS_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( ETS_SHIFT - 10 ) ) && nl < ( 180 << ( ETS_SHIFT - 10 ) ) )		10484387	0		||			
ANR	10484400	AndExpression	nl > ( 90 << ( ETS_SHIFT - 10 ) ) && nl < ( 129 << ( ETS_SHIFT - 10 ) )		10484387	0		&&			
ANR	10484401	RelationalExpression	nl > ( 90 << ( ETS_SHIFT - 10 ) )		10484387	0		>			
ANR	10484402	Identifier	nl		10484387	0					
ANR	10484403	ShiftExpression	90 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484404	PrimaryExpression	90		10484387	0					
ANR	10484405	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484406	Identifier	ETS_SHIFT		10484387	0					
ANR	10484407	PrimaryExpression	10		10484387	1					
ANR	10484408	RelationalExpression	nl < ( 129 << ( ETS_SHIFT - 10 ) )		10484387	1		<			
ANR	10484409	Identifier	nl		10484387	0					
ANR	10484410	ShiftExpression	129 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484411	PrimaryExpression	129		10484387	0					
ANR	10484412	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484413	Identifier	ETS_SHIFT		10484387	0					
ANR	10484414	PrimaryExpression	10		10484387	1					
ANR	10484415	AndExpression	nl > ( 162 << ( ETS_SHIFT - 10 ) ) && nl < ( 180 << ( ETS_SHIFT - 10 ) )		10484387	1		&&			
ANR	10484416	RelationalExpression	nl > ( 162 << ( ETS_SHIFT - 10 ) )		10484387	0		>			
ANR	10484417	Identifier	nl		10484387	0					
ANR	10484418	ShiftExpression	162 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484419	PrimaryExpression	162		10484387	0					
ANR	10484420	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484421	Identifier	ETS_SHIFT		10484387	0					
ANR	10484422	PrimaryExpression	10		10484387	1					
ANR	10484423	RelationalExpression	nl < ( 180 << ( ETS_SHIFT - 10 ) )		10484387	1		<			
ANR	10484424	Identifier	nl		10484387	0					
ANR	10484425	ShiftExpression	180 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484426	PrimaryExpression	180		10484387	0					
ANR	10484427	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484428	Identifier	ETS_SHIFT		10484387	0					
ANR	10484429	PrimaryExpression	10		10484387	1					
ANR	10484430	ExpressionStatement	rs --	211:8:5148:5152	10484387	1	True				
ANR	10484431	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484432	Identifier	rs		10484387	0					
ANR	10484433	IncDec	--		10484387	1					
ANR	10484434	ElseStatement	else		10484387	0					
ANR	10484435	IfStatement	if ( nl > ( 321 << ( ETS_SHIFT - 10 ) ) && nl < ( 361 << ( ETS_SHIFT - 10 ) ) )		10484387	0					
ANR	10484436	Condition	nl > ( 321 << ( ETS_SHIFT - 10 ) ) && nl < ( 361 << ( ETS_SHIFT - 10 ) )	212:13:5167:5243	10484387	0	True				
ANR	10484437	AndExpression	nl > ( 321 << ( ETS_SHIFT - 10 ) ) && nl < ( 361 << ( ETS_SHIFT - 10 ) )		10484387	0		&&			
ANR	10484438	RelationalExpression	nl > ( 321 << ( ETS_SHIFT - 10 ) )		10484387	0		>			
ANR	10484439	Identifier	nl		10484387	0					
ANR	10484440	ShiftExpression	321 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484441	PrimaryExpression	321		10484387	0					
ANR	10484442	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484443	Identifier	ETS_SHIFT		10484387	0					
ANR	10484444	PrimaryExpression	10		10484387	1					
ANR	10484445	RelationalExpression	nl < ( 361 << ( ETS_SHIFT - 10 ) )		10484387	1		<			
ANR	10484446	Identifier	nl		10484387	0					
ANR	10484447	ShiftExpression	361 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484448	PrimaryExpression	361		10484387	0					
ANR	10484449	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484450	Identifier	ETS_SHIFT		10484387	0					
ANR	10484451	PrimaryExpression	10		10484387	1					
ANR	10484452	CompoundStatement		11:4:305:305	10484387	1					
ANR	10484453	ExpressionStatement	rs --	215:8:5260:5264	10484387	0	True				
ANR	10484454	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484455	Identifier	rs		10484387	0					
ANR	10484456	IncDec	--		10484387	1					
ANR	10484457	IfStatement	if ( nl > ( 331 << ( ETS_SHIFT - 10 ) ) && nl < ( 351 << ( ETS_SHIFT - 10 ) ) )		10484387	1					
ANR	10484458	Condition	nl > ( 331 << ( ETS_SHIFT - 10 ) ) && nl < ( 351 << ( ETS_SHIFT - 10 ) )	216:12:5278:5353	10484387	0	True				
ANR	10484459	AndExpression	nl > ( 331 << ( ETS_SHIFT - 10 ) ) && nl < ( 351 << ( ETS_SHIFT - 10 ) )		10484387	0		&&			
ANR	10484460	RelationalExpression	nl > ( 331 << ( ETS_SHIFT - 10 ) )		10484387	0		>			
ANR	10484461	Identifier	nl		10484387	0					
ANR	10484462	ShiftExpression	331 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484463	PrimaryExpression	331		10484387	0					
ANR	10484464	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484465	Identifier	ETS_SHIFT		10484387	0					
ANR	10484466	PrimaryExpression	10		10484387	1					
ANR	10484467	RelationalExpression	nl < ( 351 << ( ETS_SHIFT - 10 ) )		10484387	1		<			
ANR	10484468	Identifier	nl		10484387	0					
ANR	10484469	ShiftExpression	351 << ( ETS_SHIFT - 10 )		10484387	1		<<			
ANR	10484470	PrimaryExpression	351		10484387	0					
ANR	10484471	AdditiveExpression	ETS_SHIFT - 10		10484387	1		-			
ANR	10484472	Identifier	ETS_SHIFT		10484387	0					
ANR	10484473	PrimaryExpression	10		10484387	1					
ANR	10484474	ExpressionStatement	rs --	218:12:5368:5372	10484387	1	True				
ANR	10484475	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484476	Identifier	rs		10484387	0					
ANR	10484477	IncDec	--		10484387	1					
ANR	10484478	ElseStatement	else		10484387	0					
ANR	10484479	IfStatement	if ( ( nl == ( levels - 1 ) << ETS_SHIFT ) && nl > ( ( ( levels - 1 ) << ETS_SHIFT ) - ( 1 << ( ETS_SHIFT - 2 ) ) ) )		10484387	0					
ANR	10484480	Condition	( nl == ( levels - 1 ) << ETS_SHIFT ) && nl > ( ( ( levels - 1 ) << ETS_SHIFT ) - ( 1 << ( ETS_SHIFT - 2 ) ) )	220:13:5393:5520	10484387	0	True				
ANR	10484481	AndExpression	( nl == ( levels - 1 ) << ETS_SHIFT ) && nl > ( ( ( levels - 1 ) << ETS_SHIFT ) - ( 1 << ( ETS_SHIFT - 2 ) ) )		10484387	0		&&			
ANR	10484482	EqualityExpression	nl == ( levels - 1 ) << ETS_SHIFT		10484387	0		==			
ANR	10484483	Identifier	nl		10484387	0					
ANR	10484484	ShiftExpression	( levels - 1 ) << ETS_SHIFT		10484387	1		<<			
ANR	10484485	AdditiveExpression	levels - 1		10484387	0		-			
ANR	10484486	Identifier	levels		10484387	0					
ANR	10484487	PrimaryExpression	1		10484387	1					
ANR	10484488	Identifier	ETS_SHIFT		10484387	1					
ANR	10484489	RelationalExpression	nl > ( ( ( levels - 1 ) << ETS_SHIFT ) - ( 1 << ( ETS_SHIFT - 2 ) ) )		10484387	1		>			
ANR	10484490	Identifier	nl		10484387	0					
ANR	10484491	AdditiveExpression	( ( levels - 1 ) << ETS_SHIFT ) - ( 1 << ( ETS_SHIFT - 2 ) )		10484387	1		-			
ANR	10484492	ShiftExpression	( levels - 1 ) << ETS_SHIFT		10484387	0		<<			
ANR	10484493	AdditiveExpression	levels - 1		10484387	0		-			
ANR	10484494	Identifier	levels		10484387	0					
ANR	10484495	PrimaryExpression	1		10484387	1					
ANR	10484496	Identifier	ETS_SHIFT		10484387	1					
ANR	10484497	ShiftExpression	1 << ( ETS_SHIFT - 2 )		10484387	1		<<			
ANR	10484498	PrimaryExpression	1		10484387	0					
ANR	10484499	AdditiveExpression	ETS_SHIFT - 2		10484387	1		-			
ANR	10484500	Identifier	ETS_SHIFT		10484387	0					
ANR	10484501	PrimaryExpression	2		10484387	1					
ANR	10484502	CompoundStatement		20:4:582:582	10484387	1					
ANR	10484503	ElseStatement	else		10484387	0					
ANR	10484504	IfStatement	if ( ( nl > ( 3 << ( ETS_SHIFT - 2 ) ) ) )		10484387	0					
ANR	10484505	Condition	nl > ( 3 << ( ETS_SHIFT - 2 ) )	226:13:5602:5630	10484387	0	True				
ANR	10484506	RelationalExpression	nl > ( 3 << ( ETS_SHIFT - 2 ) )		10484387	0		>			
ANR	10484507	Identifier	nl		10484387	0					
ANR	10484508	ShiftExpression	3 << ( ETS_SHIFT - 2 )		10484387	1		<<			
ANR	10484509	PrimaryExpression	3		10484387	0					
ANR	10484510	AdditiveExpression	ETS_SHIFT - 2		10484387	1		-			
ANR	10484511	Identifier	ETS_SHIFT		10484387	0					
ANR	10484512	PrimaryExpression	2		10484387	1					
ANR	10484513	CompoundStatement		24:4:692:692	10484387	1					
ANR	10484514	ExpressionStatement	nl -= ( nl + ( 1 << ( ETS_SHIFT - 2 ) ) ) & - ( 1 << ( ETS_SHIFT - 1 ) )	228:8:5647:5708	10484387	0	True				
ANR	10484515	AssignmentExpression	nl -= ( nl + ( 1 << ( ETS_SHIFT - 2 ) ) ) & - ( 1 << ( ETS_SHIFT - 1 ) )		10484387	0		-=			
ANR	10484516	Identifier	nl		10484387	0					
ANR	10484517	BitAndExpression	( nl + ( 1 << ( ETS_SHIFT - 2 ) ) ) & - ( 1 << ( ETS_SHIFT - 1 ) )		10484387	1		&			
ANR	10484518	AdditiveExpression	nl + ( 1 << ( ETS_SHIFT - 2 ) )		10484387	0		+			
ANR	10484519	Identifier	nl		10484387	0					
ANR	10484520	ShiftExpression	1 << ( ETS_SHIFT - 2 )		10484387	1		<<			
ANR	10484521	PrimaryExpression	1		10484387	0					
ANR	10484522	AdditiveExpression	ETS_SHIFT - 2		10484387	1		-			
ANR	10484523	Identifier	ETS_SHIFT		10484387	0					
ANR	10484524	PrimaryExpression	2		10484387	1					
ANR	10484525	UnaryOperationExpression	- ( 1 << ( ETS_SHIFT - 1 ) )		10484387	1					
ANR	10484526	UnaryOperator	-		10484387	0					
ANR	10484527	ShiftExpression	1 << ( ETS_SHIFT - 1 )		10484387	1		<<			
ANR	10484528	PrimaryExpression	1		10484387	0					
ANR	10484529	AdditiveExpression	ETS_SHIFT - 1		10484387	1		-			
ANR	10484530	Identifier	ETS_SHIFT		10484387	0					
ANR	10484531	PrimaryExpression	1		10484387	1					
ANR	10484532	IfStatement	if ( nl < 0 )		10484387	1					
ANR	10484533	Condition	nl < 0	229:12:5722:5727	10484387	0	True				
ANR	10484534	RelationalExpression	nl < 0		10484387	0		<			
ANR	10484535	Identifier	nl		10484387	0					
ANR	10484536	PrimaryExpression	0		10484387	1					
ANR	10484537	ExpressionStatement	nl = - nl	229:20:5730:5738	10484387	1	True				
ANR	10484538	AssignmentExpression	nl = - nl		10484387	0		=			
ANR	10484539	Identifier	nl		10484387	0					
ANR	10484540	UnaryOperationExpression	- nl		10484387	1					
ANR	10484541	UnaryOperator	-		10484387	0					
ANR	10484542	Identifier	nl		10484387	1					
ANR	10484543	IfStatement	if ( nl < ( 1 << ( ETS_SHIFT - 4 ) ) )		10484387	2					
ANR	10484544	Condition	nl < ( 1 << ( ETS_SHIFT - 4 ) )	230:12:5752:5778	10484387	0	True				
ANR	10484545	RelationalExpression	nl < ( 1 << ( ETS_SHIFT - 4 ) )		10484387	0		<			
ANR	10484546	Identifier	nl		10484387	0					
ANR	10484547	ShiftExpression	1 << ( ETS_SHIFT - 4 )		10484387	1		<<			
ANR	10484548	PrimaryExpression	1		10484387	0					
ANR	10484549	AdditiveExpression	ETS_SHIFT - 4		10484387	1		-			
ANR	10484550	Identifier	ETS_SHIFT		10484387	0					
ANR	10484551	PrimaryExpression	4		10484387	1					
ANR	10484552	ExpressionStatement	rs --	230:41:5781:5785	10484387	1	True				
ANR	10484553	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484554	Identifier	rs		10484387	0					
ANR	10484555	IncDec	--		10484387	1					
ANR	10484556	IfStatement	if ( nl < ( 1 << ( ETS_SHIFT - 5 ) ) )		10484387	3					
ANR	10484557	Condition	nl < ( 1 << ( ETS_SHIFT - 5 ) )	231:12:5799:5825	10484387	0	True				
ANR	10484558	RelationalExpression	nl < ( 1 << ( ETS_SHIFT - 5 ) )		10484387	0		<			
ANR	10484559	Identifier	nl		10484387	0					
ANR	10484560	ShiftExpression	1 << ( ETS_SHIFT - 5 )		10484387	1		<<			
ANR	10484561	PrimaryExpression	1		10484387	0					
ANR	10484562	AdditiveExpression	ETS_SHIFT - 5		10484387	1		-			
ANR	10484563	Identifier	ETS_SHIFT		10484387	0					
ANR	10484564	PrimaryExpression	5		10484387	1					
ANR	10484565	ExpressionStatement	rs --	231:41:5828:5832	10484387	1	True				
ANR	10484566	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484567	Identifier	rs		10484387	0					
ANR	10484568	IncDec	--		10484387	1					
ANR	10484569	IfStatement	if ( nl < ( 1 << ( ETS_SHIFT - 6 ) ) )		10484387	4					
ANR	10484570	Condition	nl < ( 1 << ( ETS_SHIFT - 6 ) )	232:12:5846:5872	10484387	0	True				
ANR	10484571	RelationalExpression	nl < ( 1 << ( ETS_SHIFT - 6 ) )		10484387	0		<			
ANR	10484572	Identifier	nl		10484387	0					
ANR	10484573	ShiftExpression	1 << ( ETS_SHIFT - 6 )		10484387	1		<<			
ANR	10484574	PrimaryExpression	1		10484387	0					
ANR	10484575	AdditiveExpression	ETS_SHIFT - 6		10484387	1		-			
ANR	10484576	Identifier	ETS_SHIFT		10484387	0					
ANR	10484577	PrimaryExpression	6		10484387	1					
ANR	10484578	ExpressionStatement	rs --	232:41:5875:5879	10484387	1	True				
ANR	10484579	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484580	Identifier	rs		10484387	0					
ANR	10484581	IncDec	--		10484387	1					
ANR	10484582	ElseStatement	else		10484387	0					
ANR	10484583	CompoundStatement		32:4:955:955	10484387	0					
ANR	10484584	IfStatement	if ( nl < ( 3 << ( ETS_SHIFT - 3 ) ) )		10484387	0					
ANR	10484585	Condition	nl < ( 3 << ( ETS_SHIFT - 3 ) )	236:12:5914:5940	10484387	0	True				
ANR	10484586	RelationalExpression	nl < ( 3 << ( ETS_SHIFT - 3 ) )		10484387	0		<			
ANR	10484587	Identifier	nl		10484387	0					
ANR	10484588	ShiftExpression	3 << ( ETS_SHIFT - 3 )		10484387	1		<<			
ANR	10484589	PrimaryExpression	3		10484387	0					
ANR	10484590	AdditiveExpression	ETS_SHIFT - 3		10484387	1		-			
ANR	10484591	Identifier	ETS_SHIFT		10484387	0					
ANR	10484592	PrimaryExpression	3		10484387	1					
ANR	10484593	ExpressionStatement	nl += 1 << ( ETS_SHIFT - 2 )	236:41:5943:5969	10484387	1	True				
ANR	10484594	AssignmentExpression	nl += 1 << ( ETS_SHIFT - 2 )		10484387	0		+=			
ANR	10484595	Identifier	nl		10484387	0					
ANR	10484596	ShiftExpression	1 << ( ETS_SHIFT - 2 )		10484387	1		<<			
ANR	10484597	PrimaryExpression	1		10484387	0					
ANR	10484598	AdditiveExpression	ETS_SHIFT - 2		10484387	1		-			
ANR	10484599	Identifier	ETS_SHIFT		10484387	0					
ANR	10484600	PrimaryExpression	2		10484387	1					
ANR	10484601	ExpressionStatement	nl = nl - ( 1 << ( ETS_SHIFT - 1 ) )	237:8:5979:6011	10484387	1	True				
ANR	10484602	AssignmentExpression	nl = nl - ( 1 << ( ETS_SHIFT - 1 ) )		10484387	0		=			
ANR	10484603	Identifier	nl		10484387	0					
ANR	10484604	AdditiveExpression	nl - ( 1 << ( ETS_SHIFT - 1 ) )		10484387	1		-			
ANR	10484605	Identifier	nl		10484387	0					
ANR	10484606	ShiftExpression	1 << ( ETS_SHIFT - 1 )		10484387	1		<<			
ANR	10484607	PrimaryExpression	1		10484387	0					
ANR	10484608	AdditiveExpression	ETS_SHIFT - 1		10484387	1		-			
ANR	10484609	Identifier	ETS_SHIFT		10484387	0					
ANR	10484610	PrimaryExpression	1		10484387	1					
ANR	10484611	IfStatement	if ( nl < 0 )		10484387	2					
ANR	10484612	Condition	nl < 0	238:12:6025:6030	10484387	0	True				
ANR	10484613	RelationalExpression	nl < 0		10484387	0		<			
ANR	10484614	Identifier	nl		10484387	0					
ANR	10484615	PrimaryExpression	0		10484387	1					
ANR	10484616	ExpressionStatement	nl = - nl	238:20:6033:6041	10484387	1	True				
ANR	10484617	AssignmentExpression	nl = - nl		10484387	0		=			
ANR	10484618	Identifier	nl		10484387	0					
ANR	10484619	UnaryOperationExpression	- nl		10484387	1					
ANR	10484620	UnaryOperator	-		10484387	0					
ANR	10484621	Identifier	nl		10484387	1					
ANR	10484622	IfStatement	if ( nl < ( 1 << ( ETS_SHIFT - 4 ) ) )		10484387	3					
ANR	10484623	Condition	nl < ( 1 << ( ETS_SHIFT - 4 ) )	239:12:6055:6081	10484387	0	True				
ANR	10484624	RelationalExpression	nl < ( 1 << ( ETS_SHIFT - 4 ) )		10484387	0		<			
ANR	10484625	Identifier	nl		10484387	0					
ANR	10484626	ShiftExpression	1 << ( ETS_SHIFT - 4 )		10484387	1		<<			
ANR	10484627	PrimaryExpression	1		10484387	0					
ANR	10484628	AdditiveExpression	ETS_SHIFT - 4		10484387	1		-			
ANR	10484629	Identifier	ETS_SHIFT		10484387	0					
ANR	10484630	PrimaryExpression	4		10484387	1					
ANR	10484631	ExpressionStatement	rs --	239:41:6084:6088	10484387	1	True				
ANR	10484632	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484633	Identifier	rs		10484387	0					
ANR	10484634	IncDec	--		10484387	1					
ANR	10484635	IfStatement	if ( nl < ( 1 << ( ETS_SHIFT - 5 ) ) )		10484387	4					
ANR	10484636	Condition	nl < ( 1 << ( ETS_SHIFT - 5 ) )	240:12:6102:6128	10484387	0	True				
ANR	10484637	RelationalExpression	nl < ( 1 << ( ETS_SHIFT - 5 ) )		10484387	0		<			
ANR	10484638	Identifier	nl		10484387	0					
ANR	10484639	ShiftExpression	1 << ( ETS_SHIFT - 5 )		10484387	1		<<			
ANR	10484640	PrimaryExpression	1		10484387	0					
ANR	10484641	AdditiveExpression	ETS_SHIFT - 5		10484387	1		-			
ANR	10484642	Identifier	ETS_SHIFT		10484387	0					
ANR	10484643	PrimaryExpression	5		10484387	1					
ANR	10484644	ExpressionStatement	rs --	240:41:6131:6135	10484387	1	True				
ANR	10484645	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484646	Identifier	rs		10484387	0					
ANR	10484647	IncDec	--		10484387	1					
ANR	10484648	IfStatement	if ( nl < ( 1 << ( ETS_SHIFT - 6 ) ) )		10484387	5					
ANR	10484649	Condition	nl < ( 1 << ( ETS_SHIFT - 6 ) )	241:12:6149:6175	10484387	0	True				
ANR	10484650	RelationalExpression	nl < ( 1 << ( ETS_SHIFT - 6 ) )		10484387	0		<			
ANR	10484651	Identifier	nl		10484387	0					
ANR	10484652	ShiftExpression	1 << ( ETS_SHIFT - 6 )		10484387	1		<<			
ANR	10484653	PrimaryExpression	1		10484387	0					
ANR	10484654	AdditiveExpression	ETS_SHIFT - 6		10484387	1		-			
ANR	10484655	Identifier	ETS_SHIFT		10484387	0					
ANR	10484656	PrimaryExpression	6		10484387	1					
ANR	10484657	ExpressionStatement	rs --	241:41:6178:6182	10484387	1	True				
ANR	10484658	PostIncDecOperationExpression	rs --		10484387	0					
ANR	10484659	Identifier	rs		10484387	0					
ANR	10484660	IncDec	--		10484387	1					
ANR	10484661	ReturnStatement	return rs ;	243:4:6194:6203	10484387	2	True				
ANR	10484662	Identifier	rs		10484387	0					
ANR	10484663	ReturnType	static int		10484387	1					
ANR	10484664	Identifier	compute_randshift		10484387	2					
ANR	10484665	ParameterList	"int nl , int rs_base , int levels"		10484387	3					
ANR	10484666	Parameter	int nl	203:18:4911:4916	10484387	0	True				
ANR	10484667	ParameterType	int		10484387	0					
ANR	10484668	Identifier	nl		10484387	1					
ANR	10484669	Parameter	int rs_base	203:26:4919:4929	10484387	1	True				
ANR	10484670	ParameterType	int		10484387	0					
ANR	10484671	Identifier	rs_base		10484387	1					
ANR	10484672	Parameter	int levels	203:39:4932:4941	10484387	2	True				
ANR	10484673	ParameterType	int		10484387	0					
ANR	10484674	Identifier	levels		10484387	1					
ANR	10484675	CFGEntryNode	ENTRY		10484387		True				
ANR	10484676	CFGExitNode	EXIT		10484387		True				
ANR	10484677	Symbol	rs		10484387						
ANR	10484678	Symbol	rs_base		10484387						
ANR	10484679	Symbol	nl		10484387						
ANR	10484680	Symbol	levels		10484387						
ANR	10484681	Symbol	ETS_SHIFT		10484387						
ANR	10484682	DeclStmt									
ANR	10484683	Decl							int	int [ M ]	a
ANR	10484684	Decl							int	int [ M ]	b
ANR	10484685	DeclStmt									
ANR	10484686	Decl							int	int [ M ]	e_1_0
ANR	10484687	Decl							int	int [ M ]	e_m1_1
ANR	10484688	Decl							int	int [ M ]	e_0_1
ANR	10484689	Decl							int	int [ M ]	e_1_1
ANR	10484690	DeclStmt									
ANR	10484691	Decl							int	int	i
ANR	10484692	DeclStmt									
ANR	10484693	Decl							int	int	im
ANR	10484694	DeclStmt									
ANR	10484695	Decl							int	int *	pa
ANR	10484696	Decl							int	int *	pb
ANR	10484697	Decl							int	int *	piir
ANR	10484698	Decl							int	int *	pr
ANR	10484699	DeclStmt									
ANR	10484700	Decl							int	int [ M ]	r
ANR	10484701	Decl							int	int	rg
ANR	10484702	DeclStmt									
ANR	10484703	Decl							int	int	xd
ANR	10484704	DeclStmt									
ANR	10484705	Decl							uint32	uint32	seed1
ANR	10484706	DeclStmt									
ANR	10484707	Decl							uint32	uint32	seed2
ANR	10484708	DeclStmt									
ANR	10484709	Decl							uint32	uint32	sum
ANR	10484710	DeclStmt									
ANR	10484711	Decl							int	int	plane_idx
ANR	10484712	DeclStmt									
ANR	10484713	Decl							int	int	n_planes
ANR	10484714	DeclStmt									
ANR	10484715	Decl							int	int	levels
ANR	10484716	DeclStmt									
ANR	10484717	Decl							int	int	dith_mul
ANR	10484718	DeclStmt									
ANR	10484719	Decl							int	int	dith_mul
ANR	10484720	DeclStmt									
ANR	10484721	Decl							int	int	imo_mul
ANR	10484722	DeclStmt									
ANR	10484723	Decl							int	int	aspect_x2
ANR	10484724	DeclStmt									
ANR	10484725	Decl							int	int	aspect_y2
ANR	10484726	DeclStmt									
ANR	10484727	Decl							int	int *	strengths
ANR	10484728	DeclStmt									
ANR	10484729	Decl							int	int	elo
ANR	10484730	DeclStmt									
ANR	10484731	Decl							int	int	ehi
ANR	10484732	DeclStmt									
ANR	10484733	Decl							int	int	coupling
ANR	10484734	DeclStmt									
ANR	10484735	Decl							int	int *	c_line
ANR	10484736	DeclStmt									
ANR	10484737	Decl							int	int	rand_shift
ANR	10484738	DeclStmt									
ANR	10484739	Decl							const signed char	const signed char *	tmline
ANR	10484740	DeclStmt									
ANR	10484741	Decl							int	int	tmmask
ANR	10484742	DeclStmt									
ANR	10484743	Decl							ETS_PlaneCtx	ETS_PlaneCtx *	ctx
ANR	10484744	DeclStmt									
ANR	10484745	Decl							ETS_PlaneCtx	ETS_PlaneCtx *	ctx
ANR	10484746	DeclStmt									
ANR	10484747	Decl							ETS_SrcPixel	ETS_SrcPixel	src_pixel
ANR	10484748	DeclStmt									
ANR	10484749	Decl							int	int	new_r
ANR	10484750	DeclStmt									
ANR	10484751	Decl							int	int	c1
ANR	10484752	DeclStmt									
ANR	10484753	Decl							int	int	rlimit
ANR	10484754	DeclStmt									
ANR	10484755	Decl							uchar	uchar *	dst_ptr
ANR	10484756	DeclStmt									
ANR	10484757	Decl							int	int	new_e_1_0
ANR	10484758	DeclStmt									
ANR	10484759	Decl							int	int	achieved_error
ANR	10484760	DeclStmt									
ANR	10484761	Decl							int	int	err
ANR	10484762	DeclStmt									
ANR	10484763	Decl							int	int	imo
ANR	10484764	DeclStmt									
ANR	10484765	Decl							int	int	expected_r
ANR	10484766	DeclStmt									
ANR	10484767	Decl							int	int	ets_bias
ANR	10484768	DeclStmt									
ANR	10484769	Decl							ETS_PlaneCtx	ETS_PlaneCtx *	ctx
ANR	10484770	DeclStmt									
ANR	10484771	Decl							int	int	av
ANR	10484772	Decl							int	int	bv
ANR	10484773	Decl							int	int	rv
ANR	10484774	DeclStmt									
ANR	10484775	Decl							int	int	c1
ANR	10484776	DeclStmt									
ANR	10484777	Decl							int	int	rlimit
ANR	10484778	Function	ets_plane_free	610:0:19168:19393							
ANR	10484779	FunctionDef	ets_plane_free (ETS_PlaneCtx * ctx)		10484778	0					
ANR	10484780	CompoundStatement		612:0:19214:19393	10484778	0					
ANR	10484781	ExpressionStatement	free ( ctx -> err_line )	613:4:19220:19239	10484778	0	True				
ANR	10484782	CallExpression	free ( ctx -> err_line )		10484778	0					
ANR	10484783	Callee	free		10484778	0					
ANR	10484784	Identifier	free		10484778	0					
ANR	10484785	ArgumentList	ctx -> err_line		10484778	1					
ANR	10484786	Argument	ctx -> err_line		10484778	0					
ANR	10484787	PtrMemberAccess	ctx -> err_line		10484778	0					
ANR	10484788	Identifier	ctx		10484778	0					
ANR	10484789	Identifier	err_line		10484778	1					
ANR	10484790	ExpressionStatement	free ( ctx -> r_line )	614:4:19245:19262	10484778	1	True				
ANR	10484791	CallExpression	free ( ctx -> r_line )		10484778	0					
ANR	10484792	Callee	free		10484778	0					
ANR	10484793	Identifier	free		10484778	0					
ANR	10484794	ArgumentList	ctx -> r_line		10484778	1					
ANR	10484795	Argument	ctx -> r_line		10484778	0					
ANR	10484796	PtrMemberAccess	ctx -> r_line		10484778	0					
ANR	10484797	Identifier	ctx		10484778	0					
ANR	10484798	Identifier	r_line		10484778	1					
ANR	10484799	ExpressionStatement	free ( ctx -> a_line )	615:4:19268:19285	10484778	2	True				
ANR	10484800	CallExpression	free ( ctx -> a_line )		10484778	0					
ANR	10484801	Callee	free		10484778	0					
ANR	10484802	Identifier	free		10484778	0					
ANR	10484803	ArgumentList	ctx -> a_line		10484778	1					
ANR	10484804	Argument	ctx -> a_line		10484778	0					
ANR	10484805	PtrMemberAccess	ctx -> a_line		10484778	0					
ANR	10484806	Identifier	ctx		10484778	0					
ANR	10484807	Identifier	a_line		10484778	1					
ANR	10484808	ExpressionStatement	free ( ctx -> b_line )	616:4:19291:19308	10484778	3	True				
ANR	10484809	CallExpression	free ( ctx -> b_line )		10484778	0					
ANR	10484810	Callee	free		10484778	0					
ANR	10484811	Identifier	free		10484778	0					
ANR	10484812	ArgumentList	ctx -> b_line		10484778	1					
ANR	10484813	Argument	ctx -> b_line		10484778	0					
ANR	10484814	PtrMemberAccess	ctx -> b_line		10484778	0					
ANR	10484815	Identifier	ctx		10484778	0					
ANR	10484816	Identifier	b_line		10484778	1					
ANR	10484817	ExpressionStatement	free ( ctx -> lut )	617:4:19314:19328	10484778	4	True				
ANR	10484818	CallExpression	free ( ctx -> lut )		10484778	0					
ANR	10484819	Callee	free		10484778	0					
ANR	10484820	Identifier	free		10484778	0					
ANR	10484821	ArgumentList	ctx -> lut		10484778	1					
ANR	10484822	Argument	ctx -> lut		10484778	0					
ANR	10484823	PtrMemberAccess	ctx -> lut		10484778	0					
ANR	10484824	Identifier	ctx		10484778	0					
ANR	10484825	Identifier	lut		10484778	1					
ANR	10484826	ExpressionStatement	free ( ctx -> dist_lut )	618:4:19334:19353	10484778	5	True				
ANR	10484827	CallExpression	free ( ctx -> dist_lut )		10484778	0					
ANR	10484828	Callee	free		10484778	0					
ANR	10484829	Identifier	free		10484778	0					
ANR	10484830	ArgumentList	ctx -> dist_lut		10484778	1					
ANR	10484831	Argument	ctx -> dist_lut		10484778	0					
ANR	10484832	PtrMemberAccess	ctx -> dist_lut		10484778	0					
ANR	10484833	Identifier	ctx		10484778	0					
ANR	10484834	Identifier	dist_lut		10484778	1					
ANR	10484835	ExpressionStatement	free ( ctx -> rs_lut )	619:4:19359:19376	10484778	6	True				
ANR	10484836	CallExpression	free ( ctx -> rs_lut )		10484778	0					
ANR	10484837	Callee	free		10484778	0					
ANR	10484838	Identifier	free		10484778	0					
ANR	10484839	ArgumentList	ctx -> rs_lut		10484778	1					
ANR	10484840	Argument	ctx -> rs_lut		10484778	0					
ANR	10484841	PtrMemberAccess	ctx -> rs_lut		10484778	0					
ANR	10484842	Identifier	ctx		10484778	0					
ANR	10484843	Identifier	rs_lut		10484778	1					
ANR	10484844	ExpressionStatement	free ( ctx )	620:4:19382:19391	10484778	7	True				
ANR	10484845	CallExpression	free ( ctx )		10484778	0					
ANR	10484846	Callee	free		10484778	0					
ANR	10484847	Identifier	free		10484778	0					
ANR	10484848	ArgumentList	ctx		10484778	1					
ANR	10484849	Argument	ctx		10484778	0					
ANR	10484850	Identifier	ctx		10484778	0					
ANR	10484851	ReturnType	static void		10484778	1					
ANR	10484852	Identifier	ets_plane_free		10484778	2					
ANR	10484853	ParameterList	ETS_PlaneCtx * ctx		10484778	3					
ANR	10484854	Parameter	ETS_PlaneCtx * ctx	611:15:19195:19211	10484778	0	True				
ANR	10484855	ParameterType	ETS_PlaneCtx *		10484778	0					
ANR	10484856	Identifier	ctx		10484778	1					
ANR	10484857	CFGEntryNode	ENTRY		10484778		True				
ANR	10484858	CFGExitNode	EXIT		10484778		True				
ANR	10484859	Symbol	ctx -> err_line		10484778						
ANR	10484860	Symbol	ctx -> lut		10484778						
ANR	10484861	Symbol	ctx		10484778						
ANR	10484862	Symbol	ctx -> b_line		10484778						
ANR	10484863	Symbol	ctx -> dist_lut		10484778						
ANR	10484864	Symbol	ctx -> r_line		10484778						
ANR	10484865	Symbol	ctx -> rs_lut		10484778						
ANR	10484866	Symbol	* ctx		10484778						
ANR	10484867	Symbol	ctx -> a_line		10484778						
ANR	10484868	Function	ets_plane_new	641:0:19999:25952							
ANR	10484869	FunctionDef	"ets_plane_new (const ETS_Params * params , ETS_Ctx * etc , int plane_idx)"		10484868	0					
ANR	10484870	CompoundStatement		643:0:20090:25952	10484868	0					
ANR	10484871	IdentifierDeclStatement	int width = params -> width ;	644:4:20096:20121	10484868	0	True				
ANR	10484872	IdentifierDecl	width = params -> width		10484868	0					
ANR	10484873	IdentifierDeclType	int		10484868	0					
ANR	10484874	Identifier	width		10484868	1					
ANR	10484875	AssignmentExpression	width = params -> width		10484868	2		=			
ANR	10484876	Identifier	width		10484868	0					
ANR	10484877	PtrMemberAccess	params -> width		10484868	1					
ANR	10484878	Identifier	params		10484868	0					
ANR	10484879	Identifier	width		10484868	1					
ANR	10484880	IdentifierDeclStatement	int * lut = params -> luts [ plane_idx ] ;	645:4:20127:20161	10484868	1	True				
ANR	10484881	IdentifierDecl	* lut = params -> luts [ plane_idx ]		10484868	0					
ANR	10484882	IdentifierDeclType	int *		10484868	0					
ANR	10484883	Identifier	lut		10484868	1					
ANR	10484884	AssignmentExpression	* lut = params -> luts [ plane_idx ]		10484868	2		=			
ANR	10484885	Identifier	lut		10484868	0					
ANR	10484886	ArrayIndexing	params -> luts [ plane_idx ]		10484868	1					
ANR	10484887	PtrMemberAccess	params -> luts		10484868	0					
ANR	10484888	Identifier	params		10484868	0					
ANR	10484889	Identifier	luts		10484868	1					
ANR	10484890	Identifier	plane_idx		10484868	1					
ANR	10484891	IdentifierDeclStatement	ETS_PlaneCtx * result ;	646:4:20167:20187	10484868	2	True				
ANR	10484892	IdentifierDecl	* result		10484868	0					
ANR	10484893	IdentifierDeclType	ETS_PlaneCtx *		10484868	0					
ANR	10484894	Identifier	result		10484868	1					
ANR	10484895	IdentifierDeclStatement	int i ;	647:4:20193:20198	10484868	3	True				
ANR	10484896	IdentifierDecl	i		10484868	0					
ANR	10484897	IdentifierDeclType	int		10484868	0					
ANR	10484898	Identifier	i		10484868	1					
ANR	10484899	IdentifierDeclStatement	int * new_lut ;	648:4:20204:20216	10484868	4	True				
ANR	10484900	IdentifierDecl	* new_lut		10484868	0					
ANR	10484901	IdentifierDeclType	int *		10484868	0					
ANR	10484902	Identifier	new_lut		10484868	1					
ANR	10484903	IdentifierDeclStatement	int * dist_lut ;	649:4:20222:20235	10484868	5	True				
ANR	10484904	IdentifierDecl	* dist_lut		10484868	0					
ANR	10484905	IdentifierDeclType	int *		10484868	0					
ANR	10484906	Identifier	dist_lut		10484868	1					
ANR	10484907	IdentifierDeclStatement	char * rs_lut ;	650:4:20241:20253	10484868	6	True				
ANR	10484908	IdentifierDecl	* rs_lut		10484868	0					
ANR	10484909	IdentifierDeclType	char *		10484868	0					
ANR	10484910	Identifier	rs_lut		10484868	1					
ANR	10484911	IdentifierDeclStatement	double distscale = compute_distscale ( params ) ;	651:4:20259:20303	10484868	7	True				
ANR	10484912	IdentifierDecl	distscale = compute_distscale ( params )		10484868	0					
ANR	10484913	IdentifierDeclType	double		10484868	0					
ANR	10484914	Identifier	distscale		10484868	1					
ANR	10484915	AssignmentExpression	distscale = compute_distscale ( params )		10484868	2		=			
ANR	10484916	Identifier	distscale		10484868	0					
ANR	10484917	CallExpression	compute_distscale ( params )		10484868	1					
ANR	10484918	Callee	compute_distscale		10484868	0					
ANR	10484919	Identifier	compute_distscale		10484868	0					
ANR	10484920	ArgumentList	params		10484868	1					
ANR	10484921	Argument	params		10484868	0					
ANR	10484922	Identifier	params		10484868	0					
ANR	10484923	IdentifierDeclStatement	int c1 ;	652:4:20309:20315	10484868	8	True				
ANR	10484924	IdentifierDecl	c1		10484868	0					
ANR	10484925	IdentifierDeclType	int		10484868	0					
ANR	10484926	Identifier	c1		10484868	1					
ANR	10484927	IdentifierDeclStatement	int rlimit ;	653:4:20321:20331	10484868	9	True				
ANR	10484928	IdentifierDecl	rlimit		10484868	0					
ANR	10484929	IdentifierDeclType	int		10484868	0					
ANR	10484930	Identifier	rlimit		10484868	1					
ANR	10484931	IdentifierDeclStatement	"int log2_levels , log2_aspect ;"	654:4:20337:20365	10484868	10	True				
ANR	10484932	IdentifierDecl	log2_levels		10484868	0					
ANR	10484933	IdentifierDeclType	int		10484868	0					
ANR	10484934	Identifier	log2_levels		10484868	1					
ANR	10484935	IdentifierDecl	log2_aspect		10484868	1					
ANR	10484936	IdentifierDeclType	int		10484868	0					
ANR	10484937	Identifier	log2_aspect		10484868	1					
ANR	10484938	IdentifierDeclStatement	int rs_base ;	655:4:20371:20382	10484868	11	True				
ANR	10484939	IdentifierDecl	rs_base		10484868	0					
ANR	10484940	IdentifierDeclType	int		10484868	0					
ANR	10484941	Identifier	rs_base		10484868	1					
ANR	10484942	ExpressionStatement	result = ( ETS_PlaneCtx * ) malloc ( sizeof ( ETS_PlaneCtx ) )	657:4:20389:20442	10484868	12	True				
ANR	10484943	AssignmentExpression	result = ( ETS_PlaneCtx * ) malloc ( sizeof ( ETS_PlaneCtx ) )		10484868	0		=			
ANR	10484944	Identifier	result		10484868	0					
ANR	10484945	CastExpression	( ETS_PlaneCtx * ) malloc ( sizeof ( ETS_PlaneCtx ) )		10484868	1					
ANR	10484946	CastTarget	ETS_PlaneCtx *		10484868	0					
ANR	10484947	CallExpression	malloc ( sizeof ( ETS_PlaneCtx ) )		10484868	1					
ANR	10484948	Callee	malloc		10484868	0					
ANR	10484949	Identifier	malloc		10484868	0					
ANR	10484950	ArgumentList	sizeof ( ETS_PlaneCtx )		10484868	1					
ANR	10484951	Argument	sizeof ( ETS_PlaneCtx )		10484868	0					
ANR	10484952	SizeofExpression	sizeof ( ETS_PlaneCtx )		10484868	0					
ANR	10484953	Sizeof	sizeof		10484868	0					
ANR	10484954	SizeofOperand	ETS_PlaneCtx		10484868	1					
ANR	10484955	ExpressionStatement	result -> width = width	659:4:20449:20470	10484868	13	True				
ANR	10484956	AssignmentExpression	result -> width = width		10484868	0		=			
ANR	10484957	PtrMemberAccess	result -> width		10484868	0					
ANR	10484958	Identifier	result		10484868	0					
ANR	10484959	Identifier	width		10484868	1					
ANR	10484960	Identifier	width		10484868	1					
ANR	10484961	ExpressionStatement	log2_levels = ets_log2 ( params -> levels )	661:4:20477:20515	10484868	14	True				
ANR	10484962	AssignmentExpression	log2_levels = ets_log2 ( params -> levels )		10484868	0		=			
ANR	10484963	Identifier	log2_levels		10484868	0					
ANR	10484964	CallExpression	ets_log2 ( params -> levels )		10484868	1					
ANR	10484965	Callee	ets_log2		10484868	0					
ANR	10484966	Identifier	ets_log2		10484868	0					
ANR	10484967	ArgumentList	params -> levels		10484868	1					
ANR	10484968	Argument	params -> levels		10484868	0					
ANR	10484969	PtrMemberAccess	params -> levels		10484868	0					
ANR	10484970	Identifier	params		10484868	0					
ANR	10484971	Identifier	levels		10484868	1					
ANR	10484972	ExpressionStatement	log2_aspect = ets_log2 ( params -> aspect_x ) + ets_log2 ( params -> aspect_y )	662:4:20521:20590	10484868	15	True				
ANR	10484973	AssignmentExpression	log2_aspect = ets_log2 ( params -> aspect_x ) + ets_log2 ( params -> aspect_y )		10484868	0		=			
ANR	10484974	Identifier	log2_aspect		10484868	0					
ANR	10484975	AdditiveExpression	ets_log2 ( params -> aspect_x ) + ets_log2 ( params -> aspect_y )		10484868	1		+			
ANR	10484976	CallExpression	ets_log2 ( params -> aspect_x )		10484868	0					
ANR	10484977	Callee	ets_log2		10484868	0					
ANR	10484978	Identifier	ets_log2		10484868	0					
ANR	10484979	ArgumentList	params -> aspect_x		10484868	1					
ANR	10484980	Argument	params -> aspect_x		10484868	0					
ANR	10484981	PtrMemberAccess	params -> aspect_x		10484868	0					
ANR	10484982	Identifier	params		10484868	0					
ANR	10484983	Identifier	aspect_x		10484868	1					
ANR	10484984	CallExpression	ets_log2 ( params -> aspect_y )		10484868	1					
ANR	10484985	Callee	ets_log2		10484868	0					
ANR	10484986	Identifier	ets_log2		10484868	0					
ANR	10484987	ArgumentList	params -> aspect_y		10484868	1					
ANR	10484988	Argument	params -> aspect_y		10484868	0					
ANR	10484989	PtrMemberAccess	params -> aspect_y		10484868	0					
ANR	10484990	Identifier	params		10484868	0					
ANR	10484991	Identifier	aspect_y		10484868	1					
ANR	10484992	ExpressionStatement	c1 = 6 + log2_aspect + log2_levels	663:4:20608:20642	10484868	16	True				
ANR	10484993	AssignmentExpression	c1 = 6 + log2_aspect + log2_levels		10484868	0		=			
ANR	10484994	Identifier	c1		10484868	0					
ANR	10484995	AdditiveExpression	6 + log2_aspect + log2_levels		10484868	1		+			
ANR	10484996	PrimaryExpression	6		10484868	0					
ANR	10484997	AdditiveExpression	log2_aspect + log2_levels		10484868	1		+			
ANR	10484998	Identifier	log2_aspect		10484868	0					
ANR	10484999	Identifier	log2_levels		10484868	1					
ANR	10485000	IfStatement	if ( params -> c1_scale )		10484868	17					
ANR	10485001	Condition	params -> c1_scale	664:8:20652:20667	10484868	0	True				
ANR	10485002	PtrMemberAccess	params -> c1_scale		10484868	0					
ANR	10485003	Identifier	params		10484868	0					
ANR	10485004	Identifier	c1_scale		10484868	1					
ANR	10485005	ExpressionStatement	c1 -= params -> c1_scale [ plane_idx ]	665:8:20678:20711	10484868	1	True				
ANR	10485006	AssignmentExpression	c1 -= params -> c1_scale [ plane_idx ]		10484868	0		-=			
ANR	10485007	Identifier	c1		10484868	0					
ANR	10485008	ArrayIndexing	params -> c1_scale [ plane_idx ]		10484868	1					
ANR	10485009	PtrMemberAccess	params -> c1_scale		10484868	0					
ANR	10485010	Identifier	params		10484868	0					
ANR	10485011	Identifier	c1_scale		10484868	1					
ANR	10485012	Identifier	plane_idx		10484868	1					
ANR	10485013	ExpressionStatement	result -> c1 = c1	666:4:20717:20732	10484868	18	True				
ANR	10485014	AssignmentExpression	result -> c1 = c1		10484868	0		=			
ANR	10485015	PtrMemberAccess	result -> c1		10484868	0					
ANR	10485016	Identifier	result		10484868	0					
ANR	10485017	Identifier	c1		10484868	1					
ANR	10485018	Identifier	c1		10484868	1					
ANR	10485019	ExpressionStatement	rlimit = 1 << ( 30 - ETS_SHIFT + c1 )	667:4:20738:20773	10484868	19	True				
ANR	10485020	AssignmentExpression	rlimit = 1 << ( 30 - ETS_SHIFT + c1 )		10484868	0		=			
ANR	10485021	Identifier	rlimit		10484868	0					
ANR	10485022	ShiftExpression	1 << ( 30 - ETS_SHIFT + c1 )		10484868	1		<<			
ANR	10485023	PrimaryExpression	1		10484868	0					
ANR	10485024	AdditiveExpression	30 - ETS_SHIFT + c1		10484868	1		-			
ANR	10485025	PrimaryExpression	30		10484868	0					
ANR	10485026	AdditiveExpression	ETS_SHIFT + c1		10484868	1		+			
ANR	10485027	Identifier	ETS_SHIFT		10484868	0					
ANR	10485028	Identifier	c1		10484868	1					
ANR	10485029	ExpressionStatement	result -> tm_offset = TM_WIDTH / ets_log2up ( params -> n_planes )	668:4:20779:20836	10484868	20	True				
ANR	10485030	AssignmentExpression	result -> tm_offset = TM_WIDTH / ets_log2up ( params -> n_planes )		10484868	0		=			
ANR	10485031	PtrMemberAccess	result -> tm_offset		10484868	0					
ANR	10485032	Identifier	result		10484868	0					
ANR	10485033	Identifier	tm_offset		10484868	1					
ANR	10485034	MultiplicativeExpression	TM_WIDTH / ets_log2up ( params -> n_planes )		10484868	1		/			
ANR	10485035	Identifier	TM_WIDTH		10484868	0					
ANR	10485036	CallExpression	ets_log2up ( params -> n_planes )		10484868	1					
ANR	10485037	Callee	ets_log2up		10484868	0					
ANR	10485038	Identifier	ets_log2up		10484868	0					
ANR	10485039	ArgumentList	params -> n_planes		10484868	1					
ANR	10485040	Argument	params -> n_planes		10484868	0					
ANR	10485041	PtrMemberAccess	params -> n_planes		10484868	0					
ANR	10485042	Identifier	params		10484868	0					
ANR	10485043	Identifier	n_planes		10484868	1					
ANR	10485044	ExpressionStatement	new_lut = ( int * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )	677:4:21308:21364	10484868	21	True				
ANR	10485045	AssignmentExpression	new_lut = ( int * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	0		=			
ANR	10485046	Identifier	new_lut		10484868	0					
ANR	10485047	CastExpression	( int * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	1					
ANR	10485048	CastTarget	int *		10484868	0					
ANR	10485049	CallExpression	malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	1					
ANR	10485050	Callee	malloc		10484868	0					
ANR	10485051	Identifier	malloc		10484868	0					
ANR	10485052	ArgumentList	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	1					
ANR	10485053	Argument	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	0					
ANR	10485054	MultiplicativeExpression	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	0		*			
ANR	10485055	AdditiveExpression	ETS_SRC_MAX + 1		10484868	0		+			
ANR	10485056	Identifier	ETS_SRC_MAX		10484868	0					
ANR	10485057	PrimaryExpression	1		10484868	1					
ANR	10485058	SizeofExpression	sizeof ( int )		10484868	1					
ANR	10485059	Sizeof	sizeof		10484868	0					
ANR	10485060	SizeofOperand	int		10484868	1					
ANR	10485061	ForStatement	for ( i = 0 ; i < ETS_SRC_MAX + 1 ; i ++ )		10484868	22					
ANR	10485062	ForInit	i = 0 ;	678:9:21375:21380	10484868	0	True				
ANR	10485063	AssignmentExpression	i = 0		10484868	0		=			
ANR	10485064	Identifier	i		10484868	0					
ANR	10485065	PrimaryExpression	0		10484868	1					
ANR	10485066	Condition	i < ETS_SRC_MAX + 1	678:16:21382:21400	10484868	1	True				
ANR	10485067	RelationalExpression	i < ETS_SRC_MAX + 1		10484868	0		<			
ANR	10485068	Identifier	i		10484868	0					
ANR	10485069	AdditiveExpression	ETS_SRC_MAX + 1		10484868	1		+			
ANR	10485070	Identifier	ETS_SRC_MAX		10484868	0					
ANR	10485071	PrimaryExpression	1		10484868	1					
ANR	10485072	PostIncDecOperationExpression	i ++	678:37:21403:21405	10484868	2	True				
ANR	10485073	Identifier	i		10484868	0					
ANR	10485074	IncDec	++		10484868	1					
ANR	10485075	CompoundStatement		38:8:1331:1338	10484868	3					
ANR	10485076	IdentifierDeclStatement	int nli ;	680:8:21422:21429	10484868	0	True				
ANR	10485077	IdentifierDecl	nli		10484868	0					
ANR	10485078	IdentifierDeclType	int		10484868	0					
ANR	10485079	Identifier	nli		10484868	1					
ANR	10485080	IfStatement	if ( lut == NULL )		10484868	1					
ANR	10485081	Condition	lut == NULL	682:12:21444:21454	10484868	0	True				
ANR	10485082	EqualityExpression	lut == NULL		10484868	0		==			
ANR	10485083	Identifier	lut		10484868	0					
ANR	10485084	Identifier	NULL		10484868	1					
ANR	10485085	CompoundStatement		41:8:1374:1374	10484868	1					
ANR	10485086	ExpressionStatement	nli = ( i * 65793 + ( i >> 7 ) ) >> ( 24 - ETS_SHIFT )	685:12:21502:21550	10484868	0	True				
ANR	10485087	AssignmentExpression	nli = ( i * 65793 + ( i >> 7 ) ) >> ( 24 - ETS_SHIFT )		10484868	0		=			
ANR	10485088	Identifier	nli		10484868	0					
ANR	10485089	ShiftExpression	( i * 65793 + ( i >> 7 ) ) >> ( 24 - ETS_SHIFT )		10484868	1		>>			
ANR	10485090	AdditiveExpression	i * 65793 + ( i >> 7 )		10484868	0		+			
ANR	10485091	MultiplicativeExpression	i * 65793		10484868	0		*			
ANR	10485092	Identifier	i		10484868	0					
ANR	10485093	PrimaryExpression	65793		10484868	1					
ANR	10485094	ShiftExpression	i >> 7		10484868	1		>>			
ANR	10485095	Identifier	i		10484868	0					
ANR	10485096	PrimaryExpression	7		10484868	1					
ANR	10485097	AdditiveExpression	24 - ETS_SHIFT		10484868	1		-			
ANR	10485098	PrimaryExpression	24		10484868	0					
ANR	10485099	Identifier	ETS_SHIFT		10484868	1					
ANR	10485100	ElseStatement	else		10484868	0					
ANR	10485101	ExpressionStatement	nli = lut [ i ] >> ( 24 - ETS_SHIFT )	691:12:21673:21705	10484868	0	True				
ANR	10485102	AssignmentExpression	nli = lut [ i ] >> ( 24 - ETS_SHIFT )		10484868	0		=			
ANR	10485103	Identifier	nli		10484868	0					
ANR	10485104	ShiftExpression	lut [ i ] >> ( 24 - ETS_SHIFT )		10484868	1		>>			
ANR	10485105	ArrayIndexing	lut [ i ]		10484868	0					
ANR	10485106	Identifier	lut		10484868	0					
ANR	10485107	Identifier	i		10484868	1					
ANR	10485108	AdditiveExpression	24 - ETS_SHIFT		10484868	1		-			
ANR	10485109	PrimaryExpression	24		10484868	0					
ANR	10485110	Identifier	ETS_SHIFT		10484868	1					
ANR	10485111	IfStatement	if ( params -> polarity == ETS_BLACK_IS_ZERO )		10484868	2					
ANR	10485112	Condition	params -> polarity == ETS_BLACK_IS_ZERO	692:12:21719:21755	10484868	0	True				
ANR	10485113	EqualityExpression	params -> polarity == ETS_BLACK_IS_ZERO		10484868	0		==			
ANR	10485114	PtrMemberAccess	params -> polarity		10484868	0					
ANR	10485115	Identifier	params		10484868	0					
ANR	10485116	Identifier	polarity		10484868	1					
ANR	10485117	Identifier	ETS_BLACK_IS_ZERO		10484868	1					
ANR	10485118	ExpressionStatement	new_lut [ i ] = ( 1 << ETS_SHIFT ) - nli	693:12:21770:21805	10484868	1	True				
ANR	10485119	AssignmentExpression	new_lut [ i ] = ( 1 << ETS_SHIFT ) - nli		10484868	0		=			
ANR	10485120	ArrayIndexing	new_lut [ i ]		10484868	0					
ANR	10485121	Identifier	new_lut		10484868	0					
ANR	10485122	Identifier	i		10484868	1					
ANR	10485123	AdditiveExpression	( 1 << ETS_SHIFT ) - nli		10484868	1		-			
ANR	10485124	ShiftExpression	1 << ETS_SHIFT		10484868	0		<<			
ANR	10485125	PrimaryExpression	1		10484868	0					
ANR	10485126	Identifier	ETS_SHIFT		10484868	1					
ANR	10485127	Identifier	nli		10484868	1					
ANR	10485128	ElseStatement	else		10484868	0					
ANR	10485129	ExpressionStatement	new_lut [ i ] = nli	695:12:21832:21848	10484868	0	True				
ANR	10485130	AssignmentExpression	new_lut [ i ] = nli		10484868	0		=			
ANR	10485131	ArrayIndexing	new_lut [ i ]		10484868	0					
ANR	10485132	Identifier	new_lut		10484868	0					
ANR	10485133	Identifier	i		10484868	1					
ANR	10485134	Identifier	nli		10484868	1					
ANR	10485135	ExpressionStatement	dist_lut = ( int * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )	704:4:22181:22238	10484868	23	True				
ANR	10485136	AssignmentExpression	dist_lut = ( int * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	0		=			
ANR	10485137	Identifier	dist_lut		10484868	0					
ANR	10485138	CastExpression	( int * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	1					
ANR	10485139	CastTarget	int *		10484868	0					
ANR	10485140	CallExpression	malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	1					
ANR	10485141	Callee	malloc		10484868	0					
ANR	10485142	Identifier	malloc		10484868	0					
ANR	10485143	ArgumentList	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	1					
ANR	10485144	Argument	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	0					
ANR	10485145	MultiplicativeExpression	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	0		*			
ANR	10485146	AdditiveExpression	ETS_SRC_MAX + 1		10484868	0		+			
ANR	10485147	Identifier	ETS_SRC_MAX		10484868	0					
ANR	10485148	PrimaryExpression	1		10484868	1					
ANR	10485149	SizeofExpression	sizeof ( int )		10484868	1					
ANR	10485150	Sizeof	sizeof		10484868	0					
ANR	10485151	SizeofOperand	int		10484868	1					
ANR	10485152	ExpressionStatement	rs_lut = ( char * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )	705:4:22244:22302	10484868	24	True				
ANR	10485153	AssignmentExpression	rs_lut = ( char * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	0		=			
ANR	10485154	Identifier	rs_lut		10484868	0					
ANR	10485155	CastExpression	( char * ) malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	1					
ANR	10485156	CastTarget	char *		10484868	0					
ANR	10485157	CallExpression	malloc ( ( ETS_SRC_MAX + 1 ) * sizeof ( int ) )		10484868	1					
ANR	10485158	Callee	malloc		10484868	0					
ANR	10485159	Identifier	malloc		10484868	0					
ANR	10485160	ArgumentList	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	1					
ANR	10485161	Argument	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	0					
ANR	10485162	MultiplicativeExpression	( ETS_SRC_MAX + 1 ) * sizeof ( int )		10484868	0		*			
ANR	10485163	AdditiveExpression	ETS_SRC_MAX + 1		10484868	0		+			
ANR	10485164	Identifier	ETS_SRC_MAX		10484868	0					
ANR	10485165	PrimaryExpression	1		10484868	1					
ANR	10485166	SizeofExpression	sizeof ( int )		10484868	1					
ANR	10485167	Sizeof	sizeof		10484868	0					
ANR	10485168	SizeofOperand	int		10484868	1					
ANR	10485169	ExpressionStatement	rs_base = 35 - ETS_SHIFT + log2_levels - params -> rand_scale	707:4:22309:22368	10484868	25	True				
ANR	10485170	AssignmentExpression	rs_base = 35 - ETS_SHIFT + log2_levels - params -> rand_scale		10484868	0		=			
ANR	10485171	Identifier	rs_base		10484868	0					
ANR	10485172	AdditiveExpression	35 - ETS_SHIFT + log2_levels - params -> rand_scale		10484868	1		-			
ANR	10485173	PrimaryExpression	35		10484868	0					
ANR	10485174	AdditiveExpression	ETS_SHIFT + log2_levels - params -> rand_scale		10484868	1		+			
ANR	10485175	Identifier	ETS_SHIFT		10484868	0					
ANR	10485176	AdditiveExpression	log2_levels - params -> rand_scale		10484868	1		-			
ANR	10485177	Identifier	log2_levels		10484868	0					
ANR	10485178	PtrMemberAccess	params -> rand_scale		10484868	1					
ANR	10485179	Identifier	params		10484868	0					
ANR	10485180	Identifier	rand_scale		10484868	1					
ANR	10485181	ForStatement	for ( i = 0 ; i <= ETS_SRC_MAX ; i ++ )		10484868	26					
ANR	10485182	ForInit	i = 0 ;	745:9:23796:23801	10484868	0	True				
ANR	10485183	AssignmentExpression	i = 0		10484868	0		=			
ANR	10485184	Identifier	i		10484868	0					
ANR	10485185	PrimaryExpression	0		10484868	1					
ANR	10485186	Condition	i <= ETS_SRC_MAX	745:16:23803:23818	10484868	1	True				
ANR	10485187	RelationalExpression	i <= ETS_SRC_MAX		10484868	0		<=			
ANR	10485188	Identifier	i		10484868	0					
ANR	10485189	Identifier	ETS_SRC_MAX		10484868	1					
ANR	10485190	PostIncDecOperationExpression	i ++	745:34:23821:23823	10484868	2	True				
ANR	10485191	Identifier	i		10484868	0					
ANR	10485192	IncDec	++		10484868	1					
ANR	10485193	CompoundStatement		107:8:3822:3828	10484868	3					
ANR	10485194	IdentifierDeclStatement	double dist ;	747:8:23840:23851	10484868	0	True				
ANR	10485195	IdentifierDecl	dist		10484868	0					
ANR	10485196	IdentifierDeclType	double		10484868	0					
ANR	10485197	Identifier	dist		10484868	1					
ANR	10485198	IdentifierDeclStatement	int nl = new_lut [ i ] * ( params -> levels - 1 ) ;	748:8:23861:23903	10484868	1	True				
ANR	10485199	IdentifierDecl	nl = new_lut [ i ] * ( params -> levels - 1 )		10484868	0					
ANR	10485200	IdentifierDeclType	int		10484868	0					
ANR	10485201	Identifier	nl		10484868	1					
ANR	10485202	AssignmentExpression	nl = new_lut [ i ] * ( params -> levels - 1 )		10484868	2		=			
ANR	10485203	Identifier	nl		10484868	0					
ANR	10485204	MultiplicativeExpression	new_lut [ i ] * ( params -> levels - 1 )		10484868	1		*			
ANR	10485205	ArrayIndexing	new_lut [ i ]		10484868	0					
ANR	10485206	Identifier	new_lut		10484868	0					
ANR	10485207	Identifier	i		10484868	1					
ANR	10485208	AdditiveExpression	params -> levels - 1		10484868	1		-			
ANR	10485209	PtrMemberAccess	params -> levels		10484868	0					
ANR	10485210	Identifier	params		10484868	0					
ANR	10485211	Identifier	levels		10484868	1					
ANR	10485212	PrimaryExpression	1		10484868	1					
ANR	10485213	IdentifierDeclStatement	int rs ;	749:8:23913:23919	10484868	2	True				
ANR	10485214	IdentifierDecl	rs		10484868	0					
ANR	10485215	IdentifierDeclType	int		10484868	0					
ANR	10485216	Identifier	rs		10484868	1					
ANR	10485217	IfStatement	if ( nl == 0 )		10484868	3					
ANR	10485218	Condition	nl == 0	753:12:24063:24069	10484868	0	True				
ANR	10485219	EqualityExpression	nl == 0		10484868	0		==			
ANR	10485220	Identifier	nl		10484868	0					
ANR	10485221	PrimaryExpression	0		10484868	1					
ANR	10485222	CompoundStatement		112:8:3989:3989	10484868	1					
ANR	10485223	ExpressionStatement	dist = 0	757:12:24196:24204	10484868	0	True				
ANR	10485224	AssignmentExpression	dist = 0		10484868	0		=			
ANR	10485225	Identifier	dist		10484868	0					
ANR	10485226	PrimaryExpression	0		10484868	1					
ANR	10485227	ElseStatement	else		10484868	0					
ANR	10485228	IfStatement	if ( nl >= ( ( 1 << ETS_SHIFT ) / ( params -> levels - 1 ) ) )		10484868	0					
ANR	10485229	Condition	nl >= ( ( 1 << ETS_SHIFT ) / ( params -> levels - 1 ) )	759:17:24233:24273	10484868	0	True				
ANR	10485230	RelationalExpression	nl >= ( ( 1 << ETS_SHIFT ) / ( params -> levels - 1 ) )		10484868	0		>=			
ANR	10485231	Identifier	nl		10484868	0					
ANR	10485232	MultiplicativeExpression	( 1 << ETS_SHIFT ) / ( params -> levels - 1 )		10484868	1		/			
ANR	10485233	ShiftExpression	1 << ETS_SHIFT		10484868	0		<<			
ANR	10485234	PrimaryExpression	1		10484868	0					
ANR	10485235	Identifier	ETS_SHIFT		10484868	1					
ANR	10485236	AdditiveExpression	params -> levels - 1		10484868	1		-			
ANR	10485237	PtrMemberAccess	params -> levels		10484868	0					
ANR	10485238	Identifier	params		10484868	0					
ANR	10485239	Identifier	levels		10484868	1					
ANR	10485240	PrimaryExpression	1		10484868	1					
ANR	10485241	CompoundStatement		118:8:4193:4193	10484868	1					
ANR	10485242	ExpressionStatement	dist = 0	764:12:24491:24499	10484868	0	True				
ANR	10485243	AssignmentExpression	dist = 0		10484868	0		=			
ANR	10485244	Identifier	dist		10484868	0					
ANR	10485245	PrimaryExpression	0		10484868	1					
ANR	10485246	ElseStatement	else		10484868	0					
ANR	10485247	CompoundStatement		125:8:4441:4441	10484868	0					
ANR	10485248	ExpressionStatement	dist = ( distscale * ( 1 << ( 2 * ETS_SHIFT - c1 ) ) ) / nl	768:12:24546:24599	10484868	0	True				
ANR	10485249	AssignmentExpression	dist = ( distscale * ( 1 << ( 2 * ETS_SHIFT - c1 ) ) ) / nl		10484868	0		=			
ANR	10485250	Identifier	dist		10484868	0					
ANR	10485251	MultiplicativeExpression	( distscale * ( 1 << ( 2 * ETS_SHIFT - c1 ) ) ) / nl		10484868	1		/			
ANR	10485252	MultiplicativeExpression	distscale * ( 1 << ( 2 * ETS_SHIFT - c1 ) )		10484868	0		*			
ANR	10485253	Identifier	distscale		10484868	0					
ANR	10485254	ShiftExpression	1 << ( 2 * ETS_SHIFT - c1 )		10484868	1		<<			
ANR	10485255	PrimaryExpression	1		10484868	0					
ANR	10485256	AdditiveExpression	2 * ETS_SHIFT - c1		10484868	1		-			
ANR	10485257	MultiplicativeExpression	2 * ETS_SHIFT		10484868	0		*			
ANR	10485258	PrimaryExpression	2		10484868	0					
ANR	10485259	Identifier	ETS_SHIFT		10484868	1					
ANR	10485260	Identifier	c1		10484868	1					
ANR	10485261	Identifier	nl		10484868	1					
ANR	10485262	IfStatement	if ( dist > rlimit << ( ETS_SHIFT - c1 ) )		10484868	1					
ANR	10485263	Condition	dist > rlimit << ( ETS_SHIFT - c1 )	769:16:24617:24649	10484868	0	True				
ANR	10485264	RelationalExpression	dist > rlimit << ( ETS_SHIFT - c1 )		10484868	0		>			
ANR	10485265	Identifier	dist		10484868	0					
ANR	10485266	ShiftExpression	rlimit << ( ETS_SHIFT - c1 )		10484868	1		<<			
ANR	10485267	Identifier	rlimit		10484868	0					
ANR	10485268	AdditiveExpression	ETS_SHIFT - c1		10484868	1		-			
ANR	10485269	Identifier	ETS_SHIFT		10484868	0					
ANR	10485270	Identifier	c1		10484868	1					
ANR	10485271	ExpressionStatement	dist = rlimit << ( ETS_SHIFT - c1 )	770:16:24668:24701	10484868	1	True				
ANR	10485272	AssignmentExpression	dist = rlimit << ( ETS_SHIFT - c1 )		10484868	0		=			
ANR	10485273	Identifier	dist		10484868	0					
ANR	10485274	ShiftExpression	rlimit << ( ETS_SHIFT - c1 )		10484868	1		<<			
ANR	10485275	Identifier	rlimit		10484868	0					
ANR	10485276	AdditiveExpression	ETS_SHIFT - c1		10484868	1		-			
ANR	10485277	Identifier	ETS_SHIFT		10484868	0					
ANR	10485278	Identifier	c1		10484868	1					
ANR	10485279	IfStatement	if ( params -> rand_scale_luts == NULL )		10484868	4					
ANR	10485280	Condition	params -> rand_scale_luts == NULL	773:12:24726:24756	10484868	0	True				
ANR	10485281	EqualityExpression	params -> rand_scale_luts == NULL		10484868	0		==			
ANR	10485282	PtrMemberAccess	params -> rand_scale_luts		10484868	0					
ANR	10485283	Identifier	params		10484868	0					
ANR	10485284	Identifier	rand_scale_luts		10484868	1					
ANR	10485285	Identifier	NULL		10484868	1					
ANR	10485286	CompoundStatement		132:8:4676:4676	10484868	1					
ANR	10485287	ExpressionStatement	"rs = compute_randshift ( nl , rs_base , params -> levels )"	775:12:24781:24832	10484868	0	True				
ANR	10485288	AssignmentExpression	"rs = compute_randshift ( nl , rs_base , params -> levels )"		10484868	0		=			
ANR	10485289	Identifier	rs		10484868	0					
ANR	10485290	CallExpression	"compute_randshift ( nl , rs_base , params -> levels )"		10484868	1					
ANR	10485291	Callee	compute_randshift		10484868	0					
ANR	10485292	Identifier	compute_randshift		10484868	0					
ANR	10485293	ArgumentList	nl		10484868	1					
ANR	10485294	Argument	nl		10484868	0					
ANR	10485295	Identifier	nl		10484868	0					
ANR	10485296	Argument	rs_base		10484868	1					
ANR	10485297	Identifier	rs_base		10484868	0					
ANR	10485298	Argument	params -> levels		10484868	2					
ANR	10485299	PtrMemberAccess	params -> levels		10484868	0					
ANR	10485300	Identifier	params		10484868	0					
ANR	10485301	Identifier	levels		10484868	1					
ANR	10485302	ExpressionStatement	rs_lut [ i ] = rs	776:12:24846:24860	10484868	1	True				
ANR	10485303	AssignmentExpression	rs_lut [ i ] = rs		10484868	0		=			
ANR	10485304	ArrayIndexing	rs_lut [ i ]		10484868	0					
ANR	10485305	Identifier	rs_lut		10484868	0					
ANR	10485306	Identifier	i		10484868	1					
ANR	10485307	Identifier	rs		10484868	1					
ANR	10485308	ElseStatement	else		10484868	0					
ANR	10485309	CompoundStatement		138:12:4816:4863	10484868	0					
ANR	10485310	IdentifierDeclStatement	int val = params -> rand_scale_luts [ plane_idx ] [ i ] ;	780:12:24907:24954	10484868	0	True				
ANR	10485311	IdentifierDecl	val = params -> rand_scale_luts [ plane_idx ] [ i ]		10484868	0					
ANR	10485312	IdentifierDeclType	int		10484868	0					
ANR	10485313	Identifier	val		10484868	1					
ANR	10485314	AssignmentExpression	val = params -> rand_scale_luts [ plane_idx ] [ i ]		10484868	2		=			
ANR	10485315	Identifier	val		10484868	0					
ANR	10485316	ArrayIndexing	params -> rand_scale_luts [ plane_idx ] [ i ]		10484868	1					
ANR	10485317	ArrayIndexing	params -> rand_scale_luts [ plane_idx ]		10484868	0					
ANR	10485318	PtrMemberAccess	params -> rand_scale_luts		10484868	0					
ANR	10485319	Identifier	params		10484868	0					
ANR	10485320	Identifier	rand_scale_luts		10484868	1					
ANR	10485321	Identifier	plane_idx		10484868	1					
ANR	10485322	Identifier	i		10484868	1					
ANR	10485323	ExpressionStatement	rs_lut [ i ] = rs_base + 16 - ets_log2 ( val + ( val >> 1 ) )	782:12:24969:25022	10484868	1	True				
ANR	10485324	AssignmentExpression	rs_lut [ i ] = rs_base + 16 - ets_log2 ( val + ( val >> 1 ) )		10484868	0		=			
ANR	10485325	ArrayIndexing	rs_lut [ i ]		10484868	0					
ANR	10485326	Identifier	rs_lut		10484868	0					
ANR	10485327	Identifier	i		10484868	1					
ANR	10485328	AdditiveExpression	rs_base + 16 - ets_log2 ( val + ( val >> 1 ) )		10484868	1		+			
ANR	10485329	Identifier	rs_base		10484868	0					
ANR	10485330	AdditiveExpression	16 - ets_log2 ( val + ( val >> 1 ) )		10484868	1		-			
ANR	10485331	PrimaryExpression	16		10484868	0					
ANR	10485332	CallExpression	ets_log2 ( val + ( val >> 1 ) )		10484868	1					
ANR	10485333	Callee	ets_log2		10484868	0					
ANR	10485334	Identifier	ets_log2		10484868	0					
ANR	10485335	ArgumentList	val + ( val >> 1 )		10484868	1					
ANR	10485336	Argument	val + ( val >> 1 )		10484868	0					
ANR	10485337	AdditiveExpression	val + ( val >> 1 )		10484868	0		+			
ANR	10485338	Identifier	val		10484868	0					
ANR	10485339	ShiftExpression	val >> 1		10484868	1		>>			
ANR	10485340	Identifier	val		10484868	0					
ANR	10485341	PrimaryExpression	1		10484868	1					
ANR	10485342	ExpressionStatement	dist_lut [ i ] = ( int ) dist	784:8:25042:25065	10484868	5	True				
ANR	10485343	AssignmentExpression	dist_lut [ i ] = ( int ) dist		10484868	0		=			
ANR	10485344	ArrayIndexing	dist_lut [ i ]		10484868	0					
ANR	10485345	Identifier	dist_lut		10484868	0					
ANR	10485346	Identifier	i		10484868	1					
ANR	10485347	CastExpression	( int ) dist		10484868	1					
ANR	10485348	CastTarget	int		10484868	0					
ANR	10485349	Identifier	dist		10484868	1					
ANR	10485350	ExpressionStatement	result -> lut = new_lut	787:4:25078:25099	10484868	27	True				
ANR	10485351	AssignmentExpression	result -> lut = new_lut		10484868	0		=			
ANR	10485352	PtrMemberAccess	result -> lut		10484868	0					
ANR	10485353	Identifier	result		10484868	0					
ANR	10485354	Identifier	lut		10484868	1					
ANR	10485355	Identifier	new_lut		10484868	1					
ANR	10485356	ExpressionStatement	result -> dist_lut = dist_lut	788:4:25105:25132	10484868	28	True				
ANR	10485357	AssignmentExpression	result -> dist_lut = dist_lut		10484868	0		=			
ANR	10485358	PtrMemberAccess	result -> dist_lut		10484868	0					
ANR	10485359	Identifier	result		10484868	0					
ANR	10485360	Identifier	dist_lut		10484868	1					
ANR	10485361	Identifier	dist_lut		10484868	1					
ANR	10485362	ExpressionStatement	result -> rs_lut = rs_lut	789:4:25138:25161	10484868	29	True				
ANR	10485363	AssignmentExpression	result -> rs_lut = rs_lut		10484868	0		=			
ANR	10485364	PtrMemberAccess	result -> rs_lut		10484868	0					
ANR	10485365	Identifier	result		10484868	0					
ANR	10485366	Identifier	rs_lut		10484868	1					
ANR	10485367	Identifier	rs_lut		10484868	1					
ANR	10485368	ExpressionStatement	"result -> err_line = ( int * ) calloc ( width , sizeof ( int ) )"	791:4:25168:25220	10484868	30	True				
ANR	10485369	AssignmentExpression	"result -> err_line = ( int * ) calloc ( width , sizeof ( int ) )"		10484868	0		=			
ANR	10485370	PtrMemberAccess	result -> err_line		10484868	0					
ANR	10485371	Identifier	result		10484868	0					
ANR	10485372	Identifier	err_line		10484868	1					
ANR	10485373	CastExpression	"( int * ) calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485374	CastTarget	int *		10484868	0					
ANR	10485375	CallExpression	"calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485376	Callee	calloc		10484868	0					
ANR	10485377	Identifier	calloc		10484868	0					
ANR	10485378	ArgumentList	width		10484868	1					
ANR	10485379	Argument	width		10484868	0					
ANR	10485380	Identifier	width		10484868	0					
ANR	10485381	Argument	sizeof ( int )		10484868	1					
ANR	10485382	SizeofExpression	sizeof ( int )		10484868	0					
ANR	10485383	Sizeof	sizeof		10484868	0					
ANR	10485384	SizeofOperand	int		10484868	1					
ANR	10485385	ExpressionStatement	"result -> r_line = ( int * ) calloc ( width , sizeof ( int ) )"	792:4:25226:25276	10484868	31	True				
ANR	10485386	AssignmentExpression	"result -> r_line = ( int * ) calloc ( width , sizeof ( int ) )"		10484868	0		=			
ANR	10485387	PtrMemberAccess	result -> r_line		10484868	0					
ANR	10485388	Identifier	result		10484868	0					
ANR	10485389	Identifier	r_line		10484868	1					
ANR	10485390	CastExpression	"( int * ) calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485391	CastTarget	int *		10484868	0					
ANR	10485392	CallExpression	"calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485393	Callee	calloc		10484868	0					
ANR	10485394	Identifier	calloc		10484868	0					
ANR	10485395	ArgumentList	width		10484868	1					
ANR	10485396	Argument	width		10484868	0					
ANR	10485397	Identifier	width		10484868	0					
ANR	10485398	Argument	sizeof ( int )		10484868	1					
ANR	10485399	SizeofExpression	sizeof ( int )		10484868	0					
ANR	10485400	Sizeof	sizeof		10484868	0					
ANR	10485401	SizeofOperand	int		10484868	1					
ANR	10485402	ExpressionStatement	"result -> a_line = ( int * ) calloc ( width , sizeof ( int ) )"	793:4:25282:25332	10484868	32	True				
ANR	10485403	AssignmentExpression	"result -> a_line = ( int * ) calloc ( width , sizeof ( int ) )"		10484868	0		=			
ANR	10485404	PtrMemberAccess	result -> a_line		10484868	0					
ANR	10485405	Identifier	result		10484868	0					
ANR	10485406	Identifier	a_line		10484868	1					
ANR	10485407	CastExpression	"( int * ) calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485408	CastTarget	int *		10484868	0					
ANR	10485409	CallExpression	"calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485410	Callee	calloc		10484868	0					
ANR	10485411	Identifier	calloc		10484868	0					
ANR	10485412	ArgumentList	width		10484868	1					
ANR	10485413	Argument	width		10484868	0					
ANR	10485414	Identifier	width		10484868	0					
ANR	10485415	Argument	sizeof ( int )		10484868	1					
ANR	10485416	SizeofExpression	sizeof ( int )		10484868	0					
ANR	10485417	Sizeof	sizeof		10484868	0					
ANR	10485418	SizeofOperand	int		10484868	1					
ANR	10485419	ExpressionStatement	"result -> b_line = ( int * ) calloc ( width , sizeof ( int ) )"	794:4:25338:25388	10484868	33	True				
ANR	10485420	AssignmentExpression	"result -> b_line = ( int * ) calloc ( width , sizeof ( int ) )"		10484868	0		=			
ANR	10485421	PtrMemberAccess	result -> b_line		10484868	0					
ANR	10485422	Identifier	result		10484868	0					
ANR	10485423	Identifier	b_line		10484868	1					
ANR	10485424	CastExpression	"( int * ) calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485425	CastTarget	int *		10484868	0					
ANR	10485426	CallExpression	"calloc ( width , sizeof ( int ) )"		10484868	1					
ANR	10485427	Callee	calloc		10484868	0					
ANR	10485428	Identifier	calloc		10484868	0					
ANR	10485429	ArgumentList	width		10484868	1					
ANR	10485430	Argument	width		10484868	0					
ANR	10485431	Identifier	width		10484868	0					
ANR	10485432	Argument	sizeof ( int )		10484868	1					
ANR	10485433	SizeofExpression	sizeof ( int )		10484868	0					
ANR	10485434	Sizeof	sizeof		10484868	0					
ANR	10485435	SizeofOperand	int		10484868	1					
ANR	10485436	ForStatement	for ( i = 0 ; i < width ; i ++ )		10484868	34					
ANR	10485437	ForInit	i = 0 ;	795:9:25399:25404	10484868	0	True				
ANR	10485438	AssignmentExpression	i = 0		10484868	0		=			
ANR	10485439	Identifier	i		10484868	0					
ANR	10485440	PrimaryExpression	0		10484868	1					
ANR	10485441	Condition	i < width	795:16:25406:25414	10484868	1	True				
ANR	10485442	RelationalExpression	i < width		10484868	0		<			
ANR	10485443	Identifier	i		10484868	0					
ANR	10485444	Identifier	width		10484868	1					
ANR	10485445	PostIncDecOperationExpression	i ++	795:27:25417:25419	10484868	2	True				
ANR	10485446	Identifier	i		10484868	0					
ANR	10485447	IncDec	++		10484868	1					
ANR	10485448	CompoundStatement		154:4:5335:5335	10484868	3					
ANR	10485449	ExpressionStatement	result -> a_line [ i ] = 1	797:8:25436:25457	10484868	0	True				
ANR	10485450	AssignmentExpression	result -> a_line [ i ] = 1		10484868	0		=			
ANR	10485451	ArrayIndexing	result -> a_line [ i ]		10484868	0					
ANR	10485452	PtrMemberAccess	result -> a_line		10484868	0					
ANR	10485453	Identifier	result		10484868	0					
ANR	10485454	Identifier	a_line		10484868	1					
ANR	10485455	Identifier	i		10484868	1					
ANR	10485456	PrimaryExpression	1		10484868	1					
ANR	10485457	ExpressionStatement	result -> b_line [ i ] = 1	798:8:25467:25488	10484868	1	True				
ANR	10485458	AssignmentExpression	result -> b_line [ i ] = 1		10484868	0		=			
ANR	10485459	ArrayIndexing	result -> b_line [ i ]		10484868	0					
ANR	10485460	PtrMemberAccess	result -> b_line		10484868	0					
ANR	10485461	Identifier	result		10484868	0					
ANR	10485462	Identifier	b_line		10484868	1					
ANR	10485463	Identifier	i		10484868	1					
ANR	10485464	PrimaryExpression	1		10484868	1					
ANR	10485465	ExpressionStatement	result -> err_line [ i ] = - ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - ETS_SHIFT )	804:8:25856:25924	10484868	2	True				
ANR	10485466	AssignmentExpression	result -> err_line [ i ] = - ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - ETS_SHIFT )		10484868	0		=			
ANR	10485467	ArrayIndexing	result -> err_line [ i ]		10484868	0					
ANR	10485468	PtrMemberAccess	result -> err_line		10484868	0					
ANR	10485469	Identifier	result		10484868	0					
ANR	10485470	Identifier	err_line		10484868	1					
ANR	10485471	Identifier	i		10484868	1					
ANR	10485472	ShiftExpression	- ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - ETS_SHIFT )		10484868	1		>>			
ANR	10485473	UnaryOperationExpression	- ( ( rand ( ) & 0x7fff ) << 6 )		10484868	0					
ANR	10485474	UnaryOperator	-		10484868	0					
ANR	10485475	ShiftExpression	( rand ( ) & 0x7fff ) << 6		10484868	1		<<			
ANR	10485476	BitAndExpression	rand ( ) & 0x7fff		10484868	0		&			
ANR	10485477	CallExpression	rand ( )		10484868	0					
ANR	10485478	Callee	rand		10484868	0					
ANR	10485479	Identifier	rand		10484868	0					
ANR	10485480	ArgumentList			10484868	1					
ANR	10485481	PrimaryExpression	0x7fff		10484868	1					
ANR	10485482	PrimaryExpression	6		10484868	1					
ANR	10485483	AdditiveExpression	24 - ETS_SHIFT		10484868	1		-			
ANR	10485484	PrimaryExpression	24		10484868	0					
ANR	10485485	Identifier	ETS_SHIFT		10484868	1					
ANR	10485486	ReturnStatement	return result ;	807:4:25937:25950	10484868	35	True				
ANR	10485487	Identifier	result		10484868	0					
ANR	10485488	ReturnType	static ETS_PlaneCtx *		10484868	1					
ANR	10485489	Identifier	ets_plane_new		10484868	2					
ANR	10485490	ParameterList	"const ETS_Params * params , ETS_Ctx * etc , int plane_idx"		10484868	3					
ANR	10485491	Parameter	const ETS_Params * params	642:14:20035:20058	10484868	0	True				
ANR	10485492	ParameterType	const ETS_Params *		10484868	0					
ANR	10485493	Identifier	params		10484868	1					
ANR	10485494	Parameter	ETS_Ctx * etc	642:40:20061:20072	10484868	1	True				
ANR	10485495	ParameterType	ETS_Ctx *		10484868	0					
ANR	10485496	Identifier	etc		10484868	1					
ANR	10485497	Parameter	int plane_idx	642:54:20075:20087	10484868	2	True				
ANR	10485498	ParameterType	int		10484868	0					
ANR	10485499	Identifier	plane_idx		10484868	1					
ANR	10485500	CFGEntryNode	ENTRY		10484868		True				
ANR	10485501	CFGExitNode	EXIT		10484868		True				
ANR	10485502	Symbol	* rs_lut		10484868						
ANR	10485503	Symbol	rs_lut		10484868						
ANR	10485504	Symbol	* result -> b_line		10484868						
ANR	10485505	Symbol	dist		10484868						
ANR	10485506	Symbol	lut		10484868						
ANR	10485507	Symbol	result -> a_line		10484868						
ANR	10485508	Symbol	* * params		10484868						
ANR	10485509	Symbol	rand		10484868						
ANR	10485510	Symbol	* * * params		10484868						
ANR	10485511	Symbol	* result -> a_line		10484868						
ANR	10485512	Symbol	etc		10484868						
ANR	10485513	Symbol	* new_lut		10484868						
ANR	10485514	Symbol	distscale		10484868						
ANR	10485515	Symbol	log2_aspect		10484868						
ANR	10485516	Symbol	result -> tm_offset		10484868						
ANR	10485517	Symbol	val		10484868						
ANR	10485518	Symbol	rlimit		10484868						
ANR	10485519	Symbol	rs_base		10484868						
ANR	10485520	Symbol	NULL		10484868						
ANR	10485521	Symbol	result -> c1		10484868						
ANR	10485522	Symbol	params -> polarity		10484868						
ANR	10485523	Symbol	* * result		10484868						
ANR	10485524	Symbol	params -> aspect_y		10484868						
ANR	10485525	Symbol	params -> aspect_x		10484868						
ANR	10485526	Symbol	params		10484868						
ANR	10485527	Symbol	c1		10484868						
ANR	10485528	Symbol	ETS_SHIFT		10484868						
ANR	10485529	Symbol	ets_log2up		10484868						
ANR	10485530	Symbol	result -> rs_lut		10484868						
ANR	10485531	Symbol	* plane_idx		10484868						
ANR	10485532	Symbol	log2_levels		10484868						
ANR	10485533	Symbol	* * params -> rand_scale_luts		10484868						
ANR	10485534	Symbol	result -> r_line		10484868						
ANR	10485535	Symbol	params -> n_planes		10484868						
ANR	10485536	Symbol	params -> width		10484868						
ANR	10485537	Symbol	nl		10484868						
ANR	10485538	Symbol	rs		10484868						
ANR	10485539	Symbol	dist_lut		10484868						
ANR	10485540	Symbol	* params -> luts		10484868						
ANR	10485541	Symbol	plane_idx		10484868						
ANR	10485542	Symbol	params -> rand_scale		10484868						
ANR	10485543	Symbol	TM_WIDTH		10484868						
ANR	10485544	Symbol	calloc		10484868						
ANR	10485545	Symbol	result		10484868						
ANR	10485546	Symbol	result -> lut		10484868						
ANR	10485547	Symbol	result -> err_line		10484868						
ANR	10485548	Symbol	* params -> c1_scale		10484868						
ANR	10485549	Symbol	* result		10484868						
ANR	10485550	Symbol	compute_randshift		10484868						
ANR	10485551	Symbol	result -> dist_lut		10484868						
ANR	10485552	Symbol	* params		10484868						
ANR	10485553	Symbol	malloc		10484868						
ANR	10485554	Symbol	ETS_SRC_MAX		10484868						
ANR	10485555	Symbol	* dist_lut		10484868						
ANR	10485556	Symbol	compute_distscale		10484868						
ANR	10485557	Symbol	params -> luts		10484868						
ANR	10485558	Symbol	i		10484868						
ANR	10485559	Symbol	nli		10484868						
ANR	10485560	Symbol	* * plane_idx		10484868						
ANR	10485561	Symbol	new_lut		10484868						
ANR	10485562	Symbol	ETS_BLACK_IS_ZERO		10484868						
ANR	10485563	Symbol	params -> levels		10484868						
ANR	10485564	Symbol	* i		10484868						
ANR	10485565	Symbol	* lut		10484868						
ANR	10485566	Symbol	* result -> err_line		10484868						
ANR	10485567	Symbol	result -> b_line		10484868						
ANR	10485568	Symbol	width		10484868						
ANR	10485569	Symbol	result -> width		10484868						
ANR	10485570	Symbol	params -> c1_scale		10484868						
ANR	10485571	Symbol	ets_log2		10484868						
ANR	10485572	Symbol	params -> rand_scale_luts		10484868						
ANR	10485573	Symbol	* params -> rand_scale_luts		10484868						
ANR	10485574	Function	ets_new	810:0:25955:27930							
ANR	10485575	FunctionDef	ets_new (const ETS_Params * params)		10485574	0					
ANR	10485576	CompoundStatement		812:0:25999:27930	10485574	0					
ANR	10485577	IdentifierDeclStatement	ETS_Ctx * result = ( ETS_Ctx * ) malloc ( sizeof ( ETS_Ctx ) ) ;	813:4:26005:26057	10485574	0	True				
ANR	10485578	IdentifierDecl	* result = ( ETS_Ctx * ) malloc ( sizeof ( ETS_Ctx ) )		10485574	0					
ANR	10485579	IdentifierDeclType	ETS_Ctx *		10485574	0					
ANR	10485580	Identifier	result		10485574	1					
ANR	10485581	AssignmentExpression	* result = ( ETS_Ctx * ) malloc ( sizeof ( ETS_Ctx ) )		10485574	2		=			
ANR	10485582	Identifier	result		10485574	0					
ANR	10485583	CastExpression	( ETS_Ctx * ) malloc ( sizeof ( ETS_Ctx ) )		10485574	1					
ANR	10485584	CastTarget	ETS_Ctx *		10485574	0					
ANR	10485585	CallExpression	malloc ( sizeof ( ETS_Ctx ) )		10485574	1					
ANR	10485586	Callee	malloc		10485574	0					
ANR	10485587	Identifier	malloc		10485574	0					
ANR	10485588	ArgumentList	sizeof ( ETS_Ctx )		10485574	1					
ANR	10485589	Argument	sizeof ( ETS_Ctx )		10485574	0					
ANR	10485590	SizeofExpression	sizeof ( ETS_Ctx )		10485574	0					
ANR	10485591	Sizeof	sizeof		10485574	0					
ANR	10485592	SizeofOperand	ETS_Ctx		10485574	1					
ANR	10485593	IdentifierDeclStatement	int n_planes = params -> n_planes ;	814:4:26063:26094	10485574	1	True				
ANR	10485594	IdentifierDecl	n_planes = params -> n_planes		10485574	0					
ANR	10485595	IdentifierDeclType	int		10485574	0					
ANR	10485596	Identifier	n_planes		10485574	1					
ANR	10485597	AssignmentExpression	n_planes = params -> n_planes		10485574	2		=			
ANR	10485598	Identifier	n_planes		10485574	0					
ANR	10485599	PtrMemberAccess	params -> n_planes		10485574	1					
ANR	10485600	Identifier	params		10485574	0					
ANR	10485601	Identifier	n_planes		10485574	1					
ANR	10485602	IdentifierDeclStatement	int i ;	815:4:26100:26105	10485574	2	True				
ANR	10485603	IdentifierDecl	i		10485574	0					
ANR	10485604	IdentifierDeclType	int		10485574	0					
ANR	10485605	Identifier	i		10485574	1					
ANR	10485606	IdentifierDeclStatement	int using_vectors = 0 ;	816:4:26111:26132	10485574	3	True				
ANR	10485607	IdentifierDecl	using_vectors = 0		10485574	0					
ANR	10485608	IdentifierDeclType	int		10485574	0					
ANR	10485609	Identifier	using_vectors		10485574	1					
ANR	10485610	AssignmentExpression	using_vectors = 0		10485574	2		=			
ANR	10485611	Identifier	using_vectors		10485574	0					
ANR	10485612	PrimaryExpression	0		10485574	1					
ANR	10485613	IfStatement	if ( params -> dump_file )		10485574	4					
ANR	10485614	Condition	params -> dump_file	818:8:26143:26159	10485574	0	True				
ANR	10485615	PtrMemberAccess	params -> dump_file		10485574	0					
ANR	10485616	Identifier	params		10485574	0					
ANR	10485617	Identifier	dump_file		10485574	1					
ANR	10485618	CompoundStatement		9:8:176:189	10485574	1					
ANR	10485619	IdentifierDeclStatement	int header [ 5 ] ;	820:8:26176:26189	10485574	0	True				
ANR	10485620	IdentifierDecl	header [ 5 ]		10485574	0					
ANR	10485621	IdentifierDeclType	int [ 5 ]		10485574	0					
ANR	10485622	Identifier	header		10485574	1					
ANR	10485623	PrimaryExpression	5		10485574	2					
ANR	10485624	ExpressionStatement	header [ 0 ] = 0x70644245	822:8:26200:26222	10485574	1	True				
ANR	10485625	AssignmentExpression	header [ 0 ] = 0x70644245		10485574	0		=			
ANR	10485626	ArrayIndexing	header [ 0 ]		10485574	0					
ANR	10485627	Identifier	header		10485574	0					
ANR	10485628	PrimaryExpression	0		10485574	1					
ANR	10485629	PrimaryExpression	0x70644245		10485574	1					
ANR	10485630	ExpressionStatement	header [ 1 ] = 'M' * 0x1010000 + 'I' * 0x101	823:8:26232:26273	10485574	2	True				
ANR	10485631	AssignmentExpression	header [ 1 ] = 'M' * 0x1010000 + 'I' * 0x101		10485574	0		=			
ANR	10485632	ArrayIndexing	header [ 1 ]		10485574	0					
ANR	10485633	Identifier	header		10485574	0					
ANR	10485634	PrimaryExpression	1		10485574	1					
ANR	10485635	AdditiveExpression	'M' * 0x1010000 + 'I' * 0x101		10485574	1		+			
ANR	10485636	MultiplicativeExpression	'M' * 0x1010000		10485574	0		*			
ANR	10485637	PrimaryExpression	'M'		10485574	0					
ANR	10485638	PrimaryExpression	0x1010000		10485574	1					
ANR	10485639	MultiplicativeExpression	'I' * 0x101		10485574	1		*			
ANR	10485640	PrimaryExpression	'I'		10485574	0					
ANR	10485641	PrimaryExpression	0x101		10485574	1					
ANR	10485642	ExpressionStatement	header [ 2 ] = ETS_VERSION	824:8:26283:26306	10485574	3	True				
ANR	10485643	AssignmentExpression	header [ 2 ] = ETS_VERSION		10485574	0		=			
ANR	10485644	ArrayIndexing	header [ 2 ]		10485574	0					
ANR	10485645	Identifier	header		10485574	0					
ANR	10485646	PrimaryExpression	2		10485574	1					
ANR	10485647	Identifier	ETS_VERSION		10485574	1					
ANR	10485648	ExpressionStatement	header [ 3 ] = ETS_SRC_MAX	825:8:26316:26339	10485574	4	True				
ANR	10485649	AssignmentExpression	header [ 3 ] = ETS_SRC_MAX		10485574	0		=			
ANR	10485650	ArrayIndexing	header [ 3 ]		10485574	0					
ANR	10485651	Identifier	header		10485574	0					
ANR	10485652	PrimaryExpression	3		10485574	1					
ANR	10485653	Identifier	ETS_SRC_MAX		10485574	1					
ANR	10485654	ExpressionStatement	header [ 4 ] = sizeof ( ETS_SrcPixel )	826:8:26349:26381	10485574	5	True				
ANR	10485655	AssignmentExpression	header [ 4 ] = sizeof ( ETS_SrcPixel )		10485574	0		=			
ANR	10485656	ArrayIndexing	header [ 4 ]		10485574	0					
ANR	10485657	Identifier	header		10485574	0					
ANR	10485658	PrimaryExpression	4		10485574	1					
ANR	10485659	SizeofExpression	sizeof ( ETS_SrcPixel )		10485574	1					
ANR	10485660	Sizeof	sizeof		10485574	0					
ANR	10485661	SizeofOperand	ETS_SrcPixel		10485574	1					
ANR	10485662	ExpressionStatement	"fwrite ( header , sizeof ( int ) , sizeof ( header ) / sizeof ( header [ 0 ] ) , params -> dump_file )"	827:8:26391:26488	10485574	6	True				
ANR	10485663	CallExpression	"fwrite ( header , sizeof ( int ) , sizeof ( header ) / sizeof ( header [ 0 ] ) , params -> dump_file )"		10485574	0					
ANR	10485664	Callee	fwrite		10485574	0					
ANR	10485665	Identifier	fwrite		10485574	0					
ANR	10485666	ArgumentList	header		10485574	1					
ANR	10485667	Argument	header		10485574	0					
ANR	10485668	Identifier	header		10485574	0					
ANR	10485669	Argument	sizeof ( int )		10485574	1					
ANR	10485670	SizeofExpression	sizeof ( int )		10485574	0					
ANR	10485671	Sizeof	sizeof		10485574	0					
ANR	10485672	SizeofOperand	int		10485574	1					
ANR	10485673	Argument	sizeof ( header ) / sizeof ( header [ 0 ] )		10485574	2					
ANR	10485674	MultiplicativeExpression	sizeof ( header ) / sizeof ( header [ 0 ] )		10485574	0		/			
ANR	10485675	SizeofExpression	sizeof ( header )		10485574	0					
ANR	10485676	Sizeof	sizeof		10485574	0					
ANR	10485677	SizeofOperand	header		10485574	1					
ANR	10485678	SizeofExpression	sizeof ( header [ 0 ] )		10485574	1					
ANR	10485679	Sizeof	sizeof		10485574	0					
ANR	10485680	ArrayIndexing	header [ 0 ]		10485574	1					
ANR	10485681	Identifier	header		10485574	0					
ANR	10485682	PrimaryExpression	0		10485574	1					
ANR	10485683	Argument	params -> dump_file		10485574	3					
ANR	10485684	PtrMemberAccess	params -> dump_file		10485574	0					
ANR	10485685	Identifier	params		10485574	0					
ANR	10485686	Identifier	dump_file		10485574	1					
ANR	10485687	IfStatement	if ( params -> dump_level >= ETS_DUMP_PARAMS )		10485574	7					
ANR	10485688	Condition	params -> dump_level >= ETS_DUMP_PARAMS	829:12:26502:26538	10485574	0	True				
ANR	10485689	RelationalExpression	params -> dump_level >= ETS_DUMP_PARAMS		10485574	0		>=			
ANR	10485690	PtrMemberAccess	params -> dump_level		10485574	0					
ANR	10485691	Identifier	params		10485574	0					
ANR	10485692	Identifier	dump_level		10485574	1					
ANR	10485693	Identifier	ETS_DUMP_PARAMS		10485574	1					
ANR	10485694	CompoundStatement		19:8:549:549	10485574	1					
ANR	10485695	ExpressionStatement	"fwrite ( params , 1 , sizeof ( ETS_Params ) , params -> dump_file )"	831:12:26563:26619	10485574	0	True				
ANR	10485696	CallExpression	"fwrite ( params , 1 , sizeof ( ETS_Params ) , params -> dump_file )"		10485574	0					
ANR	10485697	Callee	fwrite		10485574	0					
ANR	10485698	Identifier	fwrite		10485574	0					
ANR	10485699	ArgumentList	params		10485574	1					
ANR	10485700	Argument	params		10485574	0					
ANR	10485701	Identifier	params		10485574	0					
ANR	10485702	Argument	1		10485574	1					
ANR	10485703	PrimaryExpression	1		10485574	0					
ANR	10485704	Argument	sizeof ( ETS_Params )		10485574	2					
ANR	10485705	SizeofExpression	sizeof ( ETS_Params )		10485574	0					
ANR	10485706	Sizeof	sizeof		10485574	0					
ANR	10485707	SizeofOperand	ETS_Params		10485574	1					
ANR	10485708	Argument	params -> dump_file		10485574	3					
ANR	10485709	PtrMemberAccess	params -> dump_file		10485574	0					
ANR	10485710	Identifier	params		10485574	0					
ANR	10485711	Identifier	dump_file		10485574	1					
ANR	10485712	IfStatement	if ( params -> dump_level >= ETS_DUMP_LUTS )		10485574	8					
ANR	10485713	Condition	params -> dump_level >= ETS_DUMP_LUTS	833:12:26643:26677	10485574	0	True				
ANR	10485714	RelationalExpression	params -> dump_level >= ETS_DUMP_LUTS		10485574	0		>=			
ANR	10485715	PtrMemberAccess	params -> dump_level		10485574	0					
ANR	10485716	Identifier	params		10485574	0					
ANR	10485717	Identifier	dump_level		10485574	1					
ANR	10485718	Identifier	ETS_DUMP_LUTS		10485574	1					
ANR	10485719	CompoundStatement		23:8:688:688	10485574	1					
ANR	10485720	ForStatement	for ( i = 0 ; i < params -> n_planes ; i ++ )		10485574	0					
ANR	10485721	ForInit	i = 0 ;	835:17:26707:26712	10485574	0	True				
ANR	10485722	AssignmentExpression	i = 0		10485574	0		=			
ANR	10485723	Identifier	i		10485574	0					
ANR	10485724	PrimaryExpression	0		10485574	1					
ANR	10485725	Condition	i < params -> n_planes	835:24:26714:26733	10485574	1	True				
ANR	10485726	RelationalExpression	i < params -> n_planes		10485574	0		<			
ANR	10485727	Identifier	i		10485574	0					
ANR	10485728	PtrMemberAccess	params -> n_planes		10485574	1					
ANR	10485729	Identifier	params		10485574	0					
ANR	10485730	Identifier	n_planes		10485574	1					
ANR	10485731	PostIncDecOperationExpression	i ++	835:46:26736:26738	10485574	2	True				
ANR	10485732	Identifier	i		10485574	0					
ANR	10485733	IncDec	++		10485574	1					
ANR	10485734	ExpressionStatement	"fwrite ( params -> luts [ i ] , sizeof ( int ) , ETS_SRC_MAX + 1 , params -> dump_file )"	836:16:26757:26852	10485574	3	True				
ANR	10485735	CallExpression	"fwrite ( params -> luts [ i ] , sizeof ( int ) , ETS_SRC_MAX + 1 , params -> dump_file )"		10485574	0					
ANR	10485736	Callee	fwrite		10485574	0					
ANR	10485737	Identifier	fwrite		10485574	0					
ANR	10485738	ArgumentList	params -> luts [ i ]		10485574	1					
ANR	10485739	Argument	params -> luts [ i ]		10485574	0					
ANR	10485740	ArrayIndexing	params -> luts [ i ]		10485574	0					
ANR	10485741	PtrMemberAccess	params -> luts		10485574	0					
ANR	10485742	Identifier	params		10485574	0					
ANR	10485743	Identifier	luts		10485574	1					
ANR	10485744	Identifier	i		10485574	1					
ANR	10485745	Argument	sizeof ( int )		10485574	1					
ANR	10485746	SizeofExpression	sizeof ( int )		10485574	0					
ANR	10485747	Sizeof	sizeof		10485574	0					
ANR	10485748	SizeofOperand	int		10485574	1					
ANR	10485749	Argument	ETS_SRC_MAX + 1		10485574	2					
ANR	10485750	AdditiveExpression	ETS_SRC_MAX + 1		10485574	0		+			
ANR	10485751	Identifier	ETS_SRC_MAX		10485574	0					
ANR	10485752	PrimaryExpression	1		10485574	1					
ANR	10485753	Argument	params -> dump_file		10485574	3					
ANR	10485754	PtrMemberAccess	params -> dump_file		10485574	0					
ANR	10485755	Identifier	params		10485574	0					
ANR	10485756	Identifier	dump_file		10485574	1					
ANR	10485757	ExpressionStatement	result -> width = params -> width	841:4:26875:26904	10485574	5	True				
ANR	10485758	AssignmentExpression	result -> width = params -> width		10485574	0		=			
ANR	10485759	PtrMemberAccess	result -> width		10485574	0					
ANR	10485760	Identifier	result		10485574	0					
ANR	10485761	Identifier	width		10485574	1					
ANR	10485762	PtrMemberAccess	params -> width		10485574	1					
ANR	10485763	Identifier	params		10485574	0					
ANR	10485764	Identifier	width		10485574	1					
ANR	10485765	ExpressionStatement	result -> n_planes = n_planes	842:4:26910:26937	10485574	6	True				
ANR	10485766	AssignmentExpression	result -> n_planes = n_planes		10485574	0		=			
ANR	10485767	PtrMemberAccess	result -> n_planes		10485574	0					
ANR	10485768	Identifier	result		10485574	0					
ANR	10485769	Identifier	n_planes		10485574	1					
ANR	10485770	Identifier	n_planes		10485574	1					
ANR	10485771	ExpressionStatement	result -> levels = params -> levels	843:4:26943:26974	10485574	7	True				
ANR	10485772	AssignmentExpression	result -> levels = params -> levels		10485574	0		=			
ANR	10485773	PtrMemberAccess	result -> levels		10485574	0					
ANR	10485774	Identifier	result		10485574	0					
ANR	10485775	Identifier	levels		10485574	1					
ANR	10485776	PtrMemberAccess	params -> levels		10485574	1					
ANR	10485777	Identifier	params		10485574	0					
ANR	10485778	Identifier	levels		10485574	1					
ANR	10485779	ExpressionStatement	result -> aspect_x = params -> aspect_x	845:4:26981:27016	10485574	8	True				
ANR	10485780	AssignmentExpression	result -> aspect_x = params -> aspect_x		10485574	0		=			
ANR	10485781	PtrMemberAccess	result -> aspect_x		10485574	0					
ANR	10485782	Identifier	result		10485574	0					
ANR	10485783	Identifier	aspect_x		10485574	1					
ANR	10485784	PtrMemberAccess	params -> aspect_x		10485574	1					
ANR	10485785	Identifier	params		10485574	0					
ANR	10485786	Identifier	aspect_x		10485574	1					
ANR	10485787	ExpressionStatement	result -> aspect_y = params -> aspect_y	846:4:27022:27057	10485574	9	True				
ANR	10485788	AssignmentExpression	result -> aspect_y = params -> aspect_y		10485574	0		=			
ANR	10485789	PtrMemberAccess	result -> aspect_y		10485574	0					
ANR	10485790	Identifier	result		10485574	0					
ANR	10485791	Identifier	aspect_y		10485574	1					
ANR	10485792	PtrMemberAccess	params -> aspect_y		10485574	1					
ANR	10485793	Identifier	params		10485574	0					
ANR	10485794	Identifier	aspect_y		10485574	1					
ANR	10485795	ExpressionStatement	result -> ehi = ( int ) ( 0.6 * ( 1 << ETS_SHIFT ) / ( params -> levels - 1 ) )	848:4:27064:27130	10485574	10	True				
ANR	10485796	AssignmentExpression	result -> ehi = ( int ) ( 0.6 * ( 1 << ETS_SHIFT ) / ( params -> levels - 1 ) )		10485574	0		=			
ANR	10485797	PtrMemberAccess	result -> ehi		10485574	0					
ANR	10485798	Identifier	result		10485574	0					
ANR	10485799	Identifier	ehi		10485574	1					
ANR	10485800	CastExpression	( int ) ( 0.6 * ( 1 << ETS_SHIFT ) / ( params -> levels - 1 ) )		10485574	1					
ANR	10485801	CastTarget	int		10485574	0					
ANR	10485802	MultiplicativeExpression	0.6 * ( 1 << ETS_SHIFT ) / ( params -> levels - 1 )		10485574	1		*			
ANR	10485803	PrimaryExpression	0.6		10485574	0					
ANR	10485804	MultiplicativeExpression	( 1 << ETS_SHIFT ) / ( params -> levels - 1 )		10485574	1		/			
ANR	10485805	ShiftExpression	1 << ETS_SHIFT		10485574	0		<<			
ANR	10485806	PrimaryExpression	1		10485574	0					
ANR	10485807	Identifier	ETS_SHIFT		10485574	1					
ANR	10485808	AdditiveExpression	params -> levels - 1		10485574	1		-			
ANR	10485809	PtrMemberAccess	params -> levels		10485574	0					
ANR	10485810	Identifier	params		10485574	0					
ANR	10485811	Identifier	levels		10485574	1					
ANR	10485812	PrimaryExpression	1		10485574	1					
ANR	10485813	ExpressionStatement	result -> elo = - result -> ehi	849:4:27136:27162	10485574	11	True				
ANR	10485814	AssignmentExpression	result -> elo = - result -> ehi		10485574	0		=			
ANR	10485815	PtrMemberAccess	result -> elo		10485574	0					
ANR	10485816	Identifier	result		10485574	0					
ANR	10485817	Identifier	elo		10485574	1					
ANR	10485818	UnaryOperationExpression	- result -> ehi		10485574	1					
ANR	10485819	UnaryOperator	-		10485574	0					
ANR	10485820	PtrMemberAccess	result -> ehi		10485574	1					
ANR	10485821	Identifier	result		10485574	0					
ANR	10485822	Identifier	ehi		10485574	1					
ANR	10485823	ExpressionStatement	result -> strengths = ( int * ) malloc ( sizeof ( int ) * n_planes )	851:4:27169:27226	10485574	12	True				
ANR	10485824	AssignmentExpression	result -> strengths = ( int * ) malloc ( sizeof ( int ) * n_planes )		10485574	0		=			
ANR	10485825	PtrMemberAccess	result -> strengths		10485574	0					
ANR	10485826	Identifier	result		10485574	0					
ANR	10485827	Identifier	strengths		10485574	1					
ANR	10485828	CastExpression	( int * ) malloc ( sizeof ( int ) * n_planes )		10485574	1					
ANR	10485829	CastTarget	int *		10485574	0					
ANR	10485830	CallExpression	malloc ( sizeof ( int ) * n_planes )		10485574	1					
ANR	10485831	Callee	malloc		10485574	0					
ANR	10485832	Identifier	malloc		10485574	0					
ANR	10485833	ArgumentList	sizeof ( int ) * n_planes		10485574	1					
ANR	10485834	Argument	sizeof ( int ) * n_planes		10485574	0					
ANR	10485835	MultiplicativeExpression	sizeof ( int ) * n_planes		10485574	0		*			
ANR	10485836	SizeofExpression	sizeof ( int )		10485574	0					
ANR	10485837	Sizeof	sizeof		10485574	0					
ANR	10485838	SizeofOperand	int		10485574	1					
ANR	10485839	Identifier	n_planes		10485574	1					
ANR	10485840	ExpressionStatement	"memcpy ( result -> strengths , params -> strengths , sizeof ( int ) * n_planes )"	852:4:27232:27312	10485574	13	True				
ANR	10485841	CallExpression	"memcpy ( result -> strengths , params -> strengths , sizeof ( int ) * n_planes )"		10485574	0					
ANR	10485842	Callee	memcpy		10485574	0					
ANR	10485843	Identifier	memcpy		10485574	0					
ANR	10485844	ArgumentList	result -> strengths		10485574	1					
ANR	10485845	Argument	result -> strengths		10485574	0					
ANR	10485846	PtrMemberAccess	result -> strengths		10485574	0					
ANR	10485847	Identifier	result		10485574	0					
ANR	10485848	Identifier	strengths		10485574	1					
ANR	10485849	Argument	params -> strengths		10485574	1					
ANR	10485850	PtrMemberAccess	params -> strengths		10485574	0					
ANR	10485851	Identifier	params		10485574	0					
ANR	10485852	Identifier	strengths		10485574	1					
ANR	10485853	Argument	sizeof ( int ) * n_planes		10485574	2					
ANR	10485854	MultiplicativeExpression	sizeof ( int ) * n_planes		10485574	0		*			
ANR	10485855	SizeofExpression	sizeof ( int )		10485574	0					
ANR	10485856	Sizeof	sizeof		10485574	0					
ANR	10485857	SizeofOperand	int		10485574	1					
ANR	10485858	Identifier	n_planes		10485574	1					
ANR	10485859	ExpressionStatement	result -> ets_style = params -> ets_style	855:4:27319:27356	10485574	14	True				
ANR	10485860	AssignmentExpression	result -> ets_style = params -> ets_style		10485574	0		=			
ANR	10485861	PtrMemberAccess	result -> ets_style		10485574	0					
ANR	10485862	Identifier	result		10485574	0					
ANR	10485863	Identifier	ets_style		10485574	1					
ANR	10485864	PtrMemberAccess	params -> ets_style		10485574	1					
ANR	10485865	Identifier	params		10485574	0					
ANR	10485866	Identifier	ets_style		10485574	1					
ANR	10485867	ExpressionStatement	result -> r_style = params -> r_style	856:4:27362:27395	10485574	15	True				
ANR	10485868	AssignmentExpression	result -> r_style = params -> r_style		10485574	0		=			
ANR	10485869	PtrMemberAccess	result -> r_style		10485574	0					
ANR	10485870	Identifier	result		10485574	0					
ANR	10485871	Identifier	r_style		10485574	1					
ANR	10485872	PtrMemberAccess	params -> r_style		10485574	1					
ANR	10485873	Identifier	params		10485574	0					
ANR	10485874	Identifier	r_style		10485574	1					
ANR	10485875	ExpressionStatement	"result -> c_line = ( int * ) calloc ( params -> width , sizeof ( int ) )"	858:4:27402:27460	10485574	16	True				
ANR	10485876	AssignmentExpression	"result -> c_line = ( int * ) calloc ( params -> width , sizeof ( int ) )"		10485574	0		=			
ANR	10485877	PtrMemberAccess	result -> c_line		10485574	0					
ANR	10485878	Identifier	result		10485574	0					
ANR	10485879	Identifier	c_line		10485574	1					
ANR	10485880	CastExpression	"( int * ) calloc ( params -> width , sizeof ( int ) )"		10485574	1					
ANR	10485881	CastTarget	int *		10485574	0					
ANR	10485882	CallExpression	"calloc ( params -> width , sizeof ( int ) )"		10485574	1					
ANR	10485883	Callee	calloc		10485574	0					
ANR	10485884	Identifier	calloc		10485574	0					
ANR	10485885	ArgumentList	params -> width		10485574	1					
ANR	10485886	Argument	params -> width		10485574	0					
ANR	10485887	PtrMemberAccess	params -> width		10485574	0					
ANR	10485888	Identifier	params		10485574	0					
ANR	10485889	Identifier	width		10485574	1					
ANR	10485890	Argument	sizeof ( int )		10485574	1					
ANR	10485891	SizeofExpression	sizeof ( int )		10485574	0					
ANR	10485892	Sizeof	sizeof		10485574	0					
ANR	10485893	SizeofOperand	int		10485574	1					
ANR	10485894	ExpressionStatement	result -> seed1 = 0x5324879f	860:4:27467:27493	10485574	17	True				
ANR	10485895	AssignmentExpression	result -> seed1 = 0x5324879f		10485574	0		=			
ANR	10485896	PtrMemberAccess	result -> seed1		10485574	0					
ANR	10485897	Identifier	result		10485574	0					
ANR	10485898	Identifier	seed1		10485574	1					
ANR	10485899	PrimaryExpression	0x5324879f		10485574	1					
ANR	10485900	ExpressionStatement	result -> seed2 = 0xb78d0945	861:4:27499:27525	10485574	18	True				
ANR	10485901	AssignmentExpression	result -> seed2 = 0xb78d0945		10485574	0		=			
ANR	10485902	PtrMemberAccess	result -> seed2		10485574	0					
ANR	10485903	Identifier	result		10485574	0					
ANR	10485904	Identifier	seed2		10485574	1					
ANR	10485905	PrimaryExpression	0xb78d0945		10485574	1					
ANR	10485906	ExpressionStatement	result -> dump_file = params -> dump_file	863:4:27532:27569	10485574	19	True				
ANR	10485907	AssignmentExpression	result -> dump_file = params -> dump_file		10485574	0		=			
ANR	10485908	PtrMemberAccess	result -> dump_file		10485574	0					
ANR	10485909	Identifier	result		10485574	0					
ANR	10485910	Identifier	dump_file		10485574	1					
ANR	10485911	PtrMemberAccess	params -> dump_file		10485574	1					
ANR	10485912	Identifier	params		10485574	0					
ANR	10485913	Identifier	dump_file		10485574	1					
ANR	10485914	ExpressionStatement	result -> dump_level = params -> dump_level	864:4:27575:27614	10485574	20	True				
ANR	10485915	AssignmentExpression	result -> dump_level = params -> dump_level		10485574	0		=			
ANR	10485916	PtrMemberAccess	result -> dump_level		10485574	0					
ANR	10485917	Identifier	result		10485574	0					
ANR	10485918	Identifier	dump_level		10485574	1					
ANR	10485919	PtrMemberAccess	params -> dump_level		10485574	1					
ANR	10485920	Identifier	params		10485574	0					
ANR	10485921	Identifier	dump_level		10485574	1					
ANR	10485922	ExpressionStatement	result -> plane_ctx = ( ETS_PlaneCtx * * ) malloc ( sizeof ( ETS_PlaneCtx * ) * n_planes )	866:4:27621:27699	10485574	21	True				
ANR	10485923	AssignmentExpression	result -> plane_ctx = ( ETS_PlaneCtx * * ) malloc ( sizeof ( ETS_PlaneCtx * ) * n_planes )		10485574	0		=			
ANR	10485924	PtrMemberAccess	result -> plane_ctx		10485574	0					
ANR	10485925	Identifier	result		10485574	0					
ANR	10485926	Identifier	plane_ctx		10485574	1					
ANR	10485927	CastExpression	( ETS_PlaneCtx * * ) malloc ( sizeof ( ETS_PlaneCtx * ) * n_planes )		10485574	1					
ANR	10485928	CastTarget	ETS_PlaneCtx * *		10485574	0					
ANR	10485929	CallExpression	malloc ( sizeof ( ETS_PlaneCtx * ) * n_planes )		10485574	1					
ANR	10485930	Callee	malloc		10485574	0					
ANR	10485931	Identifier	malloc		10485574	0					
ANR	10485932	ArgumentList	sizeof ( ETS_PlaneCtx * ) * n_planes		10485574	1					
ANR	10485933	Argument	sizeof ( ETS_PlaneCtx * ) * n_planes		10485574	0					
ANR	10485934	MultiplicativeExpression	sizeof ( ETS_PlaneCtx * ) * n_planes		10485574	0		*			
ANR	10485935	SizeofExpression	sizeof ( ETS_PlaneCtx * )		10485574	0					
ANR	10485936	Sizeof	sizeof		10485574	0					
ANR	10485937	SizeofOperand	ETS_PlaneCtx *		10485574	1					
ANR	10485938	Identifier	n_planes		10485574	1					
ANR	10485939	ForStatement	for ( i = 0 ; i < n_planes ; i ++ )		10485574	22					
ANR	10485940	ForInit	i = 0 ;	867:9:27710:27715	10485574	0	True				
ANR	10485941	AssignmentExpression	i = 0		10485574	0		=			
ANR	10485942	Identifier	i		10485574	0					
ANR	10485943	PrimaryExpression	0		10485574	1					
ANR	10485944	Condition	i < n_planes	867:16:27717:27728	10485574	1	True				
ANR	10485945	RelationalExpression	i < n_planes		10485574	0		<			
ANR	10485946	Identifier	i		10485574	0					
ANR	10485947	Identifier	n_planes		10485574	1					
ANR	10485948	PostIncDecOperationExpression	i ++	867:30:27731:27733	10485574	2	True				
ANR	10485949	Identifier	i		10485574	0					
ANR	10485950	IncDec	++		10485574	1					
ANR	10485951	ExpressionStatement	"result -> plane_ctx [ i ] = ets_plane_new ( params , result , i )"	868:8:27744:27799	10485574	3	True				
ANR	10485952	AssignmentExpression	"result -> plane_ctx [ i ] = ets_plane_new ( params , result , i )"		10485574	0		=			
ANR	10485953	ArrayIndexing	result -> plane_ctx [ i ]		10485574	0					
ANR	10485954	PtrMemberAccess	result -> plane_ctx		10485574	0					
ANR	10485955	Identifier	result		10485574	0					
ANR	10485956	Identifier	plane_ctx		10485574	1					
ANR	10485957	Identifier	i		10485574	1					
ANR	10485958	CallExpression	"ets_plane_new ( params , result , i )"		10485574	1					
ANR	10485959	Callee	ets_plane_new		10485574	0					
ANR	10485960	Identifier	ets_plane_new		10485574	0					
ANR	10485961	ArgumentList	params		10485574	1					
ANR	10485962	Argument	params		10485574	0					
ANR	10485963	Identifier	params		10485574	0					
ANR	10485964	Argument	result		10485574	1					
ANR	10485965	Identifier	result		10485574	0					
ANR	10485966	Argument	i		10485574	2					
ANR	10485967	Identifier	i		10485574	0					
ANR	10485968	ExpressionStatement	result -> y = 0	869:4:27805:27818	10485574	23	True				
ANR	10485969	AssignmentExpression	result -> y = 0		10485574	0		=			
ANR	10485970	PtrMemberAccess	result -> y		10485574	0					
ANR	10485971	Identifier	result		10485574	0					
ANR	10485972	Identifier	y		10485574	1					
ANR	10485973	PrimaryExpression	0		10485574	1					
ANR	10485974	ExpressionStatement	result -> tmmat = tmmat	870:4:27824:27845	10485574	24	True				
ANR	10485975	AssignmentExpression	result -> tmmat = tmmat		10485574	0		=			
ANR	10485976	PtrMemberAccess	result -> tmmat		10485574	0					
ANR	10485977	Identifier	result		10485574	0					
ANR	10485978	Identifier	tmmat		10485574	1					
ANR	10485979	Identifier	tmmat		10485574	1					
ANR	10485980	ExpressionStatement	result -> tmwid = TM_WIDTH	871:4:27851:27875	10485574	25	True				
ANR	10485981	AssignmentExpression	result -> tmwid = TM_WIDTH		10485574	0		=			
ANR	10485982	PtrMemberAccess	result -> tmwid		10485574	0					
ANR	10485983	Identifier	result		10485574	0					
ANR	10485984	Identifier	tmwid		10485574	1					
ANR	10485985	Identifier	TM_WIDTH		10485574	1					
ANR	10485986	ExpressionStatement	result -> tmheight = TM_HEIGHT	872:4:27881:27909	10485574	26	True				
ANR	10485987	AssignmentExpression	result -> tmheight = TM_HEIGHT		10485574	0		=			
ANR	10485988	PtrMemberAccess	result -> tmheight		10485574	0					
ANR	10485989	Identifier	result		10485574	0					
ANR	10485990	Identifier	tmheight		10485574	1					
ANR	10485991	Identifier	TM_HEIGHT		10485574	1					
ANR	10485992	ReturnStatement	return result ;	873:4:27915:27928	10485574	27	True				
ANR	10485993	Identifier	result		10485574	0					
ANR	10485994	ReturnType	ETS_Ctx *		10485574	1					
ANR	10485995	Identifier	ets_new		10485574	2					
ANR	10485996	ParameterList	const ETS_Params * params		10485574	3					
ANR	10485997	Parameter	const ETS_Params * params	811:8:25973:25996	10485574	0	True				
ANR	10485998	ParameterType	const ETS_Params *		10485574	0					
ANR	10485999	Identifier	params		10485574	1					
ANR	10486000	CFGEntryNode	ENTRY		10485574		True				
ANR	10486001	CFGExitNode	EXIT		10485574		True				
ANR	10486002	Symbol	result -> dump_file		10485574						
ANR	10486003	Symbol	result -> y		10485574						
ANR	10486004	Symbol	* * params		10485574						
ANR	10486005	Symbol	using_vectors		10485574						
ANR	10486006	Symbol	params -> ets_style		10485574						
ANR	10486007	Symbol	result -> dump_level		10485574						
ANR	10486008	Symbol	result -> tmmat		10485574						
ANR	10486009	Symbol	result -> c_line		10485574						
ANR	10486010	Symbol	params -> dump_level		10485574						
ANR	10486011	Symbol	params -> strengths		10485574						
ANR	10486012	Symbol	ets_plane_new		10485574						
ANR	10486013	Symbol	* * result		10485574						
ANR	10486014	Symbol	params -> aspect_y		10485574						
ANR	10486015	Symbol	params -> aspect_x		10485574						
ANR	10486016	Symbol	params		10485574						
ANR	10486017	Symbol	ETS_DUMP_LUTS		10485574						
ANR	10486018	Symbol	result -> tmheight		10485574						
ANR	10486019	Symbol	* header		10485574						
ANR	10486020	Symbol	ETS_SHIFT		10485574						
ANR	10486021	Symbol	result -> elo		10485574						
ANR	10486022	Symbol	result -> ehi		10485574						
ANR	10486023	Symbol	result -> tmwid		10485574						
ANR	10486024	Symbol	params -> dump_file		10485574						
ANR	10486025	Symbol	header		10485574						
ANR	10486026	Symbol	params -> n_planes		10485574						
ANR	10486027	Symbol	params -> width		10485574						
ANR	10486028	Symbol	ETS_VERSION		10485574						
ANR	10486029	Symbol	* params -> luts		10485574						
ANR	10486030	Symbol	TM_HEIGHT		10485574						
ANR	10486031	Symbol	result -> levels		10485574						
ANR	10486032	Symbol	result -> aspect_x		10485574						
ANR	10486033	Symbol	result -> aspect_y		10485574						
ANR	10486034	Symbol	calloc		10485574						
ANR	10486035	Symbol	TM_WIDTH		10485574						
ANR	10486036	Symbol	result -> strengths		10485574						
ANR	10486037	Symbol	result		10485574						
ANR	10486038	Symbol	* result -> plane_ctx		10485574						
ANR	10486039	Symbol	result -> r_style		10485574						
ANR	10486040	Symbol	tmmat		10485574						
ANR	10486041	Symbol	* result		10485574						
ANR	10486042	Symbol	result -> seed2		10485574						
ANR	10486043	Symbol	result -> seed1		10485574						
ANR	10486044	Symbol	params -> r_style		10485574						
ANR	10486045	Symbol	* params		10485574						
ANR	10486046	Symbol	malloc		10485574						
ANR	10486047	Symbol	ETS_SRC_MAX		10485574						
ANR	10486048	Symbol	ETS_DUMP_PARAMS		10485574						
ANR	10486049	Symbol	n_planes		10485574						
ANR	10486050	Symbol	i		10485574						
ANR	10486051	Symbol	params -> luts		10485574						
ANR	10486052	Symbol	params -> levels		10485574						
ANR	10486053	Symbol	* i		10485574						
ANR	10486054	Symbol	result -> ets_style		10485574						
ANR	10486055	Symbol	result -> plane_ctx		10485574						
ANR	10486056	Symbol	result -> width		10485574						
ANR	10486057	Symbol	result -> n_planes		10485574						
ANR	10486058	Function	ets_free	882:0:28058:28360							
ANR	10486059	FunctionDef	ets_free (ETS_Ctx * ctx)		10486058	0					
ANR	10486060	CompoundStatement		884:0:28086:28360	10486058	0					
ANR	10486061	IdentifierDeclStatement	int i ;	885:4:28092:28097	10486058	0	True				
ANR	10486062	IdentifierDecl	i		10486058	0					
ANR	10486063	IdentifierDeclType	int		10486058	0					
ANR	10486064	Identifier	i		10486058	1					
ANR	10486065	IdentifierDeclStatement	int n_planes = ctx -> n_planes ;	886:4:28103:28131	10486058	1	True				
ANR	10486066	IdentifierDecl	n_planes = ctx -> n_planes		10486058	0					
ANR	10486067	IdentifierDeclType	int		10486058	0					
ANR	10486068	Identifier	n_planes		10486058	1					
ANR	10486069	AssignmentExpression	n_planes = ctx -> n_planes		10486058	2		=			
ANR	10486070	Identifier	n_planes		10486058	0					
ANR	10486071	PtrMemberAccess	ctx -> n_planes		10486058	1					
ANR	10486072	Identifier	ctx		10486058	0					
ANR	10486073	Identifier	n_planes		10486058	1					
ANR	10486074	IfStatement	if ( ctx -> dump_file )		10486058	2					
ANR	10486075	Condition	ctx -> dump_file	888:8:28142:28155	10486058	0	True				
ANR	10486076	PtrMemberAccess	ctx -> dump_file		10486058	0					
ANR	10486077	Identifier	ctx		10486058	0					
ANR	10486078	Identifier	dump_file		10486058	1					
ANR	10486079	ExpressionStatement	fclose ( ctx -> dump_file )	889:8:28166:28188	10486058	1	True				
ANR	10486080	CallExpression	fclose ( ctx -> dump_file )		10486058	0					
ANR	10486081	Callee	fclose		10486058	0					
ANR	10486082	Identifier	fclose		10486058	0					
ANR	10486083	ArgumentList	ctx -> dump_file		10486058	1					
ANR	10486084	Argument	ctx -> dump_file		10486058	0					
ANR	10486085	PtrMemberAccess	ctx -> dump_file		10486058	0					
ANR	10486086	Identifier	ctx		10486058	0					
ANR	10486087	Identifier	dump_file		10486058	1					
ANR	10486088	ForStatement	for ( i = 0 ; i < n_planes ; i ++ )		10486058	3					
ANR	10486089	ForInit	i = 0 ;	891:9:28200:28205	10486058	0	True				
ANR	10486090	AssignmentExpression	i = 0		10486058	0		=			
ANR	10486091	Identifier	i		10486058	0					
ANR	10486092	PrimaryExpression	0		10486058	1					
ANR	10486093	Condition	i < n_planes	891:16:28207:28218	10486058	1	True				
ANR	10486094	RelationalExpression	i < n_planes		10486058	0		<			
ANR	10486095	Identifier	i		10486058	0					
ANR	10486096	Identifier	n_planes		10486058	1					
ANR	10486097	PostIncDecOperationExpression	i ++	891:30:28221:28223	10486058	2	True				
ANR	10486098	Identifier	i		10486058	0					
ANR	10486099	IncDec	++		10486058	1					
ANR	10486100	ExpressionStatement	ets_plane_free ( ctx -> plane_ctx [ i ] )	892:8:28234:28267	10486058	3	True				
ANR	10486101	CallExpression	ets_plane_free ( ctx -> plane_ctx [ i ] )		10486058	0					
ANR	10486102	Callee	ets_plane_free		10486058	0					
ANR	10486103	Identifier	ets_plane_free		10486058	0					
ANR	10486104	ArgumentList	ctx -> plane_ctx [ i ]		10486058	1					
ANR	10486105	Argument	ctx -> plane_ctx [ i ]		10486058	0					
ANR	10486106	ArrayIndexing	ctx -> plane_ctx [ i ]		10486058	0					
ANR	10486107	PtrMemberAccess	ctx -> plane_ctx		10486058	0					
ANR	10486108	Identifier	ctx		10486058	0					
ANR	10486109	Identifier	plane_ctx		10486058	1					
ANR	10486110	Identifier	i		10486058	1					
ANR	10486111	ExpressionStatement	free ( ctx -> plane_ctx )	893:4:28273:28293	10486058	4	True				
ANR	10486112	CallExpression	free ( ctx -> plane_ctx )		10486058	0					
ANR	10486113	Callee	free		10486058	0					
ANR	10486114	Identifier	free		10486058	0					
ANR	10486115	ArgumentList	ctx -> plane_ctx		10486058	1					
ANR	10486116	Argument	ctx -> plane_ctx		10486058	0					
ANR	10486117	PtrMemberAccess	ctx -> plane_ctx		10486058	0					
ANR	10486118	Identifier	ctx		10486058	0					
ANR	10486119	Identifier	plane_ctx		10486058	1					
ANR	10486120	ExpressionStatement	free ( ctx -> strengths )	894:4:28299:28319	10486058	5	True				
ANR	10486121	CallExpression	free ( ctx -> strengths )		10486058	0					
ANR	10486122	Callee	free		10486058	0					
ANR	10486123	Identifier	free		10486058	0					
ANR	10486124	ArgumentList	ctx -> strengths		10486058	1					
ANR	10486125	Argument	ctx -> strengths		10486058	0					
ANR	10486126	PtrMemberAccess	ctx -> strengths		10486058	0					
ANR	10486127	Identifier	ctx		10486058	0					
ANR	10486128	Identifier	strengths		10486058	1					
ANR	10486129	ExpressionStatement	free ( ctx -> c_line )	895:4:28325:28342	10486058	6	True				
ANR	10486130	CallExpression	free ( ctx -> c_line )		10486058	0					
ANR	10486131	Callee	free		10486058	0					
ANR	10486132	Identifier	free		10486058	0					
ANR	10486133	ArgumentList	ctx -> c_line		10486058	1					
ANR	10486134	Argument	ctx -> c_line		10486058	0					
ANR	10486135	PtrMemberAccess	ctx -> c_line		10486058	0					
ANR	10486136	Identifier	ctx		10486058	0					
ANR	10486137	Identifier	c_line		10486058	1					
ANR	10486138	ExpressionStatement	free ( ctx )	897:4:28349:28358	10486058	7	True				
ANR	10486139	CallExpression	free ( ctx )		10486058	0					
ANR	10486140	Callee	free		10486058	0					
ANR	10486141	Identifier	free		10486058	0					
ANR	10486142	ArgumentList	ctx		10486058	1					
ANR	10486143	Argument	ctx		10486058	0					
ANR	10486144	Identifier	ctx		10486058	0					
ANR	10486145	ReturnType	void		10486058	1					
ANR	10486146	Identifier	ets_free		10486058	2					
ANR	10486147	ParameterList	ETS_Ctx * ctx		10486058	3					
ANR	10486148	Parameter	ETS_Ctx * ctx	883:9:28072:28083	10486058	0	True				
ANR	10486149	ParameterType	ETS_Ctx *		10486058	0					
ANR	10486150	Identifier	ctx		10486058	1					
ANR	10486151	CFGEntryNode	ENTRY		10486058		True				
ANR	10486152	CFGExitNode	EXIT		10486058		True				
ANR	10486153	Symbol	ctx -> strengths		10486058						
ANR	10486154	Symbol	* i		10486058						
ANR	10486155	Symbol	ctx		10486058						
ANR	10486156	Symbol	n_planes		10486058						
ANR	10486157	Symbol	ctx -> c_line		10486058						
ANR	10486158	Symbol	i		10486058						
ANR	10486159	Symbol	ctx -> plane_ctx		10486058						
ANR	10486160	Symbol	* ctx -> plane_ctx		10486058						
ANR	10486161	Symbol	* * ctx		10486058						
ANR	10486162	Symbol	ctx -> dump_file		10486058						
ANR	10486163	Symbol	ctx -> n_planes		10486058						
ANR	10486164	Symbol	* ctx		10486058						
