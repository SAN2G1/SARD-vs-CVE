command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4974584	File	data/converged/CVE-2018-16863_ghostpdl/gsbitcom.c								
ANR	4974585	DeclStmt									
ANR	4974586	Decl							const byte	const byte [ 16 ]	half_byte_1s
ANR	4974587	DeclStmt									
ANR	4974588	Decl							const byte	const byte [ 32 ]	bits5_trailing_1s
ANR	4974589	DeclStmt									
ANR	4974590	Decl							const byte	const byte [ 32 ]	bits5_leading_1s
ANR	4974591	DeclStmt									
ANR	4974592	Decl							const byte	const byte [ 3 ]	compress_1_1
ANR	4974593	DeclStmt									
ANR	4974594	Decl							const byte	const byte [ 5 ]	compress_2_1
ANR	4974595	DeclStmt									
ANR	4974596	Decl							const byte	const byte [ 5 ]	compress_2_2
ANR	4974597	DeclStmt									
ANR	4974598	Decl							const byte	const byte [ 9 ]	compress_3_1
ANR	4974599	DeclStmt									
ANR	4974600	Decl							const byte	const byte [ 9 ]	compress_3_2
ANR	4974601	DeclStmt									
ANR	4974602	Decl							const byte	const byte [ 17 ]	compress_4_1
ANR	4974603	DeclStmt									
ANR	4974604	Decl							const byte	const byte [ 17 ]	compress_4_2
ANR	4974605	DeclStmt									
ANR	4974606	Decl							const byte	const byte [ 17 ]	compress_4_4
ANR	4974607	Function	bits_compress_scaled	97:0:3188:11695							
ANR	4974608	FunctionDef	"bits_compress_scaled (const byte * src , int srcx , uint width , uint height , uint sraster , byte * dest , uint draster , const gs_log2_scale_point * plog2_scale , int log2_out_bits)"		4974607	0					
ANR	4974609	CompoundStatement		101:0:3409:11695	4974607	0					
ANR	4974610	IdentifierDeclStatement	"int log2_x = plog2_scale -> x , log2_y = plog2_scale -> y ;"	102:4:3415:3467	4974607	0	True				
ANR	4974611	IdentifierDecl	log2_x = plog2_scale -> x		4974607	0					
ANR	4974612	IdentifierDeclType	int		4974607	0					
ANR	4974613	Identifier	log2_x		4974607	1					
ANR	4974614	AssignmentExpression	log2_x = plog2_scale -> x		4974607	2		=			
ANR	4974615	Identifier	log2_x		4974607	0					
ANR	4974616	PtrMemberAccess	plog2_scale -> x		4974607	1					
ANR	4974617	Identifier	plog2_scale		4974607	0					
ANR	4974618	Identifier	x		4974607	1					
ANR	4974619	IdentifierDecl	log2_y = plog2_scale -> y		4974607	1					
ANR	4974620	IdentifierDeclType	int		4974607	0					
ANR	4974621	Identifier	log2_y		4974607	1					
ANR	4974622	AssignmentExpression	log2_y = plog2_scale -> y		4974607	2		=			
ANR	4974623	Identifier	log2_y		4974607	0					
ANR	4974624	PtrMemberAccess	plog2_scale -> y		4974607	1					
ANR	4974625	Identifier	plog2_scale		4974607	0					
ANR	4974626	Identifier	y		4974607	1					
ANR	4974627	IdentifierDeclStatement	int xscale = 1 << log2_x ;	103:4:3473:3497	4974607	1	True				
ANR	4974628	IdentifierDecl	xscale = 1 << log2_x		4974607	0					
ANR	4974629	IdentifierDeclType	int		4974607	0					
ANR	4974630	Identifier	xscale		4974607	1					
ANR	4974631	AssignmentExpression	xscale = 1 << log2_x		4974607	2		=			
ANR	4974632	Identifier	xscale		4974607	0					
ANR	4974633	ShiftExpression	1 << log2_x		4974607	1		<<			
ANR	4974634	PrimaryExpression	1		4974607	0					
ANR	4974635	Identifier	log2_x		4974607	1					
ANR	4974636	IdentifierDeclStatement	int yscale = 1 << log2_y ;	104:4:3503:3527	4974607	2	True				
ANR	4974637	IdentifierDecl	yscale = 1 << log2_y		4974607	0					
ANR	4974638	IdentifierDeclType	int		4974607	0					
ANR	4974639	Identifier	yscale		4974607	1					
ANR	4974640	AssignmentExpression	yscale = 1 << log2_y		4974607	2		=			
ANR	4974641	Identifier	yscale		4974607	0					
ANR	4974642	ShiftExpression	1 << log2_y		4974607	1		<<			
ANR	4974643	PrimaryExpression	1		4974607	0					
ANR	4974644	Identifier	log2_y		4974607	1					
ANR	4974645	IdentifierDeclStatement	int out_bits = 1 << log2_out_bits ;	105:4:3533:3566	4974607	3	True				
ANR	4974646	IdentifierDecl	out_bits = 1 << log2_out_bits		4974607	0					
ANR	4974647	IdentifierDeclType	int		4974607	0					
ANR	4974648	Identifier	out_bits		4974607	1					
ANR	4974649	AssignmentExpression	out_bits = 1 << log2_out_bits		4974607	2		=			
ANR	4974650	Identifier	out_bits		4974607	0					
ANR	4974651	ShiftExpression	1 << log2_out_bits		4974607	1		<<			
ANR	4974652	PrimaryExpression	1		4974607	0					
ANR	4974653	Identifier	log2_out_bits		4974607	1					
ANR	4974654	IdentifierDeclStatement	int input_byte_out_bits = out_bits << ( 3 - log2_x ) ;	112:4:3837:3887	4974607	4	True				
ANR	4974655	IdentifierDecl	input_byte_out_bits = out_bits << ( 3 - log2_x )		4974607	0					
ANR	4974656	IdentifierDeclType	int		4974607	0					
ANR	4974657	Identifier	input_byte_out_bits		4974607	1					
ANR	4974658	AssignmentExpression	input_byte_out_bits = out_bits << ( 3 - log2_x )		4974607	2		=			
ANR	4974659	Identifier	input_byte_out_bits		4974607	0					
ANR	4974660	ShiftExpression	out_bits << ( 3 - log2_x )		4974607	1		<<			
ANR	4974661	Identifier	out_bits		4974607	0					
ANR	4974662	AdditiveExpression	3 - log2_x		4974607	1		-			
ANR	4974663	PrimaryExpression	3		4974607	0					
ANR	4974664	Identifier	log2_x		4974607	1					
ANR	4974665	IdentifierDeclStatement	byte input_byte_out_mask = ( 1 << input_byte_out_bits ) - 1 ;	113:4:3893:3950	4974607	5	True				
ANR	4974666	IdentifierDecl	input_byte_out_mask = ( 1 << input_byte_out_bits ) - 1		4974607	0					
ANR	4974667	IdentifierDeclType	byte		4974607	0					
ANR	4974668	Identifier	input_byte_out_mask		4974607	1					
ANR	4974669	AssignmentExpression	input_byte_out_mask = ( 1 << input_byte_out_bits ) - 1		4974607	2		=			
ANR	4974670	Identifier	input_byte_out_mask		4974607	0					
ANR	4974671	AdditiveExpression	( 1 << input_byte_out_bits ) - 1		4974607	1		-			
ANR	4974672	ShiftExpression	1 << input_byte_out_bits		4974607	0		<<			
ANR	4974673	PrimaryExpression	1		4974607	0					
ANR	4974674	Identifier	input_byte_out_bits		4974607	1					
ANR	4974675	PrimaryExpression	1		4974607	1					
ANR	4974676	IdentifierDeclStatement	const byte * table = compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ] ;	114:4:3956:4035	4974607	6	True				
ANR	4974677	IdentifierDecl	* table = compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ]		4974607	0					
ANR	4974678	IdentifierDeclType	const byte *		4974607	0					
ANR	4974679	Identifier	table		4974607	1					
ANR	4974680	AssignmentExpression	* table = compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ]		4974607	2		=			
ANR	4974681	Identifier	table		4974607	0					
ANR	4974682	ArrayIndexing	compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ]		4974607	1					
ANR	4974683	ArrayIndexing	compress_tables [ log2_out_bits ]		4974607	0					
ANR	4974684	Identifier	compress_tables		4974607	0					
ANR	4974685	Identifier	log2_out_bits		4974607	1					
ANR	4974686	AdditiveExpression	log2_x + log2_y - 1		4974607	1		+			
ANR	4974687	Identifier	log2_x		4974607	0					
ANR	4974688	AdditiveExpression	log2_y - 1		4974607	1		-			
ANR	4974689	Identifier	log2_y		4974607	0					
ANR	4974690	PrimaryExpression	1		4974607	1					
ANR	4974691	IdentifierDeclStatement	uint sskip = sraster << log2_y ;	116:4:4041:4071	4974607	7	True				
ANR	4974692	IdentifierDecl	sskip = sraster << log2_y		4974607	0					
ANR	4974693	IdentifierDeclType	uint		4974607	0					
ANR	4974694	Identifier	sskip		4974607	1					
ANR	4974695	AssignmentExpression	sskip = sraster << log2_y		4974607	2		=			
ANR	4974696	Identifier	sskip		4974607	0					
ANR	4974697	ShiftExpression	sraster << log2_y		4974607	1		<<			
ANR	4974698	Identifier	sraster		4974607	0					
ANR	4974699	Identifier	log2_y		4974607	1					
ANR	4974700	IdentifierDeclStatement	uint dwidth = ( width >> log2_x ) << log2_out_bits ;	117:4:4077:4125	4974607	8	True				
ANR	4974701	IdentifierDecl	dwidth = ( width >> log2_x ) << log2_out_bits		4974607	0					
ANR	4974702	IdentifierDeclType	uint		4974607	0					
ANR	4974703	Identifier	dwidth		4974607	1					
ANR	4974704	AssignmentExpression	dwidth = ( width >> log2_x ) << log2_out_bits		4974607	2		=			
ANR	4974705	Identifier	dwidth		4974607	0					
ANR	4974706	ShiftExpression	( width >> log2_x ) << log2_out_bits		4974607	1		<<			
ANR	4974707	ShiftExpression	width >> log2_x		4974607	0		>>			
ANR	4974708	Identifier	width		4974607	0					
ANR	4974709	Identifier	log2_x		4974607	1					
ANR	4974710	Identifier	log2_out_bits		4974607	1					
ANR	4974711	IdentifierDeclStatement	uint dskip = draster - ( ( dwidth + 7 ) >> 3 ) ;	118:4:4131:4173	4974607	9	True				
ANR	4974712	IdentifierDecl	dskip = draster - ( ( dwidth + 7 ) >> 3 )		4974607	0					
ANR	4974713	IdentifierDeclType	uint		4974607	0					
ANR	4974714	Identifier	dskip		4974607	1					
ANR	4974715	AssignmentExpression	dskip = draster - ( ( dwidth + 7 ) >> 3 )		4974607	2		=			
ANR	4974716	Identifier	dskip		4974607	0					
ANR	4974717	AdditiveExpression	draster - ( ( dwidth + 7 ) >> 3 )		4974607	1		-			
ANR	4974718	Identifier	draster		4974607	0					
ANR	4974719	ShiftExpression	( dwidth + 7 ) >> 3		4974607	1		>>			
ANR	4974720	AdditiveExpression	dwidth + 7		4974607	0		+			
ANR	4974721	Identifier	dwidth		4974607	0					
ANR	4974722	PrimaryExpression	7		4974607	1					
ANR	4974723	PrimaryExpression	3		4974607	1					
ANR	4974724	IdentifierDeclStatement	uint mask = ( 1 << xscale ) - 1 ;	119:4:4179:4208	4974607	10	True				
ANR	4974725	IdentifierDecl	mask = ( 1 << xscale ) - 1		4974607	0					
ANR	4974726	IdentifierDeclType	uint		4974607	0					
ANR	4974727	Identifier	mask		4974607	1					
ANR	4974728	AssignmentExpression	mask = ( 1 << xscale ) - 1		4974607	2		=			
ANR	4974729	Identifier	mask		4974607	0					
ANR	4974730	AdditiveExpression	( 1 << xscale ) - 1		4974607	1		-			
ANR	4974731	ShiftExpression	1 << xscale		4974607	0		<<			
ANR	4974732	PrimaryExpression	1		4974607	0					
ANR	4974733	Identifier	xscale		4974607	1					
ANR	4974734	PrimaryExpression	1		4974607	1					
ANR	4974735	IdentifierDeclStatement	uint count_max = 1 << ( log2_x + log2_y ) ;	120:4:4214:4253	4974607	11	True				
ANR	4974736	IdentifierDecl	count_max = 1 << ( log2_x + log2_y )		4974607	0					
ANR	4974737	IdentifierDeclType	uint		4974607	0					
ANR	4974738	Identifier	count_max		4974607	1					
ANR	4974739	AssignmentExpression	count_max = 1 << ( log2_x + log2_y )		4974607	2		=			
ANR	4974740	Identifier	count_max		4974607	0					
ANR	4974741	ShiftExpression	1 << ( log2_x + log2_y )		4974607	1		<<			
ANR	4974742	PrimaryExpression	1		4974607	0					
ANR	4974743	AdditiveExpression	log2_x + log2_y		4974607	1		+			
ANR	4974744	Identifier	log2_x		4974607	0					
ANR	4974745	Identifier	log2_y		4974607	1					
ANR	4974746	IdentifierDeclStatement	const byte * srow = src + ( srcx >> 3 ) ;	125:4:4378:4414	4974607	12	True				
ANR	4974747	IdentifierDecl	* srow = src + ( srcx >> 3 )		4974607	0					
ANR	4974748	IdentifierDeclType	const byte *		4974607	0					
ANR	4974749	Identifier	srow		4974607	1					
ANR	4974750	AssignmentExpression	* srow = src + ( srcx >> 3 )		4974607	2		=			
ANR	4974751	Identifier	srow		4974607	0					
ANR	4974752	AdditiveExpression	src + ( srcx >> 3 )		4974607	1		+			
ANR	4974753	Identifier	src		4974607	0					
ANR	4974754	ShiftExpression	srcx >> 3		4974607	1		>>			
ANR	4974755	Identifier	srcx		4974607	0					
ANR	4974756	PrimaryExpression	3		4974607	1					
ANR	4974757	IdentifierDeclStatement	int in_shift_initial = 8 - xscale - ( srcx & 7 ) ;	126:4:4420:4466	4974607	13	True				
ANR	4974758	IdentifierDecl	in_shift_initial = 8 - xscale - ( srcx & 7 )		4974607	0					
ANR	4974759	IdentifierDeclType	int		4974607	0					
ANR	4974760	Identifier	in_shift_initial		4974607	1					
ANR	4974761	AssignmentExpression	in_shift_initial = 8 - xscale - ( srcx & 7 )		4974607	2		=			
ANR	4974762	Identifier	in_shift_initial		4974607	0					
ANR	4974763	AdditiveExpression	8 - xscale - ( srcx & 7 )		4974607	1		-			
ANR	4974764	PrimaryExpression	8		4974607	0					
ANR	4974765	AdditiveExpression	xscale - ( srcx & 7 )		4974607	1		-			
ANR	4974766	Identifier	xscale		4974607	0					
ANR	4974767	BitAndExpression	srcx & 7		4974607	1		&			
ANR	4974768	Identifier	srcx		4974607	0					
ANR	4974769	PrimaryExpression	7		4974607	1					
ANR	4974770	IdentifierDeclStatement	int in_shift_check = ( out_bits <= xscale ? 8 - xscale : - 1 ) ;	127:4:4472:4531	4974607	14	True				
ANR	4974771	IdentifierDecl	in_shift_check = ( out_bits <= xscale ? 8 - xscale : - 1 )		4974607	0					
ANR	4974772	IdentifierDeclType	int		4974607	0					
ANR	4974773	Identifier	in_shift_check		4974607	1					
ANR	4974774	AssignmentExpression	in_shift_check = ( out_bits <= xscale ? 8 - xscale : - 1 )		4974607	2		=			
ANR	4974775	Identifier	in_shift_check		4974607	0					
ANR	4974776	ConditionalExpression	out_bits <= xscale ? 8 - xscale : - 1		4974607	1					
ANR	4974777	Condition	out_bits <= xscale		4974607	0					
ANR	4974778	RelationalExpression	out_bits <= xscale		4974607	0		<=			
ANR	4974779	Identifier	out_bits		4974607	0					
ANR	4974780	Identifier	xscale		4974607	1					
ANR	4974781	AdditiveExpression	8 - xscale		4974607	1		-			
ANR	4974782	PrimaryExpression	8		4974607	0					
ANR	4974783	Identifier	xscale		4974607	1					
ANR	4974784	UnaryOperationExpression	- 1		4974607	2					
ANR	4974785	UnaryOperator	-		4974607	0					
ANR	4974786	PrimaryExpression	1		4974607	1					
ANR	4974787	IdentifierDeclStatement	byte * d = dest ;	128:4:4537:4551	4974607	15	True				
ANR	4974788	IdentifierDecl	* d = dest		4974607	0					
ANR	4974789	IdentifierDeclType	byte *		4974607	0					
ANR	4974790	Identifier	d		4974607	1					
ANR	4974791	AssignmentExpression	* d = dest		4974607	2		=			
ANR	4974792	Identifier	dest		4974607	0					
ANR	4974793	Identifier	dest		4974607	1					
ANR	4974794	IdentifierDeclStatement	uint h ;	129:4:4557:4563	4974607	16	True				
ANR	4974795	IdentifierDecl	h		4974607	0					
ANR	4974796	IdentifierDeclType	uint		4974607	0					
ANR	4974797	Identifier	h		4974607	1					
ANR	4974798	ForStatement	"for ( h = height ; h ; srow += sskip , h -= yscale )"		4974607	17					
ANR	4974799	ForInit	h = height ;	131:9:4575:4585	4974607	0	True				
ANR	4974800	AssignmentExpression	h = height		4974607	0		=			
ANR	4974801	Identifier	h		4974607	0					
ANR	4974802	Identifier	height		4974607	1					
ANR	4974803	Condition	h	131:21:4587:4587	4974607	1	True				
ANR	4974804	Identifier	h		4974607	0					
ANR	4974805	Expression	"srow += sskip , h -= yscale"	131:24:4590:4615	4974607	2	True				
ANR	4974806	AssignmentExpression	srow += sskip		4974607	0		+=			
ANR	4974807	Identifier	srow		4974607	0					
ANR	4974808	Identifier	sskip		4974607	1					
ANR	4974809	AssignmentExpression	h -= yscale		4974607	1		-=			
ANR	4974810	Identifier	h		4974607	0					
ANR	4974811	Identifier	yscale		4974607	1					
ANR	4974812	CompoundStatement		45:8:1643:1648	4974607	3					
ANR	4974813	IdentifierDeclStatement	const byte * s = srow ;	132:8:4628:4648	4974607	0	True				
ANR	4974814	IdentifierDecl	* s = srow		4974607	0					
ANR	4974815	IdentifierDeclType	const byte *		4974607	0					
ANR	4974816	Identifier	s		4974607	1					
ANR	4974817	AssignmentExpression	* s = srow		4974607	2		=			
ANR	4974818	Identifier	srow		4974607	0					
ANR	4974819	Identifier	srow		4974607	1					
ANR	4974820	Statement	define	135:3:4674:4679	4974607	1	True				
ANR	4974821	Statement	out_shift_initial	135:10:4681:4697	4974607	2	True				
ANR	4974822	Statement	0	135:28:4699:4699	4974607	3	True				
ANR	4974823	Statement	define	136:3:4704:4709	4974607	4	True				
ANR	4974824	Statement	out_shift_update	136:10:4711:4726	4974607	5	True				
ANR	4974825	Statement	(	136:26:4727:4727	4974607	6	True				
ANR	4974826	Statement	out_shift	136:27:4728:4736	4974607	7	True				
ANR	4974827	Statement	","	136:36:4737:4737	4974607	8	True				
ANR	4974828	Statement	nbits	136:38:4739:4743	4974607	9	True				
ANR	4974829	Statement	)	136:43:4744:4744	4974607	10	True				
ANR	4974830	Statement	(	136:45:4746:4746	4974607	11	True				
ANR	4974831	Statement	(	136:46:4747:4747	4974607	12	True				
ANR	4974832	Statement	out_shift	136:47:4748:4756	4974607	13	True				
ANR	4974833	Statement	+=	136:57:4758:4759	4974607	14	True				
ANR	4974834	Statement	(	136:60:4761:4761	4974607	15	True				
ANR	4974835	Statement	nbits	136:61:4762:4766	4974607	16	True				
ANR	4974836	Statement	)	136:66:4767:4767	4974607	17	True				
ANR	4974837	Statement	)	136:67:4768:4768	4974607	18	True				
ANR	4974838	Statement	>=	136:69:4770:4771	4974607	19	True				
ANR	4974839	Statement	8	136:72:4773:4773	4974607	20	True				
ANR	4974840	Statement	)	136:73:4774:4774	4974607	21	True				
ANR	4974841	IdentifierDeclStatement	int out_shift = out_shift_initial ;	141:8:4914:4947	4974607	22	True				
ANR	4974842	IdentifierDecl	out_shift = out_shift_initial		4974607	0					
ANR	4974843	IdentifierDeclType	int		4974607	0					
ANR	4974844	Identifier	out_shift		4974607	1					
ANR	4974845	AssignmentExpression	out_shift = out_shift_initial		4974607	2		=			
ANR	4974846	Identifier	out_shift_initial		4974607	0					
ANR	4974847	Identifier	out_shift_initial		4974607	1					
ANR	4974848	IdentifierDeclStatement	byte out = 0 ;	142:8:4957:4969	4974607	23	True				
ANR	4974849	IdentifierDecl	out = 0		4974607	0					
ANR	4974850	IdentifierDeclType	byte		4974607	0					
ANR	4974851	Identifier	out		4974607	1					
ANR	4974852	AssignmentExpression	out = 0		4974607	2		=			
ANR	4974853	Identifier	out		4974607	0					
ANR	4974854	PrimaryExpression	0		4974607	1					
ANR	4974855	IdentifierDeclStatement	int in_shift = in_shift_initial ;	143:8:4979:5010	4974607	24	True				
ANR	4974856	IdentifierDecl	in_shift = in_shift_initial		4974607	0					
ANR	4974857	IdentifierDeclType	int		4974607	0					
ANR	4974858	Identifier	in_shift		4974607	1					
ANR	4974859	AssignmentExpression	in_shift = in_shift_initial		4974607	2		=			
ANR	4974860	Identifier	in_shift_initial		4974607	0					
ANR	4974861	Identifier	in_shift_initial		4974607	1					
ANR	4974862	IdentifierDeclStatement	int dw = 8 - ( srcx & 7 ) ;	144:8:5020:5043	4974607	25	True				
ANR	4974863	IdentifierDecl	dw = 8 - ( srcx & 7 )		4974607	0					
ANR	4974864	IdentifierDeclType	int		4974607	0					
ANR	4974865	Identifier	dw		4974607	1					
ANR	4974866	AssignmentExpression	dw = 8 - ( srcx & 7 )		4974607	2		=			
ANR	4974867	Identifier	dw		4974607	0					
ANR	4974868	AdditiveExpression	8 - ( srcx & 7 )		4974607	1		-			
ANR	4974869	PrimaryExpression	8		4974607	0					
ANR	4974870	BitAndExpression	srcx & 7		4974607	1		&			
ANR	4974871	Identifier	srcx		4974607	0					
ANR	4974872	PrimaryExpression	7		4974607	1					
ANR	4974873	IdentifierDeclStatement	int w ;	145:8:5053:5058	4974607	26	True				
ANR	4974874	IdentifierDecl	w		4974607	0					
ANR	4974875	IdentifierDeclType	int		4974607	0					
ANR	4974876	Identifier	w		4974607	1					
ANR	4974877	ForStatement	"for ( w = width ; w > 0 ; w -= dw , dw = 8 )"		4974607	27					
ANR	4974878	ForInit	w = width ;	148:13:5112:5121	4974607	0	True				
ANR	4974879	AssignmentExpression	w = width		4974607	0		=			
ANR	4974880	Identifier	w		4974607	0					
ANR	4974881	Identifier	width		4974607	1					
ANR	4974882	Condition	w > 0	148:24:5123:5127	4974607	1	True				
ANR	4974883	RelationalExpression	w > 0		4974607	0		>			
ANR	4974884	Identifier	w		4974607	0					
ANR	4974885	PrimaryExpression	0		4974607	1					
ANR	4974886	Expression	"w -= dw , dw = 8"	148:31:5130:5144	4974607	2	True				
ANR	4974887	AssignmentExpression	w -= dw		4974607	0		-=			
ANR	4974888	Identifier	w		4974607	0					
ANR	4974889	Identifier	dw		4974607	1					
ANR	4974890	AssignmentExpression	dw = 8		4974607	1		=			
ANR	4974891	Identifier	dw		4974607	0					
ANR	4974892	PrimaryExpression	8		4974607	1					
ANR	4974893	CompoundStatement		50:12:1774:1817	4974607	3					
ANR	4974894	IdentifierDeclStatement	int index ;	149:12:5161:5170	4974607	0	True				
ANR	4974895	IdentifierDecl	index		4974607	0					
ANR	4974896	IdentifierDeclType	int		4974607	0					
ANR	4974897	Identifier	index		4974607	1					
ANR	4974898	IdentifierDeclStatement	int in_shift_final = ( w >= dw ? 0 : dw - w ) ;	150:12:5184:5227	4974607	1	True				
ANR	4974899	IdentifierDecl	in_shift_final = ( w >= dw ? 0 : dw - w )		4974607	0					
ANR	4974900	IdentifierDeclType	int		4974607	0					
ANR	4974901	Identifier	in_shift_final		4974607	1					
ANR	4974902	AssignmentExpression	in_shift_final = ( w >= dw ? 0 : dw - w )		4974607	2		=			
ANR	4974903	Identifier	in_shift_final		4974607	0					
ANR	4974904	ConditionalExpression	w >= dw ? 0 : dw - w		4974607	1					
ANR	4974905	Condition	w >= dw		4974607	0					
ANR	4974906	RelationalExpression	w >= dw		4974607	0		>=			
ANR	4974907	Identifier	w		4974607	0					
ANR	4974908	Identifier	dw		4974607	1					
ANR	4974909	PrimaryExpression	0		4974607	1					
ANR	4974910	AdditiveExpression	dw - w		4974607	2		-			
ANR	4974911	Identifier	dw		4974607	0					
ANR	4974912	Identifier	w		4974607	1					
ANR	4974913	IfStatement	if ( in_shift == in_shift_check && in_shift_final == 0 )		4974607	2					
ANR	4974914	Condition	in_shift == in_shift_check && in_shift_final == 0	159:16:5572:5620	4974607	0	True				
ANR	4974915	AndExpression	in_shift == in_shift_check && in_shift_final == 0		4974607	0		&&			
ANR	4974916	EqualityExpression	in_shift == in_shift_check		4974607	0		==			
ANR	4974917	Identifier	in_shift		4974607	0					
ANR	4974918	Identifier	in_shift_check		4974607	1					
ANR	4974919	EqualityExpression	in_shift_final == 0		4974607	1		==			
ANR	4974920	Identifier	in_shift_final		4974607	0					
ANR	4974921	PrimaryExpression	0		4974607	1					
ANR	4974922	SwitchStatement	switch ( * s )		4974607	1					
ANR	4974923	Condition	* s	160:24:5647:5648	4974607	0	True				
ANR	4974924	UnaryOperationExpression	* s		4974607	0					
ANR	4974925	UnaryOperator	*		4974607	0					
ANR	4974926	Identifier	s		4974607	1					
ANR	4974927	CompoundStatement		60:28:2241:2241	4974607	1					
ANR	4974928	Label	case 0 :	161:20:5673:5679	4974607	0	True				
ANR	4974929	ForStatement	for ( index = sraster ; index != sskip ; index += sraster )		4974607	1					
ANR	4974930	ForInit	index = sraster ;	162:29:5710:5725	4974607	0	True				
ANR	4974931	AssignmentExpression	index = sraster		4974607	0		=			
ANR	4974932	Identifier	index		4974607	0					
ANR	4974933	Identifier	sraster		4974607	1					
ANR	4974934	Condition	index != sskip	162:46:5727:5740	4974607	1	True				
ANR	4974935	EqualityExpression	index != sskip		4974607	0		!=			
ANR	4974936	Identifier	index		4974607	0					
ANR	4974937	Identifier	sskip		4974607	1					
ANR	4974938	AssignmentExpression	index += sraster	162:62:5743:5758	4974607	2	True	+=			
ANR	4974939	Identifier	index		4974607	0					
ANR	4974940	Identifier	sraster		4974607	1					
ANR	4974941	IfStatement	if ( s [ index ] != 0 )		4974607	3					
ANR	4974942	Condition	s [ index ] != 0	163:32:5793:5805	4974607	0	True				
ANR	4974943	EqualityExpression	s [ index ] != 0		4974607	0		!=			
ANR	4974944	ArrayIndexing	s [ index ]		4974607	0					
ANR	4974945	Identifier	s		4974607	0					
ANR	4974946	Identifier	index		4974607	1					
ANR	4974947	PrimaryExpression	0		4974607	1					
ANR	4974948	GotoStatement	goto p ;	164:32:5840:5846	4974607	1	True				
ANR	4974949	Identifier	p		4974607	0					
ANR	4974950	IfStatement	"if ( out_shift_update ( out_shift , input_byte_out_bits ) )"		4974607	2					
ANR	4974951	Condition	"out_shift_update ( out_shift , input_byte_out_bits )"	165:28:5876:5923	4974607	0	True				
ANR	4974952	CallExpression	"out_shift_update ( out_shift , input_byte_out_bits )"		4974607	0					
ANR	4974953	Callee	out_shift_update		4974607	0					
ANR	4974954	Identifier	out_shift_update		4974607	0					
ANR	4974955	ArgumentList	out_shift		4974607	1					
ANR	4974956	Argument	out_shift		4974607	0					
ANR	4974957	Identifier	out_shift		4974607	0					
ANR	4974958	Argument	input_byte_out_bits		4974607	1					
ANR	4974959	Identifier	input_byte_out_bits		4974607	0					
ANR	4974960	ExpressionStatement	"* d ++ = out , out_shift &= 7 , out = 0"	166:28:5954:5989	4974607	1	True				
ANR	4974961	Expression	"* d ++ = out , out_shift &= 7 , out = 0"		4974607	0					
ANR	4974962	AssignmentExpression	* d ++ = out		4974607	0		=			
ANR	4974963	UnaryOperationExpression	* d ++		4974607	0					
ANR	4974964	UnaryOperator	*		4974607	0					
ANR	4974965	PostIncDecOperationExpression	d ++		4974607	1					
ANR	4974966	Identifier	d		4974607	0					
ANR	4974967	IncDec	++		4974607	1					
ANR	4974968	Identifier	out		4974607	1					
ANR	4974969	Expression	"out_shift &= 7 , out = 0"		4974607	1					
ANR	4974970	AssignmentExpression	out_shift &= 7		4974607	0		&=			
ANR	4974971	Identifier	out_shift		4974607	0					
ANR	4974972	PrimaryExpression	7		4974607	1					
ANR	4974973	AssignmentExpression	out = 0		4974607	1		=			
ANR	4974974	Identifier	out		4974607	0					
ANR	4974975	PrimaryExpression	0		4974607	1					
ANR	4974976	ExpressionStatement	s ++	167:24:6015:6018	4974607	3	True				
ANR	4974977	PostIncDecOperationExpression	s ++		4974607	0					
ANR	4974978	Identifier	s		4974607	0					
ANR	4974979	IncDec	++		4974607	1					
ANR	4974980	ContinueStatement	continue ;	168:24:6044:6052	4974607	4	True				
ANR	4974981	Label	case 0xff :	170:20:6128:6137	4974607	5	True				
ANR	4974982	ForStatement	for ( index = sraster ; index != sskip ; index += sraster )		4974607	6					
ANR	4974983	ForInit	index = sraster ;	171:29:6168:6183	4974607	0	True				
ANR	4974984	AssignmentExpression	index = sraster		4974607	0		=			
ANR	4974985	Identifier	index		4974607	0					
ANR	4974986	Identifier	sraster		4974607	1					
ANR	4974987	Condition	index != sskip	171:46:6185:6198	4974607	1	True				
ANR	4974988	EqualityExpression	index != sskip		4974607	0		!=			
ANR	4974989	Identifier	index		4974607	0					
ANR	4974990	Identifier	sskip		4974607	1					
ANR	4974991	AssignmentExpression	index += sraster	171:62:6201:6216	4974607	2	True	+=			
ANR	4974992	Identifier	index		4974607	0					
ANR	4974993	Identifier	sraster		4974607	1					
ANR	4974994	IfStatement	if ( s [ index ] != 0xff )		4974607	3					
ANR	4974995	Condition	s [ index ] != 0xff	172:32:6251:6266	4974607	0	True				
ANR	4974996	EqualityExpression	s [ index ] != 0xff		4974607	0		!=			
ANR	4974997	ArrayIndexing	s [ index ]		4974607	0					
ANR	4974998	Identifier	s		4974607	0					
ANR	4974999	Identifier	index		4974607	1					
ANR	4975000	PrimaryExpression	0xff		4974607	1					
ANR	4975001	GotoStatement	goto p ;	173:32:6301:6307	4974607	1	True				
ANR	4975002	Identifier	p		4974607	0					
ANR	4975003	CompoundStatement		75:28:2953:3042	4974607	7					
ANR	4975004	IdentifierDeclStatement	int shift = ( out_shift -= input_byte_out_bits ) + out_bits ;	175:28:6363:6452	4974607	0	True				
ANR	4975005	IdentifierDecl	shift = ( out_shift -= input_byte_out_bits ) + out_bits		4974607	0					
ANR	4975006	IdentifierDeclType	int		4974607	0					
ANR	4975007	Identifier	shift		4974607	1					
ANR	4975008	AssignmentExpression	shift = ( out_shift -= input_byte_out_bits ) + out_bits		4974607	2		=			
ANR	4975009	Identifier	shift		4974607	0					
ANR	4975010	AdditiveExpression	( out_shift -= input_byte_out_bits ) + out_bits		4974607	1		+			
ANR	4975011	AssignmentExpression	out_shift -= input_byte_out_bits		4974607	0		-=			
ANR	4975012	Identifier	out_shift		4974607	0					
ANR	4975013	Identifier	input_byte_out_bits		4974607	1					
ANR	4975014	Identifier	out_bits		4974607	1					
ANR	4975015	IfStatement	if ( shift > 0 )		4974607	1					
ANR	4975016	Condition	shift > 0	178:32:6487:6495	4974607	0	True				
ANR	4975017	RelationalExpression	shift > 0		4974607	0		>			
ANR	4975018	Identifier	shift		4974607	0					
ANR	4975019	PrimaryExpression	0		4974607	1					
ANR	4975020	ExpressionStatement	out |= input_byte_out_mask << shift	179:32:6530:6565	4974607	1	True				
ANR	4975021	AssignmentExpression	out |= input_byte_out_mask << shift		4974607	0		|=			
ANR	4975022	Identifier	out		4974607	0					
ANR	4975023	ShiftExpression	input_byte_out_mask << shift		4974607	1		<<			
ANR	4975024	Identifier	input_byte_out_mask		4974607	0					
ANR	4975025	Identifier	shift		4974607	1					
ANR	4975026	ElseStatement	else		4974607	0					
ANR	4975027	CompoundStatement		80:33:3190:3190	4974607	0					
ANR	4975028	ExpressionStatement	out |= input_byte_out_mask >> - shift	181:32:6634:6670	4974607	0	True				
ANR	4975029	AssignmentExpression	out |= input_byte_out_mask >> - shift		4974607	0		|=			
ANR	4975030	Identifier	out		4974607	0					
ANR	4975031	ShiftExpression	input_byte_out_mask >> - shift		4974607	1		>>			
ANR	4975032	Identifier	input_byte_out_mask		4974607	0					
ANR	4975033	UnaryOperationExpression	- shift		4974607	1					
ANR	4975034	UnaryOperator	-		4974607	0					
ANR	4975035	Identifier	shift		4974607	1					
ANR	4975036	ExpressionStatement	* d ++ = out	182:32:6704:6714	4974607	1	True				
ANR	4975037	AssignmentExpression	* d ++ = out		4974607	0		=			
ANR	4975038	UnaryOperationExpression	* d ++		4974607	0					
ANR	4975039	UnaryOperator	*		4974607	0					
ANR	4975040	PostIncDecOperationExpression	d ++		4974607	1					
ANR	4975041	Identifier	d		4974607	0					
ANR	4975042	IncDec	++		4974607	1					
ANR	4975043	Identifier	out		4974607	1					
ANR	4975044	ExpressionStatement	out_shift += 8	183:32:6748:6762	4974607	2	True				
ANR	4975045	AssignmentExpression	out_shift += 8		4974607	0		+=			
ANR	4975046	Identifier	out_shift		4974607	0					
ANR	4975047	PrimaryExpression	8		4974607	1					
ANR	4975048	ExpressionStatement	out = input_byte_out_mask << ( 8 + shift )	184:32:6796:6836	4974607	3	True				
ANR	4975049	AssignmentExpression	out = input_byte_out_mask << ( 8 + shift )		4974607	0		=			
ANR	4975050	Identifier	out		4974607	0					
ANR	4975051	ShiftExpression	input_byte_out_mask << ( 8 + shift )		4974607	1		<<			
ANR	4975052	Identifier	input_byte_out_mask		4974607	0					
ANR	4975053	AdditiveExpression	8 + shift		4974607	1		+			
ANR	4975054	PrimaryExpression	8		4974607	0					
ANR	4975055	Identifier	shift		4974607	1					
ANR	4975056	ExpressionStatement	s ++	187:24:6918:6921	4974607	8	True				
ANR	4975057	PostIncDecOperationExpression	s ++		4974607	0					
ANR	4975058	Identifier	s		4974607	0					
ANR	4975059	IncDec	++		4974607	1					
ANR	4975060	ContinueStatement	continue ;	188:24:6947:6955	4974607	9	True				
ANR	4975061	Label	default :	190:20:6984:6991	4974607	10	True				
ANR	4975062	Identifier	default		4974607	0					
ANR	4975063	ExpressionStatement		191:24:7017:7017	4974607	11	True				
ANR	4975064	Label	p :	193:10:7047:7048	4974607	3	True				
ANR	4975065	Identifier	p		4974607	0					
ANR	4975066	DoStatement	do		4974607	4					
ANR	4975067	CompoundStatement		95:16:3720:3730	4974607	0					
ANR	4975068	IdentifierDeclStatement	uint count ;	195:16:7130:7140	4974607	0	True				
ANR	4975069	IdentifierDecl	count		4974607	0					
ANR	4975070	IdentifierDeclType	uint		4974607	0					
ANR	4975071	Identifier	count		4974607	1					
ANR	4975072	ForStatement	"for ( index = 0 , count = 0 ; index != sskip ; index += sraster )"		4974607	1					
ANR	4975073	ForInit	"index = 0 , count = 0 ;"	197:21:7164:7184	4974607	0	True				
ANR	4975074	Expression	"index = 0 , count = 0"		4974607	0					
ANR	4975075	AssignmentExpression	index = 0		4974607	0		=			
ANR	4975076	Identifier	index		4974607	0					
ANR	4975077	PrimaryExpression	0		4974607	1					
ANR	4975078	AssignmentExpression	count = 0		4974607	1		=			
ANR	4975079	Identifier	count		4974607	0					
ANR	4975080	PrimaryExpression	0		4974607	1					
ANR	4975081	Condition	index != sskip	197:43:7186:7199	4974607	1	True				
ANR	4975082	EqualityExpression	index != sskip		4974607	0		!=			
ANR	4975083	Identifier	index		4974607	0					
ANR	4975084	Identifier	sskip		4974607	1					
ANR	4975085	AssignmentExpression	index += sraster	198:21:7223:7238	4974607	2	True	+=			
ANR	4975086	Identifier	index		4974607	0					
ANR	4975087	Identifier	sraster		4974607	1					
ANR	4975088	ExpressionStatement	count += half_byte_1s [ ( s [ index ] >> in_shift ) & mask ]	200:20:7282:7334	4974607	3	True				
ANR	4975089	AssignmentExpression	count += half_byte_1s [ ( s [ index ] >> in_shift ) & mask ]		4974607	0		+=			
ANR	4975090	Identifier	count		4974607	0					
ANR	4975091	ArrayIndexing	half_byte_1s [ ( s [ index ] >> in_shift ) & mask ]		4974607	1					
ANR	4975092	Identifier	half_byte_1s		4974607	0					
ANR	4975093	BitAndExpression	( s [ index ] >> in_shift ) & mask		4974607	1		&			
ANR	4975094	ShiftExpression	s [ index ] >> in_shift		4974607	0		>>			
ANR	4975095	ArrayIndexing	s [ index ]		4974607	0					
ANR	4975096	Identifier	s		4974607	0					
ANR	4975097	Identifier	index		4974607	1					
ANR	4975098	Identifier	in_shift		4974607	1					
ANR	4975099	Identifier	mask		4974607	1					
ANR	4975100	IfStatement	if ( count != 0 && table [ count ] == 0 )		4974607	2					
ANR	4975101	Condition	count != 0 && table [ count ] == 0	201:20:7356:7386	4974607	0	True				
ANR	4975102	AndExpression	count != 0 && table [ count ] == 0		4974607	0		&&			
ANR	4975103	EqualityExpression	count != 0		4974607	0		!=			
ANR	4975104	Identifier	count		4974607	0					
ANR	4975105	PrimaryExpression	0		4974607	1					
ANR	4975106	EqualityExpression	table [ count ] == 0		4974607	1		==			
ANR	4975107	ArrayIndexing	table [ count ]		4974607	0					
ANR	4975108	Identifier	table		4974607	0					
ANR	4975109	Identifier	count		4974607	1					
ANR	4975110	PrimaryExpression	0		4974607	1					
ANR	4975111	CompoundStatement		105:20:4185:4192	4974607	1					
ANR	4975112	IdentifierDeclStatement	uint orig_count = count ;	203:20:7492:7515	4974607	0	True				
ANR	4975113	IdentifierDecl	orig_count = count		4974607	0					
ANR	4975114	IdentifierDeclType	uint		4974607	0					
ANR	4975115	Identifier	orig_count		4974607	1					
ANR	4975116	AssignmentExpression	orig_count = count		4974607	2		=			
ANR	4975117	Identifier	count		4974607	0					
ANR	4975118	Identifier	count		4974607	1					
ANR	4975119	IdentifierDeclStatement	uint shifted_mask = mask << in_shift ;	204:20:7537:7573	4974607	1	True				
ANR	4975120	IdentifierDecl	shifted_mask = mask << in_shift		4974607	0					
ANR	4975121	IdentifierDeclType	uint		4974607	0					
ANR	4975122	Identifier	shifted_mask		4974607	1					
ANR	4975123	AssignmentExpression	shifted_mask = mask << in_shift		4974607	2		=			
ANR	4975124	Identifier	shifted_mask		4974607	0					
ANR	4975125	ShiftExpression	mask << in_shift		4974607	1		<<			
ANR	4975126	Identifier	mask		4974607	0					
ANR	4975127	Identifier	in_shift		4974607	1					
ANR	4975128	IdentifierDeclStatement	byte in ;	205:20:7595:7602	4974607	2	True				
ANR	4975129	IdentifierDecl	in		4974607	0					
ANR	4975130	IdentifierDeclType	byte		4974607	0					
ANR	4975131	Identifier	in		4974607	1					
ANR	4975132	ExpressionStatement	"if_debug3 ( 'B' , ""[B]count(%d,%d)=%d\\n"" , ( width - w ) / xscale , ( height - h ) / yscale , count )"	207:20:7625:7775	4974607	3	True				
ANR	4975133	CallExpression	"if_debug3 ( 'B' , ""[B]count(%d,%d)=%d\\n"" , ( width - w ) / xscale , ( height - h ) / yscale , count )"		4974607	0					
ANR	4975134	Callee	if_debug3		4974607	0					
ANR	4975135	Identifier	if_debug3		4974607	0					
ANR	4975136	ArgumentList	'B'		4974607	1					
ANR	4975137	Argument	'B'		4974607	0					
ANR	4975138	PrimaryExpression	'B'		4974607	0					
ANR	4975139	Argument	"""[B]count(%d,%d)=%d\\n"""		4974607	1					
ANR	4975140	PrimaryExpression	"""[B]count(%d,%d)=%d\\n"""		4974607	0					
ANR	4975141	Argument	( width - w ) / xscale		4974607	2					
ANR	4975142	MultiplicativeExpression	( width - w ) / xscale		4974607	0		/			
ANR	4975143	AdditiveExpression	width - w		4974607	0		-			
ANR	4975144	Identifier	width		4974607	0					
ANR	4975145	Identifier	w		4974607	1					
ANR	4975146	Identifier	xscale		4974607	1					
ANR	4975147	Argument	( height - h ) / yscale		4974607	3					
ANR	4975148	MultiplicativeExpression	( height - h ) / yscale		4974607	0		/			
ANR	4975149	AdditiveExpression	height - h		4974607	0		-			
ANR	4975150	Identifier	height		4974607	0					
ANR	4975151	Identifier	h		4974607	1					
ANR	4975152	Identifier	yscale		4974607	1					
ANR	4975153	Argument	count		4974607	4					
ANR	4975154	Identifier	count		4974607	0					
ANR	4975155	IfStatement	if ( yscale > 1 )		4974607	4					
ANR	4975156	Condition	yscale > 1	210:24:7801:7810	4974607	0	True				
ANR	4975157	RelationalExpression	yscale > 1		4974607	0		>			
ANR	4975158	Identifier	yscale		4974607	0					
ANR	4975159	PrimaryExpression	1		4974607	1					
ANR	4975160	CompoundStatement		110:36:4403:4403	4974607	1					
ANR	4975161	IfStatement	if ( h < height && ( in = s [ 0 ] & shifted_mask ) != 0 )		4974607	0					
ANR	4975162	Condition	h < height && ( in = s [ 0 ] & shifted_mask ) != 0	211:28:7880:7924	4974607	0	True				
ANR	4975163	AndExpression	h < height && ( in = s [ 0 ] & shifted_mask ) != 0		4974607	0		&&			
ANR	4975164	RelationalExpression	h < height		4974607	0		<			
ANR	4975165	Identifier	h		4974607	0					
ANR	4975166	Identifier	height		4974607	1					
ANR	4975167	EqualityExpression	( in = s [ 0 ] & shifted_mask ) != 0		4974607	1		!=			
ANR	4975168	AssignmentExpression	in = s [ 0 ] & shifted_mask		4974607	0		=			
ANR	4975169	Identifier	in		4974607	0					
ANR	4975170	BitAndExpression	s [ 0 ] & shifted_mask		4974607	1		&			
ANR	4975171	ArrayIndexing	s [ 0 ]		4974607	0					
ANR	4975172	Identifier	s		4974607	0					
ANR	4975173	PrimaryExpression	0		4974607	1					
ANR	4975174	Identifier	shifted_mask		4974607	1					
ANR	4975175	PrimaryExpression	0		4974607	1					
ANR	4975176	CompoundStatement		112:28:4547:4557	4974607	1					
ANR	4975177	IdentifierDeclStatement	uint lower ;	212:28:7957:7967	4974607	0	True				
ANR	4975178	IdentifierDecl	lower		4974607	0					
ANR	4975179	IdentifierDeclType	uint		4974607	0					
ANR	4975180	Identifier	lower		4974607	1					
ANR	4975181	ForStatement	"for ( index = 0 , lower = 0 ; - ( index -= sraster ) <= sskip && ( in &= s [ index ] ) != 0 ; )"		4974607	1					
ANR	4975182	ForInit	"index = 0 , lower = 0 ;"	214:33:8003:8023	4974607	0	True				
ANR	4975183	Expression	"index = 0 , lower = 0"		4974607	0					
ANR	4975184	AssignmentExpression	index = 0		4974607	0		=			
ANR	4975185	Identifier	index		4974607	0					
ANR	4975186	PrimaryExpression	0		4974607	1					
ANR	4975187	AssignmentExpression	lower = 0		4974607	1		=			
ANR	4975188	Identifier	lower		4974607	0					
ANR	4975189	PrimaryExpression	0		4974607	1					
ANR	4975190	Condition	- ( index -= sraster ) <= sskip && ( in &= s [ index ] ) != 0	215:33:8058:8143	4974607	1	True				
ANR	4975191	AndExpression	- ( index -= sraster ) <= sskip && ( in &= s [ index ] ) != 0		4974607	0		&&			
ANR	4975192	RelationalExpression	- ( index -= sraster ) <= sskip		4974607	0		<=			
ANR	4975193	UnaryOperationExpression	- ( index -= sraster )		4974607	0					
ANR	4975194	UnaryOperator	-		4974607	0					
ANR	4975195	AssignmentExpression	index -= sraster		4974607	1		-=			
ANR	4975196	Identifier	index		4974607	0					
ANR	4975197	Identifier	sraster		4974607	1					
ANR	4975198	Identifier	sskip		4974607	1					
ANR	4975199	EqualityExpression	( in &= s [ index ] ) != 0		4974607	1		!=			
ANR	4975200	AssignmentExpression	in &= s [ index ]		4974607	0		&=			
ANR	4975201	Identifier	in		4974607	0					
ANR	4975202	ArrayIndexing	s [ index ]		4974607	1					
ANR	4975203	Identifier	s		4974607	0					
ANR	4975204	Identifier	index		4974607	1					
ANR	4975205	PrimaryExpression	0		4974607	1					
ANR	4975206	ExpressionStatement	lower += half_byte_1s [ in >> in_shift ]	218:32:8212:8249	4974607	2	True				
ANR	4975207	AssignmentExpression	lower += half_byte_1s [ in >> in_shift ]		4974607	0		+=			
ANR	4975208	Identifier	lower		4974607	0					
ANR	4975209	ArrayIndexing	half_byte_1s [ in >> in_shift ]		4974607	1					
ANR	4975210	Identifier	half_byte_1s		4974607	0					
ANR	4975211	ShiftExpression	in >> in_shift		4974607	1		>>			
ANR	4975212	Identifier	in		4974607	0					
ANR	4975213	Identifier	in_shift		4974607	1					
ANR	4975214	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  lower adds %d\\n"" , lower )"	219:28:8279:8362	4974607	2	True				
ANR	4975215	CallExpression	"if_debug1 ( 'B' , ""[B]  lower adds %d\\n"" , lower )"		4974607	0					
ANR	4975216	Callee	if_debug1		4974607	0					
ANR	4975217	Identifier	if_debug1		4974607	0					
ANR	4975218	ArgumentList	'B'		4974607	1					
ANR	4975219	Argument	'B'		4974607	0					
ANR	4975220	PrimaryExpression	'B'		4974607	0					
ANR	4975221	Argument	"""[B]  lower adds %d\\n"""		4974607	1					
ANR	4975222	PrimaryExpression	"""[B]  lower adds %d\\n"""		4974607	0					
ANR	4975223	Argument	lower		4974607	2					
ANR	4975224	Identifier	lower		4974607	0					
ANR	4975225	IfStatement	if ( lower <= orig_count )		4974607	3					
ANR	4975226	Condition	lower <= orig_count	221:32:8396:8414	4974607	0	True				
ANR	4975227	RelationalExpression	lower <= orig_count		4974607	0		<=			
ANR	4975228	Identifier	lower		4974607	0					
ANR	4975229	Identifier	orig_count		4974607	1					
ANR	4975230	ExpressionStatement	count += lower	222:32:8449:8463	4974607	1	True				
ANR	4975231	AssignmentExpression	count += lower		4974607	0		+=			
ANR	4975232	Identifier	count		4974607	0					
ANR	4975233	Identifier	lower		4974607	1					
ANR	4975234	IfStatement	if ( h > yscale && ( in = s [ sskip - sraster ] & shifted_mask ) != 0 )		4974607	1					
ANR	4975235	Condition	h > yscale && ( in = s [ sskip - sraster ] & shifted_mask ) != 0	225:28:8581:8639	4974607	0	True				
ANR	4975236	AndExpression	h > yscale && ( in = s [ sskip - sraster ] & shifted_mask ) != 0		4974607	0		&&			
ANR	4975237	RelationalExpression	h > yscale		4974607	0		>			
ANR	4975238	Identifier	h		4974607	0					
ANR	4975239	Identifier	yscale		4974607	1					
ANR	4975240	EqualityExpression	( in = s [ sskip - sraster ] & shifted_mask ) != 0		4974607	1		!=			
ANR	4975241	AssignmentExpression	in = s [ sskip - sraster ] & shifted_mask		4974607	0		=			
ANR	4975242	Identifier	in		4974607	0					
ANR	4975243	BitAndExpression	s [ sskip - sraster ] & shifted_mask		4974607	1		&			
ANR	4975244	ArrayIndexing	s [ sskip - sraster ]		4974607	0					
ANR	4975245	Identifier	s		4974607	0					
ANR	4975246	AdditiveExpression	sskip - sraster		4974607	1		-			
ANR	4975247	Identifier	sskip		4974607	0					
ANR	4975248	Identifier	sraster		4974607	1					
ANR	4975249	Identifier	shifted_mask		4974607	1					
ANR	4975250	PrimaryExpression	0		4974607	1					
ANR	4975251	CompoundStatement		126:28:5262:5272	4974607	1					
ANR	4975252	IdentifierDeclStatement	uint upper ;	226:28:8672:8682	4974607	0	True				
ANR	4975253	IdentifierDecl	upper		4974607	0					
ANR	4975254	IdentifierDeclType	uint		4974607	0					
ANR	4975255	Identifier	upper		4974607	1					
ANR	4975256	ForStatement	"for ( index = sskip , upper = 0 ; index < sskip << 1 && ( in &= s [ index ] ) != 0 ; index += sraster )"		4974607	1					
ANR	4975257	ForInit	"index = sskip , upper = 0 ;"	228:33:8718:8742	4974607	0	True				
ANR	4975258	Expression	"index = sskip , upper = 0"		4974607	0					
ANR	4975259	AssignmentExpression	index = sskip		4974607	0		=			
ANR	4975260	Identifier	index		4974607	0					
ANR	4975261	Identifier	sskip		4974607	1					
ANR	4975262	AssignmentExpression	upper = 0		4974607	1		=			
ANR	4975263	Identifier	upper		4974607	0					
ANR	4975264	PrimaryExpression	0		4974607	1					
ANR	4975265	Condition	index < sskip << 1 && ( in &= s [ index ] ) != 0	229:33:8777:8852	4974607	1	True				
ANR	4975266	AndExpression	index < sskip << 1 && ( in &= s [ index ] ) != 0		4974607	0		&&			
ANR	4975267	RelationalExpression	index < sskip << 1		4974607	0		<			
ANR	4975268	Identifier	index		4974607	0					
ANR	4975269	ShiftExpression	sskip << 1		4974607	1		<<			
ANR	4975270	Identifier	sskip		4974607	0					
ANR	4975271	PrimaryExpression	1		4974607	1					
ANR	4975272	EqualityExpression	( in &= s [ index ] ) != 0		4974607	1		!=			
ANR	4975273	AssignmentExpression	in &= s [ index ]		4974607	0		&=			
ANR	4975274	Identifier	in		4974607	0					
ANR	4975275	ArrayIndexing	s [ index ]		4974607	1					
ANR	4975276	Identifier	s		4974607	0					
ANR	4975277	Identifier	index		4974607	1					
ANR	4975278	PrimaryExpression	0		4974607	1					
ANR	4975279	AssignmentExpression	index += sraster	231:33:8888:8903	4974607	2	True	+=			
ANR	4975280	Identifier	index		4974607	0					
ANR	4975281	Identifier	sraster		4974607	1					
ANR	4975282	ExpressionStatement	upper += half_byte_1s [ in >> in_shift ]	233:32:8971:9008	4974607	3	True				
ANR	4975283	AssignmentExpression	upper += half_byte_1s [ in >> in_shift ]		4974607	0		+=			
ANR	4975284	Identifier	upper		4974607	0					
ANR	4975285	ArrayIndexing	half_byte_1s [ in >> in_shift ]		4974607	1					
ANR	4975286	Identifier	half_byte_1s		4974607	0					
ANR	4975287	ShiftExpression	in >> in_shift		4974607	1		>>			
ANR	4975288	Identifier	in		4974607	0					
ANR	4975289	Identifier	in_shift		4974607	1					
ANR	4975290	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  upper adds %d\\n"" , upper )"	234:28:9038:9121	4974607	2	True				
ANR	4975291	CallExpression	"if_debug1 ( 'B' , ""[B]  upper adds %d\\n"" , upper )"		4974607	0					
ANR	4975292	Callee	if_debug1		4974607	0					
ANR	4975293	Identifier	if_debug1		4974607	0					
ANR	4975294	ArgumentList	'B'		4974607	1					
ANR	4975295	Argument	'B'		4974607	0					
ANR	4975296	PrimaryExpression	'B'		4974607	0					
ANR	4975297	Argument	"""[B]  upper adds %d\\n"""		4974607	1					
ANR	4975298	PrimaryExpression	"""[B]  upper adds %d\\n"""		4974607	0					
ANR	4975299	Argument	upper		4974607	2					
ANR	4975300	Identifier	upper		4974607	0					
ANR	4975301	IfStatement	if ( upper < orig_count )		4974607	3					
ANR	4975302	Condition	upper < orig_count	236:32:9155:9172	4974607	0	True				
ANR	4975303	RelationalExpression	upper < orig_count		4974607	0		<			
ANR	4975304	Identifier	upper		4974607	0					
ANR	4975305	Identifier	orig_count		4974607	1					
ANR	4975306	ExpressionStatement	count += upper	237:32:9207:9221	4974607	1	True				
ANR	4975307	AssignmentExpression	count += upper		4974607	0		+=			
ANR	4975308	Identifier	count		4974607	0					
ANR	4975309	Identifier	upper		4974607	1					
ANR	4975310	IfStatement	if ( xscale > 1 )		4974607	5					
ANR	4975311	Condition	xscale > 1	240:24:9295:9304	4974607	0	True				
ANR	4975312	RelationalExpression	xscale > 1		4974607	0		>			
ANR	4975313	Identifier	xscale		4974607	0					
ANR	4975314	PrimaryExpression	1		4974607	1					
ANR	4975315	CompoundStatement		141:24:5923:5951	4974607	1					
ANR	4975316	IdentifierDeclStatement	uint mask1 = ( mask << 1 ) + 1 ;	241:24:9333:9361	4974607	0	True				
ANR	4975317	IdentifierDecl	mask1 = ( mask << 1 ) + 1		4974607	0					
ANR	4975318	IdentifierDeclType	uint		4974607	0					
ANR	4975319	Identifier	mask1		4974607	1					
ANR	4975320	AssignmentExpression	mask1 = ( mask << 1 ) + 1		4974607	2		=			
ANR	4975321	Identifier	mask1		4974607	0					
ANR	4975322	AdditiveExpression	( mask << 1 ) + 1		4974607	1		+			
ANR	4975323	ShiftExpression	mask << 1		4974607	0		<<			
ANR	4975324	Identifier	mask		4974607	0					
ANR	4975325	PrimaryExpression	1		4974607	1					
ANR	4975326	PrimaryExpression	1		4974607	1					
ANR	4975327	IfStatement	if ( w < width )		4974607	1					
ANR	4975328	Condition	w < width	244:28:9457:9465	4974607	0	True				
ANR	4975329	RelationalExpression	w < width		4974607	0		<			
ANR	4975330	Identifier	w		4974607	0					
ANR	4975331	Identifier	width		4974607	1					
ANR	4975332	CompoundStatement		146:28:6152:6161	4974607	1					
ANR	4975333	IdentifierDeclStatement	int lshift = in_shift + xscale - 1 ;	245:28:9498:9532	4974607	0	True				
ANR	4975334	IdentifierDecl	lshift = in_shift + xscale - 1		4974607	0					
ANR	4975335	IdentifierDeclType	int		4974607	0					
ANR	4975336	Identifier	lshift		4974607	1					
ANR	4975337	AssignmentExpression	lshift = in_shift + xscale - 1		4974607	2		=			
ANR	4975338	Identifier	lshift		4974607	0					
ANR	4975339	AdditiveExpression	in_shift + xscale - 1		4974607	1		+			
ANR	4975340	Identifier	in_shift		4974607	0					
ANR	4975341	AdditiveExpression	xscale - 1		4974607	1		-			
ANR	4975342	Identifier	xscale		4974607	0					
ANR	4975343	PrimaryExpression	1		4974607	1					
ANR	4975344	IdentifierDeclStatement	uint left ;	246:28:9562:9571	4974607	1	True				
ANR	4975345	IdentifierDecl	left		4974607	0					
ANR	4975346	IdentifierDeclType	uint		4974607	0					
ANR	4975347	Identifier	left		4974607	1					
ANR	4975348	ForStatement	"for ( index = 0 , left = 0 ; index < sskip ; index += sraster )"		4974607	2					
ANR	4975349	ForInit	"index = 0 , left = 0 ;"	248:33:9607:9626	4974607	0	True				
ANR	4975350	Expression	"index = 0 , left = 0"		4974607	0					
ANR	4975351	AssignmentExpression	index = 0		4974607	0		=			
ANR	4975352	Identifier	index		4974607	0					
ANR	4975353	PrimaryExpression	0		4974607	1					
ANR	4975354	AssignmentExpression	left = 0		4974607	1		=			
ANR	4975355	Identifier	left		4974607	0					
ANR	4975356	PrimaryExpression	0		4974607	1					
ANR	4975357	Condition	index < sskip	249:33:9661:9673	4974607	1	True				
ANR	4975358	RelationalExpression	index < sskip		4974607	0		<			
ANR	4975359	Identifier	index		4974607	0					
ANR	4975360	Identifier	sskip		4974607	1					
ANR	4975361	AssignmentExpression	index += sraster	249:48:9676:9691	4974607	2	True	+=			
ANR	4975362	Identifier	index		4974607	0					
ANR	4975363	Identifier	sraster		4974607	1					
ANR	4975364	CompoundStatement		151:32:6351:6470	4974607	3					
ANR	4975365	IdentifierDeclStatement	uint bits = ( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift ;	251:32:9761:9880	4974607	0	True				
ANR	4975366	IdentifierDecl	bits = ( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift		4974607	0					
ANR	4975367	IdentifierDeclType	uint		4974607	0					
ANR	4975368	Identifier	bits		4974607	1					
ANR	4975369	AssignmentExpression	bits = ( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift		4974607	2		=			
ANR	4975370	Identifier	bits		4974607	0					
ANR	4975371	ShiftExpression	( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift		4974607	1		>>			
ANR	4975372	AdditiveExpression	( s [ index - 1 ] << 8 ) + s [ index ]		4974607	0		+			
ANR	4975373	ShiftExpression	s [ index - 1 ] << 8		4974607	0		<<			
ANR	4975374	ArrayIndexing	s [ index - 1 ]		4974607	0					
ANR	4975375	Identifier	s		4974607	0					
ANR	4975376	AdditiveExpression	index - 1		4974607	1		-			
ANR	4975377	Identifier	index		4974607	0					
ANR	4975378	PrimaryExpression	1		4974607	1					
ANR	4975379	PrimaryExpression	8		4974607	1					
ANR	4975380	ArrayIndexing	s [ index ]		4974607	1					
ANR	4975381	Identifier	s		4974607	0					
ANR	4975382	Identifier	index		4974607	1					
ANR	4975383	Identifier	lshift		4974607	1					
ANR	4975384	ExpressionStatement	left += bits5_trailing_1s [ bits & mask1 ]	255:32:9915:9954	4974607	1	True				
ANR	4975385	AssignmentExpression	left += bits5_trailing_1s [ bits & mask1 ]		4974607	0		+=			
ANR	4975386	Identifier	left		4974607	0					
ANR	4975387	ArrayIndexing	bits5_trailing_1s [ bits & mask1 ]		4974607	1					
ANR	4975388	Identifier	bits5_trailing_1s		4974607	0					
ANR	4975389	BitAndExpression	bits & mask1		4974607	1		&			
ANR	4975390	Identifier	bits		4974607	0					
ANR	4975391	Identifier	mask1		4974607	1					
ANR	4975392	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  left adds %d\\n"" , left )"	257:28:10014:10095	4974607	3	True				
ANR	4975393	CallExpression	"if_debug1 ( 'B' , ""[B]  left adds %d\\n"" , left )"		4974607	0					
ANR	4975394	Callee	if_debug1		4974607	0					
ANR	4975395	Identifier	if_debug1		4974607	0					
ANR	4975396	ArgumentList	'B'		4974607	1					
ANR	4975397	Argument	'B'		4974607	0					
ANR	4975398	PrimaryExpression	'B'		4974607	0					
ANR	4975399	Argument	"""[B]  left adds %d\\n"""		4974607	1					
ANR	4975400	PrimaryExpression	"""[B]  left adds %d\\n"""		4974607	0					
ANR	4975401	Argument	left		4974607	2					
ANR	4975402	Identifier	left		4974607	0					
ANR	4975403	IfStatement	if ( left < orig_count )		4974607	4					
ANR	4975404	Condition	left < orig_count	259:32:10129:10145	4974607	0	True				
ANR	4975405	RelationalExpression	left < orig_count		4974607	0		<			
ANR	4975406	Identifier	left		4974607	0					
ANR	4975407	Identifier	orig_count		4974607	1					
ANR	4975408	ExpressionStatement	count += left	260:32:10180:10193	4974607	1	True				
ANR	4975409	AssignmentExpression	count += left		4974607	0		+=			
ANR	4975410	Identifier	count		4974607	0					
ANR	4975411	Identifier	left		4974607	1					
ANR	4975412	IfStatement	if ( w > xscale )		4974607	2					
ANR	4975413	Condition	w > xscale	263:28:10315:10324	4974607	0	True				
ANR	4975414	RelationalExpression	w > xscale		4974607	0		>			
ANR	4975415	Identifier	w		4974607	0					
ANR	4975416	Identifier	xscale		4974607	1					
ANR	4975417	CompoundStatement		165:28:7011:7021	4974607	1					
ANR	4975418	IdentifierDeclStatement	int rshift = in_shift - xscale + 8 ;	264:28:10357:10391	4974607	0	True				
ANR	4975419	IdentifierDecl	rshift = in_shift - xscale + 8		4974607	0					
ANR	4975420	IdentifierDeclType	int		4974607	0					
ANR	4975421	Identifier	rshift		4974607	1					
ANR	4975422	AssignmentExpression	rshift = in_shift - xscale + 8		4974607	2		=			
ANR	4975423	Identifier	rshift		4974607	0					
ANR	4975424	AdditiveExpression	in_shift - xscale + 8		4974607	1		-			
ANR	4975425	Identifier	in_shift		4974607	0					
ANR	4975426	AdditiveExpression	xscale + 8		4974607	1		+			
ANR	4975427	Identifier	xscale		4974607	0					
ANR	4975428	PrimaryExpression	8		4974607	1					
ANR	4975429	IdentifierDeclStatement	uint right ;	265:28:10421:10431	4974607	1	True				
ANR	4975430	IdentifierDecl	right		4974607	0					
ANR	4975431	IdentifierDeclType	uint		4974607	0					
ANR	4975432	Identifier	right		4974607	1					
ANR	4975433	ForStatement	"for ( index = 0 , right = 0 ; index < sskip ; index += sraster )"		4974607	2					
ANR	4975434	ForInit	"index = 0 , right = 0 ;"	267:33:10467:10487	4974607	0	True				
ANR	4975435	Expression	"index = 0 , right = 0"		4974607	0					
ANR	4975436	AssignmentExpression	index = 0		4974607	0		=			
ANR	4975437	Identifier	index		4974607	0					
ANR	4975438	PrimaryExpression	0		4974607	1					
ANR	4975439	AssignmentExpression	right = 0		4974607	1		=			
ANR	4975440	Identifier	right		4974607	0					
ANR	4975441	PrimaryExpression	0		4974607	1					
ANR	4975442	Condition	index < sskip	268:33:10522:10534	4974607	1	True				
ANR	4975443	RelationalExpression	index < sskip		4974607	0		<			
ANR	4975444	Identifier	index		4974607	0					
ANR	4975445	Identifier	sskip		4974607	1					
ANR	4975446	AssignmentExpression	index += sraster	268:48:10537:10552	4974607	2	True	+=			
ANR	4975447	Identifier	index		4974607	0					
ANR	4975448	Identifier	sraster		4974607	1					
ANR	4975449	CompoundStatement		170:32:7212:7331	4974607	3					
ANR	4975450	IdentifierDeclStatement	uint bits = ( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift ;	270:32:10622:10741	4974607	0	True				
ANR	4975451	IdentifierDecl	bits = ( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift		4974607	0					
ANR	4975452	IdentifierDeclType	uint		4974607	0					
ANR	4975453	Identifier	bits		4974607	1					
ANR	4975454	AssignmentExpression	bits = ( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift		4974607	2		=			
ANR	4975455	Identifier	bits		4974607	0					
ANR	4975456	ShiftExpression	( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift		4974607	1		>>			
ANR	4975457	AdditiveExpression	( s [ index ] << 8 ) + s [ index + 1 ]		4974607	0		+			
ANR	4975458	ShiftExpression	s [ index ] << 8		4974607	0		<<			
ANR	4975459	ArrayIndexing	s [ index ]		4974607	0					
ANR	4975460	Identifier	s		4974607	0					
ANR	4975461	Identifier	index		4974607	1					
ANR	4975462	PrimaryExpression	8		4974607	1					
ANR	4975463	ArrayIndexing	s [ index + 1 ]		4974607	1					
ANR	4975464	Identifier	s		4974607	0					
ANR	4975465	AdditiveExpression	index + 1		4974607	1		+			
ANR	4975466	Identifier	index		4974607	0					
ANR	4975467	PrimaryExpression	1		4974607	1					
ANR	4975468	Identifier	rshift		4974607	1					
ANR	4975469	ExpressionStatement	right += bits5_leading_1s [ ( bits & mask1 ) << ( 4 - xscale ) ]	274:32:10776:10833	4974607	1	True				
ANR	4975470	AssignmentExpression	right += bits5_leading_1s [ ( bits & mask1 ) << ( 4 - xscale ) ]		4974607	0		+=			
ANR	4975471	Identifier	right		4974607	0					
ANR	4975472	ArrayIndexing	bits5_leading_1s [ ( bits & mask1 ) << ( 4 - xscale ) ]		4974607	1					
ANR	4975473	Identifier	bits5_leading_1s		4974607	0					
ANR	4975474	ShiftExpression	( bits & mask1 ) << ( 4 - xscale )		4974607	1		<<			
ANR	4975475	BitAndExpression	bits & mask1		4974607	0		&			
ANR	4975476	Identifier	bits		4974607	0					
ANR	4975477	Identifier	mask1		4974607	1					
ANR	4975478	AdditiveExpression	4 - xscale		4974607	1		-			
ANR	4975479	PrimaryExpression	4		4974607	0					
ANR	4975480	Identifier	xscale		4974607	1					
ANR	4975481	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  right adds %d\\n"" , right )"	276:28:10893:10976	4974607	3	True				
ANR	4975482	CallExpression	"if_debug1 ( 'B' , ""[B]  right adds %d\\n"" , right )"		4974607	0					
ANR	4975483	Callee	if_debug1		4974607	0					
ANR	4975484	Identifier	if_debug1		4974607	0					
ANR	4975485	ArgumentList	'B'		4974607	1					
ANR	4975486	Argument	'B'		4974607	0					
ANR	4975487	PrimaryExpression	'B'		4974607	0					
ANR	4975488	Argument	"""[B]  right adds %d\\n"""		4974607	1					
ANR	4975489	PrimaryExpression	"""[B]  right adds %d\\n"""		4974607	0					
ANR	4975490	Argument	right		4974607	2					
ANR	4975491	Identifier	right		4974607	0					
ANR	4975492	IfStatement	if ( right <= orig_count )		4974607	4					
ANR	4975493	Condition	right <= orig_count	278:32:11010:11028	4974607	0	True				
ANR	4975494	RelationalExpression	right <= orig_count		4974607	0		<=			
ANR	4975495	Identifier	right		4974607	0					
ANR	4975496	Identifier	orig_count		4974607	1					
ANR	4975497	ExpressionStatement	count += right	279:32:11063:11077	4974607	1	True				
ANR	4975498	AssignmentExpression	count += right		4974607	0		+=			
ANR	4975499	Identifier	count		4974607	0					
ANR	4975500	Identifier	right		4974607	1					
ANR	4975501	IfStatement	if ( count > count_max )		4974607	6					
ANR	4975502	Condition	count > count_max	282:24:11151:11167	4974607	0	True				
ANR	4975503	RelationalExpression	count > count_max		4974607	0		>			
ANR	4975504	Identifier	count		4974607	0					
ANR	4975505	Identifier	count_max		4974607	1					
ANR	4975506	ExpressionStatement	count = count_max	283:24:11194:11211	4974607	1	True				
ANR	4975507	AssignmentExpression	count = count_max		4974607	0		=			
ANR	4975508	Identifier	count		4974607	0					
ANR	4975509	Identifier	count_max		4974607	1					
ANR	4975510	ExpressionStatement	out += table [ count ] << out_shift	285:16:11247:11279	4974607	3	True				
ANR	4975511	AssignmentExpression	out += table [ count ] << out_shift		4974607	0		+=			
ANR	4975512	Identifier	out		4974607	0					
ANR	4975513	ShiftExpression	table [ count ] << out_shift		4974607	1		<<			
ANR	4975514	ArrayIndexing	table [ count ]		4974607	0					
ANR	4975515	Identifier	table		4974607	0					
ANR	4975516	Identifier	count		4974607	1					
ANR	4975517	Identifier	out_shift		4974607	1					
ANR	4975518	IfStatement	"if ( out_shift_update ( out_shift , out_bits ) )"		4974607	4					
ANR	4975519	Condition	"out_shift_update ( out_shift , out_bits )"	286:20:11301:11337	4974607	0	True				
ANR	4975520	CallExpression	"out_shift_update ( out_shift , out_bits )"		4974607	0					
ANR	4975521	Callee	out_shift_update		4974607	0					
ANR	4975522	Identifier	out_shift_update		4974607	0					
ANR	4975523	ArgumentList	out_shift		4974607	1					
ANR	4975524	Argument	out_shift		4974607	0					
ANR	4975525	Identifier	out_shift		4974607	0					
ANR	4975526	Argument	out_bits		4974607	1					
ANR	4975527	Identifier	out_bits		4974607	0					
ANR	4975528	ExpressionStatement	"* d ++ = out , out_shift &= 7 , out = 0"	287:20:11360:11395	4974607	1	True				
ANR	4975529	Expression	"* d ++ = out , out_shift &= 7 , out = 0"		4974607	0					
ANR	4975530	AssignmentExpression	* d ++ = out		4974607	0		=			
ANR	4975531	UnaryOperationExpression	* d ++		4974607	0					
ANR	4975532	UnaryOperator	*		4974607	0					
ANR	4975533	PostIncDecOperationExpression	d ++		4974607	1					
ANR	4975534	Identifier	d		4974607	0					
ANR	4975535	IncDec	++		4974607	1					
ANR	4975536	Identifier	out		4974607	1					
ANR	4975537	Expression	"out_shift &= 7 , out = 0"		4974607	1					
ANR	4975538	AssignmentExpression	out_shift &= 7		4974607	0		&=			
ANR	4975539	Identifier	out_shift		4974607	0					
ANR	4975540	PrimaryExpression	7		4974607	1					
ANR	4975541	AssignmentExpression	out = 0		4974607	1		=			
ANR	4975542	Identifier	out		4974607	0					
ANR	4975543	PrimaryExpression	0		4974607	1					
ANR	4975544	Condition	( in_shift -= xscale ) >= in_shift_final	289:19:11430:11467	4974607	1	True				
ANR	4975545	RelationalExpression	( in_shift -= xscale ) >= in_shift_final		4974607	0		>=			
ANR	4975546	AssignmentExpression	in_shift -= xscale		4974607	0		-=			
ANR	4975547	Identifier	in_shift		4974607	0					
ANR	4975548	Identifier	xscale		4974607	1					
ANR	4975549	Identifier	in_shift_final		4974607	1					
ANR	4975550	ExpressionStatement	"s ++ , in_shift += 8"	290:12:11483:11501	4974607	5	True				
ANR	4975551	Expression	"s ++ , in_shift += 8"		4974607	0					
ANR	4975552	PostIncDecOperationExpression	s ++		4974607	0					
ANR	4975553	Identifier	s		4974607	0					
ANR	4975554	IncDec	++		4974607	1					
ANR	4975555	AssignmentExpression	in_shift += 8		4974607	1		+=			
ANR	4975556	Identifier	in_shift		4974607	0					
ANR	4975557	PrimaryExpression	8		4974607	1					
ANR	4975558	IfStatement	if ( out_shift != out_shift_initial )		4974607	28					
ANR	4975559	Condition	out_shift != out_shift_initial	292:12:11525:11554	4974607	0	True				
ANR	4975560	EqualityExpression	out_shift != out_shift_initial		4974607	0		!=			
ANR	4975561	Identifier	out_shift		4974607	0					
ANR	4975562	Identifier	out_shift_initial		4974607	1					
ANR	4975563	ExpressionStatement	* d ++ = out	293:12:11569:11579	4974607	1	True				
ANR	4975564	AssignmentExpression	* d ++ = out		4974607	0		=			
ANR	4975565	UnaryOperationExpression	* d ++		4974607	0					
ANR	4975566	UnaryOperator	*		4974607	0					
ANR	4975567	PostIncDecOperationExpression	d ++		4974607	1					
ANR	4975568	Identifier	d		4974607	0					
ANR	4975569	IncDec	++		4974607	1					
ANR	4975570	Identifier	out		4974607	1					
ANR	4975571	ForStatement	for ( w = dskip ; w != 0 ; w -- )		4974607	29					
ANR	4975572	ForInit	w = dskip ;	294:13:11594:11603	4974607	0	True				
ANR	4975573	AssignmentExpression	w = dskip		4974607	0		=			
ANR	4975574	Identifier	w		4974607	0					
ANR	4975575	Identifier	dskip		4974607	1					
ANR	4975576	Condition	w != 0	294:24:11605:11610	4974607	1	True				
ANR	4975577	EqualityExpression	w != 0		4974607	0		!=			
ANR	4975578	Identifier	w		4974607	0					
ANR	4975579	PrimaryExpression	0		4974607	1					
ANR	4975580	PostIncDecOperationExpression	w --	294:32:11613:11615	4974607	2	True				
ANR	4975581	Identifier	w		4974607	0					
ANR	4975582	IncDec	--		4974607	1					
ANR	4975583	ExpressionStatement	* d ++ = 0	295:12:11630:11638	4974607	3	True				
ANR	4975584	AssignmentExpression	* d ++ = 0		4974607	0		=			
ANR	4975585	UnaryOperationExpression	* d ++		4974607	0					
ANR	4975586	UnaryOperator	*		4974607	0					
ANR	4975587	PostIncDecOperationExpression	d ++		4974607	1					
ANR	4975588	Identifier	d		4974607	0					
ANR	4975589	IncDec	++		4974607	1					
ANR	4975590	PrimaryExpression	0		4974607	1					
ANR	4975591	Statement	undef	296:1:11641:11645	4974607	30	True				
ANR	4975592	Statement	out_shift_initial	296:7:11647:11663	4974607	31	True				
ANR	4975593	Statement	undef	297:1:11666:11670	4974607	32	True				
ANR	4975594	Statement	out_shift_update	297:7:11672:11687	4974607	33	True				
ANR	4975595	ReturnType	void		4974607	1					
ANR	4975596	Identifier	bits_compress_scaled		4974607	2					
ANR	4975597	ParameterList	"const byte * src , int srcx , uint width , uint height , uint sraster , byte * dest , uint draster , const gs_log2_scale_point * plog2_scale , int log2_out_bits"		4974607	3					
ANR	4975598	Parameter	const byte * src	98:21:3214:3229	4974607	0	True				
ANR	4975599	ParameterType	const byte *		4974607	0					
ANR	4975600	Identifier	src		4974607	1					
ANR	4975601	Parameter	int srcx	98:39:3232:3239	4974607	1	True				
ANR	4975602	ParameterType	int		4974607	0					
ANR	4975603	Identifier	srcx		4974607	1					
ANR	4975604	Parameter	uint width	98:49:3242:3251	4974607	2	True				
ANR	4975605	ParameterType	uint		4974607	0					
ANR	4975606	Identifier	width		4974607	1					
ANR	4975607	Parameter	uint height	98:61:3254:3264	4974607	3	True				
ANR	4975608	ParameterType	uint		4974607	0					
ANR	4975609	Identifier	height		4974607	1					
ANR	4975610	Parameter	uint sraster	99:21:3288:3299	4974607	4	True				
ANR	4975611	ParameterType	uint		4974607	0					
ANR	4975612	Identifier	sraster		4974607	1					
ANR	4975613	Parameter	byte * dest	99:35:3302:3312	4974607	5	True				
ANR	4975614	ParameterType	byte *		4974607	0					
ANR	4975615	Identifier	dest		4974607	1					
ANR	4975616	Parameter	uint draster	99:48:3315:3326	4974607	6	True				
ANR	4975617	ParameterType	uint		4974607	0					
ANR	4975618	Identifier	draster		4974607	1					
ANR	4975619	Parameter	const gs_log2_scale_point * plog2_scale	100:21:3350:3387	4974607	7	True				
ANR	4975620	ParameterType	const gs_log2_scale_point *		4974607	0					
ANR	4975621	Identifier	plog2_scale		4974607	1					
ANR	4975622	Parameter	int log2_out_bits	100:61:3390:3406	4974607	8	True				
ANR	4975623	ParameterType	int		4974607	0					
ANR	4975624	Identifier	log2_out_bits		4974607	1					
ANR	4975625	CFGEntryNode	ENTRY		4974607		True				
ANR	4975626	CFGExitNode	EXIT		4974607		True				
ANR	4975627	Symbol	dwidth		4974607						
ANR	4975628	Symbol	out_shift_initial		4974607						
ANR	4975629	Symbol	in_shift		4974607						
ANR	4975630	Symbol	* mask		4974607						
ANR	4975631	Symbol	orig_count		4974607						
ANR	4975632	Symbol	* * log2_out_bits		4974607						
ANR	4975633	Symbol	* index		4974607						
ANR	4975634	Symbol	shift		4974607						
ANR	4975635	Symbol	upper		4974607						
ANR	4975636	Symbol	* xscale		4974607						
ANR	4975637	Symbol	dest		4974607						
ANR	4975638	Symbol	yscale		4974607						
ANR	4975639	Symbol	plog2_scale -> x		4974607						
ANR	4975640	Symbol	plog2_scale -> y		4974607						
ANR	4975641	Symbol	* count		4974607						
ANR	4975642	Symbol	dw		4974607						
ANR	4975643	Symbol	in_shift_final		4974607						
ANR	4975644	Symbol	* sskip		4974607						
ANR	4975645	Symbol	* * compress_tables		4974607						
ANR	4975646	Symbol	xscale		4974607						
ANR	4975647	Symbol	* in_shift		4974607						
ANR	4975648	Symbol	height		4974607						
ANR	4975649	Symbol	* bits		4974607						
ANR	4975650	Symbol	srcx		4974607						
ANR	4975651	Symbol	count_max		4974607						
ANR	4975652	Symbol	in		4974607						
ANR	4975653	Symbol	lower		4974607						
ANR	4975654	Symbol	count		4974607						
ANR	4975655	Symbol	bits		4974607						
ANR	4975656	Symbol	index		4974607						
ANR	4975657	Symbol	* table		4974607						
ANR	4975658	Symbol	* plog2_scale		4974607						
ANR	4975659	Symbol	srow		4974607						
ANR	4975660	Symbol	sraster		4974607						
ANR	4975661	Symbol	left		4974607						
ANR	4975662	Symbol	bits5_trailing_1s		4974607						
ANR	4975663	Symbol	* half_byte_1s		4974607						
ANR	4975664	Symbol	half_byte_1s		4974607						
ANR	4975665	Symbol	out_shift_update		4974607						
ANR	4975666	Symbol	* mask1		4974607						
ANR	4975667	Symbol	shifted_mask		4974607						
ANR	4975668	Symbol	compress_tables		4974607						
ANR	4975669	Symbol	lshift		4974607						
ANR	4975670	Symbol	* in		4974607						
ANR	4975671	Symbol	log2_out_bits		4974607						
ANR	4975672	Symbol	* d ++		4974607						
ANR	4975673	Symbol	plog2_scale		4974607						
ANR	4975674	Symbol	out		4974607						
ANR	4975675	Symbol	* bits5_trailing_1s		4974607						
ANR	4975676	Symbol	* log2_y		4974607						
ANR	4975677	Symbol	* compress_tables		4974607						
ANR	4975678	Symbol	* log2_x		4974607						
ANR	4975679	Symbol	dskip		4974607						
ANR	4975680	Symbol	* * s		4974607						
ANR	4975681	Symbol	in_shift_initial		4974607						
ANR	4975682	Symbol	out_shift		4974607						
ANR	4975683	Symbol	* sraster		4974607						
ANR	4975684	Symbol	* * index		4974607						
ANR	4975685	Symbol	rshift		4974607						
ANR	4975686	Symbol	table		4974607						
ANR	4975687	Symbol	mask		4974607						
ANR	4975688	Symbol	out_bits		4974607						
ANR	4975689	Symbol	d		4974607						
ANR	4975690	Symbol	src		4974607						
ANR	4975691	Symbol	draster		4974607						
ANR	4975692	Symbol	input_byte_out_bits		4974607						
ANR	4975693	Symbol	h		4974607						
ANR	4975694	Symbol	mask1		4974607						
ANR	4975695	Symbol	* bits5_leading_1s		4974607						
ANR	4975696	Symbol	right		4974607						
ANR	4975697	Symbol	in_shift_check		4974607						
ANR	4975698	Symbol	* log2_out_bits		4974607						
ANR	4975699	Symbol	log2_x		4974607						
ANR	4975700	Symbol	s		4974607						
ANR	4975701	Symbol	bits5_leading_1s		4974607						
ANR	4975702	Symbol	w		4974607						
ANR	4975703	Symbol	width		4974607						
ANR	4975704	Symbol	sskip		4974607						
ANR	4975705	Symbol	* s		4974607						
ANR	4975706	Symbol	input_byte_out_mask		4974607						
ANR	4975707	Symbol	log2_y		4974607						
