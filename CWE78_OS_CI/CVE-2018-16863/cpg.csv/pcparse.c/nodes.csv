command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8315471	File	data/converged/CVE-2018-16863_ghostpdl/pcparse.c								
ANR	8315472	Function	pcl_register_command	38:0:1266:2030							
ANR	8315473	FunctionDef	"pcl_register_command (byte * pindex , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state)"		8315472	0					
ANR	8315474	CompoundStatement		41:0:1413:2030	8315472	0					
ANR	8315475	IdentifierDeclStatement	int index = pcl_parser_state -> definitions -> pcl_command_next_index ;	42:4:1419:1484	8315472	0	True				
ANR	8315476	IdentifierDecl	index = pcl_parser_state -> definitions -> pcl_command_next_index		8315472	0					
ANR	8315477	IdentifierDeclType	int		8315472	0					
ANR	8315478	Identifier	index		8315472	1					
ANR	8315479	AssignmentExpression	index = pcl_parser_state -> definitions -> pcl_command_next_index		8315472	2		=			
ANR	8315480	Identifier	index		8315472	0					
ANR	8315481	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_next_index		8315472	1					
ANR	8315482	PtrMemberAccess	pcl_parser_state -> definitions		8315472	0					
ANR	8315483	Identifier	pcl_parser_state		8315472	0					
ANR	8315484	Identifier	definitions		8315472	1					
ANR	8315485	Identifier	pcl_command_next_index		8315472	1					
ANR	8315486	IdentifierDeclStatement	byte prev = * pindex ;	44:4:1491:1510	8315472	1	True				
ANR	8315487	IdentifierDecl	prev = * pindex		8315472	0					
ANR	8315488	IdentifierDeclType	byte		8315472	0					
ANR	8315489	Identifier	prev		8315472	1					
ANR	8315490	AssignmentExpression	prev = * pindex		8315472	2		=			
ANR	8315491	Identifier	prev		8315472	0					
ANR	8315492	UnaryOperationExpression	* pindex		8315472	1					
ANR	8315493	UnaryOperator	*		8315472	0					
ANR	8315494	Identifier	pindex		8315472	1					
ANR	8315495	IfStatement	if ( prev != 0 && prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd )		8315472	2					
ANR	8315496	Condition	prev != 0 && prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd	46:8:1521:1619	8315472	0	True				
ANR	8315497	AndExpression	prev != 0 && prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd		8315472	0		&&			
ANR	8315498	EqualityExpression	prev != 0		8315472	0		!=			
ANR	8315499	Identifier	prev		8315472	0					
ANR	8315500	PrimaryExpression	0		8315472	1					
ANR	8315501	AndExpression	prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd		8315472	1		&&			
ANR	8315502	RelationalExpression	prev <= index		8315472	0		<=			
ANR	8315503	Identifier	prev		8315472	0					
ANR	8315504	Identifier	index		8315472	1					
ANR	8315505	EqualityExpression	pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd		8315472	1		==			
ANR	8315506	ArrayIndexing	pcl_parser_state -> definitions -> pcl_command_list [ prev ]		8315472	0					
ANR	8315507	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_list		8315472	0					
ANR	8315508	PtrMemberAccess	pcl_parser_state -> definitions		8315472	0					
ANR	8315509	Identifier	pcl_parser_state		8315472	0					
ANR	8315510	Identifier	definitions		8315472	1					
ANR	8315511	Identifier	pcl_command_list		8315472	1					
ANR	8315512	Identifier	prev		8315472	1					
ANR	8315513	Identifier	pcmd		8315472	1					
ANR	8315514	ExpressionStatement	index = prev	48:8:1630:1642	8315472	1	True				
ANR	8315515	AssignmentExpression	index = prev		8315472	0		=			
ANR	8315516	Identifier	index		8315472	0					
ANR	8315517	Identifier	prev		8315472	1					
ANR	8315518	ElseStatement	else		8315472	0					
ANR	8315519	IfStatement	if ( index != 0 && pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd )		8315472	0					
ANR	8315520	Condition	index != 0 && pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd	49:13:1657:1758	8315472	0	True				
ANR	8315521	AndExpression	index != 0 && pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd		8315472	0		&&			
ANR	8315522	EqualityExpression	index != 0		8315472	0		!=			
ANR	8315523	Identifier	index		8315472	0					
ANR	8315524	PrimaryExpression	0		8315472	1					
ANR	8315525	EqualityExpression	pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd		8315472	1		==			
ANR	8315526	ArrayIndexing	pcl_parser_state -> definitions -> pcl_command_list [ index ]		8315472	0					
ANR	8315527	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_list		8315472	0					
ANR	8315528	PtrMemberAccess	pcl_parser_state -> definitions		8315472	0					
ANR	8315529	Identifier	pcl_parser_state		8315472	0					
ANR	8315530	Identifier	definitions		8315472	1					
ANR	8315531	Identifier	pcl_command_list		8315472	1					
ANR	8315532	Identifier	index		8315472	1					
ANR	8315533	Identifier	pcmd		8315472	1					
ANR	8315534	ExpressionStatement		51:18:1760:1760	8315472	1	True				
ANR	8315535	ElseStatement	else		8315472	0					
ANR	8315536	ExpressionStatement	pcl_parser_state -> definitions -> pcl_command_list [ pcl_parser_state -> definitions -> pcl_command_next_index = ++ index ] = ( pcl_command_definition_t * ) pcmd	53:8:1779:1966	8315472	0	True				
ANR	8315537	AssignmentExpression	pcl_parser_state -> definitions -> pcl_command_list [ pcl_parser_state -> definitions -> pcl_command_next_index = ++ index ] = ( pcl_command_definition_t * ) pcmd		8315472	0		=			
ANR	8315538	ArrayIndexing	pcl_parser_state -> definitions -> pcl_command_list [ pcl_parser_state -> definitions -> pcl_command_next_index = ++ index ]		8315472	0					
ANR	8315539	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_list		8315472	0					
ANR	8315540	PtrMemberAccess	pcl_parser_state -> definitions		8315472	0					
ANR	8315541	Identifier	pcl_parser_state		8315472	0					
ANR	8315542	Identifier	definitions		8315472	1					
ANR	8315543	Identifier	pcl_command_list		8315472	1					
ANR	8315544	AssignmentExpression	pcl_parser_state -> definitions -> pcl_command_next_index = ++ index		8315472	1		=			
ANR	8315545	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_next_index		8315472	0					
ANR	8315546	PtrMemberAccess	pcl_parser_state -> definitions		8315472	0					
ANR	8315547	Identifier	pcl_parser_state		8315472	0					
ANR	8315548	Identifier	definitions		8315472	1					
ANR	8315549	Identifier	pcl_command_next_index		8315472	1					
ANR	8315550	UnaryExpression	++ index		8315472	1					
ANR	8315551	IncDec	++		8315472	0					
ANR	8315552	Identifier	index		8315472	1					
ANR	8315553	CastExpression	( pcl_command_definition_t * ) pcmd		8315472	1					
ANR	8315554	CastTarget	pcl_command_definition_t *		8315472	0					
ANR	8315555	Identifier	pcmd		8315472	1					
ANR	8315556	ExpressionStatement	* pindex = index	57:4:1972:1987	8315472	3	True				
ANR	8315557	AssignmentExpression	* pindex = index		8315472	0		=			
ANR	8315558	UnaryOperationExpression	* pindex		8315472	0					
ANR	8315559	UnaryOperator	*		8315472	0					
ANR	8315560	Identifier	pindex		8315472	1					
ANR	8315561	Identifier	index		8315472	1					
ANR	8315562	ReturnStatement	return ( prev != 0 && prev != index ) ;	58:4:1993:2028	8315472	4	True				
ANR	8315563	AndExpression	prev != 0 && prev != index		8315472	0		&&			
ANR	8315564	EqualityExpression	prev != 0		8315472	0		!=			
ANR	8315565	Identifier	prev		8315472	0					
ANR	8315566	PrimaryExpression	0		8315472	1					
ANR	8315567	EqualityExpression	prev != index		8315472	1		!=			
ANR	8315568	Identifier	prev		8315472	0					
ANR	8315569	Identifier	index		8315472	1					
ANR	8315570	ReturnType	static bool		8315472	1					
ANR	8315571	Identifier	pcl_register_command		8315472	2					
ANR	8315572	ParameterList	"byte * pindex , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state"		8315472	3					
ANR	8315573	Parameter	byte * pindex	39:21:1299:1311	8315472	0	True				
ANR	8315574	ParameterType	byte *		8315472	0					
ANR	8315575	Identifier	pindex		8315472	1					
ANR	8315576	Parameter	const pcl_command_definition_t * pcmd	39:36:1314:1350	8315472	1	True				
ANR	8315577	ParameterType	const pcl_command_definition_t *		8315472	0					
ANR	8315578	Identifier	pcmd		8315472	1					
ANR	8315579	Parameter	pcl_parser_state_t * pcl_parser_state	40:21:1374:1410	8315472	2	True				
ANR	8315580	ParameterType	pcl_parser_state_t *		8315472	0					
ANR	8315581	Identifier	pcl_parser_state		8315472	1					
ANR	8315582	CFGEntryNode	ENTRY		8315472		True				
ANR	8315583	CFGExitNode	EXIT		8315472		True				
ANR	8315584	Symbol	pcl_parser_state -> definitions -> pcl_command_next_index		8315472						
ANR	8315585	Symbol	* * pcl_parser_state -> definitions		8315472						
ANR	8315586	Symbol	pcl_parser_state		8315472						
ANR	8315587	Symbol	* pcl_parser_state -> definitions		8315472						
ANR	8315588	Symbol	prev		8315472						
ANR	8315589	Symbol	* index		8315472						
ANR	8315590	Symbol	index		8315472						
ANR	8315591	Symbol	* pindex		8315472						
ANR	8315592	Symbol	* prev		8315472						
ANR	8315593	Symbol	pcl_parser_state -> definitions -> pcl_command_list		8315472						
ANR	8315594	Symbol	pcl_parser_state -> definitions		8315472						
ANR	8315595	Symbol	* pcl_parser_state -> definitions -> pcl_command_list		8315472						
ANR	8315596	Symbol	* pcl_parser_state		8315472						
ANR	8315597	Symbol	* * pcl_parser_state		8315472						
ANR	8315598	Symbol	pindex		8315472						
ANR	8315599	Symbol	* * * pcl_parser_state		8315472						
ANR	8315600	Symbol	pcmd		8315472						
ANR	8315601	Function	pcl_define_control_command	62:0:2077:2775							
ANR	8315602	FunctionDef	"pcl_define_control_command (int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state)"		8315601	0					
ANR	8315603	CompoundStatement		66:0:2260:2775	8315601	0					
ANR	8315604	IfStatement	if ( chr < 0 || chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices ) )		8315601	0					
ANR	8315605	Condition	chr < 0 || chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )	68:8:2283:2383	8315601	0	True				
ANR	8315606	OrExpression	chr < 0 || chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )		8315601	0		||			
ANR	8315607	RelationalExpression	chr < 0		8315601	0		<			
ANR	8315608	Identifier	chr		8315601	0					
ANR	8315609	PrimaryExpression	0		8315601	1					
ANR	8315610	RelationalExpression	chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )		8315601	1		>=			
ANR	8315611	Identifier	chr		8315601	0					
ANR	8315612	CallExpression	countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )		8315601	1					
ANR	8315613	Callee	countof		8315601	0					
ANR	8315614	Identifier	countof		8315601	0					
ANR	8315615	ArgumentList	pcl_parser_state -> definitions -> pcl_control_command_indices		8315601	1					
ANR	8315616	Argument	pcl_parser_state -> definitions -> pcl_control_command_indices		8315601	0					
ANR	8315617	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_control_command_indices		8315601	0					
ANR	8315618	PtrMemberAccess	pcl_parser_state -> definitions		8315601	0					
ANR	8315619	Identifier	pcl_parser_state		8315601	0					
ANR	8315620	Identifier	definitions		8315601	1					
ANR	8315621	Identifier	pcl_control_command_indices		8315601	1					
ANR	8315622	ExpressionStatement	"if_debug1 ( 'I' , ""Invalid control character %d\\n"" , chr )"	71:8:2394:2447	8315601	1	True				
ANR	8315623	CallExpression	"if_debug1 ( 'I' , ""Invalid control character %d\\n"" , chr )"		8315601	0					
ANR	8315624	Callee	if_debug1		8315601	0					
ANR	8315625	Identifier	if_debug1		8315601	0					
ANR	8315626	ArgumentList	'I'		8315601	1					
ANR	8315627	Argument	'I'		8315601	0					
ANR	8315628	PrimaryExpression	'I'		8315601	0					
ANR	8315629	Argument	"""Invalid control character %d\\n"""		8315601	1					
ANR	8315630	PrimaryExpression	"""Invalid control character %d\\n"""		8315601	0					
ANR	8315631	Argument	chr		8315601	2					
ANR	8315632	Identifier	chr		8315601	0					
ANR	8315633	ElseStatement	else		8315601	0					
ANR	8315634	Statement	if	72:9:2458:2459	8315601	0	True				
ANR	8315635	Statement	(	72:12:2461:2461	8315601	1	True				
ANR	8315636	Statement	pcl_register_command	74:16:2486:2505	8315601	2	True				
ANR	8315637	Statement	(	74:36:2506:2506	8315601	3	True				
ANR	8315638	Statement	&	74:37:2507:2507	8315601	4	True				
ANR	8315639	Statement	pcl_parser_state	74:38:2508:2523	8315601	5	True				
ANR	8315640	Statement	->	74:54:2524:2525	8315601	6	True				
ANR	8315641	Statement	definitions	75:37:2564:2574	8315601	7	True				
ANR	8315642	Statement	->	75:48:2575:2576	8315601	8	True				
ANR	8315643	Statement	pcl_control_command_indices	75:50:2577:2603	8315601	9	True				
ANR	8315644	Statement	[	76:37:2642:2642	8315601	10	True				
ANR	8315645	Statement	chr	76:38:2643:2645	8315601	11	True				
ANR	8315646	Statement	]	76:41:2646:2646	8315601	12	True				
ANR	8315647	Statement	","	76:42:2647:2647	8315601	13	True				
ANR	8315648	Statement	pcmd	76:44:2649:2652	8315601	14	True				
ANR	8315649	Statement	","	76:48:2653:2653	8315601	15	True				
ANR	8315650	Statement	pcl_parser_state	76:50:2655:2670	8315601	16	True				
ANR	8315651	Statement	)	76:66:2671:2671	8315601	17	True				
ANR	8315652	Statement	)	78:8:2694:2694	8315601	18	True				
ANR	8315653	ExpressionStatement	"if_debug1 ( 'I' , ""Redefining control character %d\\n"" , chr )"	79:8:2704:2760	8315601	19	True				
ANR	8315654	CallExpression	"if_debug1 ( 'I' , ""Redefining control character %d\\n"" , chr )"		8315601	0					
ANR	8315655	Callee	if_debug1		8315601	0					
ANR	8315656	Identifier	if_debug1		8315601	0					
ANR	8315657	ArgumentList	'I'		8315601	1					
ANR	8315658	Argument	'I'		8315601	0					
ANR	8315659	PrimaryExpression	'I'		8315601	0					
ANR	8315660	Argument	"""Redefining control character %d\\n"""		8315601	1					
ANR	8315661	PrimaryExpression	"""Redefining control character %d\\n"""		8315601	0					
ANR	8315662	Argument	chr		8315601	2					
ANR	8315663	Identifier	chr		8315601	0					
ANR	8315664	ExpressionStatement		81:4:2773:2773	8315601	20	True				
ANR	8315665	ReturnType	void		8315601	1					
ANR	8315666	Identifier	pcl_define_control_command		8315601	2					
ANR	8315667	ParameterList	"int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state"		8315601	3					
ANR	8315668	Parameter	int chr	63:27:2109:2125	8315601	0	True				
ANR	8315669	ParameterType	int		8315601	0					
ANR	8315670	Identifier	chr		8315601	1					
ANR	8315671	Parameter	const pcl_command_definition_t * pcmd	64:27:2155:2191	8315601	1	True				
ANR	8315672	ParameterType	const pcl_command_definition_t *		8315601	0					
ANR	8315673	Identifier	pcmd		8315601	1					
ANR	8315674	Parameter	pcl_parser_state_t * pcl_parser_state	65:27:2221:2257	8315601	2	True				
ANR	8315675	ParameterType	pcl_parser_state_t *		8315601	0					
ANR	8315676	Identifier	pcl_parser_state		8315601	1					
ANR	8315677	CFGEntryNode	ENTRY		8315601		True				
ANR	8315678	CFGExitNode	EXIT		8315601		True				
ANR	8315679	Symbol	* pcl_parser_state		8315601						
ANR	8315680	Symbol	countof		8315601						
ANR	8315681	Symbol	pcl_parser_state		8315601						
ANR	8315682	Symbol	* * pcl_parser_state		8315601						
ANR	8315683	Symbol	* pcl_parser_state -> definitions		8315601						
ANR	8315684	Symbol	chr		8315601						
ANR	8315685	Symbol	pcmd		8315601						
ANR	8315686	Symbol	pcl_parser_state -> definitions -> pcl_control_command_indices		8315601						
ANR	8315687	Symbol	pcl_parser_state -> definitions		8315601						
ANR	8315688	Function	pcl_define_escape_command	83:0:2777:3466							
ANR	8315689	FunctionDef	"pcl_define_escape_command (int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state)"		8315688	0					
ANR	8315690	CompoundStatement		87:0:2957:3466	8315688	0					
ANR	8315691	IfStatement	if ( chr < min_escape_2char || chr > max_escape_2char )		8315688	0					
ANR	8315692	Condition	chr < min_escape_2char || chr > max_escape_2char	89:8:2980:3027	8315688	0	True				
ANR	8315693	OrExpression	chr < min_escape_2char || chr > max_escape_2char		8315688	0		||			
ANR	8315694	RelationalExpression	chr < min_escape_2char		8315688	0		<			
ANR	8315695	Identifier	chr		8315688	0					
ANR	8315696	Identifier	min_escape_2char		8315688	1					
ANR	8315697	RelationalExpression	chr > max_escape_2char		8315688	1		>			
ANR	8315698	Identifier	chr		8315688	0					
ANR	8315699	Identifier	max_escape_2char		8315688	1					
ANR	8315700	ExpressionStatement	"if_debug1 ( 'I' , ""Invalid escape character %c\\n"" , chr )"	90:8:3038:3090	8315688	1	True				
ANR	8315701	CallExpression	"if_debug1 ( 'I' , ""Invalid escape character %c\\n"" , chr )"		8315688	0					
ANR	8315702	Callee	if_debug1		8315688	0					
ANR	8315703	Identifier	if_debug1		8315688	0					
ANR	8315704	ArgumentList	'I'		8315688	1					
ANR	8315705	Argument	'I'		8315688	0					
ANR	8315706	PrimaryExpression	'I'		8315688	0					
ANR	8315707	Argument	"""Invalid escape character %c\\n"""		8315688	1					
ANR	8315708	PrimaryExpression	"""Invalid escape character %c\\n"""		8315688	0					
ANR	8315709	Argument	chr		8315688	2					
ANR	8315710	Identifier	chr		8315688	0					
ANR	8315711	ElseStatement	else		8315688	0					
ANR	8315712	Statement	if	91:9:3101:3102	8315688	0	True				
ANR	8315713	Statement	(	91:12:3104:3104	8315688	1	True				
ANR	8315714	Statement	pcl_register_command	93:16:3129:3148	8315688	2	True				
ANR	8315715	Statement	(	93:36:3149:3149	8315688	3	True				
ANR	8315716	Statement	&	93:37:3150:3150	8315688	4	True				
ANR	8315717	Statement	pcl_parser_state	93:38:3151:3166	8315688	5	True				
ANR	8315718	Statement	->	93:54:3167:3168	8315688	6	True				
ANR	8315719	Statement	definitions	94:37:3207:3217	8315688	7	True				
ANR	8315720	Statement	->	94:48:3218:3219	8315688	8	True				
ANR	8315721	Statement	pcl_escape_command_indices	94:50:3220:3245	8315688	9	True				
ANR	8315722	Statement	[	95:37:3284:3284	8315688	10	True				
ANR	8315723	Statement	chr	95:38:3285:3287	8315688	11	True				
ANR	8315724	Statement	-	95:42:3289:3289	8315688	12	True				
ANR	8315725	Statement	min_escape_2char	95:44:3291:3306	8315688	13	True				
ANR	8315726	Statement	]	95:60:3307:3307	8315688	14	True				
ANR	8315727	Statement	","	95:61:3308:3308	8315688	15	True				
ANR	8315728	Statement	pcmd	95:63:3310:3313	8315688	16	True				
ANR	8315729	Statement	","	95:67:3314:3314	8315688	17	True				
ANR	8315730	Statement	pcl_parser_state	96:37:3353:3368	8315688	18	True				
ANR	8315731	Statement	)	96:53:3369:3369	8315688	19	True				
ANR	8315732	Statement	)	98:8:3392:3392	8315688	20	True				
ANR	8315733	Statement	if_debug1	99:8:3402:3410	8315688	21	True				
ANR	8315734	Statement	(	99:17:3411:3411	8315688	22	True				
ANR	8315735	Statement	'I'	99:18:3412:3414	8315688	23	True				
ANR	8315736	Statement	","	99:21:3415:3415	8315688	24	True				
ANR	8315737	Statement	"""Redefining ESC %c\\n"""	99:23:3417:3437	8315688	25	True				
ANR	8315738	Statement	","	99:44:3438:3438	8315688	26	True				
ANR	8315739	Statement	chr	99:46:3440:3442	8315688	27	True				
ANR	8315740	Statement	)	99:49:3443:3443	8315688	28	True				
ANR	8315741	ExpressionStatement		101:12:3464:3464	8315688	29	True				
ANR	8315742	ReturnType	void		8315688	1					
ANR	8315743	Identifier	pcl_define_escape_command		8315688	2					
ANR	8315744	ParameterList	"int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state"		8315688	3					
ANR	8315745	Parameter	int chr	84:26:2808:2824	8315688	0	True				
ANR	8315746	ParameterType	int		8315688	0					
ANR	8315747	Identifier	chr		8315688	1					
ANR	8315748	Parameter	const pcl_command_definition_t * pcmd	85:26:2853:2889	8315688	1	True				
ANR	8315749	ParameterType	const pcl_command_definition_t *		8315688	0					
ANR	8315750	Identifier	pcmd		8315688	1					
ANR	8315751	Parameter	pcl_parser_state_t * pcl_parser_state	86:26:2918:2954	8315688	2	True				
ANR	8315752	ParameterType	pcl_parser_state_t *		8315688	0					
ANR	8315753	Identifier	pcl_parser_state		8315688	1					
ANR	8315754	CFGEntryNode	ENTRY		8315688		True				
ANR	8315755	CFGExitNode	EXIT		8315688		True				
ANR	8315756	Symbol	pcl_parser_state		8315688						
ANR	8315757	Symbol	max_escape_2char		8315688						
ANR	8315758	Symbol	min_escape_2char		8315688						
ANR	8315759	Symbol	chr		8315688						
ANR	8315760	Symbol	pcmd		8315688						
ANR	8315761	DeclStmt									
ANR	8315762	Decl							const byte	const byte [ max_escape_class - min_escape_class + 1 ]	pcl_escape_class_indices
ANR	8315763	DeclStmt									
ANR	8315764	Decl							const pcl_grouped_command_definition_t	const pcl_grouped_command_definition_t *	pgc
ANR	8315765	DeclStmt									
ANR	8315766	Decl							const pcl_command_definition_t	const pcl_command_definition_t *	cdefn
ANR	8315767	DeclStmt									
ANR	8315768	Decl							int	int	class_index
ANR	8315769	Function	pcl_process_init	202:0:7219:7302							
ANR	8315770	FunctionDef	pcl_process_init (pcl_parser_state_t * pst)		8315769	0					
ANR	8315771	CompoundStatement		204:0:7267:7302	8315769	0					
ANR	8315772	ExpressionStatement	pcl_parser_init_inline ( pst )	205:4:7273:7300	8315769	0	True				
ANR	8315773	CallExpression	pcl_parser_init_inline ( pst )		8315769	0					
ANR	8315774	Callee	pcl_parser_init_inline		8315769	0					
ANR	8315775	Identifier	pcl_parser_init_inline		8315769	0					
ANR	8315776	ArgumentList	pst		8315769	1					
ANR	8315777	Argument	pst		8315769	0					
ANR	8315778	Identifier	pst		8315769	0					
ANR	8315779	ReturnType	void		8315769	1					
ANR	8315780	Identifier	pcl_process_init		8315769	2					
ANR	8315781	ParameterList	pcl_parser_state_t * pst		8315769	3					
ANR	8315782	Parameter	pcl_parser_state_t * pst	203:17:7241:7264	8315769	0	True				
ANR	8315783	ParameterType	pcl_parser_state_t *		8315769	0					
ANR	8315784	Identifier	pst		8315769	1					
ANR	8315785	CFGEntryNode	ENTRY		8315769		True				
ANR	8315786	CFGExitNode	EXIT		8315769		True				
ANR	8315787	Symbol	pst		8315769						
ANR	8315788	Function	pcl_adjust_arg	210:0:7428:8353							
ANR	8315789	FunctionDef	"pcl_adjust_arg (pcl_args_t * pargs , const pcl_command_definition_t * pdefn)"		8315788	0					
ANR	8315790	CompoundStatement		212:0:7514:8353	8315788	0					
ANR	8315791	IdentifierDeclStatement	uint acts = pdefn -> actions ;	213:4:7520:7546	8315788	0	True				
ANR	8315792	IdentifierDecl	acts = pdefn -> actions		8315788	0					
ANR	8315793	IdentifierDeclType	uint		8315788	0					
ANR	8315794	Identifier	acts		8315788	1					
ANR	8315795	AssignmentExpression	acts = pdefn -> actions		8315788	2		=			
ANR	8315796	Identifier	acts		8315788	0					
ANR	8315797	PtrMemberAccess	pdefn -> actions		8315788	1					
ANR	8315798	Identifier	pdefn		8315788	0					
ANR	8315799	Identifier	actions		8315788	1					
ANR	8315800	IfStatement	if ( value_is_neg ( & pargs -> value ) )		8315788	1					
ANR	8315801	Condition	value_is_neg ( & pargs -> value )	215:8:7557:7583	8315788	0	True				
ANR	8315802	CallExpression	value_is_neg ( & pargs -> value )		8315788	0					
ANR	8315803	Callee	value_is_neg		8315788	0					
ANR	8315804	Identifier	value_is_neg		8315788	0					
ANR	8315805	ArgumentList	& pargs -> value		8315788	1					
ANR	8315806	Argument	& pargs -> value		8315788	0					
ANR	8315807	UnaryOperationExpression	& pargs -> value		8315788	0					
ANR	8315808	UnaryOperator	&		8315788	0					
ANR	8315809	PtrMemberAccess	pargs -> value		8315788	1					
ANR	8315810	Identifier	pargs		8315788	0					
ANR	8315811	Identifier	value		8315788	1					
ANR	8315812	CompoundStatement		4:37:71:71	8315788	1					
ANR	8315813	SwitchStatement	switch ( acts & pca_neg_action )		8315788	0					
ANR	8315814	Condition	acts & pca_neg_action	216:16:7604:7624	8315788	0	True				
ANR	8315815	BitAndExpression	acts & pca_neg_action		8315788	0		&			
ANR	8315816	Identifier	acts		8315788	0					
ANR	8315817	Identifier	pca_neg_action		8315788	1					
ANR	8315818	CompoundStatement		5:39:112:112	8315788	1					
ANR	8315819	Label	case pca_neg_clamp :	217:12:7641:7659	8315788	0	True				
ANR	8315820	Identifier	pca_neg_clamp		8315788	0					
ANR	8315821	ExpressionStatement	"arg_set_uint ( pargs , 0 )"	218:16:7677:7699	8315788	1	True				
ANR	8315822	CallExpression	"arg_set_uint ( pargs , 0 )"		8315788	0					
ANR	8315823	Callee	arg_set_uint		8315788	0					
ANR	8315824	Identifier	arg_set_uint		8315788	0					
ANR	8315825	ArgumentList	pargs		8315788	1					
ANR	8315826	Argument	pargs		8315788	0					
ANR	8315827	Identifier	pargs		8315788	0					
ANR	8315828	Argument	0		8315788	1					
ANR	8315829	PrimaryExpression	0		8315788	0					
ANR	8315830	BreakStatement	break ;	219:16:7717:7722	8315788	2	True				
ANR	8315831	Label	case pca_neg_error :	220:12:7736:7754	8315788	3	True				
ANR	8315832	Identifier	pca_neg_error		8315788	0					
ANR	8315833	ReturnStatement	return e_Range ;	221:16:7772:7786	8315788	4	True				
ANR	8315834	Identifier	e_Range		8315788	0					
ANR	8315835	Label	case pca_neg_ignore :	222:12:7800:7819	8315788	5	True				
ANR	8315836	Identifier	pca_neg_ignore		8315788	0					
ANR	8315837	ReturnStatement	return 1 ;	223:16:7837:7845	8315788	6	True				
ANR	8315838	PrimaryExpression	1		8315788	0					
ANR	8315839	Label	default :	224:12:7859:7866	8315788	7	True				
ANR	8315840	Identifier	default		8315788	0					
ANR	8315841	ExpressionStatement		225:16:7916:7916	8315788	8	True				
ANR	8315842	ElseStatement	else		8315788	0					
ANR	8315843	IfStatement	if ( pargs -> value . i > 32767 )		8315788	0					
ANR	8315844	Condition	pargs -> value . i > 32767	227:15:7943:7964	8315788	0	True				
ANR	8315845	RelationalExpression	pargs -> value . i > 32767		8315788	0		>			
ANR	8315846	MemberAccess	pargs -> value . i		8315788	0					
ANR	8315847	PtrMemberAccess	pargs -> value		8315788	0					
ANR	8315848	Identifier	pargs		8315788	0					
ANR	8315849	Identifier	value		8315788	1					
ANR	8315850	Identifier	i		8315788	1					
ANR	8315851	PrimaryExpression	32767		8315788	1					
ANR	8315852	SwitchStatement	switch ( acts & pca_big_action )		8315788	1					
ANR	8315853	Condition	acts & pca_big_action	228:16:8011:8031	8315788	0	True				
ANR	8315854	BitAndExpression	acts & pca_big_action		8315788	0		&			
ANR	8315855	Identifier	acts		8315788	0					
ANR	8315856	Identifier	pca_big_action		8315788	1					
ANR	8315857	CompoundStatement		17:39:519:519	8315788	1					
ANR	8315858	Label	case pca_big_clamp :	229:12:8048:8066	8315788	0	True				
ANR	8315859	Identifier	pca_big_clamp		8315788	0					
ANR	8315860	ExpressionStatement	"arg_set_uint ( pargs , 32767 )"	230:16:8084:8110	8315788	1	True				
ANR	8315861	CallExpression	"arg_set_uint ( pargs , 32767 )"		8315788	0					
ANR	8315862	Callee	arg_set_uint		8315788	0					
ANR	8315863	Identifier	arg_set_uint		8315788	0					
ANR	8315864	ArgumentList	pargs		8315788	1					
ANR	8315865	Argument	pargs		8315788	0					
ANR	8315866	Identifier	pargs		8315788	0					
ANR	8315867	Argument	32767		8315788	1					
ANR	8315868	PrimaryExpression	32767		8315788	0					
ANR	8315869	BreakStatement	break ;	231:16:8128:8133	8315788	2	True				
ANR	8315870	Label	case pca_big_error :	232:12:8147:8165	8315788	3	True				
ANR	8315871	Identifier	pca_big_error		8315788	0					
ANR	8315872	ReturnStatement	return e_Range ;	233:16:8183:8197	8315788	4	True				
ANR	8315873	Identifier	e_Range		8315788	0					
ANR	8315874	Label	case pca_big_ignore :	234:12:8211:8230	8315788	5	True				
ANR	8315875	Identifier	pca_big_ignore		8315788	0					
ANR	8315876	ReturnStatement	return 1 ;	235:16:8248:8256	8315788	6	True				
ANR	8315877	PrimaryExpression	1		8315788	0					
ANR	8315878	Label	default :	236:12:8270:8277	8315788	7	True				
ANR	8315879	Identifier	default		8315788	0					
ANR	8315880	ExpressionStatement		237:16:8327:8327	8315788	8	True				
ANR	8315881	ReturnStatement	return 0 ;	239:4:8343:8351	8315788	2	True				
ANR	8315882	PrimaryExpression	0		8315788	0					
ANR	8315883	ReturnType	static int		8315788	1					
ANR	8315884	Identifier	pcl_adjust_arg		8315788	2					
ANR	8315885	ParameterList	"pcl_args_t * pargs , const pcl_command_definition_t * pdefn"		8315788	3					
ANR	8315886	Parameter	pcl_args_t * pargs	211:15:7454:7471	8315788	0	True				
ANR	8315887	ParameterType	pcl_args_t *		8315788	0					
ANR	8315888	Identifier	pargs		8315788	1					
ANR	8315889	Parameter	const pcl_command_definition_t * pdefn	211:35:7474:7511	8315788	1	True				
ANR	8315890	ParameterType	const pcl_command_definition_t *		8315788	0					
ANR	8315891	Identifier	pdefn		8315788	1					
ANR	8315892	CFGEntryNode	ENTRY		8315788		True				
ANR	8315893	CFGExitNode	EXIT		8315788		True				
ANR	8315894	Symbol	pdefn		8315788						
ANR	8315895	Symbol	e_Range		8315788						
ANR	8315896	Symbol	pargs -> value		8315788						
ANR	8315897	Symbol	& pargs -> value		8315788						
ANR	8315898	Symbol	value_is_neg		8315788						
ANR	8315899	Symbol	acts		8315788						
ANR	8315900	Symbol	* pargs		8315788						
ANR	8315901	Symbol	pca_big_action		8315788						
ANR	8315902	Symbol	pargs -> value . i		8315788						
ANR	8315903	Symbol	pargs		8315788						
ANR	8315904	Symbol	* pdefn		8315788						
ANR	8315905	Symbol	pdefn -> actions		8315788						
ANR	8315906	Symbol	pca_neg_action		8315788						
ANR	8315907	Function	append_macro	243:0:8426:8895							
ANR	8315908	FunctionDef	"append_macro (const byte * from , const byte * to , pcl_state_t * pcs)"		8315907	0					
ANR	8315909	CompoundStatement		245:0:8505:8895	8315907	0					
ANR	8315910	IdentifierDeclStatement	uint count = to - from ;	246:4:8511:8533	8315907	0	True				
ANR	8315911	IdentifierDecl	count = to - from		8315907	0					
ANR	8315912	IdentifierDeclType	uint		8315907	0					
ANR	8315913	Identifier	count		8315907	1					
ANR	8315914	AssignmentExpression	count = to - from		8315907	2		=			
ANR	8315915	Identifier	count		8315907	0					
ANR	8315916	AdditiveExpression	to - from		8315907	1		-			
ANR	8315917	Identifier	to		8315907	0					
ANR	8315918	Identifier	from		8315907	1					
ANR	8315919	IdentifierDeclStatement	"uint size = gs_object_size ( pcs -> memory , pcs -> macro_definition ) ;"	247:4:8539:8601	8315907	1	True				
ANR	8315920	IdentifierDecl	"size = gs_object_size ( pcs -> memory , pcs -> macro_definition )"		8315907	0					
ANR	8315921	IdentifierDeclType	uint		8315907	0					
ANR	8315922	Identifier	size		8315907	1					
ANR	8315923	AssignmentExpression	"size = gs_object_size ( pcs -> memory , pcs -> macro_definition )"		8315907	2		=			
ANR	8315924	Identifier	size		8315907	0					
ANR	8315925	CallExpression	"gs_object_size ( pcs -> memory , pcs -> macro_definition )"		8315907	1					
ANR	8315926	Callee	gs_object_size		8315907	0					
ANR	8315927	Identifier	gs_object_size		8315907	0					
ANR	8315928	ArgumentList	pcs -> memory		8315907	1					
ANR	8315929	Argument	pcs -> memory		8315907	0					
ANR	8315930	PtrMemberAccess	pcs -> memory		8315907	0					
ANR	8315931	Identifier	pcs		8315907	0					
ANR	8315932	Identifier	memory		8315907	1					
ANR	8315933	Argument	pcs -> macro_definition		8315907	1					
ANR	8315934	PtrMemberAccess	pcs -> macro_definition		8315907	0					
ANR	8315935	Identifier	pcs		8315907	0					
ANR	8315936	Identifier	macro_definition		8315907	1					
ANR	8315937	IdentifierDeclStatement	"byte * new_defn = gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" ) ;"	248:4:8607:8739	8315907	2	True				
ANR	8315938	IdentifierDecl	"* new_defn = gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" )"		8315907	0					
ANR	8315939	IdentifierDeclType	byte *		8315907	0					
ANR	8315940	Identifier	new_defn		8315907	1					
ANR	8315941	AssignmentExpression	"* new_defn = gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" )"		8315907	2		=			
ANR	8315942	Identifier	new_defn		8315907	0					
ANR	8315943	CallExpression	"gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" )"		8315907	1					
ANR	8315944	Callee	gs_resize_object		8315907	0					
ANR	8315945	Identifier	gs_resize_object		8315907	0					
ANR	8315946	ArgumentList	pcs -> memory		8315907	1					
ANR	8315947	Argument	pcs -> memory		8315907	0					
ANR	8315948	PtrMemberAccess	pcs -> memory		8315907	0					
ANR	8315949	Identifier	pcs		8315907	0					
ANR	8315950	Identifier	memory		8315907	1					
ANR	8315951	Argument	pcs -> macro_definition		8315907	1					
ANR	8315952	PtrMemberAccess	pcs -> macro_definition		8315907	0					
ANR	8315953	Identifier	pcs		8315907	0					
ANR	8315954	Identifier	macro_definition		8315907	1					
ANR	8315955	Argument	size + count		8315907	2					
ANR	8315956	AdditiveExpression	size + count		8315907	0		+			
ANR	8315957	Identifier	size		8315907	0					
ANR	8315958	Identifier	count		8315907	1					
ANR	8315959	Argument	"""append_macro"""		8315907	3					
ANR	8315960	PrimaryExpression	"""append_macro"""		8315907	0					
ANR	8315961	IfStatement	if ( new_defn == 0 )		8315907	3					
ANR	8315962	Condition	new_defn == 0	252:8:8750:8762	8315907	0	True				
ANR	8315963	EqualityExpression	new_defn == 0		8315907	0		==			
ANR	8315964	Identifier	new_defn		8315907	0					
ANR	8315965	PrimaryExpression	0		8315907	1					
ANR	8315966	ExpressionStatement	return_error ( e_Memory )	253:8:8773:8795	8315907	1	True				
ANR	8315967	CallExpression	return_error ( e_Memory )		8315907	0					
ANR	8315968	Callee	return_error		8315907	0					
ANR	8315969	Identifier	return_error		8315907	0					
ANR	8315970	ArgumentList	e_Memory		8315907	1					
ANR	8315971	Argument	e_Memory		8315907	0					
ANR	8315972	Identifier	e_Memory		8315907	0					
ANR	8315973	ExpressionStatement	"memcpy ( new_defn + size , from + 1 , count )"	254:4:8801:8841	8315907	4	True				
ANR	8315974	CallExpression	"memcpy ( new_defn + size , from + 1 , count )"		8315907	0					
ANR	8315975	Callee	memcpy		8315907	0					
ANR	8315976	Identifier	memcpy		8315907	0					
ANR	8315977	ArgumentList	new_defn + size		8315907	1					
ANR	8315978	Argument	new_defn + size		8315907	0					
ANR	8315979	AdditiveExpression	new_defn + size		8315907	0		+			
ANR	8315980	Identifier	new_defn		8315907	0					
ANR	8315981	Identifier	size		8315907	1					
ANR	8315982	Argument	from + 1		8315907	1					
ANR	8315983	AdditiveExpression	from + 1		8315907	0		+			
ANR	8315984	Identifier	from		8315907	0					
ANR	8315985	PrimaryExpression	1		8315907	1					
ANR	8315986	Argument	count		8315907	2					
ANR	8315987	Identifier	count		8315907	0					
ANR	8315988	ExpressionStatement	pcs -> macro_definition = new_defn	255:4:8847:8879	8315907	5	True				
ANR	8315989	AssignmentExpression	pcs -> macro_definition = new_defn		8315907	0		=			
ANR	8315990	PtrMemberAccess	pcs -> macro_definition		8315907	0					
ANR	8315991	Identifier	pcs		8315907	0					
ANR	8315992	Identifier	macro_definition		8315907	1					
ANR	8315993	Identifier	new_defn		8315907	1					
ANR	8315994	ReturnStatement	return 0 ;	256:4:8885:8893	8315907	6	True				
ANR	8315995	PrimaryExpression	0		8315907	0					
ANR	8315996	ReturnType	static int		8315907	1					
ANR	8315997	Identifier	append_macro		8315907	2					
ANR	8315998	ParameterList	"const byte * from , const byte * to , pcl_state_t * pcs"		8315907	3					
ANR	8315999	Parameter	const byte * from	244:13:8450:8466	8315907	0	True				
ANR	8316000	ParameterType	const byte *		8315907	0					
ANR	8316001	Identifier	from		8315907	1					
ANR	8316002	Parameter	const byte * to	244:32:8469:8483	8315907	1	True				
ANR	8316003	ParameterType	const byte *		8315907	0					
ANR	8316004	Identifier	to		8315907	1					
ANR	8316005	Parameter	pcl_state_t * pcs	244:49:8486:8502	8315907	2	True				
ANR	8316006	ParameterType	pcl_state_t *		8315907	0					
ANR	8316007	Identifier	pcs		8315907	1					
ANR	8316008	CFGEntryNode	ENTRY		8315907		True				
ANR	8316009	CFGExitNode	EXIT		8315907		True				
ANR	8316010	Symbol	pcs		8315907						
ANR	8316011	Symbol	size		8315907						
ANR	8316012	Symbol	e_Memory		8315907						
ANR	8316013	Symbol	count		8315907						
ANR	8316014	Symbol	new_defn		8315907						
ANR	8316015	Symbol	from		8315907						
ANR	8316016	Symbol	pcs -> memory		8315907						
ANR	8316017	Symbol	* pcs		8315907						
ANR	8316018	Symbol	gs_resize_object		8315907						
ANR	8316019	Symbol	to		8315907						
ANR	8316020	Symbol	pcs -> macro_definition		8315907						
ANR	8316021	Symbol	gs_object_size		8315907						
ANR	8316022	Function	debug_dump_char	260:0:8911:9143							
ANR	8316023	FunctionDef	"debug_dump_char (gs_memory_t * mem , char chr)"		8316022	0					
ANR	8316024	CompoundStatement		262:0:8967:9143	8316022	0					
ANR	8316025	ExpressionStatement	"dmprintf1 ( mem , ( chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"" ) , ( unsigned char ) chr )"	263:4:8973:9072	8316022	0	True				
ANR	8316026	CallExpression	"dmprintf1 ( mem , ( chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"" ) , ( unsigned char ) chr )"		8316022	0					
ANR	8316027	Callee	dmprintf1		8316022	0					
ANR	8316028	Identifier	dmprintf1		8316022	0					
ANR	8316029	ArgumentList	mem		8316022	1					
ANR	8316030	Argument	mem		8316022	0					
ANR	8316031	Identifier	mem		8316022	0					
ANR	8316032	Argument	"chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"""		8316022	1					
ANR	8316033	ConditionalExpression	"chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"""		8316022	0					
ANR	8316034	Condition	chr >= 33 && chr <= 126		8316022	0					
ANR	8316035	AndExpression	chr >= 33 && chr <= 126		8316022	0		&&			
ANR	8316036	RelationalExpression	chr >= 33		8316022	0		>=			
ANR	8316037	Identifier	chr		8316022	0					
ANR	8316038	PrimaryExpression	33		8316022	1					
ANR	8316039	RelationalExpression	chr <= 126		8316022	1		<=			
ANR	8316040	Identifier	chr		8316022	0					
ANR	8316041	PrimaryExpression	126		8316022	1					
ANR	8316042	PrimaryExpression	"""%c"""		8316022	1					
ANR	8316043	PrimaryExpression	"""\\\\%03o"""		8316022	2					
ANR	8316044	Argument	( unsigned char ) chr		8316022	2					
ANR	8316045	CastExpression	( unsigned char ) chr		8316022	0					
ANR	8316046	CastTarget	unsigned char		8316022	0					
ANR	8316047	Identifier	chr		8316022	1					
ANR	8316048	IfStatement	if ( chr == '\\\\' )		8316022	1					
ANR	8316049	Condition	chr == '\\\\'	265:8:9082:9092	8316022	0	True				
ANR	8316050	EqualityExpression	chr == '\\\\'		8316022	0		==			
ANR	8316051	Identifier	chr		8316022	0					
ANR	8316052	PrimaryExpression	'\\\\'		8316022	1					
ANR	8316053	ExpressionStatement	"dmprintf1 ( mem , ""%c"" , '\\\\' )"	266:8:9103:9129	8316022	1	True				
ANR	8316054	CallExpression	"dmprintf1 ( mem , ""%c"" , '\\\\' )"		8316022	0					
ANR	8316055	Callee	dmprintf1		8316022	0					
ANR	8316056	Identifier	dmprintf1		8316022	0					
ANR	8316057	ArgumentList	mem		8316022	1					
ANR	8316058	Argument	mem		8316022	0					
ANR	8316059	Identifier	mem		8316022	0					
ANR	8316060	Argument	"""%c"""		8316022	1					
ANR	8316061	PrimaryExpression	"""%c"""		8316022	0					
ANR	8316062	Argument	'\\\\'		8316022	2					
ANR	8316063	PrimaryExpression	'\\\\'		8316022	0					
ANR	8316064	ReturnStatement	return ;	267:4:9135:9141	8316022	2	True				
ANR	8316065	ReturnType	static void		8316022	1					
ANR	8316066	Identifier	debug_dump_char		8316022	2					
ANR	8316067	ParameterList	"gs_memory_t * mem , char chr"		8316022	3					
ANR	8316068	Parameter	gs_memory_t * mem	261:16:8939:8954	8316022	0	True				
ANR	8316069	ParameterType	gs_memory_t *		8316022	0					
ANR	8316070	Identifier	mem		8316022	1					
ANR	8316071	Parameter	char chr	261:34:8957:8964	8316022	1	True				
ANR	8316072	ParameterType	char		8316022	0					
ANR	8316073	Identifier	chr		8316022	1					
ANR	8316074	CFGEntryNode	ENTRY		8316022		True				
ANR	8316075	CFGExitNode	EXIT		8316022		True				
ANR	8316076	Symbol	mem		8316022						
ANR	8316077	Symbol	chr		8316022						
ANR	8316078	Function	pcl_process	272:0:9193:27682							
ANR	8316079	FunctionDef	"pcl_process (pcl_parser_state_t * pst , pcl_state_t * pcs , stream_cursor_read * pr)"		8316078	0					
ANR	8316080	CompoundStatement		275:0:9291:27682	8316078	0					
ANR	8316081	IdentifierDeclStatement	const byte * p = pr -> ptr ;	276:4:9297:9320	8316078	0	True				
ANR	8316082	IdentifierDecl	* p = pr -> ptr		8316078	0					
ANR	8316083	IdentifierDeclType	const byte *		8316078	0					
ANR	8316084	Identifier	p		8316078	1					
ANR	8316085	AssignmentExpression	* p = pr -> ptr		8316078	2		=			
ANR	8316086	Identifier	p		8316078	0					
ANR	8316087	PtrMemberAccess	pr -> ptr		8316078	1					
ANR	8316088	Identifier	pr		8316078	0					
ANR	8316089	Identifier	ptr		8316078	1					
ANR	8316090	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	277:4:9326:9356	8316078	1	True				
ANR	8316091	IdentifierDecl	* rlimit = pr -> limit		8316078	0					
ANR	8316092	IdentifierDeclType	const byte *		8316078	0					
ANR	8316093	Identifier	rlimit		8316078	1					
ANR	8316094	AssignmentExpression	* rlimit = pr -> limit		8316078	2		=			
ANR	8316095	Identifier	rlimit		8316078	0					
ANR	8316096	PtrMemberAccess	pr -> limit		8316078	1					
ANR	8316097	Identifier	pr		8316078	0					
ANR	8316098	Identifier	limit		8316078	1					
ANR	8316099	IdentifierDeclStatement	int code = 0 ;	278:4:9362:9374	8316078	2	True				
ANR	8316100	IdentifierDecl	code = 0		8316078	0					
ANR	8316101	IdentifierDeclType	int		8316078	0					
ANR	8316102	Identifier	code		8316078	1					
ANR	8316103	AssignmentExpression	code = 0		8316078	2		=			
ANR	8316104	Identifier	code		8316078	0					
ANR	8316105	PrimaryExpression	0		8316078	1					
ANR	8316106	IdentifierDeclStatement	int bytelen = 0 ;	279:4:9380:9395	8316078	3	True				
ANR	8316107	IdentifierDecl	bytelen = 0		8316078	0					
ANR	8316108	IdentifierDeclType	int		8316078	0					
ANR	8316109	Identifier	bytelen		8316078	1					
ANR	8316110	AssignmentExpression	bytelen = 0		8316078	2		=			
ANR	8316111	Identifier	bytelen		8316078	0					
ANR	8316112	PrimaryExpression	0		8316078	1					
ANR	8316113	IdentifierDeclStatement	bool in_macro = pcs -> defining_macro ;	280:4:9401:9436	8316078	4	True				
ANR	8316114	IdentifierDecl	in_macro = pcs -> defining_macro		8316078	0					
ANR	8316115	IdentifierDeclType	bool		8316078	0					
ANR	8316116	Identifier	in_macro		8316078	1					
ANR	8316117	AssignmentExpression	in_macro = pcs -> defining_macro		8316078	2		=			
ANR	8316118	Identifier	in_macro		8316078	0					
ANR	8316119	PtrMemberAccess	pcs -> defining_macro		8316078	1					
ANR	8316120	Identifier	pcs		8316078	0					
ANR	8316121	Identifier	defining_macro		8316078	1					
ANR	8316122	IdentifierDeclStatement	const byte * macro_p = p ;	283:4:9550:9573	8316078	5	True				
ANR	8316123	IdentifierDecl	* macro_p = p		8316078	0					
ANR	8316124	IdentifierDeclType	const byte *		8316078	0					
ANR	8316125	Identifier	macro_p		8316078	1					
ANR	8316126	AssignmentExpression	* macro_p = p		8316078	2		=			
ANR	8316127	Identifier	p		8316078	0					
ANR	8316128	Identifier	p		8316078	1					
ANR	8316129	Statement	define	286:1:9611:9616	8316078	6	True				
ANR	8316130	Statement	avalue	286:8:9618:9623	8316078	7	True				
ANR	8316131	Statement	pst	286:15:9625:9627	8316078	8	True				
ANR	8316132	Statement	->	286:18:9628:9629	8316078	9	True				
ANR	8316133	Statement	args	286:20:9630:9633	8316078	10	True				
ANR	8316134	Statement	.	286:24:9634:9634	8316078	11	True				
ANR	8316135	Statement	value	286:25:9635:9639	8316078	12	True				
ANR	8316136	Statement	define	287:1:9642:9647	8316078	13	True				
ANR	8316137	Statement	param_init	287:8:9649:9658	8316078	14	True				
ANR	8316138	Statement	(	287:18:9659:9659	8316078	15	True				
ANR	8316139	Statement	)	287:19:9660:9660	8316078	16	True				
ANR	8316140	Statement	(	288:2:9665:9665	8316078	17	True				
ANR	8316141	Statement	avalue	288:3:9666:9671	8316078	18	True				
ANR	8316142	Statement	.	288:9:9672:9672	8316078	19	True				
ANR	8316143	Statement	type	288:10:9673:9676	8316078	20	True				
ANR	8316144	Statement	=	288:15:9678:9678	8316078	21	True				
ANR	8316145	Statement	pcv_none	288:17:9680:9687	8316078	22	True				
ANR	8316146	Statement	","	288:25:9688:9688	8316078	23	True				
ANR	8316147	Statement	avalue	288:27:9690:9695	8316078	24	True				
ANR	8316148	Statement	.	288:33:9696:9696	8316078	25	True				
ANR	8316149	Statement	i	288:34:9697:9697	8316078	26	True				
ANR	8316150	Statement	=	288:36:9699:9699	8316078	27	True				
ANR	8316151	Statement	0	288:38:9701:9701	8316078	28	True				
ANR	8316152	Statement	)	288:39:9702:9702	8316078	29	True				
ANR	8316153	Statement	define	291:3:9742:9747	8316078	30	True				
ANR	8316154	Statement	do_display_functions	291:10:9749:9768	8316078	31	True				
ANR	8316155	Statement	(	291:30:9769:9769	8316078	32	True				
ANR	8316156	Statement	)	291:31:9770:9770	8316078	33	True				
ANR	8316157	Statement	1	291:33:9772:9772	8316078	34	True				
ANR	8316158	WhileStatement	while ( p < rlimit )		8316078	35					
ANR	8316159	Condition	p < rlimit	296:11:9844:9853	8316078	0	True				
ANR	8316160	RelationalExpression	p < rlimit		8316078	0		<			
ANR	8316161	Identifier	p		8316078	0					
ANR	8316162	Identifier	rlimit		8316078	1					
ANR	8316163	CompoundStatement		24:8:632:676	8316078	1					
ANR	8316164	IdentifierDeclStatement	byte chr = 0x00 ;	297:8:9866:9881	8316078	0	True				
ANR	8316165	IdentifierDecl	chr = 0x00		8316078	0					
ANR	8316166	IdentifierDeclType	byte		8316078	0					
ANR	8316167	Identifier	chr		8316078	1					
ANR	8316168	AssignmentExpression	chr = 0x00		8316078	2		=			
ANR	8316169	Identifier	chr		8316078	0					
ANR	8316170	PrimaryExpression	0x00		8316078	1					
ANR	8316171	IdentifierDeclStatement	const pcl_command_definition_t * cdefn = NULL ;	298:8:9924:9968	8316078	1	True				
ANR	8316172	IdentifierDecl	* cdefn = NULL		8316078	0					
ANR	8316173	IdentifierDeclType	const pcl_command_definition_t *		8316078	0					
ANR	8316174	Identifier	cdefn		8316078	1					
ANR	8316175	AssignmentExpression	* cdefn = NULL		8316078	2		=			
ANR	8316176	Identifier	NULL		8316078	0					
ANR	8316177	Identifier	NULL		8316078	1					
ANR	8316178	SwitchStatement	switch ( pst -> scan_type )		8316078	2					
ANR	8316179	Condition	pst -> scan_type	299:16:9986:9999	8316078	0	True				
ANR	8316180	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8316181	Identifier	pst		8316078	0					
ANR	8316182	Identifier	scan_type		8316078	1					
ANR	8316183	CompoundStatement		25:32:710:710	8316078	1					
ANR	8316184	Label	case scanning_data :	300:12:10016:10034	8316078	0	True				
ANR	8316185	Identifier	scanning_data		8316078	0					
ANR	8316186	CompoundStatement		29:20:894:918	8316078	1					
ANR	8316187	IdentifierDeclStatement	uint count = uint_arg ( & pst -> args ) ;	302:20:10131:10164	8316078	0	True				
ANR	8316188	IdentifierDecl	count = uint_arg ( & pst -> args )		8316078	0					
ANR	8316189	IdentifierDeclType	uint		8316078	0					
ANR	8316190	Identifier	count		8316078	1					
ANR	8316191	AssignmentExpression	count = uint_arg ( & pst -> args )		8316078	2		=			
ANR	8316192	Identifier	count		8316078	0					
ANR	8316193	CallExpression	uint_arg ( & pst -> args )		8316078	1					
ANR	8316194	Callee	uint_arg		8316078	0					
ANR	8316195	Identifier	uint_arg		8316078	0					
ANR	8316196	ArgumentList	& pst -> args		8316078	1					
ANR	8316197	Argument	& pst -> args		8316078	0					
ANR	8316198	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8316199	UnaryOperator	&		8316078	0					
ANR	8316200	PtrMemberAccess	pst -> args		8316078	1					
ANR	8316201	Identifier	pst		8316078	0					
ANR	8316202	Identifier	args		8316078	1					
ANR	8316203	IdentifierDeclStatement	uint pos = pst -> data_pos ;	303:20:10186:10210	8316078	1	True				
ANR	8316204	IdentifierDecl	pos = pst -> data_pos		8316078	0					
ANR	8316205	IdentifierDeclType	uint		8316078	0					
ANR	8316206	Identifier	pos		8316078	1					
ANR	8316207	AssignmentExpression	pos = pst -> data_pos		8316078	2		=			
ANR	8316208	Identifier	pos		8316078	0					
ANR	8316209	PtrMemberAccess	pst -> data_pos		8316078	1					
ANR	8316210	Identifier	pst		8316078	0					
ANR	8316211	Identifier	data_pos		8316078	1					
ANR	8316212	IfStatement	if ( pos < count )		8316078	2					
ANR	8316213	Condition	pos < count	305:24:10237:10247	8316078	0	True				
ANR	8316214	RelationalExpression	pos < count		8316078	0		<			
ANR	8316215	Identifier	pos		8316078	0					
ANR	8316216	Identifier	count		8316078	1					
ANR	8316217	CompoundStatement		33:24:1033:1068	8316078	1					
ANR	8316218	IdentifierDeclStatement	uint avail = rlimit - p ;	306:24:10276:10299	8316078	0	True				
ANR	8316219	IdentifierDecl	avail = rlimit - p		8316078	0					
ANR	8316220	IdentifierDeclType	uint		8316078	0					
ANR	8316221	Identifier	avail		8316078	1					
ANR	8316222	AssignmentExpression	avail = rlimit - p		8316078	2		=			
ANR	8316223	Identifier	avail		8316078	0					
ANR	8316224	AdditiveExpression	rlimit - p		8316078	1		-			
ANR	8316225	Identifier	rlimit		8316078	0					
ANR	8316226	Identifier	p		8316078	1					
ANR	8316227	IdentifierDeclStatement	"uint copy = min ( count - pos , avail ) ;"	307:24:10325:10360	8316078	1	True				
ANR	8316228	IdentifierDecl	"copy = min ( count - pos , avail )"		8316078	0					
ANR	8316229	IdentifierDeclType	uint		8316078	0					
ANR	8316230	Identifier	copy		8316078	1					
ANR	8316231	AssignmentExpression	"copy = min ( count - pos , avail )"		8316078	2		=			
ANR	8316232	Identifier	copy		8316078	0					
ANR	8316233	CallExpression	"min ( count - pos , avail )"		8316078	1					
ANR	8316234	Callee	min		8316078	0					
ANR	8316235	Identifier	min		8316078	0					
ANR	8316236	ArgumentList	count - pos		8316078	1					
ANR	8316237	Argument	count - pos		8316078	0					
ANR	8316238	AdditiveExpression	count - pos		8316078	0		-			
ANR	8316239	Identifier	count		8316078	0					
ANR	8316240	Identifier	pos		8316078	1					
ANR	8316241	Argument	avail		8316078	1					
ANR	8316242	Identifier	avail		8316078	0					
ANR	8316243	ExpressionStatement	"memcpy ( pst -> args . data + pos , p + 1 , copy )"	309:24:10387:10428	8316078	2	True				
ANR	8316244	CallExpression	"memcpy ( pst -> args . data + pos , p + 1 , copy )"		8316078	0					
ANR	8316245	Callee	memcpy		8316078	0					
ANR	8316246	Identifier	memcpy		8316078	0					
ANR	8316247	ArgumentList	pst -> args . data + pos		8316078	1					
ANR	8316248	Argument	pst -> args . data + pos		8316078	0					
ANR	8316249	AdditiveExpression	pst -> args . data + pos		8316078	0		+			
ANR	8316250	MemberAccess	pst -> args . data		8316078	0					
ANR	8316251	PtrMemberAccess	pst -> args		8316078	0					
ANR	8316252	Identifier	pst		8316078	0					
ANR	8316253	Identifier	args		8316078	1					
ANR	8316254	Identifier	data		8316078	1					
ANR	8316255	Identifier	pos		8316078	1					
ANR	8316256	Argument	p + 1		8316078	1					
ANR	8316257	AdditiveExpression	p + 1		8316078	0		+			
ANR	8316258	Identifier	p		8316078	0					
ANR	8316259	PrimaryExpression	1		8316078	1					
ANR	8316260	Argument	copy		8316078	2					
ANR	8316261	Identifier	copy		8316078	0					
ANR	8316262	ExpressionStatement	pst -> data_pos += copy	310:24:10454:10475	8316078	3	True				
ANR	8316263	AssignmentExpression	pst -> data_pos += copy		8316078	0		+=			
ANR	8316264	PtrMemberAccess	pst -> data_pos		8316078	0					
ANR	8316265	Identifier	pst		8316078	0					
ANR	8316266	Identifier	data_pos		8316078	1					
ANR	8316267	Identifier	copy		8316078	1					
ANR	8316268	ExpressionStatement	p += copy	311:24:10501:10510	8316078	4	True				
ANR	8316269	AssignmentExpression	p += copy		8316078	0		+=			
ANR	8316270	Identifier	p		8316078	0					
ANR	8316271	Identifier	copy		8316078	1					
ANR	8316272	ContinueStatement	continue ;	312:24:10536:10544	8316078	5	True				
ANR	8316273	ExpressionStatement	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , pst -> args . command )"	315:20:10634:10893	8316078	3	True				
ANR	8316274	AssignmentExpression	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , pst -> args . command )"		8316078	0		=			
ANR	8316275	Identifier	cdefn		8316078	0					
ANR	8316276	CallExpression	"pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , pst -> args . command )"		8316078	1					
ANR	8316277	Callee	pcl_get_command_definition		8316078	0					
ANR	8316278	Identifier	pcl_get_command_definition		8316078	0					
ANR	8316279	ArgumentList	pst		8316078	1					
ANR	8316280	Argument	pst		8316078	0					
ANR	8316281	Identifier	pst		8316078	0					
ANR	8316282	Argument	pst -> param_class		8316078	1					
ANR	8316283	PtrMemberAccess	pst -> param_class		8316078	0					
ANR	8316284	Identifier	pst		8316078	0					
ANR	8316285	Identifier	param_class		8316078	1					
ANR	8316286	Argument	pst -> param_group		8316078	2					
ANR	8316287	PtrMemberAccess	pst -> param_group		8316078	0					
ANR	8316288	Identifier	pst		8316078	0					
ANR	8316289	Identifier	param_group		8316078	1					
ANR	8316290	Argument	pst -> args . command		8316078	3					
ANR	8316291	MemberAccess	pst -> args . command		8316078	0					
ANR	8316292	PtrMemberAccess	pst -> args		8316078	0					
ANR	8316293	Identifier	pst		8316078	0					
ANR	8316294	Identifier	args		8316078	1					
ANR	8316295	Identifier	command		8316078	1					
ANR	8316296	IfStatement	if ( pst -> short_hand )		8316078	4					
ANR	8316297	Condition	pst -> short_hand	319:24:10919:10933	8316078	0	True				
ANR	8316298	PtrMemberAccess	pst -> short_hand		8316078	0					
ANR	8316299	Identifier	pst		8316078	0					
ANR	8316300	Identifier	short_hand		8316078	1					
ANR	8316301	CompoundStatement		45:41:1644:1644	8316078	1					
ANR	8316302	ExpressionStatement	pst -> scan_type = scanning_parameter	320:24:10962:10997	8316078	0	True				
ANR	8316303	AssignmentExpression	pst -> scan_type = scanning_parameter		8316078	0		=			
ANR	8316304	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8316305	Identifier	pst		8316078	0					
ANR	8316306	Identifier	scan_type		8316078	1					
ANR	8316307	Identifier	scanning_parameter		8316078	1					
ANR	8316308	ContinueStatement	continue ;	321:24:11023:11031	8316078	1	True				
ANR	8316309	ElseStatement	else		8316078	0					
ANR	8316310	ExpressionStatement	pst -> scan_type = scanning_none	323:24:11084:11114	8316078	0	True				
ANR	8316311	AssignmentExpression	pst -> scan_type = scanning_none		8316078	0		=			
ANR	8316312	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8316313	Identifier	pst		8316078	0					
ANR	8316314	Identifier	scan_type		8316078	1					
ANR	8316315	Identifier	scanning_none		8316078	1					
ANR	8316316	BreakStatement	break ;	324:20:11136:11141	8316078	5	True				
ANR	8316317	Label	case scanning_display :	326:12:11173:11194	8316078	2	True				
ANR	8316318	Identifier	scanning_display		8316078	0					
ANR	8316319	CompoundStatement		53:16:1920:1920	8316078	3					
ANR	8316320	ExpressionStatement	chr = * ++ p	329:20:11300:11310	8316078	0	True				
ANR	8316321	AssignmentExpression	chr = * ++ p		8316078	0		=			
ANR	8316322	Identifier	chr		8316078	0					
ANR	8316323	UnaryOperationExpression	* ++ p		8316078	1					
ANR	8316324	UnaryOperator	*		8316078	0					
ANR	8316325	UnaryExpression	++ p		8316078	1					
ANR	8316326	IncDec	++		8316078	0					
ANR	8316327	Identifier	p		8316078	1					
ANR	8316328	IfStatement	if ( chr == ESC )		8316078	1					
ANR	8316329	Condition	chr == ESC	330:24:11336:11345	8316078	0	True				
ANR	8316330	EqualityExpression	chr == ESC		8316078	0		==			
ANR	8316331	Identifier	chr		8316078	0					
ANR	8316332	Identifier	ESC		8316078	1					
ANR	8316333	CompoundStatement		57:24:2082:2091	8316078	1					
ANR	8316334	IdentifierDeclStatement	int index ;	331:24:11374:11383	8316078	0	True				
ANR	8316335	IdentifierDecl	index		8316078	0					
ANR	8316336	IdentifierDeclType	int		8316078	0					
ANR	8316337	Identifier	index		8316078	1					
ANR	8316338	IfStatement	if ( p >= rlimit )		8316078	1					
ANR	8316339	Condition	p >= rlimit	333:28:11414:11424	8316078	0	True				
ANR	8316340	RelationalExpression	p >= rlimit		8316078	0		>=			
ANR	8316341	Identifier	p		8316078	0					
ANR	8316342	Identifier	rlimit		8316078	1					
ANR	8316343	GotoStatement	goto x ;	334:28:11455:11461	8316078	1	True				
ANR	8316344	Identifier	x		8316078	0					
ANR	8316345	IfStatement	if ( p [ 1 ] >= min_escape_2char && p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions )		8316078	2					
ANR	8316346	Condition	p [ 1 ] >= min_escape_2char && p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions	335:28:11491:12020	8316078	0	True				
ANR	8316347	AndExpression	p [ 1 ] >= min_escape_2char && p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8316078	0		&&			
ANR	8316348	RelationalExpression	p [ 1 ] >= min_escape_2char		8316078	0		>=			
ANR	8316349	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8316350	Identifier	p		8316078	0					
ANR	8316351	PrimaryExpression	1		8316078	1					
ANR	8316352	Identifier	min_escape_2char		8316078	1					
ANR	8316353	AndExpression	p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8316078	1		&&			
ANR	8316354	RelationalExpression	p [ 1 ] <= max_escape_2char		8316078	0		<=			
ANR	8316355	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8316356	Identifier	p		8316078	0					
ANR	8316357	PrimaryExpression	1		8316078	1					
ANR	8316358	Identifier	max_escape_2char		8316078	1					
ANR	8316359	AndExpression	( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8316078	1		&&			
ANR	8316360	EqualityExpression	( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0		8316078	0		!=			
ANR	8316361	AssignmentExpression	index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ]		8316078	0		=			
ANR	8316362	Identifier	index		8316078	0					
ANR	8316363	ArrayIndexing	pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ]		8316078	1					
ANR	8316364	PtrMemberAccess	pst -> definitions -> pcl_escape_command_indices		8316078	0					
ANR	8316365	PtrMemberAccess	pst -> definitions		8316078	0					
ANR	8316366	Identifier	pst		8316078	0					
ANR	8316367	Identifier	definitions		8316078	1					
ANR	8316368	Identifier	pcl_escape_command_indices		8316078	1					
ANR	8316369	AdditiveExpression	p [ 1 ] - min_escape_2char		8316078	1		-			
ANR	8316370	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8316371	Identifier	p		8316078	0					
ANR	8316372	PrimaryExpression	1		8316078	1					
ANR	8316373	Identifier	min_escape_2char		8316078	1					
ANR	8316374	PrimaryExpression	0		8316078	1					
ANR	8316375	EqualityExpression	pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8316078	1		==			
ANR	8316376	PtrMemberAccess	pst -> definitions -> pcl_command_list [ index ] -> proc		8316078	0					
ANR	8316377	ArrayIndexing	pst -> definitions -> pcl_command_list [ index ]		8316078	0					
ANR	8316378	PtrMemberAccess	pst -> definitions -> pcl_command_list		8316078	0					
ANR	8316379	PtrMemberAccess	pst -> definitions		8316078	0					
ANR	8316380	Identifier	pst		8316078	0					
ANR	8316381	Identifier	definitions		8316078	1					
ANR	8316382	Identifier	pcl_command_list		8316078	1					
ANR	8316383	Identifier	index		8316078	1					
ANR	8316384	Identifier	proc		8316078	1					
ANR	8316385	Identifier	pcl_disable_display_functions		8316078	1					
ANR	8316386	CompoundStatement		70:59:2731:2731	8316078	1					
ANR	8316387	IfStatement	if ( do_display_functions ( ) )		8316078	0					
ANR	8316388	Condition	do_display_functions ( )	345:32:12057:12078	8316078	0	True				
ANR	8316389	CallExpression	do_display_functions ( )		8316078	0					
ANR	8316390	Callee	do_display_functions		8316078	0					
ANR	8316391	Identifier	do_display_functions		8316078	0					
ANR	8316392	ArgumentList			8316078	1					
ANR	8316393	CompoundStatement		71:56:2789:2789	8316078	1					
ANR	8316394	ExpressionStatement	pst -> args . command = chr	346:32:12115:12138	8316078	0	True				
ANR	8316395	AssignmentExpression	pst -> args . command = chr		8316078	0		=			
ANR	8316396	MemberAccess	pst -> args . command		8316078	0					
ANR	8316397	PtrMemberAccess	pst -> args		8316078	0					
ANR	8316398	Identifier	pst		8316078	0					
ANR	8316399	Identifier	args		8316078	1					
ANR	8316400	Identifier	command		8316078	1					
ANR	8316401	Identifier	chr		8316078	1					
ANR	8316402	ExpressionStatement	"code = pcl_plain_char ( & pst -> args , pcs )"	347:32:12172:12210	8316078	1	True				
ANR	8316403	AssignmentExpression	"code = pcl_plain_char ( & pst -> args , pcs )"		8316078	0		=			
ANR	8316404	Identifier	code		8316078	0					
ANR	8316405	CallExpression	"pcl_plain_char ( & pst -> args , pcs )"		8316078	1					
ANR	8316406	Callee	pcl_plain_char		8316078	0					
ANR	8316407	Identifier	pcl_plain_char		8316078	0					
ANR	8316408	ArgumentList	& pst -> args		8316078	1					
ANR	8316409	Argument	& pst -> args		8316078	0					
ANR	8316410	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8316411	UnaryOperator	&		8316078	0					
ANR	8316412	PtrMemberAccess	pst -> args		8316078	1					
ANR	8316413	Identifier	pst		8316078	0					
ANR	8316414	Identifier	args		8316078	1					
ANR	8316415	Argument	pcs		8316078	1					
ANR	8316416	Identifier	pcs		8316078	0					
ANR	8316417	IfStatement	if ( code < 0 )		8316078	2					
ANR	8316418	Condition	code < 0	348:36:12248:12255	8316078	0	True				
ANR	8316419	RelationalExpression	code < 0		8316078	0		<			
ANR	8316420	Identifier	code		8316078	0					
ANR	8316421	PrimaryExpression	0		8316078	1					
ANR	8316422	GotoStatement	goto x ;	349:36:12294:12300	8316078	1	True				
ANR	8316423	Identifier	x		8316078	0					
ANR	8316424	ExpressionStatement	pst -> args . command = chr = * ++ p	351:28:12360:12390	8316078	1	True				
ANR	8316425	AssignmentExpression	pst -> args . command = chr = * ++ p		8316078	0		=			
ANR	8316426	MemberAccess	pst -> args . command		8316078	0					
ANR	8316427	PtrMemberAccess	pst -> args		8316078	0					
ANR	8316428	Identifier	pst		8316078	0					
ANR	8316429	Identifier	args		8316078	1					
ANR	8316430	Identifier	command		8316078	1					
ANR	8316431	AssignmentExpression	chr = * ++ p		8316078	1		=			
ANR	8316432	Identifier	chr		8316078	0					
ANR	8316433	UnaryOperationExpression	* ++ p		8316078	1					
ANR	8316434	UnaryOperator	*		8316078	0					
ANR	8316435	UnaryExpression	++ p		8316078	1					
ANR	8316436	IncDec	++		8316078	0					
ANR	8316437	Identifier	p		8316078	1					
ANR	8316438	ExpressionStatement	"pcl_disable_display_functions ( & pst -> args , pcs )"	352:28:12420:12466	8316078	2	True				
ANR	8316439	CallExpression	"pcl_disable_display_functions ( & pst -> args , pcs )"		8316078	0					
ANR	8316440	Callee	pcl_disable_display_functions		8316078	0					
ANR	8316441	Identifier	pcl_disable_display_functions		8316078	0					
ANR	8316442	ArgumentList	& pst -> args		8316078	1					
ANR	8316443	Argument	& pst -> args		8316078	0					
ANR	8316444	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8316445	UnaryOperator	&		8316078	0					
ANR	8316446	PtrMemberAccess	pst -> args		8316078	1					
ANR	8316447	Identifier	pst		8316078	0					
ANR	8316448	Identifier	args		8316078	1					
ANR	8316449	Argument	pcs		8316078	1					
ANR	8316450	Identifier	pcs		8316078	0					
ANR	8316451	ExpressionStatement	pst -> scan_type = scanning_none	353:28:12496:12526	8316078	3	True				
ANR	8316452	AssignmentExpression	pst -> scan_type = scanning_none		8316078	0		=			
ANR	8316453	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8316454	Identifier	pst		8316078	0					
ANR	8316455	Identifier	scan_type		8316078	1					
ANR	8316456	Identifier	scanning_none		8316078	1					
ANR	8316457	IfStatement	if ( do_display_functions ( ) )		8316078	2					
ANR	8316458	Condition	do_display_functions ( )	356:24:12600:12621	8316078	0	True				
ANR	8316459	CallExpression	do_display_functions ( )		8316078	0					
ANR	8316460	Callee	do_display_functions		8316078	0					
ANR	8316461	Identifier	do_display_functions		8316078	0					
ANR	8316462	ArgumentList			8316078	1					
ANR	8316463	CompoundStatement		82:48:3332:3332	8316078	1					
ANR	8316464	IfStatement	if ( chr == CR )		8316078	0					
ANR	8316465	Condition	chr == CR	357:28:12654:12662	8316078	0	True				
ANR	8316466	EqualityExpression	chr == CR		8316078	0		==			
ANR	8316467	Identifier	chr		8316078	0					
ANR	8316468	Identifier	CR		8316078	1					
ANR	8316469	CompoundStatement		83:39:3373:3373	8316078	1					
ANR	8316470	ExpressionStatement	pcl_do_CR ( pcs )	358:28:12695:12709	8316078	0	True				
ANR	8316471	CallExpression	pcl_do_CR ( pcs )		8316078	0					
ANR	8316472	Callee	pcl_do_CR		8316078	0					
ANR	8316473	Identifier	pcl_do_CR		8316078	0					
ANR	8316474	ArgumentList	pcs		8316078	1					
ANR	8316475	Argument	pcs		8316078	0					
ANR	8316476	Identifier	pcs		8316078	0					
ANR	8316477	ExpressionStatement	code = pcl_do_LF ( pcs )	359:28:12739:12760	8316078	1	True				
ANR	8316478	AssignmentExpression	code = pcl_do_LF ( pcs )		8316078	0		=			
ANR	8316479	Identifier	code		8316078	0					
ANR	8316480	CallExpression	pcl_do_LF ( pcs )		8316078	1					
ANR	8316481	Callee	pcl_do_LF		8316078	0					
ANR	8316482	Identifier	pcl_do_LF		8316078	0					
ANR	8316483	ArgumentList	pcs		8316078	1					
ANR	8316484	Argument	pcs		8316078	0					
ANR	8316485	Identifier	pcs		8316078	0					
ANR	8316486	ElseStatement	else		8316078	0					
ANR	8316487	CompoundStatement		86:31:3501:3501	8316078	0					
ANR	8316488	ExpressionStatement	pst -> args . command = chr	361:28:12823:12846	8316078	0	True				
ANR	8316489	AssignmentExpression	pst -> args . command = chr		8316078	0		=			
ANR	8316490	MemberAccess	pst -> args . command		8316078	0					
ANR	8316491	PtrMemberAccess	pst -> args		8316078	0					
ANR	8316492	Identifier	pst		8316078	0					
ANR	8316493	Identifier	args		8316078	1					
ANR	8316494	Identifier	command		8316078	1					
ANR	8316495	Identifier	chr		8316078	1					
ANR	8316496	ExpressionStatement	"code = pcl_plain_char ( & pst -> args , pcs )"	362:28:12876:12914	8316078	1	True				
ANR	8316497	AssignmentExpression	"code = pcl_plain_char ( & pst -> args , pcs )"		8316078	0		=			
ANR	8316498	Identifier	code		8316078	0					
ANR	8316499	CallExpression	"pcl_plain_char ( & pst -> args , pcs )"		8316078	1					
ANR	8316500	Callee	pcl_plain_char		8316078	0					
ANR	8316501	Identifier	pcl_plain_char		8316078	0					
ANR	8316502	ArgumentList	& pst -> args		8316078	1					
ANR	8316503	Argument	& pst -> args		8316078	0					
ANR	8316504	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8316505	UnaryOperator	&		8316078	0					
ANR	8316506	PtrMemberAccess	pst -> args		8316078	1					
ANR	8316507	Identifier	pst		8316078	0					
ANR	8316508	Identifier	args		8316078	1					
ANR	8316509	Argument	pcs		8316078	1					
ANR	8316510	Identifier	pcs		8316078	0					
ANR	8316511	IfStatement	if ( code < 0 )		8316078	1					
ANR	8316512	Condition	code < 0	364:28:12970:12977	8316078	0	True				
ANR	8316513	RelationalExpression	code < 0		8316078	0		<			
ANR	8316514	Identifier	code		8316078	0					
ANR	8316515	PrimaryExpression	0		8316078	1					
ANR	8316516	GotoStatement	goto x ;	365:28:13008:13014	8316078	1	True				
ANR	8316517	Identifier	x		8316078	0					
ANR	8316518	ContinueStatement	continue ;	367:20:13058:13066	8316078	3	True				
ANR	8316519	Label	case scanning_parameter :	369:12:13098:13121	8316078	4	True				
ANR	8316520	Identifier	scanning_parameter		8316078	0					
ANR	8316521	ForStatement	for ( ; ; )		8316078	5					
ANR	8316522	CompoundStatement		96:25:3856:3856	8316078	0					
ANR	8316523	IfStatement	if ( p >= rlimit )		8316078	0					
ANR	8316524	Condition	p >= rlimit	371:24:13174:13184	8316078	0	True				
ANR	8316525	RelationalExpression	p >= rlimit		8316078	0		>=			
ANR	8316526	Identifier	p		8316078	0					
ANR	8316527	Identifier	rlimit		8316078	1					
ANR	8316528	GotoStatement	goto x ;	372:24:13211:13217	8316078	1	True				
ANR	8316529	Identifier	x		8316078	0					
ANR	8316530	ExpressionStatement	chr = * ++ p	373:20:13239:13249	8316078	1	True				
ANR	8316531	AssignmentExpression	chr = * ++ p		8316078	0		=			
ANR	8316532	Identifier	chr		8316078	0					
ANR	8316533	UnaryOperationExpression	* ++ p		8316078	1					
ANR	8316534	UnaryOperator	*		8316078	0					
ANR	8316535	UnaryExpression	++ p		8316078	1					
ANR	8316536	IncDec	++		8316078	0					
ANR	8316537	Identifier	p		8316078	1					
ANR	8316538	IfStatement	if ( pst -> garbage_in_parameter )		8316078	2					
ANR	8316539	Condition	pst -> garbage_in_parameter	379:24:13541:13565	8316078	0	True				
ANR	8316540	PtrMemberAccess	pst -> garbage_in_parameter		8316078	0					
ANR	8316541	Identifier	pst		8316078	0					
ANR	8316542	Identifier	garbage_in_parameter		8316078	1					
ANR	8316543	CompoundStatement		105:51:4276:4276	8316078	1					
ANR	8316544	IfStatement	if ( chr < ' ' || chr > '?' )		8316078	0					
ANR	8316545	Condition	chr < ' ' || chr > '?'	380:28:13598:13619	8316078	0	True				
ANR	8316546	OrExpression	chr < ' ' || chr > '?'		8316078	0		||			
ANR	8316547	RelationalExpression	chr < ' '		8316078	0		<			
ANR	8316548	Identifier	chr		8316078	0					
ANR	8316549	PrimaryExpression	' '		8316078	1					
ANR	8316550	RelationalExpression	chr > '?'		8316078	1		>			
ANR	8316551	Identifier	chr		8316078	0					
ANR	8316552	PrimaryExpression	'?'		8316078	1					
ANR	8316553	CompoundStatement		106:52:4330:4330	8316078	1					
ANR	8316554	ExpressionStatement	pst -> garbage_in_parameter = false	381:28:13652:13685	8316078	0	True				
ANR	8316555	AssignmentExpression	pst -> garbage_in_parameter = false		8316078	0		=			
ANR	8316556	PtrMemberAccess	pst -> garbage_in_parameter		8316078	0					
ANR	8316557	Identifier	pst		8316078	0					
ANR	8316558	Identifier	garbage_in_parameter		8316078	1					
ANR	8316559	Identifier	false		8316078	1					
ANR	8316560	BreakStatement	break ;	382:28:13740:13745	8316078	1	True				
ANR	8316561	ElseStatement	else		8316078	0					
ANR	8316562	CompoundStatement		110:27:4508:4508	8316078	0					
ANR	8316563	IfStatement	if ( chr >= '0' && chr <= '9' )		8316078	0					
ANR	8316564	Condition	chr >= '0' && chr <= '9'	385:28:13830:13853	8316078	0	True				
ANR	8316565	AndExpression	chr >= '0' && chr <= '9'		8316078	0		&&			
ANR	8316566	RelationalExpression	chr >= '0'		8316078	0		>=			
ANR	8316567	Identifier	chr		8316078	0					
ANR	8316568	PrimaryExpression	'0'		8316078	1					
ANR	8316569	RelationalExpression	chr <= '9'		8316078	1		<=			
ANR	8316570	Identifier	chr		8316078	0					
ANR	8316571	PrimaryExpression	'9'		8316078	1					
ANR	8316572	CompoundStatement		111:54:4564:4564	8316078	1					
ANR	8316573	ExpressionStatement	chr -= '0'	386:28:13886:13896	8316078	0	True				
ANR	8316574	AssignmentExpression	chr -= '0'		8316078	0		-=			
ANR	8316575	Identifier	chr		8316078	0					
ANR	8316576	PrimaryExpression	'0'		8316078	1					
ANR	8316577	IfStatement	if ( value_is_float ( & avalue ) )		8316078	1					
ANR	8316578	Condition	value_is_float ( & avalue )	387:32:13930:13952	8316078	0	True				
ANR	8316579	CallExpression	value_is_float ( & avalue )		8316078	0					
ANR	8316580	Callee	value_is_float		8316078	0					
ANR	8316581	Identifier	value_is_float		8316078	0					
ANR	8316582	ArgumentList	& avalue		8316078	1					
ANR	8316583	Argument	& avalue		8316078	0					
ANR	8316584	UnaryOperationExpression	& avalue		8316078	0					
ANR	8316585	UnaryOperator	&		8316078	0					
ANR	8316586	Identifier	avalue		8316078	1					
ANR	8316587	ExpressionStatement	avalue . fraction += ( chr / ( pst -> scale *= 10 ) )	388:32:13987:14032	8316078	1	True				
ANR	8316588	AssignmentExpression	avalue . fraction += ( chr / ( pst -> scale *= 10 ) )		8316078	0		+=			
ANR	8316589	MemberAccess	avalue . fraction		8316078	0					
ANR	8316590	Identifier	avalue		8316078	0					
ANR	8316591	Identifier	fraction		8316078	1					
ANR	8316592	MultiplicativeExpression	chr / ( pst -> scale *= 10 )		8316078	1		/			
ANR	8316593	Identifier	chr		8316078	0					
ANR	8316594	AssignmentExpression	pst -> scale *= 10		8316078	1		*=			
ANR	8316595	PtrMemberAccess	pst -> scale		8316078	0					
ANR	8316596	Identifier	pst		8316078	0					
ANR	8316597	Identifier	scale		8316078	1					
ANR	8316598	PrimaryExpression	10		8316078	1					
ANR	8316599	ElseStatement	else		8316078	0					
ANR	8316600	ExpressionStatement	"avalue . type |= pcv_int , avalue . i = avalue . i * 10 + chr"	390:32:14099:14189	8316078	0	True				
ANR	8316601	Expression	"avalue . type |= pcv_int , avalue . i = avalue . i * 10 + chr"		8316078	0					
ANR	8316602	AssignmentExpression	avalue . type |= pcv_int		8316078	0		|=			
ANR	8316603	MemberAccess	avalue . type		8316078	0					
ANR	8316604	Identifier	avalue		8316078	0					
ANR	8316605	Identifier	type		8316078	1					
ANR	8316606	Identifier	pcv_int		8316078	1					
ANR	8316607	AssignmentExpression	avalue . i = avalue . i * 10 + chr		8316078	1		=			
ANR	8316608	MemberAccess	avalue . i		8316078	0					
ANR	8316609	Identifier	avalue		8316078	0					
ANR	8316610	Identifier	i		8316078	1					
ANR	8316611	AdditiveExpression	avalue . i * 10 + chr		8316078	1		+			
ANR	8316612	MultiplicativeExpression	avalue . i * 10		8316078	0		*			
ANR	8316613	MemberAccess	avalue . i		8316078	0					
ANR	8316614	Identifier	avalue		8316078	0					
ANR	8316615	Identifier	i		8316078	1					
ANR	8316616	PrimaryExpression	10		8316078	1					
ANR	8316617	Identifier	chr		8316078	1					
ANR	8316618	ElseStatement	else		8316078	0					
ANR	8316619	IfStatement	if ( chr == '-' )		8316078	0					
ANR	8316620	Condition	chr == '-'	392:35:14226:14235	8316078	0	True				
ANR	8316621	EqualityExpression	chr == '-'		8316078	0		==			
ANR	8316622	Identifier	chr		8316078	0					
ANR	8316623	PrimaryExpression	'-'		8316078	1					
ANR	8316624	ExpressionStatement	avalue . type |= pcv_neg	393:28:14266:14288	8316078	1	True				
ANR	8316625	AssignmentExpression	avalue . type |= pcv_neg		8316078	0		|=			
ANR	8316626	MemberAccess	avalue . type		8316078	0					
ANR	8316627	Identifier	avalue		8316078	0					
ANR	8316628	Identifier	type		8316078	1					
ANR	8316629	Identifier	pcv_neg		8316078	1					
ANR	8316630	ElseStatement	else		8316078	0					
ANR	8316631	IfStatement	if ( chr == '+' )		8316078	0					
ANR	8316632	Condition	chr == '+'	394:33:14323:14332	8316078	0	True				
ANR	8316633	EqualityExpression	chr == '+'		8316078	0		==			
ANR	8316634	Identifier	chr		8316078	0					
ANR	8316635	PrimaryExpression	'+'		8316078	1					
ANR	8316636	ExpressionStatement	avalue . type |= pcv_pos	395:28:14363:14385	8316078	1	True				
ANR	8316637	AssignmentExpression	avalue . type |= pcv_pos		8316078	0		|=			
ANR	8316638	MemberAccess	avalue . type		8316078	0					
ANR	8316639	Identifier	avalue		8316078	0					
ANR	8316640	Identifier	type		8316078	1					
ANR	8316641	Identifier	pcv_pos		8316078	1					
ANR	8316642	ElseStatement	else		8316078	0					
ANR	8316643	IfStatement	if ( chr == '.' )		8316078	0					
ANR	8316644	Condition	chr == '.'	396:33:14420:14429	8316078	0	True				
ANR	8316645	EqualityExpression	chr == '.'		8316078	0		==			
ANR	8316646	Identifier	chr		8316078	0					
ANR	8316647	PrimaryExpression	'.'		8316078	1					
ANR	8316648	ExpressionStatement	"avalue . type |= pcv_float , avalue . fraction = 0 , pst -> scale = 1.0"	397:28:14460:14555	8316078	1	True				
ANR	8316649	Expression	"avalue . type |= pcv_float , avalue . fraction = 0 , pst -> scale = 1.0"		8316078	0					
ANR	8316650	AssignmentExpression	avalue . type |= pcv_float		8316078	0		|=			
ANR	8316651	MemberAccess	avalue . type		8316078	0					
ANR	8316652	Identifier	avalue		8316078	0					
ANR	8316653	Identifier	type		8316078	1					
ANR	8316654	Identifier	pcv_float		8316078	1					
ANR	8316655	Expression	"avalue . fraction = 0 , pst -> scale = 1.0"		8316078	1					
ANR	8316656	AssignmentExpression	avalue . fraction = 0		8316078	0		=			
ANR	8316657	MemberAccess	avalue . fraction		8316078	0					
ANR	8316658	Identifier	avalue		8316078	0					
ANR	8316659	Identifier	fraction		8316078	1					
ANR	8316660	PrimaryExpression	0		8316078	1					
ANR	8316661	AssignmentExpression	pst -> scale = 1.0		8316078	1		=			
ANR	8316662	PtrMemberAccess	pst -> scale		8316078	0					
ANR	8316663	Identifier	pst		8316078	0					
ANR	8316664	Identifier	scale		8316078	1					
ANR	8316665	PrimaryExpression	1.0		8316078	1					
ANR	8316666	ElseStatement	else		8316078	0					
ANR	8316667	IfStatement	if ( chr == ' ' )		8316078	0					
ANR	8316668	Condition	chr == ' '	399:33:14590:14599	8316078	0	True				
ANR	8316669	EqualityExpression	chr == ' '		8316078	0		==			
ANR	8316670	Identifier	chr		8316078	0					
ANR	8316671	PrimaryExpression	' '		8316078	1					
ANR	8316672	ContinueStatement	continue ;	400:28:14630:14638	8316078	1	True				
ANR	8316673	ElseStatement	else		8316078	0					
ANR	8316674	IfStatement	if ( chr >= ' ' && chr <= '?' )		8316078	0					
ANR	8316675	Condition	chr >= ' ' && chr <= '?'	401:33:14673:14696	8316078	0	True				
ANR	8316676	AndExpression	chr >= ' ' && chr <= '?'		8316078	0		&&			
ANR	8316677	RelationalExpression	chr >= ' '		8316078	0		>=			
ANR	8316678	Identifier	chr		8316078	0					
ANR	8316679	PrimaryExpression	' '		8316078	1					
ANR	8316680	RelationalExpression	chr <= '?'		8316078	1		<=			
ANR	8316681	Identifier	chr		8316078	0					
ANR	8316682	PrimaryExpression	'?'		8316078	1					
ANR	8316683	CompoundStatement		127:59:5407:5407	8316078	1					
ANR	8316684	IfStatement	if ( avalue . type != pcv_none )		8316078	0					
ANR	8316685	Condition	avalue . type != pcv_none	403:32:14880:14902	8316078	0	True				
ANR	8316686	EqualityExpression	avalue . type != pcv_none		8316078	0		!=			
ANR	8316687	MemberAccess	avalue . type		8316078	0					
ANR	8316688	Identifier	avalue		8316078	0					
ANR	8316689	Identifier	type		8316078	1					
ANR	8316690	Identifier	pcv_none		8316078	1					
ANR	8316691	ExpressionStatement	pst -> garbage_in_parameter = true	404:32:14937:14969	8316078	1	True				
ANR	8316692	AssignmentExpression	pst -> garbage_in_parameter = true		8316078	0		=			
ANR	8316693	PtrMemberAccess	pst -> garbage_in_parameter		8316078	0					
ANR	8316694	Identifier	pst		8316078	0					
ANR	8316695	Identifier	garbage_in_parameter		8316078	1					
ANR	8316696	Identifier	true		8316078	1					
ANR	8316697	ContinueStatement	continue ;	405:28:14999:15007	8316078	1	True				
ANR	8316698	ElseStatement	else		8316078	0					
ANR	8316699	BreakStatement	break ;	407:28:15068:15073	8316078	0	True				
ANR	8316700	IfStatement	if ( gs_debug_c ( 'i' ) )		8316078	6					
ANR	8316701	Condition	gs_debug_c ( 'i' )	411:20:15148:15162	8316078	0	True				
ANR	8316702	CallExpression	gs_debug_c ( 'i' )		8316078	0					
ANR	8316703	Callee	gs_debug_c		8316078	0					
ANR	8316704	Identifier	gs_debug_c		8316078	0					
ANR	8316705	ArgumentList	'i'		8316078	1					
ANR	8316706	Argument	'i'		8316078	0					
ANR	8316707	PrimaryExpression	'i'		8316078	0					
ANR	8316708	CompoundStatement		137:37:5873:5873	8316078	1					
ANR	8316709	ExpressionStatement	"dmprintf ( pcs -> memory , ""ESC "" )"	412:20:15187:15216	8316078	0	True				
ANR	8316710	CallExpression	"dmprintf ( pcs -> memory , ""ESC "" )"		8316078	0					
ANR	8316711	Callee	dmprintf		8316078	0					
ANR	8316712	Identifier	dmprintf		8316078	0					
ANR	8316713	ArgumentList	pcs -> memory		8316078	1					
ANR	8316714	Argument	pcs -> memory		8316078	0					
ANR	8316715	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316716	Identifier	pcs		8316078	0					
ANR	8316717	Identifier	memory		8316078	1					
ANR	8316718	Argument	"""ESC """		8316078	1					
ANR	8316719	PrimaryExpression	"""ESC """		8316078	0					
ANR	8316720	ExpressionStatement	"debug_dump_char ( pcs -> memory , pst -> param_class )"	413:20:15238:15284	8316078	1	True				
ANR	8316721	CallExpression	"debug_dump_char ( pcs -> memory , pst -> param_class )"		8316078	0					
ANR	8316722	Callee	debug_dump_char		8316078	0					
ANR	8316723	Identifier	debug_dump_char		8316078	0					
ANR	8316724	ArgumentList	pcs -> memory		8316078	1					
ANR	8316725	Argument	pcs -> memory		8316078	0					
ANR	8316726	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316727	Identifier	pcs		8316078	0					
ANR	8316728	Identifier	memory		8316078	1					
ANR	8316729	Argument	pst -> param_class		8316078	1					
ANR	8316730	PtrMemberAccess	pst -> param_class		8316078	0					
ANR	8316731	Identifier	pst		8316078	0					
ANR	8316732	Identifier	param_class		8316078	1					
ANR	8316733	ExpressionStatement	"dmprintf ( pcs -> memory , "" "" )"	414:20:15306:15332	8316078	2	True				
ANR	8316734	CallExpression	"dmprintf ( pcs -> memory , "" "" )"		8316078	0					
ANR	8316735	Callee	dmprintf		8316078	0					
ANR	8316736	Identifier	dmprintf		8316078	0					
ANR	8316737	ArgumentList	pcs -> memory		8316078	1					
ANR	8316738	Argument	pcs -> memory		8316078	0					
ANR	8316739	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316740	Identifier	pcs		8316078	0					
ANR	8316741	Identifier	memory		8316078	1					
ANR	8316742	Argument	""" """		8316078	1					
ANR	8316743	PrimaryExpression	""" """		8316078	0					
ANR	8316744	ExpressionStatement	"debug_dump_char ( pcs -> memory , pst -> param_group )"	415:20:15354:15400	8316078	3	True				
ANR	8316745	CallExpression	"debug_dump_char ( pcs -> memory , pst -> param_group )"		8316078	0					
ANR	8316746	Callee	debug_dump_char		8316078	0					
ANR	8316747	Identifier	debug_dump_char		8316078	0					
ANR	8316748	ArgumentList	pcs -> memory		8316078	1					
ANR	8316749	Argument	pcs -> memory		8316078	0					
ANR	8316750	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316751	Identifier	pcs		8316078	0					
ANR	8316752	Identifier	memory		8316078	1					
ANR	8316753	Argument	pst -> param_group		8316078	1					
ANR	8316754	PtrMemberAccess	pst -> param_group		8316078	0					
ANR	8316755	Identifier	pst		8316078	0					
ANR	8316756	Identifier	param_group		8316078	1					
ANR	8316757	IfStatement	if ( value_is_present ( & avalue ) )		8316078	4					
ANR	8316758	Condition	value_is_present ( & avalue )	416:24:15426:15450	8316078	0	True				
ANR	8316759	CallExpression	value_is_present ( & avalue )		8316078	0					
ANR	8316760	Callee	value_is_present		8316078	0					
ANR	8316761	Identifier	value_is_present		8316078	0					
ANR	8316762	ArgumentList	& avalue		8316078	1					
ANR	8316763	Argument	& avalue		8316078	0					
ANR	8316764	UnaryOperationExpression	& avalue		8316078	0					
ANR	8316765	UnaryOperator	&		8316078	0					
ANR	8316766	Identifier	avalue		8316078	1					
ANR	8316767	CompoundStatement		142:51:6161:6161	8316078	1					
ANR	8316768	ExpressionStatement	"dmputc ( pcs -> memory , ' ' )"	417:24:15479:15503	8316078	0	True				
ANR	8316769	CallExpression	"dmputc ( pcs -> memory , ' ' )"		8316078	0					
ANR	8316770	Callee	dmputc		8316078	0					
ANR	8316771	Identifier	dmputc		8316078	0					
ANR	8316772	ArgumentList	pcs -> memory		8316078	1					
ANR	8316773	Argument	pcs -> memory		8316078	0					
ANR	8316774	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316775	Identifier	pcs		8316078	0					
ANR	8316776	Identifier	memory		8316078	1					
ANR	8316777	Argument	' '		8316078	1					
ANR	8316778	PrimaryExpression	' '		8316078	0					
ANR	8316779	IfStatement	if ( value_is_signed ( & avalue ) )		8316078	1					
ANR	8316780	Condition	value_is_signed ( & avalue )	418:28:15533:15556	8316078	0	True				
ANR	8316781	CallExpression	value_is_signed ( & avalue )		8316078	0					
ANR	8316782	Callee	value_is_signed		8316078	0					
ANR	8316783	Identifier	value_is_signed		8316078	0					
ANR	8316784	ArgumentList	& avalue		8316078	1					
ANR	8316785	Argument	& avalue		8316078	0					
ANR	8316786	UnaryOperationExpression	& avalue		8316078	0					
ANR	8316787	UnaryOperator	&		8316078	0					
ANR	8316788	Identifier	avalue		8316078	1					
ANR	8316789	ExpressionStatement	"dmputc ( pcs -> memory , ( value_is_neg ( & avalue ) ? '-' : '+' ) )"	419:28:15587:15678	8316078	1	True				
ANR	8316790	CallExpression	"dmputc ( pcs -> memory , ( value_is_neg ( & avalue ) ? '-' : '+' ) )"		8316078	0					
ANR	8316791	Callee	dmputc		8316078	0					
ANR	8316792	Identifier	dmputc		8316078	0					
ANR	8316793	ArgumentList	pcs -> memory		8316078	1					
ANR	8316794	Argument	pcs -> memory		8316078	0					
ANR	8316795	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316796	Identifier	pcs		8316078	0					
ANR	8316797	Identifier	memory		8316078	1					
ANR	8316798	Argument	value_is_neg ( & avalue ) ? '-' : '+'		8316078	1					
ANR	8316799	ConditionalExpression	value_is_neg ( & avalue ) ? '-' : '+'		8316078	0					
ANR	8316800	Condition	value_is_neg ( & avalue )		8316078	0					
ANR	8316801	CallExpression	value_is_neg ( & avalue )		8316078	0					
ANR	8316802	Callee	value_is_neg		8316078	0					
ANR	8316803	Identifier	value_is_neg		8316078	0					
ANR	8316804	ArgumentList	& avalue		8316078	1					
ANR	8316805	Argument	& avalue		8316078	0					
ANR	8316806	UnaryOperationExpression	& avalue		8316078	0					
ANR	8316807	UnaryOperator	&		8316078	0					
ANR	8316808	Identifier	avalue		8316078	1					
ANR	8316809	PrimaryExpression	'-'		8316078	1					
ANR	8316810	PrimaryExpression	'+'		8316078	2					
ANR	8316811	IfStatement	if ( value_is_float ( & avalue ) )		8316078	2					
ANR	8316812	Condition	value_is_float ( & avalue )	421:28:15708:15730	8316078	0	True				
ANR	8316813	CallExpression	value_is_float ( & avalue )		8316078	0					
ANR	8316814	Callee	value_is_float		8316078	0					
ANR	8316815	Identifier	value_is_float		8316078	0					
ANR	8316816	ArgumentList	& avalue		8316078	1					
ANR	8316817	Argument	& avalue		8316078	0					
ANR	8316818	UnaryOperationExpression	& avalue		8316078	0					
ANR	8316819	UnaryOperator	&		8316078	0					
ANR	8316820	Identifier	avalue		8316078	1					
ANR	8316821	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""%g"" , avalue . i + avalue . fraction )"	422:28:15761:15855	8316078	1	True				
ANR	8316822	CallExpression	"dmprintf1 ( pcs -> memory , ""%g"" , avalue . i + avalue . fraction )"		8316078	0					
ANR	8316823	Callee	dmprintf1		8316078	0					
ANR	8316824	Identifier	dmprintf1		8316078	0					
ANR	8316825	ArgumentList	pcs -> memory		8316078	1					
ANR	8316826	Argument	pcs -> memory		8316078	0					
ANR	8316827	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316828	Identifier	pcs		8316078	0					
ANR	8316829	Identifier	memory		8316078	1					
ANR	8316830	Argument	"""%g"""		8316078	1					
ANR	8316831	PrimaryExpression	"""%g"""		8316078	0					
ANR	8316832	Argument	avalue . i + avalue . fraction		8316078	2					
ANR	8316833	AdditiveExpression	avalue . i + avalue . fraction		8316078	0		+			
ANR	8316834	MemberAccess	avalue . i		8316078	0					
ANR	8316835	Identifier	avalue		8316078	0					
ANR	8316836	Identifier	i		8316078	1					
ANR	8316837	MemberAccess	avalue . fraction		8316078	1					
ANR	8316838	Identifier	avalue		8316078	0					
ANR	8316839	Identifier	fraction		8316078	1					
ANR	8316840	ElseStatement	else		8316078	0					
ANR	8316841	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""%u"" , avalue . i )"	425:28:15914:15952	8316078	0	True				
ANR	8316842	CallExpression	"dmprintf1 ( pcs -> memory , ""%u"" , avalue . i )"		8316078	0					
ANR	8316843	Callee	dmprintf1		8316078	0					
ANR	8316844	Identifier	dmprintf1		8316078	0					
ANR	8316845	ArgumentList	pcs -> memory		8316078	1					
ANR	8316846	Argument	pcs -> memory		8316078	0					
ANR	8316847	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316848	Identifier	pcs		8316078	0					
ANR	8316849	Identifier	memory		8316078	1					
ANR	8316850	Argument	"""%u"""		8316078	1					
ANR	8316851	PrimaryExpression	"""%u"""		8316078	0					
ANR	8316852	Argument	avalue . i		8316078	2					
ANR	8316853	MemberAccess	avalue . i		8316078	0					
ANR	8316854	Identifier	avalue		8316078	0					
ANR	8316855	Identifier	i		8316078	1					
ANR	8316856	ExpressionStatement	"dmprintf1 ( pcs -> memory , "" %c\\n"" , chr )"	427:20:15996:16032	8316078	5	True				
ANR	8316857	CallExpression	"dmprintf1 ( pcs -> memory , "" %c\\n"" , chr )"		8316078	0					
ANR	8316858	Callee	dmprintf1		8316078	0					
ANR	8316859	Identifier	dmprintf1		8316078	0					
ANR	8316860	ArgumentList	pcs -> memory		8316078	1					
ANR	8316861	Argument	pcs -> memory		8316078	0					
ANR	8316862	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316863	Identifier	pcs		8316078	0					
ANR	8316864	Identifier	memory		8316078	1					
ANR	8316865	Argument	""" %c\\n"""		8316078	1					
ANR	8316866	PrimaryExpression	""" %c\\n"""		8316078	0					
ANR	8316867	Argument	chr		8316078	2					
ANR	8316868	Identifier	chr		8316078	0					
ANR	8316869	ExpressionStatement	pst -> short_hand = false	430:16:16075:16098	8316078	7	True				
ANR	8316870	AssignmentExpression	pst -> short_hand = false		8316078	0		=			
ANR	8316871	PtrMemberAccess	pst -> short_hand		8316078	0					
ANR	8316872	Identifier	pst		8316078	0					
ANR	8316873	Identifier	short_hand		8316078	1					
ANR	8316874	Identifier	false		8316078	1					
ANR	8316875	IfStatement	if ( chr >= min_escape_command + 32 && chr <= max_escape_command + 32 )		8316078	8					
ANR	8316876	Condition	chr >= min_escape_command + 32 && chr <= max_escape_command + 32	431:20:16120:16203	8316078	0	True				
ANR	8316877	AndExpression	chr >= min_escape_command + 32 && chr <= max_escape_command + 32		8316078	0		&&			
ANR	8316878	RelationalExpression	chr >= min_escape_command + 32		8316078	0		>=			
ANR	8316879	Identifier	chr		8316078	0					
ANR	8316880	AdditiveExpression	min_escape_command + 32		8316078	1		+			
ANR	8316881	Identifier	min_escape_command		8316078	0					
ANR	8316882	PrimaryExpression	32		8316078	1					
ANR	8316883	RelationalExpression	chr <= max_escape_command + 32		8316078	1		<=			
ANR	8316884	Identifier	chr		8316078	0					
ANR	8316885	AdditiveExpression	max_escape_command + 32		8316078	1		+			
ANR	8316886	Identifier	max_escape_command		8316078	0					
ANR	8316887	PrimaryExpression	32		8316078	1					
ANR	8316888	CompoundStatement		158:52:6914:6914	8316078	1					
ANR	8316889	ExpressionStatement	pst -> short_hand = true	433:20:16228:16250	8316078	0	True				
ANR	8316890	AssignmentExpression	pst -> short_hand = true		8316078	0		=			
ANR	8316891	PtrMemberAccess	pst -> short_hand		8316078	0					
ANR	8316892	Identifier	pst		8316078	0					
ANR	8316893	Identifier	short_hand		8316078	1					
ANR	8316894	Identifier	true		8316078	1					
ANR	8316895	ExpressionStatement	chr -= 32	434:20:16272:16281	8316078	1	True				
ANR	8316896	AssignmentExpression	chr -= 32		8316078	0		-=			
ANR	8316897	Identifier	chr		8316078	0					
ANR	8316898	PrimaryExpression	32		8316078	1					
ANR	8316899	ElseStatement	else		8316078	0					
ANR	8316900	IfStatement	if ( chr >= min_escape_command && chr <= max_escape_command )		8316078	0					
ANR	8316901	Condition	chr >= min_escape_command && chr <= max_escape_command	435:27:16310:16390	8316078	0	True				
ANR	8316902	AndExpression	chr >= min_escape_command && chr <= max_escape_command		8316078	0		&&			
ANR	8316903	RelationalExpression	chr >= min_escape_command		8316078	0		>=			
ANR	8316904	Identifier	chr		8316078	0					
ANR	8316905	Identifier	min_escape_command		8316078	1					
ANR	8316906	RelationalExpression	chr <= max_escape_command		8316078	1		<=			
ANR	8316907	Identifier	chr		8316078	0					
ANR	8316908	Identifier	max_escape_command		8316078	1					
ANR	8316909	ExpressionStatement	pst -> scan_type = scanning_none	437:20:16413:16443	8316078	1	True				
ANR	8316910	AssignmentExpression	pst -> scan_type = scanning_none		8316078	0		=			
ANR	8316911	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8316912	Identifier	pst		8316078	0					
ANR	8316913	Identifier	scan_type		8316078	1					
ANR	8316914	Identifier	scanning_none		8316078	1					
ANR	8316915	ElseStatement	else		8316078	0					
ANR	8316916	CompoundStatement		164:21:7174:7174	8316078	0					
ANR	8316917	ExpressionStatement	pst -> scan_type = scanning_none	439:20:16488:16518	8316078	0	True				
ANR	8316918	AssignmentExpression	pst -> scan_type = scanning_none		8316078	0		=			
ANR	8316919	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8316920	Identifier	pst		8316078	0					
ANR	8316921	Identifier	scan_type		8316078	1					
ANR	8316922	Identifier	scanning_none		8316078	1					
ANR	8316923	ExpressionStatement	-- p	441:20:16601:16604	8316078	1	True				
ANR	8316924	UnaryExpression	-- p		8316078	0					
ANR	8316925	IncDec	--		8316078	0					
ANR	8316926	Identifier	p		8316078	1					
ANR	8316927	ContinueStatement	continue ;	442:20:16626:16634	8316078	2	True				
ANR	8316928	ExpressionStatement	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , chr )"	445:16:16739:16921	8316078	9	True				
ANR	8316929	AssignmentExpression	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , chr )"		8316078	0		=			
ANR	8316930	Identifier	cdefn		8316078	0					
ANR	8316931	CallExpression	"pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , chr )"		8316078	1					
ANR	8316932	Callee	pcl_get_command_definition		8316078	0					
ANR	8316933	Identifier	pcl_get_command_definition		8316078	0					
ANR	8316934	ArgumentList	pst		8316078	1					
ANR	8316935	Argument	pst		8316078	0					
ANR	8316936	Identifier	pst		8316078	0					
ANR	8316937	Argument	pst -> param_class		8316078	1					
ANR	8316938	PtrMemberAccess	pst -> param_class		8316078	0					
ANR	8316939	Identifier	pst		8316078	0					
ANR	8316940	Identifier	param_class		8316078	1					
ANR	8316941	Argument	pst -> param_group		8316078	2					
ANR	8316942	PtrMemberAccess	pst -> param_group		8316078	0					
ANR	8316943	Identifier	pst		8316078	0					
ANR	8316944	Identifier	param_group		8316078	1					
ANR	8316945	Argument	chr		8316078	3					
ANR	8316946	Identifier	chr		8316078	0					
ANR	8316947	IfStatement	if ( cdefn )		8316078	10					
ANR	8316948	Condition	cdefn	448:20:16943:16947	8316078	0	True				
ANR	8316949	Identifier	cdefn		8316078	0					
ANR	8316950	CompoundStatement		174:27:7658:7658	8316078	1					
ANR	8316951	ExpressionStatement	"if_debug1m ( 'i' , pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"	449:20:16972:17027	8316078	0	True				
ANR	8316952	CallExpression	"if_debug1m ( 'i' , pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"		8316078	0					
ANR	8316953	Callee	if_debug1m		8316078	0					
ANR	8316954	Identifier	if_debug1m		8316078	0					
ANR	8316955	ArgumentList	'i'		8316078	1					
ANR	8316956	Argument	'i'		8316078	0					
ANR	8316957	PrimaryExpression	'i'		8316078	0					
ANR	8316958	Argument	pcs -> memory		8316078	1					
ANR	8316959	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8316960	Identifier	pcs		8316078	0					
ANR	8316961	Identifier	memory		8316078	1					
ANR	8316962	Argument	"""   [%s]\\n"""		8316078	2					
ANR	8316963	PrimaryExpression	"""   [%s]\\n"""		8316078	0					
ANR	8316964	Argument	cdefn -> cname		8316078	3					
ANR	8316965	PtrMemberAccess	cdefn -> cname		8316078	0					
ANR	8316966	Identifier	cdefn		8316078	0					
ANR	8316967	Identifier	cname		8316078	1					
ANR	8316968	ExpressionStatement	"code = pcl_adjust_arg ( & pst -> args , cdefn )"	450:20:17049:17089	8316078	1	True				
ANR	8316969	AssignmentExpression	"code = pcl_adjust_arg ( & pst -> args , cdefn )"		8316078	0		=			
ANR	8316970	Identifier	code		8316078	0					
ANR	8316971	CallExpression	"pcl_adjust_arg ( & pst -> args , cdefn )"		8316078	1					
ANR	8316972	Callee	pcl_adjust_arg		8316078	0					
ANR	8316973	Identifier	pcl_adjust_arg		8316078	0					
ANR	8316974	ArgumentList	& pst -> args		8316078	1					
ANR	8316975	Argument	& pst -> args		8316078	0					
ANR	8316976	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8316977	UnaryOperator	&		8316078	0					
ANR	8316978	PtrMemberAccess	pst -> args		8316078	1					
ANR	8316979	Identifier	pst		8316078	0					
ANR	8316980	Identifier	args		8316078	1					
ANR	8316981	Argument	cdefn		8316078	1					
ANR	8316982	Identifier	cdefn		8316078	0					
ANR	8316983	IfStatement	if ( code < 0 )		8316078	2					
ANR	8316984	Condition	code < 0	451:24:17115:17122	8316078	0	True				
ANR	8316985	RelationalExpression	code < 0		8316078	0		<			
ANR	8316986	Identifier	code		8316078	0					
ANR	8316987	PrimaryExpression	0		8316078	1					
ANR	8316988	GotoStatement	goto x ;	452:24:17149:17155	8316078	1	True				
ANR	8316989	Identifier	x		8316078	0					
ANR	8316990	IfStatement	if ( cdefn -> actions & pca_byte_data )		8316078	3					
ANR	8316991	Condition	cdefn -> actions & pca_byte_data	453:24:17181:17210	8316078	0	True				
ANR	8316992	BitAndExpression	cdefn -> actions & pca_byte_data		8316078	0		&			
ANR	8316993	PtrMemberAccess	cdefn -> actions		8316078	0					
ANR	8316994	Identifier	cdefn		8316078	0					
ANR	8316995	Identifier	actions		8316078	1					
ANR	8316996	Identifier	pca_byte_data		8316078	1					
ANR	8316997	CompoundStatement		180:24:7947:7980	8316078	1					
ANR	8316998	IdentifierDeclStatement	uint count = uint_arg ( & pst -> args ) ;	454:24:17239:17272	8316078	0	True				
ANR	8316999	IdentifierDecl	count = uint_arg ( & pst -> args )		8316078	0					
ANR	8317000	IdentifierDeclType	uint		8316078	0					
ANR	8317001	Identifier	count		8316078	1					
ANR	8317002	AssignmentExpression	count = uint_arg ( & pst -> args )		8316078	2		=			
ANR	8317003	Identifier	count		8316078	0					
ANR	8317004	CallExpression	uint_arg ( & pst -> args )		8316078	1					
ANR	8317005	Callee	uint_arg		8316078	0					
ANR	8317006	Identifier	uint_arg		8316078	0					
ANR	8317007	ArgumentList	& pst -> args		8316078	1					
ANR	8317008	Argument	& pst -> args		8316078	0					
ANR	8317009	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8317010	UnaryOperator	&		8316078	0					
ANR	8317011	PtrMemberAccess	pst -> args		8316078	1					
ANR	8317012	Identifier	pst		8316078	0					
ANR	8317013	Identifier	args		8316078	1					
ANR	8317014	IfStatement	if ( ( count > 0 ) && ( rlimit - p < count ) )		8316078	1					
ANR	8317015	Condition	( count > 0 ) && ( rlimit - p < count )	456:28:17303:17337	8316078	0	True				
ANR	8317016	AndExpression	( count > 0 ) && ( rlimit - p < count )		8316078	0		&&			
ANR	8317017	RelationalExpression	count > 0		8316078	0		>			
ANR	8317018	Identifier	count		8316078	0					
ANR	8317019	PrimaryExpression	0		8316078	1					
ANR	8317020	RelationalExpression	rlimit - p < count		8316078	1		<			
ANR	8317021	AdditiveExpression	rlimit - p		8316078	0		-			
ANR	8317022	Identifier	rlimit		8316078	0					
ANR	8317023	Identifier	p		8316078	1					
ANR	8317024	Identifier	count		8316078	1					
ANR	8317025	CompoundStatement		182:65:8048:8048	8316078	1					
ANR	8317026	ExpressionStatement	"pst -> args . data = gs_alloc_bytes ( pcs -> memory , count , ""command data"" )"	457:28:17370:17516	8316078	0	True				
ANR	8317027	AssignmentExpression	"pst -> args . data = gs_alloc_bytes ( pcs -> memory , count , ""command data"" )"		8316078	0		=			
ANR	8317028	MemberAccess	pst -> args . data		8316078	0					
ANR	8317029	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317030	Identifier	pst		8316078	0					
ANR	8317031	Identifier	args		8316078	1					
ANR	8317032	Identifier	data		8316078	1					
ANR	8317033	CallExpression	"gs_alloc_bytes ( pcs -> memory , count , ""command data"" )"		8316078	1					
ANR	8317034	Callee	gs_alloc_bytes		8316078	0					
ANR	8317035	Identifier	gs_alloc_bytes		8316078	0					
ANR	8317036	ArgumentList	pcs -> memory		8316078	1					
ANR	8317037	Argument	pcs -> memory		8316078	0					
ANR	8317038	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317039	Identifier	pcs		8316078	0					
ANR	8317040	Identifier	memory		8316078	1					
ANR	8317041	Argument	count		8316078	1					
ANR	8317042	Identifier	count		8316078	0					
ANR	8317043	Argument	"""command data"""		8316078	2					
ANR	8317044	PrimaryExpression	"""command data"""		8316078	0					
ANR	8317045	IfStatement	if ( pst -> args . data == 0 )		8316078	1					
ANR	8317046	Condition	pst -> args . data == 0	460:32:17550:17568	8316078	0	True				
ANR	8317047	EqualityExpression	pst -> args . data == 0		8316078	0		==			
ANR	8317048	MemberAccess	pst -> args . data		8316078	0					
ANR	8317049	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317050	Identifier	pst		8316078	0					
ANR	8317051	Identifier	args		8316078	1					
ANR	8317052	Identifier	data		8316078	1					
ANR	8317053	PrimaryExpression	0		8316078	1					
ANR	8317054	CompoundStatement		186:53:8279:8279	8316078	1					
ANR	8317055	ExpressionStatement	-- p	461:32:17605:17608	8316078	0	True				
ANR	8317056	UnaryExpression	-- p		8316078	0					
ANR	8317057	IncDec	--		8316078	0					
ANR	8317058	Identifier	p		8316078	1					
ANR	8317059	ExpressionStatement	code = gs_note_error ( e_Memory )	462:32:17642:17672	8316078	1	True				
ANR	8317060	AssignmentExpression	code = gs_note_error ( e_Memory )		8316078	0		=			
ANR	8317061	Identifier	code		8316078	0					
ANR	8317062	CallExpression	gs_note_error ( e_Memory )		8316078	1					
ANR	8317063	Callee	gs_note_error		8316078	0					
ANR	8317064	Identifier	gs_note_error		8316078	0					
ANR	8317065	ArgumentList	e_Memory		8316078	1					
ANR	8317066	Argument	e_Memory		8316078	0					
ANR	8317067	Identifier	e_Memory		8316078	0					
ANR	8317068	GotoStatement	goto x ;	463:32:17706:17712	8316078	2	True				
ANR	8317069	Identifier	x		8316078	0					
ANR	8317070	ExpressionStatement	pst -> args . data_on_heap = true	465:28:17772:17801	8316078	2	True				
ANR	8317071	AssignmentExpression	pst -> args . data_on_heap = true		8316078	0		=			
ANR	8317072	MemberAccess	pst -> args . data_on_heap		8316078	0					
ANR	8317073	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317074	Identifier	pst		8316078	0					
ANR	8317075	Identifier	args		8316078	1					
ANR	8317076	Identifier	data_on_heap		8316078	1					
ANR	8317077	Identifier	true		8316078	1					
ANR	8317078	ExpressionStatement	pst -> args . command = chr	466:28:17831:17854	8316078	3	True				
ANR	8317079	AssignmentExpression	pst -> args . command = chr		8316078	0		=			
ANR	8317080	MemberAccess	pst -> args . command		8316078	0					
ANR	8317081	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317082	Identifier	pst		8316078	0					
ANR	8317083	Identifier	args		8316078	1					
ANR	8317084	Identifier	command		8316078	1					
ANR	8317085	Identifier	chr		8316078	1					
ANR	8317086	ExpressionStatement	pst -> data_pos = 0	467:28:17884:17901	8316078	4	True				
ANR	8317087	AssignmentExpression	pst -> data_pos = 0		8316078	0		=			
ANR	8317088	PtrMemberAccess	pst -> data_pos		8316078	0					
ANR	8317089	Identifier	pst		8316078	0					
ANR	8317090	Identifier	data_pos		8316078	1					
ANR	8317091	PrimaryExpression	0		8316078	1					
ANR	8317092	ExpressionStatement	pst -> scan_type = scanning_data	468:28:17931:17961	8316078	5	True				
ANR	8317093	AssignmentExpression	pst -> scan_type = scanning_data		8316078	0		=			
ANR	8317094	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8317095	Identifier	pst		8316078	0					
ANR	8317096	Identifier	scan_type		8316078	1					
ANR	8317097	Identifier	scanning_data		8316078	1					
ANR	8317098	ContinueStatement	continue ;	469:28:17991:17999	8316078	6	True				
ANR	8317099	ExpressionStatement	pst -> args . data = ( byte * ) ( p + 1 )	471:24:18051:18084	8316078	2	True				
ANR	8317100	AssignmentExpression	pst -> args . data = ( byte * ) ( p + 1 )		8316078	0		=			
ANR	8317101	MemberAccess	pst -> args . data		8316078	0					
ANR	8317102	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317103	Identifier	pst		8316078	0					
ANR	8317104	Identifier	args		8316078	1					
ANR	8317105	Identifier	data		8316078	1					
ANR	8317106	CastExpression	( byte * ) ( p + 1 )		8316078	1					
ANR	8317107	CastTarget	byte *		8316078	0					
ANR	8317108	AdditiveExpression	p + 1		8316078	1		+			
ANR	8317109	Identifier	p		8316078	0					
ANR	8317110	PrimaryExpression	1		8316078	1					
ANR	8317111	ExpressionStatement	pst -> args . data_on_heap = false	472:24:18110:18140	8316078	3	True				
ANR	8317112	AssignmentExpression	pst -> args . data_on_heap = false		8316078	0		=			
ANR	8317113	MemberAccess	pst -> args . data_on_heap		8316078	0					
ANR	8317114	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317115	Identifier	pst		8316078	0					
ANR	8317116	Identifier	args		8316078	1					
ANR	8317117	Identifier	data_on_heap		8316078	1					
ANR	8317118	Identifier	false		8316078	1					
ANR	8317119	ExpressionStatement	p += count	473:24:18166:18176	8316078	4	True				
ANR	8317120	AssignmentExpression	p += count		8316078	0		+=			
ANR	8317121	Identifier	p		8316078	0					
ANR	8317122	Identifier	count		8316078	1					
ANR	8317123	BreakStatement	break ;	475:20:18220:18225	8316078	4	True				
ANR	8317124	ExpressionStatement	param_init ( )	477:16:18261:18273	8316078	11	True				
ANR	8317125	CallExpression	param_init ( )		8316078	0					
ANR	8317126	Callee	param_init		8316078	0					
ANR	8317127	Identifier	param_init		8316078	0					
ANR	8317128	ArgumentList			8316078	1					
ANR	8317129	ContinueStatement	continue ;	478:16:18291:18299	8316078	12	True				
ANR	8317130	Label	case scanning_none :	479:12:18313:18331	8316078	13	True				
ANR	8317131	Identifier	scanning_none		8316078	0					
ANR	8317132	IfStatement	if ( pcs -> personality == rtl && ! pcs -> parse_other )		8316078	14					
ANR	8317133	Condition	pcs -> personality == rtl && ! pcs -> parse_other	483:20:18541:18584	8316078	0	True				
ANR	8317134	AndExpression	pcs -> personality == rtl && ! pcs -> parse_other		8316078	0		&&			
ANR	8317135	EqualityExpression	pcs -> personality == rtl		8316078	0		==			
ANR	8317136	PtrMemberAccess	pcs -> personality		8316078	0					
ANR	8317137	Identifier	pcs		8316078	0					
ANR	8317138	Identifier	personality		8316078	1					
ANR	8317139	Identifier	rtl		8316078	1					
ANR	8317140	UnaryOperationExpression	! pcs -> parse_other		8316078	1					
ANR	8317141	UnaryOperator	!		8316078	0					
ANR	8317142	PtrMemberAccess	pcs -> parse_other		8316078	1					
ANR	8317143	Identifier	pcs		8316078	0					
ANR	8317144	Identifier	parse_other		8316078	1					
ANR	8317145	CompoundStatement		209:66:9295:9295	8316078	1					
ANR	8317146	IfStatement	if ( p >= rlimit - 2 )		8316078	0					
ANR	8317147	Condition	p >= rlimit - 2	485:24:18687:18701	8316078	0	True				
ANR	8317148	RelationalExpression	p >= rlimit - 2		8316078	0		>=			
ANR	8317149	Identifier	p		8316078	0					
ANR	8317150	AdditiveExpression	rlimit - 2		8316078	1		-			
ANR	8317151	Identifier	rlimit		8316078	0					
ANR	8317152	PrimaryExpression	2		8316078	1					
ANR	8317153	GotoStatement	goto x ;	486:24:18728:18734	8316078	1	True				
ANR	8317154	Identifier	x		8316078	0					
ANR	8317155	IfStatement	if ( ( * ( p + 1 ) == 'I' && * ( p + 2 ) == 'N' ) || ( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' ) )		8316078	1					
ANR	8317156	Condition	( * ( p + 1 ) == 'I' && * ( p + 2 ) == 'N' ) || ( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )	490:24:18889:19180	8316078	0	True				
ANR	8317157	OrExpression	( * ( p + 1 ) == 'I' && * ( p + 2 ) == 'N' ) || ( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8316078	0		||			
ANR	8317158	AndExpression	* ( p + 1 ) == 'I' && * ( p + 2 ) == 'N'		8316078	0		&&			
ANR	8317159	EqualityExpression	* ( p + 1 ) == 'I'		8316078	0		==			
ANR	8317160	UnaryOperationExpression	* ( p + 1 )		8316078	0					
ANR	8317161	UnaryOperator	*		8316078	0					
ANR	8317162	AdditiveExpression	p + 1		8316078	1		+			
ANR	8317163	Identifier	p		8316078	0					
ANR	8317164	PrimaryExpression	1		8316078	1					
ANR	8317165	PrimaryExpression	'I'		8316078	1					
ANR	8317166	EqualityExpression	* ( p + 2 ) == 'N'		8316078	1		==			
ANR	8317167	UnaryOperationExpression	* ( p + 2 )		8316078	0					
ANR	8317168	UnaryOperator	*		8316078	0					
ANR	8317169	AdditiveExpression	p + 2		8316078	1		+			
ANR	8317170	Identifier	p		8316078	0					
ANR	8317171	PrimaryExpression	2		8316078	1					
ANR	8317172	PrimaryExpression	'N'		8316078	1					
ANR	8317173	OrExpression	( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8316078	1		||			
ANR	8317174	AndExpression	* ( p + 1 ) == 'D' && * ( p + 2 ) == 'F'		8316078	0		&&			
ANR	8317175	EqualityExpression	* ( p + 1 ) == 'D'		8316078	0		==			
ANR	8317176	UnaryOperationExpression	* ( p + 1 )		8316078	0					
ANR	8317177	UnaryOperator	*		8316078	0					
ANR	8317178	AdditiveExpression	p + 1		8316078	1		+			
ANR	8317179	Identifier	p		8316078	0					
ANR	8317180	PrimaryExpression	1		8316078	1					
ANR	8317181	PrimaryExpression	'D'		8316078	1					
ANR	8317182	EqualityExpression	* ( p + 2 ) == 'F'		8316078	1		==			
ANR	8317183	UnaryOperationExpression	* ( p + 2 )		8316078	0					
ANR	8317184	UnaryOperator	*		8316078	0					
ANR	8317185	AdditiveExpression	p + 2		8316078	1		+			
ANR	8317186	Identifier	p		8316078	0					
ANR	8317187	PrimaryExpression	2		8316078	1					
ANR	8317188	PrimaryExpression	'F'		8316078	1					
ANR	8317189	OrExpression	( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8316078	1		||			
ANR	8317190	AndExpression	* ( p + 1 ) == 'B' && * ( p + 2 ) == 'P'		8316078	0		&&			
ANR	8317191	EqualityExpression	* ( p + 1 ) == 'B'		8316078	0		==			
ANR	8317192	UnaryOperationExpression	* ( p + 1 )		8316078	0					
ANR	8317193	UnaryOperator	*		8316078	0					
ANR	8317194	AdditiveExpression	p + 1		8316078	1		+			
ANR	8317195	Identifier	p		8316078	0					
ANR	8317196	PrimaryExpression	1		8316078	1					
ANR	8317197	PrimaryExpression	'B'		8316078	1					
ANR	8317198	EqualityExpression	* ( p + 2 ) == 'P'		8316078	1		==			
ANR	8317199	UnaryOperationExpression	* ( p + 2 )		8316078	0					
ANR	8317200	UnaryOperator	*		8316078	0					
ANR	8317201	AdditiveExpression	p + 2		8316078	1		+			
ANR	8317202	Identifier	p		8316078	0					
ANR	8317203	PrimaryExpression	2		8316078	1					
ANR	8317204	PrimaryExpression	'P'		8316078	1					
ANR	8317205	OrExpression	( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8316078	1		||			
ANR	8317206	AndExpression	* ( p + 1 ) == 'P' && * ( p + 2 ) == 'G'		8316078	0		&&			
ANR	8317207	EqualityExpression	* ( p + 1 ) == 'P'		8316078	0		==			
ANR	8317208	UnaryOperationExpression	* ( p + 1 )		8316078	0					
ANR	8317209	UnaryOperator	*		8316078	0					
ANR	8317210	AdditiveExpression	p + 1		8316078	1		+			
ANR	8317211	Identifier	p		8316078	0					
ANR	8317212	PrimaryExpression	1		8316078	1					
ANR	8317213	PrimaryExpression	'P'		8316078	1					
ANR	8317214	EqualityExpression	* ( p + 2 ) == 'G'		8316078	1		==			
ANR	8317215	UnaryOperationExpression	* ( p + 2 )		8316078	0					
ANR	8317216	UnaryOperator	*		8316078	0					
ANR	8317217	AdditiveExpression	p + 2		8316078	1		+			
ANR	8317218	Identifier	p		8316078	0					
ANR	8317219	PrimaryExpression	2		8316078	1					
ANR	8317220	PrimaryExpression	'G'		8316078	1					
ANR	8317221	AndExpression	* ( p + 1 ) == 'S' && * ( p + 2 ) == 'P'		8316078	1		&&			
ANR	8317222	EqualityExpression	* ( p + 1 ) == 'S'		8316078	0		==			
ANR	8317223	UnaryOperationExpression	* ( p + 1 )		8316078	0					
ANR	8317224	UnaryOperator	*		8316078	0					
ANR	8317225	AdditiveExpression	p + 1		8316078	1		+			
ANR	8317226	Identifier	p		8316078	0					
ANR	8317227	PrimaryExpression	1		8316078	1					
ANR	8317228	PrimaryExpression	'S'		8316078	1					
ANR	8317229	EqualityExpression	* ( p + 2 ) == 'P'		8316078	1		==			
ANR	8317230	UnaryOperationExpression	* ( p + 2 )		8316078	0					
ANR	8317231	UnaryOperator	*		8316078	0					
ANR	8317232	AdditiveExpression	p + 2		8316078	1		+			
ANR	8317233	Identifier	p		8316078	0					
ANR	8317234	PrimaryExpression	2		8316078	1					
ANR	8317235	PrimaryExpression	'P'		8316078	1					
ANR	8317236	CompoundStatement		222:24:9918:9933	8316078	1					
ANR	8317237	IdentifierDeclStatement	pcl_args_t args ;	496:24:19210:19225	8316078	0	True				
ANR	8317238	IdentifierDecl	args		8316078	0					
ANR	8317239	IdentifierDeclType	pcl_args_t		8316078	0					
ANR	8317240	Identifier	args		8316078	1					
ANR	8317241	ExpressionStatement	"arg_set_uint ( & args , 0 )"	497:24:19251:19273	8316078	1	True				
ANR	8317242	CallExpression	"arg_set_uint ( & args , 0 )"		8316078	0					
ANR	8317243	Callee	arg_set_uint		8316078	0					
ANR	8317244	Identifier	arg_set_uint		8316078	0					
ANR	8317245	ArgumentList	& args		8316078	1					
ANR	8317246	Argument	& args		8316078	0					
ANR	8317247	UnaryOperationExpression	& args		8316078	0					
ANR	8317248	UnaryOperator	&		8316078	0					
ANR	8317249	Identifier	args		8316078	1					
ANR	8317250	Argument	0		8316078	1					
ANR	8317251	PrimaryExpression	0		8316078	0					
ANR	8317252	ExpressionStatement	"code = rtl_enter_hpgl_mode ( & args , pcs )"	498:24:19299:19337	8316078	2	True				
ANR	8317253	AssignmentExpression	"code = rtl_enter_hpgl_mode ( & args , pcs )"		8316078	0		=			
ANR	8317254	Identifier	code		8316078	0					
ANR	8317255	CallExpression	"rtl_enter_hpgl_mode ( & args , pcs )"		8316078	1					
ANR	8317256	Callee	rtl_enter_hpgl_mode		8316078	0					
ANR	8317257	Identifier	rtl_enter_hpgl_mode		8316078	0					
ANR	8317258	ArgumentList	& args		8316078	1					
ANR	8317259	Argument	& args		8316078	0					
ANR	8317260	UnaryOperationExpression	& args		8316078	0					
ANR	8317261	UnaryOperator	&		8316078	0					
ANR	8317262	Identifier	args		8316078	1					
ANR	8317263	Argument	pcs		8316078	1					
ANR	8317264	Identifier	pcs		8316078	0					
ANR	8317265	IfStatement	if ( code < 0 )		8316078	3					
ANR	8317266	Condition	code < 0	499:28:19367:19374	8316078	0	True				
ANR	8317267	RelationalExpression	code < 0		8316078	0		<			
ANR	8317268	Identifier	code		8316078	0					
ANR	8317269	PrimaryExpression	0		8316078	1					
ANR	8317270	GotoStatement	goto x ;	500:28:19405:19411	8316078	1	True				
ANR	8317271	Identifier	x		8316078	0					
ANR	8317272	IfStatement	if ( pcs -> parse_other )		8316078	15					
ANR	8317273	Condition	pcs -> parse_other	504:20:19474:19489	8316078	0	True				
ANR	8317274	PtrMemberAccess	pcs -> parse_other		8316078	0					
ANR	8317275	Identifier	pcs		8316078	0					
ANR	8317276	Identifier	parse_other		8316078	1					
ANR	8317277	CompoundStatement		230:38:10200:10200	8316078	1					
ANR	8317278	ExpressionStatement	pr -> ptr = p	508:20:19701:19712	8316078	0	True				
ANR	8317279	AssignmentExpression	pr -> ptr = p		8316078	0		=			
ANR	8317280	PtrMemberAccess	pr -> ptr		8316078	0					
ANR	8317281	Identifier	pr		8316078	0					
ANR	8317282	Identifier	ptr		8316078	1					
ANR	8317283	Identifier	p		8316078	1					
ANR	8317284	ExpressionStatement	"code = ( * pcs -> parse_other ) ( pcs -> parse_data , pcs , pr )"	509:20:19734:19811	8316078	1	True				
ANR	8317285	AssignmentExpression	"code = ( * pcs -> parse_other ) ( pcs -> parse_data , pcs , pr )"		8316078	0		=			
ANR	8317286	Identifier	code		8316078	0					
ANR	8317287	CallExpression	"( * pcs -> parse_other ) ( pcs -> parse_data , pcs , pr )"		8316078	1					
ANR	8317288	Callee	* pcs -> parse_other		8316078	0					
ANR	8317289	UnaryOperationExpression	* pcs -> parse_other		8316078	0					
ANR	8317290	UnaryOperator	*		8316078	0					
ANR	8317291	PtrMemberAccess	pcs -> parse_other		8316078	1					
ANR	8317292	Identifier	pcs		8316078	0					
ANR	8317293	Identifier	parse_other		8316078	1					
ANR	8317294	ArgumentList	pcs -> parse_data		8316078	1					
ANR	8317295	Argument	pcs -> parse_data		8316078	0					
ANR	8317296	PtrMemberAccess	pcs -> parse_data		8316078	0					
ANR	8317297	Identifier	pcs		8316078	0					
ANR	8317298	Identifier	parse_data		8316078	1					
ANR	8317299	Argument	pcs		8316078	1					
ANR	8317300	Identifier	pcs		8316078	0					
ANR	8317301	Argument	pr		8316078	2					
ANR	8317302	Identifier	pr		8316078	0					
ANR	8317303	ExpressionStatement	p = pr -> ptr	511:20:19833:19844	8316078	2	True				
ANR	8317304	AssignmentExpression	p = pr -> ptr		8316078	0		=			
ANR	8317305	Identifier	p		8316078	0					
ANR	8317306	PtrMemberAccess	pr -> ptr		8316078	1					
ANR	8317307	Identifier	pr		8316078	0					
ANR	8317308	Identifier	ptr		8316078	1					
ANR	8317309	IfStatement	if ( code < 0 || ( code == 0 && pcs -> parse_other ) )		8316078	3					
ANR	8317310	Condition	code < 0 || ( code == 0 && pcs -> parse_other )	512:24:19870:19912	8316078	0	True				
ANR	8317311	OrExpression	code < 0 || ( code == 0 && pcs -> parse_other )		8316078	0		||			
ANR	8317312	RelationalExpression	code < 0		8316078	0		<			
ANR	8317313	Identifier	code		8316078	0					
ANR	8317314	PrimaryExpression	0		8316078	1					
ANR	8317315	AndExpression	code == 0 && pcs -> parse_other		8316078	1		&&			
ANR	8317316	EqualityExpression	code == 0		8316078	0		==			
ANR	8317317	Identifier	code		8316078	0					
ANR	8317318	PrimaryExpression	0		8316078	1					
ANR	8317319	PtrMemberAccess	pcs -> parse_other		8316078	1					
ANR	8317320	Identifier	pcs		8316078	0					
ANR	8317321	Identifier	parse_other		8316078	1					
ANR	8317322	GotoStatement	goto x ;	513:24:19939:19945	8316078	1	True				
ANR	8317323	Identifier	x		8316078	0					
ANR	8317324	ExpressionStatement	chr = * ++ p	515:16:19981:19991	8316078	16	True				
ANR	8317325	AssignmentExpression	chr = * ++ p		8316078	0		=			
ANR	8317326	Identifier	chr		8316078	0					
ANR	8317327	UnaryOperationExpression	* ++ p		8316078	1					
ANR	8317328	UnaryOperator	*		8316078	0					
ANR	8317329	UnaryExpression	++ p		8316078	1					
ANR	8317330	IncDec	++		8316078	0					
ANR	8317331	Identifier	p		8316078	1					
ANR	8317332	ExpressionStatement	"bytelen = pcl_char_bytelen ( chr , pcs -> text_parsing_method )"	517:16:20061:20118	8316078	17	True				
ANR	8317333	AssignmentExpression	"bytelen = pcl_char_bytelen ( chr , pcs -> text_parsing_method )"		8316078	0		=			
ANR	8317334	Identifier	bytelen		8316078	0					
ANR	8317335	CallExpression	"pcl_char_bytelen ( chr , pcs -> text_parsing_method )"		8316078	1					
ANR	8317336	Callee	pcl_char_bytelen		8316078	0					
ANR	8317337	Identifier	pcl_char_bytelen		8316078	0					
ANR	8317338	ArgumentList	chr		8316078	1					
ANR	8317339	Argument	chr		8316078	0					
ANR	8317340	Identifier	chr		8316078	0					
ANR	8317341	Argument	pcs -> text_parsing_method		8316078	1					
ANR	8317342	PtrMemberAccess	pcs -> text_parsing_method		8316078	0					
ANR	8317343	Identifier	pcs		8316078	0					
ANR	8317344	Identifier	text_parsing_method		8316078	1					
ANR	8317345	IfStatement	if ( bytelen == 0 )		8316078	18					
ANR	8317346	Condition	bytelen == 0	518:20:20140:20151	8316078	0	True				
ANR	8317347	EqualityExpression	bytelen == 0		8316078	0		==			
ANR	8317348	Identifier	bytelen		8316078	0					
ANR	8317349	PrimaryExpression	0		8316078	1					
ANR	8317350	CompoundStatement		244:34:10862:10862	8316078	1					
ANR	8317351	ExpressionStatement	bytelen = 1	519:20:20176:20187	8316078	0	True				
ANR	8317352	AssignmentExpression	bytelen = 1		8316078	0		=			
ANR	8317353	Identifier	bytelen		8316078	0					
ANR	8317354	PrimaryExpression	1		8316078	1					
ANR	8317355	IfStatement	if ( bytelen > 1 )		8316078	19					
ANR	8317356	Condition	bytelen > 1	521:20:20267:20277	8316078	0	True				
ANR	8317357	RelationalExpression	bytelen > 1		8316078	0		>			
ANR	8317358	Identifier	bytelen		8316078	0					
ANR	8317359	PrimaryExpression	1		8316078	1					
ANR	8317360	CompoundStatement		247:33:10988:10988	8316078	1					
ANR	8317361	IfStatement	if ( ( p + bytelen - 1 ) > rlimit )		8316078	0					
ANR	8317362	Condition	( p + bytelen - 1 ) > rlimit	523:24:20359:20384	8316078	0	True				
ANR	8317363	RelationalExpression	( p + bytelen - 1 ) > rlimit		8316078	0		>			
ANR	8317364	AdditiveExpression	p + bytelen - 1		8316078	0		+			
ANR	8317365	Identifier	p		8316078	0					
ANR	8317366	AdditiveExpression	bytelen - 1		8316078	1		-			
ANR	8317367	Identifier	bytelen		8316078	0					
ANR	8317368	PrimaryExpression	1		8316078	1					
ANR	8317369	Identifier	rlimit		8316078	1					
ANR	8317370	CompoundStatement		249:52:11095:11095	8316078	1					
ANR	8317371	ExpressionStatement	-- p	524:24:20413:20416	8316078	0	True				
ANR	8317372	UnaryExpression	-- p		8316078	0					
ANR	8317373	IncDec	--		8316078	0					
ANR	8317374	Identifier	p		8316078	1					
ANR	8317375	GotoStatement	goto x ;	525:24:20442:20448	8316078	1	True				
ANR	8317376	Identifier	x		8316078	0					
ANR	8317377	ExpressionStatement	"if_debug2m ( 'i' , pcs -> memory , ""%x%x\\n"" , p [ 0 ] , p [ 1 ] )"	527:20:20492:20542	8316078	1	True				
ANR	8317378	CallExpression	"if_debug2m ( 'i' , pcs -> memory , ""%x%x\\n"" , p [ 0 ] , p [ 1 ] )"		8316078	0					
ANR	8317379	Callee	if_debug2m		8316078	0					
ANR	8317380	Identifier	if_debug2m		8316078	0					
ANR	8317381	ArgumentList	'i'		8316078	1					
ANR	8317382	Argument	'i'		8316078	0					
ANR	8317383	PrimaryExpression	'i'		8316078	0					
ANR	8317384	Argument	pcs -> memory		8316078	1					
ANR	8317385	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317386	Identifier	pcs		8316078	0					
ANR	8317387	Identifier	memory		8316078	1					
ANR	8317388	Argument	"""%x%x\\n"""		8316078	2					
ANR	8317389	PrimaryExpression	"""%x%x\\n"""		8316078	0					
ANR	8317390	Argument	p [ 0 ]		8316078	3					
ANR	8317391	ArrayIndexing	p [ 0 ]		8316078	0					
ANR	8317392	Identifier	p		8316078	0					
ANR	8317393	PrimaryExpression	0		8316078	1					
ANR	8317394	Argument	p [ 1 ]		8316078	4					
ANR	8317395	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8317396	Identifier	p		8316078	0					
ANR	8317397	PrimaryExpression	1		8316078	1					
ANR	8317398	ExpressionStatement	"code = pcl_text ( p , bytelen , pcs , false )"	528:20:20564:20603	8316078	2	True				
ANR	8317399	AssignmentExpression	"code = pcl_text ( p , bytelen , pcs , false )"		8316078	0		=			
ANR	8317400	Identifier	code		8316078	0					
ANR	8317401	CallExpression	"pcl_text ( p , bytelen , pcs , false )"		8316078	1					
ANR	8317402	Callee	pcl_text		8316078	0					
ANR	8317403	Identifier	pcl_text		8316078	0					
ANR	8317404	ArgumentList	p		8316078	1					
ANR	8317405	Argument	p		8316078	0					
ANR	8317406	Identifier	p		8316078	0					
ANR	8317407	Argument	bytelen		8316078	1					
ANR	8317408	Identifier	bytelen		8316078	0					
ANR	8317409	Argument	pcs		8316078	2					
ANR	8317410	Identifier	pcs		8316078	0					
ANR	8317411	Argument	false		8316078	3					
ANR	8317412	Identifier	false		8316078	0					
ANR	8317413	IfStatement	if ( code < 0 )		8316078	3					
ANR	8317414	Condition	code < 0	529:24:20629:20636	8316078	0	True				
ANR	8317415	RelationalExpression	code < 0		8316078	0		<			
ANR	8317416	Identifier	code		8316078	0					
ANR	8317417	PrimaryExpression	0		8316078	1					
ANR	8317418	GotoStatement	goto x ;	530:24:20663:20669	8316078	1	True				
ANR	8317419	Identifier	x		8316078	0					
ANR	8317420	ExpressionStatement	p += ( bytelen - 1 )	532:20:20751:20769	8316078	4	True				
ANR	8317421	AssignmentExpression	p += ( bytelen - 1 )		8316078	0		+=			
ANR	8317422	Identifier	p		8316078	0					
ANR	8317423	AdditiveExpression	bytelen - 1		8316078	1		-			
ANR	8317424	Identifier	bytelen		8316078	0					
ANR	8317425	PrimaryExpression	1		8316078	1					
ANR	8317426	ExpressionStatement	cdefn = NULL	533:20:20791:20803	8316078	5	True				
ANR	8317427	AssignmentExpression	cdefn = NULL		8316078	0		=			
ANR	8317428	Identifier	cdefn		8316078	0					
ANR	8317429	Identifier	NULL		8316078	1					
ANR	8317430	ElseStatement	else		8316078	0					
ANR	8317431	IfStatement	if ( chr != ESC )		8316078	0					
ANR	8317432	Condition	chr != ESC	534:27:20832:20841	8316078	0	True				
ANR	8317433	EqualityExpression	chr != ESC		8316078	0		!=			
ANR	8317434	Identifier	chr		8316078	0					
ANR	8317435	Identifier	ESC		8316078	1					
ANR	8317436	CompoundStatement		260:39:11552:11552	8316078	1					
ANR	8317437	IfStatement	if ( gs_debug_c ( 'i' ) )		8316078	0					
ANR	8317438	Condition	gs_debug_c ( 'i' )	536:24:20883:20897	8316078	0	True				
ANR	8317439	CallExpression	gs_debug_c ( 'i' )		8316078	0					
ANR	8317440	Callee	gs_debug_c		8316078	0					
ANR	8317441	Identifier	gs_debug_c		8316078	0					
ANR	8317442	ArgumentList	'i'		8316078	1					
ANR	8317443	Argument	'i'		8316078	0					
ANR	8317444	PrimaryExpression	'i'		8316078	0					
ANR	8317445	CompoundStatement		262:41:11608:11608	8316078	1					
ANR	8317446	ExpressionStatement	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"	537:24:20926:20973	8316078	0	True				
ANR	8317447	CallExpression	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"		8316078	0					
ANR	8317448	Callee	if_debug1m		8316078	0					
ANR	8317449	Identifier	if_debug1m		8316078	0					
ANR	8317450	ArgumentList	'i'		8316078	1					
ANR	8317451	Argument	'i'		8316078	0					
ANR	8317452	PrimaryExpression	'i'		8316078	0					
ANR	8317453	Argument	pcs -> memory		8316078	1					
ANR	8317454	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317455	Identifier	pcs		8316078	0					
ANR	8317456	Identifier	memory		8316078	1					
ANR	8317457	Argument	"""[i%d] """		8316078	2					
ANR	8317458	PrimaryExpression	"""[i%d] """		8316078	0					
ANR	8317459	Argument	bytelen		8316078	3					
ANR	8317460	Identifier	bytelen		8316078	0					
ANR	8317461	ExpressionStatement	"debug_dump_char ( pcs -> memory , chr )"	538:24:20999:21032	8316078	1	True				
ANR	8317462	CallExpression	"debug_dump_char ( pcs -> memory , chr )"		8316078	0					
ANR	8317463	Callee	debug_dump_char		8316078	0					
ANR	8317464	Identifier	debug_dump_char		8316078	0					
ANR	8317465	ArgumentList	pcs -> memory		8316078	1					
ANR	8317466	Argument	pcs -> memory		8316078	0					
ANR	8317467	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317468	Identifier	pcs		8316078	0					
ANR	8317469	Identifier	memory		8316078	1					
ANR	8317470	Argument	chr		8316078	1					
ANR	8317471	Identifier	chr		8316078	0					
ANR	8317472	ExpressionStatement	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"	539:24:21058:21092	8316078	2	True				
ANR	8317473	CallExpression	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"		8316078	0					
ANR	8317474	Callee	if_debug0m		8316078	0					
ANR	8317475	Identifier	if_debug0m		8316078	0					
ANR	8317476	ArgumentList	'i'		8316078	1					
ANR	8317477	Argument	'i'		8316078	0					
ANR	8317478	PrimaryExpression	'i'		8316078	0					
ANR	8317479	Argument	pcs -> memory		8316078	1					
ANR	8317480	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317481	Identifier	pcs		8316078	0					
ANR	8317482	Identifier	memory		8316078	1					
ANR	8317483	Argument	"""\\n"""		8316078	2					
ANR	8317484	PrimaryExpression	"""\\n"""		8316078	0					
ANR	8317485	ExpressionStatement	cdefn = pst -> definitions -> pcl_command_list [ chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ] ]	542:20:21143:21374	8316078	1	True				
ANR	8317486	AssignmentExpression	cdefn = pst -> definitions -> pcl_command_list [ chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ] ]		8316078	0		=			
ANR	8317487	Identifier	cdefn		8316078	0					
ANR	8317488	ArrayIndexing	pst -> definitions -> pcl_command_list [ chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ] ]		8316078	1					
ANR	8317489	PtrMemberAccess	pst -> definitions -> pcl_command_list		8316078	0					
ANR	8317490	PtrMemberAccess	pst -> definitions		8316078	0					
ANR	8317491	Identifier	pst		8316078	0					
ANR	8317492	Identifier	definitions		8316078	1					
ANR	8317493	Identifier	pcl_command_list		8316078	1					
ANR	8317494	ConditionalExpression	chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ]		8316078	1					
ANR	8317495	Condition	chr < 33		8316078	0					
ANR	8317496	RelationalExpression	chr < 33		8316078	0		<			
ANR	8317497	Identifier	chr		8316078	0					
ANR	8317498	PrimaryExpression	33		8316078	1					
ANR	8317499	ArrayIndexing	pst -> definitions -> pcl_control_command_indices [ chr ]		8316078	1					
ANR	8317500	PtrMemberAccess	pst -> definitions -> pcl_control_command_indices		8316078	0					
ANR	8317501	PtrMemberAccess	pst -> definitions		8316078	0					
ANR	8317502	Identifier	pst		8316078	0					
ANR	8317503	Identifier	definitions		8316078	1					
ANR	8317504	Identifier	pcl_control_command_indices		8316078	1					
ANR	8317505	Identifier	chr		8316078	1					
ANR	8317506	ArrayIndexing	pst -> definitions -> pcl_control_command_indices [ 1 ]		8316078	2					
ANR	8317507	PtrMemberAccess	pst -> definitions -> pcl_control_command_indices		8316078	0					
ANR	8317508	PtrMemberAccess	pst -> definitions		8316078	0					
ANR	8317509	Identifier	pst		8316078	0					
ANR	8317510	Identifier	definitions		8316078	1					
ANR	8317511	Identifier	pcl_control_command_indices		8316078	1					
ANR	8317512	PrimaryExpression	1		8316078	1					
ANR	8317513	IfStatement	if ( ( cdefn == 0 || cdefn -> proc == pcl_plain_char ) && ! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode )		8316078	2					
ANR	8317514	Condition	( cdefn == 0 || cdefn -> proc == pcl_plain_char ) && ! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode	546:24:21400:21562	8316078	0	True				
ANR	8317515	AndExpression	( cdefn == 0 || cdefn -> proc == pcl_plain_char ) && ! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode		8316078	0		&&			
ANR	8317516	OrExpression	cdefn == 0 || cdefn -> proc == pcl_plain_char		8316078	0		||			
ANR	8317517	EqualityExpression	cdefn == 0		8316078	0		==			
ANR	8317518	Identifier	cdefn		8316078	0					
ANR	8317519	PrimaryExpression	0		8316078	1					
ANR	8317520	EqualityExpression	cdefn -> proc == pcl_plain_char		8316078	1		==			
ANR	8317521	PtrMemberAccess	cdefn -> proc		8316078	0					
ANR	8317522	Identifier	cdefn		8316078	0					
ANR	8317523	Identifier	proc		8316078	1					
ANR	8317524	Identifier	pcl_plain_char		8316078	1					
ANR	8317525	AndExpression	! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode		8316078	1		&&			
ANR	8317526	UnaryOperationExpression	! in_macro		8316078	0					
ANR	8317527	UnaryOperator	!		8316078	0					
ANR	8317528	Identifier	in_macro		8316078	1					
ANR	8317529	AndExpression	! pcs -> parse_other && ! pcs -> raster_state . graphics_mode		8316078	1		&&			
ANR	8317530	UnaryOperationExpression	! pcs -> parse_other		8316078	0					
ANR	8317531	UnaryOperator	!		8316078	0					
ANR	8317532	PtrMemberAccess	pcs -> parse_other		8316078	1					
ANR	8317533	Identifier	pcs		8316078	0					
ANR	8317534	Identifier	parse_other		8316078	1					
ANR	8317535	UnaryOperationExpression	! pcs -> raster_state . graphics_mode		8316078	1					
ANR	8317536	UnaryOperator	!		8316078	0					
ANR	8317537	MemberAccess	pcs -> raster_state . graphics_mode		8316078	1					
ANR	8317538	PtrMemberAccess	pcs -> raster_state		8316078	0					
ANR	8317539	Identifier	pcs		8316078	0					
ANR	8317540	Identifier	raster_state		8316078	1					
ANR	8317541	Identifier	graphics_mode		8316078	1					
ANR	8317542	CompoundStatement		278:24:12508:12527	8316078	1					
ANR	8317543	IdentifierDeclStatement	const byte * str = p ;	552:24:21800:21819	8316078	0	True				
ANR	8317544	IdentifierDecl	* str = p		8316078	0					
ANR	8317545	IdentifierDeclType	const byte *		8316078	0					
ANR	8317546	Identifier	str		8316078	1					
ANR	8317547	AssignmentExpression	* str = p		8316078	2		=			
ANR	8317548	Identifier	p		8316078	0					
ANR	8317549	Identifier	p		8316078	1					
ANR	8317550	WhileStatement	while ( p < rlimit && p [ 1 ] >= 32 && p [ 1 ] <= 127 )		8316078	1					
ANR	8317551	Condition	p < rlimit && p [ 1 ] >= 32 && p [ 1 ] <= 127	554:31:21853:21891	8316078	0	True				
ANR	8317552	AndExpression	p < rlimit && p [ 1 ] >= 32 && p [ 1 ] <= 127		8316078	0		&&			
ANR	8317553	RelationalExpression	p < rlimit		8316078	0		<			
ANR	8317554	Identifier	p		8316078	0					
ANR	8317555	Identifier	rlimit		8316078	1					
ANR	8317556	AndExpression	p [ 1 ] >= 32 && p [ 1 ] <= 127		8316078	1		&&			
ANR	8317557	RelationalExpression	p [ 1 ] >= 32		8316078	0		>=			
ANR	8317558	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8317559	Identifier	p		8316078	0					
ANR	8317560	PrimaryExpression	1		8316078	1					
ANR	8317561	PrimaryExpression	32		8316078	1					
ANR	8317562	RelationalExpression	p [ 1 ] <= 127		8316078	1		<=			
ANR	8317563	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8317564	Identifier	p		8316078	0					
ANR	8317565	PrimaryExpression	1		8316078	1					
ANR	8317566	PrimaryExpression	127		8316078	1					
ANR	8317567	CompoundStatement		280:72:12602:12602	8316078	1					
ANR	8317568	IfStatement	if ( gs_debug_c ( 'i' ) )		8316078	0					
ANR	8317569	Condition	gs_debug_c ( 'i' )	556:32:21941:21955	8316078	0	True				
ANR	8317570	CallExpression	gs_debug_c ( 'i' )		8316078	0					
ANR	8317571	Callee	gs_debug_c		8316078	0					
ANR	8317572	Identifier	gs_debug_c		8316078	0					
ANR	8317573	ArgumentList	'i'		8316078	1					
ANR	8317574	Argument	'i'		8316078	0					
ANR	8317575	PrimaryExpression	'i'		8316078	0					
ANR	8317576	CompoundStatement		282:49:12666:12666	8316078	1					
ANR	8317577	IfStatement	if ( p == str )		8316078	0					
ANR	8317578	Condition	p == str	557:36:21996:22003	8316078	0	True				
ANR	8317579	EqualityExpression	p == str		8316078	0		==			
ANR	8317580	Identifier	p		8316078	0					
ANR	8317581	Identifier	str		8316078	1					
ANR	8317582	ExpressionStatement	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"	558:36:22042:22089	8316078	1	True				
ANR	8317583	CallExpression	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"		8316078	0					
ANR	8317584	Callee	if_debug1m		8316078	0					
ANR	8317585	Identifier	if_debug1m		8316078	0					
ANR	8317586	ArgumentList	'i'		8316078	1					
ANR	8317587	Argument	'i'		8316078	0					
ANR	8317588	PrimaryExpression	'i'		8316078	0					
ANR	8317589	Argument	pcs -> memory		8316078	1					
ANR	8317590	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317591	Identifier	pcs		8316078	0					
ANR	8317592	Identifier	memory		8316078	1					
ANR	8317593	Argument	"""[i%d] """		8316078	2					
ANR	8317594	PrimaryExpression	"""[i%d] """		8316078	0					
ANR	8317595	Argument	bytelen		8316078	3					
ANR	8317596	Identifier	bytelen		8316078	0					
ANR	8317597	ExpressionStatement	"debug_dump_char ( pcs -> memory , p [ 1 ] )"	559:32:22123:22157	8316078	1	True				
ANR	8317598	CallExpression	"debug_dump_char ( pcs -> memory , p [ 1 ] )"		8316078	0					
ANR	8317599	Callee	debug_dump_char		8316078	0					
ANR	8317600	Identifier	debug_dump_char		8316078	0					
ANR	8317601	ArgumentList	pcs -> memory		8316078	1					
ANR	8317602	Argument	pcs -> memory		8316078	0					
ANR	8317603	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317604	Identifier	pcs		8316078	0					
ANR	8317605	Identifier	memory		8316078	1					
ANR	8317606	Argument	p [ 1 ]		8316078	1					
ANR	8317607	ArrayIndexing	p [ 1 ]		8316078	0					
ANR	8317608	Identifier	p		8316078	0					
ANR	8317609	PrimaryExpression	1		8316078	1					
ANR	8317610	ExpressionStatement	++ p	562:28:22224:22227	8316078	1	True				
ANR	8317611	UnaryExpression	++ p		8316078	0					
ANR	8317612	IncDec	++		8316078	0					
ANR	8317613	Identifier	p		8316078	1					
ANR	8317614	ExpressionStatement	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"	565:24:22280:22314	8316078	2	True				
ANR	8317615	CallExpression	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"		8316078	0					
ANR	8317616	Callee	if_debug0m		8316078	0					
ANR	8317617	Identifier	if_debug0m		8316078	0					
ANR	8317618	ArgumentList	'i'		8316078	1					
ANR	8317619	Argument	'i'		8316078	0					
ANR	8317620	PrimaryExpression	'i'		8316078	0					
ANR	8317621	Argument	pcs -> memory		8316078	1					
ANR	8317622	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317623	Identifier	pcs		8316078	0					
ANR	8317624	Identifier	memory		8316078	1					
ANR	8317625	Argument	"""\\n"""		8316078	2					
ANR	8317626	PrimaryExpression	"""\\n"""		8316078	0					
ANR	8317627	ExpressionStatement	"code = pcl_text ( str , ( uint ) ( p + 1 - str ) , pcs , false )"	566:24:22340:22434	8316078	3	True				
ANR	8317628	AssignmentExpression	"code = pcl_text ( str , ( uint ) ( p + 1 - str ) , pcs , false )"		8316078	0		=			
ANR	8317629	Identifier	code		8316078	0					
ANR	8317630	CallExpression	"pcl_text ( str , ( uint ) ( p + 1 - str ) , pcs , false )"		8316078	1					
ANR	8317631	Callee	pcl_text		8316078	0					
ANR	8317632	Identifier	pcl_text		8316078	0					
ANR	8317633	ArgumentList	str		8316078	1					
ANR	8317634	Argument	str		8316078	0					
ANR	8317635	Identifier	str		8316078	0					
ANR	8317636	Argument	( uint ) ( p + 1 - str )		8316078	1					
ANR	8317637	CastExpression	( uint ) ( p + 1 - str )		8316078	0					
ANR	8317638	CastTarget	uint		8316078	0					
ANR	8317639	AdditiveExpression	p + 1 - str		8316078	1		+			
ANR	8317640	Identifier	p		8316078	0					
ANR	8317641	AdditiveExpression	1 - str		8316078	1		-			
ANR	8317642	PrimaryExpression	1		8316078	0					
ANR	8317643	Identifier	str		8316078	1					
ANR	8317644	Argument	pcs		8316078	2					
ANR	8317645	Identifier	pcs		8316078	0					
ANR	8317646	Argument	false		8316078	3					
ANR	8317647	Identifier	false		8316078	0					
ANR	8317648	IfStatement	if ( code < 0 )		8316078	4					
ANR	8317649	Condition	code < 0	568:28:22464:22471	8316078	0	True				
ANR	8317650	RelationalExpression	code < 0		8316078	0		<			
ANR	8317651	Identifier	code		8316078	0					
ANR	8317652	PrimaryExpression	0		8316078	1					
ANR	8317653	GotoStatement	goto x ;	569:28:22502:22508	8316078	1	True				
ANR	8317654	Identifier	x		8316078	0					
ANR	8317655	ExpressionStatement	cdefn = NULL	570:24:22534:22546	8316078	5	True				
ANR	8317656	AssignmentExpression	cdefn = NULL		8316078	0		=			
ANR	8317657	Identifier	cdefn		8316078	0					
ANR	8317658	Identifier	NULL		8316078	1					
ANR	8317659	ElseStatement	else		8316078	0					
ANR	8317660	CompoundStatement		298:23:13301:13301	8316078	0					
ANR	8317661	IfStatement	if ( p >= rlimit )		8316078	0					
ANR	8317662	Condition	p >= rlimit	573:24:22619:22629	8316078	0	True				
ANR	8317663	RelationalExpression	p >= rlimit		8316078	0		>=			
ANR	8317664	Identifier	p		8316078	0					
ANR	8317665	Identifier	rlimit		8316078	1					
ANR	8317666	CompoundStatement		299:37:13340:13340	8316078	1					
ANR	8317667	ExpressionStatement	-- p	574:24:22658:22661	8316078	0	True				
ANR	8317668	UnaryExpression	-- p		8316078	0					
ANR	8317669	IncDec	--		8316078	0					
ANR	8317670	Identifier	p		8316078	1					
ANR	8317671	GotoStatement	goto x ;	575:24:22687:22693	8316078	1	True				
ANR	8317672	Identifier	x		8316078	0					
ANR	8317673	ExpressionStatement	chr = * ++ p	577:20:22737:22747	8316078	1	True				
ANR	8317674	AssignmentExpression	chr = * ++ p		8316078	0		=			
ANR	8317675	Identifier	chr		8316078	0					
ANR	8317676	UnaryOperationExpression	* ++ p		8316078	1					
ANR	8317677	UnaryOperator	*		8316078	0					
ANR	8317678	UnaryExpression	++ p		8316078	1					
ANR	8317679	IncDec	++		8316078	0					
ANR	8317680	Identifier	p		8316078	1					
ANR	8317681	IfStatement	if ( chr < min_escape_class || chr > max_escape_class )		8316078	2					
ANR	8317682	Condition	chr < min_escape_class || chr > max_escape_class	578:24:22773:22820	8316078	0	True				
ANR	8317683	OrExpression	chr < min_escape_class || chr > max_escape_class		8316078	0		||			
ANR	8317684	RelationalExpression	chr < min_escape_class		8316078	0		<			
ANR	8317685	Identifier	chr		8316078	0					
ANR	8317686	Identifier	min_escape_class		8316078	1					
ANR	8317687	RelationalExpression	chr > max_escape_class		8316078	1		>			
ANR	8317688	Identifier	chr		8316078	0					
ANR	8317689	Identifier	max_escape_class		8316078	1					
ANR	8317690	CompoundStatement		304:74:13531:13531	8316078	1					
ANR	8317691	ExpressionStatement	"cdefn = pcl_get_command_definition ( pst , 0 , 0 , chr )"	579:24:22849:22899	8316078	0	True				
ANR	8317692	AssignmentExpression	"cdefn = pcl_get_command_definition ( pst , 0 , 0 , chr )"		8316078	0		=			
ANR	8317693	Identifier	cdefn		8316078	0					
ANR	8317694	CallExpression	"pcl_get_command_definition ( pst , 0 , 0 , chr )"		8316078	1					
ANR	8317695	Callee	pcl_get_command_definition		8316078	0					
ANR	8317696	Identifier	pcl_get_command_definition		8316078	0					
ANR	8317697	ArgumentList	pst		8316078	1					
ANR	8317698	Argument	pst		8316078	0					
ANR	8317699	Identifier	pst		8316078	0					
ANR	8317700	Argument	0		8316078	1					
ANR	8317701	PrimaryExpression	0		8316078	0					
ANR	8317702	Argument	0		8316078	2					
ANR	8317703	PrimaryExpression	0		8316078	0					
ANR	8317704	Argument	chr		8316078	3					
ANR	8317705	Identifier	chr		8316078	0					
ANR	8317706	IfStatement	if ( ! cdefn )		8316078	1					
ANR	8317707	Condition	! cdefn	580:28:22929:22934	8316078	0	True				
ANR	8317708	UnaryOperationExpression	! cdefn		8316078	0					
ANR	8317709	UnaryOperator	!		8316078	0					
ANR	8317710	Identifier	cdefn		8316078	1					
ANR	8317711	CompoundStatement		306:36:13645:13645	8316078	1					
ANR	8317712	ExpressionStatement	-- p	584:28:23116:23119	8316078	0	True				
ANR	8317713	UnaryExpression	-- p		8316078	0					
ANR	8317714	IncDec	--		8316078	0					
ANR	8317715	Identifier	p		8316078	1					
ANR	8317716	IfStatement	if ( gs_debug_c ( 'i' ) )		8316078	1					
ANR	8317717	Condition	gs_debug_c ( 'i' )	586:32:23166:23180	8316078	0	True				
ANR	8317718	CallExpression	gs_debug_c ( 'i' )		8316078	0					
ANR	8317719	Callee	gs_debug_c		8316078	0					
ANR	8317720	Identifier	gs_debug_c		8316078	0					
ANR	8317721	ArgumentList	'i'		8316078	1					
ANR	8317722	Argument	'i'		8316078	0					
ANR	8317723	PrimaryExpression	'i'		8316078	0					
ANR	8317724	CompoundStatement		312:49:13891:13891	8316078	1					
ANR	8317725	ExpressionStatement	"debug_dump_char ( pcs -> memory , '\\033' )"	587:32:23217:23253	8316078	0	True				
ANR	8317726	CallExpression	"debug_dump_char ( pcs -> memory , '\\033' )"		8316078	0					
ANR	8317727	Callee	debug_dump_char		8316078	0					
ANR	8317728	Identifier	debug_dump_char		8316078	0					
ANR	8317729	ArgumentList	pcs -> memory		8316078	1					
ANR	8317730	Argument	pcs -> memory		8316078	0					
ANR	8317731	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317732	Identifier	pcs		8316078	0					
ANR	8317733	Identifier	memory		8316078	1					
ANR	8317734	Argument	'\\033'		8316078	1					
ANR	8317735	PrimaryExpression	'\\033'		8316078	0					
ANR	8317736	ContinueStatement	continue ;	590:28:23320:23328	8316078	2	True				
ANR	8317737	IfStatement	if ( gs_debug_c ( 'i' ) )		8316078	2					
ANR	8317738	Condition	gs_debug_c ( 'i' )	593:28:23397:23411	8316078	0	True				
ANR	8317739	CallExpression	gs_debug_c ( 'i' )		8316078	0					
ANR	8317740	Callee	gs_debug_c		8316078	0					
ANR	8317741	Identifier	gs_debug_c		8316078	0					
ANR	8317742	ArgumentList	'i'		8316078	1					
ANR	8317743	Argument	'i'		8316078	0					
ANR	8317744	PrimaryExpression	'i'		8316078	0					
ANR	8317745	CompoundStatement		319:45:14122:14122	8316078	1					
ANR	8317746	ExpressionStatement	"dmprintf ( pcs -> memory , ""ESC "" )"	594:28:23444:23473	8316078	0	True				
ANR	8317747	CallExpression	"dmprintf ( pcs -> memory , ""ESC "" )"		8316078	0					
ANR	8317748	Callee	dmprintf		8316078	0					
ANR	8317749	Identifier	dmprintf		8316078	0					
ANR	8317750	ArgumentList	pcs -> memory		8316078	1					
ANR	8317751	Argument	pcs -> memory		8316078	0					
ANR	8317752	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317753	Identifier	pcs		8316078	0					
ANR	8317754	Identifier	memory		8316078	1					
ANR	8317755	Argument	"""ESC """		8316078	1					
ANR	8317756	PrimaryExpression	"""ESC """		8316078	0					
ANR	8317757	ExpressionStatement	"debug_dump_char ( pcs -> memory , chr )"	595:28:23503:23536	8316078	1	True				
ANR	8317758	CallExpression	"debug_dump_char ( pcs -> memory , chr )"		8316078	0					
ANR	8317759	Callee	debug_dump_char		8316078	0					
ANR	8317760	Identifier	debug_dump_char		8316078	0					
ANR	8317761	ArgumentList	pcs -> memory		8316078	1					
ANR	8317762	Argument	pcs -> memory		8316078	0					
ANR	8317763	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317764	Identifier	pcs		8316078	0					
ANR	8317765	Identifier	memory		8316078	1					
ANR	8317766	Argument	chr		8316078	1					
ANR	8317767	Identifier	chr		8316078	0					
ANR	8317768	ExpressionStatement	"dmprintf ( pcs -> memory , ""\\n"" )"	596:28:23566:23593	8316078	2	True				
ANR	8317769	CallExpression	"dmprintf ( pcs -> memory , ""\\n"" )"		8316078	0					
ANR	8317770	Callee	dmprintf		8316078	0					
ANR	8317771	Identifier	dmprintf		8316078	0					
ANR	8317772	ArgumentList	pcs -> memory		8316078	1					
ANR	8317773	Argument	pcs -> memory		8316078	0					
ANR	8317774	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317775	Identifier	pcs		8316078	0					
ANR	8317776	Identifier	memory		8316078	1					
ANR	8317777	Argument	"""\\n"""		8316078	1					
ANR	8317778	PrimaryExpression	"""\\n"""		8316078	0					
ANR	8317779	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"	597:28:23623:23672	8316078	3	True				
ANR	8317780	CallExpression	"dmprintf1 ( pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"		8316078	0					
ANR	8317781	Callee	dmprintf1		8316078	0					
ANR	8317782	Identifier	dmprintf1		8316078	0					
ANR	8317783	ArgumentList	pcs -> memory		8316078	1					
ANR	8317784	Argument	pcs -> memory		8316078	0					
ANR	8317785	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8317786	Identifier	pcs		8316078	0					
ANR	8317787	Identifier	memory		8316078	1					
ANR	8317788	Argument	"""   [%s]\\n"""		8316078	1					
ANR	8317789	PrimaryExpression	"""   [%s]\\n"""		8316078	0					
ANR	8317790	Argument	cdefn -> cname		8316078	2					
ANR	8317791	PtrMemberAccess	cdefn -> cname		8316078	0					
ANR	8317792	Identifier	cdefn		8316078	0					
ANR	8317793	Identifier	cname		8316078	1					
ANR	8317794	ElseStatement	else		8316078	0					
ANR	8317795	CompoundStatement		326:27:14442:14442	8316078	0					
ANR	8317796	IfStatement	if ( p >= rlimit )		8316078	0					
ANR	8317797	Condition	p >= rlimit	601:28:23764:23774	8316078	0	True				
ANR	8317798	RelationalExpression	p >= rlimit		8316078	0		>=			
ANR	8317799	Identifier	p		8316078	0					
ANR	8317800	Identifier	rlimit		8316078	1					
ANR	8317801	CompoundStatement		327:41:14485:14485	8316078	1					
ANR	8317802	ExpressionStatement	p -= 2	602:28:23807:23813	8316078	0	True				
ANR	8317803	AssignmentExpression	p -= 2		8316078	0		-=			
ANR	8317804	Identifier	p		8316078	0					
ANR	8317805	PrimaryExpression	2		8316078	1					
ANR	8317806	GotoStatement	goto x ;	603:28:23843:23849	8316078	1	True				
ANR	8317807	Identifier	x		8316078	0					
ANR	8317808	ExpressionStatement	pst -> param_class = chr	605:24:23901:23923	8316078	1	True				
ANR	8317809	AssignmentExpression	pst -> param_class = chr		8316078	0		=			
ANR	8317810	PtrMemberAccess	pst -> param_class		8316078	0					
ANR	8317811	Identifier	pst		8316078	0					
ANR	8317812	Identifier	param_class		8316078	1					
ANR	8317813	Identifier	chr		8316078	1					
ANR	8317814	ExpressionStatement	chr = * ++ p	606:24:23949:23959	8316078	2	True				
ANR	8317815	AssignmentExpression	chr = * ++ p		8316078	0		=			
ANR	8317816	Identifier	chr		8316078	0					
ANR	8317817	UnaryOperationExpression	* ++ p		8316078	1					
ANR	8317818	UnaryOperator	*		8316078	0					
ANR	8317819	UnaryExpression	++ p		8316078	1					
ANR	8317820	IncDec	++		8316078	0					
ANR	8317821	Identifier	p		8316078	1					
ANR	8317822	IfStatement	if ( chr < min_escape_group || chr > max_escape_group )		8316078	3					
ANR	8317823	Condition	chr < min_escape_group || chr > max_escape_group	607:28:23989:24036	8316078	0	True				
ANR	8317824	OrExpression	chr < min_escape_group || chr > max_escape_group		8316078	0		||			
ANR	8317825	RelationalExpression	chr < min_escape_group		8316078	0		<			
ANR	8317826	Identifier	chr		8316078	0					
ANR	8317827	Identifier	min_escape_group		8316078	1					
ANR	8317828	RelationalExpression	chr > max_escape_group		8316078	1		>			
ANR	8317829	Identifier	chr		8316078	0					
ANR	8317830	Identifier	max_escape_group		8316078	1					
ANR	8317831	CompoundStatement		333:78:14747:14747	8316078	1					
ANR	8317832	ExpressionStatement	-- p	608:28:24094:24097	8316078	0	True				
ANR	8317833	UnaryExpression	-- p		8316078	0					
ANR	8317834	IncDec	--		8316078	0					
ANR	8317835	Identifier	p		8316078	1					
ANR	8317836	ExpressionStatement	chr = 0	609:28:24127:24134	8316078	1	True				
ANR	8317837	AssignmentExpression	chr = 0		8316078	0		=			
ANR	8317838	Identifier	chr		8316078	0					
ANR	8317839	PrimaryExpression	0		8316078	1					
ANR	8317840	ExpressionStatement	pst -> param_group = chr	611:24:24186:24208	8316078	4	True				
ANR	8317841	AssignmentExpression	pst -> param_group = chr		8316078	0		=			
ANR	8317842	PtrMemberAccess	pst -> param_group		8316078	0					
ANR	8317843	Identifier	pst		8316078	0					
ANR	8317844	Identifier	param_group		8316078	1					
ANR	8317845	Identifier	chr		8316078	1					
ANR	8317846	ExpressionStatement	pst -> scan_type = scanning_parameter	612:24:24234:24269	8316078	5	True				
ANR	8317847	AssignmentExpression	pst -> scan_type = scanning_parameter		8316078	0		=			
ANR	8317848	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8317849	Identifier	pst		8316078	0					
ANR	8317850	Identifier	scan_type		8316078	1					
ANR	8317851	Identifier	scanning_parameter		8316078	1					
ANR	8317852	ExpressionStatement	pst -> garbage_in_parameter = false	613:24:24295:24328	8316078	6	True				
ANR	8317853	AssignmentExpression	pst -> garbage_in_parameter = false		8316078	0		=			
ANR	8317854	PtrMemberAccess	pst -> garbage_in_parameter		8316078	0					
ANR	8317855	Identifier	pst		8316078	0					
ANR	8317856	Identifier	garbage_in_parameter		8316078	1					
ANR	8317857	Identifier	false		8316078	1					
ANR	8317858	ExpressionStatement	param_init ( )	614:24:24354:24366	8316078	7	True				
ANR	8317859	CallExpression	param_init ( )		8316078	0					
ANR	8317860	Callee	param_init		8316078	0					
ANR	8317861	Identifier	param_init		8316078	0					
ANR	8317862	ArgumentList			8316078	1					
ANR	8317863	ContinueStatement	continue ;	615:24:24392:24400	8316078	8	True				
ANR	8317864	BreakStatement	break ;	618:16:24458:24463	8316078	20	True				
ANR	8317865	IfStatement	if ( cdefn == NULL )		8316078	3					
ANR	8317866	Condition	cdefn == NULL	620:12:24487:24499	8316078	0	True				
ANR	8317867	EqualityExpression	cdefn == NULL		8316078	0		==			
ANR	8317868	Identifier	cdefn		8316078	0					
ANR	8317869	Identifier	NULL		8316078	1					
ANR	8317870	CompoundStatement		346:27:15210:15210	8316078	1					
ANR	8317871	ExpressionStatement	param_init ( )	621:12:24516:24528	8316078	0	True				
ANR	8317872	CallExpression	param_init ( )		8316078	0					
ANR	8317873	Callee	param_init		8316078	0					
ANR	8317874	Identifier	param_init		8316078	0					
ANR	8317875	ArgumentList			8316078	1					
ANR	8317876	ContinueStatement	continue ;	622:12:24542:24550	8316078	1	True				
ANR	8317877	IfStatement	if ( ! in_macro || ( cdefn -> actions & pca_in_macro ) )		8316078	4					
ANR	8317878	Condition	! in_macro || ( cdefn -> actions & pca_in_macro )	624:12:24574:24617	8316078	0	True				
ANR	8317879	OrExpression	! in_macro || ( cdefn -> actions & pca_in_macro )		8316078	0		||			
ANR	8317880	UnaryOperationExpression	! in_macro		8316078	0					
ANR	8317881	UnaryOperator	!		8316078	0					
ANR	8317882	Identifier	in_macro		8316078	1					
ANR	8317883	BitAndExpression	cdefn -> actions & pca_in_macro		8316078	1		&			
ANR	8317884	PtrMemberAccess	cdefn -> actions		8316078	0					
ANR	8317885	Identifier	cdefn		8316078	0					
ANR	8317886	Identifier	actions		8316078	1					
ANR	8317887	Identifier	pca_in_macro		8316078	1					
ANR	8317888	CompoundStatement		350:58:15328:15328	8316078	1					
ANR	8317889	IfStatement	if ( in_macro )		8316078	0					
ANR	8317890	Condition	in_macro	628:16:24817:24824	8316078	0	True				
ANR	8317891	Identifier	in_macro		8316078	0					
ANR	8317892	CompoundStatement		354:26:15535:15535	8316078	1					
ANR	8317893	ExpressionStatement	"code = append_macro ( macro_p , p , pcs )"	629:16:24845:24881	8316078	0	True				
ANR	8317894	AssignmentExpression	"code = append_macro ( macro_p , p , pcs )"		8316078	0		=			
ANR	8317895	Identifier	code		8316078	0					
ANR	8317896	CallExpression	"append_macro ( macro_p , p , pcs )"		8316078	1					
ANR	8317897	Callee	append_macro		8316078	0					
ANR	8317898	Identifier	append_macro		8316078	0					
ANR	8317899	ArgumentList	macro_p		8316078	1					
ANR	8317900	Argument	macro_p		8316078	0					
ANR	8317901	Identifier	macro_p		8316078	0					
ANR	8317902	Argument	p		8316078	1					
ANR	8317903	Identifier	p		8316078	0					
ANR	8317904	Argument	pcs		8316078	2					
ANR	8317905	Identifier	pcs		8316078	0					
ANR	8317906	ExpressionStatement	macro_p = p	630:16:24899:24910	8316078	1	True				
ANR	8317907	AssignmentExpression	macro_p = p		8316078	0		=			
ANR	8317908	Identifier	macro_p		8316078	0					
ANR	8317909	Identifier	p		8316078	1					
ANR	8317910	IfStatement	if ( code < 0 )		8316078	2					
ANR	8317911	Condition	code < 0	631:20:24932:24939	8316078	0	True				
ANR	8317912	RelationalExpression	code < 0		8316078	0		<			
ANR	8317913	Identifier	code		8316078	0					
ANR	8317914	PrimaryExpression	0		8316078	1					
ANR	8317915	GotoStatement	goto x ;	632:20:24962:24968	8316078	1	True				
ANR	8317916	Identifier	x		8316078	0					
ANR	8317917	ExpressionStatement	pst -> args . command = chr	634:12:24996:25019	8316078	1	True				
ANR	8317918	AssignmentExpression	pst -> args . command = chr		8316078	0		=			
ANR	8317919	MemberAccess	pst -> args . command		8316078	0					
ANR	8317920	PtrMemberAccess	pst -> args		8316078	0					
ANR	8317921	Identifier	pst		8316078	0					
ANR	8317922	Identifier	args		8316078	1					
ANR	8317923	Identifier	command		8316078	1					
ANR	8317924	Identifier	chr		8316078	1					
ANR	8317925	IfStatement	"if ( ! pcs -> raster_state . graphics_mode || ( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0 )"		8316078	2					
ANR	8317926	Condition	"! pcs -> raster_state . graphics_mode || ( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"	635:16:25037:25419	8316078	0	True				
ANR	8317927	OrExpression	"! pcs -> raster_state . graphics_mode || ( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"		8316078	0		||			
ANR	8317928	UnaryOperationExpression	! pcs -> raster_state . graphics_mode		8316078	0					
ANR	8317929	UnaryOperator	!		8316078	0					
ANR	8317930	MemberAccess	pcs -> raster_state . graphics_mode		8316078	1					
ANR	8317931	PtrMemberAccess	pcs -> raster_state		8316078	0					
ANR	8317932	Identifier	pcs		8316078	0					
ANR	8317933	Identifier	raster_state		8316078	1					
ANR	8317934	Identifier	graphics_mode		8316078	1					
ANR	8317935	OrExpression	"( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"		8316078	1		||			
ANR	8317936	BitAndExpression	cdefn -> actions & pca_raster_graphics		8316078	0		&			
ANR	8317937	PtrMemberAccess	cdefn -> actions		8316078	0					
ANR	8317938	Identifier	cdefn		8316078	0					
ANR	8317939	Identifier	actions		8316078	1					
ANR	8317940	Identifier	pca_raster_graphics		8316078	1					
ANR	8317941	RelationalExpression	"( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"		8316078	1		>=			
ANR	8317942	AssignmentExpression	"code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl )"		8316078	0		=			
ANR	8317943	Identifier	code		8316078	0					
ANR	8317944	CallExpression	"pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl )"		8316078	1					
ANR	8317945	Callee	pcl_end_graphics_mode_implicit		8316078	0					
ANR	8317946	Identifier	pcl_end_graphics_mode_implicit		8316078	0					
ANR	8317947	ArgumentList	pcs		8316078	1					
ANR	8317948	Argument	pcs		8316078	0					
ANR	8317949	Identifier	pcs		8316078	0					
ANR	8317950	Argument	cdefn -> actions & pca_dont_lockout_in_rtl		8316078	1					
ANR	8317951	BitAndExpression	cdefn -> actions & pca_dont_lockout_in_rtl		8316078	0		&			
ANR	8317952	PtrMemberAccess	cdefn -> actions		8316078	0					
ANR	8317953	Identifier	cdefn		8316078	0					
ANR	8317954	Identifier	actions		8316078	1					
ANR	8317955	Identifier	pca_dont_lockout_in_rtl		8316078	1					
ANR	8317956	PrimaryExpression	0		8316078	1					
ANR	8317957	CompoundStatement		367:22:16130:16130	8316078	1					
ANR	8317958	IfStatement	if ( ( pcs -> personality != rtl ) || ( ( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl ) ) )		8316078	0					
ANR	8317959	Condition	( pcs -> personality != rtl ) || ( ( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl ) )	642:20:25444:25637	8316078	0	True				
ANR	8317960	OrExpression	( pcs -> personality != rtl ) || ( ( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl ) )		8316078	0		||			
ANR	8317961	EqualityExpression	pcs -> personality != rtl		8316078	0		!=			
ANR	8317962	PtrMemberAccess	pcs -> personality		8316078	0					
ANR	8317963	Identifier	pcs		8316078	0					
ANR	8317964	Identifier	personality		8316078	1					
ANR	8317965	Identifier	rtl		8316078	1					
ANR	8317966	AndExpression	( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl )		8316078	1		&&			
ANR	8317967	EqualityExpression	pcs -> personality == rtl		8316078	0		==			
ANR	8317968	PtrMemberAccess	pcs -> personality		8316078	0					
ANR	8317969	Identifier	pcs		8316078	0					
ANR	8317970	Identifier	personality		8316078	1					
ANR	8317971	Identifier	rtl		8316078	1					
ANR	8317972	BitAndExpression	cdefn -> actions & pca_in_rtl		8316078	1		&			
ANR	8317973	PtrMemberAccess	cdefn -> actions		8316078	0					
ANR	8317974	Identifier	cdefn		8316078	0					
ANR	8317975	Identifier	actions		8316078	1					
ANR	8317976	Identifier	pca_in_rtl		8316078	1					
ANR	8317977	ExpressionStatement	"code = ( * cdefn -> proc ) ( & pst -> args , pcs )"	645:20:25660:25699	8316078	1	True				
ANR	8317978	AssignmentExpression	"code = ( * cdefn -> proc ) ( & pst -> args , pcs )"		8316078	0		=			
ANR	8317979	Identifier	code		8316078	0					
ANR	8317980	CallExpression	"( * cdefn -> proc ) ( & pst -> args , pcs )"		8316078	1					
ANR	8317981	Callee	* cdefn -> proc		8316078	0					
ANR	8317982	UnaryOperationExpression	* cdefn -> proc		8316078	0					
ANR	8317983	UnaryOperator	*		8316078	0					
ANR	8317984	PtrMemberAccess	cdefn -> proc		8316078	1					
ANR	8317985	Identifier	cdefn		8316078	0					
ANR	8317986	Identifier	proc		8316078	1					
ANR	8317987	ArgumentList	& pst -> args		8316078	1					
ANR	8317988	Argument	& pst -> args		8316078	0					
ANR	8317989	UnaryOperationExpression	& pst -> args		8316078	0					
ANR	8317990	UnaryOperator	&		8316078	0					
ANR	8317991	PtrMemberAccess	pst -> args		8316078	1					
ANR	8317992	Identifier	pst		8316078	0					
ANR	8317993	Identifier	args		8316078	1					
ANR	8317994	Argument	pcs		8316078	1					
ANR	8317995	Identifier	pcs		8316078	0					
ANR	8317996	IfStatement	if ( pst -> args . data_on_heap && pst -> args . data )		8316078	3					
ANR	8317997	Condition	pst -> args . data_on_heap && pst -> args . data	652:16:25911:25950	8316078	0	True				
ANR	8317998	AndExpression	pst -> args . data_on_heap && pst -> args . data		8316078	0		&&			
ANR	8317999	MemberAccess	pst -> args . data_on_heap		8316078	0					
ANR	8318000	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318001	Identifier	pst		8316078	0					
ANR	8318002	Identifier	args		8316078	1					
ANR	8318003	Identifier	data_on_heap		8316078	1					
ANR	8318004	MemberAccess	pst -> args . data		8316078	1					
ANR	8318005	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318006	Identifier	pst		8316078	0					
ANR	8318007	Identifier	args		8316078	1					
ANR	8318008	Identifier	data		8316078	1					
ANR	8318009	CompoundStatement		378:58:16661:16661	8316078	1					
ANR	8318010	ExpressionStatement	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"	653:16:25971:26030	8316078	0	True				
ANR	8318011	CallExpression	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"		8316078	0					
ANR	8318012	Callee	gs_free_object		8316078	0					
ANR	8318013	Identifier	gs_free_object		8316078	0					
ANR	8318014	ArgumentList	pcs -> memory		8316078	1					
ANR	8318015	Argument	pcs -> memory		8316078	0					
ANR	8318016	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8318017	Identifier	pcs		8316078	0					
ANR	8318018	Identifier	memory		8316078	1					
ANR	8318019	Argument	pst -> args . data		8316078	1					
ANR	8318020	MemberAccess	pst -> args . data		8316078	0					
ANR	8318021	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318022	Identifier	pst		8316078	0					
ANR	8318023	Identifier	args		8316078	1					
ANR	8318024	Identifier	data		8316078	1					
ANR	8318025	Argument	"""command data"""		8316078	2					
ANR	8318026	PrimaryExpression	"""command data"""		8316078	0					
ANR	8318027	ExpressionStatement	pst -> args . data = 0	654:16:26048:26066	8316078	1	True				
ANR	8318028	AssignmentExpression	pst -> args . data = 0		8316078	0		=			
ANR	8318029	MemberAccess	pst -> args . data		8316078	0					
ANR	8318030	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318031	Identifier	pst		8316078	0					
ANR	8318032	Identifier	args		8316078	1					
ANR	8318033	Identifier	data		8316078	1					
ANR	8318034	PrimaryExpression	0		8316078	1					
ANR	8318035	IfStatement	if ( code == e_Unimplemented )		8316078	4					
ANR	8318036	Condition	code == e_Unimplemented	656:16:26098:26120	8316078	0	True				
ANR	8318037	EqualityExpression	code == e_Unimplemented		8316078	0		==			
ANR	8318038	Identifier	code		8316078	0					
ANR	8318039	Identifier	e_Unimplemented		8316078	1					
ANR	8318040	CompoundStatement		382:41:16831:16831	8316078	1					
ANR	8318041	ExpressionStatement	"if_debug0m ( 'i' , pcs -> memory , ""Unimplemented\\n"" )"	658:16:26166:26213	8316078	0	True				
ANR	8318042	CallExpression	"if_debug0m ( 'i' , pcs -> memory , ""Unimplemented\\n"" )"		8316078	0					
ANR	8318043	Callee	if_debug0m		8316078	0					
ANR	8318044	Identifier	if_debug0m		8316078	0					
ANR	8318045	ArgumentList	'i'		8316078	1					
ANR	8318046	Argument	'i'		8316078	0					
ANR	8318047	PrimaryExpression	'i'		8316078	0					
ANR	8318048	Argument	pcs -> memory		8316078	1					
ANR	8318049	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8318050	Identifier	pcs		8316078	0					
ANR	8318051	Identifier	memory		8316078	1					
ANR	8318052	Argument	"""Unimplemented\\n"""		8316078	2					
ANR	8318053	PrimaryExpression	"""Unimplemented\\n"""		8316078	0					
ANR	8318054	ElseStatement	else		8316078	0					
ANR	8318055	IfStatement	if ( code < 0 )		8316078	0					
ANR	8318056	Condition	code < 0	660:23:26245:26252	8316078	0	True				
ANR	8318057	RelationalExpression	code < 0		8316078	0		<			
ANR	8318058	Identifier	code		8316078	0					
ANR	8318059	PrimaryExpression	0		8316078	1					
ANR	8318060	BreakStatement	break ;	661:16:26271:26276	8316078	1	True				
ANR	8318061	IfStatement	if ( pcs -> display_functions )		8316078	5					
ANR	8318062	Condition	pcs -> display_functions	662:16:26294:26315	8316078	0	True				
ANR	8318063	PtrMemberAccess	pcs -> display_functions		8316078	0					
ANR	8318064	Identifier	pcs		8316078	0					
ANR	8318065	Identifier	display_functions		8316078	1					
ANR	8318066	CompoundStatement		388:40:17026:17026	8316078	1					
ANR	8318067	ExpressionStatement	pst -> scan_type = scanning_display	664:16:26398:26431	8316078	0	True				
ANR	8318068	AssignmentExpression	pst -> scan_type = scanning_display		8316078	0		=			
ANR	8318069	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8318070	Identifier	pst		8316078	0					
ANR	8318071	Identifier	scan_type		8316078	1					
ANR	8318072	Identifier	scanning_display		8316078	1					
ANR	8318073	IfStatement	if ( pcs -> defining_macro && ! in_macro )		8316078	6					
ANR	8318074	Condition	pcs -> defining_macro && ! in_macro	666:16:26463:26494	8316078	0	True				
ANR	8318075	AndExpression	pcs -> defining_macro && ! in_macro		8316078	0		&&			
ANR	8318076	PtrMemberAccess	pcs -> defining_macro		8316078	0					
ANR	8318077	Identifier	pcs		8316078	0					
ANR	8318078	Identifier	defining_macro		8316078	1					
ANR	8318079	UnaryOperationExpression	! in_macro		8316078	1					
ANR	8318080	UnaryOperator	!		8316078	0					
ANR	8318081	Identifier	in_macro		8316078	1					
ANR	8318082	CompoundStatement		392:50:17205:17205	8316078	1					
ANR	8318083	IfStatement	if ( pst -> scan_type != scanning_none )		8316078	0					
ANR	8318084	Condition	pst -> scan_type != scanning_none	668:20:26577:26607	8316078	0	True				
ANR	8318085	EqualityExpression	pst -> scan_type != scanning_none		8316078	0		!=			
ANR	8318086	PtrMemberAccess	pst -> scan_type		8316078	0					
ANR	8318087	Identifier	pst		8316078	0					
ANR	8318088	Identifier	scan_type		8316078	1					
ANR	8318089	Identifier	scanning_none		8316078	1					
ANR	8318090	CompoundStatement		397:27:17498:17536	8316078	1					
ANR	8318091	Statement	static	671:20:26783:26788	8316078	0	True				
ANR	8318092	IdentifierDeclStatement	"const byte macro_prefix [ 4 ] = "" \\033&f"" ;"	671:27:26790:26828	8316078	1	True				
ANR	8318093	IdentifierDecl	"macro_prefix [ 4 ] = "" \\033&f"""		8316078	0					
ANR	8318094	IdentifierDeclType	const byte [ 4 ]		8316078	0					
ANR	8318095	Identifier	macro_prefix		8316078	1					
ANR	8318096	PrimaryExpression	4		8316078	2					
ANR	8318097	AssignmentExpression	"macro_prefix [ 4 ] = "" \\033&f"""		8316078	3		=			
ANR	8318098	Identifier	macro_prefix		8316078	0					
ANR	8318099	PrimaryExpression	""" \\033&f"""		8316078	1					
ANR	8318100	ExpressionStatement	"code = append_macro ( & macro_prefix [ 0 ] , & macro_prefix [ 3 ] , pcs )"	673:20:26851:26911	8316078	2	True				
ANR	8318101	AssignmentExpression	"code = append_macro ( & macro_prefix [ 0 ] , & macro_prefix [ 3 ] , pcs )"		8316078	0		=			
ANR	8318102	Identifier	code		8316078	0					
ANR	8318103	CallExpression	"append_macro ( & macro_prefix [ 0 ] , & macro_prefix [ 3 ] , pcs )"		8316078	1					
ANR	8318104	Callee	append_macro		8316078	0					
ANR	8318105	Identifier	append_macro		8316078	0					
ANR	8318106	ArgumentList	& macro_prefix [ 0 ]		8316078	1					
ANR	8318107	Argument	& macro_prefix [ 0 ]		8316078	0					
ANR	8318108	UnaryOperationExpression	& macro_prefix [ 0 ]		8316078	0					
ANR	8318109	UnaryOperator	&		8316078	0					
ANR	8318110	ArrayIndexing	macro_prefix [ 0 ]		8316078	1					
ANR	8318111	Identifier	macro_prefix		8316078	0					
ANR	8318112	PrimaryExpression	0		8316078	1					
ANR	8318113	Argument	& macro_prefix [ 3 ]		8316078	1					
ANR	8318114	UnaryOperationExpression	& macro_prefix [ 3 ]		8316078	0					
ANR	8318115	UnaryOperator	&		8316078	0					
ANR	8318116	ArrayIndexing	macro_prefix [ 3 ]		8316078	1					
ANR	8318117	Identifier	macro_prefix		8316078	0					
ANR	8318118	PrimaryExpression	3		8316078	1					
ANR	8318119	Argument	pcs		8316078	2					
ANR	8318120	Identifier	pcs		8316078	0					
ANR	8318121	IfStatement	if ( code < 0 )		8316078	3					
ANR	8318122	Condition	code < 0	674:24:26937:26944	8316078	0	True				
ANR	8318123	RelationalExpression	code < 0		8316078	0		<			
ANR	8318124	Identifier	code		8316078	0					
ANR	8318125	PrimaryExpression	0		8316078	1					
ANR	8318126	GotoStatement	goto x ;	675:24:26971:26977	8316078	1	True				
ANR	8318127	Identifier	x		8316078	0					
ANR	8318128	ExpressionStatement	macro_p = p	677:16:27013:27024	8316078	1	True				
ANR	8318129	AssignmentExpression	macro_p = p		8316078	0		=			
ANR	8318130	Identifier	macro_p		8316078	0					
ANR	8318131	Identifier	p		8316078	1					
ANR	8318132	ExpressionStatement	in_macro = pcs -> defining_macro	679:12:27052:27082	8316078	7	True				
ANR	8318133	AssignmentExpression	in_macro = pcs -> defining_macro		8316078	0		=			
ANR	8318134	Identifier	in_macro		8316078	0					
ANR	8318135	PtrMemberAccess	pcs -> defining_macro		8316078	1					
ANR	8318136	Identifier	pcs		8316078	0					
ANR	8318137	Identifier	defining_macro		8316078	1					
ANR	8318138	ElseStatement	else		8316078	0					
ANR	8318139	CompoundStatement		406:15:17807:17807	8316078	0					
ANR	8318140	IfStatement	if ( pst -> args . data_on_heap && pst -> args . data )		8316078	0					
ANR	8318141	Condition	pst -> args . data_on_heap && pst -> args . data	685:16:27234:27273	8316078	0	True				
ANR	8318142	AndExpression	pst -> args . data_on_heap && pst -> args . data		8316078	0		&&			
ANR	8318143	MemberAccess	pst -> args . data_on_heap		8316078	0					
ANR	8318144	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318145	Identifier	pst		8316078	0					
ANR	8318146	Identifier	args		8316078	1					
ANR	8318147	Identifier	data_on_heap		8316078	1					
ANR	8318148	MemberAccess	pst -> args . data		8316078	1					
ANR	8318149	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318150	Identifier	pst		8316078	0					
ANR	8318151	Identifier	args		8316078	1					
ANR	8318152	Identifier	data		8316078	1					
ANR	8318153	CompoundStatement		411:58:17984:17984	8316078	1					
ANR	8318154	ExpressionStatement	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"	686:16:27294:27353	8316078	0	True				
ANR	8318155	CallExpression	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"		8316078	0					
ANR	8318156	Callee	gs_free_object		8316078	0					
ANR	8318157	Identifier	gs_free_object		8316078	0					
ANR	8318158	ArgumentList	pcs -> memory		8316078	1					
ANR	8318159	Argument	pcs -> memory		8316078	0					
ANR	8318160	PtrMemberAccess	pcs -> memory		8316078	0					
ANR	8318161	Identifier	pcs		8316078	0					
ANR	8318162	Identifier	memory		8316078	1					
ANR	8318163	Argument	pst -> args . data		8316078	1					
ANR	8318164	MemberAccess	pst -> args . data		8316078	0					
ANR	8318165	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318166	Identifier	pst		8316078	0					
ANR	8318167	Identifier	args		8316078	1					
ANR	8318168	Identifier	data		8316078	1					
ANR	8318169	Argument	"""command data"""		8316078	2					
ANR	8318170	PrimaryExpression	"""command data"""		8316078	0					
ANR	8318171	ExpressionStatement	pst -> args . data = 0	687:16:27371:27389	8316078	1	True				
ANR	8318172	AssignmentExpression	pst -> args . data = 0		8316078	0		=			
ANR	8318173	MemberAccess	pst -> args . data		8316078	0					
ANR	8318174	PtrMemberAccess	pst -> args		8316078	0					
ANR	8318175	Identifier	pst		8316078	0					
ANR	8318176	Identifier	args		8316078	1					
ANR	8318177	Identifier	data		8316078	1					
ANR	8318178	PrimaryExpression	0		8316078	1					
ANR	8318179	ExpressionStatement	param_init ( )	690:8:27423:27435	8316078	5	True				
ANR	8318180	CallExpression	param_init ( )		8316078	0					
ANR	8318181	Callee	param_init		8316078	0					
ANR	8318182	Identifier	param_init		8316078	0					
ANR	8318183	ArgumentList			8316078	1					
ANR	8318184	Label	x :	692:2:27445:27446	8316078	36	True				
ANR	8318185	Identifier	x		8316078	0					
ANR	8318186	ExpressionStatement	pr -> ptr = p	692:4:27447:27458	8316078	37	True				
ANR	8318187	AssignmentExpression	pr -> ptr = p		8316078	0		=			
ANR	8318188	PtrMemberAccess	pr -> ptr		8316078	0					
ANR	8318189	Identifier	pr		8316078	0					
ANR	8318190	Identifier	ptr		8316078	1					
ANR	8318191	Identifier	p		8316078	1					
ANR	8318192	IfStatement	if ( in_macro )		8316078	38					
ANR	8318193	Condition	in_macro	694:8:27533:27540	8316078	0	True				
ANR	8318194	Identifier	in_macro		8316078	0					
ANR	8318195	CompoundStatement		421:8:18261:18302	8316078	1					
ANR	8318196	IdentifierDeclStatement	"int mcode = append_macro ( macro_p , p , pcs ) ;"	695:8:27553:27594	8316078	0	True				
ANR	8318197	IdentifierDecl	"mcode = append_macro ( macro_p , p , pcs )"		8316078	0					
ANR	8318198	IdentifierDeclType	int		8316078	0					
ANR	8318199	Identifier	mcode		8316078	1					
ANR	8318200	AssignmentExpression	"mcode = append_macro ( macro_p , p , pcs )"		8316078	2		=			
ANR	8318201	Identifier	mcode		8316078	0					
ANR	8318202	CallExpression	"append_macro ( macro_p , p , pcs )"		8316078	1					
ANR	8318203	Callee	append_macro		8316078	0					
ANR	8318204	Identifier	append_macro		8316078	0					
ANR	8318205	ArgumentList	macro_p		8316078	1					
ANR	8318206	Argument	macro_p		8316078	0					
ANR	8318207	Identifier	macro_p		8316078	0					
ANR	8318208	Argument	p		8316078	1					
ANR	8318209	Identifier	p		8316078	0					
ANR	8318210	Argument	pcs		8316078	2					
ANR	8318211	Identifier	pcs		8316078	0					
ANR	8318212	IfStatement	if ( mcode < 0 && code >= 0 )		8316078	1					
ANR	8318213	Condition	mcode < 0 && code >= 0	697:12:27609:27630	8316078	0	True				
ANR	8318214	AndExpression	mcode < 0 && code >= 0		8316078	0		&&			
ANR	8318215	RelationalExpression	mcode < 0		8316078	0		<			
ANR	8318216	Identifier	mcode		8316078	0					
ANR	8318217	PrimaryExpression	0		8316078	1					
ANR	8318218	RelationalExpression	code >= 0		8316078	1		>=			
ANR	8318219	Identifier	code		8316078	0					
ANR	8318220	PrimaryExpression	0		8316078	1					
ANR	8318221	ExpressionStatement	code = mcode	698:12:27645:27657	8316078	1	True				
ANR	8318222	AssignmentExpression	code = mcode		8316078	0		=			
ANR	8318223	Identifier	code		8316078	0					
ANR	8318224	Identifier	mcode		8316078	1					
ANR	8318225	ReturnStatement	return code ;	700:4:27669:27680	8316078	39	True				
ANR	8318226	Identifier	code		8316078	0					
ANR	8318227	ReturnType	int		8316078	1					
ANR	8318228	Identifier	pcl_process		8316078	2					
ANR	8318229	ParameterList	"pcl_parser_state_t * pst , pcl_state_t * pcs , stream_cursor_read * pr"		8316078	3					
ANR	8318230	Parameter	pcl_parser_state_t * pst	273:12:9209:9232	8316078	0	True				
ANR	8318231	ParameterType	pcl_parser_state_t *		8316078	0					
ANR	8318232	Identifier	pst		8316078	1					
ANR	8318233	Parameter	pcl_state_t * pcs	273:38:9235:9251	8316078	1	True				
ANR	8318234	ParameterType	pcl_state_t *		8316078	0					
ANR	8318235	Identifier	pcs		8316078	1					
ANR	8318236	Parameter	stream_cursor_read * pr	274:12:9266:9288	8316078	2	True				
ANR	8318237	ParameterType	stream_cursor_read *		8316078	0					
ANR	8318238	Identifier	pr		8316078	1					
ANR	8318239	CFGEntryNode	ENTRY		8316078		True				
ANR	8318240	CFGExitNode	EXIT		8316078		True				
ANR	8318241	InfiniteForNode	true		8316078		True				
ANR	8318242	Symbol	e_Unimplemented		8316078						
ANR	8318243	Symbol	pr		8316078						
ANR	8318244	Symbol	pst -> args . data_on_heap		8316078						
ANR	8318245	Symbol	* index		8316078						
ANR	8318246	Symbol	pst -> garbage_in_parameter		8316078						
ANR	8318247	Symbol	value_is_present		8316078						
ANR	8318248	Symbol	pcv_float		8316078						
ANR	8318249	Symbol	scanning_display		8316078						
ANR	8318250	Symbol	* * pst -> definitions -> pcl_command_list		8316078						
ANR	8318251	Symbol	pcs -> memory		8316078						
ANR	8318252	Symbol	pst -> args . command		8316078						
ANR	8318253	Symbol	append_macro		8316078						
ANR	8318254	Symbol	pca_dont_lockout_in_rtl		8316078						
ANR	8318255	Symbol	rlimit		8316078						
ANR	8318256	Symbol	bytelen		8316078						
ANR	8318257	Symbol	max_escape_class		8316078						
ANR	8318258	Symbol	pst -> definitions -> pcl_command_list [ index ] -> proc		8316078						
ANR	8318259	Symbol	pca_in_rtl		8316078						
ANR	8318260	Symbol	max_escape_2char		8316078						
ANR	8318261	Symbol	* * pst -> definitions -> pcl_control_command_indices		8316078						
ANR	8318262	Symbol	index		8316078						
ANR	8318263	Symbol	* ( p + 1 )		8316078						
ANR	8318264	Symbol	* * * * pst		8316078						
ANR	8318265	Symbol	cdefn -> cname		8316078						
ANR	8318266	Symbol	avalue . fraction		8316078						
ANR	8318267	Symbol	str		8316078						
ANR	8318268	Symbol	pcl_get_command_definition		8316078						
ANR	8318269	Symbol	pst -> scale		8316078						
ANR	8318270	Symbol	pcl_end_graphics_mode_implicit		8316078						
ANR	8318271	Symbol	do_display_functions		8316078						
ANR	8318272	Symbol	pcl_do_LF		8316078						
ANR	8318273	Symbol	pst -> definitions -> pcl_control_command_indices		8316078						
ANR	8318274	Symbol	pcv_none		8316078						
ANR	8318275	Symbol	value_is_neg		8316078						
ANR	8318276	Symbol	pcl_char_bytelen		8316078						
ANR	8318277	Symbol	cdefn		8316078						
ANR	8318278	Symbol	* * * pst		8316078						
ANR	8318279	Symbol	min_escape_class		8316078						
ANR	8318280	Symbol	min		8316078						
ANR	8318281	Symbol	ESC		8316078						
ANR	8318282	Symbol	pos		8316078						
ANR	8318283	Symbol	e_Memory		8316078						
ANR	8318284	Symbol	copy		8316078						
ANR	8318285	Symbol	* * p		8316078						
ANR	8318286	Symbol	& args		8316078						
ANR	8318287	Symbol	avail		8316078						
ANR	8318288	Symbol	pcv_neg		8316078						
ANR	8318289	Symbol	cdefn -> actions		8316078						
ANR	8318290	Symbol	* ++ p		8316078						
ANR	8318291	Symbol	* ( p + 2 )		8316078						
ANR	8318292	Symbol	cdefn -> proc		8316078						
ANR	8318293	Symbol	pcs -> parse_data		8316078						
ANR	8318294	Symbol	rtl		8316078						
ANR	8318295	Symbol	uint_arg		8316078						
ANR	8318296	Symbol	max_escape_group		8316078						
ANR	8318297	Symbol	CR		8316078						
ANR	8318298	Symbol	p		8316078						
ANR	8318299	Symbol	scanning_parameter		8316078						
ANR	8318300	Symbol	* cdefn		8316078						
ANR	8318301	Symbol	pca_in_macro		8316078						
ANR	8318302	Symbol	* pst -> definitions		8316078						
ANR	8318303	Symbol	pca_raster_graphics		8316078						
ANR	8318304	Symbol	value_is_float		8316078						
ANR	8318305	Symbol	value_is_signed		8316078						
ANR	8318306	Symbol	pcl_disable_display_functions		8316078						
ANR	8318307	Symbol	* * chr		8316078						
ANR	8318308	Symbol	avalue		8316078						
ANR	8318309	Symbol	min_escape_2char		8316078						
ANR	8318310	Symbol	macro_p		8316078						
ANR	8318311	Symbol	* pcs		8316078						
ANR	8318312	Symbol	pr -> limit		8316078						
ANR	8318313	Symbol	pst -> param_class		8316078						
ANR	8318314	Symbol	& avalue		8316078						
ANR	8318315	Symbol	min_escape_group		8316078						
ANR	8318316	Symbol	pcs -> defining_macro		8316078						
ANR	8318317	Symbol	* pcs -> parse_other		8316078						
ANR	8318318	Symbol	avalue . i		8316078						
ANR	8318319	Symbol	pst -> data_pos		8316078						
ANR	8318320	Symbol	pcl_adjust_arg		8316078						
ANR	8318321	Symbol	gs_debug_c		8316078						
ANR	8318322	Symbol	pcl_text		8316078						
ANR	8318323	Symbol	pr -> ptr		8316078						
ANR	8318324	Symbol	max_escape_command		8316078						
ANR	8318325	Symbol	pcs -> raster_state . graphics_mode		8316078						
ANR	8318326	Symbol	in_macro		8316078						
ANR	8318327	Symbol	pcs -> personality		8316078						
ANR	8318328	Symbol	scanning_none		8316078						
ANR	8318329	Symbol	NULL		8316078						
ANR	8318330	Symbol	* * pst		8316078						
ANR	8318331	Symbol	count		8316078						
ANR	8318332	Symbol	* pr		8316078						
ANR	8318333	Symbol	* cdefn -> proc		8316078						
ANR	8318334	Symbol	chr		8316078						
ANR	8318335	Symbol	pcv_pos		8316078						
ANR	8318336	Symbol	& pst -> args		8316078						
ANR	8318337	Symbol	pcl_plain_char		8316078						
ANR	8318338	Symbol	* * pcs		8316078						
ANR	8318339	Symbol	* * pst -> definitions		8316078						
ANR	8318340	Symbol	macro_prefix		8316078						
ANR	8318341	Symbol	true		8316078						
ANR	8318342	Symbol	pcs -> display_functions		8316078						
ANR	8318343	Symbol	pst -> definitions -> pcl_escape_command_indices		8316078						
ANR	8318344	Symbol	* pst -> definitions -> pcl_command_list		8316078						
ANR	8318345	Symbol	* pst		8316078						
ANR	8318346	Symbol	pst -> scan_type		8316078						
ANR	8318347	Symbol	pcs -> text_parsing_method		8316078						
ANR	8318348	Symbol	code		8316078						
ANR	8318349	Symbol	* pst -> definitions -> pcl_control_command_indices		8316078						
ANR	8318350	Symbol	pcv_int		8316078						
ANR	8318351	Symbol	pst -> param_group		8316078						
ANR	8318352	Symbol	pst		8316078						
ANR	8318353	Symbol	avalue . type		8316078						
ANR	8318354	Symbol	scanning_data		8316078						
ANR	8318355	Symbol	* * index		8316078						
ANR	8318356	Symbol	pcs		8316078						
ANR	8318357	Symbol	pst -> short_hand		8316078						
ANR	8318358	Symbol	gs_alloc_bytes		8316078						
ANR	8318359	Symbol	* * cdefn		8316078						
ANR	8318360	Symbol	rtl_enter_hpgl_mode		8316078						
ANR	8318361	Symbol	pst -> args . data		8316078						
ANR	8318362	Symbol	false		8316078						
ANR	8318363	Symbol	* chr		8316078						
ANR	8318364	Symbol	min_escape_command		8316078						
ANR	8318365	Symbol	* * * pst -> definitions		8316078						
ANR	8318366	Symbol	pcs -> raster_state		8316078						
ANR	8318367	Symbol	args		8316078						
ANR	8318368	Symbol	pst -> definitions		8316078						
ANR	8318369	Symbol	* min_escape_2char		8316078						
ANR	8318370	Symbol	gs_note_error		8316078						
ANR	8318371	Symbol	pst -> args		8316078						
ANR	8318372	Symbol	mcode		8316078						
ANR	8318373	Symbol	pca_byte_data		8316078						
ANR	8318374	Symbol	pst -> definitions -> pcl_command_list		8316078						
ANR	8318375	Symbol	* p		8316078						
ANR	8318376	Symbol	* pst -> definitions -> pcl_escape_command_indices		8316078						
ANR	8318377	Symbol	pcs -> parse_other		8316078						
ANR	8318378	Function	pcl_init_command_index	704:0:27724:28769							
ANR	8318379	FunctionDef	"pcl_init_command_index (pcl_parser_state_t * pcl_parser_state , pcl_state_t * pcs)"		8318378	0					
ANR	8318380	CompoundStatement		707:0:27832:28769	8318378	0					
ANR	8318381	IdentifierDeclStatement	"pcl_command_definitions_t * definitions = ( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" ) ;"	708:4:27838:28165	8318378	0	True				
ANR	8318382	IdentifierDecl	"* definitions = ( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8318378	0					
ANR	8318383	IdentifierDeclType	pcl_command_definitions_t *		8318378	0					
ANR	8318384	Identifier	definitions		8318378	1					
ANR	8318385	AssignmentExpression	"* definitions = ( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8318378	2		=			
ANR	8318386	Identifier	definitions		8318378	0					
ANR	8318387	CastExpression	"( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8318378	1					
ANR	8318388	CastTarget	pcl_command_definitions_t *		8318378	0					
ANR	8318389	CallExpression	"gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8318378	1					
ANR	8318390	Callee	gs_alloc_bytes		8318378	0					
ANR	8318391	Identifier	gs_alloc_bytes		8318378	0					
ANR	8318392	ArgumentList	pcs -> memory		8318378	1					
ANR	8318393	Argument	pcs -> memory		8318378	0					
ANR	8318394	PtrMemberAccess	pcs -> memory		8318378	0					
ANR	8318395	Identifier	pcs		8318378	0					
ANR	8318396	Identifier	memory		8318378	1					
ANR	8318397	Argument	sizeof ( pcl_command_definitions_t )		8318378	1					
ANR	8318398	SizeofExpression	sizeof ( pcl_command_definitions_t )		8318378	0					
ANR	8318399	Sizeof	sizeof		8318378	0					
ANR	8318400	SizeofOperand	pcl_command_definitions_t		8318378	1					
ANR	8318401	Argument	"""pcl_init_command_index"""		8318378	2					
ANR	8318402	PrimaryExpression	"""pcl_init_command_index"""		8318378	0					
ANR	8318403	IfStatement	if ( definitions == 0 )		8318378	1					
ANR	8318404	Condition	definitions == 0	715:8:28192:28207	8318378	0	True				
ANR	8318405	EqualityExpression	definitions == 0		8318378	0		==			
ANR	8318406	Identifier	definitions		8318378	0					
ANR	8318407	PrimaryExpression	0		8318378	1					
ANR	8318408	ReturnStatement	return - 1 ;	716:8:28218:28227	8318378	1	True				
ANR	8318409	UnaryOperationExpression	- 1		8318378	0					
ANR	8318410	UnaryOperator	-		8318378	0					
ANR	8318411	PrimaryExpression	1		8318378	1					
ANR	8318412	ExpressionStatement	"memset ( definitions , 0 , sizeof ( pcl_command_definitions_t ) )"	719:4:28330:28387	8318378	2	True				
ANR	8318413	CallExpression	"memset ( definitions , 0 , sizeof ( pcl_command_definitions_t ) )"		8318378	0					
ANR	8318414	Callee	memset		8318378	0					
ANR	8318415	Identifier	memset		8318378	0					
ANR	8318416	ArgumentList	definitions		8318378	1					
ANR	8318417	Argument	definitions		8318378	0					
ANR	8318418	Identifier	definitions		8318378	0					
ANR	8318419	Argument	0		8318378	1					
ANR	8318420	PrimaryExpression	0		8318378	0					
ANR	8318421	Argument	sizeof ( pcl_command_definitions_t )		8318378	2					
ANR	8318422	SizeofExpression	sizeof ( pcl_command_definitions_t )		8318378	0					
ANR	8318423	Sizeof	sizeof		8318378	0					
ANR	8318424	SizeofOperand	pcl_command_definitions_t		8318378	1					
ANR	8318425	ExpressionStatement	pcs -> pcl_commands = pcl_parser_state -> definitions = definitions	725:4:28690:28753	8318378	3	True				
ANR	8318426	AssignmentExpression	pcs -> pcl_commands = pcl_parser_state -> definitions = definitions		8318378	0		=			
ANR	8318427	PtrMemberAccess	pcs -> pcl_commands		8318378	0					
ANR	8318428	Identifier	pcs		8318378	0					
ANR	8318429	Identifier	pcl_commands		8318378	1					
ANR	8318430	AssignmentExpression	pcl_parser_state -> definitions = definitions		8318378	1		=			
ANR	8318431	PtrMemberAccess	pcl_parser_state -> definitions		8318378	0					
ANR	8318432	Identifier	pcl_parser_state		8318378	0					
ANR	8318433	Identifier	definitions		8318378	1					
ANR	8318434	Identifier	definitions		8318378	1					
ANR	8318435	ReturnStatement	return 0 ;	726:4:28759:28767	8318378	4	True				
ANR	8318436	PrimaryExpression	0		8318378	0					
ANR	8318437	ReturnType	int		8318378	1					
ANR	8318438	Identifier	pcl_init_command_index		8318378	2					
ANR	8318439	ParameterList	"pcl_parser_state_t * pcl_parser_state , pcl_state_t * pcs"		8318378	3					
ANR	8318440	Parameter	pcl_parser_state_t * pcl_parser_state	705:23:27751:27787	8318378	0	True				
ANR	8318441	ParameterType	pcl_parser_state_t *		8318378	0					
ANR	8318442	Identifier	pcl_parser_state		8318378	1					
ANR	8318443	Parameter	pcl_state_t * pcs	706:23:27813:27829	8318378	1	True				
ANR	8318444	ParameterType	pcl_state_t *		8318378	0					
ANR	8318445	Identifier	pcs		8318378	1					
ANR	8318446	CFGEntryNode	ENTRY		8318378		True				
ANR	8318447	CFGExitNode	EXIT		8318378		True				
ANR	8318448	Symbol	* pcl_parser_state		8318378						
ANR	8318449	Symbol	pcs		8318378						
ANR	8318450	Symbol	gs_alloc_bytes		8318378						
ANR	8318451	Symbol	pcs -> pcl_commands		8318378						
ANR	8318452	Symbol	pcl_parser_state		8318378						
ANR	8318453	Symbol	pcs -> memory		8318378						
ANR	8318454	Symbol	* pcs		8318378						
ANR	8318455	Symbol	definitions		8318378						
ANR	8318456	Symbol	pcl_parser_state -> definitions		8318378						
ANR	8318457	Function	pcl_parser_shutdown	730:0:28849:29026							
ANR	8318458	FunctionDef	"pcl_parser_shutdown (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8318457	0					
ANR	8318459	CompoundStatement		732:0:28931:29026	8318457	0					
ANR	8318460	ExpressionStatement	"gs_free_object ( mem , pcl_parser_state -> definitions , ""pcl_parser_shutdown"" )"	733:4:28937:29010	8318457	0	True				
ANR	8318461	CallExpression	"gs_free_object ( mem , pcl_parser_state -> definitions , ""pcl_parser_shutdown"" )"		8318457	0					
ANR	8318462	Callee	gs_free_object		8318457	0					
ANR	8318463	Identifier	gs_free_object		8318457	0					
ANR	8318464	ArgumentList	mem		8318457	1					
ANR	8318465	Argument	mem		8318457	0					
ANR	8318466	Identifier	mem		8318457	0					
ANR	8318467	Argument	pcl_parser_state -> definitions		8318457	1					
ANR	8318468	PtrMemberAccess	pcl_parser_state -> definitions		8318457	0					
ANR	8318469	Identifier	pcl_parser_state		8318457	0					
ANR	8318470	Identifier	definitions		8318457	1					
ANR	8318471	Argument	"""pcl_parser_shutdown"""		8318457	2					
ANR	8318472	PrimaryExpression	"""pcl_parser_shutdown"""		8318457	0					
ANR	8318473	ReturnStatement	return 0 ;	734:4:29016:29024	8318457	1	True				
ANR	8318474	PrimaryExpression	0		8318457	0					
ANR	8318475	ReturnType	int		8318457	1					
ANR	8318476	Identifier	pcl_parser_shutdown		8318457	2					
ANR	8318477	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8318457	3					
ANR	8318478	Parameter	pcl_parser_state_t * pcl_parser_state	731:20:28873:28909	8318457	0	True				
ANR	8318479	ParameterType	pcl_parser_state_t *		8318457	0					
ANR	8318480	Identifier	pcl_parser_state		8318457	1					
ANR	8318481	Parameter	gs_memory_t * mem	731:59:28912:28928	8318457	1	True				
ANR	8318482	ParameterType	gs_memory_t *		8318457	0					
ANR	8318483	Identifier	mem		8318457	1					
ANR	8318484	CFGEntryNode	ENTRY		8318457		True				
ANR	8318485	CFGExitNode	EXIT		8318457		True				
ANR	8318486	Symbol	* pcl_parser_state		8318457						
ANR	8318487	Symbol	mem		8318457						
ANR	8318488	Symbol	pcl_parser_state		8318457						
ANR	8318489	Symbol	pcl_parser_state -> definitions		8318457						
ANR	8318490	Function	pcparse_do_reset	738:0:29084:29250							
ANR	8318491	FunctionDef	"pcparse_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8318490	0					
ANR	8318492	CompoundStatement		740:0:29147:29250	8318490	0					
ANR	8318493	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer ) )		8318490	0					
ANR	8318494	Condition	type & ( pcl_reset_initial | pcl_reset_printer )	741:8:29157:29202	8318490	0	True				
ANR	8318495	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer )		8318490	0		&			
ANR	8318496	Identifier	type		8318490	0					
ANR	8318497	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer		8318490	1		|			
ANR	8318498	Identifier	pcl_reset_initial		8318490	0					
ANR	8318499	Identifier	pcl_reset_printer		8318490	1					
ANR	8318500	ExpressionStatement	pcs -> parse_other = 0	742:8:29213:29233	8318490	1	True				
ANR	8318501	AssignmentExpression	pcs -> parse_other = 0		8318490	0		=			
ANR	8318502	PtrMemberAccess	pcs -> parse_other		8318490	0					
ANR	8318503	Identifier	pcs		8318490	0					
ANR	8318504	Identifier	parse_other		8318490	1					
ANR	8318505	PrimaryExpression	0		8318490	1					
ANR	8318506	ReturnStatement	return 0 ;	744:4:29240:29248	8318490	1	True				
ANR	8318507	PrimaryExpression	0		8318490	0					
ANR	8318508	ReturnType	int		8318490	1					
ANR	8318509	Identifier	pcparse_do_reset		8318490	2					
ANR	8318510	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8318490	3					
ANR	8318511	Parameter	pcl_state_t * pcs	739:17:29105:29121	8318490	0	True				
ANR	8318512	ParameterType	pcl_state_t *		8318490	0					
ANR	8318513	Identifier	pcs		8318490	1					
ANR	8318514	Parameter	pcl_reset_type_t type	739:36:29124:29144	8318490	1	True				
ANR	8318515	ParameterType	pcl_reset_type_t		8318490	0					
ANR	8318516	Identifier	type		8318490	1					
ANR	8318517	CFGEntryNode	ENTRY		8318490		True				
ANR	8318518	CFGExitNode	EXIT		8318490		True				
ANR	8318519	Symbol	pcs		8318490						
ANR	8318520	Symbol	pcl_reset_printer		8318490						
ANR	8318521	Symbol	* pcs		8318490						
ANR	8318522	Symbol	type		8318490						
ANR	8318523	Symbol	pcl_reset_initial		8318490						
ANR	8318524	Symbol	pcs -> parse_other		8318490						
ANR	8318525	DeclStmt									
ANR	8318526	Decl							const pcl_init_t	const pcl_init_t	pcparse_init
