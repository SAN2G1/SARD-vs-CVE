command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2298509	File	data/converged/CVE-2018-16863_ghostpdl/cups_libs_filter_rastertoepson.c								
ANR	2298510	DeclStmt									
ANR	2298511	Decl							unsigned char	unsigned char * [ 6 ]	Planes
ANR	2298512	Decl							unsigned char	unsigned char *	CompBuffer
ANR	2298513	Decl							unsigned char	unsigned char * [ 2 ]	LineBuffers
ANR	2298514	DeclStmt									
ANR	2298515	Decl							int	int	Model
ANR	2298516	Decl							int	int	NumPlanes
ANR	2298517	Decl							int	int	Feed
ANR	2298518	Decl							int	int	EjectPage
ANR	2298519	DeclStmt									
ANR	2298520	Decl							int	int	DotBit
ANR	2298521	Decl							int	int	DotBytes
ANR	2298522	Decl							int	int	DotColumns
ANR	2298523	Decl							int	int	LineCount
ANR	2298524	Decl							int	int	EvenOffset
ANR	2298525	Decl							int	int	OddOffset
ANR	2298526	Decl							int	int	Shingling
ANR	2298527	Decl							int	int	Canceled
ANR	2298528	DeclStmt									
ANR	2298529	Decl							void	void ( void )	Setup
ANR	2298530	DeclStmt									
ANR	2298531	Decl							void	"void ( const ppd_file_t * ppd , const cups_page_header2_t * header )"	StartPage
ANR	2298532	DeclStmt									
ANR	2298533	Decl							void	void ( const cups_page_header2_t * header )	EndPage
ANR	2298534	DeclStmt									
ANR	2298535	Decl							void	void ( void )	Shutdown
ANR	2298536	DeclStmt									
ANR	2298537	Decl							void	void ( int sig )	CancelJob
ANR	2298538	DeclStmt									
ANR	2298539	Decl							void	"void ( const unsigned char * line , int length , int plane , int type , int xstep , int ystep )"	CompressData
ANR	2298540	DeclStmt									
ANR	2298541	Decl							void	void ( const cups_page_header2_t * header )	OutputLine
ANR	2298542	DeclStmt									
ANR	2298543	Decl							void	"void ( const cups_page_header2_t * header , int row )"	OutputRows
ANR	2298544	Function	Setup	102:0:2670:3074							
ANR	2298545	FunctionDef	Setup ()		2298544	0					
ANR	2298546	CompoundStatement		104:0:2687:3074	2298544	0					
ANR	2298547	IdentifierDeclStatement	const char * device_uri ;	105:2:2691:2713	2298544	0	True				
ANR	2298548	IdentifierDecl	* device_uri		2298544	0					
ANR	2298549	IdentifierDeclType	const char *		2298544	0					
ANR	2298550	Identifier	device_uri		2298544	1					
ANR	2298551	IfStatement	"if ( ( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL && strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR )"		2298544	1					
ANR	2298552	Condition	"( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL && strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR"	113:6:2890:3002	2298544	0	True				
ANR	2298553	AndExpression	"( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL && strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR"		2298544	0		&&			
ANR	2298554	EqualityExpression	"( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL"		2298544	0		!=			
ANR	2298555	AssignmentExpression	"device_uri = getenv ( ""DEVICE_URI"" )"		2298544	0		=			
ANR	2298556	Identifier	device_uri		2298544	0					
ANR	2298557	CallExpression	"getenv ( ""DEVICE_URI"" )"		2298544	1					
ANR	2298558	Callee	getenv		2298544	0					
ANR	2298559	Identifier	getenv		2298544	0					
ANR	2298560	ArgumentList	"""DEVICE_URI"""		2298544	1					
ANR	2298561	Argument	"""DEVICE_URI"""		2298544	0					
ANR	2298562	PrimaryExpression	"""DEVICE_URI"""		2298544	0					
ANR	2298563	Identifier	NULL		2298544	1					
ANR	2298564	AndExpression	"strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR"		2298544	1		&&			
ANR	2298565	EqualityExpression	"strncmp ( device_uri , ""usb:"" , 4 ) == 0"		2298544	0		==			
ANR	2298566	CallExpression	"strncmp ( device_uri , ""usb:"" , 4 )"		2298544	0					
ANR	2298567	Callee	strncmp		2298544	0					
ANR	2298568	Identifier	strncmp		2298544	0					
ANR	2298569	ArgumentList	device_uri		2298544	1					
ANR	2298570	Argument	device_uri		2298544	0					
ANR	2298571	Identifier	device_uri		2298544	0					
ANR	2298572	Argument	"""usb:"""		2298544	1					
ANR	2298573	PrimaryExpression	"""usb:"""		2298544	0					
ANR	2298574	Argument	4		2298544	2					
ANR	2298575	PrimaryExpression	4		2298544	0					
ANR	2298576	PrimaryExpression	0		2298544	1					
ANR	2298577	RelationalExpression	Model >= EPSON_ICOLOR		2298544	1		>=			
ANR	2298578	Identifier	Model		2298544	0					
ANR	2298579	Identifier	EPSON_ICOLOR		2298544	1					
ANR	2298580	ExpressionStatement	"pwrite ( ""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"" , 29 )"	115:4:3009:3072	2298544	1	True				
ANR	2298581	CallExpression	"pwrite ( ""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"" , 29 )"		2298544	0					
ANR	2298582	Callee	pwrite		2298544	0					
ANR	2298583	Identifier	pwrite		2298544	0					
ANR	2298584	ArgumentList	"""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"""		2298544	1					
ANR	2298585	Argument	"""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"""		2298544	0					
ANR	2298586	PrimaryExpression	"""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"""		2298544	0					
ANR	2298587	Argument	29		2298544	1					
ANR	2298588	PrimaryExpression	29		2298544	0					
ANR	2298589	ReturnType	void		2298544	1					
ANR	2298590	Identifier	Setup		2298544	2					
ANR	2298591	ParameterList			2298544	3					
ANR	2298592	CFGEntryNode	ENTRY		2298544		True				
ANR	2298593	CFGExitNode	EXIT		2298544		True				
ANR	2298594	Symbol	strncmp		2298544						
ANR	2298595	Symbol	NULL		2298544						
ANR	2298596	Symbol	device_uri		2298544						
ANR	2298597	Symbol	Model		2298544						
ANR	2298598	Symbol	EPSON_ICOLOR		2298544						
ANR	2298599	Symbol	getenv		2298544						
ANR	2298600	Function	StartPage	123:0:3131:7424							
ANR	2298601	FunctionDef	"StartPage (const ppd_file_t * ppd , const cups_page_header2_t * header)"		2298600	0					
ANR	2298602	CompoundStatement		127:0:3262:7424	2298600	0					
ANR	2298603	IdentifierDeclStatement	"int n , t ;"	128:2:3266:3274	2298600	0	True				
ANR	2298604	IdentifierDecl	n		2298600	0					
ANR	2298605	IdentifierDeclType	int		2298600	0					
ANR	2298606	Identifier	n		2298600	1					
ANR	2298607	IdentifierDecl	t		2298600	1					
ANR	2298608	IdentifierDeclType	int		2298600	0					
ANR	2298609	Identifier	t		2298600	1					
ANR	2298610	IdentifierDeclStatement	int plane ;	129:2:3295:3304	2298600	1	True				
ANR	2298611	IdentifierDecl	plane		2298600	0					
ANR	2298612	IdentifierDeclType	int		2298600	0					
ANR	2298613	Identifier	plane		2298600	1					
ANR	2298614	IfStatement	"if ( ppd && ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL )"		2298600	2					
ANR	2298615	Condition	"ppd && ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"	136:6:3372:3435	2298600	0	True				
ANR	2298616	AndExpression	"ppd && ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"		2298600	0		&&			
ANR	2298617	Identifier	ppd		2298600	0					
ANR	2298618	AndExpression	"ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"		2298600	1		&&			
ANR	2298619	PtrMemberAccess	ppd -> nickname		2298600	0					
ANR	2298620	Identifier	ppd		2298600	0					
ANR	2298621	Identifier	nickname		2298600	1					
ANR	2298622	EqualityExpression	"strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"		2298600	1		!=			
ANR	2298623	CallExpression	"strstr ( ppd -> nickname , ""OKIDATA"" )"		2298600	0					
ANR	2298624	Callee	strstr		2298600	0					
ANR	2298625	Identifier	strstr		2298600	0					
ANR	2298626	ArgumentList	ppd -> nickname		2298600	1					
ANR	2298627	Argument	ppd -> nickname		2298600	0					
ANR	2298628	PtrMemberAccess	ppd -> nickname		2298600	0					
ANR	2298629	Identifier	ppd		2298600	0					
ANR	2298630	Identifier	nickname		2298600	1					
ANR	2298631	Argument	"""OKIDATA"""		2298600	1					
ANR	2298632	PrimaryExpression	"""OKIDATA"""		2298600	0					
ANR	2298633	Identifier	NULL		2298600	1					
ANR	2298634	ExpressionStatement	"printf ( ""\\033{A"" )"	137:4:3442:3458	2298600	1	True				
ANR	2298635	CallExpression	"printf ( ""\\033{A"" )"		2298600	0					
ANR	2298636	Callee	printf		2298600	0					
ANR	2298637	Identifier	printf		2298600	0					
ANR	2298638	ArgumentList	"""\\033{A"""		2298600	1					
ANR	2298639	Argument	"""\\033{A"""		2298600	0					
ANR	2298640	PrimaryExpression	"""\\033{A"""		2298600	0					
ANR	2298641	ExpressionStatement	"printf ( ""\\033@"" )"	139:2:3494:3509	2298600	3	True				
ANR	2298642	CallExpression	"printf ( ""\\033@"" )"		2298600	0					
ANR	2298643	Callee	printf		2298600	0					
ANR	2298644	Identifier	printf		2298600	0					
ANR	2298645	ArgumentList	"""\\033@"""		2298600	1					
ANR	2298646	Argument	"""\\033@"""		2298600	0					
ANR	2298647	PrimaryExpression	"""\\033@"""		2298600	0					
ANR	2298648	SwitchStatement	switch ( Model )		2298600	4					
ANR	2298649	Condition	Model	145:10:3578:3582	2298600	0	True				
ANR	2298650	Identifier	Model		2298600	0					
ANR	2298651	CompoundStatement		20:2:324:324	2298600	1					
ANR	2298652	Label	case EPSON_9PIN :	147:4:3593:3609	2298600	0	True				
ANR	2298653	Identifier	EPSON_9PIN		2298600	0					
ANR	2298654	Label	case EPSON_24PIN :	148:4:3615:3632	2298600	1	True				
ANR	2298655	Identifier	EPSON_24PIN		2298600	0					
ANR	2298656	ExpressionStatement	"printf ( ""\\033P\\022"" )"	149:8:3642:3661	2298600	2	True				
ANR	2298657	CallExpression	"printf ( ""\\033P\\022"" )"		2298600	0					
ANR	2298658	Callee	printf		2298600	0					
ANR	2298659	Identifier	printf		2298600	0					
ANR	2298660	ArgumentList	"""\\033P\\022"""		2298600	1					
ANR	2298661	Argument	"""\\033P\\022"""		2298600	0					
ANR	2298662	PrimaryExpression	"""\\033P\\022"""		2298600	0					
ANR	2298663	IfStatement	if ( header -> HWResolution [ 0 ] == 360 || header -> HWResolution [ 0 ] == 240 )		2298600	3					
ANR	2298664	Condition	header -> HWResolution [ 0 ] == 360 || header -> HWResolution [ 0 ] == 240	151:5:3687:3750	2298600	0	True				
ANR	2298665	OrExpression	header -> HWResolution [ 0 ] == 360 || header -> HWResolution [ 0 ] == 240		2298600	0		||			
ANR	2298666	EqualityExpression	header -> HWResolution [ 0 ] == 360		2298600	0		==			
ANR	2298667	ArrayIndexing	header -> HWResolution [ 0 ]		2298600	0					
ANR	2298668	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298669	Identifier	header		2298600	0					
ANR	2298670	Identifier	HWResolution		2298600	1					
ANR	2298671	PrimaryExpression	0		2298600	1					
ANR	2298672	PrimaryExpression	360		2298600	1					
ANR	2298673	EqualityExpression	header -> HWResolution [ 0 ] == 240		2298600	1		==			
ANR	2298674	ArrayIndexing	header -> HWResolution [ 0 ]		2298600	0					
ANR	2298675	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298676	Identifier	header		2298600	0					
ANR	2298677	Identifier	HWResolution		2298600	1					
ANR	2298678	PrimaryExpression	0		2298600	1					
ANR	2298679	PrimaryExpression	240		2298600	1					
ANR	2298680	CompoundStatement		26:1:491:491	2298600	1					
ANR	2298681	ExpressionStatement	"printf ( ""\\033x1"" )"	153:3:3759:3775	2298600	0	True				
ANR	2298682	CallExpression	"printf ( ""\\033x1"" )"		2298600	0					
ANR	2298683	Callee	printf		2298600	0					
ANR	2298684	Identifier	printf		2298600	0					
ANR	2298685	ArgumentList	"""\\033x1"""		2298600	1					
ANR	2298686	Argument	"""\\033x1"""		2298600	0					
ANR	2298687	PrimaryExpression	"""\\033x1"""		2298600	0					
ANR	2298688	ExpressionStatement	"printf ( ""\\033U1"" )"	154:3:3799:3815	2298600	1	True				
ANR	2298689	CallExpression	"printf ( ""\\033U1"" )"		2298600	0					
ANR	2298690	Callee	printf		2298600	0					
ANR	2298691	Identifier	printf		2298600	0					
ANR	2298692	ArgumentList	"""\\033U1"""		2298600	1					
ANR	2298693	Argument	"""\\033U1"""		2298600	0					
ANR	2298694	PrimaryExpression	"""\\033U1"""		2298600	0					
ANR	2298695	ElseStatement	else		2298600	0					
ANR	2298696	CompoundStatement		31:1:586:586	2298600	0					
ANR	2298697	ExpressionStatement	"printf ( ""\\033x0"" )"	158:3:3854:3870	2298600	0	True				
ANR	2298698	CallExpression	"printf ( ""\\033x0"" )"		2298600	0					
ANR	2298699	Callee	printf		2298600	0					
ANR	2298700	Identifier	printf		2298600	0					
ANR	2298701	ArgumentList	"""\\033x0"""		2298600	1					
ANR	2298702	Argument	"""\\033x0"""		2298600	0					
ANR	2298703	PrimaryExpression	"""\\033x0"""		2298600	0					
ANR	2298704	ExpressionStatement	"printf ( ""\\033U0"" )"	159:3:3897:3913	2298600	1	True				
ANR	2298705	CallExpression	"printf ( ""\\033U0"" )"		2298600	0					
ANR	2298706	Callee	printf		2298600	0					
ANR	2298707	Identifier	printf		2298600	0					
ANR	2298708	ArgumentList	"""\\033U0"""		2298600	1					
ANR	2298709	Argument	"""\\033U0"""		2298600	0					
ANR	2298710	PrimaryExpression	"""\\033U0"""		2298600	0					
ANR	2298711	ExpressionStatement	"printf ( ""\\033l%c\\033Q%c"" , 0 , ( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 ) )"	162:1:3941:4057	2298600	4	True				
ANR	2298712	CallExpression	"printf ( ""\\033l%c\\033Q%c"" , 0 , ( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 ) )"		2298600	0					
ANR	2298713	Callee	printf		2298600	0					
ANR	2298714	Identifier	printf		2298600	0					
ANR	2298715	ArgumentList	"""\\033l%c\\033Q%c"""		2298600	1					
ANR	2298716	Argument	"""\\033l%c\\033Q%c"""		2298600	0					
ANR	2298717	PrimaryExpression	"""\\033l%c\\033Q%c"""		2298600	0					
ANR	2298718	Argument	0		2298600	1					
ANR	2298719	PrimaryExpression	0		2298600	0					
ANR	2298720	Argument	( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 )		2298600	2					
ANR	2298721	CastExpression	( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 )		2298600	0					
ANR	2298722	CastTarget	int		2298600	0					
ANR	2298723	AdditiveExpression	10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5		2298600	1		+			
ANR	2298724	MultiplicativeExpression	10.0 * header -> PageSize [ 0 ] / 72.0		2298600	0		*			
ANR	2298725	PrimaryExpression	10.0		2298600	0					
ANR	2298726	MultiplicativeExpression	header -> PageSize [ 0 ] / 72.0		2298600	1		/			
ANR	2298727	ArrayIndexing	header -> PageSize [ 0 ]		2298600	0					
ANR	2298728	PtrMemberAccess	header -> PageSize		2298600	0					
ANR	2298729	Identifier	header		2298600	0					
ANR	2298730	Identifier	PageSize		2298600	1					
ANR	2298731	PrimaryExpression	0		2298600	1					
ANR	2298732	PrimaryExpression	72.0		2298600	1					
ANR	2298733	PrimaryExpression	0.5		2298600	1					
ANR	2298734	ExpressionStatement	"printf ( ""\\033\\062\\033C%c"" , ( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 ) )"	164:1:4060:4168	2298600	5	True				
ANR	2298735	CallExpression	"printf ( ""\\033\\062\\033C%c"" , ( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 ) )"		2298600	0					
ANR	2298736	Callee	printf		2298600	0					
ANR	2298737	Identifier	printf		2298600	0					
ANR	2298738	ArgumentList	"""\\033\\062\\033C%c"""		2298600	1					
ANR	2298739	Argument	"""\\033\\062\\033C%c"""		2298600	0					
ANR	2298740	PrimaryExpression	"""\\033\\062\\033C%c"""		2298600	0					
ANR	2298741	Argument	( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 )		2298600	1					
ANR	2298742	CastExpression	( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 )		2298600	0					
ANR	2298743	CastTarget	int		2298600	0					
ANR	2298744	AdditiveExpression	header -> PageSize [ 1 ] / 12.0 + 0.5		2298600	1		+			
ANR	2298745	MultiplicativeExpression	header -> PageSize [ 1 ] / 12.0		2298600	0		/			
ANR	2298746	ArrayIndexing	header -> PageSize [ 1 ]		2298600	0					
ANR	2298747	PtrMemberAccess	header -> PageSize		2298600	0					
ANR	2298748	Identifier	header		2298600	0					
ANR	2298749	Identifier	PageSize		2298600	1					
ANR	2298750	PrimaryExpression	1		2298600	1					
ANR	2298751	PrimaryExpression	12.0		2298600	1					
ANR	2298752	PrimaryExpression	0.5		2298600	1					
ANR	2298753	ExpressionStatement	"printf ( ""\\033N%c"" , 0 )"	166:1:4171:4191	2298600	6	True				
ANR	2298754	CallExpression	"printf ( ""\\033N%c"" , 0 )"		2298600	0					
ANR	2298755	Callee	printf		2298600	0					
ANR	2298756	Identifier	printf		2298600	0					
ANR	2298757	ArgumentList	"""\\033N%c"""		2298600	1					
ANR	2298758	Argument	"""\\033N%c"""		2298600	0					
ANR	2298759	PrimaryExpression	"""\\033N%c"""		2298600	0					
ANR	2298760	Argument	0		2298600	1					
ANR	2298761	PrimaryExpression	0		2298600	0					
ANR	2298762	ExpressionStatement	"printf ( ""\\033O"" )"	167:8:4222:4237	2298600	7	True				
ANR	2298763	CallExpression	"printf ( ""\\033O"" )"		2298600	0					
ANR	2298764	Callee	printf		2298600	0					
ANR	2298765	Identifier	printf		2298600	0					
ANR	2298766	ArgumentList	"""\\033O"""		2298600	1					
ANR	2298767	Argument	"""\\033O"""		2298600	0					
ANR	2298768	PrimaryExpression	"""\\033O"""		2298600	0					
ANR	2298769	ExpressionStatement	DotBytes = header -> cupsRowCount / 8	173:8:4324:4361	2298600	8	True				
ANR	2298770	AssignmentExpression	DotBytes = header -> cupsRowCount / 8		2298600	0		=			
ANR	2298771	Identifier	DotBytes		2298600	0					
ANR	2298772	MultiplicativeExpression	header -> cupsRowCount / 8		2298600	1		/			
ANR	2298773	PtrMemberAccess	header -> cupsRowCount		2298600	0					
ANR	2298774	Identifier	header		2298600	0					
ANR	2298775	Identifier	cupsRowCount		2298600	1					
ANR	2298776	PrimaryExpression	8		2298600	1					
ANR	2298777	ExpressionStatement	DotColumns = header -> HWResolution [ 0 ] / 60	174:1:4364:4405	2298600	9	True				
ANR	2298778	AssignmentExpression	DotColumns = header -> HWResolution [ 0 ] / 60		2298600	0		=			
ANR	2298779	Identifier	DotColumns		2298600	0					
ANR	2298780	MultiplicativeExpression	header -> HWResolution [ 0 ] / 60		2298600	1		/			
ANR	2298781	ArrayIndexing	header -> HWResolution [ 0 ]		2298600	0					
ANR	2298782	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298783	Identifier	header		2298600	0					
ANR	2298784	Identifier	HWResolution		2298600	1					
ANR	2298785	PrimaryExpression	0		2298600	1					
ANR	2298786	PrimaryExpression	60		2298600	1					
ANR	2298787	ExpressionStatement	Shingling = 0	175:8:4415:4429	2298600	10	True				
ANR	2298788	AssignmentExpression	Shingling = 0		2298600	0		=			
ANR	2298789	Identifier	Shingling		2298600	0					
ANR	2298790	PrimaryExpression	0		2298600	1					
ANR	2298791	IfStatement	if ( Model == EPSON_9PIN )		2298600	11					
ANR	2298792	Condition	Model == EPSON_9PIN	177:12:4444:4462	2298600	0	True				
ANR	2298793	EqualityExpression	Model == EPSON_9PIN		2298600	0		==			
ANR	2298794	Identifier	Model		2298600	0					
ANR	2298795	Identifier	EPSON_9PIN		2298600	1					
ANR	2298796	ExpressionStatement	"printf ( ""\\033\\063\\030"" )"	178:3:4468:4490	2298600	1	True				
ANR	2298797	CallExpression	"printf ( ""\\033\\063\\030"" )"		2298600	0					
ANR	2298798	Callee	printf		2298600	0					
ANR	2298799	Identifier	printf		2298600	0					
ANR	2298800	ArgumentList	"""\\033\\063\\030"""		2298600	1					
ANR	2298801	Argument	"""\\033\\063\\030"""		2298600	0					
ANR	2298802	PrimaryExpression	"""\\033\\063\\030"""		2298600	0					
ANR	2298803	ElseStatement	else		2298600	0					
ANR	2298804	SwitchStatement	switch ( header -> HWResolution [ 0 ] )		2298600	0					
ANR	2298805	Condition	header -> HWResolution [ 0 ]	180:11:4529:4551	2298600	0	True				
ANR	2298806	ArrayIndexing	header -> HWResolution [ 0 ]		2298600	0					
ANR	2298807	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298808	Identifier	header		2298600	0					
ANR	2298809	Identifier	HWResolution		2298600	1					
ANR	2298810	PrimaryExpression	0		2298600	1					
ANR	2298811	CompoundStatement		55:3:1294:1294	2298600	1					
ANR	2298812	Label	case 60 :	182:5:4564:4571	2298600	0	True				
ANR	2298813	Label	case 120 :	183:5:4578:4587	2298600	1	True				
ANR	2298814	Label	case 240 :	184:5:4594:4603	2298600	2	True				
ANR	2298815	ExpressionStatement	"printf ( ""\\033\\063\\030"" )"	185:9:4614:4636	2298600	3	True				
ANR	2298816	CallExpression	"printf ( ""\\033\\063\\030"" )"		2298600	0					
ANR	2298817	Callee	printf		2298600	0					
ANR	2298818	Identifier	printf		2298600	0					
ANR	2298819	ArgumentList	"""\\033\\063\\030"""		2298600	1					
ANR	2298820	Argument	"""\\033\\063\\030"""		2298600	0					
ANR	2298821	PrimaryExpression	"""\\033\\063\\030"""		2298600	0					
ANR	2298822	BreakStatement	break ;	186:2:4660:4665	2298600	4	True				
ANR	2298823	Label	case 180 :	188:5:4673:4682	2298600	5	True				
ANR	2298824	Label	case 360 :	189:5:4689:4698	2298600	6	True				
ANR	2298825	ExpressionStatement	Shingling = 1	190:9:4709:4722	2298600	7	True				
ANR	2298826	AssignmentExpression	Shingling = 1		2298600	0		=			
ANR	2298827	Identifier	Shingling		2298600	0					
ANR	2298828	PrimaryExpression	1		2298600	1					
ANR	2298829	IfStatement	if ( header -> HWResolution [ 1 ] == 180 )		2298600	8					
ANR	2298830	Condition	header -> HWResolution [ 1 ] == 180	192:13:4738:4767	2298600	0	True				
ANR	2298831	EqualityExpression	header -> HWResolution [ 1 ] == 180		2298600	0		==			
ANR	2298832	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	0					
ANR	2298833	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298834	Identifier	header		2298600	0					
ANR	2298835	Identifier	HWResolution		2298600	1					
ANR	2298836	PrimaryExpression	1		2298600	1					
ANR	2298837	PrimaryExpression	180		2298600	1					
ANR	2298838	ExpressionStatement	"printf ( ""\\033\\063\\010"" )"	193:11:4781:4803	2298600	1	True				
ANR	2298839	CallExpression	"printf ( ""\\033\\063\\010"" )"		2298600	0					
ANR	2298840	Callee	printf		2298600	0					
ANR	2298841	Identifier	printf		2298600	0					
ANR	2298842	ArgumentList	"""\\033\\063\\010"""		2298600	1					
ANR	2298843	Argument	"""\\033\\063\\010"""		2298600	0					
ANR	2298844	PrimaryExpression	"""\\033\\063\\010"""		2298600	0					
ANR	2298845	ElseStatement	else		2298600	0					
ANR	2298846	ExpressionStatement	"printf ( ""\\033+\\010"" )"	195:11:4842:4861	2298600	0	True				
ANR	2298847	CallExpression	"printf ( ""\\033+\\010"" )"		2298600	0					
ANR	2298848	Callee	printf		2298600	0					
ANR	2298849	Identifier	printf		2298600	0					
ANR	2298850	ArgumentList	"""\\033+\\010"""		2298600	1					
ANR	2298851	Argument	"""\\033+\\010"""		2298600	0					
ANR	2298852	PrimaryExpression	"""\\033+\\010"""		2298600	0					
ANR	2298853	BreakStatement	break ;	196:9:4892:4897	2298600	9	True				
ANR	2298854	BreakStatement	break ;	198:8:4912:4917	2298600	12	True				
ANR	2298855	Label	default :	200:4:4924:4932	2298600	13	True				
ANR	2298856	Identifier	default		2298600	0					
ANR	2298857	ExpressionStatement	"pwrite ( ""\\033(G\\001\\000\\001"" , 6 )"	205:1:4974:5005	2298600	14	True				
ANR	2298858	CallExpression	"pwrite ( ""\\033(G\\001\\000\\001"" , 6 )"		2298600	0					
ANR	2298859	Callee	pwrite		2298600	0					
ANR	2298860	Identifier	pwrite		2298600	0					
ANR	2298861	ArgumentList	"""\\033(G\\001\\000\\001"""		2298600	1					
ANR	2298862	Argument	"""\\033(G\\001\\000\\001"""		2298600	0					
ANR	2298863	PrimaryExpression	"""\\033(G\\001\\000\\001"""		2298600	0					
ANR	2298864	Argument	6		2298600	1					
ANR	2298865	PrimaryExpression	6		2298600	0					
ANR	2298866	IfStatement	if ( Model < EPSON_ICOLOR )		2298600	15					
ANR	2298867	Condition	Model < EPSON_ICOLOR	211:12:5080:5099	2298600	0	True				
ANR	2298868	RelationalExpression	Model < EPSON_ICOLOR		2298600	0		<			
ANR	2298869	Identifier	Model		2298600	0					
ANR	2298870	Identifier	EPSON_ICOLOR		2298600	1					
ANR	2298871	CompoundStatement		86:1:1840:1840	2298600	1					
ANR	2298872	ExpressionStatement	"pwrite ( ""\\033(U\\001\\000"" , 5 )"	213:3:5108:5135	2298600	0	True				
ANR	2298873	CallExpression	"pwrite ( ""\\033(U\\001\\000"" , 5 )"		2298600	0					
ANR	2298874	Callee	pwrite		2298600	0					
ANR	2298875	Identifier	pwrite		2298600	0					
ANR	2298876	ArgumentList	"""\\033(U\\001\\000"""		2298600	1					
ANR	2298877	Argument	"""\\033(U\\001\\000"""		2298600	0					
ANR	2298878	PrimaryExpression	"""\\033(U\\001\\000"""		2298600	0					
ANR	2298879	Argument	5		2298600	1					
ANR	2298880	PrimaryExpression	5		2298600	0					
ANR	2298881	ExpressionStatement	putchar ( 3600 / header -> HWResolution [ 1 ] )	214:3:5164:5203	2298600	1	True				
ANR	2298882	CallExpression	putchar ( 3600 / header -> HWResolution [ 1 ] )		2298600	0					
ANR	2298883	Callee	putchar		2298600	0					
ANR	2298884	Identifier	putchar		2298600	0					
ANR	2298885	ArgumentList	3600 / header -> HWResolution [ 1 ]		2298600	1					
ANR	2298886	Argument	3600 / header -> HWResolution [ 1 ]		2298600	0					
ANR	2298887	MultiplicativeExpression	3600 / header -> HWResolution [ 1 ]		2298600	0		/			
ANR	2298888	PrimaryExpression	3600		2298600	0					
ANR	2298889	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	1					
ANR	2298890	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298891	Identifier	header		2298600	0					
ANR	2298892	Identifier	HWResolution		2298600	1					
ANR	2298893	PrimaryExpression	1		2298600	1					
ANR	2298894	ElseStatement	else		2298600	0					
ANR	2298895	CompoundStatement		91:1:1959:1959	2298600	0					
ANR	2298896	ExpressionStatement	"pwrite ( ""\\033(U\\005\\000"" , 5 )"	218:3:5227:5254	2298600	0	True				
ANR	2298897	CallExpression	"pwrite ( ""\\033(U\\005\\000"" , 5 )"		2298600	0					
ANR	2298898	Callee	pwrite		2298600	0					
ANR	2298899	Identifier	pwrite		2298600	0					
ANR	2298900	ArgumentList	"""\\033(U\\005\\000"""		2298600	1					
ANR	2298901	Argument	"""\\033(U\\005\\000"""		2298600	0					
ANR	2298902	PrimaryExpression	"""\\033(U\\005\\000"""		2298600	0					
ANR	2298903	Argument	5		2298600	1					
ANR	2298904	PrimaryExpression	5		2298600	0					
ANR	2298905	ExpressionStatement	putchar ( 1440 / header -> HWResolution [ 1 ] )	219:3:5259:5298	2298600	1	True				
ANR	2298906	CallExpression	putchar ( 1440 / header -> HWResolution [ 1 ] )		2298600	0					
ANR	2298907	Callee	putchar		2298600	0					
ANR	2298908	Identifier	putchar		2298600	0					
ANR	2298909	ArgumentList	1440 / header -> HWResolution [ 1 ]		2298600	1					
ANR	2298910	Argument	1440 / header -> HWResolution [ 1 ]		2298600	0					
ANR	2298911	MultiplicativeExpression	1440 / header -> HWResolution [ 1 ]		2298600	0		/			
ANR	2298912	PrimaryExpression	1440		2298600	0					
ANR	2298913	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	1					
ANR	2298914	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298915	Identifier	header		2298600	0					
ANR	2298916	Identifier	HWResolution		2298600	1					
ANR	2298917	PrimaryExpression	1		2298600	1					
ANR	2298918	ExpressionStatement	putchar ( 1440 / header -> HWResolution [ 1 ] )	220:3:5303:5342	2298600	2	True				
ANR	2298919	CallExpression	putchar ( 1440 / header -> HWResolution [ 1 ] )		2298600	0					
ANR	2298920	Callee	putchar		2298600	0					
ANR	2298921	Identifier	putchar		2298600	0					
ANR	2298922	ArgumentList	1440 / header -> HWResolution [ 1 ]		2298600	1					
ANR	2298923	Argument	1440 / header -> HWResolution [ 1 ]		2298600	0					
ANR	2298924	MultiplicativeExpression	1440 / header -> HWResolution [ 1 ]		2298600	0		/			
ANR	2298925	PrimaryExpression	1440		2298600	0					
ANR	2298926	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	1					
ANR	2298927	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298928	Identifier	header		2298600	0					
ANR	2298929	Identifier	HWResolution		2298600	1					
ANR	2298930	PrimaryExpression	1		2298600	1					
ANR	2298931	ExpressionStatement	putchar ( 1440 / header -> HWResolution [ 0 ] )	221:3:5347:5386	2298600	3	True				
ANR	2298932	CallExpression	putchar ( 1440 / header -> HWResolution [ 0 ] )		2298600	0					
ANR	2298933	Callee	putchar		2298600	0					
ANR	2298934	Identifier	putchar		2298600	0					
ANR	2298935	ArgumentList	1440 / header -> HWResolution [ 0 ]		2298600	1					
ANR	2298936	Argument	1440 / header -> HWResolution [ 0 ]		2298600	0					
ANR	2298937	MultiplicativeExpression	1440 / header -> HWResolution [ 0 ]		2298600	0		/			
ANR	2298938	PrimaryExpression	1440		2298600	0					
ANR	2298939	ArrayIndexing	header -> HWResolution [ 0 ]		2298600	1					
ANR	2298940	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298941	Identifier	header		2298600	0					
ANR	2298942	Identifier	HWResolution		2298600	1					
ANR	2298943	PrimaryExpression	0		2298600	1					
ANR	2298944	ExpressionStatement	putchar ( 0xa0 )	222:3:5391:5404	2298600	4	True				
ANR	2298945	CallExpression	putchar ( 0xa0 )		2298600	0					
ANR	2298946	Callee	putchar		2298600	0					
ANR	2298947	Identifier	putchar		2298600	0					
ANR	2298948	ArgumentList	0xa0		2298600	1					
ANR	2298949	Argument	0xa0		2298600	0					
ANR	2298950	PrimaryExpression	0xa0		2298600	0					
ANR	2298951	ExpressionStatement	putchar ( 0x05 )	223:3:5428:5441	2298600	5	True				
ANR	2298952	CallExpression	putchar ( 0x05 )		2298600	0					
ANR	2298953	Callee	putchar		2298600	0					
ANR	2298954	Identifier	putchar		2298600	0					
ANR	2298955	ArgumentList	0x05		2298600	1					
ANR	2298956	Argument	0x05		2298600	0					
ANR	2298957	PrimaryExpression	0x05		2298600	0					
ANR	2298958	ExpressionStatement	n = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72.0	226:1:5448:5504	2298600	16	True				
ANR	2298959	AssignmentExpression	n = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72.0		2298600	0		=			
ANR	2298960	Identifier	n		2298600	0					
ANR	2298961	MultiplicativeExpression	header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72.0		2298600	1		*			
ANR	2298962	ArrayIndexing	header -> PageSize [ 1 ]		2298600	0					
ANR	2298963	PtrMemberAccess	header -> PageSize		2298600	0					
ANR	2298964	Identifier	header		2298600	0					
ANR	2298965	Identifier	PageSize		2298600	1					
ANR	2298966	PrimaryExpression	1		2298600	1					
ANR	2298967	MultiplicativeExpression	header -> HWResolution [ 1 ] / 72.0		2298600	1		/			
ANR	2298968	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	0					
ANR	2298969	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2298970	Identifier	header		2298600	0					
ANR	2298971	Identifier	HWResolution		2298600	1					
ANR	2298972	PrimaryExpression	1		2298600	1					
ANR	2298973	PrimaryExpression	72.0		2298600	1					
ANR	2298974	ExpressionStatement	"pwrite ( ""\\033(C\\002\\000"" , 5 )"	228:1:5508:5535	2298600	17	True				
ANR	2298975	CallExpression	"pwrite ( ""\\033(C\\002\\000"" , 5 )"		2298600	0					
ANR	2298976	Callee	pwrite		2298600	0					
ANR	2298977	Identifier	pwrite		2298600	0					
ANR	2298978	ArgumentList	"""\\033(C\\002\\000"""		2298600	1					
ANR	2298979	Argument	"""\\033(C\\002\\000"""		2298600	0					
ANR	2298980	PrimaryExpression	"""\\033(C\\002\\000"""		2298600	0					
ANR	2298981	Argument	5		2298600	1					
ANR	2298982	PrimaryExpression	5		2298600	0					
ANR	2298983	ExpressionStatement	putchar ( n )	229:1:5557:5567	2298600	18	True				
ANR	2298984	CallExpression	putchar ( n )		2298600	0					
ANR	2298985	Callee	putchar		2298600	0					
ANR	2298986	Identifier	putchar		2298600	0					
ANR	2298987	ArgumentList	n		2298600	1					
ANR	2298988	Argument	n		2298600	0					
ANR	2298989	Identifier	n		2298600	0					
ANR	2298990	ExpressionStatement	putchar ( n >> 8 )	230:1:5570:5585	2298600	19	True				
ANR	2298991	CallExpression	putchar ( n >> 8 )		2298600	0					
ANR	2298992	Callee	putchar		2298600	0					
ANR	2298993	Identifier	putchar		2298600	0					
ANR	2298994	ArgumentList	n >> 8		2298600	1					
ANR	2298995	Argument	n >> 8		2298600	0					
ANR	2298996	ShiftExpression	n >> 8		2298600	0		>>			
ANR	2298997	Identifier	n		2298600	0					
ANR	2298998	PrimaryExpression	8		2298600	1					
ANR	2298999	IfStatement	if ( ppd )		2298600	20					
ANR	2299000	Condition	ppd	232:12:5600:5602	2298600	0	True				
ANR	2299001	Identifier	ppd		2298600	0					
ANR	2299002	ExpressionStatement	t = ( ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top ) * header -> HWResolution [ 1 ] / 72.0	233:3:5608:5694	2298600	1	True				
ANR	2299003	AssignmentExpression	t = ( ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top ) * header -> HWResolution [ 1 ] / 72.0		2298600	0		=			
ANR	2299004	Identifier	t		2298600	0					
ANR	2299005	MultiplicativeExpression	( ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top ) * header -> HWResolution [ 1 ] / 72.0		2298600	1		*			
ANR	2299006	AdditiveExpression	ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top		2298600	0		-			
ANR	2299007	MemberAccess	ppd -> sizes [ 1 ] . length		2298600	0					
ANR	2299008	ArrayIndexing	ppd -> sizes [ 1 ]		2298600	0					
ANR	2299009	PtrMemberAccess	ppd -> sizes		2298600	0					
ANR	2299010	Identifier	ppd		2298600	0					
ANR	2299011	Identifier	sizes		2298600	1					
ANR	2299012	PrimaryExpression	1		2298600	1					
ANR	2299013	Identifier	length		2298600	1					
ANR	2299014	MemberAccess	ppd -> sizes [ 1 ] . top		2298600	1					
ANR	2299015	ArrayIndexing	ppd -> sizes [ 1 ]		2298600	0					
ANR	2299016	PtrMemberAccess	ppd -> sizes		2298600	0					
ANR	2299017	Identifier	ppd		2298600	0					
ANR	2299018	Identifier	sizes		2298600	1					
ANR	2299019	PrimaryExpression	1		2298600	1					
ANR	2299020	Identifier	top		2298600	1					
ANR	2299021	MultiplicativeExpression	header -> HWResolution [ 1 ] / 72.0		2298600	1		/			
ANR	2299022	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	0					
ANR	2299023	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2299024	Identifier	header		2298600	0					
ANR	2299025	Identifier	HWResolution		2298600	1					
ANR	2299026	PrimaryExpression	1		2298600	1					
ANR	2299027	PrimaryExpression	72.0		2298600	1					
ANR	2299028	ElseStatement	else		2298600	0					
ANR	2299029	ExpressionStatement	t = 0	236:3:5712:5717	2298600	0	True				
ANR	2299030	AssignmentExpression	t = 0		2298600	0		=			
ANR	2299031	Identifier	t		2298600	0					
ANR	2299032	PrimaryExpression	0		2298600	1					
ANR	2299033	ExpressionStatement	"pwrite ( ""\\033(c\\004\\000"" , 5 )"	238:1:5721:5748	2298600	21	True				
ANR	2299034	CallExpression	"pwrite ( ""\\033(c\\004\\000"" , 5 )"		2298600	0					
ANR	2299035	Callee	pwrite		2298600	0					
ANR	2299036	Identifier	pwrite		2298600	0					
ANR	2299037	ArgumentList	"""\\033(c\\004\\000"""		2298600	1					
ANR	2299038	Argument	"""\\033(c\\004\\000"""		2298600	0					
ANR	2299039	PrimaryExpression	"""\\033(c\\004\\000"""		2298600	0					
ANR	2299040	Argument	5		2298600	1					
ANR	2299041	PrimaryExpression	5		2298600	0					
ANR	2299042	ExpressionStatement	putchar ( t )	239:1:5779:5789	2298600	22	True				
ANR	2299043	CallExpression	putchar ( t )		2298600	0					
ANR	2299044	Callee	putchar		2298600	0					
ANR	2299045	Identifier	putchar		2298600	0					
ANR	2299046	ArgumentList	t		2298600	1					
ANR	2299047	Argument	t		2298600	0					
ANR	2299048	Identifier	t		2298600	0					
ANR	2299049	ExpressionStatement	putchar ( t >> 8 )	240:1:5792:5807	2298600	23	True				
ANR	2299050	CallExpression	putchar ( t >> 8 )		2298600	0					
ANR	2299051	Callee	putchar		2298600	0					
ANR	2299052	Identifier	putchar		2298600	0					
ANR	2299053	ArgumentList	t >> 8		2298600	1					
ANR	2299054	Argument	t >> 8		2298600	0					
ANR	2299055	ShiftExpression	t >> 8		2298600	0		>>			
ANR	2299056	Identifier	t		2298600	0					
ANR	2299057	PrimaryExpression	8		2298600	1					
ANR	2299058	ExpressionStatement	putchar ( n )	241:1:5810:5820	2298600	24	True				
ANR	2299059	CallExpression	putchar ( n )		2298600	0					
ANR	2299060	Callee	putchar		2298600	0					
ANR	2299061	Identifier	putchar		2298600	0					
ANR	2299062	ArgumentList	n		2298600	1					
ANR	2299063	Argument	n		2298600	0					
ANR	2299064	Identifier	n		2298600	0					
ANR	2299065	ExpressionStatement	putchar ( n >> 8 )	242:1:5823:5838	2298600	25	True				
ANR	2299066	CallExpression	putchar ( n >> 8 )		2298600	0					
ANR	2299067	Callee	putchar		2298600	0					
ANR	2299068	Identifier	putchar		2298600	0					
ANR	2299069	ArgumentList	n >> 8		2298600	1					
ANR	2299070	Argument	n >> 8		2298600	0					
ANR	2299071	ShiftExpression	n >> 8		2298600	0		>>			
ANR	2299072	Identifier	n		2298600	0					
ANR	2299073	PrimaryExpression	8		2298600	1					
ANR	2299074	IfStatement	if ( header -> HWResolution [ 1 ] == 720 )		2298600	26					
ANR	2299075	Condition	header -> HWResolution [ 1 ] == 720	244:5:5846:5875	2298600	0	True				
ANR	2299076	EqualityExpression	header -> HWResolution [ 1 ] == 720		2298600	0		==			
ANR	2299077	ArrayIndexing	header -> HWResolution [ 1 ]		2298600	0					
ANR	2299078	PtrMemberAccess	header -> HWResolution		2298600	0					
ANR	2299079	Identifier	header		2298600	0					
ANR	2299080	Identifier	HWResolution		2298600	1					
ANR	2299081	PrimaryExpression	1		2298600	1					
ANR	2299082	PrimaryExpression	720		2298600	1					
ANR	2299083	CompoundStatement		119:1:2616:2616	2298600	1					
ANR	2299084	ExpressionStatement	"pwrite ( ""\\033(i\\001\\000\\001"" , 6 )"	246:3:5884:5915	2298600	0	True				
ANR	2299085	CallExpression	"pwrite ( ""\\033(i\\001\\000\\001"" , 6 )"		2298600	0					
ANR	2299086	Callee	pwrite		2298600	0					
ANR	2299087	Identifier	pwrite		2298600	0					
ANR	2299088	ArgumentList	"""\\033(i\\001\\000\\001"""		2298600	1					
ANR	2299089	Argument	"""\\033(i\\001\\000\\001"""		2298600	0					
ANR	2299090	PrimaryExpression	"""\\033(i\\001\\000\\001"""		2298600	0					
ANR	2299091	Argument	6		2298600	1					
ANR	2299092	PrimaryExpression	6		2298600	0					
ANR	2299093	ExpressionStatement	"pwrite ( ""\\033(e\\002\\000\\000\\001"" , 7 )"	247:3:5937:5972	2298600	1	True				
ANR	2299094	CallExpression	"pwrite ( ""\\033(e\\002\\000\\000\\001"" , 7 )"		2298600	0					
ANR	2299095	Callee	pwrite		2298600	0					
ANR	2299096	Identifier	pwrite		2298600	0					
ANR	2299097	ArgumentList	"""\\033(e\\002\\000\\000\\001"""		2298600	1					
ANR	2299098	Argument	"""\\033(e\\002\\000\\000\\001"""		2298600	0					
ANR	2299099	PrimaryExpression	"""\\033(e\\002\\000\\000\\001"""		2298600	0					
ANR	2299100	Argument	7		2298600	1					
ANR	2299101	PrimaryExpression	7		2298600	0					
ANR	2299102	ExpressionStatement	"pwrite ( ""\\033(V\\002\\000\\000\\000"" , 7 )"	250:1:5996:6031	2298600	27	True				
ANR	2299103	CallExpression	"pwrite ( ""\\033(V\\002\\000\\000\\000"" , 7 )"		2298600	0					
ANR	2299104	Callee	pwrite		2298600	0					
ANR	2299105	Identifier	pwrite		2298600	0					
ANR	2299106	ArgumentList	"""\\033(V\\002\\000\\000\\000"""		2298600	1					
ANR	2299107	Argument	"""\\033(V\\002\\000\\000\\000"""		2298600	0					
ANR	2299108	PrimaryExpression	"""\\033(V\\002\\000\\000\\000"""		2298600	0					
ANR	2299109	Argument	7		2298600	1					
ANR	2299110	PrimaryExpression	7		2298600	0					
ANR	2299111	ExpressionStatement	DotBytes = 0	252:8:6072:6086	2298600	28	True				
ANR	2299112	AssignmentExpression	DotBytes = 0		2298600	0		=			
ANR	2299113	Identifier	DotBytes		2298600	0					
ANR	2299114	PrimaryExpression	0		2298600	1					
ANR	2299115	ExpressionStatement	DotColumns = 0	253:1:6089:6103	2298600	29	True				
ANR	2299116	AssignmentExpression	DotColumns = 0		2298600	0		=			
ANR	2299117	Identifier	DotColumns		2298600	0					
ANR	2299118	PrimaryExpression	0		2298600	1					
ANR	2299119	ExpressionStatement	Shingling = 0	254:8:6113:6127	2298600	30	True				
ANR	2299120	AssignmentExpression	Shingling = 0		2298600	0		=			
ANR	2299121	Identifier	Shingling		2298600	0					
ANR	2299122	PrimaryExpression	0		2298600	1					
ANR	2299123	BreakStatement	break ;	255:8:6137:6142	2298600	31	True				
ANR	2299124	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_CMY )		2298600	5					
ANR	2299125	Condition	header -> cupsColorSpace == CUPS_CSPACE_CMY	262:6:6188:6228	2298600	0	True				
ANR	2299126	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_CMY		2298600	0		==			
ANR	2299127	PtrMemberAccess	header -> cupsColorSpace		2298600	0					
ANR	2299128	Identifier	header		2298600	0					
ANR	2299129	Identifier	cupsColorSpace		2298600	1					
ANR	2299130	Identifier	CUPS_CSPACE_CMY		2298600	1					
ANR	2299131	ExpressionStatement	NumPlanes = 3	263:4:6235:6248	2298600	1	True				
ANR	2299132	AssignmentExpression	NumPlanes = 3		2298600	0		=			
ANR	2299133	Identifier	NumPlanes		2298600	0					
ANR	2299134	PrimaryExpression	3		2298600	1					
ANR	2299135	ElseStatement	else		2298600	0					
ANR	2299136	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_KCMY )		2298600	0					
ANR	2299137	Condition	header -> cupsColorSpace == CUPS_CSPACE_KCMY	264:11:6261:6302	2298600	0	True				
ANR	2299138	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_KCMY		2298600	0		==			
ANR	2299139	PtrMemberAccess	header -> cupsColorSpace		2298600	0					
ANR	2299140	Identifier	header		2298600	0					
ANR	2299141	Identifier	cupsColorSpace		2298600	1					
ANR	2299142	Identifier	CUPS_CSPACE_KCMY		2298600	1					
ANR	2299143	ExpressionStatement	NumPlanes = 4	265:4:6309:6322	2298600	1	True				
ANR	2299144	AssignmentExpression	NumPlanes = 4		2298600	0		=			
ANR	2299145	Identifier	NumPlanes		2298600	0					
ANR	2299146	PrimaryExpression	4		2298600	1					
ANR	2299147	ElseStatement	else		2298600	0					
ANR	2299148	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_KCMYcm )		2298600	0					
ANR	2299149	Condition	header -> cupsColorSpace == CUPS_CSPACE_KCMYcm	266:11:6335:6378	2298600	0	True				
ANR	2299150	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_KCMYcm		2298600	0		==			
ANR	2299151	PtrMemberAccess	header -> cupsColorSpace		2298600	0					
ANR	2299152	Identifier	header		2298600	0					
ANR	2299153	Identifier	cupsColorSpace		2298600	1					
ANR	2299154	Identifier	CUPS_CSPACE_KCMYcm		2298600	1					
ANR	2299155	ExpressionStatement	NumPlanes = 6	267:4:6385:6398	2298600	1	True				
ANR	2299156	AssignmentExpression	NumPlanes = 6		2298600	0		=			
ANR	2299157	Identifier	NumPlanes		2298600	0					
ANR	2299158	PrimaryExpression	6		2298600	1					
ANR	2299159	ElseStatement	else		2298600	0					
ANR	2299160	ExpressionStatement	NumPlanes = 1	269:4:6411:6424	2298600	0	True				
ANR	2299161	AssignmentExpression	NumPlanes = 1		2298600	0		=			
ANR	2299162	Identifier	NumPlanes		2298600	0					
ANR	2299163	PrimaryExpression	1		2298600	1					
ANR	2299164	ExpressionStatement	Feed = 0	271:2:6429:6437	2298600	6	True				
ANR	2299165	AssignmentExpression	Feed = 0		2298600	0		=			
ANR	2299166	Identifier	Feed		2298600	0					
ANR	2299167	PrimaryExpression	0		2298600	1					
ANR	2299168	IfStatement	if ( ( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL )		2298600	7					
ANR	2299169	Condition	( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL	277:6:6534:6587	2298600	0	True				
ANR	2299170	EqualityExpression	( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL		2298600	0		==			
ANR	2299171	AssignmentExpression	Planes [ 0 ] = malloc ( header -> cupsBytesPerLine )		2298600	0		=			
ANR	2299172	ArrayIndexing	Planes [ 0 ]		2298600	0					
ANR	2299173	Identifier	Planes		2298600	0					
ANR	2299174	PrimaryExpression	0		2298600	1					
ANR	2299175	CallExpression	malloc ( header -> cupsBytesPerLine )		2298600	1					
ANR	2299176	Callee	malloc		2298600	0					
ANR	2299177	Identifier	malloc		2298600	0					
ANR	2299178	ArgumentList	header -> cupsBytesPerLine		2298600	1					
ANR	2299179	Argument	header -> cupsBytesPerLine		2298600	0					
ANR	2299180	PtrMemberAccess	header -> cupsBytesPerLine		2298600	0					
ANR	2299181	Identifier	header		2298600	0					
ANR	2299182	Identifier	cupsBytesPerLine		2298600	1					
ANR	2299183	Identifier	NULL		2298600	1					
ANR	2299184	CompoundStatement		152:2:3329:3329	2298600	1					
ANR	2299185	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	279:4:6598:6649	2298600	0	True				
ANR	2299186	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		2298600	0					
ANR	2299187	Callee	fputs		2298600	0					
ANR	2299188	Identifier	fputs		2298600	0					
ANR	2299189	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		2298600	1					
ANR	2299190	Argument	"""ERROR: Unable to allocate memory\\n"""		2298600	0					
ANR	2299191	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		2298600	0					
ANR	2299192	Argument	stderr		2298600	1					
ANR	2299193	Identifier	stderr		2298600	0					
ANR	2299194	ExpressionStatement	exit ( 1 )	280:4:6655:6662	2298600	1	True				
ANR	2299195	CallExpression	exit ( 1 )		2298600	0					
ANR	2299196	Callee	exit		2298600	0					
ANR	2299197	Identifier	exit		2298600	0					
ANR	2299198	ArgumentList	1		2298600	1					
ANR	2299199	Argument	1		2298600	0					
ANR	2299200	PrimaryExpression	1		2298600	0					
ANR	2299201	ForStatement	for ( plane = 1 ; plane < NumPlanes ; plane ++ )		2298600	8					
ANR	2299202	ForInit	plane = 1 ;	283:7:6676:6685	2298600	0	True				
ANR	2299203	AssignmentExpression	plane = 1		2298600	0		=			
ANR	2299204	Identifier	plane		2298600	0					
ANR	2299205	PrimaryExpression	1		2298600	1					
ANR	2299206	Condition	plane < NumPlanes	283:18:6687:6703	2298600	1	True				
ANR	2299207	RelationalExpression	plane < NumPlanes		2298600	0		<			
ANR	2299208	Identifier	plane		2298600	0					
ANR	2299209	Identifier	NumPlanes		2298600	1					
ANR	2299210	PostIncDecOperationExpression	plane ++	283:37:6706:6713	2298600	2	True				
ANR	2299211	Identifier	plane		2298600	0					
ANR	2299212	IncDec	++		2298600	1					
ANR	2299213	ExpressionStatement	Planes [ plane ] = Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes	284:4:6720:6792	2298600	3	True				
ANR	2299214	AssignmentExpression	Planes [ plane ] = Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes		2298600	0		=			
ANR	2299215	ArrayIndexing	Planes [ plane ]		2298600	0					
ANR	2299216	Identifier	Planes		2298600	0					
ANR	2299217	Identifier	plane		2298600	1					
ANR	2299218	AdditiveExpression	Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes		2298600	1		+			
ANR	2299219	ArrayIndexing	Planes [ 0 ]		2298600	0					
ANR	2299220	Identifier	Planes		2298600	0					
ANR	2299221	PrimaryExpression	0		2298600	1					
ANR	2299222	MultiplicativeExpression	plane * header -> cupsBytesPerLine / NumPlanes		2298600	1		*			
ANR	2299223	Identifier	plane		2298600	0					
ANR	2299224	MultiplicativeExpression	header -> cupsBytesPerLine / NumPlanes		2298600	1		/			
ANR	2299225	PtrMemberAccess	header -> cupsBytesPerLine		2298600	0					
ANR	2299226	Identifier	header		2298600	0					
ANR	2299227	Identifier	cupsBytesPerLine		2298600	1					
ANR	2299228	Identifier	NumPlanes		2298600	1					
ANR	2299229	IfStatement	if ( header -> cupsCompression || DotBytes )		2298600	9					
ANR	2299230	Condition	header -> cupsCompression || DotBytes	286:6:6801:6835	2298600	0	True				
ANR	2299231	OrExpression	header -> cupsCompression || DotBytes		2298600	0		||			
ANR	2299232	PtrMemberAccess	header -> cupsCompression		2298600	0					
ANR	2299233	Identifier	header		2298600	0					
ANR	2299234	Identifier	cupsCompression		2298600	1					
ANR	2299235	Identifier	DotBytes		2298600	1					
ANR	2299236	CompoundStatement		161:2:3577:3577	2298600	1					
ANR	2299237	IfStatement	"if ( ( CompBuffer = calloc ( 2 , header -> cupsWidth ) ) == NULL )"		2298600	0					
ANR	2299238	Condition	"( CompBuffer = calloc ( 2 , header -> cupsWidth ) ) == NULL"	288:8:6850:6900	2298600	0	True				
ANR	2299239	EqualityExpression	"( CompBuffer = calloc ( 2 , header -> cupsWidth ) ) == NULL"		2298600	0		==			
ANR	2299240	AssignmentExpression	"CompBuffer = calloc ( 2 , header -> cupsWidth )"		2298600	0		=			
ANR	2299241	Identifier	CompBuffer		2298600	0					
ANR	2299242	CallExpression	"calloc ( 2 , header -> cupsWidth )"		2298600	1					
ANR	2299243	Callee	calloc		2298600	0					
ANR	2299244	Identifier	calloc		2298600	0					
ANR	2299245	ArgumentList	2		2298600	1					
ANR	2299246	Argument	2		2298600	0					
ANR	2299247	PrimaryExpression	2		2298600	0					
ANR	2299248	Argument	header -> cupsWidth		2298600	1					
ANR	2299249	PtrMemberAccess	header -> cupsWidth		2298600	0					
ANR	2299250	Identifier	header		2298600	0					
ANR	2299251	Identifier	cupsWidth		2298600	1					
ANR	2299252	Identifier	NULL		2298600	1					
ANR	2299253	CompoundStatement		163:4:3644:3644	2298600	1					
ANR	2299254	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	290:6:6915:6966	2298600	0	True				
ANR	2299255	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		2298600	0					
ANR	2299256	Callee	fputs		2298600	0					
ANR	2299257	Identifier	fputs		2298600	0					
ANR	2299258	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		2298600	1					
ANR	2299259	Argument	"""ERROR: Unable to allocate memory\\n"""		2298600	0					
ANR	2299260	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		2298600	0					
ANR	2299261	Argument	stderr		2298600	1					
ANR	2299262	Identifier	stderr		2298600	0					
ANR	2299263	ExpressionStatement	exit ( 1 )	291:6:6974:6981	2298600	1	True				
ANR	2299264	CallExpression	exit ( 1 )		2298600	0					
ANR	2299265	Callee	exit		2298600	0					
ANR	2299266	Identifier	exit		2298600	0					
ANR	2299267	ArgumentList	1		2298600	1					
ANR	2299268	Argument	1		2298600	0					
ANR	2299269	PrimaryExpression	1		2298600	0					
ANR	2299270	ElseStatement	else		2298600	0					
ANR	2299271	ExpressionStatement	CompBuffer = NULL	295:4:7004:7021	2298600	0	True				
ANR	2299272	AssignmentExpression	CompBuffer = NULL		2298600	0		=			
ANR	2299273	Identifier	CompBuffer		2298600	0					
ANR	2299274	Identifier	NULL		2298600	1					
ANR	2299275	IfStatement	if ( DotBytes )		2298600	10					
ANR	2299276	Condition	DotBytes	297:6:7030:7037	2298600	0	True				
ANR	2299277	Identifier	DotBytes		2298600	0					
ANR	2299278	CompoundStatement		172:2:3779:3779	2298600	1					
ANR	2299279	IfStatement	"if ( ( LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) ) ) == NULL )"		2298600	0					
ANR	2299280	Condition	"( LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) ) ) == NULL"	299:8:7052:7164	2298600	0	True				
ANR	2299281	EqualityExpression	"( LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) ) ) == NULL"		2298600	0		==			
ANR	2299282	AssignmentExpression	"LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) )"		2298600	0		=			
ANR	2299283	ArrayIndexing	LineBuffers [ 0 ]		2298600	0					
ANR	2299284	Identifier	LineBuffers		2298600	0					
ANR	2299285	PrimaryExpression	0		2298600	1					
ANR	2299286	CallExpression	"calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) )"		2298600	1					
ANR	2299287	Callee	calloc		2298600	0					
ANR	2299288	Identifier	calloc		2298600	0					
ANR	2299289	ArgumentList	DotBytes		2298600	1					
ANR	2299290	Argument	DotBytes		2298600	0					
ANR	2299291	Identifier	DotBytes		2298600	0					
ANR	2299292	Argument	header -> cupsWidth * ( Shingling + 1 )		2298600	1					
ANR	2299293	MultiplicativeExpression	header -> cupsWidth * ( Shingling + 1 )		2298600	0		*			
ANR	2299294	PtrMemberAccess	header -> cupsWidth		2298600	0					
ANR	2299295	Identifier	header		2298600	0					
ANR	2299296	Identifier	cupsWidth		2298600	1					
ANR	2299297	AdditiveExpression	Shingling + 1		2298600	1		+			
ANR	2299298	Identifier	Shingling		2298600	0					
ANR	2299299	PrimaryExpression	1		2298600	1					
ANR	2299300	Identifier	NULL		2298600	1					
ANR	2299301	CompoundStatement		175:4:3908:3908	2298600	1					
ANR	2299302	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	302:6:7179:7230	2298600	0	True				
ANR	2299303	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		2298600	0					
ANR	2299304	Callee	fputs		2298600	0					
ANR	2299305	Identifier	fputs		2298600	0					
ANR	2299306	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		2298600	1					
ANR	2299307	Argument	"""ERROR: Unable to allocate memory\\n"""		2298600	0					
ANR	2299308	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		2298600	0					
ANR	2299309	Argument	stderr		2298600	1					
ANR	2299310	Identifier	stderr		2298600	0					
ANR	2299311	ExpressionStatement	exit ( 1 )	303:6:7238:7245	2298600	1	True				
ANR	2299312	CallExpression	exit ( 1 )		2298600	0					
ANR	2299313	Callee	exit		2298600	0					
ANR	2299314	Identifier	exit		2298600	0					
ANR	2299315	ArgumentList	1		2298600	1					
ANR	2299316	Argument	1		2298600	0					
ANR	2299317	PrimaryExpression	1		2298600	0					
ANR	2299318	ExpressionStatement	LineBuffers [ 1 ] = LineBuffers [ 0 ] + DotBytes * header -> cupsWidth	306:4:7258:7320	2298600	1	True				
ANR	2299319	AssignmentExpression	LineBuffers [ 1 ] = LineBuffers [ 0 ] + DotBytes * header -> cupsWidth		2298600	0		=			
ANR	2299320	ArrayIndexing	LineBuffers [ 1 ]		2298600	0					
ANR	2299321	Identifier	LineBuffers		2298600	0					
ANR	2299322	PrimaryExpression	1		2298600	1					
ANR	2299323	AdditiveExpression	LineBuffers [ 0 ] + DotBytes * header -> cupsWidth		2298600	1		+			
ANR	2299324	ArrayIndexing	LineBuffers [ 0 ]		2298600	0					
ANR	2299325	Identifier	LineBuffers		2298600	0					
ANR	2299326	PrimaryExpression	0		2298600	1					
ANR	2299327	MultiplicativeExpression	DotBytes * header -> cupsWidth		2298600	1		*			
ANR	2299328	Identifier	DotBytes		2298600	0					
ANR	2299329	PtrMemberAccess	header -> cupsWidth		2298600	1					
ANR	2299330	Identifier	header		2298600	0					
ANR	2299331	Identifier	cupsWidth		2298600	1					
ANR	2299332	ExpressionStatement	DotBit = 128	307:4:7326:7346	2298600	2	True				
ANR	2299333	AssignmentExpression	DotBit = 128		2298600	0		=			
ANR	2299334	Identifier	DotBit		2298600	0					
ANR	2299335	PrimaryExpression	128		2298600	1					
ANR	2299336	ExpressionStatement	LineCount = 0	308:4:7352:7370	2298600	3	True				
ANR	2299337	AssignmentExpression	LineCount = 0		2298600	0		=			
ANR	2299338	Identifier	LineCount		2298600	0					
ANR	2299339	PrimaryExpression	0		2298600	1					
ANR	2299340	ExpressionStatement	EvenOffset = 0	309:4:7376:7394	2298600	4	True				
ANR	2299341	AssignmentExpression	EvenOffset = 0		2298600	0		=			
ANR	2299342	Identifier	EvenOffset		2298600	0					
ANR	2299343	PrimaryExpression	0		2298600	1					
ANR	2299344	ExpressionStatement	OddOffset = 0	310:4:7400:7418	2298600	5	True				
ANR	2299345	AssignmentExpression	OddOffset = 0		2298600	0		=			
ANR	2299346	Identifier	OddOffset		2298600	0					
ANR	2299347	PrimaryExpression	0		2298600	1					
ANR	2299348	ReturnType	void		2298600	1					
ANR	2299349	Identifier	StartPage		2298600	2					
ANR	2299350	ParameterList	"const ppd_file_t * ppd , const cups_page_header2_t * header"		2298600	3					
ANR	2299351	Parameter	const ppd_file_t * ppd	125:4:3151:3179	2298600	0	True				
ANR	2299352	ParameterType	const ppd_file_t *		2298600	0					
ANR	2299353	Identifier	ppd		2298600	1					
ANR	2299354	Parameter	const cups_page_header2_t * header	126:4:3205:3237	2298600	1	True				
ANR	2299355	ParameterType	const cups_page_header2_t *		2298600	0					
ANR	2299356	Identifier	header		2298600	1					
ANR	2299357	CFGEntryNode	ENTRY		2298600		True				
ANR	2299358	CFGExitNode	EXIT		2298600		True				
ANR	2299359	Symbol	plane		2298600						
ANR	2299360	Symbol	LineCount		2298600						
ANR	2299361	Symbol	* ppd		2298600						
ANR	2299362	Symbol	Planes		2298600						
ANR	2299363	Symbol	* ppd -> sizes		2298600						
ANR	2299364	Symbol	CUPS_CSPACE_KCMYcm		2298600						
ANR	2299365	Symbol	OddOffset		2298600						
ANR	2299366	Symbol	Feed		2298600						
ANR	2299367	Symbol	NULL		2298600						
ANR	2299368	Symbol	CUPS_CSPACE_KCMY		2298600						
ANR	2299369	Symbol	header -> cupsWidth		2298600						
ANR	2299370	Symbol	stderr		2298600						
ANR	2299371	Symbol	* header		2298600						
ANR	2299372	Symbol	ppd -> sizes [ 1 ] . length		2298600						
ANR	2299373	Symbol	header -> cupsCompression		2298600						
ANR	2299374	Symbol	* Planes		2298600						
ANR	2299375	Symbol	DotBytes		2298600						
ANR	2299376	Symbol	strstr		2298600						
ANR	2299377	Symbol	* * ppd		2298600						
ANR	2299378	Symbol	header		2298600						
ANR	2299379	Symbol	header -> PageSize		2298600						
ANR	2299380	Symbol	header -> cupsRowCount		2298600						
ANR	2299381	Symbol	EPSON_ICOLOR		2298600						
ANR	2299382	Symbol	* header -> PageSize		2298600						
ANR	2299383	Symbol	calloc		2298600						
ANR	2299384	Symbol	* LineBuffers		2298600						
ANR	2299385	Symbol	header -> HWResolution		2298600						
ANR	2299386	Symbol	EvenOffset		2298600						
ANR	2299387	Symbol	header -> cupsBytesPerLine		2298600						
ANR	2299388	Symbol	* plane		2298600						
ANR	2299389	Symbol	EPSON_9PIN		2298600						
ANR	2299390	Symbol	malloc		2298600						
ANR	2299391	Symbol	ppd -> sizes		2298600						
ANR	2299392	Symbol	ppd		2298600						
ANR	2299393	Symbol	header -> cupsColorSpace		2298600						
ANR	2299394	Symbol	Shingling		2298600						
ANR	2299395	Symbol	ppd -> sizes [ 1 ] . top		2298600						
ANR	2299396	Symbol	ppd -> nickname		2298600						
ANR	2299397	Symbol	LineBuffers		2298600						
ANR	2299398	Symbol	n		2298600						
ANR	2299399	Symbol	NumPlanes		2298600						
ANR	2299400	Symbol	CompBuffer		2298600						
ANR	2299401	Symbol	* header -> HWResolution		2298600						
ANR	2299402	Symbol	* * header		2298600						
ANR	2299403	Symbol	t		2298600						
ANR	2299404	Symbol	Model		2298600						
ANR	2299405	Symbol	DotColumns		2298600						
ANR	2299406	Symbol	CUPS_CSPACE_CMY		2298600						
ANR	2299407	Symbol	DotBit		2298600						
ANR	2299408	Function	EndPage	319:0:7480:8162							
ANR	2299409	FunctionDef	EndPage (const cups_page_header2_t * header)		2299408	0					
ANR	2299410	CompoundStatement		322:0:7555:8162	2299408	0					
ANR	2299411	IfStatement	if ( DotBytes && header )		2299408	0					
ANR	2299412	Condition	DotBytes && header	323:6:7563:7580	2299408	0	True				
ANR	2299413	AndExpression	DotBytes && header		2299408	0		&&			
ANR	2299414	Identifier	DotBytes		2299408	0					
ANR	2299415	Identifier	header		2299408	1					
ANR	2299416	CompoundStatement		3:2:29:29	2299408	1					
ANR	2299417	IfStatement	if ( ! Shingling )		2299408	0					
ANR	2299418	Condition	! Shingling	329:8:7653:7662	2299408	0	True				
ANR	2299419	UnaryOperationExpression	! Shingling		2299408	0					
ANR	2299420	UnaryOperator	!		2299408	0					
ANR	2299421	Identifier	Shingling		2299408	1					
ANR	2299422	CompoundStatement		9:4:113:113	2299408	1					
ANR	2299423	IfStatement	if ( DotBit < 128 || EvenOffset )		2299408	0					
ANR	2299424	Condition	DotBit < 128 || EvenOffset	331:10:7681:7706	2299408	0	True				
ANR	2299425	OrExpression	DotBit < 128 || EvenOffset		2299408	0		||			
ANR	2299426	RelationalExpression	DotBit < 128		2299408	0		<			
ANR	2299427	Identifier	DotBit		2299408	0					
ANR	2299428	PrimaryExpression	128		2299408	1					
ANR	2299429	Identifier	EvenOffset		2299408	1					
ANR	2299430	ExpressionStatement	"OutputRows ( header , 0 )"	332:8:7717:7738	2299408	1	True				
ANR	2299431	CallExpression	"OutputRows ( header , 0 )"		2299408	0					
ANR	2299432	Callee	OutputRows		2299408	0					
ANR	2299433	Identifier	OutputRows		2299408	0					
ANR	2299434	ArgumentList	header		2299408	1					
ANR	2299435	Argument	header		2299408	0					
ANR	2299436	Identifier	header		2299408	0					
ANR	2299437	Argument	0		2299408	1					
ANR	2299438	PrimaryExpression	0		2299408	0					
ANR	2299439	ElseStatement	else		2299408	0					
ANR	2299440	IfStatement	if ( OddOffset > EvenOffset )		2299408	0					
ANR	2299441	Condition	OddOffset > EvenOffset	334:13:7759:7780	2299408	0	True				
ANR	2299442	RelationalExpression	OddOffset > EvenOffset		2299408	0		>			
ANR	2299443	Identifier	OddOffset		2299408	0					
ANR	2299444	Identifier	EvenOffset		2299408	1					
ANR	2299445	CompoundStatement		14:4:231:231	2299408	1					
ANR	2299446	ExpressionStatement	"OutputRows ( header , 1 )"	336:6:7795:7816	2299408	0	True				
ANR	2299447	CallExpression	"OutputRows ( header , 1 )"		2299408	0					
ANR	2299448	Callee	OutputRows		2299408	0					
ANR	2299449	Identifier	OutputRows		2299408	0					
ANR	2299450	ArgumentList	header		2299408	1					
ANR	2299451	Argument	header		2299408	0					
ANR	2299452	Identifier	header		2299408	0					
ANR	2299453	Argument	1		2299408	1					
ANR	2299454	PrimaryExpression	1		2299408	0					
ANR	2299455	ExpressionStatement	"OutputRows ( header , 0 )"	337:6:7824:7845	2299408	1	True				
ANR	2299456	CallExpression	"OutputRows ( header , 0 )"		2299408	0					
ANR	2299457	Callee	OutputRows		2299408	0					
ANR	2299458	Identifier	OutputRows		2299408	0					
ANR	2299459	ArgumentList	header		2299408	1					
ANR	2299460	Argument	header		2299408	0					
ANR	2299461	Identifier	header		2299408	0					
ANR	2299462	Argument	0		2299408	1					
ANR	2299463	PrimaryExpression	0		2299408	0					
ANR	2299464	ElseStatement	else		2299408	0					
ANR	2299465	CompoundStatement		19:4:310:310	2299408	0					
ANR	2299466	ExpressionStatement	"OutputRows ( header , 0 )"	341:6:7874:7895	2299408	0	True				
ANR	2299467	CallExpression	"OutputRows ( header , 0 )"		2299408	0					
ANR	2299468	Callee	OutputRows		2299408	0					
ANR	2299469	Identifier	OutputRows		2299408	0					
ANR	2299470	ArgumentList	header		2299408	1					
ANR	2299471	Argument	header		2299408	0					
ANR	2299472	Identifier	header		2299408	0					
ANR	2299473	Argument	0		2299408	1					
ANR	2299474	PrimaryExpression	0		2299408	0					
ANR	2299475	ExpressionStatement	"OutputRows ( header , 1 )"	342:6:7903:7924	2299408	1	True				
ANR	2299476	CallExpression	"OutputRows ( header , 1 )"		2299408	0					
ANR	2299477	Callee	OutputRows		2299408	0					
ANR	2299478	Identifier	OutputRows		2299408	0					
ANR	2299479	ArgumentList	header		2299408	1					
ANR	2299480	Argument	header		2299408	0					
ANR	2299481	Identifier	header		2299408	0					
ANR	2299482	Argument	1		2299408	1					
ANR	2299483	PrimaryExpression	1		2299408	0					
ANR	2299484	ExpressionStatement	putchar ( 12 )	350:2:7979:7990	2299408	1	True				
ANR	2299485	CallExpression	putchar ( 12 )		2299408	0					
ANR	2299486	Callee	putchar		2299408	0					
ANR	2299487	Identifier	putchar		2299408	0					
ANR	2299488	ArgumentList	12		2299408	1					
ANR	2299489	Argument	12		2299408	0					
ANR	2299490	PrimaryExpression	12		2299408	0					
ANR	2299491	ExpressionStatement	fflush ( stdout )	351:2:8013:8027	2299408	2	True				
ANR	2299492	CallExpression	fflush ( stdout )		2299408	0					
ANR	2299493	Callee	fflush		2299408	0					
ANR	2299494	Identifier	fflush		2299408	0					
ANR	2299495	ArgumentList	stdout		2299408	1					
ANR	2299496	Argument	stdout		2299408	0					
ANR	2299497	Identifier	stdout		2299408	0					
ANR	2299498	ExpressionStatement	free ( Planes [ 0 ] )	357:2:8061:8076	2299408	3	True				
ANR	2299499	CallExpression	free ( Planes [ 0 ] )		2299408	0					
ANR	2299500	Callee	free		2299408	0					
ANR	2299501	Identifier	free		2299408	0					
ANR	2299502	ArgumentList	Planes [ 0 ]		2299408	1					
ANR	2299503	Argument	Planes [ 0 ]		2299408	0					
ANR	2299504	ArrayIndexing	Planes [ 0 ]		2299408	0					
ANR	2299505	Identifier	Planes		2299408	0					
ANR	2299506	PrimaryExpression	0		2299408	1					
ANR	2299507	IfStatement	if ( CompBuffer )		2299408	4					
ANR	2299508	Condition	CompBuffer	359:6:8085:8094	2299408	0	True				
ANR	2299509	Identifier	CompBuffer		2299408	0					
ANR	2299510	ExpressionStatement	free ( CompBuffer )	360:4:8101:8117	2299408	1	True				
ANR	2299511	CallExpression	free ( CompBuffer )		2299408	0					
ANR	2299512	Callee	free		2299408	0					
ANR	2299513	Identifier	free		2299408	0					
ANR	2299514	ArgumentList	CompBuffer		2299408	1					
ANR	2299515	Argument	CompBuffer		2299408	0					
ANR	2299516	Identifier	CompBuffer		2299408	0					
ANR	2299517	IfStatement	if ( DotBytes )		2299408	5					
ANR	2299518	Condition	DotBytes	362:6:8126:8133	2299408	0	True				
ANR	2299519	Identifier	DotBytes		2299408	0					
ANR	2299520	ExpressionStatement	free ( LineBuffers [ 0 ] )	363:4:8140:8160	2299408	1	True				
ANR	2299521	CallExpression	free ( LineBuffers [ 0 ] )		2299408	0					
ANR	2299522	Callee	free		2299408	0					
ANR	2299523	Identifier	free		2299408	0					
ANR	2299524	ArgumentList	LineBuffers [ 0 ]		2299408	1					
ANR	2299525	Argument	LineBuffers [ 0 ]		2299408	0					
ANR	2299526	ArrayIndexing	LineBuffers [ 0 ]		2299408	0					
ANR	2299527	Identifier	LineBuffers		2299408	0					
ANR	2299528	PrimaryExpression	0		2299408	1					
ANR	2299529	ReturnType	void		2299408	1					
ANR	2299530	Identifier	EndPage		2299408	2					
ANR	2299531	ParameterList	const cups_page_header2_t * header		2299408	3					
ANR	2299532	Parameter	const cups_page_header2_t * header	321:4:7498:7530	2299408	0	True				
ANR	2299533	ParameterType	const cups_page_header2_t *		2299408	0					
ANR	2299534	Identifier	header		2299408	1					
ANR	2299535	CFGEntryNode	ENTRY		2299408		True				
ANR	2299536	CFGExitNode	EXIT		2299408		True				
ANR	2299537	Symbol	CompBuffer		2299408						
ANR	2299538	Symbol	* Planes		2299408						
ANR	2299539	Symbol	DotBytes		2299408						
ANR	2299540	Symbol	stdout		2299408						
ANR	2299541	Symbol	Planes		2299408						
ANR	2299542	Symbol	Shingling		2299408						
ANR	2299543	Symbol	header		2299408						
ANR	2299544	Symbol	EvenOffset		2299408						
ANR	2299545	Symbol	OddOffset		2299408						
ANR	2299546	Symbol	LineBuffers		2299408						
ANR	2299547	Symbol	DotBit		2299408						
ANR	2299548	Symbol	* LineBuffers		2299408						
ANR	2299549	Function	Shutdown	371:0:8214:8292							
ANR	2299550	FunctionDef	Shutdown ()		2299549	0					
ANR	2299551	CompoundStatement		373:0:8234:8292	2299549	0					
ANR	2299552	ExpressionStatement	"printf ( ""\\033@"" )"	378:2:8275:8290	2299549	0	True				
ANR	2299553	CallExpression	"printf ( ""\\033@"" )"		2299549	0					
ANR	2299554	Callee	printf		2299549	0					
ANR	2299555	Identifier	printf		2299549	0					
ANR	2299556	ArgumentList	"""\\033@"""		2299549	1					
ANR	2299557	Argument	"""\\033@"""		2299549	0					
ANR	2299558	PrimaryExpression	"""\\033@"""		2299549	0					
ANR	2299559	ReturnType	void		2299549	1					
ANR	2299560	Identifier	Shutdown		2299549	2					
ANR	2299561	ParameterList			2299549	3					
ANR	2299562	CFGEntryNode	ENTRY		2299549		True				
ANR	2299563	CFGExitNode	EXIT		2299549		True				
ANR	2299564	Function	CancelJob	386:0:8349:8424							
ANR	2299565	FunctionDef	CancelJob (int sig)		2299564	0					
ANR	2299566	CompoundStatement		388:0:8392:8424	2299564	0					
ANR	2299567	ExpressionStatement	( void ) sig	389:2:8396:8405	2299564	0	True				
ANR	2299568	CastExpression	( void ) sig		2299564	0					
ANR	2299569	CastTarget	void		2299564	0					
ANR	2299570	Identifier	sig		2299564	1					
ANR	2299571	ExpressionStatement	Canceled = 1	391:2:8410:8422	2299564	1	True				
ANR	2299572	AssignmentExpression	Canceled = 1		2299564	0		=			
ANR	2299573	Identifier	Canceled		2299564	0					
ANR	2299574	PrimaryExpression	1		2299564	1					
ANR	2299575	ReturnType	void		2299564	1					
ANR	2299576	Identifier	CancelJob		2299564	2					
ANR	2299577	ParameterList	int sig		2299564	3					
ANR	2299578	Parameter	int sig	387:10:8364:8370	2299564	0	True				
ANR	2299579	ParameterType	int		2299564	0					
ANR	2299580	Identifier	sig		2299564	1					
ANR	2299581	CFGEntryNode	ENTRY		2299564		True				
ANR	2299582	CFGExitNode	EXIT		2299564		True				
ANR	2299583	Symbol	sig		2299564						
ANR	2299584	Symbol	Canceled		2299564						
ANR	2299585	Function	CompressData	399:0:8487:12450							
ANR	2299586	FunctionDef	"CompressData (const unsigned char * line , int length , int plane , int type , int xstep , int ystep)"		2299585	0					
ANR	2299587	CompoundStatement		406:0:8854:12450	2299585	0					
ANR	2299588	IdentifierDeclStatement	"const unsigned char * line_ptr , * line_end , * start ;"	407:2:8858:8984	2299585	0	True				
ANR	2299589	IdentifierDecl	* line_ptr		2299585	0					
ANR	2299590	IdentifierDeclType	const unsigned char *		2299585	0					
ANR	2299591	Identifier	line_ptr		2299585	1					
ANR	2299592	IdentifierDecl	* line_end		2299585	1					
ANR	2299593	IdentifierDeclType	const unsigned char *		2299585	0					
ANR	2299594	Identifier	line_end		2299585	1					
ANR	2299595	IdentifierDecl	* start		2299585	2					
ANR	2299596	IdentifierDeclType	const unsigned char *		2299585	0					
ANR	2299597	Identifier	start		2299585	1					
ANR	2299598	IdentifierDeclStatement	"unsigned char * comp_ptr , temp ;"	410:2:9025:9101	2299585	1	True				
ANR	2299599	IdentifierDecl	* comp_ptr		2299585	0					
ANR	2299600	IdentifierDeclType	unsigned char *		2299585	0					
ANR	2299601	Identifier	comp_ptr		2299585	1					
ANR	2299602	IdentifierDecl	temp		2299585	1					
ANR	2299603	IdentifierDeclType	unsigned char		2299585	0					
ANR	2299604	Identifier	temp		2299585	1					
ANR	2299605	IdentifierDeclStatement	int count ;	412:2:9125:9145	2299585	2	True				
ANR	2299606	IdentifierDecl	count		2299585	0					
ANR	2299607	IdentifierDeclType	int		2299585	0					
ANR	2299608	Identifier	count		2299585	1					
ANR	2299609	Statement	static	413:2:9182:9187	2299585	3	True				
ANR	2299610	IdentifierDeclStatement	"int ctable [ 6 ] = { 0 , 2 , 1 , 4 , 18 , 17 } ;"	413:9:9189:9228	2299585	4	True				
ANR	2299611	IdentifierDecl	"ctable [ 6 ] = { 0 , 2 , 1 , 4 , 18 , 17 }"		2299585	0					
ANR	2299612	IdentifierDeclType	int [ 6 ]		2299585	0					
ANR	2299613	Identifier	ctable		2299585	1					
ANR	2299614	PrimaryExpression	6		2299585	2					
ANR	2299615	AssignmentExpression	"ctable [ 6 ] = { 0 , 2 , 1 , 4 , 18 , 17 }"		2299585	3		=			
ANR	2299616	Identifier	ctable		2299585	0					
ANR	2299617	InitializerList	0		2299585	1					
ANR	2299618	PrimaryExpression	0		2299585	0					
ANR	2299619	PrimaryExpression	2		2299585	1					
ANR	2299620	PrimaryExpression	1		2299585	2					
ANR	2299621	PrimaryExpression	4		2299585	3					
ANR	2299622	PrimaryExpression	18		2299585	4					
ANR	2299623	PrimaryExpression	17		2299585	5					
ANR	2299624	ExpressionStatement	line_ptr = line	421:2:9297:9312	2299585	5	True				
ANR	2299625	AssignmentExpression	line_ptr = line		2299585	0		=			
ANR	2299626	Identifier	line_ptr		2299585	0					
ANR	2299627	Identifier	line		2299585	1					
ANR	2299628	ExpressionStatement	line_end = line + length	422:2:9316:9340	2299585	6	True				
ANR	2299629	AssignmentExpression	line_end = line + length		2299585	0		=			
ANR	2299630	Identifier	line_end		2299585	0					
ANR	2299631	AdditiveExpression	line + length		2299585	1		+			
ANR	2299632	Identifier	line		2299585	0					
ANR	2299633	Identifier	length		2299585	1					
ANR	2299634	IfStatement	if ( ystep == 5 )		2299585	7					
ANR	2299635	Condition	ystep == 5	428:6:9400:9409	2299585	0	True				
ANR	2299636	EqualityExpression	ystep == 5		2299585	0		==			
ANR	2299637	Identifier	ystep		2299585	0					
ANR	2299638	PrimaryExpression	5		2299585	1					
ANR	2299639	CompoundStatement		24:2:559:559	2299585	1					
ANR	2299640	ForStatement	for ( comp_ptr = ( unsigned char * ) line ; comp_ptr < line_end ; )		2299585	0					
ANR	2299641	ForInit	comp_ptr = ( unsigned char * ) line ;	430:9:9425:9457	2299585	0	True				
ANR	2299642	AssignmentExpression	comp_ptr = ( unsigned char * ) line		2299585	0		=			
ANR	2299643	Identifier	comp_ptr		2299585	0					
ANR	2299644	CastExpression	( unsigned char * ) line		2299585	1					
ANR	2299645	CastTarget	unsigned char *		2299585	0					
ANR	2299646	Identifier	line		2299585	1					
ANR	2299647	Condition	comp_ptr < line_end	430:43:9459:9477	2299585	1	True				
ANR	2299648	RelationalExpression	comp_ptr < line_end		2299585	0		<			
ANR	2299649	Identifier	comp_ptr		2299585	0					
ANR	2299650	Identifier	line_end		2299585	1					
ANR	2299651	CompoundStatement		26:4:630:630	2299585	2					
ANR	2299652	ExpressionStatement	temp = * comp_ptr	436:6:9544:9560	2299585	0	True				
ANR	2299653	AssignmentExpression	temp = * comp_ptr		2299585	0		=			
ANR	2299654	Identifier	temp		2299585	0					
ANR	2299655	UnaryOperationExpression	* comp_ptr		2299585	1					
ANR	2299656	UnaryOperator	*		2299585	0					
ANR	2299657	Identifier	comp_ptr		2299585	1					
ANR	2299658	IfStatement	if ( ( temp & 0xc0 ) == 0xc0 )		2299585	1					
ANR	2299659	Condition	( temp & 0xc0 ) == 0xc0	442:10:9622:9642	2299585	0	True				
ANR	2299660	EqualityExpression	( temp & 0xc0 ) == 0xc0		2299585	0		==			
ANR	2299661	BitAndExpression	temp & 0xc0		2299585	0		&			
ANR	2299662	Identifier	temp		2299585	0					
ANR	2299663	PrimaryExpression	0xc0		2299585	1					
ANR	2299664	PrimaryExpression	0xc0		2299585	1					
ANR	2299665	ExpressionStatement	temp &= 0xbf	443:8:9653:9665	2299585	1	True				
ANR	2299666	AssignmentExpression	temp &= 0xbf		2299585	0		&=			
ANR	2299667	Identifier	temp		2299585	0					
ANR	2299668	PrimaryExpression	0xbf		2299585	1					
ANR	2299669	IfStatement	if ( ( temp & 0x60 ) == 0x60 )		2299585	2					
ANR	2299670	Condition	( temp & 0x60 ) == 0x60	444:10:9677:9697	2299585	0	True				
ANR	2299671	EqualityExpression	( temp & 0x60 ) == 0x60		2299585	0		==			
ANR	2299672	BitAndExpression	temp & 0x60		2299585	0		&			
ANR	2299673	Identifier	temp		2299585	0					
ANR	2299674	PrimaryExpression	0x60		2299585	1					
ANR	2299675	PrimaryExpression	0x60		2299585	1					
ANR	2299676	ExpressionStatement	temp &= 0xdf	445:8:9708:9720	2299585	1	True				
ANR	2299677	AssignmentExpression	temp &= 0xdf		2299585	0		&=			
ANR	2299678	Identifier	temp		2299585	0					
ANR	2299679	PrimaryExpression	0xdf		2299585	1					
ANR	2299680	IfStatement	if ( ( temp & 0x30 ) == 0x30 )		2299585	3					
ANR	2299681	Condition	( temp & 0x30 ) == 0x30	446:10:9732:9752	2299585	0	True				
ANR	2299682	EqualityExpression	( temp & 0x30 ) == 0x30		2299585	0		==			
ANR	2299683	BitAndExpression	temp & 0x30		2299585	0		&			
ANR	2299684	Identifier	temp		2299585	0					
ANR	2299685	PrimaryExpression	0x30		2299585	1					
ANR	2299686	PrimaryExpression	0x30		2299585	1					
ANR	2299687	ExpressionStatement	temp &= 0xef	447:8:9763:9775	2299585	1	True				
ANR	2299688	AssignmentExpression	temp &= 0xef		2299585	0		&=			
ANR	2299689	Identifier	temp		2299585	0					
ANR	2299690	PrimaryExpression	0xef		2299585	1					
ANR	2299691	IfStatement	if ( ( temp & 0x18 ) == 0x18 )		2299585	4					
ANR	2299692	Condition	( temp & 0x18 ) == 0x18	448:10:9787:9807	2299585	0	True				
ANR	2299693	EqualityExpression	( temp & 0x18 ) == 0x18		2299585	0		==			
ANR	2299694	BitAndExpression	temp & 0x18		2299585	0		&			
ANR	2299695	Identifier	temp		2299585	0					
ANR	2299696	PrimaryExpression	0x18		2299585	1					
ANR	2299697	PrimaryExpression	0x18		2299585	1					
ANR	2299698	ExpressionStatement	temp &= 0xf7	449:8:9818:9830	2299585	1	True				
ANR	2299699	AssignmentExpression	temp &= 0xf7		2299585	0		&=			
ANR	2299700	Identifier	temp		2299585	0					
ANR	2299701	PrimaryExpression	0xf7		2299585	1					
ANR	2299702	IfStatement	if ( ( temp & 0x0c ) == 0x0c )		2299585	5					
ANR	2299703	Condition	( temp & 0x0c ) == 0x0c	450:10:9842:9862	2299585	0	True				
ANR	2299704	EqualityExpression	( temp & 0x0c ) == 0x0c		2299585	0		==			
ANR	2299705	BitAndExpression	temp & 0x0c		2299585	0		&			
ANR	2299706	Identifier	temp		2299585	0					
ANR	2299707	PrimaryExpression	0x0c		2299585	1					
ANR	2299708	PrimaryExpression	0x0c		2299585	1					
ANR	2299709	ExpressionStatement	temp &= 0xfb	451:8:9873:9885	2299585	1	True				
ANR	2299710	AssignmentExpression	temp &= 0xfb		2299585	0		&=			
ANR	2299711	Identifier	temp		2299585	0					
ANR	2299712	PrimaryExpression	0xfb		2299585	1					
ANR	2299713	IfStatement	if ( ( temp & 0x06 ) == 0x06 )		2299585	6					
ANR	2299714	Condition	( temp & 0x06 ) == 0x06	452:10:9897:9917	2299585	0	True				
ANR	2299715	EqualityExpression	( temp & 0x06 ) == 0x06		2299585	0		==			
ANR	2299716	BitAndExpression	temp & 0x06		2299585	0		&			
ANR	2299717	Identifier	temp		2299585	0					
ANR	2299718	PrimaryExpression	0x06		2299585	1					
ANR	2299719	PrimaryExpression	0x06		2299585	1					
ANR	2299720	ExpressionStatement	temp &= 0xfd	453:8:9928:9940	2299585	1	True				
ANR	2299721	AssignmentExpression	temp &= 0xfd		2299585	0		&=			
ANR	2299722	Identifier	temp		2299585	0					
ANR	2299723	PrimaryExpression	0xfd		2299585	1					
ANR	2299724	IfStatement	if ( ( temp & 0x03 ) == 0x03 )		2299585	7					
ANR	2299725	Condition	( temp & 0x03 ) == 0x03	454:10:9952:9972	2299585	0	True				
ANR	2299726	EqualityExpression	( temp & 0x03 ) == 0x03		2299585	0		==			
ANR	2299727	BitAndExpression	temp & 0x03		2299585	0		&			
ANR	2299728	Identifier	temp		2299585	0					
ANR	2299729	PrimaryExpression	0x03		2299585	1					
ANR	2299730	PrimaryExpression	0x03		2299585	1					
ANR	2299731	ExpressionStatement	temp &= 0xfe	455:8:9983:9995	2299585	1	True				
ANR	2299732	AssignmentExpression	temp &= 0xfe		2299585	0		&=			
ANR	2299733	Identifier	temp		2299585	0					
ANR	2299734	PrimaryExpression	0xfe		2299585	1					
ANR	2299735	ExpressionStatement	* comp_ptr ++ = temp	457:6:10004:10022	2299585	8	True				
ANR	2299736	AssignmentExpression	* comp_ptr ++ = temp		2299585	0		=			
ANR	2299737	UnaryOperationExpression	* comp_ptr ++		2299585	0					
ANR	2299738	UnaryOperator	*		2299585	0					
ANR	2299739	PostIncDecOperationExpression	comp_ptr ++		2299585	1					
ANR	2299740	Identifier	comp_ptr		2299585	0					
ANR	2299741	IncDec	++		2299585	1					
ANR	2299742	Identifier	temp		2299585	1					
ANR	2299743	IfStatement	if ( ( temp & 0x01 ) && comp_ptr < line_end && * comp_ptr & 0x80 )		2299585	9					
ANR	2299744	Condition	( temp & 0x01 ) && comp_ptr < line_end && * comp_ptr & 0x80	464:10:10146:10201	2299585	0	True				
ANR	2299745	AndExpression	( temp & 0x01 ) && comp_ptr < line_end && * comp_ptr & 0x80		2299585	0		&&			
ANR	2299746	BitAndExpression	temp & 0x01		2299585	0		&			
ANR	2299747	Identifier	temp		2299585	0					
ANR	2299748	PrimaryExpression	0x01		2299585	1					
ANR	2299749	AndExpression	comp_ptr < line_end && * comp_ptr & 0x80		2299585	1		&&			
ANR	2299750	RelationalExpression	comp_ptr < line_end		2299585	0		<			
ANR	2299751	Identifier	comp_ptr		2299585	0					
ANR	2299752	Identifier	line_end		2299585	1					
ANR	2299753	BitAndExpression	* comp_ptr & 0x80		2299585	1		&			
ANR	2299754	UnaryOperationExpression	* comp_ptr		2299585	0					
ANR	2299755	UnaryOperator	*		2299585	0					
ANR	2299756	Identifier	comp_ptr		2299585	1					
ANR	2299757	PrimaryExpression	0x80		2299585	1					
ANR	2299758	ExpressionStatement	* comp_ptr &= 0x7f	465:8:10212:10229	2299585	1	True				
ANR	2299759	AssignmentExpression	* comp_ptr &= 0x7f		2299585	0		&=			
ANR	2299760	UnaryOperationExpression	* comp_ptr		2299585	0					
ANR	2299761	UnaryOperator	*		2299585	0					
ANR	2299762	Identifier	comp_ptr		2299585	1					
ANR	2299763	PrimaryExpression	0x7f		2299585	1					
ANR	2299764	SwitchStatement	switch ( type )		2299585	8					
ANR	2299765	Condition	type	469:10:10252:10255	2299585	0	True				
ANR	2299766	Identifier	type		2299585	0					
ANR	2299767	CompoundStatement		65:2:1405:1405	2299585	1					
ANR	2299768	Label	case 0 :	471:4:10266:10273	2299585	0	True				
ANR	2299769	BreakStatement	break ;	475:1:10314:10319	2299585	1	True				
ANR	2299770	Label	case 1 :	477:4:10326:10333	2299585	2	True				
ANR	2299771	ExpressionStatement	comp_ptr = CompBuffer	482:1:10398:10419	2299585	3	True				
ANR	2299772	AssignmentExpression	comp_ptr = CompBuffer		2299585	0		=			
ANR	2299773	Identifier	comp_ptr		2299585	0					
ANR	2299774	Identifier	CompBuffer		2299585	1					
ANR	2299775	WhileStatement	while ( line_ptr < line_end )		2299585	4					
ANR	2299776	Condition	line_ptr < line_end	484:8:10430:10448	2299585	0	True				
ANR	2299777	RelationalExpression	line_ptr < line_end		2299585	0		<			
ANR	2299778	Identifier	line_ptr		2299585	0					
ANR	2299779	Identifier	line_end		2299585	1					
ANR	2299780	CompoundStatement		80:1:1597:1597	2299585	1					
ANR	2299781	IfStatement	if ( ( line_ptr + 1 ) >= line_end )		2299585	0					
ANR	2299782	Condition	( line_ptr + 1 ) >= line_end	486:7:10461:10486	2299585	0	True				
ANR	2299783	RelationalExpression	( line_ptr + 1 ) >= line_end		2299585	0		>=			
ANR	2299784	AdditiveExpression	line_ptr + 1		2299585	0		+			
ANR	2299785	Identifier	line_ptr		2299585	0					
ANR	2299786	PrimaryExpression	1		2299585	1					
ANR	2299787	Identifier	line_end		2299585	1					
ANR	2299788	CompoundStatement		82:3:1637:1637	2299585	1					
ANR	2299789	ExpressionStatement	* comp_ptr ++ = 0x00	492:5:10548:10566	2299585	0	True				
ANR	2299790	AssignmentExpression	* comp_ptr ++ = 0x00		2299585	0		=			
ANR	2299791	UnaryOperationExpression	* comp_ptr ++		2299585	0					
ANR	2299792	UnaryOperator	*		2299585	0					
ANR	2299793	PostIncDecOperationExpression	comp_ptr ++		2299585	1					
ANR	2299794	Identifier	comp_ptr		2299585	0					
ANR	2299795	IncDec	++		2299585	1					
ANR	2299796	PrimaryExpression	0x00		2299585	1					
ANR	2299797	ExpressionStatement	* comp_ptr ++ = * line_ptr ++	493:5:10573:10598	2299585	1	True				
ANR	2299798	AssignmentExpression	* comp_ptr ++ = * line_ptr ++		2299585	0		=			
ANR	2299799	UnaryOperationExpression	* comp_ptr ++		2299585	0					
ANR	2299800	UnaryOperator	*		2299585	0					
ANR	2299801	PostIncDecOperationExpression	comp_ptr ++		2299585	1					
ANR	2299802	Identifier	comp_ptr		2299585	0					
ANR	2299803	IncDec	++		2299585	1					
ANR	2299804	UnaryOperationExpression	* line_ptr ++		2299585	1					
ANR	2299805	UnaryOperator	*		2299585	0					
ANR	2299806	PostIncDecOperationExpression	line_ptr ++		2299585	1					
ANR	2299807	Identifier	line_ptr		2299585	0					
ANR	2299808	IncDec	++		2299585	1					
ANR	2299809	ElseStatement	else		2299585	0					
ANR	2299810	IfStatement	if ( line_ptr [ 0 ] == line_ptr [ 1 ] )		2299585	0					
ANR	2299811	Condition	line_ptr [ 0 ] == line_ptr [ 1 ]	495:12:10617:10642	2299585	0	True				
ANR	2299812	EqualityExpression	line_ptr [ 0 ] == line_ptr [ 1 ]		2299585	0		==			
ANR	2299813	ArrayIndexing	line_ptr [ 0 ]		2299585	0					
ANR	2299814	Identifier	line_ptr		2299585	0					
ANR	2299815	PrimaryExpression	0		2299585	1					
ANR	2299816	ArrayIndexing	line_ptr [ 1 ]		2299585	1					
ANR	2299817	Identifier	line_ptr		2299585	0					
ANR	2299818	PrimaryExpression	1		2299585	1					
ANR	2299819	CompoundStatement		91:3:1793:1793	2299585	1					
ANR	2299820	ExpressionStatement	line_ptr ++	501:5:10699:10710	2299585	0	True				
ANR	2299821	PostIncDecOperationExpression	line_ptr ++		2299585	0					
ANR	2299822	Identifier	line_ptr		2299585	0					
ANR	2299823	IncDec	++		2299585	1					
ANR	2299824	ExpressionStatement	count = 2	502:5:10717:10726	2299585	1	True				
ANR	2299825	AssignmentExpression	count = 2		2299585	0		=			
ANR	2299826	Identifier	count		2299585	0					
ANR	2299827	PrimaryExpression	2		2299585	1					
ANR	2299828	WhileStatement	while ( line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127 )		2299585	2					
ANR	2299829	Condition	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127	504:12:10741:10834	2299585	0	True				
ANR	2299830	AndExpression	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127		2299585	0		&&			
ANR	2299831	RelationalExpression	line_ptr < ( line_end - 1 )		2299585	0		<			
ANR	2299832	Identifier	line_ptr		2299585	0					
ANR	2299833	AdditiveExpression	line_end - 1		2299585	1		-			
ANR	2299834	Identifier	line_end		2299585	0					
ANR	2299835	PrimaryExpression	1		2299585	1					
ANR	2299836	AndExpression	line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127		2299585	1		&&			
ANR	2299837	EqualityExpression	line_ptr [ 0 ] == line_ptr [ 1 ]		2299585	0		==			
ANR	2299838	ArrayIndexing	line_ptr [ 0 ]		2299585	0					
ANR	2299839	Identifier	line_ptr		2299585	0					
ANR	2299840	PrimaryExpression	0		2299585	1					
ANR	2299841	ArrayIndexing	line_ptr [ 1 ]		2299585	1					
ANR	2299842	Identifier	line_ptr		2299585	0					
ANR	2299843	PrimaryExpression	1		2299585	1					
ANR	2299844	RelationalExpression	count < 127		2299585	1		<			
ANR	2299845	Identifier	count		2299585	0					
ANR	2299846	PrimaryExpression	127		2299585	1					
ANR	2299847	CompoundStatement		102:5:1987:1987	2299585	1					
ANR	2299848	ExpressionStatement	line_ptr ++	508:14:10858:10869	2299585	0	True				
ANR	2299849	PostIncDecOperationExpression	line_ptr ++		2299585	0					
ANR	2299850	Identifier	line_ptr		2299585	0					
ANR	2299851	IncDec	++		2299585	1					
ANR	2299852	ExpressionStatement	count ++	509:14:10885:10893	2299585	1	True				
ANR	2299853	PostIncDecOperationExpression	count ++		2299585	0					
ANR	2299854	Identifier	count		2299585	0					
ANR	2299855	IncDec	++		2299585	1					
ANR	2299856	ExpressionStatement	* comp_ptr ++ = 257 - count	512:5:10908:10933	2299585	3	True				
ANR	2299857	AssignmentExpression	* comp_ptr ++ = 257 - count		2299585	0		=			
ANR	2299858	UnaryOperationExpression	* comp_ptr ++		2299585	0					
ANR	2299859	UnaryOperator	*		2299585	0					
ANR	2299860	PostIncDecOperationExpression	comp_ptr ++		2299585	1					
ANR	2299861	Identifier	comp_ptr		2299585	0					
ANR	2299862	IncDec	++		2299585	1					
ANR	2299863	AdditiveExpression	257 - count		2299585	1		-			
ANR	2299864	PrimaryExpression	257		2299585	0					
ANR	2299865	Identifier	count		2299585	1					
ANR	2299866	ExpressionStatement	* comp_ptr ++ = * line_ptr ++	513:5:10940:10965	2299585	4	True				
ANR	2299867	AssignmentExpression	* comp_ptr ++ = * line_ptr ++		2299585	0		=			
ANR	2299868	UnaryOperationExpression	* comp_ptr ++		2299585	0					
ANR	2299869	UnaryOperator	*		2299585	0					
ANR	2299870	PostIncDecOperationExpression	comp_ptr ++		2299585	1					
ANR	2299871	Identifier	comp_ptr		2299585	0					
ANR	2299872	IncDec	++		2299585	1					
ANR	2299873	UnaryOperationExpression	* line_ptr ++		2299585	1					
ANR	2299874	UnaryOperator	*		2299585	0					
ANR	2299875	PostIncDecOperationExpression	line_ptr ++		2299585	1					
ANR	2299876	Identifier	line_ptr		2299585	0					
ANR	2299877	IncDec	++		2299585	1					
ANR	2299878	ElseStatement	else		2299585	0					
ANR	2299879	CompoundStatement		111:3:2128:2128	2299585	0					
ANR	2299880	ExpressionStatement	start = line_ptr	521:5:11038:11057	2299585	0	True				
ANR	2299881	AssignmentExpression	start = line_ptr		2299585	0		=			
ANR	2299882	Identifier	start		2299585	0					
ANR	2299883	Identifier	line_ptr		2299585	1					
ANR	2299884	ExpressionStatement	line_ptr ++	522:5:11064:11075	2299585	1	True				
ANR	2299885	PostIncDecOperationExpression	line_ptr ++		2299585	0					
ANR	2299886	Identifier	line_ptr		2299585	0					
ANR	2299887	IncDec	++		2299585	1					
ANR	2299888	ExpressionStatement	count = 1	523:5:11082:11094	2299585	2	True				
ANR	2299889	AssignmentExpression	count = 1		2299585	0		=			
ANR	2299890	Identifier	count		2299585	0					
ANR	2299891	PrimaryExpression	1		2299585	1					
ANR	2299892	WhileStatement	while ( line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127 )		2299585	3					
ANR	2299893	Condition	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127	525:12:11109:11202	2299585	0	True				
ANR	2299894	AndExpression	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127		2299585	0		&&			
ANR	2299895	RelationalExpression	line_ptr < ( line_end - 1 )		2299585	0		<			
ANR	2299896	Identifier	line_ptr		2299585	0					
ANR	2299897	AdditiveExpression	line_end - 1		2299585	1		-			
ANR	2299898	Identifier	line_end		2299585	0					
ANR	2299899	PrimaryExpression	1		2299585	1					
ANR	2299900	AndExpression	line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127		2299585	1		&&			
ANR	2299901	EqualityExpression	line_ptr [ 0 ] != line_ptr [ 1 ]		2299585	0		!=			
ANR	2299902	ArrayIndexing	line_ptr [ 0 ]		2299585	0					
ANR	2299903	Identifier	line_ptr		2299585	0					
ANR	2299904	PrimaryExpression	0		2299585	1					
ANR	2299905	ArrayIndexing	line_ptr [ 1 ]		2299585	1					
ANR	2299906	Identifier	line_ptr		2299585	0					
ANR	2299907	PrimaryExpression	1		2299585	1					
ANR	2299908	RelationalExpression	count < 127		2299585	1		<			
ANR	2299909	Identifier	count		2299585	0					
ANR	2299910	PrimaryExpression	127		2299585	1					
ANR	2299911	CompoundStatement		123:5:2355:2355	2299585	1					
ANR	2299912	ExpressionStatement	line_ptr ++	529:14:11226:11237	2299585	0	True				
ANR	2299913	PostIncDecOperationExpression	line_ptr ++		2299585	0					
ANR	2299914	Identifier	line_ptr		2299585	0					
ANR	2299915	IncDec	++		2299585	1					
ANR	2299916	ExpressionStatement	count ++	530:14:11253:11261	2299585	1	True				
ANR	2299917	PostIncDecOperationExpression	count ++		2299585	0					
ANR	2299918	Identifier	count		2299585	0					
ANR	2299919	IncDec	++		2299585	1					
ANR	2299920	ExpressionStatement	* comp_ptr ++ = count - 1	533:5:11276:11299	2299585	4	True				
ANR	2299921	AssignmentExpression	* comp_ptr ++ = count - 1		2299585	0		=			
ANR	2299922	UnaryOperationExpression	* comp_ptr ++		2299585	0					
ANR	2299923	UnaryOperator	*		2299585	0					
ANR	2299924	PostIncDecOperationExpression	comp_ptr ++		2299585	1					
ANR	2299925	Identifier	comp_ptr		2299585	0					
ANR	2299926	IncDec	++		2299585	1					
ANR	2299927	AdditiveExpression	count - 1		2299585	1		-			
ANR	2299928	Identifier	count		2299585	0					
ANR	2299929	PrimaryExpression	1		2299585	1					
ANR	2299930	ExpressionStatement	"memcpy ( comp_ptr , start , count )"	535:5:11307:11337	2299585	5	True				
ANR	2299931	CallExpression	"memcpy ( comp_ptr , start , count )"		2299585	0					
ANR	2299932	Callee	memcpy		2299585	0					
ANR	2299933	Identifier	memcpy		2299585	0					
ANR	2299934	ArgumentList	comp_ptr		2299585	1					
ANR	2299935	Argument	comp_ptr		2299585	0					
ANR	2299936	Identifier	comp_ptr		2299585	0					
ANR	2299937	Argument	start		2299585	1					
ANR	2299938	Identifier	start		2299585	0					
ANR	2299939	Argument	count		2299585	2					
ANR	2299940	Identifier	count		2299585	0					
ANR	2299941	ExpressionStatement	comp_ptr += count	536:5:11344:11361	2299585	6	True				
ANR	2299942	AssignmentExpression	comp_ptr += count		2299585	0		+=			
ANR	2299943	Identifier	comp_ptr		2299585	0					
ANR	2299944	Identifier	count		2299585	1					
ANR	2299945	ExpressionStatement	line_ptr = CompBuffer	540:8:11380:11401	2299585	5	True				
ANR	2299946	AssignmentExpression	line_ptr = CompBuffer		2299585	0		=			
ANR	2299947	Identifier	line_ptr		2299585	0					
ANR	2299948	Identifier	CompBuffer		2299585	1					
ANR	2299949	ExpressionStatement	line_end = comp_ptr	541:8:11411:11430	2299585	6	True				
ANR	2299950	AssignmentExpression	line_end = comp_ptr		2299585	0		=			
ANR	2299951	Identifier	line_end		2299585	0					
ANR	2299952	Identifier	comp_ptr		2299585	1					
ANR	2299953	BreakStatement	break ;	542:1:11433:11438	2299585	7	True				
ANR	2299954	ExpressionStatement	putchar ( 0x0d )	545:2:11447:11460	2299585	9	True				
ANR	2299955	CallExpression	putchar ( 0x0d )		2299585	0					
ANR	2299956	Callee	putchar		2299585	0					
ANR	2299957	Identifier	putchar		2299585	0					
ANR	2299958	ArgumentList	0x0d		2299585	1					
ANR	2299959	Argument	0x0d		2299585	0					
ANR	2299960	PrimaryExpression	0x0d		2299585	0					
ANR	2299961	IfStatement	if ( Model < EPSON_ICOLOR )		2299585	10					
ANR	2299962	Condition	Model < EPSON_ICOLOR	547:6:11508:11527	2299585	0	True				
ANR	2299963	RelationalExpression	Model < EPSON_ICOLOR		2299585	0		<			
ANR	2299964	Identifier	Model		2299585	0					
ANR	2299965	Identifier	EPSON_ICOLOR		2299585	1					
ANR	2299966	CompoundStatement		143:2:2677:2677	2299585	1					
ANR	2299967	IfStatement	if ( NumPlanes > 1 )		2299585	0					
ANR	2299968	Condition	NumPlanes > 1	553:8:11591:11603	2299585	0	True				
ANR	2299969	RelationalExpression	NumPlanes > 1		2299585	0		>			
ANR	2299970	Identifier	NumPlanes		2299585	0					
ANR	2299971	PrimaryExpression	1		2299585	1					
ANR	2299972	CompoundStatement		149:4:2755:2755	2299585	1					
ANR	2299973	IfStatement	if ( plane > 3 )		2299585	0					
ANR	2299974	Condition	plane > 3	559:10:11665:11673	2299585	0	True				
ANR	2299975	RelationalExpression	plane > 3		2299585	0		>			
ANR	2299976	Identifier	plane		2299585	0					
ANR	2299977	PrimaryExpression	3		2299585	1					
ANR	2299978	ExpressionStatement	"printf ( ""\\033(r%c%c%c%c"" , 2 , 0 , 1 , ctable [ plane ] & 15 )"	560:1:11677:11730	2299585	1	True				
ANR	2299979	CallExpression	"printf ( ""\\033(r%c%c%c%c"" , 2 , 0 , 1 , ctable [ plane ] & 15 )"		2299585	0					
ANR	2299980	Callee	printf		2299585	0					
ANR	2299981	Identifier	printf		2299585	0					
ANR	2299982	ArgumentList	"""\\033(r%c%c%c%c"""		2299585	1					
ANR	2299983	Argument	"""\\033(r%c%c%c%c"""		2299585	0					
ANR	2299984	PrimaryExpression	"""\\033(r%c%c%c%c"""		2299585	0					
ANR	2299985	Argument	2		2299585	1					
ANR	2299986	PrimaryExpression	2		2299585	0					
ANR	2299987	Argument	0		2299585	2					
ANR	2299988	PrimaryExpression	0		2299585	0					
ANR	2299989	Argument	1		2299585	3					
ANR	2299990	PrimaryExpression	1		2299585	0					
ANR	2299991	Argument	ctable [ plane ] & 15		2299585	4					
ANR	2299992	BitAndExpression	ctable [ plane ] & 15		2299585	0		&			
ANR	2299993	ArrayIndexing	ctable [ plane ]		2299585	0					
ANR	2299994	Identifier	ctable		2299585	0					
ANR	2299995	Identifier	plane		2299585	1					
ANR	2299996	PrimaryExpression	15		2299585	1					
ANR	2299997	ElseStatement	else		2299585	0					
ANR	2299998	IfStatement	if ( NumPlanes == 3 )		2299585	0					
ANR	2299999	Condition	NumPlanes == 3	562:15:11779:11792	2299585	0	True				
ANR	2300000	EqualityExpression	NumPlanes == 3		2299585	0		==			
ANR	2300001	Identifier	NumPlanes		2299585	0					
ANR	2300002	PrimaryExpression	3		2299585	1					
ANR	2300003	ExpressionStatement	"printf ( ""\\033r%c"" , ctable [ plane + 1 ] )"	563:1:11796:11832	2299585	1	True				
ANR	2300004	CallExpression	"printf ( ""\\033r%c"" , ctable [ plane + 1 ] )"		2299585	0					
ANR	2300005	Callee	printf		2299585	0					
ANR	2300006	Identifier	printf		2299585	0					
ANR	2300007	ArgumentList	"""\\033r%c"""		2299585	1					
ANR	2300008	Argument	"""\\033r%c"""		2299585	0					
ANR	2300009	PrimaryExpression	"""\\033r%c"""		2299585	0					
ANR	2300010	Argument	ctable [ plane + 1 ]		2299585	1					
ANR	2300011	ArrayIndexing	ctable [ plane + 1 ]		2299585	0					
ANR	2300012	Identifier	ctable		2299585	0					
ANR	2300013	AdditiveExpression	plane + 1		2299585	1		+			
ANR	2300014	Identifier	plane		2299585	0					
ANR	2300015	PrimaryExpression	1		2299585	1					
ANR	2300016	ElseStatement	else		2299585	0					
ANR	2300017	ExpressionStatement	"printf ( ""\\033r%c"" , ctable [ plane ] )"	566:1:11869:11901	2299585	0	True				
ANR	2300018	CallExpression	"printf ( ""\\033r%c"" , ctable [ plane ] )"		2299585	0					
ANR	2300019	Callee	printf		2299585	0					
ANR	2300020	Identifier	printf		2299585	0					
ANR	2300021	ArgumentList	"""\\033r%c"""		2299585	1					
ANR	2300022	Argument	"""\\033r%c"""		2299585	0					
ANR	2300023	PrimaryExpression	"""\\033r%c"""		2299585	0					
ANR	2300024	Argument	ctable [ plane ]		2299585	1					
ANR	2300025	ArrayIndexing	ctable [ plane ]		2299585	0					
ANR	2300026	Identifier	ctable		2299585	0					
ANR	2300027	Identifier	plane		2299585	1					
ANR	2300028	ExpressionStatement	length *= 8	573:4:11973:11984	2299585	1	True				
ANR	2300029	AssignmentExpression	length *= 8		2299585	0		*=			
ANR	2300030	Identifier	length		2299585	0					
ANR	2300031	PrimaryExpression	8		2299585	1					
ANR	2300032	ExpressionStatement	"printf ( ""\\033."" )"	574:4:11990:12005	2299585	2	True				
ANR	2300033	CallExpression	"printf ( ""\\033."" )"		2299585	0					
ANR	2300034	Callee	printf		2299585	0					
ANR	2300035	Identifier	printf		2299585	0					
ANR	2300036	ArgumentList	"""\\033."""		2299585	1					
ANR	2300037	Argument	"""\\033."""		2299585	0					
ANR	2300038	PrimaryExpression	"""\\033."""		2299585	0					
ANR	2300039	ExpressionStatement	putchar ( type )	575:4:12035:12048	2299585	3	True				
ANR	2300040	CallExpression	putchar ( type )		2299585	0					
ANR	2300041	Callee	putchar		2299585	0					
ANR	2300042	Identifier	putchar		2299585	0					
ANR	2300043	ArgumentList	type		2299585	1					
ANR	2300044	Argument	type		2299585	0					
ANR	2300045	Identifier	type		2299585	0					
ANR	2300046	ExpressionStatement	putchar ( ystep )	576:4:12054:12068	2299585	4	True				
ANR	2300047	CallExpression	putchar ( ystep )		2299585	0					
ANR	2300048	Callee	putchar		2299585	0					
ANR	2300049	Identifier	putchar		2299585	0					
ANR	2300050	ArgumentList	ystep		2299585	1					
ANR	2300051	Argument	ystep		2299585	0					
ANR	2300052	Identifier	ystep		2299585	0					
ANR	2300053	ExpressionStatement	putchar ( xstep )	577:4:12074:12088	2299585	5	True				
ANR	2300054	CallExpression	putchar ( xstep )		2299585	0					
ANR	2300055	Callee	putchar		2299585	0					
ANR	2300056	Identifier	putchar		2299585	0					
ANR	2300057	ArgumentList	xstep		2299585	1					
ANR	2300058	Argument	xstep		2299585	0					
ANR	2300059	Identifier	xstep		2299585	0					
ANR	2300060	ExpressionStatement	putchar ( 1 )	578:4:12094:12104	2299585	6	True				
ANR	2300061	CallExpression	putchar ( 1 )		2299585	0					
ANR	2300062	Callee	putchar		2299585	0					
ANR	2300063	Identifier	putchar		2299585	0					
ANR	2300064	ArgumentList	1		2299585	1					
ANR	2300065	Argument	1		2299585	0					
ANR	2300066	PrimaryExpression	1		2299585	0					
ANR	2300067	ExpressionStatement	putchar ( length )	579:4:12110:12125	2299585	7	True				
ANR	2300068	CallExpression	putchar ( length )		2299585	0					
ANR	2300069	Callee	putchar		2299585	0					
ANR	2300070	Identifier	putchar		2299585	0					
ANR	2300071	ArgumentList	length		2299585	1					
ANR	2300072	Argument	length		2299585	0					
ANR	2300073	Identifier	length		2299585	0					
ANR	2300074	ExpressionStatement	putchar ( length >> 8 )	580:4:12131:12151	2299585	8	True				
ANR	2300075	CallExpression	putchar ( length >> 8 )		2299585	0					
ANR	2300076	Callee	putchar		2299585	0					
ANR	2300077	Identifier	putchar		2299585	0					
ANR	2300078	ArgumentList	length >> 8		2299585	1					
ANR	2300079	Argument	length >> 8		2299585	0					
ANR	2300080	ShiftExpression	length >> 8		2299585	0		>>			
ANR	2300081	Identifier	length		2299585	0					
ANR	2300082	PrimaryExpression	8		2299585	1					
ANR	2300083	ElseStatement	else		2299585	0					
ANR	2300084	CompoundStatement		178:2:3311:3311	2299585	0					
ANR	2300085	ExpressionStatement	"printf ( ""\\033i"" )"	588:4:12221:12236	2299585	0	True				
ANR	2300086	CallExpression	"printf ( ""\\033i"" )"		2299585	0					
ANR	2300087	Callee	printf		2299585	0					
ANR	2300088	Identifier	printf		2299585	0					
ANR	2300089	ArgumentList	"""\\033i"""		2299585	1					
ANR	2300090	Argument	"""\\033i"""		2299585	0					
ANR	2300091	PrimaryExpression	"""\\033i"""		2299585	0					
ANR	2300092	ExpressionStatement	putchar ( ctable [ plane ] )	589:4:12242:12264	2299585	1	True				
ANR	2300093	CallExpression	putchar ( ctable [ plane ] )		2299585	0					
ANR	2300094	Callee	putchar		2299585	0					
ANR	2300095	Identifier	putchar		2299585	0					
ANR	2300096	ArgumentList	ctable [ plane ]		2299585	1					
ANR	2300097	Argument	ctable [ plane ]		2299585	0					
ANR	2300098	ArrayIndexing	ctable [ plane ]		2299585	0					
ANR	2300099	Identifier	ctable		2299585	0					
ANR	2300100	Identifier	plane		2299585	1					
ANR	2300101	ExpressionStatement	putchar ( type )	590:4:12270:12283	2299585	2	True				
ANR	2300102	CallExpression	putchar ( type )		2299585	0					
ANR	2300103	Callee	putchar		2299585	0					
ANR	2300104	Identifier	putchar		2299585	0					
ANR	2300105	ArgumentList	type		2299585	1					
ANR	2300106	Argument	type		2299585	0					
ANR	2300107	Identifier	type		2299585	0					
ANR	2300108	ExpressionStatement	putchar ( 1 )	591:4:12289:12299	2299585	3	True				
ANR	2300109	CallExpression	putchar ( 1 )		2299585	0					
ANR	2300110	Callee	putchar		2299585	0					
ANR	2300111	Identifier	putchar		2299585	0					
ANR	2300112	ArgumentList	1		2299585	1					
ANR	2300113	Argument	1		2299585	0					
ANR	2300114	PrimaryExpression	1		2299585	0					
ANR	2300115	ExpressionStatement	putchar ( length & 255 )	592:4:12305:12326	2299585	4	True				
ANR	2300116	CallExpression	putchar ( length & 255 )		2299585	0					
ANR	2300117	Callee	putchar		2299585	0					
ANR	2300118	Identifier	putchar		2299585	0					
ANR	2300119	ArgumentList	length & 255		2299585	1					
ANR	2300120	Argument	length & 255		2299585	0					
ANR	2300121	BitAndExpression	length & 255		2299585	0		&			
ANR	2300122	Identifier	length		2299585	0					
ANR	2300123	PrimaryExpression	255		2299585	1					
ANR	2300124	ExpressionStatement	putchar ( length >> 8 )	593:4:12332:12352	2299585	5	True				
ANR	2300125	CallExpression	putchar ( length >> 8 )		2299585	0					
ANR	2300126	Callee	putchar		2299585	0					
ANR	2300127	Identifier	putchar		2299585	0					
ANR	2300128	ArgumentList	length >> 8		2299585	1					
ANR	2300129	Argument	length >> 8		2299585	0					
ANR	2300130	ShiftExpression	length >> 8		2299585	0		>>			
ANR	2300131	Identifier	length		2299585	0					
ANR	2300132	PrimaryExpression	8		2299585	1					
ANR	2300133	ExpressionStatement	putchar ( 1 )	594:4:12358:12368	2299585	6	True				
ANR	2300134	CallExpression	putchar ( 1 )		2299585	0					
ANR	2300135	Callee	putchar		2299585	0					
ANR	2300136	Identifier	putchar		2299585	0					
ANR	2300137	ArgumentList	1		2299585	1					
ANR	2300138	Argument	1		2299585	0					
ANR	2300139	PrimaryExpression	1		2299585	0					
ANR	2300140	ExpressionStatement	putchar ( 0 )	595:4:12374:12384	2299585	7	True				
ANR	2300141	CallExpression	putchar ( 0 )		2299585	0					
ANR	2300142	Callee	putchar		2299585	0					
ANR	2300143	Identifier	putchar		2299585	0					
ANR	2300144	ArgumentList	0		2299585	1					
ANR	2300145	Argument	0		2299585	0					
ANR	2300146	PrimaryExpression	0		2299585	0					
ANR	2300147	ExpressionStatement	"pwrite ( line_ptr , line_end - line_ptr )"	598:2:12393:12430	2299585	11	True				
ANR	2300148	CallExpression	"pwrite ( line_ptr , line_end - line_ptr )"		2299585	0					
ANR	2300149	Callee	pwrite		2299585	0					
ANR	2300150	Identifier	pwrite		2299585	0					
ANR	2300151	ArgumentList	line_ptr		2299585	1					
ANR	2300152	Argument	line_ptr		2299585	0					
ANR	2300153	Identifier	line_ptr		2299585	0					
ANR	2300154	Argument	line_end - line_ptr		2299585	1					
ANR	2300155	AdditiveExpression	line_end - line_ptr		2299585	0		-			
ANR	2300156	Identifier	line_end		2299585	0					
ANR	2300157	Identifier	line_ptr		2299585	1					
ANR	2300158	ExpressionStatement	fflush ( stdout )	599:2:12434:12448	2299585	12	True				
ANR	2300159	CallExpression	fflush ( stdout )		2299585	0					
ANR	2300160	Callee	fflush		2299585	0					
ANR	2300161	Identifier	fflush		2299585	0					
ANR	2300162	ArgumentList	stdout		2299585	1					
ANR	2300163	Argument	stdout		2299585	0					
ANR	2300164	Identifier	stdout		2299585	0					
ANR	2300165	ReturnType	void		2299585	1					
ANR	2300166	Identifier	CompressData		2299585	2					
ANR	2300167	ParameterList	"const unsigned char * line , int length , int plane , int type , int xstep , int ystep"		2299585	3					
ANR	2300168	Parameter	const unsigned char * line	400:13:8505:8529	2299585	0	True				
ANR	2300169	ParameterType	const unsigned char *		2299585	0					
ANR	2300170	Identifier	line		2299585	1					
ANR	2300171	Parameter	int length	401:13:8572:8597	2299585	1	True				
ANR	2300172	ParameterType	int		2299585	0					
ANR	2300173	Identifier	length		2299585	1					
ANR	2300174	Parameter	int plane	402:6:8631:8655	2299585	2	True				
ANR	2300175	ParameterType	int		2299585	0					
ANR	2300176	Identifier	plane		2299585	1					
ANR	2300177	Parameter	int type	403:6:8686:8709	2299585	3	True				
ANR	2300178	ParameterType	int		2299585	0					
ANR	2300179	Identifier	type		2299585	1					
ANR	2300180	Parameter	int xstep	404:6:8748:8772	2299585	4	True				
ANR	2300181	ParameterType	int		2299585	0					
ANR	2300182	Identifier	xstep		2299585	1					
ANR	2300183	Parameter	int ystep	405:6:8804:8828	2299585	5	True				
ANR	2300184	ParameterType	int		2299585	0					
ANR	2300185	Identifier	ystep		2299585	1					
ANR	2300186	CFGEntryNode	ENTRY		2299585		True				
ANR	2300187	CFGExitNode	EXIT		2299585		True				
ANR	2300188	Symbol	plane		2299585						
ANR	2300189	Symbol	comp_ptr		2299585						
ANR	2300190	Symbol	* line_ptr		2299585						
ANR	2300191	Symbol	temp		2299585						
ANR	2300192	Symbol	stdout		2299585						
ANR	2300193	Symbol	* comp_ptr ++		2299585						
ANR	2300194	Symbol	line		2299585						
ANR	2300195	Symbol	length		2299585						
ANR	2300196	Symbol	start		2299585						
ANR	2300197	Symbol	count		2299585						
ANR	2300198	Symbol	EPSON_ICOLOR		2299585						
ANR	2300199	Symbol	ctable		2299585						
ANR	2300200	Symbol	type		2299585						
ANR	2300201	Symbol	* comp_ptr		2299585						
ANR	2300202	Symbol	line_end		2299585						
ANR	2300203	Symbol	CompBuffer		2299585						
ANR	2300204	Symbol	NumPlanes		2299585						
ANR	2300205	Symbol	xstep		2299585						
ANR	2300206	Symbol	* line_ptr ++		2299585						
ANR	2300207	Symbol	Model		2299585						
ANR	2300208	Symbol	* ctable		2299585						
ANR	2300209	Symbol	ystep		2299585						
ANR	2300210	Symbol	* plane		2299585						
ANR	2300211	Symbol	line_ptr		2299585						
ANR	2300212	Function	OutputLine	607:0:12509:15671							
ANR	2300213	FunctionDef	OutputLine (const cups_page_header2_t * header)		2300212	0					
ANR	2300214	CompoundStatement		610:0:12587:15671	2300212	0					
ANR	2300215	IfStatement	if ( header -> cupsRowCount )		2300212	0					
ANR	2300216	Condition	header -> cupsRowCount	611:6:12595:12614	2300212	0	True				
ANR	2300217	PtrMemberAccess	header -> cupsRowCount		2300212	0					
ANR	2300218	Identifier	header		2300212	0					
ANR	2300219	Identifier	cupsRowCount		2300212	1					
ANR	2300220	CompoundStatement		11:4:182:202	2300212	1					
ANR	2300221	IdentifierDeclStatement	int width ;	613:4:12625:12636	2300212	0	True				
ANR	2300222	IdentifierDecl	width		2300212	0					
ANR	2300223	IdentifierDeclType	int		2300212	0					
ANR	2300224	Identifier	width		2300212	1					
ANR	2300225	IdentifierDeclStatement	"unsigned char * tempptr , * evenptr , * oddptr ;"	614:4:12642:12689	2300212	1	True				
ANR	2300226	IdentifierDecl	* tempptr		2300212	0					
ANR	2300227	IdentifierDeclType	unsigned char *		2300212	0					
ANR	2300228	Identifier	tempptr		2300212	1					
ANR	2300229	IdentifierDecl	* evenptr		2300212	1					
ANR	2300230	IdentifierDeclType	unsigned char *		2300212	0					
ANR	2300231	Identifier	evenptr		2300212	1					
ANR	2300232	IdentifierDecl	* oddptr		2300212	2					
ANR	2300233	IdentifierDeclType	unsigned char *		2300212	0					
ANR	2300234	Identifier	oddptr		2300212	1					
ANR	2300235	Statement	register	617:4:12695:12702	2300212	2	True				
ANR	2300236	IdentifierDeclStatement	int x ;	617:13:12704:12709	2300212	3	True				
ANR	2300237	IdentifierDecl	x		2300212	0					
ANR	2300238	IdentifierDeclType	int		2300212	0					
ANR	2300239	Identifier	x		2300212	1					
ANR	2300240	IdentifierDeclStatement	unsigned char bit ;	618:4:12715:12732	2300212	4	True				
ANR	2300241	IdentifierDecl	bit		2300212	0					
ANR	2300242	IdentifierDeclType	unsigned char		2300212	0					
ANR	2300243	Identifier	bit		2300212	1					
ANR	2300244	IdentifierDeclStatement	const unsigned char * pixel ;	619:4:12738:12764	2300212	5	True				
ANR	2300245	IdentifierDecl	* pixel		2300212	0					
ANR	2300246	IdentifierDeclType	const unsigned char *		2300212	0					
ANR	2300247	Identifier	pixel		2300212	1					
ANR	2300248	IdentifierDeclStatement	unsigned char * temp ;	620:4:12770:12790	2300212	6	True				
ANR	2300249	IdentifierDecl	* temp		2300212	0					
ANR	2300250	IdentifierDeclType	unsigned char *		2300212	0					
ANR	2300251	Identifier	temp		2300212	1					
ANR	2300252	ForStatement	"for ( x = header -> cupsWidth , bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer ; x > 0 ; x -- , temp ++ )"		2300212	7					
ANR	2300253	ForInit	"x = header -> cupsWidth , bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer ;"	627:9:12892:12975	2300212	0	True				
ANR	2300254	Expression	"x = header -> cupsWidth , bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer"		2300212	0					
ANR	2300255	AssignmentExpression	x = header -> cupsWidth		2300212	0		=			
ANR	2300256	Identifier	x		2300212	0					
ANR	2300257	PtrMemberAccess	header -> cupsWidth		2300212	1					
ANR	2300258	Identifier	header		2300212	0					
ANR	2300259	Identifier	cupsWidth		2300212	1					
ANR	2300260	Expression	"bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer"		2300212	1					
ANR	2300261	AssignmentExpression	bit = 128		2300212	0		=			
ANR	2300262	Identifier	bit		2300212	0					
ANR	2300263	PrimaryExpression	128		2300212	1					
ANR	2300264	Expression	"pixel = Planes [ 0 ] , temp = CompBuffer"		2300212	1					
ANR	2300265	AssignmentExpression	pixel = Planes [ 0 ]		2300212	0		=			
ANR	2300266	Identifier	pixel		2300212	0					
ANR	2300267	ArrayIndexing	Planes [ 0 ]		2300212	1					
ANR	2300268	Identifier	Planes		2300212	0					
ANR	2300269	PrimaryExpression	0		2300212	1					
ANR	2300270	AssignmentExpression	temp = CompBuffer		2300212	1		=			
ANR	2300271	Identifier	temp		2300212	0					
ANR	2300272	Identifier	CompBuffer		2300212	1					
ANR	2300273	Condition	x > 0	629:2:12979:12983	2300212	1	True				
ANR	2300274	RelationalExpression	x > 0		2300212	0		>			
ANR	2300275	Identifier	x		2300212	0					
ANR	2300276	PrimaryExpression	0		2300212	1					
ANR	2300277	Expression	"x -- , temp ++"	630:2:12988:13000	2300212	2	True				
ANR	2300278	PostIncDecOperationExpression	x --		2300212	0					
ANR	2300279	Identifier	x		2300212	0					
ANR	2300280	IncDec	--		2300212	1					
ANR	2300281	PostIncDecOperationExpression	temp ++		2300212	1					
ANR	2300282	Identifier	temp		2300212	0					
ANR	2300283	IncDec	++		2300212	1					
ANR	2300284	CompoundStatement		22:4:419:419	2300212	3					
ANR	2300285	IfStatement	if ( * pixel & bit )		2300212	0					
ANR	2300286	Condition	* pixel & bit	632:10:13019:13030	2300212	0	True				
ANR	2300287	BitAndExpression	* pixel & bit		2300212	0		&			
ANR	2300288	UnaryOperationExpression	* pixel		2300212	0					
ANR	2300289	UnaryOperator	*		2300212	0					
ANR	2300290	Identifier	pixel		2300212	1					
ANR	2300291	Identifier	bit		2300212	1					
ANR	2300292	ExpressionStatement	* temp |= DotBit	633:8:13041:13056	2300212	1	True				
ANR	2300293	AssignmentExpression	* temp |= DotBit		2300212	0		|=			
ANR	2300294	UnaryOperationExpression	* temp		2300212	0					
ANR	2300295	UnaryOperator	*		2300212	0					
ANR	2300296	Identifier	temp		2300212	1					
ANR	2300297	Identifier	DotBit		2300212	1					
ANR	2300298	IfStatement	if ( bit > 1 )		2300212	1					
ANR	2300299	Condition	bit > 1	635:10:13069:13075	2300212	0	True				
ANR	2300300	RelationalExpression	bit > 1		2300212	0		>			
ANR	2300301	Identifier	bit		2300212	0					
ANR	2300302	PrimaryExpression	1		2300212	1					
ANR	2300303	ExpressionStatement	bit >>= 1	636:1:13079:13088	2300212	1	True				
ANR	2300304	AssignmentExpression	bit >>= 1		2300212	0		>>=			
ANR	2300305	Identifier	bit		2300212	0					
ANR	2300306	PrimaryExpression	1		2300212	1					
ANR	2300307	ElseStatement	else		2300212	0					
ANR	2300308	CompoundStatement		29:6:519:519	2300212	0					
ANR	2300309	ExpressionStatement	bit = 128	639:1:13110:13119	2300212	0	True				
ANR	2300310	AssignmentExpression	bit = 128		2300212	0		=			
ANR	2300311	Identifier	bit		2300212	0					
ANR	2300312	PrimaryExpression	128		2300212	1					
ANR	2300313	ExpressionStatement	pixel ++	640:1:13122:13130	2300212	1	True				
ANR	2300314	PostIncDecOperationExpression	pixel ++		2300212	0					
ANR	2300315	Identifier	pixel		2300212	0					
ANR	2300316	IncDec	++		2300212	1					
ANR	2300317	IfStatement	if ( DotBit > 1 )		2300212	8					
ANR	2300318	Condition	DotBit > 1	644:8:13155:13164	2300212	0	True				
ANR	2300319	RelationalExpression	DotBit > 1		2300212	0		>			
ANR	2300320	Identifier	DotBit		2300212	0					
ANR	2300321	PrimaryExpression	1		2300212	1					
ANR	2300322	ExpressionStatement	DotBit >>= 1	645:6:13173:13185	2300212	1	True				
ANR	2300323	AssignmentExpression	DotBit >>= 1		2300212	0		>>=			
ANR	2300324	Identifier	DotBit		2300212	0					
ANR	2300325	PrimaryExpression	1		2300212	1					
ANR	2300326	ElseStatement	else		2300212	0					
ANR	2300327	CompoundStatement		38:4:612:612	2300212	0					
ANR	2300328	IfStatement	if ( Shingling && LineCount != 0 )		2300212	0					
ANR	2300329	Condition	Shingling && LineCount != 0	652:10:13310:13336	2300212	0	True				
ANR	2300330	AndExpression	Shingling && LineCount != 0		2300212	0		&&			
ANR	2300331	Identifier	Shingling		2300212	0					
ANR	2300332	EqualityExpression	LineCount != 0		2300212	1		!=			
ANR	2300333	Identifier	LineCount		2300212	0					
ANR	2300334	PrimaryExpression	0		2300212	1					
ANR	2300335	CompoundStatement		44:6:757:757	2300212	1					
ANR	2300336	IfStatement	if ( LineCount & 1 )		2300212	0					
ANR	2300337	Condition	LineCount & 1	658:12:13413:13425	2300212	0	True				
ANR	2300338	BitAndExpression	LineCount & 1		2300212	0		&			
ANR	2300339	Identifier	LineCount		2300212	0					
ANR	2300340	PrimaryExpression	1		2300212	1					
ANR	2300341	CompoundStatement		50:8:848:848	2300212	1					
ANR	2300342	ExpressionStatement	evenptr = LineBuffers [ 1 ] + OddOffset	660:10:13448:13484	2300212	0	True				
ANR	2300343	AssignmentExpression	evenptr = LineBuffers [ 1 ] + OddOffset		2300212	0		=			
ANR	2300344	Identifier	evenptr		2300212	0					
ANR	2300345	AdditiveExpression	LineBuffers [ 1 ] + OddOffset		2300212	1		+			
ANR	2300346	ArrayIndexing	LineBuffers [ 1 ]		2300212	0					
ANR	2300347	Identifier	LineBuffers		2300212	0					
ANR	2300348	PrimaryExpression	1		2300212	1					
ANR	2300349	Identifier	OddOffset		2300212	1					
ANR	2300350	ExpressionStatement	oddptr = LineBuffers [ 0 ] + EvenOffset + DotBytes	661:10:13496:13544	2300212	1	True				
ANR	2300351	AssignmentExpression	oddptr = LineBuffers [ 0 ] + EvenOffset + DotBytes		2300212	0		=			
ANR	2300352	Identifier	oddptr		2300212	0					
ANR	2300353	AdditiveExpression	LineBuffers [ 0 ] + EvenOffset + DotBytes		2300212	1		+			
ANR	2300354	ArrayIndexing	LineBuffers [ 0 ]		2300212	0					
ANR	2300355	Identifier	LineBuffers		2300212	0					
ANR	2300356	PrimaryExpression	0		2300212	1					
ANR	2300357	AdditiveExpression	EvenOffset + DotBytes		2300212	1		+			
ANR	2300358	Identifier	EvenOffset		2300212	0					
ANR	2300359	Identifier	DotBytes		2300212	1					
ANR	2300360	ElseStatement	else		2300212	0					
ANR	2300361	CompoundStatement		55:8:989:989	2300212	0					
ANR	2300362	ExpressionStatement	evenptr = LineBuffers [ 0 ] + EvenOffset	665:10:13589:13626	2300212	0	True				
ANR	2300363	AssignmentExpression	evenptr = LineBuffers [ 0 ] + EvenOffset		2300212	0		=			
ANR	2300364	Identifier	evenptr		2300212	0					
ANR	2300365	AdditiveExpression	LineBuffers [ 0 ] + EvenOffset		2300212	1		+			
ANR	2300366	ArrayIndexing	LineBuffers [ 0 ]		2300212	0					
ANR	2300367	Identifier	LineBuffers		2300212	0					
ANR	2300368	PrimaryExpression	0		2300212	1					
ANR	2300369	Identifier	EvenOffset		2300212	1					
ANR	2300370	ExpressionStatement	oddptr = LineBuffers [ 1 ] + OddOffset + DotBytes	666:10:13638:13685	2300212	1	True				
ANR	2300371	AssignmentExpression	oddptr = LineBuffers [ 1 ] + OddOffset + DotBytes		2300212	0		=			
ANR	2300372	Identifier	oddptr		2300212	0					
ANR	2300373	AdditiveExpression	LineBuffers [ 1 ] + OddOffset + DotBytes		2300212	1		+			
ANR	2300374	ArrayIndexing	LineBuffers [ 1 ]		2300212	0					
ANR	2300375	Identifier	LineBuffers		2300212	0					
ANR	2300376	PrimaryExpression	1		2300212	1					
ANR	2300377	AdditiveExpression	OddOffset + DotBytes		2300212	1		+			
ANR	2300378	Identifier	OddOffset		2300212	0					
ANR	2300379	Identifier	DotBytes		2300212	1					
ANR	2300380	ForStatement	"for ( width = header -> cupsWidth , tempptr = CompBuffer ; width > 0 ; width -= 2 , tempptr += 2 , oddptr += DotBytes * 2 , evenptr += DotBytes * 2 )"		2300212	1					
ANR	2300381	ForInit	"width = header -> cupsWidth , tempptr = CompBuffer ;"	669:13:13711:13758	2300212	0	True				
ANR	2300382	Expression	"width = header -> cupsWidth , tempptr = CompBuffer"		2300212	0					
ANR	2300383	AssignmentExpression	width = header -> cupsWidth		2300212	0		=			
ANR	2300384	Identifier	width		2300212	0					
ANR	2300385	PtrMemberAccess	header -> cupsWidth		2300212	1					
ANR	2300386	Identifier	header		2300212	0					
ANR	2300387	Identifier	cupsWidth		2300212	1					
ANR	2300388	AssignmentExpression	tempptr = CompBuffer		2300212	1		=			
ANR	2300389	Identifier	tempptr		2300212	0					
ANR	2300390	Identifier	CompBuffer		2300212	1					
ANR	2300391	Condition	width > 0	670:13:13773:13781	2300212	1	True				
ANR	2300392	RelationalExpression	width > 0		2300212	0		>			
ANR	2300393	Identifier	width		2300212	0					
ANR	2300394	PrimaryExpression	0		2300212	1					
ANR	2300395	Expression	"width -= 2 , tempptr += 2 , oddptr += DotBytes * 2 , evenptr += DotBytes * 2"	671:13:13797:13879	2300212	2	True				
ANR	2300396	AssignmentExpression	width -= 2		2300212	0		-=			
ANR	2300397	Identifier	width		2300212	0					
ANR	2300398	PrimaryExpression	2		2300212	1					
ANR	2300399	Expression	"tempptr += 2 , oddptr += DotBytes * 2 , evenptr += DotBytes * 2"		2300212	1					
ANR	2300400	AssignmentExpression	tempptr += 2		2300212	0		+=			
ANR	2300401	Identifier	tempptr		2300212	0					
ANR	2300402	PrimaryExpression	2		2300212	1					
ANR	2300403	Expression	"oddptr += DotBytes * 2 , evenptr += DotBytes * 2"		2300212	1					
ANR	2300404	AssignmentExpression	oddptr += DotBytes * 2		2300212	0		+=			
ANR	2300405	Identifier	oddptr		2300212	0					
ANR	2300406	MultiplicativeExpression	DotBytes * 2		2300212	1		*			
ANR	2300407	Identifier	DotBytes		2300212	0					
ANR	2300408	PrimaryExpression	2		2300212	1					
ANR	2300409	AssignmentExpression	evenptr += DotBytes * 2		2300212	1		+=			
ANR	2300410	Identifier	evenptr		2300212	0					
ANR	2300411	MultiplicativeExpression	DotBytes * 2		2300212	1		*			
ANR	2300412	Identifier	DotBytes		2300212	0					
ANR	2300413	PrimaryExpression	2		2300212	1					
ANR	2300414	CompoundStatement		64:8:1302:1302	2300212	3					
ANR	2300415	ExpressionStatement	evenptr [ 0 ] = tempptr [ 0 ]	674:10:13902:13925	2300212	0	True				
ANR	2300416	AssignmentExpression	evenptr [ 0 ] = tempptr [ 0 ]		2300212	0		=			
ANR	2300417	ArrayIndexing	evenptr [ 0 ]		2300212	0					
ANR	2300418	Identifier	evenptr		2300212	0					
ANR	2300419	PrimaryExpression	0		2300212	1					
ANR	2300420	ArrayIndexing	tempptr [ 0 ]		2300212	1					
ANR	2300421	Identifier	tempptr		2300212	0					
ANR	2300422	PrimaryExpression	0		2300212	1					
ANR	2300423	ExpressionStatement	oddptr [ 0 ] = tempptr [ 1 ]	675:10:13937:13960	2300212	1	True				
ANR	2300424	AssignmentExpression	oddptr [ 0 ] = tempptr [ 1 ]		2300212	0		=			
ANR	2300425	ArrayIndexing	oddptr [ 0 ]		2300212	0					
ANR	2300426	Identifier	oddptr		2300212	0					
ANR	2300427	PrimaryExpression	0		2300212	1					
ANR	2300428	ArrayIndexing	tempptr [ 1 ]		2300212	1					
ANR	2300429	Identifier	tempptr		2300212	0					
ANR	2300430	PrimaryExpression	1		2300212	1					
ANR	2300431	ElseStatement	else		2300212	0					
ANR	2300432	CompoundStatement		70:6:1409:1409	2300212	0					
ANR	2300433	ForStatement	"for ( width = header -> cupsWidth , tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset ; width > 0 ; width -- , tempptr ++ , evenptr += DotBytes )"		2300212	0					
ANR	2300434	ForInit	"width = header -> cupsWidth , tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset ;"	684:13:14072:14175	2300212	0	True				
ANR	2300435	Expression	"width = header -> cupsWidth , tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset"		2300212	0					
ANR	2300436	AssignmentExpression	width = header -> cupsWidth		2300212	0		=			
ANR	2300437	Identifier	width		2300212	0					
ANR	2300438	PtrMemberAccess	header -> cupsWidth		2300212	1					
ANR	2300439	Identifier	header		2300212	0					
ANR	2300440	Identifier	cupsWidth		2300212	1					
ANR	2300441	Expression	"tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset"		2300212	1					
ANR	2300442	AssignmentExpression	tempptr = CompBuffer		2300212	0		=			
ANR	2300443	Identifier	tempptr		2300212	0					
ANR	2300444	Identifier	CompBuffer		2300212	1					
ANR	2300445	AssignmentExpression	evenptr = LineBuffers [ 0 ] + EvenOffset		2300212	1		=			
ANR	2300446	Identifier	evenptr		2300212	0					
ANR	2300447	AdditiveExpression	LineBuffers [ 0 ] + EvenOffset		2300212	1		+			
ANR	2300448	ArrayIndexing	LineBuffers [ 0 ]		2300212	0					
ANR	2300449	Identifier	LineBuffers		2300212	0					
ANR	2300450	PrimaryExpression	0		2300212	1					
ANR	2300451	Identifier	EvenOffset		2300212	1					
ANR	2300452	Condition	width > 0	686:13:14190:14198	2300212	1	True				
ANR	2300453	RelationalExpression	width > 0		2300212	0		>			
ANR	2300454	Identifier	width		2300212	0					
ANR	2300455	PrimaryExpression	0		2300212	1					
ANR	2300456	Expression	"width -- , tempptr ++ , evenptr += DotBytes"	687:13:14214:14254	2300212	2	True				
ANR	2300457	PostIncDecOperationExpression	width --		2300212	0					
ANR	2300458	Identifier	width		2300212	0					
ANR	2300459	IncDec	--		2300212	1					
ANR	2300460	Expression	"tempptr ++ , evenptr += DotBytes"		2300212	1					
ANR	2300461	PostIncDecOperationExpression	tempptr ++		2300212	0					
ANR	2300462	Identifier	tempptr		2300212	0					
ANR	2300463	IncDec	++		2300212	1					
ANR	2300464	AssignmentExpression	evenptr += DotBytes		2300212	1		+=			
ANR	2300465	Identifier	evenptr		2300212	0					
ANR	2300466	Identifier	DotBytes		2300212	1					
ANR	2300467	ExpressionStatement	* evenptr = tempptr [ 0 ]	688:10:14267:14288	2300212	3	True				
ANR	2300468	AssignmentExpression	* evenptr = tempptr [ 0 ]		2300212	0		=			
ANR	2300469	UnaryOperationExpression	* evenptr		2300212	0					
ANR	2300470	UnaryOperator	*		2300212	0					
ANR	2300471	Identifier	evenptr		2300212	1					
ANR	2300472	ArrayIndexing	tempptr [ 0 ]		2300212	1					
ANR	2300473	Identifier	tempptr		2300212	0					
ANR	2300474	PrimaryExpression	0		2300212	1					
ANR	2300475	IfStatement	if ( Shingling && LineCount != 0 )		2300212	1					
ANR	2300476	Condition	Shingling && LineCount != 0	691:10:14309:14335	2300212	0	True				
ANR	2300477	AndExpression	Shingling && LineCount != 0		2300212	0		&&			
ANR	2300478	Identifier	Shingling		2300212	0					
ANR	2300479	EqualityExpression	LineCount != 0		2300212	1		!=			
ANR	2300480	Identifier	LineCount		2300212	0					
ANR	2300481	PrimaryExpression	0		2300212	1					
ANR	2300482	CompoundStatement		83:6:1756:1756	2300212	1					
ANR	2300483	ExpressionStatement	EvenOffset ++	693:1:14347:14360	2300212	0	True				
ANR	2300484	PostIncDecOperationExpression	EvenOffset ++		2300212	0					
ANR	2300485	Identifier	EvenOffset		2300212	0					
ANR	2300486	IncDec	++		2300212	1					
ANR	2300487	ExpressionStatement	OddOffset ++	694:1:14363:14375	2300212	1	True				
ANR	2300488	PostIncDecOperationExpression	OddOffset ++		2300212	0					
ANR	2300489	Identifier	OddOffset		2300212	0					
ANR	2300490	IncDec	++		2300212	1					
ANR	2300491	IfStatement	if ( EvenOffset == DotBytes )		2300212	2					
ANR	2300492	Condition	EvenOffset == DotBytes	696:5:14383:14404	2300212	0	True				
ANR	2300493	EqualityExpression	EvenOffset == DotBytes		2300212	0		==			
ANR	2300494	Identifier	EvenOffset		2300212	0					
ANR	2300495	Identifier	DotBytes		2300212	1					
ANR	2300496	CompoundStatement		88:1:1820:1820	2300212	1					
ANR	2300497	ExpressionStatement	EvenOffset = 0	698:3:14413:14427	2300212	0	True				
ANR	2300498	AssignmentExpression	EvenOffset = 0		2300212	0		=			
ANR	2300499	Identifier	EvenOffset		2300212	0					
ANR	2300500	PrimaryExpression	0		2300212	1					
ANR	2300501	ExpressionStatement	"OutputRows ( header , 0 )"	699:3:14432:14453	2300212	1	True				
ANR	2300502	CallExpression	"OutputRows ( header , 0 )"		2300212	0					
ANR	2300503	Callee	OutputRows		2300212	0					
ANR	2300504	Identifier	OutputRows		2300212	0					
ANR	2300505	ArgumentList	header		2300212	1					
ANR	2300506	Argument	header		2300212	0					
ANR	2300507	Identifier	header		2300212	0					
ANR	2300508	Argument	0		2300212	1					
ANR	2300509	PrimaryExpression	0		2300212	0					
ANR	2300510	IfStatement	if ( OddOffset == DotBytes )		2300212	3					
ANR	2300511	Condition	OddOffset == DotBytes	702:5:14464:14484	2300212	0	True				
ANR	2300512	EqualityExpression	OddOffset == DotBytes		2300212	0		==			
ANR	2300513	Identifier	OddOffset		2300212	0					
ANR	2300514	Identifier	DotBytes		2300212	1					
ANR	2300515	CompoundStatement		94:1:1900:1900	2300212	1					
ANR	2300516	ExpressionStatement	OddOffset = 0	704:10:14500:14513	2300212	0	True				
ANR	2300517	AssignmentExpression	OddOffset = 0		2300212	0		=			
ANR	2300518	Identifier	OddOffset		2300212	0					
ANR	2300519	PrimaryExpression	0		2300212	1					
ANR	2300520	ExpressionStatement	"OutputRows ( header , 1 )"	705:3:14518:14539	2300212	1	True				
ANR	2300521	CallExpression	"OutputRows ( header , 1 )"		2300212	0					
ANR	2300522	Callee	OutputRows		2300212	0					
ANR	2300523	Identifier	OutputRows		2300212	0					
ANR	2300524	ArgumentList	header		2300212	1					
ANR	2300525	Argument	header		2300212	0					
ANR	2300526	Identifier	header		2300212	0					
ANR	2300527	Argument	1		2300212	1					
ANR	2300528	PrimaryExpression	1		2300212	0					
ANR	2300529	ElseStatement	else		2300212	0					
ANR	2300530	CompoundStatement		100:6:1981:1981	2300212	0					
ANR	2300531	ExpressionStatement	EvenOffset ++	710:1:14572:14585	2300212	0	True				
ANR	2300532	PostIncDecOperationExpression	EvenOffset ++		2300212	0					
ANR	2300533	Identifier	EvenOffset		2300212	0					
ANR	2300534	IncDec	++		2300212	1					
ANR	2300535	IfStatement	if ( EvenOffset == DotBytes )		2300212	1					
ANR	2300536	Condition	EvenOffset == DotBytes	712:5:14593:14614	2300212	0	True				
ANR	2300537	EqualityExpression	EvenOffset == DotBytes		2300212	0		==			
ANR	2300538	Identifier	EvenOffset		2300212	0					
ANR	2300539	Identifier	DotBytes		2300212	1					
ANR	2300540	CompoundStatement		104:1:2030:2030	2300212	1					
ANR	2300541	ExpressionStatement	EvenOffset = 0	714:10:14630:14644	2300212	0	True				
ANR	2300542	AssignmentExpression	EvenOffset = 0		2300212	0		=			
ANR	2300543	Identifier	EvenOffset		2300212	0					
ANR	2300544	PrimaryExpression	0		2300212	1					
ANR	2300545	ExpressionStatement	"OutputRows ( header , 0 )"	715:3:14649:14670	2300212	1	True				
ANR	2300546	CallExpression	"OutputRows ( header , 0 )"		2300212	0					
ANR	2300547	Callee	OutputRows		2300212	0					
ANR	2300548	Identifier	OutputRows		2300212	0					
ANR	2300549	ArgumentList	header		2300212	1					
ANR	2300550	Argument	header		2300212	0					
ANR	2300551	Identifier	header		2300212	0					
ANR	2300552	Argument	0		2300212	1					
ANR	2300553	PrimaryExpression	0		2300212	0					
ANR	2300554	ExpressionStatement	DotBit = 128	719:6:14690:14702	2300212	2	True				
ANR	2300555	AssignmentExpression	DotBit = 128		2300212	0		=			
ANR	2300556	Identifier	DotBit		2300212	0					
ANR	2300557	PrimaryExpression	128		2300212	1					
ANR	2300558	ExpressionStatement	LineCount ++	720:6:14710:14722	2300212	3	True				
ANR	2300559	PostIncDecOperationExpression	LineCount ++		2300212	0					
ANR	2300560	Identifier	LineCount		2300212	0					
ANR	2300561	IncDec	++		2300212	1					
ANR	2300562	ExpressionStatement	"memset ( CompBuffer , 0 , header -> cupsWidth )"	722:6:14731:14771	2300212	4	True				
ANR	2300563	CallExpression	"memset ( CompBuffer , 0 , header -> cupsWidth )"		2300212	0					
ANR	2300564	Callee	memset		2300212	0					
ANR	2300565	Identifier	memset		2300212	0					
ANR	2300566	ArgumentList	CompBuffer		2300212	1					
ANR	2300567	Argument	CompBuffer		2300212	0					
ANR	2300568	Identifier	CompBuffer		2300212	0					
ANR	2300569	Argument	0		2300212	1					
ANR	2300570	PrimaryExpression	0		2300212	0					
ANR	2300571	Argument	header -> cupsWidth		2300212	2					
ANR	2300572	PtrMemberAccess	header -> cupsWidth		2300212	0					
ANR	2300573	Identifier	header		2300212	0					
ANR	2300574	Identifier	cupsWidth		2300212	1					
ANR	2300575	ElseStatement	else		2300212	0					
ANR	2300576	CompoundStatement		120:4:2284:2300	2300212	0					
ANR	2300577	IdentifierDeclStatement	int plane ;	727:4:14798:14807	2300212	0	True				
ANR	2300578	IdentifierDecl	plane		2300212	0					
ANR	2300579	IdentifierDeclType	int		2300212	0					
ANR	2300580	Identifier	plane		2300212	1					
ANR	2300581	IdentifierDeclStatement	int bytes ;	728:4:14834:14843	2300212	1	True				
ANR	2300582	IdentifierDecl	bytes		2300212	0					
ANR	2300583	IdentifierDeclType	int		2300212	0					
ANR	2300584	Identifier	bytes		2300212	1					
ANR	2300585	IdentifierDeclStatement	"int xstep , ystep ;"	729:4:14872:14888	2300212	2	True				
ANR	2300586	IdentifierDecl	xstep		2300212	0					
ANR	2300587	IdentifierDeclType	int		2300212	0					
ANR	2300588	Identifier	xstep		2300212	1					
ANR	2300589	IdentifierDecl	ystep		2300212	1					
ANR	2300590	IdentifierDeclType	int		2300212	0					
ANR	2300591	Identifier	ystep		2300212	1					
ANR	2300592	ExpressionStatement	xstep = 3600 / header -> HWResolution [ 0 ]	736:4:14988:15026	2300212	3	True				
ANR	2300593	AssignmentExpression	xstep = 3600 / header -> HWResolution [ 0 ]		2300212	0		=			
ANR	2300594	Identifier	xstep		2300212	0					
ANR	2300595	MultiplicativeExpression	3600 / header -> HWResolution [ 0 ]		2300212	1		/			
ANR	2300596	PrimaryExpression	3600		2300212	0					
ANR	2300597	ArrayIndexing	header -> HWResolution [ 0 ]		2300212	1					
ANR	2300598	PtrMemberAccess	header -> HWResolution		2300212	0					
ANR	2300599	Identifier	header		2300212	0					
ANR	2300600	Identifier	HWResolution		2300212	1					
ANR	2300601	PrimaryExpression	0		2300212	1					
ANR	2300602	ExpressionStatement	ystep = 3600 / header -> HWResolution [ 1 ]	737:4:15032:15070	2300212	4	True				
ANR	2300603	AssignmentExpression	ystep = 3600 / header -> HWResolution [ 1 ]		2300212	0		=			
ANR	2300604	Identifier	ystep		2300212	0					
ANR	2300605	MultiplicativeExpression	3600 / header -> HWResolution [ 1 ]		2300212	1		/			
ANR	2300606	PrimaryExpression	3600		2300212	0					
ANR	2300607	ArrayIndexing	header -> HWResolution [ 1 ]		2300212	1					
ANR	2300608	PtrMemberAccess	header -> HWResolution		2300212	0					
ANR	2300609	Identifier	header		2300212	0					
ANR	2300610	Identifier	HWResolution		2300212	1					
ANR	2300611	PrimaryExpression	1		2300212	1					
ANR	2300612	ExpressionStatement	bytes = header -> cupsBytesPerLine / NumPlanes	738:4:15076:15120	2300212	5	True				
ANR	2300613	AssignmentExpression	bytes = header -> cupsBytesPerLine / NumPlanes		2300212	0		=			
ANR	2300614	Identifier	bytes		2300212	0					
ANR	2300615	MultiplicativeExpression	header -> cupsBytesPerLine / NumPlanes		2300212	1		/			
ANR	2300616	PtrMemberAccess	header -> cupsBytesPerLine		2300212	0					
ANR	2300617	Identifier	header		2300212	0					
ANR	2300618	Identifier	cupsBytesPerLine		2300212	1					
ANR	2300619	Identifier	NumPlanes		2300212	1					
ANR	2300620	ForStatement	for ( plane = 0 ; plane < NumPlanes ; plane ++ )		2300212	6					
ANR	2300621	ForInit	plane = 0 ;	740:9:15132:15141	2300212	0	True				
ANR	2300622	AssignmentExpression	plane = 0		2300212	0		=			
ANR	2300623	Identifier	plane		2300212	0					
ANR	2300624	PrimaryExpression	0		2300212	1					
ANR	2300625	Condition	plane < NumPlanes	740:20:15143:15159	2300212	1	True				
ANR	2300626	RelationalExpression	plane < NumPlanes		2300212	0		<			
ANR	2300627	Identifier	plane		2300212	0					
ANR	2300628	Identifier	NumPlanes		2300212	1					
ANR	2300629	PostIncDecOperationExpression	plane ++	740:39:15162:15169	2300212	2	True				
ANR	2300630	Identifier	plane		2300212	0					
ANR	2300631	IncDec	++		2300212	1					
ANR	2300632	CompoundStatement		132:4:2588:2588	2300212	3					
ANR	2300633	IfStatement	"if ( ! Planes [ plane ] [ 0 ] && memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0 )"		2300212	0					
ANR	2300634	Condition	"! Planes [ plane ] [ 0 ] && memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0"	746:10:15233:15319	2300212	0	True				
ANR	2300635	AndExpression	"! Planes [ plane ] [ 0 ] && memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0"		2300212	0		&&			
ANR	2300636	UnaryOperationExpression	! Planes [ plane ] [ 0 ]		2300212	0					
ANR	2300637	UnaryOperator	!		2300212	0					
ANR	2300638	ArrayIndexing	Planes [ plane ] [ 0 ]		2300212	1					
ANR	2300639	ArrayIndexing	Planes [ plane ]		2300212	0					
ANR	2300640	Identifier	Planes		2300212	0					
ANR	2300641	Identifier	plane		2300212	1					
ANR	2300642	PrimaryExpression	0		2300212	1					
ANR	2300643	EqualityExpression	"memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0"		2300212	1		==			
ANR	2300644	CallExpression	"memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 )"		2300212	0					
ANR	2300645	Callee	memcmp		2300212	0					
ANR	2300646	Identifier	memcmp		2300212	0					
ANR	2300647	ArgumentList	Planes [ plane ]		2300212	1					
ANR	2300648	Argument	Planes [ plane ]		2300212	0					
ANR	2300649	ArrayIndexing	Planes [ plane ]		2300212	0					
ANR	2300650	Identifier	Planes		2300212	0					
ANR	2300651	Identifier	plane		2300212	1					
ANR	2300652	Argument	Planes [ plane ] + 1		2300212	1					
ANR	2300653	AdditiveExpression	Planes [ plane ] + 1		2300212	0		+			
ANR	2300654	ArrayIndexing	Planes [ plane ]		2300212	0					
ANR	2300655	Identifier	Planes		2300212	0					
ANR	2300656	Identifier	plane		2300212	1					
ANR	2300657	PrimaryExpression	1		2300212	1					
ANR	2300658	Argument	bytes - 1		2300212	2					
ANR	2300659	AdditiveExpression	bytes - 1		2300212	0		-			
ANR	2300660	Identifier	bytes		2300212	0					
ANR	2300661	PrimaryExpression	1		2300212	1					
ANR	2300662	PrimaryExpression	0		2300212	1					
ANR	2300663	ContinueStatement	continue ;	748:1:15323:15331	2300212	1	True				
ANR	2300664	IfStatement	if ( Feed > 0 )		2300212	1					
ANR	2300665	Condition	Feed > 0	754:10:15401:15408	2300212	0	True				
ANR	2300666	RelationalExpression	Feed > 0		2300212	0		>			
ANR	2300667	Identifier	Feed		2300212	0					
ANR	2300668	PrimaryExpression	0		2300212	1					
ANR	2300669	CompoundStatement		146:6:2829:2829	2300212	1					
ANR	2300670	ExpressionStatement	"pwrite ( ""\\033(v\\002\\000"" , 5 )"	756:1:15420:15447	2300212	0	True				
ANR	2300671	CallExpression	"pwrite ( ""\\033(v\\002\\000"" , 5 )"		2300212	0					
ANR	2300672	Callee	pwrite		2300212	0					
ANR	2300673	Identifier	pwrite		2300212	0					
ANR	2300674	ArgumentList	"""\\033(v\\002\\000"""		2300212	1					
ANR	2300675	Argument	"""\\033(v\\002\\000"""		2300212	0					
ANR	2300676	PrimaryExpression	"""\\033(v\\002\\000"""		2300212	0					
ANR	2300677	Argument	5		2300212	1					
ANR	2300678	PrimaryExpression	5		2300212	0					
ANR	2300679	ExpressionStatement	putchar ( Feed )	757:1:15483:15496	2300212	1	True				
ANR	2300680	CallExpression	putchar ( Feed )		2300212	0					
ANR	2300681	Callee	putchar		2300212	0					
ANR	2300682	Identifier	putchar		2300212	0					
ANR	2300683	ArgumentList	Feed		2300212	1					
ANR	2300684	Argument	Feed		2300212	0					
ANR	2300685	Identifier	Feed		2300212	0					
ANR	2300686	ExpressionStatement	putchar ( Feed >> 8 )	758:1:15499:15517	2300212	2	True				
ANR	2300687	CallExpression	putchar ( Feed >> 8 )		2300212	0					
ANR	2300688	Callee	putchar		2300212	0					
ANR	2300689	Identifier	putchar		2300212	0					
ANR	2300690	ArgumentList	Feed >> 8		2300212	1					
ANR	2300691	Argument	Feed >> 8		2300212	0					
ANR	2300692	ShiftExpression	Feed >> 8		2300212	0		>>			
ANR	2300693	Identifier	Feed		2300212	0					
ANR	2300694	PrimaryExpression	8		2300212	1					
ANR	2300695	ExpressionStatement	Feed = 0	760:1:15521:15529	2300212	3	True				
ANR	2300696	AssignmentExpression	Feed = 0		2300212	0		=			
ANR	2300697	Identifier	Feed		2300212	0					
ANR	2300698	PrimaryExpression	0		2300212	1					
ANR	2300699	ExpressionStatement	"CompressData ( Planes [ plane ] , bytes , plane , header -> cupsCompression , xstep , ystep )"	763:6:15546:15645	2300212	2	True				
ANR	2300700	CallExpression	"CompressData ( Planes [ plane ] , bytes , plane , header -> cupsCompression , xstep , ystep )"		2300212	0					
ANR	2300701	Callee	CompressData		2300212	0					
ANR	2300702	Identifier	CompressData		2300212	0					
ANR	2300703	ArgumentList	Planes [ plane ]		2300212	1					
ANR	2300704	Argument	Planes [ plane ]		2300212	0					
ANR	2300705	ArrayIndexing	Planes [ plane ]		2300212	0					
ANR	2300706	Identifier	Planes		2300212	0					
ANR	2300707	Identifier	plane		2300212	1					
ANR	2300708	Argument	bytes		2300212	1					
ANR	2300709	Identifier	bytes		2300212	0					
ANR	2300710	Argument	plane		2300212	2					
ANR	2300711	Identifier	plane		2300212	0					
ANR	2300712	Argument	header -> cupsCompression		2300212	3					
ANR	2300713	PtrMemberAccess	header -> cupsCompression		2300212	0					
ANR	2300714	Identifier	header		2300212	0					
ANR	2300715	Identifier	cupsCompression		2300212	1					
ANR	2300716	Argument	xstep		2300212	4					
ANR	2300717	Identifier	xstep		2300212	0					
ANR	2300718	Argument	ystep		2300212	5					
ANR	2300719	Identifier	ystep		2300212	0					
ANR	2300720	ExpressionStatement	Feed ++	767:4:15658:15665	2300212	7	True				
ANR	2300721	PostIncDecOperationExpression	Feed ++		2300212	0					
ANR	2300722	Identifier	Feed		2300212	0					
ANR	2300723	IncDec	++		2300212	1					
ANR	2300724	ReturnType	void		2300212	1					
ANR	2300725	Identifier	OutputLine		2300212	2					
ANR	2300726	ParameterList	const cups_page_header2_t * header		2300212	3					
ANR	2300727	Parameter	const cups_page_header2_t * header	609:4:12530:12562	2300212	0	True				
ANR	2300728	ParameterType	const cups_page_header2_t *		2300212	0					
ANR	2300729	Identifier	header		2300212	1					
ANR	2300730	CFGEntryNode	ENTRY		2300212		True				
ANR	2300731	CFGExitNode	EXIT		2300212		True				
ANR	2300732	Symbol	header -> cupsRowCount		2300212						
ANR	2300733	Symbol	plane		2300212						
ANR	2300734	Symbol	oddptr		2300212						
ANR	2300735	Symbol	* oddptr		2300212						
ANR	2300736	Symbol	* evenptr		2300212						
ANR	2300737	Symbol	bit		2300212						
ANR	2300738	Symbol	LineCount		2300212						
ANR	2300739	Symbol	* LineBuffers		2300212						
ANR	2300740	Symbol	header -> HWResolution		2300212						
ANR	2300741	Symbol	memcmp		2300212						
ANR	2300742	Symbol	Planes		2300212						
ANR	2300743	Symbol	xstep		2300212						
ANR	2300744	Symbol	* * Planes		2300212						
ANR	2300745	Symbol	EvenOffset		2300212						
ANR	2300746	Symbol	ystep		2300212						
ANR	2300747	Symbol	header -> cupsBytesPerLine		2300212						
ANR	2300748	Symbol	* plane		2300212						
ANR	2300749	Symbol	pixel		2300212						
ANR	2300750	Symbol	OddOffset		2300212						
ANR	2300751	Symbol	Feed		2300212						
ANR	2300752	Symbol	evenptr		2300212						
ANR	2300753	Symbol	temp		2300212						
ANR	2300754	Symbol	header -> cupsWidth		2300212						
ANR	2300755	Symbol	* tempptr		2300212						
ANR	2300756	Symbol	Shingling		2300212						
ANR	2300757	Symbol	* pixel		2300212						
ANR	2300758	Symbol	LineBuffers		2300212						
ANR	2300759	Symbol	* * plane		2300212						
ANR	2300760	Symbol	* header		2300212						
ANR	2300761	Symbol	* temp		2300212						
ANR	2300762	Symbol	header -> cupsCompression		2300212						
ANR	2300763	Symbol	CompBuffer		2300212						
ANR	2300764	Symbol	NumPlanes		2300212						
ANR	2300765	Symbol	* Planes		2300212						
ANR	2300766	Symbol	* header -> HWResolution		2300212						
ANR	2300767	Symbol	* * header		2300212						
ANR	2300768	Symbol	DotBytes		2300212						
ANR	2300769	Symbol	bytes		2300212						
ANR	2300770	Symbol	width		2300212						
ANR	2300771	Symbol	x		2300212						
ANR	2300772	Symbol	header		2300212						
ANR	2300773	Symbol	tempptr		2300212						
ANR	2300774	Symbol	DotBit		2300212						
ANR	2300775	Function	OutputRows	776:0:15729:19355							
ANR	2300776	FunctionDef	"OutputRows (const cups_page_header2_t * header , int row)"		2300775	0					
ANR	2300777	CompoundStatement		780:0:15877:19355	2300775	0					
ANR	2300778	IdentifierDeclStatement	"unsigned i , n ;"	781:2:15881:15894	2300775	0	True				
ANR	2300779	IdentifierDecl	i		2300775	0					
ANR	2300780	IdentifierDeclType	unsigned		2300775	0					
ANR	2300781	Identifier	i		2300775	1					
ANR	2300782	IdentifierDecl	n		2300775	1					
ANR	2300783	IdentifierDeclType	unsigned		2300775	0					
ANR	2300784	Identifier	n		2300775	1					
ANR	2300785	IdentifierDeclStatement	"int dot_count , dot_min ;"	782:2:15919:15990	2300775	1	True				
ANR	2300786	IdentifierDecl	dot_count		2300775	0					
ANR	2300787	IdentifierDeclType	int		2300775	0					
ANR	2300788	Identifier	dot_count		2300775	1					
ANR	2300789	IdentifierDecl	dot_min		2300775	1					
ANR	2300790	IdentifierDeclType	int		2300775	0					
ANR	2300791	Identifier	dot_min		2300775	1					
ANR	2300792	IdentifierDeclStatement	"unsigned char * dot_ptr , * ptr ;"	784:2:16025:16084	2300775	2	True				
ANR	2300793	IdentifierDecl	* dot_ptr		2300775	0					
ANR	2300794	IdentifierDeclType	unsigned char *		2300775	0					
ANR	2300795	Identifier	dot_ptr		2300775	1					
ANR	2300796	IdentifierDecl	* ptr		2300775	1					
ANR	2300797	IdentifierDeclType	unsigned char *		2300775	0					
ANR	2300798	Identifier	ptr		2300775	1					
ANR	2300799	ExpressionStatement	dot_min = DotBytes * DotColumns	788:2:16111:16142	2300775	3	True				
ANR	2300800	AssignmentExpression	dot_min = DotBytes * DotColumns		2300775	0		=			
ANR	2300801	Identifier	dot_min		2300775	0					
ANR	2300802	MultiplicativeExpression	DotBytes * DotColumns		2300775	1		*			
ANR	2300803	Identifier	DotBytes		2300775	0					
ANR	2300804	Identifier	DotColumns		2300775	1					
ANR	2300805	IfStatement	"if ( LineBuffers [ row ] [ 0 ] != 0 || memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 ) )"		2300775	4					
ANR	2300806	Condition	"LineBuffers [ row ] [ 0 ] != 0 || memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 )"	790:6:16151:16277	2300775	0	True				
ANR	2300807	OrExpression	"LineBuffers [ row ] [ 0 ] != 0 || memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 )"		2300775	0		||			
ANR	2300808	EqualityExpression	LineBuffers [ row ] [ 0 ] != 0		2300775	0		!=			
ANR	2300809	ArrayIndexing	LineBuffers [ row ] [ 0 ]		2300775	0					
ANR	2300810	ArrayIndexing	LineBuffers [ row ]		2300775	0					
ANR	2300811	Identifier	LineBuffers		2300775	0					
ANR	2300812	Identifier	row		2300775	1					
ANR	2300813	PrimaryExpression	0		2300775	1					
ANR	2300814	PrimaryExpression	0		2300775	1					
ANR	2300815	CallExpression	"memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 )"		2300775	1					
ANR	2300816	Callee	memcmp		2300775	0					
ANR	2300817	Identifier	memcmp		2300775	0					
ANR	2300818	ArgumentList	LineBuffers [ row ]		2300775	1					
ANR	2300819	Argument	LineBuffers [ row ]		2300775	0					
ANR	2300820	ArrayIndexing	LineBuffers [ row ]		2300775	0					
ANR	2300821	Identifier	LineBuffers		2300775	0					
ANR	2300822	Identifier	row		2300775	1					
ANR	2300823	Argument	LineBuffers [ row ] + 1		2300775	1					
ANR	2300824	AdditiveExpression	LineBuffers [ row ] + 1		2300775	0		+			
ANR	2300825	ArrayIndexing	LineBuffers [ row ]		2300775	0					
ANR	2300826	Identifier	LineBuffers		2300775	0					
ANR	2300827	Identifier	row		2300775	1					
ANR	2300828	PrimaryExpression	1		2300775	1					
ANR	2300829	Argument	header -> cupsWidth * DotBytes - 1		2300775	2					
ANR	2300830	AdditiveExpression	header -> cupsWidth * DotBytes - 1		2300775	0		-			
ANR	2300831	MultiplicativeExpression	header -> cupsWidth * DotBytes		2300775	0		*			
ANR	2300832	PtrMemberAccess	header -> cupsWidth		2300775	0					
ANR	2300833	Identifier	header		2300775	0					
ANR	2300834	Identifier	cupsWidth		2300775	1					
ANR	2300835	Identifier	DotBytes		2300775	1					
ANR	2300836	PrimaryExpression	1		2300775	1					
ANR	2300837	CompoundStatement		14:2:404:404	2300775	1					
ANR	2300838	ExpressionStatement	i = 0	798:4:16330:16343	2300775	0	True				
ANR	2300839	AssignmentExpression	i = 0		2300775	0		=			
ANR	2300840	Identifier	i		2300775	0					
ANR	2300841	PrimaryExpression	0		2300775	1					
ANR	2300842	ExpressionStatement	dot_count = header -> cupsWidth * DotBytes	799:4:16349:16389	2300775	1	True				
ANR	2300843	AssignmentExpression	dot_count = header -> cupsWidth * DotBytes		2300775	0		=			
ANR	2300844	Identifier	dot_count		2300775	0					
ANR	2300845	MultiplicativeExpression	header -> cupsWidth * DotBytes		2300775	1		*			
ANR	2300846	PtrMemberAccess	header -> cupsWidth		2300775	0					
ANR	2300847	Identifier	header		2300775	0					
ANR	2300848	Identifier	cupsWidth		2300775	1					
ANR	2300849	Identifier	DotBytes		2300775	1					
ANR	2300850	ExpressionStatement	dot_ptr = LineBuffers [ row ]	800:4:16395:16423	2300775	2	True				
ANR	2300851	AssignmentExpression	dot_ptr = LineBuffers [ row ]		2300775	0		=			
ANR	2300852	Identifier	dot_ptr		2300775	0					
ANR	2300853	ArrayIndexing	LineBuffers [ row ]		2300775	1					
ANR	2300854	Identifier	LineBuffers		2300775	0					
ANR	2300855	Identifier	row		2300775	1					
ANR	2300856	WhileStatement	"while ( dot_count >= dot_min && dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0 )"		2300775	3					
ANR	2300857	Condition	"dot_count >= dot_min && dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"	802:11:16437:16536	2300775	0	True				
ANR	2300858	AndExpression	"dot_count >= dot_min && dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"		2300775	0		&&			
ANR	2300859	RelationalExpression	dot_count >= dot_min		2300775	0		>=			
ANR	2300860	Identifier	dot_count		2300775	0					
ANR	2300861	Identifier	dot_min		2300775	1					
ANR	2300862	AndExpression	"dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"		2300775	1		&&			
ANR	2300863	EqualityExpression	dot_ptr [ 0 ] == 0		2300775	0		==			
ANR	2300864	ArrayIndexing	dot_ptr [ 0 ]		2300775	0					
ANR	2300865	Identifier	dot_ptr		2300775	0					
ANR	2300866	PrimaryExpression	0		2300775	1					
ANR	2300867	PrimaryExpression	0		2300775	1					
ANR	2300868	EqualityExpression	"memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"		2300775	1		==			
ANR	2300869	CallExpression	"memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 )"		2300775	0					
ANR	2300870	Callee	memcmp		2300775	0					
ANR	2300871	Identifier	memcmp		2300775	0					
ANR	2300872	ArgumentList	dot_ptr		2300775	1					
ANR	2300873	Argument	dot_ptr		2300775	0					
ANR	2300874	Identifier	dot_ptr		2300775	0					
ANR	2300875	Argument	dot_ptr + 1		2300775	1					
ANR	2300876	AdditiveExpression	dot_ptr + 1		2300775	0		+			
ANR	2300877	Identifier	dot_ptr		2300775	0					
ANR	2300878	PrimaryExpression	1		2300775	1					
ANR	2300879	Argument	dot_min - 1		2300775	2					
ANR	2300880	AdditiveExpression	dot_min - 1		2300775	0		-			
ANR	2300881	Identifier	dot_min		2300775	0					
ANR	2300882	PrimaryExpression	1		2300775	1					
ANR	2300883	PrimaryExpression	0		2300775	1					
ANR	2300884	CompoundStatement		25:4:665:665	2300775	1					
ANR	2300885	ExpressionStatement	i ++	805:6:16551:16563	2300775	0	True				
ANR	2300886	PostIncDecOperationExpression	i ++		2300775	0					
ANR	2300887	Identifier	i		2300775	0					
ANR	2300888	IncDec	++		2300775	1					
ANR	2300889	ExpressionStatement	dot_ptr += dot_min	806:6:16571:16591	2300775	1	True				
ANR	2300890	AssignmentExpression	dot_ptr += dot_min		2300775	0		+=			
ANR	2300891	Identifier	dot_ptr		2300775	0					
ANR	2300892	Identifier	dot_min		2300775	1					
ANR	2300893	ExpressionStatement	dot_count -= dot_min	807:6:16599:16619	2300775	2	True				
ANR	2300894	AssignmentExpression	dot_count -= dot_min		2300775	0		-=			
ANR	2300895	Identifier	dot_count		2300775	0					
ANR	2300896	Identifier	dot_min		2300775	1					
ANR	2300897	WhileStatement	"while ( dot_count >= dot_min && dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0 )"		2300775	4					
ANR	2300898	Condition	"dot_count >= dot_min && dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"	814:11:16682:16854	2300775	0	True				
ANR	2300899	AndExpression	"dot_count >= dot_min && dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"		2300775	0		&&			
ANR	2300900	RelationalExpression	dot_count >= dot_min		2300775	0		>=			
ANR	2300901	Identifier	dot_count		2300775	0					
ANR	2300902	Identifier	dot_min		2300775	1					
ANR	2300903	AndExpression	"dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"		2300775	1		&&			
ANR	2300904	EqualityExpression	dot_ptr [ dot_count - dot_min ] == 0		2300775	0		==			
ANR	2300905	ArrayIndexing	dot_ptr [ dot_count - dot_min ]		2300775	0					
ANR	2300906	Identifier	dot_ptr		2300775	0					
ANR	2300907	AdditiveExpression	dot_count - dot_min		2300775	1		-			
ANR	2300908	Identifier	dot_count		2300775	0					
ANR	2300909	Identifier	dot_min		2300775	1					
ANR	2300910	PrimaryExpression	0		2300775	1					
ANR	2300911	EqualityExpression	"memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"		2300775	1		==			
ANR	2300912	CallExpression	"memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 )"		2300775	0					
ANR	2300913	Callee	memcmp		2300775	0					
ANR	2300914	Identifier	memcmp		2300775	0					
ANR	2300915	ArgumentList	dot_ptr + dot_count - dot_min		2300775	1					
ANR	2300916	Argument	dot_ptr + dot_count - dot_min		2300775	0					
ANR	2300917	AdditiveExpression	dot_ptr + dot_count - dot_min		2300775	0		+			
ANR	2300918	Identifier	dot_ptr		2300775	0					
ANR	2300919	AdditiveExpression	dot_count - dot_min		2300775	1		-			
ANR	2300920	Identifier	dot_count		2300775	0					
ANR	2300921	Identifier	dot_min		2300775	1					
ANR	2300922	Argument	dot_ptr + dot_count - dot_min + 1		2300775	1					
ANR	2300923	AdditiveExpression	dot_ptr + dot_count - dot_min + 1		2300775	0		+			
ANR	2300924	Identifier	dot_ptr		2300775	0					
ANR	2300925	AdditiveExpression	dot_count - dot_min + 1		2300775	1		-			
ANR	2300926	Identifier	dot_count		2300775	0					
ANR	2300927	AdditiveExpression	dot_min + 1		2300775	1		+			
ANR	2300928	Identifier	dot_min		2300775	0					
ANR	2300929	PrimaryExpression	1		2300775	1					
ANR	2300930	Argument	dot_min - 1		2300775	2					
ANR	2300931	AdditiveExpression	dot_min - 1		2300775	0		-			
ANR	2300932	Identifier	dot_min		2300775	0					
ANR	2300933	PrimaryExpression	1		2300775	1					
ANR	2300934	PrimaryExpression	0		2300775	1					
ANR	2300935	ExpressionStatement	dot_count -= dot_min	817:6:16863:16883	2300775	1	True				
ANR	2300936	AssignmentExpression	dot_count -= dot_min		2300775	0		-=			
ANR	2300937	Identifier	dot_count		2300775	0					
ANR	2300938	Identifier	dot_min		2300775	1					
ANR	2300939	IfStatement	if ( i == 0 )		2300775	5					
ANR	2300940	Condition	i == 0	823:8:16950:16955	2300775	0	True				
ANR	2300941	EqualityExpression	i == 0		2300775	0		==			
ANR	2300942	Identifier	i		2300775	0					
ANR	2300943	PrimaryExpression	0		2300775	1					
ANR	2300944	ExpressionStatement	putchar ( '\\r' )	824:6:16964:16977	2300775	1	True				
ANR	2300945	CallExpression	putchar ( '\\r' )		2300775	0					
ANR	2300946	Callee	putchar		2300775	0					
ANR	2300947	Identifier	putchar		2300775	0					
ANR	2300948	ArgumentList	'\\r'		2300775	1					
ANR	2300949	Argument	'\\r'		2300775	0					
ANR	2300950	PrimaryExpression	'\\r'		2300775	0					
ANR	2300951	ElseStatement	else		2300775	0					
ANR	2300952	CompoundStatement		47:4:1114:1114	2300775	0					
ANR	2300953	ExpressionStatement	putchar ( 0x1b )	827:6:17000:17013	2300775	0	True				
ANR	2300954	CallExpression	putchar ( 0x1b )		2300775	0					
ANR	2300955	Callee	putchar		2300775	0					
ANR	2300956	Identifier	putchar		2300775	0					
ANR	2300957	ArgumentList	0x1b		2300775	1					
ANR	2300958	Argument	0x1b		2300775	0					
ANR	2300959	PrimaryExpression	0x1b		2300775	0					
ANR	2300960	ExpressionStatement	putchar ( '$' )	828:6:17021:17033	2300775	1	True				
ANR	2300961	CallExpression	putchar ( '$' )		2300775	0					
ANR	2300962	Callee	putchar		2300775	0					
ANR	2300963	Identifier	putchar		2300775	0					
ANR	2300964	ArgumentList	'$'		2300775	1					
ANR	2300965	Argument	'$'		2300775	0					
ANR	2300966	PrimaryExpression	'$'		2300775	0					
ANR	2300967	ExpressionStatement	putchar ( i & 255 )	829:6:17041:17057	2300775	2	True				
ANR	2300968	CallExpression	putchar ( i & 255 )		2300775	0					
ANR	2300969	Callee	putchar		2300775	0					
ANR	2300970	Identifier	putchar		2300775	0					
ANR	2300971	ArgumentList	i & 255		2300775	1					
ANR	2300972	Argument	i & 255		2300775	0					
ANR	2300973	BitAndExpression	i & 255		2300775	0		&			
ANR	2300974	Identifier	i		2300775	0					
ANR	2300975	PrimaryExpression	255		2300775	1					
ANR	2300976	ExpressionStatement	putchar ( i >> 8 )	830:6:17065:17080	2300775	3	True				
ANR	2300977	CallExpression	putchar ( i >> 8 )		2300775	0					
ANR	2300978	Callee	putchar		2300775	0					
ANR	2300979	Identifier	putchar		2300775	0					
ANR	2300980	ArgumentList	i >> 8		2300775	1					
ANR	2300981	Argument	i >> 8		2300775	0					
ANR	2300982	ShiftExpression	i >> 8		2300775	0		>>			
ANR	2300983	Identifier	i		2300775	0					
ANR	2300984	PrimaryExpression	8		2300775	1					
ANR	2300985	ExpressionStatement	"printf ( ""\\033*"" )"	837:4:17152:17167	2300775	6	True				
ANR	2300986	CallExpression	"printf ( ""\\033*"" )"		2300775	0					
ANR	2300987	Callee	printf		2300775	0					
ANR	2300988	Identifier	printf		2300775	0					
ANR	2300989	ArgumentList	"""\\033*"""		2300775	1					
ANR	2300990	Argument	"""\\033*"""		2300775	0					
ANR	2300991	PrimaryExpression	"""\\033*"""		2300775	0					
ANR	2300992	SwitchStatement	switch ( header -> HWResolution [ 0 ] )		2300775	7					
ANR	2300993	Condition	header -> HWResolution [ 0 ]	838:12:17206:17228	2300775	0	True				
ANR	2300994	ArrayIndexing	header -> HWResolution [ 0 ]		2300775	0					
ANR	2300995	PtrMemberAccess	header -> HWResolution		2300775	0					
ANR	2300996	Identifier	header		2300775	0					
ANR	2300997	Identifier	HWResolution		2300775	1					
ANR	2300998	PrimaryExpression	0		2300775	1					
ANR	2300999	CompoundStatement		60:4:1357:1357	2300775	1					
ANR	2301000	Label	case 60 :	840:6:17243:17251	2300775	0	True				
ANR	2301001	ExpressionStatement	putchar ( 0 )	841:10:17286:17296	2300775	1	True				
ANR	2301002	CallExpression	putchar ( 0 )		2300775	0					
ANR	2301003	Callee	putchar		2300775	0					
ANR	2301004	Identifier	putchar		2300775	0					
ANR	2301005	ArgumentList	0		2300775	1					
ANR	2301006	Argument	0		2300775	0					
ANR	2301007	PrimaryExpression	0		2300775	0					
ANR	2301008	BreakStatement	break ;	842:10:17308:17313	2300775	2	True				
ANR	2301009	Label	case 120 :	843:6:17321:17330	2300775	3	True				
ANR	2301010	ExpressionStatement	putchar ( 1 )	844:10:17366:17376	2300775	4	True				
ANR	2301011	CallExpression	putchar ( 1 )		2300775	0					
ANR	2301012	Callee	putchar		2300775	0					
ANR	2301013	Identifier	putchar		2300775	0					
ANR	2301014	ArgumentList	1		2300775	1					
ANR	2301015	Argument	1		2300775	0					
ANR	2301016	PrimaryExpression	1		2300775	0					
ANR	2301017	BreakStatement	break ;	845:10:17388:17393	2300775	5	True				
ANR	2301018	Label	case 180 :	846:6:17401:17410	2300775	6	True				
ANR	2301019	ExpressionStatement	putchar ( 39 )	847:10:17440:17451	2300775	7	True				
ANR	2301020	CallExpression	putchar ( 39 )		2300775	0					
ANR	2301021	Callee	putchar		2300775	0					
ANR	2301022	Identifier	putchar		2300775	0					
ANR	2301023	ArgumentList	39		2300775	1					
ANR	2301024	Argument	39		2300775	0					
ANR	2301025	PrimaryExpression	39		2300775	0					
ANR	2301026	BreakStatement	break ;	848:10:17463:17468	2300775	8	True				
ANR	2301027	Label	case 240 :	849:6:17476:17485	2300775	9	True				
ANR	2301028	ExpressionStatement	putchar ( 3 )	850:10:17518:17528	2300775	10	True				
ANR	2301029	CallExpression	putchar ( 3 )		2300775	0					
ANR	2301030	Callee	putchar		2300775	0					
ANR	2301031	Identifier	putchar		2300775	0					
ANR	2301032	ArgumentList	3		2300775	1					
ANR	2301033	Argument	3		2300775	0					
ANR	2301034	PrimaryExpression	3		2300775	0					
ANR	2301035	BreakStatement	break ;	851:10:17540:17545	2300775	11	True				
ANR	2301036	Label	case 360 :	852:6:17553:17562	2300775	12	True				
ANR	2301037	IfStatement	if ( header -> HWResolution [ 1 ] == 180 )		2300775	13					
ANR	2301038	Condition	header -> HWResolution [ 1 ] == 180	853:7:17597:17626	2300775	0	True				
ANR	2301039	EqualityExpression	header -> HWResolution [ 1 ] == 180		2300775	0		==			
ANR	2301040	ArrayIndexing	header -> HWResolution [ 1 ]		2300775	0					
ANR	2301041	PtrMemberAccess	header -> HWResolution		2300775	0					
ANR	2301042	Identifier	header		2300775	0					
ANR	2301043	Identifier	HWResolution		2300775	1					
ANR	2301044	PrimaryExpression	1		2300775	1					
ANR	2301045	PrimaryExpression	180		2300775	1					
ANR	2301046	CompoundStatement		75:3:1754:1754	2300775	1					
ANR	2301047	IfStatement	if ( Shingling && LineCount != 0 )		2300775	0					
ANR	2301048	Condition	Shingling && LineCount != 0	855:16:17650:17676	2300775	0	True				
ANR	2301049	AndExpression	Shingling && LineCount != 0		2300775	0		&&			
ANR	2301050	Identifier	Shingling		2300775	0					
ANR	2301051	EqualityExpression	LineCount != 0		2300775	1		!=			
ANR	2301052	Identifier	LineCount		2300775	0					
ANR	2301053	PrimaryExpression	0		2300775	1					
ANR	2301054	ExpressionStatement	putchar ( 40 )	856:14:17693:17704	2300775	1	True				
ANR	2301055	CallExpression	putchar ( 40 )		2300775	0					
ANR	2301056	Callee	putchar		2300775	0					
ANR	2301057	Identifier	putchar		2300775	0					
ANR	2301058	ArgumentList	40		2300775	1					
ANR	2301059	Argument	40		2300775	0					
ANR	2301060	PrimaryExpression	40		2300775	0					
ANR	2301061	ElseStatement	else		2300775	0					
ANR	2301062	ExpressionStatement	putchar ( 41 )	858:14:17757:17768	2300775	0	True				
ANR	2301063	CallExpression	putchar ( 41 )		2300775	0					
ANR	2301064	Callee	putchar		2300775	0					
ANR	2301065	Identifier	putchar		2300775	0					
ANR	2301066	ArgumentList	41		2300775	1					
ANR	2301067	Argument	41		2300775	0					
ANR	2301068	PrimaryExpression	41		2300775	0					
ANR	2301069	ElseStatement	else		2300775	0					
ANR	2301070	CompoundStatement		82:10:1935:1935	2300775	0					
ANR	2301071	IfStatement	if ( Shingling && LineCount != 0 )		2300775	0					
ANR	2301072	Condition	Shingling && LineCount != 0	862:9:17824:17850	2300775	0	True				
ANR	2301073	AndExpression	Shingling && LineCount != 0		2300775	0		&&			
ANR	2301074	Identifier	Shingling		2300775	0					
ANR	2301075	EqualityExpression	LineCount != 0		2300775	1		!=			
ANR	2301076	Identifier	LineCount		2300775	0					
ANR	2301077	PrimaryExpression	0		2300775	1					
ANR	2301078	ExpressionStatement	putchar ( 72 )	863:14:17867:17878	2300775	1	True				
ANR	2301079	CallExpression	putchar ( 72 )		2300775	0					
ANR	2301080	Callee	putchar		2300775	0					
ANR	2301081	Identifier	putchar		2300775	0					
ANR	2301082	ArgumentList	72		2300775	1					
ANR	2301083	Argument	72		2300775	0					
ANR	2301084	PrimaryExpression	72		2300775	0					
ANR	2301085	ElseStatement	else		2300775	0					
ANR	2301086	ExpressionStatement	putchar ( 73 )	865:14:17931:17942	2300775	0	True				
ANR	2301087	CallExpression	putchar ( 73 )		2300775	0					
ANR	2301088	Callee	putchar		2300775	0					
ANR	2301089	Identifier	putchar		2300775	0					
ANR	2301090	ArgumentList	73		2300775	1					
ANR	2301091	Argument	73		2300775	0					
ANR	2301092	PrimaryExpression	73		2300775	0					
ANR	2301093	BreakStatement	break ;	867:10:17986:17991	2300775	14	True				
ANR	2301094	ExpressionStatement	n = ( unsigned ) dot_count / DotBytes	870:4:18004:18038	2300775	8	True				
ANR	2301095	AssignmentExpression	n = ( unsigned ) dot_count / DotBytes		2300775	0		=			
ANR	2301096	Identifier	n		2300775	0					
ANR	2301097	MultiplicativeExpression	( unsigned ) dot_count / DotBytes		2300775	1		/			
ANR	2301098	CastExpression	( unsigned ) dot_count		2300775	0					
ANR	2301099	CastTarget	unsigned		2300775	0					
ANR	2301100	Identifier	dot_count		2300775	1					
ANR	2301101	Identifier	DotBytes		2300775	1					
ANR	2301102	ExpressionStatement	putchar ( n & 255 )	871:4:18044:18060	2300775	9	True				
ANR	2301103	CallExpression	putchar ( n & 255 )		2300775	0					
ANR	2301104	Callee	putchar		2300775	0					
ANR	2301105	Identifier	putchar		2300775	0					
ANR	2301106	ArgumentList	n & 255		2300775	1					
ANR	2301107	Argument	n & 255		2300775	0					
ANR	2301108	BitAndExpression	n & 255		2300775	0		&			
ANR	2301109	Identifier	n		2300775	0					
ANR	2301110	PrimaryExpression	255		2300775	1					
ANR	2301111	ExpressionStatement	putchar ( n / 256 )	872:4:18066:18082	2300775	10	True				
ANR	2301112	CallExpression	putchar ( n / 256 )		2300775	0					
ANR	2301113	Callee	putchar		2300775	0					
ANR	2301114	Identifier	putchar		2300775	0					
ANR	2301115	ArgumentList	n / 256		2300775	1					
ANR	2301116	Argument	n / 256		2300775	0					
ANR	2301117	MultiplicativeExpression	n / 256		2300775	0		/			
ANR	2301118	Identifier	n		2300775	0					
ANR	2301119	PrimaryExpression	256		2300775	1					
ANR	2301120	IfStatement	if ( header -> HWResolution [ 0 ] == 120 || header -> HWResolution [ 0 ] == 240 )		2300775	11					
ANR	2301121	Condition	header -> HWResolution [ 0 ] == 120 || header -> HWResolution [ 0 ] == 240	878:8:18140:18211	2300775	0	True				
ANR	2301122	OrExpression	header -> HWResolution [ 0 ] == 120 || header -> HWResolution [ 0 ] == 240		2300775	0		||			
ANR	2301123	EqualityExpression	header -> HWResolution [ 0 ] == 120		2300775	0		==			
ANR	2301124	ArrayIndexing	header -> HWResolution [ 0 ]		2300775	0					
ANR	2301125	PtrMemberAccess	header -> HWResolution		2300775	0					
ANR	2301126	Identifier	header		2300775	0					
ANR	2301127	Identifier	HWResolution		2300775	1					
ANR	2301128	PrimaryExpression	0		2300775	1					
ANR	2301129	PrimaryExpression	120		2300775	1					
ANR	2301130	EqualityExpression	header -> HWResolution [ 0 ] == 240		2300775	1		==			
ANR	2301131	ArrayIndexing	header -> HWResolution [ 0 ]		2300775	0					
ANR	2301132	PtrMemberAccess	header -> HWResolution		2300775	0					
ANR	2301133	Identifier	header		2300775	0					
ANR	2301134	Identifier	HWResolution		2300775	1					
ANR	2301135	PrimaryExpression	0		2300775	1					
ANR	2301136	PrimaryExpression	240		2300775	1					
ANR	2301137	CompoundStatement		101:4:2340:2340	2300775	1					
ANR	2301138	ForStatement	"for ( n = dot_count / 2 , ptr = dot_ptr ; n > 0 ; n -- , ptr += 2 )"		2300775	0					
ANR	2301139	ForInit	"n = dot_count / 2 , ptr = dot_ptr ;"	885:11:18319:18351	2300775	0	True				
ANR	2301140	Expression	"n = dot_count / 2 , ptr = dot_ptr"		2300775	0					
ANR	2301141	AssignmentExpression	n = dot_count / 2		2300775	0		=			
ANR	2301142	Identifier	n		2300775	0					
ANR	2301143	MultiplicativeExpression	dot_count / 2		2300775	1		/			
ANR	2301144	Identifier	dot_count		2300775	0					
ANR	2301145	PrimaryExpression	2		2300775	1					
ANR	2301146	AssignmentExpression	ptr = dot_ptr		2300775	1		=			
ANR	2301147	Identifier	ptr		2300775	0					
ANR	2301148	Identifier	dot_ptr		2300775	1					
ANR	2301149	Condition	n > 0	885:45:18353:18357	2300775	1	True				
ANR	2301150	RelationalExpression	n > 0		2300775	0		>			
ANR	2301151	Identifier	n		2300775	0					
ANR	2301152	PrimaryExpression	0		2300775	1					
ANR	2301153	Expression	"n -- , ptr += 2"	885:52:18360:18373	2300775	2	True				
ANR	2301154	PostIncDecOperationExpression	n --		2300775	0					
ANR	2301155	Identifier	n		2300775	0					
ANR	2301156	IncDec	--		2300775	1					
ANR	2301157	AssignmentExpression	ptr += 2		2300775	1		+=			
ANR	2301158	Identifier	ptr		2300775	0					
ANR	2301159	PrimaryExpression	2		2300775	1					
ANR	2301160	CompoundStatement		107:6:2504:2504	2300775	3					
ANR	2301161	ExpressionStatement	putchar ( * ptr )	887:8:18392:18405	2300775	0	True				
ANR	2301162	CallExpression	putchar ( * ptr )		2300775	0					
ANR	2301163	Callee	putchar		2300775	0					
ANR	2301164	Identifier	putchar		2300775	0					
ANR	2301165	ArgumentList	* ptr		2300775	1					
ANR	2301166	Argument	* ptr		2300775	0					
ANR	2301167	UnaryOperationExpression	* ptr		2300775	0					
ANR	2301168	UnaryOperator	*		2300775	0					
ANR	2301169	Identifier	ptr		2300775	1					
ANR	2301170	ExpressionStatement	putchar ( 0 )	888:1:18408:18418	2300775	1	True				
ANR	2301171	CallExpression	putchar ( 0 )		2300775	0					
ANR	2301172	Callee	putchar		2300775	0					
ANR	2301173	Identifier	putchar		2300775	0					
ANR	2301174	ArgumentList	0		2300775	1					
ANR	2301175	Argument	0		2300775	0					
ANR	2301176	PrimaryExpression	0		2300775	0					
ANR	2301177	IfStatement	if ( i == 0 )		2300775	1					
ANR	2301178	Condition	i == 0	895:10:18511:18516	2300775	0	True				
ANR	2301179	EqualityExpression	i == 0		2300775	0		==			
ANR	2301180	Identifier	i		2300775	0					
ANR	2301181	PrimaryExpression	0		2300775	1					
ANR	2301182	ExpressionStatement	putchar ( '\\r' )	896:1:18520:18533	2300775	1	True				
ANR	2301183	CallExpression	putchar ( '\\r' )		2300775	0					
ANR	2301184	Callee	putchar		2300775	0					
ANR	2301185	Identifier	putchar		2300775	0					
ANR	2301186	ArgumentList	'\\r'		2300775	1					
ANR	2301187	Argument	'\\r'		2300775	0					
ANR	2301188	PrimaryExpression	'\\r'		2300775	0					
ANR	2301189	ElseStatement	else		2300775	0					
ANR	2301190	CompoundStatement		119:6:2674:2674	2300775	0					
ANR	2301191	ExpressionStatement	putchar ( 0x1b )	899:1:18555:18568	2300775	0	True				
ANR	2301192	CallExpression	putchar ( 0x1b )		2300775	0					
ANR	2301193	Callee	putchar		2300775	0					
ANR	2301194	Identifier	putchar		2300775	0					
ANR	2301195	ArgumentList	0x1b		2300775	1					
ANR	2301196	Argument	0x1b		2300775	0					
ANR	2301197	PrimaryExpression	0x1b		2300775	0					
ANR	2301198	ExpressionStatement	putchar ( '$' )	900:1:18571:18583	2300775	1	True				
ANR	2301199	CallExpression	putchar ( '$' )		2300775	0					
ANR	2301200	Callee	putchar		2300775	0					
ANR	2301201	Identifier	putchar		2300775	0					
ANR	2301202	ArgumentList	'$'		2300775	1					
ANR	2301203	Argument	'$'		2300775	0					
ANR	2301204	PrimaryExpression	'$'		2300775	0					
ANR	2301205	ExpressionStatement	putchar ( i & 255 )	901:1:18586:18602	2300775	2	True				
ANR	2301206	CallExpression	putchar ( i & 255 )		2300775	0					
ANR	2301207	Callee	putchar		2300775	0					
ANR	2301208	Identifier	putchar		2300775	0					
ANR	2301209	ArgumentList	i & 255		2300775	1					
ANR	2301210	Argument	i & 255		2300775	0					
ANR	2301211	BitAndExpression	i & 255		2300775	0		&			
ANR	2301212	Identifier	i		2300775	0					
ANR	2301213	PrimaryExpression	255		2300775	1					
ANR	2301214	ExpressionStatement	putchar ( i >> 8 )	902:1:18605:18620	2300775	3	True				
ANR	2301215	CallExpression	putchar ( i >> 8 )		2300775	0					
ANR	2301216	Callee	putchar		2300775	0					
ANR	2301217	Identifier	putchar		2300775	0					
ANR	2301218	ArgumentList	i >> 8		2300775	1					
ANR	2301219	Argument	i >> 8		2300775	0					
ANR	2301220	ShiftExpression	i >> 8		2300775	0		>>			
ANR	2301221	Identifier	i		2300775	0					
ANR	2301222	PrimaryExpression	8		2300775	1					
ANR	2301223	IfStatement	if ( header -> HWResolution [ 0 ] == 120 )		2300775	2					
ANR	2301224	Condition	header -> HWResolution [ 0 ] == 120	905:10:18641:18670	2300775	0	True				
ANR	2301225	EqualityExpression	header -> HWResolution [ 0 ] == 120		2300775	0		==			
ANR	2301226	ArrayIndexing	header -> HWResolution [ 0 ]		2300775	0					
ANR	2301227	PtrMemberAccess	header -> HWResolution		2300775	0					
ANR	2301228	Identifier	header		2300775	0					
ANR	2301229	Identifier	HWResolution		2300775	1					
ANR	2301230	PrimaryExpression	0		2300775	1					
ANR	2301231	PrimaryExpression	120		2300775	1					
ANR	2301232	ExpressionStatement	"printf ( ""\\033*\\001"" )"	906:7:18680:18699	2300775	1	True				
ANR	2301233	CallExpression	"printf ( ""\\033*\\001"" )"		2300775	0					
ANR	2301234	Callee	printf		2300775	0					
ANR	2301235	Identifier	printf		2300775	0					
ANR	2301236	ArgumentList	"""\\033*\\001"""		2300775	1					
ANR	2301237	Argument	"""\\033*\\001"""		2300775	0					
ANR	2301238	PrimaryExpression	"""\\033*\\001"""		2300775	0					
ANR	2301239	ElseStatement	else		2300775	0					
ANR	2301240	ExpressionStatement	"printf ( ""\\033*\\003"" )"	908:7:18743:18762	2300775	0	True				
ANR	2301241	CallExpression	"printf ( ""\\033*\\003"" )"		2300775	0					
ANR	2301242	Callee	printf		2300775	0					
ANR	2301243	Identifier	printf		2300775	0					
ANR	2301244	ArgumentList	"""\\033*\\003"""		2300775	1					
ANR	2301245	Argument	"""\\033*\\003"""		2300775	0					
ANR	2301246	PrimaryExpression	"""\\033*\\003"""		2300775	0					
ANR	2301247	ExpressionStatement	n = ( unsigned ) dot_count / DotBytes	910:6:18795:18829	2300775	3	True				
ANR	2301248	AssignmentExpression	n = ( unsigned ) dot_count / DotBytes		2300775	0		=			
ANR	2301249	Identifier	n		2300775	0					
ANR	2301250	MultiplicativeExpression	( unsigned ) dot_count / DotBytes		2300775	1		/			
ANR	2301251	CastExpression	( unsigned ) dot_count		2300775	0					
ANR	2301252	CastTarget	unsigned		2300775	0					
ANR	2301253	Identifier	dot_count		2300775	1					
ANR	2301254	Identifier	DotBytes		2300775	1					
ANR	2301255	ExpressionStatement	putchar ( n & 255 )	911:6:18837:18853	2300775	4	True				
ANR	2301256	CallExpression	putchar ( n & 255 )		2300775	0					
ANR	2301257	Callee	putchar		2300775	0					
ANR	2301258	Identifier	putchar		2300775	0					
ANR	2301259	ArgumentList	n & 255		2300775	1					
ANR	2301260	Argument	n & 255		2300775	0					
ANR	2301261	BitAndExpression	n & 255		2300775	0		&			
ANR	2301262	Identifier	n		2300775	0					
ANR	2301263	PrimaryExpression	255		2300775	1					
ANR	2301264	ExpressionStatement	putchar ( n / 256 )	912:6:18861:18877	2300775	5	True				
ANR	2301265	CallExpression	putchar ( n / 256 )		2300775	0					
ANR	2301266	Callee	putchar		2300775	0					
ANR	2301267	Identifier	putchar		2300775	0					
ANR	2301268	ArgumentList	n / 256		2300775	1					
ANR	2301269	Argument	n / 256		2300775	0					
ANR	2301270	MultiplicativeExpression	n / 256		2300775	0		/			
ANR	2301271	Identifier	n		2300775	0					
ANR	2301272	PrimaryExpression	256		2300775	1					
ANR	2301273	ForStatement	"for ( n = dot_count / 2 , ptr = dot_ptr + 1 ; n > 0 ; n -- , ptr += 2 )"		2300775	6					
ANR	2301274	ForInit	"n = dot_count / 2 , ptr = dot_ptr + 1 ;"	914:11:18891:18927	2300775	0	True				
ANR	2301275	Expression	"n = dot_count / 2 , ptr = dot_ptr + 1"		2300775	0					
ANR	2301276	AssignmentExpression	n = dot_count / 2		2300775	0		=			
ANR	2301277	Identifier	n		2300775	0					
ANR	2301278	MultiplicativeExpression	dot_count / 2		2300775	1		/			
ANR	2301279	Identifier	dot_count		2300775	0					
ANR	2301280	PrimaryExpression	2		2300775	1					
ANR	2301281	AssignmentExpression	ptr = dot_ptr + 1		2300775	1		=			
ANR	2301282	Identifier	ptr		2300775	0					
ANR	2301283	AdditiveExpression	dot_ptr + 1		2300775	1		+			
ANR	2301284	Identifier	dot_ptr		2300775	0					
ANR	2301285	PrimaryExpression	1		2300775	1					
ANR	2301286	Condition	n > 0	914:49:18929:18933	2300775	1	True				
ANR	2301287	RelationalExpression	n > 0		2300775	0		>			
ANR	2301288	Identifier	n		2300775	0					
ANR	2301289	PrimaryExpression	0		2300775	1					
ANR	2301290	Expression	"n -- , ptr += 2"	914:56:18936:18949	2300775	2	True				
ANR	2301291	PostIncDecOperationExpression	n --		2300775	0					
ANR	2301292	Identifier	n		2300775	0					
ANR	2301293	IncDec	--		2300775	1					
ANR	2301294	AssignmentExpression	ptr += 2		2300775	1		+=			
ANR	2301295	Identifier	ptr		2300775	0					
ANR	2301296	PrimaryExpression	2		2300775	1					
ANR	2301297	CompoundStatement		136:6:3080:3080	2300775	3					
ANR	2301298	ExpressionStatement	putchar ( 0 )	916:1:18961:18971	2300775	0	True				
ANR	2301299	CallExpression	putchar ( 0 )		2300775	0					
ANR	2301300	Callee	putchar		2300775	0					
ANR	2301301	Identifier	putchar		2300775	0					
ANR	2301302	ArgumentList	0		2300775	1					
ANR	2301303	Argument	0		2300775	0					
ANR	2301304	PrimaryExpression	0		2300775	0					
ANR	2301305	ExpressionStatement	putchar ( * ptr )	917:8:18981:18994	2300775	1	True				
ANR	2301306	CallExpression	putchar ( * ptr )		2300775	0					
ANR	2301307	Callee	putchar		2300775	0					
ANR	2301308	Identifier	putchar		2300775	0					
ANR	2301309	ArgumentList	* ptr		2300775	1					
ANR	2301310	Argument	* ptr		2300775	0					
ANR	2301311	UnaryOperationExpression	* ptr		2300775	0					
ANR	2301312	UnaryOperator	*		2300775	0					
ANR	2301313	Identifier	ptr		2300775	1					
ANR	2301314	ElseStatement	else		2300775	0					
ANR	2301315	ExpressionStatement	"pwrite ( dot_ptr , dot_count )"	921:6:19025:19051	2300775	0	True				
ANR	2301316	CallExpression	"pwrite ( dot_ptr , dot_count )"		2300775	0					
ANR	2301317	Callee	pwrite		2300775	0					
ANR	2301318	Identifier	pwrite		2300775	0					
ANR	2301319	ArgumentList	dot_ptr		2300775	1					
ANR	2301320	Argument	dot_ptr		2300775	0					
ANR	2301321	Identifier	dot_ptr		2300775	0					
ANR	2301322	Argument	dot_count		2300775	1					
ANR	2301323	Identifier	dot_count		2300775	0					
ANR	2301324	ExpressionStatement	putchar ( '\\n' )	928:2:19092:19105	2300775	5	True				
ANR	2301325	CallExpression	putchar ( '\\n' )		2300775	0					
ANR	2301326	Callee	putchar		2300775	0					
ANR	2301327	Identifier	putchar		2300775	0					
ANR	2301328	ArgumentList	'\\n'		2300775	1					
ANR	2301329	Argument	'\\n'		2300775	0					
ANR	2301330	PrimaryExpression	'\\n'		2300775	0					
ANR	2301331	IfStatement	if ( Shingling && row == 1 )		2300775	6					
ANR	2301332	Condition	Shingling && row == 1	930:6:19114:19134	2300775	0	True				
ANR	2301333	AndExpression	Shingling && row == 1		2300775	0		&&			
ANR	2301334	Identifier	Shingling		2300775	0					
ANR	2301335	EqualityExpression	row == 1		2300775	1		==			
ANR	2301336	Identifier	row		2300775	0					
ANR	2301337	PrimaryExpression	1		2300775	1					
ANR	2301338	CompoundStatement		152:2:3261:3261	2300775	1					
ANR	2301339	IfStatement	if ( header -> HWResolution [ 1 ] == 360 )		2300775	0					
ANR	2301340	Condition	header -> HWResolution [ 1 ] == 360	932:8:19149:19178	2300775	0	True				
ANR	2301341	EqualityExpression	header -> HWResolution [ 1 ] == 360		2300775	0		==			
ANR	2301342	ArrayIndexing	header -> HWResolution [ 1 ]		2300775	0					
ANR	2301343	PtrMemberAccess	header -> HWResolution		2300775	0					
ANR	2301344	Identifier	header		2300775	0					
ANR	2301345	Identifier	HWResolution		2300775	1					
ANR	2301346	PrimaryExpression	1		2300775	1					
ANR	2301347	PrimaryExpression	360		2300775	1					
ANR	2301348	ExpressionStatement	"printf ( ""\\n\\n\\n\\n"" )"	933:6:19187:19205	2300775	1	True				
ANR	2301349	CallExpression	"printf ( ""\\n\\n\\n\\n"" )"		2300775	0					
ANR	2301350	Callee	printf		2300775	0					
ANR	2301351	Identifier	printf		2300775	0					
ANR	2301352	ArgumentList	"""\\n\\n\\n\\n"""		2300775	1					
ANR	2301353	Argument	"""\\n\\n\\n\\n"""		2300775	0					
ANR	2301354	PrimaryExpression	"""\\n\\n\\n\\n"""		2300775	0					
ANR	2301355	ElseStatement	else		2300775	0					
ANR	2301356	ExpressionStatement	"printf ( ""\\n"" )"	935:6:19222:19234	2300775	0	True				
ANR	2301357	CallExpression	"printf ( ""\\n"" )"		2300775	0					
ANR	2301358	Callee	printf		2300775	0					
ANR	2301359	Identifier	printf		2300775	0					
ANR	2301360	ArgumentList	"""\\n"""		2300775	1					
ANR	2301361	Argument	"""\\n"""		2300775	0					
ANR	2301362	PrimaryExpression	"""\\n"""		2300775	0					
ANR	2301363	ExpressionStatement	fflush ( stdout )	938:2:19243:19257	2300775	7	True				
ANR	2301364	CallExpression	fflush ( stdout )		2300775	0					
ANR	2301365	Callee	fflush		2300775	0					
ANR	2301366	Identifier	fflush		2300775	0					
ANR	2301367	ArgumentList	stdout		2300775	1					
ANR	2301368	Argument	stdout		2300775	0					
ANR	2301369	Identifier	stdout		2300775	0					
ANR	2301370	ExpressionStatement	"memset ( LineBuffers [ row ] , 0 , header -> cupsWidth * DotBytes )"	944:2:19296:19353	2300775	8	True				
ANR	2301371	CallExpression	"memset ( LineBuffers [ row ] , 0 , header -> cupsWidth * DotBytes )"		2300775	0					
ANR	2301372	Callee	memset		2300775	0					
ANR	2301373	Identifier	memset		2300775	0					
ANR	2301374	ArgumentList	LineBuffers [ row ]		2300775	1					
ANR	2301375	Argument	LineBuffers [ row ]		2300775	0					
ANR	2301376	ArrayIndexing	LineBuffers [ row ]		2300775	0					
ANR	2301377	Identifier	LineBuffers		2300775	0					
ANR	2301378	Identifier	row		2300775	1					
ANR	2301379	Argument	0		2300775	1					
ANR	2301380	PrimaryExpression	0		2300775	0					
ANR	2301381	Argument	header -> cupsWidth * DotBytes		2300775	2					
ANR	2301382	MultiplicativeExpression	header -> cupsWidth * DotBytes		2300775	0		*			
ANR	2301383	PtrMemberAccess	header -> cupsWidth		2300775	0					
ANR	2301384	Identifier	header		2300775	0					
ANR	2301385	Identifier	cupsWidth		2300775	1					
ANR	2301386	Identifier	DotBytes		2300775	1					
ANR	2301387	ReturnType	void		2300775	1					
ANR	2301388	Identifier	OutputRows		2300775	2					
ANR	2301389	ParameterList	"const cups_page_header2_t * header , int row"		2300775	3					
ANR	2301390	Parameter	const cups_page_header2_t * header	778:4:15750:15782	2300775	0	True				
ANR	2301391	ParameterType	const cups_page_header2_t *		2300775	0					
ANR	2301392	Identifier	header		2300775	1					
ANR	2301393	Parameter	int row	779:4:15817:15844	2300775	1	True				
ANR	2301394	ParameterType	int		2300775	0					
ANR	2301395	Identifier	row		2300775	1					
ANR	2301396	CFGEntryNode	ENTRY		2300775		True				
ANR	2301397	CFGExitNode	EXIT		2300775		True				
ANR	2301398	Symbol	* row		2300775						
ANR	2301399	Symbol	* dot_count		2300775						
ANR	2301400	Symbol	stdout		2300775						
ANR	2301401	Symbol	* dot_ptr		2300775						
ANR	2301402	Symbol	LineCount		2300775						
ANR	2301403	Symbol	* LineBuffers		2300775						
ANR	2301404	Symbol	dot_ptr		2300775						
ANR	2301405	Symbol	header -> HWResolution		2300775						
ANR	2301406	Symbol	memcmp		2300775						
ANR	2301407	Symbol	* ptr		2300775						
ANR	2301408	Symbol	row		2300775						
ANR	2301409	Symbol	header -> cupsWidth		2300775						
ANR	2301410	Symbol	Shingling		2300775						
ANR	2301411	Symbol	i		2300775						
ANR	2301412	Symbol	dot_count		2300775						
ANR	2301413	Symbol	LineBuffers		2300775						
ANR	2301414	Symbol	* * LineBuffers		2300775						
ANR	2301415	Symbol	n		2300775						
ANR	2301416	Symbol	* * row		2300775						
ANR	2301417	Symbol	* header		2300775						
ANR	2301418	Symbol	* dot_min		2300775						
ANR	2301419	Symbol	ptr		2300775						
ANR	2301420	Symbol	* header -> HWResolution		2300775						
ANR	2301421	Symbol	* * header		2300775						
ANR	2301422	Symbol	DotBytes		2300775						
ANR	2301423	Symbol	dot_min		2300775						
ANR	2301424	Symbol	header		2300775						
ANR	2301425	Symbol	DotColumns		2300775						
ANR	2301426	Function	main	952:0:19418:23322							
ANR	2301427	FunctionDef	"main (int argc , char * argv [ ])"		2301426	0					
ANR	2301428	CompoundStatement		955:0:19564:23322	2301426	0					
ANR	2301429	IdentifierDeclStatement	int fd ;	956:2:19568:19576	2301426	0	True				
ANR	2301430	IdentifierDecl	fd		2301426	0					
ANR	2301431	IdentifierDeclType	int		2301426	0					
ANR	2301432	Identifier	fd		2301426	1					
ANR	2301433	IdentifierDeclStatement	cups_raster_t * ras ;	957:2:19603:19622	2301426	1	True				
ANR	2301434	IdentifierDecl	* ras		2301426	0					
ANR	2301435	IdentifierDeclType	cups_raster_t *		2301426	0					
ANR	2301436	Identifier	ras		2301426	1					
ANR	2301437	IdentifierDeclStatement	cups_page_header2_t header ;	958:2:19660:19686	2301426	2	True				
ANR	2301438	IdentifierDecl	header		2301426	0					
ANR	2301439	IdentifierDeclType	cups_page_header2_t		2301426	0					
ANR	2301440	Identifier	header		2301426	1					
ANR	2301441	IdentifierDeclStatement	ppd_file_t * ppd ;	959:2:19719:19735	2301426	3	True				
ANR	2301442	IdentifierDecl	* ppd		2301426	0					
ANR	2301443	IdentifierDeclType	ppd_file_t *		2301426	0					
ANR	2301444	Identifier	ppd		2301426	1					
ANR	2301445	IdentifierDeclStatement	int page ;	960:2:19755:19765	2301426	4	True				
ANR	2301446	IdentifierDecl	page		2301426	0					
ANR	2301447	IdentifierDeclType	int		2301426	0					
ANR	2301448	Identifier	page		2301426	1					
ANR	2301449	IdentifierDeclStatement	int y ;	961:2:19789:19796	2301426	5	True				
ANR	2301450	IdentifierDecl	y		2301426	0					
ANR	2301451	IdentifierDeclType	int		2301426	0					
ANR	2301452	Identifier	y		2301426	1					
ANR	2301453	IdentifierDeclStatement	struct sigaction action ;	963:2:19873:19896	2301426	6	True				
ANR	2301454	IdentifierDecl	action		2301426	0					
ANR	2301455	IdentifierDeclType	struct sigaction		2301426	0					
ANR	2301456	Identifier	action		2301426	1					
ANR	2301457	ExpressionStatement	"setbuf ( stderr , NULL )"	971:2:20039:20059	2301426	7	True				
ANR	2301458	CallExpression	"setbuf ( stderr , NULL )"		2301426	0					
ANR	2301459	Callee	setbuf		2301426	0					
ANR	2301460	Identifier	setbuf		2301426	0					
ANR	2301461	ArgumentList	stderr		2301426	1					
ANR	2301462	Argument	stderr		2301426	0					
ANR	2301463	Identifier	stderr		2301426	0					
ANR	2301464	Argument	NULL		2301426	1					
ANR	2301465	Identifier	NULL		2301426	0					
ANR	2301466	IfStatement	if ( argc < 6 || argc > 7 )		2301426	8					
ANR	2301467	Condition	argc < 6 || argc > 7	977:6:20104:20123	2301426	0	True				
ANR	2301468	OrExpression	argc < 6 || argc > 7		2301426	0		||			
ANR	2301469	RelationalExpression	argc < 6		2301426	0		<			
ANR	2301470	Identifier	argc		2301426	0					
ANR	2301471	PrimaryExpression	6		2301426	1					
ANR	2301472	RelationalExpression	argc > 7		2301426	1		>			
ANR	2301473	Identifier	argc		2301426	0					
ANR	2301474	PrimaryExpression	7		2301426	1					
ANR	2301475	CompoundStatement		24:2:563:563	2301426	1					
ANR	2301476	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertoepson"" )"	984:4:20242:20395	2301426	0	True				
ANR	2301477	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertoepson"" )"		2301426	0					
ANR	2301478	Callee	_cupsLangPrintFilter		2301426	0					
ANR	2301479	Identifier	_cupsLangPrintFilter		2301426	0					
ANR	2301480	ArgumentList	stderr		2301426	1					
ANR	2301481	Argument	stderr		2301426	0					
ANR	2301482	Identifier	stderr		2301426	0					
ANR	2301483	Argument	"""ERROR"""		2301426	1					
ANR	2301484	PrimaryExpression	"""ERROR"""		2301426	0					
ANR	2301485	Argument	"_ ( ""%s job-id user title copies options [file]"" )"		2301426	2					
ANR	2301486	CallExpression	"_ ( ""%s job-id user title copies options [file]"" )"		2301426	0					
ANR	2301487	Callee	_		2301426	0					
ANR	2301488	Identifier	_		2301426	0					
ANR	2301489	ArgumentList	"""%s job-id user title copies options [file]"""		2301426	1					
ANR	2301490	Argument	"""%s job-id user title copies options [file]"""		2301426	0					
ANR	2301491	PrimaryExpression	"""%s job-id user title copies options [file]"""		2301426	0					
ANR	2301492	Argument	"""rastertoepson"""		2301426	3					
ANR	2301493	PrimaryExpression	"""rastertoepson"""		2301426	0					
ANR	2301494	ReturnStatement	return ( 1 ) ;	987:4:20401:20411	2301426	1	True				
ANR	2301495	PrimaryExpression	1		2301426	0					
ANR	2301496	IfStatement	if ( argc == 7 )		2301426	9					
ANR	2301497	Condition	argc == 7	994:6:20462:20470	2301426	0	True				
ANR	2301498	EqualityExpression	argc == 7		2301426	0		==			
ANR	2301499	Identifier	argc		2301426	0					
ANR	2301500	PrimaryExpression	7		2301426	1					
ANR	2301501	CompoundStatement		41:2:910:910	2301426	1					
ANR	2301502	IfStatement	"if ( ( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1 )"		2301426	0					
ANR	2301503	Condition	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"	996:8:20485:20520	2301426	0	True				
ANR	2301504	EqualityExpression	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"		2301426	0		==			
ANR	2301505	AssignmentExpression	"fd = open ( argv [ 6 ] , O_RDONLY )"		2301426	0		=			
ANR	2301506	Identifier	fd		2301426	0					
ANR	2301507	CallExpression	"open ( argv [ 6 ] , O_RDONLY )"		2301426	1					
ANR	2301508	Callee	open		2301426	0					
ANR	2301509	Identifier	open		2301426	0					
ANR	2301510	ArgumentList	argv [ 6 ]		2301426	1					
ANR	2301511	Argument	argv [ 6 ]		2301426	0					
ANR	2301512	ArrayIndexing	argv [ 6 ]		2301426	0					
ANR	2301513	Identifier	argv		2301426	0					
ANR	2301514	PrimaryExpression	6		2301426	1					
ANR	2301515	Argument	O_RDONLY		2301426	1					
ANR	2301516	Identifier	O_RDONLY		2301426	0					
ANR	2301517	UnaryOperationExpression	- 1		2301426	1					
ANR	2301518	UnaryOperator	-		2301426	0					
ANR	2301519	PrimaryExpression	1		2301426	1					
ANR	2301520	CompoundStatement		43:4:962:962	2301426	1					
ANR	2301521	ExpressionStatement	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"	998:6:20535:20596	2301426	0	True				
ANR	2301522	CallExpression	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"		2301426	0					
ANR	2301523	Callee	_cupsLangPrintError		2301426	0					
ANR	2301524	Identifier	_cupsLangPrintError		2301426	0					
ANR	2301525	ArgumentList	"""ERROR"""		2301426	1					
ANR	2301526	Argument	"""ERROR"""		2301426	0					
ANR	2301527	PrimaryExpression	"""ERROR"""		2301426	0					
ANR	2301528	Argument	"_ ( ""Unable to open raster file"" )"		2301426	1					
ANR	2301529	CallExpression	"_ ( ""Unable to open raster file"" )"		2301426	0					
ANR	2301530	Callee	_		2301426	0					
ANR	2301531	Identifier	_		2301426	0					
ANR	2301532	ArgumentList	"""Unable to open raster file"""		2301426	1					
ANR	2301533	Argument	"""Unable to open raster file"""		2301426	0					
ANR	2301534	PrimaryExpression	"""Unable to open raster file"""		2301426	0					
ANR	2301535	ExpressionStatement	sleep ( 1 )	999:6:20604:20612	2301426	1	True				
ANR	2301536	CallExpression	sleep ( 1 )		2301426	0					
ANR	2301537	Callee	sleep		2301426	0					
ANR	2301538	Identifier	sleep		2301426	0					
ANR	2301539	ArgumentList	1		2301426	1					
ANR	2301540	Argument	1		2301426	0					
ANR	2301541	PrimaryExpression	1		2301426	0					
ANR	2301542	ReturnStatement	return ( 1 ) ;	1000:6:20620:20630	2301426	2	True				
ANR	2301543	PrimaryExpression	1		2301426	0					
ANR	2301544	ElseStatement	else		2301426	0					
ANR	2301545	ExpressionStatement	fd = 0	1004:4:20653:20659	2301426	0	True				
ANR	2301546	AssignmentExpression	fd = 0		2301426	0		=			
ANR	2301547	Identifier	fd		2301426	0					
ANR	2301548	PrimaryExpression	0		2301426	1					
ANR	2301549	ExpressionStatement	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"	1006:2:20664:20706	2301426	10	True				
ANR	2301550	AssignmentExpression	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"		2301426	0		=			
ANR	2301551	Identifier	ras		2301426	0					
ANR	2301552	CallExpression	"cupsRasterOpen ( fd , CUPS_RASTER_READ )"		2301426	1					
ANR	2301553	Callee	cupsRasterOpen		2301426	0					
ANR	2301554	Identifier	cupsRasterOpen		2301426	0					
ANR	2301555	ArgumentList	fd		2301426	1					
ANR	2301556	Argument	fd		2301426	0					
ANR	2301557	Identifier	fd		2301426	0					
ANR	2301558	Argument	CUPS_RASTER_READ		2301426	1					
ANR	2301559	Identifier	CUPS_RASTER_READ		2301426	0					
ANR	2301560	ExpressionStatement	Canceled = 0	1013:2:20806:20818	2301426	11	True				
ANR	2301561	AssignmentExpression	Canceled = 0		2301426	0		=			
ANR	2301562	Identifier	Canceled		2301426	0					
ANR	2301563	PrimaryExpression	0		2301426	1					
ANR	2301564	ExpressionStatement	"sigset ( SIGTERM , CancelJob )"	1016:2:20894:20920	2301426	12	True				
ANR	2301565	CallExpression	"sigset ( SIGTERM , CancelJob )"		2301426	0					
ANR	2301566	Callee	sigset		2301426	0					
ANR	2301567	Identifier	sigset		2301426	0					
ANR	2301568	ArgumentList	SIGTERM		2301426	1					
ANR	2301569	Argument	SIGTERM		2301426	0					
ANR	2301570	Identifier	SIGTERM		2301426	0					
ANR	2301571	Argument	CancelJob		2301426	1					
ANR	2301572	Identifier	CancelJob		2301426	0					
ANR	2301573	ExpressionStatement	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"	1031:2:21202:21234	2301426	13	True				
ANR	2301574	AssignmentExpression	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"		2301426	0		=			
ANR	2301575	Identifier	ppd		2301426	0					
ANR	2301576	CallExpression	"ppdOpenFile ( getenv ( ""PPD"" ) )"		2301426	1					
ANR	2301577	Callee	ppdOpenFile		2301426	0					
ANR	2301578	Identifier	ppdOpenFile		2301426	0					
ANR	2301579	ArgumentList	"getenv ( ""PPD"" )"		2301426	1					
ANR	2301580	Argument	"getenv ( ""PPD"" )"		2301426	0					
ANR	2301581	CallExpression	"getenv ( ""PPD"" )"		2301426	0					
ANR	2301582	Callee	getenv		2301426	0					
ANR	2301583	Identifier	getenv		2301426	0					
ANR	2301584	ArgumentList	"""PPD"""		2301426	1					
ANR	2301585	Argument	"""PPD"""		2301426	0					
ANR	2301586	PrimaryExpression	"""PPD"""		2301426	0					
ANR	2301587	IfStatement	if ( ! ppd )		2301426	14					
ANR	2301588	Condition	! ppd	1032:6:21242:21245	2301426	0	True				
ANR	2301589	UnaryOperationExpression	! ppd		2301426	0					
ANR	2301590	UnaryOperator	!		2301426	0					
ANR	2301591	Identifier	ppd		2301426	1					
ANR	2301592	CompoundStatement		81:4:1733:1746	2301426	1					
ANR	2301593	IdentifierDeclStatement	ppd_status_t status ;	1034:4:21256:21275	2301426	0	True				
ANR	2301594	IdentifierDecl	status		2301426	0					
ANR	2301595	IdentifierDeclType	ppd_status_t		2301426	0					
ANR	2301596	Identifier	status		2301426	1					
ANR	2301597	IdentifierDeclStatement	int linenum ;	1035:4:21298:21311	2301426	1	True				
ANR	2301598	IdentifierDecl	linenum		2301426	0					
ANR	2301599	IdentifierDeclType	int		2301426	0					
ANR	2301600	Identifier	linenum		2301426	1					
ANR	2301601	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"	1037:4:21336:21438	2301426	2	True				
ANR	2301602	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"		2301426	0					
ANR	2301603	Callee	_cupsLangPrintFilter		2301426	0					
ANR	2301604	Identifier	_cupsLangPrintFilter		2301426	0					
ANR	2301605	ArgumentList	stderr		2301426	1					
ANR	2301606	Argument	stderr		2301426	0					
ANR	2301607	Identifier	stderr		2301426	0					
ANR	2301608	Argument	"""ERROR"""		2301426	1					
ANR	2301609	PrimaryExpression	"""ERROR"""		2301426	0					
ANR	2301610	Argument	"_ ( ""The PPD file could not be opened."" )"		2301426	2					
ANR	2301611	CallExpression	"_ ( ""The PPD file could not be opened."" )"		2301426	0					
ANR	2301612	Callee	_		2301426	0					
ANR	2301613	Identifier	_		2301426	0					
ANR	2301614	ArgumentList	"""The PPD file could not be opened."""		2301426	1					
ANR	2301615	Argument	"""The PPD file could not be opened."""		2301426	0					
ANR	2301616	PrimaryExpression	"""The PPD file could not be opened."""		2301426	0					
ANR	2301617	ExpressionStatement	status = ppdLastError ( & linenum )	1040:4:21445:21476	2301426	3	True				
ANR	2301618	AssignmentExpression	status = ppdLastError ( & linenum )		2301426	0		=			
ANR	2301619	Identifier	status		2301426	0					
ANR	2301620	CallExpression	ppdLastError ( & linenum )		2301426	1					
ANR	2301621	Callee	ppdLastError		2301426	0					
ANR	2301622	Identifier	ppdLastError		2301426	0					
ANR	2301623	ArgumentList	& linenum		2301426	1					
ANR	2301624	Argument	& linenum		2301426	0					
ANR	2301625	UnaryOperationExpression	& linenum		2301426	0					
ANR	2301626	UnaryOperator	&		2301426	0					
ANR	2301627	Identifier	linenum		2301426	1					
ANR	2301628	ExpressionStatement	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"	1042:4:21483:21558	2301426	4	True				
ANR	2301629	CallExpression	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"		2301426	0					
ANR	2301630	Callee	fprintf		2301426	0					
ANR	2301631	Identifier	fprintf		2301426	0					
ANR	2301632	ArgumentList	stderr		2301426	1					
ANR	2301633	Argument	stderr		2301426	0					
ANR	2301634	Identifier	stderr		2301426	0					
ANR	2301635	Argument	"""DEBUG: %s on line %d.\\n"""		2301426	1					
ANR	2301636	PrimaryExpression	"""DEBUG: %s on line %d.\\n"""		2301426	0					
ANR	2301637	Argument	ppdErrorString ( status )		2301426	2					
ANR	2301638	CallExpression	ppdErrorString ( status )		2301426	0					
ANR	2301639	Callee	ppdErrorString		2301426	0					
ANR	2301640	Identifier	ppdErrorString		2301426	0					
ANR	2301641	ArgumentList	status		2301426	1					
ANR	2301642	Argument	status		2301426	0					
ANR	2301643	Identifier	status		2301426	0					
ANR	2301644	Argument	linenum		2301426	3					
ANR	2301645	Identifier	linenum		2301426	0					
ANR	2301646	ReturnStatement	return ( 1 ) ;	1044:4:21565:21575	2301426	5	True				
ANR	2301647	PrimaryExpression	1		2301426	0					
ANR	2301648	ExpressionStatement	Model = ppd -> model_number	1047:2:21584:21609	2301426	15	True				
ANR	2301649	AssignmentExpression	Model = ppd -> model_number		2301426	0		=			
ANR	2301650	Identifier	Model		2301426	0					
ANR	2301651	PtrMemberAccess	ppd -> model_number		2301426	1					
ANR	2301652	Identifier	ppd		2301426	0					
ANR	2301653	Identifier	model_number		2301426	1					
ANR	2301654	ExpressionStatement	Setup ( )	1049:2:21614:21621	2301426	16	True				
ANR	2301655	CallExpression	Setup ( )		2301426	0					
ANR	2301656	Callee	Setup		2301426	0					
ANR	2301657	Identifier	Setup		2301426	0					
ANR	2301658	ArgumentList			2301426	1					
ANR	2301659	ExpressionStatement	page = 0	1055:2:21667:21675	2301426	17	True				
ANR	2301660	AssignmentExpression	page = 0		2301426	0		=			
ANR	2301661	Identifier	page		2301426	0					
ANR	2301662	PrimaryExpression	0		2301426	1					
ANR	2301663	WhileStatement	"while ( cupsRasterReadHeader2 ( ras , & header ) )"		2301426	18					
ANR	2301664	Condition	"cupsRasterReadHeader2 ( ras , & header )"	1057:9:21687:21721	2301426	0	True				
ANR	2301665	CallExpression	"cupsRasterReadHeader2 ( ras , & header )"		2301426	0					
ANR	2301666	Callee	cupsRasterReadHeader2		2301426	0					
ANR	2301667	Identifier	cupsRasterReadHeader2		2301426	0					
ANR	2301668	ArgumentList	ras		2301426	1					
ANR	2301669	Argument	ras		2301426	0					
ANR	2301670	Identifier	ras		2301426	0					
ANR	2301671	Argument	& header		2301426	1					
ANR	2301672	UnaryOperationExpression	& header		2301426	0					
ANR	2301673	UnaryOperator	&		2301426	0					
ANR	2301674	Identifier	header		2301426	1					
ANR	2301675	CompoundStatement		104:2:2161:2161	2301426	1					
ANR	2301676	IfStatement	if ( Canceled )		2301426	0					
ANR	2301677	Condition	Canceled	1063:8:21822:21829	2301426	0	True				
ANR	2301678	Identifier	Canceled		2301426	0					
ANR	2301679	BreakStatement	break ;	1064:6:21838:21843	2301426	1	True				
ANR	2301680	ExpressionStatement	page ++	1066:4:21850:21857	2301426	1	True				
ANR	2301681	PostIncDecOperationExpression	page ++		2301426	0					
ANR	2301682	Identifier	page		2301426	0					
ANR	2301683	IncDec	++		2301426	1					
ANR	2301684	ExpressionStatement	"fprintf ( stderr , ""PAGE: %d %d\\n"" , page , header . NumCopies )"	1068:4:21864:21920	2301426	2	True				
ANR	2301685	CallExpression	"fprintf ( stderr , ""PAGE: %d %d\\n"" , page , header . NumCopies )"		2301426	0					
ANR	2301686	Callee	fprintf		2301426	0					
ANR	2301687	Identifier	fprintf		2301426	0					
ANR	2301688	ArgumentList	stderr		2301426	1					
ANR	2301689	Argument	stderr		2301426	0					
ANR	2301690	Identifier	stderr		2301426	0					
ANR	2301691	Argument	"""PAGE: %d %d\\n"""		2301426	1					
ANR	2301692	PrimaryExpression	"""PAGE: %d %d\\n"""		2301426	0					
ANR	2301693	Argument	page		2301426	2					
ANR	2301694	Identifier	page		2301426	0					
ANR	2301695	Argument	header . NumCopies		2301426	3					
ANR	2301696	MemberAccess	header . NumCopies		2301426	0					
ANR	2301697	Identifier	header		2301426	0					
ANR	2301698	Identifier	NumCopies		2301426	1					
ANR	2301699	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , page )"	1069:4:21926:21992	2301426	3	True				
ANR	2301700	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , page )"		2301426	0					
ANR	2301701	Callee	_cupsLangPrintFilter		2301426	0					
ANR	2301702	Identifier	_cupsLangPrintFilter		2301426	0					
ANR	2301703	ArgumentList	stderr		2301426	1					
ANR	2301704	Argument	stderr		2301426	0					
ANR	2301705	Identifier	stderr		2301426	0					
ANR	2301706	Argument	"""INFO"""		2301426	1					
ANR	2301707	PrimaryExpression	"""INFO"""		2301426	0					
ANR	2301708	Argument	"_ ( ""Starting page %d."" )"		2301426	2					
ANR	2301709	CallExpression	"_ ( ""Starting page %d."" )"		2301426	0					
ANR	2301710	Callee	_		2301426	0					
ANR	2301711	Identifier	_		2301426	0					
ANR	2301712	ArgumentList	"""Starting page %d."""		2301426	1					
ANR	2301713	Argument	"""Starting page %d."""		2301426	0					
ANR	2301714	PrimaryExpression	"""Starting page %d."""		2301426	0					
ANR	2301715	Argument	page		2301426	3					
ANR	2301716	Identifier	page		2301426	0					
ANR	2301717	ExpressionStatement	"StartPage ( ppd , & header )"	1075:4:22037:22060	2301426	4	True				
ANR	2301718	CallExpression	"StartPage ( ppd , & header )"		2301426	0					
ANR	2301719	Callee	StartPage		2301426	0					
ANR	2301720	Identifier	StartPage		2301426	0					
ANR	2301721	ArgumentList	ppd		2301426	1					
ANR	2301722	Argument	ppd		2301426	0					
ANR	2301723	Identifier	ppd		2301426	0					
ANR	2301724	Argument	& header		2301426	1					
ANR	2301725	UnaryOperationExpression	& header		2301426	0					
ANR	2301726	UnaryOperator	&		2301426	0					
ANR	2301727	Identifier	header		2301426	1					
ANR	2301728	ForStatement	for ( y = 0 ; y < header . cupsHeight ; y ++ )		2301426	5					
ANR	2301729	ForInit	y = 0 ;	1081:9:22126:22131	2301426	0	True				
ANR	2301730	AssignmentExpression	y = 0		2301426	0		=			
ANR	2301731	Identifier	y		2301426	0					
ANR	2301732	PrimaryExpression	0		2301426	1					
ANR	2301733	Condition	y < header . cupsHeight	1081:16:22133:22153	2301426	1	True				
ANR	2301734	RelationalExpression	y < header . cupsHeight		2301426	0		<			
ANR	2301735	Identifier	y		2301426	0					
ANR	2301736	MemberAccess	header . cupsHeight		2301426	1					
ANR	2301737	Identifier	header		2301426	0					
ANR	2301738	Identifier	cupsHeight		2301426	1					
ANR	2301739	PostIncDecOperationExpression	y ++	1081:39:22156:22159	2301426	2	True				
ANR	2301740	Identifier	y		2301426	0					
ANR	2301741	IncDec	++		2301426	1					
ANR	2301742	CompoundStatement		128:4:2601:2601	2301426	3					
ANR	2301743	IfStatement	if ( Canceled )		2301426	0					
ANR	2301744	Condition	Canceled	1087:10:22252:22259	2301426	0	True				
ANR	2301745	Identifier	Canceled		2301426	0					
ANR	2301746	BreakStatement	break ;	1088:1:22263:22268	2301426	1	True				
ANR	2301747	IfStatement	if ( ( y & 127 ) == 0 )		2301426	1					
ANR	2301748	Condition	( y & 127 ) == 0	1090:10:22281:22294	2301426	0	True				
ANR	2301749	EqualityExpression	( y & 127 ) == 0		2301426	0		==			
ANR	2301750	BitAndExpression	y & 127		2301426	0		&			
ANR	2301751	Identifier	y		2301426	0					
ANR	2301752	PrimaryExpression	127		2301426	1					
ANR	2301753	PrimaryExpression	0		2301426	1					
ANR	2301754	CompoundStatement		137:6:2738:2738	2301426	1					
ANR	2301755	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , page , 100 * y / header . cupsHeight )"	1092:8:22313:22453	2301426	0	True				
ANR	2301756	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , page , 100 * y / header . cupsHeight )"		2301426	0					
ANR	2301757	Callee	_cupsLangPrintFilter		2301426	0					
ANR	2301758	Identifier	_cupsLangPrintFilter		2301426	0					
ANR	2301759	ArgumentList	stderr		2301426	1					
ANR	2301760	Argument	stderr		2301426	0					
ANR	2301761	Identifier	stderr		2301426	0					
ANR	2301762	Argument	"""INFO"""		2301426	1					
ANR	2301763	PrimaryExpression	"""INFO"""		2301426	0					
ANR	2301764	Argument	"_ ( ""Printing page %d, %d%% complete."" )"		2301426	2					
ANR	2301765	CallExpression	"_ ( ""Printing page %d, %d%% complete."" )"		2301426	0					
ANR	2301766	Callee	_		2301426	0					
ANR	2301767	Identifier	_		2301426	0					
ANR	2301768	ArgumentList	"""Printing page %d, %d%% complete."""		2301426	1					
ANR	2301769	Argument	"""Printing page %d, %d%% complete."""		2301426	0					
ANR	2301770	PrimaryExpression	"""Printing page %d, %d%% complete."""		2301426	0					
ANR	2301771	Argument	page		2301426	3					
ANR	2301772	Identifier	page		2301426	0					
ANR	2301773	Argument	100 * y / header . cupsHeight		2301426	4					
ANR	2301774	MultiplicativeExpression	100 * y / header . cupsHeight		2301426	0		*			
ANR	2301775	PrimaryExpression	100		2301426	0					
ANR	2301776	MultiplicativeExpression	y / header . cupsHeight		2301426	1		/			
ANR	2301777	Identifier	y		2301426	0					
ANR	2301778	MemberAccess	header . cupsHeight		2301426	1					
ANR	2301779	Identifier	header		2301426	0					
ANR	2301780	Identifier	cupsHeight		2301426	1					
ANR	2301781	ExpressionStatement	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"	1095:8:22463:22542	2301426	1	True				
ANR	2301782	CallExpression	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"		2301426	0					
ANR	2301783	Callee	fprintf		2301426	0					
ANR	2301784	Identifier	fprintf		2301426	0					
ANR	2301785	ArgumentList	stderr		2301426	1					
ANR	2301786	Argument	stderr		2301426	0					
ANR	2301787	Identifier	stderr		2301426	0					
ANR	2301788	Argument	"""ATTR: job-media-progress=%d\\n"""		2301426	1					
ANR	2301789	PrimaryExpression	"""ATTR: job-media-progress=%d\\n"""		2301426	0					
ANR	2301790	Argument	100 * y / header . cupsHeight		2301426	2					
ANR	2301791	MultiplicativeExpression	100 * y / header . cupsHeight		2301426	0		*			
ANR	2301792	PrimaryExpression	100		2301426	0					
ANR	2301793	MultiplicativeExpression	y / header . cupsHeight		2301426	1		/			
ANR	2301794	Identifier	y		2301426	0					
ANR	2301795	MemberAccess	header . cupsHeight		2301426	1					
ANR	2301796	Identifier	header		2301426	0					
ANR	2301797	Identifier	cupsHeight		2301426	1					
ANR	2301798	IfStatement	"if ( cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1 )"		2301426	2					
ANR	2301799	Condition	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1"	1103:10:22616:22680	2301426	0	True				
ANR	2301800	RelationalExpression	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1"		2301426	0		<			
ANR	2301801	CallExpression	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine )"		2301426	0					
ANR	2301802	Callee	cupsRasterReadPixels		2301426	0					
ANR	2301803	Identifier	cupsRasterReadPixels		2301426	0					
ANR	2301804	ArgumentList	ras		2301426	1					
ANR	2301805	Argument	ras		2301426	0					
ANR	2301806	Identifier	ras		2301426	0					
ANR	2301807	Argument	Planes [ 0 ]		2301426	1					
ANR	2301808	ArrayIndexing	Planes [ 0 ]		2301426	0					
ANR	2301809	Identifier	Planes		2301426	0					
ANR	2301810	PrimaryExpression	0		2301426	1					
ANR	2301811	Argument	header . cupsBytesPerLine		2301426	2					
ANR	2301812	MemberAccess	header . cupsBytesPerLine		2301426	0					
ANR	2301813	Identifier	header		2301426	0					
ANR	2301814	Identifier	cupsBytesPerLine		2301426	1					
ANR	2301815	PrimaryExpression	1		2301426	1					
ANR	2301816	BreakStatement	break ;	1104:8:22691:22696	2301426	1	True				
ANR	2301817	ExpressionStatement	OutputLine ( & header )	1110:6:22758:22777	2301426	3	True				
ANR	2301818	CallExpression	OutputLine ( & header )		2301426	0					
ANR	2301819	Callee	OutputLine		2301426	0					
ANR	2301820	Identifier	OutputLine		2301426	0					
ANR	2301821	ArgumentList	& header		2301426	1					
ANR	2301822	Argument	& header		2301426	0					
ANR	2301823	UnaryOperationExpression	& header		2301426	0					
ANR	2301824	UnaryOperator	&		2301426	0					
ANR	2301825	Identifier	header		2301426	1					
ANR	2301826	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , page )"	1117:4:22828:22894	2301426	6	True				
ANR	2301827	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , page )"		2301426	0					
ANR	2301828	Callee	_cupsLangPrintFilter		2301426	0					
ANR	2301829	Identifier	_cupsLangPrintFilter		2301426	0					
ANR	2301830	ArgumentList	stderr		2301426	1					
ANR	2301831	Argument	stderr		2301426	0					
ANR	2301832	Identifier	stderr		2301426	0					
ANR	2301833	Argument	"""INFO"""		2301426	1					
ANR	2301834	PrimaryExpression	"""INFO"""		2301426	0					
ANR	2301835	Argument	"_ ( ""Finished page %d."" )"		2301426	2					
ANR	2301836	CallExpression	"_ ( ""Finished page %d."" )"		2301426	0					
ANR	2301837	Callee	_		2301426	0					
ANR	2301838	Identifier	_		2301426	0					
ANR	2301839	ArgumentList	"""Finished page %d."""		2301426	1					
ANR	2301840	Argument	"""Finished page %d."""		2301426	0					
ANR	2301841	PrimaryExpression	"""Finished page %d."""		2301426	0					
ANR	2301842	Argument	page		2301426	3					
ANR	2301843	Identifier	page		2301426	0					
ANR	2301844	ExpressionStatement	EndPage ( & header )	1119:4:22901:22917	2301426	7	True				
ANR	2301845	CallExpression	EndPage ( & header )		2301426	0					
ANR	2301846	Callee	EndPage		2301426	0					
ANR	2301847	Identifier	EndPage		2301426	0					
ANR	2301848	ArgumentList	& header		2301426	1					
ANR	2301849	Argument	& header		2301426	0					
ANR	2301850	UnaryOperationExpression	& header		2301426	0					
ANR	2301851	UnaryOperator	&		2301426	0					
ANR	2301852	Identifier	header		2301426	1					
ANR	2301853	IfStatement	if ( Canceled )		2301426	8					
ANR	2301854	Condition	Canceled	1121:8:22928:22935	2301426	0	True				
ANR	2301855	Identifier	Canceled		2301426	0					
ANR	2301856	BreakStatement	break ;	1122:6:22944:22949	2301426	1	True				
ANR	2301857	ExpressionStatement	Shutdown ( )	1129:2:22996:23006	2301426	19	True				
ANR	2301858	CallExpression	Shutdown ( )		2301426	0					
ANR	2301859	Callee	Shutdown		2301426	0					
ANR	2301860	Identifier	Shutdown		2301426	0					
ANR	2301861	ArgumentList			2301426	1					
ANR	2301862	ExpressionStatement	ppdClose ( ppd )	1131:2:23011:23024	2301426	20	True				
ANR	2301863	CallExpression	ppdClose ( ppd )		2301426	0					
ANR	2301864	Callee	ppdClose		2301426	0					
ANR	2301865	Identifier	ppdClose		2301426	0					
ANR	2301866	ArgumentList	ppd		2301426	1					
ANR	2301867	Argument	ppd		2301426	0					
ANR	2301868	Identifier	ppd		2301426	0					
ANR	2301869	ExpressionStatement	cupsRasterClose ( ras )	1137:2:23070:23090	2301426	21	True				
ANR	2301870	CallExpression	cupsRasterClose ( ras )		2301426	0					
ANR	2301871	Callee	cupsRasterClose		2301426	0					
ANR	2301872	Identifier	cupsRasterClose		2301426	0					
ANR	2301873	ArgumentList	ras		2301426	1					
ANR	2301874	Argument	ras		2301426	0					
ANR	2301875	Identifier	ras		2301426	0					
ANR	2301876	IfStatement	if ( fd != 0 )		2301426	22					
ANR	2301877	Condition	fd != 0	1138:6:23098:23104	2301426	0	True				
ANR	2301878	EqualityExpression	fd != 0		2301426	0		!=			
ANR	2301879	Identifier	fd		2301426	0					
ANR	2301880	PrimaryExpression	0		2301426	1					
ANR	2301881	ExpressionStatement	close ( fd )	1139:4:23111:23120	2301426	1	True				
ANR	2301882	CallExpression	close ( fd )		2301426	0					
ANR	2301883	Callee	close		2301426	0					
ANR	2301884	Identifier	close		2301426	0					
ANR	2301885	ArgumentList	fd		2301426	1					
ANR	2301886	Argument	fd		2301426	0					
ANR	2301887	Identifier	fd		2301426	0					
ANR	2301888	IfStatement	if ( page == 0 )		2301426	23					
ANR	2301889	Condition	page == 0	1145:6:23194:23202	2301426	0	True				
ANR	2301890	EqualityExpression	page == 0		2301426	0		==			
ANR	2301891	Identifier	page		2301426	0					
ANR	2301892	PrimaryExpression	0		2301426	1					
ANR	2301893	CompoundStatement		192:2:3642:3642	2301426	1					
ANR	2301894	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"	1147:4:23213:23277	2301426	0	True				
ANR	2301895	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"		2301426	0					
ANR	2301896	Callee	_cupsLangPrintFilter		2301426	0					
ANR	2301897	Identifier	_cupsLangPrintFilter		2301426	0					
ANR	2301898	ArgumentList	stderr		2301426	1					
ANR	2301899	Argument	stderr		2301426	0					
ANR	2301900	Identifier	stderr		2301426	0					
ANR	2301901	Argument	"""ERROR"""		2301426	1					
ANR	2301902	PrimaryExpression	"""ERROR"""		2301426	0					
ANR	2301903	Argument	"_ ( ""No pages were found."" )"		2301426	2					
ANR	2301904	CallExpression	"_ ( ""No pages were found."" )"		2301426	0					
ANR	2301905	Callee	_		2301426	0					
ANR	2301906	Identifier	_		2301426	0					
ANR	2301907	ArgumentList	"""No pages were found."""		2301426	1					
ANR	2301908	Argument	"""No pages were found."""		2301426	0					
ANR	2301909	PrimaryExpression	"""No pages were found."""		2301426	0					
ANR	2301910	ReturnStatement	return ( 1 ) ;	1148:4:23283:23293	2301426	1	True				
ANR	2301911	PrimaryExpression	1		2301426	0					
ANR	2301912	ElseStatement	else		2301426	0					
ANR	2301913	ReturnStatement	return ( 0 ) ;	1151:4:23310:23320	2301426	0	True				
ANR	2301914	PrimaryExpression	0		2301426	0					
ANR	2301915	ReturnType	int		2301426	1					
ANR	2301916	Identifier	main		2301426	2					
ANR	2301917	ParameterList	"int argc , char * argv [ ]"		2301426	3					
ANR	2301918	Parameter	int argc	953:5:19453:19461	2301426	0	True				
ANR	2301919	ParameterType	int		2301426	0					
ANR	2301920	Identifier	argc		2301426	1					
ANR	2301921	Parameter	char * argv [ ]	954:5:19515:19526	2301426	1	True				
ANR	2301922	ParameterType	char * [ ]		2301426	0					
ANR	2301923	Identifier	argv		2301426	1					
ANR	2301924	CFGEntryNode	ENTRY		2301426		True				
ANR	2301925	CFGExitNode	EXIT		2301426		True				
ANR	2301926	Symbol	ppdOpenFile		2301426						
ANR	2301927	Symbol	& linenum		2301426						
ANR	2301928	Symbol	ppdErrorString		2301426						
ANR	2301929	Symbol	* argv		2301426						
ANR	2301930	Symbol	header . cupsBytesPerLine		2301426						
ANR	2301931	Symbol	argv		2301426						
ANR	2301932	Symbol	* ppd		2301426						
ANR	2301933	Symbol	ppd -> model_number		2301426						
ANR	2301934	Symbol	header . NumCopies		2301426						
ANR	2301935	Symbol	Planes		2301426						
ANR	2301936	Symbol	action		2301426						
ANR	2301937	Symbol	linenum		2301426						
ANR	2301938	Symbol	CancelJob		2301426						
ANR	2301939	Symbol	SIGTERM		2301426						
ANR	2301940	Symbol	CUPS_RASTER_READ		2301426						
ANR	2301941	Symbol	_		2301426						
ANR	2301942	Symbol	getenv		2301426						
ANR	2301943	Symbol	argc		2301426						
ANR	2301944	Symbol	NULL		2301426						
ANR	2301945	Symbol	ras		2301426						
ANR	2301946	Symbol	ppd		2301426						
ANR	2301947	Symbol	cupsRasterReadHeader2		2301426						
ANR	2301948	Symbol	stderr		2301426						
ANR	2301949	Symbol	& header		2301426						
ANR	2301950	Symbol	header . cupsHeight		2301426						
ANR	2301951	Symbol	* Planes		2301426						
ANR	2301952	Symbol	O_RDONLY		2301426						
ANR	2301953	Symbol	cupsRasterOpen		2301426						
ANR	2301954	Symbol	ppdLastError		2301426						
ANR	2301955	Symbol	Model		2301426						
ANR	2301956	Symbol	header		2301426						
ANR	2301957	Symbol	y		2301426						
ANR	2301958	Symbol	page		2301426						
ANR	2301959	Symbol	Canceled		2301426						
ANR	2301960	Symbol	fd		2301426						
ANR	2301961	Symbol	open		2301426						
ANR	2301962	Symbol	cupsRasterReadPixels		2301426						
ANR	2301963	Symbol	status		2301426						
