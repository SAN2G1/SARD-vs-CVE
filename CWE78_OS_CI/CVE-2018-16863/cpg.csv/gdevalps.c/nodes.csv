command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3902498	File	data/converged/CVE-2018-16863_ghostpdl/gdevalps.c								
ANR	3902499	DeclStmt									
ANR	3902500	Decl							int	"int ( gx_device_printer * , FILE * , const char * , int )"	md50_print_page
ANR	3902501	DeclStmt									
ANR	3902502	Decl							gx_device_procs	gx_device_procs	prn_md_procs
ANR	3902503	DeclStmt									
ANR	3902504	Decl							gx_device_printer far_data	gx_device_printer far_data	gs_md50Mono_device
ANR	3902505	DeclStmt									
ANR	3902506	Decl							gx_device_printer far_data	gx_device_printer far_data	gs_md50Eco_device
ANR	3902507	DeclStmt									
ANR	3902508	Decl							gx_device_printer far_data	gx_device_printer far_data	gs_md1xMono_device
ANR	3902509	DeclStmt									
ANR	3902510	Decl							const char	const char [ ]	init_50mono
ANR	3902511	DeclStmt									
ANR	3902512	Decl							const char	const char [ ]	init_50eco
ANR	3902513	DeclStmt									
ANR	3902514	Decl							const char	const char [ ]	init_md13
ANR	3902515	DeclStmt									
ANR	3902516	Decl							const char	const char [ ]	end_md
ANR	3902517	Function	md_open	155:0:5374:5650							
ANR	3902518	FunctionDef	md_open (gx_device * pdev)		3902517	0					
ANR	3902519	CompoundStatement		157:0:5410:5650	3902517	0					
ANR	3902520	Statement	static	158:8:5420:5425	3902517	0	True				
ANR	3902521	IdentifierDeclStatement	"const float md_margins [ 4 ] = { MD_SIDE_MARGIN , MD_BOTTOM_MARGIN , MD_SIDE_MARGIN , MD_TOP_MARGIN } ;"	158:15:5427:5556	3902517	1	True				
ANR	3902522	IdentifierDecl	"md_margins [ 4 ] = { MD_SIDE_MARGIN , MD_BOTTOM_MARGIN , MD_SIDE_MARGIN , MD_TOP_MARGIN }"		3902517	0					
ANR	3902523	IdentifierDeclType	const float [ 4 ]		3902517	0					
ANR	3902524	Identifier	md_margins		3902517	1					
ANR	3902525	PrimaryExpression	4		3902517	2					
ANR	3902526	AssignmentExpression	"md_margins [ 4 ] = { MD_SIDE_MARGIN , MD_BOTTOM_MARGIN , MD_SIDE_MARGIN , MD_TOP_MARGIN }"		3902517	3		=			
ANR	3902527	Identifier	md_margins		3902517	0					
ANR	3902528	InitializerList	MD_SIDE_MARGIN		3902517	1					
ANR	3902529	Identifier	MD_SIDE_MARGIN		3902517	0					
ANR	3902530	Identifier	MD_BOTTOM_MARGIN		3902517	1					
ANR	3902531	Identifier	MD_SIDE_MARGIN		3902517	2					
ANR	3902532	Identifier	MD_TOP_MARGIN		3902517	3					
ANR	3902533	ExpressionStatement	"gx_device_set_margins ( pdev , md_margins , true )"	163:8:5567:5612	3902517	2	True				
ANR	3902534	CallExpression	"gx_device_set_margins ( pdev , md_margins , true )"		3902517	0					
ANR	3902535	Callee	gx_device_set_margins		3902517	0					
ANR	3902536	Identifier	gx_device_set_margins		3902517	0					
ANR	3902537	ArgumentList	pdev		3902517	1					
ANR	3902538	Argument	pdev		3902517	0					
ANR	3902539	Identifier	pdev		3902517	0					
ANR	3902540	Argument	md_margins		3902517	1					
ANR	3902541	Identifier	md_margins		3902517	0					
ANR	3902542	Argument	true		3902517	2					
ANR	3902543	Identifier	true		3902517	0					
ANR	3902544	ReturnStatement	return gdev_prn_open ( pdev ) ;	164:8:5622:5648	3902517	3	True				
ANR	3902545	CallExpression	gdev_prn_open ( pdev )		3902517	0					
ANR	3902546	Callee	gdev_prn_open		3902517	0					
ANR	3902547	Identifier	gdev_prn_open		3902517	0					
ANR	3902548	ArgumentList	pdev		3902517	1					
ANR	3902549	Argument	pdev		3902517	0					
ANR	3902550	Identifier	pdev		3902517	0					
ANR	3902551	ReturnType	static int		3902517	1					
ANR	3902552	Identifier	md_open		3902517	2					
ANR	3902553	ParameterList	gx_device * pdev		3902517	3					
ANR	3902554	Parameter	gx_device * pdev	156:8:5393:5407	3902517	0	True				
ANR	3902555	ParameterType	gx_device *		3902517	0					
ANR	3902556	Identifier	pdev		3902517	1					
ANR	3902557	CFGEntryNode	ENTRY		3902517		True				
ANR	3902558	CFGExitNode	EXIT		3902517		True				
ANR	3902559	Symbol	pdev		3902517						
ANR	3902560	Symbol	MD_BOTTOM_MARGIN		3902517						
ANR	3902561	Symbol	true		3902517						
ANR	3902562	Symbol	md_margins		3902517						
ANR	3902563	Symbol	MD_SIDE_MARGIN		3902517						
ANR	3902564	Symbol	gdev_prn_open		3902517						
ANR	3902565	Symbol	MD_TOP_MARGIN		3902517						
ANR	3902566	Function	md50m_print_page	168:0:5692:5844							
ANR	3902567	FunctionDef	"md50m_print_page (gx_device_printer * pdev , FILE * prn_stream)"		3902566	0					
ANR	3902568	CompoundStatement		170:0:5763:5844	3902566	0					
ANR	3902569	ReturnStatement	"return ( md50_print_page ( pdev , prn_stream , init_50mono , sizeof ( init_50mono ) ) ) ;"	171:2:5767:5842	3902566	0	True				
ANR	3902570	CallExpression	"md50_print_page ( pdev , prn_stream , init_50mono , sizeof ( init_50mono ) )"		3902566	0					
ANR	3902571	Callee	md50_print_page		3902566	0					
ANR	3902572	Identifier	md50_print_page		3902566	0					
ANR	3902573	ArgumentList	pdev		3902566	1					
ANR	3902574	Argument	pdev		3902566	0					
ANR	3902575	Identifier	pdev		3902566	0					
ANR	3902576	Argument	prn_stream		3902566	1					
ANR	3902577	Identifier	prn_stream		3902566	0					
ANR	3902578	Argument	init_50mono		3902566	2					
ANR	3902579	Identifier	init_50mono		3902566	0					
ANR	3902580	Argument	sizeof ( init_50mono )		3902566	3					
ANR	3902581	SizeofExpression	sizeof ( init_50mono )		3902566	0					
ANR	3902582	Sizeof	sizeof		3902566	0					
ANR	3902583	SizeofOperand	init_50mono		3902566	1					
ANR	3902584	ReturnType	static int		3902566	1					
ANR	3902585	Identifier	md50m_print_page		3902566	2					
ANR	3902586	ParameterList	"gx_device_printer * pdev , FILE * prn_stream"		3902566	3					
ANR	3902587	Parameter	gx_device_printer * pdev	169:17:5720:5742	3902566	0	True				
ANR	3902588	ParameterType	gx_device_printer *		3902566	0					
ANR	3902589	Identifier	pdev		3902566	1					
ANR	3902590	Parameter	FILE * prn_stream	169:42:5745:5760	3902566	1	True				
ANR	3902591	ParameterType	FILE *		3902566	0					
ANR	3902592	Identifier	prn_stream		3902566	1					
ANR	3902593	CFGEntryNode	ENTRY		3902566		True				
ANR	3902594	CFGExitNode	EXIT		3902566		True				
ANR	3902595	Symbol	pdev		3902566						
ANR	3902596	Symbol	prn_stream		3902566						
ANR	3902597	Symbol	init_50mono		3902566						
ANR	3902598	Symbol	md50_print_page		3902566						
ANR	3902599	Function	md50e_print_page	175:0:5895:6045							
ANR	3902600	FunctionDef	"md50e_print_page (gx_device_printer * pdev , FILE * prn_stream)"		3902599	0					
ANR	3902601	CompoundStatement		177:0:5966:6045	3902599	0					
ANR	3902602	ReturnStatement	"return ( md50_print_page ( pdev , prn_stream , init_50eco , sizeof ( init_50eco ) ) ) ;"	178:2:5970:6043	3902599	0	True				
ANR	3902603	CallExpression	"md50_print_page ( pdev , prn_stream , init_50eco , sizeof ( init_50eco ) )"		3902599	0					
ANR	3902604	Callee	md50_print_page		3902599	0					
ANR	3902605	Identifier	md50_print_page		3902599	0					
ANR	3902606	ArgumentList	pdev		3902599	1					
ANR	3902607	Argument	pdev		3902599	0					
ANR	3902608	Identifier	pdev		3902599	0					
ANR	3902609	Argument	prn_stream		3902599	1					
ANR	3902610	Identifier	prn_stream		3902599	0					
ANR	3902611	Argument	init_50eco		3902599	2					
ANR	3902612	Identifier	init_50eco		3902599	0					
ANR	3902613	Argument	sizeof ( init_50eco )		3902599	3					
ANR	3902614	SizeofExpression	sizeof ( init_50eco )		3902599	0					
ANR	3902615	Sizeof	sizeof		3902599	0					
ANR	3902616	SizeofOperand	init_50eco		3902599	1					
ANR	3902617	ReturnType	static int		3902599	1					
ANR	3902618	Identifier	md50e_print_page		3902599	2					
ANR	3902619	ParameterList	"gx_device_printer * pdev , FILE * prn_stream"		3902599	3					
ANR	3902620	Parameter	gx_device_printer * pdev	176:17:5923:5945	3902599	0	True				
ANR	3902621	ParameterType	gx_device_printer *		3902599	0					
ANR	3902622	Identifier	pdev		3902599	1					
ANR	3902623	Parameter	FILE * prn_stream	176:42:5948:5963	3902599	1	True				
ANR	3902624	ParameterType	FILE *		3902599	0					
ANR	3902625	Identifier	prn_stream		3902599	1					
ANR	3902626	CFGEntryNode	ENTRY		3902599		True				
ANR	3902627	CFGExitNode	EXIT		3902599		True				
ANR	3902628	Symbol	pdev		3902599						
ANR	3902629	Symbol	prn_stream		3902599						
ANR	3902630	Symbol	init_50eco		3902599						
ANR	3902631	Symbol	md50_print_page		3902599						
ANR	3902632	Function	md50_print_page	182:0:6084:7806							
ANR	3902633	FunctionDef	"md50_print_page (gx_device_printer * pdev , FILE * prn_stream , const char * init_str , int init_size)"		3902632	0					
ANR	3902634	CompoundStatement		185:0:6205:7806	3902632	0					
ANR	3902635	IdentifierDeclStatement	int lnum ;	186:2:6209:6217	3902632	0	True				
ANR	3902636	IdentifierDecl	lnum		3902632	0					
ANR	3902637	IdentifierDeclType	int		3902632	0					
ANR	3902638	Identifier	lnum		3902632	1					
ANR	3902639	IdentifierDeclStatement	int line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev ) ;	187:2:6221:6284	3902632	1	True				
ANR	3902640	IdentifierDecl	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		3902632	0					
ANR	3902641	IdentifierDeclType	int		3902632	0					
ANR	3902642	Identifier	line_size		3902632	1					
ANR	3902643	AssignmentExpression	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		3902632	2		=			
ANR	3902644	Identifier	line_size		3902632	0					
ANR	3902645	CallExpression	gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		3902632	1					
ANR	3902646	Callee	gdev_mem_bytes_per_scan_line		3902632	0					
ANR	3902647	Identifier	gdev_mem_bytes_per_scan_line		3902632	0					
ANR	3902648	ArgumentList	( gx_device * ) pdev		3902632	1					
ANR	3902649	Argument	( gx_device * ) pdev		3902632	0					
ANR	3902650	CastExpression	( gx_device * ) pdev		3902632	0					
ANR	3902651	CastTarget	gx_device *		3902632	0					
ANR	3902652	Identifier	pdev		3902632	1					
ANR	3902653	IdentifierDeclStatement	"byte * data = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md50_print_page(data)"" ) ;"	188:2:6288:6387	3902632	2	True				
ANR	3902654	IdentifierDecl	"* data = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md50_print_page(data)"" )"		3902632	0					
ANR	3902655	IdentifierDeclType	byte *		3902632	0					
ANR	3902656	Identifier	data		3902632	1					
ANR	3902657	AssignmentExpression	"* data = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md50_print_page(data)"" )"		3902632	2		=			
ANR	3902658	Identifier	data		3902632	0					
ANR	3902659	CastExpression	"( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md50_print_page(data)"" )"		3902632	1					
ANR	3902660	CastTarget	byte *		3902632	0					
ANR	3902661	CallExpression	"gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md50_print_page(data)"" )"		3902632	1					
ANR	3902662	Callee	gs_malloc		3902632	0					
ANR	3902663	Identifier	gs_malloc		3902632	0					
ANR	3902664	ArgumentList	pdev -> memory -> non_gc_memory		3902632	1					
ANR	3902665	Argument	pdev -> memory -> non_gc_memory		3902632	0					
ANR	3902666	PtrMemberAccess	pdev -> memory -> non_gc_memory		3902632	0					
ANR	3902667	PtrMemberAccess	pdev -> memory		3902632	0					
ANR	3902668	Identifier	pdev		3902632	0					
ANR	3902669	Identifier	memory		3902632	1					
ANR	3902670	Identifier	non_gc_memory		3902632	1					
ANR	3902671	Argument	8		3902632	1					
ANR	3902672	PrimaryExpression	8		3902632	0					
ANR	3902673	Argument	line_size		3902632	2					
ANR	3902674	Identifier	line_size		3902632	0					
ANR	3902675	Argument	"""md50_print_page(data)"""		3902632	3					
ANR	3902676	PrimaryExpression	"""md50_print_page(data)"""		3902632	0					
ANR	3902677	IdentifierDeclStatement	int skipping = 0 ;	189:2:6391:6407	3902632	3	True				
ANR	3902678	IdentifierDecl	skipping = 0		3902632	0					
ANR	3902679	IdentifierDeclType	int		3902632	0					
ANR	3902680	Identifier	skipping		3902632	1					
ANR	3902681	AssignmentExpression	skipping = 0		3902632	2		=			
ANR	3902682	Identifier	skipping		3902632	0					
ANR	3902683	PrimaryExpression	0		3902632	1					
ANR	3902684	IdentifierDeclStatement	int nbyte ;	190:2:6411:6420	3902632	4	True				
ANR	3902685	IdentifierDecl	nbyte		3902632	0					
ANR	3902686	IdentifierDeclType	int		3902632	0					
ANR	3902687	Identifier	nbyte		3902632	1					
ANR	3902688	IdentifierDeclStatement	int nskip ;	191:2:6424:6433	3902632	5	True				
ANR	3902689	IdentifierDecl	nskip		3902632	0					
ANR	3902690	IdentifierDeclType	int		3902632	0					
ANR	3902691	Identifier	nskip		3902632	1					
ANR	3902692	IdentifierDeclStatement	int n ;	192:2:6437:6442	3902632	6	True				
ANR	3902693	IdentifierDecl	n		3902632	0					
ANR	3902694	IdentifierDeclType	int		3902632	0					
ANR	3902695	Identifier	n		3902632	1					
ANR	3902696	ExpressionStatement	"fwrite ( init_str , sizeof ( char ) , init_size , prn_stream )"	195:2:6491:6544	3902632	7	True				
ANR	3902697	CallExpression	"fwrite ( init_str , sizeof ( char ) , init_size , prn_stream )"		3902632	0					
ANR	3902698	Callee	fwrite		3902632	0					
ANR	3902699	Identifier	fwrite		3902632	0					
ANR	3902700	ArgumentList	init_str		3902632	1					
ANR	3902701	Argument	init_str		3902632	0					
ANR	3902702	Identifier	init_str		3902632	0					
ANR	3902703	Argument	sizeof ( char )		3902632	1					
ANR	3902704	SizeofExpression	sizeof ( char )		3902632	0					
ANR	3902705	Sizeof	sizeof		3902632	0					
ANR	3902706	SizeofOperand	char		3902632	1					
ANR	3902707	Argument	init_size		3902632	2					
ANR	3902708	Identifier	init_size		3902632	0					
ANR	3902709	Argument	prn_stream		3902632	3					
ANR	3902710	Identifier	prn_stream		3902632	0					
ANR	3902711	ExpressionStatement	fflush ( prn_stream )	196:2:6548:6566	3902632	8	True				
ANR	3902712	CallExpression	fflush ( prn_stream )		3902632	0					
ANR	3902713	Callee	fflush		3902632	0					
ANR	3902714	Identifier	fflush		3902632	0					
ANR	3902715	ArgumentList	prn_stream		3902632	1					
ANR	3902716	Argument	prn_stream		3902632	0					
ANR	3902717	Identifier	prn_stream		3902632	0					
ANR	3902718	ForStatement	for ( lnum = 0 ; lnum <= pdev -> height ; lnum ++ )		3902632	9					
ANR	3902719	ForInit	lnum = 0 ;	198:8:6577:6585	3902632	0	True				
ANR	3902720	AssignmentExpression	lnum = 0		3902632	0		=			
ANR	3902721	Identifier	lnum		3902632	0					
ANR	3902722	PrimaryExpression	0		3902632	1					
ANR	3902723	Condition	lnum <= pdev -> height	198:18:6587:6606	3902632	1	True				
ANR	3902724	RelationalExpression	lnum <= pdev -> height		3902632	0		<=			
ANR	3902725	Identifier	lnum		3902632	0					
ANR	3902726	PtrMemberAccess	pdev -> height		3902632	1					
ANR	3902727	Identifier	pdev		3902632	0					
ANR	3902728	Identifier	height		3902632	1					
ANR	3902729	PostIncDecOperationExpression	lnum ++	198:40:6609:6614	3902632	2	True				
ANR	3902730	Identifier	lnum		3902632	0					
ANR	3902731	IncDec	++		3902632	1					
ANR	3902732	CompoundStatement		16:4:457:480	3902632	3					
ANR	3902733	IdentifierDeclStatement	byte * end_data = data + line_size ;	199:4:6624:6657	3902632	0	True				
ANR	3902734	IdentifierDecl	* end_data = data + line_size		3902632	0					
ANR	3902735	IdentifierDeclType	byte *		3902632	0					
ANR	3902736	Identifier	end_data		3902632	1					
ANR	3902737	AssignmentExpression	* end_data = data + line_size		3902632	2		=			
ANR	3902738	Identifier	end_data		3902632	0					
ANR	3902739	AdditiveExpression	data + line_size		3902632	1		+			
ANR	3902740	Identifier	data		3902632	0					
ANR	3902741	Identifier	line_size		3902632	1					
ANR	3902742	IdentifierDeclStatement	byte * start_data = data ;	200:4:6663:6686	3902632	1	True				
ANR	3902743	IdentifierDecl	* start_data = data		3902632	0					
ANR	3902744	IdentifierDeclType	byte *		3902632	0					
ANR	3902745	Identifier	start_data		3902632	1					
ANR	3902746	AssignmentExpression	* start_data = data		3902632	2		=			
ANR	3902747	Identifier	data		3902632	0					
ANR	3902748	Identifier	data		3902632	1					
ANR	3902749	ExpressionStatement	"memset ( data , 0 , LINE_SIZE )"	201:4:6692:6718	3902632	2	True				
ANR	3902750	CallExpression	"memset ( data , 0 , LINE_SIZE )"		3902632	0					
ANR	3902751	Callee	memset		3902632	0					
ANR	3902752	Identifier	memset		3902632	0					
ANR	3902753	ArgumentList	data		3902632	1					
ANR	3902754	Argument	data		3902632	0					
ANR	3902755	Identifier	data		3902632	0					
ANR	3902756	Argument	0		3902632	1					
ANR	3902757	PrimaryExpression	0		3902632	0					
ANR	3902758	Argument	LINE_SIZE		3902632	2					
ANR	3902759	Identifier	LINE_SIZE		3902632	0					
ANR	3902760	ExpressionStatement	"n = gdev_prn_copy_scan_lines ( pdev , lnum , ( byte * ) data , line_size )"	202:4:6724:6818	3902632	3	True				
ANR	3902761	AssignmentExpression	"n = gdev_prn_copy_scan_lines ( pdev , lnum , ( byte * ) data , line_size )"		3902632	0		=			
ANR	3902762	Identifier	n		3902632	0					
ANR	3902763	CallExpression	"gdev_prn_copy_scan_lines ( pdev , lnum , ( byte * ) data , line_size )"		3902632	1					
ANR	3902764	Callee	gdev_prn_copy_scan_lines		3902632	0					
ANR	3902765	Identifier	gdev_prn_copy_scan_lines		3902632	0					
ANR	3902766	ArgumentList	pdev		3902632	1					
ANR	3902767	Argument	pdev		3902632	0					
ANR	3902768	Identifier	pdev		3902632	0					
ANR	3902769	Argument	lnum		3902632	1					
ANR	3902770	Identifier	lnum		3902632	0					
ANR	3902771	Argument	( byte * ) data		3902632	2					
ANR	3902772	CastExpression	( byte * ) data		3902632	0					
ANR	3902773	CastTarget	byte *		3902632	0					
ANR	3902774	Identifier	data		3902632	1					
ANR	3902775	Argument	line_size		3902632	3					
ANR	3902776	Identifier	line_size		3902632	0					
ANR	3902777	IfStatement	if ( n != 1 )		3902632	4					
ANR	3902778	Condition	n != 1	204:8:6828:6833	3902632	0	True				
ANR	3902779	EqualityExpression	n != 1		3902632	0		!=			
ANR	3902780	Identifier	n		3902632	0					
ANR	3902781	PrimaryExpression	1		3902632	1					
ANR	3902782	ReturnStatement	return n ;	205:6:6842:6850	3902632	1	True				
ANR	3902783	Identifier	n		3902632	0					
ANR	3902784	WhileStatement	while ( end_data > data && end_data [ - 1 ] == 0 )		3902632	5					
ANR	3902785	Condition	end_data > data && end_data [ - 1 ] == 0	208:12:6895:6930	3902632	0	True				
ANR	3902786	AndExpression	end_data > data && end_data [ - 1 ] == 0		3902632	0		&&			
ANR	3902787	RelationalExpression	end_data > data		3902632	0		>			
ANR	3902788	Identifier	end_data		3902632	0					
ANR	3902789	Identifier	data		3902632	1					
ANR	3902790	EqualityExpression	end_data [ - 1 ] == 0		3902632	1		==			
ANR	3902791	ArrayIndexing	end_data [ - 1 ]		3902632	0					
ANR	3902792	Identifier	end_data		3902632	0					
ANR	3902793	UnaryOperationExpression	- 1		3902632	1					
ANR	3902794	UnaryOperator	-		3902632	0					
ANR	3902795	PrimaryExpression	1		3902632	1					
ANR	3902796	PrimaryExpression	0		3902632	1					
ANR	3902797	ExpressionStatement	end_data --	209:6:6940:6950	3902632	1	True				
ANR	3902798	PostIncDecOperationExpression	end_data --		3902632	0					
ANR	3902799	Identifier	end_data		3902632	0					
ANR	3902800	IncDec	--		3902632	1					
ANR	3902801	WhileStatement	while ( start_data < end_data && * start_data == 0 )		3902632	6					
ANR	3902802	Condition	start_data < end_data && * start_data == 0	211:12:7002:7042	3902632	0	True				
ANR	3902803	AndExpression	start_data < end_data && * start_data == 0		3902632	0		&&			
ANR	3902804	RelationalExpression	start_data < end_data		3902632	0		<			
ANR	3902805	Identifier	start_data		3902632	0					
ANR	3902806	Identifier	end_data		3902632	1					
ANR	3902807	EqualityExpression	* start_data == 0		3902632	1		==			
ANR	3902808	UnaryOperationExpression	* start_data		3902632	0					
ANR	3902809	UnaryOperator	*		3902632	0					
ANR	3902810	Identifier	start_data		3902632	1					
ANR	3902811	PrimaryExpression	0		3902632	1					
ANR	3902812	ExpressionStatement	start_data ++	212:6:7052:7064	3902632	1	True				
ANR	3902813	PostIncDecOperationExpression	start_data ++		3902632	0					
ANR	3902814	Identifier	start_data		3902632	0					
ANR	3902815	IncDec	++		3902632	1					
ANR	3902816	ExpressionStatement	nbyte = end_data - start_data	213:4:7070:7099	3902632	7	True				
ANR	3902817	AssignmentExpression	nbyte = end_data - start_data		3902632	0		=			
ANR	3902818	Identifier	nbyte		3902632	0					
ANR	3902819	AdditiveExpression	end_data - start_data		3902632	1		-			
ANR	3902820	Identifier	end_data		3902632	0					
ANR	3902821	Identifier	start_data		3902632	1					
ANR	3902822	ExpressionStatement	nskip = start_data - data	214:4:7105:7130	3902632	8	True				
ANR	3902823	AssignmentExpression	nskip = start_data - data		3902632	0		=			
ANR	3902824	Identifier	nskip		3902632	0					
ANR	3902825	AdditiveExpression	start_data - data		3902632	1		-			
ANR	3902826	Identifier	start_data		3902632	0					
ANR	3902827	Identifier	data		3902632	1					
ANR	3902828	IfStatement	if ( nbyte == 0 )		3902632	9					
ANR	3902829	Condition	nbyte == 0	216:7:7140:7149	3902632	0	True				
ANR	3902830	EqualityExpression	nbyte == 0		3902632	0		==			
ANR	3902831	Identifier	nbyte		3902632	0					
ANR	3902832	PrimaryExpression	0		3902632	1					
ANR	3902833	CompoundStatement		33:6:952:952	3902632	1					
ANR	3902834	ExpressionStatement	skipping ++	218:8:7168:7178	3902632	0	True				
ANR	3902835	PostIncDecOperationExpression	skipping ++		3902632	0					
ANR	3902836	Identifier	skipping		3902632	0					
ANR	3902837	IncDec	++		3902632	1					
ANR	3902838	ContinueStatement	continue ;	219:8:7188:7196	3902632	1	True				
ANR	3902839	ElseStatement	else		3902632	0					
ANR	3902840	CompoundStatement		38:6:1015:1015	3902632	0					
ANR	3902841	IfStatement	if ( skipping )		3902632	0					
ANR	3902842	Condition	skipping	223:11:7234:7241	3902632	0	True				
ANR	3902843	Identifier	skipping		3902632	0					
ANR	3902844	CompoundStatement		40:10:1048:1048	3902632	1					
ANR	3902845	ExpressionStatement	"fprintf ( prn_stream , ""%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , skipping & 0xff , ( skipping & 0xff00 ) / 0x100 , 0x59 )"	225:12:7268:7393	3902632	0	True				
ANR	3902846	CallExpression	"fprintf ( prn_stream , ""%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , skipping & 0xff , ( skipping & 0xff00 ) / 0x100 , 0x59 )"		3902632	0					
ANR	3902847	Callee	fprintf		3902632	0					
ANR	3902848	Identifier	fprintf		3902632	0					
ANR	3902849	ArgumentList	prn_stream		3902632	1					
ANR	3902850	Argument	prn_stream		3902632	0					
ANR	3902851	Identifier	prn_stream		3902632	0					
ANR	3902852	Argument	"""%c%c%c%c%c%c"""		3902632	1					
ANR	3902853	PrimaryExpression	"""%c%c%c%c%c%c"""		3902632	0					
ANR	3902854	Argument	0x1b		3902632	2					
ANR	3902855	PrimaryExpression	0x1b		3902632	0					
ANR	3902856	Argument	0x2a		3902632	3					
ANR	3902857	PrimaryExpression	0x2a		3902632	0					
ANR	3902858	Argument	0x62		3902632	4					
ANR	3902859	PrimaryExpression	0x62		3902632	0					
ANR	3902860	Argument	skipping & 0xff		3902632	5					
ANR	3902861	BitAndExpression	skipping & 0xff		3902632	0		&			
ANR	3902862	Identifier	skipping		3902632	0					
ANR	3902863	PrimaryExpression	0xff		3902632	1					
ANR	3902864	Argument	( skipping & 0xff00 ) / 0x100		3902632	6					
ANR	3902865	MultiplicativeExpression	( skipping & 0xff00 ) / 0x100		3902632	0		/			
ANR	3902866	BitAndExpression	skipping & 0xff00		3902632	0		&			
ANR	3902867	Identifier	skipping		3902632	0					
ANR	3902868	PrimaryExpression	0xff00		3902632	1					
ANR	3902869	PrimaryExpression	0x100		3902632	1					
ANR	3902870	Argument	0x59		3902632	7					
ANR	3902871	PrimaryExpression	0x59		3902632	0					
ANR	3902872	ExpressionStatement	skipping = 0	227:12:7407:7419	3902632	1	True				
ANR	3902873	AssignmentExpression	skipping = 0		3902632	0		=			
ANR	3902874	Identifier	skipping		3902632	0					
ANR	3902875	PrimaryExpression	0		3902632	1					
ANR	3902876	ExpressionStatement	"fprintf ( prn_stream , ""%c%c%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , nbyte & 0xff , ( nbyte & 0xff00 ) / 0x100 , 0x54 , nskip & 0xff , ( nskip & 0xff00 ) / 0x100 )"	229:8:7441:7616	3902632	1	True				
ANR	3902877	CallExpression	"fprintf ( prn_stream , ""%c%c%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , nbyte & 0xff , ( nbyte & 0xff00 ) / 0x100 , 0x54 , nskip & 0xff , ( nskip & 0xff00 ) / 0x100 )"		3902632	0					
ANR	3902878	Callee	fprintf		3902632	0					
ANR	3902879	Identifier	fprintf		3902632	0					
ANR	3902880	ArgumentList	prn_stream		3902632	1					
ANR	3902881	Argument	prn_stream		3902632	0					
ANR	3902882	Identifier	prn_stream		3902632	0					
ANR	3902883	Argument	"""%c%c%c%c%c%c%c%c"""		3902632	1					
ANR	3902884	PrimaryExpression	"""%c%c%c%c%c%c%c%c"""		3902632	0					
ANR	3902885	Argument	0x1b		3902632	2					
ANR	3902886	PrimaryExpression	0x1b		3902632	0					
ANR	3902887	Argument	0x2a		3902632	3					
ANR	3902888	PrimaryExpression	0x2a		3902632	0					
ANR	3902889	Argument	0x62		3902632	4					
ANR	3902890	PrimaryExpression	0x62		3902632	0					
ANR	3902891	Argument	nbyte & 0xff		3902632	5					
ANR	3902892	BitAndExpression	nbyte & 0xff		3902632	0		&			
ANR	3902893	Identifier	nbyte		3902632	0					
ANR	3902894	PrimaryExpression	0xff		3902632	1					
ANR	3902895	Argument	( nbyte & 0xff00 ) / 0x100		3902632	6					
ANR	3902896	MultiplicativeExpression	( nbyte & 0xff00 ) / 0x100		3902632	0		/			
ANR	3902897	BitAndExpression	nbyte & 0xff00		3902632	0		&			
ANR	3902898	Identifier	nbyte		3902632	0					
ANR	3902899	PrimaryExpression	0xff00		3902632	1					
ANR	3902900	PrimaryExpression	0x100		3902632	1					
ANR	3902901	Argument	0x54		3902632	7					
ANR	3902902	PrimaryExpression	0x54		3902632	0					
ANR	3902903	Argument	nskip & 0xff		3902632	8					
ANR	3902904	BitAndExpression	nskip & 0xff		3902632	0		&			
ANR	3902905	Identifier	nskip		3902632	0					
ANR	3902906	PrimaryExpression	0xff		3902632	1					
ANR	3902907	Argument	( nskip & 0xff00 ) / 0x100		3902632	9					
ANR	3902908	MultiplicativeExpression	( nskip & 0xff00 ) / 0x100		3902632	0		/			
ANR	3902909	BitAndExpression	nskip & 0xff00		3902632	0		&			
ANR	3902910	Identifier	nskip		3902632	0					
ANR	3902911	PrimaryExpression	0xff00		3902632	1					
ANR	3902912	PrimaryExpression	0x100		3902632	1					
ANR	3902913	ExpressionStatement	"fwrite ( start_data , sizeof ( char ) , nbyte , prn_stream )"	232:8:7626:7677	3902632	2	True				
ANR	3902914	CallExpression	"fwrite ( start_data , sizeof ( char ) , nbyte , prn_stream )"		3902632	0					
ANR	3902915	Callee	fwrite		3902632	0					
ANR	3902916	Identifier	fwrite		3902632	0					
ANR	3902917	ArgumentList	start_data		3902632	1					
ANR	3902918	Argument	start_data		3902632	0					
ANR	3902919	Identifier	start_data		3902632	0					
ANR	3902920	Argument	sizeof ( char )		3902632	1					
ANR	3902921	SizeofExpression	sizeof ( char )		3902632	0					
ANR	3902922	Sizeof	sizeof		3902632	0					
ANR	3902923	SizeofOperand	char		3902632	1					
ANR	3902924	Argument	nbyte		3902632	2					
ANR	3902925	Identifier	nbyte		3902632	0					
ANR	3902926	Argument	prn_stream		3902632	3					
ANR	3902927	Identifier	prn_stream		3902632	0					
ANR	3902928	ExpressionStatement	"fwrite ( end_md , sizeof ( char ) , sizeof ( end_md ) , prn_stream )"	237:2:7713:7769	3902632	10	True				
ANR	3902929	CallExpression	"fwrite ( end_md , sizeof ( char ) , sizeof ( end_md ) , prn_stream )"		3902632	0					
ANR	3902930	Callee	fwrite		3902632	0					
ANR	3902931	Identifier	fwrite		3902632	0					
ANR	3902932	ArgumentList	end_md		3902632	1					
ANR	3902933	Argument	end_md		3902632	0					
ANR	3902934	Identifier	end_md		3902632	0					
ANR	3902935	Argument	sizeof ( char )		3902632	1					
ANR	3902936	SizeofExpression	sizeof ( char )		3902632	0					
ANR	3902937	Sizeof	sizeof		3902632	0					
ANR	3902938	SizeofOperand	char		3902632	1					
ANR	3902939	Argument	sizeof ( end_md )		3902632	2					
ANR	3902940	SizeofExpression	sizeof ( end_md )		3902632	0					
ANR	3902941	Sizeof	sizeof		3902632	0					
ANR	3902942	SizeofOperand	end_md		3902632	1					
ANR	3902943	Argument	prn_stream		3902632	3					
ANR	3902944	Identifier	prn_stream		3902632	0					
ANR	3902945	ExpressionStatement	fflush ( prn_stream )	238:2:7773:7791	3902632	11	True				
ANR	3902946	CallExpression	fflush ( prn_stream )		3902632	0					
ANR	3902947	Callee	fflush		3902632	0					
ANR	3902948	Identifier	fflush		3902632	0					
ANR	3902949	ArgumentList	prn_stream		3902632	1					
ANR	3902950	Argument	prn_stream		3902632	0					
ANR	3902951	Identifier	prn_stream		3902632	0					
ANR	3902952	ReturnStatement	return 0 ;	240:2:7796:7804	3902632	12	True				
ANR	3902953	PrimaryExpression	0		3902632	0					
ANR	3902954	ReturnType	static int		3902632	1					
ANR	3902955	Identifier	md50_print_page		3902632	2					
ANR	3902956	ParameterList	"gx_device_printer * pdev , FILE * prn_stream , const char * init_str , int init_size"		3902632	3					
ANR	3902957	Parameter	gx_device_printer * pdev	183:16:6111:6133	3902632	0	True				
ANR	3902958	ParameterType	gx_device_printer *		3902632	0					
ANR	3902959	Identifier	pdev		3902632	1					
ANR	3902960	Parameter	FILE * prn_stream	183:41:6136:6151	3902632	1	True				
ANR	3902961	ParameterType	FILE *		3902632	0					
ANR	3902962	Identifier	prn_stream		3902632	1					
ANR	3902963	Parameter	const char * init_str	184:14:6168:6187	3902632	2	True				
ANR	3902964	ParameterType	const char *		3902632	0					
ANR	3902965	Identifier	init_str		3902632	1					
ANR	3902966	Parameter	int init_size	184:36:6190:6202	3902632	3	True				
ANR	3902967	ParameterType	int		3902632	0					
ANR	3902968	Identifier	init_size		3902632	1					
ANR	3902969	CFGEntryNode	ENTRY		3902632		True				
ANR	3902970	CFGExitNode	EXIT		3902632		True				
ANR	3902971	Symbol	data		3902632						
ANR	3902972	Symbol	init_str		3902632						
ANR	3902973	Symbol	pdev -> memory -> non_gc_memory		3902632						
ANR	3902974	Symbol	gdev_mem_bytes_per_scan_line		3902632						
ANR	3902975	Symbol	* * pdev		3902632						
ANR	3902976	Symbol	nbyte		3902632						
ANR	3902977	Symbol	pdev -> height		3902632						
ANR	3902978	Symbol	* pdev -> memory		3902632						
ANR	3902979	Symbol	gdev_prn_copy_scan_lines		3902632						
ANR	3902980	Symbol	pdev		3902632						
ANR	3902981	Symbol	prn_stream		3902632						
ANR	3902982	Symbol	start_data		3902632						
ANR	3902983	Symbol	pdev -> memory		3902632						
ANR	3902984	Symbol	skipping		3902632						
ANR	3902985	Symbol	end_data		3902632						
ANR	3902986	Symbol	line_size		3902632						
ANR	3902987	Symbol	LINE_SIZE		3902632						
ANR	3902988	Symbol	lnum		3902632						
ANR	3902989	Symbol	* end_data		3902632						
ANR	3902990	Symbol	end_md		3902632						
ANR	3902991	Symbol	nskip		3902632						
ANR	3902992	Symbol	n		3902632						
ANR	3902993	Symbol	gs_malloc		3902632						
ANR	3902994	Symbol	* start_data		3902632						
ANR	3902995	Symbol	init_size		3902632						
ANR	3902996	Symbol	* pdev		3902632						
ANR	3902997	Function	md1xm_print_page	244:0:7875:12262							
ANR	3902998	FunctionDef	"md1xm_print_page (gx_device_printer * pdev , FILE * prn_stream)"		3902997	0					
ANR	3902999	CompoundStatement		246:0:7946:12262	3902997	0					
ANR	3903000	IdentifierDeclStatement	int lnum ;	247:2:7950:7958	3902997	0	True				
ANR	3903001	IdentifierDecl	lnum		3902997	0					
ANR	3903002	IdentifierDeclType	int		3902997	0					
ANR	3903003	Identifier	lnum		3902997	1					
ANR	3903004	IdentifierDeclStatement	int line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev ) ;	248:2:7962:8025	3902997	1	True				
ANR	3903005	IdentifierDecl	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		3902997	0					
ANR	3903006	IdentifierDeclType	int		3902997	0					
ANR	3903007	Identifier	line_size		3902997	1					
ANR	3903008	AssignmentExpression	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		3902997	2		=			
ANR	3903009	Identifier	line_size		3902997	0					
ANR	3903010	CallExpression	gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		3902997	1					
ANR	3903011	Callee	gdev_mem_bytes_per_scan_line		3902997	0					
ANR	3903012	Identifier	gdev_mem_bytes_per_scan_line		3902997	0					
ANR	3903013	ArgumentList	( gx_device * ) pdev		3902997	1					
ANR	3903014	Argument	( gx_device * ) pdev		3902997	0					
ANR	3903015	CastExpression	( gx_device * ) pdev		3902997	0					
ANR	3903016	CastTarget	gx_device *		3902997	0					
ANR	3903017	Identifier	pdev		3902997	1					
ANR	3903018	IdentifierDeclStatement	"byte * data = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" ) ;"	249:2:8029:8128	3902997	2	True				
ANR	3903019	IdentifierDecl	"* data = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	0					
ANR	3903020	IdentifierDeclType	byte *		3902997	0					
ANR	3903021	Identifier	data		3902997	1					
ANR	3903022	AssignmentExpression	"* data = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	2		=			
ANR	3903023	Identifier	data		3902997	0					
ANR	3903024	CastExpression	"( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	1					
ANR	3903025	CastTarget	byte *		3902997	0					
ANR	3903026	CallExpression	"gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	1					
ANR	3903027	Callee	gs_malloc		3902997	0					
ANR	3903028	Identifier	gs_malloc		3902997	0					
ANR	3903029	ArgumentList	pdev -> memory -> non_gc_memory		3902997	1					
ANR	3903030	Argument	pdev -> memory -> non_gc_memory		3902997	0					
ANR	3903031	PtrMemberAccess	pdev -> memory -> non_gc_memory		3902997	0					
ANR	3903032	PtrMemberAccess	pdev -> memory		3902997	0					
ANR	3903033	Identifier	pdev		3902997	0					
ANR	3903034	Identifier	memory		3902997	1					
ANR	3903035	Identifier	non_gc_memory		3902997	1					
ANR	3903036	Argument	8		3902997	1					
ANR	3903037	PrimaryExpression	8		3902997	0					
ANR	3903038	Argument	line_size		3902997	2					
ANR	3903039	Identifier	line_size		3902997	0					
ANR	3903040	Argument	"""md1xm_print_page(data)"""		3902997	3					
ANR	3903041	PrimaryExpression	"""md1xm_print_page(data)"""		3902997	0					
ANR	3903042	IdentifierDeclStatement	"byte * out_start = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" ) ;"	250:2:8132:8236	3902997	3	True				
ANR	3903043	IdentifierDecl	"* out_start = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	0					
ANR	3903044	IdentifierDeclType	byte *		3902997	0					
ANR	3903045	Identifier	out_start		3902997	1					
ANR	3903046	AssignmentExpression	"* out_start = ( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	2		=			
ANR	3903047	Identifier	out_start		3902997	0					
ANR	3903048	CastExpression	"( byte * ) gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	1					
ANR	3903049	CastTarget	byte *		3902997	0					
ANR	3903050	CallExpression	"gs_malloc ( pdev -> memory -> non_gc_memory , 8 , line_size , ""md1xm_print_page(data)"" )"		3902997	1					
ANR	3903051	Callee	gs_malloc		3902997	0					
ANR	3903052	Identifier	gs_malloc		3902997	0					
ANR	3903053	ArgumentList	pdev -> memory -> non_gc_memory		3902997	1					
ANR	3903054	Argument	pdev -> memory -> non_gc_memory		3902997	0					
ANR	3903055	PtrMemberAccess	pdev -> memory -> non_gc_memory		3902997	0					
ANR	3903056	PtrMemberAccess	pdev -> memory		3902997	0					
ANR	3903057	Identifier	pdev		3902997	0					
ANR	3903058	Identifier	memory		3902997	1					
ANR	3903059	Identifier	non_gc_memory		3902997	1					
ANR	3903060	Argument	8		3902997	1					
ANR	3903061	PrimaryExpression	8		3902997	0					
ANR	3903062	Argument	line_size		3902997	2					
ANR	3903063	Identifier	line_size		3902997	0					
ANR	3903064	Argument	"""md1xm_print_page(data)"""		3902997	3					
ANR	3903065	PrimaryExpression	"""md1xm_print_page(data)"""		3902997	0					
ANR	3903066	IdentifierDeclStatement	int skipping = 0 ;	251:2:8240:8256	3902997	4	True				
ANR	3903067	IdentifierDecl	skipping = 0		3902997	0					
ANR	3903068	IdentifierDeclType	int		3902997	0					
ANR	3903069	Identifier	skipping		3902997	1					
ANR	3903070	AssignmentExpression	skipping = 0		3902997	2		=			
ANR	3903071	Identifier	skipping		3902997	0					
ANR	3903072	PrimaryExpression	0		3902997	1					
ANR	3903073	IdentifierDeclStatement	int nbyte ;	252:2:8260:8269	3902997	5	True				
ANR	3903074	IdentifierDecl	nbyte		3902997	0					
ANR	3903075	IdentifierDeclType	int		3902997	0					
ANR	3903076	Identifier	nbyte		3902997	1					
ANR	3903077	ExpressionStatement	"fwrite ( & init_md13 [ 0 ] , sizeof ( char ) , sizeof ( init_md13 ) , prn_stream )"	255:2:8316:8382	3902997	6	True				
ANR	3903078	CallExpression	"fwrite ( & init_md13 [ 0 ] , sizeof ( char ) , sizeof ( init_md13 ) , prn_stream )"		3902997	0					
ANR	3903079	Callee	fwrite		3902997	0					
ANR	3903080	Identifier	fwrite		3902997	0					
ANR	3903081	ArgumentList	& init_md13 [ 0 ]		3902997	1					
ANR	3903082	Argument	& init_md13 [ 0 ]		3902997	0					
ANR	3903083	UnaryOperationExpression	& init_md13 [ 0 ]		3902997	0					
ANR	3903084	UnaryOperator	&		3902997	0					
ANR	3903085	ArrayIndexing	init_md13 [ 0 ]		3902997	1					
ANR	3903086	Identifier	init_md13		3902997	0					
ANR	3903087	PrimaryExpression	0		3902997	1					
ANR	3903088	Argument	sizeof ( char )		3902997	1					
ANR	3903089	SizeofExpression	sizeof ( char )		3902997	0					
ANR	3903090	Sizeof	sizeof		3902997	0					
ANR	3903091	SizeofOperand	char		3902997	1					
ANR	3903092	Argument	sizeof ( init_md13 )		3902997	2					
ANR	3903093	SizeofExpression	sizeof ( init_md13 )		3902997	0					
ANR	3903094	Sizeof	sizeof		3902997	0					
ANR	3903095	SizeofOperand	init_md13		3902997	1					
ANR	3903096	Argument	prn_stream		3902997	3					
ANR	3903097	Identifier	prn_stream		3902997	0					
ANR	3903098	ExpressionStatement	fflush ( prn_stream )	256:2:8386:8404	3902997	7	True				
ANR	3903099	CallExpression	fflush ( prn_stream )		3902997	0					
ANR	3903100	Callee	fflush		3902997	0					
ANR	3903101	Identifier	fflush		3902997	0					
ANR	3903102	ArgumentList	prn_stream		3902997	1					
ANR	3903103	Argument	prn_stream		3902997	0					
ANR	3903104	Identifier	prn_stream		3902997	0					
ANR	3903105	ForStatement	for ( lnum = 0 ; lnum <= pdev -> height ; lnum ++ )		3902997	8					
ANR	3903106	ForInit	lnum = 0 ;	258:8:8415:8423	3902997	0	True				
ANR	3903107	AssignmentExpression	lnum = 0		3902997	0		=			
ANR	3903108	Identifier	lnum		3902997	0					
ANR	3903109	PrimaryExpression	0		3902997	1					
ANR	3903110	Condition	lnum <= pdev -> height	258:18:8425:8444	3902997	1	True				
ANR	3903111	RelationalExpression	lnum <= pdev -> height		3902997	0		<=			
ANR	3903112	Identifier	lnum		3902997	0					
ANR	3903113	PtrMemberAccess	pdev -> height		3902997	1					
ANR	3903114	Identifier	pdev		3902997	0					
ANR	3903115	Identifier	height		3902997	1					
ANR	3903116	PostIncDecOperationExpression	lnum ++	258:40:8447:8452	3902997	2	True				
ANR	3903117	Identifier	lnum		3902997	0					
ANR	3903118	IncDec	++		3902997	1					
ANR	3903119	CompoundStatement		18:4:628:637	3902997	3					
ANR	3903120	IdentifierDeclStatement	byte * end_data = data + line_size ;	259:4:8462:8495	3902997	0	True				
ANR	3903121	IdentifierDecl	* end_data = data + line_size		3902997	0					
ANR	3903122	IdentifierDeclType	byte *		3902997	0					
ANR	3903123	Identifier	end_data		3902997	1					
ANR	3903124	AssignmentExpression	* end_data = data + line_size		3902997	2		=			
ANR	3903125	Identifier	end_data		3902997	0					
ANR	3903126	AdditiveExpression	data + line_size		3902997	1		+			
ANR	3903127	Identifier	data		3902997	0					
ANR	3903128	Identifier	line_size		3902997	1					
ANR	3903129	IdentifierDeclStatement	byte * data_p = data ;	260:4:8501:8520	3902997	1	True				
ANR	3903130	IdentifierDecl	* data_p = data		3902997	0					
ANR	3903131	IdentifierDeclType	byte *		3902997	0					
ANR	3903132	Identifier	data_p		3902997	1					
ANR	3903133	AssignmentExpression	* data_p = data		3902997	2		=			
ANR	3903134	Identifier	data		3902997	0					
ANR	3903135	Identifier	data		3902997	1					
ANR	3903136	IdentifierDeclStatement	byte * out_data = out_start ;	261:4:8526:8552	3902997	2	True				
ANR	3903137	IdentifierDecl	* out_data = out_start		3902997	0					
ANR	3903138	IdentifierDeclType	byte *		3902997	0					
ANR	3903139	Identifier	out_data		3902997	1					
ANR	3903140	AssignmentExpression	* out_data = out_start		3902997	2		=			
ANR	3903141	Identifier	out_start		3902997	0					
ANR	3903142	Identifier	out_start		3902997	1					
ANR	3903143	IdentifierDeclStatement	"byte * p , * q ;"	262:4:8558:8569	3902997	3	True				
ANR	3903144	IdentifierDecl	* p		3902997	0					
ANR	3903145	IdentifierDeclType	byte *		3902997	0					
ANR	3903146	Identifier	p		3902997	1					
ANR	3903147	IdentifierDecl	* q		3902997	1					
ANR	3903148	IdentifierDeclType	byte *		3902997	0					
ANR	3903149	Identifier	q		3902997	1					
ANR	3903150	IdentifierDeclStatement	int count ;	263:4:8575:8584	3902997	4	True				
ANR	3903151	IdentifierDecl	count		3902997	0					
ANR	3903152	IdentifierDeclType	int		3902997	0					
ANR	3903153	Identifier	count		3902997	1					
ANR	3903154	ExpressionStatement	"gdev_prn_copy_scan_lines ( pdev , lnum , data , line_size )"	265:4:8591:8644	3902997	5	True				
ANR	3903155	CallExpression	"gdev_prn_copy_scan_lines ( pdev , lnum , data , line_size )"		3902997	0					
ANR	3903156	Callee	gdev_prn_copy_scan_lines		3902997	0					
ANR	3903157	Identifier	gdev_prn_copy_scan_lines		3902997	0					
ANR	3903158	ArgumentList	pdev		3902997	1					
ANR	3903159	Argument	pdev		3902997	0					
ANR	3903160	Identifier	pdev		3902997	0					
ANR	3903161	Argument	lnum		3902997	1					
ANR	3903162	Identifier	lnum		3902997	0					
ANR	3903163	Argument	data		3902997	2					
ANR	3903164	Identifier	data		3902997	0					
ANR	3903165	Argument	line_size		3902997	3					
ANR	3903166	Identifier	line_size		3902997	0					
ANR	3903167	WhileStatement	while ( end_data > data && end_data [ - 1 ] == 0 )		3902997	6					
ANR	3903168	Condition	end_data > data && end_data [ - 1 ] == 0	267:12:8688:8723	3902997	0	True				
ANR	3903169	AndExpression	end_data > data && end_data [ - 1 ] == 0		3902997	0		&&			
ANR	3903170	RelationalExpression	end_data > data		3902997	0		>			
ANR	3903171	Identifier	end_data		3902997	0					
ANR	3903172	Identifier	data		3902997	1					
ANR	3903173	EqualityExpression	end_data [ - 1 ] == 0		3902997	1		==			
ANR	3903174	ArrayIndexing	end_data [ - 1 ]		3902997	0					
ANR	3903175	Identifier	end_data		3902997	0					
ANR	3903176	UnaryOperationExpression	- 1		3902997	1					
ANR	3903177	UnaryOperator	-		3902997	0					
ANR	3903178	PrimaryExpression	1		3902997	1					
ANR	3903179	PrimaryExpression	0		3902997	1					
ANR	3903180	ExpressionStatement	end_data --	268:6:8733:8743	3902997	1	True				
ANR	3903181	PostIncDecOperationExpression	end_data --		3902997	0					
ANR	3903182	Identifier	end_data		3902997	0					
ANR	3903183	IncDec	--		3902997	1					
ANR	3903184	ExpressionStatement	nbyte = end_data - data_p	270:5:8751:8776	3902997	7	True				
ANR	3903185	AssignmentExpression	nbyte = end_data - data_p		3902997	0		=			
ANR	3903186	Identifier	nbyte		3902997	0					
ANR	3903187	AdditiveExpression	end_data - data_p		3902997	1		-			
ANR	3903188	Identifier	end_data		3902997	0					
ANR	3903189	Identifier	data_p		3902997	1					
ANR	3903190	IfStatement	if ( nbyte == 0 )		3902997	8					
ANR	3903191	Condition	nbyte == 0	272:7:8786:8795	3902997	0	True				
ANR	3903192	EqualityExpression	nbyte == 0		3902997	0		==			
ANR	3903193	Identifier	nbyte		3902997	0					
ANR	3903194	PrimaryExpression	0		3902997	1					
ANR	3903195	CompoundStatement		28:6:857:857	3902997	1					
ANR	3903196	ExpressionStatement	skipping ++	274:8:8814:8824	3902997	0	True				
ANR	3903197	PostIncDecOperationExpression	skipping ++		3902997	0					
ANR	3903198	Identifier	skipping		3902997	0					
ANR	3903199	IncDec	++		3902997	1					
ANR	3903200	ContinueStatement	continue ;	275:8:8834:8842	3902997	1	True				
ANR	3903201	ElseStatement	else		3902997	0					
ANR	3903202	CompoundStatement		33:6:920:920	3902997	0					
ANR	3903203	IfStatement	if ( skipping )		3902997	0					
ANR	3903204	Condition	skipping	279:11:8880:8887	3902997	0	True				
ANR	3903205	Identifier	skipping		3902997	0					
ANR	3903206	CompoundStatement		35:10:953:953	3902997	1					
ANR	3903207	ExpressionStatement	"fprintf ( prn_stream , ""%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , skipping & 0xff , ( skipping & 0xff00 ) / 0x100 , 0x59 )"	281:12:8914:9039	3902997	0	True				
ANR	3903208	CallExpression	"fprintf ( prn_stream , ""%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , skipping & 0xff , ( skipping & 0xff00 ) / 0x100 , 0x59 )"		3902997	0					
ANR	3903209	Callee	fprintf		3902997	0					
ANR	3903210	Identifier	fprintf		3902997	0					
ANR	3903211	ArgumentList	prn_stream		3902997	1					
ANR	3903212	Argument	prn_stream		3902997	0					
ANR	3903213	Identifier	prn_stream		3902997	0					
ANR	3903214	Argument	"""%c%c%c%c%c%c"""		3902997	1					
ANR	3903215	PrimaryExpression	"""%c%c%c%c%c%c"""		3902997	0					
ANR	3903216	Argument	0x1b		3902997	2					
ANR	3903217	PrimaryExpression	0x1b		3902997	0					
ANR	3903218	Argument	0x2a		3902997	3					
ANR	3903219	PrimaryExpression	0x2a		3902997	0					
ANR	3903220	Argument	0x62		3902997	4					
ANR	3903221	PrimaryExpression	0x62		3902997	0					
ANR	3903222	Argument	skipping & 0xff		3902997	5					
ANR	3903223	BitAndExpression	skipping & 0xff		3902997	0		&			
ANR	3903224	Identifier	skipping		3902997	0					
ANR	3903225	PrimaryExpression	0xff		3902997	1					
ANR	3903226	Argument	( skipping & 0xff00 ) / 0x100		3902997	6					
ANR	3903227	MultiplicativeExpression	( skipping & 0xff00 ) / 0x100		3902997	0		/			
ANR	3903228	BitAndExpression	skipping & 0xff00		3902997	0		&			
ANR	3903229	Identifier	skipping		3902997	0					
ANR	3903230	PrimaryExpression	0xff00		3902997	1					
ANR	3903231	PrimaryExpression	0x100		3902997	1					
ANR	3903232	Argument	0x59		3902997	7					
ANR	3903233	PrimaryExpression	0x59		3902997	0					
ANR	3903234	ExpressionStatement	skipping = 0	283:12:9053:9065	3902997	1	True				
ANR	3903235	AssignmentExpression	skipping = 0		3902997	0		=			
ANR	3903236	Identifier	skipping		3902997	0					
ANR	3903237	PrimaryExpression	0		3902997	1					
ANR	3903238	ForStatement	"for ( p = data_p , q = data_p + 1 ; q < end_data ; )"		3902997	1					
ANR	3903239	ForInit	"p = data_p , q = data_p + 1 ;"	288:14:9154:9180	3902997	0	True				
ANR	3903240	Expression	"p = data_p , q = data_p + 1"		3902997	0					
ANR	3903241	AssignmentExpression	p = data_p		3902997	0		=			
ANR	3903242	Identifier	p		3902997	0					
ANR	3903243	Identifier	data_p		3902997	1					
ANR	3903244	AssignmentExpression	q = data_p + 1		3902997	1		=			
ANR	3903245	Identifier	q		3902997	0					
ANR	3903246	AdditiveExpression	data_p + 1		3902997	1		+			
ANR	3903247	Identifier	data_p		3902997	0					
ANR	3903248	PrimaryExpression	1		3902997	1					
ANR	3903249	Condition	q < end_data	288:42:9182:9193	3902997	1	True				
ANR	3903250	RelationalExpression	q < end_data		3902997	0		<			
ANR	3903251	Identifier	q		3902997	0					
ANR	3903252	Identifier	end_data		3902997	1					
ANR	3903253	CompoundStatement		43:57:1250:1250	3902997	2					
ANR	3903254	IfStatement	if ( * p != * q )		3902997	0					
ANR	3903255	Condition	* p != * q	290:14:9214:9221	3902997	0	True				
ANR	3903256	EqualityExpression	* p != * q		3902997	0		!=			
ANR	3903257	UnaryOperationExpression	* p		3902997	0					
ANR	3903258	UnaryOperator	*		3902997	0					
ANR	3903259	Identifier	p		3902997	1					
ANR	3903260	UnaryOperationExpression	* q		3902997	1					
ANR	3903261	UnaryOperator	*		3902997	0					
ANR	3903262	Identifier	q		3902997	1					
ANR	3903263	CompoundStatement		45:25:1278:1278	3902997	1					
ANR	3903264	ExpressionStatement	p += 2	292:12:9240:9246	3902997	0	True				
ANR	3903265	AssignmentExpression	p += 2		3902997	0		+=			
ANR	3903266	Identifier	p		3902997	0					
ANR	3903267	PrimaryExpression	2		3902997	1					
ANR	3903268	ExpressionStatement	q += 2	293:12:9260:9266	3902997	1	True				
ANR	3903269	AssignmentExpression	q += 2		3902997	0		+=			
ANR	3903270	Identifier	q		3902997	0					
ANR	3903271	PrimaryExpression	2		3902997	1					
ANR	3903272	ElseStatement	else		3902997	0					
ANR	3903273	CompoundStatement		50:17:1339:1339	3902997	0					
ANR	3903274	IfStatement	if ( p > data_p && * p == * ( p - 1 ) )		3902997	0					
ANR	3903275	Condition	p > data_p && * p == * ( p - 1 )	300:16:9381:9406	3902997	0	True				
ANR	3903276	AndExpression	p > data_p && * p == * ( p - 1 )		3902997	0		&&			
ANR	3903277	RelationalExpression	p > data_p		3902997	0		>			
ANR	3903278	Identifier	p		3902997	0					
ANR	3903279	Identifier	data_p		3902997	1					
ANR	3903280	EqualityExpression	* p == * ( p - 1 )		3902997	1		==			
ANR	3903281	UnaryOperationExpression	* p		3902997	0					
ANR	3903282	UnaryOperator	*		3902997	0					
ANR	3903283	Identifier	p		3902997	1					
ANR	3903284	UnaryOperationExpression	* ( p - 1 )		3902997	1					
ANR	3903285	UnaryOperator	*		3902997	0					
ANR	3903286	AdditiveExpression	p - 1		3902997	1		-			
ANR	3903287	Identifier	p		3902997	0					
ANR	3903288	PrimaryExpression	1		3902997	1					
ANR	3903289	ExpressionStatement	p --	301:14:9424:9427	3902997	1	True				
ANR	3903290	PostIncDecOperationExpression	p --		3902997	0					
ANR	3903291	Identifier	p		3902997	0					
ANR	3903292	IncDec	--		3902997	1					
ANR	3903293	ForStatement	for ( q ++ ; * q == * p && q < end_data ; q ++ )		3902997	1					
ANR	3903294	ForInit	q ++ ;	307:17:9528:9532	3902997	0	True				
ANR	3903295	PostIncDecOperationExpression	q ++		3902997	0					
ANR	3903296	Identifier	q		3902997	0					
ANR	3903297	IncDec	++		3902997	1					
ANR	3903298	Condition	* q == * p && q < end_data	307:23:9534:9557	3902997	1	True				
ANR	3903299	AndExpression	* q == * p && q < end_data		3902997	0		&&			
ANR	3903300	EqualityExpression	* q == * p		3902997	0		==			
ANR	3903301	UnaryOperationExpression	* q		3902997	0					
ANR	3903302	UnaryOperator	*		3902997	0					
ANR	3903303	Identifier	q		3902997	1					
ANR	3903304	UnaryOperationExpression	* p		3902997	1					
ANR	3903305	UnaryOperator	*		3902997	0					
ANR	3903306	Identifier	p		3902997	1					
ANR	3903307	RelationalExpression	q < end_data		3902997	1		<			
ANR	3903308	Identifier	q		3902997	0					
ANR	3903309	Identifier	end_data		3902997	1					
ANR	3903310	PostIncDecOperationExpression	q ++	307:50:9561:9563	3902997	2	True				
ANR	3903311	Identifier	q		3902997	0					
ANR	3903312	IncDec	++		3902997	1					
ANR	3903313	CompoundStatement		62:56:1620:1620	3902997	3					
ANR	3903314	IfStatement	if ( ( q - p ) >= 128 )		3902997	0					
ANR	3903315	Condition	( q - p ) >= 128	308:18:9587:9598	3902997	0	True				
ANR	3903316	RelationalExpression	( q - p ) >= 128		3902997	0		>=			
ANR	3903317	AdditiveExpression	q - p		3902997	0		-			
ANR	3903318	Identifier	q		3902997	0					
ANR	3903319	Identifier	p		3902997	1					
ANR	3903320	PrimaryExpression	128		3902997	1					
ANR	3903321	CompoundStatement		63:33:1655:1655	3902997	1					
ANR	3903322	IfStatement	if ( p > data_p )		3902997	0					
ANR	3903323	Condition	p > data_p	309:20:9624:9633	3902997	0	True				
ANR	3903324	RelationalExpression	p > data_p		3902997	0		>			
ANR	3903325	Identifier	p		3902997	0					
ANR	3903326	Identifier	data_p		3902997	1					
ANR	3903327	CompoundStatement		64:33:1690:1690	3902997	1					
ANR	3903328	ExpressionStatement	count = p - data_p	310:18:9657:9675	3902997	0	True				
ANR	3903329	AssignmentExpression	count = p - data_p		3902997	0		=			
ANR	3903330	Identifier	count		3902997	0					
ANR	3903331	AdditiveExpression	p - data_p		3902997	1		-			
ANR	3903332	Identifier	p		3902997	0					
ANR	3903333	Identifier	data_p		3902997	1					
ANR	3903334	WhileStatement	while ( count > 128 )		3902997	1					
ANR	3903335	Condition	count > 128	311:25:9702:9712	3902997	0	True				
ANR	3903336	RelationalExpression	count > 128		3902997	0		>			
ANR	3903337	Identifier	count		3902997	0					
ANR	3903338	PrimaryExpression	128		3902997	1					
ANR	3903339	CompoundStatement		66:39:1769:1769	3902997	1					
ANR	3903340	ExpressionStatement	* out_data ++ = '\\177'	312:20:9738:9758	3902997	0	True				
ANR	3903341	AssignmentExpression	* out_data ++ = '\\177'		3902997	0		=			
ANR	3903342	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903343	UnaryOperator	*		3902997	0					
ANR	3903344	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903345	Identifier	out_data		3902997	0					
ANR	3903346	IncDec	++		3902997	1					
ANR	3903347	PrimaryExpression	'\\177'		3902997	1					
ANR	3903348	ExpressionStatement	"memcpy ( out_data , data_p , 128 )"	313:20:9780:9809	3902997	1	True				
ANR	3903349	CallExpression	"memcpy ( out_data , data_p , 128 )"		3902997	0					
ANR	3903350	Callee	memcpy		3902997	0					
ANR	3903351	Identifier	memcpy		3902997	0					
ANR	3903352	ArgumentList	out_data		3902997	1					
ANR	3903353	Argument	out_data		3902997	0					
ANR	3903354	Identifier	out_data		3902997	0					
ANR	3903355	Argument	data_p		3902997	1					
ANR	3903356	Identifier	data_p		3902997	0					
ANR	3903357	Argument	128		3902997	2					
ANR	3903358	PrimaryExpression	128		3902997	0					
ANR	3903359	ExpressionStatement	data_p += 128	314:20:9842:9855	3902997	2	True				
ANR	3903360	AssignmentExpression	data_p += 128		3902997	0		+=			
ANR	3903361	Identifier	data_p		3902997	0					
ANR	3903362	PrimaryExpression	128		3902997	1					
ANR	3903363	ExpressionStatement	out_data += 128	315:20:9877:9892	3902997	3	True				
ANR	3903364	AssignmentExpression	out_data += 128		3902997	0		+=			
ANR	3903365	Identifier	out_data		3902997	0					
ANR	3903366	PrimaryExpression	128		3902997	1					
ANR	3903367	ExpressionStatement	count -= 128	316:20:9914:9926	3902997	4	True				
ANR	3903368	AssignmentExpression	count -= 128		3902997	0		-=			
ANR	3903369	Identifier	count		3902997	0					
ANR	3903370	PrimaryExpression	128		3902997	1					
ANR	3903371	ExpressionStatement	* out_data ++ = ( char ) ( count - 1 )	318:18:9966:9998	3902997	2	True				
ANR	3903372	AssignmentExpression	* out_data ++ = ( char ) ( count - 1 )		3902997	0		=			
ANR	3903373	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903374	UnaryOperator	*		3902997	0					
ANR	3903375	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903376	Identifier	out_data		3902997	0					
ANR	3903377	IncDec	++		3902997	1					
ANR	3903378	CastExpression	( char ) ( count - 1 )		3902997	1					
ANR	3903379	CastTarget	char		3902997	0					
ANR	3903380	AdditiveExpression	count - 1		3902997	1		-			
ANR	3903381	Identifier	count		3902997	0					
ANR	3903382	PrimaryExpression	1		3902997	1					
ANR	3903383	ExpressionStatement	"memcpy ( out_data , data_p , count )"	319:18:10030:10061	3902997	3	True				
ANR	3903384	CallExpression	"memcpy ( out_data , data_p , count )"		3902997	0					
ANR	3903385	Callee	memcpy		3902997	0					
ANR	3903386	Identifier	memcpy		3902997	0					
ANR	3903387	ArgumentList	out_data		3902997	1					
ANR	3903388	Argument	out_data		3902997	0					
ANR	3903389	Identifier	out_data		3902997	0					
ANR	3903390	Argument	data_p		3902997	1					
ANR	3903391	Identifier	data_p		3902997	0					
ANR	3903392	Argument	count		3902997	2					
ANR	3903393	Identifier	count		3902997	0					
ANR	3903394	ExpressionStatement	out_data += count	320:18:10092:10109	3902997	4	True				
ANR	3903395	AssignmentExpression	out_data += count		3902997	0		+=			
ANR	3903396	Identifier	out_data		3902997	0					
ANR	3903397	Identifier	count		3902997	1					
ANR	3903398	ExpressionStatement	* out_data ++ = '\\201'	322:16:10145:10165	3902997	1	True				
ANR	3903399	AssignmentExpression	* out_data ++ = '\\201'		3902997	0		=			
ANR	3903400	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903401	UnaryOperator	*		3902997	0					
ANR	3903402	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903403	Identifier	out_data		3902997	0					
ANR	3903404	IncDec	++		3902997	1					
ANR	3903405	PrimaryExpression	'\\201'		3902997	1					
ANR	3903406	ExpressionStatement	* out_data ++ = * p	323:16:10206:10222	3902997	2	True				
ANR	3903407	AssignmentExpression	* out_data ++ = * p		3902997	0		=			
ANR	3903408	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903409	UnaryOperator	*		3902997	0					
ANR	3903410	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903411	Identifier	out_data		3902997	0					
ANR	3903412	IncDec	++		3902997	1					
ANR	3903413	UnaryOperationExpression	* p		3902997	1					
ANR	3903414	UnaryOperator	*		3902997	0					
ANR	3903415	Identifier	p		3902997	1					
ANR	3903416	ExpressionStatement	p += 128	324:16:10240:10248	3902997	3	True				
ANR	3903417	AssignmentExpression	p += 128		3902997	0		+=			
ANR	3903418	Identifier	p		3902997	0					
ANR	3903419	PrimaryExpression	128		3902997	1					
ANR	3903420	ExpressionStatement	data_p = p	325:16:10266:10276	3902997	4	True				
ANR	3903421	AssignmentExpression	data_p = p		3902997	0		=			
ANR	3903422	Identifier	data_p		3902997	0					
ANR	3903423	Identifier	p		3902997	1					
ANR	3903424	IfStatement	if ( ( q - p ) > 2 )		3902997	2					
ANR	3903425	Condition	( q - p ) > 2	329:16:10325:10335	3902997	0	True				
ANR	3903426	RelationalExpression	( q - p ) > 2		3902997	0		>			
ANR	3903427	AdditiveExpression	q - p		3902997	0		-			
ANR	3903428	Identifier	q		3902997	0					
ANR	3903429	Identifier	p		3902997	1					
ANR	3903430	PrimaryExpression	2		3902997	1					
ANR	3903431	CompoundStatement		84:30:2392:2392	3902997	1					
ANR	3903432	IfStatement	if ( p > data_p )		3902997	0					
ANR	3903433	Condition	p > data_p	330:18:10386:10395	3902997	0	True				
ANR	3903434	RelationalExpression	p > data_p		3902997	0		>			
ANR	3903435	Identifier	p		3902997	0					
ANR	3903436	Identifier	data_p		3902997	1					
ANR	3903437	CompoundStatement		85:31:2452:2452	3902997	1					
ANR	3903438	ExpressionStatement	count = p - data_p	331:16:10417:10435	3902997	0	True				
ANR	3903439	AssignmentExpression	count = p - data_p		3902997	0		=			
ANR	3903440	Identifier	count		3902997	0					
ANR	3903441	AdditiveExpression	p - data_p		3902997	1		-			
ANR	3903442	Identifier	p		3902997	0					
ANR	3903443	Identifier	data_p		3902997	1					
ANR	3903444	WhileStatement	while ( count > 128 )		3902997	1					
ANR	3903445	Condition	count > 128	332:23:10460:10470	3902997	0	True				
ANR	3903446	RelationalExpression	count > 128		3902997	0		>			
ANR	3903447	Identifier	count		3902997	0					
ANR	3903448	PrimaryExpression	128		3902997	1					
ANR	3903449	CompoundStatement		87:37:2527:2527	3902997	1					
ANR	3903450	ExpressionStatement	* out_data ++ = '\\177'	333:18:10494:10514	3902997	0	True				
ANR	3903451	AssignmentExpression	* out_data ++ = '\\177'		3902997	0		=			
ANR	3903452	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903453	UnaryOperator	*		3902997	0					
ANR	3903454	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903455	Identifier	out_data		3902997	0					
ANR	3903456	IncDec	++		3902997	1					
ANR	3903457	PrimaryExpression	'\\177'		3902997	1					
ANR	3903458	ExpressionStatement	"memcpy ( out_data , data_p , 128 )"	334:18:10534:10563	3902997	1	True				
ANR	3903459	CallExpression	"memcpy ( out_data , data_p , 128 )"		3902997	0					
ANR	3903460	Callee	memcpy		3902997	0					
ANR	3903461	Identifier	memcpy		3902997	0					
ANR	3903462	ArgumentList	out_data		3902997	1					
ANR	3903463	Argument	out_data		3902997	0					
ANR	3903464	Identifier	out_data		3902997	0					
ANR	3903465	Argument	data_p		3902997	1					
ANR	3903466	Identifier	data_p		3902997	0					
ANR	3903467	Argument	128		3902997	2					
ANR	3903468	PrimaryExpression	128		3902997	0					
ANR	3903469	ExpressionStatement	data_p += 128	335:18:10594:10607	3902997	2	True				
ANR	3903470	AssignmentExpression	data_p += 128		3902997	0		+=			
ANR	3903471	Identifier	data_p		3902997	0					
ANR	3903472	PrimaryExpression	128		3902997	1					
ANR	3903473	ExpressionStatement	out_data += 128	336:18:10627:10642	3902997	3	True				
ANR	3903474	AssignmentExpression	out_data += 128		3902997	0		+=			
ANR	3903475	Identifier	out_data		3902997	0					
ANR	3903476	PrimaryExpression	128		3902997	1					
ANR	3903477	ExpressionStatement	count -= 128	337:18:10662:10674	3902997	4	True				
ANR	3903478	AssignmentExpression	count -= 128		3902997	0		-=			
ANR	3903479	Identifier	count		3902997	0					
ANR	3903480	PrimaryExpression	128		3902997	1					
ANR	3903481	ExpressionStatement	* out_data ++ = ( char ) ( count - 1 )	339:16:10710:10742	3902997	2	True				
ANR	3903482	AssignmentExpression	* out_data ++ = ( char ) ( count - 1 )		3902997	0		=			
ANR	3903483	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903484	UnaryOperator	*		3902997	0					
ANR	3903485	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903486	Identifier	out_data		3902997	0					
ANR	3903487	IncDec	++		3902997	1					
ANR	3903488	CastExpression	( char ) ( count - 1 )		3902997	1					
ANR	3903489	CastTarget	char		3902997	0					
ANR	3903490	AdditiveExpression	count - 1		3902997	1		-			
ANR	3903491	Identifier	count		3902997	0					
ANR	3903492	PrimaryExpression	1		3902997	1					
ANR	3903493	ExpressionStatement	"memcpy ( out_data , data_p , count )"	340:16:10777:10808	3902997	3	True				
ANR	3903494	CallExpression	"memcpy ( out_data , data_p , count )"		3902997	0					
ANR	3903495	Callee	memcpy		3902997	0					
ANR	3903496	Identifier	memcpy		3902997	0					
ANR	3903497	ArgumentList	out_data		3902997	1					
ANR	3903498	Argument	out_data		3902997	0					
ANR	3903499	Identifier	out_data		3902997	0					
ANR	3903500	Argument	data_p		3902997	1					
ANR	3903501	Identifier	data_p		3902997	0					
ANR	3903502	Argument	count		3902997	2					
ANR	3903503	Identifier	count		3902997	0					
ANR	3903504	ExpressionStatement	out_data += count	341:16:10837:10854	3902997	4	True				
ANR	3903505	AssignmentExpression	out_data += count		3902997	0		+=			
ANR	3903506	Identifier	out_data		3902997	0					
ANR	3903507	Identifier	count		3902997	1					
ANR	3903508	ExpressionStatement	count = q - p	343:14:10886:10899	3902997	1	True				
ANR	3903509	AssignmentExpression	count = q - p		3902997	0		=			
ANR	3903510	Identifier	count		3902997	0					
ANR	3903511	AdditiveExpression	q - p		3902997	1		-			
ANR	3903512	Identifier	q		3902997	0					
ANR	3903513	Identifier	p		3902997	1					
ANR	3903514	ExpressionStatement	* out_data ++ = ( char ) ( 256 - count + 1 )	344:14:10915:10953	3902997	2	True				
ANR	3903515	AssignmentExpression	* out_data ++ = ( char ) ( 256 - count + 1 )		3902997	0		=			
ANR	3903516	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903517	UnaryOperator	*		3902997	0					
ANR	3903518	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903519	Identifier	out_data		3902997	0					
ANR	3903520	IncDec	++		3902997	1					
ANR	3903521	CastExpression	( char ) ( 256 - count + 1 )		3902997	1					
ANR	3903522	CastTarget	char		3902997	0					
ANR	3903523	AdditiveExpression	256 - count + 1		3902997	1		-			
ANR	3903524	PrimaryExpression	256		3902997	0					
ANR	3903525	AdditiveExpression	count + 1		3902997	1		+			
ANR	3903526	Identifier	count		3902997	0					
ANR	3903527	PrimaryExpression	1		3902997	1					
ANR	3903528	ExpressionStatement	* out_data ++ = * p	345:14:10969:10985	3902997	3	True				
ANR	3903529	AssignmentExpression	* out_data ++ = * p		3902997	0		=			
ANR	3903530	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903531	UnaryOperator	*		3902997	0					
ANR	3903532	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903533	Identifier	out_data		3902997	0					
ANR	3903534	IncDec	++		3902997	1					
ANR	3903535	UnaryOperationExpression	* p		3902997	1					
ANR	3903536	UnaryOperator	*		3902997	0					
ANR	3903537	Identifier	p		3902997	1					
ANR	3903538	ExpressionStatement	p += count	346:14:11001:11011	3902997	4	True				
ANR	3903539	AssignmentExpression	p += count		3902997	0		+=			
ANR	3903540	Identifier	p		3902997	0					
ANR	3903541	Identifier	count		3902997	1					
ANR	3903542	ExpressionStatement	data_p = p	347:14:11027:11037	3902997	5	True				
ANR	3903543	AssignmentExpression	data_p = p		3902997	0		=			
ANR	3903544	Identifier	data_p		3902997	0					
ANR	3903545	Identifier	p		3902997	1					
ANR	3903546	ElseStatement	else		3902997	0					
ANR	3903547	ExpressionStatement	p = q	349:14:11109:11114	3902997	0	True				
ANR	3903548	AssignmentExpression	p = q		3902997	0		=			
ANR	3903549	Identifier	p		3902997	0					
ANR	3903550	Identifier	q		3902997	1					
ANR	3903551	IfStatement	if ( q < end_data )		3902997	3					
ANR	3903552	Condition	q < end_data	350:16:11132:11143	3902997	0	True				
ANR	3903553	RelationalExpression	q < end_data		3902997	0		<			
ANR	3903554	Identifier	q		3902997	0					
ANR	3903555	Identifier	end_data		3902997	1					
ANR	3903556	ExpressionStatement	q ++	351:14:11161:11164	3902997	1	True				
ANR	3903557	PostIncDecOperationExpression	q ++		3902997	0					
ANR	3903558	Identifier	q		3902997	0					
ANR	3903559	IncDec	++		3902997	1					
ANR	3903560	IfStatement	if ( data_p < end_data )		3902997	2					
ANR	3903561	Condition	data_p < end_data	358:12:11263:11279	3902997	0	True				
ANR	3903562	RelationalExpression	data_p < end_data		3902997	0		<			
ANR	3903563	Identifier	data_p		3902997	0					
ANR	3903564	Identifier	end_data		3902997	1					
ANR	3903565	CompoundStatement		113:32:3336:3336	3902997	1					
ANR	3903566	ExpressionStatement	count = end_data - data_p	360:10:11296:11321	3902997	0	True				
ANR	3903567	AssignmentExpression	count = end_data - data_p		3902997	0		=			
ANR	3903568	Identifier	count		3902997	0					
ANR	3903569	AdditiveExpression	end_data - data_p		3902997	1		-			
ANR	3903570	Identifier	end_data		3902997	0					
ANR	3903571	Identifier	data_p		3902997	1					
ANR	3903572	WhileStatement	while ( count > 128 )		3902997	1					
ANR	3903573	Condition	count > 128	368:17:11557:11567	3902997	0	True				
ANR	3903574	RelationalExpression	count > 128		3902997	0		>			
ANR	3903575	Identifier	count		3902997	0					
ANR	3903576	PrimaryExpression	128		3902997	1					
ANR	3903577	CompoundStatement		123:31:3624:3624	3902997	1					
ANR	3903578	ExpressionStatement	* out_data ++ = '\\177'	369:12:11585:11605	3902997	0	True				
ANR	3903579	AssignmentExpression	* out_data ++ = '\\177'		3902997	0		=			
ANR	3903580	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903581	UnaryOperator	*		3902997	0					
ANR	3903582	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903583	Identifier	out_data		3902997	0					
ANR	3903584	IncDec	++		3902997	1					
ANR	3903585	PrimaryExpression	'\\177'		3902997	1					
ANR	3903586	ExpressionStatement	"memcpy ( out_data , data_p , 128 )"	370:12:11619:11648	3902997	1	True				
ANR	3903587	CallExpression	"memcpy ( out_data , data_p , 128 )"		3902997	0					
ANR	3903588	Callee	memcpy		3902997	0					
ANR	3903589	Identifier	memcpy		3902997	0					
ANR	3903590	ArgumentList	out_data		3902997	1					
ANR	3903591	Argument	out_data		3902997	0					
ANR	3903592	Identifier	out_data		3902997	0					
ANR	3903593	Argument	data_p		3902997	1					
ANR	3903594	Identifier	data_p		3902997	0					
ANR	3903595	Argument	128		3902997	2					
ANR	3903596	PrimaryExpression	128		3902997	0					
ANR	3903597	ExpressionStatement	data_p += 128	371:12:11673:11686	3902997	2	True				
ANR	3903598	AssignmentExpression	data_p += 128		3902997	0		+=			
ANR	3903599	Identifier	data_p		3902997	0					
ANR	3903600	PrimaryExpression	128		3902997	1					
ANR	3903601	ExpressionStatement	out_data += 128	372:12:11700:11715	3902997	3	True				
ANR	3903602	AssignmentExpression	out_data += 128		3902997	0		+=			
ANR	3903603	Identifier	out_data		3902997	0					
ANR	3903604	PrimaryExpression	128		3902997	1					
ANR	3903605	ExpressionStatement	count -= 128	373:12:11729:11741	3902997	4	True				
ANR	3903606	AssignmentExpression	count -= 128		3902997	0		-=			
ANR	3903607	Identifier	count		3902997	0					
ANR	3903608	PrimaryExpression	128		3902997	1					
ANR	3903609	ExpressionStatement	* out_data ++ = ( char ) ( count - 1 )	376:10:11766:11798	3902997	2	True				
ANR	3903610	AssignmentExpression	* out_data ++ = ( char ) ( count - 1 )		3902997	0		=			
ANR	3903611	UnaryOperationExpression	* out_data ++		3902997	0					
ANR	3903612	UnaryOperator	*		3902997	0					
ANR	3903613	PostIncDecOperationExpression	out_data ++		3902997	1					
ANR	3903614	Identifier	out_data		3902997	0					
ANR	3903615	IncDec	++		3902997	1					
ANR	3903616	CastExpression	( char ) ( count - 1 )		3902997	1					
ANR	3903617	CastTarget	char		3902997	0					
ANR	3903618	AdditiveExpression	count - 1		3902997	1		-			
ANR	3903619	Identifier	count		3902997	0					
ANR	3903620	PrimaryExpression	1		3902997	1					
ANR	3903621	ExpressionStatement	"memcpy ( out_data , data_p , count )"	377:10:11827:11858	3902997	3	True				
ANR	3903622	CallExpression	"memcpy ( out_data , data_p , count )"		3902997	0					
ANR	3903623	Callee	memcpy		3902997	0					
ANR	3903624	Identifier	memcpy		3902997	0					
ANR	3903625	ArgumentList	out_data		3902997	1					
ANR	3903626	Argument	out_data		3902997	0					
ANR	3903627	Identifier	out_data		3902997	0					
ANR	3903628	Argument	data_p		3902997	1					
ANR	3903629	Identifier	data_p		3902997	0					
ANR	3903630	Argument	count		3902997	2					
ANR	3903631	Identifier	count		3902997	0					
ANR	3903632	ExpressionStatement	out_data += count	378:10:11881:11898	3902997	4	True				
ANR	3903633	AssignmentExpression	out_data += count		3902997	0		+=			
ANR	3903634	Identifier	out_data		3902997	0					
ANR	3903635	Identifier	count		3902997	1					
ANR	3903636	ExpressionStatement	nbyte = out_data - out_start	381:8:11919:11947	3902997	3	True				
ANR	3903637	AssignmentExpression	nbyte = out_data - out_start		3902997	0		=			
ANR	3903638	Identifier	nbyte		3902997	0					
ANR	3903639	AdditiveExpression	out_data - out_start		3902997	1		-			
ANR	3903640	Identifier	out_data		3902997	0					
ANR	3903641	Identifier	out_start		3902997	1					
ANR	3903642	ExpressionStatement	"fprintf ( prn_stream , ""%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , nbyte & 0xff , ( nbyte & 0xff00 ) / 0x100 , 0x57 )"	383:8:11958:12073	3902997	4	True				
ANR	3903643	CallExpression	"fprintf ( prn_stream , ""%c%c%c%c%c%c"" , 0x1b , 0x2a , 0x62 , nbyte & 0xff , ( nbyte & 0xff00 ) / 0x100 , 0x57 )"		3902997	0					
ANR	3903644	Callee	fprintf		3902997	0					
ANR	3903645	Identifier	fprintf		3902997	0					
ANR	3903646	ArgumentList	prn_stream		3902997	1					
ANR	3903647	Argument	prn_stream		3902997	0					
ANR	3903648	Identifier	prn_stream		3902997	0					
ANR	3903649	Argument	"""%c%c%c%c%c%c"""		3902997	1					
ANR	3903650	PrimaryExpression	"""%c%c%c%c%c%c"""		3902997	0					
ANR	3903651	Argument	0x1b		3902997	2					
ANR	3903652	PrimaryExpression	0x1b		3902997	0					
ANR	3903653	Argument	0x2a		3902997	3					
ANR	3903654	PrimaryExpression	0x2a		3902997	0					
ANR	3903655	Argument	0x62		3902997	4					
ANR	3903656	PrimaryExpression	0x62		3902997	0					
ANR	3903657	Argument	nbyte & 0xff		3902997	5					
ANR	3903658	BitAndExpression	nbyte & 0xff		3902997	0		&			
ANR	3903659	Identifier	nbyte		3902997	0					
ANR	3903660	PrimaryExpression	0xff		3902997	1					
ANR	3903661	Argument	( nbyte & 0xff00 ) / 0x100		3902997	6					
ANR	3903662	MultiplicativeExpression	( nbyte & 0xff00 ) / 0x100		3902997	0		/			
ANR	3903663	BitAndExpression	nbyte & 0xff00		3902997	0		&			
ANR	3903664	Identifier	nbyte		3902997	0					
ANR	3903665	PrimaryExpression	0xff00		3902997	1					
ANR	3903666	PrimaryExpression	0x100		3902997	1					
ANR	3903667	Argument	0x57		3902997	7					
ANR	3903668	PrimaryExpression	0x57		3902997	0					
ANR	3903669	ExpressionStatement	"fwrite ( out_start , sizeof ( char ) , nbyte , prn_stream )"	385:8:12083:12133	3902997	5	True				
ANR	3903670	CallExpression	"fwrite ( out_start , sizeof ( char ) , nbyte , prn_stream )"		3902997	0					
ANR	3903671	Callee	fwrite		3902997	0					
ANR	3903672	Identifier	fwrite		3902997	0					
ANR	3903673	ArgumentList	out_start		3902997	1					
ANR	3903674	Argument	out_start		3902997	0					
ANR	3903675	Identifier	out_start		3902997	0					
ANR	3903676	Argument	sizeof ( char )		3902997	1					
ANR	3903677	SizeofExpression	sizeof ( char )		3902997	0					
ANR	3903678	Sizeof	sizeof		3902997	0					
ANR	3903679	SizeofOperand	char		3902997	1					
ANR	3903680	Argument	nbyte		3902997	2					
ANR	3903681	Identifier	nbyte		3902997	0					
ANR	3903682	Argument	prn_stream		3902997	3					
ANR	3903683	Identifier	prn_stream		3902997	0					
ANR	3903684	ExpressionStatement	"fwrite ( end_md , sizeof ( char ) , sizeof ( end_md ) , prn_stream )"	390:2:12169:12225	3902997	9	True				
ANR	3903685	CallExpression	"fwrite ( end_md , sizeof ( char ) , sizeof ( end_md ) , prn_stream )"		3902997	0					
ANR	3903686	Callee	fwrite		3902997	0					
ANR	3903687	Identifier	fwrite		3902997	0					
ANR	3903688	ArgumentList	end_md		3902997	1					
ANR	3903689	Argument	end_md		3902997	0					
ANR	3903690	Identifier	end_md		3902997	0					
ANR	3903691	Argument	sizeof ( char )		3902997	1					
ANR	3903692	SizeofExpression	sizeof ( char )		3902997	0					
ANR	3903693	Sizeof	sizeof		3902997	0					
ANR	3903694	SizeofOperand	char		3902997	1					
ANR	3903695	Argument	sizeof ( end_md )		3902997	2					
ANR	3903696	SizeofExpression	sizeof ( end_md )		3902997	0					
ANR	3903697	Sizeof	sizeof		3902997	0					
ANR	3903698	SizeofOperand	end_md		3902997	1					
ANR	3903699	Argument	prn_stream		3902997	3					
ANR	3903700	Identifier	prn_stream		3902997	0					
ANR	3903701	ExpressionStatement	fflush ( prn_stream )	391:2:12229:12247	3902997	10	True				
ANR	3903702	CallExpression	fflush ( prn_stream )		3902997	0					
ANR	3903703	Callee	fflush		3902997	0					
ANR	3903704	Identifier	fflush		3902997	0					
ANR	3903705	ArgumentList	prn_stream		3902997	1					
ANR	3903706	Argument	prn_stream		3902997	0					
ANR	3903707	Identifier	prn_stream		3902997	0					
ANR	3903708	ReturnStatement	return 0 ;	393:2:12252:12260	3902997	11	True				
ANR	3903709	PrimaryExpression	0		3902997	0					
ANR	3903710	ReturnType	static int		3902997	1					
ANR	3903711	Identifier	md1xm_print_page		3902997	2					
ANR	3903712	ParameterList	"gx_device_printer * pdev , FILE * prn_stream"		3902997	3					
ANR	3903713	Parameter	gx_device_printer * pdev	245:17:7903:7925	3902997	0	True				
ANR	3903714	ParameterType	gx_device_printer *		3902997	0					
ANR	3903715	Identifier	pdev		3902997	1					
ANR	3903716	Parameter	FILE * prn_stream	245:42:7928:7943	3902997	1	True				
ANR	3903717	ParameterType	FILE *		3902997	0					
ANR	3903718	Identifier	prn_stream		3902997	1					
ANR	3903719	CFGEntryNode	ENTRY		3902997		True				
ANR	3903720	CFGExitNode	EXIT		3902997		True				
ANR	3903721	Symbol	* ( p - 1 )		3902997						
ANR	3903722	Symbol	data		3902997						
ANR	3903723	Symbol	pdev -> memory -> non_gc_memory		3902997						
ANR	3903724	Symbol	gdev_mem_bytes_per_scan_line		3902997						
ANR	3903725	Symbol	* * pdev		3902997						
ANR	3903726	Symbol	nbyte		3902997						
ANR	3903727	Symbol	out_data		3902997						
ANR	3903728	Symbol	pdev -> height		3902997						
ANR	3903729	Symbol	* pdev -> memory		3902997						
ANR	3903730	Symbol	pdev		3902997						
ANR	3903731	Symbol	prn_stream		3902997						
ANR	3903732	Symbol	pdev -> memory		3902997						
ANR	3903733	Symbol	skipping		3902997						
ANR	3903734	Symbol	end_data		3902997						
ANR	3903735	Symbol	line_size		3902997						
ANR	3903736	Symbol	lnum		3902997						
ANR	3903737	Symbol	count		3902997						
ANR	3903738	Symbol	* end_data		3902997						
ANR	3903739	Symbol	init_md13		3902997						
ANR	3903740	Symbol	data_p		3902997						
ANR	3903741	Symbol	* out_data ++		3902997						
ANR	3903742	Symbol	end_md		3902997						
ANR	3903743	Symbol	p		3902997						
ANR	3903744	Symbol	q		3902997						
ANR	3903745	Symbol	gs_malloc		3902997						
ANR	3903746	Symbol	* pdev		3902997						
ANR	3903747	Symbol	* p		3902997						
ANR	3903748	Symbol	* q		3902997						
ANR	3903749	Symbol	out_start		3902997						
