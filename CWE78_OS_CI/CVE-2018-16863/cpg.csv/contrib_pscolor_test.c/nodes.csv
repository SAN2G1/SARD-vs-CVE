command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1966726	File	data/converged/CVE-2018-16863_ghostpdl/contrib_pscolor_test.c								
ANR	1966727	DeclStmt									
ANR	1966728	Decl							unsigned char	unsigned char *	myimage
ANR	1966729	DeclStmt									
ANR	1966730	Decl							int	int	breite
ANR	1966731	Decl							int	int	hoehe
ANR	1966732	Decl							int	int	seite
ANR	1966733	Decl							int	int	myraster
ANR	1966734	DeclStmt									
ANR	1966735	Decl							FILE	FILE *	color_fd
ANR	1966736	Decl							FILE	FILE *	black_fd
ANR	1966737	Decl							FILE	FILE *	temp_fd
ANR	1966738	Decl							FILE	FILE *	choose
ANR	1966739	DeclStmt									
ANR	1966740	Decl							FILE	FILE *	read_fd
ANR	1966741	DeclStmt									
ANR	1966742	Decl							int	"int ( char * buf , int * mylen )"	yylex
ANR	1966743	Function	gsdll_stdin	40:0:866:2213							
ANR	1966744	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		1966743	0					
ANR	1966745	CompoundStatement		42:0:935:2213	1966743	0					
ANR	1966746	IdentifierDeclStatement	int c ;	43:4:941:946	1966743	0	True				
ANR	1966747	IdentifierDecl	c		1966743	0					
ANR	1966748	IdentifierDeclType	int		1966743	0					
ANR	1966749	Identifier	c		1966743	1					
ANR	1966750	IdentifierDeclStatement	int count = 0 ;	44:4:952:965	1966743	1	True				
ANR	1966751	IdentifierDecl	count = 0		1966743	0					
ANR	1966752	IdentifierDeclType	int		1966743	0					
ANR	1966753	Identifier	count		1966743	1					
ANR	1966754	AssignmentExpression	count = 0		1966743	2		=			
ANR	1966755	Identifier	count		1966743	0					
ANR	1966756	PrimaryExpression	0		1966743	1					
ANR	1966757	IdentifierDeclStatement	char * init = buf ;	45:4:971:985	1966743	2	True				
ANR	1966758	IdentifierDecl	* init = buf		1966743	0					
ANR	1966759	IdentifierDeclType	char *		1966743	0					
ANR	1966760	Identifier	init		1966743	1					
ANR	1966761	AssignmentExpression	* init = buf		1966743	2		=			
ANR	1966762	Identifier	buf		1966743	0					
ANR	1966763	Identifier	buf		1966743	1					
ANR	1966764	IdentifierDeclStatement	int eof ;	46:4:991:998	1966743	3	True				
ANR	1966765	IdentifierDecl	eof		1966743	0					
ANR	1966766	IdentifierDeclType	int		1966743	0					
ANR	1966767	Identifier	eof		1966743	1					
ANR	1966768	IdentifierDeclStatement	int hlen = len ;	47:4:1004:1016	1966743	4	True				
ANR	1966769	IdentifierDecl	hlen = len		1966743	0					
ANR	1966770	IdentifierDeclType	int		1966743	0					
ANR	1966771	Identifier	hlen		1966743	1					
ANR	1966772	AssignmentExpression	hlen = len		1966743	2		=			
ANR	1966773	Identifier	len		1966743	0					
ANR	1966774	Identifier	len		1966743	1					
ANR	1966775	ExpressionStatement	"eof = yylex ( buf , & hlen )"	48:4:1022:1042	1966743	5	True				
ANR	1966776	AssignmentExpression	"eof = yylex ( buf , & hlen )"		1966743	0		=			
ANR	1966777	Identifier	eof		1966743	0					
ANR	1966778	CallExpression	"yylex ( buf , & hlen )"		1966743	1					
ANR	1966779	Callee	yylex		1966743	0					
ANR	1966780	Identifier	yylex		1966743	0					
ANR	1966781	ArgumentList	buf		1966743	1					
ANR	1966782	Argument	buf		1966743	0					
ANR	1966783	Identifier	buf		1966743	0					
ANR	1966784	Argument	& hlen		1966743	1					
ANR	1966785	UnaryOperationExpression	& hlen		1966743	0					
ANR	1966786	UnaryOperator	&		1966743	0					
ANR	1966787	Identifier	hlen		1966743	1					
ANR	1966788	IfStatement	if ( eof == 1001 )		1966743	6					
ANR	1966789	Condition	eof == 1001	50:7:1090:1098	1966743	0	True				
ANR	1966790	EqualityExpression	eof == 1001		1966743	0		==			
ANR	1966791	Identifier	eof		1966743	0					
ANR	1966792	PrimaryExpression	1001		1966743	1					
ANR	1966793	CompoundStatement		9:17:164:164	1966743	1					
ANR	1966794	ExpressionStatement	"fprintf ( color_fd , ""%s"" , buf )"	51:4:1106:1132	1966743	0	True				
ANR	1966795	CallExpression	"fprintf ( color_fd , ""%s"" , buf )"		1966743	0					
ANR	1966796	Callee	fprintf		1966743	0					
ANR	1966797	Identifier	fprintf		1966743	0					
ANR	1966798	ArgumentList	color_fd		1966743	1					
ANR	1966799	Argument	color_fd		1966743	0					
ANR	1966800	Identifier	color_fd		1966743	0					
ANR	1966801	Argument	"""%s"""		1966743	1					
ANR	1966802	PrimaryExpression	"""%s"""		1966743	0					
ANR	1966803	Argument	buf		1966743	2					
ANR	1966804	Identifier	buf		1966743	0					
ANR	1966805	ExpressionStatement	fflush ( color_fd )	52:4:1138:1154	1966743	1	True				
ANR	1966806	CallExpression	fflush ( color_fd )		1966743	0					
ANR	1966807	Callee	fflush		1966743	0					
ANR	1966808	Identifier	fflush		1966743	0					
ANR	1966809	ArgumentList	color_fd		1966743	1					
ANR	1966810	Argument	color_fd		1966743	0					
ANR	1966811	Identifier	color_fd		1966743	0					
ANR	1966812	ExpressionStatement	"fprintf ( black_fd , ""%s"" , buf )"	53:4:1160:1186	1966743	2	True				
ANR	1966813	CallExpression	"fprintf ( black_fd , ""%s"" , buf )"		1966743	0					
ANR	1966814	Callee	fprintf		1966743	0					
ANR	1966815	Identifier	fprintf		1966743	0					
ANR	1966816	ArgumentList	black_fd		1966743	1					
ANR	1966817	Argument	black_fd		1966743	0					
ANR	1966818	Identifier	black_fd		1966743	0					
ANR	1966819	Argument	"""%s"""		1966743	1					
ANR	1966820	PrimaryExpression	"""%s"""		1966743	0					
ANR	1966821	Argument	buf		1966743	2					
ANR	1966822	Identifier	buf		1966743	0					
ANR	1966823	ExpressionStatement	fflush ( black_fd )	54:4:1192:1208	1966743	3	True				
ANR	1966824	CallExpression	fflush ( black_fd )		1966743	0					
ANR	1966825	Callee	fflush		1966743	0					
ANR	1966826	Identifier	fflush		1966743	0					
ANR	1966827	ArgumentList	black_fd		1966743	1					
ANR	1966828	Argument	black_fd		1966743	0					
ANR	1966829	Identifier	black_fd		1966743	0					
ANR	1966830	ReturnStatement	return ( strlen ( buf ) ) ;	55:4:1214:1234	1966743	4	True				
ANR	1966831	CallExpression	strlen ( buf )		1966743	0					
ANR	1966832	Callee	strlen		1966743	0					
ANR	1966833	Identifier	strlen		1966743	0					
ANR	1966834	ArgumentList	buf		1966743	1					
ANR	1966835	Argument	buf		1966743	0					
ANR	1966836	Identifier	buf		1966743	0					
ANR	1966837	ElseStatement	else		1966743	0					
ANR	1966838	IfStatement	if ( eof == 1000 )		1966743	0					
ANR	1966839	Condition	eof == 1000	56:14:1250:1258	1966743	0	True				
ANR	1966840	EqualityExpression	eof == 1000		1966743	0		==			
ANR	1966841	Identifier	eof		1966743	0					
ANR	1966842	PrimaryExpression	1000		1966743	1					
ANR	1966843	CompoundStatement		15:24:324:324	1966743	1					
ANR	1966844	ExpressionStatement	"fprintf ( temp_fd , ""%s"" , buf )"	57:4:1266:1291	1966743	0	True				
ANR	1966845	CallExpression	"fprintf ( temp_fd , ""%s"" , buf )"		1966743	0					
ANR	1966846	Callee	fprintf		1966743	0					
ANR	1966847	Identifier	fprintf		1966743	0					
ANR	1966848	ArgumentList	temp_fd		1966743	1					
ANR	1966849	Argument	temp_fd		1966743	0					
ANR	1966850	Identifier	temp_fd		1966743	0					
ANR	1966851	Argument	"""%s"""		1966743	1					
ANR	1966852	PrimaryExpression	"""%s"""		1966743	0					
ANR	1966853	Argument	buf		1966743	2					
ANR	1966854	Identifier	buf		1966743	0					
ANR	1966855	ExpressionStatement	fflush ( temp_fd )	58:8:1301:1316	1966743	1	True				
ANR	1966856	CallExpression	fflush ( temp_fd )		1966743	0					
ANR	1966857	Callee	fflush		1966743	0					
ANR	1966858	Identifier	fflush		1966743	0					
ANR	1966859	ArgumentList	temp_fd		1966743	1					
ANR	1966860	Argument	temp_fd		1966743	0					
ANR	1966861	Identifier	temp_fd		1966743	0					
ANR	1966862	ExpressionStatement	fclose ( temp_fd )	59:8:1326:1341	1966743	2	True				
ANR	1966863	CallExpression	fclose ( temp_fd )		1966743	0					
ANR	1966864	Callee	fclose		1966743	0					
ANR	1966865	Identifier	fclose		1966743	0					
ANR	1966866	ArgumentList	temp_fd		1966743	1					
ANR	1966867	Argument	temp_fd		1966743	0					
ANR	1966868	Identifier	temp_fd		1966743	0					
ANR	1966869	ExpressionStatement	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"	60:8:1351:1383	1966743	3	True				
ANR	1966870	AssignmentExpression	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"		1966743	0		=			
ANR	1966871	Identifier	read_fd		1966743	0					
ANR	1966872	CallExpression	"gp_fopen ( ""temp.ps"" , ""rb"" )"		1966743	1					
ANR	1966873	Callee	gp_fopen		1966743	0					
ANR	1966874	Identifier	gp_fopen		1966743	0					
ANR	1966875	ArgumentList	"""temp.ps"""		1966743	1					
ANR	1966876	Argument	"""temp.ps"""		1966743	0					
ANR	1966877	PrimaryExpression	"""temp.ps"""		1966743	0					
ANR	1966878	Argument	"""rb"""		1966743	1					
ANR	1966879	PrimaryExpression	"""rb"""		1966743	0					
ANR	1966880	WhileStatement	while ( ( c = fgetc ( read_fd ) ) != EOF )		1966743	4					
ANR	1966881	Condition	( c = fgetc ( read_fd ) ) != EOF	62:15:1469:1493	1966743	0	True				
ANR	1966882	EqualityExpression	( c = fgetc ( read_fd ) ) != EOF		1966743	0		!=			
ANR	1966883	AssignmentExpression	c = fgetc ( read_fd )		1966743	0		=			
ANR	1966884	Identifier	c		1966743	0					
ANR	1966885	CallExpression	fgetc ( read_fd )		1966743	1					
ANR	1966886	Callee	fgetc		1966743	0					
ANR	1966887	Identifier	fgetc		1966743	0					
ANR	1966888	ArgumentList	read_fd		1966743	1					
ANR	1966889	Argument	read_fd		1966743	0					
ANR	1966890	Identifier	read_fd		1966743	0					
ANR	1966891	Identifier	EOF		1966743	1					
ANR	1966892	CompoundStatement		22:8:568:568	1966743	1					
ANR	1966893	ExpressionStatement	"fputc ( c , choose )"	64:16:1522:1537	1966743	0	True				
ANR	1966894	CallExpression	"fputc ( c , choose )"		1966743	0					
ANR	1966895	Callee	fputc		1966743	0					
ANR	1966896	Identifier	fputc		1966743	0					
ANR	1966897	ArgumentList	c		1966743	1					
ANR	1966898	Argument	c		1966743	0					
ANR	1966899	Identifier	c		1966743	0					
ANR	1966900	Argument	choose		1966743	1					
ANR	1966901	Identifier	choose		1966743	0					
ANR	1966902	ExpressionStatement	fflush ( choose )	67:8:1631:1645	1966743	5	True				
ANR	1966903	CallExpression	fflush ( choose )		1966743	0					
ANR	1966904	Callee	fflush		1966743	0					
ANR	1966905	Identifier	fflush		1966743	0					
ANR	1966906	ArgumentList	choose		1966743	1					
ANR	1966907	Argument	choose		1966743	0					
ANR	1966908	Identifier	choose		1966743	0					
ANR	1966909	ExpressionStatement	fclose ( read_fd )	68:8:1655:1670	1966743	6	True				
ANR	1966910	CallExpression	fclose ( read_fd )		1966743	0					
ANR	1966911	Callee	fclose		1966743	0					
ANR	1966912	Identifier	fclose		1966743	0					
ANR	1966913	ArgumentList	read_fd		1966743	1					
ANR	1966914	Argument	read_fd		1966743	0					
ANR	1966915	Identifier	read_fd		1966743	0					
ANR	1966916	ExpressionStatement	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"	69:8:1680:1712	1966743	7	True				
ANR	1966917	AssignmentExpression	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"		1966743	0		=			
ANR	1966918	Identifier	temp_fd		1966743	0					
ANR	1966919	CallExpression	"gp_fopen ( ""temp.ps"" , ""wb"" )"		1966743	1					
ANR	1966920	Callee	gp_fopen		1966743	0					
ANR	1966921	Identifier	gp_fopen		1966743	0					
ANR	1966922	ArgumentList	"""temp.ps"""		1966743	1					
ANR	1966923	Argument	"""temp.ps"""		1966743	0					
ANR	1966924	PrimaryExpression	"""temp.ps"""		1966743	0					
ANR	1966925	Argument	"""wb"""		1966743	1					
ANR	1966926	PrimaryExpression	"""wb"""		1966743	0					
ANR	1966927	ReturnStatement	return ( strlen ( buf ) ) ;	70:4:1718:1738	1966743	8	True				
ANR	1966928	CallExpression	strlen ( buf )		1966743	0					
ANR	1966929	Callee	strlen		1966743	0					
ANR	1966930	Identifier	strlen		1966743	0					
ANR	1966931	ArgumentList	buf		1966743	1					
ANR	1966932	Argument	buf		1966743	0					
ANR	1966933	Identifier	buf		1966743	0					
ANR	1966934	ElseStatement	else		1966743	0					
ANR	1966935	IfStatement	if ( eof != 0 )		1966743	0					
ANR	1966936	Condition	eof != 0	71:14:1754:1759	1966743	0	True				
ANR	1966937	EqualityExpression	eof != 0		1966743	0		!=			
ANR	1966938	Identifier	eof		1966743	0					
ANR	1966939	PrimaryExpression	0		1966743	1					
ANR	1966940	CompoundStatement		30:21:825:825	1966743	1					
ANR	1966941	ExpressionStatement	"fprintf ( temp_fd , ""%s"" , buf )"	73:4:1813:1838	1966743	0	True				
ANR	1966942	CallExpression	"fprintf ( temp_fd , ""%s"" , buf )"		1966743	0					
ANR	1966943	Callee	fprintf		1966743	0					
ANR	1966944	Identifier	fprintf		1966743	0					
ANR	1966945	ArgumentList	temp_fd		1966743	1					
ANR	1966946	Argument	temp_fd		1966743	0					
ANR	1966947	Identifier	temp_fd		1966743	0					
ANR	1966948	Argument	"""%s"""		1966743	1					
ANR	1966949	PrimaryExpression	"""%s"""		1966743	0					
ANR	1966950	Argument	buf		1966743	2					
ANR	1966951	Identifier	buf		1966743	0					
ANR	1966952	ExpressionStatement	fflush ( temp_fd )	74:4:1844:1859	1966743	1	True				
ANR	1966953	CallExpression	fflush ( temp_fd )		1966743	0					
ANR	1966954	Callee	fflush		1966743	0					
ANR	1966955	Identifier	fflush		1966743	0					
ANR	1966956	ArgumentList	temp_fd		1966743	1					
ANR	1966957	Argument	temp_fd		1966743	0					
ANR	1966958	Identifier	temp_fd		1966743	0					
ANR	1966959	ReturnStatement	return ( strlen ( buf ) ) ;	75:4:1865:1885	1966743	2	True				
ANR	1966960	CallExpression	strlen ( buf )		1966743	0					
ANR	1966961	Callee	strlen		1966743	0					
ANR	1966962	Identifier	strlen		1966743	0					
ANR	1966963	ArgumentList	buf		1966743	1					
ANR	1966964	Argument	buf		1966743	0					
ANR	1966965	Identifier	buf		1966743	0					
ANR	1966966	ElseStatement	else		1966743	0					
ANR	1966967	CompoundStatement		35:11:962:962	1966743	0					
ANR	1966968	ExpressionStatement	"fprintf ( stderr , ""Dateiende\\n"" )"	77:4:1904:1934	1966743	0	True				
ANR	1966969	CallExpression	"fprintf ( stderr , ""Dateiende\\n"" )"		1966743	0					
ANR	1966970	Callee	fprintf		1966743	0					
ANR	1966971	Identifier	fprintf		1966743	0					
ANR	1966972	ArgumentList	stderr		1966743	1					
ANR	1966973	Argument	stderr		1966743	0					
ANR	1966974	Identifier	stderr		1966743	0					
ANR	1966975	Argument	"""Dateiende\\n"""		1966743	1					
ANR	1966976	PrimaryExpression	"""Dateiende\\n"""		1966743	0					
ANR	1966977	ExpressionStatement	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"	78:8:1944:1976	1966743	1	True				
ANR	1966978	AssignmentExpression	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"		1966743	0		=			
ANR	1966979	Identifier	read_fd		1966743	0					
ANR	1966980	CallExpression	"gp_fopen ( ""temp.ps"" , ""rb"" )"		1966743	1					
ANR	1966981	Callee	gp_fopen		1966743	0					
ANR	1966982	Identifier	gp_fopen		1966743	0					
ANR	1966983	ArgumentList	"""temp.ps"""		1966743	1					
ANR	1966984	Argument	"""temp.ps"""		1966743	0					
ANR	1966985	PrimaryExpression	"""temp.ps"""		1966743	0					
ANR	1966986	Argument	"""rb"""		1966743	1					
ANR	1966987	PrimaryExpression	"""rb"""		1966743	0					
ANR	1966988	WhileStatement	while ( ( c = fgetc ( read_fd ) ) != EOF )		1966743	2					
ANR	1966989	Condition	( c = fgetc ( read_fd ) ) != EOF	79:15:1993:2017	1966743	0	True				
ANR	1966990	EqualityExpression	( c = fgetc ( read_fd ) ) != EOF		1966743	0		!=			
ANR	1966991	AssignmentExpression	c = fgetc ( read_fd )		1966743	0		=			
ANR	1966992	Identifier	c		1966743	0					
ANR	1966993	CallExpression	fgetc ( read_fd )		1966743	1					
ANR	1966994	Callee	fgetc		1966743	0					
ANR	1966995	Identifier	fgetc		1966743	0					
ANR	1966996	ArgumentList	read_fd		1966743	1					
ANR	1966997	Argument	read_fd		1966743	0					
ANR	1966998	Identifier	read_fd		1966743	0					
ANR	1966999	Identifier	EOF		1966743	1					
ANR	1967000	CompoundStatement		39:8:1092:1092	1966743	1					
ANR	1967001	ExpressionStatement	"fputc ( c , choose )"	81:16:2046:2061	1966743	0	True				
ANR	1967002	CallExpression	"fputc ( c , choose )"		1966743	0					
ANR	1967003	Callee	fputc		1966743	0					
ANR	1967004	Identifier	fputc		1966743	0					
ANR	1967005	ArgumentList	c		1966743	1					
ANR	1967006	Argument	c		1966743	0					
ANR	1967007	Identifier	c		1966743	0					
ANR	1967008	Argument	choose		1966743	1					
ANR	1967009	Identifier	choose		1966743	0					
ANR	1967010	ExpressionStatement	fflush ( choose )	83:8:2081:2095	1966743	3	True				
ANR	1967011	CallExpression	fflush ( choose )		1966743	0					
ANR	1967012	Callee	fflush		1966743	0					
ANR	1967013	Identifier	fflush		1966743	0					
ANR	1967014	ArgumentList	choose		1966743	1					
ANR	1967015	Argument	choose		1966743	0					
ANR	1967016	Identifier	choose		1966743	0					
ANR	1967017	ExpressionStatement	fclose ( read_fd )	84:8:2105:2120	1966743	4	True				
ANR	1967018	CallExpression	fclose ( read_fd )		1966743	0					
ANR	1967019	Callee	fclose		1966743	0					
ANR	1967020	Identifier	fclose		1966743	0					
ANR	1967021	ArgumentList	read_fd		1966743	1					
ANR	1967022	Argument	read_fd		1966743	0					
ANR	1967023	Identifier	read_fd		1966743	0					
ANR	1967024	ExpressionStatement	fclose ( temp_fd )	85:8:2130:2145	1966743	5	True				
ANR	1967025	CallExpression	fclose ( temp_fd )		1966743	0					
ANR	1967026	Callee	fclose		1966743	0					
ANR	1967027	Identifier	fclose		1966743	0					
ANR	1967028	ArgumentList	temp_fd		1966743	1					
ANR	1967029	Argument	temp_fd		1966743	0					
ANR	1967030	Identifier	temp_fd		1966743	0					
ANR	1967031	ExpressionStatement	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"	86:8:2155:2187	1966743	6	True				
ANR	1967032	AssignmentExpression	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"		1966743	0		=			
ANR	1967033	Identifier	temp_fd		1966743	0					
ANR	1967034	CallExpression	"gp_fopen ( ""temp.ps"" , ""wb"" )"		1966743	1					
ANR	1967035	Callee	gp_fopen		1966743	0					
ANR	1967036	Identifier	gp_fopen		1966743	0					
ANR	1967037	ArgumentList	"""temp.ps"""		1966743	1					
ANR	1967038	Argument	"""temp.ps"""		1966743	0					
ANR	1967039	PrimaryExpression	"""temp.ps"""		1966743	0					
ANR	1967040	Argument	"""wb"""		1966743	1					
ANR	1967041	PrimaryExpression	"""wb"""		1966743	0					
ANR	1967042	ReturnStatement	return 0 ;	87:4:2193:2201	1966743	7	True				
ANR	1967043	PrimaryExpression	0		1966743	0					
ANR	1967044	ReturnType	static int GSDLLCALL		1966743	1					
ANR	1967045	Identifier	gsdll_stdin		1966743	2					
ANR	1967046	ParameterList	"void * instance , char * buf , int len"		1966743	3					
ANR	1967047	Parameter	void * instance	41:12:899:912	1966743	0	True				
ANR	1967048	ParameterType	void *		1966743	0					
ANR	1967049	Identifier	instance		1966743	1					
ANR	1967050	Parameter	char * buf	41:28:915:923	1966743	1	True				
ANR	1967051	ParameterType	char *		1966743	0					
ANR	1967052	Identifier	buf		1966743	1					
ANR	1967053	Parameter	int len	41:39:926:932	1966743	2	True				
ANR	1967054	ParameterType	int		1966743	0					
ANR	1967055	Identifier	len		1966743	1					
ANR	1967056	CFGEntryNode	ENTRY		1966743		True				
ANR	1967057	CFGExitNode	EXIT		1966743		True				
ANR	1967058	Symbol	init		1966743						
ANR	1967059	Symbol	black_fd		1966743						
ANR	1967060	Symbol	read_fd		1966743						
ANR	1967061	Symbol	instance		1966743						
ANR	1967062	Symbol	c		1966743						
ANR	1967063	Symbol	count		1966743						
ANR	1967064	Symbol	temp_fd		1966743						
ANR	1967065	Symbol	choose		1966743						
ANR	1967066	Symbol	& hlen		1966743						
ANR	1967067	Symbol	stderr		1966743						
ANR	1967068	Symbol	strlen		1966743						
ANR	1967069	Symbol	buf		1966743						
ANR	1967070	Symbol	len		1966743						
ANR	1967071	Symbol	gp_fopen		1966743						
ANR	1967072	Symbol	eof		1966743						
ANR	1967073	Symbol	hlen		1966743						
ANR	1967074	Symbol	EOF		1966743						
ANR	1967075	Symbol	yylex		1966743						
ANR	1967076	Symbol	color_fd		1966743						
ANR	1967077	Symbol	fgetc		1966743						
ANR	1967078	Function	gsdll_stdin	91:0:2221:2836							
ANR	1967079	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		1967078	0					
ANR	1967080	CompoundStatement		93:0:2290:2836	1967078	0					
ANR	1967081	IdentifierDeclStatement	int ch ;	94:4:2296:2302	1967078	0	True				
ANR	1967082	IdentifierDecl	ch		1967078	0					
ANR	1967083	IdentifierDeclType	int		1967078	0					
ANR	1967084	Identifier	ch		1967078	1					
ANR	1967085	IdentifierDeclStatement	int count = 0 ;	95:4:2308:2321	1967078	1	True				
ANR	1967086	IdentifierDecl	count = 0		1967078	0					
ANR	1967087	IdentifierDeclType	int		1967078	0					
ANR	1967088	Identifier	count		1967078	1					
ANR	1967089	AssignmentExpression	count = 0		1967078	2		=			
ANR	1967090	Identifier	count		1967078	0					
ANR	1967091	PrimaryExpression	0		1967078	1					
ANR	1967092	IdentifierDeclStatement	size_t back ;	96:8:2331:2342	1967078	2	True				
ANR	1967093	IdentifierDecl	back		1967078	0					
ANR	1967094	IdentifierDeclType	size_t		1967078	0					
ANR	1967095	Identifier	back		1967078	1					
ANR	1967096	IdentifierDeclStatement	char * init = buf ;	97:4:2348:2362	1967078	3	True				
ANR	1967097	IdentifierDecl	* init = buf		1967078	0					
ANR	1967098	IdentifierDeclType	char *		1967078	0					
ANR	1967099	Identifier	init		1967078	1					
ANR	1967100	AssignmentExpression	* init = buf		1967078	2		=			
ANR	1967101	Identifier	buf		1967078	0					
ANR	1967102	Identifier	buf		1967078	1					
ANR	1967103	WhileStatement	while ( count < len )		1967078	4					
ANR	1967104	Condition	count < len	98:11:2375:2385	1967078	0	True				
ANR	1967105	RelationalExpression	count < len		1967078	0		<			
ANR	1967106	Identifier	count		1967078	0					
ANR	1967107	Identifier	len		1967078	1					
ANR	1967108	CompoundStatement		6:24:97:97	1967078	1					
ANR	1967109	ExpressionStatement	ch = fgetc ( stdin )	99:8:2398:2415	1967078	0	True				
ANR	1967110	AssignmentExpression	ch = fgetc ( stdin )		1967078	0		=			
ANR	1967111	Identifier	ch		1967078	0					
ANR	1967112	CallExpression	fgetc ( stdin )		1967078	1					
ANR	1967113	Callee	fgetc		1967078	0					
ANR	1967114	Identifier	fgetc		1967078	0					
ANR	1967115	ArgumentList	stdin		1967078	1					
ANR	1967116	Argument	stdin		1967078	0					
ANR	1967117	Identifier	stdin		1967078	0					
ANR	1967118	IfStatement	if ( ch == EOF )		1967078	1					
ANR	1967119	Condition	ch == EOF	100:12:2429:2437	1967078	0	True				
ANR	1967120	EqualityExpression	ch == EOF		1967078	0		==			
ANR	1967121	Identifier	ch		1967078	0					
ANR	1967122	Identifier	EOF		1967078	1					
ANR	1967123	CompoundStatement		8:22:148:148	1967078	1					
ANR	1967124	ExpressionStatement	"fprintf ( stderr , ""lese %s\\n"" , buf )"	102:4:2466:2498	1967078	0	True				
ANR	1967125	CallExpression	"fprintf ( stderr , ""lese %s\\n"" , buf )"		1967078	0					
ANR	1967126	Callee	fprintf		1967078	0					
ANR	1967127	Identifier	fprintf		1967078	0					
ANR	1967128	ArgumentList	stderr		1967078	1					
ANR	1967129	Argument	stderr		1967078	0					
ANR	1967130	Identifier	stderr		1967078	0					
ANR	1967131	Argument	"""lese %s\\n"""		1967078	1					
ANR	1967132	PrimaryExpression	"""lese %s\\n"""		1967078	0					
ANR	1967133	Argument	buf		1967078	2					
ANR	1967134	Identifier	buf		1967078	0					
ANR	1967135	ExpressionStatement	"fwrite ( init , 1 , count , temp_fd )"	104:8:2515:2543	1967078	1	True				
ANR	1967136	CallExpression	"fwrite ( init , 1 , count , temp_fd )"		1967078	0					
ANR	1967137	Callee	fwrite		1967078	0					
ANR	1967138	Identifier	fwrite		1967078	0					
ANR	1967139	ArgumentList	init		1967078	1					
ANR	1967140	Argument	init		1967078	0					
ANR	1967141	Identifier	init		1967078	0					
ANR	1967142	Argument	1		1967078	1					
ANR	1967143	PrimaryExpression	1		1967078	0					
ANR	1967144	Argument	count		1967078	2					
ANR	1967145	Identifier	count		1967078	0					
ANR	1967146	Argument	temp_fd		1967078	3					
ANR	1967147	Identifier	temp_fd		1967078	0					
ANR	1967148	ExpressionStatement	fflush ( temp_fd )	105:8:2553:2568	1967078	2	True				
ANR	1967149	CallExpression	fflush ( temp_fd )		1967078	0					
ANR	1967150	Callee	fflush		1967078	0					
ANR	1967151	Identifier	fflush		1967078	0					
ANR	1967152	ArgumentList	temp_fd		1967078	1					
ANR	1967153	Argument	temp_fd		1967078	0					
ANR	1967154	Identifier	temp_fd		1967078	0					
ANR	1967155	ReturnStatement	return 0 ;	106:12:2582:2590	1967078	3	True				
ANR	1967156	PrimaryExpression	0		1967078	0					
ANR	1967157	ExpressionStatement	* buf ++ = ch	108:8:2610:2621	1967078	2	True				
ANR	1967158	AssignmentExpression	* buf ++ = ch		1967078	0		=			
ANR	1967159	UnaryOperationExpression	* buf ++		1967078	0					
ANR	1967160	UnaryOperator	*		1967078	0					
ANR	1967161	PostIncDecOperationExpression	buf ++		1967078	1					
ANR	1967162	Identifier	buf		1967078	0					
ANR	1967163	IncDec	++		1967078	1					
ANR	1967164	Identifier	ch		1967078	1					
ANR	1967165	ExpressionStatement	count ++	109:8:2631:2638	1967078	3	True				
ANR	1967166	PostIncDecOperationExpression	count ++		1967078	0					
ANR	1967167	Identifier	count		1967078	0					
ANR	1967168	IncDec	++		1967078	1					
ANR	1967169	IfStatement	if ( ch == '\\n' )		1967078	4					
ANR	1967170	Condition	ch == '\\n'	110:12:2652:2661	1967078	0	True				
ANR	1967171	EqualityExpression	ch == '\\n'		1967078	0		==			
ANR	1967172	Identifier	ch		1967078	0					
ANR	1967173	PrimaryExpression	'\\n'		1967078	1					
ANR	1967174	BreakStatement	break ;	111:12:2676:2681	1967078	1	True				
ANR	1967175	ExpressionStatement	"fprintf ( stderr , ""lese %s\\n"" , buf )"	114:4:2714:2746	1967078	5	True				
ANR	1967176	CallExpression	"fprintf ( stderr , ""lese %s\\n"" , buf )"		1967078	0					
ANR	1967177	Callee	fprintf		1967078	0					
ANR	1967178	Identifier	fprintf		1967078	0					
ANR	1967179	ArgumentList	stderr		1967078	1					
ANR	1967180	Argument	stderr		1967078	0					
ANR	1967181	Identifier	stderr		1967078	0					
ANR	1967182	Argument	"""lese %s\\n"""		1967078	1					
ANR	1967183	PrimaryExpression	"""lese %s\\n"""		1967078	0					
ANR	1967184	Argument	buf		1967078	2					
ANR	1967185	Identifier	buf		1967078	0					
ANR	1967186	ExpressionStatement	"fwrite ( init , 1 , count , temp_fd )"	116:8:2763:2791	1967078	6	True				
ANR	1967187	CallExpression	"fwrite ( init , 1 , count , temp_fd )"		1967078	0					
ANR	1967188	Callee	fwrite		1967078	0					
ANR	1967189	Identifier	fwrite		1967078	0					
ANR	1967190	ArgumentList	init		1967078	1					
ANR	1967191	Argument	init		1967078	0					
ANR	1967192	Identifier	init		1967078	0					
ANR	1967193	Argument	1		1967078	1					
ANR	1967194	PrimaryExpression	1		1967078	0					
ANR	1967195	Argument	count		1967078	2					
ANR	1967196	Identifier	count		1967078	0					
ANR	1967197	Argument	temp_fd		1967078	3					
ANR	1967198	Identifier	temp_fd		1967078	0					
ANR	1967199	ExpressionStatement	fflush ( temp_fd )	117:8:2801:2816	1967078	7	True				
ANR	1967200	CallExpression	fflush ( temp_fd )		1967078	0					
ANR	1967201	Callee	fflush		1967078	0					
ANR	1967202	Identifier	fflush		1967078	0					
ANR	1967203	ArgumentList	temp_fd		1967078	1					
ANR	1967204	Argument	temp_fd		1967078	0					
ANR	1967205	Identifier	temp_fd		1967078	0					
ANR	1967206	ReturnStatement	return count ;	118:4:2822:2834	1967078	8	True				
ANR	1967207	Identifier	count		1967078	0					
ANR	1967208	ReturnType	static int GSDLLCALL		1967078	1					
ANR	1967209	Identifier	gsdll_stdin		1967078	2					
ANR	1967210	ParameterList	"void * instance , char * buf , int len"		1967078	3					
ANR	1967211	Parameter	void * instance	92:12:2254:2267	1967078	0	True				
ANR	1967212	ParameterType	void *		1967078	0					
ANR	1967213	Identifier	instance		1967078	1					
ANR	1967214	Parameter	char * buf	92:28:2270:2278	1967078	1	True				
ANR	1967215	ParameterType	char *		1967078	0					
ANR	1967216	Identifier	buf		1967078	1					
ANR	1967217	Parameter	int len	92:39:2281:2287	1967078	2	True				
ANR	1967218	ParameterType	int		1967078	0					
ANR	1967219	Identifier	len		1967078	1					
ANR	1967220	CFGEntryNode	ENTRY		1967078		True				
ANR	1967221	CFGExitNode	EXIT		1967078		True				
ANR	1967222	Symbol	init		1967078						
ANR	1967223	Symbol	stdin		1967078						
ANR	1967224	Symbol	instance		1967078						
ANR	1967225	Symbol	ch		1967078						
ANR	1967226	Symbol	count		1967078						
ANR	1967227	Symbol	back		1967078						
ANR	1967228	Symbol	temp_fd		1967078						
ANR	1967229	Symbol	stderr		1967078						
ANR	1967230	Symbol	* buf ++		1967078						
ANR	1967231	Symbol	buf		1967078						
ANR	1967232	Symbol	len		1967078						
ANR	1967233	Symbol	EOF		1967078						
ANR	1967234	Symbol	fgetc		1967078						
ANR	1967235	Function	gsdll_stdout	122:0:2846:2993							
ANR	1967236	FunctionDef	"gsdll_stdout (void * instance , const char * str , int len)"		1967235	0					
ANR	1967237	CompoundStatement		124:0:2922:2993	1967235	0					
ANR	1967238	ExpressionStatement	"fwrite ( str , 1 , len , stdout )"	125:4:2928:2955	1967235	0	True				
ANR	1967239	CallExpression	"fwrite ( str , 1 , len , stdout )"		1967235	0					
ANR	1967240	Callee	fwrite		1967235	0					
ANR	1967241	Identifier	fwrite		1967235	0					
ANR	1967242	ArgumentList	str		1967235	1					
ANR	1967243	Argument	str		1967235	0					
ANR	1967244	Identifier	str		1967235	0					
ANR	1967245	Argument	1		1967235	1					
ANR	1967246	PrimaryExpression	1		1967235	0					
ANR	1967247	Argument	len		1967235	2					
ANR	1967248	Identifier	len		1967235	0					
ANR	1967249	Argument	stdout		1967235	3					
ANR	1967250	Identifier	stdout		1967235	0					
ANR	1967251	ExpressionStatement	fflush ( stdout )	126:4:2961:2975	1967235	1	True				
ANR	1967252	CallExpression	fflush ( stdout )		1967235	0					
ANR	1967253	Callee	fflush		1967235	0					
ANR	1967254	Identifier	fflush		1967235	0					
ANR	1967255	ArgumentList	stdout		1967235	1					
ANR	1967256	Argument	stdout		1967235	0					
ANR	1967257	Identifier	stdout		1967235	0					
ANR	1967258	ReturnStatement	return len ;	127:4:2981:2991	1967235	2	True				
ANR	1967259	Identifier	len		1967235	0					
ANR	1967260	ReturnType	static int GSDLLCALL		1967235	1					
ANR	1967261	Identifier	gsdll_stdout		1967235	2					
ANR	1967262	ParameterList	"void * instance , const char * str , int len"		1967235	3					
ANR	1967263	Parameter	void * instance	123:13:2880:2893	1967235	0	True				
ANR	1967264	ParameterType	void *		1967235	0					
ANR	1967265	Identifier	instance		1967235	1					
ANR	1967266	Parameter	const char * str	123:29:2896:2910	1967235	1	True				
ANR	1967267	ParameterType	const char *		1967235	0					
ANR	1967268	Identifier	str		1967235	1					
ANR	1967269	Parameter	int len	123:46:2913:2919	1967235	2	True				
ANR	1967270	ParameterType	int		1967235	0					
ANR	1967271	Identifier	len		1967235	1					
ANR	1967272	CFGEntryNode	ENTRY		1967235		True				
ANR	1967273	CFGExitNode	EXIT		1967235		True				
ANR	1967274	Symbol	str		1967235						
ANR	1967275	Symbol	instance		1967235						
ANR	1967276	Symbol	len		1967235						
ANR	1967277	Symbol	stdout		1967235						
ANR	1967278	Function	gsdll_stderr	130:0:2996:3143							
ANR	1967279	FunctionDef	"gsdll_stderr (void * instance , const char * str , int len)"		1967278	0					
ANR	1967280	CompoundStatement		132:0:3072:3143	1967278	0					
ANR	1967281	ExpressionStatement	"fwrite ( str , 1 , len , stderr )"	133:4:3078:3105	1967278	0	True				
ANR	1967282	CallExpression	"fwrite ( str , 1 , len , stderr )"		1967278	0					
ANR	1967283	Callee	fwrite		1967278	0					
ANR	1967284	Identifier	fwrite		1967278	0					
ANR	1967285	ArgumentList	str		1967278	1					
ANR	1967286	Argument	str		1967278	0					
ANR	1967287	Identifier	str		1967278	0					
ANR	1967288	Argument	1		1967278	1					
ANR	1967289	PrimaryExpression	1		1967278	0					
ANR	1967290	Argument	len		1967278	2					
ANR	1967291	Identifier	len		1967278	0					
ANR	1967292	Argument	stderr		1967278	3					
ANR	1967293	Identifier	stderr		1967278	0					
ANR	1967294	ExpressionStatement	fflush ( stderr )	134:4:3111:3125	1967278	1	True				
ANR	1967295	CallExpression	fflush ( stderr )		1967278	0					
ANR	1967296	Callee	fflush		1967278	0					
ANR	1967297	Identifier	fflush		1967278	0					
ANR	1967298	ArgumentList	stderr		1967278	1					
ANR	1967299	Argument	stderr		1967278	0					
ANR	1967300	Identifier	stderr		1967278	0					
ANR	1967301	ReturnStatement	return len ;	135:4:3131:3141	1967278	2	True				
ANR	1967302	Identifier	len		1967278	0					
ANR	1967303	ReturnType	static int GSDLLCALL		1967278	1					
ANR	1967304	Identifier	gsdll_stderr		1967278	2					
ANR	1967305	ParameterList	"void * instance , const char * str , int len"		1967278	3					
ANR	1967306	Parameter	void * instance	131:13:3030:3043	1967278	0	True				
ANR	1967307	ParameterType	void *		1967278	0					
ANR	1967308	Identifier	instance		1967278	1					
ANR	1967309	Parameter	const char * str	131:29:3046:3060	1967278	1	True				
ANR	1967310	ParameterType	const char *		1967278	0					
ANR	1967311	Identifier	str		1967278	1					
ANR	1967312	Parameter	int len	131:46:3063:3069	1967278	2	True				
ANR	1967313	ParameterType	int		1967278	0					
ANR	1967314	Identifier	len		1967278	1					
ANR	1967315	CFGEntryNode	ENTRY		1967278		True				
ANR	1967316	CFGExitNode	EXIT		1967278		True				
ANR	1967317	Symbol	str		1967278						
ANR	1967318	Symbol	instance		1967278						
ANR	1967319	Symbol	len		1967278						
ANR	1967320	Symbol	stderr		1967278						
ANR	1967321	Function	display_open	140:0:3227:3432							
ANR	1967322	FunctionDef	"display_open (void * handle , void * device)"		1967321	0					
ANR	1967323	CompoundStatement		141:0:3279:3432	1967321	0					
ANR	1967324	IdentifierDeclStatement	char buf [ 256 ] ;	143:4:3306:3319	1967321	0	True				
ANR	1967325	IdentifierDecl	buf [ 256 ]		1967321	0					
ANR	1967326	IdentifierDeclType	char [ 256 ]		1967321	0					
ANR	1967327	Identifier	buf		1967321	1					
ANR	1967328	PrimaryExpression	256		1967321	2					
ANR	1967329	ExpressionStatement	"sprintf ( buf , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"	144:4:3325:3383	1967321	1	True				
ANR	1967330	CallExpression	"sprintf ( buf , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"		1967321	0					
ANR	1967331	Callee	sprintf		1967321	0					
ANR	1967332	Identifier	sprintf		1967321	0					
ANR	1967333	ArgumentList	buf		1967321	1					
ANR	1967334	Argument	buf		1967321	0					
ANR	1967335	Identifier	buf		1967321	0					
ANR	1967336	Argument	"""display_open(0x%x, 0x%x)\\n"""		1967321	1					
ANR	1967337	PrimaryExpression	"""display_open(0x%x, 0x%x)\\n"""		1967321	0					
ANR	1967338	Argument	handle		1967321	2					
ANR	1967339	Identifier	handle		1967321	0					
ANR	1967340	Argument	device		1967321	3					
ANR	1967341	Identifier	device		1967321	0					
ANR	1967342	ExpressionStatement	"fprintf ( stderr , buf )"	145:4:3389:3409	1967321	2	True				
ANR	1967343	CallExpression	"fprintf ( stderr , buf )"		1967321	0					
ANR	1967344	Callee	fprintf		1967321	0					
ANR	1967345	Identifier	fprintf		1967321	0					
ANR	1967346	ArgumentList	stderr		1967321	1					
ANR	1967347	Argument	stderr		1967321	0					
ANR	1967348	Identifier	stderr		1967321	0					
ANR	1967349	Argument	buf		1967321	1					
ANR	1967350	Identifier	buf		1967321	0					
ANR	1967351	ReturnStatement	return 0 ;	147:4:3422:3430	1967321	3	True				
ANR	1967352	PrimaryExpression	0		1967321	0					
ANR	1967353	ReturnType	static int		1967321	1					
ANR	1967354	Identifier	display_open		1967321	2					
ANR	1967355	ParameterList	"void * handle , void * device"		1967321	3					
ANR	1967356	Parameter	void * handle	140:24:3251:3262	1967321	0	True				
ANR	1967357	ParameterType	void *		1967321	0					
ANR	1967358	Identifier	handle		1967321	1					
ANR	1967359	Parameter	void * device	140:38:3265:3276	1967321	1	True				
ANR	1967360	ParameterType	void *		1967321	0					
ANR	1967361	Identifier	device		1967321	1					
ANR	1967362	CFGEntryNode	ENTRY		1967321		True				
ANR	1967363	CFGExitNode	EXIT		1967321		True				
ANR	1967364	Symbol	buf		1967321						
ANR	1967365	Symbol	handle		1967321						
ANR	1967366	Symbol	stderr		1967321						
ANR	1967367	Symbol	device		1967321						
ANR	1967368	Function	display_preclose	152:0:3532:3800							
ANR	1967369	FunctionDef	"display_preclose (void * handle , void * device)"		1967368	0					
ANR	1967370	CompoundStatement		153:0:3588:3800	1967368	0					
ANR	1967371	IdentifierDeclStatement	char buf [ 256 ] ;	155:4:3615:3628	1967368	0	True				
ANR	1967372	IdentifierDecl	buf [ 256 ]		1967368	0					
ANR	1967373	IdentifierDeclType	char [ 256 ]		1967368	0					
ANR	1967374	Identifier	buf		1967368	1					
ANR	1967375	PrimaryExpression	256		1967368	2					
ANR	1967376	ExpressionStatement	"sprintf ( buf , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"	156:4:3634:3696	1967368	1	True				
ANR	1967377	CallExpression	"sprintf ( buf , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"		1967368	0					
ANR	1967378	Callee	sprintf		1967368	0					
ANR	1967379	Identifier	sprintf		1967368	0					
ANR	1967380	ArgumentList	buf		1967368	1					
ANR	1967381	Argument	buf		1967368	0					
ANR	1967382	Identifier	buf		1967368	0					
ANR	1967383	Argument	"""display_preclose(0x%x, 0x%x)\\n"""		1967368	1					
ANR	1967384	PrimaryExpression	"""display_preclose(0x%x, 0x%x)\\n"""		1967368	0					
ANR	1967385	Argument	handle		1967368	2					
ANR	1967386	Identifier	handle		1967368	0					
ANR	1967387	Argument	device		1967368	3					
ANR	1967388	Identifier	device		1967368	0					
ANR	1967389	ExpressionStatement	"fprintf ( stderr , buf )"	157:4:3702:3722	1967368	2	True				
ANR	1967390	CallExpression	"fprintf ( stderr , buf )"		1967368	0					
ANR	1967391	Callee	fprintf		1967368	0					
ANR	1967392	Identifier	fprintf		1967368	0					
ANR	1967393	ArgumentList	stderr		1967368	1					
ANR	1967394	Argument	stderr		1967368	0					
ANR	1967395	Identifier	stderr		1967368	0					
ANR	1967396	Argument	buf		1967368	1					
ANR	1967397	Identifier	buf		1967368	0					
ANR	1967398	ReturnStatement	return 0 ;	160:4:3790:3798	1967368	3	True				
ANR	1967399	PrimaryExpression	0		1967368	0					
ANR	1967400	ReturnType	static int		1967368	1					
ANR	1967401	Identifier	display_preclose		1967368	2					
ANR	1967402	ParameterList	"void * handle , void * device"		1967368	3					
ANR	1967403	Parameter	void * handle	152:28:3560:3571	1967368	0	True				
ANR	1967404	ParameterType	void *		1967368	0					
ANR	1967405	Identifier	handle		1967368	1					
ANR	1967406	Parameter	void * device	152:42:3574:3585	1967368	1	True				
ANR	1967407	ParameterType	void *		1967368	0					
ANR	1967408	Identifier	device		1967368	1					
ANR	1967409	CFGEntryNode	ENTRY		1967368		True				
ANR	1967410	CFGExitNode	EXIT		1967368		True				
ANR	1967411	Symbol	buf		1967368						
ANR	1967412	Symbol	handle		1967368						
ANR	1967413	Symbol	stderr		1967368						
ANR	1967414	Symbol	device		1967368						
ANR	1967415	Function	display_close	165:0:3880:4087							
ANR	1967416	FunctionDef	"display_close (void * handle , void * device)"		1967415	0					
ANR	1967417	CompoundStatement		166:0:3933:4087	1967415	0					
ANR	1967418	IdentifierDeclStatement	char buf [ 256 ] ;	168:4:3960:3973	1967415	0	True				
ANR	1967419	IdentifierDecl	buf [ 256 ]		1967415	0					
ANR	1967420	IdentifierDeclType	char [ 256 ]		1967415	0					
ANR	1967421	Identifier	buf		1967415	1					
ANR	1967422	PrimaryExpression	256		1967415	2					
ANR	1967423	ExpressionStatement	"sprintf ( buf , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"	169:4:3979:4038	1967415	1	True				
ANR	1967424	CallExpression	"sprintf ( buf , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"		1967415	0					
ANR	1967425	Callee	sprintf		1967415	0					
ANR	1967426	Identifier	sprintf		1967415	0					
ANR	1967427	ArgumentList	buf		1967415	1					
ANR	1967428	Argument	buf		1967415	0					
ANR	1967429	Identifier	buf		1967415	0					
ANR	1967430	Argument	"""display_close(0x%x, 0x%x)\\n"""		1967415	1					
ANR	1967431	PrimaryExpression	"""display_close(0x%x, 0x%x)\\n"""		1967415	0					
ANR	1967432	Argument	handle		1967415	2					
ANR	1967433	Identifier	handle		1967415	0					
ANR	1967434	Argument	device		1967415	3					
ANR	1967435	Identifier	device		1967415	0					
ANR	1967436	ExpressionStatement	"fprintf ( stderr , buf )"	170:4:4044:4064	1967415	2	True				
ANR	1967437	CallExpression	"fprintf ( stderr , buf )"		1967415	0					
ANR	1967438	Callee	fprintf		1967415	0					
ANR	1967439	Identifier	fprintf		1967415	0					
ANR	1967440	ArgumentList	stderr		1967415	1					
ANR	1967441	Argument	stderr		1967415	0					
ANR	1967442	Identifier	stderr		1967415	0					
ANR	1967443	Argument	buf		1967415	1					
ANR	1967444	Identifier	buf		1967415	0					
ANR	1967445	ReturnStatement	return 0 ;	172:4:4077:4085	1967415	3	True				
ANR	1967446	PrimaryExpression	0		1967415	0					
ANR	1967447	ReturnType	static int		1967415	1					
ANR	1967448	Identifier	display_close		1967415	2					
ANR	1967449	ParameterList	"void * handle , void * device"		1967415	3					
ANR	1967450	Parameter	void * handle	165:25:3905:3916	1967415	0	True				
ANR	1967451	ParameterType	void *		1967415	0					
ANR	1967452	Identifier	handle		1967415	1					
ANR	1967453	Parameter	void * device	165:39:3919:3930	1967415	1	True				
ANR	1967454	ParameterType	void *		1967415	0					
ANR	1967455	Identifier	device		1967415	1					
ANR	1967456	CFGEntryNode	ENTRY		1967415		True				
ANR	1967457	CFGExitNode	EXIT		1967415		True				
ANR	1967458	Symbol	buf		1967415						
ANR	1967459	Symbol	handle		1967415						
ANR	1967460	Symbol	stderr		1967415						
ANR	1967461	Symbol	device		1967415						
ANR	1967462	Function	display_presize	177:0:4184:4542							
ANR	1967463	FunctionDef	"display_presize (void * handle , void * device , int width , int height , int raster , unsigned int format)"		1967462	0					
ANR	1967464	CompoundStatement		179:0:4303:4542	1967462	0					
ANR	1967465	IdentifierDeclStatement	char buf [ 256 ] ;	181:4:4330:4343	1967462	0	True				
ANR	1967466	IdentifierDecl	buf [ 256 ]		1967462	0					
ANR	1967467	IdentifierDeclType	char [ 256 ]		1967462	0					
ANR	1967468	Identifier	buf		1967462	1					
ANR	1967469	PrimaryExpression	256		1967462	2					
ANR	1967470	ExpressionStatement	"sprintf ( buf , ""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"" , handle , device , width , height , raster , format )"	182:4:4349:4493	1967462	1	True				
ANR	1967471	CallExpression	"sprintf ( buf , ""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"" , handle , device , width , height , raster , format )"		1967462	0					
ANR	1967472	Callee	sprintf		1967462	0					
ANR	1967473	Identifier	sprintf		1967462	0					
ANR	1967474	ArgumentList	buf		1967462	1					
ANR	1967475	Argument	buf		1967462	0					
ANR	1967476	Identifier	buf		1967462	0					
ANR	1967477	Argument	"""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"""		1967462	1					
ANR	1967478	PrimaryExpression	"""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"""		1967462	0					
ANR	1967479	Argument	handle		1967462	2					
ANR	1967480	Identifier	handle		1967462	0					
ANR	1967481	Argument	device		1967462	3					
ANR	1967482	Identifier	device		1967462	0					
ANR	1967483	Argument	width		1967462	4					
ANR	1967484	Identifier	width		1967462	0					
ANR	1967485	Argument	height		1967462	5					
ANR	1967486	Identifier	height		1967462	0					
ANR	1967487	Argument	raster		1967462	6					
ANR	1967488	Identifier	raster		1967462	0					
ANR	1967489	Argument	format		1967462	7					
ANR	1967490	Identifier	format		1967462	0					
ANR	1967491	ExpressionStatement	"fprintf ( stderr , buf )"	185:4:4499:4519	1967462	2	True				
ANR	1967492	CallExpression	"fprintf ( stderr , buf )"		1967462	0					
ANR	1967493	Callee	fprintf		1967462	0					
ANR	1967494	Identifier	fprintf		1967462	0					
ANR	1967495	ArgumentList	stderr		1967462	1					
ANR	1967496	Argument	stderr		1967462	0					
ANR	1967497	Identifier	stderr		1967462	0					
ANR	1967498	Argument	buf		1967462	1					
ANR	1967499	Identifier	buf		1967462	0					
ANR	1967500	ReturnStatement	return 0 ;	187:4:4532:4540	1967462	3	True				
ANR	1967501	PrimaryExpression	0		1967462	0					
ANR	1967502	ReturnType	static int		1967462	1					
ANR	1967503	Identifier	display_presize		1967462	2					
ANR	1967504	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format"		1967462	3					
ANR	1967505	Parameter	void * handle	177:27:4211:4222	1967462	0	True				
ANR	1967506	ParameterType	void *		1967462	0					
ANR	1967507	Identifier	handle		1967462	1					
ANR	1967508	Parameter	void * device	177:41:4225:4236	1967462	1	True				
ANR	1967509	ParameterType	void *		1967462	0					
ANR	1967510	Identifier	device		1967462	1					
ANR	1967511	Parameter	int width	177:55:4239:4247	1967462	2	True				
ANR	1967512	ParameterType	int		1967462	0					
ANR	1967513	Identifier	width		1967462	1					
ANR	1967514	Parameter	int height	177:66:4250:4259	1967462	3	True				
ANR	1967515	ParameterType	int		1967462	0					
ANR	1967516	Identifier	height		1967462	1					
ANR	1967517	Parameter	int raster	178:8:4270:4279	1967462	4	True				
ANR	1967518	ParameterType	int		1967462	0					
ANR	1967519	Identifier	raster		1967462	1					
ANR	1967520	Parameter	unsigned int format	178:20:4282:4300	1967462	5	True				
ANR	1967521	ParameterType	unsigned int		1967462	0					
ANR	1967522	Identifier	format		1967462	1					
ANR	1967523	CFGEntryNode	ENTRY		1967462		True				
ANR	1967524	CFGExitNode	EXIT		1967462		True				
ANR	1967525	Symbol	buf		1967462						
ANR	1967526	Symbol	width		1967462						
ANR	1967527	Symbol	raster		1967462						
ANR	1967528	Symbol	format		1967462						
ANR	1967529	Symbol	handle		1967462						
ANR	1967530	Symbol	stderr		1967462						
ANR	1967531	Symbol	device		1967462						
ANR	1967532	Symbol	height		1967462						
ANR	1967533	Function	display_size	192:0:4623:5118							
ANR	1967534	FunctionDef	"display_size (void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage)"		1967533	0					
ANR	1967535	CompoundStatement		194:0:4762:5118	1967533	0					
ANR	1967536	IdentifierDeclStatement	char buf [ 256 ] ;	197:4:4790:4803	1967533	0	True				
ANR	1967537	IdentifierDecl	buf [ 256 ]		1967533	0					
ANR	1967538	IdentifierDeclType	char [ 256 ]		1967533	0					
ANR	1967539	Identifier	buf		1967533	1					
ANR	1967540	PrimaryExpression	256		1967533	2					
ANR	1967541	ExpressionStatement	"sprintf ( buf , ""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"	198:4:4809:4969	1967533	1	True				
ANR	1967542	CallExpression	"sprintf ( buf , ""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"		1967533	0					
ANR	1967543	Callee	sprintf		1967533	0					
ANR	1967544	Identifier	sprintf		1967533	0					
ANR	1967545	ArgumentList	buf		1967533	1					
ANR	1967546	Argument	buf		1967533	0					
ANR	1967547	Identifier	buf		1967533	0					
ANR	1967548	Argument	"""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"""		1967533	1					
ANR	1967549	PrimaryExpression	"""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"""		1967533	0					
ANR	1967550	Argument	handle		1967533	2					
ANR	1967551	Identifier	handle		1967533	0					
ANR	1967552	Argument	device		1967533	3					
ANR	1967553	Identifier	device		1967533	0					
ANR	1967554	Argument	width		1967533	4					
ANR	1967555	Identifier	width		1967533	0					
ANR	1967556	Argument	height		1967533	5					
ANR	1967557	Identifier	height		1967533	0					
ANR	1967558	Argument	raster		1967533	6					
ANR	1967559	Identifier	raster		1967533	0					
ANR	1967560	Argument	format		1967533	7					
ANR	1967561	Identifier	format		1967533	0					
ANR	1967562	Argument	pimage		1967533	8					
ANR	1967563	Identifier	pimage		1967533	0					
ANR	1967564	ExpressionStatement	"fprintf ( stderr , buf )"	201:4:4975:4995	1967533	2	True				
ANR	1967565	CallExpression	"fprintf ( stderr , buf )"		1967533	0					
ANR	1967566	Callee	fprintf		1967533	0					
ANR	1967567	Identifier	fprintf		1967533	0					
ANR	1967568	ArgumentList	stderr		1967533	1					
ANR	1967569	Argument	stderr		1967533	0					
ANR	1967570	Identifier	stderr		1967533	0					
ANR	1967571	Argument	buf		1967533	1					
ANR	1967572	Identifier	buf		1967533	0					
ANR	1967573	ExpressionStatement	myimage = pimage	203:8:5012:5026	1967533	3	True				
ANR	1967574	AssignmentExpression	myimage = pimage		1967533	0		=			
ANR	1967575	Identifier	myimage		1967533	0					
ANR	1967576	Identifier	pimage		1967533	1					
ANR	1967577	ExpressionStatement	breite = width	204:8:5036:5048	1967533	4	True				
ANR	1967578	AssignmentExpression	breite = width		1967533	0		=			
ANR	1967579	Identifier	breite		1967533	0					
ANR	1967580	Identifier	width		1967533	1					
ANR	1967581	ExpressionStatement	hoehe = height	205:8:5058:5070	1967533	5	True				
ANR	1967582	AssignmentExpression	hoehe = height		1967533	0		=			
ANR	1967583	Identifier	hoehe		1967533	0					
ANR	1967584	Identifier	height		1967533	1					
ANR	1967585	ExpressionStatement	myraster = raster	206:8:5080:5095	1967533	6	True				
ANR	1967586	AssignmentExpression	myraster = raster		1967533	0		=			
ANR	1967587	Identifier	myraster		1967533	0					
ANR	1967588	Identifier	raster		1967533	1					
ANR	1967589	ReturnStatement	return 0 ;	207:11:5108:5116	1967533	7	True				
ANR	1967590	PrimaryExpression	0		1967533	0					
ANR	1967591	ReturnType	static int		1967533	1					
ANR	1967592	Identifier	display_size		1967533	2					
ANR	1967593	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage"		1967533	3					
ANR	1967594	Parameter	void * handle	192:24:4647:4658	1967533	0	True				
ANR	1967595	ParameterType	void *		1967533	0					
ANR	1967596	Identifier	handle		1967533	1					
ANR	1967597	Parameter	void * device	192:38:4661:4672	1967533	1	True				
ANR	1967598	ParameterType	void *		1967533	0					
ANR	1967599	Identifier	device		1967533	1					
ANR	1967600	Parameter	int width	192:52:4675:4683	1967533	2	True				
ANR	1967601	ParameterType	int		1967533	0					
ANR	1967602	Identifier	width		1967533	1					
ANR	1967603	Parameter	int height	192:63:4686:4695	1967533	3	True				
ANR	1967604	ParameterType	int		1967533	0					
ANR	1967605	Identifier	height		1967533	1					
ANR	1967606	Parameter	int raster	193:8:4706:4715	1967533	4	True				
ANR	1967607	ParameterType	int		1967533	0					
ANR	1967608	Identifier	raster		1967533	1					
ANR	1967609	Parameter	unsigned int format	193:20:4718:4736	1967533	5	True				
ANR	1967610	ParameterType	unsigned int		1967533	0					
ANR	1967611	Identifier	format		1967533	1					
ANR	1967612	Parameter	unsigned char * pimage	193:41:4739:4759	1967533	6	True				
ANR	1967613	ParameterType	unsigned char *		1967533	0					
ANR	1967614	Identifier	pimage		1967533	1					
ANR	1967615	CFGEntryNode	ENTRY		1967533		True				
ANR	1967616	CFGExitNode	EXIT		1967533		True				
ANR	1967617	Symbol	raster		1967533						
ANR	1967618	Symbol	format		1967533						
ANR	1967619	Symbol	handle		1967533						
ANR	1967620	Symbol	stderr		1967533						
ANR	1967621	Symbol	myraster		1967533						
ANR	1967622	Symbol	pimage		1967533						
ANR	1967623	Symbol	buf		1967533						
ANR	1967624	Symbol	myimage		1967533						
ANR	1967625	Symbol	breite		1967533						
ANR	1967626	Symbol	hoehe		1967533						
ANR	1967627	Symbol	width		1967533						
ANR	1967628	Symbol	device		1967533						
ANR	1967629	Symbol	height		1967533						
ANR	1967630	Function	display_sync	211:0:5137:5344							
ANR	1967631	FunctionDef	"display_sync (void * handle , void * device)"		1967630	0					
ANR	1967632	CompoundStatement		212:0:5189:5344	1967630	0					
ANR	1967633	IdentifierDeclStatement	char buf [ 256 ] ;	215:4:5217:5230	1967630	0	True				
ANR	1967634	IdentifierDecl	buf [ 256 ]		1967630	0					
ANR	1967635	IdentifierDeclType	char [ 256 ]		1967630	0					
ANR	1967636	Identifier	buf		1967630	1					
ANR	1967637	PrimaryExpression	256		1967630	2					
ANR	1967638	ExpressionStatement	"sprintf ( buf , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"	216:4:5236:5294	1967630	1	True				
ANR	1967639	CallExpression	"sprintf ( buf , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"		1967630	0					
ANR	1967640	Callee	sprintf		1967630	0					
ANR	1967641	Identifier	sprintf		1967630	0					
ANR	1967642	ArgumentList	buf		1967630	1					
ANR	1967643	Argument	buf		1967630	0					
ANR	1967644	Identifier	buf		1967630	0					
ANR	1967645	Argument	"""display_sync(0x%x, 0x%x)\\n"""		1967630	1					
ANR	1967646	PrimaryExpression	"""display_sync(0x%x, 0x%x)\\n"""		1967630	0					
ANR	1967647	Argument	handle		1967630	2					
ANR	1967648	Identifier	handle		1967630	0					
ANR	1967649	Argument	device		1967630	3					
ANR	1967650	Identifier	device		1967630	0					
ANR	1967651	ExpressionStatement	"fprintf ( stderr , buf )"	217:4:5300:5320	1967630	2	True				
ANR	1967652	CallExpression	"fprintf ( stderr , buf )"		1967630	0					
ANR	1967653	Callee	fprintf		1967630	0					
ANR	1967654	Identifier	fprintf		1967630	0					
ANR	1967655	ArgumentList	stderr		1967630	1					
ANR	1967656	Argument	stderr		1967630	0					
ANR	1967657	Identifier	stderr		1967630	0					
ANR	1967658	Argument	buf		1967630	1					
ANR	1967659	Identifier	buf		1967630	0					
ANR	1967660	ReturnStatement	return 0 ;	220:4:5334:5342	1967630	3	True				
ANR	1967661	PrimaryExpression	0		1967630	0					
ANR	1967662	ReturnType	static int		1967630	1					
ANR	1967663	Identifier	display_sync		1967630	2					
ANR	1967664	ParameterList	"void * handle , void * device"		1967630	3					
ANR	1967665	Parameter	void * handle	211:24:5161:5172	1967630	0	True				
ANR	1967666	ParameterType	void *		1967630	0					
ANR	1967667	Identifier	handle		1967630	1					
ANR	1967668	Parameter	void * device	211:38:5175:5186	1967630	1	True				
ANR	1967669	ParameterType	void *		1967630	0					
ANR	1967670	Identifier	device		1967630	1					
ANR	1967671	CFGEntryNode	ENTRY		1967630		True				
ANR	1967672	CFGExitNode	EXIT		1967630		True				
ANR	1967673	Symbol	buf		1967630						
ANR	1967674	Symbol	handle		1967630						
ANR	1967675	Symbol	stderr		1967630						
ANR	1967676	Symbol	device		1967630						
ANR	1967677	Function	display_page	225:0:5432:6709							
ANR	1967678	FunctionDef	"display_page (void * handle , void * device , int copies , int flush)"		1967677	0					
ANR	1967679	CompoundStatement		226:0:5507:6709	1967677	0					
ANR	1967680	IdentifierDeclStatement	"int i , t , color = 0 ;"	227:8:5517:5532	1967677	0	True				
ANR	1967681	IdentifierDecl	i		1967677	0					
ANR	1967682	IdentifierDeclType	int		1967677	0					
ANR	1967683	Identifier	i		1967677	1					
ANR	1967684	IdentifierDecl	t		1967677	1					
ANR	1967685	IdentifierDeclType	int		1967677	0					
ANR	1967686	Identifier	t		1967677	1					
ANR	1967687	IdentifierDecl	color = 0		1967677	2					
ANR	1967688	IdentifierDeclType	int		1967677	0					
ANR	1967689	Identifier	color		1967677	1					
ANR	1967690	AssignmentExpression	color = 0		1967677	2		=			
ANR	1967691	Identifier	color		1967677	0					
ANR	1967692	PrimaryExpression	0		1967677	1					
ANR	1967693	IdentifierDeclStatement	char buf [ 256 ] ;	229:4:5559:5572	1967677	1	True				
ANR	1967694	IdentifierDecl	buf [ 256 ]		1967677	0					
ANR	1967695	IdentifierDeclType	char [ 256 ]		1967677	0					
ANR	1967696	Identifier	buf		1967677	1					
ANR	1967697	PrimaryExpression	256		1967677	2					
ANR	1967698	ExpressionStatement	"sprintf ( buf , ""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"" , handle , device , copies , flush )"	230:4:5578:5679	1967677	2	True				
ANR	1967699	CallExpression	"sprintf ( buf , ""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"" , handle , device , copies , flush )"		1967677	0					
ANR	1967700	Callee	sprintf		1967677	0					
ANR	1967701	Identifier	sprintf		1967677	0					
ANR	1967702	ArgumentList	buf		1967677	1					
ANR	1967703	Argument	buf		1967677	0					
ANR	1967704	Identifier	buf		1967677	0					
ANR	1967705	Argument	"""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"""		1967677	1					
ANR	1967706	PrimaryExpression	"""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"""		1967677	0					
ANR	1967707	Argument	handle		1967677	2					
ANR	1967708	Identifier	handle		1967677	0					
ANR	1967709	Argument	device		1967677	3					
ANR	1967710	Identifier	device		1967677	0					
ANR	1967711	Argument	copies		1967677	4					
ANR	1967712	Identifier	copies		1967677	0					
ANR	1967713	Argument	flush		1967677	5					
ANR	1967714	Identifier	flush		1967677	0					
ANR	1967715	ExpressionStatement	"fprintf ( stderr , buf )"	232:4:5685:5705	1967677	3	True				
ANR	1967716	CallExpression	"fprintf ( stderr , buf )"		1967677	0					
ANR	1967717	Callee	fprintf		1967677	0					
ANR	1967718	Identifier	fprintf		1967677	0					
ANR	1967719	ArgumentList	stderr		1967677	1					
ANR	1967720	Argument	stderr		1967677	0					
ANR	1967721	Identifier	stderr		1967677	0					
ANR	1967722	Argument	buf		1967677	1					
ANR	1967723	Identifier	buf		1967677	0					
ANR	1967724	ExpressionStatement	seite ++	234:8:5722:5729	1967677	4	True				
ANR	1967725	PostIncDecOperationExpression	seite ++		1967677	0					
ANR	1967726	Identifier	seite		1967677	0					
ANR	1967727	IncDec	++		1967677	1					
ANR	1967728	ForStatement	for ( i = hoehe - 1 ; i >= 0 ; i = i - 1 )		1967677	5					
ANR	1967729	ForInit	i = hoehe - 1 ;	235:12:5743:5752	1967677	0	True				
ANR	1967730	AssignmentExpression	i = hoehe - 1		1967677	0		=			
ANR	1967731	Identifier	i		1967677	0					
ANR	1967732	AdditiveExpression	hoehe - 1		1967677	1		-			
ANR	1967733	Identifier	hoehe		1967677	0					
ANR	1967734	PrimaryExpression	1		1967677	1					
ANR	1967735	Condition	i >= 0	235:22:5753:5756	1967677	1	True				
ANR	1967736	RelationalExpression	i >= 0		1967677	0		>=			
ANR	1967737	Identifier	i		1967677	0					
ANR	1967738	PrimaryExpression	0		1967677	1					
ANR	1967739	AssignmentExpression	i = i - 1	235:27:5758:5762	1967677	2	True	=			
ANR	1967740	Identifier	i		1967677	0					
ANR	1967741	AdditiveExpression	i - 1		1967677	1		-			
ANR	1967742	Identifier	i		1967677	0					
ANR	1967743	PrimaryExpression	1		1967677	1					
ANR	1967744	CompoundStatement		10:33:256:256	1967677	3					
ANR	1967745	ForStatement	for ( t = breite - 1 ; t >= 0 ; t = t - 1 )		1967677	0					
ANR	1967746	ForInit	t = breite - 1 ;	236:20:5786:5796	1967677	0	True				
ANR	1967747	AssignmentExpression	t = breite - 1		1967677	0		=			
ANR	1967748	Identifier	t		1967677	0					
ANR	1967749	AdditiveExpression	breite - 1		1967677	1		-			
ANR	1967750	Identifier	breite		1967677	0					
ANR	1967751	PrimaryExpression	1		1967677	1					
ANR	1967752	Condition	t >= 0	236:31:5797:5800	1967677	1	True				
ANR	1967753	RelationalExpression	t >= 0		1967677	0		>=			
ANR	1967754	Identifier	t		1967677	0					
ANR	1967755	PrimaryExpression	0		1967677	1					
ANR	1967756	AssignmentExpression	t = t - 1	236:36:5802:5806	1967677	2	True	=			
ANR	1967757	Identifier	t		1967677	0					
ANR	1967758	AdditiveExpression	t - 1		1967677	1		-			
ANR	1967759	Identifier	t		1967677	0					
ANR	1967760	PrimaryExpression	1		1967677	1					
ANR	1967761	CompoundStatement		11:42:300:300	1967677	3					
ANR	1967762	IfStatement	if ( ( myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ] ) || ( myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ] ) )		1967677	0					
ANR	1967763	Condition	( myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ] ) || ( myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ] )	237:27:5837:5946	1967677	0	True				
ANR	1967764	OrExpression	( myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ] ) || ( myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ] )		1967677	0		||			
ANR	1967765	EqualityExpression	myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ]		1967677	0		!=			
ANR	1967766	ArrayIndexing	myimage [ i * myraster + t * 3 + 0 ]		1967677	0					
ANR	1967767	Identifier	myimage		1967677	0					
ANR	1967768	AdditiveExpression	i * myraster + t * 3 + 0		1967677	1		+			
ANR	1967769	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967770	Identifier	i		1967677	0					
ANR	1967771	Identifier	myraster		1967677	1					
ANR	1967772	AdditiveExpression	t * 3 + 0		1967677	1		+			
ANR	1967773	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967774	Identifier	t		1967677	0					
ANR	1967775	PrimaryExpression	3		1967677	1					
ANR	1967776	PrimaryExpression	0		1967677	1					
ANR	1967777	ArrayIndexing	myimage [ i * myraster + t * 3 + 1 ]		1967677	1					
ANR	1967778	Identifier	myimage		1967677	0					
ANR	1967779	AdditiveExpression	i * myraster + t * 3 + 1		1967677	1		+			
ANR	1967780	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967781	Identifier	i		1967677	0					
ANR	1967782	Identifier	myraster		1967677	1					
ANR	1967783	AdditiveExpression	t * 3 + 1		1967677	1		+			
ANR	1967784	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967785	Identifier	t		1967677	0					
ANR	1967786	PrimaryExpression	3		1967677	1					
ANR	1967787	PrimaryExpression	1		1967677	1					
ANR	1967788	EqualityExpression	myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ]		1967677	1		!=			
ANR	1967789	ArrayIndexing	myimage [ i * myraster + t * 3 + 1 ]		1967677	0					
ANR	1967790	Identifier	myimage		1967677	0					
ANR	1967791	AdditiveExpression	i * myraster + t * 3 + 1		1967677	1		+			
ANR	1967792	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967793	Identifier	i		1967677	0					
ANR	1967794	Identifier	myraster		1967677	1					
ANR	1967795	AdditiveExpression	t * 3 + 1		1967677	1		+			
ANR	1967796	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967797	Identifier	t		1967677	0					
ANR	1967798	PrimaryExpression	3		1967677	1					
ANR	1967799	PrimaryExpression	1		1967677	1					
ANR	1967800	ArrayIndexing	myimage [ i * myraster + t * 3 + 2 ]		1967677	1					
ANR	1967801	Identifier	myimage		1967677	0					
ANR	1967802	AdditiveExpression	i * myraster + t * 3 + 2		1967677	1		+			
ANR	1967803	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967804	Identifier	i		1967677	0					
ANR	1967805	Identifier	myraster		1967677	1					
ANR	1967806	AdditiveExpression	t * 3 + 2		1967677	1		+			
ANR	1967807	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967808	Identifier	t		1967677	0					
ANR	1967809	PrimaryExpression	3		1967677	1					
ANR	1967810	PrimaryExpression	2		1967677	1					
ANR	1967811	CompoundStatement		12:138:440:440	1967677	1					
ANR	1967812	ExpressionStatement	color = 1	238:32:5982:5989	1967677	0	True				
ANR	1967813	AssignmentExpression	color = 1		1967677	0		=			
ANR	1967814	Identifier	color		1967677	0					
ANR	1967815	PrimaryExpression	1		1967677	1					
ANR	1967816	ExpressionStatement	"fprintf ( stderr , ""Ungleich %d,%d %x,%x,%x\\n"" , i , t , myimage [ i * myraster + t * 3 + 0 ] , myimage [ i * myraster + t * 3 + 1 ] , myimage [ i * myraster + t * 3 + 2 ] )"	239:32:6023:6148	1967677	1	True				
ANR	1967817	CallExpression	"fprintf ( stderr , ""Ungleich %d,%d %x,%x,%x\\n"" , i , t , myimage [ i * myraster + t * 3 + 0 ] , myimage [ i * myraster + t * 3 + 1 ] , myimage [ i * myraster + t * 3 + 2 ] )"		1967677	0					
ANR	1967818	Callee	fprintf		1967677	0					
ANR	1967819	Identifier	fprintf		1967677	0					
ANR	1967820	ArgumentList	stderr		1967677	1					
ANR	1967821	Argument	stderr		1967677	0					
ANR	1967822	Identifier	stderr		1967677	0					
ANR	1967823	Argument	"""Ungleich %d,%d %x,%x,%x\\n"""		1967677	1					
ANR	1967824	PrimaryExpression	"""Ungleich %d,%d %x,%x,%x\\n"""		1967677	0					
ANR	1967825	Argument	i		1967677	2					
ANR	1967826	Identifier	i		1967677	0					
ANR	1967827	Argument	t		1967677	3					
ANR	1967828	Identifier	t		1967677	0					
ANR	1967829	Argument	myimage [ i * myraster + t * 3 + 0 ]		1967677	4					
ANR	1967830	ArrayIndexing	myimage [ i * myraster + t * 3 + 0 ]		1967677	0					
ANR	1967831	Identifier	myimage		1967677	0					
ANR	1967832	AdditiveExpression	i * myraster + t * 3 + 0		1967677	1		+			
ANR	1967833	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967834	Identifier	i		1967677	0					
ANR	1967835	Identifier	myraster		1967677	1					
ANR	1967836	AdditiveExpression	t * 3 + 0		1967677	1		+			
ANR	1967837	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967838	Identifier	t		1967677	0					
ANR	1967839	PrimaryExpression	3		1967677	1					
ANR	1967840	PrimaryExpression	0		1967677	1					
ANR	1967841	Argument	myimage [ i * myraster + t * 3 + 1 ]		1967677	5					
ANR	1967842	ArrayIndexing	myimage [ i * myraster + t * 3 + 1 ]		1967677	0					
ANR	1967843	Identifier	myimage		1967677	0					
ANR	1967844	AdditiveExpression	i * myraster + t * 3 + 1		1967677	1		+			
ANR	1967845	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967846	Identifier	i		1967677	0					
ANR	1967847	Identifier	myraster		1967677	1					
ANR	1967848	AdditiveExpression	t * 3 + 1		1967677	1		+			
ANR	1967849	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967850	Identifier	t		1967677	0					
ANR	1967851	PrimaryExpression	3		1967677	1					
ANR	1967852	PrimaryExpression	1		1967677	1					
ANR	1967853	Argument	myimage [ i * myraster + t * 3 + 2 ]		1967677	6					
ANR	1967854	ArrayIndexing	myimage [ i * myraster + t * 3 + 2 ]		1967677	0					
ANR	1967855	Identifier	myimage		1967677	0					
ANR	1967856	AdditiveExpression	i * myraster + t * 3 + 2		1967677	1		+			
ANR	1967857	MultiplicativeExpression	i * myraster		1967677	0		*			
ANR	1967858	Identifier	i		1967677	0					
ANR	1967859	Identifier	myraster		1967677	1					
ANR	1967860	AdditiveExpression	t * 3 + 2		1967677	1		+			
ANR	1967861	MultiplicativeExpression	t * 3		1967677	0		*			
ANR	1967862	Identifier	t		1967677	0					
ANR	1967863	PrimaryExpression	3		1967677	1					
ANR	1967864	PrimaryExpression	2		1967677	1					
ANR	1967865	GotoStatement	goto out ;	240:32:6182:6190	1967677	2	True				
ANR	1967866	Identifier	out		1967677	0					
ANR	1967867	Label	out :	244:0:6246:6249	1967677	6	True				
ANR	1967868	Identifier	out		1967677	0					
ANR	1967869	IfStatement	if ( color )		1967677	7					
ANR	1967870	Condition	color	245:11:6262:6266	1967677	0	True				
ANR	1967871	Identifier	color		1967677	0					
ANR	1967872	CompoundStatement		20:17:760:760	1967677	1					
ANR	1967873	ExpressionStatement	"fprintf ( stderr , ""[%d]Color\\n"" , seite )"	246:8:6278:6313	1967677	0	True				
ANR	1967874	CallExpression	"fprintf ( stderr , ""[%d]Color\\n"" , seite )"		1967677	0					
ANR	1967875	Callee	fprintf		1967677	0					
ANR	1967876	Identifier	fprintf		1967677	0					
ANR	1967877	ArgumentList	stderr		1967677	1					
ANR	1967878	Argument	stderr		1967677	0					
ANR	1967879	Identifier	stderr		1967677	0					
ANR	1967880	Argument	"""[%d]Color\\n"""		1967677	1					
ANR	1967881	PrimaryExpression	"""[%d]Color\\n"""		1967677	0					
ANR	1967882	Argument	seite		1967677	2					
ANR	1967883	Identifier	seite		1967677	0					
ANR	1967884	ExpressionStatement	choose = color_fd	247:8:6323:6338	1967677	1	True				
ANR	1967885	AssignmentExpression	choose = color_fd		1967677	0		=			
ANR	1967886	Identifier	choose		1967677	0					
ANR	1967887	Identifier	color_fd		1967677	1					
ANR	1967888	ElseStatement	else		1967677	0					
ANR	1967889	CompoundStatement		23:15:847:847	1967677	0					
ANR	1967890	ExpressionStatement	"fprintf ( stderr , ""[%d]Grey\\n"" , seite )"	249:8:6365:6399	1967677	0	True				
ANR	1967891	CallExpression	"fprintf ( stderr , ""[%d]Grey\\n"" , seite )"		1967677	0					
ANR	1967892	Callee	fprintf		1967677	0					
ANR	1967893	Identifier	fprintf		1967677	0					
ANR	1967894	ArgumentList	stderr		1967677	1					
ANR	1967895	Argument	stderr		1967677	0					
ANR	1967896	Identifier	stderr		1967677	0					
ANR	1967897	Argument	"""[%d]Grey\\n"""		1967677	1					
ANR	1967898	PrimaryExpression	"""[%d]Grey\\n"""		1967677	0					
ANR	1967899	Argument	seite		1967677	2					
ANR	1967900	Identifier	seite		1967677	0					
ANR	1967901	ExpressionStatement	choose = black_fd	250:8:6409:6424	1967677	1	True				
ANR	1967902	AssignmentExpression	choose = black_fd		1967677	0		=			
ANR	1967903	Identifier	choose		1967677	0					
ANR	1967904	Identifier	black_fd		1967677	1					
ANR	1967905	ReturnStatement	return 0 ;	263:4:6699:6707	1967677	8	True				
ANR	1967906	PrimaryExpression	0		1967677	0					
ANR	1967907	ReturnType	static int		1967677	1					
ANR	1967908	Identifier	display_page		1967677	2					
ANR	1967909	ParameterList	"void * handle , void * device , int copies , int flush"		1967677	3					
ANR	1967910	Parameter	void * handle	225:24:5456:5467	1967677	0	True				
ANR	1967911	ParameterType	void *		1967677	0					
ANR	1967912	Identifier	handle		1967677	1					
ANR	1967913	Parameter	void * device	225:38:5470:5481	1967677	1	True				
ANR	1967914	ParameterType	void *		1967677	0					
ANR	1967915	Identifier	device		1967677	1					
ANR	1967916	Parameter	int copies	225:52:5484:5493	1967677	2	True				
ANR	1967917	ParameterType	int		1967677	0					
ANR	1967918	Identifier	copies		1967677	1					
ANR	1967919	Parameter	int flush	225:64:5496:5504	1967677	3	True				
ANR	1967920	ParameterType	int		1967677	0					
ANR	1967921	Identifier	flush		1967677	1					
ANR	1967922	CFGEntryNode	ENTRY		1967677		True				
ANR	1967923	CFGExitNode	EXIT		1967677		True				
ANR	1967924	Symbol	black_fd		1967677						
ANR	1967925	Symbol	color		1967677						
ANR	1967926	Symbol	* myimage		1967677						
ANR	1967927	Symbol	i		1967677						
ANR	1967928	Symbol	handle		1967677						
ANR	1967929	Symbol	choose		1967677						
ANR	1967930	Symbol	stderr		1967677						
ANR	1967931	Symbol	seite		1967677						
ANR	1967932	Symbol	myraster		1967677						
ANR	1967933	Symbol	buf		1967677						
ANR	1967934	Symbol	copies		1967677						
ANR	1967935	Symbol	* i		1967677						
ANR	1967936	Symbol	myimage		1967677						
ANR	1967937	Symbol	flush		1967677						
ANR	1967938	Symbol	t		1967677						
ANR	1967939	Symbol	breite		1967677						
ANR	1967940	Symbol	hoehe		1967677						
ANR	1967941	Symbol	device		1967677						
ANR	1967942	Symbol	* t		1967677						
ANR	1967943	Symbol	* myraster		1967677						
ANR	1967944	Symbol	color_fd		1967677						
ANR	1967945	Function	display_update	268:0:6818:6920							
ANR	1967946	FunctionDef	"display_update (void * handle , void * device , int x , int y , int w , int h)"		1967945	0					
ANR	1967947	CompoundStatement		270:0:6904:6920	1967945	0					
ANR	1967948	ReturnStatement	return 0 ;	271:4:6910:6918	1967945	0	True				
ANR	1967949	PrimaryExpression	0		1967945	0					
ANR	1967950	ReturnType	static int		1967945	1					
ANR	1967951	Identifier	display_update		1967945	2					
ANR	1967952	ParameterList	"void * handle , void * device , int x , int y , int w , int h"		1967945	3					
ANR	1967953	Parameter	void * handle	268:26:6844:6855	1967945	0	True				
ANR	1967954	ParameterType	void *		1967945	0					
ANR	1967955	Identifier	handle		1967945	1					
ANR	1967956	Parameter	void * device	268:40:6858:6869	1967945	1	True				
ANR	1967957	ParameterType	void *		1967945	0					
ANR	1967958	Identifier	device		1967945	1					
ANR	1967959	Parameter	int x	269:4:6876:6880	1967945	2	True				
ANR	1967960	ParameterType	int		1967945	0					
ANR	1967961	Identifier	x		1967945	1					
ANR	1967962	Parameter	int y	269:11:6883:6887	1967945	3	True				
ANR	1967963	ParameterType	int		1967945	0					
ANR	1967964	Identifier	y		1967945	1					
ANR	1967965	Parameter	int w	269:18:6890:6894	1967945	4	True				
ANR	1967966	ParameterType	int		1967945	0					
ANR	1967967	Identifier	w		1967945	1					
ANR	1967968	Parameter	int h	269:25:6897:6901	1967945	5	True				
ANR	1967969	ParameterType	int		1967945	0					
ANR	1967970	Identifier	h		1967945	1					
ANR	1967971	CFGEntryNode	ENTRY		1967945		True				
ANR	1967972	CFGExitNode	EXIT		1967945		True				
ANR	1967973	Symbol	w		1967945						
ANR	1967974	Symbol	x		1967945						
ANR	1967975	Symbol	h		1967945						
ANR	1967976	Symbol	y		1967945						
ANR	1967977	Symbol	handle		1967945						
ANR	1967978	Symbol	device		1967945						
ANR	1967979	DeclStmt									
ANR	1967980	Decl							display_callback	display_callback	display
ANR	1967981	DeclStmt									
ANR	1967982	Decl							gs_main_instance	gs_main_instance *	minst
ANR	1967983	DeclStmt									
ANR	1967984	Decl							const char	const char [ ]	start_string
ANR	1967985	Function	main	293:0:7335:8680							
ANR	1967986	FunctionDef	"main (int argc , char * argv [ ])"		1967985	0					
ANR	1967987	CompoundStatement		294:0:7368:8680	1967985	0					
ANR	1967988	IdentifierDeclStatement	int code ;	295:4:7374:7382	1967985	0	True				
ANR	1967989	IdentifierDecl	code		1967985	0					
ANR	1967990	IdentifierDeclType	int		1967985	0					
ANR	1967991	Identifier	code		1967985	1					
ANR	1967992	IdentifierDeclStatement	const char * gsargv [ 12 ] ;	296:4:7388:7411	1967985	1	True				
ANR	1967993	IdentifierDecl	* gsargv [ 12 ]		1967985	0					
ANR	1967994	IdentifierDeclType	const char * [ 12 ]		1967985	0					
ANR	1967995	Identifier	gsargv		1967985	1					
ANR	1967996	PrimaryExpression	12		1967985	2					
ANR	1967997	IdentifierDeclStatement	char arg [ 64 ] ;	297:4:7417:7429	1967985	2	True				
ANR	1967998	IdentifierDecl	arg [ 64 ]		1967985	0					
ANR	1967999	IdentifierDeclType	char [ 64 ]		1967985	0					
ANR	1968000	Identifier	arg		1967985	1					
ANR	1968001	PrimaryExpression	64		1967985	2					
ANR	1968002	IdentifierDeclStatement	int gsargc ;	298:4:7435:7445	1967985	3	True				
ANR	1968003	IdentifierDecl	gsargc		1967985	0					
ANR	1968004	IdentifierDeclType	int		1967985	0					
ANR	1968005	Identifier	gsargc		1967985	1					
ANR	1968006	ExpressionStatement	"gsargv [ 0 ] = ""ps2colordetect"""	299:4:7451:7479	1967985	4	True				
ANR	1968007	AssignmentExpression	"gsargv [ 0 ] = ""ps2colordetect"""		1967985	0		=			
ANR	1968008	ArrayIndexing	gsargv [ 0 ]		1967985	0					
ANR	1968009	Identifier	gsargv		1967985	0					
ANR	1968010	PrimaryExpression	0		1967985	1					
ANR	1968011	PrimaryExpression	"""ps2colordetect"""		1967985	1					
ANR	1968012	ExpressionStatement	"gsargv [ 1 ] = ""-dNOPAUSE"""	300:4:7519:7542	1967985	5	True				
ANR	1968013	AssignmentExpression	"gsargv [ 1 ] = ""-dNOPAUSE"""		1967985	0		=			
ANR	1968014	ArrayIndexing	gsargv [ 1 ]		1967985	0					
ANR	1968015	Identifier	gsargv		1967985	0					
ANR	1968016	PrimaryExpression	1		1967985	1					
ANR	1968017	PrimaryExpression	"""-dNOPAUSE"""		1967985	1					
ANR	1968018	ExpressionStatement	"gsargv [ 2 ] = ""-dBATCH"""	301:4:7548:7569	1967985	6	True				
ANR	1968019	AssignmentExpression	"gsargv [ 2 ] = ""-dBATCH"""		1967985	0		=			
ANR	1968020	ArrayIndexing	gsargv [ 2 ]		1967985	0					
ANR	1968021	Identifier	gsargv		1967985	0					
ANR	1968022	PrimaryExpression	2		1967985	1					
ANR	1968023	PrimaryExpression	"""-dBATCH"""		1967985	1					
ANR	1968024	ExpressionStatement	"gsargv [ 3 ] = ""-dSAFER"""	302:4:7575:7596	1967985	7	True				
ANR	1968025	AssignmentExpression	"gsargv [ 3 ] = ""-dSAFER"""		1967985	0		=			
ANR	1968026	ArrayIndexing	gsargv [ 3 ]		1967985	0					
ANR	1968027	Identifier	gsargv		1967985	0					
ANR	1968028	PrimaryExpression	3		1967985	1					
ANR	1968029	PrimaryExpression	"""-dSAFER"""		1967985	1					
ANR	1968030	ExpressionStatement	"gsargv [ 4 ] = ""-sDEVICE=display"""	304:4:7641:7671	1967985	8	True				
ANR	1968031	AssignmentExpression	"gsargv [ 4 ] = ""-sDEVICE=display"""		1967985	0		=			
ANR	1968032	ArrayIndexing	gsargv [ 4 ]		1967985	0					
ANR	1968033	Identifier	gsargv		1967985	0					
ANR	1968034	PrimaryExpression	4		1967985	1					
ANR	1968035	PrimaryExpression	"""-sDEVICE=display"""		1967985	1					
ANR	1968036	ExpressionStatement	"gsargv [ 5 ] = ""-dDisplayHandle=0"""	305:4:7677:7708	1967985	9	True				
ANR	1968037	AssignmentExpression	"gsargv [ 5 ] = ""-dDisplayHandle=0"""		1967985	0		=			
ANR	1968038	ArrayIndexing	gsargv [ 5 ]		1967985	0					
ANR	1968039	Identifier	gsargv		1967985	0					
ANR	1968040	PrimaryExpression	5		1967985	1					
ANR	1968041	PrimaryExpression	"""-dDisplayHandle=0"""		1967985	1					
ANR	1968042	ExpressionStatement	"sprintf ( arg , ""-dDisplayFormat=%d"" , DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST )"	306:4:7714:7842	1967985	10	True				
ANR	1968043	CallExpression	"sprintf ( arg , ""-dDisplayFormat=%d"" , DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST )"		1967985	0					
ANR	1968044	Callee	sprintf		1967985	0					
ANR	1968045	Identifier	sprintf		1967985	0					
ANR	1968046	ArgumentList	arg		1967985	1					
ANR	1968047	Argument	arg		1967985	0					
ANR	1968048	Identifier	arg		1967985	0					
ANR	1968049	Argument	"""-dDisplayFormat=%d"""		1967985	1					
ANR	1968050	PrimaryExpression	"""-dDisplayFormat=%d"""		1967985	0					
ANR	1968051	Argument	DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		1967985	2					
ANR	1968052	InclusiveOrExpression	DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		1967985	0		|			
ANR	1968053	Identifier	DISPLAY_COLORS_RGB		1967985	0					
ANR	1968054	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		1967985	1		|			
ANR	1968055	Identifier	DISPLAY_ALPHA_NONE		1967985	0					
ANR	1968056	InclusiveOrExpression	DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		1967985	1		|			
ANR	1968057	Identifier	DISPLAY_DEPTH_8		1967985	0					
ANR	1968058	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		1967985	1		|			
ANR	1968059	Identifier	DISPLAY_LITTLEENDIAN		1967985	0					
ANR	1968060	Identifier	DISPLAY_BOTTOMFIRST		1967985	1					
ANR	1968061	ExpressionStatement	gsargv [ 6 ] = arg	307:4:7848:7863	1967985	11	True				
ANR	1968062	AssignmentExpression	gsargv [ 6 ] = arg		1967985	0		=			
ANR	1968063	ArrayIndexing	gsargv [ 6 ]		1967985	0					
ANR	1968064	Identifier	gsargv		1967985	0					
ANR	1968065	PrimaryExpression	6		1967985	1					
ANR	1968066	Identifier	arg		1967985	1					
ANR	1968067	ExpressionStatement	"gsargv [ 7 ] = ""-sOutputFile=out.pdf"""	308:4:7869:7903	1967985	12	True				
ANR	1968068	AssignmentExpression	"gsargv [ 7 ] = ""-sOutputFile=out.pdf"""		1967985	0		=			
ANR	1968069	ArrayIndexing	gsargv [ 7 ]		1967985	0					
ANR	1968070	Identifier	gsargv		1967985	0					
ANR	1968071	PrimaryExpression	7		1967985	1					
ANR	1968072	PrimaryExpression	"""-sOutputFile=out.pdf"""		1967985	1					
ANR	1968073	ExpressionStatement	"gsargv [ 8 ] = ""-c"""	309:4:7909:7925	1967985	13	True				
ANR	1968074	AssignmentExpression	"gsargv [ 8 ] = ""-c"""		1967985	0		=			
ANR	1968075	ArrayIndexing	gsargv [ 8 ]		1967985	0					
ANR	1968076	Identifier	gsargv		1967985	0					
ANR	1968077	PrimaryExpression	8		1967985	1					
ANR	1968078	PrimaryExpression	"""-c"""		1967985	1					
ANR	1968079	ExpressionStatement	"gsargv [ 9 ] = "".setpdfwrite"""	310:4:7931:7957	1967985	14	True				
ANR	1968080	AssignmentExpression	"gsargv [ 9 ] = "".setpdfwrite"""		1967985	0		=			
ANR	1968081	ArrayIndexing	gsargv [ 9 ]		1967985	0					
ANR	1968082	Identifier	gsargv		1967985	0					
ANR	1968083	PrimaryExpression	9		1967985	1					
ANR	1968084	PrimaryExpression	""".setpdfwrite"""		1967985	1					
ANR	1968085	ExpressionStatement	"gsargv [ 10 ] = ""-f"""	311:4:7963:7980	1967985	15	True				
ANR	1968086	AssignmentExpression	"gsargv [ 10 ] = ""-f"""		1967985	0		=			
ANR	1968087	ArrayIndexing	gsargv [ 10 ]		1967985	0					
ANR	1968088	Identifier	gsargv		1967985	0					
ANR	1968089	PrimaryExpression	10		1967985	1					
ANR	1968090	PrimaryExpression	"""-f"""		1967985	1					
ANR	1968091	ExpressionStatement	"gsargv [ 11 ] = ""-"""	313:4:8017:8033	1967985	16	True				
ANR	1968092	AssignmentExpression	"gsargv [ 11 ] = ""-"""		1967985	0		=			
ANR	1968093	ArrayIndexing	gsargv [ 11 ]		1967985	0					
ANR	1968094	Identifier	gsargv		1967985	0					
ANR	1968095	PrimaryExpression	11		1967985	1					
ANR	1968096	PrimaryExpression	"""-"""		1967985	1					
ANR	1968097	ExpressionStatement	gsargc = 12	314:4:8039:8048	1967985	17	True				
ANR	1968098	AssignmentExpression	gsargc = 12		1967985	0		=			
ANR	1968099	Identifier	gsargc		1967985	0					
ANR	1968100	PrimaryExpression	12		1967985	1					
ANR	1968101	ExpressionStatement	"code = gsapi_new_instance ( & minst , NULL )"	316:4:8055:8094	1967985	18	True				
ANR	1968102	AssignmentExpression	"code = gsapi_new_instance ( & minst , NULL )"		1967985	0		=			
ANR	1968103	Identifier	code		1967985	0					
ANR	1968104	CallExpression	"gsapi_new_instance ( & minst , NULL )"		1967985	1					
ANR	1968105	Callee	gsapi_new_instance		1967985	0					
ANR	1968106	Identifier	gsapi_new_instance		1967985	0					
ANR	1968107	ArgumentList	& minst		1967985	1					
ANR	1968108	Argument	& minst		1967985	0					
ANR	1968109	UnaryOperationExpression	& minst		1967985	0					
ANR	1968110	UnaryOperator	&		1967985	0					
ANR	1968111	Identifier	minst		1967985	1					
ANR	1968112	Argument	NULL		1967985	1					
ANR	1968113	Identifier	NULL		1967985	0					
ANR	1968114	IfStatement	if ( code < 0 )		1967985	19					
ANR	1968115	Condition	code < 0	317:8:8104:8111	1967985	0	True				
ANR	1968116	RelationalExpression	code < 0		1967985	0		<			
ANR	1968117	Identifier	code		1967985	0					
ANR	1968118	PrimaryExpression	0		1967985	1					
ANR	1968119	ReturnStatement	return 1 ;	318:8:8122:8130	1967985	1	True				
ANR	1968120	PrimaryExpression	1		1967985	0					
ANR	1968121	ExpressionStatement	"gsapi_set_stdio ( minst , gsdll_stdin , gsdll_stdout , gsdll_stderr )"	319:4:8136:8199	1967985	20	True				
ANR	1968122	CallExpression	"gsapi_set_stdio ( minst , gsdll_stdin , gsdll_stdout , gsdll_stderr )"		1967985	0					
ANR	1968123	Callee	gsapi_set_stdio		1967985	0					
ANR	1968124	Identifier	gsapi_set_stdio		1967985	0					
ANR	1968125	ArgumentList	minst		1967985	1					
ANR	1968126	Argument	minst		1967985	0					
ANR	1968127	Identifier	minst		1967985	0					
ANR	1968128	Argument	gsdll_stdin		1967985	1					
ANR	1968129	Identifier	gsdll_stdin		1967985	0					
ANR	1968130	Argument	gsdll_stdout		1967985	2					
ANR	1968131	Identifier	gsdll_stdout		1967985	0					
ANR	1968132	Argument	gsdll_stderr		1967985	3					
ANR	1968133	Identifier	gsdll_stderr		1967985	0					
ANR	1968134	ExpressionStatement	"gsapi_set_display_callback ( minst , & display )"	320:4:8205:8248	1967985	21	True				
ANR	1968135	CallExpression	"gsapi_set_display_callback ( minst , & display )"		1967985	0					
ANR	1968136	Callee	gsapi_set_display_callback		1967985	0					
ANR	1968137	Identifier	gsapi_set_display_callback		1967985	0					
ANR	1968138	ArgumentList	minst		1967985	1					
ANR	1968139	Argument	minst		1967985	0					
ANR	1968140	Identifier	minst		1967985	0					
ANR	1968141	Argument	& display		1967985	1					
ANR	1968142	UnaryOperationExpression	& display		1967985	0					
ANR	1968143	UnaryOperator	&		1967985	0					
ANR	1968144	Identifier	display		1967985	1					
ANR	1968145	ExpressionStatement	"color_fd = gp_fopen ( ""color.ps"" , ""wb"" )"	322:8:8259:8293	1967985	22	True				
ANR	1968146	AssignmentExpression	"color_fd = gp_fopen ( ""color.ps"" , ""wb"" )"		1967985	0		=			
ANR	1968147	Identifier	color_fd		1967985	0					
ANR	1968148	CallExpression	"gp_fopen ( ""color.ps"" , ""wb"" )"		1967985	1					
ANR	1968149	Callee	gp_fopen		1967985	0					
ANR	1968150	Identifier	gp_fopen		1967985	0					
ANR	1968151	ArgumentList	"""color.ps"""		1967985	1					
ANR	1968152	Argument	"""color.ps"""		1967985	0					
ANR	1968153	PrimaryExpression	"""color.ps"""		1967985	0					
ANR	1968154	Argument	"""wb"""		1967985	1					
ANR	1968155	PrimaryExpression	"""wb"""		1967985	0					
ANR	1968156	ExpressionStatement	"black_fd = gp_fopen ( ""black.ps"" , ""wb"" )"	323:8:8303:8337	1967985	23	True				
ANR	1968157	AssignmentExpression	"black_fd = gp_fopen ( ""black.ps"" , ""wb"" )"		1967985	0		=			
ANR	1968158	Identifier	black_fd		1967985	0					
ANR	1968159	CallExpression	"gp_fopen ( ""black.ps"" , ""wb"" )"		1967985	1					
ANR	1968160	Callee	gp_fopen		1967985	0					
ANR	1968161	Identifier	gp_fopen		1967985	0					
ANR	1968162	ArgumentList	"""black.ps"""		1967985	1					
ANR	1968163	Argument	"""black.ps"""		1967985	0					
ANR	1968164	PrimaryExpression	"""black.ps"""		1967985	0					
ANR	1968165	Argument	"""wb"""		1967985	1					
ANR	1968166	PrimaryExpression	"""wb"""		1967985	0					
ANR	1968167	ExpressionStatement	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"	324:8:8347:8379	1967985	24	True				
ANR	1968168	AssignmentExpression	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"		1967985	0		=			
ANR	1968169	Identifier	temp_fd		1967985	0					
ANR	1968170	CallExpression	"gp_fopen ( ""temp.ps"" , ""wb"" )"		1967985	1					
ANR	1968171	Callee	gp_fopen		1967985	0					
ANR	1968172	Identifier	gp_fopen		1967985	0					
ANR	1968173	ArgumentList	"""temp.ps"""		1967985	1					
ANR	1968174	Argument	"""temp.ps"""		1967985	0					
ANR	1968175	PrimaryExpression	"""temp.ps"""		1967985	0					
ANR	1968176	Argument	"""wb"""		1967985	1					
ANR	1968177	PrimaryExpression	"""wb"""		1967985	0					
ANR	1968178	ExpressionStatement	choose = black_fd	325:8:8389:8404	1967985	25	True				
ANR	1968179	AssignmentExpression	choose = black_fd		1967985	0		=			
ANR	1968180	Identifier	choose		1967985	0					
ANR	1968181	Identifier	black_fd		1967985	1					
ANR	1968182	ExpressionStatement	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"	327:4:8411:8461	1967985	26	True				
ANR	1968183	AssignmentExpression	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"		1967985	0		=			
ANR	1968184	Identifier	code		1967985	0					
ANR	1968185	CallExpression	"gsapi_init_with_args ( minst , gsargc , gsargv )"		1967985	1					
ANR	1968186	Callee	gsapi_init_with_args		1967985	0					
ANR	1968187	Identifier	gsapi_init_with_args		1967985	0					
ANR	1968188	ArgumentList	minst		1967985	1					
ANR	1968189	Argument	minst		1967985	0					
ANR	1968190	Identifier	minst		1967985	0					
ANR	1968191	Argument	gsargc		1967985	1					
ANR	1968192	Identifier	gsargc		1967985	0					
ANR	1968193	Argument	gsargv		1967985	2					
ANR	1968194	Identifier	gsargv		1967985	0					
ANR	1968195	ExpressionStatement	gsapi_exit ( minst )	328:4:8467:8484	1967985	27	True				
ANR	1968196	CallExpression	gsapi_exit ( minst )		1967985	0					
ANR	1968197	Callee	gsapi_exit		1967985	0					
ANR	1968198	Identifier	gsapi_exit		1967985	0					
ANR	1968199	ArgumentList	minst		1967985	1					
ANR	1968200	Argument	minst		1967985	0					
ANR	1968201	Identifier	minst		1967985	0					
ANR	1968202	ExpressionStatement	gsapi_delete_instance ( minst )	330:4:8491:8519	1967985	28	True				
ANR	1968203	CallExpression	gsapi_delete_instance ( minst )		1967985	0					
ANR	1968204	Callee	gsapi_delete_instance		1967985	0					
ANR	1968205	Identifier	gsapi_delete_instance		1967985	0					
ANR	1968206	ArgumentList	minst		1967985	1					
ANR	1968207	Argument	minst		1967985	0					
ANR	1968208	Identifier	minst		1967985	0					
ANR	1968209	ExpressionStatement	fclose ( color_fd )	332:8:8530:8546	1967985	29	True				
ANR	1968210	CallExpression	fclose ( color_fd )		1967985	0					
ANR	1968211	Callee	fclose		1967985	0					
ANR	1968212	Identifier	fclose		1967985	0					
ANR	1968213	ArgumentList	color_fd		1967985	1					
ANR	1968214	Argument	color_fd		1967985	0					
ANR	1968215	Identifier	color_fd		1967985	0					
ANR	1968216	ExpressionStatement	fclose ( black_fd )	333:8:8556:8572	1967985	30	True				
ANR	1968217	CallExpression	fclose ( black_fd )		1967985	0					
ANR	1968218	Callee	fclose		1967985	0					
ANR	1968219	Identifier	fclose		1967985	0					
ANR	1968220	ArgumentList	black_fd		1967985	1					
ANR	1968221	Argument	black_fd		1967985	0					
ANR	1968222	Identifier	black_fd		1967985	0					
ANR	1968223	ExpressionStatement	fclose ( temp_fd )	334:8:8582:8597	1967985	31	True				
ANR	1968224	CallExpression	fclose ( temp_fd )		1967985	0					
ANR	1968225	Callee	fclose		1967985	0					
ANR	1968226	Identifier	fclose		1967985	0					
ANR	1968227	ArgumentList	temp_fd		1967985	1					
ANR	1968228	Argument	temp_fd		1967985	0					
ANR	1968229	Identifier	temp_fd		1967985	0					
ANR	1968230	IfStatement	if ( ( code == 0 ) || ( code == gs_error_Quit ) )		1967985	32					
ANR	1968231	Condition	( code == 0 ) || ( code == gs_error_Quit )	336:8:8608:8645	1967985	0	True				
ANR	1968232	OrExpression	( code == 0 ) || ( code == gs_error_Quit )		1967985	0		||			
ANR	1968233	EqualityExpression	code == 0		1967985	0		==			
ANR	1968234	Identifier	code		1967985	0					
ANR	1968235	PrimaryExpression	0		1967985	1					
ANR	1968236	EqualityExpression	code == gs_error_Quit		1967985	1		==			
ANR	1968237	Identifier	code		1967985	0					
ANR	1968238	Identifier	gs_error_Quit		1967985	1					
ANR	1968239	ReturnStatement	return 0 ;	337:8:8656:8664	1967985	1	True				
ANR	1968240	PrimaryExpression	0		1967985	0					
ANR	1968241	ReturnStatement	return 1 ;	338:4:8670:8678	1967985	33	True				
ANR	1968242	PrimaryExpression	1		1967985	0					
ANR	1968243	ReturnType	int		1967985	1					
ANR	1968244	Identifier	main		1967985	2					
ANR	1968245	ParameterList	"int argc , char * argv [ ]"		1967985	3					
ANR	1968246	Parameter	int argc	293:9:7344:7351	1967985	0	True				
ANR	1968247	ParameterType	int		1967985	0					
ANR	1968248	Identifier	argc		1967985	1					
ANR	1968249	Parameter	char * argv [ ]	293:19:7354:7365	1967985	1	True				
ANR	1968250	ParameterType	char * [ ]		1967985	0					
ANR	1968251	Identifier	argv		1967985	1					
ANR	1968252	CFGEntryNode	ENTRY		1967985		True				
ANR	1968253	CFGExitNode	EXIT		1967985		True				
ANR	1968254	Symbol	& minst		1967985						
ANR	1968255	Symbol	black_fd		1967985						
ANR	1968256	Symbol	minst		1967985						
ANR	1968257	Symbol	code		1967985						
ANR	1968258	Symbol	gsdll_stdin		1967985						
ANR	1968259	Symbol	gsargv		1967985						
ANR	1968260	Symbol	choose		1967985						
ANR	1968261	Symbol	DISPLAY_LITTLEENDIAN		1967985						
ANR	1968262	Symbol	gsdll_stderr		1967985						
ANR	1968263	Symbol	argv		1967985						
ANR	1968264	Symbol	gsapi_new_instance		1967985						
ANR	1968265	Symbol	arg		1967985						
ANR	1968266	Symbol	gsapi_init_with_args		1967985						
ANR	1968267	Symbol	gp_fopen		1967985						
ANR	1968268	Symbol	color_fd		1967985						
ANR	1968269	Symbol	argc		1967985						
ANR	1968270	Symbol	DISPLAY_DEPTH_8		1967985						
ANR	1968271	Symbol	gs_error_Quit		1967985						
ANR	1968272	Symbol	NULL		1967985						
ANR	1968273	Symbol	temp_fd		1967985						
ANR	1968274	Symbol	DISPLAY_COLORS_RGB		1967985						
ANR	1968275	Symbol	gsdll_stdout		1967985						
ANR	1968276	Symbol	& display		1967985						
ANR	1968277	Symbol	gsargc		1967985						
ANR	1968278	Symbol	* gsargv		1967985						
ANR	1968279	Symbol	DISPLAY_BOTTOMFIRST		1967985						
ANR	1968280	Symbol	DISPLAY_ALPHA_NONE		1967985						
