command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5196380	File	data/converged/CVE-2018-16863_ghostpdl/gsimpath.c								
ANR	5196381	ClassDef	<unnamed>	26:8:852:1179							
ANR	5196382	DeclStmt									
ANR	5196383	Decl							gs_gstate	gs_gstate *	pgs
ANR	5196384	DeclStmt									
ANR	5196385	Decl							const byte	const byte *	data
ANR	5196386	DeclStmt									
ANR	5196387	Decl							int	int	width
ANR	5196388	Decl							int	int	height
ANR	5196389	Decl							int	int	raster
ANR	5196390	DeclStmt									
ANR	5196391	Decl							int	int	dx
ANR	5196392	Decl							int	int	dy
ANR	5196393	DeclStmt									
ANR	5196394	Decl							int	int	count
ANR	5196395	DeclStmt									
ANR	5196396	Decl									status
ANR	5196397	DeclStmt									
ANR	5196398	Decl							int	"int ( const status * , int , int )"	get_pixel
ANR	5196399	DeclStmt									
ANR	5196400	Decl							int	"int ( status * , int , int , int )"	trace_from
ANR	5196401	DeclStmt									
ANR	5196402	Decl							int	"int ( status * , int , int , int )"	add_dxdy
ANR	5196403	Function	gs_imagepath	48:52:1613:2804							
ANR	5196404	FunctionDef	"gs_imagepath (gs_gstate * pgs , int width , int height , const byte * data)"		5196403	0					
ANR	5196405	CompoundStatement		52:0:1761:2804	5196403	0					
ANR	5196406	IdentifierDeclStatement	status stat ;	53:4:1767:1778	5196403	0	True				
ANR	5196407	IdentifierDecl	stat		5196403	0					
ANR	5196408	IdentifierDeclType	status		5196403	0					
ANR	5196409	Identifier	stat		5196403	1					
ANR	5196410	IdentifierDeclStatement	status * out = & stat ;	54:4:1784:1803	5196403	1	True				
ANR	5196411	IdentifierDecl	* out = & stat		5196403	0					
ANR	5196412	IdentifierDeclType	status *		5196403	0					
ANR	5196413	Identifier	out		5196403	1					
ANR	5196414	AssignmentExpression	* out = & stat		5196403	2		=			
ANR	5196415	Identifier	out		5196403	0					
ANR	5196416	UnaryOperationExpression	& stat		5196403	1					
ANR	5196417	UnaryOperator	&		5196403	0					
ANR	5196418	Identifier	stat		5196403	1					
ANR	5196419	IdentifierDeclStatement	"int code , x , y ;"	55:4:1809:1823	5196403	2	True				
ANR	5196420	IdentifierDecl	code		5196403	0					
ANR	5196421	IdentifierDeclType	int		5196403	0					
ANR	5196422	Identifier	code		5196403	1					
ANR	5196423	IdentifierDecl	x		5196403	1					
ANR	5196424	IdentifierDeclType	int		5196403	0					
ANR	5196425	Identifier	x		5196403	1					
ANR	5196426	IdentifierDecl	y		5196403	2					
ANR	5196427	IdentifierDeclType	int		5196403	0					
ANR	5196428	Identifier	y		5196403	1					
ANR	5196429	ExpressionStatement	stat . pgs = pgs	58:4:1862:1876	5196403	3	True				
ANR	5196430	AssignmentExpression	stat . pgs = pgs		5196403	0		=			
ANR	5196431	MemberAccess	stat . pgs		5196403	0					
ANR	5196432	Identifier	stat		5196403	0					
ANR	5196433	Identifier	pgs		5196403	1					
ANR	5196434	Identifier	pgs		5196403	1					
ANR	5196435	ExpressionStatement	stat . data = data	59:4:1882:1898	5196403	4	True				
ANR	5196436	AssignmentExpression	stat . data = data		5196403	0		=			
ANR	5196437	MemberAccess	stat . data		5196403	0					
ANR	5196438	Identifier	stat		5196403	0					
ANR	5196439	Identifier	data		5196403	1					
ANR	5196440	Identifier	data		5196403	1					
ANR	5196441	ExpressionStatement	stat . width = width	60:4:1904:1922	5196403	5	True				
ANR	5196442	AssignmentExpression	stat . width = width		5196403	0		=			
ANR	5196443	MemberAccess	stat . width		5196403	0					
ANR	5196444	Identifier	stat		5196403	0					
ANR	5196445	Identifier	width		5196403	1					
ANR	5196446	Identifier	width		5196403	1					
ANR	5196447	ExpressionStatement	stat . height = height	61:4:1928:1948	5196403	6	True				
ANR	5196448	AssignmentExpression	stat . height = height		5196403	0		=			
ANR	5196449	MemberAccess	stat . height		5196403	0					
ANR	5196450	Identifier	stat		5196403	0					
ANR	5196451	Identifier	height		5196403	1					
ANR	5196452	Identifier	height		5196403	1					
ANR	5196453	ExpressionStatement	stat . raster = ( width + 7 ) / 8	62:4:1954:1983	5196403	7	True				
ANR	5196454	AssignmentExpression	stat . raster = ( width + 7 ) / 8		5196403	0		=			
ANR	5196455	MemberAccess	stat . raster		5196403	0					
ANR	5196456	Identifier	stat		5196403	0					
ANR	5196457	Identifier	raster		5196403	1					
ANR	5196458	MultiplicativeExpression	( width + 7 ) / 8		5196403	1		/			
ANR	5196459	AdditiveExpression	width + 7		5196403	0		+			
ANR	5196460	Identifier	width		5196403	0					
ANR	5196461	PrimaryExpression	7		5196403	1					
ANR	5196462	PrimaryExpression	8		5196403	1					
ANR	5196463	ForStatement	for ( y = height - 1 ; y >= 0 ; y -- )		5196403	8					
ANR	5196464	ForInit	y = height - 1 ;	65:9:2137:2151	5196403	0	True				
ANR	5196465	AssignmentExpression	y = height - 1		5196403	0		=			
ANR	5196466	Identifier	y		5196403	0					
ANR	5196467	AdditiveExpression	height - 1		5196403	1		-			
ANR	5196468	Identifier	height		5196403	0					
ANR	5196469	PrimaryExpression	1		5196403	1					
ANR	5196470	Condition	y >= 0	65:25:2153:2158	5196403	1	True				
ANR	5196471	RelationalExpression	y >= 0		5196403	0		>=			
ANR	5196472	Identifier	y		5196403	0					
ANR	5196473	PrimaryExpression	0		5196403	1					
ANR	5196474	PostIncDecOperationExpression	y --	65:33:2161:2163	5196403	2	True				
ANR	5196475	Identifier	y		5196403	0					
ANR	5196476	IncDec	--		5196403	1					
ANR	5196477	ForStatement	for ( x = width - 1 ; x >= 0 ; x -- )		5196403	3					
ANR	5196478	ForInit	x = width - 1 ;	66:13:2179:2192	5196403	0	True				
ANR	5196479	AssignmentExpression	x = width - 1		5196403	0		=			
ANR	5196480	Identifier	x		5196403	0					
ANR	5196481	AdditiveExpression	width - 1		5196403	1		-			
ANR	5196482	Identifier	width		5196403	0					
ANR	5196483	PrimaryExpression	1		5196403	1					
ANR	5196484	Condition	x >= 0	66:28:2194:2199	5196403	1	True				
ANR	5196485	RelationalExpression	x >= 0		5196403	0		>=			
ANR	5196486	Identifier	x		5196403	0					
ANR	5196487	PrimaryExpression	0		5196403	1					
ANR	5196488	PostIncDecOperationExpression	x --	66:36:2202:2204	5196403	2	True				
ANR	5196489	Identifier	x		5196403	0					
ANR	5196490	IncDec	--		5196403	1					
ANR	5196491	CompoundStatement		15:41:445:445	5196403	3					
ANR	5196492	IfStatement	"if ( get_pixel ( out , x , y ) && ! get_pixel ( out , x , y - 1 ) && ( ! get_pixel ( out , x + 1 , y ) || get_pixel ( out , x + 1 , y - 1 ) ) && ! trace_from ( out , x , y , 1 ) )"		5196403	0					
ANR	5196493	Condition	"get_pixel ( out , x , y ) && ! get_pixel ( out , x , y - 1 ) && ( ! get_pixel ( out , x + 1 , y ) || get_pixel ( out , x + 1 , y - 1 ) ) && ! trace_from ( out , x , y , 1 )"	67:16:2225:2395	5196403	0	True				
ANR	5196494	AndExpression	"get_pixel ( out , x , y ) && ! get_pixel ( out , x , y - 1 ) && ( ! get_pixel ( out , x + 1 , y ) || get_pixel ( out , x + 1 , y - 1 ) ) && ! trace_from ( out , x , y , 1 )"		5196403	0		&&			
ANR	5196495	CallExpression	"get_pixel ( out , x , y )"		5196403	0					
ANR	5196496	Callee	get_pixel		5196403	0					
ANR	5196497	Identifier	get_pixel		5196403	0					
ANR	5196498	ArgumentList	out		5196403	1					
ANR	5196499	Argument	out		5196403	0					
ANR	5196500	Identifier	out		5196403	0					
ANR	5196501	Argument	x		5196403	1					
ANR	5196502	Identifier	x		5196403	0					
ANR	5196503	Argument	y		5196403	2					
ANR	5196504	Identifier	y		5196403	0					
ANR	5196505	AndExpression	"! get_pixel ( out , x , y - 1 ) && ( ! get_pixel ( out , x + 1 , y ) || get_pixel ( out , x + 1 , y - 1 ) ) && ! trace_from ( out , x , y , 1 )"		5196403	1		&&			
ANR	5196506	UnaryOperationExpression	"! get_pixel ( out , x , y - 1 )"		5196403	0					
ANR	5196507	UnaryOperator	!		5196403	0					
ANR	5196508	CallExpression	"get_pixel ( out , x , y - 1 )"		5196403	1					
ANR	5196509	Callee	get_pixel		5196403	0					
ANR	5196510	Identifier	get_pixel		5196403	0					
ANR	5196511	ArgumentList	out		5196403	1					
ANR	5196512	Argument	out		5196403	0					
ANR	5196513	Identifier	out		5196403	0					
ANR	5196514	Argument	x		5196403	1					
ANR	5196515	Identifier	x		5196403	0					
ANR	5196516	Argument	y - 1		5196403	2					
ANR	5196517	AdditiveExpression	y - 1		5196403	0		-			
ANR	5196518	Identifier	y		5196403	0					
ANR	5196519	PrimaryExpression	1		5196403	1					
ANR	5196520	AndExpression	"( ! get_pixel ( out , x + 1 , y ) || get_pixel ( out , x + 1 , y - 1 ) ) && ! trace_from ( out , x , y , 1 )"		5196403	1		&&			
ANR	5196521	OrExpression	"! get_pixel ( out , x + 1 , y ) || get_pixel ( out , x + 1 , y - 1 )"		5196403	0		||			
ANR	5196522	UnaryOperationExpression	"! get_pixel ( out , x + 1 , y )"		5196403	0					
ANR	5196523	UnaryOperator	!		5196403	0					
ANR	5196524	CallExpression	"get_pixel ( out , x + 1 , y )"		5196403	1					
ANR	5196525	Callee	get_pixel		5196403	0					
ANR	5196526	Identifier	get_pixel		5196403	0					
ANR	5196527	ArgumentList	out		5196403	1					
ANR	5196528	Argument	out		5196403	0					
ANR	5196529	Identifier	out		5196403	0					
ANR	5196530	Argument	x + 1		5196403	1					
ANR	5196531	AdditiveExpression	x + 1		5196403	0		+			
ANR	5196532	Identifier	x		5196403	0					
ANR	5196533	PrimaryExpression	1		5196403	1					
ANR	5196534	Argument	y		5196403	2					
ANR	5196535	Identifier	y		5196403	0					
ANR	5196536	CallExpression	"get_pixel ( out , x + 1 , y - 1 )"		5196403	1					
ANR	5196537	Callee	get_pixel		5196403	0					
ANR	5196538	Identifier	get_pixel		5196403	0					
ANR	5196539	ArgumentList	out		5196403	1					
ANR	5196540	Argument	out		5196403	0					
ANR	5196541	Identifier	out		5196403	0					
ANR	5196542	Argument	x + 1		5196403	1					
ANR	5196543	AdditiveExpression	x + 1		5196403	0		+			
ANR	5196544	Identifier	x		5196403	0					
ANR	5196545	PrimaryExpression	1		5196403	1					
ANR	5196546	Argument	y - 1		5196403	2					
ANR	5196547	AdditiveExpression	y - 1		5196403	0		-			
ANR	5196548	Identifier	y		5196403	0					
ANR	5196549	PrimaryExpression	1		5196403	1					
ANR	5196550	UnaryOperationExpression	"! trace_from ( out , x , y , 1 )"		5196403	1					
ANR	5196551	UnaryOperator	!		5196403	0					
ANR	5196552	CallExpression	"trace_from ( out , x , y , 1 )"		5196403	1					
ANR	5196553	Callee	trace_from		5196403	0					
ANR	5196554	Identifier	trace_from		5196403	0					
ANR	5196555	ArgumentList	out		5196403	1					
ANR	5196556	Argument	out		5196403	0					
ANR	5196557	Identifier	out		5196403	0					
ANR	5196558	Argument	x		5196403	1					
ANR	5196559	Identifier	x		5196403	0					
ANR	5196560	Argument	y		5196403	2					
ANR	5196561	Identifier	y		5196403	0					
ANR	5196562	Argument	1		5196403	3					
ANR	5196563	PrimaryExpression	1		5196403	0					
ANR	5196564	CompoundStatement		19:18:653:653	5196403	1					
ANR	5196565	ExpressionStatement	stat . count = 0	71:16:2463:2477	5196403	0	True				
ANR	5196566	AssignmentExpression	stat . count = 0		5196403	0		=			
ANR	5196567	MemberAccess	stat . count		5196403	0					
ANR	5196568	Identifier	stat		5196403	0					
ANR	5196569	Identifier	count		5196403	1					
ANR	5196570	PrimaryExpression	0		5196403	1					
ANR	5196571	ExpressionStatement	stat . dx = stat . dy = 0	72:16:2495:2516	5196403	1	True				
ANR	5196572	AssignmentExpression	stat . dx = stat . dy = 0		5196403	0		=			
ANR	5196573	MemberAccess	stat . dx		5196403	0					
ANR	5196574	Identifier	stat		5196403	0					
ANR	5196575	Identifier	dx		5196403	1					
ANR	5196576	AssignmentExpression	stat . dy = 0		5196403	1		=			
ANR	5196577	MemberAccess	stat . dy		5196403	0					
ANR	5196578	Identifier	stat		5196403	0					
ANR	5196579	Identifier	dy		5196403	1					
ANR	5196580	PrimaryExpression	0		5196403	1					
ANR	5196581	IfStatement	"if ( ( code = trace_from ( out , x , y , 0 ) ) < 0 )"		5196403	2					
ANR	5196582	Condition	"( code = trace_from ( out , x , y , 0 ) ) < 0"	73:20:2538:2574	5196403	0	True				
ANR	5196583	RelationalExpression	"( code = trace_from ( out , x , y , 0 ) ) < 0"		5196403	0		<			
ANR	5196584	AssignmentExpression	"code = trace_from ( out , x , y , 0 )"		5196403	0		=			
ANR	5196585	Identifier	code		5196403	0					
ANR	5196586	CallExpression	"trace_from ( out , x , y , 0 )"		5196403	1					
ANR	5196587	Callee	trace_from		5196403	0					
ANR	5196588	Identifier	trace_from		5196403	0					
ANR	5196589	ArgumentList	out		5196403	1					
ANR	5196590	Argument	out		5196403	0					
ANR	5196591	Identifier	out		5196403	0					
ANR	5196592	Argument	x		5196403	1					
ANR	5196593	Identifier	x		5196403	0					
ANR	5196594	Argument	y		5196403	2					
ANR	5196595	Identifier	y		5196403	0					
ANR	5196596	Argument	0		5196403	3					
ANR	5196597	PrimaryExpression	0		5196403	0					
ANR	5196598	PrimaryExpression	0		5196403	1					
ANR	5196599	ReturnStatement	return code ;	74:20:2597:2608	5196403	1	True				
ANR	5196600	Identifier	code		5196403	0					
ANR	5196601	ExpressionStatement	"add_deltas ( out , 0 , 0 , 1 )"	75:16:2626:2650	5196403	3	True				
ANR	5196602	CallExpression	"add_deltas ( out , 0 , 0 , 1 )"		5196403	0					
ANR	5196603	Callee	add_deltas		5196403	0					
ANR	5196604	Identifier	add_deltas		5196403	0					
ANR	5196605	ArgumentList	out		5196403	1					
ANR	5196606	Argument	out		5196403	0					
ANR	5196607	Identifier	out		5196403	0					
ANR	5196608	Argument	0		5196403	1					
ANR	5196609	PrimaryExpression	0		5196403	0					
ANR	5196610	Argument	0		5196403	2					
ANR	5196611	PrimaryExpression	0		5196403	0					
ANR	5196612	Argument	1		5196403	3					
ANR	5196613	PrimaryExpression	1		5196403	0					
ANR	5196614	IfStatement	if ( ( code = gs_closepath ( pgs ) ) < 0 )		5196403	4					
ANR	5196615	Condition	( code = gs_closepath ( pgs ) ) < 0	76:20:2701:2730	5196403	0	True				
ANR	5196616	RelationalExpression	( code = gs_closepath ( pgs ) ) < 0		5196403	0		<			
ANR	5196617	AssignmentExpression	code = gs_closepath ( pgs )		5196403	0		=			
ANR	5196618	Identifier	code		5196403	0					
ANR	5196619	CallExpression	gs_closepath ( pgs )		5196403	1					
ANR	5196620	Callee	gs_closepath		5196403	0					
ANR	5196621	Identifier	gs_closepath		5196403	0					
ANR	5196622	ArgumentList	pgs		5196403	1					
ANR	5196623	Argument	pgs		5196403	0					
ANR	5196624	Identifier	pgs		5196403	0					
ANR	5196625	PrimaryExpression	0		5196403	1					
ANR	5196626	ReturnStatement	return code ;	77:20:2753:2764	5196403	1	True				
ANR	5196627	Identifier	code		5196403	0					
ANR	5196628	ReturnStatement	return 0 ;	80:4:2794:2802	5196403	9	True				
ANR	5196629	PrimaryExpression	0		5196403	0					
ANR	5196630	ReturnType	code int		5196403	1					
ANR	5196631	Identifier	gs_imagepath		5196403	2					
ANR	5196632	ParameterList	"gs_gstate * pgs , int width , int height , const byte * data"		5196403	3					
ANR	5196633	Parameter	gs_gstate * pgs	51:13:1702:1716	5196403	0	True				
ANR	5196634	ParameterType	gs_gstate *		5196403	0					
ANR	5196635	Identifier	pgs		5196403	1					
ANR	5196636	Parameter	int width	51:30:1719:1727	5196403	1	True				
ANR	5196637	ParameterType	int		5196403	0					
ANR	5196638	Identifier	width		5196403	1					
ANR	5196639	Parameter	int height	51:41:1730:1739	5196403	2	True				
ANR	5196640	ParameterType	int		5196403	0					
ANR	5196641	Identifier	height		5196403	1					
ANR	5196642	Parameter	const byte * data	51:53:1742:1758	5196403	3	True				
ANR	5196643	ParameterType	const byte *		5196403	0					
ANR	5196644	Identifier	data		5196403	1					
ANR	5196645	CFGEntryNode	ENTRY		5196403		True				
ANR	5196646	CFGExitNode	EXIT		5196403		True				
ANR	5196647	Symbol	stat		5196403						
ANR	5196648	Symbol	code		5196403						
ANR	5196649	Symbol	data		5196403						
ANR	5196650	Symbol	stat . pgs		5196403						
ANR	5196651	Symbol	stat . height		5196403						
ANR	5196652	Symbol	stat . width		5196403						
ANR	5196653	Symbol	gs_closepath		5196403						
ANR	5196654	Symbol	out		5196403						
ANR	5196655	Symbol	stat . raster		5196403						
ANR	5196656	Symbol	get_pixel		5196403						
ANR	5196657	Symbol	width		5196403						
ANR	5196658	Symbol	x		5196403						
ANR	5196659	Symbol	y		5196403						
ANR	5196660	Symbol	stat . data		5196403						
ANR	5196661	Symbol	stat . count		5196403						
ANR	5196662	Symbol	trace_from		5196403						
ANR	5196663	Symbol	pgs		5196403						
ANR	5196664	Symbol	stat . dy		5196403						
ANR	5196665	Symbol	height		5196403						
ANR	5196666	Symbol	& stat		5196403						
ANR	5196667	Symbol	stat . dx		5196403						
ANR	5196668	Function	get_pixel	84:0:2872:3087							
ANR	5196669	FunctionDef	"get_pixel (register const status * out , int x , int y)"		5196668	0					
ANR	5196670	CompoundStatement		86:0:2936:3087	5196668	0					
ANR	5196671	IfStatement	if ( x < 0 || x >= out -> width || y < 0 || y >= out -> height )		5196668	0					
ANR	5196672	Condition	x < 0 || x >= out -> width || y < 0 || y >= out -> height	87:8:2946:2998	5196668	0	True				
ANR	5196673	OrExpression	x < 0 || x >= out -> width || y < 0 || y >= out -> height		5196668	0		||			
ANR	5196674	RelationalExpression	x < 0		5196668	0		<			
ANR	5196675	Identifier	x		5196668	0					
ANR	5196676	PrimaryExpression	0		5196668	1					
ANR	5196677	OrExpression	x >= out -> width || y < 0 || y >= out -> height		5196668	1		||			
ANR	5196678	RelationalExpression	x >= out -> width		5196668	0		>=			
ANR	5196679	Identifier	x		5196668	0					
ANR	5196680	PtrMemberAccess	out -> width		5196668	1					
ANR	5196681	Identifier	out		5196668	0					
ANR	5196682	Identifier	width		5196668	1					
ANR	5196683	OrExpression	y < 0 || y >= out -> height		5196668	1		||			
ANR	5196684	RelationalExpression	y < 0		5196668	0		<			
ANR	5196685	Identifier	y		5196668	0					
ANR	5196686	PrimaryExpression	0		5196668	1					
ANR	5196687	RelationalExpression	y >= out -> height		5196668	1		>=			
ANR	5196688	Identifier	y		5196668	0					
ANR	5196689	PtrMemberAccess	out -> height		5196668	1					
ANR	5196690	Identifier	out		5196668	0					
ANR	5196691	Identifier	height		5196668	1					
ANR	5196692	ReturnStatement	return 0 ;	88:8:3009:3017	5196668	1	True				
ANR	5196693	PrimaryExpression	0		5196668	0					
ANR	5196694	ReturnStatement	return ( out -> data [ y * out -> raster + ( x >> 3 ) ] >> ( ~x & 7 ) ) & 1 ;	89:4:3023:3085	5196668	1	True				
ANR	5196695	BitAndExpression	( out -> data [ y * out -> raster + ( x >> 3 ) ] >> ( ~x & 7 ) ) & 1		5196668	0		&			
ANR	5196696	ShiftExpression	out -> data [ y * out -> raster + ( x >> 3 ) ] >> ( ~x & 7 )		5196668	0		>>			
ANR	5196697	ArrayIndexing	out -> data [ y * out -> raster + ( x >> 3 ) ]		5196668	0					
ANR	5196698	PtrMemberAccess	out -> data		5196668	0					
ANR	5196699	Identifier	out		5196668	0					
ANR	5196700	Identifier	data		5196668	1					
ANR	5196701	AdditiveExpression	y * out -> raster + ( x >> 3 )		5196668	1		+			
ANR	5196702	MultiplicativeExpression	y * out -> raster		5196668	0		*			
ANR	5196703	Identifier	y		5196668	0					
ANR	5196704	PtrMemberAccess	out -> raster		5196668	1					
ANR	5196705	Identifier	out		5196668	0					
ANR	5196706	Identifier	raster		5196668	1					
ANR	5196707	ShiftExpression	x >> 3		5196668	1		>>			
ANR	5196708	Identifier	x		5196668	0					
ANR	5196709	PrimaryExpression	3		5196668	1					
ANR	5196710	BitAndExpression	~x & 7		5196668	1		&			
ANR	5196711	Identifier	~x		5196668	0					
ANR	5196712	PrimaryExpression	7		5196668	1					
ANR	5196713	PrimaryExpression	1		5196668	1					
ANR	5196714	ReturnType	static int		5196668	1					
ANR	5196715	Identifier	get_pixel		5196668	2					
ANR	5196716	ParameterList	"register const status * out , int x , int y"		5196668	3					
ANR	5196717	Parameter	register const status * out	85:10:2893:2919	5196668	0	True				
ANR	5196718	ParameterType	register const status *		5196668	0					
ANR	5196719	Identifier	out		5196668	1					
ANR	5196720	Parameter	int x	85:39:2922:2926	5196668	1	True				
ANR	5196721	ParameterType	int		5196668	0					
ANR	5196722	Identifier	x		5196668	1					
ANR	5196723	Parameter	int y	85:46:2929:2933	5196668	2	True				
ANR	5196724	ParameterType	int		5196668	0					
ANR	5196725	Identifier	y		5196668	1					
ANR	5196726	CFGEntryNode	ENTRY		5196668		True				
ANR	5196727	CFGExitNode	EXIT		5196668		True				
ANR	5196728	Symbol	* * out		5196668						
ANR	5196729	Symbol	* x		5196668						
ANR	5196730	Symbol	* y		5196668						
ANR	5196731	Symbol	out -> raster		5196668						
ANR	5196732	Symbol	out		5196668						
ANR	5196733	Symbol	* out -> raster		5196668						
ANR	5196734	Symbol	x		5196668						
ANR	5196735	Symbol	* out		5196668						
ANR	5196736	Symbol	y		5196668						
ANR	5196737	Symbol	~x		5196668						
ANR	5196738	Symbol	out -> height		5196668						
ANR	5196739	Symbol	out -> width		5196668						
ANR	5196740	Symbol	* out -> data		5196668						
ANR	5196741	Symbol	out -> data		5196668						
ANR	5196742	Function	trace_from	95:0:3321:5818							
ANR	5196743	FunctionDef	"trace_from (register status * out , int x0 , int y0 , int detect)"		5196742	0					
ANR	5196744	CompoundStatement		97:0:3394:5818	5196742	0					
ANR	5196745	IdentifierDeclStatement	"int x = x0 , y = y0 ;"	98:4:3400:3418	5196742	0	True				
ANR	5196746	IdentifierDecl	x = x0		5196742	0					
ANR	5196747	IdentifierDeclType	int		5196742	0					
ANR	5196748	Identifier	x		5196742	1					
ANR	5196749	AssignmentExpression	x = x0		5196742	2		=			
ANR	5196750	Identifier	x0		5196742	0					
ANR	5196751	Identifier	x0		5196742	1					
ANR	5196752	IdentifierDecl	y = y0		5196742	1					
ANR	5196753	IdentifierDeclType	int		5196742	0					
ANR	5196754	Identifier	y		5196742	1					
ANR	5196755	AssignmentExpression	y = y0		5196742	2		=			
ANR	5196756	Identifier	y0		5196742	0					
ANR	5196757	Identifier	y0		5196742	1					
ANR	5196758	IdentifierDeclStatement	"int dx = - 1 , dy = 0 ;"	99:4:3424:3443	5196742	1	True				
ANR	5196759	IdentifierDecl	dx = - 1		5196742	0					
ANR	5196760	IdentifierDeclType	int		5196742	0					
ANR	5196761	Identifier	dx		5196742	1					
ANR	5196762	AssignmentExpression	dx = - 1		5196742	2		=			
ANR	5196763	Identifier	dx		5196742	0					
ANR	5196764	UnaryOperationExpression	- 1		5196742	1					
ANR	5196765	UnaryOperator	-		5196742	0					
ANR	5196766	PrimaryExpression	1		5196742	1					
ANR	5196767	IdentifierDecl	dy = 0		5196742	1					
ANR	5196768	IdentifierDeclType	int		5196742	0					
ANR	5196769	Identifier	dy		5196742	1					
ANR	5196770	AssignmentExpression	dy = 0		5196742	2		=			
ANR	5196771	Identifier	dy		5196742	0					
ANR	5196772	PrimaryExpression	0		5196742	1					
ANR	5196773	IdentifierDeclStatement	int part = 0 ;	100:4:3476:3488	5196742	2	True				
ANR	5196774	IdentifierDecl	part = 0		5196742	0					
ANR	5196775	IdentifierDeclType	int		5196742	0					
ANR	5196776	Identifier	part		5196742	1					
ANR	5196777	AssignmentExpression	part = 0		5196742	2		=			
ANR	5196778	Identifier	part		5196742	0					
ANR	5196779	PrimaryExpression	0		5196742	1					
ANR	5196780	IdentifierDeclStatement	int code ;	103:4:3570:3578	5196742	3	True				
ANR	5196781	IdentifierDecl	code		5196742	0					
ANR	5196782	IdentifierDeclType	int		5196742	0					
ANR	5196783	Identifier	code		5196742	1					
ANR	5196784	IfStatement	if ( ! detect )		5196742	4					
ANR	5196785	Condition	! detect	105:8:3589:3595	5196742	0	True				
ANR	5196786	UnaryOperationExpression	! detect		5196742	0					
ANR	5196787	UnaryOperator	!		5196742	0					
ANR	5196788	Identifier	detect		5196742	1					
ANR	5196789	CompoundStatement		9:17:203:203	5196742	1					
ANR	5196790	ExpressionStatement	"part = ( get_pixel ( out , x + 1 , y - 1 ) ? outline_scale - step : step )"	106:8:3608:3691	5196742	0	True				
ANR	5196791	AssignmentExpression	"part = ( get_pixel ( out , x + 1 , y - 1 ) ? outline_scale - step : step )"		5196742	0		=			
ANR	5196792	Identifier	part		5196742	0					
ANR	5196793	ConditionalExpression	"get_pixel ( out , x + 1 , y - 1 ) ? outline_scale - step : step"		5196742	1					
ANR	5196794	Condition	"get_pixel ( out , x + 1 , y - 1 )"		5196742	0					
ANR	5196795	CallExpression	"get_pixel ( out , x + 1 , y - 1 )"		5196742	0					
ANR	5196796	Callee	get_pixel		5196742	0					
ANR	5196797	Identifier	get_pixel		5196742	0					
ANR	5196798	ArgumentList	out		5196742	1					
ANR	5196799	Argument	out		5196742	0					
ANR	5196800	Identifier	out		5196742	0					
ANR	5196801	Argument	x + 1		5196742	1					
ANR	5196802	AdditiveExpression	x + 1		5196742	0		+			
ANR	5196803	Identifier	x		5196742	0					
ANR	5196804	PrimaryExpression	1		5196742	1					
ANR	5196805	Argument	y - 1		5196742	2					
ANR	5196806	AdditiveExpression	y - 1		5196742	0		-			
ANR	5196807	Identifier	y		5196742	0					
ANR	5196808	PrimaryExpression	1		5196742	1					
ANR	5196809	AdditiveExpression	outline_scale - step		5196742	1		-			
ANR	5196810	Identifier	outline_scale		5196742	0					
ANR	5196811	Identifier	step		5196742	1					
ANR	5196812	Identifier	step		5196742	2					
ANR	5196813	ExpressionStatement	"code = gs_moveto ( out -> pgs , x + 1 - part / ( float ) outline_scale , ( float ) y )"	108:8:3701:3824	5196742	1	True				
ANR	5196814	AssignmentExpression	"code = gs_moveto ( out -> pgs , x + 1 - part / ( float ) outline_scale , ( float ) y )"		5196742	0		=			
ANR	5196815	Identifier	code		5196742	0					
ANR	5196816	CallExpression	"gs_moveto ( out -> pgs , x + 1 - part / ( float ) outline_scale , ( float ) y )"		5196742	1					
ANR	5196817	Callee	gs_moveto		5196742	0					
ANR	5196818	Identifier	gs_moveto		5196742	0					
ANR	5196819	ArgumentList	out -> pgs		5196742	1					
ANR	5196820	Argument	out -> pgs		5196742	0					
ANR	5196821	PtrMemberAccess	out -> pgs		5196742	0					
ANR	5196822	Identifier	out		5196742	0					
ANR	5196823	Identifier	pgs		5196742	1					
ANR	5196824	Argument	x + 1 - part / ( float ) outline_scale		5196742	1					
ANR	5196825	AdditiveExpression	x + 1 - part / ( float ) outline_scale		5196742	0		+			
ANR	5196826	Identifier	x		5196742	0					
ANR	5196827	AdditiveExpression	1 - part / ( float ) outline_scale		5196742	1		-			
ANR	5196828	PrimaryExpression	1		5196742	0					
ANR	5196829	MultiplicativeExpression	part / ( float ) outline_scale		5196742	1		/			
ANR	5196830	Identifier	part		5196742	0					
ANR	5196831	CastExpression	( float ) outline_scale		5196742	1					
ANR	5196832	CastTarget	float		5196742	0					
ANR	5196833	Identifier	outline_scale		5196742	1					
ANR	5196834	Argument	( float ) y		5196742	2					
ANR	5196835	CastExpression	( float ) y		5196742	0					
ANR	5196836	CastTarget	float		5196742	0					
ANR	5196837	Identifier	y		5196742	1					
ANR	5196838	IfStatement	if ( code < 0 )		5196742	2					
ANR	5196839	Condition	code < 0	111:12:3838:3845	5196742	0	True				
ANR	5196840	RelationalExpression	code < 0		5196742	0		<			
ANR	5196841	Identifier	code		5196742	0					
ANR	5196842	PrimaryExpression	0		5196742	1					
ANR	5196843	ReturnStatement	return code ;	112:12:3860:3871	5196742	1	True				
ANR	5196844	Identifier	code		5196742	0					
ANR	5196845	WhileStatement	while ( 1 )		5196742	5					
ANR	5196846	Condition	1	114:11:3890:3890	5196742	0	True				
ANR	5196847	PrimaryExpression	1		5196742	0					
ANR	5196848	CompoundStatement		23:8:742:772	5196742	1					
ANR	5196849	IdentifierDeclStatement	"int tx = dx - dy , ty = dy + dx ;"	119:8:4137:4167	5196742	0	True				
ANR	5196850	IdentifierDecl	tx = dx - dy		5196742	0					
ANR	5196851	IdentifierDeclType	int		5196742	0					
ANR	5196852	Identifier	tx		5196742	1					
ANR	5196853	AssignmentExpression	tx = dx - dy		5196742	2		=			
ANR	5196854	Identifier	tx		5196742	0					
ANR	5196855	AdditiveExpression	dx - dy		5196742	1		-			
ANR	5196856	Identifier	dx		5196742	0					
ANR	5196857	Identifier	dy		5196742	1					
ANR	5196858	IdentifierDecl	ty = dy + dx		5196742	1					
ANR	5196859	IdentifierDeclType	int		5196742	0					
ANR	5196860	Identifier	ty		5196742	1					
ANR	5196861	AssignmentExpression	ty = dy + dx		5196742	2		=			
ANR	5196862	Identifier	ty		5196742	0					
ANR	5196863	AdditiveExpression	dy + dx		5196742	1		+			
ANR	5196864	Identifier	dy		5196742	0					
ANR	5196865	Identifier	dx		5196742	1					
ANR	5196866	IfStatement	"if ( get_pixel ( out , x + tx , y + ty ) )"		5196742	1					
ANR	5196867	Condition	"get_pixel ( out , x + tx , y + ty )"	121:12:4182:4211	5196742	0	True				
ANR	5196868	CallExpression	"get_pixel ( out , x + tx , y + ty )"		5196742	0					
ANR	5196869	Callee	get_pixel		5196742	0					
ANR	5196870	Identifier	get_pixel		5196742	0					
ANR	5196871	ArgumentList	out		5196742	1					
ANR	5196872	Argument	out		5196742	0					
ANR	5196873	Identifier	out		5196742	0					
ANR	5196874	Argument	x + tx		5196742	1					
ANR	5196875	AdditiveExpression	x + tx		5196742	0		+			
ANR	5196876	Identifier	x		5196742	0					
ANR	5196877	Identifier	tx		5196742	1					
ANR	5196878	Argument	y + ty		5196742	2					
ANR	5196879	AdditiveExpression	y + ty		5196742	0		+			
ANR	5196880	Identifier	y		5196742	0					
ANR	5196881	Identifier	ty		5196742	1					
ANR	5196882	CompoundStatement		25:44:819:819	5196742	1					
ANR	5196883	IfStatement	if ( ! detect )		5196742	0					
ANR	5196884	Condition	! detect	123:16:4306:4312	5196742	0	True				
ANR	5196885	UnaryOperationExpression	! detect		5196742	0					
ANR	5196886	UnaryOperator	!		5196742	0					
ANR	5196887	Identifier	detect		5196742	1					
ANR	5196888	CompoundStatement		27:25:920:920	5196742	1					
ANR	5196889	IfStatement	if ( out -> dx == ty && out -> dy == - tx )		5196742	0					
ANR	5196890	Condition	out -> dx == ty && out -> dy == - tx	125:20:4441:4471	5196742	0	True				
ANR	5196891	AndExpression	out -> dx == ty && out -> dy == - tx		5196742	0		&&			
ANR	5196892	EqualityExpression	out -> dx == ty		5196742	0		==			
ANR	5196893	PtrMemberAccess	out -> dx		5196742	0					
ANR	5196894	Identifier	out		5196742	0					
ANR	5196895	Identifier	dx		5196742	1					
ANR	5196896	Identifier	ty		5196742	1					
ANR	5196897	EqualityExpression	out -> dy == - tx		5196742	1		==			
ANR	5196898	PtrMemberAccess	out -> dy		5196742	0					
ANR	5196899	Identifier	out		5196742	0					
ANR	5196900	Identifier	dy		5196742	1					
ANR	5196901	UnaryOperationExpression	- tx		5196742	1					
ANR	5196902	UnaryOperator	-		5196742	0					
ANR	5196903	Identifier	tx		5196742	1					
ANR	5196904	CompoundStatement		29:53:1079:1079	5196742	1					
ANR	5196905	Statement	define	126:1:4477:4482	5196742	0	True				
ANR	5196906	Statement	half_scale	126:8:4484:4493	5196742	1	True				
ANR	5196907	Statement	(	126:19:4495:4495	5196742	2	True				
ANR	5196908	Statement	outline_scale	126:20:4496:4508	5196742	3	True				
ANR	5196909	Statement	/	126:34:4510:4510	5196742	4	True				
ANR	5196910	Statement	2	126:36:4512:4512	5196742	5	True				
ANR	5196911	Statement	-	126:38:4514:4514	5196742	6	True				
ANR	5196912	Statement	step	126:40:4516:4519	5196742	7	True				
ANR	5196913	Statement	)	126:44:4520:4520	5196742	8	True				
ANR	5196914	ExpressionStatement	out -> count -= half_scale	127:20:4542:4566	5196742	9	True				
ANR	5196915	AssignmentExpression	out -> count -= half_scale		5196742	0		-=			
ANR	5196916	PtrMemberAccess	out -> count		5196742	0					
ANR	5196917	Identifier	out		5196742	0					
ANR	5196918	Identifier	count		5196742	1					
ANR	5196919	Identifier	half_scale		5196742	1					
ANR	5196920	ExpressionStatement	"add_deltas ( out , tx , ty , outline_scale / 2 )"	128:20:4588:4630	5196742	10	True				
ANR	5196921	CallExpression	"add_deltas ( out , tx , ty , outline_scale / 2 )"		5196742	0					
ANR	5196922	Callee	add_deltas		5196742	0					
ANR	5196923	Identifier	add_deltas		5196742	0					
ANR	5196924	ArgumentList	out		5196742	1					
ANR	5196925	Argument	out		5196742	0					
ANR	5196926	Identifier	out		5196742	0					
ANR	5196927	Argument	tx		5196742	1					
ANR	5196928	Identifier	tx		5196742	0					
ANR	5196929	Argument	ty		5196742	2					
ANR	5196930	Identifier	ty		5196742	0					
ANR	5196931	Argument	outline_scale / 2		5196742	3					
ANR	5196932	MultiplicativeExpression	outline_scale / 2		5196742	0		/			
ANR	5196933	Identifier	outline_scale		5196742	0					
ANR	5196934	PrimaryExpression	2		5196742	1					
ANR	5196935	Statement	undef	129:1:4633:4637	5196742	11	True				
ANR	5196936	Statement	half_scale	129:7:4639:4648	5196742	12	True				
ANR	5196937	ElseStatement	else		5196742	0					
ANR	5196938	CompoundStatement		34:23:1278:1278	5196742	0					
ANR	5196939	ExpressionStatement	"add_deltas ( out , dx , dy , step - part )"	131:20:4695:4731	5196742	0	True				
ANR	5196940	CallExpression	"add_deltas ( out , dx , dy , step - part )"		5196742	0					
ANR	5196941	Callee	add_deltas		5196742	0					
ANR	5196942	Identifier	add_deltas		5196742	0					
ANR	5196943	ArgumentList	out		5196742	1					
ANR	5196944	Argument	out		5196742	0					
ANR	5196945	Identifier	out		5196742	0					
ANR	5196946	Argument	dx		5196742	1					
ANR	5196947	Identifier	dx		5196742	0					
ANR	5196948	Argument	dy		5196742	2					
ANR	5196949	Identifier	dy		5196742	0					
ANR	5196950	Argument	step - part		5196742	3					
ANR	5196951	AdditiveExpression	step - part		5196742	0		-			
ANR	5196952	Identifier	step		5196742	0					
ANR	5196953	Identifier	part		5196742	1					
ANR	5196954	ExpressionStatement	"add_deltas ( out , tx , ty , outline_scale - step )"	132:20:4753:4798	5196742	1	True				
ANR	5196955	CallExpression	"add_deltas ( out , tx , ty , outline_scale - step )"		5196742	0					
ANR	5196956	Callee	add_deltas		5196742	0					
ANR	5196957	Identifier	add_deltas		5196742	0					
ANR	5196958	ArgumentList	out		5196742	1					
ANR	5196959	Argument	out		5196742	0					
ANR	5196960	Identifier	out		5196742	0					
ANR	5196961	Argument	tx		5196742	1					
ANR	5196962	Identifier	tx		5196742	0					
ANR	5196963	Argument	ty		5196742	2					
ANR	5196964	Identifier	ty		5196742	0					
ANR	5196965	Argument	outline_scale - step		5196742	3					
ANR	5196966	AdditiveExpression	outline_scale - step		5196742	0		-			
ANR	5196967	Identifier	outline_scale		5196742	0					
ANR	5196968	Identifier	step		5196742	1					
ANR	5196969	ExpressionStatement	part = outline_scale - step	134:16:4834:4861	5196742	1	True				
ANR	5196970	AssignmentExpression	part = outline_scale - step		5196742	0		=			
ANR	5196971	Identifier	part		5196742	0					
ANR	5196972	AdditiveExpression	outline_scale - step		5196742	1		-			
ANR	5196973	Identifier	outline_scale		5196742	0					
ANR	5196974	Identifier	step		5196742	1					
ANR	5196975	ExpressionStatement	"x += tx , y += ty"	136:12:4889:4905	5196742	1	True				
ANR	5196976	Expression	"x += tx , y += ty"		5196742	0					
ANR	5196977	AssignmentExpression	x += tx		5196742	0		+=			
ANR	5196978	Identifier	x		5196742	0					
ANR	5196979	Identifier	tx		5196742	1					
ANR	5196980	AssignmentExpression	y += ty		5196742	1		+=			
ANR	5196981	Identifier	y		5196742	0					
ANR	5196982	Identifier	ty		5196742	1					
ANR	5196983	ExpressionStatement	"dx = - dy , dy += tx"	137:12:4919:4937	5196742	2	True				
ANR	5196984	Expression	"dx = - dy , dy += tx"		5196742	0					
ANR	5196985	AssignmentExpression	dx = - dy		5196742	0		=			
ANR	5196986	Identifier	dx		5196742	0					
ANR	5196987	UnaryOperationExpression	- dy		5196742	1					
ANR	5196988	UnaryOperator	-		5196742	0					
ANR	5196989	Identifier	dy		5196742	1					
ANR	5196990	AssignmentExpression	dy += tx		5196742	1		+=			
ANR	5196991	Identifier	dy		5196742	0					
ANR	5196992	Identifier	tx		5196742	1					
ANR	5196993	ElseStatement	else		5196742	0					
ANR	5196994	IfStatement	"if ( ! get_pixel ( out , x + dx , y + dy ) )"		5196742	0					
ANR	5196995	Condition	"! get_pixel ( out , x + dx , y + dy )"	138:19:4958:4988	5196742	0	True				
ANR	5196996	UnaryOperationExpression	"! get_pixel ( out , x + dx , y + dy )"		5196742	0					
ANR	5196997	UnaryOperator	!		5196742	0					
ANR	5196998	CallExpression	"get_pixel ( out , x + dx , y + dy )"		5196742	1					
ANR	5196999	Callee	get_pixel		5196742	0					
ANR	5197000	Identifier	get_pixel		5196742	0					
ANR	5197001	ArgumentList	out		5196742	1					
ANR	5197002	Argument	out		5196742	0					
ANR	5197003	Identifier	out		5196742	0					
ANR	5197004	Argument	x + dx		5196742	1					
ANR	5197005	AdditiveExpression	x + dx		5196742	0		+			
ANR	5197006	Identifier	x		5196742	0					
ANR	5197007	Identifier	dx		5196742	1					
ANR	5197008	Argument	y + dy		5196742	2					
ANR	5197009	AdditiveExpression	y + dy		5196742	0		+			
ANR	5197010	Identifier	y		5196742	0					
ANR	5197011	Identifier	dy		5196742	1					
ANR	5197012	CompoundStatement		42:52:1596:1596	5196742	1					
ANR	5197013	IfStatement	if ( ! detect )		5196742	0					
ANR	5197014	Condition	! detect	139:16:5059:5065	5196742	0	True				
ANR	5197015	UnaryOperationExpression	! detect		5196742	0					
ANR	5197016	UnaryOperator	!		5196742	0					
ANR	5197017	Identifier	detect		5196742	1					
ANR	5197018	CompoundStatement		43:25:1673:1673	5196742	1					
ANR	5197019	ExpressionStatement	"add_deltas ( out , dx , dy , outline_scale - step - part )"	140:16:5086:5138	5196742	0	True				
ANR	5197020	CallExpression	"add_deltas ( out , dx , dy , outline_scale - step - part )"		5196742	0					
ANR	5197021	Callee	add_deltas		5196742	0					
ANR	5197022	Identifier	add_deltas		5196742	0					
ANR	5197023	ArgumentList	out		5196742	1					
ANR	5197024	Argument	out		5196742	0					
ANR	5197025	Identifier	out		5196742	0					
ANR	5197026	Argument	dx		5196742	1					
ANR	5197027	Identifier	dx		5196742	0					
ANR	5197028	Argument	dy		5196742	2					
ANR	5197029	Identifier	dy		5196742	0					
ANR	5197030	Argument	outline_scale - step - part		5196742	3					
ANR	5197031	AdditiveExpression	outline_scale - step - part		5196742	0		-			
ANR	5197032	Identifier	outline_scale		5196742	0					
ANR	5197033	AdditiveExpression	step - part		5196742	1		-			
ANR	5197034	Identifier	step		5196742	0					
ANR	5197035	Identifier	part		5196742	1					
ANR	5197036	ExpressionStatement	"add_deltas ( out , ty , - tx , step )"	141:16:5156:5186	5196742	1	True				
ANR	5197037	CallExpression	"add_deltas ( out , ty , - tx , step )"		5196742	0					
ANR	5197038	Callee	add_deltas		5196742	0					
ANR	5197039	Identifier	add_deltas		5196742	0					
ANR	5197040	ArgumentList	out		5196742	1					
ANR	5197041	Argument	out		5196742	0					
ANR	5197042	Identifier	out		5196742	0					
ANR	5197043	Argument	ty		5196742	1					
ANR	5197044	Identifier	ty		5196742	0					
ANR	5197045	Argument	- tx		5196742	2					
ANR	5197046	UnaryOperationExpression	- tx		5196742	0					
ANR	5197047	UnaryOperator	-		5196742	0					
ANR	5197048	Identifier	tx		5196742	1					
ANR	5197049	Argument	step		5196742	3					
ANR	5197050	Identifier	step		5196742	0					
ANR	5197051	ExpressionStatement	part = step	142:16:5204:5215	5196742	2	True				
ANR	5197052	AssignmentExpression	part = step		5196742	0		=			
ANR	5197053	Identifier	part		5196742	0					
ANR	5197054	Identifier	step		5196742	1					
ANR	5197055	ExpressionStatement	"dx = dy , dy -= ty"	144:12:5243:5260	5196742	1	True				
ANR	5197056	Expression	"dx = dy , dy -= ty"		5196742	0					
ANR	5197057	AssignmentExpression	dx = dy		5196742	0		=			
ANR	5197058	Identifier	dx		5196742	0					
ANR	5197059	Identifier	dy		5196742	1					
ANR	5197060	AssignmentExpression	dy -= ty		5196742	1		-=			
ANR	5197061	Identifier	dy		5196742	0					
ANR	5197062	Identifier	ty		5196742	1					
ANR	5197063	ElseStatement	else		5196742	0					
ANR	5197064	CompoundStatement		49:15:1882:1882	5196742	0					
ANR	5197065	IfStatement	if ( ! detect )		5196742	0					
ANR	5197066	Condition	! detect	146:16:5346:5352	5196742	0	True				
ANR	5197067	UnaryOperationExpression	! detect		5196742	0					
ANR	5197068	UnaryOperator	!		5196742	0					
ANR	5197069	Identifier	detect		5196742	1					
ANR	5197070	CompoundStatement		50:25:1960:1960	5196742	1					
ANR	5197071	ExpressionStatement	"add_deltas ( out , dx , dy , outline_scale )"	147:16:5373:5411	5196742	0	True				
ANR	5197072	CallExpression	"add_deltas ( out , dx , dy , outline_scale )"		5196742	0					
ANR	5197073	Callee	add_deltas		5196742	0					
ANR	5197074	Identifier	add_deltas		5196742	0					
ANR	5197075	ArgumentList	out		5196742	1					
ANR	5197076	Argument	out		5196742	0					
ANR	5197077	Identifier	out		5196742	0					
ANR	5197078	Argument	dx		5196742	1					
ANR	5197079	Identifier	dx		5196742	0					
ANR	5197080	Argument	dy		5196742	2					
ANR	5197081	Identifier	dy		5196742	0					
ANR	5197082	Argument	outline_scale		5196742	3					
ANR	5197083	Identifier	outline_scale		5196742	0					
ANR	5197084	ExpressionStatement	"x += dx , y += dy"	149:12:5439:5455	5196742	1	True				
ANR	5197085	Expression	"x += dx , y += dy"		5196742	0					
ANR	5197086	AssignmentExpression	x += dx		5196742	0		+=			
ANR	5197087	Identifier	x		5196742	0					
ANR	5197088	Identifier	dx		5196742	1					
ANR	5197089	AssignmentExpression	y += dy		5196742	1		+=			
ANR	5197090	Identifier	y		5196742	0					
ANR	5197091	Identifier	dy		5196742	1					
ANR	5197092	IfStatement	if ( dx == - step && dy == 0 && ! ( tx == - step && ty == - step ) )		5196742	2					
ANR	5197093	Condition	dx == - step && dy == 0 && ! ( tx == - step && ty == - step )	151:12:5479:5533	5196742	0	True				
ANR	5197094	AndExpression	dx == - step && dy == 0 && ! ( tx == - step && ty == - step )		5196742	0		&&			
ANR	5197095	EqualityExpression	dx == - step		5196742	0		==			
ANR	5197096	Identifier	dx		5196742	0					
ANR	5197097	UnaryOperationExpression	- step		5196742	1					
ANR	5197098	UnaryOperator	-		5196742	0					
ANR	5197099	Identifier	step		5196742	1					
ANR	5197100	AndExpression	dy == 0 && ! ( tx == - step && ty == - step )		5196742	1		&&			
ANR	5197101	EqualityExpression	dy == 0		5196742	0		==			
ANR	5197102	Identifier	dy		5196742	0					
ANR	5197103	PrimaryExpression	0		5196742	1					
ANR	5197104	UnaryOperationExpression	! ( tx == - step && ty == - step )		5196742	1					
ANR	5197105	UnaryOperator	!		5196742	0					
ANR	5197106	AndExpression	tx == - step && ty == - step		5196742	1		&&			
ANR	5197107	EqualityExpression	tx == - step		5196742	0		==			
ANR	5197108	Identifier	tx		5196742	0					
ANR	5197109	UnaryOperationExpression	- step		5196742	1					
ANR	5197110	UnaryOperator	-		5196742	0					
ANR	5197111	Identifier	step		5196742	1					
ANR	5197112	EqualityExpression	ty == - step		5196742	1		==			
ANR	5197113	Identifier	ty		5196742	0					
ANR	5197114	UnaryOperationExpression	- step		5196742	1					
ANR	5197115	UnaryOperator	-		5196742	0					
ANR	5197116	Identifier	step		5196742	1					
ANR	5197117	CompoundStatement		55:69:2141:2141	5196742	1					
ANR	5197118	IfStatement	if ( x == x0 && y == y0 )		5196742	0					
ANR	5197119	Condition	x == x0 && y == y0	153:16:5671:5688	5196742	0	True				
ANR	5197120	AndExpression	x == x0 && y == y0		5196742	0		&&			
ANR	5197121	EqualityExpression	x == x0		5196742	0		==			
ANR	5197122	Identifier	x		5196742	0					
ANR	5197123	Identifier	x0		5196742	1					
ANR	5197124	EqualityExpression	y == y0		5196742	1		==			
ANR	5197125	Identifier	y		5196742	0					
ANR	5197126	Identifier	y0		5196742	1					
ANR	5197127	ReturnStatement	return 0 ;	154:16:5707:5715	5196742	1	True				
ANR	5197128	PrimaryExpression	0		5196742	0					
ANR	5197129	IfStatement	if ( detect && ( y > y0 || ( y == y0 && x > x0 ) ) )		5196742	1					
ANR	5197130	Condition	detect && ( y > y0 || ( y == y0 && x > x0 ) )	155:16:5733:5773	5196742	0	True				
ANR	5197131	AndExpression	detect && ( y > y0 || ( y == y0 && x > x0 ) )		5196742	0		&&			
ANR	5197132	Identifier	detect		5196742	0					
ANR	5197133	OrExpression	y > y0 || ( y == y0 && x > x0 )		5196742	1		||			
ANR	5197134	RelationalExpression	y > y0		5196742	0		>			
ANR	5197135	Identifier	y		5196742	0					
ANR	5197136	Identifier	y0		5196742	1					
ANR	5197137	AndExpression	y == y0 && x > x0		5196742	1		&&			
ANR	5197138	EqualityExpression	y == y0		5196742	0		==			
ANR	5197139	Identifier	y		5196742	0					
ANR	5197140	Identifier	y0		5196742	1					
ANR	5197141	RelationalExpression	x > x0		5196742	1		>			
ANR	5197142	Identifier	x		5196742	0					
ANR	5197143	Identifier	x0		5196742	1					
ANR	5197144	ReturnStatement	return 1 ;	156:16:5792:5800	5196742	1	True				
ANR	5197145	PrimaryExpression	1		5196742	0					
ANR	5197146	ReturnType	static int		5196742	1					
ANR	5197147	Identifier	trace_from		5196742	2					
ANR	5197148	ParameterList	"register status * out , int x0 , int y0 , int detect"		5196742	3					
ANR	5197149	Parameter	register status * out	96:11:3343:3363	5196742	0	True				
ANR	5197150	ParameterType	register status *		5196742	0					
ANR	5197151	Identifier	out		5196742	1					
ANR	5197152	Parameter	int x0	96:34:3366:3371	5196742	1	True				
ANR	5197153	ParameterType	int		5196742	0					
ANR	5197154	Identifier	x0		5196742	1					
ANR	5197155	Parameter	int y0	96:42:3374:3379	5196742	2	True				
ANR	5197156	ParameterType	int		5196742	0					
ANR	5197157	Identifier	y0		5196742	1					
ANR	5197158	Parameter	int detect	96:50:3382:3391	5196742	3	True				
ANR	5197159	ParameterType	int		5196742	0					
ANR	5197160	Identifier	detect		5196742	1					
ANR	5197161	CFGEntryNode	ENTRY		5196742		True				
ANR	5197162	CFGExitNode	EXIT		5196742		True				
ANR	5197163	Symbol	code		5196742						
ANR	5197164	Symbol	half_scale		5196742						
ANR	5197165	Symbol	tx		5196742						
ANR	5197166	Symbol	ty		5196742						
ANR	5197167	Symbol	part		5196742						
ANR	5197168	Symbol	out -> dy		5196742						
ANR	5197169	Symbol	detect		5196742						
ANR	5197170	Symbol	outline_scale		5196742						
ANR	5197171	Symbol	out -> count		5196742						
ANR	5197172	Symbol	out -> dx		5196742						
ANR	5197173	Symbol	gs_moveto		5196742						
ANR	5197174	Symbol	out -> pgs		5196742						
ANR	5197175	Symbol	out		5196742						
ANR	5197176	Symbol	dx		5196742						
ANR	5197177	Symbol	dy		5196742						
ANR	5197178	Symbol	y0		5196742						
ANR	5197179	Symbol	get_pixel		5196742						
ANR	5197180	Symbol	x0		5196742						
ANR	5197181	Symbol	x		5196742						
ANR	5197182	Symbol	* out		5196742						
ANR	5197183	Symbol	y		5196742						
ANR	5197184	Symbol	step		5196742						
ANR	5197185	Function	add_dxdy	163:0:5933:6536							
ANR	5197186	FunctionDef	"add_dxdy (register status * out , int dx , int dy , int count)"		5197185	0					
ANR	5197187	CompoundStatement		165:0:6003:6536	5197185	0					
ANR	5197188	IfStatement	if ( count != 0 )		5197185	0					
ANR	5197189	Condition	count != 0	166:8:6013:6022	5197185	0	True				
ANR	5197190	EqualityExpression	count != 0		5197185	0		!=			
ANR	5197191	Identifier	count		5197185	0					
ANR	5197192	PrimaryExpression	0		5197185	1					
ANR	5197193	CompoundStatement		2:20:21:21	5197185	1					
ANR	5197194	IfStatement	if ( dx == out -> dx && dy == out -> dy )		5197185	0					
ANR	5197195	Condition	dx == out -> dx && dy == out -> dy	167:12:6039:6068	5197185	0	True				
ANR	5197196	AndExpression	dx == out -> dx && dy == out -> dy		5197185	0		&&			
ANR	5197197	EqualityExpression	dx == out -> dx		5197185	0		==			
ANR	5197198	Identifier	dx		5197185	0					
ANR	5197199	PtrMemberAccess	out -> dx		5197185	1					
ANR	5197200	Identifier	out		5197185	0					
ANR	5197201	Identifier	dx		5197185	1					
ANR	5197202	EqualityExpression	dy == out -> dy		5197185	1		==			
ANR	5197203	Identifier	dy		5197185	0					
ANR	5197204	PtrMemberAccess	out -> dy		5197185	1					
ANR	5197205	Identifier	out		5197185	0					
ANR	5197206	Identifier	dy		5197185	1					
ANR	5197207	ExpressionStatement	out -> count += count	168:12:6083:6102	5197185	1	True				
ANR	5197208	AssignmentExpression	out -> count += count		5197185	0		+=			
ANR	5197209	PtrMemberAccess	out -> count		5197185	0					
ANR	5197210	Identifier	out		5197185	0					
ANR	5197211	Identifier	count		5197185	1					
ANR	5197212	Identifier	count		5197185	1					
ANR	5197213	ElseStatement	else		5197185	0					
ANR	5197214	CompoundStatement		5:13:113:113	5197185	0					
ANR	5197215	IfStatement	if ( out -> count != 0 )		5197185	0					
ANR	5197216	Condition	out -> count != 0	170:16:6135:6149	5197185	0	True				
ANR	5197217	EqualityExpression	out -> count != 0		5197185	0		!=			
ANR	5197218	PtrMemberAccess	out -> count		5197185	0					
ANR	5197219	Identifier	out		5197185	0					
ANR	5197220	Identifier	count		5197185	1					
ANR	5197221	PrimaryExpression	0		5197185	1					
ANR	5197222	CompoundStatement		7:16:166:350	5197185	1					
ANR	5197223	IdentifierDeclStatement	"int code = gs_rlineto ( out -> pgs , out -> dx * out -> count / ( float ) outline_scale , out -> dy * out -> count / ( float ) outline_scale ) ;"	171:16:6170:6354	5197185	0	True				
ANR	5197224	IdentifierDecl	"code = gs_rlineto ( out -> pgs , out -> dx * out -> count / ( float ) outline_scale , out -> dy * out -> count / ( float ) outline_scale )"		5197185	0					
ANR	5197225	IdentifierDeclType	int		5197185	0					
ANR	5197226	Identifier	code		5197185	1					
ANR	5197227	AssignmentExpression	"code = gs_rlineto ( out -> pgs , out -> dx * out -> count / ( float ) outline_scale , out -> dy * out -> count / ( float ) outline_scale )"		5197185	2		=			
ANR	5197228	Identifier	code		5197185	0					
ANR	5197229	CallExpression	"gs_rlineto ( out -> pgs , out -> dx * out -> count / ( float ) outline_scale , out -> dy * out -> count / ( float ) outline_scale )"		5197185	1					
ANR	5197230	Callee	gs_rlineto		5197185	0					
ANR	5197231	Identifier	gs_rlineto		5197185	0					
ANR	5197232	ArgumentList	out -> pgs		5197185	1					
ANR	5197233	Argument	out -> pgs		5197185	0					
ANR	5197234	PtrMemberAccess	out -> pgs		5197185	0					
ANR	5197235	Identifier	out		5197185	0					
ANR	5197236	Identifier	pgs		5197185	1					
ANR	5197237	Argument	out -> dx * out -> count / ( float ) outline_scale		5197185	1					
ANR	5197238	MultiplicativeExpression	out -> dx * out -> count / ( float ) outline_scale		5197185	0		*			
ANR	5197239	PtrMemberAccess	out -> dx		5197185	0					
ANR	5197240	Identifier	out		5197185	0					
ANR	5197241	Identifier	dx		5197185	1					
ANR	5197242	MultiplicativeExpression	out -> count / ( float ) outline_scale		5197185	1		/			
ANR	5197243	PtrMemberAccess	out -> count		5197185	0					
ANR	5197244	Identifier	out		5197185	0					
ANR	5197245	Identifier	count		5197185	1					
ANR	5197246	CastExpression	( float ) outline_scale		5197185	1					
ANR	5197247	CastTarget	float		5197185	0					
ANR	5197248	Identifier	outline_scale		5197185	1					
ANR	5197249	Argument	out -> dy * out -> count / ( float ) outline_scale		5197185	2					
ANR	5197250	MultiplicativeExpression	out -> dy * out -> count / ( float ) outline_scale		5197185	0		*			
ANR	5197251	PtrMemberAccess	out -> dy		5197185	0					
ANR	5197252	Identifier	out		5197185	0					
ANR	5197253	Identifier	dy		5197185	1					
ANR	5197254	MultiplicativeExpression	out -> count / ( float ) outline_scale		5197185	1		/			
ANR	5197255	PtrMemberAccess	out -> count		5197185	0					
ANR	5197256	Identifier	out		5197185	0					
ANR	5197257	Identifier	count		5197185	1					
ANR	5197258	CastExpression	( float ) outline_scale		5197185	1					
ANR	5197259	CastTarget	float		5197185	0					
ANR	5197260	Identifier	outline_scale		5197185	1					
ANR	5197261	IfStatement	if ( code < 0 )		5197185	1					
ANR	5197262	Condition	code < 0	175:20:6377:6384	5197185	0	True				
ANR	5197263	RelationalExpression	code < 0		5197185	0		<			
ANR	5197264	Identifier	code		5197185	0					
ANR	5197265	PrimaryExpression	0		5197185	1					
ANR	5197266	ReturnStatement	return code ;	176:20:6407:6418	5197185	1	True				
ANR	5197267	Identifier	code		5197185	0					
ANR	5197268	ExpressionStatement	"out -> dx = dx , out -> dy = dy"	178:12:6446:6472	5197185	1	True				
ANR	5197269	Expression	"out -> dx = dx , out -> dy = dy"		5197185	0					
ANR	5197270	AssignmentExpression	out -> dx = dx		5197185	0		=			
ANR	5197271	PtrMemberAccess	out -> dx		5197185	0					
ANR	5197272	Identifier	out		5197185	0					
ANR	5197273	Identifier	dx		5197185	1					
ANR	5197274	Identifier	dx		5197185	1					
ANR	5197275	AssignmentExpression	out -> dy = dy		5197185	1		=			
ANR	5197276	PtrMemberAccess	out -> dy		5197185	0					
ANR	5197277	Identifier	out		5197185	0					
ANR	5197278	Identifier	dy		5197185	1					
ANR	5197279	Identifier	dy		5197185	1					
ANR	5197280	ExpressionStatement	out -> count = count	179:12:6486:6504	5197185	2	True				
ANR	5197281	AssignmentExpression	out -> count = count		5197185	0		=			
ANR	5197282	PtrMemberAccess	out -> count		5197185	0					
ANR	5197283	Identifier	out		5197185	0					
ANR	5197284	Identifier	count		5197185	1					
ANR	5197285	Identifier	count		5197185	1					
ANR	5197286	ReturnStatement	return 0 ;	182:4:6526:6534	5197185	1	True				
ANR	5197287	PrimaryExpression	0		5197185	0					
ANR	5197288	ReturnType	static int		5197185	1					
ANR	5197289	Identifier	add_dxdy		5197185	2					
ANR	5197290	ParameterList	"register status * out , int dx , int dy , int count"		5197185	3					
ANR	5197291	Parameter	register status * out	164:9:5953:5973	5197185	0	True				
ANR	5197292	ParameterType	register status *		5197185	0					
ANR	5197293	Identifier	out		5197185	1					
ANR	5197294	Parameter	int dx	164:32:5976:5981	5197185	1	True				
ANR	5197295	ParameterType	int		5197185	0					
ANR	5197296	Identifier	dx		5197185	1					
ANR	5197297	Parameter	int dy	164:40:5984:5989	5197185	2	True				
ANR	5197298	ParameterType	int		5197185	0					
ANR	5197299	Identifier	dy		5197185	1					
ANR	5197300	Parameter	int count	164:48:5992:6000	5197185	3	True				
ANR	5197301	ParameterType	int		5197185	0					
ANR	5197302	Identifier	count		5197185	1					
ANR	5197303	CFGEntryNode	ENTRY		5197185		True				
ANR	5197304	CFGExitNode	EXIT		5197185		True				
ANR	5197305	Symbol	code		5197185						
ANR	5197306	Symbol	dx		5197185						
ANR	5197307	Symbol	dy		5197185						
ANR	5197308	Symbol	count		5197185						
ANR	5197309	Symbol	* out		5197185						
ANR	5197310	Symbol	out -> dy		5197185						
ANR	5197311	Symbol	gs_rlineto		5197185						
ANR	5197312	Symbol	out -> count		5197185						
ANR	5197313	Symbol	outline_scale		5197185						
ANR	5197314	Symbol	out -> dx		5197185						
ANR	5197315	Symbol	out -> pgs		5197185						
ANR	5197316	Symbol	out		5197185						
