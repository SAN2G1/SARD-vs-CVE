command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8077264	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcparse.c								
ANR	8077265	Function	pcl_register_command	38:0:1266:2030							
ANR	8077266	FunctionDef	"pcl_register_command (byte * pindex , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state)"		8077265	0					
ANR	8077267	CompoundStatement		41:0:1413:2030	8077265	0					
ANR	8077268	IdentifierDeclStatement	int index = pcl_parser_state -> definitions -> pcl_command_next_index ;	42:4:1419:1484	8077265	0	True				
ANR	8077269	IdentifierDecl	index = pcl_parser_state -> definitions -> pcl_command_next_index		8077265	0					
ANR	8077270	IdentifierDeclType	int		8077265	0					
ANR	8077271	Identifier	index		8077265	1					
ANR	8077272	AssignmentExpression	index = pcl_parser_state -> definitions -> pcl_command_next_index		8077265	2		=			
ANR	8077273	Identifier	index		8077265	0					
ANR	8077274	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_next_index		8077265	1					
ANR	8077275	PtrMemberAccess	pcl_parser_state -> definitions		8077265	0					
ANR	8077276	Identifier	pcl_parser_state		8077265	0					
ANR	8077277	Identifier	definitions		8077265	1					
ANR	8077278	Identifier	pcl_command_next_index		8077265	1					
ANR	8077279	IdentifierDeclStatement	byte prev = * pindex ;	44:4:1491:1510	8077265	1	True				
ANR	8077280	IdentifierDecl	prev = * pindex		8077265	0					
ANR	8077281	IdentifierDeclType	byte		8077265	0					
ANR	8077282	Identifier	prev		8077265	1					
ANR	8077283	AssignmentExpression	prev = * pindex		8077265	2		=			
ANR	8077284	Identifier	prev		8077265	0					
ANR	8077285	UnaryOperationExpression	* pindex		8077265	1					
ANR	8077286	UnaryOperator	*		8077265	0					
ANR	8077287	Identifier	pindex		8077265	1					
ANR	8077288	IfStatement	if ( prev != 0 && prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd )		8077265	2					
ANR	8077289	Condition	prev != 0 && prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd	46:8:1521:1619	8077265	0	True				
ANR	8077290	AndExpression	prev != 0 && prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd		8077265	0		&&			
ANR	8077291	EqualityExpression	prev != 0		8077265	0		!=			
ANR	8077292	Identifier	prev		8077265	0					
ANR	8077293	PrimaryExpression	0		8077265	1					
ANR	8077294	AndExpression	prev <= index && pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd		8077265	1		&&			
ANR	8077295	RelationalExpression	prev <= index		8077265	0		<=			
ANR	8077296	Identifier	prev		8077265	0					
ANR	8077297	Identifier	index		8077265	1					
ANR	8077298	EqualityExpression	pcl_parser_state -> definitions -> pcl_command_list [ prev ] == pcmd		8077265	1		==			
ANR	8077299	ArrayIndexing	pcl_parser_state -> definitions -> pcl_command_list [ prev ]		8077265	0					
ANR	8077300	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_list		8077265	0					
ANR	8077301	PtrMemberAccess	pcl_parser_state -> definitions		8077265	0					
ANR	8077302	Identifier	pcl_parser_state		8077265	0					
ANR	8077303	Identifier	definitions		8077265	1					
ANR	8077304	Identifier	pcl_command_list		8077265	1					
ANR	8077305	Identifier	prev		8077265	1					
ANR	8077306	Identifier	pcmd		8077265	1					
ANR	8077307	ExpressionStatement	index = prev	48:8:1630:1642	8077265	1	True				
ANR	8077308	AssignmentExpression	index = prev		8077265	0		=			
ANR	8077309	Identifier	index		8077265	0					
ANR	8077310	Identifier	prev		8077265	1					
ANR	8077311	ElseStatement	else		8077265	0					
ANR	8077312	IfStatement	if ( index != 0 && pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd )		8077265	0					
ANR	8077313	Condition	index != 0 && pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd	49:13:1657:1758	8077265	0	True				
ANR	8077314	AndExpression	index != 0 && pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd		8077265	0		&&			
ANR	8077315	EqualityExpression	index != 0		8077265	0		!=			
ANR	8077316	Identifier	index		8077265	0					
ANR	8077317	PrimaryExpression	0		8077265	1					
ANR	8077318	EqualityExpression	pcl_parser_state -> definitions -> pcl_command_list [ index ] == pcmd		8077265	1		==			
ANR	8077319	ArrayIndexing	pcl_parser_state -> definitions -> pcl_command_list [ index ]		8077265	0					
ANR	8077320	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_list		8077265	0					
ANR	8077321	PtrMemberAccess	pcl_parser_state -> definitions		8077265	0					
ANR	8077322	Identifier	pcl_parser_state		8077265	0					
ANR	8077323	Identifier	definitions		8077265	1					
ANR	8077324	Identifier	pcl_command_list		8077265	1					
ANR	8077325	Identifier	index		8077265	1					
ANR	8077326	Identifier	pcmd		8077265	1					
ANR	8077327	ExpressionStatement		51:18:1760:1760	8077265	1	True				
ANR	8077328	ElseStatement	else		8077265	0					
ANR	8077329	ExpressionStatement	pcl_parser_state -> definitions -> pcl_command_list [ pcl_parser_state -> definitions -> pcl_command_next_index = ++ index ] = ( pcl_command_definition_t * ) pcmd	53:8:1779:1966	8077265	0	True				
ANR	8077330	AssignmentExpression	pcl_parser_state -> definitions -> pcl_command_list [ pcl_parser_state -> definitions -> pcl_command_next_index = ++ index ] = ( pcl_command_definition_t * ) pcmd		8077265	0		=			
ANR	8077331	ArrayIndexing	pcl_parser_state -> definitions -> pcl_command_list [ pcl_parser_state -> definitions -> pcl_command_next_index = ++ index ]		8077265	0					
ANR	8077332	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_list		8077265	0					
ANR	8077333	PtrMemberAccess	pcl_parser_state -> definitions		8077265	0					
ANR	8077334	Identifier	pcl_parser_state		8077265	0					
ANR	8077335	Identifier	definitions		8077265	1					
ANR	8077336	Identifier	pcl_command_list		8077265	1					
ANR	8077337	AssignmentExpression	pcl_parser_state -> definitions -> pcl_command_next_index = ++ index		8077265	1		=			
ANR	8077338	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_command_next_index		8077265	0					
ANR	8077339	PtrMemberAccess	pcl_parser_state -> definitions		8077265	0					
ANR	8077340	Identifier	pcl_parser_state		8077265	0					
ANR	8077341	Identifier	definitions		8077265	1					
ANR	8077342	Identifier	pcl_command_next_index		8077265	1					
ANR	8077343	UnaryExpression	++ index		8077265	1					
ANR	8077344	IncDec	++		8077265	0					
ANR	8077345	Identifier	index		8077265	1					
ANR	8077346	CastExpression	( pcl_command_definition_t * ) pcmd		8077265	1					
ANR	8077347	CastTarget	pcl_command_definition_t *		8077265	0					
ANR	8077348	Identifier	pcmd		8077265	1					
ANR	8077349	ExpressionStatement	* pindex = index	57:4:1972:1987	8077265	3	True				
ANR	8077350	AssignmentExpression	* pindex = index		8077265	0		=			
ANR	8077351	UnaryOperationExpression	* pindex		8077265	0					
ANR	8077352	UnaryOperator	*		8077265	0					
ANR	8077353	Identifier	pindex		8077265	1					
ANR	8077354	Identifier	index		8077265	1					
ANR	8077355	ReturnStatement	return ( prev != 0 && prev != index ) ;	58:4:1993:2028	8077265	4	True				
ANR	8077356	AndExpression	prev != 0 && prev != index		8077265	0		&&			
ANR	8077357	EqualityExpression	prev != 0		8077265	0		!=			
ANR	8077358	Identifier	prev		8077265	0					
ANR	8077359	PrimaryExpression	0		8077265	1					
ANR	8077360	EqualityExpression	prev != index		8077265	1		!=			
ANR	8077361	Identifier	prev		8077265	0					
ANR	8077362	Identifier	index		8077265	1					
ANR	8077363	ReturnType	static bool		8077265	1					
ANR	8077364	Identifier	pcl_register_command		8077265	2					
ANR	8077365	ParameterList	"byte * pindex , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state"		8077265	3					
ANR	8077366	Parameter	byte * pindex	39:21:1299:1311	8077265	0	True				
ANR	8077367	ParameterType	byte *		8077265	0					
ANR	8077368	Identifier	pindex		8077265	1					
ANR	8077369	Parameter	const pcl_command_definition_t * pcmd	39:36:1314:1350	8077265	1	True				
ANR	8077370	ParameterType	const pcl_command_definition_t *		8077265	0					
ANR	8077371	Identifier	pcmd		8077265	1					
ANR	8077372	Parameter	pcl_parser_state_t * pcl_parser_state	40:21:1374:1410	8077265	2	True				
ANR	8077373	ParameterType	pcl_parser_state_t *		8077265	0					
ANR	8077374	Identifier	pcl_parser_state		8077265	1					
ANR	8077375	CFGEntryNode	ENTRY		8077265		True				
ANR	8077376	CFGExitNode	EXIT		8077265		True				
ANR	8077377	Symbol	pcl_parser_state -> definitions -> pcl_command_next_index		8077265						
ANR	8077378	Symbol	* * pcl_parser_state -> definitions		8077265						
ANR	8077379	Symbol	pcl_parser_state		8077265						
ANR	8077380	Symbol	* pcl_parser_state -> definitions		8077265						
ANR	8077381	Symbol	prev		8077265						
ANR	8077382	Symbol	* index		8077265						
ANR	8077383	Symbol	index		8077265						
ANR	8077384	Symbol	* pindex		8077265						
ANR	8077385	Symbol	* prev		8077265						
ANR	8077386	Symbol	pcl_parser_state -> definitions -> pcl_command_list		8077265						
ANR	8077387	Symbol	pcl_parser_state -> definitions		8077265						
ANR	8077388	Symbol	* pcl_parser_state -> definitions -> pcl_command_list		8077265						
ANR	8077389	Symbol	* pcl_parser_state		8077265						
ANR	8077390	Symbol	* * pcl_parser_state		8077265						
ANR	8077391	Symbol	pindex		8077265						
ANR	8077392	Symbol	* * * pcl_parser_state		8077265						
ANR	8077393	Symbol	pcmd		8077265						
ANR	8077394	Function	pcl_define_control_command	62:0:2077:2775							
ANR	8077395	FunctionDef	"pcl_define_control_command (int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state)"		8077394	0					
ANR	8077396	CompoundStatement		66:0:2260:2775	8077394	0					
ANR	8077397	IfStatement	if ( chr < 0 || chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices ) )		8077394	0					
ANR	8077398	Condition	chr < 0 || chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )	68:8:2283:2383	8077394	0	True				
ANR	8077399	OrExpression	chr < 0 || chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )		8077394	0		||			
ANR	8077400	RelationalExpression	chr < 0		8077394	0		<			
ANR	8077401	Identifier	chr		8077394	0					
ANR	8077402	PrimaryExpression	0		8077394	1					
ANR	8077403	RelationalExpression	chr >= countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )		8077394	1		>=			
ANR	8077404	Identifier	chr		8077394	0					
ANR	8077405	CallExpression	countof ( pcl_parser_state -> definitions -> pcl_control_command_indices )		8077394	1					
ANR	8077406	Callee	countof		8077394	0					
ANR	8077407	Identifier	countof		8077394	0					
ANR	8077408	ArgumentList	pcl_parser_state -> definitions -> pcl_control_command_indices		8077394	1					
ANR	8077409	Argument	pcl_parser_state -> definitions -> pcl_control_command_indices		8077394	0					
ANR	8077410	PtrMemberAccess	pcl_parser_state -> definitions -> pcl_control_command_indices		8077394	0					
ANR	8077411	PtrMemberAccess	pcl_parser_state -> definitions		8077394	0					
ANR	8077412	Identifier	pcl_parser_state		8077394	0					
ANR	8077413	Identifier	definitions		8077394	1					
ANR	8077414	Identifier	pcl_control_command_indices		8077394	1					
ANR	8077415	ExpressionStatement	"if_debug1 ( 'I' , ""Invalid control character %d\\n"" , chr )"	71:8:2394:2447	8077394	1	True				
ANR	8077416	CallExpression	"if_debug1 ( 'I' , ""Invalid control character %d\\n"" , chr )"		8077394	0					
ANR	8077417	Callee	if_debug1		8077394	0					
ANR	8077418	Identifier	if_debug1		8077394	0					
ANR	8077419	ArgumentList	'I'		8077394	1					
ANR	8077420	Argument	'I'		8077394	0					
ANR	8077421	PrimaryExpression	'I'		8077394	0					
ANR	8077422	Argument	"""Invalid control character %d\\n"""		8077394	1					
ANR	8077423	PrimaryExpression	"""Invalid control character %d\\n"""		8077394	0					
ANR	8077424	Argument	chr		8077394	2					
ANR	8077425	Identifier	chr		8077394	0					
ANR	8077426	ElseStatement	else		8077394	0					
ANR	8077427	Statement	if	72:9:2458:2459	8077394	0	True				
ANR	8077428	Statement	(	72:12:2461:2461	8077394	1	True				
ANR	8077429	Statement	pcl_register_command	74:16:2486:2505	8077394	2	True				
ANR	8077430	Statement	(	74:36:2506:2506	8077394	3	True				
ANR	8077431	Statement	&	74:37:2507:2507	8077394	4	True				
ANR	8077432	Statement	pcl_parser_state	74:38:2508:2523	8077394	5	True				
ANR	8077433	Statement	->	74:54:2524:2525	8077394	6	True				
ANR	8077434	Statement	definitions	75:37:2564:2574	8077394	7	True				
ANR	8077435	Statement	->	75:48:2575:2576	8077394	8	True				
ANR	8077436	Statement	pcl_control_command_indices	75:50:2577:2603	8077394	9	True				
ANR	8077437	Statement	[	76:37:2642:2642	8077394	10	True				
ANR	8077438	Statement	chr	76:38:2643:2645	8077394	11	True				
ANR	8077439	Statement	]	76:41:2646:2646	8077394	12	True				
ANR	8077440	Statement	","	76:42:2647:2647	8077394	13	True				
ANR	8077441	Statement	pcmd	76:44:2649:2652	8077394	14	True				
ANR	8077442	Statement	","	76:48:2653:2653	8077394	15	True				
ANR	8077443	Statement	pcl_parser_state	76:50:2655:2670	8077394	16	True				
ANR	8077444	Statement	)	76:66:2671:2671	8077394	17	True				
ANR	8077445	Statement	)	78:8:2694:2694	8077394	18	True				
ANR	8077446	ExpressionStatement	"if_debug1 ( 'I' , ""Redefining control character %d\\n"" , chr )"	79:8:2704:2760	8077394	19	True				
ANR	8077447	CallExpression	"if_debug1 ( 'I' , ""Redefining control character %d\\n"" , chr )"		8077394	0					
ANR	8077448	Callee	if_debug1		8077394	0					
ANR	8077449	Identifier	if_debug1		8077394	0					
ANR	8077450	ArgumentList	'I'		8077394	1					
ANR	8077451	Argument	'I'		8077394	0					
ANR	8077452	PrimaryExpression	'I'		8077394	0					
ANR	8077453	Argument	"""Redefining control character %d\\n"""		8077394	1					
ANR	8077454	PrimaryExpression	"""Redefining control character %d\\n"""		8077394	0					
ANR	8077455	Argument	chr		8077394	2					
ANR	8077456	Identifier	chr		8077394	0					
ANR	8077457	ExpressionStatement		81:4:2773:2773	8077394	20	True				
ANR	8077458	ReturnType	void		8077394	1					
ANR	8077459	Identifier	pcl_define_control_command		8077394	2					
ANR	8077460	ParameterList	"int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state"		8077394	3					
ANR	8077461	Parameter	int chr	63:27:2109:2125	8077394	0	True				
ANR	8077462	ParameterType	int		8077394	0					
ANR	8077463	Identifier	chr		8077394	1					
ANR	8077464	Parameter	const pcl_command_definition_t * pcmd	64:27:2155:2191	8077394	1	True				
ANR	8077465	ParameterType	const pcl_command_definition_t *		8077394	0					
ANR	8077466	Identifier	pcmd		8077394	1					
ANR	8077467	Parameter	pcl_parser_state_t * pcl_parser_state	65:27:2221:2257	8077394	2	True				
ANR	8077468	ParameterType	pcl_parser_state_t *		8077394	0					
ANR	8077469	Identifier	pcl_parser_state		8077394	1					
ANR	8077470	CFGEntryNode	ENTRY		8077394		True				
ANR	8077471	CFGExitNode	EXIT		8077394		True				
ANR	8077472	Symbol	* pcl_parser_state		8077394						
ANR	8077473	Symbol	countof		8077394						
ANR	8077474	Symbol	pcl_parser_state		8077394						
ANR	8077475	Symbol	* * pcl_parser_state		8077394						
ANR	8077476	Symbol	* pcl_parser_state -> definitions		8077394						
ANR	8077477	Symbol	chr		8077394						
ANR	8077478	Symbol	pcmd		8077394						
ANR	8077479	Symbol	pcl_parser_state -> definitions -> pcl_control_command_indices		8077394						
ANR	8077480	Symbol	pcl_parser_state -> definitions		8077394						
ANR	8077481	Function	pcl_define_escape_command	83:0:2777:3466							
ANR	8077482	FunctionDef	"pcl_define_escape_command (int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state)"		8077481	0					
ANR	8077483	CompoundStatement		87:0:2957:3466	8077481	0					
ANR	8077484	IfStatement	if ( chr < min_escape_2char || chr > max_escape_2char )		8077481	0					
ANR	8077485	Condition	chr < min_escape_2char || chr > max_escape_2char	89:8:2980:3027	8077481	0	True				
ANR	8077486	OrExpression	chr < min_escape_2char || chr > max_escape_2char		8077481	0		||			
ANR	8077487	RelationalExpression	chr < min_escape_2char		8077481	0		<			
ANR	8077488	Identifier	chr		8077481	0					
ANR	8077489	Identifier	min_escape_2char		8077481	1					
ANR	8077490	RelationalExpression	chr > max_escape_2char		8077481	1		>			
ANR	8077491	Identifier	chr		8077481	0					
ANR	8077492	Identifier	max_escape_2char		8077481	1					
ANR	8077493	ExpressionStatement	"if_debug1 ( 'I' , ""Invalid escape character %c\\n"" , chr )"	90:8:3038:3090	8077481	1	True				
ANR	8077494	CallExpression	"if_debug1 ( 'I' , ""Invalid escape character %c\\n"" , chr )"		8077481	0					
ANR	8077495	Callee	if_debug1		8077481	0					
ANR	8077496	Identifier	if_debug1		8077481	0					
ANR	8077497	ArgumentList	'I'		8077481	1					
ANR	8077498	Argument	'I'		8077481	0					
ANR	8077499	PrimaryExpression	'I'		8077481	0					
ANR	8077500	Argument	"""Invalid escape character %c\\n"""		8077481	1					
ANR	8077501	PrimaryExpression	"""Invalid escape character %c\\n"""		8077481	0					
ANR	8077502	Argument	chr		8077481	2					
ANR	8077503	Identifier	chr		8077481	0					
ANR	8077504	ElseStatement	else		8077481	0					
ANR	8077505	Statement	if	91:9:3101:3102	8077481	0	True				
ANR	8077506	Statement	(	91:12:3104:3104	8077481	1	True				
ANR	8077507	Statement	pcl_register_command	93:16:3129:3148	8077481	2	True				
ANR	8077508	Statement	(	93:36:3149:3149	8077481	3	True				
ANR	8077509	Statement	&	93:37:3150:3150	8077481	4	True				
ANR	8077510	Statement	pcl_parser_state	93:38:3151:3166	8077481	5	True				
ANR	8077511	Statement	->	93:54:3167:3168	8077481	6	True				
ANR	8077512	Statement	definitions	94:37:3207:3217	8077481	7	True				
ANR	8077513	Statement	->	94:48:3218:3219	8077481	8	True				
ANR	8077514	Statement	pcl_escape_command_indices	94:50:3220:3245	8077481	9	True				
ANR	8077515	Statement	[	95:37:3284:3284	8077481	10	True				
ANR	8077516	Statement	chr	95:38:3285:3287	8077481	11	True				
ANR	8077517	Statement	-	95:42:3289:3289	8077481	12	True				
ANR	8077518	Statement	min_escape_2char	95:44:3291:3306	8077481	13	True				
ANR	8077519	Statement	]	95:60:3307:3307	8077481	14	True				
ANR	8077520	Statement	","	95:61:3308:3308	8077481	15	True				
ANR	8077521	Statement	pcmd	95:63:3310:3313	8077481	16	True				
ANR	8077522	Statement	","	95:67:3314:3314	8077481	17	True				
ANR	8077523	Statement	pcl_parser_state	96:37:3353:3368	8077481	18	True				
ANR	8077524	Statement	)	96:53:3369:3369	8077481	19	True				
ANR	8077525	Statement	)	98:8:3392:3392	8077481	20	True				
ANR	8077526	Statement	if_debug1	99:8:3402:3410	8077481	21	True				
ANR	8077527	Statement	(	99:17:3411:3411	8077481	22	True				
ANR	8077528	Statement	'I'	99:18:3412:3414	8077481	23	True				
ANR	8077529	Statement	","	99:21:3415:3415	8077481	24	True				
ANR	8077530	Statement	"""Redefining ESC %c\\n"""	99:23:3417:3437	8077481	25	True				
ANR	8077531	Statement	","	99:44:3438:3438	8077481	26	True				
ANR	8077532	Statement	chr	99:46:3440:3442	8077481	27	True				
ANR	8077533	Statement	)	99:49:3443:3443	8077481	28	True				
ANR	8077534	ExpressionStatement		101:12:3464:3464	8077481	29	True				
ANR	8077535	ReturnType	void		8077481	1					
ANR	8077536	Identifier	pcl_define_escape_command		8077481	2					
ANR	8077537	ParameterList	"int chr , const pcl_command_definition_t * pcmd , pcl_parser_state_t * pcl_parser_state"		8077481	3					
ANR	8077538	Parameter	int chr	84:26:2808:2824	8077481	0	True				
ANR	8077539	ParameterType	int		8077481	0					
ANR	8077540	Identifier	chr		8077481	1					
ANR	8077541	Parameter	const pcl_command_definition_t * pcmd	85:26:2853:2889	8077481	1	True				
ANR	8077542	ParameterType	const pcl_command_definition_t *		8077481	0					
ANR	8077543	Identifier	pcmd		8077481	1					
ANR	8077544	Parameter	pcl_parser_state_t * pcl_parser_state	86:26:2918:2954	8077481	2	True				
ANR	8077545	ParameterType	pcl_parser_state_t *		8077481	0					
ANR	8077546	Identifier	pcl_parser_state		8077481	1					
ANR	8077547	CFGEntryNode	ENTRY		8077481		True				
ANR	8077548	CFGExitNode	EXIT		8077481		True				
ANR	8077549	Symbol	pcl_parser_state		8077481						
ANR	8077550	Symbol	min_escape_2char		8077481						
ANR	8077551	Symbol	max_escape_2char		8077481						
ANR	8077552	Symbol	chr		8077481						
ANR	8077553	Symbol	pcmd		8077481						
ANR	8077554	DeclStmt									
ANR	8077555	Decl							const byte	const byte [ max_escape_class - min_escape_class + 1 ]	pcl_escape_class_indices
ANR	8077556	DeclStmt									
ANR	8077557	Decl							const pcl_grouped_command_definition_t	const pcl_grouped_command_definition_t *	pgc
ANR	8077558	DeclStmt									
ANR	8077559	Decl							const pcl_command_definition_t	const pcl_command_definition_t *	cdefn
ANR	8077560	DeclStmt									
ANR	8077561	Decl							int	int	class_index
ANR	8077562	Function	pcl_process_init	202:0:7219:7302							
ANR	8077563	FunctionDef	pcl_process_init (pcl_parser_state_t * pst)		8077562	0					
ANR	8077564	CompoundStatement		204:0:7267:7302	8077562	0					
ANR	8077565	ExpressionStatement	pcl_parser_init_inline ( pst )	205:4:7273:7300	8077562	0	True				
ANR	8077566	CallExpression	pcl_parser_init_inline ( pst )		8077562	0					
ANR	8077567	Callee	pcl_parser_init_inline		8077562	0					
ANR	8077568	Identifier	pcl_parser_init_inline		8077562	0					
ANR	8077569	ArgumentList	pst		8077562	1					
ANR	8077570	Argument	pst		8077562	0					
ANR	8077571	Identifier	pst		8077562	0					
ANR	8077572	ReturnType	void		8077562	1					
ANR	8077573	Identifier	pcl_process_init		8077562	2					
ANR	8077574	ParameterList	pcl_parser_state_t * pst		8077562	3					
ANR	8077575	Parameter	pcl_parser_state_t * pst	203:17:7241:7264	8077562	0	True				
ANR	8077576	ParameterType	pcl_parser_state_t *		8077562	0					
ANR	8077577	Identifier	pst		8077562	1					
ANR	8077578	CFGEntryNode	ENTRY		8077562		True				
ANR	8077579	CFGExitNode	EXIT		8077562		True				
ANR	8077580	Symbol	pst		8077562						
ANR	8077581	Function	pcl_adjust_arg	210:0:7428:8353							
ANR	8077582	FunctionDef	"pcl_adjust_arg (pcl_args_t * pargs , const pcl_command_definition_t * pdefn)"		8077581	0					
ANR	8077583	CompoundStatement		212:0:7514:8353	8077581	0					
ANR	8077584	IdentifierDeclStatement	uint acts = pdefn -> actions ;	213:4:7520:7546	8077581	0	True				
ANR	8077585	IdentifierDecl	acts = pdefn -> actions		8077581	0					
ANR	8077586	IdentifierDeclType	uint		8077581	0					
ANR	8077587	Identifier	acts		8077581	1					
ANR	8077588	AssignmentExpression	acts = pdefn -> actions		8077581	2		=			
ANR	8077589	Identifier	acts		8077581	0					
ANR	8077590	PtrMemberAccess	pdefn -> actions		8077581	1					
ANR	8077591	Identifier	pdefn		8077581	0					
ANR	8077592	Identifier	actions		8077581	1					
ANR	8077593	IfStatement	if ( value_is_neg ( & pargs -> value ) )		8077581	1					
ANR	8077594	Condition	value_is_neg ( & pargs -> value )	215:8:7557:7583	8077581	0	True				
ANR	8077595	CallExpression	value_is_neg ( & pargs -> value )		8077581	0					
ANR	8077596	Callee	value_is_neg		8077581	0					
ANR	8077597	Identifier	value_is_neg		8077581	0					
ANR	8077598	ArgumentList	& pargs -> value		8077581	1					
ANR	8077599	Argument	& pargs -> value		8077581	0					
ANR	8077600	UnaryOperationExpression	& pargs -> value		8077581	0					
ANR	8077601	UnaryOperator	&		8077581	0					
ANR	8077602	PtrMemberAccess	pargs -> value		8077581	1					
ANR	8077603	Identifier	pargs		8077581	0					
ANR	8077604	Identifier	value		8077581	1					
ANR	8077605	CompoundStatement		4:37:71:71	8077581	1					
ANR	8077606	SwitchStatement	switch ( acts & pca_neg_action )		8077581	0					
ANR	8077607	Condition	acts & pca_neg_action	216:16:7604:7624	8077581	0	True				
ANR	8077608	BitAndExpression	acts & pca_neg_action		8077581	0		&			
ANR	8077609	Identifier	acts		8077581	0					
ANR	8077610	Identifier	pca_neg_action		8077581	1					
ANR	8077611	CompoundStatement		5:39:112:112	8077581	1					
ANR	8077612	Label	case pca_neg_clamp :	217:12:7641:7659	8077581	0	True				
ANR	8077613	Identifier	pca_neg_clamp		8077581	0					
ANR	8077614	ExpressionStatement	"arg_set_uint ( pargs , 0 )"	218:16:7677:7699	8077581	1	True				
ANR	8077615	CallExpression	"arg_set_uint ( pargs , 0 )"		8077581	0					
ANR	8077616	Callee	arg_set_uint		8077581	0					
ANR	8077617	Identifier	arg_set_uint		8077581	0					
ANR	8077618	ArgumentList	pargs		8077581	1					
ANR	8077619	Argument	pargs		8077581	0					
ANR	8077620	Identifier	pargs		8077581	0					
ANR	8077621	Argument	0		8077581	1					
ANR	8077622	PrimaryExpression	0		8077581	0					
ANR	8077623	BreakStatement	break ;	219:16:7717:7722	8077581	2	True				
ANR	8077624	Label	case pca_neg_error :	220:12:7736:7754	8077581	3	True				
ANR	8077625	Identifier	pca_neg_error		8077581	0					
ANR	8077626	ReturnStatement	return e_Range ;	221:16:7772:7786	8077581	4	True				
ANR	8077627	Identifier	e_Range		8077581	0					
ANR	8077628	Label	case pca_neg_ignore :	222:12:7800:7819	8077581	5	True				
ANR	8077629	Identifier	pca_neg_ignore		8077581	0					
ANR	8077630	ReturnStatement	return 1 ;	223:16:7837:7845	8077581	6	True				
ANR	8077631	PrimaryExpression	1		8077581	0					
ANR	8077632	Label	default :	224:12:7859:7866	8077581	7	True				
ANR	8077633	Identifier	default		8077581	0					
ANR	8077634	ExpressionStatement		225:16:7916:7916	8077581	8	True				
ANR	8077635	ElseStatement	else		8077581	0					
ANR	8077636	IfStatement	if ( pargs -> value . i > 32767 )		8077581	0					
ANR	8077637	Condition	pargs -> value . i > 32767	227:15:7943:7964	8077581	0	True				
ANR	8077638	RelationalExpression	pargs -> value . i > 32767		8077581	0		>			
ANR	8077639	MemberAccess	pargs -> value . i		8077581	0					
ANR	8077640	PtrMemberAccess	pargs -> value		8077581	0					
ANR	8077641	Identifier	pargs		8077581	0					
ANR	8077642	Identifier	value		8077581	1					
ANR	8077643	Identifier	i		8077581	1					
ANR	8077644	PrimaryExpression	32767		8077581	1					
ANR	8077645	SwitchStatement	switch ( acts & pca_big_action )		8077581	1					
ANR	8077646	Condition	acts & pca_big_action	228:16:8011:8031	8077581	0	True				
ANR	8077647	BitAndExpression	acts & pca_big_action		8077581	0		&			
ANR	8077648	Identifier	acts		8077581	0					
ANR	8077649	Identifier	pca_big_action		8077581	1					
ANR	8077650	CompoundStatement		17:39:519:519	8077581	1					
ANR	8077651	Label	case pca_big_clamp :	229:12:8048:8066	8077581	0	True				
ANR	8077652	Identifier	pca_big_clamp		8077581	0					
ANR	8077653	ExpressionStatement	"arg_set_uint ( pargs , 32767 )"	230:16:8084:8110	8077581	1	True				
ANR	8077654	CallExpression	"arg_set_uint ( pargs , 32767 )"		8077581	0					
ANR	8077655	Callee	arg_set_uint		8077581	0					
ANR	8077656	Identifier	arg_set_uint		8077581	0					
ANR	8077657	ArgumentList	pargs		8077581	1					
ANR	8077658	Argument	pargs		8077581	0					
ANR	8077659	Identifier	pargs		8077581	0					
ANR	8077660	Argument	32767		8077581	1					
ANR	8077661	PrimaryExpression	32767		8077581	0					
ANR	8077662	BreakStatement	break ;	231:16:8128:8133	8077581	2	True				
ANR	8077663	Label	case pca_big_error :	232:12:8147:8165	8077581	3	True				
ANR	8077664	Identifier	pca_big_error		8077581	0					
ANR	8077665	ReturnStatement	return e_Range ;	233:16:8183:8197	8077581	4	True				
ANR	8077666	Identifier	e_Range		8077581	0					
ANR	8077667	Label	case pca_big_ignore :	234:12:8211:8230	8077581	5	True				
ANR	8077668	Identifier	pca_big_ignore		8077581	0					
ANR	8077669	ReturnStatement	return 1 ;	235:16:8248:8256	8077581	6	True				
ANR	8077670	PrimaryExpression	1		8077581	0					
ANR	8077671	Label	default :	236:12:8270:8277	8077581	7	True				
ANR	8077672	Identifier	default		8077581	0					
ANR	8077673	ExpressionStatement		237:16:8327:8327	8077581	8	True				
ANR	8077674	ReturnStatement	return 0 ;	239:4:8343:8351	8077581	2	True				
ANR	8077675	PrimaryExpression	0		8077581	0					
ANR	8077676	ReturnType	static int		8077581	1					
ANR	8077677	Identifier	pcl_adjust_arg		8077581	2					
ANR	8077678	ParameterList	"pcl_args_t * pargs , const pcl_command_definition_t * pdefn"		8077581	3					
ANR	8077679	Parameter	pcl_args_t * pargs	211:15:7454:7471	8077581	0	True				
ANR	8077680	ParameterType	pcl_args_t *		8077581	0					
ANR	8077681	Identifier	pargs		8077581	1					
ANR	8077682	Parameter	const pcl_command_definition_t * pdefn	211:35:7474:7511	8077581	1	True				
ANR	8077683	ParameterType	const pcl_command_definition_t *		8077581	0					
ANR	8077684	Identifier	pdefn		8077581	1					
ANR	8077685	CFGEntryNode	ENTRY		8077581		True				
ANR	8077686	CFGExitNode	EXIT		8077581		True				
ANR	8077687	Symbol	pdefn		8077581						
ANR	8077688	Symbol	e_Range		8077581						
ANR	8077689	Symbol	pargs -> value		8077581						
ANR	8077690	Symbol	& pargs -> value		8077581						
ANR	8077691	Symbol	value_is_neg		8077581						
ANR	8077692	Symbol	acts		8077581						
ANR	8077693	Symbol	* pargs		8077581						
ANR	8077694	Symbol	pca_big_action		8077581						
ANR	8077695	Symbol	pargs -> value . i		8077581						
ANR	8077696	Symbol	pargs		8077581						
ANR	8077697	Symbol	* pdefn		8077581						
ANR	8077698	Symbol	pdefn -> actions		8077581						
ANR	8077699	Symbol	pca_neg_action		8077581						
ANR	8077700	Function	append_macro	243:0:8426:8895							
ANR	8077701	FunctionDef	"append_macro (const byte * from , const byte * to , pcl_state_t * pcs)"		8077700	0					
ANR	8077702	CompoundStatement		245:0:8505:8895	8077700	0					
ANR	8077703	IdentifierDeclStatement	uint count = to - from ;	246:4:8511:8533	8077700	0	True				
ANR	8077704	IdentifierDecl	count = to - from		8077700	0					
ANR	8077705	IdentifierDeclType	uint		8077700	0					
ANR	8077706	Identifier	count		8077700	1					
ANR	8077707	AssignmentExpression	count = to - from		8077700	2		=			
ANR	8077708	Identifier	count		8077700	0					
ANR	8077709	AdditiveExpression	to - from		8077700	1		-			
ANR	8077710	Identifier	to		8077700	0					
ANR	8077711	Identifier	from		8077700	1					
ANR	8077712	IdentifierDeclStatement	"uint size = gs_object_size ( pcs -> memory , pcs -> macro_definition ) ;"	247:4:8539:8601	8077700	1	True				
ANR	8077713	IdentifierDecl	"size = gs_object_size ( pcs -> memory , pcs -> macro_definition )"		8077700	0					
ANR	8077714	IdentifierDeclType	uint		8077700	0					
ANR	8077715	Identifier	size		8077700	1					
ANR	8077716	AssignmentExpression	"size = gs_object_size ( pcs -> memory , pcs -> macro_definition )"		8077700	2		=			
ANR	8077717	Identifier	size		8077700	0					
ANR	8077718	CallExpression	"gs_object_size ( pcs -> memory , pcs -> macro_definition )"		8077700	1					
ANR	8077719	Callee	gs_object_size		8077700	0					
ANR	8077720	Identifier	gs_object_size		8077700	0					
ANR	8077721	ArgumentList	pcs -> memory		8077700	1					
ANR	8077722	Argument	pcs -> memory		8077700	0					
ANR	8077723	PtrMemberAccess	pcs -> memory		8077700	0					
ANR	8077724	Identifier	pcs		8077700	0					
ANR	8077725	Identifier	memory		8077700	1					
ANR	8077726	Argument	pcs -> macro_definition		8077700	1					
ANR	8077727	PtrMemberAccess	pcs -> macro_definition		8077700	0					
ANR	8077728	Identifier	pcs		8077700	0					
ANR	8077729	Identifier	macro_definition		8077700	1					
ANR	8077730	IdentifierDeclStatement	"byte * new_defn = gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" ) ;"	248:4:8607:8739	8077700	2	True				
ANR	8077731	IdentifierDecl	"* new_defn = gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" )"		8077700	0					
ANR	8077732	IdentifierDeclType	byte *		8077700	0					
ANR	8077733	Identifier	new_defn		8077700	1					
ANR	8077734	AssignmentExpression	"* new_defn = gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" )"		8077700	2		=			
ANR	8077735	Identifier	new_defn		8077700	0					
ANR	8077736	CallExpression	"gs_resize_object ( pcs -> memory , pcs -> macro_definition , size + count , ""append_macro"" )"		8077700	1					
ANR	8077737	Callee	gs_resize_object		8077700	0					
ANR	8077738	Identifier	gs_resize_object		8077700	0					
ANR	8077739	ArgumentList	pcs -> memory		8077700	1					
ANR	8077740	Argument	pcs -> memory		8077700	0					
ANR	8077741	PtrMemberAccess	pcs -> memory		8077700	0					
ANR	8077742	Identifier	pcs		8077700	0					
ANR	8077743	Identifier	memory		8077700	1					
ANR	8077744	Argument	pcs -> macro_definition		8077700	1					
ANR	8077745	PtrMemberAccess	pcs -> macro_definition		8077700	0					
ANR	8077746	Identifier	pcs		8077700	0					
ANR	8077747	Identifier	macro_definition		8077700	1					
ANR	8077748	Argument	size + count		8077700	2					
ANR	8077749	AdditiveExpression	size + count		8077700	0		+			
ANR	8077750	Identifier	size		8077700	0					
ANR	8077751	Identifier	count		8077700	1					
ANR	8077752	Argument	"""append_macro"""		8077700	3					
ANR	8077753	PrimaryExpression	"""append_macro"""		8077700	0					
ANR	8077754	IfStatement	if ( new_defn == 0 )		8077700	3					
ANR	8077755	Condition	new_defn == 0	252:8:8750:8762	8077700	0	True				
ANR	8077756	EqualityExpression	new_defn == 0		8077700	0		==			
ANR	8077757	Identifier	new_defn		8077700	0					
ANR	8077758	PrimaryExpression	0		8077700	1					
ANR	8077759	ExpressionStatement	return_error ( e_Memory )	253:8:8773:8795	8077700	1	True				
ANR	8077760	CallExpression	return_error ( e_Memory )		8077700	0					
ANR	8077761	Callee	return_error		8077700	0					
ANR	8077762	Identifier	return_error		8077700	0					
ANR	8077763	ArgumentList	e_Memory		8077700	1					
ANR	8077764	Argument	e_Memory		8077700	0					
ANR	8077765	Identifier	e_Memory		8077700	0					
ANR	8077766	ExpressionStatement	"memcpy ( new_defn + size , from + 1 , count )"	254:4:8801:8841	8077700	4	True				
ANR	8077767	CallExpression	"memcpy ( new_defn + size , from + 1 , count )"		8077700	0					
ANR	8077768	Callee	memcpy		8077700	0					
ANR	8077769	Identifier	memcpy		8077700	0					
ANR	8077770	ArgumentList	new_defn + size		8077700	1					
ANR	8077771	Argument	new_defn + size		8077700	0					
ANR	8077772	AdditiveExpression	new_defn + size		8077700	0		+			
ANR	8077773	Identifier	new_defn		8077700	0					
ANR	8077774	Identifier	size		8077700	1					
ANR	8077775	Argument	from + 1		8077700	1					
ANR	8077776	AdditiveExpression	from + 1		8077700	0		+			
ANR	8077777	Identifier	from		8077700	0					
ANR	8077778	PrimaryExpression	1		8077700	1					
ANR	8077779	Argument	count		8077700	2					
ANR	8077780	Identifier	count		8077700	0					
ANR	8077781	ExpressionStatement	pcs -> macro_definition = new_defn	255:4:8847:8879	8077700	5	True				
ANR	8077782	AssignmentExpression	pcs -> macro_definition = new_defn		8077700	0		=			
ANR	8077783	PtrMemberAccess	pcs -> macro_definition		8077700	0					
ANR	8077784	Identifier	pcs		8077700	0					
ANR	8077785	Identifier	macro_definition		8077700	1					
ANR	8077786	Identifier	new_defn		8077700	1					
ANR	8077787	ReturnStatement	return 0 ;	256:4:8885:8893	8077700	6	True				
ANR	8077788	PrimaryExpression	0		8077700	0					
ANR	8077789	ReturnType	static int		8077700	1					
ANR	8077790	Identifier	append_macro		8077700	2					
ANR	8077791	ParameterList	"const byte * from , const byte * to , pcl_state_t * pcs"		8077700	3					
ANR	8077792	Parameter	const byte * from	244:13:8450:8466	8077700	0	True				
ANR	8077793	ParameterType	const byte *		8077700	0					
ANR	8077794	Identifier	from		8077700	1					
ANR	8077795	Parameter	const byte * to	244:32:8469:8483	8077700	1	True				
ANR	8077796	ParameterType	const byte *		8077700	0					
ANR	8077797	Identifier	to		8077700	1					
ANR	8077798	Parameter	pcl_state_t * pcs	244:49:8486:8502	8077700	2	True				
ANR	8077799	ParameterType	pcl_state_t *		8077700	0					
ANR	8077800	Identifier	pcs		8077700	1					
ANR	8077801	CFGEntryNode	ENTRY		8077700		True				
ANR	8077802	CFGExitNode	EXIT		8077700		True				
ANR	8077803	Symbol	pcs		8077700						
ANR	8077804	Symbol	size		8077700						
ANR	8077805	Symbol	e_Memory		8077700						
ANR	8077806	Symbol	count		8077700						
ANR	8077807	Symbol	new_defn		8077700						
ANR	8077808	Symbol	from		8077700						
ANR	8077809	Symbol	* pcs		8077700						
ANR	8077810	Symbol	pcs -> memory		8077700						
ANR	8077811	Symbol	gs_resize_object		8077700						
ANR	8077812	Symbol	to		8077700						
ANR	8077813	Symbol	pcs -> macro_definition		8077700						
ANR	8077814	Symbol	gs_object_size		8077700						
ANR	8077815	Function	debug_dump_char	260:0:8911:9143							
ANR	8077816	FunctionDef	"debug_dump_char (gs_memory_t * mem , char chr)"		8077815	0					
ANR	8077817	CompoundStatement		262:0:8967:9143	8077815	0					
ANR	8077818	ExpressionStatement	"dmprintf1 ( mem , ( chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"" ) , ( unsigned char ) chr )"	263:4:8973:9072	8077815	0	True				
ANR	8077819	CallExpression	"dmprintf1 ( mem , ( chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"" ) , ( unsigned char ) chr )"		8077815	0					
ANR	8077820	Callee	dmprintf1		8077815	0					
ANR	8077821	Identifier	dmprintf1		8077815	0					
ANR	8077822	ArgumentList	mem		8077815	1					
ANR	8077823	Argument	mem		8077815	0					
ANR	8077824	Identifier	mem		8077815	0					
ANR	8077825	Argument	"chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"""		8077815	1					
ANR	8077826	ConditionalExpression	"chr >= 33 && chr <= 126 ? ""%c"" : ""\\\\%03o"""		8077815	0					
ANR	8077827	Condition	chr >= 33 && chr <= 126		8077815	0					
ANR	8077828	AndExpression	chr >= 33 && chr <= 126		8077815	0		&&			
ANR	8077829	RelationalExpression	chr >= 33		8077815	0		>=			
ANR	8077830	Identifier	chr		8077815	0					
ANR	8077831	PrimaryExpression	33		8077815	1					
ANR	8077832	RelationalExpression	chr <= 126		8077815	1		<=			
ANR	8077833	Identifier	chr		8077815	0					
ANR	8077834	PrimaryExpression	126		8077815	1					
ANR	8077835	PrimaryExpression	"""%c"""		8077815	1					
ANR	8077836	PrimaryExpression	"""\\\\%03o"""		8077815	2					
ANR	8077837	Argument	( unsigned char ) chr		8077815	2					
ANR	8077838	CastExpression	( unsigned char ) chr		8077815	0					
ANR	8077839	CastTarget	unsigned char		8077815	0					
ANR	8077840	Identifier	chr		8077815	1					
ANR	8077841	IfStatement	if ( chr == '\\\\' )		8077815	1					
ANR	8077842	Condition	chr == '\\\\'	265:8:9082:9092	8077815	0	True				
ANR	8077843	EqualityExpression	chr == '\\\\'		8077815	0		==			
ANR	8077844	Identifier	chr		8077815	0					
ANR	8077845	PrimaryExpression	'\\\\'		8077815	1					
ANR	8077846	ExpressionStatement	"dmprintf1 ( mem , ""%c"" , '\\\\' )"	266:8:9103:9129	8077815	1	True				
ANR	8077847	CallExpression	"dmprintf1 ( mem , ""%c"" , '\\\\' )"		8077815	0					
ANR	8077848	Callee	dmprintf1		8077815	0					
ANR	8077849	Identifier	dmprintf1		8077815	0					
ANR	8077850	ArgumentList	mem		8077815	1					
ANR	8077851	Argument	mem		8077815	0					
ANR	8077852	Identifier	mem		8077815	0					
ANR	8077853	Argument	"""%c"""		8077815	1					
ANR	8077854	PrimaryExpression	"""%c"""		8077815	0					
ANR	8077855	Argument	'\\\\'		8077815	2					
ANR	8077856	PrimaryExpression	'\\\\'		8077815	0					
ANR	8077857	ReturnStatement	return ;	267:4:9135:9141	8077815	2	True				
ANR	8077858	ReturnType	static void		8077815	1					
ANR	8077859	Identifier	debug_dump_char		8077815	2					
ANR	8077860	ParameterList	"gs_memory_t * mem , char chr"		8077815	3					
ANR	8077861	Parameter	gs_memory_t * mem	261:16:8939:8954	8077815	0	True				
ANR	8077862	ParameterType	gs_memory_t *		8077815	0					
ANR	8077863	Identifier	mem		8077815	1					
ANR	8077864	Parameter	char chr	261:34:8957:8964	8077815	1	True				
ANR	8077865	ParameterType	char		8077815	0					
ANR	8077866	Identifier	chr		8077815	1					
ANR	8077867	CFGEntryNode	ENTRY		8077815		True				
ANR	8077868	CFGExitNode	EXIT		8077815		True				
ANR	8077869	Symbol	mem		8077815						
ANR	8077870	Symbol	chr		8077815						
ANR	8077871	Function	pcl_process	272:0:9193:27682							
ANR	8077872	FunctionDef	"pcl_process (pcl_parser_state_t * pst , pcl_state_t * pcs , stream_cursor_read * pr)"		8077871	0					
ANR	8077873	CompoundStatement		275:0:9291:27682	8077871	0					
ANR	8077874	IdentifierDeclStatement	const byte * p = pr -> ptr ;	276:4:9297:9320	8077871	0	True				
ANR	8077875	IdentifierDecl	* p = pr -> ptr		8077871	0					
ANR	8077876	IdentifierDeclType	const byte *		8077871	0					
ANR	8077877	Identifier	p		8077871	1					
ANR	8077878	AssignmentExpression	* p = pr -> ptr		8077871	2		=			
ANR	8077879	Identifier	p		8077871	0					
ANR	8077880	PtrMemberAccess	pr -> ptr		8077871	1					
ANR	8077881	Identifier	pr		8077871	0					
ANR	8077882	Identifier	ptr		8077871	1					
ANR	8077883	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	277:4:9326:9356	8077871	1	True				
ANR	8077884	IdentifierDecl	* rlimit = pr -> limit		8077871	0					
ANR	8077885	IdentifierDeclType	const byte *		8077871	0					
ANR	8077886	Identifier	rlimit		8077871	1					
ANR	8077887	AssignmentExpression	* rlimit = pr -> limit		8077871	2		=			
ANR	8077888	Identifier	rlimit		8077871	0					
ANR	8077889	PtrMemberAccess	pr -> limit		8077871	1					
ANR	8077890	Identifier	pr		8077871	0					
ANR	8077891	Identifier	limit		8077871	1					
ANR	8077892	IdentifierDeclStatement	int code = 0 ;	278:4:9362:9374	8077871	2	True				
ANR	8077893	IdentifierDecl	code = 0		8077871	0					
ANR	8077894	IdentifierDeclType	int		8077871	0					
ANR	8077895	Identifier	code		8077871	1					
ANR	8077896	AssignmentExpression	code = 0		8077871	2		=			
ANR	8077897	Identifier	code		8077871	0					
ANR	8077898	PrimaryExpression	0		8077871	1					
ANR	8077899	IdentifierDeclStatement	int bytelen = 0 ;	279:4:9380:9395	8077871	3	True				
ANR	8077900	IdentifierDecl	bytelen = 0		8077871	0					
ANR	8077901	IdentifierDeclType	int		8077871	0					
ANR	8077902	Identifier	bytelen		8077871	1					
ANR	8077903	AssignmentExpression	bytelen = 0		8077871	2		=			
ANR	8077904	Identifier	bytelen		8077871	0					
ANR	8077905	PrimaryExpression	0		8077871	1					
ANR	8077906	IdentifierDeclStatement	bool in_macro = pcs -> defining_macro ;	280:4:9401:9436	8077871	4	True				
ANR	8077907	IdentifierDecl	in_macro = pcs -> defining_macro		8077871	0					
ANR	8077908	IdentifierDeclType	bool		8077871	0					
ANR	8077909	Identifier	in_macro		8077871	1					
ANR	8077910	AssignmentExpression	in_macro = pcs -> defining_macro		8077871	2		=			
ANR	8077911	Identifier	in_macro		8077871	0					
ANR	8077912	PtrMemberAccess	pcs -> defining_macro		8077871	1					
ANR	8077913	Identifier	pcs		8077871	0					
ANR	8077914	Identifier	defining_macro		8077871	1					
ANR	8077915	IdentifierDeclStatement	const byte * macro_p = p ;	283:4:9550:9573	8077871	5	True				
ANR	8077916	IdentifierDecl	* macro_p = p		8077871	0					
ANR	8077917	IdentifierDeclType	const byte *		8077871	0					
ANR	8077918	Identifier	macro_p		8077871	1					
ANR	8077919	AssignmentExpression	* macro_p = p		8077871	2		=			
ANR	8077920	Identifier	p		8077871	0					
ANR	8077921	Identifier	p		8077871	1					
ANR	8077922	Statement	define	286:1:9611:9616	8077871	6	True				
ANR	8077923	Statement	avalue	286:8:9618:9623	8077871	7	True				
ANR	8077924	Statement	pst	286:15:9625:9627	8077871	8	True				
ANR	8077925	Statement	->	286:18:9628:9629	8077871	9	True				
ANR	8077926	Statement	args	286:20:9630:9633	8077871	10	True				
ANR	8077927	Statement	.	286:24:9634:9634	8077871	11	True				
ANR	8077928	Statement	value	286:25:9635:9639	8077871	12	True				
ANR	8077929	Statement	define	287:1:9642:9647	8077871	13	True				
ANR	8077930	Statement	param_init	287:8:9649:9658	8077871	14	True				
ANR	8077931	Statement	(	287:18:9659:9659	8077871	15	True				
ANR	8077932	Statement	)	287:19:9660:9660	8077871	16	True				
ANR	8077933	Statement	(	288:2:9665:9665	8077871	17	True				
ANR	8077934	Statement	avalue	288:3:9666:9671	8077871	18	True				
ANR	8077935	Statement	.	288:9:9672:9672	8077871	19	True				
ANR	8077936	Statement	type	288:10:9673:9676	8077871	20	True				
ANR	8077937	Statement	=	288:15:9678:9678	8077871	21	True				
ANR	8077938	Statement	pcv_none	288:17:9680:9687	8077871	22	True				
ANR	8077939	Statement	","	288:25:9688:9688	8077871	23	True				
ANR	8077940	Statement	avalue	288:27:9690:9695	8077871	24	True				
ANR	8077941	Statement	.	288:33:9696:9696	8077871	25	True				
ANR	8077942	Statement	i	288:34:9697:9697	8077871	26	True				
ANR	8077943	Statement	=	288:36:9699:9699	8077871	27	True				
ANR	8077944	Statement	0	288:38:9701:9701	8077871	28	True				
ANR	8077945	Statement	)	288:39:9702:9702	8077871	29	True				
ANR	8077946	Statement	define	291:3:9742:9747	8077871	30	True				
ANR	8077947	Statement	do_display_functions	291:10:9749:9768	8077871	31	True				
ANR	8077948	Statement	(	291:30:9769:9769	8077871	32	True				
ANR	8077949	Statement	)	291:31:9770:9770	8077871	33	True				
ANR	8077950	Statement	1	291:33:9772:9772	8077871	34	True				
ANR	8077951	WhileStatement	while ( p < rlimit )		8077871	35					
ANR	8077952	Condition	p < rlimit	296:11:9844:9853	8077871	0	True				
ANR	8077953	RelationalExpression	p < rlimit		8077871	0		<			
ANR	8077954	Identifier	p		8077871	0					
ANR	8077955	Identifier	rlimit		8077871	1					
ANR	8077956	CompoundStatement		24:8:632:676	8077871	1					
ANR	8077957	IdentifierDeclStatement	byte chr = 0x00 ;	297:8:9866:9881	8077871	0	True				
ANR	8077958	IdentifierDecl	chr = 0x00		8077871	0					
ANR	8077959	IdentifierDeclType	byte		8077871	0					
ANR	8077960	Identifier	chr		8077871	1					
ANR	8077961	AssignmentExpression	chr = 0x00		8077871	2		=			
ANR	8077962	Identifier	chr		8077871	0					
ANR	8077963	PrimaryExpression	0x00		8077871	1					
ANR	8077964	IdentifierDeclStatement	const pcl_command_definition_t * cdefn = NULL ;	298:8:9924:9968	8077871	1	True				
ANR	8077965	IdentifierDecl	* cdefn = NULL		8077871	0					
ANR	8077966	IdentifierDeclType	const pcl_command_definition_t *		8077871	0					
ANR	8077967	Identifier	cdefn		8077871	1					
ANR	8077968	AssignmentExpression	* cdefn = NULL		8077871	2		=			
ANR	8077969	Identifier	NULL		8077871	0					
ANR	8077970	Identifier	NULL		8077871	1					
ANR	8077971	SwitchStatement	switch ( pst -> scan_type )		8077871	2					
ANR	8077972	Condition	pst -> scan_type	299:16:9986:9999	8077871	0	True				
ANR	8077973	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8077974	Identifier	pst		8077871	0					
ANR	8077975	Identifier	scan_type		8077871	1					
ANR	8077976	CompoundStatement		25:32:710:710	8077871	1					
ANR	8077977	Label	case scanning_data :	300:12:10016:10034	8077871	0	True				
ANR	8077978	Identifier	scanning_data		8077871	0					
ANR	8077979	CompoundStatement		29:20:894:918	8077871	1					
ANR	8077980	IdentifierDeclStatement	uint count = uint_arg ( & pst -> args ) ;	302:20:10131:10164	8077871	0	True				
ANR	8077981	IdentifierDecl	count = uint_arg ( & pst -> args )		8077871	0					
ANR	8077982	IdentifierDeclType	uint		8077871	0					
ANR	8077983	Identifier	count		8077871	1					
ANR	8077984	AssignmentExpression	count = uint_arg ( & pst -> args )		8077871	2		=			
ANR	8077985	Identifier	count		8077871	0					
ANR	8077986	CallExpression	uint_arg ( & pst -> args )		8077871	1					
ANR	8077987	Callee	uint_arg		8077871	0					
ANR	8077988	Identifier	uint_arg		8077871	0					
ANR	8077989	ArgumentList	& pst -> args		8077871	1					
ANR	8077990	Argument	& pst -> args		8077871	0					
ANR	8077991	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8077992	UnaryOperator	&		8077871	0					
ANR	8077993	PtrMemberAccess	pst -> args		8077871	1					
ANR	8077994	Identifier	pst		8077871	0					
ANR	8077995	Identifier	args		8077871	1					
ANR	8077996	IdentifierDeclStatement	uint pos = pst -> data_pos ;	303:20:10186:10210	8077871	1	True				
ANR	8077997	IdentifierDecl	pos = pst -> data_pos		8077871	0					
ANR	8077998	IdentifierDeclType	uint		8077871	0					
ANR	8077999	Identifier	pos		8077871	1					
ANR	8078000	AssignmentExpression	pos = pst -> data_pos		8077871	2		=			
ANR	8078001	Identifier	pos		8077871	0					
ANR	8078002	PtrMemberAccess	pst -> data_pos		8077871	1					
ANR	8078003	Identifier	pst		8077871	0					
ANR	8078004	Identifier	data_pos		8077871	1					
ANR	8078005	IfStatement	if ( pos < count )		8077871	2					
ANR	8078006	Condition	pos < count	305:24:10237:10247	8077871	0	True				
ANR	8078007	RelationalExpression	pos < count		8077871	0		<			
ANR	8078008	Identifier	pos		8077871	0					
ANR	8078009	Identifier	count		8077871	1					
ANR	8078010	CompoundStatement		33:24:1033:1068	8077871	1					
ANR	8078011	IdentifierDeclStatement	uint avail = rlimit - p ;	306:24:10276:10299	8077871	0	True				
ANR	8078012	IdentifierDecl	avail = rlimit - p		8077871	0					
ANR	8078013	IdentifierDeclType	uint		8077871	0					
ANR	8078014	Identifier	avail		8077871	1					
ANR	8078015	AssignmentExpression	avail = rlimit - p		8077871	2		=			
ANR	8078016	Identifier	avail		8077871	0					
ANR	8078017	AdditiveExpression	rlimit - p		8077871	1		-			
ANR	8078018	Identifier	rlimit		8077871	0					
ANR	8078019	Identifier	p		8077871	1					
ANR	8078020	IdentifierDeclStatement	"uint copy = min ( count - pos , avail ) ;"	307:24:10325:10360	8077871	1	True				
ANR	8078021	IdentifierDecl	"copy = min ( count - pos , avail )"		8077871	0					
ANR	8078022	IdentifierDeclType	uint		8077871	0					
ANR	8078023	Identifier	copy		8077871	1					
ANR	8078024	AssignmentExpression	"copy = min ( count - pos , avail )"		8077871	2		=			
ANR	8078025	Identifier	copy		8077871	0					
ANR	8078026	CallExpression	"min ( count - pos , avail )"		8077871	1					
ANR	8078027	Callee	min		8077871	0					
ANR	8078028	Identifier	min		8077871	0					
ANR	8078029	ArgumentList	count - pos		8077871	1					
ANR	8078030	Argument	count - pos		8077871	0					
ANR	8078031	AdditiveExpression	count - pos		8077871	0		-			
ANR	8078032	Identifier	count		8077871	0					
ANR	8078033	Identifier	pos		8077871	1					
ANR	8078034	Argument	avail		8077871	1					
ANR	8078035	Identifier	avail		8077871	0					
ANR	8078036	ExpressionStatement	"memcpy ( pst -> args . data + pos , p + 1 , copy )"	309:24:10387:10428	8077871	2	True				
ANR	8078037	CallExpression	"memcpy ( pst -> args . data + pos , p + 1 , copy )"		8077871	0					
ANR	8078038	Callee	memcpy		8077871	0					
ANR	8078039	Identifier	memcpy		8077871	0					
ANR	8078040	ArgumentList	pst -> args . data + pos		8077871	1					
ANR	8078041	Argument	pst -> args . data + pos		8077871	0					
ANR	8078042	AdditiveExpression	pst -> args . data + pos		8077871	0		+			
ANR	8078043	MemberAccess	pst -> args . data		8077871	0					
ANR	8078044	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078045	Identifier	pst		8077871	0					
ANR	8078046	Identifier	args		8077871	1					
ANR	8078047	Identifier	data		8077871	1					
ANR	8078048	Identifier	pos		8077871	1					
ANR	8078049	Argument	p + 1		8077871	1					
ANR	8078050	AdditiveExpression	p + 1		8077871	0		+			
ANR	8078051	Identifier	p		8077871	0					
ANR	8078052	PrimaryExpression	1		8077871	1					
ANR	8078053	Argument	copy		8077871	2					
ANR	8078054	Identifier	copy		8077871	0					
ANR	8078055	ExpressionStatement	pst -> data_pos += copy	310:24:10454:10475	8077871	3	True				
ANR	8078056	AssignmentExpression	pst -> data_pos += copy		8077871	0		+=			
ANR	8078057	PtrMemberAccess	pst -> data_pos		8077871	0					
ANR	8078058	Identifier	pst		8077871	0					
ANR	8078059	Identifier	data_pos		8077871	1					
ANR	8078060	Identifier	copy		8077871	1					
ANR	8078061	ExpressionStatement	p += copy	311:24:10501:10510	8077871	4	True				
ANR	8078062	AssignmentExpression	p += copy		8077871	0		+=			
ANR	8078063	Identifier	p		8077871	0					
ANR	8078064	Identifier	copy		8077871	1					
ANR	8078065	ContinueStatement	continue ;	312:24:10536:10544	8077871	5	True				
ANR	8078066	ExpressionStatement	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , pst -> args . command )"	315:20:10634:10893	8077871	3	True				
ANR	8078067	AssignmentExpression	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , pst -> args . command )"		8077871	0		=			
ANR	8078068	Identifier	cdefn		8077871	0					
ANR	8078069	CallExpression	"pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , pst -> args . command )"		8077871	1					
ANR	8078070	Callee	pcl_get_command_definition		8077871	0					
ANR	8078071	Identifier	pcl_get_command_definition		8077871	0					
ANR	8078072	ArgumentList	pst		8077871	1					
ANR	8078073	Argument	pst		8077871	0					
ANR	8078074	Identifier	pst		8077871	0					
ANR	8078075	Argument	pst -> param_class		8077871	1					
ANR	8078076	PtrMemberAccess	pst -> param_class		8077871	0					
ANR	8078077	Identifier	pst		8077871	0					
ANR	8078078	Identifier	param_class		8077871	1					
ANR	8078079	Argument	pst -> param_group		8077871	2					
ANR	8078080	PtrMemberAccess	pst -> param_group		8077871	0					
ANR	8078081	Identifier	pst		8077871	0					
ANR	8078082	Identifier	param_group		8077871	1					
ANR	8078083	Argument	pst -> args . command		8077871	3					
ANR	8078084	MemberAccess	pst -> args . command		8077871	0					
ANR	8078085	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078086	Identifier	pst		8077871	0					
ANR	8078087	Identifier	args		8077871	1					
ANR	8078088	Identifier	command		8077871	1					
ANR	8078089	IfStatement	if ( pst -> short_hand )		8077871	4					
ANR	8078090	Condition	pst -> short_hand	319:24:10919:10933	8077871	0	True				
ANR	8078091	PtrMemberAccess	pst -> short_hand		8077871	0					
ANR	8078092	Identifier	pst		8077871	0					
ANR	8078093	Identifier	short_hand		8077871	1					
ANR	8078094	CompoundStatement		45:41:1644:1644	8077871	1					
ANR	8078095	ExpressionStatement	pst -> scan_type = scanning_parameter	320:24:10962:10997	8077871	0	True				
ANR	8078096	AssignmentExpression	pst -> scan_type = scanning_parameter		8077871	0		=			
ANR	8078097	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8078098	Identifier	pst		8077871	0					
ANR	8078099	Identifier	scan_type		8077871	1					
ANR	8078100	Identifier	scanning_parameter		8077871	1					
ANR	8078101	ContinueStatement	continue ;	321:24:11023:11031	8077871	1	True				
ANR	8078102	ElseStatement	else		8077871	0					
ANR	8078103	ExpressionStatement	pst -> scan_type = scanning_none	323:24:11084:11114	8077871	0	True				
ANR	8078104	AssignmentExpression	pst -> scan_type = scanning_none		8077871	0		=			
ANR	8078105	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8078106	Identifier	pst		8077871	0					
ANR	8078107	Identifier	scan_type		8077871	1					
ANR	8078108	Identifier	scanning_none		8077871	1					
ANR	8078109	BreakStatement	break ;	324:20:11136:11141	8077871	5	True				
ANR	8078110	Label	case scanning_display :	326:12:11173:11194	8077871	2	True				
ANR	8078111	Identifier	scanning_display		8077871	0					
ANR	8078112	CompoundStatement		53:16:1920:1920	8077871	3					
ANR	8078113	ExpressionStatement	chr = * ++ p	329:20:11300:11310	8077871	0	True				
ANR	8078114	AssignmentExpression	chr = * ++ p		8077871	0		=			
ANR	8078115	Identifier	chr		8077871	0					
ANR	8078116	UnaryOperationExpression	* ++ p		8077871	1					
ANR	8078117	UnaryOperator	*		8077871	0					
ANR	8078118	UnaryExpression	++ p		8077871	1					
ANR	8078119	IncDec	++		8077871	0					
ANR	8078120	Identifier	p		8077871	1					
ANR	8078121	IfStatement	if ( chr == ESC )		8077871	1					
ANR	8078122	Condition	chr == ESC	330:24:11336:11345	8077871	0	True				
ANR	8078123	EqualityExpression	chr == ESC		8077871	0		==			
ANR	8078124	Identifier	chr		8077871	0					
ANR	8078125	Identifier	ESC		8077871	1					
ANR	8078126	CompoundStatement		57:24:2082:2091	8077871	1					
ANR	8078127	IdentifierDeclStatement	int index ;	331:24:11374:11383	8077871	0	True				
ANR	8078128	IdentifierDecl	index		8077871	0					
ANR	8078129	IdentifierDeclType	int		8077871	0					
ANR	8078130	Identifier	index		8077871	1					
ANR	8078131	IfStatement	if ( p >= rlimit )		8077871	1					
ANR	8078132	Condition	p >= rlimit	333:28:11414:11424	8077871	0	True				
ANR	8078133	RelationalExpression	p >= rlimit		8077871	0		>=			
ANR	8078134	Identifier	p		8077871	0					
ANR	8078135	Identifier	rlimit		8077871	1					
ANR	8078136	GotoStatement	goto x ;	334:28:11455:11461	8077871	1	True				
ANR	8078137	Identifier	x		8077871	0					
ANR	8078138	IfStatement	if ( p [ 1 ] >= min_escape_2char && p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions )		8077871	2					
ANR	8078139	Condition	p [ 1 ] >= min_escape_2char && p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions	335:28:11491:12020	8077871	0	True				
ANR	8078140	AndExpression	p [ 1 ] >= min_escape_2char && p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8077871	0		&&			
ANR	8078141	RelationalExpression	p [ 1 ] >= min_escape_2char		8077871	0		>=			
ANR	8078142	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8078143	Identifier	p		8077871	0					
ANR	8078144	PrimaryExpression	1		8077871	1					
ANR	8078145	Identifier	min_escape_2char		8077871	1					
ANR	8078146	AndExpression	p [ 1 ] <= max_escape_2char && ( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8077871	1		&&			
ANR	8078147	RelationalExpression	p [ 1 ] <= max_escape_2char		8077871	0		<=			
ANR	8078148	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8078149	Identifier	p		8077871	0					
ANR	8078150	PrimaryExpression	1		8077871	1					
ANR	8078151	Identifier	max_escape_2char		8077871	1					
ANR	8078152	AndExpression	( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0 && pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8077871	1		&&			
ANR	8078153	EqualityExpression	( index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ] ) != 0		8077871	0		!=			
ANR	8078154	AssignmentExpression	index = pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ]		8077871	0		=			
ANR	8078155	Identifier	index		8077871	0					
ANR	8078156	ArrayIndexing	pst -> definitions -> pcl_escape_command_indices [ p [ 1 ] - min_escape_2char ]		8077871	1					
ANR	8078157	PtrMemberAccess	pst -> definitions -> pcl_escape_command_indices		8077871	0					
ANR	8078158	PtrMemberAccess	pst -> definitions		8077871	0					
ANR	8078159	Identifier	pst		8077871	0					
ANR	8078160	Identifier	definitions		8077871	1					
ANR	8078161	Identifier	pcl_escape_command_indices		8077871	1					
ANR	8078162	AdditiveExpression	p [ 1 ] - min_escape_2char		8077871	1		-			
ANR	8078163	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8078164	Identifier	p		8077871	0					
ANR	8078165	PrimaryExpression	1		8077871	1					
ANR	8078166	Identifier	min_escape_2char		8077871	1					
ANR	8078167	PrimaryExpression	0		8077871	1					
ANR	8078168	EqualityExpression	pst -> definitions -> pcl_command_list [ index ] -> proc == pcl_disable_display_functions		8077871	1		==			
ANR	8078169	PtrMemberAccess	pst -> definitions -> pcl_command_list [ index ] -> proc		8077871	0					
ANR	8078170	ArrayIndexing	pst -> definitions -> pcl_command_list [ index ]		8077871	0					
ANR	8078171	PtrMemberAccess	pst -> definitions -> pcl_command_list		8077871	0					
ANR	8078172	PtrMemberAccess	pst -> definitions		8077871	0					
ANR	8078173	Identifier	pst		8077871	0					
ANR	8078174	Identifier	definitions		8077871	1					
ANR	8078175	Identifier	pcl_command_list		8077871	1					
ANR	8078176	Identifier	index		8077871	1					
ANR	8078177	Identifier	proc		8077871	1					
ANR	8078178	Identifier	pcl_disable_display_functions		8077871	1					
ANR	8078179	CompoundStatement		70:59:2731:2731	8077871	1					
ANR	8078180	IfStatement	if ( do_display_functions ( ) )		8077871	0					
ANR	8078181	Condition	do_display_functions ( )	345:32:12057:12078	8077871	0	True				
ANR	8078182	CallExpression	do_display_functions ( )		8077871	0					
ANR	8078183	Callee	do_display_functions		8077871	0					
ANR	8078184	Identifier	do_display_functions		8077871	0					
ANR	8078185	ArgumentList			8077871	1					
ANR	8078186	CompoundStatement		71:56:2789:2789	8077871	1					
ANR	8078187	ExpressionStatement	pst -> args . command = chr	346:32:12115:12138	8077871	0	True				
ANR	8078188	AssignmentExpression	pst -> args . command = chr		8077871	0		=			
ANR	8078189	MemberAccess	pst -> args . command		8077871	0					
ANR	8078190	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078191	Identifier	pst		8077871	0					
ANR	8078192	Identifier	args		8077871	1					
ANR	8078193	Identifier	command		8077871	1					
ANR	8078194	Identifier	chr		8077871	1					
ANR	8078195	ExpressionStatement	"code = pcl_plain_char ( & pst -> args , pcs )"	347:32:12172:12210	8077871	1	True				
ANR	8078196	AssignmentExpression	"code = pcl_plain_char ( & pst -> args , pcs )"		8077871	0		=			
ANR	8078197	Identifier	code		8077871	0					
ANR	8078198	CallExpression	"pcl_plain_char ( & pst -> args , pcs )"		8077871	1					
ANR	8078199	Callee	pcl_plain_char		8077871	0					
ANR	8078200	Identifier	pcl_plain_char		8077871	0					
ANR	8078201	ArgumentList	& pst -> args		8077871	1					
ANR	8078202	Argument	& pst -> args		8077871	0					
ANR	8078203	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8078204	UnaryOperator	&		8077871	0					
ANR	8078205	PtrMemberAccess	pst -> args		8077871	1					
ANR	8078206	Identifier	pst		8077871	0					
ANR	8078207	Identifier	args		8077871	1					
ANR	8078208	Argument	pcs		8077871	1					
ANR	8078209	Identifier	pcs		8077871	0					
ANR	8078210	IfStatement	if ( code < 0 )		8077871	2					
ANR	8078211	Condition	code < 0	348:36:12248:12255	8077871	0	True				
ANR	8078212	RelationalExpression	code < 0		8077871	0		<			
ANR	8078213	Identifier	code		8077871	0					
ANR	8078214	PrimaryExpression	0		8077871	1					
ANR	8078215	GotoStatement	goto x ;	349:36:12294:12300	8077871	1	True				
ANR	8078216	Identifier	x		8077871	0					
ANR	8078217	ExpressionStatement	pst -> args . command = chr = * ++ p	351:28:12360:12390	8077871	1	True				
ANR	8078218	AssignmentExpression	pst -> args . command = chr = * ++ p		8077871	0		=			
ANR	8078219	MemberAccess	pst -> args . command		8077871	0					
ANR	8078220	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078221	Identifier	pst		8077871	0					
ANR	8078222	Identifier	args		8077871	1					
ANR	8078223	Identifier	command		8077871	1					
ANR	8078224	AssignmentExpression	chr = * ++ p		8077871	1		=			
ANR	8078225	Identifier	chr		8077871	0					
ANR	8078226	UnaryOperationExpression	* ++ p		8077871	1					
ANR	8078227	UnaryOperator	*		8077871	0					
ANR	8078228	UnaryExpression	++ p		8077871	1					
ANR	8078229	IncDec	++		8077871	0					
ANR	8078230	Identifier	p		8077871	1					
ANR	8078231	ExpressionStatement	"pcl_disable_display_functions ( & pst -> args , pcs )"	352:28:12420:12466	8077871	2	True				
ANR	8078232	CallExpression	"pcl_disable_display_functions ( & pst -> args , pcs )"		8077871	0					
ANR	8078233	Callee	pcl_disable_display_functions		8077871	0					
ANR	8078234	Identifier	pcl_disable_display_functions		8077871	0					
ANR	8078235	ArgumentList	& pst -> args		8077871	1					
ANR	8078236	Argument	& pst -> args		8077871	0					
ANR	8078237	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8078238	UnaryOperator	&		8077871	0					
ANR	8078239	PtrMemberAccess	pst -> args		8077871	1					
ANR	8078240	Identifier	pst		8077871	0					
ANR	8078241	Identifier	args		8077871	1					
ANR	8078242	Argument	pcs		8077871	1					
ANR	8078243	Identifier	pcs		8077871	0					
ANR	8078244	ExpressionStatement	pst -> scan_type = scanning_none	353:28:12496:12526	8077871	3	True				
ANR	8078245	AssignmentExpression	pst -> scan_type = scanning_none		8077871	0		=			
ANR	8078246	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8078247	Identifier	pst		8077871	0					
ANR	8078248	Identifier	scan_type		8077871	1					
ANR	8078249	Identifier	scanning_none		8077871	1					
ANR	8078250	IfStatement	if ( do_display_functions ( ) )		8077871	2					
ANR	8078251	Condition	do_display_functions ( )	356:24:12600:12621	8077871	0	True				
ANR	8078252	CallExpression	do_display_functions ( )		8077871	0					
ANR	8078253	Callee	do_display_functions		8077871	0					
ANR	8078254	Identifier	do_display_functions		8077871	0					
ANR	8078255	ArgumentList			8077871	1					
ANR	8078256	CompoundStatement		82:48:3332:3332	8077871	1					
ANR	8078257	IfStatement	if ( chr == CR )		8077871	0					
ANR	8078258	Condition	chr == CR	357:28:12654:12662	8077871	0	True				
ANR	8078259	EqualityExpression	chr == CR		8077871	0		==			
ANR	8078260	Identifier	chr		8077871	0					
ANR	8078261	Identifier	CR		8077871	1					
ANR	8078262	CompoundStatement		83:39:3373:3373	8077871	1					
ANR	8078263	ExpressionStatement	pcl_do_CR ( pcs )	358:28:12695:12709	8077871	0	True				
ANR	8078264	CallExpression	pcl_do_CR ( pcs )		8077871	0					
ANR	8078265	Callee	pcl_do_CR		8077871	0					
ANR	8078266	Identifier	pcl_do_CR		8077871	0					
ANR	8078267	ArgumentList	pcs		8077871	1					
ANR	8078268	Argument	pcs		8077871	0					
ANR	8078269	Identifier	pcs		8077871	0					
ANR	8078270	ExpressionStatement	code = pcl_do_LF ( pcs )	359:28:12739:12760	8077871	1	True				
ANR	8078271	AssignmentExpression	code = pcl_do_LF ( pcs )		8077871	0		=			
ANR	8078272	Identifier	code		8077871	0					
ANR	8078273	CallExpression	pcl_do_LF ( pcs )		8077871	1					
ANR	8078274	Callee	pcl_do_LF		8077871	0					
ANR	8078275	Identifier	pcl_do_LF		8077871	0					
ANR	8078276	ArgumentList	pcs		8077871	1					
ANR	8078277	Argument	pcs		8077871	0					
ANR	8078278	Identifier	pcs		8077871	0					
ANR	8078279	ElseStatement	else		8077871	0					
ANR	8078280	CompoundStatement		86:31:3501:3501	8077871	0					
ANR	8078281	ExpressionStatement	pst -> args . command = chr	361:28:12823:12846	8077871	0	True				
ANR	8078282	AssignmentExpression	pst -> args . command = chr		8077871	0		=			
ANR	8078283	MemberAccess	pst -> args . command		8077871	0					
ANR	8078284	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078285	Identifier	pst		8077871	0					
ANR	8078286	Identifier	args		8077871	1					
ANR	8078287	Identifier	command		8077871	1					
ANR	8078288	Identifier	chr		8077871	1					
ANR	8078289	ExpressionStatement	"code = pcl_plain_char ( & pst -> args , pcs )"	362:28:12876:12914	8077871	1	True				
ANR	8078290	AssignmentExpression	"code = pcl_plain_char ( & pst -> args , pcs )"		8077871	0		=			
ANR	8078291	Identifier	code		8077871	0					
ANR	8078292	CallExpression	"pcl_plain_char ( & pst -> args , pcs )"		8077871	1					
ANR	8078293	Callee	pcl_plain_char		8077871	0					
ANR	8078294	Identifier	pcl_plain_char		8077871	0					
ANR	8078295	ArgumentList	& pst -> args		8077871	1					
ANR	8078296	Argument	& pst -> args		8077871	0					
ANR	8078297	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8078298	UnaryOperator	&		8077871	0					
ANR	8078299	PtrMemberAccess	pst -> args		8077871	1					
ANR	8078300	Identifier	pst		8077871	0					
ANR	8078301	Identifier	args		8077871	1					
ANR	8078302	Argument	pcs		8077871	1					
ANR	8078303	Identifier	pcs		8077871	0					
ANR	8078304	IfStatement	if ( code < 0 )		8077871	1					
ANR	8078305	Condition	code < 0	364:28:12970:12977	8077871	0	True				
ANR	8078306	RelationalExpression	code < 0		8077871	0		<			
ANR	8078307	Identifier	code		8077871	0					
ANR	8078308	PrimaryExpression	0		8077871	1					
ANR	8078309	GotoStatement	goto x ;	365:28:13008:13014	8077871	1	True				
ANR	8078310	Identifier	x		8077871	0					
ANR	8078311	ContinueStatement	continue ;	367:20:13058:13066	8077871	3	True				
ANR	8078312	Label	case scanning_parameter :	369:12:13098:13121	8077871	4	True				
ANR	8078313	Identifier	scanning_parameter		8077871	0					
ANR	8078314	ForStatement	for ( ; ; )		8077871	5					
ANR	8078315	CompoundStatement		96:25:3856:3856	8077871	0					
ANR	8078316	IfStatement	if ( p >= rlimit )		8077871	0					
ANR	8078317	Condition	p >= rlimit	371:24:13174:13184	8077871	0	True				
ANR	8078318	RelationalExpression	p >= rlimit		8077871	0		>=			
ANR	8078319	Identifier	p		8077871	0					
ANR	8078320	Identifier	rlimit		8077871	1					
ANR	8078321	GotoStatement	goto x ;	372:24:13211:13217	8077871	1	True				
ANR	8078322	Identifier	x		8077871	0					
ANR	8078323	ExpressionStatement	chr = * ++ p	373:20:13239:13249	8077871	1	True				
ANR	8078324	AssignmentExpression	chr = * ++ p		8077871	0		=			
ANR	8078325	Identifier	chr		8077871	0					
ANR	8078326	UnaryOperationExpression	* ++ p		8077871	1					
ANR	8078327	UnaryOperator	*		8077871	0					
ANR	8078328	UnaryExpression	++ p		8077871	1					
ANR	8078329	IncDec	++		8077871	0					
ANR	8078330	Identifier	p		8077871	1					
ANR	8078331	IfStatement	if ( pst -> garbage_in_parameter )		8077871	2					
ANR	8078332	Condition	pst -> garbage_in_parameter	379:24:13541:13565	8077871	0	True				
ANR	8078333	PtrMemberAccess	pst -> garbage_in_parameter		8077871	0					
ANR	8078334	Identifier	pst		8077871	0					
ANR	8078335	Identifier	garbage_in_parameter		8077871	1					
ANR	8078336	CompoundStatement		105:51:4276:4276	8077871	1					
ANR	8078337	IfStatement	if ( chr < ' ' || chr > '?' )		8077871	0					
ANR	8078338	Condition	chr < ' ' || chr > '?'	380:28:13598:13619	8077871	0	True				
ANR	8078339	OrExpression	chr < ' ' || chr > '?'		8077871	0		||			
ANR	8078340	RelationalExpression	chr < ' '		8077871	0		<			
ANR	8078341	Identifier	chr		8077871	0					
ANR	8078342	PrimaryExpression	' '		8077871	1					
ANR	8078343	RelationalExpression	chr > '?'		8077871	1		>			
ANR	8078344	Identifier	chr		8077871	0					
ANR	8078345	PrimaryExpression	'?'		8077871	1					
ANR	8078346	CompoundStatement		106:52:4330:4330	8077871	1					
ANR	8078347	ExpressionStatement	pst -> garbage_in_parameter = false	381:28:13652:13685	8077871	0	True				
ANR	8078348	AssignmentExpression	pst -> garbage_in_parameter = false		8077871	0		=			
ANR	8078349	PtrMemberAccess	pst -> garbage_in_parameter		8077871	0					
ANR	8078350	Identifier	pst		8077871	0					
ANR	8078351	Identifier	garbage_in_parameter		8077871	1					
ANR	8078352	Identifier	false		8077871	1					
ANR	8078353	BreakStatement	break ;	382:28:13740:13745	8077871	1	True				
ANR	8078354	ElseStatement	else		8077871	0					
ANR	8078355	CompoundStatement		110:27:4508:4508	8077871	0					
ANR	8078356	IfStatement	if ( chr >= '0' && chr <= '9' )		8077871	0					
ANR	8078357	Condition	chr >= '0' && chr <= '9'	385:28:13830:13853	8077871	0	True				
ANR	8078358	AndExpression	chr >= '0' && chr <= '9'		8077871	0		&&			
ANR	8078359	RelationalExpression	chr >= '0'		8077871	0		>=			
ANR	8078360	Identifier	chr		8077871	0					
ANR	8078361	PrimaryExpression	'0'		8077871	1					
ANR	8078362	RelationalExpression	chr <= '9'		8077871	1		<=			
ANR	8078363	Identifier	chr		8077871	0					
ANR	8078364	PrimaryExpression	'9'		8077871	1					
ANR	8078365	CompoundStatement		111:54:4564:4564	8077871	1					
ANR	8078366	ExpressionStatement	chr -= '0'	386:28:13886:13896	8077871	0	True				
ANR	8078367	AssignmentExpression	chr -= '0'		8077871	0		-=			
ANR	8078368	Identifier	chr		8077871	0					
ANR	8078369	PrimaryExpression	'0'		8077871	1					
ANR	8078370	IfStatement	if ( value_is_float ( & avalue ) )		8077871	1					
ANR	8078371	Condition	value_is_float ( & avalue )	387:32:13930:13952	8077871	0	True				
ANR	8078372	CallExpression	value_is_float ( & avalue )		8077871	0					
ANR	8078373	Callee	value_is_float		8077871	0					
ANR	8078374	Identifier	value_is_float		8077871	0					
ANR	8078375	ArgumentList	& avalue		8077871	1					
ANR	8078376	Argument	& avalue		8077871	0					
ANR	8078377	UnaryOperationExpression	& avalue		8077871	0					
ANR	8078378	UnaryOperator	&		8077871	0					
ANR	8078379	Identifier	avalue		8077871	1					
ANR	8078380	ExpressionStatement	avalue . fraction += ( chr / ( pst -> scale *= 10 ) )	388:32:13987:14032	8077871	1	True				
ANR	8078381	AssignmentExpression	avalue . fraction += ( chr / ( pst -> scale *= 10 ) )		8077871	0		+=			
ANR	8078382	MemberAccess	avalue . fraction		8077871	0					
ANR	8078383	Identifier	avalue		8077871	0					
ANR	8078384	Identifier	fraction		8077871	1					
ANR	8078385	MultiplicativeExpression	chr / ( pst -> scale *= 10 )		8077871	1		/			
ANR	8078386	Identifier	chr		8077871	0					
ANR	8078387	AssignmentExpression	pst -> scale *= 10		8077871	1		*=			
ANR	8078388	PtrMemberAccess	pst -> scale		8077871	0					
ANR	8078389	Identifier	pst		8077871	0					
ANR	8078390	Identifier	scale		8077871	1					
ANR	8078391	PrimaryExpression	10		8077871	1					
ANR	8078392	ElseStatement	else		8077871	0					
ANR	8078393	ExpressionStatement	"avalue . type |= pcv_int , avalue . i = avalue . i * 10 + chr"	390:32:14099:14189	8077871	0	True				
ANR	8078394	Expression	"avalue . type |= pcv_int , avalue . i = avalue . i * 10 + chr"		8077871	0					
ANR	8078395	AssignmentExpression	avalue . type |= pcv_int		8077871	0		|=			
ANR	8078396	MemberAccess	avalue . type		8077871	0					
ANR	8078397	Identifier	avalue		8077871	0					
ANR	8078398	Identifier	type		8077871	1					
ANR	8078399	Identifier	pcv_int		8077871	1					
ANR	8078400	AssignmentExpression	avalue . i = avalue . i * 10 + chr		8077871	1		=			
ANR	8078401	MemberAccess	avalue . i		8077871	0					
ANR	8078402	Identifier	avalue		8077871	0					
ANR	8078403	Identifier	i		8077871	1					
ANR	8078404	AdditiveExpression	avalue . i * 10 + chr		8077871	1		+			
ANR	8078405	MultiplicativeExpression	avalue . i * 10		8077871	0		*			
ANR	8078406	MemberAccess	avalue . i		8077871	0					
ANR	8078407	Identifier	avalue		8077871	0					
ANR	8078408	Identifier	i		8077871	1					
ANR	8078409	PrimaryExpression	10		8077871	1					
ANR	8078410	Identifier	chr		8077871	1					
ANR	8078411	ElseStatement	else		8077871	0					
ANR	8078412	IfStatement	if ( chr == '-' )		8077871	0					
ANR	8078413	Condition	chr == '-'	392:35:14226:14235	8077871	0	True				
ANR	8078414	EqualityExpression	chr == '-'		8077871	0		==			
ANR	8078415	Identifier	chr		8077871	0					
ANR	8078416	PrimaryExpression	'-'		8077871	1					
ANR	8078417	ExpressionStatement	avalue . type |= pcv_neg	393:28:14266:14288	8077871	1	True				
ANR	8078418	AssignmentExpression	avalue . type |= pcv_neg		8077871	0		|=			
ANR	8078419	MemberAccess	avalue . type		8077871	0					
ANR	8078420	Identifier	avalue		8077871	0					
ANR	8078421	Identifier	type		8077871	1					
ANR	8078422	Identifier	pcv_neg		8077871	1					
ANR	8078423	ElseStatement	else		8077871	0					
ANR	8078424	IfStatement	if ( chr == '+' )		8077871	0					
ANR	8078425	Condition	chr == '+'	394:33:14323:14332	8077871	0	True				
ANR	8078426	EqualityExpression	chr == '+'		8077871	0		==			
ANR	8078427	Identifier	chr		8077871	0					
ANR	8078428	PrimaryExpression	'+'		8077871	1					
ANR	8078429	ExpressionStatement	avalue . type |= pcv_pos	395:28:14363:14385	8077871	1	True				
ANR	8078430	AssignmentExpression	avalue . type |= pcv_pos		8077871	0		|=			
ANR	8078431	MemberAccess	avalue . type		8077871	0					
ANR	8078432	Identifier	avalue		8077871	0					
ANR	8078433	Identifier	type		8077871	1					
ANR	8078434	Identifier	pcv_pos		8077871	1					
ANR	8078435	ElseStatement	else		8077871	0					
ANR	8078436	IfStatement	if ( chr == '.' )		8077871	0					
ANR	8078437	Condition	chr == '.'	396:33:14420:14429	8077871	0	True				
ANR	8078438	EqualityExpression	chr == '.'		8077871	0		==			
ANR	8078439	Identifier	chr		8077871	0					
ANR	8078440	PrimaryExpression	'.'		8077871	1					
ANR	8078441	ExpressionStatement	"avalue . type |= pcv_float , avalue . fraction = 0 , pst -> scale = 1.0"	397:28:14460:14555	8077871	1	True				
ANR	8078442	Expression	"avalue . type |= pcv_float , avalue . fraction = 0 , pst -> scale = 1.0"		8077871	0					
ANR	8078443	AssignmentExpression	avalue . type |= pcv_float		8077871	0		|=			
ANR	8078444	MemberAccess	avalue . type		8077871	0					
ANR	8078445	Identifier	avalue		8077871	0					
ANR	8078446	Identifier	type		8077871	1					
ANR	8078447	Identifier	pcv_float		8077871	1					
ANR	8078448	Expression	"avalue . fraction = 0 , pst -> scale = 1.0"		8077871	1					
ANR	8078449	AssignmentExpression	avalue . fraction = 0		8077871	0		=			
ANR	8078450	MemberAccess	avalue . fraction		8077871	0					
ANR	8078451	Identifier	avalue		8077871	0					
ANR	8078452	Identifier	fraction		8077871	1					
ANR	8078453	PrimaryExpression	0		8077871	1					
ANR	8078454	AssignmentExpression	pst -> scale = 1.0		8077871	1		=			
ANR	8078455	PtrMemberAccess	pst -> scale		8077871	0					
ANR	8078456	Identifier	pst		8077871	0					
ANR	8078457	Identifier	scale		8077871	1					
ANR	8078458	PrimaryExpression	1.0		8077871	1					
ANR	8078459	ElseStatement	else		8077871	0					
ANR	8078460	IfStatement	if ( chr == ' ' )		8077871	0					
ANR	8078461	Condition	chr == ' '	399:33:14590:14599	8077871	0	True				
ANR	8078462	EqualityExpression	chr == ' '		8077871	0		==			
ANR	8078463	Identifier	chr		8077871	0					
ANR	8078464	PrimaryExpression	' '		8077871	1					
ANR	8078465	ContinueStatement	continue ;	400:28:14630:14638	8077871	1	True				
ANR	8078466	ElseStatement	else		8077871	0					
ANR	8078467	IfStatement	if ( chr >= ' ' && chr <= '?' )		8077871	0					
ANR	8078468	Condition	chr >= ' ' && chr <= '?'	401:33:14673:14696	8077871	0	True				
ANR	8078469	AndExpression	chr >= ' ' && chr <= '?'		8077871	0		&&			
ANR	8078470	RelationalExpression	chr >= ' '		8077871	0		>=			
ANR	8078471	Identifier	chr		8077871	0					
ANR	8078472	PrimaryExpression	' '		8077871	1					
ANR	8078473	RelationalExpression	chr <= '?'		8077871	1		<=			
ANR	8078474	Identifier	chr		8077871	0					
ANR	8078475	PrimaryExpression	'?'		8077871	1					
ANR	8078476	CompoundStatement		127:59:5407:5407	8077871	1					
ANR	8078477	IfStatement	if ( avalue . type != pcv_none )		8077871	0					
ANR	8078478	Condition	avalue . type != pcv_none	403:32:14880:14902	8077871	0	True				
ANR	8078479	EqualityExpression	avalue . type != pcv_none		8077871	0		!=			
ANR	8078480	MemberAccess	avalue . type		8077871	0					
ANR	8078481	Identifier	avalue		8077871	0					
ANR	8078482	Identifier	type		8077871	1					
ANR	8078483	Identifier	pcv_none		8077871	1					
ANR	8078484	ExpressionStatement	pst -> garbage_in_parameter = true	404:32:14937:14969	8077871	1	True				
ANR	8078485	AssignmentExpression	pst -> garbage_in_parameter = true		8077871	0		=			
ANR	8078486	PtrMemberAccess	pst -> garbage_in_parameter		8077871	0					
ANR	8078487	Identifier	pst		8077871	0					
ANR	8078488	Identifier	garbage_in_parameter		8077871	1					
ANR	8078489	Identifier	true		8077871	1					
ANR	8078490	ContinueStatement	continue ;	405:28:14999:15007	8077871	1	True				
ANR	8078491	ElseStatement	else		8077871	0					
ANR	8078492	BreakStatement	break ;	407:28:15068:15073	8077871	0	True				
ANR	8078493	IfStatement	if ( gs_debug_c ( 'i' ) )		8077871	6					
ANR	8078494	Condition	gs_debug_c ( 'i' )	411:20:15148:15162	8077871	0	True				
ANR	8078495	CallExpression	gs_debug_c ( 'i' )		8077871	0					
ANR	8078496	Callee	gs_debug_c		8077871	0					
ANR	8078497	Identifier	gs_debug_c		8077871	0					
ANR	8078498	ArgumentList	'i'		8077871	1					
ANR	8078499	Argument	'i'		8077871	0					
ANR	8078500	PrimaryExpression	'i'		8077871	0					
ANR	8078501	CompoundStatement		137:37:5873:5873	8077871	1					
ANR	8078502	ExpressionStatement	"dmprintf ( pcs -> memory , ""ESC "" )"	412:20:15187:15216	8077871	0	True				
ANR	8078503	CallExpression	"dmprintf ( pcs -> memory , ""ESC "" )"		8077871	0					
ANR	8078504	Callee	dmprintf		8077871	0					
ANR	8078505	Identifier	dmprintf		8077871	0					
ANR	8078506	ArgumentList	pcs -> memory		8077871	1					
ANR	8078507	Argument	pcs -> memory		8077871	0					
ANR	8078508	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078509	Identifier	pcs		8077871	0					
ANR	8078510	Identifier	memory		8077871	1					
ANR	8078511	Argument	"""ESC """		8077871	1					
ANR	8078512	PrimaryExpression	"""ESC """		8077871	0					
ANR	8078513	ExpressionStatement	"debug_dump_char ( pcs -> memory , pst -> param_class )"	413:20:15238:15284	8077871	1	True				
ANR	8078514	CallExpression	"debug_dump_char ( pcs -> memory , pst -> param_class )"		8077871	0					
ANR	8078515	Callee	debug_dump_char		8077871	0					
ANR	8078516	Identifier	debug_dump_char		8077871	0					
ANR	8078517	ArgumentList	pcs -> memory		8077871	1					
ANR	8078518	Argument	pcs -> memory		8077871	0					
ANR	8078519	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078520	Identifier	pcs		8077871	0					
ANR	8078521	Identifier	memory		8077871	1					
ANR	8078522	Argument	pst -> param_class		8077871	1					
ANR	8078523	PtrMemberAccess	pst -> param_class		8077871	0					
ANR	8078524	Identifier	pst		8077871	0					
ANR	8078525	Identifier	param_class		8077871	1					
ANR	8078526	ExpressionStatement	"dmprintf ( pcs -> memory , "" "" )"	414:20:15306:15332	8077871	2	True				
ANR	8078527	CallExpression	"dmprintf ( pcs -> memory , "" "" )"		8077871	0					
ANR	8078528	Callee	dmprintf		8077871	0					
ANR	8078529	Identifier	dmprintf		8077871	0					
ANR	8078530	ArgumentList	pcs -> memory		8077871	1					
ANR	8078531	Argument	pcs -> memory		8077871	0					
ANR	8078532	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078533	Identifier	pcs		8077871	0					
ANR	8078534	Identifier	memory		8077871	1					
ANR	8078535	Argument	""" """		8077871	1					
ANR	8078536	PrimaryExpression	""" """		8077871	0					
ANR	8078537	ExpressionStatement	"debug_dump_char ( pcs -> memory , pst -> param_group )"	415:20:15354:15400	8077871	3	True				
ANR	8078538	CallExpression	"debug_dump_char ( pcs -> memory , pst -> param_group )"		8077871	0					
ANR	8078539	Callee	debug_dump_char		8077871	0					
ANR	8078540	Identifier	debug_dump_char		8077871	0					
ANR	8078541	ArgumentList	pcs -> memory		8077871	1					
ANR	8078542	Argument	pcs -> memory		8077871	0					
ANR	8078543	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078544	Identifier	pcs		8077871	0					
ANR	8078545	Identifier	memory		8077871	1					
ANR	8078546	Argument	pst -> param_group		8077871	1					
ANR	8078547	PtrMemberAccess	pst -> param_group		8077871	0					
ANR	8078548	Identifier	pst		8077871	0					
ANR	8078549	Identifier	param_group		8077871	1					
ANR	8078550	IfStatement	if ( value_is_present ( & avalue ) )		8077871	4					
ANR	8078551	Condition	value_is_present ( & avalue )	416:24:15426:15450	8077871	0	True				
ANR	8078552	CallExpression	value_is_present ( & avalue )		8077871	0					
ANR	8078553	Callee	value_is_present		8077871	0					
ANR	8078554	Identifier	value_is_present		8077871	0					
ANR	8078555	ArgumentList	& avalue		8077871	1					
ANR	8078556	Argument	& avalue		8077871	0					
ANR	8078557	UnaryOperationExpression	& avalue		8077871	0					
ANR	8078558	UnaryOperator	&		8077871	0					
ANR	8078559	Identifier	avalue		8077871	1					
ANR	8078560	CompoundStatement		142:51:6161:6161	8077871	1					
ANR	8078561	ExpressionStatement	"dmputc ( pcs -> memory , ' ' )"	417:24:15479:15503	8077871	0	True				
ANR	8078562	CallExpression	"dmputc ( pcs -> memory , ' ' )"		8077871	0					
ANR	8078563	Callee	dmputc		8077871	0					
ANR	8078564	Identifier	dmputc		8077871	0					
ANR	8078565	ArgumentList	pcs -> memory		8077871	1					
ANR	8078566	Argument	pcs -> memory		8077871	0					
ANR	8078567	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078568	Identifier	pcs		8077871	0					
ANR	8078569	Identifier	memory		8077871	1					
ANR	8078570	Argument	' '		8077871	1					
ANR	8078571	PrimaryExpression	' '		8077871	0					
ANR	8078572	IfStatement	if ( value_is_signed ( & avalue ) )		8077871	1					
ANR	8078573	Condition	value_is_signed ( & avalue )	418:28:15533:15556	8077871	0	True				
ANR	8078574	CallExpression	value_is_signed ( & avalue )		8077871	0					
ANR	8078575	Callee	value_is_signed		8077871	0					
ANR	8078576	Identifier	value_is_signed		8077871	0					
ANR	8078577	ArgumentList	& avalue		8077871	1					
ANR	8078578	Argument	& avalue		8077871	0					
ANR	8078579	UnaryOperationExpression	& avalue		8077871	0					
ANR	8078580	UnaryOperator	&		8077871	0					
ANR	8078581	Identifier	avalue		8077871	1					
ANR	8078582	ExpressionStatement	"dmputc ( pcs -> memory , ( value_is_neg ( & avalue ) ? '-' : '+' ) )"	419:28:15587:15678	8077871	1	True				
ANR	8078583	CallExpression	"dmputc ( pcs -> memory , ( value_is_neg ( & avalue ) ? '-' : '+' ) )"		8077871	0					
ANR	8078584	Callee	dmputc		8077871	0					
ANR	8078585	Identifier	dmputc		8077871	0					
ANR	8078586	ArgumentList	pcs -> memory		8077871	1					
ANR	8078587	Argument	pcs -> memory		8077871	0					
ANR	8078588	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078589	Identifier	pcs		8077871	0					
ANR	8078590	Identifier	memory		8077871	1					
ANR	8078591	Argument	value_is_neg ( & avalue ) ? '-' : '+'		8077871	1					
ANR	8078592	ConditionalExpression	value_is_neg ( & avalue ) ? '-' : '+'		8077871	0					
ANR	8078593	Condition	value_is_neg ( & avalue )		8077871	0					
ANR	8078594	CallExpression	value_is_neg ( & avalue )		8077871	0					
ANR	8078595	Callee	value_is_neg		8077871	0					
ANR	8078596	Identifier	value_is_neg		8077871	0					
ANR	8078597	ArgumentList	& avalue		8077871	1					
ANR	8078598	Argument	& avalue		8077871	0					
ANR	8078599	UnaryOperationExpression	& avalue		8077871	0					
ANR	8078600	UnaryOperator	&		8077871	0					
ANR	8078601	Identifier	avalue		8077871	1					
ANR	8078602	PrimaryExpression	'-'		8077871	1					
ANR	8078603	PrimaryExpression	'+'		8077871	2					
ANR	8078604	IfStatement	if ( value_is_float ( & avalue ) )		8077871	2					
ANR	8078605	Condition	value_is_float ( & avalue )	421:28:15708:15730	8077871	0	True				
ANR	8078606	CallExpression	value_is_float ( & avalue )		8077871	0					
ANR	8078607	Callee	value_is_float		8077871	0					
ANR	8078608	Identifier	value_is_float		8077871	0					
ANR	8078609	ArgumentList	& avalue		8077871	1					
ANR	8078610	Argument	& avalue		8077871	0					
ANR	8078611	UnaryOperationExpression	& avalue		8077871	0					
ANR	8078612	UnaryOperator	&		8077871	0					
ANR	8078613	Identifier	avalue		8077871	1					
ANR	8078614	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""%g"" , avalue . i + avalue . fraction )"	422:28:15761:15855	8077871	1	True				
ANR	8078615	CallExpression	"dmprintf1 ( pcs -> memory , ""%g"" , avalue . i + avalue . fraction )"		8077871	0					
ANR	8078616	Callee	dmprintf1		8077871	0					
ANR	8078617	Identifier	dmprintf1		8077871	0					
ANR	8078618	ArgumentList	pcs -> memory		8077871	1					
ANR	8078619	Argument	pcs -> memory		8077871	0					
ANR	8078620	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078621	Identifier	pcs		8077871	0					
ANR	8078622	Identifier	memory		8077871	1					
ANR	8078623	Argument	"""%g"""		8077871	1					
ANR	8078624	PrimaryExpression	"""%g"""		8077871	0					
ANR	8078625	Argument	avalue . i + avalue . fraction		8077871	2					
ANR	8078626	AdditiveExpression	avalue . i + avalue . fraction		8077871	0		+			
ANR	8078627	MemberAccess	avalue . i		8077871	0					
ANR	8078628	Identifier	avalue		8077871	0					
ANR	8078629	Identifier	i		8077871	1					
ANR	8078630	MemberAccess	avalue . fraction		8077871	1					
ANR	8078631	Identifier	avalue		8077871	0					
ANR	8078632	Identifier	fraction		8077871	1					
ANR	8078633	ElseStatement	else		8077871	0					
ANR	8078634	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""%u"" , avalue . i )"	425:28:15914:15952	8077871	0	True				
ANR	8078635	CallExpression	"dmprintf1 ( pcs -> memory , ""%u"" , avalue . i )"		8077871	0					
ANR	8078636	Callee	dmprintf1		8077871	0					
ANR	8078637	Identifier	dmprintf1		8077871	0					
ANR	8078638	ArgumentList	pcs -> memory		8077871	1					
ANR	8078639	Argument	pcs -> memory		8077871	0					
ANR	8078640	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078641	Identifier	pcs		8077871	0					
ANR	8078642	Identifier	memory		8077871	1					
ANR	8078643	Argument	"""%u"""		8077871	1					
ANR	8078644	PrimaryExpression	"""%u"""		8077871	0					
ANR	8078645	Argument	avalue . i		8077871	2					
ANR	8078646	MemberAccess	avalue . i		8077871	0					
ANR	8078647	Identifier	avalue		8077871	0					
ANR	8078648	Identifier	i		8077871	1					
ANR	8078649	ExpressionStatement	"dmprintf1 ( pcs -> memory , "" %c\\n"" , chr )"	427:20:15996:16032	8077871	5	True				
ANR	8078650	CallExpression	"dmprintf1 ( pcs -> memory , "" %c\\n"" , chr )"		8077871	0					
ANR	8078651	Callee	dmprintf1		8077871	0					
ANR	8078652	Identifier	dmprintf1		8077871	0					
ANR	8078653	ArgumentList	pcs -> memory		8077871	1					
ANR	8078654	Argument	pcs -> memory		8077871	0					
ANR	8078655	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078656	Identifier	pcs		8077871	0					
ANR	8078657	Identifier	memory		8077871	1					
ANR	8078658	Argument	""" %c\\n"""		8077871	1					
ANR	8078659	PrimaryExpression	""" %c\\n"""		8077871	0					
ANR	8078660	Argument	chr		8077871	2					
ANR	8078661	Identifier	chr		8077871	0					
ANR	8078662	ExpressionStatement	pst -> short_hand = false	430:16:16075:16098	8077871	7	True				
ANR	8078663	AssignmentExpression	pst -> short_hand = false		8077871	0		=			
ANR	8078664	PtrMemberAccess	pst -> short_hand		8077871	0					
ANR	8078665	Identifier	pst		8077871	0					
ANR	8078666	Identifier	short_hand		8077871	1					
ANR	8078667	Identifier	false		8077871	1					
ANR	8078668	IfStatement	if ( chr >= min_escape_command + 32 && chr <= max_escape_command + 32 )		8077871	8					
ANR	8078669	Condition	chr >= min_escape_command + 32 && chr <= max_escape_command + 32	431:20:16120:16203	8077871	0	True				
ANR	8078670	AndExpression	chr >= min_escape_command + 32 && chr <= max_escape_command + 32		8077871	0		&&			
ANR	8078671	RelationalExpression	chr >= min_escape_command + 32		8077871	0		>=			
ANR	8078672	Identifier	chr		8077871	0					
ANR	8078673	AdditiveExpression	min_escape_command + 32		8077871	1		+			
ANR	8078674	Identifier	min_escape_command		8077871	0					
ANR	8078675	PrimaryExpression	32		8077871	1					
ANR	8078676	RelationalExpression	chr <= max_escape_command + 32		8077871	1		<=			
ANR	8078677	Identifier	chr		8077871	0					
ANR	8078678	AdditiveExpression	max_escape_command + 32		8077871	1		+			
ANR	8078679	Identifier	max_escape_command		8077871	0					
ANR	8078680	PrimaryExpression	32		8077871	1					
ANR	8078681	CompoundStatement		158:52:6914:6914	8077871	1					
ANR	8078682	ExpressionStatement	pst -> short_hand = true	433:20:16228:16250	8077871	0	True				
ANR	8078683	AssignmentExpression	pst -> short_hand = true		8077871	0		=			
ANR	8078684	PtrMemberAccess	pst -> short_hand		8077871	0					
ANR	8078685	Identifier	pst		8077871	0					
ANR	8078686	Identifier	short_hand		8077871	1					
ANR	8078687	Identifier	true		8077871	1					
ANR	8078688	ExpressionStatement	chr -= 32	434:20:16272:16281	8077871	1	True				
ANR	8078689	AssignmentExpression	chr -= 32		8077871	0		-=			
ANR	8078690	Identifier	chr		8077871	0					
ANR	8078691	PrimaryExpression	32		8077871	1					
ANR	8078692	ElseStatement	else		8077871	0					
ANR	8078693	IfStatement	if ( chr >= min_escape_command && chr <= max_escape_command )		8077871	0					
ANR	8078694	Condition	chr >= min_escape_command && chr <= max_escape_command	435:27:16310:16390	8077871	0	True				
ANR	8078695	AndExpression	chr >= min_escape_command && chr <= max_escape_command		8077871	0		&&			
ANR	8078696	RelationalExpression	chr >= min_escape_command		8077871	0		>=			
ANR	8078697	Identifier	chr		8077871	0					
ANR	8078698	Identifier	min_escape_command		8077871	1					
ANR	8078699	RelationalExpression	chr <= max_escape_command		8077871	1		<=			
ANR	8078700	Identifier	chr		8077871	0					
ANR	8078701	Identifier	max_escape_command		8077871	1					
ANR	8078702	ExpressionStatement	pst -> scan_type = scanning_none	437:20:16413:16443	8077871	1	True				
ANR	8078703	AssignmentExpression	pst -> scan_type = scanning_none		8077871	0		=			
ANR	8078704	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8078705	Identifier	pst		8077871	0					
ANR	8078706	Identifier	scan_type		8077871	1					
ANR	8078707	Identifier	scanning_none		8077871	1					
ANR	8078708	ElseStatement	else		8077871	0					
ANR	8078709	CompoundStatement		164:21:7174:7174	8077871	0					
ANR	8078710	ExpressionStatement	pst -> scan_type = scanning_none	439:20:16488:16518	8077871	0	True				
ANR	8078711	AssignmentExpression	pst -> scan_type = scanning_none		8077871	0		=			
ANR	8078712	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8078713	Identifier	pst		8077871	0					
ANR	8078714	Identifier	scan_type		8077871	1					
ANR	8078715	Identifier	scanning_none		8077871	1					
ANR	8078716	ExpressionStatement	-- p	441:20:16601:16604	8077871	1	True				
ANR	8078717	UnaryExpression	-- p		8077871	0					
ANR	8078718	IncDec	--		8077871	0					
ANR	8078719	Identifier	p		8077871	1					
ANR	8078720	ContinueStatement	continue ;	442:20:16626:16634	8077871	2	True				
ANR	8078721	ExpressionStatement	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , chr )"	445:16:16739:16921	8077871	9	True				
ANR	8078722	AssignmentExpression	"cdefn = pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , chr )"		8077871	0		=			
ANR	8078723	Identifier	cdefn		8077871	0					
ANR	8078724	CallExpression	"pcl_get_command_definition ( pst , pst -> param_class , pst -> param_group , chr )"		8077871	1					
ANR	8078725	Callee	pcl_get_command_definition		8077871	0					
ANR	8078726	Identifier	pcl_get_command_definition		8077871	0					
ANR	8078727	ArgumentList	pst		8077871	1					
ANR	8078728	Argument	pst		8077871	0					
ANR	8078729	Identifier	pst		8077871	0					
ANR	8078730	Argument	pst -> param_class		8077871	1					
ANR	8078731	PtrMemberAccess	pst -> param_class		8077871	0					
ANR	8078732	Identifier	pst		8077871	0					
ANR	8078733	Identifier	param_class		8077871	1					
ANR	8078734	Argument	pst -> param_group		8077871	2					
ANR	8078735	PtrMemberAccess	pst -> param_group		8077871	0					
ANR	8078736	Identifier	pst		8077871	0					
ANR	8078737	Identifier	param_group		8077871	1					
ANR	8078738	Argument	chr		8077871	3					
ANR	8078739	Identifier	chr		8077871	0					
ANR	8078740	IfStatement	if ( cdefn )		8077871	10					
ANR	8078741	Condition	cdefn	448:20:16943:16947	8077871	0	True				
ANR	8078742	Identifier	cdefn		8077871	0					
ANR	8078743	CompoundStatement		174:27:7658:7658	8077871	1					
ANR	8078744	ExpressionStatement	"if_debug1m ( 'i' , pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"	449:20:16972:17027	8077871	0	True				
ANR	8078745	CallExpression	"if_debug1m ( 'i' , pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"		8077871	0					
ANR	8078746	Callee	if_debug1m		8077871	0					
ANR	8078747	Identifier	if_debug1m		8077871	0					
ANR	8078748	ArgumentList	'i'		8077871	1					
ANR	8078749	Argument	'i'		8077871	0					
ANR	8078750	PrimaryExpression	'i'		8077871	0					
ANR	8078751	Argument	pcs -> memory		8077871	1					
ANR	8078752	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078753	Identifier	pcs		8077871	0					
ANR	8078754	Identifier	memory		8077871	1					
ANR	8078755	Argument	"""   [%s]\\n"""		8077871	2					
ANR	8078756	PrimaryExpression	"""   [%s]\\n"""		8077871	0					
ANR	8078757	Argument	cdefn -> cname		8077871	3					
ANR	8078758	PtrMemberAccess	cdefn -> cname		8077871	0					
ANR	8078759	Identifier	cdefn		8077871	0					
ANR	8078760	Identifier	cname		8077871	1					
ANR	8078761	ExpressionStatement	"code = pcl_adjust_arg ( & pst -> args , cdefn )"	450:20:17049:17089	8077871	1	True				
ANR	8078762	AssignmentExpression	"code = pcl_adjust_arg ( & pst -> args , cdefn )"		8077871	0		=			
ANR	8078763	Identifier	code		8077871	0					
ANR	8078764	CallExpression	"pcl_adjust_arg ( & pst -> args , cdefn )"		8077871	1					
ANR	8078765	Callee	pcl_adjust_arg		8077871	0					
ANR	8078766	Identifier	pcl_adjust_arg		8077871	0					
ANR	8078767	ArgumentList	& pst -> args		8077871	1					
ANR	8078768	Argument	& pst -> args		8077871	0					
ANR	8078769	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8078770	UnaryOperator	&		8077871	0					
ANR	8078771	PtrMemberAccess	pst -> args		8077871	1					
ANR	8078772	Identifier	pst		8077871	0					
ANR	8078773	Identifier	args		8077871	1					
ANR	8078774	Argument	cdefn		8077871	1					
ANR	8078775	Identifier	cdefn		8077871	0					
ANR	8078776	IfStatement	if ( code < 0 )		8077871	2					
ANR	8078777	Condition	code < 0	451:24:17115:17122	8077871	0	True				
ANR	8078778	RelationalExpression	code < 0		8077871	0		<			
ANR	8078779	Identifier	code		8077871	0					
ANR	8078780	PrimaryExpression	0		8077871	1					
ANR	8078781	GotoStatement	goto x ;	452:24:17149:17155	8077871	1	True				
ANR	8078782	Identifier	x		8077871	0					
ANR	8078783	IfStatement	if ( cdefn -> actions & pca_byte_data )		8077871	3					
ANR	8078784	Condition	cdefn -> actions & pca_byte_data	453:24:17181:17210	8077871	0	True				
ANR	8078785	BitAndExpression	cdefn -> actions & pca_byte_data		8077871	0		&			
ANR	8078786	PtrMemberAccess	cdefn -> actions		8077871	0					
ANR	8078787	Identifier	cdefn		8077871	0					
ANR	8078788	Identifier	actions		8077871	1					
ANR	8078789	Identifier	pca_byte_data		8077871	1					
ANR	8078790	CompoundStatement		180:24:7947:7980	8077871	1					
ANR	8078791	IdentifierDeclStatement	uint count = uint_arg ( & pst -> args ) ;	454:24:17239:17272	8077871	0	True				
ANR	8078792	IdentifierDecl	count = uint_arg ( & pst -> args )		8077871	0					
ANR	8078793	IdentifierDeclType	uint		8077871	0					
ANR	8078794	Identifier	count		8077871	1					
ANR	8078795	AssignmentExpression	count = uint_arg ( & pst -> args )		8077871	2		=			
ANR	8078796	Identifier	count		8077871	0					
ANR	8078797	CallExpression	uint_arg ( & pst -> args )		8077871	1					
ANR	8078798	Callee	uint_arg		8077871	0					
ANR	8078799	Identifier	uint_arg		8077871	0					
ANR	8078800	ArgumentList	& pst -> args		8077871	1					
ANR	8078801	Argument	& pst -> args		8077871	0					
ANR	8078802	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8078803	UnaryOperator	&		8077871	0					
ANR	8078804	PtrMemberAccess	pst -> args		8077871	1					
ANR	8078805	Identifier	pst		8077871	0					
ANR	8078806	Identifier	args		8077871	1					
ANR	8078807	IfStatement	if ( ( count > 0 ) && ( rlimit - p < count ) )		8077871	1					
ANR	8078808	Condition	( count > 0 ) && ( rlimit - p < count )	456:28:17303:17337	8077871	0	True				
ANR	8078809	AndExpression	( count > 0 ) && ( rlimit - p < count )		8077871	0		&&			
ANR	8078810	RelationalExpression	count > 0		8077871	0		>			
ANR	8078811	Identifier	count		8077871	0					
ANR	8078812	PrimaryExpression	0		8077871	1					
ANR	8078813	RelationalExpression	rlimit - p < count		8077871	1		<			
ANR	8078814	AdditiveExpression	rlimit - p		8077871	0		-			
ANR	8078815	Identifier	rlimit		8077871	0					
ANR	8078816	Identifier	p		8077871	1					
ANR	8078817	Identifier	count		8077871	1					
ANR	8078818	CompoundStatement		182:65:8048:8048	8077871	1					
ANR	8078819	ExpressionStatement	"pst -> args . data = gs_alloc_bytes ( pcs -> memory , count , ""command data"" )"	457:28:17370:17516	8077871	0	True				
ANR	8078820	AssignmentExpression	"pst -> args . data = gs_alloc_bytes ( pcs -> memory , count , ""command data"" )"		8077871	0		=			
ANR	8078821	MemberAccess	pst -> args . data		8077871	0					
ANR	8078822	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078823	Identifier	pst		8077871	0					
ANR	8078824	Identifier	args		8077871	1					
ANR	8078825	Identifier	data		8077871	1					
ANR	8078826	CallExpression	"gs_alloc_bytes ( pcs -> memory , count , ""command data"" )"		8077871	1					
ANR	8078827	Callee	gs_alloc_bytes		8077871	0					
ANR	8078828	Identifier	gs_alloc_bytes		8077871	0					
ANR	8078829	ArgumentList	pcs -> memory		8077871	1					
ANR	8078830	Argument	pcs -> memory		8077871	0					
ANR	8078831	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8078832	Identifier	pcs		8077871	0					
ANR	8078833	Identifier	memory		8077871	1					
ANR	8078834	Argument	count		8077871	1					
ANR	8078835	Identifier	count		8077871	0					
ANR	8078836	Argument	"""command data"""		8077871	2					
ANR	8078837	PrimaryExpression	"""command data"""		8077871	0					
ANR	8078838	IfStatement	if ( pst -> args . data == 0 )		8077871	1					
ANR	8078839	Condition	pst -> args . data == 0	460:32:17550:17568	8077871	0	True				
ANR	8078840	EqualityExpression	pst -> args . data == 0		8077871	0		==			
ANR	8078841	MemberAccess	pst -> args . data		8077871	0					
ANR	8078842	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078843	Identifier	pst		8077871	0					
ANR	8078844	Identifier	args		8077871	1					
ANR	8078845	Identifier	data		8077871	1					
ANR	8078846	PrimaryExpression	0		8077871	1					
ANR	8078847	CompoundStatement		186:53:8279:8279	8077871	1					
ANR	8078848	ExpressionStatement	-- p	461:32:17605:17608	8077871	0	True				
ANR	8078849	UnaryExpression	-- p		8077871	0					
ANR	8078850	IncDec	--		8077871	0					
ANR	8078851	Identifier	p		8077871	1					
ANR	8078852	ExpressionStatement	code = gs_note_error ( e_Memory )	462:32:17642:17672	8077871	1	True				
ANR	8078853	AssignmentExpression	code = gs_note_error ( e_Memory )		8077871	0		=			
ANR	8078854	Identifier	code		8077871	0					
ANR	8078855	CallExpression	gs_note_error ( e_Memory )		8077871	1					
ANR	8078856	Callee	gs_note_error		8077871	0					
ANR	8078857	Identifier	gs_note_error		8077871	0					
ANR	8078858	ArgumentList	e_Memory		8077871	1					
ANR	8078859	Argument	e_Memory		8077871	0					
ANR	8078860	Identifier	e_Memory		8077871	0					
ANR	8078861	GotoStatement	goto x ;	463:32:17706:17712	8077871	2	True				
ANR	8078862	Identifier	x		8077871	0					
ANR	8078863	ExpressionStatement	pst -> args . data_on_heap = true	465:28:17772:17801	8077871	2	True				
ANR	8078864	AssignmentExpression	pst -> args . data_on_heap = true		8077871	0		=			
ANR	8078865	MemberAccess	pst -> args . data_on_heap		8077871	0					
ANR	8078866	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078867	Identifier	pst		8077871	0					
ANR	8078868	Identifier	args		8077871	1					
ANR	8078869	Identifier	data_on_heap		8077871	1					
ANR	8078870	Identifier	true		8077871	1					
ANR	8078871	ExpressionStatement	pst -> args . command = chr	466:28:17831:17854	8077871	3	True				
ANR	8078872	AssignmentExpression	pst -> args . command = chr		8077871	0		=			
ANR	8078873	MemberAccess	pst -> args . command		8077871	0					
ANR	8078874	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078875	Identifier	pst		8077871	0					
ANR	8078876	Identifier	args		8077871	1					
ANR	8078877	Identifier	command		8077871	1					
ANR	8078878	Identifier	chr		8077871	1					
ANR	8078879	ExpressionStatement	pst -> data_pos = 0	467:28:17884:17901	8077871	4	True				
ANR	8078880	AssignmentExpression	pst -> data_pos = 0		8077871	0		=			
ANR	8078881	PtrMemberAccess	pst -> data_pos		8077871	0					
ANR	8078882	Identifier	pst		8077871	0					
ANR	8078883	Identifier	data_pos		8077871	1					
ANR	8078884	PrimaryExpression	0		8077871	1					
ANR	8078885	ExpressionStatement	pst -> scan_type = scanning_data	468:28:17931:17961	8077871	5	True				
ANR	8078886	AssignmentExpression	pst -> scan_type = scanning_data		8077871	0		=			
ANR	8078887	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8078888	Identifier	pst		8077871	0					
ANR	8078889	Identifier	scan_type		8077871	1					
ANR	8078890	Identifier	scanning_data		8077871	1					
ANR	8078891	ContinueStatement	continue ;	469:28:17991:17999	8077871	6	True				
ANR	8078892	ExpressionStatement	pst -> args . data = ( byte * ) ( p + 1 )	471:24:18051:18084	8077871	2	True				
ANR	8078893	AssignmentExpression	pst -> args . data = ( byte * ) ( p + 1 )		8077871	0		=			
ANR	8078894	MemberAccess	pst -> args . data		8077871	0					
ANR	8078895	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078896	Identifier	pst		8077871	0					
ANR	8078897	Identifier	args		8077871	1					
ANR	8078898	Identifier	data		8077871	1					
ANR	8078899	CastExpression	( byte * ) ( p + 1 )		8077871	1					
ANR	8078900	CastTarget	byte *		8077871	0					
ANR	8078901	AdditiveExpression	p + 1		8077871	1		+			
ANR	8078902	Identifier	p		8077871	0					
ANR	8078903	PrimaryExpression	1		8077871	1					
ANR	8078904	ExpressionStatement	pst -> args . data_on_heap = false	472:24:18110:18140	8077871	3	True				
ANR	8078905	AssignmentExpression	pst -> args . data_on_heap = false		8077871	0		=			
ANR	8078906	MemberAccess	pst -> args . data_on_heap		8077871	0					
ANR	8078907	PtrMemberAccess	pst -> args		8077871	0					
ANR	8078908	Identifier	pst		8077871	0					
ANR	8078909	Identifier	args		8077871	1					
ANR	8078910	Identifier	data_on_heap		8077871	1					
ANR	8078911	Identifier	false		8077871	1					
ANR	8078912	ExpressionStatement	p += count	473:24:18166:18176	8077871	4	True				
ANR	8078913	AssignmentExpression	p += count		8077871	0		+=			
ANR	8078914	Identifier	p		8077871	0					
ANR	8078915	Identifier	count		8077871	1					
ANR	8078916	BreakStatement	break ;	475:20:18220:18225	8077871	4	True				
ANR	8078917	ExpressionStatement	param_init ( )	477:16:18261:18273	8077871	11	True				
ANR	8078918	CallExpression	param_init ( )		8077871	0					
ANR	8078919	Callee	param_init		8077871	0					
ANR	8078920	Identifier	param_init		8077871	0					
ANR	8078921	ArgumentList			8077871	1					
ANR	8078922	ContinueStatement	continue ;	478:16:18291:18299	8077871	12	True				
ANR	8078923	Label	case scanning_none :	479:12:18313:18331	8077871	13	True				
ANR	8078924	Identifier	scanning_none		8077871	0					
ANR	8078925	IfStatement	if ( pcs -> personality == rtl && ! pcs -> parse_other )		8077871	14					
ANR	8078926	Condition	pcs -> personality == rtl && ! pcs -> parse_other	483:20:18541:18584	8077871	0	True				
ANR	8078927	AndExpression	pcs -> personality == rtl && ! pcs -> parse_other		8077871	0		&&			
ANR	8078928	EqualityExpression	pcs -> personality == rtl		8077871	0		==			
ANR	8078929	PtrMemberAccess	pcs -> personality		8077871	0					
ANR	8078930	Identifier	pcs		8077871	0					
ANR	8078931	Identifier	personality		8077871	1					
ANR	8078932	Identifier	rtl		8077871	1					
ANR	8078933	UnaryOperationExpression	! pcs -> parse_other		8077871	1					
ANR	8078934	UnaryOperator	!		8077871	0					
ANR	8078935	PtrMemberAccess	pcs -> parse_other		8077871	1					
ANR	8078936	Identifier	pcs		8077871	0					
ANR	8078937	Identifier	parse_other		8077871	1					
ANR	8078938	CompoundStatement		209:66:9295:9295	8077871	1					
ANR	8078939	IfStatement	if ( p >= rlimit - 2 )		8077871	0					
ANR	8078940	Condition	p >= rlimit - 2	485:24:18687:18701	8077871	0	True				
ANR	8078941	RelationalExpression	p >= rlimit - 2		8077871	0		>=			
ANR	8078942	Identifier	p		8077871	0					
ANR	8078943	AdditiveExpression	rlimit - 2		8077871	1		-			
ANR	8078944	Identifier	rlimit		8077871	0					
ANR	8078945	PrimaryExpression	2		8077871	1					
ANR	8078946	GotoStatement	goto x ;	486:24:18728:18734	8077871	1	True				
ANR	8078947	Identifier	x		8077871	0					
ANR	8078948	IfStatement	if ( ( * ( p + 1 ) == 'I' && * ( p + 2 ) == 'N' ) || ( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' ) )		8077871	1					
ANR	8078949	Condition	( * ( p + 1 ) == 'I' && * ( p + 2 ) == 'N' ) || ( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )	490:24:18889:19180	8077871	0	True				
ANR	8078950	OrExpression	( * ( p + 1 ) == 'I' && * ( p + 2 ) == 'N' ) || ( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8077871	0		||			
ANR	8078951	AndExpression	* ( p + 1 ) == 'I' && * ( p + 2 ) == 'N'		8077871	0		&&			
ANR	8078952	EqualityExpression	* ( p + 1 ) == 'I'		8077871	0		==			
ANR	8078953	UnaryOperationExpression	* ( p + 1 )		8077871	0					
ANR	8078954	UnaryOperator	*		8077871	0					
ANR	8078955	AdditiveExpression	p + 1		8077871	1		+			
ANR	8078956	Identifier	p		8077871	0					
ANR	8078957	PrimaryExpression	1		8077871	1					
ANR	8078958	PrimaryExpression	'I'		8077871	1					
ANR	8078959	EqualityExpression	* ( p + 2 ) == 'N'		8077871	1		==			
ANR	8078960	UnaryOperationExpression	* ( p + 2 )		8077871	0					
ANR	8078961	UnaryOperator	*		8077871	0					
ANR	8078962	AdditiveExpression	p + 2		8077871	1		+			
ANR	8078963	Identifier	p		8077871	0					
ANR	8078964	PrimaryExpression	2		8077871	1					
ANR	8078965	PrimaryExpression	'N'		8077871	1					
ANR	8078966	OrExpression	( * ( p + 1 ) == 'D' && * ( p + 2 ) == 'F' ) || ( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8077871	1		||			
ANR	8078967	AndExpression	* ( p + 1 ) == 'D' && * ( p + 2 ) == 'F'		8077871	0		&&			
ANR	8078968	EqualityExpression	* ( p + 1 ) == 'D'		8077871	0		==			
ANR	8078969	UnaryOperationExpression	* ( p + 1 )		8077871	0					
ANR	8078970	UnaryOperator	*		8077871	0					
ANR	8078971	AdditiveExpression	p + 1		8077871	1		+			
ANR	8078972	Identifier	p		8077871	0					
ANR	8078973	PrimaryExpression	1		8077871	1					
ANR	8078974	PrimaryExpression	'D'		8077871	1					
ANR	8078975	EqualityExpression	* ( p + 2 ) == 'F'		8077871	1		==			
ANR	8078976	UnaryOperationExpression	* ( p + 2 )		8077871	0					
ANR	8078977	UnaryOperator	*		8077871	0					
ANR	8078978	AdditiveExpression	p + 2		8077871	1		+			
ANR	8078979	Identifier	p		8077871	0					
ANR	8078980	PrimaryExpression	2		8077871	1					
ANR	8078981	PrimaryExpression	'F'		8077871	1					
ANR	8078982	OrExpression	( * ( p + 1 ) == 'B' && * ( p + 2 ) == 'P' ) || ( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8077871	1		||			
ANR	8078983	AndExpression	* ( p + 1 ) == 'B' && * ( p + 2 ) == 'P'		8077871	0		&&			
ANR	8078984	EqualityExpression	* ( p + 1 ) == 'B'		8077871	0		==			
ANR	8078985	UnaryOperationExpression	* ( p + 1 )		8077871	0					
ANR	8078986	UnaryOperator	*		8077871	0					
ANR	8078987	AdditiveExpression	p + 1		8077871	1		+			
ANR	8078988	Identifier	p		8077871	0					
ANR	8078989	PrimaryExpression	1		8077871	1					
ANR	8078990	PrimaryExpression	'B'		8077871	1					
ANR	8078991	EqualityExpression	* ( p + 2 ) == 'P'		8077871	1		==			
ANR	8078992	UnaryOperationExpression	* ( p + 2 )		8077871	0					
ANR	8078993	UnaryOperator	*		8077871	0					
ANR	8078994	AdditiveExpression	p + 2		8077871	1		+			
ANR	8078995	Identifier	p		8077871	0					
ANR	8078996	PrimaryExpression	2		8077871	1					
ANR	8078997	PrimaryExpression	'P'		8077871	1					
ANR	8078998	OrExpression	( * ( p + 1 ) == 'P' && * ( p + 2 ) == 'G' ) || ( * ( p + 1 ) == 'S' && * ( p + 2 ) == 'P' )		8077871	1		||			
ANR	8078999	AndExpression	* ( p + 1 ) == 'P' && * ( p + 2 ) == 'G'		8077871	0		&&			
ANR	8079000	EqualityExpression	* ( p + 1 ) == 'P'		8077871	0		==			
ANR	8079001	UnaryOperationExpression	* ( p + 1 )		8077871	0					
ANR	8079002	UnaryOperator	*		8077871	0					
ANR	8079003	AdditiveExpression	p + 1		8077871	1		+			
ANR	8079004	Identifier	p		8077871	0					
ANR	8079005	PrimaryExpression	1		8077871	1					
ANR	8079006	PrimaryExpression	'P'		8077871	1					
ANR	8079007	EqualityExpression	* ( p + 2 ) == 'G'		8077871	1		==			
ANR	8079008	UnaryOperationExpression	* ( p + 2 )		8077871	0					
ANR	8079009	UnaryOperator	*		8077871	0					
ANR	8079010	AdditiveExpression	p + 2		8077871	1		+			
ANR	8079011	Identifier	p		8077871	0					
ANR	8079012	PrimaryExpression	2		8077871	1					
ANR	8079013	PrimaryExpression	'G'		8077871	1					
ANR	8079014	AndExpression	* ( p + 1 ) == 'S' && * ( p + 2 ) == 'P'		8077871	1		&&			
ANR	8079015	EqualityExpression	* ( p + 1 ) == 'S'		8077871	0		==			
ANR	8079016	UnaryOperationExpression	* ( p + 1 )		8077871	0					
ANR	8079017	UnaryOperator	*		8077871	0					
ANR	8079018	AdditiveExpression	p + 1		8077871	1		+			
ANR	8079019	Identifier	p		8077871	0					
ANR	8079020	PrimaryExpression	1		8077871	1					
ANR	8079021	PrimaryExpression	'S'		8077871	1					
ANR	8079022	EqualityExpression	* ( p + 2 ) == 'P'		8077871	1		==			
ANR	8079023	UnaryOperationExpression	* ( p + 2 )		8077871	0					
ANR	8079024	UnaryOperator	*		8077871	0					
ANR	8079025	AdditiveExpression	p + 2		8077871	1		+			
ANR	8079026	Identifier	p		8077871	0					
ANR	8079027	PrimaryExpression	2		8077871	1					
ANR	8079028	PrimaryExpression	'P'		8077871	1					
ANR	8079029	CompoundStatement		222:24:9918:9933	8077871	1					
ANR	8079030	IdentifierDeclStatement	pcl_args_t args ;	496:24:19210:19225	8077871	0	True				
ANR	8079031	IdentifierDecl	args		8077871	0					
ANR	8079032	IdentifierDeclType	pcl_args_t		8077871	0					
ANR	8079033	Identifier	args		8077871	1					
ANR	8079034	ExpressionStatement	"arg_set_uint ( & args , 0 )"	497:24:19251:19273	8077871	1	True				
ANR	8079035	CallExpression	"arg_set_uint ( & args , 0 )"		8077871	0					
ANR	8079036	Callee	arg_set_uint		8077871	0					
ANR	8079037	Identifier	arg_set_uint		8077871	0					
ANR	8079038	ArgumentList	& args		8077871	1					
ANR	8079039	Argument	& args		8077871	0					
ANR	8079040	UnaryOperationExpression	& args		8077871	0					
ANR	8079041	UnaryOperator	&		8077871	0					
ANR	8079042	Identifier	args		8077871	1					
ANR	8079043	Argument	0		8077871	1					
ANR	8079044	PrimaryExpression	0		8077871	0					
ANR	8079045	ExpressionStatement	"code = rtl_enter_hpgl_mode ( & args , pcs )"	498:24:19299:19337	8077871	2	True				
ANR	8079046	AssignmentExpression	"code = rtl_enter_hpgl_mode ( & args , pcs )"		8077871	0		=			
ANR	8079047	Identifier	code		8077871	0					
ANR	8079048	CallExpression	"rtl_enter_hpgl_mode ( & args , pcs )"		8077871	1					
ANR	8079049	Callee	rtl_enter_hpgl_mode		8077871	0					
ANR	8079050	Identifier	rtl_enter_hpgl_mode		8077871	0					
ANR	8079051	ArgumentList	& args		8077871	1					
ANR	8079052	Argument	& args		8077871	0					
ANR	8079053	UnaryOperationExpression	& args		8077871	0					
ANR	8079054	UnaryOperator	&		8077871	0					
ANR	8079055	Identifier	args		8077871	1					
ANR	8079056	Argument	pcs		8077871	1					
ANR	8079057	Identifier	pcs		8077871	0					
ANR	8079058	IfStatement	if ( code < 0 )		8077871	3					
ANR	8079059	Condition	code < 0	499:28:19367:19374	8077871	0	True				
ANR	8079060	RelationalExpression	code < 0		8077871	0		<			
ANR	8079061	Identifier	code		8077871	0					
ANR	8079062	PrimaryExpression	0		8077871	1					
ANR	8079063	GotoStatement	goto x ;	500:28:19405:19411	8077871	1	True				
ANR	8079064	Identifier	x		8077871	0					
ANR	8079065	IfStatement	if ( pcs -> parse_other )		8077871	15					
ANR	8079066	Condition	pcs -> parse_other	504:20:19474:19489	8077871	0	True				
ANR	8079067	PtrMemberAccess	pcs -> parse_other		8077871	0					
ANR	8079068	Identifier	pcs		8077871	0					
ANR	8079069	Identifier	parse_other		8077871	1					
ANR	8079070	CompoundStatement		230:38:10200:10200	8077871	1					
ANR	8079071	ExpressionStatement	pr -> ptr = p	508:20:19701:19712	8077871	0	True				
ANR	8079072	AssignmentExpression	pr -> ptr = p		8077871	0		=			
ANR	8079073	PtrMemberAccess	pr -> ptr		8077871	0					
ANR	8079074	Identifier	pr		8077871	0					
ANR	8079075	Identifier	ptr		8077871	1					
ANR	8079076	Identifier	p		8077871	1					
ANR	8079077	ExpressionStatement	"code = ( * pcs -> parse_other ) ( pcs -> parse_data , pcs , pr )"	509:20:19734:19811	8077871	1	True				
ANR	8079078	AssignmentExpression	"code = ( * pcs -> parse_other ) ( pcs -> parse_data , pcs , pr )"		8077871	0		=			
ANR	8079079	Identifier	code		8077871	0					
ANR	8079080	CallExpression	"( * pcs -> parse_other ) ( pcs -> parse_data , pcs , pr )"		8077871	1					
ANR	8079081	Callee	* pcs -> parse_other		8077871	0					
ANR	8079082	UnaryOperationExpression	* pcs -> parse_other		8077871	0					
ANR	8079083	UnaryOperator	*		8077871	0					
ANR	8079084	PtrMemberAccess	pcs -> parse_other		8077871	1					
ANR	8079085	Identifier	pcs		8077871	0					
ANR	8079086	Identifier	parse_other		8077871	1					
ANR	8079087	ArgumentList	pcs -> parse_data		8077871	1					
ANR	8079088	Argument	pcs -> parse_data		8077871	0					
ANR	8079089	PtrMemberAccess	pcs -> parse_data		8077871	0					
ANR	8079090	Identifier	pcs		8077871	0					
ANR	8079091	Identifier	parse_data		8077871	1					
ANR	8079092	Argument	pcs		8077871	1					
ANR	8079093	Identifier	pcs		8077871	0					
ANR	8079094	Argument	pr		8077871	2					
ANR	8079095	Identifier	pr		8077871	0					
ANR	8079096	ExpressionStatement	p = pr -> ptr	511:20:19833:19844	8077871	2	True				
ANR	8079097	AssignmentExpression	p = pr -> ptr		8077871	0		=			
ANR	8079098	Identifier	p		8077871	0					
ANR	8079099	PtrMemberAccess	pr -> ptr		8077871	1					
ANR	8079100	Identifier	pr		8077871	0					
ANR	8079101	Identifier	ptr		8077871	1					
ANR	8079102	IfStatement	if ( code < 0 || ( code == 0 && pcs -> parse_other ) )		8077871	3					
ANR	8079103	Condition	code < 0 || ( code == 0 && pcs -> parse_other )	512:24:19870:19912	8077871	0	True				
ANR	8079104	OrExpression	code < 0 || ( code == 0 && pcs -> parse_other )		8077871	0		||			
ANR	8079105	RelationalExpression	code < 0		8077871	0		<			
ANR	8079106	Identifier	code		8077871	0					
ANR	8079107	PrimaryExpression	0		8077871	1					
ANR	8079108	AndExpression	code == 0 && pcs -> parse_other		8077871	1		&&			
ANR	8079109	EqualityExpression	code == 0		8077871	0		==			
ANR	8079110	Identifier	code		8077871	0					
ANR	8079111	PrimaryExpression	0		8077871	1					
ANR	8079112	PtrMemberAccess	pcs -> parse_other		8077871	1					
ANR	8079113	Identifier	pcs		8077871	0					
ANR	8079114	Identifier	parse_other		8077871	1					
ANR	8079115	GotoStatement	goto x ;	513:24:19939:19945	8077871	1	True				
ANR	8079116	Identifier	x		8077871	0					
ANR	8079117	ExpressionStatement	chr = * ++ p	515:16:19981:19991	8077871	16	True				
ANR	8079118	AssignmentExpression	chr = * ++ p		8077871	0		=			
ANR	8079119	Identifier	chr		8077871	0					
ANR	8079120	UnaryOperationExpression	* ++ p		8077871	1					
ANR	8079121	UnaryOperator	*		8077871	0					
ANR	8079122	UnaryExpression	++ p		8077871	1					
ANR	8079123	IncDec	++		8077871	0					
ANR	8079124	Identifier	p		8077871	1					
ANR	8079125	ExpressionStatement	"bytelen = pcl_char_bytelen ( chr , pcs -> text_parsing_method )"	517:16:20061:20118	8077871	17	True				
ANR	8079126	AssignmentExpression	"bytelen = pcl_char_bytelen ( chr , pcs -> text_parsing_method )"		8077871	0		=			
ANR	8079127	Identifier	bytelen		8077871	0					
ANR	8079128	CallExpression	"pcl_char_bytelen ( chr , pcs -> text_parsing_method )"		8077871	1					
ANR	8079129	Callee	pcl_char_bytelen		8077871	0					
ANR	8079130	Identifier	pcl_char_bytelen		8077871	0					
ANR	8079131	ArgumentList	chr		8077871	1					
ANR	8079132	Argument	chr		8077871	0					
ANR	8079133	Identifier	chr		8077871	0					
ANR	8079134	Argument	pcs -> text_parsing_method		8077871	1					
ANR	8079135	PtrMemberAccess	pcs -> text_parsing_method		8077871	0					
ANR	8079136	Identifier	pcs		8077871	0					
ANR	8079137	Identifier	text_parsing_method		8077871	1					
ANR	8079138	IfStatement	if ( bytelen == 0 )		8077871	18					
ANR	8079139	Condition	bytelen == 0	518:20:20140:20151	8077871	0	True				
ANR	8079140	EqualityExpression	bytelen == 0		8077871	0		==			
ANR	8079141	Identifier	bytelen		8077871	0					
ANR	8079142	PrimaryExpression	0		8077871	1					
ANR	8079143	CompoundStatement		244:34:10862:10862	8077871	1					
ANR	8079144	ExpressionStatement	bytelen = 1	519:20:20176:20187	8077871	0	True				
ANR	8079145	AssignmentExpression	bytelen = 1		8077871	0		=			
ANR	8079146	Identifier	bytelen		8077871	0					
ANR	8079147	PrimaryExpression	1		8077871	1					
ANR	8079148	IfStatement	if ( bytelen > 1 )		8077871	19					
ANR	8079149	Condition	bytelen > 1	521:20:20267:20277	8077871	0	True				
ANR	8079150	RelationalExpression	bytelen > 1		8077871	0		>			
ANR	8079151	Identifier	bytelen		8077871	0					
ANR	8079152	PrimaryExpression	1		8077871	1					
ANR	8079153	CompoundStatement		247:33:10988:10988	8077871	1					
ANR	8079154	IfStatement	if ( ( p + bytelen - 1 ) > rlimit )		8077871	0					
ANR	8079155	Condition	( p + bytelen - 1 ) > rlimit	523:24:20359:20384	8077871	0	True				
ANR	8079156	RelationalExpression	( p + bytelen - 1 ) > rlimit		8077871	0		>			
ANR	8079157	AdditiveExpression	p + bytelen - 1		8077871	0		+			
ANR	8079158	Identifier	p		8077871	0					
ANR	8079159	AdditiveExpression	bytelen - 1		8077871	1		-			
ANR	8079160	Identifier	bytelen		8077871	0					
ANR	8079161	PrimaryExpression	1		8077871	1					
ANR	8079162	Identifier	rlimit		8077871	1					
ANR	8079163	CompoundStatement		249:52:11095:11095	8077871	1					
ANR	8079164	ExpressionStatement	-- p	524:24:20413:20416	8077871	0	True				
ANR	8079165	UnaryExpression	-- p		8077871	0					
ANR	8079166	IncDec	--		8077871	0					
ANR	8079167	Identifier	p		8077871	1					
ANR	8079168	GotoStatement	goto x ;	525:24:20442:20448	8077871	1	True				
ANR	8079169	Identifier	x		8077871	0					
ANR	8079170	ExpressionStatement	"if_debug2m ( 'i' , pcs -> memory , ""%x%x\\n"" , p [ 0 ] , p [ 1 ] )"	527:20:20492:20542	8077871	1	True				
ANR	8079171	CallExpression	"if_debug2m ( 'i' , pcs -> memory , ""%x%x\\n"" , p [ 0 ] , p [ 1 ] )"		8077871	0					
ANR	8079172	Callee	if_debug2m		8077871	0					
ANR	8079173	Identifier	if_debug2m		8077871	0					
ANR	8079174	ArgumentList	'i'		8077871	1					
ANR	8079175	Argument	'i'		8077871	0					
ANR	8079176	PrimaryExpression	'i'		8077871	0					
ANR	8079177	Argument	pcs -> memory		8077871	1					
ANR	8079178	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079179	Identifier	pcs		8077871	0					
ANR	8079180	Identifier	memory		8077871	1					
ANR	8079181	Argument	"""%x%x\\n"""		8077871	2					
ANR	8079182	PrimaryExpression	"""%x%x\\n"""		8077871	0					
ANR	8079183	Argument	p [ 0 ]		8077871	3					
ANR	8079184	ArrayIndexing	p [ 0 ]		8077871	0					
ANR	8079185	Identifier	p		8077871	0					
ANR	8079186	PrimaryExpression	0		8077871	1					
ANR	8079187	Argument	p [ 1 ]		8077871	4					
ANR	8079188	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8079189	Identifier	p		8077871	0					
ANR	8079190	PrimaryExpression	1		8077871	1					
ANR	8079191	ExpressionStatement	"code = pcl_text ( p , bytelen , pcs , false )"	528:20:20564:20603	8077871	2	True				
ANR	8079192	AssignmentExpression	"code = pcl_text ( p , bytelen , pcs , false )"		8077871	0		=			
ANR	8079193	Identifier	code		8077871	0					
ANR	8079194	CallExpression	"pcl_text ( p , bytelen , pcs , false )"		8077871	1					
ANR	8079195	Callee	pcl_text		8077871	0					
ANR	8079196	Identifier	pcl_text		8077871	0					
ANR	8079197	ArgumentList	p		8077871	1					
ANR	8079198	Argument	p		8077871	0					
ANR	8079199	Identifier	p		8077871	0					
ANR	8079200	Argument	bytelen		8077871	1					
ANR	8079201	Identifier	bytelen		8077871	0					
ANR	8079202	Argument	pcs		8077871	2					
ANR	8079203	Identifier	pcs		8077871	0					
ANR	8079204	Argument	false		8077871	3					
ANR	8079205	Identifier	false		8077871	0					
ANR	8079206	IfStatement	if ( code < 0 )		8077871	3					
ANR	8079207	Condition	code < 0	529:24:20629:20636	8077871	0	True				
ANR	8079208	RelationalExpression	code < 0		8077871	0		<			
ANR	8079209	Identifier	code		8077871	0					
ANR	8079210	PrimaryExpression	0		8077871	1					
ANR	8079211	GotoStatement	goto x ;	530:24:20663:20669	8077871	1	True				
ANR	8079212	Identifier	x		8077871	0					
ANR	8079213	ExpressionStatement	p += ( bytelen - 1 )	532:20:20751:20769	8077871	4	True				
ANR	8079214	AssignmentExpression	p += ( bytelen - 1 )		8077871	0		+=			
ANR	8079215	Identifier	p		8077871	0					
ANR	8079216	AdditiveExpression	bytelen - 1		8077871	1		-			
ANR	8079217	Identifier	bytelen		8077871	0					
ANR	8079218	PrimaryExpression	1		8077871	1					
ANR	8079219	ExpressionStatement	cdefn = NULL	533:20:20791:20803	8077871	5	True				
ANR	8079220	AssignmentExpression	cdefn = NULL		8077871	0		=			
ANR	8079221	Identifier	cdefn		8077871	0					
ANR	8079222	Identifier	NULL		8077871	1					
ANR	8079223	ElseStatement	else		8077871	0					
ANR	8079224	IfStatement	if ( chr != ESC )		8077871	0					
ANR	8079225	Condition	chr != ESC	534:27:20832:20841	8077871	0	True				
ANR	8079226	EqualityExpression	chr != ESC		8077871	0		!=			
ANR	8079227	Identifier	chr		8077871	0					
ANR	8079228	Identifier	ESC		8077871	1					
ANR	8079229	CompoundStatement		260:39:11552:11552	8077871	1					
ANR	8079230	IfStatement	if ( gs_debug_c ( 'i' ) )		8077871	0					
ANR	8079231	Condition	gs_debug_c ( 'i' )	536:24:20883:20897	8077871	0	True				
ANR	8079232	CallExpression	gs_debug_c ( 'i' )		8077871	0					
ANR	8079233	Callee	gs_debug_c		8077871	0					
ANR	8079234	Identifier	gs_debug_c		8077871	0					
ANR	8079235	ArgumentList	'i'		8077871	1					
ANR	8079236	Argument	'i'		8077871	0					
ANR	8079237	PrimaryExpression	'i'		8077871	0					
ANR	8079238	CompoundStatement		262:41:11608:11608	8077871	1					
ANR	8079239	ExpressionStatement	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"	537:24:20926:20973	8077871	0	True				
ANR	8079240	CallExpression	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"		8077871	0					
ANR	8079241	Callee	if_debug1m		8077871	0					
ANR	8079242	Identifier	if_debug1m		8077871	0					
ANR	8079243	ArgumentList	'i'		8077871	1					
ANR	8079244	Argument	'i'		8077871	0					
ANR	8079245	PrimaryExpression	'i'		8077871	0					
ANR	8079246	Argument	pcs -> memory		8077871	1					
ANR	8079247	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079248	Identifier	pcs		8077871	0					
ANR	8079249	Identifier	memory		8077871	1					
ANR	8079250	Argument	"""[i%d] """		8077871	2					
ANR	8079251	PrimaryExpression	"""[i%d] """		8077871	0					
ANR	8079252	Argument	bytelen		8077871	3					
ANR	8079253	Identifier	bytelen		8077871	0					
ANR	8079254	ExpressionStatement	"debug_dump_char ( pcs -> memory , chr )"	538:24:20999:21032	8077871	1	True				
ANR	8079255	CallExpression	"debug_dump_char ( pcs -> memory , chr )"		8077871	0					
ANR	8079256	Callee	debug_dump_char		8077871	0					
ANR	8079257	Identifier	debug_dump_char		8077871	0					
ANR	8079258	ArgumentList	pcs -> memory		8077871	1					
ANR	8079259	Argument	pcs -> memory		8077871	0					
ANR	8079260	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079261	Identifier	pcs		8077871	0					
ANR	8079262	Identifier	memory		8077871	1					
ANR	8079263	Argument	chr		8077871	1					
ANR	8079264	Identifier	chr		8077871	0					
ANR	8079265	ExpressionStatement	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"	539:24:21058:21092	8077871	2	True				
ANR	8079266	CallExpression	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"		8077871	0					
ANR	8079267	Callee	if_debug0m		8077871	0					
ANR	8079268	Identifier	if_debug0m		8077871	0					
ANR	8079269	ArgumentList	'i'		8077871	1					
ANR	8079270	Argument	'i'		8077871	0					
ANR	8079271	PrimaryExpression	'i'		8077871	0					
ANR	8079272	Argument	pcs -> memory		8077871	1					
ANR	8079273	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079274	Identifier	pcs		8077871	0					
ANR	8079275	Identifier	memory		8077871	1					
ANR	8079276	Argument	"""\\n"""		8077871	2					
ANR	8079277	PrimaryExpression	"""\\n"""		8077871	0					
ANR	8079278	ExpressionStatement	cdefn = pst -> definitions -> pcl_command_list [ chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ] ]	542:20:21143:21374	8077871	1	True				
ANR	8079279	AssignmentExpression	cdefn = pst -> definitions -> pcl_command_list [ chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ] ]		8077871	0		=			
ANR	8079280	Identifier	cdefn		8077871	0					
ANR	8079281	ArrayIndexing	pst -> definitions -> pcl_command_list [ chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ] ]		8077871	1					
ANR	8079282	PtrMemberAccess	pst -> definitions -> pcl_command_list		8077871	0					
ANR	8079283	PtrMemberAccess	pst -> definitions		8077871	0					
ANR	8079284	Identifier	pst		8077871	0					
ANR	8079285	Identifier	definitions		8077871	1					
ANR	8079286	Identifier	pcl_command_list		8077871	1					
ANR	8079287	ConditionalExpression	chr < 33 ? pst -> definitions -> pcl_control_command_indices [ chr ] : pst -> definitions -> pcl_control_command_indices [ 1 ]		8077871	1					
ANR	8079288	Condition	chr < 33		8077871	0					
ANR	8079289	RelationalExpression	chr < 33		8077871	0		<			
ANR	8079290	Identifier	chr		8077871	0					
ANR	8079291	PrimaryExpression	33		8077871	1					
ANR	8079292	ArrayIndexing	pst -> definitions -> pcl_control_command_indices [ chr ]		8077871	1					
ANR	8079293	PtrMemberAccess	pst -> definitions -> pcl_control_command_indices		8077871	0					
ANR	8079294	PtrMemberAccess	pst -> definitions		8077871	0					
ANR	8079295	Identifier	pst		8077871	0					
ANR	8079296	Identifier	definitions		8077871	1					
ANR	8079297	Identifier	pcl_control_command_indices		8077871	1					
ANR	8079298	Identifier	chr		8077871	1					
ANR	8079299	ArrayIndexing	pst -> definitions -> pcl_control_command_indices [ 1 ]		8077871	2					
ANR	8079300	PtrMemberAccess	pst -> definitions -> pcl_control_command_indices		8077871	0					
ANR	8079301	PtrMemberAccess	pst -> definitions		8077871	0					
ANR	8079302	Identifier	pst		8077871	0					
ANR	8079303	Identifier	definitions		8077871	1					
ANR	8079304	Identifier	pcl_control_command_indices		8077871	1					
ANR	8079305	PrimaryExpression	1		8077871	1					
ANR	8079306	IfStatement	if ( ( cdefn == 0 || cdefn -> proc == pcl_plain_char ) && ! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode )		8077871	2					
ANR	8079307	Condition	( cdefn == 0 || cdefn -> proc == pcl_plain_char ) && ! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode	546:24:21400:21562	8077871	0	True				
ANR	8079308	AndExpression	( cdefn == 0 || cdefn -> proc == pcl_plain_char ) && ! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode		8077871	0		&&			
ANR	8079309	OrExpression	cdefn == 0 || cdefn -> proc == pcl_plain_char		8077871	0		||			
ANR	8079310	EqualityExpression	cdefn == 0		8077871	0		==			
ANR	8079311	Identifier	cdefn		8077871	0					
ANR	8079312	PrimaryExpression	0		8077871	1					
ANR	8079313	EqualityExpression	cdefn -> proc == pcl_plain_char		8077871	1		==			
ANR	8079314	PtrMemberAccess	cdefn -> proc		8077871	0					
ANR	8079315	Identifier	cdefn		8077871	0					
ANR	8079316	Identifier	proc		8077871	1					
ANR	8079317	Identifier	pcl_plain_char		8077871	1					
ANR	8079318	AndExpression	! in_macro && ! pcs -> parse_other && ! pcs -> raster_state . graphics_mode		8077871	1		&&			
ANR	8079319	UnaryOperationExpression	! in_macro		8077871	0					
ANR	8079320	UnaryOperator	!		8077871	0					
ANR	8079321	Identifier	in_macro		8077871	1					
ANR	8079322	AndExpression	! pcs -> parse_other && ! pcs -> raster_state . graphics_mode		8077871	1		&&			
ANR	8079323	UnaryOperationExpression	! pcs -> parse_other		8077871	0					
ANR	8079324	UnaryOperator	!		8077871	0					
ANR	8079325	PtrMemberAccess	pcs -> parse_other		8077871	1					
ANR	8079326	Identifier	pcs		8077871	0					
ANR	8079327	Identifier	parse_other		8077871	1					
ANR	8079328	UnaryOperationExpression	! pcs -> raster_state . graphics_mode		8077871	1					
ANR	8079329	UnaryOperator	!		8077871	0					
ANR	8079330	MemberAccess	pcs -> raster_state . graphics_mode		8077871	1					
ANR	8079331	PtrMemberAccess	pcs -> raster_state		8077871	0					
ANR	8079332	Identifier	pcs		8077871	0					
ANR	8079333	Identifier	raster_state		8077871	1					
ANR	8079334	Identifier	graphics_mode		8077871	1					
ANR	8079335	CompoundStatement		278:24:12508:12527	8077871	1					
ANR	8079336	IdentifierDeclStatement	const byte * str = p ;	552:24:21800:21819	8077871	0	True				
ANR	8079337	IdentifierDecl	* str = p		8077871	0					
ANR	8079338	IdentifierDeclType	const byte *		8077871	0					
ANR	8079339	Identifier	str		8077871	1					
ANR	8079340	AssignmentExpression	* str = p		8077871	2		=			
ANR	8079341	Identifier	p		8077871	0					
ANR	8079342	Identifier	p		8077871	1					
ANR	8079343	WhileStatement	while ( p < rlimit && p [ 1 ] >= 32 && p [ 1 ] <= 127 )		8077871	1					
ANR	8079344	Condition	p < rlimit && p [ 1 ] >= 32 && p [ 1 ] <= 127	554:31:21853:21891	8077871	0	True				
ANR	8079345	AndExpression	p < rlimit && p [ 1 ] >= 32 && p [ 1 ] <= 127		8077871	0		&&			
ANR	8079346	RelationalExpression	p < rlimit		8077871	0		<			
ANR	8079347	Identifier	p		8077871	0					
ANR	8079348	Identifier	rlimit		8077871	1					
ANR	8079349	AndExpression	p [ 1 ] >= 32 && p [ 1 ] <= 127		8077871	1		&&			
ANR	8079350	RelationalExpression	p [ 1 ] >= 32		8077871	0		>=			
ANR	8079351	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8079352	Identifier	p		8077871	0					
ANR	8079353	PrimaryExpression	1		8077871	1					
ANR	8079354	PrimaryExpression	32		8077871	1					
ANR	8079355	RelationalExpression	p [ 1 ] <= 127		8077871	1		<=			
ANR	8079356	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8079357	Identifier	p		8077871	0					
ANR	8079358	PrimaryExpression	1		8077871	1					
ANR	8079359	PrimaryExpression	127		8077871	1					
ANR	8079360	CompoundStatement		280:72:12602:12602	8077871	1					
ANR	8079361	IfStatement	if ( gs_debug_c ( 'i' ) )		8077871	0					
ANR	8079362	Condition	gs_debug_c ( 'i' )	556:32:21941:21955	8077871	0	True				
ANR	8079363	CallExpression	gs_debug_c ( 'i' )		8077871	0					
ANR	8079364	Callee	gs_debug_c		8077871	0					
ANR	8079365	Identifier	gs_debug_c		8077871	0					
ANR	8079366	ArgumentList	'i'		8077871	1					
ANR	8079367	Argument	'i'		8077871	0					
ANR	8079368	PrimaryExpression	'i'		8077871	0					
ANR	8079369	CompoundStatement		282:49:12666:12666	8077871	1					
ANR	8079370	IfStatement	if ( p == str )		8077871	0					
ANR	8079371	Condition	p == str	557:36:21996:22003	8077871	0	True				
ANR	8079372	EqualityExpression	p == str		8077871	0		==			
ANR	8079373	Identifier	p		8077871	0					
ANR	8079374	Identifier	str		8077871	1					
ANR	8079375	ExpressionStatement	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"	558:36:22042:22089	8077871	1	True				
ANR	8079376	CallExpression	"if_debug1m ( 'i' , pcs -> memory , ""[i%d] "" , bytelen )"		8077871	0					
ANR	8079377	Callee	if_debug1m		8077871	0					
ANR	8079378	Identifier	if_debug1m		8077871	0					
ANR	8079379	ArgumentList	'i'		8077871	1					
ANR	8079380	Argument	'i'		8077871	0					
ANR	8079381	PrimaryExpression	'i'		8077871	0					
ANR	8079382	Argument	pcs -> memory		8077871	1					
ANR	8079383	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079384	Identifier	pcs		8077871	0					
ANR	8079385	Identifier	memory		8077871	1					
ANR	8079386	Argument	"""[i%d] """		8077871	2					
ANR	8079387	PrimaryExpression	"""[i%d] """		8077871	0					
ANR	8079388	Argument	bytelen		8077871	3					
ANR	8079389	Identifier	bytelen		8077871	0					
ANR	8079390	ExpressionStatement	"debug_dump_char ( pcs -> memory , p [ 1 ] )"	559:32:22123:22157	8077871	1	True				
ANR	8079391	CallExpression	"debug_dump_char ( pcs -> memory , p [ 1 ] )"		8077871	0					
ANR	8079392	Callee	debug_dump_char		8077871	0					
ANR	8079393	Identifier	debug_dump_char		8077871	0					
ANR	8079394	ArgumentList	pcs -> memory		8077871	1					
ANR	8079395	Argument	pcs -> memory		8077871	0					
ANR	8079396	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079397	Identifier	pcs		8077871	0					
ANR	8079398	Identifier	memory		8077871	1					
ANR	8079399	Argument	p [ 1 ]		8077871	1					
ANR	8079400	ArrayIndexing	p [ 1 ]		8077871	0					
ANR	8079401	Identifier	p		8077871	0					
ANR	8079402	PrimaryExpression	1		8077871	1					
ANR	8079403	ExpressionStatement	++ p	562:28:22224:22227	8077871	1	True				
ANR	8079404	UnaryExpression	++ p		8077871	0					
ANR	8079405	IncDec	++		8077871	0					
ANR	8079406	Identifier	p		8077871	1					
ANR	8079407	ExpressionStatement	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"	565:24:22280:22314	8077871	2	True				
ANR	8079408	CallExpression	"if_debug0m ( 'i' , pcs -> memory , ""\\n"" )"		8077871	0					
ANR	8079409	Callee	if_debug0m		8077871	0					
ANR	8079410	Identifier	if_debug0m		8077871	0					
ANR	8079411	ArgumentList	'i'		8077871	1					
ANR	8079412	Argument	'i'		8077871	0					
ANR	8079413	PrimaryExpression	'i'		8077871	0					
ANR	8079414	Argument	pcs -> memory		8077871	1					
ANR	8079415	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079416	Identifier	pcs		8077871	0					
ANR	8079417	Identifier	memory		8077871	1					
ANR	8079418	Argument	"""\\n"""		8077871	2					
ANR	8079419	PrimaryExpression	"""\\n"""		8077871	0					
ANR	8079420	ExpressionStatement	"code = pcl_text ( str , ( uint ) ( p + 1 - str ) , pcs , false )"	566:24:22340:22434	8077871	3	True				
ANR	8079421	AssignmentExpression	"code = pcl_text ( str , ( uint ) ( p + 1 - str ) , pcs , false )"		8077871	0		=			
ANR	8079422	Identifier	code		8077871	0					
ANR	8079423	CallExpression	"pcl_text ( str , ( uint ) ( p + 1 - str ) , pcs , false )"		8077871	1					
ANR	8079424	Callee	pcl_text		8077871	0					
ANR	8079425	Identifier	pcl_text		8077871	0					
ANR	8079426	ArgumentList	str		8077871	1					
ANR	8079427	Argument	str		8077871	0					
ANR	8079428	Identifier	str		8077871	0					
ANR	8079429	Argument	( uint ) ( p + 1 - str )		8077871	1					
ANR	8079430	CastExpression	( uint ) ( p + 1 - str )		8077871	0					
ANR	8079431	CastTarget	uint		8077871	0					
ANR	8079432	AdditiveExpression	p + 1 - str		8077871	1		+			
ANR	8079433	Identifier	p		8077871	0					
ANR	8079434	AdditiveExpression	1 - str		8077871	1		-			
ANR	8079435	PrimaryExpression	1		8077871	0					
ANR	8079436	Identifier	str		8077871	1					
ANR	8079437	Argument	pcs		8077871	2					
ANR	8079438	Identifier	pcs		8077871	0					
ANR	8079439	Argument	false		8077871	3					
ANR	8079440	Identifier	false		8077871	0					
ANR	8079441	IfStatement	if ( code < 0 )		8077871	4					
ANR	8079442	Condition	code < 0	568:28:22464:22471	8077871	0	True				
ANR	8079443	RelationalExpression	code < 0		8077871	0		<			
ANR	8079444	Identifier	code		8077871	0					
ANR	8079445	PrimaryExpression	0		8077871	1					
ANR	8079446	GotoStatement	goto x ;	569:28:22502:22508	8077871	1	True				
ANR	8079447	Identifier	x		8077871	0					
ANR	8079448	ExpressionStatement	cdefn = NULL	570:24:22534:22546	8077871	5	True				
ANR	8079449	AssignmentExpression	cdefn = NULL		8077871	0		=			
ANR	8079450	Identifier	cdefn		8077871	0					
ANR	8079451	Identifier	NULL		8077871	1					
ANR	8079452	ElseStatement	else		8077871	0					
ANR	8079453	CompoundStatement		298:23:13301:13301	8077871	0					
ANR	8079454	IfStatement	if ( p >= rlimit )		8077871	0					
ANR	8079455	Condition	p >= rlimit	573:24:22619:22629	8077871	0	True				
ANR	8079456	RelationalExpression	p >= rlimit		8077871	0		>=			
ANR	8079457	Identifier	p		8077871	0					
ANR	8079458	Identifier	rlimit		8077871	1					
ANR	8079459	CompoundStatement		299:37:13340:13340	8077871	1					
ANR	8079460	ExpressionStatement	-- p	574:24:22658:22661	8077871	0	True				
ANR	8079461	UnaryExpression	-- p		8077871	0					
ANR	8079462	IncDec	--		8077871	0					
ANR	8079463	Identifier	p		8077871	1					
ANR	8079464	GotoStatement	goto x ;	575:24:22687:22693	8077871	1	True				
ANR	8079465	Identifier	x		8077871	0					
ANR	8079466	ExpressionStatement	chr = * ++ p	577:20:22737:22747	8077871	1	True				
ANR	8079467	AssignmentExpression	chr = * ++ p		8077871	0		=			
ANR	8079468	Identifier	chr		8077871	0					
ANR	8079469	UnaryOperationExpression	* ++ p		8077871	1					
ANR	8079470	UnaryOperator	*		8077871	0					
ANR	8079471	UnaryExpression	++ p		8077871	1					
ANR	8079472	IncDec	++		8077871	0					
ANR	8079473	Identifier	p		8077871	1					
ANR	8079474	IfStatement	if ( chr < min_escape_class || chr > max_escape_class )		8077871	2					
ANR	8079475	Condition	chr < min_escape_class || chr > max_escape_class	578:24:22773:22820	8077871	0	True				
ANR	8079476	OrExpression	chr < min_escape_class || chr > max_escape_class		8077871	0		||			
ANR	8079477	RelationalExpression	chr < min_escape_class		8077871	0		<			
ANR	8079478	Identifier	chr		8077871	0					
ANR	8079479	Identifier	min_escape_class		8077871	1					
ANR	8079480	RelationalExpression	chr > max_escape_class		8077871	1		>			
ANR	8079481	Identifier	chr		8077871	0					
ANR	8079482	Identifier	max_escape_class		8077871	1					
ANR	8079483	CompoundStatement		304:74:13531:13531	8077871	1					
ANR	8079484	ExpressionStatement	"cdefn = pcl_get_command_definition ( pst , 0 , 0 , chr )"	579:24:22849:22899	8077871	0	True				
ANR	8079485	AssignmentExpression	"cdefn = pcl_get_command_definition ( pst , 0 , 0 , chr )"		8077871	0		=			
ANR	8079486	Identifier	cdefn		8077871	0					
ANR	8079487	CallExpression	"pcl_get_command_definition ( pst , 0 , 0 , chr )"		8077871	1					
ANR	8079488	Callee	pcl_get_command_definition		8077871	0					
ANR	8079489	Identifier	pcl_get_command_definition		8077871	0					
ANR	8079490	ArgumentList	pst		8077871	1					
ANR	8079491	Argument	pst		8077871	0					
ANR	8079492	Identifier	pst		8077871	0					
ANR	8079493	Argument	0		8077871	1					
ANR	8079494	PrimaryExpression	0		8077871	0					
ANR	8079495	Argument	0		8077871	2					
ANR	8079496	PrimaryExpression	0		8077871	0					
ANR	8079497	Argument	chr		8077871	3					
ANR	8079498	Identifier	chr		8077871	0					
ANR	8079499	IfStatement	if ( ! cdefn )		8077871	1					
ANR	8079500	Condition	! cdefn	580:28:22929:22934	8077871	0	True				
ANR	8079501	UnaryOperationExpression	! cdefn		8077871	0					
ANR	8079502	UnaryOperator	!		8077871	0					
ANR	8079503	Identifier	cdefn		8077871	1					
ANR	8079504	CompoundStatement		306:36:13645:13645	8077871	1					
ANR	8079505	ExpressionStatement	-- p	584:28:23116:23119	8077871	0	True				
ANR	8079506	UnaryExpression	-- p		8077871	0					
ANR	8079507	IncDec	--		8077871	0					
ANR	8079508	Identifier	p		8077871	1					
ANR	8079509	IfStatement	if ( gs_debug_c ( 'i' ) )		8077871	1					
ANR	8079510	Condition	gs_debug_c ( 'i' )	586:32:23166:23180	8077871	0	True				
ANR	8079511	CallExpression	gs_debug_c ( 'i' )		8077871	0					
ANR	8079512	Callee	gs_debug_c		8077871	0					
ANR	8079513	Identifier	gs_debug_c		8077871	0					
ANR	8079514	ArgumentList	'i'		8077871	1					
ANR	8079515	Argument	'i'		8077871	0					
ANR	8079516	PrimaryExpression	'i'		8077871	0					
ANR	8079517	CompoundStatement		312:49:13891:13891	8077871	1					
ANR	8079518	ExpressionStatement	"debug_dump_char ( pcs -> memory , '\\033' )"	587:32:23217:23253	8077871	0	True				
ANR	8079519	CallExpression	"debug_dump_char ( pcs -> memory , '\\033' )"		8077871	0					
ANR	8079520	Callee	debug_dump_char		8077871	0					
ANR	8079521	Identifier	debug_dump_char		8077871	0					
ANR	8079522	ArgumentList	pcs -> memory		8077871	1					
ANR	8079523	Argument	pcs -> memory		8077871	0					
ANR	8079524	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079525	Identifier	pcs		8077871	0					
ANR	8079526	Identifier	memory		8077871	1					
ANR	8079527	Argument	'\\033'		8077871	1					
ANR	8079528	PrimaryExpression	'\\033'		8077871	0					
ANR	8079529	ContinueStatement	continue ;	590:28:23320:23328	8077871	2	True				
ANR	8079530	IfStatement	if ( gs_debug_c ( 'i' ) )		8077871	2					
ANR	8079531	Condition	gs_debug_c ( 'i' )	593:28:23397:23411	8077871	0	True				
ANR	8079532	CallExpression	gs_debug_c ( 'i' )		8077871	0					
ANR	8079533	Callee	gs_debug_c		8077871	0					
ANR	8079534	Identifier	gs_debug_c		8077871	0					
ANR	8079535	ArgumentList	'i'		8077871	1					
ANR	8079536	Argument	'i'		8077871	0					
ANR	8079537	PrimaryExpression	'i'		8077871	0					
ANR	8079538	CompoundStatement		319:45:14122:14122	8077871	1					
ANR	8079539	ExpressionStatement	"dmprintf ( pcs -> memory , ""ESC "" )"	594:28:23444:23473	8077871	0	True				
ANR	8079540	CallExpression	"dmprintf ( pcs -> memory , ""ESC "" )"		8077871	0					
ANR	8079541	Callee	dmprintf		8077871	0					
ANR	8079542	Identifier	dmprintf		8077871	0					
ANR	8079543	ArgumentList	pcs -> memory		8077871	1					
ANR	8079544	Argument	pcs -> memory		8077871	0					
ANR	8079545	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079546	Identifier	pcs		8077871	0					
ANR	8079547	Identifier	memory		8077871	1					
ANR	8079548	Argument	"""ESC """		8077871	1					
ANR	8079549	PrimaryExpression	"""ESC """		8077871	0					
ANR	8079550	ExpressionStatement	"debug_dump_char ( pcs -> memory , chr )"	595:28:23503:23536	8077871	1	True				
ANR	8079551	CallExpression	"debug_dump_char ( pcs -> memory , chr )"		8077871	0					
ANR	8079552	Callee	debug_dump_char		8077871	0					
ANR	8079553	Identifier	debug_dump_char		8077871	0					
ANR	8079554	ArgumentList	pcs -> memory		8077871	1					
ANR	8079555	Argument	pcs -> memory		8077871	0					
ANR	8079556	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079557	Identifier	pcs		8077871	0					
ANR	8079558	Identifier	memory		8077871	1					
ANR	8079559	Argument	chr		8077871	1					
ANR	8079560	Identifier	chr		8077871	0					
ANR	8079561	ExpressionStatement	"dmprintf ( pcs -> memory , ""\\n"" )"	596:28:23566:23593	8077871	2	True				
ANR	8079562	CallExpression	"dmprintf ( pcs -> memory , ""\\n"" )"		8077871	0					
ANR	8079563	Callee	dmprintf		8077871	0					
ANR	8079564	Identifier	dmprintf		8077871	0					
ANR	8079565	ArgumentList	pcs -> memory		8077871	1					
ANR	8079566	Argument	pcs -> memory		8077871	0					
ANR	8079567	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079568	Identifier	pcs		8077871	0					
ANR	8079569	Identifier	memory		8077871	1					
ANR	8079570	Argument	"""\\n"""		8077871	1					
ANR	8079571	PrimaryExpression	"""\\n"""		8077871	0					
ANR	8079572	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"	597:28:23623:23672	8077871	3	True				
ANR	8079573	CallExpression	"dmprintf1 ( pcs -> memory , ""   [%s]\\n"" , cdefn -> cname )"		8077871	0					
ANR	8079574	Callee	dmprintf1		8077871	0					
ANR	8079575	Identifier	dmprintf1		8077871	0					
ANR	8079576	ArgumentList	pcs -> memory		8077871	1					
ANR	8079577	Argument	pcs -> memory		8077871	0					
ANR	8079578	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079579	Identifier	pcs		8077871	0					
ANR	8079580	Identifier	memory		8077871	1					
ANR	8079581	Argument	"""   [%s]\\n"""		8077871	1					
ANR	8079582	PrimaryExpression	"""   [%s]\\n"""		8077871	0					
ANR	8079583	Argument	cdefn -> cname		8077871	2					
ANR	8079584	PtrMemberAccess	cdefn -> cname		8077871	0					
ANR	8079585	Identifier	cdefn		8077871	0					
ANR	8079586	Identifier	cname		8077871	1					
ANR	8079587	ElseStatement	else		8077871	0					
ANR	8079588	CompoundStatement		326:27:14442:14442	8077871	0					
ANR	8079589	IfStatement	if ( p >= rlimit )		8077871	0					
ANR	8079590	Condition	p >= rlimit	601:28:23764:23774	8077871	0	True				
ANR	8079591	RelationalExpression	p >= rlimit		8077871	0		>=			
ANR	8079592	Identifier	p		8077871	0					
ANR	8079593	Identifier	rlimit		8077871	1					
ANR	8079594	CompoundStatement		327:41:14485:14485	8077871	1					
ANR	8079595	ExpressionStatement	p -= 2	602:28:23807:23813	8077871	0	True				
ANR	8079596	AssignmentExpression	p -= 2		8077871	0		-=			
ANR	8079597	Identifier	p		8077871	0					
ANR	8079598	PrimaryExpression	2		8077871	1					
ANR	8079599	GotoStatement	goto x ;	603:28:23843:23849	8077871	1	True				
ANR	8079600	Identifier	x		8077871	0					
ANR	8079601	ExpressionStatement	pst -> param_class = chr	605:24:23901:23923	8077871	1	True				
ANR	8079602	AssignmentExpression	pst -> param_class = chr		8077871	0		=			
ANR	8079603	PtrMemberAccess	pst -> param_class		8077871	0					
ANR	8079604	Identifier	pst		8077871	0					
ANR	8079605	Identifier	param_class		8077871	1					
ANR	8079606	Identifier	chr		8077871	1					
ANR	8079607	ExpressionStatement	chr = * ++ p	606:24:23949:23959	8077871	2	True				
ANR	8079608	AssignmentExpression	chr = * ++ p		8077871	0		=			
ANR	8079609	Identifier	chr		8077871	0					
ANR	8079610	UnaryOperationExpression	* ++ p		8077871	1					
ANR	8079611	UnaryOperator	*		8077871	0					
ANR	8079612	UnaryExpression	++ p		8077871	1					
ANR	8079613	IncDec	++		8077871	0					
ANR	8079614	Identifier	p		8077871	1					
ANR	8079615	IfStatement	if ( chr < min_escape_group || chr > max_escape_group )		8077871	3					
ANR	8079616	Condition	chr < min_escape_group || chr > max_escape_group	607:28:23989:24036	8077871	0	True				
ANR	8079617	OrExpression	chr < min_escape_group || chr > max_escape_group		8077871	0		||			
ANR	8079618	RelationalExpression	chr < min_escape_group		8077871	0		<			
ANR	8079619	Identifier	chr		8077871	0					
ANR	8079620	Identifier	min_escape_group		8077871	1					
ANR	8079621	RelationalExpression	chr > max_escape_group		8077871	1		>			
ANR	8079622	Identifier	chr		8077871	0					
ANR	8079623	Identifier	max_escape_group		8077871	1					
ANR	8079624	CompoundStatement		333:78:14747:14747	8077871	1					
ANR	8079625	ExpressionStatement	-- p	608:28:24094:24097	8077871	0	True				
ANR	8079626	UnaryExpression	-- p		8077871	0					
ANR	8079627	IncDec	--		8077871	0					
ANR	8079628	Identifier	p		8077871	1					
ANR	8079629	ExpressionStatement	chr = 0	609:28:24127:24134	8077871	1	True				
ANR	8079630	AssignmentExpression	chr = 0		8077871	0		=			
ANR	8079631	Identifier	chr		8077871	0					
ANR	8079632	PrimaryExpression	0		8077871	1					
ANR	8079633	ExpressionStatement	pst -> param_group = chr	611:24:24186:24208	8077871	4	True				
ANR	8079634	AssignmentExpression	pst -> param_group = chr		8077871	0		=			
ANR	8079635	PtrMemberAccess	pst -> param_group		8077871	0					
ANR	8079636	Identifier	pst		8077871	0					
ANR	8079637	Identifier	param_group		8077871	1					
ANR	8079638	Identifier	chr		8077871	1					
ANR	8079639	ExpressionStatement	pst -> scan_type = scanning_parameter	612:24:24234:24269	8077871	5	True				
ANR	8079640	AssignmentExpression	pst -> scan_type = scanning_parameter		8077871	0		=			
ANR	8079641	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8079642	Identifier	pst		8077871	0					
ANR	8079643	Identifier	scan_type		8077871	1					
ANR	8079644	Identifier	scanning_parameter		8077871	1					
ANR	8079645	ExpressionStatement	pst -> garbage_in_parameter = false	613:24:24295:24328	8077871	6	True				
ANR	8079646	AssignmentExpression	pst -> garbage_in_parameter = false		8077871	0		=			
ANR	8079647	PtrMemberAccess	pst -> garbage_in_parameter		8077871	0					
ANR	8079648	Identifier	pst		8077871	0					
ANR	8079649	Identifier	garbage_in_parameter		8077871	1					
ANR	8079650	Identifier	false		8077871	1					
ANR	8079651	ExpressionStatement	param_init ( )	614:24:24354:24366	8077871	7	True				
ANR	8079652	CallExpression	param_init ( )		8077871	0					
ANR	8079653	Callee	param_init		8077871	0					
ANR	8079654	Identifier	param_init		8077871	0					
ANR	8079655	ArgumentList			8077871	1					
ANR	8079656	ContinueStatement	continue ;	615:24:24392:24400	8077871	8	True				
ANR	8079657	BreakStatement	break ;	618:16:24458:24463	8077871	20	True				
ANR	8079658	IfStatement	if ( cdefn == NULL )		8077871	3					
ANR	8079659	Condition	cdefn == NULL	620:12:24487:24499	8077871	0	True				
ANR	8079660	EqualityExpression	cdefn == NULL		8077871	0		==			
ANR	8079661	Identifier	cdefn		8077871	0					
ANR	8079662	Identifier	NULL		8077871	1					
ANR	8079663	CompoundStatement		346:27:15210:15210	8077871	1					
ANR	8079664	ExpressionStatement	param_init ( )	621:12:24516:24528	8077871	0	True				
ANR	8079665	CallExpression	param_init ( )		8077871	0					
ANR	8079666	Callee	param_init		8077871	0					
ANR	8079667	Identifier	param_init		8077871	0					
ANR	8079668	ArgumentList			8077871	1					
ANR	8079669	ContinueStatement	continue ;	622:12:24542:24550	8077871	1	True				
ANR	8079670	IfStatement	if ( ! in_macro || ( cdefn -> actions & pca_in_macro ) )		8077871	4					
ANR	8079671	Condition	! in_macro || ( cdefn -> actions & pca_in_macro )	624:12:24574:24617	8077871	0	True				
ANR	8079672	OrExpression	! in_macro || ( cdefn -> actions & pca_in_macro )		8077871	0		||			
ANR	8079673	UnaryOperationExpression	! in_macro		8077871	0					
ANR	8079674	UnaryOperator	!		8077871	0					
ANR	8079675	Identifier	in_macro		8077871	1					
ANR	8079676	BitAndExpression	cdefn -> actions & pca_in_macro		8077871	1		&			
ANR	8079677	PtrMemberAccess	cdefn -> actions		8077871	0					
ANR	8079678	Identifier	cdefn		8077871	0					
ANR	8079679	Identifier	actions		8077871	1					
ANR	8079680	Identifier	pca_in_macro		8077871	1					
ANR	8079681	CompoundStatement		350:58:15328:15328	8077871	1					
ANR	8079682	IfStatement	if ( in_macro )		8077871	0					
ANR	8079683	Condition	in_macro	628:16:24817:24824	8077871	0	True				
ANR	8079684	Identifier	in_macro		8077871	0					
ANR	8079685	CompoundStatement		354:26:15535:15535	8077871	1					
ANR	8079686	ExpressionStatement	"code = append_macro ( macro_p , p , pcs )"	629:16:24845:24881	8077871	0	True				
ANR	8079687	AssignmentExpression	"code = append_macro ( macro_p , p , pcs )"		8077871	0		=			
ANR	8079688	Identifier	code		8077871	0					
ANR	8079689	CallExpression	"append_macro ( macro_p , p , pcs )"		8077871	1					
ANR	8079690	Callee	append_macro		8077871	0					
ANR	8079691	Identifier	append_macro		8077871	0					
ANR	8079692	ArgumentList	macro_p		8077871	1					
ANR	8079693	Argument	macro_p		8077871	0					
ANR	8079694	Identifier	macro_p		8077871	0					
ANR	8079695	Argument	p		8077871	1					
ANR	8079696	Identifier	p		8077871	0					
ANR	8079697	Argument	pcs		8077871	2					
ANR	8079698	Identifier	pcs		8077871	0					
ANR	8079699	ExpressionStatement	macro_p = p	630:16:24899:24910	8077871	1	True				
ANR	8079700	AssignmentExpression	macro_p = p		8077871	0		=			
ANR	8079701	Identifier	macro_p		8077871	0					
ANR	8079702	Identifier	p		8077871	1					
ANR	8079703	IfStatement	if ( code < 0 )		8077871	2					
ANR	8079704	Condition	code < 0	631:20:24932:24939	8077871	0	True				
ANR	8079705	RelationalExpression	code < 0		8077871	0		<			
ANR	8079706	Identifier	code		8077871	0					
ANR	8079707	PrimaryExpression	0		8077871	1					
ANR	8079708	GotoStatement	goto x ;	632:20:24962:24968	8077871	1	True				
ANR	8079709	Identifier	x		8077871	0					
ANR	8079710	ExpressionStatement	pst -> args . command = chr	634:12:24996:25019	8077871	1	True				
ANR	8079711	AssignmentExpression	pst -> args . command = chr		8077871	0		=			
ANR	8079712	MemberAccess	pst -> args . command		8077871	0					
ANR	8079713	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079714	Identifier	pst		8077871	0					
ANR	8079715	Identifier	args		8077871	1					
ANR	8079716	Identifier	command		8077871	1					
ANR	8079717	Identifier	chr		8077871	1					
ANR	8079718	IfStatement	"if ( ! pcs -> raster_state . graphics_mode || ( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0 )"		8077871	2					
ANR	8079719	Condition	"! pcs -> raster_state . graphics_mode || ( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"	635:16:25037:25419	8077871	0	True				
ANR	8079720	OrExpression	"! pcs -> raster_state . graphics_mode || ( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"		8077871	0		||			
ANR	8079721	UnaryOperationExpression	! pcs -> raster_state . graphics_mode		8077871	0					
ANR	8079722	UnaryOperator	!		8077871	0					
ANR	8079723	MemberAccess	pcs -> raster_state . graphics_mode		8077871	1					
ANR	8079724	PtrMemberAccess	pcs -> raster_state		8077871	0					
ANR	8079725	Identifier	pcs		8077871	0					
ANR	8079726	Identifier	raster_state		8077871	1					
ANR	8079727	Identifier	graphics_mode		8077871	1					
ANR	8079728	OrExpression	"( cdefn -> actions & pca_raster_graphics ) || ( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"		8077871	1		||			
ANR	8079729	BitAndExpression	cdefn -> actions & pca_raster_graphics		8077871	0		&			
ANR	8079730	PtrMemberAccess	cdefn -> actions		8077871	0					
ANR	8079731	Identifier	cdefn		8077871	0					
ANR	8079732	Identifier	actions		8077871	1					
ANR	8079733	Identifier	pca_raster_graphics		8077871	1					
ANR	8079734	RelationalExpression	"( code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl ) ) >= 0"		8077871	1		>=			
ANR	8079735	AssignmentExpression	"code = pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl )"		8077871	0		=			
ANR	8079736	Identifier	code		8077871	0					
ANR	8079737	CallExpression	"pcl_end_graphics_mode_implicit ( pcs , cdefn -> actions & pca_dont_lockout_in_rtl )"		8077871	1					
ANR	8079738	Callee	pcl_end_graphics_mode_implicit		8077871	0					
ANR	8079739	Identifier	pcl_end_graphics_mode_implicit		8077871	0					
ANR	8079740	ArgumentList	pcs		8077871	1					
ANR	8079741	Argument	pcs		8077871	0					
ANR	8079742	Identifier	pcs		8077871	0					
ANR	8079743	Argument	cdefn -> actions & pca_dont_lockout_in_rtl		8077871	1					
ANR	8079744	BitAndExpression	cdefn -> actions & pca_dont_lockout_in_rtl		8077871	0		&			
ANR	8079745	PtrMemberAccess	cdefn -> actions		8077871	0					
ANR	8079746	Identifier	cdefn		8077871	0					
ANR	8079747	Identifier	actions		8077871	1					
ANR	8079748	Identifier	pca_dont_lockout_in_rtl		8077871	1					
ANR	8079749	PrimaryExpression	0		8077871	1					
ANR	8079750	CompoundStatement		367:22:16130:16130	8077871	1					
ANR	8079751	IfStatement	if ( ( pcs -> personality != rtl ) || ( ( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl ) ) )		8077871	0					
ANR	8079752	Condition	( pcs -> personality != rtl ) || ( ( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl ) )	642:20:25444:25637	8077871	0	True				
ANR	8079753	OrExpression	( pcs -> personality != rtl ) || ( ( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl ) )		8077871	0		||			
ANR	8079754	EqualityExpression	pcs -> personality != rtl		8077871	0		!=			
ANR	8079755	PtrMemberAccess	pcs -> personality		8077871	0					
ANR	8079756	Identifier	pcs		8077871	0					
ANR	8079757	Identifier	personality		8077871	1					
ANR	8079758	Identifier	rtl		8077871	1					
ANR	8079759	AndExpression	( pcs -> personality == rtl ) && ( cdefn -> actions & pca_in_rtl )		8077871	1		&&			
ANR	8079760	EqualityExpression	pcs -> personality == rtl		8077871	0		==			
ANR	8079761	PtrMemberAccess	pcs -> personality		8077871	0					
ANR	8079762	Identifier	pcs		8077871	0					
ANR	8079763	Identifier	personality		8077871	1					
ANR	8079764	Identifier	rtl		8077871	1					
ANR	8079765	BitAndExpression	cdefn -> actions & pca_in_rtl		8077871	1		&			
ANR	8079766	PtrMemberAccess	cdefn -> actions		8077871	0					
ANR	8079767	Identifier	cdefn		8077871	0					
ANR	8079768	Identifier	actions		8077871	1					
ANR	8079769	Identifier	pca_in_rtl		8077871	1					
ANR	8079770	ExpressionStatement	"code = ( * cdefn -> proc ) ( & pst -> args , pcs )"	645:20:25660:25699	8077871	1	True				
ANR	8079771	AssignmentExpression	"code = ( * cdefn -> proc ) ( & pst -> args , pcs )"		8077871	0		=			
ANR	8079772	Identifier	code		8077871	0					
ANR	8079773	CallExpression	"( * cdefn -> proc ) ( & pst -> args , pcs )"		8077871	1					
ANR	8079774	Callee	* cdefn -> proc		8077871	0					
ANR	8079775	UnaryOperationExpression	* cdefn -> proc		8077871	0					
ANR	8079776	UnaryOperator	*		8077871	0					
ANR	8079777	PtrMemberAccess	cdefn -> proc		8077871	1					
ANR	8079778	Identifier	cdefn		8077871	0					
ANR	8079779	Identifier	proc		8077871	1					
ANR	8079780	ArgumentList	& pst -> args		8077871	1					
ANR	8079781	Argument	& pst -> args		8077871	0					
ANR	8079782	UnaryOperationExpression	& pst -> args		8077871	0					
ANR	8079783	UnaryOperator	&		8077871	0					
ANR	8079784	PtrMemberAccess	pst -> args		8077871	1					
ANR	8079785	Identifier	pst		8077871	0					
ANR	8079786	Identifier	args		8077871	1					
ANR	8079787	Argument	pcs		8077871	1					
ANR	8079788	Identifier	pcs		8077871	0					
ANR	8079789	IfStatement	if ( pst -> args . data_on_heap && pst -> args . data )		8077871	3					
ANR	8079790	Condition	pst -> args . data_on_heap && pst -> args . data	652:16:25911:25950	8077871	0	True				
ANR	8079791	AndExpression	pst -> args . data_on_heap && pst -> args . data		8077871	0		&&			
ANR	8079792	MemberAccess	pst -> args . data_on_heap		8077871	0					
ANR	8079793	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079794	Identifier	pst		8077871	0					
ANR	8079795	Identifier	args		8077871	1					
ANR	8079796	Identifier	data_on_heap		8077871	1					
ANR	8079797	MemberAccess	pst -> args . data		8077871	1					
ANR	8079798	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079799	Identifier	pst		8077871	0					
ANR	8079800	Identifier	args		8077871	1					
ANR	8079801	Identifier	data		8077871	1					
ANR	8079802	CompoundStatement		378:58:16661:16661	8077871	1					
ANR	8079803	ExpressionStatement	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"	653:16:25971:26030	8077871	0	True				
ANR	8079804	CallExpression	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"		8077871	0					
ANR	8079805	Callee	gs_free_object		8077871	0					
ANR	8079806	Identifier	gs_free_object		8077871	0					
ANR	8079807	ArgumentList	pcs -> memory		8077871	1					
ANR	8079808	Argument	pcs -> memory		8077871	0					
ANR	8079809	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079810	Identifier	pcs		8077871	0					
ANR	8079811	Identifier	memory		8077871	1					
ANR	8079812	Argument	pst -> args . data		8077871	1					
ANR	8079813	MemberAccess	pst -> args . data		8077871	0					
ANR	8079814	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079815	Identifier	pst		8077871	0					
ANR	8079816	Identifier	args		8077871	1					
ANR	8079817	Identifier	data		8077871	1					
ANR	8079818	Argument	"""command data"""		8077871	2					
ANR	8079819	PrimaryExpression	"""command data"""		8077871	0					
ANR	8079820	ExpressionStatement	pst -> args . data = 0	654:16:26048:26066	8077871	1	True				
ANR	8079821	AssignmentExpression	pst -> args . data = 0		8077871	0		=			
ANR	8079822	MemberAccess	pst -> args . data		8077871	0					
ANR	8079823	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079824	Identifier	pst		8077871	0					
ANR	8079825	Identifier	args		8077871	1					
ANR	8079826	Identifier	data		8077871	1					
ANR	8079827	PrimaryExpression	0		8077871	1					
ANR	8079828	IfStatement	if ( code == e_Unimplemented )		8077871	4					
ANR	8079829	Condition	code == e_Unimplemented	656:16:26098:26120	8077871	0	True				
ANR	8079830	EqualityExpression	code == e_Unimplemented		8077871	0		==			
ANR	8079831	Identifier	code		8077871	0					
ANR	8079832	Identifier	e_Unimplemented		8077871	1					
ANR	8079833	CompoundStatement		382:41:16831:16831	8077871	1					
ANR	8079834	ExpressionStatement	"if_debug0m ( 'i' , pcs -> memory , ""Unimplemented\\n"" )"	658:16:26166:26213	8077871	0	True				
ANR	8079835	CallExpression	"if_debug0m ( 'i' , pcs -> memory , ""Unimplemented\\n"" )"		8077871	0					
ANR	8079836	Callee	if_debug0m		8077871	0					
ANR	8079837	Identifier	if_debug0m		8077871	0					
ANR	8079838	ArgumentList	'i'		8077871	1					
ANR	8079839	Argument	'i'		8077871	0					
ANR	8079840	PrimaryExpression	'i'		8077871	0					
ANR	8079841	Argument	pcs -> memory		8077871	1					
ANR	8079842	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079843	Identifier	pcs		8077871	0					
ANR	8079844	Identifier	memory		8077871	1					
ANR	8079845	Argument	"""Unimplemented\\n"""		8077871	2					
ANR	8079846	PrimaryExpression	"""Unimplemented\\n"""		8077871	0					
ANR	8079847	ElseStatement	else		8077871	0					
ANR	8079848	IfStatement	if ( code < 0 )		8077871	0					
ANR	8079849	Condition	code < 0	660:23:26245:26252	8077871	0	True				
ANR	8079850	RelationalExpression	code < 0		8077871	0		<			
ANR	8079851	Identifier	code		8077871	0					
ANR	8079852	PrimaryExpression	0		8077871	1					
ANR	8079853	BreakStatement	break ;	661:16:26271:26276	8077871	1	True				
ANR	8079854	IfStatement	if ( pcs -> display_functions )		8077871	5					
ANR	8079855	Condition	pcs -> display_functions	662:16:26294:26315	8077871	0	True				
ANR	8079856	PtrMemberAccess	pcs -> display_functions		8077871	0					
ANR	8079857	Identifier	pcs		8077871	0					
ANR	8079858	Identifier	display_functions		8077871	1					
ANR	8079859	CompoundStatement		388:40:17026:17026	8077871	1					
ANR	8079860	ExpressionStatement	pst -> scan_type = scanning_display	664:16:26398:26431	8077871	0	True				
ANR	8079861	AssignmentExpression	pst -> scan_type = scanning_display		8077871	0		=			
ANR	8079862	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8079863	Identifier	pst		8077871	0					
ANR	8079864	Identifier	scan_type		8077871	1					
ANR	8079865	Identifier	scanning_display		8077871	1					
ANR	8079866	IfStatement	if ( pcs -> defining_macro && ! in_macro )		8077871	6					
ANR	8079867	Condition	pcs -> defining_macro && ! in_macro	666:16:26463:26494	8077871	0	True				
ANR	8079868	AndExpression	pcs -> defining_macro && ! in_macro		8077871	0		&&			
ANR	8079869	PtrMemberAccess	pcs -> defining_macro		8077871	0					
ANR	8079870	Identifier	pcs		8077871	0					
ANR	8079871	Identifier	defining_macro		8077871	1					
ANR	8079872	UnaryOperationExpression	! in_macro		8077871	1					
ANR	8079873	UnaryOperator	!		8077871	0					
ANR	8079874	Identifier	in_macro		8077871	1					
ANR	8079875	CompoundStatement		392:50:17205:17205	8077871	1					
ANR	8079876	IfStatement	if ( pst -> scan_type != scanning_none )		8077871	0					
ANR	8079877	Condition	pst -> scan_type != scanning_none	668:20:26577:26607	8077871	0	True				
ANR	8079878	EqualityExpression	pst -> scan_type != scanning_none		8077871	0		!=			
ANR	8079879	PtrMemberAccess	pst -> scan_type		8077871	0					
ANR	8079880	Identifier	pst		8077871	0					
ANR	8079881	Identifier	scan_type		8077871	1					
ANR	8079882	Identifier	scanning_none		8077871	1					
ANR	8079883	CompoundStatement		397:27:17498:17536	8077871	1					
ANR	8079884	Statement	static	671:20:26783:26788	8077871	0	True				
ANR	8079885	IdentifierDeclStatement	"const byte macro_prefix [ 4 ] = "" \\033&f"" ;"	671:27:26790:26828	8077871	1	True				
ANR	8079886	IdentifierDecl	"macro_prefix [ 4 ] = "" \\033&f"""		8077871	0					
ANR	8079887	IdentifierDeclType	const byte [ 4 ]		8077871	0					
ANR	8079888	Identifier	macro_prefix		8077871	1					
ANR	8079889	PrimaryExpression	4		8077871	2					
ANR	8079890	AssignmentExpression	"macro_prefix [ 4 ] = "" \\033&f"""		8077871	3		=			
ANR	8079891	Identifier	macro_prefix		8077871	0					
ANR	8079892	PrimaryExpression	""" \\033&f"""		8077871	1					
ANR	8079893	ExpressionStatement	"code = append_macro ( & macro_prefix [ 0 ] , & macro_prefix [ 3 ] , pcs )"	673:20:26851:26911	8077871	2	True				
ANR	8079894	AssignmentExpression	"code = append_macro ( & macro_prefix [ 0 ] , & macro_prefix [ 3 ] , pcs )"		8077871	0		=			
ANR	8079895	Identifier	code		8077871	0					
ANR	8079896	CallExpression	"append_macro ( & macro_prefix [ 0 ] , & macro_prefix [ 3 ] , pcs )"		8077871	1					
ANR	8079897	Callee	append_macro		8077871	0					
ANR	8079898	Identifier	append_macro		8077871	0					
ANR	8079899	ArgumentList	& macro_prefix [ 0 ]		8077871	1					
ANR	8079900	Argument	& macro_prefix [ 0 ]		8077871	0					
ANR	8079901	UnaryOperationExpression	& macro_prefix [ 0 ]		8077871	0					
ANR	8079902	UnaryOperator	&		8077871	0					
ANR	8079903	ArrayIndexing	macro_prefix [ 0 ]		8077871	1					
ANR	8079904	Identifier	macro_prefix		8077871	0					
ANR	8079905	PrimaryExpression	0		8077871	1					
ANR	8079906	Argument	& macro_prefix [ 3 ]		8077871	1					
ANR	8079907	UnaryOperationExpression	& macro_prefix [ 3 ]		8077871	0					
ANR	8079908	UnaryOperator	&		8077871	0					
ANR	8079909	ArrayIndexing	macro_prefix [ 3 ]		8077871	1					
ANR	8079910	Identifier	macro_prefix		8077871	0					
ANR	8079911	PrimaryExpression	3		8077871	1					
ANR	8079912	Argument	pcs		8077871	2					
ANR	8079913	Identifier	pcs		8077871	0					
ANR	8079914	IfStatement	if ( code < 0 )		8077871	3					
ANR	8079915	Condition	code < 0	674:24:26937:26944	8077871	0	True				
ANR	8079916	RelationalExpression	code < 0		8077871	0		<			
ANR	8079917	Identifier	code		8077871	0					
ANR	8079918	PrimaryExpression	0		8077871	1					
ANR	8079919	GotoStatement	goto x ;	675:24:26971:26977	8077871	1	True				
ANR	8079920	Identifier	x		8077871	0					
ANR	8079921	ExpressionStatement	macro_p = p	677:16:27013:27024	8077871	1	True				
ANR	8079922	AssignmentExpression	macro_p = p		8077871	0		=			
ANR	8079923	Identifier	macro_p		8077871	0					
ANR	8079924	Identifier	p		8077871	1					
ANR	8079925	ExpressionStatement	in_macro = pcs -> defining_macro	679:12:27052:27082	8077871	7	True				
ANR	8079926	AssignmentExpression	in_macro = pcs -> defining_macro		8077871	0		=			
ANR	8079927	Identifier	in_macro		8077871	0					
ANR	8079928	PtrMemberAccess	pcs -> defining_macro		8077871	1					
ANR	8079929	Identifier	pcs		8077871	0					
ANR	8079930	Identifier	defining_macro		8077871	1					
ANR	8079931	ElseStatement	else		8077871	0					
ANR	8079932	CompoundStatement		406:15:17807:17807	8077871	0					
ANR	8079933	IfStatement	if ( pst -> args . data_on_heap && pst -> args . data )		8077871	0					
ANR	8079934	Condition	pst -> args . data_on_heap && pst -> args . data	685:16:27234:27273	8077871	0	True				
ANR	8079935	AndExpression	pst -> args . data_on_heap && pst -> args . data		8077871	0		&&			
ANR	8079936	MemberAccess	pst -> args . data_on_heap		8077871	0					
ANR	8079937	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079938	Identifier	pst		8077871	0					
ANR	8079939	Identifier	args		8077871	1					
ANR	8079940	Identifier	data_on_heap		8077871	1					
ANR	8079941	MemberAccess	pst -> args . data		8077871	1					
ANR	8079942	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079943	Identifier	pst		8077871	0					
ANR	8079944	Identifier	args		8077871	1					
ANR	8079945	Identifier	data		8077871	1					
ANR	8079946	CompoundStatement		411:58:17984:17984	8077871	1					
ANR	8079947	ExpressionStatement	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"	686:16:27294:27353	8077871	0	True				
ANR	8079948	CallExpression	"gs_free_object ( pcs -> memory , pst -> args . data , ""command data"" )"		8077871	0					
ANR	8079949	Callee	gs_free_object		8077871	0					
ANR	8079950	Identifier	gs_free_object		8077871	0					
ANR	8079951	ArgumentList	pcs -> memory		8077871	1					
ANR	8079952	Argument	pcs -> memory		8077871	0					
ANR	8079953	PtrMemberAccess	pcs -> memory		8077871	0					
ANR	8079954	Identifier	pcs		8077871	0					
ANR	8079955	Identifier	memory		8077871	1					
ANR	8079956	Argument	pst -> args . data		8077871	1					
ANR	8079957	MemberAccess	pst -> args . data		8077871	0					
ANR	8079958	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079959	Identifier	pst		8077871	0					
ANR	8079960	Identifier	args		8077871	1					
ANR	8079961	Identifier	data		8077871	1					
ANR	8079962	Argument	"""command data"""		8077871	2					
ANR	8079963	PrimaryExpression	"""command data"""		8077871	0					
ANR	8079964	ExpressionStatement	pst -> args . data = 0	687:16:27371:27389	8077871	1	True				
ANR	8079965	AssignmentExpression	pst -> args . data = 0		8077871	0		=			
ANR	8079966	MemberAccess	pst -> args . data		8077871	0					
ANR	8079967	PtrMemberAccess	pst -> args		8077871	0					
ANR	8079968	Identifier	pst		8077871	0					
ANR	8079969	Identifier	args		8077871	1					
ANR	8079970	Identifier	data		8077871	1					
ANR	8079971	PrimaryExpression	0		8077871	1					
ANR	8079972	ExpressionStatement	param_init ( )	690:8:27423:27435	8077871	5	True				
ANR	8079973	CallExpression	param_init ( )		8077871	0					
ANR	8079974	Callee	param_init		8077871	0					
ANR	8079975	Identifier	param_init		8077871	0					
ANR	8079976	ArgumentList			8077871	1					
ANR	8079977	Label	x :	692:2:27445:27446	8077871	36	True				
ANR	8079978	Identifier	x		8077871	0					
ANR	8079979	ExpressionStatement	pr -> ptr = p	692:4:27447:27458	8077871	37	True				
ANR	8079980	AssignmentExpression	pr -> ptr = p		8077871	0		=			
ANR	8079981	PtrMemberAccess	pr -> ptr		8077871	0					
ANR	8079982	Identifier	pr		8077871	0					
ANR	8079983	Identifier	ptr		8077871	1					
ANR	8079984	Identifier	p		8077871	1					
ANR	8079985	IfStatement	if ( in_macro )		8077871	38					
ANR	8079986	Condition	in_macro	694:8:27533:27540	8077871	0	True				
ANR	8079987	Identifier	in_macro		8077871	0					
ANR	8079988	CompoundStatement		421:8:18261:18302	8077871	1					
ANR	8079989	IdentifierDeclStatement	"int mcode = append_macro ( macro_p , p , pcs ) ;"	695:8:27553:27594	8077871	0	True				
ANR	8079990	IdentifierDecl	"mcode = append_macro ( macro_p , p , pcs )"		8077871	0					
ANR	8079991	IdentifierDeclType	int		8077871	0					
ANR	8079992	Identifier	mcode		8077871	1					
ANR	8079993	AssignmentExpression	"mcode = append_macro ( macro_p , p , pcs )"		8077871	2		=			
ANR	8079994	Identifier	mcode		8077871	0					
ANR	8079995	CallExpression	"append_macro ( macro_p , p , pcs )"		8077871	1					
ANR	8079996	Callee	append_macro		8077871	0					
ANR	8079997	Identifier	append_macro		8077871	0					
ANR	8079998	ArgumentList	macro_p		8077871	1					
ANR	8079999	Argument	macro_p		8077871	0					
ANR	8080000	Identifier	macro_p		8077871	0					
ANR	8080001	Argument	p		8077871	1					
ANR	8080002	Identifier	p		8077871	0					
ANR	8080003	Argument	pcs		8077871	2					
ANR	8080004	Identifier	pcs		8077871	0					
ANR	8080005	IfStatement	if ( mcode < 0 && code >= 0 )		8077871	1					
ANR	8080006	Condition	mcode < 0 && code >= 0	697:12:27609:27630	8077871	0	True				
ANR	8080007	AndExpression	mcode < 0 && code >= 0		8077871	0		&&			
ANR	8080008	RelationalExpression	mcode < 0		8077871	0		<			
ANR	8080009	Identifier	mcode		8077871	0					
ANR	8080010	PrimaryExpression	0		8077871	1					
ANR	8080011	RelationalExpression	code >= 0		8077871	1		>=			
ANR	8080012	Identifier	code		8077871	0					
ANR	8080013	PrimaryExpression	0		8077871	1					
ANR	8080014	ExpressionStatement	code = mcode	698:12:27645:27657	8077871	1	True				
ANR	8080015	AssignmentExpression	code = mcode		8077871	0		=			
ANR	8080016	Identifier	code		8077871	0					
ANR	8080017	Identifier	mcode		8077871	1					
ANR	8080018	ReturnStatement	return code ;	700:4:27669:27680	8077871	39	True				
ANR	8080019	Identifier	code		8077871	0					
ANR	8080020	ReturnType	int		8077871	1					
ANR	8080021	Identifier	pcl_process		8077871	2					
ANR	8080022	ParameterList	"pcl_parser_state_t * pst , pcl_state_t * pcs , stream_cursor_read * pr"		8077871	3					
ANR	8080023	Parameter	pcl_parser_state_t * pst	273:12:9209:9232	8077871	0	True				
ANR	8080024	ParameterType	pcl_parser_state_t *		8077871	0					
ANR	8080025	Identifier	pst		8077871	1					
ANR	8080026	Parameter	pcl_state_t * pcs	273:38:9235:9251	8077871	1	True				
ANR	8080027	ParameterType	pcl_state_t *		8077871	0					
ANR	8080028	Identifier	pcs		8077871	1					
ANR	8080029	Parameter	stream_cursor_read * pr	274:12:9266:9288	8077871	2	True				
ANR	8080030	ParameterType	stream_cursor_read *		8077871	0					
ANR	8080031	Identifier	pr		8077871	1					
ANR	8080032	CFGEntryNode	ENTRY		8077871		True				
ANR	8080033	CFGExitNode	EXIT		8077871		True				
ANR	8080034	InfiniteForNode	true		8077871		True				
ANR	8080035	Symbol	e_Unimplemented		8077871						
ANR	8080036	Symbol	pr		8077871						
ANR	8080037	Symbol	pst -> args . data_on_heap		8077871						
ANR	8080038	Symbol	* index		8077871						
ANR	8080039	Symbol	pst -> garbage_in_parameter		8077871						
ANR	8080040	Symbol	value_is_present		8077871						
ANR	8080041	Symbol	pcv_float		8077871						
ANR	8080042	Symbol	scanning_display		8077871						
ANR	8080043	Symbol	* * pst -> definitions -> pcl_command_list		8077871						
ANR	8080044	Symbol	pcs -> memory		8077871						
ANR	8080045	Symbol	pst -> args . command		8077871						
ANR	8080046	Symbol	append_macro		8077871						
ANR	8080047	Symbol	pca_dont_lockout_in_rtl		8077871						
ANR	8080048	Symbol	rlimit		8077871						
ANR	8080049	Symbol	bytelen		8077871						
ANR	8080050	Symbol	max_escape_class		8077871						
ANR	8080051	Symbol	pst -> definitions -> pcl_command_list [ index ] -> proc		8077871						
ANR	8080052	Symbol	pca_in_rtl		8077871						
ANR	8080053	Symbol	max_escape_2char		8077871						
ANR	8080054	Symbol	* * pst -> definitions -> pcl_control_command_indices		8077871						
ANR	8080055	Symbol	index		8077871						
ANR	8080056	Symbol	* ( p + 1 )		8077871						
ANR	8080057	Symbol	* * * * pst		8077871						
ANR	8080058	Symbol	cdefn -> cname		8077871						
ANR	8080059	Symbol	avalue . fraction		8077871						
ANR	8080060	Symbol	str		8077871						
ANR	8080061	Symbol	pcl_get_command_definition		8077871						
ANR	8080062	Symbol	pst -> scale		8077871						
ANR	8080063	Symbol	pcl_end_graphics_mode_implicit		8077871						
ANR	8080064	Symbol	do_display_functions		8077871						
ANR	8080065	Symbol	pcl_do_LF		8077871						
ANR	8080066	Symbol	pst -> definitions -> pcl_control_command_indices		8077871						
ANR	8080067	Symbol	pcv_none		8077871						
ANR	8080068	Symbol	value_is_neg		8077871						
ANR	8080069	Symbol	pcl_char_bytelen		8077871						
ANR	8080070	Symbol	cdefn		8077871						
ANR	8080071	Symbol	* * * pst		8077871						
ANR	8080072	Symbol	min_escape_class		8077871						
ANR	8080073	Symbol	min		8077871						
ANR	8080074	Symbol	ESC		8077871						
ANR	8080075	Symbol	pos		8077871						
ANR	8080076	Symbol	e_Memory		8077871						
ANR	8080077	Symbol	copy		8077871						
ANR	8080078	Symbol	* * p		8077871						
ANR	8080079	Symbol	& args		8077871						
ANR	8080080	Symbol	avail		8077871						
ANR	8080081	Symbol	pcv_neg		8077871						
ANR	8080082	Symbol	cdefn -> actions		8077871						
ANR	8080083	Symbol	* ++ p		8077871						
ANR	8080084	Symbol	* ( p + 2 )		8077871						
ANR	8080085	Symbol	cdefn -> proc		8077871						
ANR	8080086	Symbol	pcs -> parse_data		8077871						
ANR	8080087	Symbol	rtl		8077871						
ANR	8080088	Symbol	uint_arg		8077871						
ANR	8080089	Symbol	max_escape_group		8077871						
ANR	8080090	Symbol	CR		8077871						
ANR	8080091	Symbol	p		8077871						
ANR	8080092	Symbol	scanning_parameter		8077871						
ANR	8080093	Symbol	* cdefn		8077871						
ANR	8080094	Symbol	pca_in_macro		8077871						
ANR	8080095	Symbol	* pst -> definitions		8077871						
ANR	8080096	Symbol	pca_raster_graphics		8077871						
ANR	8080097	Symbol	value_is_float		8077871						
ANR	8080098	Symbol	value_is_signed		8077871						
ANR	8080099	Symbol	pcl_disable_display_functions		8077871						
ANR	8080100	Symbol	* * chr		8077871						
ANR	8080101	Symbol	avalue		8077871						
ANR	8080102	Symbol	min_escape_2char		8077871						
ANR	8080103	Symbol	macro_p		8077871						
ANR	8080104	Symbol	* pcs		8077871						
ANR	8080105	Symbol	pr -> limit		8077871						
ANR	8080106	Symbol	pst -> param_class		8077871						
ANR	8080107	Symbol	& avalue		8077871						
ANR	8080108	Symbol	min_escape_group		8077871						
ANR	8080109	Symbol	pcs -> defining_macro		8077871						
ANR	8080110	Symbol	* pcs -> parse_other		8077871						
ANR	8080111	Symbol	avalue . i		8077871						
ANR	8080112	Symbol	pst -> data_pos		8077871						
ANR	8080113	Symbol	pcl_adjust_arg		8077871						
ANR	8080114	Symbol	gs_debug_c		8077871						
ANR	8080115	Symbol	pcl_text		8077871						
ANR	8080116	Symbol	pr -> ptr		8077871						
ANR	8080117	Symbol	max_escape_command		8077871						
ANR	8080118	Symbol	pcs -> raster_state . graphics_mode		8077871						
ANR	8080119	Symbol	in_macro		8077871						
ANR	8080120	Symbol	pcs -> personality		8077871						
ANR	8080121	Symbol	scanning_none		8077871						
ANR	8080122	Symbol	NULL		8077871						
ANR	8080123	Symbol	* * pst		8077871						
ANR	8080124	Symbol	count		8077871						
ANR	8080125	Symbol	* pr		8077871						
ANR	8080126	Symbol	* cdefn -> proc		8077871						
ANR	8080127	Symbol	chr		8077871						
ANR	8080128	Symbol	pcv_pos		8077871						
ANR	8080129	Symbol	& pst -> args		8077871						
ANR	8080130	Symbol	pcl_plain_char		8077871						
ANR	8080131	Symbol	* * pcs		8077871						
ANR	8080132	Symbol	* * pst -> definitions		8077871						
ANR	8080133	Symbol	macro_prefix		8077871						
ANR	8080134	Symbol	true		8077871						
ANR	8080135	Symbol	pcs -> display_functions		8077871						
ANR	8080136	Symbol	pst -> definitions -> pcl_escape_command_indices		8077871						
ANR	8080137	Symbol	* pst -> definitions -> pcl_command_list		8077871						
ANR	8080138	Symbol	* pst		8077871						
ANR	8080139	Symbol	pst -> scan_type		8077871						
ANR	8080140	Symbol	pcs -> text_parsing_method		8077871						
ANR	8080141	Symbol	code		8077871						
ANR	8080142	Symbol	* pst -> definitions -> pcl_control_command_indices		8077871						
ANR	8080143	Symbol	pcv_int		8077871						
ANR	8080144	Symbol	pst -> param_group		8077871						
ANR	8080145	Symbol	pst		8077871						
ANR	8080146	Symbol	avalue . type		8077871						
ANR	8080147	Symbol	scanning_data		8077871						
ANR	8080148	Symbol	* * index		8077871						
ANR	8080149	Symbol	pcs		8077871						
ANR	8080150	Symbol	pst -> short_hand		8077871						
ANR	8080151	Symbol	gs_alloc_bytes		8077871						
ANR	8080152	Symbol	* * cdefn		8077871						
ANR	8080153	Symbol	rtl_enter_hpgl_mode		8077871						
ANR	8080154	Symbol	pst -> args . data		8077871						
ANR	8080155	Symbol	false		8077871						
ANR	8080156	Symbol	* chr		8077871						
ANR	8080157	Symbol	min_escape_command		8077871						
ANR	8080158	Symbol	* * * pst -> definitions		8077871						
ANR	8080159	Symbol	pcs -> raster_state		8077871						
ANR	8080160	Symbol	args		8077871						
ANR	8080161	Symbol	pst -> definitions		8077871						
ANR	8080162	Symbol	* min_escape_2char		8077871						
ANR	8080163	Symbol	gs_note_error		8077871						
ANR	8080164	Symbol	pst -> args		8077871						
ANR	8080165	Symbol	mcode		8077871						
ANR	8080166	Symbol	pca_byte_data		8077871						
ANR	8080167	Symbol	pst -> definitions -> pcl_command_list		8077871						
ANR	8080168	Symbol	* p		8077871						
ANR	8080169	Symbol	* pst -> definitions -> pcl_escape_command_indices		8077871						
ANR	8080170	Symbol	pcs -> parse_other		8077871						
ANR	8080171	Function	pcl_init_command_index	704:0:27724:28769							
ANR	8080172	FunctionDef	"pcl_init_command_index (pcl_parser_state_t * pcl_parser_state , pcl_state_t * pcs)"		8080171	0					
ANR	8080173	CompoundStatement		707:0:27832:28769	8080171	0					
ANR	8080174	IdentifierDeclStatement	"pcl_command_definitions_t * definitions = ( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" ) ;"	708:4:27838:28165	8080171	0	True				
ANR	8080175	IdentifierDecl	"* definitions = ( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8080171	0					
ANR	8080176	IdentifierDeclType	pcl_command_definitions_t *		8080171	0					
ANR	8080177	Identifier	definitions		8080171	1					
ANR	8080178	AssignmentExpression	"* definitions = ( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8080171	2		=			
ANR	8080179	Identifier	definitions		8080171	0					
ANR	8080180	CastExpression	"( pcl_command_definitions_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8080171	1					
ANR	8080181	CastTarget	pcl_command_definitions_t *		8080171	0					
ANR	8080182	CallExpression	"gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_command_definitions_t ) , ""pcl_init_command_index"" )"		8080171	1					
ANR	8080183	Callee	gs_alloc_bytes		8080171	0					
ANR	8080184	Identifier	gs_alloc_bytes		8080171	0					
ANR	8080185	ArgumentList	pcs -> memory		8080171	1					
ANR	8080186	Argument	pcs -> memory		8080171	0					
ANR	8080187	PtrMemberAccess	pcs -> memory		8080171	0					
ANR	8080188	Identifier	pcs		8080171	0					
ANR	8080189	Identifier	memory		8080171	1					
ANR	8080190	Argument	sizeof ( pcl_command_definitions_t )		8080171	1					
ANR	8080191	SizeofExpression	sizeof ( pcl_command_definitions_t )		8080171	0					
ANR	8080192	Sizeof	sizeof		8080171	0					
ANR	8080193	SizeofOperand	pcl_command_definitions_t		8080171	1					
ANR	8080194	Argument	"""pcl_init_command_index"""		8080171	2					
ANR	8080195	PrimaryExpression	"""pcl_init_command_index"""		8080171	0					
ANR	8080196	IfStatement	if ( definitions == 0 )		8080171	1					
ANR	8080197	Condition	definitions == 0	715:8:28192:28207	8080171	0	True				
ANR	8080198	EqualityExpression	definitions == 0		8080171	0		==			
ANR	8080199	Identifier	definitions		8080171	0					
ANR	8080200	PrimaryExpression	0		8080171	1					
ANR	8080201	ReturnStatement	return - 1 ;	716:8:28218:28227	8080171	1	True				
ANR	8080202	UnaryOperationExpression	- 1		8080171	0					
ANR	8080203	UnaryOperator	-		8080171	0					
ANR	8080204	PrimaryExpression	1		8080171	1					
ANR	8080205	ExpressionStatement	"memset ( definitions , 0 , sizeof ( pcl_command_definitions_t ) )"	719:4:28330:28387	8080171	2	True				
ANR	8080206	CallExpression	"memset ( definitions , 0 , sizeof ( pcl_command_definitions_t ) )"		8080171	0					
ANR	8080207	Callee	memset		8080171	0					
ANR	8080208	Identifier	memset		8080171	0					
ANR	8080209	ArgumentList	definitions		8080171	1					
ANR	8080210	Argument	definitions		8080171	0					
ANR	8080211	Identifier	definitions		8080171	0					
ANR	8080212	Argument	0		8080171	1					
ANR	8080213	PrimaryExpression	0		8080171	0					
ANR	8080214	Argument	sizeof ( pcl_command_definitions_t )		8080171	2					
ANR	8080215	SizeofExpression	sizeof ( pcl_command_definitions_t )		8080171	0					
ANR	8080216	Sizeof	sizeof		8080171	0					
ANR	8080217	SizeofOperand	pcl_command_definitions_t		8080171	1					
ANR	8080218	ExpressionStatement	pcs -> pcl_commands = pcl_parser_state -> definitions = definitions	725:4:28690:28753	8080171	3	True				
ANR	8080219	AssignmentExpression	pcs -> pcl_commands = pcl_parser_state -> definitions = definitions		8080171	0		=			
ANR	8080220	PtrMemberAccess	pcs -> pcl_commands		8080171	0					
ANR	8080221	Identifier	pcs		8080171	0					
ANR	8080222	Identifier	pcl_commands		8080171	1					
ANR	8080223	AssignmentExpression	pcl_parser_state -> definitions = definitions		8080171	1		=			
ANR	8080224	PtrMemberAccess	pcl_parser_state -> definitions		8080171	0					
ANR	8080225	Identifier	pcl_parser_state		8080171	0					
ANR	8080226	Identifier	definitions		8080171	1					
ANR	8080227	Identifier	definitions		8080171	1					
ANR	8080228	ReturnStatement	return 0 ;	726:4:28759:28767	8080171	4	True				
ANR	8080229	PrimaryExpression	0		8080171	0					
ANR	8080230	ReturnType	int		8080171	1					
ANR	8080231	Identifier	pcl_init_command_index		8080171	2					
ANR	8080232	ParameterList	"pcl_parser_state_t * pcl_parser_state , pcl_state_t * pcs"		8080171	3					
ANR	8080233	Parameter	pcl_parser_state_t * pcl_parser_state	705:23:27751:27787	8080171	0	True				
ANR	8080234	ParameterType	pcl_parser_state_t *		8080171	0					
ANR	8080235	Identifier	pcl_parser_state		8080171	1					
ANR	8080236	Parameter	pcl_state_t * pcs	706:23:27813:27829	8080171	1	True				
ANR	8080237	ParameterType	pcl_state_t *		8080171	0					
ANR	8080238	Identifier	pcs		8080171	1					
ANR	8080239	CFGEntryNode	ENTRY		8080171		True				
ANR	8080240	CFGExitNode	EXIT		8080171		True				
ANR	8080241	Symbol	* pcl_parser_state		8080171						
ANR	8080242	Symbol	pcs		8080171						
ANR	8080243	Symbol	gs_alloc_bytes		8080171						
ANR	8080244	Symbol	pcs -> pcl_commands		8080171						
ANR	8080245	Symbol	pcl_parser_state		8080171						
ANR	8080246	Symbol	pcs -> memory		8080171						
ANR	8080247	Symbol	* pcs		8080171						
ANR	8080248	Symbol	definitions		8080171						
ANR	8080249	Symbol	pcl_parser_state -> definitions		8080171						
ANR	8080250	Function	pcl_parser_shutdown	730:0:28849:29026							
ANR	8080251	FunctionDef	"pcl_parser_shutdown (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8080250	0					
ANR	8080252	CompoundStatement		732:0:28931:29026	8080250	0					
ANR	8080253	ExpressionStatement	"gs_free_object ( mem , pcl_parser_state -> definitions , ""pcl_parser_shutdown"" )"	733:4:28937:29010	8080250	0	True				
ANR	8080254	CallExpression	"gs_free_object ( mem , pcl_parser_state -> definitions , ""pcl_parser_shutdown"" )"		8080250	0					
ANR	8080255	Callee	gs_free_object		8080250	0					
ANR	8080256	Identifier	gs_free_object		8080250	0					
ANR	8080257	ArgumentList	mem		8080250	1					
ANR	8080258	Argument	mem		8080250	0					
ANR	8080259	Identifier	mem		8080250	0					
ANR	8080260	Argument	pcl_parser_state -> definitions		8080250	1					
ANR	8080261	PtrMemberAccess	pcl_parser_state -> definitions		8080250	0					
ANR	8080262	Identifier	pcl_parser_state		8080250	0					
ANR	8080263	Identifier	definitions		8080250	1					
ANR	8080264	Argument	"""pcl_parser_shutdown"""		8080250	2					
ANR	8080265	PrimaryExpression	"""pcl_parser_shutdown"""		8080250	0					
ANR	8080266	ReturnStatement	return 0 ;	734:4:29016:29024	8080250	1	True				
ANR	8080267	PrimaryExpression	0		8080250	0					
ANR	8080268	ReturnType	int		8080250	1					
ANR	8080269	Identifier	pcl_parser_shutdown		8080250	2					
ANR	8080270	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8080250	3					
ANR	8080271	Parameter	pcl_parser_state_t * pcl_parser_state	731:20:28873:28909	8080250	0	True				
ANR	8080272	ParameterType	pcl_parser_state_t *		8080250	0					
ANR	8080273	Identifier	pcl_parser_state		8080250	1					
ANR	8080274	Parameter	gs_memory_t * mem	731:59:28912:28928	8080250	1	True				
ANR	8080275	ParameterType	gs_memory_t *		8080250	0					
ANR	8080276	Identifier	mem		8080250	1					
ANR	8080277	CFGEntryNode	ENTRY		8080250		True				
ANR	8080278	CFGExitNode	EXIT		8080250		True				
ANR	8080279	Symbol	* pcl_parser_state		8080250						
ANR	8080280	Symbol	mem		8080250						
ANR	8080281	Symbol	pcl_parser_state		8080250						
ANR	8080282	Symbol	pcl_parser_state -> definitions		8080250						
ANR	8080283	Function	pcparse_do_reset	738:0:29084:29250							
ANR	8080284	FunctionDef	"pcparse_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8080283	0					
ANR	8080285	CompoundStatement		740:0:29147:29250	8080283	0					
ANR	8080286	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer ) )		8080283	0					
ANR	8080287	Condition	type & ( pcl_reset_initial | pcl_reset_printer )	741:8:29157:29202	8080283	0	True				
ANR	8080288	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer )		8080283	0		&			
ANR	8080289	Identifier	type		8080283	0					
ANR	8080290	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer		8080283	1		|			
ANR	8080291	Identifier	pcl_reset_initial		8080283	0					
ANR	8080292	Identifier	pcl_reset_printer		8080283	1					
ANR	8080293	ExpressionStatement	pcs -> parse_other = 0	742:8:29213:29233	8080283	1	True				
ANR	8080294	AssignmentExpression	pcs -> parse_other = 0		8080283	0		=			
ANR	8080295	PtrMemberAccess	pcs -> parse_other		8080283	0					
ANR	8080296	Identifier	pcs		8080283	0					
ANR	8080297	Identifier	parse_other		8080283	1					
ANR	8080298	PrimaryExpression	0		8080283	1					
ANR	8080299	ReturnStatement	return 0 ;	744:4:29240:29248	8080283	1	True				
ANR	8080300	PrimaryExpression	0		8080283	0					
ANR	8080301	ReturnType	int		8080283	1					
ANR	8080302	Identifier	pcparse_do_reset		8080283	2					
ANR	8080303	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8080283	3					
ANR	8080304	Parameter	pcl_state_t * pcs	739:17:29105:29121	8080283	0	True				
ANR	8080305	ParameterType	pcl_state_t *		8080283	0					
ANR	8080306	Identifier	pcs		8080283	1					
ANR	8080307	Parameter	pcl_reset_type_t type	739:36:29124:29144	8080283	1	True				
ANR	8080308	ParameterType	pcl_reset_type_t		8080283	0					
ANR	8080309	Identifier	type		8080283	1					
ANR	8080310	CFGEntryNode	ENTRY		8080283		True				
ANR	8080311	CFGExitNode	EXIT		8080283		True				
ANR	8080312	Symbol	pcs		8080283						
ANR	8080313	Symbol	pcl_reset_printer		8080283						
ANR	8080314	Symbol	* pcs		8080283						
ANR	8080315	Symbol	type		8080283						
ANR	8080316	Symbol	pcl_reset_initial		8080283						
ANR	8080317	Symbol	pcs -> parse_other		8080283						
ANR	8080318	DeclStmt									
ANR	8080319	Decl							const pcl_init_t	const pcl_init_t	pcparse_init
